; ModuleID = '../bcout/drivers/mmc/core/sd.llvm.bc'
source_filename = "drivers/mmc/core/sd.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64"

%struct.attribute_group = type { i8*, i16 (%struct.kobject*, %struct.attribute*, i32)*, i16 (%struct.kobject*, %struct.bin_attribute*, i32)*, %struct.attribute**, %struct.bin_attribute** }
%struct.kobject = type { i8*, %struct.list_head, %struct.kobject*, %struct.kset*, %struct.kobj_type*, %struct.kernfs_node*, %struct.kref, i8 }
%struct.list_head = type { %struct.list_head*, %struct.list_head* }
%struct.kset = type { %struct.list_head, %struct.spinlock, %struct.kobject, %struct.kset_uevent_ops* }
%struct.spinlock = type { %union.anon }
%union.anon = type { %struct.raw_spinlock }
%struct.raw_spinlock = type { %struct.arch_spinlock_t }
%struct.arch_spinlock_t = type {}
%struct.kset_uevent_ops = type { i32 (%struct.kset*, %struct.kobject*)*, i8* (%struct.kset*, %struct.kobject*)*, i32 (%struct.kset*, %struct.kobject*, %struct.kobj_uevent_env*)* }
%struct.kobj_uevent_env = type { [3 x i8*], [64 x i8*], i32, [2048 x i8], i32 }
%struct.kobj_type = type { void (%struct.kobject*)*, %struct.sysfs_ops*, %struct.attribute**, %struct.attribute_group**, %struct.kobj_ns_type_operations* (%struct.kobject*)*, i8* (%struct.kobject*)*, void (%struct.kobject*, %struct.kuid_t*, %struct.kgid_t*)* }
%struct.sysfs_ops = type { i64 (%struct.kobject*, %struct.attribute*, i8*)*, i64 (%struct.kobject*, %struct.attribute*, i8*, i64)* }
%struct.kobj_ns_type_operations = type { i32, i1 ()*, i8* ()*, i8* (%struct.sock*)*, i8* ()*, void (i8*)* }
%struct.sock = type opaque
%struct.kuid_t = type { i32 }
%struct.kgid_t = type { i32 }
%struct.kernfs_node = type { %struct.atomic_t, %struct.atomic_t, %struct.kernfs_node*, i8*, %struct.rb_node, i8*, i32, %union.anon.37, i8*, i64, i16, i16, %struct.kernfs_iattrs* }
%struct.atomic_t = type { i32 }
%struct.rb_node = type { i64, %struct.rb_node*, %struct.rb_node* }
%union.anon.37 = type { %struct.kernfs_elem_attr }
%struct.kernfs_elem_attr = type { %struct.kernfs_ops*, %struct.kernfs_open_node*, i64, %struct.kernfs_node* }
%struct.kernfs_ops = type { i32 (%struct.kernfs_open_file*)*, void (%struct.kernfs_open_file*)*, i32 (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i64*)*, i8* (%struct.seq_file*, i8*, i64*)*, void (%struct.seq_file*, i8*)*, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i64, i8, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i32 (%struct.kernfs_open_file*, %struct.poll_table_struct*)*, i32 (%struct.kernfs_open_file*, %struct.vm_area_struct*)* }
%struct.kernfs_open_file = type { %struct.kernfs_node*, %struct.file*, %struct.seq_file*, i8*, %struct.mutex, %struct.mutex, i32, %struct.list_head, i8*, i64, i8, %struct.vm_operations_struct* }
%struct.file = type opaque
%struct.seq_file = type opaque
%struct.mutex = type { %struct.atomic64_t, %struct.spinlock, %struct.list_head }
%struct.atomic64_t = type { i64 }
%struct.vm_operations_struct = type opaque
%struct.poll_table_struct = type opaque
%struct.vm_area_struct = type { i64, i64, %struct.vm_area_struct*, %struct.vm_area_struct*, %struct.rb_node, i64, %struct.mm_struct*, %struct.pgprot, i64, %struct.anon.36, %struct.list_head, %struct.anon_vma*, %struct.vm_operations_struct*, i64, %struct.file*, i8*, %struct.atomic64_t, %struct.vm_userfaultfd_ctx }
%struct.mm_struct = type { %struct.anon, [0 x i64] }
%struct.anon = type { %struct.vm_area_struct*, %struct.rb_root, i64, i64 (%struct.file*, i64, i64, i64, i64)*, i64, i64, i64, i64, %struct.pgd_t*, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i32, %struct.spinlock, %struct.rw_semaphore, %struct.list_head, i64, i64, i64, i64, %struct.atomic64_t, i64, i64, i64, i64, %struct.spinlock, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [44 x i64], %struct.mm_rss_stat, %struct.linux_binfmt*, %struct.mm_context_t, i64, %struct.core_state*, %struct.spinlock, %struct.kioctx_table*, %struct.user_namespace*, %struct.file*, %struct.mmu_notifier_subscriptions*, %struct.atomic_t, i8, %struct.uprobes_state, %struct.work_struct, i32 }
%struct.rb_root = type { %struct.rb_node* }
%struct.pgd_t = type { i64 }
%struct.rw_semaphore = type { %struct.atomic64_t, %struct.atomic64_t, %struct.raw_spinlock, %struct.list_head }
%struct.mm_rss_stat = type { [4 x %struct.atomic64_t] }
%struct.linux_binfmt = type opaque
%struct.mm_context_t = type { i64, %struct.atomic64_t, %struct.rw_semaphore, %struct.ldt_struct*, i16, %struct.mutex, i8*, %struct.vdso_image*, %struct.atomic_t, i16, i16 }
%struct.ldt_struct = type opaque
%struct.vdso_image = type opaque
%struct.core_state = type { %struct.atomic_t, %struct.core_thread, %struct.completion }
%struct.core_thread = type { %struct.task_struct*, %struct.core_thread* }
%struct.task_struct = type { %struct.thread_info, i64, i8*, %struct.refcount_struct, i32, i32, i32, i32, i32, i32, i32, %struct.sched_class*, %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, i32, i32, %struct.cpumask*, %struct.cpumask, %struct.sched_info, %struct.list_head, %struct.mm_struct*, %struct.mm_struct*, %struct.vmacache, i32, i32, i32, i32, i64, i32, i8, [3 x i8], i8, i64, %struct.restart_block, i32, i32, i64, %struct.task_struct*, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.pid*, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, %struct.completion*, i32*, i32*, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, %struct.posix_cputimers, %struct.posix_cputimers_work, %struct.cred*, %struct.cred*, %struct.cred*, %struct.key*, [16 x i8], %struct.nameidata*, %struct.fs_struct*, %struct.files_struct*, %struct.io_uring_task*, %struct.nsproxy*, %struct.signal_struct*, %struct.sighand_struct*, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i64, i64, i32, %struct.callback_head*, %struct.seccomp, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, %struct.task_struct*, %struct.rt_mutex_waiter*, i8*, %struct.bio_list*, %struct.blk_plug*, %struct.reclaim_state*, %struct.backing_dev_info*, %struct.io_context*, %struct.capture_control*, i64, %struct.kernel_siginfo*, %struct.task_io_accounting, %struct.robust_list_head*, %struct.list_head, %struct.futex_pi_state*, %struct.mutex, i32, [2 x %struct.perf_event_context*], %struct.mutex, %struct.list_head, %struct.rseq*, i32, i64, %struct.tlbflush_unmap_batch, %union.anon.17, %struct.pipe_inode_info*, %struct.page_frag, i32, i32, i64, i64, i64, i32, %struct.task_struct*, %struct.vm_struct*, %struct.refcount_struct, i8*, i64, i64, i64, %struct.callback_head, [24 x i8], %struct.thread_struct }
%struct.thread_info = type { i64, i32 }
%struct.sched_class = type opaque
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, %struct.sched_statistics }
%struct.load_weight = type { i64, i32 }
%struct.sched_statistics = type {}
%struct.sched_rt_entity = type { %struct.list_head, i64, i64, i32, i16, i16, %struct.sched_rt_entity* }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, %struct.sched_dl_entity* }
%struct.hrtimer = type { %struct.timerqueue_node, i64, i32 (%struct.hrtimer*)*, %struct.hrtimer_clock_base*, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.hrtimer_clock_base = type { %struct.hrtimer_cpu_base*, i32, i32, %struct.seqcount_raw_spinlock, %struct.hrtimer*, %struct.timerqueue_head, i64 ()*, i64 }
%struct.hrtimer_cpu_base = type { %struct.raw_spinlock, i32, i32, i32, i8, i64, %struct.hrtimer*, i64, %struct.hrtimer*, [16 x i8], [8 x %struct.hrtimer_clock_base] }
%struct.seqcount_raw_spinlock = type { %struct.seqcount }
%struct.seqcount = type { i32 }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.cpumask = type { [1 x i64] }
%struct.sched_info = type {}
%struct.vmacache = type { i64, [4 x %struct.vm_area_struct*] }
%struct.restart_block = type { i64 (%struct.restart_block*)*, %union.anon.0 }
%union.anon.0 = type { %struct.anon.1 }
%struct.anon.1 = type { i32*, i32, i32, i32, i64, i32* }
%struct.pid = type { %struct.refcount_struct, i32, %struct.spinlock, [4 x %struct.hlist_head], %struct.hlist_head, %struct.wait_queue_head, %struct.callback_head, [1 x %struct.upid] }
%struct.hlist_head = type { %struct.hlist_node* }
%struct.hlist_node = type { %struct.hlist_node*, %struct.hlist_node** }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.upid = type { i32, %struct.pid_namespace* }
%struct.pid_namespace = type opaque
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.posix_cputimers_work = type { %struct.callback_head, i32 }
%struct.cred = type opaque
%struct.key = type opaque
%struct.nameidata = type opaque
%struct.fs_struct = type opaque
%struct.files_struct = type opaque
%struct.io_uring_task = type opaque
%struct.nsproxy = type opaque
%struct.signal_struct = type opaque
%struct.sighand_struct = type opaque
%struct.sigset_t = type { [1 x i64] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.seccomp = type { i32, %struct.atomic_t, %struct.seccomp_filter* }
%struct.seccomp_filter = type opaque
%struct.wake_q_node = type { %struct.wake_q_node* }
%struct.rb_root_cached = type { %struct.rb_root, %struct.rb_node* }
%struct.rt_mutex_waiter = type opaque
%struct.bio_list = type opaque
%struct.blk_plug = type opaque
%struct.reclaim_state = type opaque
%struct.backing_dev_info = type opaque
%struct.io_context = type opaque
%struct.capture_control = type opaque
%struct.kernel_siginfo = type { %struct.anon.5 }
%struct.anon.5 = type { i32, i32, i32, %union.__sifields }
%union.__sifields = type { %struct.anon.9 }
%struct.anon.9 = type { i32, i32, i32, i64, i64 }
%struct.task_io_accounting = type {}
%struct.robust_list_head = type opaque
%struct.futex_pi_state = type opaque
%struct.perf_event_context = type opaque
%struct.rseq = type { i32, i32, %union.anon.16, i32, [12 x i8] }
%union.anon.16 = type { i64 }
%struct.tlbflush_unmap_batch = type { %struct.arch_tlbflush_unmap_batch, i8, i8 }
%struct.arch_tlbflush_unmap_batch = type { %struct.cpumask }
%union.anon.17 = type { %struct.callback_head }
%struct.pipe_inode_info = type opaque
%struct.page_frag = type { %struct.page*, i32, i32 }
%struct.page = type { i64, %union.anon.18, %union.anon.31, %struct.atomic_t, [8 x i8] }
%union.anon.18 = type { %struct.anon.19 }
%struct.anon.19 = type { %struct.list_head, %struct.address_space*, i64, i64 }
%struct.address_space = type opaque
%union.anon.31 = type { %struct.atomic_t }
%struct.vm_struct = type opaque
%struct.refcount_struct = type { %struct.atomic_t }
%struct.callback_head = type { %struct.callback_head*, void (%struct.callback_head*)* }
%struct.thread_struct = type { [3 x %struct.desc_struct], i64, i16, i16, i16, i16, i64, i64, [4 x %struct.perf_event*], i64, i64, i64, i64, i64, %struct.io_bitmap*, i64, i8, [47 x i8], %struct.fpu }
%struct.desc_struct = type { i16, i16, i32 }
%struct.perf_event = type opaque
%struct.io_bitmap = type opaque
%struct.fpu = type { i32, i64, [48 x i8], %union.fpregs_state }
%union.fpregs_state = type { %struct.xregs_state, [3520 x i8] }
%struct.xregs_state = type { %struct.fxregs_state, %struct.xstate_header, [0 x i8] }
%struct.fxregs_state = type { i16, i16, i16, i16, %union.anon.32, i32, i32, [32 x i32], [64 x i32], [12 x i32], %union.anon.35 }
%union.anon.32 = type { %struct.anon.33 }
%struct.anon.33 = type { i64, i64 }
%union.anon.35 = type { [12 x i32] }
%struct.xstate_header = type { i64, i64, [6 x i64] }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.kioctx_table = type opaque
%struct.user_namespace = type opaque
%struct.mmu_notifier_subscriptions = type opaque
%struct.uprobes_state = type {}
%struct.work_struct = type { %struct.atomic64_t, %struct.list_head, void (%struct.work_struct*)* }
%struct.pgprot = type { i64 }
%struct.anon.36 = type { %struct.rb_node, i64 }
%struct.anon_vma = type opaque
%struct.vm_userfaultfd_ctx = type {}
%struct.kernfs_open_node = type opaque
%struct.kernfs_iattrs = type opaque
%struct.kref = type { %struct.refcount_struct }
%struct.attribute = type { i8*, i16 }
%struct.bin_attribute = type { %struct.attribute, i64, i8*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i32 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, %struct.vm_area_struct*)* }
%struct.device_type = type { i8*, %struct.attribute_group**, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*, %struct.kuid_t*, %struct.kgid_t*)*, void (%struct.device*)*, %struct.dev_pm_ops* }
%struct.device = type { %struct.kobject, %struct.device*, %struct.device_private*, i8*, %struct.device_type*, %struct.bus_type*, %struct.device_driver*, i8*, i8*, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, %struct.dev_pm_domain*, %struct.irq_domain*, %struct.list_head, %struct.dma_map_ops*, i64*, i64, i64, %struct.bus_dma_region*, %struct.device_dma_parameters*, %struct.list_head, %struct.dev_archdata, %struct.device_node*, %struct.fwnode_handle*, i32, i32, %struct.spinlock, %struct.list_head, %struct.class*, %struct.attribute_group**, void (%struct.device*)*, %struct.iommu_group*, %struct.dev_iommu*, i8 }
%struct.device_private = type opaque
%struct.bus_type = type { i8*, i8*, %struct.device*, %struct.attribute_group**, %struct.attribute_group**, %struct.attribute_group**, i32 (%struct.device*, %struct.device_driver*)*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, %struct.dev_pm_ops*, %struct.iommu_ops*, %struct.subsys_private*, %struct.lock_class_key, i8 }
%struct.iommu_ops = type opaque
%struct.subsys_private = type opaque
%struct.lock_class_key = type {}
%struct.device_driver = type { i8*, %struct.bus_type*, %struct.module*, i8*, i8, i32, %struct.of_device_id*, %struct.acpi_device_id*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, %struct.attribute_group**, %struct.attribute_group**, %struct.dev_pm_ops*, void (%struct.device*)*, %struct.driver_private* }
%struct.module = type opaque
%struct.of_device_id = type { [32 x i8], [32 x i8], [128 x i8], i8* }
%struct.acpi_device_id = type { [9 x i8], i64, i32, i32 }
%struct.driver_private = type opaque
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, i8, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, %struct.wakeup_source*, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, %struct.wake_irq*, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i64, i64, i64, i64, %struct.pm_subsys_data*, void (%struct.device*, i32)*, %struct.dev_pm_qos* }
%struct.pm_message = type { i32 }
%struct.wakeup_source = type { i8*, i32, %struct.list_head, %struct.spinlock, %struct.wake_irq*, %struct.timer_list, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.device*, i8 }
%struct.timer_list = type { %struct.hlist_node, i64, void (%struct.timer_list*)*, i32 }
%struct.wake_irq = type opaque
%struct.pm_subsys_data = type { %struct.spinlock, i32, %struct.list_head, %struct.pm_domain_data* }
%struct.pm_domain_data = type opaque
%struct.dev_pm_qos = type opaque
%struct.dev_pm_domain = type { %struct.dev_pm_ops, i32 (%struct.device*)*, void (%struct.device*, i1)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)* }
%struct.dev_pm_ops = type { i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)* }
%struct.irq_domain = type opaque
%struct.dma_map_ops = type opaque
%struct.bus_dma_region = type opaque
%struct.device_dma_parameters = type { i32, i64 }
%struct.dev_archdata = type {}
%struct.device_node = type opaque
%struct.fwnode_handle = type opaque
%struct.class = type { i8*, %struct.module*, %struct.attribute_group**, %struct.attribute_group**, %struct.kobject*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*)*, void (%struct.class*)*, void (%struct.device*)*, i32 (%struct.device*)*, %struct.kobj_ns_type_operations*, i8* (%struct.device*)*, void (%struct.device*, %struct.kuid_t*, %struct.kgid_t*)*, %struct.dev_pm_ops*, %struct.subsys_private* }
%struct.iommu_group = type opaque
%struct.dev_iommu = type opaque
%struct.mmc_bus_ops = type { void (%struct.mmc_host*)*, void (%struct.mmc_host*)*, i32 (%struct.mmc_host*)*, i32 (%struct.mmc_host*)*, i32 (%struct.mmc_host*)*, i32 (%struct.mmc_host*)*, i32 (%struct.mmc_host*)*, i32 (%struct.mmc_host*)*, i32 (%struct.mmc_host*)*, i32 (%struct.mmc_host*)*, i32 (%struct.mmc_host*)* }
%struct.mmc_host = type { %struct.device*, %struct.device, i32, %struct.mmc_host_ops*, %struct.mmc_pwrseq*, i32, i32, i32, i32, i32, i32, i32, %struct.notifier_block, %struct.wakeup_source*, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32, i32, i32, %struct.spinlock, %struct.mmc_ios, i16, i32, i32, i32, i32, i32, %struct.timer_list, i8, %struct.mmc_card*, %struct.wait_queue_head, %struct.mmc_ctx*, i32, %struct.mmc_ctx, %struct.delayed_work, i32, %struct.mmc_slot, %struct.mmc_bus_ops*, i32, i32, %struct.task_struct*, %struct.delayed_work, i8, %struct.atomic_t, i32, %struct.led_trigger*, %struct.mmc_supply, %struct.dentry*, %struct.mmc_request*, i32, i32, i32, i32, %struct.mmc_cqe_ops*, i8*, i32, i8, i8, i8, [41 x i8], [0 x i64] }
%struct.mmc_host_ops = type { void (%struct.mmc_host*, %struct.mmc_request*, i32)*, void (%struct.mmc_host*, %struct.mmc_request*)*, void (%struct.mmc_host*, %struct.mmc_request*)*, i32 (%struct.mmc_host*, %struct.mmc_request*)*, void (%struct.mmc_host*, %struct.mmc_ios*)*, i32 (%struct.mmc_host*)*, i32 (%struct.mmc_host*)*, void (%struct.mmc_host*, i32)*, void (%struct.mmc_host*)*, void (%struct.mmc_host*, %struct.mmc_card*)*, i32 (%struct.mmc_host*, %struct.mmc_ios*)*, i32 (%struct.mmc_host*)*, i32 (%struct.mmc_host*, i32)*, i32 (%struct.mmc_host*, %struct.mmc_ios*)*, i32 (%struct.mmc_host*)*, void (%struct.mmc_host*)*, void (%struct.mmc_host*)*, void (%struct.mmc_host*, %struct.mmc_ios*)*, i32 (%struct.mmc_card*, i32, i32, i32, i32*)*, void (%struct.mmc_host*)*, void (%struct.mmc_host*)*, i32 (%struct.mmc_card*, i32, i32)* }
%struct.mmc_pwrseq = type opaque
%struct.notifier_block = type { i32 (%struct.notifier_block*, i64, i8*)*, %struct.notifier_block*, i32 }
%struct.mmc_ios = type { i32, i16, i32, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.mmc_card = type { %struct.mmc_host*, %struct.device, i32, i32, i32, i32, i32, i32, i8, i32, i32, i32, i32, i32, i8, [4 x i32], [4 x i32], [2 x i32], [16 x i32], %struct.mmc_cid, %struct.mmc_csd, %struct.mmc_ext_csd, %struct.sd_scr, %struct.sd_ssr, %struct.sd_switch_caps, i32, %struct.atomic_t, %struct.sdio_cccr, %struct.sdio_cis, [7 x %struct.sdio_func*], %struct.sdio_func*, i8, i8, i32, i8**, %struct.sdio_func_tuple*, i32, i32, i32, %struct.dentry*, [7 x %struct.mmc_part], i32, i32, %struct.workqueue_struct* }
%struct.mmc_cid = type { i32, [8 x i8], i8, i32, i16, i16, i8, i8, i8 }
%struct.mmc_csd = type { i8, i8, i16, i16, i32, i32, i32, i32, i32, i32, i32, i32, i8 }
%struct.mmc_ext_csd = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i8, i32, i32, i32, i32, i32, i32, i32, i32, i8, i64, i32, i32, i8, i8, i32, i8, i8, i8, i32, i32, i32, i8, i8, i8, i8, i32, [8 x i8], i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [4 x i8], i8, i8, i8, i32 }
%struct.sd_scr = type { i8, i8, i8, i8, i8, i8 }
%struct.sd_ssr = type { i32, i32, i32 }
%struct.sd_switch_caps = type { i32, i32, i32, i32, i32 }
%struct.sdio_cccr = type { i32, i32, i8 }
%struct.sdio_cis = type { i16, i16, i16, i32 }
%struct.sdio_func = type opaque
%struct.sdio_func_tuple = type opaque
%struct.mmc_part = type { i64, i32, [20 x i8], i8, i32 }
%struct.workqueue_struct = type opaque
%struct.mmc_ctx = type { %struct.task_struct* }
%struct.mmc_slot = type { i32, i8, i8* }
%struct.delayed_work = type { %struct.work_struct, %struct.timer_list, %struct.workqueue_struct*, i32 }
%struct.led_trigger = type opaque
%struct.mmc_supply = type { %struct.regulator*, %struct.regulator* }
%struct.regulator = type opaque
%struct.dentry = type opaque
%struct.mmc_request = type { %struct.mmc_command*, %struct.mmc_command*, %struct.mmc_data*, %struct.mmc_command*, %struct.completion, %struct.completion, void (%struct.mmc_request*)*, void (%struct.mmc_request*)*, %struct.mmc_host*, i8, i32 }
%struct.mmc_data = type { i32, i32, i32, i32, i32, i32, i32, i32, %struct.mmc_command*, %struct.mmc_request*, i32, i32, %struct.scatterlist*, i32 }
%struct.scatterlist = type opaque
%struct.mmc_command = type { i32, i32, [4 x i32], i32, i32, i32, i32, %struct.mmc_data*, %struct.mmc_request* }
%struct.mmc_cqe_ops = type { i32 (%struct.mmc_host*, %struct.mmc_card*)*, void (%struct.mmc_host*)*, i32 (%struct.mmc_host*, %struct.mmc_request*)*, void (%struct.mmc_host*, %struct.mmc_request*)*, void (%struct.mmc_host*)*, i32 (%struct.mmc_host*)*, i1 (%struct.mmc_host*, %struct.mmc_request*, i8*)*, void (%struct.mmc_host*)*, void (%struct.mmc_host*)* }
%struct.kmem_cache = type opaque
%struct.device_attribute = type { %struct.attribute, i64 (%struct.device*, %struct.device_attribute*, i8*)*, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* }

@.str = private unnamed_addr constant [52 x i8] c"\014%s: Problem switching card into high-speed mode!\0A\00", align 1
@sd_std_groups = internal global [2 x %struct.attribute_group*] [%struct.attribute_group* @sd_std_group, %struct.attribute_group* null], align 16, !dbg !0
@sd_type = dso_local global %struct.device_type { i8* null, %struct.attribute_group** getelementptr inbounds ([2 x %struct.attribute_group*], [2 x %struct.attribute_group*]* @sd_std_groups, i32 0, i32 0), i32 (%struct.device*, %struct.kobj_uevent_env*)* null, i8* (%struct.device*, i16*, %struct.kuid_t*, %struct.kgid_t*)* null, void (%struct.device*)* null, %struct.dev_pm_ops* null }, align 8, !dbg !2417
@.str.1 = private unnamed_addr constant [31 x i8] c"\014%s: Skipping voltage switch\0A\00", align 1
@use_spi_crc = external dso_local global i8, align 1
@.str.2 = private unnamed_addr constant [77 x i8] c"\014%s: host does not support reading read-only switch, assuming write-enable\0A\00", align 1
@.str.3 = private unnamed_addr constant [22 x i8] c"drivers/mmc/core/sd.c\00", align 1
@mmc_sd_ops = internal constant %struct.mmc_bus_ops { void (%struct.mmc_host*)* @mmc_sd_remove, void (%struct.mmc_host*)* @mmc_sd_detect, i32 (%struct.mmc_host*)* null, i32 (%struct.mmc_host*)* @mmc_sd_suspend, i32 (%struct.mmc_host*)* @mmc_sd_resume, i32 (%struct.mmc_host*)* @mmc_sd_runtime_suspend, i32 (%struct.mmc_host*)* @mmc_sd_runtime_resume, i32 (%struct.mmc_host*)* @mmc_sd_alive, i32 (%struct.mmc_host*)* @mmc_sd_suspend, i32 (%struct.mmc_host*)* @mmc_sd_hw_reset, i32 (%struct.mmc_host*)* null }, align 8, !dbg !2499
@.str.4 = private unnamed_addr constant [44 x i8] c"\013%s: error %d whilst initialising SD card\0A\00", align 1
@kmalloc_caches = external dso_local global [3 x [14 x %struct.kmem_cache*]], align 16
@.str.5 = private unnamed_addr constant [21 x i8] c"include/linux/slab.h\00", align 1
@sd_std_group = internal constant %struct.attribute_group { i8* null, i16 (%struct.kobject*, %struct.attribute*, i32)* @sd_std_is_visible, i16 (%struct.kobject*, %struct.bin_attribute*, i32)* null, %struct.attribute** getelementptr inbounds ([24 x %struct.attribute*], [24 x %struct.attribute*]* @sd_std_attrs, i32 0, i32 0), %struct.bin_attribute** null }, align 8, !dbg !2419
@sd_std_attrs = internal global [24 x %struct.attribute*] [%struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_vendor, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_device, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_revision, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_info1, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_info2, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_info3, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_info4, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_cid, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_csd, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_scr, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_ssr, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_date, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_erase_size, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_preferred_erase_size, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_fwrev, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_hwrev, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_manfid, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_name, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_oemid, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_serial, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_ocr, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_rca, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_dsr, i32 0, i32 0), %struct.attribute* null], align 16, !dbg !2447
@dev_attr_vendor = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @mmc_vendor_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !2421
@dev_attr_device = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.8, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @mmc_device_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !2435
@dev_attr_revision = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.9, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @mmc_revision_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !2437
@dev_attr_info1 = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.11, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @info1_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !2439
@dev_attr_info2 = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @info2_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !2441
@dev_attr_info3 = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.14, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @info3_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !2443
@dev_attr_info4 = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @info4_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !2445
@.str.6 = private unnamed_addr constant [7 x i8] c"vendor\00", align 1
@.str.7 = private unnamed_addr constant [8 x i8] c"0x%04x\0A\00", align 1
@.str.8 = private unnamed_addr constant [7 x i8] c"device\00", align 1
@.str.9 = private unnamed_addr constant [9 x i8] c"revision\00", align 1
@.str.10 = private unnamed_addr constant [7 x i8] c"%u.%u\0A\00", align 1
@.str.11 = private unnamed_addr constant [6 x i8] c"info1\00", align 1
@.str.12 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@.str.13 = private unnamed_addr constant [6 x i8] c"info2\00", align 1
@.str.14 = private unnamed_addr constant [6 x i8] c"info3\00", align 1
@.str.15 = private unnamed_addr constant [6 x i8] c"info4\00", align 1
@dev_attr_cid = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.16, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @mmc_cid_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !2452
@dev_attr_csd = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.18, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @mmc_csd_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !2454
@dev_attr_scr = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.19, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @mmc_scr_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !2456
@dev_attr_ssr = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.21, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @mmc_ssr_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !2458
@dev_attr_date = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.23, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @mmc_date_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !2460
@dev_attr_erase_size = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.25, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @mmc_erase_size_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !2462
@dev_attr_preferred_erase_size = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.27, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @mmc_preferred_erase_size_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !2464
@dev_attr_fwrev = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.28, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @mmc_fwrev_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !2466
@dev_attr_hwrev = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.30, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @mmc_hwrev_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !2468
@dev_attr_manfid = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.31, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @mmc_manfid_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !2470
@dev_attr_name = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.33, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @mmc_name_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !2472
@dev_attr_oemid = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.34, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @mmc_oemid_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !2474
@dev_attr_serial = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.35, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @mmc_serial_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !2476
@dev_attr_ocr = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.37, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @mmc_ocr_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !2478
@dev_attr_rca = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.38, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @mmc_rca_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !2480
@dev_attr_dsr = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.39, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @mmc_dsr_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !2482
@.str.16 = private unnamed_addr constant [4 x i8] c"cid\00", align 1
@.str.17 = private unnamed_addr constant [18 x i8] c"%08x%08x%08x%08x\0A\00", align 1
@.str.18 = private unnamed_addr constant [4 x i8] c"csd\00", align 1
@.str.19 = private unnamed_addr constant [4 x i8] c"scr\00", align 1
@.str.20 = private unnamed_addr constant [10 x i8] c"%08x%08x\0A\00", align 1
@.str.21 = private unnamed_addr constant [4 x i8] c"ssr\00", align 1
@.str.22 = private unnamed_addr constant [66 x i8] c"%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x\0A\00", align 1
@.str.23 = private unnamed_addr constant [5 x i8] c"date\00", align 1
@.str.24 = private unnamed_addr constant [11 x i8] c"%02d/%04d\0A\00", align 1
@.str.25 = private unnamed_addr constant [11 x i8] c"erase_size\00", align 1
@.str.26 = private unnamed_addr constant [4 x i8] c"%u\0A\00", align 1
@.str.27 = private unnamed_addr constant [21 x i8] c"preferred_erase_size\00", align 1
@.str.28 = private unnamed_addr constant [6 x i8] c"fwrev\00", align 1
@.str.29 = private unnamed_addr constant [6 x i8] c"0x%x\0A\00", align 1
@.str.30 = private unnamed_addr constant [6 x i8] c"hwrev\00", align 1
@.str.31 = private unnamed_addr constant [7 x i8] c"manfid\00", align 1
@.str.32 = private unnamed_addr constant [8 x i8] c"0x%06x\0A\00", align 1
@.str.33 = private unnamed_addr constant [5 x i8] c"name\00", align 1
@.str.34 = private unnamed_addr constant [6 x i8] c"oemid\00", align 1
@.str.35 = private unnamed_addr constant [7 x i8] c"serial\00", align 1
@.str.36 = private unnamed_addr constant [8 x i8] c"0x%08x\0A\00", align 1
@.str.37 = private unnamed_addr constant [4 x i8] c"ocr\00", align 1
@.str.38 = private unnamed_addr constant [4 x i8] c"rca\00", align 1
@.str.39 = private unnamed_addr constant [4 x i8] c"dsr\00", align 1
@taac_exp = internal constant [8 x i32] [i32 1, i32 10, i32 100, i32 1000, i32 10000, i32 100000, i32 1000000, i32 10000000], align 16, !dbg !2484
@taac_mant = internal constant [16 x i32] [i32 0, i32 10, i32 12, i32 13, i32 15, i32 20, i32 25, i32 30, i32 35, i32 40, i32 45, i32 50, i32 55, i32 60, i32 70, i32 80], align 16, !dbg !2488
@tran_exp = internal constant [8 x i32] [i32 10000, i32 100000, i32 1000000, i32 10000000, i32 0, i32 0, i32 0, i32 0], align 16, !dbg !2491
@tran_mant = internal constant [16 x i8] c"\00\0A\0C\0D\0F\14\19\1E#(-27<FP", align 16, !dbg !2493
@.str.40 = private unnamed_addr constant [45 x i8] c"\013%s: unrecognised CSD structure version %d\0A\00", align 1
@.str.41 = private unnamed_addr constant [45 x i8] c"\013%s: unrecognised SCR structure version %d\0A\00", align 1
@.str.42 = private unnamed_addr constant [25 x i8] c"\013%s: invalid bus width\0A\00", align 1
@.str.43 = private unnamed_addr constant [47 x i8] c"\014%s: card lacks mandatory SD Status function\0A\00", align 1
@.str.44 = private unnamed_addr constant [42 x i8] c"\014%s: problem reading SD Status register\0A\00", align 1
@sd_au_size = internal constant [16 x i32] [i32 0, i32 32, i32 64, i32 128, i32 256, i32 512, i32 1024, i32 2048, i32 4096, i32 8192, i32 16384, i32 24576, i32 32768, i32 49152, i32 65536, i32 131072], align 16, !dbg !2497
@.str.45 = private unnamed_addr constant [47 x i8] c"\014%s: SD Status: Invalid Allocation Unit size\0A\00", align 1
@.str.46 = private unnamed_addr constant [70 x i8] c"\014%s: card lacks mandatory switch function, performance might suffer\0A\00", align 1
@.str.47 = private unnamed_addr constant [39 x i8] c"\014%s: problem reading Bus Speed modes\0A\00", align 1
@.str.48 = private unnamed_addr constant [41 x i8] c"\013%s: error %d doing aggressive suspend\0A\00", align 1
@.str.49 = private unnamed_addr constant [37 x i8] c"\013%s: error %d doing runtime resume\0A\00", align 1
@.str.50 = private unnamed_addr constant [35 x i8] c"\016%s: Host Software Queue enabled\0A\00", align 1
@.str.51 = private unnamed_addr constant [47 x i8] c"\013%s: Host failed to negotiate down from 3.3V\0A\00", align 1
@.str.52 = private unnamed_addr constant [27 x i8] c"\014%s: ddr50 tuning failed\0A\00", align 1
@.str.53 = private unnamed_addr constant [39 x i8] c"\014%s: Problem setting drive strength!\0A\00", align 1
@.str.54 = private unnamed_addr constant [38 x i8] c"\014%s: Problem setting current limit!\0A\00", align 1
@.str.55 = private unnamed_addr constant [39 x i8] c"\014%s: Problem setting bus speed mode!\0A\00", align 1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @mmc_decode_cid(%struct.mmc_card* %card) #0 !dbg !2507 {
entry:
  %card.addr = alloca %struct.mmc_card*, align 8
  %resp = alloca i32*, align 8
  %__size = alloca i32, align 4
  %__mask = alloca i32, align 4
  %__off = alloca i32, align 4
  %__shft = alloca i32, align 4
  %__res = alloca i32, align 4
  %tmp = alloca i32, align 4
  %__size1 = alloca i32, align 4
  %__mask2 = alloca i32, align 4
  %__off3 = alloca i32, align 4
  %__shft4 = alloca i32, align 4
  %__res5 = alloca i32, align 4
  %tmp8 = alloca i32, align 4
  %__size11 = alloca i32, align 4
  %__mask12 = alloca i32, align 4
  %__off13 = alloca i32, align 4
  %__shft14 = alloca i32, align 4
  %__res15 = alloca i32, align 4
  %tmp18 = alloca i32, align 4
  %__size23 = alloca i32, align 4
  %__mask24 = alloca i32, align 4
  %__off25 = alloca i32, align 4
  %__shft26 = alloca i32, align 4
  %__res27 = alloca i32, align 4
  %tmp30 = alloca i32, align 4
  %__size36 = alloca i32, align 4
  %__mask37 = alloca i32, align 4
  %__off38 = alloca i32, align 4
  %__shft39 = alloca i32, align 4
  %__res40 = alloca i32, align 4
  %tmp43 = alloca i32, align 4
  %__size49 = alloca i32, align 4
  %__mask50 = alloca i32, align 4
  %__off51 = alloca i32, align 4
  %__shft52 = alloca i32, align 4
  %__res53 = alloca i32, align 4
  %tmp56 = alloca i32, align 4
  %__size62 = alloca i32, align 4
  %__mask63 = alloca i32, align 4
  %__off64 = alloca i32, align 4
  %__shft65 = alloca i32, align 4
  %__res66 = alloca i32, align 4
  %tmp69 = alloca i32, align 4
  %__size75 = alloca i32, align 4
  %__mask76 = alloca i32, align 4
  %__off77 = alloca i32, align 4
  %__shft78 = alloca i32, align 4
  %__res79 = alloca i32, align 4
  %tmp82 = alloca i32, align 4
  %__size86 = alloca i32, align 4
  %__mask87 = alloca i32, align 4
  %__off88 = alloca i32, align 4
  %__shft89 = alloca i32, align 4
  %__res90 = alloca i32, align 4
  %tmp93 = alloca i32, align 4
  %__size97 = alloca i32, align 4
  %__mask98 = alloca i32, align 4
  %__off99 = alloca i32, align 4
  %__shft100 = alloca i32, align 4
  %__res101 = alloca i32, align 4
  %tmp105 = alloca i32, align 4
  %__size107 = alloca i32, align 4
  %__mask108 = alloca i32, align 4
  %__off109 = alloca i32, align 4
  %__shft110 = alloca i32, align 4
  %__res111 = alloca i32, align 4
  %tmp114 = alloca i32, align 4
  %__size118 = alloca i32, align 4
  %__mask119 = alloca i32, align 4
  %__off120 = alloca i32, align 4
  %__shft121 = alloca i32, align 4
  %__res122 = alloca i32, align 4
  %tmp125 = alloca i32, align 4
  store %struct.mmc_card* %card, %struct.mmc_card** %card.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card.addr, metadata !2510, metadata !DIExpression()), !dbg !2511
  call void @llvm.dbg.declare(metadata i32** %resp, metadata !2512, metadata !DIExpression()), !dbg !2513
  %0 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !2514
  %raw_cid = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %0, i32 0, i32 15, !dbg !2515
  %arraydecay = getelementptr inbounds [4 x i32], [4 x i32]* %raw_cid, i64 0, i64 0, !dbg !2514
  store i32* %arraydecay, i32** %resp, align 8, !dbg !2513
  call void @llvm.dbg.declare(metadata i32* %__size, metadata !2516, metadata !DIExpression()), !dbg !2519
  store i32 8, i32* %__size, align 4, !dbg !2519
  call void @llvm.dbg.declare(metadata i32* %__mask, metadata !2520, metadata !DIExpression()), !dbg !2519
  store i32 255, i32* %__mask, align 4, !dbg !2519
  call void @llvm.dbg.declare(metadata i32* %__off, metadata !2522, metadata !DIExpression()), !dbg !2519
  store i32 0, i32* %__off, align 4, !dbg !2519
  call void @llvm.dbg.declare(metadata i32* %__shft, metadata !2523, metadata !DIExpression()), !dbg !2519
  store i32 24, i32* %__shft, align 4, !dbg !2519
  call void @llvm.dbg.declare(metadata i32* %__res, metadata !2524, metadata !DIExpression()), !dbg !2519
  %1 = load i32*, i32** %resp, align 8, !dbg !2519
  %arrayidx = getelementptr i32, i32* %1, i64 0, !dbg !2519
  %2 = load i32, i32* %arrayidx, align 4, !dbg !2519
  %shr = lshr i32 %2, 24, !dbg !2519
  store i32 %shr, i32* %__res, align 4, !dbg !2519
  %3 = load i32, i32* %__res, align 4, !dbg !2519
  %and = and i32 %3, 255, !dbg !2519
  store i32 %and, i32* %tmp, align 4, !dbg !2525
  %4 = load i32, i32* %tmp, align 4, !dbg !2519
  %5 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !2527
  %cid = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %5, i32 0, i32 19, !dbg !2528
  %manfid = getelementptr inbounds %struct.mmc_cid, %struct.mmc_cid* %cid, i32 0, i32 0, !dbg !2529
  store i32 %4, i32* %manfid, align 4, !dbg !2530
  call void @llvm.dbg.declare(metadata i32* %__size1, metadata !2531, metadata !DIExpression()), !dbg !2533
  store i32 16, i32* %__size1, align 4, !dbg !2533
  call void @llvm.dbg.declare(metadata i32* %__mask2, metadata !2534, metadata !DIExpression()), !dbg !2533
  store i32 65535, i32* %__mask2, align 4, !dbg !2533
  call void @llvm.dbg.declare(metadata i32* %__off3, metadata !2535, metadata !DIExpression()), !dbg !2533
  store i32 0, i32* %__off3, align 4, !dbg !2533
  call void @llvm.dbg.declare(metadata i32* %__shft4, metadata !2536, metadata !DIExpression()), !dbg !2533
  store i32 8, i32* %__shft4, align 4, !dbg !2533
  call void @llvm.dbg.declare(metadata i32* %__res5, metadata !2537, metadata !DIExpression()), !dbg !2533
  %6 = load i32*, i32** %resp, align 8, !dbg !2533
  %arrayidx6 = getelementptr i32, i32* %6, i64 0, !dbg !2533
  %7 = load i32, i32* %arrayidx6, align 4, !dbg !2533
  %shr7 = lshr i32 %7, 8, !dbg !2533
  store i32 %shr7, i32* %__res5, align 4, !dbg !2533
  %8 = load i32, i32* %__res5, align 4, !dbg !2533
  %and9 = and i32 %8, 65535, !dbg !2533
  store i32 %and9, i32* %tmp8, align 4, !dbg !2538
  %9 = load i32, i32* %tmp8, align 4, !dbg !2533
  %conv = trunc i32 %9 to i16, !dbg !2540
  %10 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !2541
  %cid10 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %10, i32 0, i32 19, !dbg !2542
  %oemid = getelementptr inbounds %struct.mmc_cid, %struct.mmc_cid* %cid10, i32 0, i32 4, !dbg !2543
  store i16 %conv, i16* %oemid, align 4, !dbg !2544
  call void @llvm.dbg.declare(metadata i32* %__size11, metadata !2545, metadata !DIExpression()), !dbg !2547
  store i32 8, i32* %__size11, align 4, !dbg !2547
  call void @llvm.dbg.declare(metadata i32* %__mask12, metadata !2548, metadata !DIExpression()), !dbg !2547
  store i32 255, i32* %__mask12, align 4, !dbg !2547
  call void @llvm.dbg.declare(metadata i32* %__off13, metadata !2549, metadata !DIExpression()), !dbg !2547
  store i32 0, i32* %__off13, align 4, !dbg !2547
  call void @llvm.dbg.declare(metadata i32* %__shft14, metadata !2550, metadata !DIExpression()), !dbg !2547
  store i32 0, i32* %__shft14, align 4, !dbg !2547
  call void @llvm.dbg.declare(metadata i32* %__res15, metadata !2551, metadata !DIExpression()), !dbg !2547
  %11 = load i32*, i32** %resp, align 8, !dbg !2547
  %arrayidx16 = getelementptr i32, i32* %11, i64 0, !dbg !2547
  %12 = load i32, i32* %arrayidx16, align 4, !dbg !2547
  %shr17 = lshr i32 %12, 0, !dbg !2547
  store i32 %shr17, i32* %__res15, align 4, !dbg !2547
  %13 = load i32, i32* %__res15, align 4, !dbg !2547
  %and19 = and i32 %13, 255, !dbg !2547
  store i32 %and19, i32* %tmp18, align 4, !dbg !2552
  %14 = load i32, i32* %tmp18, align 4, !dbg !2547
  %conv20 = trunc i32 %14 to i8, !dbg !2554
  %15 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !2555
  %cid21 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %15, i32 0, i32 19, !dbg !2556
  %prod_name = getelementptr inbounds %struct.mmc_cid, %struct.mmc_cid* %cid21, i32 0, i32 1, !dbg !2557
  %arrayidx22 = getelementptr [8 x i8], [8 x i8]* %prod_name, i64 0, i64 0, !dbg !2555
  store i8 %conv20, i8* %arrayidx22, align 4, !dbg !2558
  call void @llvm.dbg.declare(metadata i32* %__size23, metadata !2559, metadata !DIExpression()), !dbg !2561
  store i32 8, i32* %__size23, align 4, !dbg !2561
  call void @llvm.dbg.declare(metadata i32* %__mask24, metadata !2562, metadata !DIExpression()), !dbg !2561
  store i32 255, i32* %__mask24, align 4, !dbg !2561
  call void @llvm.dbg.declare(metadata i32* %__off25, metadata !2563, metadata !DIExpression()), !dbg !2561
  store i32 1, i32* %__off25, align 4, !dbg !2561
  call void @llvm.dbg.declare(metadata i32* %__shft26, metadata !2564, metadata !DIExpression()), !dbg !2561
  store i32 24, i32* %__shft26, align 4, !dbg !2561
  call void @llvm.dbg.declare(metadata i32* %__res27, metadata !2565, metadata !DIExpression()), !dbg !2561
  %16 = load i32*, i32** %resp, align 8, !dbg !2561
  %arrayidx28 = getelementptr i32, i32* %16, i64 1, !dbg !2561
  %17 = load i32, i32* %arrayidx28, align 4, !dbg !2561
  %shr29 = lshr i32 %17, 24, !dbg !2561
  store i32 %shr29, i32* %__res27, align 4, !dbg !2561
  %18 = load i32, i32* %__res27, align 4, !dbg !2561
  %and31 = and i32 %18, 255, !dbg !2561
  store i32 %and31, i32* %tmp30, align 4, !dbg !2566
  %19 = load i32, i32* %tmp30, align 4, !dbg !2561
  %conv32 = trunc i32 %19 to i8, !dbg !2568
  %20 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !2569
  %cid33 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %20, i32 0, i32 19, !dbg !2570
  %prod_name34 = getelementptr inbounds %struct.mmc_cid, %struct.mmc_cid* %cid33, i32 0, i32 1, !dbg !2571
  %arrayidx35 = getelementptr [8 x i8], [8 x i8]* %prod_name34, i64 0, i64 1, !dbg !2569
  store i8 %conv32, i8* %arrayidx35, align 1, !dbg !2572
  call void @llvm.dbg.declare(metadata i32* %__size36, metadata !2573, metadata !DIExpression()), !dbg !2575
  store i32 8, i32* %__size36, align 4, !dbg !2575
  call void @llvm.dbg.declare(metadata i32* %__mask37, metadata !2576, metadata !DIExpression()), !dbg !2575
  store i32 255, i32* %__mask37, align 4, !dbg !2575
  call void @llvm.dbg.declare(metadata i32* %__off38, metadata !2577, metadata !DIExpression()), !dbg !2575
  store i32 1, i32* %__off38, align 4, !dbg !2575
  call void @llvm.dbg.declare(metadata i32* %__shft39, metadata !2578, metadata !DIExpression()), !dbg !2575
  store i32 16, i32* %__shft39, align 4, !dbg !2575
  call void @llvm.dbg.declare(metadata i32* %__res40, metadata !2579, metadata !DIExpression()), !dbg !2575
  %21 = load i32*, i32** %resp, align 8, !dbg !2575
  %arrayidx41 = getelementptr i32, i32* %21, i64 1, !dbg !2575
  %22 = load i32, i32* %arrayidx41, align 4, !dbg !2575
  %shr42 = lshr i32 %22, 16, !dbg !2575
  store i32 %shr42, i32* %__res40, align 4, !dbg !2575
  %23 = load i32, i32* %__res40, align 4, !dbg !2575
  %and44 = and i32 %23, 255, !dbg !2575
  store i32 %and44, i32* %tmp43, align 4, !dbg !2580
  %24 = load i32, i32* %tmp43, align 4, !dbg !2575
  %conv45 = trunc i32 %24 to i8, !dbg !2582
  %25 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !2583
  %cid46 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %25, i32 0, i32 19, !dbg !2584
  %prod_name47 = getelementptr inbounds %struct.mmc_cid, %struct.mmc_cid* %cid46, i32 0, i32 1, !dbg !2585
  %arrayidx48 = getelementptr [8 x i8], [8 x i8]* %prod_name47, i64 0, i64 2, !dbg !2583
  store i8 %conv45, i8* %arrayidx48, align 2, !dbg !2586
  call void @llvm.dbg.declare(metadata i32* %__size49, metadata !2587, metadata !DIExpression()), !dbg !2589
  store i32 8, i32* %__size49, align 4, !dbg !2589
  call void @llvm.dbg.declare(metadata i32* %__mask50, metadata !2590, metadata !DIExpression()), !dbg !2589
  store i32 255, i32* %__mask50, align 4, !dbg !2589
  call void @llvm.dbg.declare(metadata i32* %__off51, metadata !2591, metadata !DIExpression()), !dbg !2589
  store i32 1, i32* %__off51, align 4, !dbg !2589
  call void @llvm.dbg.declare(metadata i32* %__shft52, metadata !2592, metadata !DIExpression()), !dbg !2589
  store i32 8, i32* %__shft52, align 4, !dbg !2589
  call void @llvm.dbg.declare(metadata i32* %__res53, metadata !2593, metadata !DIExpression()), !dbg !2589
  %26 = load i32*, i32** %resp, align 8, !dbg !2589
  %arrayidx54 = getelementptr i32, i32* %26, i64 1, !dbg !2589
  %27 = load i32, i32* %arrayidx54, align 4, !dbg !2589
  %shr55 = lshr i32 %27, 8, !dbg !2589
  store i32 %shr55, i32* %__res53, align 4, !dbg !2589
  %28 = load i32, i32* %__res53, align 4, !dbg !2589
  %and57 = and i32 %28, 255, !dbg !2589
  store i32 %and57, i32* %tmp56, align 4, !dbg !2594
  %29 = load i32, i32* %tmp56, align 4, !dbg !2589
  %conv58 = trunc i32 %29 to i8, !dbg !2596
  %30 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !2597
  %cid59 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %30, i32 0, i32 19, !dbg !2598
  %prod_name60 = getelementptr inbounds %struct.mmc_cid, %struct.mmc_cid* %cid59, i32 0, i32 1, !dbg !2599
  %arrayidx61 = getelementptr [8 x i8], [8 x i8]* %prod_name60, i64 0, i64 3, !dbg !2597
  store i8 %conv58, i8* %arrayidx61, align 1, !dbg !2600
  call void @llvm.dbg.declare(metadata i32* %__size62, metadata !2601, metadata !DIExpression()), !dbg !2603
  store i32 8, i32* %__size62, align 4, !dbg !2603
  call void @llvm.dbg.declare(metadata i32* %__mask63, metadata !2604, metadata !DIExpression()), !dbg !2603
  store i32 255, i32* %__mask63, align 4, !dbg !2603
  call void @llvm.dbg.declare(metadata i32* %__off64, metadata !2605, metadata !DIExpression()), !dbg !2603
  store i32 1, i32* %__off64, align 4, !dbg !2603
  call void @llvm.dbg.declare(metadata i32* %__shft65, metadata !2606, metadata !DIExpression()), !dbg !2603
  store i32 0, i32* %__shft65, align 4, !dbg !2603
  call void @llvm.dbg.declare(metadata i32* %__res66, metadata !2607, metadata !DIExpression()), !dbg !2603
  %31 = load i32*, i32** %resp, align 8, !dbg !2603
  %arrayidx67 = getelementptr i32, i32* %31, i64 1, !dbg !2603
  %32 = load i32, i32* %arrayidx67, align 4, !dbg !2603
  %shr68 = lshr i32 %32, 0, !dbg !2603
  store i32 %shr68, i32* %__res66, align 4, !dbg !2603
  %33 = load i32, i32* %__res66, align 4, !dbg !2603
  %and70 = and i32 %33, 255, !dbg !2603
  store i32 %and70, i32* %tmp69, align 4, !dbg !2608
  %34 = load i32, i32* %tmp69, align 4, !dbg !2603
  %conv71 = trunc i32 %34 to i8, !dbg !2610
  %35 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !2611
  %cid72 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %35, i32 0, i32 19, !dbg !2612
  %prod_name73 = getelementptr inbounds %struct.mmc_cid, %struct.mmc_cid* %cid72, i32 0, i32 1, !dbg !2613
  %arrayidx74 = getelementptr [8 x i8], [8 x i8]* %prod_name73, i64 0, i64 4, !dbg !2611
  store i8 %conv71, i8* %arrayidx74, align 4, !dbg !2614
  call void @llvm.dbg.declare(metadata i32* %__size75, metadata !2615, metadata !DIExpression()), !dbg !2617
  store i32 4, i32* %__size75, align 4, !dbg !2617
  call void @llvm.dbg.declare(metadata i32* %__mask76, metadata !2618, metadata !DIExpression()), !dbg !2617
  store i32 15, i32* %__mask76, align 4, !dbg !2617
  call void @llvm.dbg.declare(metadata i32* %__off77, metadata !2619, metadata !DIExpression()), !dbg !2617
  store i32 2, i32* %__off77, align 4, !dbg !2617
  call void @llvm.dbg.declare(metadata i32* %__shft78, metadata !2620, metadata !DIExpression()), !dbg !2617
  store i32 28, i32* %__shft78, align 4, !dbg !2617
  call void @llvm.dbg.declare(metadata i32* %__res79, metadata !2621, metadata !DIExpression()), !dbg !2617
  %36 = load i32*, i32** %resp, align 8, !dbg !2617
  %arrayidx80 = getelementptr i32, i32* %36, i64 2, !dbg !2617
  %37 = load i32, i32* %arrayidx80, align 4, !dbg !2617
  %shr81 = lshr i32 %37, 28, !dbg !2617
  store i32 %shr81, i32* %__res79, align 4, !dbg !2617
  %38 = load i32, i32* %__res79, align 4, !dbg !2617
  %and83 = and i32 %38, 15, !dbg !2617
  store i32 %and83, i32* %tmp82, align 4, !dbg !2622
  %39 = load i32, i32* %tmp82, align 4, !dbg !2617
  %conv84 = trunc i32 %39 to i8, !dbg !2624
  %40 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !2625
  %cid85 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %40, i32 0, i32 19, !dbg !2626
  %hwrev = getelementptr inbounds %struct.mmc_cid, %struct.mmc_cid* %cid85, i32 0, i32 6, !dbg !2627
  store i8 %conv84, i8* %hwrev, align 4, !dbg !2628
  call void @llvm.dbg.declare(metadata i32* %__size86, metadata !2629, metadata !DIExpression()), !dbg !2631
  store i32 4, i32* %__size86, align 4, !dbg !2631
  call void @llvm.dbg.declare(metadata i32* %__mask87, metadata !2632, metadata !DIExpression()), !dbg !2631
  store i32 15, i32* %__mask87, align 4, !dbg !2631
  call void @llvm.dbg.declare(metadata i32* %__off88, metadata !2633, metadata !DIExpression()), !dbg !2631
  store i32 2, i32* %__off88, align 4, !dbg !2631
  call void @llvm.dbg.declare(metadata i32* %__shft89, metadata !2634, metadata !DIExpression()), !dbg !2631
  store i32 24, i32* %__shft89, align 4, !dbg !2631
  call void @llvm.dbg.declare(metadata i32* %__res90, metadata !2635, metadata !DIExpression()), !dbg !2631
  %41 = load i32*, i32** %resp, align 8, !dbg !2631
  %arrayidx91 = getelementptr i32, i32* %41, i64 2, !dbg !2631
  %42 = load i32, i32* %arrayidx91, align 4, !dbg !2631
  %shr92 = lshr i32 %42, 24, !dbg !2631
  store i32 %shr92, i32* %__res90, align 4, !dbg !2631
  %43 = load i32, i32* %__res90, align 4, !dbg !2631
  %and94 = and i32 %43, 15, !dbg !2631
  store i32 %and94, i32* %tmp93, align 4, !dbg !2636
  %44 = load i32, i32* %tmp93, align 4, !dbg !2631
  %conv95 = trunc i32 %44 to i8, !dbg !2638
  %45 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !2639
  %cid96 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %45, i32 0, i32 19, !dbg !2640
  %fwrev = getelementptr inbounds %struct.mmc_cid, %struct.mmc_cid* %cid96, i32 0, i32 7, !dbg !2641
  store i8 %conv95, i8* %fwrev, align 1, !dbg !2642
  call void @llvm.dbg.declare(metadata i32* %__size97, metadata !2643, metadata !DIExpression()), !dbg !2645
  store i32 32, i32* %__size97, align 4, !dbg !2645
  call void @llvm.dbg.declare(metadata i32* %__mask98, metadata !2646, metadata !DIExpression()), !dbg !2645
  store i32 -1, i32* %__mask98, align 4, !dbg !2645
  call void @llvm.dbg.declare(metadata i32* %__off99, metadata !2647, metadata !DIExpression()), !dbg !2645
  store i32 3, i32* %__off99, align 4, !dbg !2645
  call void @llvm.dbg.declare(metadata i32* %__shft100, metadata !2648, metadata !DIExpression()), !dbg !2645
  store i32 24, i32* %__shft100, align 4, !dbg !2645
  call void @llvm.dbg.declare(metadata i32* %__res101, metadata !2649, metadata !DIExpression()), !dbg !2645
  %46 = load i32*, i32** %resp, align 8, !dbg !2645
  %arrayidx102 = getelementptr i32, i32* %46, i64 3, !dbg !2645
  %47 = load i32, i32* %arrayidx102, align 4, !dbg !2645
  %shr103 = lshr i32 %47, 24, !dbg !2645
  store i32 %shr103, i32* %__res101, align 4, !dbg !2645
  %48 = load i32*, i32** %resp, align 8, !dbg !2650
  %arrayidx104 = getelementptr i32, i32* %48, i64 2, !dbg !2650
  %49 = load i32, i32* %arrayidx104, align 4, !dbg !2650
  %shl = shl i32 %49, 8, !dbg !2650
  %50 = load i32, i32* %__res101, align 4, !dbg !2650
  %or = or i32 %50, %shl, !dbg !2650
  store i32 %or, i32* %__res101, align 4, !dbg !2650
  %51 = load i32, i32* %__res101, align 4, !dbg !2645
  store i32 %51, i32* %tmp105, align 4, !dbg !2650
  %52 = load i32, i32* %tmp105, align 4, !dbg !2645
  %53 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !2652
  %cid106 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %53, i32 0, i32 19, !dbg !2653
  %serial = getelementptr inbounds %struct.mmc_cid, %struct.mmc_cid* %cid106, i32 0, i32 3, !dbg !2654
  store i32 %52, i32* %serial, align 4, !dbg !2655
  call void @llvm.dbg.declare(metadata i32* %__size107, metadata !2656, metadata !DIExpression()), !dbg !2658
  store i32 8, i32* %__size107, align 4, !dbg !2658
  call void @llvm.dbg.declare(metadata i32* %__mask108, metadata !2659, metadata !DIExpression()), !dbg !2658
  store i32 255, i32* %__mask108, align 4, !dbg !2658
  call void @llvm.dbg.declare(metadata i32* %__off109, metadata !2660, metadata !DIExpression()), !dbg !2658
  store i32 3, i32* %__off109, align 4, !dbg !2658
  call void @llvm.dbg.declare(metadata i32* %__shft110, metadata !2661, metadata !DIExpression()), !dbg !2658
  store i32 12, i32* %__shft110, align 4, !dbg !2658
  call void @llvm.dbg.declare(metadata i32* %__res111, metadata !2662, metadata !DIExpression()), !dbg !2658
  %54 = load i32*, i32** %resp, align 8, !dbg !2658
  %arrayidx112 = getelementptr i32, i32* %54, i64 3, !dbg !2658
  %55 = load i32, i32* %arrayidx112, align 4, !dbg !2658
  %shr113 = lshr i32 %55, 12, !dbg !2658
  store i32 %shr113, i32* %__res111, align 4, !dbg !2658
  %56 = load i32, i32* %__res111, align 4, !dbg !2658
  %and115 = and i32 %56, 255, !dbg !2658
  store i32 %and115, i32* %tmp114, align 4, !dbg !2663
  %57 = load i32, i32* %tmp114, align 4, !dbg !2658
  %conv116 = trunc i32 %57 to i16, !dbg !2665
  %58 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !2666
  %cid117 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %58, i32 0, i32 19, !dbg !2667
  %year = getelementptr inbounds %struct.mmc_cid, %struct.mmc_cid* %cid117, i32 0, i32 5, !dbg !2668
  store i16 %conv116, i16* %year, align 2, !dbg !2669
  call void @llvm.dbg.declare(metadata i32* %__size118, metadata !2670, metadata !DIExpression()), !dbg !2672
  store i32 4, i32* %__size118, align 4, !dbg !2672
  call void @llvm.dbg.declare(metadata i32* %__mask119, metadata !2673, metadata !DIExpression()), !dbg !2672
  store i32 15, i32* %__mask119, align 4, !dbg !2672
  call void @llvm.dbg.declare(metadata i32* %__off120, metadata !2674, metadata !DIExpression()), !dbg !2672
  store i32 3, i32* %__off120, align 4, !dbg !2672
  call void @llvm.dbg.declare(metadata i32* %__shft121, metadata !2675, metadata !DIExpression()), !dbg !2672
  store i32 8, i32* %__shft121, align 4, !dbg !2672
  call void @llvm.dbg.declare(metadata i32* %__res122, metadata !2676, metadata !DIExpression()), !dbg !2672
  %59 = load i32*, i32** %resp, align 8, !dbg !2672
  %arrayidx123 = getelementptr i32, i32* %59, i64 3, !dbg !2672
  %60 = load i32, i32* %arrayidx123, align 4, !dbg !2672
  %shr124 = lshr i32 %60, 8, !dbg !2672
  store i32 %shr124, i32* %__res122, align 4, !dbg !2672
  %61 = load i32, i32* %__res122, align 4, !dbg !2672
  %and126 = and i32 %61, 15, !dbg !2672
  store i32 %and126, i32* %tmp125, align 4, !dbg !2677
  %62 = load i32, i32* %tmp125, align 4, !dbg !2672
  %conv127 = trunc i32 %62 to i8, !dbg !2679
  %63 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !2680
  %cid128 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %63, i32 0, i32 19, !dbg !2681
  %month = getelementptr inbounds %struct.mmc_cid, %struct.mmc_cid* %cid128, i32 0, i32 8, !dbg !2682
  store i8 %conv127, i8* %month, align 2, !dbg !2683
  %64 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !2684
  %cid129 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %64, i32 0, i32 19, !dbg !2685
  %year130 = getelementptr inbounds %struct.mmc_cid, %struct.mmc_cid* %cid129, i32 0, i32 5, !dbg !2686
  %65 = load i16, i16* %year130, align 2, !dbg !2687
  %conv131 = zext i16 %65 to i32, !dbg !2687
  %add = add i32 %conv131, 2000, !dbg !2687
  %conv132 = trunc i32 %add to i16, !dbg !2687
  store i16 %conv132, i16* %year130, align 2, !dbg !2687
  ret void, !dbg !2688
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @mmc_sd_switch_hs(%struct.mmc_card* %card) #0 !dbg !2689 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !2692, metadata !DIExpression()), !dbg !2696
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !2704, metadata !DIExpression()), !dbg !2705
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !2706, metadata !DIExpression()), !dbg !2707
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !2708, metadata !DIExpression()), !dbg !2709
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !2710, metadata !DIExpression()), !dbg !2714
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !2716, metadata !DIExpression()), !dbg !2720
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !2722, metadata !DIExpression()), !dbg !2726
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !2731, metadata !DIExpression()), !dbg !2732
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !2733, metadata !DIExpression()), !dbg !2734
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !2735, metadata !DIExpression()), !dbg !2736
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !2737, metadata !DIExpression()), !dbg !2738
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !2739, metadata !DIExpression()), !dbg !2740
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !2741, metadata !DIExpression()), !dbg !2742
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !2743, metadata !DIExpression()), !dbg !2744
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !2745, metadata !DIExpression()), !dbg !2746
  %retval = alloca i32, align 4
  %card.addr = alloca %struct.mmc_card*, align 8
  %err = alloca i32, align 4
  %status = alloca i8*, align 8
  store %struct.mmc_card* %card, %struct.mmc_card** %card.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card.addr, metadata !2747, metadata !DIExpression()), !dbg !2748
  call void @llvm.dbg.declare(metadata i32* %err, metadata !2749, metadata !DIExpression()), !dbg !2750
  call void @llvm.dbg.declare(metadata i8** %status, metadata !2751, metadata !DIExpression()), !dbg !2753
  %0 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !2754
  %scr = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %0, i32 0, i32 22, !dbg !2756
  %sda_vsn = getelementptr inbounds %struct.sd_scr, %struct.sd_scr* %scr, i32 0, i32 0, !dbg !2757
  %1 = load i8, i8* %sda_vsn, align 8, !dbg !2757
  %conv = zext i8 %1 to i32, !dbg !2754
  %cmp = icmp slt i32 %conv, 1, !dbg !2758
  br i1 %cmp, label %if.then, label %if.end, !dbg !2759

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !2760
  br label %return, !dbg !2760

if.end:                                           ; preds = %entry
  %2 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !2761
  %csd = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %2, i32 0, i32 20, !dbg !2763
  %cmdclass = getelementptr inbounds %struct.mmc_csd, %struct.mmc_csd* %csd, i32 0, i32 2, !dbg !2764
  %3 = load i16, i16* %cmdclass, align 2, !dbg !2764
  %conv2 = zext i16 %3 to i32, !dbg !2761
  %and = and i32 %conv2, 1024, !dbg !2765
  %tobool = icmp ne i32 %and, 0, !dbg !2765
  br i1 %tobool, label %if.end4, label %if.then3, !dbg !2766

if.then3:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !2767
  br label %return, !dbg !2767

if.end4:                                          ; preds = %if.end
  %4 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !2768
  %host = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %4, i32 0, i32 0, !dbg !2770
  %5 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !2770
  %caps = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %5, i32 0, i32 17, !dbg !2771
  %6 = load i32, i32* %caps, align 4, !dbg !2771
  %and5 = and i32 %6, 4, !dbg !2772
  %tobool6 = icmp ne i32 %and5, 0, !dbg !2772
  br i1 %tobool6, label %if.end8, label %if.then7, !dbg !2773

if.then7:                                         ; preds = %if.end4
  store i32 0, i32* %retval, align 4, !dbg !2774
  br label %return, !dbg !2774

if.end8:                                          ; preds = %if.end4
  %7 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !2775
  %sw_caps = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %7, i32 0, i32 24, !dbg !2777
  %hs_max_dtr = getelementptr inbounds %struct.sd_switch_caps, %struct.sd_switch_caps* %sw_caps, i32 0, i32 0, !dbg !2778
  %8 = load i32, i32* %hs_max_dtr, align 4, !dbg !2778
  %cmp9 = icmp eq i32 %8, 0, !dbg !2779
  br i1 %cmp9, label %if.then11, label %if.end12, !dbg !2780

if.then11:                                        ; preds = %if.end8
  store i32 0, i32* %retval, align 4, !dbg !2781
  br label %return, !dbg !2781

if.end12:                                         ; preds = %if.end8
  store i64 64, i64* %size.addr.i, align 8
  store i32 3264, i32* %flags.addr.i, align 4
  %9 = load i64, i64* %size.addr.i, align 8, !dbg !2782
  %10 = call i1 @llvm.is.constant.i64(i64 %9) #8, !dbg !2783
  br i1 %10, label %if.then.i, label %if.end9.i, !dbg !2784

if.then.i:                                        ; preds = %if.end12
  %11 = load i64, i64* %size.addr.i, align 8, !dbg !2785
  %cmp.i = icmp ugt i64 %11, 8192, !dbg !2786
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !2787

if.then1.i:                                       ; preds = %if.then.i
  %12 = load i64, i64* %size.addr.i, align 8, !dbg !2788
  %13 = load i32, i32* %flags.addr.i, align 4, !dbg !2789
  store i64 %12, i64* %size.addr.i.i, align 8
  store i32 %13, i32* %flags.addr.i.i, align 4
  %14 = load i64, i64* %size.addr.i.i, align 8, !dbg !2790
  %call.i.i = call i32 @get_order(i64 %14) #9, !dbg !2791
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !2740
  %15 = load i64, i64* %size.addr.i.i, align 8, !dbg !2792
  %16 = load i32, i32* %flags.addr.i.i, align 4, !dbg !2793
  %17 = load i32, i32* %order.i.i, align 4, !dbg !2794
  store i64 %15, i64* %size.addr.i.i.i, align 8
  store i32 %16, i32* %flags.addr.i.i.i, align 4
  store i32 %17, i32* %order.addr.i.i.i, align 4
  %18 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !2795
  %19 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !2796
  %20 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !2797
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %18, i32 %19, i32 %20) #10, !dbg !2798
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !2798
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !2798
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !2798
  call void @llvm.assume(i1 %maskcond.i.i.i) #8, !dbg !2798
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !2799
  br label %kmalloc.exit, !dbg !2799

if.end.i:                                         ; preds = %if.then.i
  %21 = load i64, i64* %size.addr.i, align 8, !dbg !2800
  store i64 %21, i64* %size.addr.i11.i, align 8
  %22 = load i64, i64* %size.addr.i11.i, align 8, !dbg !2801
  %tobool.i.i = icmp ne i64 %22, 0, !dbg !2801
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !2803

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !2804
  br label %kmalloc_index.exit.i, !dbg !2804

if.end.i.i:                                       ; preds = %if.end.i
  %23 = load i64, i64* %size.addr.i11.i, align 8, !dbg !2805
  %cmp.i.i = icmp ule i64 %23, 8, !dbg !2807
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !2808

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !2809
  br label %kmalloc_index.exit.i, !dbg !2809

if.end2.i.i:                                      ; preds = %if.end.i.i
  %24 = load i64, i64* %size.addr.i11.i, align 8, !dbg !2810
  %cmp3.i.i = icmp ugt i64 %24, 64, !dbg !2812
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !2813

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %25 = load i64, i64* %size.addr.i11.i, align 8, !dbg !2814
  %cmp4.i.i = icmp ule i64 %25, 96, !dbg !2815
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !2816

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !2817
  br label %kmalloc_index.exit.i, !dbg !2817

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %26 = load i64, i64* %size.addr.i11.i, align 8, !dbg !2818
  %cmp7.i.i = icmp ugt i64 %26, 128, !dbg !2820
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !2821

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %27 = load i64, i64* %size.addr.i11.i, align 8, !dbg !2822
  %cmp9.i.i = icmp ule i64 %27, 192, !dbg !2823
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !2824

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !2825
  br label %kmalloc_index.exit.i, !dbg !2825

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %28 = load i64, i64* %size.addr.i11.i, align 8, !dbg !2826
  %cmp12.i.i = icmp ule i64 %28, 8, !dbg !2828
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !2829

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !2830
  br label %kmalloc_index.exit.i, !dbg !2830

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !2831
  %cmp15.i.i = icmp ule i64 %29, 16, !dbg !2833
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !2834

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !2835
  br label %kmalloc_index.exit.i, !dbg !2835

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !2836
  %cmp18.i.i = icmp ule i64 %30, 32, !dbg !2838
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !2839

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !2840
  br label %kmalloc_index.exit.i, !dbg !2840

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !2841
  %cmp21.i.i = icmp ule i64 %31, 64, !dbg !2843
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !2844

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !2845
  br label %kmalloc_index.exit.i, !dbg !2845

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !2846
  %cmp24.i.i = icmp ule i64 %32, 128, !dbg !2848
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !2849

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !2850
  br label %kmalloc_index.exit.i, !dbg !2850

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !2851
  %cmp27.i.i = icmp ule i64 %33, 256, !dbg !2853
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !2854

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !2855
  br label %kmalloc_index.exit.i, !dbg !2855

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !2856
  %cmp30.i.i = icmp ule i64 %34, 512, !dbg !2858
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !2859

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !2860
  br label %kmalloc_index.exit.i, !dbg !2860

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !2861
  %cmp33.i.i = icmp ule i64 %35, 1024, !dbg !2863
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !2864

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !2865
  br label %kmalloc_index.exit.i, !dbg !2865

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !2866
  %cmp36.i.i = icmp ule i64 %36, 2048, !dbg !2868
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !2869

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !2870
  br label %kmalloc_index.exit.i, !dbg !2870

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !2871
  %cmp39.i.i = icmp ule i64 %37, 4096, !dbg !2873
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !2874

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !2875
  br label %kmalloc_index.exit.i, !dbg !2875

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !2876
  %cmp42.i.i = icmp ule i64 %38, 8192, !dbg !2878
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !2879

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !2880
  br label %kmalloc_index.exit.i, !dbg !2880

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !2881
  %cmp45.i.i = icmp ule i64 %39, 16384, !dbg !2883
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !2884

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !2885
  br label %kmalloc_index.exit.i, !dbg !2885

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !2886
  %cmp48.i.i = icmp ule i64 %40, 32768, !dbg !2888
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !2889

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !2890
  br label %kmalloc_index.exit.i, !dbg !2890

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !2891
  %cmp51.i.i = icmp ule i64 %41, 65536, !dbg !2893
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !2894

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !2895
  br label %kmalloc_index.exit.i, !dbg !2895

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !2896
  %cmp54.i.i = icmp ule i64 %42, 131072, !dbg !2898
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !2899

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !2900
  br label %kmalloc_index.exit.i, !dbg !2900

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !2901
  %cmp57.i.i = icmp ule i64 %43, 262144, !dbg !2903
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !2904

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !2905
  br label %kmalloc_index.exit.i, !dbg !2905

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !2906
  %cmp60.i.i = icmp ule i64 %44, 524288, !dbg !2908
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !2909

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !2910
  br label %kmalloc_index.exit.i, !dbg !2910

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %45 = load i64, i64* %size.addr.i11.i, align 8, !dbg !2911
  %cmp63.i.i = icmp ule i64 %45, 1048576, !dbg !2913
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !2914

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !2915
  br label %kmalloc_index.exit.i, !dbg !2915

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %46 = load i64, i64* %size.addr.i11.i, align 8, !dbg !2916
  %cmp66.i.i = icmp ule i64 %46, 2097152, !dbg !2918
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !2919

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !2920
  br label %kmalloc_index.exit.i, !dbg !2920

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %47 = load i64, i64* %size.addr.i11.i, align 8, !dbg !2921
  %cmp69.i.i = icmp ule i64 %47, 4194304, !dbg !2923
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !2924

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !2925
  br label %kmalloc_index.exit.i, !dbg !2925

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %48 = load i64, i64* %size.addr.i11.i, align 8, !dbg !2926
  %cmp72.i.i = icmp ule i64 %48, 8388608, !dbg !2928
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !2929

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !2930
  br label %kmalloc_index.exit.i, !dbg !2930

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %49 = load i64, i64* %size.addr.i11.i, align 8, !dbg !2931
  %cmp75.i.i = icmp ule i64 %49, 16777216, !dbg !2933
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !2934

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !2935
  br label %kmalloc_index.exit.i, !dbg !2935

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %50 = load i64, i64* %size.addr.i11.i, align 8, !dbg !2936
  %cmp78.i.i = icmp ule i64 %50, 33554432, !dbg !2938
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !2939

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !2940
  br label %kmalloc_index.exit.i, !dbg !2940

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %51 = load i64, i64* %size.addr.i11.i, align 8, !dbg !2941
  %cmp81.i.i = icmp ule i64 %51, 67108864, !dbg !2943
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !2944

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !2945
  br label %kmalloc_index.exit.i, !dbg !2945

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5, i64 0, i64 0), i32 382, i32 0, i64 12) #8, !dbg !2946, !srcloc !2949
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 88) #8, !dbg !2950, !srcloc !2953
  unreachable, !dbg !2954

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %52 = load i32, i32* %retval.i.i, align 4, !dbg !2955
  store i32 %52, i32* %index.i, align 4, !dbg !2956
  %53 = load i32, i32* %index.i, align 4, !dbg !2957
  %tobool.i = icmp ne i32 %53, 0, !dbg !2957
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !2959

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !2960
  br label %kmalloc.exit, !dbg !2960

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %54 = load i32, i32* %flags.addr.i, align 4, !dbg !2961
  store i32 %54, i32* %flags.addr.i13.i, align 4
  %55 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !2962
  %and.i.i = and i32 %55, 17, !dbg !2962
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !2962
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !2962
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !2962
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !2962
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !2964

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !2965
  br label %kmalloc_type.exit.i, !dbg !2965

if.end.i16.i:                                     ; preds = %if.end4.i
  %56 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !2966
  %and2.i.i = and i32 %56, 1, !dbg !2967
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !2966
  %57 = zext i1 %tobool3.i.i to i64, !dbg !2966
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !2966
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !2968
  br label %kmalloc_type.exit.i, !dbg !2968

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %58 = load i32, i32* %retval.i12.i, align 4, !dbg !2969
  %idxprom.i = zext i32 %58 to i64, !dbg !2970
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !2970
  %59 = load i32, i32* %index.i, align 4, !dbg !2971
  %idxprom6.i = zext i32 %59 to i64, !dbg !2970
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !2970
  %60 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !2970
  %61 = load i32, i32* %flags.addr.i, align 4, !dbg !2972
  %62 = load i64, i64* %size.addr.i, align 8, !dbg !2973
  store %struct.kmem_cache* %60, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %61, i32* %flags.addr.i17.i, align 4
  store i64 %62, i64* %size.addr.i18.i, align 8
  %63 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !2974
  %64 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !2975
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %63, i32 %64) #10, !dbg !2976
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !2976
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !2976
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !2976
  call void @llvm.assume(i1 %maskcond.i.i) #8, !dbg !2976
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !2709
  %65 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !2977
  %66 = load i8*, i8** %ret.i.i, align 8, !dbg !2978
  %67 = load i64, i64* %size.addr.i18.i, align 8, !dbg !2979
  %68 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !2980
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %65, i8* %66, i64 %67, i32 %68) #10, !dbg !2981
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !2982
  %69 = load i8*, i8** %ret.i.i, align 8, !dbg !2983
  store i8* %69, i8** %retval.i, align 8, !dbg !2984
  br label %kmalloc.exit, !dbg !2984

if.end9.i:                                        ; preds = %if.end12
  %70 = load i64, i64* %size.addr.i, align 8, !dbg !2985
  %71 = load i32, i32* %flags.addr.i, align 4, !dbg !2986
  %call10.i = call noalias i8* @__kmalloc(i64 %70, i32 %71) #10, !dbg !2987
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !2987
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !2987
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !2987
  call void @llvm.assume(i1 %maskcond.i) #8, !dbg !2987
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !2988
  br label %kmalloc.exit, !dbg !2988

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %72 = load i8*, i8** %retval.i, align 8, !dbg !2989
  store i8* %72, i8** %status, align 8, !dbg !2990
  %73 = load i8*, i8** %status, align 8, !dbg !2991
  %tobool13 = icmp ne i8* %73, null, !dbg !2991
  br i1 %tobool13, label %if.end15, label %if.then14, !dbg !2993

if.then14:                                        ; preds = %kmalloc.exit
  store i32 -12, i32* %retval, align 4, !dbg !2994
  br label %return, !dbg !2994

if.end15:                                         ; preds = %kmalloc.exit
  %74 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !2995
  %75 = load i8*, i8** %status, align 8, !dbg !2996
  %call16 = call i32 @mmc_sd_switch(%struct.mmc_card* %74, i32 1, i32 0, i8 zeroext 1, i8* %75) #11, !dbg !2997
  store i32 %call16, i32* %err, align 4, !dbg !2998
  %76 = load i32, i32* %err, align 4, !dbg !2999
  %tobool17 = icmp ne i32 %76, 0, !dbg !2999
  br i1 %tobool17, label %if.then18, label %if.end19, !dbg !3001

if.then18:                                        ; preds = %if.end15
  br label %out, !dbg !3002

if.end19:                                         ; preds = %if.end15
  %77 = load i8*, i8** %status, align 8, !dbg !3003
  %arrayidx = getelementptr i8, i8* %77, i64 16, !dbg !3003
  %78 = load i8, i8* %arrayidx, align 1, !dbg !3003
  %conv20 = zext i8 %78 to i32, !dbg !3003
  %and21 = and i32 %conv20, 15, !dbg !3005
  %cmp22 = icmp ne i32 %and21, 1, !dbg !3006
  br i1 %cmp22, label %if.then24, label %if.else, !dbg !3007

if.then24:                                        ; preds = %if.end19
  %79 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !3008
  %host25 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %79, i32 0, i32 0, !dbg !3008
  %80 = load %struct.mmc_host*, %struct.mmc_host** %host25, align 8, !dbg !3008
  %class_dev = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %80, i32 0, i32 1, !dbg !3008
  %call26 = call i8* @dev_name(%struct.device* %class_dev) #11, !dbg !3008
  %call27 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str, i64 0, i64 0), i8* %call26) #12, !dbg !3008
  store i32 0, i32* %err, align 4, !dbg !3010
  br label %if.end28, !dbg !3011

if.else:                                          ; preds = %if.end19
  store i32 1, i32* %err, align 4, !dbg !3012
  br label %if.end28

if.end28:                                         ; preds = %if.else, %if.then24
  br label %out, !dbg !3014

out:                                              ; preds = %if.end28, %if.then18
  call void @llvm.dbg.label(metadata !3015), !dbg !3016
  %81 = load i8*, i8** %status, align 8, !dbg !3017
  call void @kfree(i8* %81) #11, !dbg !3018
  %82 = load i32, i32* %err, align 4, !dbg !3019
  store i32 %82, i32* %retval, align 4, !dbg !3020
  br label %return, !dbg !3020

return:                                           ; preds = %out, %if.then14, %if.then11, %if.then7, %if.then3, %if.then
  %83 = load i32, i32* %retval, align 4, !dbg !3021
  ret i32 %83, !dbg !3021
}

; Function Attrs: noredzone
declare dso_local i32 @mmc_sd_switch(%struct.mmc_card*, i32, i32, i8 zeroext, i8*) #2

; Function Attrs: cold noredzone
declare dso_local i32 @printk(i8*, ...) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @dev_name(%struct.device* %dev) #0 !dbg !3022 {
entry:
  %retval = alloca i8*, align 8
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !3027, metadata !DIExpression()), !dbg !3028
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !3029
  %init_name = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !3031
  %1 = load i8*, i8** %init_name, align 8, !dbg !3031
  %tobool = icmp ne i8* %1, null, !dbg !3029
  br i1 %tobool, label %if.then, label %if.end, !dbg !3032

if.then:                                          ; preds = %entry
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !3033
  %init_name1 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 3, !dbg !3034
  %3 = load i8*, i8** %init_name1, align 8, !dbg !3034
  store i8* %3, i8** %retval, align 8, !dbg !3035
  br label %return, !dbg !3035

if.end:                                           ; preds = %entry
  %4 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !3036
  %kobj = getelementptr inbounds %struct.device, %struct.device* %4, i32 0, i32 0, !dbg !3037
  %call = call i8* @kobject_name(%struct.kobject* %kobj) #11, !dbg !3038
  store i8* %call, i8** %retval, align 8, !dbg !3039
  br label %return, !dbg !3039

return:                                           ; preds = %if.end, %if.then
  %5 = load i8*, i8** %retval, align 8, !dbg !3040
  ret i8* %5, !dbg !3040
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: noredzone
declare dso_local void @kfree(i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @mmc_sd_get_cid(%struct.mmc_host* %host, i32 %ocr, i32* %cid, i32* %rocr) #0 !dbg !3041 {
entry:
  %retval = alloca i32, align 4
  %host.addr = alloca %struct.mmc_host*, align 8
  %ocr.addr = alloca i32, align 4
  %cid.addr = alloca i32*, align 8
  %rocr.addr = alloca i32*, align 8
  %err = alloca i32, align 4
  %max_current = alloca i32, align 4
  %retries = alloca i32, align 4
  %pocr = alloca i32, align 4
  store %struct.mmc_host* %host, %struct.mmc_host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %host.addr, metadata !3044, metadata !DIExpression()), !dbg !3045
  store i32 %ocr, i32* %ocr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ocr.addr, metadata !3046, metadata !DIExpression()), !dbg !3047
  store i32* %cid, i32** %cid.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %cid.addr, metadata !3048, metadata !DIExpression()), !dbg !3049
  store i32* %rocr, i32** %rocr.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %rocr.addr, metadata !3050, metadata !DIExpression()), !dbg !3051
  call void @llvm.dbg.declare(metadata i32* %err, metadata !3052, metadata !DIExpression()), !dbg !3053
  call void @llvm.dbg.declare(metadata i32* %max_current, metadata !3054, metadata !DIExpression()), !dbg !3055
  call void @llvm.dbg.declare(metadata i32* %retries, metadata !3056, metadata !DIExpression()), !dbg !3057
  store i32 10, i32* %retries, align 4, !dbg !3057
  call void @llvm.dbg.declare(metadata i32* %pocr, metadata !3058, metadata !DIExpression()), !dbg !3059
  %0 = load i32, i32* %ocr.addr, align 4, !dbg !3060
  store i32 %0, i32* %pocr, align 4, !dbg !3059
  br label %try_again, !dbg !3061

try_again:                                        ; preds = %if.then33, %if.then31, %entry
  call void @llvm.dbg.label(metadata !3062), !dbg !3063
  %1 = load i32, i32* %retries, align 4, !dbg !3064
  %tobool = icmp ne i32 %1, 0, !dbg !3064
  br i1 %tobool, label %if.end, label %if.then, !dbg !3066

if.then:                                          ; preds = %try_again
  %2 = load i32, i32* %ocr.addr, align 4, !dbg !3067
  %and = and i32 %2, -16777217, !dbg !3067
  store i32 %and, i32* %ocr.addr, align 4, !dbg !3067
  %3 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !3069
  %class_dev = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %3, i32 0, i32 1, !dbg !3069
  %call = call i8* @dev_name(%struct.device* %class_dev) #11, !dbg !3069
  %call1 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.1, i64 0, i64 0), i8* %call) #12, !dbg !3069
  br label %if.end, !dbg !3070

if.end:                                           ; preds = %if.then, %try_again
  %4 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !3071
  %call2 = call i32 @mmc_go_idle(%struct.mmc_host* %4) #11, !dbg !3072
  %5 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !3073
  %6 = load i32, i32* %ocr.addr, align 4, !dbg !3074
  %call3 = call i32 @mmc_send_if_cond(%struct.mmc_host* %5, i32 %6) #11, !dbg !3075
  store i32 %call3, i32* %err, align 4, !dbg !3076
  %7 = load i32, i32* %err, align 4, !dbg !3077
  %tobool4 = icmp ne i32 %7, 0, !dbg !3077
  br i1 %tobool4, label %if.end6, label %if.then5, !dbg !3079

if.then5:                                         ; preds = %if.end
  %8 = load i32, i32* %ocr.addr, align 4, !dbg !3080
  %or = or i32 %8, 1073741824, !dbg !3080
  store i32 %or, i32* %ocr.addr, align 4, !dbg !3080
  br label %if.end6, !dbg !3081

if.end6:                                          ; preds = %if.then5, %if.end
  %9 = load i32, i32* %retries, align 4, !dbg !3082
  %tobool7 = icmp ne i32 %9, 0, !dbg !3082
  br i1 %tobool7, label %land.lhs.true, label %if.end12, !dbg !3084

land.lhs.true:                                    ; preds = %if.end6
  %10 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !3085
  %call8 = call i32 @mmc_host_uhs(%struct.mmc_host* %10) #11, !dbg !3086
  %tobool9 = icmp ne i32 %call8, 0, !dbg !3086
  br i1 %tobool9, label %if.then10, label %if.end12, !dbg !3087

if.then10:                                        ; preds = %land.lhs.true
  %11 = load i32, i32* %ocr.addr, align 4, !dbg !3088
  %or11 = or i32 %11, 16777216, !dbg !3088
  store i32 %or11, i32* %ocr.addr, align 4, !dbg !3088
  br label %if.end12, !dbg !3089

if.end12:                                         ; preds = %if.then10, %land.lhs.true, %if.end6
  %12 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !3090
  %call13 = call i32 @sd_get_host_max_current(%struct.mmc_host* %12) #11, !dbg !3091
  store i32 %call13, i32* %max_current, align 4, !dbg !3092
  %13 = load i32, i32* %max_current, align 4, !dbg !3093
  %cmp = icmp ugt i32 %13, 150, !dbg !3095
  br i1 %cmp, label %if.then14, label %if.end16, !dbg !3096

if.then14:                                        ; preds = %if.end12
  %14 = load i32, i32* %ocr.addr, align 4, !dbg !3097
  %or15 = or i32 %14, 268435456, !dbg !3097
  store i32 %or15, i32* %ocr.addr, align 4, !dbg !3097
  br label %if.end16, !dbg !3098

if.end16:                                         ; preds = %if.then14, %if.end12
  %15 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !3099
  %16 = load i32, i32* %ocr.addr, align 4, !dbg !3100
  %17 = load i32*, i32** %rocr.addr, align 8, !dbg !3101
  %call17 = call i32 @mmc_send_app_op_cond(%struct.mmc_host* %15, i32 %16, i32* %17) #11, !dbg !3102
  store i32 %call17, i32* %err, align 4, !dbg !3103
  %18 = load i32, i32* %err, align 4, !dbg !3104
  %tobool18 = icmp ne i32 %18, 0, !dbg !3104
  br i1 %tobool18, label %if.then19, label %if.end20, !dbg !3106

if.then19:                                        ; preds = %if.end16
  %19 = load i32, i32* %err, align 4, !dbg !3107
  store i32 %19, i32* %retval, align 4, !dbg !3108
  br label %return, !dbg !3108

if.end20:                                         ; preds = %if.end16
  %20 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !3109
  %caps = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %20, i32 0, i32 17, !dbg !3109
  %21 = load i32, i32* %caps, align 4, !dbg !3109
  %and21 = and i32 %21, 16, !dbg !3109
  %tobool22 = icmp ne i32 %and21, 0, !dbg !3109
  br i1 %tobool22, label %if.end36, label %land.lhs.true23, !dbg !3111

land.lhs.true23:                                  ; preds = %if.end20
  %22 = load i32*, i32** %rocr.addr, align 8, !dbg !3112
  %tobool24 = icmp ne i32* %22, null, !dbg !3112
  br i1 %tobool24, label %land.lhs.true25, label %if.end36, !dbg !3113

land.lhs.true25:                                  ; preds = %land.lhs.true23
  %23 = load i32*, i32** %rocr.addr, align 8, !dbg !3114
  %24 = load i32, i32* %23, align 4, !dbg !3115
  %and26 = and i32 %24, 1090519040, !dbg !3116
  %cmp27 = icmp eq i32 %and26, 1090519040, !dbg !3117
  br i1 %cmp27, label %if.then28, label %if.end36, !dbg !3118

if.then28:                                        ; preds = %land.lhs.true25
  %25 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !3119
  %26 = load i32, i32* %pocr, align 4, !dbg !3121
  %call29 = call i32 @mmc_set_uhs_voltage(%struct.mmc_host* %25, i32 %26) #11, !dbg !3122
  store i32 %call29, i32* %err, align 4, !dbg !3123
  %27 = load i32, i32* %err, align 4, !dbg !3124
  %cmp30 = icmp eq i32 %27, -11, !dbg !3126
  br i1 %cmp30, label %if.then31, label %if.else, !dbg !3127

if.then31:                                        ; preds = %if.then28
  %28 = load i32, i32* %retries, align 4, !dbg !3128
  %dec = add i32 %28, -1, !dbg !3128
  store i32 %dec, i32* %retries, align 4, !dbg !3128
  br label %try_again, !dbg !3130

if.else:                                          ; preds = %if.then28
  %29 = load i32, i32* %err, align 4, !dbg !3131
  %tobool32 = icmp ne i32 %29, 0, !dbg !3131
  br i1 %tobool32, label %if.then33, label %if.end34, !dbg !3133

if.then33:                                        ; preds = %if.else
  store i32 0, i32* %retries, align 4, !dbg !3134
  br label %try_again, !dbg !3136

if.end34:                                         ; preds = %if.else
  br label %if.end35

if.end35:                                         ; preds = %if.end34
  br label %if.end36, !dbg !3137

if.end36:                                         ; preds = %if.end35, %land.lhs.true25, %land.lhs.true23, %if.end20
  %30 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !3138
  %31 = load i32*, i32** %cid.addr, align 8, !dbg !3139
  %call37 = call i32 @mmc_send_cid(%struct.mmc_host* %30, i32* %31) #11, !dbg !3140
  store i32 %call37, i32* %err, align 4, !dbg !3141
  %32 = load i32, i32* %err, align 4, !dbg !3142
  store i32 %32, i32* %retval, align 4, !dbg !3143
  br label %return, !dbg !3143

return:                                           ; preds = %if.end36, %if.then19
  %33 = load i32, i32* %retval, align 4, !dbg !3144
  ret i32 %33, !dbg !3144
}

; Function Attrs: noredzone
declare dso_local i32 @mmc_go_idle(%struct.mmc_host*) #2

; Function Attrs: noredzone
declare dso_local i32 @mmc_send_if_cond(%struct.mmc_host*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mmc_host_uhs(%struct.mmc_host* %host) #0 !dbg !3145 {
entry:
  %host.addr = alloca %struct.mmc_host*, align 8
  store %struct.mmc_host* %host, %struct.mmc_host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %host.addr, metadata !3147, metadata !DIExpression()), !dbg !3148
  %0 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !3149
  %caps = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %0, i32 0, i32 17, !dbg !3150
  %1 = load i32, i32* %caps, align 4, !dbg !3150
  %and = and i32 %1, 2031616, !dbg !3151
  %tobool = icmp ne i32 %and, 0, !dbg !3151
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !3152

land.rhs:                                         ; preds = %entry
  %2 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !3153
  %caps1 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %2, i32 0, i32 17, !dbg !3154
  %3 = load i32, i32* %caps1, align 4, !dbg !3154
  %and2 = and i32 %3, 1, !dbg !3155
  %tobool3 = icmp ne i32 %and2, 0, !dbg !3152
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %4 = phi i1 [ false, %entry ], [ %tobool3, %land.rhs ], !dbg !3156
  %land.ext = zext i1 %4 to i32, !dbg !3152
  ret i32 %land.ext, !dbg !3157
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @sd_get_host_max_current(%struct.mmc_host* %host) #0 !dbg !3158 {
entry:
  %host.addr = alloca %struct.mmc_host*, align 8
  %voltage = alloca i32, align 4
  %max_current = alloca i32, align 4
  store %struct.mmc_host* %host, %struct.mmc_host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %host.addr, metadata !3161, metadata !DIExpression()), !dbg !3162
  call void @llvm.dbg.declare(metadata i32* %voltage, metadata !3163, metadata !DIExpression()), !dbg !3164
  call void @llvm.dbg.declare(metadata i32* %max_current, metadata !3165, metadata !DIExpression()), !dbg !3166
  %0 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !3167
  %ios = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %0, i32 0, i32 29, !dbg !3168
  %vdd = getelementptr inbounds %struct.mmc_ios, %struct.mmc_ios* %ios, i32 0, i32 1, !dbg !3169
  %1 = load i16, i16* %vdd, align 4, !dbg !3169
  %conv = zext i16 %1 to i32, !dbg !3167
  %shl = shl i32 1, %conv, !dbg !3170
  store i32 %shl, i32* %voltage, align 4, !dbg !3171
  %2 = load i32, i32* %voltage, align 4, !dbg !3172
  switch i32 %2, label %sw.default [
    i32 128, label %sw.bb
    i32 131072, label %sw.bb1
    i32 262144, label %sw.bb1
    i32 1048576, label %sw.bb2
    i32 2097152, label %sw.bb2
  ], !dbg !3173

sw.bb:                                            ; preds = %entry
  %3 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !3174
  %max_current_180 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %3, i32 0, i32 16, !dbg !3176
  %4 = load i32, i32* %max_current_180, align 32, !dbg !3176
  store i32 %4, i32* %max_current, align 4, !dbg !3177
  br label %sw.epilog, !dbg !3178

sw.bb1:                                           ; preds = %entry, %entry
  %5 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !3179
  %max_current_300 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %5, i32 0, i32 15, !dbg !3180
  %6 = load i32, i32* %max_current_300, align 4, !dbg !3180
  store i32 %6, i32* %max_current, align 4, !dbg !3181
  br label %sw.epilog, !dbg !3182

sw.bb2:                                           ; preds = %entry, %entry
  %7 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !3183
  %max_current_330 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %7, i32 0, i32 14, !dbg !3184
  %8 = load i32, i32* %max_current_330, align 8, !dbg !3184
  store i32 %8, i32* %max_current, align 4, !dbg !3185
  br label %sw.epilog, !dbg !3186

sw.default:                                       ; preds = %entry
  store i32 0, i32* %max_current, align 4, !dbg !3187
  br label %sw.epilog, !dbg !3188

sw.epilog:                                        ; preds = %sw.default, %sw.bb2, %sw.bb1, %sw.bb
  %9 = load i32, i32* %max_current, align 4, !dbg !3189
  ret i32 %9, !dbg !3190
}

; Function Attrs: noredzone
declare dso_local i32 @mmc_send_app_op_cond(%struct.mmc_host*, i32, i32*) #2

; Function Attrs: noredzone
declare dso_local i32 @mmc_set_uhs_voltage(%struct.mmc_host*, i32) #2

; Function Attrs: noredzone
declare dso_local i32 @mmc_send_cid(%struct.mmc_host*, i32*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @mmc_sd_get_csd(%struct.mmc_host* %host, %struct.mmc_card* %card) #0 !dbg !3191 {
entry:
  %retval = alloca i32, align 4
  %host.addr = alloca %struct.mmc_host*, align 8
  %card.addr = alloca %struct.mmc_card*, align 8
  %err = alloca i32, align 4
  store %struct.mmc_host* %host, %struct.mmc_host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %host.addr, metadata !3192, metadata !DIExpression()), !dbg !3193
  store %struct.mmc_card* %card, %struct.mmc_card** %card.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card.addr, metadata !3194, metadata !DIExpression()), !dbg !3195
  call void @llvm.dbg.declare(metadata i32* %err, metadata !3196, metadata !DIExpression()), !dbg !3197
  %0 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !3198
  %1 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !3199
  %raw_csd = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %1, i32 0, i32 16, !dbg !3200
  %arraydecay = getelementptr inbounds [4 x i32], [4 x i32]* %raw_csd, i64 0, i64 0, !dbg !3199
  %call = call i32 @mmc_send_csd(%struct.mmc_card* %0, i32* %arraydecay) #11, !dbg !3201
  store i32 %call, i32* %err, align 4, !dbg !3202
  %2 = load i32, i32* %err, align 4, !dbg !3203
  %tobool = icmp ne i32 %2, 0, !dbg !3203
  br i1 %tobool, label %if.then, label %if.end, !dbg !3205

if.then:                                          ; preds = %entry
  %3 = load i32, i32* %err, align 4, !dbg !3206
  store i32 %3, i32* %retval, align 4, !dbg !3207
  br label %return, !dbg !3207

if.end:                                           ; preds = %entry
  %4 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !3208
  %call1 = call i32 @mmc_decode_csd(%struct.mmc_card* %4) #11, !dbg !3209
  store i32 %call1, i32* %err, align 4, !dbg !3210
  %5 = load i32, i32* %err, align 4, !dbg !3211
  %tobool2 = icmp ne i32 %5, 0, !dbg !3211
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !3213

if.then3:                                         ; preds = %if.end
  %6 = load i32, i32* %err, align 4, !dbg !3214
  store i32 %6, i32* %retval, align 4, !dbg !3215
  br label %return, !dbg !3215

if.end4:                                          ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !3216
  br label %return, !dbg !3216

return:                                           ; preds = %if.end4, %if.then3, %if.then
  %7 = load i32, i32* %retval, align 4, !dbg !3217
  ret i32 %7, !dbg !3217
}

; Function Attrs: noredzone
declare dso_local i32 @mmc_send_csd(%struct.mmc_card*, i32*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mmc_decode_csd(%struct.mmc_card* %card) #0 !dbg !3218 {
entry:
  %retval = alloca i32, align 4
  %card.addr = alloca %struct.mmc_card*, align 8
  %csd = alloca %struct.mmc_csd*, align 8
  %e = alloca i32, align 4
  %m = alloca i32, align 4
  %csd_struct = alloca i32, align 4
  %resp = alloca i32*, align 8
  %__size = alloca i32, align 4
  %__mask = alloca i32, align 4
  %__off = alloca i32, align 4
  %__shft = alloca i32, align 4
  %__res = alloca i32, align 4
  %tmp = alloca i32, align 4
  %__size2 = alloca i32, align 4
  %__mask3 = alloca i32, align 4
  %__off4 = alloca i32, align 4
  %__shft5 = alloca i32, align 4
  %__res6 = alloca i32, align 4
  %tmp9 = alloca i32, align 4
  %__size11 = alloca i32, align 4
  %__mask12 = alloca i32, align 4
  %__off13 = alloca i32, align 4
  %__shft14 = alloca i32, align 4
  %__res15 = alloca i32, align 4
  %tmp18 = alloca i32, align 4
  %__size23 = alloca i32, align 4
  %__mask24 = alloca i32, align 4
  %__off25 = alloca i32, align 4
  %__shft26 = alloca i32, align 4
  %__res27 = alloca i32, align 4
  %tmp30 = alloca i32, align 4
  %__size33 = alloca i32, align 4
  %__mask34 = alloca i32, align 4
  %__off35 = alloca i32, align 4
  %__shft36 = alloca i32, align 4
  %__res37 = alloca i32, align 4
  %tmp40 = alloca i32, align 4
  %__size42 = alloca i32, align 4
  %__mask43 = alloca i32, align 4
  %__off44 = alloca i32, align 4
  %__shft45 = alloca i32, align 4
  %__res46 = alloca i32, align 4
  %tmp49 = alloca i32, align 4
  %__size57 = alloca i32, align 4
  %__mask58 = alloca i32, align 4
  %__off59 = alloca i32, align 4
  %__shft60 = alloca i32, align 4
  %__res61 = alloca i32, align 4
  %tmp64 = alloca i32, align 4
  %__size67 = alloca i32, align 4
  %__mask68 = alloca i32, align 4
  %__off69 = alloca i32, align 4
  %__shft70 = alloca i32, align 4
  %__res71 = alloca i32, align 4
  %tmp74 = alloca i32, align 4
  %__size76 = alloca i32, align 4
  %__mask77 = alloca i32, align 4
  %__off78 = alloca i32, align 4
  %__shft79 = alloca i32, align 4
  %__res80 = alloca i32, align 4
  %tmp84 = alloca i32, align 4
  %__size89 = alloca i32, align 4
  %__mask90 = alloca i32, align 4
  %__off91 = alloca i32, align 4
  %__shft92 = alloca i32, align 4
  %__res93 = alloca i32, align 4
  %tmp96 = alloca i32, align 4
  %__size98 = alloca i32, align 4
  %__mask99 = alloca i32, align 4
  %__off100 = alloca i32, align 4
  %__shft101 = alloca i32, align 4
  %__res102 = alloca i32, align 4
  %tmp105 = alloca i32, align 4
  %__size107 = alloca i32, align 4
  %__mask108 = alloca i32, align 4
  %__off109 = alloca i32, align 4
  %__shft110 = alloca i32, align 4
  %__res111 = alloca i32, align 4
  %tmp114 = alloca i32, align 4
  %__size121 = alloca i32, align 4
  %__mask122 = alloca i32, align 4
  %__off123 = alloca i32, align 4
  %__shft124 = alloca i32, align 4
  %__res125 = alloca i32, align 4
  %tmp128 = alloca i32, align 4
  %__size136 = alloca i32, align 4
  %__mask137 = alloca i32, align 4
  %__off138 = alloca i32, align 4
  %__shft139 = alloca i32, align 4
  %__res140 = alloca i32, align 4
  %tmp143 = alloca i32, align 4
  %__size151 = alloca i32, align 4
  %__mask152 = alloca i32, align 4
  %__off153 = alloca i32, align 4
  %__shft154 = alloca i32, align 4
  %__res155 = alloca i32, align 4
  %tmp158 = alloca i32, align 4
  %__size160 = alloca i32, align 4
  %__mask161 = alloca i32, align 4
  %__off162 = alloca i32, align 4
  %__shft163 = alloca i32, align 4
  %__res164 = alloca i32, align 4
  %tmp167 = alloca i32, align 4
  %__size169 = alloca i32, align 4
  %__mask170 = alloca i32, align 4
  %__off171 = alloca i32, align 4
  %__shft172 = alloca i32, align 4
  %__res173 = alloca i32, align 4
  %tmp176 = alloca i32, align 4
  %__size184 = alloca i32, align 4
  %__mask185 = alloca i32, align 4
  %__off186 = alloca i32, align 4
  %__shft187 = alloca i32, align 4
  %__res188 = alloca i32, align 4
  %tmp191 = alloca i32, align 4
  %__size196 = alloca i32, align 4
  %__mask197 = alloca i32, align 4
  %__off198 = alloca i32, align 4
  %__shft199 = alloca i32, align 4
  %__res200 = alloca i32, align 4
  %tmp203 = alloca i32, align 4
  %__size215 = alloca i32, align 4
  %__mask216 = alloca i32, align 4
  %__off217 = alloca i32, align 4
  %__shft218 = alloca i32, align 4
  %__res219 = alloca i32, align 4
  %tmp222 = alloca i32, align 4
  %__size224 = alloca i32, align 4
  %__mask225 = alloca i32, align 4
  %__off226 = alloca i32, align 4
  %__shft227 = alloca i32, align 4
  %__res228 = alloca i32, align 4
  %tmp231 = alloca i32, align 4
  %__size240 = alloca i32, align 4
  %__mask241 = alloca i32, align 4
  %__off242 = alloca i32, align 4
  %__shft243 = alloca i32, align 4
  %__res244 = alloca i32, align 4
  %tmp247 = alloca i32, align 4
  %__size251 = alloca i32, align 4
  %__mask252 = alloca i32, align 4
  %__off253 = alloca i32, align 4
  %__shft254 = alloca i32, align 4
  %__res255 = alloca i32, align 4
  %tmp261 = alloca i32, align 4
  %__size270 = alloca i32, align 4
  %__mask271 = alloca i32, align 4
  %__off272 = alloca i32, align 4
  %__shft273 = alloca i32, align 4
  %__res274 = alloca i32, align 4
  %tmp280 = alloca i32, align 4
  store %struct.mmc_card* %card, %struct.mmc_card** %card.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card.addr, metadata !3219, metadata !DIExpression()), !dbg !3220
  call void @llvm.dbg.declare(metadata %struct.mmc_csd** %csd, metadata !3221, metadata !DIExpression()), !dbg !3223
  %0 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !3224
  %csd1 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %0, i32 0, i32 20, !dbg !3225
  store %struct.mmc_csd* %csd1, %struct.mmc_csd** %csd, align 8, !dbg !3223
  call void @llvm.dbg.declare(metadata i32* %e, metadata !3226, metadata !DIExpression()), !dbg !3227
  call void @llvm.dbg.declare(metadata i32* %m, metadata !3228, metadata !DIExpression()), !dbg !3229
  call void @llvm.dbg.declare(metadata i32* %csd_struct, metadata !3230, metadata !DIExpression()), !dbg !3231
  call void @llvm.dbg.declare(metadata i32** %resp, metadata !3232, metadata !DIExpression()), !dbg !3233
  %1 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !3234
  %raw_csd = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %1, i32 0, i32 16, !dbg !3235
  %arraydecay = getelementptr inbounds [4 x i32], [4 x i32]* %raw_csd, i64 0, i64 0, !dbg !3234
  store i32* %arraydecay, i32** %resp, align 8, !dbg !3233
  call void @llvm.dbg.declare(metadata i32* %__size, metadata !3236, metadata !DIExpression()), !dbg !3238
  store i32 2, i32* %__size, align 4, !dbg !3238
  call void @llvm.dbg.declare(metadata i32* %__mask, metadata !3239, metadata !DIExpression()), !dbg !3238
  store i32 3, i32* %__mask, align 4, !dbg !3238
  call void @llvm.dbg.declare(metadata i32* %__off, metadata !3240, metadata !DIExpression()), !dbg !3238
  store i32 0, i32* %__off, align 4, !dbg !3238
  call void @llvm.dbg.declare(metadata i32* %__shft, metadata !3241, metadata !DIExpression()), !dbg !3238
  store i32 30, i32* %__shft, align 4, !dbg !3238
  call void @llvm.dbg.declare(metadata i32* %__res, metadata !3242, metadata !DIExpression()), !dbg !3238
  %2 = load i32*, i32** %resp, align 8, !dbg !3238
  %arrayidx = getelementptr i32, i32* %2, i64 0, !dbg !3238
  %3 = load i32, i32* %arrayidx, align 4, !dbg !3238
  %shr = lshr i32 %3, 30, !dbg !3238
  store i32 %shr, i32* %__res, align 4, !dbg !3238
  %4 = load i32, i32* %__res, align 4, !dbg !3238
  %and = and i32 %4, 3, !dbg !3238
  store i32 %and, i32* %tmp, align 4, !dbg !3243
  %5 = load i32, i32* %tmp, align 4, !dbg !3238
  store i32 %5, i32* %csd_struct, align 4, !dbg !3245
  %6 = load i32, i32* %csd_struct, align 4, !dbg !3246
  switch i32 %6, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb211
  ], !dbg !3247

sw.bb:                                            ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %__size2, metadata !3248, metadata !DIExpression()), !dbg !3251
  store i32 4, i32* %__size2, align 4, !dbg !3251
  call void @llvm.dbg.declare(metadata i32* %__mask3, metadata !3252, metadata !DIExpression()), !dbg !3251
  store i32 15, i32* %__mask3, align 4, !dbg !3251
  call void @llvm.dbg.declare(metadata i32* %__off4, metadata !3253, metadata !DIExpression()), !dbg !3251
  store i32 0, i32* %__off4, align 4, !dbg !3251
  call void @llvm.dbg.declare(metadata i32* %__shft5, metadata !3254, metadata !DIExpression()), !dbg !3251
  store i32 19, i32* %__shft5, align 4, !dbg !3251
  call void @llvm.dbg.declare(metadata i32* %__res6, metadata !3255, metadata !DIExpression()), !dbg !3251
  %7 = load i32*, i32** %resp, align 8, !dbg !3251
  %arrayidx7 = getelementptr i32, i32* %7, i64 0, !dbg !3251
  %8 = load i32, i32* %arrayidx7, align 4, !dbg !3251
  %shr8 = lshr i32 %8, 19, !dbg !3251
  store i32 %shr8, i32* %__res6, align 4, !dbg !3251
  %9 = load i32, i32* %__res6, align 4, !dbg !3251
  %and10 = and i32 %9, 15, !dbg !3251
  store i32 %and10, i32* %tmp9, align 4, !dbg !3256
  %10 = load i32, i32* %tmp9, align 4, !dbg !3251
  store i32 %10, i32* %m, align 4, !dbg !3258
  call void @llvm.dbg.declare(metadata i32* %__size11, metadata !3259, metadata !DIExpression()), !dbg !3261
  store i32 3, i32* %__size11, align 4, !dbg !3261
  call void @llvm.dbg.declare(metadata i32* %__mask12, metadata !3262, metadata !DIExpression()), !dbg !3261
  store i32 7, i32* %__mask12, align 4, !dbg !3261
  call void @llvm.dbg.declare(metadata i32* %__off13, metadata !3263, metadata !DIExpression()), !dbg !3261
  store i32 0, i32* %__off13, align 4, !dbg !3261
  call void @llvm.dbg.declare(metadata i32* %__shft14, metadata !3264, metadata !DIExpression()), !dbg !3261
  store i32 16, i32* %__shft14, align 4, !dbg !3261
  call void @llvm.dbg.declare(metadata i32* %__res15, metadata !3265, metadata !DIExpression()), !dbg !3261
  %11 = load i32*, i32** %resp, align 8, !dbg !3261
  %arrayidx16 = getelementptr i32, i32* %11, i64 0, !dbg !3261
  %12 = load i32, i32* %arrayidx16, align 4, !dbg !3261
  %shr17 = lshr i32 %12, 16, !dbg !3261
  store i32 %shr17, i32* %__res15, align 4, !dbg !3261
  %13 = load i32, i32* %__res15, align 4, !dbg !3261
  %and19 = and i32 %13, 7, !dbg !3261
  store i32 %and19, i32* %tmp18, align 4, !dbg !3266
  %14 = load i32, i32* %tmp18, align 4, !dbg !3261
  store i32 %14, i32* %e, align 4, !dbg !3268
  %15 = load i32, i32* %e, align 4, !dbg !3269
  %idxprom = zext i32 %15 to i64, !dbg !3270
  %arrayidx20 = getelementptr [8 x i32], [8 x i32]* @taac_exp, i64 0, i64 %idxprom, !dbg !3270
  %16 = load i32, i32* %arrayidx20, align 4, !dbg !3270
  %17 = load i32, i32* %m, align 4, !dbg !3271
  %idxprom21 = zext i32 %17 to i64, !dbg !3272
  %arrayidx22 = getelementptr [16 x i32], [16 x i32]* @taac_mant, i64 0, i64 %idxprom21, !dbg !3272
  %18 = load i32, i32* %arrayidx22, align 4, !dbg !3272
  %mul = mul i32 %16, %18, !dbg !3273
  %add = add i32 %mul, 9, !dbg !3274
  %div = udiv i32 %add, 10, !dbg !3275
  %19 = load %struct.mmc_csd*, %struct.mmc_csd** %csd, align 8, !dbg !3276
  %taac_ns = getelementptr inbounds %struct.mmc_csd, %struct.mmc_csd* %19, i32 0, i32 4, !dbg !3277
  store i32 %div, i32* %taac_ns, align 4, !dbg !3278
  call void @llvm.dbg.declare(metadata i32* %__size23, metadata !3279, metadata !DIExpression()), !dbg !3281
  store i32 8, i32* %__size23, align 4, !dbg !3281
  call void @llvm.dbg.declare(metadata i32* %__mask24, metadata !3282, metadata !DIExpression()), !dbg !3281
  store i32 255, i32* %__mask24, align 4, !dbg !3281
  call void @llvm.dbg.declare(metadata i32* %__off25, metadata !3283, metadata !DIExpression()), !dbg !3281
  store i32 0, i32* %__off25, align 4, !dbg !3281
  call void @llvm.dbg.declare(metadata i32* %__shft26, metadata !3284, metadata !DIExpression()), !dbg !3281
  store i32 8, i32* %__shft26, align 4, !dbg !3281
  call void @llvm.dbg.declare(metadata i32* %__res27, metadata !3285, metadata !DIExpression()), !dbg !3281
  %20 = load i32*, i32** %resp, align 8, !dbg !3281
  %arrayidx28 = getelementptr i32, i32* %20, i64 0, !dbg !3281
  %21 = load i32, i32* %arrayidx28, align 4, !dbg !3281
  %shr29 = lshr i32 %21, 8, !dbg !3281
  store i32 %shr29, i32* %__res27, align 4, !dbg !3281
  %22 = load i32, i32* %__res27, align 4, !dbg !3281
  %and31 = and i32 %22, 255, !dbg !3281
  store i32 %and31, i32* %tmp30, align 4, !dbg !3286
  %23 = load i32, i32* %tmp30, align 4, !dbg !3281
  %mul32 = mul i32 %23, 100, !dbg !3288
  %conv = trunc i32 %mul32 to i16, !dbg !3289
  %24 = load %struct.mmc_csd*, %struct.mmc_csd** %csd, align 8, !dbg !3290
  %taac_clks = getelementptr inbounds %struct.mmc_csd, %struct.mmc_csd* %24, i32 0, i32 3, !dbg !3291
  store i16 %conv, i16* %taac_clks, align 4, !dbg !3292
  call void @llvm.dbg.declare(metadata i32* %__size33, metadata !3293, metadata !DIExpression()), !dbg !3295
  store i32 4, i32* %__size33, align 4, !dbg !3295
  call void @llvm.dbg.declare(metadata i32* %__mask34, metadata !3296, metadata !DIExpression()), !dbg !3295
  store i32 15, i32* %__mask34, align 4, !dbg !3295
  call void @llvm.dbg.declare(metadata i32* %__off35, metadata !3297, metadata !DIExpression()), !dbg !3295
  store i32 0, i32* %__off35, align 4, !dbg !3295
  call void @llvm.dbg.declare(metadata i32* %__shft36, metadata !3298, metadata !DIExpression()), !dbg !3295
  store i32 3, i32* %__shft36, align 4, !dbg !3295
  call void @llvm.dbg.declare(metadata i32* %__res37, metadata !3299, metadata !DIExpression()), !dbg !3295
  %25 = load i32*, i32** %resp, align 8, !dbg !3295
  %arrayidx38 = getelementptr i32, i32* %25, i64 0, !dbg !3295
  %26 = load i32, i32* %arrayidx38, align 4, !dbg !3295
  %shr39 = lshr i32 %26, 3, !dbg !3295
  store i32 %shr39, i32* %__res37, align 4, !dbg !3295
  %27 = load i32, i32* %__res37, align 4, !dbg !3295
  %and41 = and i32 %27, 15, !dbg !3295
  store i32 %and41, i32* %tmp40, align 4, !dbg !3300
  %28 = load i32, i32* %tmp40, align 4, !dbg !3295
  store i32 %28, i32* %m, align 4, !dbg !3302
  call void @llvm.dbg.declare(metadata i32* %__size42, metadata !3303, metadata !DIExpression()), !dbg !3305
  store i32 3, i32* %__size42, align 4, !dbg !3305
  call void @llvm.dbg.declare(metadata i32* %__mask43, metadata !3306, metadata !DIExpression()), !dbg !3305
  store i32 7, i32* %__mask43, align 4, !dbg !3305
  call void @llvm.dbg.declare(metadata i32* %__off44, metadata !3307, metadata !DIExpression()), !dbg !3305
  store i32 0, i32* %__off44, align 4, !dbg !3305
  call void @llvm.dbg.declare(metadata i32* %__shft45, metadata !3308, metadata !DIExpression()), !dbg !3305
  store i32 0, i32* %__shft45, align 4, !dbg !3305
  call void @llvm.dbg.declare(metadata i32* %__res46, metadata !3309, metadata !DIExpression()), !dbg !3305
  %29 = load i32*, i32** %resp, align 8, !dbg !3305
  %arrayidx47 = getelementptr i32, i32* %29, i64 0, !dbg !3305
  %30 = load i32, i32* %arrayidx47, align 4, !dbg !3305
  %shr48 = lshr i32 %30, 0, !dbg !3305
  store i32 %shr48, i32* %__res46, align 4, !dbg !3305
  %31 = load i32, i32* %__res46, align 4, !dbg !3305
  %and50 = and i32 %31, 7, !dbg !3305
  store i32 %and50, i32* %tmp49, align 4, !dbg !3310
  %32 = load i32, i32* %tmp49, align 4, !dbg !3305
  store i32 %32, i32* %e, align 4, !dbg !3312
  %33 = load i32, i32* %e, align 4, !dbg !3313
  %idxprom51 = zext i32 %33 to i64, !dbg !3314
  %arrayidx52 = getelementptr [8 x i32], [8 x i32]* @tran_exp, i64 0, i64 %idxprom51, !dbg !3314
  %34 = load i32, i32* %arrayidx52, align 4, !dbg !3314
  %35 = load i32, i32* %m, align 4, !dbg !3315
  %idxprom53 = zext i32 %35 to i64, !dbg !3316
  %arrayidx54 = getelementptr [16 x i8], [16 x i8]* @tran_mant, i64 0, i64 %idxprom53, !dbg !3316
  %36 = load i8, i8* %arrayidx54, align 1, !dbg !3316
  %conv55 = zext i8 %36 to i32, !dbg !3316
  %mul56 = mul i32 %34, %conv55, !dbg !3317
  %37 = load %struct.mmc_csd*, %struct.mmc_csd** %csd, align 8, !dbg !3318
  %max_dtr = getelementptr inbounds %struct.mmc_csd, %struct.mmc_csd* %37, i32 0, i32 7, !dbg !3319
  store i32 %mul56, i32* %max_dtr, align 4, !dbg !3320
  call void @llvm.dbg.declare(metadata i32* %__size57, metadata !3321, metadata !DIExpression()), !dbg !3323
  store i32 12, i32* %__size57, align 4, !dbg !3323
  call void @llvm.dbg.declare(metadata i32* %__mask58, metadata !3324, metadata !DIExpression()), !dbg !3323
  store i32 4095, i32* %__mask58, align 4, !dbg !3323
  call void @llvm.dbg.declare(metadata i32* %__off59, metadata !3325, metadata !DIExpression()), !dbg !3323
  store i32 1, i32* %__off59, align 4, !dbg !3323
  call void @llvm.dbg.declare(metadata i32* %__shft60, metadata !3326, metadata !DIExpression()), !dbg !3323
  store i32 20, i32* %__shft60, align 4, !dbg !3323
  call void @llvm.dbg.declare(metadata i32* %__res61, metadata !3327, metadata !DIExpression()), !dbg !3323
  %38 = load i32*, i32** %resp, align 8, !dbg !3323
  %arrayidx62 = getelementptr i32, i32* %38, i64 1, !dbg !3323
  %39 = load i32, i32* %arrayidx62, align 4, !dbg !3323
  %shr63 = lshr i32 %39, 20, !dbg !3323
  store i32 %shr63, i32* %__res61, align 4, !dbg !3323
  %40 = load i32, i32* %__res61, align 4, !dbg !3323
  %and65 = and i32 %40, 4095, !dbg !3323
  store i32 %and65, i32* %tmp64, align 4, !dbg !3328
  %41 = load i32, i32* %tmp64, align 4, !dbg !3323
  %conv66 = trunc i32 %41 to i16, !dbg !3330
  %42 = load %struct.mmc_csd*, %struct.mmc_csd** %csd, align 8, !dbg !3331
  %cmdclass = getelementptr inbounds %struct.mmc_csd, %struct.mmc_csd* %42, i32 0, i32 2, !dbg !3332
  store i16 %conv66, i16* %cmdclass, align 2, !dbg !3333
  call void @llvm.dbg.declare(metadata i32* %__size67, metadata !3334, metadata !DIExpression()), !dbg !3336
  store i32 3, i32* %__size67, align 4, !dbg !3336
  call void @llvm.dbg.declare(metadata i32* %__mask68, metadata !3337, metadata !DIExpression()), !dbg !3336
  store i32 7, i32* %__mask68, align 4, !dbg !3336
  call void @llvm.dbg.declare(metadata i32* %__off69, metadata !3338, metadata !DIExpression()), !dbg !3336
  store i32 2, i32* %__off69, align 4, !dbg !3336
  call void @llvm.dbg.declare(metadata i32* %__shft70, metadata !3339, metadata !DIExpression()), !dbg !3336
  store i32 15, i32* %__shft70, align 4, !dbg !3336
  call void @llvm.dbg.declare(metadata i32* %__res71, metadata !3340, metadata !DIExpression()), !dbg !3336
  %43 = load i32*, i32** %resp, align 8, !dbg !3336
  %arrayidx72 = getelementptr i32, i32* %43, i64 2, !dbg !3336
  %44 = load i32, i32* %arrayidx72, align 4, !dbg !3336
  %shr73 = lshr i32 %44, 15, !dbg !3336
  store i32 %shr73, i32* %__res71, align 4, !dbg !3336
  %45 = load i32, i32* %__res71, align 4, !dbg !3336
  %and75 = and i32 %45, 7, !dbg !3336
  store i32 %and75, i32* %tmp74, align 4, !dbg !3341
  %46 = load i32, i32* %tmp74, align 4, !dbg !3336
  store i32 %46, i32* %e, align 4, !dbg !3343
  call void @llvm.dbg.declare(metadata i32* %__size76, metadata !3344, metadata !DIExpression()), !dbg !3346
  store i32 12, i32* %__size76, align 4, !dbg !3346
  call void @llvm.dbg.declare(metadata i32* %__mask77, metadata !3347, metadata !DIExpression()), !dbg !3346
  store i32 4095, i32* %__mask77, align 4, !dbg !3346
  call void @llvm.dbg.declare(metadata i32* %__off78, metadata !3348, metadata !DIExpression()), !dbg !3346
  store i32 2, i32* %__off78, align 4, !dbg !3346
  call void @llvm.dbg.declare(metadata i32* %__shft79, metadata !3349, metadata !DIExpression()), !dbg !3346
  store i32 30, i32* %__shft79, align 4, !dbg !3346
  call void @llvm.dbg.declare(metadata i32* %__res80, metadata !3350, metadata !DIExpression()), !dbg !3346
  %47 = load i32*, i32** %resp, align 8, !dbg !3346
  %arrayidx81 = getelementptr i32, i32* %47, i64 2, !dbg !3346
  %48 = load i32, i32* %arrayidx81, align 4, !dbg !3346
  %shr82 = lshr i32 %48, 30, !dbg !3346
  store i32 %shr82, i32* %__res80, align 4, !dbg !3346
  %49 = load i32*, i32** %resp, align 8, !dbg !3351
  %arrayidx83 = getelementptr i32, i32* %49, i64 1, !dbg !3351
  %50 = load i32, i32* %arrayidx83, align 4, !dbg !3351
  %shl = shl i32 %50, 2, !dbg !3351
  %51 = load i32, i32* %__res80, align 4, !dbg !3351
  %or = or i32 %51, %shl, !dbg !3351
  store i32 %or, i32* %__res80, align 4, !dbg !3351
  %52 = load i32, i32* %__res80, align 4, !dbg !3346
  %and85 = and i32 %52, 4095, !dbg !3346
  store i32 %and85, i32* %tmp84, align 4, !dbg !3351
  %53 = load i32, i32* %tmp84, align 4, !dbg !3346
  store i32 %53, i32* %m, align 4, !dbg !3353
  %54 = load i32, i32* %m, align 4, !dbg !3354
  %add86 = add i32 1, %54, !dbg !3355
  %55 = load i32, i32* %e, align 4, !dbg !3356
  %add87 = add i32 %55, 2, !dbg !3357
  %shl88 = shl i32 %add86, %add87, !dbg !3358
  %56 = load %struct.mmc_csd*, %struct.mmc_csd** %csd, align 8, !dbg !3359
  %capacity = getelementptr inbounds %struct.mmc_csd, %struct.mmc_csd* %56, i32 0, i32 11, !dbg !3360
  store i32 %shl88, i32* %capacity, align 4, !dbg !3361
  call void @llvm.dbg.declare(metadata i32* %__size89, metadata !3362, metadata !DIExpression()), !dbg !3364
  store i32 4, i32* %__size89, align 4, !dbg !3364
  call void @llvm.dbg.declare(metadata i32* %__mask90, metadata !3365, metadata !DIExpression()), !dbg !3364
  store i32 15, i32* %__mask90, align 4, !dbg !3364
  call void @llvm.dbg.declare(metadata i32* %__off91, metadata !3366, metadata !DIExpression()), !dbg !3364
  store i32 1, i32* %__off91, align 4, !dbg !3364
  call void @llvm.dbg.declare(metadata i32* %__shft92, metadata !3367, metadata !DIExpression()), !dbg !3364
  store i32 16, i32* %__shft92, align 4, !dbg !3364
  call void @llvm.dbg.declare(metadata i32* %__res93, metadata !3368, metadata !DIExpression()), !dbg !3364
  %57 = load i32*, i32** %resp, align 8, !dbg !3364
  %arrayidx94 = getelementptr i32, i32* %57, i64 1, !dbg !3364
  %58 = load i32, i32* %arrayidx94, align 4, !dbg !3364
  %shr95 = lshr i32 %58, 16, !dbg !3364
  store i32 %shr95, i32* %__res93, align 4, !dbg !3364
  %59 = load i32, i32* %__res93, align 4, !dbg !3364
  %and97 = and i32 %59, 15, !dbg !3364
  store i32 %and97, i32* %tmp96, align 4, !dbg !3369
  %60 = load i32, i32* %tmp96, align 4, !dbg !3364
  %61 = load %struct.mmc_csd*, %struct.mmc_csd** %csd, align 8, !dbg !3371
  %read_blkbits = getelementptr inbounds %struct.mmc_csd, %struct.mmc_csd* %61, i32 0, i32 9, !dbg !3372
  store i32 %60, i32* %read_blkbits, align 4, !dbg !3373
  call void @llvm.dbg.declare(metadata i32* %__size98, metadata !3374, metadata !DIExpression()), !dbg !3376
  store i32 1, i32* %__size98, align 4, !dbg !3376
  call void @llvm.dbg.declare(metadata i32* %__mask99, metadata !3377, metadata !DIExpression()), !dbg !3376
  store i32 1, i32* %__mask99, align 4, !dbg !3376
  call void @llvm.dbg.declare(metadata i32* %__off100, metadata !3378, metadata !DIExpression()), !dbg !3376
  store i32 1, i32* %__off100, align 4, !dbg !3376
  call void @llvm.dbg.declare(metadata i32* %__shft101, metadata !3379, metadata !DIExpression()), !dbg !3376
  store i32 15, i32* %__shft101, align 4, !dbg !3376
  call void @llvm.dbg.declare(metadata i32* %__res102, metadata !3380, metadata !DIExpression()), !dbg !3376
  %62 = load i32*, i32** %resp, align 8, !dbg !3376
  %arrayidx103 = getelementptr i32, i32* %62, i64 1, !dbg !3376
  %63 = load i32, i32* %arrayidx103, align 4, !dbg !3376
  %shr104 = lshr i32 %63, 15, !dbg !3376
  store i32 %shr104, i32* %__res102, align 4, !dbg !3376
  %64 = load i32, i32* %__res102, align 4, !dbg !3376
  %and106 = and i32 %64, 1, !dbg !3376
  store i32 %and106, i32* %tmp105, align 4, !dbg !3381
  %65 = load i32, i32* %tmp105, align 4, !dbg !3376
  %66 = load %struct.mmc_csd*, %struct.mmc_csd** %csd, align 8, !dbg !3383
  %read_partial = getelementptr inbounds %struct.mmc_csd, %struct.mmc_csd* %66, i32 0, i32 12, !dbg !3384
  %67 = trunc i32 %65 to i8, !dbg !3385
  %bf.load = load i8, i8* %read_partial, align 4, !dbg !3385
  %bf.value = and i8 %67, 1, !dbg !3385
  %bf.clear = and i8 %bf.load, -2, !dbg !3385
  %bf.set = or i8 %bf.clear, %bf.value, !dbg !3385
  store i8 %bf.set, i8* %read_partial, align 4, !dbg !3385
  %bf.result.cast = zext i8 %bf.value to i32, !dbg !3385
  call void @llvm.dbg.declare(metadata i32* %__size107, metadata !3386, metadata !DIExpression()), !dbg !3388
  store i32 1, i32* %__size107, align 4, !dbg !3388
  call void @llvm.dbg.declare(metadata i32* %__mask108, metadata !3389, metadata !DIExpression()), !dbg !3388
  store i32 1, i32* %__mask108, align 4, !dbg !3388
  call void @llvm.dbg.declare(metadata i32* %__off109, metadata !3390, metadata !DIExpression()), !dbg !3388
  store i32 1, i32* %__off109, align 4, !dbg !3388
  call void @llvm.dbg.declare(metadata i32* %__shft110, metadata !3391, metadata !DIExpression()), !dbg !3388
  store i32 14, i32* %__shft110, align 4, !dbg !3388
  call void @llvm.dbg.declare(metadata i32* %__res111, metadata !3392, metadata !DIExpression()), !dbg !3388
  %68 = load i32*, i32** %resp, align 8, !dbg !3388
  %arrayidx112 = getelementptr i32, i32* %68, i64 1, !dbg !3388
  %69 = load i32, i32* %arrayidx112, align 4, !dbg !3388
  %shr113 = lshr i32 %69, 14, !dbg !3388
  store i32 %shr113, i32* %__res111, align 4, !dbg !3388
  %70 = load i32, i32* %__res111, align 4, !dbg !3388
  %and115 = and i32 %70, 1, !dbg !3388
  store i32 %and115, i32* %tmp114, align 4, !dbg !3393
  %71 = load i32, i32* %tmp114, align 4, !dbg !3388
  %72 = load %struct.mmc_csd*, %struct.mmc_csd** %csd, align 8, !dbg !3395
  %write_misalign = getelementptr inbounds %struct.mmc_csd, %struct.mmc_csd* %72, i32 0, i32 12, !dbg !3396
  %73 = trunc i32 %71 to i8, !dbg !3397
  %bf.load116 = load i8, i8* %write_misalign, align 4, !dbg !3397
  %bf.value117 = and i8 %73, 1, !dbg !3397
  %bf.shl = shl i8 %bf.value117, 3, !dbg !3397
  %bf.clear118 = and i8 %bf.load116, -9, !dbg !3397
  %bf.set119 = or i8 %bf.clear118, %bf.shl, !dbg !3397
  store i8 %bf.set119, i8* %write_misalign, align 4, !dbg !3397
  %bf.result.cast120 = zext i8 %bf.value117 to i32, !dbg !3397
  call void @llvm.dbg.declare(metadata i32* %__size121, metadata !3398, metadata !DIExpression()), !dbg !3400
  store i32 1, i32* %__size121, align 4, !dbg !3400
  call void @llvm.dbg.declare(metadata i32* %__mask122, metadata !3401, metadata !DIExpression()), !dbg !3400
  store i32 1, i32* %__mask122, align 4, !dbg !3400
  call void @llvm.dbg.declare(metadata i32* %__off123, metadata !3402, metadata !DIExpression()), !dbg !3400
  store i32 1, i32* %__off123, align 4, !dbg !3400
  call void @llvm.dbg.declare(metadata i32* %__shft124, metadata !3403, metadata !DIExpression()), !dbg !3400
  store i32 13, i32* %__shft124, align 4, !dbg !3400
  call void @llvm.dbg.declare(metadata i32* %__res125, metadata !3404, metadata !DIExpression()), !dbg !3400
  %74 = load i32*, i32** %resp, align 8, !dbg !3400
  %arrayidx126 = getelementptr i32, i32* %74, i64 1, !dbg !3400
  %75 = load i32, i32* %arrayidx126, align 4, !dbg !3400
  %shr127 = lshr i32 %75, 13, !dbg !3400
  store i32 %shr127, i32* %__res125, align 4, !dbg !3400
  %76 = load i32, i32* %__res125, align 4, !dbg !3400
  %and129 = and i32 %76, 1, !dbg !3400
  store i32 %and129, i32* %tmp128, align 4, !dbg !3405
  %77 = load i32, i32* %tmp128, align 4, !dbg !3400
  %78 = load %struct.mmc_csd*, %struct.mmc_csd** %csd, align 8, !dbg !3407
  %read_misalign = getelementptr inbounds %struct.mmc_csd, %struct.mmc_csd* %78, i32 0, i32 12, !dbg !3408
  %79 = trunc i32 %77 to i8, !dbg !3409
  %bf.load130 = load i8, i8* %read_misalign, align 4, !dbg !3409
  %bf.value131 = and i8 %79, 1, !dbg !3409
  %bf.shl132 = shl i8 %bf.value131, 1, !dbg !3409
  %bf.clear133 = and i8 %bf.load130, -3, !dbg !3409
  %bf.set134 = or i8 %bf.clear133, %bf.shl132, !dbg !3409
  store i8 %bf.set134, i8* %read_misalign, align 4, !dbg !3409
  %bf.result.cast135 = zext i8 %bf.value131 to i32, !dbg !3409
  call void @llvm.dbg.declare(metadata i32* %__size136, metadata !3410, metadata !DIExpression()), !dbg !3412
  store i32 1, i32* %__size136, align 4, !dbg !3412
  call void @llvm.dbg.declare(metadata i32* %__mask137, metadata !3413, metadata !DIExpression()), !dbg !3412
  store i32 1, i32* %__mask137, align 4, !dbg !3412
  call void @llvm.dbg.declare(metadata i32* %__off138, metadata !3414, metadata !DIExpression()), !dbg !3412
  store i32 1, i32* %__off138, align 4, !dbg !3412
  call void @llvm.dbg.declare(metadata i32* %__shft139, metadata !3415, metadata !DIExpression()), !dbg !3412
  store i32 12, i32* %__shft139, align 4, !dbg !3412
  call void @llvm.dbg.declare(metadata i32* %__res140, metadata !3416, metadata !DIExpression()), !dbg !3412
  %80 = load i32*, i32** %resp, align 8, !dbg !3412
  %arrayidx141 = getelementptr i32, i32* %80, i64 1, !dbg !3412
  %81 = load i32, i32* %arrayidx141, align 4, !dbg !3412
  %shr142 = lshr i32 %81, 12, !dbg !3412
  store i32 %shr142, i32* %__res140, align 4, !dbg !3412
  %82 = load i32, i32* %__res140, align 4, !dbg !3412
  %and144 = and i32 %82, 1, !dbg !3412
  store i32 %and144, i32* %tmp143, align 4, !dbg !3417
  %83 = load i32, i32* %tmp143, align 4, !dbg !3412
  %84 = load %struct.mmc_csd*, %struct.mmc_csd** %csd, align 8, !dbg !3419
  %dsr_imp = getelementptr inbounds %struct.mmc_csd, %struct.mmc_csd* %84, i32 0, i32 12, !dbg !3420
  %85 = trunc i32 %83 to i8, !dbg !3421
  %bf.load145 = load i8, i8* %dsr_imp, align 4, !dbg !3421
  %bf.value146 = and i8 %85, 1, !dbg !3421
  %bf.shl147 = shl i8 %bf.value146, 4, !dbg !3421
  %bf.clear148 = and i8 %bf.load145, -17, !dbg !3421
  %bf.set149 = or i8 %bf.clear148, %bf.shl147, !dbg !3421
  store i8 %bf.set149, i8* %dsr_imp, align 4, !dbg !3421
  %bf.result.cast150 = zext i8 %bf.value146 to i32, !dbg !3421
  call void @llvm.dbg.declare(metadata i32* %__size151, metadata !3422, metadata !DIExpression()), !dbg !3424
  store i32 3, i32* %__size151, align 4, !dbg !3424
  call void @llvm.dbg.declare(metadata i32* %__mask152, metadata !3425, metadata !DIExpression()), !dbg !3424
  store i32 7, i32* %__mask152, align 4, !dbg !3424
  call void @llvm.dbg.declare(metadata i32* %__off153, metadata !3426, metadata !DIExpression()), !dbg !3424
  store i32 3, i32* %__off153, align 4, !dbg !3424
  call void @llvm.dbg.declare(metadata i32* %__shft154, metadata !3427, metadata !DIExpression()), !dbg !3424
  store i32 26, i32* %__shft154, align 4, !dbg !3424
  call void @llvm.dbg.declare(metadata i32* %__res155, metadata !3428, metadata !DIExpression()), !dbg !3424
  %86 = load i32*, i32** %resp, align 8, !dbg !3424
  %arrayidx156 = getelementptr i32, i32* %86, i64 3, !dbg !3424
  %87 = load i32, i32* %arrayidx156, align 4, !dbg !3424
  %shr157 = lshr i32 %87, 26, !dbg !3424
  store i32 %shr157, i32* %__res155, align 4, !dbg !3424
  %88 = load i32, i32* %__res155, align 4, !dbg !3424
  %and159 = and i32 %88, 7, !dbg !3424
  store i32 %and159, i32* %tmp158, align 4, !dbg !3429
  %89 = load i32, i32* %tmp158, align 4, !dbg !3424
  %90 = load %struct.mmc_csd*, %struct.mmc_csd** %csd, align 8, !dbg !3431
  %r2w_factor = getelementptr inbounds %struct.mmc_csd, %struct.mmc_csd* %90, i32 0, i32 6, !dbg !3432
  store i32 %89, i32* %r2w_factor, align 4, !dbg !3433
  call void @llvm.dbg.declare(metadata i32* %__size160, metadata !3434, metadata !DIExpression()), !dbg !3436
  store i32 4, i32* %__size160, align 4, !dbg !3436
  call void @llvm.dbg.declare(metadata i32* %__mask161, metadata !3437, metadata !DIExpression()), !dbg !3436
  store i32 15, i32* %__mask161, align 4, !dbg !3436
  call void @llvm.dbg.declare(metadata i32* %__off162, metadata !3438, metadata !DIExpression()), !dbg !3436
  store i32 3, i32* %__off162, align 4, !dbg !3436
  call void @llvm.dbg.declare(metadata i32* %__shft163, metadata !3439, metadata !DIExpression()), !dbg !3436
  store i32 22, i32* %__shft163, align 4, !dbg !3436
  call void @llvm.dbg.declare(metadata i32* %__res164, metadata !3440, metadata !DIExpression()), !dbg !3436
  %91 = load i32*, i32** %resp, align 8, !dbg !3436
  %arrayidx165 = getelementptr i32, i32* %91, i64 3, !dbg !3436
  %92 = load i32, i32* %arrayidx165, align 4, !dbg !3436
  %shr166 = lshr i32 %92, 22, !dbg !3436
  store i32 %shr166, i32* %__res164, align 4, !dbg !3436
  %93 = load i32, i32* %__res164, align 4, !dbg !3436
  %and168 = and i32 %93, 15, !dbg !3436
  store i32 %and168, i32* %tmp167, align 4, !dbg !3441
  %94 = load i32, i32* %tmp167, align 4, !dbg !3436
  %95 = load %struct.mmc_csd*, %struct.mmc_csd** %csd, align 8, !dbg !3443
  %write_blkbits = getelementptr inbounds %struct.mmc_csd, %struct.mmc_csd* %95, i32 0, i32 10, !dbg !3444
  store i32 %94, i32* %write_blkbits, align 4, !dbg !3445
  call void @llvm.dbg.declare(metadata i32* %__size169, metadata !3446, metadata !DIExpression()), !dbg !3448
  store i32 1, i32* %__size169, align 4, !dbg !3448
  call void @llvm.dbg.declare(metadata i32* %__mask170, metadata !3449, metadata !DIExpression()), !dbg !3448
  store i32 1, i32* %__mask170, align 4, !dbg !3448
  call void @llvm.dbg.declare(metadata i32* %__off171, metadata !3450, metadata !DIExpression()), !dbg !3448
  store i32 3, i32* %__off171, align 4, !dbg !3448
  call void @llvm.dbg.declare(metadata i32* %__shft172, metadata !3451, metadata !DIExpression()), !dbg !3448
  store i32 21, i32* %__shft172, align 4, !dbg !3448
  call void @llvm.dbg.declare(metadata i32* %__res173, metadata !3452, metadata !DIExpression()), !dbg !3448
  %96 = load i32*, i32** %resp, align 8, !dbg !3448
  %arrayidx174 = getelementptr i32, i32* %96, i64 3, !dbg !3448
  %97 = load i32, i32* %arrayidx174, align 4, !dbg !3448
  %shr175 = lshr i32 %97, 21, !dbg !3448
  store i32 %shr175, i32* %__res173, align 4, !dbg !3448
  %98 = load i32, i32* %__res173, align 4, !dbg !3448
  %and177 = and i32 %98, 1, !dbg !3448
  store i32 %and177, i32* %tmp176, align 4, !dbg !3453
  %99 = load i32, i32* %tmp176, align 4, !dbg !3448
  %100 = load %struct.mmc_csd*, %struct.mmc_csd** %csd, align 8, !dbg !3455
  %write_partial = getelementptr inbounds %struct.mmc_csd, %struct.mmc_csd* %100, i32 0, i32 12, !dbg !3456
  %101 = trunc i32 %99 to i8, !dbg !3457
  %bf.load178 = load i8, i8* %write_partial, align 4, !dbg !3457
  %bf.value179 = and i8 %101, 1, !dbg !3457
  %bf.shl180 = shl i8 %bf.value179, 2, !dbg !3457
  %bf.clear181 = and i8 %bf.load178, -5, !dbg !3457
  %bf.set182 = or i8 %bf.clear181, %bf.shl180, !dbg !3457
  store i8 %bf.set182, i8* %write_partial, align 4, !dbg !3457
  %bf.result.cast183 = zext i8 %bf.value179 to i32, !dbg !3457
  call void @llvm.dbg.declare(metadata i32* %__size184, metadata !3458, metadata !DIExpression()), !dbg !3461
  store i32 1, i32* %__size184, align 4, !dbg !3461
  call void @llvm.dbg.declare(metadata i32* %__mask185, metadata !3462, metadata !DIExpression()), !dbg !3461
  store i32 1, i32* %__mask185, align 4, !dbg !3461
  call void @llvm.dbg.declare(metadata i32* %__off186, metadata !3463, metadata !DIExpression()), !dbg !3461
  store i32 2, i32* %__off186, align 4, !dbg !3461
  call void @llvm.dbg.declare(metadata i32* %__shft187, metadata !3464, metadata !DIExpression()), !dbg !3461
  store i32 14, i32* %__shft187, align 4, !dbg !3461
  call void @llvm.dbg.declare(metadata i32* %__res188, metadata !3465, metadata !DIExpression()), !dbg !3461
  %102 = load i32*, i32** %resp, align 8, !dbg !3461
  %arrayidx189 = getelementptr i32, i32* %102, i64 2, !dbg !3461
  %103 = load i32, i32* %arrayidx189, align 4, !dbg !3461
  %shr190 = lshr i32 %103, 14, !dbg !3461
  store i32 %shr190, i32* %__res188, align 4, !dbg !3461
  %104 = load i32, i32* %__res188, align 4, !dbg !3461
  %and192 = and i32 %104, 1, !dbg !3461
  store i32 %and192, i32* %tmp191, align 4, !dbg !3466
  %105 = load i32, i32* %tmp191, align 4, !dbg !3461
  %tobool = icmp ne i32 %105, 0, !dbg !3468
  br i1 %tobool, label %if.then, label %if.else, !dbg !3469

if.then:                                          ; preds = %sw.bb
  %106 = load %struct.mmc_csd*, %struct.mmc_csd** %csd, align 8, !dbg !3470
  %erase_size = getelementptr inbounds %struct.mmc_csd, %struct.mmc_csd* %106, i32 0, i32 8, !dbg !3472
  store i32 1, i32* %erase_size, align 4, !dbg !3473
  br label %if.end210, !dbg !3474

if.else:                                          ; preds = %sw.bb
  %107 = load %struct.mmc_csd*, %struct.mmc_csd** %csd, align 8, !dbg !3475
  %write_blkbits193 = getelementptr inbounds %struct.mmc_csd, %struct.mmc_csd* %107, i32 0, i32 10, !dbg !3477
  %108 = load i32, i32* %write_blkbits193, align 4, !dbg !3477
  %cmp = icmp uge i32 %108, 9, !dbg !3478
  br i1 %cmp, label %if.then195, label %if.end, !dbg !3479

if.then195:                                       ; preds = %if.else
  call void @llvm.dbg.declare(metadata i32* %__size196, metadata !3480, metadata !DIExpression()), !dbg !3483
  store i32 7, i32* %__size196, align 4, !dbg !3483
  call void @llvm.dbg.declare(metadata i32* %__mask197, metadata !3484, metadata !DIExpression()), !dbg !3483
  store i32 127, i32* %__mask197, align 4, !dbg !3483
  call void @llvm.dbg.declare(metadata i32* %__off198, metadata !3485, metadata !DIExpression()), !dbg !3483
  store i32 2, i32* %__off198, align 4, !dbg !3483
  call void @llvm.dbg.declare(metadata i32* %__shft199, metadata !3486, metadata !DIExpression()), !dbg !3483
  store i32 7, i32* %__shft199, align 4, !dbg !3483
  call void @llvm.dbg.declare(metadata i32* %__res200, metadata !3487, metadata !DIExpression()), !dbg !3483
  %109 = load i32*, i32** %resp, align 8, !dbg !3483
  %arrayidx201 = getelementptr i32, i32* %109, i64 2, !dbg !3483
  %110 = load i32, i32* %arrayidx201, align 4, !dbg !3483
  %shr202 = lshr i32 %110, 7, !dbg !3483
  store i32 %shr202, i32* %__res200, align 4, !dbg !3483
  %111 = load i32, i32* %__res200, align 4, !dbg !3483
  %and204 = and i32 %111, 127, !dbg !3483
  store i32 %and204, i32* %tmp203, align 4, !dbg !3488
  %112 = load i32, i32* %tmp203, align 4, !dbg !3483
  %add205 = add i32 %112, 1, !dbg !3490
  %113 = load %struct.mmc_csd*, %struct.mmc_csd** %csd, align 8, !dbg !3491
  %erase_size206 = getelementptr inbounds %struct.mmc_csd, %struct.mmc_csd* %113, i32 0, i32 8, !dbg !3492
  store i32 %add205, i32* %erase_size206, align 4, !dbg !3493
  %114 = load %struct.mmc_csd*, %struct.mmc_csd** %csd, align 8, !dbg !3494
  %write_blkbits207 = getelementptr inbounds %struct.mmc_csd, %struct.mmc_csd* %114, i32 0, i32 10, !dbg !3495
  %115 = load i32, i32* %write_blkbits207, align 4, !dbg !3495
  %sub = sub i32 %115, 9, !dbg !3496
  %116 = load %struct.mmc_csd*, %struct.mmc_csd** %csd, align 8, !dbg !3497
  %erase_size208 = getelementptr inbounds %struct.mmc_csd, %struct.mmc_csd* %116, i32 0, i32 8, !dbg !3498
  %117 = load i32, i32* %erase_size208, align 4, !dbg !3499
  %shl209 = shl i32 %117, %sub, !dbg !3499
  store i32 %shl209, i32* %erase_size208, align 4, !dbg !3499
  br label %if.end, !dbg !3500

if.end:                                           ; preds = %if.then195, %if.else
  br label %if.end210

if.end210:                                        ; preds = %if.end, %if.then
  br label %sw.epilog, !dbg !3501

sw.bb211:                                         ; preds = %entry
  %118 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !3502
  %state = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %118, i32 0, i32 5, !dbg !3502
  %119 = load i32, i32* %state, align 4, !dbg !3502
  %or212 = or i32 %119, 4, !dbg !3502
  store i32 %or212, i32* %state, align 4, !dbg !3502
  %120 = load %struct.mmc_csd*, %struct.mmc_csd** %csd, align 8, !dbg !3503
  %taac_ns213 = getelementptr inbounds %struct.mmc_csd, %struct.mmc_csd* %120, i32 0, i32 4, !dbg !3504
  store i32 0, i32* %taac_ns213, align 4, !dbg !3505
  %121 = load %struct.mmc_csd*, %struct.mmc_csd** %csd, align 8, !dbg !3506
  %taac_clks214 = getelementptr inbounds %struct.mmc_csd, %struct.mmc_csd* %121, i32 0, i32 3, !dbg !3507
  store i16 0, i16* %taac_clks214, align 4, !dbg !3508
  call void @llvm.dbg.declare(metadata i32* %__size215, metadata !3509, metadata !DIExpression()), !dbg !3511
  store i32 4, i32* %__size215, align 4, !dbg !3511
  call void @llvm.dbg.declare(metadata i32* %__mask216, metadata !3512, metadata !DIExpression()), !dbg !3511
  store i32 15, i32* %__mask216, align 4, !dbg !3511
  call void @llvm.dbg.declare(metadata i32* %__off217, metadata !3513, metadata !DIExpression()), !dbg !3511
  store i32 0, i32* %__off217, align 4, !dbg !3511
  call void @llvm.dbg.declare(metadata i32* %__shft218, metadata !3514, metadata !DIExpression()), !dbg !3511
  store i32 3, i32* %__shft218, align 4, !dbg !3511
  call void @llvm.dbg.declare(metadata i32* %__res219, metadata !3515, metadata !DIExpression()), !dbg !3511
  %122 = load i32*, i32** %resp, align 8, !dbg !3511
  %arrayidx220 = getelementptr i32, i32* %122, i64 0, !dbg !3511
  %123 = load i32, i32* %arrayidx220, align 4, !dbg !3511
  %shr221 = lshr i32 %123, 3, !dbg !3511
  store i32 %shr221, i32* %__res219, align 4, !dbg !3511
  %124 = load i32, i32* %__res219, align 4, !dbg !3511
  %and223 = and i32 %124, 15, !dbg !3511
  store i32 %and223, i32* %tmp222, align 4, !dbg !3516
  %125 = load i32, i32* %tmp222, align 4, !dbg !3511
  store i32 %125, i32* %m, align 4, !dbg !3518
  call void @llvm.dbg.declare(metadata i32* %__size224, metadata !3519, metadata !DIExpression()), !dbg !3521
  store i32 3, i32* %__size224, align 4, !dbg !3521
  call void @llvm.dbg.declare(metadata i32* %__mask225, metadata !3522, metadata !DIExpression()), !dbg !3521
  store i32 7, i32* %__mask225, align 4, !dbg !3521
  call void @llvm.dbg.declare(metadata i32* %__off226, metadata !3523, metadata !DIExpression()), !dbg !3521
  store i32 0, i32* %__off226, align 4, !dbg !3521
  call void @llvm.dbg.declare(metadata i32* %__shft227, metadata !3524, metadata !DIExpression()), !dbg !3521
  store i32 0, i32* %__shft227, align 4, !dbg !3521
  call void @llvm.dbg.declare(metadata i32* %__res228, metadata !3525, metadata !DIExpression()), !dbg !3521
  %126 = load i32*, i32** %resp, align 8, !dbg !3521
  %arrayidx229 = getelementptr i32, i32* %126, i64 0, !dbg !3521
  %127 = load i32, i32* %arrayidx229, align 4, !dbg !3521
  %shr230 = lshr i32 %127, 0, !dbg !3521
  store i32 %shr230, i32* %__res228, align 4, !dbg !3521
  %128 = load i32, i32* %__res228, align 4, !dbg !3521
  %and232 = and i32 %128, 7, !dbg !3521
  store i32 %and232, i32* %tmp231, align 4, !dbg !3526
  %129 = load i32, i32* %tmp231, align 4, !dbg !3521
  store i32 %129, i32* %e, align 4, !dbg !3528
  %130 = load i32, i32* %e, align 4, !dbg !3529
  %idxprom233 = zext i32 %130 to i64, !dbg !3530
  %arrayidx234 = getelementptr [8 x i32], [8 x i32]* @tran_exp, i64 0, i64 %idxprom233, !dbg !3530
  %131 = load i32, i32* %arrayidx234, align 4, !dbg !3530
  %132 = load i32, i32* %m, align 4, !dbg !3531
  %idxprom235 = zext i32 %132 to i64, !dbg !3532
  %arrayidx236 = getelementptr [16 x i8], [16 x i8]* @tran_mant, i64 0, i64 %idxprom235, !dbg !3532
  %133 = load i8, i8* %arrayidx236, align 1, !dbg !3532
  %conv237 = zext i8 %133 to i32, !dbg !3532
  %mul238 = mul i32 %131, %conv237, !dbg !3533
  %134 = load %struct.mmc_csd*, %struct.mmc_csd** %csd, align 8, !dbg !3534
  %max_dtr239 = getelementptr inbounds %struct.mmc_csd, %struct.mmc_csd* %134, i32 0, i32 7, !dbg !3535
  store i32 %mul238, i32* %max_dtr239, align 4, !dbg !3536
  call void @llvm.dbg.declare(metadata i32* %__size240, metadata !3537, metadata !DIExpression()), !dbg !3539
  store i32 12, i32* %__size240, align 4, !dbg !3539
  call void @llvm.dbg.declare(metadata i32* %__mask241, metadata !3540, metadata !DIExpression()), !dbg !3539
  store i32 4095, i32* %__mask241, align 4, !dbg !3539
  call void @llvm.dbg.declare(metadata i32* %__off242, metadata !3541, metadata !DIExpression()), !dbg !3539
  store i32 1, i32* %__off242, align 4, !dbg !3539
  call void @llvm.dbg.declare(metadata i32* %__shft243, metadata !3542, metadata !DIExpression()), !dbg !3539
  store i32 20, i32* %__shft243, align 4, !dbg !3539
  call void @llvm.dbg.declare(metadata i32* %__res244, metadata !3543, metadata !DIExpression()), !dbg !3539
  %135 = load i32*, i32** %resp, align 8, !dbg !3539
  %arrayidx245 = getelementptr i32, i32* %135, i64 1, !dbg !3539
  %136 = load i32, i32* %arrayidx245, align 4, !dbg !3539
  %shr246 = lshr i32 %136, 20, !dbg !3539
  store i32 %shr246, i32* %__res244, align 4, !dbg !3539
  %137 = load i32, i32* %__res244, align 4, !dbg !3539
  %and248 = and i32 %137, 4095, !dbg !3539
  store i32 %and248, i32* %tmp247, align 4, !dbg !3544
  %138 = load i32, i32* %tmp247, align 4, !dbg !3539
  %conv249 = trunc i32 %138 to i16, !dbg !3546
  %139 = load %struct.mmc_csd*, %struct.mmc_csd** %csd, align 8, !dbg !3547
  %cmdclass250 = getelementptr inbounds %struct.mmc_csd, %struct.mmc_csd* %139, i32 0, i32 2, !dbg !3548
  store i16 %conv249, i16* %cmdclass250, align 2, !dbg !3549
  call void @llvm.dbg.declare(metadata i32* %__size251, metadata !3550, metadata !DIExpression()), !dbg !3552
  store i32 22, i32* %__size251, align 4, !dbg !3552
  call void @llvm.dbg.declare(metadata i32* %__mask252, metadata !3553, metadata !DIExpression()), !dbg !3552
  store i32 4194303, i32* %__mask252, align 4, !dbg !3552
  call void @llvm.dbg.declare(metadata i32* %__off253, metadata !3554, metadata !DIExpression()), !dbg !3552
  store i32 2, i32* %__off253, align 4, !dbg !3552
  call void @llvm.dbg.declare(metadata i32* %__shft254, metadata !3555, metadata !DIExpression()), !dbg !3552
  store i32 16, i32* %__shft254, align 4, !dbg !3552
  call void @llvm.dbg.declare(metadata i32* %__res255, metadata !3556, metadata !DIExpression()), !dbg !3552
  %140 = load i32*, i32** %resp, align 8, !dbg !3552
  %arrayidx256 = getelementptr i32, i32* %140, i64 2, !dbg !3552
  %141 = load i32, i32* %arrayidx256, align 4, !dbg !3552
  %shr257 = lshr i32 %141, 16, !dbg !3552
  store i32 %shr257, i32* %__res255, align 4, !dbg !3552
  %142 = load i32*, i32** %resp, align 8, !dbg !3557
  %arrayidx258 = getelementptr i32, i32* %142, i64 1, !dbg !3557
  %143 = load i32, i32* %arrayidx258, align 4, !dbg !3557
  %shl259 = shl i32 %143, 16, !dbg !3557
  %144 = load i32, i32* %__res255, align 4, !dbg !3557
  %or260 = or i32 %144, %shl259, !dbg !3557
  store i32 %or260, i32* %__res255, align 4, !dbg !3557
  %145 = load i32, i32* %__res255, align 4, !dbg !3552
  %and262 = and i32 %145, 4194303, !dbg !3552
  store i32 %and262, i32* %tmp261, align 4, !dbg !3557
  %146 = load i32, i32* %tmp261, align 4, !dbg !3552
  %147 = load %struct.mmc_csd*, %struct.mmc_csd** %csd, align 8, !dbg !3559
  %c_size = getelementptr inbounds %struct.mmc_csd, %struct.mmc_csd* %147, i32 0, i32 5, !dbg !3560
  store i32 %146, i32* %c_size, align 4, !dbg !3561
  %148 = load %struct.mmc_csd*, %struct.mmc_csd** %csd, align 8, !dbg !3562
  %c_size263 = getelementptr inbounds %struct.mmc_csd, %struct.mmc_csd* %148, i32 0, i32 5, !dbg !3564
  %149 = load i32, i32* %c_size263, align 4, !dbg !3564
  %cmp264 = icmp uge i32 %149, 65535, !dbg !3565
  br i1 %cmp264, label %if.then266, label %if.end269, !dbg !3566

if.then266:                                       ; preds = %sw.bb211
  %150 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !3567
  %state267 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %150, i32 0, i32 5, !dbg !3567
  %151 = load i32, i32* %state267, align 4, !dbg !3567
  %or268 = or i32 %151, 8, !dbg !3567
  store i32 %or268, i32* %state267, align 4, !dbg !3567
  br label %if.end269, !dbg !3567

if.end269:                                        ; preds = %if.then266, %sw.bb211
  call void @llvm.dbg.declare(metadata i32* %__size270, metadata !3568, metadata !DIExpression()), !dbg !3570
  store i32 22, i32* %__size270, align 4, !dbg !3570
  call void @llvm.dbg.declare(metadata i32* %__mask271, metadata !3571, metadata !DIExpression()), !dbg !3570
  store i32 4194303, i32* %__mask271, align 4, !dbg !3570
  call void @llvm.dbg.declare(metadata i32* %__off272, metadata !3572, metadata !DIExpression()), !dbg !3570
  store i32 2, i32* %__off272, align 4, !dbg !3570
  call void @llvm.dbg.declare(metadata i32* %__shft273, metadata !3573, metadata !DIExpression()), !dbg !3570
  store i32 16, i32* %__shft273, align 4, !dbg !3570
  call void @llvm.dbg.declare(metadata i32* %__res274, metadata !3574, metadata !DIExpression()), !dbg !3570
  %152 = load i32*, i32** %resp, align 8, !dbg !3570
  %arrayidx275 = getelementptr i32, i32* %152, i64 2, !dbg !3570
  %153 = load i32, i32* %arrayidx275, align 4, !dbg !3570
  %shr276 = lshr i32 %153, 16, !dbg !3570
  store i32 %shr276, i32* %__res274, align 4, !dbg !3570
  %154 = load i32*, i32** %resp, align 8, !dbg !3575
  %arrayidx277 = getelementptr i32, i32* %154, i64 1, !dbg !3575
  %155 = load i32, i32* %arrayidx277, align 4, !dbg !3575
  %shl278 = shl i32 %155, 16, !dbg !3575
  %156 = load i32, i32* %__res274, align 4, !dbg !3575
  %or279 = or i32 %156, %shl278, !dbg !3575
  store i32 %or279, i32* %__res274, align 4, !dbg !3575
  %157 = load i32, i32* %__res274, align 4, !dbg !3570
  %and281 = and i32 %157, 4194303, !dbg !3570
  store i32 %and281, i32* %tmp280, align 4, !dbg !3575
  %158 = load i32, i32* %tmp280, align 4, !dbg !3570
  store i32 %158, i32* %m, align 4, !dbg !3577
  %159 = load i32, i32* %m, align 4, !dbg !3578
  %add282 = add i32 1, %159, !dbg !3579
  %shl283 = shl i32 %add282, 10, !dbg !3580
  %160 = load %struct.mmc_csd*, %struct.mmc_csd** %csd, align 8, !dbg !3581
  %capacity284 = getelementptr inbounds %struct.mmc_csd, %struct.mmc_csd* %160, i32 0, i32 11, !dbg !3582
  store i32 %shl283, i32* %capacity284, align 4, !dbg !3583
  %161 = load %struct.mmc_csd*, %struct.mmc_csd** %csd, align 8, !dbg !3584
  %read_blkbits285 = getelementptr inbounds %struct.mmc_csd, %struct.mmc_csd* %161, i32 0, i32 9, !dbg !3585
  store i32 9, i32* %read_blkbits285, align 4, !dbg !3586
  %162 = load %struct.mmc_csd*, %struct.mmc_csd** %csd, align 8, !dbg !3587
  %read_partial286 = getelementptr inbounds %struct.mmc_csd, %struct.mmc_csd* %162, i32 0, i32 12, !dbg !3588
  %bf.load287 = load i8, i8* %read_partial286, align 4, !dbg !3589
  %bf.clear288 = and i8 %bf.load287, -2, !dbg !3589
  store i8 %bf.clear288, i8* %read_partial286, align 4, !dbg !3589
  %163 = load %struct.mmc_csd*, %struct.mmc_csd** %csd, align 8, !dbg !3590
  %write_misalign289 = getelementptr inbounds %struct.mmc_csd, %struct.mmc_csd* %163, i32 0, i32 12, !dbg !3591
  %bf.load290 = load i8, i8* %write_misalign289, align 4, !dbg !3592
  %bf.clear291 = and i8 %bf.load290, -9, !dbg !3592
  store i8 %bf.clear291, i8* %write_misalign289, align 4, !dbg !3592
  %164 = load %struct.mmc_csd*, %struct.mmc_csd** %csd, align 8, !dbg !3593
  %read_misalign292 = getelementptr inbounds %struct.mmc_csd, %struct.mmc_csd* %164, i32 0, i32 12, !dbg !3594
  %bf.load293 = load i8, i8* %read_misalign292, align 4, !dbg !3595
  %bf.clear294 = and i8 %bf.load293, -3, !dbg !3595
  store i8 %bf.clear294, i8* %read_misalign292, align 4, !dbg !3595
  %165 = load %struct.mmc_csd*, %struct.mmc_csd** %csd, align 8, !dbg !3596
  %r2w_factor295 = getelementptr inbounds %struct.mmc_csd, %struct.mmc_csd* %165, i32 0, i32 6, !dbg !3597
  store i32 4, i32* %r2w_factor295, align 4, !dbg !3598
  %166 = load %struct.mmc_csd*, %struct.mmc_csd** %csd, align 8, !dbg !3599
  %write_blkbits296 = getelementptr inbounds %struct.mmc_csd, %struct.mmc_csd* %166, i32 0, i32 10, !dbg !3600
  store i32 9, i32* %write_blkbits296, align 4, !dbg !3601
  %167 = load %struct.mmc_csd*, %struct.mmc_csd** %csd, align 8, !dbg !3602
  %write_partial297 = getelementptr inbounds %struct.mmc_csd, %struct.mmc_csd* %167, i32 0, i32 12, !dbg !3603
  %bf.load298 = load i8, i8* %write_partial297, align 4, !dbg !3604
  %bf.clear299 = and i8 %bf.load298, -5, !dbg !3604
  store i8 %bf.clear299, i8* %write_partial297, align 4, !dbg !3604
  %168 = load %struct.mmc_csd*, %struct.mmc_csd** %csd, align 8, !dbg !3605
  %erase_size300 = getelementptr inbounds %struct.mmc_csd, %struct.mmc_csd* %168, i32 0, i32 8, !dbg !3606
  store i32 1, i32* %erase_size300, align 4, !dbg !3607
  br label %sw.epilog, !dbg !3608

sw.default:                                       ; preds = %entry
  %169 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !3609
  %host = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %169, i32 0, i32 0, !dbg !3609
  %170 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !3609
  %class_dev = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %170, i32 0, i32 1, !dbg !3609
  %call = call i8* @dev_name(%struct.device* %class_dev) #11, !dbg !3609
  %171 = load i32, i32* %csd_struct, align 4, !dbg !3609
  %call301 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.40, i64 0, i64 0), i8* %call, i32 %171) #12, !dbg !3609
  store i32 -22, i32* %retval, align 4, !dbg !3610
  br label %return, !dbg !3610

sw.epilog:                                        ; preds = %if.end269, %if.end210
  %172 = load %struct.mmc_csd*, %struct.mmc_csd** %csd, align 8, !dbg !3611
  %erase_size302 = getelementptr inbounds %struct.mmc_csd, %struct.mmc_csd* %172, i32 0, i32 8, !dbg !3612
  %173 = load i32, i32* %erase_size302, align 4, !dbg !3612
  %174 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !3613
  %erase_size303 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %174, i32 0, i32 9, !dbg !3614
  store i32 %173, i32* %erase_size303, align 4, !dbg !3615
  store i32 0, i32* %retval, align 4, !dbg !3616
  br label %return, !dbg !3616

return:                                           ; preds = %sw.epilog, %sw.default
  %175 = load i32, i32* %retval, align 4, !dbg !3617
  ret i32 %175, !dbg !3617
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @mmc_sd_setup_card(%struct.mmc_host* %host, %struct.mmc_card* %card, i1 zeroext %reinit) #0 !dbg !3618 {
entry:
  %retval = alloca i32, align 4
  %host.addr = alloca %struct.mmc_host*, align 8
  %card.addr = alloca %struct.mmc_card*, align 8
  %reinit.addr = alloca i8, align 1
  %err = alloca i32, align 4
  %ro = alloca i32, align 4
  store %struct.mmc_host* %host, %struct.mmc_host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %host.addr, metadata !3621, metadata !DIExpression()), !dbg !3622
  store %struct.mmc_card* %card, %struct.mmc_card** %card.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card.addr, metadata !3623, metadata !DIExpression()), !dbg !3624
  %frombool = zext i1 %reinit to i8
  store i8 %frombool, i8* %reinit.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %reinit.addr, metadata !3625, metadata !DIExpression()), !dbg !3626
  call void @llvm.dbg.declare(metadata i32* %err, metadata !3627, metadata !DIExpression()), !dbg !3628
  %0 = load i8, i8* %reinit.addr, align 1, !dbg !3629
  %tobool = trunc i8 %0 to i1, !dbg !3629
  br i1 %tobool, label %if.end15, label %if.then, !dbg !3631

if.then:                                          ; preds = %entry
  %1 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !3632
  %call = call i32 @mmc_app_send_scr(%struct.mmc_card* %1) #11, !dbg !3634
  store i32 %call, i32* %err, align 4, !dbg !3635
  %2 = load i32, i32* %err, align 4, !dbg !3636
  %tobool1 = icmp ne i32 %2, 0, !dbg !3636
  br i1 %tobool1, label %if.then2, label %if.end, !dbg !3638

if.then2:                                         ; preds = %if.then
  %3 = load i32, i32* %err, align 4, !dbg !3639
  store i32 %3, i32* %retval, align 4, !dbg !3640
  br label %return, !dbg !3640

if.end:                                           ; preds = %if.then
  %4 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !3641
  %call3 = call i32 @mmc_decode_scr(%struct.mmc_card* %4) #11, !dbg !3642
  store i32 %call3, i32* %err, align 4, !dbg !3643
  %5 = load i32, i32* %err, align 4, !dbg !3644
  %tobool4 = icmp ne i32 %5, 0, !dbg !3644
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !3646

if.then5:                                         ; preds = %if.end
  %6 = load i32, i32* %err, align 4, !dbg !3647
  store i32 %6, i32* %retval, align 4, !dbg !3648
  br label %return, !dbg !3648

if.end6:                                          ; preds = %if.end
  %7 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !3649
  %call7 = call i32 @mmc_read_ssr(%struct.mmc_card* %7) #11, !dbg !3650
  store i32 %call7, i32* %err, align 4, !dbg !3651
  %8 = load i32, i32* %err, align 4, !dbg !3652
  %tobool8 = icmp ne i32 %8, 0, !dbg !3652
  br i1 %tobool8, label %if.then9, label %if.end10, !dbg !3654

if.then9:                                         ; preds = %if.end6
  %9 = load i32, i32* %err, align 4, !dbg !3655
  store i32 %9, i32* %retval, align 4, !dbg !3656
  br label %return, !dbg !3656

if.end10:                                         ; preds = %if.end6
  %10 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !3657
  call void @mmc_init_erase(%struct.mmc_card* %10) #11, !dbg !3658
  %11 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !3659
  %call11 = call i32 @mmc_read_switch(%struct.mmc_card* %11) #11, !dbg !3660
  store i32 %call11, i32* %err, align 4, !dbg !3661
  %12 = load i32, i32* %err, align 4, !dbg !3662
  %tobool12 = icmp ne i32 %12, 0, !dbg !3662
  br i1 %tobool12, label %if.then13, label %if.end14, !dbg !3664

if.then13:                                        ; preds = %if.end10
  %13 = load i32, i32* %err, align 4, !dbg !3665
  store i32 %13, i32* %retval, align 4, !dbg !3666
  br label %return, !dbg !3666

if.end14:                                         ; preds = %if.end10
  br label %if.end15, !dbg !3667

if.end15:                                         ; preds = %if.end14, %entry
  %14 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !3668
  %caps = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %14, i32 0, i32 17, !dbg !3668
  %15 = load i32, i32* %caps, align 4, !dbg !3668
  %and = and i32 %15, 16, !dbg !3668
  %tobool16 = icmp ne i32 %and, 0, !dbg !3668
  br i1 %tobool16, label %if.then17, label %if.end23, !dbg !3670

if.then17:                                        ; preds = %if.end15
  %16 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !3671
  %17 = load i8, i8* @use_spi_crc, align 1, !dbg !3673
  %tobool18 = trunc i8 %17 to i1, !dbg !3673
  %conv = zext i1 %tobool18 to i32, !dbg !3673
  %call19 = call i32 @mmc_spi_set_crc(%struct.mmc_host* %16, i32 %conv) #11, !dbg !3674
  store i32 %call19, i32* %err, align 4, !dbg !3675
  %18 = load i32, i32* %err, align 4, !dbg !3676
  %tobool20 = icmp ne i32 %18, 0, !dbg !3676
  br i1 %tobool20, label %if.then21, label %if.end22, !dbg !3678

if.then21:                                        ; preds = %if.then17
  %19 = load i32, i32* %err, align 4, !dbg !3679
  store i32 %19, i32* %retval, align 4, !dbg !3680
  br label %return, !dbg !3680

if.end22:                                         ; preds = %if.then17
  br label %if.end23, !dbg !3681

if.end23:                                         ; preds = %if.end22, %if.end15
  %20 = load i8, i8* %reinit.addr, align 1, !dbg !3682
  %tobool24 = trunc i8 %20 to i1, !dbg !3682
  br i1 %tobool24, label %if.end36, label %if.then25, !dbg !3684

if.then25:                                        ; preds = %if.end23
  call void @llvm.dbg.declare(metadata i32* %ro, metadata !3685, metadata !DIExpression()), !dbg !3687
  %21 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !3688
  %call26 = call i32 @mmc_sd_get_ro(%struct.mmc_host* %21) #11, !dbg !3689
  store i32 %call26, i32* %ro, align 4, !dbg !3687
  %22 = load i32, i32* %ro, align 4, !dbg !3690
  %cmp = icmp slt i32 %22, 0, !dbg !3692
  br i1 %cmp, label %if.then28, label %if.else, !dbg !3693

if.then28:                                        ; preds = %if.then25
  %23 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !3694
  %class_dev = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %23, i32 0, i32 1, !dbg !3694
  %call29 = call i8* @dev_name(%struct.device* %class_dev) #11, !dbg !3694
  %call30 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.2, i64 0, i64 0), i8* %call29) #12, !dbg !3694
  br label %if.end35, !dbg !3696

if.else:                                          ; preds = %if.then25
  %24 = load i32, i32* %ro, align 4, !dbg !3697
  %cmp31 = icmp sgt i32 %24, 0, !dbg !3699
  br i1 %cmp31, label %if.then33, label %if.end34, !dbg !3700

if.then33:                                        ; preds = %if.else
  %25 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !3701
  %state = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %25, i32 0, i32 5, !dbg !3701
  %26 = load i32, i32* %state, align 4, !dbg !3701
  %or = or i32 %26, 2, !dbg !3701
  store i32 %or, i32* %state, align 4, !dbg !3701
  br label %if.end34, !dbg !3703

if.end34:                                         ; preds = %if.then33, %if.else
  br label %if.end35

if.end35:                                         ; preds = %if.end34, %if.then28
  br label %if.end36, !dbg !3704

if.end36:                                         ; preds = %if.end35, %if.end23
  store i32 0, i32* %retval, align 4, !dbg !3705
  br label %return, !dbg !3705

return:                                           ; preds = %if.end36, %if.then21, %if.then13, %if.then9, %if.then5, %if.then2
  %27 = load i32, i32* %retval, align 4, !dbg !3706
  ret i32 %27, !dbg !3706
}

; Function Attrs: noredzone
declare dso_local i32 @mmc_app_send_scr(%struct.mmc_card*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mmc_decode_scr(%struct.mmc_card* %card) #0 !dbg !3707 {
entry:
  %retval = alloca i32, align 4
  %card.addr = alloca %struct.mmc_card*, align 8
  %scr = alloca %struct.sd_scr*, align 8
  %scr_struct = alloca i32, align 4
  %resp = alloca [4 x i32], align 16
  %__size = alloca i32, align 4
  %__mask = alloca i32, align 4
  %__off = alloca i32, align 4
  %__shft = alloca i32, align 4
  %__res = alloca i32, align 4
  %tmp = alloca i32, align 4
  %__size8 = alloca i32, align 4
  %__mask9 = alloca i32, align 4
  %__off10 = alloca i32, align 4
  %__shft11 = alloca i32, align 4
  %__res12 = alloca i32, align 4
  %tmp15 = alloca i32, align 4
  %__size17 = alloca i32, align 4
  %__mask18 = alloca i32, align 4
  %__off19 = alloca i32, align 4
  %__shft20 = alloca i32, align 4
  %__res21 = alloca i32, align 4
  %tmp24 = alloca i32, align 4
  %__size32 = alloca i32, align 4
  %__mask33 = alloca i32, align 4
  %__off34 = alloca i32, align 4
  %__shft35 = alloca i32, align 4
  %__res36 = alloca i32, align 4
  %tmp39 = alloca i32, align 4
  %__size45 = alloca i32, align 4
  %__mask46 = alloca i32, align 4
  %__off47 = alloca i32, align 4
  %__shft48 = alloca i32, align 4
  %__res49 = alloca i32, align 4
  %tmp52 = alloca i32, align 4
  %__size55 = alloca i32, align 4
  %__mask56 = alloca i32, align 4
  %__off57 = alloca i32, align 4
  %__shft58 = alloca i32, align 4
  %__res59 = alloca i32, align 4
  %tmp62 = alloca i32, align 4
  %__size66 = alloca i32, align 4
  %__mask67 = alloca i32, align 4
  %__off68 = alloca i32, align 4
  %__shft69 = alloca i32, align 4
  %__res70 = alloca i32, align 4
  %tmp73 = alloca i32, align 4
  %__size82 = alloca i32, align 4
  %__mask83 = alloca i32, align 4
  %__off84 = alloca i32, align 4
  %__shft85 = alloca i32, align 4
  %__res86 = alloca i32, align 4
  %tmp89 = alloca i32, align 4
  store %struct.mmc_card* %card, %struct.mmc_card** %card.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card.addr, metadata !3708, metadata !DIExpression()), !dbg !3709
  call void @llvm.dbg.declare(metadata %struct.sd_scr** %scr, metadata !3710, metadata !DIExpression()), !dbg !3712
  %0 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !3713
  %scr1 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %0, i32 0, i32 22, !dbg !3714
  store %struct.sd_scr* %scr1, %struct.sd_scr** %scr, align 8, !dbg !3712
  call void @llvm.dbg.declare(metadata i32* %scr_struct, metadata !3715, metadata !DIExpression()), !dbg !3716
  call void @llvm.dbg.declare(metadata [4 x i32]* %resp, metadata !3717, metadata !DIExpression()), !dbg !3718
  %1 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !3719
  %raw_scr = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %1, i32 0, i32 17, !dbg !3720
  %arrayidx = getelementptr [2 x i32], [2 x i32]* %raw_scr, i64 0, i64 1, !dbg !3719
  %2 = load i32, i32* %arrayidx, align 4, !dbg !3719
  %arrayidx2 = getelementptr [4 x i32], [4 x i32]* %resp, i64 0, i64 3, !dbg !3721
  store i32 %2, i32* %arrayidx2, align 4, !dbg !3722
  %3 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !3723
  %raw_scr3 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %3, i32 0, i32 17, !dbg !3724
  %arrayidx4 = getelementptr [2 x i32], [2 x i32]* %raw_scr3, i64 0, i64 0, !dbg !3723
  %4 = load i32, i32* %arrayidx4, align 4, !dbg !3723
  %arrayidx5 = getelementptr [4 x i32], [4 x i32]* %resp, i64 0, i64 2, !dbg !3725
  store i32 %4, i32* %arrayidx5, align 8, !dbg !3726
  call void @llvm.dbg.declare(metadata i32* %__size, metadata !3727, metadata !DIExpression()), !dbg !3729
  store i32 4, i32* %__size, align 4, !dbg !3729
  call void @llvm.dbg.declare(metadata i32* %__mask, metadata !3730, metadata !DIExpression()), !dbg !3729
  store i32 15, i32* %__mask, align 4, !dbg !3729
  call void @llvm.dbg.declare(metadata i32* %__off, metadata !3731, metadata !DIExpression()), !dbg !3729
  store i32 2, i32* %__off, align 4, !dbg !3729
  call void @llvm.dbg.declare(metadata i32* %__shft, metadata !3732, metadata !DIExpression()), !dbg !3729
  store i32 28, i32* %__shft, align 4, !dbg !3729
  call void @llvm.dbg.declare(metadata i32* %__res, metadata !3733, metadata !DIExpression()), !dbg !3729
  %arrayidx6 = getelementptr [4 x i32], [4 x i32]* %resp, i64 0, i64 2, !dbg !3729
  %5 = load i32, i32* %arrayidx6, align 8, !dbg !3729
  %shr = lshr i32 %5, 28, !dbg !3729
  store i32 %shr, i32* %__res, align 4, !dbg !3729
  %6 = load i32, i32* %__res, align 4, !dbg !3729
  %and = and i32 %6, 15, !dbg !3729
  store i32 %and, i32* %tmp, align 4, !dbg !3734
  %7 = load i32, i32* %tmp, align 4, !dbg !3729
  store i32 %7, i32* %scr_struct, align 4, !dbg !3736
  %8 = load i32, i32* %scr_struct, align 4, !dbg !3737
  %cmp = icmp ne i32 %8, 0, !dbg !3739
  br i1 %cmp, label %if.then, label %if.end, !dbg !3740

if.then:                                          ; preds = %entry
  %9 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !3741
  %host = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %9, i32 0, i32 0, !dbg !3741
  %10 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !3741
  %class_dev = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %10, i32 0, i32 1, !dbg !3741
  %call = call i8* @dev_name(%struct.device* %class_dev) #11, !dbg !3741
  %11 = load i32, i32* %scr_struct, align 4, !dbg !3741
  %call7 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.41, i64 0, i64 0), i8* %call, i32 %11) #12, !dbg !3741
  store i32 -22, i32* %retval, align 4, !dbg !3743
  br label %return, !dbg !3743

if.end:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %__size8, metadata !3744, metadata !DIExpression()), !dbg !3746
  store i32 4, i32* %__size8, align 4, !dbg !3746
  call void @llvm.dbg.declare(metadata i32* %__mask9, metadata !3747, metadata !DIExpression()), !dbg !3746
  store i32 15, i32* %__mask9, align 4, !dbg !3746
  call void @llvm.dbg.declare(metadata i32* %__off10, metadata !3748, metadata !DIExpression()), !dbg !3746
  store i32 2, i32* %__off10, align 4, !dbg !3746
  call void @llvm.dbg.declare(metadata i32* %__shft11, metadata !3749, metadata !DIExpression()), !dbg !3746
  store i32 24, i32* %__shft11, align 4, !dbg !3746
  call void @llvm.dbg.declare(metadata i32* %__res12, metadata !3750, metadata !DIExpression()), !dbg !3746
  %arrayidx13 = getelementptr [4 x i32], [4 x i32]* %resp, i64 0, i64 2, !dbg !3746
  %12 = load i32, i32* %arrayidx13, align 8, !dbg !3746
  %shr14 = lshr i32 %12, 24, !dbg !3746
  store i32 %shr14, i32* %__res12, align 4, !dbg !3746
  %13 = load i32, i32* %__res12, align 4, !dbg !3746
  %and16 = and i32 %13, 15, !dbg !3746
  store i32 %and16, i32* %tmp15, align 4, !dbg !3751
  %14 = load i32, i32* %tmp15, align 4, !dbg !3746
  %conv = trunc i32 %14 to i8, !dbg !3753
  %15 = load %struct.sd_scr*, %struct.sd_scr** %scr, align 8, !dbg !3754
  %sda_vsn = getelementptr inbounds %struct.sd_scr, %struct.sd_scr* %15, i32 0, i32 0, !dbg !3755
  store i8 %conv, i8* %sda_vsn, align 1, !dbg !3756
  call void @llvm.dbg.declare(metadata i32* %__size17, metadata !3757, metadata !DIExpression()), !dbg !3759
  store i32 4, i32* %__size17, align 4, !dbg !3759
  call void @llvm.dbg.declare(metadata i32* %__mask18, metadata !3760, metadata !DIExpression()), !dbg !3759
  store i32 15, i32* %__mask18, align 4, !dbg !3759
  call void @llvm.dbg.declare(metadata i32* %__off19, metadata !3761, metadata !DIExpression()), !dbg !3759
  store i32 2, i32* %__off19, align 4, !dbg !3759
  call void @llvm.dbg.declare(metadata i32* %__shft20, metadata !3762, metadata !DIExpression()), !dbg !3759
  store i32 16, i32* %__shft20, align 4, !dbg !3759
  call void @llvm.dbg.declare(metadata i32* %__res21, metadata !3763, metadata !DIExpression()), !dbg !3759
  %arrayidx22 = getelementptr [4 x i32], [4 x i32]* %resp, i64 0, i64 2, !dbg !3759
  %16 = load i32, i32* %arrayidx22, align 8, !dbg !3759
  %shr23 = lshr i32 %16, 16, !dbg !3759
  store i32 %shr23, i32* %__res21, align 4, !dbg !3759
  %17 = load i32, i32* %__res21, align 4, !dbg !3759
  %and25 = and i32 %17, 15, !dbg !3759
  store i32 %and25, i32* %tmp24, align 4, !dbg !3764
  %18 = load i32, i32* %tmp24, align 4, !dbg !3759
  %conv26 = trunc i32 %18 to i8, !dbg !3766
  %19 = load %struct.sd_scr*, %struct.sd_scr** %scr, align 8, !dbg !3767
  %bus_widths = getelementptr inbounds %struct.sd_scr, %struct.sd_scr* %19, i32 0, i32 4, !dbg !3768
  store i8 %conv26, i8* %bus_widths, align 1, !dbg !3769
  %20 = load %struct.sd_scr*, %struct.sd_scr** %scr, align 8, !dbg !3770
  %sda_vsn27 = getelementptr inbounds %struct.sd_scr, %struct.sd_scr* %20, i32 0, i32 0, !dbg !3772
  %21 = load i8, i8* %sda_vsn27, align 1, !dbg !3772
  %conv28 = zext i8 %21 to i32, !dbg !3770
  %cmp29 = icmp eq i32 %conv28, 2, !dbg !3773
  br i1 %cmp29, label %if.then31, label %if.end42, !dbg !3774

if.then31:                                        ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %__size32, metadata !3775, metadata !DIExpression()), !dbg !3777
  store i32 1, i32* %__size32, align 4, !dbg !3777
  call void @llvm.dbg.declare(metadata i32* %__mask33, metadata !3778, metadata !DIExpression()), !dbg !3777
  store i32 1, i32* %__mask33, align 4, !dbg !3777
  call void @llvm.dbg.declare(metadata i32* %__off34, metadata !3779, metadata !DIExpression()), !dbg !3777
  store i32 2, i32* %__off34, align 4, !dbg !3777
  call void @llvm.dbg.declare(metadata i32* %__shft35, metadata !3780, metadata !DIExpression()), !dbg !3777
  store i32 15, i32* %__shft35, align 4, !dbg !3777
  call void @llvm.dbg.declare(metadata i32* %__res36, metadata !3781, metadata !DIExpression()), !dbg !3777
  %arrayidx37 = getelementptr [4 x i32], [4 x i32]* %resp, i64 0, i64 2, !dbg !3777
  %22 = load i32, i32* %arrayidx37, align 8, !dbg !3777
  %shr38 = lshr i32 %22, 15, !dbg !3777
  store i32 %shr38, i32* %__res36, align 4, !dbg !3777
  %23 = load i32, i32* %__res36, align 4, !dbg !3777
  %and40 = and i32 %23, 1, !dbg !3777
  store i32 %and40, i32* %tmp39, align 4, !dbg !3782
  %24 = load i32, i32* %tmp39, align 4, !dbg !3777
  %conv41 = trunc i32 %24 to i8, !dbg !3784
  %25 = load %struct.sd_scr*, %struct.sd_scr** %scr, align 8, !dbg !3785
  %sda_spec3 = getelementptr inbounds %struct.sd_scr, %struct.sd_scr* %25, i32 0, i32 1, !dbg !3786
  store i8 %conv41, i8* %sda_spec3, align 1, !dbg !3787
  br label %if.end42, !dbg !3785

if.end42:                                         ; preds = %if.then31, %if.end
  %26 = load %struct.sd_scr*, %struct.sd_scr** %scr, align 8, !dbg !3788
  %sda_spec343 = getelementptr inbounds %struct.sd_scr, %struct.sd_scr* %26, i32 0, i32 1, !dbg !3790
  %27 = load i8, i8* %sda_spec343, align 1, !dbg !3790
  %tobool = icmp ne i8 %27, 0, !dbg !3788
  br i1 %tobool, label %if.then44, label %if.end65, !dbg !3791

if.then44:                                        ; preds = %if.end42
  call void @llvm.dbg.declare(metadata i32* %__size45, metadata !3792, metadata !DIExpression()), !dbg !3795
  store i32 1, i32* %__size45, align 4, !dbg !3795
  call void @llvm.dbg.declare(metadata i32* %__mask46, metadata !3796, metadata !DIExpression()), !dbg !3795
  store i32 1, i32* %__mask46, align 4, !dbg !3795
  call void @llvm.dbg.declare(metadata i32* %__off47, metadata !3797, metadata !DIExpression()), !dbg !3795
  store i32 2, i32* %__off47, align 4, !dbg !3795
  call void @llvm.dbg.declare(metadata i32* %__shft48, metadata !3798, metadata !DIExpression()), !dbg !3795
  store i32 10, i32* %__shft48, align 4, !dbg !3795
  call void @llvm.dbg.declare(metadata i32* %__res49, metadata !3799, metadata !DIExpression()), !dbg !3795
  %arrayidx50 = getelementptr [4 x i32], [4 x i32]* %resp, i64 0, i64 2, !dbg !3795
  %28 = load i32, i32* %arrayidx50, align 8, !dbg !3795
  %shr51 = lshr i32 %28, 10, !dbg !3795
  store i32 %shr51, i32* %__res49, align 4, !dbg !3795
  %29 = load i32, i32* %__res49, align 4, !dbg !3795
  %and53 = and i32 %29, 1, !dbg !3795
  store i32 %and53, i32* %tmp52, align 4, !dbg !3800
  %30 = load i32, i32* %tmp52, align 4, !dbg !3795
  %conv54 = trunc i32 %30 to i8, !dbg !3802
  %31 = load %struct.sd_scr*, %struct.sd_scr** %scr, align 8, !dbg !3803
  %sda_spec4 = getelementptr inbounds %struct.sd_scr, %struct.sd_scr* %31, i32 0, i32 2, !dbg !3804
  store i8 %conv54, i8* %sda_spec4, align 1, !dbg !3805
  call void @llvm.dbg.declare(metadata i32* %__size55, metadata !3806, metadata !DIExpression()), !dbg !3808
  store i32 4, i32* %__size55, align 4, !dbg !3808
  call void @llvm.dbg.declare(metadata i32* %__mask56, metadata !3809, metadata !DIExpression()), !dbg !3808
  store i32 15, i32* %__mask56, align 4, !dbg !3808
  call void @llvm.dbg.declare(metadata i32* %__off57, metadata !3810, metadata !DIExpression()), !dbg !3808
  store i32 2, i32* %__off57, align 4, !dbg !3808
  call void @llvm.dbg.declare(metadata i32* %__shft58, metadata !3811, metadata !DIExpression()), !dbg !3808
  store i32 6, i32* %__shft58, align 4, !dbg !3808
  call void @llvm.dbg.declare(metadata i32* %__res59, metadata !3812, metadata !DIExpression()), !dbg !3808
  %arrayidx60 = getelementptr [4 x i32], [4 x i32]* %resp, i64 0, i64 2, !dbg !3808
  %32 = load i32, i32* %arrayidx60, align 8, !dbg !3808
  %shr61 = lshr i32 %32, 6, !dbg !3808
  store i32 %shr61, i32* %__res59, align 4, !dbg !3808
  %33 = load i32, i32* %__res59, align 4, !dbg !3808
  %and63 = and i32 %33, 15, !dbg !3808
  store i32 %and63, i32* %tmp62, align 4, !dbg !3813
  %34 = load i32, i32* %tmp62, align 4, !dbg !3808
  %conv64 = trunc i32 %34 to i8, !dbg !3815
  %35 = load %struct.sd_scr*, %struct.sd_scr** %scr, align 8, !dbg !3816
  %sda_specx = getelementptr inbounds %struct.sd_scr, %struct.sd_scr* %35, i32 0, i32 3, !dbg !3817
  store i8 %conv64, i8* %sda_specx, align 1, !dbg !3818
  br label %if.end65, !dbg !3819

if.end65:                                         ; preds = %if.then44, %if.end42
  call void @llvm.dbg.declare(metadata i32* %__size66, metadata !3820, metadata !DIExpression()), !dbg !3823
  store i32 1, i32* %__size66, align 4, !dbg !3823
  call void @llvm.dbg.declare(metadata i32* %__mask67, metadata !3824, metadata !DIExpression()), !dbg !3823
  store i32 1, i32* %__mask67, align 4, !dbg !3823
  call void @llvm.dbg.declare(metadata i32* %__off68, metadata !3825, metadata !DIExpression()), !dbg !3823
  store i32 2, i32* %__off68, align 4, !dbg !3823
  call void @llvm.dbg.declare(metadata i32* %__shft69, metadata !3826, metadata !DIExpression()), !dbg !3823
  store i32 23, i32* %__shft69, align 4, !dbg !3823
  call void @llvm.dbg.declare(metadata i32* %__res70, metadata !3827, metadata !DIExpression()), !dbg !3823
  %arrayidx71 = getelementptr [4 x i32], [4 x i32]* %resp, i64 0, i64 2, !dbg !3823
  %36 = load i32, i32* %arrayidx71, align 8, !dbg !3823
  %shr72 = lshr i32 %36, 23, !dbg !3823
  store i32 %shr72, i32* %__res70, align 4, !dbg !3823
  %37 = load i32, i32* %__res70, align 4, !dbg !3823
  %and74 = and i32 %37, 1, !dbg !3823
  store i32 %and74, i32* %tmp73, align 4, !dbg !3828
  %38 = load i32, i32* %tmp73, align 4, !dbg !3823
  %tobool75 = icmp ne i32 %38, 0, !dbg !3830
  br i1 %tobool75, label %if.then76, label %if.else, !dbg !3831

if.then76:                                        ; preds = %if.end65
  %39 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !3832
  %erased_byte = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %39, i32 0, i32 14, !dbg !3833
  store i8 -1, i8* %erased_byte, align 8, !dbg !3834
  br label %if.end78, !dbg !3832

if.else:                                          ; preds = %if.end65
  %40 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !3835
  %erased_byte77 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %40, i32 0, i32 14, !dbg !3836
  store i8 0, i8* %erased_byte77, align 8, !dbg !3837
  br label %if.end78

if.end78:                                         ; preds = %if.else, %if.then76
  %41 = load %struct.sd_scr*, %struct.sd_scr** %scr, align 8, !dbg !3838
  %sda_spec379 = getelementptr inbounds %struct.sd_scr, %struct.sd_scr* %41, i32 0, i32 1, !dbg !3840
  %42 = load i8, i8* %sda_spec379, align 1, !dbg !3840
  %tobool80 = icmp ne i8 %42, 0, !dbg !3838
  br i1 %tobool80, label %if.then81, label %if.end92, !dbg !3841

if.then81:                                        ; preds = %if.end78
  call void @llvm.dbg.declare(metadata i32* %__size82, metadata !3842, metadata !DIExpression()), !dbg !3844
  store i32 2, i32* %__size82, align 4, !dbg !3844
  call void @llvm.dbg.declare(metadata i32* %__mask83, metadata !3845, metadata !DIExpression()), !dbg !3844
  store i32 3, i32* %__mask83, align 4, !dbg !3844
  call void @llvm.dbg.declare(metadata i32* %__off84, metadata !3846, metadata !DIExpression()), !dbg !3844
  store i32 2, i32* %__off84, align 4, !dbg !3844
  call void @llvm.dbg.declare(metadata i32* %__shft85, metadata !3847, metadata !DIExpression()), !dbg !3844
  store i32 0, i32* %__shft85, align 4, !dbg !3844
  call void @llvm.dbg.declare(metadata i32* %__res86, metadata !3848, metadata !DIExpression()), !dbg !3844
  %arrayidx87 = getelementptr [4 x i32], [4 x i32]* %resp, i64 0, i64 2, !dbg !3844
  %43 = load i32, i32* %arrayidx87, align 8, !dbg !3844
  %shr88 = lshr i32 %43, 0, !dbg !3844
  store i32 %shr88, i32* %__res86, align 4, !dbg !3844
  %44 = load i32, i32* %__res86, align 4, !dbg !3844
  %and90 = and i32 %44, 3, !dbg !3844
  store i32 %and90, i32* %tmp89, align 4, !dbg !3849
  %45 = load i32, i32* %tmp89, align 4, !dbg !3844
  %conv91 = trunc i32 %45 to i8, !dbg !3851
  %46 = load %struct.sd_scr*, %struct.sd_scr** %scr, align 8, !dbg !3852
  %cmds = getelementptr inbounds %struct.sd_scr, %struct.sd_scr* %46, i32 0, i32 5, !dbg !3853
  store i8 %conv91, i8* %cmds, align 1, !dbg !3854
  br label %if.end92, !dbg !3852

if.end92:                                         ; preds = %if.then81, %if.end78
  %47 = load %struct.sd_scr*, %struct.sd_scr** %scr, align 8, !dbg !3855
  %bus_widths93 = getelementptr inbounds %struct.sd_scr, %struct.sd_scr* %47, i32 0, i32 4, !dbg !3857
  %48 = load i8, i8* %bus_widths93, align 1, !dbg !3857
  %conv94 = zext i8 %48 to i32, !dbg !3855
  %and95 = and i32 %conv94, 1, !dbg !3858
  %tobool96 = icmp ne i32 %and95, 0, !dbg !3858
  br i1 %tobool96, label %lor.lhs.false, label %if.then101, !dbg !3859

lor.lhs.false:                                    ; preds = %if.end92
  %49 = load %struct.sd_scr*, %struct.sd_scr** %scr, align 8, !dbg !3860
  %bus_widths97 = getelementptr inbounds %struct.sd_scr, %struct.sd_scr* %49, i32 0, i32 4, !dbg !3861
  %50 = load i8, i8* %bus_widths97, align 1, !dbg !3861
  %conv98 = zext i8 %50 to i32, !dbg !3860
  %and99 = and i32 %conv98, 4, !dbg !3862
  %tobool100 = icmp ne i32 %and99, 0, !dbg !3862
  br i1 %tobool100, label %if.end106, label %if.then101, !dbg !3863

if.then101:                                       ; preds = %lor.lhs.false, %if.end92
  %51 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !3864
  %host102 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %51, i32 0, i32 0, !dbg !3864
  %52 = load %struct.mmc_host*, %struct.mmc_host** %host102, align 8, !dbg !3864
  %class_dev103 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %52, i32 0, i32 1, !dbg !3864
  %call104 = call i8* @dev_name(%struct.device* %class_dev103) #11, !dbg !3864
  %call105 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.42, i64 0, i64 0), i8* %call104) #12, !dbg !3864
  store i32 -22, i32* %retval, align 4, !dbg !3866
  br label %return, !dbg !3866

if.end106:                                        ; preds = %lor.lhs.false
  store i32 0, i32* %retval, align 4, !dbg !3867
  br label %return, !dbg !3867

return:                                           ; preds = %if.end106, %if.then101, %if.then
  %53 = load i32, i32* %retval, align 4, !dbg !3868
  ret i32 %53, !dbg !3868
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mmc_read_ssr(%struct.mmc_card* %card) #0 !dbg !3869 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !2692, metadata !DIExpression()), !dbg !3870
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !2704, metadata !DIExpression()), !dbg !3873
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !2706, metadata !DIExpression()), !dbg !3874
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !2708, metadata !DIExpression()), !dbg !3875
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !2710, metadata !DIExpression()), !dbg !3876
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !2716, metadata !DIExpression()), !dbg !3878
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !2722, metadata !DIExpression()), !dbg !3880
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !2731, metadata !DIExpression()), !dbg !3883
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !2733, metadata !DIExpression()), !dbg !3884
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !2735, metadata !DIExpression()), !dbg !3885
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !2737, metadata !DIExpression()), !dbg !3886
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !2739, metadata !DIExpression()), !dbg !3887
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !2741, metadata !DIExpression()), !dbg !3888
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !2743, metadata !DIExpression()), !dbg !3889
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !2745, metadata !DIExpression()), !dbg !3890
  %retval = alloca i32, align 4
  %card.addr = alloca %struct.mmc_card*, align 8
  %au = alloca i32, align 4
  %es = alloca i32, align 4
  %et = alloca i32, align 4
  %eo = alloca i32, align 4
  %raw_ssr = alloca i32*, align 8
  %resp = alloca [4 x i32], align 16
  %discard_support = alloca i8, align 1
  %i = alloca i32, align 4
  %__size = alloca i32, align 4
  %__mask = alloca i32, align 4
  %__off = alloca i32, align 4
  %__shft = alloca i32, align 4
  %__res = alloca i32, align 4
  %tmp = alloca i32, align 4
  %__size51 = alloca i32, align 4
  %__mask52 = alloca i32, align 4
  %__off53 = alloca i32, align 4
  %__shft54 = alloca i32, align 4
  %__res55 = alloca i32, align 4
  %tmp63 = alloca i32, align 4
  %__size65 = alloca i32, align 4
  %__mask66 = alloca i32, align 4
  %__off67 = alloca i32, align 4
  %__shft68 = alloca i32, align 4
  %__res69 = alloca i32, align 4
  %tmp73 = alloca i32, align 4
  %__size78 = alloca i32, align 4
  %__mask79 = alloca i32, align 4
  %__off80 = alloca i32, align 4
  %__shft81 = alloca i32, align 4
  %__res82 = alloca i32, align 4
  %tmp86 = alloca i32, align 4
  %__size101 = alloca i32, align 4
  %__mask102 = alloca i32, align 4
  %__off103 = alloca i32, align 4
  %__shft104 = alloca i32, align 4
  %__res105 = alloca i32, align 4
  %tmp108 = alloca i32, align 4
  store %struct.mmc_card* %card, %struct.mmc_card** %card.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card.addr, metadata !3891, metadata !DIExpression()), !dbg !3892
  call void @llvm.dbg.declare(metadata i32* %au, metadata !3893, metadata !DIExpression()), !dbg !3894
  call void @llvm.dbg.declare(metadata i32* %es, metadata !3895, metadata !DIExpression()), !dbg !3896
  call void @llvm.dbg.declare(metadata i32* %et, metadata !3897, metadata !DIExpression()), !dbg !3898
  call void @llvm.dbg.declare(metadata i32* %eo, metadata !3899, metadata !DIExpression()), !dbg !3900
  call void @llvm.dbg.declare(metadata i32** %raw_ssr, metadata !3901, metadata !DIExpression()), !dbg !3903
  call void @llvm.dbg.declare(metadata [4 x i32]* %resp, metadata !3904, metadata !DIExpression()), !dbg !3905
  %0 = bitcast [4 x i32]* %resp to i8*, !dbg !3905
  call void @llvm.memset.p0i8.i64(i8* align 16 %0, i8 0, i64 16, i1 false), !dbg !3905
  call void @llvm.dbg.declare(metadata i8* %discard_support, metadata !3906, metadata !DIExpression()), !dbg !3907
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3908, metadata !DIExpression()), !dbg !3909
  %1 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !3910
  %csd = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %1, i32 0, i32 20, !dbg !3912
  %cmdclass = getelementptr inbounds %struct.mmc_csd, %struct.mmc_csd* %csd, i32 0, i32 2, !dbg !3913
  %2 = load i16, i16* %cmdclass, align 2, !dbg !3913
  %conv = zext i16 %2 to i32, !dbg !3910
  %and = and i32 %conv, 256, !dbg !3914
  %tobool = icmp ne i32 %and, 0, !dbg !3914
  br i1 %tobool, label %if.end, label %if.then, !dbg !3915

if.then:                                          ; preds = %entry
  %3 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !3916
  %host = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %3, i32 0, i32 0, !dbg !3916
  %4 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !3916
  %class_dev = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %4, i32 0, i32 1, !dbg !3916
  %call = call i8* @dev_name(%struct.device* %class_dev) #11, !dbg !3916
  %call1 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.43, i64 0, i64 0), i8* %call) #12, !dbg !3916
  store i32 0, i32* %retval, align 4, !dbg !3918
  br label %return, !dbg !3918

if.end:                                           ; preds = %entry
  store i64 64, i64* %size.addr.i, align 8
  store i32 3264, i32* %flags.addr.i, align 4
  %5 = load i64, i64* %size.addr.i, align 8, !dbg !3919
  %6 = call i1 @llvm.is.constant.i64(i64 %5) #8, !dbg !3920
  br i1 %6, label %if.then.i, label %if.end9.i, !dbg !3921

if.then.i:                                        ; preds = %if.end
  %7 = load i64, i64* %size.addr.i, align 8, !dbg !3922
  %cmp.i = icmp ugt i64 %7, 8192, !dbg !3923
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !3924

if.then1.i:                                       ; preds = %if.then.i
  %8 = load i64, i64* %size.addr.i, align 8, !dbg !3925
  %9 = load i32, i32* %flags.addr.i, align 4, !dbg !3926
  store i64 %8, i64* %size.addr.i.i, align 8
  store i32 %9, i32* %flags.addr.i.i, align 4
  %10 = load i64, i64* %size.addr.i.i, align 8, !dbg !3927
  %call.i.i = call i32 @get_order(i64 %10) #9, !dbg !3928
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !3887
  %11 = load i64, i64* %size.addr.i.i, align 8, !dbg !3929
  %12 = load i32, i32* %flags.addr.i.i, align 4, !dbg !3930
  %13 = load i32, i32* %order.i.i, align 4, !dbg !3931
  store i64 %11, i64* %size.addr.i.i.i, align 8
  store i32 %12, i32* %flags.addr.i.i.i, align 4
  store i32 %13, i32* %order.addr.i.i.i, align 4
  %14 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !3932
  %15 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !3933
  %16 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !3934
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %14, i32 %15, i32 %16) #10, !dbg !3935
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !3935
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !3935
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !3935
  call void @llvm.assume(i1 %maskcond.i.i.i) #8, !dbg !3935
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !3936
  br label %kmalloc.exit, !dbg !3936

if.end.i:                                         ; preds = %if.then.i
  %17 = load i64, i64* %size.addr.i, align 8, !dbg !3937
  store i64 %17, i64* %size.addr.i11.i, align 8
  %18 = load i64, i64* %size.addr.i11.i, align 8, !dbg !3938
  %tobool.i.i = icmp ne i64 %18, 0, !dbg !3938
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !3939

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !3940
  br label %kmalloc_index.exit.i, !dbg !3940

if.end.i.i:                                       ; preds = %if.end.i
  %19 = load i64, i64* %size.addr.i11.i, align 8, !dbg !3941
  %cmp.i.i = icmp ule i64 %19, 8, !dbg !3942
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !3943

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !3944
  br label %kmalloc_index.exit.i, !dbg !3944

if.end2.i.i:                                      ; preds = %if.end.i.i
  %20 = load i64, i64* %size.addr.i11.i, align 8, !dbg !3945
  %cmp3.i.i = icmp ugt i64 %20, 64, !dbg !3946
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !3947

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %21 = load i64, i64* %size.addr.i11.i, align 8, !dbg !3948
  %cmp4.i.i = icmp ule i64 %21, 96, !dbg !3949
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !3950

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !3951
  br label %kmalloc_index.exit.i, !dbg !3951

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %22 = load i64, i64* %size.addr.i11.i, align 8, !dbg !3952
  %cmp7.i.i = icmp ugt i64 %22, 128, !dbg !3953
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !3954

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %23 = load i64, i64* %size.addr.i11.i, align 8, !dbg !3955
  %cmp9.i.i = icmp ule i64 %23, 192, !dbg !3956
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !3957

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !3958
  br label %kmalloc_index.exit.i, !dbg !3958

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %24 = load i64, i64* %size.addr.i11.i, align 8, !dbg !3959
  %cmp12.i.i = icmp ule i64 %24, 8, !dbg !3960
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !3961

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !3962
  br label %kmalloc_index.exit.i, !dbg !3962

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %25 = load i64, i64* %size.addr.i11.i, align 8, !dbg !3963
  %cmp15.i.i = icmp ule i64 %25, 16, !dbg !3964
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !3965

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !3966
  br label %kmalloc_index.exit.i, !dbg !3966

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %26 = load i64, i64* %size.addr.i11.i, align 8, !dbg !3967
  %cmp18.i.i = icmp ule i64 %26, 32, !dbg !3968
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !3969

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !3970
  br label %kmalloc_index.exit.i, !dbg !3970

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %27 = load i64, i64* %size.addr.i11.i, align 8, !dbg !3971
  %cmp21.i.i = icmp ule i64 %27, 64, !dbg !3972
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !3973

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !3974
  br label %kmalloc_index.exit.i, !dbg !3974

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %28 = load i64, i64* %size.addr.i11.i, align 8, !dbg !3975
  %cmp24.i.i = icmp ule i64 %28, 128, !dbg !3976
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !3977

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !3978
  br label %kmalloc_index.exit.i, !dbg !3978

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !3979
  %cmp27.i.i = icmp ule i64 %29, 256, !dbg !3980
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !3981

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !3982
  br label %kmalloc_index.exit.i, !dbg !3982

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !3983
  %cmp30.i.i = icmp ule i64 %30, 512, !dbg !3984
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !3985

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !3986
  br label %kmalloc_index.exit.i, !dbg !3986

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !3987
  %cmp33.i.i = icmp ule i64 %31, 1024, !dbg !3988
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !3989

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !3990
  br label %kmalloc_index.exit.i, !dbg !3990

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !3991
  %cmp36.i.i = icmp ule i64 %32, 2048, !dbg !3992
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !3993

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !3994
  br label %kmalloc_index.exit.i, !dbg !3994

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !3995
  %cmp39.i.i = icmp ule i64 %33, 4096, !dbg !3996
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !3997

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !3998
  br label %kmalloc_index.exit.i, !dbg !3998

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !3999
  %cmp42.i.i = icmp ule i64 %34, 8192, !dbg !4000
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !4001

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !4002
  br label %kmalloc_index.exit.i, !dbg !4002

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4003
  %cmp45.i.i = icmp ule i64 %35, 16384, !dbg !4004
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !4005

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !4006
  br label %kmalloc_index.exit.i, !dbg !4006

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4007
  %cmp48.i.i = icmp ule i64 %36, 32768, !dbg !4008
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !4009

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !4010
  br label %kmalloc_index.exit.i, !dbg !4010

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4011
  %cmp51.i.i = icmp ule i64 %37, 65536, !dbg !4012
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !4013

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !4014
  br label %kmalloc_index.exit.i, !dbg !4014

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4015
  %cmp54.i.i = icmp ule i64 %38, 131072, !dbg !4016
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !4017

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !4018
  br label %kmalloc_index.exit.i, !dbg !4018

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4019
  %cmp57.i.i = icmp ule i64 %39, 262144, !dbg !4020
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !4021

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !4022
  br label %kmalloc_index.exit.i, !dbg !4022

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4023
  %cmp60.i.i = icmp ule i64 %40, 524288, !dbg !4024
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !4025

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !4026
  br label %kmalloc_index.exit.i, !dbg !4026

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4027
  %cmp63.i.i = icmp ule i64 %41, 1048576, !dbg !4028
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !4029

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !4030
  br label %kmalloc_index.exit.i, !dbg !4030

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4031
  %cmp66.i.i = icmp ule i64 %42, 2097152, !dbg !4032
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !4033

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !4034
  br label %kmalloc_index.exit.i, !dbg !4034

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4035
  %cmp69.i.i = icmp ule i64 %43, 4194304, !dbg !4036
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !4037

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !4038
  br label %kmalloc_index.exit.i, !dbg !4038

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4039
  %cmp72.i.i = icmp ule i64 %44, 8388608, !dbg !4040
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !4041

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !4042
  br label %kmalloc_index.exit.i, !dbg !4042

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %45 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4043
  %cmp75.i.i = icmp ule i64 %45, 16777216, !dbg !4044
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !4045

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !4046
  br label %kmalloc_index.exit.i, !dbg !4046

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %46 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4047
  %cmp78.i.i = icmp ule i64 %46, 33554432, !dbg !4048
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !4049

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !4050
  br label %kmalloc_index.exit.i, !dbg !4050

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %47 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4051
  %cmp81.i.i = icmp ule i64 %47, 67108864, !dbg !4052
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !4053

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !4054
  br label %kmalloc_index.exit.i, !dbg !4054

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5, i64 0, i64 0), i32 382, i32 0, i64 12) #8, !dbg !4055, !srcloc !2949
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 88) #8, !dbg !4056, !srcloc !2953
  unreachable, !dbg !4057

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %48 = load i32, i32* %retval.i.i, align 4, !dbg !4058
  store i32 %48, i32* %index.i, align 4, !dbg !4059
  %49 = load i32, i32* %index.i, align 4, !dbg !4060
  %tobool.i = icmp ne i32 %49, 0, !dbg !4060
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !4061

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !4062
  br label %kmalloc.exit, !dbg !4062

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %50 = load i32, i32* %flags.addr.i, align 4, !dbg !4063
  store i32 %50, i32* %flags.addr.i13.i, align 4
  %51 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !4064
  %and.i.i = and i32 %51, 17, !dbg !4064
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !4064
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !4064
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !4064
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !4064
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !4065

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !4066
  br label %kmalloc_type.exit.i, !dbg !4066

if.end.i16.i:                                     ; preds = %if.end4.i
  %52 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !4067
  %and2.i.i = and i32 %52, 1, !dbg !4068
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !4067
  %53 = zext i1 %tobool3.i.i to i64, !dbg !4067
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !4067
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !4069
  br label %kmalloc_type.exit.i, !dbg !4069

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %54 = load i32, i32* %retval.i12.i, align 4, !dbg !4070
  %idxprom.i = zext i32 %54 to i64, !dbg !4071
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !4071
  %55 = load i32, i32* %index.i, align 4, !dbg !4072
  %idxprom6.i = zext i32 %55 to i64, !dbg !4071
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !4071
  %56 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !4071
  %57 = load i32, i32* %flags.addr.i, align 4, !dbg !4073
  %58 = load i64, i64* %size.addr.i, align 8, !dbg !4074
  store %struct.kmem_cache* %56, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %57, i32* %flags.addr.i17.i, align 4
  store i64 %58, i64* %size.addr.i18.i, align 8
  %59 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !4075
  %60 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !4076
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %59, i32 %60) #10, !dbg !4077
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !4077
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !4077
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !4077
  call void @llvm.assume(i1 %maskcond.i.i) #8, !dbg !4077
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !3875
  %61 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !4078
  %62 = load i8*, i8** %ret.i.i, align 8, !dbg !4079
  %63 = load i64, i64* %size.addr.i18.i, align 8, !dbg !4080
  %64 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !4081
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %61, i8* %62, i64 %63, i32 %64) #10, !dbg !4082
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !4083
  %65 = load i8*, i8** %ret.i.i, align 8, !dbg !4084
  store i8* %65, i8** %retval.i, align 8, !dbg !4085
  br label %kmalloc.exit, !dbg !4085

if.end9.i:                                        ; preds = %if.end
  %66 = load i64, i64* %size.addr.i, align 8, !dbg !4086
  %67 = load i32, i32* %flags.addr.i, align 4, !dbg !4087
  %call10.i = call noalias i8* @__kmalloc(i64 %66, i32 %67) #10, !dbg !4088
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !4088
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !4088
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !4088
  call void @llvm.assume(i1 %maskcond.i) #8, !dbg !4088
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !4089
  br label %kmalloc.exit, !dbg !4089

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %68 = load i8*, i8** %retval.i, align 8, !dbg !4090
  %69 = bitcast i8* %68 to i32*, !dbg !4091
  store i32* %69, i32** %raw_ssr, align 8, !dbg !4092
  %70 = load i32*, i32** %raw_ssr, align 8, !dbg !4093
  %tobool3 = icmp ne i32* %70, null, !dbg !4093
  br i1 %tobool3, label %if.end5, label %if.then4, !dbg !4095

if.then4:                                         ; preds = %kmalloc.exit
  store i32 -12, i32* %retval, align 4, !dbg !4096
  br label %return, !dbg !4096

if.end5:                                          ; preds = %kmalloc.exit
  %71 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !4097
  %72 = load i32*, i32** %raw_ssr, align 8, !dbg !4099
  %73 = bitcast i32* %72 to i8*, !dbg !4099
  %call6 = call i32 @mmc_app_sd_status(%struct.mmc_card* %71, i8* %73) #11, !dbg !4100
  %tobool7 = icmp ne i32 %call6, 0, !dbg !4100
  br i1 %tobool7, label %if.then8, label %if.end13, !dbg !4101

if.then8:                                         ; preds = %if.end5
  %74 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !4102
  %host9 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %74, i32 0, i32 0, !dbg !4102
  %75 = load %struct.mmc_host*, %struct.mmc_host** %host9, align 8, !dbg !4102
  %class_dev10 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %75, i32 0, i32 1, !dbg !4102
  %call11 = call i8* @dev_name(%struct.device* %class_dev10) #11, !dbg !4102
  %call12 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.44, i64 0, i64 0), i8* %call11) #12, !dbg !4102
  %76 = load i32*, i32** %raw_ssr, align 8, !dbg !4104
  %77 = bitcast i32* %76 to i8*, !dbg !4104
  call void @kfree(i8* %77) #11, !dbg !4105
  store i32 0, i32* %retval, align 4, !dbg !4106
  br label %return, !dbg !4106

if.end13:                                         ; preds = %if.end5
  store i32 0, i32* %i, align 4, !dbg !4107
  br label %for.cond, !dbg !4109

for.cond:                                         ; preds = %for.inc, %if.end13
  %78 = load i32, i32* %i, align 4, !dbg !4110
  %cmp = icmp slt i32 %78, 16, !dbg !4112
  br i1 %cmp, label %for.body, label %for.end, !dbg !4113

for.body:                                         ; preds = %for.cond
  %79 = load i32*, i32** %raw_ssr, align 8, !dbg !4114
  %80 = load i32, i32* %i, align 4, !dbg !4114
  %idxprom = sext i32 %80 to i64, !dbg !4114
  %arrayidx = getelementptr i32, i32* %79, i64 %idxprom, !dbg !4114
  %81 = load i32, i32* %arrayidx, align 4, !dbg !4114
  %82 = call i1 @llvm.is.constant.i32(i32 %81), !dbg !4114
  br i1 %82, label %cond.true, label %cond.false, !dbg !4114

cond.true:                                        ; preds = %for.body
  %83 = load i32*, i32** %raw_ssr, align 8, !dbg !4114
  %84 = load i32, i32* %i, align 4, !dbg !4114
  %idxprom15 = sext i32 %84 to i64, !dbg !4114
  %arrayidx16 = getelementptr i32, i32* %83, i64 %idxprom15, !dbg !4114
  %85 = load i32, i32* %arrayidx16, align 4, !dbg !4114
  %and17 = and i32 %85, 255, !dbg !4114
  %shl = shl i32 %and17, 24, !dbg !4114
  %86 = load i32*, i32** %raw_ssr, align 8, !dbg !4114
  %87 = load i32, i32* %i, align 4, !dbg !4114
  %idxprom18 = sext i32 %87 to i64, !dbg !4114
  %arrayidx19 = getelementptr i32, i32* %86, i64 %idxprom18, !dbg !4114
  %88 = load i32, i32* %arrayidx19, align 4, !dbg !4114
  %and20 = and i32 %88, 65280, !dbg !4114
  %shl21 = shl i32 %and20, 8, !dbg !4114
  %or = or i32 %shl, %shl21, !dbg !4114
  %89 = load i32*, i32** %raw_ssr, align 8, !dbg !4114
  %90 = load i32, i32* %i, align 4, !dbg !4114
  %idxprom22 = sext i32 %90 to i64, !dbg !4114
  %arrayidx23 = getelementptr i32, i32* %89, i64 %idxprom22, !dbg !4114
  %91 = load i32, i32* %arrayidx23, align 4, !dbg !4114
  %and24 = and i32 %91, 16711680, !dbg !4114
  %shr = lshr i32 %and24, 8, !dbg !4114
  %or25 = or i32 %or, %shr, !dbg !4114
  %92 = load i32*, i32** %raw_ssr, align 8, !dbg !4114
  %93 = load i32, i32* %i, align 4, !dbg !4114
  %idxprom26 = sext i32 %93 to i64, !dbg !4114
  %arrayidx27 = getelementptr i32, i32* %92, i64 %idxprom26, !dbg !4114
  %94 = load i32, i32* %arrayidx27, align 4, !dbg !4114
  %and28 = and i32 %94, -16777216, !dbg !4114
  %shr29 = lshr i32 %and28, 24, !dbg !4114
  %or30 = or i32 %or25, %shr29, !dbg !4114
  br label %cond.end, !dbg !4114

cond.false:                                       ; preds = %for.body
  %95 = load i32*, i32** %raw_ssr, align 8, !dbg !4114
  %96 = load i32, i32* %i, align 4, !dbg !4114
  %idxprom31 = sext i32 %96 to i64, !dbg !4114
  %arrayidx32 = getelementptr i32, i32* %95, i64 %idxprom31, !dbg !4114
  %97 = load i32, i32* %arrayidx32, align 4, !dbg !4114
  %call33 = call i32 @__fswab32(i32 %97) #9, !dbg !4114
  br label %cond.end, !dbg !4114

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %or30, %cond.true ], [ %call33, %cond.false ], !dbg !4114
  %98 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !4115
  %raw_ssr34 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %98, i32 0, i32 18, !dbg !4116
  %99 = load i32, i32* %i, align 4, !dbg !4117
  %idxprom35 = sext i32 %99 to i64, !dbg !4115
  %arrayidx36 = getelementptr [16 x i32], [16 x i32]* %raw_ssr34, i64 0, i64 %idxprom35, !dbg !4115
  store i32 %cond, i32* %arrayidx36, align 4, !dbg !4118
  br label %for.inc, !dbg !4115

for.inc:                                          ; preds = %cond.end
  %100 = load i32, i32* %i, align 4, !dbg !4119
  %inc = add i32 %100, 1, !dbg !4119
  store i32 %inc, i32* %i, align 4, !dbg !4119
  br label %for.cond, !dbg !4120, !llvm.loop !4121

for.end:                                          ; preds = %for.cond
  %101 = load i32*, i32** %raw_ssr, align 8, !dbg !4123
  %102 = bitcast i32* %101 to i8*, !dbg !4123
  call void @kfree(i8* %102) #11, !dbg !4124
  call void @llvm.dbg.declare(metadata i32* %__size, metadata !4125, metadata !DIExpression()), !dbg !4127
  store i32 4, i32* %__size, align 4, !dbg !4127
  call void @llvm.dbg.declare(metadata i32* %__mask, metadata !4128, metadata !DIExpression()), !dbg !4127
  store i32 15, i32* %__mask, align 4, !dbg !4127
  call void @llvm.dbg.declare(metadata i32* %__off, metadata !4129, metadata !DIExpression()), !dbg !4127
  store i32 2, i32* %__off, align 4, !dbg !4127
  call void @llvm.dbg.declare(metadata i32* %__shft, metadata !4130, metadata !DIExpression()), !dbg !4127
  store i32 12, i32* %__shft, align 4, !dbg !4127
  call void @llvm.dbg.declare(metadata i32* %__res, metadata !4131, metadata !DIExpression()), !dbg !4127
  %103 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !4127
  %raw_ssr37 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %103, i32 0, i32 18, !dbg !4127
  %arrayidx38 = getelementptr [16 x i32], [16 x i32]* %raw_ssr37, i64 0, i64 2, !dbg !4127
  %104 = load i32, i32* %arrayidx38, align 4, !dbg !4127
  %shr39 = lshr i32 %104, 12, !dbg !4127
  store i32 %shr39, i32* %__res, align 4, !dbg !4127
  %105 = load i32, i32* %__res, align 4, !dbg !4127
  %and40 = and i32 %105, 15, !dbg !4127
  store i32 %and40, i32* %tmp, align 4, !dbg !4132
  %106 = load i32, i32* %tmp, align 4, !dbg !4127
  store i32 %106, i32* %au, align 4, !dbg !4134
  %107 = load i32, i32* %au, align 4, !dbg !4135
  %tobool41 = icmp ne i32 %107, 0, !dbg !4135
  br i1 %tobool41, label %if.then42, label %if.end97, !dbg !4137

if.then42:                                        ; preds = %for.end
  %108 = load i32, i32* %au, align 4, !dbg !4138
  %cmp43 = icmp ule i32 %108, 9, !dbg !4141
  br i1 %cmp43, label %if.then47, label %lor.lhs.false, !dbg !4142

lor.lhs.false:                                    ; preds = %if.then42
  %109 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !4143
  %scr = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %109, i32 0, i32 22, !dbg !4144
  %sda_spec3 = getelementptr inbounds %struct.sd_scr, %struct.sd_scr* %scr, i32 0, i32 1, !dbg !4145
  %110 = load i8, i8* %sda_spec3, align 1, !dbg !4145
  %conv45 = zext i8 %110 to i32, !dbg !4143
  %tobool46 = icmp ne i32 %conv45, 0, !dbg !4143
  br i1 %tobool46, label %if.then47, label %if.else, !dbg !4146

if.then47:                                        ; preds = %lor.lhs.false, %if.then42
  %111 = load i32, i32* %au, align 4, !dbg !4147
  %idxprom48 = zext i32 %111 to i64, !dbg !4149
  %arrayidx49 = getelementptr [16 x i32], [16 x i32]* @sd_au_size, i64 0, i64 %idxprom48, !dbg !4149
  %112 = load i32, i32* %arrayidx49, align 4, !dbg !4149
  %113 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !4150
  %ssr = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %113, i32 0, i32 23, !dbg !4151
  %au50 = getelementptr inbounds %struct.sd_ssr, %struct.sd_ssr* %ssr, i32 0, i32 0, !dbg !4152
  store i32 %112, i32* %au50, align 8, !dbg !4153
  call void @llvm.dbg.declare(metadata i32* %__size51, metadata !4154, metadata !DIExpression()), !dbg !4156
  store i32 16, i32* %__size51, align 4, !dbg !4156
  call void @llvm.dbg.declare(metadata i32* %__mask52, metadata !4157, metadata !DIExpression()), !dbg !4156
  store i32 65535, i32* %__mask52, align 4, !dbg !4156
  call void @llvm.dbg.declare(metadata i32* %__off53, metadata !4158, metadata !DIExpression()), !dbg !4156
  store i32 3, i32* %__off53, align 4, !dbg !4156
  call void @llvm.dbg.declare(metadata i32* %__shft54, metadata !4159, metadata !DIExpression()), !dbg !4156
  store i32 24, i32* %__shft54, align 4, !dbg !4156
  call void @llvm.dbg.declare(metadata i32* %__res55, metadata !4160, metadata !DIExpression()), !dbg !4156
  %114 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !4156
  %raw_ssr56 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %114, i32 0, i32 18, !dbg !4156
  %arrayidx57 = getelementptr [16 x i32], [16 x i32]* %raw_ssr56, i64 0, i64 3, !dbg !4156
  %115 = load i32, i32* %arrayidx57, align 4, !dbg !4156
  %shr58 = lshr i32 %115, 24, !dbg !4156
  store i32 %shr58, i32* %__res55, align 4, !dbg !4156
  %116 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !4161
  %raw_ssr59 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %116, i32 0, i32 18, !dbg !4161
  %arrayidx60 = getelementptr [16 x i32], [16 x i32]* %raw_ssr59, i64 0, i64 2, !dbg !4161
  %117 = load i32, i32* %arrayidx60, align 4, !dbg !4161
  %shl61 = shl i32 %117, 8, !dbg !4161
  %118 = load i32, i32* %__res55, align 4, !dbg !4161
  %or62 = or i32 %118, %shl61, !dbg !4161
  store i32 %or62, i32* %__res55, align 4, !dbg !4161
  %119 = load i32, i32* %__res55, align 4, !dbg !4156
  %and64 = and i32 %119, 65535, !dbg !4156
  store i32 %and64, i32* %tmp63, align 4, !dbg !4161
  %120 = load i32, i32* %tmp63, align 4, !dbg !4156
  store i32 %120, i32* %es, align 4, !dbg !4163
  call void @llvm.dbg.declare(metadata i32* %__size65, metadata !4164, metadata !DIExpression()), !dbg !4166
  store i32 6, i32* %__size65, align 4, !dbg !4166
  call void @llvm.dbg.declare(metadata i32* %__mask66, metadata !4167, metadata !DIExpression()), !dbg !4166
  store i32 63, i32* %__mask66, align 4, !dbg !4166
  call void @llvm.dbg.declare(metadata i32* %__off67, metadata !4168, metadata !DIExpression()), !dbg !4166
  store i32 3, i32* %__off67, align 4, !dbg !4166
  call void @llvm.dbg.declare(metadata i32* %__shft68, metadata !4169, metadata !DIExpression()), !dbg !4166
  store i32 18, i32* %__shft68, align 4, !dbg !4166
  call void @llvm.dbg.declare(metadata i32* %__res69, metadata !4170, metadata !DIExpression()), !dbg !4166
  %121 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !4166
  %raw_ssr70 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %121, i32 0, i32 18, !dbg !4166
  %arrayidx71 = getelementptr [16 x i32], [16 x i32]* %raw_ssr70, i64 0, i64 3, !dbg !4166
  %122 = load i32, i32* %arrayidx71, align 4, !dbg !4166
  %shr72 = lshr i32 %122, 18, !dbg !4166
  store i32 %shr72, i32* %__res69, align 4, !dbg !4166
  %123 = load i32, i32* %__res69, align 4, !dbg !4166
  %and74 = and i32 %123, 63, !dbg !4166
  store i32 %and74, i32* %tmp73, align 4, !dbg !4171
  %124 = load i32, i32* %tmp73, align 4, !dbg !4166
  store i32 %124, i32* %et, align 4, !dbg !4173
  %125 = load i32, i32* %es, align 4, !dbg !4174
  %tobool75 = icmp ne i32 %125, 0, !dbg !4174
  br i1 %tobool75, label %land.lhs.true, label %if.end91, !dbg !4176

land.lhs.true:                                    ; preds = %if.then47
  %126 = load i32, i32* %et, align 4, !dbg !4177
  %tobool76 = icmp ne i32 %126, 0, !dbg !4177
  br i1 %tobool76, label %if.then77, label %if.end91, !dbg !4178

if.then77:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %__size78, metadata !4179, metadata !DIExpression()), !dbg !4182
  store i32 2, i32* %__size78, align 4, !dbg !4182
  call void @llvm.dbg.declare(metadata i32* %__mask79, metadata !4183, metadata !DIExpression()), !dbg !4182
  store i32 3, i32* %__mask79, align 4, !dbg !4182
  call void @llvm.dbg.declare(metadata i32* %__off80, metadata !4184, metadata !DIExpression()), !dbg !4182
  store i32 3, i32* %__off80, align 4, !dbg !4182
  call void @llvm.dbg.declare(metadata i32* %__shft81, metadata !4185, metadata !DIExpression()), !dbg !4182
  store i32 16, i32* %__shft81, align 4, !dbg !4182
  call void @llvm.dbg.declare(metadata i32* %__res82, metadata !4186, metadata !DIExpression()), !dbg !4182
  %127 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !4182
  %raw_ssr83 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %127, i32 0, i32 18, !dbg !4182
  %arrayidx84 = getelementptr [16 x i32], [16 x i32]* %raw_ssr83, i64 0, i64 3, !dbg !4182
  %128 = load i32, i32* %arrayidx84, align 4, !dbg !4182
  %shr85 = lshr i32 %128, 16, !dbg !4182
  store i32 %shr85, i32* %__res82, align 4, !dbg !4182
  %129 = load i32, i32* %__res82, align 4, !dbg !4182
  %and87 = and i32 %129, 3, !dbg !4182
  store i32 %and87, i32* %tmp86, align 4, !dbg !4187
  %130 = load i32, i32* %tmp86, align 4, !dbg !4182
  store i32 %130, i32* %eo, align 4, !dbg !4189
  %131 = load i32, i32* %et, align 4, !dbg !4190
  %mul = mul i32 %131, 1000, !dbg !4191
  %132 = load i32, i32* %es, align 4, !dbg !4192
  %div = udiv i32 %mul, %132, !dbg !4193
  %133 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !4194
  %ssr88 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %133, i32 0, i32 23, !dbg !4195
  %erase_timeout = getelementptr inbounds %struct.sd_ssr, %struct.sd_ssr* %ssr88, i32 0, i32 1, !dbg !4196
  store i32 %div, i32* %erase_timeout, align 4, !dbg !4197
  %134 = load i32, i32* %eo, align 4, !dbg !4198
  %mul89 = mul i32 %134, 1000, !dbg !4199
  %135 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !4200
  %ssr90 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %135, i32 0, i32 23, !dbg !4201
  %erase_offset = getelementptr inbounds %struct.sd_ssr, %struct.sd_ssr* %ssr90, i32 0, i32 2, !dbg !4202
  store i32 %mul89, i32* %erase_offset, align 8, !dbg !4203
  br label %if.end91, !dbg !4204

if.end91:                                         ; preds = %if.then77, %land.lhs.true, %if.then47
  br label %if.end96, !dbg !4205

if.else:                                          ; preds = %lor.lhs.false
  %136 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !4206
  %host92 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %136, i32 0, i32 0, !dbg !4206
  %137 = load %struct.mmc_host*, %struct.mmc_host** %host92, align 8, !dbg !4206
  %class_dev93 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %137, i32 0, i32 1, !dbg !4206
  %call94 = call i8* @dev_name(%struct.device* %class_dev93) #11, !dbg !4206
  %call95 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.45, i64 0, i64 0), i8* %call94) #12, !dbg !4206
  br label %if.end96

if.end96:                                         ; preds = %if.else, %if.end91
  br label %if.end97, !dbg !4208

if.end97:                                         ; preds = %if.end96, %for.end
  %138 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !4209
  %raw_ssr98 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %138, i32 0, i32 18, !dbg !4210
  %arrayidx99 = getelementptr [16 x i32], [16 x i32]* %raw_ssr98, i64 0, i64 6, !dbg !4209
  %139 = load i32, i32* %arrayidx99, align 4, !dbg !4209
  %arrayidx100 = getelementptr [4 x i32], [4 x i32]* %resp, i64 0, i64 3, !dbg !4211
  store i32 %139, i32* %arrayidx100, align 4, !dbg !4212
  call void @llvm.dbg.declare(metadata i32* %__size101, metadata !4213, metadata !DIExpression()), !dbg !4215
  store i32 1, i32* %__size101, align 4, !dbg !4215
  call void @llvm.dbg.declare(metadata i32* %__mask102, metadata !4216, metadata !DIExpression()), !dbg !4215
  store i32 1, i32* %__mask102, align 4, !dbg !4215
  call void @llvm.dbg.declare(metadata i32* %__off103, metadata !4217, metadata !DIExpression()), !dbg !4215
  store i32 3, i32* %__off103, align 4, !dbg !4215
  call void @llvm.dbg.declare(metadata i32* %__shft104, metadata !4218, metadata !DIExpression()), !dbg !4215
  store i32 25, i32* %__shft104, align 4, !dbg !4215
  call void @llvm.dbg.declare(metadata i32* %__res105, metadata !4219, metadata !DIExpression()), !dbg !4215
  %arrayidx106 = getelementptr [4 x i32], [4 x i32]* %resp, i64 0, i64 3, !dbg !4215
  %140 = load i32, i32* %arrayidx106, align 4, !dbg !4215
  %shr107 = lshr i32 %140, 25, !dbg !4215
  store i32 %shr107, i32* %__res105, align 4, !dbg !4215
  %141 = load i32, i32* %__res105, align 4, !dbg !4215
  %and109 = and i32 %141, 1, !dbg !4215
  store i32 %and109, i32* %tmp108, align 4, !dbg !4220
  %142 = load i32, i32* %tmp108, align 4, !dbg !4215
  %conv110 = trunc i32 %142 to i8, !dbg !4222
  store i8 %conv110, i8* %discard_support, align 1, !dbg !4223
  %143 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !4224
  %scr111 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %143, i32 0, i32 22, !dbg !4225
  %sda_specx = getelementptr inbounds %struct.sd_scr, %struct.sd_scr* %scr111, i32 0, i32 3, !dbg !4226
  %144 = load i8, i8* %sda_specx, align 1, !dbg !4226
  %conv112 = zext i8 %144 to i32, !dbg !4224
  %tobool113 = icmp ne i32 %conv112, 0, !dbg !4224
  br i1 %tobool113, label %land.rhs, label %land.end, !dbg !4227

land.rhs:                                         ; preds = %if.end97
  %145 = load i8, i8* %discard_support, align 1, !dbg !4228
  %conv114 = zext i8 %145 to i32, !dbg !4228
  %tobool115 = icmp ne i32 %conv114, 0, !dbg !4227
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end97
  %146 = phi i1 [ false, %if.end97 ], [ %tobool115, %land.rhs ], !dbg !4229
  %147 = zext i1 %146 to i64, !dbg !4230
  %cond116 = select i1 %146, i32 1, i32 0, !dbg !4230
  %148 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !4231
  %erase_arg = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %148, i32 0, i32 13, !dbg !4232
  store i32 %cond116, i32* %erase_arg, align 4, !dbg !4233
  store i32 0, i32* %retval, align 4, !dbg !4234
  br label %return, !dbg !4234

return:                                           ; preds = %land.end, %if.then8, %if.then4, %if.then
  %149 = load i32, i32* %retval, align 4, !dbg !4235
  ret i32 %149, !dbg !4235
}

; Function Attrs: noredzone
declare dso_local void @mmc_init_erase(%struct.mmc_card*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mmc_read_switch(%struct.mmc_card* %card) #0 !dbg !4236 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !2692, metadata !DIExpression()), !dbg !4237
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !2704, metadata !DIExpression()), !dbg !4240
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !2706, metadata !DIExpression()), !dbg !4241
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !2708, metadata !DIExpression()), !dbg !4242
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !2710, metadata !DIExpression()), !dbg !4243
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !2716, metadata !DIExpression()), !dbg !4245
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !2722, metadata !DIExpression()), !dbg !4247
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !2731, metadata !DIExpression()), !dbg !4250
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !2733, metadata !DIExpression()), !dbg !4251
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !2735, metadata !DIExpression()), !dbg !4252
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !2737, metadata !DIExpression()), !dbg !4253
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !2739, metadata !DIExpression()), !dbg !4254
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !2741, metadata !DIExpression()), !dbg !4255
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !2743, metadata !DIExpression()), !dbg !4256
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !2745, metadata !DIExpression()), !dbg !4257
  %retval = alloca i32, align 4
  %card.addr = alloca %struct.mmc_card*, align 8
  %err = alloca i32, align 4
  %status = alloca i8*, align 8
  store %struct.mmc_card* %card, %struct.mmc_card** %card.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card.addr, metadata !4258, metadata !DIExpression()), !dbg !4259
  call void @llvm.dbg.declare(metadata i32* %err, metadata !4260, metadata !DIExpression()), !dbg !4261
  call void @llvm.dbg.declare(metadata i8** %status, metadata !4262, metadata !DIExpression()), !dbg !4263
  %0 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !4264
  %scr = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %0, i32 0, i32 22, !dbg !4266
  %sda_vsn = getelementptr inbounds %struct.sd_scr, %struct.sd_scr* %scr, i32 0, i32 0, !dbg !4267
  %1 = load i8, i8* %sda_vsn, align 8, !dbg !4267
  %conv = zext i8 %1 to i32, !dbg !4264
  %cmp = icmp slt i32 %conv, 1, !dbg !4268
  br i1 %cmp, label %if.then, label %if.end, !dbg !4269

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !4270
  br label %return, !dbg !4270

if.end:                                           ; preds = %entry
  %2 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !4271
  %csd = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %2, i32 0, i32 20, !dbg !4273
  %cmdclass = getelementptr inbounds %struct.mmc_csd, %struct.mmc_csd* %csd, i32 0, i32 2, !dbg !4274
  %3 = load i16, i16* %cmdclass, align 2, !dbg !4274
  %conv2 = zext i16 %3 to i32, !dbg !4271
  %and = and i32 %conv2, 1024, !dbg !4275
  %tobool = icmp ne i32 %and, 0, !dbg !4275
  br i1 %tobool, label %if.end5, label %if.then3, !dbg !4276

if.then3:                                         ; preds = %if.end
  %4 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !4277
  %host = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %4, i32 0, i32 0, !dbg !4277
  %5 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !4277
  %class_dev = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %5, i32 0, i32 1, !dbg !4277
  %call = call i8* @dev_name(%struct.device* %class_dev) #11, !dbg !4277
  %call4 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.46, i64 0, i64 0), i8* %call) #12, !dbg !4277
  store i32 0, i32* %retval, align 4, !dbg !4279
  br label %return, !dbg !4279

if.end5:                                          ; preds = %if.end
  store i64 64, i64* %size.addr.i, align 8
  store i32 3264, i32* %flags.addr.i, align 4
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !4280
  %7 = call i1 @llvm.is.constant.i64(i64 %6) #8, !dbg !4281
  br i1 %7, label %if.then.i, label %if.end9.i, !dbg !4282

if.then.i:                                        ; preds = %if.end5
  %8 = load i64, i64* %size.addr.i, align 8, !dbg !4283
  %cmp.i = icmp ugt i64 %8, 8192, !dbg !4284
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !4285

if.then1.i:                                       ; preds = %if.then.i
  %9 = load i64, i64* %size.addr.i, align 8, !dbg !4286
  %10 = load i32, i32* %flags.addr.i, align 4, !dbg !4287
  store i64 %9, i64* %size.addr.i.i, align 8
  store i32 %10, i32* %flags.addr.i.i, align 4
  %11 = load i64, i64* %size.addr.i.i, align 8, !dbg !4288
  %call.i.i = call i32 @get_order(i64 %11) #9, !dbg !4289
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !4254
  %12 = load i64, i64* %size.addr.i.i, align 8, !dbg !4290
  %13 = load i32, i32* %flags.addr.i.i, align 4, !dbg !4291
  %14 = load i32, i32* %order.i.i, align 4, !dbg !4292
  store i64 %12, i64* %size.addr.i.i.i, align 8
  store i32 %13, i32* %flags.addr.i.i.i, align 4
  store i32 %14, i32* %order.addr.i.i.i, align 4
  %15 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !4293
  %16 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !4294
  %17 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !4295
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %15, i32 %16, i32 %17) #10, !dbg !4296
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !4296
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !4296
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !4296
  call void @llvm.assume(i1 %maskcond.i.i.i) #8, !dbg !4296
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !4297
  br label %kmalloc.exit, !dbg !4297

if.end.i:                                         ; preds = %if.then.i
  %18 = load i64, i64* %size.addr.i, align 8, !dbg !4298
  store i64 %18, i64* %size.addr.i11.i, align 8
  %19 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4299
  %tobool.i.i = icmp ne i64 %19, 0, !dbg !4299
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !4300

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !4301
  br label %kmalloc_index.exit.i, !dbg !4301

if.end.i.i:                                       ; preds = %if.end.i
  %20 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4302
  %cmp.i.i = icmp ule i64 %20, 8, !dbg !4303
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !4304

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !4305
  br label %kmalloc_index.exit.i, !dbg !4305

if.end2.i.i:                                      ; preds = %if.end.i.i
  %21 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4306
  %cmp3.i.i = icmp ugt i64 %21, 64, !dbg !4307
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !4308

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %22 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4309
  %cmp4.i.i = icmp ule i64 %22, 96, !dbg !4310
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !4311

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !4312
  br label %kmalloc_index.exit.i, !dbg !4312

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %23 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4313
  %cmp7.i.i = icmp ugt i64 %23, 128, !dbg !4314
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !4315

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %24 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4316
  %cmp9.i.i = icmp ule i64 %24, 192, !dbg !4317
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !4318

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !4319
  br label %kmalloc_index.exit.i, !dbg !4319

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %25 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4320
  %cmp12.i.i = icmp ule i64 %25, 8, !dbg !4321
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !4322

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !4323
  br label %kmalloc_index.exit.i, !dbg !4323

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %26 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4324
  %cmp15.i.i = icmp ule i64 %26, 16, !dbg !4325
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !4326

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !4327
  br label %kmalloc_index.exit.i, !dbg !4327

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %27 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4328
  %cmp18.i.i = icmp ule i64 %27, 32, !dbg !4329
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !4330

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !4331
  br label %kmalloc_index.exit.i, !dbg !4331

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %28 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4332
  %cmp21.i.i = icmp ule i64 %28, 64, !dbg !4333
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !4334

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !4335
  br label %kmalloc_index.exit.i, !dbg !4335

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4336
  %cmp24.i.i = icmp ule i64 %29, 128, !dbg !4337
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !4338

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !4339
  br label %kmalloc_index.exit.i, !dbg !4339

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4340
  %cmp27.i.i = icmp ule i64 %30, 256, !dbg !4341
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !4342

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !4343
  br label %kmalloc_index.exit.i, !dbg !4343

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4344
  %cmp30.i.i = icmp ule i64 %31, 512, !dbg !4345
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !4346

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !4347
  br label %kmalloc_index.exit.i, !dbg !4347

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4348
  %cmp33.i.i = icmp ule i64 %32, 1024, !dbg !4349
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !4350

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !4351
  br label %kmalloc_index.exit.i, !dbg !4351

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4352
  %cmp36.i.i = icmp ule i64 %33, 2048, !dbg !4353
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !4354

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !4355
  br label %kmalloc_index.exit.i, !dbg !4355

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4356
  %cmp39.i.i = icmp ule i64 %34, 4096, !dbg !4357
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !4358

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !4359
  br label %kmalloc_index.exit.i, !dbg !4359

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4360
  %cmp42.i.i = icmp ule i64 %35, 8192, !dbg !4361
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !4362

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !4363
  br label %kmalloc_index.exit.i, !dbg !4363

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4364
  %cmp45.i.i = icmp ule i64 %36, 16384, !dbg !4365
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !4366

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !4367
  br label %kmalloc_index.exit.i, !dbg !4367

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4368
  %cmp48.i.i = icmp ule i64 %37, 32768, !dbg !4369
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !4370

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !4371
  br label %kmalloc_index.exit.i, !dbg !4371

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4372
  %cmp51.i.i = icmp ule i64 %38, 65536, !dbg !4373
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !4374

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !4375
  br label %kmalloc_index.exit.i, !dbg !4375

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4376
  %cmp54.i.i = icmp ule i64 %39, 131072, !dbg !4377
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !4378

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !4379
  br label %kmalloc_index.exit.i, !dbg !4379

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4380
  %cmp57.i.i = icmp ule i64 %40, 262144, !dbg !4381
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !4382

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !4383
  br label %kmalloc_index.exit.i, !dbg !4383

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4384
  %cmp60.i.i = icmp ule i64 %41, 524288, !dbg !4385
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !4386

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !4387
  br label %kmalloc_index.exit.i, !dbg !4387

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4388
  %cmp63.i.i = icmp ule i64 %42, 1048576, !dbg !4389
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !4390

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !4391
  br label %kmalloc_index.exit.i, !dbg !4391

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4392
  %cmp66.i.i = icmp ule i64 %43, 2097152, !dbg !4393
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !4394

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !4395
  br label %kmalloc_index.exit.i, !dbg !4395

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4396
  %cmp69.i.i = icmp ule i64 %44, 4194304, !dbg !4397
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !4398

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !4399
  br label %kmalloc_index.exit.i, !dbg !4399

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %45 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4400
  %cmp72.i.i = icmp ule i64 %45, 8388608, !dbg !4401
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !4402

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !4403
  br label %kmalloc_index.exit.i, !dbg !4403

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %46 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4404
  %cmp75.i.i = icmp ule i64 %46, 16777216, !dbg !4405
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !4406

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !4407
  br label %kmalloc_index.exit.i, !dbg !4407

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %47 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4408
  %cmp78.i.i = icmp ule i64 %47, 33554432, !dbg !4409
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !4410

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !4411
  br label %kmalloc_index.exit.i, !dbg !4411

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %48 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4412
  %cmp81.i.i = icmp ule i64 %48, 67108864, !dbg !4413
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !4414

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !4415
  br label %kmalloc_index.exit.i, !dbg !4415

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5, i64 0, i64 0), i32 382, i32 0, i64 12) #8, !dbg !4416, !srcloc !2949
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 88) #8, !dbg !4417, !srcloc !2953
  unreachable, !dbg !4418

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %49 = load i32, i32* %retval.i.i, align 4, !dbg !4419
  store i32 %49, i32* %index.i, align 4, !dbg !4420
  %50 = load i32, i32* %index.i, align 4, !dbg !4421
  %tobool.i = icmp ne i32 %50, 0, !dbg !4421
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !4422

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !4423
  br label %kmalloc.exit, !dbg !4423

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %51 = load i32, i32* %flags.addr.i, align 4, !dbg !4424
  store i32 %51, i32* %flags.addr.i13.i, align 4
  %52 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !4425
  %and.i.i = and i32 %52, 17, !dbg !4425
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !4425
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !4425
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !4425
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !4425
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !4426

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !4427
  br label %kmalloc_type.exit.i, !dbg !4427

if.end.i16.i:                                     ; preds = %if.end4.i
  %53 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !4428
  %and2.i.i = and i32 %53, 1, !dbg !4429
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !4428
  %54 = zext i1 %tobool3.i.i to i64, !dbg !4428
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !4428
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !4430
  br label %kmalloc_type.exit.i, !dbg !4430

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %55 = load i32, i32* %retval.i12.i, align 4, !dbg !4431
  %idxprom.i = zext i32 %55 to i64, !dbg !4432
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !4432
  %56 = load i32, i32* %index.i, align 4, !dbg !4433
  %idxprom6.i = zext i32 %56 to i64, !dbg !4432
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !4432
  %57 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !4432
  %58 = load i32, i32* %flags.addr.i, align 4, !dbg !4434
  %59 = load i64, i64* %size.addr.i, align 8, !dbg !4435
  store %struct.kmem_cache* %57, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %58, i32* %flags.addr.i17.i, align 4
  store i64 %59, i64* %size.addr.i18.i, align 8
  %60 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !4436
  %61 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !4437
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %60, i32 %61) #10, !dbg !4438
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !4438
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !4438
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !4438
  call void @llvm.assume(i1 %maskcond.i.i) #8, !dbg !4438
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !4242
  %62 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !4439
  %63 = load i8*, i8** %ret.i.i, align 8, !dbg !4440
  %64 = load i64, i64* %size.addr.i18.i, align 8, !dbg !4441
  %65 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !4442
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %62, i8* %63, i64 %64, i32 %65) #10, !dbg !4443
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !4444
  %66 = load i8*, i8** %ret.i.i, align 8, !dbg !4445
  store i8* %66, i8** %retval.i, align 8, !dbg !4446
  br label %kmalloc.exit, !dbg !4446

if.end9.i:                                        ; preds = %if.end5
  %67 = load i64, i64* %size.addr.i, align 8, !dbg !4447
  %68 = load i32, i32* %flags.addr.i, align 4, !dbg !4448
  %call10.i = call noalias i8* @__kmalloc(i64 %67, i32 %68) #10, !dbg !4449
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !4449
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !4449
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !4449
  call void @llvm.assume(i1 %maskcond.i) #8, !dbg !4449
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !4450
  br label %kmalloc.exit, !dbg !4450

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %69 = load i8*, i8** %retval.i, align 8, !dbg !4451
  store i8* %69, i8** %status, align 8, !dbg !4452
  %70 = load i8*, i8** %status, align 8, !dbg !4453
  %tobool7 = icmp ne i8* %70, null, !dbg !4453
  br i1 %tobool7, label %if.end9, label %if.then8, !dbg !4455

if.then8:                                         ; preds = %kmalloc.exit
  store i32 -12, i32* %retval, align 4, !dbg !4456
  br label %return, !dbg !4456

if.end9:                                          ; preds = %kmalloc.exit
  %71 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !4457
  %72 = load i8*, i8** %status, align 8, !dbg !4458
  %call10 = call i32 @mmc_sd_switch(%struct.mmc_card* %71, i32 0, i32 0, i8 zeroext 0, i8* %72) #11, !dbg !4459
  store i32 %call10, i32* %err, align 4, !dbg !4460
  %73 = load i32, i32* %err, align 4, !dbg !4461
  %tobool11 = icmp ne i32 %73, 0, !dbg !4461
  br i1 %tobool11, label %if.then12, label %if.end26, !dbg !4463

if.then12:                                        ; preds = %if.end9
  %74 = load i32, i32* %err, align 4, !dbg !4464
  %cmp13 = icmp ne i32 %74, -22, !dbg !4467
  br i1 %cmp13, label %land.lhs.true, label %if.end21, !dbg !4468

land.lhs.true:                                    ; preds = %if.then12
  %75 = load i32, i32* %err, align 4, !dbg !4469
  %cmp15 = icmp ne i32 %75, -38, !dbg !4470
  br i1 %cmp15, label %land.lhs.true17, label %if.end21, !dbg !4471

land.lhs.true17:                                  ; preds = %land.lhs.true
  %76 = load i32, i32* %err, align 4, !dbg !4472
  %cmp18 = icmp ne i32 %76, -14, !dbg !4473
  br i1 %cmp18, label %if.then20, label %if.end21, !dbg !4474

if.then20:                                        ; preds = %land.lhs.true17
  br label %out, !dbg !4475

if.end21:                                         ; preds = %land.lhs.true17, %land.lhs.true, %if.then12
  %77 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !4476
  %host22 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %77, i32 0, i32 0, !dbg !4476
  %78 = load %struct.mmc_host*, %struct.mmc_host** %host22, align 8, !dbg !4476
  %class_dev23 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %78, i32 0, i32 1, !dbg !4476
  %call24 = call i8* @dev_name(%struct.device* %class_dev23) #11, !dbg !4476
  %call25 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.47, i64 0, i64 0), i8* %call24) #12, !dbg !4476
  store i32 0, i32* %err, align 4, !dbg !4477
  br label %out, !dbg !4478

if.end26:                                         ; preds = %if.end9
  %79 = load i8*, i8** %status, align 8, !dbg !4479
  %arrayidx = getelementptr i8, i8* %79, i64 13, !dbg !4479
  %80 = load i8, i8* %arrayidx, align 1, !dbg !4479
  %conv27 = zext i8 %80 to i32, !dbg !4479
  %and28 = and i32 %conv27, 2, !dbg !4481
  %tobool29 = icmp ne i32 %and28, 0, !dbg !4481
  br i1 %tobool29, label %if.then30, label %if.end31, !dbg !4482

if.then30:                                        ; preds = %if.end26
  %81 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !4483
  %sw_caps = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %81, i32 0, i32 24, !dbg !4484
  %hs_max_dtr = getelementptr inbounds %struct.sd_switch_caps, %struct.sd_switch_caps* %sw_caps, i32 0, i32 0, !dbg !4485
  store i32 50000000, i32* %hs_max_dtr, align 4, !dbg !4486
  br label %if.end31, !dbg !4483

if.end31:                                         ; preds = %if.then30, %if.end26
  %82 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !4487
  %scr32 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %82, i32 0, i32 22, !dbg !4489
  %sda_spec3 = getelementptr inbounds %struct.sd_scr, %struct.sd_scr* %scr32, i32 0, i32 1, !dbg !4490
  %83 = load i8, i8* %sda_spec3, align 1, !dbg !4490
  %tobool33 = icmp ne i8 %83, 0, !dbg !4487
  br i1 %tobool33, label %if.then34, label %if.end46, !dbg !4491

if.then34:                                        ; preds = %if.end31
  %84 = load i8*, i8** %status, align 8, !dbg !4492
  %arrayidx35 = getelementptr i8, i8* %84, i64 13, !dbg !4492
  %85 = load i8, i8* %arrayidx35, align 1, !dbg !4492
  %conv36 = zext i8 %85 to i32, !dbg !4492
  %86 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !4494
  %sw_caps37 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %86, i32 0, i32 24, !dbg !4495
  %sd3_bus_mode = getelementptr inbounds %struct.sd_switch_caps, %struct.sd_switch_caps* %sw_caps37, i32 0, i32 2, !dbg !4496
  store i32 %conv36, i32* %sd3_bus_mode, align 4, !dbg !4497
  %87 = load i8*, i8** %status, align 8, !dbg !4498
  %arrayidx38 = getelementptr i8, i8* %87, i64 9, !dbg !4498
  %88 = load i8, i8* %arrayidx38, align 1, !dbg !4498
  %conv39 = zext i8 %88 to i32, !dbg !4498
  %89 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !4499
  %sw_caps40 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %89, i32 0, i32 24, !dbg !4500
  %sd3_drv_type = getelementptr inbounds %struct.sd_switch_caps, %struct.sd_switch_caps* %sw_caps40, i32 0, i32 3, !dbg !4501
  store i32 %conv39, i32* %sd3_drv_type, align 4, !dbg !4502
  %90 = load i8*, i8** %status, align 8, !dbg !4503
  %arrayidx41 = getelementptr i8, i8* %90, i64 7, !dbg !4503
  %91 = load i8, i8* %arrayidx41, align 1, !dbg !4503
  %conv42 = zext i8 %91 to i32, !dbg !4503
  %92 = load i8*, i8** %status, align 8, !dbg !4504
  %arrayidx43 = getelementptr i8, i8* %92, i64 6, !dbg !4504
  %93 = load i8, i8* %arrayidx43, align 1, !dbg !4504
  %conv44 = zext i8 %93 to i32, !dbg !4504
  %shl = shl i32 %conv44, 8, !dbg !4505
  %or = or i32 %conv42, %shl, !dbg !4506
  %94 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !4507
  %sw_caps45 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %94, i32 0, i32 24, !dbg !4508
  %sd3_curr_limit = getelementptr inbounds %struct.sd_switch_caps, %struct.sd_switch_caps* %sw_caps45, i32 0, i32 4, !dbg !4509
  store i32 %or, i32* %sd3_curr_limit, align 4, !dbg !4510
  br label %if.end46, !dbg !4511

if.end46:                                         ; preds = %if.then34, %if.end31
  br label %out, !dbg !4490

out:                                              ; preds = %if.end46, %if.end21, %if.then20
  call void @llvm.dbg.label(metadata !4512), !dbg !4513
  %95 = load i8*, i8** %status, align 8, !dbg !4514
  call void @kfree(i8* %95) #11, !dbg !4515
  %96 = load i32, i32* %err, align 4, !dbg !4516
  store i32 %96, i32* %retval, align 4, !dbg !4517
  br label %return, !dbg !4517

return:                                           ; preds = %out, %if.then8, %if.then3, %if.then
  %97 = load i32, i32* %retval, align 4, !dbg !4518
  ret i32 %97, !dbg !4518
}

; Function Attrs: noredzone
declare dso_local i32 @mmc_spi_set_crc(%struct.mmc_host*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mmc_sd_get_ro(%struct.mmc_host* %host) #0 !dbg !4519 {
entry:
  %retval = alloca i32, align 4
  %host.addr = alloca %struct.mmc_host*, align 8
  %ro = alloca i32, align 4
  store %struct.mmc_host* %host, %struct.mmc_host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %host.addr, metadata !4520, metadata !DIExpression()), !dbg !4521
  call void @llvm.dbg.declare(metadata i32* %ro, metadata !4522, metadata !DIExpression()), !dbg !4523
  %0 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !4524
  %caps2 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %0, i32 0, i32 18, !dbg !4526
  %1 = load i32, i32* %caps2, align 8, !dbg !4526
  %and = and i32 %1, 262144, !dbg !4527
  %tobool = icmp ne i32 %and, 0, !dbg !4527
  br i1 %tobool, label %if.then, label %if.end, !dbg !4528

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !4529
  br label %return, !dbg !4529

if.end:                                           ; preds = %entry
  %2 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !4530
  %ops = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %2, i32 0, i32 3, !dbg !4532
  %3 = load %struct.mmc_host_ops*, %struct.mmc_host_ops** %ops, align 8, !dbg !4532
  %get_ro = getelementptr inbounds %struct.mmc_host_ops, %struct.mmc_host_ops* %3, i32 0, i32 5, !dbg !4533
  %4 = load i32 (%struct.mmc_host*)*, i32 (%struct.mmc_host*)** %get_ro, align 8, !dbg !4533
  %tobool1 = icmp ne i32 (%struct.mmc_host*)* %4, null, !dbg !4530
  br i1 %tobool1, label %if.end3, label %if.then2, !dbg !4534

if.then2:                                         ; preds = %if.end
  store i32 -1, i32* %retval, align 4, !dbg !4535
  br label %return, !dbg !4535

if.end3:                                          ; preds = %if.end
  %5 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !4536
  %ops4 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %5, i32 0, i32 3, !dbg !4537
  %6 = load %struct.mmc_host_ops*, %struct.mmc_host_ops** %ops4, align 8, !dbg !4537
  %get_ro5 = getelementptr inbounds %struct.mmc_host_ops, %struct.mmc_host_ops* %6, i32 0, i32 5, !dbg !4538
  %7 = load i32 (%struct.mmc_host*)*, i32 (%struct.mmc_host*)** %get_ro5, align 8, !dbg !4538
  %8 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !4539
  %call = call i32 %7(%struct.mmc_host* %8) #11, !dbg !4536
  store i32 %call, i32* %ro, align 4, !dbg !4540
  %9 = load i32, i32* %ro, align 4, !dbg !4541
  store i32 %9, i32* %retval, align 4, !dbg !4542
  br label %return, !dbg !4542

return:                                           ; preds = %if.end3, %if.then2, %if.then
  %10 = load i32, i32* %retval, align 4, !dbg !4543
  ret i32 %10, !dbg !4543
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @mmc_sd_get_max_clock(%struct.mmc_card* %card) #0 !dbg !4544 {
entry:
  %card.addr = alloca %struct.mmc_card*, align 8
  %max_dtr = alloca i32, align 4
  store %struct.mmc_card* %card, %struct.mmc_card** %card.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card.addr, metadata !4547, metadata !DIExpression()), !dbg !4548
  call void @llvm.dbg.declare(metadata i32* %max_dtr, metadata !4549, metadata !DIExpression()), !dbg !4550
  store i32 -1, i32* %max_dtr, align 4, !dbg !4550
  %0 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !4551
  %call = call i32 @mmc_card_hs(%struct.mmc_card* %0) #11, !dbg !4553
  %tobool = icmp ne i32 %call, 0, !dbg !4553
  br i1 %tobool, label %if.then, label %if.else, !dbg !4554

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %max_dtr, align 4, !dbg !4555
  %2 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !4558
  %sw_caps = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %2, i32 0, i32 24, !dbg !4559
  %hs_max_dtr = getelementptr inbounds %struct.sd_switch_caps, %struct.sd_switch_caps* %sw_caps, i32 0, i32 0, !dbg !4560
  %3 = load i32, i32* %hs_max_dtr, align 4, !dbg !4560
  %cmp = icmp ugt i32 %1, %3, !dbg !4561
  br i1 %cmp, label %if.then1, label %if.end, !dbg !4562

if.then1:                                         ; preds = %if.then
  %4 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !4563
  %sw_caps2 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %4, i32 0, i32 24, !dbg !4564
  %hs_max_dtr3 = getelementptr inbounds %struct.sd_switch_caps, %struct.sd_switch_caps* %sw_caps2, i32 0, i32 0, !dbg !4565
  %5 = load i32, i32* %hs_max_dtr3, align 4, !dbg !4565
  store i32 %5, i32* %max_dtr, align 4, !dbg !4566
  br label %if.end, !dbg !4567

if.end:                                           ; preds = %if.then1, %if.then
  br label %if.end10, !dbg !4568

if.else:                                          ; preds = %entry
  %6 = load i32, i32* %max_dtr, align 4, !dbg !4569
  %7 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !4571
  %csd = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %7, i32 0, i32 20, !dbg !4572
  %max_dtr4 = getelementptr inbounds %struct.mmc_csd, %struct.mmc_csd* %csd, i32 0, i32 7, !dbg !4573
  %8 = load i32, i32* %max_dtr4, align 4, !dbg !4573
  %cmp5 = icmp ugt i32 %6, %8, !dbg !4574
  br i1 %cmp5, label %if.then6, label %if.end9, !dbg !4575

if.then6:                                         ; preds = %if.else
  %9 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !4576
  %csd7 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %9, i32 0, i32 20, !dbg !4578
  %max_dtr8 = getelementptr inbounds %struct.mmc_csd, %struct.mmc_csd* %csd7, i32 0, i32 7, !dbg !4579
  %10 = load i32, i32* %max_dtr8, align 4, !dbg !4579
  store i32 %10, i32* %max_dtr, align 4, !dbg !4580
  br label %if.end9, !dbg !4581

if.end9:                                          ; preds = %if.then6, %if.else
  br label %if.end10

if.end10:                                         ; preds = %if.end9, %if.end
  %11 = load i32, i32* %max_dtr, align 4, !dbg !4582
  ret i32 %11, !dbg !4583
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mmc_card_hs(%struct.mmc_card* %card) #0 !dbg !4584 {
entry:
  %card.addr = alloca %struct.mmc_card*, align 8
  store %struct.mmc_card* %card, %struct.mmc_card** %card.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card.addr, metadata !4585, metadata !DIExpression()), !dbg !4586
  %0 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !4587
  %host = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %0, i32 0, i32 0, !dbg !4588
  %1 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !4588
  %ios = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %1, i32 0, i32 29, !dbg !4589
  %timing = getelementptr inbounds %struct.mmc_ios, %struct.mmc_ios* %ios, i32 0, i32 7, !dbg !4590
  %2 = load i8, i8* %timing, align 4, !dbg !4590
  %conv = zext i8 %2 to i32, !dbg !4587
  %cmp = icmp eq i32 %conv, 2, !dbg !4591
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !4592

lor.rhs:                                          ; preds = %entry
  %3 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !4593
  %host2 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %3, i32 0, i32 0, !dbg !4594
  %4 = load %struct.mmc_host*, %struct.mmc_host** %host2, align 8, !dbg !4594
  %ios3 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %4, i32 0, i32 29, !dbg !4595
  %timing4 = getelementptr inbounds %struct.mmc_ios, %struct.mmc_ios* %ios3, i32 0, i32 7, !dbg !4596
  %5 = load i8, i8* %timing4, align 4, !dbg !4596
  %conv5 = zext i8 %5 to i32, !dbg !4593
  %cmp6 = icmp eq i32 %conv5, 1, !dbg !4597
  br label %lor.end, !dbg !4592

lor.end:                                          ; preds = %lor.rhs, %entry
  %6 = phi i1 [ true, %entry ], [ %cmp6, %lor.rhs ]
  %lor.ext = zext i1 %6 to i32, !dbg !4592
  ret i32 %lor.ext, !dbg !4598
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @mmc_attach_sd(%struct.mmc_host* %host) #0 !dbg !4599 {
entry:
  %retval = alloca i32, align 4
  %host.addr = alloca %struct.mmc_host*, align 8
  %err = alloca i32, align 4
  %ocr = alloca i32, align 4
  %rocr = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.mmc_host* %host, %struct.mmc_host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %host.addr, metadata !4600, metadata !DIExpression()), !dbg !4601
  call void @llvm.dbg.declare(metadata i32* %err, metadata !4602, metadata !DIExpression()), !dbg !4603
  call void @llvm.dbg.declare(metadata i32* %ocr, metadata !4604, metadata !DIExpression()), !dbg !4605
  call void @llvm.dbg.declare(metadata i32* %rocr, metadata !4606, metadata !DIExpression()), !dbg !4607
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !4608, metadata !DIExpression()), !dbg !4610
  %0 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !4610
  %claimed = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %0, i32 0, i32 30, !dbg !4610
  %bf.load = load i16, i16* %claimed, align 32, !dbg !4610
  %bf.lshr = lshr i16 %bf.load, 1, !dbg !4610
  %bf.clear = and i16 %bf.lshr, 1, !dbg !4610
  %bf.cast = zext i16 %bf.clear to i32, !dbg !4610
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !4610
  %lnot = xor i1 %tobool, true, !dbg !4610
  %lnot1 = xor i1 %lnot, true, !dbg !4610
  %lnot2 = xor i1 %lnot1, true, !dbg !4610
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !4610
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !4610
  %1 = load i32, i32* %__ret_warn_on, align 4, !dbg !4611
  %tobool3 = icmp ne i32 %1, 0, !dbg !4611
  %lnot4 = xor i1 %tobool3, true, !dbg !4611
  %lnot6 = xor i1 %lnot4, true, !dbg !4611
  %lnot.ext7 = zext i1 %lnot6 to i32, !dbg !4611
  %conv = sext i32 %lnot.ext7 to i64, !dbg !4611
  %tobool8 = icmp ne i64 %conv, 0, !dbg !4611
  br i1 %tobool8, label %if.then, label %if.end, !dbg !4610

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !4611

do.body:                                          ; preds = %if.then
  br label %do.body9, !dbg !4613

do.body9:                                         ; preds = %do.body
  br label %do.end, !dbg !4615

do.end:                                           ; preds = %do.body9
  br label %do.body10, !dbg !4613

do.body10:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.3, i64 0, i64 0), i32 1338, i32 2305, i64 12) #8, !dbg !4617, !srcloc !4619
  br label %do.end11, !dbg !4617

do.end11:                                         ; preds = %do.body10
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 184) #8, !dbg !4620, !srcloc !4622
  br label %do.body12, !dbg !4613

do.body12:                                        ; preds = %do.end11
  br label %do.end13, !dbg !4623

do.end13:                                         ; preds = %do.body12
  br label %do.end14, !dbg !4613

do.end14:                                         ; preds = %do.end13
  br label %if.end, !dbg !4613

if.end:                                           ; preds = %do.end14, %entry
  %2 = load i32, i32* %__ret_warn_on, align 4, !dbg !4610
  %tobool15 = icmp ne i32 %2, 0, !dbg !4610
  %lnot16 = xor i1 %tobool15, true, !dbg !4610
  %lnot18 = xor i1 %lnot16, true, !dbg !4610
  %lnot.ext19 = zext i1 %lnot18 to i32, !dbg !4610
  %conv20 = sext i32 %lnot.ext19 to i64, !dbg !4610
  store i64 %conv20, i64* %tmp, align 8, !dbg !4611
  %3 = load i64, i64* %tmp, align 8, !dbg !4610
  %4 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !4625
  %call = call i32 @mmc_send_app_op_cond(%struct.mmc_host* %4, i32 0, i32* %ocr) #11, !dbg !4626
  store i32 %call, i32* %err, align 4, !dbg !4627
  %5 = load i32, i32* %err, align 4, !dbg !4628
  %tobool21 = icmp ne i32 %5, 0, !dbg !4628
  br i1 %tobool21, label %if.then22, label %if.end23, !dbg !4630

if.then22:                                        ; preds = %if.end
  %6 = load i32, i32* %err, align 4, !dbg !4631
  store i32 %6, i32* %retval, align 4, !dbg !4632
  br label %return, !dbg !4632

if.end23:                                         ; preds = %if.end
  %7 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !4633
  call void @mmc_attach_bus(%struct.mmc_host* %7, %struct.mmc_bus_ops* @mmc_sd_ops) #11, !dbg !4634
  %8 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !4635
  %ocr_avail_sd = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %8, i32 0, i32 10, !dbg !4637
  %9 = load i32, i32* %ocr_avail_sd, align 4, !dbg !4637
  %tobool24 = icmp ne i32 %9, 0, !dbg !4635
  br i1 %tobool24, label %if.then25, label %if.end27, !dbg !4638

if.then25:                                        ; preds = %if.end23
  %10 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !4639
  %ocr_avail_sd26 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %10, i32 0, i32 10, !dbg !4640
  %11 = load i32, i32* %ocr_avail_sd26, align 4, !dbg !4640
  %12 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !4641
  %ocr_avail = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %12, i32 0, i32 8, !dbg !4642
  store i32 %11, i32* %ocr_avail, align 4, !dbg !4643
  br label %if.end27, !dbg !4641

if.end27:                                         ; preds = %if.then25, %if.end23
  %13 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !4644
  %caps = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %13, i32 0, i32 17, !dbg !4644
  %14 = load i32, i32* %caps, align 4, !dbg !4644
  %and = and i32 %14, 16, !dbg !4644
  %tobool28 = icmp ne i32 %and, 0, !dbg !4644
  br i1 %tobool28, label %if.then29, label %if.end35, !dbg !4646

if.then29:                                        ; preds = %if.end27
  %15 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !4647
  %call30 = call i32 @mmc_go_idle(%struct.mmc_host* %15) #11, !dbg !4649
  %16 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !4650
  %call31 = call i32 @mmc_spi_read_ocr(%struct.mmc_host* %16, i32 0, i32* %ocr) #11, !dbg !4651
  store i32 %call31, i32* %err, align 4, !dbg !4652
  %17 = load i32, i32* %err, align 4, !dbg !4653
  %tobool32 = icmp ne i32 %17, 0, !dbg !4653
  br i1 %tobool32, label %if.then33, label %if.end34, !dbg !4655

if.then33:                                        ; preds = %if.then29
  br label %err51, !dbg !4656

if.end34:                                         ; preds = %if.then29
  br label %if.end35, !dbg !4657

if.end35:                                         ; preds = %if.end34, %if.end27
  %18 = load i32, i32* %ocr, align 4, !dbg !4658
  %and36 = and i32 %18, -32768, !dbg !4658
  store i32 %and36, i32* %ocr, align 4, !dbg !4658
  %19 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !4659
  %20 = load i32, i32* %ocr, align 4, !dbg !4660
  %call37 = call i32 @mmc_select_voltage(%struct.mmc_host* %19, i32 %20) #11, !dbg !4661
  store i32 %call37, i32* %rocr, align 4, !dbg !4662
  %21 = load i32, i32* %rocr, align 4, !dbg !4663
  %tobool38 = icmp ne i32 %21, 0, !dbg !4663
  br i1 %tobool38, label %if.end40, label %if.then39, !dbg !4665

if.then39:                                        ; preds = %if.end35
  store i32 -22, i32* %err, align 4, !dbg !4666
  br label %err51, !dbg !4668

if.end40:                                         ; preds = %if.end35
  %22 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !4669
  %23 = load i32, i32* %rocr, align 4, !dbg !4670
  %call41 = call i32 @mmc_sd_init_card(%struct.mmc_host* %22, i32 %23, %struct.mmc_card* null) #11, !dbg !4671
  store i32 %call41, i32* %err, align 4, !dbg !4672
  %24 = load i32, i32* %err, align 4, !dbg !4673
  %tobool42 = icmp ne i32 %24, 0, !dbg !4673
  br i1 %tobool42, label %if.then43, label %if.end44, !dbg !4675

if.then43:                                        ; preds = %if.end40
  br label %err51, !dbg !4676

if.end44:                                         ; preds = %if.end40
  %25 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !4677
  call void @mmc_release_host(%struct.mmc_host* %25) #11, !dbg !4678
  %26 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !4679
  %card = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %26, i32 0, i32 38, !dbg !4680
  %27 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !4680
  %call45 = call i32 @mmc_add_card(%struct.mmc_card* %27) #11, !dbg !4681
  store i32 %call45, i32* %err, align 4, !dbg !4682
  %28 = load i32, i32* %err, align 4, !dbg !4683
  %tobool46 = icmp ne i32 %28, 0, !dbg !4683
  br i1 %tobool46, label %if.then47, label %if.end48, !dbg !4685

if.then47:                                        ; preds = %if.end44
  br label %remove_card, !dbg !4686

if.end48:                                         ; preds = %if.end44
  %29 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !4687
  call void @mmc_claim_host(%struct.mmc_host* %29) #11, !dbg !4688
  store i32 0, i32* %retval, align 4, !dbg !4689
  br label %return, !dbg !4689

remove_card:                                      ; preds = %if.then47
  call void @llvm.dbg.label(metadata !4690), !dbg !4691
  %30 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !4692
  %card49 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %30, i32 0, i32 38, !dbg !4693
  %31 = load %struct.mmc_card*, %struct.mmc_card** %card49, align 8, !dbg !4693
  call void @mmc_remove_card(%struct.mmc_card* %31) #11, !dbg !4694
  %32 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !4695
  %card50 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %32, i32 0, i32 38, !dbg !4696
  store %struct.mmc_card* null, %struct.mmc_card** %card50, align 8, !dbg !4697
  %33 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !4698
  call void @mmc_claim_host(%struct.mmc_host* %33) #11, !dbg !4699
  br label %err51, !dbg !4699

err51:                                            ; preds = %remove_card, %if.then43, %if.then39, %if.then33
  call void @llvm.dbg.label(metadata !4700), !dbg !4701
  %34 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !4702
  call void @mmc_detach_bus(%struct.mmc_host* %34) #11, !dbg !4703
  %35 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !4704
  %class_dev = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %35, i32 0, i32 1, !dbg !4704
  %call52 = call i8* @dev_name(%struct.device* %class_dev) #11, !dbg !4704
  %36 = load i32, i32* %err, align 4, !dbg !4704
  %call53 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.4, i64 0, i64 0), i8* %call52, i32 %36) #12, !dbg !4704
  %37 = load i32, i32* %err, align 4, !dbg !4705
  store i32 %37, i32* %retval, align 4, !dbg !4706
  br label %return, !dbg !4706

return:                                           ; preds = %err51, %if.end48, %if.then22
  %38 = load i32, i32* %retval, align 4, !dbg !4707
  ret i32 %38, !dbg !4707
}

; Function Attrs: noredzone
declare dso_local void @mmc_attach_bus(%struct.mmc_host*, %struct.mmc_bus_ops*) #2

; Function Attrs: noredzone
declare dso_local i32 @mmc_spi_read_ocr(%struct.mmc_host*, i32, i32*) #2

; Function Attrs: noredzone
declare dso_local i32 @mmc_select_voltage(%struct.mmc_host*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mmc_sd_init_card(%struct.mmc_host* %host, i32 %ocr, %struct.mmc_card* %oldcard) #0 !dbg !4708 {
entry:
  %retval = alloca i32, align 4
  %host.addr = alloca %struct.mmc_host*, align 8
  %ocr.addr = alloca i32, align 4
  %oldcard.addr = alloca %struct.mmc_card*, align 8
  %card = alloca %struct.mmc_card*, align 8
  %err = alloca i32, align 4
  %cid = alloca [4 x i32], align 16
  %rocr = alloca i32, align 4
  %v18_fixup_failed = alloca i8, align 1
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  %tmp31 = alloca i32, align 4
  store %struct.mmc_host* %host, %struct.mmc_host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %host.addr, metadata !4711, metadata !DIExpression()), !dbg !4712
  store i32 %ocr, i32* %ocr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ocr.addr, metadata !4713, metadata !DIExpression()), !dbg !4714
  store %struct.mmc_card* %oldcard, %struct.mmc_card** %oldcard.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %oldcard.addr, metadata !4715, metadata !DIExpression()), !dbg !4716
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card, metadata !4717, metadata !DIExpression()), !dbg !4718
  call void @llvm.dbg.declare(metadata i32* %err, metadata !4719, metadata !DIExpression()), !dbg !4720
  call void @llvm.dbg.declare(metadata [4 x i32]* %cid, metadata !4721, metadata !DIExpression()), !dbg !4722
  call void @llvm.dbg.declare(metadata i32* %rocr, metadata !4723, metadata !DIExpression()), !dbg !4724
  store i32 0, i32* %rocr, align 4, !dbg !4724
  call void @llvm.dbg.declare(metadata i8* %v18_fixup_failed, metadata !4725, metadata !DIExpression()), !dbg !4726
  store i8 0, i8* %v18_fixup_failed, align 1, !dbg !4726
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !4727, metadata !DIExpression()), !dbg !4729
  %0 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !4729
  %claimed = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %0, i32 0, i32 30, !dbg !4729
  %bf.load = load i16, i16* %claimed, align 32, !dbg !4729
  %bf.lshr = lshr i16 %bf.load, 1, !dbg !4729
  %bf.clear = and i16 %bf.lshr, 1, !dbg !4729
  %bf.cast = zext i16 %bf.clear to i32, !dbg !4729
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !4729
  %lnot = xor i1 %tobool, true, !dbg !4729
  %lnot1 = xor i1 %lnot, true, !dbg !4729
  %lnot2 = xor i1 %lnot1, true, !dbg !4729
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !4729
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !4729
  %1 = load i32, i32* %__ret_warn_on, align 4, !dbg !4730
  %tobool3 = icmp ne i32 %1, 0, !dbg !4730
  %lnot4 = xor i1 %tobool3, true, !dbg !4730
  %lnot6 = xor i1 %lnot4, true, !dbg !4730
  %lnot.ext7 = zext i1 %lnot6 to i32, !dbg !4730
  %conv = sext i32 %lnot.ext7 to i64, !dbg !4730
  %tobool8 = icmp ne i64 %conv, 0, !dbg !4730
  br i1 %tobool8, label %if.then, label %if.end, !dbg !4729

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !4730

do.body:                                          ; preds = %if.then
  br label %do.body9, !dbg !4732

do.body9:                                         ; preds = %do.body
  br label %do.end, !dbg !4734

do.end:                                           ; preds = %do.body9
  br label %do.body10, !dbg !4732

do.body10:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.3, i64 0, i64 0), i32 1006, i32 2305, i64 12) #8, !dbg !4736, !srcloc !4738
  br label %do.end11, !dbg !4736

do.end11:                                         ; preds = %do.body10
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 183) #8, !dbg !4739, !srcloc !4741
  br label %do.body12, !dbg !4732

do.body12:                                        ; preds = %do.end11
  br label %do.end13, !dbg !4742

do.end13:                                         ; preds = %do.body12
  br label %do.end14, !dbg !4732

do.end14:                                         ; preds = %do.end13
  br label %if.end, !dbg !4732

if.end:                                           ; preds = %do.end14, %entry
  %2 = load i32, i32* %__ret_warn_on, align 4, !dbg !4729
  %tobool15 = icmp ne i32 %2, 0, !dbg !4729
  %lnot16 = xor i1 %tobool15, true, !dbg !4729
  %lnot18 = xor i1 %lnot16, true, !dbg !4729
  %lnot.ext19 = zext i1 %lnot18 to i32, !dbg !4729
  %conv20 = sext i32 %lnot.ext19 to i64, !dbg !4729
  store i64 %conv20, i64* %tmp, align 8, !dbg !4730
  %3 = load i64, i64* %tmp, align 8, !dbg !4729
  br label %retry, !dbg !4744

retry:                                            ; preds = %if.end119, %if.end
  call void @llvm.dbg.label(metadata !4745), !dbg !4746
  %4 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !4747
  %5 = load i32, i32* %ocr.addr, align 4, !dbg !4748
  %arraydecay = getelementptr inbounds [4 x i32], [4 x i32]* %cid, i64 0, i64 0, !dbg !4749
  %call = call i32 @mmc_sd_get_cid(%struct.mmc_host* %4, i32 %5, i32* %arraydecay, i32* %rocr) #11, !dbg !4750
  store i32 %call, i32* %err, align 4, !dbg !4751
  %6 = load i32, i32* %err, align 4, !dbg !4752
  %tobool21 = icmp ne i32 %6, 0, !dbg !4752
  br i1 %tobool21, label %if.then22, label %if.end23, !dbg !4754

if.then22:                                        ; preds = %retry
  %7 = load i32, i32* %err, align 4, !dbg !4755
  store i32 %7, i32* %retval, align 4, !dbg !4756
  br label %return, !dbg !4756

if.end23:                                         ; preds = %retry
  %8 = load %struct.mmc_card*, %struct.mmc_card** %oldcard.addr, align 8, !dbg !4757
  %tobool24 = icmp ne %struct.mmc_card* %8, null, !dbg !4757
  br i1 %tobool24, label %if.then25, label %if.else, !dbg !4759

if.then25:                                        ; preds = %if.end23
  %arraydecay26 = getelementptr inbounds [4 x i32], [4 x i32]* %cid, i64 0, i64 0, !dbg !4760
  %9 = bitcast i32* %arraydecay26 to i8*, !dbg !4760
  %10 = load %struct.mmc_card*, %struct.mmc_card** %oldcard.addr, align 8, !dbg !4763
  %raw_cid = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %10, i32 0, i32 15, !dbg !4764
  %arraydecay27 = getelementptr inbounds [4 x i32], [4 x i32]* %raw_cid, i64 0, i64 0, !dbg !4763
  %11 = bitcast i32* %arraydecay27 to i8*, !dbg !4763
  %call28 = call i32 @memcmp(i8* %9, i8* %11, i64 16) #11, !dbg !4765
  %cmp = icmp ne i32 %call28, 0, !dbg !4766
  br i1 %cmp, label %if.then30, label %if.end32, !dbg !4767

if.then30:                                        ; preds = %if.then25
  store i32 0, i32* %tmp31, align 4, !dbg !4768
  %12 = load i32, i32* %tmp31, align 4, !dbg !4772
  store i32 -2, i32* %retval, align 4, !dbg !4773
  br label %return, !dbg !4773

if.end32:                                         ; preds = %if.then25
  %13 = load %struct.mmc_card*, %struct.mmc_card** %oldcard.addr, align 8, !dbg !4774
  store %struct.mmc_card* %13, %struct.mmc_card** %card, align 8, !dbg !4775
  br label %if.end43, !dbg !4776

if.else:                                          ; preds = %if.end23
  %14 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !4777
  %call33 = call %struct.mmc_card* @mmc_alloc_card(%struct.mmc_host* %14, %struct.device_type* @sd_type) #11, !dbg !4779
  store %struct.mmc_card* %call33, %struct.mmc_card** %card, align 8, !dbg !4780
  %15 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !4781
  %16 = bitcast %struct.mmc_card* %15 to i8*, !dbg !4781
  %call34 = call zeroext i1 @IS_ERR(i8* %16) #11, !dbg !4783
  br i1 %call34, label %if.then35, label %if.end38, !dbg !4784

if.then35:                                        ; preds = %if.else
  %17 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !4785
  %18 = bitcast %struct.mmc_card* %17 to i8*, !dbg !4785
  %call36 = call i64 @PTR_ERR(i8* %18) #11, !dbg !4786
  %conv37 = trunc i64 %call36 to i32, !dbg !4786
  store i32 %conv37, i32* %retval, align 4, !dbg !4787
  br label %return, !dbg !4787

if.end38:                                         ; preds = %if.else
  %19 = load i32, i32* %ocr.addr, align 4, !dbg !4788
  %20 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !4789
  %ocr39 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %20, i32 0, i32 2, !dbg !4790
  store i32 %19, i32* %ocr39, align 8, !dbg !4791
  %21 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !4792
  %type = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %21, i32 0, i32 4, !dbg !4793
  store i32 1, i32* %type, align 8, !dbg !4794
  %22 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !4795
  %raw_cid40 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %22, i32 0, i32 15, !dbg !4796
  %arraydecay41 = getelementptr inbounds [4 x i32], [4 x i32]* %raw_cid40, i64 0, i64 0, !dbg !4797
  %23 = bitcast i32* %arraydecay41 to i8*, !dbg !4797
  %arraydecay42 = getelementptr inbounds [4 x i32], [4 x i32]* %cid, i64 0, i64 0, !dbg !4797
  %24 = bitcast i32* %arraydecay42 to i8*, !dbg !4797
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %23, i8* align 16 %24, i64 16, i1 false), !dbg !4797
  br label %if.end43

if.end43:                                         ; preds = %if.end38, %if.end32
  %25 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !4798
  %ops = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %25, i32 0, i32 3, !dbg !4800
  %26 = load %struct.mmc_host_ops*, %struct.mmc_host_ops** %ops, align 8, !dbg !4800
  %init_card = getelementptr inbounds %struct.mmc_host_ops, %struct.mmc_host_ops* %26, i32 0, i32 9, !dbg !4801
  %27 = load void (%struct.mmc_host*, %struct.mmc_card*)*, void (%struct.mmc_host*, %struct.mmc_card*)** %init_card, align 8, !dbg !4801
  %tobool44 = icmp ne void (%struct.mmc_host*, %struct.mmc_card*)* %27, null, !dbg !4798
  br i1 %tobool44, label %if.then45, label %if.end48, !dbg !4802

if.then45:                                        ; preds = %if.end43
  %28 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !4803
  %ops46 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %28, i32 0, i32 3, !dbg !4804
  %29 = load %struct.mmc_host_ops*, %struct.mmc_host_ops** %ops46, align 8, !dbg !4804
  %init_card47 = getelementptr inbounds %struct.mmc_host_ops, %struct.mmc_host_ops* %29, i32 0, i32 9, !dbg !4805
  %30 = load void (%struct.mmc_host*, %struct.mmc_card*)*, void (%struct.mmc_host*, %struct.mmc_card*)** %init_card47, align 8, !dbg !4805
  %31 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !4806
  %32 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !4807
  call void %30(%struct.mmc_host* %31, %struct.mmc_card* %32) #11, !dbg !4803
  br label %if.end48, !dbg !4803

if.end48:                                         ; preds = %if.then45, %if.end43
  %33 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !4808
  %caps = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %33, i32 0, i32 17, !dbg !4808
  %34 = load i32, i32* %caps, align 4, !dbg !4808
  %and = and i32 %34, 16, !dbg !4808
  %tobool49 = icmp ne i32 %and, 0, !dbg !4808
  br i1 %tobool49, label %if.end55, label %if.then50, !dbg !4810

if.then50:                                        ; preds = %if.end48
  %35 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !4811
  %36 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !4813
  %rca = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %36, i32 0, i32 3, !dbg !4814
  %call51 = call i32 @mmc_send_relative_addr(%struct.mmc_host* %35, i32* %rca) #11, !dbg !4815
  store i32 %call51, i32* %err, align 4, !dbg !4816
  %37 = load i32, i32* %err, align 4, !dbg !4817
  %tobool52 = icmp ne i32 %37, 0, !dbg !4817
  br i1 %tobool52, label %if.then53, label %if.end54, !dbg !4819

if.then53:                                        ; preds = %if.then50
  br label %free_card, !dbg !4820

if.end54:                                         ; preds = %if.then50
  br label %if.end55, !dbg !4821

if.end55:                                         ; preds = %if.end54, %if.end48
  %38 = load %struct.mmc_card*, %struct.mmc_card** %oldcard.addr, align 8, !dbg !4822
  %tobool56 = icmp ne %struct.mmc_card* %38, null, !dbg !4822
  br i1 %tobool56, label %if.end62, label %if.then57, !dbg !4824

if.then57:                                        ; preds = %if.end55
  %39 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !4825
  %40 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !4827
  %call58 = call i32 @mmc_sd_get_csd(%struct.mmc_host* %39, %struct.mmc_card* %40) #11, !dbg !4828
  store i32 %call58, i32* %err, align 4, !dbg !4829
  %41 = load i32, i32* %err, align 4, !dbg !4830
  %tobool59 = icmp ne i32 %41, 0, !dbg !4830
  br i1 %tobool59, label %if.then60, label %if.end61, !dbg !4832

if.then60:                                        ; preds = %if.then57
  br label %free_card, !dbg !4833

if.end61:                                         ; preds = %if.then57
  %42 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !4834
  call void @mmc_decode_cid(%struct.mmc_card* %42) #11, !dbg !4835
  br label %if.end62, !dbg !4836

if.end62:                                         ; preds = %if.end61, %if.end55
  %43 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !4837
  %csd = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %43, i32 0, i32 20, !dbg !4839
  %dsr_imp = getelementptr inbounds %struct.mmc_csd, %struct.mmc_csd* %csd, i32 0, i32 12, !dbg !4840
  %bf.load63 = load i8, i8* %dsr_imp, align 8, !dbg !4840
  %bf.lshr64 = lshr i8 %bf.load63, 4, !dbg !4840
  %bf.clear65 = and i8 %bf.lshr64, 1, !dbg !4840
  %bf.cast66 = zext i8 %bf.clear65 to i32, !dbg !4840
  %tobool67 = icmp ne i32 %bf.cast66, 0, !dbg !4837
  br i1 %tobool67, label %land.lhs.true, label %if.end71, !dbg !4841

land.lhs.true:                                    ; preds = %if.end62
  %44 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !4842
  %dsr_req = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %44, i32 0, i32 60, !dbg !4843
  %45 = load i32, i32* %dsr_req, align 8, !dbg !4843
  %tobool68 = icmp ne i32 %45, 0, !dbg !4842
  br i1 %tobool68, label %if.then69, label %if.end71, !dbg !4844

if.then69:                                        ; preds = %land.lhs.true
  %46 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !4845
  %call70 = call i32 @mmc_set_dsr(%struct.mmc_host* %46) #11, !dbg !4846
  br label %if.end71, !dbg !4846

if.end71:                                         ; preds = %if.then69, %land.lhs.true, %if.end62
  %47 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !4847
  %caps72 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %47, i32 0, i32 17, !dbg !4847
  %48 = load i32, i32* %caps72, align 4, !dbg !4847
  %and73 = and i32 %48, 16, !dbg !4847
  %tobool74 = icmp ne i32 %and73, 0, !dbg !4847
  br i1 %tobool74, label %if.end80, label %if.then75, !dbg !4849

if.then75:                                        ; preds = %if.end71
  %49 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !4850
  %call76 = call i32 @mmc_select_card(%struct.mmc_card* %49) #11, !dbg !4852
  store i32 %call76, i32* %err, align 4, !dbg !4853
  %50 = load i32, i32* %err, align 4, !dbg !4854
  %tobool77 = icmp ne i32 %50, 0, !dbg !4854
  br i1 %tobool77, label %if.then78, label %if.end79, !dbg !4856

if.then78:                                        ; preds = %if.then75
  br label %free_card, !dbg !4857

if.end79:                                         ; preds = %if.then75
  br label %if.end80, !dbg !4858

if.end80:                                         ; preds = %if.end79, %if.end71
  %51 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !4859
  %52 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !4860
  %53 = load %struct.mmc_card*, %struct.mmc_card** %oldcard.addr, align 8, !dbg !4861
  %cmp81 = icmp ne %struct.mmc_card* %53, null, !dbg !4862
  %call83 = call i32 @mmc_sd_setup_card(%struct.mmc_host* %51, %struct.mmc_card* %52, i1 zeroext %cmp81) #11, !dbg !4863
  store i32 %call83, i32* %err, align 4, !dbg !4864
  %54 = load i32, i32* %err, align 4, !dbg !4865
  %tobool84 = icmp ne i32 %54, 0, !dbg !4865
  br i1 %tobool84, label %if.then85, label %if.end86, !dbg !4867

if.then85:                                        ; preds = %if.end80
  br label %free_card, !dbg !4868

if.end86:                                         ; preds = %if.end80
  %55 = load i8, i8* %v18_fixup_failed, align 1, !dbg !4869
  %tobool87 = trunc i8 %55 to i1, !dbg !4869
  br i1 %tobool87, label %if.end122, label %land.lhs.true88, !dbg !4871

land.lhs.true88:                                  ; preds = %if.end86
  %56 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !4872
  %caps89 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %56, i32 0, i32 17, !dbg !4872
  %57 = load i32, i32* %caps89, align 4, !dbg !4872
  %and90 = and i32 %57, 16, !dbg !4872
  %tobool91 = icmp ne i32 %and90, 0, !dbg !4872
  br i1 %tobool91, label %if.end122, label %land.lhs.true92, !dbg !4873

land.lhs.true92:                                  ; preds = %land.lhs.true88
  %58 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !4874
  %call93 = call i32 @mmc_host_uhs(%struct.mmc_host* %58) #11, !dbg !4875
  %tobool94 = icmp ne i32 %call93, 0, !dbg !4875
  br i1 %tobool94, label %land.lhs.true95, label %if.end122, !dbg !4876

land.lhs.true95:                                  ; preds = %land.lhs.true92
  %59 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !4877
  %call96 = call zeroext i1 @mmc_sd_card_using_v18(%struct.mmc_card* %59) #11, !dbg !4878
  br i1 %call96, label %land.lhs.true98, label %if.end122, !dbg !4879

land.lhs.true98:                                  ; preds = %land.lhs.true95
  %60 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !4880
  %ios = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %60, i32 0, i32 29, !dbg !4881
  %signal_voltage = getelementptr inbounds %struct.mmc_ios, %struct.mmc_ios* %ios, i32 0, i32 8, !dbg !4882
  %61 = load i8, i8* %signal_voltage, align 1, !dbg !4882
  %conv99 = zext i8 %61 to i32, !dbg !4880
  %cmp100 = icmp ne i32 %conv99, 1, !dbg !4883
  br i1 %cmp100, label %if.then102, label %if.end122, !dbg !4884

if.then102:                                       ; preds = %land.lhs.true98
  %62 = load %struct.mmc_card*, %struct.mmc_card** %oldcard.addr, align 8, !dbg !4885
  %tobool103 = icmp ne %struct.mmc_card* %62, null, !dbg !4885
  br i1 %tobool103, label %if.then104, label %if.end109, !dbg !4888

if.then104:                                       ; preds = %if.then102
  %63 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !4889
  %call105 = call i32 @mmc_read_switch(%struct.mmc_card* %63) #11, !dbg !4891
  store i32 %call105, i32* %err, align 4, !dbg !4892
  %64 = load i32, i32* %err, align 4, !dbg !4893
  %tobool106 = icmp ne i32 %64, 0, !dbg !4893
  br i1 %tobool106, label %if.then107, label %if.end108, !dbg !4895

if.then107:                                       ; preds = %if.then104
  br label %free_card, !dbg !4896

if.end108:                                        ; preds = %if.then104
  br label %if.end109, !dbg !4897

if.end109:                                        ; preds = %if.end108, %if.then102
  %65 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !4898
  %call110 = call zeroext i1 @mmc_sd_card_using_v18(%struct.mmc_card* %65) #11, !dbg !4900
  br i1 %call110, label %if.then111, label %if.end121, !dbg !4901

if.then111:                                       ; preds = %if.end109
  %66 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !4902
  %call112 = call i32 @mmc_host_set_uhs_voltage(%struct.mmc_host* %66) #11, !dbg !4905
  %tobool113 = icmp ne i32 %call112, 0, !dbg !4905
  br i1 %tobool113, label %if.then116, label %lor.lhs.false, !dbg !4906

lor.lhs.false:                                    ; preds = %if.then111
  %67 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !4907
  %call114 = call i32 @mmc_sd_init_uhs_card(%struct.mmc_card* %67) #11, !dbg !4908
  %tobool115 = icmp ne i32 %call114, 0, !dbg !4908
  br i1 %tobool115, label %if.then116, label %if.end120, !dbg !4909

if.then116:                                       ; preds = %lor.lhs.false, %if.then111
  store i8 1, i8* %v18_fixup_failed, align 1, !dbg !4910
  %68 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !4912
  %69 = load i32, i32* %ocr.addr, align 4, !dbg !4913
  call void @mmc_power_cycle(%struct.mmc_host* %68, i32 %69) #11, !dbg !4914
  %70 = load %struct.mmc_card*, %struct.mmc_card** %oldcard.addr, align 8, !dbg !4915
  %tobool117 = icmp ne %struct.mmc_card* %70, null, !dbg !4915
  br i1 %tobool117, label %if.end119, label %if.then118, !dbg !4917

if.then118:                                       ; preds = %if.then116
  %71 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !4918
  call void @mmc_remove_card(%struct.mmc_card* %71) #11, !dbg !4919
  br label %if.end119, !dbg !4919

if.end119:                                        ; preds = %if.then118, %if.then116
  br label %retry, !dbg !4920

if.end120:                                        ; preds = %lor.lhs.false
  br label %done, !dbg !4921

if.end121:                                        ; preds = %if.end109
  br label %if.end122, !dbg !4922

if.end122:                                        ; preds = %if.end121, %land.lhs.true98, %land.lhs.true95, %land.lhs.true92, %land.lhs.true88, %if.end86
  %72 = load i32, i32* %rocr, align 4, !dbg !4923
  %and123 = and i32 %72, 16777216, !dbg !4925
  %tobool124 = icmp ne i32 %and123, 0, !dbg !4925
  br i1 %tobool124, label %land.lhs.true125, label %if.else133, !dbg !4926

land.lhs.true125:                                 ; preds = %if.end122
  %73 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !4927
  %call126 = call i32 @mmc_host_uhs(%struct.mmc_host* %73) #11, !dbg !4928
  %tobool127 = icmp ne i32 %call126, 0, !dbg !4928
  br i1 %tobool127, label %if.then128, label %if.else133, !dbg !4929

if.then128:                                       ; preds = %land.lhs.true125
  %74 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !4930
  %call129 = call i32 @mmc_sd_init_uhs_card(%struct.mmc_card* %74) #11, !dbg !4932
  store i32 %call129, i32* %err, align 4, !dbg !4933
  %75 = load i32, i32* %err, align 4, !dbg !4934
  %tobool130 = icmp ne i32 %75, 0, !dbg !4934
  br i1 %tobool130, label %if.then131, label %if.end132, !dbg !4936

if.then131:                                       ; preds = %if.then128
  br label %free_card, !dbg !4937

if.end132:                                        ; preds = %if.then128
  br label %if.end158, !dbg !4938

if.else133:                                       ; preds = %land.lhs.true125, %if.end122
  %76 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !4939
  %call134 = call i32 @mmc_sd_switch_hs(%struct.mmc_card* %76) #11, !dbg !4941
  store i32 %call134, i32* %err, align 4, !dbg !4942
  %77 = load i32, i32* %err, align 4, !dbg !4943
  %cmp135 = icmp sgt i32 %77, 0, !dbg !4945
  br i1 %cmp135, label %if.then137, label %if.else139, !dbg !4946

if.then137:                                       ; preds = %if.else133
  %78 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !4947
  %host138 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %78, i32 0, i32 0, !dbg !4948
  %79 = load %struct.mmc_host*, %struct.mmc_host** %host138, align 8, !dbg !4948
  call void @mmc_set_timing(%struct.mmc_host* %79, i32 2) #11, !dbg !4949
  br label %if.end143, !dbg !4949

if.else139:                                       ; preds = %if.else133
  %80 = load i32, i32* %err, align 4, !dbg !4950
  %tobool140 = icmp ne i32 %80, 0, !dbg !4950
  br i1 %tobool140, label %if.then141, label %if.end142, !dbg !4952

if.then141:                                       ; preds = %if.else139
  br label %free_card, !dbg !4953

if.end142:                                        ; preds = %if.else139
  br label %if.end143

if.end143:                                        ; preds = %if.end142, %if.then137
  %81 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !4954
  %82 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !4955
  %call144 = call i32 @mmc_sd_get_max_clock(%struct.mmc_card* %82) #11, !dbg !4956
  call void @mmc_set_clock(%struct.mmc_host* %81, i32 %call144) #11, !dbg !4957
  %83 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !4958
  %caps145 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %83, i32 0, i32 17, !dbg !4960
  %84 = load i32, i32* %caps145, align 4, !dbg !4960
  %and146 = and i32 %84, 1, !dbg !4961
  %tobool147 = icmp ne i32 %and146, 0, !dbg !4961
  br i1 %tobool147, label %land.lhs.true148, label %if.end157, !dbg !4962

land.lhs.true148:                                 ; preds = %if.end143
  %85 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !4963
  %scr = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %85, i32 0, i32 22, !dbg !4964
  %bus_widths = getelementptr inbounds %struct.sd_scr, %struct.sd_scr* %scr, i32 0, i32 4, !dbg !4965
  %86 = load i8, i8* %bus_widths, align 4, !dbg !4965
  %conv149 = zext i8 %86 to i32, !dbg !4963
  %and150 = and i32 %conv149, 4, !dbg !4966
  %tobool151 = icmp ne i32 %and150, 0, !dbg !4966
  br i1 %tobool151, label %if.then152, label %if.end157, !dbg !4967

if.then152:                                       ; preds = %land.lhs.true148
  %87 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !4968
  %call153 = call i32 @mmc_app_set_bus_width(%struct.mmc_card* %87, i32 2) #11, !dbg !4970
  store i32 %call153, i32* %err, align 4, !dbg !4971
  %88 = load i32, i32* %err, align 4, !dbg !4972
  %tobool154 = icmp ne i32 %88, 0, !dbg !4972
  br i1 %tobool154, label %if.then155, label %if.end156, !dbg !4974

if.then155:                                       ; preds = %if.then152
  br label %free_card, !dbg !4975

if.end156:                                        ; preds = %if.then152
  %89 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !4976
  call void @mmc_set_bus_width(%struct.mmc_host* %89, i32 2) #11, !dbg !4977
  br label %if.end157, !dbg !4978

if.end157:                                        ; preds = %if.end156, %land.lhs.true148, %if.end143
  br label %if.end158

if.end158:                                        ; preds = %if.end157, %if.end132
  %90 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !4979
  %cqe_ops = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %90, i32 0, i32 62, !dbg !4981
  %91 = load %struct.mmc_cqe_ops*, %struct.mmc_cqe_ops** %cqe_ops, align 64, !dbg !4981
  %tobool159 = icmp ne %struct.mmc_cqe_ops* %91, null, !dbg !4979
  br i1 %tobool159, label %land.lhs.true160, label %if.end171, !dbg !4982

land.lhs.true160:                                 ; preds = %if.end158
  %92 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !4983
  %cqe_enabled = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %92, i32 0, i32 65, !dbg !4984
  %93 = load i8, i8* %cqe_enabled, align 4, !dbg !4984
  %tobool161 = trunc i8 %93 to i1, !dbg !4984
  br i1 %tobool161, label %if.end171, label %if.then162, !dbg !4985

if.then162:                                       ; preds = %land.lhs.true160
  %94 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !4986
  %cqe_ops163 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %94, i32 0, i32 62, !dbg !4988
  %95 = load %struct.mmc_cqe_ops*, %struct.mmc_cqe_ops** %cqe_ops163, align 64, !dbg !4988
  %cqe_enable = getelementptr inbounds %struct.mmc_cqe_ops, %struct.mmc_cqe_ops* %95, i32 0, i32 0, !dbg !4989
  %96 = load i32 (%struct.mmc_host*, %struct.mmc_card*)*, i32 (%struct.mmc_host*, %struct.mmc_card*)** %cqe_enable, align 8, !dbg !4989
  %97 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !4990
  %98 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !4991
  %call164 = call i32 %96(%struct.mmc_host* %97, %struct.mmc_card* %98) #11, !dbg !4986
  store i32 %call164, i32* %err, align 4, !dbg !4992
  %99 = load i32, i32* %err, align 4, !dbg !4993
  %tobool165 = icmp ne i32 %99, 0, !dbg !4993
  br i1 %tobool165, label %if.end170, label %if.then166, !dbg !4995

if.then166:                                       ; preds = %if.then162
  %100 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !4996
  %cqe_enabled167 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %100, i32 0, i32 65, !dbg !4998
  store i8 1, i8* %cqe_enabled167, align 4, !dbg !4999
  %101 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !5000
  %hsq_enabled = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %101, i32 0, i32 67, !dbg !5001
  store i8 1, i8* %hsq_enabled, align 2, !dbg !5002
  %102 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !5003
  %class_dev = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %102, i32 0, i32 1, !dbg !5003
  %call168 = call i8* @dev_name(%struct.device* %class_dev) #11, !dbg !5003
  %call169 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.50, i64 0, i64 0), i8* %call168) #12, !dbg !5003
  br label %if.end170, !dbg !5004

if.end170:                                        ; preds = %if.then166, %if.then162
  br label %if.end171, !dbg !5005

if.end171:                                        ; preds = %if.end170, %land.lhs.true160, %if.end158
  %103 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !5006
  %caps2 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %103, i32 0, i32 18, !dbg !5008
  %104 = load i32, i32* %caps2, align 8, !dbg !5008
  %and172 = and i32 %104, 33554432, !dbg !5009
  %tobool173 = icmp ne i32 %and172, 0, !dbg !5009
  br i1 %tobool173, label %land.lhs.true174, label %if.end184, !dbg !5010

land.lhs.true174:                                 ; preds = %if.end171
  %105 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !5011
  %ios175 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %105, i32 0, i32 29, !dbg !5012
  %signal_voltage176 = getelementptr inbounds %struct.mmc_ios, %struct.mmc_ios* %ios175, i32 0, i32 8, !dbg !5013
  %106 = load i8, i8* %signal_voltage176, align 1, !dbg !5013
  %conv177 = zext i8 %106 to i32, !dbg !5011
  %cmp178 = icmp eq i32 %conv177, 0, !dbg !5014
  br i1 %cmp178, label %if.then180, label %if.end184, !dbg !5015

if.then180:                                       ; preds = %land.lhs.true174
  %107 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !5016
  %class_dev181 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %107, i32 0, i32 1, !dbg !5016
  %call182 = call i8* @dev_name(%struct.device* %class_dev181) #11, !dbg !5016
  %call183 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.51, i64 0, i64 0), i8* %call182) #12, !dbg !5016
  store i32 -22, i32* %err, align 4, !dbg !5018
  br label %free_card, !dbg !5019

if.end184:                                        ; preds = %land.lhs.true174, %if.end171
  br label %done, !dbg !5020

done:                                             ; preds = %if.end184, %if.end120
  call void @llvm.dbg.label(metadata !5021), !dbg !5022
  %108 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !5023
  %109 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !5024
  %card185 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %109, i32 0, i32 38, !dbg !5025
  store %struct.mmc_card* %108, %struct.mmc_card** %card185, align 8, !dbg !5026
  store i32 0, i32* %retval, align 4, !dbg !5027
  br label %return, !dbg !5027

free_card:                                        ; preds = %if.then180, %if.then155, %if.then141, %if.then131, %if.then107, %if.then85, %if.then78, %if.then60, %if.then53
  call void @llvm.dbg.label(metadata !5028), !dbg !5029
  %110 = load %struct.mmc_card*, %struct.mmc_card** %oldcard.addr, align 8, !dbg !5030
  %tobool186 = icmp ne %struct.mmc_card* %110, null, !dbg !5030
  br i1 %tobool186, label %if.end188, label %if.then187, !dbg !5032

if.then187:                                       ; preds = %free_card
  %111 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !5033
  call void @mmc_remove_card(%struct.mmc_card* %111) #11, !dbg !5034
  br label %if.end188, !dbg !5034

if.end188:                                        ; preds = %if.then187, %free_card
  %112 = load i32, i32* %err, align 4, !dbg !5035
  store i32 %112, i32* %retval, align 4, !dbg !5036
  br label %return, !dbg !5036

return:                                           ; preds = %if.end188, %done, %if.then35, %if.then30, %if.then22
  %113 = load i32, i32* %retval, align 4, !dbg !5037
  ret i32 %113, !dbg !5037
}

; Function Attrs: noredzone
declare dso_local void @mmc_release_host(%struct.mmc_host*) #2

; Function Attrs: noredzone
declare dso_local i32 @mmc_add_card(%struct.mmc_card*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mmc_claim_host(%struct.mmc_host* %host) #0 !dbg !5038 {
entry:
  %host.addr = alloca %struct.mmc_host*, align 8
  store %struct.mmc_host* %host, %struct.mmc_host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %host.addr, metadata !5039, metadata !DIExpression()), !dbg !5040
  %0 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !5041
  %call = call i32 @__mmc_claim_host(%struct.mmc_host* %0, %struct.mmc_ctx* null, %struct.atomic_t* null) #11, !dbg !5042
  ret void, !dbg !5043
}

; Function Attrs: noredzone
declare dso_local void @mmc_remove_card(%struct.mmc_card*) #2

; Function Attrs: noredzone
declare dso_local void @mmc_detach_bus(%struct.mmc_host*) #2

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i64(i64) #4

; Function Attrs: noredzone
declare dso_local noalias i8* @__kmalloc(i64, i32) #2

; Function Attrs: nounwind willreturn
declare void @llvm.assume(i1) #5

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @get_order(i64 %size) #6 !dbg !5044 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !5048, metadata !DIExpression()), !dbg !5053
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !5055, metadata !DIExpression()), !dbg !5056
  %retval = alloca i32, align 4
  %size.addr = alloca i64, align 8
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !5057, metadata !DIExpression()), !dbg !5058
  %0 = load i64, i64* %size.addr, align 8, !dbg !5059
  %1 = call i1 @llvm.is.constant.i64(i64 %0), !dbg !5061
  br i1 %1, label %if.then, label %if.end447, !dbg !5062

if.then:                                          ; preds = %entry
  %2 = load i64, i64* %size.addr, align 8, !dbg !5063
  %tobool = icmp ne i64 %2, 0, !dbg !5063
  br i1 %tobool, label %if.end, label %if.then1, !dbg !5066

if.then1:                                         ; preds = %if.then
  store i32 52, i32* %retval, align 4, !dbg !5067
  br label %return, !dbg !5067

if.end:                                           ; preds = %if.then
  %3 = load i64, i64* %size.addr, align 8, !dbg !5068
  %cmp = icmp ult i64 %3, 4096, !dbg !5070
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !5071

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !5072
  br label %return, !dbg !5072

if.end3:                                          ; preds = %if.end
  %4 = load i64, i64* %size.addr, align 8, !dbg !5073
  %sub = sub i64 %4, 1, !dbg !5073
  %5 = call i1 @llvm.is.constant.i64(i64 %sub), !dbg !5073
  br i1 %5, label %cond.true, label %cond.false442, !dbg !5073

cond.true:                                        ; preds = %if.end3
  %6 = load i64, i64* %size.addr, align 8, !dbg !5073
  %sub4 = sub i64 %6, 1, !dbg !5073
  %7 = call i1 @llvm.is.constant.i64(i64 %sub4), !dbg !5073
  br i1 %7, label %cond.true5, label %cond.false439, !dbg !5073

cond.true5:                                       ; preds = %cond.true
  %8 = load i64, i64* %size.addr, align 8, !dbg !5073
  %sub6 = sub i64 %8, 1, !dbg !5073
  %cmp7 = icmp ult i64 %sub6, 2, !dbg !5073
  br i1 %cmp7, label %cond.true8, label %cond.false, !dbg !5073

cond.true8:                                       ; preds = %cond.true5
  br label %cond.end437, !dbg !5073

cond.false:                                       ; preds = %cond.true5
  %9 = load i64, i64* %size.addr, align 8, !dbg !5073
  %sub9 = sub i64 %9, 1, !dbg !5073
  %and = and i64 %sub9, -9223372036854775808, !dbg !5073
  %tobool10 = icmp ne i64 %and, 0, !dbg !5073
  br i1 %tobool10, label %cond.true11, label %cond.false12, !dbg !5073

cond.true11:                                      ; preds = %cond.false
  br label %cond.end435, !dbg !5073

cond.false12:                                     ; preds = %cond.false
  %10 = load i64, i64* %size.addr, align 8, !dbg !5073
  %sub13 = sub i64 %10, 1, !dbg !5073
  %and14 = and i64 %sub13, 4611686018427387904, !dbg !5073
  %tobool15 = icmp ne i64 %and14, 0, !dbg !5073
  br i1 %tobool15, label %cond.true16, label %cond.false17, !dbg !5073

cond.true16:                                      ; preds = %cond.false12
  br label %cond.end433, !dbg !5073

cond.false17:                                     ; preds = %cond.false12
  %11 = load i64, i64* %size.addr, align 8, !dbg !5073
  %sub18 = sub i64 %11, 1, !dbg !5073
  %and19 = and i64 %sub18, 2305843009213693952, !dbg !5073
  %tobool20 = icmp ne i64 %and19, 0, !dbg !5073
  br i1 %tobool20, label %cond.true21, label %cond.false22, !dbg !5073

cond.true21:                                      ; preds = %cond.false17
  br label %cond.end431, !dbg !5073

cond.false22:                                     ; preds = %cond.false17
  %12 = load i64, i64* %size.addr, align 8, !dbg !5073
  %sub23 = sub i64 %12, 1, !dbg !5073
  %and24 = and i64 %sub23, 1152921504606846976, !dbg !5073
  %tobool25 = icmp ne i64 %and24, 0, !dbg !5073
  br i1 %tobool25, label %cond.true26, label %cond.false27, !dbg !5073

cond.true26:                                      ; preds = %cond.false22
  br label %cond.end429, !dbg !5073

cond.false27:                                     ; preds = %cond.false22
  %13 = load i64, i64* %size.addr, align 8, !dbg !5073
  %sub28 = sub i64 %13, 1, !dbg !5073
  %and29 = and i64 %sub28, 576460752303423488, !dbg !5073
  %tobool30 = icmp ne i64 %and29, 0, !dbg !5073
  br i1 %tobool30, label %cond.true31, label %cond.false32, !dbg !5073

cond.true31:                                      ; preds = %cond.false27
  br label %cond.end427, !dbg !5073

cond.false32:                                     ; preds = %cond.false27
  %14 = load i64, i64* %size.addr, align 8, !dbg !5073
  %sub33 = sub i64 %14, 1, !dbg !5073
  %and34 = and i64 %sub33, 288230376151711744, !dbg !5073
  %tobool35 = icmp ne i64 %and34, 0, !dbg !5073
  br i1 %tobool35, label %cond.true36, label %cond.false37, !dbg !5073

cond.true36:                                      ; preds = %cond.false32
  br label %cond.end425, !dbg !5073

cond.false37:                                     ; preds = %cond.false32
  %15 = load i64, i64* %size.addr, align 8, !dbg !5073
  %sub38 = sub i64 %15, 1, !dbg !5073
  %and39 = and i64 %sub38, 144115188075855872, !dbg !5073
  %tobool40 = icmp ne i64 %and39, 0, !dbg !5073
  br i1 %tobool40, label %cond.true41, label %cond.false42, !dbg !5073

cond.true41:                                      ; preds = %cond.false37
  br label %cond.end423, !dbg !5073

cond.false42:                                     ; preds = %cond.false37
  %16 = load i64, i64* %size.addr, align 8, !dbg !5073
  %sub43 = sub i64 %16, 1, !dbg !5073
  %and44 = and i64 %sub43, 72057594037927936, !dbg !5073
  %tobool45 = icmp ne i64 %and44, 0, !dbg !5073
  br i1 %tobool45, label %cond.true46, label %cond.false47, !dbg !5073

cond.true46:                                      ; preds = %cond.false42
  br label %cond.end421, !dbg !5073

cond.false47:                                     ; preds = %cond.false42
  %17 = load i64, i64* %size.addr, align 8, !dbg !5073
  %sub48 = sub i64 %17, 1, !dbg !5073
  %and49 = and i64 %sub48, 36028797018963968, !dbg !5073
  %tobool50 = icmp ne i64 %and49, 0, !dbg !5073
  br i1 %tobool50, label %cond.true51, label %cond.false52, !dbg !5073

cond.true51:                                      ; preds = %cond.false47
  br label %cond.end419, !dbg !5073

cond.false52:                                     ; preds = %cond.false47
  %18 = load i64, i64* %size.addr, align 8, !dbg !5073
  %sub53 = sub i64 %18, 1, !dbg !5073
  %and54 = and i64 %sub53, 18014398509481984, !dbg !5073
  %tobool55 = icmp ne i64 %and54, 0, !dbg !5073
  br i1 %tobool55, label %cond.true56, label %cond.false57, !dbg !5073

cond.true56:                                      ; preds = %cond.false52
  br label %cond.end417, !dbg !5073

cond.false57:                                     ; preds = %cond.false52
  %19 = load i64, i64* %size.addr, align 8, !dbg !5073
  %sub58 = sub i64 %19, 1, !dbg !5073
  %and59 = and i64 %sub58, 9007199254740992, !dbg !5073
  %tobool60 = icmp ne i64 %and59, 0, !dbg !5073
  br i1 %tobool60, label %cond.true61, label %cond.false62, !dbg !5073

cond.true61:                                      ; preds = %cond.false57
  br label %cond.end415, !dbg !5073

cond.false62:                                     ; preds = %cond.false57
  %20 = load i64, i64* %size.addr, align 8, !dbg !5073
  %sub63 = sub i64 %20, 1, !dbg !5073
  %and64 = and i64 %sub63, 4503599627370496, !dbg !5073
  %tobool65 = icmp ne i64 %and64, 0, !dbg !5073
  br i1 %tobool65, label %cond.true66, label %cond.false67, !dbg !5073

cond.true66:                                      ; preds = %cond.false62
  br label %cond.end413, !dbg !5073

cond.false67:                                     ; preds = %cond.false62
  %21 = load i64, i64* %size.addr, align 8, !dbg !5073
  %sub68 = sub i64 %21, 1, !dbg !5073
  %and69 = and i64 %sub68, 2251799813685248, !dbg !5073
  %tobool70 = icmp ne i64 %and69, 0, !dbg !5073
  br i1 %tobool70, label %cond.true71, label %cond.false72, !dbg !5073

cond.true71:                                      ; preds = %cond.false67
  br label %cond.end411, !dbg !5073

cond.false72:                                     ; preds = %cond.false67
  %22 = load i64, i64* %size.addr, align 8, !dbg !5073
  %sub73 = sub i64 %22, 1, !dbg !5073
  %and74 = and i64 %sub73, 1125899906842624, !dbg !5073
  %tobool75 = icmp ne i64 %and74, 0, !dbg !5073
  br i1 %tobool75, label %cond.true76, label %cond.false77, !dbg !5073

cond.true76:                                      ; preds = %cond.false72
  br label %cond.end409, !dbg !5073

cond.false77:                                     ; preds = %cond.false72
  %23 = load i64, i64* %size.addr, align 8, !dbg !5073
  %sub78 = sub i64 %23, 1, !dbg !5073
  %and79 = and i64 %sub78, 562949953421312, !dbg !5073
  %tobool80 = icmp ne i64 %and79, 0, !dbg !5073
  br i1 %tobool80, label %cond.true81, label %cond.false82, !dbg !5073

cond.true81:                                      ; preds = %cond.false77
  br label %cond.end407, !dbg !5073

cond.false82:                                     ; preds = %cond.false77
  %24 = load i64, i64* %size.addr, align 8, !dbg !5073
  %sub83 = sub i64 %24, 1, !dbg !5073
  %and84 = and i64 %sub83, 281474976710656, !dbg !5073
  %tobool85 = icmp ne i64 %and84, 0, !dbg !5073
  br i1 %tobool85, label %cond.true86, label %cond.false87, !dbg !5073

cond.true86:                                      ; preds = %cond.false82
  br label %cond.end405, !dbg !5073

cond.false87:                                     ; preds = %cond.false82
  %25 = load i64, i64* %size.addr, align 8, !dbg !5073
  %sub88 = sub i64 %25, 1, !dbg !5073
  %and89 = and i64 %sub88, 140737488355328, !dbg !5073
  %tobool90 = icmp ne i64 %and89, 0, !dbg !5073
  br i1 %tobool90, label %cond.true91, label %cond.false92, !dbg !5073

cond.true91:                                      ; preds = %cond.false87
  br label %cond.end403, !dbg !5073

cond.false92:                                     ; preds = %cond.false87
  %26 = load i64, i64* %size.addr, align 8, !dbg !5073
  %sub93 = sub i64 %26, 1, !dbg !5073
  %and94 = and i64 %sub93, 70368744177664, !dbg !5073
  %tobool95 = icmp ne i64 %and94, 0, !dbg !5073
  br i1 %tobool95, label %cond.true96, label %cond.false97, !dbg !5073

cond.true96:                                      ; preds = %cond.false92
  br label %cond.end401, !dbg !5073

cond.false97:                                     ; preds = %cond.false92
  %27 = load i64, i64* %size.addr, align 8, !dbg !5073
  %sub98 = sub i64 %27, 1, !dbg !5073
  %and99 = and i64 %sub98, 35184372088832, !dbg !5073
  %tobool100 = icmp ne i64 %and99, 0, !dbg !5073
  br i1 %tobool100, label %cond.true101, label %cond.false102, !dbg !5073

cond.true101:                                     ; preds = %cond.false97
  br label %cond.end399, !dbg !5073

cond.false102:                                    ; preds = %cond.false97
  %28 = load i64, i64* %size.addr, align 8, !dbg !5073
  %sub103 = sub i64 %28, 1, !dbg !5073
  %and104 = and i64 %sub103, 17592186044416, !dbg !5073
  %tobool105 = icmp ne i64 %and104, 0, !dbg !5073
  br i1 %tobool105, label %cond.true106, label %cond.false107, !dbg !5073

cond.true106:                                     ; preds = %cond.false102
  br label %cond.end397, !dbg !5073

cond.false107:                                    ; preds = %cond.false102
  %29 = load i64, i64* %size.addr, align 8, !dbg !5073
  %sub108 = sub i64 %29, 1, !dbg !5073
  %and109 = and i64 %sub108, 8796093022208, !dbg !5073
  %tobool110 = icmp ne i64 %and109, 0, !dbg !5073
  br i1 %tobool110, label %cond.true111, label %cond.false112, !dbg !5073

cond.true111:                                     ; preds = %cond.false107
  br label %cond.end395, !dbg !5073

cond.false112:                                    ; preds = %cond.false107
  %30 = load i64, i64* %size.addr, align 8, !dbg !5073
  %sub113 = sub i64 %30, 1, !dbg !5073
  %and114 = and i64 %sub113, 4398046511104, !dbg !5073
  %tobool115 = icmp ne i64 %and114, 0, !dbg !5073
  br i1 %tobool115, label %cond.true116, label %cond.false117, !dbg !5073

cond.true116:                                     ; preds = %cond.false112
  br label %cond.end393, !dbg !5073

cond.false117:                                    ; preds = %cond.false112
  %31 = load i64, i64* %size.addr, align 8, !dbg !5073
  %sub118 = sub i64 %31, 1, !dbg !5073
  %and119 = and i64 %sub118, 2199023255552, !dbg !5073
  %tobool120 = icmp ne i64 %and119, 0, !dbg !5073
  br i1 %tobool120, label %cond.true121, label %cond.false122, !dbg !5073

cond.true121:                                     ; preds = %cond.false117
  br label %cond.end391, !dbg !5073

cond.false122:                                    ; preds = %cond.false117
  %32 = load i64, i64* %size.addr, align 8, !dbg !5073
  %sub123 = sub i64 %32, 1, !dbg !5073
  %and124 = and i64 %sub123, 1099511627776, !dbg !5073
  %tobool125 = icmp ne i64 %and124, 0, !dbg !5073
  br i1 %tobool125, label %cond.true126, label %cond.false127, !dbg !5073

cond.true126:                                     ; preds = %cond.false122
  br label %cond.end389, !dbg !5073

cond.false127:                                    ; preds = %cond.false122
  %33 = load i64, i64* %size.addr, align 8, !dbg !5073
  %sub128 = sub i64 %33, 1, !dbg !5073
  %and129 = and i64 %sub128, 549755813888, !dbg !5073
  %tobool130 = icmp ne i64 %and129, 0, !dbg !5073
  br i1 %tobool130, label %cond.true131, label %cond.false132, !dbg !5073

cond.true131:                                     ; preds = %cond.false127
  br label %cond.end387, !dbg !5073

cond.false132:                                    ; preds = %cond.false127
  %34 = load i64, i64* %size.addr, align 8, !dbg !5073
  %sub133 = sub i64 %34, 1, !dbg !5073
  %and134 = and i64 %sub133, 274877906944, !dbg !5073
  %tobool135 = icmp ne i64 %and134, 0, !dbg !5073
  br i1 %tobool135, label %cond.true136, label %cond.false137, !dbg !5073

cond.true136:                                     ; preds = %cond.false132
  br label %cond.end385, !dbg !5073

cond.false137:                                    ; preds = %cond.false132
  %35 = load i64, i64* %size.addr, align 8, !dbg !5073
  %sub138 = sub i64 %35, 1, !dbg !5073
  %and139 = and i64 %sub138, 137438953472, !dbg !5073
  %tobool140 = icmp ne i64 %and139, 0, !dbg !5073
  br i1 %tobool140, label %cond.true141, label %cond.false142, !dbg !5073

cond.true141:                                     ; preds = %cond.false137
  br label %cond.end383, !dbg !5073

cond.false142:                                    ; preds = %cond.false137
  %36 = load i64, i64* %size.addr, align 8, !dbg !5073
  %sub143 = sub i64 %36, 1, !dbg !5073
  %and144 = and i64 %sub143, 68719476736, !dbg !5073
  %tobool145 = icmp ne i64 %and144, 0, !dbg !5073
  br i1 %tobool145, label %cond.true146, label %cond.false147, !dbg !5073

cond.true146:                                     ; preds = %cond.false142
  br label %cond.end381, !dbg !5073

cond.false147:                                    ; preds = %cond.false142
  %37 = load i64, i64* %size.addr, align 8, !dbg !5073
  %sub148 = sub i64 %37, 1, !dbg !5073
  %and149 = and i64 %sub148, 34359738368, !dbg !5073
  %tobool150 = icmp ne i64 %and149, 0, !dbg !5073
  br i1 %tobool150, label %cond.true151, label %cond.false152, !dbg !5073

cond.true151:                                     ; preds = %cond.false147
  br label %cond.end379, !dbg !5073

cond.false152:                                    ; preds = %cond.false147
  %38 = load i64, i64* %size.addr, align 8, !dbg !5073
  %sub153 = sub i64 %38, 1, !dbg !5073
  %and154 = and i64 %sub153, 17179869184, !dbg !5073
  %tobool155 = icmp ne i64 %and154, 0, !dbg !5073
  br i1 %tobool155, label %cond.true156, label %cond.false157, !dbg !5073

cond.true156:                                     ; preds = %cond.false152
  br label %cond.end377, !dbg !5073

cond.false157:                                    ; preds = %cond.false152
  %39 = load i64, i64* %size.addr, align 8, !dbg !5073
  %sub158 = sub i64 %39, 1, !dbg !5073
  %and159 = and i64 %sub158, 8589934592, !dbg !5073
  %tobool160 = icmp ne i64 %and159, 0, !dbg !5073
  br i1 %tobool160, label %cond.true161, label %cond.false162, !dbg !5073

cond.true161:                                     ; preds = %cond.false157
  br label %cond.end375, !dbg !5073

cond.false162:                                    ; preds = %cond.false157
  %40 = load i64, i64* %size.addr, align 8, !dbg !5073
  %sub163 = sub i64 %40, 1, !dbg !5073
  %and164 = and i64 %sub163, 4294967296, !dbg !5073
  %tobool165 = icmp ne i64 %and164, 0, !dbg !5073
  br i1 %tobool165, label %cond.true166, label %cond.false167, !dbg !5073

cond.true166:                                     ; preds = %cond.false162
  br label %cond.end373, !dbg !5073

cond.false167:                                    ; preds = %cond.false162
  %41 = load i64, i64* %size.addr, align 8, !dbg !5073
  %sub168 = sub i64 %41, 1, !dbg !5073
  %and169 = and i64 %sub168, 2147483648, !dbg !5073
  %tobool170 = icmp ne i64 %and169, 0, !dbg !5073
  br i1 %tobool170, label %cond.true171, label %cond.false172, !dbg !5073

cond.true171:                                     ; preds = %cond.false167
  br label %cond.end371, !dbg !5073

cond.false172:                                    ; preds = %cond.false167
  %42 = load i64, i64* %size.addr, align 8, !dbg !5073
  %sub173 = sub i64 %42, 1, !dbg !5073
  %and174 = and i64 %sub173, 1073741824, !dbg !5073
  %tobool175 = icmp ne i64 %and174, 0, !dbg !5073
  br i1 %tobool175, label %cond.true176, label %cond.false177, !dbg !5073

cond.true176:                                     ; preds = %cond.false172
  br label %cond.end369, !dbg !5073

cond.false177:                                    ; preds = %cond.false172
  %43 = load i64, i64* %size.addr, align 8, !dbg !5073
  %sub178 = sub i64 %43, 1, !dbg !5073
  %and179 = and i64 %sub178, 536870912, !dbg !5073
  %tobool180 = icmp ne i64 %and179, 0, !dbg !5073
  br i1 %tobool180, label %cond.true181, label %cond.false182, !dbg !5073

cond.true181:                                     ; preds = %cond.false177
  br label %cond.end367, !dbg !5073

cond.false182:                                    ; preds = %cond.false177
  %44 = load i64, i64* %size.addr, align 8, !dbg !5073
  %sub183 = sub i64 %44, 1, !dbg !5073
  %and184 = and i64 %sub183, 268435456, !dbg !5073
  %tobool185 = icmp ne i64 %and184, 0, !dbg !5073
  br i1 %tobool185, label %cond.true186, label %cond.false187, !dbg !5073

cond.true186:                                     ; preds = %cond.false182
  br label %cond.end365, !dbg !5073

cond.false187:                                    ; preds = %cond.false182
  %45 = load i64, i64* %size.addr, align 8, !dbg !5073
  %sub188 = sub i64 %45, 1, !dbg !5073
  %and189 = and i64 %sub188, 134217728, !dbg !5073
  %tobool190 = icmp ne i64 %and189, 0, !dbg !5073
  br i1 %tobool190, label %cond.true191, label %cond.false192, !dbg !5073

cond.true191:                                     ; preds = %cond.false187
  br label %cond.end363, !dbg !5073

cond.false192:                                    ; preds = %cond.false187
  %46 = load i64, i64* %size.addr, align 8, !dbg !5073
  %sub193 = sub i64 %46, 1, !dbg !5073
  %and194 = and i64 %sub193, 67108864, !dbg !5073
  %tobool195 = icmp ne i64 %and194, 0, !dbg !5073
  br i1 %tobool195, label %cond.true196, label %cond.false197, !dbg !5073

cond.true196:                                     ; preds = %cond.false192
  br label %cond.end361, !dbg !5073

cond.false197:                                    ; preds = %cond.false192
  %47 = load i64, i64* %size.addr, align 8, !dbg !5073
  %sub198 = sub i64 %47, 1, !dbg !5073
  %and199 = and i64 %sub198, 33554432, !dbg !5073
  %tobool200 = icmp ne i64 %and199, 0, !dbg !5073
  br i1 %tobool200, label %cond.true201, label %cond.false202, !dbg !5073

cond.true201:                                     ; preds = %cond.false197
  br label %cond.end359, !dbg !5073

cond.false202:                                    ; preds = %cond.false197
  %48 = load i64, i64* %size.addr, align 8, !dbg !5073
  %sub203 = sub i64 %48, 1, !dbg !5073
  %and204 = and i64 %sub203, 16777216, !dbg !5073
  %tobool205 = icmp ne i64 %and204, 0, !dbg !5073
  br i1 %tobool205, label %cond.true206, label %cond.false207, !dbg !5073

cond.true206:                                     ; preds = %cond.false202
  br label %cond.end357, !dbg !5073

cond.false207:                                    ; preds = %cond.false202
  %49 = load i64, i64* %size.addr, align 8, !dbg !5073
  %sub208 = sub i64 %49, 1, !dbg !5073
  %and209 = and i64 %sub208, 8388608, !dbg !5073
  %tobool210 = icmp ne i64 %and209, 0, !dbg !5073
  br i1 %tobool210, label %cond.true211, label %cond.false212, !dbg !5073

cond.true211:                                     ; preds = %cond.false207
  br label %cond.end355, !dbg !5073

cond.false212:                                    ; preds = %cond.false207
  %50 = load i64, i64* %size.addr, align 8, !dbg !5073
  %sub213 = sub i64 %50, 1, !dbg !5073
  %and214 = and i64 %sub213, 4194304, !dbg !5073
  %tobool215 = icmp ne i64 %and214, 0, !dbg !5073
  br i1 %tobool215, label %cond.true216, label %cond.false217, !dbg !5073

cond.true216:                                     ; preds = %cond.false212
  br label %cond.end353, !dbg !5073

cond.false217:                                    ; preds = %cond.false212
  %51 = load i64, i64* %size.addr, align 8, !dbg !5073
  %sub218 = sub i64 %51, 1, !dbg !5073
  %and219 = and i64 %sub218, 2097152, !dbg !5073
  %tobool220 = icmp ne i64 %and219, 0, !dbg !5073
  br i1 %tobool220, label %cond.true221, label %cond.false222, !dbg !5073

cond.true221:                                     ; preds = %cond.false217
  br label %cond.end351, !dbg !5073

cond.false222:                                    ; preds = %cond.false217
  %52 = load i64, i64* %size.addr, align 8, !dbg !5073
  %sub223 = sub i64 %52, 1, !dbg !5073
  %and224 = and i64 %sub223, 1048576, !dbg !5073
  %tobool225 = icmp ne i64 %and224, 0, !dbg !5073
  br i1 %tobool225, label %cond.true226, label %cond.false227, !dbg !5073

cond.true226:                                     ; preds = %cond.false222
  br label %cond.end349, !dbg !5073

cond.false227:                                    ; preds = %cond.false222
  %53 = load i64, i64* %size.addr, align 8, !dbg !5073
  %sub228 = sub i64 %53, 1, !dbg !5073
  %and229 = and i64 %sub228, 524288, !dbg !5073
  %tobool230 = icmp ne i64 %and229, 0, !dbg !5073
  br i1 %tobool230, label %cond.true231, label %cond.false232, !dbg !5073

cond.true231:                                     ; preds = %cond.false227
  br label %cond.end347, !dbg !5073

cond.false232:                                    ; preds = %cond.false227
  %54 = load i64, i64* %size.addr, align 8, !dbg !5073
  %sub233 = sub i64 %54, 1, !dbg !5073
  %and234 = and i64 %sub233, 262144, !dbg !5073
  %tobool235 = icmp ne i64 %and234, 0, !dbg !5073
  br i1 %tobool235, label %cond.true236, label %cond.false237, !dbg !5073

cond.true236:                                     ; preds = %cond.false232
  br label %cond.end345, !dbg !5073

cond.false237:                                    ; preds = %cond.false232
  %55 = load i64, i64* %size.addr, align 8, !dbg !5073
  %sub238 = sub i64 %55, 1, !dbg !5073
  %and239 = and i64 %sub238, 131072, !dbg !5073
  %tobool240 = icmp ne i64 %and239, 0, !dbg !5073
  br i1 %tobool240, label %cond.true241, label %cond.false242, !dbg !5073

cond.true241:                                     ; preds = %cond.false237
  br label %cond.end343, !dbg !5073

cond.false242:                                    ; preds = %cond.false237
  %56 = load i64, i64* %size.addr, align 8, !dbg !5073
  %sub243 = sub i64 %56, 1, !dbg !5073
  %and244 = and i64 %sub243, 65536, !dbg !5073
  %tobool245 = icmp ne i64 %and244, 0, !dbg !5073
  br i1 %tobool245, label %cond.true246, label %cond.false247, !dbg !5073

cond.true246:                                     ; preds = %cond.false242
  br label %cond.end341, !dbg !5073

cond.false247:                                    ; preds = %cond.false242
  %57 = load i64, i64* %size.addr, align 8, !dbg !5073
  %sub248 = sub i64 %57, 1, !dbg !5073
  %and249 = and i64 %sub248, 32768, !dbg !5073
  %tobool250 = icmp ne i64 %and249, 0, !dbg !5073
  br i1 %tobool250, label %cond.true251, label %cond.false252, !dbg !5073

cond.true251:                                     ; preds = %cond.false247
  br label %cond.end339, !dbg !5073

cond.false252:                                    ; preds = %cond.false247
  %58 = load i64, i64* %size.addr, align 8, !dbg !5073
  %sub253 = sub i64 %58, 1, !dbg !5073
  %and254 = and i64 %sub253, 16384, !dbg !5073
  %tobool255 = icmp ne i64 %and254, 0, !dbg !5073
  br i1 %tobool255, label %cond.true256, label %cond.false257, !dbg !5073

cond.true256:                                     ; preds = %cond.false252
  br label %cond.end337, !dbg !5073

cond.false257:                                    ; preds = %cond.false252
  %59 = load i64, i64* %size.addr, align 8, !dbg !5073
  %sub258 = sub i64 %59, 1, !dbg !5073
  %and259 = and i64 %sub258, 8192, !dbg !5073
  %tobool260 = icmp ne i64 %and259, 0, !dbg !5073
  br i1 %tobool260, label %cond.true261, label %cond.false262, !dbg !5073

cond.true261:                                     ; preds = %cond.false257
  br label %cond.end335, !dbg !5073

cond.false262:                                    ; preds = %cond.false257
  %60 = load i64, i64* %size.addr, align 8, !dbg !5073
  %sub263 = sub i64 %60, 1, !dbg !5073
  %and264 = and i64 %sub263, 4096, !dbg !5073
  %tobool265 = icmp ne i64 %and264, 0, !dbg !5073
  br i1 %tobool265, label %cond.true266, label %cond.false267, !dbg !5073

cond.true266:                                     ; preds = %cond.false262
  br label %cond.end333, !dbg !5073

cond.false267:                                    ; preds = %cond.false262
  %61 = load i64, i64* %size.addr, align 8, !dbg !5073
  %sub268 = sub i64 %61, 1, !dbg !5073
  %and269 = and i64 %sub268, 2048, !dbg !5073
  %tobool270 = icmp ne i64 %and269, 0, !dbg !5073
  br i1 %tobool270, label %cond.true271, label %cond.false272, !dbg !5073

cond.true271:                                     ; preds = %cond.false267
  br label %cond.end331, !dbg !5073

cond.false272:                                    ; preds = %cond.false267
  %62 = load i64, i64* %size.addr, align 8, !dbg !5073
  %sub273 = sub i64 %62, 1, !dbg !5073
  %and274 = and i64 %sub273, 1024, !dbg !5073
  %tobool275 = icmp ne i64 %and274, 0, !dbg !5073
  br i1 %tobool275, label %cond.true276, label %cond.false277, !dbg !5073

cond.true276:                                     ; preds = %cond.false272
  br label %cond.end329, !dbg !5073

cond.false277:                                    ; preds = %cond.false272
  %63 = load i64, i64* %size.addr, align 8, !dbg !5073
  %sub278 = sub i64 %63, 1, !dbg !5073
  %and279 = and i64 %sub278, 512, !dbg !5073
  %tobool280 = icmp ne i64 %and279, 0, !dbg !5073
  br i1 %tobool280, label %cond.true281, label %cond.false282, !dbg !5073

cond.true281:                                     ; preds = %cond.false277
  br label %cond.end327, !dbg !5073

cond.false282:                                    ; preds = %cond.false277
  %64 = load i64, i64* %size.addr, align 8, !dbg !5073
  %sub283 = sub i64 %64, 1, !dbg !5073
  %and284 = and i64 %sub283, 256, !dbg !5073
  %tobool285 = icmp ne i64 %and284, 0, !dbg !5073
  br i1 %tobool285, label %cond.true286, label %cond.false287, !dbg !5073

cond.true286:                                     ; preds = %cond.false282
  br label %cond.end325, !dbg !5073

cond.false287:                                    ; preds = %cond.false282
  %65 = load i64, i64* %size.addr, align 8, !dbg !5073
  %sub288 = sub i64 %65, 1, !dbg !5073
  %and289 = and i64 %sub288, 128, !dbg !5073
  %tobool290 = icmp ne i64 %and289, 0, !dbg !5073
  br i1 %tobool290, label %cond.true291, label %cond.false292, !dbg !5073

cond.true291:                                     ; preds = %cond.false287
  br label %cond.end323, !dbg !5073

cond.false292:                                    ; preds = %cond.false287
  %66 = load i64, i64* %size.addr, align 8, !dbg !5073
  %sub293 = sub i64 %66, 1, !dbg !5073
  %and294 = and i64 %sub293, 64, !dbg !5073
  %tobool295 = icmp ne i64 %and294, 0, !dbg !5073
  br i1 %tobool295, label %cond.true296, label %cond.false297, !dbg !5073

cond.true296:                                     ; preds = %cond.false292
  br label %cond.end321, !dbg !5073

cond.false297:                                    ; preds = %cond.false292
  %67 = load i64, i64* %size.addr, align 8, !dbg !5073
  %sub298 = sub i64 %67, 1, !dbg !5073
  %and299 = and i64 %sub298, 32, !dbg !5073
  %tobool300 = icmp ne i64 %and299, 0, !dbg !5073
  br i1 %tobool300, label %cond.true301, label %cond.false302, !dbg !5073

cond.true301:                                     ; preds = %cond.false297
  br label %cond.end319, !dbg !5073

cond.false302:                                    ; preds = %cond.false297
  %68 = load i64, i64* %size.addr, align 8, !dbg !5073
  %sub303 = sub i64 %68, 1, !dbg !5073
  %and304 = and i64 %sub303, 16, !dbg !5073
  %tobool305 = icmp ne i64 %and304, 0, !dbg !5073
  br i1 %tobool305, label %cond.true306, label %cond.false307, !dbg !5073

cond.true306:                                     ; preds = %cond.false302
  br label %cond.end317, !dbg !5073

cond.false307:                                    ; preds = %cond.false302
  %69 = load i64, i64* %size.addr, align 8, !dbg !5073
  %sub308 = sub i64 %69, 1, !dbg !5073
  %and309 = and i64 %sub308, 8, !dbg !5073
  %tobool310 = icmp ne i64 %and309, 0, !dbg !5073
  br i1 %tobool310, label %cond.true311, label %cond.false312, !dbg !5073

cond.true311:                                     ; preds = %cond.false307
  br label %cond.end, !dbg !5073

cond.false312:                                    ; preds = %cond.false307
  %70 = load i64, i64* %size.addr, align 8, !dbg !5073
  %sub313 = sub i64 %70, 1, !dbg !5073
  %and314 = and i64 %sub313, 4, !dbg !5073
  %tobool315 = icmp ne i64 %and314, 0, !dbg !5073
  %71 = zext i1 %tobool315 to i64, !dbg !5073
  %cond = select i1 %tobool315, i32 2, i32 1, !dbg !5073
  br label %cond.end, !dbg !5073

cond.end:                                         ; preds = %cond.false312, %cond.true311
  %cond316 = phi i32 [ 3, %cond.true311 ], [ %cond, %cond.false312 ], !dbg !5073
  br label %cond.end317, !dbg !5073

cond.end317:                                      ; preds = %cond.end, %cond.true306
  %cond318 = phi i32 [ 4, %cond.true306 ], [ %cond316, %cond.end ], !dbg !5073
  br label %cond.end319, !dbg !5073

cond.end319:                                      ; preds = %cond.end317, %cond.true301
  %cond320 = phi i32 [ 5, %cond.true301 ], [ %cond318, %cond.end317 ], !dbg !5073
  br label %cond.end321, !dbg !5073

cond.end321:                                      ; preds = %cond.end319, %cond.true296
  %cond322 = phi i32 [ 6, %cond.true296 ], [ %cond320, %cond.end319 ], !dbg !5073
  br label %cond.end323, !dbg !5073

cond.end323:                                      ; preds = %cond.end321, %cond.true291
  %cond324 = phi i32 [ 7, %cond.true291 ], [ %cond322, %cond.end321 ], !dbg !5073
  br label %cond.end325, !dbg !5073

cond.end325:                                      ; preds = %cond.end323, %cond.true286
  %cond326 = phi i32 [ 8, %cond.true286 ], [ %cond324, %cond.end323 ], !dbg !5073
  br label %cond.end327, !dbg !5073

cond.end327:                                      ; preds = %cond.end325, %cond.true281
  %cond328 = phi i32 [ 9, %cond.true281 ], [ %cond326, %cond.end325 ], !dbg !5073
  br label %cond.end329, !dbg !5073

cond.end329:                                      ; preds = %cond.end327, %cond.true276
  %cond330 = phi i32 [ 10, %cond.true276 ], [ %cond328, %cond.end327 ], !dbg !5073
  br label %cond.end331, !dbg !5073

cond.end331:                                      ; preds = %cond.end329, %cond.true271
  %cond332 = phi i32 [ 11, %cond.true271 ], [ %cond330, %cond.end329 ], !dbg !5073
  br label %cond.end333, !dbg !5073

cond.end333:                                      ; preds = %cond.end331, %cond.true266
  %cond334 = phi i32 [ 12, %cond.true266 ], [ %cond332, %cond.end331 ], !dbg !5073
  br label %cond.end335, !dbg !5073

cond.end335:                                      ; preds = %cond.end333, %cond.true261
  %cond336 = phi i32 [ 13, %cond.true261 ], [ %cond334, %cond.end333 ], !dbg !5073
  br label %cond.end337, !dbg !5073

cond.end337:                                      ; preds = %cond.end335, %cond.true256
  %cond338 = phi i32 [ 14, %cond.true256 ], [ %cond336, %cond.end335 ], !dbg !5073
  br label %cond.end339, !dbg !5073

cond.end339:                                      ; preds = %cond.end337, %cond.true251
  %cond340 = phi i32 [ 15, %cond.true251 ], [ %cond338, %cond.end337 ], !dbg !5073
  br label %cond.end341, !dbg !5073

cond.end341:                                      ; preds = %cond.end339, %cond.true246
  %cond342 = phi i32 [ 16, %cond.true246 ], [ %cond340, %cond.end339 ], !dbg !5073
  br label %cond.end343, !dbg !5073

cond.end343:                                      ; preds = %cond.end341, %cond.true241
  %cond344 = phi i32 [ 17, %cond.true241 ], [ %cond342, %cond.end341 ], !dbg !5073
  br label %cond.end345, !dbg !5073

cond.end345:                                      ; preds = %cond.end343, %cond.true236
  %cond346 = phi i32 [ 18, %cond.true236 ], [ %cond344, %cond.end343 ], !dbg !5073
  br label %cond.end347, !dbg !5073

cond.end347:                                      ; preds = %cond.end345, %cond.true231
  %cond348 = phi i32 [ 19, %cond.true231 ], [ %cond346, %cond.end345 ], !dbg !5073
  br label %cond.end349, !dbg !5073

cond.end349:                                      ; preds = %cond.end347, %cond.true226
  %cond350 = phi i32 [ 20, %cond.true226 ], [ %cond348, %cond.end347 ], !dbg !5073
  br label %cond.end351, !dbg !5073

cond.end351:                                      ; preds = %cond.end349, %cond.true221
  %cond352 = phi i32 [ 21, %cond.true221 ], [ %cond350, %cond.end349 ], !dbg !5073
  br label %cond.end353, !dbg !5073

cond.end353:                                      ; preds = %cond.end351, %cond.true216
  %cond354 = phi i32 [ 22, %cond.true216 ], [ %cond352, %cond.end351 ], !dbg !5073
  br label %cond.end355, !dbg !5073

cond.end355:                                      ; preds = %cond.end353, %cond.true211
  %cond356 = phi i32 [ 23, %cond.true211 ], [ %cond354, %cond.end353 ], !dbg !5073
  br label %cond.end357, !dbg !5073

cond.end357:                                      ; preds = %cond.end355, %cond.true206
  %cond358 = phi i32 [ 24, %cond.true206 ], [ %cond356, %cond.end355 ], !dbg !5073
  br label %cond.end359, !dbg !5073

cond.end359:                                      ; preds = %cond.end357, %cond.true201
  %cond360 = phi i32 [ 25, %cond.true201 ], [ %cond358, %cond.end357 ], !dbg !5073
  br label %cond.end361, !dbg !5073

cond.end361:                                      ; preds = %cond.end359, %cond.true196
  %cond362 = phi i32 [ 26, %cond.true196 ], [ %cond360, %cond.end359 ], !dbg !5073
  br label %cond.end363, !dbg !5073

cond.end363:                                      ; preds = %cond.end361, %cond.true191
  %cond364 = phi i32 [ 27, %cond.true191 ], [ %cond362, %cond.end361 ], !dbg !5073
  br label %cond.end365, !dbg !5073

cond.end365:                                      ; preds = %cond.end363, %cond.true186
  %cond366 = phi i32 [ 28, %cond.true186 ], [ %cond364, %cond.end363 ], !dbg !5073
  br label %cond.end367, !dbg !5073

cond.end367:                                      ; preds = %cond.end365, %cond.true181
  %cond368 = phi i32 [ 29, %cond.true181 ], [ %cond366, %cond.end365 ], !dbg !5073
  br label %cond.end369, !dbg !5073

cond.end369:                                      ; preds = %cond.end367, %cond.true176
  %cond370 = phi i32 [ 30, %cond.true176 ], [ %cond368, %cond.end367 ], !dbg !5073
  br label %cond.end371, !dbg !5073

cond.end371:                                      ; preds = %cond.end369, %cond.true171
  %cond372 = phi i32 [ 31, %cond.true171 ], [ %cond370, %cond.end369 ], !dbg !5073
  br label %cond.end373, !dbg !5073

cond.end373:                                      ; preds = %cond.end371, %cond.true166
  %cond374 = phi i32 [ 32, %cond.true166 ], [ %cond372, %cond.end371 ], !dbg !5073
  br label %cond.end375, !dbg !5073

cond.end375:                                      ; preds = %cond.end373, %cond.true161
  %cond376 = phi i32 [ 33, %cond.true161 ], [ %cond374, %cond.end373 ], !dbg !5073
  br label %cond.end377, !dbg !5073

cond.end377:                                      ; preds = %cond.end375, %cond.true156
  %cond378 = phi i32 [ 34, %cond.true156 ], [ %cond376, %cond.end375 ], !dbg !5073
  br label %cond.end379, !dbg !5073

cond.end379:                                      ; preds = %cond.end377, %cond.true151
  %cond380 = phi i32 [ 35, %cond.true151 ], [ %cond378, %cond.end377 ], !dbg !5073
  br label %cond.end381, !dbg !5073

cond.end381:                                      ; preds = %cond.end379, %cond.true146
  %cond382 = phi i32 [ 36, %cond.true146 ], [ %cond380, %cond.end379 ], !dbg !5073
  br label %cond.end383, !dbg !5073

cond.end383:                                      ; preds = %cond.end381, %cond.true141
  %cond384 = phi i32 [ 37, %cond.true141 ], [ %cond382, %cond.end381 ], !dbg !5073
  br label %cond.end385, !dbg !5073

cond.end385:                                      ; preds = %cond.end383, %cond.true136
  %cond386 = phi i32 [ 38, %cond.true136 ], [ %cond384, %cond.end383 ], !dbg !5073
  br label %cond.end387, !dbg !5073

cond.end387:                                      ; preds = %cond.end385, %cond.true131
  %cond388 = phi i32 [ 39, %cond.true131 ], [ %cond386, %cond.end385 ], !dbg !5073
  br label %cond.end389, !dbg !5073

cond.end389:                                      ; preds = %cond.end387, %cond.true126
  %cond390 = phi i32 [ 40, %cond.true126 ], [ %cond388, %cond.end387 ], !dbg !5073
  br label %cond.end391, !dbg !5073

cond.end391:                                      ; preds = %cond.end389, %cond.true121
  %cond392 = phi i32 [ 41, %cond.true121 ], [ %cond390, %cond.end389 ], !dbg !5073
  br label %cond.end393, !dbg !5073

cond.end393:                                      ; preds = %cond.end391, %cond.true116
  %cond394 = phi i32 [ 42, %cond.true116 ], [ %cond392, %cond.end391 ], !dbg !5073
  br label %cond.end395, !dbg !5073

cond.end395:                                      ; preds = %cond.end393, %cond.true111
  %cond396 = phi i32 [ 43, %cond.true111 ], [ %cond394, %cond.end393 ], !dbg !5073
  br label %cond.end397, !dbg !5073

cond.end397:                                      ; preds = %cond.end395, %cond.true106
  %cond398 = phi i32 [ 44, %cond.true106 ], [ %cond396, %cond.end395 ], !dbg !5073
  br label %cond.end399, !dbg !5073

cond.end399:                                      ; preds = %cond.end397, %cond.true101
  %cond400 = phi i32 [ 45, %cond.true101 ], [ %cond398, %cond.end397 ], !dbg !5073
  br label %cond.end401, !dbg !5073

cond.end401:                                      ; preds = %cond.end399, %cond.true96
  %cond402 = phi i32 [ 46, %cond.true96 ], [ %cond400, %cond.end399 ], !dbg !5073
  br label %cond.end403, !dbg !5073

cond.end403:                                      ; preds = %cond.end401, %cond.true91
  %cond404 = phi i32 [ 47, %cond.true91 ], [ %cond402, %cond.end401 ], !dbg !5073
  br label %cond.end405, !dbg !5073

cond.end405:                                      ; preds = %cond.end403, %cond.true86
  %cond406 = phi i32 [ 48, %cond.true86 ], [ %cond404, %cond.end403 ], !dbg !5073
  br label %cond.end407, !dbg !5073

cond.end407:                                      ; preds = %cond.end405, %cond.true81
  %cond408 = phi i32 [ 49, %cond.true81 ], [ %cond406, %cond.end405 ], !dbg !5073
  br label %cond.end409, !dbg !5073

cond.end409:                                      ; preds = %cond.end407, %cond.true76
  %cond410 = phi i32 [ 50, %cond.true76 ], [ %cond408, %cond.end407 ], !dbg !5073
  br label %cond.end411, !dbg !5073

cond.end411:                                      ; preds = %cond.end409, %cond.true71
  %cond412 = phi i32 [ 51, %cond.true71 ], [ %cond410, %cond.end409 ], !dbg !5073
  br label %cond.end413, !dbg !5073

cond.end413:                                      ; preds = %cond.end411, %cond.true66
  %cond414 = phi i32 [ 52, %cond.true66 ], [ %cond412, %cond.end411 ], !dbg !5073
  br label %cond.end415, !dbg !5073

cond.end415:                                      ; preds = %cond.end413, %cond.true61
  %cond416 = phi i32 [ 53, %cond.true61 ], [ %cond414, %cond.end413 ], !dbg !5073
  br label %cond.end417, !dbg !5073

cond.end417:                                      ; preds = %cond.end415, %cond.true56
  %cond418 = phi i32 [ 54, %cond.true56 ], [ %cond416, %cond.end415 ], !dbg !5073
  br label %cond.end419, !dbg !5073

cond.end419:                                      ; preds = %cond.end417, %cond.true51
  %cond420 = phi i32 [ 55, %cond.true51 ], [ %cond418, %cond.end417 ], !dbg !5073
  br label %cond.end421, !dbg !5073

cond.end421:                                      ; preds = %cond.end419, %cond.true46
  %cond422 = phi i32 [ 56, %cond.true46 ], [ %cond420, %cond.end419 ], !dbg !5073
  br label %cond.end423, !dbg !5073

cond.end423:                                      ; preds = %cond.end421, %cond.true41
  %cond424 = phi i32 [ 57, %cond.true41 ], [ %cond422, %cond.end421 ], !dbg !5073
  br label %cond.end425, !dbg !5073

cond.end425:                                      ; preds = %cond.end423, %cond.true36
  %cond426 = phi i32 [ 58, %cond.true36 ], [ %cond424, %cond.end423 ], !dbg !5073
  br label %cond.end427, !dbg !5073

cond.end427:                                      ; preds = %cond.end425, %cond.true31
  %cond428 = phi i32 [ 59, %cond.true31 ], [ %cond426, %cond.end425 ], !dbg !5073
  br label %cond.end429, !dbg !5073

cond.end429:                                      ; preds = %cond.end427, %cond.true26
  %cond430 = phi i32 [ 60, %cond.true26 ], [ %cond428, %cond.end427 ], !dbg !5073
  br label %cond.end431, !dbg !5073

cond.end431:                                      ; preds = %cond.end429, %cond.true21
  %cond432 = phi i32 [ 61, %cond.true21 ], [ %cond430, %cond.end429 ], !dbg !5073
  br label %cond.end433, !dbg !5073

cond.end433:                                      ; preds = %cond.end431, %cond.true16
  %cond434 = phi i32 [ 62, %cond.true16 ], [ %cond432, %cond.end431 ], !dbg !5073
  br label %cond.end435, !dbg !5073

cond.end435:                                      ; preds = %cond.end433, %cond.true11
  %cond436 = phi i32 [ 63, %cond.true11 ], [ %cond434, %cond.end433 ], !dbg !5073
  br label %cond.end437, !dbg !5073

cond.end437:                                      ; preds = %cond.end435, %cond.true8
  %cond438 = phi i32 [ 0, %cond.true8 ], [ %cond436, %cond.end435 ], !dbg !5073
  br label %cond.end440, !dbg !5073

cond.false439:                                    ; preds = %cond.true
  br label %cond.end440, !dbg !5073

cond.end440:                                      ; preds = %cond.false439, %cond.end437
  %cond441 = phi i32 [ %cond438, %cond.end437 ], [ -1, %cond.false439 ], !dbg !5073
  br label %cond.end444, !dbg !5073

cond.false442:                                    ; preds = %if.end3
  %72 = load i64, i64* %size.addr, align 8, !dbg !5073
  %sub443 = sub i64 %72, 1, !dbg !5073
  %call = call i32 @__ilog2_u64(i64 %sub443) #9, !dbg !5073
  br label %cond.end444, !dbg !5073

cond.end444:                                      ; preds = %cond.false442, %cond.end440
  %cond445 = phi i32 [ %cond441, %cond.end440 ], [ %call, %cond.false442 ], !dbg !5073
  %sub446 = sub i32 %cond445, 12, !dbg !5074
  %add = add i32 %sub446, 1, !dbg !5075
  store i32 %add, i32* %retval, align 4, !dbg !5076
  br label %return, !dbg !5076

if.end447:                                        ; preds = %entry
  %73 = load i64, i64* %size.addr, align 8, !dbg !5077
  %dec = add i64 %73, -1, !dbg !5077
  store i64 %dec, i64* %size.addr, align 8, !dbg !5077
  %74 = load i64, i64* %size.addr, align 8, !dbg !5078
  %shr = lshr i64 %74, 12, !dbg !5078
  store i64 %shr, i64* %size.addr, align 8, !dbg !5078
  %75 = load i64, i64* %size.addr, align 8, !dbg !5079
  store i64 %75, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !5056
  %76 = load i32, i32* %bitpos.i, align 4, !dbg !5080
  %77 = load i64, i64* %x.addr.i, align 8, !dbg !5081
  %78 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %77, i32 %76) #13, !dbg !5080, !srcloc !5082
  store i32 %78, i32* %bitpos.i, align 4, !dbg !5080
  %79 = load i32, i32* %bitpos.i, align 4, !dbg !5083
  %add.i = add i32 %79, 1, !dbg !5084
  store i32 %add.i, i32* %retval, align 4, !dbg !5085
  br label %return, !dbg !5085

return:                                           ; preds = %if.end447, %cond.end444, %if.then2, %if.then1
  %80 = load i32, i32* %retval, align 4, !dbg !5086
  ret i32 %80, !dbg !5086
}

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @__ilog2_u64(i64 %n) #6 !dbg !5087 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !5048, metadata !DIExpression()), !dbg !5091
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !5055, metadata !DIExpression()), !dbg !5093
  %n.addr = alloca i64, align 8
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !5094, metadata !DIExpression()), !dbg !5095
  %0 = load i64, i64* %n.addr, align 8, !dbg !5096
  store i64 %0, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !5093
  %1 = load i32, i32* %bitpos.i, align 4, !dbg !5097
  %2 = load i64, i64* %x.addr.i, align 8, !dbg !5098
  %3 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %2, i32 %1) #13, !dbg !5097, !srcloc !5082
  store i32 %3, i32* %bitpos.i, align 4, !dbg !5097
  %4 = load i32, i32* %bitpos.i, align 4, !dbg !5099
  %add.i = add i32 %4, 1, !dbg !5100
  %sub = sub i32 %add.i, 1, !dbg !5101
  ret i32 %sub, !dbg !5102
}

; Function Attrs: noredzone
declare dso_local noalias i8* @kmalloc_order(i64, i32, i32) #2

; Function Attrs: noredzone
declare dso_local noalias i8* @kmem_cache_alloc(%struct.kmem_cache*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kasan_kmalloc(%struct.kmem_cache* %s, i8* %object, i64 %size, i32 %flags) #0 !dbg !5103 {
entry:
  %s.addr = alloca %struct.kmem_cache*, align 8
  %object.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store %struct.kmem_cache* %s, %struct.kmem_cache** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr, metadata !5106, metadata !DIExpression()), !dbg !5107
  store i8* %object, i8** %object.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %object.addr, metadata !5108, metadata !DIExpression()), !dbg !5109
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !5110, metadata !DIExpression()), !dbg !5111
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !5112, metadata !DIExpression()), !dbg !5113
  %0 = load i8*, i8** %object.addr, align 8, !dbg !5114
  ret i8* %0, !dbg !5115
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kobject_name(%struct.kobject* %kobj) #0 !dbg !5116 {
entry:
  %kobj.addr = alloca %struct.kobject*, align 8
  store %struct.kobject* %kobj, %struct.kobject** %kobj.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kobject** %kobj.addr, metadata !5121, metadata !DIExpression()), !dbg !5122
  %0 = load %struct.kobject*, %struct.kobject** %kobj.addr, align 8, !dbg !5123
  %name = getelementptr inbounds %struct.kobject, %struct.kobject* %0, i32 0, i32 0, !dbg !5124
  %1 = load i8*, i8** %name, align 8, !dbg !5124
  ret i8* %1, !dbg !5125
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @sd_std_is_visible(%struct.kobject* %kobj, %struct.attribute* %attr, i32 %index) #0 !dbg !5126 {
entry:
  %retval = alloca i16, align 2
  %kobj.addr = alloca %struct.kobject*, align 8
  %attr.addr = alloca %struct.attribute*, align 8
  %index.addr = alloca i32, align 4
  %dev = alloca %struct.device*, align 8
  %card = alloca %struct.mmc_card*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.mmc_card*, align 8
  store %struct.kobject* %kobj, %struct.kobject** %kobj.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kobject** %kobj.addr, metadata !5127, metadata !DIExpression()), !dbg !5128
  store %struct.attribute* %attr, %struct.attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.attribute** %attr.addr, metadata !5129, metadata !DIExpression()), !dbg !5130
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !5131, metadata !DIExpression()), !dbg !5132
  call void @llvm.dbg.declare(metadata %struct.device** %dev, metadata !5133, metadata !DIExpression()), !dbg !5134
  %0 = load %struct.kobject*, %struct.kobject** %kobj.addr, align 8, !dbg !5135
  %call = call %struct.device* @kobj_to_dev(%struct.kobject* %0) #11, !dbg !5136
  store %struct.device* %call, %struct.device** %dev, align 8, !dbg !5134
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card, metadata !5137, metadata !DIExpression()), !dbg !5138
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !5139, metadata !DIExpression()), !dbg !5141
  %1 = load %struct.device*, %struct.device** %dev, align 8, !dbg !5141
  %2 = bitcast %struct.device* %1 to i8*, !dbg !5141
  store i8* %2, i8** %__mptr, align 8, !dbg !5141
  br label %do.body, !dbg !5141

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !5142

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !5141
  %add.ptr = getelementptr i8, i8* %3, i64 -8, !dbg !5141
  %4 = bitcast i8* %add.ptr to %struct.mmc_card*, !dbg !5141
  store %struct.mmc_card* %4, %struct.mmc_card** %tmp, align 8, !dbg !5142
  %5 = load %struct.mmc_card*, %struct.mmc_card** %tmp, align 8, !dbg !5141
  store %struct.mmc_card* %5, %struct.mmc_card** %card, align 8, !dbg !5138
  %6 = load %struct.attribute*, %struct.attribute** %attr.addr, align 8, !dbg !5144
  %cmp = icmp eq %struct.attribute* %6, getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_vendor, i32 0, i32 0), !dbg !5146
  br i1 %cmp, label %land.lhs.true, label %lor.lhs.false, !dbg !5147

lor.lhs.false:                                    ; preds = %do.end
  %7 = load %struct.attribute*, %struct.attribute** %attr.addr, align 8, !dbg !5148
  %cmp1 = icmp eq %struct.attribute* %7, getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_device, i32 0, i32 0), !dbg !5149
  br i1 %cmp1, label %land.lhs.true, label %lor.lhs.false2, !dbg !5150

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %8 = load %struct.attribute*, %struct.attribute** %attr.addr, align 8, !dbg !5151
  %cmp3 = icmp eq %struct.attribute* %8, getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_revision, i32 0, i32 0), !dbg !5152
  br i1 %cmp3, label %land.lhs.true, label %lor.lhs.false4, !dbg !5153

lor.lhs.false4:                                   ; preds = %lor.lhs.false2
  %9 = load %struct.attribute*, %struct.attribute** %attr.addr, align 8, !dbg !5154
  %cmp5 = icmp eq %struct.attribute* %9, getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_info1, i32 0, i32 0), !dbg !5155
  br i1 %cmp5, label %land.lhs.true, label %lor.lhs.false6, !dbg !5156

lor.lhs.false6:                                   ; preds = %lor.lhs.false4
  %10 = load %struct.attribute*, %struct.attribute** %attr.addr, align 8, !dbg !5157
  %cmp7 = icmp eq %struct.attribute* %10, getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_info2, i32 0, i32 0), !dbg !5158
  br i1 %cmp7, label %land.lhs.true, label %lor.lhs.false8, !dbg !5159

lor.lhs.false8:                                   ; preds = %lor.lhs.false6
  %11 = load %struct.attribute*, %struct.attribute** %attr.addr, align 8, !dbg !5160
  %cmp9 = icmp eq %struct.attribute* %11, getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_info3, i32 0, i32 0), !dbg !5161
  br i1 %cmp9, label %land.lhs.true, label %lor.lhs.false10, !dbg !5162

lor.lhs.false10:                                  ; preds = %lor.lhs.false8
  %12 = load %struct.attribute*, %struct.attribute** %attr.addr, align 8, !dbg !5163
  %cmp11 = icmp eq %struct.attribute* %12, getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_info4, i32 0, i32 0), !dbg !5164
  br i1 %cmp11, label %land.lhs.true, label %if.end, !dbg !5165

land.lhs.true:                                    ; preds = %lor.lhs.false10, %lor.lhs.false8, %lor.lhs.false6, %lor.lhs.false4, %lor.lhs.false2, %lor.lhs.false, %do.end
  %13 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !5166
  %type = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %13, i32 0, i32 4, !dbg !5167
  %14 = load i32, i32* %type, align 8, !dbg !5167
  %cmp12 = icmp ne i32 %14, 3, !dbg !5168
  br i1 %cmp12, label %if.then, label %if.end, !dbg !5169

if.then:                                          ; preds = %land.lhs.true
  store i16 0, i16* %retval, align 2, !dbg !5170
  br label %return, !dbg !5170

if.end:                                           ; preds = %land.lhs.true, %lor.lhs.false10
  %15 = load %struct.attribute*, %struct.attribute** %attr.addr, align 8, !dbg !5171
  %mode = getelementptr inbounds %struct.attribute, %struct.attribute* %15, i32 0, i32 1, !dbg !5172
  %16 = load i16, i16* %mode, align 8, !dbg !5172
  store i16 %16, i16* %retval, align 2, !dbg !5173
  br label %return, !dbg !5173

return:                                           ; preds = %if.end, %if.then
  %17 = load i16, i16* %retval, align 2, !dbg !5174
  ret i16 %17, !dbg !5174
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.device* @kobj_to_dev(%struct.kobject* %kobj) #0 !dbg !5175 {
entry:
  %kobj.addr = alloca %struct.kobject*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.device*, align 8
  store %struct.kobject* %kobj, %struct.kobject** %kobj.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kobject** %kobj.addr, metadata !5178, metadata !DIExpression()), !dbg !5179
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !5180, metadata !DIExpression()), !dbg !5182
  %0 = load %struct.kobject*, %struct.kobject** %kobj.addr, align 8, !dbg !5182
  %1 = bitcast %struct.kobject* %0 to i8*, !dbg !5182
  store i8* %1, i8** %__mptr, align 8, !dbg !5182
  br label %do.body, !dbg !5182

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !5183

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !5182
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !5182
  %3 = bitcast i8* %add.ptr to %struct.device*, !dbg !5182
  store %struct.device* %3, %struct.device** %tmp, align 8, !dbg !5183
  %4 = load %struct.device*, %struct.device** %tmp, align 8, !dbg !5182
  ret %struct.device* %4, !dbg !5185
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @mmc_vendor_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !5186 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %card = alloca %struct.mmc_card*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.mmc_card*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5187, metadata !DIExpression()), !dbg !5188
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !5189, metadata !DIExpression()), !dbg !5188
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !5190, metadata !DIExpression()), !dbg !5188
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card, metadata !5191, metadata !DIExpression()), !dbg !5188
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !5192, metadata !DIExpression()), !dbg !5194
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5194
  %1 = bitcast %struct.device* %0 to i8*, !dbg !5194
  store i8* %1, i8** %__mptr, align 8, !dbg !5194
  br label %do.body, !dbg !5194

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !5195

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !5194
  %add.ptr = getelementptr i8, i8* %2, i64 -8, !dbg !5194
  %3 = bitcast i8* %add.ptr to %struct.mmc_card*, !dbg !5194
  store %struct.mmc_card* %3, %struct.mmc_card** %tmp, align 8, !dbg !5195
  %4 = load %struct.mmc_card*, %struct.mmc_card** %tmp, align 8, !dbg !5194
  store %struct.mmc_card* %4, %struct.mmc_card** %card, align 8, !dbg !5188
  %5 = load i8*, i8** %buf.addr, align 8, !dbg !5188
  %6 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !5188
  %cis = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %6, i32 0, i32 28, !dbg !5188
  %vendor = getelementptr inbounds %struct.sdio_cis, %struct.sdio_cis* %cis, i32 0, i32 0, !dbg !5188
  %7 = load i16, i16* %vendor, align 4, !dbg !5188
  %conv = zext i16 %7 to i32, !dbg !5188
  %call = call i32 (i8*, i8*, ...) @sprintf(i8* %5, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.7, i64 0, i64 0), i32 %conv) #11, !dbg !5188
  %conv1 = sext i32 %call to i64, !dbg !5188
  ret i64 %conv1, !dbg !5188
}

; Function Attrs: noredzone
declare dso_local i32 @sprintf(i8*, i8*, ...) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @mmc_device_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !5197 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %card = alloca %struct.mmc_card*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.mmc_card*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5198, metadata !DIExpression()), !dbg !5199
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !5200, metadata !DIExpression()), !dbg !5199
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !5201, metadata !DIExpression()), !dbg !5199
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card, metadata !5202, metadata !DIExpression()), !dbg !5199
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !5203, metadata !DIExpression()), !dbg !5205
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5205
  %1 = bitcast %struct.device* %0 to i8*, !dbg !5205
  store i8* %1, i8** %__mptr, align 8, !dbg !5205
  br label %do.body, !dbg !5205

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !5206

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !5205
  %add.ptr = getelementptr i8, i8* %2, i64 -8, !dbg !5205
  %3 = bitcast i8* %add.ptr to %struct.mmc_card*, !dbg !5205
  store %struct.mmc_card* %3, %struct.mmc_card** %tmp, align 8, !dbg !5206
  %4 = load %struct.mmc_card*, %struct.mmc_card** %tmp, align 8, !dbg !5205
  store %struct.mmc_card* %4, %struct.mmc_card** %card, align 8, !dbg !5199
  %5 = load i8*, i8** %buf.addr, align 8, !dbg !5199
  %6 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !5199
  %cis = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %6, i32 0, i32 28, !dbg !5199
  %device = getelementptr inbounds %struct.sdio_cis, %struct.sdio_cis* %cis, i32 0, i32 1, !dbg !5199
  %7 = load i16, i16* %device, align 2, !dbg !5199
  %conv = zext i16 %7 to i32, !dbg !5199
  %call = call i32 (i8*, i8*, ...) @sprintf(i8* %5, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.7, i64 0, i64 0), i32 %conv) #11, !dbg !5199
  %conv1 = sext i32 %call to i64, !dbg !5199
  ret i64 %conv1, !dbg !5199
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @mmc_revision_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !5208 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %card = alloca %struct.mmc_card*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.mmc_card*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5209, metadata !DIExpression()), !dbg !5210
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !5211, metadata !DIExpression()), !dbg !5210
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !5212, metadata !DIExpression()), !dbg !5210
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card, metadata !5213, metadata !DIExpression()), !dbg !5210
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !5214, metadata !DIExpression()), !dbg !5216
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5216
  %1 = bitcast %struct.device* %0 to i8*, !dbg !5216
  store i8* %1, i8** %__mptr, align 8, !dbg !5216
  br label %do.body, !dbg !5216

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !5217

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !5216
  %add.ptr = getelementptr i8, i8* %2, i64 -8, !dbg !5216
  %3 = bitcast i8* %add.ptr to %struct.mmc_card*, !dbg !5216
  store %struct.mmc_card* %3, %struct.mmc_card** %tmp, align 8, !dbg !5217
  %4 = load %struct.mmc_card*, %struct.mmc_card** %tmp, align 8, !dbg !5216
  store %struct.mmc_card* %4, %struct.mmc_card** %card, align 8, !dbg !5210
  %5 = load i8*, i8** %buf.addr, align 8, !dbg !5210
  %6 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !5210
  %major_rev = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %6, i32 0, i32 31, !dbg !5210
  %7 = load i8, i8* %major_rev, align 8, !dbg !5210
  %conv = zext i8 %7 to i32, !dbg !5210
  %8 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !5210
  %minor_rev = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %8, i32 0, i32 32, !dbg !5210
  %9 = load i8, i8* %minor_rev, align 1, !dbg !5210
  %conv1 = zext i8 %9 to i32, !dbg !5210
  %call = call i32 (i8*, i8*, ...) @sprintf(i8* %5, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.10, i64 0, i64 0), i32 %conv, i32 %conv1) #11, !dbg !5210
  %conv2 = sext i32 %call to i64, !dbg !5210
  ret i64 %conv2, !dbg !5210
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @info1_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !5219 {
entry:
  %retval = alloca i64, align 8
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %card = alloca %struct.mmc_card*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.mmc_card*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5220, metadata !DIExpression()), !dbg !5221
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !5222, metadata !DIExpression()), !dbg !5221
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !5223, metadata !DIExpression()), !dbg !5221
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card, metadata !5224, metadata !DIExpression()), !dbg !5221
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !5225, metadata !DIExpression()), !dbg !5227
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5227
  %1 = bitcast %struct.device* %0 to i8*, !dbg !5227
  store i8* %1, i8** %__mptr, align 8, !dbg !5227
  br label %do.body, !dbg !5227

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !5228

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !5227
  %add.ptr = getelementptr i8, i8* %2, i64 -8, !dbg !5227
  %3 = bitcast i8* %add.ptr to %struct.mmc_card*, !dbg !5227
  store %struct.mmc_card* %3, %struct.mmc_card** %tmp, align 8, !dbg !5228
  %4 = load %struct.mmc_card*, %struct.mmc_card** %tmp, align 8, !dbg !5227
  store %struct.mmc_card* %4, %struct.mmc_card** %card, align 8, !dbg !5221
  %5 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !5230
  %num_info = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %5, i32 0, i32 33, !dbg !5230
  %6 = load i32, i32* %num_info, align 4, !dbg !5230
  %cmp = icmp ugt i32 1, %6, !dbg !5230
  br i1 %cmp, label %if.then, label %if.end, !dbg !5221

if.then:                                          ; preds = %do.end
  store i64 -61, i64* %retval, align 8, !dbg !5230
  br label %return, !dbg !5230

if.end:                                           ; preds = %do.end
  %7 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !5232
  %info = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %7, i32 0, i32 34, !dbg !5232
  %8 = load i8**, i8*** %info, align 8, !dbg !5232
  %arrayidx = getelementptr i8*, i8** %8, i64 0, !dbg !5232
  %9 = load i8*, i8** %arrayidx, align 8, !dbg !5232
  %arrayidx1 = getelementptr i8, i8* %9, i64 0, !dbg !5232
  %10 = load i8, i8* %arrayidx1, align 1, !dbg !5232
  %tobool = icmp ne i8 %10, 0, !dbg !5232
  br i1 %tobool, label %if.end3, label %if.then2, !dbg !5221

if.then2:                                         ; preds = %if.end
  store i64 0, i64* %retval, align 8, !dbg !5232
  br label %return, !dbg !5232

if.end3:                                          ; preds = %if.end
  %11 = load i8*, i8** %buf.addr, align 8, !dbg !5221
  %12 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !5221
  %info4 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %12, i32 0, i32 34, !dbg !5221
  %13 = load i8**, i8*** %info4, align 8, !dbg !5221
  %arrayidx5 = getelementptr i8*, i8** %13, i64 0, !dbg !5221
  %14 = load i8*, i8** %arrayidx5, align 8, !dbg !5221
  %call = call i32 (i8*, i8*, ...) @sprintf(i8* %11, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.12, i64 0, i64 0), i8* %14) #11, !dbg !5221
  %conv = sext i32 %call to i64, !dbg !5221
  store i64 %conv, i64* %retval, align 8, !dbg !5221
  br label %return, !dbg !5221

return:                                           ; preds = %if.end3, %if.then2, %if.then
  %15 = load i64, i64* %retval, align 8, !dbg !5221
  ret i64 %15, !dbg !5221
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @info2_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !5234 {
entry:
  %retval = alloca i64, align 8
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %card = alloca %struct.mmc_card*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.mmc_card*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5235, metadata !DIExpression()), !dbg !5236
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !5237, metadata !DIExpression()), !dbg !5236
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !5238, metadata !DIExpression()), !dbg !5236
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card, metadata !5239, metadata !DIExpression()), !dbg !5236
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !5240, metadata !DIExpression()), !dbg !5242
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5242
  %1 = bitcast %struct.device* %0 to i8*, !dbg !5242
  store i8* %1, i8** %__mptr, align 8, !dbg !5242
  br label %do.body, !dbg !5242

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !5243

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !5242
  %add.ptr = getelementptr i8, i8* %2, i64 -8, !dbg !5242
  %3 = bitcast i8* %add.ptr to %struct.mmc_card*, !dbg !5242
  store %struct.mmc_card* %3, %struct.mmc_card** %tmp, align 8, !dbg !5243
  %4 = load %struct.mmc_card*, %struct.mmc_card** %tmp, align 8, !dbg !5242
  store %struct.mmc_card* %4, %struct.mmc_card** %card, align 8, !dbg !5236
  %5 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !5245
  %num_info = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %5, i32 0, i32 33, !dbg !5245
  %6 = load i32, i32* %num_info, align 4, !dbg !5245
  %cmp = icmp ugt i32 2, %6, !dbg !5245
  br i1 %cmp, label %if.then, label %if.end, !dbg !5236

if.then:                                          ; preds = %do.end
  store i64 -61, i64* %retval, align 8, !dbg !5245
  br label %return, !dbg !5245

if.end:                                           ; preds = %do.end
  %7 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !5247
  %info = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %7, i32 0, i32 34, !dbg !5247
  %8 = load i8**, i8*** %info, align 8, !dbg !5247
  %arrayidx = getelementptr i8*, i8** %8, i64 1, !dbg !5247
  %9 = load i8*, i8** %arrayidx, align 8, !dbg !5247
  %arrayidx1 = getelementptr i8, i8* %9, i64 0, !dbg !5247
  %10 = load i8, i8* %arrayidx1, align 1, !dbg !5247
  %tobool = icmp ne i8 %10, 0, !dbg !5247
  br i1 %tobool, label %if.end3, label %if.then2, !dbg !5236

if.then2:                                         ; preds = %if.end
  store i64 0, i64* %retval, align 8, !dbg !5247
  br label %return, !dbg !5247

if.end3:                                          ; preds = %if.end
  %11 = load i8*, i8** %buf.addr, align 8, !dbg !5236
  %12 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !5236
  %info4 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %12, i32 0, i32 34, !dbg !5236
  %13 = load i8**, i8*** %info4, align 8, !dbg !5236
  %arrayidx5 = getelementptr i8*, i8** %13, i64 1, !dbg !5236
  %14 = load i8*, i8** %arrayidx5, align 8, !dbg !5236
  %call = call i32 (i8*, i8*, ...) @sprintf(i8* %11, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.12, i64 0, i64 0), i8* %14) #11, !dbg !5236
  %conv = sext i32 %call to i64, !dbg !5236
  store i64 %conv, i64* %retval, align 8, !dbg !5236
  br label %return, !dbg !5236

return:                                           ; preds = %if.end3, %if.then2, %if.then
  %15 = load i64, i64* %retval, align 8, !dbg !5236
  ret i64 %15, !dbg !5236
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @info3_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !5249 {
entry:
  %retval = alloca i64, align 8
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %card = alloca %struct.mmc_card*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.mmc_card*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5250, metadata !DIExpression()), !dbg !5251
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !5252, metadata !DIExpression()), !dbg !5251
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !5253, metadata !DIExpression()), !dbg !5251
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card, metadata !5254, metadata !DIExpression()), !dbg !5251
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !5255, metadata !DIExpression()), !dbg !5257
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5257
  %1 = bitcast %struct.device* %0 to i8*, !dbg !5257
  store i8* %1, i8** %__mptr, align 8, !dbg !5257
  br label %do.body, !dbg !5257

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !5258

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !5257
  %add.ptr = getelementptr i8, i8* %2, i64 -8, !dbg !5257
  %3 = bitcast i8* %add.ptr to %struct.mmc_card*, !dbg !5257
  store %struct.mmc_card* %3, %struct.mmc_card** %tmp, align 8, !dbg !5258
  %4 = load %struct.mmc_card*, %struct.mmc_card** %tmp, align 8, !dbg !5257
  store %struct.mmc_card* %4, %struct.mmc_card** %card, align 8, !dbg !5251
  %5 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !5260
  %num_info = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %5, i32 0, i32 33, !dbg !5260
  %6 = load i32, i32* %num_info, align 4, !dbg !5260
  %cmp = icmp ugt i32 3, %6, !dbg !5260
  br i1 %cmp, label %if.then, label %if.end, !dbg !5251

if.then:                                          ; preds = %do.end
  store i64 -61, i64* %retval, align 8, !dbg !5260
  br label %return, !dbg !5260

if.end:                                           ; preds = %do.end
  %7 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !5262
  %info = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %7, i32 0, i32 34, !dbg !5262
  %8 = load i8**, i8*** %info, align 8, !dbg !5262
  %arrayidx = getelementptr i8*, i8** %8, i64 2, !dbg !5262
  %9 = load i8*, i8** %arrayidx, align 8, !dbg !5262
  %arrayidx1 = getelementptr i8, i8* %9, i64 0, !dbg !5262
  %10 = load i8, i8* %arrayidx1, align 1, !dbg !5262
  %tobool = icmp ne i8 %10, 0, !dbg !5262
  br i1 %tobool, label %if.end3, label %if.then2, !dbg !5251

if.then2:                                         ; preds = %if.end
  store i64 0, i64* %retval, align 8, !dbg !5262
  br label %return, !dbg !5262

if.end3:                                          ; preds = %if.end
  %11 = load i8*, i8** %buf.addr, align 8, !dbg !5251
  %12 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !5251
  %info4 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %12, i32 0, i32 34, !dbg !5251
  %13 = load i8**, i8*** %info4, align 8, !dbg !5251
  %arrayidx5 = getelementptr i8*, i8** %13, i64 2, !dbg !5251
  %14 = load i8*, i8** %arrayidx5, align 8, !dbg !5251
  %call = call i32 (i8*, i8*, ...) @sprintf(i8* %11, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.12, i64 0, i64 0), i8* %14) #11, !dbg !5251
  %conv = sext i32 %call to i64, !dbg !5251
  store i64 %conv, i64* %retval, align 8, !dbg !5251
  br label %return, !dbg !5251

return:                                           ; preds = %if.end3, %if.then2, %if.then
  %15 = load i64, i64* %retval, align 8, !dbg !5251
  ret i64 %15, !dbg !5251
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @info4_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !5264 {
entry:
  %retval = alloca i64, align 8
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %card = alloca %struct.mmc_card*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.mmc_card*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5265, metadata !DIExpression()), !dbg !5266
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !5267, metadata !DIExpression()), !dbg !5266
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !5268, metadata !DIExpression()), !dbg !5266
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card, metadata !5269, metadata !DIExpression()), !dbg !5266
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !5270, metadata !DIExpression()), !dbg !5272
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5272
  %1 = bitcast %struct.device* %0 to i8*, !dbg !5272
  store i8* %1, i8** %__mptr, align 8, !dbg !5272
  br label %do.body, !dbg !5272

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !5273

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !5272
  %add.ptr = getelementptr i8, i8* %2, i64 -8, !dbg !5272
  %3 = bitcast i8* %add.ptr to %struct.mmc_card*, !dbg !5272
  store %struct.mmc_card* %3, %struct.mmc_card** %tmp, align 8, !dbg !5273
  %4 = load %struct.mmc_card*, %struct.mmc_card** %tmp, align 8, !dbg !5272
  store %struct.mmc_card* %4, %struct.mmc_card** %card, align 8, !dbg !5266
  %5 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !5275
  %num_info = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %5, i32 0, i32 33, !dbg !5275
  %6 = load i32, i32* %num_info, align 4, !dbg !5275
  %cmp = icmp ugt i32 4, %6, !dbg !5275
  br i1 %cmp, label %if.then, label %if.end, !dbg !5266

if.then:                                          ; preds = %do.end
  store i64 -61, i64* %retval, align 8, !dbg !5275
  br label %return, !dbg !5275

if.end:                                           ; preds = %do.end
  %7 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !5277
  %info = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %7, i32 0, i32 34, !dbg !5277
  %8 = load i8**, i8*** %info, align 8, !dbg !5277
  %arrayidx = getelementptr i8*, i8** %8, i64 3, !dbg !5277
  %9 = load i8*, i8** %arrayidx, align 8, !dbg !5277
  %arrayidx1 = getelementptr i8, i8* %9, i64 0, !dbg !5277
  %10 = load i8, i8* %arrayidx1, align 1, !dbg !5277
  %tobool = icmp ne i8 %10, 0, !dbg !5277
  br i1 %tobool, label %if.end3, label %if.then2, !dbg !5266

if.then2:                                         ; preds = %if.end
  store i64 0, i64* %retval, align 8, !dbg !5277
  br label %return, !dbg !5277

if.end3:                                          ; preds = %if.end
  %11 = load i8*, i8** %buf.addr, align 8, !dbg !5266
  %12 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !5266
  %info4 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %12, i32 0, i32 34, !dbg !5266
  %13 = load i8**, i8*** %info4, align 8, !dbg !5266
  %arrayidx5 = getelementptr i8*, i8** %13, i64 3, !dbg !5266
  %14 = load i8*, i8** %arrayidx5, align 8, !dbg !5266
  %call = call i32 (i8*, i8*, ...) @sprintf(i8* %11, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.12, i64 0, i64 0), i8* %14) #11, !dbg !5266
  %conv = sext i32 %call to i64, !dbg !5266
  store i64 %conv, i64* %retval, align 8, !dbg !5266
  br label %return, !dbg !5266

return:                                           ; preds = %if.end3, %if.then2, %if.then
  %15 = load i64, i64* %retval, align 8, !dbg !5266
  ret i64 %15, !dbg !5266
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @mmc_cid_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !5279 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %card = alloca %struct.mmc_card*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.mmc_card*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5280, metadata !DIExpression()), !dbg !5281
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !5282, metadata !DIExpression()), !dbg !5281
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !5283, metadata !DIExpression()), !dbg !5281
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card, metadata !5284, metadata !DIExpression()), !dbg !5281
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !5285, metadata !DIExpression()), !dbg !5287
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5287
  %1 = bitcast %struct.device* %0 to i8*, !dbg !5287
  store i8* %1, i8** %__mptr, align 8, !dbg !5287
  br label %do.body, !dbg !5287

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !5288

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !5287
  %add.ptr = getelementptr i8, i8* %2, i64 -8, !dbg !5287
  %3 = bitcast i8* %add.ptr to %struct.mmc_card*, !dbg !5287
  store %struct.mmc_card* %3, %struct.mmc_card** %tmp, align 8, !dbg !5288
  %4 = load %struct.mmc_card*, %struct.mmc_card** %tmp, align 8, !dbg !5287
  store %struct.mmc_card* %4, %struct.mmc_card** %card, align 8, !dbg !5281
  %5 = load i8*, i8** %buf.addr, align 8, !dbg !5281
  %6 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !5281
  %raw_cid = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %6, i32 0, i32 15, !dbg !5281
  %arrayidx = getelementptr [4 x i32], [4 x i32]* %raw_cid, i64 0, i64 0, !dbg !5281
  %7 = load i32, i32* %arrayidx, align 4, !dbg !5281
  %8 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !5281
  %raw_cid1 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %8, i32 0, i32 15, !dbg !5281
  %arrayidx2 = getelementptr [4 x i32], [4 x i32]* %raw_cid1, i64 0, i64 1, !dbg !5281
  %9 = load i32, i32* %arrayidx2, align 4, !dbg !5281
  %10 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !5281
  %raw_cid3 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %10, i32 0, i32 15, !dbg !5281
  %arrayidx4 = getelementptr [4 x i32], [4 x i32]* %raw_cid3, i64 0, i64 2, !dbg !5281
  %11 = load i32, i32* %arrayidx4, align 4, !dbg !5281
  %12 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !5281
  %raw_cid5 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %12, i32 0, i32 15, !dbg !5281
  %arrayidx6 = getelementptr [4 x i32], [4 x i32]* %raw_cid5, i64 0, i64 3, !dbg !5281
  %13 = load i32, i32* %arrayidx6, align 4, !dbg !5281
  %call = call i32 (i8*, i8*, ...) @sprintf(i8* %5, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.17, i64 0, i64 0), i32 %7, i32 %9, i32 %11, i32 %13) #11, !dbg !5281
  %conv = sext i32 %call to i64, !dbg !5281
  ret i64 %conv, !dbg !5281
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @mmc_csd_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !5290 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %card = alloca %struct.mmc_card*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.mmc_card*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5291, metadata !DIExpression()), !dbg !5292
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !5293, metadata !DIExpression()), !dbg !5292
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !5294, metadata !DIExpression()), !dbg !5292
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card, metadata !5295, metadata !DIExpression()), !dbg !5292
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !5296, metadata !DIExpression()), !dbg !5298
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5298
  %1 = bitcast %struct.device* %0 to i8*, !dbg !5298
  store i8* %1, i8** %__mptr, align 8, !dbg !5298
  br label %do.body, !dbg !5298

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !5299

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !5298
  %add.ptr = getelementptr i8, i8* %2, i64 -8, !dbg !5298
  %3 = bitcast i8* %add.ptr to %struct.mmc_card*, !dbg !5298
  store %struct.mmc_card* %3, %struct.mmc_card** %tmp, align 8, !dbg !5299
  %4 = load %struct.mmc_card*, %struct.mmc_card** %tmp, align 8, !dbg !5298
  store %struct.mmc_card* %4, %struct.mmc_card** %card, align 8, !dbg !5292
  %5 = load i8*, i8** %buf.addr, align 8, !dbg !5292
  %6 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !5292
  %raw_csd = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %6, i32 0, i32 16, !dbg !5292
  %arrayidx = getelementptr [4 x i32], [4 x i32]* %raw_csd, i64 0, i64 0, !dbg !5292
  %7 = load i32, i32* %arrayidx, align 4, !dbg !5292
  %8 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !5292
  %raw_csd1 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %8, i32 0, i32 16, !dbg !5292
  %arrayidx2 = getelementptr [4 x i32], [4 x i32]* %raw_csd1, i64 0, i64 1, !dbg !5292
  %9 = load i32, i32* %arrayidx2, align 4, !dbg !5292
  %10 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !5292
  %raw_csd3 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %10, i32 0, i32 16, !dbg !5292
  %arrayidx4 = getelementptr [4 x i32], [4 x i32]* %raw_csd3, i64 0, i64 2, !dbg !5292
  %11 = load i32, i32* %arrayidx4, align 4, !dbg !5292
  %12 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !5292
  %raw_csd5 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %12, i32 0, i32 16, !dbg !5292
  %arrayidx6 = getelementptr [4 x i32], [4 x i32]* %raw_csd5, i64 0, i64 3, !dbg !5292
  %13 = load i32, i32* %arrayidx6, align 4, !dbg !5292
  %call = call i32 (i8*, i8*, ...) @sprintf(i8* %5, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.17, i64 0, i64 0), i32 %7, i32 %9, i32 %11, i32 %13) #11, !dbg !5292
  %conv = sext i32 %call to i64, !dbg !5292
  ret i64 %conv, !dbg !5292
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @mmc_scr_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !5301 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %card = alloca %struct.mmc_card*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.mmc_card*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5302, metadata !DIExpression()), !dbg !5303
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !5304, metadata !DIExpression()), !dbg !5303
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !5305, metadata !DIExpression()), !dbg !5303
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card, metadata !5306, metadata !DIExpression()), !dbg !5303
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !5307, metadata !DIExpression()), !dbg !5309
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5309
  %1 = bitcast %struct.device* %0 to i8*, !dbg !5309
  store i8* %1, i8** %__mptr, align 8, !dbg !5309
  br label %do.body, !dbg !5309

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !5310

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !5309
  %add.ptr = getelementptr i8, i8* %2, i64 -8, !dbg !5309
  %3 = bitcast i8* %add.ptr to %struct.mmc_card*, !dbg !5309
  store %struct.mmc_card* %3, %struct.mmc_card** %tmp, align 8, !dbg !5310
  %4 = load %struct.mmc_card*, %struct.mmc_card** %tmp, align 8, !dbg !5309
  store %struct.mmc_card* %4, %struct.mmc_card** %card, align 8, !dbg !5303
  %5 = load i8*, i8** %buf.addr, align 8, !dbg !5303
  %6 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !5303
  %raw_scr = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %6, i32 0, i32 17, !dbg !5303
  %arrayidx = getelementptr [2 x i32], [2 x i32]* %raw_scr, i64 0, i64 0, !dbg !5303
  %7 = load i32, i32* %arrayidx, align 4, !dbg !5303
  %8 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !5303
  %raw_scr1 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %8, i32 0, i32 17, !dbg !5303
  %arrayidx2 = getelementptr [2 x i32], [2 x i32]* %raw_scr1, i64 0, i64 1, !dbg !5303
  %9 = load i32, i32* %arrayidx2, align 4, !dbg !5303
  %call = call i32 (i8*, i8*, ...) @sprintf(i8* %5, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.20, i64 0, i64 0), i32 %7, i32 %9) #11, !dbg !5303
  %conv = sext i32 %call to i64, !dbg !5303
  ret i64 %conv, !dbg !5303
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @mmc_ssr_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !5312 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %card = alloca %struct.mmc_card*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.mmc_card*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5313, metadata !DIExpression()), !dbg !5314
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !5315, metadata !DIExpression()), !dbg !5314
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !5316, metadata !DIExpression()), !dbg !5314
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card, metadata !5317, metadata !DIExpression()), !dbg !5314
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !5318, metadata !DIExpression()), !dbg !5320
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5320
  %1 = bitcast %struct.device* %0 to i8*, !dbg !5320
  store i8* %1, i8** %__mptr, align 8, !dbg !5320
  br label %do.body, !dbg !5320

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !5321

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !5320
  %add.ptr = getelementptr i8, i8* %2, i64 -8, !dbg !5320
  %3 = bitcast i8* %add.ptr to %struct.mmc_card*, !dbg !5320
  store %struct.mmc_card* %3, %struct.mmc_card** %tmp, align 8, !dbg !5321
  %4 = load %struct.mmc_card*, %struct.mmc_card** %tmp, align 8, !dbg !5320
  store %struct.mmc_card* %4, %struct.mmc_card** %card, align 8, !dbg !5314
  %5 = load i8*, i8** %buf.addr, align 8, !dbg !5314
  %6 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !5314
  %raw_ssr = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %6, i32 0, i32 18, !dbg !5314
  %arrayidx = getelementptr [16 x i32], [16 x i32]* %raw_ssr, i64 0, i64 0, !dbg !5314
  %7 = load i32, i32* %arrayidx, align 4, !dbg !5314
  %8 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !5314
  %raw_ssr1 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %8, i32 0, i32 18, !dbg !5314
  %arrayidx2 = getelementptr [16 x i32], [16 x i32]* %raw_ssr1, i64 0, i64 1, !dbg !5314
  %9 = load i32, i32* %arrayidx2, align 4, !dbg !5314
  %10 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !5314
  %raw_ssr3 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %10, i32 0, i32 18, !dbg !5314
  %arrayidx4 = getelementptr [16 x i32], [16 x i32]* %raw_ssr3, i64 0, i64 2, !dbg !5314
  %11 = load i32, i32* %arrayidx4, align 4, !dbg !5314
  %12 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !5314
  %raw_ssr5 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %12, i32 0, i32 18, !dbg !5314
  %arrayidx6 = getelementptr [16 x i32], [16 x i32]* %raw_ssr5, i64 0, i64 3, !dbg !5314
  %13 = load i32, i32* %arrayidx6, align 4, !dbg !5314
  %14 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !5314
  %raw_ssr7 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %14, i32 0, i32 18, !dbg !5314
  %arrayidx8 = getelementptr [16 x i32], [16 x i32]* %raw_ssr7, i64 0, i64 4, !dbg !5314
  %15 = load i32, i32* %arrayidx8, align 4, !dbg !5314
  %16 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !5314
  %raw_ssr9 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %16, i32 0, i32 18, !dbg !5314
  %arrayidx10 = getelementptr [16 x i32], [16 x i32]* %raw_ssr9, i64 0, i64 5, !dbg !5314
  %17 = load i32, i32* %arrayidx10, align 4, !dbg !5314
  %18 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !5314
  %raw_ssr11 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %18, i32 0, i32 18, !dbg !5314
  %arrayidx12 = getelementptr [16 x i32], [16 x i32]* %raw_ssr11, i64 0, i64 6, !dbg !5314
  %19 = load i32, i32* %arrayidx12, align 4, !dbg !5314
  %20 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !5314
  %raw_ssr13 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %20, i32 0, i32 18, !dbg !5314
  %arrayidx14 = getelementptr [16 x i32], [16 x i32]* %raw_ssr13, i64 0, i64 7, !dbg !5314
  %21 = load i32, i32* %arrayidx14, align 4, !dbg !5314
  %22 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !5314
  %raw_ssr15 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %22, i32 0, i32 18, !dbg !5314
  %arrayidx16 = getelementptr [16 x i32], [16 x i32]* %raw_ssr15, i64 0, i64 8, !dbg !5314
  %23 = load i32, i32* %arrayidx16, align 4, !dbg !5314
  %24 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !5314
  %raw_ssr17 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %24, i32 0, i32 18, !dbg !5314
  %arrayidx18 = getelementptr [16 x i32], [16 x i32]* %raw_ssr17, i64 0, i64 9, !dbg !5314
  %25 = load i32, i32* %arrayidx18, align 4, !dbg !5314
  %26 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !5314
  %raw_ssr19 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %26, i32 0, i32 18, !dbg !5314
  %arrayidx20 = getelementptr [16 x i32], [16 x i32]* %raw_ssr19, i64 0, i64 10, !dbg !5314
  %27 = load i32, i32* %arrayidx20, align 4, !dbg !5314
  %28 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !5314
  %raw_ssr21 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %28, i32 0, i32 18, !dbg !5314
  %arrayidx22 = getelementptr [16 x i32], [16 x i32]* %raw_ssr21, i64 0, i64 11, !dbg !5314
  %29 = load i32, i32* %arrayidx22, align 4, !dbg !5314
  %30 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !5314
  %raw_ssr23 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %30, i32 0, i32 18, !dbg !5314
  %arrayidx24 = getelementptr [16 x i32], [16 x i32]* %raw_ssr23, i64 0, i64 12, !dbg !5314
  %31 = load i32, i32* %arrayidx24, align 4, !dbg !5314
  %32 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !5314
  %raw_ssr25 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %32, i32 0, i32 18, !dbg !5314
  %arrayidx26 = getelementptr [16 x i32], [16 x i32]* %raw_ssr25, i64 0, i64 13, !dbg !5314
  %33 = load i32, i32* %arrayidx26, align 4, !dbg !5314
  %34 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !5314
  %raw_ssr27 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %34, i32 0, i32 18, !dbg !5314
  %arrayidx28 = getelementptr [16 x i32], [16 x i32]* %raw_ssr27, i64 0, i64 14, !dbg !5314
  %35 = load i32, i32* %arrayidx28, align 4, !dbg !5314
  %36 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !5314
  %raw_ssr29 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %36, i32 0, i32 18, !dbg !5314
  %arrayidx30 = getelementptr [16 x i32], [16 x i32]* %raw_ssr29, i64 0, i64 15, !dbg !5314
  %37 = load i32, i32* %arrayidx30, align 4, !dbg !5314
  %call = call i32 (i8*, i8*, ...) @sprintf(i8* %5, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.22, i64 0, i64 0), i32 %7, i32 %9, i32 %11, i32 %13, i32 %15, i32 %17, i32 %19, i32 %21, i32 %23, i32 %25, i32 %27, i32 %29, i32 %31, i32 %33, i32 %35, i32 %37) #11, !dbg !5314
  %conv = sext i32 %call to i64, !dbg !5314
  ret i64 %conv, !dbg !5314
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @mmc_date_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !5323 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %card = alloca %struct.mmc_card*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.mmc_card*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5324, metadata !DIExpression()), !dbg !5325
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !5326, metadata !DIExpression()), !dbg !5325
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !5327, metadata !DIExpression()), !dbg !5325
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card, metadata !5328, metadata !DIExpression()), !dbg !5325
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !5329, metadata !DIExpression()), !dbg !5331
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5331
  %1 = bitcast %struct.device* %0 to i8*, !dbg !5331
  store i8* %1, i8** %__mptr, align 8, !dbg !5331
  br label %do.body, !dbg !5331

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !5332

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !5331
  %add.ptr = getelementptr i8, i8* %2, i64 -8, !dbg !5331
  %3 = bitcast i8* %add.ptr to %struct.mmc_card*, !dbg !5331
  store %struct.mmc_card* %3, %struct.mmc_card** %tmp, align 8, !dbg !5332
  %4 = load %struct.mmc_card*, %struct.mmc_card** %tmp, align 8, !dbg !5331
  store %struct.mmc_card* %4, %struct.mmc_card** %card, align 8, !dbg !5325
  %5 = load i8*, i8** %buf.addr, align 8, !dbg !5325
  %6 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !5325
  %cid = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %6, i32 0, i32 19, !dbg !5325
  %month = getelementptr inbounds %struct.mmc_cid, %struct.mmc_cid* %cid, i32 0, i32 8, !dbg !5325
  %7 = load i8, i8* %month, align 2, !dbg !5325
  %conv = zext i8 %7 to i32, !dbg !5325
  %8 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !5325
  %cid1 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %8, i32 0, i32 19, !dbg !5325
  %year = getelementptr inbounds %struct.mmc_cid, %struct.mmc_cid* %cid1, i32 0, i32 5, !dbg !5325
  %9 = load i16, i16* %year, align 2, !dbg !5325
  %conv2 = zext i16 %9 to i32, !dbg !5325
  %call = call i32 (i8*, i8*, ...) @sprintf(i8* %5, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.24, i64 0, i64 0), i32 %conv, i32 %conv2) #11, !dbg !5325
  %conv3 = sext i32 %call to i64, !dbg !5325
  ret i64 %conv3, !dbg !5325
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @mmc_erase_size_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !5334 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %card = alloca %struct.mmc_card*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.mmc_card*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5335, metadata !DIExpression()), !dbg !5336
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !5337, metadata !DIExpression()), !dbg !5336
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !5338, metadata !DIExpression()), !dbg !5336
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card, metadata !5339, metadata !DIExpression()), !dbg !5336
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !5340, metadata !DIExpression()), !dbg !5342
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5342
  %1 = bitcast %struct.device* %0 to i8*, !dbg !5342
  store i8* %1, i8** %__mptr, align 8, !dbg !5342
  br label %do.body, !dbg !5342

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !5343

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !5342
  %add.ptr = getelementptr i8, i8* %2, i64 -8, !dbg !5342
  %3 = bitcast i8* %add.ptr to %struct.mmc_card*, !dbg !5342
  store %struct.mmc_card* %3, %struct.mmc_card** %tmp, align 8, !dbg !5343
  %4 = load %struct.mmc_card*, %struct.mmc_card** %tmp, align 8, !dbg !5342
  store %struct.mmc_card* %4, %struct.mmc_card** %card, align 8, !dbg !5336
  %5 = load i8*, i8** %buf.addr, align 8, !dbg !5336
  %6 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !5336
  %erase_size = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %6, i32 0, i32 9, !dbg !5336
  %7 = load i32, i32* %erase_size, align 4, !dbg !5336
  %shl = shl i32 %7, 9, !dbg !5336
  %call = call i32 (i8*, i8*, ...) @sprintf(i8* %5, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.26, i64 0, i64 0), i32 %shl) #11, !dbg !5336
  %conv = sext i32 %call to i64, !dbg !5336
  ret i64 %conv, !dbg !5336
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @mmc_preferred_erase_size_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !5345 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %card = alloca %struct.mmc_card*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.mmc_card*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5346, metadata !DIExpression()), !dbg !5347
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !5348, metadata !DIExpression()), !dbg !5347
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !5349, metadata !DIExpression()), !dbg !5347
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card, metadata !5350, metadata !DIExpression()), !dbg !5347
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !5351, metadata !DIExpression()), !dbg !5353
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5353
  %1 = bitcast %struct.device* %0 to i8*, !dbg !5353
  store i8* %1, i8** %__mptr, align 8, !dbg !5353
  br label %do.body, !dbg !5353

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !5354

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !5353
  %add.ptr = getelementptr i8, i8* %2, i64 -8, !dbg !5353
  %3 = bitcast i8* %add.ptr to %struct.mmc_card*, !dbg !5353
  store %struct.mmc_card* %3, %struct.mmc_card** %tmp, align 8, !dbg !5354
  %4 = load %struct.mmc_card*, %struct.mmc_card** %tmp, align 8, !dbg !5353
  store %struct.mmc_card* %4, %struct.mmc_card** %card, align 8, !dbg !5347
  %5 = load i8*, i8** %buf.addr, align 8, !dbg !5347
  %6 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !5347
  %pref_erase = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %6, i32 0, i32 11, !dbg !5347
  %7 = load i32, i32* %pref_erase, align 4, !dbg !5347
  %shl = shl i32 %7, 9, !dbg !5347
  %call = call i32 (i8*, i8*, ...) @sprintf(i8* %5, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.26, i64 0, i64 0), i32 %shl) #11, !dbg !5347
  %conv = sext i32 %call to i64, !dbg !5347
  ret i64 %conv, !dbg !5347
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @mmc_fwrev_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !5356 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %card = alloca %struct.mmc_card*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.mmc_card*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5357, metadata !DIExpression()), !dbg !5358
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !5359, metadata !DIExpression()), !dbg !5358
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !5360, metadata !DIExpression()), !dbg !5358
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card, metadata !5361, metadata !DIExpression()), !dbg !5358
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !5362, metadata !DIExpression()), !dbg !5364
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5364
  %1 = bitcast %struct.device* %0 to i8*, !dbg !5364
  store i8* %1, i8** %__mptr, align 8, !dbg !5364
  br label %do.body, !dbg !5364

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !5365

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !5364
  %add.ptr = getelementptr i8, i8* %2, i64 -8, !dbg !5364
  %3 = bitcast i8* %add.ptr to %struct.mmc_card*, !dbg !5364
  store %struct.mmc_card* %3, %struct.mmc_card** %tmp, align 8, !dbg !5365
  %4 = load %struct.mmc_card*, %struct.mmc_card** %tmp, align 8, !dbg !5364
  store %struct.mmc_card* %4, %struct.mmc_card** %card, align 8, !dbg !5358
  %5 = load i8*, i8** %buf.addr, align 8, !dbg !5358
  %6 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !5358
  %cid = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %6, i32 0, i32 19, !dbg !5358
  %fwrev = getelementptr inbounds %struct.mmc_cid, %struct.mmc_cid* %cid, i32 0, i32 7, !dbg !5358
  %7 = load i8, i8* %fwrev, align 1, !dbg !5358
  %conv = zext i8 %7 to i32, !dbg !5358
  %call = call i32 (i8*, i8*, ...) @sprintf(i8* %5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.29, i64 0, i64 0), i32 %conv) #11, !dbg !5358
  %conv1 = sext i32 %call to i64, !dbg !5358
  ret i64 %conv1, !dbg !5358
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @mmc_hwrev_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !5367 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %card = alloca %struct.mmc_card*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.mmc_card*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5368, metadata !DIExpression()), !dbg !5369
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !5370, metadata !DIExpression()), !dbg !5369
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !5371, metadata !DIExpression()), !dbg !5369
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card, metadata !5372, metadata !DIExpression()), !dbg !5369
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !5373, metadata !DIExpression()), !dbg !5375
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5375
  %1 = bitcast %struct.device* %0 to i8*, !dbg !5375
  store i8* %1, i8** %__mptr, align 8, !dbg !5375
  br label %do.body, !dbg !5375

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !5376

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !5375
  %add.ptr = getelementptr i8, i8* %2, i64 -8, !dbg !5375
  %3 = bitcast i8* %add.ptr to %struct.mmc_card*, !dbg !5375
  store %struct.mmc_card* %3, %struct.mmc_card** %tmp, align 8, !dbg !5376
  %4 = load %struct.mmc_card*, %struct.mmc_card** %tmp, align 8, !dbg !5375
  store %struct.mmc_card* %4, %struct.mmc_card** %card, align 8, !dbg !5369
  %5 = load i8*, i8** %buf.addr, align 8, !dbg !5369
  %6 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !5369
  %cid = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %6, i32 0, i32 19, !dbg !5369
  %hwrev = getelementptr inbounds %struct.mmc_cid, %struct.mmc_cid* %cid, i32 0, i32 6, !dbg !5369
  %7 = load i8, i8* %hwrev, align 4, !dbg !5369
  %conv = zext i8 %7 to i32, !dbg !5369
  %call = call i32 (i8*, i8*, ...) @sprintf(i8* %5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.29, i64 0, i64 0), i32 %conv) #11, !dbg !5369
  %conv1 = sext i32 %call to i64, !dbg !5369
  ret i64 %conv1, !dbg !5369
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @mmc_manfid_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !5378 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %card = alloca %struct.mmc_card*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.mmc_card*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5379, metadata !DIExpression()), !dbg !5380
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !5381, metadata !DIExpression()), !dbg !5380
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !5382, metadata !DIExpression()), !dbg !5380
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card, metadata !5383, metadata !DIExpression()), !dbg !5380
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !5384, metadata !DIExpression()), !dbg !5386
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5386
  %1 = bitcast %struct.device* %0 to i8*, !dbg !5386
  store i8* %1, i8** %__mptr, align 8, !dbg !5386
  br label %do.body, !dbg !5386

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !5387

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !5386
  %add.ptr = getelementptr i8, i8* %2, i64 -8, !dbg !5386
  %3 = bitcast i8* %add.ptr to %struct.mmc_card*, !dbg !5386
  store %struct.mmc_card* %3, %struct.mmc_card** %tmp, align 8, !dbg !5387
  %4 = load %struct.mmc_card*, %struct.mmc_card** %tmp, align 8, !dbg !5386
  store %struct.mmc_card* %4, %struct.mmc_card** %card, align 8, !dbg !5380
  %5 = load i8*, i8** %buf.addr, align 8, !dbg !5380
  %6 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !5380
  %cid = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %6, i32 0, i32 19, !dbg !5380
  %manfid = getelementptr inbounds %struct.mmc_cid, %struct.mmc_cid* %cid, i32 0, i32 0, !dbg !5380
  %7 = load i32, i32* %manfid, align 4, !dbg !5380
  %call = call i32 (i8*, i8*, ...) @sprintf(i8* %5, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.32, i64 0, i64 0), i32 %7) #11, !dbg !5380
  %conv = sext i32 %call to i64, !dbg !5380
  ret i64 %conv, !dbg !5380
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @mmc_name_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !5389 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %card = alloca %struct.mmc_card*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.mmc_card*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5390, metadata !DIExpression()), !dbg !5391
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !5392, metadata !DIExpression()), !dbg !5391
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !5393, metadata !DIExpression()), !dbg !5391
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card, metadata !5394, metadata !DIExpression()), !dbg !5391
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !5395, metadata !DIExpression()), !dbg !5397
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5397
  %1 = bitcast %struct.device* %0 to i8*, !dbg !5397
  store i8* %1, i8** %__mptr, align 8, !dbg !5397
  br label %do.body, !dbg !5397

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !5398

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !5397
  %add.ptr = getelementptr i8, i8* %2, i64 -8, !dbg !5397
  %3 = bitcast i8* %add.ptr to %struct.mmc_card*, !dbg !5397
  store %struct.mmc_card* %3, %struct.mmc_card** %tmp, align 8, !dbg !5398
  %4 = load %struct.mmc_card*, %struct.mmc_card** %tmp, align 8, !dbg !5397
  store %struct.mmc_card* %4, %struct.mmc_card** %card, align 8, !dbg !5391
  %5 = load i8*, i8** %buf.addr, align 8, !dbg !5391
  %6 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !5391
  %cid = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %6, i32 0, i32 19, !dbg !5391
  %prod_name = getelementptr inbounds %struct.mmc_cid, %struct.mmc_cid* %cid, i32 0, i32 1, !dbg !5391
  %arraydecay = getelementptr inbounds [8 x i8], [8 x i8]* %prod_name, i64 0, i64 0, !dbg !5391
  %call = call i32 (i8*, i8*, ...) @sprintf(i8* %5, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.12, i64 0, i64 0), i8* %arraydecay) #11, !dbg !5391
  %conv = sext i32 %call to i64, !dbg !5391
  ret i64 %conv, !dbg !5391
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @mmc_oemid_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !5400 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %card = alloca %struct.mmc_card*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.mmc_card*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5401, metadata !DIExpression()), !dbg !5402
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !5403, metadata !DIExpression()), !dbg !5402
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !5404, metadata !DIExpression()), !dbg !5402
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card, metadata !5405, metadata !DIExpression()), !dbg !5402
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !5406, metadata !DIExpression()), !dbg !5408
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5408
  %1 = bitcast %struct.device* %0 to i8*, !dbg !5408
  store i8* %1, i8** %__mptr, align 8, !dbg !5408
  br label %do.body, !dbg !5408

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !5409

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !5408
  %add.ptr = getelementptr i8, i8* %2, i64 -8, !dbg !5408
  %3 = bitcast i8* %add.ptr to %struct.mmc_card*, !dbg !5408
  store %struct.mmc_card* %3, %struct.mmc_card** %tmp, align 8, !dbg !5409
  %4 = load %struct.mmc_card*, %struct.mmc_card** %tmp, align 8, !dbg !5408
  store %struct.mmc_card* %4, %struct.mmc_card** %card, align 8, !dbg !5402
  %5 = load i8*, i8** %buf.addr, align 8, !dbg !5402
  %6 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !5402
  %cid = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %6, i32 0, i32 19, !dbg !5402
  %oemid = getelementptr inbounds %struct.mmc_cid, %struct.mmc_cid* %cid, i32 0, i32 4, !dbg !5402
  %7 = load i16, i16* %oemid, align 4, !dbg !5402
  %conv = zext i16 %7 to i32, !dbg !5402
  %call = call i32 (i8*, i8*, ...) @sprintf(i8* %5, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.7, i64 0, i64 0), i32 %conv) #11, !dbg !5402
  %conv1 = sext i32 %call to i64, !dbg !5402
  ret i64 %conv1, !dbg !5402
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @mmc_serial_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !5411 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %card = alloca %struct.mmc_card*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.mmc_card*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5412, metadata !DIExpression()), !dbg !5413
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !5414, metadata !DIExpression()), !dbg !5413
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !5415, metadata !DIExpression()), !dbg !5413
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card, metadata !5416, metadata !DIExpression()), !dbg !5413
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !5417, metadata !DIExpression()), !dbg !5419
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5419
  %1 = bitcast %struct.device* %0 to i8*, !dbg !5419
  store i8* %1, i8** %__mptr, align 8, !dbg !5419
  br label %do.body, !dbg !5419

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !5420

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !5419
  %add.ptr = getelementptr i8, i8* %2, i64 -8, !dbg !5419
  %3 = bitcast i8* %add.ptr to %struct.mmc_card*, !dbg !5419
  store %struct.mmc_card* %3, %struct.mmc_card** %tmp, align 8, !dbg !5420
  %4 = load %struct.mmc_card*, %struct.mmc_card** %tmp, align 8, !dbg !5419
  store %struct.mmc_card* %4, %struct.mmc_card** %card, align 8, !dbg !5413
  %5 = load i8*, i8** %buf.addr, align 8, !dbg !5413
  %6 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !5413
  %cid = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %6, i32 0, i32 19, !dbg !5413
  %serial = getelementptr inbounds %struct.mmc_cid, %struct.mmc_cid* %cid, i32 0, i32 3, !dbg !5413
  %7 = load i32, i32* %serial, align 4, !dbg !5413
  %call = call i32 (i8*, i8*, ...) @sprintf(i8* %5, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.36, i64 0, i64 0), i32 %7) #11, !dbg !5413
  %conv = sext i32 %call to i64, !dbg !5413
  ret i64 %conv, !dbg !5413
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @mmc_ocr_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !5422 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %card = alloca %struct.mmc_card*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.mmc_card*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5423, metadata !DIExpression()), !dbg !5424
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !5425, metadata !DIExpression()), !dbg !5424
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !5426, metadata !DIExpression()), !dbg !5424
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card, metadata !5427, metadata !DIExpression()), !dbg !5424
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !5428, metadata !DIExpression()), !dbg !5430
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5430
  %1 = bitcast %struct.device* %0 to i8*, !dbg !5430
  store i8* %1, i8** %__mptr, align 8, !dbg !5430
  br label %do.body, !dbg !5430

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !5431

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !5430
  %add.ptr = getelementptr i8, i8* %2, i64 -8, !dbg !5430
  %3 = bitcast i8* %add.ptr to %struct.mmc_card*, !dbg !5430
  store %struct.mmc_card* %3, %struct.mmc_card** %tmp, align 8, !dbg !5431
  %4 = load %struct.mmc_card*, %struct.mmc_card** %tmp, align 8, !dbg !5430
  store %struct.mmc_card* %4, %struct.mmc_card** %card, align 8, !dbg !5424
  %5 = load i8*, i8** %buf.addr, align 8, !dbg !5424
  %6 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !5424
  %ocr = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %6, i32 0, i32 2, !dbg !5424
  %7 = load i32, i32* %ocr, align 8, !dbg !5424
  %call = call i32 (i8*, i8*, ...) @sprintf(i8* %5, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.36, i64 0, i64 0), i32 %7) #11, !dbg !5424
  %conv = sext i32 %call to i64, !dbg !5424
  ret i64 %conv, !dbg !5424
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @mmc_rca_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !5433 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %card = alloca %struct.mmc_card*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.mmc_card*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5434, metadata !DIExpression()), !dbg !5435
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !5436, metadata !DIExpression()), !dbg !5435
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !5437, metadata !DIExpression()), !dbg !5435
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card, metadata !5438, metadata !DIExpression()), !dbg !5435
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !5439, metadata !DIExpression()), !dbg !5441
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5441
  %1 = bitcast %struct.device* %0 to i8*, !dbg !5441
  store i8* %1, i8** %__mptr, align 8, !dbg !5441
  br label %do.body, !dbg !5441

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !5442

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !5441
  %add.ptr = getelementptr i8, i8* %2, i64 -8, !dbg !5441
  %3 = bitcast i8* %add.ptr to %struct.mmc_card*, !dbg !5441
  store %struct.mmc_card* %3, %struct.mmc_card** %tmp, align 8, !dbg !5442
  %4 = load %struct.mmc_card*, %struct.mmc_card** %tmp, align 8, !dbg !5441
  store %struct.mmc_card* %4, %struct.mmc_card** %card, align 8, !dbg !5435
  %5 = load i8*, i8** %buf.addr, align 8, !dbg !5435
  %6 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !5435
  %rca = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %6, i32 0, i32 3, !dbg !5435
  %7 = load i32, i32* %rca, align 4, !dbg !5435
  %call = call i32 (i8*, i8*, ...) @sprintf(i8* %5, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.7, i64 0, i64 0), i32 %7) #11, !dbg !5435
  %conv = sext i32 %call to i64, !dbg !5435
  ret i64 %conv, !dbg !5435
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @mmc_dsr_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !5444 {
entry:
  %retval = alloca i64, align 8
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %card = alloca %struct.mmc_card*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.mmc_card*, align 8
  %host = alloca %struct.mmc_host*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5445, metadata !DIExpression()), !dbg !5446
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !5447, metadata !DIExpression()), !dbg !5448
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !5449, metadata !DIExpression()), !dbg !5450
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card, metadata !5451, metadata !DIExpression()), !dbg !5452
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !5453, metadata !DIExpression()), !dbg !5455
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5455
  %1 = bitcast %struct.device* %0 to i8*, !dbg !5455
  store i8* %1, i8** %__mptr, align 8, !dbg !5455
  br label %do.body, !dbg !5455

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !5456

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !5455
  %add.ptr = getelementptr i8, i8* %2, i64 -8, !dbg !5455
  %3 = bitcast i8* %add.ptr to %struct.mmc_card*, !dbg !5455
  store %struct.mmc_card* %3, %struct.mmc_card** %tmp, align 8, !dbg !5456
  %4 = load %struct.mmc_card*, %struct.mmc_card** %tmp, align 8, !dbg !5455
  store %struct.mmc_card* %4, %struct.mmc_card** %card, align 8, !dbg !5452
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %host, metadata !5458, metadata !DIExpression()), !dbg !5459
  %5 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !5460
  %host1 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %5, i32 0, i32 0, !dbg !5461
  %6 = load %struct.mmc_host*, %struct.mmc_host** %host1, align 8, !dbg !5461
  store %struct.mmc_host* %6, %struct.mmc_host** %host, align 8, !dbg !5459
  %7 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !5462
  %csd = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %7, i32 0, i32 20, !dbg !5464
  %dsr_imp = getelementptr inbounds %struct.mmc_csd, %struct.mmc_csd* %csd, i32 0, i32 12, !dbg !5465
  %bf.load = load i8, i8* %dsr_imp, align 8, !dbg !5465
  %bf.lshr = lshr i8 %bf.load, 4, !dbg !5465
  %bf.clear = and i8 %bf.lshr, 1, !dbg !5465
  %bf.cast = zext i8 %bf.clear to i32, !dbg !5465
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !5462
  br i1 %tobool, label %land.lhs.true, label %if.else, !dbg !5466

land.lhs.true:                                    ; preds = %do.end
  %8 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !5467
  %dsr_req = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %8, i32 0, i32 60, !dbg !5468
  %9 = load i32, i32* %dsr_req, align 8, !dbg !5468
  %tobool2 = icmp ne i32 %9, 0, !dbg !5467
  br i1 %tobool2, label %if.then, label %if.else, !dbg !5469

if.then:                                          ; preds = %land.lhs.true
  %10 = load i8*, i8** %buf.addr, align 8, !dbg !5470
  %11 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !5471
  %dsr = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %11, i32 0, i32 61, !dbg !5472
  %12 = load i32, i32* %dsr, align 4, !dbg !5472
  %call = call i32 (i8*, i8*, ...) @sprintf(i8* %10, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.29, i64 0, i64 0), i32 %12) #11, !dbg !5473
  %conv = sext i32 %call to i64, !dbg !5473
  store i64 %conv, i64* %retval, align 8, !dbg !5474
  br label %return, !dbg !5474

if.else:                                          ; preds = %land.lhs.true, %do.end
  %13 = load i8*, i8** %buf.addr, align 8, !dbg !5475
  %call3 = call i32 (i8*, i8*, ...) @sprintf(i8* %13, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.29, i64 0, i64 0), i32 1028) #11, !dbg !5476
  %conv4 = sext i32 %call3 to i64, !dbg !5476
  store i64 %conv4, i64* %retval, align 8, !dbg !5477
  br label %return, !dbg !5477

return:                                           ; preds = %if.else, %if.then
  %14 = load i64, i64* %retval, align 8, !dbg !5478
  ret i64 %14, !dbg !5478
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #7

; Function Attrs: noredzone
declare dso_local i32 @mmc_app_sd_status(%struct.mmc_card*, i8*) #2

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i32(i32) #4

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @__fswab32(i32 %val) #6 !dbg !5479 {
entry:
  %val.addr = alloca i32, align 4
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !5483, metadata !DIExpression()), !dbg !5484
  %0 = load i32, i32* %val.addr, align 4, !dbg !5485
  %call = call i32 @__arch_swab32(i32 %0) #9, !dbg !5486
  ret i32 %call, !dbg !5487
}

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @__arch_swab32(i32 %val) #6 !dbg !5488 {
entry:
  %val.addr = alloca i32, align 4
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !5490, metadata !DIExpression()), !dbg !5491
  %0 = load i32, i32* %val.addr, align 4, !dbg !5492
  %1 = call i32 asm "bswapl $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %0) #14, !dbg !5493, !srcloc !5494
  store i32 %1, i32* %val.addr, align 4, !dbg !5493
  %2 = load i32, i32* %val.addr, align 4, !dbg !5495
  ret i32 %2, !dbg !5496
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mmc_sd_remove(%struct.mmc_host* %host) #0 !dbg !5497 {
entry:
  %host.addr = alloca %struct.mmc_host*, align 8
  store %struct.mmc_host* %host, %struct.mmc_host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %host.addr, metadata !5498, metadata !DIExpression()), !dbg !5499
  %0 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !5500
  %card = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %0, i32 0, i32 38, !dbg !5501
  %1 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !5501
  call void @mmc_remove_card(%struct.mmc_card* %1) #11, !dbg !5502
  %2 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !5503
  %card1 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %2, i32 0, i32 38, !dbg !5504
  store %struct.mmc_card* null, %struct.mmc_card** %card1, align 8, !dbg !5505
  ret void, !dbg !5506
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mmc_sd_detect(%struct.mmc_host* %host) #0 !dbg !5507 {
entry:
  %host.addr = alloca %struct.mmc_host*, align 8
  %err = alloca i32, align 4
  store %struct.mmc_host* %host, %struct.mmc_host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %host.addr, metadata !5508, metadata !DIExpression()), !dbg !5509
  call void @llvm.dbg.declare(metadata i32* %err, metadata !5510, metadata !DIExpression()), !dbg !5511
  %0 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !5512
  %card = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %0, i32 0, i32 38, !dbg !5513
  %1 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !5513
  call void @mmc_get_card(%struct.mmc_card* %1, %struct.mmc_ctx* null) #11, !dbg !5514
  %2 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !5515
  %call = call i32 @_mmc_detect_card_removed(%struct.mmc_host* %2) #11, !dbg !5516
  store i32 %call, i32* %err, align 4, !dbg !5517
  %3 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !5518
  %card1 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %3, i32 0, i32 38, !dbg !5519
  %4 = load %struct.mmc_card*, %struct.mmc_card** %card1, align 8, !dbg !5519
  call void @mmc_put_card(%struct.mmc_card* %4, %struct.mmc_ctx* null) #11, !dbg !5520
  %5 = load i32, i32* %err, align 4, !dbg !5521
  %tobool = icmp ne i32 %5, 0, !dbg !5521
  br i1 %tobool, label %if.then, label %if.end, !dbg !5523

if.then:                                          ; preds = %entry
  %6 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !5524
  call void @mmc_sd_remove(%struct.mmc_host* %6) #11, !dbg !5526
  %7 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !5527
  call void @mmc_claim_host(%struct.mmc_host* %7) #11, !dbg !5528
  %8 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !5529
  call void @mmc_detach_bus(%struct.mmc_host* %8) #11, !dbg !5530
  %9 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !5531
  call void @mmc_power_off(%struct.mmc_host* %9) #11, !dbg !5532
  %10 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !5533
  call void @mmc_release_host(%struct.mmc_host* %10) #11, !dbg !5534
  br label %if.end, !dbg !5535

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !5536
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mmc_sd_suspend(%struct.mmc_host* %host) #0 !dbg !5537 {
entry:
  %host.addr = alloca %struct.mmc_host*, align 8
  %err = alloca i32, align 4
  store %struct.mmc_host* %host, %struct.mmc_host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %host.addr, metadata !5538, metadata !DIExpression()), !dbg !5539
  call void @llvm.dbg.declare(metadata i32* %err, metadata !5540, metadata !DIExpression()), !dbg !5541
  %0 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !5542
  %call = call i32 @_mmc_sd_suspend(%struct.mmc_host* %0) #11, !dbg !5543
  store i32 %call, i32* %err, align 4, !dbg !5544
  %1 = load i32, i32* %err, align 4, !dbg !5545
  %tobool = icmp ne i32 %1, 0, !dbg !5545
  br i1 %tobool, label %if.end, label %if.then, !dbg !5547

if.then:                                          ; preds = %entry
  %2 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !5548
  %card = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %2, i32 0, i32 38, !dbg !5550
  %3 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !5550
  %dev = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %3, i32 0, i32 1, !dbg !5551
  call void @pm_runtime_disable(%struct.device* %dev) #11, !dbg !5552
  %4 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !5553
  %card1 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %4, i32 0, i32 38, !dbg !5554
  %5 = load %struct.mmc_card*, %struct.mmc_card** %card1, align 8, !dbg !5554
  %dev2 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %5, i32 0, i32 1, !dbg !5555
  %call3 = call i32 @pm_runtime_set_suspended(%struct.device* %dev2) #11, !dbg !5556
  br label %if.end, !dbg !5557

if.end:                                           ; preds = %if.then, %entry
  %6 = load i32, i32* %err, align 4, !dbg !5558
  ret i32 %6, !dbg !5559
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mmc_sd_resume(%struct.mmc_host* %host) #0 !dbg !5560 {
entry:
  %host.addr = alloca %struct.mmc_host*, align 8
  store %struct.mmc_host* %host, %struct.mmc_host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %host.addr, metadata !5561, metadata !DIExpression()), !dbg !5562
  %0 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !5563
  %card = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %0, i32 0, i32 38, !dbg !5564
  %1 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !5564
  %dev = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %1, i32 0, i32 1, !dbg !5565
  call void @pm_runtime_enable(%struct.device* %dev) #11, !dbg !5566
  ret i32 0, !dbg !5567
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mmc_sd_runtime_suspend(%struct.mmc_host* %host) #0 !dbg !5568 {
entry:
  %retval = alloca i32, align 4
  %host.addr = alloca %struct.mmc_host*, align 8
  %err = alloca i32, align 4
  store %struct.mmc_host* %host, %struct.mmc_host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %host.addr, metadata !5569, metadata !DIExpression()), !dbg !5570
  call void @llvm.dbg.declare(metadata i32* %err, metadata !5571, metadata !DIExpression()), !dbg !5572
  %0 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !5573
  %caps = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %0, i32 0, i32 17, !dbg !5575
  %1 = load i32, i32* %caps, align 4, !dbg !5575
  %and = and i32 %1, 128, !dbg !5576
  %tobool = icmp ne i32 %and, 0, !dbg !5576
  br i1 %tobool, label %if.end, label %if.then, !dbg !5577

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !5578
  br label %return, !dbg !5578

if.end:                                           ; preds = %entry
  %2 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !5579
  %call = call i32 @_mmc_sd_suspend(%struct.mmc_host* %2) #11, !dbg !5580
  store i32 %call, i32* %err, align 4, !dbg !5581
  %3 = load i32, i32* %err, align 4, !dbg !5582
  %tobool1 = icmp ne i32 %3, 0, !dbg !5582
  br i1 %tobool1, label %if.then2, label %if.end5, !dbg !5584

if.then2:                                         ; preds = %if.end
  %4 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !5585
  %class_dev = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %4, i32 0, i32 1, !dbg !5585
  %call3 = call i8* @dev_name(%struct.device* %class_dev) #11, !dbg !5585
  %5 = load i32, i32* %err, align 4, !dbg !5585
  %call4 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.48, i64 0, i64 0), i8* %call3, i32 %5) #12, !dbg !5585
  br label %if.end5, !dbg !5585

if.end5:                                          ; preds = %if.then2, %if.end
  %6 = load i32, i32* %err, align 4, !dbg !5586
  store i32 %6, i32* %retval, align 4, !dbg !5587
  br label %return, !dbg !5587

return:                                           ; preds = %if.end5, %if.then
  %7 = load i32, i32* %retval, align 4, !dbg !5588
  ret i32 %7, !dbg !5588
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mmc_sd_runtime_resume(%struct.mmc_host* %host) #0 !dbg !5589 {
entry:
  %host.addr = alloca %struct.mmc_host*, align 8
  %err = alloca i32, align 4
  store %struct.mmc_host* %host, %struct.mmc_host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %host.addr, metadata !5590, metadata !DIExpression()), !dbg !5591
  call void @llvm.dbg.declare(metadata i32* %err, metadata !5592, metadata !DIExpression()), !dbg !5593
  %0 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !5594
  %call = call i32 @_mmc_sd_resume(%struct.mmc_host* %0) #11, !dbg !5595
  store i32 %call, i32* %err, align 4, !dbg !5596
  %1 = load i32, i32* %err, align 4, !dbg !5597
  %tobool = icmp ne i32 %1, 0, !dbg !5597
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !5599

land.lhs.true:                                    ; preds = %entry
  %2 = load i32, i32* %err, align 4, !dbg !5600
  %cmp = icmp ne i32 %2, -123, !dbg !5601
  br i1 %cmp, label %if.then, label %if.end, !dbg !5602

if.then:                                          ; preds = %land.lhs.true
  %3 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !5603
  %class_dev = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %3, i32 0, i32 1, !dbg !5603
  %call1 = call i8* @dev_name(%struct.device* %class_dev) #11, !dbg !5603
  %4 = load i32, i32* %err, align 4, !dbg !5603
  %call2 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.49, i64 0, i64 0), i8* %call1, i32 %4) #12, !dbg !5603
  br label %if.end, !dbg !5603

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  ret i32 0, !dbg !5604
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mmc_sd_alive(%struct.mmc_host* %host) #0 !dbg !5605 {
entry:
  %host.addr = alloca %struct.mmc_host*, align 8
  store %struct.mmc_host* %host, %struct.mmc_host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %host.addr, metadata !5606, metadata !DIExpression()), !dbg !5607
  %0 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !5608
  %card = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %0, i32 0, i32 38, !dbg !5609
  %1 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !5609
  %call = call i32 @mmc_send_status(%struct.mmc_card* %1, i32* null) #11, !dbg !5610
  ret i32 %call, !dbg !5611
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mmc_sd_hw_reset(%struct.mmc_host* %host) #0 !dbg !5612 {
entry:
  %host.addr = alloca %struct.mmc_host*, align 8
  store %struct.mmc_host* %host, %struct.mmc_host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %host.addr, metadata !5613, metadata !DIExpression()), !dbg !5614
  %0 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !5615
  %1 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !5616
  %card = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %1, i32 0, i32 38, !dbg !5617
  %2 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !5617
  %ocr = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %2, i32 0, i32 2, !dbg !5618
  %3 = load i32, i32* %ocr, align 8, !dbg !5618
  call void @mmc_power_cycle(%struct.mmc_host* %0, i32 %3) #11, !dbg !5619
  %4 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !5620
  %5 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !5621
  %card1 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %5, i32 0, i32 38, !dbg !5622
  %6 = load %struct.mmc_card*, %struct.mmc_card** %card1, align 8, !dbg !5622
  %ocr2 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %6, i32 0, i32 2, !dbg !5623
  %7 = load i32, i32* %ocr2, align 8, !dbg !5623
  %8 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !5624
  %card3 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %8, i32 0, i32 38, !dbg !5625
  %9 = load %struct.mmc_card*, %struct.mmc_card** %card3, align 8, !dbg !5625
  %call = call i32 @mmc_sd_init_card(%struct.mmc_host* %4, i32 %7, %struct.mmc_card* %9) #11, !dbg !5626
  ret i32 %call, !dbg !5627
}

; Function Attrs: noredzone
declare dso_local void @mmc_get_card(%struct.mmc_card*, %struct.mmc_ctx*) #2

; Function Attrs: noredzone
declare dso_local i32 @_mmc_detect_card_removed(%struct.mmc_host*) #2

; Function Attrs: noredzone
declare dso_local void @mmc_put_card(%struct.mmc_card*, %struct.mmc_ctx*) #2

; Function Attrs: noredzone
declare dso_local void @mmc_power_off(%struct.mmc_host*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @_mmc_sd_suspend(%struct.mmc_host* %host) #0 !dbg !5628 {
entry:
  %host.addr = alloca %struct.mmc_host*, align 8
  %err = alloca i32, align 4
  store %struct.mmc_host* %host, %struct.mmc_host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %host.addr, metadata !5629, metadata !DIExpression()), !dbg !5630
  call void @llvm.dbg.declare(metadata i32* %err, metadata !5631, metadata !DIExpression()), !dbg !5632
  store i32 0, i32* %err, align 4, !dbg !5632
  %0 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !5633
  call void @mmc_claim_host(%struct.mmc_host* %0) #11, !dbg !5634
  %1 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !5635
  %card = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %1, i32 0, i32 38, !dbg !5635
  %2 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !5635
  %state = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %2, i32 0, i32 5, !dbg !5635
  %3 = load i32, i32* %state, align 4, !dbg !5635
  %and = and i32 %3, 32, !dbg !5635
  %tobool = icmp ne i32 %and, 0, !dbg !5635
  br i1 %tobool, label %if.then, label %if.end, !dbg !5637

if.then:                                          ; preds = %entry
  br label %out, !dbg !5638

if.end:                                           ; preds = %entry
  %4 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !5639
  %caps = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %4, i32 0, i32 17, !dbg !5639
  %5 = load i32, i32* %caps, align 4, !dbg !5639
  %and1 = and i32 %5, 16, !dbg !5639
  %tobool2 = icmp ne i32 %and1, 0, !dbg !5639
  br i1 %tobool2, label %if.end4, label %if.then3, !dbg !5641

if.then3:                                         ; preds = %if.end
  %6 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !5642
  %call = call i32 @mmc_deselect_cards(%struct.mmc_host* %6) #11, !dbg !5643
  store i32 %call, i32* %err, align 4, !dbg !5644
  br label %if.end4, !dbg !5645

if.end4:                                          ; preds = %if.then3, %if.end
  %7 = load i32, i32* %err, align 4, !dbg !5646
  %tobool5 = icmp ne i32 %7, 0, !dbg !5646
  br i1 %tobool5, label %if.end9, label %if.then6, !dbg !5648

if.then6:                                         ; preds = %if.end4
  %8 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !5649
  call void @mmc_power_off(%struct.mmc_host* %8) #11, !dbg !5651
  %9 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !5652
  %card7 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %9, i32 0, i32 38, !dbg !5652
  %10 = load %struct.mmc_card*, %struct.mmc_card** %card7, align 8, !dbg !5652
  %state8 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %10, i32 0, i32 5, !dbg !5652
  %11 = load i32, i32* %state8, align 4, !dbg !5652
  %or = or i32 %11, 32, !dbg !5652
  store i32 %or, i32* %state8, align 4, !dbg !5652
  br label %if.end9, !dbg !5653

if.end9:                                          ; preds = %if.then6, %if.end4
  br label %out, !dbg !5646

out:                                              ; preds = %if.end9, %if.then
  call void @llvm.dbg.label(metadata !5654), !dbg !5655
  %12 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !5656
  call void @mmc_release_host(%struct.mmc_host* %12) #11, !dbg !5657
  %13 = load i32, i32* %err, align 4, !dbg !5658
  ret i32 %13, !dbg !5659
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pm_runtime_disable(%struct.device* %dev) #0 !dbg !5660 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5662, metadata !DIExpression()), !dbg !5663
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5664
  call void @__pm_runtime_disable(%struct.device* %0, i1 zeroext true) #11, !dbg !5665
  ret void, !dbg !5666
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pm_runtime_set_suspended(%struct.device* %dev) #0 !dbg !5667 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5668, metadata !DIExpression()), !dbg !5669
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5670
  %call = call i32 @__pm_runtime_set_status(%struct.device* %0, i32 2) #11, !dbg !5671
  ret i32 %call, !dbg !5672
}

; Function Attrs: noredzone
declare dso_local i32 @mmc_deselect_cards(%struct.mmc_host*) #2

; Function Attrs: noredzone
declare dso_local void @__pm_runtime_disable(%struct.device*, i1 zeroext) #2

; Function Attrs: noredzone
declare dso_local i32 @__pm_runtime_set_status(%struct.device*, i32) #2

; Function Attrs: noredzone
declare dso_local void @pm_runtime_enable(%struct.device*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @_mmc_sd_resume(%struct.mmc_host* %host) #0 !dbg !5673 {
entry:
  %host.addr = alloca %struct.mmc_host*, align 8
  %err = alloca i32, align 4
  store %struct.mmc_host* %host, %struct.mmc_host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %host.addr, metadata !5674, metadata !DIExpression()), !dbg !5675
  call void @llvm.dbg.declare(metadata i32* %err, metadata !5676, metadata !DIExpression()), !dbg !5677
  store i32 0, i32* %err, align 4, !dbg !5677
  %0 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !5678
  call void @mmc_claim_host(%struct.mmc_host* %0) #11, !dbg !5679
  %1 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !5680
  %card = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %1, i32 0, i32 38, !dbg !5680
  %2 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !5680
  %state = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %2, i32 0, i32 5, !dbg !5680
  %3 = load i32, i32* %state, align 4, !dbg !5680
  %and = and i32 %3, 32, !dbg !5680
  %tobool = icmp ne i32 %and, 0, !dbg !5680
  br i1 %tobool, label %if.end, label %if.then, !dbg !5682

if.then:                                          ; preds = %entry
  br label %out, !dbg !5683

if.end:                                           ; preds = %entry
  %4 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !5684
  %5 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !5685
  %card1 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %5, i32 0, i32 38, !dbg !5686
  %6 = load %struct.mmc_card*, %struct.mmc_card** %card1, align 8, !dbg !5686
  %ocr = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %6, i32 0, i32 2, !dbg !5687
  %7 = load i32, i32* %ocr, align 8, !dbg !5687
  call void @mmc_power_up(%struct.mmc_host* %4, i32 %7) #11, !dbg !5688
  %8 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !5689
  %9 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !5690
  %card2 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %9, i32 0, i32 38, !dbg !5691
  %10 = load %struct.mmc_card*, %struct.mmc_card** %card2, align 8, !dbg !5691
  %ocr3 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %10, i32 0, i32 2, !dbg !5692
  %11 = load i32, i32* %ocr3, align 8, !dbg !5692
  %12 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !5693
  %card4 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %12, i32 0, i32 38, !dbg !5694
  %13 = load %struct.mmc_card*, %struct.mmc_card** %card4, align 8, !dbg !5694
  %call = call i32 @mmc_sd_init_card(%struct.mmc_host* %8, i32 %11, %struct.mmc_card* %13) #11, !dbg !5695
  store i32 %call, i32* %err, align 4, !dbg !5696
  %14 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !5697
  %card5 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %14, i32 0, i32 38, !dbg !5697
  %15 = load %struct.mmc_card*, %struct.mmc_card** %card5, align 8, !dbg !5697
  %state6 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %15, i32 0, i32 5, !dbg !5697
  %16 = load i32, i32* %state6, align 4, !dbg !5697
  %and7 = and i32 %16, -33, !dbg !5697
  store i32 %and7, i32* %state6, align 4, !dbg !5697
  br label %out, !dbg !5697

out:                                              ; preds = %if.end, %if.then
  call void @llvm.dbg.label(metadata !5698), !dbg !5699
  %17 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !5700
  call void @mmc_release_host(%struct.mmc_host* %17) #11, !dbg !5701
  %18 = load i32, i32* %err, align 4, !dbg !5702
  ret i32 %18, !dbg !5703
}

; Function Attrs: noredzone
declare dso_local void @mmc_power_up(%struct.mmc_host*, i32) #2

; Function Attrs: noredzone
declare dso_local i32 @mmc_send_status(%struct.mmc_card*, i32*) #2

; Function Attrs: noredzone
declare dso_local void @mmc_power_cycle(%struct.mmc_host*, i32) #2

; Function Attrs: noredzone
declare dso_local i32 @memcmp(i8*, i8*, i64) #2

; Function Attrs: noredzone
declare dso_local %struct.mmc_card* @mmc_alloc_card(%struct.mmc_host*, %struct.device_type*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @IS_ERR(i8* %ptr) #0 !dbg !5704 {
entry:
  %ptr.addr = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !5708, metadata !DIExpression()), !dbg !5709
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !5710
  %1 = ptrtoint i8* %0 to i64, !dbg !5710
  %2 = inttoptr i64 %1 to i8*, !dbg !5710
  %3 = ptrtoint i8* %2 to i64, !dbg !5710
  %cmp = icmp uge i64 %3, -4095, !dbg !5710
  %lnot = xor i1 %cmp, true, !dbg !5710
  %lnot1 = xor i1 %lnot, true, !dbg !5710
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !5710
  %conv = sext i32 %lnot.ext to i64, !dbg !5710
  %tobool = icmp ne i64 %conv, 0, !dbg !5710
  ret i1 %tobool, !dbg !5711
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @PTR_ERR(i8* %ptr) #0 !dbg !5712 {
entry:
  %ptr.addr = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !5715, metadata !DIExpression()), !dbg !5716
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !5717
  %1 = ptrtoint i8* %0 to i64, !dbg !5718
  ret i64 %1, !dbg !5719
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #7

; Function Attrs: noredzone
declare dso_local i32 @mmc_send_relative_addr(%struct.mmc_host*, i32*) #2

; Function Attrs: noredzone
declare dso_local i32 @mmc_set_dsr(%struct.mmc_host*) #2

; Function Attrs: noredzone
declare dso_local i32 @mmc_select_card(%struct.mmc_card*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @mmc_sd_card_using_v18(%struct.mmc_card* %card) #0 !dbg !5720 {
entry:
  %card.addr = alloca %struct.mmc_card*, align 8
  store %struct.mmc_card* %card, %struct.mmc_card** %card.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card.addr, metadata !5723, metadata !DIExpression()), !dbg !5724
  %0 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !5725
  %sw_caps = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %0, i32 0, i32 24, !dbg !5726
  %sd3_bus_mode = getelementptr inbounds %struct.sd_switch_caps, %struct.sd_switch_caps* %sw_caps, i32 0, i32 2, !dbg !5727
  %1 = load i32, i32* %sd3_bus_mode, align 4, !dbg !5727
  %and = and i32 %1, 28, !dbg !5728
  %tobool = icmp ne i32 %and, 0, !dbg !5725
  ret i1 %tobool, !dbg !5729
}

; Function Attrs: noredzone
declare dso_local i32 @mmc_host_set_uhs_voltage(%struct.mmc_host*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mmc_sd_init_uhs_card(%struct.mmc_card* %card) #0 !dbg !5730 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !2692, metadata !DIExpression()), !dbg !5731
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !2704, metadata !DIExpression()), !dbg !5734
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !2706, metadata !DIExpression()), !dbg !5735
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !2708, metadata !DIExpression()), !dbg !5736
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !2710, metadata !DIExpression()), !dbg !5737
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !2716, metadata !DIExpression()), !dbg !5739
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !2722, metadata !DIExpression()), !dbg !5741
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !2731, metadata !DIExpression()), !dbg !5744
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !2733, metadata !DIExpression()), !dbg !5745
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !2735, metadata !DIExpression()), !dbg !5746
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !2737, metadata !DIExpression()), !dbg !5747
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !2739, metadata !DIExpression()), !dbg !5748
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !2741, metadata !DIExpression()), !dbg !5749
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !2743, metadata !DIExpression()), !dbg !5750
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !2745, metadata !DIExpression()), !dbg !5751
  %retval = alloca i32, align 4
  %card.addr = alloca %struct.mmc_card*, align 8
  %err = alloca i32, align 4
  %status = alloca i8*, align 8
  store %struct.mmc_card* %card, %struct.mmc_card** %card.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card.addr, metadata !5752, metadata !DIExpression()), !dbg !5753
  call void @llvm.dbg.declare(metadata i32* %err, metadata !5754, metadata !DIExpression()), !dbg !5755
  call void @llvm.dbg.declare(metadata i8** %status, metadata !5756, metadata !DIExpression()), !dbg !5757
  %0 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !5758
  %csd = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %0, i32 0, i32 20, !dbg !5760
  %cmdclass = getelementptr inbounds %struct.mmc_csd, %struct.mmc_csd* %csd, i32 0, i32 2, !dbg !5761
  %1 = load i16, i16* %cmdclass, align 2, !dbg !5761
  %conv = zext i16 %1 to i32, !dbg !5758
  %and = and i32 %conv, 1024, !dbg !5762
  %tobool = icmp ne i32 %and, 0, !dbg !5762
  br i1 %tobool, label %if.end, label %if.then, !dbg !5763

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !5764
  br label %return, !dbg !5764

if.end:                                           ; preds = %entry
  store i64 64, i64* %size.addr.i, align 8
  store i32 3264, i32* %flags.addr.i, align 4
  %2 = load i64, i64* %size.addr.i, align 8, !dbg !5765
  %3 = call i1 @llvm.is.constant.i64(i64 %2) #8, !dbg !5766
  br i1 %3, label %if.then.i, label %if.end9.i, !dbg !5767

if.then.i:                                        ; preds = %if.end
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !5768
  %cmp.i = icmp ugt i64 %4, 8192, !dbg !5769
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !5770

if.then1.i:                                       ; preds = %if.then.i
  %5 = load i64, i64* %size.addr.i, align 8, !dbg !5771
  %6 = load i32, i32* %flags.addr.i, align 4, !dbg !5772
  store i64 %5, i64* %size.addr.i.i, align 8
  store i32 %6, i32* %flags.addr.i.i, align 4
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !5773
  %call.i.i = call i32 @get_order(i64 %7) #9, !dbg !5774
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !5748
  %8 = load i64, i64* %size.addr.i.i, align 8, !dbg !5775
  %9 = load i32, i32* %flags.addr.i.i, align 4, !dbg !5776
  %10 = load i32, i32* %order.i.i, align 4, !dbg !5777
  store i64 %8, i64* %size.addr.i.i.i, align 8
  store i32 %9, i32* %flags.addr.i.i.i, align 4
  store i32 %10, i32* %order.addr.i.i.i, align 4
  %11 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !5778
  %12 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !5779
  %13 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !5780
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %11, i32 %12, i32 %13) #10, !dbg !5781
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !5781
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !5781
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !5781
  call void @llvm.assume(i1 %maskcond.i.i.i) #8, !dbg !5781
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !5782
  br label %kmalloc.exit, !dbg !5782

if.end.i:                                         ; preds = %if.then.i
  %14 = load i64, i64* %size.addr.i, align 8, !dbg !5783
  store i64 %14, i64* %size.addr.i11.i, align 8
  %15 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5784
  %tobool.i.i = icmp ne i64 %15, 0, !dbg !5784
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !5785

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !5786
  br label %kmalloc_index.exit.i, !dbg !5786

if.end.i.i:                                       ; preds = %if.end.i
  %16 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5787
  %cmp.i.i = icmp ule i64 %16, 8, !dbg !5788
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !5789

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !5790
  br label %kmalloc_index.exit.i, !dbg !5790

if.end2.i.i:                                      ; preds = %if.end.i.i
  %17 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5791
  %cmp3.i.i = icmp ugt i64 %17, 64, !dbg !5792
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !5793

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %18 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5794
  %cmp4.i.i = icmp ule i64 %18, 96, !dbg !5795
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !5796

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !5797
  br label %kmalloc_index.exit.i, !dbg !5797

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %19 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5798
  %cmp7.i.i = icmp ugt i64 %19, 128, !dbg !5799
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !5800

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %20 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5801
  %cmp9.i.i = icmp ule i64 %20, 192, !dbg !5802
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !5803

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !5804
  br label %kmalloc_index.exit.i, !dbg !5804

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %21 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5805
  %cmp12.i.i = icmp ule i64 %21, 8, !dbg !5806
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !5807

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !5808
  br label %kmalloc_index.exit.i, !dbg !5808

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %22 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5809
  %cmp15.i.i = icmp ule i64 %22, 16, !dbg !5810
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !5811

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !5812
  br label %kmalloc_index.exit.i, !dbg !5812

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %23 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5813
  %cmp18.i.i = icmp ule i64 %23, 32, !dbg !5814
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !5815

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !5816
  br label %kmalloc_index.exit.i, !dbg !5816

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %24 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5817
  %cmp21.i.i = icmp ule i64 %24, 64, !dbg !5818
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !5819

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !5820
  br label %kmalloc_index.exit.i, !dbg !5820

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %25 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5821
  %cmp24.i.i = icmp ule i64 %25, 128, !dbg !5822
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !5823

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !5824
  br label %kmalloc_index.exit.i, !dbg !5824

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %26 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5825
  %cmp27.i.i = icmp ule i64 %26, 256, !dbg !5826
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !5827

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !5828
  br label %kmalloc_index.exit.i, !dbg !5828

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %27 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5829
  %cmp30.i.i = icmp ule i64 %27, 512, !dbg !5830
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !5831

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !5832
  br label %kmalloc_index.exit.i, !dbg !5832

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %28 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5833
  %cmp33.i.i = icmp ule i64 %28, 1024, !dbg !5834
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !5835

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !5836
  br label %kmalloc_index.exit.i, !dbg !5836

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5837
  %cmp36.i.i = icmp ule i64 %29, 2048, !dbg !5838
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !5839

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !5840
  br label %kmalloc_index.exit.i, !dbg !5840

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5841
  %cmp39.i.i = icmp ule i64 %30, 4096, !dbg !5842
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !5843

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !5844
  br label %kmalloc_index.exit.i, !dbg !5844

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5845
  %cmp42.i.i = icmp ule i64 %31, 8192, !dbg !5846
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !5847

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !5848
  br label %kmalloc_index.exit.i, !dbg !5848

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5849
  %cmp45.i.i = icmp ule i64 %32, 16384, !dbg !5850
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !5851

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !5852
  br label %kmalloc_index.exit.i, !dbg !5852

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5853
  %cmp48.i.i = icmp ule i64 %33, 32768, !dbg !5854
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !5855

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !5856
  br label %kmalloc_index.exit.i, !dbg !5856

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5857
  %cmp51.i.i = icmp ule i64 %34, 65536, !dbg !5858
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !5859

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !5860
  br label %kmalloc_index.exit.i, !dbg !5860

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5861
  %cmp54.i.i = icmp ule i64 %35, 131072, !dbg !5862
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !5863

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !5864
  br label %kmalloc_index.exit.i, !dbg !5864

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5865
  %cmp57.i.i = icmp ule i64 %36, 262144, !dbg !5866
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !5867

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !5868
  br label %kmalloc_index.exit.i, !dbg !5868

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5869
  %cmp60.i.i = icmp ule i64 %37, 524288, !dbg !5870
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !5871

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !5872
  br label %kmalloc_index.exit.i, !dbg !5872

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5873
  %cmp63.i.i = icmp ule i64 %38, 1048576, !dbg !5874
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !5875

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !5876
  br label %kmalloc_index.exit.i, !dbg !5876

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5877
  %cmp66.i.i = icmp ule i64 %39, 2097152, !dbg !5878
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !5879

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !5880
  br label %kmalloc_index.exit.i, !dbg !5880

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5881
  %cmp69.i.i = icmp ule i64 %40, 4194304, !dbg !5882
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !5883

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !5884
  br label %kmalloc_index.exit.i, !dbg !5884

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5885
  %cmp72.i.i = icmp ule i64 %41, 8388608, !dbg !5886
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !5887

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !5888
  br label %kmalloc_index.exit.i, !dbg !5888

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5889
  %cmp75.i.i = icmp ule i64 %42, 16777216, !dbg !5890
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !5891

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !5892
  br label %kmalloc_index.exit.i, !dbg !5892

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5893
  %cmp78.i.i = icmp ule i64 %43, 33554432, !dbg !5894
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !5895

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !5896
  br label %kmalloc_index.exit.i, !dbg !5896

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5897
  %cmp81.i.i = icmp ule i64 %44, 67108864, !dbg !5898
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !5899

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !5900
  br label %kmalloc_index.exit.i, !dbg !5900

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5, i64 0, i64 0), i32 382, i32 0, i64 12) #8, !dbg !5901, !srcloc !2949
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 88) #8, !dbg !5902, !srcloc !2953
  unreachable, !dbg !5903

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %45 = load i32, i32* %retval.i.i, align 4, !dbg !5904
  store i32 %45, i32* %index.i, align 4, !dbg !5905
  %46 = load i32, i32* %index.i, align 4, !dbg !5906
  %tobool.i = icmp ne i32 %46, 0, !dbg !5906
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !5907

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !5908
  br label %kmalloc.exit, !dbg !5908

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %47 = load i32, i32* %flags.addr.i, align 4, !dbg !5909
  store i32 %47, i32* %flags.addr.i13.i, align 4
  %48 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !5910
  %and.i.i = and i32 %48, 17, !dbg !5910
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !5910
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !5910
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !5910
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !5910
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !5911

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !5912
  br label %kmalloc_type.exit.i, !dbg !5912

if.end.i16.i:                                     ; preds = %if.end4.i
  %49 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !5913
  %and2.i.i = and i32 %49, 1, !dbg !5914
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !5913
  %50 = zext i1 %tobool3.i.i to i64, !dbg !5913
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !5913
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !5915
  br label %kmalloc_type.exit.i, !dbg !5915

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %51 = load i32, i32* %retval.i12.i, align 4, !dbg !5916
  %idxprom.i = zext i32 %51 to i64, !dbg !5917
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !5917
  %52 = load i32, i32* %index.i, align 4, !dbg !5918
  %idxprom6.i = zext i32 %52 to i64, !dbg !5917
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !5917
  %53 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !5917
  %54 = load i32, i32* %flags.addr.i, align 4, !dbg !5919
  %55 = load i64, i64* %size.addr.i, align 8, !dbg !5920
  store %struct.kmem_cache* %53, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %54, i32* %flags.addr.i17.i, align 4
  store i64 %55, i64* %size.addr.i18.i, align 8
  %56 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !5921
  %57 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !5922
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %56, i32 %57) #10, !dbg !5923
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !5923
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !5923
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !5923
  call void @llvm.assume(i1 %maskcond.i.i) #8, !dbg !5923
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !5736
  %58 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !5924
  %59 = load i8*, i8** %ret.i.i, align 8, !dbg !5925
  %60 = load i64, i64* %size.addr.i18.i, align 8, !dbg !5926
  %61 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !5927
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %58, i8* %59, i64 %60, i32 %61) #10, !dbg !5928
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !5929
  %62 = load i8*, i8** %ret.i.i, align 8, !dbg !5930
  store i8* %62, i8** %retval.i, align 8, !dbg !5931
  br label %kmalloc.exit, !dbg !5931

if.end9.i:                                        ; preds = %if.end
  %63 = load i64, i64* %size.addr.i, align 8, !dbg !5932
  %64 = load i32, i32* %flags.addr.i, align 4, !dbg !5933
  %call10.i = call noalias i8* @__kmalloc(i64 %63, i32 %64) #10, !dbg !5934
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !5934
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !5934
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !5934
  call void @llvm.assume(i1 %maskcond.i) #8, !dbg !5934
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !5935
  br label %kmalloc.exit, !dbg !5935

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %65 = load i8*, i8** %retval.i, align 8, !dbg !5936
  store i8* %65, i8** %status, align 8, !dbg !5937
  %66 = load i8*, i8** %status, align 8, !dbg !5938
  %tobool1 = icmp ne i8* %66, null, !dbg !5938
  br i1 %tobool1, label %if.end3, label %if.then2, !dbg !5940

if.then2:                                         ; preds = %kmalloc.exit
  store i32 -12, i32* %retval, align 4, !dbg !5941
  br label %return, !dbg !5941

if.end3:                                          ; preds = %kmalloc.exit
  %67 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !5942
  %call4 = call i32 @mmc_app_set_bus_width(%struct.mmc_card* %67, i32 2) #11, !dbg !5943
  store i32 %call4, i32* %err, align 4, !dbg !5944
  %68 = load i32, i32* %err, align 4, !dbg !5945
  %tobool5 = icmp ne i32 %68, 0, !dbg !5945
  br i1 %tobool5, label %if.then6, label %if.end7, !dbg !5947

if.then6:                                         ; preds = %if.end3
  br label %out, !dbg !5948

if.end7:                                          ; preds = %if.end3
  %69 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !5949
  %host = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %69, i32 0, i32 0, !dbg !5950
  %70 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !5950
  call void @mmc_set_bus_width(%struct.mmc_host* %70, i32 2) #11, !dbg !5951
  %71 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !5952
  call void @sd_update_bus_speed_mode(%struct.mmc_card* %71) #11, !dbg !5953
  %72 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !5954
  %73 = load i8*, i8** %status, align 8, !dbg !5955
  %call8 = call i32 @sd_select_driver_type(%struct.mmc_card* %72, i8* %73) #11, !dbg !5956
  store i32 %call8, i32* %err, align 4, !dbg !5957
  %74 = load i32, i32* %err, align 4, !dbg !5958
  %tobool9 = icmp ne i32 %74, 0, !dbg !5958
  br i1 %tobool9, label %if.then10, label %if.end11, !dbg !5960

if.then10:                                        ; preds = %if.end7
  br label %out, !dbg !5961

if.end11:                                         ; preds = %if.end7
  %75 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !5962
  %76 = load i8*, i8** %status, align 8, !dbg !5963
  %call12 = call i32 @sd_set_current_limit(%struct.mmc_card* %75, i8* %76) #11, !dbg !5964
  store i32 %call12, i32* %err, align 4, !dbg !5965
  %77 = load i32, i32* %err, align 4, !dbg !5966
  %tobool13 = icmp ne i32 %77, 0, !dbg !5966
  br i1 %tobool13, label %if.then14, label %if.end15, !dbg !5968

if.then14:                                        ; preds = %if.end11
  br label %out, !dbg !5969

if.end15:                                         ; preds = %if.end11
  %78 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !5970
  %79 = load i8*, i8** %status, align 8, !dbg !5971
  %call16 = call i32 @sd_set_bus_speed_mode(%struct.mmc_card* %78, i8* %79) #11, !dbg !5972
  store i32 %call16, i32* %err, align 4, !dbg !5973
  %80 = load i32, i32* %err, align 4, !dbg !5974
  %tobool17 = icmp ne i32 %80, 0, !dbg !5974
  br i1 %tobool17, label %if.then18, label %if.end19, !dbg !5976

if.then18:                                        ; preds = %if.end15
  br label %out, !dbg !5977

if.end19:                                         ; preds = %if.end15
  %81 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !5978
  %host20 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %81, i32 0, i32 0, !dbg !5978
  %82 = load %struct.mmc_host*, %struct.mmc_host** %host20, align 8, !dbg !5978
  %caps = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %82, i32 0, i32 17, !dbg !5978
  %83 = load i32, i32* %caps, align 4, !dbg !5978
  %and21 = and i32 %83, 16, !dbg !5978
  %tobool22 = icmp ne i32 %and21, 0, !dbg !5978
  br i1 %tobool22, label %if.end54, label %land.lhs.true, !dbg !5980

land.lhs.true:                                    ; preds = %if.end19
  %84 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !5981
  %host23 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %84, i32 0, i32 0, !dbg !5982
  %85 = load %struct.mmc_host*, %struct.mmc_host** %host23, align 8, !dbg !5982
  %ios = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %85, i32 0, i32 29, !dbg !5983
  %timing = getelementptr inbounds %struct.mmc_ios, %struct.mmc_ios* %ios, i32 0, i32 7, !dbg !5984
  %86 = load i8, i8* %timing, align 4, !dbg !5984
  %conv24 = zext i8 %86 to i32, !dbg !5981
  %cmp = icmp eq i32 %conv24, 5, !dbg !5985
  br i1 %cmp, label %if.then39, label %lor.lhs.false, !dbg !5986

lor.lhs.false:                                    ; preds = %land.lhs.true
  %87 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !5987
  %host26 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %87, i32 0, i32 0, !dbg !5988
  %88 = load %struct.mmc_host*, %struct.mmc_host** %host26, align 8, !dbg !5988
  %ios27 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %88, i32 0, i32 29, !dbg !5989
  %timing28 = getelementptr inbounds %struct.mmc_ios, %struct.mmc_ios* %ios27, i32 0, i32 7, !dbg !5990
  %89 = load i8, i8* %timing28, align 4, !dbg !5990
  %conv29 = zext i8 %89 to i32, !dbg !5987
  %cmp30 = icmp eq i32 %conv29, 7, !dbg !5991
  br i1 %cmp30, label %if.then39, label %lor.lhs.false32, !dbg !5992

lor.lhs.false32:                                  ; preds = %lor.lhs.false
  %90 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !5993
  %host33 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %90, i32 0, i32 0, !dbg !5994
  %91 = load %struct.mmc_host*, %struct.mmc_host** %host33, align 8, !dbg !5994
  %ios34 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %91, i32 0, i32 29, !dbg !5995
  %timing35 = getelementptr inbounds %struct.mmc_ios, %struct.mmc_ios* %ios34, i32 0, i32 7, !dbg !5996
  %92 = load i8, i8* %timing35, align 4, !dbg !5996
  %conv36 = zext i8 %92 to i32, !dbg !5993
  %cmp37 = icmp eq i32 %conv36, 6, !dbg !5997
  br i1 %cmp37, label %if.then39, label %if.end54, !dbg !5998

if.then39:                                        ; preds = %lor.lhs.false32, %lor.lhs.false, %land.lhs.true
  %93 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !5999
  %call40 = call i32 @mmc_execute_tuning(%struct.mmc_card* %93) #11, !dbg !6001
  store i32 %call40, i32* %err, align 4, !dbg !6002
  %94 = load i32, i32* %err, align 4, !dbg !6003
  %tobool41 = icmp ne i32 %94, 0, !dbg !6003
  br i1 %tobool41, label %land.lhs.true42, label %if.end53, !dbg !6005

land.lhs.true42:                                  ; preds = %if.then39
  %95 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6006
  %host43 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %95, i32 0, i32 0, !dbg !6007
  %96 = load %struct.mmc_host*, %struct.mmc_host** %host43, align 8, !dbg !6007
  %ios44 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %96, i32 0, i32 29, !dbg !6008
  %timing45 = getelementptr inbounds %struct.mmc_ios, %struct.mmc_ios* %ios44, i32 0, i32 7, !dbg !6009
  %97 = load i8, i8* %timing45, align 4, !dbg !6009
  %conv46 = zext i8 %97 to i32, !dbg !6006
  %cmp47 = icmp eq i32 %conv46, 7, !dbg !6010
  br i1 %cmp47, label %if.then49, label %if.end53, !dbg !6011

if.then49:                                        ; preds = %land.lhs.true42
  %98 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6012
  %host50 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %98, i32 0, i32 0, !dbg !6012
  %99 = load %struct.mmc_host*, %struct.mmc_host** %host50, align 8, !dbg !6012
  %class_dev = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %99, i32 0, i32 1, !dbg !6012
  %call51 = call i8* @dev_name(%struct.device* %class_dev) #11, !dbg !6012
  %call52 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.52, i64 0, i64 0), i8* %call51) #12, !dbg !6012
  store i32 0, i32* %err, align 4, !dbg !6014
  br label %if.end53, !dbg !6015

if.end53:                                         ; preds = %if.then49, %land.lhs.true42, %if.then39
  br label %if.end54, !dbg !6016

if.end54:                                         ; preds = %if.end53, %lor.lhs.false32, %if.end19
  br label %out, !dbg !6017

out:                                              ; preds = %if.end54, %if.then18, %if.then14, %if.then10, %if.then6
  call void @llvm.dbg.label(metadata !6018), !dbg !6019
  %100 = load i8*, i8** %status, align 8, !dbg !6020
  call void @kfree(i8* %100) #11, !dbg !6021
  %101 = load i32, i32* %err, align 4, !dbg !6022
  store i32 %101, i32* %retval, align 4, !dbg !6023
  br label %return, !dbg !6023

return:                                           ; preds = %out, %if.then2, %if.then
  %102 = load i32, i32* %retval, align 4, !dbg !6024
  ret i32 %102, !dbg !6024
}

; Function Attrs: noredzone
declare dso_local void @mmc_set_timing(%struct.mmc_host*, i32) #2

; Function Attrs: noredzone
declare dso_local void @mmc_set_clock(%struct.mmc_host*, i32) #2

; Function Attrs: noredzone
declare dso_local i32 @mmc_app_set_bus_width(%struct.mmc_card*, i32) #2

; Function Attrs: noredzone
declare dso_local void @mmc_set_bus_width(%struct.mmc_host*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sd_update_bus_speed_mode(%struct.mmc_card* %card) #0 !dbg !6025 {
entry:
  %card.addr = alloca %struct.mmc_card*, align 8
  store %struct.mmc_card* %card, %struct.mmc_card** %card.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card.addr, metadata !6026, metadata !DIExpression()), !dbg !6027
  %0 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6028
  %host = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %0, i32 0, i32 0, !dbg !6030
  %1 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !6030
  %call = call i32 @mmc_host_uhs(%struct.mmc_host* %1) #11, !dbg !6031
  %tobool = icmp ne i32 %call, 0, !dbg !6031
  br i1 %tobool, label %if.end, label %if.then, !dbg !6032

if.then:                                          ; preds = %entry
  %2 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6033
  %sd_bus_speed = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %2, i32 0, i32 36, !dbg !6035
  store i32 0, i32* %sd_bus_speed, align 8, !dbg !6036
  br label %if.end58, !dbg !6037

if.end:                                           ; preds = %entry
  %3 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6038
  %host1 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %3, i32 0, i32 0, !dbg !6040
  %4 = load %struct.mmc_host*, %struct.mmc_host** %host1, align 8, !dbg !6040
  %caps = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %4, i32 0, i32 17, !dbg !6041
  %5 = load i32, i32* %caps, align 4, !dbg !6041
  %and = and i32 %5, 524288, !dbg !6042
  %tobool2 = icmp ne i32 %and, 0, !dbg !6042
  br i1 %tobool2, label %land.lhs.true, label %if.else, !dbg !6043

land.lhs.true:                                    ; preds = %if.end
  %6 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6044
  %sw_caps = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %6, i32 0, i32 24, !dbg !6045
  %sd3_bus_mode = getelementptr inbounds %struct.sd_switch_caps, %struct.sd_switch_caps* %sw_caps, i32 0, i32 2, !dbg !6046
  %7 = load i32, i32* %sd3_bus_mode, align 4, !dbg !6046
  %and3 = and i32 %7, 8, !dbg !6047
  %tobool4 = icmp ne i32 %and3, 0, !dbg !6047
  br i1 %tobool4, label %if.then5, label %if.else, !dbg !6048

if.then5:                                         ; preds = %land.lhs.true
  %8 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6049
  %sd_bus_speed6 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %8, i32 0, i32 36, !dbg !6051
  store i32 3, i32* %sd_bus_speed6, align 8, !dbg !6052
  br label %if.end58, !dbg !6053

if.else:                                          ; preds = %land.lhs.true, %if.end
  %9 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6054
  %host7 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %9, i32 0, i32 0, !dbg !6056
  %10 = load %struct.mmc_host*, %struct.mmc_host** %host7, align 8, !dbg !6056
  %caps8 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %10, i32 0, i32 17, !dbg !6057
  %11 = load i32, i32* %caps8, align 4, !dbg !6057
  %and9 = and i32 %11, 1048576, !dbg !6058
  %tobool10 = icmp ne i32 %and9, 0, !dbg !6058
  br i1 %tobool10, label %land.lhs.true11, label %if.else18, !dbg !6059

land.lhs.true11:                                  ; preds = %if.else
  %12 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6060
  %sw_caps12 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %12, i32 0, i32 24, !dbg !6061
  %sd3_bus_mode13 = getelementptr inbounds %struct.sd_switch_caps, %struct.sd_switch_caps* %sw_caps12, i32 0, i32 2, !dbg !6062
  %13 = load i32, i32* %sd3_bus_mode13, align 4, !dbg !6062
  %and14 = and i32 %13, 16, !dbg !6063
  %tobool15 = icmp ne i32 %and14, 0, !dbg !6063
  br i1 %tobool15, label %if.then16, label %if.else18, !dbg !6064

if.then16:                                        ; preds = %land.lhs.true11
  %14 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6065
  %sd_bus_speed17 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %14, i32 0, i32 36, !dbg !6067
  store i32 4, i32* %sd_bus_speed17, align 8, !dbg !6068
  br label %if.end57, !dbg !6069

if.else18:                                        ; preds = %land.lhs.true11, %if.else
  %15 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6070
  %host19 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %15, i32 0, i32 0, !dbg !6072
  %16 = load %struct.mmc_host*, %struct.mmc_host** %host19, align 8, !dbg !6072
  %caps20 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %16, i32 0, i32 17, !dbg !6073
  %17 = load i32, i32* %caps20, align 4, !dbg !6073
  %and21 = and i32 %17, 786432, !dbg !6074
  %tobool22 = icmp ne i32 %and21, 0, !dbg !6074
  br i1 %tobool22, label %land.lhs.true23, label %if.else30, !dbg !6075

land.lhs.true23:                                  ; preds = %if.else18
  %18 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6076
  %sw_caps24 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %18, i32 0, i32 24, !dbg !6077
  %sd3_bus_mode25 = getelementptr inbounds %struct.sd_switch_caps, %struct.sd_switch_caps* %sw_caps24, i32 0, i32 2, !dbg !6078
  %19 = load i32, i32* %sd3_bus_mode25, align 4, !dbg !6078
  %and26 = and i32 %19, 4, !dbg !6079
  %tobool27 = icmp ne i32 %and26, 0, !dbg !6079
  br i1 %tobool27, label %if.then28, label %if.else30, !dbg !6080

if.then28:                                        ; preds = %land.lhs.true23
  %20 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6081
  %sd_bus_speed29 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %20, i32 0, i32 36, !dbg !6083
  store i32 2, i32* %sd_bus_speed29, align 8, !dbg !6084
  br label %if.end56, !dbg !6085

if.else30:                                        ; preds = %land.lhs.true23, %if.else18
  %21 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6086
  %host31 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %21, i32 0, i32 0, !dbg !6088
  %22 = load %struct.mmc_host*, %struct.mmc_host** %host31, align 8, !dbg !6088
  %caps32 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %22, i32 0, i32 17, !dbg !6089
  %23 = load i32, i32* %caps32, align 4, !dbg !6089
  %and33 = and i32 %23, 917504, !dbg !6090
  %tobool34 = icmp ne i32 %and33, 0, !dbg !6090
  br i1 %tobool34, label %land.lhs.true35, label %if.else42, !dbg !6091

land.lhs.true35:                                  ; preds = %if.else30
  %24 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6092
  %sw_caps36 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %24, i32 0, i32 24, !dbg !6093
  %sd3_bus_mode37 = getelementptr inbounds %struct.sd_switch_caps, %struct.sd_switch_caps* %sw_caps36, i32 0, i32 2, !dbg !6094
  %25 = load i32, i32* %sd3_bus_mode37, align 4, !dbg !6094
  %and38 = and i32 %25, 2, !dbg !6095
  %tobool39 = icmp ne i32 %and38, 0, !dbg !6095
  br i1 %tobool39, label %if.then40, label %if.else42, !dbg !6096

if.then40:                                        ; preds = %land.lhs.true35
  %26 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6097
  %sd_bus_speed41 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %26, i32 0, i32 36, !dbg !6099
  store i32 1, i32* %sd_bus_speed41, align 8, !dbg !6100
  br label %if.end55, !dbg !6101

if.else42:                                        ; preds = %land.lhs.true35, %if.else30
  %27 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6102
  %host43 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %27, i32 0, i32 0, !dbg !6104
  %28 = load %struct.mmc_host*, %struct.mmc_host** %host43, align 8, !dbg !6104
  %caps44 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %28, i32 0, i32 17, !dbg !6105
  %29 = load i32, i32* %caps44, align 4, !dbg !6105
  %and45 = and i32 %29, 983040, !dbg !6106
  %tobool46 = icmp ne i32 %and45, 0, !dbg !6106
  br i1 %tobool46, label %land.lhs.true47, label %if.end54, !dbg !6107

land.lhs.true47:                                  ; preds = %if.else42
  %30 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6108
  %sw_caps48 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %30, i32 0, i32 24, !dbg !6109
  %sd3_bus_mode49 = getelementptr inbounds %struct.sd_switch_caps, %struct.sd_switch_caps* %sw_caps48, i32 0, i32 2, !dbg !6110
  %31 = load i32, i32* %sd3_bus_mode49, align 4, !dbg !6110
  %and50 = and i32 %31, 1, !dbg !6111
  %tobool51 = icmp ne i32 %and50, 0, !dbg !6111
  br i1 %tobool51, label %if.then52, label %if.end54, !dbg !6112

if.then52:                                        ; preds = %land.lhs.true47
  %32 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6113
  %sd_bus_speed53 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %32, i32 0, i32 36, !dbg !6115
  store i32 0, i32* %sd_bus_speed53, align 8, !dbg !6116
  br label %if.end54, !dbg !6117

if.end54:                                         ; preds = %if.then52, %land.lhs.true47, %if.else42
  br label %if.end55

if.end55:                                         ; preds = %if.end54, %if.then40
  br label %if.end56

if.end56:                                         ; preds = %if.end55, %if.then28
  br label %if.end57

if.end57:                                         ; preds = %if.end56, %if.then16
  br label %if.end58

if.end58:                                         ; preds = %if.then, %if.end57, %if.then5
  ret void, !dbg !6118
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @sd_select_driver_type(%struct.mmc_card* %card, i8* %status) #0 !dbg !6119 {
entry:
  %retval = alloca i32, align 4
  %card.addr = alloca %struct.mmc_card*, align 8
  %status.addr = alloca i8*, align 8
  %card_drv_type = alloca i32, align 4
  %drive_strength = alloca i32, align 4
  %drv_type = alloca i32, align 4
  %err = alloca i32, align 4
  store %struct.mmc_card* %card, %struct.mmc_card** %card.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card.addr, metadata !6122, metadata !DIExpression()), !dbg !6123
  store i8* %status, i8** %status.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %status.addr, metadata !6124, metadata !DIExpression()), !dbg !6125
  call void @llvm.dbg.declare(metadata i32* %card_drv_type, metadata !6126, metadata !DIExpression()), !dbg !6127
  call void @llvm.dbg.declare(metadata i32* %drive_strength, metadata !6128, metadata !DIExpression()), !dbg !6129
  call void @llvm.dbg.declare(metadata i32* %drv_type, metadata !6130, metadata !DIExpression()), !dbg !6131
  call void @llvm.dbg.declare(metadata i32* %err, metadata !6132, metadata !DIExpression()), !dbg !6133
  %0 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6134
  %drive_strength1 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %0, i32 0, i32 38, !dbg !6135
  store i32 0, i32* %drive_strength1, align 8, !dbg !6136
  %1 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6137
  %sw_caps = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %1, i32 0, i32 24, !dbg !6138
  %sd3_drv_type = getelementptr inbounds %struct.sd_switch_caps, %struct.sd_switch_caps* %sw_caps, i32 0, i32 3, !dbg !6139
  %2 = load i32, i32* %sd3_drv_type, align 4, !dbg !6139
  %or = or i32 %2, 1, !dbg !6140
  store i32 %or, i32* %card_drv_type, align 4, !dbg !6141
  %3 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6142
  %4 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6143
  %sw_caps2 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %4, i32 0, i32 24, !dbg !6144
  %uhs_max_dtr = getelementptr inbounds %struct.sd_switch_caps, %struct.sd_switch_caps* %sw_caps2, i32 0, i32 1, !dbg !6145
  %5 = load i32, i32* %uhs_max_dtr, align 4, !dbg !6145
  %6 = load i32, i32* %card_drv_type, align 4, !dbg !6146
  %call = call i32 @mmc_select_drive_strength(%struct.mmc_card* %3, i32 %5, i32 %6, i32* %drv_type) #11, !dbg !6147
  store i32 %call, i32* %drive_strength, align 4, !dbg !6148
  %7 = load i32, i32* %drive_strength, align 4, !dbg !6149
  %tobool = icmp ne i32 %7, 0, !dbg !6149
  br i1 %tobool, label %if.then, label %if.end13, !dbg !6151

if.then:                                          ; preds = %entry
  %8 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6152
  %9 = load i32, i32* %drive_strength, align 4, !dbg !6154
  %conv = trunc i32 %9 to i8, !dbg !6154
  %10 = load i8*, i8** %status.addr, align 8, !dbg !6155
  %call3 = call i32 @mmc_sd_switch(%struct.mmc_card* %8, i32 1, i32 2, i8 zeroext %conv, i8* %10) #11, !dbg !6156
  store i32 %call3, i32* %err, align 4, !dbg !6157
  %11 = load i32, i32* %err, align 4, !dbg !6158
  %tobool4 = icmp ne i32 %11, 0, !dbg !6158
  br i1 %tobool4, label %if.then5, label %if.end, !dbg !6160

if.then5:                                         ; preds = %if.then
  %12 = load i32, i32* %err, align 4, !dbg !6161
  store i32 %12, i32* %retval, align 4, !dbg !6162
  br label %return, !dbg !6162

if.end:                                           ; preds = %if.then
  %13 = load i8*, i8** %status.addr, align 8, !dbg !6163
  %arrayidx = getelementptr i8, i8* %13, i64 15, !dbg !6163
  %14 = load i8, i8* %arrayidx, align 1, !dbg !6163
  %conv6 = zext i8 %14 to i32, !dbg !6163
  %and = and i32 %conv6, 15, !dbg !6165
  %15 = load i32, i32* %drive_strength, align 4, !dbg !6166
  %cmp = icmp ne i32 %and, %15, !dbg !6167
  br i1 %cmp, label %if.then8, label %if.end11, !dbg !6168

if.then8:                                         ; preds = %if.end
  %16 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6169
  %host = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %16, i32 0, i32 0, !dbg !6169
  %17 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !6169
  %class_dev = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %17, i32 0, i32 1, !dbg !6169
  %call9 = call i8* @dev_name(%struct.device* %class_dev) #11, !dbg !6169
  %call10 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.53, i64 0, i64 0), i8* %call9) #12, !dbg !6169
  store i32 0, i32* %retval, align 4, !dbg !6171
  br label %return, !dbg !6171

if.end11:                                         ; preds = %if.end
  %18 = load i32, i32* %drive_strength, align 4, !dbg !6172
  %19 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6173
  %drive_strength12 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %19, i32 0, i32 38, !dbg !6174
  store i32 %18, i32* %drive_strength12, align 8, !dbg !6175
  br label %if.end13, !dbg !6176

if.end13:                                         ; preds = %if.end11, %entry
  %20 = load i32, i32* %drv_type, align 4, !dbg !6177
  %tobool14 = icmp ne i32 %20, 0, !dbg !6177
  br i1 %tobool14, label %if.then15, label %if.end17, !dbg !6179

if.then15:                                        ; preds = %if.end13
  %21 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6180
  %host16 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %21, i32 0, i32 0, !dbg !6181
  %22 = load %struct.mmc_host*, %struct.mmc_host** %host16, align 8, !dbg !6181
  %23 = load i32, i32* %drv_type, align 4, !dbg !6182
  call void @mmc_set_driver_type(%struct.mmc_host* %22, i32 %23) #11, !dbg !6183
  br label %if.end17, !dbg !6183

if.end17:                                         ; preds = %if.then15, %if.end13
  store i32 0, i32* %retval, align 4, !dbg !6184
  br label %return, !dbg !6184

return:                                           ; preds = %if.end17, %if.then8, %if.then5
  %24 = load i32, i32* %retval, align 4, !dbg !6185
  ret i32 %24, !dbg !6185
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @sd_set_current_limit(%struct.mmc_card* %card, i8* %status) #0 !dbg !6186 {
entry:
  %retval = alloca i32, align 4
  %card.addr = alloca %struct.mmc_card*, align 8
  %status.addr = alloca i8*, align 8
  %current_limit = alloca i32, align 4
  %err = alloca i32, align 4
  %max_current = alloca i32, align 4
  store %struct.mmc_card* %card, %struct.mmc_card** %card.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card.addr, metadata !6187, metadata !DIExpression()), !dbg !6188
  store i8* %status, i8** %status.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %status.addr, metadata !6189, metadata !DIExpression()), !dbg !6190
  call void @llvm.dbg.declare(metadata i32* %current_limit, metadata !6191, metadata !DIExpression()), !dbg !6192
  store i32 -1, i32* %current_limit, align 4, !dbg !6192
  call void @llvm.dbg.declare(metadata i32* %err, metadata !6193, metadata !DIExpression()), !dbg !6194
  call void @llvm.dbg.declare(metadata i32* %max_current, metadata !6195, metadata !DIExpression()), !dbg !6196
  %0 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6197
  %sd_bus_speed = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %0, i32 0, i32 36, !dbg !6199
  %1 = load i32, i32* %sd_bus_speed, align 8, !dbg !6199
  %cmp = icmp ne i32 %1, 2, !dbg !6200
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !6201

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6202
  %sd_bus_speed1 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %2, i32 0, i32 36, !dbg !6203
  %3 = load i32, i32* %sd_bus_speed1, align 8, !dbg !6203
  %cmp2 = icmp ne i32 %3, 3, !dbg !6204
  br i1 %cmp2, label %land.lhs.true3, label %if.end, !dbg !6205

land.lhs.true3:                                   ; preds = %land.lhs.true
  %4 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6206
  %sd_bus_speed4 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %4, i32 0, i32 36, !dbg !6207
  %5 = load i32, i32* %sd_bus_speed4, align 8, !dbg !6207
  %cmp5 = icmp ne i32 %5, 4, !dbg !6208
  br i1 %cmp5, label %if.then, label %if.end, !dbg !6209

if.then:                                          ; preds = %land.lhs.true3
  store i32 0, i32* %retval, align 4, !dbg !6210
  br label %return, !dbg !6210

if.end:                                           ; preds = %land.lhs.true3, %land.lhs.true, %entry
  %6 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6211
  %host = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %6, i32 0, i32 0, !dbg !6212
  %7 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !6212
  %call = call i32 @sd_get_host_max_current(%struct.mmc_host* %7) #11, !dbg !6213
  store i32 %call, i32* %max_current, align 4, !dbg !6214
  %8 = load i32, i32* %max_current, align 4, !dbg !6215
  %cmp6 = icmp uge i32 %8, 800, !dbg !6217
  br i1 %cmp6, label %land.lhs.true7, label %if.else, !dbg !6218

land.lhs.true7:                                   ; preds = %if.end
  %9 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6219
  %sw_caps = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %9, i32 0, i32 24, !dbg !6220
  %sd3_curr_limit = getelementptr inbounds %struct.sd_switch_caps, %struct.sd_switch_caps* %sw_caps, i32 0, i32 4, !dbg !6221
  %10 = load i32, i32* %sd3_curr_limit, align 4, !dbg !6221
  %and = and i32 %10, 8, !dbg !6222
  %tobool = icmp ne i32 %and, 0, !dbg !6222
  br i1 %tobool, label %if.then8, label %if.else, !dbg !6223

if.then8:                                         ; preds = %land.lhs.true7
  store i32 3, i32* %current_limit, align 4, !dbg !6224
  br label %if.end35, !dbg !6225

if.else:                                          ; preds = %land.lhs.true7, %if.end
  %11 = load i32, i32* %max_current, align 4, !dbg !6226
  %cmp9 = icmp uge i32 %11, 600, !dbg !6228
  br i1 %cmp9, label %land.lhs.true10, label %if.else16, !dbg !6229

land.lhs.true10:                                  ; preds = %if.else
  %12 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6230
  %sw_caps11 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %12, i32 0, i32 24, !dbg !6231
  %sd3_curr_limit12 = getelementptr inbounds %struct.sd_switch_caps, %struct.sd_switch_caps* %sw_caps11, i32 0, i32 4, !dbg !6232
  %13 = load i32, i32* %sd3_curr_limit12, align 4, !dbg !6232
  %and13 = and i32 %13, 4, !dbg !6233
  %tobool14 = icmp ne i32 %and13, 0, !dbg !6233
  br i1 %tobool14, label %if.then15, label %if.else16, !dbg !6234

if.then15:                                        ; preds = %land.lhs.true10
  store i32 2, i32* %current_limit, align 4, !dbg !6235
  br label %if.end34, !dbg !6236

if.else16:                                        ; preds = %land.lhs.true10, %if.else
  %14 = load i32, i32* %max_current, align 4, !dbg !6237
  %cmp17 = icmp uge i32 %14, 400, !dbg !6239
  br i1 %cmp17, label %land.lhs.true18, label %if.else24, !dbg !6240

land.lhs.true18:                                  ; preds = %if.else16
  %15 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6241
  %sw_caps19 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %15, i32 0, i32 24, !dbg !6242
  %sd3_curr_limit20 = getelementptr inbounds %struct.sd_switch_caps, %struct.sd_switch_caps* %sw_caps19, i32 0, i32 4, !dbg !6243
  %16 = load i32, i32* %sd3_curr_limit20, align 4, !dbg !6243
  %and21 = and i32 %16, 2, !dbg !6244
  %tobool22 = icmp ne i32 %and21, 0, !dbg !6244
  br i1 %tobool22, label %if.then23, label %if.else24, !dbg !6245

if.then23:                                        ; preds = %land.lhs.true18
  store i32 1, i32* %current_limit, align 4, !dbg !6246
  br label %if.end33, !dbg !6247

if.else24:                                        ; preds = %land.lhs.true18, %if.else16
  %17 = load i32, i32* %max_current, align 4, !dbg !6248
  %cmp25 = icmp uge i32 %17, 200, !dbg !6250
  br i1 %cmp25, label %land.lhs.true26, label %if.end32, !dbg !6251

land.lhs.true26:                                  ; preds = %if.else24
  %18 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6252
  %sw_caps27 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %18, i32 0, i32 24, !dbg !6253
  %sd3_curr_limit28 = getelementptr inbounds %struct.sd_switch_caps, %struct.sd_switch_caps* %sw_caps27, i32 0, i32 4, !dbg !6254
  %19 = load i32, i32* %sd3_curr_limit28, align 4, !dbg !6254
  %and29 = and i32 %19, 1, !dbg !6255
  %tobool30 = icmp ne i32 %and29, 0, !dbg !6255
  br i1 %tobool30, label %if.then31, label %if.end32, !dbg !6256

if.then31:                                        ; preds = %land.lhs.true26
  store i32 0, i32* %current_limit, align 4, !dbg !6257
  br label %if.end32, !dbg !6258

if.end32:                                         ; preds = %if.then31, %land.lhs.true26, %if.else24
  br label %if.end33

if.end33:                                         ; preds = %if.end32, %if.then23
  br label %if.end34

if.end34:                                         ; preds = %if.end33, %if.then15
  br label %if.end35

if.end35:                                         ; preds = %if.end34, %if.then8
  %20 = load i32, i32* %current_limit, align 4, !dbg !6259
  %cmp36 = icmp ne i32 %20, -1, !dbg !6261
  br i1 %cmp36, label %if.then37, label %if.end51, !dbg !6262

if.then37:                                        ; preds = %if.end35
  %21 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6263
  %22 = load i32, i32* %current_limit, align 4, !dbg !6265
  %conv = trunc i32 %22 to i8, !dbg !6265
  %23 = load i8*, i8** %status.addr, align 8, !dbg !6266
  %call38 = call i32 @mmc_sd_switch(%struct.mmc_card* %21, i32 1, i32 3, i8 zeroext %conv, i8* %23) #11, !dbg !6267
  store i32 %call38, i32* %err, align 4, !dbg !6268
  %24 = load i32, i32* %err, align 4, !dbg !6269
  %tobool39 = icmp ne i32 %24, 0, !dbg !6269
  br i1 %tobool39, label %if.then40, label %if.end41, !dbg !6271

if.then40:                                        ; preds = %if.then37
  %25 = load i32, i32* %err, align 4, !dbg !6272
  store i32 %25, i32* %retval, align 4, !dbg !6273
  br label %return, !dbg !6273

if.end41:                                         ; preds = %if.then37
  %26 = load i8*, i8** %status.addr, align 8, !dbg !6274
  %arrayidx = getelementptr i8, i8* %26, i64 15, !dbg !6274
  %27 = load i8, i8* %arrayidx, align 1, !dbg !6274
  %conv42 = zext i8 %27 to i32, !dbg !6274
  %shr = ashr i32 %conv42, 4, !dbg !6276
  %and43 = and i32 %shr, 15, !dbg !6277
  %28 = load i32, i32* %current_limit, align 4, !dbg !6278
  %cmp44 = icmp ne i32 %and43, %28, !dbg !6279
  br i1 %cmp44, label %if.then46, label %if.end50, !dbg !6280

if.then46:                                        ; preds = %if.end41
  %29 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6281
  %host47 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %29, i32 0, i32 0, !dbg !6281
  %30 = load %struct.mmc_host*, %struct.mmc_host** %host47, align 8, !dbg !6281
  %class_dev = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %30, i32 0, i32 1, !dbg !6281
  %call48 = call i8* @dev_name(%struct.device* %class_dev) #11, !dbg !6281
  %call49 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.54, i64 0, i64 0), i8* %call48) #12, !dbg !6281
  br label %if.end50, !dbg !6281

if.end50:                                         ; preds = %if.then46, %if.end41
  br label %if.end51, !dbg !6282

if.end51:                                         ; preds = %if.end50, %if.end35
  store i32 0, i32* %retval, align 4, !dbg !6283
  br label %return, !dbg !6283

return:                                           ; preds = %if.end51, %if.then40, %if.then
  %31 = load i32, i32* %retval, align 4, !dbg !6284
  ret i32 %31, !dbg !6284
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @sd_set_bus_speed_mode(%struct.mmc_card* %card, i8* %status) #0 !dbg !6285 {
entry:
  %retval = alloca i32, align 4
  %card.addr = alloca %struct.mmc_card*, align 8
  %status.addr = alloca i8*, align 8
  %err = alloca i32, align 4
  %timing = alloca i32, align 4
  store %struct.mmc_card* %card, %struct.mmc_card** %card.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card.addr, metadata !6286, metadata !DIExpression()), !dbg !6287
  store i8* %status, i8** %status.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %status.addr, metadata !6288, metadata !DIExpression()), !dbg !6289
  call void @llvm.dbg.declare(metadata i32* %err, metadata !6290, metadata !DIExpression()), !dbg !6291
  call void @llvm.dbg.declare(metadata i32* %timing, metadata !6292, metadata !DIExpression()), !dbg !6293
  store i32 0, i32* %timing, align 4, !dbg !6293
  %0 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6294
  %sd_bus_speed = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %0, i32 0, i32 36, !dbg !6295
  %1 = load i32, i32* %sd_bus_speed, align 8, !dbg !6295
  switch i32 %1, label %sw.default [
    i32 3, label %sw.bb
    i32 4, label %sw.bb1
    i32 2, label %sw.bb4
    i32 1, label %sw.bb7
    i32 0, label %sw.bb10
  ], !dbg !6296

sw.bb:                                            ; preds = %entry
  store i32 6, i32* %timing, align 4, !dbg !6297
  %2 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6299
  %sw_caps = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %2, i32 0, i32 24, !dbg !6300
  %uhs_max_dtr = getelementptr inbounds %struct.sd_switch_caps, %struct.sd_switch_caps* %sw_caps, i32 0, i32 1, !dbg !6301
  store i32 208000000, i32* %uhs_max_dtr, align 4, !dbg !6302
  br label %sw.epilog, !dbg !6303

sw.bb1:                                           ; preds = %entry
  store i32 7, i32* %timing, align 4, !dbg !6304
  %3 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6305
  %sw_caps2 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %3, i32 0, i32 24, !dbg !6306
  %uhs_max_dtr3 = getelementptr inbounds %struct.sd_switch_caps, %struct.sd_switch_caps* %sw_caps2, i32 0, i32 1, !dbg !6307
  store i32 50000000, i32* %uhs_max_dtr3, align 4, !dbg !6308
  br label %sw.epilog, !dbg !6309

sw.bb4:                                           ; preds = %entry
  store i32 5, i32* %timing, align 4, !dbg !6310
  %4 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6311
  %sw_caps5 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %4, i32 0, i32 24, !dbg !6312
  %uhs_max_dtr6 = getelementptr inbounds %struct.sd_switch_caps, %struct.sd_switch_caps* %sw_caps5, i32 0, i32 1, !dbg !6313
  store i32 100000000, i32* %uhs_max_dtr6, align 4, !dbg !6314
  br label %sw.epilog, !dbg !6315

sw.bb7:                                           ; preds = %entry
  store i32 4, i32* %timing, align 4, !dbg !6316
  %5 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6317
  %sw_caps8 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %5, i32 0, i32 24, !dbg !6318
  %uhs_max_dtr9 = getelementptr inbounds %struct.sd_switch_caps, %struct.sd_switch_caps* %sw_caps8, i32 0, i32 1, !dbg !6319
  store i32 50000000, i32* %uhs_max_dtr9, align 4, !dbg !6320
  br label %sw.epilog, !dbg !6321

sw.bb10:                                          ; preds = %entry
  store i32 3, i32* %timing, align 4, !dbg !6322
  %6 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6323
  %sw_caps11 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %6, i32 0, i32 24, !dbg !6324
  %uhs_max_dtr12 = getelementptr inbounds %struct.sd_switch_caps, %struct.sd_switch_caps* %sw_caps11, i32 0, i32 1, !dbg !6325
  store i32 25000000, i32* %uhs_max_dtr12, align 4, !dbg !6326
  br label %sw.epilog, !dbg !6327

sw.default:                                       ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !6328
  br label %return, !dbg !6328

sw.epilog:                                        ; preds = %sw.bb10, %sw.bb7, %sw.bb4, %sw.bb1, %sw.bb
  %7 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6329
  %8 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6330
  %sd_bus_speed13 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %8, i32 0, i32 36, !dbg !6331
  %9 = load i32, i32* %sd_bus_speed13, align 8, !dbg !6331
  %conv = trunc i32 %9 to i8, !dbg !6330
  %10 = load i8*, i8** %status.addr, align 8, !dbg !6332
  %call = call i32 @mmc_sd_switch(%struct.mmc_card* %7, i32 1, i32 0, i8 zeroext %conv, i8* %10) #11, !dbg !6333
  store i32 %call, i32* %err, align 4, !dbg !6334
  %11 = load i32, i32* %err, align 4, !dbg !6335
  %tobool = icmp ne i32 %11, 0, !dbg !6335
  br i1 %tobool, label %if.then, label %if.end, !dbg !6337

if.then:                                          ; preds = %sw.epilog
  %12 = load i32, i32* %err, align 4, !dbg !6338
  store i32 %12, i32* %retval, align 4, !dbg !6339
  br label %return, !dbg !6339

if.end:                                           ; preds = %sw.epilog
  %13 = load i8*, i8** %status.addr, align 8, !dbg !6340
  %arrayidx = getelementptr i8, i8* %13, i64 16, !dbg !6340
  %14 = load i8, i8* %arrayidx, align 1, !dbg !6340
  %conv14 = zext i8 %14 to i32, !dbg !6340
  %and = and i32 %conv14, 15, !dbg !6342
  %15 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6343
  %sd_bus_speed15 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %15, i32 0, i32 36, !dbg !6344
  %16 = load i32, i32* %sd_bus_speed15, align 8, !dbg !6344
  %cmp = icmp ne i32 %and, %16, !dbg !6345
  br i1 %cmp, label %if.then17, label %if.else, !dbg !6346

if.then17:                                        ; preds = %if.end
  %17 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6347
  %host = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %17, i32 0, i32 0, !dbg !6347
  %18 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !6347
  %class_dev = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %18, i32 0, i32 1, !dbg !6347
  %call18 = call i8* @dev_name(%struct.device* %class_dev) #11, !dbg !6347
  %call19 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.55, i64 0, i64 0), i8* %call18) #12, !dbg !6347
  br label %if.end24, !dbg !6347

if.else:                                          ; preds = %if.end
  %19 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6348
  %host20 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %19, i32 0, i32 0, !dbg !6350
  %20 = load %struct.mmc_host*, %struct.mmc_host** %host20, align 8, !dbg !6350
  %21 = load i32, i32* %timing, align 4, !dbg !6351
  call void @mmc_set_timing(%struct.mmc_host* %20, i32 %21) #11, !dbg !6352
  %22 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6353
  %host21 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %22, i32 0, i32 0, !dbg !6354
  %23 = load %struct.mmc_host*, %struct.mmc_host** %host21, align 8, !dbg !6354
  %24 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6355
  %sw_caps22 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %24, i32 0, i32 24, !dbg !6356
  %uhs_max_dtr23 = getelementptr inbounds %struct.sd_switch_caps, %struct.sd_switch_caps* %sw_caps22, i32 0, i32 1, !dbg !6357
  %25 = load i32, i32* %uhs_max_dtr23, align 4, !dbg !6357
  call void @mmc_set_clock(%struct.mmc_host* %23, i32 %25) #11, !dbg !6358
  br label %if.end24

if.end24:                                         ; preds = %if.else, %if.then17
  store i32 0, i32* %retval, align 4, !dbg !6359
  br label %return, !dbg !6359

return:                                           ; preds = %if.end24, %if.then, %sw.default
  %26 = load i32, i32* %retval, align 4, !dbg !6360
  ret i32 %26, !dbg !6360
}

; Function Attrs: noredzone
declare dso_local i32 @mmc_execute_tuning(%struct.mmc_card*) #2

; Function Attrs: noredzone
declare dso_local i32 @mmc_select_drive_strength(%struct.mmc_card*, i32, i32, i32*) #2

; Function Attrs: noredzone
declare dso_local void @mmc_set_driver_type(%struct.mmc_host*, i32) #2

; Function Attrs: noredzone
declare dso_local i32 @__mmc_claim_host(%struct.mmc_host*, %struct.mmc_ctx*, %struct.atomic_t*) #2

attributes #0 = { noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { cold noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone willreturn }
attributes #5 = { nounwind willreturn }
attributes #6 = { noinline noredzone nounwind optnone readnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { argmemonly nounwind willreturn }
attributes #8 = { nounwind }
attributes #9 = { noredzone nounwind readnone }
attributes #10 = { noredzone nounwind }
attributes #11 = { noredzone }
attributes #12 = { cold noredzone }
attributes #13 = { nounwind readonly }
attributes #14 = { nounwind readnone }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!2502, !2503, !2504, !2505}
!llvm.ident = !{!2506}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "sd_std_groups", scope: !2, file: !3, line: 783, type: !2501, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C89, file: !3, producer: "clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !62, globals: !2416, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "drivers/mmc/core/sd.c", directory: "/home/lizy2001/genbc/linux")
!4 = !{!5, !11, !17, !23, !29, !36, !44, !50, !57}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "hrtimer_restart", file: !6, line: 65, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./include/linux/hrtimer.h", directory: "/home/lizy2001/genbc/linux")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10}
!9 = !DIEnumerator(name: "HRTIMER_NORESTART", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "HRTIMER_RESTART", value: 1, isUnsigned: true)
!11 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "timespec_type", file: !12, line: 16, baseType: !7, size: 32, elements: !13)
!12 = !DIFile(filename: "./include/linux/restart_block.h", directory: "/home/lizy2001/genbc/linux")
!13 = !{!14, !15, !16}
!14 = !DIEnumerator(name: "TT_NONE", value: 0, isUnsigned: true)
!15 = !DIEnumerator(name: "TT_NATIVE", value: 1, isUnsigned: true)
!16 = !DIEnumerator(name: "TT_COMPAT", value: 2, isUnsigned: true)
!17 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kobj_ns_type", file: !18, line: 26, baseType: !7, size: 32, elements: !19)
!18 = !DIFile(filename: "./include/linux/kobject_ns.h", directory: "/home/lizy2001/genbc/linux")
!19 = !{!20, !21, !22}
!20 = !DIEnumerator(name: "KOBJ_NS_TYPE_NONE", value: 0, isUnsigned: true)
!21 = !DIEnumerator(name: "KOBJ_NS_TYPE_NET", value: 1, isUnsigned: true)
!22 = !DIEnumerator(name: "KOBJ_NS_TYPES", value: 2, isUnsigned: true)
!23 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "probe_type", file: !24, line: 44, baseType: !7, size: 32, elements: !25)
!24 = !DIFile(filename: "./include/linux/device/driver.h", directory: "/home/lizy2001/genbc/linux")
!25 = !{!26, !27, !28}
!26 = !DIEnumerator(name: "PROBE_DEFAULT_STRATEGY", value: 0, isUnsigned: true)
!27 = !DIEnumerator(name: "PROBE_PREFER_ASYNCHRONOUS", value: 1, isUnsigned: true)
!28 = !DIEnumerator(name: "PROBE_FORCE_SYNCHRONOUS", value: 2, isUnsigned: true)
!29 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dl_dev_state", file: !30, line: 343, baseType: !7, size: 32, elements: !31)
!30 = !DIFile(filename: "./include/linux/device.h", directory: "/home/lizy2001/genbc/linux")
!31 = !{!32, !33, !34, !35}
!32 = !DIEnumerator(name: "DL_DEV_NO_DRIVER", value: 0, isUnsigned: true)
!33 = !DIEnumerator(name: "DL_DEV_PROBING", value: 1, isUnsigned: true)
!34 = !DIEnumerator(name: "DL_DEV_DRIVER_BOUND", value: 2, isUnsigned: true)
!35 = !DIEnumerator(name: "DL_DEV_UNBINDING", value: 3, isUnsigned: true)
!36 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_request", file: !37, line: 524, baseType: !7, size: 32, elements: !38)
!37 = !DIFile(filename: "./include/linux/pm.h", directory: "/home/lizy2001/genbc/linux")
!38 = !{!39, !40, !41, !42, !43}
!39 = !DIEnumerator(name: "RPM_REQ_NONE", value: 0, isUnsigned: true)
!40 = !DIEnumerator(name: "RPM_REQ_IDLE", value: 1, isUnsigned: true)
!41 = !DIEnumerator(name: "RPM_REQ_SUSPEND", value: 2, isUnsigned: true)
!42 = !DIEnumerator(name: "RPM_REQ_AUTOSUSPEND", value: 3, isUnsigned: true)
!43 = !DIEnumerator(name: "RPM_REQ_RESUME", value: 4, isUnsigned: true)
!44 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_status", file: !37, line: 502, baseType: !7, size: 32, elements: !45)
!45 = !{!46, !47, !48, !49}
!46 = !DIEnumerator(name: "RPM_ACTIVE", value: 0, isUnsigned: true)
!47 = !DIEnumerator(name: "RPM_RESUMING", value: 1, isUnsigned: true)
!48 = !DIEnumerator(name: "RPM_SUSPENDED", value: 2, isUnsigned: true)
!49 = !DIEnumerator(name: "RPM_SUSPENDING", value: 3, isUnsigned: true)
!50 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kmalloc_cache_type", file: !51, line: 305, baseType: !7, size: 32, elements: !52)
!51 = !DIFile(filename: "./include/linux/slab.h", directory: "/home/lizy2001/genbc/linux")
!52 = !{!53, !54, !55, !56}
!53 = !DIEnumerator(name: "KMALLOC_NORMAL", value: 0, isUnsigned: true)
!54 = !DIEnumerator(name: "KMALLOC_RECLAIM", value: 1, isUnsigned: true)
!55 = !DIEnumerator(name: "KMALLOC_DMA", value: 2, isUnsigned: true)
!56 = !DIEnumerator(name: "NR_KMALLOC_TYPES", value: 3, isUnsigned: true)
!57 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !58, line: 10, baseType: !7, size: 32, elements: !59)
!58 = !DIFile(filename: "./include/linux/stddef.h", directory: "/home/lizy2001/genbc/linux")
!59 = !{!60, !61}
!60 = !DIEnumerator(name: "false", value: 0, isUnsigned: true)
!61 = !DIEnumerator(name: "true", value: 1, isUnsigned: true)
!62 = !{!63, !7, !65, !66, !76, !401, !2415, !193, !178}
!63 = !DIDerivedType(tag: DW_TAG_typedef, name: "gfp_t", file: !64, line: 148, baseType: !7)
!64 = !DIFile(filename: "./include/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!65 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!66 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !67, size: 64)
!67 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mmc_card", file: !68, line: 244, size: 12672, elements: !69)
!68 = !DIFile(filename: "./include/linux/mmc/card.h", directory: "/home/lizy2001/genbc/linux")
!69 = !{!70, !2207, !2208, !2209, !2210, !2211, !2212, !2213, !2214, !2215, !2216, !2217, !2218, !2219, !2220, !2221, !2222, !2223, !2225, !2227, !2239, !2259, !2340, !2349, !2355, !2363, !2364, !2365, !2376, !2383, !2389, !2390, !2391, !2392, !2393, !2395, !2398, !2399, !2400, !2401, !2402, !2412, !2413, !2414}
!70 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !67, file: !68, line: 245, baseType: !71, size: 64)
!71 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !72, size: 64)
!72 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mmc_host", file: !73, line: 275, size: 10752, elements: !74)
!73 = !DIFile(filename: "./include/linux/mmc/host.h", directory: "/home/lizy2001/genbc/linux")
!74 = !{!75, !1925, !1926, !1927, !2054, !2057, !2058, !2059, !2060, !2061, !2062, !2063, !2064, !2076, !2077, !2078, !2079, !2080, !2081, !2082, !2083, !2086, !2087, !2088, !2089, !2090, !2091, !2092, !2093, !2094, !2095, !2096, !2097, !2098, !2099, !2100, !2101, !2102, !2103, !2104, !2105, !2106, !2107, !2108, !2109, !2110, !2111, !2112, !2113, !2114, !2115, !2120, !2121, !2122, !2131, !2132, !2138, !2155, !2156, !2157, !2158, !2159, !2160, !2161, !2162, !2165, !2172, !2175, !2176, !2177, !2178, !2179, !2180, !2201, !2202, !2203, !2204, !2205, !2206}
!75 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !72, file: !73, line: 276, baseType: !76, size: 64)
!76 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !77, size: 64)
!77 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !30, line: 461, size: 5568, elements: !78)
!78 = !{!79, !1558, !1559, !1562, !1563, !1614, !1711, !1712, !1713, !1714, !1715, !1724, !1829, !1842, !1845, !1846, !1850, !1852, !1853, !1854, !1858, !1864, !1865, !1868, !1872, !1875, !1878, !1879, !1880, !1881, !1913, !1914, !1915, !1918, !1921, !1922, !1923, !1924}
!79 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !77, file: !30, line: 462, baseType: !80, size: 512)
!80 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobject", file: !81, line: 64, size: 512, elements: !82)
!81 = !DIFile(filename: "./include/linux/kobject.h", directory: "/home/lizy2001/genbc/linux")
!82 = !{!83, !87, !93, !95, !156, !1395, !1548, !1553, !1554, !1555, !1556, !1557}
!83 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !80, file: !81, line: 65, baseType: !84, size: 64)
!84 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !85, size: 64)
!85 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !86)
!86 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!87 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !80, file: !81, line: 66, baseType: !88, size: 128, offset: 64)
!88 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_head", file: !64, line: 178, size: 128, elements: !89)
!89 = !{!90, !92}
!90 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !88, file: !64, line: 179, baseType: !91, size: 64)
!91 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !88, size: 64)
!92 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !88, file: !64, line: 179, baseType: !91, size: 64, offset: 64)
!93 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !80, file: !81, line: 67, baseType: !94, size: 64, offset: 192)
!94 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !80, size: 64)
!95 = !DIDerivedType(tag: DW_TAG_member, name: "kset", scope: !80, file: !81, line: 68, baseType: !96, size: 64, offset: 256)
!96 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !97, size: 64)
!97 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset", file: !81, line: 192, size: 704, elements: !98)
!98 = !{!99, !100, !116, !117}
!99 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !97, file: !81, line: 193, baseType: !88, size: 128)
!100 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !97, file: !81, line: 194, baseType: !101, offset: 128)
!101 = !DIDerivedType(tag: DW_TAG_typedef, name: "spinlock_t", file: !102, line: 83, baseType: !103)
!102 = !DIFile(filename: "./include/linux/spinlock_types.h", directory: "/home/lizy2001/genbc/linux")
!103 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spinlock", file: !102, line: 71, elements: !104)
!104 = !{!105}
!105 = !DIDerivedType(tag: DW_TAG_member, scope: !103, file: !102, line: 72, baseType: !106)
!106 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !103, file: !102, line: 72, elements: !107)
!107 = !{!108}
!108 = !DIDerivedType(tag: DW_TAG_member, name: "rlock", scope: !106, file: !102, line: 73, baseType: !109)
!109 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raw_spinlock", file: !102, line: 20, elements: !110)
!110 = !{!111}
!111 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !109, file: !102, line: 21, baseType: !112)
!112 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_spinlock_t", file: !113, line: 25, baseType: !114)
!113 = !DIFile(filename: "./include/linux/spinlock_types_up.h", directory: "/home/lizy2001/genbc/linux")
!114 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !113, line: 25, elements: !115)
!115 = !{}
!116 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !97, file: !81, line: 195, baseType: !80, size: 512, offset: 128)
!117 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_ops", scope: !97, file: !81, line: 196, baseType: !118, size: 64, offset: 640)
!118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !119, size: 64)
!119 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !120)
!120 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset_uevent_ops", file: !81, line: 156, size: 192, elements: !121)
!121 = !{!122, !128, !133}
!122 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !120, file: !81, line: 157, baseType: !123, size: 64)
!123 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !124)
!124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !125, size: 64)
!125 = !DISubroutineType(types: !126)
!126 = !{!127, !96, !94}
!127 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!128 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !120, file: !81, line: 158, baseType: !129, size: 64, offset: 64)
!129 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !130)
!130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !131, size: 64)
!131 = !DISubroutineType(types: !132)
!132 = !{!84, !96, !94}
!133 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !120, file: !81, line: 159, baseType: !134, size: 64, offset: 128)
!134 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !135)
!135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !136, size: 64)
!136 = !DISubroutineType(types: !137)
!137 = !{!127, !96, !94, !138}
!138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !139, size: 64)
!139 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_uevent_env", file: !81, line: 148, size: 20736, elements: !140)
!140 = !{!141, !146, !150, !151, !155}
!141 = !DIDerivedType(tag: DW_TAG_member, name: "argv", scope: !139, file: !81, line: 149, baseType: !142, size: 192)
!142 = !DICompositeType(tag: DW_TAG_array_type, baseType: !143, size: 192, elements: !144)
!143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !86, size: 64)
!144 = !{!145}
!145 = !DISubrange(count: 3)
!146 = !DIDerivedType(tag: DW_TAG_member, name: "envp", scope: !139, file: !81, line: 150, baseType: !147, size: 4096, offset: 192)
!147 = !DICompositeType(tag: DW_TAG_array_type, baseType: !143, size: 4096, elements: !148)
!148 = !{!149}
!149 = !DISubrange(count: 64)
!150 = !DIDerivedType(tag: DW_TAG_member, name: "envp_idx", scope: !139, file: !81, line: 151, baseType: !127, size: 32, offset: 4288)
!151 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !139, file: !81, line: 152, baseType: !152, size: 16384, offset: 4320)
!152 = !DICompositeType(tag: DW_TAG_array_type, baseType: !86, size: 16384, elements: !153)
!153 = !{!154}
!154 = !DISubrange(count: 2048)
!155 = !DIDerivedType(tag: DW_TAG_member, name: "buflen", scope: !139, file: !81, line: 153, baseType: !127, size: 32, offset: 20704)
!156 = !DIDerivedType(tag: DW_TAG_member, name: "ktype", scope: !80, file: !81, line: 69, baseType: !157, size: 64, offset: 320)
!157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !158, size: 64)
!158 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_type", file: !81, line: 138, size: 448, elements: !159)
!159 = !{!160, !164, !194, !196, !1340, !1373, !1377}
!160 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !158, file: !81, line: 139, baseType: !161, size: 64)
!161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !162, size: 64)
!162 = !DISubroutineType(types: !163)
!163 = !{null, !94}
!164 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_ops", scope: !158, file: !81, line: 140, baseType: !165, size: 64, offset: 64)
!165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !166, size: 64)
!166 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !167)
!167 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sysfs_ops", file: !168, line: 230, size: 128, elements: !169)
!168 = !DIFile(filename: "./include/linux/sysfs.h", directory: "/home/lizy2001/genbc/linux")
!169 = !{!170, !186}
!170 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !167, file: !168, line: 231, baseType: !171, size: 64)
!171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !172, size: 64)
!172 = !DISubroutineType(types: !173)
!173 = !{!174, !94, !179, !143}
!174 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !64, line: 60, baseType: !175)
!175 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ssize_t", file: !176, line: 73, baseType: !177)
!176 = !DIFile(filename: "./include/uapi/asm-generic/posix_types.h", directory: "/home/lizy2001/genbc/linux")
!177 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_long_t", file: !176, line: 15, baseType: !178)
!178 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !180, size: 64)
!180 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute", file: !168, line: 30, size: 128, elements: !181)
!181 = !{!182, !183}
!182 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !180, file: !168, line: 31, baseType: !84, size: 64)
!183 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !180, file: !168, line: 32, baseType: !184, size: 16, offset: 64)
!184 = !DIDerivedType(tag: DW_TAG_typedef, name: "umode_t", file: !64, line: 19, baseType: !185)
!185 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!186 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !167, file: !168, line: 232, baseType: !187, size: 64, offset: 64)
!187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !188, size: 64)
!188 = !DISubroutineType(types: !189)
!189 = !{!174, !94, !179, !84, !190}
!190 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !64, line: 55, baseType: !191)
!191 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_size_t", file: !176, line: 72, baseType: !192)
!192 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ulong_t", file: !176, line: 16, baseType: !193)
!193 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!194 = !DIDerivedType(tag: DW_TAG_member, name: "default_attrs", scope: !158, file: !81, line: 141, baseType: !195, size: 64, offset: 128)
!195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !179, size: 64)
!196 = !DIDerivedType(tag: DW_TAG_member, name: "default_groups", scope: !158, file: !81, line: 142, baseType: !197, size: 64, offset: 192)
!197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !198, size: 64)
!198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !199, size: 64)
!199 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !200)
!200 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute_group", file: !168, line: 84, size: 320, elements: !201)
!201 = !{!202, !203, !207, !1337, !1338}
!202 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !200, file: !168, line: 85, baseType: !84, size: 64)
!203 = !DIDerivedType(tag: DW_TAG_member, name: "is_visible", scope: !200, file: !168, line: 86, baseType: !204, size: 64, offset: 64)
!204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !205, size: 64)
!205 = !DISubroutineType(types: !206)
!206 = !{!184, !94, !179, !127}
!207 = !DIDerivedType(tag: DW_TAG_member, name: "is_bin_visible", scope: !200, file: !168, line: 88, baseType: !208, size: 64, offset: 128)
!208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !209, size: 64)
!209 = !DISubroutineType(types: !210)
!210 = !{!184, !94, !211, !127}
!211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !212, size: 64)
!212 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bin_attribute", file: !168, line: 168, size: 448, elements: !213)
!213 = !{!214, !215, !216, !217, !227, !228}
!214 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !212, file: !168, line: 169, baseType: !180, size: 128)
!215 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !212, file: !168, line: 170, baseType: !190, size: 64, offset: 128)
!216 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !212, file: !168, line: 171, baseType: !65, size: 64, offset: 192)
!217 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !212, file: !168, line: 172, baseType: !218, size: 64, offset: 256)
!218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !219, size: 64)
!219 = !DISubroutineType(types: !220)
!220 = !{!174, !221, !94, !211, !143, !224, !190}
!221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !222, size: 64)
!222 = !DICompositeType(tag: DW_TAG_structure_type, name: "file", file: !223, line: 526, flags: DIFlagFwdDecl)
!223 = !DIFile(filename: "./arch/x86/include/asm/pgtable_types.h", directory: "/home/lizy2001/genbc/linux")
!224 = !DIDerivedType(tag: DW_TAG_typedef, name: "loff_t", file: !64, line: 46, baseType: !225)
!225 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_loff_t", file: !176, line: 88, baseType: !226)
!226 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!227 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !212, file: !168, line: 174, baseType: !218, size: 64, offset: 320)
!228 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !212, file: !168, line: 176, baseType: !229, size: 64, offset: 384)
!229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !230, size: 64)
!230 = !DISubroutineType(types: !231)
!231 = !{!127, !221, !94, !211, !232}
!232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !233, size: 64)
!233 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_area_struct", file: !234, line: 305, size: 1472, elements: !235)
!234 = !DIFile(filename: "./include/linux/mm_types.h", directory: "/home/lizy2001/genbc/linux")
!235 = !{!236, !237, !238, !239, !240, !248, !249, !1311, !1317, !1318, !1323, !1324, !1327, !1331, !1332, !1333, !1334, !1335}
!236 = !DIDerivedType(tag: DW_TAG_member, name: "vm_start", scope: !233, file: !234, line: 308, baseType: !193, size: 64)
!237 = !DIDerivedType(tag: DW_TAG_member, name: "vm_end", scope: !233, file: !234, line: 309, baseType: !193, size: 64, offset: 64)
!238 = !DIDerivedType(tag: DW_TAG_member, name: "vm_next", scope: !233, file: !234, line: 313, baseType: !232, size: 64, offset: 128)
!239 = !DIDerivedType(tag: DW_TAG_member, name: "vm_prev", scope: !233, file: !234, line: 313, baseType: !232, size: 64, offset: 192)
!240 = !DIDerivedType(tag: DW_TAG_member, name: "vm_rb", scope: !233, file: !234, line: 315, baseType: !241, size: 192, align: 64, offset: 256)
!241 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_node", file: !242, line: 24, size: 192, align: 64, elements: !243)
!242 = !DIFile(filename: "./include/linux/rbtree.h", directory: "/home/lizy2001/genbc/linux")
!243 = !{!244, !245, !247}
!244 = !DIDerivedType(tag: DW_TAG_member, name: "__rb_parent_color", scope: !241, file: !242, line: 25, baseType: !193, size: 64)
!245 = !DIDerivedType(tag: DW_TAG_member, name: "rb_right", scope: !241, file: !242, line: 26, baseType: !246, size: 64, offset: 64)
!246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !241, size: 64)
!247 = !DIDerivedType(tag: DW_TAG_member, name: "rb_left", scope: !241, file: !242, line: 27, baseType: !246, size: 64, offset: 128)
!248 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_gap", scope: !233, file: !234, line: 323, baseType: !193, size: 64, offset: 448)
!249 = !DIDerivedType(tag: DW_TAG_member, name: "vm_mm", scope: !233, file: !234, line: 327, baseType: !250, size: 64, offset: 512)
!250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !251, size: 64)
!251 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_struct", file: !234, line: 388, size: 7296, elements: !252)
!252 = !{!253, !1307}
!253 = !DIDerivedType(tag: DW_TAG_member, scope: !251, file: !234, line: 389, baseType: !254, size: 7296)
!254 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !251, file: !234, line: 389, size: 7296, elements: !255)
!255 = !{!256, !257, !261, !267, !271, !272, !273, !274, !275, !283, !288, !289, !290, !291, !300, !301, !302, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !337, !345, !348, !380, !381, !1278, !1279, !1282, !1285, !1286, !1289, !1290, !1291, !1294, !1306}
!256 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !254, file: !234, line: 390, baseType: !232, size: 64)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "mm_rb", scope: !254, file: !234, line: 391, baseType: !258, size: 64, offset: 64)
!258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root", file: !242, line: 31, size: 64, elements: !259)
!259 = !{!260}
!260 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !258, file: !242, line: 32, baseType: !246, size: 64)
!261 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache_seqnum", scope: !254, file: !234, line: 392, baseType: !262, size: 64, offset: 128)
!262 = !DIDerivedType(tag: DW_TAG_typedef, name: "u64", file: !263, line: 23, baseType: !264)
!263 = !DIFile(filename: "./include/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!264 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u64", file: !265, line: 31, baseType: !266)
!265 = !DIFile(filename: "./include/uapi/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!266 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!267 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !254, file: !234, line: 394, baseType: !268, size: 64, offset: 192)
!268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !269, size: 64)
!269 = !DISubroutineType(types: !270)
!270 = !{!193, !221, !193, !193, !193, !193}
!271 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_base", scope: !254, file: !234, line: 398, baseType: !193, size: 64, offset: 256)
!272 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_legacy_base", scope: !254, file: !234, line: 399, baseType: !193, size: 64, offset: 320)
!273 = !DIDerivedType(tag: DW_TAG_member, name: "task_size", scope: !254, file: !234, line: 405, baseType: !193, size: 64, offset: 384)
!274 = !DIDerivedType(tag: DW_TAG_member, name: "highest_vm_end", scope: !254, file: !234, line: 406, baseType: !193, size: 64, offset: 448)
!275 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !254, file: !234, line: 407, baseType: !276, size: 64, offset: 512)
!276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !277, size: 64)
!277 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgd_t", file: !223, line: 286, baseType: !278)
!278 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 286, size: 64, elements: !279)
!279 = !{!280}
!280 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !278, file: !223, line: 286, baseType: !281, size: 64)
!281 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgdval_t", file: !282, line: 18, baseType: !193)
!282 = !DIFile(filename: "./arch/x86/include/asm/pgtable_64_types.h", directory: "/home/lizy2001/genbc/linux")
!283 = !DIDerivedType(tag: DW_TAG_member, name: "membarrier_state", scope: !254, file: !234, line: 416, baseType: !284, size: 32, offset: 576)
!284 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !64, line: 168, baseType: !285)
!285 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !64, line: 166, size: 32, elements: !286)
!286 = !{!287}
!287 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !285, file: !64, line: 167, baseType: !127, size: 32)
!288 = !DIDerivedType(tag: DW_TAG_member, name: "mm_users", scope: !254, file: !234, line: 428, baseType: !284, size: 32, offset: 608)
!289 = !DIDerivedType(tag: DW_TAG_member, name: "mm_count", scope: !254, file: !234, line: 437, baseType: !284, size: 32, offset: 640)
!290 = !DIDerivedType(tag: DW_TAG_member, name: "has_pinned", scope: !254, file: !234, line: 447, baseType: !284, size: 32, offset: 672)
!291 = !DIDerivedType(tag: DW_TAG_member, name: "pgtables_bytes", scope: !254, file: !234, line: 450, baseType: !292, size: 64, offset: 704)
!292 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_long_t", file: !293, line: 13, baseType: !294)
!293 = !DIFile(filename: "./include/asm-generic/atomic-long.h", directory: "/home/lizy2001/genbc/linux")
!294 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic64_t", file: !64, line: 175, baseType: !295)
!295 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !64, line: 173, size: 64, elements: !296)
!296 = !{!297}
!297 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !295, file: !64, line: 174, baseType: !298, size: 64)
!298 = !DIDerivedType(tag: DW_TAG_typedef, name: "s64", file: !263, line: 22, baseType: !299)
!299 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s64", file: !265, line: 30, baseType: !226)
!300 = !DIDerivedType(tag: DW_TAG_member, name: "map_count", scope: !254, file: !234, line: 452, baseType: !127, size: 32, offset: 768)
!301 = !DIDerivedType(tag: DW_TAG_member, name: "page_table_lock", scope: !254, file: !234, line: 454, baseType: !101, offset: 800)
!302 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_lock", scope: !254, file: !234, line: 457, baseType: !303, size: 256, offset: 832)
!303 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rw_semaphore", file: !304, line: 35, size: 256, elements: !305)
!304 = !DIFile(filename: "./include/linux/rwsem.h", directory: "/home/lizy2001/genbc/linux")
!305 = !{!306, !307, !308, !310}
!306 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !303, file: !304, line: 36, baseType: !292, size: 64)
!307 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !303, file: !304, line: 42, baseType: !292, size: 64, offset: 64)
!308 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !303, file: !304, line: 46, baseType: !309, offset: 128)
!309 = !DIDerivedType(tag: DW_TAG_typedef, name: "raw_spinlock_t", file: !102, line: 29, baseType: !109)
!310 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !303, file: !304, line: 47, baseType: !88, size: 128, offset: 128)
!311 = !DIDerivedType(tag: DW_TAG_member, name: "mmlist", scope: !254, file: !234, line: 459, baseType: !88, size: 128, offset: 1088)
!312 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_rss", scope: !254, file: !234, line: 466, baseType: !193, size: 64, offset: 1216)
!313 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_vm", scope: !254, file: !234, line: 467, baseType: !193, size: 64, offset: 1280)
!314 = !DIDerivedType(tag: DW_TAG_member, name: "total_vm", scope: !254, file: !234, line: 469, baseType: !193, size: 64, offset: 1344)
!315 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !254, file: !234, line: 470, baseType: !193, size: 64, offset: 1408)
!316 = !DIDerivedType(tag: DW_TAG_member, name: "pinned_vm", scope: !254, file: !234, line: 471, baseType: !294, size: 64, offset: 1472)
!317 = !DIDerivedType(tag: DW_TAG_member, name: "data_vm", scope: !254, file: !234, line: 472, baseType: !193, size: 64, offset: 1536)
!318 = !DIDerivedType(tag: DW_TAG_member, name: "exec_vm", scope: !254, file: !234, line: 473, baseType: !193, size: 64, offset: 1600)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm", scope: !254, file: !234, line: 474, baseType: !193, size: 64, offset: 1664)
!320 = !DIDerivedType(tag: DW_TAG_member, name: "def_flags", scope: !254, file: !234, line: 475, baseType: !193, size: 64, offset: 1728)
!321 = !DIDerivedType(tag: DW_TAG_member, name: "arg_lock", scope: !254, file: !234, line: 477, baseType: !101, offset: 1792)
!322 = !DIDerivedType(tag: DW_TAG_member, name: "start_code", scope: !254, file: !234, line: 478, baseType: !193, size: 64, offset: 1792)
!323 = !DIDerivedType(tag: DW_TAG_member, name: "end_code", scope: !254, file: !234, line: 478, baseType: !193, size: 64, offset: 1856)
!324 = !DIDerivedType(tag: DW_TAG_member, name: "start_data", scope: !254, file: !234, line: 478, baseType: !193, size: 64, offset: 1920)
!325 = !DIDerivedType(tag: DW_TAG_member, name: "end_data", scope: !254, file: !234, line: 478, baseType: !193, size: 64, offset: 1984)
!326 = !DIDerivedType(tag: DW_TAG_member, name: "start_brk", scope: !254, file: !234, line: 479, baseType: !193, size: 64, offset: 2048)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "brk", scope: !254, file: !234, line: 479, baseType: !193, size: 64, offset: 2112)
!328 = !DIDerivedType(tag: DW_TAG_member, name: "start_stack", scope: !254, file: !234, line: 479, baseType: !193, size: 64, offset: 2176)
!329 = !DIDerivedType(tag: DW_TAG_member, name: "arg_start", scope: !254, file: !234, line: 480, baseType: !193, size: 64, offset: 2240)
!330 = !DIDerivedType(tag: DW_TAG_member, name: "arg_end", scope: !254, file: !234, line: 480, baseType: !193, size: 64, offset: 2304)
!331 = !DIDerivedType(tag: DW_TAG_member, name: "env_start", scope: !254, file: !234, line: 480, baseType: !193, size: 64, offset: 2368)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "env_end", scope: !254, file: !234, line: 480, baseType: !193, size: 64, offset: 2432)
!333 = !DIDerivedType(tag: DW_TAG_member, name: "saved_auxv", scope: !254, file: !234, line: 482, baseType: !334, size: 2816, offset: 2496)
!334 = !DICompositeType(tag: DW_TAG_array_type, baseType: !193, size: 2816, elements: !335)
!335 = !{!336}
!336 = !DISubrange(count: 44)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "rss_stat", scope: !254, file: !234, line: 488, baseType: !338, size: 256, offset: 5312)
!338 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_rss_stat", file: !339, line: 60, size: 256, elements: !340)
!339 = !DIFile(filename: "./include/linux/mm_types_task.h", directory: "/home/lizy2001/genbc/linux")
!340 = !{!341}
!341 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !338, file: !339, line: 61, baseType: !342, size: 256)
!342 = !DICompositeType(tag: DW_TAG_array_type, baseType: !292, size: 256, elements: !343)
!343 = !{!344}
!344 = !DISubrange(count: 4)
!345 = !DIDerivedType(tag: DW_TAG_member, name: "binfmt", scope: !254, file: !234, line: 490, baseType: !346, size: 64, offset: 5568)
!346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !347, size: 64)
!347 = !DICompositeType(tag: DW_TAG_structure_type, name: "linux_binfmt", file: !234, line: 490, flags: DIFlagFwdDecl)
!348 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !254, file: !234, line: 493, baseType: !349, size: 896, offset: 5632)
!349 = !DIDerivedType(tag: DW_TAG_typedef, name: "mm_context_t", file: !350, line: 53, baseType: !351)
!350 = !DIFile(filename: "./arch/x86/include/asm/mmu.h", directory: "/home/lizy2001/genbc/linux")
!351 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !350, line: 13, size: 896, elements: !352)
!352 = !{!353, !354, !355, !356, !359, !360, !367, !368, !372, !373, !376}
!353 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_id", scope: !351, file: !350, line: 18, baseType: !262, size: 64)
!354 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_gen", scope: !351, file: !350, line: 28, baseType: !294, size: 64, offset: 64)
!355 = !DIDerivedType(tag: DW_TAG_member, name: "ldt_usr_sem", scope: !351, file: !350, line: 31, baseType: !303, size: 256, offset: 128)
!356 = !DIDerivedType(tag: DW_TAG_member, name: "ldt", scope: !351, file: !350, line: 32, baseType: !357, size: 64, offset: 384)
!357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !358, size: 64)
!358 = !DICompositeType(tag: DW_TAG_structure_type, name: "ldt_struct", file: !350, line: 32, flags: DIFlagFwdDecl)
!359 = !DIDerivedType(tag: DW_TAG_member, name: "ia32_compat", scope: !351, file: !350, line: 37, baseType: !185, size: 16, offset: 448)
!360 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !351, file: !350, line: 40, baseType: !361, size: 192, offset: 512)
!361 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mutex", file: !362, line: 53, size: 192, elements: !363)
!362 = !DIFile(filename: "./include/linux/mutex.h", directory: "/home/lizy2001/genbc/linux")
!363 = !{!364, !365, !366}
!364 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !361, file: !362, line: 54, baseType: !292, size: 64)
!365 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !361, file: !362, line: 55, baseType: !101, offset: 64)
!366 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !361, file: !362, line: 59, baseType: !88, size: 128, offset: 64)
!367 = !DIDerivedType(tag: DW_TAG_member, name: "vdso", scope: !351, file: !350, line: 41, baseType: !65, size: 64, offset: 704)
!368 = !DIDerivedType(tag: DW_TAG_member, name: "vdso_image", scope: !351, file: !350, line: 42, baseType: !369, size: 64, offset: 768)
!369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !370, size: 64)
!370 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !371)
!371 = !DICompositeType(tag: DW_TAG_structure_type, name: "vdso_image", file: !350, line: 42, flags: DIFlagFwdDecl)
!372 = !DIDerivedType(tag: DW_TAG_member, name: "perf_rdpmc_allowed", scope: !351, file: !350, line: 44, baseType: !284, size: 32, offset: 832)
!373 = !DIDerivedType(tag: DW_TAG_member, name: "pkey_allocation_map", scope: !351, file: !350, line: 50, baseType: !374, size: 16, offset: 864)
!374 = !DIDerivedType(tag: DW_TAG_typedef, name: "u16", file: !263, line: 19, baseType: !375)
!375 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u16", file: !265, line: 24, baseType: !185)
!376 = !DIDerivedType(tag: DW_TAG_member, name: "execute_only_pkey", scope: !351, file: !350, line: 51, baseType: !377, size: 16, offset: 880)
!377 = !DIDerivedType(tag: DW_TAG_typedef, name: "s16", file: !263, line: 18, baseType: !378)
!378 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s16", file: !265, line: 23, baseType: !379)
!379 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!380 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !254, file: !234, line: 495, baseType: !193, size: 64, offset: 6528)
!381 = !DIDerivedType(tag: DW_TAG_member, name: "core_state", scope: !254, file: !234, line: 497, baseType: !382, size: 64, offset: 6592)
!382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !383, size: 64)
!383 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_state", file: !234, line: 381, size: 384, elements: !384)
!384 = !{!385, !386, !1277}
!385 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !383, file: !234, line: 382, baseType: !284, size: 32)
!386 = !DIDerivedType(tag: DW_TAG_member, name: "dumper", scope: !383, file: !234, line: 383, baseType: !387, size: 128, offset: 64)
!387 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_thread", file: !234, line: 376, size: 128, elements: !388)
!388 = !{!389, !1275}
!389 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !387, file: !234, line: 377, baseType: !390, size: 64)
!390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !391, size: 64)
!391 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_struct", file: !392, line: 640, size: 48640, elements: !393)
!392 = !DIFile(filename: "./include/linux/sched.h", directory: "/home/lizy2001/genbc/linux")
!393 = !{!394, !402, !404, !405, !411, !412, !413, !414, !415, !416, !417, !418, !422, !440, !451, !546, !547, !548, !559, !560, !562, !563, !564, !565, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !644, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !700, !702, !703, !704, !716, !718, !719, !720, !721, !722, !728, !729, !730, !731, !732, !733, !734, !746, !751, !755, !756, !757, !760, !764, !767, !770, !773, !776, !779, !782, !785, !791, !792, !793, !799, !800, !801, !802, !803, !812, !813, !814, !815, !816, !821, !822, !823, !826, !827, !830, !833, !836, !839, !842, !845, !846, !926, !929, !932, !933, !936, !937, !938, !944, !945, !946, !959, !960, !961, !973, !978, !981, !1079, !1080, !1081, !1082, !1083, !1084, !1085, !1086, !1090, !1091, !1092, !1093, !1094, !1095, !1096, !1097, !1098}
!394 = !DIDerivedType(tag: DW_TAG_member, name: "thread_info", scope: !391, file: !392, line: 646, baseType: !395, size: 128)
!395 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_info", file: !396, line: 56, size: 128, elements: !397)
!396 = !DIFile(filename: "./arch/x86/include/asm/thread_info.h", directory: "/home/lizy2001/genbc/linux")
!397 = !{!398, !399}
!398 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !395, file: !396, line: 57, baseType: !193, size: 64)
!399 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !395, file: !396, line: 58, baseType: !400, size: 32, offset: 64)
!400 = !DIDerivedType(tag: DW_TAG_typedef, name: "u32", file: !263, line: 21, baseType: !401)
!401 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u32", file: !265, line: 27, baseType: !7)
!402 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !391, file: !392, line: 649, baseType: !403, size: 64, offset: 128)
!403 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !178)
!404 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !391, file: !392, line: 657, baseType: !65, size: 64, offset: 192)
!405 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !391, file: !392, line: 658, baseType: !406, size: 32, offset: 256)
!406 = !DIDerivedType(tag: DW_TAG_typedef, name: "refcount_t", file: !407, line: 113, baseType: !408)
!407 = !DIFile(filename: "./include/linux/refcount.h", directory: "/home/lizy2001/genbc/linux")
!408 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "refcount_struct", file: !407, line: 111, size: 32, elements: !409)
!409 = !{!410}
!410 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !408, file: !407, line: 112, baseType: !284, size: 32)
!411 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !391, file: !392, line: 660, baseType: !7, size: 32, offset: 288)
!412 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace", scope: !391, file: !392, line: 661, baseType: !7, size: 32, offset: 320)
!413 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !391, file: !392, line: 684, baseType: !127, size: 32, offset: 352)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !391, file: !392, line: 686, baseType: !127, size: 32, offset: 384)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "static_prio", scope: !391, file: !392, line: 687, baseType: !127, size: 32, offset: 416)
!416 = !DIDerivedType(tag: DW_TAG_member, name: "normal_prio", scope: !391, file: !392, line: 688, baseType: !127, size: 32, offset: 448)
!417 = !DIDerivedType(tag: DW_TAG_member, name: "rt_priority", scope: !391, file: !392, line: 689, baseType: !7, size: 32, offset: 480)
!418 = !DIDerivedType(tag: DW_TAG_member, name: "sched_class", scope: !391, file: !392, line: 691, baseType: !419, size: 64, offset: 512)
!419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !420, size: 64)
!420 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !421)
!421 = !DICompositeType(tag: DW_TAG_structure_type, name: "sched_class", file: !392, line: 691, flags: DIFlagFwdDecl)
!422 = !DIDerivedType(tag: DW_TAG_member, name: "se", scope: !391, file: !392, line: 692, baseType: !423, size: 832, offset: 576)
!423 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_entity", file: !392, line: 451, size: 832, elements: !424)
!424 = !{!425, !430, !431, !432, !433, !434, !435, !436, !437, !438}
!425 = !DIDerivedType(tag: DW_TAG_member, name: "load", scope: !423, file: !392, line: 453, baseType: !426, size: 128)
!426 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "load_weight", file: !392, line: 325, size: 128, elements: !427)
!427 = !{!428, !429}
!428 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !426, file: !392, line: 326, baseType: !193, size: 64)
!429 = !DIDerivedType(tag: DW_TAG_member, name: "inv_weight", scope: !426, file: !392, line: 327, baseType: !400, size: 32, offset: 64)
!430 = !DIDerivedType(tag: DW_TAG_member, name: "run_node", scope: !423, file: !392, line: 454, baseType: !241, size: 192, align: 64, offset: 128)
!431 = !DIDerivedType(tag: DW_TAG_member, name: "group_node", scope: !423, file: !392, line: 455, baseType: !88, size: 128, offset: 320)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !423, file: !392, line: 456, baseType: !7, size: 32, offset: 448)
!433 = !DIDerivedType(tag: DW_TAG_member, name: "exec_start", scope: !423, file: !392, line: 458, baseType: !262, size: 64, offset: 512)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !423, file: !392, line: 459, baseType: !262, size: 64, offset: 576)
!435 = !DIDerivedType(tag: DW_TAG_member, name: "vruntime", scope: !423, file: !392, line: 460, baseType: !262, size: 64, offset: 640)
!436 = !DIDerivedType(tag: DW_TAG_member, name: "prev_sum_exec_runtime", scope: !423, file: !392, line: 461, baseType: !262, size: 64, offset: 704)
!437 = !DIDerivedType(tag: DW_TAG_member, name: "nr_migrations", scope: !423, file: !392, line: 463, baseType: !262, size: 64, offset: 768)
!438 = !DIDerivedType(tag: DW_TAG_member, name: "statistics", scope: !423, file: !392, line: 465, baseType: !439, offset: 832)
!439 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_statistics", file: !392, line: 415, elements: !115)
!440 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !391, file: !392, line: 693, baseType: !441, size: 384, offset: 1408)
!441 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_rt_entity", file: !392, line: 489, size: 384, elements: !442)
!442 = !{!443, !444, !445, !446, !447, !448, !449}
!443 = !DIDerivedType(tag: DW_TAG_member, name: "run_list", scope: !441, file: !392, line: 490, baseType: !88, size: 128)
!444 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !441, file: !392, line: 491, baseType: !193, size: 64, offset: 128)
!445 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_stamp", scope: !441, file: !392, line: 492, baseType: !193, size: 64, offset: 192)
!446 = !DIDerivedType(tag: DW_TAG_member, name: "time_slice", scope: !441, file: !392, line: 493, baseType: !7, size: 32, offset: 256)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !441, file: !392, line: 494, baseType: !185, size: 16, offset: 288)
!448 = !DIDerivedType(tag: DW_TAG_member, name: "on_list", scope: !441, file: !392, line: 495, baseType: !185, size: 16, offset: 304)
!449 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !441, file: !392, line: 497, baseType: !450, size: 64, offset: 320)
!450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !441, size: 64)
!451 = !DIDerivedType(tag: DW_TAG_member, name: "dl", scope: !391, file: !392, line: 697, baseType: !452, size: 1792, offset: 1792)
!452 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_dl_entity", file: !392, line: 507, size: 1792, elements: !453)
!453 = !{!454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !543, !544}
!454 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !452, file: !392, line: 508, baseType: !241, size: 192, align: 64)
!455 = !DIDerivedType(tag: DW_TAG_member, name: "dl_runtime", scope: !452, file: !392, line: 515, baseType: !262, size: 64, offset: 192)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "dl_deadline", scope: !452, file: !392, line: 516, baseType: !262, size: 64, offset: 256)
!457 = !DIDerivedType(tag: DW_TAG_member, name: "dl_period", scope: !452, file: !392, line: 517, baseType: !262, size: 64, offset: 320)
!458 = !DIDerivedType(tag: DW_TAG_member, name: "dl_bw", scope: !452, file: !392, line: 518, baseType: !262, size: 64, offset: 384)
!459 = !DIDerivedType(tag: DW_TAG_member, name: "dl_density", scope: !452, file: !392, line: 519, baseType: !262, size: 64, offset: 448)
!460 = !DIDerivedType(tag: DW_TAG_member, name: "runtime", scope: !452, file: !392, line: 526, baseType: !298, size: 64, offset: 512)
!461 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", scope: !452, file: !392, line: 527, baseType: !262, size: 64, offset: 576)
!462 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !452, file: !392, line: 528, baseType: !7, size: 32, offset: 640)
!463 = !DIDerivedType(tag: DW_TAG_member, name: "dl_throttled", scope: !452, file: !392, line: 554, baseType: !7, size: 1, offset: 672, flags: DIFlagBitField, extraData: i64 672)
!464 = !DIDerivedType(tag: DW_TAG_member, name: "dl_yielded", scope: !452, file: !392, line: 555, baseType: !7, size: 1, offset: 673, flags: DIFlagBitField, extraData: i64 672)
!465 = !DIDerivedType(tag: DW_TAG_member, name: "dl_non_contending", scope: !452, file: !392, line: 556, baseType: !7, size: 1, offset: 674, flags: DIFlagBitField, extraData: i64 672)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "dl_overrun", scope: !452, file: !392, line: 557, baseType: !7, size: 1, offset: 675, flags: DIFlagBitField, extraData: i64 672)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "dl_timer", scope: !452, file: !392, line: 563, baseType: !468, size: 512, offset: 704)
!468 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer", file: !6, line: 118, size: 512, elements: !469)
!469 = !{!470, !478, !479, !484, !536, !540, !541, !542}
!470 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !468, file: !6, line: 119, baseType: !471, size: 256)
!471 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_node", file: !472, line: 9, size: 256, elements: !473)
!472 = !DIFile(filename: "./include/linux/timerqueue.h", directory: "/home/lizy2001/genbc/linux")
!473 = !{!474, !475}
!474 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !471, file: !472, line: 10, baseType: !241, size: 192, align: 64)
!475 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !471, file: !472, line: 11, baseType: !476, size: 64, offset: 192)
!476 = !DIDerivedType(tag: DW_TAG_typedef, name: "ktime_t", file: !477, line: 29, baseType: !298)
!477 = !DIFile(filename: "./include/linux/ktime.h", directory: "/home/lizy2001/genbc/linux")
!478 = !DIDerivedType(tag: DW_TAG_member, name: "_softexpires", scope: !468, file: !6, line: 120, baseType: !476, size: 64, offset: 256)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !468, file: !6, line: 121, baseType: !480, size: 64, offset: 320)
!480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !481, size: 64)
!481 = !DISubroutineType(types: !482)
!482 = !{!5, !483}
!483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !468, size: 64)
!484 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !468, file: !6, line: 122, baseType: !485, size: 64, offset: 384)
!485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !486, size: 64)
!486 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_clock_base", file: !6, line: 159, size: 512, align: 512, elements: !487)
!487 = !{!488, !508, !509, !512, !522, !523, !531, !535}
!488 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_base", scope: !486, file: !6, line: 160, baseType: !489, size: 64)
!489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !490, size: 64)
!490 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_cpu_base", file: !6, line: 214, size: 4608, align: 512, elements: !491)
!491 = !{!492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504}
!492 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !490, file: !6, line: 215, baseType: !309)
!493 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !490, file: !6, line: 216, baseType: !7, size: 32)
!494 = !DIDerivedType(tag: DW_TAG_member, name: "active_bases", scope: !490, file: !6, line: 217, baseType: !7, size: 32, offset: 32)
!495 = !DIDerivedType(tag: DW_TAG_member, name: "clock_was_set_seq", scope: !490, file: !6, line: 218, baseType: !7, size: 32, offset: 64)
!496 = !DIDerivedType(tag: DW_TAG_member, name: "hres_active", scope: !490, file: !6, line: 219, baseType: !7, size: 1, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "in_hrtirq", scope: !490, file: !6, line: 220, baseType: !7, size: 1, offset: 97, flags: DIFlagBitField, extraData: i64 96)
!498 = !DIDerivedType(tag: DW_TAG_member, name: "hang_detected", scope: !490, file: !6, line: 221, baseType: !7, size: 1, offset: 98, flags: DIFlagBitField, extraData: i64 96)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_activated", scope: !490, file: !6, line: 222, baseType: !7, size: 1, offset: 99, flags: DIFlagBitField, extraData: i64 96)
!500 = !DIDerivedType(tag: DW_TAG_member, name: "expires_next", scope: !490, file: !6, line: 233, baseType: !476, size: 64, offset: 128)
!501 = !DIDerivedType(tag: DW_TAG_member, name: "next_timer", scope: !490, file: !6, line: 234, baseType: !483, size: 64, offset: 192)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_expires_next", scope: !490, file: !6, line: 235, baseType: !476, size: 64, offset: 256)
!503 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_next_timer", scope: !490, file: !6, line: 236, baseType: !483, size: 64, offset: 320)
!504 = !DIDerivedType(tag: DW_TAG_member, name: "clock_base", scope: !490, file: !6, line: 237, baseType: !505, size: 4096, offset: 512)
!505 = !DICompositeType(tag: DW_TAG_array_type, baseType: !486, size: 4096, elements: !506)
!506 = !{!507}
!507 = !DISubrange(count: 8)
!508 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !486, file: !6, line: 161, baseType: !7, size: 32, offset: 64)
!509 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !486, file: !6, line: 162, baseType: !510, size: 32, offset: 96)
!510 = !DIDerivedType(tag: DW_TAG_typedef, name: "clockid_t", file: !64, line: 27, baseType: !511)
!511 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clockid_t", file: !176, line: 96, baseType: !127)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !486, file: !6, line: 163, baseType: !513, size: 32, offset: 128)
!513 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_raw_spinlock_t", file: !514, line: 276, baseType: !515)
!514 = !DIFile(filename: "./include/linux/seqlock.h", directory: "/home/lizy2001/genbc/linux")
!515 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_raw_spinlock", file: !514, line: 276, size: 32, elements: !516)
!516 = !{!517}
!517 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !515, file: !514, line: 276, baseType: !518, size: 32)
!518 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_t", file: !514, line: 70, baseType: !519)
!519 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount", file: !514, line: 65, size: 32, elements: !520)
!520 = !{!521}
!521 = !DIDerivedType(tag: DW_TAG_member, name: "sequence", scope: !519, file: !514, line: 66, baseType: !7, size: 32)
!522 = !DIDerivedType(tag: DW_TAG_member, name: "running", scope: !486, file: !6, line: 164, baseType: !483, size: 64, offset: 192)
!523 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !486, file: !6, line: 165, baseType: !524, size: 128, offset: 256)
!524 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_head", file: !472, line: 14, size: 128, elements: !525)
!525 = !{!526}
!526 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !524, file: !472, line: 15, baseType: !527, size: 128)
!527 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root_cached", file: !242, line: 125, size: 128, elements: !528)
!528 = !{!529, !530}
!529 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !527, file: !242, line: 126, baseType: !258, size: 64)
!530 = !DIDerivedType(tag: DW_TAG_member, name: "rb_leftmost", scope: !527, file: !242, line: 127, baseType: !246, size: 64, offset: 64)
!531 = !DIDerivedType(tag: DW_TAG_member, name: "get_time", scope: !486, file: !6, line: 166, baseType: !532, size: 64, offset: 384)
!532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !533, size: 64)
!533 = !DISubroutineType(types: !534)
!534 = !{!476}
!535 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !486, file: !6, line: 167, baseType: !476, size: 64, offset: 448)
!536 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !468, file: !6, line: 123, baseType: !537, size: 8, offset: 448)
!537 = !DIDerivedType(tag: DW_TAG_typedef, name: "u8", file: !263, line: 17, baseType: !538)
!538 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u8", file: !265, line: 21, baseType: !539)
!539 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!540 = !DIDerivedType(tag: DW_TAG_member, name: "is_rel", scope: !468, file: !6, line: 124, baseType: !537, size: 8, offset: 456)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "is_soft", scope: !468, file: !6, line: 125, baseType: !537, size: 8, offset: 464)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "is_hard", scope: !468, file: !6, line: 126, baseType: !537, size: 8, offset: 472)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "inactive_timer", scope: !452, file: !392, line: 572, baseType: !468, size: 512, offset: 1216)
!544 = !DIDerivedType(tag: DW_TAG_member, name: "pi_se", scope: !452, file: !392, line: 580, baseType: !545, size: 64, offset: 1728)
!545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !452, size: 64)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !391, file: !392, line: 721, baseType: !7, size: 32, offset: 3584)
!547 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cpus_allowed", scope: !391, file: !392, line: 722, baseType: !127, size: 32, offset: 3616)
!548 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_ptr", scope: !391, file: !392, line: 723, baseType: !549, size: 64, offset: 3648)
!549 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !550, size: 64)
!550 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !551)
!551 = !DIDerivedType(tag: DW_TAG_typedef, name: "cpumask_t", file: !552, line: 17, baseType: !553)
!552 = !DIFile(filename: "./include/linux/cpumask.h", directory: "/home/lizy2001/genbc/linux")
!553 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpumask", file: !552, line: 17, size: 64, elements: !554)
!554 = !{!555}
!555 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !553, file: !552, line: 17, baseType: !556, size: 64)
!556 = !DICompositeType(tag: DW_TAG_array_type, baseType: !193, size: 64, elements: !557)
!557 = !{!558}
!558 = !DISubrange(count: 1)
!559 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_mask", scope: !391, file: !392, line: 724, baseType: !551, size: 64, offset: 3712)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "sched_info", scope: !391, file: !392, line: 749, baseType: !561, offset: 3776)
!561 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_info", file: !392, line: 290, elements: !115)
!562 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !391, file: !392, line: 751, baseType: !88, size: 128, offset: 3776)
!563 = !DIDerivedType(tag: DW_TAG_member, name: "mm", scope: !391, file: !392, line: 757, baseType: !250, size: 64, offset: 3904)
!564 = !DIDerivedType(tag: DW_TAG_member, name: "active_mm", scope: !391, file: !392, line: 758, baseType: !250, size: 64, offset: 3968)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache", scope: !391, file: !392, line: 761, baseType: !566, size: 320, offset: 4032)
!566 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmacache", file: !339, line: 34, size: 320, elements: !567)
!567 = !{!568, !569}
!568 = !DIDerivedType(tag: DW_TAG_member, name: "seqnum", scope: !566, file: !339, line: 35, baseType: !262, size: 64)
!569 = !DIDerivedType(tag: DW_TAG_member, name: "vmas", scope: !566, file: !339, line: 36, baseType: !570, size: 256, offset: 64)
!570 = !DICompositeType(tag: DW_TAG_array_type, baseType: !232, size: 256, elements: !343)
!571 = !DIDerivedType(tag: DW_TAG_member, name: "exit_state", scope: !391, file: !392, line: 766, baseType: !127, size: 32, offset: 4352)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "exit_code", scope: !391, file: !392, line: 767, baseType: !127, size: 32, offset: 4384)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "exit_signal", scope: !391, file: !392, line: 768, baseType: !127, size: 32, offset: 4416)
!574 = !DIDerivedType(tag: DW_TAG_member, name: "pdeath_signal", scope: !391, file: !392, line: 770, baseType: !127, size: 32, offset: 4448)
!575 = !DIDerivedType(tag: DW_TAG_member, name: "jobctl", scope: !391, file: !392, line: 772, baseType: !193, size: 64, offset: 4480)
!576 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !391, file: !392, line: 775, baseType: !7, size: 32, offset: 4544)
!577 = !DIDerivedType(tag: DW_TAG_member, name: "sched_reset_on_fork", scope: !391, file: !392, line: 778, baseType: !7, size: 1, offset: 4576, flags: DIFlagBitField, extraData: i64 4576)
!578 = !DIDerivedType(tag: DW_TAG_member, name: "sched_contributes_to_load", scope: !391, file: !392, line: 779, baseType: !7, size: 1, offset: 4577, flags: DIFlagBitField, extraData: i64 4576)
!579 = !DIDerivedType(tag: DW_TAG_member, name: "sched_migrated", scope: !391, file: !392, line: 780, baseType: !7, size: 1, offset: 4578, flags: DIFlagBitField, extraData: i64 4576)
!580 = !DIDerivedType(tag: DW_TAG_member, name: "sched_remote_wakeup", scope: !391, file: !392, line: 803, baseType: !7, size: 1, offset: 4608, flags: DIFlagBitField, extraData: i64 4608)
!581 = !DIDerivedType(tag: DW_TAG_member, name: "in_execve", scope: !391, file: !392, line: 806, baseType: !7, size: 1, offset: 4609, flags: DIFlagBitField, extraData: i64 4608)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "in_iowait", scope: !391, file: !392, line: 807, baseType: !7, size: 1, offset: 4610, flags: DIFlagBitField, extraData: i64 4608)
!583 = !DIDerivedType(tag: DW_TAG_member, name: "restore_sigmask", scope: !391, file: !392, line: 809, baseType: !7, size: 1, offset: 4611, flags: DIFlagBitField, extraData: i64 4608)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "brk_randomized", scope: !391, file: !392, line: 815, baseType: !7, size: 1, offset: 4612, flags: DIFlagBitField, extraData: i64 4608)
!585 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_flags", scope: !391, file: !392, line: 831, baseType: !193, size: 64, offset: 4672)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "restart_block", scope: !391, file: !392, line: 833, baseType: !587, size: 384, offset: 4736)
!587 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "restart_block", file: !12, line: 25, size: 384, elements: !588)
!588 = !{!589, !594}
!589 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !587, file: !12, line: 26, baseType: !590, size: 64)
!590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !591, size: 64)
!591 = !DISubroutineType(types: !592)
!592 = !{!178, !593}
!593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !587, size: 64)
!594 = !DIDerivedType(tag: DW_TAG_member, scope: !587, file: !12, line: 27, baseType: !595, size: 320, offset: 64)
!595 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !587, file: !12, line: 27, size: 320, elements: !596)
!596 = !{!597, !607, !634}
!597 = !DIDerivedType(tag: DW_TAG_member, name: "futex", scope: !595, file: !12, line: 36, baseType: !598, size: 320)
!598 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !595, file: !12, line: 29, size: 320, elements: !599)
!599 = !{!600, !602, !603, !604, !605, !606}
!600 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr", scope: !598, file: !12, line: 30, baseType: !601, size: 64)
!601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !400, size: 64)
!602 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !598, file: !12, line: 31, baseType: !400, size: 32, offset: 64)
!603 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !598, file: !12, line: 32, baseType: !400, size: 32, offset: 96)
!604 = !DIDerivedType(tag: DW_TAG_member, name: "bitset", scope: !598, file: !12, line: 33, baseType: !400, size: 32, offset: 128)
!605 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !598, file: !12, line: 34, baseType: !262, size: 64, offset: 192)
!606 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr2", scope: !598, file: !12, line: 35, baseType: !601, size: 64, offset: 256)
!607 = !DIDerivedType(tag: DW_TAG_member, name: "nanosleep", scope: !595, file: !12, line: 46, baseType: !608, size: 192)
!608 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !595, file: !12, line: 38, size: 192, elements: !609)
!609 = !{!610, !611, !612, !633}
!610 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !608, file: !12, line: 39, baseType: !510, size: 32)
!611 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !608, file: !12, line: 40, baseType: !11, size: 32, offset: 32)
!612 = !DIDerivedType(tag: DW_TAG_member, scope: !608, file: !12, line: 41, baseType: !613, size: 64, offset: 64)
!613 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !608, file: !12, line: 41, size: 64, elements: !614)
!614 = !{!615, !623}
!615 = !DIDerivedType(tag: DW_TAG_member, name: "rmtp", scope: !613, file: !12, line: 42, baseType: !616, size: 64)
!616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !617, size: 64)
!617 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__kernel_timespec", file: !618, line: 7, size: 128, elements: !619)
!618 = !DIFile(filename: "./include/uapi/linux/time_types.h", directory: "/home/lizy2001/genbc/linux")
!619 = !{!620, !622}
!620 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !617, file: !618, line: 8, baseType: !621, size: 64)
!621 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_time64_t", file: !176, line: 93, baseType: !226)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !617, file: !618, line: 9, baseType: !226, size: 64, offset: 64)
!623 = !DIDerivedType(tag: DW_TAG_member, name: "compat_rmtp", scope: !613, file: !12, line: 43, baseType: !624, size: 64)
!624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !625, size: 64)
!625 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "old_timespec32", file: !626, line: 7, size: 64, elements: !627)
!626 = !DIFile(filename: "./include/vdso/time32.h", directory: "/home/lizy2001/genbc/linux")
!627 = !{!628, !632}
!628 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !625, file: !626, line: 8, baseType: !629, size: 32)
!629 = !DIDerivedType(tag: DW_TAG_typedef, name: "old_time32_t", file: !626, line: 5, baseType: !630)
!630 = !DIDerivedType(tag: DW_TAG_typedef, name: "s32", file: !263, line: 20, baseType: !631)
!631 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s32", file: !265, line: 26, baseType: !127)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !625, file: !626, line: 9, baseType: !630, size: 32, offset: 32)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !608, file: !12, line: 45, baseType: !262, size: 64, offset: 128)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !595, file: !12, line: 54, baseType: !635, size: 256)
!635 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !595, file: !12, line: 48, size: 256, elements: !636)
!636 = !{!637, !640, !641, !642, !643}
!637 = !DIDerivedType(tag: DW_TAG_member, name: "ufds", scope: !635, file: !12, line: 49, baseType: !638, size: 64)
!638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !639, size: 64)
!639 = !DICompositeType(tag: DW_TAG_structure_type, name: "pollfd", file: !12, line: 14, flags: DIFlagFwdDecl)
!640 = !DIDerivedType(tag: DW_TAG_member, name: "nfds", scope: !635, file: !12, line: 50, baseType: !127, size: 32, offset: 64)
!641 = !DIDerivedType(tag: DW_TAG_member, name: "has_timeout", scope: !635, file: !12, line: 51, baseType: !127, size: 32, offset: 96)
!642 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !635, file: !12, line: 52, baseType: !193, size: 64, offset: 128)
!643 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !635, file: !12, line: 53, baseType: !193, size: 64, offset: 192)
!644 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !391, file: !392, line: 835, baseType: !645, size: 32, offset: 5120)
!645 = !DIDerivedType(tag: DW_TAG_typedef, name: "pid_t", file: !64, line: 22, baseType: !646)
!646 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_pid_t", file: !176, line: 28, baseType: !127)
!647 = !DIDerivedType(tag: DW_TAG_member, name: "tgid", scope: !391, file: !392, line: 836, baseType: !645, size: 32, offset: 5152)
!648 = !DIDerivedType(tag: DW_TAG_member, name: "stack_canary", scope: !391, file: !392, line: 840, baseType: !193, size: 64, offset: 5184)
!649 = !DIDerivedType(tag: DW_TAG_member, name: "real_parent", scope: !391, file: !392, line: 849, baseType: !390, size: 64, offset: 5248)
!650 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !391, file: !392, line: 852, baseType: !390, size: 64, offset: 5312)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !391, file: !392, line: 857, baseType: !88, size: 128, offset: 5376)
!652 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !391, file: !392, line: 858, baseType: !88, size: 128, offset: 5504)
!653 = !DIDerivedType(tag: DW_TAG_member, name: "group_leader", scope: !391, file: !392, line: 859, baseType: !390, size: 64, offset: 5632)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "ptraced", scope: !391, file: !392, line: 867, baseType: !88, size: 128, offset: 5696)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_entry", scope: !391, file: !392, line: 868, baseType: !88, size: 128, offset: 5824)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "thread_pid", scope: !391, file: !392, line: 871, baseType: !657, size: 64, offset: 5952)
!657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !658, size: 64)
!658 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pid", file: !659, line: 59, size: 768, elements: !660)
!659 = !DIFile(filename: "./include/linux/pid.h", directory: "/home/lizy2001/genbc/linux")
!660 = !{!661, !662, !663, !664, !675, !676, !683, !692}
!661 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !658, file: !659, line: 61, baseType: !406, size: 32)
!662 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !658, file: !659, line: 62, baseType: !7, size: 32, offset: 32)
!663 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !658, file: !659, line: 63, baseType: !101, offset: 64)
!664 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !658, file: !659, line: 65, baseType: !665, size: 256, offset: 64)
!665 = !DICompositeType(tag: DW_TAG_array_type, baseType: !666, size: 256, elements: !343)
!666 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_head", file: !64, line: 182, size: 64, elements: !667)
!667 = !{!668}
!668 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !666, file: !64, line: 183, baseType: !669, size: 64)
!669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !670, size: 64)
!670 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_node", file: !64, line: 186, size: 128, elements: !671)
!671 = !{!672, !673}
!672 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !670, file: !64, line: 187, baseType: !669, size: 64)
!673 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !670, file: !64, line: 187, baseType: !674, size: 64, offset: 64)
!674 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !669, size: 64)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "inodes", scope: !658, file: !659, line: 66, baseType: !666, size: 64, offset: 320)
!676 = !DIDerivedType(tag: DW_TAG_member, name: "wait_pidfd", scope: !658, file: !659, line: 68, baseType: !677, size: 128, offset: 384)
!677 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_head_t", file: !678, line: 40, baseType: !679)
!678 = !DIFile(filename: "./include/linux/wait.h", directory: "/home/lizy2001/genbc/linux")
!679 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_head", file: !678, line: 36, size: 128, elements: !680)
!680 = !{!681, !682}
!681 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !679, file: !678, line: 37, baseType: !101)
!682 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !679, file: !678, line: 38, baseType: !88, size: 128)
!683 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !658, file: !659, line: 69, baseType: !684, size: 128, align: 64, offset: 512)
!684 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "callback_head", file: !64, line: 216, size: 128, align: 64, elements: !685)
!685 = !{!686, !688}
!686 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !684, file: !64, line: 217, baseType: !687, size: 64)
!687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !684, size: 64)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !684, file: !64, line: 218, baseType: !689, size: 64, offset: 64)
!689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !690, size: 64)
!690 = !DISubroutineType(types: !691)
!691 = !{null, !687}
!692 = !DIDerivedType(tag: DW_TAG_member, name: "numbers", scope: !658, file: !659, line: 70, baseType: !693, size: 128, offset: 640)
!693 = !DICompositeType(tag: DW_TAG_array_type, baseType: !694, size: 128, elements: !557)
!694 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "upid", file: !659, line: 54, size: 128, elements: !695)
!695 = !{!696, !697}
!696 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !694, file: !659, line: 55, baseType: !127, size: 32)
!697 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !694, file: !659, line: 56, baseType: !698, size: 64, offset: 64)
!698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !699, size: 64)
!699 = !DICompositeType(tag: DW_TAG_structure_type, name: "pid_namespace", file: !659, line: 56, flags: DIFlagFwdDecl)
!700 = !DIDerivedType(tag: DW_TAG_member, name: "pid_links", scope: !391, file: !392, line: 872, baseType: !701, size: 512, offset: 6016)
!701 = !DICompositeType(tag: DW_TAG_array_type, baseType: !670, size: 512, elements: !343)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "thread_group", scope: !391, file: !392, line: 873, baseType: !88, size: 128, offset: 6528)
!703 = !DIDerivedType(tag: DW_TAG_member, name: "thread_node", scope: !391, file: !392, line: 874, baseType: !88, size: 128, offset: 6656)
!704 = !DIDerivedType(tag: DW_TAG_member, name: "vfork_done", scope: !391, file: !392, line: 876, baseType: !705, size: 64, offset: 6784)
!705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !706, size: 64)
!706 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "completion", file: !707, line: 26, size: 192, elements: !708)
!707 = !DIFile(filename: "./include/linux/completion.h", directory: "/home/lizy2001/genbc/linux")
!708 = !{!709, !710}
!709 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !706, file: !707, line: 27, baseType: !7, size: 32)
!710 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !706, file: !707, line: 28, baseType: !711, size: 128, offset: 64)
!711 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swait_queue_head", file: !712, line: 43, size: 128, elements: !713)
!712 = !DIFile(filename: "./include/linux/swait.h", directory: "/home/lizy2001/genbc/linux")
!713 = !{!714, !715}
!714 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !711, file: !712, line: 44, baseType: !309)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "task_list", scope: !711, file: !712, line: 45, baseType: !88, size: 128)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "set_child_tid", scope: !391, file: !392, line: 879, baseType: !717, size: 64, offset: 6848)
!717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !127, size: 64)
!718 = !DIDerivedType(tag: DW_TAG_member, name: "clear_child_tid", scope: !391, file: !392, line: 882, baseType: !717, size: 64, offset: 6912)
!719 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !391, file: !392, line: 884, baseType: !262, size: 64, offset: 6976)
!720 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !391, file: !392, line: 885, baseType: !262, size: 64, offset: 7040)
!721 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !391, file: !392, line: 890, baseType: !262, size: 64, offset: 7104)
!722 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !391, file: !392, line: 891, baseType: !723, size: 128, offset: 7168)
!723 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "prev_cputime", file: !392, line: 242, size: 128, elements: !724)
!724 = !{!725, !726, !727}
!725 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !723, file: !392, line: 244, baseType: !262, size: 64)
!726 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !723, file: !392, line: 245, baseType: !262, size: 64, offset: 64)
!727 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !723, file: !392, line: 246, baseType: !309, offset: 128)
!728 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !391, file: !392, line: 900, baseType: !193, size: 64, offset: 7296)
!729 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !391, file: !392, line: 901, baseType: !193, size: 64, offset: 7360)
!730 = !DIDerivedType(tag: DW_TAG_member, name: "start_time", scope: !391, file: !392, line: 904, baseType: !262, size: 64, offset: 7424)
!731 = !DIDerivedType(tag: DW_TAG_member, name: "start_boottime", scope: !391, file: !392, line: 907, baseType: !262, size: 64, offset: 7488)
!732 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !391, file: !392, line: 910, baseType: !193, size: 64, offset: 7552)
!733 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !391, file: !392, line: 911, baseType: !193, size: 64, offset: 7616)
!734 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !391, file: !392, line: 914, baseType: !735, size: 640, offset: 7680)
!735 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers", file: !736, line: 123, size: 640, elements: !737)
!736 = !DIFile(filename: "./include/linux/posix-timers.h", directory: "/home/lizy2001/genbc/linux")
!737 = !{!738, !744, !745}
!738 = !DIDerivedType(tag: DW_TAG_member, name: "bases", scope: !735, file: !736, line: 124, baseType: !739, size: 576)
!739 = !DICompositeType(tag: DW_TAG_array_type, baseType: !740, size: 576, elements: !144)
!740 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimer_base", file: !736, line: 108, size: 192, elements: !741)
!741 = !{!742, !743}
!742 = !DIDerivedType(tag: DW_TAG_member, name: "nextevt", scope: !740, file: !736, line: 109, baseType: !262, size: 64)
!743 = !DIDerivedType(tag: DW_TAG_member, name: "tqhead", scope: !740, file: !736, line: 110, baseType: !524, size: 128, offset: 64)
!744 = !DIDerivedType(tag: DW_TAG_member, name: "timers_active", scope: !735, file: !736, line: 125, baseType: !7, size: 32, offset: 576)
!745 = !DIDerivedType(tag: DW_TAG_member, name: "expiry_active", scope: !735, file: !736, line: 126, baseType: !7, size: 32, offset: 608)
!746 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers_work", scope: !391, file: !392, line: 917, baseType: !747, size: 192, offset: 8320)
!747 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers_work", file: !736, line: 134, size: 192, elements: !748)
!748 = !{!749, !750}
!749 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !747, file: !736, line: 135, baseType: !684, size: 128, align: 64)
!750 = !DIDerivedType(tag: DW_TAG_member, name: "scheduled", scope: !747, file: !736, line: 136, baseType: !7, size: 32, offset: 128)
!751 = !DIDerivedType(tag: DW_TAG_member, name: "ptracer_cred", scope: !391, file: !392, line: 923, baseType: !752, size: 64, offset: 8512)
!752 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !753, size: 64)
!753 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !754)
!754 = !DICompositeType(tag: DW_TAG_structure_type, name: "cred", file: !392, line: 923, flags: DIFlagFwdDecl)
!755 = !DIDerivedType(tag: DW_TAG_member, name: "real_cred", scope: !391, file: !392, line: 926, baseType: !752, size: 64, offset: 8576)
!756 = !DIDerivedType(tag: DW_TAG_member, name: "cred", scope: !391, file: !392, line: 929, baseType: !752, size: 64, offset: 8640)
!757 = !DIDerivedType(tag: DW_TAG_member, name: "cached_requested_key", scope: !391, file: !392, line: 933, baseType: !758, size: 64, offset: 8704)
!758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !759, size: 64)
!759 = !DICompositeType(tag: DW_TAG_structure_type, name: "key", file: !392, line: 933, flags: DIFlagFwdDecl)
!760 = !DIDerivedType(tag: DW_TAG_member, name: "comm", scope: !391, file: !392, line: 943, baseType: !761, size: 128, offset: 8768)
!761 = !DICompositeType(tag: DW_TAG_array_type, baseType: !86, size: 128, elements: !762)
!762 = !{!763}
!763 = !DISubrange(count: 16)
!764 = !DIDerivedType(tag: DW_TAG_member, name: "nameidata", scope: !391, file: !392, line: 945, baseType: !765, size: 64, offset: 8896)
!765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !766, size: 64)
!766 = !DICompositeType(tag: DW_TAG_structure_type, name: "nameidata", file: !392, line: 49, flags: DIFlagFwdDecl)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !391, file: !392, line: 956, baseType: !768, size: 64, offset: 8960)
!768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !769, size: 64)
!769 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_struct", file: !392, line: 45, flags: DIFlagFwdDecl)
!770 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !391, file: !392, line: 959, baseType: !771, size: 64, offset: 9024)
!771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !772, size: 64)
!772 = !DICompositeType(tag: DW_TAG_structure_type, name: "files_struct", file: !392, line: 959, flags: DIFlagFwdDecl)
!773 = !DIDerivedType(tag: DW_TAG_member, name: "io_uring", scope: !391, file: !392, line: 962, baseType: !774, size: 64, offset: 9088)
!774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !775, size: 64)
!775 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_uring_task", file: !392, line: 66, flags: DIFlagFwdDecl)
!776 = !DIDerivedType(tag: DW_TAG_member, name: "nsproxy", scope: !391, file: !392, line: 966, baseType: !777, size: 64, offset: 9152)
!777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !778, size: 64)
!778 = !DICompositeType(tag: DW_TAG_structure_type, name: "nsproxy", file: !392, line: 50, flags: DIFlagFwdDecl)
!779 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !391, file: !392, line: 969, baseType: !780, size: 64, offset: 9216)
!780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !781, size: 64)
!781 = !DICompositeType(tag: DW_TAG_structure_type, name: "signal_struct", file: !736, line: 223, flags: DIFlagFwdDecl)
!782 = !DIDerivedType(tag: DW_TAG_member, name: "sighand", scope: !391, file: !392, line: 970, baseType: !783, size: 64, offset: 9280)
!783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !784, size: 64)
!784 = !DICompositeType(tag: DW_TAG_structure_type, name: "sighand_struct", file: !392, line: 62, flags: DIFlagFwdDecl)
!785 = !DIDerivedType(tag: DW_TAG_member, name: "blocked", scope: !391, file: !392, line: 971, baseType: !786, size: 64, offset: 9344)
!786 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigset_t", file: !787, line: 25, baseType: !788)
!787 = !DIFile(filename: "./arch/x86/include/asm/signal.h", directory: "/home/lizy2001/genbc/linux")
!788 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !787, line: 23, size: 64, elements: !789)
!789 = !{!790}
!790 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !788, file: !787, line: 24, baseType: !556, size: 64)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "real_blocked", scope: !391, file: !392, line: 972, baseType: !786, size: 64, offset: 9408)
!792 = !DIDerivedType(tag: DW_TAG_member, name: "saved_sigmask", scope: !391, file: !392, line: 974, baseType: !786, size: 64, offset: 9472)
!793 = !DIDerivedType(tag: DW_TAG_member, name: "pending", scope: !391, file: !392, line: 975, baseType: !794, size: 192, offset: 9536)
!794 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigpending", file: !795, line: 30, size: 192, elements: !796)
!795 = !DIFile(filename: "./include/linux/signal_types.h", directory: "/home/lizy2001/genbc/linux")
!796 = !{!797, !798}
!797 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !794, file: !795, line: 31, baseType: !88, size: 128)
!798 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !794, file: !795, line: 32, baseType: !786, size: 64, offset: 128)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_sp", scope: !391, file: !392, line: 976, baseType: !193, size: 64, offset: 9728)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_size", scope: !391, file: !392, line: 977, baseType: !190, size: 64, offset: 9792)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_flags", scope: !391, file: !392, line: 978, baseType: !7, size: 32, offset: 9856)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "task_works", scope: !391, file: !392, line: 980, baseType: !687, size: 64, offset: 9920)
!803 = !DIDerivedType(tag: DW_TAG_member, name: "seccomp", scope: !391, file: !392, line: 989, baseType: !804, size: 128, offset: 9984)
!804 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp", file: !805, line: 35, size: 128, elements: !806)
!805 = !DIFile(filename: "./include/linux/seccomp.h", directory: "/home/lizy2001/genbc/linux")
!806 = !{!807, !808, !809}
!807 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !804, file: !805, line: 36, baseType: !127, size: 32)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "filter_count", scope: !804, file: !805, line: 37, baseType: !284, size: 32, offset: 32)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !804, file: !805, line: 38, baseType: !810, size: 64, offset: 64)
!810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !811, size: 64)
!811 = !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp_filter", file: !805, line: 23, flags: DIFlagFwdDecl)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "parent_exec_id", scope: !391, file: !392, line: 992, baseType: !262, size: 64, offset: 10112)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "self_exec_id", scope: !391, file: !392, line: 993, baseType: !262, size: 64, offset: 10176)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_lock", scope: !391, file: !392, line: 996, baseType: !101, offset: 10240)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "pi_lock", scope: !391, file: !392, line: 999, baseType: !309, offset: 10240)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "wake_q", scope: !391, file: !392, line: 1001, baseType: !817, size: 64, offset: 10240)
!817 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wake_q_node", file: !392, line: 636, size: 64, elements: !818)
!818 = !{!819}
!819 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !817, file: !392, line: 637, baseType: !820, size: 64)
!820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !817, size: 64)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "pi_waiters", scope: !391, file: !392, line: 1005, baseType: !527, size: 128, offset: 10304)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "pi_top_task", scope: !391, file: !392, line: 1007, baseType: !390, size: 64, offset: 10432)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "pi_blocked_on", scope: !391, file: !392, line: 1009, baseType: !824, size: 64, offset: 10496)
!824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !825, size: 64)
!825 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt_mutex_waiter", file: !392, line: 1009, flags: DIFlagFwdDecl)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "journal_info", scope: !391, file: !392, line: 1043, baseType: !65, size: 64, offset: 10560)
!827 = !DIDerivedType(tag: DW_TAG_member, name: "bio_list", scope: !391, file: !392, line: 1046, baseType: !828, size: 64, offset: 10624)
!828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !829, size: 64)
!829 = !DICompositeType(tag: DW_TAG_structure_type, name: "bio_list", file: !392, line: 41, flags: DIFlagFwdDecl)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "plug", scope: !391, file: !392, line: 1050, baseType: !831, size: 64, offset: 10688)
!831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !832, size: 64)
!832 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_plug", file: !392, line: 42, flags: DIFlagFwdDecl)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "reclaim_state", scope: !391, file: !392, line: 1054, baseType: !834, size: 64, offset: 10752)
!834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !835, size: 64)
!835 = !DICompositeType(tag: DW_TAG_structure_type, name: "reclaim_state", file: !392, line: 55, flags: DIFlagFwdDecl)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "backing_dev_info", scope: !391, file: !392, line: 1056, baseType: !837, size: 64, offset: 10816)
!837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !838, size: 64)
!838 = !DICompositeType(tag: DW_TAG_structure_type, name: "backing_dev_info", file: !392, line: 40, flags: DIFlagFwdDecl)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "io_context", scope: !391, file: !392, line: 1058, baseType: !840, size: 64, offset: 10880)
!840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !841, size: 64)
!841 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_context", file: !392, line: 47, flags: DIFlagFwdDecl)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "capture_control", scope: !391, file: !392, line: 1061, baseType: !843, size: 64, offset: 10944)
!843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !844, size: 64)
!844 = !DICompositeType(tag: DW_TAG_structure_type, name: "capture_control", file: !392, line: 43, flags: DIFlagFwdDecl)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_message", scope: !391, file: !392, line: 1064, baseType: !193, size: 64, offset: 11008)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "last_siginfo", scope: !391, file: !392, line: 1065, baseType: !847, size: 64, offset: 11072)
!847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !848, size: 64)
!848 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_siginfo_t", file: !795, line: 14, baseType: !849)
!849 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_siginfo", file: !795, line: 12, size: 384, elements: !850)
!850 = !{!851}
!851 = !DIDerivedType(tag: DW_TAG_member, scope: !849, file: !795, line: 13, baseType: !852, size: 384)
!852 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !849, file: !795, line: 13, size: 384, elements: !853)
!853 = !{!854, !855, !856, !857}
!854 = !DIDerivedType(tag: DW_TAG_member, name: "si_signo", scope: !852, file: !795, line: 13, baseType: !127, size: 32)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "si_errno", scope: !852, file: !795, line: 13, baseType: !127, size: 32, offset: 32)
!856 = !DIDerivedType(tag: DW_TAG_member, name: "si_code", scope: !852, file: !795, line: 13, baseType: !127, size: 32, offset: 64)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "_sifields", scope: !852, file: !795, line: 13, baseType: !858, size: 256, offset: 128)
!858 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "__sifields", file: !859, line: 32, size: 256, elements: !860)
!859 = !DIFile(filename: "./include/uapi/asm-generic/siginfo.h", directory: "/home/lizy2001/genbc/linux")
!860 = !{!861, !867, !880, !886, !895, !915, !920}
!861 = !DIDerivedType(tag: DW_TAG_member, name: "_kill", scope: !858, file: !859, line: 37, baseType: !862, size: 64)
!862 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !858, file: !859, line: 34, size: 64, elements: !863)
!863 = !{!864, !865}
!864 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !862, file: !859, line: 35, baseType: !646, size: 32)
!865 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !862, file: !859, line: 36, baseType: !866, size: 32, offset: 32)
!866 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_uid32_t", file: !176, line: 49, baseType: !7)
!867 = !DIDerivedType(tag: DW_TAG_member, name: "_timer", scope: !858, file: !859, line: 45, baseType: !868, size: 192)
!868 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !858, file: !859, line: 40, size: 192, elements: !869)
!869 = !{!870, !872, !873, !879}
!870 = !DIDerivedType(tag: DW_TAG_member, name: "_tid", scope: !868, file: !859, line: 41, baseType: !871, size: 32)
!871 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_timer_t", file: !176, line: 95, baseType: !127)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "_overrun", scope: !868, file: !859, line: 42, baseType: !127, size: 32, offset: 32)
!873 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !868, file: !859, line: 43, baseType: !874, size: 64, offset: 64)
!874 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigval_t", file: !859, line: 11, baseType: !875)
!875 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "sigval", file: !859, line: 8, size: 64, elements: !876)
!876 = !{!877, !878}
!877 = !DIDerivedType(tag: DW_TAG_member, name: "sival_int", scope: !875, file: !859, line: 9, baseType: !127, size: 32)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "sival_ptr", scope: !875, file: !859, line: 10, baseType: !65, size: 64)
!879 = !DIDerivedType(tag: DW_TAG_member, name: "_sys_private", scope: !868, file: !859, line: 44, baseType: !127, size: 32, offset: 128)
!880 = !DIDerivedType(tag: DW_TAG_member, name: "_rt", scope: !858, file: !859, line: 52, baseType: !881, size: 128)
!881 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !858, file: !859, line: 48, size: 128, elements: !882)
!882 = !{!883, !884, !885}
!883 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !881, file: !859, line: 49, baseType: !646, size: 32)
!884 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !881, file: !859, line: 50, baseType: !866, size: 32, offset: 32)
!885 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !881, file: !859, line: 51, baseType: !874, size: 64, offset: 64)
!886 = !DIDerivedType(tag: DW_TAG_member, name: "_sigchld", scope: !858, file: !859, line: 61, baseType: !887, size: 256)
!887 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !858, file: !859, line: 55, size: 256, elements: !888)
!888 = !{!889, !890, !891, !892, !894}
!889 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !887, file: !859, line: 56, baseType: !646, size: 32)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !887, file: !859, line: 57, baseType: !866, size: 32, offset: 32)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "_status", scope: !887, file: !859, line: 58, baseType: !127, size: 32, offset: 64)
!892 = !DIDerivedType(tag: DW_TAG_member, name: "_utime", scope: !887, file: !859, line: 59, baseType: !893, size: 64, offset: 128)
!893 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clock_t", file: !176, line: 94, baseType: !177)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "_stime", scope: !887, file: !859, line: 60, baseType: !893, size: 64, offset: 192)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "_sigfault", scope: !858, file: !859, line: 95, baseType: !896, size: 256)
!896 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !858, file: !859, line: 64, size: 256, elements: !897)
!897 = !{!898, !899}
!898 = !DIDerivedType(tag: DW_TAG_member, name: "_addr", scope: !896, file: !859, line: 65, baseType: !65, size: 64)
!899 = !DIDerivedType(tag: DW_TAG_member, scope: !896, file: !859, line: 77, baseType: !900, size: 192, offset: 64)
!900 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !896, file: !859, line: 77, size: 192, elements: !901)
!901 = !{!902, !903, !910}
!902 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_lsb", scope: !900, file: !859, line: 82, baseType: !379, size: 16)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_bnd", scope: !900, file: !859, line: 88, baseType: !904, size: 192)
!904 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !900, file: !859, line: 84, size: 192, elements: !905)
!905 = !{!906, !908, !909}
!906 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_bnd", scope: !904, file: !859, line: 85, baseType: !907, size: 64)
!907 = !DICompositeType(tag: DW_TAG_array_type, baseType: !86, size: 64, elements: !506)
!908 = !DIDerivedType(tag: DW_TAG_member, name: "_lower", scope: !904, file: !859, line: 86, baseType: !65, size: 64, offset: 64)
!909 = !DIDerivedType(tag: DW_TAG_member, name: "_upper", scope: !904, file: !859, line: 87, baseType: !65, size: 64, offset: 128)
!910 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_pkey", scope: !900, file: !859, line: 93, baseType: !911, size: 96)
!911 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !900, file: !859, line: 90, size: 96, elements: !912)
!912 = !{!913, !914}
!913 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_pkey", scope: !911, file: !859, line: 91, baseType: !907, size: 64)
!914 = !DIDerivedType(tag: DW_TAG_member, name: "_pkey", scope: !911, file: !859, line: 92, baseType: !401, size: 32, offset: 64)
!915 = !DIDerivedType(tag: DW_TAG_member, name: "_sigpoll", scope: !858, file: !859, line: 101, baseType: !916, size: 128)
!916 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !858, file: !859, line: 98, size: 128, elements: !917)
!917 = !{!918, !919}
!918 = !DIDerivedType(tag: DW_TAG_member, name: "_band", scope: !916, file: !859, line: 99, baseType: !178, size: 64)
!919 = !DIDerivedType(tag: DW_TAG_member, name: "_fd", scope: !916, file: !859, line: 100, baseType: !127, size: 32, offset: 64)
!920 = !DIDerivedType(tag: DW_TAG_member, name: "_sigsys", scope: !858, file: !859, line: 108, baseType: !921, size: 128)
!921 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !858, file: !859, line: 104, size: 128, elements: !922)
!922 = !{!923, !924, !925}
!923 = !DIDerivedType(tag: DW_TAG_member, name: "_call_addr", scope: !921, file: !859, line: 105, baseType: !65, size: 64)
!924 = !DIDerivedType(tag: DW_TAG_member, name: "_syscall", scope: !921, file: !859, line: 106, baseType: !127, size: 32, offset: 64)
!925 = !DIDerivedType(tag: DW_TAG_member, name: "_arch", scope: !921, file: !859, line: 107, baseType: !7, size: 32, offset: 96)
!926 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !391, file: !392, line: 1067, baseType: !927, offset: 11136)
!927 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_io_accounting", file: !928, line: 12, elements: !115)
!928 = !DIFile(filename: "./include/linux/task_io_accounting.h", directory: "/home/lizy2001/genbc/linux")
!929 = !DIDerivedType(tag: DW_TAG_member, name: "robust_list", scope: !391, file: !392, line: 1099, baseType: !930, size: 64, offset: 11136)
!930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !931, size: 64)
!931 = !DICompositeType(tag: DW_TAG_structure_type, name: "robust_list_head", file: !392, line: 56, flags: DIFlagFwdDecl)
!932 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_list", scope: !391, file: !392, line: 1103, baseType: !88, size: 128, offset: 11200)
!933 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_cache", scope: !391, file: !392, line: 1104, baseType: !934, size: 64, offset: 11328)
!934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !935, size: 64)
!935 = !DICompositeType(tag: DW_TAG_structure_type, name: "futex_pi_state", file: !392, line: 46, flags: DIFlagFwdDecl)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "futex_exit_mutex", scope: !391, file: !392, line: 1105, baseType: !361, size: 192, offset: 11392)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "futex_state", scope: !391, file: !392, line: 1106, baseType: !7, size: 32, offset: 11584)
!938 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_ctxp", scope: !391, file: !392, line: 1109, baseType: !939, size: 128, offset: 11648)
!939 = !DICompositeType(tag: DW_TAG_array_type, baseType: !940, size: 128, elements: !942)
!940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !941, size: 64)
!941 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event_context", file: !392, line: 51, flags: DIFlagFwdDecl)
!942 = !{!943}
!943 = !DISubrange(count: 2)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_mutex", scope: !391, file: !392, line: 1110, baseType: !361, size: 192, offset: 11776)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_list", scope: !391, file: !392, line: 1111, baseType: !88, size: 128, offset: 11968)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "rseq", scope: !391, file: !392, line: 1173, baseType: !947, size: 64, offset: 12096)
!947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !948, size: 64)
!948 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rseq", file: !949, line: 62, size: 256, align: 256, elements: !950)
!949 = !DIFile(filename: "./include/uapi/linux/rseq.h", directory: "/home/lizy2001/genbc/linux")
!950 = !{!951, !952, !953, !958}
!951 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id_start", scope: !948, file: !949, line: 75, baseType: !401, size: 32)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id", scope: !948, file: !949, line: 90, baseType: !401, size: 32, offset: 32)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_cs", scope: !948, file: !949, line: 124, baseType: !954, size: 64, offset: 64)
!954 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !948, file: !949, line: 109, size: 64, elements: !955)
!955 = !{!956, !957}
!956 = !DIDerivedType(tag: DW_TAG_member, name: "ptr64", scope: !954, file: !949, line: 110, baseType: !264, size: 64)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !954, file: !949, line: 112, baseType: !264, size: 64)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !948, file: !949, line: 144, baseType: !401, size: 32, offset: 128)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_sig", scope: !391, file: !392, line: 1174, baseType: !400, size: 32, offset: 12160)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_event_mask", scope: !391, file: !392, line: 1179, baseType: !193, size: 64, offset: 12224)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_ubc", scope: !391, file: !392, line: 1182, baseType: !962, size: 128, offset: 12288)
!962 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tlbflush_unmap_batch", file: !339, line: 76, size: 128, elements: !963)
!963 = !{!964, !969, !972}
!964 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !962, file: !339, line: 85, baseType: !965, size: 64)
!965 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arch_tlbflush_unmap_batch", file: !966, line: 7, size: 64, elements: !967)
!966 = !DIFile(filename: "./arch/x86/include/asm/tlbbatch.h", directory: "/home/lizy2001/genbc/linux")
!967 = !{!968}
!968 = !DIDerivedType(tag: DW_TAG_member, name: "cpumask", scope: !965, file: !966, line: 12, baseType: !553, size: 64)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "flush_required", scope: !962, file: !339, line: 88, baseType: !970, size: 8, offset: 64)
!970 = !DIDerivedType(tag: DW_TAG_typedef, name: "bool", file: !64, line: 30, baseType: !971)
!971 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!972 = !DIDerivedType(tag: DW_TAG_member, name: "writable", scope: !962, file: !339, line: 95, baseType: !970, size: 8, offset: 72)
!973 = !DIDerivedType(tag: DW_TAG_member, scope: !391, file: !392, line: 1184, baseType: !974, size: 128, offset: 12416)
!974 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !391, file: !392, line: 1184, size: 128, elements: !975)
!975 = !{!976, !977}
!976 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_users", scope: !974, file: !392, line: 1185, baseType: !406, size: 32)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !974, file: !392, line: 1186, baseType: !684, size: 128, align: 64)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "splice_pipe", scope: !391, file: !392, line: 1190, baseType: !979, size: 64, offset: 12544)
!979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !980, size: 64)
!980 = !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_inode_info", file: !392, line: 53, flags: DIFlagFwdDecl)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "task_frag", scope: !391, file: !392, line: 1192, baseType: !982, size: 128, offset: 12608)
!982 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page_frag", file: !339, line: 64, size: 128, elements: !983)
!983 = !{!984, !1077, !1078}
!984 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !982, file: !339, line: 65, baseType: !985, size: 64)
!985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !986, size: 64)
!986 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page", file: !234, line: 68, size: 512, align: 128, elements: !987)
!987 = !{!988, !989, !1069, !1076}
!988 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !986, file: !234, line: 69, baseType: !193, size: 64)
!989 = !DIDerivedType(tag: DW_TAG_member, scope: !986, file: !234, line: 77, baseType: !990, size: 320, offset: 64)
!990 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !986, file: !234, line: 77, size: 320, elements: !991)
!991 = !{!992, !1001, !1006, !1034, !1042, !1048, !1061, !1068}
!992 = !DIDerivedType(tag: DW_TAG_member, scope: !990, file: !234, line: 78, baseType: !993, size: 320)
!993 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !990, file: !234, line: 78, size: 320, elements: !994)
!994 = !{!995, !996, !999, !1000}
!995 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !993, file: !234, line: 84, baseType: !88, size: 128)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !993, file: !234, line: 86, baseType: !997, size: 64, offset: 128)
!997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !998, size: 64)
!998 = !DICompositeType(tag: DW_TAG_structure_type, name: "address_space", file: !234, line: 26, flags: DIFlagFwdDecl)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !993, file: !234, line: 87, baseType: !193, size: 64, offset: 192)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !993, file: !234, line: 94, baseType: !193, size: 64, offset: 256)
!1001 = !DIDerivedType(tag: DW_TAG_member, scope: !990, file: !234, line: 96, baseType: !1002, size: 64)
!1002 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !990, file: !234, line: 96, size: 64, elements: !1003)
!1003 = !{!1004}
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "dma_addr", scope: !1002, file: !234, line: 101, baseType: !1005, size: 64)
!1005 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_addr_t", file: !64, line: 143, baseType: !262)
!1006 = !DIDerivedType(tag: DW_TAG_member, scope: !990, file: !234, line: 103, baseType: !1007, size: 320)
!1007 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !990, file: !234, line: 103, size: 320, elements: !1008)
!1008 = !{!1009, !1019, !1022, !1023}
!1009 = !DIDerivedType(tag: DW_TAG_member, scope: !1007, file: !234, line: 104, baseType: !1010, size: 128)
!1010 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1007, file: !234, line: 104, size: 128, elements: !1011)
!1011 = !{!1012, !1013}
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "slab_list", scope: !1010, file: !234, line: 105, baseType: !88, size: 128)
!1013 = !DIDerivedType(tag: DW_TAG_member, scope: !1010, file: !234, line: 106, baseType: !1014, size: 128)
!1014 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1010, file: !234, line: 106, size: 128, elements: !1015)
!1015 = !{!1016, !1017, !1018}
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1014, file: !234, line: 107, baseType: !985, size: 64)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !1014, file: !234, line: 109, baseType: !127, size: 32, offset: 64)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "pobjects", scope: !1014, file: !234, line: 110, baseType: !127, size: 32, offset: 96)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "slab_cache", scope: !1007, file: !234, line: 117, baseType: !1020, size: 64, offset: 128)
!1020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1021, size: 64)
!1021 = !DICompositeType(tag: DW_TAG_structure_type, name: "kmem_cache", file: !234, line: 117, flags: DIFlagFwdDecl)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "freelist", scope: !1007, file: !234, line: 119, baseType: !65, size: 64, offset: 192)
!1023 = !DIDerivedType(tag: DW_TAG_member, scope: !1007, file: !234, line: 120, baseType: !1024, size: 64, offset: 256)
!1024 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1007, file: !234, line: 120, size: 64, elements: !1025)
!1025 = !{!1026, !1027, !1028}
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "s_mem", scope: !1024, file: !234, line: 121, baseType: !65, size: 64)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "counters", scope: !1024, file: !234, line: 122, baseType: !193, size: 64)
!1028 = !DIDerivedType(tag: DW_TAG_member, scope: !1024, file: !234, line: 123, baseType: !1029, size: 32)
!1029 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1024, file: !234, line: 123, size: 32, elements: !1030)
!1030 = !{!1031, !1032, !1033}
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "inuse", scope: !1029, file: !234, line: 124, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !1029, file: !234, line: 125, baseType: !7, size: 15, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !1029, file: !234, line: 126, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!1034 = !DIDerivedType(tag: DW_TAG_member, scope: !990, file: !234, line: 130, baseType: !1035, size: 192)
!1035 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !990, file: !234, line: 130, size: 192, elements: !1036)
!1036 = !{!1037, !1038, !1039, !1040, !1041}
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "compound_head", scope: !1035, file: !234, line: 131, baseType: !193, size: 64)
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "compound_dtor", scope: !1035, file: !234, line: 134, baseType: !539, size: 8, offset: 64)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "compound_order", scope: !1035, file: !234, line: 135, baseType: !539, size: 8, offset: 72)
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "compound_mapcount", scope: !1035, file: !234, line: 136, baseType: !284, size: 32, offset: 96)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "compound_nr", scope: !1035, file: !234, line: 137, baseType: !7, size: 32, offset: 128)
!1042 = !DIDerivedType(tag: DW_TAG_member, scope: !990, file: !234, line: 139, baseType: !1043, size: 256)
!1043 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !990, file: !234, line: 139, size: 256, elements: !1044)
!1044 = !{!1045, !1046, !1047}
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "_compound_pad_1", scope: !1043, file: !234, line: 140, baseType: !193, size: 64)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "hpage_pinned_refcount", scope: !1043, file: !234, line: 141, baseType: !284, size: 32, offset: 64)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_list", scope: !1043, file: !234, line: 143, baseType: !88, size: 128, offset: 128)
!1048 = !DIDerivedType(tag: DW_TAG_member, scope: !990, file: !234, line: 145, baseType: !1049, size: 256)
!1049 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !990, file: !234, line: 145, size: 256, elements: !1050)
!1050 = !{!1051, !1052, !1054, !1055, !1060}
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_1", scope: !1049, file: !234, line: 146, baseType: !193, size: 64)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "pmd_huge_pte", scope: !1049, file: !234, line: 147, baseType: !1053, size: 64, offset: 64)
!1053 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgtable_t", file: !223, line: 509, baseType: !985)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_2", scope: !1049, file: !234, line: 148, baseType: !193, size: 64, offset: 128)
!1055 = !DIDerivedType(tag: DW_TAG_member, scope: !1049, file: !234, line: 149, baseType: !1056, size: 64, offset: 192)
!1056 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1049, file: !234, line: 149, size: 64, elements: !1057)
!1057 = !{!1058, !1059}
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "pt_mm", scope: !1056, file: !234, line: 150, baseType: !250, size: 64)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "pt_frag_refcount", scope: !1056, file: !234, line: 151, baseType: !284, size: 32)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !1049, file: !234, line: 156, baseType: !101, offset: 256)
!1061 = !DIDerivedType(tag: DW_TAG_member, scope: !990, file: !234, line: 159, baseType: !1062, size: 128)
!1062 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !990, file: !234, line: 159, size: 128, elements: !1063)
!1063 = !{!1064, !1067}
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "pgmap", scope: !1062, file: !234, line: 161, baseType: !1065, size: 64)
!1065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1066, size: 64)
!1066 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap", file: !234, line: 161, flags: DIFlagFwdDecl)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "zone_device_data", scope: !1062, file: !234, line: 162, baseType: !65, size: 64, offset: 64)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !990, file: !234, line: 176, baseType: !684, size: 128, align: 64)
!1069 = !DIDerivedType(tag: DW_TAG_member, scope: !986, file: !234, line: 179, baseType: !1070, size: 32, offset: 384)
!1070 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !986, file: !234, line: 179, size: 32, elements: !1071)
!1071 = !{!1072, !1073, !1074, !1075}
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "_mapcount", scope: !1070, file: !234, line: 184, baseType: !284, size: 32)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "page_type", scope: !1070, file: !234, line: 192, baseType: !7, size: 32)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !1070, file: !234, line: 194, baseType: !7, size: 32)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !1070, file: !234, line: 195, baseType: !127, size: 32)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "_refcount", scope: !986, file: !234, line: 199, baseType: !284, size: 32, offset: 416)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !982, file: !339, line: 67, baseType: !401, size: 32, offset: 64)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !982, file: !339, line: 68, baseType: !401, size: 32, offset: 96)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied", scope: !391, file: !392, line: 1206, baseType: !127, size: 32, offset: 12736)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied_pause", scope: !391, file: !392, line: 1207, baseType: !127, size: 32, offset: 12768)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_paused_when", scope: !391, file: !392, line: 1209, baseType: !193, size: 64, offset: 12800)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "timer_slack_ns", scope: !391, file: !392, line: 1219, baseType: !262, size: 64, offset: 12864)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "default_timer_slack_ns", scope: !391, file: !392, line: 1220, baseType: !262, size: 64, offset: 12928)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "pagefault_disabled", scope: !391, file: !392, line: 1317, baseType: !127, size: 32, offset: 12992)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "oom_reaper_list", scope: !391, file: !392, line: 1319, baseType: !390, size: 64, offset: 13056)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm_area", scope: !391, file: !392, line: 1322, baseType: !1087, size: 64, offset: 13120)
!1087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1088, size: 64)
!1088 = !DICompositeType(tag: DW_TAG_structure_type, name: "vm_struct", file: !1089, line: 9, flags: DIFlagFwdDecl)
!1089 = !DIFile(filename: "./include/linux/kasan.h", directory: "/home/lizy2001/genbc/linux")
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "stack_refcount", scope: !391, file: !392, line: 1326, baseType: !406, size: 32, offset: 13184)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "mce_vaddr", scope: !391, file: !392, line: 1342, baseType: !65, size: 64, offset: 13248)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kflags", scope: !391, file: !392, line: 1343, baseType: !264, size: 64, offset: 13312)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "mce_addr", scope: !391, file: !392, line: 1344, baseType: !262, size: 64, offset: 13376)
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "mce_ripv", scope: !391, file: !392, line: 1345, baseType: !264, size: 1, offset: 13440, flags: DIFlagBitField, extraData: i64 13440)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "mce_whole_page", scope: !391, file: !392, line: 1346, baseType: !264, size: 1, offset: 13441, flags: DIFlagBitField, extraData: i64 13440)
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "__mce_reserved", scope: !391, file: !392, line: 1347, baseType: !264, size: 62, offset: 13442, flags: DIFlagBitField, extraData: i64 13440)
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kill_me", scope: !391, file: !392, line: 1348, baseType: !684, size: 128, align: 64, offset: 13504)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !391, file: !392, line: 1358, baseType: !1099, size: 34816, offset: 13824)
!1099 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_struct", file: !1100, line: 485, size: 34816, elements: !1101)
!1100 = !DIFile(filename: "./arch/x86/include/asm/processor.h", directory: "/home/lizy2001/genbc/linux")
!1101 = !{!1102, !1120, !1121, !1122, !1123, !1124, !1125, !1126, !1127, !1131, !1132, !1133, !1134, !1135, !1136, !1139, !1140, !1141}
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "tls_array", scope: !1099, file: !1100, line: 487, baseType: !1103, size: 192)
!1103 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1104, size: 192, elements: !144)
!1104 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "desc_struct", file: !1105, line: 16, size: 64, elements: !1106)
!1105 = !DIFile(filename: "./arch/x86/include/asm/desc_defs.h", directory: "/home/lizy2001/genbc/linux")
!1106 = !{!1107, !1108, !1109, !1110, !1111, !1112, !1113, !1114, !1115, !1116, !1117, !1118, !1119}
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "limit0", scope: !1104, file: !1105, line: 17, baseType: !374, size: 16)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "base0", scope: !1104, file: !1105, line: 18, baseType: !374, size: 16, offset: 16)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "base1", scope: !1104, file: !1105, line: 19, baseType: !374, size: 8, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1104, file: !1105, line: 19, baseType: !374, size: 4, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !1104, file: !1105, line: 19, baseType: !374, size: 1, offset: 44, flags: DIFlagBitField, extraData: i64 32)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "dpl", scope: !1104, file: !1105, line: 19, baseType: !374, size: 2, offset: 45, flags: DIFlagBitField, extraData: i64 32)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !1104, file: !1105, line: 19, baseType: !374, size: 1, offset: 47, flags: DIFlagBitField, extraData: i64 32)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "limit1", scope: !1104, file: !1105, line: 20, baseType: !374, size: 4, offset: 48, flags: DIFlagBitField, extraData: i64 32)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "avl", scope: !1104, file: !1105, line: 20, baseType: !374, size: 1, offset: 52, flags: DIFlagBitField, extraData: i64 32)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !1104, file: !1105, line: 20, baseType: !374, size: 1, offset: 53, flags: DIFlagBitField, extraData: i64 32)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !1104, file: !1105, line: 20, baseType: !374, size: 1, offset: 54, flags: DIFlagBitField, extraData: i64 32)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !1104, file: !1105, line: 20, baseType: !374, size: 1, offset: 55, flags: DIFlagBitField, extraData: i64 32)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "base2", scope: !1104, file: !1105, line: 20, baseType: !374, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 32)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !1099, file: !1100, line: 491, baseType: !193, size: 64, offset: 192)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "es", scope: !1099, file: !1100, line: 495, baseType: !185, size: 16, offset: 256)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !1099, file: !1100, line: 496, baseType: !185, size: 16, offset: 272)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "fsindex", scope: !1099, file: !1100, line: 497, baseType: !185, size: 16, offset: 288)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "gsindex", scope: !1099, file: !1100, line: 498, baseType: !185, size: 16, offset: 304)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "fsbase", scope: !1099, file: !1100, line: 502, baseType: !193, size: 64, offset: 320)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1099, file: !1100, line: 503, baseType: !193, size: 64, offset: 384)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_bps", scope: !1099, file: !1100, line: 514, baseType: !1128, size: 256, offset: 448)
!1128 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1129, size: 256, elements: !343)
!1129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1130, size: 64)
!1130 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event", file: !1100, line: 483, flags: DIFlagFwdDecl)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_dr6", scope: !1099, file: !1100, line: 516, baseType: !193, size: 64, offset: 704)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_dr7", scope: !1099, file: !1100, line: 518, baseType: !193, size: 64, offset: 768)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "cr2", scope: !1099, file: !1100, line: 520, baseType: !193, size: 64, offset: 832)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "trap_nr", scope: !1099, file: !1100, line: 521, baseType: !193, size: 64, offset: 896)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "error_code", scope: !1099, file: !1100, line: 522, baseType: !193, size: 64, offset: 960)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "io_bitmap", scope: !1099, file: !1100, line: 528, baseType: !1137, size: 64, offset: 1024)
!1137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1138, size: 64)
!1138 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_bitmap", file: !1100, line: 10, flags: DIFlagFwdDecl)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "iopl_emul", scope: !1099, file: !1100, line: 535, baseType: !193, size: 64, offset: 1088)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "sig_on_uaccess_err", scope: !1099, file: !1100, line: 537, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "fpu", scope: !1099, file: !1100, line: 540, baseType: !1142, size: 33280, offset: 1536)
!1142 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fpu", file: !1143, line: 317, size: 33280, elements: !1144)
!1143 = !DIFile(filename: "./arch/x86/include/asm/fpu/types.h", directory: "/home/lizy2001/genbc/linux")
!1144 = !{!1145, !1146, !1147}
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "last_cpu", scope: !1142, file: !1143, line: 330, baseType: !7, size: 32)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "avx512_timestamp", scope: !1142, file: !1143, line: 337, baseType: !193, size: 64, offset: 64)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1142, file: !1143, line: 348, baseType: !1148, size: 32768, offset: 512)
!1148 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "fpregs_state", file: !1143, line: 304, size: 32768, elements: !1149)
!1149 = !{!1150, !1165, !1204, !1254, !1271}
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "fsave", scope: !1148, file: !1143, line: 305, baseType: !1151, size: 896)
!1151 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fregs_state", file: !1143, line: 12, size: 896, elements: !1152)
!1152 = !{!1153, !1154, !1155, !1156, !1157, !1158, !1159, !1160, !1164}
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !1151, file: !1143, line: 13, baseType: !400, size: 32)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !1151, file: !1143, line: 14, baseType: !400, size: 32, offset: 32)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !1151, file: !1143, line: 15, baseType: !400, size: 32, offset: 64)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !1151, file: !1143, line: 16, baseType: !400, size: 32, offset: 96)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !1151, file: !1143, line: 17, baseType: !400, size: 32, offset: 128)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !1151, file: !1143, line: 18, baseType: !400, size: 32, offset: 160)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !1151, file: !1143, line: 19, baseType: !400, size: 32, offset: 192)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !1151, file: !1143, line: 22, baseType: !1161, size: 640, offset: 224)
!1161 = !DICompositeType(tag: DW_TAG_array_type, baseType: !400, size: 640, elements: !1162)
!1162 = !{!1163}
!1163 = !DISubrange(count: 20)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !1151, file: !1143, line: 25, baseType: !400, size: 32, offset: 864)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "fxsave", scope: !1148, file: !1143, line: 306, baseType: !1166, size: 4096, align: 128)
!1166 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fxregs_state", file: !1143, line: 34, size: 4096, align: 128, elements: !1167)
!1167 = !{!1168, !1169, !1170, !1171, !1172, !1187, !1188, !1189, !1193, !1195, !1199}
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !1166, file: !1143, line: 35, baseType: !374, size: 16)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !1166, file: !1143, line: 36, baseType: !374, size: 16, offset: 16)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !1166, file: !1143, line: 37, baseType: !374, size: 16, offset: 32)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "fop", scope: !1166, file: !1143, line: 38, baseType: !374, size: 16, offset: 48)
!1172 = !DIDerivedType(tag: DW_TAG_member, scope: !1166, file: !1143, line: 39, baseType: !1173, size: 128, offset: 64)
!1173 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1166, file: !1143, line: 39, size: 128, elements: !1174)
!1174 = !{!1175, !1180}
!1175 = !DIDerivedType(tag: DW_TAG_member, scope: !1173, file: !1143, line: 40, baseType: !1176, size: 128)
!1176 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1173, file: !1143, line: 40, size: 128, elements: !1177)
!1177 = !{!1178, !1179}
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "rip", scope: !1176, file: !1143, line: 41, baseType: !262, size: 64)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "rdp", scope: !1176, file: !1143, line: 42, baseType: !262, size: 64, offset: 64)
!1180 = !DIDerivedType(tag: DW_TAG_member, scope: !1173, file: !1143, line: 44, baseType: !1181, size: 128)
!1181 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1173, file: !1143, line: 44, size: 128, elements: !1182)
!1182 = !{!1183, !1184, !1185, !1186}
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !1181, file: !1143, line: 45, baseType: !400, size: 32)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !1181, file: !1143, line: 46, baseType: !400, size: 32, offset: 32)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !1181, file: !1143, line: 47, baseType: !400, size: 32, offset: 64)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !1181, file: !1143, line: 48, baseType: !400, size: 32, offset: 96)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr", scope: !1166, file: !1143, line: 51, baseType: !400, size: 32, offset: 192)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr_mask", scope: !1166, file: !1143, line: 52, baseType: !400, size: 32, offset: 224)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !1166, file: !1143, line: 55, baseType: !1190, size: 1024, offset: 256)
!1190 = !DICompositeType(tag: DW_TAG_array_type, baseType: !400, size: 1024, elements: !1191)
!1191 = !{!1192}
!1192 = !DISubrange(count: 32)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "xmm_space", scope: !1166, file: !1143, line: 58, baseType: !1194, size: 2048, offset: 1280)
!1194 = !DICompositeType(tag: DW_TAG_array_type, baseType: !400, size: 2048, elements: !148)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !1166, file: !1143, line: 60, baseType: !1196, size: 384, offset: 3328)
!1196 = !DICompositeType(tag: DW_TAG_array_type, baseType: !400, size: 384, elements: !1197)
!1197 = !{!1198}
!1198 = !DISubrange(count: 12)
!1199 = !DIDerivedType(tag: DW_TAG_member, scope: !1166, file: !1143, line: 62, baseType: !1200, size: 384, offset: 3712)
!1200 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1166, file: !1143, line: 62, size: 384, elements: !1201)
!1201 = !{!1202, !1203}
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "padding1", scope: !1200, file: !1143, line: 63, baseType: !1196, size: 384)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "sw_reserved", scope: !1200, file: !1143, line: 64, baseType: !1196, size: 384)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !1148, file: !1143, line: 307, baseType: !1205, size: 1088)
!1205 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swregs_state", file: !1143, line: 79, size: 1088, elements: !1206)
!1206 = !{!1207, !1208, !1209, !1210, !1211, !1212, !1213, !1214, !1215, !1216, !1217, !1218, !1219, !1220, !1221, !1253}
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !1205, file: !1143, line: 80, baseType: !400, size: 32)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !1205, file: !1143, line: 81, baseType: !400, size: 32, offset: 32)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !1205, file: !1143, line: 82, baseType: !400, size: 32, offset: 64)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !1205, file: !1143, line: 83, baseType: !400, size: 32, offset: 96)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !1205, file: !1143, line: 84, baseType: !400, size: 32, offset: 128)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !1205, file: !1143, line: 85, baseType: !400, size: 32, offset: 160)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !1205, file: !1143, line: 86, baseType: !400, size: 32, offset: 192)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !1205, file: !1143, line: 88, baseType: !1161, size: 640, offset: 224)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "ftop", scope: !1205, file: !1143, line: 89, baseType: !537, size: 8, offset: 864)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !1205, file: !1143, line: 90, baseType: !537, size: 8, offset: 872)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "lookahead", scope: !1205, file: !1143, line: 91, baseType: !537, size: 8, offset: 880)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "no_update", scope: !1205, file: !1143, line: 92, baseType: !537, size: 8, offset: 888)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "rm", scope: !1205, file: !1143, line: 93, baseType: !537, size: 8, offset: 896)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "alimit", scope: !1205, file: !1143, line: 94, baseType: !537, size: 8, offset: 904)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !1205, file: !1143, line: 95, baseType: !1222, size: 64, offset: 960)
!1222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1223, size: 64)
!1223 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "math_emu_info", file: !1224, line: 11, size: 128, elements: !1225)
!1224 = !DIFile(filename: "./arch/x86/include/asm/math_emu.h", directory: "/home/lizy2001/genbc/linux")
!1225 = !{!1226, !1227}
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "___orig_eip", scope: !1223, file: !1224, line: 12, baseType: !178, size: 64)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !1223, file: !1224, line: 13, baseType: !1228, size: 64, offset: 64)
!1228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1229, size: 64)
!1229 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pt_regs", file: !1230, line: 56, size: 1344, elements: !1231)
!1230 = !DIFile(filename: "./arch/x86/include/asm/ptrace.h", directory: "/home/lizy2001/genbc/linux")
!1231 = !{!1232, !1233, !1234, !1235, !1236, !1237, !1238, !1239, !1240, !1241, !1242, !1243, !1244, !1245, !1246, !1247, !1248, !1249, !1250, !1251, !1252}
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !1229, file: !1230, line: 61, baseType: !193, size: 64)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !1229, file: !1230, line: 62, baseType: !193, size: 64, offset: 64)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "r13", scope: !1229, file: !1230, line: 63, baseType: !193, size: 64, offset: 128)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !1229, file: !1230, line: 64, baseType: !193, size: 64, offset: 192)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "bp", scope: !1229, file: !1230, line: 65, baseType: !193, size: 64, offset: 256)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "bx", scope: !1229, file: !1230, line: 66, baseType: !193, size: 64, offset: 320)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "r11", scope: !1229, file: !1230, line: 68, baseType: !193, size: 64, offset: 384)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "r10", scope: !1229, file: !1230, line: 69, baseType: !193, size: 64, offset: 448)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "r9", scope: !1229, file: !1230, line: 70, baseType: !193, size: 64, offset: 512)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "r8", scope: !1229, file: !1230, line: 71, baseType: !193, size: 64, offset: 576)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "ax", scope: !1229, file: !1230, line: 72, baseType: !193, size: 64, offset: 640)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "cx", scope: !1229, file: !1230, line: 73, baseType: !193, size: 64, offset: 704)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "dx", scope: !1229, file: !1230, line: 74, baseType: !193, size: 64, offset: 768)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "si", scope: !1229, file: !1230, line: 75, baseType: !193, size: 64, offset: 832)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "di", scope: !1229, file: !1230, line: 76, baseType: !193, size: 64, offset: 896)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "orig_ax", scope: !1229, file: !1230, line: 81, baseType: !193, size: 64, offset: 960)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !1229, file: !1230, line: 83, baseType: !193, size: 64, offset: 1024)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !1229, file: !1230, line: 84, baseType: !193, size: 64, offset: 1088)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1229, file: !1230, line: 85, baseType: !193, size: 64, offset: 1152)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !1229, file: !1230, line: 86, baseType: !193, size: 64, offset: 1216)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "ss", scope: !1229, file: !1230, line: 87, baseType: !193, size: 64, offset: 1280)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "entry_eip", scope: !1205, file: !1143, line: 96, baseType: !400, size: 32, offset: 1024)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "xsave", scope: !1148, file: !1143, line: 308, baseType: !1255, size: 4608, align: 512)
!1255 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xregs_state", file: !1143, line: 289, size: 4608, align: 512, elements: !1256)
!1256 = !{!1257, !1258, !1267}
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "i387", scope: !1255, file: !1143, line: 290, baseType: !1166, size: 4096, align: 128)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !1255, file: !1143, line: 291, baseType: !1259, size: 512, offset: 4096)
!1259 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xstate_header", file: !1143, line: 268, size: 512, elements: !1260)
!1260 = !{!1261, !1262, !1263}
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "xfeatures", scope: !1259, file: !1143, line: 269, baseType: !262, size: 64)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "xcomp_bv", scope: !1259, file: !1143, line: 270, baseType: !262, size: 64, offset: 64)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !1259, file: !1143, line: 271, baseType: !1264, size: 384, offset: 128)
!1264 = !DICompositeType(tag: DW_TAG_array_type, baseType: !262, size: 384, elements: !1265)
!1265 = !{!1266}
!1266 = !DISubrange(count: 6)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "extended_state_area", scope: !1255, file: !1143, line: 292, baseType: !1268, offset: 4608)
!1268 = !DICompositeType(tag: DW_TAG_array_type, baseType: !537, elements: !1269)
!1269 = !{!1270}
!1270 = !DISubrange(count: 0)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "__padding", scope: !1148, file: !1143, line: 309, baseType: !1272, size: 32768)
!1272 = !DICompositeType(tag: DW_TAG_array_type, baseType: !537, size: 32768, elements: !1273)
!1273 = !{!1274}
!1274 = !DISubrange(count: 4096)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !387, file: !234, line: 378, baseType: !1276, size: 64, offset: 64)
!1276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !387, size: 64)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "startup", scope: !383, file: !234, line: 384, baseType: !706, size: 192, offset: 192)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_lock", scope: !254, file: !234, line: 500, baseType: !101, offset: 6656)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_table", scope: !254, file: !234, line: 501, baseType: !1280, size: 64, offset: 6656)
!1280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1281, size: 64)
!1281 = !DICompositeType(tag: DW_TAG_structure_type, name: "kioctx_table", file: !234, line: 387, flags: DIFlagFwdDecl)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !254, file: !234, line: 516, baseType: !1283, size: 64, offset: 6720)
!1283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1284, size: 64)
!1284 = !DICompositeType(tag: DW_TAG_structure_type, name: "user_namespace", file: !234, line: 516, flags: DIFlagFwdDecl)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "exe_file", scope: !254, file: !234, line: 519, baseType: !221, size: 64, offset: 6784)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_subscriptions", scope: !254, file: !234, line: 521, baseType: !1287, size: 64, offset: 6848)
!1287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1288, size: 64)
!1288 = !DICompositeType(tag: DW_TAG_structure_type, name: "mmu_notifier_subscriptions", file: !234, line: 521, flags: DIFlagFwdDecl)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_pending", scope: !254, file: !234, line: 545, baseType: !284, size: 32, offset: 6912)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_batched", scope: !254, file: !234, line: 548, baseType: !970, size: 8, offset: 6944)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "uprobes_state", scope: !254, file: !234, line: 550, baseType: !1292, offset: 6952)
!1292 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uprobes_state", file: !1293, line: 142, elements: !115)
!1293 = !DIFile(filename: "./include/linux/uprobes.h", directory: "/home/lizy2001/genbc/linux")
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "async_put_work", scope: !254, file: !234, line: 554, baseType: !1295, size: 256, offset: 6976)
!1295 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "work_struct", file: !1296, line: 102, size: 256, elements: !1297)
!1296 = !DIFile(filename: "./include/linux/workqueue.h", directory: "/home/lizy2001/genbc/linux")
!1297 = !{!1298, !1299, !1300}
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1295, file: !1296, line: 103, baseType: !292, size: 64)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !1295, file: !1296, line: 104, baseType: !88, size: 128, offset: 64)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1295, file: !1296, line: 105, baseType: !1301, size: 64, offset: 192)
!1301 = !DIDerivedType(tag: DW_TAG_typedef, name: "work_func_t", file: !1296, line: 21, baseType: !1302)
!1302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1303, size: 64)
!1303 = !DISubroutineType(types: !1304)
!1304 = !{null, !1305}
!1305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1295, size: 64)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "pasid", scope: !254, file: !234, line: 557, baseType: !400, size: 32, offset: 7232)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_bitmap", scope: !251, file: !234, line: 565, baseType: !1308, offset: 7296)
!1308 = !DICompositeType(tag: DW_TAG_array_type, baseType: !193, elements: !1309)
!1309 = !{!1310}
!1310 = !DISubrange(count: -1)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "vm_page_prot", scope: !233, file: !234, line: 333, baseType: !1312, size: 64, offset: 576)
!1312 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprot_t", file: !223, line: 284, baseType: !1313)
!1313 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pgprot", file: !223, line: 284, size: 64, elements: !1314)
!1314 = !{!1315}
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "pgprot", scope: !1313, file: !223, line: 284, baseType: !1316, size: 64)
!1316 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprotval_t", file: !282, line: 19, baseType: !193)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "vm_flags", scope: !233, file: !234, line: 334, baseType: !193, size: 64, offset: 640)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "shared", scope: !233, file: !234, line: 343, baseType: !1319, size: 256, offset: 704)
!1319 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !233, file: !234, line: 340, size: 256, elements: !1320)
!1320 = !{!1321, !1322}
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !1319, file: !234, line: 341, baseType: !241, size: 192, align: 64)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_last", scope: !1319, file: !234, line: 342, baseType: !193, size: 64, offset: 192)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma_chain", scope: !233, file: !234, line: 351, baseType: !88, size: 128, offset: 960)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma", scope: !233, file: !234, line: 353, baseType: !1325, size: 64, offset: 1088)
!1325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1326, size: 64)
!1326 = !DICompositeType(tag: DW_TAG_structure_type, name: "anon_vma", file: !234, line: 353, flags: DIFlagFwdDecl)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !233, file: !234, line: 356, baseType: !1328, size: 64, offset: 1152)
!1328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1329, size: 64)
!1329 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1330)
!1330 = !DICompositeType(tag: DW_TAG_structure_type, name: "vm_operations_struct", file: !234, line: 356, flags: DIFlagFwdDecl)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "vm_pgoff", scope: !233, file: !234, line: 359, baseType: !193, size: 64, offset: 1216)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "vm_file", scope: !233, file: !234, line: 361, baseType: !221, size: 64, offset: 1280)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "vm_private_data", scope: !233, file: !234, line: 362, baseType: !65, size: 64, offset: 1344)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "swap_readahead_info", scope: !233, file: !234, line: 365, baseType: !292, size: 64, offset: 1408)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "vm_userfaultfd_ctx", scope: !233, file: !234, line: 373, baseType: !1336, offset: 1472)
!1336 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_userfaultfd_ctx", file: !234, line: 296, elements: !115)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", scope: !200, file: !168, line: 90, baseType: !195, size: 64, offset: 192)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "bin_attrs", scope: !200, file: !168, line: 91, baseType: !1339, size: 64, offset: 256)
!1339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !211, size: 64)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "child_ns_type", scope: !158, file: !81, line: 143, baseType: !1341, size: 64, offset: 256)
!1341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1342, size: 64)
!1342 = !DISubroutineType(types: !1343)
!1343 = !{!1344, !94}
!1344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1345, size: 64)
!1345 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1346)
!1346 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_ns_type_operations", file: !18, line: 39, size: 384, elements: !1347)
!1347 = !{!1348, !1349, !1353, !1357, !1365, !1369}
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1346, file: !18, line: 40, baseType: !17, size: 32)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "current_may_mount", scope: !1346, file: !18, line: 41, baseType: !1350, size: 64, offset: 64)
!1350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1351, size: 64)
!1351 = !DISubroutineType(types: !1352)
!1352 = !{!970}
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "grab_current_ns", scope: !1346, file: !18, line: 42, baseType: !1354, size: 64, offset: 128)
!1354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1355, size: 64)
!1355 = !DISubroutineType(types: !1356)
!1356 = !{!65}
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "netlink_ns", scope: !1346, file: !18, line: 43, baseType: !1358, size: 64, offset: 192)
!1358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1359, size: 64)
!1359 = !DISubroutineType(types: !1360)
!1360 = !{!1361, !1363}
!1361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1362, size: 64)
!1362 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!1363 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1364, size: 64)
!1364 = !DICompositeType(tag: DW_TAG_structure_type, name: "sock", file: !18, line: 19, flags: DIFlagFwdDecl)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "initial_ns", scope: !1346, file: !18, line: 44, baseType: !1366, size: 64, offset: 256)
!1366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1367, size: 64)
!1367 = !DISubroutineType(types: !1368)
!1368 = !{!1361}
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "drop_ns", scope: !1346, file: !18, line: 45, baseType: !1370, size: 64, offset: 320)
!1370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1371, size: 64)
!1371 = !DISubroutineType(types: !1372)
!1372 = !{null, !65}
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !158, file: !81, line: 144, baseType: !1374, size: 64, offset: 320)
!1374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1375, size: 64)
!1375 = !DISubroutineType(types: !1376)
!1376 = !{!1361, !94}
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !158, file: !81, line: 145, baseType: !1378, size: 64, offset: 384)
!1378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1379, size: 64)
!1379 = !DISubroutineType(types: !1380)
!1380 = !{null, !94, !1381, !1388}
!1381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1382, size: 64)
!1382 = !DIDerivedType(tag: DW_TAG_typedef, name: "kuid_t", file: !1383, line: 23, baseType: !1384)
!1383 = !DIFile(filename: "./include/linux/uidgid.h", directory: "/home/lizy2001/genbc/linux")
!1384 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1383, line: 21, size: 32, elements: !1385)
!1385 = !{!1386}
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1384, file: !1383, line: 22, baseType: !1387, size: 32)
!1387 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !64, line: 32, baseType: !866)
!1388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1389, size: 64)
!1389 = !DIDerivedType(tag: DW_TAG_typedef, name: "kgid_t", file: !1383, line: 28, baseType: !1390)
!1390 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1383, line: 26, size: 32, elements: !1391)
!1391 = !{!1392}
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1390, file: !1383, line: 27, baseType: !1393, size: 32)
!1393 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !64, line: 33, baseType: !1394)
!1394 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_gid32_t", file: !176, line: 50, baseType: !7)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "sd", scope: !80, file: !81, line: 70, baseType: !1396, size: 64, offset: 384)
!1396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1397, size: 64)
!1397 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_node", file: !1398, line: 123, size: 1024, elements: !1399)
!1398 = !DIFile(filename: "./include/linux/kernfs.h", directory: "/home/lizy2001/genbc/linux")
!1399 = !{!1400, !1401, !1402, !1403, !1404, !1405, !1406, !1407, !1541, !1542, !1543, !1544, !1545}
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1397, file: !1398, line: 124, baseType: !284, size: 32)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !1397, file: !1398, line: 125, baseType: !284, size: 32, offset: 32)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1397, file: !1398, line: 135, baseType: !1396, size: 64, offset: 64)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1397, file: !1398, line: 136, baseType: !84, size: 64, offset: 128)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !1397, file: !1398, line: 138, baseType: !241, size: 192, align: 64, offset: 192)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !1397, file: !1398, line: 140, baseType: !1361, size: 64, offset: 384)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1397, file: !1398, line: 141, baseType: !7, size: 32, offset: 448)
!1407 = !DIDerivedType(tag: DW_TAG_member, scope: !1397, file: !1398, line: 142, baseType: !1408, size: 256, offset: 512)
!1408 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1397, file: !1398, line: 142, size: 256, elements: !1409)
!1409 = !{!1410, !1464, !1468}
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !1408, file: !1398, line: 143, baseType: !1411, size: 192)
!1411 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_dir", file: !1398, line: 91, size: 192, elements: !1412)
!1412 = !{!1413, !1414, !1415}
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "subdirs", scope: !1411, file: !1398, line: 92, baseType: !193, size: 64)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1411, file: !1398, line: 94, baseType: !258, size: 64, offset: 64)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !1411, file: !1398, line: 100, baseType: !1416, size: 64, offset: 128)
!1416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1417, size: 64)
!1417 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_root", file: !1398, line: 180, size: 704, elements: !1418)
!1418 = !{!1419, !1420, !1421, !1434, !1435, !1436, !1462, !1463}
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !1417, file: !1398, line: 182, baseType: !1396, size: 64)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1417, file: !1398, line: 183, baseType: !7, size: 32, offset: 64)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "ino_idr", scope: !1417, file: !1398, line: 186, baseType: !1422, size: 192, offset: 128)
!1422 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "idr", file: !1423, line: 19, size: 192, elements: !1424)
!1423 = !DIFile(filename: "./include/linux/idr.h", directory: "/home/lizy2001/genbc/linux")
!1424 = !{!1425, !1432, !1433}
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "idr_rt", scope: !1422, file: !1423, line: 20, baseType: !1426, size: 128)
!1426 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xarray", file: !1427, line: 292, size: 128, elements: !1428)
!1427 = !DIFile(filename: "./include/linux/xarray.h", directory: "/home/lizy2001/genbc/linux")
!1428 = !{!1429, !1430, !1431}
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "xa_lock", scope: !1426, file: !1427, line: 293, baseType: !101)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "xa_flags", scope: !1426, file: !1427, line: 295, baseType: !63, size: 32)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "xa_head", scope: !1426, file: !1427, line: 296, baseType: !65, size: 64, offset: 64)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "idr_base", scope: !1422, file: !1423, line: 21, baseType: !7, size: 32, offset: 128)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "idr_next", scope: !1422, file: !1423, line: 22, baseType: !7, size: 32, offset: 160)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "last_id_lowbits", scope: !1417, file: !1398, line: 187, baseType: !400, size: 32, offset: 320)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "id_highbits", scope: !1417, file: !1398, line: 188, baseType: !400, size: 32, offset: 352)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "syscall_ops", scope: !1417, file: !1398, line: 189, baseType: !1437, size: 64, offset: 384)
!1437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1438, size: 64)
!1438 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_syscall_ops", file: !1398, line: 168, size: 320, elements: !1439)
!1439 = !{!1440, !1446, !1450, !1454, !1458}
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !1438, file: !1398, line: 169, baseType: !1441, size: 64)
!1441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1442, size: 64)
!1442 = !DISubroutineType(types: !1443)
!1443 = !{!127, !1444, !1416}
!1444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1445, size: 64)
!1445 = !DICompositeType(tag: DW_TAG_structure_type, name: "seq_file", file: !223, line: 539, flags: DIFlagFwdDecl)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !1438, file: !1398, line: 171, baseType: !1447, size: 64, offset: 64)
!1447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1448, size: 64)
!1448 = !DISubroutineType(types: !1449)
!1449 = !{!127, !1396, !84, !184}
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !1438, file: !1398, line: 173, baseType: !1451, size: 64, offset: 128)
!1451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1452, size: 64)
!1452 = !DISubroutineType(types: !1453)
!1453 = !{!127, !1396}
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !1438, file: !1398, line: 174, baseType: !1455, size: 64, offset: 192)
!1455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1456, size: 64)
!1456 = !DISubroutineType(types: !1457)
!1457 = !{!127, !1396, !1396, !84}
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !1438, file: !1398, line: 176, baseType: !1459, size: 64, offset: 256)
!1459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1460, size: 64)
!1460 = !DISubroutineType(types: !1461)
!1461 = !{!127, !1444, !1396, !1416}
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "supers", scope: !1417, file: !1398, line: 192, baseType: !88, size: 128, offset: 448)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "deactivate_waitq", scope: !1417, file: !1398, line: 194, baseType: !677, size: 128, offset: 576)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !1408, file: !1398, line: 144, baseType: !1465, size: 64)
!1465 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_symlink", file: !1398, line: 103, size: 64, elements: !1466)
!1466 = !{!1467}
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "target_kn", scope: !1465, file: !1398, line: 104, baseType: !1396, size: 64)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !1408, file: !1398, line: 145, baseType: !1469, size: 256)
!1469 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_attr", file: !1398, line: 107, size: 256, elements: !1470)
!1470 = !{!1471, !1536, !1539, !1540}
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1469, file: !1398, line: 108, baseType: !1472, size: 64)
!1472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1473, size: 64)
!1473 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1474)
!1474 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_ops", file: !1398, line: 217, size: 768, elements: !1475)
!1475 = !{!1476, !1496, !1500, !1504, !1509, !1513, !1517, !1521, !1522, !1523, !1524, !1532}
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !1474, file: !1398, line: 222, baseType: !1477, size: 64)
!1477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1478, size: 64)
!1478 = !DISubroutineType(types: !1479)
!1479 = !{!127, !1480}
!1480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1481, size: 64)
!1481 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_file", file: !1398, line: 197, size: 1088, elements: !1482)
!1482 = !{!1483, !1484, !1485, !1486, !1487, !1488, !1489, !1490, !1491, !1492, !1493, !1494, !1495}
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !1481, file: !1398, line: 199, baseType: !1396, size: 64)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !1481, file: !1398, line: 200, baseType: !221, size: 64, offset: 64)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "seq_file", scope: !1481, file: !1398, line: 201, baseType: !1444, size: 64, offset: 128)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !1481, file: !1398, line: 202, baseType: !65, size: 64, offset: 192)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !1481, file: !1398, line: 205, baseType: !361, size: 192, offset: 256)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_mutex", scope: !1481, file: !1398, line: 206, baseType: !361, size: 192, offset: 448)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !1481, file: !1398, line: 207, baseType: !127, size: 32, offset: 640)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !1481, file: !1398, line: 208, baseType: !88, size: 128, offset: 704)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_buf", scope: !1481, file: !1398, line: 209, baseType: !143, size: 64, offset: 832)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !1481, file: !1398, line: 211, baseType: !190, size: 64, offset: 896)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "mmapped", scope: !1481, file: !1398, line: 212, baseType: !970, size: 1, offset: 960, flags: DIFlagBitField, extraData: i64 960)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "released", scope: !1481, file: !1398, line: 213, baseType: !970, size: 1, offset: 961, flags: DIFlagBitField, extraData: i64 960)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !1481, file: !1398, line: 214, baseType: !1328, size: 64, offset: 1024)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !1474, file: !1398, line: 223, baseType: !1497, size: 64, offset: 64)
!1497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1498, size: 64)
!1498 = !DISubroutineType(types: !1499)
!1499 = !{null, !1480}
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "seq_show", scope: !1474, file: !1398, line: 236, baseType: !1501, size: 64, offset: 128)
!1501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1502, size: 64)
!1502 = !DISubroutineType(types: !1503)
!1503 = !{!127, !1444, !65}
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "seq_start", scope: !1474, file: !1398, line: 238, baseType: !1505, size: 64, offset: 192)
!1505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1506, size: 64)
!1506 = !DISubroutineType(types: !1507)
!1507 = !{!65, !1444, !1508}
!1508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !224, size: 64)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "seq_next", scope: !1474, file: !1398, line: 239, baseType: !1510, size: 64, offset: 256)
!1510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1511, size: 64)
!1511 = !DISubroutineType(types: !1512)
!1512 = !{!65, !1444, !65, !1508}
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "seq_stop", scope: !1474, file: !1398, line: 240, baseType: !1514, size: 64, offset: 320)
!1514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1515, size: 64)
!1515 = !DISubroutineType(types: !1516)
!1516 = !{null, !1444, !65}
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !1474, file: !1398, line: 242, baseType: !1518, size: 64, offset: 384)
!1518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1519, size: 64)
!1519 = !DISubroutineType(types: !1520)
!1520 = !{!174, !1480, !143, !190, !224}
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !1474, file: !1398, line: 252, baseType: !190, size: 64, offset: 448)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc", scope: !1474, file: !1398, line: 259, baseType: !970, size: 8, offset: 512)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !1474, file: !1398, line: 260, baseType: !1518, size: 64, offset: 576)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !1474, file: !1398, line: 263, baseType: !1525, size: 64, offset: 640)
!1525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1526, size: 64)
!1526 = !DISubroutineType(types: !1527)
!1527 = !{!1528, !1480, !1530}
!1528 = !DIDerivedType(tag: DW_TAG_typedef, name: "__poll_t", file: !1529, line: 52, baseType: !7)
!1529 = !DIFile(filename: "./include/uapi/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!1530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1531, size: 64)
!1531 = !DICompositeType(tag: DW_TAG_structure_type, name: "poll_table_struct", file: !1398, line: 27, flags: DIFlagFwdDecl)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !1474, file: !1398, line: 266, baseType: !1533, size: 64, offset: 704)
!1533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1534, size: 64)
!1534 = !DISubroutineType(types: !1535)
!1535 = !{!127, !1480, !232}
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !1469, file: !1398, line: 109, baseType: !1537, size: 64, offset: 64)
!1537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1538, size: 64)
!1538 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_node", file: !1398, line: 31, flags: DIFlagFwdDecl)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1469, file: !1398, line: 110, baseType: !224, size: 64, offset: 128)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "notify_next", scope: !1469, file: !1398, line: 111, baseType: !1396, size: 64, offset: 192)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !1397, file: !1398, line: 148, baseType: !65, size: 64, offset: 768)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1397, file: !1398, line: 154, baseType: !262, size: 64, offset: 832)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1397, file: !1398, line: 156, baseType: !185, size: 16, offset: 896)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1397, file: !1398, line: 157, baseType: !184, size: 16, offset: 912)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "iattr", scope: !1397, file: !1398, line: 158, baseType: !1546, size: 64, offset: 960)
!1546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1547, size: 64)
!1547 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_iattrs", file: !1398, line: 32, flags: DIFlagFwdDecl)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !80, file: !81, line: 71, baseType: !1549, size: 32, offset: 448)
!1549 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kref", file: !1550, line: 19, size: 32, elements: !1551)
!1550 = !DIFile(filename: "./include/linux/kref.h", directory: "/home/lizy2001/genbc/linux")
!1551 = !{!1552}
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !1549, file: !1550, line: 20, baseType: !406, size: 32)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "state_initialized", scope: !80, file: !81, line: 75, baseType: !7, size: 1, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "state_in_sysfs", scope: !80, file: !81, line: 76, baseType: !7, size: 1, offset: 481, flags: DIFlagBitField, extraData: i64 480)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "state_add_uevent_sent", scope: !80, file: !81, line: 77, baseType: !7, size: 1, offset: 482, flags: DIFlagBitField, extraData: i64 480)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "state_remove_uevent_sent", scope: !80, file: !81, line: 78, baseType: !7, size: 1, offset: 483, flags: DIFlagBitField, extraData: i64 480)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_suppress", scope: !80, file: !81, line: 79, baseType: !7, size: 1, offset: 484, flags: DIFlagBitField, extraData: i64 480)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !77, file: !30, line: 463, baseType: !76, size: 64, offset: 512)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !77, file: !30, line: 465, baseType: !1560, size: 64, offset: 576)
!1560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1561, size: 64)
!1561 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_private", file: !30, line: 36, flags: DIFlagFwdDecl)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !77, file: !30, line: 467, baseType: !84, size: 64, offset: 640)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !77, file: !30, line: 468, baseType: !1564, size: 64, offset: 704)
!1564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1565, size: 64)
!1565 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1566)
!1566 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_type", file: !30, line: 87, size: 384, elements: !1567)
!1567 = !{!1568, !1569, !1570, !1574, !1579, !1583}
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1566, file: !30, line: 88, baseType: !84, size: 64)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !1566, file: !30, line: 89, baseType: !197, size: 64, offset: 64)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !1566, file: !30, line: 90, baseType: !1571, size: 64, offset: 128)
!1571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1572, size: 64)
!1572 = !DISubroutineType(types: !1573)
!1573 = !{!127, !76, !138}
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !1566, file: !30, line: 91, baseType: !1575, size: 64, offset: 192)
!1575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1576, size: 64)
!1576 = !DISubroutineType(types: !1577)
!1577 = !{!143, !76, !1578, !1381, !1388}
!1578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !184, size: 64)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !1566, file: !30, line: 93, baseType: !1580, size: 64, offset: 256)
!1580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1581, size: 64)
!1581 = !DISubroutineType(types: !1582)
!1582 = !{null, !76}
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !1566, file: !30, line: 95, baseType: !1584, size: 64, offset: 320)
!1584 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1585, size: 64)
!1585 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1586)
!1586 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_ops", file: !37, line: 278, size: 1472, elements: !1587)
!1587 = !{!1588, !1592, !1593, !1594, !1595, !1596, !1597, !1598, !1599, !1600, !1601, !1602, !1603, !1604, !1605, !1606, !1607, !1608, !1609, !1610, !1611, !1612, !1613}
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "prepare", scope: !1586, file: !37, line: 279, baseType: !1589, size: 64)
!1589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1590, size: 64)
!1590 = !DISubroutineType(types: !1591)
!1591 = !{!127, !76}
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !1586, file: !37, line: 280, baseType: !1580, size: 64, offset: 64)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !1586, file: !37, line: 281, baseType: !1589, size: 64, offset: 128)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !1586, file: !37, line: 282, baseType: !1589, size: 64, offset: 192)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "freeze", scope: !1586, file: !37, line: 283, baseType: !1589, size: 64, offset: 256)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "thaw", scope: !1586, file: !37, line: 284, baseType: !1589, size: 64, offset: 320)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff", scope: !1586, file: !37, line: 285, baseType: !1589, size: 64, offset: 384)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "restore", scope: !1586, file: !37, line: 286, baseType: !1589, size: 64, offset: 448)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_late", scope: !1586, file: !37, line: 287, baseType: !1589, size: 64, offset: 512)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "resume_early", scope: !1586, file: !37, line: 288, baseType: !1589, size: 64, offset: 576)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_late", scope: !1586, file: !37, line: 289, baseType: !1589, size: 64, offset: 640)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_early", scope: !1586, file: !37, line: 290, baseType: !1589, size: 64, offset: 704)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_late", scope: !1586, file: !37, line: 291, baseType: !1589, size: 64, offset: 768)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "restore_early", scope: !1586, file: !37, line: 292, baseType: !1589, size: 64, offset: 832)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_noirq", scope: !1586, file: !37, line: 293, baseType: !1589, size: 64, offset: 896)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "resume_noirq", scope: !1586, file: !37, line: 294, baseType: !1589, size: 64, offset: 960)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_noirq", scope: !1586, file: !37, line: 295, baseType: !1589, size: 64, offset: 1024)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_noirq", scope: !1586, file: !37, line: 296, baseType: !1589, size: 64, offset: 1088)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_noirq", scope: !1586, file: !37, line: 297, baseType: !1589, size: 64, offset: 1152)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "restore_noirq", scope: !1586, file: !37, line: 298, baseType: !1589, size: 64, offset: 1216)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_suspend", scope: !1586, file: !37, line: 299, baseType: !1589, size: 64, offset: 1280)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_resume", scope: !1586, file: !37, line: 300, baseType: !1589, size: 64, offset: 1344)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_idle", scope: !1586, file: !37, line: 301, baseType: !1589, size: 64, offset: 1408)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !77, file: !30, line: 470, baseType: !1615, size: 64, offset: 768)
!1615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1616, size: 64)
!1616 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bus_type", file: !1617, line: 82, size: 1408, elements: !1618)
!1617 = !DIFile(filename: "./include/linux/device/bus.h", directory: "/home/lizy2001/genbc/linux")
!1618 = !{!1619, !1620, !1621, !1622, !1623, !1624, !1625, !1688, !1689, !1690, !1691, !1692, !1693, !1694, !1695, !1696, !1697, !1698, !1699, !1700, !1704, !1707, !1710}
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1616, file: !1617, line: 83, baseType: !84, size: 64)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name", scope: !1616, file: !1617, line: 84, baseType: !84, size: 64, offset: 64)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "dev_root", scope: !1616, file: !1617, line: 85, baseType: !76, size: 64, offset: 128)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "bus_groups", scope: !1616, file: !1617, line: 86, baseType: !197, size: 64, offset: 192)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !1616, file: !1617, line: 87, baseType: !197, size: 64, offset: 256)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "drv_groups", scope: !1616, file: !1617, line: 88, baseType: !197, size: 64, offset: 320)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !1616, file: !1617, line: 90, baseType: !1626, size: 64, offset: 384)
!1626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1627, size: 64)
!1627 = !DISubroutineType(types: !1628)
!1628 = !{!127, !76, !1629}
!1629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1630, size: 64)
!1630 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_driver", file: !24, line: 95, size: 1152, elements: !1631)
!1631 = !{!1632, !1633, !1634, !1638, !1639, !1640, !1641, !1655, !1668, !1669, !1670, !1671, !1672, !1680, !1681, !1682, !1683, !1684, !1685}
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1630, file: !24, line: 96, baseType: !84, size: 64)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1630, file: !24, line: 97, baseType: !1615, size: 64, offset: 64)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1630, file: !24, line: 99, baseType: !1635, size: 64, offset: 128)
!1635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1636, size: 64)
!1636 = !DICompositeType(tag: DW_TAG_structure_type, name: "module", file: !1637, line: 76, flags: DIFlagFwdDecl)
!1637 = !DIFile(filename: "./arch/x86/include/asm/alternative.h", directory: "/home/lizy2001/genbc/linux")
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "mod_name", scope: !1630, file: !24, line: 100, baseType: !84, size: 64, offset: 192)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "suppress_bind_attrs", scope: !1630, file: !24, line: 102, baseType: !970, size: 8, offset: 256)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "probe_type", scope: !1630, file: !24, line: 103, baseType: !23, size: 32, offset: 288)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "of_match_table", scope: !1630, file: !24, line: 105, baseType: !1642, size: 64, offset: 320)
!1642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1643, size: 64)
!1643 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1644)
!1644 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "of_device_id", file: !1645, line: 262, size: 1600, elements: !1646)
!1645 = !DIFile(filename: "./include/linux/mod_devicetable.h", directory: "/home/lizy2001/genbc/linux")
!1646 = !{!1647, !1649, !1650, !1654}
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1644, file: !1645, line: 263, baseType: !1648, size: 256)
!1648 = !DICompositeType(tag: DW_TAG_array_type, baseType: !86, size: 256, elements: !1191)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1644, file: !1645, line: 264, baseType: !1648, size: 256, offset: 256)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "compatible", scope: !1644, file: !1645, line: 265, baseType: !1651, size: 1024, offset: 512)
!1651 = !DICompositeType(tag: DW_TAG_array_type, baseType: !86, size: 1024, elements: !1652)
!1652 = !{!1653}
!1653 = !DISubrange(count: 128)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1644, file: !1645, line: 266, baseType: !1361, size: 64, offset: 1536)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "acpi_match_table", scope: !1630, file: !24, line: 106, baseType: !1656, size: 64, offset: 384)
!1656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1657, size: 64)
!1657 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1658)
!1658 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_id", file: !1645, line: 210, size: 256, elements: !1659)
!1659 = !{!1660, !1664, !1666, !1667}
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1658, file: !1645, line: 211, baseType: !1661, size: 72)
!1661 = !DICompositeType(tag: DW_TAG_array_type, baseType: !538, size: 72, elements: !1662)
!1662 = !{!1663}
!1663 = !DISubrange(count: 9)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !1658, file: !1645, line: 212, baseType: !1665, size: 64, offset: 128)
!1665 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_ulong_t", file: !1645, line: 14, baseType: !193)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "cls", scope: !1658, file: !1645, line: 213, baseType: !401, size: 32, offset: 192)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "cls_msk", scope: !1658, file: !1645, line: 214, baseType: !401, size: 32, offset: 224)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !1630, file: !24, line: 108, baseType: !1589, size: 64, offset: 448)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !1630, file: !24, line: 109, baseType: !1580, size: 64, offset: 512)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !1630, file: !24, line: 110, baseType: !1589, size: 64, offset: 576)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !1630, file: !24, line: 111, baseType: !1580, size: 64, offset: 640)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !1630, file: !24, line: 112, baseType: !1673, size: 64, offset: 704)
!1673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1674, size: 64)
!1674 = !DISubroutineType(types: !1675)
!1675 = !{!127, !76, !1676}
!1676 = !DIDerivedType(tag: DW_TAG_typedef, name: "pm_message_t", file: !37, line: 52, baseType: !1677)
!1677 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_message", file: !37, line: 50, size: 32, elements: !1678)
!1678 = !{!1679}
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !1677, file: !37, line: 51, baseType: !127, size: 32)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !1630, file: !24, line: 113, baseType: !1589, size: 64, offset: 768)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !1630, file: !24, line: 114, baseType: !197, size: 64, offset: 832)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !1630, file: !24, line: 115, baseType: !197, size: 64, offset: 896)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !1630, file: !24, line: 117, baseType: !1584, size: 64, offset: 960)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "coredump", scope: !1630, file: !24, line: 118, baseType: !1580, size: 64, offset: 1024)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !1630, file: !24, line: 120, baseType: !1686, size: 64, offset: 1088)
!1686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1687, size: 64)
!1687 = !DICompositeType(tag: DW_TAG_structure_type, name: "driver_private", file: !24, line: 120, flags: DIFlagFwdDecl)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !1616, file: !1617, line: 91, baseType: !1571, size: 64, offset: 448)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !1616, file: !1617, line: 92, baseType: !1589, size: 64, offset: 512)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !1616, file: !1617, line: 93, baseType: !1580, size: 64, offset: 576)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !1616, file: !1617, line: 94, baseType: !1589, size: 64, offset: 640)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !1616, file: !1617, line: 95, baseType: !1580, size: 64, offset: 704)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "online", scope: !1616, file: !1617, line: 97, baseType: !1589, size: 64, offset: 768)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !1616, file: !1617, line: 98, baseType: !1589, size: 64, offset: 832)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !1616, file: !1617, line: 100, baseType: !1673, size: 64, offset: 896)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !1616, file: !1617, line: 101, baseType: !1589, size: 64, offset: 960)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "num_vf", scope: !1616, file: !1617, line: 103, baseType: !1589, size: 64, offset: 1024)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "dma_configure", scope: !1616, file: !1617, line: 105, baseType: !1589, size: 64, offset: 1088)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !1616, file: !1617, line: 107, baseType: !1584, size: 64, offset: 1152)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_ops", scope: !1616, file: !1617, line: 109, baseType: !1701, size: 64, offset: 1216)
!1701 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1702, size: 64)
!1702 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1703)
!1703 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_ops", file: !1617, line: 109, flags: DIFlagFwdDecl)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !1616, file: !1617, line: 111, baseType: !1705, size: 64, offset: 1280)
!1705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1706, size: 64)
!1706 = !DICompositeType(tag: DW_TAG_structure_type, name: "subsys_private", file: !1617, line: 111, flags: DIFlagFwdDecl)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "lock_key", scope: !1616, file: !1617, line: 112, baseType: !1708, offset: 1344)
!1708 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_class_key", file: !1709, line: 187, elements: !115)
!1709 = !DIFile(filename: "./include/linux/lockdep_types.h", directory: "/home/lizy2001/genbc/linux")
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "need_parent_lock", scope: !1616, file: !1617, line: 114, baseType: !970, size: 8, offset: 1344)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !77, file: !30, line: 471, baseType: !1629, size: 64, offset: 832)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "platform_data", scope: !77, file: !30, line: 473, baseType: !65, size: 64, offset: 896)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !77, file: !30, line: 475, baseType: !65, size: 64, offset: 960)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !77, file: !30, line: 480, baseType: !361, size: 192, offset: 1024)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !77, file: !30, line: 484, baseType: !1716, size: 576, offset: 1216)
!1716 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_links_info", file: !30, line: 361, size: 576, elements: !1717)
!1717 = !{!1718, !1719, !1720, !1721, !1722, !1723}
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "suppliers", scope: !1716, file: !30, line: 362, baseType: !88, size: 128)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "consumers", scope: !1716, file: !30, line: 363, baseType: !88, size: 128, offset: 128)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "needs_suppliers", scope: !1716, file: !30, line: 364, baseType: !88, size: 128, offset: 256)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "defer_hook", scope: !1716, file: !30, line: 365, baseType: !88, size: 128, offset: 384)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "need_for_probe", scope: !1716, file: !30, line: 366, baseType: !970, size: 8, offset: 512)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !1716, file: !30, line: 367, baseType: !29, size: 32, offset: 544)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !77, file: !30, line: 485, baseType: !1725, size: 2304, offset: 1792)
!1725 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_info", file: !37, line: 565, size: 2304, elements: !1726)
!1726 = !{!1727, !1728, !1729, !1730, !1731, !1732, !1733, !1734, !1735, !1736, !1737, !1738, !1739, !1740, !1741, !1742, !1780, !1781, !1782, !1783, !1784, !1785, !1786, !1787, !1788, !1789, !1790, !1791, !1792, !1793, !1794, !1795, !1796, !1797, !1798, !1799, !1800, !1801, !1802, !1803, !1804, !1805, !1806, !1807, !1808, !1809, !1810, !1811, !1812, !1822, !1826}
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "power_state", scope: !1725, file: !37, line: 566, baseType: !1676, size: 32)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "can_wakeup", scope: !1725, file: !37, line: 567, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "async_suspend", scope: !1725, file: !37, line: 568, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 32)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "in_dpm_list", scope: !1725, file: !37, line: 569, baseType: !970, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 32)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "is_prepared", scope: !1725, file: !37, line: 570, baseType: !970, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 32)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "is_suspended", scope: !1725, file: !37, line: 571, baseType: !970, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 32)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "is_noirq_suspended", scope: !1725, file: !37, line: 572, baseType: !970, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 32)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "is_late_suspended", scope: !1725, file: !37, line: 573, baseType: !970, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 32)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm", scope: !1725, file: !37, line: 574, baseType: !970, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 32)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "early_init", scope: !1725, file: !37, line: 575, baseType: !970, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "direct_complete", scope: !1725, file: !37, line: 576, baseType: !970, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 32)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "driver_flags", scope: !1725, file: !37, line: 577, baseType: !400, size: 32, offset: 64)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1725, file: !37, line: 578, baseType: !101, offset: 96)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !1725, file: !37, line: 580, baseType: !88, size: 128, offset: 128)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "completion", scope: !1725, file: !37, line: 581, baseType: !706, size: 192, offset: 256)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup", scope: !1725, file: !37, line: 582, baseType: !1743, size: 64, offset: 448)
!1743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1744, size: 64)
!1744 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wakeup_source", file: !1745, line: 43, size: 1472, elements: !1746)
!1745 = !DIFile(filename: "./include/linux/pm_wakeup.h", directory: "/home/lizy2001/genbc/linux")
!1746 = !{!1747, !1748, !1749, !1750, !1751, !1754, !1766, !1767, !1768, !1769, !1770, !1771, !1772, !1773, !1774, !1775, !1776, !1777, !1778, !1779}
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1744, file: !1745, line: 44, baseType: !84, size: 64)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1744, file: !1745, line: 45, baseType: !127, size: 32, offset: 64)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !1744, file: !1745, line: 46, baseType: !88, size: 128, offset: 128)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1744, file: !1745, line: 47, baseType: !101, offset: 256)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !1744, file: !1745, line: 48, baseType: !1752, size: 64, offset: 256)
!1752 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1753, size: 64)
!1753 = !DICompositeType(tag: DW_TAG_structure_type, name: "wake_irq", file: !37, line: 533, flags: DIFlagFwdDecl)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !1744, file: !1745, line: 49, baseType: !1755, size: 320, offset: 320)
!1755 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timer_list", file: !1756, line: 11, size: 320, elements: !1757)
!1756 = !DIFile(filename: "./include/linux/timer.h", directory: "/home/lizy2001/genbc/linux")
!1757 = !{!1758, !1759, !1760, !1765}
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !1755, file: !1756, line: 16, baseType: !670, size: 128)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1755, file: !1756, line: 17, baseType: !193, size: 64, offset: 128)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !1755, file: !1756, line: 18, baseType: !1761, size: 64, offset: 192)
!1761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1762, size: 64)
!1762 = !DISubroutineType(types: !1763)
!1763 = !{null, !1764}
!1764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1755, size: 64)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1755, file: !1756, line: 19, baseType: !400, size: 32, offset: 256)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !1744, file: !1745, line: 50, baseType: !193, size: 64, offset: 640)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "total_time", scope: !1744, file: !1745, line: 51, baseType: !476, size: 64, offset: 704)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "max_time", scope: !1744, file: !1745, line: 52, baseType: !476, size: 64, offset: 768)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "last_time", scope: !1744, file: !1745, line: 53, baseType: !476, size: 64, offset: 832)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "start_prevent_time", scope: !1744, file: !1745, line: 54, baseType: !476, size: 64, offset: 896)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "prevent_sleep_time", scope: !1744, file: !1745, line: 55, baseType: !476, size: 64, offset: 960)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "event_count", scope: !1744, file: !1745, line: 56, baseType: !193, size: 64, offset: 1024)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "active_count", scope: !1744, file: !1745, line: 57, baseType: !193, size: 64, offset: 1088)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "relax_count", scope: !1744, file: !1745, line: 58, baseType: !193, size: 64, offset: 1152)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "expire_count", scope: !1744, file: !1745, line: 59, baseType: !193, size: 64, offset: 1216)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_count", scope: !1744, file: !1745, line: 60, baseType: !193, size: 64, offset: 1280)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1744, file: !1745, line: 61, baseType: !76, size: 64, offset: 1344)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !1744, file: !1745, line: 62, baseType: !970, size: 1, offset: 1408, flags: DIFlagBitField, extraData: i64 1408)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "autosleep_enabled", scope: !1744, file: !1745, line: 63, baseType: !970, size: 1, offset: 1409, flags: DIFlagBitField, extraData: i64 1408)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_path", scope: !1725, file: !37, line: 583, baseType: !970, size: 1, offset: 512, flags: DIFlagBitField, extraData: i64 512)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "syscore", scope: !1725, file: !37, line: 584, baseType: !970, size: 1, offset: 513, flags: DIFlagBitField, extraData: i64 512)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm_callbacks", scope: !1725, file: !37, line: 585, baseType: !970, size: 1, offset: 514, flags: DIFlagBitField, extraData: i64 512)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "must_resume", scope: !1725, file: !37, line: 586, baseType: !7, size: 1, offset: 515, flags: DIFlagBitField, extraData: i64 512)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "may_skip_resume", scope: !1725, file: !37, line: 587, baseType: !7, size: 1, offset: 516, flags: DIFlagBitField, extraData: i64 512)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_timer", scope: !1725, file: !37, line: 592, baseType: !468, size: 512, offset: 576)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !1725, file: !37, line: 593, baseType: !262, size: 64, offset: 1088)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !1725, file: !37, line: 594, baseType: !1295, size: 256, offset: 1152)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "wait_queue", scope: !1725, file: !37, line: 595, baseType: !677, size: 128, offset: 1408)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !1725, file: !37, line: 596, baseType: !1752, size: 64, offset: 1536)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "usage_count", scope: !1725, file: !37, line: 597, baseType: !284, size: 32, offset: 1600)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "child_count", scope: !1725, file: !37, line: 598, baseType: !284, size: 32, offset: 1632)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "disable_depth", scope: !1725, file: !37, line: 599, baseType: !7, size: 3, offset: 1664, flags: DIFlagBitField, extraData: i64 1664)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "idle_notification", scope: !1725, file: !37, line: 600, baseType: !7, size: 1, offset: 1667, flags: DIFlagBitField, extraData: i64 1664)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "request_pending", scope: !1725, file: !37, line: 601, baseType: !7, size: 1, offset: 1668, flags: DIFlagBitField, extraData: i64 1664)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_resume", scope: !1725, file: !37, line: 602, baseType: !7, size: 1, offset: 1669, flags: DIFlagBitField, extraData: i64 1664)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_auto", scope: !1725, file: !37, line: 603, baseType: !7, size: 1, offset: 1670, flags: DIFlagBitField, extraData: i64 1664)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_children", scope: !1725, file: !37, line: 604, baseType: !970, size: 1, offset: 1671, flags: DIFlagBitField, extraData: i64 1664)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "no_callbacks", scope: !1725, file: !37, line: 605, baseType: !7, size: 1, offset: 1672, flags: DIFlagBitField, extraData: i64 1664)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "irq_safe", scope: !1725, file: !37, line: 606, baseType: !7, size: 1, offset: 1673, flags: DIFlagBitField, extraData: i64 1664)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "use_autosuspend", scope: !1725, file: !37, line: 607, baseType: !7, size: 1, offset: 1674, flags: DIFlagBitField, extraData: i64 1664)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "timer_autosuspends", scope: !1725, file: !37, line: 608, baseType: !7, size: 1, offset: 1675, flags: DIFlagBitField, extraData: i64 1664)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "memalloc_noio", scope: !1725, file: !37, line: 609, baseType: !7, size: 1, offset: 1676, flags: DIFlagBitField, extraData: i64 1664)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "links_count", scope: !1725, file: !37, line: 610, baseType: !7, size: 32, offset: 1696)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !1725, file: !37, line: 611, baseType: !36, size: 32, offset: 1728)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_status", scope: !1725, file: !37, line: 612, baseType: !44, size: 32, offset: 1760)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_error", scope: !1725, file: !37, line: 613, baseType: !127, size: 32, offset: 1792)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "autosuspend_delay", scope: !1725, file: !37, line: 614, baseType: !127, size: 32, offset: 1824)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "last_busy", scope: !1725, file: !37, line: 615, baseType: !262, size: 64, offset: 1856)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "active_time", scope: !1725, file: !37, line: 616, baseType: !262, size: 64, offset: 1920)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "suspended_time", scope: !1725, file: !37, line: 617, baseType: !262, size: 64, offset: 1984)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "accounting_timestamp", scope: !1725, file: !37, line: 618, baseType: !262, size: 64, offset: 2048)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "subsys_data", scope: !1725, file: !37, line: 620, baseType: !1813, size: 64, offset: 2112)
!1813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1814, size: 64)
!1814 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_subsys_data", file: !37, line: 536, size: 256, elements: !1815)
!1815 = !{!1816, !1817, !1818, !1819}
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1814, file: !37, line: 537, baseType: !101)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !1814, file: !37, line: 538, baseType: !7, size: 32)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "clock_list", scope: !1814, file: !37, line: 540, baseType: !88, size: 128, offset: 64)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "domain_data", scope: !1814, file: !37, line: 543, baseType: !1820, size: 64, offset: 192)
!1820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1821, size: 64)
!1821 = !DICompositeType(tag: DW_TAG_structure_type, name: "pm_domain_data", file: !37, line: 534, flags: DIFlagFwdDecl)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "set_latency_tolerance", scope: !1725, file: !37, line: 621, baseType: !1823, size: 64, offset: 2176)
!1823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1824, size: 64)
!1824 = !DISubroutineType(types: !1825)
!1825 = !{null, !76, !630}
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "qos", scope: !1725, file: !37, line: 622, baseType: !1827, size: 64, offset: 2240)
!1827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1828, size: 64)
!1828 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_qos", file: !37, line: 622, flags: DIFlagFwdDecl)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "pm_domain", scope: !77, file: !30, line: 486, baseType: !1830, size: 64, offset: 4096)
!1830 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1831, size: 64)
!1831 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_domain", file: !37, line: 642, size: 1792, elements: !1832)
!1832 = !{!1833, !1834, !1835, !1839, !1840, !1841}
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1831, file: !37, line: 643, baseType: !1586, size: 1472)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1831, file: !37, line: 644, baseType: !1589, size: 64, offset: 1472)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "detach", scope: !1831, file: !37, line: 645, baseType: !1836, size: 64, offset: 1536)
!1836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1837, size: 64)
!1837 = !DISubroutineType(types: !1838)
!1838 = !{null, !76, !970}
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !1831, file: !37, line: 646, baseType: !1589, size: 64, offset: 1600)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "sync", scope: !1831, file: !37, line: 647, baseType: !1580, size: 64, offset: 1664)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "dismiss", scope: !1831, file: !37, line: 648, baseType: !1580, size: 64, offset: 1728)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "msi_domain", scope: !77, file: !30, line: 493, baseType: !1843, size: 64, offset: 4160)
!1843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1844, size: 64)
!1844 = !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain", file: !30, line: 493, flags: DIFlagFwdDecl)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "msi_list", scope: !77, file: !30, line: 499, baseType: !88, size: 128, offset: 4224)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "dma_ops", scope: !77, file: !30, line: 502, baseType: !1847, size: 64, offset: 4352)
!1847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1848, size: 64)
!1848 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1849)
!1849 = !DICompositeType(tag: DW_TAG_structure_type, name: "dma_map_ops", file: !30, line: 502, flags: DIFlagFwdDecl)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !77, file: !30, line: 504, baseType: !1851, size: 64, offset: 4416)
!1851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !262, size: 64)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "coherent_dma_mask", scope: !77, file: !30, line: 505, baseType: !262, size: 64, offset: 4480)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "bus_dma_limit", scope: !77, file: !30, line: 510, baseType: !262, size: 64, offset: 4544)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "dma_range_map", scope: !77, file: !30, line: 511, baseType: !1855, size: 64, offset: 4608)
!1855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1856, size: 64)
!1856 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1857)
!1857 = !DICompositeType(tag: DW_TAG_structure_type, name: "bus_dma_region", file: !30, line: 511, flags: DIFlagFwdDecl)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !77, file: !30, line: 513, baseType: !1859, size: 64, offset: 4672)
!1859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1860, size: 64)
!1860 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_dma_parameters", file: !30, line: 288, size: 128, elements: !1861)
!1861 = !{!1862, !1863}
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !1860, file: !30, line: 293, baseType: !7, size: 32)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "segment_boundary_mask", scope: !1860, file: !30, line: 294, baseType: !193, size: 64, offset: 64)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "dma_pools", scope: !77, file: !30, line: 515, baseType: !88, size: 128, offset: 4736)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "archdata", scope: !77, file: !30, line: 526, baseType: !1866, offset: 4864)
!1866 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_archdata", file: !1867, line: 5, elements: !115)
!1867 = !DIFile(filename: "./arch/x86/include/asm/device.h", directory: "/home/lizy2001/genbc/linux")
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "of_node", scope: !77, file: !30, line: 528, baseType: !1869, size: 64, offset: 4864)
!1869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1870, size: 64)
!1870 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_node", file: !1871, line: 14, flags: DIFlagFwdDecl)
!1871 = !DIFile(filename: "./include/linux/arch_topology.h", directory: "/home/lizy2001/genbc/linux")
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !77, file: !30, line: 529, baseType: !1873, size: 64, offset: 4928)
!1873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1874, size: 64)
!1874 = !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_handle", file: !1617, line: 22, flags: DIFlagFwdDecl)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "devt", scope: !77, file: !30, line: 534, baseType: !1876, size: 32, offset: 4992)
!1876 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !64, line: 16, baseType: !1877)
!1877 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_dev_t", file: !64, line: 13, baseType: !400)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !77, file: !30, line: 535, baseType: !400, size: 32, offset: 5024)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "devres_lock", scope: !77, file: !30, line: 537, baseType: !101, offset: 5056)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "devres_head", scope: !77, file: !30, line: 538, baseType: !88, size: 128, offset: 5056)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !77, file: !30, line: 540, baseType: !1882, size: 64, offset: 5184)
!1882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1883, size: 64)
!1883 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "class", file: !1884, line: 54, size: 960, elements: !1885)
!1884 = !DIFile(filename: "./include/linux/device/class.h", directory: "/home/lizy2001/genbc/linux")
!1885 = !{!1886, !1887, !1888, !1889, !1890, !1891, !1892, !1896, !1900, !1901, !1902, !1903, !1907, !1911, !1912}
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1883, file: !1884, line: 55, baseType: !84, size: 64)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1883, file: !1884, line: 56, baseType: !1635, size: 64, offset: 64)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "class_groups", scope: !1883, file: !1884, line: 58, baseType: !197, size: 64, offset: 128)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !1883, file: !1884, line: 59, baseType: !197, size: 64, offset: 192)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "dev_kobj", scope: !1883, file: !1884, line: 60, baseType: !94, size: 64, offset: 256)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "dev_uevent", scope: !1883, file: !1884, line: 62, baseType: !1571, size: 64, offset: 320)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !1883, file: !1884, line: 63, baseType: !1893, size: 64, offset: 384)
!1893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1894, size: 64)
!1894 = !DISubroutineType(types: !1895)
!1895 = !{!143, !76, !1578}
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "class_release", scope: !1883, file: !1884, line: 65, baseType: !1897, size: 64, offset: 448)
!1897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1898, size: 64)
!1898 = !DISubroutineType(types: !1899)
!1899 = !{null, !1882}
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "dev_release", scope: !1883, file: !1884, line: 66, baseType: !1580, size: 64, offset: 512)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown_pre", scope: !1883, file: !1884, line: 68, baseType: !1589, size: 64, offset: 576)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "ns_type", scope: !1883, file: !1884, line: 70, baseType: !1344, size: 64, offset: 640)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !1883, file: !1884, line: 71, baseType: !1904, size: 64, offset: 704)
!1904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1905, size: 64)
!1905 = !DISubroutineType(types: !1906)
!1906 = !{!1361, !76}
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !1883, file: !1884, line: 73, baseType: !1908, size: 64, offset: 768)
!1908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1909, size: 64)
!1909 = !DISubroutineType(types: !1910)
!1910 = !{null, !76, !1381, !1388}
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !1883, file: !1884, line: 75, baseType: !1584, size: 64, offset: 832)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !1883, file: !1884, line: 77, baseType: !1705, size: 64, offset: 896)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !77, file: !30, line: 541, baseType: !197, size: 64, offset: 5248)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !77, file: !30, line: 543, baseType: !1580, size: 64, offset: 5312)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_group", scope: !77, file: !30, line: 544, baseType: !1916, size: 64, offset: 5376)
!1916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1917, size: 64)
!1917 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_group", file: !30, line: 45, flags: DIFlagFwdDecl)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "iommu", scope: !77, file: !30, line: 545, baseType: !1919, size: 64, offset: 5440)
!1919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1920, size: 64)
!1920 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_iommu", file: !30, line: 47, flags: DIFlagFwdDecl)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "offline_disabled", scope: !77, file: !30, line: 547, baseType: !970, size: 1, offset: 5504, flags: DIFlagBitField, extraData: i64 5504)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !77, file: !30, line: 548, baseType: !970, size: 1, offset: 5505, flags: DIFlagBitField, extraData: i64 5504)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "of_node_reused", scope: !77, file: !30, line: 549, baseType: !970, size: 1, offset: 5506, flags: DIFlagBitField, extraData: i64 5504)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "state_synced", scope: !77, file: !30, line: 550, baseType: !970, size: 1, offset: 5507, flags: DIFlagBitField, extraData: i64 5504)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "class_dev", scope: !72, file: !73, line: 277, baseType: !77, size: 5568, offset: 64)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !72, file: !73, line: 278, baseType: !127, size: 32, offset: 5632)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !72, file: !73, line: 279, baseType: !1928, size: 64, offset: 5696)
!1928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1929, size: 64)
!1929 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1930)
!1930 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mmc_host_ops", file: !73, line: 82, size: 1408, elements: !1931)
!1931 = !{!1932, !1986, !1990, !1991, !1995, !2013, !2017, !2018, !2022, !2026, !2030, !2034, !2035, !2039, !2040, !2041, !2042, !2043, !2044, !2048, !2049, !2050}
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "post_req", scope: !1930, file: !73, line: 91, baseType: !1933, size: 64)
!1933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1934, size: 64)
!1934 = !DISubroutineType(types: !1935)
!1935 = !{null, !71, !1936, !127}
!1936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1937, size: 64)
!1937 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mmc_request", file: !1938, line: 144, size: 896, elements: !1939)
!1938 = !DIFile(filename: "./include/linux/mmc/core.h", directory: "/home/lizy2001/genbc/linux")
!1939 = !{!1940, !1973, !1974, !1975, !1976, !1977, !1978, !1982, !1983, !1984, !1985}
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "sbc", scope: !1937, file: !1938, line: 145, baseType: !1941, size: 64)
!1941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1942, size: 64)
!1942 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mmc_command", file: !1938, line: 26, size: 448, elements: !1943)
!1943 = !{!1944, !1945, !1946, !1948, !1949, !1950, !1951, !1952, !1972}
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "opcode", scope: !1942, file: !1938, line: 27, baseType: !400, size: 32)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !1942, file: !1938, line: 28, baseType: !400, size: 32, offset: 32)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "resp", scope: !1942, file: !1938, line: 32, baseType: !1947, size: 128, offset: 64)
!1947 = !DICompositeType(tag: DW_TAG_array_type, baseType: !400, size: 128, elements: !343)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1942, file: !1938, line: 33, baseType: !7, size: 32, offset: 192)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "retries", scope: !1942, file: !1938, line: 92, baseType: !7, size: 32, offset: 224)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1942, file: !1938, line: 93, baseType: !127, size: 32, offset: 256)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "busy_timeout", scope: !1942, file: !1938, line: 109, baseType: !7, size: 32, offset: 288)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1942, file: !1938, line: 110, baseType: !1953, size: 64, offset: 320)
!1953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1954, size: 64)
!1954 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mmc_data", file: !1938, line: 114, size: 576, elements: !1955)
!1955 = !{!1956, !1957, !1958, !1959, !1960, !1961, !1962, !1963, !1964, !1965, !1966, !1967, !1968, !1971}
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "timeout_ns", scope: !1954, file: !1938, line: 115, baseType: !7, size: 32)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "timeout_clks", scope: !1954, file: !1938, line: 116, baseType: !7, size: 32, offset: 32)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "blksz", scope: !1954, file: !1938, line: 117, baseType: !7, size: 32, offset: 64)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !1954, file: !1938, line: 118, baseType: !7, size: 32, offset: 96)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "blk_addr", scope: !1954, file: !1938, line: 119, baseType: !7, size: 32, offset: 128)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1954, file: !1938, line: 120, baseType: !127, size: 32, offset: 160)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1954, file: !1938, line: 121, baseType: !7, size: 32, offset: 192)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "bytes_xfered", scope: !1954, file: !1938, line: 132, baseType: !7, size: 32, offset: 224)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !1954, file: !1938, line: 134, baseType: !1941, size: 64, offset: 256)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "mrq", scope: !1954, file: !1938, line: 135, baseType: !1936, size: 64, offset: 320)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "sg_len", scope: !1954, file: !1938, line: 137, baseType: !7, size: 32, offset: 384)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "sg_count", scope: !1954, file: !1938, line: 138, baseType: !127, size: 32, offset: 416)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "sg", scope: !1954, file: !1938, line: 139, baseType: !1969, size: 64, offset: 448)
!1969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1970, size: 64)
!1970 = !DICompositeType(tag: DW_TAG_structure_type, name: "scatterlist", file: !1938, line: 139, flags: DIFlagFwdDecl)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "host_cookie", scope: !1954, file: !1938, line: 140, baseType: !630, size: 32, offset: 512)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "mrq", scope: !1942, file: !1938, line: 111, baseType: !1936, size: 64, offset: 384)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !1937, file: !1938, line: 146, baseType: !1941, size: 64, offset: 64)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1937, file: !1938, line: 147, baseType: !1953, size: 64, offset: 128)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !1937, file: !1938, line: 148, baseType: !1941, size: 64, offset: 192)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "completion", scope: !1937, file: !1938, line: 150, baseType: !706, size: 192, offset: 256)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_completion", scope: !1937, file: !1938, line: 151, baseType: !706, size: 192, offset: 448)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !1937, file: !1938, line: 152, baseType: !1979, size: 64, offset: 640)
!1979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1980, size: 64)
!1980 = !DISubroutineType(types: !1981)
!1981 = !{null, !1936}
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "recovery_notifier", scope: !1937, file: !1938, line: 158, baseType: !1979, size: 64, offset: 704)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !1937, file: !1938, line: 159, baseType: !71, size: 64, offset: 768)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "cap_cmd_during_tfr", scope: !1937, file: !1938, line: 162, baseType: !970, size: 8, offset: 832)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "tag", scope: !1937, file: !1938, line: 164, baseType: !127, size: 32, offset: 864)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "pre_req", scope: !1930, file: !73, line: 93, baseType: !1987, size: 64, offset: 64)
!1987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1988, size: 64)
!1988 = !DISubroutineType(types: !1989)
!1989 = !{null, !71, !1936}
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !1930, file: !73, line: 94, baseType: !1987, size: 64, offset: 128)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "request_atomic", scope: !1930, file: !73, line: 96, baseType: !1992, size: 64, offset: 192)
!1992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1993, size: 64)
!1993 = !DISubroutineType(types: !1994)
!1994 = !{!127, !71, !1936}
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "set_ios", scope: !1930, file: !73, line: 113, baseType: !1996, size: 64, offset: 256)
!1996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1997, size: 64)
!1997 = !DISubroutineType(types: !1998)
!1998 = !{null, !71, !1999}
!1999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2000, size: 64)
!2000 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mmc_ios", file: !73, line: 19, size: 160, elements: !2001)
!2001 = !{!2002, !2003, !2004, !2005, !2006, !2007, !2008, !2009, !2010, !2011, !2012}
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "clock", scope: !2000, file: !73, line: 20, baseType: !7, size: 32)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "vdd", scope: !2000, file: !73, line: 21, baseType: !185, size: 16, offset: 32)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "power_delay_ms", scope: !2000, file: !73, line: 22, baseType: !7, size: 32, offset: 64)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "bus_mode", scope: !2000, file: !73, line: 26, baseType: !539, size: 8, offset: 96)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "chip_select", scope: !2000, file: !73, line: 31, baseType: !539, size: 8, offset: 104)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "power_mode", scope: !2000, file: !73, line: 37, baseType: !539, size: 8, offset: 112)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "bus_width", scope: !2000, file: !73, line: 44, baseType: !539, size: 8, offset: 120)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "timing", scope: !2000, file: !73, line: 50, baseType: !539, size: 8, offset: 128)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "signal_voltage", scope: !2000, file: !73, line: 64, baseType: !539, size: 8, offset: 136)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "drv_type", scope: !2000, file: !73, line: 70, baseType: !539, size: 8, offset: 144)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "enhanced_strobe", scope: !2000, file: !73, line: 77, baseType: !970, size: 8, offset: 152)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "get_ro", scope: !1930, file: !73, line: 122, baseType: !2014, size: 64, offset: 320)
!2014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2015, size: 64)
!2015 = !DISubroutineType(types: !2016)
!2016 = !{!127, !71}
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "get_cd", scope: !1930, file: !73, line: 131, baseType: !2014, size: 64, offset: 384)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "enable_sdio_irq", scope: !1930, file: !73, line: 133, baseType: !2019, size: 64, offset: 448)
!2019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2020, size: 64)
!2020 = !DISubroutineType(types: !2021)
!2021 = !{null, !71, !127}
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "ack_sdio_irq", scope: !1930, file: !73, line: 135, baseType: !2023, size: 64, offset: 512)
!2023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2024, size: 64)
!2024 = !DISubroutineType(types: !2025)
!2025 = !{null, !71}
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "init_card", scope: !1930, file: !73, line: 138, baseType: !2027, size: 64, offset: 576)
!2027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2028, size: 64)
!2028 = !DISubroutineType(types: !2029)
!2029 = !{null, !71, !66}
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "start_signal_voltage_switch", scope: !1930, file: !73, line: 140, baseType: !2031, size: 64, offset: 640)
!2031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2032, size: 64)
!2032 = !DISubroutineType(types: !2033)
!2033 = !{!127, !71, !1999}
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "card_busy", scope: !1930, file: !73, line: 143, baseType: !2014, size: 64, offset: 704)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "execute_tuning", scope: !1930, file: !73, line: 146, baseType: !2036, size: 64, offset: 768)
!2036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2037, size: 64)
!2037 = !DISubroutineType(types: !2038)
!2038 = !{!127, !71, !400}
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "prepare_hs400_tuning", scope: !1930, file: !73, line: 149, baseType: !2031, size: 64, offset: 832)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "hs400_prepare_ddr", scope: !1930, file: !73, line: 152, baseType: !2014, size: 64, offset: 896)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "hs400_downgrade", scope: !1930, file: !73, line: 155, baseType: !2023, size: 64, offset: 960)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "hs400_complete", scope: !1930, file: !73, line: 158, baseType: !2023, size: 64, offset: 1024)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "hs400_enhanced_strobe", scope: !1930, file: !73, line: 161, baseType: !1996, size: 64, offset: 1088)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "select_drive_strength", scope: !1930, file: !73, line: 163, baseType: !2045, size: 64, offset: 1152)
!2045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2046, size: 64)
!2046 = !DISubroutineType(types: !2047)
!2047 = !{!127, !66, !7, !127, !127, !717}
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "hw_reset", scope: !1930, file: !73, line: 167, baseType: !2023, size: 64, offset: 1216)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "card_event", scope: !1930, file: !73, line: 168, baseType: !2023, size: 64, offset: 1280)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "multi_io_quirk", scope: !1930, file: !73, line: 174, baseType: !2051, size: 64, offset: 1344)
!2051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2052, size: 64)
!2052 = !DISubroutineType(types: !2053)
!2053 = !{!127, !66, !7, !127}
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "pwrseq", scope: !72, file: !73, line: 280, baseType: !2055, size: 64, offset: 5760)
!2055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2056, size: 64)
!2056 = !DICompositeType(tag: DW_TAG_structure_type, name: "mmc_pwrseq", file: !73, line: 264, flags: DIFlagFwdDecl)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "f_min", scope: !72, file: !73, line: 281, baseType: !7, size: 32, offset: 5824)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "f_max", scope: !72, file: !73, line: 282, baseType: !7, size: 32, offset: 5856)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "f_init", scope: !72, file: !73, line: 283, baseType: !7, size: 32, offset: 5888)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "ocr_avail", scope: !72, file: !73, line: 284, baseType: !400, size: 32, offset: 5920)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "ocr_avail_sdio", scope: !72, file: !73, line: 285, baseType: !400, size: 32, offset: 5952)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "ocr_avail_sd", scope: !72, file: !73, line: 286, baseType: !400, size: 32, offset: 5984)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "ocr_avail_mmc", scope: !72, file: !73, line: 287, baseType: !400, size: 32, offset: 6016)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "pm_notify", scope: !72, file: !73, line: 289, baseType: !2065, size: 192, offset: 6080)
!2065 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "notifier_block", file: !2066, line: 54, size: 192, elements: !2067)
!2066 = !DIFile(filename: "./include/linux/notifier.h", directory: "/home/lizy2001/genbc/linux")
!2067 = !{!2068, !2074, !2075}
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_call", scope: !2065, file: !2066, line: 55, baseType: !2069, size: 64)
!2069 = !DIDerivedType(tag: DW_TAG_typedef, name: "notifier_fn_t", file: !2066, line: 51, baseType: !2070)
!2070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2071, size: 64)
!2071 = !DISubroutineType(types: !2072)
!2072 = !{!127, !2073, !193, !65}
!2073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2065, size: 64)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2065, file: !2066, line: 56, baseType: !2073, size: 64, offset: 64)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "priority", scope: !2065, file: !2066, line: 57, baseType: !127, size: 32, offset: 128)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "ws", scope: !72, file: !73, line: 291, baseType: !1743, size: 64, offset: 6272)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "max_current_330", scope: !72, file: !73, line: 292, baseType: !400, size: 32, offset: 6336)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "max_current_300", scope: !72, file: !73, line: 293, baseType: !400, size: 32, offset: 6368)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "max_current_180", scope: !72, file: !73, line: 294, baseType: !400, size: 32, offset: 6400)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "caps", scope: !72, file: !73, line: 314, baseType: !400, size: 32, offset: 6432)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "caps2", scope: !72, file: !73, line: 352, baseType: !400, size: 32, offset: 6464)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_drv_type", scope: !72, file: !73, line: 381, baseType: !127, size: 32, offset: 6496)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "pm_caps", scope: !72, file: !73, line: 383, baseType: !2084, size: 32, offset: 6528)
!2084 = !DIDerivedType(tag: DW_TAG_typedef, name: "mmc_pm_flag_t", file: !2085, line: 22, baseType: !7)
!2085 = !DIFile(filename: "./include/linux/mmc/pm.h", directory: "/home/lizy2001/genbc/linux")
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "max_seg_size", scope: !72, file: !73, line: 386, baseType: !7, size: 32, offset: 6560)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "max_segs", scope: !72, file: !73, line: 387, baseType: !185, size: 16, offset: 6592)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !72, file: !73, line: 388, baseType: !185, size: 16, offset: 6608)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "max_req_size", scope: !72, file: !73, line: 389, baseType: !7, size: 32, offset: 6624)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "max_blk_size", scope: !72, file: !73, line: 390, baseType: !7, size: 32, offset: 6656)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "max_blk_count", scope: !72, file: !73, line: 391, baseType: !7, size: 32, offset: 6688)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "max_busy_timeout", scope: !72, file: !73, line: 392, baseType: !7, size: 32, offset: 6720)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !72, file: !73, line: 395, baseType: !101, offset: 6752)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "ios", scope: !72, file: !73, line: 397, baseType: !2000, size: 160, offset: 6752)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "use_spi_crc", scope: !72, file: !73, line: 400, baseType: !7, size: 1, offset: 6912, flags: DIFlagBitField, extraData: i64 6912)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "claimed", scope: !72, file: !73, line: 401, baseType: !7, size: 1, offset: 6913, flags: DIFlagBitField, extraData: i64 6912)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "bus_dead", scope: !72, file: !73, line: 402, baseType: !7, size: 1, offset: 6914, flags: DIFlagBitField, extraData: i64 6912)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "doing_init_tune", scope: !72, file: !73, line: 403, baseType: !7, size: 1, offset: 6915, flags: DIFlagBitField, extraData: i64 6912)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "can_retune", scope: !72, file: !73, line: 404, baseType: !7, size: 1, offset: 6916, flags: DIFlagBitField, extraData: i64 6912)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "doing_retune", scope: !72, file: !73, line: 405, baseType: !7, size: 1, offset: 6917, flags: DIFlagBitField, extraData: i64 6912)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "retune_now", scope: !72, file: !73, line: 406, baseType: !7, size: 1, offset: 6918, flags: DIFlagBitField, extraData: i64 6912)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "retune_paused", scope: !72, file: !73, line: 407, baseType: !7, size: 1, offset: 6919, flags: DIFlagBitField, extraData: i64 6912)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "use_blk_mq", scope: !72, file: !73, line: 408, baseType: !7, size: 1, offset: 6920, flags: DIFlagBitField, extraData: i64 6912)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "retune_crc_disable", scope: !72, file: !73, line: 409, baseType: !7, size: 1, offset: 6921, flags: DIFlagBitField, extraData: i64 6912)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "can_dma_map_merge", scope: !72, file: !73, line: 410, baseType: !7, size: 1, offset: 6922, flags: DIFlagBitField, extraData: i64 6912)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "rescan_disable", scope: !72, file: !73, line: 412, baseType: !127, size: 32, offset: 6944)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "rescan_entered", scope: !72, file: !73, line: 413, baseType: !127, size: 32, offset: 6976)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "need_retune", scope: !72, file: !73, line: 415, baseType: !127, size: 32, offset: 7008)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "hold_retune", scope: !72, file: !73, line: 416, baseType: !127, size: 32, offset: 7040)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "retune_period", scope: !72, file: !73, line: 417, baseType: !7, size: 32, offset: 7072)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "retune_timer", scope: !72, file: !73, line: 418, baseType: !1755, size: 320, offset: 7104)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "trigger_card_event", scope: !72, file: !73, line: 420, baseType: !970, size: 8, offset: 7424)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "card", scope: !72, file: !73, line: 422, baseType: !66, size: 64, offset: 7488)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "wq", scope: !72, file: !73, line: 424, baseType: !677, size: 128, offset: 7552)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "claimer", scope: !72, file: !73, line: 425, baseType: !2116, size: 64, offset: 7680)
!2116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2117, size: 64)
!2117 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mmc_ctx", file: !73, line: 271, size: 64, elements: !2118)
!2118 = !{!2119}
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !2117, file: !73, line: 272, baseType: !390, size: 64)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "claim_cnt", scope: !72, file: !73, line: 426, baseType: !127, size: 32, offset: 7744)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "default_ctx", scope: !72, file: !73, line: 427, baseType: !2117, size: 64, offset: 7808)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "detect", scope: !72, file: !73, line: 429, baseType: !2123, size: 704, offset: 7872)
!2123 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_work", file: !1296, line: 115, size: 704, elements: !2124)
!2124 = !{!2125, !2126, !2127, !2130}
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !2123, file: !1296, line: 116, baseType: !1295, size: 256)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !2123, file: !1296, line: 117, baseType: !1755, size: 320, offset: 256)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "wq", scope: !2123, file: !1296, line: 120, baseType: !2128, size: 64, offset: 576)
!2128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2129, size: 64)
!2129 = !DICompositeType(tag: DW_TAG_structure_type, name: "workqueue_struct", file: !1296, line: 18, flags: DIFlagFwdDecl)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !2123, file: !1296, line: 121, baseType: !127, size: 32, offset: 640)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "detect_change", scope: !72, file: !73, line: 430, baseType: !127, size: 32, offset: 8576)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "slot", scope: !72, file: !73, line: 431, baseType: !2133, size: 128, offset: 8640)
!2133 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mmc_slot", file: !73, line: 243, size: 128, elements: !2134)
!2134 = !{!2135, !2136, !2137}
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "cd_irq", scope: !2133, file: !73, line: 244, baseType: !127, size: 32)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "cd_wake_enabled", scope: !2133, file: !73, line: 245, baseType: !970, size: 8, offset: 32)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "handler_priv", scope: !2133, file: !73, line: 246, baseType: !65, size: 64, offset: 64)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "bus_ops", scope: !72, file: !73, line: 433, baseType: !2139, size: 64, offset: 8768)
!2139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2140, size: 64)
!2140 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2141)
!2141 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mmc_bus_ops", file: !2142, line: 20, size: 704, elements: !2143)
!2142 = !DIFile(filename: "drivers/mmc/core/core.h", directory: "/home/lizy2001/genbc/linux")
!2143 = !{!2144, !2145, !2146, !2147, !2148, !2149, !2150, !2151, !2152, !2153, !2154}
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !2141, file: !2142, line: 21, baseType: !2023, size: 64)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "detect", scope: !2141, file: !2142, line: 22, baseType: !2023, size: 64, offset: 64)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "pre_suspend", scope: !2141, file: !2142, line: 23, baseType: !2014, size: 64, offset: 128)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !2141, file: !2142, line: 24, baseType: !2014, size: 64, offset: 192)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !2141, file: !2142, line: 25, baseType: !2014, size: 64, offset: 256)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_suspend", scope: !2141, file: !2142, line: 26, baseType: !2014, size: 64, offset: 320)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_resume", scope: !2141, file: !2142, line: 27, baseType: !2014, size: 64, offset: 384)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "alive", scope: !2141, file: !2142, line: 28, baseType: !2014, size: 64, offset: 448)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !2141, file: !2142, line: 29, baseType: !2014, size: 64, offset: 512)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "hw_reset", scope: !2141, file: !2142, line: 30, baseType: !2014, size: 64, offset: 576)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "sw_reset", scope: !2141, file: !2142, line: 31, baseType: !2014, size: 64, offset: 640)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "bus_refs", scope: !72, file: !73, line: 434, baseType: !7, size: 32, offset: 8832)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "sdio_irqs", scope: !72, file: !73, line: 436, baseType: !7, size: 32, offset: 8864)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "sdio_irq_thread", scope: !72, file: !73, line: 437, baseType: !390, size: 64, offset: 8896)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "sdio_irq_work", scope: !72, file: !73, line: 438, baseType: !2123, size: 704, offset: 8960)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "sdio_irq_pending", scope: !72, file: !73, line: 439, baseType: !970, size: 8, offset: 9664)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "sdio_irq_thread_abort", scope: !72, file: !73, line: 440, baseType: !284, size: 32, offset: 9696)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "pm_flags", scope: !72, file: !73, line: 442, baseType: !2084, size: 32, offset: 9728)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "led", scope: !72, file: !73, line: 444, baseType: !2163, size: 64, offset: 9792)
!2163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2164, size: 64)
!2164 = !DICompositeType(tag: DW_TAG_structure_type, name: "led_trigger", file: !73, line: 444, flags: DIFlagFwdDecl)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "supply", scope: !72, file: !73, line: 449, baseType: !2166, size: 128, offset: 9856)
!2166 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mmc_supply", file: !73, line: 266, size: 128, elements: !2167)
!2167 = !{!2168, !2171}
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "vmmc", scope: !2166, file: !73, line: 267, baseType: !2169, size: 64)
!2169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2170, size: 64)
!2170 = !DICompositeType(tag: DW_TAG_structure_type, name: "regulator", file: !73, line: 263, flags: DIFlagFwdDecl)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "vqmmc", scope: !2166, file: !73, line: 268, baseType: !2169, size: 64, offset: 64)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "debugfs_root", scope: !72, file: !73, line: 451, baseType: !2173, size: 64, offset: 9984)
!2173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2174, size: 64)
!2174 = !DICompositeType(tag: DW_TAG_structure_type, name: "dentry", file: !1398, line: 21, flags: DIFlagFwdDecl)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "ongoing_mrq", scope: !72, file: !73, line: 454, baseType: !1936, size: 64, offset: 10048)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "actual_clock", scope: !72, file: !73, line: 460, baseType: !7, size: 32, offset: 10112)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "slotno", scope: !72, file: !73, line: 462, baseType: !7, size: 32, offset: 10144)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "dsr_req", scope: !72, file: !73, line: 464, baseType: !127, size: 32, offset: 10176)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "dsr", scope: !72, file: !73, line: 465, baseType: !400, size: 32, offset: 10208)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "cqe_ops", scope: !72, file: !73, line: 468, baseType: !2181, size: 64, offset: 10240)
!2181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2182, size: 64)
!2182 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2183)
!2183 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mmc_cqe_ops", file: !73, line: 178, size: 576, elements: !2184)
!2184 = !{!2185, !2189, !2190, !2191, !2192, !2193, !2194, !2199, !2200}
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "cqe_enable", scope: !2183, file: !73, line: 180, baseType: !2186, size: 64)
!2186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2187, size: 64)
!2187 = !DISubroutineType(types: !2188)
!2188 = !{!127, !71, !66}
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "cqe_disable", scope: !2183, file: !73, line: 182, baseType: !2023, size: 64, offset: 64)
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "cqe_request", scope: !2183, file: !73, line: 187, baseType: !1992, size: 64, offset: 128)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "cqe_post_req", scope: !2183, file: !73, line: 189, baseType: !1987, size: 64, offset: 192)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "cqe_off", scope: !2183, file: !73, line: 195, baseType: !2023, size: 64, offset: 256)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "cqe_wait_for_idle", scope: !2183, file: !73, line: 200, baseType: !2014, size: 64, offset: 320)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "cqe_timeout", scope: !2183, file: !73, line: 206, baseType: !2195, size: 64, offset: 384)
!2195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2196, size: 64)
!2196 = !DISubroutineType(types: !2197)
!2197 = !{!970, !71, !1936, !2198}
!2198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !970, size: 64)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "cqe_recovery_start", scope: !2183, file: !73, line: 212, baseType: !2023, size: 64, offset: 448)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "cqe_recovery_finish", scope: !2183, file: !73, line: 219, baseType: !2023, size: 64, offset: 512)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "cqe_private", scope: !72, file: !73, line: 469, baseType: !65, size: 64, offset: 10304)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "cqe_qdepth", scope: !72, file: !73, line: 470, baseType: !127, size: 32, offset: 10368)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "cqe_enabled", scope: !72, file: !73, line: 471, baseType: !970, size: 8, offset: 10400)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "cqe_on", scope: !72, file: !73, line: 472, baseType: !970, size: 8, offset: 10408)
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "hsq_enabled", scope: !72, file: !73, line: 475, baseType: !970, size: 8, offset: 10416)
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !72, file: !73, line: 477, baseType: !1308, align: 512, offset: 10752)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !67, file: !68, line: 246, baseType: !77, size: 5568, offset: 64)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "ocr", scope: !67, file: !68, line: 247, baseType: !400, size: 32, offset: 5632)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "rca", scope: !67, file: !68, line: 248, baseType: !7, size: 32, offset: 5664)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !67, file: !68, line: 249, baseType: !7, size: 32, offset: 5696)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !67, file: !68, line: 254, baseType: !7, size: 32, offset: 5728)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "quirks", scope: !67, file: !68, line: 255, baseType: !7, size: 32, offset: 5760)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "quirk_max_rate", scope: !67, file: !68, line: 256, baseType: !7, size: 32, offset: 5792)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "reenable_cmdq", scope: !67, file: !68, line: 274, baseType: !970, size: 8, offset: 5824)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "erase_size", scope: !67, file: !68, line: 276, baseType: !7, size: 32, offset: 5856)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "erase_shift", scope: !67, file: !68, line: 277, baseType: !7, size: 32, offset: 5888)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "pref_erase", scope: !67, file: !68, line: 278, baseType: !7, size: 32, offset: 5920)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "eg_boundary", scope: !67, file: !68, line: 279, baseType: !7, size: 32, offset: 5952)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "erase_arg", scope: !67, file: !68, line: 280, baseType: !7, size: 32, offset: 5984)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "erased_byte", scope: !67, file: !68, line: 281, baseType: !537, size: 8, offset: 6016)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "raw_cid", scope: !67, file: !68, line: 283, baseType: !1947, size: 128, offset: 6048)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "raw_csd", scope: !67, file: !68, line: 284, baseType: !1947, size: 128, offset: 6176)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "raw_scr", scope: !67, file: !68, line: 285, baseType: !2224, size: 64, offset: 6304)
!2224 = !DICompositeType(tag: DW_TAG_array_type, baseType: !400, size: 64, elements: !942)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "raw_ssr", scope: !67, file: !68, line: 286, baseType: !2226, size: 512, offset: 6368)
!2226 = !DICompositeType(tag: DW_TAG_array_type, baseType: !400, size: 512, elements: !762)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "cid", scope: !67, file: !68, line: 287, baseType: !2228, size: 224, offset: 6880)
!2228 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mmc_cid", file: !68, line: 13, size: 224, elements: !2229)
!2229 = !{!2230, !2231, !2232, !2233, !2234, !2235, !2236, !2237, !2238}
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "manfid", scope: !2228, file: !68, line: 14, baseType: !7, size: 32)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "prod_name", scope: !2228, file: !68, line: 15, baseType: !907, size: 64, offset: 32)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "prv", scope: !2228, file: !68, line: 16, baseType: !539, size: 8, offset: 96)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !2228, file: !68, line: 17, baseType: !7, size: 32, offset: 128)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "oemid", scope: !2228, file: !68, line: 18, baseType: !185, size: 16, offset: 160)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "year", scope: !2228, file: !68, line: 19, baseType: !185, size: 16, offset: 176)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "hwrev", scope: !2228, file: !68, line: 20, baseType: !539, size: 8, offset: 192)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "fwrev", scope: !2228, file: !68, line: 21, baseType: !539, size: 8, offset: 200)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "month", scope: !2228, file: !68, line: 22, baseType: !539, size: 8, offset: 208)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "csd", scope: !67, file: !68, line: 288, baseType: !2240, size: 352, offset: 7104)
!2240 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mmc_csd", file: !68, line: 25, size: 352, elements: !2241)
!2241 = !{!2242, !2243, !2244, !2245, !2246, !2247, !2248, !2249, !2250, !2251, !2252, !2253, !2254, !2255, !2256, !2257, !2258}
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "structure", scope: !2240, file: !68, line: 26, baseType: !539, size: 8)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "mmca_vsn", scope: !2240, file: !68, line: 27, baseType: !539, size: 8, offset: 8)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "cmdclass", scope: !2240, file: !68, line: 28, baseType: !185, size: 16, offset: 16)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "taac_clks", scope: !2240, file: !68, line: 29, baseType: !185, size: 16, offset: 32)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "taac_ns", scope: !2240, file: !68, line: 30, baseType: !7, size: 32, offset: 64)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "c_size", scope: !2240, file: !68, line: 31, baseType: !7, size: 32, offset: 96)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "r2w_factor", scope: !2240, file: !68, line: 32, baseType: !7, size: 32, offset: 128)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "max_dtr", scope: !2240, file: !68, line: 33, baseType: !7, size: 32, offset: 160)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "erase_size", scope: !2240, file: !68, line: 34, baseType: !7, size: 32, offset: 192)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "read_blkbits", scope: !2240, file: !68, line: 35, baseType: !7, size: 32, offset: 224)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "write_blkbits", scope: !2240, file: !68, line: 36, baseType: !7, size: 32, offset: 256)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "capacity", scope: !2240, file: !68, line: 37, baseType: !7, size: 32, offset: 288)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "read_partial", scope: !2240, file: !68, line: 38, baseType: !7, size: 1, offset: 320, flags: DIFlagBitField, extraData: i64 320)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "read_misalign", scope: !2240, file: !68, line: 39, baseType: !7, size: 1, offset: 321, flags: DIFlagBitField, extraData: i64 320)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "write_partial", scope: !2240, file: !68, line: 40, baseType: !7, size: 1, offset: 322, flags: DIFlagBitField, extraData: i64 320)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "write_misalign", scope: !2240, file: !68, line: 41, baseType: !7, size: 1, offset: 323, flags: DIFlagBitField, extraData: i64 320)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "dsr_imp", scope: !2240, file: !68, line: 42, baseType: !7, size: 1, offset: 324, flags: DIFlagBitField, extraData: i64 320)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "ext_csd", scope: !67, file: !68, line: 289, baseType: !2260, size: 1344, offset: 7488)
!2260 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mmc_ext_csd", file: !68, line: 45, size: 1344, elements: !2261)
!2261 = !{!2262, !2263, !2264, !2265, !2266, !2267, !2268, !2269, !2270, !2271, !2272, !2273, !2274, !2275, !2276, !2277, !2278, !2279, !2280, !2281, !2282, !2283, !2284, !2285, !2286, !2287, !2288, !2289, !2290, !2291, !2292, !2293, !2294, !2295, !2296, !2297, !2298, !2299, !2300, !2301, !2302, !2303, !2304, !2305, !2307, !2308, !2309, !2310, !2311, !2312, !2313, !2314, !2315, !2316, !2317, !2318, !2319, !2320, !2321, !2322, !2323, !2324, !2325, !2326, !2327, !2328, !2329, !2330, !2331, !2332, !2333, !2334, !2336, !2337, !2338, !2339}
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "rev", scope: !2260, file: !68, line: 46, baseType: !537, size: 8)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "erase_group_def", scope: !2260, file: !68, line: 47, baseType: !537, size: 8, offset: 8)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "sec_feature_support", scope: !2260, file: !68, line: 48, baseType: !537, size: 8, offset: 16)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "rel_sectors", scope: !2260, file: !68, line: 49, baseType: !537, size: 8, offset: 24)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "rel_param", scope: !2260, file: !68, line: 50, baseType: !537, size: 8, offset: 32)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "enhanced_rpmb_supported", scope: !2260, file: !68, line: 51, baseType: !970, size: 8, offset: 40)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "part_config", scope: !2260, file: !68, line: 52, baseType: !537, size: 8, offset: 48)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "cache_ctrl", scope: !2260, file: !68, line: 53, baseType: !537, size: 8, offset: 56)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "rst_n_function", scope: !2260, file: !68, line: 54, baseType: !537, size: 8, offset: 64)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "max_packed_writes", scope: !2260, file: !68, line: 55, baseType: !537, size: 8, offset: 72)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "max_packed_reads", scope: !2260, file: !68, line: 56, baseType: !537, size: 8, offset: 80)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "packed_event_en", scope: !2260, file: !68, line: 57, baseType: !537, size: 8, offset: 88)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "part_time", scope: !2260, file: !68, line: 58, baseType: !7, size: 32, offset: 96)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "sa_timeout", scope: !2260, file: !68, line: 59, baseType: !7, size: 32, offset: 128)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "generic_cmd6_time", scope: !2260, file: !68, line: 60, baseType: !7, size: 32, offset: 160)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "power_off_longtime", scope: !2260, file: !68, line: 61, baseType: !7, size: 32, offset: 192)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "power_off_notification", scope: !2260, file: !68, line: 62, baseType: !537, size: 8, offset: 224)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "hs_max_dtr", scope: !2260, file: !68, line: 63, baseType: !7, size: 32, offset: 256)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "hs200_max_dtr", scope: !2260, file: !68, line: 64, baseType: !7, size: 32, offset: 288)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "sectors", scope: !2260, file: !68, line: 69, baseType: !7, size: 32, offset: 320)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "hc_erase_size", scope: !2260, file: !68, line: 70, baseType: !7, size: 32, offset: 352)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "hc_erase_timeout", scope: !2260, file: !68, line: 71, baseType: !7, size: 32, offset: 384)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "sec_trim_mult", scope: !2260, file: !68, line: 72, baseType: !7, size: 32, offset: 416)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "sec_erase_mult", scope: !2260, file: !68, line: 73, baseType: !7, size: 32, offset: 448)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "trim_timeout", scope: !2260, file: !68, line: 74, baseType: !7, size: 32, offset: 480)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "partition_setting_completed", scope: !2260, file: !68, line: 75, baseType: !970, size: 8, offset: 512)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "enhanced_area_offset", scope: !2260, file: !68, line: 76, baseType: !266, size: 64, offset: 576)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "enhanced_area_size", scope: !2260, file: !68, line: 77, baseType: !7, size: 32, offset: 640)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "cache_size", scope: !2260, file: !68, line: 78, baseType: !7, size: 32, offset: 672)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "hpi_en", scope: !2260, file: !68, line: 79, baseType: !970, size: 8, offset: 704)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "hpi", scope: !2260, file: !68, line: 80, baseType: !970, size: 8, offset: 712)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "hpi_cmd", scope: !2260, file: !68, line: 81, baseType: !7, size: 32, offset: 736)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "bkops", scope: !2260, file: !68, line: 82, baseType: !970, size: 8, offset: 768)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "man_bkops_en", scope: !2260, file: !68, line: 83, baseType: !970, size: 8, offset: 776)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "auto_bkops_en", scope: !2260, file: !68, line: 84, baseType: !970, size: 8, offset: 784)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "data_sector_size", scope: !2260, file: !68, line: 85, baseType: !7, size: 32, offset: 800)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "data_tag_unit_size", scope: !2260, file: !68, line: 86, baseType: !7, size: 32, offset: 832)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "boot_ro_lock", scope: !2260, file: !68, line: 87, baseType: !7, size: 32, offset: 864)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "boot_ro_lockable", scope: !2260, file: !68, line: 88, baseType: !970, size: 8, offset: 896)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "ffu_capable", scope: !2260, file: !68, line: 89, baseType: !970, size: 8, offset: 904)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "cmdq_en", scope: !2260, file: !68, line: 90, baseType: !970, size: 8, offset: 912)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "cmdq_support", scope: !2260, file: !68, line: 91, baseType: !970, size: 8, offset: 920)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "cmdq_depth", scope: !2260, file: !68, line: 92, baseType: !7, size: 32, offset: 928)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "fwrev", scope: !2260, file: !68, line: 94, baseType: !2306, size: 64, offset: 960)
!2306 = !DICompositeType(tag: DW_TAG_array_type, baseType: !537, size: 64, elements: !506)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "raw_exception_status", scope: !2260, file: !68, line: 95, baseType: !537, size: 8, offset: 1024)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "raw_partition_support", scope: !2260, file: !68, line: 96, baseType: !537, size: 8, offset: 1032)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "raw_rpmb_size_mult", scope: !2260, file: !68, line: 97, baseType: !537, size: 8, offset: 1040)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "raw_erased_mem_count", scope: !2260, file: !68, line: 98, baseType: !537, size: 8, offset: 1048)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "strobe_support", scope: !2260, file: !68, line: 99, baseType: !537, size: 8, offset: 1056)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "raw_ext_csd_structure", scope: !2260, file: !68, line: 100, baseType: !537, size: 8, offset: 1064)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "raw_card_type", scope: !2260, file: !68, line: 101, baseType: !537, size: 8, offset: 1072)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "raw_driver_strength", scope: !2260, file: !68, line: 102, baseType: !537, size: 8, offset: 1080)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "out_of_int_time", scope: !2260, file: !68, line: 103, baseType: !537, size: 8, offset: 1088)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "raw_pwr_cl_52_195", scope: !2260, file: !68, line: 104, baseType: !537, size: 8, offset: 1096)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "raw_pwr_cl_26_195", scope: !2260, file: !68, line: 105, baseType: !537, size: 8, offset: 1104)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "raw_pwr_cl_52_360", scope: !2260, file: !68, line: 106, baseType: !537, size: 8, offset: 1112)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "raw_pwr_cl_26_360", scope: !2260, file: !68, line: 107, baseType: !537, size: 8, offset: 1120)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "raw_s_a_timeout", scope: !2260, file: !68, line: 108, baseType: !537, size: 8, offset: 1128)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "raw_hc_erase_gap_size", scope: !2260, file: !68, line: 109, baseType: !537, size: 8, offset: 1136)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "raw_erase_timeout_mult", scope: !2260, file: !68, line: 110, baseType: !537, size: 8, offset: 1144)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "raw_hc_erase_grp_size", scope: !2260, file: !68, line: 111, baseType: !537, size: 8, offset: 1152)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "raw_sec_trim_mult", scope: !2260, file: !68, line: 112, baseType: !537, size: 8, offset: 1160)
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "raw_sec_erase_mult", scope: !2260, file: !68, line: 113, baseType: !537, size: 8, offset: 1168)
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "raw_sec_feature_support", scope: !2260, file: !68, line: 114, baseType: !537, size: 8, offset: 1176)
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "raw_trim_mult", scope: !2260, file: !68, line: 115, baseType: !537, size: 8, offset: 1184)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "raw_pwr_cl_200_195", scope: !2260, file: !68, line: 116, baseType: !537, size: 8, offset: 1192)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "raw_pwr_cl_200_360", scope: !2260, file: !68, line: 117, baseType: !537, size: 8, offset: 1200)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "raw_pwr_cl_ddr_52_195", scope: !2260, file: !68, line: 118, baseType: !537, size: 8, offset: 1208)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "raw_pwr_cl_ddr_52_360", scope: !2260, file: !68, line: 119, baseType: !537, size: 8, offset: 1216)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "raw_pwr_cl_ddr_200_360", scope: !2260, file: !68, line: 120, baseType: !537, size: 8, offset: 1224)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "raw_bkops_status", scope: !2260, file: !68, line: 121, baseType: !537, size: 8, offset: 1232)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "raw_sectors", scope: !2260, file: !68, line: 122, baseType: !2335, size: 32, offset: 1240)
!2335 = !DICompositeType(tag: DW_TAG_array_type, baseType: !537, size: 32, elements: !343)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "pre_eol_info", scope: !2260, file: !68, line: 123, baseType: !537, size: 8, offset: 1272)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "device_life_time_est_typ_a", scope: !2260, file: !68, line: 124, baseType: !537, size: 8, offset: 1280)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "device_life_time_est_typ_b", scope: !2260, file: !68, line: 125, baseType: !537, size: 8, offset: 1288)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "feature_support", scope: !2260, file: !68, line: 127, baseType: !7, size: 32, offset: 1312)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "scr", scope: !67, file: !68, line: 290, baseType: !2341, size: 48, offset: 8832)
!2341 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sd_scr", file: !68, line: 131, size: 48, elements: !2342)
!2342 = !{!2343, !2344, !2345, !2346, !2347, !2348}
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "sda_vsn", scope: !2341, file: !68, line: 132, baseType: !539, size: 8)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "sda_spec3", scope: !2341, file: !68, line: 133, baseType: !539, size: 8, offset: 8)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "sda_spec4", scope: !2341, file: !68, line: 134, baseType: !539, size: 8, offset: 16)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "sda_specx", scope: !2341, file: !68, line: 135, baseType: !539, size: 8, offset: 24)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "bus_widths", scope: !2341, file: !68, line: 136, baseType: !539, size: 8, offset: 32)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "cmds", scope: !2341, file: !68, line: 139, baseType: !539, size: 8, offset: 40)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "ssr", scope: !67, file: !68, line: 291, baseType: !2350, size: 96, offset: 8896)
!2350 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sd_ssr", file: !68, line: 144, size: 96, elements: !2351)
!2351 = !{!2352, !2353, !2354}
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "au", scope: !2350, file: !68, line: 145, baseType: !7, size: 32)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "erase_timeout", scope: !2350, file: !68, line: 146, baseType: !7, size: 32, offset: 32)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "erase_offset", scope: !2350, file: !68, line: 147, baseType: !7, size: 32, offset: 64)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "sw_caps", scope: !67, file: !68, line: 292, baseType: !2356, size: 160, offset: 8992)
!2356 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sd_switch_caps", file: !68, line: 150, size: 160, elements: !2357)
!2357 = !{!2358, !2359, !2360, !2361, !2362}
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "hs_max_dtr", scope: !2356, file: !68, line: 151, baseType: !7, size: 32)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "uhs_max_dtr", scope: !2356, file: !68, line: 152, baseType: !7, size: 32, offset: 32)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "sd3_bus_mode", scope: !2356, file: !68, line: 160, baseType: !7, size: 32, offset: 64)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "sd3_drv_type", scope: !2356, file: !68, line: 174, baseType: !7, size: 32, offset: 96)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "sd3_curr_limit", scope: !2356, file: !68, line: 179, baseType: !7, size: 32, offset: 128)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "sdio_funcs", scope: !67, file: !68, line: 294, baseType: !7, size: 32, offset: 9152)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "sdio_funcs_probed", scope: !67, file: !68, line: 295, baseType: !284, size: 32, offset: 9184)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "cccr", scope: !67, file: !68, line: 296, baseType: !2366, size: 96, offset: 9216)
!2366 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sdio_cccr", file: !68, line: 192, size: 96, elements: !2367)
!2367 = !{!2368, !2369, !2370, !2371, !2372, !2373, !2374, !2375}
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "sdio_vsn", scope: !2366, file: !68, line: 193, baseType: !7, size: 32)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "sd_vsn", scope: !2366, file: !68, line: 194, baseType: !7, size: 32, offset: 32)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "multi_block", scope: !2366, file: !68, line: 195, baseType: !7, size: 1, offset: 64, flags: DIFlagBitField, extraData: i64 64)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "low_speed", scope: !2366, file: !68, line: 196, baseType: !7, size: 1, offset: 65, flags: DIFlagBitField, extraData: i64 64)
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "wide_bus", scope: !2366, file: !68, line: 197, baseType: !7, size: 1, offset: 66, flags: DIFlagBitField, extraData: i64 64)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "high_power", scope: !2366, file: !68, line: 198, baseType: !7, size: 1, offset: 67, flags: DIFlagBitField, extraData: i64 64)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "high_speed", scope: !2366, file: !68, line: 199, baseType: !7, size: 1, offset: 68, flags: DIFlagBitField, extraData: i64 64)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "disable_cd", scope: !2366, file: !68, line: 200, baseType: !7, size: 1, offset: 69, flags: DIFlagBitField, extraData: i64 64)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "cis", scope: !67, file: !68, line: 297, baseType: !2377, size: 96, offset: 9312)
!2377 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sdio_cis", file: !68, line: 203, size: 96, elements: !2378)
!2378 = !{!2379, !2380, !2381, !2382}
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "vendor", scope: !2377, file: !68, line: 204, baseType: !185, size: 16)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !2377, file: !68, line: 205, baseType: !185, size: 16, offset: 16)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "blksize", scope: !2377, file: !68, line: 206, baseType: !185, size: 16, offset: 32)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "max_dtr", scope: !2377, file: !68, line: 207, baseType: !7, size: 32, offset: 64)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "sdio_func", scope: !67, file: !68, line: 298, baseType: !2384, size: 448, offset: 9408)
!2384 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2385, size: 448, elements: !2387)
!2385 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2386, size: 64)
!2386 = !DICompositeType(tag: DW_TAG_structure_type, name: "sdio_func", file: !68, line: 211, flags: DIFlagFwdDecl)
!2387 = !{!2388}
!2388 = !DISubrange(count: 7)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "sdio_single_irq", scope: !67, file: !68, line: 299, baseType: !2385, size: 64, offset: 9856)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "major_rev", scope: !67, file: !68, line: 300, baseType: !537, size: 8, offset: 9920)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "minor_rev", scope: !67, file: !68, line: 301, baseType: !537, size: 8, offset: 9928)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "num_info", scope: !67, file: !68, line: 302, baseType: !7, size: 32, offset: 9952)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !67, file: !68, line: 303, baseType: !2394, size: 64, offset: 9984)
!2394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !84, size: 64)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "tuples", scope: !67, file: !68, line: 304, baseType: !2396, size: 64, offset: 10048)
!2396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2397, size: 64)
!2397 = !DICompositeType(tag: DW_TAG_structure_type, name: "sdio_func_tuple", file: !68, line: 212, flags: DIFlagFwdDecl)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "sd_bus_speed", scope: !67, file: !68, line: 306, baseType: !7, size: 32, offset: 10112)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "mmc_avail_type", scope: !67, file: !68, line: 307, baseType: !7, size: 32, offset: 10144)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "drive_strength", scope: !67, file: !68, line: 308, baseType: !7, size: 32, offset: 10176)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "debugfs_root", scope: !67, file: !68, line: 310, baseType: !2173, size: 64, offset: 10240)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "part", scope: !67, file: !68, line: 311, baseType: !2403, size: 2240, offset: 10304)
!2403 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2404, size: 2240, elements: !2387)
!2404 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mmc_part", file: !68, line: 229, size: 320, elements: !2405)
!2405 = !{!2406, !2407, !2408, !2410, !2411}
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2404, file: !68, line: 230, baseType: !262, size: 64)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "part_cfg", scope: !2404, file: !68, line: 231, baseType: !7, size: 32, offset: 64)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2404, file: !68, line: 232, baseType: !2409, size: 160, offset: 96)
!2409 = !DICompositeType(tag: DW_TAG_array_type, baseType: !86, size: 160, elements: !1162)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "force_ro", scope: !2404, file: !68, line: 233, baseType: !970, size: 8, offset: 256)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "area_type", scope: !2404, file: !68, line: 234, baseType: !7, size: 32, offset: 288)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "nr_parts", scope: !67, file: !68, line: 312, baseType: !7, size: 32, offset: 12544)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "bouncesz", scope: !67, file: !68, line: 314, baseType: !7, size: 32, offset: 12576)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "complete_wq", scope: !67, file: !68, line: 315, baseType: !2128, size: 64, offset: 12608)
!2415 = !DIDerivedType(tag: DW_TAG_typedef, name: "__be32", file: !1529, line: 32, baseType: !401)
!2416 = !{!2417, !0, !2419, !2421, !2435, !2437, !2439, !2441, !2443, !2445, !2447, !2452, !2454, !2456, !2458, !2460, !2462, !2464, !2466, !2468, !2470, !2472, !2474, !2476, !2478, !2480, !2482, !2484, !2488, !2491, !2493, !2497, !2499}
!2417 = !DIGlobalVariableExpression(var: !2418, expr: !DIExpression())
!2418 = distinct !DIGlobalVariable(name: "sd_type", scope: !2, file: !3, line: 785, type: !1566, isLocal: false, isDefinition: true)
!2419 = !DIGlobalVariableExpression(var: !2420, expr: !DIExpression())
!2420 = distinct !DIGlobalVariable(name: "sd_std_group", scope: !2, file: !3, line: 779, type: !199, isLocal: true, isDefinition: true)
!2421 = !DIGlobalVariableExpression(var: !2422, expr: !DIExpression())
!2422 = distinct !DIGlobalVariable(name: "dev_attr_vendor", scope: !2, file: !3, line: 710, type: !2423, isLocal: true, isDefinition: true)
!2423 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_attribute", file: !30, line: 99, size: 256, elements: !2424)
!2424 = !{!2425, !2426, !2431}
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !2423, file: !30, line: 100, baseType: !180, size: 128)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !2423, file: !30, line: 101, baseType: !2427, size: 64, offset: 128)
!2427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2428, size: 64)
!2428 = !DISubroutineType(types: !2429)
!2429 = !{!174, !76, !2430, !143}
!2430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2423, size: 64)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !2423, file: !30, line: 103, baseType: !2432, size: 64, offset: 192)
!2432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2433, size: 64)
!2433 = !DISubroutineType(types: !2434)
!2434 = !{!174, !76, !2430, !84, !190}
!2435 = !DIGlobalVariableExpression(var: !2436, expr: !DIExpression())
!2436 = distinct !DIGlobalVariable(name: "dev_attr_device", scope: !2, file: !3, line: 711, type: !2423, isLocal: true, isDefinition: true)
!2437 = !DIGlobalVariableExpression(var: !2438, expr: !DIExpression())
!2438 = distinct !DIGlobalVariable(name: "dev_attr_revision", scope: !2, file: !3, line: 712, type: !2423, isLocal: true, isDefinition: true)
!2439 = !DIGlobalVariableExpression(var: !2440, expr: !DIExpression())
!2440 = distinct !DIGlobalVariable(name: "dev_attr_info1", scope: !2, file: !3, line: 727, type: !2423, isLocal: true, isDefinition: true)
!2441 = !DIGlobalVariableExpression(var: !2442, expr: !DIExpression())
!2442 = distinct !DIGlobalVariable(name: "dev_attr_info2", scope: !2, file: !3, line: 728, type: !2423, isLocal: true, isDefinition: true)
!2443 = !DIGlobalVariableExpression(var: !2444, expr: !DIExpression())
!2444 = distinct !DIGlobalVariable(name: "dev_attr_info3", scope: !2, file: !3, line: 729, type: !2423, isLocal: true, isDefinition: true)
!2445 = !DIGlobalVariableExpression(var: !2446, expr: !DIExpression())
!2446 = distinct !DIGlobalVariable(name: "dev_attr_info4", scope: !2, file: !3, line: 730, type: !2423, isLocal: true, isDefinition: true)
!2447 = !DIGlobalVariableExpression(var: !2448, expr: !DIExpression())
!2448 = distinct !DIGlobalVariable(name: "sd_std_attrs", scope: !2, file: !3, line: 732, type: !2449, isLocal: true, isDefinition: true)
!2449 = !DICompositeType(tag: DW_TAG_array_type, baseType: !179, size: 1536, elements: !2450)
!2450 = !{!2451}
!2451 = !DISubrange(count: 24)
!2452 = !DIGlobalVariableExpression(var: !2453, expr: !DIExpression())
!2453 = distinct !DIGlobalVariable(name: "dev_attr_cid", scope: !2, file: !3, line: 668, type: !2423, isLocal: true, isDefinition: true)
!2454 = !DIGlobalVariableExpression(var: !2455, expr: !DIExpression())
!2455 = distinct !DIGlobalVariable(name: "dev_attr_csd", scope: !2, file: !3, line: 670, type: !2423, isLocal: true, isDefinition: true)
!2456 = !DIGlobalVariableExpression(var: !2457, expr: !DIExpression())
!2457 = distinct !DIGlobalVariable(name: "dev_attr_scr", scope: !2, file: !3, line: 672, type: !2423, isLocal: true, isDefinition: true)
!2458 = !DIGlobalVariableExpression(var: !2459, expr: !DIExpression())
!2459 = distinct !DIGlobalVariable(name: "dev_attr_ssr", scope: !2, file: !3, line: 673, type: !2423, isLocal: true, isDefinition: true)
!2460 = !DIGlobalVariableExpression(var: !2461, expr: !DIExpression())
!2461 = distinct !DIGlobalVariable(name: "dev_attr_date", scope: !2, file: !3, line: 681, type: !2423, isLocal: true, isDefinition: true)
!2462 = !DIGlobalVariableExpression(var: !2463, expr: !DIExpression())
!2463 = distinct !DIGlobalVariable(name: "dev_attr_erase_size", scope: !2, file: !3, line: 682, type: !2423, isLocal: true, isDefinition: true)
!2464 = !DIGlobalVariableExpression(var: !2465, expr: !DIExpression())
!2465 = distinct !DIGlobalVariable(name: "dev_attr_preferred_erase_size", scope: !2, file: !3, line: 683, type: !2423, isLocal: true, isDefinition: true)
!2466 = !DIGlobalVariableExpression(var: !2467, expr: !DIExpression())
!2467 = distinct !DIGlobalVariable(name: "dev_attr_fwrev", scope: !2, file: !3, line: 684, type: !2423, isLocal: true, isDefinition: true)
!2468 = !DIGlobalVariableExpression(var: !2469, expr: !DIExpression())
!2469 = distinct !DIGlobalVariable(name: "dev_attr_hwrev", scope: !2, file: !3, line: 685, type: !2423, isLocal: true, isDefinition: true)
!2470 = !DIGlobalVariableExpression(var: !2471, expr: !DIExpression())
!2471 = distinct !DIGlobalVariable(name: "dev_attr_manfid", scope: !2, file: !3, line: 686, type: !2423, isLocal: true, isDefinition: true)
!2472 = !DIGlobalVariableExpression(var: !2473, expr: !DIExpression())
!2473 = distinct !DIGlobalVariable(name: "dev_attr_name", scope: !2, file: !3, line: 687, type: !2423, isLocal: true, isDefinition: true)
!2474 = !DIGlobalVariableExpression(var: !2475, expr: !DIExpression())
!2475 = distinct !DIGlobalVariable(name: "dev_attr_oemid", scope: !2, file: !3, line: 688, type: !2423, isLocal: true, isDefinition: true)
!2476 = !DIGlobalVariableExpression(var: !2477, expr: !DIExpression())
!2477 = distinct !DIGlobalVariable(name: "dev_attr_serial", scope: !2, file: !3, line: 689, type: !2423, isLocal: true, isDefinition: true)
!2478 = !DIGlobalVariableExpression(var: !2479, expr: !DIExpression())
!2479 = distinct !DIGlobalVariable(name: "dev_attr_ocr", scope: !2, file: !3, line: 690, type: !2423, isLocal: true, isDefinition: true)
!2480 = !DIGlobalVariableExpression(var: !2481, expr: !DIExpression())
!2481 = distinct !DIGlobalVariable(name: "dev_attr_rca", scope: !2, file: !3, line: 691, type: !2423, isLocal: true, isDefinition: true)
!2482 = !DIGlobalVariableExpression(var: !2483, expr: !DIExpression())
!2483 = distinct !DIGlobalVariable(name: "dev_attr_dsr", scope: !2, file: !3, line: 708, type: !2423, isLocal: true, isDefinition: true)
!2484 = !DIGlobalVariableExpression(var: !2485, expr: !DIExpression())
!2485 = distinct !DIGlobalVariable(name: "taac_exp", scope: !2, file: !3, line: 39, type: !2486, isLocal: true, isDefinition: true)
!2486 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2487, size: 256, elements: !506)
!2487 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!2488 = !DIGlobalVariableExpression(var: !2489, expr: !DIExpression())
!2489 = distinct !DIGlobalVariable(name: "taac_mant", scope: !2, file: !3, line: 43, type: !2490, isLocal: true, isDefinition: true)
!2490 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2487, size: 512, elements: !762)
!2491 = !DIGlobalVariableExpression(var: !2492, expr: !DIExpression())
!2492 = distinct !DIGlobalVariable(name: "tran_exp", scope: !2, file: !3, line: 29, type: !2486, isLocal: true, isDefinition: true)
!2493 = !DIGlobalVariableExpression(var: !2494, expr: !DIExpression())
!2494 = distinct !DIGlobalVariable(name: "tran_mant", scope: !2, file: !3, line: 34, type: !2495, isLocal: true, isDefinition: true)
!2495 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2496, size: 128, elements: !762)
!2496 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !539)
!2497 = !DIGlobalVariableExpression(var: !2498, expr: !DIExpression())
!2498 = distinct !DIGlobalVariable(name: "sd_au_size", scope: !2, file: !3, line: 48, type: !2490, isLocal: true, isDefinition: true)
!2499 = !DIGlobalVariableExpression(var: !2500, expr: !DIExpression())
!2500 = distinct !DIGlobalVariable(name: "mmc_sd_ops", scope: !2, file: !3, line: 1318, type: !2140, isLocal: true, isDefinition: true)
!2501 = !DICompositeType(tag: DW_TAG_array_type, baseType: !198, size: 128, elements: !942)
!2502 = !{i32 7, !"Dwarf Version", i32 4}
!2503 = !{i32 2, !"Debug Info Version", i32 3}
!2504 = !{i32 1, !"wchar_size", i32 2}
!2505 = !{i32 1, !"Code Model", i32 2}
!2506 = !{!"clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)"}
!2507 = distinct !DISubprogram(name: "mmc_decode_cid", scope: !3, file: !3, line: 72, type: !2508, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !115)
!2508 = !DISubroutineType(types: !2509)
!2509 = !{null, !66}
!2510 = !DILocalVariable(name: "card", arg: 1, scope: !2507, file: !3, line: 72, type: !66)
!2511 = !DILocation(line: 72, column: 38, scope: !2507)
!2512 = !DILocalVariable(name: "resp", scope: !2507, file: !3, line: 74, type: !601)
!2513 = !DILocation(line: 74, column: 7, scope: !2507)
!2514 = !DILocation(line: 74, column: 14, scope: !2507)
!2515 = !DILocation(line: 74, column: 20, scope: !2507)
!2516 = !DILocalVariable(name: "__size", scope: !2517, file: !3, line: 80, type: !2518)
!2517 = distinct !DILexicalBlock(scope: !2507, file: !3, line: 80, column: 22)
!2518 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !127)
!2519 = !DILocation(line: 80, column: 22, scope: !2517)
!2520 = !DILocalVariable(name: "__mask", scope: !2517, file: !3, line: 80, type: !2521)
!2521 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !400)
!2522 = !DILocalVariable(name: "__off", scope: !2517, file: !3, line: 80, type: !2518)
!2523 = !DILocalVariable(name: "__shft", scope: !2517, file: !3, line: 80, type: !2518)
!2524 = !DILocalVariable(name: "__res", scope: !2517, file: !3, line: 80, type: !400)
!2525 = !DILocation(line: 80, column: 22, scope: !2526)
!2526 = distinct !DILexicalBlock(scope: !2517, file: !3, line: 80, column: 22)
!2527 = !DILocation(line: 80, column: 2, scope: !2507)
!2528 = !DILocation(line: 80, column: 8, scope: !2507)
!2529 = !DILocation(line: 80, column: 12, scope: !2507)
!2530 = !DILocation(line: 80, column: 20, scope: !2507)
!2531 = !DILocalVariable(name: "__size", scope: !2532, file: !3, line: 81, type: !2518)
!2532 = distinct !DILexicalBlock(scope: !2507, file: !3, line: 81, column: 22)
!2533 = !DILocation(line: 81, column: 22, scope: !2532)
!2534 = !DILocalVariable(name: "__mask", scope: !2532, file: !3, line: 81, type: !2521)
!2535 = !DILocalVariable(name: "__off", scope: !2532, file: !3, line: 81, type: !2518)
!2536 = !DILocalVariable(name: "__shft", scope: !2532, file: !3, line: 81, type: !2518)
!2537 = !DILocalVariable(name: "__res", scope: !2532, file: !3, line: 81, type: !400)
!2538 = !DILocation(line: 81, column: 22, scope: !2539)
!2539 = distinct !DILexicalBlock(scope: !2532, file: !3, line: 81, column: 22)
!2540 = !DILocation(line: 81, column: 22, scope: !2507)
!2541 = !DILocation(line: 81, column: 2, scope: !2507)
!2542 = !DILocation(line: 81, column: 8, scope: !2507)
!2543 = !DILocation(line: 81, column: 12, scope: !2507)
!2544 = !DILocation(line: 81, column: 20, scope: !2507)
!2545 = !DILocalVariable(name: "__size", scope: !2546, file: !3, line: 82, type: !2518)
!2546 = distinct !DILexicalBlock(scope: !2507, file: !3, line: 82, column: 28)
!2547 = !DILocation(line: 82, column: 28, scope: !2546)
!2548 = !DILocalVariable(name: "__mask", scope: !2546, file: !3, line: 82, type: !2521)
!2549 = !DILocalVariable(name: "__off", scope: !2546, file: !3, line: 82, type: !2518)
!2550 = !DILocalVariable(name: "__shft", scope: !2546, file: !3, line: 82, type: !2518)
!2551 = !DILocalVariable(name: "__res", scope: !2546, file: !3, line: 82, type: !400)
!2552 = !DILocation(line: 82, column: 28, scope: !2553)
!2553 = distinct !DILexicalBlock(scope: !2546, file: !3, line: 82, column: 28)
!2554 = !DILocation(line: 82, column: 28, scope: !2507)
!2555 = !DILocation(line: 82, column: 2, scope: !2507)
!2556 = !DILocation(line: 82, column: 8, scope: !2507)
!2557 = !DILocation(line: 82, column: 12, scope: !2507)
!2558 = !DILocation(line: 82, column: 26, scope: !2507)
!2559 = !DILocalVariable(name: "__size", scope: !2560, file: !3, line: 83, type: !2518)
!2560 = distinct !DILexicalBlock(scope: !2507, file: !3, line: 83, column: 28)
!2561 = !DILocation(line: 83, column: 28, scope: !2560)
!2562 = !DILocalVariable(name: "__mask", scope: !2560, file: !3, line: 83, type: !2521)
!2563 = !DILocalVariable(name: "__off", scope: !2560, file: !3, line: 83, type: !2518)
!2564 = !DILocalVariable(name: "__shft", scope: !2560, file: !3, line: 83, type: !2518)
!2565 = !DILocalVariable(name: "__res", scope: !2560, file: !3, line: 83, type: !400)
!2566 = !DILocation(line: 83, column: 28, scope: !2567)
!2567 = distinct !DILexicalBlock(scope: !2560, file: !3, line: 83, column: 28)
!2568 = !DILocation(line: 83, column: 28, scope: !2507)
!2569 = !DILocation(line: 83, column: 2, scope: !2507)
!2570 = !DILocation(line: 83, column: 8, scope: !2507)
!2571 = !DILocation(line: 83, column: 12, scope: !2507)
!2572 = !DILocation(line: 83, column: 26, scope: !2507)
!2573 = !DILocalVariable(name: "__size", scope: !2574, file: !3, line: 84, type: !2518)
!2574 = distinct !DILexicalBlock(scope: !2507, file: !3, line: 84, column: 28)
!2575 = !DILocation(line: 84, column: 28, scope: !2574)
!2576 = !DILocalVariable(name: "__mask", scope: !2574, file: !3, line: 84, type: !2521)
!2577 = !DILocalVariable(name: "__off", scope: !2574, file: !3, line: 84, type: !2518)
!2578 = !DILocalVariable(name: "__shft", scope: !2574, file: !3, line: 84, type: !2518)
!2579 = !DILocalVariable(name: "__res", scope: !2574, file: !3, line: 84, type: !400)
!2580 = !DILocation(line: 84, column: 28, scope: !2581)
!2581 = distinct !DILexicalBlock(scope: !2574, file: !3, line: 84, column: 28)
!2582 = !DILocation(line: 84, column: 28, scope: !2507)
!2583 = !DILocation(line: 84, column: 2, scope: !2507)
!2584 = !DILocation(line: 84, column: 8, scope: !2507)
!2585 = !DILocation(line: 84, column: 12, scope: !2507)
!2586 = !DILocation(line: 84, column: 26, scope: !2507)
!2587 = !DILocalVariable(name: "__size", scope: !2588, file: !3, line: 85, type: !2518)
!2588 = distinct !DILexicalBlock(scope: !2507, file: !3, line: 85, column: 28)
!2589 = !DILocation(line: 85, column: 28, scope: !2588)
!2590 = !DILocalVariable(name: "__mask", scope: !2588, file: !3, line: 85, type: !2521)
!2591 = !DILocalVariable(name: "__off", scope: !2588, file: !3, line: 85, type: !2518)
!2592 = !DILocalVariable(name: "__shft", scope: !2588, file: !3, line: 85, type: !2518)
!2593 = !DILocalVariable(name: "__res", scope: !2588, file: !3, line: 85, type: !400)
!2594 = !DILocation(line: 85, column: 28, scope: !2595)
!2595 = distinct !DILexicalBlock(scope: !2588, file: !3, line: 85, column: 28)
!2596 = !DILocation(line: 85, column: 28, scope: !2507)
!2597 = !DILocation(line: 85, column: 2, scope: !2507)
!2598 = !DILocation(line: 85, column: 8, scope: !2507)
!2599 = !DILocation(line: 85, column: 12, scope: !2507)
!2600 = !DILocation(line: 85, column: 26, scope: !2507)
!2601 = !DILocalVariable(name: "__size", scope: !2602, file: !3, line: 86, type: !2518)
!2602 = distinct !DILexicalBlock(scope: !2507, file: !3, line: 86, column: 28)
!2603 = !DILocation(line: 86, column: 28, scope: !2602)
!2604 = !DILocalVariable(name: "__mask", scope: !2602, file: !3, line: 86, type: !2521)
!2605 = !DILocalVariable(name: "__off", scope: !2602, file: !3, line: 86, type: !2518)
!2606 = !DILocalVariable(name: "__shft", scope: !2602, file: !3, line: 86, type: !2518)
!2607 = !DILocalVariable(name: "__res", scope: !2602, file: !3, line: 86, type: !400)
!2608 = !DILocation(line: 86, column: 28, scope: !2609)
!2609 = distinct !DILexicalBlock(scope: !2602, file: !3, line: 86, column: 28)
!2610 = !DILocation(line: 86, column: 28, scope: !2507)
!2611 = !DILocation(line: 86, column: 2, scope: !2507)
!2612 = !DILocation(line: 86, column: 8, scope: !2507)
!2613 = !DILocation(line: 86, column: 12, scope: !2507)
!2614 = !DILocation(line: 86, column: 26, scope: !2507)
!2615 = !DILocalVariable(name: "__size", scope: !2616, file: !3, line: 87, type: !2518)
!2616 = distinct !DILexicalBlock(scope: !2507, file: !3, line: 87, column: 22)
!2617 = !DILocation(line: 87, column: 22, scope: !2616)
!2618 = !DILocalVariable(name: "__mask", scope: !2616, file: !3, line: 87, type: !2521)
!2619 = !DILocalVariable(name: "__off", scope: !2616, file: !3, line: 87, type: !2518)
!2620 = !DILocalVariable(name: "__shft", scope: !2616, file: !3, line: 87, type: !2518)
!2621 = !DILocalVariable(name: "__res", scope: !2616, file: !3, line: 87, type: !400)
!2622 = !DILocation(line: 87, column: 22, scope: !2623)
!2623 = distinct !DILexicalBlock(scope: !2616, file: !3, line: 87, column: 22)
!2624 = !DILocation(line: 87, column: 22, scope: !2507)
!2625 = !DILocation(line: 87, column: 2, scope: !2507)
!2626 = !DILocation(line: 87, column: 8, scope: !2507)
!2627 = !DILocation(line: 87, column: 12, scope: !2507)
!2628 = !DILocation(line: 87, column: 20, scope: !2507)
!2629 = !DILocalVariable(name: "__size", scope: !2630, file: !3, line: 88, type: !2518)
!2630 = distinct !DILexicalBlock(scope: !2507, file: !3, line: 88, column: 22)
!2631 = !DILocation(line: 88, column: 22, scope: !2630)
!2632 = !DILocalVariable(name: "__mask", scope: !2630, file: !3, line: 88, type: !2521)
!2633 = !DILocalVariable(name: "__off", scope: !2630, file: !3, line: 88, type: !2518)
!2634 = !DILocalVariable(name: "__shft", scope: !2630, file: !3, line: 88, type: !2518)
!2635 = !DILocalVariable(name: "__res", scope: !2630, file: !3, line: 88, type: !400)
!2636 = !DILocation(line: 88, column: 22, scope: !2637)
!2637 = distinct !DILexicalBlock(scope: !2630, file: !3, line: 88, column: 22)
!2638 = !DILocation(line: 88, column: 22, scope: !2507)
!2639 = !DILocation(line: 88, column: 2, scope: !2507)
!2640 = !DILocation(line: 88, column: 8, scope: !2507)
!2641 = !DILocation(line: 88, column: 12, scope: !2507)
!2642 = !DILocation(line: 88, column: 20, scope: !2507)
!2643 = !DILocalVariable(name: "__size", scope: !2644, file: !3, line: 89, type: !2518)
!2644 = distinct !DILexicalBlock(scope: !2507, file: !3, line: 89, column: 22)
!2645 = !DILocation(line: 89, column: 22, scope: !2644)
!2646 = !DILocalVariable(name: "__mask", scope: !2644, file: !3, line: 89, type: !2521)
!2647 = !DILocalVariable(name: "__off", scope: !2644, file: !3, line: 89, type: !2518)
!2648 = !DILocalVariable(name: "__shft", scope: !2644, file: !3, line: 89, type: !2518)
!2649 = !DILocalVariable(name: "__res", scope: !2644, file: !3, line: 89, type: !400)
!2650 = !DILocation(line: 89, column: 22, scope: !2651)
!2651 = distinct !DILexicalBlock(scope: !2644, file: !3, line: 89, column: 22)
!2652 = !DILocation(line: 89, column: 2, scope: !2507)
!2653 = !DILocation(line: 89, column: 8, scope: !2507)
!2654 = !DILocation(line: 89, column: 12, scope: !2507)
!2655 = !DILocation(line: 89, column: 20, scope: !2507)
!2656 = !DILocalVariable(name: "__size", scope: !2657, file: !3, line: 90, type: !2518)
!2657 = distinct !DILexicalBlock(scope: !2507, file: !3, line: 90, column: 21)
!2658 = !DILocation(line: 90, column: 21, scope: !2657)
!2659 = !DILocalVariable(name: "__mask", scope: !2657, file: !3, line: 90, type: !2521)
!2660 = !DILocalVariable(name: "__off", scope: !2657, file: !3, line: 90, type: !2518)
!2661 = !DILocalVariable(name: "__shft", scope: !2657, file: !3, line: 90, type: !2518)
!2662 = !DILocalVariable(name: "__res", scope: !2657, file: !3, line: 90, type: !400)
!2663 = !DILocation(line: 90, column: 21, scope: !2664)
!2664 = distinct !DILexicalBlock(scope: !2657, file: !3, line: 90, column: 21)
!2665 = !DILocation(line: 90, column: 21, scope: !2507)
!2666 = !DILocation(line: 90, column: 2, scope: !2507)
!2667 = !DILocation(line: 90, column: 8, scope: !2507)
!2668 = !DILocation(line: 90, column: 12, scope: !2507)
!2669 = !DILocation(line: 90, column: 19, scope: !2507)
!2670 = !DILocalVariable(name: "__size", scope: !2671, file: !3, line: 91, type: !2518)
!2671 = distinct !DILexicalBlock(scope: !2507, file: !3, line: 91, column: 22)
!2672 = !DILocation(line: 91, column: 22, scope: !2671)
!2673 = !DILocalVariable(name: "__mask", scope: !2671, file: !3, line: 91, type: !2521)
!2674 = !DILocalVariable(name: "__off", scope: !2671, file: !3, line: 91, type: !2518)
!2675 = !DILocalVariable(name: "__shft", scope: !2671, file: !3, line: 91, type: !2518)
!2676 = !DILocalVariable(name: "__res", scope: !2671, file: !3, line: 91, type: !400)
!2677 = !DILocation(line: 91, column: 22, scope: !2678)
!2678 = distinct !DILexicalBlock(scope: !2671, file: !3, line: 91, column: 22)
!2679 = !DILocation(line: 91, column: 22, scope: !2507)
!2680 = !DILocation(line: 91, column: 2, scope: !2507)
!2681 = !DILocation(line: 91, column: 8, scope: !2507)
!2682 = !DILocation(line: 91, column: 12, scope: !2507)
!2683 = !DILocation(line: 91, column: 20, scope: !2507)
!2684 = !DILocation(line: 93, column: 2, scope: !2507)
!2685 = !DILocation(line: 93, column: 8, scope: !2507)
!2686 = !DILocation(line: 93, column: 12, scope: !2507)
!2687 = !DILocation(line: 93, column: 17, scope: !2507)
!2688 = !DILocation(line: 94, column: 1, scope: !2507)
!2689 = distinct !DISubprogram(name: "mmc_sd_switch_hs", scope: !3, file: !3, line: 358, type: !2690, scopeLine: 359, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !115)
!2690 = !DISubroutineType(types: !2691)
!2691 = !{!127, !66}
!2692 = !DILocalVariable(name: "s", arg: 1, scope: !2693, file: !51, line: 445, type: !1020)
!2693 = distinct !DISubprogram(name: "kmem_cache_alloc_trace", scope: !51, file: !51, line: 445, type: !2694, scopeLine: 447, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !115)
!2694 = !DISubroutineType(types: !2695)
!2695 = !{!65, !1020, !63, !190}
!2696 = !DILocation(line: 445, column: 72, scope: !2693, inlinedAt: !2697)
!2697 = distinct !DILocation(line: 552, column: 10, scope: !2698, inlinedAt: !2703)
!2698 = distinct !DILexicalBlock(scope: !2699, file: !51, line: 540, column: 34)
!2699 = distinct !DILexicalBlock(scope: !2700, file: !51, line: 540, column: 6)
!2700 = distinct !DISubprogram(name: "kmalloc", scope: !51, file: !51, line: 538, type: !2701, scopeLine: 539, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !115)
!2701 = !DISubroutineType(types: !2702)
!2702 = !{!65, !190, !63}
!2703 = distinct !DILocation(line: 375, column: 11, scope: !2689)
!2704 = !DILocalVariable(name: "flags", arg: 2, scope: !2693, file: !51, line: 446, type: !63)
!2705 = !DILocation(line: 446, column: 9, scope: !2693, inlinedAt: !2697)
!2706 = !DILocalVariable(name: "size", arg: 3, scope: !2693, file: !51, line: 446, type: !190)
!2707 = !DILocation(line: 446, column: 23, scope: !2693, inlinedAt: !2697)
!2708 = !DILocalVariable(name: "ret", scope: !2693, file: !51, line: 448, type: !65)
!2709 = !DILocation(line: 448, column: 8, scope: !2693, inlinedAt: !2697)
!2710 = !DILocalVariable(name: "flags", arg: 1, scope: !2711, file: !51, line: 318, type: !63)
!2711 = distinct !DISubprogram(name: "kmalloc_type", scope: !51, file: !51, line: 318, type: !2712, scopeLine: 319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !115)
!2712 = !DISubroutineType(types: !2713)
!2713 = !{!50, !63}
!2714 = !DILocation(line: 318, column: 67, scope: !2711, inlinedAt: !2715)
!2715 = distinct !DILocation(line: 553, column: 20, scope: !2698, inlinedAt: !2703)
!2716 = !DILocalVariable(name: "size", arg: 1, scope: !2717, file: !51, line: 346, type: !190)
!2717 = distinct !DISubprogram(name: "kmalloc_index", scope: !51, file: !51, line: 346, type: !2718, scopeLine: 347, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !115)
!2718 = !DISubroutineType(types: !2719)
!2719 = !{!7, !190}
!2720 = !DILocation(line: 346, column: 58, scope: !2717, inlinedAt: !2721)
!2721 = distinct !DILocation(line: 547, column: 11, scope: !2698, inlinedAt: !2703)
!2722 = !DILocalVariable(name: "size", arg: 1, scope: !2723, file: !51, line: 472, type: !190)
!2723 = distinct !DISubprogram(name: "kmalloc_order_trace", scope: !51, file: !51, line: 472, type: !2724, scopeLine: 473, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !115)
!2724 = !DISubroutineType(types: !2725)
!2725 = !{!65, !190, !63, !7}
!2726 = !DILocation(line: 472, column: 28, scope: !2723, inlinedAt: !2727)
!2727 = distinct !DILocation(line: 481, column: 9, scope: !2728, inlinedAt: !2729)
!2728 = distinct !DISubprogram(name: "kmalloc_large", scope: !51, file: !51, line: 478, type: !2701, scopeLine: 479, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !115)
!2729 = distinct !DILocation(line: 545, column: 11, scope: !2730, inlinedAt: !2703)
!2730 = distinct !DILexicalBlock(scope: !2698, file: !51, line: 544, column: 7)
!2731 = !DILocalVariable(name: "flags", arg: 2, scope: !2723, file: !51, line: 472, type: !63)
!2732 = !DILocation(line: 472, column: 40, scope: !2723, inlinedAt: !2727)
!2733 = !DILocalVariable(name: "order", arg: 3, scope: !2723, file: !51, line: 472, type: !7)
!2734 = !DILocation(line: 472, column: 60, scope: !2723, inlinedAt: !2727)
!2735 = !DILocalVariable(name: "size", arg: 1, scope: !2728, file: !51, line: 478, type: !190)
!2736 = !DILocation(line: 478, column: 51, scope: !2728, inlinedAt: !2729)
!2737 = !DILocalVariable(name: "flags", arg: 2, scope: !2728, file: !51, line: 478, type: !63)
!2738 = !DILocation(line: 478, column: 63, scope: !2728, inlinedAt: !2729)
!2739 = !DILocalVariable(name: "order", scope: !2728, file: !51, line: 480, type: !7)
!2740 = !DILocation(line: 480, column: 15, scope: !2728, inlinedAt: !2729)
!2741 = !DILocalVariable(name: "size", arg: 1, scope: !2700, file: !51, line: 538, type: !190)
!2742 = !DILocation(line: 538, column: 45, scope: !2700, inlinedAt: !2703)
!2743 = !DILocalVariable(name: "flags", arg: 2, scope: !2700, file: !51, line: 538, type: !63)
!2744 = !DILocation(line: 538, column: 57, scope: !2700, inlinedAt: !2703)
!2745 = !DILocalVariable(name: "index", scope: !2698, file: !51, line: 542, type: !7)
!2746 = !DILocation(line: 542, column: 16, scope: !2698, inlinedAt: !2703)
!2747 = !DILocalVariable(name: "card", arg: 1, scope: !2689, file: !3, line: 358, type: !66)
!2748 = !DILocation(line: 358, column: 39, scope: !2689)
!2749 = !DILocalVariable(name: "err", scope: !2689, file: !3, line: 360, type: !127)
!2750 = !DILocation(line: 360, column: 6, scope: !2689)
!2751 = !DILocalVariable(name: "status", scope: !2689, file: !3, line: 361, type: !2752)
!2752 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !537, size: 64)
!2753 = !DILocation(line: 361, column: 6, scope: !2689)
!2754 = !DILocation(line: 363, column: 6, scope: !2755)
!2755 = distinct !DILexicalBlock(scope: !2689, file: !3, line: 363, column: 6)
!2756 = !DILocation(line: 363, column: 12, scope: !2755)
!2757 = !DILocation(line: 363, column: 16, scope: !2755)
!2758 = !DILocation(line: 363, column: 24, scope: !2755)
!2759 = !DILocation(line: 363, column: 6, scope: !2689)
!2760 = !DILocation(line: 364, column: 3, scope: !2755)
!2761 = !DILocation(line: 366, column: 8, scope: !2762)
!2762 = distinct !DILexicalBlock(scope: !2689, file: !3, line: 366, column: 6)
!2763 = !DILocation(line: 366, column: 14, scope: !2762)
!2764 = !DILocation(line: 366, column: 18, scope: !2762)
!2765 = !DILocation(line: 366, column: 27, scope: !2762)
!2766 = !DILocation(line: 366, column: 6, scope: !2689)
!2767 = !DILocation(line: 367, column: 3, scope: !2762)
!2768 = !DILocation(line: 369, column: 8, scope: !2769)
!2769 = distinct !DILexicalBlock(scope: !2689, file: !3, line: 369, column: 6)
!2770 = !DILocation(line: 369, column: 14, scope: !2769)
!2771 = !DILocation(line: 369, column: 20, scope: !2769)
!2772 = !DILocation(line: 369, column: 25, scope: !2769)
!2773 = !DILocation(line: 369, column: 6, scope: !2689)
!2774 = !DILocation(line: 370, column: 3, scope: !2769)
!2775 = !DILocation(line: 372, column: 6, scope: !2776)
!2776 = distinct !DILexicalBlock(scope: !2689, file: !3, line: 372, column: 6)
!2777 = !DILocation(line: 372, column: 12, scope: !2776)
!2778 = !DILocation(line: 372, column: 20, scope: !2776)
!2779 = !DILocation(line: 372, column: 31, scope: !2776)
!2780 = !DILocation(line: 372, column: 6, scope: !2689)
!2781 = !DILocation(line: 373, column: 3, scope: !2776)
!2782 = !DILocation(line: 540, column: 27, scope: !2699, inlinedAt: !2703)
!2783 = !DILocation(line: 540, column: 6, scope: !2699, inlinedAt: !2703)
!2784 = !DILocation(line: 540, column: 6, scope: !2700, inlinedAt: !2703)
!2785 = !DILocation(line: 544, column: 7, scope: !2730, inlinedAt: !2703)
!2786 = !DILocation(line: 544, column: 12, scope: !2730, inlinedAt: !2703)
!2787 = !DILocation(line: 544, column: 7, scope: !2698, inlinedAt: !2703)
!2788 = !DILocation(line: 545, column: 25, scope: !2730, inlinedAt: !2703)
!2789 = !DILocation(line: 545, column: 31, scope: !2730, inlinedAt: !2703)
!2790 = !DILocation(line: 480, column: 33, scope: !2728, inlinedAt: !2729)
!2791 = !DILocation(line: 480, column: 23, scope: !2728, inlinedAt: !2729)
!2792 = !DILocation(line: 481, column: 29, scope: !2728, inlinedAt: !2729)
!2793 = !DILocation(line: 481, column: 35, scope: !2728, inlinedAt: !2729)
!2794 = !DILocation(line: 481, column: 42, scope: !2728, inlinedAt: !2729)
!2795 = !DILocation(line: 474, column: 23, scope: !2723, inlinedAt: !2727)
!2796 = !DILocation(line: 474, column: 29, scope: !2723, inlinedAt: !2727)
!2797 = !DILocation(line: 474, column: 36, scope: !2723, inlinedAt: !2727)
!2798 = !DILocation(line: 474, column: 9, scope: !2723, inlinedAt: !2727)
!2799 = !DILocation(line: 545, column: 4, scope: !2730, inlinedAt: !2703)
!2800 = !DILocation(line: 547, column: 25, scope: !2698, inlinedAt: !2703)
!2801 = !DILocation(line: 348, column: 7, scope: !2802, inlinedAt: !2721)
!2802 = distinct !DILexicalBlock(scope: !2717, file: !51, line: 348, column: 6)
!2803 = !DILocation(line: 348, column: 6, scope: !2717, inlinedAt: !2721)
!2804 = !DILocation(line: 349, column: 3, scope: !2802, inlinedAt: !2721)
!2805 = !DILocation(line: 351, column: 6, scope: !2806, inlinedAt: !2721)
!2806 = distinct !DILexicalBlock(scope: !2717, file: !51, line: 351, column: 6)
!2807 = !DILocation(line: 351, column: 11, scope: !2806, inlinedAt: !2721)
!2808 = !DILocation(line: 351, column: 6, scope: !2717, inlinedAt: !2721)
!2809 = !DILocation(line: 352, column: 3, scope: !2806, inlinedAt: !2721)
!2810 = !DILocation(line: 354, column: 32, scope: !2811, inlinedAt: !2721)
!2811 = distinct !DILexicalBlock(scope: !2717, file: !51, line: 354, column: 6)
!2812 = !DILocation(line: 354, column: 37, scope: !2811, inlinedAt: !2721)
!2813 = !DILocation(line: 354, column: 42, scope: !2811, inlinedAt: !2721)
!2814 = !DILocation(line: 354, column: 45, scope: !2811, inlinedAt: !2721)
!2815 = !DILocation(line: 354, column: 50, scope: !2811, inlinedAt: !2721)
!2816 = !DILocation(line: 354, column: 6, scope: !2717, inlinedAt: !2721)
!2817 = !DILocation(line: 355, column: 3, scope: !2811, inlinedAt: !2721)
!2818 = !DILocation(line: 356, column: 32, scope: !2819, inlinedAt: !2721)
!2819 = distinct !DILexicalBlock(scope: !2717, file: !51, line: 356, column: 6)
!2820 = !DILocation(line: 356, column: 37, scope: !2819, inlinedAt: !2721)
!2821 = !DILocation(line: 356, column: 43, scope: !2819, inlinedAt: !2721)
!2822 = !DILocation(line: 356, column: 46, scope: !2819, inlinedAt: !2721)
!2823 = !DILocation(line: 356, column: 51, scope: !2819, inlinedAt: !2721)
!2824 = !DILocation(line: 356, column: 6, scope: !2717, inlinedAt: !2721)
!2825 = !DILocation(line: 357, column: 3, scope: !2819, inlinedAt: !2721)
!2826 = !DILocation(line: 358, column: 6, scope: !2827, inlinedAt: !2721)
!2827 = distinct !DILexicalBlock(scope: !2717, file: !51, line: 358, column: 6)
!2828 = !DILocation(line: 358, column: 11, scope: !2827, inlinedAt: !2721)
!2829 = !DILocation(line: 358, column: 6, scope: !2717, inlinedAt: !2721)
!2830 = !DILocation(line: 358, column: 26, scope: !2827, inlinedAt: !2721)
!2831 = !DILocation(line: 359, column: 6, scope: !2832, inlinedAt: !2721)
!2832 = distinct !DILexicalBlock(scope: !2717, file: !51, line: 359, column: 6)
!2833 = !DILocation(line: 359, column: 11, scope: !2832, inlinedAt: !2721)
!2834 = !DILocation(line: 359, column: 6, scope: !2717, inlinedAt: !2721)
!2835 = !DILocation(line: 359, column: 26, scope: !2832, inlinedAt: !2721)
!2836 = !DILocation(line: 360, column: 6, scope: !2837, inlinedAt: !2721)
!2837 = distinct !DILexicalBlock(scope: !2717, file: !51, line: 360, column: 6)
!2838 = !DILocation(line: 360, column: 11, scope: !2837, inlinedAt: !2721)
!2839 = !DILocation(line: 360, column: 6, scope: !2717, inlinedAt: !2721)
!2840 = !DILocation(line: 360, column: 26, scope: !2837, inlinedAt: !2721)
!2841 = !DILocation(line: 361, column: 6, scope: !2842, inlinedAt: !2721)
!2842 = distinct !DILexicalBlock(scope: !2717, file: !51, line: 361, column: 6)
!2843 = !DILocation(line: 361, column: 11, scope: !2842, inlinedAt: !2721)
!2844 = !DILocation(line: 361, column: 6, scope: !2717, inlinedAt: !2721)
!2845 = !DILocation(line: 361, column: 26, scope: !2842, inlinedAt: !2721)
!2846 = !DILocation(line: 362, column: 6, scope: !2847, inlinedAt: !2721)
!2847 = distinct !DILexicalBlock(scope: !2717, file: !51, line: 362, column: 6)
!2848 = !DILocation(line: 362, column: 11, scope: !2847, inlinedAt: !2721)
!2849 = !DILocation(line: 362, column: 6, scope: !2717, inlinedAt: !2721)
!2850 = !DILocation(line: 362, column: 26, scope: !2847, inlinedAt: !2721)
!2851 = !DILocation(line: 363, column: 6, scope: !2852, inlinedAt: !2721)
!2852 = distinct !DILexicalBlock(scope: !2717, file: !51, line: 363, column: 6)
!2853 = !DILocation(line: 363, column: 11, scope: !2852, inlinedAt: !2721)
!2854 = !DILocation(line: 363, column: 6, scope: !2717, inlinedAt: !2721)
!2855 = !DILocation(line: 363, column: 26, scope: !2852, inlinedAt: !2721)
!2856 = !DILocation(line: 364, column: 6, scope: !2857, inlinedAt: !2721)
!2857 = distinct !DILexicalBlock(scope: !2717, file: !51, line: 364, column: 6)
!2858 = !DILocation(line: 364, column: 11, scope: !2857, inlinedAt: !2721)
!2859 = !DILocation(line: 364, column: 6, scope: !2717, inlinedAt: !2721)
!2860 = !DILocation(line: 364, column: 26, scope: !2857, inlinedAt: !2721)
!2861 = !DILocation(line: 365, column: 6, scope: !2862, inlinedAt: !2721)
!2862 = distinct !DILexicalBlock(scope: !2717, file: !51, line: 365, column: 6)
!2863 = !DILocation(line: 365, column: 11, scope: !2862, inlinedAt: !2721)
!2864 = !DILocation(line: 365, column: 6, scope: !2717, inlinedAt: !2721)
!2865 = !DILocation(line: 365, column: 26, scope: !2862, inlinedAt: !2721)
!2866 = !DILocation(line: 366, column: 6, scope: !2867, inlinedAt: !2721)
!2867 = distinct !DILexicalBlock(scope: !2717, file: !51, line: 366, column: 6)
!2868 = !DILocation(line: 366, column: 11, scope: !2867, inlinedAt: !2721)
!2869 = !DILocation(line: 366, column: 6, scope: !2717, inlinedAt: !2721)
!2870 = !DILocation(line: 366, column: 26, scope: !2867, inlinedAt: !2721)
!2871 = !DILocation(line: 367, column: 6, scope: !2872, inlinedAt: !2721)
!2872 = distinct !DILexicalBlock(scope: !2717, file: !51, line: 367, column: 6)
!2873 = !DILocation(line: 367, column: 11, scope: !2872, inlinedAt: !2721)
!2874 = !DILocation(line: 367, column: 6, scope: !2717, inlinedAt: !2721)
!2875 = !DILocation(line: 367, column: 26, scope: !2872, inlinedAt: !2721)
!2876 = !DILocation(line: 368, column: 6, scope: !2877, inlinedAt: !2721)
!2877 = distinct !DILexicalBlock(scope: !2717, file: !51, line: 368, column: 6)
!2878 = !DILocation(line: 368, column: 11, scope: !2877, inlinedAt: !2721)
!2879 = !DILocation(line: 368, column: 6, scope: !2717, inlinedAt: !2721)
!2880 = !DILocation(line: 368, column: 26, scope: !2877, inlinedAt: !2721)
!2881 = !DILocation(line: 369, column: 6, scope: !2882, inlinedAt: !2721)
!2882 = distinct !DILexicalBlock(scope: !2717, file: !51, line: 369, column: 6)
!2883 = !DILocation(line: 369, column: 11, scope: !2882, inlinedAt: !2721)
!2884 = !DILocation(line: 369, column: 6, scope: !2717, inlinedAt: !2721)
!2885 = !DILocation(line: 369, column: 26, scope: !2882, inlinedAt: !2721)
!2886 = !DILocation(line: 370, column: 6, scope: !2887, inlinedAt: !2721)
!2887 = distinct !DILexicalBlock(scope: !2717, file: !51, line: 370, column: 6)
!2888 = !DILocation(line: 370, column: 11, scope: !2887, inlinedAt: !2721)
!2889 = !DILocation(line: 370, column: 6, scope: !2717, inlinedAt: !2721)
!2890 = !DILocation(line: 370, column: 26, scope: !2887, inlinedAt: !2721)
!2891 = !DILocation(line: 371, column: 6, scope: !2892, inlinedAt: !2721)
!2892 = distinct !DILexicalBlock(scope: !2717, file: !51, line: 371, column: 6)
!2893 = !DILocation(line: 371, column: 11, scope: !2892, inlinedAt: !2721)
!2894 = !DILocation(line: 371, column: 6, scope: !2717, inlinedAt: !2721)
!2895 = !DILocation(line: 371, column: 26, scope: !2892, inlinedAt: !2721)
!2896 = !DILocation(line: 372, column: 6, scope: !2897, inlinedAt: !2721)
!2897 = distinct !DILexicalBlock(scope: !2717, file: !51, line: 372, column: 6)
!2898 = !DILocation(line: 372, column: 11, scope: !2897, inlinedAt: !2721)
!2899 = !DILocation(line: 372, column: 6, scope: !2717, inlinedAt: !2721)
!2900 = !DILocation(line: 372, column: 26, scope: !2897, inlinedAt: !2721)
!2901 = !DILocation(line: 373, column: 6, scope: !2902, inlinedAt: !2721)
!2902 = distinct !DILexicalBlock(scope: !2717, file: !51, line: 373, column: 6)
!2903 = !DILocation(line: 373, column: 11, scope: !2902, inlinedAt: !2721)
!2904 = !DILocation(line: 373, column: 6, scope: !2717, inlinedAt: !2721)
!2905 = !DILocation(line: 373, column: 26, scope: !2902, inlinedAt: !2721)
!2906 = !DILocation(line: 374, column: 6, scope: !2907, inlinedAt: !2721)
!2907 = distinct !DILexicalBlock(scope: !2717, file: !51, line: 374, column: 6)
!2908 = !DILocation(line: 374, column: 11, scope: !2907, inlinedAt: !2721)
!2909 = !DILocation(line: 374, column: 6, scope: !2717, inlinedAt: !2721)
!2910 = !DILocation(line: 374, column: 26, scope: !2907, inlinedAt: !2721)
!2911 = !DILocation(line: 375, column: 6, scope: !2912, inlinedAt: !2721)
!2912 = distinct !DILexicalBlock(scope: !2717, file: !51, line: 375, column: 6)
!2913 = !DILocation(line: 375, column: 11, scope: !2912, inlinedAt: !2721)
!2914 = !DILocation(line: 375, column: 6, scope: !2717, inlinedAt: !2721)
!2915 = !DILocation(line: 375, column: 27, scope: !2912, inlinedAt: !2721)
!2916 = !DILocation(line: 376, column: 6, scope: !2917, inlinedAt: !2721)
!2917 = distinct !DILexicalBlock(scope: !2717, file: !51, line: 376, column: 6)
!2918 = !DILocation(line: 376, column: 11, scope: !2917, inlinedAt: !2721)
!2919 = !DILocation(line: 376, column: 6, scope: !2717, inlinedAt: !2721)
!2920 = !DILocation(line: 376, column: 32, scope: !2917, inlinedAt: !2721)
!2921 = !DILocation(line: 377, column: 6, scope: !2922, inlinedAt: !2721)
!2922 = distinct !DILexicalBlock(scope: !2717, file: !51, line: 377, column: 6)
!2923 = !DILocation(line: 377, column: 11, scope: !2922, inlinedAt: !2721)
!2924 = !DILocation(line: 377, column: 6, scope: !2717, inlinedAt: !2721)
!2925 = !DILocation(line: 377, column: 32, scope: !2922, inlinedAt: !2721)
!2926 = !DILocation(line: 378, column: 6, scope: !2927, inlinedAt: !2721)
!2927 = distinct !DILexicalBlock(scope: !2717, file: !51, line: 378, column: 6)
!2928 = !DILocation(line: 378, column: 11, scope: !2927, inlinedAt: !2721)
!2929 = !DILocation(line: 378, column: 6, scope: !2717, inlinedAt: !2721)
!2930 = !DILocation(line: 378, column: 32, scope: !2927, inlinedAt: !2721)
!2931 = !DILocation(line: 379, column: 6, scope: !2932, inlinedAt: !2721)
!2932 = distinct !DILexicalBlock(scope: !2717, file: !51, line: 379, column: 6)
!2933 = !DILocation(line: 379, column: 11, scope: !2932, inlinedAt: !2721)
!2934 = !DILocation(line: 379, column: 6, scope: !2717, inlinedAt: !2721)
!2935 = !DILocation(line: 379, column: 33, scope: !2932, inlinedAt: !2721)
!2936 = !DILocation(line: 380, column: 6, scope: !2937, inlinedAt: !2721)
!2937 = distinct !DILexicalBlock(scope: !2717, file: !51, line: 380, column: 6)
!2938 = !DILocation(line: 380, column: 11, scope: !2937, inlinedAt: !2721)
!2939 = !DILocation(line: 380, column: 6, scope: !2717, inlinedAt: !2721)
!2940 = !DILocation(line: 380, column: 33, scope: !2937, inlinedAt: !2721)
!2941 = !DILocation(line: 381, column: 6, scope: !2942, inlinedAt: !2721)
!2942 = distinct !DILexicalBlock(scope: !2717, file: !51, line: 381, column: 6)
!2943 = !DILocation(line: 381, column: 11, scope: !2942, inlinedAt: !2721)
!2944 = !DILocation(line: 381, column: 6, scope: !2717, inlinedAt: !2721)
!2945 = !DILocation(line: 381, column: 33, scope: !2942, inlinedAt: !2721)
!2946 = !DILocation(line: 382, column: 2, scope: !2947, inlinedAt: !2721)
!2947 = distinct !DILexicalBlock(scope: !2948, file: !51, line: 382, column: 2)
!2948 = distinct !DILexicalBlock(scope: !2717, file: !51, line: 382, column: 2)
!2949 = !{i32 -2144620611, i32 -2144620582, i32 -2144620536, i32 -2144620478, i32 -2144620424, i32 -2144620370, i32 -2144620315, i32 -2144620284}
!2950 = !DILocation(line: 382, column: 2, scope: !2951, inlinedAt: !2721)
!2951 = distinct !DILexicalBlock(scope: !2952, file: !51, line: 382, column: 2)
!2952 = distinct !DILexicalBlock(scope: !2948, file: !51, line: 382, column: 2)
!2953 = !{i32 -2144619841, i32 -2144619834, i32 -2144619780, i32 -2144619749, i32 -2144619719}
!2954 = !DILocation(line: 382, column: 2, scope: !2952, inlinedAt: !2721)
!2955 = !DILocation(line: 386, column: 1, scope: !2717, inlinedAt: !2721)
!2956 = !DILocation(line: 547, column: 9, scope: !2698, inlinedAt: !2703)
!2957 = !DILocation(line: 549, column: 8, scope: !2958, inlinedAt: !2703)
!2958 = distinct !DILexicalBlock(scope: !2698, file: !51, line: 549, column: 7)
!2959 = !DILocation(line: 549, column: 7, scope: !2698, inlinedAt: !2703)
!2960 = !DILocation(line: 550, column: 4, scope: !2958, inlinedAt: !2703)
!2961 = !DILocation(line: 553, column: 33, scope: !2698, inlinedAt: !2703)
!2962 = !DILocation(line: 325, column: 6, scope: !2963, inlinedAt: !2715)
!2963 = distinct !DILexicalBlock(scope: !2711, file: !51, line: 325, column: 6)
!2964 = !DILocation(line: 325, column: 6, scope: !2711, inlinedAt: !2715)
!2965 = !DILocation(line: 326, column: 3, scope: !2963, inlinedAt: !2715)
!2966 = !DILocation(line: 332, column: 9, scope: !2711, inlinedAt: !2715)
!2967 = !DILocation(line: 332, column: 15, scope: !2711, inlinedAt: !2715)
!2968 = !DILocation(line: 332, column: 2, scope: !2711, inlinedAt: !2715)
!2969 = !DILocation(line: 336, column: 1, scope: !2711, inlinedAt: !2715)
!2970 = !DILocation(line: 553, column: 5, scope: !2698, inlinedAt: !2703)
!2971 = !DILocation(line: 553, column: 41, scope: !2698, inlinedAt: !2703)
!2972 = !DILocation(line: 554, column: 5, scope: !2698, inlinedAt: !2703)
!2973 = !DILocation(line: 554, column: 12, scope: !2698, inlinedAt: !2703)
!2974 = !DILocation(line: 448, column: 31, scope: !2693, inlinedAt: !2697)
!2975 = !DILocation(line: 448, column: 34, scope: !2693, inlinedAt: !2697)
!2976 = !DILocation(line: 448, column: 14, scope: !2693, inlinedAt: !2697)
!2977 = !DILocation(line: 450, column: 22, scope: !2693, inlinedAt: !2697)
!2978 = !DILocation(line: 450, column: 25, scope: !2693, inlinedAt: !2697)
!2979 = !DILocation(line: 450, column: 30, scope: !2693, inlinedAt: !2697)
!2980 = !DILocation(line: 450, column: 36, scope: !2693, inlinedAt: !2697)
!2981 = !DILocation(line: 450, column: 8, scope: !2693, inlinedAt: !2697)
!2982 = !DILocation(line: 450, column: 6, scope: !2693, inlinedAt: !2697)
!2983 = !DILocation(line: 451, column: 9, scope: !2693, inlinedAt: !2697)
!2984 = !DILocation(line: 552, column: 3, scope: !2698, inlinedAt: !2703)
!2985 = !DILocation(line: 557, column: 19, scope: !2700, inlinedAt: !2703)
!2986 = !DILocation(line: 557, column: 25, scope: !2700, inlinedAt: !2703)
!2987 = !DILocation(line: 557, column: 9, scope: !2700, inlinedAt: !2703)
!2988 = !DILocation(line: 557, column: 2, scope: !2700, inlinedAt: !2703)
!2989 = !DILocation(line: 558, column: 1, scope: !2700, inlinedAt: !2703)
!2990 = !DILocation(line: 375, column: 9, scope: !2689)
!2991 = !DILocation(line: 376, column: 7, scope: !2992)
!2992 = distinct !DILexicalBlock(scope: !2689, file: !3, line: 376, column: 6)
!2993 = !DILocation(line: 376, column: 6, scope: !2689)
!2994 = !DILocation(line: 377, column: 3, scope: !2992)
!2995 = !DILocation(line: 379, column: 22, scope: !2689)
!2996 = !DILocation(line: 379, column: 56, scope: !2689)
!2997 = !DILocation(line: 379, column: 8, scope: !2689)
!2998 = !DILocation(line: 379, column: 6, scope: !2689)
!2999 = !DILocation(line: 380, column: 6, scope: !3000)
!3000 = distinct !DILexicalBlock(scope: !2689, file: !3, line: 380, column: 6)
!3001 = !DILocation(line: 380, column: 6, scope: !2689)
!3002 = !DILocation(line: 381, column: 3, scope: !3000)
!3003 = !DILocation(line: 383, column: 7, scope: !3004)
!3004 = distinct !DILexicalBlock(scope: !2689, file: !3, line: 383, column: 6)
!3005 = !DILocation(line: 383, column: 18, scope: !3004)
!3006 = !DILocation(line: 383, column: 25, scope: !3004)
!3007 = !DILocation(line: 383, column: 6, scope: !2689)
!3008 = !DILocation(line: 384, column: 3, scope: !3009)
!3009 = distinct !DILexicalBlock(scope: !3004, file: !3, line: 383, column: 50)
!3010 = !DILocation(line: 386, column: 7, scope: !3009)
!3011 = !DILocation(line: 387, column: 2, scope: !3009)
!3012 = !DILocation(line: 388, column: 7, scope: !3013)
!3013 = distinct !DILexicalBlock(scope: !3004, file: !3, line: 387, column: 9)
!3014 = !DILocation(line: 383, column: 28, scope: !3004)
!3015 = !DILabel(scope: !2689, name: "out", file: !3, line: 391)
!3016 = !DILocation(line: 391, column: 1, scope: !2689)
!3017 = !DILocation(line: 392, column: 8, scope: !2689)
!3018 = !DILocation(line: 392, column: 2, scope: !2689)
!3019 = !DILocation(line: 394, column: 9, scope: !2689)
!3020 = !DILocation(line: 394, column: 2, scope: !2689)
!3021 = !DILocation(line: 395, column: 1, scope: !2689)
!3022 = distinct !DISubprogram(name: "dev_name", scope: !30, file: !30, line: 609, type: !3023, scopeLine: 610, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !115)
!3023 = !DISubroutineType(types: !3024)
!3024 = !{!84, !3025}
!3025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3026, size: 64)
!3026 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !77)
!3027 = !DILocalVariable(name: "dev", arg: 1, scope: !3022, file: !30, line: 609, type: !3025)
!3028 = !DILocation(line: 609, column: 57, scope: !3022)
!3029 = !DILocation(line: 612, column: 6, scope: !3030)
!3030 = distinct !DILexicalBlock(scope: !3022, file: !30, line: 612, column: 6)
!3031 = !DILocation(line: 612, column: 11, scope: !3030)
!3032 = !DILocation(line: 612, column: 6, scope: !3022)
!3033 = !DILocation(line: 613, column: 10, scope: !3030)
!3034 = !DILocation(line: 613, column: 15, scope: !3030)
!3035 = !DILocation(line: 613, column: 3, scope: !3030)
!3036 = !DILocation(line: 615, column: 23, scope: !3022)
!3037 = !DILocation(line: 615, column: 28, scope: !3022)
!3038 = !DILocation(line: 615, column: 9, scope: !3022)
!3039 = !DILocation(line: 615, column: 2, scope: !3022)
!3040 = !DILocation(line: 616, column: 1, scope: !3022)
!3041 = distinct !DISubprogram(name: "mmc_sd_get_cid", scope: !3, file: !3, line: 792, type: !3042, scopeLine: 793, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !115)
!3042 = !DISubroutineType(types: !3043)
!3043 = !{!127, !71, !400, !601, !601}
!3044 = !DILocalVariable(name: "host", arg: 1, scope: !3041, file: !3, line: 792, type: !71)
!3045 = !DILocation(line: 792, column: 37, scope: !3041)
!3046 = !DILocalVariable(name: "ocr", arg: 2, scope: !3041, file: !3, line: 792, type: !400)
!3047 = !DILocation(line: 792, column: 47, scope: !3041)
!3048 = !DILocalVariable(name: "cid", arg: 3, scope: !3041, file: !3, line: 792, type: !601)
!3049 = !DILocation(line: 792, column: 57, scope: !3041)
!3050 = !DILocalVariable(name: "rocr", arg: 4, scope: !3041, file: !3, line: 792, type: !601)
!3051 = !DILocation(line: 792, column: 67, scope: !3041)
!3052 = !DILocalVariable(name: "err", scope: !3041, file: !3, line: 794, type: !127)
!3053 = !DILocation(line: 794, column: 6, scope: !3041)
!3054 = !DILocalVariable(name: "max_current", scope: !3041, file: !3, line: 795, type: !400)
!3055 = !DILocation(line: 795, column: 6, scope: !3041)
!3056 = !DILocalVariable(name: "retries", scope: !3041, file: !3, line: 796, type: !127)
!3057 = !DILocation(line: 796, column: 6, scope: !3041)
!3058 = !DILocalVariable(name: "pocr", scope: !3041, file: !3, line: 797, type: !400)
!3059 = !DILocation(line: 797, column: 6, scope: !3041)
!3060 = !DILocation(line: 797, column: 13, scope: !3041)
!3061 = !DILocation(line: 797, column: 2, scope: !3041)
!3062 = !DILabel(scope: !3041, name: "try_again", file: !3, line: 799)
!3063 = !DILocation(line: 799, column: 1, scope: !3041)
!3064 = !DILocation(line: 800, column: 7, scope: !3065)
!3065 = distinct !DILexicalBlock(scope: !3041, file: !3, line: 800, column: 6)
!3066 = !DILocation(line: 800, column: 6, scope: !3041)
!3067 = !DILocation(line: 801, column: 7, scope: !3068)
!3068 = distinct !DILexicalBlock(scope: !3065, file: !3, line: 800, column: 16)
!3069 = !DILocation(line: 802, column: 3, scope: !3068)
!3070 = !DILocation(line: 803, column: 2, scope: !3068)
!3071 = !DILocation(line: 811, column: 14, scope: !3041)
!3072 = !DILocation(line: 811, column: 2, scope: !3041)
!3073 = !DILocation(line: 819, column: 25, scope: !3041)
!3074 = !DILocation(line: 819, column: 31, scope: !3041)
!3075 = !DILocation(line: 819, column: 8, scope: !3041)
!3076 = !DILocation(line: 819, column: 6, scope: !3041)
!3077 = !DILocation(line: 820, column: 7, scope: !3078)
!3078 = distinct !DILexicalBlock(scope: !3041, file: !3, line: 820, column: 6)
!3079 = !DILocation(line: 820, column: 6, scope: !3041)
!3080 = !DILocation(line: 821, column: 7, scope: !3078)
!3081 = !DILocation(line: 821, column: 3, scope: !3078)
!3082 = !DILocation(line: 828, column: 6, scope: !3083)
!3083 = distinct !DILexicalBlock(scope: !3041, file: !3, line: 828, column: 6)
!3084 = !DILocation(line: 828, column: 14, scope: !3083)
!3085 = !DILocation(line: 828, column: 30, scope: !3083)
!3086 = !DILocation(line: 828, column: 17, scope: !3083)
!3087 = !DILocation(line: 828, column: 6, scope: !3041)
!3088 = !DILocation(line: 829, column: 7, scope: !3083)
!3089 = !DILocation(line: 829, column: 3, scope: !3083)
!3090 = !DILocation(line: 835, column: 40, scope: !3041)
!3091 = !DILocation(line: 835, column: 16, scope: !3041)
!3092 = !DILocation(line: 835, column: 14, scope: !3041)
!3093 = !DILocation(line: 836, column: 6, scope: !3094)
!3094 = distinct !DILexicalBlock(scope: !3041, file: !3, line: 836, column: 6)
!3095 = !DILocation(line: 836, column: 18, scope: !3094)
!3096 = !DILocation(line: 836, column: 6, scope: !3041)
!3097 = !DILocation(line: 837, column: 7, scope: !3094)
!3098 = !DILocation(line: 837, column: 3, scope: !3094)
!3099 = !DILocation(line: 839, column: 29, scope: !3041)
!3100 = !DILocation(line: 839, column: 35, scope: !3041)
!3101 = !DILocation(line: 839, column: 40, scope: !3041)
!3102 = !DILocation(line: 839, column: 8, scope: !3041)
!3103 = !DILocation(line: 839, column: 6, scope: !3041)
!3104 = !DILocation(line: 840, column: 6, scope: !3105)
!3105 = distinct !DILexicalBlock(scope: !3041, file: !3, line: 840, column: 6)
!3106 = !DILocation(line: 840, column: 6, scope: !3041)
!3107 = !DILocation(line: 841, column: 10, scope: !3105)
!3108 = !DILocation(line: 841, column: 3, scope: !3105)
!3109 = !DILocation(line: 847, column: 7, scope: !3110)
!3110 = distinct !DILexicalBlock(scope: !3041, file: !3, line: 847, column: 6)
!3111 = !DILocation(line: 847, column: 29, scope: !3110)
!3112 = !DILocation(line: 847, column: 32, scope: !3110)
!3113 = !DILocation(line: 847, column: 37, scope: !3110)
!3114 = !DILocation(line: 848, column: 8, scope: !3110)
!3115 = !DILocation(line: 848, column: 7, scope: !3110)
!3116 = !DILocation(line: 848, column: 13, scope: !3110)
!3117 = !DILocation(line: 848, column: 27, scope: !3110)
!3118 = !DILocation(line: 847, column: 6, scope: !3041)
!3119 = !DILocation(line: 849, column: 29, scope: !3120)
!3120 = distinct !DILexicalBlock(scope: !3110, file: !3, line: 848, column: 43)
!3121 = !DILocation(line: 849, column: 35, scope: !3120)
!3122 = !DILocation(line: 849, column: 9, scope: !3120)
!3123 = !DILocation(line: 849, column: 7, scope: !3120)
!3124 = !DILocation(line: 850, column: 7, scope: !3125)
!3125 = distinct !DILexicalBlock(scope: !3120, file: !3, line: 850, column: 7)
!3126 = !DILocation(line: 850, column: 11, scope: !3125)
!3127 = !DILocation(line: 850, column: 7, scope: !3120)
!3128 = !DILocation(line: 851, column: 11, scope: !3129)
!3129 = distinct !DILexicalBlock(scope: !3125, file: !3, line: 850, column: 23)
!3130 = !DILocation(line: 852, column: 4, scope: !3129)
!3131 = !DILocation(line: 853, column: 14, scope: !3132)
!3132 = distinct !DILexicalBlock(scope: !3125, file: !3, line: 853, column: 14)
!3133 = !DILocation(line: 853, column: 14, scope: !3125)
!3134 = !DILocation(line: 854, column: 12, scope: !3135)
!3135 = distinct !DILexicalBlock(scope: !3132, file: !3, line: 853, column: 19)
!3136 = !DILocation(line: 855, column: 4, scope: !3135)
!3137 = !DILocation(line: 857, column: 2, scope: !3120)
!3138 = !DILocation(line: 859, column: 21, scope: !3041)
!3139 = !DILocation(line: 859, column: 27, scope: !3041)
!3140 = !DILocation(line: 859, column: 8, scope: !3041)
!3141 = !DILocation(line: 859, column: 6, scope: !3041)
!3142 = !DILocation(line: 860, column: 9, scope: !3041)
!3143 = !DILocation(line: 860, column: 2, scope: !3041)
!3144 = !DILocation(line: 861, column: 1, scope: !3041)
!3145 = distinct !DISubprogram(name: "mmc_host_uhs", scope: !3146, file: !3146, line: 51, type: !2015, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !115)
!3146 = !DIFile(filename: "drivers/mmc/core/host.h", directory: "/home/lizy2001/genbc/linux")
!3147 = !DILocalVariable(name: "host", arg: 1, scope: !3145, file: !3146, line: 51, type: !71)
!3148 = !DILocation(line: 51, column: 49, scope: !3145)
!3149 = !DILocation(line: 53, column: 9, scope: !3145)
!3150 = !DILocation(line: 53, column: 15, scope: !3145)
!3151 = !DILocation(line: 53, column: 20, scope: !3145)
!3152 = !DILocation(line: 56, column: 23, scope: !3145)
!3153 = !DILocation(line: 57, column: 9, scope: !3145)
!3154 = !DILocation(line: 57, column: 15, scope: !3145)
!3155 = !DILocation(line: 57, column: 20, scope: !3145)
!3156 = !DILocation(line: 0, scope: !3145)
!3157 = !DILocation(line: 53, column: 2, scope: !3145)
!3158 = distinct !DISubprogram(name: "sd_get_host_max_current", scope: !3, file: !3, line: 507, type: !3159, scopeLine: 508, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !115)
!3159 = !DISubroutineType(types: !3160)
!3160 = !{!400, !71}
!3161 = !DILocalVariable(name: "host", arg: 1, scope: !3158, file: !3, line: 507, type: !71)
!3162 = !DILocation(line: 507, column: 53, scope: !3158)
!3163 = !DILocalVariable(name: "voltage", scope: !3158, file: !3, line: 509, type: !400)
!3164 = !DILocation(line: 509, column: 6, scope: !3158)
!3165 = !DILocalVariable(name: "max_current", scope: !3158, file: !3, line: 509, type: !400)
!3166 = !DILocation(line: 509, column: 15, scope: !3158)
!3167 = !DILocation(line: 511, column: 17, scope: !3158)
!3168 = !DILocation(line: 511, column: 23, scope: !3158)
!3169 = !DILocation(line: 511, column: 27, scope: !3158)
!3170 = !DILocation(line: 511, column: 14, scope: !3158)
!3171 = !DILocation(line: 511, column: 10, scope: !3158)
!3172 = !DILocation(line: 512, column: 10, scope: !3158)
!3173 = !DILocation(line: 512, column: 2, scope: !3158)
!3174 = !DILocation(line: 514, column: 17, scope: !3175)
!3175 = distinct !DILexicalBlock(scope: !3158, file: !3, line: 512, column: 19)
!3176 = !DILocation(line: 514, column: 23, scope: !3175)
!3177 = !DILocation(line: 514, column: 15, scope: !3175)
!3178 = !DILocation(line: 515, column: 3, scope: !3175)
!3179 = !DILocation(line: 518, column: 17, scope: !3175)
!3180 = !DILocation(line: 518, column: 23, scope: !3175)
!3181 = !DILocation(line: 518, column: 15, scope: !3175)
!3182 = !DILocation(line: 519, column: 3, scope: !3175)
!3183 = !DILocation(line: 522, column: 17, scope: !3175)
!3184 = !DILocation(line: 522, column: 23, scope: !3175)
!3185 = !DILocation(line: 522, column: 15, scope: !3175)
!3186 = !DILocation(line: 523, column: 3, scope: !3175)
!3187 = !DILocation(line: 525, column: 15, scope: !3175)
!3188 = !DILocation(line: 526, column: 2, scope: !3175)
!3189 = !DILocation(line: 528, column: 9, scope: !3158)
!3190 = !DILocation(line: 528, column: 2, scope: !3158)
!3191 = distinct !DISubprogram(name: "mmc_sd_get_csd", scope: !3, file: !3, line: 863, type: !2187, scopeLine: 864, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !115)
!3192 = !DILocalVariable(name: "host", arg: 1, scope: !3191, file: !3, line: 863, type: !71)
!3193 = !DILocation(line: 863, column: 37, scope: !3191)
!3194 = !DILocalVariable(name: "card", arg: 2, scope: !3191, file: !3, line: 863, type: !66)
!3195 = !DILocation(line: 863, column: 60, scope: !3191)
!3196 = !DILocalVariable(name: "err", scope: !3191, file: !3, line: 865, type: !127)
!3197 = !DILocation(line: 865, column: 6, scope: !3191)
!3198 = !DILocation(line: 870, column: 21, scope: !3191)
!3199 = !DILocation(line: 870, column: 27, scope: !3191)
!3200 = !DILocation(line: 870, column: 33, scope: !3191)
!3201 = !DILocation(line: 870, column: 8, scope: !3191)
!3202 = !DILocation(line: 870, column: 6, scope: !3191)
!3203 = !DILocation(line: 871, column: 6, scope: !3204)
!3204 = distinct !DILexicalBlock(scope: !3191, file: !3, line: 871, column: 6)
!3205 = !DILocation(line: 871, column: 6, scope: !3191)
!3206 = !DILocation(line: 872, column: 10, scope: !3204)
!3207 = !DILocation(line: 872, column: 3, scope: !3204)
!3208 = !DILocation(line: 874, column: 23, scope: !3191)
!3209 = !DILocation(line: 874, column: 8, scope: !3191)
!3210 = !DILocation(line: 874, column: 6, scope: !3191)
!3211 = !DILocation(line: 875, column: 6, scope: !3212)
!3212 = distinct !DILexicalBlock(scope: !3191, file: !3, line: 875, column: 6)
!3213 = !DILocation(line: 875, column: 6, scope: !3191)
!3214 = !DILocation(line: 876, column: 10, scope: !3212)
!3215 = !DILocation(line: 876, column: 3, scope: !3212)
!3216 = !DILocation(line: 878, column: 2, scope: !3191)
!3217 = !DILocation(line: 879, column: 1, scope: !3191)
!3218 = distinct !DISubprogram(name: "mmc_decode_csd", scope: !3, file: !3, line: 99, type: !2690, scopeLine: 100, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !115)
!3219 = !DILocalVariable(name: "card", arg: 1, scope: !3218, file: !3, line: 99, type: !66)
!3220 = !DILocation(line: 99, column: 44, scope: !3218)
!3221 = !DILocalVariable(name: "csd", scope: !3218, file: !3, line: 101, type: !3222)
!3222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2240, size: 64)
!3223 = !DILocation(line: 101, column: 18, scope: !3218)
!3224 = !DILocation(line: 101, column: 25, scope: !3218)
!3225 = !DILocation(line: 101, column: 31, scope: !3218)
!3226 = !DILocalVariable(name: "e", scope: !3218, file: !3, line: 102, type: !7)
!3227 = !DILocation(line: 102, column: 15, scope: !3218)
!3228 = !DILocalVariable(name: "m", scope: !3218, file: !3, line: 102, type: !7)
!3229 = !DILocation(line: 102, column: 18, scope: !3218)
!3230 = !DILocalVariable(name: "csd_struct", scope: !3218, file: !3, line: 102, type: !7)
!3231 = !DILocation(line: 102, column: 21, scope: !3218)
!3232 = !DILocalVariable(name: "resp", scope: !3218, file: !3, line: 103, type: !601)
!3233 = !DILocation(line: 103, column: 7, scope: !3218)
!3234 = !DILocation(line: 103, column: 14, scope: !3218)
!3235 = !DILocation(line: 103, column: 20, scope: !3218)
!3236 = !DILocalVariable(name: "__size", scope: !3237, file: !3, line: 105, type: !2518)
!3237 = distinct !DILexicalBlock(scope: !3218, file: !3, line: 105, column: 15)
!3238 = !DILocation(line: 105, column: 15, scope: !3237)
!3239 = !DILocalVariable(name: "__mask", scope: !3237, file: !3, line: 105, type: !2521)
!3240 = !DILocalVariable(name: "__off", scope: !3237, file: !3, line: 105, type: !2518)
!3241 = !DILocalVariable(name: "__shft", scope: !3237, file: !3, line: 105, type: !2518)
!3242 = !DILocalVariable(name: "__res", scope: !3237, file: !3, line: 105, type: !400)
!3243 = !DILocation(line: 105, column: 15, scope: !3244)
!3244 = distinct !DILexicalBlock(scope: !3237, file: !3, line: 105, column: 15)
!3245 = !DILocation(line: 105, column: 13, scope: !3218)
!3246 = !DILocation(line: 107, column: 10, scope: !3218)
!3247 = !DILocation(line: 107, column: 2, scope: !3218)
!3248 = !DILocalVariable(name: "__size", scope: !3249, file: !3, line: 109, type: !2518)
!3249 = distinct !DILexicalBlock(scope: !3250, file: !3, line: 109, column: 7)
!3250 = distinct !DILexicalBlock(scope: !3218, file: !3, line: 107, column: 22)
!3251 = !DILocation(line: 109, column: 7, scope: !3249)
!3252 = !DILocalVariable(name: "__mask", scope: !3249, file: !3, line: 109, type: !2521)
!3253 = !DILocalVariable(name: "__off", scope: !3249, file: !3, line: 109, type: !2518)
!3254 = !DILocalVariable(name: "__shft", scope: !3249, file: !3, line: 109, type: !2518)
!3255 = !DILocalVariable(name: "__res", scope: !3249, file: !3, line: 109, type: !400)
!3256 = !DILocation(line: 109, column: 7, scope: !3257)
!3257 = distinct !DILexicalBlock(scope: !3249, file: !3, line: 109, column: 7)
!3258 = !DILocation(line: 109, column: 5, scope: !3250)
!3259 = !DILocalVariable(name: "__size", scope: !3260, file: !3, line: 110, type: !2518)
!3260 = distinct !DILexicalBlock(scope: !3250, file: !3, line: 110, column: 7)
!3261 = !DILocation(line: 110, column: 7, scope: !3260)
!3262 = !DILocalVariable(name: "__mask", scope: !3260, file: !3, line: 110, type: !2521)
!3263 = !DILocalVariable(name: "__off", scope: !3260, file: !3, line: 110, type: !2518)
!3264 = !DILocalVariable(name: "__shft", scope: !3260, file: !3, line: 110, type: !2518)
!3265 = !DILocalVariable(name: "__res", scope: !3260, file: !3, line: 110, type: !400)
!3266 = !DILocation(line: 110, column: 7, scope: !3267)
!3267 = distinct !DILexicalBlock(scope: !3260, file: !3, line: 110, column: 7)
!3268 = !DILocation(line: 110, column: 5, scope: !3250)
!3269 = !DILocation(line: 111, column: 29, scope: !3250)
!3270 = !DILocation(line: 111, column: 20, scope: !3250)
!3271 = !DILocation(line: 111, column: 44, scope: !3250)
!3272 = !DILocation(line: 111, column: 34, scope: !3250)
!3273 = !DILocation(line: 111, column: 32, scope: !3250)
!3274 = !DILocation(line: 111, column: 47, scope: !3250)
!3275 = !DILocation(line: 111, column: 52, scope: !3250)
!3276 = !DILocation(line: 111, column: 3, scope: !3250)
!3277 = !DILocation(line: 111, column: 8, scope: !3250)
!3278 = !DILocation(line: 111, column: 17, scope: !3250)
!3279 = !DILocalVariable(name: "__size", scope: !3280, file: !3, line: 112, type: !2518)
!3280 = distinct !DILexicalBlock(scope: !3250, file: !3, line: 112, column: 21)
!3281 = !DILocation(line: 112, column: 21, scope: !3280)
!3282 = !DILocalVariable(name: "__mask", scope: !3280, file: !3, line: 112, type: !2521)
!3283 = !DILocalVariable(name: "__off", scope: !3280, file: !3, line: 112, type: !2518)
!3284 = !DILocalVariable(name: "__shft", scope: !3280, file: !3, line: 112, type: !2518)
!3285 = !DILocalVariable(name: "__res", scope: !3280, file: !3, line: 112, type: !400)
!3286 = !DILocation(line: 112, column: 21, scope: !3287)
!3287 = distinct !DILexicalBlock(scope: !3280, file: !3, line: 112, column: 21)
!3288 = !DILocation(line: 112, column: 48, scope: !3250)
!3289 = !DILocation(line: 112, column: 21, scope: !3250)
!3290 = !DILocation(line: 112, column: 3, scope: !3250)
!3291 = !DILocation(line: 112, column: 8, scope: !3250)
!3292 = !DILocation(line: 112, column: 19, scope: !3250)
!3293 = !DILocalVariable(name: "__size", scope: !3294, file: !3, line: 114, type: !2518)
!3294 = distinct !DILexicalBlock(scope: !3250, file: !3, line: 114, column: 7)
!3295 = !DILocation(line: 114, column: 7, scope: !3294)
!3296 = !DILocalVariable(name: "__mask", scope: !3294, file: !3, line: 114, type: !2521)
!3297 = !DILocalVariable(name: "__off", scope: !3294, file: !3, line: 114, type: !2518)
!3298 = !DILocalVariable(name: "__shft", scope: !3294, file: !3, line: 114, type: !2518)
!3299 = !DILocalVariable(name: "__res", scope: !3294, file: !3, line: 114, type: !400)
!3300 = !DILocation(line: 114, column: 7, scope: !3301)
!3301 = distinct !DILexicalBlock(scope: !3294, file: !3, line: 114, column: 7)
!3302 = !DILocation(line: 114, column: 5, scope: !3250)
!3303 = !DILocalVariable(name: "__size", scope: !3304, file: !3, line: 115, type: !2518)
!3304 = distinct !DILexicalBlock(scope: !3250, file: !3, line: 115, column: 7)
!3305 = !DILocation(line: 115, column: 7, scope: !3304)
!3306 = !DILocalVariable(name: "__mask", scope: !3304, file: !3, line: 115, type: !2521)
!3307 = !DILocalVariable(name: "__off", scope: !3304, file: !3, line: 115, type: !2518)
!3308 = !DILocalVariable(name: "__shft", scope: !3304, file: !3, line: 115, type: !2518)
!3309 = !DILocalVariable(name: "__res", scope: !3304, file: !3, line: 115, type: !400)
!3310 = !DILocation(line: 115, column: 7, scope: !3311)
!3311 = distinct !DILexicalBlock(scope: !3304, file: !3, line: 115, column: 7)
!3312 = !DILocation(line: 115, column: 5, scope: !3250)
!3313 = !DILocation(line: 116, column: 29, scope: !3250)
!3314 = !DILocation(line: 116, column: 20, scope: !3250)
!3315 = !DILocation(line: 116, column: 44, scope: !3250)
!3316 = !DILocation(line: 116, column: 34, scope: !3250)
!3317 = !DILocation(line: 116, column: 32, scope: !3250)
!3318 = !DILocation(line: 116, column: 3, scope: !3250)
!3319 = !DILocation(line: 116, column: 8, scope: !3250)
!3320 = !DILocation(line: 116, column: 18, scope: !3250)
!3321 = !DILocalVariable(name: "__size", scope: !3322, file: !3, line: 117, type: !2518)
!3322 = distinct !DILexicalBlock(scope: !3250, file: !3, line: 117, column: 21)
!3323 = !DILocation(line: 117, column: 21, scope: !3322)
!3324 = !DILocalVariable(name: "__mask", scope: !3322, file: !3, line: 117, type: !2521)
!3325 = !DILocalVariable(name: "__off", scope: !3322, file: !3, line: 117, type: !2518)
!3326 = !DILocalVariable(name: "__shft", scope: !3322, file: !3, line: 117, type: !2518)
!3327 = !DILocalVariable(name: "__res", scope: !3322, file: !3, line: 117, type: !400)
!3328 = !DILocation(line: 117, column: 21, scope: !3329)
!3329 = distinct !DILexicalBlock(scope: !3322, file: !3, line: 117, column: 21)
!3330 = !DILocation(line: 117, column: 21, scope: !3250)
!3331 = !DILocation(line: 117, column: 3, scope: !3250)
!3332 = !DILocation(line: 117, column: 8, scope: !3250)
!3333 = !DILocation(line: 117, column: 19, scope: !3250)
!3334 = !DILocalVariable(name: "__size", scope: !3335, file: !3, line: 119, type: !2518)
!3335 = distinct !DILexicalBlock(scope: !3250, file: !3, line: 119, column: 7)
!3336 = !DILocation(line: 119, column: 7, scope: !3335)
!3337 = !DILocalVariable(name: "__mask", scope: !3335, file: !3, line: 119, type: !2521)
!3338 = !DILocalVariable(name: "__off", scope: !3335, file: !3, line: 119, type: !2518)
!3339 = !DILocalVariable(name: "__shft", scope: !3335, file: !3, line: 119, type: !2518)
!3340 = !DILocalVariable(name: "__res", scope: !3335, file: !3, line: 119, type: !400)
!3341 = !DILocation(line: 119, column: 7, scope: !3342)
!3342 = distinct !DILexicalBlock(scope: !3335, file: !3, line: 119, column: 7)
!3343 = !DILocation(line: 119, column: 5, scope: !3250)
!3344 = !DILocalVariable(name: "__size", scope: !3345, file: !3, line: 120, type: !2518)
!3345 = distinct !DILexicalBlock(scope: !3250, file: !3, line: 120, column: 7)
!3346 = !DILocation(line: 120, column: 7, scope: !3345)
!3347 = !DILocalVariable(name: "__mask", scope: !3345, file: !3, line: 120, type: !2521)
!3348 = !DILocalVariable(name: "__off", scope: !3345, file: !3, line: 120, type: !2518)
!3349 = !DILocalVariable(name: "__shft", scope: !3345, file: !3, line: 120, type: !2518)
!3350 = !DILocalVariable(name: "__res", scope: !3345, file: !3, line: 120, type: !400)
!3351 = !DILocation(line: 120, column: 7, scope: !3352)
!3352 = distinct !DILexicalBlock(scope: !3345, file: !3, line: 120, column: 7)
!3353 = !DILocation(line: 120, column: 5, scope: !3250)
!3354 = !DILocation(line: 121, column: 26, scope: !3250)
!3355 = !DILocation(line: 121, column: 24, scope: !3250)
!3356 = !DILocation(line: 121, column: 33, scope: !3250)
!3357 = !DILocation(line: 121, column: 35, scope: !3250)
!3358 = !DILocation(line: 121, column: 29, scope: !3250)
!3359 = !DILocation(line: 121, column: 3, scope: !3250)
!3360 = !DILocation(line: 121, column: 8, scope: !3250)
!3361 = !DILocation(line: 121, column: 19, scope: !3250)
!3362 = !DILocalVariable(name: "__size", scope: !3363, file: !3, line: 123, type: !2518)
!3363 = distinct !DILexicalBlock(scope: !3250, file: !3, line: 123, column: 23)
!3364 = !DILocation(line: 123, column: 23, scope: !3363)
!3365 = !DILocalVariable(name: "__mask", scope: !3363, file: !3, line: 123, type: !2521)
!3366 = !DILocalVariable(name: "__off", scope: !3363, file: !3, line: 123, type: !2518)
!3367 = !DILocalVariable(name: "__shft", scope: !3363, file: !3, line: 123, type: !2518)
!3368 = !DILocalVariable(name: "__res", scope: !3363, file: !3, line: 123, type: !400)
!3369 = !DILocation(line: 123, column: 23, scope: !3370)
!3370 = distinct !DILexicalBlock(scope: !3363, file: !3, line: 123, column: 23)
!3371 = !DILocation(line: 123, column: 3, scope: !3250)
!3372 = !DILocation(line: 123, column: 8, scope: !3250)
!3373 = !DILocation(line: 123, column: 21, scope: !3250)
!3374 = !DILocalVariable(name: "__size", scope: !3375, file: !3, line: 124, type: !2518)
!3375 = distinct !DILexicalBlock(scope: !3250, file: !3, line: 124, column: 23)
!3376 = !DILocation(line: 124, column: 23, scope: !3375)
!3377 = !DILocalVariable(name: "__mask", scope: !3375, file: !3, line: 124, type: !2521)
!3378 = !DILocalVariable(name: "__off", scope: !3375, file: !3, line: 124, type: !2518)
!3379 = !DILocalVariable(name: "__shft", scope: !3375, file: !3, line: 124, type: !2518)
!3380 = !DILocalVariable(name: "__res", scope: !3375, file: !3, line: 124, type: !400)
!3381 = !DILocation(line: 124, column: 23, scope: !3382)
!3382 = distinct !DILexicalBlock(scope: !3375, file: !3, line: 124, column: 23)
!3383 = !DILocation(line: 124, column: 3, scope: !3250)
!3384 = !DILocation(line: 124, column: 8, scope: !3250)
!3385 = !DILocation(line: 124, column: 21, scope: !3250)
!3386 = !DILocalVariable(name: "__size", scope: !3387, file: !3, line: 125, type: !2518)
!3387 = distinct !DILexicalBlock(scope: !3250, file: !3, line: 125, column: 25)
!3388 = !DILocation(line: 125, column: 25, scope: !3387)
!3389 = !DILocalVariable(name: "__mask", scope: !3387, file: !3, line: 125, type: !2521)
!3390 = !DILocalVariable(name: "__off", scope: !3387, file: !3, line: 125, type: !2518)
!3391 = !DILocalVariable(name: "__shft", scope: !3387, file: !3, line: 125, type: !2518)
!3392 = !DILocalVariable(name: "__res", scope: !3387, file: !3, line: 125, type: !400)
!3393 = !DILocation(line: 125, column: 25, scope: !3394)
!3394 = distinct !DILexicalBlock(scope: !3387, file: !3, line: 125, column: 25)
!3395 = !DILocation(line: 125, column: 3, scope: !3250)
!3396 = !DILocation(line: 125, column: 8, scope: !3250)
!3397 = !DILocation(line: 125, column: 23, scope: !3250)
!3398 = !DILocalVariable(name: "__size", scope: !3399, file: !3, line: 126, type: !2518)
!3399 = distinct !DILexicalBlock(scope: !3250, file: !3, line: 126, column: 24)
!3400 = !DILocation(line: 126, column: 24, scope: !3399)
!3401 = !DILocalVariable(name: "__mask", scope: !3399, file: !3, line: 126, type: !2521)
!3402 = !DILocalVariable(name: "__off", scope: !3399, file: !3, line: 126, type: !2518)
!3403 = !DILocalVariable(name: "__shft", scope: !3399, file: !3, line: 126, type: !2518)
!3404 = !DILocalVariable(name: "__res", scope: !3399, file: !3, line: 126, type: !400)
!3405 = !DILocation(line: 126, column: 24, scope: !3406)
!3406 = distinct !DILexicalBlock(scope: !3399, file: !3, line: 126, column: 24)
!3407 = !DILocation(line: 126, column: 3, scope: !3250)
!3408 = !DILocation(line: 126, column: 8, scope: !3250)
!3409 = !DILocation(line: 126, column: 22, scope: !3250)
!3410 = !DILocalVariable(name: "__size", scope: !3411, file: !3, line: 127, type: !2518)
!3411 = distinct !DILexicalBlock(scope: !3250, file: !3, line: 127, column: 18)
!3412 = !DILocation(line: 127, column: 18, scope: !3411)
!3413 = !DILocalVariable(name: "__mask", scope: !3411, file: !3, line: 127, type: !2521)
!3414 = !DILocalVariable(name: "__off", scope: !3411, file: !3, line: 127, type: !2518)
!3415 = !DILocalVariable(name: "__shft", scope: !3411, file: !3, line: 127, type: !2518)
!3416 = !DILocalVariable(name: "__res", scope: !3411, file: !3, line: 127, type: !400)
!3417 = !DILocation(line: 127, column: 18, scope: !3418)
!3418 = distinct !DILexicalBlock(scope: !3411, file: !3, line: 127, column: 18)
!3419 = !DILocation(line: 127, column: 3, scope: !3250)
!3420 = !DILocation(line: 127, column: 8, scope: !3250)
!3421 = !DILocation(line: 127, column: 16, scope: !3250)
!3422 = !DILocalVariable(name: "__size", scope: !3423, file: !3, line: 128, type: !2518)
!3423 = distinct !DILexicalBlock(scope: !3250, file: !3, line: 128, column: 21)
!3424 = !DILocation(line: 128, column: 21, scope: !3423)
!3425 = !DILocalVariable(name: "__mask", scope: !3423, file: !3, line: 128, type: !2521)
!3426 = !DILocalVariable(name: "__off", scope: !3423, file: !3, line: 128, type: !2518)
!3427 = !DILocalVariable(name: "__shft", scope: !3423, file: !3, line: 128, type: !2518)
!3428 = !DILocalVariable(name: "__res", scope: !3423, file: !3, line: 128, type: !400)
!3429 = !DILocation(line: 128, column: 21, scope: !3430)
!3430 = distinct !DILexicalBlock(scope: !3423, file: !3, line: 128, column: 21)
!3431 = !DILocation(line: 128, column: 3, scope: !3250)
!3432 = !DILocation(line: 128, column: 8, scope: !3250)
!3433 = !DILocation(line: 128, column: 19, scope: !3250)
!3434 = !DILocalVariable(name: "__size", scope: !3435, file: !3, line: 129, type: !2518)
!3435 = distinct !DILexicalBlock(scope: !3250, file: !3, line: 129, column: 24)
!3436 = !DILocation(line: 129, column: 24, scope: !3435)
!3437 = !DILocalVariable(name: "__mask", scope: !3435, file: !3, line: 129, type: !2521)
!3438 = !DILocalVariable(name: "__off", scope: !3435, file: !3, line: 129, type: !2518)
!3439 = !DILocalVariable(name: "__shft", scope: !3435, file: !3, line: 129, type: !2518)
!3440 = !DILocalVariable(name: "__res", scope: !3435, file: !3, line: 129, type: !400)
!3441 = !DILocation(line: 129, column: 24, scope: !3442)
!3442 = distinct !DILexicalBlock(scope: !3435, file: !3, line: 129, column: 24)
!3443 = !DILocation(line: 129, column: 3, scope: !3250)
!3444 = !DILocation(line: 129, column: 8, scope: !3250)
!3445 = !DILocation(line: 129, column: 22, scope: !3250)
!3446 = !DILocalVariable(name: "__size", scope: !3447, file: !3, line: 130, type: !2518)
!3447 = distinct !DILexicalBlock(scope: !3250, file: !3, line: 130, column: 24)
!3448 = !DILocation(line: 130, column: 24, scope: !3447)
!3449 = !DILocalVariable(name: "__mask", scope: !3447, file: !3, line: 130, type: !2521)
!3450 = !DILocalVariable(name: "__off", scope: !3447, file: !3, line: 130, type: !2518)
!3451 = !DILocalVariable(name: "__shft", scope: !3447, file: !3, line: 130, type: !2518)
!3452 = !DILocalVariable(name: "__res", scope: !3447, file: !3, line: 130, type: !400)
!3453 = !DILocation(line: 130, column: 24, scope: !3454)
!3454 = distinct !DILexicalBlock(scope: !3447, file: !3, line: 130, column: 24)
!3455 = !DILocation(line: 130, column: 3, scope: !3250)
!3456 = !DILocation(line: 130, column: 8, scope: !3250)
!3457 = !DILocation(line: 130, column: 22, scope: !3250)
!3458 = !DILocalVariable(name: "__size", scope: !3459, file: !3, line: 132, type: !2518)
!3459 = distinct !DILexicalBlock(scope: !3460, file: !3, line: 132, column: 7)
!3460 = distinct !DILexicalBlock(scope: !3250, file: !3, line: 132, column: 7)
!3461 = !DILocation(line: 132, column: 7, scope: !3459)
!3462 = !DILocalVariable(name: "__mask", scope: !3459, file: !3, line: 132, type: !2521)
!3463 = !DILocalVariable(name: "__off", scope: !3459, file: !3, line: 132, type: !2518)
!3464 = !DILocalVariable(name: "__shft", scope: !3459, file: !3, line: 132, type: !2518)
!3465 = !DILocalVariable(name: "__res", scope: !3459, file: !3, line: 132, type: !400)
!3466 = !DILocation(line: 132, column: 7, scope: !3467)
!3467 = distinct !DILexicalBlock(scope: !3459, file: !3, line: 132, column: 7)
!3468 = !DILocation(line: 132, column: 7, scope: !3460)
!3469 = !DILocation(line: 132, column: 7, scope: !3250)
!3470 = !DILocation(line: 133, column: 4, scope: !3471)
!3471 = distinct !DILexicalBlock(scope: !3460, file: !3, line: 132, column: 34)
!3472 = !DILocation(line: 133, column: 9, scope: !3471)
!3473 = !DILocation(line: 133, column: 20, scope: !3471)
!3474 = !DILocation(line: 134, column: 3, scope: !3471)
!3475 = !DILocation(line: 134, column: 14, scope: !3476)
!3476 = distinct !DILexicalBlock(scope: !3460, file: !3, line: 134, column: 14)
!3477 = !DILocation(line: 134, column: 19, scope: !3476)
!3478 = !DILocation(line: 134, column: 33, scope: !3476)
!3479 = !DILocation(line: 134, column: 14, scope: !3460)
!3480 = !DILocalVariable(name: "__size", scope: !3481, file: !3, line: 135, type: !2518)
!3481 = distinct !DILexicalBlock(scope: !3482, file: !3, line: 135, column: 22)
!3482 = distinct !DILexicalBlock(scope: !3476, file: !3, line: 134, column: 39)
!3483 = !DILocation(line: 135, column: 22, scope: !3481)
!3484 = !DILocalVariable(name: "__mask", scope: !3481, file: !3, line: 135, type: !2521)
!3485 = !DILocalVariable(name: "__off", scope: !3481, file: !3, line: 135, type: !2518)
!3486 = !DILocalVariable(name: "__shft", scope: !3481, file: !3, line: 135, type: !2518)
!3487 = !DILocalVariable(name: "__res", scope: !3481, file: !3, line: 135, type: !400)
!3488 = !DILocation(line: 135, column: 22, scope: !3489)
!3489 = distinct !DILexicalBlock(scope: !3481, file: !3, line: 135, column: 22)
!3490 = !DILocation(line: 135, column: 48, scope: !3482)
!3491 = !DILocation(line: 135, column: 4, scope: !3482)
!3492 = !DILocation(line: 135, column: 9, scope: !3482)
!3493 = !DILocation(line: 135, column: 20, scope: !3482)
!3494 = !DILocation(line: 136, column: 24, scope: !3482)
!3495 = !DILocation(line: 136, column: 29, scope: !3482)
!3496 = !DILocation(line: 136, column: 43, scope: !3482)
!3497 = !DILocation(line: 136, column: 4, scope: !3482)
!3498 = !DILocation(line: 136, column: 9, scope: !3482)
!3499 = !DILocation(line: 136, column: 20, scope: !3482)
!3500 = !DILocation(line: 137, column: 3, scope: !3482)
!3501 = !DILocation(line: 138, column: 3, scope: !3250)
!3502 = !DILocation(line: 146, column: 3, scope: !3250)
!3503 = !DILocation(line: 148, column: 3, scope: !3250)
!3504 = !DILocation(line: 148, column: 8, scope: !3250)
!3505 = !DILocation(line: 148, column: 17, scope: !3250)
!3506 = !DILocation(line: 149, column: 3, scope: !3250)
!3507 = !DILocation(line: 149, column: 8, scope: !3250)
!3508 = !DILocation(line: 149, column: 19, scope: !3250)
!3509 = !DILocalVariable(name: "__size", scope: !3510, file: !3, line: 151, type: !2518)
!3510 = distinct !DILexicalBlock(scope: !3250, file: !3, line: 151, column: 7)
!3511 = !DILocation(line: 151, column: 7, scope: !3510)
!3512 = !DILocalVariable(name: "__mask", scope: !3510, file: !3, line: 151, type: !2521)
!3513 = !DILocalVariable(name: "__off", scope: !3510, file: !3, line: 151, type: !2518)
!3514 = !DILocalVariable(name: "__shft", scope: !3510, file: !3, line: 151, type: !2518)
!3515 = !DILocalVariable(name: "__res", scope: !3510, file: !3, line: 151, type: !400)
!3516 = !DILocation(line: 151, column: 7, scope: !3517)
!3517 = distinct !DILexicalBlock(scope: !3510, file: !3, line: 151, column: 7)
!3518 = !DILocation(line: 151, column: 5, scope: !3250)
!3519 = !DILocalVariable(name: "__size", scope: !3520, file: !3, line: 152, type: !2518)
!3520 = distinct !DILexicalBlock(scope: !3250, file: !3, line: 152, column: 7)
!3521 = !DILocation(line: 152, column: 7, scope: !3520)
!3522 = !DILocalVariable(name: "__mask", scope: !3520, file: !3, line: 152, type: !2521)
!3523 = !DILocalVariable(name: "__off", scope: !3520, file: !3, line: 152, type: !2518)
!3524 = !DILocalVariable(name: "__shft", scope: !3520, file: !3, line: 152, type: !2518)
!3525 = !DILocalVariable(name: "__res", scope: !3520, file: !3, line: 152, type: !400)
!3526 = !DILocation(line: 152, column: 7, scope: !3527)
!3527 = distinct !DILexicalBlock(scope: !3520, file: !3, line: 152, column: 7)
!3528 = !DILocation(line: 152, column: 5, scope: !3250)
!3529 = !DILocation(line: 153, column: 29, scope: !3250)
!3530 = !DILocation(line: 153, column: 20, scope: !3250)
!3531 = !DILocation(line: 153, column: 44, scope: !3250)
!3532 = !DILocation(line: 153, column: 34, scope: !3250)
!3533 = !DILocation(line: 153, column: 32, scope: !3250)
!3534 = !DILocation(line: 153, column: 3, scope: !3250)
!3535 = !DILocation(line: 153, column: 8, scope: !3250)
!3536 = !DILocation(line: 153, column: 18, scope: !3250)
!3537 = !DILocalVariable(name: "__size", scope: !3538, file: !3, line: 154, type: !2518)
!3538 = distinct !DILexicalBlock(scope: !3250, file: !3, line: 154, column: 21)
!3539 = !DILocation(line: 154, column: 21, scope: !3538)
!3540 = !DILocalVariable(name: "__mask", scope: !3538, file: !3, line: 154, type: !2521)
!3541 = !DILocalVariable(name: "__off", scope: !3538, file: !3, line: 154, type: !2518)
!3542 = !DILocalVariable(name: "__shft", scope: !3538, file: !3, line: 154, type: !2518)
!3543 = !DILocalVariable(name: "__res", scope: !3538, file: !3, line: 154, type: !400)
!3544 = !DILocation(line: 154, column: 21, scope: !3545)
!3545 = distinct !DILexicalBlock(scope: !3538, file: !3, line: 154, column: 21)
!3546 = !DILocation(line: 154, column: 21, scope: !3250)
!3547 = !DILocation(line: 154, column: 3, scope: !3250)
!3548 = !DILocation(line: 154, column: 8, scope: !3250)
!3549 = !DILocation(line: 154, column: 19, scope: !3250)
!3550 = !DILocalVariable(name: "__size", scope: !3551, file: !3, line: 155, type: !2518)
!3551 = distinct !DILexicalBlock(scope: !3250, file: !3, line: 155, column: 19)
!3552 = !DILocation(line: 155, column: 19, scope: !3551)
!3553 = !DILocalVariable(name: "__mask", scope: !3551, file: !3, line: 155, type: !2521)
!3554 = !DILocalVariable(name: "__off", scope: !3551, file: !3, line: 155, type: !2518)
!3555 = !DILocalVariable(name: "__shft", scope: !3551, file: !3, line: 155, type: !2518)
!3556 = !DILocalVariable(name: "__res", scope: !3551, file: !3, line: 155, type: !400)
!3557 = !DILocation(line: 155, column: 19, scope: !3558)
!3558 = distinct !DILexicalBlock(scope: !3551, file: !3, line: 155, column: 19)
!3559 = !DILocation(line: 155, column: 3, scope: !3250)
!3560 = !DILocation(line: 155, column: 8, scope: !3250)
!3561 = !DILocation(line: 155, column: 17, scope: !3250)
!3562 = !DILocation(line: 158, column: 7, scope: !3563)
!3563 = distinct !DILexicalBlock(scope: !3250, file: !3, line: 158, column: 7)
!3564 = !DILocation(line: 158, column: 12, scope: !3563)
!3565 = !DILocation(line: 158, column: 19, scope: !3563)
!3566 = !DILocation(line: 158, column: 7, scope: !3250)
!3567 = !DILocation(line: 159, column: 4, scope: !3563)
!3568 = !DILocalVariable(name: "__size", scope: !3569, file: !3, line: 161, type: !2518)
!3569 = distinct !DILexicalBlock(scope: !3250, file: !3, line: 161, column: 7)
!3570 = !DILocation(line: 161, column: 7, scope: !3569)
!3571 = !DILocalVariable(name: "__mask", scope: !3569, file: !3, line: 161, type: !2521)
!3572 = !DILocalVariable(name: "__off", scope: !3569, file: !3, line: 161, type: !2518)
!3573 = !DILocalVariable(name: "__shft", scope: !3569, file: !3, line: 161, type: !2518)
!3574 = !DILocalVariable(name: "__res", scope: !3569, file: !3, line: 161, type: !400)
!3575 = !DILocation(line: 161, column: 7, scope: !3576)
!3576 = distinct !DILexicalBlock(scope: !3569, file: !3, line: 161, column: 7)
!3577 = !DILocation(line: 161, column: 5, scope: !3250)
!3578 = !DILocation(line: 162, column: 28, scope: !3250)
!3579 = !DILocation(line: 162, column: 26, scope: !3250)
!3580 = !DILocation(line: 162, column: 31, scope: !3250)
!3581 = !DILocation(line: 162, column: 3, scope: !3250)
!3582 = !DILocation(line: 162, column: 8, scope: !3250)
!3583 = !DILocation(line: 162, column: 21, scope: !3250)
!3584 = !DILocation(line: 164, column: 3, scope: !3250)
!3585 = !DILocation(line: 164, column: 8, scope: !3250)
!3586 = !DILocation(line: 164, column: 21, scope: !3250)
!3587 = !DILocation(line: 165, column: 3, scope: !3250)
!3588 = !DILocation(line: 165, column: 8, scope: !3250)
!3589 = !DILocation(line: 165, column: 21, scope: !3250)
!3590 = !DILocation(line: 166, column: 3, scope: !3250)
!3591 = !DILocation(line: 166, column: 8, scope: !3250)
!3592 = !DILocation(line: 166, column: 23, scope: !3250)
!3593 = !DILocation(line: 167, column: 3, scope: !3250)
!3594 = !DILocation(line: 167, column: 8, scope: !3250)
!3595 = !DILocation(line: 167, column: 22, scope: !3250)
!3596 = !DILocation(line: 168, column: 3, scope: !3250)
!3597 = !DILocation(line: 168, column: 8, scope: !3250)
!3598 = !DILocation(line: 168, column: 19, scope: !3250)
!3599 = !DILocation(line: 169, column: 3, scope: !3250)
!3600 = !DILocation(line: 169, column: 8, scope: !3250)
!3601 = !DILocation(line: 169, column: 22, scope: !3250)
!3602 = !DILocation(line: 170, column: 3, scope: !3250)
!3603 = !DILocation(line: 170, column: 8, scope: !3250)
!3604 = !DILocation(line: 170, column: 22, scope: !3250)
!3605 = !DILocation(line: 171, column: 3, scope: !3250)
!3606 = !DILocation(line: 171, column: 8, scope: !3250)
!3607 = !DILocation(line: 171, column: 19, scope: !3250)
!3608 = !DILocation(line: 172, column: 3, scope: !3250)
!3609 = !DILocation(line: 174, column: 3, scope: !3250)
!3610 = !DILocation(line: 176, column: 3, scope: !3250)
!3611 = !DILocation(line: 179, column: 21, scope: !3218)
!3612 = !DILocation(line: 179, column: 26, scope: !3218)
!3613 = !DILocation(line: 179, column: 2, scope: !3218)
!3614 = !DILocation(line: 179, column: 8, scope: !3218)
!3615 = !DILocation(line: 179, column: 19, scope: !3218)
!3616 = !DILocation(line: 181, column: 2, scope: !3218)
!3617 = !DILocation(line: 182, column: 1, scope: !3218)
!3618 = distinct !DISubprogram(name: "mmc_sd_setup_card", scope: !3, file: !3, line: 901, type: !3619, scopeLine: 903, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !115)
!3619 = !DISubroutineType(types: !3620)
!3620 = !{!127, !71, !66, !970}
!3621 = !DILocalVariable(name: "host", arg: 1, scope: !3618, file: !3, line: 901, type: !71)
!3622 = !DILocation(line: 901, column: 40, scope: !3618)
!3623 = !DILocalVariable(name: "card", arg: 2, scope: !3618, file: !3, line: 901, type: !66)
!3624 = !DILocation(line: 901, column: 63, scope: !3618)
!3625 = !DILocalVariable(name: "reinit", arg: 3, scope: !3618, file: !3, line: 902, type: !970)
!3626 = !DILocation(line: 902, column: 7, scope: !3618)
!3627 = !DILocalVariable(name: "err", scope: !3618, file: !3, line: 904, type: !127)
!3628 = !DILocation(line: 904, column: 6, scope: !3618)
!3629 = !DILocation(line: 906, column: 7, scope: !3630)
!3630 = distinct !DILexicalBlock(scope: !3618, file: !3, line: 906, column: 6)
!3631 = !DILocation(line: 906, column: 6, scope: !3618)
!3632 = !DILocation(line: 910, column: 26, scope: !3633)
!3633 = distinct !DILexicalBlock(scope: !3630, file: !3, line: 906, column: 15)
!3634 = !DILocation(line: 910, column: 9, scope: !3633)
!3635 = !DILocation(line: 910, column: 7, scope: !3633)
!3636 = !DILocation(line: 911, column: 7, scope: !3637)
!3637 = distinct !DILexicalBlock(scope: !3633, file: !3, line: 911, column: 7)
!3638 = !DILocation(line: 911, column: 7, scope: !3633)
!3639 = !DILocation(line: 912, column: 11, scope: !3637)
!3640 = !DILocation(line: 912, column: 4, scope: !3637)
!3641 = !DILocation(line: 914, column: 24, scope: !3633)
!3642 = !DILocation(line: 914, column: 9, scope: !3633)
!3643 = !DILocation(line: 914, column: 7, scope: !3633)
!3644 = !DILocation(line: 915, column: 7, scope: !3645)
!3645 = distinct !DILexicalBlock(scope: !3633, file: !3, line: 915, column: 7)
!3646 = !DILocation(line: 915, column: 7, scope: !3633)
!3647 = !DILocation(line: 916, column: 11, scope: !3645)
!3648 = !DILocation(line: 916, column: 4, scope: !3645)
!3649 = !DILocation(line: 921, column: 22, scope: !3633)
!3650 = !DILocation(line: 921, column: 9, scope: !3633)
!3651 = !DILocation(line: 921, column: 7, scope: !3633)
!3652 = !DILocation(line: 922, column: 7, scope: !3653)
!3653 = distinct !DILexicalBlock(scope: !3633, file: !3, line: 922, column: 7)
!3654 = !DILocation(line: 922, column: 7, scope: !3633)
!3655 = !DILocation(line: 923, column: 11, scope: !3653)
!3656 = !DILocation(line: 923, column: 4, scope: !3653)
!3657 = !DILocation(line: 926, column: 18, scope: !3633)
!3658 = !DILocation(line: 926, column: 3, scope: !3633)
!3659 = !DILocation(line: 931, column: 25, scope: !3633)
!3660 = !DILocation(line: 931, column: 9, scope: !3633)
!3661 = !DILocation(line: 931, column: 7, scope: !3633)
!3662 = !DILocation(line: 932, column: 7, scope: !3663)
!3663 = distinct !DILexicalBlock(scope: !3633, file: !3, line: 932, column: 7)
!3664 = !DILocation(line: 932, column: 7, scope: !3633)
!3665 = !DILocation(line: 933, column: 11, scope: !3663)
!3666 = !DILocation(line: 933, column: 4, scope: !3663)
!3667 = !DILocation(line: 934, column: 2, scope: !3633)
!3668 = !DILocation(line: 942, column: 6, scope: !3669)
!3669 = distinct !DILexicalBlock(scope: !3618, file: !3, line: 942, column: 6)
!3670 = !DILocation(line: 942, column: 6, scope: !3618)
!3671 = !DILocation(line: 943, column: 25, scope: !3672)
!3672 = distinct !DILexicalBlock(scope: !3669, file: !3, line: 942, column: 29)
!3673 = !DILocation(line: 943, column: 31, scope: !3672)
!3674 = !DILocation(line: 943, column: 9, scope: !3672)
!3675 = !DILocation(line: 943, column: 7, scope: !3672)
!3676 = !DILocation(line: 944, column: 7, scope: !3677)
!3677 = distinct !DILexicalBlock(scope: !3672, file: !3, line: 944, column: 7)
!3678 = !DILocation(line: 944, column: 7, scope: !3672)
!3679 = !DILocation(line: 945, column: 11, scope: !3677)
!3680 = !DILocation(line: 945, column: 4, scope: !3677)
!3681 = !DILocation(line: 946, column: 2, scope: !3672)
!3682 = !DILocation(line: 951, column: 7, scope: !3683)
!3683 = distinct !DILexicalBlock(scope: !3618, file: !3, line: 951, column: 6)
!3684 = !DILocation(line: 951, column: 6, scope: !3618)
!3685 = !DILocalVariable(name: "ro", scope: !3686, file: !3, line: 952, type: !127)
!3686 = distinct !DILexicalBlock(scope: !3683, file: !3, line: 951, column: 15)
!3687 = !DILocation(line: 952, column: 7, scope: !3686)
!3688 = !DILocation(line: 952, column: 26, scope: !3686)
!3689 = !DILocation(line: 952, column: 12, scope: !3686)
!3690 = !DILocation(line: 954, column: 7, scope: !3691)
!3691 = distinct !DILexicalBlock(scope: !3686, file: !3, line: 954, column: 7)
!3692 = !DILocation(line: 954, column: 10, scope: !3691)
!3693 = !DILocation(line: 954, column: 7, scope: !3686)
!3694 = !DILocation(line: 955, column: 4, scope: !3695)
!3695 = distinct !DILexicalBlock(scope: !3691, file: !3, line: 954, column: 15)
!3696 = !DILocation(line: 957, column: 3, scope: !3695)
!3697 = !DILocation(line: 957, column: 14, scope: !3698)
!3698 = distinct !DILexicalBlock(scope: !3691, file: !3, line: 957, column: 14)
!3699 = !DILocation(line: 957, column: 17, scope: !3698)
!3700 = !DILocation(line: 957, column: 14, scope: !3691)
!3701 = !DILocation(line: 958, column: 4, scope: !3702)
!3702 = distinct !DILexicalBlock(scope: !3698, file: !3, line: 957, column: 22)
!3703 = !DILocation(line: 959, column: 3, scope: !3702)
!3704 = !DILocation(line: 960, column: 2, scope: !3686)
!3705 = !DILocation(line: 962, column: 2, scope: !3618)
!3706 = !DILocation(line: 963, column: 1, scope: !3618)
!3707 = distinct !DISubprogram(name: "mmc_decode_scr", scope: !3, file: !3, line: 187, type: !2690, scopeLine: 188, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !115)
!3708 = !DILocalVariable(name: "card", arg: 1, scope: !3707, file: !3, line: 187, type: !66)
!3709 = !DILocation(line: 187, column: 44, scope: !3707)
!3710 = !DILocalVariable(name: "scr", scope: !3707, file: !3, line: 189, type: !3711)
!3711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2341, size: 64)
!3712 = !DILocation(line: 189, column: 17, scope: !3707)
!3713 = !DILocation(line: 189, column: 24, scope: !3707)
!3714 = !DILocation(line: 189, column: 30, scope: !3707)
!3715 = !DILocalVariable(name: "scr_struct", scope: !3707, file: !3, line: 190, type: !7)
!3716 = !DILocation(line: 190, column: 15, scope: !3707)
!3717 = !DILocalVariable(name: "resp", scope: !3707, file: !3, line: 191, type: !1947)
!3718 = !DILocation(line: 191, column: 6, scope: !3707)
!3719 = !DILocation(line: 193, column: 12, scope: !3707)
!3720 = !DILocation(line: 193, column: 18, scope: !3707)
!3721 = !DILocation(line: 193, column: 2, scope: !3707)
!3722 = !DILocation(line: 193, column: 10, scope: !3707)
!3723 = !DILocation(line: 194, column: 12, scope: !3707)
!3724 = !DILocation(line: 194, column: 18, scope: !3707)
!3725 = !DILocation(line: 194, column: 2, scope: !3707)
!3726 = !DILocation(line: 194, column: 10, scope: !3707)
!3727 = !DILocalVariable(name: "__size", scope: !3728, file: !3, line: 196, type: !2518)
!3728 = distinct !DILexicalBlock(scope: !3707, file: !3, line: 196, column: 15)
!3729 = !DILocation(line: 196, column: 15, scope: !3728)
!3730 = !DILocalVariable(name: "__mask", scope: !3728, file: !3, line: 196, type: !2521)
!3731 = !DILocalVariable(name: "__off", scope: !3728, file: !3, line: 196, type: !2518)
!3732 = !DILocalVariable(name: "__shft", scope: !3728, file: !3, line: 196, type: !2518)
!3733 = !DILocalVariable(name: "__res", scope: !3728, file: !3, line: 196, type: !400)
!3734 = !DILocation(line: 196, column: 15, scope: !3735)
!3735 = distinct !DILexicalBlock(scope: !3728, file: !3, line: 196, column: 15)
!3736 = !DILocation(line: 196, column: 13, scope: !3707)
!3737 = !DILocation(line: 197, column: 6, scope: !3738)
!3738 = distinct !DILexicalBlock(scope: !3707, file: !3, line: 197, column: 6)
!3739 = !DILocation(line: 197, column: 17, scope: !3738)
!3740 = !DILocation(line: 197, column: 6, scope: !3707)
!3741 = !DILocation(line: 198, column: 3, scope: !3742)
!3742 = distinct !DILexicalBlock(scope: !3738, file: !3, line: 197, column: 23)
!3743 = !DILocation(line: 200, column: 3, scope: !3742)
!3744 = !DILocalVariable(name: "__size", scope: !3745, file: !3, line: 203, type: !2518)
!3745 = distinct !DILexicalBlock(scope: !3707, file: !3, line: 203, column: 17)
!3746 = !DILocation(line: 203, column: 17, scope: !3745)
!3747 = !DILocalVariable(name: "__mask", scope: !3745, file: !3, line: 203, type: !2521)
!3748 = !DILocalVariable(name: "__off", scope: !3745, file: !3, line: 203, type: !2518)
!3749 = !DILocalVariable(name: "__shft", scope: !3745, file: !3, line: 203, type: !2518)
!3750 = !DILocalVariable(name: "__res", scope: !3745, file: !3, line: 203, type: !400)
!3751 = !DILocation(line: 203, column: 17, scope: !3752)
!3752 = distinct !DILexicalBlock(scope: !3745, file: !3, line: 203, column: 17)
!3753 = !DILocation(line: 203, column: 17, scope: !3707)
!3754 = !DILocation(line: 203, column: 2, scope: !3707)
!3755 = !DILocation(line: 203, column: 7, scope: !3707)
!3756 = !DILocation(line: 203, column: 15, scope: !3707)
!3757 = !DILocalVariable(name: "__size", scope: !3758, file: !3, line: 204, type: !2518)
!3758 = distinct !DILexicalBlock(scope: !3707, file: !3, line: 204, column: 20)
!3759 = !DILocation(line: 204, column: 20, scope: !3758)
!3760 = !DILocalVariable(name: "__mask", scope: !3758, file: !3, line: 204, type: !2521)
!3761 = !DILocalVariable(name: "__off", scope: !3758, file: !3, line: 204, type: !2518)
!3762 = !DILocalVariable(name: "__shft", scope: !3758, file: !3, line: 204, type: !2518)
!3763 = !DILocalVariable(name: "__res", scope: !3758, file: !3, line: 204, type: !400)
!3764 = !DILocation(line: 204, column: 20, scope: !3765)
!3765 = distinct !DILexicalBlock(scope: !3758, file: !3, line: 204, column: 20)
!3766 = !DILocation(line: 204, column: 20, scope: !3707)
!3767 = !DILocation(line: 204, column: 2, scope: !3707)
!3768 = !DILocation(line: 204, column: 7, scope: !3707)
!3769 = !DILocation(line: 204, column: 18, scope: !3707)
!3770 = !DILocation(line: 205, column: 6, scope: !3771)
!3771 = distinct !DILexicalBlock(scope: !3707, file: !3, line: 205, column: 6)
!3772 = !DILocation(line: 205, column: 11, scope: !3771)
!3773 = !DILocation(line: 205, column: 19, scope: !3771)
!3774 = !DILocation(line: 205, column: 6, scope: !3707)
!3775 = !DILocalVariable(name: "__size", scope: !3776, file: !3, line: 207, type: !2518)
!3776 = distinct !DILexicalBlock(scope: !3771, file: !3, line: 207, column: 20)
!3777 = !DILocation(line: 207, column: 20, scope: !3776)
!3778 = !DILocalVariable(name: "__mask", scope: !3776, file: !3, line: 207, type: !2521)
!3779 = !DILocalVariable(name: "__off", scope: !3776, file: !3, line: 207, type: !2518)
!3780 = !DILocalVariable(name: "__shft", scope: !3776, file: !3, line: 207, type: !2518)
!3781 = !DILocalVariable(name: "__res", scope: !3776, file: !3, line: 207, type: !400)
!3782 = !DILocation(line: 207, column: 20, scope: !3783)
!3783 = distinct !DILexicalBlock(scope: !3776, file: !3, line: 207, column: 20)
!3784 = !DILocation(line: 207, column: 20, scope: !3771)
!3785 = !DILocation(line: 207, column: 3, scope: !3771)
!3786 = !DILocation(line: 207, column: 8, scope: !3771)
!3787 = !DILocation(line: 207, column: 18, scope: !3771)
!3788 = !DILocation(line: 209, column: 6, scope: !3789)
!3789 = distinct !DILexicalBlock(scope: !3707, file: !3, line: 209, column: 6)
!3790 = !DILocation(line: 209, column: 11, scope: !3789)
!3791 = !DILocation(line: 209, column: 6, scope: !3707)
!3792 = !DILocalVariable(name: "__size", scope: !3793, file: !3, line: 210, type: !2518)
!3793 = distinct !DILexicalBlock(scope: !3794, file: !3, line: 210, column: 20)
!3794 = distinct !DILexicalBlock(scope: !3789, file: !3, line: 209, column: 22)
!3795 = !DILocation(line: 210, column: 20, scope: !3793)
!3796 = !DILocalVariable(name: "__mask", scope: !3793, file: !3, line: 210, type: !2521)
!3797 = !DILocalVariable(name: "__off", scope: !3793, file: !3, line: 210, type: !2518)
!3798 = !DILocalVariable(name: "__shft", scope: !3793, file: !3, line: 210, type: !2518)
!3799 = !DILocalVariable(name: "__res", scope: !3793, file: !3, line: 210, type: !400)
!3800 = !DILocation(line: 210, column: 20, scope: !3801)
!3801 = distinct !DILexicalBlock(scope: !3793, file: !3, line: 210, column: 20)
!3802 = !DILocation(line: 210, column: 20, scope: !3794)
!3803 = !DILocation(line: 210, column: 3, scope: !3794)
!3804 = !DILocation(line: 210, column: 8, scope: !3794)
!3805 = !DILocation(line: 210, column: 18, scope: !3794)
!3806 = !DILocalVariable(name: "__size", scope: !3807, file: !3, line: 211, type: !2518)
!3807 = distinct !DILexicalBlock(scope: !3794, file: !3, line: 211, column: 20)
!3808 = !DILocation(line: 211, column: 20, scope: !3807)
!3809 = !DILocalVariable(name: "__mask", scope: !3807, file: !3, line: 211, type: !2521)
!3810 = !DILocalVariable(name: "__off", scope: !3807, file: !3, line: 211, type: !2518)
!3811 = !DILocalVariable(name: "__shft", scope: !3807, file: !3, line: 211, type: !2518)
!3812 = !DILocalVariable(name: "__res", scope: !3807, file: !3, line: 211, type: !400)
!3813 = !DILocation(line: 211, column: 20, scope: !3814)
!3814 = distinct !DILexicalBlock(scope: !3807, file: !3, line: 211, column: 20)
!3815 = !DILocation(line: 211, column: 20, scope: !3794)
!3816 = !DILocation(line: 211, column: 3, scope: !3794)
!3817 = !DILocation(line: 211, column: 8, scope: !3794)
!3818 = !DILocation(line: 211, column: 18, scope: !3794)
!3819 = !DILocation(line: 212, column: 2, scope: !3794)
!3820 = !DILocalVariable(name: "__size", scope: !3821, file: !3, line: 214, type: !2518)
!3821 = distinct !DILexicalBlock(scope: !3822, file: !3, line: 214, column: 6)
!3822 = distinct !DILexicalBlock(scope: !3707, file: !3, line: 214, column: 6)
!3823 = !DILocation(line: 214, column: 6, scope: !3821)
!3824 = !DILocalVariable(name: "__mask", scope: !3821, file: !3, line: 214, type: !2521)
!3825 = !DILocalVariable(name: "__off", scope: !3821, file: !3, line: 214, type: !2518)
!3826 = !DILocalVariable(name: "__shft", scope: !3821, file: !3, line: 214, type: !2518)
!3827 = !DILocalVariable(name: "__res", scope: !3821, file: !3, line: 214, type: !400)
!3828 = !DILocation(line: 214, column: 6, scope: !3829)
!3829 = distinct !DILexicalBlock(scope: !3821, file: !3, line: 214, column: 6)
!3830 = !DILocation(line: 214, column: 6, scope: !3822)
!3831 = !DILocation(line: 214, column: 6, scope: !3707)
!3832 = !DILocation(line: 215, column: 3, scope: !3822)
!3833 = !DILocation(line: 215, column: 9, scope: !3822)
!3834 = !DILocation(line: 215, column: 21, scope: !3822)
!3835 = !DILocation(line: 217, column: 3, scope: !3822)
!3836 = !DILocation(line: 217, column: 9, scope: !3822)
!3837 = !DILocation(line: 217, column: 21, scope: !3822)
!3838 = !DILocation(line: 219, column: 6, scope: !3839)
!3839 = distinct !DILexicalBlock(scope: !3707, file: !3, line: 219, column: 6)
!3840 = !DILocation(line: 219, column: 11, scope: !3839)
!3841 = !DILocation(line: 219, column: 6, scope: !3707)
!3842 = !DILocalVariable(name: "__size", scope: !3843, file: !3, line: 220, type: !2518)
!3843 = distinct !DILexicalBlock(scope: !3839, file: !3, line: 220, column: 15)
!3844 = !DILocation(line: 220, column: 15, scope: !3843)
!3845 = !DILocalVariable(name: "__mask", scope: !3843, file: !3, line: 220, type: !2521)
!3846 = !DILocalVariable(name: "__off", scope: !3843, file: !3, line: 220, type: !2518)
!3847 = !DILocalVariable(name: "__shft", scope: !3843, file: !3, line: 220, type: !2518)
!3848 = !DILocalVariable(name: "__res", scope: !3843, file: !3, line: 220, type: !400)
!3849 = !DILocation(line: 220, column: 15, scope: !3850)
!3850 = distinct !DILexicalBlock(scope: !3843, file: !3, line: 220, column: 15)
!3851 = !DILocation(line: 220, column: 15, scope: !3839)
!3852 = !DILocation(line: 220, column: 3, scope: !3839)
!3853 = !DILocation(line: 220, column: 8, scope: !3839)
!3854 = !DILocation(line: 220, column: 13, scope: !3839)
!3855 = !DILocation(line: 223, column: 8, scope: !3856)
!3856 = distinct !DILexicalBlock(scope: !3707, file: !3, line: 223, column: 6)
!3857 = !DILocation(line: 223, column: 13, scope: !3856)
!3858 = !DILocation(line: 223, column: 24, scope: !3856)
!3859 = !DILocation(line: 223, column: 46, scope: !3856)
!3860 = !DILocation(line: 224, column: 8, scope: !3856)
!3861 = !DILocation(line: 224, column: 13, scope: !3856)
!3862 = !DILocation(line: 224, column: 24, scope: !3856)
!3863 = !DILocation(line: 223, column: 6, scope: !3707)
!3864 = !DILocation(line: 225, column: 3, scope: !3865)
!3865 = distinct !DILexicalBlock(scope: !3856, file: !3, line: 224, column: 47)
!3866 = !DILocation(line: 226, column: 3, scope: !3865)
!3867 = !DILocation(line: 229, column: 2, scope: !3707)
!3868 = !DILocation(line: 230, column: 1, scope: !3707)
!3869 = distinct !DISubprogram(name: "mmc_read_ssr", scope: !3, file: !3, line: 235, type: !2690, scopeLine: 236, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !115)
!3870 = !DILocation(line: 445, column: 72, scope: !2693, inlinedAt: !3871)
!3871 = distinct !DILocation(line: 552, column: 10, scope: !2698, inlinedAt: !3872)
!3872 = distinct !DILocation(line: 249, column: 12, scope: !3869)
!3873 = !DILocation(line: 446, column: 9, scope: !2693, inlinedAt: !3871)
!3874 = !DILocation(line: 446, column: 23, scope: !2693, inlinedAt: !3871)
!3875 = !DILocation(line: 448, column: 8, scope: !2693, inlinedAt: !3871)
!3876 = !DILocation(line: 318, column: 67, scope: !2711, inlinedAt: !3877)
!3877 = distinct !DILocation(line: 553, column: 20, scope: !2698, inlinedAt: !3872)
!3878 = !DILocation(line: 346, column: 58, scope: !2717, inlinedAt: !3879)
!3879 = distinct !DILocation(line: 547, column: 11, scope: !2698, inlinedAt: !3872)
!3880 = !DILocation(line: 472, column: 28, scope: !2723, inlinedAt: !3881)
!3881 = distinct !DILocation(line: 481, column: 9, scope: !2728, inlinedAt: !3882)
!3882 = distinct !DILocation(line: 545, column: 11, scope: !2730, inlinedAt: !3872)
!3883 = !DILocation(line: 472, column: 40, scope: !2723, inlinedAt: !3881)
!3884 = !DILocation(line: 472, column: 60, scope: !2723, inlinedAt: !3881)
!3885 = !DILocation(line: 478, column: 51, scope: !2728, inlinedAt: !3882)
!3886 = !DILocation(line: 478, column: 63, scope: !2728, inlinedAt: !3882)
!3887 = !DILocation(line: 480, column: 15, scope: !2728, inlinedAt: !3882)
!3888 = !DILocation(line: 538, column: 45, scope: !2700, inlinedAt: !3872)
!3889 = !DILocation(line: 538, column: 57, scope: !2700, inlinedAt: !3872)
!3890 = !DILocation(line: 542, column: 16, scope: !2698, inlinedAt: !3872)
!3891 = !DILocalVariable(name: "card", arg: 1, scope: !3869, file: !3, line: 235, type: !66)
!3892 = !DILocation(line: 235, column: 42, scope: !3869)
!3893 = !DILocalVariable(name: "au", scope: !3869, file: !3, line: 237, type: !7)
!3894 = !DILocation(line: 237, column: 15, scope: !3869)
!3895 = !DILocalVariable(name: "es", scope: !3869, file: !3, line: 237, type: !7)
!3896 = !DILocation(line: 237, column: 19, scope: !3869)
!3897 = !DILocalVariable(name: "et", scope: !3869, file: !3, line: 237, type: !7)
!3898 = !DILocation(line: 237, column: 23, scope: !3869)
!3899 = !DILocalVariable(name: "eo", scope: !3869, file: !3, line: 237, type: !7)
!3900 = !DILocation(line: 237, column: 27, scope: !3869)
!3901 = !DILocalVariable(name: "raw_ssr", scope: !3869, file: !3, line: 238, type: !3902)
!3902 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2415, size: 64)
!3903 = !DILocation(line: 238, column: 10, scope: !3869)
!3904 = !DILocalVariable(name: "resp", scope: !3869, file: !3, line: 239, type: !1947)
!3905 = !DILocation(line: 239, column: 6, scope: !3869)
!3906 = !DILocalVariable(name: "discard_support", scope: !3869, file: !3, line: 240, type: !537)
!3907 = !DILocation(line: 240, column: 5, scope: !3869)
!3908 = !DILocalVariable(name: "i", scope: !3869, file: !3, line: 241, type: !127)
!3909 = !DILocation(line: 241, column: 6, scope: !3869)
!3910 = !DILocation(line: 243, column: 8, scope: !3911)
!3911 = distinct !DILexicalBlock(scope: !3869, file: !3, line: 243, column: 6)
!3912 = !DILocation(line: 243, column: 14, scope: !3911)
!3913 = !DILocation(line: 243, column: 18, scope: !3911)
!3914 = !DILocation(line: 243, column: 27, scope: !3911)
!3915 = !DILocation(line: 243, column: 6, scope: !3869)
!3916 = !DILocation(line: 244, column: 3, scope: !3917)
!3917 = distinct !DILexicalBlock(scope: !3911, file: !3, line: 243, column: 44)
!3918 = !DILocation(line: 246, column: 3, scope: !3917)
!3919 = !DILocation(line: 540, column: 27, scope: !2699, inlinedAt: !3872)
!3920 = !DILocation(line: 540, column: 6, scope: !2699, inlinedAt: !3872)
!3921 = !DILocation(line: 540, column: 6, scope: !2700, inlinedAt: !3872)
!3922 = !DILocation(line: 544, column: 7, scope: !2730, inlinedAt: !3872)
!3923 = !DILocation(line: 544, column: 12, scope: !2730, inlinedAt: !3872)
!3924 = !DILocation(line: 544, column: 7, scope: !2698, inlinedAt: !3872)
!3925 = !DILocation(line: 545, column: 25, scope: !2730, inlinedAt: !3872)
!3926 = !DILocation(line: 545, column: 31, scope: !2730, inlinedAt: !3872)
!3927 = !DILocation(line: 480, column: 33, scope: !2728, inlinedAt: !3882)
!3928 = !DILocation(line: 480, column: 23, scope: !2728, inlinedAt: !3882)
!3929 = !DILocation(line: 481, column: 29, scope: !2728, inlinedAt: !3882)
!3930 = !DILocation(line: 481, column: 35, scope: !2728, inlinedAt: !3882)
!3931 = !DILocation(line: 481, column: 42, scope: !2728, inlinedAt: !3882)
!3932 = !DILocation(line: 474, column: 23, scope: !2723, inlinedAt: !3881)
!3933 = !DILocation(line: 474, column: 29, scope: !2723, inlinedAt: !3881)
!3934 = !DILocation(line: 474, column: 36, scope: !2723, inlinedAt: !3881)
!3935 = !DILocation(line: 474, column: 9, scope: !2723, inlinedAt: !3881)
!3936 = !DILocation(line: 545, column: 4, scope: !2730, inlinedAt: !3872)
!3937 = !DILocation(line: 547, column: 25, scope: !2698, inlinedAt: !3872)
!3938 = !DILocation(line: 348, column: 7, scope: !2802, inlinedAt: !3879)
!3939 = !DILocation(line: 348, column: 6, scope: !2717, inlinedAt: !3879)
!3940 = !DILocation(line: 349, column: 3, scope: !2802, inlinedAt: !3879)
!3941 = !DILocation(line: 351, column: 6, scope: !2806, inlinedAt: !3879)
!3942 = !DILocation(line: 351, column: 11, scope: !2806, inlinedAt: !3879)
!3943 = !DILocation(line: 351, column: 6, scope: !2717, inlinedAt: !3879)
!3944 = !DILocation(line: 352, column: 3, scope: !2806, inlinedAt: !3879)
!3945 = !DILocation(line: 354, column: 32, scope: !2811, inlinedAt: !3879)
!3946 = !DILocation(line: 354, column: 37, scope: !2811, inlinedAt: !3879)
!3947 = !DILocation(line: 354, column: 42, scope: !2811, inlinedAt: !3879)
!3948 = !DILocation(line: 354, column: 45, scope: !2811, inlinedAt: !3879)
!3949 = !DILocation(line: 354, column: 50, scope: !2811, inlinedAt: !3879)
!3950 = !DILocation(line: 354, column: 6, scope: !2717, inlinedAt: !3879)
!3951 = !DILocation(line: 355, column: 3, scope: !2811, inlinedAt: !3879)
!3952 = !DILocation(line: 356, column: 32, scope: !2819, inlinedAt: !3879)
!3953 = !DILocation(line: 356, column: 37, scope: !2819, inlinedAt: !3879)
!3954 = !DILocation(line: 356, column: 43, scope: !2819, inlinedAt: !3879)
!3955 = !DILocation(line: 356, column: 46, scope: !2819, inlinedAt: !3879)
!3956 = !DILocation(line: 356, column: 51, scope: !2819, inlinedAt: !3879)
!3957 = !DILocation(line: 356, column: 6, scope: !2717, inlinedAt: !3879)
!3958 = !DILocation(line: 357, column: 3, scope: !2819, inlinedAt: !3879)
!3959 = !DILocation(line: 358, column: 6, scope: !2827, inlinedAt: !3879)
!3960 = !DILocation(line: 358, column: 11, scope: !2827, inlinedAt: !3879)
!3961 = !DILocation(line: 358, column: 6, scope: !2717, inlinedAt: !3879)
!3962 = !DILocation(line: 358, column: 26, scope: !2827, inlinedAt: !3879)
!3963 = !DILocation(line: 359, column: 6, scope: !2832, inlinedAt: !3879)
!3964 = !DILocation(line: 359, column: 11, scope: !2832, inlinedAt: !3879)
!3965 = !DILocation(line: 359, column: 6, scope: !2717, inlinedAt: !3879)
!3966 = !DILocation(line: 359, column: 26, scope: !2832, inlinedAt: !3879)
!3967 = !DILocation(line: 360, column: 6, scope: !2837, inlinedAt: !3879)
!3968 = !DILocation(line: 360, column: 11, scope: !2837, inlinedAt: !3879)
!3969 = !DILocation(line: 360, column: 6, scope: !2717, inlinedAt: !3879)
!3970 = !DILocation(line: 360, column: 26, scope: !2837, inlinedAt: !3879)
!3971 = !DILocation(line: 361, column: 6, scope: !2842, inlinedAt: !3879)
!3972 = !DILocation(line: 361, column: 11, scope: !2842, inlinedAt: !3879)
!3973 = !DILocation(line: 361, column: 6, scope: !2717, inlinedAt: !3879)
!3974 = !DILocation(line: 361, column: 26, scope: !2842, inlinedAt: !3879)
!3975 = !DILocation(line: 362, column: 6, scope: !2847, inlinedAt: !3879)
!3976 = !DILocation(line: 362, column: 11, scope: !2847, inlinedAt: !3879)
!3977 = !DILocation(line: 362, column: 6, scope: !2717, inlinedAt: !3879)
!3978 = !DILocation(line: 362, column: 26, scope: !2847, inlinedAt: !3879)
!3979 = !DILocation(line: 363, column: 6, scope: !2852, inlinedAt: !3879)
!3980 = !DILocation(line: 363, column: 11, scope: !2852, inlinedAt: !3879)
!3981 = !DILocation(line: 363, column: 6, scope: !2717, inlinedAt: !3879)
!3982 = !DILocation(line: 363, column: 26, scope: !2852, inlinedAt: !3879)
!3983 = !DILocation(line: 364, column: 6, scope: !2857, inlinedAt: !3879)
!3984 = !DILocation(line: 364, column: 11, scope: !2857, inlinedAt: !3879)
!3985 = !DILocation(line: 364, column: 6, scope: !2717, inlinedAt: !3879)
!3986 = !DILocation(line: 364, column: 26, scope: !2857, inlinedAt: !3879)
!3987 = !DILocation(line: 365, column: 6, scope: !2862, inlinedAt: !3879)
!3988 = !DILocation(line: 365, column: 11, scope: !2862, inlinedAt: !3879)
!3989 = !DILocation(line: 365, column: 6, scope: !2717, inlinedAt: !3879)
!3990 = !DILocation(line: 365, column: 26, scope: !2862, inlinedAt: !3879)
!3991 = !DILocation(line: 366, column: 6, scope: !2867, inlinedAt: !3879)
!3992 = !DILocation(line: 366, column: 11, scope: !2867, inlinedAt: !3879)
!3993 = !DILocation(line: 366, column: 6, scope: !2717, inlinedAt: !3879)
!3994 = !DILocation(line: 366, column: 26, scope: !2867, inlinedAt: !3879)
!3995 = !DILocation(line: 367, column: 6, scope: !2872, inlinedAt: !3879)
!3996 = !DILocation(line: 367, column: 11, scope: !2872, inlinedAt: !3879)
!3997 = !DILocation(line: 367, column: 6, scope: !2717, inlinedAt: !3879)
!3998 = !DILocation(line: 367, column: 26, scope: !2872, inlinedAt: !3879)
!3999 = !DILocation(line: 368, column: 6, scope: !2877, inlinedAt: !3879)
!4000 = !DILocation(line: 368, column: 11, scope: !2877, inlinedAt: !3879)
!4001 = !DILocation(line: 368, column: 6, scope: !2717, inlinedAt: !3879)
!4002 = !DILocation(line: 368, column: 26, scope: !2877, inlinedAt: !3879)
!4003 = !DILocation(line: 369, column: 6, scope: !2882, inlinedAt: !3879)
!4004 = !DILocation(line: 369, column: 11, scope: !2882, inlinedAt: !3879)
!4005 = !DILocation(line: 369, column: 6, scope: !2717, inlinedAt: !3879)
!4006 = !DILocation(line: 369, column: 26, scope: !2882, inlinedAt: !3879)
!4007 = !DILocation(line: 370, column: 6, scope: !2887, inlinedAt: !3879)
!4008 = !DILocation(line: 370, column: 11, scope: !2887, inlinedAt: !3879)
!4009 = !DILocation(line: 370, column: 6, scope: !2717, inlinedAt: !3879)
!4010 = !DILocation(line: 370, column: 26, scope: !2887, inlinedAt: !3879)
!4011 = !DILocation(line: 371, column: 6, scope: !2892, inlinedAt: !3879)
!4012 = !DILocation(line: 371, column: 11, scope: !2892, inlinedAt: !3879)
!4013 = !DILocation(line: 371, column: 6, scope: !2717, inlinedAt: !3879)
!4014 = !DILocation(line: 371, column: 26, scope: !2892, inlinedAt: !3879)
!4015 = !DILocation(line: 372, column: 6, scope: !2897, inlinedAt: !3879)
!4016 = !DILocation(line: 372, column: 11, scope: !2897, inlinedAt: !3879)
!4017 = !DILocation(line: 372, column: 6, scope: !2717, inlinedAt: !3879)
!4018 = !DILocation(line: 372, column: 26, scope: !2897, inlinedAt: !3879)
!4019 = !DILocation(line: 373, column: 6, scope: !2902, inlinedAt: !3879)
!4020 = !DILocation(line: 373, column: 11, scope: !2902, inlinedAt: !3879)
!4021 = !DILocation(line: 373, column: 6, scope: !2717, inlinedAt: !3879)
!4022 = !DILocation(line: 373, column: 26, scope: !2902, inlinedAt: !3879)
!4023 = !DILocation(line: 374, column: 6, scope: !2907, inlinedAt: !3879)
!4024 = !DILocation(line: 374, column: 11, scope: !2907, inlinedAt: !3879)
!4025 = !DILocation(line: 374, column: 6, scope: !2717, inlinedAt: !3879)
!4026 = !DILocation(line: 374, column: 26, scope: !2907, inlinedAt: !3879)
!4027 = !DILocation(line: 375, column: 6, scope: !2912, inlinedAt: !3879)
!4028 = !DILocation(line: 375, column: 11, scope: !2912, inlinedAt: !3879)
!4029 = !DILocation(line: 375, column: 6, scope: !2717, inlinedAt: !3879)
!4030 = !DILocation(line: 375, column: 27, scope: !2912, inlinedAt: !3879)
!4031 = !DILocation(line: 376, column: 6, scope: !2917, inlinedAt: !3879)
!4032 = !DILocation(line: 376, column: 11, scope: !2917, inlinedAt: !3879)
!4033 = !DILocation(line: 376, column: 6, scope: !2717, inlinedAt: !3879)
!4034 = !DILocation(line: 376, column: 32, scope: !2917, inlinedAt: !3879)
!4035 = !DILocation(line: 377, column: 6, scope: !2922, inlinedAt: !3879)
!4036 = !DILocation(line: 377, column: 11, scope: !2922, inlinedAt: !3879)
!4037 = !DILocation(line: 377, column: 6, scope: !2717, inlinedAt: !3879)
!4038 = !DILocation(line: 377, column: 32, scope: !2922, inlinedAt: !3879)
!4039 = !DILocation(line: 378, column: 6, scope: !2927, inlinedAt: !3879)
!4040 = !DILocation(line: 378, column: 11, scope: !2927, inlinedAt: !3879)
!4041 = !DILocation(line: 378, column: 6, scope: !2717, inlinedAt: !3879)
!4042 = !DILocation(line: 378, column: 32, scope: !2927, inlinedAt: !3879)
!4043 = !DILocation(line: 379, column: 6, scope: !2932, inlinedAt: !3879)
!4044 = !DILocation(line: 379, column: 11, scope: !2932, inlinedAt: !3879)
!4045 = !DILocation(line: 379, column: 6, scope: !2717, inlinedAt: !3879)
!4046 = !DILocation(line: 379, column: 33, scope: !2932, inlinedAt: !3879)
!4047 = !DILocation(line: 380, column: 6, scope: !2937, inlinedAt: !3879)
!4048 = !DILocation(line: 380, column: 11, scope: !2937, inlinedAt: !3879)
!4049 = !DILocation(line: 380, column: 6, scope: !2717, inlinedAt: !3879)
!4050 = !DILocation(line: 380, column: 33, scope: !2937, inlinedAt: !3879)
!4051 = !DILocation(line: 381, column: 6, scope: !2942, inlinedAt: !3879)
!4052 = !DILocation(line: 381, column: 11, scope: !2942, inlinedAt: !3879)
!4053 = !DILocation(line: 381, column: 6, scope: !2717, inlinedAt: !3879)
!4054 = !DILocation(line: 381, column: 33, scope: !2942, inlinedAt: !3879)
!4055 = !DILocation(line: 382, column: 2, scope: !2947, inlinedAt: !3879)
!4056 = !DILocation(line: 382, column: 2, scope: !2951, inlinedAt: !3879)
!4057 = !DILocation(line: 382, column: 2, scope: !2952, inlinedAt: !3879)
!4058 = !DILocation(line: 386, column: 1, scope: !2717, inlinedAt: !3879)
!4059 = !DILocation(line: 547, column: 9, scope: !2698, inlinedAt: !3872)
!4060 = !DILocation(line: 549, column: 8, scope: !2958, inlinedAt: !3872)
!4061 = !DILocation(line: 549, column: 7, scope: !2698, inlinedAt: !3872)
!4062 = !DILocation(line: 550, column: 4, scope: !2958, inlinedAt: !3872)
!4063 = !DILocation(line: 553, column: 33, scope: !2698, inlinedAt: !3872)
!4064 = !DILocation(line: 325, column: 6, scope: !2963, inlinedAt: !3877)
!4065 = !DILocation(line: 325, column: 6, scope: !2711, inlinedAt: !3877)
!4066 = !DILocation(line: 326, column: 3, scope: !2963, inlinedAt: !3877)
!4067 = !DILocation(line: 332, column: 9, scope: !2711, inlinedAt: !3877)
!4068 = !DILocation(line: 332, column: 15, scope: !2711, inlinedAt: !3877)
!4069 = !DILocation(line: 332, column: 2, scope: !2711, inlinedAt: !3877)
!4070 = !DILocation(line: 336, column: 1, scope: !2711, inlinedAt: !3877)
!4071 = !DILocation(line: 553, column: 5, scope: !2698, inlinedAt: !3872)
!4072 = !DILocation(line: 553, column: 41, scope: !2698, inlinedAt: !3872)
!4073 = !DILocation(line: 554, column: 5, scope: !2698, inlinedAt: !3872)
!4074 = !DILocation(line: 554, column: 12, scope: !2698, inlinedAt: !3872)
!4075 = !DILocation(line: 448, column: 31, scope: !2693, inlinedAt: !3871)
!4076 = !DILocation(line: 448, column: 34, scope: !2693, inlinedAt: !3871)
!4077 = !DILocation(line: 448, column: 14, scope: !2693, inlinedAt: !3871)
!4078 = !DILocation(line: 450, column: 22, scope: !2693, inlinedAt: !3871)
!4079 = !DILocation(line: 450, column: 25, scope: !2693, inlinedAt: !3871)
!4080 = !DILocation(line: 450, column: 30, scope: !2693, inlinedAt: !3871)
!4081 = !DILocation(line: 450, column: 36, scope: !2693, inlinedAt: !3871)
!4082 = !DILocation(line: 450, column: 8, scope: !2693, inlinedAt: !3871)
!4083 = !DILocation(line: 450, column: 6, scope: !2693, inlinedAt: !3871)
!4084 = !DILocation(line: 451, column: 9, scope: !2693, inlinedAt: !3871)
!4085 = !DILocation(line: 552, column: 3, scope: !2698, inlinedAt: !3872)
!4086 = !DILocation(line: 557, column: 19, scope: !2700, inlinedAt: !3872)
!4087 = !DILocation(line: 557, column: 25, scope: !2700, inlinedAt: !3872)
!4088 = !DILocation(line: 557, column: 9, scope: !2700, inlinedAt: !3872)
!4089 = !DILocation(line: 557, column: 2, scope: !2700, inlinedAt: !3872)
!4090 = !DILocation(line: 558, column: 1, scope: !2700, inlinedAt: !3872)
!4091 = !DILocation(line: 249, column: 12, scope: !3869)
!4092 = !DILocation(line: 249, column: 10, scope: !3869)
!4093 = !DILocation(line: 250, column: 7, scope: !4094)
!4094 = distinct !DILexicalBlock(scope: !3869, file: !3, line: 250, column: 6)
!4095 = !DILocation(line: 250, column: 6, scope: !3869)
!4096 = !DILocation(line: 251, column: 3, scope: !4094)
!4097 = !DILocation(line: 253, column: 24, scope: !4098)
!4098 = distinct !DILexicalBlock(scope: !3869, file: !3, line: 253, column: 6)
!4099 = !DILocation(line: 253, column: 30, scope: !4098)
!4100 = !DILocation(line: 253, column: 6, scope: !4098)
!4101 = !DILocation(line: 253, column: 6, scope: !3869)
!4102 = !DILocation(line: 254, column: 3, scope: !4103)
!4103 = distinct !DILexicalBlock(scope: !4098, file: !3, line: 253, column: 40)
!4104 = !DILocation(line: 256, column: 9, scope: !4103)
!4105 = !DILocation(line: 256, column: 3, scope: !4103)
!4106 = !DILocation(line: 257, column: 3, scope: !4103)
!4107 = !DILocation(line: 260, column: 9, scope: !4108)
!4108 = distinct !DILexicalBlock(scope: !3869, file: !3, line: 260, column: 2)
!4109 = !DILocation(line: 260, column: 7, scope: !4108)
!4110 = !DILocation(line: 260, column: 14, scope: !4111)
!4111 = distinct !DILexicalBlock(scope: !4108, file: !3, line: 260, column: 2)
!4112 = !DILocation(line: 260, column: 16, scope: !4111)
!4113 = !DILocation(line: 260, column: 2, scope: !4108)
!4114 = !DILocation(line: 261, column: 22, scope: !4111)
!4115 = !DILocation(line: 261, column: 3, scope: !4111)
!4116 = !DILocation(line: 261, column: 9, scope: !4111)
!4117 = !DILocation(line: 261, column: 17, scope: !4111)
!4118 = !DILocation(line: 261, column: 20, scope: !4111)
!4119 = !DILocation(line: 260, column: 23, scope: !4111)
!4120 = !DILocation(line: 260, column: 2, scope: !4111)
!4121 = distinct !{!4121, !4113, !4122}
!4122 = !DILocation(line: 261, column: 22, scope: !4108)
!4123 = !DILocation(line: 263, column: 8, scope: !3869)
!4124 = !DILocation(line: 263, column: 2, scope: !3869)
!4125 = !DILocalVariable(name: "__size", scope: !4126, file: !3, line: 269, type: !2518)
!4126 = distinct !DILexicalBlock(scope: !3869, file: !3, line: 269, column: 7)
!4127 = !DILocation(line: 269, column: 7, scope: !4126)
!4128 = !DILocalVariable(name: "__mask", scope: !4126, file: !3, line: 269, type: !2521)
!4129 = !DILocalVariable(name: "__off", scope: !4126, file: !3, line: 269, type: !2518)
!4130 = !DILocalVariable(name: "__shft", scope: !4126, file: !3, line: 269, type: !2518)
!4131 = !DILocalVariable(name: "__res", scope: !4126, file: !3, line: 269, type: !400)
!4132 = !DILocation(line: 269, column: 7, scope: !4133)
!4133 = distinct !DILexicalBlock(scope: !4126, file: !3, line: 269, column: 7)
!4134 = !DILocation(line: 269, column: 5, scope: !3869)
!4135 = !DILocation(line: 270, column: 6, scope: !4136)
!4136 = distinct !DILexicalBlock(scope: !3869, file: !3, line: 270, column: 6)
!4137 = !DILocation(line: 270, column: 6, scope: !3869)
!4138 = !DILocation(line: 271, column: 7, scope: !4139)
!4139 = distinct !DILexicalBlock(scope: !4140, file: !3, line: 271, column: 7)
!4140 = distinct !DILexicalBlock(scope: !4136, file: !3, line: 270, column: 10)
!4141 = !DILocation(line: 271, column: 10, scope: !4139)
!4142 = !DILocation(line: 271, column: 15, scope: !4139)
!4143 = !DILocation(line: 271, column: 18, scope: !4139)
!4144 = !DILocation(line: 271, column: 24, scope: !4139)
!4145 = !DILocation(line: 271, column: 28, scope: !4139)
!4146 = !DILocation(line: 271, column: 7, scope: !4140)
!4147 = !DILocation(line: 272, column: 30, scope: !4148)
!4148 = distinct !DILexicalBlock(scope: !4139, file: !3, line: 271, column: 39)
!4149 = !DILocation(line: 272, column: 19, scope: !4148)
!4150 = !DILocation(line: 272, column: 4, scope: !4148)
!4151 = !DILocation(line: 272, column: 10, scope: !4148)
!4152 = !DILocation(line: 272, column: 14, scope: !4148)
!4153 = !DILocation(line: 272, column: 17, scope: !4148)
!4154 = !DILocalVariable(name: "__size", scope: !4155, file: !3, line: 273, type: !2518)
!4155 = distinct !DILexicalBlock(scope: !4148, file: !3, line: 273, column: 9)
!4156 = !DILocation(line: 273, column: 9, scope: !4155)
!4157 = !DILocalVariable(name: "__mask", scope: !4155, file: !3, line: 273, type: !2521)
!4158 = !DILocalVariable(name: "__off", scope: !4155, file: !3, line: 273, type: !2518)
!4159 = !DILocalVariable(name: "__shft", scope: !4155, file: !3, line: 273, type: !2518)
!4160 = !DILocalVariable(name: "__res", scope: !4155, file: !3, line: 273, type: !400)
!4161 = !DILocation(line: 273, column: 9, scope: !4162)
!4162 = distinct !DILexicalBlock(scope: !4155, file: !3, line: 273, column: 9)
!4163 = !DILocation(line: 273, column: 7, scope: !4148)
!4164 = !DILocalVariable(name: "__size", scope: !4165, file: !3, line: 274, type: !2518)
!4165 = distinct !DILexicalBlock(scope: !4148, file: !3, line: 274, column: 9)
!4166 = !DILocation(line: 274, column: 9, scope: !4165)
!4167 = !DILocalVariable(name: "__mask", scope: !4165, file: !3, line: 274, type: !2521)
!4168 = !DILocalVariable(name: "__off", scope: !4165, file: !3, line: 274, type: !2518)
!4169 = !DILocalVariable(name: "__shft", scope: !4165, file: !3, line: 274, type: !2518)
!4170 = !DILocalVariable(name: "__res", scope: !4165, file: !3, line: 274, type: !400)
!4171 = !DILocation(line: 274, column: 9, scope: !4172)
!4172 = distinct !DILexicalBlock(scope: !4165, file: !3, line: 274, column: 9)
!4173 = !DILocation(line: 274, column: 7, scope: !4148)
!4174 = !DILocation(line: 275, column: 8, scope: !4175)
!4175 = distinct !DILexicalBlock(scope: !4148, file: !3, line: 275, column: 8)
!4176 = !DILocation(line: 275, column: 11, scope: !4175)
!4177 = !DILocation(line: 275, column: 14, scope: !4175)
!4178 = !DILocation(line: 275, column: 8, scope: !4148)
!4179 = !DILocalVariable(name: "__size", scope: !4180, file: !3, line: 276, type: !2518)
!4180 = distinct !DILexicalBlock(scope: !4181, file: !3, line: 276, column: 10)
!4181 = distinct !DILexicalBlock(scope: !4175, file: !3, line: 275, column: 18)
!4182 = !DILocation(line: 276, column: 10, scope: !4180)
!4183 = !DILocalVariable(name: "__mask", scope: !4180, file: !3, line: 276, type: !2521)
!4184 = !DILocalVariable(name: "__off", scope: !4180, file: !3, line: 276, type: !2518)
!4185 = !DILocalVariable(name: "__shft", scope: !4180, file: !3, line: 276, type: !2518)
!4186 = !DILocalVariable(name: "__res", scope: !4180, file: !3, line: 276, type: !400)
!4187 = !DILocation(line: 276, column: 10, scope: !4188)
!4188 = distinct !DILexicalBlock(scope: !4180, file: !3, line: 276, column: 10)
!4189 = !DILocation(line: 276, column: 8, scope: !4181)
!4190 = !DILocation(line: 277, column: 32, scope: !4181)
!4191 = !DILocation(line: 277, column: 35, scope: !4181)
!4192 = !DILocation(line: 277, column: 45, scope: !4181)
!4193 = !DILocation(line: 277, column: 43, scope: !4181)
!4194 = !DILocation(line: 277, column: 5, scope: !4181)
!4195 = !DILocation(line: 277, column: 11, scope: !4181)
!4196 = !DILocation(line: 277, column: 15, scope: !4181)
!4197 = !DILocation(line: 277, column: 29, scope: !4181)
!4198 = !DILocation(line: 278, column: 30, scope: !4181)
!4199 = !DILocation(line: 278, column: 33, scope: !4181)
!4200 = !DILocation(line: 278, column: 5, scope: !4181)
!4201 = !DILocation(line: 278, column: 11, scope: !4181)
!4202 = !DILocation(line: 278, column: 15, scope: !4181)
!4203 = !DILocation(line: 278, column: 28, scope: !4181)
!4204 = !DILocation(line: 279, column: 4, scope: !4181)
!4205 = !DILocation(line: 280, column: 3, scope: !4148)
!4206 = !DILocation(line: 281, column: 4, scope: !4207)
!4207 = distinct !DILexicalBlock(scope: !4139, file: !3, line: 280, column: 10)
!4208 = !DILocation(line: 284, column: 2, scope: !4140)
!4209 = !DILocation(line: 289, column: 12, scope: !3869)
!4210 = !DILocation(line: 289, column: 18, scope: !3869)
!4211 = !DILocation(line: 289, column: 2, scope: !3869)
!4212 = !DILocation(line: 289, column: 10, scope: !3869)
!4213 = !DILocalVariable(name: "__size", scope: !4214, file: !3, line: 290, type: !2518)
!4214 = distinct !DILexicalBlock(scope: !3869, file: !3, line: 290, column: 20)
!4215 = !DILocation(line: 290, column: 20, scope: !4214)
!4216 = !DILocalVariable(name: "__mask", scope: !4214, file: !3, line: 290, type: !2521)
!4217 = !DILocalVariable(name: "__off", scope: !4214, file: !3, line: 290, type: !2518)
!4218 = !DILocalVariable(name: "__shft", scope: !4214, file: !3, line: 290, type: !2518)
!4219 = !DILocalVariable(name: "__res", scope: !4214, file: !3, line: 290, type: !400)
!4220 = !DILocation(line: 290, column: 20, scope: !4221)
!4221 = distinct !DILexicalBlock(scope: !4214, file: !3, line: 290, column: 20)
!4222 = !DILocation(line: 290, column: 20, scope: !3869)
!4223 = !DILocation(line: 290, column: 18, scope: !3869)
!4224 = !DILocation(line: 291, column: 21, scope: !3869)
!4225 = !DILocation(line: 291, column: 27, scope: !3869)
!4226 = !DILocation(line: 291, column: 31, scope: !3869)
!4227 = !DILocation(line: 291, column: 41, scope: !3869)
!4228 = !DILocation(line: 291, column: 44, scope: !3869)
!4229 = !DILocation(line: 0, scope: !3869)
!4230 = !DILocation(line: 291, column: 20, scope: !3869)
!4231 = !DILocation(line: 291, column: 2, scope: !3869)
!4232 = !DILocation(line: 291, column: 8, scope: !3869)
!4233 = !DILocation(line: 291, column: 18, scope: !3869)
!4234 = !DILocation(line: 294, column: 2, scope: !3869)
!4235 = !DILocation(line: 295, column: 1, scope: !3869)
!4236 = distinct !DISubprogram(name: "mmc_read_switch", scope: !3, file: !3, line: 300, type: !2690, scopeLine: 301, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !115)
!4237 = !DILocation(line: 445, column: 72, scope: !2693, inlinedAt: !4238)
!4238 = distinct !DILocation(line: 552, column: 10, scope: !2698, inlinedAt: !4239)
!4239 = distinct !DILocation(line: 314, column: 11, scope: !4236)
!4240 = !DILocation(line: 446, column: 9, scope: !2693, inlinedAt: !4238)
!4241 = !DILocation(line: 446, column: 23, scope: !2693, inlinedAt: !4238)
!4242 = !DILocation(line: 448, column: 8, scope: !2693, inlinedAt: !4238)
!4243 = !DILocation(line: 318, column: 67, scope: !2711, inlinedAt: !4244)
!4244 = distinct !DILocation(line: 553, column: 20, scope: !2698, inlinedAt: !4239)
!4245 = !DILocation(line: 346, column: 58, scope: !2717, inlinedAt: !4246)
!4246 = distinct !DILocation(line: 547, column: 11, scope: !2698, inlinedAt: !4239)
!4247 = !DILocation(line: 472, column: 28, scope: !2723, inlinedAt: !4248)
!4248 = distinct !DILocation(line: 481, column: 9, scope: !2728, inlinedAt: !4249)
!4249 = distinct !DILocation(line: 545, column: 11, scope: !2730, inlinedAt: !4239)
!4250 = !DILocation(line: 472, column: 40, scope: !2723, inlinedAt: !4248)
!4251 = !DILocation(line: 472, column: 60, scope: !2723, inlinedAt: !4248)
!4252 = !DILocation(line: 478, column: 51, scope: !2728, inlinedAt: !4249)
!4253 = !DILocation(line: 478, column: 63, scope: !2728, inlinedAt: !4249)
!4254 = !DILocation(line: 480, column: 15, scope: !2728, inlinedAt: !4249)
!4255 = !DILocation(line: 538, column: 45, scope: !2700, inlinedAt: !4239)
!4256 = !DILocation(line: 538, column: 57, scope: !2700, inlinedAt: !4239)
!4257 = !DILocation(line: 542, column: 16, scope: !2698, inlinedAt: !4239)
!4258 = !DILocalVariable(name: "card", arg: 1, scope: !4236, file: !3, line: 300, type: !66)
!4259 = !DILocation(line: 300, column: 45, scope: !4236)
!4260 = !DILocalVariable(name: "err", scope: !4236, file: !3, line: 302, type: !127)
!4261 = !DILocation(line: 302, column: 6, scope: !4236)
!4262 = !DILocalVariable(name: "status", scope: !4236, file: !3, line: 303, type: !2752)
!4263 = !DILocation(line: 303, column: 6, scope: !4236)
!4264 = !DILocation(line: 305, column: 6, scope: !4265)
!4265 = distinct !DILexicalBlock(scope: !4236, file: !3, line: 305, column: 6)
!4266 = !DILocation(line: 305, column: 12, scope: !4265)
!4267 = !DILocation(line: 305, column: 16, scope: !4265)
!4268 = !DILocation(line: 305, column: 24, scope: !4265)
!4269 = !DILocation(line: 305, column: 6, scope: !4236)
!4270 = !DILocation(line: 306, column: 3, scope: !4265)
!4271 = !DILocation(line: 308, column: 8, scope: !4272)
!4272 = distinct !DILexicalBlock(scope: !4236, file: !3, line: 308, column: 6)
!4273 = !DILocation(line: 308, column: 14, scope: !4272)
!4274 = !DILocation(line: 308, column: 18, scope: !4272)
!4275 = !DILocation(line: 308, column: 27, scope: !4272)
!4276 = !DILocation(line: 308, column: 6, scope: !4236)
!4277 = !DILocation(line: 309, column: 3, scope: !4278)
!4278 = distinct !DILexicalBlock(scope: !4272, file: !3, line: 308, column: 42)
!4279 = !DILocation(line: 311, column: 3, scope: !4278)
!4280 = !DILocation(line: 540, column: 27, scope: !2699, inlinedAt: !4239)
!4281 = !DILocation(line: 540, column: 6, scope: !2699, inlinedAt: !4239)
!4282 = !DILocation(line: 540, column: 6, scope: !2700, inlinedAt: !4239)
!4283 = !DILocation(line: 544, column: 7, scope: !2730, inlinedAt: !4239)
!4284 = !DILocation(line: 544, column: 12, scope: !2730, inlinedAt: !4239)
!4285 = !DILocation(line: 544, column: 7, scope: !2698, inlinedAt: !4239)
!4286 = !DILocation(line: 545, column: 25, scope: !2730, inlinedAt: !4239)
!4287 = !DILocation(line: 545, column: 31, scope: !2730, inlinedAt: !4239)
!4288 = !DILocation(line: 480, column: 33, scope: !2728, inlinedAt: !4249)
!4289 = !DILocation(line: 480, column: 23, scope: !2728, inlinedAt: !4249)
!4290 = !DILocation(line: 481, column: 29, scope: !2728, inlinedAt: !4249)
!4291 = !DILocation(line: 481, column: 35, scope: !2728, inlinedAt: !4249)
!4292 = !DILocation(line: 481, column: 42, scope: !2728, inlinedAt: !4249)
!4293 = !DILocation(line: 474, column: 23, scope: !2723, inlinedAt: !4248)
!4294 = !DILocation(line: 474, column: 29, scope: !2723, inlinedAt: !4248)
!4295 = !DILocation(line: 474, column: 36, scope: !2723, inlinedAt: !4248)
!4296 = !DILocation(line: 474, column: 9, scope: !2723, inlinedAt: !4248)
!4297 = !DILocation(line: 545, column: 4, scope: !2730, inlinedAt: !4239)
!4298 = !DILocation(line: 547, column: 25, scope: !2698, inlinedAt: !4239)
!4299 = !DILocation(line: 348, column: 7, scope: !2802, inlinedAt: !4246)
!4300 = !DILocation(line: 348, column: 6, scope: !2717, inlinedAt: !4246)
!4301 = !DILocation(line: 349, column: 3, scope: !2802, inlinedAt: !4246)
!4302 = !DILocation(line: 351, column: 6, scope: !2806, inlinedAt: !4246)
!4303 = !DILocation(line: 351, column: 11, scope: !2806, inlinedAt: !4246)
!4304 = !DILocation(line: 351, column: 6, scope: !2717, inlinedAt: !4246)
!4305 = !DILocation(line: 352, column: 3, scope: !2806, inlinedAt: !4246)
!4306 = !DILocation(line: 354, column: 32, scope: !2811, inlinedAt: !4246)
!4307 = !DILocation(line: 354, column: 37, scope: !2811, inlinedAt: !4246)
!4308 = !DILocation(line: 354, column: 42, scope: !2811, inlinedAt: !4246)
!4309 = !DILocation(line: 354, column: 45, scope: !2811, inlinedAt: !4246)
!4310 = !DILocation(line: 354, column: 50, scope: !2811, inlinedAt: !4246)
!4311 = !DILocation(line: 354, column: 6, scope: !2717, inlinedAt: !4246)
!4312 = !DILocation(line: 355, column: 3, scope: !2811, inlinedAt: !4246)
!4313 = !DILocation(line: 356, column: 32, scope: !2819, inlinedAt: !4246)
!4314 = !DILocation(line: 356, column: 37, scope: !2819, inlinedAt: !4246)
!4315 = !DILocation(line: 356, column: 43, scope: !2819, inlinedAt: !4246)
!4316 = !DILocation(line: 356, column: 46, scope: !2819, inlinedAt: !4246)
!4317 = !DILocation(line: 356, column: 51, scope: !2819, inlinedAt: !4246)
!4318 = !DILocation(line: 356, column: 6, scope: !2717, inlinedAt: !4246)
!4319 = !DILocation(line: 357, column: 3, scope: !2819, inlinedAt: !4246)
!4320 = !DILocation(line: 358, column: 6, scope: !2827, inlinedAt: !4246)
!4321 = !DILocation(line: 358, column: 11, scope: !2827, inlinedAt: !4246)
!4322 = !DILocation(line: 358, column: 6, scope: !2717, inlinedAt: !4246)
!4323 = !DILocation(line: 358, column: 26, scope: !2827, inlinedAt: !4246)
!4324 = !DILocation(line: 359, column: 6, scope: !2832, inlinedAt: !4246)
!4325 = !DILocation(line: 359, column: 11, scope: !2832, inlinedAt: !4246)
!4326 = !DILocation(line: 359, column: 6, scope: !2717, inlinedAt: !4246)
!4327 = !DILocation(line: 359, column: 26, scope: !2832, inlinedAt: !4246)
!4328 = !DILocation(line: 360, column: 6, scope: !2837, inlinedAt: !4246)
!4329 = !DILocation(line: 360, column: 11, scope: !2837, inlinedAt: !4246)
!4330 = !DILocation(line: 360, column: 6, scope: !2717, inlinedAt: !4246)
!4331 = !DILocation(line: 360, column: 26, scope: !2837, inlinedAt: !4246)
!4332 = !DILocation(line: 361, column: 6, scope: !2842, inlinedAt: !4246)
!4333 = !DILocation(line: 361, column: 11, scope: !2842, inlinedAt: !4246)
!4334 = !DILocation(line: 361, column: 6, scope: !2717, inlinedAt: !4246)
!4335 = !DILocation(line: 361, column: 26, scope: !2842, inlinedAt: !4246)
!4336 = !DILocation(line: 362, column: 6, scope: !2847, inlinedAt: !4246)
!4337 = !DILocation(line: 362, column: 11, scope: !2847, inlinedAt: !4246)
!4338 = !DILocation(line: 362, column: 6, scope: !2717, inlinedAt: !4246)
!4339 = !DILocation(line: 362, column: 26, scope: !2847, inlinedAt: !4246)
!4340 = !DILocation(line: 363, column: 6, scope: !2852, inlinedAt: !4246)
!4341 = !DILocation(line: 363, column: 11, scope: !2852, inlinedAt: !4246)
!4342 = !DILocation(line: 363, column: 6, scope: !2717, inlinedAt: !4246)
!4343 = !DILocation(line: 363, column: 26, scope: !2852, inlinedAt: !4246)
!4344 = !DILocation(line: 364, column: 6, scope: !2857, inlinedAt: !4246)
!4345 = !DILocation(line: 364, column: 11, scope: !2857, inlinedAt: !4246)
!4346 = !DILocation(line: 364, column: 6, scope: !2717, inlinedAt: !4246)
!4347 = !DILocation(line: 364, column: 26, scope: !2857, inlinedAt: !4246)
!4348 = !DILocation(line: 365, column: 6, scope: !2862, inlinedAt: !4246)
!4349 = !DILocation(line: 365, column: 11, scope: !2862, inlinedAt: !4246)
!4350 = !DILocation(line: 365, column: 6, scope: !2717, inlinedAt: !4246)
!4351 = !DILocation(line: 365, column: 26, scope: !2862, inlinedAt: !4246)
!4352 = !DILocation(line: 366, column: 6, scope: !2867, inlinedAt: !4246)
!4353 = !DILocation(line: 366, column: 11, scope: !2867, inlinedAt: !4246)
!4354 = !DILocation(line: 366, column: 6, scope: !2717, inlinedAt: !4246)
!4355 = !DILocation(line: 366, column: 26, scope: !2867, inlinedAt: !4246)
!4356 = !DILocation(line: 367, column: 6, scope: !2872, inlinedAt: !4246)
!4357 = !DILocation(line: 367, column: 11, scope: !2872, inlinedAt: !4246)
!4358 = !DILocation(line: 367, column: 6, scope: !2717, inlinedAt: !4246)
!4359 = !DILocation(line: 367, column: 26, scope: !2872, inlinedAt: !4246)
!4360 = !DILocation(line: 368, column: 6, scope: !2877, inlinedAt: !4246)
!4361 = !DILocation(line: 368, column: 11, scope: !2877, inlinedAt: !4246)
!4362 = !DILocation(line: 368, column: 6, scope: !2717, inlinedAt: !4246)
!4363 = !DILocation(line: 368, column: 26, scope: !2877, inlinedAt: !4246)
!4364 = !DILocation(line: 369, column: 6, scope: !2882, inlinedAt: !4246)
!4365 = !DILocation(line: 369, column: 11, scope: !2882, inlinedAt: !4246)
!4366 = !DILocation(line: 369, column: 6, scope: !2717, inlinedAt: !4246)
!4367 = !DILocation(line: 369, column: 26, scope: !2882, inlinedAt: !4246)
!4368 = !DILocation(line: 370, column: 6, scope: !2887, inlinedAt: !4246)
!4369 = !DILocation(line: 370, column: 11, scope: !2887, inlinedAt: !4246)
!4370 = !DILocation(line: 370, column: 6, scope: !2717, inlinedAt: !4246)
!4371 = !DILocation(line: 370, column: 26, scope: !2887, inlinedAt: !4246)
!4372 = !DILocation(line: 371, column: 6, scope: !2892, inlinedAt: !4246)
!4373 = !DILocation(line: 371, column: 11, scope: !2892, inlinedAt: !4246)
!4374 = !DILocation(line: 371, column: 6, scope: !2717, inlinedAt: !4246)
!4375 = !DILocation(line: 371, column: 26, scope: !2892, inlinedAt: !4246)
!4376 = !DILocation(line: 372, column: 6, scope: !2897, inlinedAt: !4246)
!4377 = !DILocation(line: 372, column: 11, scope: !2897, inlinedAt: !4246)
!4378 = !DILocation(line: 372, column: 6, scope: !2717, inlinedAt: !4246)
!4379 = !DILocation(line: 372, column: 26, scope: !2897, inlinedAt: !4246)
!4380 = !DILocation(line: 373, column: 6, scope: !2902, inlinedAt: !4246)
!4381 = !DILocation(line: 373, column: 11, scope: !2902, inlinedAt: !4246)
!4382 = !DILocation(line: 373, column: 6, scope: !2717, inlinedAt: !4246)
!4383 = !DILocation(line: 373, column: 26, scope: !2902, inlinedAt: !4246)
!4384 = !DILocation(line: 374, column: 6, scope: !2907, inlinedAt: !4246)
!4385 = !DILocation(line: 374, column: 11, scope: !2907, inlinedAt: !4246)
!4386 = !DILocation(line: 374, column: 6, scope: !2717, inlinedAt: !4246)
!4387 = !DILocation(line: 374, column: 26, scope: !2907, inlinedAt: !4246)
!4388 = !DILocation(line: 375, column: 6, scope: !2912, inlinedAt: !4246)
!4389 = !DILocation(line: 375, column: 11, scope: !2912, inlinedAt: !4246)
!4390 = !DILocation(line: 375, column: 6, scope: !2717, inlinedAt: !4246)
!4391 = !DILocation(line: 375, column: 27, scope: !2912, inlinedAt: !4246)
!4392 = !DILocation(line: 376, column: 6, scope: !2917, inlinedAt: !4246)
!4393 = !DILocation(line: 376, column: 11, scope: !2917, inlinedAt: !4246)
!4394 = !DILocation(line: 376, column: 6, scope: !2717, inlinedAt: !4246)
!4395 = !DILocation(line: 376, column: 32, scope: !2917, inlinedAt: !4246)
!4396 = !DILocation(line: 377, column: 6, scope: !2922, inlinedAt: !4246)
!4397 = !DILocation(line: 377, column: 11, scope: !2922, inlinedAt: !4246)
!4398 = !DILocation(line: 377, column: 6, scope: !2717, inlinedAt: !4246)
!4399 = !DILocation(line: 377, column: 32, scope: !2922, inlinedAt: !4246)
!4400 = !DILocation(line: 378, column: 6, scope: !2927, inlinedAt: !4246)
!4401 = !DILocation(line: 378, column: 11, scope: !2927, inlinedAt: !4246)
!4402 = !DILocation(line: 378, column: 6, scope: !2717, inlinedAt: !4246)
!4403 = !DILocation(line: 378, column: 32, scope: !2927, inlinedAt: !4246)
!4404 = !DILocation(line: 379, column: 6, scope: !2932, inlinedAt: !4246)
!4405 = !DILocation(line: 379, column: 11, scope: !2932, inlinedAt: !4246)
!4406 = !DILocation(line: 379, column: 6, scope: !2717, inlinedAt: !4246)
!4407 = !DILocation(line: 379, column: 33, scope: !2932, inlinedAt: !4246)
!4408 = !DILocation(line: 380, column: 6, scope: !2937, inlinedAt: !4246)
!4409 = !DILocation(line: 380, column: 11, scope: !2937, inlinedAt: !4246)
!4410 = !DILocation(line: 380, column: 6, scope: !2717, inlinedAt: !4246)
!4411 = !DILocation(line: 380, column: 33, scope: !2937, inlinedAt: !4246)
!4412 = !DILocation(line: 381, column: 6, scope: !2942, inlinedAt: !4246)
!4413 = !DILocation(line: 381, column: 11, scope: !2942, inlinedAt: !4246)
!4414 = !DILocation(line: 381, column: 6, scope: !2717, inlinedAt: !4246)
!4415 = !DILocation(line: 381, column: 33, scope: !2942, inlinedAt: !4246)
!4416 = !DILocation(line: 382, column: 2, scope: !2947, inlinedAt: !4246)
!4417 = !DILocation(line: 382, column: 2, scope: !2951, inlinedAt: !4246)
!4418 = !DILocation(line: 382, column: 2, scope: !2952, inlinedAt: !4246)
!4419 = !DILocation(line: 386, column: 1, scope: !2717, inlinedAt: !4246)
!4420 = !DILocation(line: 547, column: 9, scope: !2698, inlinedAt: !4239)
!4421 = !DILocation(line: 549, column: 8, scope: !2958, inlinedAt: !4239)
!4422 = !DILocation(line: 549, column: 7, scope: !2698, inlinedAt: !4239)
!4423 = !DILocation(line: 550, column: 4, scope: !2958, inlinedAt: !4239)
!4424 = !DILocation(line: 553, column: 33, scope: !2698, inlinedAt: !4239)
!4425 = !DILocation(line: 325, column: 6, scope: !2963, inlinedAt: !4244)
!4426 = !DILocation(line: 325, column: 6, scope: !2711, inlinedAt: !4244)
!4427 = !DILocation(line: 326, column: 3, scope: !2963, inlinedAt: !4244)
!4428 = !DILocation(line: 332, column: 9, scope: !2711, inlinedAt: !4244)
!4429 = !DILocation(line: 332, column: 15, scope: !2711, inlinedAt: !4244)
!4430 = !DILocation(line: 332, column: 2, scope: !2711, inlinedAt: !4244)
!4431 = !DILocation(line: 336, column: 1, scope: !2711, inlinedAt: !4244)
!4432 = !DILocation(line: 553, column: 5, scope: !2698, inlinedAt: !4239)
!4433 = !DILocation(line: 553, column: 41, scope: !2698, inlinedAt: !4239)
!4434 = !DILocation(line: 554, column: 5, scope: !2698, inlinedAt: !4239)
!4435 = !DILocation(line: 554, column: 12, scope: !2698, inlinedAt: !4239)
!4436 = !DILocation(line: 448, column: 31, scope: !2693, inlinedAt: !4238)
!4437 = !DILocation(line: 448, column: 34, scope: !2693, inlinedAt: !4238)
!4438 = !DILocation(line: 448, column: 14, scope: !2693, inlinedAt: !4238)
!4439 = !DILocation(line: 450, column: 22, scope: !2693, inlinedAt: !4238)
!4440 = !DILocation(line: 450, column: 25, scope: !2693, inlinedAt: !4238)
!4441 = !DILocation(line: 450, column: 30, scope: !2693, inlinedAt: !4238)
!4442 = !DILocation(line: 450, column: 36, scope: !2693, inlinedAt: !4238)
!4443 = !DILocation(line: 450, column: 8, scope: !2693, inlinedAt: !4238)
!4444 = !DILocation(line: 450, column: 6, scope: !2693, inlinedAt: !4238)
!4445 = !DILocation(line: 451, column: 9, scope: !2693, inlinedAt: !4238)
!4446 = !DILocation(line: 552, column: 3, scope: !2698, inlinedAt: !4239)
!4447 = !DILocation(line: 557, column: 19, scope: !2700, inlinedAt: !4239)
!4448 = !DILocation(line: 557, column: 25, scope: !2700, inlinedAt: !4239)
!4449 = !DILocation(line: 557, column: 9, scope: !2700, inlinedAt: !4239)
!4450 = !DILocation(line: 557, column: 2, scope: !2700, inlinedAt: !4239)
!4451 = !DILocation(line: 558, column: 1, scope: !2700, inlinedAt: !4239)
!4452 = !DILocation(line: 314, column: 9, scope: !4236)
!4453 = !DILocation(line: 315, column: 7, scope: !4454)
!4454 = distinct !DILexicalBlock(scope: !4236, file: !3, line: 315, column: 6)
!4455 = !DILocation(line: 315, column: 6, scope: !4236)
!4456 = !DILocation(line: 316, column: 3, scope: !4454)
!4457 = !DILocation(line: 323, column: 22, scope: !4236)
!4458 = !DILocation(line: 323, column: 37, scope: !4236)
!4459 = !DILocation(line: 323, column: 8, scope: !4236)
!4460 = !DILocation(line: 323, column: 6, scope: !4236)
!4461 = !DILocation(line: 324, column: 6, scope: !4462)
!4462 = distinct !DILexicalBlock(scope: !4236, file: !3, line: 324, column: 6)
!4463 = !DILocation(line: 324, column: 6, scope: !4236)
!4464 = !DILocation(line: 329, column: 7, scope: !4465)
!4465 = distinct !DILexicalBlock(scope: !4466, file: !3, line: 329, column: 7)
!4466 = distinct !DILexicalBlock(scope: !4462, file: !3, line: 324, column: 11)
!4467 = !DILocation(line: 329, column: 11, scope: !4465)
!4468 = !DILocation(line: 329, column: 22, scope: !4465)
!4469 = !DILocation(line: 329, column: 25, scope: !4465)
!4470 = !DILocation(line: 329, column: 29, scope: !4465)
!4471 = !DILocation(line: 329, column: 40, scope: !4465)
!4472 = !DILocation(line: 329, column: 43, scope: !4465)
!4473 = !DILocation(line: 329, column: 47, scope: !4465)
!4474 = !DILocation(line: 329, column: 7, scope: !4466)
!4475 = !DILocation(line: 330, column: 4, scope: !4465)
!4476 = !DILocation(line: 332, column: 3, scope: !4466)
!4477 = !DILocation(line: 334, column: 7, scope: !4466)
!4478 = !DILocation(line: 336, column: 3, scope: !4466)
!4479 = !DILocation(line: 339, column: 6, scope: !4480)
!4480 = distinct !DILexicalBlock(scope: !4236, file: !3, line: 339, column: 6)
!4481 = !DILocation(line: 339, column: 17, scope: !4480)
!4482 = !DILocation(line: 339, column: 6, scope: !4236)
!4483 = !DILocation(line: 340, column: 3, scope: !4480)
!4484 = !DILocation(line: 340, column: 9, scope: !4480)
!4485 = !DILocation(line: 340, column: 17, scope: !4480)
!4486 = !DILocation(line: 340, column: 28, scope: !4480)
!4487 = !DILocation(line: 342, column: 6, scope: !4488)
!4488 = distinct !DILexicalBlock(scope: !4236, file: !3, line: 342, column: 6)
!4489 = !DILocation(line: 342, column: 12, scope: !4488)
!4490 = !DILocation(line: 342, column: 16, scope: !4488)
!4491 = !DILocation(line: 342, column: 6, scope: !4236)
!4492 = !DILocation(line: 343, column: 32, scope: !4493)
!4493 = distinct !DILexicalBlock(scope: !4488, file: !3, line: 342, column: 27)
!4494 = !DILocation(line: 343, column: 3, scope: !4493)
!4495 = !DILocation(line: 343, column: 9, scope: !4493)
!4496 = !DILocation(line: 343, column: 17, scope: !4493)
!4497 = !DILocation(line: 343, column: 30, scope: !4493)
!4498 = !DILocation(line: 345, column: 32, scope: !4493)
!4499 = !DILocation(line: 345, column: 3, scope: !4493)
!4500 = !DILocation(line: 345, column: 9, scope: !4493)
!4501 = !DILocation(line: 345, column: 17, scope: !4493)
!4502 = !DILocation(line: 345, column: 30, scope: !4493)
!4503 = !DILocation(line: 346, column: 34, scope: !4493)
!4504 = !DILocation(line: 346, column: 46, scope: !4493)
!4505 = !DILocation(line: 346, column: 56, scope: !4493)
!4506 = !DILocation(line: 346, column: 44, scope: !4493)
!4507 = !DILocation(line: 346, column: 3, scope: !4493)
!4508 = !DILocation(line: 346, column: 9, scope: !4493)
!4509 = !DILocation(line: 346, column: 17, scope: !4493)
!4510 = !DILocation(line: 346, column: 32, scope: !4493)
!4511 = !DILocation(line: 347, column: 2, scope: !4493)
!4512 = !DILabel(scope: !4236, name: "out", file: !3, line: 349)
!4513 = !DILocation(line: 349, column: 1, scope: !4236)
!4514 = !DILocation(line: 350, column: 8, scope: !4236)
!4515 = !DILocation(line: 350, column: 2, scope: !4236)
!4516 = !DILocation(line: 352, column: 9, scope: !4236)
!4517 = !DILocation(line: 352, column: 2, scope: !4236)
!4518 = !DILocation(line: 353, column: 1, scope: !4236)
!4519 = distinct !DISubprogram(name: "mmc_sd_get_ro", scope: !3, file: !3, line: 881, type: !2015, scopeLine: 882, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !115)
!4520 = !DILocalVariable(name: "host", arg: 1, scope: !4519, file: !3, line: 881, type: !71)
!4521 = !DILocation(line: 881, column: 43, scope: !4519)
!4522 = !DILocalVariable(name: "ro", scope: !4519, file: !3, line: 883, type: !127)
!4523 = !DILocation(line: 883, column: 6, scope: !4519)
!4524 = !DILocation(line: 890, column: 6, scope: !4525)
!4525 = distinct !DILexicalBlock(scope: !4519, file: !3, line: 890, column: 6)
!4526 = !DILocation(line: 890, column: 12, scope: !4525)
!4527 = !DILocation(line: 890, column: 18, scope: !4525)
!4528 = !DILocation(line: 890, column: 6, scope: !4519)
!4529 = !DILocation(line: 891, column: 3, scope: !4525)
!4530 = !DILocation(line: 893, column: 7, scope: !4531)
!4531 = distinct !DILexicalBlock(scope: !4519, file: !3, line: 893, column: 6)
!4532 = !DILocation(line: 893, column: 13, scope: !4531)
!4533 = !DILocation(line: 893, column: 18, scope: !4531)
!4534 = !DILocation(line: 893, column: 6, scope: !4519)
!4535 = !DILocation(line: 894, column: 3, scope: !4531)
!4536 = !DILocation(line: 896, column: 7, scope: !4519)
!4537 = !DILocation(line: 896, column: 13, scope: !4519)
!4538 = !DILocation(line: 896, column: 18, scope: !4519)
!4539 = !DILocation(line: 896, column: 25, scope: !4519)
!4540 = !DILocation(line: 896, column: 5, scope: !4519)
!4541 = !DILocation(line: 898, column: 9, scope: !4519)
!4542 = !DILocation(line: 898, column: 2, scope: !4519)
!4543 = !DILocation(line: 899, column: 1, scope: !4519)
!4544 = distinct !DISubprogram(name: "mmc_sd_get_max_clock", scope: !3, file: !3, line: 965, type: !4545, scopeLine: 966, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !115)
!4545 = !DISubroutineType(types: !4546)
!4546 = !{!7, !66}
!4547 = !DILocalVariable(name: "card", arg: 1, scope: !4544, file: !3, line: 965, type: !66)
!4548 = !DILocation(line: 965, column: 48, scope: !4544)
!4549 = !DILocalVariable(name: "max_dtr", scope: !4544, file: !3, line: 967, type: !7)
!4550 = !DILocation(line: 967, column: 11, scope: !4544)
!4551 = !DILocation(line: 969, column: 18, scope: !4552)
!4552 = distinct !DILexicalBlock(scope: !4544, file: !3, line: 969, column: 6)
!4553 = !DILocation(line: 969, column: 6, scope: !4552)
!4554 = !DILocation(line: 969, column: 6, scope: !4544)
!4555 = !DILocation(line: 970, column: 7, scope: !4556)
!4556 = distinct !DILexicalBlock(scope: !4557, file: !3, line: 970, column: 7)
!4557 = distinct !DILexicalBlock(scope: !4552, file: !3, line: 969, column: 25)
!4558 = !DILocation(line: 970, column: 17, scope: !4556)
!4559 = !DILocation(line: 970, column: 23, scope: !4556)
!4560 = !DILocation(line: 970, column: 31, scope: !4556)
!4561 = !DILocation(line: 970, column: 15, scope: !4556)
!4562 = !DILocation(line: 970, column: 7, scope: !4557)
!4563 = !DILocation(line: 971, column: 14, scope: !4556)
!4564 = !DILocation(line: 971, column: 20, scope: !4556)
!4565 = !DILocation(line: 971, column: 28, scope: !4556)
!4566 = !DILocation(line: 971, column: 12, scope: !4556)
!4567 = !DILocation(line: 971, column: 4, scope: !4556)
!4568 = !DILocation(line: 972, column: 2, scope: !4557)
!4569 = !DILocation(line: 972, column: 13, scope: !4570)
!4570 = distinct !DILexicalBlock(scope: !4552, file: !3, line: 972, column: 13)
!4571 = !DILocation(line: 972, column: 23, scope: !4570)
!4572 = !DILocation(line: 972, column: 29, scope: !4570)
!4573 = !DILocation(line: 972, column: 33, scope: !4570)
!4574 = !DILocation(line: 972, column: 21, scope: !4570)
!4575 = !DILocation(line: 972, column: 13, scope: !4552)
!4576 = !DILocation(line: 973, column: 13, scope: !4577)
!4577 = distinct !DILexicalBlock(scope: !4570, file: !3, line: 972, column: 42)
!4578 = !DILocation(line: 973, column: 19, scope: !4577)
!4579 = !DILocation(line: 973, column: 23, scope: !4577)
!4580 = !DILocation(line: 973, column: 11, scope: !4577)
!4581 = !DILocation(line: 974, column: 2, scope: !4577)
!4582 = !DILocation(line: 976, column: 9, scope: !4544)
!4583 = !DILocation(line: 976, column: 2, scope: !4544)
!4584 = distinct !DISubprogram(name: "mmc_card_hs", scope: !73, file: !73, line: 568, type: !2690, scopeLine: 569, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !115)
!4585 = !DILocalVariable(name: "card", arg: 1, scope: !4584, file: !73, line: 568, type: !66)
!4586 = !DILocation(line: 568, column: 48, scope: !4584)
!4587 = !DILocation(line: 570, column: 9, scope: !4584)
!4588 = !DILocation(line: 570, column: 15, scope: !4584)
!4589 = !DILocation(line: 570, column: 21, scope: !4584)
!4590 = !DILocation(line: 570, column: 25, scope: !4584)
!4591 = !DILocation(line: 570, column: 32, scope: !4584)
!4592 = !DILocation(line: 570, column: 52, scope: !4584)
!4593 = !DILocation(line: 571, column: 3, scope: !4584)
!4594 = !DILocation(line: 571, column: 9, scope: !4584)
!4595 = !DILocation(line: 571, column: 15, scope: !4584)
!4596 = !DILocation(line: 571, column: 19, scope: !4584)
!4597 = !DILocation(line: 571, column: 26, scope: !4584)
!4598 = !DILocation(line: 570, column: 2, scope: !4584)
!4599 = distinct !DISubprogram(name: "mmc_attach_sd", scope: !3, file: !3, line: 1333, type: !2015, scopeLine: 1334, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !115)
!4600 = !DILocalVariable(name: "host", arg: 1, scope: !4599, file: !3, line: 1333, type: !71)
!4601 = !DILocation(line: 1333, column: 36, scope: !4599)
!4602 = !DILocalVariable(name: "err", scope: !4599, file: !3, line: 1335, type: !127)
!4603 = !DILocation(line: 1335, column: 6, scope: !4599)
!4604 = !DILocalVariable(name: "ocr", scope: !4599, file: !3, line: 1336, type: !400)
!4605 = !DILocation(line: 1336, column: 6, scope: !4599)
!4606 = !DILocalVariable(name: "rocr", scope: !4599, file: !3, line: 1336, type: !400)
!4607 = !DILocation(line: 1336, column: 11, scope: !4599)
!4608 = !DILocalVariable(name: "__ret_warn_on", scope: !4609, file: !3, line: 1338, type: !127)
!4609 = distinct !DILexicalBlock(scope: !4599, file: !3, line: 1338, column: 2)
!4610 = !DILocation(line: 1338, column: 2, scope: !4609)
!4611 = !DILocation(line: 1338, column: 2, scope: !4612)
!4612 = distinct !DILexicalBlock(scope: !4609, file: !3, line: 1338, column: 2)
!4613 = !DILocation(line: 1338, column: 2, scope: !4614)
!4614 = distinct !DILexicalBlock(scope: !4612, file: !3, line: 1338, column: 2)
!4615 = !DILocation(line: 1338, column: 2, scope: !4616)
!4616 = distinct !DILexicalBlock(scope: !4614, file: !3, line: 1338, column: 2)
!4617 = !DILocation(line: 1338, column: 2, scope: !4618)
!4618 = distinct !DILexicalBlock(scope: !4614, file: !3, line: 1338, column: 2)
!4619 = !{i32 -2143436671, i32 -2143436642, i32 -2143436596, i32 -2143436538, i32 -2143436484, i32 -2143436430, i32 -2143436375, i32 -2143436344}
!4620 = !DILocation(line: 1338, column: 2, scope: !4621)
!4621 = distinct !DILexicalBlock(scope: !4614, file: !3, line: 1338, column: 2)
!4622 = !{i32 -2143435940, i32 -2143435933, i32 -2143435881, i32 -2143435850, i32 -2143435820}
!4623 = !DILocation(line: 1338, column: 2, scope: !4624)
!4624 = distinct !DILexicalBlock(scope: !4614, file: !3, line: 1338, column: 2)
!4625 = !DILocation(line: 1340, column: 29, scope: !4599)
!4626 = !DILocation(line: 1340, column: 8, scope: !4599)
!4627 = !DILocation(line: 1340, column: 6, scope: !4599)
!4628 = !DILocation(line: 1341, column: 6, scope: !4629)
!4629 = distinct !DILexicalBlock(scope: !4599, file: !3, line: 1341, column: 6)
!4630 = !DILocation(line: 1341, column: 6, scope: !4599)
!4631 = !DILocation(line: 1342, column: 10, scope: !4629)
!4632 = !DILocation(line: 1342, column: 3, scope: !4629)
!4633 = !DILocation(line: 1344, column: 17, scope: !4599)
!4634 = !DILocation(line: 1344, column: 2, scope: !4599)
!4635 = !DILocation(line: 1345, column: 6, scope: !4636)
!4636 = distinct !DILexicalBlock(scope: !4599, file: !3, line: 1345, column: 6)
!4637 = !DILocation(line: 1345, column: 12, scope: !4636)
!4638 = !DILocation(line: 1345, column: 6, scope: !4599)
!4639 = !DILocation(line: 1346, column: 21, scope: !4636)
!4640 = !DILocation(line: 1346, column: 27, scope: !4636)
!4641 = !DILocation(line: 1346, column: 3, scope: !4636)
!4642 = !DILocation(line: 1346, column: 9, scope: !4636)
!4643 = !DILocation(line: 1346, column: 19, scope: !4636)
!4644 = !DILocation(line: 1351, column: 6, scope: !4645)
!4645 = distinct !DILexicalBlock(scope: !4599, file: !3, line: 1351, column: 6)
!4646 = !DILocation(line: 1351, column: 6, scope: !4599)
!4647 = !DILocation(line: 1352, column: 15, scope: !4648)
!4648 = distinct !DILexicalBlock(scope: !4645, file: !3, line: 1351, column: 29)
!4649 = !DILocation(line: 1352, column: 3, scope: !4648)
!4650 = !DILocation(line: 1354, column: 26, scope: !4648)
!4651 = !DILocation(line: 1354, column: 9, scope: !4648)
!4652 = !DILocation(line: 1354, column: 7, scope: !4648)
!4653 = !DILocation(line: 1355, column: 7, scope: !4654)
!4654 = distinct !DILexicalBlock(scope: !4648, file: !3, line: 1355, column: 7)
!4655 = !DILocation(line: 1355, column: 7, scope: !4648)
!4656 = !DILocation(line: 1356, column: 4, scope: !4654)
!4657 = !DILocation(line: 1357, column: 2, scope: !4648)
!4658 = !DILocation(line: 1363, column: 6, scope: !4599)
!4659 = !DILocation(line: 1365, column: 28, scope: !4599)
!4660 = !DILocation(line: 1365, column: 34, scope: !4599)
!4661 = !DILocation(line: 1365, column: 9, scope: !4599)
!4662 = !DILocation(line: 1365, column: 7, scope: !4599)
!4663 = !DILocation(line: 1370, column: 7, scope: !4664)
!4664 = distinct !DILexicalBlock(scope: !4599, file: !3, line: 1370, column: 6)
!4665 = !DILocation(line: 1370, column: 6, scope: !4599)
!4666 = !DILocation(line: 1371, column: 7, scope: !4667)
!4667 = distinct !DILexicalBlock(scope: !4664, file: !3, line: 1370, column: 13)
!4668 = !DILocation(line: 1372, column: 3, scope: !4667)
!4669 = !DILocation(line: 1378, column: 25, scope: !4599)
!4670 = !DILocation(line: 1378, column: 31, scope: !4599)
!4671 = !DILocation(line: 1378, column: 8, scope: !4599)
!4672 = !DILocation(line: 1378, column: 6, scope: !4599)
!4673 = !DILocation(line: 1379, column: 6, scope: !4674)
!4674 = distinct !DILexicalBlock(scope: !4599, file: !3, line: 1379, column: 6)
!4675 = !DILocation(line: 1379, column: 6, scope: !4599)
!4676 = !DILocation(line: 1380, column: 3, scope: !4674)
!4677 = !DILocation(line: 1382, column: 19, scope: !4599)
!4678 = !DILocation(line: 1382, column: 2, scope: !4599)
!4679 = !DILocation(line: 1383, column: 21, scope: !4599)
!4680 = !DILocation(line: 1383, column: 27, scope: !4599)
!4681 = !DILocation(line: 1383, column: 8, scope: !4599)
!4682 = !DILocation(line: 1383, column: 6, scope: !4599)
!4683 = !DILocation(line: 1384, column: 6, scope: !4684)
!4684 = distinct !DILexicalBlock(scope: !4599, file: !3, line: 1384, column: 6)
!4685 = !DILocation(line: 1384, column: 6, scope: !4599)
!4686 = !DILocation(line: 1385, column: 3, scope: !4684)
!4687 = !DILocation(line: 1387, column: 17, scope: !4599)
!4688 = !DILocation(line: 1387, column: 2, scope: !4599)
!4689 = !DILocation(line: 1388, column: 2, scope: !4599)
!4690 = !DILabel(scope: !4599, name: "remove_card", file: !3, line: 1390)
!4691 = !DILocation(line: 1390, column: 1, scope: !4599)
!4692 = !DILocation(line: 1391, column: 18, scope: !4599)
!4693 = !DILocation(line: 1391, column: 24, scope: !4599)
!4694 = !DILocation(line: 1391, column: 2, scope: !4599)
!4695 = !DILocation(line: 1392, column: 2, scope: !4599)
!4696 = !DILocation(line: 1392, column: 8, scope: !4599)
!4697 = !DILocation(line: 1392, column: 13, scope: !4599)
!4698 = !DILocation(line: 1393, column: 17, scope: !4599)
!4699 = !DILocation(line: 1393, column: 2, scope: !4599)
!4700 = !DILabel(scope: !4599, name: "err", file: !3, line: 1394)
!4701 = !DILocation(line: 1394, column: 1, scope: !4599)
!4702 = !DILocation(line: 1395, column: 17, scope: !4599)
!4703 = !DILocation(line: 1395, column: 2, scope: !4599)
!4704 = !DILocation(line: 1397, column: 2, scope: !4599)
!4705 = !DILocation(line: 1400, column: 9, scope: !4599)
!4706 = !DILocation(line: 1400, column: 2, scope: !4599)
!4707 = !DILocation(line: 1401, column: 1, scope: !4599)
!4708 = distinct !DISubprogram(name: "mmc_sd_init_card", scope: !3, file: !3, line: 997, type: !4709, scopeLine: 999, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !115)
!4709 = !DISubroutineType(types: !4710)
!4710 = !{!127, !71, !400, !66}
!4711 = !DILocalVariable(name: "host", arg: 1, scope: !4708, file: !3, line: 997, type: !71)
!4712 = !DILocation(line: 997, column: 46, scope: !4708)
!4713 = !DILocalVariable(name: "ocr", arg: 2, scope: !4708, file: !3, line: 997, type: !400)
!4714 = !DILocation(line: 997, column: 56, scope: !4708)
!4715 = !DILocalVariable(name: "oldcard", arg: 3, scope: !4708, file: !3, line: 998, type: !66)
!4716 = !DILocation(line: 998, column: 19, scope: !4708)
!4717 = !DILocalVariable(name: "card", scope: !4708, file: !3, line: 1000, type: !66)
!4718 = !DILocation(line: 1000, column: 19, scope: !4708)
!4719 = !DILocalVariable(name: "err", scope: !4708, file: !3, line: 1001, type: !127)
!4720 = !DILocation(line: 1001, column: 6, scope: !4708)
!4721 = !DILocalVariable(name: "cid", scope: !4708, file: !3, line: 1002, type: !1947)
!4722 = !DILocation(line: 1002, column: 6, scope: !4708)
!4723 = !DILocalVariable(name: "rocr", scope: !4708, file: !3, line: 1003, type: !400)
!4724 = !DILocation(line: 1003, column: 6, scope: !4708)
!4725 = !DILocalVariable(name: "v18_fixup_failed", scope: !4708, file: !3, line: 1004, type: !970)
!4726 = !DILocation(line: 1004, column: 7, scope: !4708)
!4727 = !DILocalVariable(name: "__ret_warn_on", scope: !4728, file: !3, line: 1006, type: !127)
!4728 = distinct !DILexicalBlock(scope: !4708, file: !3, line: 1006, column: 2)
!4729 = !DILocation(line: 1006, column: 2, scope: !4728)
!4730 = !DILocation(line: 1006, column: 2, scope: !4731)
!4731 = distinct !DILexicalBlock(scope: !4728, file: !3, line: 1006, column: 2)
!4732 = !DILocation(line: 1006, column: 2, scope: !4733)
!4733 = distinct !DILexicalBlock(scope: !4731, file: !3, line: 1006, column: 2)
!4734 = !DILocation(line: 1006, column: 2, scope: !4735)
!4735 = distinct !DILexicalBlock(scope: !4733, file: !3, line: 1006, column: 2)
!4736 = !DILocation(line: 1006, column: 2, scope: !4737)
!4737 = distinct !DILexicalBlock(scope: !4733, file: !3, line: 1006, column: 2)
!4738 = !{i32 -2143439796, i32 -2143439767, i32 -2143439721, i32 -2143439663, i32 -2143439609, i32 -2143439555, i32 -2143439500, i32 -2143439469}
!4739 = !DILocation(line: 1006, column: 2, scope: !4740)
!4740 = distinct !DILexicalBlock(scope: !4733, file: !3, line: 1006, column: 2)
!4741 = !{i32 -2143439065, i32 -2143439058, i32 -2143439006, i32 -2143438975, i32 -2143438945}
!4742 = !DILocation(line: 1006, column: 2, scope: !4743)
!4743 = distinct !DILexicalBlock(scope: !4733, file: !3, line: 1006, column: 2)
!4744 = !DILocation(line: 1006, column: 2, scope: !4708)
!4745 = !DILabel(scope: !4708, name: "retry", file: !3, line: 1007)
!4746 = !DILocation(line: 1007, column: 1, scope: !4708)
!4747 = !DILocation(line: 1008, column: 23, scope: !4708)
!4748 = !DILocation(line: 1008, column: 29, scope: !4708)
!4749 = !DILocation(line: 1008, column: 34, scope: !4708)
!4750 = !DILocation(line: 1008, column: 8, scope: !4708)
!4751 = !DILocation(line: 1008, column: 6, scope: !4708)
!4752 = !DILocation(line: 1009, column: 6, scope: !4753)
!4753 = distinct !DILexicalBlock(scope: !4708, file: !3, line: 1009, column: 6)
!4754 = !DILocation(line: 1009, column: 6, scope: !4708)
!4755 = !DILocation(line: 1010, column: 10, scope: !4753)
!4756 = !DILocation(line: 1010, column: 3, scope: !4753)
!4757 = !DILocation(line: 1012, column: 6, scope: !4758)
!4758 = distinct !DILexicalBlock(scope: !4708, file: !3, line: 1012, column: 6)
!4759 = !DILocation(line: 1012, column: 6, scope: !4708)
!4760 = !DILocation(line: 1013, column: 14, scope: !4761)
!4761 = distinct !DILexicalBlock(scope: !4762, file: !3, line: 1013, column: 7)
!4762 = distinct !DILexicalBlock(scope: !4758, file: !3, line: 1012, column: 15)
!4763 = !DILocation(line: 1013, column: 19, scope: !4761)
!4764 = !DILocation(line: 1013, column: 28, scope: !4761)
!4765 = !DILocation(line: 1013, column: 7, scope: !4761)
!4766 = !DILocation(line: 1013, column: 50, scope: !4761)
!4767 = !DILocation(line: 1013, column: 7, scope: !4762)
!4768 = !DILocation(line: 1014, column: 4, scope: !4769)
!4769 = distinct !DILexicalBlock(scope: !4770, file: !3, line: 1014, column: 4)
!4770 = distinct !DILexicalBlock(scope: !4771, file: !3, line: 1014, column: 4)
!4771 = distinct !DILexicalBlock(scope: !4761, file: !3, line: 1013, column: 56)
!4772 = !DILocation(line: 1014, column: 4, scope: !4770)
!4773 = !DILocation(line: 1016, column: 4, scope: !4771)
!4774 = !DILocation(line: 1019, column: 10, scope: !4762)
!4775 = !DILocation(line: 1019, column: 8, scope: !4762)
!4776 = !DILocation(line: 1020, column: 2, scope: !4762)
!4777 = !DILocation(line: 1024, column: 25, scope: !4778)
!4778 = distinct !DILexicalBlock(scope: !4758, file: !3, line: 1020, column: 9)
!4779 = !DILocation(line: 1024, column: 10, scope: !4778)
!4780 = !DILocation(line: 1024, column: 8, scope: !4778)
!4781 = !DILocation(line: 1025, column: 14, scope: !4782)
!4782 = distinct !DILexicalBlock(scope: !4778, file: !3, line: 1025, column: 7)
!4783 = !DILocation(line: 1025, column: 7, scope: !4782)
!4784 = !DILocation(line: 1025, column: 7, scope: !4778)
!4785 = !DILocation(line: 1026, column: 19, scope: !4782)
!4786 = !DILocation(line: 1026, column: 11, scope: !4782)
!4787 = !DILocation(line: 1026, column: 4, scope: !4782)
!4788 = !DILocation(line: 1028, column: 15, scope: !4778)
!4789 = !DILocation(line: 1028, column: 3, scope: !4778)
!4790 = !DILocation(line: 1028, column: 9, scope: !4778)
!4791 = !DILocation(line: 1028, column: 13, scope: !4778)
!4792 = !DILocation(line: 1029, column: 3, scope: !4778)
!4793 = !DILocation(line: 1029, column: 9, scope: !4778)
!4794 = !DILocation(line: 1029, column: 14, scope: !4778)
!4795 = !DILocation(line: 1030, column: 10, scope: !4778)
!4796 = !DILocation(line: 1030, column: 16, scope: !4778)
!4797 = !DILocation(line: 1030, column: 3, scope: !4778)
!4798 = !DILocation(line: 1036, column: 6, scope: !4799)
!4799 = distinct !DILexicalBlock(scope: !4708, file: !3, line: 1036, column: 6)
!4800 = !DILocation(line: 1036, column: 12, scope: !4799)
!4801 = !DILocation(line: 1036, column: 17, scope: !4799)
!4802 = !DILocation(line: 1036, column: 6, scope: !4708)
!4803 = !DILocation(line: 1037, column: 3, scope: !4799)
!4804 = !DILocation(line: 1037, column: 9, scope: !4799)
!4805 = !DILocation(line: 1037, column: 14, scope: !4799)
!4806 = !DILocation(line: 1037, column: 24, scope: !4799)
!4807 = !DILocation(line: 1037, column: 30, scope: !4799)
!4808 = !DILocation(line: 1042, column: 7, scope: !4809)
!4809 = distinct !DILexicalBlock(scope: !4708, file: !3, line: 1042, column: 6)
!4810 = !DILocation(line: 1042, column: 6, scope: !4708)
!4811 = !DILocation(line: 1043, column: 32, scope: !4812)
!4812 = distinct !DILexicalBlock(scope: !4809, file: !3, line: 1042, column: 30)
!4813 = !DILocation(line: 1043, column: 39, scope: !4812)
!4814 = !DILocation(line: 1043, column: 45, scope: !4812)
!4815 = !DILocation(line: 1043, column: 9, scope: !4812)
!4816 = !DILocation(line: 1043, column: 7, scope: !4812)
!4817 = !DILocation(line: 1044, column: 7, scope: !4818)
!4818 = distinct !DILexicalBlock(scope: !4812, file: !3, line: 1044, column: 7)
!4819 = !DILocation(line: 1044, column: 7, scope: !4812)
!4820 = !DILocation(line: 1045, column: 4, scope: !4818)
!4821 = !DILocation(line: 1046, column: 2, scope: !4812)
!4822 = !DILocation(line: 1048, column: 7, scope: !4823)
!4823 = distinct !DILexicalBlock(scope: !4708, file: !3, line: 1048, column: 6)
!4824 = !DILocation(line: 1048, column: 6, scope: !4708)
!4825 = !DILocation(line: 1049, column: 24, scope: !4826)
!4826 = distinct !DILexicalBlock(scope: !4823, file: !3, line: 1048, column: 16)
!4827 = !DILocation(line: 1049, column: 30, scope: !4826)
!4828 = !DILocation(line: 1049, column: 9, scope: !4826)
!4829 = !DILocation(line: 1049, column: 7, scope: !4826)
!4830 = !DILocation(line: 1050, column: 7, scope: !4831)
!4831 = distinct !DILexicalBlock(scope: !4826, file: !3, line: 1050, column: 7)
!4832 = !DILocation(line: 1050, column: 7, scope: !4826)
!4833 = !DILocation(line: 1051, column: 4, scope: !4831)
!4834 = !DILocation(line: 1053, column: 18, scope: !4826)
!4835 = !DILocation(line: 1053, column: 3, scope: !4826)
!4836 = !DILocation(line: 1054, column: 2, scope: !4826)
!4837 = !DILocation(line: 1060, column: 6, scope: !4838)
!4838 = distinct !DILexicalBlock(scope: !4708, file: !3, line: 1060, column: 6)
!4839 = !DILocation(line: 1060, column: 12, scope: !4838)
!4840 = !DILocation(line: 1060, column: 16, scope: !4838)
!4841 = !DILocation(line: 1060, column: 24, scope: !4838)
!4842 = !DILocation(line: 1060, column: 27, scope: !4838)
!4843 = !DILocation(line: 1060, column: 33, scope: !4838)
!4844 = !DILocation(line: 1060, column: 6, scope: !4708)
!4845 = !DILocation(line: 1061, column: 15, scope: !4838)
!4846 = !DILocation(line: 1061, column: 3, scope: !4838)
!4847 = !DILocation(line: 1066, column: 7, scope: !4848)
!4848 = distinct !DILexicalBlock(scope: !4708, file: !3, line: 1066, column: 6)
!4849 = !DILocation(line: 1066, column: 6, scope: !4708)
!4850 = !DILocation(line: 1067, column: 25, scope: !4851)
!4851 = distinct !DILexicalBlock(scope: !4848, file: !3, line: 1066, column: 30)
!4852 = !DILocation(line: 1067, column: 9, scope: !4851)
!4853 = !DILocation(line: 1067, column: 7, scope: !4851)
!4854 = !DILocation(line: 1068, column: 7, scope: !4855)
!4855 = distinct !DILexicalBlock(scope: !4851, file: !3, line: 1068, column: 7)
!4856 = !DILocation(line: 1068, column: 7, scope: !4851)
!4857 = !DILocation(line: 1069, column: 4, scope: !4855)
!4858 = !DILocation(line: 1070, column: 2, scope: !4851)
!4859 = !DILocation(line: 1072, column: 26, scope: !4708)
!4860 = !DILocation(line: 1072, column: 32, scope: !4708)
!4861 = !DILocation(line: 1072, column: 38, scope: !4708)
!4862 = !DILocation(line: 1072, column: 46, scope: !4708)
!4863 = !DILocation(line: 1072, column: 8, scope: !4708)
!4864 = !DILocation(line: 1072, column: 6, scope: !4708)
!4865 = !DILocation(line: 1073, column: 6, scope: !4866)
!4866 = distinct !DILexicalBlock(scope: !4708, file: !3, line: 1073, column: 6)
!4867 = !DILocation(line: 1073, column: 6, scope: !4708)
!4868 = !DILocation(line: 1074, column: 3, scope: !4866)
!4869 = !DILocation(line: 1081, column: 7, scope: !4870)
!4870 = distinct !DILexicalBlock(scope: !4708, file: !3, line: 1081, column: 6)
!4871 = !DILocation(line: 1081, column: 24, scope: !4870)
!4872 = !DILocation(line: 1081, column: 28, scope: !4870)
!4873 = !DILocation(line: 1081, column: 50, scope: !4870)
!4874 = !DILocation(line: 1081, column: 66, scope: !4870)
!4875 = !DILocation(line: 1081, column: 53, scope: !4870)
!4876 = !DILocation(line: 1081, column: 72, scope: !4870)
!4877 = !DILocation(line: 1082, column: 28, scope: !4870)
!4878 = !DILocation(line: 1082, column: 6, scope: !4870)
!4879 = !DILocation(line: 1082, column: 34, scope: !4870)
!4880 = !DILocation(line: 1083, column: 6, scope: !4870)
!4881 = !DILocation(line: 1083, column: 12, scope: !4870)
!4882 = !DILocation(line: 1083, column: 16, scope: !4870)
!4883 = !DILocation(line: 1083, column: 31, scope: !4870)
!4884 = !DILocation(line: 1081, column: 6, scope: !4708)
!4885 = !DILocation(line: 1088, column: 7, scope: !4886)
!4886 = distinct !DILexicalBlock(scope: !4887, file: !3, line: 1088, column: 7)
!4887 = distinct !DILexicalBlock(scope: !4870, file: !3, line: 1083, column: 58)
!4888 = !DILocation(line: 1088, column: 7, scope: !4887)
!4889 = !DILocation(line: 1089, column: 26, scope: !4890)
!4890 = distinct !DILexicalBlock(scope: !4886, file: !3, line: 1088, column: 16)
!4891 = !DILocation(line: 1089, column: 10, scope: !4890)
!4892 = !DILocation(line: 1089, column: 8, scope: !4890)
!4893 = !DILocation(line: 1090, column: 8, scope: !4894)
!4894 = distinct !DILexicalBlock(scope: !4890, file: !3, line: 1090, column: 8)
!4895 = !DILocation(line: 1090, column: 8, scope: !4890)
!4896 = !DILocation(line: 1091, column: 5, scope: !4894)
!4897 = !DILocation(line: 1092, column: 3, scope: !4890)
!4898 = !DILocation(line: 1093, column: 29, scope: !4899)
!4899 = distinct !DILexicalBlock(scope: !4887, file: !3, line: 1093, column: 7)
!4900 = !DILocation(line: 1093, column: 7, scope: !4899)
!4901 = !DILocation(line: 1093, column: 7, scope: !4887)
!4902 = !DILocation(line: 1094, column: 33, scope: !4903)
!4903 = distinct !DILexicalBlock(scope: !4904, file: !3, line: 1094, column: 8)
!4904 = distinct !DILexicalBlock(scope: !4899, file: !3, line: 1093, column: 36)
!4905 = !DILocation(line: 1094, column: 8, scope: !4903)
!4906 = !DILocation(line: 1094, column: 39, scope: !4903)
!4907 = !DILocation(line: 1095, column: 29, scope: !4903)
!4908 = !DILocation(line: 1095, column: 8, scope: !4903)
!4909 = !DILocation(line: 1094, column: 8, scope: !4904)
!4910 = !DILocation(line: 1096, column: 22, scope: !4911)
!4911 = distinct !DILexicalBlock(scope: !4903, file: !3, line: 1095, column: 36)
!4912 = !DILocation(line: 1097, column: 21, scope: !4911)
!4913 = !DILocation(line: 1097, column: 27, scope: !4911)
!4914 = !DILocation(line: 1097, column: 5, scope: !4911)
!4915 = !DILocation(line: 1098, column: 10, scope: !4916)
!4916 = distinct !DILexicalBlock(scope: !4911, file: !3, line: 1098, column: 9)
!4917 = !DILocation(line: 1098, column: 9, scope: !4911)
!4918 = !DILocation(line: 1099, column: 22, scope: !4916)
!4919 = !DILocation(line: 1099, column: 6, scope: !4916)
!4920 = !DILocation(line: 1100, column: 5, scope: !4911)
!4921 = !DILocation(line: 1102, column: 4, scope: !4904)
!4922 = !DILocation(line: 1104, column: 2, scope: !4887)
!4923 = !DILocation(line: 1107, column: 6, scope: !4924)
!4924 = distinct !DILexicalBlock(scope: !4708, file: !3, line: 1107, column: 6)
!4925 = !DILocation(line: 1107, column: 11, scope: !4924)
!4926 = !DILocation(line: 1107, column: 26, scope: !4924)
!4927 = !DILocation(line: 1107, column: 42, scope: !4924)
!4928 = !DILocation(line: 1107, column: 29, scope: !4924)
!4929 = !DILocation(line: 1107, column: 6, scope: !4708)
!4930 = !DILocation(line: 1108, column: 30, scope: !4931)
!4931 = distinct !DILexicalBlock(scope: !4924, file: !3, line: 1107, column: 49)
!4932 = !DILocation(line: 1108, column: 9, scope: !4931)
!4933 = !DILocation(line: 1108, column: 7, scope: !4931)
!4934 = !DILocation(line: 1109, column: 7, scope: !4935)
!4935 = distinct !DILexicalBlock(scope: !4931, file: !3, line: 1109, column: 7)
!4936 = !DILocation(line: 1109, column: 7, scope: !4931)
!4937 = !DILocation(line: 1110, column: 4, scope: !4935)
!4938 = !DILocation(line: 1111, column: 2, scope: !4931)
!4939 = !DILocation(line: 1115, column: 26, scope: !4940)
!4940 = distinct !DILexicalBlock(scope: !4924, file: !3, line: 1111, column: 9)
!4941 = !DILocation(line: 1115, column: 9, scope: !4940)
!4942 = !DILocation(line: 1115, column: 7, scope: !4940)
!4943 = !DILocation(line: 1116, column: 7, scope: !4944)
!4944 = distinct !DILexicalBlock(scope: !4940, file: !3, line: 1116, column: 7)
!4945 = !DILocation(line: 1116, column: 11, scope: !4944)
!4946 = !DILocation(line: 1116, column: 7, scope: !4940)
!4947 = !DILocation(line: 1117, column: 19, scope: !4944)
!4948 = !DILocation(line: 1117, column: 25, scope: !4944)
!4949 = !DILocation(line: 1117, column: 4, scope: !4944)
!4950 = !DILocation(line: 1118, column: 12, scope: !4951)
!4951 = distinct !DILexicalBlock(scope: !4944, file: !3, line: 1118, column: 12)
!4952 = !DILocation(line: 1118, column: 12, scope: !4944)
!4953 = !DILocation(line: 1119, column: 4, scope: !4951)
!4954 = !DILocation(line: 1124, column: 17, scope: !4940)
!4955 = !DILocation(line: 1124, column: 44, scope: !4940)
!4956 = !DILocation(line: 1124, column: 23, scope: !4940)
!4957 = !DILocation(line: 1124, column: 3, scope: !4940)
!4958 = !DILocation(line: 1129, column: 8, scope: !4959)
!4959 = distinct !DILexicalBlock(scope: !4940, file: !3, line: 1129, column: 7)
!4960 = !DILocation(line: 1129, column: 14, scope: !4959)
!4961 = !DILocation(line: 1129, column: 19, scope: !4959)
!4962 = !DILocation(line: 1129, column: 41, scope: !4959)
!4963 = !DILocation(line: 1130, column: 5, scope: !4959)
!4964 = !DILocation(line: 1130, column: 11, scope: !4959)
!4965 = !DILocation(line: 1130, column: 15, scope: !4959)
!4966 = !DILocation(line: 1130, column: 26, scope: !4959)
!4967 = !DILocation(line: 1129, column: 7, scope: !4940)
!4968 = !DILocation(line: 1131, column: 32, scope: !4969)
!4969 = distinct !DILexicalBlock(scope: !4959, file: !3, line: 1130, column: 49)
!4970 = !DILocation(line: 1131, column: 10, scope: !4969)
!4971 = !DILocation(line: 1131, column: 8, scope: !4969)
!4972 = !DILocation(line: 1132, column: 8, scope: !4973)
!4973 = distinct !DILexicalBlock(scope: !4969, file: !3, line: 1132, column: 8)
!4974 = !DILocation(line: 1132, column: 8, scope: !4969)
!4975 = !DILocation(line: 1133, column: 5, scope: !4973)
!4976 = !DILocation(line: 1135, column: 22, scope: !4969)
!4977 = !DILocation(line: 1135, column: 4, scope: !4969)
!4978 = !DILocation(line: 1136, column: 3, scope: !4969)
!4979 = !DILocation(line: 1139, column: 6, scope: !4980)
!4980 = distinct !DILexicalBlock(scope: !4708, file: !3, line: 1139, column: 6)
!4981 = !DILocation(line: 1139, column: 12, scope: !4980)
!4982 = !DILocation(line: 1139, column: 20, scope: !4980)
!4983 = !DILocation(line: 1139, column: 24, scope: !4980)
!4984 = !DILocation(line: 1139, column: 30, scope: !4980)
!4985 = !DILocation(line: 1139, column: 6, scope: !4708)
!4986 = !DILocation(line: 1140, column: 9, scope: !4987)
!4987 = distinct !DILexicalBlock(scope: !4980, file: !3, line: 1139, column: 43)
!4988 = !DILocation(line: 1140, column: 15, scope: !4987)
!4989 = !DILocation(line: 1140, column: 24, scope: !4987)
!4990 = !DILocation(line: 1140, column: 35, scope: !4987)
!4991 = !DILocation(line: 1140, column: 41, scope: !4987)
!4992 = !DILocation(line: 1140, column: 7, scope: !4987)
!4993 = !DILocation(line: 1141, column: 8, scope: !4994)
!4994 = distinct !DILexicalBlock(scope: !4987, file: !3, line: 1141, column: 7)
!4995 = !DILocation(line: 1141, column: 7, scope: !4987)
!4996 = !DILocation(line: 1142, column: 4, scope: !4997)
!4997 = distinct !DILexicalBlock(scope: !4994, file: !3, line: 1141, column: 13)
!4998 = !DILocation(line: 1142, column: 10, scope: !4997)
!4999 = !DILocation(line: 1142, column: 22, scope: !4997)
!5000 = !DILocation(line: 1143, column: 4, scope: !4997)
!5001 = !DILocation(line: 1143, column: 10, scope: !4997)
!5002 = !DILocation(line: 1143, column: 22, scope: !4997)
!5003 = !DILocation(line: 1144, column: 4, scope: !4997)
!5004 = !DILocation(line: 1146, column: 3, scope: !4997)
!5005 = !DILocation(line: 1147, column: 2, scope: !4987)
!5006 = !DILocation(line: 1149, column: 6, scope: !5007)
!5007 = distinct !DILexicalBlock(scope: !4708, file: !3, line: 1149, column: 6)
!5008 = !DILocation(line: 1149, column: 12, scope: !5007)
!5009 = !DILocation(line: 1149, column: 18, scope: !5007)
!5010 = !DILocation(line: 1149, column: 40, scope: !5007)
!5011 = !DILocation(line: 1150, column: 6, scope: !5007)
!5012 = !DILocation(line: 1150, column: 12, scope: !5007)
!5013 = !DILocation(line: 1150, column: 16, scope: !5007)
!5014 = !DILocation(line: 1150, column: 31, scope: !5007)
!5015 = !DILocation(line: 1149, column: 6, scope: !4708)
!5016 = !DILocation(line: 1151, column: 3, scope: !5017)
!5017 = distinct !DILexicalBlock(scope: !5007, file: !3, line: 1150, column: 58)
!5018 = !DILocation(line: 1153, column: 7, scope: !5017)
!5019 = !DILocation(line: 1154, column: 3, scope: !5017)
!5020 = !DILocation(line: 1150, column: 34, scope: !5007)
!5021 = !DILabel(scope: !4708, name: "done", file: !3, line: 1156)
!5022 = !DILocation(line: 1156, column: 1, scope: !4708)
!5023 = !DILocation(line: 1157, column: 15, scope: !4708)
!5024 = !DILocation(line: 1157, column: 2, scope: !4708)
!5025 = !DILocation(line: 1157, column: 8, scope: !4708)
!5026 = !DILocation(line: 1157, column: 13, scope: !4708)
!5027 = !DILocation(line: 1158, column: 2, scope: !4708)
!5028 = !DILabel(scope: !4708, name: "free_card", file: !3, line: 1160)
!5029 = !DILocation(line: 1160, column: 1, scope: !4708)
!5030 = !DILocation(line: 1161, column: 7, scope: !5031)
!5031 = distinct !DILexicalBlock(scope: !4708, file: !3, line: 1161, column: 6)
!5032 = !DILocation(line: 1161, column: 6, scope: !4708)
!5033 = !DILocation(line: 1162, column: 19, scope: !5031)
!5034 = !DILocation(line: 1162, column: 3, scope: !5031)
!5035 = !DILocation(line: 1164, column: 9, scope: !4708)
!5036 = !DILocation(line: 1164, column: 2, scope: !4708)
!5037 = !DILocation(line: 1165, column: 1, scope: !4708)
!5038 = distinct !DISubprogram(name: "mmc_claim_host", scope: !2142, file: !2142, line: 134, type: !2024, scopeLine: 135, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !115)
!5039 = !DILocalVariable(name: "host", arg: 1, scope: !5038, file: !2142, line: 134, type: !71)
!5040 = !DILocation(line: 134, column: 52, scope: !5038)
!5041 = !DILocation(line: 136, column: 19, scope: !5038)
!5042 = !DILocation(line: 136, column: 2, scope: !5038)
!5043 = !DILocation(line: 137, column: 1, scope: !5038)
!5044 = distinct !DISubprogram(name: "get_order", scope: !5045, file: !5045, line: 29, type: !5046, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !115)
!5045 = !DIFile(filename: "./include/asm-generic/getorder.h", directory: "/home/lizy2001/genbc/linux")
!5046 = !DISubroutineType(types: !5047)
!5047 = !{!127, !193}
!5048 = !DILocalVariable(name: "x", arg: 1, scope: !5049, file: !5050, line: 366, type: !264)
!5049 = distinct !DISubprogram(name: "fls64", scope: !5050, file: !5050, line: 366, type: !5051, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !115)
!5050 = !DIFile(filename: "./arch/x86/include/asm/bitops.h", directory: "/home/lizy2001/genbc/linux")
!5051 = !DISubroutineType(types: !5052)
!5052 = !{!127, !264}
!5053 = !DILocation(line: 366, column: 40, scope: !5049, inlinedAt: !5054)
!5054 = distinct !DILocation(line: 46, column: 9, scope: !5044)
!5055 = !DILocalVariable(name: "bitpos", scope: !5049, file: !5050, line: 368, type: !127)
!5056 = !DILocation(line: 368, column: 6, scope: !5049, inlinedAt: !5054)
!5057 = !DILocalVariable(name: "size", arg: 1, scope: !5044, file: !5045, line: 29, type: !193)
!5058 = !DILocation(line: 29, column: 63, scope: !5044)
!5059 = !DILocation(line: 31, column: 27, scope: !5060)
!5060 = distinct !DILexicalBlock(scope: !5044, file: !5045, line: 31, column: 6)
!5061 = !DILocation(line: 31, column: 6, scope: !5060)
!5062 = !DILocation(line: 31, column: 6, scope: !5044)
!5063 = !DILocation(line: 32, column: 8, scope: !5064)
!5064 = distinct !DILexicalBlock(scope: !5065, file: !5045, line: 32, column: 7)
!5065 = distinct !DILexicalBlock(scope: !5060, file: !5045, line: 31, column: 34)
!5066 = !DILocation(line: 32, column: 7, scope: !5065)
!5067 = !DILocation(line: 33, column: 4, scope: !5064)
!5068 = !DILocation(line: 35, column: 7, scope: !5069)
!5069 = distinct !DILexicalBlock(scope: !5065, file: !5045, line: 35, column: 7)
!5070 = !DILocation(line: 35, column: 12, scope: !5069)
!5071 = !DILocation(line: 35, column: 7, scope: !5065)
!5072 = !DILocation(line: 36, column: 4, scope: !5069)
!5073 = !DILocation(line: 38, column: 10, scope: !5065)
!5074 = !DILocation(line: 38, column: 28, scope: !5065)
!5075 = !DILocation(line: 38, column: 41, scope: !5065)
!5076 = !DILocation(line: 38, column: 3, scope: !5065)
!5077 = !DILocation(line: 41, column: 6, scope: !5044)
!5078 = !DILocation(line: 42, column: 7, scope: !5044)
!5079 = !DILocation(line: 46, column: 15, scope: !5044)
!5080 = !DILocation(line: 374, column: 2, scope: !5049, inlinedAt: !5054)
!5081 = !DILocation(line: 376, column: 14, scope: !5049, inlinedAt: !5054)
!5082 = !{i32 345161}
!5083 = !DILocation(line: 377, column: 9, scope: !5049, inlinedAt: !5054)
!5084 = !DILocation(line: 377, column: 16, scope: !5049, inlinedAt: !5054)
!5085 = !DILocation(line: 46, column: 2, scope: !5044)
!5086 = !DILocation(line: 48, column: 1, scope: !5044)
!5087 = distinct !DISubprogram(name: "__ilog2_u64", scope: !5088, file: !5088, line: 30, type: !5089, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !115)
!5088 = !DIFile(filename: "./include/linux/log2.h", directory: "/home/lizy2001/genbc/linux")
!5089 = !DISubroutineType(types: !5090)
!5090 = !{!127, !262}
!5091 = !DILocation(line: 366, column: 40, scope: !5049, inlinedAt: !5092)
!5092 = distinct !DILocation(line: 32, column: 9, scope: !5087)
!5093 = !DILocation(line: 368, column: 6, scope: !5049, inlinedAt: !5092)
!5094 = !DILocalVariable(name: "n", arg: 1, scope: !5087, file: !5088, line: 30, type: !262)
!5095 = !DILocation(line: 30, column: 21, scope: !5087)
!5096 = !DILocation(line: 32, column: 15, scope: !5087)
!5097 = !DILocation(line: 374, column: 2, scope: !5049, inlinedAt: !5092)
!5098 = !DILocation(line: 376, column: 14, scope: !5049, inlinedAt: !5092)
!5099 = !DILocation(line: 377, column: 9, scope: !5049, inlinedAt: !5092)
!5100 = !DILocation(line: 377, column: 16, scope: !5049, inlinedAt: !5092)
!5101 = !DILocation(line: 32, column: 18, scope: !5087)
!5102 = !DILocation(line: 32, column: 2, scope: !5087)
!5103 = distinct !DISubprogram(name: "kasan_kmalloc", scope: !1089, file: !1089, line: 137, type: !5104, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !115)
!5104 = !DISubroutineType(types: !5105)
!5105 = !{!65, !1020, !1361, !190, !63}
!5106 = !DILocalVariable(name: "s", arg: 1, scope: !5103, file: !1089, line: 137, type: !1020)
!5107 = !DILocation(line: 137, column: 54, scope: !5103)
!5108 = !DILocalVariable(name: "object", arg: 2, scope: !5103, file: !1089, line: 137, type: !1361)
!5109 = !DILocation(line: 137, column: 69, scope: !5103)
!5110 = !DILocalVariable(name: "size", arg: 3, scope: !5103, file: !1089, line: 138, type: !190)
!5111 = !DILocation(line: 138, column: 12, scope: !5103)
!5112 = !DILocalVariable(name: "flags", arg: 4, scope: !5103, file: !1089, line: 138, type: !63)
!5113 = !DILocation(line: 138, column: 24, scope: !5103)
!5114 = !DILocation(line: 140, column: 17, scope: !5103)
!5115 = !DILocation(line: 140, column: 2, scope: !5103)
!5116 = distinct !DISubprogram(name: "kobject_name", scope: !81, file: !81, line: 88, type: !5117, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !115)
!5117 = !DISubroutineType(types: !5118)
!5118 = !{!84, !5119}
!5119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5120, size: 64)
!5120 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !80)
!5121 = !DILocalVariable(name: "kobj", arg: 1, scope: !5116, file: !81, line: 88, type: !5119)
!5122 = !DILocation(line: 88, column: 62, scope: !5116)
!5123 = !DILocation(line: 90, column: 9, scope: !5116)
!5124 = !DILocation(line: 90, column: 15, scope: !5116)
!5125 = !DILocation(line: 90, column: 2, scope: !5116)
!5126 = distinct !DISubprogram(name: "sd_std_is_visible", scope: !3, file: !3, line: 759, type: !205, scopeLine: 761, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !115)
!5127 = !DILocalVariable(name: "kobj", arg: 1, scope: !5126, file: !3, line: 759, type: !94)
!5128 = !DILocation(line: 759, column: 50, scope: !5126)
!5129 = !DILocalVariable(name: "attr", arg: 2, scope: !5126, file: !3, line: 759, type: !179)
!5130 = !DILocation(line: 759, column: 74, scope: !5126)
!5131 = !DILocalVariable(name: "index", arg: 3, scope: !5126, file: !3, line: 760, type: !127)
!5132 = !DILocation(line: 760, column: 10, scope: !5126)
!5133 = !DILocalVariable(name: "dev", scope: !5126, file: !3, line: 762, type: !76)
!5134 = !DILocation(line: 762, column: 17, scope: !5126)
!5135 = !DILocation(line: 762, column: 35, scope: !5126)
!5136 = !DILocation(line: 762, column: 23, scope: !5126)
!5137 = !DILocalVariable(name: "card", scope: !5126, file: !3, line: 763, type: !66)
!5138 = !DILocation(line: 763, column: 19, scope: !5126)
!5139 = !DILocalVariable(name: "__mptr", scope: !5140, file: !3, line: 763, type: !65)
!5140 = distinct !DILexicalBlock(scope: !5126, file: !3, line: 763, column: 26)
!5141 = !DILocation(line: 763, column: 26, scope: !5140)
!5142 = !DILocation(line: 763, column: 26, scope: !5143)
!5143 = distinct !DILexicalBlock(scope: !5140, file: !3, line: 763, column: 26)
!5144 = !DILocation(line: 766, column: 7, scope: !5145)
!5145 = distinct !DILexicalBlock(scope: !5126, file: !3, line: 766, column: 6)
!5146 = !DILocation(line: 766, column: 12, scope: !5145)
!5147 = !DILocation(line: 766, column: 37, scope: !5145)
!5148 = !DILocation(line: 767, column: 7, scope: !5145)
!5149 = !DILocation(line: 767, column: 12, scope: !5145)
!5150 = !DILocation(line: 767, column: 37, scope: !5145)
!5151 = !DILocation(line: 768, column: 7, scope: !5145)
!5152 = !DILocation(line: 768, column: 12, scope: !5145)
!5153 = !DILocation(line: 768, column: 39, scope: !5145)
!5154 = !DILocation(line: 769, column: 7, scope: !5145)
!5155 = !DILocation(line: 769, column: 12, scope: !5145)
!5156 = !DILocation(line: 769, column: 36, scope: !5145)
!5157 = !DILocation(line: 770, column: 7, scope: !5145)
!5158 = !DILocation(line: 770, column: 12, scope: !5145)
!5159 = !DILocation(line: 770, column: 36, scope: !5145)
!5160 = !DILocation(line: 771, column: 7, scope: !5145)
!5161 = !DILocation(line: 771, column: 12, scope: !5145)
!5162 = !DILocation(line: 771, column: 36, scope: !5145)
!5163 = !DILocation(line: 772, column: 7, scope: !5145)
!5164 = !DILocation(line: 772, column: 12, scope: !5145)
!5165 = !DILocation(line: 773, column: 8, scope: !5145)
!5166 = !DILocation(line: 773, column: 11, scope: !5145)
!5167 = !DILocation(line: 773, column: 17, scope: !5145)
!5168 = !DILocation(line: 773, column: 22, scope: !5145)
!5169 = !DILocation(line: 766, column: 6, scope: !5126)
!5170 = !DILocation(line: 774, column: 3, scope: !5145)
!5171 = !DILocation(line: 776, column: 9, scope: !5126)
!5172 = !DILocation(line: 776, column: 15, scope: !5126)
!5173 = !DILocation(line: 776, column: 2, scope: !5126)
!5174 = !DILocation(line: 777, column: 1, scope: !5126)
!5175 = distinct !DISubprogram(name: "kobj_to_dev", scope: !30, file: !30, line: 591, type: !5176, scopeLine: 592, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !115)
!5176 = !DISubroutineType(types: !5177)
!5177 = !{!76, !94}
!5178 = !DILocalVariable(name: "kobj", arg: 1, scope: !5175, file: !30, line: 591, type: !94)
!5179 = !DILocation(line: 591, column: 58, scope: !5175)
!5180 = !DILocalVariable(name: "__mptr", scope: !5181, file: !30, line: 593, type: !65)
!5181 = distinct !DILexicalBlock(scope: !5175, file: !30, line: 593, column: 9)
!5182 = !DILocation(line: 593, column: 9, scope: !5181)
!5183 = !DILocation(line: 593, column: 9, scope: !5184)
!5184 = distinct !DILexicalBlock(scope: !5181, file: !30, line: 593, column: 9)
!5185 = !DILocation(line: 593, column: 2, scope: !5175)
!5186 = distinct !DISubprogram(name: "mmc_vendor_show", scope: !3, file: !3, line: 710, type: !2428, scopeLine: 710, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !115)
!5187 = !DILocalVariable(name: "dev", arg: 1, scope: !5186, file: !3, line: 710, type: !76)
!5188 = !DILocation(line: 710, column: 1, scope: !5186)
!5189 = !DILocalVariable(name: "attr", arg: 2, scope: !5186, file: !3, line: 710, type: !2430)
!5190 = !DILocalVariable(name: "buf", arg: 3, scope: !5186, file: !3, line: 710, type: !143)
!5191 = !DILocalVariable(name: "card", scope: !5186, file: !3, line: 710, type: !66)
!5192 = !DILocalVariable(name: "__mptr", scope: !5193, file: !3, line: 710, type: !65)
!5193 = distinct !DILexicalBlock(scope: !5186, file: !3, line: 710, column: 1)
!5194 = !DILocation(line: 710, column: 1, scope: !5193)
!5195 = !DILocation(line: 710, column: 1, scope: !5196)
!5196 = distinct !DILexicalBlock(scope: !5193, file: !3, line: 710, column: 1)
!5197 = distinct !DISubprogram(name: "mmc_device_show", scope: !3, file: !3, line: 711, type: !2428, scopeLine: 711, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !115)
!5198 = !DILocalVariable(name: "dev", arg: 1, scope: !5197, file: !3, line: 711, type: !76)
!5199 = !DILocation(line: 711, column: 1, scope: !5197)
!5200 = !DILocalVariable(name: "attr", arg: 2, scope: !5197, file: !3, line: 711, type: !2430)
!5201 = !DILocalVariable(name: "buf", arg: 3, scope: !5197, file: !3, line: 711, type: !143)
!5202 = !DILocalVariable(name: "card", scope: !5197, file: !3, line: 711, type: !66)
!5203 = !DILocalVariable(name: "__mptr", scope: !5204, file: !3, line: 711, type: !65)
!5204 = distinct !DILexicalBlock(scope: !5197, file: !3, line: 711, column: 1)
!5205 = !DILocation(line: 711, column: 1, scope: !5204)
!5206 = !DILocation(line: 711, column: 1, scope: !5207)
!5207 = distinct !DILexicalBlock(scope: !5204, file: !3, line: 711, column: 1)
!5208 = distinct !DISubprogram(name: "mmc_revision_show", scope: !3, file: !3, line: 712, type: !2428, scopeLine: 712, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !115)
!5209 = !DILocalVariable(name: "dev", arg: 1, scope: !5208, file: !3, line: 712, type: !76)
!5210 = !DILocation(line: 712, column: 1, scope: !5208)
!5211 = !DILocalVariable(name: "attr", arg: 2, scope: !5208, file: !3, line: 712, type: !2430)
!5212 = !DILocalVariable(name: "buf", arg: 3, scope: !5208, file: !3, line: 712, type: !143)
!5213 = !DILocalVariable(name: "card", scope: !5208, file: !3, line: 712, type: !66)
!5214 = !DILocalVariable(name: "__mptr", scope: !5215, file: !3, line: 712, type: !65)
!5215 = distinct !DILexicalBlock(scope: !5208, file: !3, line: 712, column: 1)
!5216 = !DILocation(line: 712, column: 1, scope: !5215)
!5217 = !DILocation(line: 712, column: 1, scope: !5218)
!5218 = distinct !DILexicalBlock(scope: !5215, file: !3, line: 712, column: 1)
!5219 = distinct !DISubprogram(name: "info1_show", scope: !3, file: !3, line: 727, type: !2428, scopeLine: 727, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !115)
!5220 = !DILocalVariable(name: "dev", arg: 1, scope: !5219, file: !3, line: 727, type: !76)
!5221 = !DILocation(line: 727, column: 1, scope: !5219)
!5222 = !DILocalVariable(name: "attr", arg: 2, scope: !5219, file: !3, line: 727, type: !2430)
!5223 = !DILocalVariable(name: "buf", arg: 3, scope: !5219, file: !3, line: 727, type: !143)
!5224 = !DILocalVariable(name: "card", scope: !5219, file: !3, line: 727, type: !66)
!5225 = !DILocalVariable(name: "__mptr", scope: !5226, file: !3, line: 727, type: !65)
!5226 = distinct !DILexicalBlock(scope: !5219, file: !3, line: 727, column: 1)
!5227 = !DILocation(line: 727, column: 1, scope: !5226)
!5228 = !DILocation(line: 727, column: 1, scope: !5229)
!5229 = distinct !DILexicalBlock(scope: !5226, file: !3, line: 727, column: 1)
!5230 = !DILocation(line: 727, column: 1, scope: !5231)
!5231 = distinct !DILexicalBlock(scope: !5219, file: !3, line: 727, column: 1)
!5232 = !DILocation(line: 727, column: 1, scope: !5233)
!5233 = distinct !DILexicalBlock(scope: !5219, file: !3, line: 727, column: 1)
!5234 = distinct !DISubprogram(name: "info2_show", scope: !3, file: !3, line: 728, type: !2428, scopeLine: 728, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !115)
!5235 = !DILocalVariable(name: "dev", arg: 1, scope: !5234, file: !3, line: 728, type: !76)
!5236 = !DILocation(line: 728, column: 1, scope: !5234)
!5237 = !DILocalVariable(name: "attr", arg: 2, scope: !5234, file: !3, line: 728, type: !2430)
!5238 = !DILocalVariable(name: "buf", arg: 3, scope: !5234, file: !3, line: 728, type: !143)
!5239 = !DILocalVariable(name: "card", scope: !5234, file: !3, line: 728, type: !66)
!5240 = !DILocalVariable(name: "__mptr", scope: !5241, file: !3, line: 728, type: !65)
!5241 = distinct !DILexicalBlock(scope: !5234, file: !3, line: 728, column: 1)
!5242 = !DILocation(line: 728, column: 1, scope: !5241)
!5243 = !DILocation(line: 728, column: 1, scope: !5244)
!5244 = distinct !DILexicalBlock(scope: !5241, file: !3, line: 728, column: 1)
!5245 = !DILocation(line: 728, column: 1, scope: !5246)
!5246 = distinct !DILexicalBlock(scope: !5234, file: !3, line: 728, column: 1)
!5247 = !DILocation(line: 728, column: 1, scope: !5248)
!5248 = distinct !DILexicalBlock(scope: !5234, file: !3, line: 728, column: 1)
!5249 = distinct !DISubprogram(name: "info3_show", scope: !3, file: !3, line: 729, type: !2428, scopeLine: 729, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !115)
!5250 = !DILocalVariable(name: "dev", arg: 1, scope: !5249, file: !3, line: 729, type: !76)
!5251 = !DILocation(line: 729, column: 1, scope: !5249)
!5252 = !DILocalVariable(name: "attr", arg: 2, scope: !5249, file: !3, line: 729, type: !2430)
!5253 = !DILocalVariable(name: "buf", arg: 3, scope: !5249, file: !3, line: 729, type: !143)
!5254 = !DILocalVariable(name: "card", scope: !5249, file: !3, line: 729, type: !66)
!5255 = !DILocalVariable(name: "__mptr", scope: !5256, file: !3, line: 729, type: !65)
!5256 = distinct !DILexicalBlock(scope: !5249, file: !3, line: 729, column: 1)
!5257 = !DILocation(line: 729, column: 1, scope: !5256)
!5258 = !DILocation(line: 729, column: 1, scope: !5259)
!5259 = distinct !DILexicalBlock(scope: !5256, file: !3, line: 729, column: 1)
!5260 = !DILocation(line: 729, column: 1, scope: !5261)
!5261 = distinct !DILexicalBlock(scope: !5249, file: !3, line: 729, column: 1)
!5262 = !DILocation(line: 729, column: 1, scope: !5263)
!5263 = distinct !DILexicalBlock(scope: !5249, file: !3, line: 729, column: 1)
!5264 = distinct !DISubprogram(name: "info4_show", scope: !3, file: !3, line: 730, type: !2428, scopeLine: 730, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !115)
!5265 = !DILocalVariable(name: "dev", arg: 1, scope: !5264, file: !3, line: 730, type: !76)
!5266 = !DILocation(line: 730, column: 1, scope: !5264)
!5267 = !DILocalVariable(name: "attr", arg: 2, scope: !5264, file: !3, line: 730, type: !2430)
!5268 = !DILocalVariable(name: "buf", arg: 3, scope: !5264, file: !3, line: 730, type: !143)
!5269 = !DILocalVariable(name: "card", scope: !5264, file: !3, line: 730, type: !66)
!5270 = !DILocalVariable(name: "__mptr", scope: !5271, file: !3, line: 730, type: !65)
!5271 = distinct !DILexicalBlock(scope: !5264, file: !3, line: 730, column: 1)
!5272 = !DILocation(line: 730, column: 1, scope: !5271)
!5273 = !DILocation(line: 730, column: 1, scope: !5274)
!5274 = distinct !DILexicalBlock(scope: !5271, file: !3, line: 730, column: 1)
!5275 = !DILocation(line: 730, column: 1, scope: !5276)
!5276 = distinct !DILexicalBlock(scope: !5264, file: !3, line: 730, column: 1)
!5277 = !DILocation(line: 730, column: 1, scope: !5278)
!5278 = distinct !DILexicalBlock(scope: !5264, file: !3, line: 730, column: 1)
!5279 = distinct !DISubprogram(name: "mmc_cid_show", scope: !3, file: !3, line: 668, type: !2428, scopeLine: 668, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !115)
!5280 = !DILocalVariable(name: "dev", arg: 1, scope: !5279, file: !3, line: 668, type: !76)
!5281 = !DILocation(line: 668, column: 1, scope: !5279)
!5282 = !DILocalVariable(name: "attr", arg: 2, scope: !5279, file: !3, line: 668, type: !2430)
!5283 = !DILocalVariable(name: "buf", arg: 3, scope: !5279, file: !3, line: 668, type: !143)
!5284 = !DILocalVariable(name: "card", scope: !5279, file: !3, line: 668, type: !66)
!5285 = !DILocalVariable(name: "__mptr", scope: !5286, file: !3, line: 668, type: !65)
!5286 = distinct !DILexicalBlock(scope: !5279, file: !3, line: 668, column: 1)
!5287 = !DILocation(line: 668, column: 1, scope: !5286)
!5288 = !DILocation(line: 668, column: 1, scope: !5289)
!5289 = distinct !DILexicalBlock(scope: !5286, file: !3, line: 668, column: 1)
!5290 = distinct !DISubprogram(name: "mmc_csd_show", scope: !3, file: !3, line: 670, type: !2428, scopeLine: 670, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !115)
!5291 = !DILocalVariable(name: "dev", arg: 1, scope: !5290, file: !3, line: 670, type: !76)
!5292 = !DILocation(line: 670, column: 1, scope: !5290)
!5293 = !DILocalVariable(name: "attr", arg: 2, scope: !5290, file: !3, line: 670, type: !2430)
!5294 = !DILocalVariable(name: "buf", arg: 3, scope: !5290, file: !3, line: 670, type: !143)
!5295 = !DILocalVariable(name: "card", scope: !5290, file: !3, line: 670, type: !66)
!5296 = !DILocalVariable(name: "__mptr", scope: !5297, file: !3, line: 670, type: !65)
!5297 = distinct !DILexicalBlock(scope: !5290, file: !3, line: 670, column: 1)
!5298 = !DILocation(line: 670, column: 1, scope: !5297)
!5299 = !DILocation(line: 670, column: 1, scope: !5300)
!5300 = distinct !DILexicalBlock(scope: !5297, file: !3, line: 670, column: 1)
!5301 = distinct !DISubprogram(name: "mmc_scr_show", scope: !3, file: !3, line: 672, type: !2428, scopeLine: 672, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !115)
!5302 = !DILocalVariable(name: "dev", arg: 1, scope: !5301, file: !3, line: 672, type: !76)
!5303 = !DILocation(line: 672, column: 1, scope: !5301)
!5304 = !DILocalVariable(name: "attr", arg: 2, scope: !5301, file: !3, line: 672, type: !2430)
!5305 = !DILocalVariable(name: "buf", arg: 3, scope: !5301, file: !3, line: 672, type: !143)
!5306 = !DILocalVariable(name: "card", scope: !5301, file: !3, line: 672, type: !66)
!5307 = !DILocalVariable(name: "__mptr", scope: !5308, file: !3, line: 672, type: !65)
!5308 = distinct !DILexicalBlock(scope: !5301, file: !3, line: 672, column: 1)
!5309 = !DILocation(line: 672, column: 1, scope: !5308)
!5310 = !DILocation(line: 672, column: 1, scope: !5311)
!5311 = distinct !DILexicalBlock(scope: !5308, file: !3, line: 672, column: 1)
!5312 = distinct !DISubprogram(name: "mmc_ssr_show", scope: !3, file: !3, line: 673, type: !2428, scopeLine: 673, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !115)
!5313 = !DILocalVariable(name: "dev", arg: 1, scope: !5312, file: !3, line: 673, type: !76)
!5314 = !DILocation(line: 673, column: 1, scope: !5312)
!5315 = !DILocalVariable(name: "attr", arg: 2, scope: !5312, file: !3, line: 673, type: !2430)
!5316 = !DILocalVariable(name: "buf", arg: 3, scope: !5312, file: !3, line: 673, type: !143)
!5317 = !DILocalVariable(name: "card", scope: !5312, file: !3, line: 673, type: !66)
!5318 = !DILocalVariable(name: "__mptr", scope: !5319, file: !3, line: 673, type: !65)
!5319 = distinct !DILexicalBlock(scope: !5312, file: !3, line: 673, column: 1)
!5320 = !DILocation(line: 673, column: 1, scope: !5319)
!5321 = !DILocation(line: 673, column: 1, scope: !5322)
!5322 = distinct !DILexicalBlock(scope: !5319, file: !3, line: 673, column: 1)
!5323 = distinct !DISubprogram(name: "mmc_date_show", scope: !3, file: !3, line: 681, type: !2428, scopeLine: 681, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !115)
!5324 = !DILocalVariable(name: "dev", arg: 1, scope: !5323, file: !3, line: 681, type: !76)
!5325 = !DILocation(line: 681, column: 1, scope: !5323)
!5326 = !DILocalVariable(name: "attr", arg: 2, scope: !5323, file: !3, line: 681, type: !2430)
!5327 = !DILocalVariable(name: "buf", arg: 3, scope: !5323, file: !3, line: 681, type: !143)
!5328 = !DILocalVariable(name: "card", scope: !5323, file: !3, line: 681, type: !66)
!5329 = !DILocalVariable(name: "__mptr", scope: !5330, file: !3, line: 681, type: !65)
!5330 = distinct !DILexicalBlock(scope: !5323, file: !3, line: 681, column: 1)
!5331 = !DILocation(line: 681, column: 1, scope: !5330)
!5332 = !DILocation(line: 681, column: 1, scope: !5333)
!5333 = distinct !DILexicalBlock(scope: !5330, file: !3, line: 681, column: 1)
!5334 = distinct !DISubprogram(name: "mmc_erase_size_show", scope: !3, file: !3, line: 682, type: !2428, scopeLine: 682, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !115)
!5335 = !DILocalVariable(name: "dev", arg: 1, scope: !5334, file: !3, line: 682, type: !76)
!5336 = !DILocation(line: 682, column: 1, scope: !5334)
!5337 = !DILocalVariable(name: "attr", arg: 2, scope: !5334, file: !3, line: 682, type: !2430)
!5338 = !DILocalVariable(name: "buf", arg: 3, scope: !5334, file: !3, line: 682, type: !143)
!5339 = !DILocalVariable(name: "card", scope: !5334, file: !3, line: 682, type: !66)
!5340 = !DILocalVariable(name: "__mptr", scope: !5341, file: !3, line: 682, type: !65)
!5341 = distinct !DILexicalBlock(scope: !5334, file: !3, line: 682, column: 1)
!5342 = !DILocation(line: 682, column: 1, scope: !5341)
!5343 = !DILocation(line: 682, column: 1, scope: !5344)
!5344 = distinct !DILexicalBlock(scope: !5341, file: !3, line: 682, column: 1)
!5345 = distinct !DISubprogram(name: "mmc_preferred_erase_size_show", scope: !3, file: !3, line: 683, type: !2428, scopeLine: 683, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !115)
!5346 = !DILocalVariable(name: "dev", arg: 1, scope: !5345, file: !3, line: 683, type: !76)
!5347 = !DILocation(line: 683, column: 1, scope: !5345)
!5348 = !DILocalVariable(name: "attr", arg: 2, scope: !5345, file: !3, line: 683, type: !2430)
!5349 = !DILocalVariable(name: "buf", arg: 3, scope: !5345, file: !3, line: 683, type: !143)
!5350 = !DILocalVariable(name: "card", scope: !5345, file: !3, line: 683, type: !66)
!5351 = !DILocalVariable(name: "__mptr", scope: !5352, file: !3, line: 683, type: !65)
!5352 = distinct !DILexicalBlock(scope: !5345, file: !3, line: 683, column: 1)
!5353 = !DILocation(line: 683, column: 1, scope: !5352)
!5354 = !DILocation(line: 683, column: 1, scope: !5355)
!5355 = distinct !DILexicalBlock(scope: !5352, file: !3, line: 683, column: 1)
!5356 = distinct !DISubprogram(name: "mmc_fwrev_show", scope: !3, file: !3, line: 684, type: !2428, scopeLine: 684, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !115)
!5357 = !DILocalVariable(name: "dev", arg: 1, scope: !5356, file: !3, line: 684, type: !76)
!5358 = !DILocation(line: 684, column: 1, scope: !5356)
!5359 = !DILocalVariable(name: "attr", arg: 2, scope: !5356, file: !3, line: 684, type: !2430)
!5360 = !DILocalVariable(name: "buf", arg: 3, scope: !5356, file: !3, line: 684, type: !143)
!5361 = !DILocalVariable(name: "card", scope: !5356, file: !3, line: 684, type: !66)
!5362 = !DILocalVariable(name: "__mptr", scope: !5363, file: !3, line: 684, type: !65)
!5363 = distinct !DILexicalBlock(scope: !5356, file: !3, line: 684, column: 1)
!5364 = !DILocation(line: 684, column: 1, scope: !5363)
!5365 = !DILocation(line: 684, column: 1, scope: !5366)
!5366 = distinct !DILexicalBlock(scope: !5363, file: !3, line: 684, column: 1)
!5367 = distinct !DISubprogram(name: "mmc_hwrev_show", scope: !3, file: !3, line: 685, type: !2428, scopeLine: 685, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !115)
!5368 = !DILocalVariable(name: "dev", arg: 1, scope: !5367, file: !3, line: 685, type: !76)
!5369 = !DILocation(line: 685, column: 1, scope: !5367)
!5370 = !DILocalVariable(name: "attr", arg: 2, scope: !5367, file: !3, line: 685, type: !2430)
!5371 = !DILocalVariable(name: "buf", arg: 3, scope: !5367, file: !3, line: 685, type: !143)
!5372 = !DILocalVariable(name: "card", scope: !5367, file: !3, line: 685, type: !66)
!5373 = !DILocalVariable(name: "__mptr", scope: !5374, file: !3, line: 685, type: !65)
!5374 = distinct !DILexicalBlock(scope: !5367, file: !3, line: 685, column: 1)
!5375 = !DILocation(line: 685, column: 1, scope: !5374)
!5376 = !DILocation(line: 685, column: 1, scope: !5377)
!5377 = distinct !DILexicalBlock(scope: !5374, file: !3, line: 685, column: 1)
!5378 = distinct !DISubprogram(name: "mmc_manfid_show", scope: !3, file: !3, line: 686, type: !2428, scopeLine: 686, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !115)
!5379 = !DILocalVariable(name: "dev", arg: 1, scope: !5378, file: !3, line: 686, type: !76)
!5380 = !DILocation(line: 686, column: 1, scope: !5378)
!5381 = !DILocalVariable(name: "attr", arg: 2, scope: !5378, file: !3, line: 686, type: !2430)
!5382 = !DILocalVariable(name: "buf", arg: 3, scope: !5378, file: !3, line: 686, type: !143)
!5383 = !DILocalVariable(name: "card", scope: !5378, file: !3, line: 686, type: !66)
!5384 = !DILocalVariable(name: "__mptr", scope: !5385, file: !3, line: 686, type: !65)
!5385 = distinct !DILexicalBlock(scope: !5378, file: !3, line: 686, column: 1)
!5386 = !DILocation(line: 686, column: 1, scope: !5385)
!5387 = !DILocation(line: 686, column: 1, scope: !5388)
!5388 = distinct !DILexicalBlock(scope: !5385, file: !3, line: 686, column: 1)
!5389 = distinct !DISubprogram(name: "mmc_name_show", scope: !3, file: !3, line: 687, type: !2428, scopeLine: 687, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !115)
!5390 = !DILocalVariable(name: "dev", arg: 1, scope: !5389, file: !3, line: 687, type: !76)
!5391 = !DILocation(line: 687, column: 1, scope: !5389)
!5392 = !DILocalVariable(name: "attr", arg: 2, scope: !5389, file: !3, line: 687, type: !2430)
!5393 = !DILocalVariable(name: "buf", arg: 3, scope: !5389, file: !3, line: 687, type: !143)
!5394 = !DILocalVariable(name: "card", scope: !5389, file: !3, line: 687, type: !66)
!5395 = !DILocalVariable(name: "__mptr", scope: !5396, file: !3, line: 687, type: !65)
!5396 = distinct !DILexicalBlock(scope: !5389, file: !3, line: 687, column: 1)
!5397 = !DILocation(line: 687, column: 1, scope: !5396)
!5398 = !DILocation(line: 687, column: 1, scope: !5399)
!5399 = distinct !DILexicalBlock(scope: !5396, file: !3, line: 687, column: 1)
!5400 = distinct !DISubprogram(name: "mmc_oemid_show", scope: !3, file: !3, line: 688, type: !2428, scopeLine: 688, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !115)
!5401 = !DILocalVariable(name: "dev", arg: 1, scope: !5400, file: !3, line: 688, type: !76)
!5402 = !DILocation(line: 688, column: 1, scope: !5400)
!5403 = !DILocalVariable(name: "attr", arg: 2, scope: !5400, file: !3, line: 688, type: !2430)
!5404 = !DILocalVariable(name: "buf", arg: 3, scope: !5400, file: !3, line: 688, type: !143)
!5405 = !DILocalVariable(name: "card", scope: !5400, file: !3, line: 688, type: !66)
!5406 = !DILocalVariable(name: "__mptr", scope: !5407, file: !3, line: 688, type: !65)
!5407 = distinct !DILexicalBlock(scope: !5400, file: !3, line: 688, column: 1)
!5408 = !DILocation(line: 688, column: 1, scope: !5407)
!5409 = !DILocation(line: 688, column: 1, scope: !5410)
!5410 = distinct !DILexicalBlock(scope: !5407, file: !3, line: 688, column: 1)
!5411 = distinct !DISubprogram(name: "mmc_serial_show", scope: !3, file: !3, line: 689, type: !2428, scopeLine: 689, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !115)
!5412 = !DILocalVariable(name: "dev", arg: 1, scope: !5411, file: !3, line: 689, type: !76)
!5413 = !DILocation(line: 689, column: 1, scope: !5411)
!5414 = !DILocalVariable(name: "attr", arg: 2, scope: !5411, file: !3, line: 689, type: !2430)
!5415 = !DILocalVariable(name: "buf", arg: 3, scope: !5411, file: !3, line: 689, type: !143)
!5416 = !DILocalVariable(name: "card", scope: !5411, file: !3, line: 689, type: !66)
!5417 = !DILocalVariable(name: "__mptr", scope: !5418, file: !3, line: 689, type: !65)
!5418 = distinct !DILexicalBlock(scope: !5411, file: !3, line: 689, column: 1)
!5419 = !DILocation(line: 689, column: 1, scope: !5418)
!5420 = !DILocation(line: 689, column: 1, scope: !5421)
!5421 = distinct !DILexicalBlock(scope: !5418, file: !3, line: 689, column: 1)
!5422 = distinct !DISubprogram(name: "mmc_ocr_show", scope: !3, file: !3, line: 690, type: !2428, scopeLine: 690, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !115)
!5423 = !DILocalVariable(name: "dev", arg: 1, scope: !5422, file: !3, line: 690, type: !76)
!5424 = !DILocation(line: 690, column: 1, scope: !5422)
!5425 = !DILocalVariable(name: "attr", arg: 2, scope: !5422, file: !3, line: 690, type: !2430)
!5426 = !DILocalVariable(name: "buf", arg: 3, scope: !5422, file: !3, line: 690, type: !143)
!5427 = !DILocalVariable(name: "card", scope: !5422, file: !3, line: 690, type: !66)
!5428 = !DILocalVariable(name: "__mptr", scope: !5429, file: !3, line: 690, type: !65)
!5429 = distinct !DILexicalBlock(scope: !5422, file: !3, line: 690, column: 1)
!5430 = !DILocation(line: 690, column: 1, scope: !5429)
!5431 = !DILocation(line: 690, column: 1, scope: !5432)
!5432 = distinct !DILexicalBlock(scope: !5429, file: !3, line: 690, column: 1)
!5433 = distinct !DISubprogram(name: "mmc_rca_show", scope: !3, file: !3, line: 691, type: !2428, scopeLine: 691, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !115)
!5434 = !DILocalVariable(name: "dev", arg: 1, scope: !5433, file: !3, line: 691, type: !76)
!5435 = !DILocation(line: 691, column: 1, scope: !5433)
!5436 = !DILocalVariable(name: "attr", arg: 2, scope: !5433, file: !3, line: 691, type: !2430)
!5437 = !DILocalVariable(name: "buf", arg: 3, scope: !5433, file: !3, line: 691, type: !143)
!5438 = !DILocalVariable(name: "card", scope: !5433, file: !3, line: 691, type: !66)
!5439 = !DILocalVariable(name: "__mptr", scope: !5440, file: !3, line: 691, type: !65)
!5440 = distinct !DILexicalBlock(scope: !5433, file: !3, line: 691, column: 1)
!5441 = !DILocation(line: 691, column: 1, scope: !5440)
!5442 = !DILocation(line: 691, column: 1, scope: !5443)
!5443 = distinct !DILexicalBlock(scope: !5440, file: !3, line: 691, column: 1)
!5444 = distinct !DISubprogram(name: "mmc_dsr_show", scope: !3, file: !3, line: 694, type: !2428, scopeLine: 697, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !115)
!5445 = !DILocalVariable(name: "dev", arg: 1, scope: !5444, file: !3, line: 694, type: !76)
!5446 = !DILocation(line: 694, column: 44, scope: !5444)
!5447 = !DILocalVariable(name: "attr", arg: 2, scope: !5444, file: !3, line: 695, type: !2430)
!5448 = !DILocation(line: 695, column: 53, scope: !5444)
!5449 = !DILocalVariable(name: "buf", arg: 3, scope: !5444, file: !3, line: 696, type: !143)
!5450 = !DILocation(line: 696, column: 34, scope: !5444)
!5451 = !DILocalVariable(name: "card", scope: !5444, file: !3, line: 698, type: !66)
!5452 = !DILocation(line: 698, column: 25, scope: !5444)
!5453 = !DILocalVariable(name: "__mptr", scope: !5454, file: !3, line: 698, type: !65)
!5454 = distinct !DILexicalBlock(scope: !5444, file: !3, line: 698, column: 32)
!5455 = !DILocation(line: 698, column: 32, scope: !5454)
!5456 = !DILocation(line: 698, column: 32, scope: !5457)
!5457 = distinct !DILexicalBlock(scope: !5454, file: !3, line: 698, column: 32)
!5458 = !DILocalVariable(name: "host", scope: !5444, file: !3, line: 699, type: !71)
!5459 = !DILocation(line: 699, column: 25, scope: !5444)
!5460 = !DILocation(line: 699, column: 32, scope: !5444)
!5461 = !DILocation(line: 699, column: 38, scope: !5444)
!5462 = !DILocation(line: 701, column: 12, scope: !5463)
!5463 = distinct !DILexicalBlock(scope: !5444, file: !3, line: 701, column: 12)
!5464 = !DILocation(line: 701, column: 18, scope: !5463)
!5465 = !DILocation(line: 701, column: 22, scope: !5463)
!5466 = !DILocation(line: 701, column: 30, scope: !5463)
!5467 = !DILocation(line: 701, column: 33, scope: !5463)
!5468 = !DILocation(line: 701, column: 39, scope: !5463)
!5469 = !DILocation(line: 701, column: 12, scope: !5444)
!5470 = !DILocation(line: 702, column: 31, scope: !5463)
!5471 = !DILocation(line: 702, column: 46, scope: !5463)
!5472 = !DILocation(line: 702, column: 52, scope: !5463)
!5473 = !DILocation(line: 702, column: 23, scope: !5463)
!5474 = !DILocation(line: 702, column: 16, scope: !5463)
!5475 = !DILocation(line: 705, column: 31, scope: !5463)
!5476 = !DILocation(line: 705, column: 23, scope: !5463)
!5477 = !DILocation(line: 705, column: 16, scope: !5463)
!5478 = !DILocation(line: 706, column: 1, scope: !5444)
!5479 = distinct !DISubprogram(name: "__fswab32", scope: !5480, file: !5480, line: 57, type: !5481, scopeLine: 58, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !115)
!5480 = !DIFile(filename: "./include/uapi/linux/swab.h", directory: "/home/lizy2001/genbc/linux")
!5481 = !DISubroutineType(types: !5482)
!5482 = !{!401, !401}
!5483 = !DILocalVariable(name: "val", arg: 1, scope: !5479, file: !5480, line: 57, type: !401)
!5484 = !DILocation(line: 57, column: 57, scope: !5479)
!5485 = !DILocation(line: 60, column: 23, scope: !5479)
!5486 = !DILocation(line: 60, column: 9, scope: !5479)
!5487 = !DILocation(line: 60, column: 2, scope: !5479)
!5488 = distinct !DISubprogram(name: "__arch_swab32", scope: !5489, file: !5489, line: 8, type: !5481, scopeLine: 9, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !115)
!5489 = !DIFile(filename: "./arch/x86/include/uapi/asm/swab.h", directory: "/home/lizy2001/genbc/linux")
!5490 = !DILocalVariable(name: "val", arg: 1, scope: !5488, file: !5489, line: 8, type: !401)
!5491 = !DILocation(line: 8, column: 61, scope: !5488)
!5492 = !DILocation(line: 10, column: 38, scope: !5488)
!5493 = !DILocation(line: 10, column: 2, scope: !5488)
!5494 = !{i32 465385}
!5495 = !DILocation(line: 11, column: 9, scope: !5488)
!5496 = !DILocation(line: 11, column: 2, scope: !5488)
!5497 = distinct !DISubprogram(name: "mmc_sd_remove", scope: !3, file: !3, line: 1170, type: !2024, scopeLine: 1171, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !115)
!5498 = !DILocalVariable(name: "host", arg: 1, scope: !5497, file: !3, line: 1170, type: !71)
!5499 = !DILocation(line: 1170, column: 44, scope: !5497)
!5500 = !DILocation(line: 1172, column: 18, scope: !5497)
!5501 = !DILocation(line: 1172, column: 24, scope: !5497)
!5502 = !DILocation(line: 1172, column: 2, scope: !5497)
!5503 = !DILocation(line: 1173, column: 2, scope: !5497)
!5504 = !DILocation(line: 1173, column: 8, scope: !5497)
!5505 = !DILocation(line: 1173, column: 13, scope: !5497)
!5506 = !DILocation(line: 1174, column: 1, scope: !5497)
!5507 = distinct !DISubprogram(name: "mmc_sd_detect", scope: !3, file: !3, line: 1187, type: !2024, scopeLine: 1188, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !115)
!5508 = !DILocalVariable(name: "host", arg: 1, scope: !5507, file: !3, line: 1187, type: !71)
!5509 = !DILocation(line: 1187, column: 44, scope: !5507)
!5510 = !DILocalVariable(name: "err", scope: !5507, file: !3, line: 1189, type: !127)
!5511 = !DILocation(line: 1189, column: 6, scope: !5507)
!5512 = !DILocation(line: 1191, column: 15, scope: !5507)
!5513 = !DILocation(line: 1191, column: 21, scope: !5507)
!5514 = !DILocation(line: 1191, column: 2, scope: !5507)
!5515 = !DILocation(line: 1196, column: 33, scope: !5507)
!5516 = !DILocation(line: 1196, column: 8, scope: !5507)
!5517 = !DILocation(line: 1196, column: 6, scope: !5507)
!5518 = !DILocation(line: 1198, column: 15, scope: !5507)
!5519 = !DILocation(line: 1198, column: 21, scope: !5507)
!5520 = !DILocation(line: 1198, column: 2, scope: !5507)
!5521 = !DILocation(line: 1200, column: 6, scope: !5522)
!5522 = distinct !DILexicalBlock(scope: !5507, file: !3, line: 1200, column: 6)
!5523 = !DILocation(line: 1200, column: 6, scope: !5507)
!5524 = !DILocation(line: 1201, column: 17, scope: !5525)
!5525 = distinct !DILexicalBlock(scope: !5522, file: !3, line: 1200, column: 11)
!5526 = !DILocation(line: 1201, column: 3, scope: !5525)
!5527 = !DILocation(line: 1203, column: 18, scope: !5525)
!5528 = !DILocation(line: 1203, column: 3, scope: !5525)
!5529 = !DILocation(line: 1204, column: 18, scope: !5525)
!5530 = !DILocation(line: 1204, column: 3, scope: !5525)
!5531 = !DILocation(line: 1205, column: 17, scope: !5525)
!5532 = !DILocation(line: 1205, column: 3, scope: !5525)
!5533 = !DILocation(line: 1206, column: 20, scope: !5525)
!5534 = !DILocation(line: 1206, column: 3, scope: !5525)
!5535 = !DILocation(line: 1207, column: 2, scope: !5525)
!5536 = !DILocation(line: 1208, column: 1, scope: !5507)
!5537 = distinct !DISubprogram(name: "mmc_sd_suspend", scope: !3, file: !3, line: 1235, type: !2015, scopeLine: 1236, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !115)
!5538 = !DILocalVariable(name: "host", arg: 1, scope: !5537, file: !3, line: 1235, type: !71)
!5539 = !DILocation(line: 1235, column: 44, scope: !5537)
!5540 = !DILocalVariable(name: "err", scope: !5537, file: !3, line: 1237, type: !127)
!5541 = !DILocation(line: 1237, column: 6, scope: !5537)
!5542 = !DILocation(line: 1239, column: 24, scope: !5537)
!5543 = !DILocation(line: 1239, column: 8, scope: !5537)
!5544 = !DILocation(line: 1239, column: 6, scope: !5537)
!5545 = !DILocation(line: 1240, column: 7, scope: !5546)
!5546 = distinct !DILexicalBlock(scope: !5537, file: !3, line: 1240, column: 6)
!5547 = !DILocation(line: 1240, column: 6, scope: !5537)
!5548 = !DILocation(line: 1241, column: 23, scope: !5549)
!5549 = distinct !DILexicalBlock(scope: !5546, file: !3, line: 1240, column: 12)
!5550 = !DILocation(line: 1241, column: 29, scope: !5549)
!5551 = !DILocation(line: 1241, column: 35, scope: !5549)
!5552 = !DILocation(line: 1241, column: 3, scope: !5549)
!5553 = !DILocation(line: 1242, column: 29, scope: !5549)
!5554 = !DILocation(line: 1242, column: 35, scope: !5549)
!5555 = !DILocation(line: 1242, column: 41, scope: !5549)
!5556 = !DILocation(line: 1242, column: 3, scope: !5549)
!5557 = !DILocation(line: 1243, column: 2, scope: !5549)
!5558 = !DILocation(line: 1245, column: 9, scope: !5537)
!5559 = !DILocation(line: 1245, column: 2, scope: !5537)
!5560 = distinct !DISubprogram(name: "mmc_sd_resume", scope: !3, file: !3, line: 1273, type: !2015, scopeLine: 1274, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !115)
!5561 = !DILocalVariable(name: "host", arg: 1, scope: !5560, file: !3, line: 1273, type: !71)
!5562 = !DILocation(line: 1273, column: 43, scope: !5560)
!5563 = !DILocation(line: 1275, column: 21, scope: !5560)
!5564 = !DILocation(line: 1275, column: 27, scope: !5560)
!5565 = !DILocation(line: 1275, column: 33, scope: !5560)
!5566 = !DILocation(line: 1275, column: 2, scope: !5560)
!5567 = !DILocation(line: 1276, column: 2, scope: !5560)
!5568 = distinct !DISubprogram(name: "mmc_sd_runtime_suspend", scope: !3, file: !3, line: 1282, type: !2015, scopeLine: 1283, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !115)
!5569 = !DILocalVariable(name: "host", arg: 1, scope: !5568, file: !3, line: 1282, type: !71)
!5570 = !DILocation(line: 1282, column: 52, scope: !5568)
!5571 = !DILocalVariable(name: "err", scope: !5568, file: !3, line: 1284, type: !127)
!5572 = !DILocation(line: 1284, column: 6, scope: !5568)
!5573 = !DILocation(line: 1286, column: 8, scope: !5574)
!5574 = distinct !DILexicalBlock(scope: !5568, file: !3, line: 1286, column: 6)
!5575 = !DILocation(line: 1286, column: 14, scope: !5574)
!5576 = !DILocation(line: 1286, column: 19, scope: !5574)
!5577 = !DILocation(line: 1286, column: 6, scope: !5568)
!5578 = !DILocation(line: 1287, column: 3, scope: !5574)
!5579 = !DILocation(line: 1289, column: 24, scope: !5568)
!5580 = !DILocation(line: 1289, column: 8, scope: !5568)
!5581 = !DILocation(line: 1289, column: 6, scope: !5568)
!5582 = !DILocation(line: 1290, column: 6, scope: !5583)
!5583 = distinct !DILexicalBlock(scope: !5568, file: !3, line: 1290, column: 6)
!5584 = !DILocation(line: 1290, column: 6, scope: !5568)
!5585 = !DILocation(line: 1291, column: 3, scope: !5583)
!5586 = !DILocation(line: 1294, column: 9, scope: !5568)
!5587 = !DILocation(line: 1294, column: 2, scope: !5568)
!5588 = !DILocation(line: 1295, column: 1, scope: !5568)
!5589 = distinct !DISubprogram(name: "mmc_sd_runtime_resume", scope: !3, file: !3, line: 1300, type: !2015, scopeLine: 1301, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !115)
!5590 = !DILocalVariable(name: "host", arg: 1, scope: !5589, file: !3, line: 1300, type: !71)
!5591 = !DILocation(line: 1300, column: 51, scope: !5589)
!5592 = !DILocalVariable(name: "err", scope: !5589, file: !3, line: 1302, type: !127)
!5593 = !DILocation(line: 1302, column: 6, scope: !5589)
!5594 = !DILocation(line: 1304, column: 23, scope: !5589)
!5595 = !DILocation(line: 1304, column: 8, scope: !5589)
!5596 = !DILocation(line: 1304, column: 6, scope: !5589)
!5597 = !DILocation(line: 1305, column: 6, scope: !5598)
!5598 = distinct !DILexicalBlock(scope: !5589, file: !3, line: 1305, column: 6)
!5599 = !DILocation(line: 1305, column: 10, scope: !5598)
!5600 = !DILocation(line: 1305, column: 13, scope: !5598)
!5601 = !DILocation(line: 1305, column: 17, scope: !5598)
!5602 = !DILocation(line: 1305, column: 6, scope: !5589)
!5603 = !DILocation(line: 1306, column: 3, scope: !5598)
!5604 = !DILocation(line: 1309, column: 2, scope: !5589)
!5605 = distinct !DISubprogram(name: "mmc_sd_alive", scope: !3, file: !3, line: 1179, type: !2015, scopeLine: 1180, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !115)
!5606 = !DILocalVariable(name: "host", arg: 1, scope: !5605, file: !3, line: 1179, type: !71)
!5607 = !DILocation(line: 1179, column: 42, scope: !5605)
!5608 = !DILocation(line: 1181, column: 25, scope: !5605)
!5609 = !DILocation(line: 1181, column: 31, scope: !5605)
!5610 = !DILocation(line: 1181, column: 9, scope: !5605)
!5611 = !DILocation(line: 1181, column: 2, scope: !5605)
!5612 = distinct !DISubprogram(name: "mmc_sd_hw_reset", scope: !3, file: !3, line: 1312, type: !2015, scopeLine: 1313, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !115)
!5613 = !DILocalVariable(name: "host", arg: 1, scope: !5612, file: !3, line: 1312, type: !71)
!5614 = !DILocation(line: 1312, column: 45, scope: !5612)
!5615 = !DILocation(line: 1314, column: 18, scope: !5612)
!5616 = !DILocation(line: 1314, column: 24, scope: !5612)
!5617 = !DILocation(line: 1314, column: 30, scope: !5612)
!5618 = !DILocation(line: 1314, column: 36, scope: !5612)
!5619 = !DILocation(line: 1314, column: 2, scope: !5612)
!5620 = !DILocation(line: 1315, column: 26, scope: !5612)
!5621 = !DILocation(line: 1315, column: 32, scope: !5612)
!5622 = !DILocation(line: 1315, column: 38, scope: !5612)
!5623 = !DILocation(line: 1315, column: 44, scope: !5612)
!5624 = !DILocation(line: 1315, column: 49, scope: !5612)
!5625 = !DILocation(line: 1315, column: 55, scope: !5612)
!5626 = !DILocation(line: 1315, column: 9, scope: !5612)
!5627 = !DILocation(line: 1315, column: 2, scope: !5612)
!5628 = distinct !DISubprogram(name: "_mmc_sd_suspend", scope: !3, file: !3, line: 1210, type: !2015, scopeLine: 1211, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !115)
!5629 = !DILocalVariable(name: "host", arg: 1, scope: !5628, file: !3, line: 1210, type: !71)
!5630 = !DILocation(line: 1210, column: 45, scope: !5628)
!5631 = !DILocalVariable(name: "err", scope: !5628, file: !3, line: 1212, type: !127)
!5632 = !DILocation(line: 1212, column: 6, scope: !5628)
!5633 = !DILocation(line: 1214, column: 17, scope: !5628)
!5634 = !DILocation(line: 1214, column: 2, scope: !5628)
!5635 = !DILocation(line: 1216, column: 6, scope: !5636)
!5636 = distinct !DILexicalBlock(scope: !5628, file: !3, line: 1216, column: 6)
!5637 = !DILocation(line: 1216, column: 6, scope: !5628)
!5638 = !DILocation(line: 1217, column: 3, scope: !5636)
!5639 = !DILocation(line: 1219, column: 7, scope: !5640)
!5640 = distinct !DILexicalBlock(scope: !5628, file: !3, line: 1219, column: 6)
!5641 = !DILocation(line: 1219, column: 6, scope: !5628)
!5642 = !DILocation(line: 1220, column: 28, scope: !5640)
!5643 = !DILocation(line: 1220, column: 9, scope: !5640)
!5644 = !DILocation(line: 1220, column: 7, scope: !5640)
!5645 = !DILocation(line: 1220, column: 3, scope: !5640)
!5646 = !DILocation(line: 1222, column: 7, scope: !5647)
!5647 = distinct !DILexicalBlock(scope: !5628, file: !3, line: 1222, column: 6)
!5648 = !DILocation(line: 1222, column: 6, scope: !5628)
!5649 = !DILocation(line: 1223, column: 17, scope: !5650)
!5650 = distinct !DILexicalBlock(scope: !5647, file: !3, line: 1222, column: 12)
!5651 = !DILocation(line: 1223, column: 3, scope: !5650)
!5652 = !DILocation(line: 1224, column: 3, scope: !5650)
!5653 = !DILocation(line: 1225, column: 2, scope: !5650)
!5654 = !DILabel(scope: !5628, name: "out", file: !3, line: 1227)
!5655 = !DILocation(line: 1227, column: 1, scope: !5628)
!5656 = !DILocation(line: 1228, column: 19, scope: !5628)
!5657 = !DILocation(line: 1228, column: 2, scope: !5628)
!5658 = !DILocation(line: 1229, column: 9, scope: !5628)
!5659 = !DILocation(line: 1229, column: 2, scope: !5628)
!5660 = distinct !DISubprogram(name: "pm_runtime_disable", scope: !5661, file: !5661, line: 524, type: !1581, scopeLine: 525, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !115)
!5661 = !DIFile(filename: "./include/linux/pm_runtime.h", directory: "/home/lizy2001/genbc/linux")
!5662 = !DILocalVariable(name: "dev", arg: 1, scope: !5660, file: !5661, line: 524, type: !76)
!5663 = !DILocation(line: 524, column: 54, scope: !5660)
!5664 = !DILocation(line: 526, column: 23, scope: !5660)
!5665 = !DILocation(line: 526, column: 2, scope: !5660)
!5666 = !DILocation(line: 527, column: 1, scope: !5660)
!5667 = distinct !DISubprogram(name: "pm_runtime_set_suspended", scope: !5661, file: !5661, line: 509, type: !1590, scopeLine: 510, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !115)
!5668 = !DILocalVariable(name: "dev", arg: 1, scope: !5667, file: !5661, line: 509, type: !76)
!5669 = !DILocation(line: 509, column: 59, scope: !5667)
!5670 = !DILocation(line: 511, column: 33, scope: !5667)
!5671 = !DILocation(line: 511, column: 9, scope: !5667)
!5672 = !DILocation(line: 511, column: 2, scope: !5667)
!5673 = distinct !DISubprogram(name: "_mmc_sd_resume", scope: !3, file: !3, line: 1252, type: !2015, scopeLine: 1253, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !115)
!5674 = !DILocalVariable(name: "host", arg: 1, scope: !5673, file: !3, line: 1252, type: !71)
!5675 = !DILocation(line: 1252, column: 44, scope: !5673)
!5676 = !DILocalVariable(name: "err", scope: !5673, file: !3, line: 1254, type: !127)
!5677 = !DILocation(line: 1254, column: 6, scope: !5673)
!5678 = !DILocation(line: 1256, column: 17, scope: !5673)
!5679 = !DILocation(line: 1256, column: 2, scope: !5673)
!5680 = !DILocation(line: 1258, column: 7, scope: !5681)
!5681 = distinct !DILexicalBlock(scope: !5673, file: !3, line: 1258, column: 6)
!5682 = !DILocation(line: 1258, column: 6, scope: !5673)
!5683 = !DILocation(line: 1259, column: 3, scope: !5681)
!5684 = !DILocation(line: 1261, column: 15, scope: !5673)
!5685 = !DILocation(line: 1261, column: 21, scope: !5673)
!5686 = !DILocation(line: 1261, column: 27, scope: !5673)
!5687 = !DILocation(line: 1261, column: 33, scope: !5673)
!5688 = !DILocation(line: 1261, column: 2, scope: !5673)
!5689 = !DILocation(line: 1262, column: 25, scope: !5673)
!5690 = !DILocation(line: 1262, column: 31, scope: !5673)
!5691 = !DILocation(line: 1262, column: 37, scope: !5673)
!5692 = !DILocation(line: 1262, column: 43, scope: !5673)
!5693 = !DILocation(line: 1262, column: 48, scope: !5673)
!5694 = !DILocation(line: 1262, column: 54, scope: !5673)
!5695 = !DILocation(line: 1262, column: 8, scope: !5673)
!5696 = !DILocation(line: 1262, column: 6, scope: !5673)
!5697 = !DILocation(line: 1263, column: 2, scope: !5673)
!5698 = !DILabel(scope: !5673, name: "out", file: !3, line: 1265)
!5699 = !DILocation(line: 1265, column: 1, scope: !5673)
!5700 = !DILocation(line: 1266, column: 19, scope: !5673)
!5701 = !DILocation(line: 1266, column: 2, scope: !5673)
!5702 = !DILocation(line: 1267, column: 9, scope: !5673)
!5703 = !DILocation(line: 1267, column: 2, scope: !5673)
!5704 = distinct !DISubprogram(name: "IS_ERR", scope: !5705, file: !5705, line: 34, type: !5706, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !115)
!5705 = !DIFile(filename: "./include/linux/err.h", directory: "/home/lizy2001/genbc/linux")
!5706 = !DISubroutineType(types: !5707)
!5707 = !{!970, !1361}
!5708 = !DILocalVariable(name: "ptr", arg: 1, scope: !5704, file: !5705, line: 34, type: !1361)
!5709 = !DILocation(line: 34, column: 60, scope: !5704)
!5710 = !DILocation(line: 36, column: 9, scope: !5704)
!5711 = !DILocation(line: 36, column: 2, scope: !5704)
!5712 = distinct !DISubprogram(name: "PTR_ERR", scope: !5705, file: !5705, line: 29, type: !5713, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !115)
!5713 = !DISubroutineType(types: !5714)
!5714 = !{!178, !1361}
!5715 = !DILocalVariable(name: "ptr", arg: 1, scope: !5712, file: !5705, line: 29, type: !1361)
!5716 = !DILocation(line: 29, column: 61, scope: !5712)
!5717 = !DILocation(line: 31, column: 16, scope: !5712)
!5718 = !DILocation(line: 31, column: 9, scope: !5712)
!5719 = !DILocation(line: 31, column: 2, scope: !5712)
!5720 = distinct !DISubprogram(name: "mmc_sd_card_using_v18", scope: !3, file: !3, line: 979, type: !5721, scopeLine: 980, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !115)
!5721 = !DISubroutineType(types: !5722)
!5722 = !{!970, !66}
!5723 = !DILocalVariable(name: "card", arg: 1, scope: !5720, file: !3, line: 979, type: !66)
!5724 = !DILocation(line: 979, column: 52, scope: !5720)
!5725 = !DILocation(line: 987, column: 9, scope: !5720)
!5726 = !DILocation(line: 987, column: 15, scope: !5720)
!5727 = !DILocation(line: 987, column: 23, scope: !5720)
!5728 = !DILocation(line: 987, column: 36, scope: !5720)
!5729 = !DILocation(line: 987, column: 2, scope: !5720)
!5730 = distinct !DISubprogram(name: "mmc_sd_init_uhs_card", scope: !3, file: !3, line: 598, type: !2690, scopeLine: 599, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !115)
!5731 = !DILocation(line: 445, column: 72, scope: !2693, inlinedAt: !5732)
!5732 = distinct !DILocation(line: 552, column: 10, scope: !2698, inlinedAt: !5733)
!5733 = distinct !DILocation(line: 606, column: 11, scope: !5730)
!5734 = !DILocation(line: 446, column: 9, scope: !2693, inlinedAt: !5732)
!5735 = !DILocation(line: 446, column: 23, scope: !2693, inlinedAt: !5732)
!5736 = !DILocation(line: 448, column: 8, scope: !2693, inlinedAt: !5732)
!5737 = !DILocation(line: 318, column: 67, scope: !2711, inlinedAt: !5738)
!5738 = distinct !DILocation(line: 553, column: 20, scope: !2698, inlinedAt: !5733)
!5739 = !DILocation(line: 346, column: 58, scope: !2717, inlinedAt: !5740)
!5740 = distinct !DILocation(line: 547, column: 11, scope: !2698, inlinedAt: !5733)
!5741 = !DILocation(line: 472, column: 28, scope: !2723, inlinedAt: !5742)
!5742 = distinct !DILocation(line: 481, column: 9, scope: !2728, inlinedAt: !5743)
!5743 = distinct !DILocation(line: 545, column: 11, scope: !2730, inlinedAt: !5733)
!5744 = !DILocation(line: 472, column: 40, scope: !2723, inlinedAt: !5742)
!5745 = !DILocation(line: 472, column: 60, scope: !2723, inlinedAt: !5742)
!5746 = !DILocation(line: 478, column: 51, scope: !2728, inlinedAt: !5743)
!5747 = !DILocation(line: 478, column: 63, scope: !2728, inlinedAt: !5743)
!5748 = !DILocation(line: 480, column: 15, scope: !2728, inlinedAt: !5743)
!5749 = !DILocation(line: 538, column: 45, scope: !2700, inlinedAt: !5733)
!5750 = !DILocation(line: 538, column: 57, scope: !2700, inlinedAt: !5733)
!5751 = !DILocation(line: 542, column: 16, scope: !2698, inlinedAt: !5733)
!5752 = !DILocalVariable(name: "card", arg: 1, scope: !5730, file: !3, line: 598, type: !66)
!5753 = !DILocation(line: 598, column: 50, scope: !5730)
!5754 = !DILocalVariable(name: "err", scope: !5730, file: !3, line: 600, type: !127)
!5755 = !DILocation(line: 600, column: 6, scope: !5730)
!5756 = !DILocalVariable(name: "status", scope: !5730, file: !3, line: 601, type: !2752)
!5757 = !DILocation(line: 601, column: 6, scope: !5730)
!5758 = !DILocation(line: 603, column: 8, scope: !5759)
!5759 = distinct !DILexicalBlock(scope: !5730, file: !3, line: 603, column: 6)
!5760 = !DILocation(line: 603, column: 14, scope: !5759)
!5761 = !DILocation(line: 603, column: 18, scope: !5759)
!5762 = !DILocation(line: 603, column: 27, scope: !5759)
!5763 = !DILocation(line: 603, column: 6, scope: !5730)
!5764 = !DILocation(line: 604, column: 3, scope: !5759)
!5765 = !DILocation(line: 540, column: 27, scope: !2699, inlinedAt: !5733)
!5766 = !DILocation(line: 540, column: 6, scope: !2699, inlinedAt: !5733)
!5767 = !DILocation(line: 540, column: 6, scope: !2700, inlinedAt: !5733)
!5768 = !DILocation(line: 544, column: 7, scope: !2730, inlinedAt: !5733)
!5769 = !DILocation(line: 544, column: 12, scope: !2730, inlinedAt: !5733)
!5770 = !DILocation(line: 544, column: 7, scope: !2698, inlinedAt: !5733)
!5771 = !DILocation(line: 545, column: 25, scope: !2730, inlinedAt: !5733)
!5772 = !DILocation(line: 545, column: 31, scope: !2730, inlinedAt: !5733)
!5773 = !DILocation(line: 480, column: 33, scope: !2728, inlinedAt: !5743)
!5774 = !DILocation(line: 480, column: 23, scope: !2728, inlinedAt: !5743)
!5775 = !DILocation(line: 481, column: 29, scope: !2728, inlinedAt: !5743)
!5776 = !DILocation(line: 481, column: 35, scope: !2728, inlinedAt: !5743)
!5777 = !DILocation(line: 481, column: 42, scope: !2728, inlinedAt: !5743)
!5778 = !DILocation(line: 474, column: 23, scope: !2723, inlinedAt: !5742)
!5779 = !DILocation(line: 474, column: 29, scope: !2723, inlinedAt: !5742)
!5780 = !DILocation(line: 474, column: 36, scope: !2723, inlinedAt: !5742)
!5781 = !DILocation(line: 474, column: 9, scope: !2723, inlinedAt: !5742)
!5782 = !DILocation(line: 545, column: 4, scope: !2730, inlinedAt: !5733)
!5783 = !DILocation(line: 547, column: 25, scope: !2698, inlinedAt: !5733)
!5784 = !DILocation(line: 348, column: 7, scope: !2802, inlinedAt: !5740)
!5785 = !DILocation(line: 348, column: 6, scope: !2717, inlinedAt: !5740)
!5786 = !DILocation(line: 349, column: 3, scope: !2802, inlinedAt: !5740)
!5787 = !DILocation(line: 351, column: 6, scope: !2806, inlinedAt: !5740)
!5788 = !DILocation(line: 351, column: 11, scope: !2806, inlinedAt: !5740)
!5789 = !DILocation(line: 351, column: 6, scope: !2717, inlinedAt: !5740)
!5790 = !DILocation(line: 352, column: 3, scope: !2806, inlinedAt: !5740)
!5791 = !DILocation(line: 354, column: 32, scope: !2811, inlinedAt: !5740)
!5792 = !DILocation(line: 354, column: 37, scope: !2811, inlinedAt: !5740)
!5793 = !DILocation(line: 354, column: 42, scope: !2811, inlinedAt: !5740)
!5794 = !DILocation(line: 354, column: 45, scope: !2811, inlinedAt: !5740)
!5795 = !DILocation(line: 354, column: 50, scope: !2811, inlinedAt: !5740)
!5796 = !DILocation(line: 354, column: 6, scope: !2717, inlinedAt: !5740)
!5797 = !DILocation(line: 355, column: 3, scope: !2811, inlinedAt: !5740)
!5798 = !DILocation(line: 356, column: 32, scope: !2819, inlinedAt: !5740)
!5799 = !DILocation(line: 356, column: 37, scope: !2819, inlinedAt: !5740)
!5800 = !DILocation(line: 356, column: 43, scope: !2819, inlinedAt: !5740)
!5801 = !DILocation(line: 356, column: 46, scope: !2819, inlinedAt: !5740)
!5802 = !DILocation(line: 356, column: 51, scope: !2819, inlinedAt: !5740)
!5803 = !DILocation(line: 356, column: 6, scope: !2717, inlinedAt: !5740)
!5804 = !DILocation(line: 357, column: 3, scope: !2819, inlinedAt: !5740)
!5805 = !DILocation(line: 358, column: 6, scope: !2827, inlinedAt: !5740)
!5806 = !DILocation(line: 358, column: 11, scope: !2827, inlinedAt: !5740)
!5807 = !DILocation(line: 358, column: 6, scope: !2717, inlinedAt: !5740)
!5808 = !DILocation(line: 358, column: 26, scope: !2827, inlinedAt: !5740)
!5809 = !DILocation(line: 359, column: 6, scope: !2832, inlinedAt: !5740)
!5810 = !DILocation(line: 359, column: 11, scope: !2832, inlinedAt: !5740)
!5811 = !DILocation(line: 359, column: 6, scope: !2717, inlinedAt: !5740)
!5812 = !DILocation(line: 359, column: 26, scope: !2832, inlinedAt: !5740)
!5813 = !DILocation(line: 360, column: 6, scope: !2837, inlinedAt: !5740)
!5814 = !DILocation(line: 360, column: 11, scope: !2837, inlinedAt: !5740)
!5815 = !DILocation(line: 360, column: 6, scope: !2717, inlinedAt: !5740)
!5816 = !DILocation(line: 360, column: 26, scope: !2837, inlinedAt: !5740)
!5817 = !DILocation(line: 361, column: 6, scope: !2842, inlinedAt: !5740)
!5818 = !DILocation(line: 361, column: 11, scope: !2842, inlinedAt: !5740)
!5819 = !DILocation(line: 361, column: 6, scope: !2717, inlinedAt: !5740)
!5820 = !DILocation(line: 361, column: 26, scope: !2842, inlinedAt: !5740)
!5821 = !DILocation(line: 362, column: 6, scope: !2847, inlinedAt: !5740)
!5822 = !DILocation(line: 362, column: 11, scope: !2847, inlinedAt: !5740)
!5823 = !DILocation(line: 362, column: 6, scope: !2717, inlinedAt: !5740)
!5824 = !DILocation(line: 362, column: 26, scope: !2847, inlinedAt: !5740)
!5825 = !DILocation(line: 363, column: 6, scope: !2852, inlinedAt: !5740)
!5826 = !DILocation(line: 363, column: 11, scope: !2852, inlinedAt: !5740)
!5827 = !DILocation(line: 363, column: 6, scope: !2717, inlinedAt: !5740)
!5828 = !DILocation(line: 363, column: 26, scope: !2852, inlinedAt: !5740)
!5829 = !DILocation(line: 364, column: 6, scope: !2857, inlinedAt: !5740)
!5830 = !DILocation(line: 364, column: 11, scope: !2857, inlinedAt: !5740)
!5831 = !DILocation(line: 364, column: 6, scope: !2717, inlinedAt: !5740)
!5832 = !DILocation(line: 364, column: 26, scope: !2857, inlinedAt: !5740)
!5833 = !DILocation(line: 365, column: 6, scope: !2862, inlinedAt: !5740)
!5834 = !DILocation(line: 365, column: 11, scope: !2862, inlinedAt: !5740)
!5835 = !DILocation(line: 365, column: 6, scope: !2717, inlinedAt: !5740)
!5836 = !DILocation(line: 365, column: 26, scope: !2862, inlinedAt: !5740)
!5837 = !DILocation(line: 366, column: 6, scope: !2867, inlinedAt: !5740)
!5838 = !DILocation(line: 366, column: 11, scope: !2867, inlinedAt: !5740)
!5839 = !DILocation(line: 366, column: 6, scope: !2717, inlinedAt: !5740)
!5840 = !DILocation(line: 366, column: 26, scope: !2867, inlinedAt: !5740)
!5841 = !DILocation(line: 367, column: 6, scope: !2872, inlinedAt: !5740)
!5842 = !DILocation(line: 367, column: 11, scope: !2872, inlinedAt: !5740)
!5843 = !DILocation(line: 367, column: 6, scope: !2717, inlinedAt: !5740)
!5844 = !DILocation(line: 367, column: 26, scope: !2872, inlinedAt: !5740)
!5845 = !DILocation(line: 368, column: 6, scope: !2877, inlinedAt: !5740)
!5846 = !DILocation(line: 368, column: 11, scope: !2877, inlinedAt: !5740)
!5847 = !DILocation(line: 368, column: 6, scope: !2717, inlinedAt: !5740)
!5848 = !DILocation(line: 368, column: 26, scope: !2877, inlinedAt: !5740)
!5849 = !DILocation(line: 369, column: 6, scope: !2882, inlinedAt: !5740)
!5850 = !DILocation(line: 369, column: 11, scope: !2882, inlinedAt: !5740)
!5851 = !DILocation(line: 369, column: 6, scope: !2717, inlinedAt: !5740)
!5852 = !DILocation(line: 369, column: 26, scope: !2882, inlinedAt: !5740)
!5853 = !DILocation(line: 370, column: 6, scope: !2887, inlinedAt: !5740)
!5854 = !DILocation(line: 370, column: 11, scope: !2887, inlinedAt: !5740)
!5855 = !DILocation(line: 370, column: 6, scope: !2717, inlinedAt: !5740)
!5856 = !DILocation(line: 370, column: 26, scope: !2887, inlinedAt: !5740)
!5857 = !DILocation(line: 371, column: 6, scope: !2892, inlinedAt: !5740)
!5858 = !DILocation(line: 371, column: 11, scope: !2892, inlinedAt: !5740)
!5859 = !DILocation(line: 371, column: 6, scope: !2717, inlinedAt: !5740)
!5860 = !DILocation(line: 371, column: 26, scope: !2892, inlinedAt: !5740)
!5861 = !DILocation(line: 372, column: 6, scope: !2897, inlinedAt: !5740)
!5862 = !DILocation(line: 372, column: 11, scope: !2897, inlinedAt: !5740)
!5863 = !DILocation(line: 372, column: 6, scope: !2717, inlinedAt: !5740)
!5864 = !DILocation(line: 372, column: 26, scope: !2897, inlinedAt: !5740)
!5865 = !DILocation(line: 373, column: 6, scope: !2902, inlinedAt: !5740)
!5866 = !DILocation(line: 373, column: 11, scope: !2902, inlinedAt: !5740)
!5867 = !DILocation(line: 373, column: 6, scope: !2717, inlinedAt: !5740)
!5868 = !DILocation(line: 373, column: 26, scope: !2902, inlinedAt: !5740)
!5869 = !DILocation(line: 374, column: 6, scope: !2907, inlinedAt: !5740)
!5870 = !DILocation(line: 374, column: 11, scope: !2907, inlinedAt: !5740)
!5871 = !DILocation(line: 374, column: 6, scope: !2717, inlinedAt: !5740)
!5872 = !DILocation(line: 374, column: 26, scope: !2907, inlinedAt: !5740)
!5873 = !DILocation(line: 375, column: 6, scope: !2912, inlinedAt: !5740)
!5874 = !DILocation(line: 375, column: 11, scope: !2912, inlinedAt: !5740)
!5875 = !DILocation(line: 375, column: 6, scope: !2717, inlinedAt: !5740)
!5876 = !DILocation(line: 375, column: 27, scope: !2912, inlinedAt: !5740)
!5877 = !DILocation(line: 376, column: 6, scope: !2917, inlinedAt: !5740)
!5878 = !DILocation(line: 376, column: 11, scope: !2917, inlinedAt: !5740)
!5879 = !DILocation(line: 376, column: 6, scope: !2717, inlinedAt: !5740)
!5880 = !DILocation(line: 376, column: 32, scope: !2917, inlinedAt: !5740)
!5881 = !DILocation(line: 377, column: 6, scope: !2922, inlinedAt: !5740)
!5882 = !DILocation(line: 377, column: 11, scope: !2922, inlinedAt: !5740)
!5883 = !DILocation(line: 377, column: 6, scope: !2717, inlinedAt: !5740)
!5884 = !DILocation(line: 377, column: 32, scope: !2922, inlinedAt: !5740)
!5885 = !DILocation(line: 378, column: 6, scope: !2927, inlinedAt: !5740)
!5886 = !DILocation(line: 378, column: 11, scope: !2927, inlinedAt: !5740)
!5887 = !DILocation(line: 378, column: 6, scope: !2717, inlinedAt: !5740)
!5888 = !DILocation(line: 378, column: 32, scope: !2927, inlinedAt: !5740)
!5889 = !DILocation(line: 379, column: 6, scope: !2932, inlinedAt: !5740)
!5890 = !DILocation(line: 379, column: 11, scope: !2932, inlinedAt: !5740)
!5891 = !DILocation(line: 379, column: 6, scope: !2717, inlinedAt: !5740)
!5892 = !DILocation(line: 379, column: 33, scope: !2932, inlinedAt: !5740)
!5893 = !DILocation(line: 380, column: 6, scope: !2937, inlinedAt: !5740)
!5894 = !DILocation(line: 380, column: 11, scope: !2937, inlinedAt: !5740)
!5895 = !DILocation(line: 380, column: 6, scope: !2717, inlinedAt: !5740)
!5896 = !DILocation(line: 380, column: 33, scope: !2937, inlinedAt: !5740)
!5897 = !DILocation(line: 381, column: 6, scope: !2942, inlinedAt: !5740)
!5898 = !DILocation(line: 381, column: 11, scope: !2942, inlinedAt: !5740)
!5899 = !DILocation(line: 381, column: 6, scope: !2717, inlinedAt: !5740)
!5900 = !DILocation(line: 381, column: 33, scope: !2942, inlinedAt: !5740)
!5901 = !DILocation(line: 382, column: 2, scope: !2947, inlinedAt: !5740)
!5902 = !DILocation(line: 382, column: 2, scope: !2951, inlinedAt: !5740)
!5903 = !DILocation(line: 382, column: 2, scope: !2952, inlinedAt: !5740)
!5904 = !DILocation(line: 386, column: 1, scope: !2717, inlinedAt: !5740)
!5905 = !DILocation(line: 547, column: 9, scope: !2698, inlinedAt: !5733)
!5906 = !DILocation(line: 549, column: 8, scope: !2958, inlinedAt: !5733)
!5907 = !DILocation(line: 549, column: 7, scope: !2698, inlinedAt: !5733)
!5908 = !DILocation(line: 550, column: 4, scope: !2958, inlinedAt: !5733)
!5909 = !DILocation(line: 553, column: 33, scope: !2698, inlinedAt: !5733)
!5910 = !DILocation(line: 325, column: 6, scope: !2963, inlinedAt: !5738)
!5911 = !DILocation(line: 325, column: 6, scope: !2711, inlinedAt: !5738)
!5912 = !DILocation(line: 326, column: 3, scope: !2963, inlinedAt: !5738)
!5913 = !DILocation(line: 332, column: 9, scope: !2711, inlinedAt: !5738)
!5914 = !DILocation(line: 332, column: 15, scope: !2711, inlinedAt: !5738)
!5915 = !DILocation(line: 332, column: 2, scope: !2711, inlinedAt: !5738)
!5916 = !DILocation(line: 336, column: 1, scope: !2711, inlinedAt: !5738)
!5917 = !DILocation(line: 553, column: 5, scope: !2698, inlinedAt: !5733)
!5918 = !DILocation(line: 553, column: 41, scope: !2698, inlinedAt: !5733)
!5919 = !DILocation(line: 554, column: 5, scope: !2698, inlinedAt: !5733)
!5920 = !DILocation(line: 554, column: 12, scope: !2698, inlinedAt: !5733)
!5921 = !DILocation(line: 448, column: 31, scope: !2693, inlinedAt: !5732)
!5922 = !DILocation(line: 448, column: 34, scope: !2693, inlinedAt: !5732)
!5923 = !DILocation(line: 448, column: 14, scope: !2693, inlinedAt: !5732)
!5924 = !DILocation(line: 450, column: 22, scope: !2693, inlinedAt: !5732)
!5925 = !DILocation(line: 450, column: 25, scope: !2693, inlinedAt: !5732)
!5926 = !DILocation(line: 450, column: 30, scope: !2693, inlinedAt: !5732)
!5927 = !DILocation(line: 450, column: 36, scope: !2693, inlinedAt: !5732)
!5928 = !DILocation(line: 450, column: 8, scope: !2693, inlinedAt: !5732)
!5929 = !DILocation(line: 450, column: 6, scope: !2693, inlinedAt: !5732)
!5930 = !DILocation(line: 451, column: 9, scope: !2693, inlinedAt: !5732)
!5931 = !DILocation(line: 552, column: 3, scope: !2698, inlinedAt: !5733)
!5932 = !DILocation(line: 557, column: 19, scope: !2700, inlinedAt: !5733)
!5933 = !DILocation(line: 557, column: 25, scope: !2700, inlinedAt: !5733)
!5934 = !DILocation(line: 557, column: 9, scope: !2700, inlinedAt: !5733)
!5935 = !DILocation(line: 557, column: 2, scope: !2700, inlinedAt: !5733)
!5936 = !DILocation(line: 558, column: 1, scope: !2700, inlinedAt: !5733)
!5937 = !DILocation(line: 606, column: 9, scope: !5730)
!5938 = !DILocation(line: 607, column: 7, scope: !5939)
!5939 = distinct !DILexicalBlock(scope: !5730, file: !3, line: 607, column: 6)
!5940 = !DILocation(line: 607, column: 6, scope: !5730)
!5941 = !DILocation(line: 608, column: 3, scope: !5939)
!5942 = !DILocation(line: 611, column: 30, scope: !5730)
!5943 = !DILocation(line: 611, column: 8, scope: !5730)
!5944 = !DILocation(line: 611, column: 6, scope: !5730)
!5945 = !DILocation(line: 612, column: 6, scope: !5946)
!5946 = distinct !DILexicalBlock(scope: !5730, file: !3, line: 612, column: 6)
!5947 = !DILocation(line: 612, column: 6, scope: !5730)
!5948 = !DILocation(line: 613, column: 3, scope: !5946)
!5949 = !DILocation(line: 615, column: 20, scope: !5730)
!5950 = !DILocation(line: 615, column: 26, scope: !5730)
!5951 = !DILocation(line: 615, column: 2, scope: !5730)
!5952 = !DILocation(line: 621, column: 27, scope: !5730)
!5953 = !DILocation(line: 621, column: 2, scope: !5730)
!5954 = !DILocation(line: 624, column: 30, scope: !5730)
!5955 = !DILocation(line: 624, column: 36, scope: !5730)
!5956 = !DILocation(line: 624, column: 8, scope: !5730)
!5957 = !DILocation(line: 624, column: 6, scope: !5730)
!5958 = !DILocation(line: 625, column: 6, scope: !5959)
!5959 = distinct !DILexicalBlock(scope: !5730, file: !3, line: 625, column: 6)
!5960 = !DILocation(line: 625, column: 6, scope: !5730)
!5961 = !DILocation(line: 626, column: 3, scope: !5959)
!5962 = !DILocation(line: 629, column: 29, scope: !5730)
!5963 = !DILocation(line: 629, column: 35, scope: !5730)
!5964 = !DILocation(line: 629, column: 8, scope: !5730)
!5965 = !DILocation(line: 629, column: 6, scope: !5730)
!5966 = !DILocation(line: 630, column: 6, scope: !5967)
!5967 = distinct !DILexicalBlock(scope: !5730, file: !3, line: 630, column: 6)
!5968 = !DILocation(line: 630, column: 6, scope: !5730)
!5969 = !DILocation(line: 631, column: 3, scope: !5967)
!5970 = !DILocation(line: 634, column: 30, scope: !5730)
!5971 = !DILocation(line: 634, column: 36, scope: !5730)
!5972 = !DILocation(line: 634, column: 8, scope: !5730)
!5973 = !DILocation(line: 634, column: 6, scope: !5730)
!5974 = !DILocation(line: 635, column: 6, scope: !5975)
!5975 = distinct !DILexicalBlock(scope: !5730, file: !3, line: 635, column: 6)
!5976 = !DILocation(line: 635, column: 6, scope: !5730)
!5977 = !DILocation(line: 636, column: 3, scope: !5975)
!5978 = !DILocation(line: 642, column: 7, scope: !5979)
!5979 = distinct !DILexicalBlock(scope: !5730, file: !3, line: 642, column: 6)
!5980 = !DILocation(line: 642, column: 35, scope: !5979)
!5981 = !DILocation(line: 643, column: 4, scope: !5979)
!5982 = !DILocation(line: 643, column: 10, scope: !5979)
!5983 = !DILocation(line: 643, column: 16, scope: !5979)
!5984 = !DILocation(line: 643, column: 20, scope: !5979)
!5985 = !DILocation(line: 643, column: 27, scope: !5979)
!5986 = !DILocation(line: 643, column: 51, scope: !5979)
!5987 = !DILocation(line: 644, column: 4, scope: !5979)
!5988 = !DILocation(line: 644, column: 10, scope: !5979)
!5989 = !DILocation(line: 644, column: 16, scope: !5979)
!5990 = !DILocation(line: 644, column: 20, scope: !5979)
!5991 = !DILocation(line: 644, column: 27, scope: !5979)
!5992 = !DILocation(line: 644, column: 51, scope: !5979)
!5993 = !DILocation(line: 645, column: 4, scope: !5979)
!5994 = !DILocation(line: 645, column: 10, scope: !5979)
!5995 = !DILocation(line: 645, column: 16, scope: !5979)
!5996 = !DILocation(line: 645, column: 20, scope: !5979)
!5997 = !DILocation(line: 645, column: 27, scope: !5979)
!5998 = !DILocation(line: 642, column: 6, scope: !5730)
!5999 = !DILocation(line: 646, column: 28, scope: !6000)
!6000 = distinct !DILexicalBlock(scope: !5979, file: !3, line: 645, column: 54)
!6001 = !DILocation(line: 646, column: 9, scope: !6000)
!6002 = !DILocation(line: 646, column: 7, scope: !6000)
!6003 = !DILocation(line: 655, column: 7, scope: !6004)
!6004 = distinct !DILexicalBlock(scope: !6000, file: !3, line: 655, column: 7)
!6005 = !DILocation(line: 655, column: 11, scope: !6004)
!6006 = !DILocation(line: 655, column: 14, scope: !6004)
!6007 = !DILocation(line: 655, column: 20, scope: !6004)
!6008 = !DILocation(line: 655, column: 26, scope: !6004)
!6009 = !DILocation(line: 655, column: 30, scope: !6004)
!6010 = !DILocation(line: 655, column: 37, scope: !6004)
!6011 = !DILocation(line: 655, column: 7, scope: !6000)
!6012 = !DILocation(line: 656, column: 4, scope: !6013)
!6013 = distinct !DILexicalBlock(scope: !6004, file: !3, line: 655, column: 62)
!6014 = !DILocation(line: 658, column: 8, scope: !6013)
!6015 = !DILocation(line: 659, column: 3, scope: !6013)
!6016 = !DILocation(line: 660, column: 2, scope: !6000)
!6017 = !DILocation(line: 645, column: 51, scope: !5979)
!6018 = !DILabel(scope: !5730, name: "out", file: !3, line: 662)
!6019 = !DILocation(line: 662, column: 1, scope: !5730)
!6020 = !DILocation(line: 663, column: 8, scope: !5730)
!6021 = !DILocation(line: 663, column: 2, scope: !5730)
!6022 = !DILocation(line: 665, column: 9, scope: !5730)
!6023 = !DILocation(line: 665, column: 2, scope: !5730)
!6024 = !DILocation(line: 666, column: 1, scope: !5730)
!6025 = distinct !DISubprogram(name: "sd_update_bus_speed_mode", scope: !3, file: !3, line: 428, type: !2508, scopeLine: 429, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !115)
!6026 = !DILocalVariable(name: "card", arg: 1, scope: !6025, file: !3, line: 428, type: !66)
!6027 = !DILocation(line: 428, column: 55, scope: !6025)
!6028 = !DILocation(line: 434, column: 20, scope: !6029)
!6029 = distinct !DILexicalBlock(scope: !6025, file: !3, line: 434, column: 6)
!6030 = !DILocation(line: 434, column: 26, scope: !6029)
!6031 = !DILocation(line: 434, column: 7, scope: !6029)
!6032 = !DILocation(line: 434, column: 6, scope: !6025)
!6033 = !DILocation(line: 435, column: 3, scope: !6034)
!6034 = distinct !DILexicalBlock(scope: !6029, file: !3, line: 434, column: 33)
!6035 = !DILocation(line: 435, column: 9, scope: !6034)
!6036 = !DILocation(line: 435, column: 22, scope: !6034)
!6037 = !DILocation(line: 436, column: 3, scope: !6034)
!6038 = !DILocation(line: 439, column: 7, scope: !6039)
!6039 = distinct !DILexicalBlock(scope: !6025, file: !3, line: 439, column: 6)
!6040 = !DILocation(line: 439, column: 13, scope: !6039)
!6041 = !DILocation(line: 439, column: 19, scope: !6039)
!6042 = !DILocation(line: 439, column: 24, scope: !6039)
!6043 = !DILocation(line: 439, column: 46, scope: !6039)
!6044 = !DILocation(line: 440, column: 7, scope: !6039)
!6045 = !DILocation(line: 440, column: 13, scope: !6039)
!6046 = !DILocation(line: 440, column: 21, scope: !6039)
!6047 = !DILocation(line: 440, column: 34, scope: !6039)
!6048 = !DILocation(line: 439, column: 6, scope: !6025)
!6049 = !DILocation(line: 441, column: 4, scope: !6050)
!6050 = distinct !DILexicalBlock(scope: !6039, file: !3, line: 440, column: 57)
!6051 = !DILocation(line: 441, column: 10, scope: !6050)
!6052 = !DILocation(line: 441, column: 23, scope: !6050)
!6053 = !DILocation(line: 442, column: 2, scope: !6050)
!6054 = !DILocation(line: 442, column: 14, scope: !6055)
!6055 = distinct !DILexicalBlock(scope: !6039, file: !3, line: 442, column: 13)
!6056 = !DILocation(line: 442, column: 20, scope: !6055)
!6057 = !DILocation(line: 442, column: 26, scope: !6055)
!6058 = !DILocation(line: 442, column: 31, scope: !6055)
!6059 = !DILocation(line: 442, column: 52, scope: !6055)
!6060 = !DILocation(line: 443, column: 7, scope: !6055)
!6061 = !DILocation(line: 443, column: 13, scope: !6055)
!6062 = !DILocation(line: 443, column: 21, scope: !6055)
!6063 = !DILocation(line: 443, column: 34, scope: !6055)
!6064 = !DILocation(line: 442, column: 13, scope: !6039)
!6065 = !DILocation(line: 444, column: 4, scope: !6066)
!6066 = distinct !DILexicalBlock(scope: !6055, file: !3, line: 443, column: 56)
!6067 = !DILocation(line: 444, column: 10, scope: !6066)
!6068 = !DILocation(line: 444, column: 23, scope: !6066)
!6069 = !DILocation(line: 445, column: 2, scope: !6066)
!6070 = !DILocation(line: 445, column: 14, scope: !6071)
!6071 = distinct !DILexicalBlock(scope: !6055, file: !3, line: 445, column: 13)
!6072 = !DILocation(line: 445, column: 20, scope: !6071)
!6073 = !DILocation(line: 445, column: 26, scope: !6071)
!6074 = !DILocation(line: 445, column: 31, scope: !6071)
!6075 = !DILocation(line: 446, column: 27, scope: !6071)
!6076 = !DILocation(line: 446, column: 31, scope: !6071)
!6077 = !DILocation(line: 446, column: 37, scope: !6071)
!6078 = !DILocation(line: 446, column: 45, scope: !6071)
!6079 = !DILocation(line: 446, column: 58, scope: !6071)
!6080 = !DILocation(line: 445, column: 13, scope: !6055)
!6081 = !DILocation(line: 448, column: 4, scope: !6082)
!6082 = distinct !DILexicalBlock(scope: !6071, file: !3, line: 447, column: 27)
!6083 = !DILocation(line: 448, column: 10, scope: !6082)
!6084 = !DILocation(line: 448, column: 23, scope: !6082)
!6085 = !DILocation(line: 449, column: 2, scope: !6082)
!6086 = !DILocation(line: 449, column: 14, scope: !6087)
!6087 = distinct !DILexicalBlock(scope: !6071, file: !3, line: 449, column: 13)
!6088 = !DILocation(line: 449, column: 20, scope: !6087)
!6089 = !DILocation(line: 449, column: 26, scope: !6087)
!6090 = !DILocation(line: 449, column: 31, scope: !6087)
!6091 = !DILocation(line: 450, column: 47, scope: !6087)
!6092 = !DILocation(line: 451, column: 7, scope: !6087)
!6093 = !DILocation(line: 451, column: 13, scope: !6087)
!6094 = !DILocation(line: 451, column: 21, scope: !6087)
!6095 = !DILocation(line: 451, column: 34, scope: !6087)
!6096 = !DILocation(line: 449, column: 13, scope: !6071)
!6097 = !DILocation(line: 452, column: 4, scope: !6098)
!6098 = distinct !DILexicalBlock(scope: !6087, file: !3, line: 451, column: 56)
!6099 = !DILocation(line: 452, column: 10, scope: !6098)
!6100 = !DILocation(line: 452, column: 23, scope: !6098)
!6101 = !DILocation(line: 453, column: 2, scope: !6098)
!6102 = !DILocation(line: 453, column: 14, scope: !6103)
!6103 = distinct !DILexicalBlock(scope: !6087, file: !3, line: 453, column: 13)
!6104 = !DILocation(line: 453, column: 20, scope: !6103)
!6105 = !DILocation(line: 453, column: 26, scope: !6103)
!6106 = !DILocation(line: 453, column: 31, scope: !6103)
!6107 = !DILocation(line: 455, column: 27, scope: !6103)
!6108 = !DILocation(line: 455, column: 31, scope: !6103)
!6109 = !DILocation(line: 455, column: 37, scope: !6103)
!6110 = !DILocation(line: 455, column: 45, scope: !6103)
!6111 = !DILocation(line: 455, column: 58, scope: !6103)
!6112 = !DILocation(line: 453, column: 13, scope: !6087)
!6113 = !DILocation(line: 457, column: 4, scope: !6114)
!6114 = distinct !DILexicalBlock(scope: !6103, file: !3, line: 456, column: 27)
!6115 = !DILocation(line: 457, column: 10, scope: !6114)
!6116 = !DILocation(line: 457, column: 23, scope: !6114)
!6117 = !DILocation(line: 458, column: 2, scope: !6114)
!6118 = !DILocation(line: 459, column: 1, scope: !6025)
!6119 = distinct !DISubprogram(name: "sd_select_driver_type", scope: !3, file: !3, line: 397, type: !6120, scopeLine: 398, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !115)
!6120 = !DISubroutineType(types: !6121)
!6121 = !{!127, !66, !2752}
!6122 = !DILocalVariable(name: "card", arg: 1, scope: !6119, file: !3, line: 397, type: !66)
!6123 = !DILocation(line: 397, column: 51, scope: !6119)
!6124 = !DILocalVariable(name: "status", arg: 2, scope: !6119, file: !3, line: 397, type: !2752)
!6125 = !DILocation(line: 397, column: 61, scope: !6119)
!6126 = !DILocalVariable(name: "card_drv_type", scope: !6119, file: !3, line: 399, type: !127)
!6127 = !DILocation(line: 399, column: 6, scope: !6119)
!6128 = !DILocalVariable(name: "drive_strength", scope: !6119, file: !3, line: 399, type: !127)
!6129 = !DILocation(line: 399, column: 21, scope: !6119)
!6130 = !DILocalVariable(name: "drv_type", scope: !6119, file: !3, line: 399, type: !127)
!6131 = !DILocation(line: 399, column: 37, scope: !6119)
!6132 = !DILocalVariable(name: "err", scope: !6119, file: !3, line: 400, type: !127)
!6133 = !DILocation(line: 400, column: 6, scope: !6119)
!6134 = !DILocation(line: 402, column: 2, scope: !6119)
!6135 = !DILocation(line: 402, column: 8, scope: !6119)
!6136 = !DILocation(line: 402, column: 23, scope: !6119)
!6137 = !DILocation(line: 404, column: 18, scope: !6119)
!6138 = !DILocation(line: 404, column: 24, scope: !6119)
!6139 = !DILocation(line: 404, column: 32, scope: !6119)
!6140 = !DILocation(line: 404, column: 45, scope: !6119)
!6141 = !DILocation(line: 404, column: 16, scope: !6119)
!6142 = !DILocation(line: 406, column: 45, scope: !6119)
!6143 = !DILocation(line: 407, column: 10, scope: !6119)
!6144 = !DILocation(line: 407, column: 16, scope: !6119)
!6145 = !DILocation(line: 407, column: 24, scope: !6119)
!6146 = !DILocation(line: 408, column: 10, scope: !6119)
!6147 = !DILocation(line: 406, column: 19, scope: !6119)
!6148 = !DILocation(line: 406, column: 17, scope: !6119)
!6149 = !DILocation(line: 410, column: 6, scope: !6150)
!6150 = distinct !DILexicalBlock(scope: !6119, file: !3, line: 410, column: 6)
!6151 = !DILocation(line: 410, column: 6, scope: !6119)
!6152 = !DILocation(line: 411, column: 23, scope: !6153)
!6153 = distinct !DILexicalBlock(scope: !6150, file: !3, line: 410, column: 22)
!6154 = !DILocation(line: 411, column: 35, scope: !6153)
!6155 = !DILocation(line: 411, column: 51, scope: !6153)
!6156 = !DILocation(line: 411, column: 9, scope: !6153)
!6157 = !DILocation(line: 411, column: 7, scope: !6153)
!6158 = !DILocation(line: 412, column: 7, scope: !6159)
!6159 = distinct !DILexicalBlock(scope: !6153, file: !3, line: 412, column: 7)
!6160 = !DILocation(line: 412, column: 7, scope: !6153)
!6161 = !DILocation(line: 413, column: 11, scope: !6159)
!6162 = !DILocation(line: 413, column: 4, scope: !6159)
!6163 = !DILocation(line: 414, column: 8, scope: !6164)
!6164 = distinct !DILexicalBlock(scope: !6153, file: !3, line: 414, column: 7)
!6165 = !DILocation(line: 414, column: 19, scope: !6164)
!6166 = !DILocation(line: 414, column: 29, scope: !6164)
!6167 = !DILocation(line: 414, column: 26, scope: !6164)
!6168 = !DILocation(line: 414, column: 7, scope: !6153)
!6169 = !DILocation(line: 415, column: 4, scope: !6170)
!6170 = distinct !DILexicalBlock(scope: !6164, file: !3, line: 414, column: 45)
!6171 = !DILocation(line: 417, column: 4, scope: !6170)
!6172 = !DILocation(line: 419, column: 26, scope: !6153)
!6173 = !DILocation(line: 419, column: 3, scope: !6153)
!6174 = !DILocation(line: 419, column: 9, scope: !6153)
!6175 = !DILocation(line: 419, column: 24, scope: !6153)
!6176 = !DILocation(line: 420, column: 2, scope: !6153)
!6177 = !DILocation(line: 422, column: 6, scope: !6178)
!6178 = distinct !DILexicalBlock(scope: !6119, file: !3, line: 422, column: 6)
!6179 = !DILocation(line: 422, column: 6, scope: !6119)
!6180 = !DILocation(line: 423, column: 23, scope: !6178)
!6181 = !DILocation(line: 423, column: 29, scope: !6178)
!6182 = !DILocation(line: 423, column: 35, scope: !6178)
!6183 = !DILocation(line: 423, column: 3, scope: !6178)
!6184 = !DILocation(line: 425, column: 2, scope: !6119)
!6185 = !DILocation(line: 426, column: 1, scope: !6119)
!6186 = distinct !DISubprogram(name: "sd_set_current_limit", scope: !3, file: !3, line: 531, type: !6120, scopeLine: 532, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !115)
!6187 = !DILocalVariable(name: "card", arg: 1, scope: !6186, file: !3, line: 531, type: !66)
!6188 = !DILocation(line: 531, column: 50, scope: !6186)
!6189 = !DILocalVariable(name: "status", arg: 2, scope: !6186, file: !3, line: 531, type: !2752)
!6190 = !DILocation(line: 531, column: 60, scope: !6186)
!6191 = !DILocalVariable(name: "current_limit", scope: !6186, file: !3, line: 533, type: !127)
!6192 = !DILocation(line: 533, column: 6, scope: !6186)
!6193 = !DILocalVariable(name: "err", scope: !6186, file: !3, line: 534, type: !127)
!6194 = !DILocation(line: 534, column: 6, scope: !6186)
!6195 = !DILocalVariable(name: "max_current", scope: !6186, file: !3, line: 535, type: !400)
!6196 = !DILocation(line: 535, column: 6, scope: !6186)
!6197 = !DILocation(line: 542, column: 7, scope: !6198)
!6198 = distinct !DILexicalBlock(scope: !6186, file: !3, line: 542, column: 6)
!6199 = !DILocation(line: 542, column: 13, scope: !6198)
!6200 = !DILocation(line: 542, column: 26, scope: !6198)
!6201 = !DILocation(line: 542, column: 50, scope: !6198)
!6202 = !DILocation(line: 543, column: 7, scope: !6198)
!6203 = !DILocation(line: 543, column: 13, scope: !6198)
!6204 = !DILocation(line: 543, column: 26, scope: !6198)
!6205 = !DILocation(line: 543, column: 51, scope: !6198)
!6206 = !DILocation(line: 544, column: 7, scope: !6198)
!6207 = !DILocation(line: 544, column: 13, scope: !6198)
!6208 = !DILocation(line: 544, column: 26, scope: !6198)
!6209 = !DILocation(line: 542, column: 6, scope: !6186)
!6210 = !DILocation(line: 545, column: 3, scope: !6198)
!6211 = !DILocation(line: 551, column: 40, scope: !6186)
!6212 = !DILocation(line: 551, column: 46, scope: !6186)
!6213 = !DILocation(line: 551, column: 16, scope: !6186)
!6214 = !DILocation(line: 551, column: 14, scope: !6186)
!6215 = !DILocation(line: 568, column: 6, scope: !6216)
!6216 = distinct !DILexicalBlock(scope: !6186, file: !3, line: 568, column: 6)
!6217 = !DILocation(line: 568, column: 18, scope: !6216)
!6218 = !DILocation(line: 568, column: 25, scope: !6216)
!6219 = !DILocation(line: 569, column: 6, scope: !6216)
!6220 = !DILocation(line: 569, column: 12, scope: !6216)
!6221 = !DILocation(line: 569, column: 20, scope: !6216)
!6222 = !DILocation(line: 569, column: 35, scope: !6216)
!6223 = !DILocation(line: 568, column: 6, scope: !6186)
!6224 = !DILocation(line: 570, column: 17, scope: !6216)
!6225 = !DILocation(line: 570, column: 3, scope: !6216)
!6226 = !DILocation(line: 571, column: 11, scope: !6227)
!6227 = distinct !DILexicalBlock(scope: !6216, file: !3, line: 571, column: 11)
!6228 = !DILocation(line: 571, column: 23, scope: !6227)
!6229 = !DILocation(line: 571, column: 30, scope: !6227)
!6230 = !DILocation(line: 572, column: 4, scope: !6227)
!6231 = !DILocation(line: 572, column: 10, scope: !6227)
!6232 = !DILocation(line: 572, column: 18, scope: !6227)
!6233 = !DILocation(line: 572, column: 33, scope: !6227)
!6234 = !DILocation(line: 571, column: 11, scope: !6216)
!6235 = !DILocation(line: 573, column: 17, scope: !6227)
!6236 = !DILocation(line: 573, column: 3, scope: !6227)
!6237 = !DILocation(line: 574, column: 11, scope: !6238)
!6238 = distinct !DILexicalBlock(scope: !6227, file: !3, line: 574, column: 11)
!6239 = !DILocation(line: 574, column: 23, scope: !6238)
!6240 = !DILocation(line: 574, column: 30, scope: !6238)
!6241 = !DILocation(line: 575, column: 4, scope: !6238)
!6242 = !DILocation(line: 575, column: 10, scope: !6238)
!6243 = !DILocation(line: 575, column: 18, scope: !6238)
!6244 = !DILocation(line: 575, column: 33, scope: !6238)
!6245 = !DILocation(line: 574, column: 11, scope: !6227)
!6246 = !DILocation(line: 576, column: 17, scope: !6238)
!6247 = !DILocation(line: 576, column: 3, scope: !6238)
!6248 = !DILocation(line: 577, column: 11, scope: !6249)
!6249 = distinct !DILexicalBlock(scope: !6238, file: !3, line: 577, column: 11)
!6250 = !DILocation(line: 577, column: 23, scope: !6249)
!6251 = !DILocation(line: 577, column: 30, scope: !6249)
!6252 = !DILocation(line: 578, column: 4, scope: !6249)
!6253 = !DILocation(line: 578, column: 10, scope: !6249)
!6254 = !DILocation(line: 578, column: 18, scope: !6249)
!6255 = !DILocation(line: 578, column: 33, scope: !6249)
!6256 = !DILocation(line: 577, column: 11, scope: !6238)
!6257 = !DILocation(line: 579, column: 17, scope: !6249)
!6258 = !DILocation(line: 579, column: 3, scope: !6249)
!6259 = !DILocation(line: 581, column: 6, scope: !6260)
!6260 = distinct !DILexicalBlock(scope: !6186, file: !3, line: 581, column: 6)
!6261 = !DILocation(line: 581, column: 20, scope: !6260)
!6262 = !DILocation(line: 581, column: 6, scope: !6186)
!6263 = !DILocation(line: 582, column: 23, scope: !6264)
!6264 = distinct !DILexicalBlock(scope: !6260, file: !3, line: 581, column: 49)
!6265 = !DILocation(line: 582, column: 35, scope: !6264)
!6266 = !DILocation(line: 582, column: 50, scope: !6264)
!6267 = !DILocation(line: 582, column: 9, scope: !6264)
!6268 = !DILocation(line: 582, column: 7, scope: !6264)
!6269 = !DILocation(line: 583, column: 7, scope: !6270)
!6270 = distinct !DILexicalBlock(scope: !6264, file: !3, line: 583, column: 7)
!6271 = !DILocation(line: 583, column: 7, scope: !6264)
!6272 = !DILocation(line: 584, column: 11, scope: !6270)
!6273 = !DILocation(line: 584, column: 4, scope: !6270)
!6274 = !DILocation(line: 586, column: 9, scope: !6275)
!6275 = distinct !DILexicalBlock(scope: !6264, file: !3, line: 586, column: 7)
!6276 = !DILocation(line: 586, column: 20, scope: !6275)
!6277 = !DILocation(line: 586, column: 26, scope: !6275)
!6278 = !DILocation(line: 586, column: 37, scope: !6275)
!6279 = !DILocation(line: 586, column: 34, scope: !6275)
!6280 = !DILocation(line: 586, column: 7, scope: !6264)
!6281 = !DILocation(line: 587, column: 4, scope: !6275)
!6282 = !DILocation(line: 590, column: 2, scope: !6264)
!6283 = !DILocation(line: 592, column: 2, scope: !6186)
!6284 = !DILocation(line: 593, column: 1, scope: !6186)
!6285 = distinct !DISubprogram(name: "sd_set_bus_speed_mode", scope: !3, file: !3, line: 461, type: !6120, scopeLine: 462, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !115)
!6286 = !DILocalVariable(name: "card", arg: 1, scope: !6285, file: !3, line: 461, type: !66)
!6287 = !DILocation(line: 461, column: 51, scope: !6285)
!6288 = !DILocalVariable(name: "status", arg: 2, scope: !6285, file: !3, line: 461, type: !2752)
!6289 = !DILocation(line: 461, column: 61, scope: !6285)
!6290 = !DILocalVariable(name: "err", scope: !6285, file: !3, line: 463, type: !127)
!6291 = !DILocation(line: 463, column: 6, scope: !6285)
!6292 = !DILocalVariable(name: "timing", scope: !6285, file: !3, line: 464, type: !7)
!6293 = !DILocation(line: 464, column: 15, scope: !6285)
!6294 = !DILocation(line: 466, column: 10, scope: !6285)
!6295 = !DILocation(line: 466, column: 16, scope: !6285)
!6296 = !DILocation(line: 466, column: 2, scope: !6285)
!6297 = !DILocation(line: 468, column: 10, scope: !6298)
!6298 = distinct !DILexicalBlock(scope: !6285, file: !3, line: 466, column: 30)
!6299 = !DILocation(line: 469, column: 3, scope: !6298)
!6300 = !DILocation(line: 469, column: 9, scope: !6298)
!6301 = !DILocation(line: 469, column: 17, scope: !6298)
!6302 = !DILocation(line: 469, column: 29, scope: !6298)
!6303 = !DILocation(line: 470, column: 3, scope: !6298)
!6304 = !DILocation(line: 472, column: 10, scope: !6298)
!6305 = !DILocation(line: 473, column: 3, scope: !6298)
!6306 = !DILocation(line: 473, column: 9, scope: !6298)
!6307 = !DILocation(line: 473, column: 17, scope: !6298)
!6308 = !DILocation(line: 473, column: 29, scope: !6298)
!6309 = !DILocation(line: 474, column: 3, scope: !6298)
!6310 = !DILocation(line: 476, column: 10, scope: !6298)
!6311 = !DILocation(line: 477, column: 3, scope: !6298)
!6312 = !DILocation(line: 477, column: 9, scope: !6298)
!6313 = !DILocation(line: 477, column: 17, scope: !6298)
!6314 = !DILocation(line: 477, column: 29, scope: !6298)
!6315 = !DILocation(line: 478, column: 3, scope: !6298)
!6316 = !DILocation(line: 480, column: 10, scope: !6298)
!6317 = !DILocation(line: 481, column: 3, scope: !6298)
!6318 = !DILocation(line: 481, column: 9, scope: !6298)
!6319 = !DILocation(line: 481, column: 17, scope: !6298)
!6320 = !DILocation(line: 481, column: 29, scope: !6298)
!6321 = !DILocation(line: 482, column: 3, scope: !6298)
!6322 = !DILocation(line: 484, column: 10, scope: !6298)
!6323 = !DILocation(line: 485, column: 3, scope: !6298)
!6324 = !DILocation(line: 485, column: 9, scope: !6298)
!6325 = !DILocation(line: 485, column: 17, scope: !6298)
!6326 = !DILocation(line: 485, column: 29, scope: !6298)
!6327 = !DILocation(line: 486, column: 3, scope: !6298)
!6328 = !DILocation(line: 488, column: 3, scope: !6298)
!6329 = !DILocation(line: 491, column: 22, scope: !6285)
!6330 = !DILocation(line: 491, column: 34, scope: !6285)
!6331 = !DILocation(line: 491, column: 40, scope: !6285)
!6332 = !DILocation(line: 491, column: 54, scope: !6285)
!6333 = !DILocation(line: 491, column: 8, scope: !6285)
!6334 = !DILocation(line: 491, column: 6, scope: !6285)
!6335 = !DILocation(line: 492, column: 6, scope: !6336)
!6336 = distinct !DILexicalBlock(scope: !6285, file: !3, line: 492, column: 6)
!6337 = !DILocation(line: 492, column: 6, scope: !6285)
!6338 = !DILocation(line: 493, column: 10, scope: !6336)
!6339 = !DILocation(line: 493, column: 3, scope: !6336)
!6340 = !DILocation(line: 495, column: 7, scope: !6341)
!6341 = distinct !DILexicalBlock(scope: !6285, file: !3, line: 495, column: 6)
!6342 = !DILocation(line: 495, column: 18, scope: !6341)
!6343 = !DILocation(line: 495, column: 28, scope: !6341)
!6344 = !DILocation(line: 495, column: 34, scope: !6341)
!6345 = !DILocation(line: 495, column: 25, scope: !6341)
!6346 = !DILocation(line: 495, column: 6, scope: !6285)
!6347 = !DILocation(line: 496, column: 3, scope: !6341)
!6348 = !DILocation(line: 499, column: 18, scope: !6349)
!6349 = distinct !DILexicalBlock(scope: !6341, file: !3, line: 498, column: 7)
!6350 = !DILocation(line: 499, column: 24, scope: !6349)
!6351 = !DILocation(line: 499, column: 30, scope: !6349)
!6352 = !DILocation(line: 499, column: 3, scope: !6349)
!6353 = !DILocation(line: 500, column: 17, scope: !6349)
!6354 = !DILocation(line: 500, column: 23, scope: !6349)
!6355 = !DILocation(line: 500, column: 29, scope: !6349)
!6356 = !DILocation(line: 500, column: 35, scope: !6349)
!6357 = !DILocation(line: 500, column: 43, scope: !6349)
!6358 = !DILocation(line: 500, column: 3, scope: !6349)
!6359 = !DILocation(line: 503, column: 2, scope: !6285)
!6360 = !DILocation(line: 504, column: 1, scope: !6285)
