; ModuleID = '../bcout/drivers/video/fbdev/core/fbcon.llvm.bc'
source_filename = "drivers/video/fbdev/core/fbcon.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64"

%struct.obs_kernel_param = type { i8*, i32 (i8*)*, i32 }
%struct.vc = type { %struct.vc_data*, %struct.work_struct }
%struct.vc_data = type { %struct.tty_port, %struct.vc_state, %struct.vc_state, i16, i32, i32, i32, i32, i64, i64, i64, i32, i32, %struct.consw*, i16*, i32, i8, i8, i8, i8, i8, i8, i32, i16, i16, i64, i16, %struct.console_font, i16, i32, i32, [16 x i32], %struct.vt_mode, %struct.pid*, i32, %struct.wait_queue_head, i16, i8, i32, [4 x i64], [48 x i8], i16*, i32, i32, i32, i16, %struct.vc_data**, %struct.uni_pagedir*, %struct.uni_pagedir**, %struct.uni_screen* }
%struct.tty_port = type { %struct.tty_bufhead, %struct.tty_struct*, %struct.tty_struct*, %struct.tty_port_operations*, %struct.tty_port_client_operations*, %struct.spinlock, i32, i32, %struct.wait_queue_head, %struct.wait_queue_head, i64, i64, i8, %struct.mutex, %struct.mutex, i8*, i32, i32, i32, %struct.kref, i8* }
%struct.tty_bufhead = type { %struct.tty_buffer*, %struct.work_struct, %struct.mutex, %struct.atomic_t, %struct.tty_buffer, %struct.llist_head, %struct.atomic_t, i32, %struct.tty_buffer* }
%struct.tty_buffer = type { %union.anon.31, i32, i32, i32, i32, i32, [0 x i64] }
%union.anon.31 = type { %struct.tty_buffer* }
%struct.llist_head = type { %struct.llist_node* }
%struct.llist_node = type { %struct.llist_node* }
%struct.atomic_t = type { i32 }
%struct.tty_struct = type { i32, %struct.kref, %struct.device*, %struct.tty_driver*, %struct.tty_operations*, i32, %struct.ld_semaphore, %struct.tty_ldisc*, %struct.mutex, %struct.mutex, %struct.mutex, %struct.rw_semaphore, %struct.mutex, %struct.spinlock, %struct.spinlock, %struct.ktermios, %struct.ktermios, %struct.termiox*, [64 x i8], %struct.pid*, %struct.pid*, i64, i32, %struct.winsize, i8, i64, i32, i16, i56, i32, i32, %struct.tty_struct*, %struct.fasync_struct*, %struct.wait_queue_head, %struct.wait_queue_head, %struct.work_struct, i8*, i8*, %struct.spinlock, %struct.list_head, i32, i8*, i32, %struct.work_struct, %struct.tty_port* }
%struct.device = type { %struct.kobject, %struct.device*, %struct.device_private*, i8*, %struct.device_type*, %struct.bus_type*, %struct.device_driver*, i8*, i8*, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, %struct.dev_pm_domain*, %struct.irq_domain*, %struct.list_head, %struct.dma_map_ops*, i64*, i64, i64, %struct.bus_dma_region*, %struct.device_dma_parameters*, %struct.list_head, %struct.dev_archdata, %struct.device_node*, %struct.fwnode_handle*, i32, i32, %struct.spinlock, %struct.list_head, %struct.class*, %struct.attribute_group**, void (%struct.device*)*, %struct.iommu_group*, %struct.dev_iommu*, i8 }
%struct.kobject = type { i8*, %struct.list_head, %struct.kobject*, %struct.kset*, %struct.kobj_type*, %struct.kernfs_node*, %struct.kref, i8 }
%struct.kset = type { %struct.list_head, %struct.spinlock, %struct.kobject, %struct.kset_uevent_ops* }
%struct.kset_uevent_ops = type { i32 (%struct.kset*, %struct.kobject*)*, i8* (%struct.kset*, %struct.kobject*)*, i32 (%struct.kset*, %struct.kobject*, %struct.kobj_uevent_env*)* }
%struct.kobj_uevent_env = type { [3 x i8*], [64 x i8*], i32, [2048 x i8], i32 }
%struct.kobj_type = type { void (%struct.kobject*)*, %struct.sysfs_ops*, %struct.attribute**, %struct.attribute_group**, %struct.kobj_ns_type_operations* (%struct.kobject*)*, i8* (%struct.kobject*)*, void (%struct.kobject*, %struct.kuid_t*, %struct.kgid_t*)* }
%struct.sysfs_ops = type { i64 (%struct.kobject*, %struct.attribute*, i8*)*, i64 (%struct.kobject*, %struct.attribute*, i8*, i64)* }
%struct.attribute = type { i8*, i16 }
%struct.kobj_ns_type_operations = type { i32, i1 ()*, i8* ()*, i8* (%struct.sock*)*, i8* ()*, void (i8*)* }
%struct.sock = type opaque
%struct.kuid_t = type { i32 }
%struct.kgid_t = type { i32 }
%struct.kernfs_node = type { %struct.atomic_t, %struct.atomic_t, %struct.kernfs_node*, i8*, %struct.rb_node, i8*, i32, %union.anon.65, i8*, i64, i16, i16, %struct.kernfs_iattrs* }
%struct.rb_node = type { i64, %struct.rb_node*, %struct.rb_node* }
%union.anon.65 = type { %struct.kernfs_elem_attr }
%struct.kernfs_elem_attr = type { %struct.kernfs_ops*, %struct.kernfs_open_node*, i64, %struct.kernfs_node* }
%struct.kernfs_ops = type { i32 (%struct.kernfs_open_file*)*, void (%struct.kernfs_open_file*)*, i32 (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i64*)*, i8* (%struct.seq_file*, i8*, i64*)*, void (%struct.seq_file*, i8*)*, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i64, i8, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i32 (%struct.kernfs_open_file*, %struct.poll_table_struct*)*, i32 (%struct.kernfs_open_file*, %struct.vm_area_struct*)* }
%struct.kernfs_open_file = type { %struct.kernfs_node*, %struct.file*, %struct.seq_file*, i8*, %struct.mutex, %struct.mutex, i32, %struct.list_head, i8*, i64, i8, %struct.vm_operations_struct* }
%struct.file = type { %union.anon.0, %struct.path, %struct.inode*, %struct.file_operations*, %struct.spinlock, i32, %struct.atomic64_t, i32, i32, %struct.mutex, i64, %struct.fown_struct, %struct.cred*, %struct.file_ra_state, i64, i8*, %struct.list_head, %struct.list_head, %struct.address_space*, i32, i32 }
%union.anon.0 = type { %struct.callback_head }
%struct.callback_head = type { %struct.callback_head*, void (%struct.callback_head*)* }
%struct.path = type { %struct.vfsmount*, %struct.dentry* }
%struct.vfsmount = type opaque
%struct.dentry = type { i32, %struct.seqcount_spinlock, %struct.hlist_bl_node, %struct.dentry*, %struct.qstr, %struct.inode*, [32 x i8], %struct.lockref, %struct.dentry_operations*, %struct.super_block*, i64, i8*, %union.anon.63, %struct.list_head, %struct.list_head, %union.anon.64 }
%struct.seqcount_spinlock = type { %struct.seqcount }
%struct.seqcount = type { i32 }
%struct.hlist_bl_node = type { %struct.hlist_bl_node*, %struct.hlist_bl_node** }
%struct.qstr = type { %union.anon.1, i8* }
%union.anon.1 = type { i64 }
%struct.lockref = type { %union.anon.61 }
%union.anon.61 = type { %struct.anon.62 }
%struct.anon.62 = type { %struct.spinlock, i32 }
%struct.dentry_operations = type { i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.qstr*)*, i32 (%struct.dentry*, i32, i8*, %struct.qstr*)*, i32 (%struct.dentry*)*, i32 (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*, %struct.inode*)*, i8* (%struct.dentry*, i8*, i32)*, %struct.vfsmount* (%struct.path*)*, i32 (%struct.path*, i1)*, %struct.dentry* (%struct.dentry*, %struct.inode*)*, [24 x i8] }
%struct.super_block = type { %struct.list_head, i32, i8, i64, i64, %struct.file_system_type*, %struct.super_operations*, %struct.dquot_operations*, %struct.quotactl_ops*, %struct.export_operations*, i64, i64, i64, %struct.dentry*, %struct.rw_semaphore, i32, %struct.atomic_t, %struct.xattr_handler**, %struct.hlist_bl_head, %struct.list_head, %struct.block_device*, %struct.backing_dev_info*, %struct.mtd_info*, %struct.hlist_node, i32, %struct.quota_info, %struct.sb_writers, i8*, i32, i64, i64, i32, %struct.fsnotify_mark_connector*, [32 x i8], %struct.uuid_t, i32, i32, %struct.mutex, i8*, %struct.dentry_operations*, i32, %struct.shrinker, %struct.atomic64_t, %struct.atomic64_t, i32, i32, %struct.workqueue_struct*, %struct.hlist_head, %struct.user_namespace*, %struct.list_lru, %struct.list_lru, %struct.callback_head, %struct.work_struct, %struct.mutex, i32, %struct.spinlock, %struct.list_head, %struct.spinlock, %struct.list_head }
%struct.file_system_type = type { i8*, i32, i32 (%struct.fs_context*)*, %struct.fs_parameter_spec*, %struct.dentry* (%struct.file_system_type*, i32, i8*, i8*)*, void (%struct.super_block*)*, %struct.module*, %struct.file_system_type*, %struct.hlist_head, %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key, [3 x %struct.lock_class_key], %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key }
%struct.fs_context = type opaque
%struct.fs_parameter_spec = type opaque
%struct.module = type opaque
%struct.lock_class_key = type {}
%struct.super_operations = type { %struct.inode* (%struct.super_block*)*, void (%struct.inode*)*, void (%struct.inode*)*, void (%struct.inode*, i32)*, i32 (%struct.inode*, %struct.writeback_control*)*, i32 (%struct.inode*)*, void (%struct.inode*)*, void (%struct.super_block*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.dentry*, %struct.kstatfs*)*, i32 (%struct.super_block*, i32*, i8*)*, void (%struct.super_block*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.super_block*, %struct.page*, i32)*, i64 (%struct.super_block*, %struct.shrink_control*)*, i64 (%struct.super_block*, %struct.shrink_control*)* }
%struct.writeback_control = type opaque
%struct.kstatfs = type opaque
%struct.page = type { i64, %union.anon.2, %union.anon.53, %struct.atomic_t, [8 x i8] }
%union.anon.2 = type { %struct.anon.3 }
%struct.anon.3 = type { %struct.list_head, %struct.address_space*, i64, i64 }
%union.anon.53 = type { %struct.atomic_t }
%struct.shrink_control = type { i32, i32, i64, i64, %struct.mem_cgroup* }
%struct.mem_cgroup = type opaque
%struct.dquot_operations = type { i32 (%struct.dquot*)*, %struct.dquot* (%struct.super_block*, i32)*, void (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, i32)*, i64* (%struct.inode*)*, i32 (%struct.inode*, %struct.kprojid_t*)*, i32 (%struct.inode*, i64*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.dquot = type { %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.mutex, %struct.spinlock, %struct.atomic_t, %struct.super_block*, %struct.kqid, i64, i64, %struct.mem_dqblk }
%struct.kqid = type { %union.anon.54, i32 }
%union.anon.54 = type { %struct.kuid_t }
%struct.mem_dqblk = type { i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.kprojid_t = type { i32 }
%struct.quotactl_ops = type { i32 (%struct.super_block*, i32, i32, %struct.path*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32, %struct.qc_info*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.kqid*, %struct.qc_dqblk*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.qc_state*)*, i32 (%struct.super_block*, i32)* }
%struct.qc_info = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.qc_dqblk = type { i32, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, i64, i64, i64, i64, i32 }
%struct.qc_state = type { i32, [3 x %struct.qc_type_state] }
%struct.qc_type_state = type { i32, i32, i32, i32, i32, i32, i32, i64, i64, i64 }
%struct.export_operations = type opaque
%struct.xattr_handler = type opaque
%struct.hlist_bl_head = type { %struct.hlist_bl_node* }
%struct.block_device = type opaque
%struct.backing_dev_info = type opaque
%struct.mtd_info = type opaque
%struct.hlist_node = type { %struct.hlist_node*, %struct.hlist_node** }
%struct.quota_info = type { i32, %struct.rw_semaphore, [3 x %struct.inode*], [3 x %struct.mem_dqinfo], [3 x %struct.quota_format_ops*] }
%struct.mem_dqinfo = type { %struct.quota_format_type*, i32, %struct.list_head, i64, i32, i32, i64, i64, i8* }
%struct.quota_format_type = type { i32, %struct.quota_format_ops*, %struct.module*, %struct.quota_format_type* }
%struct.quota_format_ops = type { i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.sb_writers = type { i32, %struct.wait_queue_head, [3 x %struct.percpu_rw_semaphore] }
%struct.percpu_rw_semaphore = type { %struct.rcu_sync, i32*, %struct.rcuwait, %struct.wait_queue_head, %struct.atomic_t }
%struct.rcu_sync = type { i32, i32, %struct.wait_queue_head, %struct.callback_head }
%struct.rcuwait = type { %struct.task_struct* }
%struct.task_struct = type { %struct.thread_info, i64, i8*, %struct.refcount_struct, i32, i32, i32, i32, i32, i32, i32, %struct.sched_class*, %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, i32, i32, %struct.cpumask*, %struct.cpumask, %struct.sched_info, %struct.list_head, %struct.mm_struct*, %struct.mm_struct*, %struct.vmacache, i32, i32, i32, i32, i64, i32, i8, [3 x i8], i8, i64, %struct.restart_block, i32, i32, i64, %struct.task_struct*, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.pid*, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, %struct.completion*, i32*, i32*, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, %struct.posix_cputimers, %struct.posix_cputimers_work, %struct.cred*, %struct.cred*, %struct.cred*, %struct.key*, [16 x i8], %struct.nameidata*, %struct.fs_struct*, %struct.files_struct*, %struct.io_uring_task*, %struct.nsproxy*, %struct.signal_struct*, %struct.sighand_struct*, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i64, i64, i32, %struct.callback_head*, %struct.seccomp, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, %struct.task_struct*, %struct.rt_mutex_waiter*, i8*, %struct.bio_list*, %struct.blk_plug*, %struct.reclaim_state*, %struct.backing_dev_info*, %struct.io_context*, %struct.capture_control*, i64, %struct.kernel_siginfo*, %struct.task_io_accounting, %struct.robust_list_head*, %struct.list_head, %struct.futex_pi_state*, %struct.mutex, i32, [2 x %struct.perf_event_context*], %struct.mutex, %struct.list_head, %struct.rseq*, i32, i64, %struct.tlbflush_unmap_batch, %union.anon.46, %struct.pipe_inode_info*, %struct.page_frag, i32, i32, i64, i64, i64, i32, %struct.task_struct*, %struct.vm_struct*, %struct.refcount_struct, i8*, i64, i64, i64, %struct.callback_head, [24 x i8], %struct.thread_struct }
%struct.thread_info = type { i64, i32 }
%struct.sched_class = type opaque
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, %struct.sched_statistics }
%struct.load_weight = type { i64, i32 }
%struct.sched_statistics = type {}
%struct.sched_rt_entity = type { %struct.list_head, i64, i64, i32, i16, i16, %struct.sched_rt_entity* }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, %struct.sched_dl_entity* }
%struct.hrtimer = type { %struct.timerqueue_node, i64, i32 (%struct.hrtimer*)*, %struct.hrtimer_clock_base*, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.hrtimer_clock_base = type { %struct.hrtimer_cpu_base*, i32, i32, %struct.seqcount_raw_spinlock, %struct.hrtimer*, %struct.timerqueue_head, i64 ()*, i64 }
%struct.hrtimer_cpu_base = type { %struct.raw_spinlock, i32, i32, i32, i8, i64, %struct.hrtimer*, i64, %struct.hrtimer*, [16 x i8], [8 x %struct.hrtimer_clock_base] }
%struct.seqcount_raw_spinlock = type { %struct.seqcount }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.cpumask = type { [1 x i64] }
%struct.sched_info = type {}
%struct.mm_struct = type { %struct.anon.15, [0 x i64] }
%struct.anon.15 = type { %struct.vm_area_struct*, %struct.rb_root, i64, i64 (%struct.file*, i64, i64, i64, i64)*, i64, i64, i64, i64, %struct.pgd_t*, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i32, %struct.spinlock, %struct.rw_semaphore, %struct.list_head, i64, i64, i64, i64, %struct.atomic64_t, i64, i64, i64, i64, %struct.spinlock, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [44 x i64], %struct.mm_rss_stat, %struct.linux_binfmt*, %struct.mm_context_t, i64, %struct.core_state*, %struct.spinlock, %struct.kioctx_table*, %struct.user_namespace*, %struct.file*, %struct.mmu_notifier_subscriptions*, %struct.atomic_t, i8, %struct.uprobes_state, %struct.work_struct, i32 }
%struct.vm_area_struct = type { i64, i64, %struct.vm_area_struct*, %struct.vm_area_struct*, %struct.rb_node, i64, %struct.mm_struct*, %struct.pgprot, i64, %struct.anon.16, %struct.list_head, %struct.anon_vma*, %struct.vm_operations_struct*, i64, %struct.file*, i8*, %struct.atomic64_t, %struct.vm_userfaultfd_ctx }
%struct.pgprot = type { i64 }
%struct.anon.16 = type { %struct.rb_node, i64 }
%struct.anon_vma = type opaque
%struct.vm_userfaultfd_ctx = type {}
%struct.rb_root = type { %struct.rb_node* }
%struct.pgd_t = type { i64 }
%struct.mm_rss_stat = type { [4 x %struct.atomic64_t] }
%struct.linux_binfmt = type opaque
%struct.mm_context_t = type { i64, %struct.atomic64_t, %struct.rw_semaphore, %struct.ldt_struct*, i16, %struct.mutex, i8*, %struct.vdso_image*, %struct.atomic_t, i16, i16 }
%struct.ldt_struct = type opaque
%struct.vdso_image = type { i8*, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.core_state = type { %struct.atomic_t, %struct.core_thread, %struct.completion }
%struct.core_thread = type { %struct.task_struct*, %struct.core_thread* }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.kioctx_table = type opaque
%struct.mmu_notifier_subscriptions = type opaque
%struct.uprobes_state = type {}
%struct.vmacache = type { i64, [4 x %struct.vm_area_struct*] }
%struct.restart_block = type { i64 (%struct.restart_block*)*, %union.anon.17 }
%union.anon.17 = type { %struct.anon.18 }
%struct.anon.18 = type { i32*, i32, i32, i32, i64, i32* }
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.posix_cputimers_work = type { %struct.callback_head, i32 }
%struct.key = type { %struct.refcount_struct, i32, %union.anon.22, %struct.rw_semaphore, %struct.key_user*, i8*, %union.anon.23, i64, %struct.kuid_t, %struct.kgid_t, i32, i16, i16, i16, i64, %union.anon.24, %union.anon.28, %struct.key_restriction* }
%union.anon.22 = type { %struct.rb_node }
%struct.key_user = type opaque
%union.anon.23 = type { i64 }
%union.anon.24 = type { %struct.keyring_index_key }
%struct.keyring_index_key = type { i64, %union.anon.25, %struct.key_type*, %struct.key_tag*, i8* }
%union.anon.25 = type { i64 }
%struct.key_type = type opaque
%struct.key_tag = type { %struct.callback_head, %struct.refcount_struct, i8 }
%union.anon.28 = type { %union.key_payload }
%union.key_payload = type { [4 x i8*] }
%struct.key_restriction = type { i32 (%struct.key*, %struct.key_type*, %union.key_payload*, %struct.key*)*, %struct.key*, %struct.key_type* }
%struct.nameidata = type opaque
%struct.fs_struct = type opaque
%struct.files_struct = type opaque
%struct.io_uring_task = type opaque
%struct.nsproxy = type { %struct.atomic_t, %struct.uts_namespace*, %struct.ipc_namespace*, %struct.mnt_namespace*, %struct.pid_namespace*, %struct.net*, %struct.time_namespace*, %struct.time_namespace*, %struct.cgroup_namespace* }
%struct.uts_namespace = type opaque
%struct.ipc_namespace = type opaque
%struct.mnt_namespace = type opaque
%struct.pid_namespace = type { %struct.kref, %struct.idr, %struct.callback_head, i32, %struct.task_struct*, %struct.kmem_cache*, i32, %struct.pid_namespace*, %struct.user_namespace*, %struct.ucounts*, i32, %struct.ns_common }
%struct.idr = type { %struct.xarray, i32, i32 }
%struct.xarray = type { %struct.spinlock, i32, i8* }
%struct.kmem_cache = type opaque
%struct.ucounts = type opaque
%struct.ns_common = type { %struct.atomic64_t, %struct.proc_ns_operations*, i32 }
%struct.proc_ns_operations = type opaque
%struct.net = type opaque
%struct.time_namespace = type opaque
%struct.cgroup_namespace = type opaque
%struct.signal_struct = type { %struct.refcount_struct, %struct.atomic_t, i32, %struct.list_head, %struct.wait_queue_head, %struct.task_struct*, %struct.sigpending, %struct.hlist_head, i32, i32, %struct.task_struct*, i32, i32, i8, i32, %struct.list_head, %struct.hrtimer, i64, [2 x %struct.cpu_itimer], %struct.thread_group_cputimer, %struct.posix_cputimers, [4 x %struct.pid*], %struct.pid*, i32, %struct.tty_struct*, %struct.seqlock_t, i64, i64, i64, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.task_io_accounting, i64, [16 x %struct.rlimit], i8, i16, i16, %struct.mm_struct*, %struct.mutex, %struct.mutex }
%struct.cpu_itimer = type { i64, i64 }
%struct.thread_group_cputimer = type { %struct.task_cputime_atomic }
%struct.task_cputime_atomic = type { %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t }
%struct.seqlock_t = type { %struct.seqcount_spinlock, %struct.spinlock }
%struct.rlimit = type { i64, i64 }
%struct.sighand_struct = type { %struct.spinlock, %struct.refcount_struct, %struct.wait_queue_head, [64 x %struct.k_sigaction] }
%struct.k_sigaction = type { %struct.sigaction }
%struct.sigaction = type { void (i32)*, i64, void ()*, %struct.sigset_t }
%struct.sigset_t = type { [1 x i64] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.seccomp = type { i32, %struct.atomic_t, %struct.seccomp_filter* }
%struct.seccomp_filter = type opaque
%struct.raw_spinlock = type { %struct.arch_spinlock_t }
%struct.arch_spinlock_t = type {}
%struct.wake_q_node = type { %struct.wake_q_node* }
%struct.rb_root_cached = type { %struct.rb_root, %struct.rb_node* }
%struct.rt_mutex_waiter = type opaque
%struct.bio_list = type opaque
%struct.blk_plug = type opaque
%struct.reclaim_state = type opaque
%struct.io_context = type { %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.spinlock, i16, %struct.xarray, %struct.io_cq*, %struct.hlist_head, %struct.work_struct }
%struct.io_cq = type { %struct.request_queue*, %struct.io_context*, %union.anon.32, %union.anon.33, i32 }
%struct.request_queue = type opaque
%union.anon.32 = type { %struct.list_head }
%union.anon.33 = type { %struct.hlist_node }
%struct.capture_control = type opaque
%struct.kernel_siginfo = type { %struct.anon.34 }
%struct.anon.34 = type { i32, i32, i32, %union.__sifields }
%union.__sifields = type { %struct.anon.38 }
%struct.anon.38 = type { i32, i32, i32, i64, i64 }
%struct.task_io_accounting = type {}
%struct.robust_list_head = type opaque
%struct.futex_pi_state = type opaque
%struct.perf_event_context = type opaque
%struct.rseq = type { i32, i32, %union.anon.45, i32, [12 x i8] }
%union.anon.45 = type { i64 }
%struct.tlbflush_unmap_batch = type { %struct.arch_tlbflush_unmap_batch, i8, i8 }
%struct.arch_tlbflush_unmap_batch = type { %struct.cpumask }
%union.anon.46 = type { %struct.callback_head }
%struct.pipe_inode_info = type opaque
%struct.page_frag = type { %struct.page*, i32, i32 }
%struct.vm_struct = type { %struct.vm_struct*, i8*, i64, i64, %struct.page**, i32, i64, i8* }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.thread_struct = type { [3 x %struct.desc_struct], i64, i16, i16, i16, i16, i64, i64, [4 x %struct.perf_event*], i64, i64, i64, i64, i64, %struct.io_bitmap*, i64, i8, [47 x i8], %struct.fpu }
%struct.desc_struct = type { i16, i16, i32 }
%struct.perf_event = type opaque
%struct.io_bitmap = type opaque
%struct.fpu = type { i32, i64, [48 x i8], %union.fpregs_state }
%union.fpregs_state = type { %struct.xregs_state, [3520 x i8] }
%struct.xregs_state = type { %struct.fxregs_state, %struct.xstate_header, [0 x i8] }
%struct.fxregs_state = type { i16, i16, i16, i16, %union.anon.47, i32, i32, [32 x i32], [64 x i32], [12 x i32], %union.anon.50 }
%union.anon.47 = type { %struct.anon.48 }
%struct.anon.48 = type { i64, i64 }
%union.anon.50 = type { [12 x i32] }
%struct.xstate_header = type { i64, i64, [6 x i64] }
%struct.fsnotify_mark_connector = type opaque
%struct.uuid_t = type { [16 x i8] }
%struct.shrinker = type { i64 (%struct.shrinker*, %struct.shrink_control*)*, i64 (%struct.shrinker*, %struct.shrink_control*)*, i64, i32, i32, %struct.list_head, %struct.atomic64_t* }
%struct.workqueue_struct = type opaque
%struct.hlist_head = type { %struct.hlist_node* }
%struct.user_namespace = type opaque
%struct.list_lru = type { %struct.list_lru_node* }
%struct.list_lru_node = type { %struct.spinlock, %struct.list_lru_one, i64 }
%struct.list_lru_one = type { %struct.list_head, i64 }
%union.anon.63 = type { %struct.list_head }
%union.anon.64 = type { %struct.hlist_node }
%struct.inode = type { i16, i16, %struct.kuid_t, %struct.kgid_t, i32, %struct.inode_operations*, %struct.super_block*, %struct.address_space*, i64, %union.anon.55, i32, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.spinlock, i16, i8, i8, i64, i64, %struct.rw_semaphore, i64, i64, %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %union.anon.56, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %union.anon.57, %struct.file_lock_context*, %struct.address_space, %struct.list_head, %union.anon.60, i32, i32, %struct.fsnotify_mark_connector*, i8* }
%struct.inode_operations = type { %struct.dentry* (%struct.inode*, %struct.dentry*, i32)*, i8* (%struct.dentry*, %struct.inode*, %struct.delayed_call*)*, i32 (%struct.inode*, i32)*, %struct.posix_acl* (%struct.inode*, i32)*, i32 (%struct.dentry*, i8*, i32)*, i32 (%struct.inode*, %struct.dentry*, i16, i1)*, i32 (%struct.dentry*, %struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i8*)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i16, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.inode*, %struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.iattr*)*, i32 (%struct.path*, %struct.kstat*, i32, i32)*, i64 (%struct.dentry*, i8*, i64)*, i32 (%struct.inode*, %struct.fiemap_extent_info*, i64, i64)*, i32 (%struct.inode*, %struct.timespec64*, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.file*, i32, i16)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.posix_acl*, i32)*, [24 x i8] }
%struct.delayed_call = type { void (i8*)*, i8* }
%struct.posix_acl = type opaque
%struct.iattr = type { i32, i16, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.file* }
%struct.kstat = type { i32, i16, i32, i32, i64, i64, i64, i32, i32, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.timespec64, i64, i64 }
%struct.fiemap_extent_info = type opaque
%union.anon.55 = type { i32 }
%struct.timespec64 = type { i64, i64 }
%union.anon.56 = type { %struct.callback_head }
%union.anon.57 = type { %struct.file_operations* }
%struct.file_lock_context = type { %struct.spinlock, %struct.list_head, %struct.list_head, %struct.list_head }
%struct.address_space = type { %struct.inode*, %struct.xarray, i32, %struct.atomic_t, %struct.rb_root_cached, %struct.rw_semaphore, i64, i64, i64, %struct.address_space_operations*, i64, i32, %struct.spinlock, %struct.list_head, i8* }
%struct.address_space_operations = type { i32 (%struct.page*, %struct.writeback_control*)*, i32 (%struct.file*, %struct.page*)*, i32 (%struct.address_space*, %struct.writeback_control*)*, i32 (%struct.page*)*, i32 (%struct.file*, %struct.address_space*, %struct.list_head*, i32)*, void (%struct.readahead_control*)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page**, i8**)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page*, i8*)*, i64 (%struct.address_space*, i64)*, void (%struct.page*, i32, i32)*, i32 (%struct.page*, i32)*, void (%struct.page*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.address_space*, %struct.page*, %struct.page*, i32)*, i1 (%struct.page*, i32)*, void (%struct.page*)*, i32 (%struct.page*)*, i32 (%struct.page*, i64, i64)*, void (%struct.page*, i8*, i8*)*, i32 (%struct.address_space*, %struct.page*)*, i32 (%struct.swap_info_struct*, %struct.file*, i64*)*, void (%struct.file*)* }
%struct.readahead_control = type opaque
%struct.kiocb = type { %struct.file*, i64, void (%struct.kiocb*, i64, i64)*, i8*, i32, i16, i16, %union.anon.4 }
%union.anon.4 = type { %struct.wait_page_queue* }
%struct.wait_page_queue = type opaque
%struct.iov_iter = type opaque
%struct.swap_info_struct = type opaque
%union.anon.60 = type { %struct.pipe_inode_info* }
%struct.file_operations = type { %struct.module*, i64 (%struct.file*, i64, i32)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.kiocb*, i1)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.poll_table_struct*)*, i64 (%struct.file*, i32, i64)*, i64 (%struct.file*, i32, i64)*, i32 (%struct.file*, %struct.vm_area_struct*)*, i64, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i8*)*, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i64, i64, i32)*, i32 (i32, %struct.file*, i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.file*, %struct.page*, i32, i64, i64*, i32)*, i64 (%struct.file*, i64, i64, i64, i64)*, i32 (i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.pipe_inode_info*, %struct.file*, i64*, i64, i32)*, i64 (%struct.file*, i64*, %struct.pipe_inode_info*, i64, i32)*, i32 (%struct.file*, i64, %struct.file_lock**, i8**)*, i64 (%struct.file*, i32, i64, i64)*, void (%struct.seq_file*, %struct.file*)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i32 (%struct.file*, i64, i64, i32)* }
%struct.dir_context = type { i32 (%struct.dir_context*, i8*, i32, i64, i64, i32)*, i64 }
%struct.poll_table_struct = type opaque
%struct.file_lock = type { %struct.file_lock*, %struct.list_head, %struct.hlist_node, %struct.list_head, %struct.list_head, i8*, i32, i8, i32, i32, %struct.wait_queue_head, %struct.file*, i64, i64, %struct.fasync_struct*, i64, i64, %struct.file_lock_operations*, %struct.lock_manager_operations*, %union.anon.58 }
%struct.file_lock_operations = type { void (%struct.file_lock*, %struct.file_lock*)*, void (%struct.file_lock*)* }
%struct.lock_manager_operations = type { i8* (i8*)*, void (i8*)*, void (%struct.file_lock*)*, i32 (%struct.file_lock*, i32)*, i1 (%struct.file_lock*)*, i32 (%struct.file_lock*, i32, %struct.list_head*)*, void (%struct.file_lock*, i8**)*, i1 (%struct.file_lock*)* }
%union.anon.58 = type { %struct.nfs_lock_info }
%struct.nfs_lock_info = type { i32, %struct.nlm_lockowner*, %struct.list_head }
%struct.nlm_lockowner = type opaque
%struct.atomic64_t = type { i64 }
%struct.fown_struct = type { %struct.rwlock_t, %struct.pid*, i32, %struct.kuid_t, %struct.kuid_t, i32 }
%struct.rwlock_t = type { %struct.arch_rwlock_t }
%struct.arch_rwlock_t = type {}
%struct.cred = type { %struct.atomic_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, i32, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, i8, %struct.key*, %struct.key*, %struct.key*, %struct.key*, %struct.user_struct*, %struct.user_namespace*, %struct.group_info*, %union.anon.30 }
%struct.kernel_cap_struct = type { [2 x i32] }
%struct.user_struct = type { %struct.refcount_struct, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i64, i64, %struct.atomic64_t, %struct.hlist_node, %struct.kuid_t, %struct.atomic64_t, %struct.ratelimit_state }
%struct.ratelimit_state = type { %struct.raw_spinlock, i32, i32, i32, i32, i64, i64 }
%struct.group_info = type { %struct.atomic_t, i32, [0 x %struct.kgid_t] }
%union.anon.30 = type { %struct.callback_head }
%struct.file_ra_state = type { i64, i32, i32, i32, i32, i64 }
%struct.seq_file = type { i8*, i64, i64, i64, i64, i64, i64, %struct.mutex, %struct.seq_operations*, i32, %struct.file*, i8* }
%struct.seq_operations = type { i8* (%struct.seq_file*, i64*)*, void (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i8*, i64*)*, i32 (%struct.seq_file*, i8*)* }
%struct.vm_operations_struct = type { void (%struct.vm_area_struct*)*, void (%struct.vm_area_struct*)*, i32 (%struct.vm_area_struct*, i64)*, i32 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*, i32)*, void (%struct.vm_fault*, i64, i64)*, i64 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_area_struct*, i64, i8*, i32, i32)*, i8* (%struct.vm_area_struct*)*, %struct.page* (%struct.vm_area_struct*, i64)* }
%struct.vm_fault = type { %struct.vm_area_struct*, i32, i32, i64, i64, %struct.pmd_t*, %struct.pud_t*, %struct.pte_t, %struct.page*, %struct.page*, %struct.pte_t*, %struct.spinlock*, %struct.page* }
%struct.pmd_t = type { i64 }
%struct.pud_t = type { i64 }
%struct.pte_t = type { i64 }
%struct.kernfs_open_node = type opaque
%struct.kernfs_iattrs = type opaque
%struct.device_private = type opaque
%struct.device_type = type { i8*, %struct.attribute_group**, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*, %struct.kuid_t*, %struct.kgid_t*)*, void (%struct.device*)*, %struct.dev_pm_ops* }
%struct.dev_pm_ops = type { i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)* }
%struct.bus_type = type { i8*, i8*, %struct.device*, %struct.attribute_group**, %struct.attribute_group**, %struct.attribute_group**, i32 (%struct.device*, %struct.device_driver*)*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, %struct.dev_pm_ops*, %struct.iommu_ops*, %struct.subsys_private*, %struct.lock_class_key, i8 }
%struct.iommu_ops = type opaque
%struct.subsys_private = type opaque
%struct.device_driver = type { i8*, %struct.bus_type*, %struct.module*, i8*, i8, i32, %struct.of_device_id*, %struct.acpi_device_id*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, %struct.attribute_group**, %struct.attribute_group**, %struct.dev_pm_ops*, void (%struct.device*)*, %struct.driver_private* }
%struct.of_device_id = type { [32 x i8], [32 x i8], [128 x i8], i8* }
%struct.acpi_device_id = type { [9 x i8], i64, i32, i32 }
%struct.driver_private = type opaque
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, i8, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, %struct.wakeup_source*, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, %struct.wake_irq*, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i64, i64, i64, i64, %struct.pm_subsys_data*, void (%struct.device*, i32)*, %struct.dev_pm_qos* }
%struct.pm_message = type { i32 }
%struct.wakeup_source = type { i8*, i32, %struct.list_head, %struct.spinlock, %struct.wake_irq*, %struct.timer_list, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.device*, i8 }
%struct.timer_list = type { %struct.hlist_node, i64, void (%struct.timer_list*)*, i32 }
%struct.wake_irq = type opaque
%struct.pm_subsys_data = type { %struct.spinlock, i32, %struct.list_head, %struct.pm_domain_data* }
%struct.pm_domain_data = type opaque
%struct.dev_pm_qos = type opaque
%struct.dev_pm_domain = type { %struct.dev_pm_ops, i32 (%struct.device*)*, void (%struct.device*, i1)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)* }
%struct.irq_domain = type { %struct.list_head, i8*, %struct.irq_domain_ops*, i8*, i32, i32, %struct.fwnode_handle*, i32, %struct.irq_domain_chip_generic*, %struct.irq_domain*, i64, i32, i32, %struct.xarray, %struct.mutex, [0 x i32] }
%struct.irq_domain_ops = type { i32 (%struct.irq_domain*, %struct.device_node*, i32)*, i32 (%struct.irq_domain*, %struct.irq_fwspec*, i32)*, i32 (%struct.irq_domain*, i32, i64)*, void (%struct.irq_domain*, i32)*, i32 (%struct.irq_domain*, %struct.device_node*, i32*, i32, i64*, i32*)*, i32 (%struct.irq_domain*, i32, i32, i8*)*, void (%struct.irq_domain*, i32, i32)*, i32 (%struct.irq_domain*, %struct.irq_data*, i1)*, void (%struct.irq_domain*, %struct.irq_data*)*, i32 (%struct.irq_domain*, %struct.irq_fwspec*, i64*, i32*)* }
%struct.irq_fwspec = type { %struct.fwnode_handle*, i32, [16 x i32] }
%struct.irq_data = type opaque
%struct.irq_domain_chip_generic = type opaque
%struct.dma_map_ops = type opaque
%struct.bus_dma_region = type opaque
%struct.device_dma_parameters = type { i32, i64 }
%struct.dev_archdata = type {}
%struct.device_node = type { i8*, i32, i8*, %struct.fwnode_handle, %struct.property*, %struct.property*, %struct.device_node*, %struct.device_node*, %struct.device_node*, %struct.kobject, i64, i8* }
%struct.fwnode_handle = type { %struct.fwnode_handle*, %struct.fwnode_operations*, %struct.device* }
%struct.fwnode_operations = type { %struct.fwnode_handle* (%struct.fwnode_handle*)*, void (%struct.fwnode_handle*)*, i1 (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*, %struct.device*)*, i1 (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i32, i8*, i64)*, i32 (%struct.fwnode_handle*, i8*, i8**, i64)*, i8* (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i8*, i32, i32, %struct.fwnode_reference_args*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, i32 (%struct.fwnode_handle*, %struct.fwnode_endpoint*)*, i32 (%struct.fwnode_handle*, %struct.device*)* }
%struct.fwnode_reference_args = type { %struct.fwnode_handle*, i32, [8 x i64] }
%struct.fwnode_endpoint = type { i32, i32, %struct.fwnode_handle* }
%struct.property = type { i8*, i32, i8*, %struct.property*, %struct.bin_attribute }
%struct.bin_attribute = type { %struct.attribute, i64, i8*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i32 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, %struct.vm_area_struct*)* }
%struct.class = type { i8*, %struct.module*, %struct.attribute_group**, %struct.attribute_group**, %struct.kobject*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*)*, void (%struct.class*)*, void (%struct.device*)*, i32 (%struct.device*)*, %struct.kobj_ns_type_operations*, i8* (%struct.device*)*, void (%struct.device*, %struct.kuid_t*, %struct.kgid_t*)*, %struct.dev_pm_ops*, %struct.subsys_private* }
%struct.attribute_group = type { i8*, i16 (%struct.kobject*, %struct.attribute*, i32)*, i16 (%struct.kobject*, %struct.bin_attribute*, i32)*, %struct.attribute**, %struct.bin_attribute** }
%struct.iommu_group = type opaque
%struct.dev_iommu = type opaque
%struct.tty_driver = type { i32, %struct.kref, %struct.cdev**, %struct.module*, i8*, i8*, i32, i32, i32, i32, i16, i16, %struct.ktermios, i64, %struct.proc_dir_entry*, %struct.tty_driver*, %struct.tty_struct**, %struct.tty_port**, %struct.ktermios**, i8*, %struct.tty_operations*, %struct.list_head }
%struct.cdev = type { %struct.kobject, %struct.module*, %struct.file_operations*, %struct.list_head, i32, i32 }
%struct.proc_dir_entry = type opaque
%struct.tty_operations = type { %struct.tty_struct* (%struct.tty_driver*, %struct.file*, i32)*, i32 (%struct.tty_driver*, %struct.tty_struct*)*, void (%struct.tty_driver*, %struct.tty_struct*)*, i32 (%struct.tty_struct*, %struct.file*)*, void (%struct.tty_struct*, %struct.file*)*, void (%struct.tty_struct*)*, void (%struct.tty_struct*)*, i32 (%struct.tty_struct*, i8*, i32)*, i32 (%struct.tty_struct*, i8)*, void (%struct.tty_struct*)*, i32 (%struct.tty_struct*)*, i32 (%struct.tty_struct*)*, i32 (%struct.tty_struct*, i32, i64)*, i64 (%struct.tty_struct*, i32, i64)*, void (%struct.tty_struct*, %struct.ktermios*)*, void (%struct.tty_struct*)*, void (%struct.tty_struct*)*, void (%struct.tty_struct*)*, void (%struct.tty_struct*)*, void (%struct.tty_struct*)*, i32 (%struct.tty_struct*, i32)*, void (%struct.tty_struct*)*, void (%struct.tty_struct*)*, void (%struct.tty_struct*, i32)*, void (%struct.tty_struct*, i8)*, i32 (%struct.tty_struct*)*, i32 (%struct.tty_struct*, i32, i32)*, i32 (%struct.tty_struct*, %struct.winsize*)*, i32 (%struct.tty_struct*, %struct.termiox*)*, i32 (%struct.tty_struct*, %struct.serial_icounter_struct*)*, i32 (%struct.tty_struct*, %struct.serial_struct*)*, i32 (%struct.tty_struct*, %struct.serial_struct*)*, void (%struct.tty_struct*, %struct.seq_file*)*, i32 (%struct.seq_file*, i8*)* }
%struct.serial_icounter_struct = type opaque
%struct.serial_struct = type opaque
%struct.ld_semaphore = type { %struct.atomic64_t, %struct.raw_spinlock, i32, %struct.list_head, %struct.list_head }
%struct.tty_ldisc = type { %struct.tty_ldisc_ops*, %struct.tty_struct* }
%struct.tty_ldisc_ops = type { i32, i8*, i32, i32, i32 (%struct.tty_struct*)*, void (%struct.tty_struct*)*, void (%struct.tty_struct*)*, i64 (%struct.tty_struct*, %struct.file*, i8*, i64)*, i64 (%struct.tty_struct*, %struct.file*, i8*, i64)*, i32 (%struct.tty_struct*, %struct.file*, i32, i64)*, i32 (%struct.tty_struct*, %struct.file*, i32, i64)*, void (%struct.tty_struct*, %struct.ktermios*)*, i32 (%struct.tty_struct*, %struct.file*, %struct.poll_table_struct*)*, i32 (%struct.tty_struct*)*, void (%struct.tty_struct*, i8*, i8*, i32)*, void (%struct.tty_struct*)*, void (%struct.tty_struct*, i32)*, i32 (%struct.tty_struct*, i8*, i8*, i32)*, %struct.module*, i32 }
%struct.rw_semaphore = type { %struct.atomic64_t, %struct.atomic64_t, %struct.raw_spinlock, %struct.list_head }
%struct.ktermios = type { i32, i32, i32, i32, i8, [19 x i8], i32, i32 }
%struct.termiox = type { i16, i16, [5 x i16], i16 }
%struct.winsize = type { i16, i16, i16, i16 }
%struct.fasync_struct = type { %struct.rwlock_t, i32, i32, %struct.fasync_struct*, %struct.file*, %struct.callback_head }
%struct.list_head = type { %struct.list_head*, %struct.list_head* }
%struct.tty_port_operations = type { i32 (%struct.tty_port*)*, void (%struct.tty_port*, i32)*, void (%struct.tty_port*)*, i32 (%struct.tty_port*, %struct.tty_struct*)*, void (%struct.tty_port*)* }
%struct.tty_port_client_operations = type { i32 (%struct.tty_port*, i8*, i8*, i64)*, void (%struct.tty_port*)* }
%struct.spinlock = type { %union.anon }
%union.anon = type { %struct.raw_spinlock }
%struct.mutex = type { %struct.atomic64_t, %struct.spinlock, %struct.list_head }
%struct.kref = type { %struct.refcount_struct }
%struct.vc_state = type { i32, i32, i8, [2 x i8], i8, i32, i8, i8, i8, i8 }
%struct.consw = type { %struct.module*, i8* ()*, void (%struct.vc_data*, i32)*, void (%struct.vc_data*)*, void (%struct.vc_data*, i32, i32, i32, i32)*, void (%struct.vc_data*, i32, i32, i32)*, void (%struct.vc_data*, i16*, i32, i32, i32)*, void (%struct.vc_data*, i32)*, i1 (%struct.vc_data*, i32, i32, i32, i32)*, i32 (%struct.vc_data*)*, i32 (%struct.vc_data*, i32, i32)*, i32 (%struct.vc_data*, %struct.console_font*, i32)*, i32 (%struct.vc_data*, %struct.console_font*)*, i32 (%struct.vc_data*, %struct.console_font*, i8*)*, i32 (%struct.vc_data*, i32)*, i32 (%struct.vc_data*, i32, i32, i32)*, void (%struct.vc_data*, i8*)*, void (%struct.vc_data*, i32)*, i32 (%struct.vc_data*)*, void (%struct.vc_data*)*, i8 (%struct.vc_data*, i8, i32, i1, i1, i1, i1)*, void (%struct.vc_data*, i16*, i32)*, i16* (%struct.vc_data*, i32)*, i64 (%struct.vc_data*, i64, i32*, i32*)*, void (%struct.vc_data*)*, i32 (%struct.vc_data*)*, i32 (%struct.vc_data*)* }
%struct.console_font = type { i32, i32, i32, i8* }
%struct.vt_mode = type { i8, i8, i16, i16, i16 }
%struct.pid = type { %struct.refcount_struct, i32, %struct.spinlock, [4 x %struct.hlist_head], %struct.hlist_head, %struct.wait_queue_head, %struct.callback_head, [1 x %struct.upid] }
%struct.upid = type { i32, %struct.pid_namespace* }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.uni_pagedir = type opaque
%struct.uni_screen = type opaque
%struct.work_struct = type { %struct.atomic64_t, %struct.list_head, void (%struct.work_struct*)* }
%struct.fb_info = type { %struct.atomic_t, i32, i32, i32, %struct.mutex, %struct.mutex, %struct.fb_var_screeninfo, %struct.fb_fix_screeninfo, %struct.fb_monspecs, %struct.work_struct, %struct.fb_pixmap, %struct.fb_pixmap, %struct.fb_cmap, %struct.list_head, %struct.fb_videomode*, %struct.backlight_device*, %struct.mutex, [128 x i8], %struct.delayed_work, %struct.fb_deferred_io*, %struct.fb_ops*, %struct.device*, %struct.device*, i32, %struct.fb_tile_ops*, %union.anon.66, i64, i8*, i32, i8*, i8*, %struct.apertures_struct*, i8 }
%struct.fb_var_screeninfo = type { i32, i32, i32, i32, i32, i32, i32, i32, %struct.fb_bitfield, %struct.fb_bitfield, %struct.fb_bitfield, %struct.fb_bitfield, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i32] }
%struct.fb_bitfield = type { i32, i32, i32 }
%struct.fb_fix_screeninfo = type { [16 x i8], i64, i32, i32, i32, i32, i16, i16, i16, i32, i64, i32, i32, i16, [2 x i16] }
%struct.fb_monspecs = type { %struct.fb_chroma, %struct.fb_videomode*, [4 x i8], [14 x i8], [14 x i8], [14 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, i8, i16, i8, i8, i8, i8 }
%struct.fb_chroma = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.fb_pixmap = type { i8*, i32, i32, i32, i32, i32, i32, i32, i32, void (%struct.fb_info*, i8*, i8*, i32)*, void (%struct.fb_info*, i8*, i8*, i32)* }
%struct.fb_cmap = type { i32, i32, i16*, i16*, i16*, i16* }
%struct.fb_videomode = type { i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.backlight_device = type { %struct.backlight_properties, %struct.mutex, %struct.mutex, %struct.backlight_ops*, %struct.notifier_block, %struct.list_head, %struct.device, [32 x i8], i32 }
%struct.backlight_properties = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.backlight_ops = type { i32, i32 (%struct.backlight_device*)*, i32 (%struct.backlight_device*)*, i32 (%struct.backlight_device*, %struct.fb_info*)* }
%struct.notifier_block = type { i32 (%struct.notifier_block*, i64, i8*)*, %struct.notifier_block*, i32 }
%struct.delayed_work = type { %struct.work_struct, %struct.timer_list, %struct.workqueue_struct*, i32 }
%struct.fb_deferred_io = type { i64, %struct.mutex, %struct.list_head, {}*, void (%struct.fb_info*, %struct.list_head*)* }
%struct.fb_ops = type { %struct.module*, i32 (%struct.fb_info*, i32)*, i32 (%struct.fb_info*, i32)*, i64 (%struct.fb_info*, i8*, i64, i64*)*, i64 (%struct.fb_info*, i8*, i64, i64*)*, i32 (%struct.fb_var_screeninfo*, %struct.fb_info*)*, i32 (%struct.fb_info*)*, i32 (i32, i32, i32, i32, i32, %struct.fb_info*)*, i32 (%struct.fb_cmap*, %struct.fb_info*)*, i32 (i32, %struct.fb_info*)*, i32 (%struct.fb_var_screeninfo*, %struct.fb_info*)*, void (%struct.fb_info*, %struct.fb_fillrect*)*, void (%struct.fb_info*, %struct.fb_copyarea*)*, void (%struct.fb_info*, %struct.fb_image*)*, i32 (%struct.fb_info*, %struct.fb_cursor*)*, i32 (%struct.fb_info*)*, i32 (%struct.fb_info*, i32, i64)*, i32 (%struct.fb_info*, i32, i64)*, i32 (%struct.fb_info*, %struct.vm_area_struct*)*, void (%struct.fb_info*, %struct.fb_blit_caps*, %struct.fb_var_screeninfo*)*, {}*, i32 (%struct.fb_info*)*, i32 (%struct.fb_info*)* }
%struct.fb_fillrect = type { i32, i32, i32, i32, i32, i32 }
%struct.fb_copyarea = type { i32, i32, i32, i32, i32, i32 }
%struct.fb_image = type { i32, i32, i32, i32, i32, i32, i8, i8*, %struct.fb_cmap }
%struct.fb_cursor = type { i16, i16, i16, i8*, %struct.fbcurpos, %struct.fb_image }
%struct.fbcurpos = type { i16, i16 }
%struct.fb_blit_caps = type { i32, i32, i32, i32 }
%struct.fb_tile_ops = type { void (%struct.fb_info*, %struct.fb_tilemap*)*, void (%struct.fb_info*, %struct.fb_tilearea*)*, void (%struct.fb_info*, %struct.fb_tilerect*)*, void (%struct.fb_info*, %struct.fb_tileblit*)*, void (%struct.fb_info*, %struct.fb_tilecursor*)*, i32 (%struct.fb_info*)* }
%struct.fb_tilemap = type { i32, i32, i32, i32, i8* }
%struct.fb_tilearea = type { i32, i32, i32, i32, i32, i32 }
%struct.fb_tilerect = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.fb_tileblit = type { i32, i32, i32, i32, i32, i32, i32, i32* }
%struct.fb_tilecursor = type { i32, i32, i32, i32, i32, i32 }
%union.anon.66 = type { i8* }
%struct.apertures_struct = type { i32, [0 x %struct.aperture] }
%struct.aperture = type { i64, i64 }
%struct.fbcon_display = type { i8*, i32, i16, i16, i16, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.fb_bitfield, %struct.fb_bitfield, %struct.fb_bitfield, %struct.fb_bitfield, %struct.fb_videomode* }
%struct.device_attribute = type { %struct.attribute, i64 (%struct.device*, %struct.device_attribute*, i8*)*, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* }
%struct.fbcon_ops = type { void (%struct.vc_data*, %struct.fb_info*, i32, i32, i32, i32, i32, i32)*, void (%struct.vc_data*, %struct.fb_info*, i32, i32, i32, i32)*, void (%struct.vc_data*, %struct.fb_info*, i16*, i32, i32, i32, i32, i32)*, void (%struct.vc_data*, %struct.fb_info*, i32, i32)*, void (%struct.vc_data*, %struct.fb_info*, i32, i32, i32)*, i32 (%struct.fb_info*)*, i32 (%struct.fb_info*, %struct.vc_data*)*, %struct.fb_var_screeninfo, %struct.timer_list, %struct.fb_cursor, %struct.fbcon_display*, %struct.fb_info*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i8*, i8*, i32, i32 }
%struct.fb_con2fbmap = type { i32, i32 }
%struct.font_desc = type { i32, i8*, i32, i32, i8*, i32 }

@__setup_str_fb_console_setup = internal constant [7 x i8] c"fbcon=\00", section ".init.rodata", align 1, !dbg !0
@__setup_fb_console_setup = internal global %struct.obs_kernel_param { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__setup_str_fb_console_setup, i32 0, i32 0), i32 (i8*)* @fb_console_setup, i32 0 }, section ".init.setup", align 8, !dbg !5100
@vc_cons = external dso_local global [63 x %struct.vc], align 16
@first_fb_vc = internal global i32 0, align 4, !dbg !5122
@last_fb_vc = internal global i32 62, align 4, !dbg !5156
@con2fb_map = internal global [63 x i8] zeroinitializer, align 16, !dbg !5116
@registered_fb = external dso_local global [32 x %struct.fb_info*], align 16
@fb_display = internal global [63 x %struct.fbcon_display] zeroinitializer, align 16, !dbg !5111
@ignore_console_lock_warning = external dso_local global %struct.atomic_t, align 4
@oops_in_progress = external dso_local global i32, align 4
@.str = private unnamed_addr constant [33 x i8] c"drivers/video/fbdev/core/fbcon.c\00", align 1
@fbcon_has_console_bind = internal global i32 0, align 4, !dbg !5124
@info_idx = internal global i32 -1, align 4, !dbg !5162
@primary_device = internal global i32 -1, align 4, !dbg !5164
@num_registered_fb = external dso_local global i32, align 4
@fb_con = internal constant %struct.consw { %struct.module* null, i8* ()* @fbcon_startup, void (%struct.vc_data*, i32)* @fbcon_init, void (%struct.vc_data*)* @fbcon_deinit, void (%struct.vc_data*, i32, i32, i32, i32)* @fbcon_clear, void (%struct.vc_data*, i32, i32, i32)* @fbcon_putc, void (%struct.vc_data*, i16*, i32, i32, i32)* @fbcon_putcs, void (%struct.vc_data*, i32)* @fbcon_cursor, i1 (%struct.vc_data*, i32, i32, i32, i32)* @fbcon_scroll, i32 (%struct.vc_data*)* @fbcon_switch, i32 (%struct.vc_data*, i32, i32)* @fbcon_blank, i32 (%struct.vc_data*, %struct.console_font*, i32)* @fbcon_set_font, i32 (%struct.vc_data*, %struct.console_font*)* @fbcon_get_font, i32 (%struct.vc_data*, %struct.console_font*, i8*)* @fbcon_set_def_font, i32 (%struct.vc_data*, i32)* @fbcon_copy_font, i32 (%struct.vc_data*, i32, i32, i32)* @fbcon_resize, void (%struct.vc_data*, i8*)* @fbcon_set_palette, void (%struct.vc_data*, i32)* null, i32 (%struct.vc_data*)* null, void (%struct.vc_data*)* null, i8 (%struct.vc_data*, i8, i32, i1, i1, i1, i1)* null, void (%struct.vc_data*, i16*, i32)* @fbcon_invert_region, i16* (%struct.vc_data*, i32)* @fbcon_screen_pos, i64 (%struct.vc_data*, i64, i32*, i32*)* @fbcon_getxy, void (%struct.vc_data*)* null, i32 (%struct.vc_data*)* @fbcon_debug_enter, i32 (%struct.vc_data*)* @fbcon_debug_leave }, align 8, !dbg !5166
@.str.1 = private unnamed_addr constant [55 x i8] c"\016fbcon: Remapping primary device, fb%i, to tty %i-%i\0A\00", align 1
@con2fb_map_boot = internal global [63 x i8] zeroinitializer, align 16, !dbg !5120
@fg_console = external dso_local global i32, align 4
@.str.2 = private unnamed_addr constant [5 x i8] c"fb%d\00", align 1
@fb_class = external dso_local global %struct.class*, align 8
@.str.3 = private unnamed_addr constant [6 x i8] c"fbcon\00", align 1
@fbcon_device = internal global %struct.device* null, align 8, !dbg !5126
@.str.4 = private unnamed_addr constant [50 x i8] c"\014Unable to create device for fbcon; errno = %ld\0A\00", align 1
@.str.5 = private unnamed_addr constant [2 x i8] c",\00", align 1
@.str.6 = private unnamed_addr constant [6 x i8] c"font:\00", align 1
@fontname = internal global [40 x i8] zeroinitializer, align 16, !dbg !5128
@.str.7 = private unnamed_addr constant [12 x i8] c"scrollback:\00", align 1
@.str.8 = private unnamed_addr constant [35 x i8] c"\014Ignoring scrollback size option\0A\00", align 1
@.str.9 = private unnamed_addr constant [5 x i8] c"map:\00", align 1
@.str.10 = private unnamed_addr constant [4 x i8] c"vc:\00", align 1
@fbcon_is_default = internal global i32 1, align 4, !dbg !5135
@.str.11 = private unnamed_addr constant [8 x i8] c"rotate:\00", align 1
@initial_rotation = internal global i32 -1, align 4, !dbg !5137
@.str.12 = private unnamed_addr constant [8 x i8] c"margin:\00", align 1
@margin_color = internal global i32 0, align 4, !dbg !5139
@.str.13 = private unnamed_addr constant [10 x i8] c"logo-pos:\00", align 1
@.str.14 = private unnamed_addr constant [7 x i8] c"center\00", align 1
@fb_center_logo = external dso_local global i8, align 1
@.str.15 = private unnamed_addr constant [12 x i8] c"logo-count:\00", align 1
@fb_logo_count = external dso_local global i32, align 4
@map_override = internal global i32 0, align 4, !dbg !5133
@fbcon_cursor_noblink = internal global i32 0, align 4, !dbg !5141
@jiffies = external dso_local global i64, align 8
@system_power_efficient_wq = external dso_local global %struct.workqueue_struct*, align 8
@console_blanked = external dso_local global i32, align 4
@scrollback_max = internal global i32 0, align 4, !dbg !5143
@scrollback_current = internal global i32 0, align 4, !dbg !5145
@color_table = external dso_local constant [0 x i8], align 1
@palette_red = internal global [16 x i16] zeroinitializer, align 16, !dbg !5147
@palette_green = internal global [16 x i16] zeroinitializer, align 16, !dbg !5150
@palette_blue = internal global [16 x i16] zeroinitializer, align 16, !dbg !5152
@palette_cmap = internal global %struct.fb_cmap { i32 0, i32 16, i16* getelementptr inbounds ([16 x i16], [16 x i16]* @palette_red, i32 0, i32 0), i16* getelementptr inbounds ([16 x i16], [16 x i16]* @palette_green, i32 0, i32 0), i16* getelementptr inbounds ([16 x i16], [16 x i16]* @palette_blue, i32 0, i32 0), i16* null }, align 8, !dbg !5154
@logo_shown = internal global i32 -1, align 4, !dbg !5158
@kmalloc_caches = external dso_local global [3 x [14 x %struct.kmem_cache*]], align 16
@.str.16 = private unnamed_addr constant [21 x i8] c"include/linux/slab.h\00", align 1
@.str.17 = private unnamed_addr constant [75 x i8] c"\013con2fb_init_display: detected unhandled fb_set_par error, error code %d\0A\00", align 1
@logo_lines = internal global i32 0, align 4, !dbg !5160
@.str.18 = private unnamed_addr constant [65 x i8] c"\016fbcon_init: disable boot-logo (boot-logo bigger than screen).\0A\00", align 1
@.str.19 = private unnamed_addr constant [78 x i8] c"\013con2fb_release_oldinfo: detected unhandled fb_set_par error, error code %d\0A\00", align 1
@.str.20 = private unnamed_addr constant [38 x i8] c"\016fbcon: %s (fb%i) is primary device\0A\00", align 1
@.str.21 = private unnamed_addr constant [28 x i8] c"include/linux/thread_info.h\00", align 1
@.str.22 = private unnamed_addr constant [38 x i8] c"Buffer overflow detected (%d < %lu)!\0A\00", align 1
@.str.23 = private unnamed_addr constant [20 x i8] c"frame buffer device\00", align 1
@console_printk = external dso_local global [0 x i32], align 4
@.str.24 = private unnamed_addr constant [66 x i8] c"\013fbcon_init: detected unhandled fb_set_par error, error code %d\0A\00", align 1
@scrollback_phys_max = internal global i32 0, align 4, !dbg !5168
@.str.25 = private unnamed_addr constant [68 x i8] c"\013fbcon_switch: detected unhandled fb_set_par error, error code %d\0A\00", align 1
@fbcon_has_sysfs = internal global i32 0, align 4, !dbg !5170
@device_attrs = internal global [3 x %struct.device_attribute] [%struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.26, i32 0, i32 0), i16 420 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @show_rotate, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* @store_rotate }, %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.27, i32 0, i32 0), i16 128 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* null, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* @store_rotate_all }, %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.28, i32 0, i32 0), i16 420 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @show_cursor_blink, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* @store_cursor_blink }], align 16, !dbg !5172
@.str.26 = private unnamed_addr constant [7 x i8] c"rotate\00", align 1
@.str.27 = private unnamed_addr constant [11 x i8] c"rotate_all\00", align 1
@.str.28 = private unnamed_addr constant [13 x i8] c"cursor_blink\00", align 1
@.str.29 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@llvm.used = appending global [1 x i8*] [i8* bitcast (%struct.obs_kernel_param* @__setup_fb_console_setup to i8*)], section "llvm.metadata"

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal i32 @fb_console_setup(i8* %this_opt) #0 section ".init.text" !dbg !5195 {
entry:
  %retval = alloca i32, align 4
  %this_opt.addr = alloca i8*, align 8
  %options = alloca i8*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i8* %this_opt, i8** %this_opt.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %this_opt.addr, metadata !5196, metadata !DIExpression()), !dbg !5197
  call void @llvm.dbg.declare(metadata i8** %options, metadata !5198, metadata !DIExpression()), !dbg !5199
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5200, metadata !DIExpression()), !dbg !5201
  call void @llvm.dbg.declare(metadata i32* %j, metadata !5202, metadata !DIExpression()), !dbg !5203
  %0 = load i8*, i8** %this_opt.addr, align 8, !dbg !5204
  %tobool = icmp ne i8* %0, null, !dbg !5204
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !5206

lor.lhs.false:                                    ; preds = %entry
  %1 = load i8*, i8** %this_opt.addr, align 8, !dbg !5207
  %2 = load i8, i8* %1, align 1, !dbg !5208
  %tobool1 = icmp ne i8 %2, 0, !dbg !5208
  br i1 %tobool1, label %if.end, label %if.then, !dbg !5209

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 1, i32* %retval, align 4, !dbg !5210
  br label %return, !dbg !5210

if.end:                                           ; preds = %lor.lhs.false
  br label %while.cond, !dbg !5211

while.cond:                                       ; preds = %if.end95, %if.end94, %if.end84, %if.end75, %if.end65, %if.end51, %if.end28, %if.then9, %if.then4, %if.end
  %call = call i8* @strsep(i8** %this_opt.addr, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0)) #10, !dbg !5212
  store i8* %call, i8** %options, align 8, !dbg !5213
  %cmp = icmp ne i8* %call, null, !dbg !5214
  br i1 %cmp, label %while.body, label %while.end, !dbg !5211

while.body:                                       ; preds = %while.cond
  %3 = load i8*, i8** %options, align 8, !dbg !5215
  %call2 = call i32 @strncmp(i8* %3, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6, i64 0, i64 0), i64 5) #10, !dbg !5218
  %tobool3 = icmp ne i32 %call2, 0, !dbg !5218
  br i1 %tobool3, label %if.end6, label %if.then4, !dbg !5219

if.then4:                                         ; preds = %while.body
  %4 = load i8*, i8** %options, align 8, !dbg !5220
  %add.ptr = getelementptr i8, i8* %4, i64 5, !dbg !5222
  %call5 = call i64 @strlcpy(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @fontname, i64 0, i64 0), i8* %add.ptr, i64 40) #10, !dbg !5223
  br label %while.cond, !dbg !5224, !llvm.loop !5225

if.end6:                                          ; preds = %while.body
  %5 = load i8*, i8** %options, align 8, !dbg !5227
  %call7 = call i32 @strncmp(i8* %5, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.7, i64 0, i64 0), i64 11) #10, !dbg !5229
  %tobool8 = icmp ne i32 %call7, 0, !dbg !5229
  br i1 %tobool8, label %if.end11, label %if.then9, !dbg !5230

if.then9:                                         ; preds = %if.end6
  %call10 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.8, i64 0, i64 0)) #11, !dbg !5231
  br label %while.cond, !dbg !5233, !llvm.loop !5225

if.end11:                                         ; preds = %if.end6
  %6 = load i8*, i8** %options, align 8, !dbg !5234
  %call12 = call i32 @strncmp(i8* %6, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.9, i64 0, i64 0), i64 4) #10, !dbg !5236
  %tobool13 = icmp ne i32 %call12, 0, !dbg !5236
  br i1 %tobool13, label %if.end29, label %if.then14, !dbg !5237

if.then14:                                        ; preds = %if.end11
  %7 = load i8*, i8** %options, align 8, !dbg !5238
  %add.ptr15 = getelementptr i8, i8* %7, i64 4, !dbg !5238
  store i8* %add.ptr15, i8** %options, align 8, !dbg !5238
  %8 = load i8*, i8** %options, align 8, !dbg !5240
  %9 = load i8, i8* %8, align 1, !dbg !5242
  %tobool16 = icmp ne i8 %9, 0, !dbg !5242
  br i1 %tobool16, label %if.then17, label %if.end28, !dbg !5243

if.then17:                                        ; preds = %if.then14
  store i32 0, i32* %i, align 4, !dbg !5244
  store i32 0, i32* %j, align 4, !dbg !5247
  br label %for.cond, !dbg !5248

for.cond:                                         ; preds = %for.inc, %if.then17
  %10 = load i32, i32* %i, align 4, !dbg !5249
  %cmp18 = icmp slt i32 %10, 63, !dbg !5251
  br i1 %cmp18, label %for.body, label %for.end, !dbg !5252

for.body:                                         ; preds = %for.cond
  %11 = load i8*, i8** %options, align 8, !dbg !5253
  %12 = load i32, i32* %j, align 4, !dbg !5256
  %idxprom = sext i32 %12 to i64, !dbg !5253
  %arrayidx = getelementptr i8, i8* %11, i64 %idxprom, !dbg !5253
  %13 = load i8, i8* %arrayidx, align 1, !dbg !5253
  %tobool19 = icmp ne i8 %13, 0, !dbg !5253
  br i1 %tobool19, label %if.end21, label %if.then20, !dbg !5257

if.then20:                                        ; preds = %for.body
  store i32 0, i32* %j, align 4, !dbg !5258
  br label %if.end21, !dbg !5259

if.end21:                                         ; preds = %if.then20, %for.body
  %14 = load i8*, i8** %options, align 8, !dbg !5260
  %15 = load i32, i32* %j, align 4, !dbg !5261
  %inc = add i32 %15, 1, !dbg !5261
  store i32 %inc, i32* %j, align 4, !dbg !5261
  %idxprom22 = sext i32 %15 to i64, !dbg !5260
  %arrayidx23 = getelementptr i8, i8* %14, i64 %idxprom22, !dbg !5260
  %16 = load i8, i8* %arrayidx23, align 1, !dbg !5260
  %conv = sext i8 %16 to i32, !dbg !5260
  %sub = sub i32 %conv, 48, !dbg !5262
  %rem = srem i32 %sub, 32, !dbg !5263
  %conv24 = trunc i32 %rem to i8, !dbg !5264
  %17 = load i32, i32* %i, align 4, !dbg !5265
  %idxprom25 = sext i32 %17 to i64, !dbg !5266
  %arrayidx26 = getelementptr [63 x i8], [63 x i8]* @con2fb_map_boot, i64 0, i64 %idxprom25, !dbg !5266
  store i8 %conv24, i8* %arrayidx26, align 1, !dbg !5267
  br label %for.inc, !dbg !5268

for.inc:                                          ; preds = %if.end21
  %18 = load i32, i32* %i, align 4, !dbg !5269
  %inc27 = add i32 %18, 1, !dbg !5269
  store i32 %inc27, i32* %i, align 4, !dbg !5269
  br label %for.cond, !dbg !5270, !llvm.loop !5271

for.end:                                          ; preds = %for.cond
  call void @fbcon_map_override() #10, !dbg !5273
  br label %if.end28, !dbg !5274

if.end28:                                         ; preds = %for.end, %if.then14
  br label %while.cond, !dbg !5275, !llvm.loop !5225

if.end29:                                         ; preds = %if.end11
  %19 = load i8*, i8** %options, align 8, !dbg !5276
  %call30 = call i32 @strncmp(i8* %19, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.10, i64 0, i64 0), i64 3) #10, !dbg !5278
  %tobool31 = icmp ne i32 %call30, 0, !dbg !5278
  br i1 %tobool31, label %if.end52, label %if.then32, !dbg !5279

if.then32:                                        ; preds = %if.end29
  %20 = load i8*, i8** %options, align 8, !dbg !5280
  %add.ptr33 = getelementptr i8, i8* %20, i64 3, !dbg !5280
  store i8* %add.ptr33, i8** %options, align 8, !dbg !5280
  %21 = load i8*, i8** %options, align 8, !dbg !5282
  %22 = load i8, i8* %21, align 1, !dbg !5284
  %tobool34 = icmp ne i8 %22, 0, !dbg !5284
  br i1 %tobool34, label %if.then35, label %if.end39, !dbg !5285

if.then35:                                        ; preds = %if.then32
  %23 = load i8*, i8** %options, align 8, !dbg !5286
  %call36 = call i64 @simple_strtoul(i8* %23, i8** %options, i32 10) #10, !dbg !5287
  %sub37 = sub i64 %call36, 1, !dbg !5288
  %conv38 = trunc i64 %sub37 to i32, !dbg !5287
  store i32 %conv38, i32* @first_fb_vc, align 4, !dbg !5289
  br label %if.end39, !dbg !5290

if.end39:                                         ; preds = %if.then35, %if.then32
  %24 = load i32, i32* @first_fb_vc, align 4, !dbg !5291
  %cmp40 = icmp slt i32 %24, 0, !dbg !5293
  br i1 %cmp40, label %if.then42, label %if.end43, !dbg !5294

if.then42:                                        ; preds = %if.end39
  store i32 0, i32* @first_fb_vc, align 4, !dbg !5295
  br label %if.end43, !dbg !5296

if.end43:                                         ; preds = %if.then42, %if.end39
  %25 = load i8*, i8** %options, align 8, !dbg !5297
  %incdec.ptr = getelementptr i8, i8* %25, i32 1, !dbg !5297
  store i8* %incdec.ptr, i8** %options, align 8, !dbg !5297
  %26 = load i8, i8* %25, align 1, !dbg !5299
  %conv44 = sext i8 %26 to i32, !dbg !5299
  %cmp45 = icmp eq i32 %conv44, 45, !dbg !5300
  br i1 %cmp45, label %if.then47, label %if.end51, !dbg !5301

if.then47:                                        ; preds = %if.end43
  %27 = load i8*, i8** %options, align 8, !dbg !5302
  %call48 = call i64 @simple_strtoul(i8* %27, i8** %options, i32 10) #10, !dbg !5303
  %sub49 = sub i64 %call48, 1, !dbg !5304
  %conv50 = trunc i64 %sub49 to i32, !dbg !5303
  store i32 %conv50, i32* @last_fb_vc, align 4, !dbg !5305
  br label %if.end51, !dbg !5306

if.end51:                                         ; preds = %if.then47, %if.end43
  store i32 0, i32* @fbcon_is_default, align 4, !dbg !5307
  br label %while.cond, !dbg !5308, !llvm.loop !5225

if.end52:                                         ; preds = %if.end29
  %28 = load i8*, i8** %options, align 8, !dbg !5309
  %call53 = call i32 @strncmp(i8* %28, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.11, i64 0, i64 0), i64 7) #10, !dbg !5311
  %tobool54 = icmp ne i32 %call53, 0, !dbg !5311
  br i1 %tobool54, label %if.end66, label %if.then55, !dbg !5312

if.then55:                                        ; preds = %if.end52
  %29 = load i8*, i8** %options, align 8, !dbg !5313
  %add.ptr56 = getelementptr i8, i8* %29, i64 7, !dbg !5313
  store i8* %add.ptr56, i8** %options, align 8, !dbg !5313
  %30 = load i8*, i8** %options, align 8, !dbg !5315
  %31 = load i8, i8* %30, align 1, !dbg !5317
  %tobool57 = icmp ne i8 %31, 0, !dbg !5317
  br i1 %tobool57, label %if.then58, label %if.end61, !dbg !5318

if.then58:                                        ; preds = %if.then55
  %32 = load i8*, i8** %options, align 8, !dbg !5319
  %call59 = call i64 @simple_strtoul(i8* %32, i8** %options, i32 0) #10, !dbg !5320
  %conv60 = trunc i64 %call59 to i32, !dbg !5320
  store i32 %conv60, i32* @initial_rotation, align 4, !dbg !5321
  br label %if.end61, !dbg !5322

if.end61:                                         ; preds = %if.then58, %if.then55
  %33 = load i32, i32* @initial_rotation, align 4, !dbg !5323
  %cmp62 = icmp sgt i32 %33, 3, !dbg !5325
  br i1 %cmp62, label %if.then64, label %if.end65, !dbg !5326

if.then64:                                        ; preds = %if.end61
  store i32 0, i32* @initial_rotation, align 4, !dbg !5327
  br label %if.end65, !dbg !5328

if.end65:                                         ; preds = %if.then64, %if.end61
  br label %while.cond, !dbg !5329, !llvm.loop !5225

if.end66:                                         ; preds = %if.end52
  %34 = load i8*, i8** %options, align 8, !dbg !5330
  %call67 = call i32 @strncmp(i8* %34, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.12, i64 0, i64 0), i64 7) #10, !dbg !5332
  %tobool68 = icmp ne i32 %call67, 0, !dbg !5332
  br i1 %tobool68, label %if.end76, label %if.then69, !dbg !5333

if.then69:                                        ; preds = %if.end66
  %35 = load i8*, i8** %options, align 8, !dbg !5334
  %add.ptr70 = getelementptr i8, i8* %35, i64 7, !dbg !5334
  store i8* %add.ptr70, i8** %options, align 8, !dbg !5334
  %36 = load i8*, i8** %options, align 8, !dbg !5336
  %37 = load i8, i8* %36, align 1, !dbg !5338
  %tobool71 = icmp ne i8 %37, 0, !dbg !5338
  br i1 %tobool71, label %if.then72, label %if.end75, !dbg !5339

if.then72:                                        ; preds = %if.then69
  %38 = load i8*, i8** %options, align 8, !dbg !5340
  %call73 = call i64 @simple_strtoul(i8* %38, i8** %options, i32 0) #10, !dbg !5341
  %conv74 = trunc i64 %call73 to i32, !dbg !5341
  store i32 %conv74, i32* @margin_color, align 4, !dbg !5342
  br label %if.end75, !dbg !5343

if.end75:                                         ; preds = %if.then72, %if.then69
  br label %while.cond, !dbg !5344, !llvm.loop !5225

if.end76:                                         ; preds = %if.end66
  %39 = load i8*, i8** %options, align 8, !dbg !5345
  %call77 = call i32 @strncmp(i8* %39, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.13, i64 0, i64 0), i64 9) #10, !dbg !5347
  %tobool78 = icmp ne i32 %call77, 0, !dbg !5347
  br i1 %tobool78, label %if.end85, label %if.then79, !dbg !5348

if.then79:                                        ; preds = %if.end76
  %40 = load i8*, i8** %options, align 8, !dbg !5349
  %add.ptr80 = getelementptr i8, i8* %40, i64 9, !dbg !5349
  store i8* %add.ptr80, i8** %options, align 8, !dbg !5349
  %41 = load i8*, i8** %options, align 8, !dbg !5351
  %call81 = call i32 @strcmp(i8* %41, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.14, i64 0, i64 0)) #10, !dbg !5353
  %tobool82 = icmp ne i32 %call81, 0, !dbg !5353
  br i1 %tobool82, label %if.end84, label %if.then83, !dbg !5354

if.then83:                                        ; preds = %if.then79
  store i8 1, i8* @fb_center_logo, align 1, !dbg !5355
  br label %if.end84, !dbg !5356

if.end84:                                         ; preds = %if.then83, %if.then79
  br label %while.cond, !dbg !5357, !llvm.loop !5225

if.end85:                                         ; preds = %if.end76
  %42 = load i8*, i8** %options, align 8, !dbg !5358
  %call86 = call i32 @strncmp(i8* %42, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.15, i64 0, i64 0), i64 11) #10, !dbg !5360
  %tobool87 = icmp ne i32 %call86, 0, !dbg !5360
  br i1 %tobool87, label %if.end95, label %if.then88, !dbg !5361

if.then88:                                        ; preds = %if.end85
  %43 = load i8*, i8** %options, align 8, !dbg !5362
  %add.ptr89 = getelementptr i8, i8* %43, i64 11, !dbg !5362
  store i8* %add.ptr89, i8** %options, align 8, !dbg !5362
  %44 = load i8*, i8** %options, align 8, !dbg !5364
  %45 = load i8, i8* %44, align 1, !dbg !5366
  %tobool90 = icmp ne i8 %45, 0, !dbg !5366
  br i1 %tobool90, label %if.then91, label %if.end94, !dbg !5367

if.then91:                                        ; preds = %if.then88
  %46 = load i8*, i8** %options, align 8, !dbg !5368
  %call92 = call i64 @simple_strtol(i8* %46, i8** %options, i32 0) #10, !dbg !5369
  %conv93 = trunc i64 %call92 to i32, !dbg !5369
  store i32 %conv93, i32* @fb_logo_count, align 4, !dbg !5370
  br label %if.end94, !dbg !5371

if.end94:                                         ; preds = %if.then91, %if.then88
  br label %while.cond, !dbg !5372, !llvm.loop !5225

if.end95:                                         ; preds = %if.end85
  br label %while.cond, !dbg !5211, !llvm.loop !5225

while.end:                                        ; preds = %while.cond
  store i32 1, i32* %retval, align 4, !dbg !5373
  br label %return, !dbg !5373

return:                                           ; preds = %while.end, %if.then
  %47 = load i32, i32* %retval, align 4, !dbg !5374
  ret i32 %47, !dbg !5374
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @fbcon_suspended(%struct.fb_info* %info) #1 !dbg !5375 {
entry:
  %info.addr = alloca %struct.fb_info*, align 8
  %vc = alloca %struct.vc_data*, align 8
  %ops = alloca %struct.fbcon_ops*, align 8
  store %struct.fb_info* %info, %struct.fb_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fb_info** %info.addr, metadata !5376, metadata !DIExpression()), !dbg !5377
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc, metadata !5378, metadata !DIExpression()), !dbg !5379
  store %struct.vc_data* null, %struct.vc_data** %vc, align 8, !dbg !5379
  call void @llvm.dbg.declare(metadata %struct.fbcon_ops** %ops, metadata !5380, metadata !DIExpression()), !dbg !5381
  %0 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !5382
  %fbcon_par = getelementptr inbounds %struct.fb_info, %struct.fb_info* %0, i32 0, i32 29, !dbg !5383
  %1 = load i8*, i8** %fbcon_par, align 8, !dbg !5383
  %2 = bitcast i8* %1 to %struct.fbcon_ops*, !dbg !5382
  store %struct.fbcon_ops* %2, %struct.fbcon_ops** %ops, align 8, !dbg !5381
  %3 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !5384
  %tobool = icmp ne %struct.fbcon_ops* %3, null, !dbg !5384
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !5386

lor.lhs.false:                                    ; preds = %entry
  %4 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !5387
  %currcon = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %4, i32 0, i32 12, !dbg !5388
  %5 = load i32, i32* %currcon, align 8, !dbg !5388
  %cmp = icmp slt i32 %5, 0, !dbg !5389
  br i1 %cmp, label %if.then, label %if.end, !dbg !5390

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %return, !dbg !5391

if.end:                                           ; preds = %lor.lhs.false
  %6 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !5392
  %currcon1 = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %6, i32 0, i32 12, !dbg !5393
  %7 = load i32, i32* %currcon1, align 8, !dbg !5393
  %idxprom = sext i32 %7 to i64, !dbg !5394
  %arrayidx = getelementptr [63 x %struct.vc], [63 x %struct.vc]* @vc_cons, i64 0, i64 %idxprom, !dbg !5394
  %d = getelementptr inbounds %struct.vc, %struct.vc* %arrayidx, i32 0, i32 0, !dbg !5395
  %8 = load %struct.vc_data*, %struct.vc_data** %d, align 8, !dbg !5395
  store %struct.vc_data* %8, %struct.vc_data** %vc, align 8, !dbg !5396
  %9 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !5397
  call void @fbcon_cursor(%struct.vc_data* %9, i32 2) #10, !dbg !5398
  br label %return, !dbg !5399

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !5399
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @fbcon_cursor(%struct.vc_data* %vc, i32 %mode) #1 !dbg !5400 {
entry:
  %retval.i = alloca i64, align 8
  %m.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m.addr.i, metadata !5401, metadata !DIExpression()), !dbg !5406
  %vc.addr = alloca %struct.vc_data*, align 8
  %mode.addr = alloca i32, align 4
  %info = alloca %struct.fb_info*, align 8
  %ops = alloca %struct.fbcon_ops*, align 8
  %c = alloca i32, align 4
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !5408, metadata !DIExpression()), !dbg !5409
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !5410, metadata !DIExpression()), !dbg !5411
  call void @llvm.dbg.declare(metadata %struct.fb_info** %info, metadata !5412, metadata !DIExpression()), !dbg !5413
  %0 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !5414
  %vc_num = getelementptr inbounds %struct.vc_data, %struct.vc_data* %0, i32 0, i32 3, !dbg !5415
  %1 = load i16, i16* %vc_num, align 8, !dbg !5415
  %idxprom = zext i16 %1 to i64, !dbg !5416
  %arrayidx = getelementptr [63 x i8], [63 x i8]* @con2fb_map, i64 0, i64 %idxprom, !dbg !5416
  %2 = load i8, i8* %arrayidx, align 1, !dbg !5416
  %idxprom1 = sext i8 %2 to i64, !dbg !5417
  %arrayidx2 = getelementptr [32 x %struct.fb_info*], [32 x %struct.fb_info*]* @registered_fb, i64 0, i64 %idxprom1, !dbg !5417
  %3 = load %struct.fb_info*, %struct.fb_info** %arrayidx2, align 8, !dbg !5417
  store %struct.fb_info* %3, %struct.fb_info** %info, align 8, !dbg !5413
  call void @llvm.dbg.declare(metadata %struct.fbcon_ops** %ops, metadata !5418, metadata !DIExpression()), !dbg !5419
  %4 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !5420
  %fbcon_par = getelementptr inbounds %struct.fb_info, %struct.fb_info* %4, i32 0, i32 29, !dbg !5421
  %5 = load i8*, i8** %fbcon_par, align 8, !dbg !5421
  %6 = bitcast i8* %5 to %struct.fbcon_ops*, !dbg !5420
  store %struct.fbcon_ops* %6, %struct.fbcon_ops** %ops, align 8, !dbg !5419
  call void @llvm.dbg.declare(metadata i32* %c, metadata !5422, metadata !DIExpression()), !dbg !5423
  %7 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !5424
  %vc_pos = getelementptr inbounds %struct.vc_data, %struct.vc_data* %7, i32 0, i32 25, !dbg !5424
  %8 = load i64, i64* %vc_pos, align 8, !dbg !5424
  %9 = inttoptr i64 %8 to i16*, !dbg !5424
  %10 = load i16, i16* %9, align 2, !dbg !5424
  %conv = zext i16 %10 to i32, !dbg !5424
  store i32 %conv, i32* %c, align 4, !dbg !5423
  %11 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !5425
  %vc_cur_blink_ms = getelementptr inbounds %struct.vc_data, %struct.vc_data* %11, i32 0, i32 45, !dbg !5426
  %12 = load i16, i16* %vc_cur_blink_ms, align 4, !dbg !5426
  %conv3 = zext i16 %12 to i32, !dbg !5425
  store i32 %conv3, i32* %m.addr.i, align 4
  %13 = load i32, i32* %m.addr.i, align 4, !dbg !5427
  %14 = call i1 @llvm.is.constant.i32(i32 %13) #12, !dbg !5429
  br i1 %14, label %if.then.i, label %if.else.i, !dbg !5430

if.then.i:                                        ; preds = %entry
  %15 = load i32, i32* %m.addr.i, align 4, !dbg !5431
  %cmp.i = icmp slt i32 %15, 0, !dbg !5434
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !5435

if.then1.i:                                       ; preds = %if.then.i
  store i64 4611686018427387902, i64* %retval.i, align 8, !dbg !5436
  br label %msecs_to_jiffies.exit, !dbg !5436

if.end.i:                                         ; preds = %if.then.i
  %16 = load i32, i32* %m.addr.i, align 4, !dbg !5437
  %call.i = call i64 @_msecs_to_jiffies(i32 %16) #13, !dbg !5438
  store i64 %call.i, i64* %retval.i, align 8, !dbg !5439
  br label %msecs_to_jiffies.exit, !dbg !5439

if.else.i:                                        ; preds = %entry
  %17 = load i32, i32* %m.addr.i, align 4, !dbg !5440
  %call2.i = call i64 @__msecs_to_jiffies(i32 %17) #13, !dbg !5442
  store i64 %call2.i, i64* %retval.i, align 8, !dbg !5443
  br label %msecs_to_jiffies.exit, !dbg !5443

msecs_to_jiffies.exit:                            ; preds = %if.then1.i, %if.end.i, %if.else.i
  %18 = load i64, i64* %retval.i, align 8, !dbg !5444
  %conv4 = trunc i64 %18 to i32, !dbg !5445
  %19 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !5446
  %cur_blink_jiffies = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %19, i32 0, i32 13, !dbg !5447
  store i32 %conv4, i32* %cur_blink_jiffies, align 4, !dbg !5448
  %20 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !5449
  %21 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !5451
  %call5 = call i32 @fbcon_is_inactive(%struct.vc_data* %20, %struct.fb_info* %21) #10, !dbg !5452
  %tobool = icmp ne i32 %call5, 0, !dbg !5452
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !5453

lor.lhs.false:                                    ; preds = %msecs_to_jiffies.exit
  %22 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !5454
  %vc_deccm = getelementptr inbounds %struct.vc_data, %struct.vc_data* %22, i32 0, i32 36, !dbg !5455
  %bf.load = load i16, i16* %vc_deccm, align 8, !dbg !5455
  %bf.lshr = lshr i16 %bf.load, 5, !dbg !5455
  %bf.clear = and i16 %bf.lshr, 1, !dbg !5455
  %bf.cast = zext i16 %bf.clear to i32, !dbg !5455
  %cmp = icmp ne i32 %bf.cast, 1, !dbg !5456
  br i1 %cmp, label %if.then, label %if.end, !dbg !5457

if.then:                                          ; preds = %lor.lhs.false, %msecs_to_jiffies.exit
  br label %return, !dbg !5458

if.end:                                           ; preds = %lor.lhs.false
  %23 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !5459
  %vc_cursor_type = getelementptr inbounds %struct.vc_data, %struct.vc_data* %23, i32 0, i32 22, !dbg !5461
  %24 = load i32, i32* %vc_cursor_type, align 4, !dbg !5461
  %and = and i32 %24, 16, !dbg !5462
  %tobool7 = icmp ne i32 %and, 0, !dbg !5462
  br i1 %tobool7, label %if.then8, label %if.else, !dbg !5463

if.then8:                                         ; preds = %if.end
  %25 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !5464
  call void @fbcon_del_cursor_timer(%struct.fb_info* %25) #10, !dbg !5465
  br label %if.end9, !dbg !5465

if.else:                                          ; preds = %if.end
  %26 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !5466
  call void @fbcon_add_cursor_timer(%struct.fb_info* %26) #10, !dbg !5467
  br label %if.end9

if.end9:                                          ; preds = %if.else, %if.then8
  %27 = load i32, i32* %mode.addr, align 4, !dbg !5468
  %cmp10 = icmp eq i32 %27, 2, !dbg !5469
  %28 = zext i1 %cmp10 to i64, !dbg !5470
  %cond = select i1 %cmp10, i32 0, i32 1, !dbg !5470
  %29 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !5471
  %cursor_flash = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %29, i32 0, i32 14, !dbg !5472
  store i32 %cond, i32* %cursor_flash, align 8, !dbg !5473
  %30 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !5474
  %cursor = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %30, i32 0, i32 4, !dbg !5475
  %31 = load void (%struct.vc_data*, %struct.fb_info*, i32, i32, i32)*, void (%struct.vc_data*, %struct.fb_info*, i32, i32, i32)** %cursor, align 8, !dbg !5475
  %32 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !5476
  %33 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !5477
  %34 = load i32, i32* %mode.addr, align 4, !dbg !5478
  %35 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !5479
  %36 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !5480
  %37 = load i32, i32* %c, align 4, !dbg !5481
  %conv12 = trunc i32 %37 to i16, !dbg !5481
  %call13 = call i32 @get_color(%struct.vc_data* %35, %struct.fb_info* %36, i16 zeroext %conv12, i32 1) #10, !dbg !5482
  %38 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !5483
  %39 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !5484
  %40 = load i32, i32* %c, align 4, !dbg !5485
  %conv14 = trunc i32 %40 to i16, !dbg !5485
  %call15 = call i32 @get_color(%struct.vc_data* %38, %struct.fb_info* %39, i16 zeroext %conv14, i32 0) #10, !dbg !5486
  call void %31(%struct.vc_data* %32, %struct.fb_info* %33, i32 %34, i32 %call13, i32 %call15) #10, !dbg !5474
  br label %return, !dbg !5487

return:                                           ; preds = %if.end9, %if.then
  ret void, !dbg !5487
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @fbcon_resumed(%struct.fb_info* %info) #1 !dbg !5488 {
entry:
  %info.addr = alloca %struct.fb_info*, align 8
  %vc = alloca %struct.vc_data*, align 8
  %ops = alloca %struct.fbcon_ops*, align 8
  store %struct.fb_info* %info, %struct.fb_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fb_info** %info.addr, metadata !5489, metadata !DIExpression()), !dbg !5490
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc, metadata !5491, metadata !DIExpression()), !dbg !5492
  call void @llvm.dbg.declare(metadata %struct.fbcon_ops** %ops, metadata !5493, metadata !DIExpression()), !dbg !5494
  %0 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !5495
  %fbcon_par = getelementptr inbounds %struct.fb_info, %struct.fb_info* %0, i32 0, i32 29, !dbg !5496
  %1 = load i8*, i8** %fbcon_par, align 8, !dbg !5496
  %2 = bitcast i8* %1 to %struct.fbcon_ops*, !dbg !5495
  store %struct.fbcon_ops* %2, %struct.fbcon_ops** %ops, align 8, !dbg !5494
  %3 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !5497
  %tobool = icmp ne %struct.fbcon_ops* %3, null, !dbg !5497
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !5499

lor.lhs.false:                                    ; preds = %entry
  %4 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !5500
  %currcon = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %4, i32 0, i32 12, !dbg !5501
  %5 = load i32, i32* %currcon, align 8, !dbg !5501
  %cmp = icmp slt i32 %5, 0, !dbg !5502
  br i1 %cmp, label %if.then, label %if.end, !dbg !5503

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %return, !dbg !5504

if.end:                                           ; preds = %lor.lhs.false
  %6 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !5505
  %currcon1 = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %6, i32 0, i32 12, !dbg !5506
  %7 = load i32, i32* %currcon1, align 8, !dbg !5506
  %idxprom = sext i32 %7 to i64, !dbg !5507
  %arrayidx = getelementptr [63 x %struct.vc], [63 x %struct.vc]* @vc_cons, i64 0, i64 %idxprom, !dbg !5507
  %d = getelementptr inbounds %struct.vc, %struct.vc* %arrayidx, i32 0, i32 0, !dbg !5508
  %8 = load %struct.vc_data*, %struct.vc_data** %d, align 8, !dbg !5508
  store %struct.vc_data* %8, %struct.vc_data** %vc, align 8, !dbg !5509
  %9 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !5510
  call void @redraw_screen(%struct.vc_data* %9, i32 0) #10, !dbg !5510
  br label %return, !dbg !5511

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !5511
}

; Function Attrs: noredzone
declare dso_local void @redraw_screen(%struct.vc_data*, i32) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @fbcon_update_vcs(%struct.fb_info* %info, i1 zeroext %all) #1 !dbg !5512 {
entry:
  %info.addr = alloca %struct.fb_info*, align 8
  %all.addr = alloca i8, align 1
  store %struct.fb_info* %info, %struct.fb_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fb_info** %info.addr, metadata !5515, metadata !DIExpression()), !dbg !5516
  %frombool = zext i1 %all to i8
  store i8 %frombool, i8* %all.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %all.addr, metadata !5517, metadata !DIExpression()), !dbg !5518
  %0 = load i8, i8* %all.addr, align 1, !dbg !5519
  %tobool = trunc i8 %0 to i1, !dbg !5519
  br i1 %tobool, label %if.then, label %if.else, !dbg !5521

if.then:                                          ; preds = %entry
  %1 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !5522
  call void @fbcon_set_all_vcs(%struct.fb_info* %1) #10, !dbg !5523
  br label %if.end, !dbg !5523

if.else:                                          ; preds = %entry
  %2 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !5524
  call void @fbcon_modechanged(%struct.fb_info* %2) #10, !dbg !5525
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !5526
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @fbcon_set_all_vcs(%struct.fb_info* %info) #1 !dbg !5527 {
entry:
  %info.addr = alloca %struct.fb_info*, align 8
  %ops = alloca %struct.fbcon_ops*, align 8
  %vc = alloca %struct.vc_data*, align 8
  %p = alloca %struct.fbcon_display*, align 8
  %i = alloca i32, align 4
  %rows = alloca i32, align 4
  %cols = alloca i32, align 4
  %fg = alloca i32, align 4
  %_r = alloca i32, align 4
  %_v = alloca i32, align 4
  %tmp = alloca i32, align 4
  %_r30 = alloca i32, align 4
  %_v33 = alloca i32, align 4
  %tmp38 = alloca i32, align 4
  store %struct.fb_info* %info, %struct.fb_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fb_info** %info.addr, metadata !5528, metadata !DIExpression()), !dbg !5529
  call void @llvm.dbg.declare(metadata %struct.fbcon_ops** %ops, metadata !5530, metadata !DIExpression()), !dbg !5531
  %0 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !5532
  %fbcon_par = getelementptr inbounds %struct.fb_info, %struct.fb_info* %0, i32 0, i32 29, !dbg !5533
  %1 = load i8*, i8** %fbcon_par, align 8, !dbg !5533
  %2 = bitcast i8* %1 to %struct.fbcon_ops*, !dbg !5532
  store %struct.fbcon_ops* %2, %struct.fbcon_ops** %ops, align 8, !dbg !5531
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc, metadata !5534, metadata !DIExpression()), !dbg !5535
  call void @llvm.dbg.declare(metadata %struct.fbcon_display** %p, metadata !5536, metadata !DIExpression()), !dbg !5537
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5538, metadata !DIExpression()), !dbg !5539
  call void @llvm.dbg.declare(metadata i32* %rows, metadata !5540, metadata !DIExpression()), !dbg !5541
  call void @llvm.dbg.declare(metadata i32* %cols, metadata !5542, metadata !DIExpression()), !dbg !5543
  call void @llvm.dbg.declare(metadata i32* %fg, metadata !5544, metadata !DIExpression()), !dbg !5545
  store i32 -1, i32* %fg, align 4, !dbg !5545
  %3 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !5546
  %tobool = icmp ne %struct.fbcon_ops* %3, null, !dbg !5546
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !5548

lor.lhs.false:                                    ; preds = %entry
  %4 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !5549
  %currcon = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %4, i32 0, i32 12, !dbg !5550
  %5 = load i32, i32* %currcon, align 8, !dbg !5550
  %cmp = icmp slt i32 %5, 0, !dbg !5551
  br i1 %cmp, label %if.then, label %if.end, !dbg !5552

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %if.end56, !dbg !5553

if.end:                                           ; preds = %lor.lhs.false
  %6 = load i32, i32* @first_fb_vc, align 4, !dbg !5554
  store i32 %6, i32* %i, align 4, !dbg !5556
  br label %for.cond, !dbg !5557

for.cond:                                         ; preds = %for.inc, %if.end
  %7 = load i32, i32* %i, align 4, !dbg !5558
  %8 = load i32, i32* @last_fb_vc, align 4, !dbg !5560
  %cmp1 = icmp sle i32 %7, %8, !dbg !5561
  br i1 %cmp1, label %for.body, label %for.end, !dbg !5562

for.body:                                         ; preds = %for.cond
  %9 = load i32, i32* %i, align 4, !dbg !5563
  %idxprom = sext i32 %9 to i64, !dbg !5565
  %arrayidx = getelementptr [63 x %struct.vc], [63 x %struct.vc]* @vc_cons, i64 0, i64 %idxprom, !dbg !5565
  %d = getelementptr inbounds %struct.vc, %struct.vc* %arrayidx, i32 0, i32 0, !dbg !5566
  %10 = load %struct.vc_data*, %struct.vc_data** %d, align 8, !dbg !5566
  store %struct.vc_data* %10, %struct.vc_data** %vc, align 8, !dbg !5567
  %11 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !5568
  %tobool2 = icmp ne %struct.vc_data* %11, null, !dbg !5568
  br i1 %tobool2, label %lor.lhs.false3, label %if.then13, !dbg !5570

lor.lhs.false3:                                   ; preds = %for.body
  %12 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !5571
  %vc_mode = getelementptr inbounds %struct.vc_data, %struct.vc_data* %12, i32 0, i32 16, !dbg !5572
  %13 = load i8, i8* %vc_mode, align 4, !dbg !5572
  %conv = zext i8 %13 to i32, !dbg !5571
  %cmp4 = icmp ne i32 %conv, 0, !dbg !5573
  br i1 %cmp4, label %if.then13, label %lor.lhs.false6, !dbg !5574

lor.lhs.false6:                                   ; preds = %lor.lhs.false3
  %14 = load i32, i32* %i, align 4, !dbg !5575
  %idxprom7 = sext i32 %14 to i64, !dbg !5576
  %arrayidx8 = getelementptr [63 x i8], [63 x i8]* @con2fb_map, i64 0, i64 %idxprom7, !dbg !5576
  %15 = load i8, i8* %arrayidx8, align 1, !dbg !5576
  %idxprom9 = sext i8 %15 to i64, !dbg !5577
  %arrayidx10 = getelementptr [32 x %struct.fb_info*], [32 x %struct.fb_info*]* @registered_fb, i64 0, i64 %idxprom9, !dbg !5577
  %16 = load %struct.fb_info*, %struct.fb_info** %arrayidx10, align 8, !dbg !5577
  %17 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !5578
  %cmp11 = icmp ne %struct.fb_info* %16, %17, !dbg !5579
  br i1 %cmp11, label %if.then13, label %if.end14, !dbg !5580

if.then13:                                        ; preds = %lor.lhs.false6, %lor.lhs.false3, %for.body
  br label %for.inc, !dbg !5581

if.end14:                                         ; preds = %lor.lhs.false6
  %18 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !5582
  %call = call zeroext i1 @con_is_visible(%struct.vc_data* %18) #10, !dbg !5584
  br i1 %call, label %if.then15, label %if.end16, !dbg !5585

if.then15:                                        ; preds = %if.end14
  %19 = load i32, i32* %i, align 4, !dbg !5586
  store i32 %19, i32* %fg, align 4, !dbg !5588
  br label %for.inc, !dbg !5589

if.end16:                                         ; preds = %if.end14
  %20 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !5590
  %vc_num = getelementptr inbounds %struct.vc_data, %struct.vc_data* %20, i32 0, i32 3, !dbg !5591
  %21 = load i16, i16* %vc_num, align 8, !dbg !5591
  %idxprom17 = zext i16 %21 to i64, !dbg !5592
  %arrayidx18 = getelementptr [63 x %struct.fbcon_display], [63 x %struct.fbcon_display]* @fb_display, i64 0, i64 %idxprom17, !dbg !5592
  store %struct.fbcon_display* %arrayidx18, %struct.fbcon_display** %p, align 8, !dbg !5593
  %22 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !5594
  %23 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !5595
  call void @set_blitting_type(%struct.vc_data* %22, %struct.fb_info* %23) #10, !dbg !5596
  %24 = load %struct.fbcon_display*, %struct.fbcon_display** %p, align 8, !dbg !5597
  %25 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !5598
  %var = getelementptr inbounds %struct.fb_info, %struct.fb_info* %25, i32 0, i32 6, !dbg !5599
  %26 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !5600
  %call19 = call i32 @var_to_display(%struct.fbcon_display* %24, %struct.fb_var_screeninfo* %var, %struct.fb_info* %26) #10, !dbg !5601
  call void @llvm.dbg.declare(metadata i32* %_r, metadata !5602, metadata !DIExpression()), !dbg !5604
  %27 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !5604
  %var20 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %27, i32 0, i32 6, !dbg !5604
  %xres = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %var20, i32 0, i32 0, !dbg !5604
  %28 = load i32, i32* %xres, align 8, !dbg !5604
  store i32 %28, i32* %_r, align 4, !dbg !5604
  call void @llvm.dbg.declare(metadata i32* %_v, metadata !5605, metadata !DIExpression()), !dbg !5604
  %29 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !5604
  %var21 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %29, i32 0, i32 6, !dbg !5604
  %yres = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %var21, i32 0, i32 1, !dbg !5604
  %30 = load i32, i32* %yres, align 4, !dbg !5604
  store i32 %30, i32* %_v, align 4, !dbg !5604
  %cmp22 = icmp eq i32* %_r, %_v, !dbg !5604
  %conv23 = zext i1 %cmp22 to i32, !dbg !5604
  %31 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !5604
  %rotate = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %31, i32 0, i32 20, !dbg !5604
  %32 = load i32, i32* %rotate, align 8, !dbg !5604
  %cmp24 = icmp eq i32 %32, 0, !dbg !5604
  br i1 %cmp24, label %cond.true, label %lor.lhs.false26, !dbg !5604

lor.lhs.false26:                                  ; preds = %if.end16
  %33 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !5604
  %rotate27 = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %33, i32 0, i32 20, !dbg !5604
  %34 = load i32, i32* %rotate27, align 8, !dbg !5604
  %cmp28 = icmp eq i32 %34, 2, !dbg !5604
  br i1 %cmp28, label %cond.true, label %cond.false, !dbg !5604

cond.true:                                        ; preds = %lor.lhs.false26, %if.end16
  %35 = load i32, i32* %_r, align 4, !dbg !5604
  br label %cond.end, !dbg !5604

cond.false:                                       ; preds = %lor.lhs.false26
  %36 = load i32, i32* %_v, align 4, !dbg !5604
  br label %cond.end, !dbg !5604

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %35, %cond.true ], [ %36, %cond.false ], !dbg !5604
  store i32 %cond, i32* %tmp, align 4, !dbg !5604
  %37 = load i32, i32* %tmp, align 4, !dbg !5604
  store i32 %37, i32* %cols, align 4, !dbg !5606
  call void @llvm.dbg.declare(metadata i32* %_r30, metadata !5607, metadata !DIExpression()), !dbg !5609
  %38 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !5609
  %var31 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %38, i32 0, i32 6, !dbg !5609
  %yres32 = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %var31, i32 0, i32 1, !dbg !5609
  %39 = load i32, i32* %yres32, align 4, !dbg !5609
  store i32 %39, i32* %_r30, align 4, !dbg !5609
  call void @llvm.dbg.declare(metadata i32* %_v33, metadata !5610, metadata !DIExpression()), !dbg !5609
  %40 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !5609
  %var34 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %40, i32 0, i32 6, !dbg !5609
  %xres35 = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %var34, i32 0, i32 0, !dbg !5609
  %41 = load i32, i32* %xres35, align 8, !dbg !5609
  store i32 %41, i32* %_v33, align 4, !dbg !5609
  %cmp36 = icmp eq i32* %_r30, %_v33, !dbg !5609
  %conv37 = zext i1 %cmp36 to i32, !dbg !5609
  %42 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !5609
  %rotate39 = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %42, i32 0, i32 20, !dbg !5609
  %43 = load i32, i32* %rotate39, align 8, !dbg !5609
  %cmp40 = icmp eq i32 %43, 0, !dbg !5609
  br i1 %cmp40, label %cond.true46, label %lor.lhs.false42, !dbg !5609

lor.lhs.false42:                                  ; preds = %cond.end
  %44 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !5609
  %rotate43 = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %44, i32 0, i32 20, !dbg !5609
  %45 = load i32, i32* %rotate43, align 8, !dbg !5609
  %cmp44 = icmp eq i32 %45, 2, !dbg !5609
  br i1 %cmp44, label %cond.true46, label %cond.false47, !dbg !5609

cond.true46:                                      ; preds = %lor.lhs.false42, %cond.end
  %46 = load i32, i32* %_r30, align 4, !dbg !5609
  br label %cond.end48, !dbg !5609

cond.false47:                                     ; preds = %lor.lhs.false42
  %47 = load i32, i32* %_v33, align 4, !dbg !5609
  br label %cond.end48, !dbg !5609

cond.end48:                                       ; preds = %cond.false47, %cond.true46
  %cond49 = phi i32 [ %46, %cond.true46 ], [ %47, %cond.false47 ], !dbg !5609
  store i32 %cond49, i32* %tmp38, align 4, !dbg !5609
  %48 = load i32, i32* %tmp38, align 4, !dbg !5609
  store i32 %48, i32* %rows, align 4, !dbg !5611
  %49 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !5612
  %vc_font = getelementptr inbounds %struct.vc_data, %struct.vc_data* %49, i32 0, i32 27, !dbg !5613
  %width = getelementptr inbounds %struct.console_font, %struct.console_font* %vc_font, i32 0, i32 0, !dbg !5614
  %50 = load i32, i32* %width, align 8, !dbg !5614
  %51 = load i32, i32* %cols, align 4, !dbg !5615
  %div = udiv i32 %51, %50, !dbg !5615
  store i32 %div, i32* %cols, align 4, !dbg !5615
  %52 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !5616
  %vc_font50 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %52, i32 0, i32 27, !dbg !5617
  %height = getelementptr inbounds %struct.console_font, %struct.console_font* %vc_font50, i32 0, i32 1, !dbg !5618
  %53 = load i32, i32* %height, align 4, !dbg !5618
  %54 = load i32, i32* %rows, align 4, !dbg !5619
  %div51 = udiv i32 %54, %53, !dbg !5619
  store i32 %div51, i32* %rows, align 4, !dbg !5619
  %55 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !5620
  %56 = load i32, i32* %cols, align 4, !dbg !5621
  %57 = load i32, i32* %rows, align 4, !dbg !5622
  %call52 = call i32 @vc_resize(%struct.vc_data* %55, i32 %56, i32 %57) #10, !dbg !5623
  br label %for.inc, !dbg !5624

for.inc:                                          ; preds = %cond.end48, %if.then15, %if.then13
  %58 = load i32, i32* %i, align 4, !dbg !5625
  %inc = add i32 %58, 1, !dbg !5625
  store i32 %inc, i32* %i, align 4, !dbg !5625
  br label %for.cond, !dbg !5626, !llvm.loop !5627

for.end:                                          ; preds = %for.cond
  %59 = load i32, i32* %fg, align 4, !dbg !5629
  %cmp53 = icmp ne i32 %59, -1, !dbg !5631
  br i1 %cmp53, label %if.then55, label %if.end56, !dbg !5632

if.then55:                                        ; preds = %for.end
  %60 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !5633
  call void @fbcon_modechanged(%struct.fb_info* %60) #10, !dbg !5634
  br label %if.end56, !dbg !5634

if.end56:                                         ; preds = %if.then, %if.then55, %for.end
  ret void, !dbg !5635
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @fbcon_modechanged(%struct.fb_info* %info) #1 !dbg !5636 {
entry:
  %info.addr = alloca %struct.fb_info*, align 8
  %ops = alloca %struct.fbcon_ops*, align 8
  %vc = alloca %struct.vc_data*, align 8
  %p = alloca %struct.fbcon_display*, align 8
  %rows = alloca i32, align 4
  %cols = alloca i32, align 4
  %_r = alloca i32, align 4
  %_v = alloca i32, align 4
  %tmp = alloca i32, align 4
  %_r28 = alloca i32, align 4
  %_v31 = alloca i32, align 4
  %tmp36 = alloca i32, align 4
  store %struct.fb_info* %info, %struct.fb_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fb_info** %info.addr, metadata !5637, metadata !DIExpression()), !dbg !5638
  call void @llvm.dbg.declare(metadata %struct.fbcon_ops** %ops, metadata !5639, metadata !DIExpression()), !dbg !5640
  %0 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !5641
  %fbcon_par = getelementptr inbounds %struct.fb_info, %struct.fb_info* %0, i32 0, i32 29, !dbg !5642
  %1 = load i8*, i8** %fbcon_par, align 8, !dbg !5642
  %2 = bitcast i8* %1 to %struct.fbcon_ops*, !dbg !5641
  store %struct.fbcon_ops* %2, %struct.fbcon_ops** %ops, align 8, !dbg !5640
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc, metadata !5643, metadata !DIExpression()), !dbg !5644
  call void @llvm.dbg.declare(metadata %struct.fbcon_display** %p, metadata !5645, metadata !DIExpression()), !dbg !5646
  call void @llvm.dbg.declare(metadata i32* %rows, metadata !5647, metadata !DIExpression()), !dbg !5648
  call void @llvm.dbg.declare(metadata i32* %cols, metadata !5649, metadata !DIExpression()), !dbg !5650
  %3 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !5651
  %tobool = icmp ne %struct.fbcon_ops* %3, null, !dbg !5651
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !5653

lor.lhs.false:                                    ; preds = %entry
  %4 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !5654
  %currcon = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %4, i32 0, i32 12, !dbg !5655
  %5 = load i32, i32* %currcon, align 8, !dbg !5655
  %cmp = icmp slt i32 %5, 0, !dbg !5656
  br i1 %cmp, label %if.then, label %if.end, !dbg !5657

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %if.end58, !dbg !5658

if.end:                                           ; preds = %lor.lhs.false
  %6 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !5659
  %currcon1 = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %6, i32 0, i32 12, !dbg !5660
  %7 = load i32, i32* %currcon1, align 8, !dbg !5660
  %idxprom = sext i32 %7 to i64, !dbg !5661
  %arrayidx = getelementptr [63 x %struct.vc], [63 x %struct.vc]* @vc_cons, i64 0, i64 %idxprom, !dbg !5661
  %d = getelementptr inbounds %struct.vc, %struct.vc* %arrayidx, i32 0, i32 0, !dbg !5662
  %8 = load %struct.vc_data*, %struct.vc_data** %d, align 8, !dbg !5662
  store %struct.vc_data* %8, %struct.vc_data** %vc, align 8, !dbg !5663
  %9 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !5664
  %vc_mode = getelementptr inbounds %struct.vc_data, %struct.vc_data* %9, i32 0, i32 16, !dbg !5666
  %10 = load i8, i8* %vc_mode, align 4, !dbg !5666
  %conv = zext i8 %10 to i32, !dbg !5664
  %cmp2 = icmp ne i32 %conv, 0, !dbg !5667
  br i1 %cmp2, label %if.then12, label %lor.lhs.false4, !dbg !5668

lor.lhs.false4:                                   ; preds = %if.end
  %11 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !5669
  %currcon5 = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %11, i32 0, i32 12, !dbg !5670
  %12 = load i32, i32* %currcon5, align 8, !dbg !5670
  %idxprom6 = sext i32 %12 to i64, !dbg !5671
  %arrayidx7 = getelementptr [63 x i8], [63 x i8]* @con2fb_map, i64 0, i64 %idxprom6, !dbg !5671
  %13 = load i8, i8* %arrayidx7, align 1, !dbg !5671
  %idxprom8 = sext i8 %13 to i64, !dbg !5672
  %arrayidx9 = getelementptr [32 x %struct.fb_info*], [32 x %struct.fb_info*]* @registered_fb, i64 0, i64 %idxprom8, !dbg !5672
  %14 = load %struct.fb_info*, %struct.fb_info** %arrayidx9, align 8, !dbg !5672
  %15 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !5673
  %cmp10 = icmp ne %struct.fb_info* %14, %15, !dbg !5674
  br i1 %cmp10, label %if.then12, label %if.end13, !dbg !5675

if.then12:                                        ; preds = %lor.lhs.false4, %if.end
  br label %if.end58, !dbg !5676

if.end13:                                         ; preds = %lor.lhs.false4
  %16 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !5677
  %vc_num = getelementptr inbounds %struct.vc_data, %struct.vc_data* %16, i32 0, i32 3, !dbg !5678
  %17 = load i16, i16* %vc_num, align 8, !dbg !5678
  %idxprom14 = zext i16 %17 to i64, !dbg !5679
  %arrayidx15 = getelementptr [63 x %struct.fbcon_display], [63 x %struct.fbcon_display]* @fb_display, i64 0, i64 %idxprom14, !dbg !5679
  store %struct.fbcon_display* %arrayidx15, %struct.fbcon_display** %p, align 8, !dbg !5680
  %18 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !5681
  %19 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !5682
  call void @set_blitting_type(%struct.vc_data* %18, %struct.fb_info* %19) #10, !dbg !5683
  %20 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !5684
  %call = call zeroext i1 @con_is_visible(%struct.vc_data* %20) #10, !dbg !5686
  br i1 %call, label %if.then16, label %if.end58, !dbg !5687

if.then16:                                        ; preds = %if.end13
  %21 = load %struct.fbcon_display*, %struct.fbcon_display** %p, align 8, !dbg !5688
  %22 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !5690
  %var = getelementptr inbounds %struct.fb_info, %struct.fb_info* %22, i32 0, i32 6, !dbg !5691
  %23 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !5692
  %call17 = call i32 @var_to_display(%struct.fbcon_display* %21, %struct.fb_var_screeninfo* %var, %struct.fb_info* %23) #10, !dbg !5693
  call void @llvm.dbg.declare(metadata i32* %_r, metadata !5694, metadata !DIExpression()), !dbg !5696
  %24 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !5696
  %var18 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %24, i32 0, i32 6, !dbg !5696
  %xres = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %var18, i32 0, i32 0, !dbg !5696
  %25 = load i32, i32* %xres, align 8, !dbg !5696
  store i32 %25, i32* %_r, align 4, !dbg !5696
  call void @llvm.dbg.declare(metadata i32* %_v, metadata !5697, metadata !DIExpression()), !dbg !5696
  %26 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !5696
  %var19 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %26, i32 0, i32 6, !dbg !5696
  %yres = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %var19, i32 0, i32 1, !dbg !5696
  %27 = load i32, i32* %yres, align 4, !dbg !5696
  store i32 %27, i32* %_v, align 4, !dbg !5696
  %cmp20 = icmp eq i32* %_r, %_v, !dbg !5696
  %conv21 = zext i1 %cmp20 to i32, !dbg !5696
  %28 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !5696
  %rotate = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %28, i32 0, i32 20, !dbg !5696
  %29 = load i32, i32* %rotate, align 8, !dbg !5696
  %cmp22 = icmp eq i32 %29, 0, !dbg !5696
  br i1 %cmp22, label %cond.true, label %lor.lhs.false24, !dbg !5696

lor.lhs.false24:                                  ; preds = %if.then16
  %30 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !5696
  %rotate25 = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %30, i32 0, i32 20, !dbg !5696
  %31 = load i32, i32* %rotate25, align 8, !dbg !5696
  %cmp26 = icmp eq i32 %31, 2, !dbg !5696
  br i1 %cmp26, label %cond.true, label %cond.false, !dbg !5696

cond.true:                                        ; preds = %lor.lhs.false24, %if.then16
  %32 = load i32, i32* %_r, align 4, !dbg !5696
  br label %cond.end, !dbg !5696

cond.false:                                       ; preds = %lor.lhs.false24
  %33 = load i32, i32* %_v, align 4, !dbg !5696
  br label %cond.end, !dbg !5696

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %32, %cond.true ], [ %33, %cond.false ], !dbg !5696
  store i32 %cond, i32* %tmp, align 4, !dbg !5696
  %34 = load i32, i32* %tmp, align 4, !dbg !5696
  store i32 %34, i32* %cols, align 4, !dbg !5698
  call void @llvm.dbg.declare(metadata i32* %_r28, metadata !5699, metadata !DIExpression()), !dbg !5701
  %35 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !5701
  %var29 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %35, i32 0, i32 6, !dbg !5701
  %yres30 = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %var29, i32 0, i32 1, !dbg !5701
  %36 = load i32, i32* %yres30, align 4, !dbg !5701
  store i32 %36, i32* %_r28, align 4, !dbg !5701
  call void @llvm.dbg.declare(metadata i32* %_v31, metadata !5702, metadata !DIExpression()), !dbg !5701
  %37 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !5701
  %var32 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %37, i32 0, i32 6, !dbg !5701
  %xres33 = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %var32, i32 0, i32 0, !dbg !5701
  %38 = load i32, i32* %xres33, align 8, !dbg !5701
  store i32 %38, i32* %_v31, align 4, !dbg !5701
  %cmp34 = icmp eq i32* %_r28, %_v31, !dbg !5701
  %conv35 = zext i1 %cmp34 to i32, !dbg !5701
  %39 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !5701
  %rotate37 = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %39, i32 0, i32 20, !dbg !5701
  %40 = load i32, i32* %rotate37, align 8, !dbg !5701
  %cmp38 = icmp eq i32 %40, 0, !dbg !5701
  br i1 %cmp38, label %cond.true44, label %lor.lhs.false40, !dbg !5701

lor.lhs.false40:                                  ; preds = %cond.end
  %41 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !5701
  %rotate41 = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %41, i32 0, i32 20, !dbg !5701
  %42 = load i32, i32* %rotate41, align 8, !dbg !5701
  %cmp42 = icmp eq i32 %42, 2, !dbg !5701
  br i1 %cmp42, label %cond.true44, label %cond.false45, !dbg !5701

cond.true44:                                      ; preds = %lor.lhs.false40, %cond.end
  %43 = load i32, i32* %_r28, align 4, !dbg !5701
  br label %cond.end46, !dbg !5701

cond.false45:                                     ; preds = %lor.lhs.false40
  %44 = load i32, i32* %_v31, align 4, !dbg !5701
  br label %cond.end46, !dbg !5701

cond.end46:                                       ; preds = %cond.false45, %cond.true44
  %cond47 = phi i32 [ %43, %cond.true44 ], [ %44, %cond.false45 ], !dbg !5701
  store i32 %cond47, i32* %tmp36, align 4, !dbg !5701
  %45 = load i32, i32* %tmp36, align 4, !dbg !5701
  store i32 %45, i32* %rows, align 4, !dbg !5703
  %46 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !5704
  %vc_font = getelementptr inbounds %struct.vc_data, %struct.vc_data* %46, i32 0, i32 27, !dbg !5705
  %width = getelementptr inbounds %struct.console_font, %struct.console_font* %vc_font, i32 0, i32 0, !dbg !5706
  %47 = load i32, i32* %width, align 8, !dbg !5706
  %48 = load i32, i32* %cols, align 4, !dbg !5707
  %div = udiv i32 %48, %47, !dbg !5707
  store i32 %div, i32* %cols, align 4, !dbg !5707
  %49 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !5708
  %vc_font48 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %49, i32 0, i32 27, !dbg !5709
  %height = getelementptr inbounds %struct.console_font, %struct.console_font* %vc_font48, i32 0, i32 1, !dbg !5710
  %50 = load i32, i32* %height, align 4, !dbg !5710
  %51 = load i32, i32* %rows, align 4, !dbg !5711
  %div49 = udiv i32 %51, %50, !dbg !5711
  store i32 %div49, i32* %rows, align 4, !dbg !5711
  %52 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !5712
  %53 = load i32, i32* %cols, align 4, !dbg !5713
  %54 = load i32, i32* %rows, align 4, !dbg !5714
  %call50 = call i32 @vc_resize(%struct.vc_data* %52, i32 %53, i32 %54) #10, !dbg !5715
  %55 = load %struct.fbcon_display*, %struct.fbcon_display** %p, align 8, !dbg !5716
  %56 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !5717
  %57 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !5718
  call void @updatescrollmode(%struct.fbcon_display* %55, %struct.fb_info* %56, %struct.vc_data* %57) #10, !dbg !5719
  store i32 0, i32* @scrollback_max, align 4, !dbg !5720
  store i32 0, i32* @scrollback_current, align 4, !dbg !5721
  %58 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !5722
  %59 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !5724
  %call51 = call i32 @fbcon_is_inactive(%struct.vc_data* %58, %struct.fb_info* %59) #10, !dbg !5725
  %tobool52 = icmp ne i32 %call51, 0, !dbg !5725
  br i1 %tobool52, label %if.end57, label %if.then53, !dbg !5726

if.then53:                                        ; preds = %cond.end46
  %60 = load %struct.fbcon_display*, %struct.fbcon_display** %p, align 8, !dbg !5727
  %yscroll = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %60, i32 0, i32 4, !dbg !5729
  store i16 0, i16* %yscroll, align 8, !dbg !5730
  %61 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !5731
  %var54 = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %61, i32 0, i32 7, !dbg !5732
  %yoffset = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %var54, i32 0, i32 5, !dbg !5733
  store i32 0, i32* %yoffset, align 4, !dbg !5734
  %62 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !5735
  %var55 = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %62, i32 0, i32 7, !dbg !5736
  %xoffset = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %var55, i32 0, i32 4, !dbg !5737
  store i32 0, i32* %xoffset, align 8, !dbg !5738
  %63 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !5739
  %update_start = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %63, i32 0, i32 5, !dbg !5740
  %64 = load i32 (%struct.fb_info*)*, i32 (%struct.fb_info*)** %update_start, align 8, !dbg !5740
  %65 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !5741
  %call56 = call i32 %64(%struct.fb_info* %65) #10, !dbg !5739
  br label %if.end57, !dbg !5742

if.end57:                                         ; preds = %if.then53, %cond.end46
  %66 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !5743
  call void @fbcon_set_palette(%struct.vc_data* %66, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @color_table, i64 0, i64 0)) #10, !dbg !5744
  %67 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !5745
  call void @redraw_screen(%struct.vc_data* %67, i32 0) #10, !dbg !5745
  br label %if.end58, !dbg !5746

if.end58:                                         ; preds = %if.then, %if.then12, %if.end57, %if.end13
  ret void, !dbg !5747
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @fbcon_mode_deleted(%struct.fb_info* %info, %struct.fb_videomode* %mode) #1 !dbg !5748 {
entry:
  %info.addr = alloca %struct.fb_info*, align 8
  %mode.addr = alloca %struct.fb_videomode*, align 8
  %fb_info = alloca %struct.fb_info*, align 8
  %p = alloca %struct.fbcon_display*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %found = alloca i32, align 4
  store %struct.fb_info* %info, %struct.fb_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fb_info** %info.addr, metadata !5751, metadata !DIExpression()), !dbg !5752
  store %struct.fb_videomode* %mode, %struct.fb_videomode** %mode.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fb_videomode** %mode.addr, metadata !5753, metadata !DIExpression()), !dbg !5754
  call void @llvm.dbg.declare(metadata %struct.fb_info** %fb_info, metadata !5755, metadata !DIExpression()), !dbg !5756
  call void @llvm.dbg.declare(metadata %struct.fbcon_display** %p, metadata !5757, metadata !DIExpression()), !dbg !5758
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5759, metadata !DIExpression()), !dbg !5760
  call void @llvm.dbg.declare(metadata i32* %j, metadata !5761, metadata !DIExpression()), !dbg !5762
  call void @llvm.dbg.declare(metadata i32* %found, metadata !5763, metadata !DIExpression()), !dbg !5764
  store i32 0, i32* %found, align 4, !dbg !5764
  %0 = load i32, i32* @first_fb_vc, align 4, !dbg !5765
  store i32 %0, i32* %i, align 4, !dbg !5767
  br label %for.cond, !dbg !5768

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %i, align 4, !dbg !5769
  %2 = load i32, i32* @last_fb_vc, align 4, !dbg !5771
  %cmp = icmp sle i32 %1, %2, !dbg !5772
  br i1 %cmp, label %for.body, label %for.end, !dbg !5773

for.body:                                         ; preds = %for.cond
  %3 = load i32, i32* %i, align 4, !dbg !5774
  %idxprom = sext i32 %3 to i64, !dbg !5776
  %arrayidx = getelementptr [63 x i8], [63 x i8]* @con2fb_map, i64 0, i64 %idxprom, !dbg !5776
  %4 = load i8, i8* %arrayidx, align 1, !dbg !5776
  %conv = sext i8 %4 to i32, !dbg !5776
  store i32 %conv, i32* %j, align 4, !dbg !5777
  %5 = load i32, i32* %j, align 4, !dbg !5778
  %cmp1 = icmp eq i32 %5, -1, !dbg !5780
  br i1 %cmp1, label %if.then, label %if.end, !dbg !5781

if.then:                                          ; preds = %for.body
  br label %for.inc, !dbg !5782

if.end:                                           ; preds = %for.body
  %6 = load i32, i32* %j, align 4, !dbg !5783
  %idxprom3 = sext i32 %6 to i64, !dbg !5784
  %arrayidx4 = getelementptr [32 x %struct.fb_info*], [32 x %struct.fb_info*]* @registered_fb, i64 0, i64 %idxprom3, !dbg !5784
  %7 = load %struct.fb_info*, %struct.fb_info** %arrayidx4, align 8, !dbg !5784
  store %struct.fb_info* %7, %struct.fb_info** %fb_info, align 8, !dbg !5785
  %8 = load %struct.fb_info*, %struct.fb_info** %fb_info, align 8, !dbg !5786
  %9 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !5788
  %cmp5 = icmp ne %struct.fb_info* %8, %9, !dbg !5789
  br i1 %cmp5, label %if.then7, label %if.end8, !dbg !5790

if.then7:                                         ; preds = %if.end
  br label %for.inc, !dbg !5791

if.end8:                                          ; preds = %if.end
  %10 = load i32, i32* %i, align 4, !dbg !5792
  %idxprom9 = sext i32 %10 to i64, !dbg !5793
  %arrayidx10 = getelementptr [63 x %struct.fbcon_display], [63 x %struct.fbcon_display]* @fb_display, i64 0, i64 %idxprom9, !dbg !5793
  store %struct.fbcon_display* %arrayidx10, %struct.fbcon_display** %p, align 8, !dbg !5794
  %11 = load %struct.fbcon_display*, %struct.fbcon_display** %p, align 8, !dbg !5795
  %tobool = icmp ne %struct.fbcon_display* %11, null, !dbg !5795
  br i1 %tobool, label %lor.lhs.false, label %if.then13, !dbg !5797

lor.lhs.false:                                    ; preds = %if.end8
  %12 = load %struct.fbcon_display*, %struct.fbcon_display** %p, align 8, !dbg !5798
  %mode11 = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %12, i32 0, i32 21, !dbg !5799
  %13 = load %struct.fb_videomode*, %struct.fb_videomode** %mode11, align 8, !dbg !5799
  %tobool12 = icmp ne %struct.fb_videomode* %13, null, !dbg !5798
  br i1 %tobool12, label %if.end14, label %if.then13, !dbg !5800

if.then13:                                        ; preds = %lor.lhs.false, %if.end8
  br label %for.inc, !dbg !5801

if.end14:                                         ; preds = %lor.lhs.false
  %14 = load %struct.fbcon_display*, %struct.fbcon_display** %p, align 8, !dbg !5802
  %mode15 = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %14, i32 0, i32 21, !dbg !5804
  %15 = load %struct.fb_videomode*, %struct.fb_videomode** %mode15, align 8, !dbg !5804
  %16 = load %struct.fb_videomode*, %struct.fb_videomode** %mode.addr, align 8, !dbg !5805
  %call = call i32 @fb_mode_is_equal(%struct.fb_videomode* %15, %struct.fb_videomode* %16) #10, !dbg !5806
  %tobool16 = icmp ne i32 %call, 0, !dbg !5806
  br i1 %tobool16, label %if.then17, label %if.end18, !dbg !5807

if.then17:                                        ; preds = %if.end14
  store i32 1, i32* %found, align 4, !dbg !5808
  br label %for.end, !dbg !5810

if.end18:                                         ; preds = %if.end14
  br label %for.inc, !dbg !5811

for.inc:                                          ; preds = %if.end18, %if.then13, %if.then7, %if.then
  %17 = load i32, i32* %i, align 4, !dbg !5812
  %inc = add i32 %17, 1, !dbg !5812
  store i32 %inc, i32* %i, align 4, !dbg !5812
  br label %for.cond, !dbg !5813, !llvm.loop !5814

for.end:                                          ; preds = %if.then17, %for.cond
  %18 = load i32, i32* %found, align 4, !dbg !5816
  ret i32 %18, !dbg !5817
}

; Function Attrs: noredzone
declare dso_local i32 @fb_mode_is_equal(%struct.fb_videomode*, %struct.fb_videomode*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @fbcon_fb_unbind(%struct.fb_info* %info) #1 !dbg !5818 {
entry:
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !5819, metadata !DIExpression()), !dbg !5826
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !5832, metadata !DIExpression()), !dbg !5840
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !5842, metadata !DIExpression()), !dbg !5843
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !5844, metadata !DIExpression()), !dbg !5845
  %info.addr = alloca %struct.fb_info*, align 8
  %i = alloca i32, align 4
  %new_idx = alloca i32, align 4
  %ret = alloca i32, align 4
  %idx = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  %info60 = alloca %struct.fb_info*, align 8
  store %struct.fb_info* %info, %struct.fb_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fb_info** %info.addr, metadata !5846, metadata !DIExpression()), !dbg !5847
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5848, metadata !DIExpression()), !dbg !5849
  call void @llvm.dbg.declare(metadata i32* %new_idx, metadata !5850, metadata !DIExpression()), !dbg !5851
  store i32 -1, i32* %new_idx, align 4, !dbg !5851
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5852, metadata !DIExpression()), !dbg !5853
  store i32 0, i32* %ret, align 4, !dbg !5853
  call void @llvm.dbg.declare(metadata i32* %idx, metadata !5854, metadata !DIExpression()), !dbg !5855
  %0 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !5856
  %node = getelementptr inbounds %struct.fb_info, %struct.fb_info* %0, i32 0, i32 1, !dbg !5857
  %1 = load i32, i32* %node, align 4, !dbg !5857
  store i32 %1, i32* %idx, align 4, !dbg !5855
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !5858, metadata !DIExpression()), !dbg !5859
  store %struct.atomic_t* @ignore_console_lock_warning, %struct.atomic_t** %v.addr.i, align 8
  %2 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !5860
  %3 = bitcast %struct.atomic_t* %2 to i8*, !dbg !5860
  store i8* %3, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %4 = load i8*, i8** %v.addr.i.i, align 8, !dbg !5861
  %5 = load i64, i64* %size.addr.i.i, align 8, !dbg !5862
  %conv.i.i = trunc i64 %5 to i32, !dbg !5862
  %call.i.i = call zeroext i1 @kasan_check_read(i8* %4, i32 %conv.i.i) #13, !dbg !5863
  %6 = load i8*, i8** %v.addr.i.i, align 8, !dbg !5864
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !5864
  call void @kcsan_check_access(i8* %6, i64 %7, i32 4) #13, !dbg !5864
  %8 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !5865
  store %struct.atomic_t* %8, %struct.atomic_t** %v.addr.i1.i, align 8
  %9 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !5866
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %9, i32 0, i32 0, !dbg !5866
  %10 = load volatile i32, i32* %counter.i.i, align 4, !dbg !5866
  %tobool = icmp ne i32 %10, 0, !dbg !5859
  br i1 %tobool, label %land.end, label %land.lhs.true, !dbg !5859

land.lhs.true:                                    ; preds = %entry
  %call1 = call i32 @is_console_locked() #10, !dbg !5859
  %tobool2 = icmp ne i32 %call1, 0, !dbg !5859
  br i1 %tobool2, label %land.end, label %land.rhs, !dbg !5859

land.rhs:                                         ; preds = %land.lhs.true
  %11 = load i32, i32* @oops_in_progress, align 4, !dbg !5859
  %tobool3 = icmp ne i32 %11, 0, !dbg !5859
  %lnot = xor i1 %tobool3, true, !dbg !5859
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %entry
  %12 = phi i1 [ false, %land.lhs.true ], [ false, %entry ], [ %lnot, %land.rhs ], !dbg !5867
  %lnot4 = xor i1 %12, true, !dbg !5859
  %lnot5 = xor i1 %lnot4, true, !dbg !5859
  %lnot.ext = zext i1 %lnot5 to i32, !dbg !5859
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !5859
  %13 = load i32, i32* %__ret_warn_on, align 4, !dbg !5868
  %tobool6 = icmp ne i32 %13, 0, !dbg !5868
  %lnot7 = xor i1 %tobool6, true, !dbg !5868
  %lnot9 = xor i1 %lnot7, true, !dbg !5868
  %lnot.ext10 = zext i1 %lnot9 to i32, !dbg !5868
  %conv = sext i32 %lnot.ext10 to i64, !dbg !5868
  %tobool11 = icmp ne i64 %conv, 0, !dbg !5868
  br i1 %tobool11, label %if.then, label %if.end, !dbg !5859

if.then:                                          ; preds = %land.end
  br label %do.body, !dbg !5868

do.body:                                          ; preds = %if.then
  br label %do.body12, !dbg !5870

do.body12:                                        ; preds = %do.body
  br label %do.end, !dbg !5872

do.end:                                           ; preds = %do.body12
  br label %do.body13, !dbg !5870

do.body13:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str, i64 0, i64 0), i32 2801, i32 2305, i64 12) #12, !dbg !5874, !srcloc !5876
  br label %do.end14, !dbg !5874

do.end14:                                         ; preds = %do.body13
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 249) #12, !dbg !5877, !srcloc !5879
  br label %do.body15, !dbg !5870

do.body15:                                        ; preds = %do.end14
  br label %do.end16, !dbg !5880

do.end16:                                         ; preds = %do.body15
  br label %do.end17, !dbg !5870

do.end17:                                         ; preds = %do.end16
  br label %if.end, !dbg !5870

if.end:                                           ; preds = %do.end17, %land.end
  %14 = load i32, i32* %__ret_warn_on, align 4, !dbg !5859
  %tobool18 = icmp ne i32 %14, 0, !dbg !5859
  %lnot19 = xor i1 %tobool18, true, !dbg !5859
  %lnot21 = xor i1 %lnot19, true, !dbg !5859
  %lnot.ext22 = zext i1 %lnot21 to i32, !dbg !5859
  %conv23 = sext i32 %lnot.ext22 to i64, !dbg !5859
  store i64 %conv23, i64* %tmp, align 8, !dbg !5868
  %15 = load i64, i64* %tmp, align 8, !dbg !5859
  %16 = load i32, i32* @fbcon_has_console_bind, align 4, !dbg !5882
  %tobool24 = icmp ne i32 %16, 0, !dbg !5882
  br i1 %tobool24, label %if.end26, label %if.then25, !dbg !5884

if.then25:                                        ; preds = %if.end
  br label %if.end92, !dbg !5885

if.end26:                                         ; preds = %if.end
  %17 = load i32, i32* @first_fb_vc, align 4, !dbg !5886
  store i32 %17, i32* %i, align 4, !dbg !5888
  br label %for.cond, !dbg !5889

for.cond:                                         ; preds = %for.inc, %if.end26
  %18 = load i32, i32* %i, align 4, !dbg !5890
  %19 = load i32, i32* @last_fb_vc, align 4, !dbg !5892
  %cmp = icmp sle i32 %18, %19, !dbg !5893
  br i1 %cmp, label %for.body, label %for.end, !dbg !5894

for.body:                                         ; preds = %for.cond
  %20 = load i32, i32* %i, align 4, !dbg !5895
  %idxprom = sext i32 %20 to i64, !dbg !5898
  %arrayidx = getelementptr [63 x i8], [63 x i8]* @con2fb_map, i64 0, i64 %idxprom, !dbg !5898
  %21 = load i8, i8* %arrayidx, align 1, !dbg !5898
  %conv28 = sext i8 %21 to i32, !dbg !5898
  %22 = load i32, i32* %idx, align 4, !dbg !5899
  %cmp29 = icmp ne i32 %conv28, %22, !dbg !5900
  br i1 %cmp29, label %land.lhs.true31, label %if.end41, !dbg !5901

land.lhs.true31:                                  ; preds = %for.body
  %23 = load i32, i32* %i, align 4, !dbg !5902
  %idxprom32 = sext i32 %23 to i64, !dbg !5903
  %arrayidx33 = getelementptr [63 x i8], [63 x i8]* @con2fb_map, i64 0, i64 %idxprom32, !dbg !5903
  %24 = load i8, i8* %arrayidx33, align 1, !dbg !5903
  %conv34 = sext i8 %24 to i32, !dbg !5903
  %cmp35 = icmp ne i32 %conv34, -1, !dbg !5904
  br i1 %cmp35, label %if.then37, label %if.end41, !dbg !5905

if.then37:                                        ; preds = %land.lhs.true31
  %25 = load i32, i32* %i, align 4, !dbg !5906
  %idxprom38 = sext i32 %25 to i64, !dbg !5908
  %arrayidx39 = getelementptr [63 x i8], [63 x i8]* @con2fb_map, i64 0, i64 %idxprom38, !dbg !5908
  %26 = load i8, i8* %arrayidx39, align 1, !dbg !5908
  %conv40 = sext i8 %26 to i32, !dbg !5908
  store i32 %conv40, i32* %new_idx, align 4, !dbg !5909
  br label %for.end, !dbg !5910

if.end41:                                         ; preds = %land.lhs.true31, %for.body
  br label %for.inc, !dbg !5911

for.inc:                                          ; preds = %if.end41
  %27 = load i32, i32* %i, align 4, !dbg !5912
  %inc = add i32 %27, 1, !dbg !5912
  store i32 %inc, i32* %i, align 4, !dbg !5912
  br label %for.cond, !dbg !5913, !llvm.loop !5914

for.end:                                          ; preds = %if.then37, %for.cond
  %28 = load i32, i32* %new_idx, align 4, !dbg !5916
  %cmp42 = icmp ne i32 %28, -1, !dbg !5918
  br i1 %cmp42, label %if.then44, label %if.else, !dbg !5919

if.then44:                                        ; preds = %for.end
  %29 = load i32, i32* @first_fb_vc, align 4, !dbg !5920
  store i32 %29, i32* %i, align 4, !dbg !5923
  br label %for.cond45, !dbg !5924

for.cond45:                                       ; preds = %for.inc57, %if.then44
  %30 = load i32, i32* %i, align 4, !dbg !5925
  %31 = load i32, i32* @last_fb_vc, align 4, !dbg !5927
  %cmp46 = icmp sle i32 %30, %31, !dbg !5928
  br i1 %cmp46, label %for.body48, label %for.end59, !dbg !5929

for.body48:                                       ; preds = %for.cond45
  %32 = load i32, i32* %i, align 4, !dbg !5930
  %idxprom49 = sext i32 %32 to i64, !dbg !5933
  %arrayidx50 = getelementptr [63 x i8], [63 x i8]* @con2fb_map, i64 0, i64 %idxprom49, !dbg !5933
  %33 = load i8, i8* %arrayidx50, align 1, !dbg !5933
  %conv51 = sext i8 %33 to i32, !dbg !5933
  %34 = load i32, i32* %idx, align 4, !dbg !5934
  %cmp52 = icmp eq i32 %conv51, %34, !dbg !5935
  br i1 %cmp52, label %if.then54, label %if.end56, !dbg !5936

if.then54:                                        ; preds = %for.body48
  %35 = load i32, i32* %i, align 4, !dbg !5937
  %36 = load i32, i32* %new_idx, align 4, !dbg !5938
  %call55 = call i32 @set_con2fb_map(i32 %35, i32 %36, i32 0) #10, !dbg !5939
  br label %if.end56, !dbg !5939

if.end56:                                         ; preds = %if.then54, %for.body48
  br label %for.inc57, !dbg !5940

for.inc57:                                        ; preds = %if.end56
  %37 = load i32, i32* %i, align 4, !dbg !5941
  %inc58 = add i32 %37, 1, !dbg !5941
  store i32 %inc58, i32* %i, align 4, !dbg !5941
  br label %for.cond45, !dbg !5942, !llvm.loop !5943

for.end59:                                        ; preds = %for.cond45
  br label %if.end92, !dbg !5945

if.else:                                          ; preds = %for.end
  call void @llvm.dbg.declare(metadata %struct.fb_info** %info60, metadata !5946, metadata !DIExpression()), !dbg !5948
  %38 = load i32, i32* %idx, align 4, !dbg !5949
  %idxprom61 = sext i32 %38 to i64, !dbg !5950
  %arrayidx62 = getelementptr [32 x %struct.fb_info*], [32 x %struct.fb_info*]* @registered_fb, i64 0, i64 %idxprom61, !dbg !5950
  %39 = load %struct.fb_info*, %struct.fb_info** %arrayidx62, align 8, !dbg !5950
  store %struct.fb_info* %39, %struct.fb_info** %info60, align 8, !dbg !5948
  %40 = load i32, i32* @first_fb_vc, align 4, !dbg !5951
  store i32 %40, i32* %i, align 4, !dbg !5953
  br label %for.cond63, !dbg !5954

for.cond63:                                       ; preds = %for.inc89, %if.else
  %41 = load i32, i32* %i, align 4, !dbg !5955
  %42 = load i32, i32* @last_fb_vc, align 4, !dbg !5957
  %cmp64 = icmp sle i32 %41, %42, !dbg !5958
  br i1 %cmp64, label %for.body66, label %for.end91, !dbg !5959

for.body66:                                       ; preds = %for.cond63
  %43 = load i32, i32* %i, align 4, !dbg !5960
  %idxprom67 = sext i32 %43 to i64, !dbg !5963
  %arrayidx68 = getelementptr [63 x i8], [63 x i8]* @con2fb_map, i64 0, i64 %idxprom67, !dbg !5963
  %44 = load i8, i8* %arrayidx68, align 1, !dbg !5963
  %conv69 = sext i8 %44 to i32, !dbg !5963
  %45 = load i32, i32* %idx, align 4, !dbg !5964
  %cmp70 = icmp eq i32 %conv69, %45, !dbg !5965
  br i1 %cmp70, label %if.then72, label %if.end88, !dbg !5966

if.then72:                                        ; preds = %for.body66
  %46 = load i32, i32* %i, align 4, !dbg !5967
  %idxprom73 = sext i32 %46 to i64, !dbg !5969
  %arrayidx74 = getelementptr [63 x i8], [63 x i8]* @con2fb_map, i64 0, i64 %idxprom73, !dbg !5969
  store i8 -1, i8* %arrayidx74, align 1, !dbg !5970
  %47 = load i32, i32* %idx, align 4, !dbg !5971
  %call75 = call i32 @search_fb_in_map(i32 %47) #10, !dbg !5973
  %tobool76 = icmp ne i32 %call75, 0, !dbg !5973
  br i1 %tobool76, label %if.end87, label %if.then77, !dbg !5974

if.then77:                                        ; preds = %if.then72
  %48 = load i32, i32* %i, align 4, !dbg !5975
  %idxprom78 = sext i32 %48 to i64, !dbg !5977
  %arrayidx79 = getelementptr [63 x %struct.vc], [63 x %struct.vc]* @vc_cons, i64 0, i64 %idxprom78, !dbg !5977
  %d = getelementptr inbounds %struct.vc, %struct.vc* %arrayidx79, i32 0, i32 0, !dbg !5978
  %49 = load %struct.vc_data*, %struct.vc_data** %d, align 8, !dbg !5978
  %50 = load %struct.fb_info*, %struct.fb_info** %info60, align 8, !dbg !5979
  %51 = load i32, i32* %i, align 4, !dbg !5980
  %52 = load i32, i32* %idx, align 4, !dbg !5981
  %call80 = call i32 @con2fb_release_oldinfo(%struct.vc_data* %49, %struct.fb_info* %50, %struct.fb_info* null, i32 %51, i32 %52, i32 0) #10, !dbg !5982
  store i32 %call80, i32* %ret, align 4, !dbg !5983
  %53 = load i32, i32* %ret, align 4, !dbg !5984
  %tobool81 = icmp ne i32 %53, 0, !dbg !5984
  br i1 %tobool81, label %if.then82, label %if.end86, !dbg !5986

if.then82:                                        ; preds = %if.then77
  %54 = load i32, i32* %idx, align 4, !dbg !5987
  %conv83 = trunc i32 %54 to i8, !dbg !5987
  %55 = load i32, i32* %i, align 4, !dbg !5989
  %idxprom84 = sext i32 %55 to i64, !dbg !5990
  %arrayidx85 = getelementptr [63 x i8], [63 x i8]* @con2fb_map, i64 0, i64 %idxprom84, !dbg !5990
  store i8 %conv83, i8* %arrayidx85, align 1, !dbg !5991
  br label %if.end92, !dbg !5992

if.end86:                                         ; preds = %if.then77
  br label %if.end87, !dbg !5993

if.end87:                                         ; preds = %if.end86, %if.then72
  br label %if.end88, !dbg !5994

if.end88:                                         ; preds = %if.end87, %for.body66
  br label %for.inc89, !dbg !5995

for.inc89:                                        ; preds = %if.end88
  %56 = load i32, i32* %i, align 4, !dbg !5996
  %inc90 = add i32 %56, 1, !dbg !5996
  store i32 %inc90, i32* %i, align 4, !dbg !5996
  br label %for.cond63, !dbg !5997, !llvm.loop !5998

for.end91:                                        ; preds = %for.cond63
  call void @fbcon_unbind() #10, !dbg !6000
  br label %if.end92

if.end92:                                         ; preds = %if.then25, %if.then82, %for.end91, %for.end59
  ret void, !dbg !6001
}

; Function Attrs: noredzone
declare dso_local i32 @is_console_locked() #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @set_con2fb_map(i32 %unit, i32 %newidx, i32 %user) #1 !dbg !6002 {
entry:
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !5819, metadata !DIExpression()), !dbg !6005
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !5832, metadata !DIExpression()), !dbg !6009
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !5842, metadata !DIExpression()), !dbg !6011
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !5844, metadata !DIExpression()), !dbg !6012
  %retval = alloca i32, align 4
  %unit.addr = alloca i32, align 4
  %newidx.addr = alloca i32, align 4
  %user.addr = alloca i32, align 4
  %vc = alloca %struct.vc_data*, align 8
  %oldidx = alloca i32, align 4
  %info = alloca %struct.fb_info*, align 8
  %oldinfo = alloca %struct.fb_info*, align 8
  %found = alloca i32, align 4
  %err = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  %show_logo = alloca i32, align 4
  store i32 %unit, i32* %unit.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %unit.addr, metadata !6013, metadata !DIExpression()), !dbg !6014
  store i32 %newidx, i32* %newidx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %newidx.addr, metadata !6015, metadata !DIExpression()), !dbg !6016
  store i32 %user, i32* %user.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %user.addr, metadata !6017, metadata !DIExpression()), !dbg !6018
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc, metadata !6019, metadata !DIExpression()), !dbg !6020
  %0 = load i32, i32* %unit.addr, align 4, !dbg !6021
  %idxprom = sext i32 %0 to i64, !dbg !6022
  %arrayidx = getelementptr [63 x %struct.vc], [63 x %struct.vc]* @vc_cons, i64 0, i64 %idxprom, !dbg !6022
  %d = getelementptr inbounds %struct.vc, %struct.vc* %arrayidx, i32 0, i32 0, !dbg !6023
  %1 = load %struct.vc_data*, %struct.vc_data** %d, align 8, !dbg !6023
  store %struct.vc_data* %1, %struct.vc_data** %vc, align 8, !dbg !6020
  call void @llvm.dbg.declare(metadata i32* %oldidx, metadata !6024, metadata !DIExpression()), !dbg !6025
  %2 = load i32, i32* %unit.addr, align 4, !dbg !6026
  %idxprom1 = sext i32 %2 to i64, !dbg !6027
  %arrayidx2 = getelementptr [63 x i8], [63 x i8]* @con2fb_map, i64 0, i64 %idxprom1, !dbg !6027
  %3 = load i8, i8* %arrayidx2, align 1, !dbg !6027
  %conv = sext i8 %3 to i32, !dbg !6027
  store i32 %conv, i32* %oldidx, align 4, !dbg !6025
  call void @llvm.dbg.declare(metadata %struct.fb_info** %info, metadata !6028, metadata !DIExpression()), !dbg !6029
  %4 = load i32, i32* %newidx.addr, align 4, !dbg !6030
  %idxprom3 = sext i32 %4 to i64, !dbg !6031
  %arrayidx4 = getelementptr [32 x %struct.fb_info*], [32 x %struct.fb_info*]* @registered_fb, i64 0, i64 %idxprom3, !dbg !6031
  %5 = load %struct.fb_info*, %struct.fb_info** %arrayidx4, align 8, !dbg !6031
  store %struct.fb_info* %5, %struct.fb_info** %info, align 8, !dbg !6029
  call void @llvm.dbg.declare(metadata %struct.fb_info** %oldinfo, metadata !6032, metadata !DIExpression()), !dbg !6033
  store %struct.fb_info* null, %struct.fb_info** %oldinfo, align 8, !dbg !6033
  call void @llvm.dbg.declare(metadata i32* %found, metadata !6034, metadata !DIExpression()), !dbg !6035
  call void @llvm.dbg.declare(metadata i32* %err, metadata !6036, metadata !DIExpression()), !dbg !6037
  store i32 0, i32* %err, align 4, !dbg !6037
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !6038, metadata !DIExpression()), !dbg !6039
  store %struct.atomic_t* @ignore_console_lock_warning, %struct.atomic_t** %v.addr.i, align 8
  %6 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !6040
  %7 = bitcast %struct.atomic_t* %6 to i8*, !dbg !6040
  store i8* %7, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %8 = load i8*, i8** %v.addr.i.i, align 8, !dbg !6041
  %9 = load i64, i64* %size.addr.i.i, align 8, !dbg !6042
  %conv.i.i = trunc i64 %9 to i32, !dbg !6042
  %call.i.i = call zeroext i1 @kasan_check_read(i8* %8, i32 %conv.i.i) #13, !dbg !6043
  %10 = load i8*, i8** %v.addr.i.i, align 8, !dbg !6044
  %11 = load i64, i64* %size.addr.i.i, align 8, !dbg !6044
  call void @kcsan_check_access(i8* %10, i64 %11, i32 4) #13, !dbg !6044
  %12 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !6045
  store %struct.atomic_t* %12, %struct.atomic_t** %v.addr.i1.i, align 8
  %13 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !6046
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %13, i32 0, i32 0, !dbg !6046
  %14 = load volatile i32, i32* %counter.i.i, align 4, !dbg !6046
  %tobool = icmp ne i32 %14, 0, !dbg !6039
  br i1 %tobool, label %land.end, label %land.lhs.true, !dbg !6039

land.lhs.true:                                    ; preds = %entry
  %call5 = call i32 @is_console_locked() #10, !dbg !6039
  %tobool6 = icmp ne i32 %call5, 0, !dbg !6039
  br i1 %tobool6, label %land.end, label %land.rhs, !dbg !6039

land.rhs:                                         ; preds = %land.lhs.true
  %15 = load i32, i32* @oops_in_progress, align 4, !dbg !6039
  %tobool7 = icmp ne i32 %15, 0, !dbg !6039
  %lnot = xor i1 %tobool7, true, !dbg !6039
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %entry
  %16 = phi i1 [ false, %land.lhs.true ], [ false, %entry ], [ %lnot, %land.rhs ], !dbg !6047
  %lnot8 = xor i1 %16, true, !dbg !6039
  %lnot9 = xor i1 %lnot8, true, !dbg !6039
  %lnot.ext = zext i1 %lnot9 to i32, !dbg !6039
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !6039
  %17 = load i32, i32* %__ret_warn_on, align 4, !dbg !6048
  %tobool10 = icmp ne i32 %17, 0, !dbg !6048
  %lnot11 = xor i1 %tobool10, true, !dbg !6048
  %lnot13 = xor i1 %lnot11, true, !dbg !6048
  %lnot.ext14 = zext i1 %lnot13 to i32, !dbg !6048
  %conv15 = sext i32 %lnot.ext14 to i64, !dbg !6048
  %tobool16 = icmp ne i64 %conv15, 0, !dbg !6048
  br i1 %tobool16, label %if.then, label %if.end, !dbg !6039

if.then:                                          ; preds = %land.end
  br label %do.body, !dbg !6048

do.body:                                          ; preds = %if.then
  br label %do.body17, !dbg !6050

do.body17:                                        ; preds = %do.body
  br label %do.end, !dbg !6052

do.end:                                           ; preds = %do.body17
  br label %do.body18, !dbg !6050

do.body18:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str, i64 0, i64 0), i32 850, i32 2305, i64 12) #12, !dbg !6054, !srcloc !6056
  br label %do.end19, !dbg !6054

do.end19:                                         ; preds = %do.body18
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 247) #12, !dbg !6057, !srcloc !6059
  br label %do.body20, !dbg !6050

do.body20:                                        ; preds = %do.end19
  br label %do.end21, !dbg !6060

do.end21:                                         ; preds = %do.body20
  br label %do.end22, !dbg !6050

do.end22:                                         ; preds = %do.end21
  br label %if.end, !dbg !6050

if.end:                                           ; preds = %do.end22, %land.end
  %18 = load i32, i32* %__ret_warn_on, align 4, !dbg !6039
  %tobool23 = icmp ne i32 %18, 0, !dbg !6039
  %lnot24 = xor i1 %tobool23, true, !dbg !6039
  %lnot26 = xor i1 %lnot24, true, !dbg !6039
  %lnot.ext27 = zext i1 %lnot26 to i32, !dbg !6039
  %conv28 = sext i32 %lnot.ext27 to i64, !dbg !6039
  store i64 %conv28, i64* %tmp, align 8, !dbg !6048
  %19 = load i64, i64* %tmp, align 8, !dbg !6039
  %20 = load i32, i32* %oldidx, align 4, !dbg !6062
  %21 = load i32, i32* %newidx.addr, align 4, !dbg !6064
  %cmp = icmp eq i32 %20, %21, !dbg !6065
  br i1 %cmp, label %if.then30, label %if.end31, !dbg !6066

if.then30:                                        ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !6067
  br label %return, !dbg !6067

if.end31:                                         ; preds = %if.end
  %22 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !6068
  %tobool32 = icmp ne %struct.fb_info* %22, null, !dbg !6068
  br i1 %tobool32, label %if.end34, label %if.then33, !dbg !6070

if.then33:                                        ; preds = %if.end31
  store i32 -22, i32* %retval, align 4, !dbg !6071
  br label %return, !dbg !6071

if.end34:                                         ; preds = %if.end31
  %call35 = call i32 @search_for_mapped_con() #10, !dbg !6072
  %tobool36 = icmp ne i32 %call35, 0, !dbg !6072
  br i1 %tobool36, label %lor.lhs.false, label %if.then39, !dbg !6074

lor.lhs.false:                                    ; preds = %if.end34
  %call37 = call i32 @con_is_bound(%struct.consw* @fb_con) #10, !dbg !6075
  %tobool38 = icmp ne i32 %call37, 0, !dbg !6075
  br i1 %tobool38, label %if.end41, label %if.then39, !dbg !6076

if.then39:                                        ; preds = %lor.lhs.false, %if.end34
  %23 = load i32, i32* %newidx.addr, align 4, !dbg !6077
  store i32 %23, i32* @info_idx, align 4, !dbg !6079
  %call40 = call i32 @do_fbcon_takeover(i32 0) #10, !dbg !6080
  store i32 %call40, i32* %retval, align 4, !dbg !6081
  br label %return, !dbg !6081

if.end41:                                         ; preds = %lor.lhs.false
  %24 = load i32, i32* %oldidx, align 4, !dbg !6082
  %cmp42 = icmp ne i32 %24, -1, !dbg !6084
  br i1 %cmp42, label %if.then44, label %if.end47, !dbg !6085

if.then44:                                        ; preds = %if.end41
  %25 = load i32, i32* %oldidx, align 4, !dbg !6086
  %idxprom45 = sext i32 %25 to i64, !dbg !6087
  %arrayidx46 = getelementptr [32 x %struct.fb_info*], [32 x %struct.fb_info*]* @registered_fb, i64 0, i64 %idxprom45, !dbg !6087
  %26 = load %struct.fb_info*, %struct.fb_info** %arrayidx46, align 8, !dbg !6087
  store %struct.fb_info* %26, %struct.fb_info** %oldinfo, align 8, !dbg !6088
  br label %if.end47, !dbg !6089

if.end47:                                         ; preds = %if.then44, %if.end41
  %27 = load i32, i32* %newidx.addr, align 4, !dbg !6090
  %call48 = call i32 @search_fb_in_map(i32 %27) #10, !dbg !6091
  store i32 %call48, i32* %found, align 4, !dbg !6092
  %28 = load i32, i32* %newidx.addr, align 4, !dbg !6093
  %conv49 = trunc i32 %28 to i8, !dbg !6093
  %29 = load i32, i32* %unit.addr, align 4, !dbg !6094
  %idxprom50 = sext i32 %29 to i64, !dbg !6095
  %arrayidx51 = getelementptr [63 x i8], [63 x i8]* @con2fb_map, i64 0, i64 %idxprom50, !dbg !6095
  store i8 %conv49, i8* %arrayidx51, align 1, !dbg !6096
  %30 = load i32, i32* %err, align 4, !dbg !6097
  %tobool52 = icmp ne i32 %30, 0, !dbg !6097
  br i1 %tobool52, label %if.end57, label %land.lhs.true53, !dbg !6099

land.lhs.true53:                                  ; preds = %if.end47
  %31 = load i32, i32* %found, align 4, !dbg !6100
  %tobool54 = icmp ne i32 %31, 0, !dbg !6100
  br i1 %tobool54, label %if.end57, label %if.then55, !dbg !6101

if.then55:                                        ; preds = %land.lhs.true53
  %32 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !6102
  %33 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !6103
  %34 = load i32, i32* %unit.addr, align 4, !dbg !6104
  %35 = load i32, i32* %oldidx, align 4, !dbg !6105
  %call56 = call i32 @con2fb_acquire_newinfo(%struct.vc_data* %32, %struct.fb_info* %33, i32 %34, i32 %35) #10, !dbg !6106
  store i32 %call56, i32* %err, align 4, !dbg !6107
  br label %if.end57, !dbg !6108

if.end57:                                         ; preds = %if.then55, %land.lhs.true53, %if.end47
  %36 = load i32, i32* %err, align 4, !dbg !6109
  %tobool58 = icmp ne i32 %36, 0, !dbg !6109
  br i1 %tobool58, label %if.end66, label %land.lhs.true59, !dbg !6111

land.lhs.true59:                                  ; preds = %if.end57
  %37 = load %struct.fb_info*, %struct.fb_info** %oldinfo, align 8, !dbg !6112
  %tobool60 = icmp ne %struct.fb_info* %37, null, !dbg !6112
  br i1 %tobool60, label %land.lhs.true61, label %if.end66, !dbg !6113

land.lhs.true61:                                  ; preds = %land.lhs.true59
  %38 = load i32, i32* %oldidx, align 4, !dbg !6114
  %call62 = call i32 @search_fb_in_map(i32 %38) #10, !dbg !6115
  %tobool63 = icmp ne i32 %call62, 0, !dbg !6115
  br i1 %tobool63, label %if.end66, label %if.then64, !dbg !6116

if.then64:                                        ; preds = %land.lhs.true61
  %39 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !6117
  %40 = load %struct.fb_info*, %struct.fb_info** %oldinfo, align 8, !dbg !6118
  %41 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !6119
  %42 = load i32, i32* %unit.addr, align 4, !dbg !6120
  %43 = load i32, i32* %oldidx, align 4, !dbg !6121
  %44 = load i32, i32* %found, align 4, !dbg !6122
  %call65 = call i32 @con2fb_release_oldinfo(%struct.vc_data* %39, %struct.fb_info* %40, %struct.fb_info* %41, i32 %42, i32 %43, i32 %44) #10, !dbg !6123
  store i32 %call65, i32* %err, align 4, !dbg !6124
  br label %if.end66, !dbg !6125

if.end66:                                         ; preds = %if.then64, %land.lhs.true61, %land.lhs.true59, %if.end57
  %45 = load i32, i32* %err, align 4, !dbg !6126
  %tobool67 = icmp ne i32 %45, 0, !dbg !6126
  br i1 %tobool67, label %if.end83, label %if.then68, !dbg !6128

if.then68:                                        ; preds = %if.end66
  call void @llvm.dbg.declare(metadata i32* %show_logo, metadata !6129, metadata !DIExpression()), !dbg !6131
  %46 = load i32, i32* @fg_console, align 4, !dbg !6132
  %cmp69 = icmp eq i32 %46, 0, !dbg !6133
  br i1 %cmp69, label %land.lhs.true71, label %land.end76, !dbg !6134

land.lhs.true71:                                  ; preds = %if.then68
  %47 = load i32, i32* %user.addr, align 4, !dbg !6135
  %tobool72 = icmp ne i32 %47, 0, !dbg !6135
  br i1 %tobool72, label %land.end76, label %land.rhs73, !dbg !6136

land.rhs73:                                       ; preds = %land.lhs.true71
  %48 = load i32, i32* @logo_shown, align 4, !dbg !6137
  %cmp74 = icmp ne i32 %48, -3, !dbg !6138
  br label %land.end76

land.end76:                                       ; preds = %land.rhs73, %land.lhs.true71, %if.then68
  %49 = phi i1 [ false, %land.lhs.true71 ], [ false, %if.then68 ], [ %cmp74, %land.rhs73 ], !dbg !6139
  %land.ext = zext i1 %49 to i32, !dbg !6136
  store i32 %land.ext, i32* %show_logo, align 4, !dbg !6131
  %50 = load i32, i32* %found, align 4, !dbg !6140
  %tobool77 = icmp ne i32 %50, 0, !dbg !6140
  br i1 %tobool77, label %if.end79, label %if.then78, !dbg !6142

if.then78:                                        ; preds = %land.end76
  %51 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !6143
  call void @fbcon_add_cursor_timer(%struct.fb_info* %51) #10, !dbg !6144
  br label %if.end79, !dbg !6144

if.end79:                                         ; preds = %if.then78, %land.end76
  %52 = load i32, i32* %newidx.addr, align 4, !dbg !6145
  %conv80 = trunc i32 %52 to i8, !dbg !6145
  %53 = load i32, i32* %unit.addr, align 4, !dbg !6146
  %idxprom81 = sext i32 %53 to i64, !dbg !6147
  %arrayidx82 = getelementptr [63 x i8], [63 x i8]* @con2fb_map_boot, i64 0, i64 %idxprom81, !dbg !6147
  store i8 %conv80, i8* %arrayidx82, align 1, !dbg !6148
  %54 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !6149
  %55 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !6150
  %56 = load i32, i32* %unit.addr, align 4, !dbg !6151
  %57 = load i32, i32* %show_logo, align 4, !dbg !6152
  call void @con2fb_init_display(%struct.vc_data* %54, %struct.fb_info* %55, i32 %56, i32 %57) #10, !dbg !6153
  br label %if.end83, !dbg !6154

if.end83:                                         ; preds = %if.end79, %if.end66
  %58 = load i32, i32* @info_idx, align 4, !dbg !6155
  %call84 = call i32 @search_fb_in_map(i32 %58) #10, !dbg !6157
  %tobool85 = icmp ne i32 %call84, 0, !dbg !6157
  br i1 %tobool85, label %if.end87, label %if.then86, !dbg !6158

if.then86:                                        ; preds = %if.end83
  %59 = load i32, i32* %newidx.addr, align 4, !dbg !6159
  store i32 %59, i32* @info_idx, align 4, !dbg !6160
  br label %if.end87, !dbg !6161

if.end87:                                         ; preds = %if.then86, %if.end83
  %60 = load i32, i32* %err, align 4, !dbg !6162
  store i32 %60, i32* %retval, align 4, !dbg !6163
  br label %return, !dbg !6163

return:                                           ; preds = %if.end87, %if.then39, %if.then33, %if.then30
  %61 = load i32, i32* %retval, align 4, !dbg !6164
  ret i32 %61, !dbg !6164
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @search_fb_in_map(i32 %idx) #1 !dbg !6165 {
entry:
  %idx.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %retval1 = alloca i32, align 4
  store i32 %idx, i32* %idx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %idx.addr, metadata !6166, metadata !DIExpression()), !dbg !6167
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6168, metadata !DIExpression()), !dbg !6169
  call void @llvm.dbg.declare(metadata i32* %retval1, metadata !6170, metadata !DIExpression()), !dbg !6171
  store i32 0, i32* %retval1, align 4, !dbg !6171
  %0 = load i32, i32* @first_fb_vc, align 4, !dbg !6172
  store i32 %0, i32* %i, align 4, !dbg !6174
  br label %for.cond, !dbg !6175

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %i, align 4, !dbg !6176
  %2 = load i32, i32* @last_fb_vc, align 4, !dbg !6178
  %cmp = icmp sle i32 %1, %2, !dbg !6179
  br i1 %cmp, label %for.body, label %for.end, !dbg !6180

for.body:                                         ; preds = %for.cond
  %3 = load i32, i32* %i, align 4, !dbg !6181
  %idxprom = sext i32 %3 to i64, !dbg !6184
  %arrayidx = getelementptr [63 x i8], [63 x i8]* @con2fb_map, i64 0, i64 %idxprom, !dbg !6184
  %4 = load i8, i8* %arrayidx, align 1, !dbg !6184
  %conv = sext i8 %4 to i32, !dbg !6184
  %5 = load i32, i32* %idx.addr, align 4, !dbg !6185
  %cmp2 = icmp eq i32 %conv, %5, !dbg !6186
  br i1 %cmp2, label %if.then, label %if.end, !dbg !6187

if.then:                                          ; preds = %for.body
  store i32 1, i32* %retval1, align 4, !dbg !6188
  br label %if.end, !dbg !6189

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !6190

for.inc:                                          ; preds = %if.end
  %6 = load i32, i32* %i, align 4, !dbg !6191
  %inc = add i32 %6, 1, !dbg !6191
  store i32 %inc, i32* %i, align 4, !dbg !6191
  br label %for.cond, !dbg !6192, !llvm.loop !6193

for.end:                                          ; preds = %for.cond
  %7 = load i32, i32* %retval1, align 4, !dbg !6195
  ret i32 %7, !dbg !6196
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @con2fb_release_oldinfo(%struct.vc_data* %vc, %struct.fb_info* %oldinfo, %struct.fb_info* %newinfo, i32 %unit, i32 %oldidx, i32 %found) #1 !dbg !6197 {
entry:
  %vc.addr = alloca %struct.vc_data*, align 8
  %oldinfo.addr = alloca %struct.fb_info*, align 8
  %newinfo.addr = alloca %struct.fb_info*, align 8
  %unit.addr = alloca i32, align 4
  %oldidx.addr = alloca i32, align 4
  %found.addr = alloca i32, align 4
  %ops = alloca %struct.fbcon_ops*, align 8
  %err = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !6200, metadata !DIExpression()), !dbg !6201
  store %struct.fb_info* %oldinfo, %struct.fb_info** %oldinfo.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fb_info** %oldinfo.addr, metadata !6202, metadata !DIExpression()), !dbg !6203
  store %struct.fb_info* %newinfo, %struct.fb_info** %newinfo.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fb_info** %newinfo.addr, metadata !6204, metadata !DIExpression()), !dbg !6205
  store i32 %unit, i32* %unit.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %unit.addr, metadata !6206, metadata !DIExpression()), !dbg !6207
  store i32 %oldidx, i32* %oldidx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %oldidx.addr, metadata !6208, metadata !DIExpression()), !dbg !6209
  store i32 %found, i32* %found.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %found.addr, metadata !6210, metadata !DIExpression()), !dbg !6211
  call void @llvm.dbg.declare(metadata %struct.fbcon_ops** %ops, metadata !6212, metadata !DIExpression()), !dbg !6213
  %0 = load %struct.fb_info*, %struct.fb_info** %oldinfo.addr, align 8, !dbg !6214
  %fbcon_par = getelementptr inbounds %struct.fb_info, %struct.fb_info* %0, i32 0, i32 29, !dbg !6215
  %1 = load i8*, i8** %fbcon_par, align 8, !dbg !6215
  %2 = bitcast i8* %1 to %struct.fbcon_ops*, !dbg !6214
  store %struct.fbcon_ops* %2, %struct.fbcon_ops** %ops, align 8, !dbg !6213
  call void @llvm.dbg.declare(metadata i32* %err, metadata !6216, metadata !DIExpression()), !dbg !6217
  store i32 0, i32* %err, align 4, !dbg !6217
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6218, metadata !DIExpression()), !dbg !6219
  %3 = load %struct.fb_info*, %struct.fb_info** %oldinfo.addr, align 8, !dbg !6220
  %fbops = getelementptr inbounds %struct.fb_info, %struct.fb_info* %3, i32 0, i32 20, !dbg !6222
  %4 = load %struct.fb_ops*, %struct.fb_ops** %fbops, align 8, !dbg !6222
  %fb_release = getelementptr inbounds %struct.fb_ops, %struct.fb_ops* %4, i32 0, i32 2, !dbg !6223
  %5 = load i32 (%struct.fb_info*, i32)*, i32 (%struct.fb_info*, i32)** %fb_release, align 8, !dbg !6223
  %tobool = icmp ne i32 (%struct.fb_info*, i32)* %5, null, !dbg !6220
  br i1 %tobool, label %land.lhs.true, label %if.end17, !dbg !6224

land.lhs.true:                                    ; preds = %entry
  %6 = load %struct.fb_info*, %struct.fb_info** %oldinfo.addr, align 8, !dbg !6225
  %fbops1 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %6, i32 0, i32 20, !dbg !6226
  %7 = load %struct.fb_ops*, %struct.fb_ops** %fbops1, align 8, !dbg !6226
  %fb_release2 = getelementptr inbounds %struct.fb_ops, %struct.fb_ops* %7, i32 0, i32 2, !dbg !6227
  %8 = load i32 (%struct.fb_info*, i32)*, i32 (%struct.fb_info*, i32)** %fb_release2, align 8, !dbg !6227
  %9 = load %struct.fb_info*, %struct.fb_info** %oldinfo.addr, align 8, !dbg !6228
  %call = call i32 %8(%struct.fb_info* %9, i32 0) #10, !dbg !6225
  %tobool3 = icmp ne i32 %call, 0, !dbg !6225
  br i1 %tobool3, label %if.then, label %if.end17, !dbg !6229

if.then:                                          ; preds = %land.lhs.true
  %10 = load i32, i32* %oldidx.addr, align 4, !dbg !6230
  %conv = trunc i32 %10 to i8, !dbg !6230
  %11 = load i32, i32* %unit.addr, align 4, !dbg !6232
  %idxprom = sext i32 %11 to i64, !dbg !6233
  %arrayidx = getelementptr [63 x i8], [63 x i8]* @con2fb_map, i64 0, i64 %idxprom, !dbg !6233
  store i8 %conv, i8* %arrayidx, align 1, !dbg !6234
  %12 = load i32, i32* %found.addr, align 4, !dbg !6235
  %tobool4 = icmp ne i32 %12, 0, !dbg !6235
  br i1 %tobool4, label %if.end, label %land.lhs.true5, !dbg !6237

land.lhs.true5:                                   ; preds = %if.then
  %13 = load %struct.fb_info*, %struct.fb_info** %newinfo.addr, align 8, !dbg !6238
  %fbops6 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %13, i32 0, i32 20, !dbg !6239
  %14 = load %struct.fb_ops*, %struct.fb_ops** %fbops6, align 8, !dbg !6239
  %fb_release7 = getelementptr inbounds %struct.fb_ops, %struct.fb_ops* %14, i32 0, i32 2, !dbg !6240
  %15 = load i32 (%struct.fb_info*, i32)*, i32 (%struct.fb_info*, i32)** %fb_release7, align 8, !dbg !6240
  %tobool8 = icmp ne i32 (%struct.fb_info*, i32)* %15, null, !dbg !6238
  br i1 %tobool8, label %if.then9, label %if.end, !dbg !6241

if.then9:                                         ; preds = %land.lhs.true5
  %16 = load %struct.fb_info*, %struct.fb_info** %newinfo.addr, align 8, !dbg !6242
  %fbops10 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %16, i32 0, i32 20, !dbg !6243
  %17 = load %struct.fb_ops*, %struct.fb_ops** %fbops10, align 8, !dbg !6243
  %fb_release11 = getelementptr inbounds %struct.fb_ops, %struct.fb_ops* %17, i32 0, i32 2, !dbg !6244
  %18 = load i32 (%struct.fb_info*, i32)*, i32 (%struct.fb_info*, i32)** %fb_release11, align 8, !dbg !6244
  %19 = load %struct.fb_info*, %struct.fb_info** %newinfo.addr, align 8, !dbg !6245
  %call12 = call i32 %18(%struct.fb_info* %19, i32 0) #10, !dbg !6242
  br label %if.end, !dbg !6242

if.end:                                           ; preds = %if.then9, %land.lhs.true5, %if.then
  %20 = load i32, i32* %found.addr, align 4, !dbg !6246
  %tobool13 = icmp ne i32 %20, 0, !dbg !6246
  br i1 %tobool13, label %if.end16, label %if.then14, !dbg !6248

if.then14:                                        ; preds = %if.end
  %21 = load %struct.fb_info*, %struct.fb_info** %newinfo.addr, align 8, !dbg !6249
  %fbops15 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %21, i32 0, i32 20, !dbg !6250
  %22 = load %struct.fb_ops*, %struct.fb_ops** %fbops15, align 8, !dbg !6250
  %owner = getelementptr inbounds %struct.fb_ops, %struct.fb_ops* %22, i32 0, i32 0, !dbg !6251
  %23 = load %struct.module*, %struct.module** %owner, align 8, !dbg !6251
  call void @module_put(%struct.module* %23) #10, !dbg !6252
  br label %if.end16, !dbg !6252

if.end16:                                         ; preds = %if.then14, %if.end
  store i32 -19, i32* %err, align 4, !dbg !6253
  br label %if.end17, !dbg !6254

if.end17:                                         ; preds = %if.end16, %land.lhs.true, %entry
  %24 = load i32, i32* %err, align 4, !dbg !6255
  %tobool18 = icmp ne i32 %24, 0, !dbg !6255
  br i1 %tobool18, label %if.end37, label %if.then19, !dbg !6257

if.then19:                                        ; preds = %if.end17
  %25 = load %struct.fb_info*, %struct.fb_info** %oldinfo.addr, align 8, !dbg !6258
  call void @fbcon_del_cursor_timer(%struct.fb_info* %25) #10, !dbg !6260
  %26 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !6261
  %cursor_state = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %26, i32 0, i32 9, !dbg !6262
  %mask = getelementptr inbounds %struct.fb_cursor, %struct.fb_cursor* %cursor_state, i32 0, i32 3, !dbg !6263
  %27 = load i8*, i8** %mask, align 8, !dbg !6263
  call void @kfree(i8* %27) #10, !dbg !6264
  %28 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !6265
  %cursor_data = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %28, i32 0, i32 22, !dbg !6266
  %29 = load i8*, i8** %cursor_data, align 8, !dbg !6266
  call void @kfree(i8* %29) #10, !dbg !6267
  %30 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !6268
  %cursor_src = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %30, i32 0, i32 25, !dbg !6269
  %31 = load i8*, i8** %cursor_src, align 8, !dbg !6269
  call void @kfree(i8* %31) #10, !dbg !6270
  %32 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !6271
  %fontbuffer = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %32, i32 0, i32 23, !dbg !6272
  %33 = load i8*, i8** %fontbuffer, align 8, !dbg !6272
  call void @kfree(i8* %33) #10, !dbg !6273
  %34 = load %struct.fb_info*, %struct.fb_info** %oldinfo.addr, align 8, !dbg !6274
  %fbcon_par20 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %34, i32 0, i32 29, !dbg !6275
  %35 = load i8*, i8** %fbcon_par20, align 8, !dbg !6275
  call void @kfree(i8* %35) #10, !dbg !6276
  %36 = load %struct.fb_info*, %struct.fb_info** %oldinfo.addr, align 8, !dbg !6277
  %fbcon_par21 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %36, i32 0, i32 29, !dbg !6278
  store i8* null, i8** %fbcon_par21, align 8, !dbg !6279
  %37 = load %struct.fb_info*, %struct.fb_info** %oldinfo.addr, align 8, !dbg !6280
  %fbops22 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %37, i32 0, i32 20, !dbg !6281
  %38 = load %struct.fb_ops*, %struct.fb_ops** %fbops22, align 8, !dbg !6281
  %owner23 = getelementptr inbounds %struct.fb_ops, %struct.fb_ops* %38, i32 0, i32 0, !dbg !6282
  %39 = load %struct.module*, %struct.module** %owner23, align 8, !dbg !6282
  call void @module_put(%struct.module* %39) #10, !dbg !6283
  %40 = load %struct.fb_info*, %struct.fb_info** %newinfo.addr, align 8, !dbg !6284
  %tobool24 = icmp ne %struct.fb_info* %40, null, !dbg !6284
  br i1 %tobool24, label %land.lhs.true25, label %if.end36, !dbg !6286

land.lhs.true25:                                  ; preds = %if.then19
  %41 = load %struct.fb_info*, %struct.fb_info** %newinfo.addr, align 8, !dbg !6287
  %fbops26 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %41, i32 0, i32 20, !dbg !6288
  %42 = load %struct.fb_ops*, %struct.fb_ops** %fbops26, align 8, !dbg !6288
  %fb_set_par = getelementptr inbounds %struct.fb_ops, %struct.fb_ops* %42, i32 0, i32 6, !dbg !6289
  %43 = load i32 (%struct.fb_info*)*, i32 (%struct.fb_info*)** %fb_set_par, align 8, !dbg !6289
  %tobool27 = icmp ne i32 (%struct.fb_info*)* %43, null, !dbg !6287
  br i1 %tobool27, label %if.then28, label %if.end36, !dbg !6290

if.then28:                                        ; preds = %land.lhs.true25
  %44 = load %struct.fb_info*, %struct.fb_info** %newinfo.addr, align 8, !dbg !6291
  %fbops29 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %44, i32 0, i32 20, !dbg !6293
  %45 = load %struct.fb_ops*, %struct.fb_ops** %fbops29, align 8, !dbg !6293
  %fb_set_par30 = getelementptr inbounds %struct.fb_ops, %struct.fb_ops* %45, i32 0, i32 6, !dbg !6294
  %46 = load i32 (%struct.fb_info*)*, i32 (%struct.fb_info*)** %fb_set_par30, align 8, !dbg !6294
  %47 = load %struct.fb_info*, %struct.fb_info** %newinfo.addr, align 8, !dbg !6295
  %call31 = call i32 %46(%struct.fb_info* %47) #10, !dbg !6291
  store i32 %call31, i32* %ret, align 4, !dbg !6296
  %48 = load i32, i32* %ret, align 4, !dbg !6297
  %tobool32 = icmp ne i32 %48, 0, !dbg !6297
  br i1 %tobool32, label %if.then33, label %if.end35, !dbg !6299

if.then33:                                        ; preds = %if.then28
  %49 = load i32, i32* %ret, align 4, !dbg !6300
  %call34 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.19, i64 0, i64 0), i32 %49) #11, !dbg !6301
  br label %if.end35, !dbg !6301

if.end35:                                         ; preds = %if.then33, %if.then28
  br label %if.end36, !dbg !6302

if.end36:                                         ; preds = %if.end35, %land.lhs.true25, %if.then19
  br label %if.end37, !dbg !6303

if.end37:                                         ; preds = %if.end36, %if.end17
  %50 = load i32, i32* %err, align 4, !dbg !6304
  ret i32 %50, !dbg !6305
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @fbcon_unbind() #1 !dbg !6306 {
entry:
  %ret = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6307, metadata !DIExpression()), !dbg !6308
  %0 = load i32, i32* @first_fb_vc, align 4, !dbg !6309
  %1 = load i32, i32* @last_fb_vc, align 4, !dbg !6310
  %2 = load i32, i32* @fbcon_is_default, align 4, !dbg !6311
  %call = call i32 @do_unbind_con_driver(%struct.consw* @fb_con, i32 %0, i32 %1, i32 %2) #10, !dbg !6312
  store i32 %call, i32* %ret, align 4, !dbg !6313
  %3 = load i32, i32* %ret, align 4, !dbg !6314
  %tobool = icmp ne i32 %3, 0, !dbg !6314
  br i1 %tobool, label %if.end, label %if.then, !dbg !6316

if.then:                                          ; preds = %entry
  store i32 0, i32* @fbcon_has_console_bind, align 4, !dbg !6317
  br label %if.end, !dbg !6318

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !6319
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @fbcon_fb_unregistered(%struct.fb_info* %info) #1 !dbg !6320 {
entry:
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !5819, metadata !DIExpression()), !dbg !6321
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !5832, metadata !DIExpression()), !dbg !6325
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !5842, metadata !DIExpression()), !dbg !6327
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !5844, metadata !DIExpression()), !dbg !6328
  %info.addr = alloca %struct.fb_info*, align 8
  %i = alloca i32, align 4
  %idx = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.fb_info* %info, %struct.fb_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fb_info** %info.addr, metadata !6329, metadata !DIExpression()), !dbg !6330
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6331, metadata !DIExpression()), !dbg !6332
  call void @llvm.dbg.declare(metadata i32* %idx, metadata !6333, metadata !DIExpression()), !dbg !6334
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !6335, metadata !DIExpression()), !dbg !6336
  store %struct.atomic_t* @ignore_console_lock_warning, %struct.atomic_t** %v.addr.i, align 8
  %0 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !6337
  %1 = bitcast %struct.atomic_t* %0 to i8*, !dbg !6337
  store i8* %1, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %2 = load i8*, i8** %v.addr.i.i, align 8, !dbg !6338
  %3 = load i64, i64* %size.addr.i.i, align 8, !dbg !6339
  %conv.i.i = trunc i64 %3 to i32, !dbg !6339
  %call.i.i = call zeroext i1 @kasan_check_read(i8* %2, i32 %conv.i.i) #13, !dbg !6340
  %4 = load i8*, i8** %v.addr.i.i, align 8, !dbg !6341
  %5 = load i64, i64* %size.addr.i.i, align 8, !dbg !6341
  call void @kcsan_check_access(i8* %4, i64 %5, i32 4) #13, !dbg !6341
  %6 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !6342
  store %struct.atomic_t* %6, %struct.atomic_t** %v.addr.i1.i, align 8
  %7 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !6343
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %7, i32 0, i32 0, !dbg !6343
  %8 = load volatile i32, i32* %counter.i.i, align 4, !dbg !6343
  %tobool = icmp ne i32 %8, 0, !dbg !6336
  br i1 %tobool, label %land.end, label %land.lhs.true, !dbg !6336

land.lhs.true:                                    ; preds = %entry
  %call1 = call i32 @is_console_locked() #10, !dbg !6336
  %tobool2 = icmp ne i32 %call1, 0, !dbg !6336
  br i1 %tobool2, label %land.end, label %land.rhs, !dbg !6336

land.rhs:                                         ; preds = %land.lhs.true
  %9 = load i32, i32* @oops_in_progress, align 4, !dbg !6336
  %tobool3 = icmp ne i32 %9, 0, !dbg !6336
  %lnot = xor i1 %tobool3, true, !dbg !6336
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %entry
  %10 = phi i1 [ false, %land.lhs.true ], [ false, %entry ], [ %lnot, %land.rhs ], !dbg !6344
  %lnot4 = xor i1 %10, true, !dbg !6336
  %lnot5 = xor i1 %lnot4, true, !dbg !6336
  %lnot.ext = zext i1 %lnot5 to i32, !dbg !6336
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !6336
  %11 = load i32, i32* %__ret_warn_on, align 4, !dbg !6345
  %tobool6 = icmp ne i32 %11, 0, !dbg !6345
  %lnot7 = xor i1 %tobool6, true, !dbg !6345
  %lnot9 = xor i1 %lnot7, true, !dbg !6345
  %lnot.ext10 = zext i1 %lnot9 to i32, !dbg !6345
  %conv = sext i32 %lnot.ext10 to i64, !dbg !6345
  %tobool11 = icmp ne i64 %conv, 0, !dbg !6345
  br i1 %tobool11, label %if.then, label %if.end, !dbg !6336

if.then:                                          ; preds = %land.end
  br label %do.body, !dbg !6345

do.body:                                          ; preds = %if.then
  br label %do.body12, !dbg !6347

do.body12:                                        ; preds = %do.body
  br label %do.end, !dbg !6349

do.end:                                           ; preds = %do.body12
  br label %do.body13, !dbg !6347

do.body13:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str, i64 0, i64 0), i32 2851, i32 2305, i64 12) #12, !dbg !6351, !srcloc !6353
  br label %do.end14, !dbg !6351

do.end14:                                         ; preds = %do.body13
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 250) #12, !dbg !6354, !srcloc !6356
  br label %do.body15, !dbg !6347

do.body15:                                        ; preds = %do.end14
  br label %do.end16, !dbg !6357

do.end16:                                         ; preds = %do.body15
  br label %do.end17, !dbg !6347

do.end17:                                         ; preds = %do.end16
  br label %if.end, !dbg !6347

if.end:                                           ; preds = %do.end17, %land.end
  %12 = load i32, i32* %__ret_warn_on, align 4, !dbg !6336
  %tobool18 = icmp ne i32 %12, 0, !dbg !6336
  %lnot19 = xor i1 %tobool18, true, !dbg !6336
  %lnot21 = xor i1 %lnot19, true, !dbg !6336
  %lnot.ext22 = zext i1 %lnot21 to i32, !dbg !6336
  %conv23 = sext i32 %lnot.ext22 to i64, !dbg !6336
  store i64 %conv23, i64* %tmp, align 8, !dbg !6345
  %13 = load i64, i64* %tmp, align 8, !dbg !6336
  %14 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !6359
  %node = getelementptr inbounds %struct.fb_info, %struct.fb_info* %14, i32 0, i32 1, !dbg !6360
  %15 = load i32, i32* %node, align 4, !dbg !6360
  store i32 %15, i32* %idx, align 4, !dbg !6361
  %16 = load i32, i32* @first_fb_vc, align 4, !dbg !6362
  store i32 %16, i32* %i, align 4, !dbg !6364
  br label %for.cond, !dbg !6365

for.cond:                                         ; preds = %for.inc, %if.end
  %17 = load i32, i32* %i, align 4, !dbg !6366
  %18 = load i32, i32* @last_fb_vc, align 4, !dbg !6368
  %cmp = icmp sle i32 %17, %18, !dbg !6369
  br i1 %cmp, label %for.body, label %for.end, !dbg !6370

for.body:                                         ; preds = %for.cond
  %19 = load i32, i32* %i, align 4, !dbg !6371
  %idxprom = sext i32 %19 to i64, !dbg !6374
  %arrayidx = getelementptr [63 x i8], [63 x i8]* @con2fb_map, i64 0, i64 %idxprom, !dbg !6374
  %20 = load i8, i8* %arrayidx, align 1, !dbg !6374
  %conv25 = sext i8 %20 to i32, !dbg !6374
  %21 = load i32, i32* %idx, align 4, !dbg !6375
  %cmp26 = icmp eq i32 %conv25, %21, !dbg !6376
  br i1 %cmp26, label %if.then28, label %if.end31, !dbg !6377

if.then28:                                        ; preds = %for.body
  %22 = load i32, i32* %i, align 4, !dbg !6378
  %idxprom29 = sext i32 %22 to i64, !dbg !6379
  %arrayidx30 = getelementptr [63 x i8], [63 x i8]* @con2fb_map, i64 0, i64 %idxprom29, !dbg !6379
  store i8 -1, i8* %arrayidx30, align 1, !dbg !6380
  br label %if.end31, !dbg !6379

if.end31:                                         ; preds = %if.then28, %for.body
  br label %for.inc, !dbg !6381

for.inc:                                          ; preds = %if.end31
  %23 = load i32, i32* %i, align 4, !dbg !6382
  %inc = add i32 %23, 1, !dbg !6382
  store i32 %inc, i32* %i, align 4, !dbg !6382
  br label %for.cond, !dbg !6383, !llvm.loop !6384

for.end:                                          ; preds = %for.cond
  %24 = load i32, i32* %idx, align 4, !dbg !6386
  %25 = load i32, i32* @info_idx, align 4, !dbg !6388
  %cmp32 = icmp eq i32 %24, %25, !dbg !6389
  br i1 %cmp32, label %if.then34, label %if.end47, !dbg !6390

if.then34:                                        ; preds = %for.end
  store i32 -1, i32* @info_idx, align 4, !dbg !6391
  store i32 0, i32* %i, align 4, !dbg !6393
  br label %for.cond35, !dbg !6393

for.cond35:                                       ; preds = %for.inc44, %if.then34
  %26 = load i32, i32* %i, align 4, !dbg !6395
  %cmp36 = icmp slt i32 %26, 32, !dbg !6395
  br i1 %cmp36, label %for.body38, label %for.end46, !dbg !6393

for.body38:                                       ; preds = %for.cond35
  %27 = load i32, i32* %i, align 4, !dbg !6397
  %idxprom39 = sext i32 %27 to i64, !dbg !6397
  %arrayidx40 = getelementptr [32 x %struct.fb_info*], [32 x %struct.fb_info*]* @registered_fb, i64 0, i64 %idxprom39, !dbg !6397
  %28 = load %struct.fb_info*, %struct.fb_info** %arrayidx40, align 8, !dbg !6397
  %tobool41 = icmp ne %struct.fb_info* %28, null, !dbg !6397
  br i1 %tobool41, label %if.else, label %if.then42, !dbg !6395

if.then42:                                        ; preds = %for.body38
  br label %if.end43, !dbg !6399

if.else:                                          ; preds = %for.body38
  %29 = load i32, i32* %i, align 4, !dbg !6401
  store i32 %29, i32* @info_idx, align 4, !dbg !6403
  br label %for.end46, !dbg !6404

if.end43:                                         ; preds = %if.then42
  br label %for.inc44, !dbg !6397

for.inc44:                                        ; preds = %if.end43
  %30 = load i32, i32* %i, align 4, !dbg !6395
  %inc45 = add i32 %30, 1, !dbg !6395
  store i32 %inc45, i32* %i, align 4, !dbg !6395
  br label %for.cond35, !dbg !6395, !llvm.loop !6405

for.end46:                                        ; preds = %if.else, %for.cond35
  br label %if.end47, !dbg !6407

if.end47:                                         ; preds = %for.end46, %for.end
  %31 = load i32, i32* @info_idx, align 4, !dbg !6408
  %cmp48 = icmp ne i32 %31, -1, !dbg !6410
  br i1 %cmp48, label %if.then50, label %if.end68, !dbg !6411

if.then50:                                        ; preds = %if.end47
  %32 = load i32, i32* @first_fb_vc, align 4, !dbg !6412
  store i32 %32, i32* %i, align 4, !dbg !6415
  br label %for.cond51, !dbg !6416

for.cond51:                                       ; preds = %for.inc65, %if.then50
  %33 = load i32, i32* %i, align 4, !dbg !6417
  %34 = load i32, i32* @last_fb_vc, align 4, !dbg !6419
  %cmp52 = icmp sle i32 %33, %34, !dbg !6420
  br i1 %cmp52, label %for.body54, label %for.end67, !dbg !6421

for.body54:                                       ; preds = %for.cond51
  %35 = load i32, i32* %i, align 4, !dbg !6422
  %idxprom55 = sext i32 %35 to i64, !dbg !6425
  %arrayidx56 = getelementptr [63 x i8], [63 x i8]* @con2fb_map, i64 0, i64 %idxprom55, !dbg !6425
  %36 = load i8, i8* %arrayidx56, align 1, !dbg !6425
  %conv57 = sext i8 %36 to i32, !dbg !6425
  %cmp58 = icmp eq i32 %conv57, -1, !dbg !6426
  br i1 %cmp58, label %if.then60, label %if.end64, !dbg !6427

if.then60:                                        ; preds = %for.body54
  %37 = load i32, i32* @info_idx, align 4, !dbg !6428
  %conv61 = trunc i32 %37 to i8, !dbg !6428
  %38 = load i32, i32* %i, align 4, !dbg !6429
  %idxprom62 = sext i32 %38 to i64, !dbg !6430
  %arrayidx63 = getelementptr [63 x i8], [63 x i8]* @con2fb_map, i64 0, i64 %idxprom62, !dbg !6430
  store i8 %conv61, i8* %arrayidx63, align 1, !dbg !6431
  br label %if.end64, !dbg !6430

if.end64:                                         ; preds = %if.then60, %for.body54
  br label %for.inc65, !dbg !6432

for.inc65:                                        ; preds = %if.end64
  %39 = load i32, i32* %i, align 4, !dbg !6433
  %inc66 = add i32 %39, 1, !dbg !6433
  store i32 %inc66, i32* %i, align 4, !dbg !6433
  br label %for.cond51, !dbg !6434, !llvm.loop !6435

for.end67:                                        ; preds = %for.cond51
  br label %if.end68, !dbg !6437

if.end68:                                         ; preds = %for.end67, %if.end47
  %40 = load i32, i32* @primary_device, align 4, !dbg !6438
  %41 = load i32, i32* %idx, align 4, !dbg !6440
  %cmp69 = icmp eq i32 %40, %41, !dbg !6441
  br i1 %cmp69, label %if.then71, label %if.end72, !dbg !6442

if.then71:                                        ; preds = %if.end68
  store i32 -1, i32* @primary_device, align 4, !dbg !6443
  br label %if.end72, !dbg !6444

if.end72:                                         ; preds = %if.then71, %if.end68
  %42 = load i32, i32* @num_registered_fb, align 4, !dbg !6445
  %tobool73 = icmp ne i32 %42, 0, !dbg !6445
  br i1 %tobool73, label %if.end76, label %if.then74, !dbg !6447

if.then74:                                        ; preds = %if.end72
  %call75 = call i32 @do_unregister_con_driver(%struct.consw* @fb_con) #10, !dbg !6448
  br label %if.end76, !dbg !6448

if.end76:                                         ; preds = %if.then74, %if.end72
  ret void, !dbg !6449
}

; Function Attrs: noredzone
declare dso_local i32 @do_unregister_con_driver(%struct.consw*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @fbcon_remap_all(%struct.fb_info* %info) #1 !dbg !6450 {
entry:
  %info.addr = alloca %struct.fb_info*, align 8
  %i = alloca i32, align 4
  %idx = alloca i32, align 4
  store %struct.fb_info* %info, %struct.fb_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fb_info** %info.addr, metadata !6451, metadata !DIExpression()), !dbg !6452
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6453, metadata !DIExpression()), !dbg !6454
  call void @llvm.dbg.declare(metadata i32* %idx, metadata !6455, metadata !DIExpression()), !dbg !6456
  %0 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !6457
  %node = getelementptr inbounds %struct.fb_info, %struct.fb_info* %0, i32 0, i32 1, !dbg !6458
  %1 = load i32, i32* %node, align 4, !dbg !6458
  store i32 %1, i32* %idx, align 4, !dbg !6456
  call void @console_lock() #10, !dbg !6459
  %2 = load i32, i32* @first_fb_vc, align 4, !dbg !6460
  store i32 %2, i32* %i, align 4, !dbg !6462
  br label %for.cond, !dbg !6463

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load i32, i32* %i, align 4, !dbg !6464
  %4 = load i32, i32* @last_fb_vc, align 4, !dbg !6466
  %cmp = icmp sle i32 %3, %4, !dbg !6467
  br i1 %cmp, label %for.body, label %for.end, !dbg !6468

for.body:                                         ; preds = %for.cond
  %5 = load i32, i32* %i, align 4, !dbg !6469
  %6 = load i32, i32* %idx, align 4, !dbg !6470
  %call = call i32 @set_con2fb_map(i32 %5, i32 %6, i32 0) #10, !dbg !6471
  br label %for.inc, !dbg !6471

for.inc:                                          ; preds = %for.body
  %7 = load i32, i32* %i, align 4, !dbg !6472
  %inc = add i32 %7, 1, !dbg !6472
  store i32 %inc, i32* %i, align 4, !dbg !6472
  br label %for.cond, !dbg !6473, !llvm.loop !6474

for.end:                                          ; preds = %for.cond
  %call1 = call i32 @con_is_bound(%struct.consw* @fb_con) #10, !dbg !6476
  %tobool = icmp ne i32 %call1, 0, !dbg !6476
  br i1 %tobool, label %if.then, label %if.end, !dbg !6478

if.then:                                          ; preds = %for.end
  %8 = load i32, i32* %idx, align 4, !dbg !6479
  %9 = load i32, i32* @first_fb_vc, align 4, !dbg !6481
  %add = add i32 %9, 1, !dbg !6482
  %10 = load i32, i32* @last_fb_vc, align 4, !dbg !6483
  %add2 = add i32 %10, 1, !dbg !6484
  %call3 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 %8, i32 %add, i32 %add2) #11, !dbg !6485
  %11 = load i32, i32* %idx, align 4, !dbg !6486
  store i32 %11, i32* @info_idx, align 4, !dbg !6487
  br label %if.end, !dbg !6488

if.end:                                           ; preds = %if.then, %for.end
  call void @console_unlock() #10, !dbg !6489
  ret void, !dbg !6490
}

; Function Attrs: noredzone
declare dso_local void @console_lock() #3

; Function Attrs: noredzone
declare dso_local i32 @con_is_bound(%struct.consw*) #3

; Function Attrs: cold noredzone
declare dso_local i32 @printk(i8*, ...) #4

; Function Attrs: noredzone
declare dso_local void @console_unlock() #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @fbcon_fb_registered(%struct.fb_info* %info) #1 !dbg !6491 {
entry:
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !5819, metadata !DIExpression()), !dbg !6492
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !5832, metadata !DIExpression()), !dbg !6496
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !5842, metadata !DIExpression()), !dbg !6498
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !5844, metadata !DIExpression()), !dbg !6499
  %info.addr = alloca %struct.fb_info*, align 8
  %ret = alloca i32, align 4
  %i = alloca i32, align 4
  %idx = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.fb_info* %info, %struct.fb_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fb_info** %info.addr, metadata !6500, metadata !DIExpression()), !dbg !6501
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6502, metadata !DIExpression()), !dbg !6503
  store i32 0, i32* %ret, align 4, !dbg !6503
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6504, metadata !DIExpression()), !dbg !6505
  call void @llvm.dbg.declare(metadata i32* %idx, metadata !6506, metadata !DIExpression()), !dbg !6507
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !6508, metadata !DIExpression()), !dbg !6509
  store %struct.atomic_t* @ignore_console_lock_warning, %struct.atomic_t** %v.addr.i, align 8
  %0 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !6510
  %1 = bitcast %struct.atomic_t* %0 to i8*, !dbg !6510
  store i8* %1, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %2 = load i8*, i8** %v.addr.i.i, align 8, !dbg !6511
  %3 = load i64, i64* %size.addr.i.i, align 8, !dbg !6512
  %conv.i.i = trunc i64 %3 to i32, !dbg !6512
  %call.i.i = call zeroext i1 @kasan_check_read(i8* %2, i32 %conv.i.i) #13, !dbg !6513
  %4 = load i8*, i8** %v.addr.i.i, align 8, !dbg !6514
  %5 = load i64, i64* %size.addr.i.i, align 8, !dbg !6514
  call void @kcsan_check_access(i8* %4, i64 %5, i32 4) #13, !dbg !6514
  %6 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !6515
  store %struct.atomic_t* %6, %struct.atomic_t** %v.addr.i1.i, align 8
  %7 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !6516
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %7, i32 0, i32 0, !dbg !6516
  %8 = load volatile i32, i32* %counter.i.i, align 4, !dbg !6516
  %tobool = icmp ne i32 %8, 0, !dbg !6509
  br i1 %tobool, label %land.end, label %land.lhs.true, !dbg !6509

land.lhs.true:                                    ; preds = %entry
  %call1 = call i32 @is_console_locked() #10, !dbg !6509
  %tobool2 = icmp ne i32 %call1, 0, !dbg !6509
  br i1 %tobool2, label %land.end, label %land.rhs, !dbg !6509

land.rhs:                                         ; preds = %land.lhs.true
  %9 = load i32, i32* @oops_in_progress, align 4, !dbg !6509
  %tobool3 = icmp ne i32 %9, 0, !dbg !6509
  %lnot = xor i1 %tobool3, true, !dbg !6509
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %entry
  %10 = phi i1 [ false, %land.lhs.true ], [ false, %entry ], [ %lnot, %land.rhs ], !dbg !6517
  %lnot4 = xor i1 %10, true, !dbg !6509
  %lnot5 = xor i1 %lnot4, true, !dbg !6509
  %lnot.ext = zext i1 %lnot5 to i32, !dbg !6509
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !6509
  %11 = load i32, i32* %__ret_warn_on, align 4, !dbg !6518
  %tobool6 = icmp ne i32 %11, 0, !dbg !6518
  %lnot7 = xor i1 %tobool6, true, !dbg !6518
  %lnot9 = xor i1 %lnot7, true, !dbg !6518
  %lnot.ext10 = zext i1 %lnot9 to i32, !dbg !6518
  %conv = sext i32 %lnot.ext10 to i64, !dbg !6518
  %tobool11 = icmp ne i64 %conv, 0, !dbg !6518
  br i1 %tobool11, label %if.then, label %if.end, !dbg !6509

if.then:                                          ; preds = %land.end
  br label %do.body, !dbg !6518

do.body:                                          ; preds = %if.then
  br label %do.body12, !dbg !6520

do.body12:                                        ; preds = %do.body
  br label %do.end, !dbg !6522

do.end:                                           ; preds = %do.body12
  br label %do.body13, !dbg !6520

do.body13:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str, i64 0, i64 0), i32 2945, i32 2305, i64 12) #12, !dbg !6524, !srcloc !6526
  br label %do.end14, !dbg !6524

do.end14:                                         ; preds = %do.body13
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 251) #12, !dbg !6527, !srcloc !6529
  br label %do.body15, !dbg !6520

do.body15:                                        ; preds = %do.end14
  br label %do.end16, !dbg !6530

do.end16:                                         ; preds = %do.body15
  br label %do.end17, !dbg !6520

do.end17:                                         ; preds = %do.end16
  br label %if.end, !dbg !6520

if.end:                                           ; preds = %do.end17, %land.end
  %12 = load i32, i32* %__ret_warn_on, align 4, !dbg !6509
  %tobool18 = icmp ne i32 %12, 0, !dbg !6509
  %lnot19 = xor i1 %tobool18, true, !dbg !6509
  %lnot21 = xor i1 %lnot19, true, !dbg !6509
  %lnot.ext22 = zext i1 %lnot21 to i32, !dbg !6509
  %conv23 = sext i32 %lnot.ext22 to i64, !dbg !6509
  store i64 %conv23, i64* %tmp, align 8, !dbg !6518
  %13 = load i64, i64* %tmp, align 8, !dbg !6509
  %14 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !6532
  %node = getelementptr inbounds %struct.fb_info, %struct.fb_info* %14, i32 0, i32 1, !dbg !6533
  %15 = load i32, i32* %node, align 4, !dbg !6533
  store i32 %15, i32* %idx, align 4, !dbg !6534
  %16 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !6535
  call void @fbcon_select_primary(%struct.fb_info* %16) #10, !dbg !6536
  %17 = load i32, i32* @info_idx, align 4, !dbg !6537
  %cmp = icmp eq i32 %17, -1, !dbg !6539
  br i1 %cmp, label %if.then25, label %if.else, !dbg !6540

if.then25:                                        ; preds = %if.end
  %18 = load i32, i32* @first_fb_vc, align 4, !dbg !6541
  store i32 %18, i32* %i, align 4, !dbg !6544
  br label %for.cond, !dbg !6545

for.cond:                                         ; preds = %for.inc, %if.then25
  %19 = load i32, i32* %i, align 4, !dbg !6546
  %20 = load i32, i32* @last_fb_vc, align 4, !dbg !6548
  %cmp26 = icmp sle i32 %19, %20, !dbg !6549
  br i1 %cmp26, label %for.body, label %for.end, !dbg !6550

for.body:                                         ; preds = %for.cond
  %21 = load i32, i32* %i, align 4, !dbg !6551
  %idxprom = sext i32 %21 to i64, !dbg !6554
  %arrayidx = getelementptr [63 x i8], [63 x i8]* @con2fb_map_boot, i64 0, i64 %idxprom, !dbg !6554
  %22 = load i8, i8* %arrayidx, align 1, !dbg !6554
  %conv28 = sext i8 %22 to i32, !dbg !6554
  %23 = load i32, i32* %idx, align 4, !dbg !6555
  %cmp29 = icmp eq i32 %conv28, %23, !dbg !6556
  br i1 %cmp29, label %if.then31, label %if.end32, !dbg !6557

if.then31:                                        ; preds = %for.body
  %24 = load i32, i32* %idx, align 4, !dbg !6558
  store i32 %24, i32* @info_idx, align 4, !dbg !6560
  br label %for.end, !dbg !6561

if.end32:                                         ; preds = %for.body
  br label %for.inc, !dbg !6562

for.inc:                                          ; preds = %if.end32
  %25 = load i32, i32* %i, align 4, !dbg !6563
  %inc = add i32 %25, 1, !dbg !6563
  store i32 %inc, i32* %i, align 4, !dbg !6563
  br label %for.cond, !dbg !6564, !llvm.loop !6565

for.end:                                          ; preds = %if.then31, %for.cond
  %26 = load i32, i32* @info_idx, align 4, !dbg !6567
  %cmp33 = icmp ne i32 %26, -1, !dbg !6569
  br i1 %cmp33, label %if.then35, label %if.end37, !dbg !6570

if.then35:                                        ; preds = %for.end
  %call36 = call i32 @do_fbcon_takeover(i32 1) #10, !dbg !6571
  store i32 %call36, i32* %ret, align 4, !dbg !6572
  br label %if.end37, !dbg !6573

if.end37:                                         ; preds = %if.then35, %for.end
  br label %if.end53, !dbg !6574

if.else:                                          ; preds = %if.end
  %27 = load i32, i32* @first_fb_vc, align 4, !dbg !6575
  store i32 %27, i32* %i, align 4, !dbg !6578
  br label %for.cond38, !dbg !6579

for.cond38:                                       ; preds = %for.inc50, %if.else
  %28 = load i32, i32* %i, align 4, !dbg !6580
  %29 = load i32, i32* @last_fb_vc, align 4, !dbg !6582
  %cmp39 = icmp sle i32 %28, %29, !dbg !6583
  br i1 %cmp39, label %for.body41, label %for.end52, !dbg !6584

for.body41:                                       ; preds = %for.cond38
  %30 = load i32, i32* %i, align 4, !dbg !6585
  %idxprom42 = sext i32 %30 to i64, !dbg !6588
  %arrayidx43 = getelementptr [63 x i8], [63 x i8]* @con2fb_map_boot, i64 0, i64 %idxprom42, !dbg !6588
  %31 = load i8, i8* %arrayidx43, align 1, !dbg !6588
  %conv44 = sext i8 %31 to i32, !dbg !6588
  %32 = load i32, i32* %idx, align 4, !dbg !6589
  %cmp45 = icmp eq i32 %conv44, %32, !dbg !6590
  br i1 %cmp45, label %if.then47, label %if.end49, !dbg !6591

if.then47:                                        ; preds = %for.body41
  %33 = load i32, i32* %i, align 4, !dbg !6592
  %34 = load i32, i32* %idx, align 4, !dbg !6593
  %call48 = call i32 @set_con2fb_map(i32 %33, i32 %34, i32 0) #10, !dbg !6594
  br label %if.end49, !dbg !6594

if.end49:                                         ; preds = %if.then47, %for.body41
  br label %for.inc50, !dbg !6595

for.inc50:                                        ; preds = %if.end49
  %35 = load i32, i32* %i, align 4, !dbg !6596
  %inc51 = add i32 %35, 1, !dbg !6596
  store i32 %inc51, i32* %i, align 4, !dbg !6596
  br label %for.cond38, !dbg !6597, !llvm.loop !6598

for.end52:                                        ; preds = %for.cond38
  br label %if.end53

if.end53:                                         ; preds = %for.end52, %if.end37
  %36 = load i32, i32* %ret, align 4, !dbg !6600
  ret i32 %36, !dbg !6601
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @fbcon_select_primary(%struct.fb_info* %info) #1 !dbg !6602 {
entry:
  %info.addr = alloca %struct.fb_info*, align 8
  %i = alloca i32, align 4
  store %struct.fb_info* %info, %struct.fb_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fb_info** %info.addr, metadata !6603, metadata !DIExpression()), !dbg !6604
  %0 = load i32, i32* @map_override, align 4, !dbg !6605
  %tobool = icmp ne i32 %0, 0, !dbg !6605
  br i1 %tobool, label %if.end12, label %land.lhs.true, !dbg !6607

land.lhs.true:                                    ; preds = %entry
  %1 = load i32, i32* @primary_device, align 4, !dbg !6608
  %cmp = icmp eq i32 %1, -1, !dbg !6609
  br i1 %cmp, label %land.lhs.true1, label %if.end12, !dbg !6610

land.lhs.true1:                                   ; preds = %land.lhs.true
  %2 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !6611
  %call = call i32 @fb_is_primary_device(%struct.fb_info* %2) #10, !dbg !6612
  %tobool2 = icmp ne i32 %call, 0, !dbg !6612
  br i1 %tobool2, label %if.then, label %if.end12, !dbg !6613

if.then:                                          ; preds = %land.lhs.true1
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6614, metadata !DIExpression()), !dbg !6616
  %3 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !6617
  %fix = getelementptr inbounds %struct.fb_info, %struct.fb_info* %3, i32 0, i32 7, !dbg !6618
  %id = getelementptr inbounds %struct.fb_fix_screeninfo, %struct.fb_fix_screeninfo* %fix, i32 0, i32 0, !dbg !6619
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %id, i64 0, i64 0, !dbg !6617
  %4 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !6620
  %node = getelementptr inbounds %struct.fb_info, %struct.fb_info* %4, i32 0, i32 1, !dbg !6621
  %5 = load i32, i32* %node, align 4, !dbg !6621
  %call3 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.20, i64 0, i64 0), i8* %arraydecay, i32 %5) #11, !dbg !6622
  %6 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !6623
  %node4 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %6, i32 0, i32 1, !dbg !6624
  %7 = load i32, i32* %node4, align 4, !dbg !6624
  store i32 %7, i32* @primary_device, align 4, !dbg !6625
  %8 = load i32, i32* @first_fb_vc, align 4, !dbg !6626
  store i32 %8, i32* %i, align 4, !dbg !6628
  br label %for.cond, !dbg !6629

for.cond:                                         ; preds = %for.inc, %if.then
  %9 = load i32, i32* %i, align 4, !dbg !6630
  %10 = load i32, i32* @last_fb_vc, align 4, !dbg !6632
  %cmp5 = icmp sle i32 %9, %10, !dbg !6633
  br i1 %cmp5, label %for.body, label %for.end, !dbg !6634

for.body:                                         ; preds = %for.cond
  %11 = load i32, i32* @primary_device, align 4, !dbg !6635
  %conv = trunc i32 %11 to i8, !dbg !6635
  %12 = load i32, i32* %i, align 4, !dbg !6636
  %idxprom = sext i32 %12 to i64, !dbg !6637
  %arrayidx = getelementptr [63 x i8], [63 x i8]* @con2fb_map_boot, i64 0, i64 %idxprom, !dbg !6637
  store i8 %conv, i8* %arrayidx, align 1, !dbg !6638
  br label %for.inc, !dbg !6637

for.inc:                                          ; preds = %for.body
  %13 = load i32, i32* %i, align 4, !dbg !6639
  %inc = add i32 %13, 1, !dbg !6639
  store i32 %inc, i32* %i, align 4, !dbg !6639
  br label %for.cond, !dbg !6640, !llvm.loop !6641

for.end:                                          ; preds = %for.cond
  %call6 = call i32 @con_is_bound(%struct.consw* @fb_con) #10, !dbg !6643
  %tobool7 = icmp ne i32 %call6, 0, !dbg !6643
  br i1 %tobool7, label %if.then8, label %if.end, !dbg !6645

if.then8:                                         ; preds = %for.end
  %14 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !6646
  %node9 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %14, i32 0, i32 1, !dbg !6648
  %15 = load i32, i32* %node9, align 4, !dbg !6648
  %16 = load i32, i32* @first_fb_vc, align 4, !dbg !6649
  %add = add i32 %16, 1, !dbg !6650
  %17 = load i32, i32* @last_fb_vc, align 4, !dbg !6651
  %add10 = add i32 %17, 1, !dbg !6652
  %call11 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 %15, i32 %add, i32 %add10) #11, !dbg !6653
  %18 = load i32, i32* @primary_device, align 4, !dbg !6654
  store i32 %18, i32* @info_idx, align 4, !dbg !6655
  br label %if.end, !dbg !6656

if.end:                                           ; preds = %if.then8, %for.end
  br label %if.end12, !dbg !6657

if.end12:                                         ; preds = %if.end, %land.lhs.true1, %land.lhs.true, %entry
  ret void, !dbg !6658
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @do_fbcon_takeover(i32 %show_logo) #1 !dbg !6659 {
entry:
  %retval = alloca i32, align 4
  %show_logo.addr = alloca i32, align 4
  %err = alloca i32, align 4
  %i = alloca i32, align 4
  store i32 %show_logo, i32* %show_logo.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %show_logo.addr, metadata !6660, metadata !DIExpression()), !dbg !6661
  call void @llvm.dbg.declare(metadata i32* %err, metadata !6662, metadata !DIExpression()), !dbg !6663
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6664, metadata !DIExpression()), !dbg !6665
  %0 = load i32, i32* @num_registered_fb, align 4, !dbg !6666
  %tobool = icmp ne i32 %0, 0, !dbg !6666
  br i1 %tobool, label %if.end, label %if.then, !dbg !6668

if.then:                                          ; preds = %entry
  store i32 -19, i32* %retval, align 4, !dbg !6669
  br label %return, !dbg !6669

if.end:                                           ; preds = %entry
  %1 = load i32, i32* %show_logo.addr, align 4, !dbg !6670
  %tobool1 = icmp ne i32 %1, 0, !dbg !6670
  br i1 %tobool1, label %if.end3, label %if.then2, !dbg !6672

if.then2:                                         ; preds = %if.end
  store i32 -3, i32* @logo_shown, align 4, !dbg !6673
  br label %if.end3, !dbg !6674

if.end3:                                          ; preds = %if.then2, %if.end
  %2 = load i32, i32* @first_fb_vc, align 4, !dbg !6675
  store i32 %2, i32* %i, align 4, !dbg !6677
  br label %for.cond, !dbg !6678

for.cond:                                         ; preds = %for.inc, %if.end3
  %3 = load i32, i32* %i, align 4, !dbg !6679
  %4 = load i32, i32* @last_fb_vc, align 4, !dbg !6681
  %cmp = icmp sle i32 %3, %4, !dbg !6682
  br i1 %cmp, label %for.body, label %for.end, !dbg !6683

for.body:                                         ; preds = %for.cond
  %5 = load i32, i32* @info_idx, align 4, !dbg !6684
  %conv = trunc i32 %5 to i8, !dbg !6684
  %6 = load i32, i32* %i, align 4, !dbg !6685
  %idxprom = sext i32 %6 to i64, !dbg !6686
  %arrayidx = getelementptr [63 x i8], [63 x i8]* @con2fb_map, i64 0, i64 %idxprom, !dbg !6686
  store i8 %conv, i8* %arrayidx, align 1, !dbg !6687
  br label %for.inc, !dbg !6686

for.inc:                                          ; preds = %for.body
  %7 = load i32, i32* %i, align 4, !dbg !6688
  %inc = add i32 %7, 1, !dbg !6688
  store i32 %inc, i32* %i, align 4, !dbg !6688
  br label %for.cond, !dbg !6689, !llvm.loop !6690

for.end:                                          ; preds = %for.cond
  %8 = load i32, i32* @first_fb_vc, align 4, !dbg !6692
  %9 = load i32, i32* @last_fb_vc, align 4, !dbg !6693
  %10 = load i32, i32* @fbcon_is_default, align 4, !dbg !6694
  %call = call i32 @do_take_over_console(%struct.consw* @fb_con, i32 %8, i32 %9, i32 %10) #10, !dbg !6695
  store i32 %call, i32* %err, align 4, !dbg !6696
  %11 = load i32, i32* %err, align 4, !dbg !6697
  %tobool4 = icmp ne i32 %11, 0, !dbg !6697
  br i1 %tobool4, label %if.then5, label %if.else, !dbg !6699

if.then5:                                         ; preds = %for.end
  %12 = load i32, i32* @first_fb_vc, align 4, !dbg !6700
  store i32 %12, i32* %i, align 4, !dbg !6703
  br label %for.cond6, !dbg !6704

for.cond6:                                        ; preds = %for.inc12, %if.then5
  %13 = load i32, i32* %i, align 4, !dbg !6705
  %14 = load i32, i32* @last_fb_vc, align 4, !dbg !6707
  %cmp7 = icmp sle i32 %13, %14, !dbg !6708
  br i1 %cmp7, label %for.body9, label %for.end14, !dbg !6709

for.body9:                                        ; preds = %for.cond6
  %15 = load i32, i32* %i, align 4, !dbg !6710
  %idxprom10 = sext i32 %15 to i64, !dbg !6711
  %arrayidx11 = getelementptr [63 x i8], [63 x i8]* @con2fb_map, i64 0, i64 %idxprom10, !dbg !6711
  store i8 -1, i8* %arrayidx11, align 1, !dbg !6712
  br label %for.inc12, !dbg !6711

for.inc12:                                        ; preds = %for.body9
  %16 = load i32, i32* %i, align 4, !dbg !6713
  %inc13 = add i32 %16, 1, !dbg !6713
  store i32 %inc13, i32* %i, align 4, !dbg !6713
  br label %for.cond6, !dbg !6714, !llvm.loop !6715

for.end14:                                        ; preds = %for.cond6
  store i32 -1, i32* @info_idx, align 4, !dbg !6717
  br label %if.end15, !dbg !6718

if.else:                                          ; preds = %for.end
  store i32 1, i32* @fbcon_has_console_bind, align 4, !dbg !6719
  br label %if.end15

if.end15:                                         ; preds = %if.else, %for.end14
  %17 = load i32, i32* %err, align 4, !dbg !6721
  store i32 %17, i32* %retval, align 4, !dbg !6722
  br label %return, !dbg !6722

return:                                           ; preds = %if.end15, %if.then
  %18 = load i32, i32* %retval, align 4, !dbg !6723
  ret i32 %18, !dbg !6723
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @fbcon_fb_blanked(%struct.fb_info* %info, i32 %blank) #1 !dbg !6724 {
entry:
  %info.addr = alloca %struct.fb_info*, align 8
  %blank.addr = alloca i32, align 4
  %ops = alloca %struct.fbcon_ops*, align 8
  %vc = alloca %struct.vc_data*, align 8
  store %struct.fb_info* %info, %struct.fb_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fb_info** %info.addr, metadata !6727, metadata !DIExpression()), !dbg !6728
  store i32 %blank, i32* %blank.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %blank.addr, metadata !6729, metadata !DIExpression()), !dbg !6730
  call void @llvm.dbg.declare(metadata %struct.fbcon_ops** %ops, metadata !6731, metadata !DIExpression()), !dbg !6732
  %0 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !6733
  %fbcon_par = getelementptr inbounds %struct.fb_info, %struct.fb_info* %0, i32 0, i32 29, !dbg !6734
  %1 = load i8*, i8** %fbcon_par, align 8, !dbg !6734
  %2 = bitcast i8* %1 to %struct.fbcon_ops*, !dbg !6733
  store %struct.fbcon_ops* %2, %struct.fbcon_ops** %ops, align 8, !dbg !6732
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc, metadata !6735, metadata !DIExpression()), !dbg !6736
  %3 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !6737
  %tobool = icmp ne %struct.fbcon_ops* %3, null, !dbg !6737
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !6739

lor.lhs.false:                                    ; preds = %entry
  %4 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !6740
  %currcon = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %4, i32 0, i32 12, !dbg !6741
  %5 = load i32, i32* %currcon, align 8, !dbg !6741
  %cmp = icmp slt i32 %5, 0, !dbg !6742
  br i1 %cmp, label %if.then, label %if.end, !dbg !6743

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %return, !dbg !6744

if.end:                                           ; preds = %lor.lhs.false
  %6 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !6745
  %currcon1 = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %6, i32 0, i32 12, !dbg !6746
  %7 = load i32, i32* %currcon1, align 8, !dbg !6746
  %idxprom = sext i32 %7 to i64, !dbg !6747
  %arrayidx = getelementptr [63 x %struct.vc], [63 x %struct.vc]* @vc_cons, i64 0, i64 %idxprom, !dbg !6747
  %d = getelementptr inbounds %struct.vc, %struct.vc* %arrayidx, i32 0, i32 0, !dbg !6748
  %8 = load %struct.vc_data*, %struct.vc_data** %d, align 8, !dbg !6748
  store %struct.vc_data* %8, %struct.vc_data** %vc, align 8, !dbg !6749
  %9 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !6750
  %vc_mode = getelementptr inbounds %struct.vc_data, %struct.vc_data* %9, i32 0, i32 16, !dbg !6752
  %10 = load i8, i8* %vc_mode, align 4, !dbg !6752
  %conv = zext i8 %10 to i32, !dbg !6750
  %cmp2 = icmp ne i32 %conv, 0, !dbg !6753
  br i1 %cmp2, label %if.then12, label %lor.lhs.false4, !dbg !6754

lor.lhs.false4:                                   ; preds = %if.end
  %11 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !6755
  %currcon5 = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %11, i32 0, i32 12, !dbg !6756
  %12 = load i32, i32* %currcon5, align 8, !dbg !6756
  %idxprom6 = sext i32 %12 to i64, !dbg !6757
  %arrayidx7 = getelementptr [63 x i8], [63 x i8]* @con2fb_map, i64 0, i64 %idxprom6, !dbg !6757
  %13 = load i8, i8* %arrayidx7, align 1, !dbg !6757
  %idxprom8 = sext i8 %13 to i64, !dbg !6758
  %arrayidx9 = getelementptr [32 x %struct.fb_info*], [32 x %struct.fb_info*]* @registered_fb, i64 0, i64 %idxprom8, !dbg !6758
  %14 = load %struct.fb_info*, %struct.fb_info** %arrayidx9, align 8, !dbg !6758
  %15 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !6759
  %cmp10 = icmp ne %struct.fb_info* %14, %15, !dbg !6760
  br i1 %cmp10, label %if.then12, label %if.end13, !dbg !6761

if.then12:                                        ; preds = %lor.lhs.false4, %if.end
  br label %return, !dbg !6762

if.end13:                                         ; preds = %lor.lhs.false4
  %16 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !6763
  %call = call zeroext i1 @con_is_visible(%struct.vc_data* %16) #10, !dbg !6765
  br i1 %call, label %if.then14, label %if.end18, !dbg !6766

if.then14:                                        ; preds = %if.end13
  %17 = load i32, i32* %blank.addr, align 4, !dbg !6767
  %tobool15 = icmp ne i32 %17, 0, !dbg !6767
  br i1 %tobool15, label %if.then16, label %if.else, !dbg !6770

if.then16:                                        ; preds = %if.then14
  call void @do_blank_screen(i32 0) #10, !dbg !6771
  br label %if.end17, !dbg !6771

if.else:                                          ; preds = %if.then14
  call void @do_unblank_screen(i32 0) #10, !dbg !6772
  br label %if.end17

if.end17:                                         ; preds = %if.else, %if.then16
  br label %if.end18, !dbg !6773

if.end18:                                         ; preds = %if.end17, %if.end13
  %18 = load i32, i32* %blank.addr, align 4, !dbg !6774
  %19 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !6775
  %blank_state = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %19, i32 0, i32 16, !dbg !6776
  store i32 %18, i32* %blank_state, align 8, !dbg !6777
  br label %return, !dbg !6778

return:                                           ; preds = %if.end18, %if.then12, %if.then
  ret void, !dbg !6778
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @con_is_visible(%struct.vc_data*) #3

; Function Attrs: noredzone
declare dso_local void @do_blank_screen(i32) #3

; Function Attrs: noredzone
declare dso_local void @do_unblank_screen(i32) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @fbcon_new_modelist(%struct.fb_info* %info) #1 !dbg !6779 {
entry:
  %info.addr = alloca %struct.fb_info*, align 8
  %i = alloca i32, align 4
  %vc = alloca %struct.vc_data*, align 8
  %var = alloca %struct.fb_var_screeninfo, align 4
  %mode = alloca %struct.fb_videomode*, align 8
  store %struct.fb_info* %info, %struct.fb_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fb_info** %info.addr, metadata !6780, metadata !DIExpression()), !dbg !6781
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6782, metadata !DIExpression()), !dbg !6783
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc, metadata !6784, metadata !DIExpression()), !dbg !6785
  call void @llvm.dbg.declare(metadata %struct.fb_var_screeninfo* %var, metadata !6786, metadata !DIExpression()), !dbg !6787
  call void @llvm.dbg.declare(metadata %struct.fb_videomode** %mode, metadata !6788, metadata !DIExpression()), !dbg !6789
  %0 = load i32, i32* @first_fb_vc, align 4, !dbg !6790
  store i32 %0, i32* %i, align 4, !dbg !6792
  br label %for.cond, !dbg !6793

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %i, align 4, !dbg !6794
  %2 = load i32, i32* @last_fb_vc, align 4, !dbg !6796
  %cmp = icmp sle i32 %1, %2, !dbg !6797
  br i1 %cmp, label %for.body, label %for.end, !dbg !6798

for.body:                                         ; preds = %for.cond
  %3 = load i32, i32* %i, align 4, !dbg !6799
  %idxprom = sext i32 %3 to i64, !dbg !6802
  %arrayidx = getelementptr [63 x i8], [63 x i8]* @con2fb_map, i64 0, i64 %idxprom, !dbg !6802
  %4 = load i8, i8* %arrayidx, align 1, !dbg !6802
  %idxprom1 = sext i8 %4 to i64, !dbg !6803
  %arrayidx2 = getelementptr [32 x %struct.fb_info*], [32 x %struct.fb_info*]* @registered_fb, i64 0, i64 %idxprom1, !dbg !6803
  %5 = load %struct.fb_info*, %struct.fb_info** %arrayidx2, align 8, !dbg !6803
  %6 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !6804
  %cmp3 = icmp ne %struct.fb_info* %5, %6, !dbg !6805
  br i1 %cmp3, label %if.then, label %if.end, !dbg !6806

if.then:                                          ; preds = %for.body
  br label %for.inc, !dbg !6807

if.end:                                           ; preds = %for.body
  %7 = load i32, i32* %i, align 4, !dbg !6808
  %idxprom4 = sext i32 %7 to i64, !dbg !6810
  %arrayidx5 = getelementptr [63 x %struct.fbcon_display], [63 x %struct.fbcon_display]* @fb_display, i64 0, i64 %idxprom4, !dbg !6810
  %mode6 = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %arrayidx5, i32 0, i32 21, !dbg !6811
  %8 = load %struct.fb_videomode*, %struct.fb_videomode** %mode6, align 8, !dbg !6811
  %tobool = icmp ne %struct.fb_videomode* %8, null, !dbg !6810
  br i1 %tobool, label %if.end8, label %if.then7, !dbg !6812

if.then7:                                         ; preds = %if.end
  br label %for.inc, !dbg !6813

if.end8:                                          ; preds = %if.end
  %9 = load i32, i32* %i, align 4, !dbg !6814
  %idxprom9 = sext i32 %9 to i64, !dbg !6815
  %arrayidx10 = getelementptr [63 x %struct.vc], [63 x %struct.vc]* @vc_cons, i64 0, i64 %idxprom9, !dbg !6815
  %d = getelementptr inbounds %struct.vc, %struct.vc* %arrayidx10, i32 0, i32 0, !dbg !6816
  %10 = load %struct.vc_data*, %struct.vc_data** %d, align 8, !dbg !6816
  store %struct.vc_data* %10, %struct.vc_data** %vc, align 8, !dbg !6817
  %11 = load i32, i32* %i, align 4, !dbg !6818
  %idxprom11 = sext i32 %11 to i64, !dbg !6819
  %arrayidx12 = getelementptr [63 x %struct.fbcon_display], [63 x %struct.fbcon_display]* @fb_display, i64 0, i64 %idxprom11, !dbg !6819
  call void @display_to_var(%struct.fb_var_screeninfo* %var, %struct.fbcon_display* %arrayidx12) #10, !dbg !6820
  %12 = load i32, i32* %i, align 4, !dbg !6821
  %idxprom13 = sext i32 %12 to i64, !dbg !6822
  %arrayidx14 = getelementptr [63 x %struct.fbcon_display], [63 x %struct.fbcon_display]* @fb_display, i64 0, i64 %idxprom13, !dbg !6822
  %mode15 = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %arrayidx14, i32 0, i32 21, !dbg !6823
  %13 = load %struct.fb_videomode*, %struct.fb_videomode** %mode15, align 8, !dbg !6823
  %14 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !6824
  %modelist = getelementptr inbounds %struct.fb_info, %struct.fb_info* %14, i32 0, i32 13, !dbg !6825
  %call = call %struct.fb_videomode* @fb_find_nearest_mode(%struct.fb_videomode* %13, %struct.list_head* %modelist) #10, !dbg !6826
  store %struct.fb_videomode* %call, %struct.fb_videomode** %mode, align 8, !dbg !6827
  %15 = load %struct.fb_videomode*, %struct.fb_videomode** %mode, align 8, !dbg !6828
  call void @fb_videomode_to_var(%struct.fb_var_screeninfo* %var, %struct.fb_videomode* %15) #10, !dbg !6829
  %16 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !6830
  %17 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !6831
  %vc_num = getelementptr inbounds %struct.vc_data, %struct.vc_data* %17, i32 0, i32 3, !dbg !6832
  %18 = load i16, i16* %vc_num, align 8, !dbg !6832
  %conv = zext i16 %18 to i32, !dbg !6831
  call void @fbcon_set_disp(%struct.fb_info* %16, %struct.fb_var_screeninfo* %var, i32 %conv) #10, !dbg !6833
  br label %for.inc, !dbg !6834

for.inc:                                          ; preds = %if.end8, %if.then7, %if.then
  %19 = load i32, i32* %i, align 4, !dbg !6835
  %inc = add i32 %19, 1, !dbg !6835
  store i32 %inc, i32* %i, align 4, !dbg !6835
  br label %for.cond, !dbg !6836, !llvm.loop !6837

for.end:                                          ; preds = %for.cond
  ret void, !dbg !6839
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @display_to_var(%struct.fb_var_screeninfo* %var, %struct.fbcon_display* %disp) #1 !dbg !6840 {
entry:
  %var.addr = alloca %struct.fb_var_screeninfo*, align 8
  %disp.addr = alloca %struct.fbcon_display*, align 8
  store %struct.fb_var_screeninfo* %var, %struct.fb_var_screeninfo** %var.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fb_var_screeninfo** %var.addr, metadata !6843, metadata !DIExpression()), !dbg !6844
  store %struct.fbcon_display* %disp, %struct.fbcon_display** %disp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fbcon_display** %disp.addr, metadata !6845, metadata !DIExpression()), !dbg !6846
  %0 = load %struct.fb_var_screeninfo*, %struct.fb_var_screeninfo** %var.addr, align 8, !dbg !6847
  %1 = load %struct.fbcon_display*, %struct.fbcon_display** %disp.addr, align 8, !dbg !6848
  %mode = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %1, i32 0, i32 21, !dbg !6849
  %2 = load %struct.fb_videomode*, %struct.fb_videomode** %mode, align 8, !dbg !6849
  call void @fb_videomode_to_var(%struct.fb_var_screeninfo* %0, %struct.fb_videomode* %2) #10, !dbg !6850
  %3 = load %struct.fbcon_display*, %struct.fbcon_display** %disp.addr, align 8, !dbg !6851
  %xres_virtual = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %3, i32 0, i32 8, !dbg !6852
  %4 = load i32, i32* %xres_virtual, align 8, !dbg !6852
  %5 = load %struct.fb_var_screeninfo*, %struct.fb_var_screeninfo** %var.addr, align 8, !dbg !6853
  %xres_virtual1 = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %5, i32 0, i32 2, !dbg !6854
  store i32 %4, i32* %xres_virtual1, align 4, !dbg !6855
  %6 = load %struct.fbcon_display*, %struct.fbcon_display** %disp.addr, align 8, !dbg !6856
  %yres_virtual = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %6, i32 0, i32 9, !dbg !6857
  %7 = load i32, i32* %yres_virtual, align 4, !dbg !6857
  %8 = load %struct.fb_var_screeninfo*, %struct.fb_var_screeninfo** %var.addr, align 8, !dbg !6858
  %yres_virtual2 = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %8, i32 0, i32 3, !dbg !6859
  store i32 %7, i32* %yres_virtual2, align 4, !dbg !6860
  %9 = load %struct.fbcon_display*, %struct.fbcon_display** %disp.addr, align 8, !dbg !6861
  %bits_per_pixel = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %9, i32 0, i32 12, !dbg !6862
  %10 = load i32, i32* %bits_per_pixel, align 8, !dbg !6862
  %11 = load %struct.fb_var_screeninfo*, %struct.fb_var_screeninfo** %var.addr, align 8, !dbg !6863
  %bits_per_pixel3 = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %11, i32 0, i32 6, !dbg !6864
  store i32 %10, i32* %bits_per_pixel3, align 4, !dbg !6865
  %12 = load %struct.fbcon_display*, %struct.fbcon_display** %disp.addr, align 8, !dbg !6866
  %grayscale = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %12, i32 0, i32 13, !dbg !6867
  %13 = load i32, i32* %grayscale, align 4, !dbg !6867
  %14 = load %struct.fb_var_screeninfo*, %struct.fb_var_screeninfo** %var.addr, align 8, !dbg !6868
  %grayscale4 = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %14, i32 0, i32 7, !dbg !6869
  store i32 %13, i32* %grayscale4, align 4, !dbg !6870
  %15 = load %struct.fbcon_display*, %struct.fbcon_display** %disp.addr, align 8, !dbg !6871
  %nonstd = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %15, i32 0, i32 14, !dbg !6872
  %16 = load i32, i32* %nonstd, align 8, !dbg !6872
  %17 = load %struct.fb_var_screeninfo*, %struct.fb_var_screeninfo** %var.addr, align 8, !dbg !6873
  %nonstd5 = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %17, i32 0, i32 12, !dbg !6874
  store i32 %16, i32* %nonstd5, align 4, !dbg !6875
  %18 = load %struct.fbcon_display*, %struct.fbcon_display** %disp.addr, align 8, !dbg !6876
  %accel_flags = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %18, i32 0, i32 15, !dbg !6877
  %19 = load i32, i32* %accel_flags, align 4, !dbg !6877
  %20 = load %struct.fb_var_screeninfo*, %struct.fb_var_screeninfo** %var.addr, align 8, !dbg !6878
  %accel_flags6 = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %20, i32 0, i32 16, !dbg !6879
  store i32 %19, i32* %accel_flags6, align 4, !dbg !6880
  %21 = load %struct.fbcon_display*, %struct.fbcon_display** %disp.addr, align 8, !dbg !6881
  %height = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %21, i32 0, i32 10, !dbg !6882
  %22 = load i32, i32* %height, align 8, !dbg !6882
  %23 = load %struct.fb_var_screeninfo*, %struct.fb_var_screeninfo** %var.addr, align 8, !dbg !6883
  %height7 = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %23, i32 0, i32 14, !dbg !6884
  store i32 %22, i32* %height7, align 4, !dbg !6885
  %24 = load %struct.fbcon_display*, %struct.fbcon_display** %disp.addr, align 8, !dbg !6886
  %width = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %24, i32 0, i32 11, !dbg !6887
  %25 = load i32, i32* %width, align 4, !dbg !6887
  %26 = load %struct.fb_var_screeninfo*, %struct.fb_var_screeninfo** %var.addr, align 8, !dbg !6888
  %width8 = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %26, i32 0, i32 15, !dbg !6889
  store i32 %25, i32* %width8, align 4, !dbg !6890
  %27 = load %struct.fb_var_screeninfo*, %struct.fb_var_screeninfo** %var.addr, align 8, !dbg !6891
  %red = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %27, i32 0, i32 8, !dbg !6892
  %28 = load %struct.fbcon_display*, %struct.fbcon_display** %disp.addr, align 8, !dbg !6893
  %red9 = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %28, i32 0, i32 17, !dbg !6894
  %29 = bitcast %struct.fb_bitfield* %red to i8*, !dbg !6894
  %30 = bitcast %struct.fb_bitfield* %red9 to i8*, !dbg !6894
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %29, i8* align 4 %30, i64 12, i1 false), !dbg !6894
  %31 = load %struct.fb_var_screeninfo*, %struct.fb_var_screeninfo** %var.addr, align 8, !dbg !6895
  %green = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %31, i32 0, i32 9, !dbg !6896
  %32 = load %struct.fbcon_display*, %struct.fbcon_display** %disp.addr, align 8, !dbg !6897
  %green10 = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %32, i32 0, i32 18, !dbg !6898
  %33 = bitcast %struct.fb_bitfield* %green to i8*, !dbg !6898
  %34 = bitcast %struct.fb_bitfield* %green10 to i8*, !dbg !6898
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %33, i8* align 8 %34, i64 12, i1 false), !dbg !6898
  %35 = load %struct.fb_var_screeninfo*, %struct.fb_var_screeninfo** %var.addr, align 8, !dbg !6899
  %blue = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %35, i32 0, i32 10, !dbg !6900
  %36 = load %struct.fbcon_display*, %struct.fbcon_display** %disp.addr, align 8, !dbg !6901
  %blue11 = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %36, i32 0, i32 19, !dbg !6902
  %37 = bitcast %struct.fb_bitfield* %blue to i8*, !dbg !6902
  %38 = bitcast %struct.fb_bitfield* %blue11 to i8*, !dbg !6902
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %37, i8* align 4 %38, i64 12, i1 false), !dbg !6902
  %39 = load %struct.fb_var_screeninfo*, %struct.fb_var_screeninfo** %var.addr, align 8, !dbg !6903
  %transp = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %39, i32 0, i32 11, !dbg !6904
  %40 = load %struct.fbcon_display*, %struct.fbcon_display** %disp.addr, align 8, !dbg !6905
  %transp12 = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %40, i32 0, i32 20, !dbg !6906
  %41 = bitcast %struct.fb_bitfield* %transp to i8*, !dbg !6906
  %42 = bitcast %struct.fb_bitfield* %transp12 to i8*, !dbg !6906
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %41, i8* align 8 %42, i64 12, i1 false), !dbg !6906
  %43 = load %struct.fbcon_display*, %struct.fbcon_display** %disp.addr, align 8, !dbg !6907
  %rotate = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %43, i32 0, i32 16, !dbg !6908
  %44 = load i32, i32* %rotate, align 8, !dbg !6908
  %45 = load %struct.fb_var_screeninfo*, %struct.fb_var_screeninfo** %var.addr, align 8, !dbg !6909
  %rotate13 = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %45, i32 0, i32 26, !dbg !6910
  store i32 %44, i32* %rotate13, align 4, !dbg !6911
  ret void, !dbg !6912
}

; Function Attrs: noredzone
declare dso_local %struct.fb_videomode* @fb_find_nearest_mode(%struct.fb_videomode*, %struct.list_head*) #3

; Function Attrs: noredzone
declare dso_local void @fb_videomode_to_var(%struct.fb_var_screeninfo*, %struct.fb_videomode*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @fbcon_set_disp(%struct.fb_info* %info, %struct.fb_var_screeninfo* %var, i32 %unit) #1 !dbg !6913 {
entry:
  %info.addr = alloca %struct.fb_info*, align 8
  %var.addr = alloca %struct.fb_var_screeninfo*, align 8
  %unit.addr = alloca i32, align 4
  %p = alloca %struct.fbcon_display*, align 8
  %t = alloca %struct.fbcon_display*, align 8
  %default_mode = alloca %struct.vc_data**, align 8
  %vc = alloca %struct.vc_data*, align 8
  %svc = alloca %struct.vc_data*, align 8
  %ops = alloca %struct.fbcon_ops*, align 8
  %rows = alloca i32, align 4
  %cols = alloca i32, align 4
  %charcnt = alloca i32, align 4
  %_r = alloca i32, align 4
  %_v = alloca i32, align 4
  %tmp = alloca i32, align 4
  %_r85 = alloca i32, align 4
  %_v88 = alloca i32, align 4
  %tmp93 = alloca i32, align 4
  store %struct.fb_info* %info, %struct.fb_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fb_info** %info.addr, metadata !6916, metadata !DIExpression()), !dbg !6917
  store %struct.fb_var_screeninfo* %var, %struct.fb_var_screeninfo** %var.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fb_var_screeninfo** %var.addr, metadata !6918, metadata !DIExpression()), !dbg !6919
  store i32 %unit, i32* %unit.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %unit.addr, metadata !6920, metadata !DIExpression()), !dbg !6921
  call void @llvm.dbg.declare(metadata %struct.fbcon_display** %p, metadata !6922, metadata !DIExpression()), !dbg !6923
  call void @llvm.dbg.declare(metadata %struct.fbcon_display** %t, metadata !6924, metadata !DIExpression()), !dbg !6925
  call void @llvm.dbg.declare(metadata %struct.vc_data*** %default_mode, metadata !6926, metadata !DIExpression()), !dbg !6927
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc, metadata !6928, metadata !DIExpression()), !dbg !6929
  call void @llvm.dbg.declare(metadata %struct.vc_data** %svc, metadata !6930, metadata !DIExpression()), !dbg !6931
  call void @llvm.dbg.declare(metadata %struct.fbcon_ops** %ops, metadata !6932, metadata !DIExpression()), !dbg !6933
  %0 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !6934
  %fbcon_par = getelementptr inbounds %struct.fb_info, %struct.fb_info* %0, i32 0, i32 29, !dbg !6935
  %1 = load i8*, i8** %fbcon_par, align 8, !dbg !6935
  %2 = bitcast i8* %1 to %struct.fbcon_ops*, !dbg !6934
  store %struct.fbcon_ops* %2, %struct.fbcon_ops** %ops, align 8, !dbg !6933
  call void @llvm.dbg.declare(metadata i32* %rows, metadata !6936, metadata !DIExpression()), !dbg !6937
  call void @llvm.dbg.declare(metadata i32* %cols, metadata !6938, metadata !DIExpression()), !dbg !6939
  call void @llvm.dbg.declare(metadata i32* %charcnt, metadata !6940, metadata !DIExpression()), !dbg !6941
  store i32 256, i32* %charcnt, align 4, !dbg !6941
  %3 = load i32, i32* %unit.addr, align 4, !dbg !6942
  %idxprom = sext i32 %3 to i64, !dbg !6943
  %arrayidx = getelementptr [63 x %struct.fbcon_display], [63 x %struct.fbcon_display]* @fb_display, i64 0, i64 %idxprom, !dbg !6943
  store %struct.fbcon_display* %arrayidx, %struct.fbcon_display** %p, align 8, !dbg !6944
  %4 = load %struct.fbcon_display*, %struct.fbcon_display** %p, align 8, !dbg !6945
  %5 = load %struct.fb_var_screeninfo*, %struct.fb_var_screeninfo** %var.addr, align 8, !dbg !6947
  %6 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !6948
  %call = call i32 @var_to_display(%struct.fbcon_display* %4, %struct.fb_var_screeninfo* %5, %struct.fb_info* %6) #10, !dbg !6949
  %tobool = icmp ne i32 %call, 0, !dbg !6949
  br i1 %tobool, label %if.then, label %if.end, !dbg !6950

if.then:                                          ; preds = %entry
  br label %if.end113, !dbg !6951

if.end:                                           ; preds = %entry
  %7 = load i32, i32* %unit.addr, align 4, !dbg !6952
  %idxprom1 = sext i32 %7 to i64, !dbg !6953
  %arrayidx2 = getelementptr [63 x %struct.vc], [63 x %struct.vc]* @vc_cons, i64 0, i64 %idxprom1, !dbg !6953
  %d = getelementptr inbounds %struct.vc, %struct.vc* %arrayidx2, i32 0, i32 0, !dbg !6954
  %8 = load %struct.vc_data*, %struct.vc_data** %d, align 8, !dbg !6954
  store %struct.vc_data* %8, %struct.vc_data** %vc, align 8, !dbg !6955
  %9 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !6956
  %tobool3 = icmp ne %struct.vc_data* %9, null, !dbg !6956
  br i1 %tobool3, label %if.end5, label %if.then4, !dbg !6958

if.then4:                                         ; preds = %if.end
  br label %if.end113, !dbg !6959

if.end5:                                          ; preds = %if.end
  %10 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !6960
  %vc_display_fg = getelementptr inbounds %struct.vc_data, %struct.vc_data* %10, i32 0, i32 46, !dbg !6961
  %11 = load %struct.vc_data**, %struct.vc_data*** %vc_display_fg, align 8, !dbg !6961
  store %struct.vc_data** %11, %struct.vc_data*** %default_mode, align 8, !dbg !6962
  %12 = load %struct.vc_data**, %struct.vc_data*** %default_mode, align 8, !dbg !6963
  %13 = load %struct.vc_data*, %struct.vc_data** %12, align 8, !dbg !6964
  store %struct.vc_data* %13, %struct.vc_data** %svc, align 8, !dbg !6965
  %14 = load %struct.vc_data*, %struct.vc_data** %svc, align 8, !dbg !6966
  %vc_num = getelementptr inbounds %struct.vc_data, %struct.vc_data* %14, i32 0, i32 3, !dbg !6967
  %15 = load i16, i16* %vc_num, align 8, !dbg !6967
  %idxprom6 = zext i16 %15 to i64, !dbg !6968
  %arrayidx7 = getelementptr [63 x %struct.fbcon_display], [63 x %struct.fbcon_display]* @fb_display, i64 0, i64 %idxprom6, !dbg !6968
  store %struct.fbcon_display* %arrayidx7, %struct.fbcon_display** %t, align 8, !dbg !6969
  %16 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !6970
  %vc_font = getelementptr inbounds %struct.vc_data, %struct.vc_data* %16, i32 0, i32 27, !dbg !6972
  %data = getelementptr inbounds %struct.console_font, %struct.console_font* %vc_font, i32 0, i32 3, !dbg !6973
  %17 = load i8*, i8** %data, align 8, !dbg !6973
  %tobool8 = icmp ne i8* %17, null, !dbg !6970
  br i1 %tobool8, label %if.end26, label %if.then9, !dbg !6974

if.then9:                                         ; preds = %if.end5
  %18 = load %struct.fbcon_display*, %struct.fbcon_display** %t, align 8, !dbg !6975
  %fontdata = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %18, i32 0, i32 0, !dbg !6977
  %19 = load i8*, i8** %fontdata, align 8, !dbg !6977
  %20 = load %struct.fbcon_display*, %struct.fbcon_display** %p, align 8, !dbg !6978
  %fontdata10 = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %20, i32 0, i32 0, !dbg !6979
  store i8* %19, i8** %fontdata10, align 8, !dbg !6980
  %21 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !6981
  %vc_font11 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %21, i32 0, i32 27, !dbg !6982
  %data12 = getelementptr inbounds %struct.console_font, %struct.console_font* %vc_font11, i32 0, i32 3, !dbg !6983
  store i8* %19, i8** %data12, align 8, !dbg !6984
  %22 = load %struct.vc_data**, %struct.vc_data*** %default_mode, align 8, !dbg !6985
  %23 = load %struct.vc_data*, %struct.vc_data** %22, align 8, !dbg !6986
  %vc_font13 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %23, i32 0, i32 27, !dbg !6987
  %width = getelementptr inbounds %struct.console_font, %struct.console_font* %vc_font13, i32 0, i32 0, !dbg !6988
  %24 = load i32, i32* %width, align 8, !dbg !6988
  %25 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !6989
  %vc_font14 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %25, i32 0, i32 27, !dbg !6990
  %width15 = getelementptr inbounds %struct.console_font, %struct.console_font* %vc_font14, i32 0, i32 0, !dbg !6991
  store i32 %24, i32* %width15, align 8, !dbg !6992
  %26 = load %struct.vc_data**, %struct.vc_data*** %default_mode, align 8, !dbg !6993
  %27 = load %struct.vc_data*, %struct.vc_data** %26, align 8, !dbg !6994
  %vc_font16 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %27, i32 0, i32 27, !dbg !6995
  %height = getelementptr inbounds %struct.console_font, %struct.console_font* %vc_font16, i32 0, i32 1, !dbg !6996
  %28 = load i32, i32* %height, align 4, !dbg !6996
  %29 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !6997
  %vc_font17 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %29, i32 0, i32 27, !dbg !6998
  %height18 = getelementptr inbounds %struct.console_font, %struct.console_font* %vc_font17, i32 0, i32 1, !dbg !6999
  store i32 %28, i32* %height18, align 4, !dbg !7000
  %30 = load %struct.fbcon_display*, %struct.fbcon_display** %t, align 8, !dbg !7001
  %userfont = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %30, i32 0, i32 1, !dbg !7002
  %31 = load i32, i32* %userfont, align 8, !dbg !7002
  %32 = load %struct.fbcon_display*, %struct.fbcon_display** %p, align 8, !dbg !7003
  %userfont19 = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %32, i32 0, i32 1, !dbg !7004
  store i32 %31, i32* %userfont19, align 8, !dbg !7005
  %33 = load %struct.fbcon_display*, %struct.fbcon_display** %p, align 8, !dbg !7006
  %userfont20 = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %33, i32 0, i32 1, !dbg !7008
  %34 = load i32, i32* %userfont20, align 8, !dbg !7008
  %tobool21 = icmp ne i32 %34, 0, !dbg !7006
  br i1 %tobool21, label %if.then22, label %if.end25, !dbg !7009

if.then22:                                        ; preds = %if.then9
  %35 = load %struct.fbcon_display*, %struct.fbcon_display** %p, align 8, !dbg !7010
  %fontdata23 = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %35, i32 0, i32 0, !dbg !7010
  %36 = load i8*, i8** %fontdata23, align 8, !dbg !7010
  %37 = bitcast i8* %36 to i32*, !dbg !7010
  %arrayidx24 = getelementptr i32, i32* %37, i64 -1, !dbg !7010
  %38 = load i32, i32* %arrayidx24, align 4, !dbg !7011
  %inc = add i32 %38, 1, !dbg !7011
  store i32 %inc, i32* %arrayidx24, align 4, !dbg !7011
  br label %if.end25, !dbg !7010

if.end25:                                         ; preds = %if.then22, %if.then9
  br label %if.end26, !dbg !7012

if.end26:                                         ; preds = %if.end25, %if.end5
  %39 = load %struct.fbcon_display*, %struct.fbcon_display** %p, align 8, !dbg !7013
  %userfont27 = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %39, i32 0, i32 1, !dbg !7015
  %40 = load i32, i32* %userfont27, align 8, !dbg !7015
  %tobool28 = icmp ne i32 %40, 0, !dbg !7013
  br i1 %tobool28, label %if.then29, label %if.end32, !dbg !7016

if.then29:                                        ; preds = %if.end26
  %41 = load %struct.fbcon_display*, %struct.fbcon_display** %p, align 8, !dbg !7017
  %fontdata30 = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %41, i32 0, i32 0, !dbg !7017
  %42 = load i8*, i8** %fontdata30, align 8, !dbg !7017
  %43 = bitcast i8* %42 to i32*, !dbg !7017
  %arrayidx31 = getelementptr i32, i32* %43, i64 -3, !dbg !7017
  %44 = load i32, i32* %arrayidx31, align 4, !dbg !7017
  store i32 %44, i32* %charcnt, align 4, !dbg !7018
  br label %if.end32, !dbg !7019

if.end32:                                         ; preds = %if.then29, %if.end26
  %45 = load %struct.fb_var_screeninfo*, %struct.fb_var_screeninfo** %var.addr, align 8, !dbg !7020
  %activate = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %45, i32 0, i32 13, !dbg !7021
  store i32 0, i32* %activate, align 4, !dbg !7022
  %46 = load %struct.fb_var_screeninfo*, %struct.fb_var_screeninfo** %var.addr, align 8, !dbg !7023
  %activate33 = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %46, i32 0, i32 13, !dbg !7024
  %47 = load i32, i32* %activate33, align 4, !dbg !7024
  %48 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !7025
  %var34 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %48, i32 0, i32 6, !dbg !7026
  %activate35 = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %var34, i32 0, i32 13, !dbg !7027
  store i32 %47, i32* %activate35, align 4, !dbg !7028
  %49 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !7029
  %var36 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %49, i32 0, i32 6, !dbg !7030
  %yoffset = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %var36, i32 0, i32 5, !dbg !7031
  %50 = load i32, i32* %yoffset, align 4, !dbg !7031
  %51 = load %struct.fb_var_screeninfo*, %struct.fb_var_screeninfo** %var.addr, align 8, !dbg !7032
  %yoffset37 = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %51, i32 0, i32 5, !dbg !7033
  store i32 %50, i32* %yoffset37, align 4, !dbg !7034
  %52 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !7035
  %var38 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %52, i32 0, i32 6, !dbg !7036
  %xoffset = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %var38, i32 0, i32 4, !dbg !7037
  %53 = load i32, i32* %xoffset, align 8, !dbg !7037
  %54 = load %struct.fb_var_screeninfo*, %struct.fb_var_screeninfo** %var.addr, align 8, !dbg !7038
  %xoffset39 = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %54, i32 0, i32 4, !dbg !7039
  store i32 %53, i32* %xoffset39, align 4, !dbg !7040
  %55 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !7041
  %56 = load %struct.fb_var_screeninfo*, %struct.fb_var_screeninfo** %var.addr, align 8, !dbg !7042
  %call40 = call i32 @fb_set_var(%struct.fb_info* %55, %struct.fb_var_screeninfo* %56) #10, !dbg !7043
  %57 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !7044
  %var41 = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %57, i32 0, i32 7, !dbg !7045
  %58 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !7046
  %var42 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %58, i32 0, i32 6, !dbg !7047
  %59 = bitcast %struct.fb_var_screeninfo* %var41 to i8*, !dbg !7047
  %60 = bitcast %struct.fb_var_screeninfo* %var42 to i8*, !dbg !7047
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %59, i8* align 8 %60, i64 160, i1 false), !dbg !7047
  %61 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !7048
  %var43 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %61, i32 0, i32 6, !dbg !7049
  %62 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !7050
  %fix = getelementptr inbounds %struct.fb_info, %struct.fb_info* %62, i32 0, i32 7, !dbg !7051
  %call44 = call i32 @fb_get_color_depth(%struct.fb_var_screeninfo* %var43, %struct.fb_fix_screeninfo* %fix) #10, !dbg !7052
  %cmp = icmp ne i32 %call44, 1, !dbg !7053
  %conv = zext i1 %cmp to i32, !dbg !7053
  %63 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !7054
  %vc_can_do_color = getelementptr inbounds %struct.vc_data, %struct.vc_data* %63, i32 0, i32 36, !dbg !7055
  %64 = trunc i32 %conv to i16, !dbg !7056
  %bf.load = load i16, i16* %vc_can_do_color, align 8, !dbg !7056
  %bf.value = and i16 %64, 1, !dbg !7056
  %bf.shl = shl i16 %bf.value, 11, !dbg !7056
  %bf.clear = and i16 %bf.load, -2049, !dbg !7056
  %bf.set = or i16 %bf.clear, %bf.shl, !dbg !7056
  store i16 %bf.set, i16* %vc_can_do_color, align 8, !dbg !7056
  %bf.result.cast = zext i16 %bf.value to i32, !dbg !7056
  %65 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !7057
  %vc_can_do_color45 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %65, i32 0, i32 36, !dbg !7058
  %bf.load46 = load i16, i16* %vc_can_do_color45, align 8, !dbg !7058
  %bf.lshr = lshr i16 %bf.load46, 11, !dbg !7058
  %bf.clear47 = and i16 %bf.lshr, 1, !dbg !7058
  %bf.cast = zext i16 %bf.clear47 to i32, !dbg !7058
  %tobool48 = icmp ne i32 %bf.cast, 0, !dbg !7057
  %66 = zext i1 %tobool48 to i64, !dbg !7057
  %cond = select i1 %tobool48, i32 30464, i32 2048, !dbg !7057
  %conv49 = trunc i32 %cond to i16, !dbg !7057
  %67 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !7059
  %vc_complement_mask = getelementptr inbounds %struct.vc_data, %struct.vc_data* %67, i32 0, i32 23, !dbg !7060
  store i16 %conv49, i16* %vc_complement_mask, align 8, !dbg !7061
  %68 = load i32, i32* %charcnt, align 4, !dbg !7062
  %cmp50 = icmp eq i32 %68, 256, !dbg !7064
  br i1 %cmp50, label %if.then52, label %if.else, !dbg !7065

if.then52:                                        ; preds = %if.end32
  %69 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !7066
  %vc_hi_font_mask = getelementptr inbounds %struct.vc_data, %struct.vc_data* %69, i32 0, i32 26, !dbg !7068
  store i16 0, i16* %vc_hi_font_mask, align 8, !dbg !7069
  br label %if.end65, !dbg !7070

if.else:                                          ; preds = %if.end32
  %70 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !7071
  %vc_hi_font_mask53 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %70, i32 0, i32 26, !dbg !7073
  store i16 256, i16* %vc_hi_font_mask53, align 8, !dbg !7074
  %71 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !7075
  %vc_can_do_color54 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %71, i32 0, i32 36, !dbg !7077
  %bf.load55 = load i16, i16* %vc_can_do_color54, align 8, !dbg !7077
  %bf.lshr56 = lshr i16 %bf.load55, 11, !dbg !7077
  %bf.clear57 = and i16 %bf.lshr56, 1, !dbg !7077
  %bf.cast58 = zext i16 %bf.clear57 to i32, !dbg !7077
  %tobool59 = icmp ne i32 %bf.cast58, 0, !dbg !7075
  br i1 %tobool59, label %if.then60, label %if.end64, !dbg !7078

if.then60:                                        ; preds = %if.else
  %72 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !7079
  %vc_complement_mask61 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %72, i32 0, i32 23, !dbg !7080
  %73 = load i16, i16* %vc_complement_mask61, align 8, !dbg !7081
  %conv62 = zext i16 %73 to i32, !dbg !7081
  %shl = shl i32 %conv62, 1, !dbg !7081
  %conv63 = trunc i32 %shl to i16, !dbg !7081
  store i16 %conv63, i16* %vc_complement_mask61, align 8, !dbg !7081
  br label %if.end64, !dbg !7079

if.end64:                                         ; preds = %if.then60, %if.else
  br label %if.end65

if.end65:                                         ; preds = %if.end64, %if.then52
  %74 = load %struct.vc_data*, %struct.vc_data** %svc, align 8, !dbg !7082
  %vc_uni_pagedir_loc = getelementptr inbounds %struct.vc_data, %struct.vc_data* %74, i32 0, i32 48, !dbg !7084
  %75 = load %struct.uni_pagedir**, %struct.uni_pagedir*** %vc_uni_pagedir_loc, align 8, !dbg !7084
  %76 = load %struct.uni_pagedir*, %struct.uni_pagedir** %75, align 8, !dbg !7085
  %tobool66 = icmp ne %struct.uni_pagedir* %76, null, !dbg !7085
  br i1 %tobool66, label %if.end69, label %if.then67, !dbg !7086

if.then67:                                        ; preds = %if.end65
  %77 = load %struct.vc_data*, %struct.vc_data** %svc, align 8, !dbg !7087
  %call68 = call i32 @con_set_default_unimap(%struct.vc_data* %77) #10, !dbg !7088
  br label %if.end69, !dbg !7088

if.end69:                                         ; preds = %if.then67, %if.end65
  %78 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !7089
  %vc_uni_pagedir_loc70 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %78, i32 0, i32 48, !dbg !7091
  %79 = load %struct.uni_pagedir**, %struct.uni_pagedir*** %vc_uni_pagedir_loc70, align 8, !dbg !7091
  %80 = load %struct.uni_pagedir*, %struct.uni_pagedir** %79, align 8, !dbg !7092
  %tobool71 = icmp ne %struct.uni_pagedir* %80, null, !dbg !7092
  br i1 %tobool71, label %if.end74, label %if.then72, !dbg !7093

if.then72:                                        ; preds = %if.end69
  %81 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !7094
  %82 = load %struct.vc_data*, %struct.vc_data** %svc, align 8, !dbg !7095
  %call73 = call i32 @con_copy_unimap(%struct.vc_data* %81, %struct.vc_data* %82) #10, !dbg !7096
  br label %if.end74, !dbg !7096

if.end74:                                         ; preds = %if.then72, %if.end69
  call void @llvm.dbg.declare(metadata i32* %_r, metadata !7097, metadata !DIExpression()), !dbg !7099
  %83 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !7099
  %var75 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %83, i32 0, i32 6, !dbg !7099
  %xres = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %var75, i32 0, i32 0, !dbg !7099
  %84 = load i32, i32* %xres, align 8, !dbg !7099
  store i32 %84, i32* %_r, align 4, !dbg !7099
  call void @llvm.dbg.declare(metadata i32* %_v, metadata !7100, metadata !DIExpression()), !dbg !7099
  %85 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !7099
  %var76 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %85, i32 0, i32 6, !dbg !7099
  %yres = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %var76, i32 0, i32 1, !dbg !7099
  %86 = load i32, i32* %yres, align 4, !dbg !7099
  store i32 %86, i32* %_v, align 4, !dbg !7099
  %cmp77 = icmp eq i32* %_r, %_v, !dbg !7099
  %conv78 = zext i1 %cmp77 to i32, !dbg !7099
  %87 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !7099
  %rotate = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %87, i32 0, i32 20, !dbg !7099
  %88 = load i32, i32* %rotate, align 8, !dbg !7099
  %cmp79 = icmp eq i32 %88, 0, !dbg !7099
  br i1 %cmp79, label %cond.true, label %lor.lhs.false, !dbg !7099

lor.lhs.false:                                    ; preds = %if.end74
  %89 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !7099
  %rotate81 = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %89, i32 0, i32 20, !dbg !7099
  %90 = load i32, i32* %rotate81, align 8, !dbg !7099
  %cmp82 = icmp eq i32 %90, 2, !dbg !7099
  br i1 %cmp82, label %cond.true, label %cond.false, !dbg !7099

cond.true:                                        ; preds = %lor.lhs.false, %if.end74
  %91 = load i32, i32* %_r, align 4, !dbg !7099
  br label %cond.end, !dbg !7099

cond.false:                                       ; preds = %lor.lhs.false
  %92 = load i32, i32* %_v, align 4, !dbg !7099
  br label %cond.end, !dbg !7099

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond84 = phi i32 [ %91, %cond.true ], [ %92, %cond.false ], !dbg !7099
  store i32 %cond84, i32* %tmp, align 4, !dbg !7099
  %93 = load i32, i32* %tmp, align 4, !dbg !7099
  store i32 %93, i32* %cols, align 4, !dbg !7101
  call void @llvm.dbg.declare(metadata i32* %_r85, metadata !7102, metadata !DIExpression()), !dbg !7104
  %94 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !7104
  %var86 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %94, i32 0, i32 6, !dbg !7104
  %yres87 = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %var86, i32 0, i32 1, !dbg !7104
  %95 = load i32, i32* %yres87, align 4, !dbg !7104
  store i32 %95, i32* %_r85, align 4, !dbg !7104
  call void @llvm.dbg.declare(metadata i32* %_v88, metadata !7105, metadata !DIExpression()), !dbg !7104
  %96 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !7104
  %var89 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %96, i32 0, i32 6, !dbg !7104
  %xres90 = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %var89, i32 0, i32 0, !dbg !7104
  %97 = load i32, i32* %xres90, align 8, !dbg !7104
  store i32 %97, i32* %_v88, align 4, !dbg !7104
  %cmp91 = icmp eq i32* %_r85, %_v88, !dbg !7104
  %conv92 = zext i1 %cmp91 to i32, !dbg !7104
  %98 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !7104
  %rotate94 = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %98, i32 0, i32 20, !dbg !7104
  %99 = load i32, i32* %rotate94, align 8, !dbg !7104
  %cmp95 = icmp eq i32 %99, 0, !dbg !7104
  br i1 %cmp95, label %cond.true101, label %lor.lhs.false97, !dbg !7104

lor.lhs.false97:                                  ; preds = %cond.end
  %100 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !7104
  %rotate98 = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %100, i32 0, i32 20, !dbg !7104
  %101 = load i32, i32* %rotate98, align 8, !dbg !7104
  %cmp99 = icmp eq i32 %101, 2, !dbg !7104
  br i1 %cmp99, label %cond.true101, label %cond.false102, !dbg !7104

cond.true101:                                     ; preds = %lor.lhs.false97, %cond.end
  %102 = load i32, i32* %_r85, align 4, !dbg !7104
  br label %cond.end103, !dbg !7104

cond.false102:                                    ; preds = %lor.lhs.false97
  %103 = load i32, i32* %_v88, align 4, !dbg !7104
  br label %cond.end103, !dbg !7104

cond.end103:                                      ; preds = %cond.false102, %cond.true101
  %cond104 = phi i32 [ %102, %cond.true101 ], [ %103, %cond.false102 ], !dbg !7104
  store i32 %cond104, i32* %tmp93, align 4, !dbg !7104
  %104 = load i32, i32* %tmp93, align 4, !dbg !7104
  store i32 %104, i32* %rows, align 4, !dbg !7106
  %105 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !7107
  %vc_font105 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %105, i32 0, i32 27, !dbg !7108
  %width106 = getelementptr inbounds %struct.console_font, %struct.console_font* %vc_font105, i32 0, i32 0, !dbg !7109
  %106 = load i32, i32* %width106, align 8, !dbg !7109
  %107 = load i32, i32* %cols, align 4, !dbg !7110
  %div = udiv i32 %107, %106, !dbg !7110
  store i32 %div, i32* %cols, align 4, !dbg !7110
  %108 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !7111
  %vc_font107 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %108, i32 0, i32 27, !dbg !7112
  %height108 = getelementptr inbounds %struct.console_font, %struct.console_font* %vc_font107, i32 0, i32 1, !dbg !7113
  %109 = load i32, i32* %height108, align 4, !dbg !7113
  %110 = load i32, i32* %rows, align 4, !dbg !7114
  %div109 = udiv i32 %110, %109, !dbg !7114
  store i32 %div109, i32* %rows, align 4, !dbg !7114
  %111 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !7115
  %112 = load i32, i32* %cols, align 4, !dbg !7116
  %113 = load i32, i32* %rows, align 4, !dbg !7117
  %call110 = call i32 @vc_resize(%struct.vc_data* %111, i32 %112, i32 %113) #10, !dbg !7118
  %114 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !7119
  %call111 = call zeroext i1 @con_is_visible(%struct.vc_data* %114) #10, !dbg !7121
  br i1 %call111, label %if.then112, label %if.end113, !dbg !7122

if.then112:                                       ; preds = %cond.end103
  %115 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !7123
  call void @redraw_screen(%struct.vc_data* %115, i32 0) #10, !dbg !7123
  br label %if.end113, !dbg !7125

if.end113:                                        ; preds = %if.then, %if.then4, %if.then112, %cond.end103
  ret void, !dbg !7126
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @fbcon_get_requirement(%struct.fb_info* %info, %struct.fb_blit_caps* %caps) #1 !dbg !7127 {
entry:
  %info.addr = alloca %struct.fb_info*, align 8
  %caps.addr = alloca %struct.fb_blit_caps*, align 8
  %vc = alloca %struct.vc_data*, align 8
  %p = alloca %struct.fbcon_display*, align 8
  %i = alloca i32, align 4
  %charcnt = alloca i32, align 4
  store %struct.fb_info* %info, %struct.fb_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fb_info** %info.addr, metadata !7130, metadata !DIExpression()), !dbg !7131
  store %struct.fb_blit_caps* %caps, %struct.fb_blit_caps** %caps.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fb_blit_caps** %caps.addr, metadata !7132, metadata !DIExpression()), !dbg !7133
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc, metadata !7134, metadata !DIExpression()), !dbg !7135
  call void @llvm.dbg.declare(metadata %struct.fbcon_display** %p, metadata !7136, metadata !DIExpression()), !dbg !7137
  %0 = load %struct.fb_blit_caps*, %struct.fb_blit_caps** %caps.addr, align 8, !dbg !7138
  %flags = getelementptr inbounds %struct.fb_blit_caps, %struct.fb_blit_caps* %0, i32 0, i32 3, !dbg !7140
  %1 = load i32, i32* %flags, align 4, !dbg !7140
  %tobool = icmp ne i32 %1, 0, !dbg !7138
  br i1 %tobool, label %if.then, label %if.else, !dbg !7141

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7142, metadata !DIExpression()), !dbg !7144
  call void @llvm.dbg.declare(metadata i32* %charcnt, metadata !7145, metadata !DIExpression()), !dbg !7146
  %2 = load i32, i32* @first_fb_vc, align 4, !dbg !7147
  store i32 %2, i32* %i, align 4, !dbg !7149
  br label %for.cond, !dbg !7150

for.cond:                                         ; preds = %for.inc, %if.then
  %3 = load i32, i32* %i, align 4, !dbg !7151
  %4 = load i32, i32* @last_fb_vc, align 4, !dbg !7153
  %cmp = icmp sle i32 %3, %4, !dbg !7154
  br i1 %cmp, label %for.body, label %for.end, !dbg !7155

for.body:                                         ; preds = %for.cond
  %5 = load i32, i32* %i, align 4, !dbg !7156
  %idxprom = sext i32 %5 to i64, !dbg !7158
  %arrayidx = getelementptr [63 x %struct.vc], [63 x %struct.vc]* @vc_cons, i64 0, i64 %idxprom, !dbg !7158
  %d = getelementptr inbounds %struct.vc, %struct.vc* %arrayidx, i32 0, i32 0, !dbg !7159
  %6 = load %struct.vc_data*, %struct.vc_data** %d, align 8, !dbg !7159
  store %struct.vc_data* %6, %struct.vc_data** %vc, align 8, !dbg !7160
  %7 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !7161
  %tobool1 = icmp ne %struct.vc_data* %7, null, !dbg !7161
  br i1 %tobool1, label %land.lhs.true, label %if.end23, !dbg !7163

land.lhs.true:                                    ; preds = %for.body
  %8 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !7164
  %vc_mode = getelementptr inbounds %struct.vc_data, %struct.vc_data* %8, i32 0, i32 16, !dbg !7165
  %9 = load i8, i8* %vc_mode, align 4, !dbg !7165
  %conv = zext i8 %9 to i32, !dbg !7164
  %cmp2 = icmp eq i32 %conv, 0, !dbg !7166
  br i1 %cmp2, label %land.lhs.true4, label %if.end23, !dbg !7167

land.lhs.true4:                                   ; preds = %land.lhs.true
  %10 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !7168
  %node = getelementptr inbounds %struct.fb_info, %struct.fb_info* %10, i32 0, i32 1, !dbg !7169
  %11 = load i32, i32* %node, align 4, !dbg !7169
  %12 = load i32, i32* %i, align 4, !dbg !7170
  %idxprom5 = sext i32 %12 to i64, !dbg !7171
  %arrayidx6 = getelementptr [63 x i8], [63 x i8]* @con2fb_map, i64 0, i64 %idxprom5, !dbg !7171
  %13 = load i8, i8* %arrayidx6, align 1, !dbg !7171
  %conv7 = sext i8 %13 to i32, !dbg !7171
  %cmp8 = icmp eq i32 %11, %conv7, !dbg !7172
  br i1 %cmp8, label %if.then10, label %if.end23, !dbg !7173

if.then10:                                        ; preds = %land.lhs.true4
  %14 = load i32, i32* %i, align 4, !dbg !7174
  %idxprom11 = sext i32 %14 to i64, !dbg !7176
  %arrayidx12 = getelementptr [63 x %struct.fbcon_display], [63 x %struct.fbcon_display]* @fb_display, i64 0, i64 %idxprom11, !dbg !7176
  store %struct.fbcon_display* %arrayidx12, %struct.fbcon_display** %p, align 8, !dbg !7177
  %15 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !7178
  %vc_font = getelementptr inbounds %struct.vc_data, %struct.vc_data* %15, i32 0, i32 27, !dbg !7179
  %width = getelementptr inbounds %struct.console_font, %struct.console_font* %vc_font, i32 0, i32 0, !dbg !7180
  %16 = load i32, i32* %width, align 8, !dbg !7180
  %sub = sub i32 %16, 1, !dbg !7181
  %shl = shl i32 1, %sub, !dbg !7182
  %17 = load %struct.fb_blit_caps*, %struct.fb_blit_caps** %caps.addr, align 8, !dbg !7183
  %x = getelementptr inbounds %struct.fb_blit_caps, %struct.fb_blit_caps* %17, i32 0, i32 0, !dbg !7184
  %18 = load i32, i32* %x, align 4, !dbg !7185
  %or = or i32 %18, %shl, !dbg !7185
  store i32 %or, i32* %x, align 4, !dbg !7185
  %19 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !7186
  %vc_font13 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %19, i32 0, i32 27, !dbg !7187
  %height = getelementptr inbounds %struct.console_font, %struct.console_font* %vc_font13, i32 0, i32 1, !dbg !7188
  %20 = load i32, i32* %height, align 4, !dbg !7188
  %sub14 = sub i32 %20, 1, !dbg !7189
  %shl15 = shl i32 1, %sub14, !dbg !7190
  %21 = load %struct.fb_blit_caps*, %struct.fb_blit_caps** %caps.addr, align 8, !dbg !7191
  %y = getelementptr inbounds %struct.fb_blit_caps, %struct.fb_blit_caps* %21, i32 0, i32 1, !dbg !7192
  %22 = load i32, i32* %y, align 4, !dbg !7193
  %or16 = or i32 %22, %shl15, !dbg !7193
  store i32 %or16, i32* %y, align 4, !dbg !7193
  %23 = load %struct.fbcon_display*, %struct.fbcon_display** %p, align 8, !dbg !7194
  %userfont = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %23, i32 0, i32 1, !dbg !7195
  %24 = load i32, i32* %userfont, align 8, !dbg !7195
  %tobool17 = icmp ne i32 %24, 0, !dbg !7196
  br i1 %tobool17, label %cond.true, label %cond.false, !dbg !7196

cond.true:                                        ; preds = %if.then10
  %25 = load %struct.fbcon_display*, %struct.fbcon_display** %p, align 8, !dbg !7197
  %fontdata = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %25, i32 0, i32 0, !dbg !7197
  %26 = load i8*, i8** %fontdata, align 8, !dbg !7197
  %27 = bitcast i8* %26 to i32*, !dbg !7197
  %arrayidx18 = getelementptr i32, i32* %27, i64 -3, !dbg !7197
  %28 = load i32, i32* %arrayidx18, align 4, !dbg !7197
  br label %cond.end, !dbg !7196

cond.false:                                       ; preds = %if.then10
  br label %cond.end, !dbg !7196

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %28, %cond.true ], [ 256, %cond.false ], !dbg !7196
  store i32 %cond, i32* %charcnt, align 4, !dbg !7198
  %29 = load %struct.fb_blit_caps*, %struct.fb_blit_caps** %caps.addr, align 8, !dbg !7199
  %len = getelementptr inbounds %struct.fb_blit_caps, %struct.fb_blit_caps* %29, i32 0, i32 2, !dbg !7201
  %30 = load i32, i32* %len, align 4, !dbg !7201
  %31 = load i32, i32* %charcnt, align 4, !dbg !7202
  %cmp19 = icmp ult i32 %30, %31, !dbg !7203
  br i1 %cmp19, label %if.then21, label %if.end, !dbg !7204

if.then21:                                        ; preds = %cond.end
  %32 = load i32, i32* %charcnt, align 4, !dbg !7205
  %33 = load %struct.fb_blit_caps*, %struct.fb_blit_caps** %caps.addr, align 8, !dbg !7206
  %len22 = getelementptr inbounds %struct.fb_blit_caps, %struct.fb_blit_caps* %33, i32 0, i32 2, !dbg !7207
  store i32 %32, i32* %len22, align 4, !dbg !7208
  br label %if.end, !dbg !7206

if.end:                                           ; preds = %if.then21, %cond.end
  br label %if.end23, !dbg !7209

if.end23:                                         ; preds = %if.end, %land.lhs.true4, %land.lhs.true, %for.body
  br label %for.inc, !dbg !7210

for.inc:                                          ; preds = %if.end23
  %34 = load i32, i32* %i, align 4, !dbg !7211
  %inc = add i32 %34, 1, !dbg !7211
  store i32 %inc, i32* %i, align 4, !dbg !7211
  br label %for.cond, !dbg !7212, !llvm.loop !7213

for.end:                                          ; preds = %for.cond
  br label %if.end63, !dbg !7215

if.else:                                          ; preds = %entry
  %35 = load i32, i32* @fg_console, align 4, !dbg !7216
  %idxprom24 = sext i32 %35 to i64, !dbg !7218
  %arrayidx25 = getelementptr [63 x %struct.vc], [63 x %struct.vc]* @vc_cons, i64 0, i64 %idxprom24, !dbg !7218
  %d26 = getelementptr inbounds %struct.vc, %struct.vc* %arrayidx25, i32 0, i32 0, !dbg !7219
  %36 = load %struct.vc_data*, %struct.vc_data** %d26, align 8, !dbg !7219
  store %struct.vc_data* %36, %struct.vc_data** %vc, align 8, !dbg !7220
  %37 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !7221
  %tobool27 = icmp ne %struct.vc_data* %37, null, !dbg !7221
  br i1 %tobool27, label %land.lhs.true28, label %if.end62, !dbg !7223

land.lhs.true28:                                  ; preds = %if.else
  %38 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !7224
  %vc_mode29 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %38, i32 0, i32 16, !dbg !7225
  %39 = load i8, i8* %vc_mode29, align 4, !dbg !7225
  %conv30 = zext i8 %39 to i32, !dbg !7224
  %cmp31 = icmp eq i32 %conv30, 0, !dbg !7226
  br i1 %cmp31, label %land.lhs.true33, label %if.end62, !dbg !7227

land.lhs.true33:                                  ; preds = %land.lhs.true28
  %40 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !7228
  %node34 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %40, i32 0, i32 1, !dbg !7229
  %41 = load i32, i32* %node34, align 4, !dbg !7229
  %42 = load i32, i32* @fg_console, align 4, !dbg !7230
  %idxprom35 = sext i32 %42 to i64, !dbg !7231
  %arrayidx36 = getelementptr [63 x i8], [63 x i8]* @con2fb_map, i64 0, i64 %idxprom35, !dbg !7231
  %43 = load i8, i8* %arrayidx36, align 1, !dbg !7231
  %conv37 = sext i8 %43 to i32, !dbg !7231
  %cmp38 = icmp eq i32 %41, %conv37, !dbg !7232
  br i1 %cmp38, label %if.then40, label %if.end62, !dbg !7233

if.then40:                                        ; preds = %land.lhs.true33
  %44 = load i32, i32* @fg_console, align 4, !dbg !7234
  %idxprom41 = sext i32 %44 to i64, !dbg !7236
  %arrayidx42 = getelementptr [63 x %struct.fbcon_display], [63 x %struct.fbcon_display]* @fb_display, i64 0, i64 %idxprom41, !dbg !7236
  store %struct.fbcon_display* %arrayidx42, %struct.fbcon_display** %p, align 8, !dbg !7237
  %45 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !7238
  %vc_font43 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %45, i32 0, i32 27, !dbg !7239
  %width44 = getelementptr inbounds %struct.console_font, %struct.console_font* %vc_font43, i32 0, i32 0, !dbg !7240
  %46 = load i32, i32* %width44, align 8, !dbg !7240
  %sub45 = sub i32 %46, 1, !dbg !7241
  %shl46 = shl i32 1, %sub45, !dbg !7242
  %47 = load %struct.fb_blit_caps*, %struct.fb_blit_caps** %caps.addr, align 8, !dbg !7243
  %x47 = getelementptr inbounds %struct.fb_blit_caps, %struct.fb_blit_caps* %47, i32 0, i32 0, !dbg !7244
  store i32 %shl46, i32* %x47, align 4, !dbg !7245
  %48 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !7246
  %vc_font48 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %48, i32 0, i32 27, !dbg !7247
  %height49 = getelementptr inbounds %struct.console_font, %struct.console_font* %vc_font48, i32 0, i32 1, !dbg !7248
  %49 = load i32, i32* %height49, align 4, !dbg !7248
  %sub50 = sub i32 %49, 1, !dbg !7249
  %shl51 = shl i32 1, %sub50, !dbg !7250
  %50 = load %struct.fb_blit_caps*, %struct.fb_blit_caps** %caps.addr, align 8, !dbg !7251
  %y52 = getelementptr inbounds %struct.fb_blit_caps, %struct.fb_blit_caps* %50, i32 0, i32 1, !dbg !7252
  store i32 %shl51, i32* %y52, align 4, !dbg !7253
  %51 = load %struct.fbcon_display*, %struct.fbcon_display** %p, align 8, !dbg !7254
  %userfont53 = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %51, i32 0, i32 1, !dbg !7255
  %52 = load i32, i32* %userfont53, align 8, !dbg !7255
  %tobool54 = icmp ne i32 %52, 0, !dbg !7256
  br i1 %tobool54, label %cond.true55, label %cond.false58, !dbg !7256

cond.true55:                                      ; preds = %if.then40
  %53 = load %struct.fbcon_display*, %struct.fbcon_display** %p, align 8, !dbg !7257
  %fontdata56 = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %53, i32 0, i32 0, !dbg !7257
  %54 = load i8*, i8** %fontdata56, align 8, !dbg !7257
  %55 = bitcast i8* %54 to i32*, !dbg !7257
  %arrayidx57 = getelementptr i32, i32* %55, i64 -3, !dbg !7257
  %56 = load i32, i32* %arrayidx57, align 4, !dbg !7257
  br label %cond.end59, !dbg !7256

cond.false58:                                     ; preds = %if.then40
  br label %cond.end59, !dbg !7256

cond.end59:                                       ; preds = %cond.false58, %cond.true55
  %cond60 = phi i32 [ %56, %cond.true55 ], [ 256, %cond.false58 ], !dbg !7256
  %57 = load %struct.fb_blit_caps*, %struct.fb_blit_caps** %caps.addr, align 8, !dbg !7258
  %len61 = getelementptr inbounds %struct.fb_blit_caps, %struct.fb_blit_caps* %57, i32 0, i32 2, !dbg !7259
  store i32 %cond60, i32* %len61, align 4, !dbg !7260
  br label %if.end62, !dbg !7261

if.end62:                                         ; preds = %cond.end59, %land.lhs.true33, %land.lhs.true28, %if.else
  br label %if.end63

if.end63:                                         ; preds = %if.end62, %for.end
  ret void, !dbg !7262
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @fbcon_set_con2fb_map_ioctl(i8* %argp) #1 !dbg !7263 {
entry:
  %retval.i.i = alloca i1, align 1
  %addr.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i, metadata !7266, metadata !DIExpression()), !dbg !7271
  %bytes.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i, metadata !7280, metadata !DIExpression()), !dbg !7281
  %is_source.addr.i.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i, metadata !7282, metadata !DIExpression()), !dbg !7283
  %sz.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i, metadata !7284, metadata !DIExpression()), !dbg !7285
  %__ret_warn_on.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i, metadata !7286, metadata !DIExpression()), !dbg !7289
  %tmp.i.i = alloca i64, align 8
  %to.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i, metadata !7290, metadata !DIExpression()), !dbg !7291
  %from.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i, metadata !7292, metadata !DIExpression()), !dbg !7293
  %n.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i, metadata !7294, metadata !DIExpression()), !dbg !7295
  %retval = alloca i32, align 4
  %argp.addr = alloca i8*, align 8
  %con2fb = alloca %struct.fb_con2fbmap, align 4
  %ret = alloca i32, align 4
  store i8* %argp, i8** %argp.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %argp.addr, metadata !7296, metadata !DIExpression()), !dbg !7297
  call void @llvm.dbg.declare(metadata %struct.fb_con2fbmap* %con2fb, metadata !7298, metadata !DIExpression()), !dbg !7303
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7304, metadata !DIExpression()), !dbg !7305
  %0 = bitcast %struct.fb_con2fbmap* %con2fb to i8*, !dbg !7306
  %1 = load i8*, i8** %argp.addr, align 8, !dbg !7307
  store i8* %0, i8** %to.addr.i, align 8
  store i8* %1, i8** %from.addr.i, align 8
  store i64 8, i64* %n.addr.i, align 8
  %2 = load i8*, i8** %to.addr.i, align 8, !dbg !7308
  %3 = load i64, i64* %n.addr.i, align 8, !dbg !7308
  store i8* %2, i8** %addr.addr.i.i, align 8
  store i64 %3, i64* %bytes.addr.i.i, align 8
  store i8 0, i8* %is_source.addr.i.i, align 1
  store i32 -1, i32* %sz.i.i, align 4, !dbg !7285
  %4 = load i32, i32* %sz.i.i, align 4, !dbg !7309
  %cmp.i.i = icmp sge i32 %4, 0, !dbg !7309
  br i1 %cmp.i.i, label %land.rhs.i.i, label %land.end.i.i, !dbg !7309

land.rhs.i.i:                                     ; preds = %entry
  %5 = load i32, i32* %sz.i.i, align 4, !dbg !7309
  %conv.i.i = sext i32 %5 to i64, !dbg !7309
  %6 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !7309
  %cmp1.i.i = icmp ult i64 %conv.i.i, %6, !dbg !7309
  br label %land.end.i.i

land.end.i.i:                                     ; preds = %land.rhs.i.i, %entry
  %7 = phi i1 [ false, %entry ], [ %cmp1.i.i, %land.rhs.i.i ], !dbg !7311
  %lnot.i.i = xor i1 %7, true, !dbg !7309
  %lnot.ext.i.i = zext i1 %7 to i32, !dbg !7309
  %conv4.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !7309
  br i1 %7, label %if.then.i.i, label %if.end10.i.i, !dbg !7312

if.then.i.i:                                      ; preds = %land.end.i.i
  %8 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !7313
  %9 = call i1 @llvm.is.constant.i64(i64 %8) #12, !dbg !7316
  br i1 %9, label %if.else.i.i, label %if.then5.i.i, !dbg !7317

if.then5.i.i:                                     ; preds = %if.then.i.i
  %10 = load i32, i32* %sz.i.i, align 4, !dbg !7318
  %11 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !7319
  call void @copy_overflow(i32 %10, i64 %11) #13, !dbg !7320
  br label %if.end9.i.i, !dbg !7320

if.else.i.i:                                      ; preds = %if.then.i.i
  %12 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !7321
  %tobool6.i.i = trunc i8 %12 to i1, !dbg !7321
  br i1 %tobool6.i.i, label %if.then7.i.i, label %if.else8.i.i, !dbg !7323

if.then7.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_from() #13, !dbg !7324
  br label %if.end.i.i, !dbg !7324

if.else8.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_to() #13, !dbg !7325
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.else8.i.i, %if.then7.i.i
  br label %if.end9.i.i

if.end9.i.i:                                      ; preds = %if.end.i.i, %if.then5.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !7326
  br label %check_copy_size.exit.i, !dbg !7326

if.end10.i.i:                                     ; preds = %land.end.i.i
  %13 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !7289
  %cmp11.i.i = icmp ugt i64 %13, 2147483647, !dbg !7289
  %lnot13.i.i = xor i1 %cmp11.i.i, true, !dbg !7289
  %lnot.ext16.i.i = zext i1 %cmp11.i.i to i32, !dbg !7289
  store i32 %lnot.ext16.i.i, i32* %__ret_warn_on.i.i, align 4, !dbg !7289
  %14 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !7327
  %tobool17.i.i = icmp ne i32 %14, 0, !dbg !7327
  %lnot18.i.i = xor i1 %tobool17.i.i, true, !dbg !7327
  %lnot.ext21.i.i = zext i1 %tobool17.i.i to i32, !dbg !7327
  %conv22.i.i = sext i32 %lnot.ext21.i.i to i64, !dbg !7327
  br i1 %tobool17.i.i, label %if.then24.i.i, label %if.end31.i.i, !dbg !7289

if.then24.i.i:                                    ; preds = %if.end10.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.21, i64 0, i64 0), i32 150, i32 2307, i64 12) #12, !dbg !7329, !srcloc !7332
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 39) #12, !dbg !7333, !srcloc !7335
  br label %if.end31.i.i, !dbg !7336

if.end31.i.i:                                     ; preds = %if.then24.i.i, %if.end10.i.i
  %15 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !7289
  %tobool32.i.i = icmp ne i32 %15, 0, !dbg !7289
  %lnot33.i.i = xor i1 %tobool32.i.i, true, !dbg !7289
  %lnot.ext36.i.i = zext i1 %tobool32.i.i to i32, !dbg !7289
  %conv37.i.i = sext i32 %lnot.ext36.i.i to i64, !dbg !7289
  store i64 %conv37.i.i, i64* %tmp.i.i, align 8, !dbg !7327
  %16 = load i64, i64* %tmp.i.i, align 8, !dbg !7289
  %tobool38.i.i = icmp ne i64 %16, 0, !dbg !7337
  br i1 %tobool38.i.i, label %if.then39.i.i, label %if.end40.i.i, !dbg !7338

if.then39.i.i:                                    ; preds = %if.end31.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !7339
  br label %check_copy_size.exit.i, !dbg !7339

if.end40.i.i:                                     ; preds = %if.end31.i.i
  %17 = load i8*, i8** %addr.addr.i.i, align 8, !dbg !7340
  %18 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !7341
  %19 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !7342
  %tobool41.i.i = trunc i8 %19 to i1, !dbg !7342
  call void @check_object_size(i8* %17, i64 %18, i1 zeroext %tobool41.i.i) #13, !dbg !7343
  store i1 true, i1* %retval.i.i, align 1, !dbg !7344
  br label %check_copy_size.exit.i, !dbg !7344

check_copy_size.exit.i:                           ; preds = %if.end40.i.i, %if.then39.i.i, %if.end9.i.i
  %20 = load i1, i1* %retval.i.i, align 1, !dbg !7345
  %lnot.i = xor i1 %20, true, !dbg !7308
  %lnot.ext.i = zext i1 %20 to i32, !dbg !7308
  %conv.i = sext i32 %lnot.ext.i to i64, !dbg !7308
  br i1 %20, label %if.then.i, label %copy_from_user.exit, !dbg !7346

if.then.i:                                        ; preds = %check_copy_size.exit.i
  %21 = load i8*, i8** %to.addr.i, align 8, !dbg !7347
  %22 = load i8*, i8** %from.addr.i, align 8, !dbg !7348
  %23 = load i64, i64* %n.addr.i, align 8, !dbg !7349
  %call2.i = call i64 @_copy_from_user(i8* %21, i8* %22, i64 %23) #13, !dbg !7350
  store i64 %call2.i, i64* %n.addr.i, align 8, !dbg !7351
  br label %copy_from_user.exit, !dbg !7352

copy_from_user.exit:                              ; preds = %check_copy_size.exit.i, %if.then.i
  %24 = load i64, i64* %n.addr.i, align 8, !dbg !7353
  %tobool = icmp ne i64 %24, 0, !dbg !7354
  br i1 %tobool, label %if.then, label %if.end, !dbg !7355

if.then:                                          ; preds = %copy_from_user.exit
  store i32 -14, i32* %retval, align 4, !dbg !7356
  br label %return, !dbg !7356

if.end:                                           ; preds = %copy_from_user.exit
  %console = getelementptr inbounds %struct.fb_con2fbmap, %struct.fb_con2fbmap* %con2fb, i32 0, i32 0, !dbg !7357
  %25 = load i32, i32* %console, align 4, !dbg !7357
  %cmp = icmp ult i32 %25, 1, !dbg !7359
  br i1 %cmp, label %if.then3, label %lor.lhs.false, !dbg !7360

lor.lhs.false:                                    ; preds = %if.end
  %console1 = getelementptr inbounds %struct.fb_con2fbmap, %struct.fb_con2fbmap* %con2fb, i32 0, i32 0, !dbg !7361
  %26 = load i32, i32* %console1, align 4, !dbg !7361
  %cmp2 = icmp ugt i32 %26, 63, !dbg !7362
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !7363

if.then3:                                         ; preds = %lor.lhs.false, %if.end
  store i32 -22, i32* %retval, align 4, !dbg !7364
  br label %return, !dbg !7364

if.end4:                                          ; preds = %lor.lhs.false
  %framebuffer = getelementptr inbounds %struct.fb_con2fbmap, %struct.fb_con2fbmap* %con2fb, i32 0, i32 1, !dbg !7365
  %27 = load i32, i32* %framebuffer, align 4, !dbg !7365
  %cmp5 = icmp uge i32 %27, 32, !dbg !7367
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !7368

if.then6:                                         ; preds = %if.end4
  store i32 -22, i32* %retval, align 4, !dbg !7369
  br label %return, !dbg !7369

if.end7:                                          ; preds = %if.end4
  %framebuffer8 = getelementptr inbounds %struct.fb_con2fbmap, %struct.fb_con2fbmap* %con2fb, i32 0, i32 1, !dbg !7370
  %28 = load i32, i32* %framebuffer8, align 4, !dbg !7370
  %idxprom = zext i32 %28 to i64, !dbg !7372
  %arrayidx = getelementptr [32 x %struct.fb_info*], [32 x %struct.fb_info*]* @registered_fb, i64 0, i64 %idxprom, !dbg !7372
  %29 = load %struct.fb_info*, %struct.fb_info** %arrayidx, align 8, !dbg !7372
  %tobool9 = icmp ne %struct.fb_info* %29, null, !dbg !7372
  br i1 %tobool9, label %if.end13, label %if.then10, !dbg !7373

if.then10:                                        ; preds = %if.end7
  %framebuffer11 = getelementptr inbounds %struct.fb_con2fbmap, %struct.fb_con2fbmap* %con2fb, i32 0, i32 1, !dbg !7374
  %30 = load i32, i32* %framebuffer11, align 4, !dbg !7374
  %call12 = call i32 (i8*, ...) @request_module(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0), i32 %30) #10, !dbg !7375
  br label %if.end13, !dbg !7375

if.end13:                                         ; preds = %if.then10, %if.end7
  %framebuffer14 = getelementptr inbounds %struct.fb_con2fbmap, %struct.fb_con2fbmap* %con2fb, i32 0, i32 1, !dbg !7376
  %31 = load i32, i32* %framebuffer14, align 4, !dbg !7376
  %idxprom15 = zext i32 %31 to i64, !dbg !7378
  %arrayidx16 = getelementptr [32 x %struct.fb_info*], [32 x %struct.fb_info*]* @registered_fb, i64 0, i64 %idxprom15, !dbg !7378
  %32 = load %struct.fb_info*, %struct.fb_info** %arrayidx16, align 8, !dbg !7378
  %tobool17 = icmp ne %struct.fb_info* %32, null, !dbg !7378
  br i1 %tobool17, label %if.end19, label %if.then18, !dbg !7379

if.then18:                                        ; preds = %if.end13
  store i32 -22, i32* %retval, align 4, !dbg !7380
  br label %return, !dbg !7380

if.end19:                                         ; preds = %if.end13
  call void @console_lock() #10, !dbg !7382
  %console20 = getelementptr inbounds %struct.fb_con2fbmap, %struct.fb_con2fbmap* %con2fb, i32 0, i32 0, !dbg !7383
  %33 = load i32, i32* %console20, align 4, !dbg !7383
  %sub = sub i32 %33, 1, !dbg !7384
  %framebuffer21 = getelementptr inbounds %struct.fb_con2fbmap, %struct.fb_con2fbmap* %con2fb, i32 0, i32 1, !dbg !7385
  %34 = load i32, i32* %framebuffer21, align 4, !dbg !7385
  %call22 = call i32 @set_con2fb_map(i32 %sub, i32 %34, i32 1) #10, !dbg !7386
  store i32 %call22, i32* %ret, align 4, !dbg !7387
  call void @console_unlock() #10, !dbg !7388
  %35 = load i32, i32* %ret, align 4, !dbg !7389
  store i32 %35, i32* %retval, align 4, !dbg !7390
  br label %return, !dbg !7390

return:                                           ; preds = %if.end19, %if.then18, %if.then6, %if.then3, %if.then
  %36 = load i32, i32* %retval, align 4, !dbg !7391
  ret i32 %36, !dbg !7391
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @request_module(i8* %name, ...) #1 !dbg !7392 {
entry:
  %name.addr = alloca i8*, align 8
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !7396, metadata !DIExpression()), !dbg !7397
  ret i32 -38, !dbg !7398
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @fbcon_get_con2fb_map_ioctl(i8* %argp) #1 !dbg !7399 {
entry:
  %retval.i.i8 = alloca i1, align 1
  %addr.addr.i.i9 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i9, metadata !7266, metadata !DIExpression()), !dbg !7400
  %bytes.addr.i.i10 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i10, metadata !7280, metadata !DIExpression()), !dbg !7405
  %is_source.addr.i.i11 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i11, metadata !7282, metadata !DIExpression()), !dbg !7406
  %sz.i.i12 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i12, metadata !7284, metadata !DIExpression()), !dbg !7407
  %__ret_warn_on.i.i13 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i13, metadata !7286, metadata !DIExpression()), !dbg !7408
  %tmp.i.i14 = alloca i64, align 8
  %to.addr.i15 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i15, metadata !7409, metadata !DIExpression()), !dbg !7410
  %from.addr.i16 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i16, metadata !7411, metadata !DIExpression()), !dbg !7412
  %n.addr.i17 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i17, metadata !7413, metadata !DIExpression()), !dbg !7414
  %retval.i.i = alloca i1, align 1
  %addr.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i, metadata !7266, metadata !DIExpression()), !dbg !7415
  %bytes.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i, metadata !7280, metadata !DIExpression()), !dbg !7419
  %is_source.addr.i.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i, metadata !7282, metadata !DIExpression()), !dbg !7420
  %sz.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i, metadata !7284, metadata !DIExpression()), !dbg !7421
  %__ret_warn_on.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i, metadata !7286, metadata !DIExpression()), !dbg !7422
  %tmp.i.i = alloca i64, align 8
  %to.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i, metadata !7290, metadata !DIExpression()), !dbg !7423
  %from.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i, metadata !7292, metadata !DIExpression()), !dbg !7424
  %n.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i, metadata !7294, metadata !DIExpression()), !dbg !7425
  %retval = alloca i32, align 4
  %argp.addr = alloca i8*, align 8
  %con2fb = alloca %struct.fb_con2fbmap, align 4
  store i8* %argp, i8** %argp.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %argp.addr, metadata !7426, metadata !DIExpression()), !dbg !7427
  call void @llvm.dbg.declare(metadata %struct.fb_con2fbmap* %con2fb, metadata !7428, metadata !DIExpression()), !dbg !7429
  %0 = bitcast %struct.fb_con2fbmap* %con2fb to i8*, !dbg !7430
  %1 = load i8*, i8** %argp.addr, align 8, !dbg !7431
  store i8* %0, i8** %to.addr.i, align 8
  store i8* %1, i8** %from.addr.i, align 8
  store i64 8, i64* %n.addr.i, align 8
  %2 = load i8*, i8** %to.addr.i, align 8, !dbg !7432
  %3 = load i64, i64* %n.addr.i, align 8, !dbg !7432
  store i8* %2, i8** %addr.addr.i.i, align 8
  store i64 %3, i64* %bytes.addr.i.i, align 8
  store i8 0, i8* %is_source.addr.i.i, align 1
  store i32 -1, i32* %sz.i.i, align 4, !dbg !7421
  %4 = load i32, i32* %sz.i.i, align 4, !dbg !7433
  %cmp.i.i = icmp sge i32 %4, 0, !dbg !7433
  br i1 %cmp.i.i, label %land.rhs.i.i, label %land.end.i.i, !dbg !7433

land.rhs.i.i:                                     ; preds = %entry
  %5 = load i32, i32* %sz.i.i, align 4, !dbg !7433
  %conv.i.i = sext i32 %5 to i64, !dbg !7433
  %6 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !7433
  %cmp1.i.i = icmp ult i64 %conv.i.i, %6, !dbg !7433
  br label %land.end.i.i

land.end.i.i:                                     ; preds = %land.rhs.i.i, %entry
  %7 = phi i1 [ false, %entry ], [ %cmp1.i.i, %land.rhs.i.i ], !dbg !7434
  %lnot.i.i = xor i1 %7, true, !dbg !7433
  %lnot.ext.i.i = zext i1 %7 to i32, !dbg !7433
  %conv4.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !7433
  br i1 %7, label %if.then.i.i, label %if.end10.i.i, !dbg !7435

if.then.i.i:                                      ; preds = %land.end.i.i
  %8 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !7436
  %9 = call i1 @llvm.is.constant.i64(i64 %8) #12, !dbg !7437
  br i1 %9, label %if.else.i.i, label %if.then5.i.i, !dbg !7438

if.then5.i.i:                                     ; preds = %if.then.i.i
  %10 = load i32, i32* %sz.i.i, align 4, !dbg !7439
  %11 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !7440
  call void @copy_overflow(i32 %10, i64 %11) #13, !dbg !7441
  br label %if.end9.i.i, !dbg !7441

if.else.i.i:                                      ; preds = %if.then.i.i
  %12 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !7442
  %tobool6.i.i = trunc i8 %12 to i1, !dbg !7442
  br i1 %tobool6.i.i, label %if.then7.i.i, label %if.else8.i.i, !dbg !7443

if.then7.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_from() #13, !dbg !7444
  br label %if.end.i.i, !dbg !7444

if.else8.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_to() #13, !dbg !7445
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.else8.i.i, %if.then7.i.i
  br label %if.end9.i.i

if.end9.i.i:                                      ; preds = %if.end.i.i, %if.then5.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !7446
  br label %check_copy_size.exit.i, !dbg !7446

if.end10.i.i:                                     ; preds = %land.end.i.i
  %13 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !7422
  %cmp11.i.i = icmp ugt i64 %13, 2147483647, !dbg !7422
  %lnot13.i.i = xor i1 %cmp11.i.i, true, !dbg !7422
  %lnot.ext16.i.i = zext i1 %cmp11.i.i to i32, !dbg !7422
  store i32 %lnot.ext16.i.i, i32* %__ret_warn_on.i.i, align 4, !dbg !7422
  %14 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !7447
  %tobool17.i.i = icmp ne i32 %14, 0, !dbg !7447
  %lnot18.i.i = xor i1 %tobool17.i.i, true, !dbg !7447
  %lnot.ext21.i.i = zext i1 %tobool17.i.i to i32, !dbg !7447
  %conv22.i.i = sext i32 %lnot.ext21.i.i to i64, !dbg !7447
  br i1 %tobool17.i.i, label %if.then24.i.i, label %if.end31.i.i, !dbg !7422

if.then24.i.i:                                    ; preds = %if.end10.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.21, i64 0, i64 0), i32 150, i32 2307, i64 12) #12, !dbg !7448, !srcloc !7332
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 39) #12, !dbg !7449, !srcloc !7335
  br label %if.end31.i.i, !dbg !7450

if.end31.i.i:                                     ; preds = %if.then24.i.i, %if.end10.i.i
  %15 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !7422
  %tobool32.i.i = icmp ne i32 %15, 0, !dbg !7422
  %lnot33.i.i = xor i1 %tobool32.i.i, true, !dbg !7422
  %lnot.ext36.i.i = zext i1 %tobool32.i.i to i32, !dbg !7422
  %conv37.i.i = sext i32 %lnot.ext36.i.i to i64, !dbg !7422
  store i64 %conv37.i.i, i64* %tmp.i.i, align 8, !dbg !7447
  %16 = load i64, i64* %tmp.i.i, align 8, !dbg !7422
  %tobool38.i.i = icmp ne i64 %16, 0, !dbg !7451
  br i1 %tobool38.i.i, label %if.then39.i.i, label %if.end40.i.i, !dbg !7452

if.then39.i.i:                                    ; preds = %if.end31.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !7453
  br label %check_copy_size.exit.i, !dbg !7453

if.end40.i.i:                                     ; preds = %if.end31.i.i
  %17 = load i8*, i8** %addr.addr.i.i, align 8, !dbg !7454
  %18 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !7455
  %19 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !7456
  %tobool41.i.i = trunc i8 %19 to i1, !dbg !7456
  call void @check_object_size(i8* %17, i64 %18, i1 zeroext %tobool41.i.i) #13, !dbg !7457
  store i1 true, i1* %retval.i.i, align 1, !dbg !7458
  br label %check_copy_size.exit.i, !dbg !7458

check_copy_size.exit.i:                           ; preds = %if.end40.i.i, %if.then39.i.i, %if.end9.i.i
  %20 = load i1, i1* %retval.i.i, align 1, !dbg !7459
  %lnot.i = xor i1 %20, true, !dbg !7432
  %lnot.ext.i = zext i1 %20 to i32, !dbg !7432
  %conv.i = sext i32 %lnot.ext.i to i64, !dbg !7432
  br i1 %20, label %if.then.i, label %copy_from_user.exit, !dbg !7460

if.then.i:                                        ; preds = %check_copy_size.exit.i
  %21 = load i8*, i8** %to.addr.i, align 8, !dbg !7461
  %22 = load i8*, i8** %from.addr.i, align 8, !dbg !7462
  %23 = load i64, i64* %n.addr.i, align 8, !dbg !7463
  %call2.i = call i64 @_copy_from_user(i8* %21, i8* %22, i64 %23) #13, !dbg !7464
  store i64 %call2.i, i64* %n.addr.i, align 8, !dbg !7465
  br label %copy_from_user.exit, !dbg !7466

copy_from_user.exit:                              ; preds = %check_copy_size.exit.i, %if.then.i
  %24 = load i64, i64* %n.addr.i, align 8, !dbg !7467
  %tobool = icmp ne i64 %24, 0, !dbg !7468
  br i1 %tobool, label %if.then, label %if.end, !dbg !7469

if.then:                                          ; preds = %copy_from_user.exit
  store i32 -14, i32* %retval, align 4, !dbg !7470
  br label %return, !dbg !7470

if.end:                                           ; preds = %copy_from_user.exit
  %console = getelementptr inbounds %struct.fb_con2fbmap, %struct.fb_con2fbmap* %con2fb, i32 0, i32 0, !dbg !7471
  %25 = load i32, i32* %console, align 4, !dbg !7471
  %cmp = icmp ult i32 %25, 1, !dbg !7473
  br i1 %cmp, label %if.then3, label %lor.lhs.false, !dbg !7474

lor.lhs.false:                                    ; preds = %if.end
  %console1 = getelementptr inbounds %struct.fb_con2fbmap, %struct.fb_con2fbmap* %con2fb, i32 0, i32 0, !dbg !7475
  %26 = load i32, i32* %console1, align 4, !dbg !7475
  %cmp2 = icmp ugt i32 %26, 63, !dbg !7476
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !7477

if.then3:                                         ; preds = %lor.lhs.false, %if.end
  store i32 -22, i32* %retval, align 4, !dbg !7478
  br label %return, !dbg !7478

if.end4:                                          ; preds = %lor.lhs.false
  call void @console_lock() #10, !dbg !7479
  %console5 = getelementptr inbounds %struct.fb_con2fbmap, %struct.fb_con2fbmap* %con2fb, i32 0, i32 0, !dbg !7480
  %27 = load i32, i32* %console5, align 4, !dbg !7480
  %sub = sub i32 %27, 1, !dbg !7481
  %idxprom = zext i32 %sub to i64, !dbg !7482
  %arrayidx = getelementptr [63 x i8], [63 x i8]* @con2fb_map, i64 0, i64 %idxprom, !dbg !7482
  %28 = load i8, i8* %arrayidx, align 1, !dbg !7482
  %conv = sext i8 %28 to i32, !dbg !7482
  %framebuffer = getelementptr inbounds %struct.fb_con2fbmap, %struct.fb_con2fbmap* %con2fb, i32 0, i32 1, !dbg !7483
  store i32 %conv, i32* %framebuffer, align 4, !dbg !7484
  call void @console_unlock() #10, !dbg !7485
  %29 = load i8*, i8** %argp.addr, align 8, !dbg !7486
  %30 = bitcast %struct.fb_con2fbmap* %con2fb to i8*, !dbg !7487
  store i8* %29, i8** %to.addr.i15, align 8
  store i8* %30, i8** %from.addr.i16, align 8
  store i64 8, i64* %n.addr.i17, align 8
  %31 = load i8*, i8** %from.addr.i16, align 8, !dbg !7488
  %32 = load i64, i64* %n.addr.i17, align 8, !dbg !7488
  store i8* %31, i8** %addr.addr.i.i9, align 8
  store i64 %32, i64* %bytes.addr.i.i10, align 8
  store i8 1, i8* %is_source.addr.i.i11, align 1
  store i32 -1, i32* %sz.i.i12, align 4, !dbg !7407
  %33 = load i32, i32* %sz.i.i12, align 4, !dbg !7489
  %cmp.i.i18 = icmp sge i32 %33, 0, !dbg !7489
  br i1 %cmp.i.i18, label %land.rhs.i.i21, label %land.end.i.i25, !dbg !7489

land.rhs.i.i21:                                   ; preds = %if.end4
  %34 = load i32, i32* %sz.i.i12, align 4, !dbg !7489
  %conv.i.i19 = sext i32 %34 to i64, !dbg !7489
  %35 = load i64, i64* %bytes.addr.i.i10, align 8, !dbg !7489
  %cmp1.i.i20 = icmp ult i64 %conv.i.i19, %35, !dbg !7489
  br label %land.end.i.i25

land.end.i.i25:                                   ; preds = %land.rhs.i.i21, %if.end4
  %36 = phi i1 [ false, %if.end4 ], [ %cmp1.i.i20, %land.rhs.i.i21 ], !dbg !7490
  %lnot.i.i22 = xor i1 %36, true, !dbg !7489
  %lnot.ext.i.i23 = zext i1 %36 to i32, !dbg !7489
  %conv4.i.i24 = sext i32 %lnot.ext.i.i23 to i64, !dbg !7489
  br i1 %36, label %if.then.i.i26, label %if.end10.i.i41, !dbg !7491

if.then.i.i26:                                    ; preds = %land.end.i.i25
  %37 = load i64, i64* %bytes.addr.i.i10, align 8, !dbg !7492
  %38 = call i1 @llvm.is.constant.i64(i64 %37) #12, !dbg !7493
  br i1 %38, label %if.else.i.i29, label %if.then5.i.i27, !dbg !7494

if.then5.i.i27:                                   ; preds = %if.then.i.i26
  %39 = load i32, i32* %sz.i.i12, align 4, !dbg !7495
  %40 = load i64, i64* %bytes.addr.i.i10, align 8, !dbg !7496
  call void @copy_overflow(i32 %39, i64 %40) #13, !dbg !7497
  br label %if.end9.i.i33, !dbg !7497

if.else.i.i29:                                    ; preds = %if.then.i.i26
  %41 = load i8, i8* %is_source.addr.i.i11, align 1, !dbg !7498
  %tobool6.i.i28 = trunc i8 %41 to i1, !dbg !7498
  br i1 %tobool6.i.i28, label %if.then7.i.i30, label %if.else8.i.i31, !dbg !7499

if.then7.i.i30:                                   ; preds = %if.else.i.i29
  call void @__bad_copy_from() #13, !dbg !7500
  br label %if.end.i.i32, !dbg !7500

if.else8.i.i31:                                   ; preds = %if.else.i.i29
  call void @__bad_copy_to() #13, !dbg !7501
  br label %if.end.i.i32

if.end.i.i32:                                     ; preds = %if.else8.i.i31, %if.then7.i.i30
  br label %if.end9.i.i33

if.end9.i.i33:                                    ; preds = %if.end.i.i32, %if.then5.i.i27
  store i1 false, i1* %retval.i.i8, align 1, !dbg !7502
  br label %check_copy_size.exit.i55, !dbg !7502

if.end10.i.i41:                                   ; preds = %land.end.i.i25
  %42 = load i64, i64* %bytes.addr.i.i10, align 8, !dbg !7408
  %cmp11.i.i34 = icmp ugt i64 %42, 2147483647, !dbg !7408
  %lnot13.i.i35 = xor i1 %cmp11.i.i34, true, !dbg !7408
  %lnot.ext16.i.i36 = zext i1 %cmp11.i.i34 to i32, !dbg !7408
  store i32 %lnot.ext16.i.i36, i32* %__ret_warn_on.i.i13, align 4, !dbg !7408
  %43 = load i32, i32* %__ret_warn_on.i.i13, align 4, !dbg !7503
  %tobool17.i.i37 = icmp ne i32 %43, 0, !dbg !7503
  %lnot18.i.i38 = xor i1 %tobool17.i.i37, true, !dbg !7503
  %lnot.ext21.i.i39 = zext i1 %tobool17.i.i37 to i32, !dbg !7503
  %conv22.i.i40 = sext i32 %lnot.ext21.i.i39 to i64, !dbg !7503
  br i1 %tobool17.i.i37, label %if.then24.i.i42, label %if.end31.i.i48, !dbg !7408

if.then24.i.i42:                                  ; preds = %if.end10.i.i41
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.21, i64 0, i64 0), i32 150, i32 2307, i64 12) #12, !dbg !7504, !srcloc !7332
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 39) #12, !dbg !7505, !srcloc !7335
  br label %if.end31.i.i48, !dbg !7506

if.end31.i.i48:                                   ; preds = %if.then24.i.i42, %if.end10.i.i41
  %44 = load i32, i32* %__ret_warn_on.i.i13, align 4, !dbg !7408
  %tobool32.i.i43 = icmp ne i32 %44, 0, !dbg !7408
  %lnot33.i.i44 = xor i1 %tobool32.i.i43, true, !dbg !7408
  %lnot.ext36.i.i45 = zext i1 %tobool32.i.i43 to i32, !dbg !7408
  %conv37.i.i46 = sext i32 %lnot.ext36.i.i45 to i64, !dbg !7408
  store i64 %conv37.i.i46, i64* %tmp.i.i14, align 8, !dbg !7503
  %45 = load i64, i64* %tmp.i.i14, align 8, !dbg !7408
  %tobool38.i.i47 = icmp ne i64 %45, 0, !dbg !7507
  br i1 %tobool38.i.i47, label %if.then39.i.i49, label %if.end40.i.i51, !dbg !7508

if.then39.i.i49:                                  ; preds = %if.end31.i.i48
  store i1 false, i1* %retval.i.i8, align 1, !dbg !7509
  br label %check_copy_size.exit.i55, !dbg !7509

if.end40.i.i51:                                   ; preds = %if.end31.i.i48
  %46 = load i8*, i8** %addr.addr.i.i9, align 8, !dbg !7510
  %47 = load i64, i64* %bytes.addr.i.i10, align 8, !dbg !7511
  %48 = load i8, i8* %is_source.addr.i.i11, align 1, !dbg !7512
  %tobool41.i.i50 = trunc i8 %48 to i1, !dbg !7512
  call void @check_object_size(i8* %46, i64 %47, i1 zeroext %tobool41.i.i50) #13, !dbg !7513
  store i1 true, i1* %retval.i.i8, align 1, !dbg !7514
  br label %check_copy_size.exit.i55, !dbg !7514

check_copy_size.exit.i55:                         ; preds = %if.end40.i.i51, %if.then39.i.i49, %if.end9.i.i33
  %49 = load i1, i1* %retval.i.i8, align 1, !dbg !7515
  %lnot.i52 = xor i1 %49, true, !dbg !7488
  %lnot.ext.i53 = zext i1 %49 to i32, !dbg !7488
  %conv.i54 = sext i32 %lnot.ext.i53 to i64, !dbg !7488
  br i1 %49, label %if.then.i57, label %copy_to_user.exit, !dbg !7516

if.then.i57:                                      ; preds = %check_copy_size.exit.i55
  %50 = load i8*, i8** %to.addr.i15, align 8, !dbg !7517
  %51 = load i8*, i8** %from.addr.i16, align 8, !dbg !7518
  %52 = load i64, i64* %n.addr.i17, align 8, !dbg !7519
  %call2.i56 = call i64 @_copy_to_user(i8* %50, i8* %51, i64 %52) #13, !dbg !7520
  store i64 %call2.i56, i64* %n.addr.i17, align 8, !dbg !7521
  br label %copy_to_user.exit, !dbg !7522

copy_to_user.exit:                                ; preds = %check_copy_size.exit.i55, %if.then.i57
  %53 = load i64, i64* %n.addr.i17, align 8, !dbg !7523
  %tobool7 = icmp ne i64 %53, 0, !dbg !7524
  %54 = zext i1 %tobool7 to i64, !dbg !7524
  %cond = select i1 %tobool7, i32 -14, i32 0, !dbg !7524
  store i32 %cond, i32* %retval, align 4, !dbg !7525
  br label %return, !dbg !7525

return:                                           ; preds = %copy_to_user.exit, %if.then3, %if.then
  %55 = load i32, i32* %retval, align 4, !dbg !7526
  ret i32 %55, !dbg !7526
}

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define dso_local void @fb_console_init() #0 section ".init.text" !dbg !7527 {
entry:
  %i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7528, metadata !DIExpression()), !dbg !7529
  call void @console_lock() #10, !dbg !7530
  %0 = load %struct.class*, %struct.class** @fb_class, align 8, !dbg !7531
  %call = call %struct.device* (%struct.class*, %struct.device*, i32, i8*, i8*, ...) @device_create(%struct.class* %0, %struct.device* null, i32 0, i8* null, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i64 0, i64 0)) #10, !dbg !7532
  store %struct.device* %call, %struct.device** @fbcon_device, align 8, !dbg !7533
  %1 = load %struct.device*, %struct.device** @fbcon_device, align 8, !dbg !7534
  %2 = bitcast %struct.device* %1 to i8*, !dbg !7534
  %call1 = call zeroext i1 @IS_ERR(i8* %2) #10, !dbg !7536
  br i1 %call1, label %if.then, label %if.else, !dbg !7537

if.then:                                          ; preds = %entry
  %3 = load %struct.device*, %struct.device** @fbcon_device, align 8, !dbg !7538
  %4 = bitcast %struct.device* %3 to i8*, !dbg !7538
  %call2 = call i64 @PTR_ERR(i8* %4) #10, !dbg !7540
  %call3 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.4, i64 0, i64 0), i64 %call2) #11, !dbg !7541
  store %struct.device* null, %struct.device** @fbcon_device, align 8, !dbg !7542
  br label %if.end, !dbg !7543

if.else:                                          ; preds = %entry
  %call4 = call i32 @fbcon_init_device() #10, !dbg !7544
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  store i32 0, i32* %i, align 4, !dbg !7545
  br label %for.cond, !dbg !7547

for.cond:                                         ; preds = %for.inc, %if.end
  %5 = load i32, i32* %i, align 4, !dbg !7548
  %cmp = icmp slt i32 %5, 63, !dbg !7550
  br i1 %cmp, label %for.body, label %for.end, !dbg !7551

for.body:                                         ; preds = %for.cond
  %6 = load i32, i32* %i, align 4, !dbg !7552
  %idxprom = sext i32 %6 to i64, !dbg !7553
  %arrayidx = getelementptr [63 x i8], [63 x i8]* @con2fb_map, i64 0, i64 %idxprom, !dbg !7553
  store i8 -1, i8* %arrayidx, align 1, !dbg !7554
  br label %for.inc, !dbg !7553

for.inc:                                          ; preds = %for.body
  %7 = load i32, i32* %i, align 4, !dbg !7555
  %inc = add i32 %7, 1, !dbg !7555
  store i32 %inc, i32* %i, align 4, !dbg !7555
  br label %for.cond, !dbg !7556, !llvm.loop !7557

for.end:                                          ; preds = %for.cond
  call void @fbcon_start() #10, !dbg !7559
  call void @console_unlock() #10, !dbg !7560
  ret void, !dbg !7561
}

; Function Attrs: noredzone
declare dso_local %struct.device* @device_create(%struct.class*, %struct.device*, i32, i8*, i8*, ...) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @IS_ERR(i8* %ptr) #1 !dbg !7562 {
entry:
  %ptr.addr = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !7566, metadata !DIExpression()), !dbg !7567
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !7568
  %1 = ptrtoint i8* %0 to i64, !dbg !7568
  %2 = inttoptr i64 %1 to i8*, !dbg !7568
  %3 = ptrtoint i8* %2 to i64, !dbg !7568
  %cmp = icmp uge i64 %3, -4095, !dbg !7568
  %lnot = xor i1 %cmp, true, !dbg !7568
  %lnot1 = xor i1 %lnot, true, !dbg !7568
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !7568
  %conv = sext i32 %lnot.ext to i64, !dbg !7568
  %tobool = icmp ne i64 %conv, 0, !dbg !7568
  ret i1 %tobool, !dbg !7569
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @PTR_ERR(i8* %ptr) #1 !dbg !7570 {
entry:
  %ptr.addr = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !7573, metadata !DIExpression()), !dbg !7574
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !7575
  %1 = ptrtoint i8* %0 to i64, !dbg !7576
  ret i64 %1, !dbg !7577
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @fbcon_init_device() #1 !dbg !7578 {
entry:
  %i = alloca i32, align 4
  %error = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7581, metadata !DIExpression()), !dbg !7582
  call void @llvm.dbg.declare(metadata i32* %error, metadata !7583, metadata !DIExpression()), !dbg !7584
  store i32 0, i32* %error, align 4, !dbg !7584
  store i32 1, i32* @fbcon_has_sysfs, align 4, !dbg !7585
  store i32 0, i32* %i, align 4, !dbg !7586
  br label %for.cond, !dbg !7588

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !7589
  %conv = sext i32 %0 to i64, !dbg !7589
  %cmp = icmp ult i64 %conv, 3, !dbg !7591
  br i1 %cmp, label %for.body, label %for.end, !dbg !7592

for.body:                                         ; preds = %for.cond
  %1 = load %struct.device*, %struct.device** @fbcon_device, align 8, !dbg !7593
  %2 = load i32, i32* %i, align 4, !dbg !7595
  %idxprom = sext i32 %2 to i64, !dbg !7596
  %arrayidx = getelementptr [3 x %struct.device_attribute], [3 x %struct.device_attribute]* @device_attrs, i64 0, i64 %idxprom, !dbg !7596
  %call = call i32 @device_create_file(%struct.device* %1, %struct.device_attribute* %arrayidx) #10, !dbg !7597
  store i32 %call, i32* %error, align 4, !dbg !7598
  %3 = load i32, i32* %error, align 4, !dbg !7599
  %tobool = icmp ne i32 %3, 0, !dbg !7599
  br i1 %tobool, label %if.then, label %if.end, !dbg !7601

if.then:                                          ; preds = %for.body
  br label %for.end, !dbg !7602

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !7603

for.inc:                                          ; preds = %if.end
  %4 = load i32, i32* %i, align 4, !dbg !7604
  %inc = add i32 %4, 1, !dbg !7604
  store i32 %inc, i32* %i, align 4, !dbg !7604
  br label %for.cond, !dbg !7605, !llvm.loop !7606

for.end:                                          ; preds = %if.then, %for.cond
  %5 = load i32, i32* %error, align 4, !dbg !7608
  %tobool2 = icmp ne i32 %5, 0, !dbg !7608
  br i1 %tobool2, label %if.then3, label %if.end8, !dbg !7610

if.then3:                                         ; preds = %for.end
  br label %while.cond, !dbg !7611

while.cond:                                       ; preds = %while.body, %if.then3
  %6 = load i32, i32* %i, align 4, !dbg !7613
  %dec = add i32 %6, -1, !dbg !7613
  store i32 %dec, i32* %i, align 4, !dbg !7613
  %cmp4 = icmp sge i32 %dec, 0, !dbg !7614
  br i1 %cmp4, label %while.body, label %while.end, !dbg !7611

while.body:                                       ; preds = %while.cond
  %7 = load %struct.device*, %struct.device** @fbcon_device, align 8, !dbg !7615
  %8 = load i32, i32* %i, align 4, !dbg !7616
  %idxprom6 = sext i32 %8 to i64, !dbg !7617
  %arrayidx7 = getelementptr [3 x %struct.device_attribute], [3 x %struct.device_attribute]* @device_attrs, i64 0, i64 %idxprom6, !dbg !7617
  call void @device_remove_file(%struct.device* %7, %struct.device_attribute* %arrayidx7) #10, !dbg !7618
  br label %while.cond, !dbg !7611, !llvm.loop !7619

while.end:                                        ; preds = %while.cond
  store i32 0, i32* @fbcon_has_sysfs, align 4, !dbg !7621
  br label %if.end8, !dbg !7622

if.end8:                                          ; preds = %while.end, %for.end
  ret i32 0, !dbg !7623
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @fbcon_start() #1 !dbg !7624 {
entry:
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !5819, metadata !DIExpression()), !dbg !7625
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !5832, metadata !DIExpression()), !dbg !7629
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !5842, metadata !DIExpression()), !dbg !7631
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !5844, metadata !DIExpression()), !dbg !7632
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  %i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !7633, metadata !DIExpression()), !dbg !7634
  store %struct.atomic_t* @ignore_console_lock_warning, %struct.atomic_t** %v.addr.i, align 8
  %0 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !7635
  %1 = bitcast %struct.atomic_t* %0 to i8*, !dbg !7635
  store i8* %1, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %2 = load i8*, i8** %v.addr.i.i, align 8, !dbg !7636
  %3 = load i64, i64* %size.addr.i.i, align 8, !dbg !7637
  %conv.i.i = trunc i64 %3 to i32, !dbg !7637
  %call.i.i = call zeroext i1 @kasan_check_read(i8* %2, i32 %conv.i.i) #13, !dbg !7638
  %4 = load i8*, i8** %v.addr.i.i, align 8, !dbg !7639
  %5 = load i64, i64* %size.addr.i.i, align 8, !dbg !7639
  call void @kcsan_check_access(i8* %4, i64 %5, i32 4) #13, !dbg !7639
  %6 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !7640
  store %struct.atomic_t* %6, %struct.atomic_t** %v.addr.i1.i, align 8
  %7 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !7641
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %7, i32 0, i32 0, !dbg !7641
  %8 = load volatile i32, i32* %counter.i.i, align 4, !dbg !7641
  %tobool = icmp ne i32 %8, 0, !dbg !7634
  br i1 %tobool, label %land.end, label %land.lhs.true, !dbg !7634

land.lhs.true:                                    ; preds = %entry
  %call1 = call i32 @is_console_locked() #10, !dbg !7634
  %tobool2 = icmp ne i32 %call1, 0, !dbg !7634
  br i1 %tobool2, label %land.end, label %land.rhs, !dbg !7634

land.rhs:                                         ; preds = %land.lhs.true
  %9 = load i32, i32* @oops_in_progress, align 4, !dbg !7634
  %tobool3 = icmp ne i32 %9, 0, !dbg !7634
  %lnot = xor i1 %tobool3, true, !dbg !7634
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %entry
  %10 = phi i1 [ false, %land.lhs.true ], [ false, %entry ], [ %lnot, %land.rhs ], !dbg !7642
  %lnot4 = xor i1 %10, true, !dbg !7634
  %lnot5 = xor i1 %lnot4, true, !dbg !7634
  %lnot.ext = zext i1 %lnot5 to i32, !dbg !7634
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !7634
  %11 = load i32, i32* %__ret_warn_on, align 4, !dbg !7643
  %tobool6 = icmp ne i32 %11, 0, !dbg !7643
  %lnot7 = xor i1 %tobool6, true, !dbg !7643
  %lnot9 = xor i1 %lnot7, true, !dbg !7643
  %lnot.ext10 = zext i1 %lnot9 to i32, !dbg !7643
  %conv = sext i32 %lnot.ext10 to i64, !dbg !7643
  %tobool11 = icmp ne i64 %conv, 0, !dbg !7643
  br i1 %tobool11, label %if.then, label %if.end, !dbg !7634

if.then:                                          ; preds = %land.end
  br label %do.body, !dbg !7643

do.body:                                          ; preds = %if.then
  br label %do.body12, !dbg !7645

do.body12:                                        ; preds = %do.body
  br label %do.end, !dbg !7647

do.end:                                           ; preds = %do.body12
  br label %do.body13, !dbg !7645

do.body13:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str, i64 0, i64 0), i32 3312, i32 2305, i64 12) #12, !dbg !7649, !srcloc !7651
  br label %do.end14, !dbg !7649

do.end14:                                         ; preds = %do.body13
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 252) #12, !dbg !7652, !srcloc !7654
  br label %do.body15, !dbg !7645

do.body15:                                        ; preds = %do.end14
  br label %do.end16, !dbg !7655

do.end16:                                         ; preds = %do.body15
  br label %do.end17, !dbg !7645

do.end17:                                         ; preds = %do.end16
  br label %if.end, !dbg !7645

if.end:                                           ; preds = %do.end17, %land.end
  %12 = load i32, i32* %__ret_warn_on, align 4, !dbg !7634
  %tobool18 = icmp ne i32 %12, 0, !dbg !7634
  %lnot19 = xor i1 %tobool18, true, !dbg !7634
  %lnot21 = xor i1 %lnot19, true, !dbg !7634
  %lnot.ext22 = zext i1 %lnot21 to i32, !dbg !7634
  %conv23 = sext i32 %lnot.ext22 to i64, !dbg !7634
  store i64 %conv23, i64* %tmp, align 8, !dbg !7643
  %13 = load i64, i64* %tmp, align 8, !dbg !7634
  %14 = load i32, i32* @num_registered_fb, align 4, !dbg !7657
  %tobool24 = icmp ne i32 %14, 0, !dbg !7657
  br i1 %tobool24, label %if.then25, label %if.end31, !dbg !7659

if.then25:                                        ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7660, metadata !DIExpression()), !dbg !7662
  store i32 0, i32* %i, align 4, !dbg !7663
  br label %for.cond, !dbg !7663

for.cond:                                         ; preds = %for.inc, %if.then25
  %15 = load i32, i32* %i, align 4, !dbg !7665
  %cmp = icmp slt i32 %15, 32, !dbg !7665
  br i1 %cmp, label %for.body, label %for.end, !dbg !7663

for.body:                                         ; preds = %for.cond
  %16 = load i32, i32* %i, align 4, !dbg !7667
  %idxprom = sext i32 %16 to i64, !dbg !7667
  %arrayidx = getelementptr [32 x %struct.fb_info*], [32 x %struct.fb_info*]* @registered_fb, i64 0, i64 %idxprom, !dbg !7667
  %17 = load %struct.fb_info*, %struct.fb_info** %arrayidx, align 8, !dbg !7667
  %tobool27 = icmp ne %struct.fb_info* %17, null, !dbg !7667
  br i1 %tobool27, label %if.else, label %if.then28, !dbg !7665

if.then28:                                        ; preds = %for.body
  br label %if.end29, !dbg !7669

if.else:                                          ; preds = %for.body
  %18 = load i32, i32* %i, align 4, !dbg !7671
  store i32 %18, i32* @info_idx, align 4, !dbg !7673
  br label %for.end, !dbg !7674

if.end29:                                         ; preds = %if.then28
  br label %for.inc, !dbg !7667

for.inc:                                          ; preds = %if.end29
  %19 = load i32, i32* %i, align 4, !dbg !7665
  %inc = add i32 %19, 1, !dbg !7665
  store i32 %inc, i32* %i, align 4, !dbg !7665
  br label %for.cond, !dbg !7665, !llvm.loop !7675

for.end:                                          ; preds = %if.else, %for.cond
  %call30 = call i32 @do_fbcon_takeover(i32 0) #10, !dbg !7677
  br label %if.end31, !dbg !7678

if.end31:                                         ; preds = %for.end, %if.end
  ret void, !dbg !7679
}

; Function Attrs: noredzone
declare dso_local i8* @strsep(i8**, i8*) #3

; Function Attrs: noredzone
declare dso_local i32 @strncmp(i8*, i8*, i64) #3

; Function Attrs: noredzone
declare dso_local i64 @strlcpy(i8*, i8*, i64) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @fbcon_map_override() #1 !dbg !7680 {
entry:
  store i32 1, i32* @map_override, align 4, !dbg !7681
  ret void, !dbg !7682
}

; Function Attrs: noredzone
declare dso_local i64 @simple_strtoul(i8*, i8**, i32) #3

; Function Attrs: noredzone
declare dso_local i32 @strcmp(i8*, i8*) #3

; Function Attrs: noredzone
declare dso_local i64 @simple_strtol(i8*, i8**, i32) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @fbcon_is_inactive(%struct.vc_data* %vc, %struct.fb_info* %info) #1 !dbg !7683 {
entry:
  %vc.addr = alloca %struct.vc_data*, align 8
  %info.addr = alloca %struct.fb_info*, align 8
  %ops = alloca %struct.fbcon_ops*, align 8
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !7686, metadata !DIExpression()), !dbg !7687
  store %struct.fb_info* %info, %struct.fb_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fb_info** %info.addr, metadata !7688, metadata !DIExpression()), !dbg !7689
  call void @llvm.dbg.declare(metadata %struct.fbcon_ops** %ops, metadata !7690, metadata !DIExpression()), !dbg !7691
  %0 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !7692
  %fbcon_par = getelementptr inbounds %struct.fb_info, %struct.fb_info* %0, i32 0, i32 29, !dbg !7693
  %1 = load i8*, i8** %fbcon_par, align 8, !dbg !7693
  %2 = bitcast i8* %1 to %struct.fbcon_ops*, !dbg !7692
  store %struct.fbcon_ops* %2, %struct.fbcon_ops** %ops, align 8, !dbg !7691
  %3 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !7694
  %state = getelementptr inbounds %struct.fb_info, %struct.fb_info* %3, i32 0, i32 28, !dbg !7695
  %4 = load i32, i32* %state, align 8, !dbg !7695
  %cmp = icmp ne i32 %4, 0, !dbg !7696
  br i1 %cmp, label %lor.end, label %lor.lhs.false, !dbg !7697

lor.lhs.false:                                    ; preds = %entry
  %5 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !7698
  %vc_mode = getelementptr inbounds %struct.vc_data, %struct.vc_data* %5, i32 0, i32 16, !dbg !7699
  %6 = load i8, i8* %vc_mode, align 4, !dbg !7699
  %conv = zext i8 %6 to i32, !dbg !7698
  %cmp1 = icmp ne i32 %conv, 0, !dbg !7700
  br i1 %cmp1, label %lor.end, label %lor.rhs, !dbg !7701

lor.rhs:                                          ; preds = %lor.lhs.false
  %7 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !7702
  %graphics = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %7, i32 0, i32 17, !dbg !7703
  %8 = load i32, i32* %graphics, align 4, !dbg !7703
  %tobool = icmp ne i32 %8, 0, !dbg !7701
  br label %lor.end, !dbg !7701

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false, %entry
  %9 = phi i1 [ true, %lor.lhs.false ], [ true, %entry ], [ %tobool, %lor.rhs ]
  %lor.ext = zext i1 %9 to i32, !dbg !7701
  ret i32 %lor.ext, !dbg !7704
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @fbcon_del_cursor_timer(%struct.fb_info* %info) #1 !dbg !7705 {
entry:
  %info.addr = alloca %struct.fb_info*, align 8
  %ops = alloca %struct.fbcon_ops*, align 8
  store %struct.fb_info* %info, %struct.fb_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fb_info** %info.addr, metadata !7706, metadata !DIExpression()), !dbg !7707
  call void @llvm.dbg.declare(metadata %struct.fbcon_ops** %ops, metadata !7708, metadata !DIExpression()), !dbg !7709
  %0 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !7710
  %fbcon_par = getelementptr inbounds %struct.fb_info, %struct.fb_info* %0, i32 0, i32 29, !dbg !7711
  %1 = load i8*, i8** %fbcon_par, align 8, !dbg !7711
  %2 = bitcast i8* %1 to %struct.fbcon_ops*, !dbg !7710
  store %struct.fbcon_ops* %2, %struct.fbcon_ops** %ops, align 8, !dbg !7709
  %3 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !7712
  %queue = getelementptr inbounds %struct.fb_info, %struct.fb_info* %3, i32 0, i32 9, !dbg !7714
  %func = getelementptr inbounds %struct.work_struct, %struct.work_struct* %queue, i32 0, i32 2, !dbg !7715
  %4 = load void (%struct.work_struct*)*, void (%struct.work_struct*)** %func, align 8, !dbg !7715
  %cmp = icmp eq void (%struct.work_struct*)* %4, @fb_flashcursor, !dbg !7716
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !7717

land.lhs.true:                                    ; preds = %entry
  %5 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !7718
  %flags = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %5, i32 0, i32 19, !dbg !7719
  %6 = load i32, i32* %flags, align 4, !dbg !7719
  %and = and i32 %6, 2, !dbg !7720
  %tobool = icmp ne i32 %and, 0, !dbg !7720
  br i1 %tobool, label %if.then, label %if.end, !dbg !7721

if.then:                                          ; preds = %land.lhs.true
  %7 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !7722
  %cursor_timer = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %7, i32 0, i32 8, !dbg !7722
  %call = call i32 @del_timer(%struct.timer_list* %cursor_timer) #10, !dbg !7722
  %8 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !7724
  %flags1 = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %8, i32 0, i32 19, !dbg !7725
  %9 = load i32, i32* %flags1, align 4, !dbg !7726
  %and2 = and i32 %9, -3, !dbg !7726
  store i32 %and2, i32* %flags1, align 4, !dbg !7726
  br label %if.end, !dbg !7727

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  ret void, !dbg !7728
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @fbcon_add_cursor_timer(%struct.fb_info* %info) #1 !dbg !7729 {
entry:
  %info.addr = alloca %struct.fb_info*, align 8
  %ops = alloca %struct.fbcon_ops*, align 8
  %.compoundliteral = alloca %struct.atomic64_t, align 8
  store %struct.fb_info* %info, %struct.fb_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fb_info** %info.addr, metadata !7730, metadata !DIExpression()), !dbg !7731
  call void @llvm.dbg.declare(metadata %struct.fbcon_ops** %ops, metadata !7732, metadata !DIExpression()), !dbg !7733
  %0 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !7734
  %fbcon_par = getelementptr inbounds %struct.fb_info, %struct.fb_info* %0, i32 0, i32 29, !dbg !7735
  %1 = load i8*, i8** %fbcon_par, align 8, !dbg !7735
  %2 = bitcast i8* %1 to %struct.fbcon_ops*, !dbg !7734
  store %struct.fbcon_ops* %2, %struct.fbcon_ops** %ops, align 8, !dbg !7733
  %3 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !7736
  %queue = getelementptr inbounds %struct.fb_info, %struct.fb_info* %3, i32 0, i32 9, !dbg !7738
  %func = getelementptr inbounds %struct.work_struct, %struct.work_struct* %queue, i32 0, i32 2, !dbg !7739
  %4 = load void (%struct.work_struct*)*, void (%struct.work_struct*)** %func, align 8, !dbg !7739
  %tobool = icmp ne void (%struct.work_struct*)* %4, null, !dbg !7736
  br i1 %tobool, label %lor.lhs.false, label %land.lhs.true, !dbg !7740

lor.lhs.false:                                    ; preds = %entry
  %5 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !7741
  %queue1 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %5, i32 0, i32 9, !dbg !7742
  %func2 = getelementptr inbounds %struct.work_struct, %struct.work_struct* %queue1, i32 0, i32 2, !dbg !7743
  %6 = load void (%struct.work_struct*)*, void (%struct.work_struct*)** %func2, align 8, !dbg !7743
  %cmp = icmp eq void (%struct.work_struct*)* %6, @fb_flashcursor, !dbg !7744
  br i1 %cmp, label %land.lhs.true, label %if.end18, !dbg !7745

land.lhs.true:                                    ; preds = %lor.lhs.false, %entry
  %7 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !7746
  %flags = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %7, i32 0, i32 19, !dbg !7747
  %8 = load i32, i32* %flags, align 4, !dbg !7747
  %and = and i32 %8, 2, !dbg !7748
  %tobool3 = icmp ne i32 %and, 0, !dbg !7748
  br i1 %tobool3, label %if.end18, label %land.lhs.true4, !dbg !7749

land.lhs.true4:                                   ; preds = %land.lhs.true
  %9 = load i32, i32* @fbcon_cursor_noblink, align 4, !dbg !7750
  %tobool5 = icmp ne i32 %9, 0, !dbg !7750
  br i1 %tobool5, label %if.end18, label %if.then, !dbg !7751

if.then:                                          ; preds = %land.lhs.true4
  %10 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !7752
  %queue6 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %10, i32 0, i32 9, !dbg !7755
  %func7 = getelementptr inbounds %struct.work_struct, %struct.work_struct* %queue6, i32 0, i32 2, !dbg !7756
  %11 = load void (%struct.work_struct*)*, void (%struct.work_struct*)** %func7, align 8, !dbg !7756
  %tobool8 = icmp ne void (%struct.work_struct*)* %11, null, !dbg !7752
  br i1 %tobool8, label %if.end, label %if.then9, !dbg !7757

if.then9:                                         ; preds = %if.then
  br label %do.body, !dbg !7758

do.body:                                          ; preds = %if.then9
  %12 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !7759
  %queue10 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %12, i32 0, i32 9, !dbg !7759
  call void @__init_work(%struct.work_struct* %queue10, i32 0) #10, !dbg !7759
  %13 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !7759
  %queue11 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %13, i32 0, i32 9, !dbg !7759
  %data = getelementptr inbounds %struct.work_struct, %struct.work_struct* %queue11, i32 0, i32 0, !dbg !7759
  %counter = getelementptr inbounds %struct.atomic64_t, %struct.atomic64_t* %.compoundliteral, i32 0, i32 0, !dbg !7759
  store i64 68719476704, i64* %counter, align 8, !dbg !7759
  %14 = bitcast %struct.atomic64_t* %data to i8*, !dbg !7759
  %15 = bitcast %struct.atomic64_t* %.compoundliteral to i8*, !dbg !7759
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %15, i64 8, i1 false), !dbg !7759
  %16 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !7759
  %queue12 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %16, i32 0, i32 9, !dbg !7759
  %entry13 = getelementptr inbounds %struct.work_struct, %struct.work_struct* %queue12, i32 0, i32 1, !dbg !7759
  call void @INIT_LIST_HEAD(%struct.list_head* %entry13) #10, !dbg !7759
  %17 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !7759
  %queue14 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %17, i32 0, i32 9, !dbg !7759
  %func15 = getelementptr inbounds %struct.work_struct, %struct.work_struct* %queue14, i32 0, i32 2, !dbg !7759
  store void (%struct.work_struct*)* @fb_flashcursor, void (%struct.work_struct*)** %func15, align 8, !dbg !7759
  br label %do.end, !dbg !7759

do.end:                                           ; preds = %do.body
  br label %if.end, !dbg !7759

if.end:                                           ; preds = %do.end, %if.then
  %18 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !7761
  %cursor_timer = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %18, i32 0, i32 8, !dbg !7761
  call void @init_timer_key(%struct.timer_list* %cursor_timer, void (%struct.timer_list*)* @cursor_timer_handler, i32 0, i8* null, %struct.lock_class_key* null) #10, !dbg !7761
  %19 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !7762
  %cursor_timer16 = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %19, i32 0, i32 8, !dbg !7763
  %20 = load volatile i64, i64* @jiffies, align 8, !dbg !7764
  %21 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !7765
  %cur_blink_jiffies = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %21, i32 0, i32 13, !dbg !7766
  %22 = load i32, i32* %cur_blink_jiffies, align 4, !dbg !7766
  %conv = sext i32 %22 to i64, !dbg !7765
  %add = add i64 %20, %conv, !dbg !7767
  %call = call i32 @mod_timer(%struct.timer_list* %cursor_timer16, i64 %add) #10, !dbg !7768
  %23 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !7769
  %flags17 = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %23, i32 0, i32 19, !dbg !7770
  %24 = load i32, i32* %flags17, align 4, !dbg !7771
  %or = or i32 %24, 2, !dbg !7771
  store i32 %or, i32* %flags17, align 4, !dbg !7771
  br label %if.end18, !dbg !7772

if.end18:                                         ; preds = %if.end, %land.lhs.true4, %land.lhs.true, %lor.lhs.false
  ret void, !dbg !7773
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @get_color(%struct.vc_data* %vc, %struct.fb_info* %info, i16 zeroext %c, i32 %is_fg) #1 !dbg !7774 {
entry:
  %vc.addr = alloca %struct.vc_data*, align 8
  %info.addr = alloca %struct.fb_info*, align 8
  %c.addr = alloca i16, align 2
  %is_fg.addr = alloca i32, align 4
  %depth = alloca i32, align 4
  %color = alloca i32, align 4
  %charmask = alloca i16, align 2
  %col = alloca i32, align 4
  %fg = alloca i32, align 4
  %bg = alloca i32, align 4
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !7777, metadata !DIExpression()), !dbg !7778
  store %struct.fb_info* %info, %struct.fb_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fb_info** %info.addr, metadata !7779, metadata !DIExpression()), !dbg !7780
  store i16 %c, i16* %c.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %c.addr, metadata !7781, metadata !DIExpression()), !dbg !7782
  store i32 %is_fg, i32* %is_fg.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %is_fg.addr, metadata !7783, metadata !DIExpression()), !dbg !7784
  call void @llvm.dbg.declare(metadata i32* %depth, metadata !7785, metadata !DIExpression()), !dbg !7786
  %0 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !7787
  %var = getelementptr inbounds %struct.fb_info, %struct.fb_info* %0, i32 0, i32 6, !dbg !7788
  %1 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !7789
  %fix = getelementptr inbounds %struct.fb_info, %struct.fb_info* %1, i32 0, i32 7, !dbg !7790
  %call = call i32 @fb_get_color_depth(%struct.fb_var_screeninfo* %var, %struct.fb_fix_screeninfo* %fix) #10, !dbg !7791
  store i32 %call, i32* %depth, align 4, !dbg !7786
  call void @llvm.dbg.declare(metadata i32* %color, metadata !7792, metadata !DIExpression()), !dbg !7793
  store i32 0, i32* %color, align 4, !dbg !7793
  %2 = load i32, i32* @console_blanked, align 4, !dbg !7794
  %tobool = icmp ne i32 %2, 0, !dbg !7794
  br i1 %tobool, label %if.then, label %if.end, !dbg !7796

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i16* %charmask, metadata !7797, metadata !DIExpression()), !dbg !7799
  %3 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !7800
  %vc_hi_font_mask = getelementptr inbounds %struct.vc_data, %struct.vc_data* %3, i32 0, i32 26, !dbg !7801
  %4 = load i16, i16* %vc_hi_font_mask, align 8, !dbg !7801
  %conv = zext i16 %4 to i32, !dbg !7800
  %tobool1 = icmp ne i32 %conv, 0, !dbg !7800
  %5 = zext i1 %tobool1 to i64, !dbg !7800
  %cond = select i1 %tobool1, i32 511, i32 255, !dbg !7800
  %conv2 = trunc i32 %cond to i16, !dbg !7800
  store i16 %conv2, i16* %charmask, align 2, !dbg !7799
  %6 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !7802
  %vc_video_erase_char = getelementptr inbounds %struct.vc_data, %struct.vc_data* %6, i32 0, i32 28, !dbg !7803
  %7 = load i16, i16* %vc_video_erase_char, align 8, !dbg !7803
  %conv3 = zext i16 %7 to i32, !dbg !7802
  %8 = load i16, i16* %charmask, align 2, !dbg !7804
  %conv4 = zext i16 %8 to i32, !dbg !7804
  %and = and i32 %conv3, %conv4, !dbg !7805
  %conv5 = trunc i32 %and to i16, !dbg !7802
  store i16 %conv5, i16* %c.addr, align 2, !dbg !7806
  br label %if.end, !dbg !7807

if.end:                                           ; preds = %if.then, %entry
  %9 = load i32, i32* %depth, align 4, !dbg !7808
  %cmp = icmp ne i32 %9, 1, !dbg !7810
  br i1 %cmp, label %if.then7, label %if.end23, !dbg !7811

if.then7:                                         ; preds = %if.end
  %10 = load i32, i32* %is_fg.addr, align 4, !dbg !7812
  %tobool8 = icmp ne i32 %10, 0, !dbg !7813
  br i1 %tobool8, label %cond.true, label %cond.false, !dbg !7813

cond.true:                                        ; preds = %if.then7
  %11 = load i16, i16* %c.addr, align 2, !dbg !7814
  %conv9 = zext i16 %11 to i32, !dbg !7814
  %12 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !7814
  %vc_hi_font_mask10 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %12, i32 0, i32 26, !dbg !7814
  %13 = load i16, i16* %vc_hi_font_mask10, align 8, !dbg !7814
  %conv11 = zext i16 %13 to i32, !dbg !7814
  %tobool12 = icmp ne i32 %conv11, 0, !dbg !7814
  %14 = zext i1 %tobool12 to i64, !dbg !7814
  %cond13 = select i1 %tobool12, i32 9, i32 8, !dbg !7814
  %shr = ashr i32 %conv9, %cond13, !dbg !7814
  %and14 = and i32 %shr, 15, !dbg !7814
  br label %cond.end, !dbg !7813

cond.false:                                       ; preds = %if.then7
  %15 = load i16, i16* %c.addr, align 2, !dbg !7815
  %conv15 = zext i16 %15 to i32, !dbg !7815
  %16 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !7815
  %vc_hi_font_mask16 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %16, i32 0, i32 26, !dbg !7815
  %17 = load i16, i16* %vc_hi_font_mask16, align 8, !dbg !7815
  %conv17 = zext i16 %17 to i32, !dbg !7815
  %tobool18 = icmp ne i32 %conv17, 0, !dbg !7815
  %18 = zext i1 %tobool18 to i64, !dbg !7815
  %cond19 = select i1 %tobool18, i32 13, i32 12, !dbg !7815
  %shr20 = ashr i32 %conv15, %cond19, !dbg !7815
  %and21 = and i32 %shr20, 15, !dbg !7815
  br label %cond.end, !dbg !7813

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond22 = phi i32 [ %and14, %cond.true ], [ %and21, %cond.false ], !dbg !7813
  store i32 %cond22, i32* %color, align 4, !dbg !7816
  br label %if.end23, !dbg !7817

if.end23:                                         ; preds = %cond.end, %if.end
  %19 = load i32, i32* %depth, align 4, !dbg !7818
  switch i32 %19, label %sw.epilog54 [
    i32 1, label %sw.bb
    i32 2, label %sw.bb48
    i32 3, label %sw.bb52
  ], !dbg !7819

sw.bb:                                            ; preds = %if.end23
  call void @llvm.dbg.declare(metadata i32* %col, metadata !7820, metadata !DIExpression()), !dbg !7823
  %20 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !7824
  %call24 = call i32 @mono_col(%struct.fb_info* %20) #10, !dbg !7825
  store i32 %call24, i32* %col, align 4, !dbg !7823
  call void @llvm.dbg.declare(metadata i32* %fg, metadata !7826, metadata !DIExpression()), !dbg !7827
  %21 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !7828
  %fix25 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %21, i32 0, i32 7, !dbg !7829
  %visual = getelementptr inbounds %struct.fb_fix_screeninfo, %struct.fb_fix_screeninfo* %fix25, i32 0, i32 5, !dbg !7830
  %22 = load i32, i32* %visual, align 4, !dbg !7830
  %cmp26 = icmp ne i32 %22, 0, !dbg !7831
  br i1 %cmp26, label %cond.true28, label %cond.false29, !dbg !7832

cond.true28:                                      ; preds = %sw.bb
  %23 = load i32, i32* %col, align 4, !dbg !7833
  br label %cond.end30, !dbg !7832

cond.false29:                                     ; preds = %sw.bb
  br label %cond.end30, !dbg !7832

cond.end30:                                       ; preds = %cond.false29, %cond.true28
  %cond31 = phi i32 [ %23, %cond.true28 ], [ 0, %cond.false29 ], !dbg !7832
  store i32 %cond31, i32* %fg, align 4, !dbg !7827
  call void @llvm.dbg.declare(metadata i32* %bg, metadata !7834, metadata !DIExpression()), !dbg !7835
  %24 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !7836
  %fix32 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %24, i32 0, i32 7, !dbg !7837
  %visual33 = getelementptr inbounds %struct.fb_fix_screeninfo, %struct.fb_fix_screeninfo* %fix32, i32 0, i32 5, !dbg !7838
  %25 = load i32, i32* %visual33, align 4, !dbg !7838
  %cmp34 = icmp ne i32 %25, 0, !dbg !7839
  br i1 %cmp34, label %cond.true36, label %cond.false37, !dbg !7840

cond.true36:                                      ; preds = %cond.end30
  br label %cond.end38, !dbg !7840

cond.false37:                                     ; preds = %cond.end30
  %26 = load i32, i32* %col, align 4, !dbg !7841
  br label %cond.end38, !dbg !7840

cond.end38:                                       ; preds = %cond.false37, %cond.true36
  %cond39 = phi i32 [ 0, %cond.true36 ], [ %26, %cond.false37 ], !dbg !7840
  store i32 %cond39, i32* %bg, align 4, !dbg !7835
  %27 = load i32, i32* @console_blanked, align 4, !dbg !7842
  %tobool40 = icmp ne i32 %27, 0, !dbg !7842
  br i1 %tobool40, label %if.then41, label %if.end42, !dbg !7844

if.then41:                                        ; preds = %cond.end38
  %28 = load i32, i32* %bg, align 4, !dbg !7845
  store i32 %28, i32* %fg, align 4, !dbg !7846
  br label %if.end42, !dbg !7847

if.end42:                                         ; preds = %if.then41, %cond.end38
  %29 = load i32, i32* %is_fg.addr, align 4, !dbg !7848
  %tobool43 = icmp ne i32 %29, 0, !dbg !7849
  br i1 %tobool43, label %cond.true44, label %cond.false45, !dbg !7849

cond.true44:                                      ; preds = %if.end42
  %30 = load i32, i32* %fg, align 4, !dbg !7850
  br label %cond.end46, !dbg !7849

cond.false45:                                     ; preds = %if.end42
  %31 = load i32, i32* %bg, align 4, !dbg !7851
  br label %cond.end46, !dbg !7849

cond.end46:                                       ; preds = %cond.false45, %cond.true44
  %cond47 = phi i32 [ %30, %cond.true44 ], [ %31, %cond.false45 ], !dbg !7849
  store i32 %cond47, i32* %color, align 4, !dbg !7852
  br label %sw.epilog54, !dbg !7853

sw.bb48:                                          ; preds = %if.end23
  %32 = load i32, i32* %color, align 4, !dbg !7854
  switch i32 %32, label %sw.default [
    i32 0, label %sw.bb49
    i32 1, label %sw.bb50
    i32 2, label %sw.bb50
    i32 3, label %sw.bb50
    i32 4, label %sw.bb50
    i32 5, label %sw.bb50
    i32 6, label %sw.bb50
    i32 7, label %sw.bb51
    i32 8, label %sw.bb51
  ], !dbg !7855

sw.bb49:                                          ; preds = %sw.bb48
  store i32 0, i32* %color, align 4, !dbg !7856
  br label %sw.epilog, !dbg !7858

sw.bb50:                                          ; preds = %sw.bb48, %sw.bb48, %sw.bb48, %sw.bb48, %sw.bb48, %sw.bb48
  store i32 2, i32* %color, align 4, !dbg !7859
  br label %sw.epilog, !dbg !7860

sw.bb51:                                          ; preds = %sw.bb48, %sw.bb48
  store i32 1, i32* %color, align 4, !dbg !7861
  br label %sw.epilog, !dbg !7862

sw.default:                                       ; preds = %sw.bb48
  store i32 3, i32* %color, align 4, !dbg !7863
  br label %sw.epilog, !dbg !7864

sw.epilog:                                        ; preds = %sw.default, %sw.bb51, %sw.bb50, %sw.bb49
  br label %sw.epilog54, !dbg !7865

sw.bb52:                                          ; preds = %if.end23
  %33 = load i32, i32* %color, align 4, !dbg !7866
  %and53 = and i32 %33, 7, !dbg !7866
  store i32 %and53, i32* %color, align 4, !dbg !7866
  br label %sw.epilog54, !dbg !7867

sw.epilog54:                                      ; preds = %if.end23, %sw.bb52, %sw.epilog, %cond.end46
  %34 = load i32, i32* %color, align 4, !dbg !7868
  ret i32 %34, !dbg !7869
}

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i32(i32) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @_msecs_to_jiffies(i32 %m) #1 !dbg !7870 {
entry:
  %m.addr = alloca i32, align 4
  store i32 %m, i32* %m.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %m.addr, metadata !7871, metadata !DIExpression()), !dbg !7872
  %0 = load i32, i32* %m.addr, align 4, !dbg !7873
  %conv = zext i32 %0 to i64, !dbg !7873
  %add = add i64 %conv, 4, !dbg !7874
  %sub = sub i64 %add, 1, !dbg !7875
  %div = sdiv i64 %sub, 4, !dbg !7876
  ret i64 %div, !dbg !7877
}

; Function Attrs: noredzone
declare dso_local i64 @__msecs_to_jiffies(i32) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @fb_flashcursor(%struct.work_struct* %work) #1 !dbg !7878 {
entry:
  %work.addr = alloca %struct.work_struct*, align 8
  %info = alloca %struct.fb_info*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.fb_info*, align 8
  %ops = alloca %struct.fbcon_ops*, align 8
  %vc = alloca %struct.vc_data*, align 8
  %c = alloca i32, align 4
  %mode = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.work_struct* %work, %struct.work_struct** %work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.work_struct** %work.addr, metadata !7879, metadata !DIExpression()), !dbg !7880
  call void @llvm.dbg.declare(metadata %struct.fb_info** %info, metadata !7881, metadata !DIExpression()), !dbg !7882
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !7883, metadata !DIExpression()), !dbg !7885
  %0 = load %struct.work_struct*, %struct.work_struct** %work.addr, align 8, !dbg !7885
  %1 = bitcast %struct.work_struct* %0 to i8*, !dbg !7885
  store i8* %1, i8** %__mptr, align 8, !dbg !7885
  br label %do.body, !dbg !7885

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !7886

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !7885
  %add.ptr = getelementptr i8, i8* %2, i64 -448, !dbg !7885
  %3 = bitcast i8* %add.ptr to %struct.fb_info*, !dbg !7885
  store %struct.fb_info* %3, %struct.fb_info** %tmp, align 8, !dbg !7886
  %4 = load %struct.fb_info*, %struct.fb_info** %tmp, align 8, !dbg !7885
  store %struct.fb_info* %4, %struct.fb_info** %info, align 8, !dbg !7882
  call void @llvm.dbg.declare(metadata %struct.fbcon_ops** %ops, metadata !7888, metadata !DIExpression()), !dbg !7889
  %5 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !7890
  %fbcon_par = getelementptr inbounds %struct.fb_info, %struct.fb_info* %5, i32 0, i32 29, !dbg !7891
  %6 = load i8*, i8** %fbcon_par, align 8, !dbg !7891
  %7 = bitcast i8* %6 to %struct.fbcon_ops*, !dbg !7890
  store %struct.fbcon_ops* %7, %struct.fbcon_ops** %ops, align 8, !dbg !7889
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc, metadata !7892, metadata !DIExpression()), !dbg !7893
  store %struct.vc_data* null, %struct.vc_data** %vc, align 8, !dbg !7893
  call void @llvm.dbg.declare(metadata i32* %c, metadata !7894, metadata !DIExpression()), !dbg !7895
  call void @llvm.dbg.declare(metadata i32* %mode, metadata !7896, metadata !DIExpression()), !dbg !7897
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7898, metadata !DIExpression()), !dbg !7899
  %call = call i32 @console_trylock() #10, !dbg !7900
  store i32 %call, i32* %ret, align 4, !dbg !7901
  %8 = load i32, i32* %ret, align 4, !dbg !7902
  %cmp = icmp eq i32 %8, 0, !dbg !7904
  br i1 %cmp, label %if.then, label %if.end, !dbg !7905

if.then:                                          ; preds = %do.end
  br label %return, !dbg !7906

if.end:                                           ; preds = %do.end
  %9 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !7907
  %tobool = icmp ne %struct.fbcon_ops* %9, null, !dbg !7907
  br i1 %tobool, label %land.lhs.true, label %if.end4, !dbg !7909

land.lhs.true:                                    ; preds = %if.end
  %10 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !7910
  %currcon = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %10, i32 0, i32 12, !dbg !7911
  %11 = load i32, i32* %currcon, align 8, !dbg !7911
  %cmp1 = icmp ne i32 %11, -1, !dbg !7912
  br i1 %cmp1, label %if.then2, label %if.end4, !dbg !7913

if.then2:                                         ; preds = %land.lhs.true
  %12 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !7914
  %currcon3 = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %12, i32 0, i32 12, !dbg !7915
  %13 = load i32, i32* %currcon3, align 8, !dbg !7915
  %idxprom = sext i32 %13 to i64, !dbg !7916
  %arrayidx = getelementptr [63 x %struct.vc], [63 x %struct.vc]* @vc_cons, i64 0, i64 %idxprom, !dbg !7916
  %d = getelementptr inbounds %struct.vc, %struct.vc* %arrayidx, i32 0, i32 0, !dbg !7917
  %14 = load %struct.vc_data*, %struct.vc_data** %d, align 8, !dbg !7917
  store %struct.vc_data* %14, %struct.vc_data** %vc, align 8, !dbg !7918
  br label %if.end4, !dbg !7919

if.end4:                                          ; preds = %if.then2, %land.lhs.true, %if.end
  %15 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !7920
  %tobool5 = icmp ne %struct.vc_data* %15, null, !dbg !7920
  br i1 %tobool5, label %lor.lhs.false, label %if.then15, !dbg !7922

lor.lhs.false:                                    ; preds = %if.end4
  %16 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !7923
  %call6 = call zeroext i1 @con_is_visible(%struct.vc_data* %16) #10, !dbg !7924
  br i1 %call6, label %lor.lhs.false7, label %if.then15, !dbg !7925

lor.lhs.false7:                                   ; preds = %lor.lhs.false
  %17 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !7926
  %vc_num = getelementptr inbounds %struct.vc_data, %struct.vc_data* %17, i32 0, i32 3, !dbg !7927
  %18 = load i16, i16* %vc_num, align 8, !dbg !7927
  %idxprom8 = zext i16 %18 to i64, !dbg !7928
  %arrayidx9 = getelementptr [63 x i8], [63 x i8]* @con2fb_map, i64 0, i64 %idxprom8, !dbg !7928
  %19 = load i8, i8* %arrayidx9, align 1, !dbg !7928
  %idxprom10 = sext i8 %19 to i64, !dbg !7929
  %arrayidx11 = getelementptr [32 x %struct.fb_info*], [32 x %struct.fb_info*]* @registered_fb, i64 0, i64 %idxprom10, !dbg !7929
  %20 = load %struct.fb_info*, %struct.fb_info** %arrayidx11, align 8, !dbg !7929
  %21 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !7930
  %cmp12 = icmp ne %struct.fb_info* %20, %21, !dbg !7931
  br i1 %cmp12, label %if.then15, label %lor.lhs.false13, !dbg !7932

lor.lhs.false13:                                  ; preds = %lor.lhs.false7
  %22 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !7933
  %vc_deccm = getelementptr inbounds %struct.vc_data, %struct.vc_data* %22, i32 0, i32 36, !dbg !7934
  %bf.load = load i16, i16* %vc_deccm, align 8, !dbg !7934
  %bf.lshr = lshr i16 %bf.load, 5, !dbg !7934
  %bf.clear = and i16 %bf.lshr, 1, !dbg !7934
  %bf.cast = zext i16 %bf.clear to i32, !dbg !7934
  %cmp14 = icmp ne i32 %bf.cast, 1, !dbg !7935
  br i1 %cmp14, label %if.then15, label %if.end16, !dbg !7936

if.then15:                                        ; preds = %lor.lhs.false13, %lor.lhs.false7, %lor.lhs.false, %if.end4
  call void @console_unlock() #10, !dbg !7937
  br label %return, !dbg !7939

if.end16:                                         ; preds = %lor.lhs.false13
  %23 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !7940
  %vc_pos = getelementptr inbounds %struct.vc_data, %struct.vc_data* %23, i32 0, i32 25, !dbg !7940
  %24 = load i64, i64* %vc_pos, align 8, !dbg !7940
  %25 = inttoptr i64 %24 to i16*, !dbg !7940
  %26 = load i16, i16* %25, align 2, !dbg !7940
  %conv = zext i16 %26 to i32, !dbg !7940
  store i32 %conv, i32* %c, align 4, !dbg !7941
  %27 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !7942
  %cursor_flash = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %27, i32 0, i32 14, !dbg !7943
  %28 = load i32, i32* %cursor_flash, align 8, !dbg !7943
  %tobool17 = icmp ne i32 %28, 0, !dbg !7942
  br i1 %tobool17, label %lor.rhs, label %lor.end, !dbg !7944

lor.rhs:                                          ; preds = %if.end16
  %29 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !7945
  %cursor_state = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %29, i32 0, i32 9, !dbg !7946
  %enable = getelementptr inbounds %struct.fb_cursor, %struct.fb_cursor* %cursor_state, i32 0, i32 1, !dbg !7947
  %30 = load i16, i16* %enable, align 2, !dbg !7947
  %conv18 = zext i16 %30 to i32, !dbg !7945
  %tobool19 = icmp ne i32 %conv18, 0, !dbg !7944
  br label %lor.end, !dbg !7944

lor.end:                                          ; preds = %lor.rhs, %if.end16
  %31 = phi i1 [ true, %if.end16 ], [ %tobool19, %lor.rhs ]
  %32 = zext i1 %31 to i64, !dbg !7948
  %cond = select i1 %31, i32 2, i32 1, !dbg !7948
  store i32 %cond, i32* %mode, align 4, !dbg !7949
  %33 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !7950
  %cursor = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %33, i32 0, i32 4, !dbg !7951
  %34 = load void (%struct.vc_data*, %struct.fb_info*, i32, i32, i32)*, void (%struct.vc_data*, %struct.fb_info*, i32, i32, i32)** %cursor, align 8, !dbg !7951
  %35 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !7952
  %36 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !7953
  %37 = load i32, i32* %mode, align 4, !dbg !7954
  %38 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !7955
  %39 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !7956
  %40 = load i32, i32* %c, align 4, !dbg !7957
  %conv20 = trunc i32 %40 to i16, !dbg !7957
  %call21 = call i32 @get_color(%struct.vc_data* %38, %struct.fb_info* %39, i16 zeroext %conv20, i32 1) #10, !dbg !7958
  %41 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !7959
  %42 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !7960
  %43 = load i32, i32* %c, align 4, !dbg !7961
  %conv22 = trunc i32 %43 to i16, !dbg !7961
  %call23 = call i32 @get_color(%struct.vc_data* %41, %struct.fb_info* %42, i16 zeroext %conv22, i32 0) #10, !dbg !7962
  call void %34(%struct.vc_data* %35, %struct.fb_info* %36, i32 %37, i32 %call21, i32 %call23) #10, !dbg !7950
  call void @console_unlock() #10, !dbg !7963
  br label %return, !dbg !7964

return:                                           ; preds = %lor.end, %if.then15, %if.then
  ret void, !dbg !7964
}

; Function Attrs: noredzone
declare dso_local i32 @del_timer(%struct.timer_list*) #3

; Function Attrs: noredzone
declare dso_local i32 @console_trylock() #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__init_work(%struct.work_struct* %work, i32 %onstack) #1 !dbg !7965 {
entry:
  %work.addr = alloca %struct.work_struct*, align 8
  %onstack.addr = alloca i32, align 4
  store %struct.work_struct* %work, %struct.work_struct** %work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.work_struct** %work.addr, metadata !7968, metadata !DIExpression()), !dbg !7969
  store i32 %onstack, i32* %onstack.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %onstack.addr, metadata !7970, metadata !DIExpression()), !dbg !7971
  ret void, !dbg !7972
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #6

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @INIT_LIST_HEAD(%struct.list_head* %list) #1 !dbg !7973 {
entry:
  %list.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %list, %struct.list_head** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %list.addr, metadata !7977, metadata !DIExpression()), !dbg !7978
  br label %do.body, !dbg !7979

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !7980

do.body1:                                         ; preds = %do.body
  br label %do.end, !dbg !7982

do.end:                                           ; preds = %do.body1
  br label %do.body2, !dbg !7980

do.body2:                                         ; preds = %do.end
  %0 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !7984
  %1 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !7984
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 0, !dbg !7984
  store volatile %struct.list_head* %0, %struct.list_head** %next, align 8, !dbg !7984
  br label %do.end3, !dbg !7984

do.end3:                                          ; preds = %do.body2
  br label %do.end4, !dbg !7980

do.end4:                                          ; preds = %do.end3
  %2 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !7986
  %3 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !7987
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 1, !dbg !7988
  store %struct.list_head* %2, %struct.list_head** %prev, align 8, !dbg !7989
  ret void, !dbg !7990
}

; Function Attrs: noredzone
declare dso_local void @init_timer_key(%struct.timer_list*, void (%struct.timer_list*)*, i32, i8*, %struct.lock_class_key*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @cursor_timer_handler(%struct.timer_list* %t) #1 !dbg !7991 {
entry:
  %t.addr = alloca %struct.timer_list*, align 8
  %ops = alloca %struct.fbcon_ops*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.fbcon_ops*, align 8
  %info = alloca %struct.fb_info*, align 8
  store %struct.timer_list* %t, %struct.timer_list** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.timer_list** %t.addr, metadata !7992, metadata !DIExpression()), !dbg !7993
  call void @llvm.dbg.declare(metadata %struct.fbcon_ops** %ops, metadata !7994, metadata !DIExpression()), !dbg !7995
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !7996, metadata !DIExpression()), !dbg !7998
  %0 = load %struct.timer_list*, %struct.timer_list** %t.addr, align 8, !dbg !7998
  %1 = bitcast %struct.timer_list* %0 to i8*, !dbg !7998
  store i8* %1, i8** %__mptr, align 8, !dbg !7998
  br label %do.body, !dbg !7998

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !7999

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !7998
  %add.ptr = getelementptr i8, i8* %2, i64 -216, !dbg !7998
  %3 = bitcast i8* %add.ptr to %struct.fbcon_ops*, !dbg !7998
  store %struct.fbcon_ops* %3, %struct.fbcon_ops** %tmp, align 8, !dbg !7999
  %4 = load %struct.fbcon_ops*, %struct.fbcon_ops** %tmp, align 8, !dbg !7998
  store %struct.fbcon_ops* %4, %struct.fbcon_ops** %ops, align 8, !dbg !7995
  call void @llvm.dbg.declare(metadata %struct.fb_info** %info, metadata !8001, metadata !DIExpression()), !dbg !8002
  %5 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !8003
  %info1 = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %5, i32 0, i32 11, !dbg !8004
  %6 = load %struct.fb_info*, %struct.fb_info** %info1, align 8, !dbg !8004
  store %struct.fb_info* %6, %struct.fb_info** %info, align 8, !dbg !8002
  %7 = load %struct.workqueue_struct*, %struct.workqueue_struct** @system_power_efficient_wq, align 8, !dbg !8005
  %8 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !8006
  %queue = getelementptr inbounds %struct.fb_info, %struct.fb_info* %8, i32 0, i32 9, !dbg !8007
  %call = call zeroext i1 @queue_work(%struct.workqueue_struct* %7, %struct.work_struct* %queue) #10, !dbg !8008
  %9 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !8009
  %cursor_timer = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %9, i32 0, i32 8, !dbg !8010
  %10 = load volatile i64, i64* @jiffies, align 8, !dbg !8011
  %11 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !8012
  %cur_blink_jiffies = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %11, i32 0, i32 13, !dbg !8013
  %12 = load i32, i32* %cur_blink_jiffies, align 4, !dbg !8013
  %conv = sext i32 %12 to i64, !dbg !8012
  %add = add i64 %10, %conv, !dbg !8014
  %call2 = call i32 @mod_timer(%struct.timer_list* %cursor_timer, i64 %add) #10, !dbg !8015
  ret void, !dbg !8016
}

; Function Attrs: noredzone
declare dso_local i32 @mod_timer(%struct.timer_list*, i64) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @queue_work(%struct.workqueue_struct* %wq, %struct.work_struct* %work) #1 !dbg !8017 {
entry:
  %wq.addr = alloca %struct.workqueue_struct*, align 8
  %work.addr = alloca %struct.work_struct*, align 8
  store %struct.workqueue_struct* %wq, %struct.workqueue_struct** %wq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.workqueue_struct** %wq.addr, metadata !8020, metadata !DIExpression()), !dbg !8021
  store %struct.work_struct* %work, %struct.work_struct** %work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.work_struct** %work.addr, metadata !8022, metadata !DIExpression()), !dbg !8023
  %0 = load %struct.workqueue_struct*, %struct.workqueue_struct** %wq.addr, align 8, !dbg !8024
  %1 = load %struct.work_struct*, %struct.work_struct** %work.addr, align 8, !dbg !8025
  %call = call zeroext i1 @queue_work_on(i32 1, %struct.workqueue_struct* %0, %struct.work_struct* %1) #10, !dbg !8026
  ret i1 %call, !dbg !8027
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @queue_work_on(i32, %struct.workqueue_struct*, %struct.work_struct*) #3

; Function Attrs: noredzone
declare dso_local i32 @fb_get_color_depth(%struct.fb_var_screeninfo*, %struct.fb_fix_screeninfo*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mono_col(%struct.fb_info* %info) #1 !dbg !8028 {
entry:
  %info.addr = alloca %struct.fb_info*, align 8
  %max_len = alloca i32, align 4
  %__UNIQUE_ID___x241 = alloca i32, align 4
  %__UNIQUE_ID___y242 = alloca i32, align 4
  %tmp = alloca i32, align 4
  %__UNIQUE_ID___x243 = alloca i32, align 4
  %__UNIQUE_ID___y244 = alloca i32, align 4
  %tmp5 = alloca i32, align 4
  store %struct.fb_info* %info, %struct.fb_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fb_info** %info.addr, metadata !8033, metadata !DIExpression()), !dbg !8034
  call void @llvm.dbg.declare(metadata i32* %max_len, metadata !8035, metadata !DIExpression()), !dbg !8036
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x241, metadata !8037, metadata !DIExpression()), !dbg !8040
  %0 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !8040
  %var = getelementptr inbounds %struct.fb_info, %struct.fb_info* %0, i32 0, i32 6, !dbg !8040
  %green = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %var, i32 0, i32 9, !dbg !8040
  %length = getelementptr inbounds %struct.fb_bitfield, %struct.fb_bitfield* %green, i32 0, i32 1, !dbg !8040
  %1 = load i32, i32* %length, align 4, !dbg !8040
  store i32 %1, i32* %__UNIQUE_ID___x241, align 4, !dbg !8040
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y242, metadata !8041, metadata !DIExpression()), !dbg !8040
  %2 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !8040
  %var1 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %2, i32 0, i32 6, !dbg !8040
  %red = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %var1, i32 0, i32 8, !dbg !8040
  %length2 = getelementptr inbounds %struct.fb_bitfield, %struct.fb_bitfield* %red, i32 0, i32 1, !dbg !8040
  %3 = load i32, i32* %length2, align 4, !dbg !8040
  store i32 %3, i32* %__UNIQUE_ID___y242, align 4, !dbg !8040
  %4 = load i32, i32* %__UNIQUE_ID___x241, align 4, !dbg !8040
  %5 = load i32, i32* %__UNIQUE_ID___y242, align 4, !dbg !8040
  %cmp = icmp ugt i32 %4, %5, !dbg !8040
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !8040

cond.true:                                        ; preds = %entry
  %6 = load i32, i32* %__UNIQUE_ID___x241, align 4, !dbg !8040
  br label %cond.end, !dbg !8040

cond.false:                                       ; preds = %entry
  %7 = load i32, i32* %__UNIQUE_ID___y242, align 4, !dbg !8040
  br label %cond.end, !dbg !8040

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %6, %cond.true ], [ %7, %cond.false ], !dbg !8040
  store i32 %cond, i32* %tmp, align 4, !dbg !8040
  %8 = load i32, i32* %tmp, align 4, !dbg !8040
  store i32 %8, i32* %max_len, align 4, !dbg !8042
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x243, metadata !8043, metadata !DIExpression()), !dbg !8045
  %9 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !8045
  %var3 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %9, i32 0, i32 6, !dbg !8045
  %blue = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %var3, i32 0, i32 10, !dbg !8045
  %length4 = getelementptr inbounds %struct.fb_bitfield, %struct.fb_bitfield* %blue, i32 0, i32 1, !dbg !8045
  %10 = load i32, i32* %length4, align 4, !dbg !8045
  store i32 %10, i32* %__UNIQUE_ID___x243, align 4, !dbg !8045
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y244, metadata !8046, metadata !DIExpression()), !dbg !8045
  %11 = load i32, i32* %max_len, align 4, !dbg !8045
  store i32 %11, i32* %__UNIQUE_ID___y244, align 4, !dbg !8045
  %12 = load i32, i32* %__UNIQUE_ID___x243, align 4, !dbg !8045
  %13 = load i32, i32* %__UNIQUE_ID___y244, align 4, !dbg !8045
  %cmp6 = icmp ugt i32 %12, %13, !dbg !8045
  br i1 %cmp6, label %cond.true7, label %cond.false8, !dbg !8045

cond.true7:                                       ; preds = %cond.end
  %14 = load i32, i32* %__UNIQUE_ID___x243, align 4, !dbg !8045
  br label %cond.end9, !dbg !8045

cond.false8:                                      ; preds = %cond.end
  %15 = load i32, i32* %__UNIQUE_ID___y244, align 4, !dbg !8045
  br label %cond.end9, !dbg !8045

cond.end9:                                        ; preds = %cond.false8, %cond.true7
  %cond10 = phi i32 [ %14, %cond.true7 ], [ %15, %cond.false8 ], !dbg !8045
  store i32 %cond10, i32* %tmp5, align 4, !dbg !8045
  %16 = load i32, i32* %tmp5, align 4, !dbg !8045
  store i32 %16, i32* %max_len, align 4, !dbg !8047
  %17 = load i32, i32* %max_len, align 4, !dbg !8048
  %shl = shl i32 4095, %17, !dbg !8049
  %neg = xor i32 %shl, -1, !dbg !8050
  %and = and i32 %neg, 255, !dbg !8051
  ret i32 %and, !dbg !8052
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @set_blitting_type(%struct.vc_data* %vc, %struct.fb_info* %info) #1 !dbg !8053 {
entry:
  %vc.addr = alloca %struct.vc_data*, align 8
  %info.addr = alloca %struct.fb_info*, align 8
  %ops = alloca %struct.fbcon_ops*, align 8
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !8056, metadata !DIExpression()), !dbg !8057
  store %struct.fb_info* %info, %struct.fb_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fb_info** %info.addr, metadata !8058, metadata !DIExpression()), !dbg !8059
  call void @llvm.dbg.declare(metadata %struct.fbcon_ops** %ops, metadata !8060, metadata !DIExpression()), !dbg !8061
  %0 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !8062
  %fbcon_par = getelementptr inbounds %struct.fb_info, %struct.fb_info* %0, i32 0, i32 29, !dbg !8063
  %1 = load i8*, i8** %fbcon_par, align 8, !dbg !8063
  %2 = bitcast i8* %1 to %struct.fbcon_ops*, !dbg !8062
  store %struct.fbcon_ops* %2, %struct.fbcon_ops** %ops, align 8, !dbg !8061
  %3 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !8064
  %vc_num = getelementptr inbounds %struct.vc_data, %struct.vc_data* %3, i32 0, i32 3, !dbg !8065
  %4 = load i16, i16* %vc_num, align 8, !dbg !8065
  %idxprom = zext i16 %4 to i64, !dbg !8066
  %arrayidx = getelementptr [63 x %struct.fbcon_display], [63 x %struct.fbcon_display]* @fb_display, i64 0, i64 %idxprom, !dbg !8066
  %5 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !8067
  %p = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %5, i32 0, i32 10, !dbg !8068
  store %struct.fbcon_display* %arrayidx, %struct.fbcon_display** %p, align 8, !dbg !8069
  %6 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !8070
  %flags = getelementptr inbounds %struct.fb_info, %struct.fb_info* %6, i32 0, i32 2, !dbg !8072
  %7 = load i32, i32* %flags, align 8, !dbg !8072
  %and = and i32 %7, 131072, !dbg !8073
  %tobool = icmp ne i32 %and, 0, !dbg !8073
  br i1 %tobool, label %if.then, label %if.else, !dbg !8074

if.then:                                          ; preds = %entry
  %8 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !8075
  %9 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !8076
  call void @fbcon_set_tileops(%struct.vc_data* %8, %struct.fb_info* %9) #10, !dbg !8077
  br label %if.end, !dbg !8077

if.else:                                          ; preds = %entry
  %10 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !8078
  call void @fbcon_set_rotation(%struct.fb_info* %10) #10, !dbg !8080
  %11 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !8081
  call void @fbcon_set_bitops(%struct.fbcon_ops* %11) #10, !dbg !8082
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !8083
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @var_to_display(%struct.fbcon_display* %disp, %struct.fb_var_screeninfo* %var, %struct.fb_info* %info) #1 !dbg !8084 {
entry:
  %retval = alloca i32, align 4
  %disp.addr = alloca %struct.fbcon_display*, align 8
  %var.addr = alloca %struct.fb_var_screeninfo*, align 8
  %info.addr = alloca %struct.fb_info*, align 8
  store %struct.fbcon_display* %disp, %struct.fbcon_display** %disp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fbcon_display** %disp.addr, metadata !8087, metadata !DIExpression()), !dbg !8088
  store %struct.fb_var_screeninfo* %var, %struct.fb_var_screeninfo** %var.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fb_var_screeninfo** %var.addr, metadata !8089, metadata !DIExpression()), !dbg !8090
  store %struct.fb_info* %info, %struct.fb_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fb_info** %info.addr, metadata !8091, metadata !DIExpression()), !dbg !8092
  %0 = load %struct.fb_var_screeninfo*, %struct.fb_var_screeninfo** %var.addr, align 8, !dbg !8093
  %xres_virtual = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %0, i32 0, i32 2, !dbg !8094
  %1 = load i32, i32* %xres_virtual, align 4, !dbg !8094
  %2 = load %struct.fbcon_display*, %struct.fbcon_display** %disp.addr, align 8, !dbg !8095
  %xres_virtual1 = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %2, i32 0, i32 8, !dbg !8096
  store i32 %1, i32* %xres_virtual1, align 8, !dbg !8097
  %3 = load %struct.fb_var_screeninfo*, %struct.fb_var_screeninfo** %var.addr, align 8, !dbg !8098
  %yres_virtual = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %3, i32 0, i32 3, !dbg !8099
  %4 = load i32, i32* %yres_virtual, align 4, !dbg !8099
  %5 = load %struct.fbcon_display*, %struct.fbcon_display** %disp.addr, align 8, !dbg !8100
  %yres_virtual2 = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %5, i32 0, i32 9, !dbg !8101
  store i32 %4, i32* %yres_virtual2, align 4, !dbg !8102
  %6 = load %struct.fb_var_screeninfo*, %struct.fb_var_screeninfo** %var.addr, align 8, !dbg !8103
  %bits_per_pixel = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %6, i32 0, i32 6, !dbg !8104
  %7 = load i32, i32* %bits_per_pixel, align 4, !dbg !8104
  %8 = load %struct.fbcon_display*, %struct.fbcon_display** %disp.addr, align 8, !dbg !8105
  %bits_per_pixel3 = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %8, i32 0, i32 12, !dbg !8106
  store i32 %7, i32* %bits_per_pixel3, align 8, !dbg !8107
  %9 = load %struct.fb_var_screeninfo*, %struct.fb_var_screeninfo** %var.addr, align 8, !dbg !8108
  %grayscale = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %9, i32 0, i32 7, !dbg !8109
  %10 = load i32, i32* %grayscale, align 4, !dbg !8109
  %11 = load %struct.fbcon_display*, %struct.fbcon_display** %disp.addr, align 8, !dbg !8110
  %grayscale4 = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %11, i32 0, i32 13, !dbg !8111
  store i32 %10, i32* %grayscale4, align 4, !dbg !8112
  %12 = load %struct.fb_var_screeninfo*, %struct.fb_var_screeninfo** %var.addr, align 8, !dbg !8113
  %nonstd = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %12, i32 0, i32 12, !dbg !8114
  %13 = load i32, i32* %nonstd, align 4, !dbg !8114
  %14 = load %struct.fbcon_display*, %struct.fbcon_display** %disp.addr, align 8, !dbg !8115
  %nonstd5 = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %14, i32 0, i32 14, !dbg !8116
  store i32 %13, i32* %nonstd5, align 8, !dbg !8117
  %15 = load %struct.fb_var_screeninfo*, %struct.fb_var_screeninfo** %var.addr, align 8, !dbg !8118
  %accel_flags = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %15, i32 0, i32 16, !dbg !8119
  %16 = load i32, i32* %accel_flags, align 4, !dbg !8119
  %17 = load %struct.fbcon_display*, %struct.fbcon_display** %disp.addr, align 8, !dbg !8120
  %accel_flags6 = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %17, i32 0, i32 15, !dbg !8121
  store i32 %16, i32* %accel_flags6, align 4, !dbg !8122
  %18 = load %struct.fb_var_screeninfo*, %struct.fb_var_screeninfo** %var.addr, align 8, !dbg !8123
  %height = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %18, i32 0, i32 14, !dbg !8124
  %19 = load i32, i32* %height, align 4, !dbg !8124
  %20 = load %struct.fbcon_display*, %struct.fbcon_display** %disp.addr, align 8, !dbg !8125
  %height7 = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %20, i32 0, i32 10, !dbg !8126
  store i32 %19, i32* %height7, align 8, !dbg !8127
  %21 = load %struct.fb_var_screeninfo*, %struct.fb_var_screeninfo** %var.addr, align 8, !dbg !8128
  %width = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %21, i32 0, i32 15, !dbg !8129
  %22 = load i32, i32* %width, align 4, !dbg !8129
  %23 = load %struct.fbcon_display*, %struct.fbcon_display** %disp.addr, align 8, !dbg !8130
  %width8 = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %23, i32 0, i32 11, !dbg !8131
  store i32 %22, i32* %width8, align 4, !dbg !8132
  %24 = load %struct.fbcon_display*, %struct.fbcon_display** %disp.addr, align 8, !dbg !8133
  %red = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %24, i32 0, i32 17, !dbg !8134
  %25 = load %struct.fb_var_screeninfo*, %struct.fb_var_screeninfo** %var.addr, align 8, !dbg !8135
  %red9 = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %25, i32 0, i32 8, !dbg !8136
  %26 = bitcast %struct.fb_bitfield* %red to i8*, !dbg !8136
  %27 = bitcast %struct.fb_bitfield* %red9 to i8*, !dbg !8136
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %26, i8* align 4 %27, i64 12, i1 false), !dbg !8136
  %28 = load %struct.fbcon_display*, %struct.fbcon_display** %disp.addr, align 8, !dbg !8137
  %green = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %28, i32 0, i32 18, !dbg !8138
  %29 = load %struct.fb_var_screeninfo*, %struct.fb_var_screeninfo** %var.addr, align 8, !dbg !8139
  %green10 = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %29, i32 0, i32 9, !dbg !8140
  %30 = bitcast %struct.fb_bitfield* %green to i8*, !dbg !8140
  %31 = bitcast %struct.fb_bitfield* %green10 to i8*, !dbg !8140
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %30, i8* align 4 %31, i64 12, i1 false), !dbg !8140
  %32 = load %struct.fbcon_display*, %struct.fbcon_display** %disp.addr, align 8, !dbg !8141
  %blue = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %32, i32 0, i32 19, !dbg !8142
  %33 = load %struct.fb_var_screeninfo*, %struct.fb_var_screeninfo** %var.addr, align 8, !dbg !8143
  %blue11 = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %33, i32 0, i32 10, !dbg !8144
  %34 = bitcast %struct.fb_bitfield* %blue to i8*, !dbg !8144
  %35 = bitcast %struct.fb_bitfield* %blue11 to i8*, !dbg !8144
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %34, i8* align 4 %35, i64 12, i1 false), !dbg !8144
  %36 = load %struct.fbcon_display*, %struct.fbcon_display** %disp.addr, align 8, !dbg !8145
  %transp = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %36, i32 0, i32 20, !dbg !8146
  %37 = load %struct.fb_var_screeninfo*, %struct.fb_var_screeninfo** %var.addr, align 8, !dbg !8147
  %transp12 = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %37, i32 0, i32 11, !dbg !8148
  %38 = bitcast %struct.fb_bitfield* %transp to i8*, !dbg !8148
  %39 = bitcast %struct.fb_bitfield* %transp12 to i8*, !dbg !8148
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %38, i8* align 4 %39, i64 12, i1 false), !dbg !8148
  %40 = load %struct.fb_var_screeninfo*, %struct.fb_var_screeninfo** %var.addr, align 8, !dbg !8149
  %rotate = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %40, i32 0, i32 26, !dbg !8150
  %41 = load i32, i32* %rotate, align 4, !dbg !8150
  %42 = load %struct.fbcon_display*, %struct.fbcon_display** %disp.addr, align 8, !dbg !8151
  %rotate13 = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %42, i32 0, i32 16, !dbg !8152
  store i32 %41, i32* %rotate13, align 8, !dbg !8153
  %43 = load %struct.fb_var_screeninfo*, %struct.fb_var_screeninfo** %var.addr, align 8, !dbg !8154
  %44 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !8155
  %modelist = getelementptr inbounds %struct.fb_info, %struct.fb_info* %44, i32 0, i32 13, !dbg !8156
  %call = call %struct.fb_videomode* @fb_match_mode(%struct.fb_var_screeninfo* %43, %struct.list_head* %modelist) #10, !dbg !8157
  %45 = load %struct.fbcon_display*, %struct.fbcon_display** %disp.addr, align 8, !dbg !8158
  %mode = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %45, i32 0, i32 21, !dbg !8159
  store %struct.fb_videomode* %call, %struct.fb_videomode** %mode, align 8, !dbg !8160
  %46 = load %struct.fbcon_display*, %struct.fbcon_display** %disp.addr, align 8, !dbg !8161
  %mode14 = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %46, i32 0, i32 21, !dbg !8163
  %47 = load %struct.fb_videomode*, %struct.fb_videomode** %mode14, align 8, !dbg !8163
  %cmp = icmp eq %struct.fb_videomode* %47, null, !dbg !8164
  br i1 %cmp, label %if.then, label %if.end, !dbg !8165

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !8166
  br label %return, !dbg !8166

if.end:                                           ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !8167
  br label %return, !dbg !8167

return:                                           ; preds = %if.end, %if.then
  %48 = load i32, i32* %retval, align 4, !dbg !8168
  ret i32 %48, !dbg !8168
}

; Function Attrs: noredzone
declare dso_local i32 @vc_resize(%struct.vc_data*, i32, i32) #3

; Function Attrs: noredzone
declare dso_local void @fbcon_set_tileops(%struct.vc_data*, %struct.fb_info*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @fbcon_set_rotation(%struct.fb_info* %info) #1 !dbg !8169 {
entry:
  %info.addr = alloca %struct.fb_info*, align 8
  %ops = alloca %struct.fbcon_ops*, align 8
  store %struct.fb_info* %info, %struct.fb_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fb_info** %info.addr, metadata !8170, metadata !DIExpression()), !dbg !8171
  call void @llvm.dbg.declare(metadata %struct.fbcon_ops** %ops, metadata !8172, metadata !DIExpression()), !dbg !8173
  %0 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !8174
  %fbcon_par = getelementptr inbounds %struct.fb_info, %struct.fb_info* %0, i32 0, i32 29, !dbg !8175
  %1 = load i8*, i8** %fbcon_par, align 8, !dbg !8175
  %2 = bitcast i8* %1 to %struct.fbcon_ops*, !dbg !8174
  store %struct.fbcon_ops* %2, %struct.fbcon_ops** %ops, align 8, !dbg !8173
  %3 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !8176
  %rotate = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %3, i32 0, i32 20, !dbg !8177
  store i32 0, i32* %rotate, align 8, !dbg !8178
  ret void, !dbg !8179
}

; Function Attrs: noredzone
declare dso_local void @fbcon_set_bitops(%struct.fbcon_ops*) #3

; Function Attrs: noredzone
declare dso_local %struct.fb_videomode* @fb_match_mode(%struct.fb_var_screeninfo*, %struct.list_head*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @updatescrollmode(%struct.fbcon_display* %p, %struct.fb_info* %info, %struct.vc_data* %vc) #1 !dbg !8180 {
entry:
  %p.addr = alloca %struct.fbcon_display*, align 8
  %info.addr = alloca %struct.fb_info*, align 8
  %vc.addr = alloca %struct.vc_data*, align 8
  %ops = alloca %struct.fbcon_ops*, align 8
  %fh = alloca i32, align 4
  %cap = alloca i32, align 4
  %t = alloca i16, align 2
  %ypan = alloca i32, align 4
  %_r = alloca i16, align 2
  %_v = alloca i16, align 2
  %tmp = alloca i32, align 4
  %ywrap = alloca i32, align 4
  %_r9 = alloca i16, align 2
  %_v11 = alloca i16, align 2
  %tmp14 = alloca i32, align 4
  %yres = alloca i32, align 4
  %_r28 = alloca i32, align 4
  %_v30 = alloca i32, align 4
  %tmp34 = alloca i32, align 4
  %vyres = alloca i32, align 4
  %_r46 = alloca i32, align 4
  %_v48 = alloca i32, align 4
  %tmp52 = alloca i32, align 4
  %good_pan = alloca i32, align 4
  %good_wrap = alloca i32, align 4
  %reading_fast = alloca i32, align 4
  %fast_copyarea = alloca i32, align 4
  %fast_imageblit = alloca i32, align 4
  store %struct.fbcon_display* %p, %struct.fbcon_display** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fbcon_display** %p.addr, metadata !8183, metadata !DIExpression()), !dbg !8184
  store %struct.fb_info* %info, %struct.fb_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fb_info** %info.addr, metadata !8185, metadata !DIExpression()), !dbg !8186
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !8187, metadata !DIExpression()), !dbg !8188
  call void @llvm.dbg.declare(metadata %struct.fbcon_ops** %ops, metadata !8189, metadata !DIExpression()), !dbg !8190
  %0 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !8191
  %fbcon_par = getelementptr inbounds %struct.fb_info, %struct.fb_info* %0, i32 0, i32 29, !dbg !8192
  %1 = load i8*, i8** %fbcon_par, align 8, !dbg !8192
  %2 = bitcast i8* %1 to %struct.fbcon_ops*, !dbg !8191
  store %struct.fbcon_ops* %2, %struct.fbcon_ops** %ops, align 8, !dbg !8190
  call void @llvm.dbg.declare(metadata i32* %fh, metadata !8193, metadata !DIExpression()), !dbg !8194
  %3 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !8195
  %vc_font = getelementptr inbounds %struct.vc_data, %struct.vc_data* %3, i32 0, i32 27, !dbg !8196
  %height = getelementptr inbounds %struct.console_font, %struct.console_font* %vc_font, i32 0, i32 1, !dbg !8197
  %4 = load i32, i32* %height, align 4, !dbg !8197
  store i32 %4, i32* %fh, align 4, !dbg !8194
  call void @llvm.dbg.declare(metadata i32* %cap, metadata !8198, metadata !DIExpression()), !dbg !8199
  %5 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !8200
  %flags = getelementptr inbounds %struct.fb_info, %struct.fb_info* %5, i32 0, i32 2, !dbg !8201
  %6 = load i32, i32* %flags, align 8, !dbg !8201
  store i32 %6, i32* %cap, align 4, !dbg !8199
  call void @llvm.dbg.declare(metadata i16* %t, metadata !8202, metadata !DIExpression()), !dbg !8203
  store i16 0, i16* %t, align 2, !dbg !8203
  call void @llvm.dbg.declare(metadata i32* %ypan, metadata !8204, metadata !DIExpression()), !dbg !8205
  call void @llvm.dbg.declare(metadata i16* %_r, metadata !8206, metadata !DIExpression()), !dbg !8208
  %7 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !8208
  %fix = getelementptr inbounds %struct.fb_info, %struct.fb_info* %7, i32 0, i32 7, !dbg !8208
  %ypanstep = getelementptr inbounds %struct.fb_fix_screeninfo, %struct.fb_fix_screeninfo* %fix, i32 0, i32 7, !dbg !8208
  %8 = load i16, i16* %ypanstep, align 2, !dbg !8208
  store i16 %8, i16* %_r, align 2, !dbg !8208
  call void @llvm.dbg.declare(metadata i16* %_v, metadata !8209, metadata !DIExpression()), !dbg !8208
  %9 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !8208
  %fix1 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %9, i32 0, i32 7, !dbg !8208
  %xpanstep = getelementptr inbounds %struct.fb_fix_screeninfo, %struct.fb_fix_screeninfo* %fix1, i32 0, i32 6, !dbg !8208
  %10 = load i16, i16* %xpanstep, align 8, !dbg !8208
  store i16 %10, i16* %_v, align 2, !dbg !8208
  %cmp = icmp eq i16* %_r, %_v, !dbg !8208
  %conv = zext i1 %cmp to i32, !dbg !8208
  %11 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !8208
  %rotate = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %11, i32 0, i32 20, !dbg !8208
  %12 = load i32, i32* %rotate, align 8, !dbg !8208
  %cmp2 = icmp eq i32 %12, 0, !dbg !8208
  br i1 %cmp2, label %cond.true, label %lor.lhs.false, !dbg !8208

lor.lhs.false:                                    ; preds = %entry
  %13 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !8208
  %rotate4 = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %13, i32 0, i32 20, !dbg !8208
  %14 = load i32, i32* %rotate4, align 8, !dbg !8208
  %cmp5 = icmp eq i32 %14, 2, !dbg !8208
  br i1 %cmp5, label %cond.true, label %cond.false, !dbg !8208

cond.true:                                        ; preds = %lor.lhs.false, %entry
  %15 = load i16, i16* %_r, align 2, !dbg !8208
  %conv7 = zext i16 %15 to i32, !dbg !8208
  br label %cond.end, !dbg !8208

cond.false:                                       ; preds = %lor.lhs.false
  %16 = load i16, i16* %_v, align 2, !dbg !8208
  %conv8 = zext i16 %16 to i32, !dbg !8208
  br label %cond.end, !dbg !8208

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv7, %cond.true ], [ %conv8, %cond.false ], !dbg !8208
  store i32 %cond, i32* %tmp, align 4, !dbg !8208
  %17 = load i32, i32* %tmp, align 4, !dbg !8208
  store i32 %17, i32* %ypan, align 4, !dbg !8205
  call void @llvm.dbg.declare(metadata i32* %ywrap, metadata !8210, metadata !DIExpression()), !dbg !8211
  call void @llvm.dbg.declare(metadata i16* %_r9, metadata !8212, metadata !DIExpression()), !dbg !8214
  %18 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !8214
  %fix10 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %18, i32 0, i32 7, !dbg !8214
  %ywrapstep = getelementptr inbounds %struct.fb_fix_screeninfo, %struct.fb_fix_screeninfo* %fix10, i32 0, i32 8, !dbg !8214
  %19 = load i16, i16* %ywrapstep, align 4, !dbg !8214
  store i16 %19, i16* %_r9, align 2, !dbg !8214
  call void @llvm.dbg.declare(metadata i16* %_v11, metadata !8215, metadata !DIExpression()), !dbg !8214
  %20 = load i16, i16* %t, align 2, !dbg !8214
  store i16 %20, i16* %_v11, align 2, !dbg !8214
  %cmp12 = icmp eq i16* %_r9, %_v11, !dbg !8214
  %conv13 = zext i1 %cmp12 to i32, !dbg !8214
  %21 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !8214
  %rotate15 = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %21, i32 0, i32 20, !dbg !8214
  %22 = load i32, i32* %rotate15, align 8, !dbg !8214
  %cmp16 = icmp eq i32 %22, 0, !dbg !8214
  br i1 %cmp16, label %cond.true22, label %lor.lhs.false18, !dbg !8214

lor.lhs.false18:                                  ; preds = %cond.end
  %23 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !8214
  %rotate19 = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %23, i32 0, i32 20, !dbg !8214
  %24 = load i32, i32* %rotate19, align 8, !dbg !8214
  %cmp20 = icmp eq i32 %24, 2, !dbg !8214
  br i1 %cmp20, label %cond.true22, label %cond.false24, !dbg !8214

cond.true22:                                      ; preds = %lor.lhs.false18, %cond.end
  %25 = load i16, i16* %_r9, align 2, !dbg !8214
  %conv23 = zext i16 %25 to i32, !dbg !8214
  br label %cond.end26, !dbg !8214

cond.false24:                                     ; preds = %lor.lhs.false18
  %26 = load i16, i16* %_v11, align 2, !dbg !8214
  %conv25 = zext i16 %26 to i32, !dbg !8214
  br label %cond.end26, !dbg !8214

cond.end26:                                       ; preds = %cond.false24, %cond.true22
  %cond27 = phi i32 [ %conv23, %cond.true22 ], [ %conv25, %cond.false24 ], !dbg !8214
  store i32 %cond27, i32* %tmp14, align 4, !dbg !8214
  %27 = load i32, i32* %tmp14, align 4, !dbg !8214
  store i32 %27, i32* %ywrap, align 4, !dbg !8211
  call void @llvm.dbg.declare(metadata i32* %yres, metadata !8216, metadata !DIExpression()), !dbg !8217
  call void @llvm.dbg.declare(metadata i32* %_r28, metadata !8218, metadata !DIExpression()), !dbg !8220
  %28 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !8220
  %var = getelementptr inbounds %struct.fb_info, %struct.fb_info* %28, i32 0, i32 6, !dbg !8220
  %yres29 = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %var, i32 0, i32 1, !dbg !8220
  %29 = load i32, i32* %yres29, align 4, !dbg !8220
  store i32 %29, i32* %_r28, align 4, !dbg !8220
  call void @llvm.dbg.declare(metadata i32* %_v30, metadata !8221, metadata !DIExpression()), !dbg !8220
  %30 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !8220
  %var31 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %30, i32 0, i32 6, !dbg !8220
  %xres = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %var31, i32 0, i32 0, !dbg !8220
  %31 = load i32, i32* %xres, align 8, !dbg !8220
  store i32 %31, i32* %_v30, align 4, !dbg !8220
  %cmp32 = icmp eq i32* %_r28, %_v30, !dbg !8220
  %conv33 = zext i1 %cmp32 to i32, !dbg !8220
  %32 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !8220
  %rotate35 = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %32, i32 0, i32 20, !dbg !8220
  %33 = load i32, i32* %rotate35, align 8, !dbg !8220
  %cmp36 = icmp eq i32 %33, 0, !dbg !8220
  br i1 %cmp36, label %cond.true42, label %lor.lhs.false38, !dbg !8220

lor.lhs.false38:                                  ; preds = %cond.end26
  %34 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !8220
  %rotate39 = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %34, i32 0, i32 20, !dbg !8220
  %35 = load i32, i32* %rotate39, align 8, !dbg !8220
  %cmp40 = icmp eq i32 %35, 2, !dbg !8220
  br i1 %cmp40, label %cond.true42, label %cond.false43, !dbg !8220

cond.true42:                                      ; preds = %lor.lhs.false38, %cond.end26
  %36 = load i32, i32* %_r28, align 4, !dbg !8220
  br label %cond.end44, !dbg !8220

cond.false43:                                     ; preds = %lor.lhs.false38
  %37 = load i32, i32* %_v30, align 4, !dbg !8220
  br label %cond.end44, !dbg !8220

cond.end44:                                       ; preds = %cond.false43, %cond.true42
  %cond45 = phi i32 [ %36, %cond.true42 ], [ %37, %cond.false43 ], !dbg !8220
  store i32 %cond45, i32* %tmp34, align 4, !dbg !8220
  %38 = load i32, i32* %tmp34, align 4, !dbg !8220
  store i32 %38, i32* %yres, align 4, !dbg !8217
  call void @llvm.dbg.declare(metadata i32* %vyres, metadata !8222, metadata !DIExpression()), !dbg !8223
  call void @llvm.dbg.declare(metadata i32* %_r46, metadata !8224, metadata !DIExpression()), !dbg !8226
  %39 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !8226
  %var47 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %39, i32 0, i32 6, !dbg !8226
  %yres_virtual = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %var47, i32 0, i32 3, !dbg !8226
  %40 = load i32, i32* %yres_virtual, align 4, !dbg !8226
  store i32 %40, i32* %_r46, align 4, !dbg !8226
  call void @llvm.dbg.declare(metadata i32* %_v48, metadata !8227, metadata !DIExpression()), !dbg !8226
  %41 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !8226
  %var49 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %41, i32 0, i32 6, !dbg !8226
  %xres_virtual = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %var49, i32 0, i32 2, !dbg !8226
  %42 = load i32, i32* %xres_virtual, align 8, !dbg !8226
  store i32 %42, i32* %_v48, align 4, !dbg !8226
  %cmp50 = icmp eq i32* %_r46, %_v48, !dbg !8226
  %conv51 = zext i1 %cmp50 to i32, !dbg !8226
  %43 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !8226
  %rotate53 = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %43, i32 0, i32 20, !dbg !8226
  %44 = load i32, i32* %rotate53, align 8, !dbg !8226
  %cmp54 = icmp eq i32 %44, 0, !dbg !8226
  br i1 %cmp54, label %cond.true60, label %lor.lhs.false56, !dbg !8226

lor.lhs.false56:                                  ; preds = %cond.end44
  %45 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !8226
  %rotate57 = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %45, i32 0, i32 20, !dbg !8226
  %46 = load i32, i32* %rotate57, align 8, !dbg !8226
  %cmp58 = icmp eq i32 %46, 2, !dbg !8226
  br i1 %cmp58, label %cond.true60, label %cond.false61, !dbg !8226

cond.true60:                                      ; preds = %lor.lhs.false56, %cond.end44
  %47 = load i32, i32* %_r46, align 4, !dbg !8226
  br label %cond.end62, !dbg !8226

cond.false61:                                     ; preds = %lor.lhs.false56
  %48 = load i32, i32* %_v48, align 4, !dbg !8226
  br label %cond.end62, !dbg !8226

cond.end62:                                       ; preds = %cond.false61, %cond.true60
  %cond63 = phi i32 [ %47, %cond.true60 ], [ %48, %cond.false61 ], !dbg !8226
  store i32 %cond63, i32* %tmp52, align 4, !dbg !8226
  %49 = load i32, i32* %tmp52, align 4, !dbg !8226
  store i32 %49, i32* %vyres, align 4, !dbg !8223
  call void @llvm.dbg.declare(metadata i32* %good_pan, metadata !8228, metadata !DIExpression()), !dbg !8229
  %50 = load i32, i32* %cap, align 4, !dbg !8230
  %and = and i32 %50, 8192, !dbg !8231
  %tobool = icmp ne i32 %and, 0, !dbg !8231
  br i1 %tobool, label %land.lhs.true, label %land.end, !dbg !8232

land.lhs.true:                                    ; preds = %cond.end62
  %51 = load i32, i32* %ypan, align 4, !dbg !8233
  %tobool64 = icmp ne i32 %51, 0, !dbg !8233
  br i1 %tobool64, label %lor.lhs.false65, label %cond.true69, !dbg !8233

lor.lhs.false65:                                  ; preds = %land.lhs.true
  %52 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !8233
  %vc_font66 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %52, i32 0, i32 27, !dbg !8233
  %height67 = getelementptr inbounds %struct.console_font, %struct.console_font* %vc_font66, i32 0, i32 1, !dbg !8233
  %53 = load i32, i32* %height67, align 4, !dbg !8233
  %54 = load i32, i32* %ypan, align 4, !dbg !8233
  %rem = urem i32 %53, %54, !dbg !8233
  %tobool68 = icmp ne i32 %rem, 0, !dbg !8233
  br i1 %tobool68, label %cond.true69, label %cond.false70, !dbg !8234

cond.true69:                                      ; preds = %lor.lhs.false65, %land.lhs.true
  br i1 false, label %land.rhs, label %land.end, !dbg !8233

cond.false70:                                     ; preds = %lor.lhs.false65
  br i1 true, label %land.rhs, label %land.end, !dbg !8234

land.rhs:                                         ; preds = %cond.false70, %cond.true69
  %55 = load i32, i32* %vyres, align 4, !dbg !8235
  %56 = load i32, i32* %yres, align 4, !dbg !8236
  %cmp71 = icmp sgt i32 %55, %56, !dbg !8237
  br label %land.end

land.end:                                         ; preds = %land.rhs, %cond.false70, %cond.true69, %cond.end62
  %57 = phi i1 [ false, %cond.false70 ], [ false, %cond.true69 ], [ false, %cond.end62 ], [ %cmp71, %land.rhs ], !dbg !8238
  %land.ext = zext i1 %57 to i32, !dbg !8234
  store i32 %land.ext, i32* %good_pan, align 4, !dbg !8229
  call void @llvm.dbg.declare(metadata i32* %good_wrap, metadata !8239, metadata !DIExpression()), !dbg !8240
  %58 = load i32, i32* %cap, align 4, !dbg !8241
  %and73 = and i32 %58, 16384, !dbg !8242
  %tobool74 = icmp ne i32 %and73, 0, !dbg !8242
  br i1 %tobool74, label %land.lhs.true75, label %land.end105, !dbg !8243

land.lhs.true75:                                  ; preds = %land.end
  %59 = load i32, i32* %ywrap, align 4, !dbg !8244
  %tobool76 = icmp ne i32 %59, 0, !dbg !8244
  br i1 %tobool76, label %lor.lhs.false77, label %cond.true82, !dbg !8244

lor.lhs.false77:                                  ; preds = %land.lhs.true75
  %60 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !8244
  %vc_font78 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %60, i32 0, i32 27, !dbg !8244
  %height79 = getelementptr inbounds %struct.console_font, %struct.console_font* %vc_font78, i32 0, i32 1, !dbg !8244
  %61 = load i32, i32* %height79, align 4, !dbg !8244
  %62 = load i32, i32* %ywrap, align 4, !dbg !8244
  %rem80 = urem i32 %61, %62, !dbg !8244
  %tobool81 = icmp ne i32 %rem80, 0, !dbg !8244
  br i1 %tobool81, label %cond.true82, label %cond.false83, !dbg !8245

cond.true82:                                      ; preds = %lor.lhs.false77, %land.lhs.true75
  br i1 false, label %land.lhs.true84, label %land.end105, !dbg !8244

cond.false83:                                     ; preds = %lor.lhs.false77
  br i1 true, label %land.lhs.true84, label %land.end105, !dbg !8245

land.lhs.true84:                                  ; preds = %cond.false83, %cond.true82
  %63 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !8246
  %vc_font85 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %63, i32 0, i32 27, !dbg !8246
  %height86 = getelementptr inbounds %struct.console_font, %struct.console_font* %vc_font85, i32 0, i32 1, !dbg !8246
  %64 = load i32, i32* %height86, align 4, !dbg !8246
  %tobool87 = icmp ne i32 %64, 0, !dbg !8246
  br i1 %tobool87, label %lor.lhs.false88, label %cond.true93, !dbg !8246

lor.lhs.false88:                                  ; preds = %land.lhs.true84
  %65 = load i32, i32* %vyres, align 4, !dbg !8246
  %66 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !8246
  %vc_font89 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %66, i32 0, i32 27, !dbg !8246
  %height90 = getelementptr inbounds %struct.console_font, %struct.console_font* %vc_font89, i32 0, i32 1, !dbg !8246
  %67 = load i32, i32* %height90, align 4, !dbg !8246
  %rem91 = urem i32 %65, %67, !dbg !8246
  %tobool92 = icmp ne i32 %rem91, 0, !dbg !8246
  br i1 %tobool92, label %cond.true93, label %cond.false94, !dbg !8247

cond.true93:                                      ; preds = %lor.lhs.false88, %land.lhs.true84
  br i1 false, label %land.rhs95, label %land.end105, !dbg !8246

cond.false94:                                     ; preds = %lor.lhs.false88
  br i1 true, label %land.rhs95, label %land.end105, !dbg !8247

land.rhs95:                                       ; preds = %cond.false94, %cond.true93
  %68 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !8248
  %vc_font96 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %68, i32 0, i32 27, !dbg !8248
  %height97 = getelementptr inbounds %struct.console_font, %struct.console_font* %vc_font96, i32 0, i32 1, !dbg !8248
  %69 = load i32, i32* %height97, align 4, !dbg !8248
  %tobool98 = icmp ne i32 %69, 0, !dbg !8248
  br i1 %tobool98, label %lor.rhs, label %lor.end, !dbg !8248

lor.rhs:                                          ; preds = %land.rhs95
  %70 = load i32, i32* %yres, align 4, !dbg !8248
  %71 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !8248
  %vc_font99 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %71, i32 0, i32 27, !dbg !8248
  %height100 = getelementptr inbounds %struct.console_font, %struct.console_font* %vc_font99, i32 0, i32 1, !dbg !8248
  %72 = load i32, i32* %height100, align 4, !dbg !8248
  %rem101 = urem i32 %70, %72, !dbg !8248
  %tobool102 = icmp ne i32 %rem101, 0, !dbg !8248
  br label %lor.end, !dbg !8248

lor.end:                                          ; preds = %lor.rhs, %land.rhs95
  %73 = phi i1 [ true, %land.rhs95 ], [ %tobool102, %lor.rhs ]
  %74 = zext i1 %73 to i64, !dbg !8248
  %cond103 = select i1 %73, i32 0, i32 1, !dbg !8248
  %tobool104 = icmp ne i32 %cond103, 0, !dbg !8247
  br label %land.end105

land.end105:                                      ; preds = %lor.end, %cond.false94, %cond.true93, %cond.false83, %cond.true82, %land.end
  %75 = phi i1 [ false, %cond.false94 ], [ false, %cond.true93 ], [ false, %cond.false83 ], [ false, %cond.true82 ], [ false, %land.end ], [ %tobool104, %lor.end ], !dbg !8238
  %land.ext106 = zext i1 %75 to i32, !dbg !8247
  store i32 %land.ext106, i32* %good_wrap, align 4, !dbg !8240
  call void @llvm.dbg.declare(metadata i32* %reading_fast, metadata !8249, metadata !DIExpression()), !dbg !8250
  %76 = load i32, i32* %cap, align 4, !dbg !8251
  %and107 = and i32 %76, 128, !dbg !8252
  store i32 %and107, i32* %reading_fast, align 4, !dbg !8250
  call void @llvm.dbg.declare(metadata i32* %fast_copyarea, metadata !8253, metadata !DIExpression()), !dbg !8254
  %77 = load i32, i32* %cap, align 4, !dbg !8255
  %and108 = and i32 %77, 256, !dbg !8256
  %tobool109 = icmp ne i32 %and108, 0, !dbg !8256
  br i1 %tobool109, label %land.rhs110, label %land.end113, !dbg !8257

land.rhs110:                                      ; preds = %land.end105
  %78 = load i32, i32* %cap, align 4, !dbg !8258
  %and111 = and i32 %78, 2, !dbg !8259
  %tobool112 = icmp ne i32 %and111, 0, !dbg !8260
  %lnot = xor i1 %tobool112, true, !dbg !8260
  br label %land.end113

land.end113:                                      ; preds = %land.rhs110, %land.end105
  %79 = phi i1 [ false, %land.end105 ], [ %lnot, %land.rhs110 ], !dbg !8238
  %land.ext114 = zext i1 %79 to i32, !dbg !8257
  store i32 %land.ext114, i32* %fast_copyarea, align 4, !dbg !8254
  call void @llvm.dbg.declare(metadata i32* %fast_imageblit, metadata !8261, metadata !DIExpression()), !dbg !8262
  %80 = load i32, i32* %cap, align 4, !dbg !8263
  %and115 = and i32 %80, 1024, !dbg !8264
  %tobool116 = icmp ne i32 %and115, 0, !dbg !8264
  br i1 %tobool116, label %land.rhs117, label %land.end121, !dbg !8265

land.rhs117:                                      ; preds = %land.end113
  %81 = load i32, i32* %cap, align 4, !dbg !8266
  %and118 = and i32 %81, 2, !dbg !8267
  %tobool119 = icmp ne i32 %and118, 0, !dbg !8268
  %lnot120 = xor i1 %tobool119, true, !dbg !8268
  br label %land.end121

land.end121:                                      ; preds = %land.rhs117, %land.end113
  %82 = phi i1 [ false, %land.end113 ], [ %lnot120, %land.rhs117 ], !dbg !8238
  %land.ext122 = zext i1 %82 to i32, !dbg !8265
  store i32 %land.ext122, i32* %fast_imageblit, align 4, !dbg !8262
  %83 = load i32, i32* %vyres, align 4, !dbg !8269
  %84 = load i32, i32* %fh, align 4, !dbg !8270
  %div = sdiv i32 %83, %84, !dbg !8271
  %85 = load %struct.fbcon_display*, %struct.fbcon_display** %p.addr, align 8, !dbg !8272
  %vrows = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %85, i32 0, i32 5, !dbg !8273
  store i32 %div, i32* %vrows, align 4, !dbg !8274
  %86 = load i32, i32* %yres, align 4, !dbg !8275
  %87 = load i32, i32* %fh, align 4, !dbg !8277
  %88 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !8278
  %vc_rows = getelementptr inbounds %struct.vc_data, %struct.vc_data* %88, i32 0, i32 5, !dbg !8279
  %89 = load i32, i32* %vc_rows, align 8, !dbg !8279
  %add = add i32 %89, 1, !dbg !8280
  %mul = mul i32 %87, %add, !dbg !8281
  %cmp123 = icmp ugt i32 %86, %mul, !dbg !8282
  br i1 %cmp123, label %if.then, label %if.end, !dbg !8283

if.then:                                          ; preds = %land.end121
  %90 = load i32, i32* %yres, align 4, !dbg !8284
  %91 = load i32, i32* %fh, align 4, !dbg !8285
  %92 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !8286
  %vc_rows125 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %92, i32 0, i32 5, !dbg !8287
  %93 = load i32, i32* %vc_rows125, align 8, !dbg !8287
  %mul126 = mul i32 %91, %93, !dbg !8288
  %sub = sub i32 %90, %mul126, !dbg !8289
  %94 = load i32, i32* %fh, align 4, !dbg !8290
  %div127 = udiv i32 %sub, %94, !dbg !8291
  %95 = load %struct.fbcon_display*, %struct.fbcon_display** %p.addr, align 8, !dbg !8292
  %vrows128 = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %95, i32 0, i32 5, !dbg !8293
  %96 = load i32, i32* %vrows128, align 4, !dbg !8294
  %sub129 = sub i32 %96, %div127, !dbg !8294
  store i32 %sub129, i32* %vrows128, align 4, !dbg !8294
  br label %if.end, !dbg !8292

if.end:                                           ; preds = %if.then, %land.end121
  %97 = load i32, i32* %yres, align 4, !dbg !8295
  %98 = load i32, i32* %fh, align 4, !dbg !8297
  %rem130 = srem i32 %97, %98, !dbg !8298
  %tobool131 = icmp ne i32 %rem130, 0, !dbg !8298
  br i1 %tobool131, label %land.lhs.true132, label %if.end139, !dbg !8299

land.lhs.true132:                                 ; preds = %if.end
  %99 = load i32, i32* %vyres, align 4, !dbg !8300
  %100 = load i32, i32* %fh, align 4, !dbg !8301
  %rem133 = srem i32 %99, %100, !dbg !8302
  %101 = load i32, i32* %yres, align 4, !dbg !8303
  %102 = load i32, i32* %fh, align 4, !dbg !8304
  %rem134 = srem i32 %101, %102, !dbg !8305
  %cmp135 = icmp slt i32 %rem133, %rem134, !dbg !8306
  br i1 %cmp135, label %if.then137, label %if.end139, !dbg !8307

if.then137:                                       ; preds = %land.lhs.true132
  %103 = load %struct.fbcon_display*, %struct.fbcon_display** %p.addr, align 8, !dbg !8308
  %vrows138 = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %103, i32 0, i32 5, !dbg !8309
  %104 = load i32, i32* %vrows138, align 4, !dbg !8310
  %dec = add i32 %104, -1, !dbg !8310
  store i32 %dec, i32* %vrows138, align 4, !dbg !8310
  br label %if.end139, !dbg !8308

if.end139:                                        ; preds = %if.then137, %land.lhs.true132, %if.end
  %105 = load i32, i32* %good_wrap, align 4, !dbg !8311
  %tobool140 = icmp ne i32 %105, 0, !dbg !8311
  br i1 %tobool140, label %if.then143, label %lor.lhs.false141, !dbg !8313

lor.lhs.false141:                                 ; preds = %if.end139
  %106 = load i32, i32* %good_pan, align 4, !dbg !8314
  %tobool142 = icmp ne i32 %106, 0, !dbg !8314
  br i1 %tobool142, label %if.then143, label %if.else156, !dbg !8315

if.then143:                                       ; preds = %lor.lhs.false141, %if.end139
  %107 = load i32, i32* %reading_fast, align 4, !dbg !8316
  %tobool144 = icmp ne i32 %107, 0, !dbg !8316
  br i1 %tobool144, label %if.then147, label %lor.lhs.false145, !dbg !8319

lor.lhs.false145:                                 ; preds = %if.then143
  %108 = load i32, i32* %fast_copyarea, align 4, !dbg !8320
  %tobool146 = icmp ne i32 %108, 0, !dbg !8320
  br i1 %tobool146, label %if.then147, label %if.else, !dbg !8321

if.then147:                                       ; preds = %lor.lhs.false145, %if.then143
  %109 = load i32, i32* %good_wrap, align 4, !dbg !8322
  %tobool148 = icmp ne i32 %109, 0, !dbg !8322
  %110 = zext i1 %tobool148 to i64, !dbg !8322
  %cond149 = select i1 %tobool148, i32 3, i32 2, !dbg !8322
  %conv150 = trunc i32 %cond149 to i16, !dbg !8322
  %111 = load %struct.fbcon_display*, %struct.fbcon_display** %p.addr, align 8, !dbg !8323
  %scrollmode = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %111, i32 0, i32 2, !dbg !8324
  store i16 %conv150, i16* %scrollmode, align 4, !dbg !8325
  br label %if.end155, !dbg !8323

if.else:                                          ; preds = %lor.lhs.false145
  %112 = load i32, i32* %good_wrap, align 4, !dbg !8326
  %tobool151 = icmp ne i32 %112, 0, !dbg !8326
  %113 = zext i1 %tobool151 to i64, !dbg !8326
  %cond152 = select i1 %tobool151, i32 4, i32 5, !dbg !8326
  %conv153 = trunc i32 %cond152 to i16, !dbg !8326
  %114 = load %struct.fbcon_display*, %struct.fbcon_display** %p.addr, align 8, !dbg !8327
  %scrollmode154 = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %114, i32 0, i32 2, !dbg !8328
  store i16 %conv153, i16* %scrollmode154, align 4, !dbg !8329
  br label %if.end155

if.end155:                                        ; preds = %if.else, %if.then147
  br label %if.end167, !dbg !8330

if.else156:                                       ; preds = %lor.lhs.false141
  %115 = load i32, i32* %reading_fast, align 4, !dbg !8331
  %tobool157 = icmp ne i32 %115, 0, !dbg !8331
  br i1 %tobool157, label %if.then162, label %lor.lhs.false158, !dbg !8334

lor.lhs.false158:                                 ; preds = %if.else156
  %116 = load i32, i32* %fast_copyarea, align 4, !dbg !8335
  %tobool159 = icmp ne i32 %116, 0, !dbg !8335
  br i1 %tobool159, label %land.lhs.true160, label %if.else164, !dbg !8336

land.lhs.true160:                                 ; preds = %lor.lhs.false158
  %117 = load i32, i32* %fast_imageblit, align 4, !dbg !8337
  %tobool161 = icmp ne i32 %117, 0, !dbg !8337
  br i1 %tobool161, label %if.else164, label %if.then162, !dbg !8338

if.then162:                                       ; preds = %land.lhs.true160, %if.else156
  %118 = load %struct.fbcon_display*, %struct.fbcon_display** %p.addr, align 8, !dbg !8339
  %scrollmode163 = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %118, i32 0, i32 2, !dbg !8340
  store i16 1, i16* %scrollmode163, align 4, !dbg !8341
  br label %if.end166, !dbg !8339

if.else164:                                       ; preds = %land.lhs.true160, %lor.lhs.false158
  %119 = load %struct.fbcon_display*, %struct.fbcon_display** %p.addr, align 8, !dbg !8342
  %scrollmode165 = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %119, i32 0, i32 2, !dbg !8343
  store i16 4, i16* %scrollmode165, align 4, !dbg !8344
  br label %if.end166

if.end166:                                        ; preds = %if.else164, %if.then162
  br label %if.end167

if.end167:                                        ; preds = %if.end166, %if.end155
  ret void, !dbg !8345
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @fbcon_set_palette(%struct.vc_data* %vc, i8* %table) #1 !dbg !8346 {
entry:
  %vc.addr = alloca %struct.vc_data*, align 8
  %table.addr = alloca i8*, align 8
  %info = alloca %struct.fb_info*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %depth = alloca i32, align 4
  %val = alloca i8, align 1
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !8347, metadata !DIExpression()), !dbg !8348
  store i8* %table, i8** %table.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %table.addr, metadata !8349, metadata !DIExpression()), !dbg !8350
  call void @llvm.dbg.declare(metadata %struct.fb_info** %info, metadata !8351, metadata !DIExpression()), !dbg !8352
  %0 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !8353
  %vc_num = getelementptr inbounds %struct.vc_data, %struct.vc_data* %0, i32 0, i32 3, !dbg !8354
  %1 = load i16, i16* %vc_num, align 8, !dbg !8354
  %idxprom = zext i16 %1 to i64, !dbg !8355
  %arrayidx = getelementptr [63 x i8], [63 x i8]* @con2fb_map, i64 0, i64 %idxprom, !dbg !8355
  %2 = load i8, i8* %arrayidx, align 1, !dbg !8355
  %idxprom1 = sext i8 %2 to i64, !dbg !8356
  %arrayidx2 = getelementptr [32 x %struct.fb_info*], [32 x %struct.fb_info*]* @registered_fb, i64 0, i64 %idxprom1, !dbg !8356
  %3 = load %struct.fb_info*, %struct.fb_info** %arrayidx2, align 8, !dbg !8356
  store %struct.fb_info* %3, %struct.fb_info** %info, align 8, !dbg !8352
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8357, metadata !DIExpression()), !dbg !8358
  call void @llvm.dbg.declare(metadata i32* %j, metadata !8359, metadata !DIExpression()), !dbg !8360
  call void @llvm.dbg.declare(metadata i32* %k, metadata !8361, metadata !DIExpression()), !dbg !8362
  call void @llvm.dbg.declare(metadata i32* %depth, metadata !8363, metadata !DIExpression()), !dbg !8364
  call void @llvm.dbg.declare(metadata i8* %val, metadata !8365, metadata !DIExpression()), !dbg !8366
  %4 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !8367
  %5 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !8369
  %call = call i32 @fbcon_is_inactive(%struct.vc_data* %4, %struct.fb_info* %5) #10, !dbg !8370
  %tobool = icmp ne i32 %call, 0, !dbg !8370
  br i1 %tobool, label %if.then, label %if.end, !dbg !8371

if.then:                                          ; preds = %entry
  br label %return, !dbg !8372

if.end:                                           ; preds = %entry
  %6 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !8373
  %call3 = call zeroext i1 @con_is_visible(%struct.vc_data* %6) #10, !dbg !8375
  br i1 %call3, label %if.end5, label %if.then4, !dbg !8376

if.then4:                                         ; preds = %if.end
  br label %return, !dbg !8377

if.end5:                                          ; preds = %if.end
  %7 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !8378
  %var = getelementptr inbounds %struct.fb_info, %struct.fb_info* %7, i32 0, i32 6, !dbg !8379
  %8 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !8380
  %fix = getelementptr inbounds %struct.fb_info, %struct.fb_info* %8, i32 0, i32 7, !dbg !8381
  %call6 = call i32 @fb_get_color_depth(%struct.fb_var_screeninfo* %var, %struct.fb_fix_screeninfo* %fix) #10, !dbg !8382
  store i32 %call6, i32* %depth, align 4, !dbg !8383
  %9 = load i32, i32* %depth, align 4, !dbg !8384
  %cmp = icmp sgt i32 %9, 3, !dbg !8386
  br i1 %cmp, label %if.then7, label %if.else, !dbg !8387

if.then7:                                         ; preds = %if.end5
  store i32 0, i32* %j, align 4, !dbg !8388
  store i32 0, i32* %i, align 4, !dbg !8391
  br label %for.cond, !dbg !8392

for.cond:                                         ; preds = %for.inc, %if.then7
  %10 = load i32, i32* %i, align 4, !dbg !8393
  %cmp8 = icmp slt i32 %10, 16, !dbg !8395
  br i1 %cmp8, label %for.body, label %for.end, !dbg !8396

for.body:                                         ; preds = %for.cond
  %11 = load i8*, i8** %table.addr, align 8, !dbg !8397
  %12 = load i32, i32* %i, align 4, !dbg !8399
  %idxprom9 = sext i32 %12 to i64, !dbg !8397
  %arrayidx10 = getelementptr i8, i8* %11, i64 %idxprom9, !dbg !8397
  %13 = load i8, i8* %arrayidx10, align 1, !dbg !8397
  %conv = zext i8 %13 to i32, !dbg !8397
  store i32 %conv, i32* %k, align 4, !dbg !8400
  %14 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !8401
  %vc_palette = getelementptr inbounds %struct.vc_data, %struct.vc_data* %14, i32 0, i32 40, !dbg !8402
  %15 = load i32, i32* %j, align 4, !dbg !8403
  %inc = add i32 %15, 1, !dbg !8403
  store i32 %inc, i32* %j, align 4, !dbg !8403
  %idxprom11 = sext i32 %15 to i64, !dbg !8401
  %arrayidx12 = getelementptr [48 x i8], [48 x i8]* %vc_palette, i64 0, i64 %idxprom11, !dbg !8401
  %16 = load i8, i8* %arrayidx12, align 1, !dbg !8401
  store i8 %16, i8* %val, align 1, !dbg !8404
  %17 = load i8, i8* %val, align 1, !dbg !8405
  %conv13 = zext i8 %17 to i32, !dbg !8405
  %shl = shl i32 %conv13, 8, !dbg !8406
  %18 = load i8, i8* %val, align 1, !dbg !8407
  %conv14 = zext i8 %18 to i32, !dbg !8407
  %or = or i32 %shl, %conv14, !dbg !8408
  %conv15 = trunc i32 %or to i16, !dbg !8409
  %19 = load i32, i32* %k, align 4, !dbg !8410
  %idxprom16 = sext i32 %19 to i64, !dbg !8411
  %arrayidx17 = getelementptr [16 x i16], [16 x i16]* @palette_red, i64 0, i64 %idxprom16, !dbg !8411
  store i16 %conv15, i16* %arrayidx17, align 2, !dbg !8412
  %20 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !8413
  %vc_palette18 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %20, i32 0, i32 40, !dbg !8414
  %21 = load i32, i32* %j, align 4, !dbg !8415
  %inc19 = add i32 %21, 1, !dbg !8415
  store i32 %inc19, i32* %j, align 4, !dbg !8415
  %idxprom20 = sext i32 %21 to i64, !dbg !8413
  %arrayidx21 = getelementptr [48 x i8], [48 x i8]* %vc_palette18, i64 0, i64 %idxprom20, !dbg !8413
  %22 = load i8, i8* %arrayidx21, align 1, !dbg !8413
  store i8 %22, i8* %val, align 1, !dbg !8416
  %23 = load i8, i8* %val, align 1, !dbg !8417
  %conv22 = zext i8 %23 to i32, !dbg !8417
  %shl23 = shl i32 %conv22, 8, !dbg !8418
  %24 = load i8, i8* %val, align 1, !dbg !8419
  %conv24 = zext i8 %24 to i32, !dbg !8419
  %or25 = or i32 %shl23, %conv24, !dbg !8420
  %conv26 = trunc i32 %or25 to i16, !dbg !8421
  %25 = load i32, i32* %k, align 4, !dbg !8422
  %idxprom27 = sext i32 %25 to i64, !dbg !8423
  %arrayidx28 = getelementptr [16 x i16], [16 x i16]* @palette_green, i64 0, i64 %idxprom27, !dbg !8423
  store i16 %conv26, i16* %arrayidx28, align 2, !dbg !8424
  %26 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !8425
  %vc_palette29 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %26, i32 0, i32 40, !dbg !8426
  %27 = load i32, i32* %j, align 4, !dbg !8427
  %inc30 = add i32 %27, 1, !dbg !8427
  store i32 %inc30, i32* %j, align 4, !dbg !8427
  %idxprom31 = sext i32 %27 to i64, !dbg !8425
  %arrayidx32 = getelementptr [48 x i8], [48 x i8]* %vc_palette29, i64 0, i64 %idxprom31, !dbg !8425
  %28 = load i8, i8* %arrayidx32, align 1, !dbg !8425
  store i8 %28, i8* %val, align 1, !dbg !8428
  %29 = load i8, i8* %val, align 1, !dbg !8429
  %conv33 = zext i8 %29 to i32, !dbg !8429
  %shl34 = shl i32 %conv33, 8, !dbg !8430
  %30 = load i8, i8* %val, align 1, !dbg !8431
  %conv35 = zext i8 %30 to i32, !dbg !8431
  %or36 = or i32 %shl34, %conv35, !dbg !8432
  %conv37 = trunc i32 %or36 to i16, !dbg !8433
  %31 = load i32, i32* %k, align 4, !dbg !8434
  %idxprom38 = sext i32 %31 to i64, !dbg !8435
  %arrayidx39 = getelementptr [16 x i16], [16 x i16]* @palette_blue, i64 0, i64 %idxprom38, !dbg !8435
  store i16 %conv37, i16* %arrayidx39, align 2, !dbg !8436
  br label %for.inc, !dbg !8437

for.inc:                                          ; preds = %for.body
  %32 = load i32, i32* %i, align 4, !dbg !8438
  %inc40 = add i32 %32, 1, !dbg !8438
  store i32 %inc40, i32* %i, align 4, !dbg !8438
  br label %for.cond, !dbg !8439, !llvm.loop !8440

for.end:                                          ; preds = %for.cond
  store i32 16, i32* getelementptr inbounds (%struct.fb_cmap, %struct.fb_cmap* @palette_cmap, i32 0, i32 1), align 4, !dbg !8442
  store i32 0, i32* getelementptr inbounds (%struct.fb_cmap, %struct.fb_cmap* @palette_cmap, i32 0, i32 0), align 8, !dbg !8443
  br label %if.end44, !dbg !8444

if.else:                                          ; preds = %if.end5
  %33 = load i32, i32* %depth, align 4, !dbg !8445
  %shl41 = shl i32 1, %33, !dbg !8446
  %call42 = call %struct.fb_cmap* @fb_default_cmap(i32 %shl41) #10, !dbg !8447
  %call43 = call i32 @fb_copy_cmap(%struct.fb_cmap* %call42, %struct.fb_cmap* @palette_cmap) #10, !dbg !8448
  br label %if.end44

if.end44:                                         ; preds = %if.else, %for.end
  %34 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !8449
  %call45 = call i32 @fb_set_cmap(%struct.fb_cmap* @palette_cmap, %struct.fb_info* %34) #10, !dbg !8450
  br label %return, !dbg !8451

return:                                           ; preds = %if.end44, %if.then4, %if.then
  ret void, !dbg !8451
}

; Function Attrs: noredzone
declare dso_local i32 @fb_copy_cmap(%struct.fb_cmap*, %struct.fb_cmap*) #3

; Function Attrs: noredzone
declare dso_local %struct.fb_cmap* @fb_default_cmap(i32) #3

; Function Attrs: noredzone
declare dso_local i32 @fb_set_cmap(%struct.fb_cmap*, %struct.fb_info*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @kasan_check_read(i8* %p, i32 %size) #1 !dbg !8452 {
entry:
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !8456, metadata !DIExpression()), !dbg !8457
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !8458, metadata !DIExpression()), !dbg !8459
  ret i1 true, !dbg !8460
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @kcsan_check_access(i8* %ptr, i64 %size, i32 %type) #1 !dbg !8461 {
entry:
  %ptr.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %type.addr = alloca i32, align 4
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !8465, metadata !DIExpression()), !dbg !8466
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !8467, metadata !DIExpression()), !dbg !8468
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !8469, metadata !DIExpression()), !dbg !8470
  ret void, !dbg !8471
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @search_for_mapped_con() #1 !dbg !8472 {
entry:
  %i = alloca i32, align 4
  %retval1 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8473, metadata !DIExpression()), !dbg !8474
  call void @llvm.dbg.declare(metadata i32* %retval1, metadata !8475, metadata !DIExpression()), !dbg !8476
  store i32 0, i32* %retval1, align 4, !dbg !8476
  %0 = load i32, i32* @first_fb_vc, align 4, !dbg !8477
  store i32 %0, i32* %i, align 4, !dbg !8479
  br label %for.cond, !dbg !8480

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %i, align 4, !dbg !8481
  %2 = load i32, i32* @last_fb_vc, align 4, !dbg !8483
  %cmp = icmp sle i32 %1, %2, !dbg !8484
  br i1 %cmp, label %for.body, label %for.end, !dbg !8485

for.body:                                         ; preds = %for.cond
  %3 = load i32, i32* %i, align 4, !dbg !8486
  %idxprom = sext i32 %3 to i64, !dbg !8489
  %arrayidx = getelementptr [63 x i8], [63 x i8]* @con2fb_map, i64 0, i64 %idxprom, !dbg !8489
  %4 = load i8, i8* %arrayidx, align 1, !dbg !8489
  %conv = sext i8 %4 to i32, !dbg !8489
  %cmp2 = icmp ne i32 %conv, -1, !dbg !8490
  br i1 %cmp2, label %if.then, label %if.end, !dbg !8491

if.then:                                          ; preds = %for.body
  store i32 1, i32* %retval1, align 4, !dbg !8492
  br label %if.end, !dbg !8493

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !8494

for.inc:                                          ; preds = %if.end
  %5 = load i32, i32* %i, align 4, !dbg !8495
  %inc = add i32 %5, 1, !dbg !8495
  store i32 %inc, i32* %i, align 4, !dbg !8495
  br label %for.cond, !dbg !8496, !llvm.loop !8497

for.end:                                          ; preds = %for.cond
  %6 = load i32, i32* %retval1, align 4, !dbg !8499
  ret i32 %6, !dbg !8500
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @con2fb_acquire_newinfo(%struct.vc_data* %vc, %struct.fb_info* %info, i32 %unit, i32 %oldidx) #1 !dbg !8501 {
entry:
  %vc.addr = alloca %struct.vc_data*, align 8
  %info.addr = alloca %struct.fb_info*, align 8
  %unit.addr = alloca i32, align 4
  %oldidx.addr = alloca i32, align 4
  %ops = alloca %struct.fbcon_ops*, align 8
  %err = alloca i32, align 4
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !8504, metadata !DIExpression()), !dbg !8505
  store %struct.fb_info* %info, %struct.fb_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fb_info** %info.addr, metadata !8506, metadata !DIExpression()), !dbg !8507
  store i32 %unit, i32* %unit.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %unit.addr, metadata !8508, metadata !DIExpression()), !dbg !8509
  store i32 %oldidx, i32* %oldidx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %oldidx.addr, metadata !8510, metadata !DIExpression()), !dbg !8511
  call void @llvm.dbg.declare(metadata %struct.fbcon_ops** %ops, metadata !8512, metadata !DIExpression()), !dbg !8513
  store %struct.fbcon_ops* null, %struct.fbcon_ops** %ops, align 8, !dbg !8513
  call void @llvm.dbg.declare(metadata i32* %err, metadata !8514, metadata !DIExpression()), !dbg !8515
  store i32 0, i32* %err, align 4, !dbg !8515
  %0 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !8516
  %fbops = getelementptr inbounds %struct.fb_info, %struct.fb_info* %0, i32 0, i32 20, !dbg !8518
  %1 = load %struct.fb_ops*, %struct.fb_ops** %fbops, align 8, !dbg !8518
  %owner = getelementptr inbounds %struct.fb_ops, %struct.fb_ops* %1, i32 0, i32 0, !dbg !8519
  %2 = load %struct.module*, %struct.module** %owner, align 8, !dbg !8519
  %call = call zeroext i1 @try_module_get(%struct.module* %2) #10, !dbg !8520
  br i1 %call, label %if.end, label %if.then, !dbg !8521

if.then:                                          ; preds = %entry
  store i32 -19, i32* %err, align 4, !dbg !8522
  br label %if.end, !dbg !8523

if.end:                                           ; preds = %if.then, %entry
  %3 = load i32, i32* %err, align 4, !dbg !8524
  %tobool = icmp ne i32 %3, 0, !dbg !8524
  br i1 %tobool, label %if.end9, label %land.lhs.true, !dbg !8526

land.lhs.true:                                    ; preds = %if.end
  %4 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !8527
  %fbops1 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %4, i32 0, i32 20, !dbg !8528
  %5 = load %struct.fb_ops*, %struct.fb_ops** %fbops1, align 8, !dbg !8528
  %fb_open = getelementptr inbounds %struct.fb_ops, %struct.fb_ops* %5, i32 0, i32 1, !dbg !8529
  %6 = load i32 (%struct.fb_info*, i32)*, i32 (%struct.fb_info*, i32)** %fb_open, align 8, !dbg !8529
  %tobool2 = icmp ne i32 (%struct.fb_info*, i32)* %6, null, !dbg !8527
  br i1 %tobool2, label %land.lhs.true3, label %if.end9, !dbg !8530

land.lhs.true3:                                   ; preds = %land.lhs.true
  %7 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !8531
  %fbops4 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %7, i32 0, i32 20, !dbg !8532
  %8 = load %struct.fb_ops*, %struct.fb_ops** %fbops4, align 8, !dbg !8532
  %fb_open5 = getelementptr inbounds %struct.fb_ops, %struct.fb_ops* %8, i32 0, i32 1, !dbg !8533
  %9 = load i32 (%struct.fb_info*, i32)*, i32 (%struct.fb_info*, i32)** %fb_open5, align 8, !dbg !8533
  %10 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !8534
  %call6 = call i32 %9(%struct.fb_info* %10, i32 0) #10, !dbg !8531
  %tobool7 = icmp ne i32 %call6, 0, !dbg !8531
  br i1 %tobool7, label %if.then8, label %if.end9, !dbg !8535

if.then8:                                         ; preds = %land.lhs.true3
  store i32 -19, i32* %err, align 4, !dbg !8536
  br label %if.end9, !dbg !8537

if.end9:                                          ; preds = %if.then8, %land.lhs.true3, %land.lhs.true, %if.end
  %11 = load i32, i32* %err, align 4, !dbg !8538
  %tobool10 = icmp ne i32 %11, 0, !dbg !8538
  br i1 %tobool10, label %if.end16, label %if.then11, !dbg !8540

if.then11:                                        ; preds = %if.end9
  %call12 = call i8* @kzalloc(i64 456, i32 3264) #10, !dbg !8541
  %12 = bitcast i8* %call12 to %struct.fbcon_ops*, !dbg !8541
  store %struct.fbcon_ops* %12, %struct.fbcon_ops** %ops, align 8, !dbg !8543
  %13 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !8544
  %tobool13 = icmp ne %struct.fbcon_ops* %13, null, !dbg !8544
  br i1 %tobool13, label %if.end15, label %if.then14, !dbg !8546

if.then14:                                        ; preds = %if.then11
  store i32 -12, i32* %err, align 4, !dbg !8547
  br label %if.end15, !dbg !8548

if.end15:                                         ; preds = %if.then14, %if.then11
  br label %if.end16, !dbg !8549

if.end16:                                         ; preds = %if.end15, %if.end9
  %14 = load i32, i32* %err, align 4, !dbg !8550
  %tobool17 = icmp ne i32 %14, 0, !dbg !8550
  br i1 %tobool17, label %if.end23, label %if.then18, !dbg !8552

if.then18:                                        ; preds = %if.end16
  %15 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !8553
  %cur_blink_jiffies = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %15, i32 0, i32 13, !dbg !8555
  store i32 50, i32* %cur_blink_jiffies, align 4, !dbg !8556
  %16 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !8557
  %17 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !8558
  %info19 = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %17, i32 0, i32 11, !dbg !8559
  store %struct.fb_info* %16, %struct.fb_info** %info19, align 8, !dbg !8560
  %18 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !8561
  %19 = bitcast %struct.fbcon_ops* %18 to i8*, !dbg !8561
  %20 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !8562
  %fbcon_par = getelementptr inbounds %struct.fb_info, %struct.fb_info* %20, i32 0, i32 29, !dbg !8563
  store i8* %19, i8** %fbcon_par, align 8, !dbg !8564
  %21 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !8565
  %tobool20 = icmp ne %struct.vc_data* %21, null, !dbg !8565
  br i1 %tobool20, label %if.then21, label %if.end22, !dbg !8567

if.then21:                                        ; preds = %if.then18
  %22 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !8568
  %23 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !8569
  call void @set_blitting_type(%struct.vc_data* %22, %struct.fb_info* %23) #10, !dbg !8570
  br label %if.end22, !dbg !8570

if.end22:                                         ; preds = %if.then21, %if.then18
  br label %if.end23, !dbg !8571

if.end23:                                         ; preds = %if.end22, %if.end16
  %24 = load i32, i32* %err, align 4, !dbg !8572
  %tobool24 = icmp ne i32 %24, 0, !dbg !8572
  br i1 %tobool24, label %if.then25, label %if.end28, !dbg !8574

if.then25:                                        ; preds = %if.end23
  %25 = load i32, i32* %oldidx.addr, align 4, !dbg !8575
  %conv = trunc i32 %25 to i8, !dbg !8575
  %26 = load i32, i32* %unit.addr, align 4, !dbg !8577
  %idxprom = sext i32 %26 to i64, !dbg !8578
  %arrayidx = getelementptr [63 x i8], [63 x i8]* @con2fb_map, i64 0, i64 %idxprom, !dbg !8578
  store i8 %conv, i8* %arrayidx, align 1, !dbg !8579
  %27 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !8580
  %fbops26 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %27, i32 0, i32 20, !dbg !8581
  %28 = load %struct.fb_ops*, %struct.fb_ops** %fbops26, align 8, !dbg !8581
  %owner27 = getelementptr inbounds %struct.fb_ops, %struct.fb_ops* %28, i32 0, i32 0, !dbg !8582
  %29 = load %struct.module*, %struct.module** %owner27, align 8, !dbg !8582
  call void @module_put(%struct.module* %29) #10, !dbg !8583
  br label %if.end28, !dbg !8584

if.end28:                                         ; preds = %if.then25, %if.end23
  %30 = load i32, i32* %err, align 4, !dbg !8585
  ret i32 %30, !dbg !8586
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @con2fb_init_display(%struct.vc_data* %vc, %struct.fb_info* %info, i32 %unit, i32 %show_logo) #1 !dbg !8587 {
entry:
  %vc.addr = alloca %struct.vc_data*, align 8
  %info.addr = alloca %struct.fb_info*, align 8
  %unit.addr = alloca i32, align 4
  %show_logo.addr = alloca i32, align 4
  %ops = alloca %struct.fbcon_ops*, align 8
  %ret = alloca i32, align 4
  %fg_vc = alloca %struct.vc_data*, align 8
  %fg_info = alloca %struct.fb_info*, align 8
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !8588, metadata !DIExpression()), !dbg !8589
  store %struct.fb_info* %info, %struct.fb_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fb_info** %info.addr, metadata !8590, metadata !DIExpression()), !dbg !8591
  store i32 %unit, i32* %unit.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %unit.addr, metadata !8592, metadata !DIExpression()), !dbg !8593
  store i32 %show_logo, i32* %show_logo.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %show_logo.addr, metadata !8594, metadata !DIExpression()), !dbg !8595
  call void @llvm.dbg.declare(metadata %struct.fbcon_ops** %ops, metadata !8596, metadata !DIExpression()), !dbg !8597
  %0 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !8598
  %fbcon_par = getelementptr inbounds %struct.fb_info, %struct.fb_info* %0, i32 0, i32 29, !dbg !8599
  %1 = load i8*, i8** %fbcon_par, align 8, !dbg !8599
  %2 = bitcast i8* %1 to %struct.fbcon_ops*, !dbg !8598
  store %struct.fbcon_ops* %2, %struct.fbcon_ops** %ops, align 8, !dbg !8597
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8600, metadata !DIExpression()), !dbg !8601
  %3 = load i32, i32* @fg_console, align 4, !dbg !8602
  %4 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !8603
  %currcon = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %4, i32 0, i32 12, !dbg !8604
  store i32 %3, i32* %currcon, align 8, !dbg !8605
  %5 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !8606
  %fbops = getelementptr inbounds %struct.fb_info, %struct.fb_info* %5, i32 0, i32 20, !dbg !8608
  %6 = load %struct.fb_ops*, %struct.fb_ops** %fbops, align 8, !dbg !8608
  %fb_set_par = getelementptr inbounds %struct.fb_ops, %struct.fb_ops* %6, i32 0, i32 6, !dbg !8609
  %7 = load i32 (%struct.fb_info*)*, i32 (%struct.fb_info*)** %fb_set_par, align 8, !dbg !8609
  %tobool = icmp ne i32 (%struct.fb_info*)* %7, null, !dbg !8606
  br i1 %tobool, label %land.lhs.true, label %if.end7, !dbg !8610

land.lhs.true:                                    ; preds = %entry
  %8 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !8611
  %flags = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %8, i32 0, i32 19, !dbg !8612
  %9 = load i32, i32* %flags, align 4, !dbg !8612
  %and = and i32 %9, 1, !dbg !8613
  %tobool1 = icmp ne i32 %and, 0, !dbg !8613
  br i1 %tobool1, label %if.end7, label %if.then, !dbg !8614

if.then:                                          ; preds = %land.lhs.true
  %10 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !8615
  %fbops2 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %10, i32 0, i32 20, !dbg !8617
  %11 = load %struct.fb_ops*, %struct.fb_ops** %fbops2, align 8, !dbg !8617
  %fb_set_par3 = getelementptr inbounds %struct.fb_ops, %struct.fb_ops* %11, i32 0, i32 6, !dbg !8618
  %12 = load i32 (%struct.fb_info*)*, i32 (%struct.fb_info*)** %fb_set_par3, align 8, !dbg !8618
  %13 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !8619
  %call = call i32 %12(%struct.fb_info* %13) #10, !dbg !8615
  store i32 %call, i32* %ret, align 4, !dbg !8620
  %14 = load i32, i32* %ret, align 4, !dbg !8621
  %tobool4 = icmp ne i32 %14, 0, !dbg !8621
  br i1 %tobool4, label %if.then5, label %if.end, !dbg !8623

if.then5:                                         ; preds = %if.then
  %15 = load i32, i32* %ret, align 4, !dbg !8624
  %call6 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.17, i64 0, i64 0), i32 %15) #11, !dbg !8625
  br label %if.end, !dbg !8625

if.end:                                           ; preds = %if.then5, %if.then
  br label %if.end7, !dbg !8626

if.end7:                                          ; preds = %if.end, %land.lhs.true, %entry
  %16 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !8627
  %flags8 = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %16, i32 0, i32 19, !dbg !8628
  %17 = load i32, i32* %flags8, align 4, !dbg !8629
  %or = or i32 %17, 1, !dbg !8629
  store i32 %or, i32* %flags8, align 4, !dbg !8629
  %18 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !8630
  %graphics = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %18, i32 0, i32 17, !dbg !8631
  store i32 0, i32* %graphics, align 4, !dbg !8632
  %19 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !8633
  %20 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !8634
  %var = getelementptr inbounds %struct.fb_info, %struct.fb_info* %20, i32 0, i32 6, !dbg !8635
  %21 = load i32, i32* %unit.addr, align 4, !dbg !8636
  call void @fbcon_set_disp(%struct.fb_info* %19, %struct.fb_var_screeninfo* %var, i32 %21) #10, !dbg !8637
  %22 = load i32, i32* %show_logo.addr, align 4, !dbg !8638
  %tobool9 = icmp ne i32 %22, 0, !dbg !8638
  br i1 %tobool9, label %if.then10, label %if.end17, !dbg !8640

if.then10:                                        ; preds = %if.end7
  call void @llvm.dbg.declare(metadata %struct.vc_data** %fg_vc, metadata !8641, metadata !DIExpression()), !dbg !8643
  %23 = load i32, i32* @fg_console, align 4, !dbg !8644
  %idxprom = sext i32 %23 to i64, !dbg !8645
  %arrayidx = getelementptr [63 x %struct.vc], [63 x %struct.vc]* @vc_cons, i64 0, i64 %idxprom, !dbg !8645
  %d = getelementptr inbounds %struct.vc, %struct.vc* %arrayidx, i32 0, i32 0, !dbg !8646
  %24 = load %struct.vc_data*, %struct.vc_data** %d, align 8, !dbg !8646
  store %struct.vc_data* %24, %struct.vc_data** %fg_vc, align 8, !dbg !8643
  call void @llvm.dbg.declare(metadata %struct.fb_info** %fg_info, metadata !8647, metadata !DIExpression()), !dbg !8648
  %25 = load i32, i32* @fg_console, align 4, !dbg !8649
  %idxprom11 = sext i32 %25 to i64, !dbg !8650
  %arrayidx12 = getelementptr [63 x i8], [63 x i8]* @con2fb_map, i64 0, i64 %idxprom11, !dbg !8650
  %26 = load i8, i8* %arrayidx12, align 1, !dbg !8650
  %idxprom13 = sext i8 %26 to i64, !dbg !8651
  %arrayidx14 = getelementptr [32 x %struct.fb_info*], [32 x %struct.fb_info*]* @registered_fb, i64 0, i64 %idxprom13, !dbg !8651
  %27 = load %struct.fb_info*, %struct.fb_info** %arrayidx14, align 8, !dbg !8651
  store %struct.fb_info* %27, %struct.fb_info** %fg_info, align 8, !dbg !8648
  %28 = load %struct.vc_data*, %struct.vc_data** %fg_vc, align 8, !dbg !8652
  %29 = load %struct.fb_info*, %struct.fb_info** %fg_info, align 8, !dbg !8653
  %30 = load %struct.vc_data*, %struct.vc_data** %fg_vc, align 8, !dbg !8654
  %vc_cols = getelementptr inbounds %struct.vc_data, %struct.vc_data* %30, i32 0, i32 4, !dbg !8655
  %31 = load i32, i32* %vc_cols, align 4, !dbg !8655
  %32 = load %struct.vc_data*, %struct.vc_data** %fg_vc, align 8, !dbg !8656
  %vc_rows = getelementptr inbounds %struct.vc_data, %struct.vc_data* %32, i32 0, i32 5, !dbg !8657
  %33 = load i32, i32* %vc_rows, align 8, !dbg !8657
  %34 = load %struct.vc_data*, %struct.vc_data** %fg_vc, align 8, !dbg !8658
  %vc_cols15 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %34, i32 0, i32 4, !dbg !8659
  %35 = load i32, i32* %vc_cols15, align 4, !dbg !8659
  %36 = load %struct.vc_data*, %struct.vc_data** %fg_vc, align 8, !dbg !8660
  %vc_rows16 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %36, i32 0, i32 5, !dbg !8661
  %37 = load i32, i32* %vc_rows16, align 8, !dbg !8661
  call void @fbcon_prepare_logo(%struct.vc_data* %28, %struct.fb_info* %29, i32 %31, i32 %33, i32 %35, i32 %37) #10, !dbg !8662
  br label %if.end17, !dbg !8663

if.end17:                                         ; preds = %if.then10, %if.end7
  %38 = load i32, i32* @fg_console, align 4, !dbg !8664
  %idxprom18 = sext i32 %38 to i64, !dbg !8664
  %arrayidx19 = getelementptr [63 x %struct.vc], [63 x %struct.vc]* @vc_cons, i64 0, i64 %idxprom18, !dbg !8664
  %d20 = getelementptr inbounds %struct.vc, %struct.vc* %arrayidx19, i32 0, i32 0, !dbg !8664
  %39 = load %struct.vc_data*, %struct.vc_data** %d20, align 8, !dbg !8664
  call void @redraw_screen(%struct.vc_data* %39, i32 0) #10, !dbg !8664
  ret void, !dbg !8665
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @try_module_get(%struct.module* %module) #1 !dbg !8666 {
entry:
  %module.addr = alloca %struct.module*, align 8
  store %struct.module* %module, %struct.module** %module.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.module** %module.addr, metadata !8670, metadata !DIExpression()), !dbg !8671
  ret i1 true, !dbg !8672
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kzalloc(i64 %size, i32 %flags) #1 !dbg !8673 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !8676, metadata !DIExpression()), !dbg !8680
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !8686, metadata !DIExpression()), !dbg !8687
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !8688, metadata !DIExpression()), !dbg !8689
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !8690, metadata !DIExpression()), !dbg !8691
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !8692, metadata !DIExpression()), !dbg !8696
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !8698, metadata !DIExpression()), !dbg !8702
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !8704, metadata !DIExpression()), !dbg !8708
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !8713, metadata !DIExpression()), !dbg !8714
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !8715, metadata !DIExpression()), !dbg !8716
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !8717, metadata !DIExpression()), !dbg !8718
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !8719, metadata !DIExpression()), !dbg !8720
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !8721, metadata !DIExpression()), !dbg !8722
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !8723, metadata !DIExpression()), !dbg !8724
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !8725, metadata !DIExpression()), !dbg !8726
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !8727, metadata !DIExpression()), !dbg !8728
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !8729, metadata !DIExpression()), !dbg !8730
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !8731, metadata !DIExpression()), !dbg !8732
  %0 = load i64, i64* %size.addr, align 8, !dbg !8733
  %1 = load i32, i32* %flags.addr, align 4, !dbg !8734
  %or = or i32 %1, 256, !dbg !8735
  store i64 %0, i64* %size.addr.i, align 8
  store i32 %or, i32* %flags.addr.i, align 4
  %2 = load i64, i64* %size.addr.i, align 8, !dbg !8736
  %3 = call i1 @llvm.is.constant.i64(i64 %2) #12, !dbg !8737
  br i1 %3, label %if.then.i, label %if.end9.i, !dbg !8738

if.then.i:                                        ; preds = %entry
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !8739
  %cmp.i = icmp ugt i64 %4, 8192, !dbg !8740
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !8741

if.then1.i:                                       ; preds = %if.then.i
  %5 = load i64, i64* %size.addr.i, align 8, !dbg !8742
  %6 = load i32, i32* %flags.addr.i, align 4, !dbg !8743
  store i64 %5, i64* %size.addr.i.i, align 8
  store i32 %6, i32* %flags.addr.i.i, align 4
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !8744
  %call.i.i = call i32 @get_order(i64 %7) #14, !dbg !8745
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !8722
  %8 = load i64, i64* %size.addr.i.i, align 8, !dbg !8746
  %9 = load i32, i32* %flags.addr.i.i, align 4, !dbg !8747
  %10 = load i32, i32* %order.i.i, align 4, !dbg !8748
  store i64 %8, i64* %size.addr.i.i.i, align 8
  store i32 %9, i32* %flags.addr.i.i.i, align 4
  store i32 %10, i32* %order.addr.i.i.i, align 4
  %11 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !8749
  %12 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !8750
  %13 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !8751
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %11, i32 %12, i32 %13) #13, !dbg !8752
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !8752
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !8752
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !8752
  call void @llvm.assume(i1 %maskcond.i.i.i) #12, !dbg !8752
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !8753
  br label %kmalloc.exit, !dbg !8753

if.end.i:                                         ; preds = %if.then.i
  %14 = load i64, i64* %size.addr.i, align 8, !dbg !8754
  store i64 %14, i64* %size.addr.i11.i, align 8
  %15 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8755
  %tobool.i.i = icmp ne i64 %15, 0, !dbg !8755
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !8757

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !8758
  br label %kmalloc_index.exit.i, !dbg !8758

if.end.i.i:                                       ; preds = %if.end.i
  %16 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8759
  %cmp.i.i = icmp ule i64 %16, 8, !dbg !8761
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !8762

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !8763
  br label %kmalloc_index.exit.i, !dbg !8763

if.end2.i.i:                                      ; preds = %if.end.i.i
  %17 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8764
  %cmp3.i.i = icmp ugt i64 %17, 64, !dbg !8766
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !8767

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %18 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8768
  %cmp4.i.i = icmp ule i64 %18, 96, !dbg !8769
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !8770

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !8771
  br label %kmalloc_index.exit.i, !dbg !8771

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %19 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8772
  %cmp7.i.i = icmp ugt i64 %19, 128, !dbg !8774
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !8775

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %20 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8776
  %cmp9.i.i = icmp ule i64 %20, 192, !dbg !8777
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !8778

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !8779
  br label %kmalloc_index.exit.i, !dbg !8779

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %21 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8780
  %cmp12.i.i = icmp ule i64 %21, 8, !dbg !8782
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !8783

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !8784
  br label %kmalloc_index.exit.i, !dbg !8784

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %22 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8785
  %cmp15.i.i = icmp ule i64 %22, 16, !dbg !8787
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !8788

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !8789
  br label %kmalloc_index.exit.i, !dbg !8789

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %23 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8790
  %cmp18.i.i = icmp ule i64 %23, 32, !dbg !8792
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !8793

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !8794
  br label %kmalloc_index.exit.i, !dbg !8794

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %24 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8795
  %cmp21.i.i = icmp ule i64 %24, 64, !dbg !8797
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !8798

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !8799
  br label %kmalloc_index.exit.i, !dbg !8799

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %25 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8800
  %cmp24.i.i = icmp ule i64 %25, 128, !dbg !8802
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !8803

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !8804
  br label %kmalloc_index.exit.i, !dbg !8804

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %26 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8805
  %cmp27.i.i = icmp ule i64 %26, 256, !dbg !8807
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !8808

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !8809
  br label %kmalloc_index.exit.i, !dbg !8809

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %27 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8810
  %cmp30.i.i = icmp ule i64 %27, 512, !dbg !8812
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !8813

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !8814
  br label %kmalloc_index.exit.i, !dbg !8814

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %28 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8815
  %cmp33.i.i = icmp ule i64 %28, 1024, !dbg !8817
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !8818

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !8819
  br label %kmalloc_index.exit.i, !dbg !8819

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8820
  %cmp36.i.i = icmp ule i64 %29, 2048, !dbg !8822
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !8823

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !8824
  br label %kmalloc_index.exit.i, !dbg !8824

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8825
  %cmp39.i.i = icmp ule i64 %30, 4096, !dbg !8827
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !8828

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !8829
  br label %kmalloc_index.exit.i, !dbg !8829

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8830
  %cmp42.i.i = icmp ule i64 %31, 8192, !dbg !8832
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !8833

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !8834
  br label %kmalloc_index.exit.i, !dbg !8834

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8835
  %cmp45.i.i = icmp ule i64 %32, 16384, !dbg !8837
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !8838

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !8839
  br label %kmalloc_index.exit.i, !dbg !8839

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8840
  %cmp48.i.i = icmp ule i64 %33, 32768, !dbg !8842
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !8843

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !8844
  br label %kmalloc_index.exit.i, !dbg !8844

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8845
  %cmp51.i.i = icmp ule i64 %34, 65536, !dbg !8847
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !8848

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !8849
  br label %kmalloc_index.exit.i, !dbg !8849

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8850
  %cmp54.i.i = icmp ule i64 %35, 131072, !dbg !8852
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !8853

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !8854
  br label %kmalloc_index.exit.i, !dbg !8854

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8855
  %cmp57.i.i = icmp ule i64 %36, 262144, !dbg !8857
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !8858

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !8859
  br label %kmalloc_index.exit.i, !dbg !8859

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8860
  %cmp60.i.i = icmp ule i64 %37, 524288, !dbg !8862
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !8863

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !8864
  br label %kmalloc_index.exit.i, !dbg !8864

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8865
  %cmp63.i.i = icmp ule i64 %38, 1048576, !dbg !8867
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !8868

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !8869
  br label %kmalloc_index.exit.i, !dbg !8869

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8870
  %cmp66.i.i = icmp ule i64 %39, 2097152, !dbg !8872
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !8873

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !8874
  br label %kmalloc_index.exit.i, !dbg !8874

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8875
  %cmp69.i.i = icmp ule i64 %40, 4194304, !dbg !8877
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !8878

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !8879
  br label %kmalloc_index.exit.i, !dbg !8879

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8880
  %cmp72.i.i = icmp ule i64 %41, 8388608, !dbg !8882
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !8883

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !8884
  br label %kmalloc_index.exit.i, !dbg !8884

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8885
  %cmp75.i.i = icmp ule i64 %42, 16777216, !dbg !8887
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !8888

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !8889
  br label %kmalloc_index.exit.i, !dbg !8889

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8890
  %cmp78.i.i = icmp ule i64 %43, 33554432, !dbg !8892
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !8893

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !8894
  br label %kmalloc_index.exit.i, !dbg !8894

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8895
  %cmp81.i.i = icmp ule i64 %44, 67108864, !dbg !8897
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !8898

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !8899
  br label %kmalloc_index.exit.i, !dbg !8899

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.16, i64 0, i64 0), i32 382, i32 0, i64 12) #12, !dbg !8900, !srcloc !8903
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 201) #12, !dbg !8904, !srcloc !8907
  unreachable, !dbg !8908

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %45 = load i32, i32* %retval.i.i, align 4, !dbg !8909
  store i32 %45, i32* %index.i, align 4, !dbg !8910
  %46 = load i32, i32* %index.i, align 4, !dbg !8911
  %tobool.i = icmp ne i32 %46, 0, !dbg !8911
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !8913

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !8914
  br label %kmalloc.exit, !dbg !8914

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %47 = load i32, i32* %flags.addr.i, align 4, !dbg !8915
  store i32 %47, i32* %flags.addr.i13.i, align 4
  %48 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !8916
  %and.i.i = and i32 %48, 17, !dbg !8916
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !8916
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !8916
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !8916
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !8916
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !8918

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !8919
  br label %kmalloc_type.exit.i, !dbg !8919

if.end.i16.i:                                     ; preds = %if.end4.i
  %49 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !8920
  %and2.i.i = and i32 %49, 1, !dbg !8921
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !8920
  %50 = zext i1 %tobool3.i.i to i64, !dbg !8920
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !8920
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !8922
  br label %kmalloc_type.exit.i, !dbg !8922

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %51 = load i32, i32* %retval.i12.i, align 4, !dbg !8923
  %idxprom.i = zext i32 %51 to i64, !dbg !8924
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !8924
  %52 = load i32, i32* %index.i, align 4, !dbg !8925
  %idxprom6.i = zext i32 %52 to i64, !dbg !8924
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !8924
  %53 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !8924
  %54 = load i32, i32* %flags.addr.i, align 4, !dbg !8926
  %55 = load i64, i64* %size.addr.i, align 8, !dbg !8927
  store %struct.kmem_cache* %53, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %54, i32* %flags.addr.i17.i, align 4
  store i64 %55, i64* %size.addr.i18.i, align 8
  %56 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !8928
  %57 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !8929
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %56, i32 %57) #13, !dbg !8930
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !8930
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !8930
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !8930
  call void @llvm.assume(i1 %maskcond.i.i) #12, !dbg !8930
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !8691
  %58 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !8931
  %59 = load i8*, i8** %ret.i.i, align 8, !dbg !8932
  %60 = load i64, i64* %size.addr.i18.i, align 8, !dbg !8933
  %61 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !8934
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %58, i8* %59, i64 %60, i32 %61) #13, !dbg !8935
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !8936
  %62 = load i8*, i8** %ret.i.i, align 8, !dbg !8937
  store i8* %62, i8** %retval.i, align 8, !dbg !8938
  br label %kmalloc.exit, !dbg !8938

if.end9.i:                                        ; preds = %entry
  %63 = load i64, i64* %size.addr.i, align 8, !dbg !8939
  %64 = load i32, i32* %flags.addr.i, align 4, !dbg !8940
  %call10.i = call noalias i8* @__kmalloc(i64 %63, i32 %64) #13, !dbg !8941
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !8941
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !8941
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !8941
  call void @llvm.assume(i1 %maskcond.i) #12, !dbg !8941
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !8942
  br label %kmalloc.exit, !dbg !8942

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %65 = load i8*, i8** %retval.i, align 8, !dbg !8943
  ret i8* %65, !dbg !8944
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @module_put(%struct.module* %module) #1 !dbg !8945 {
entry:
  %module.addr = alloca %struct.module*, align 8
  store %struct.module* %module, %struct.module** %module.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.module** %module.addr, metadata !8948, metadata !DIExpression()), !dbg !8949
  ret void, !dbg !8950
}

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i64(i64) #5

; Function Attrs: noredzone
declare dso_local noalias i8* @__kmalloc(i64, i32) #3

; Function Attrs: nounwind willreturn
declare void @llvm.assume(i1) #7

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @get_order(i64 %size) #8 !dbg !8951 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !8955, metadata !DIExpression()), !dbg !8960
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !8962, metadata !DIExpression()), !dbg !8963
  %retval = alloca i32, align 4
  %size.addr = alloca i64, align 8
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !8964, metadata !DIExpression()), !dbg !8965
  %0 = load i64, i64* %size.addr, align 8, !dbg !8966
  %1 = call i1 @llvm.is.constant.i64(i64 %0), !dbg !8968
  br i1 %1, label %if.then, label %if.end447, !dbg !8969

if.then:                                          ; preds = %entry
  %2 = load i64, i64* %size.addr, align 8, !dbg !8970
  %tobool = icmp ne i64 %2, 0, !dbg !8970
  br i1 %tobool, label %if.end, label %if.then1, !dbg !8973

if.then1:                                         ; preds = %if.then
  store i32 52, i32* %retval, align 4, !dbg !8974
  br label %return, !dbg !8974

if.end:                                           ; preds = %if.then
  %3 = load i64, i64* %size.addr, align 8, !dbg !8975
  %cmp = icmp ult i64 %3, 4096, !dbg !8977
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !8978

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !8979
  br label %return, !dbg !8979

if.end3:                                          ; preds = %if.end
  %4 = load i64, i64* %size.addr, align 8, !dbg !8980
  %sub = sub i64 %4, 1, !dbg !8980
  %5 = call i1 @llvm.is.constant.i64(i64 %sub), !dbg !8980
  br i1 %5, label %cond.true, label %cond.false442, !dbg !8980

cond.true:                                        ; preds = %if.end3
  %6 = load i64, i64* %size.addr, align 8, !dbg !8980
  %sub4 = sub i64 %6, 1, !dbg !8980
  %7 = call i1 @llvm.is.constant.i64(i64 %sub4), !dbg !8980
  br i1 %7, label %cond.true5, label %cond.false439, !dbg !8980

cond.true5:                                       ; preds = %cond.true
  %8 = load i64, i64* %size.addr, align 8, !dbg !8980
  %sub6 = sub i64 %8, 1, !dbg !8980
  %cmp7 = icmp ult i64 %sub6, 2, !dbg !8980
  br i1 %cmp7, label %cond.true8, label %cond.false, !dbg !8980

cond.true8:                                       ; preds = %cond.true5
  br label %cond.end437, !dbg !8980

cond.false:                                       ; preds = %cond.true5
  %9 = load i64, i64* %size.addr, align 8, !dbg !8980
  %sub9 = sub i64 %9, 1, !dbg !8980
  %and = and i64 %sub9, -9223372036854775808, !dbg !8980
  %tobool10 = icmp ne i64 %and, 0, !dbg !8980
  br i1 %tobool10, label %cond.true11, label %cond.false12, !dbg !8980

cond.true11:                                      ; preds = %cond.false
  br label %cond.end435, !dbg !8980

cond.false12:                                     ; preds = %cond.false
  %10 = load i64, i64* %size.addr, align 8, !dbg !8980
  %sub13 = sub i64 %10, 1, !dbg !8980
  %and14 = and i64 %sub13, 4611686018427387904, !dbg !8980
  %tobool15 = icmp ne i64 %and14, 0, !dbg !8980
  br i1 %tobool15, label %cond.true16, label %cond.false17, !dbg !8980

cond.true16:                                      ; preds = %cond.false12
  br label %cond.end433, !dbg !8980

cond.false17:                                     ; preds = %cond.false12
  %11 = load i64, i64* %size.addr, align 8, !dbg !8980
  %sub18 = sub i64 %11, 1, !dbg !8980
  %and19 = and i64 %sub18, 2305843009213693952, !dbg !8980
  %tobool20 = icmp ne i64 %and19, 0, !dbg !8980
  br i1 %tobool20, label %cond.true21, label %cond.false22, !dbg !8980

cond.true21:                                      ; preds = %cond.false17
  br label %cond.end431, !dbg !8980

cond.false22:                                     ; preds = %cond.false17
  %12 = load i64, i64* %size.addr, align 8, !dbg !8980
  %sub23 = sub i64 %12, 1, !dbg !8980
  %and24 = and i64 %sub23, 1152921504606846976, !dbg !8980
  %tobool25 = icmp ne i64 %and24, 0, !dbg !8980
  br i1 %tobool25, label %cond.true26, label %cond.false27, !dbg !8980

cond.true26:                                      ; preds = %cond.false22
  br label %cond.end429, !dbg !8980

cond.false27:                                     ; preds = %cond.false22
  %13 = load i64, i64* %size.addr, align 8, !dbg !8980
  %sub28 = sub i64 %13, 1, !dbg !8980
  %and29 = and i64 %sub28, 576460752303423488, !dbg !8980
  %tobool30 = icmp ne i64 %and29, 0, !dbg !8980
  br i1 %tobool30, label %cond.true31, label %cond.false32, !dbg !8980

cond.true31:                                      ; preds = %cond.false27
  br label %cond.end427, !dbg !8980

cond.false32:                                     ; preds = %cond.false27
  %14 = load i64, i64* %size.addr, align 8, !dbg !8980
  %sub33 = sub i64 %14, 1, !dbg !8980
  %and34 = and i64 %sub33, 288230376151711744, !dbg !8980
  %tobool35 = icmp ne i64 %and34, 0, !dbg !8980
  br i1 %tobool35, label %cond.true36, label %cond.false37, !dbg !8980

cond.true36:                                      ; preds = %cond.false32
  br label %cond.end425, !dbg !8980

cond.false37:                                     ; preds = %cond.false32
  %15 = load i64, i64* %size.addr, align 8, !dbg !8980
  %sub38 = sub i64 %15, 1, !dbg !8980
  %and39 = and i64 %sub38, 144115188075855872, !dbg !8980
  %tobool40 = icmp ne i64 %and39, 0, !dbg !8980
  br i1 %tobool40, label %cond.true41, label %cond.false42, !dbg !8980

cond.true41:                                      ; preds = %cond.false37
  br label %cond.end423, !dbg !8980

cond.false42:                                     ; preds = %cond.false37
  %16 = load i64, i64* %size.addr, align 8, !dbg !8980
  %sub43 = sub i64 %16, 1, !dbg !8980
  %and44 = and i64 %sub43, 72057594037927936, !dbg !8980
  %tobool45 = icmp ne i64 %and44, 0, !dbg !8980
  br i1 %tobool45, label %cond.true46, label %cond.false47, !dbg !8980

cond.true46:                                      ; preds = %cond.false42
  br label %cond.end421, !dbg !8980

cond.false47:                                     ; preds = %cond.false42
  %17 = load i64, i64* %size.addr, align 8, !dbg !8980
  %sub48 = sub i64 %17, 1, !dbg !8980
  %and49 = and i64 %sub48, 36028797018963968, !dbg !8980
  %tobool50 = icmp ne i64 %and49, 0, !dbg !8980
  br i1 %tobool50, label %cond.true51, label %cond.false52, !dbg !8980

cond.true51:                                      ; preds = %cond.false47
  br label %cond.end419, !dbg !8980

cond.false52:                                     ; preds = %cond.false47
  %18 = load i64, i64* %size.addr, align 8, !dbg !8980
  %sub53 = sub i64 %18, 1, !dbg !8980
  %and54 = and i64 %sub53, 18014398509481984, !dbg !8980
  %tobool55 = icmp ne i64 %and54, 0, !dbg !8980
  br i1 %tobool55, label %cond.true56, label %cond.false57, !dbg !8980

cond.true56:                                      ; preds = %cond.false52
  br label %cond.end417, !dbg !8980

cond.false57:                                     ; preds = %cond.false52
  %19 = load i64, i64* %size.addr, align 8, !dbg !8980
  %sub58 = sub i64 %19, 1, !dbg !8980
  %and59 = and i64 %sub58, 9007199254740992, !dbg !8980
  %tobool60 = icmp ne i64 %and59, 0, !dbg !8980
  br i1 %tobool60, label %cond.true61, label %cond.false62, !dbg !8980

cond.true61:                                      ; preds = %cond.false57
  br label %cond.end415, !dbg !8980

cond.false62:                                     ; preds = %cond.false57
  %20 = load i64, i64* %size.addr, align 8, !dbg !8980
  %sub63 = sub i64 %20, 1, !dbg !8980
  %and64 = and i64 %sub63, 4503599627370496, !dbg !8980
  %tobool65 = icmp ne i64 %and64, 0, !dbg !8980
  br i1 %tobool65, label %cond.true66, label %cond.false67, !dbg !8980

cond.true66:                                      ; preds = %cond.false62
  br label %cond.end413, !dbg !8980

cond.false67:                                     ; preds = %cond.false62
  %21 = load i64, i64* %size.addr, align 8, !dbg !8980
  %sub68 = sub i64 %21, 1, !dbg !8980
  %and69 = and i64 %sub68, 2251799813685248, !dbg !8980
  %tobool70 = icmp ne i64 %and69, 0, !dbg !8980
  br i1 %tobool70, label %cond.true71, label %cond.false72, !dbg !8980

cond.true71:                                      ; preds = %cond.false67
  br label %cond.end411, !dbg !8980

cond.false72:                                     ; preds = %cond.false67
  %22 = load i64, i64* %size.addr, align 8, !dbg !8980
  %sub73 = sub i64 %22, 1, !dbg !8980
  %and74 = and i64 %sub73, 1125899906842624, !dbg !8980
  %tobool75 = icmp ne i64 %and74, 0, !dbg !8980
  br i1 %tobool75, label %cond.true76, label %cond.false77, !dbg !8980

cond.true76:                                      ; preds = %cond.false72
  br label %cond.end409, !dbg !8980

cond.false77:                                     ; preds = %cond.false72
  %23 = load i64, i64* %size.addr, align 8, !dbg !8980
  %sub78 = sub i64 %23, 1, !dbg !8980
  %and79 = and i64 %sub78, 562949953421312, !dbg !8980
  %tobool80 = icmp ne i64 %and79, 0, !dbg !8980
  br i1 %tobool80, label %cond.true81, label %cond.false82, !dbg !8980

cond.true81:                                      ; preds = %cond.false77
  br label %cond.end407, !dbg !8980

cond.false82:                                     ; preds = %cond.false77
  %24 = load i64, i64* %size.addr, align 8, !dbg !8980
  %sub83 = sub i64 %24, 1, !dbg !8980
  %and84 = and i64 %sub83, 281474976710656, !dbg !8980
  %tobool85 = icmp ne i64 %and84, 0, !dbg !8980
  br i1 %tobool85, label %cond.true86, label %cond.false87, !dbg !8980

cond.true86:                                      ; preds = %cond.false82
  br label %cond.end405, !dbg !8980

cond.false87:                                     ; preds = %cond.false82
  %25 = load i64, i64* %size.addr, align 8, !dbg !8980
  %sub88 = sub i64 %25, 1, !dbg !8980
  %and89 = and i64 %sub88, 140737488355328, !dbg !8980
  %tobool90 = icmp ne i64 %and89, 0, !dbg !8980
  br i1 %tobool90, label %cond.true91, label %cond.false92, !dbg !8980

cond.true91:                                      ; preds = %cond.false87
  br label %cond.end403, !dbg !8980

cond.false92:                                     ; preds = %cond.false87
  %26 = load i64, i64* %size.addr, align 8, !dbg !8980
  %sub93 = sub i64 %26, 1, !dbg !8980
  %and94 = and i64 %sub93, 70368744177664, !dbg !8980
  %tobool95 = icmp ne i64 %and94, 0, !dbg !8980
  br i1 %tobool95, label %cond.true96, label %cond.false97, !dbg !8980

cond.true96:                                      ; preds = %cond.false92
  br label %cond.end401, !dbg !8980

cond.false97:                                     ; preds = %cond.false92
  %27 = load i64, i64* %size.addr, align 8, !dbg !8980
  %sub98 = sub i64 %27, 1, !dbg !8980
  %and99 = and i64 %sub98, 35184372088832, !dbg !8980
  %tobool100 = icmp ne i64 %and99, 0, !dbg !8980
  br i1 %tobool100, label %cond.true101, label %cond.false102, !dbg !8980

cond.true101:                                     ; preds = %cond.false97
  br label %cond.end399, !dbg !8980

cond.false102:                                    ; preds = %cond.false97
  %28 = load i64, i64* %size.addr, align 8, !dbg !8980
  %sub103 = sub i64 %28, 1, !dbg !8980
  %and104 = and i64 %sub103, 17592186044416, !dbg !8980
  %tobool105 = icmp ne i64 %and104, 0, !dbg !8980
  br i1 %tobool105, label %cond.true106, label %cond.false107, !dbg !8980

cond.true106:                                     ; preds = %cond.false102
  br label %cond.end397, !dbg !8980

cond.false107:                                    ; preds = %cond.false102
  %29 = load i64, i64* %size.addr, align 8, !dbg !8980
  %sub108 = sub i64 %29, 1, !dbg !8980
  %and109 = and i64 %sub108, 8796093022208, !dbg !8980
  %tobool110 = icmp ne i64 %and109, 0, !dbg !8980
  br i1 %tobool110, label %cond.true111, label %cond.false112, !dbg !8980

cond.true111:                                     ; preds = %cond.false107
  br label %cond.end395, !dbg !8980

cond.false112:                                    ; preds = %cond.false107
  %30 = load i64, i64* %size.addr, align 8, !dbg !8980
  %sub113 = sub i64 %30, 1, !dbg !8980
  %and114 = and i64 %sub113, 4398046511104, !dbg !8980
  %tobool115 = icmp ne i64 %and114, 0, !dbg !8980
  br i1 %tobool115, label %cond.true116, label %cond.false117, !dbg !8980

cond.true116:                                     ; preds = %cond.false112
  br label %cond.end393, !dbg !8980

cond.false117:                                    ; preds = %cond.false112
  %31 = load i64, i64* %size.addr, align 8, !dbg !8980
  %sub118 = sub i64 %31, 1, !dbg !8980
  %and119 = and i64 %sub118, 2199023255552, !dbg !8980
  %tobool120 = icmp ne i64 %and119, 0, !dbg !8980
  br i1 %tobool120, label %cond.true121, label %cond.false122, !dbg !8980

cond.true121:                                     ; preds = %cond.false117
  br label %cond.end391, !dbg !8980

cond.false122:                                    ; preds = %cond.false117
  %32 = load i64, i64* %size.addr, align 8, !dbg !8980
  %sub123 = sub i64 %32, 1, !dbg !8980
  %and124 = and i64 %sub123, 1099511627776, !dbg !8980
  %tobool125 = icmp ne i64 %and124, 0, !dbg !8980
  br i1 %tobool125, label %cond.true126, label %cond.false127, !dbg !8980

cond.true126:                                     ; preds = %cond.false122
  br label %cond.end389, !dbg !8980

cond.false127:                                    ; preds = %cond.false122
  %33 = load i64, i64* %size.addr, align 8, !dbg !8980
  %sub128 = sub i64 %33, 1, !dbg !8980
  %and129 = and i64 %sub128, 549755813888, !dbg !8980
  %tobool130 = icmp ne i64 %and129, 0, !dbg !8980
  br i1 %tobool130, label %cond.true131, label %cond.false132, !dbg !8980

cond.true131:                                     ; preds = %cond.false127
  br label %cond.end387, !dbg !8980

cond.false132:                                    ; preds = %cond.false127
  %34 = load i64, i64* %size.addr, align 8, !dbg !8980
  %sub133 = sub i64 %34, 1, !dbg !8980
  %and134 = and i64 %sub133, 274877906944, !dbg !8980
  %tobool135 = icmp ne i64 %and134, 0, !dbg !8980
  br i1 %tobool135, label %cond.true136, label %cond.false137, !dbg !8980

cond.true136:                                     ; preds = %cond.false132
  br label %cond.end385, !dbg !8980

cond.false137:                                    ; preds = %cond.false132
  %35 = load i64, i64* %size.addr, align 8, !dbg !8980
  %sub138 = sub i64 %35, 1, !dbg !8980
  %and139 = and i64 %sub138, 137438953472, !dbg !8980
  %tobool140 = icmp ne i64 %and139, 0, !dbg !8980
  br i1 %tobool140, label %cond.true141, label %cond.false142, !dbg !8980

cond.true141:                                     ; preds = %cond.false137
  br label %cond.end383, !dbg !8980

cond.false142:                                    ; preds = %cond.false137
  %36 = load i64, i64* %size.addr, align 8, !dbg !8980
  %sub143 = sub i64 %36, 1, !dbg !8980
  %and144 = and i64 %sub143, 68719476736, !dbg !8980
  %tobool145 = icmp ne i64 %and144, 0, !dbg !8980
  br i1 %tobool145, label %cond.true146, label %cond.false147, !dbg !8980

cond.true146:                                     ; preds = %cond.false142
  br label %cond.end381, !dbg !8980

cond.false147:                                    ; preds = %cond.false142
  %37 = load i64, i64* %size.addr, align 8, !dbg !8980
  %sub148 = sub i64 %37, 1, !dbg !8980
  %and149 = and i64 %sub148, 34359738368, !dbg !8980
  %tobool150 = icmp ne i64 %and149, 0, !dbg !8980
  br i1 %tobool150, label %cond.true151, label %cond.false152, !dbg !8980

cond.true151:                                     ; preds = %cond.false147
  br label %cond.end379, !dbg !8980

cond.false152:                                    ; preds = %cond.false147
  %38 = load i64, i64* %size.addr, align 8, !dbg !8980
  %sub153 = sub i64 %38, 1, !dbg !8980
  %and154 = and i64 %sub153, 17179869184, !dbg !8980
  %tobool155 = icmp ne i64 %and154, 0, !dbg !8980
  br i1 %tobool155, label %cond.true156, label %cond.false157, !dbg !8980

cond.true156:                                     ; preds = %cond.false152
  br label %cond.end377, !dbg !8980

cond.false157:                                    ; preds = %cond.false152
  %39 = load i64, i64* %size.addr, align 8, !dbg !8980
  %sub158 = sub i64 %39, 1, !dbg !8980
  %and159 = and i64 %sub158, 8589934592, !dbg !8980
  %tobool160 = icmp ne i64 %and159, 0, !dbg !8980
  br i1 %tobool160, label %cond.true161, label %cond.false162, !dbg !8980

cond.true161:                                     ; preds = %cond.false157
  br label %cond.end375, !dbg !8980

cond.false162:                                    ; preds = %cond.false157
  %40 = load i64, i64* %size.addr, align 8, !dbg !8980
  %sub163 = sub i64 %40, 1, !dbg !8980
  %and164 = and i64 %sub163, 4294967296, !dbg !8980
  %tobool165 = icmp ne i64 %and164, 0, !dbg !8980
  br i1 %tobool165, label %cond.true166, label %cond.false167, !dbg !8980

cond.true166:                                     ; preds = %cond.false162
  br label %cond.end373, !dbg !8980

cond.false167:                                    ; preds = %cond.false162
  %41 = load i64, i64* %size.addr, align 8, !dbg !8980
  %sub168 = sub i64 %41, 1, !dbg !8980
  %and169 = and i64 %sub168, 2147483648, !dbg !8980
  %tobool170 = icmp ne i64 %and169, 0, !dbg !8980
  br i1 %tobool170, label %cond.true171, label %cond.false172, !dbg !8980

cond.true171:                                     ; preds = %cond.false167
  br label %cond.end371, !dbg !8980

cond.false172:                                    ; preds = %cond.false167
  %42 = load i64, i64* %size.addr, align 8, !dbg !8980
  %sub173 = sub i64 %42, 1, !dbg !8980
  %and174 = and i64 %sub173, 1073741824, !dbg !8980
  %tobool175 = icmp ne i64 %and174, 0, !dbg !8980
  br i1 %tobool175, label %cond.true176, label %cond.false177, !dbg !8980

cond.true176:                                     ; preds = %cond.false172
  br label %cond.end369, !dbg !8980

cond.false177:                                    ; preds = %cond.false172
  %43 = load i64, i64* %size.addr, align 8, !dbg !8980
  %sub178 = sub i64 %43, 1, !dbg !8980
  %and179 = and i64 %sub178, 536870912, !dbg !8980
  %tobool180 = icmp ne i64 %and179, 0, !dbg !8980
  br i1 %tobool180, label %cond.true181, label %cond.false182, !dbg !8980

cond.true181:                                     ; preds = %cond.false177
  br label %cond.end367, !dbg !8980

cond.false182:                                    ; preds = %cond.false177
  %44 = load i64, i64* %size.addr, align 8, !dbg !8980
  %sub183 = sub i64 %44, 1, !dbg !8980
  %and184 = and i64 %sub183, 268435456, !dbg !8980
  %tobool185 = icmp ne i64 %and184, 0, !dbg !8980
  br i1 %tobool185, label %cond.true186, label %cond.false187, !dbg !8980

cond.true186:                                     ; preds = %cond.false182
  br label %cond.end365, !dbg !8980

cond.false187:                                    ; preds = %cond.false182
  %45 = load i64, i64* %size.addr, align 8, !dbg !8980
  %sub188 = sub i64 %45, 1, !dbg !8980
  %and189 = and i64 %sub188, 134217728, !dbg !8980
  %tobool190 = icmp ne i64 %and189, 0, !dbg !8980
  br i1 %tobool190, label %cond.true191, label %cond.false192, !dbg !8980

cond.true191:                                     ; preds = %cond.false187
  br label %cond.end363, !dbg !8980

cond.false192:                                    ; preds = %cond.false187
  %46 = load i64, i64* %size.addr, align 8, !dbg !8980
  %sub193 = sub i64 %46, 1, !dbg !8980
  %and194 = and i64 %sub193, 67108864, !dbg !8980
  %tobool195 = icmp ne i64 %and194, 0, !dbg !8980
  br i1 %tobool195, label %cond.true196, label %cond.false197, !dbg !8980

cond.true196:                                     ; preds = %cond.false192
  br label %cond.end361, !dbg !8980

cond.false197:                                    ; preds = %cond.false192
  %47 = load i64, i64* %size.addr, align 8, !dbg !8980
  %sub198 = sub i64 %47, 1, !dbg !8980
  %and199 = and i64 %sub198, 33554432, !dbg !8980
  %tobool200 = icmp ne i64 %and199, 0, !dbg !8980
  br i1 %tobool200, label %cond.true201, label %cond.false202, !dbg !8980

cond.true201:                                     ; preds = %cond.false197
  br label %cond.end359, !dbg !8980

cond.false202:                                    ; preds = %cond.false197
  %48 = load i64, i64* %size.addr, align 8, !dbg !8980
  %sub203 = sub i64 %48, 1, !dbg !8980
  %and204 = and i64 %sub203, 16777216, !dbg !8980
  %tobool205 = icmp ne i64 %and204, 0, !dbg !8980
  br i1 %tobool205, label %cond.true206, label %cond.false207, !dbg !8980

cond.true206:                                     ; preds = %cond.false202
  br label %cond.end357, !dbg !8980

cond.false207:                                    ; preds = %cond.false202
  %49 = load i64, i64* %size.addr, align 8, !dbg !8980
  %sub208 = sub i64 %49, 1, !dbg !8980
  %and209 = and i64 %sub208, 8388608, !dbg !8980
  %tobool210 = icmp ne i64 %and209, 0, !dbg !8980
  br i1 %tobool210, label %cond.true211, label %cond.false212, !dbg !8980

cond.true211:                                     ; preds = %cond.false207
  br label %cond.end355, !dbg !8980

cond.false212:                                    ; preds = %cond.false207
  %50 = load i64, i64* %size.addr, align 8, !dbg !8980
  %sub213 = sub i64 %50, 1, !dbg !8980
  %and214 = and i64 %sub213, 4194304, !dbg !8980
  %tobool215 = icmp ne i64 %and214, 0, !dbg !8980
  br i1 %tobool215, label %cond.true216, label %cond.false217, !dbg !8980

cond.true216:                                     ; preds = %cond.false212
  br label %cond.end353, !dbg !8980

cond.false217:                                    ; preds = %cond.false212
  %51 = load i64, i64* %size.addr, align 8, !dbg !8980
  %sub218 = sub i64 %51, 1, !dbg !8980
  %and219 = and i64 %sub218, 2097152, !dbg !8980
  %tobool220 = icmp ne i64 %and219, 0, !dbg !8980
  br i1 %tobool220, label %cond.true221, label %cond.false222, !dbg !8980

cond.true221:                                     ; preds = %cond.false217
  br label %cond.end351, !dbg !8980

cond.false222:                                    ; preds = %cond.false217
  %52 = load i64, i64* %size.addr, align 8, !dbg !8980
  %sub223 = sub i64 %52, 1, !dbg !8980
  %and224 = and i64 %sub223, 1048576, !dbg !8980
  %tobool225 = icmp ne i64 %and224, 0, !dbg !8980
  br i1 %tobool225, label %cond.true226, label %cond.false227, !dbg !8980

cond.true226:                                     ; preds = %cond.false222
  br label %cond.end349, !dbg !8980

cond.false227:                                    ; preds = %cond.false222
  %53 = load i64, i64* %size.addr, align 8, !dbg !8980
  %sub228 = sub i64 %53, 1, !dbg !8980
  %and229 = and i64 %sub228, 524288, !dbg !8980
  %tobool230 = icmp ne i64 %and229, 0, !dbg !8980
  br i1 %tobool230, label %cond.true231, label %cond.false232, !dbg !8980

cond.true231:                                     ; preds = %cond.false227
  br label %cond.end347, !dbg !8980

cond.false232:                                    ; preds = %cond.false227
  %54 = load i64, i64* %size.addr, align 8, !dbg !8980
  %sub233 = sub i64 %54, 1, !dbg !8980
  %and234 = and i64 %sub233, 262144, !dbg !8980
  %tobool235 = icmp ne i64 %and234, 0, !dbg !8980
  br i1 %tobool235, label %cond.true236, label %cond.false237, !dbg !8980

cond.true236:                                     ; preds = %cond.false232
  br label %cond.end345, !dbg !8980

cond.false237:                                    ; preds = %cond.false232
  %55 = load i64, i64* %size.addr, align 8, !dbg !8980
  %sub238 = sub i64 %55, 1, !dbg !8980
  %and239 = and i64 %sub238, 131072, !dbg !8980
  %tobool240 = icmp ne i64 %and239, 0, !dbg !8980
  br i1 %tobool240, label %cond.true241, label %cond.false242, !dbg !8980

cond.true241:                                     ; preds = %cond.false237
  br label %cond.end343, !dbg !8980

cond.false242:                                    ; preds = %cond.false237
  %56 = load i64, i64* %size.addr, align 8, !dbg !8980
  %sub243 = sub i64 %56, 1, !dbg !8980
  %and244 = and i64 %sub243, 65536, !dbg !8980
  %tobool245 = icmp ne i64 %and244, 0, !dbg !8980
  br i1 %tobool245, label %cond.true246, label %cond.false247, !dbg !8980

cond.true246:                                     ; preds = %cond.false242
  br label %cond.end341, !dbg !8980

cond.false247:                                    ; preds = %cond.false242
  %57 = load i64, i64* %size.addr, align 8, !dbg !8980
  %sub248 = sub i64 %57, 1, !dbg !8980
  %and249 = and i64 %sub248, 32768, !dbg !8980
  %tobool250 = icmp ne i64 %and249, 0, !dbg !8980
  br i1 %tobool250, label %cond.true251, label %cond.false252, !dbg !8980

cond.true251:                                     ; preds = %cond.false247
  br label %cond.end339, !dbg !8980

cond.false252:                                    ; preds = %cond.false247
  %58 = load i64, i64* %size.addr, align 8, !dbg !8980
  %sub253 = sub i64 %58, 1, !dbg !8980
  %and254 = and i64 %sub253, 16384, !dbg !8980
  %tobool255 = icmp ne i64 %and254, 0, !dbg !8980
  br i1 %tobool255, label %cond.true256, label %cond.false257, !dbg !8980

cond.true256:                                     ; preds = %cond.false252
  br label %cond.end337, !dbg !8980

cond.false257:                                    ; preds = %cond.false252
  %59 = load i64, i64* %size.addr, align 8, !dbg !8980
  %sub258 = sub i64 %59, 1, !dbg !8980
  %and259 = and i64 %sub258, 8192, !dbg !8980
  %tobool260 = icmp ne i64 %and259, 0, !dbg !8980
  br i1 %tobool260, label %cond.true261, label %cond.false262, !dbg !8980

cond.true261:                                     ; preds = %cond.false257
  br label %cond.end335, !dbg !8980

cond.false262:                                    ; preds = %cond.false257
  %60 = load i64, i64* %size.addr, align 8, !dbg !8980
  %sub263 = sub i64 %60, 1, !dbg !8980
  %and264 = and i64 %sub263, 4096, !dbg !8980
  %tobool265 = icmp ne i64 %and264, 0, !dbg !8980
  br i1 %tobool265, label %cond.true266, label %cond.false267, !dbg !8980

cond.true266:                                     ; preds = %cond.false262
  br label %cond.end333, !dbg !8980

cond.false267:                                    ; preds = %cond.false262
  %61 = load i64, i64* %size.addr, align 8, !dbg !8980
  %sub268 = sub i64 %61, 1, !dbg !8980
  %and269 = and i64 %sub268, 2048, !dbg !8980
  %tobool270 = icmp ne i64 %and269, 0, !dbg !8980
  br i1 %tobool270, label %cond.true271, label %cond.false272, !dbg !8980

cond.true271:                                     ; preds = %cond.false267
  br label %cond.end331, !dbg !8980

cond.false272:                                    ; preds = %cond.false267
  %62 = load i64, i64* %size.addr, align 8, !dbg !8980
  %sub273 = sub i64 %62, 1, !dbg !8980
  %and274 = and i64 %sub273, 1024, !dbg !8980
  %tobool275 = icmp ne i64 %and274, 0, !dbg !8980
  br i1 %tobool275, label %cond.true276, label %cond.false277, !dbg !8980

cond.true276:                                     ; preds = %cond.false272
  br label %cond.end329, !dbg !8980

cond.false277:                                    ; preds = %cond.false272
  %63 = load i64, i64* %size.addr, align 8, !dbg !8980
  %sub278 = sub i64 %63, 1, !dbg !8980
  %and279 = and i64 %sub278, 512, !dbg !8980
  %tobool280 = icmp ne i64 %and279, 0, !dbg !8980
  br i1 %tobool280, label %cond.true281, label %cond.false282, !dbg !8980

cond.true281:                                     ; preds = %cond.false277
  br label %cond.end327, !dbg !8980

cond.false282:                                    ; preds = %cond.false277
  %64 = load i64, i64* %size.addr, align 8, !dbg !8980
  %sub283 = sub i64 %64, 1, !dbg !8980
  %and284 = and i64 %sub283, 256, !dbg !8980
  %tobool285 = icmp ne i64 %and284, 0, !dbg !8980
  br i1 %tobool285, label %cond.true286, label %cond.false287, !dbg !8980

cond.true286:                                     ; preds = %cond.false282
  br label %cond.end325, !dbg !8980

cond.false287:                                    ; preds = %cond.false282
  %65 = load i64, i64* %size.addr, align 8, !dbg !8980
  %sub288 = sub i64 %65, 1, !dbg !8980
  %and289 = and i64 %sub288, 128, !dbg !8980
  %tobool290 = icmp ne i64 %and289, 0, !dbg !8980
  br i1 %tobool290, label %cond.true291, label %cond.false292, !dbg !8980

cond.true291:                                     ; preds = %cond.false287
  br label %cond.end323, !dbg !8980

cond.false292:                                    ; preds = %cond.false287
  %66 = load i64, i64* %size.addr, align 8, !dbg !8980
  %sub293 = sub i64 %66, 1, !dbg !8980
  %and294 = and i64 %sub293, 64, !dbg !8980
  %tobool295 = icmp ne i64 %and294, 0, !dbg !8980
  br i1 %tobool295, label %cond.true296, label %cond.false297, !dbg !8980

cond.true296:                                     ; preds = %cond.false292
  br label %cond.end321, !dbg !8980

cond.false297:                                    ; preds = %cond.false292
  %67 = load i64, i64* %size.addr, align 8, !dbg !8980
  %sub298 = sub i64 %67, 1, !dbg !8980
  %and299 = and i64 %sub298, 32, !dbg !8980
  %tobool300 = icmp ne i64 %and299, 0, !dbg !8980
  br i1 %tobool300, label %cond.true301, label %cond.false302, !dbg !8980

cond.true301:                                     ; preds = %cond.false297
  br label %cond.end319, !dbg !8980

cond.false302:                                    ; preds = %cond.false297
  %68 = load i64, i64* %size.addr, align 8, !dbg !8980
  %sub303 = sub i64 %68, 1, !dbg !8980
  %and304 = and i64 %sub303, 16, !dbg !8980
  %tobool305 = icmp ne i64 %and304, 0, !dbg !8980
  br i1 %tobool305, label %cond.true306, label %cond.false307, !dbg !8980

cond.true306:                                     ; preds = %cond.false302
  br label %cond.end317, !dbg !8980

cond.false307:                                    ; preds = %cond.false302
  %69 = load i64, i64* %size.addr, align 8, !dbg !8980
  %sub308 = sub i64 %69, 1, !dbg !8980
  %and309 = and i64 %sub308, 8, !dbg !8980
  %tobool310 = icmp ne i64 %and309, 0, !dbg !8980
  br i1 %tobool310, label %cond.true311, label %cond.false312, !dbg !8980

cond.true311:                                     ; preds = %cond.false307
  br label %cond.end, !dbg !8980

cond.false312:                                    ; preds = %cond.false307
  %70 = load i64, i64* %size.addr, align 8, !dbg !8980
  %sub313 = sub i64 %70, 1, !dbg !8980
  %and314 = and i64 %sub313, 4, !dbg !8980
  %tobool315 = icmp ne i64 %and314, 0, !dbg !8980
  %71 = zext i1 %tobool315 to i64, !dbg !8980
  %cond = select i1 %tobool315, i32 2, i32 1, !dbg !8980
  br label %cond.end, !dbg !8980

cond.end:                                         ; preds = %cond.false312, %cond.true311
  %cond316 = phi i32 [ 3, %cond.true311 ], [ %cond, %cond.false312 ], !dbg !8980
  br label %cond.end317, !dbg !8980

cond.end317:                                      ; preds = %cond.end, %cond.true306
  %cond318 = phi i32 [ 4, %cond.true306 ], [ %cond316, %cond.end ], !dbg !8980
  br label %cond.end319, !dbg !8980

cond.end319:                                      ; preds = %cond.end317, %cond.true301
  %cond320 = phi i32 [ 5, %cond.true301 ], [ %cond318, %cond.end317 ], !dbg !8980
  br label %cond.end321, !dbg !8980

cond.end321:                                      ; preds = %cond.end319, %cond.true296
  %cond322 = phi i32 [ 6, %cond.true296 ], [ %cond320, %cond.end319 ], !dbg !8980
  br label %cond.end323, !dbg !8980

cond.end323:                                      ; preds = %cond.end321, %cond.true291
  %cond324 = phi i32 [ 7, %cond.true291 ], [ %cond322, %cond.end321 ], !dbg !8980
  br label %cond.end325, !dbg !8980

cond.end325:                                      ; preds = %cond.end323, %cond.true286
  %cond326 = phi i32 [ 8, %cond.true286 ], [ %cond324, %cond.end323 ], !dbg !8980
  br label %cond.end327, !dbg !8980

cond.end327:                                      ; preds = %cond.end325, %cond.true281
  %cond328 = phi i32 [ 9, %cond.true281 ], [ %cond326, %cond.end325 ], !dbg !8980
  br label %cond.end329, !dbg !8980

cond.end329:                                      ; preds = %cond.end327, %cond.true276
  %cond330 = phi i32 [ 10, %cond.true276 ], [ %cond328, %cond.end327 ], !dbg !8980
  br label %cond.end331, !dbg !8980

cond.end331:                                      ; preds = %cond.end329, %cond.true271
  %cond332 = phi i32 [ 11, %cond.true271 ], [ %cond330, %cond.end329 ], !dbg !8980
  br label %cond.end333, !dbg !8980

cond.end333:                                      ; preds = %cond.end331, %cond.true266
  %cond334 = phi i32 [ 12, %cond.true266 ], [ %cond332, %cond.end331 ], !dbg !8980
  br label %cond.end335, !dbg !8980

cond.end335:                                      ; preds = %cond.end333, %cond.true261
  %cond336 = phi i32 [ 13, %cond.true261 ], [ %cond334, %cond.end333 ], !dbg !8980
  br label %cond.end337, !dbg !8980

cond.end337:                                      ; preds = %cond.end335, %cond.true256
  %cond338 = phi i32 [ 14, %cond.true256 ], [ %cond336, %cond.end335 ], !dbg !8980
  br label %cond.end339, !dbg !8980

cond.end339:                                      ; preds = %cond.end337, %cond.true251
  %cond340 = phi i32 [ 15, %cond.true251 ], [ %cond338, %cond.end337 ], !dbg !8980
  br label %cond.end341, !dbg !8980

cond.end341:                                      ; preds = %cond.end339, %cond.true246
  %cond342 = phi i32 [ 16, %cond.true246 ], [ %cond340, %cond.end339 ], !dbg !8980
  br label %cond.end343, !dbg !8980

cond.end343:                                      ; preds = %cond.end341, %cond.true241
  %cond344 = phi i32 [ 17, %cond.true241 ], [ %cond342, %cond.end341 ], !dbg !8980
  br label %cond.end345, !dbg !8980

cond.end345:                                      ; preds = %cond.end343, %cond.true236
  %cond346 = phi i32 [ 18, %cond.true236 ], [ %cond344, %cond.end343 ], !dbg !8980
  br label %cond.end347, !dbg !8980

cond.end347:                                      ; preds = %cond.end345, %cond.true231
  %cond348 = phi i32 [ 19, %cond.true231 ], [ %cond346, %cond.end345 ], !dbg !8980
  br label %cond.end349, !dbg !8980

cond.end349:                                      ; preds = %cond.end347, %cond.true226
  %cond350 = phi i32 [ 20, %cond.true226 ], [ %cond348, %cond.end347 ], !dbg !8980
  br label %cond.end351, !dbg !8980

cond.end351:                                      ; preds = %cond.end349, %cond.true221
  %cond352 = phi i32 [ 21, %cond.true221 ], [ %cond350, %cond.end349 ], !dbg !8980
  br label %cond.end353, !dbg !8980

cond.end353:                                      ; preds = %cond.end351, %cond.true216
  %cond354 = phi i32 [ 22, %cond.true216 ], [ %cond352, %cond.end351 ], !dbg !8980
  br label %cond.end355, !dbg !8980

cond.end355:                                      ; preds = %cond.end353, %cond.true211
  %cond356 = phi i32 [ 23, %cond.true211 ], [ %cond354, %cond.end353 ], !dbg !8980
  br label %cond.end357, !dbg !8980

cond.end357:                                      ; preds = %cond.end355, %cond.true206
  %cond358 = phi i32 [ 24, %cond.true206 ], [ %cond356, %cond.end355 ], !dbg !8980
  br label %cond.end359, !dbg !8980

cond.end359:                                      ; preds = %cond.end357, %cond.true201
  %cond360 = phi i32 [ 25, %cond.true201 ], [ %cond358, %cond.end357 ], !dbg !8980
  br label %cond.end361, !dbg !8980

cond.end361:                                      ; preds = %cond.end359, %cond.true196
  %cond362 = phi i32 [ 26, %cond.true196 ], [ %cond360, %cond.end359 ], !dbg !8980
  br label %cond.end363, !dbg !8980

cond.end363:                                      ; preds = %cond.end361, %cond.true191
  %cond364 = phi i32 [ 27, %cond.true191 ], [ %cond362, %cond.end361 ], !dbg !8980
  br label %cond.end365, !dbg !8980

cond.end365:                                      ; preds = %cond.end363, %cond.true186
  %cond366 = phi i32 [ 28, %cond.true186 ], [ %cond364, %cond.end363 ], !dbg !8980
  br label %cond.end367, !dbg !8980

cond.end367:                                      ; preds = %cond.end365, %cond.true181
  %cond368 = phi i32 [ 29, %cond.true181 ], [ %cond366, %cond.end365 ], !dbg !8980
  br label %cond.end369, !dbg !8980

cond.end369:                                      ; preds = %cond.end367, %cond.true176
  %cond370 = phi i32 [ 30, %cond.true176 ], [ %cond368, %cond.end367 ], !dbg !8980
  br label %cond.end371, !dbg !8980

cond.end371:                                      ; preds = %cond.end369, %cond.true171
  %cond372 = phi i32 [ 31, %cond.true171 ], [ %cond370, %cond.end369 ], !dbg !8980
  br label %cond.end373, !dbg !8980

cond.end373:                                      ; preds = %cond.end371, %cond.true166
  %cond374 = phi i32 [ 32, %cond.true166 ], [ %cond372, %cond.end371 ], !dbg !8980
  br label %cond.end375, !dbg !8980

cond.end375:                                      ; preds = %cond.end373, %cond.true161
  %cond376 = phi i32 [ 33, %cond.true161 ], [ %cond374, %cond.end373 ], !dbg !8980
  br label %cond.end377, !dbg !8980

cond.end377:                                      ; preds = %cond.end375, %cond.true156
  %cond378 = phi i32 [ 34, %cond.true156 ], [ %cond376, %cond.end375 ], !dbg !8980
  br label %cond.end379, !dbg !8980

cond.end379:                                      ; preds = %cond.end377, %cond.true151
  %cond380 = phi i32 [ 35, %cond.true151 ], [ %cond378, %cond.end377 ], !dbg !8980
  br label %cond.end381, !dbg !8980

cond.end381:                                      ; preds = %cond.end379, %cond.true146
  %cond382 = phi i32 [ 36, %cond.true146 ], [ %cond380, %cond.end379 ], !dbg !8980
  br label %cond.end383, !dbg !8980

cond.end383:                                      ; preds = %cond.end381, %cond.true141
  %cond384 = phi i32 [ 37, %cond.true141 ], [ %cond382, %cond.end381 ], !dbg !8980
  br label %cond.end385, !dbg !8980

cond.end385:                                      ; preds = %cond.end383, %cond.true136
  %cond386 = phi i32 [ 38, %cond.true136 ], [ %cond384, %cond.end383 ], !dbg !8980
  br label %cond.end387, !dbg !8980

cond.end387:                                      ; preds = %cond.end385, %cond.true131
  %cond388 = phi i32 [ 39, %cond.true131 ], [ %cond386, %cond.end385 ], !dbg !8980
  br label %cond.end389, !dbg !8980

cond.end389:                                      ; preds = %cond.end387, %cond.true126
  %cond390 = phi i32 [ 40, %cond.true126 ], [ %cond388, %cond.end387 ], !dbg !8980
  br label %cond.end391, !dbg !8980

cond.end391:                                      ; preds = %cond.end389, %cond.true121
  %cond392 = phi i32 [ 41, %cond.true121 ], [ %cond390, %cond.end389 ], !dbg !8980
  br label %cond.end393, !dbg !8980

cond.end393:                                      ; preds = %cond.end391, %cond.true116
  %cond394 = phi i32 [ 42, %cond.true116 ], [ %cond392, %cond.end391 ], !dbg !8980
  br label %cond.end395, !dbg !8980

cond.end395:                                      ; preds = %cond.end393, %cond.true111
  %cond396 = phi i32 [ 43, %cond.true111 ], [ %cond394, %cond.end393 ], !dbg !8980
  br label %cond.end397, !dbg !8980

cond.end397:                                      ; preds = %cond.end395, %cond.true106
  %cond398 = phi i32 [ 44, %cond.true106 ], [ %cond396, %cond.end395 ], !dbg !8980
  br label %cond.end399, !dbg !8980

cond.end399:                                      ; preds = %cond.end397, %cond.true101
  %cond400 = phi i32 [ 45, %cond.true101 ], [ %cond398, %cond.end397 ], !dbg !8980
  br label %cond.end401, !dbg !8980

cond.end401:                                      ; preds = %cond.end399, %cond.true96
  %cond402 = phi i32 [ 46, %cond.true96 ], [ %cond400, %cond.end399 ], !dbg !8980
  br label %cond.end403, !dbg !8980

cond.end403:                                      ; preds = %cond.end401, %cond.true91
  %cond404 = phi i32 [ 47, %cond.true91 ], [ %cond402, %cond.end401 ], !dbg !8980
  br label %cond.end405, !dbg !8980

cond.end405:                                      ; preds = %cond.end403, %cond.true86
  %cond406 = phi i32 [ 48, %cond.true86 ], [ %cond404, %cond.end403 ], !dbg !8980
  br label %cond.end407, !dbg !8980

cond.end407:                                      ; preds = %cond.end405, %cond.true81
  %cond408 = phi i32 [ 49, %cond.true81 ], [ %cond406, %cond.end405 ], !dbg !8980
  br label %cond.end409, !dbg !8980

cond.end409:                                      ; preds = %cond.end407, %cond.true76
  %cond410 = phi i32 [ 50, %cond.true76 ], [ %cond408, %cond.end407 ], !dbg !8980
  br label %cond.end411, !dbg !8980

cond.end411:                                      ; preds = %cond.end409, %cond.true71
  %cond412 = phi i32 [ 51, %cond.true71 ], [ %cond410, %cond.end409 ], !dbg !8980
  br label %cond.end413, !dbg !8980

cond.end413:                                      ; preds = %cond.end411, %cond.true66
  %cond414 = phi i32 [ 52, %cond.true66 ], [ %cond412, %cond.end411 ], !dbg !8980
  br label %cond.end415, !dbg !8980

cond.end415:                                      ; preds = %cond.end413, %cond.true61
  %cond416 = phi i32 [ 53, %cond.true61 ], [ %cond414, %cond.end413 ], !dbg !8980
  br label %cond.end417, !dbg !8980

cond.end417:                                      ; preds = %cond.end415, %cond.true56
  %cond418 = phi i32 [ 54, %cond.true56 ], [ %cond416, %cond.end415 ], !dbg !8980
  br label %cond.end419, !dbg !8980

cond.end419:                                      ; preds = %cond.end417, %cond.true51
  %cond420 = phi i32 [ 55, %cond.true51 ], [ %cond418, %cond.end417 ], !dbg !8980
  br label %cond.end421, !dbg !8980

cond.end421:                                      ; preds = %cond.end419, %cond.true46
  %cond422 = phi i32 [ 56, %cond.true46 ], [ %cond420, %cond.end419 ], !dbg !8980
  br label %cond.end423, !dbg !8980

cond.end423:                                      ; preds = %cond.end421, %cond.true41
  %cond424 = phi i32 [ 57, %cond.true41 ], [ %cond422, %cond.end421 ], !dbg !8980
  br label %cond.end425, !dbg !8980

cond.end425:                                      ; preds = %cond.end423, %cond.true36
  %cond426 = phi i32 [ 58, %cond.true36 ], [ %cond424, %cond.end423 ], !dbg !8980
  br label %cond.end427, !dbg !8980

cond.end427:                                      ; preds = %cond.end425, %cond.true31
  %cond428 = phi i32 [ 59, %cond.true31 ], [ %cond426, %cond.end425 ], !dbg !8980
  br label %cond.end429, !dbg !8980

cond.end429:                                      ; preds = %cond.end427, %cond.true26
  %cond430 = phi i32 [ 60, %cond.true26 ], [ %cond428, %cond.end427 ], !dbg !8980
  br label %cond.end431, !dbg !8980

cond.end431:                                      ; preds = %cond.end429, %cond.true21
  %cond432 = phi i32 [ 61, %cond.true21 ], [ %cond430, %cond.end429 ], !dbg !8980
  br label %cond.end433, !dbg !8980

cond.end433:                                      ; preds = %cond.end431, %cond.true16
  %cond434 = phi i32 [ 62, %cond.true16 ], [ %cond432, %cond.end431 ], !dbg !8980
  br label %cond.end435, !dbg !8980

cond.end435:                                      ; preds = %cond.end433, %cond.true11
  %cond436 = phi i32 [ 63, %cond.true11 ], [ %cond434, %cond.end433 ], !dbg !8980
  br label %cond.end437, !dbg !8980

cond.end437:                                      ; preds = %cond.end435, %cond.true8
  %cond438 = phi i32 [ 0, %cond.true8 ], [ %cond436, %cond.end435 ], !dbg !8980
  br label %cond.end440, !dbg !8980

cond.false439:                                    ; preds = %cond.true
  br label %cond.end440, !dbg !8980

cond.end440:                                      ; preds = %cond.false439, %cond.end437
  %cond441 = phi i32 [ %cond438, %cond.end437 ], [ -1, %cond.false439 ], !dbg !8980
  br label %cond.end444, !dbg !8980

cond.false442:                                    ; preds = %if.end3
  %72 = load i64, i64* %size.addr, align 8, !dbg !8980
  %sub443 = sub i64 %72, 1, !dbg !8980
  %call = call i32 @__ilog2_u64(i64 %sub443) #14, !dbg !8980
  br label %cond.end444, !dbg !8980

cond.end444:                                      ; preds = %cond.false442, %cond.end440
  %cond445 = phi i32 [ %cond441, %cond.end440 ], [ %call, %cond.false442 ], !dbg !8980
  %sub446 = sub i32 %cond445, 12, !dbg !8981
  %add = add i32 %sub446, 1, !dbg !8982
  store i32 %add, i32* %retval, align 4, !dbg !8983
  br label %return, !dbg !8983

if.end447:                                        ; preds = %entry
  %73 = load i64, i64* %size.addr, align 8, !dbg !8984
  %dec = add i64 %73, -1, !dbg !8984
  store i64 %dec, i64* %size.addr, align 8, !dbg !8984
  %74 = load i64, i64* %size.addr, align 8, !dbg !8985
  %shr = lshr i64 %74, 12, !dbg !8985
  store i64 %shr, i64* %size.addr, align 8, !dbg !8985
  %75 = load i64, i64* %size.addr, align 8, !dbg !8986
  store i64 %75, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !8963
  %76 = load i32, i32* %bitpos.i, align 4, !dbg !8987
  %77 = load i64, i64* %x.addr.i, align 8, !dbg !8988
  %78 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %77, i32 %76) #15, !dbg !8987, !srcloc !8989
  store i32 %78, i32* %bitpos.i, align 4, !dbg !8987
  %79 = load i32, i32* %bitpos.i, align 4, !dbg !8990
  %add.i = add i32 %79, 1, !dbg !8991
  store i32 %add.i, i32* %retval, align 4, !dbg !8992
  br label %return, !dbg !8992

return:                                           ; preds = %if.end447, %cond.end444, %if.then2, %if.then1
  %80 = load i32, i32* %retval, align 4, !dbg !8993
  ret i32 %80, !dbg !8993
}

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @__ilog2_u64(i64 %n) #8 !dbg !8994 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !8955, metadata !DIExpression()), !dbg !8998
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !8962, metadata !DIExpression()), !dbg !9000
  %n.addr = alloca i64, align 8
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !9001, metadata !DIExpression()), !dbg !9002
  %0 = load i64, i64* %n.addr, align 8, !dbg !9003
  store i64 %0, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !9000
  %1 = load i32, i32* %bitpos.i, align 4, !dbg !9004
  %2 = load i64, i64* %x.addr.i, align 8, !dbg !9005
  %3 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %2, i32 %1) #15, !dbg !9004, !srcloc !8989
  store i32 %3, i32* %bitpos.i, align 4, !dbg !9004
  %4 = load i32, i32* %bitpos.i, align 4, !dbg !9006
  %add.i = add i32 %4, 1, !dbg !9007
  %sub = sub i32 %add.i, 1, !dbg !9008
  ret i32 %sub, !dbg !9009
}

; Function Attrs: noredzone
declare dso_local noalias i8* @kmalloc_order(i64, i32, i32) #3

; Function Attrs: noredzone
declare dso_local noalias i8* @kmem_cache_alloc(%struct.kmem_cache*, i32) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kasan_kmalloc(%struct.kmem_cache* %s, i8* %object, i64 %size, i32 %flags) #1 !dbg !9010 {
entry:
  %s.addr = alloca %struct.kmem_cache*, align 8
  %object.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store %struct.kmem_cache* %s, %struct.kmem_cache** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr, metadata !9014, metadata !DIExpression()), !dbg !9015
  store i8* %object, i8** %object.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %object.addr, metadata !9016, metadata !DIExpression()), !dbg !9017
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !9018, metadata !DIExpression()), !dbg !9019
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !9020, metadata !DIExpression()), !dbg !9021
  %0 = load i8*, i8** %object.addr, align 8, !dbg !9022
  ret i8* %0, !dbg !9023
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @fbcon_prepare_logo(%struct.vc_data* %vc, %struct.fb_info* %info, i32 %cols, i32 %rows, i32 %new_cols, i32 %new_rows) #1 !dbg !9024 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !8676, metadata !DIExpression()), !dbg !9025
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !8686, metadata !DIExpression()), !dbg !9030
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !8688, metadata !DIExpression()), !dbg !9031
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !8690, metadata !DIExpression()), !dbg !9032
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !8692, metadata !DIExpression()), !dbg !9033
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !8698, metadata !DIExpression()), !dbg !9035
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !8704, metadata !DIExpression()), !dbg !9037
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !8713, metadata !DIExpression()), !dbg !9040
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !8715, metadata !DIExpression()), !dbg !9041
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !8717, metadata !DIExpression()), !dbg !9042
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !8719, metadata !DIExpression()), !dbg !9043
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !8721, metadata !DIExpression()), !dbg !9044
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !8723, metadata !DIExpression()), !dbg !9045
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !8725, metadata !DIExpression()), !dbg !9046
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !8727, metadata !DIExpression()), !dbg !9047
  %vc.addr = alloca %struct.vc_data*, align 8
  %info.addr = alloca %struct.fb_info*, align 8
  %cols.addr = alloca i32, align 4
  %rows.addr = alloca i32, align 4
  %new_cols.addr = alloca i32, align 4
  %new_rows.addr = alloca i32, align 4
  %ops = alloca %struct.fbcon_ops*, align 8
  %cnt = alloca i32, align 4
  %erase = alloca i32, align 4
  %step = alloca i32, align 4
  %save = alloca i16*, align 8
  %r = alloca i16*, align 8
  %q = alloca i16*, align 8
  %logo_height = alloca i32, align 4
  %i = alloca i32, align 4
  %lines = alloca i32, align 4
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !9048, metadata !DIExpression()), !dbg !9049
  store %struct.fb_info* %info, %struct.fb_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fb_info** %info.addr, metadata !9050, metadata !DIExpression()), !dbg !9051
  store i32 %cols, i32* %cols.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cols.addr, metadata !9052, metadata !DIExpression()), !dbg !9053
  store i32 %rows, i32* %rows.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %rows.addr, metadata !9054, metadata !DIExpression()), !dbg !9055
  store i32 %new_cols, i32* %new_cols.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %new_cols.addr, metadata !9056, metadata !DIExpression()), !dbg !9057
  store i32 %new_rows, i32* %new_rows.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %new_rows.addr, metadata !9058, metadata !DIExpression()), !dbg !9059
  call void @llvm.dbg.declare(metadata %struct.fbcon_ops** %ops, metadata !9060, metadata !DIExpression()), !dbg !9061
  %0 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !9062
  %fbcon_par = getelementptr inbounds %struct.fb_info, %struct.fb_info* %0, i32 0, i32 29, !dbg !9063
  %1 = load i8*, i8** %fbcon_par, align 8, !dbg !9063
  %2 = bitcast i8* %1 to %struct.fbcon_ops*, !dbg !9062
  store %struct.fbcon_ops* %2, %struct.fbcon_ops** %ops, align 8, !dbg !9061
  call void @llvm.dbg.declare(metadata i32* %cnt, metadata !9064, metadata !DIExpression()), !dbg !9065
  call void @llvm.dbg.declare(metadata i32* %erase, metadata !9066, metadata !DIExpression()), !dbg !9067
  %3 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !9068
  %vc_video_erase_char = getelementptr inbounds %struct.vc_data, %struct.vc_data* %3, i32 0, i32 28, !dbg !9069
  %4 = load i16, i16* %vc_video_erase_char, align 8, !dbg !9069
  %conv = zext i16 %4 to i32, !dbg !9068
  store i32 %conv, i32* %erase, align 4, !dbg !9067
  call void @llvm.dbg.declare(metadata i32* %step, metadata !9070, metadata !DIExpression()), !dbg !9071
  call void @llvm.dbg.declare(metadata i16** %save, metadata !9072, metadata !DIExpression()), !dbg !9073
  store i16* null, i16** %save, align 8, !dbg !9073
  call void @llvm.dbg.declare(metadata i16** %r, metadata !9074, metadata !DIExpression()), !dbg !9075
  call void @llvm.dbg.declare(metadata i16** %q, metadata !9076, metadata !DIExpression()), !dbg !9077
  call void @llvm.dbg.declare(metadata i32* %logo_height, metadata !9078, metadata !DIExpression()), !dbg !9079
  %5 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !9080
  %fbops = getelementptr inbounds %struct.fb_info, %struct.fb_info* %5, i32 0, i32 20, !dbg !9082
  %6 = load %struct.fb_ops*, %struct.fb_ops** %fbops, align 8, !dbg !9082
  %owner = getelementptr inbounds %struct.fb_ops, %struct.fb_ops* %6, i32 0, i32 0, !dbg !9083
  %7 = load %struct.module*, %struct.module** %owner, align 8, !dbg !9083
  %tobool = icmp ne %struct.module* %7, null, !dbg !9080
  br i1 %tobool, label %if.then, label %if.end, !dbg !9084

if.then:                                          ; preds = %entry
  store i32 -3, i32* @logo_shown, align 4, !dbg !9085
  br label %if.end139, !dbg !9087

if.end:                                           ; preds = %entry
  %8 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !9088
  %var = getelementptr inbounds %struct.fb_info, %struct.fb_info* %8, i32 0, i32 6, !dbg !9090
  %9 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !9091
  %fix = getelementptr inbounds %struct.fb_info, %struct.fb_info* %9, i32 0, i32 7, !dbg !9092
  %call = call i32 @fb_get_color_depth(%struct.fb_var_screeninfo* %var, %struct.fb_fix_screeninfo* %fix) #10, !dbg !9093
  %cmp = icmp eq i32 %call, 1, !dbg !9094
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !9095

if.then2:                                         ; preds = %if.end
  %10 = load i32, i32* %erase, align 4, !dbg !9096
  %and = and i32 %10, -1025, !dbg !9096
  store i32 %and, i32* %erase, align 4, !dbg !9096
  br label %if.end3, !dbg !9097

if.end3:                                          ; preds = %if.then2, %if.end
  %11 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !9098
  %12 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !9099
  %rotate = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %12, i32 0, i32 20, !dbg !9100
  %13 = load i32, i32* %rotate, align 8, !dbg !9100
  %call4 = call i32 @fb_prepare_logo(%struct.fb_info* %11, i32 %13) #10, !dbg !9101
  store i32 %call4, i32* %logo_height, align 4, !dbg !9102
  %14 = load i32, i32* %logo_height, align 4, !dbg !9103
  %15 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !9103
  %vc_font = getelementptr inbounds %struct.vc_data, %struct.vc_data* %15, i32 0, i32 27, !dbg !9103
  %height = getelementptr inbounds %struct.console_font, %struct.console_font* %vc_font, i32 0, i32 1, !dbg !9103
  %16 = load i32, i32* %height, align 4, !dbg !9103
  %add = add i32 %14, %16, !dbg !9103
  %sub = sub i32 %add, 1, !dbg !9103
  %17 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !9103
  %vc_font5 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %17, i32 0, i32 27, !dbg !9103
  %height6 = getelementptr inbounds %struct.console_font, %struct.console_font* %vc_font5, i32 0, i32 1, !dbg !9103
  %18 = load i32, i32* %height6, align 4, !dbg !9103
  %div = udiv i32 %sub, %18, !dbg !9103
  store i32 %div, i32* @logo_lines, align 4, !dbg !9104
  %19 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !9105
  %vc_origin = getelementptr inbounds %struct.vc_data, %struct.vc_data* %19, i32 0, i32 8, !dbg !9106
  %20 = load i64, i64* %vc_origin, align 8, !dbg !9106
  %21 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !9107
  %vc_size_row = getelementptr inbounds %struct.vc_data, %struct.vc_data* %21, i32 0, i32 6, !dbg !9108
  %22 = load i32, i32* %vc_size_row, align 4, !dbg !9108
  %23 = load i32, i32* %rows.addr, align 4, !dbg !9109
  %mul = mul i32 %22, %23, !dbg !9110
  %conv7 = zext i32 %mul to i64, !dbg !9107
  %add8 = add i64 %20, %conv7, !dbg !9111
  %24 = inttoptr i64 %add8 to i16*, !dbg !9112
  store i16* %24, i16** %q, align 8, !dbg !9113
  %25 = load i32, i32* @logo_lines, align 4, !dbg !9114
  %26 = load i32, i32* %cols.addr, align 4, !dbg !9115
  %mul9 = mul i32 %25, %26, !dbg !9116
  store i32 %mul9, i32* %step, align 4, !dbg !9117
  %27 = load i16*, i16** %q, align 8, !dbg !9118
  %28 = load i32, i32* @logo_lines, align 4, !dbg !9120
  %29 = load i32, i32* %cols.addr, align 4, !dbg !9121
  %mul10 = mul i32 %28, %29, !dbg !9122
  %idx.ext = sext i32 %mul10 to i64, !dbg !9123
  %idx.neg = sub i64 0, %idx.ext, !dbg !9123
  %add.ptr = getelementptr i16, i16* %27, i64 %idx.neg, !dbg !9123
  store i16* %add.ptr, i16** %r, align 8, !dbg !9124
  br label %for.cond, !dbg !9125

for.cond:                                         ; preds = %for.inc, %if.end3
  %30 = load i16*, i16** %r, align 8, !dbg !9126
  %31 = load i16*, i16** %q, align 8, !dbg !9128
  %cmp11 = icmp ult i16* %30, %31, !dbg !9129
  br i1 %cmp11, label %for.body, label %for.end, !dbg !9130

for.body:                                         ; preds = %for.cond
  %32 = load i16*, i16** %r, align 8, !dbg !9131
  %33 = load i16, i16* %32, align 2, !dbg !9131
  %conv13 = zext i16 %33 to i32, !dbg !9131
  %34 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !9133
  %vc_video_erase_char14 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %34, i32 0, i32 28, !dbg !9134
  %35 = load i16, i16* %vc_video_erase_char14, align 8, !dbg !9134
  %conv15 = zext i16 %35 to i32, !dbg !9133
  %cmp16 = icmp ne i32 %conv13, %conv15, !dbg !9135
  br i1 %cmp16, label %if.then18, label %if.end19, !dbg !9136

if.then18:                                        ; preds = %for.body
  br label %for.end, !dbg !9137

if.end19:                                         ; preds = %for.body
  br label %for.inc, !dbg !9134

for.inc:                                          ; preds = %if.end19
  %36 = load i16*, i16** %r, align 8, !dbg !9138
  %incdec.ptr = getelementptr i16, i16* %36, i32 1, !dbg !9138
  store i16* %incdec.ptr, i16** %r, align 8, !dbg !9138
  br label %for.cond, !dbg !9139, !llvm.loop !9140

for.end:                                          ; preds = %if.then18, %for.cond
  %37 = load i16*, i16** %r, align 8, !dbg !9142
  %38 = load i16*, i16** %q, align 8, !dbg !9143
  %cmp20 = icmp ne i16* %37, %38, !dbg !9144
  br i1 %cmp20, label %land.lhs.true, label %if.end55, !dbg !9145

land.lhs.true:                                    ; preds = %for.end
  %39 = load i32, i32* %new_rows.addr, align 4, !dbg !9146
  %40 = load i32, i32* %rows.addr, align 4, !dbg !9147
  %41 = load i32, i32* @logo_lines, align 4, !dbg !9148
  %add22 = add i32 %40, %41, !dbg !9149
  %cmp23 = icmp sge i32 %39, %add22, !dbg !9150
  br i1 %cmp23, label %if.then25, label %if.end55, !dbg !9151

if.then25:                                        ; preds = %land.lhs.true
  %42 = load i32, i32* @logo_lines, align 4, !dbg !9152
  %conv26 = sext i32 %42 to i64, !dbg !9152
  %43 = load i32, i32* %new_cols.addr, align 4, !dbg !9153
  %conv27 = sext i32 %43 to i64, !dbg !9153
  %call28 = call i64 @array3_size(i64 %conv26, i64 %conv27, i64 2) #10, !dbg !9154
  store i64 %call28, i64* %size.addr.i, align 8
  store i32 3264, i32* %flags.addr.i, align 4
  %44 = load i64, i64* %size.addr.i, align 8, !dbg !9155
  %45 = call i1 @llvm.is.constant.i64(i64 %44) #12, !dbg !9156
  br i1 %45, label %if.then.i, label %if.end9.i, !dbg !9157

if.then.i:                                        ; preds = %if.then25
  %46 = load i64, i64* %size.addr.i, align 8, !dbg !9158
  %cmp.i = icmp ugt i64 %46, 8192, !dbg !9159
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !9160

if.then1.i:                                       ; preds = %if.then.i
  %47 = load i64, i64* %size.addr.i, align 8, !dbg !9161
  %48 = load i32, i32* %flags.addr.i, align 4, !dbg !9162
  store i64 %47, i64* %size.addr.i.i, align 8
  store i32 %48, i32* %flags.addr.i.i, align 4
  %49 = load i64, i64* %size.addr.i.i, align 8, !dbg !9163
  %call.i.i = call i32 @get_order(i64 %49) #14, !dbg !9164
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !9044
  %50 = load i64, i64* %size.addr.i.i, align 8, !dbg !9165
  %51 = load i32, i32* %flags.addr.i.i, align 4, !dbg !9166
  %52 = load i32, i32* %order.i.i, align 4, !dbg !9167
  store i64 %50, i64* %size.addr.i.i.i, align 8
  store i32 %51, i32* %flags.addr.i.i.i, align 4
  store i32 %52, i32* %order.addr.i.i.i, align 4
  %53 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !9168
  %54 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !9169
  %55 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !9170
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %53, i32 %54, i32 %55) #13, !dbg !9171
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !9171
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !9171
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !9171
  call void @llvm.assume(i1 %maskcond.i.i.i) #12, !dbg !9171
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !9172
  br label %kmalloc.exit, !dbg !9172

if.end.i:                                         ; preds = %if.then.i
  %56 = load i64, i64* %size.addr.i, align 8, !dbg !9173
  store i64 %56, i64* %size.addr.i11.i, align 8
  %57 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9174
  %tobool.i.i = icmp ne i64 %57, 0, !dbg !9174
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !9175

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !9176
  br label %kmalloc_index.exit.i, !dbg !9176

if.end.i.i:                                       ; preds = %if.end.i
  %58 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9177
  %cmp.i.i = icmp ule i64 %58, 8, !dbg !9178
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !9179

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !9180
  br label %kmalloc_index.exit.i, !dbg !9180

if.end2.i.i:                                      ; preds = %if.end.i.i
  %59 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9181
  %cmp3.i.i = icmp ugt i64 %59, 64, !dbg !9182
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !9183

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %60 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9184
  %cmp4.i.i = icmp ule i64 %60, 96, !dbg !9185
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !9186

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !9187
  br label %kmalloc_index.exit.i, !dbg !9187

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %61 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9188
  %cmp7.i.i = icmp ugt i64 %61, 128, !dbg !9189
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !9190

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %62 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9191
  %cmp9.i.i = icmp ule i64 %62, 192, !dbg !9192
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !9193

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !9194
  br label %kmalloc_index.exit.i, !dbg !9194

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %63 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9195
  %cmp12.i.i = icmp ule i64 %63, 8, !dbg !9196
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !9197

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !9198
  br label %kmalloc_index.exit.i, !dbg !9198

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %64 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9199
  %cmp15.i.i = icmp ule i64 %64, 16, !dbg !9200
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !9201

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !9202
  br label %kmalloc_index.exit.i, !dbg !9202

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %65 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9203
  %cmp18.i.i = icmp ule i64 %65, 32, !dbg !9204
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !9205

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !9206
  br label %kmalloc_index.exit.i, !dbg !9206

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %66 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9207
  %cmp21.i.i = icmp ule i64 %66, 64, !dbg !9208
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !9209

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !9210
  br label %kmalloc_index.exit.i, !dbg !9210

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %67 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9211
  %cmp24.i.i = icmp ule i64 %67, 128, !dbg !9212
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !9213

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !9214
  br label %kmalloc_index.exit.i, !dbg !9214

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %68 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9215
  %cmp27.i.i = icmp ule i64 %68, 256, !dbg !9216
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !9217

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !9218
  br label %kmalloc_index.exit.i, !dbg !9218

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %69 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9219
  %cmp30.i.i = icmp ule i64 %69, 512, !dbg !9220
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !9221

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !9222
  br label %kmalloc_index.exit.i, !dbg !9222

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %70 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9223
  %cmp33.i.i = icmp ule i64 %70, 1024, !dbg !9224
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !9225

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !9226
  br label %kmalloc_index.exit.i, !dbg !9226

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %71 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9227
  %cmp36.i.i = icmp ule i64 %71, 2048, !dbg !9228
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !9229

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !9230
  br label %kmalloc_index.exit.i, !dbg !9230

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %72 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9231
  %cmp39.i.i = icmp ule i64 %72, 4096, !dbg !9232
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !9233

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !9234
  br label %kmalloc_index.exit.i, !dbg !9234

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %73 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9235
  %cmp42.i.i = icmp ule i64 %73, 8192, !dbg !9236
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !9237

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !9238
  br label %kmalloc_index.exit.i, !dbg !9238

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %74 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9239
  %cmp45.i.i = icmp ule i64 %74, 16384, !dbg !9240
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !9241

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !9242
  br label %kmalloc_index.exit.i, !dbg !9242

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %75 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9243
  %cmp48.i.i = icmp ule i64 %75, 32768, !dbg !9244
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !9245

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !9246
  br label %kmalloc_index.exit.i, !dbg !9246

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %76 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9247
  %cmp51.i.i = icmp ule i64 %76, 65536, !dbg !9248
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !9249

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !9250
  br label %kmalloc_index.exit.i, !dbg !9250

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %77 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9251
  %cmp54.i.i = icmp ule i64 %77, 131072, !dbg !9252
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !9253

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !9254
  br label %kmalloc_index.exit.i, !dbg !9254

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %78 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9255
  %cmp57.i.i = icmp ule i64 %78, 262144, !dbg !9256
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !9257

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !9258
  br label %kmalloc_index.exit.i, !dbg !9258

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %79 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9259
  %cmp60.i.i = icmp ule i64 %79, 524288, !dbg !9260
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !9261

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !9262
  br label %kmalloc_index.exit.i, !dbg !9262

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %80 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9263
  %cmp63.i.i = icmp ule i64 %80, 1048576, !dbg !9264
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !9265

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !9266
  br label %kmalloc_index.exit.i, !dbg !9266

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %81 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9267
  %cmp66.i.i = icmp ule i64 %81, 2097152, !dbg !9268
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !9269

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !9270
  br label %kmalloc_index.exit.i, !dbg !9270

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %82 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9271
  %cmp69.i.i = icmp ule i64 %82, 4194304, !dbg !9272
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !9273

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !9274
  br label %kmalloc_index.exit.i, !dbg !9274

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %83 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9275
  %cmp72.i.i = icmp ule i64 %83, 8388608, !dbg !9276
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !9277

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !9278
  br label %kmalloc_index.exit.i, !dbg !9278

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %84 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9279
  %cmp75.i.i = icmp ule i64 %84, 16777216, !dbg !9280
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !9281

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !9282
  br label %kmalloc_index.exit.i, !dbg !9282

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %85 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9283
  %cmp78.i.i = icmp ule i64 %85, 33554432, !dbg !9284
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !9285

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !9286
  br label %kmalloc_index.exit.i, !dbg !9286

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %86 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9287
  %cmp81.i.i = icmp ule i64 %86, 67108864, !dbg !9288
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !9289

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !9290
  br label %kmalloc_index.exit.i, !dbg !9290

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.16, i64 0, i64 0), i32 382, i32 0, i64 12) #12, !dbg !9291, !srcloc !8903
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 201) #12, !dbg !9292, !srcloc !8907
  unreachable, !dbg !9293

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %87 = load i32, i32* %retval.i.i, align 4, !dbg !9294
  store i32 %87, i32* %index.i, align 4, !dbg !9295
  %88 = load i32, i32* %index.i, align 4, !dbg !9296
  %tobool.i = icmp ne i32 %88, 0, !dbg !9296
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !9297

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !9298
  br label %kmalloc.exit, !dbg !9298

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %89 = load i32, i32* %flags.addr.i, align 4, !dbg !9299
  store i32 %89, i32* %flags.addr.i13.i, align 4
  %90 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !9300
  %and.i.i = and i32 %90, 17, !dbg !9300
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !9300
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !9300
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !9300
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !9300
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !9301

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !9302
  br label %kmalloc_type.exit.i, !dbg !9302

if.end.i16.i:                                     ; preds = %if.end4.i
  %91 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !9303
  %and2.i.i = and i32 %91, 1, !dbg !9304
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !9303
  %92 = zext i1 %tobool3.i.i to i64, !dbg !9303
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !9303
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !9305
  br label %kmalloc_type.exit.i, !dbg !9305

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %93 = load i32, i32* %retval.i12.i, align 4, !dbg !9306
  %idxprom.i = zext i32 %93 to i64, !dbg !9307
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !9307
  %94 = load i32, i32* %index.i, align 4, !dbg !9308
  %idxprom6.i = zext i32 %94 to i64, !dbg !9307
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !9307
  %95 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !9307
  %96 = load i32, i32* %flags.addr.i, align 4, !dbg !9309
  %97 = load i64, i64* %size.addr.i, align 8, !dbg !9310
  store %struct.kmem_cache* %95, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %96, i32* %flags.addr.i17.i, align 4
  store i64 %97, i64* %size.addr.i18.i, align 8
  %98 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !9311
  %99 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !9312
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %98, i32 %99) #13, !dbg !9313
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !9313
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !9313
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !9313
  call void @llvm.assume(i1 %maskcond.i.i) #12, !dbg !9313
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !9032
  %100 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !9314
  %101 = load i8*, i8** %ret.i.i, align 8, !dbg !9315
  %102 = load i64, i64* %size.addr.i18.i, align 8, !dbg !9316
  %103 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !9317
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %100, i8* %101, i64 %102, i32 %103) #13, !dbg !9318
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !9319
  %104 = load i8*, i8** %ret.i.i, align 8, !dbg !9320
  store i8* %104, i8** %retval.i, align 8, !dbg !9321
  br label %kmalloc.exit, !dbg !9321

if.end9.i:                                        ; preds = %if.then25
  %105 = load i64, i64* %size.addr.i, align 8, !dbg !9322
  %106 = load i32, i32* %flags.addr.i, align 4, !dbg !9323
  %call10.i = call noalias i8* @__kmalloc(i64 %105, i32 %106) #13, !dbg !9324
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !9324
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !9324
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !9324
  call void @llvm.assume(i1 %maskcond.i) #12, !dbg !9324
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !9325
  br label %kmalloc.exit, !dbg !9325

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %107 = load i8*, i8** %retval.i, align 8, !dbg !9326
  %108 = bitcast i8* %107 to i16*, !dbg !9327
  store i16* %108, i16** %save, align 8, !dbg !9328
  %109 = load i16*, i16** %save, align 8, !dbg !9329
  %tobool30 = icmp ne i16* %109, null, !dbg !9329
  br i1 %tobool30, label %if.then31, label %if.end54, !dbg !9331

if.then31:                                        ; preds = %kmalloc.exit
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9332, metadata !DIExpression()), !dbg !9334
  %110 = load i32, i32* %cols.addr, align 4, !dbg !9335
  %111 = load i32, i32* %new_cols.addr, align 4, !dbg !9336
  %cmp32 = icmp slt i32 %110, %111, !dbg !9337
  br i1 %cmp32, label %cond.true, label %cond.false, !dbg !9335

cond.true:                                        ; preds = %if.then31
  %112 = load i32, i32* %cols.addr, align 4, !dbg !9338
  br label %cond.end, !dbg !9335

cond.false:                                       ; preds = %if.then31
  %113 = load i32, i32* %new_cols.addr, align 4, !dbg !9339
  br label %cond.end, !dbg !9335

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %112, %cond.true ], [ %113, %cond.false ], !dbg !9335
  store i32 %cond, i32* %i, align 4, !dbg !9334
  %114 = load i16*, i16** %save, align 8, !dbg !9340
  %115 = load i32, i32* %erase, align 4, !dbg !9341
  %conv34 = trunc i32 %115 to i16, !dbg !9341
  %116 = load i32, i32* @logo_lines, align 4, !dbg !9342
  %conv35 = sext i32 %116 to i64, !dbg !9342
  %117 = load i32, i32* %new_cols.addr, align 4, !dbg !9343
  %conv36 = sext i32 %117 to i64, !dbg !9343
  %call37 = call i64 @array3_size(i64 %conv35, i64 %conv36, i64 2) #10, !dbg !9344
  %conv38 = trunc i64 %call37 to i32, !dbg !9344
  call void @scr_memsetw(i16* %114, i16 zeroext %conv34, i32 %conv38) #10, !dbg !9345
  %118 = load i16*, i16** %q, align 8, !dbg !9346
  %119 = load i32, i32* %step, align 4, !dbg !9347
  %idx.ext39 = sext i32 %119 to i64, !dbg !9348
  %idx.neg40 = sub i64 0, %idx.ext39, !dbg !9348
  %add.ptr41 = getelementptr i16, i16* %118, i64 %idx.neg40, !dbg !9348
  store i16* %add.ptr41, i16** %r, align 8, !dbg !9349
  store i32 0, i32* %cnt, align 4, !dbg !9350
  br label %for.cond42, !dbg !9352

for.cond42:                                       ; preds = %for.inc50, %cond.end
  %120 = load i32, i32* %cnt, align 4, !dbg !9353
  %121 = load i32, i32* @logo_lines, align 4, !dbg !9355
  %cmp43 = icmp slt i32 %120, %121, !dbg !9356
  br i1 %cmp43, label %for.body45, label %for.end53, !dbg !9357

for.body45:                                       ; preds = %for.cond42
  %122 = load i16*, i16** %save, align 8, !dbg !9358
  %123 = load i32, i32* %cnt, align 4, !dbg !9359
  %124 = load i32, i32* %new_cols.addr, align 4, !dbg !9360
  %mul46 = mul i32 %123, %124, !dbg !9361
  %idx.ext47 = sext i32 %mul46 to i64, !dbg !9362
  %add.ptr48 = getelementptr i16, i16* %122, i64 %idx.ext47, !dbg !9362
  %125 = load i16*, i16** %r, align 8, !dbg !9363
  %126 = load i32, i32* %i, align 4, !dbg !9364
  %mul49 = mul i32 2, %126, !dbg !9365
  call void @scr_memcpyw(i16* %add.ptr48, i16* %125, i32 %mul49) #10, !dbg !9366
  br label %for.inc50, !dbg !9366

for.inc50:                                        ; preds = %for.body45
  %127 = load i32, i32* %cnt, align 4, !dbg !9367
  %inc = add i32 %127, 1, !dbg !9367
  store i32 %inc, i32* %cnt, align 4, !dbg !9367
  %128 = load i32, i32* %i, align 4, !dbg !9368
  %129 = load i16*, i16** %r, align 8, !dbg !9369
  %idx.ext51 = sext i32 %128 to i64, !dbg !9369
  %add.ptr52 = getelementptr i16, i16* %129, i64 %idx.ext51, !dbg !9369
  store i16* %add.ptr52, i16** %r, align 8, !dbg !9369
  br label %for.cond42, !dbg !9370, !llvm.loop !9371

for.end53:                                        ; preds = %for.cond42
  %130 = load i16*, i16** %q, align 8, !dbg !9373
  store i16* %130, i16** %r, align 8, !dbg !9374
  br label %if.end54, !dbg !9375

if.end54:                                         ; preds = %for.end53, %kmalloc.exit
  br label %if.end55, !dbg !9376

if.end55:                                         ; preds = %if.end54, %land.lhs.true, %for.end
  %131 = load i16*, i16** %r, align 8, !dbg !9377
  %132 = load i16*, i16** %q, align 8, !dbg !9379
  %cmp56 = icmp eq i16* %131, %132, !dbg !9380
  br i1 %cmp56, label %if.then58, label %if.end97, !dbg !9381

if.then58:                                        ; preds = %if.end55
  %133 = load i16*, i16** %q, align 8, !dbg !9382
  %134 = load i32, i32* %step, align 4, !dbg !9384
  %idx.ext59 = sext i32 %134 to i64, !dbg !9385
  %idx.neg60 = sub i64 0, %idx.ext59, !dbg !9385
  %add.ptr61 = getelementptr i16, i16* %133, i64 %idx.neg60, !dbg !9385
  %135 = load i32, i32* %cols.addr, align 4, !dbg !9386
  %idx.ext62 = sext i32 %135 to i64, !dbg !9387
  %idx.neg63 = sub i64 0, %idx.ext62, !dbg !9387
  %add.ptr64 = getelementptr i16, i16* %add.ptr61, i64 %idx.neg63, !dbg !9387
  store i16* %add.ptr64, i16** %r, align 8, !dbg !9388
  %136 = load i32, i32* %rows.addr, align 4, !dbg !9389
  %137 = load i32, i32* @logo_lines, align 4, !dbg !9391
  %sub65 = sub i32 %136, %137, !dbg !9392
  store i32 %sub65, i32* %cnt, align 4, !dbg !9393
  br label %for.cond66, !dbg !9394

for.cond66:                                       ; preds = %for.inc76, %if.then58
  %138 = load i32, i32* %cnt, align 4, !dbg !9395
  %cmp67 = icmp sgt i32 %138, 0, !dbg !9397
  br i1 %cmp67, label %for.body69, label %for.end77, !dbg !9398

for.body69:                                       ; preds = %for.cond66
  %139 = load i16*, i16** %r, align 8, !dbg !9399
  %140 = load i32, i32* %step, align 4, !dbg !9401
  %idx.ext70 = sext i32 %140 to i64, !dbg !9402
  %add.ptr71 = getelementptr i16, i16* %139, i64 %idx.ext70, !dbg !9402
  %141 = load i16*, i16** %r, align 8, !dbg !9403
  %142 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !9404
  %vc_size_row72 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %142, i32 0, i32 6, !dbg !9405
  %143 = load i32, i32* %vc_size_row72, align 4, !dbg !9405
  call void @scr_memcpyw(i16* %add.ptr71, i16* %141, i32 %143) #10, !dbg !9406
  %144 = load i32, i32* %cols.addr, align 4, !dbg !9407
  %145 = load i16*, i16** %r, align 8, !dbg !9408
  %idx.ext73 = sext i32 %144 to i64, !dbg !9408
  %idx.neg74 = sub i64 0, %idx.ext73, !dbg !9408
  %add.ptr75 = getelementptr i16, i16* %145, i64 %idx.neg74, !dbg !9408
  store i16* %add.ptr75, i16** %r, align 8, !dbg !9408
  br label %for.inc76, !dbg !9409

for.inc76:                                        ; preds = %for.body69
  %146 = load i32, i32* %cnt, align 4, !dbg !9410
  %dec = add i32 %146, -1, !dbg !9410
  store i32 %dec, i32* %cnt, align 4, !dbg !9410
  br label %for.cond66, !dbg !9411, !llvm.loop !9412

for.end77:                                        ; preds = %for.cond66
  %147 = load i16*, i16** %save, align 8, !dbg !9414
  %tobool78 = icmp ne i16* %147, null, !dbg !9414
  br i1 %tobool78, label %if.end96, label %if.then79, !dbg !9416

if.then79:                                        ; preds = %for.end77
  call void @llvm.dbg.declare(metadata i32* %lines, metadata !9417, metadata !DIExpression()), !dbg !9419
  %148 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !9420
  %state = getelementptr inbounds %struct.vc_data, %struct.vc_data* %148, i32 0, i32 1, !dbg !9422
  %y = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state, i32 0, i32 1, !dbg !9423
  %149 = load i32, i32* %y, align 4, !dbg !9423
  %150 = load i32, i32* @logo_lines, align 4, !dbg !9424
  %add80 = add i32 %149, %150, !dbg !9425
  %151 = load i32, i32* %rows.addr, align 4, !dbg !9426
  %cmp81 = icmp uge i32 %add80, %151, !dbg !9427
  br i1 %cmp81, label %if.then83, label %if.else, !dbg !9428

if.then83:                                        ; preds = %if.then79
  %152 = load i32, i32* %rows.addr, align 4, !dbg !9429
  %153 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !9430
  %state84 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %153, i32 0, i32 1, !dbg !9431
  %y85 = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state84, i32 0, i32 1, !dbg !9432
  %154 = load i32, i32* %y85, align 4, !dbg !9432
  %sub86 = sub i32 %152, %154, !dbg !9433
  %sub87 = sub i32 %sub86, 1, !dbg !9434
  store i32 %sub87, i32* %lines, align 4, !dbg !9435
  br label %if.end88, !dbg !9436

if.else:                                          ; preds = %if.then79
  %155 = load i32, i32* @logo_lines, align 4, !dbg !9437
  store i32 %155, i32* %lines, align 4, !dbg !9438
  br label %if.end88

if.end88:                                         ; preds = %if.else, %if.then83
  %156 = load i32, i32* %lines, align 4, !dbg !9439
  %157 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !9440
  %state89 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %157, i32 0, i32 1, !dbg !9441
  %y90 = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state89, i32 0, i32 1, !dbg !9442
  %158 = load i32, i32* %y90, align 4, !dbg !9443
  %add91 = add i32 %158, %156, !dbg !9443
  store i32 %add91, i32* %y90, align 4, !dbg !9443
  %159 = load i32, i32* %lines, align 4, !dbg !9444
  %160 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !9445
  %vc_size_row92 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %160, i32 0, i32 6, !dbg !9446
  %161 = load i32, i32* %vc_size_row92, align 4, !dbg !9446
  %mul93 = mul i32 %159, %161, !dbg !9447
  %conv94 = zext i32 %mul93 to i64, !dbg !9444
  %162 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !9448
  %vc_pos = getelementptr inbounds %struct.vc_data, %struct.vc_data* %162, i32 0, i32 25, !dbg !9449
  %163 = load i64, i64* %vc_pos, align 8, !dbg !9450
  %add95 = add i64 %163, %conv94, !dbg !9450
  store i64 %add95, i64* %vc_pos, align 8, !dbg !9450
  br label %if.end96, !dbg !9451

if.end96:                                         ; preds = %if.end88, %for.end77
  br label %if.end97, !dbg !9452

if.end97:                                         ; preds = %if.end96, %if.end55
  %164 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !9453
  %vc_origin98 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %164, i32 0, i32 8, !dbg !9454
  %165 = load i64, i64* %vc_origin98, align 8, !dbg !9454
  %166 = inttoptr i64 %165 to i16*, !dbg !9455
  %167 = load i32, i32* %erase, align 4, !dbg !9456
  %conv99 = trunc i32 %167 to i16, !dbg !9456
  %168 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !9457
  %vc_size_row100 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %168, i32 0, i32 6, !dbg !9458
  %169 = load i32, i32* %vc_size_row100, align 4, !dbg !9458
  %170 = load i32, i32* @logo_lines, align 4, !dbg !9459
  %mul101 = mul i32 %169, %170, !dbg !9460
  call void @scr_memsetw(i16* %166, i16 zeroext %conv99, i32 %mul101) #10, !dbg !9461
  %171 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !9462
  %call102 = call zeroext i1 @con_is_visible(%struct.vc_data* %171) #10, !dbg !9464
  br i1 %call102, label %land.lhs.true104, label %if.end109, !dbg !9465

land.lhs.true104:                                 ; preds = %if.end97
  %172 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !9466
  %vc_mode = getelementptr inbounds %struct.vc_data, %struct.vc_data* %172, i32 0, i32 16, !dbg !9467
  %173 = load i8, i8* %vc_mode, align 4, !dbg !9467
  %conv105 = zext i8 %173 to i32, !dbg !9466
  %cmp106 = icmp eq i32 %conv105, 0, !dbg !9468
  br i1 %cmp106, label %if.then108, label %if.end109, !dbg !9469

if.then108:                                       ; preds = %land.lhs.true104
  %174 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !9470
  call void @fbcon_clear_margins(%struct.vc_data* %174, i32 0) #10, !dbg !9472
  %175 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !9473
  call void @redraw_screen(%struct.vc_data* %175, i32 0) #10, !dbg !9473
  br label %if.end109, !dbg !9474

if.end109:                                        ; preds = %if.then108, %land.lhs.true104, %if.end97
  %176 = load i16*, i16** %save, align 8, !dbg !9475
  %tobool110 = icmp ne i16* %176, null, !dbg !9475
  br i1 %tobool110, label %if.then111, label %if.end129, !dbg !9477

if.then111:                                       ; preds = %if.end109
  %177 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !9478
  %vc_origin112 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %177, i32 0, i32 8, !dbg !9480
  %178 = load i64, i64* %vc_origin112, align 8, !dbg !9480
  %179 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !9481
  %vc_size_row113 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %179, i32 0, i32 6, !dbg !9482
  %180 = load i32, i32* %vc_size_row113, align 4, !dbg !9482
  %181 = load i32, i32* %rows.addr, align 4, !dbg !9483
  %mul114 = mul i32 %180, %181, !dbg !9484
  %conv115 = zext i32 %mul114 to i64, !dbg !9481
  %add116 = add i64 %178, %conv115, !dbg !9485
  %182 = inttoptr i64 %add116 to i16*, !dbg !9486
  store i16* %182, i16** %q, align 8, !dbg !9487
  %183 = load i16*, i16** %q, align 8, !dbg !9488
  %184 = load i16*, i16** %save, align 8, !dbg !9489
  %185 = load i32, i32* @logo_lines, align 4, !dbg !9490
  %conv117 = sext i32 %185 to i64, !dbg !9490
  %186 = load i32, i32* %new_cols.addr, align 4, !dbg !9491
  %conv118 = sext i32 %186 to i64, !dbg !9491
  %call119 = call i64 @array3_size(i64 %conv117, i64 %conv118, i64 2) #10, !dbg !9492
  %conv120 = trunc i64 %call119 to i32, !dbg !9492
  call void @scr_memcpyw(i16* %183, i16* %184, i32 %conv120) #10, !dbg !9493
  %187 = load i32, i32* @logo_lines, align 4, !dbg !9494
  %188 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !9495
  %state121 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %188, i32 0, i32 1, !dbg !9496
  %y122 = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state121, i32 0, i32 1, !dbg !9497
  %189 = load i32, i32* %y122, align 4, !dbg !9498
  %add123 = add i32 %189, %187, !dbg !9498
  store i32 %add123, i32* %y122, align 4, !dbg !9498
  %190 = load i32, i32* @logo_lines, align 4, !dbg !9499
  %191 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !9500
  %vc_size_row124 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %191, i32 0, i32 6, !dbg !9501
  %192 = load i32, i32* %vc_size_row124, align 4, !dbg !9501
  %mul125 = mul i32 %190, %192, !dbg !9502
  %conv126 = zext i32 %mul125 to i64, !dbg !9499
  %193 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !9503
  %vc_pos127 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %193, i32 0, i32 25, !dbg !9504
  %194 = load i64, i64* %vc_pos127, align 8, !dbg !9505
  %add128 = add i64 %194, %conv126, !dbg !9505
  store i64 %add128, i64* %vc_pos127, align 8, !dbg !9505
  %195 = load i16*, i16** %save, align 8, !dbg !9506
  %196 = bitcast i16* %195 to i8*, !dbg !9506
  call void @kfree(i8* %196) #10, !dbg !9507
  br label %if.end129, !dbg !9508

if.end129:                                        ; preds = %if.then111, %if.end109
  %197 = load i32, i32* @logo_shown, align 4, !dbg !9509
  %cmp130 = icmp eq i32 %197, -3, !dbg !9511
  br i1 %cmp130, label %if.then132, label %if.end133, !dbg !9512

if.then132:                                       ; preds = %if.end129
  br label %if.end139, !dbg !9513

if.end133:                                        ; preds = %if.end129
  %198 = load i32, i32* @logo_lines, align 4, !dbg !9514
  %199 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !9516
  %vc_bottom = getelementptr inbounds %struct.vc_data, %struct.vc_data* %199, i32 0, i32 12, !dbg !9517
  %200 = load i32, i32* %vc_bottom, align 4, !dbg !9517
  %cmp134 = icmp ugt i32 %198, %200, !dbg !9518
  br i1 %cmp134, label %if.then136, label %if.else138, !dbg !9519

if.then136:                                       ; preds = %if.end133
  store i32 -1, i32* @logo_shown, align 4, !dbg !9520
  %call137 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.18, i64 0, i64 0)) #11, !dbg !9522
  br label %if.end139, !dbg !9523

if.else138:                                       ; preds = %if.end133
  store i32 -2, i32* @logo_shown, align 4, !dbg !9524
  %201 = load i32, i32* @logo_lines, align 4, !dbg !9526
  %202 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !9527
  %vc_top = getelementptr inbounds %struct.vc_data, %struct.vc_data* %202, i32 0, i32 11, !dbg !9528
  store i32 %201, i32* %vc_top, align 8, !dbg !9529
  br label %if.end139

if.end139:                                        ; preds = %if.then, %if.then132, %if.else138, %if.then136
  ret void, !dbg !9530
}

; Function Attrs: noredzone
declare dso_local i32 @fb_prepare_logo(%struct.fb_info*, i32) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @array3_size(i64 %a, i64 %b, i64 %c) #1 !dbg !9531 {
entry:
  %retval = alloca i64, align 8
  %a.addr = alloca i64, align 8
  %b.addr = alloca i64, align 8
  %c.addr = alloca i64, align 8
  %bytes = alloca i64, align 8
  %__a = alloca i64, align 8
  %__b = alloca i64, align 8
  %__d = alloca i64*, align 8
  %tmp = alloca i8, align 1
  %__a3 = alloca i64, align 8
  %__b4 = alloca i64, align 8
  %__d5 = alloca i64*, align 8
  %tmp10 = alloca i8, align 1
  store i64 %a, i64* %a.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %a.addr, metadata !9535, metadata !DIExpression()), !dbg !9536
  store i64 %b, i64* %b.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %b.addr, metadata !9537, metadata !DIExpression()), !dbg !9538
  store i64 %c, i64* %c.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %c.addr, metadata !9539, metadata !DIExpression()), !dbg !9540
  call void @llvm.dbg.declare(metadata i64* %bytes, metadata !9541, metadata !DIExpression()), !dbg !9542
  call void @llvm.dbg.declare(metadata i64* %__a, metadata !9543, metadata !DIExpression()), !dbg !9546
  %0 = load i64, i64* %a.addr, align 8, !dbg !9546
  store i64 %0, i64* %__a, align 8, !dbg !9546
  call void @llvm.dbg.declare(metadata i64* %__b, metadata !9547, metadata !DIExpression()), !dbg !9546
  %1 = load i64, i64* %b.addr, align 8, !dbg !9546
  store i64 %1, i64* %__b, align 8, !dbg !9546
  call void @llvm.dbg.declare(metadata i64** %__d, metadata !9548, metadata !DIExpression()), !dbg !9546
  store i64* %bytes, i64** %__d, align 8, !dbg !9546
  %cmp = icmp eq i64* %__a, %__b, !dbg !9546
  %conv = zext i1 %cmp to i32, !dbg !9546
  %2 = load i64*, i64** %__d, align 8, !dbg !9546
  %cmp1 = icmp eq i64* %__a, %2, !dbg !9546
  %conv2 = zext i1 %cmp1 to i32, !dbg !9546
  %3 = load i64, i64* %__a, align 8, !dbg !9546
  %4 = load i64, i64* %__b, align 8, !dbg !9546
  %5 = load i64*, i64** %__d, align 8, !dbg !9546
  %6 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %3, i64 %4), !dbg !9546
  %7 = extractvalue { i64, i1 } %6, 1, !dbg !9546
  %8 = extractvalue { i64, i1 } %6, 0, !dbg !9546
  store i64 %8, i64* %5, align 8, !dbg !9546
  %frombool = zext i1 %7 to i8, !dbg !9546
  store i8 %frombool, i8* %tmp, align 1, !dbg !9546
  %9 = load i8, i8* %tmp, align 1, !dbg !9546
  %tobool = trunc i8 %9 to i1, !dbg !9546
  %call = call zeroext i1 @__must_check_overflow(i1 zeroext %tobool) #10, !dbg !9550
  br i1 %call, label %if.then, label %if.end, !dbg !9551

if.then:                                          ; preds = %entry
  store i64 -1, i64* %retval, align 8, !dbg !9552
  br label %return, !dbg !9552

if.end:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i64* %__a3, metadata !9553, metadata !DIExpression()), !dbg !9556
  %10 = load i64, i64* %bytes, align 8, !dbg !9556
  store i64 %10, i64* %__a3, align 8, !dbg !9556
  call void @llvm.dbg.declare(metadata i64* %__b4, metadata !9557, metadata !DIExpression()), !dbg !9556
  %11 = load i64, i64* %c.addr, align 8, !dbg !9556
  store i64 %11, i64* %__b4, align 8, !dbg !9556
  call void @llvm.dbg.declare(metadata i64** %__d5, metadata !9558, metadata !DIExpression()), !dbg !9556
  store i64* %bytes, i64** %__d5, align 8, !dbg !9556
  %cmp6 = icmp eq i64* %__a3, %__b4, !dbg !9556
  %conv7 = zext i1 %cmp6 to i32, !dbg !9556
  %12 = load i64*, i64** %__d5, align 8, !dbg !9556
  %cmp8 = icmp eq i64* %__a3, %12, !dbg !9556
  %conv9 = zext i1 %cmp8 to i32, !dbg !9556
  %13 = load i64, i64* %__a3, align 8, !dbg !9556
  %14 = load i64, i64* %__b4, align 8, !dbg !9556
  %15 = load i64*, i64** %__d5, align 8, !dbg !9556
  %16 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %13, i64 %14), !dbg !9556
  %17 = extractvalue { i64, i1 } %16, 1, !dbg !9556
  %18 = extractvalue { i64, i1 } %16, 0, !dbg !9556
  store i64 %18, i64* %15, align 8, !dbg !9556
  %frombool11 = zext i1 %17 to i8, !dbg !9556
  store i8 %frombool11, i8* %tmp10, align 1, !dbg !9556
  %19 = load i8, i8* %tmp10, align 1, !dbg !9556
  %tobool12 = trunc i8 %19 to i1, !dbg !9556
  %call13 = call zeroext i1 @__must_check_overflow(i1 zeroext %tobool12) #10, !dbg !9559
  br i1 %call13, label %if.then14, label %if.end15, !dbg !9560

if.then14:                                        ; preds = %if.end
  store i64 -1, i64* %retval, align 8, !dbg !9561
  br label %return, !dbg !9561

if.end15:                                         ; preds = %if.end
  %20 = load i64, i64* %bytes, align 8, !dbg !9562
  store i64 %20, i64* %retval, align 8, !dbg !9563
  br label %return, !dbg !9563

return:                                           ; preds = %if.end15, %if.then14, %if.then
  %21 = load i64, i64* %retval, align 8, !dbg !9564
  ret i64 %21, !dbg !9564
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @scr_memsetw(i16* %s, i16 zeroext %c, i32 %count) #1 !dbg !9565 {
entry:
  %s.addr = alloca i16*, align 8
  %c.addr = alloca i16, align 2
  %count.addr = alloca i32, align 4
  store i16* %s, i16** %s.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %s.addr, metadata !9569, metadata !DIExpression()), !dbg !9570
  store i16 %c, i16* %c.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %c.addr, metadata !9571, metadata !DIExpression()), !dbg !9572
  store i32 %count, i32* %count.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %count.addr, metadata !9573, metadata !DIExpression()), !dbg !9574
  %0 = load i16*, i16** %s.addr, align 8, !dbg !9575
  %1 = load i16, i16* %c.addr, align 2, !dbg !9576
  %2 = load i32, i32* %count.addr, align 4, !dbg !9577
  %div = udiv i32 %2, 2, !dbg !9578
  %conv = zext i32 %div to i64, !dbg !9577
  %call = call i8* @memset16(i16* %0, i16 zeroext %1, i64 %conv) #10, !dbg !9579
  ret void, !dbg !9580
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @scr_memcpyw(i16* %d, i16* %s, i32 %count) #1 !dbg !9581 {
entry:
  %d.addr = alloca i16*, align 8
  %s.addr = alloca i16*, align 8
  %count.addr = alloca i32, align 4
  store i16* %d, i16** %d.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %d.addr, metadata !9586, metadata !DIExpression()), !dbg !9587
  store i16* %s, i16** %s.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %s.addr, metadata !9588, metadata !DIExpression()), !dbg !9589
  store i32 %count, i32* %count.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %count.addr, metadata !9590, metadata !DIExpression()), !dbg !9591
  %0 = load i16*, i16** %d.addr, align 8, !dbg !9592
  %1 = bitcast i16* %0 to i8*, !dbg !9593
  %2 = load i16*, i16** %s.addr, align 8, !dbg !9594
  %3 = bitcast i16* %2 to i8*, !dbg !9593
  %4 = load i32, i32* %count.addr, align 4, !dbg !9595
  %conv = zext i32 %4 to i64, !dbg !9595
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %1, i8* align 2 %3, i64 %conv, i1 false), !dbg !9593
  ret void, !dbg !9596
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @fbcon_clear_margins(%struct.vc_data* %vc, i32 %bottom_only) #1 !dbg !9597 {
entry:
  %vc.addr = alloca %struct.vc_data*, align 8
  %bottom_only.addr = alloca i32, align 4
  %info = alloca %struct.fb_info*, align 8
  %ops = alloca %struct.fbcon_ops*, align 8
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !9598, metadata !DIExpression()), !dbg !9599
  store i32 %bottom_only, i32* %bottom_only.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bottom_only.addr, metadata !9600, metadata !DIExpression()), !dbg !9601
  call void @llvm.dbg.declare(metadata %struct.fb_info** %info, metadata !9602, metadata !DIExpression()), !dbg !9603
  %0 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !9604
  %vc_num = getelementptr inbounds %struct.vc_data, %struct.vc_data* %0, i32 0, i32 3, !dbg !9605
  %1 = load i16, i16* %vc_num, align 8, !dbg !9605
  %idxprom = zext i16 %1 to i64, !dbg !9606
  %arrayidx = getelementptr [63 x i8], [63 x i8]* @con2fb_map, i64 0, i64 %idxprom, !dbg !9606
  %2 = load i8, i8* %arrayidx, align 1, !dbg !9606
  %idxprom1 = sext i8 %2 to i64, !dbg !9607
  %arrayidx2 = getelementptr [32 x %struct.fb_info*], [32 x %struct.fb_info*]* @registered_fb, i64 0, i64 %idxprom1, !dbg !9607
  %3 = load %struct.fb_info*, %struct.fb_info** %arrayidx2, align 8, !dbg !9607
  store %struct.fb_info* %3, %struct.fb_info** %info, align 8, !dbg !9603
  call void @llvm.dbg.declare(metadata %struct.fbcon_ops** %ops, metadata !9608, metadata !DIExpression()), !dbg !9609
  %4 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !9610
  %fbcon_par = getelementptr inbounds %struct.fb_info, %struct.fb_info* %4, i32 0, i32 29, !dbg !9611
  %5 = load i8*, i8** %fbcon_par, align 8, !dbg !9611
  %6 = bitcast i8* %5 to %struct.fbcon_ops*, !dbg !9610
  store %struct.fbcon_ops* %6, %struct.fbcon_ops** %ops, align 8, !dbg !9609
  %7 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !9612
  %8 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !9614
  %call = call i32 @fbcon_is_inactive(%struct.vc_data* %7, %struct.fb_info* %8) #10, !dbg !9615
  %tobool = icmp ne i32 %call, 0, !dbg !9615
  br i1 %tobool, label %if.end, label %if.then, !dbg !9616

if.then:                                          ; preds = %entry
  %9 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !9617
  %clear_margins = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %9, i32 0, i32 3, !dbg !9618
  %10 = load void (%struct.vc_data*, %struct.fb_info*, i32, i32)*, void (%struct.vc_data*, %struct.fb_info*, i32, i32)** %clear_margins, align 8, !dbg !9618
  %11 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !9619
  %12 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !9620
  %13 = load i32, i32* @margin_color, align 4, !dbg !9621
  %14 = load i32, i32* %bottom_only.addr, align 4, !dbg !9622
  call void %10(%struct.vc_data* %11, %struct.fb_info* %12, i32 %13, i32 %14) #10, !dbg !9617
  br label %if.end, !dbg !9617

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !9623
}

; Function Attrs: noredzone
declare dso_local void @kfree(i8*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__must_check_overflow(i1 zeroext %overflow) #1 !dbg !9624 {
entry:
  %overflow.addr = alloca i8, align 1
  %frombool = zext i1 %overflow to i8
  store i8 %frombool, i8* %overflow.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %overflow.addr, metadata !9627, metadata !DIExpression()), !dbg !9628
  %0 = load i8, i8* %overflow.addr, align 1, !dbg !9629
  %tobool = trunc i8 %0 to i1, !dbg !9629
  %lnot = xor i1 %tobool, true, !dbg !9629
  %lnot1 = xor i1 %lnot, true, !dbg !9629
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !9629
  %conv = sext i32 %lnot.ext to i64, !dbg !9629
  %tobool2 = icmp ne i64 %conv, 0, !dbg !9629
  ret i1 %tobool2, !dbg !9630
}

; Function Attrs: nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @memset16(i16* %s, i16 zeroext %v, i64 %n) #1 !dbg !9631 {
entry:
  %s.addr = alloca i16*, align 8
  %v.addr = alloca i16, align 2
  %n.addr = alloca i64, align 8
  %d0 = alloca i64, align 8
  %d1 = alloca i64, align 8
  store i16* %s, i16** %s.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %s.addr, metadata !9637, metadata !DIExpression()), !dbg !9638
  store i16 %v, i16* %v.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %v.addr, metadata !9639, metadata !DIExpression()), !dbg !9640
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !9641, metadata !DIExpression()), !dbg !9642
  call void @llvm.dbg.declare(metadata i64* %d0, metadata !9643, metadata !DIExpression()), !dbg !9644
  call void @llvm.dbg.declare(metadata i64* %d1, metadata !9645, metadata !DIExpression()), !dbg !9646
  %0 = load i16, i16* %v.addr, align 2, !dbg !9647
  %1 = load i16*, i16** %s.addr, align 8, !dbg !9648
  %2 = load i64, i64* %n.addr, align 8, !dbg !9649
  %3 = call { i64, i64 } asm sideeffect "rep\0A\09stosw", "=&{cx},=&{di},{ax},1,0,~{memory},~{dirflag},~{fpsr},~{flags}"(i16 %0, i16* %1, i64 %2) #12, !dbg !9650, !srcloc !9651
  %asmresult = extractvalue { i64, i64 } %3, 0, !dbg !9650
  %asmresult1 = extractvalue { i64, i64 } %3, 1, !dbg !9650
  store i64 %asmresult, i64* %d0, align 8, !dbg !9650
  store i64 %asmresult1, i64* %d1, align 8, !dbg !9650
  %4 = load i16*, i16** %s.addr, align 8, !dbg !9652
  %5 = bitcast i16* %4 to i8*, !dbg !9652
  ret i8* %5, !dbg !9653
}

; Function Attrs: noredzone
declare dso_local i32 @do_unbind_con_driver(%struct.consw*, i32, i32, i32) #3

; Function Attrs: noredzone
declare dso_local i32 @fb_is_primary_device(%struct.fb_info*) #3

; Function Attrs: noredzone
declare dso_local i32 @do_take_over_console(%struct.consw*, i32, i32, i32) #3

; Function Attrs: noredzone
declare dso_local i32 @fb_set_var(%struct.fb_info*, %struct.fb_var_screeninfo*) #3

; Function Attrs: noredzone
declare dso_local i32 @con_set_default_unimap(%struct.vc_data*) #3

; Function Attrs: noredzone
declare dso_local i32 @con_copy_unimap(%struct.vc_data*, %struct.vc_data*) #3

; Function Attrs: noredzone
declare dso_local i64 @_copy_from_user(i8*, i8*, i64) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @copy_overflow(i32 %size, i64 %count) #1 !dbg !9654 {
entry:
  %size.addr = alloca i32, align 4
  %count.addr = alloca i64, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !9657, metadata !DIExpression()), !dbg !9658
  store i64 %count, i64* %count.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !9659, metadata !DIExpression()), !dbg !9660
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !9661, metadata !DIExpression()), !dbg !9663
  store i32 1, i32* %__ret_warn_on, align 4, !dbg !9663
  %0 = load i32, i32* %__ret_warn_on, align 4, !dbg !9664
  %tobool = icmp ne i32 %0, 0, !dbg !9664
  %lnot = xor i1 %tobool, true, !dbg !9664
  %lnot1 = xor i1 %lnot, true, !dbg !9664
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !9664
  %conv = sext i32 %lnot.ext to i64, !dbg !9664
  %tobool2 = icmp ne i64 %conv, 0, !dbg !9664
  br i1 %tobool2, label %if.then, label %if.end, !dbg !9663

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !9664

do.body:                                          ; preds = %if.then
  br label %do.body3, !dbg !9666

do.body3:                                         ; preds = %do.body
  br label %do.end, !dbg !9668

do.end:                                           ; preds = %do.body3
  %1 = load i32, i32* %size.addr, align 4, !dbg !9666
  %2 = load i64, i64* %count.addr, align 8, !dbg !9666
  call void (i8*, ...) @__warn_printk(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.22, i64 0, i64 0), i32 %1, i64 %2) #10, !dbg !9666
  br label %do.body4, !dbg !9666

do.body4:                                         ; preds = %do.end
  br label %do.body5, !dbg !9670

do.body5:                                         ; preds = %do.body4
  br label %do.end6, !dbg !9672

do.end6:                                          ; preds = %do.body5
  br label %do.body7, !dbg !9670

do.body7:                                         ; preds = %do.end6
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.21, i64 0, i64 0), i32 134, i32 2313, i64 12) #12, !dbg !9674, !srcloc !9676
  br label %do.end8, !dbg !9674

do.end8:                                          ; preds = %do.body7
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 38) #12, !dbg !9677, !srcloc !9679
  br label %do.body9, !dbg !9670

do.body9:                                         ; preds = %do.end8
  br label %do.end10, !dbg !9680

do.end10:                                         ; preds = %do.body9
  br label %do.end11, !dbg !9670

do.end11:                                         ; preds = %do.end10
  br label %do.body12, !dbg !9666

do.body12:                                        ; preds = %do.end11
  br label %do.end13, !dbg !9682

do.end13:                                         ; preds = %do.body12
  br label %do.end14, !dbg !9666

do.end14:                                         ; preds = %do.end13
  br label %if.end, !dbg !9666

if.end:                                           ; preds = %do.end14, %entry
  %3 = load i32, i32* %__ret_warn_on, align 4, !dbg !9663
  %tobool15 = icmp ne i32 %3, 0, !dbg !9663
  %lnot16 = xor i1 %tobool15, true, !dbg !9663
  %lnot18 = xor i1 %lnot16, true, !dbg !9663
  %lnot.ext19 = zext i1 %lnot18 to i32, !dbg !9663
  %conv20 = sext i32 %lnot.ext19 to i64, !dbg !9663
  store i64 %conv20, i64* %tmp, align 8, !dbg !9664
  %4 = load i64, i64* %tmp, align 8, !dbg !9663
  ret void, !dbg !9684
}

; Function Attrs: noredzone
declare dso_local void @__bad_copy_from() #3

; Function Attrs: noredzone
declare dso_local void @__bad_copy_to() #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @check_object_size(i8* %ptr, i64 %n, i1 zeroext %to_user) #1 !dbg !9685 {
entry:
  %ptr.addr = alloca i8*, align 8
  %n.addr = alloca i64, align 8
  %to_user.addr = alloca i8, align 1
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !9688, metadata !DIExpression()), !dbg !9689
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !9690, metadata !DIExpression()), !dbg !9691
  %frombool = zext i1 %to_user to i8
  store i8 %frombool, i8* %to_user.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %to_user.addr, metadata !9692, metadata !DIExpression()), !dbg !9693
  ret void, !dbg !9694
}

; Function Attrs: noredzone
declare dso_local void @__warn_printk(i8*, ...) #3

; Function Attrs: noredzone
declare dso_local i64 @_copy_to_user(i8*, i8*, i64) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @fbcon_startup() #1 !dbg !9695 {
entry:
  %retval = alloca i8*, align 8
  %display_desc = alloca i8*, align 8
  %p = alloca %struct.fbcon_display*, align 8
  %vc = alloca %struct.vc_data*, align 8
  %font = alloca %struct.font_desc*, align 8
  %owner = alloca %struct.module*, align 8
  %info = alloca %struct.fb_info*, align 8
  %ops = alloca %struct.fbcon_ops*, align 8
  %rows = alloca i32, align 4
  %cols = alloca i32, align 4
  %_r = alloca i32, align 4
  %_v = alloca i32, align 4
  %tmp = alloca i32, align 4
  %_r71 = alloca i32, align 4
  %_v74 = alloca i32, align 4
  %tmp79 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i8** %display_desc, metadata !9696, metadata !DIExpression()), !dbg !9697
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.23, i64 0, i64 0), i8** %display_desc, align 8, !dbg !9697
  call void @llvm.dbg.declare(metadata %struct.fbcon_display** %p, metadata !9698, metadata !DIExpression()), !dbg !9699
  %0 = load i32, i32* @fg_console, align 4, !dbg !9700
  %idxprom = sext i32 %0 to i64, !dbg !9701
  %arrayidx = getelementptr [63 x %struct.fbcon_display], [63 x %struct.fbcon_display]* @fb_display, i64 0, i64 %idxprom, !dbg !9701
  store %struct.fbcon_display* %arrayidx, %struct.fbcon_display** %p, align 8, !dbg !9699
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc, metadata !9702, metadata !DIExpression()), !dbg !9703
  %1 = load i32, i32* @fg_console, align 4, !dbg !9704
  %idxprom1 = sext i32 %1 to i64, !dbg !9705
  %arrayidx2 = getelementptr [63 x %struct.vc], [63 x %struct.vc]* @vc_cons, i64 0, i64 %idxprom1, !dbg !9705
  %d = getelementptr inbounds %struct.vc, %struct.vc* %arrayidx2, i32 0, i32 0, !dbg !9706
  %2 = load %struct.vc_data*, %struct.vc_data** %d, align 8, !dbg !9706
  store %struct.vc_data* %2, %struct.vc_data** %vc, align 8, !dbg !9703
  call void @llvm.dbg.declare(metadata %struct.font_desc** %font, metadata !9707, metadata !DIExpression()), !dbg !9719
  store %struct.font_desc* null, %struct.font_desc** %font, align 8, !dbg !9719
  call void @llvm.dbg.declare(metadata %struct.module** %owner, metadata !9720, metadata !DIExpression()), !dbg !9721
  call void @llvm.dbg.declare(metadata %struct.fb_info** %info, metadata !9722, metadata !DIExpression()), !dbg !9723
  store %struct.fb_info* null, %struct.fb_info** %info, align 8, !dbg !9723
  call void @llvm.dbg.declare(metadata %struct.fbcon_ops** %ops, metadata !9724, metadata !DIExpression()), !dbg !9725
  call void @llvm.dbg.declare(metadata i32* %rows, metadata !9726, metadata !DIExpression()), !dbg !9727
  call void @llvm.dbg.declare(metadata i32* %cols, metadata !9728, metadata !DIExpression()), !dbg !9729
  %3 = load i32, i32* @num_registered_fb, align 4, !dbg !9730
  %tobool = icmp ne i32 %3, 0, !dbg !9730
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !9732

lor.lhs.false:                                    ; preds = %entry
  %4 = load i32, i32* @info_idx, align 4, !dbg !9733
  %cmp = icmp eq i32 %4, -1, !dbg !9734
  br i1 %cmp, label %if.then, label %if.end, !dbg !9735

if.then:                                          ; preds = %lor.lhs.false, %entry
  %5 = load i8*, i8** %display_desc, align 8, !dbg !9736
  store i8* %5, i8** %retval, align 8, !dbg !9737
  br label %return, !dbg !9737

if.end:                                           ; preds = %lor.lhs.false
  %6 = load i32, i32* @info_idx, align 4, !dbg !9738
  %idxprom3 = sext i32 %6 to i64, !dbg !9739
  %arrayidx4 = getelementptr [32 x %struct.fb_info*], [32 x %struct.fb_info*]* @registered_fb, i64 0, i64 %idxprom3, !dbg !9739
  %7 = load %struct.fb_info*, %struct.fb_info** %arrayidx4, align 8, !dbg !9739
  store %struct.fb_info* %7, %struct.fb_info** %info, align 8, !dbg !9740
  %8 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !9741
  %tobool5 = icmp ne %struct.fb_info* %8, null, !dbg !9741
  br i1 %tobool5, label %if.end7, label %if.then6, !dbg !9743

if.then6:                                         ; preds = %if.end
  store i8* null, i8** %retval, align 8, !dbg !9744
  br label %return, !dbg !9744

if.end7:                                          ; preds = %if.end
  %9 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !9745
  %fbops = getelementptr inbounds %struct.fb_info, %struct.fb_info* %9, i32 0, i32 20, !dbg !9746
  %10 = load %struct.fb_ops*, %struct.fb_ops** %fbops, align 8, !dbg !9746
  %owner8 = getelementptr inbounds %struct.fb_ops, %struct.fb_ops* %10, i32 0, i32 0, !dbg !9747
  %11 = load %struct.module*, %struct.module** %owner8, align 8, !dbg !9747
  store %struct.module* %11, %struct.module** %owner, align 8, !dbg !9748
  %12 = load %struct.module*, %struct.module** %owner, align 8, !dbg !9749
  %call = call zeroext i1 @try_module_get(%struct.module* %12) #10, !dbg !9751
  br i1 %call, label %if.end10, label %if.then9, !dbg !9752

if.then9:                                         ; preds = %if.end7
  store i8* null, i8** %retval, align 8, !dbg !9753
  br label %return, !dbg !9753

if.end10:                                         ; preds = %if.end7
  %13 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !9754
  %fbops11 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %13, i32 0, i32 20, !dbg !9756
  %14 = load %struct.fb_ops*, %struct.fb_ops** %fbops11, align 8, !dbg !9756
  %fb_open = getelementptr inbounds %struct.fb_ops, %struct.fb_ops* %14, i32 0, i32 1, !dbg !9757
  %15 = load i32 (%struct.fb_info*, i32)*, i32 (%struct.fb_info*, i32)** %fb_open, align 8, !dbg !9757
  %tobool12 = icmp ne i32 (%struct.fb_info*, i32)* %15, null, !dbg !9754
  br i1 %tobool12, label %land.lhs.true, label %if.end18, !dbg !9758

land.lhs.true:                                    ; preds = %if.end10
  %16 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !9759
  %fbops13 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %16, i32 0, i32 20, !dbg !9760
  %17 = load %struct.fb_ops*, %struct.fb_ops** %fbops13, align 8, !dbg !9760
  %fb_open14 = getelementptr inbounds %struct.fb_ops, %struct.fb_ops* %17, i32 0, i32 1, !dbg !9761
  %18 = load i32 (%struct.fb_info*, i32)*, i32 (%struct.fb_info*, i32)** %fb_open14, align 8, !dbg !9761
  %19 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !9762
  %call15 = call i32 %18(%struct.fb_info* %19, i32 0) #10, !dbg !9759
  %tobool16 = icmp ne i32 %call15, 0, !dbg !9759
  br i1 %tobool16, label %if.then17, label %if.end18, !dbg !9763

if.then17:                                        ; preds = %land.lhs.true
  %20 = load %struct.module*, %struct.module** %owner, align 8, !dbg !9764
  call void @module_put(%struct.module* %20) #10, !dbg !9766
  store i8* null, i8** %retval, align 8, !dbg !9767
  br label %return, !dbg !9767

if.end18:                                         ; preds = %land.lhs.true, %if.end10
  %call19 = call i8* @kzalloc(i64 456, i32 3264) #10, !dbg !9768
  %21 = bitcast i8* %call19 to %struct.fbcon_ops*, !dbg !9768
  store %struct.fbcon_ops* %21, %struct.fbcon_ops** %ops, align 8, !dbg !9769
  %22 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !9770
  %tobool20 = icmp ne %struct.fbcon_ops* %22, null, !dbg !9770
  br i1 %tobool20, label %if.end22, label %if.then21, !dbg !9772

if.then21:                                        ; preds = %if.end18
  %23 = load %struct.module*, %struct.module** %owner, align 8, !dbg !9773
  call void @module_put(%struct.module* %23) #10, !dbg !9775
  store i8* null, i8** %retval, align 8, !dbg !9776
  br label %return, !dbg !9776

if.end22:                                         ; preds = %if.end18
  %24 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !9777
  %currcon = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %24, i32 0, i32 12, !dbg !9778
  store i32 -1, i32* %currcon, align 8, !dbg !9779
  %25 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !9780
  %graphics = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %25, i32 0, i32 17, !dbg !9781
  store i32 1, i32* %graphics, align 4, !dbg !9782
  %26 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !9783
  %cur_rotate = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %26, i32 0, i32 21, !dbg !9784
  store i32 -1, i32* %cur_rotate, align 4, !dbg !9785
  %27 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !9786
  %cur_blink_jiffies = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %27, i32 0, i32 13, !dbg !9787
  store i32 50, i32* %cur_blink_jiffies, align 4, !dbg !9788
  %28 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !9789
  %29 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !9790
  %info23 = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %29, i32 0, i32 11, !dbg !9791
  store %struct.fb_info* %28, %struct.fb_info** %info23, align 8, !dbg !9792
  %30 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !9793
  %31 = bitcast %struct.fbcon_ops* %30 to i8*, !dbg !9793
  %32 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !9794
  %fbcon_par = getelementptr inbounds %struct.fb_info, %struct.fb_info* %32, i32 0, i32 29, !dbg !9795
  store i8* %31, i8** %fbcon_par, align 8, !dbg !9796
  %33 = load i32, i32* @initial_rotation, align 4, !dbg !9797
  %34 = load %struct.fbcon_display*, %struct.fbcon_display** %p, align 8, !dbg !9798
  %con_rotate = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %34, i32 0, i32 7, !dbg !9799
  store i32 %33, i32* %con_rotate, align 4, !dbg !9800
  %35 = load %struct.fbcon_display*, %struct.fbcon_display** %p, align 8, !dbg !9801
  %con_rotate24 = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %35, i32 0, i32 7, !dbg !9803
  %36 = load i32, i32* %con_rotate24, align 4, !dbg !9803
  %cmp25 = icmp eq i32 %36, -1, !dbg !9804
  br i1 %cmp25, label %if.then26, label %if.end28, !dbg !9805

if.then26:                                        ; preds = %if.end22
  %37 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !9806
  %fbcon_rotate_hint = getelementptr inbounds %struct.fb_info, %struct.fb_info* %37, i32 0, i32 3, !dbg !9807
  %38 = load i32, i32* %fbcon_rotate_hint, align 4, !dbg !9807
  %39 = load %struct.fbcon_display*, %struct.fbcon_display** %p, align 8, !dbg !9808
  %con_rotate27 = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %39, i32 0, i32 7, !dbg !9809
  store i32 %38, i32* %con_rotate27, align 4, !dbg !9810
  br label %if.end28, !dbg !9808

if.end28:                                         ; preds = %if.then26, %if.end22
  %40 = load %struct.fbcon_display*, %struct.fbcon_display** %p, align 8, !dbg !9811
  %con_rotate29 = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %40, i32 0, i32 7, !dbg !9813
  %41 = load i32, i32* %con_rotate29, align 4, !dbg !9813
  %cmp30 = icmp eq i32 %41, -1, !dbg !9814
  br i1 %cmp30, label %if.then31, label %if.end33, !dbg !9815

if.then31:                                        ; preds = %if.end28
  %42 = load %struct.fbcon_display*, %struct.fbcon_display** %p, align 8, !dbg !9816
  %con_rotate32 = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %42, i32 0, i32 7, !dbg !9817
  store i32 0, i32* %con_rotate32, align 4, !dbg !9818
  br label %if.end33, !dbg !9816

if.end33:                                         ; preds = %if.then31, %if.end28
  %43 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !9819
  %44 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !9820
  call void @set_blitting_type(%struct.vc_data* %43, %struct.fb_info* %44) #10, !dbg !9821
  %45 = load %struct.fbcon_display*, %struct.fbcon_display** %p, align 8, !dbg !9822
  %fontdata = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %45, i32 0, i32 0, !dbg !9824
  %46 = load i8*, i8** %fontdata, align 8, !dbg !9824
  %tobool34 = icmp ne i8* %46, null, !dbg !9822
  br i1 %tobool34, label %if.else, label %land.lhs.true35, !dbg !9825

land.lhs.true35:                                  ; preds = %if.end33
  %47 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !9826
  %vc_font = getelementptr inbounds %struct.vc_data, %struct.vc_data* %47, i32 0, i32 27, !dbg !9827
  %data = getelementptr inbounds %struct.console_font, %struct.console_font* %vc_font, i32 0, i32 3, !dbg !9828
  %48 = load i8*, i8** %data, align 8, !dbg !9828
  %tobool36 = icmp ne i8* %48, null, !dbg !9826
  br i1 %tobool36, label %if.else, label %if.then37, !dbg !9829

if.then37:                                        ; preds = %land.lhs.true35
  %49 = load i8, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @fontname, i64 0, i64 0), align 16, !dbg !9830
  %tobool38 = icmp ne i8 %49, 0, !dbg !9830
  br i1 %tobool38, label %lor.lhs.false39, label %if.then42, !dbg !9833

lor.lhs.false39:                                  ; preds = %if.then37
  %call40 = call %struct.font_desc* @find_font(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @fontname, i64 0, i64 0)) #10, !dbg !9834
  store %struct.font_desc* %call40, %struct.font_desc** %font, align 8, !dbg !9835
  %tobool41 = icmp ne %struct.font_desc* %call40, null, !dbg !9835
  br i1 %tobool41, label %if.end46, label %if.then42, !dbg !9836

if.then42:                                        ; preds = %lor.lhs.false39, %if.then37
  %50 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !9837
  %var = getelementptr inbounds %struct.fb_info, %struct.fb_info* %50, i32 0, i32 6, !dbg !9838
  %xres = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %var, i32 0, i32 0, !dbg !9839
  %51 = load i32, i32* %xres, align 8, !dbg !9839
  %52 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !9840
  %var43 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %52, i32 0, i32 6, !dbg !9841
  %yres = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %var43, i32 0, i32 1, !dbg !9842
  %53 = load i32, i32* %yres, align 4, !dbg !9842
  %54 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !9843
  %pixmap = getelementptr inbounds %struct.fb_info, %struct.fb_info* %54, i32 0, i32 10, !dbg !9844
  %blit_x = getelementptr inbounds %struct.fb_pixmap, %struct.fb_pixmap* %pixmap, i32 0, i32 7, !dbg !9845
  %55 = load i32, i32* %blit_x, align 8, !dbg !9845
  %56 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !9846
  %pixmap44 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %56, i32 0, i32 10, !dbg !9847
  %blit_y = getelementptr inbounds %struct.fb_pixmap, %struct.fb_pixmap* %pixmap44, i32 0, i32 8, !dbg !9848
  %57 = load i32, i32* %blit_y, align 4, !dbg !9848
  %call45 = call %struct.font_desc* @get_default_font(i32 %51, i32 %53, i32 %55, i32 %57) #10, !dbg !9849
  store %struct.font_desc* %call45, %struct.font_desc** %font, align 8, !dbg !9850
  br label %if.end46, !dbg !9851

if.end46:                                         ; preds = %if.then42, %lor.lhs.false39
  %58 = load %struct.font_desc*, %struct.font_desc** %font, align 8, !dbg !9852
  %width = getelementptr inbounds %struct.font_desc, %struct.font_desc* %58, i32 0, i32 2, !dbg !9853
  %59 = load i32, i32* %width, align 8, !dbg !9853
  %60 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !9854
  %vc_font47 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %60, i32 0, i32 27, !dbg !9855
  %width48 = getelementptr inbounds %struct.console_font, %struct.console_font* %vc_font47, i32 0, i32 0, !dbg !9856
  store i32 %59, i32* %width48, align 8, !dbg !9857
  %61 = load %struct.font_desc*, %struct.font_desc** %font, align 8, !dbg !9858
  %height = getelementptr inbounds %struct.font_desc, %struct.font_desc* %61, i32 0, i32 3, !dbg !9859
  %62 = load i32, i32* %height, align 4, !dbg !9859
  %63 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !9860
  %vc_font49 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %63, i32 0, i32 27, !dbg !9861
  %height50 = getelementptr inbounds %struct.console_font, %struct.console_font* %vc_font49, i32 0, i32 1, !dbg !9862
  store i32 %62, i32* %height50, align 4, !dbg !9863
  %64 = load %struct.font_desc*, %struct.font_desc** %font, align 8, !dbg !9864
  %data51 = getelementptr inbounds %struct.font_desc, %struct.font_desc* %64, i32 0, i32 4, !dbg !9865
  %65 = load i8*, i8** %data51, align 8, !dbg !9865
  %66 = load %struct.fbcon_display*, %struct.fbcon_display** %p, align 8, !dbg !9866
  %fontdata52 = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %66, i32 0, i32 0, !dbg !9867
  store i8* %65, i8** %fontdata52, align 8, !dbg !9868
  %67 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !9869
  %vc_font53 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %67, i32 0, i32 27, !dbg !9870
  %data54 = getelementptr inbounds %struct.console_font, %struct.console_font* %vc_font53, i32 0, i32 3, !dbg !9871
  store i8* %65, i8** %data54, align 8, !dbg !9872
  %68 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !9873
  %vc_font55 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %68, i32 0, i32 27, !dbg !9874
  %charcount = getelementptr inbounds %struct.console_font, %struct.console_font* %vc_font55, i32 0, i32 2, !dbg !9875
  store i32 256, i32* %charcount, align 8, !dbg !9876
  br label %if.end59, !dbg !9877

if.else:                                          ; preds = %land.lhs.true35, %if.end33
  %69 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !9878
  %vc_font56 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %69, i32 0, i32 27, !dbg !9880
  %data57 = getelementptr inbounds %struct.console_font, %struct.console_font* %vc_font56, i32 0, i32 3, !dbg !9881
  %70 = load i8*, i8** %data57, align 8, !dbg !9881
  %71 = load %struct.fbcon_display*, %struct.fbcon_display** %p, align 8, !dbg !9882
  %fontdata58 = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %71, i32 0, i32 0, !dbg !9883
  store i8* %70, i8** %fontdata58, align 8, !dbg !9884
  br label %if.end59

if.end59:                                         ; preds = %if.else, %if.end46
  call void @llvm.dbg.declare(metadata i32* %_r, metadata !9885, metadata !DIExpression()), !dbg !9887
  %72 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !9887
  %var60 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %72, i32 0, i32 6, !dbg !9887
  %xres61 = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %var60, i32 0, i32 0, !dbg !9887
  %73 = load i32, i32* %xres61, align 8, !dbg !9887
  store i32 %73, i32* %_r, align 4, !dbg !9887
  call void @llvm.dbg.declare(metadata i32* %_v, metadata !9888, metadata !DIExpression()), !dbg !9887
  %74 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !9887
  %var62 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %74, i32 0, i32 6, !dbg !9887
  %yres63 = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %var62, i32 0, i32 1, !dbg !9887
  %75 = load i32, i32* %yres63, align 4, !dbg !9887
  store i32 %75, i32* %_v, align 4, !dbg !9887
  %cmp64 = icmp eq i32* %_r, %_v, !dbg !9887
  %conv = zext i1 %cmp64 to i32, !dbg !9887
  %76 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !9887
  %rotate = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %76, i32 0, i32 20, !dbg !9887
  %77 = load i32, i32* %rotate, align 8, !dbg !9887
  %cmp65 = icmp eq i32 %77, 0, !dbg !9887
  br i1 %cmp65, label %cond.true, label %lor.lhs.false67, !dbg !9887

lor.lhs.false67:                                  ; preds = %if.end59
  %78 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !9887
  %rotate68 = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %78, i32 0, i32 20, !dbg !9887
  %79 = load i32, i32* %rotate68, align 8, !dbg !9887
  %cmp69 = icmp eq i32 %79, 2, !dbg !9887
  br i1 %cmp69, label %cond.true, label %cond.false, !dbg !9887

cond.true:                                        ; preds = %lor.lhs.false67, %if.end59
  %80 = load i32, i32* %_r, align 4, !dbg !9887
  br label %cond.end, !dbg !9887

cond.false:                                       ; preds = %lor.lhs.false67
  %81 = load i32, i32* %_v, align 4, !dbg !9887
  br label %cond.end, !dbg !9887

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %80, %cond.true ], [ %81, %cond.false ], !dbg !9887
  store i32 %cond, i32* %tmp, align 4, !dbg !9887
  %82 = load i32, i32* %tmp, align 4, !dbg !9887
  store i32 %82, i32* %cols, align 4, !dbg !9889
  call void @llvm.dbg.declare(metadata i32* %_r71, metadata !9890, metadata !DIExpression()), !dbg !9892
  %83 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !9892
  %var72 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %83, i32 0, i32 6, !dbg !9892
  %yres73 = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %var72, i32 0, i32 1, !dbg !9892
  %84 = load i32, i32* %yres73, align 4, !dbg !9892
  store i32 %84, i32* %_r71, align 4, !dbg !9892
  call void @llvm.dbg.declare(metadata i32* %_v74, metadata !9893, metadata !DIExpression()), !dbg !9892
  %85 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !9892
  %var75 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %85, i32 0, i32 6, !dbg !9892
  %xres76 = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %var75, i32 0, i32 0, !dbg !9892
  %86 = load i32, i32* %xres76, align 8, !dbg !9892
  store i32 %86, i32* %_v74, align 4, !dbg !9892
  %cmp77 = icmp eq i32* %_r71, %_v74, !dbg !9892
  %conv78 = zext i1 %cmp77 to i32, !dbg !9892
  %87 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !9892
  %rotate80 = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %87, i32 0, i32 20, !dbg !9892
  %88 = load i32, i32* %rotate80, align 8, !dbg !9892
  %cmp81 = icmp eq i32 %88, 0, !dbg !9892
  br i1 %cmp81, label %cond.true87, label %lor.lhs.false83, !dbg !9892

lor.lhs.false83:                                  ; preds = %cond.end
  %89 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !9892
  %rotate84 = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %89, i32 0, i32 20, !dbg !9892
  %90 = load i32, i32* %rotate84, align 8, !dbg !9892
  %cmp85 = icmp eq i32 %90, 2, !dbg !9892
  br i1 %cmp85, label %cond.true87, label %cond.false88, !dbg !9892

cond.true87:                                      ; preds = %lor.lhs.false83, %cond.end
  %91 = load i32, i32* %_r71, align 4, !dbg !9892
  br label %cond.end89, !dbg !9892

cond.false88:                                     ; preds = %lor.lhs.false83
  %92 = load i32, i32* %_v74, align 4, !dbg !9892
  br label %cond.end89, !dbg !9892

cond.end89:                                       ; preds = %cond.false88, %cond.true87
  %cond90 = phi i32 [ %91, %cond.true87 ], [ %92, %cond.false88 ], !dbg !9892
  store i32 %cond90, i32* %tmp79, align 4, !dbg !9892
  %93 = load i32, i32* %tmp79, align 4, !dbg !9892
  store i32 %93, i32* %rows, align 4, !dbg !9894
  %94 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !9895
  %vc_font91 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %94, i32 0, i32 27, !dbg !9896
  %width92 = getelementptr inbounds %struct.console_font, %struct.console_font* %vc_font91, i32 0, i32 0, !dbg !9897
  %95 = load i32, i32* %width92, align 8, !dbg !9897
  %96 = load i32, i32* %cols, align 4, !dbg !9898
  %div = udiv i32 %96, %95, !dbg !9898
  store i32 %div, i32* %cols, align 4, !dbg !9898
  %97 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !9899
  %vc_font93 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %97, i32 0, i32 27, !dbg !9900
  %height94 = getelementptr inbounds %struct.console_font, %struct.console_font* %vc_font93, i32 0, i32 1, !dbg !9901
  %98 = load i32, i32* %height94, align 4, !dbg !9901
  %99 = load i32, i32* %rows, align 4, !dbg !9902
  %div95 = udiv i32 %99, %98, !dbg !9902
  store i32 %div95, i32* %rows, align 4, !dbg !9902
  %100 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !9903
  %101 = load i32, i32* %cols, align 4, !dbg !9904
  %102 = load i32, i32* %rows, align 4, !dbg !9905
  %call96 = call i32 @vc_resize(%struct.vc_data* %100, i32 %101, i32 %102) #10, !dbg !9906
  %103 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !9907
  call void @fbcon_add_cursor_timer(%struct.fb_info* %103) #10, !dbg !9908
  %104 = load i8*, i8** %display_desc, align 8, !dbg !9909
  store i8* %104, i8** %retval, align 8, !dbg !9910
  br label %return, !dbg !9910

return:                                           ; preds = %cond.end89, %if.then21, %if.then17, %if.then9, %if.then6, %if.then
  %105 = load i8*, i8** %retval, align 8, !dbg !9911
  ret i8* %105, !dbg !9911
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @fbcon_init(%struct.vc_data* %vc, i32 %init) #1 !dbg !9912 {
entry:
  %retval.i = alloca i64, align 8
  %m.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m.addr.i, metadata !5401, metadata !DIExpression()), !dbg !9913
  %vc.addr = alloca %struct.vc_data*, align 8
  %init.addr = alloca i32, align 4
  %info = alloca %struct.fb_info*, align 8
  %ops = alloca %struct.fbcon_ops*, align 8
  %default_mode = alloca %struct.vc_data**, align 8
  %svc = alloca %struct.vc_data*, align 8
  %t = alloca %struct.fbcon_display*, align 8
  %p = alloca %struct.fbcon_display*, align 8
  %logo = alloca i32, align 4
  %new_rows = alloca i32, align 4
  %new_cols = alloca i32, align 4
  %rows = alloca i32, align 4
  %cols = alloca i32, align 4
  %charcnt = alloca i32, align 4
  %cap = alloca i32, align 4
  %ret = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  %fvc = alloca %struct.vc_data*, align 8
  %font = alloca %struct.font_desc*, align 8
  %_r = alloca i32, align 4
  %_v = alloca i32, align 4
  %tmp175 = alloca i32, align 4
  %_r183 = alloca i32, align 4
  %_v186 = alloca i32, align 4
  %tmp191 = alloca i32, align 4
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !9915, metadata !DIExpression()), !dbg !9916
  store i32 %init, i32* %init.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %init.addr, metadata !9917, metadata !DIExpression()), !dbg !9918
  call void @llvm.dbg.declare(metadata %struct.fb_info** %info, metadata !9919, metadata !DIExpression()), !dbg !9920
  call void @llvm.dbg.declare(metadata %struct.fbcon_ops** %ops, metadata !9921, metadata !DIExpression()), !dbg !9922
  call void @llvm.dbg.declare(metadata %struct.vc_data*** %default_mode, metadata !9923, metadata !DIExpression()), !dbg !9924
  %0 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !9925
  %vc_display_fg = getelementptr inbounds %struct.vc_data, %struct.vc_data* %0, i32 0, i32 46, !dbg !9926
  %1 = load %struct.vc_data**, %struct.vc_data*** %vc_display_fg, align 8, !dbg !9926
  store %struct.vc_data** %1, %struct.vc_data*** %default_mode, align 8, !dbg !9924
  call void @llvm.dbg.declare(metadata %struct.vc_data** %svc, metadata !9927, metadata !DIExpression()), !dbg !9928
  %2 = load %struct.vc_data**, %struct.vc_data*** %default_mode, align 8, !dbg !9929
  %3 = load %struct.vc_data*, %struct.vc_data** %2, align 8, !dbg !9930
  store %struct.vc_data* %3, %struct.vc_data** %svc, align 8, !dbg !9928
  call void @llvm.dbg.declare(metadata %struct.fbcon_display** %t, metadata !9931, metadata !DIExpression()), !dbg !9932
  call void @llvm.dbg.declare(metadata %struct.fbcon_display** %p, metadata !9933, metadata !DIExpression()), !dbg !9934
  %4 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !9935
  %vc_num = getelementptr inbounds %struct.vc_data, %struct.vc_data* %4, i32 0, i32 3, !dbg !9936
  %5 = load i16, i16* %vc_num, align 8, !dbg !9936
  %idxprom = zext i16 %5 to i64, !dbg !9937
  %arrayidx = getelementptr [63 x %struct.fbcon_display], [63 x %struct.fbcon_display]* @fb_display, i64 0, i64 %idxprom, !dbg !9937
  store %struct.fbcon_display* %arrayidx, %struct.fbcon_display** %p, align 8, !dbg !9934
  call void @llvm.dbg.declare(metadata i32* %logo, metadata !9938, metadata !DIExpression()), !dbg !9939
  store i32 1, i32* %logo, align 4, !dbg !9939
  call void @llvm.dbg.declare(metadata i32* %new_rows, metadata !9940, metadata !DIExpression()), !dbg !9941
  call void @llvm.dbg.declare(metadata i32* %new_cols, metadata !9942, metadata !DIExpression()), !dbg !9943
  call void @llvm.dbg.declare(metadata i32* %rows, metadata !9944, metadata !DIExpression()), !dbg !9945
  call void @llvm.dbg.declare(metadata i32* %cols, metadata !9946, metadata !DIExpression()), !dbg !9947
  call void @llvm.dbg.declare(metadata i32* %charcnt, metadata !9948, metadata !DIExpression()), !dbg !9949
  store i32 256, i32* %charcnt, align 4, !dbg !9949
  call void @llvm.dbg.declare(metadata i32* %cap, metadata !9950, metadata !DIExpression()), !dbg !9951
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9952, metadata !DIExpression()), !dbg !9953
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !9954, metadata !DIExpression()), !dbg !9957
  %6 = load i32, i32* @info_idx, align 4, !dbg !9957
  %cmp = icmp eq i32 %6, -1, !dbg !9957
  %lnot = xor i1 %cmp, true, !dbg !9957
  %lnot1 = xor i1 %lnot, true, !dbg !9957
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !9957
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !9957
  %7 = load i32, i32* %__ret_warn_on, align 4, !dbg !9958
  %tobool = icmp ne i32 %7, 0, !dbg !9958
  %lnot2 = xor i1 %tobool, true, !dbg !9958
  %lnot4 = xor i1 %lnot2, true, !dbg !9958
  %lnot.ext5 = zext i1 %lnot4 to i32, !dbg !9958
  %conv = sext i32 %lnot.ext5 to i64, !dbg !9958
  %tobool6 = icmp ne i64 %conv, 0, !dbg !9958
  br i1 %tobool6, label %if.then, label %if.end, !dbg !9957

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !9958

do.body:                                          ; preds = %if.then
  br label %do.body7, !dbg !9960

do.body7:                                         ; preds = %do.body
  br label %do.end, !dbg !9962

do.end:                                           ; preds = %do.body7
  br label %do.body8, !dbg !9960

do.body8:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str, i64 0, i64 0), i32 1038, i32 2305, i64 12) #12, !dbg !9964, !srcloc !9966
  br label %do.end9, !dbg !9964

do.end9:                                          ; preds = %do.body8
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 248) #12, !dbg !9967, !srcloc !9969
  br label %do.body10, !dbg !9960

do.body10:                                        ; preds = %do.end9
  br label %do.end11, !dbg !9970

do.end11:                                         ; preds = %do.body10
  br label %do.end12, !dbg !9960

do.end12:                                         ; preds = %do.end11
  br label %if.end, !dbg !9960

if.end:                                           ; preds = %do.end12, %entry
  %8 = load i32, i32* %__ret_warn_on, align 4, !dbg !9957
  %tobool13 = icmp ne i32 %8, 0, !dbg !9957
  %lnot14 = xor i1 %tobool13, true, !dbg !9957
  %lnot16 = xor i1 %lnot14, true, !dbg !9957
  %lnot.ext17 = zext i1 %lnot16 to i32, !dbg !9957
  %conv18 = sext i32 %lnot.ext17 to i64, !dbg !9957
  store i64 %conv18, i64* %tmp, align 8, !dbg !9958
  %9 = load i64, i64* %tmp, align 8, !dbg !9957
  %tobool19 = icmp ne i64 %9, 0, !dbg !9972
  br i1 %tobool19, label %if.then20, label %if.end21, !dbg !9973

if.then20:                                        ; preds = %if.end
  br label %return, !dbg !9974

if.end21:                                         ; preds = %if.end
  %10 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !9975
  %vc_num22 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %10, i32 0, i32 3, !dbg !9977
  %11 = load i16, i16* %vc_num22, align 8, !dbg !9977
  %idxprom23 = zext i16 %11 to i64, !dbg !9978
  %arrayidx24 = getelementptr [63 x i8], [63 x i8]* @con2fb_map, i64 0, i64 %idxprom23, !dbg !9978
  %12 = load i8, i8* %arrayidx24, align 1, !dbg !9978
  %conv25 = sext i8 %12 to i32, !dbg !9978
  %cmp26 = icmp eq i32 %conv25, -1, !dbg !9979
  br i1 %cmp26, label %if.then28, label %if.end33, !dbg !9980

if.then28:                                        ; preds = %if.end21
  %13 = load i32, i32* @info_idx, align 4, !dbg !9981
  %conv29 = trunc i32 %13 to i8, !dbg !9981
  %14 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !9982
  %vc_num30 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %14, i32 0, i32 3, !dbg !9983
  %15 = load i16, i16* %vc_num30, align 8, !dbg !9983
  %idxprom31 = zext i16 %15 to i64, !dbg !9984
  %arrayidx32 = getelementptr [63 x i8], [63 x i8]* @con2fb_map, i64 0, i64 %idxprom31, !dbg !9984
  store i8 %conv29, i8* %arrayidx32, align 1, !dbg !9985
  br label %if.end33, !dbg !9984

if.end33:                                         ; preds = %if.then28, %if.end21
  %16 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !9986
  %vc_num34 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %16, i32 0, i32 3, !dbg !9987
  %17 = load i16, i16* %vc_num34, align 8, !dbg !9987
  %idxprom35 = zext i16 %17 to i64, !dbg !9988
  %arrayidx36 = getelementptr [63 x i8], [63 x i8]* @con2fb_map, i64 0, i64 %idxprom35, !dbg !9988
  %18 = load i8, i8* %arrayidx36, align 1, !dbg !9988
  %idxprom37 = sext i8 %18 to i64, !dbg !9989
  %arrayidx38 = getelementptr [32 x %struct.fb_info*], [32 x %struct.fb_info*]* @registered_fb, i64 0, i64 %idxprom37, !dbg !9989
  %19 = load %struct.fb_info*, %struct.fb_info** %arrayidx38, align 8, !dbg !9989
  store %struct.fb_info* %19, %struct.fb_info** %info, align 8, !dbg !9990
  %20 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !9991
  %flags = getelementptr inbounds %struct.fb_info, %struct.fb_info* %20, i32 0, i32 2, !dbg !9992
  %21 = load i32, i32* %flags, align 8, !dbg !9992
  store i32 %21, i32* %cap, align 4, !dbg !9993
  %22 = load i32, i32* @logo_shown, align 4, !dbg !9994
  %cmp39 = icmp slt i32 %22, 0, !dbg !9996
  br i1 %cmp39, label %land.lhs.true, label %if.end44, !dbg !9997

land.lhs.true:                                    ; preds = %if.end33
  %23 = load i32, i32* getelementptr inbounds ([0 x i32], [0 x i32]* @console_printk, i64 0, i64 0), align 4, !dbg !9998
  %cmp41 = icmp sle i32 %23, 4, !dbg !9999
  br i1 %cmp41, label %if.then43, label %if.end44, !dbg !10000

if.then43:                                        ; preds = %land.lhs.true
  store i32 -3, i32* @logo_shown, align 4, !dbg !10001
  br label %if.end44, !dbg !10002

if.end44:                                         ; preds = %if.then43, %land.lhs.true, %if.end33
  %24 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10003
  %25 = load %struct.vc_data*, %struct.vc_data** %svc, align 8, !dbg !10005
  %cmp45 = icmp ne %struct.vc_data* %24, %25, !dbg !10006
  br i1 %cmp45, label %if.then52, label %lor.lhs.false, !dbg !10007

lor.lhs.false:                                    ; preds = %if.end44
  %26 = load i32, i32* @logo_shown, align 4, !dbg !10008
  %cmp47 = icmp eq i32 %26, -3, !dbg !10009
  br i1 %cmp47, label %if.then52, label %lor.lhs.false49, !dbg !10010

lor.lhs.false49:                                  ; preds = %lor.lhs.false
  %27 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !10011
  %fix = getelementptr inbounds %struct.fb_info, %struct.fb_info* %27, i32 0, i32 7, !dbg !10012
  %type = getelementptr inbounds %struct.fb_fix_screeninfo, %struct.fb_fix_screeninfo* %fix, i32 0, i32 3, !dbg !10013
  %28 = load i32, i32* %type, align 4, !dbg !10013
  %cmp50 = icmp eq i32 %28, 3, !dbg !10014
  br i1 %cmp50, label %if.then52, label %if.end53, !dbg !10015

if.then52:                                        ; preds = %lor.lhs.false49, %lor.lhs.false, %if.end44
  store i32 0, i32* %logo, align 4, !dbg !10016
  br label %if.end53, !dbg !10017

if.end53:                                         ; preds = %if.then52, %lor.lhs.false49
  %29 = load %struct.fbcon_display*, %struct.fbcon_display** %p, align 8, !dbg !10018
  %30 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !10020
  %var = getelementptr inbounds %struct.fb_info, %struct.fb_info* %30, i32 0, i32 6, !dbg !10021
  %31 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !10022
  %call = call i32 @var_to_display(%struct.fbcon_display* %29, %struct.fb_var_screeninfo* %var, %struct.fb_info* %31) #10, !dbg !10023
  %tobool54 = icmp ne i32 %call, 0, !dbg !10023
  br i1 %tobool54, label %if.then55, label %if.end56, !dbg !10024

if.then55:                                        ; preds = %if.end53
  br label %return, !dbg !10025

if.end56:                                         ; preds = %if.end53
  %32 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !10026
  %fbcon_par = getelementptr inbounds %struct.fb_info, %struct.fb_info* %32, i32 0, i32 29, !dbg !10028
  %33 = load i8*, i8** %fbcon_par, align 8, !dbg !10028
  %tobool57 = icmp ne i8* %33, null, !dbg !10026
  br i1 %tobool57, label %if.end62, label %if.then58, !dbg !10029

if.then58:                                        ; preds = %if.end56
  %34 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10030
  %35 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !10031
  %36 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10032
  %vc_num59 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %36, i32 0, i32 3, !dbg !10033
  %37 = load i16, i16* %vc_num59, align 8, !dbg !10033
  %conv60 = zext i16 %37 to i32, !dbg !10032
  %call61 = call i32 @con2fb_acquire_newinfo(%struct.vc_data* %34, %struct.fb_info* %35, i32 %conv60, i32 -1) #10, !dbg !10034
  br label %if.end62, !dbg !10034

if.end62:                                         ; preds = %if.then58, %if.end56
  %38 = load i32, i32* @fg_console, align 4, !dbg !10035
  %idxprom63 = sext i32 %38 to i64, !dbg !10036
  %arrayidx64 = getelementptr [63 x %struct.fbcon_display], [63 x %struct.fbcon_display]* @fb_display, i64 0, i64 %idxprom63, !dbg !10036
  store %struct.fbcon_display* %arrayidx64, %struct.fbcon_display** %t, align 8, !dbg !10037
  %39 = load %struct.fbcon_display*, %struct.fbcon_display** %p, align 8, !dbg !10038
  %fontdata = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %39, i32 0, i32 0, !dbg !10040
  %40 = load i8*, i8** %fontdata, align 8, !dbg !10040
  %tobool65 = icmp ne i8* %40, null, !dbg !10038
  br i1 %tobool65, label %if.end110, label %if.then66, !dbg !10041

if.then66:                                        ; preds = %if.end62
  %41 = load %struct.fbcon_display*, %struct.fbcon_display** %t, align 8, !dbg !10042
  %fontdata67 = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %41, i32 0, i32 0, !dbg !10045
  %42 = load i8*, i8** %fontdata67, align 8, !dbg !10045
  %tobool68 = icmp ne i8* %42, null, !dbg !10042
  br i1 %tobool68, label %if.then69, label %if.else, !dbg !10046

if.then69:                                        ; preds = %if.then66
  call void @llvm.dbg.declare(metadata %struct.vc_data** %fvc, metadata !10047, metadata !DIExpression()), !dbg !10049
  %43 = load i32, i32* @fg_console, align 4, !dbg !10050
  %idxprom70 = sext i32 %43 to i64, !dbg !10051
  %arrayidx71 = getelementptr [63 x %struct.vc], [63 x %struct.vc]* @vc_cons, i64 0, i64 %idxprom70, !dbg !10051
  %d = getelementptr inbounds %struct.vc, %struct.vc* %arrayidx71, i32 0, i32 0, !dbg !10052
  %44 = load %struct.vc_data*, %struct.vc_data** %d, align 8, !dbg !10052
  store %struct.vc_data* %44, %struct.vc_data** %fvc, align 8, !dbg !10049
  %45 = load %struct.vc_data*, %struct.vc_data** %fvc, align 8, !dbg !10053
  %vc_font = getelementptr inbounds %struct.vc_data, %struct.vc_data* %45, i32 0, i32 27, !dbg !10054
  %data = getelementptr inbounds %struct.console_font, %struct.console_font* %vc_font, i32 0, i32 3, !dbg !10055
  %46 = load i8*, i8** %data, align 8, !dbg !10055
  %47 = load %struct.fbcon_display*, %struct.fbcon_display** %p, align 8, !dbg !10056
  %fontdata72 = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %47, i32 0, i32 0, !dbg !10057
  store i8* %46, i8** %fontdata72, align 8, !dbg !10058
  %48 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10059
  %vc_font73 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %48, i32 0, i32 27, !dbg !10060
  %data74 = getelementptr inbounds %struct.console_font, %struct.console_font* %vc_font73, i32 0, i32 3, !dbg !10061
  store i8* %46, i8** %data74, align 8, !dbg !10062
  %49 = load %struct.vc_data*, %struct.vc_data** %fvc, align 8, !dbg !10063
  %vc_font75 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %49, i32 0, i32 27, !dbg !10064
  %width = getelementptr inbounds %struct.console_font, %struct.console_font* %vc_font75, i32 0, i32 0, !dbg !10065
  %50 = load i32, i32* %width, align 8, !dbg !10065
  %51 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10066
  %vc_font76 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %51, i32 0, i32 27, !dbg !10067
  %width77 = getelementptr inbounds %struct.console_font, %struct.console_font* %vc_font76, i32 0, i32 0, !dbg !10068
  store i32 %50, i32* %width77, align 8, !dbg !10069
  %52 = load %struct.vc_data*, %struct.vc_data** %fvc, align 8, !dbg !10070
  %vc_font78 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %52, i32 0, i32 27, !dbg !10071
  %height = getelementptr inbounds %struct.console_font, %struct.console_font* %vc_font78, i32 0, i32 1, !dbg !10072
  %53 = load i32, i32* %height, align 4, !dbg !10072
  %54 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10073
  %vc_font79 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %54, i32 0, i32 27, !dbg !10074
  %height80 = getelementptr inbounds %struct.console_font, %struct.console_font* %vc_font79, i32 0, i32 1, !dbg !10075
  store i32 %53, i32* %height80, align 4, !dbg !10076
  %55 = load %struct.fbcon_display*, %struct.fbcon_display** %t, align 8, !dbg !10077
  %userfont = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %55, i32 0, i32 1, !dbg !10078
  %56 = load i32, i32* %userfont, align 8, !dbg !10078
  %57 = load %struct.fbcon_display*, %struct.fbcon_display** %p, align 8, !dbg !10079
  %userfont81 = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %57, i32 0, i32 1, !dbg !10080
  store i32 %56, i32* %userfont81, align 8, !dbg !10081
  %58 = load %struct.fbcon_display*, %struct.fbcon_display** %p, align 8, !dbg !10082
  %userfont82 = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %58, i32 0, i32 1, !dbg !10084
  %59 = load i32, i32* %userfont82, align 8, !dbg !10084
  %tobool83 = icmp ne i32 %59, 0, !dbg !10082
  br i1 %tobool83, label %if.then84, label %if.end87, !dbg !10085

if.then84:                                        ; preds = %if.then69
  %60 = load %struct.fbcon_display*, %struct.fbcon_display** %p, align 8, !dbg !10086
  %fontdata85 = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %60, i32 0, i32 0, !dbg !10086
  %61 = load i8*, i8** %fontdata85, align 8, !dbg !10086
  %62 = bitcast i8* %61 to i32*, !dbg !10086
  %arrayidx86 = getelementptr i32, i32* %62, i64 -1, !dbg !10086
  %63 = load i32, i32* %arrayidx86, align 4, !dbg !10087
  %inc = add i32 %63, 1, !dbg !10087
  store i32 %inc, i32* %arrayidx86, align 4, !dbg !10087
  br label %if.end87, !dbg !10086

if.end87:                                         ; preds = %if.then84, %if.then69
  br label %if.end109, !dbg !10088

if.else:                                          ; preds = %if.then66
  call void @llvm.dbg.declare(metadata %struct.font_desc** %font, metadata !10089, metadata !DIExpression()), !dbg !10091
  store %struct.font_desc* null, %struct.font_desc** %font, align 8, !dbg !10091
  %64 = load i8, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @fontname, i64 0, i64 0), align 16, !dbg !10092
  %tobool88 = icmp ne i8 %64, 0, !dbg !10092
  br i1 %tobool88, label %lor.lhs.false89, label %if.then92, !dbg !10094

lor.lhs.false89:                                  ; preds = %if.else
  %call90 = call %struct.font_desc* @find_font(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @fontname, i64 0, i64 0)) #10, !dbg !10095
  store %struct.font_desc* %call90, %struct.font_desc** %font, align 8, !dbg !10096
  %tobool91 = icmp ne %struct.font_desc* %call90, null, !dbg !10096
  br i1 %tobool91, label %if.end97, label %if.then92, !dbg !10097

if.then92:                                        ; preds = %lor.lhs.false89, %if.else
  %65 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !10098
  %var93 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %65, i32 0, i32 6, !dbg !10099
  %xres = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %var93, i32 0, i32 0, !dbg !10100
  %66 = load i32, i32* %xres, align 8, !dbg !10100
  %67 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !10101
  %var94 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %67, i32 0, i32 6, !dbg !10102
  %yres = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %var94, i32 0, i32 1, !dbg !10103
  %68 = load i32, i32* %yres, align 4, !dbg !10103
  %69 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !10104
  %pixmap = getelementptr inbounds %struct.fb_info, %struct.fb_info* %69, i32 0, i32 10, !dbg !10105
  %blit_x = getelementptr inbounds %struct.fb_pixmap, %struct.fb_pixmap* %pixmap, i32 0, i32 7, !dbg !10106
  %70 = load i32, i32* %blit_x, align 8, !dbg !10106
  %71 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !10107
  %pixmap95 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %71, i32 0, i32 10, !dbg !10108
  %blit_y = getelementptr inbounds %struct.fb_pixmap, %struct.fb_pixmap* %pixmap95, i32 0, i32 8, !dbg !10109
  %72 = load i32, i32* %blit_y, align 4, !dbg !10109
  %call96 = call %struct.font_desc* @get_default_font(i32 %66, i32 %68, i32 %70, i32 %72) #10, !dbg !10110
  store %struct.font_desc* %call96, %struct.font_desc** %font, align 8, !dbg !10111
  br label %if.end97, !dbg !10112

if.end97:                                         ; preds = %if.then92, %lor.lhs.false89
  %73 = load %struct.font_desc*, %struct.font_desc** %font, align 8, !dbg !10113
  %width98 = getelementptr inbounds %struct.font_desc, %struct.font_desc* %73, i32 0, i32 2, !dbg !10114
  %74 = load i32, i32* %width98, align 8, !dbg !10114
  %75 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10115
  %vc_font99 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %75, i32 0, i32 27, !dbg !10116
  %width100 = getelementptr inbounds %struct.console_font, %struct.console_font* %vc_font99, i32 0, i32 0, !dbg !10117
  store i32 %74, i32* %width100, align 8, !dbg !10118
  %76 = load %struct.font_desc*, %struct.font_desc** %font, align 8, !dbg !10119
  %height101 = getelementptr inbounds %struct.font_desc, %struct.font_desc* %76, i32 0, i32 3, !dbg !10120
  %77 = load i32, i32* %height101, align 4, !dbg !10120
  %78 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10121
  %vc_font102 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %78, i32 0, i32 27, !dbg !10122
  %height103 = getelementptr inbounds %struct.console_font, %struct.console_font* %vc_font102, i32 0, i32 1, !dbg !10123
  store i32 %77, i32* %height103, align 4, !dbg !10124
  %79 = load %struct.font_desc*, %struct.font_desc** %font, align 8, !dbg !10125
  %data104 = getelementptr inbounds %struct.font_desc, %struct.font_desc* %79, i32 0, i32 4, !dbg !10126
  %80 = load i8*, i8** %data104, align 8, !dbg !10126
  %81 = load %struct.fbcon_display*, %struct.fbcon_display** %p, align 8, !dbg !10127
  %fontdata105 = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %81, i32 0, i32 0, !dbg !10128
  store i8* %80, i8** %fontdata105, align 8, !dbg !10129
  %82 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10130
  %vc_font106 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %82, i32 0, i32 27, !dbg !10131
  %data107 = getelementptr inbounds %struct.console_font, %struct.console_font* %vc_font106, i32 0, i32 3, !dbg !10132
  store i8* %80, i8** %data107, align 8, !dbg !10133
  %83 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10134
  %vc_font108 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %83, i32 0, i32 27, !dbg !10135
  %charcount = getelementptr inbounds %struct.console_font, %struct.console_font* %vc_font108, i32 0, i32 2, !dbg !10136
  store i32 256, i32* %charcount, align 8, !dbg !10137
  br label %if.end109

if.end109:                                        ; preds = %if.end97, %if.end87
  br label %if.end110, !dbg !10138

if.end110:                                        ; preds = %if.end109, %if.end62
  %84 = load %struct.fbcon_display*, %struct.fbcon_display** %p, align 8, !dbg !10139
  %userfont111 = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %84, i32 0, i32 1, !dbg !10141
  %85 = load i32, i32* %userfont111, align 8, !dbg !10141
  %tobool112 = icmp ne i32 %85, 0, !dbg !10139
  br i1 %tobool112, label %if.then113, label %if.end116, !dbg !10142

if.then113:                                       ; preds = %if.end110
  %86 = load %struct.fbcon_display*, %struct.fbcon_display** %p, align 8, !dbg !10143
  %fontdata114 = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %86, i32 0, i32 0, !dbg !10143
  %87 = load i8*, i8** %fontdata114, align 8, !dbg !10143
  %88 = bitcast i8* %87 to i32*, !dbg !10143
  %arrayidx115 = getelementptr i32, i32* %88, i64 -3, !dbg !10143
  %89 = load i32, i32* %arrayidx115, align 4, !dbg !10143
  store i32 %89, i32* %charcnt, align 4, !dbg !10144
  br label %if.end116, !dbg !10145

if.end116:                                        ; preds = %if.then113, %if.end110
  %90 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !10146
  %var117 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %90, i32 0, i32 6, !dbg !10147
  %91 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !10148
  %fix118 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %91, i32 0, i32 7, !dbg !10149
  %call119 = call i32 @fb_get_color_depth(%struct.fb_var_screeninfo* %var117, %struct.fb_fix_screeninfo* %fix118) #10, !dbg !10150
  %cmp120 = icmp ne i32 %call119, 1, !dbg !10151
  %conv121 = zext i1 %cmp120 to i32, !dbg !10151
  %92 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10152
  %vc_can_do_color = getelementptr inbounds %struct.vc_data, %struct.vc_data* %92, i32 0, i32 36, !dbg !10153
  %93 = trunc i32 %conv121 to i16, !dbg !10154
  %bf.load = load i16, i16* %vc_can_do_color, align 8, !dbg !10154
  %bf.value = and i16 %93, 1, !dbg !10154
  %bf.shl = shl i16 %bf.value, 11, !dbg !10154
  %bf.clear = and i16 %bf.load, -2049, !dbg !10154
  %bf.set = or i16 %bf.clear, %bf.shl, !dbg !10154
  store i16 %bf.set, i16* %vc_can_do_color, align 8, !dbg !10154
  %bf.result.cast = zext i16 %bf.value to i32, !dbg !10154
  %94 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10155
  %vc_can_do_color122 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %94, i32 0, i32 36, !dbg !10156
  %bf.load123 = load i16, i16* %vc_can_do_color122, align 8, !dbg !10156
  %bf.lshr = lshr i16 %bf.load123, 11, !dbg !10156
  %bf.clear124 = and i16 %bf.lshr, 1, !dbg !10156
  %bf.cast = zext i16 %bf.clear124 to i32, !dbg !10156
  %tobool125 = icmp ne i32 %bf.cast, 0, !dbg !10155
  %95 = zext i1 %tobool125 to i64, !dbg !10155
  %cond = select i1 %tobool125, i32 30464, i32 2048, !dbg !10155
  %conv126 = trunc i32 %cond to i16, !dbg !10155
  %96 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10157
  %vc_complement_mask = getelementptr inbounds %struct.vc_data, %struct.vc_data* %96, i32 0, i32 23, !dbg !10158
  store i16 %conv126, i16* %vc_complement_mask, align 8, !dbg !10159
  %97 = load i32, i32* %charcnt, align 4, !dbg !10160
  %cmp127 = icmp eq i32 %97, 256, !dbg !10162
  br i1 %cmp127, label %if.then129, label %if.else130, !dbg !10163

if.then129:                                       ; preds = %if.end116
  %98 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10164
  %vc_hi_font_mask = getelementptr inbounds %struct.vc_data, %struct.vc_data* %98, i32 0, i32 26, !dbg !10166
  store i16 0, i16* %vc_hi_font_mask, align 8, !dbg !10167
  br label %if.end143, !dbg !10168

if.else130:                                       ; preds = %if.end116
  %99 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10169
  %vc_hi_font_mask131 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %99, i32 0, i32 26, !dbg !10171
  store i16 256, i16* %vc_hi_font_mask131, align 8, !dbg !10172
  %100 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10173
  %vc_can_do_color132 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %100, i32 0, i32 36, !dbg !10175
  %bf.load133 = load i16, i16* %vc_can_do_color132, align 8, !dbg !10175
  %bf.lshr134 = lshr i16 %bf.load133, 11, !dbg !10175
  %bf.clear135 = and i16 %bf.lshr134, 1, !dbg !10175
  %bf.cast136 = zext i16 %bf.clear135 to i32, !dbg !10175
  %tobool137 = icmp ne i32 %bf.cast136, 0, !dbg !10173
  br i1 %tobool137, label %if.then138, label %if.end142, !dbg !10176

if.then138:                                       ; preds = %if.else130
  %101 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10177
  %vc_complement_mask139 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %101, i32 0, i32 23, !dbg !10178
  %102 = load i16, i16* %vc_complement_mask139, align 8, !dbg !10179
  %conv140 = zext i16 %102 to i32, !dbg !10179
  %shl = shl i32 %conv140, 1, !dbg !10179
  %conv141 = trunc i32 %shl to i16, !dbg !10179
  store i16 %conv141, i16* %vc_complement_mask139, align 8, !dbg !10179
  br label %if.end142, !dbg !10177

if.end142:                                        ; preds = %if.then138, %if.else130
  br label %if.end143

if.end143:                                        ; preds = %if.end142, %if.then129
  %103 = load %struct.vc_data*, %struct.vc_data** %svc, align 8, !dbg !10180
  %vc_uni_pagedir_loc = getelementptr inbounds %struct.vc_data, %struct.vc_data* %103, i32 0, i32 48, !dbg !10182
  %104 = load %struct.uni_pagedir**, %struct.uni_pagedir*** %vc_uni_pagedir_loc, align 8, !dbg !10182
  %105 = load %struct.uni_pagedir*, %struct.uni_pagedir** %104, align 8, !dbg !10183
  %tobool144 = icmp ne %struct.uni_pagedir* %105, null, !dbg !10183
  br i1 %tobool144, label %if.end147, label %if.then145, !dbg !10184

if.then145:                                       ; preds = %if.end143
  %106 = load %struct.vc_data*, %struct.vc_data** %svc, align 8, !dbg !10185
  %call146 = call i32 @con_set_default_unimap(%struct.vc_data* %106) #10, !dbg !10186
  br label %if.end147, !dbg !10186

if.end147:                                        ; preds = %if.then145, %if.end143
  %107 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10187
  %vc_uni_pagedir_loc148 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %107, i32 0, i32 48, !dbg !10189
  %108 = load %struct.uni_pagedir**, %struct.uni_pagedir*** %vc_uni_pagedir_loc148, align 8, !dbg !10189
  %109 = load %struct.uni_pagedir*, %struct.uni_pagedir** %108, align 8, !dbg !10190
  %tobool149 = icmp ne %struct.uni_pagedir* %109, null, !dbg !10190
  br i1 %tobool149, label %if.end152, label %if.then150, !dbg !10191

if.then150:                                       ; preds = %if.end147
  %110 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10192
  %111 = load %struct.vc_data*, %struct.vc_data** %svc, align 8, !dbg !10193
  %call151 = call i32 @con_copy_unimap(%struct.vc_data* %110, %struct.vc_data* %111) #10, !dbg !10194
  br label %if.end152, !dbg !10194

if.end152:                                        ; preds = %if.then150, %if.end147
  %112 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !10195
  %fbcon_par153 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %112, i32 0, i32 29, !dbg !10196
  %113 = load i8*, i8** %fbcon_par153, align 8, !dbg !10196
  %114 = bitcast i8* %113 to %struct.fbcon_ops*, !dbg !10195
  store %struct.fbcon_ops* %114, %struct.fbcon_ops** %ops, align 8, !dbg !10197
  %115 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10198
  %vc_cur_blink_ms = getelementptr inbounds %struct.vc_data, %struct.vc_data* %115, i32 0, i32 45, !dbg !10199
  %116 = load i16, i16* %vc_cur_blink_ms, align 4, !dbg !10199
  %conv154 = zext i16 %116 to i32, !dbg !10198
  store i32 %conv154, i32* %m.addr.i, align 4
  %117 = load i32, i32* %m.addr.i, align 4, !dbg !10200
  %118 = call i1 @llvm.is.constant.i32(i32 %117) #12, !dbg !10201
  br i1 %118, label %if.then.i, label %if.else.i, !dbg !10202

if.then.i:                                        ; preds = %if.end152
  %119 = load i32, i32* %m.addr.i, align 4, !dbg !10203
  %cmp.i = icmp slt i32 %119, 0, !dbg !10204
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !10205

if.then1.i:                                       ; preds = %if.then.i
  store i64 4611686018427387902, i64* %retval.i, align 8, !dbg !10206
  br label %msecs_to_jiffies.exit, !dbg !10206

if.end.i:                                         ; preds = %if.then.i
  %120 = load i32, i32* %m.addr.i, align 4, !dbg !10207
  %call.i = call i64 @_msecs_to_jiffies(i32 %120) #13, !dbg !10208
  store i64 %call.i, i64* %retval.i, align 8, !dbg !10209
  br label %msecs_to_jiffies.exit, !dbg !10209

if.else.i:                                        ; preds = %if.end152
  %121 = load i32, i32* %m.addr.i, align 4, !dbg !10210
  %call2.i = call i64 @__msecs_to_jiffies(i32 %121) #13, !dbg !10211
  store i64 %call2.i, i64* %retval.i, align 8, !dbg !10212
  br label %msecs_to_jiffies.exit, !dbg !10212

msecs_to_jiffies.exit:                            ; preds = %if.then1.i, %if.end.i, %if.else.i
  %122 = load i64, i64* %retval.i, align 8, !dbg !10213
  %conv156 = trunc i64 %122 to i32, !dbg !10214
  %123 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !10215
  %cur_blink_jiffies = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %123, i32 0, i32 13, !dbg !10216
  store i32 %conv156, i32* %cur_blink_jiffies, align 4, !dbg !10217
  %124 = load i32, i32* @initial_rotation, align 4, !dbg !10218
  %125 = load %struct.fbcon_display*, %struct.fbcon_display** %p, align 8, !dbg !10219
  %con_rotate = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %125, i32 0, i32 7, !dbg !10220
  store i32 %124, i32* %con_rotate, align 4, !dbg !10221
  %126 = load %struct.fbcon_display*, %struct.fbcon_display** %p, align 8, !dbg !10222
  %con_rotate157 = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %126, i32 0, i32 7, !dbg !10224
  %127 = load i32, i32* %con_rotate157, align 4, !dbg !10224
  %cmp158 = icmp eq i32 %127, -1, !dbg !10225
  br i1 %cmp158, label %if.then160, label %if.end162, !dbg !10226

if.then160:                                       ; preds = %msecs_to_jiffies.exit
  %128 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !10227
  %fbcon_rotate_hint = getelementptr inbounds %struct.fb_info, %struct.fb_info* %128, i32 0, i32 3, !dbg !10228
  %129 = load i32, i32* %fbcon_rotate_hint, align 4, !dbg !10228
  %130 = load %struct.fbcon_display*, %struct.fbcon_display** %p, align 8, !dbg !10229
  %con_rotate161 = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %130, i32 0, i32 7, !dbg !10230
  store i32 %129, i32* %con_rotate161, align 4, !dbg !10231
  br label %if.end162, !dbg !10229

if.end162:                                        ; preds = %if.then160, %msecs_to_jiffies.exit
  %131 = load %struct.fbcon_display*, %struct.fbcon_display** %p, align 8, !dbg !10232
  %con_rotate163 = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %131, i32 0, i32 7, !dbg !10234
  %132 = load i32, i32* %con_rotate163, align 4, !dbg !10234
  %cmp164 = icmp eq i32 %132, -1, !dbg !10235
  br i1 %cmp164, label %if.then166, label %if.end168, !dbg !10236

if.then166:                                       ; preds = %if.end162
  %133 = load %struct.fbcon_display*, %struct.fbcon_display** %p, align 8, !dbg !10237
  %con_rotate167 = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %133, i32 0, i32 7, !dbg !10238
  store i32 0, i32* %con_rotate167, align 4, !dbg !10239
  br label %if.end168, !dbg !10237

if.end168:                                        ; preds = %if.then166, %if.end162
  %134 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10240
  %135 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !10241
  call void @set_blitting_type(%struct.vc_data* %134, %struct.fb_info* %135) #10, !dbg !10242
  %136 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10243
  %vc_cols = getelementptr inbounds %struct.vc_data, %struct.vc_data* %136, i32 0, i32 4, !dbg !10244
  %137 = load i32, i32* %vc_cols, align 4, !dbg !10244
  store i32 %137, i32* %cols, align 4, !dbg !10245
  %138 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10246
  %vc_rows = getelementptr inbounds %struct.vc_data, %struct.vc_data* %138, i32 0, i32 5, !dbg !10247
  %139 = load i32, i32* %vc_rows, align 8, !dbg !10247
  store i32 %139, i32* %rows, align 4, !dbg !10248
  call void @llvm.dbg.declare(metadata i32* %_r, metadata !10249, metadata !DIExpression()), !dbg !10251
  %140 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !10251
  %var169 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %140, i32 0, i32 6, !dbg !10251
  %xres170 = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %var169, i32 0, i32 0, !dbg !10251
  %141 = load i32, i32* %xres170, align 8, !dbg !10251
  store i32 %141, i32* %_r, align 4, !dbg !10251
  call void @llvm.dbg.declare(metadata i32* %_v, metadata !10252, metadata !DIExpression()), !dbg !10251
  %142 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !10251
  %var171 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %142, i32 0, i32 6, !dbg !10251
  %yres172 = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %var171, i32 0, i32 1, !dbg !10251
  %143 = load i32, i32* %yres172, align 4, !dbg !10251
  store i32 %143, i32* %_v, align 4, !dbg !10251
  %cmp173 = icmp eq i32* %_r, %_v, !dbg !10251
  %conv174 = zext i1 %cmp173 to i32, !dbg !10251
  %144 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !10251
  %rotate = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %144, i32 0, i32 20, !dbg !10251
  %145 = load i32, i32* %rotate, align 8, !dbg !10251
  %cmp176 = icmp eq i32 %145, 0, !dbg !10251
  br i1 %cmp176, label %cond.true, label %lor.lhs.false178, !dbg !10251

lor.lhs.false178:                                 ; preds = %if.end168
  %146 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !10251
  %rotate179 = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %146, i32 0, i32 20, !dbg !10251
  %147 = load i32, i32* %rotate179, align 8, !dbg !10251
  %cmp180 = icmp eq i32 %147, 2, !dbg !10251
  br i1 %cmp180, label %cond.true, label %cond.false, !dbg !10251

cond.true:                                        ; preds = %lor.lhs.false178, %if.end168
  %148 = load i32, i32* %_r, align 4, !dbg !10251
  br label %cond.end, !dbg !10251

cond.false:                                       ; preds = %lor.lhs.false178
  %149 = load i32, i32* %_v, align 4, !dbg !10251
  br label %cond.end, !dbg !10251

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond182 = phi i32 [ %148, %cond.true ], [ %149, %cond.false ], !dbg !10251
  store i32 %cond182, i32* %tmp175, align 4, !dbg !10251
  %150 = load i32, i32* %tmp175, align 4, !dbg !10251
  store i32 %150, i32* %new_cols, align 4, !dbg !10253
  call void @llvm.dbg.declare(metadata i32* %_r183, metadata !10254, metadata !DIExpression()), !dbg !10256
  %151 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !10256
  %var184 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %151, i32 0, i32 6, !dbg !10256
  %yres185 = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %var184, i32 0, i32 1, !dbg !10256
  %152 = load i32, i32* %yres185, align 4, !dbg !10256
  store i32 %152, i32* %_r183, align 4, !dbg !10256
  call void @llvm.dbg.declare(metadata i32* %_v186, metadata !10257, metadata !DIExpression()), !dbg !10256
  %153 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !10256
  %var187 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %153, i32 0, i32 6, !dbg !10256
  %xres188 = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %var187, i32 0, i32 0, !dbg !10256
  %154 = load i32, i32* %xres188, align 8, !dbg !10256
  store i32 %154, i32* %_v186, align 4, !dbg !10256
  %cmp189 = icmp eq i32* %_r183, %_v186, !dbg !10256
  %conv190 = zext i1 %cmp189 to i32, !dbg !10256
  %155 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !10256
  %rotate192 = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %155, i32 0, i32 20, !dbg !10256
  %156 = load i32, i32* %rotate192, align 8, !dbg !10256
  %cmp193 = icmp eq i32 %156, 0, !dbg !10256
  br i1 %cmp193, label %cond.true199, label %lor.lhs.false195, !dbg !10256

lor.lhs.false195:                                 ; preds = %cond.end
  %157 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !10256
  %rotate196 = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %157, i32 0, i32 20, !dbg !10256
  %158 = load i32, i32* %rotate196, align 8, !dbg !10256
  %cmp197 = icmp eq i32 %158, 2, !dbg !10256
  br i1 %cmp197, label %cond.true199, label %cond.false200, !dbg !10256

cond.true199:                                     ; preds = %lor.lhs.false195, %cond.end
  %159 = load i32, i32* %_r183, align 4, !dbg !10256
  br label %cond.end201, !dbg !10256

cond.false200:                                    ; preds = %lor.lhs.false195
  %160 = load i32, i32* %_v186, align 4, !dbg !10256
  br label %cond.end201, !dbg !10256

cond.end201:                                      ; preds = %cond.false200, %cond.true199
  %cond202 = phi i32 [ %159, %cond.true199 ], [ %160, %cond.false200 ], !dbg !10256
  store i32 %cond202, i32* %tmp191, align 4, !dbg !10256
  %161 = load i32, i32* %tmp191, align 4, !dbg !10256
  store i32 %161, i32* %new_rows, align 4, !dbg !10258
  %162 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10259
  %vc_font203 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %162, i32 0, i32 27, !dbg !10260
  %width204 = getelementptr inbounds %struct.console_font, %struct.console_font* %vc_font203, i32 0, i32 0, !dbg !10261
  %163 = load i32, i32* %width204, align 8, !dbg !10261
  %164 = load i32, i32* %new_cols, align 4, !dbg !10262
  %div = udiv i32 %164, %163, !dbg !10262
  store i32 %div, i32* %new_cols, align 4, !dbg !10262
  %165 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10263
  %vc_font205 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %165, i32 0, i32 27, !dbg !10264
  %height206 = getelementptr inbounds %struct.console_font, %struct.console_font* %vc_font205, i32 0, i32 1, !dbg !10265
  %166 = load i32, i32* %height206, align 4, !dbg !10265
  %167 = load i32, i32* %new_rows, align 4, !dbg !10266
  %div207 = udiv i32 %167, %166, !dbg !10266
  store i32 %div207, i32* %new_rows, align 4, !dbg !10266
  %168 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10267
  %call208 = call zeroext i1 @con_is_visible(%struct.vc_data* %168) #10, !dbg !10269
  br i1 %call208, label %land.lhs.true210, label %if.end229, !dbg !10270

land.lhs.true210:                                 ; preds = %cond.end201
  %169 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10271
  %vc_mode = getelementptr inbounds %struct.vc_data, %struct.vc_data* %169, i32 0, i32 16, !dbg !10272
  %170 = load i8, i8* %vc_mode, align 4, !dbg !10272
  %conv211 = zext i8 %170 to i32, !dbg !10271
  %cmp212 = icmp eq i32 %conv211, 0, !dbg !10273
  br i1 %cmp212, label %if.then214, label %if.end229, !dbg !10274

if.then214:                                       ; preds = %land.lhs.true210
  %171 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !10275
  %fbops = getelementptr inbounds %struct.fb_info, %struct.fb_info* %171, i32 0, i32 20, !dbg !10278
  %172 = load %struct.fb_ops*, %struct.fb_ops** %fbops, align 8, !dbg !10278
  %fb_set_par = getelementptr inbounds %struct.fb_ops, %struct.fb_ops* %172, i32 0, i32 6, !dbg !10279
  %173 = load i32 (%struct.fb_info*)*, i32 (%struct.fb_info*)** %fb_set_par, align 8, !dbg !10279
  %tobool215 = icmp ne i32 (%struct.fb_info*)* %173, null, !dbg !10275
  br i1 %tobool215, label %land.lhs.true216, label %if.end227, !dbg !10280

land.lhs.true216:                                 ; preds = %if.then214
  %174 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !10281
  %flags217 = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %174, i32 0, i32 19, !dbg !10282
  %175 = load i32, i32* %flags217, align 4, !dbg !10282
  %and = and i32 %175, 1, !dbg !10283
  %tobool218 = icmp ne i32 %and, 0, !dbg !10283
  br i1 %tobool218, label %if.end227, label %if.then219, !dbg !10284

if.then219:                                       ; preds = %land.lhs.true216
  %176 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !10285
  %fbops220 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %176, i32 0, i32 20, !dbg !10287
  %177 = load %struct.fb_ops*, %struct.fb_ops** %fbops220, align 8, !dbg !10287
  %fb_set_par221 = getelementptr inbounds %struct.fb_ops, %struct.fb_ops* %177, i32 0, i32 6, !dbg !10288
  %178 = load i32 (%struct.fb_info*)*, i32 (%struct.fb_info*)** %fb_set_par221, align 8, !dbg !10288
  %179 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !10289
  %call222 = call i32 %178(%struct.fb_info* %179) #10, !dbg !10285
  store i32 %call222, i32* %ret, align 4, !dbg !10290
  %180 = load i32, i32* %ret, align 4, !dbg !10291
  %tobool223 = icmp ne i32 %180, 0, !dbg !10291
  br i1 %tobool223, label %if.then224, label %if.end226, !dbg !10293

if.then224:                                       ; preds = %if.then219
  %181 = load i32, i32* %ret, align 4, !dbg !10294
  %call225 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.24, i64 0, i64 0), i32 %181) #11, !dbg !10295
  br label %if.end226, !dbg !10295

if.end226:                                        ; preds = %if.then224, %if.then219
  br label %if.end227, !dbg !10296

if.end227:                                        ; preds = %if.end226, %land.lhs.true216, %if.then214
  %182 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !10297
  %flags228 = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %182, i32 0, i32 19, !dbg !10298
  %183 = load i32, i32* %flags228, align 4, !dbg !10299
  %or = or i32 %183, 1, !dbg !10299
  store i32 %or, i32* %flags228, align 4, !dbg !10299
  br label %if.end229, !dbg !10300

if.end229:                                        ; preds = %if.end227, %land.lhs.true210, %cond.end201
  %184 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !10301
  %graphics = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %184, i32 0, i32 17, !dbg !10302
  store i32 0, i32* %graphics, align 4, !dbg !10303
  %185 = load i32, i32* %cap, align 4, !dbg !10304
  %and230 = and i32 %185, 256, !dbg !10306
  %tobool231 = icmp ne i32 %and230, 0, !dbg !10306
  br i1 %tobool231, label %land.lhs.true232, label %if.else236, !dbg !10307

land.lhs.true232:                                 ; preds = %if.end229
  %186 = load i32, i32* %cap, align 4, !dbg !10308
  %and233 = and i32 %186, 2, !dbg !10309
  %tobool234 = icmp ne i32 %and233, 0, !dbg !10309
  br i1 %tobool234, label %if.else236, label %if.then235, !dbg !10310

if.then235:                                       ; preds = %land.lhs.true232
  %187 = load %struct.fbcon_display*, %struct.fbcon_display** %p, align 8, !dbg !10311
  %scrollmode = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %187, i32 0, i32 2, !dbg !10312
  store i16 1, i16* %scrollmode, align 4, !dbg !10313
  br label %if.end238, !dbg !10311

if.else236:                                       ; preds = %land.lhs.true232, %if.end229
  %188 = load %struct.fbcon_display*, %struct.fbcon_display** %p, align 8, !dbg !10314
  %scrollmode237 = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %188, i32 0, i32 2, !dbg !10315
  store i16 4, i16* %scrollmode237, align 4, !dbg !10316
  br label %if.end238

if.end238:                                        ; preds = %if.else236, %if.then235
  %189 = load i32, i32* %init.addr, align 4, !dbg !10317
  %tobool239 = icmp ne i32 %189, 0, !dbg !10317
  br i1 %tobool239, label %if.then240, label %if.else243, !dbg !10319

if.then240:                                       ; preds = %if.end238
  %190 = load i32, i32* %new_cols, align 4, !dbg !10320
  %191 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10322
  %vc_cols241 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %191, i32 0, i32 4, !dbg !10323
  store i32 %190, i32* %vc_cols241, align 4, !dbg !10324
  %192 = load i32, i32* %new_rows, align 4, !dbg !10325
  %193 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10326
  %vc_rows242 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %193, i32 0, i32 5, !dbg !10327
  store i32 %192, i32* %vc_rows242, align 8, !dbg !10328
  br label %if.end245, !dbg !10329

if.else243:                                       ; preds = %if.end238
  %194 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10330
  %195 = load i32, i32* %new_cols, align 4, !dbg !10331
  %196 = load i32, i32* %new_rows, align 4, !dbg !10332
  %call244 = call i32 @vc_resize(%struct.vc_data* %194, i32 %195, i32 %196) #10, !dbg !10333
  br label %if.end245

if.end245:                                        ; preds = %if.else243, %if.then240
  %197 = load i32, i32* %logo, align 4, !dbg !10334
  %tobool246 = icmp ne i32 %197, 0, !dbg !10334
  br i1 %tobool246, label %if.then247, label %if.end248, !dbg !10336

if.then247:                                       ; preds = %if.end245
  %198 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10337
  %199 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !10338
  %200 = load i32, i32* %cols, align 4, !dbg !10339
  %201 = load i32, i32* %rows, align 4, !dbg !10340
  %202 = load i32, i32* %new_cols, align 4, !dbg !10341
  %203 = load i32, i32* %new_rows, align 4, !dbg !10342
  call void @fbcon_prepare_logo(%struct.vc_data* %198, %struct.fb_info* %199, i32 %200, i32 %201, i32 %202, i32 %203) #10, !dbg !10343
  br label %if.end248, !dbg !10343

if.end248:                                        ; preds = %if.then247, %if.end245
  %204 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !10344
  %rotate_font = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %204, i32 0, i32 6, !dbg !10346
  %205 = load i32 (%struct.fb_info*, %struct.vc_data*)*, i32 (%struct.fb_info*, %struct.vc_data*)** %rotate_font, align 8, !dbg !10346
  %tobool249 = icmp ne i32 (%struct.fb_info*, %struct.vc_data*)* %205, null, !dbg !10344
  br i1 %tobool249, label %land.lhs.true250, label %if.end256, !dbg !10347

land.lhs.true250:                                 ; preds = %if.end248
  %206 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !10348
  %rotate_font251 = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %206, i32 0, i32 6, !dbg !10349
  %207 = load i32 (%struct.fb_info*, %struct.vc_data*)*, i32 (%struct.fb_info*, %struct.vc_data*)** %rotate_font251, align 8, !dbg !10349
  %208 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !10350
  %209 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10351
  %call252 = call i32 %207(%struct.fb_info* %208, %struct.vc_data* %209) #10, !dbg !10348
  %tobool253 = icmp ne i32 %call252, 0, !dbg !10348
  br i1 %tobool253, label %if.then254, label %if.end256, !dbg !10352

if.then254:                                       ; preds = %land.lhs.true250
  %210 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !10353
  %rotate255 = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %210, i32 0, i32 20, !dbg !10355
  store i32 0, i32* %rotate255, align 8, !dbg !10356
  %211 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10357
  %212 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !10358
  call void @set_blitting_type(%struct.vc_data* %211, %struct.fb_info* %212) #10, !dbg !10359
  br label %if.end256, !dbg !10360

if.end256:                                        ; preds = %if.then254, %land.lhs.true250, %if.end248
  %213 = load i32, i32* @fg_console, align 4, !dbg !10361
  %idxprom257 = sext i32 %213 to i64, !dbg !10362
  %arrayidx258 = getelementptr [63 x %struct.fbcon_display], [63 x %struct.fbcon_display]* @fb_display, i64 0, i64 %idxprom257, !dbg !10362
  %214 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !10363
  %p259 = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %214, i32 0, i32 10, !dbg !10364
  store %struct.fbcon_display* %arrayidx258, %struct.fbcon_display** %p259, align 8, !dbg !10365
  br label %return, !dbg !10366

return:                                           ; preds = %if.end256, %if.then55, %if.then20
  ret void, !dbg !10366
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @fbcon_deinit(%struct.vc_data* %vc) #1 !dbg !10367 {
entry:
  %vc.addr = alloca %struct.vc_data*, align 8
  %p = alloca %struct.fbcon_display*, align 8
  %info = alloca %struct.fb_info*, align 8
  %ops = alloca %struct.fbcon_ops*, align 8
  %idx = alloca i32, align 4
  %free_font = alloca i8, align 1
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !10368, metadata !DIExpression()), !dbg !10369
  call void @llvm.dbg.declare(metadata %struct.fbcon_display** %p, metadata !10370, metadata !DIExpression()), !dbg !10371
  %0 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10372
  %vc_num = getelementptr inbounds %struct.vc_data, %struct.vc_data* %0, i32 0, i32 3, !dbg !10373
  %1 = load i16, i16* %vc_num, align 8, !dbg !10373
  %idxprom = zext i16 %1 to i64, !dbg !10374
  %arrayidx = getelementptr [63 x %struct.fbcon_display], [63 x %struct.fbcon_display]* @fb_display, i64 0, i64 %idxprom, !dbg !10374
  store %struct.fbcon_display* %arrayidx, %struct.fbcon_display** %p, align 8, !dbg !10371
  call void @llvm.dbg.declare(metadata %struct.fb_info** %info, metadata !10375, metadata !DIExpression()), !dbg !10376
  call void @llvm.dbg.declare(metadata %struct.fbcon_ops** %ops, metadata !10377, metadata !DIExpression()), !dbg !10378
  call void @llvm.dbg.declare(metadata i32* %idx, metadata !10379, metadata !DIExpression()), !dbg !10380
  call void @llvm.dbg.declare(metadata i8* %free_font, metadata !10381, metadata !DIExpression()), !dbg !10382
  store i8 1, i8* %free_font, align 1, !dbg !10382
  %2 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10383
  %vc_num1 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %2, i32 0, i32 3, !dbg !10384
  %3 = load i16, i16* %vc_num1, align 8, !dbg !10384
  %idxprom2 = zext i16 %3 to i64, !dbg !10385
  %arrayidx3 = getelementptr [63 x i8], [63 x i8]* @con2fb_map, i64 0, i64 %idxprom2, !dbg !10385
  %4 = load i8, i8* %arrayidx3, align 1, !dbg !10385
  %conv = sext i8 %4 to i32, !dbg !10385
  store i32 %conv, i32* %idx, align 4, !dbg !10386
  %5 = load i32, i32* %idx, align 4, !dbg !10387
  %cmp = icmp eq i32 %5, -1, !dbg !10389
  br i1 %cmp, label %if.then, label %if.end, !dbg !10390

if.then:                                          ; preds = %entry
  br label %finished, !dbg !10391

if.end:                                           ; preds = %entry
  %6 = load i32, i32* %idx, align 4, !dbg !10392
  %idxprom5 = sext i32 %6 to i64, !dbg !10393
  %arrayidx6 = getelementptr [32 x %struct.fb_info*], [32 x %struct.fb_info*]* @registered_fb, i64 0, i64 %idxprom5, !dbg !10393
  %7 = load %struct.fb_info*, %struct.fb_info** %arrayidx6, align 8, !dbg !10393
  store %struct.fb_info* %7, %struct.fb_info** %info, align 8, !dbg !10394
  %8 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !10395
  %tobool = icmp ne %struct.fb_info* %8, null, !dbg !10395
  br i1 %tobool, label %if.end8, label %if.then7, !dbg !10397

if.then7:                                         ; preds = %if.end
  br label %finished, !dbg !10398

if.end8:                                          ; preds = %if.end
  %9 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !10399
  %flags = getelementptr inbounds %struct.fb_info, %struct.fb_info* %9, i32 0, i32 2, !dbg !10401
  %10 = load i32, i32* %flags, align 8, !dbg !10401
  %and = and i32 %10, 524288, !dbg !10402
  %tobool9 = icmp ne i32 %and, 0, !dbg !10402
  br i1 %tobool9, label %if.then10, label %if.end11, !dbg !10403

if.then10:                                        ; preds = %if.end8
  store i8 0, i8* %free_font, align 1, !dbg !10404
  br label %if.end11, !dbg !10405

if.end11:                                         ; preds = %if.then10, %if.end8
  %11 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !10406
  %fbcon_par = getelementptr inbounds %struct.fb_info, %struct.fb_info* %11, i32 0, i32 29, !dbg !10407
  %12 = load i8*, i8** %fbcon_par, align 8, !dbg !10407
  %13 = bitcast i8* %12 to %struct.fbcon_ops*, !dbg !10406
  store %struct.fbcon_ops* %13, %struct.fbcon_ops** %ops, align 8, !dbg !10408
  %14 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !10409
  %tobool12 = icmp ne %struct.fbcon_ops* %14, null, !dbg !10409
  br i1 %tobool12, label %if.end14, label %if.then13, !dbg !10411

if.then13:                                        ; preds = %if.end11
  br label %finished, !dbg !10412

if.end14:                                         ; preds = %if.end11
  %15 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10413
  %call = call zeroext i1 @con_is_visible(%struct.vc_data* %15) #10, !dbg !10415
  br i1 %call, label %if.then15, label %if.end16, !dbg !10416

if.then15:                                        ; preds = %if.end14
  %16 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !10417
  call void @fbcon_del_cursor_timer(%struct.fb_info* %16) #10, !dbg !10418
  br label %if.end16, !dbg !10418

if.end16:                                         ; preds = %if.then15, %if.end14
  %17 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !10419
  %flags17 = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %17, i32 0, i32 19, !dbg !10420
  %18 = load i32, i32* %flags17, align 4, !dbg !10421
  %and18 = and i32 %18, -2, !dbg !10421
  store i32 %and18, i32* %flags17, align 4, !dbg !10421
  br label %finished, !dbg !10419

finished:                                         ; preds = %if.end16, %if.then13, %if.then7, %if.then
  call void @llvm.dbg.label(metadata !10422), !dbg !10423
  %19 = load %struct.fbcon_display*, %struct.fbcon_display** %p, align 8, !dbg !10424
  %20 = load i8, i8* %free_font, align 1, !dbg !10425
  %tobool19 = trunc i8 %20 to i1, !dbg !10425
  call void @fbcon_free_font(%struct.fbcon_display* %19, i1 zeroext %tobool19) #10, !dbg !10426
  %21 = load i8, i8* %free_font, align 1, !dbg !10427
  %tobool20 = trunc i8 %21 to i1, !dbg !10427
  br i1 %tobool20, label %if.then21, label %if.end22, !dbg !10429

if.then21:                                        ; preds = %finished
  %22 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10430
  %vc_font = getelementptr inbounds %struct.vc_data, %struct.vc_data* %22, i32 0, i32 27, !dbg !10431
  %data = getelementptr inbounds %struct.console_font, %struct.console_font* %vc_font, i32 0, i32 3, !dbg !10432
  store i8* null, i8** %data, align 8, !dbg !10433
  br label %if.end22, !dbg !10430

if.end22:                                         ; preds = %if.then21, %finished
  %23 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10434
  %vc_hi_font_mask = getelementptr inbounds %struct.vc_data, %struct.vc_data* %23, i32 0, i32 26, !dbg !10436
  %24 = load i16, i16* %vc_hi_font_mask, align 8, !dbg !10436
  %conv23 = zext i16 %24 to i32, !dbg !10434
  %tobool24 = icmp ne i32 %conv23, 0, !dbg !10434
  br i1 %tobool24, label %land.lhs.true, label %if.end27, !dbg !10437

land.lhs.true:                                    ; preds = %if.end22
  %25 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10438
  %vc_screenbuf = getelementptr inbounds %struct.vc_data, %struct.vc_data* %25, i32 0, i32 14, !dbg !10439
  %26 = load i16*, i16** %vc_screenbuf, align 8, !dbg !10439
  %tobool25 = icmp ne i16* %26, null, !dbg !10438
  br i1 %tobool25, label %if.then26, label %if.end27, !dbg !10440

if.then26:                                        ; preds = %land.lhs.true
  %27 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10441
  call void @set_vc_hi_font(%struct.vc_data* %27, i1 zeroext false) #10, !dbg !10442
  br label %if.end27, !dbg !10442

if.end27:                                         ; preds = %if.then26, %land.lhs.true, %if.end22
  %call28 = call i32 @con_is_bound(%struct.consw* @fb_con) #10, !dbg !10443
  %tobool29 = icmp ne i32 %call28, 0, !dbg !10443
  br i1 %tobool29, label %if.end31, label %if.then30, !dbg !10445

if.then30:                                        ; preds = %if.end27
  call void @fbcon_exit() #10, !dbg !10446
  br label %if.end31, !dbg !10446

if.end31:                                         ; preds = %if.then30, %if.end27
  %28 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10447
  %vc_num32 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %28, i32 0, i32 3, !dbg !10449
  %29 = load i16, i16* %vc_num32, align 8, !dbg !10449
  %conv33 = zext i16 %29 to i32, !dbg !10447
  %30 = load i32, i32* @logo_shown, align 4, !dbg !10450
  %cmp34 = icmp eq i32 %conv33, %30, !dbg !10451
  br i1 %cmp34, label %if.then36, label %if.end37, !dbg !10452

if.then36:                                        ; preds = %if.end31
  store i32 -1, i32* @logo_shown, align 4, !dbg !10453
  br label %if.end37, !dbg !10454

if.end37:                                         ; preds = %if.then36, %if.end31
  ret void, !dbg !10455
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @fbcon_clear(%struct.vc_data* %vc, i32 %sy, i32 %sx, i32 %height, i32 %width) #1 !dbg !10456 {
entry:
  %vc.addr = alloca %struct.vc_data*, align 8
  %sy.addr = alloca i32, align 4
  %sx.addr = alloca i32, align 4
  %height.addr = alloca i32, align 4
  %width.addr = alloca i32, align 4
  %info = alloca %struct.fb_info*, align 8
  %ops = alloca %struct.fbcon_ops*, align 8
  %p = alloca %struct.fbcon_display*, align 8
  %y_break = alloca i32, align 4
  %b = alloca i32, align 4
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !10457, metadata !DIExpression()), !dbg !10458
  store i32 %sy, i32* %sy.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sy.addr, metadata !10459, metadata !DIExpression()), !dbg !10460
  store i32 %sx, i32* %sx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sx.addr, metadata !10461, metadata !DIExpression()), !dbg !10462
  store i32 %height, i32* %height.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %height.addr, metadata !10463, metadata !DIExpression()), !dbg !10464
  store i32 %width, i32* %width.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %width.addr, metadata !10465, metadata !DIExpression()), !dbg !10466
  call void @llvm.dbg.declare(metadata %struct.fb_info** %info, metadata !10467, metadata !DIExpression()), !dbg !10468
  %0 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10469
  %vc_num = getelementptr inbounds %struct.vc_data, %struct.vc_data* %0, i32 0, i32 3, !dbg !10470
  %1 = load i16, i16* %vc_num, align 8, !dbg !10470
  %idxprom = zext i16 %1 to i64, !dbg !10471
  %arrayidx = getelementptr [63 x i8], [63 x i8]* @con2fb_map, i64 0, i64 %idxprom, !dbg !10471
  %2 = load i8, i8* %arrayidx, align 1, !dbg !10471
  %idxprom1 = sext i8 %2 to i64, !dbg !10472
  %arrayidx2 = getelementptr [32 x %struct.fb_info*], [32 x %struct.fb_info*]* @registered_fb, i64 0, i64 %idxprom1, !dbg !10472
  %3 = load %struct.fb_info*, %struct.fb_info** %arrayidx2, align 8, !dbg !10472
  store %struct.fb_info* %3, %struct.fb_info** %info, align 8, !dbg !10468
  call void @llvm.dbg.declare(metadata %struct.fbcon_ops** %ops, metadata !10473, metadata !DIExpression()), !dbg !10474
  %4 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !10475
  %fbcon_par = getelementptr inbounds %struct.fb_info, %struct.fb_info* %4, i32 0, i32 29, !dbg !10476
  %5 = load i8*, i8** %fbcon_par, align 8, !dbg !10476
  %6 = bitcast i8* %5 to %struct.fbcon_ops*, !dbg !10475
  store %struct.fbcon_ops* %6, %struct.fbcon_ops** %ops, align 8, !dbg !10474
  call void @llvm.dbg.declare(metadata %struct.fbcon_display** %p, metadata !10477, metadata !DIExpression()), !dbg !10478
  %7 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10479
  %vc_num3 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %7, i32 0, i32 3, !dbg !10480
  %8 = load i16, i16* %vc_num3, align 8, !dbg !10480
  %idxprom4 = zext i16 %8 to i64, !dbg !10481
  %arrayidx5 = getelementptr [63 x %struct.fbcon_display], [63 x %struct.fbcon_display]* @fb_display, i64 0, i64 %idxprom4, !dbg !10481
  store %struct.fbcon_display* %arrayidx5, %struct.fbcon_display** %p, align 8, !dbg !10478
  call void @llvm.dbg.declare(metadata i32* %y_break, metadata !10482, metadata !DIExpression()), !dbg !10484
  %9 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10485
  %10 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !10487
  %call = call i32 @fbcon_is_inactive(%struct.vc_data* %9, %struct.fb_info* %10) #10, !dbg !10488
  %tobool = icmp ne i32 %call, 0, !dbg !10488
  br i1 %tobool, label %if.then, label %if.end, !dbg !10489

if.then:                                          ; preds = %entry
  br label %if.end30, !dbg !10490

if.end:                                           ; preds = %entry
  %11 = load i32, i32* %height.addr, align 4, !dbg !10491
  %tobool6 = icmp ne i32 %11, 0, !dbg !10491
  br i1 %tobool6, label %lor.lhs.false, label %if.then8, !dbg !10493

lor.lhs.false:                                    ; preds = %if.end
  %12 = load i32, i32* %width.addr, align 4, !dbg !10494
  %tobool7 = icmp ne i32 %12, 0, !dbg !10494
  br i1 %tobool7, label %if.end9, label %if.then8, !dbg !10495

if.then8:                                         ; preds = %lor.lhs.false, %if.end
  br label %if.end30, !dbg !10496

if.end9:                                          ; preds = %lor.lhs.false
  %13 = load i32, i32* %sy.addr, align 4, !dbg !10497
  %14 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10499
  %vc_top = getelementptr inbounds %struct.vc_data, %struct.vc_data* %14, i32 0, i32 11, !dbg !10500
  %15 = load i32, i32* %vc_top, align 8, !dbg !10500
  %cmp = icmp ult i32 %13, %15, !dbg !10501
  br i1 %cmp, label %land.lhs.true, label %if.end14, !dbg !10502

land.lhs.true:                                    ; preds = %if.end9
  %16 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10503
  %vc_top10 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %16, i32 0, i32 11, !dbg !10504
  %17 = load i32, i32* %vc_top10, align 8, !dbg !10504
  %18 = load i32, i32* @logo_lines, align 4, !dbg !10505
  %cmp11 = icmp eq i32 %17, %18, !dbg !10506
  br i1 %cmp11, label %if.then12, label %if.end14, !dbg !10507

if.then12:                                        ; preds = %land.lhs.true
  %19 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10508
  %vc_top13 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %19, i32 0, i32 11, !dbg !10510
  store i32 0, i32* %vc_top13, align 8, !dbg !10511
  %20 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10512
  call void @fbcon_clear_margins(%struct.vc_data* %20, i32 0) #10, !dbg !10513
  br label %if.end14, !dbg !10514

if.end14:                                         ; preds = %if.then12, %land.lhs.true, %if.end9
  %21 = load %struct.fbcon_display*, %struct.fbcon_display** %p, align 8, !dbg !10515
  %vrows = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %21, i32 0, i32 5, !dbg !10516
  %22 = load i32, i32* %vrows, align 4, !dbg !10516
  %23 = load %struct.fbcon_display*, %struct.fbcon_display** %p, align 8, !dbg !10517
  %yscroll = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %23, i32 0, i32 4, !dbg !10518
  %24 = load i16, i16* %yscroll, align 8, !dbg !10518
  %conv = sext i16 %24 to i32, !dbg !10517
  %sub = sub i32 %22, %conv, !dbg !10519
  store i32 %sub, i32* %y_break, align 4, !dbg !10520
  %25 = load i32, i32* %sy.addr, align 4, !dbg !10521
  %26 = load i32, i32* %y_break, align 4, !dbg !10523
  %cmp15 = icmp ult i32 %25, %26, !dbg !10524
  br i1 %cmp15, label %land.lhs.true17, label %if.else, !dbg !10525

land.lhs.true17:                                  ; preds = %if.end14
  %27 = load i32, i32* %sy.addr, align 4, !dbg !10526
  %28 = load i32, i32* %height.addr, align 4, !dbg !10527
  %add = add i32 %27, %28, !dbg !10528
  %sub18 = sub i32 %add, 1, !dbg !10529
  %29 = load i32, i32* %y_break, align 4, !dbg !10530
  %cmp19 = icmp uge i32 %sub18, %29, !dbg !10531
  br i1 %cmp19, label %if.then21, label %if.else, !dbg !10532

if.then21:                                        ; preds = %land.lhs.true17
  call void @llvm.dbg.declare(metadata i32* %b, metadata !10533, metadata !DIExpression()), !dbg !10535
  %30 = load i32, i32* %y_break, align 4, !dbg !10536
  %31 = load i32, i32* %sy.addr, align 4, !dbg !10537
  %sub22 = sub i32 %30, %31, !dbg !10538
  store i32 %sub22, i32* %b, align 4, !dbg !10535
  %32 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !10539
  %clear = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %32, i32 0, i32 1, !dbg !10540
  %33 = load void (%struct.vc_data*, %struct.fb_info*, i32, i32, i32, i32)*, void (%struct.vc_data*, %struct.fb_info*, i32, i32, i32, i32)** %clear, align 8, !dbg !10540
  %34 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10541
  %35 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !10542
  %36 = load %struct.fbcon_display*, %struct.fbcon_display** %p, align 8, !dbg !10543
  %37 = load i32, i32* %sy.addr, align 4, !dbg !10544
  %call23 = call i32 @real_y(%struct.fbcon_display* %36, i32 %37) #10, !dbg !10545
  %38 = load i32, i32* %sx.addr, align 4, !dbg !10546
  %39 = load i32, i32* %b, align 4, !dbg !10547
  %40 = load i32, i32* %width.addr, align 4, !dbg !10548
  call void %33(%struct.vc_data* %34, %struct.fb_info* %35, i32 %call23, i32 %38, i32 %39, i32 %40) #10, !dbg !10539
  %41 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !10549
  %clear24 = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %41, i32 0, i32 1, !dbg !10550
  %42 = load void (%struct.vc_data*, %struct.fb_info*, i32, i32, i32, i32)*, void (%struct.vc_data*, %struct.fb_info*, i32, i32, i32, i32)** %clear24, align 8, !dbg !10550
  %43 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10551
  %44 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !10552
  %45 = load %struct.fbcon_display*, %struct.fbcon_display** %p, align 8, !dbg !10553
  %46 = load i32, i32* %sy.addr, align 4, !dbg !10554
  %47 = load i32, i32* %b, align 4, !dbg !10555
  %add25 = add i32 %46, %47, !dbg !10556
  %call26 = call i32 @real_y(%struct.fbcon_display* %45, i32 %add25) #10, !dbg !10557
  %48 = load i32, i32* %sx.addr, align 4, !dbg !10558
  %49 = load i32, i32* %height.addr, align 4, !dbg !10559
  %50 = load i32, i32* %b, align 4, !dbg !10560
  %sub27 = sub i32 %49, %50, !dbg !10561
  %51 = load i32, i32* %width.addr, align 4, !dbg !10562
  call void %42(%struct.vc_data* %43, %struct.fb_info* %44, i32 %call26, i32 %48, i32 %sub27, i32 %51) #10, !dbg !10549
  br label %if.end30, !dbg !10563

if.else:                                          ; preds = %land.lhs.true17, %if.end14
  %52 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !10564
  %clear28 = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %52, i32 0, i32 1, !dbg !10565
  %53 = load void (%struct.vc_data*, %struct.fb_info*, i32, i32, i32, i32)*, void (%struct.vc_data*, %struct.fb_info*, i32, i32, i32, i32)** %clear28, align 8, !dbg !10565
  %54 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10566
  %55 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !10567
  %56 = load %struct.fbcon_display*, %struct.fbcon_display** %p, align 8, !dbg !10568
  %57 = load i32, i32* %sy.addr, align 4, !dbg !10569
  %call29 = call i32 @real_y(%struct.fbcon_display* %56, i32 %57) #10, !dbg !10570
  %58 = load i32, i32* %sx.addr, align 4, !dbg !10571
  %59 = load i32, i32* %height.addr, align 4, !dbg !10572
  %60 = load i32, i32* %width.addr, align 4, !dbg !10573
  call void %53(%struct.vc_data* %54, %struct.fb_info* %55, i32 %call29, i32 %58, i32 %59, i32 %60) #10, !dbg !10564
  br label %if.end30

if.end30:                                         ; preds = %if.then, %if.then8, %if.else, %if.then21
  ret void, !dbg !10574
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @fbcon_putc(%struct.vc_data* %vc, i32 %c, i32 %ypos, i32 %xpos) #1 !dbg !10575 {
entry:
  %vc.addr = alloca %struct.vc_data*, align 8
  %c.addr = alloca i32, align 4
  %ypos.addr = alloca i32, align 4
  %xpos.addr = alloca i32, align 4
  %chr = alloca i16, align 2
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !10576, metadata !DIExpression()), !dbg !10577
  store i32 %c, i32* %c.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !10578, metadata !DIExpression()), !dbg !10579
  store i32 %ypos, i32* %ypos.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ypos.addr, metadata !10580, metadata !DIExpression()), !dbg !10581
  store i32 %xpos, i32* %xpos.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %xpos.addr, metadata !10582, metadata !DIExpression()), !dbg !10583
  call void @llvm.dbg.declare(metadata i16* %chr, metadata !10584, metadata !DIExpression()), !dbg !10585
  %0 = load i32, i32* %c.addr, align 4, !dbg !10586
  %conv = trunc i32 %0 to i16, !dbg !10586
  store i16 %conv, i16* %chr, align 2, !dbg !10586
  %1 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10587
  %2 = load i32, i32* %ypos.addr, align 4, !dbg !10588
  %3 = load i32, i32* %xpos.addr, align 4, !dbg !10589
  call void @fbcon_putcs(%struct.vc_data* %1, i16* %chr, i32 1, i32 %2, i32 %3) #10, !dbg !10590
  ret void, !dbg !10591
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @fbcon_putcs(%struct.vc_data* %vc, i16* %s, i32 %count, i32 %ypos, i32 %xpos) #1 !dbg !10592 {
entry:
  %vc.addr = alloca %struct.vc_data*, align 8
  %s.addr = alloca i16*, align 8
  %count.addr = alloca i32, align 4
  %ypos.addr = alloca i32, align 4
  %xpos.addr = alloca i32, align 4
  %info = alloca %struct.fb_info*, align 8
  %p = alloca %struct.fbcon_display*, align 8
  %ops = alloca %struct.fbcon_ops*, align 8
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !10593, metadata !DIExpression()), !dbg !10594
  store i16* %s, i16** %s.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %s.addr, metadata !10595, metadata !DIExpression()), !dbg !10596
  store i32 %count, i32* %count.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %count.addr, metadata !10597, metadata !DIExpression()), !dbg !10598
  store i32 %ypos, i32* %ypos.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ypos.addr, metadata !10599, metadata !DIExpression()), !dbg !10600
  store i32 %xpos, i32* %xpos.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %xpos.addr, metadata !10601, metadata !DIExpression()), !dbg !10602
  call void @llvm.dbg.declare(metadata %struct.fb_info** %info, metadata !10603, metadata !DIExpression()), !dbg !10604
  %0 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10605
  %vc_num = getelementptr inbounds %struct.vc_data, %struct.vc_data* %0, i32 0, i32 3, !dbg !10606
  %1 = load i16, i16* %vc_num, align 8, !dbg !10606
  %idxprom = zext i16 %1 to i64, !dbg !10607
  %arrayidx = getelementptr [63 x i8], [63 x i8]* @con2fb_map, i64 0, i64 %idxprom, !dbg !10607
  %2 = load i8, i8* %arrayidx, align 1, !dbg !10607
  %idxprom1 = sext i8 %2 to i64, !dbg !10608
  %arrayidx2 = getelementptr [32 x %struct.fb_info*], [32 x %struct.fb_info*]* @registered_fb, i64 0, i64 %idxprom1, !dbg !10608
  %3 = load %struct.fb_info*, %struct.fb_info** %arrayidx2, align 8, !dbg !10608
  store %struct.fb_info* %3, %struct.fb_info** %info, align 8, !dbg !10604
  call void @llvm.dbg.declare(metadata %struct.fbcon_display** %p, metadata !10609, metadata !DIExpression()), !dbg !10610
  %4 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10611
  %vc_num3 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %4, i32 0, i32 3, !dbg !10612
  %5 = load i16, i16* %vc_num3, align 8, !dbg !10612
  %idxprom4 = zext i16 %5 to i64, !dbg !10613
  %arrayidx5 = getelementptr [63 x %struct.fbcon_display], [63 x %struct.fbcon_display]* @fb_display, i64 0, i64 %idxprom4, !dbg !10613
  store %struct.fbcon_display* %arrayidx5, %struct.fbcon_display** %p, align 8, !dbg !10610
  call void @llvm.dbg.declare(metadata %struct.fbcon_ops** %ops, metadata !10614, metadata !DIExpression()), !dbg !10615
  %6 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !10616
  %fbcon_par = getelementptr inbounds %struct.fb_info, %struct.fb_info* %6, i32 0, i32 29, !dbg !10617
  %7 = load i8*, i8** %fbcon_par, align 8, !dbg !10617
  %8 = bitcast i8* %7 to %struct.fbcon_ops*, !dbg !10616
  store %struct.fbcon_ops* %8, %struct.fbcon_ops** %ops, align 8, !dbg !10615
  %9 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10618
  %10 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !10620
  %call = call i32 @fbcon_is_inactive(%struct.vc_data* %9, %struct.fb_info* %10) #10, !dbg !10621
  %tobool = icmp ne i32 %call, 0, !dbg !10621
  br i1 %tobool, label %if.end, label %if.then, !dbg !10622

if.then:                                          ; preds = %entry
  %11 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !10623
  %putcs = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %11, i32 0, i32 2, !dbg !10624
  %12 = load void (%struct.vc_data*, %struct.fb_info*, i16*, i32, i32, i32, i32, i32)*, void (%struct.vc_data*, %struct.fb_info*, i16*, i32, i32, i32, i32, i32)** %putcs, align 8, !dbg !10624
  %13 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10625
  %14 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !10626
  %15 = load i16*, i16** %s.addr, align 8, !dbg !10627
  %16 = load i32, i32* %count.addr, align 4, !dbg !10628
  %17 = load %struct.fbcon_display*, %struct.fbcon_display** %p, align 8, !dbg !10629
  %18 = load i32, i32* %ypos.addr, align 4, !dbg !10630
  %call6 = call i32 @real_y(%struct.fbcon_display* %17, i32 %18) #10, !dbg !10631
  %19 = load i32, i32* %xpos.addr, align 4, !dbg !10632
  %20 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10633
  %21 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !10634
  %22 = load i16*, i16** %s.addr, align 8, !dbg !10635
  %23 = load i16, i16* %22, align 2, !dbg !10635
  %call7 = call i32 @get_color(%struct.vc_data* %20, %struct.fb_info* %21, i16 zeroext %23, i32 1) #10, !dbg !10636
  %24 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10637
  %25 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !10638
  %26 = load i16*, i16** %s.addr, align 8, !dbg !10639
  %27 = load i16, i16* %26, align 2, !dbg !10639
  %call8 = call i32 @get_color(%struct.vc_data* %24, %struct.fb_info* %25, i16 zeroext %27, i32 0) #10, !dbg !10640
  call void %12(%struct.vc_data* %13, %struct.fb_info* %14, i16* %15, i32 %16, i32 %call6, i32 %19, i32 %call7, i32 %call8) #10, !dbg !10623
  br label %if.end, !dbg !10623

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !10641
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @fbcon_scroll(%struct.vc_data* %vc, i32 %t, i32 %b, i32 %dir, i32 %count) #1 !dbg !10642 {
entry:
  %retval = alloca i1, align 1
  %vc.addr = alloca %struct.vc_data*, align 8
  %t.addr = alloca i32, align 4
  %b.addr = alloca i32, align 4
  %dir.addr = alloca i32, align 4
  %count.addr = alloca i32, align 4
  %info = alloca %struct.fb_info*, align 8
  %p = alloca %struct.fbcon_display*, align 8
  %scroll_partial = alloca i32, align 4
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !10643, metadata !DIExpression()), !dbg !10644
  store i32 %t, i32* %t.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %t.addr, metadata !10645, metadata !DIExpression()), !dbg !10646
  store i32 %b, i32* %b.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr, metadata !10647, metadata !DIExpression()), !dbg !10648
  store i32 %dir, i32* %dir.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dir.addr, metadata !10649, metadata !DIExpression()), !dbg !10650
  store i32 %count, i32* %count.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %count.addr, metadata !10651, metadata !DIExpression()), !dbg !10652
  call void @llvm.dbg.declare(metadata %struct.fb_info** %info, metadata !10653, metadata !DIExpression()), !dbg !10654
  %0 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10655
  %vc_num = getelementptr inbounds %struct.vc_data, %struct.vc_data* %0, i32 0, i32 3, !dbg !10656
  %1 = load i16, i16* %vc_num, align 8, !dbg !10656
  %idxprom = zext i16 %1 to i64, !dbg !10657
  %arrayidx = getelementptr [63 x i8], [63 x i8]* @con2fb_map, i64 0, i64 %idxprom, !dbg !10657
  %2 = load i8, i8* %arrayidx, align 1, !dbg !10657
  %idxprom1 = sext i8 %2 to i64, !dbg !10658
  %arrayidx2 = getelementptr [32 x %struct.fb_info*], [32 x %struct.fb_info*]* @registered_fb, i64 0, i64 %idxprom1, !dbg !10658
  %3 = load %struct.fb_info*, %struct.fb_info** %arrayidx2, align 8, !dbg !10658
  store %struct.fb_info* %3, %struct.fb_info** %info, align 8, !dbg !10654
  call void @llvm.dbg.declare(metadata %struct.fbcon_display** %p, metadata !10659, metadata !DIExpression()), !dbg !10660
  %4 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10661
  %vc_num3 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %4, i32 0, i32 3, !dbg !10662
  %5 = load i16, i16* %vc_num3, align 8, !dbg !10662
  %idxprom4 = zext i16 %5 to i64, !dbg !10663
  %arrayidx5 = getelementptr [63 x %struct.fbcon_display], [63 x %struct.fbcon_display]* @fb_display, i64 0, i64 %idxprom4, !dbg !10663
  store %struct.fbcon_display* %arrayidx5, %struct.fbcon_display** %p, align 8, !dbg !10660
  call void @llvm.dbg.declare(metadata i32* %scroll_partial, metadata !10664, metadata !DIExpression()), !dbg !10665
  %6 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !10666
  %flags = getelementptr inbounds %struct.fb_info, %struct.fb_info* %6, i32 0, i32 2, !dbg !10667
  %7 = load i32, i32* %flags, align 8, !dbg !10667
  %and = and i32 %7, 64, !dbg !10668
  store i32 %and, i32* %scroll_partial, align 4, !dbg !10665
  %8 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10669
  %9 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !10671
  %call = call i32 @fbcon_is_inactive(%struct.vc_data* %8, %struct.fb_info* %9) #10, !dbg !10672
  %tobool = icmp ne i32 %call, 0, !dbg !10672
  br i1 %tobool, label %if.then, label %if.end, !dbg !10673

if.then:                                          ; preds = %entry
  store i1 true, i1* %retval, align 1, !dbg !10674
  br label %return, !dbg !10674

if.end:                                           ; preds = %entry
  %10 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10675
  call void @fbcon_cursor(%struct.vc_data* %10, i32 2) #10, !dbg !10676
  %11 = load i32, i32* %dir.addr, align 4, !dbg !10677
  switch i32 %11, label %sw.epilog353 [
    i32 0, label %sw.bb
    i32 1, label %sw.bb171
  ], !dbg !10678

sw.bb:                                            ; preds = %if.end
  %12 = load i32, i32* %count.addr, align 4, !dbg !10679
  %13 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10682
  %vc_rows = getelementptr inbounds %struct.vc_data, %struct.vc_data* %13, i32 0, i32 5, !dbg !10683
  %14 = load i32, i32* %vc_rows, align 8, !dbg !10683
  %cmp = icmp ugt i32 %12, %14, !dbg !10684
  br i1 %cmp, label %if.then6, label %if.end8, !dbg !10685

if.then6:                                         ; preds = %sw.bb
  %15 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10686
  %vc_rows7 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %15, i32 0, i32 5, !dbg !10687
  %16 = load i32, i32* %vc_rows7, align 8, !dbg !10687
  store i32 %16, i32* %count.addr, align 4, !dbg !10688
  br label %if.end8, !dbg !10689

if.end8:                                          ; preds = %if.then6, %sw.bb
  %17 = load i32, i32* @logo_shown, align 4, !dbg !10690
  %cmp9 = icmp sge i32 %17, 0, !dbg !10692
  br i1 %cmp9, label %if.then10, label %if.end11, !dbg !10693

if.then10:                                        ; preds = %if.end8
  br label %redraw_up, !dbg !10694

if.end11:                                         ; preds = %if.end8
  %18 = load %struct.fbcon_display*, %struct.fbcon_display** %p, align 8, !dbg !10695
  %scrollmode = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %18, i32 0, i32 2, !dbg !10696
  %19 = load i16, i16* %scrollmode, align 4, !dbg !10696
  %conv = zext i16 %19 to i32, !dbg !10695
  switch i32 %conv, label %sw.epilog [
    i32 1, label %sw.bb12
    i32 3, label %sw.bb19
    i32 5, label %sw.bb55
    i32 2, label %sw.bb98
    i32 4, label %sw.bb155
  ], !dbg !10697

sw.bb12:                                          ; preds = %if.end11
  %20 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10698
  %21 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !10700
  %22 = load %struct.fbcon_display*, %struct.fbcon_display** %p, align 8, !dbg !10701
  %23 = load i32, i32* %t.addr, align 4, !dbg !10702
  %24 = load i32, i32* %b.addr, align 4, !dbg !10703
  %25 = load i32, i32* %t.addr, align 4, !dbg !10704
  %sub = sub i32 %24, %25, !dbg !10705
  %26 = load i32, i32* %count.addr, align 4, !dbg !10706
  %sub13 = sub i32 %sub, %26, !dbg !10707
  %27 = load i32, i32* %count.addr, align 4, !dbg !10708
  call void @fbcon_redraw_blit(%struct.vc_data* %20, %struct.fb_info* %21, %struct.fbcon_display* %22, i32 %23, i32 %sub13, i32 %27) #10, !dbg !10709
  %28 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10710
  %29 = load i32, i32* %b.addr, align 4, !dbg !10711
  %30 = load i32, i32* %count.addr, align 4, !dbg !10712
  %sub14 = sub i32 %29, %30, !dbg !10713
  %31 = load i32, i32* %count.addr, align 4, !dbg !10714
  %32 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10715
  %vc_cols = getelementptr inbounds %struct.vc_data, %struct.vc_data* %32, i32 0, i32 4, !dbg !10716
  %33 = load i32, i32* %vc_cols, align 4, !dbg !10716
  call void @fbcon_clear(%struct.vc_data* %28, i32 %sub14, i32 0, i32 %31, i32 %33) #10, !dbg !10717
  %34 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10718
  %vc_origin = getelementptr inbounds %struct.vc_data, %struct.vc_data* %34, i32 0, i32 8, !dbg !10719
  %35 = load i64, i64* %vc_origin, align 8, !dbg !10719
  %36 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10720
  %vc_size_row = getelementptr inbounds %struct.vc_data, %struct.vc_data* %36, i32 0, i32 6, !dbg !10721
  %37 = load i32, i32* %vc_size_row, align 4, !dbg !10721
  %38 = load i32, i32* %b.addr, align 4, !dbg !10722
  %39 = load i32, i32* %count.addr, align 4, !dbg !10723
  %sub15 = sub i32 %38, %39, !dbg !10724
  %mul = mul i32 %37, %sub15, !dbg !10725
  %conv16 = zext i32 %mul to i64, !dbg !10720
  %add = add i64 %35, %conv16, !dbg !10726
  %40 = inttoptr i64 %add to i16*, !dbg !10727
  %41 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10728
  %vc_video_erase_char = getelementptr inbounds %struct.vc_data, %struct.vc_data* %41, i32 0, i32 28, !dbg !10729
  %42 = load i16, i16* %vc_video_erase_char, align 8, !dbg !10729
  %43 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10730
  %vc_size_row17 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %43, i32 0, i32 6, !dbg !10731
  %44 = load i32, i32* %vc_size_row17, align 4, !dbg !10731
  %45 = load i32, i32* %count.addr, align 4, !dbg !10732
  %mul18 = mul i32 %44, %45, !dbg !10733
  call void @scr_memsetw(i16* %40, i16 zeroext %42, i32 %mul18) #10, !dbg !10734
  store i1 true, i1* %retval, align 1, !dbg !10735
  br label %return, !dbg !10735

sw.bb19:                                          ; preds = %if.end11
  %46 = load i32, i32* %b.addr, align 4, !dbg !10736
  %47 = load i32, i32* %t.addr, align 4, !dbg !10738
  %sub20 = sub i32 %46, %47, !dbg !10739
  %48 = load i32, i32* %count.addr, align 4, !dbg !10740
  %sub21 = sub i32 %sub20, %48, !dbg !10741
  %49 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10742
  %vc_rows22 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %49, i32 0, i32 5, !dbg !10743
  %50 = load i32, i32* %vc_rows22, align 8, !dbg !10743
  %mul23 = mul i32 3, %50, !dbg !10744
  %shr = lshr i32 %mul23, 2, !dbg !10745
  %cmp24 = icmp ugt i32 %sub21, %shr, !dbg !10746
  br i1 %cmp24, label %if.then26, label %if.else, !dbg !10747

if.then26:                                        ; preds = %sw.bb19
  %51 = load i32, i32* %t.addr, align 4, !dbg !10748
  %cmp27 = icmp ugt i32 %51, 0, !dbg !10751
  br i1 %cmp27, label %if.then29, label %if.end31, !dbg !10752

if.then29:                                        ; preds = %if.then26
  %52 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10753
  %53 = load i32, i32* %count.addr, align 4, !dbg !10754
  %54 = load i32, i32* %t.addr, align 4, !dbg !10755
  %55 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10756
  %vc_cols30 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %55, i32 0, i32 4, !dbg !10757
  %56 = load i32, i32* %vc_cols30, align 4, !dbg !10757
  call void @fbcon_bmove(%struct.vc_data* %52, i32 0, i32 0, i32 %53, i32 0, i32 %54, i32 %56) #10, !dbg !10758
  br label %if.end31, !dbg !10758

if.end31:                                         ; preds = %if.then29, %if.then26
  %57 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10759
  %58 = load i32, i32* %count.addr, align 4, !dbg !10760
  call void @ywrap_up(%struct.vc_data* %57, i32 %58) #10, !dbg !10761
  %59 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10762
  %vc_rows32 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %59, i32 0, i32 5, !dbg !10764
  %60 = load i32, i32* %vc_rows32, align 8, !dbg !10764
  %61 = load i32, i32* %b.addr, align 4, !dbg !10765
  %sub33 = sub i32 %60, %61, !dbg !10766
  %cmp34 = icmp ugt i32 %sub33, 0, !dbg !10767
  br i1 %cmp34, label %if.then36, label %if.end41, !dbg !10768

if.then36:                                        ; preds = %if.end31
  %62 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10769
  %63 = load i32, i32* %b.addr, align 4, !dbg !10770
  %64 = load i32, i32* %count.addr, align 4, !dbg !10771
  %sub37 = sub i32 %63, %64, !dbg !10772
  %65 = load i32, i32* %b.addr, align 4, !dbg !10773
  %66 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10774
  %vc_rows38 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %66, i32 0, i32 5, !dbg !10775
  %67 = load i32, i32* %vc_rows38, align 8, !dbg !10775
  %68 = load i32, i32* %b.addr, align 4, !dbg !10776
  %sub39 = sub i32 %67, %68, !dbg !10777
  %69 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10778
  %vc_cols40 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %69, i32 0, i32 4, !dbg !10779
  %70 = load i32, i32* %vc_cols40, align 4, !dbg !10779
  call void @fbcon_bmove(%struct.vc_data* %62, i32 %sub37, i32 0, i32 %65, i32 0, i32 %sub39, i32 %70) #10, !dbg !10780
  br label %if.end41, !dbg !10780

if.end41:                                         ; preds = %if.then36, %if.end31
  br label %if.end52, !dbg !10781

if.else:                                          ; preds = %sw.bb19
  %71 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !10782
  %flags42 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %71, i32 0, i32 2, !dbg !10784
  %72 = load i32, i32* %flags42, align 8, !dbg !10784
  %and43 = and i32 %72, 128, !dbg !10785
  %tobool44 = icmp ne i32 %and43, 0, !dbg !10785
  br i1 %tobool44, label %if.then45, label %if.else50, !dbg !10786

if.then45:                                        ; preds = %if.else
  %73 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10787
  %74 = load i32, i32* %t.addr, align 4, !dbg !10788
  %75 = load i32, i32* %count.addr, align 4, !dbg !10789
  %add46 = add i32 %74, %75, !dbg !10790
  %76 = load i32, i32* %t.addr, align 4, !dbg !10791
  %77 = load i32, i32* %b.addr, align 4, !dbg !10792
  %78 = load i32, i32* %t.addr, align 4, !dbg !10793
  %sub47 = sub i32 %77, %78, !dbg !10794
  %79 = load i32, i32* %count.addr, align 4, !dbg !10795
  %sub48 = sub i32 %sub47, %79, !dbg !10796
  %80 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10797
  %vc_cols49 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %80, i32 0, i32 4, !dbg !10798
  %81 = load i32, i32* %vc_cols49, align 4, !dbg !10798
  call void @fbcon_bmove(%struct.vc_data* %73, i32 %add46, i32 0, i32 %76, i32 0, i32 %sub48, i32 %81) #10, !dbg !10799
  br label %if.end51, !dbg !10799

if.else50:                                        ; preds = %if.else
  br label %redraw_up, !dbg !10800

if.end51:                                         ; preds = %if.then45
  br label %if.end52

if.end52:                                         ; preds = %if.end51, %if.end41
  %82 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10801
  %83 = load i32, i32* %b.addr, align 4, !dbg !10802
  %84 = load i32, i32* %count.addr, align 4, !dbg !10803
  %sub53 = sub i32 %83, %84, !dbg !10804
  %85 = load i32, i32* %count.addr, align 4, !dbg !10805
  %86 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10806
  %vc_cols54 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %86, i32 0, i32 4, !dbg !10807
  %87 = load i32, i32* %vc_cols54, align 4, !dbg !10807
  call void @fbcon_clear(%struct.vc_data* %82, i32 %sub53, i32 0, i32 %85, i32 %87) #10, !dbg !10808
  br label %sw.epilog, !dbg !10809

sw.bb55:                                          ; preds = %if.end11
  %88 = load %struct.fbcon_display*, %struct.fbcon_display** %p, align 8, !dbg !10810
  %yscroll = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %88, i32 0, i32 4, !dbg !10812
  %89 = load i16, i16* %yscroll, align 8, !dbg !10812
  %conv56 = sext i16 %89 to i32, !dbg !10810
  %90 = load i32, i32* %count.addr, align 4, !dbg !10813
  %add57 = add i32 %conv56, %90, !dbg !10814
  %91 = load %struct.fbcon_display*, %struct.fbcon_display** %p, align 8, !dbg !10815
  %vrows = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %91, i32 0, i32 5, !dbg !10816
  %92 = load i32, i32* %vrows, align 4, !dbg !10816
  %93 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10817
  %vc_rows58 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %93, i32 0, i32 5, !dbg !10818
  %94 = load i32, i32* %vc_rows58, align 8, !dbg !10818
  %sub59 = sub i32 %92, %94, !dbg !10819
  %mul60 = mul i32 2, %sub59, !dbg !10820
  %cmp61 = icmp ule i32 %add57, %mul60, !dbg !10821
  br i1 %cmp61, label %land.lhs.true, label %if.else91, !dbg !10822

land.lhs.true:                                    ; preds = %sw.bb55
  %95 = load i32, i32* %scroll_partial, align 4, !dbg !10823
  %tobool63 = icmp ne i32 %95, 0, !dbg !10823
  br i1 %tobool63, label %lor.lhs.false, label %land.lhs.true64, !dbg !10824

land.lhs.true64:                                  ; preds = %land.lhs.true
  %96 = load i32, i32* %b.addr, align 4, !dbg !10825
  %97 = load i32, i32* %t.addr, align 4, !dbg !10826
  %sub65 = sub i32 %96, %97, !dbg !10827
  %98 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10828
  %vc_rows66 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %98, i32 0, i32 5, !dbg !10829
  %99 = load i32, i32* %vc_rows66, align 8, !dbg !10829
  %cmp67 = icmp eq i32 %sub65, %99, !dbg !10830
  br i1 %cmp67, label %if.then78, label %lor.lhs.false, !dbg !10831

lor.lhs.false:                                    ; preds = %land.lhs.true64, %land.lhs.true
  %100 = load i32, i32* %scroll_partial, align 4, !dbg !10832
  %tobool69 = icmp ne i32 %100, 0, !dbg !10832
  br i1 %tobool69, label %land.lhs.true70, label %if.else91, !dbg !10833

land.lhs.true70:                                  ; preds = %lor.lhs.false
  %101 = load i32, i32* %b.addr, align 4, !dbg !10834
  %102 = load i32, i32* %t.addr, align 4, !dbg !10835
  %sub71 = sub i32 %101, %102, !dbg !10836
  %103 = load i32, i32* %count.addr, align 4, !dbg !10837
  %sub72 = sub i32 %sub71, %103, !dbg !10838
  %104 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10839
  %vc_rows73 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %104, i32 0, i32 5, !dbg !10840
  %105 = load i32, i32* %vc_rows73, align 8, !dbg !10840
  %mul74 = mul i32 3, %105, !dbg !10841
  %shr75 = lshr i32 %mul74, 2, !dbg !10842
  %cmp76 = icmp ugt i32 %sub72, %shr75, !dbg !10843
  br i1 %cmp76, label %if.then78, label %if.else91, !dbg !10844

if.then78:                                        ; preds = %land.lhs.true70, %land.lhs.true64
  %106 = load i32, i32* %t.addr, align 4, !dbg !10845
  %cmp79 = icmp ugt i32 %106, 0, !dbg !10848
  br i1 %cmp79, label %if.then81, label %if.end82, !dbg !10849

if.then81:                                        ; preds = %if.then78
  %107 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10850
  %108 = load %struct.fbcon_display*, %struct.fbcon_display** %p, align 8, !dbg !10851
  %109 = load i32, i32* %t.addr, align 4, !dbg !10852
  %110 = load i32, i32* %count.addr, align 4, !dbg !10853
  call void @fbcon_redraw_move(%struct.vc_data* %107, %struct.fbcon_display* %108, i32 0, i32 %109, i32 %110) #10, !dbg !10854
  br label %if.end82, !dbg !10854

if.end82:                                         ; preds = %if.then81, %if.then78
  %111 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10855
  %112 = load i32, i32* %t.addr, align 4, !dbg !10856
  %113 = load i32, i32* %count.addr, align 4, !dbg !10857
  call void @ypan_up_redraw(%struct.vc_data* %111, i32 %112, i32 %113) #10, !dbg !10858
  %114 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10859
  %vc_rows83 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %114, i32 0, i32 5, !dbg !10861
  %115 = load i32, i32* %vc_rows83, align 8, !dbg !10861
  %116 = load i32, i32* %b.addr, align 4, !dbg !10862
  %sub84 = sub i32 %115, %116, !dbg !10863
  %cmp85 = icmp ugt i32 %sub84, 0, !dbg !10864
  br i1 %cmp85, label %if.then87, label %if.end90, !dbg !10865

if.then87:                                        ; preds = %if.end82
  %117 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10866
  %118 = load %struct.fbcon_display*, %struct.fbcon_display** %p, align 8, !dbg !10867
  %119 = load i32, i32* %b.addr, align 4, !dbg !10868
  %120 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10869
  %vc_rows88 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %120, i32 0, i32 5, !dbg !10870
  %121 = load i32, i32* %vc_rows88, align 8, !dbg !10870
  %122 = load i32, i32* %b.addr, align 4, !dbg !10871
  %sub89 = sub i32 %121, %122, !dbg !10872
  %123 = load i32, i32* %b.addr, align 4, !dbg !10873
  call void @fbcon_redraw_move(%struct.vc_data* %117, %struct.fbcon_display* %118, i32 %119, i32 %sub89, i32 %123) #10, !dbg !10874
  br label %if.end90, !dbg !10874

if.end90:                                         ; preds = %if.then87, %if.end82
  br label %if.end95, !dbg !10875

if.else91:                                        ; preds = %land.lhs.true70, %lor.lhs.false, %sw.bb55
  %124 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10876
  %125 = load %struct.fbcon_display*, %struct.fbcon_display** %p, align 8, !dbg !10877
  %126 = load i32, i32* %t.addr, align 4, !dbg !10878
  %127 = load i32, i32* %count.addr, align 4, !dbg !10879
  %add92 = add i32 %126, %127, !dbg !10880
  %128 = load i32, i32* %b.addr, align 4, !dbg !10881
  %129 = load i32, i32* %t.addr, align 4, !dbg !10882
  %sub93 = sub i32 %128, %129, !dbg !10883
  %130 = load i32, i32* %count.addr, align 4, !dbg !10884
  %sub94 = sub i32 %sub93, %130, !dbg !10885
  %131 = load i32, i32* %t.addr, align 4, !dbg !10886
  call void @fbcon_redraw_move(%struct.vc_data* %124, %struct.fbcon_display* %125, i32 %add92, i32 %sub94, i32 %131) #10, !dbg !10887
  br label %if.end95

if.end95:                                         ; preds = %if.else91, %if.end90
  %132 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10888
  %133 = load i32, i32* %b.addr, align 4, !dbg !10889
  %134 = load i32, i32* %count.addr, align 4, !dbg !10890
  %sub96 = sub i32 %133, %134, !dbg !10891
  %135 = load i32, i32* %count.addr, align 4, !dbg !10892
  %136 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10893
  %vc_cols97 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %136, i32 0, i32 4, !dbg !10894
  %137 = load i32, i32* %vc_cols97, align 4, !dbg !10894
  call void @fbcon_clear(%struct.vc_data* %132, i32 %sub96, i32 0, i32 %135, i32 %137) #10, !dbg !10895
  br label %sw.epilog, !dbg !10896

sw.bb98:                                          ; preds = %if.end11
  %138 = load %struct.fbcon_display*, %struct.fbcon_display** %p, align 8, !dbg !10897
  %yscroll99 = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %138, i32 0, i32 4, !dbg !10899
  %139 = load i16, i16* %yscroll99, align 8, !dbg !10899
  %conv100 = sext i16 %139 to i32, !dbg !10897
  %140 = load i32, i32* %count.addr, align 4, !dbg !10900
  %add101 = add i32 %conv100, %140, !dbg !10901
  %141 = load %struct.fbcon_display*, %struct.fbcon_display** %p, align 8, !dbg !10902
  %vrows102 = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %141, i32 0, i32 5, !dbg !10903
  %142 = load i32, i32* %vrows102, align 4, !dbg !10903
  %143 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10904
  %vc_rows103 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %143, i32 0, i32 5, !dbg !10905
  %144 = load i32, i32* %vc_rows103, align 8, !dbg !10905
  %sub104 = sub i32 %142, %144, !dbg !10906
  %mul105 = mul i32 2, %sub104, !dbg !10907
  %cmp106 = icmp ule i32 %add101, %mul105, !dbg !10908
  br i1 %cmp106, label %land.lhs.true108, label %if.else141, !dbg !10909

land.lhs.true108:                                 ; preds = %sw.bb98
  %145 = load i32, i32* %scroll_partial, align 4, !dbg !10910
  %tobool109 = icmp ne i32 %145, 0, !dbg !10910
  br i1 %tobool109, label %lor.lhs.false115, label %land.lhs.true110, !dbg !10911

land.lhs.true110:                                 ; preds = %land.lhs.true108
  %146 = load i32, i32* %b.addr, align 4, !dbg !10912
  %147 = load i32, i32* %t.addr, align 4, !dbg !10913
  %sub111 = sub i32 %146, %147, !dbg !10914
  %148 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10915
  %vc_rows112 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %148, i32 0, i32 5, !dbg !10916
  %149 = load i32, i32* %vc_rows112, align 8, !dbg !10916
  %cmp113 = icmp eq i32 %sub111, %149, !dbg !10917
  br i1 %cmp113, label %if.then125, label %lor.lhs.false115, !dbg !10918

lor.lhs.false115:                                 ; preds = %land.lhs.true110, %land.lhs.true108
  %150 = load i32, i32* %scroll_partial, align 4, !dbg !10919
  %tobool116 = icmp ne i32 %150, 0, !dbg !10919
  br i1 %tobool116, label %land.lhs.true117, label %if.else141, !dbg !10920

land.lhs.true117:                                 ; preds = %lor.lhs.false115
  %151 = load i32, i32* %b.addr, align 4, !dbg !10921
  %152 = load i32, i32* %t.addr, align 4, !dbg !10922
  %sub118 = sub i32 %151, %152, !dbg !10923
  %153 = load i32, i32* %count.addr, align 4, !dbg !10924
  %sub119 = sub i32 %sub118, %153, !dbg !10925
  %154 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10926
  %vc_rows120 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %154, i32 0, i32 5, !dbg !10927
  %155 = load i32, i32* %vc_rows120, align 8, !dbg !10927
  %mul121 = mul i32 3, %155, !dbg !10928
  %shr122 = lshr i32 %mul121, 2, !dbg !10929
  %cmp123 = icmp ugt i32 %sub119, %shr122, !dbg !10930
  br i1 %cmp123, label %if.then125, label %if.else141, !dbg !10931

if.then125:                                       ; preds = %land.lhs.true117, %land.lhs.true110
  %156 = load i32, i32* %t.addr, align 4, !dbg !10932
  %cmp126 = icmp ugt i32 %156, 0, !dbg !10935
  br i1 %cmp126, label %if.then128, label %if.end130, !dbg !10936

if.then128:                                       ; preds = %if.then125
  %157 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10937
  %158 = load i32, i32* %count.addr, align 4, !dbg !10938
  %159 = load i32, i32* %t.addr, align 4, !dbg !10939
  %160 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10940
  %vc_cols129 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %160, i32 0, i32 4, !dbg !10941
  %161 = load i32, i32* %vc_cols129, align 4, !dbg !10941
  call void @fbcon_bmove(%struct.vc_data* %157, i32 0, i32 0, i32 %158, i32 0, i32 %159, i32 %161) #10, !dbg !10942
  br label %if.end130, !dbg !10942

if.end130:                                        ; preds = %if.then128, %if.then125
  %162 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10943
  %163 = load i32, i32* %count.addr, align 4, !dbg !10944
  call void @ypan_up(%struct.vc_data* %162, i32 %163) #10, !dbg !10945
  %164 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10946
  %vc_rows131 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %164, i32 0, i32 5, !dbg !10948
  %165 = load i32, i32* %vc_rows131, align 8, !dbg !10948
  %166 = load i32, i32* %b.addr, align 4, !dbg !10949
  %sub132 = sub i32 %165, %166, !dbg !10950
  %cmp133 = icmp ugt i32 %sub132, 0, !dbg !10951
  br i1 %cmp133, label %if.then135, label %if.end140, !dbg !10952

if.then135:                                       ; preds = %if.end130
  %167 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10953
  %168 = load i32, i32* %b.addr, align 4, !dbg !10954
  %169 = load i32, i32* %count.addr, align 4, !dbg !10955
  %sub136 = sub i32 %168, %169, !dbg !10956
  %170 = load i32, i32* %b.addr, align 4, !dbg !10957
  %171 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10958
  %vc_rows137 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %171, i32 0, i32 5, !dbg !10959
  %172 = load i32, i32* %vc_rows137, align 8, !dbg !10959
  %173 = load i32, i32* %b.addr, align 4, !dbg !10960
  %sub138 = sub i32 %172, %173, !dbg !10961
  %174 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10962
  %vc_cols139 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %174, i32 0, i32 4, !dbg !10963
  %175 = load i32, i32* %vc_cols139, align 4, !dbg !10963
  call void @fbcon_bmove(%struct.vc_data* %167, i32 %sub136, i32 0, i32 %170, i32 0, i32 %sub138, i32 %175) #10, !dbg !10964
  br label %if.end140, !dbg !10964

if.end140:                                        ; preds = %if.then135, %if.end130
  br label %if.end152, !dbg !10965

if.else141:                                       ; preds = %land.lhs.true117, %lor.lhs.false115, %sw.bb98
  %176 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !10966
  %flags142 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %176, i32 0, i32 2, !dbg !10968
  %177 = load i32, i32* %flags142, align 8, !dbg !10968
  %and143 = and i32 %177, 128, !dbg !10969
  %tobool144 = icmp ne i32 %and143, 0, !dbg !10969
  br i1 %tobool144, label %if.then145, label %if.else150, !dbg !10970

if.then145:                                       ; preds = %if.else141
  %178 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10971
  %179 = load i32, i32* %t.addr, align 4, !dbg !10972
  %180 = load i32, i32* %count.addr, align 4, !dbg !10973
  %add146 = add i32 %179, %180, !dbg !10974
  %181 = load i32, i32* %t.addr, align 4, !dbg !10975
  %182 = load i32, i32* %b.addr, align 4, !dbg !10976
  %183 = load i32, i32* %t.addr, align 4, !dbg !10977
  %sub147 = sub i32 %182, %183, !dbg !10978
  %184 = load i32, i32* %count.addr, align 4, !dbg !10979
  %sub148 = sub i32 %sub147, %184, !dbg !10980
  %185 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10981
  %vc_cols149 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %185, i32 0, i32 4, !dbg !10982
  %186 = load i32, i32* %vc_cols149, align 4, !dbg !10982
  call void @fbcon_bmove(%struct.vc_data* %178, i32 %add146, i32 0, i32 %181, i32 0, i32 %sub148, i32 %186) #10, !dbg !10983
  br label %if.end151, !dbg !10983

if.else150:                                       ; preds = %if.else141
  br label %redraw_up, !dbg !10984

if.end151:                                        ; preds = %if.then145
  br label %if.end152

if.end152:                                        ; preds = %if.end151, %if.end140
  %187 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10985
  %188 = load i32, i32* %b.addr, align 4, !dbg !10986
  %189 = load i32, i32* %count.addr, align 4, !dbg !10987
  %sub153 = sub i32 %188, %189, !dbg !10988
  %190 = load i32, i32* %count.addr, align 4, !dbg !10989
  %191 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10990
  %vc_cols154 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %191, i32 0, i32 4, !dbg !10991
  %192 = load i32, i32* %vc_cols154, align 4, !dbg !10991
  call void @fbcon_clear(%struct.vc_data* %187, i32 %sub153, i32 0, i32 %190, i32 %192) #10, !dbg !10992
  br label %sw.epilog, !dbg !10993

sw.bb155:                                         ; preds = %if.end11
  br label %redraw_up, !dbg !10993

redraw_up:                                        ; preds = %sw.bb155, %if.else150, %if.else50, %if.then10
  call void @llvm.dbg.label(metadata !10994), !dbg !10995
  %193 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10996
  %194 = load %struct.fbcon_display*, %struct.fbcon_display** %p, align 8, !dbg !10997
  %195 = load i32, i32* %t.addr, align 4, !dbg !10998
  %196 = load i32, i32* %b.addr, align 4, !dbg !10999
  %197 = load i32, i32* %t.addr, align 4, !dbg !11000
  %sub156 = sub i32 %196, %197, !dbg !11001
  %198 = load i32, i32* %count.addr, align 4, !dbg !11002
  %sub157 = sub i32 %sub156, %198, !dbg !11003
  %199 = load i32, i32* %count.addr, align 4, !dbg !11004
  %200 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11005
  %vc_cols158 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %200, i32 0, i32 4, !dbg !11006
  %201 = load i32, i32* %vc_cols158, align 4, !dbg !11006
  %mul159 = mul i32 %199, %201, !dbg !11007
  call void @fbcon_redraw(%struct.vc_data* %193, %struct.fbcon_display* %194, i32 %195, i32 %sub157, i32 %mul159) #10, !dbg !11008
  %202 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11009
  %203 = load i32, i32* %b.addr, align 4, !dbg !11010
  %204 = load i32, i32* %count.addr, align 4, !dbg !11011
  %sub160 = sub i32 %203, %204, !dbg !11012
  %205 = load i32, i32* %count.addr, align 4, !dbg !11013
  %206 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11014
  %vc_cols161 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %206, i32 0, i32 4, !dbg !11015
  %207 = load i32, i32* %vc_cols161, align 4, !dbg !11015
  call void @fbcon_clear(%struct.vc_data* %202, i32 %sub160, i32 0, i32 %205, i32 %207) #10, !dbg !11016
  %208 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11017
  %vc_origin162 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %208, i32 0, i32 8, !dbg !11018
  %209 = load i64, i64* %vc_origin162, align 8, !dbg !11018
  %210 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11019
  %vc_size_row163 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %210, i32 0, i32 6, !dbg !11020
  %211 = load i32, i32* %vc_size_row163, align 4, !dbg !11020
  %212 = load i32, i32* %b.addr, align 4, !dbg !11021
  %213 = load i32, i32* %count.addr, align 4, !dbg !11022
  %sub164 = sub i32 %212, %213, !dbg !11023
  %mul165 = mul i32 %211, %sub164, !dbg !11024
  %conv166 = zext i32 %mul165 to i64, !dbg !11019
  %add167 = add i64 %209, %conv166, !dbg !11025
  %214 = inttoptr i64 %add167 to i16*, !dbg !11026
  %215 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11027
  %vc_video_erase_char168 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %215, i32 0, i32 28, !dbg !11028
  %216 = load i16, i16* %vc_video_erase_char168, align 8, !dbg !11028
  %217 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11029
  %vc_size_row169 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %217, i32 0, i32 6, !dbg !11030
  %218 = load i32, i32* %vc_size_row169, align 4, !dbg !11030
  %219 = load i32, i32* %count.addr, align 4, !dbg !11031
  %mul170 = mul i32 %218, %219, !dbg !11032
  call void @scr_memsetw(i16* %214, i16 zeroext %216, i32 %mul170) #10, !dbg !11033
  store i1 true, i1* %retval, align 1, !dbg !11034
  br label %return, !dbg !11034

sw.epilog:                                        ; preds = %if.end11, %if.end152, %if.end95, %if.end52
  br label %sw.epilog353, !dbg !11035

sw.bb171:                                         ; preds = %if.end
  %220 = load i32, i32* %count.addr, align 4, !dbg !11036
  %221 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11038
  %vc_rows172 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %221, i32 0, i32 5, !dbg !11039
  %222 = load i32, i32* %vc_rows172, align 8, !dbg !11039
  %cmp173 = icmp ugt i32 %220, %222, !dbg !11040
  br i1 %cmp173, label %if.then175, label %if.end177, !dbg !11041

if.then175:                                       ; preds = %sw.bb171
  %223 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11042
  %vc_rows176 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %223, i32 0, i32 5, !dbg !11043
  %224 = load i32, i32* %vc_rows176, align 8, !dbg !11043
  store i32 %224, i32* %count.addr, align 4, !dbg !11044
  br label %if.end177, !dbg !11045

if.end177:                                        ; preds = %if.then175, %sw.bb171
  %225 = load i32, i32* @logo_shown, align 4, !dbg !11046
  %cmp178 = icmp sge i32 %225, 0, !dbg !11048
  br i1 %cmp178, label %if.then180, label %if.end181, !dbg !11049

if.then180:                                       ; preds = %if.end177
  br label %redraw_down, !dbg !11050

if.end181:                                        ; preds = %if.end177
  %226 = load %struct.fbcon_display*, %struct.fbcon_display** %p, align 8, !dbg !11051
  %scrollmode182 = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %226, i32 0, i32 2, !dbg !11052
  %227 = load i16, i16* %scrollmode182, align 4, !dbg !11052
  %conv183 = zext i16 %227 to i32, !dbg !11051
  switch i32 %conv183, label %sw.epilog352 [
    i32 1, label %sw.bb184
    i32 3, label %sw.bb198
    i32 2, label %sw.bb235
    i32 5, label %sw.bb290
    i32 4, label %sw.bb336
  ], !dbg !11053

sw.bb184:                                         ; preds = %if.end181
  %228 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11054
  %229 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !11056
  %230 = load %struct.fbcon_display*, %struct.fbcon_display** %p, align 8, !dbg !11057
  %231 = load i32, i32* %b.addr, align 4, !dbg !11058
  %sub185 = sub i32 %231, 1, !dbg !11059
  %232 = load i32, i32* %b.addr, align 4, !dbg !11060
  %233 = load i32, i32* %t.addr, align 4, !dbg !11061
  %sub186 = sub i32 %232, %233, !dbg !11062
  %234 = load i32, i32* %count.addr, align 4, !dbg !11063
  %sub187 = sub i32 %sub186, %234, !dbg !11064
  %235 = load i32, i32* %count.addr, align 4, !dbg !11065
  %sub188 = sub i32 0, %235, !dbg !11066
  call void @fbcon_redraw_blit(%struct.vc_data* %228, %struct.fb_info* %229, %struct.fbcon_display* %230, i32 %sub185, i32 %sub187, i32 %sub188) #10, !dbg !11067
  %236 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11068
  %237 = load i32, i32* %t.addr, align 4, !dbg !11069
  %238 = load i32, i32* %count.addr, align 4, !dbg !11070
  %239 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11071
  %vc_cols189 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %239, i32 0, i32 4, !dbg !11072
  %240 = load i32, i32* %vc_cols189, align 4, !dbg !11072
  call void @fbcon_clear(%struct.vc_data* %236, i32 %237, i32 0, i32 %238, i32 %240) #10, !dbg !11073
  %241 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11074
  %vc_origin190 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %241, i32 0, i32 8, !dbg !11075
  %242 = load i64, i64* %vc_origin190, align 8, !dbg !11075
  %243 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11076
  %vc_size_row191 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %243, i32 0, i32 6, !dbg !11077
  %244 = load i32, i32* %vc_size_row191, align 4, !dbg !11077
  %245 = load i32, i32* %t.addr, align 4, !dbg !11078
  %mul192 = mul i32 %244, %245, !dbg !11079
  %conv193 = zext i32 %mul192 to i64, !dbg !11076
  %add194 = add i64 %242, %conv193, !dbg !11080
  %246 = inttoptr i64 %add194 to i16*, !dbg !11081
  %247 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11082
  %vc_video_erase_char195 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %247, i32 0, i32 28, !dbg !11083
  %248 = load i16, i16* %vc_video_erase_char195, align 8, !dbg !11083
  %249 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11084
  %vc_size_row196 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %249, i32 0, i32 6, !dbg !11085
  %250 = load i32, i32* %vc_size_row196, align 4, !dbg !11085
  %251 = load i32, i32* %count.addr, align 4, !dbg !11086
  %mul197 = mul i32 %250, %251, !dbg !11087
  call void @scr_memsetw(i16* %246, i16 zeroext %248, i32 %mul197) #10, !dbg !11088
  store i1 true, i1* %retval, align 1, !dbg !11089
  br label %return, !dbg !11089

sw.bb198:                                         ; preds = %if.end181
  %252 = load i32, i32* %b.addr, align 4, !dbg !11090
  %253 = load i32, i32* %t.addr, align 4, !dbg !11092
  %sub199 = sub i32 %252, %253, !dbg !11093
  %254 = load i32, i32* %count.addr, align 4, !dbg !11094
  %sub200 = sub i32 %sub199, %254, !dbg !11095
  %255 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11096
  %vc_rows201 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %255, i32 0, i32 5, !dbg !11097
  %256 = load i32, i32* %vc_rows201, align 8, !dbg !11097
  %mul202 = mul i32 3, %256, !dbg !11098
  %shr203 = lshr i32 %mul202, 2, !dbg !11099
  %cmp204 = icmp ugt i32 %sub200, %shr203, !dbg !11100
  br i1 %cmp204, label %if.then206, label %if.else222, !dbg !11101

if.then206:                                       ; preds = %sw.bb198
  %257 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11102
  %vc_rows207 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %257, i32 0, i32 5, !dbg !11105
  %258 = load i32, i32* %vc_rows207, align 8, !dbg !11105
  %259 = load i32, i32* %b.addr, align 4, !dbg !11106
  %sub208 = sub i32 %258, %259, !dbg !11107
  %cmp209 = icmp ugt i32 %sub208, 0, !dbg !11108
  br i1 %cmp209, label %if.then211, label %if.end216, !dbg !11109

if.then211:                                       ; preds = %if.then206
  %260 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11110
  %261 = load i32, i32* %b.addr, align 4, !dbg !11111
  %262 = load i32, i32* %b.addr, align 4, !dbg !11112
  %263 = load i32, i32* %count.addr, align 4, !dbg !11113
  %sub212 = sub i32 %262, %263, !dbg !11114
  %264 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11115
  %vc_rows213 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %264, i32 0, i32 5, !dbg !11116
  %265 = load i32, i32* %vc_rows213, align 8, !dbg !11116
  %266 = load i32, i32* %b.addr, align 4, !dbg !11117
  %sub214 = sub i32 %265, %266, !dbg !11118
  %267 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11119
  %vc_cols215 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %267, i32 0, i32 4, !dbg !11120
  %268 = load i32, i32* %vc_cols215, align 4, !dbg !11120
  call void @fbcon_bmove(%struct.vc_data* %260, i32 %261, i32 0, i32 %sub212, i32 0, i32 %sub214, i32 %268) #10, !dbg !11121
  br label %if.end216, !dbg !11121

if.end216:                                        ; preds = %if.then211, %if.then206
  %269 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11122
  %270 = load i32, i32* %count.addr, align 4, !dbg !11123
  call void @ywrap_down(%struct.vc_data* %269, i32 %270) #10, !dbg !11124
  %271 = load i32, i32* %t.addr, align 4, !dbg !11125
  %cmp217 = icmp ugt i32 %271, 0, !dbg !11127
  br i1 %cmp217, label %if.then219, label %if.end221, !dbg !11128

if.then219:                                       ; preds = %if.end216
  %272 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11129
  %273 = load i32, i32* %count.addr, align 4, !dbg !11130
  %274 = load i32, i32* %t.addr, align 4, !dbg !11131
  %275 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11132
  %vc_cols220 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %275, i32 0, i32 4, !dbg !11133
  %276 = load i32, i32* %vc_cols220, align 4, !dbg !11133
  call void @fbcon_bmove(%struct.vc_data* %272, i32 %273, i32 0, i32 0, i32 0, i32 %274, i32 %276) #10, !dbg !11134
  br label %if.end221, !dbg !11134

if.end221:                                        ; preds = %if.then219, %if.end216
  br label %if.end233, !dbg !11135

if.else222:                                       ; preds = %sw.bb198
  %277 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !11136
  %flags223 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %277, i32 0, i32 2, !dbg !11138
  %278 = load i32, i32* %flags223, align 8, !dbg !11138
  %and224 = and i32 %278, 128, !dbg !11139
  %tobool225 = icmp ne i32 %and224, 0, !dbg !11139
  br i1 %tobool225, label %if.then226, label %if.else231, !dbg !11140

if.then226:                                       ; preds = %if.else222
  %279 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11141
  %280 = load i32, i32* %t.addr, align 4, !dbg !11142
  %281 = load i32, i32* %t.addr, align 4, !dbg !11143
  %282 = load i32, i32* %count.addr, align 4, !dbg !11144
  %add227 = add i32 %281, %282, !dbg !11145
  %283 = load i32, i32* %b.addr, align 4, !dbg !11146
  %284 = load i32, i32* %t.addr, align 4, !dbg !11147
  %sub228 = sub i32 %283, %284, !dbg !11148
  %285 = load i32, i32* %count.addr, align 4, !dbg !11149
  %sub229 = sub i32 %sub228, %285, !dbg !11150
  %286 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11151
  %vc_cols230 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %286, i32 0, i32 4, !dbg !11152
  %287 = load i32, i32* %vc_cols230, align 4, !dbg !11152
  call void @fbcon_bmove(%struct.vc_data* %279, i32 %280, i32 0, i32 %add227, i32 0, i32 %sub229, i32 %287) #10, !dbg !11153
  br label %if.end232, !dbg !11153

if.else231:                                       ; preds = %if.else222
  br label %redraw_down, !dbg !11154

if.end232:                                        ; preds = %if.then226
  br label %if.end233

if.end233:                                        ; preds = %if.end232, %if.end221
  %288 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11155
  %289 = load i32, i32* %t.addr, align 4, !dbg !11156
  %290 = load i32, i32* %count.addr, align 4, !dbg !11157
  %291 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11158
  %vc_cols234 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %291, i32 0, i32 4, !dbg !11159
  %292 = load i32, i32* %vc_cols234, align 4, !dbg !11159
  call void @fbcon_clear(%struct.vc_data* %288, i32 %289, i32 0, i32 %290, i32 %292) #10, !dbg !11160
  br label %sw.epilog352, !dbg !11161

sw.bb235:                                         ; preds = %if.end181
  %293 = load i32, i32* %count.addr, align 4, !dbg !11162
  %294 = load %struct.fbcon_display*, %struct.fbcon_display** %p, align 8, !dbg !11164
  %yscroll236 = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %294, i32 0, i32 4, !dbg !11165
  %295 = load i16, i16* %yscroll236, align 8, !dbg !11165
  %conv237 = sext i16 %295 to i32, !dbg !11164
  %sub238 = sub i32 %293, %conv237, !dbg !11166
  %296 = load %struct.fbcon_display*, %struct.fbcon_display** %p, align 8, !dbg !11167
  %vrows239 = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %296, i32 0, i32 5, !dbg !11168
  %297 = load i32, i32* %vrows239, align 4, !dbg !11168
  %298 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11169
  %vc_rows240 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %298, i32 0, i32 5, !dbg !11170
  %299 = load i32, i32* %vc_rows240, align 8, !dbg !11170
  %sub241 = sub i32 %297, %299, !dbg !11171
  %cmp242 = icmp ule i32 %sub238, %sub241, !dbg !11172
  br i1 %cmp242, label %land.lhs.true244, label %if.else277, !dbg !11173

land.lhs.true244:                                 ; preds = %sw.bb235
  %300 = load i32, i32* %scroll_partial, align 4, !dbg !11174
  %tobool245 = icmp ne i32 %300, 0, !dbg !11174
  br i1 %tobool245, label %lor.lhs.false251, label %land.lhs.true246, !dbg !11175

land.lhs.true246:                                 ; preds = %land.lhs.true244
  %301 = load i32, i32* %b.addr, align 4, !dbg !11176
  %302 = load i32, i32* %t.addr, align 4, !dbg !11177
  %sub247 = sub i32 %301, %302, !dbg !11178
  %303 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11179
  %vc_rows248 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %303, i32 0, i32 5, !dbg !11180
  %304 = load i32, i32* %vc_rows248, align 8, !dbg !11180
  %cmp249 = icmp eq i32 %sub247, %304, !dbg !11181
  br i1 %cmp249, label %if.then261, label %lor.lhs.false251, !dbg !11182

lor.lhs.false251:                                 ; preds = %land.lhs.true246, %land.lhs.true244
  %305 = load i32, i32* %scroll_partial, align 4, !dbg !11183
  %tobool252 = icmp ne i32 %305, 0, !dbg !11183
  br i1 %tobool252, label %land.lhs.true253, label %if.else277, !dbg !11184

land.lhs.true253:                                 ; preds = %lor.lhs.false251
  %306 = load i32, i32* %b.addr, align 4, !dbg !11185
  %307 = load i32, i32* %t.addr, align 4, !dbg !11186
  %sub254 = sub i32 %306, %307, !dbg !11187
  %308 = load i32, i32* %count.addr, align 4, !dbg !11188
  %sub255 = sub i32 %sub254, %308, !dbg !11189
  %309 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11190
  %vc_rows256 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %309, i32 0, i32 5, !dbg !11191
  %310 = load i32, i32* %vc_rows256, align 8, !dbg !11191
  %mul257 = mul i32 3, %310, !dbg !11192
  %shr258 = lshr i32 %mul257, 2, !dbg !11193
  %cmp259 = icmp ugt i32 %sub255, %shr258, !dbg !11194
  br i1 %cmp259, label %if.then261, label %if.else277, !dbg !11195

if.then261:                                       ; preds = %land.lhs.true253, %land.lhs.true246
  %311 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11196
  %vc_rows262 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %311, i32 0, i32 5, !dbg !11199
  %312 = load i32, i32* %vc_rows262, align 8, !dbg !11199
  %313 = load i32, i32* %b.addr, align 4, !dbg !11200
  %sub263 = sub i32 %312, %313, !dbg !11201
  %cmp264 = icmp ugt i32 %sub263, 0, !dbg !11202
  br i1 %cmp264, label %if.then266, label %if.end271, !dbg !11203

if.then266:                                       ; preds = %if.then261
  %314 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11204
  %315 = load i32, i32* %b.addr, align 4, !dbg !11205
  %316 = load i32, i32* %b.addr, align 4, !dbg !11206
  %317 = load i32, i32* %count.addr, align 4, !dbg !11207
  %sub267 = sub i32 %316, %317, !dbg !11208
  %318 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11209
  %vc_rows268 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %318, i32 0, i32 5, !dbg !11210
  %319 = load i32, i32* %vc_rows268, align 8, !dbg !11210
  %320 = load i32, i32* %b.addr, align 4, !dbg !11211
  %sub269 = sub i32 %319, %320, !dbg !11212
  %321 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11213
  %vc_cols270 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %321, i32 0, i32 4, !dbg !11214
  %322 = load i32, i32* %vc_cols270, align 4, !dbg !11214
  call void @fbcon_bmove(%struct.vc_data* %314, i32 %315, i32 0, i32 %sub267, i32 0, i32 %sub269, i32 %322) #10, !dbg !11215
  br label %if.end271, !dbg !11215

if.end271:                                        ; preds = %if.then266, %if.then261
  %323 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11216
  %324 = load i32, i32* %count.addr, align 4, !dbg !11217
  call void @ypan_down(%struct.vc_data* %323, i32 %324) #10, !dbg !11218
  %325 = load i32, i32* %t.addr, align 4, !dbg !11219
  %cmp272 = icmp ugt i32 %325, 0, !dbg !11221
  br i1 %cmp272, label %if.then274, label %if.end276, !dbg !11222

if.then274:                                       ; preds = %if.end271
  %326 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11223
  %327 = load i32, i32* %count.addr, align 4, !dbg !11224
  %328 = load i32, i32* %t.addr, align 4, !dbg !11225
  %329 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11226
  %vc_cols275 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %329, i32 0, i32 4, !dbg !11227
  %330 = load i32, i32* %vc_cols275, align 4, !dbg !11227
  call void @fbcon_bmove(%struct.vc_data* %326, i32 %327, i32 0, i32 0, i32 0, i32 %328, i32 %330) #10, !dbg !11228
  br label %if.end276, !dbg !11228

if.end276:                                        ; preds = %if.then274, %if.end271
  br label %if.end288, !dbg !11229

if.else277:                                       ; preds = %land.lhs.true253, %lor.lhs.false251, %sw.bb235
  %331 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !11230
  %flags278 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %331, i32 0, i32 2, !dbg !11232
  %332 = load i32, i32* %flags278, align 8, !dbg !11232
  %and279 = and i32 %332, 128, !dbg !11233
  %tobool280 = icmp ne i32 %and279, 0, !dbg !11233
  br i1 %tobool280, label %if.then281, label %if.else286, !dbg !11234

if.then281:                                       ; preds = %if.else277
  %333 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11235
  %334 = load i32, i32* %t.addr, align 4, !dbg !11236
  %335 = load i32, i32* %t.addr, align 4, !dbg !11237
  %336 = load i32, i32* %count.addr, align 4, !dbg !11238
  %add282 = add i32 %335, %336, !dbg !11239
  %337 = load i32, i32* %b.addr, align 4, !dbg !11240
  %338 = load i32, i32* %t.addr, align 4, !dbg !11241
  %sub283 = sub i32 %337, %338, !dbg !11242
  %339 = load i32, i32* %count.addr, align 4, !dbg !11243
  %sub284 = sub i32 %sub283, %339, !dbg !11244
  %340 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11245
  %vc_cols285 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %340, i32 0, i32 4, !dbg !11246
  %341 = load i32, i32* %vc_cols285, align 4, !dbg !11246
  call void @fbcon_bmove(%struct.vc_data* %333, i32 %334, i32 0, i32 %add282, i32 0, i32 %sub284, i32 %341) #10, !dbg !11247
  br label %if.end287, !dbg !11247

if.else286:                                       ; preds = %if.else277
  br label %redraw_down, !dbg !11248

if.end287:                                        ; preds = %if.then281
  br label %if.end288

if.end288:                                        ; preds = %if.end287, %if.end276
  %342 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11249
  %343 = load i32, i32* %t.addr, align 4, !dbg !11250
  %344 = load i32, i32* %count.addr, align 4, !dbg !11251
  %345 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11252
  %vc_cols289 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %345, i32 0, i32 4, !dbg !11253
  %346 = load i32, i32* %vc_cols289, align 4, !dbg !11253
  call void @fbcon_clear(%struct.vc_data* %342, i32 %343, i32 0, i32 %344, i32 %346) #10, !dbg !11254
  br label %sw.epilog352, !dbg !11255

sw.bb290:                                         ; preds = %if.end181
  %347 = load i32, i32* %count.addr, align 4, !dbg !11256
  %348 = load %struct.fbcon_display*, %struct.fbcon_display** %p, align 8, !dbg !11258
  %yscroll291 = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %348, i32 0, i32 4, !dbg !11259
  %349 = load i16, i16* %yscroll291, align 8, !dbg !11259
  %conv292 = sext i16 %349 to i32, !dbg !11258
  %sub293 = sub i32 %347, %conv292, !dbg !11260
  %350 = load %struct.fbcon_display*, %struct.fbcon_display** %p, align 8, !dbg !11261
  %vrows294 = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %350, i32 0, i32 5, !dbg !11262
  %351 = load i32, i32* %vrows294, align 4, !dbg !11262
  %352 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11263
  %vc_rows295 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %352, i32 0, i32 5, !dbg !11264
  %353 = load i32, i32* %vc_rows295, align 8, !dbg !11264
  %sub296 = sub i32 %351, %353, !dbg !11265
  %cmp297 = icmp ule i32 %sub293, %sub296, !dbg !11266
  br i1 %cmp297, label %land.lhs.true299, label %if.else330, !dbg !11267

land.lhs.true299:                                 ; preds = %sw.bb290
  %354 = load i32, i32* %scroll_partial, align 4, !dbg !11268
  %tobool300 = icmp ne i32 %354, 0, !dbg !11268
  br i1 %tobool300, label %lor.lhs.false306, label %land.lhs.true301, !dbg !11269

land.lhs.true301:                                 ; preds = %land.lhs.true299
  %355 = load i32, i32* %b.addr, align 4, !dbg !11270
  %356 = load i32, i32* %t.addr, align 4, !dbg !11271
  %sub302 = sub i32 %355, %356, !dbg !11272
  %357 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11273
  %vc_rows303 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %357, i32 0, i32 5, !dbg !11274
  %358 = load i32, i32* %vc_rows303, align 8, !dbg !11274
  %cmp304 = icmp eq i32 %sub302, %358, !dbg !11275
  br i1 %cmp304, label %if.then316, label %lor.lhs.false306, !dbg !11276

lor.lhs.false306:                                 ; preds = %land.lhs.true301, %land.lhs.true299
  %359 = load i32, i32* %scroll_partial, align 4, !dbg !11277
  %tobool307 = icmp ne i32 %359, 0, !dbg !11277
  br i1 %tobool307, label %land.lhs.true308, label %if.else330, !dbg !11278

land.lhs.true308:                                 ; preds = %lor.lhs.false306
  %360 = load i32, i32* %b.addr, align 4, !dbg !11279
  %361 = load i32, i32* %t.addr, align 4, !dbg !11280
  %sub309 = sub i32 %360, %361, !dbg !11281
  %362 = load i32, i32* %count.addr, align 4, !dbg !11282
  %sub310 = sub i32 %sub309, %362, !dbg !11283
  %363 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11284
  %vc_rows311 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %363, i32 0, i32 5, !dbg !11285
  %364 = load i32, i32* %vc_rows311, align 8, !dbg !11285
  %mul312 = mul i32 3, %364, !dbg !11286
  %shr313 = lshr i32 %mul312, 2, !dbg !11287
  %cmp314 = icmp ugt i32 %sub310, %shr313, !dbg !11288
  br i1 %cmp314, label %if.then316, label %if.else330, !dbg !11289

if.then316:                                       ; preds = %land.lhs.true308, %land.lhs.true301
  %365 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11290
  %vc_rows317 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %365, i32 0, i32 5, !dbg !11293
  %366 = load i32, i32* %vc_rows317, align 8, !dbg !11293
  %367 = load i32, i32* %b.addr, align 4, !dbg !11294
  %sub318 = sub i32 %366, %367, !dbg !11295
  %cmp319 = icmp ugt i32 %sub318, 0, !dbg !11296
  br i1 %cmp319, label %if.then321, label %if.end325, !dbg !11297

if.then321:                                       ; preds = %if.then316
  %368 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11298
  %369 = load %struct.fbcon_display*, %struct.fbcon_display** %p, align 8, !dbg !11299
  %370 = load i32, i32* %b.addr, align 4, !dbg !11300
  %371 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11301
  %vc_rows322 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %371, i32 0, i32 5, !dbg !11302
  %372 = load i32, i32* %vc_rows322, align 8, !dbg !11302
  %373 = load i32, i32* %b.addr, align 4, !dbg !11303
  %sub323 = sub i32 %372, %373, !dbg !11304
  %374 = load i32, i32* %b.addr, align 4, !dbg !11305
  %375 = load i32, i32* %count.addr, align 4, !dbg !11306
  %sub324 = sub i32 %374, %375, !dbg !11307
  call void @fbcon_redraw_move(%struct.vc_data* %368, %struct.fbcon_display* %369, i32 %370, i32 %sub323, i32 %sub324) #10, !dbg !11308
  br label %if.end325, !dbg !11308

if.end325:                                        ; preds = %if.then321, %if.then316
  %376 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11309
  %377 = load i32, i32* %t.addr, align 4, !dbg !11310
  %378 = load i32, i32* %count.addr, align 4, !dbg !11311
  call void @ypan_down_redraw(%struct.vc_data* %376, i32 %377, i32 %378) #10, !dbg !11312
  %379 = load i32, i32* %t.addr, align 4, !dbg !11313
  %cmp326 = icmp ugt i32 %379, 0, !dbg !11315
  br i1 %cmp326, label %if.then328, label %if.end329, !dbg !11316

if.then328:                                       ; preds = %if.end325
  %380 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11317
  %381 = load %struct.fbcon_display*, %struct.fbcon_display** %p, align 8, !dbg !11318
  %382 = load i32, i32* %count.addr, align 4, !dbg !11319
  %383 = load i32, i32* %t.addr, align 4, !dbg !11320
  call void @fbcon_redraw_move(%struct.vc_data* %380, %struct.fbcon_display* %381, i32 %382, i32 %383, i32 0) #10, !dbg !11321
  br label %if.end329, !dbg !11321

if.end329:                                        ; preds = %if.then328, %if.end325
  br label %if.end334, !dbg !11322

if.else330:                                       ; preds = %land.lhs.true308, %lor.lhs.false306, %sw.bb290
  %384 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11323
  %385 = load %struct.fbcon_display*, %struct.fbcon_display** %p, align 8, !dbg !11324
  %386 = load i32, i32* %t.addr, align 4, !dbg !11325
  %387 = load i32, i32* %b.addr, align 4, !dbg !11326
  %388 = load i32, i32* %t.addr, align 4, !dbg !11327
  %sub331 = sub i32 %387, %388, !dbg !11328
  %389 = load i32, i32* %count.addr, align 4, !dbg !11329
  %sub332 = sub i32 %sub331, %389, !dbg !11330
  %390 = load i32, i32* %t.addr, align 4, !dbg !11331
  %391 = load i32, i32* %count.addr, align 4, !dbg !11332
  %add333 = add i32 %390, %391, !dbg !11333
  call void @fbcon_redraw_move(%struct.vc_data* %384, %struct.fbcon_display* %385, i32 %386, i32 %sub332, i32 %add333) #10, !dbg !11334
  br label %if.end334

if.end334:                                        ; preds = %if.else330, %if.end329
  %392 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11335
  %393 = load i32, i32* %t.addr, align 4, !dbg !11336
  %394 = load i32, i32* %count.addr, align 4, !dbg !11337
  %395 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11338
  %vc_cols335 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %395, i32 0, i32 4, !dbg !11339
  %396 = load i32, i32* %vc_cols335, align 4, !dbg !11339
  call void @fbcon_clear(%struct.vc_data* %392, i32 %393, i32 0, i32 %394, i32 %396) #10, !dbg !11340
  br label %sw.epilog352, !dbg !11341

sw.bb336:                                         ; preds = %if.end181
  br label %redraw_down, !dbg !11341

redraw_down:                                      ; preds = %sw.bb336, %if.else286, %if.else231, %if.then180
  call void @llvm.dbg.label(metadata !11342), !dbg !11343
  %397 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11344
  %398 = load %struct.fbcon_display*, %struct.fbcon_display** %p, align 8, !dbg !11345
  %399 = load i32, i32* %b.addr, align 4, !dbg !11346
  %sub337 = sub i32 %399, 1, !dbg !11347
  %400 = load i32, i32* %b.addr, align 4, !dbg !11348
  %401 = load i32, i32* %t.addr, align 4, !dbg !11349
  %sub338 = sub i32 %400, %401, !dbg !11350
  %402 = load i32, i32* %count.addr, align 4, !dbg !11351
  %sub339 = sub i32 %sub338, %402, !dbg !11352
  %403 = load i32, i32* %count.addr, align 4, !dbg !11353
  %sub340 = sub i32 0, %403, !dbg !11354
  %404 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11355
  %vc_cols341 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %404, i32 0, i32 4, !dbg !11356
  %405 = load i32, i32* %vc_cols341, align 4, !dbg !11356
  %mul342 = mul i32 %sub340, %405, !dbg !11357
  call void @fbcon_redraw(%struct.vc_data* %397, %struct.fbcon_display* %398, i32 %sub337, i32 %sub339, i32 %mul342) #10, !dbg !11358
  %406 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11359
  %407 = load i32, i32* %t.addr, align 4, !dbg !11360
  %408 = load i32, i32* %count.addr, align 4, !dbg !11361
  %409 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11362
  %vc_cols343 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %409, i32 0, i32 4, !dbg !11363
  %410 = load i32, i32* %vc_cols343, align 4, !dbg !11363
  call void @fbcon_clear(%struct.vc_data* %406, i32 %407, i32 0, i32 %408, i32 %410) #10, !dbg !11364
  %411 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11365
  %vc_origin344 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %411, i32 0, i32 8, !dbg !11366
  %412 = load i64, i64* %vc_origin344, align 8, !dbg !11366
  %413 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11367
  %vc_size_row345 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %413, i32 0, i32 6, !dbg !11368
  %414 = load i32, i32* %vc_size_row345, align 4, !dbg !11368
  %415 = load i32, i32* %t.addr, align 4, !dbg !11369
  %mul346 = mul i32 %414, %415, !dbg !11370
  %conv347 = zext i32 %mul346 to i64, !dbg !11367
  %add348 = add i64 %412, %conv347, !dbg !11371
  %416 = inttoptr i64 %add348 to i16*, !dbg !11372
  %417 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11373
  %vc_video_erase_char349 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %417, i32 0, i32 28, !dbg !11374
  %418 = load i16, i16* %vc_video_erase_char349, align 8, !dbg !11374
  %419 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11375
  %vc_size_row350 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %419, i32 0, i32 6, !dbg !11376
  %420 = load i32, i32* %vc_size_row350, align 4, !dbg !11376
  %421 = load i32, i32* %count.addr, align 4, !dbg !11377
  %mul351 = mul i32 %420, %421, !dbg !11378
  call void @scr_memsetw(i16* %416, i16 zeroext %418, i32 %mul351) #10, !dbg !11379
  store i1 true, i1* %retval, align 1, !dbg !11380
  br label %return, !dbg !11380

sw.epilog352:                                     ; preds = %if.end181, %if.end334, %if.end288, %if.end233
  br label %sw.epilog353, !dbg !11381

sw.epilog353:                                     ; preds = %sw.epilog352, %if.end, %sw.epilog
  store i1 false, i1* %retval, align 1, !dbg !11382
  br label %return, !dbg !11382

return:                                           ; preds = %sw.epilog353, %redraw_down, %sw.bb184, %redraw_up, %sw.bb12, %if.then
  %422 = load i1, i1* %retval, align 1, !dbg !11383
  ret i1 %422, !dbg !11383
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @fbcon_switch(%struct.vc_data* %vc) #1 !dbg !11384 {
entry:
  %retval = alloca i32, align 4
  %vc.addr = alloca %struct.vc_data*, align 8
  %info = alloca %struct.fb_info*, align 8
  %old_info = alloca %struct.fb_info*, align 8
  %ops = alloca %struct.fbcon_ops*, align 8
  %p = alloca %struct.fbcon_display*, align 8
  %var = alloca %struct.fb_var_screeninfo, align 4
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  %prev_console = alloca i32, align 4
  %charcnt = alloca i32, align 4
  %conp2 = alloca %struct.vc_data*, align 8
  %o = alloca %struct.fbcon_ops*, align 8
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !11385, metadata !DIExpression()), !dbg !11386
  call void @llvm.dbg.declare(metadata %struct.fb_info** %info, metadata !11387, metadata !DIExpression()), !dbg !11388
  call void @llvm.dbg.declare(metadata %struct.fb_info** %old_info, metadata !11389, metadata !DIExpression()), !dbg !11390
  store %struct.fb_info* null, %struct.fb_info** %old_info, align 8, !dbg !11390
  call void @llvm.dbg.declare(metadata %struct.fbcon_ops** %ops, metadata !11391, metadata !DIExpression()), !dbg !11392
  call void @llvm.dbg.declare(metadata %struct.fbcon_display** %p, metadata !11393, metadata !DIExpression()), !dbg !11394
  %0 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11395
  %vc_num = getelementptr inbounds %struct.vc_data, %struct.vc_data* %0, i32 0, i32 3, !dbg !11396
  %1 = load i16, i16* %vc_num, align 8, !dbg !11396
  %idxprom = zext i16 %1 to i64, !dbg !11397
  %arrayidx = getelementptr [63 x %struct.fbcon_display], [63 x %struct.fbcon_display]* @fb_display, i64 0, i64 %idxprom, !dbg !11397
  store %struct.fbcon_display* %arrayidx, %struct.fbcon_display** %p, align 8, !dbg !11394
  call void @llvm.dbg.declare(metadata %struct.fb_var_screeninfo* %var, metadata !11398, metadata !DIExpression()), !dbg !11399
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11400, metadata !DIExpression()), !dbg !11401
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !11402, metadata !DIExpression()), !dbg !11403
  call void @llvm.dbg.declare(metadata i32* %prev_console, metadata !11404, metadata !DIExpression()), !dbg !11405
  call void @llvm.dbg.declare(metadata i32* %charcnt, metadata !11406, metadata !DIExpression()), !dbg !11407
  store i32 256, i32* %charcnt, align 4, !dbg !11407
  %2 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11408
  %vc_num1 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %2, i32 0, i32 3, !dbg !11409
  %3 = load i16, i16* %vc_num1, align 8, !dbg !11409
  %idxprom2 = zext i16 %3 to i64, !dbg !11410
  %arrayidx3 = getelementptr [63 x i8], [63 x i8]* @con2fb_map, i64 0, i64 %idxprom2, !dbg !11410
  %4 = load i8, i8* %arrayidx3, align 1, !dbg !11410
  %idxprom4 = sext i8 %4 to i64, !dbg !11411
  %arrayidx5 = getelementptr [32 x %struct.fb_info*], [32 x %struct.fb_info*]* @registered_fb, i64 0, i64 %idxprom4, !dbg !11411
  %5 = load %struct.fb_info*, %struct.fb_info** %arrayidx5, align 8, !dbg !11411
  store %struct.fb_info* %5, %struct.fb_info** %info, align 8, !dbg !11412
  %6 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !11413
  %fbcon_par = getelementptr inbounds %struct.fb_info, %struct.fb_info* %6, i32 0, i32 29, !dbg !11414
  %7 = load i8*, i8** %fbcon_par, align 8, !dbg !11414
  %8 = bitcast i8* %7 to %struct.fbcon_ops*, !dbg !11413
  store %struct.fbcon_ops* %8, %struct.fbcon_ops** %ops, align 8, !dbg !11415
  %9 = load i32, i32* @logo_shown, align 4, !dbg !11416
  %cmp = icmp sge i32 %9, 0, !dbg !11418
  br i1 %cmp, label %if.then, label %if.end12, !dbg !11419

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.vc_data** %conp2, metadata !11420, metadata !DIExpression()), !dbg !11422
  %10 = load i32, i32* @logo_shown, align 4, !dbg !11423
  %idxprom6 = sext i32 %10 to i64, !dbg !11424
  %arrayidx7 = getelementptr [63 x %struct.vc], [63 x %struct.vc]* @vc_cons, i64 0, i64 %idxprom6, !dbg !11424
  %d = getelementptr inbounds %struct.vc, %struct.vc* %arrayidx7, i32 0, i32 0, !dbg !11425
  %11 = load %struct.vc_data*, %struct.vc_data** %d, align 8, !dbg !11425
  store %struct.vc_data* %11, %struct.vc_data** %conp2, align 8, !dbg !11422
  %12 = load %struct.vc_data*, %struct.vc_data** %conp2, align 8, !dbg !11426
  %vc_top = getelementptr inbounds %struct.vc_data, %struct.vc_data* %12, i32 0, i32 11, !dbg !11428
  %13 = load i32, i32* %vc_top, align 8, !dbg !11428
  %14 = load i32, i32* @logo_lines, align 4, !dbg !11429
  %cmp8 = icmp eq i32 %13, %14, !dbg !11430
  br i1 %cmp8, label %land.lhs.true, label %if.end, !dbg !11431

land.lhs.true:                                    ; preds = %if.then
  %15 = load %struct.vc_data*, %struct.vc_data** %conp2, align 8, !dbg !11432
  %vc_bottom = getelementptr inbounds %struct.vc_data, %struct.vc_data* %15, i32 0, i32 12, !dbg !11433
  %16 = load i32, i32* %vc_bottom, align 4, !dbg !11433
  %17 = load %struct.vc_data*, %struct.vc_data** %conp2, align 8, !dbg !11434
  %vc_rows = getelementptr inbounds %struct.vc_data, %struct.vc_data* %17, i32 0, i32 5, !dbg !11435
  %18 = load i32, i32* %vc_rows, align 8, !dbg !11435
  %cmp9 = icmp eq i32 %16, %18, !dbg !11436
  br i1 %cmp9, label %if.then10, label %if.end, !dbg !11437

if.then10:                                        ; preds = %land.lhs.true
  %19 = load %struct.vc_data*, %struct.vc_data** %conp2, align 8, !dbg !11438
  %vc_top11 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %19, i32 0, i32 11, !dbg !11439
  store i32 0, i32* %vc_top11, align 8, !dbg !11440
  br label %if.end, !dbg !11438

if.end:                                           ; preds = %if.then10, %land.lhs.true, %if.then
  store i32 -1, i32* @logo_shown, align 4, !dbg !11441
  br label %if.end12, !dbg !11442

if.end12:                                         ; preds = %if.end, %entry
  %20 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !11443
  %currcon = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %20, i32 0, i32 12, !dbg !11444
  %21 = load i32, i32* %currcon, align 8, !dbg !11444
  store i32 %21, i32* %prev_console, align 4, !dbg !11445
  %22 = load i32, i32* %prev_console, align 4, !dbg !11446
  %cmp13 = icmp ne i32 %22, -1, !dbg !11448
  br i1 %cmp13, label %if.then14, label %if.end19, !dbg !11449

if.then14:                                        ; preds = %if.end12
  %23 = load i32, i32* %prev_console, align 4, !dbg !11450
  %idxprom15 = sext i32 %23 to i64, !dbg !11451
  %arrayidx16 = getelementptr [63 x i8], [63 x i8]* @con2fb_map, i64 0, i64 %idxprom15, !dbg !11451
  %24 = load i8, i8* %arrayidx16, align 1, !dbg !11451
  %idxprom17 = sext i8 %24 to i64, !dbg !11452
  %arrayidx18 = getelementptr [32 x %struct.fb_info*], [32 x %struct.fb_info*]* @registered_fb, i64 0, i64 %idxprom17, !dbg !11452
  %25 = load %struct.fb_info*, %struct.fb_info** %arrayidx18, align 8, !dbg !11452
  store %struct.fb_info* %25, %struct.fb_info** %old_info, align 8, !dbg !11453
  br label %if.end19, !dbg !11454

if.end19:                                         ; preds = %if.then14, %if.end12
  store i32 0, i32* %i, align 4, !dbg !11455
  br label %for.cond, !dbg !11455

for.cond:                                         ; preds = %for.inc, %if.end19
  %26 = load i32, i32* %i, align 4, !dbg !11457
  %cmp20 = icmp slt i32 %26, 32, !dbg !11457
  br i1 %cmp20, label %for.body, label %for.end, !dbg !11455

for.body:                                         ; preds = %for.cond
  %27 = load i32, i32* %i, align 4, !dbg !11459
  %idxprom21 = sext i32 %27 to i64, !dbg !11459
  %arrayidx22 = getelementptr [32 x %struct.fb_info*], [32 x %struct.fb_info*]* @registered_fb, i64 0, i64 %idxprom21, !dbg !11459
  %28 = load %struct.fb_info*, %struct.fb_info** %arrayidx22, align 8, !dbg !11459
  %tobool = icmp ne %struct.fb_info* %28, null, !dbg !11459
  br i1 %tobool, label %if.else, label %if.then23, !dbg !11457

if.then23:                                        ; preds = %for.body
  br label %if.end35, !dbg !11461

if.else:                                          ; preds = %for.body
  %29 = load i32, i32* %i, align 4, !dbg !11463
  %idxprom24 = sext i32 %29 to i64, !dbg !11466
  %arrayidx25 = getelementptr [32 x %struct.fb_info*], [32 x %struct.fb_info*]* @registered_fb, i64 0, i64 %idxprom24, !dbg !11466
  %30 = load %struct.fb_info*, %struct.fb_info** %arrayidx25, align 8, !dbg !11466
  %fbcon_par26 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %30, i32 0, i32 29, !dbg !11467
  %31 = load i8*, i8** %fbcon_par26, align 8, !dbg !11467
  %tobool27 = icmp ne i8* %31, null, !dbg !11466
  br i1 %tobool27, label %if.then28, label %if.end34, !dbg !11468

if.then28:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata %struct.fbcon_ops** %o, metadata !11469, metadata !DIExpression()), !dbg !11471
  %32 = load i32, i32* %i, align 4, !dbg !11472
  %idxprom29 = sext i32 %32 to i64, !dbg !11473
  %arrayidx30 = getelementptr [32 x %struct.fb_info*], [32 x %struct.fb_info*]* @registered_fb, i64 0, i64 %idxprom29, !dbg !11473
  %33 = load %struct.fb_info*, %struct.fb_info** %arrayidx30, align 8, !dbg !11473
  %fbcon_par31 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %33, i32 0, i32 29, !dbg !11474
  %34 = load i8*, i8** %fbcon_par31, align 8, !dbg !11474
  %35 = bitcast i8* %34 to %struct.fbcon_ops*, !dbg !11473
  store %struct.fbcon_ops* %35, %struct.fbcon_ops** %o, align 8, !dbg !11471
  %36 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11475
  %vc_num32 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %36, i32 0, i32 3, !dbg !11476
  %37 = load i16, i16* %vc_num32, align 8, !dbg !11476
  %conv = zext i16 %37 to i32, !dbg !11475
  %38 = load %struct.fbcon_ops*, %struct.fbcon_ops** %o, align 8, !dbg !11477
  %currcon33 = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %38, i32 0, i32 12, !dbg !11478
  store i32 %conv, i32* %currcon33, align 8, !dbg !11479
  br label %if.end34, !dbg !11480

if.end34:                                         ; preds = %if.then28, %if.else
  br label %if.end35

if.end35:                                         ; preds = %if.end34, %if.then23
  br label %for.inc, !dbg !11459

for.inc:                                          ; preds = %if.end35
  %39 = load i32, i32* %i, align 4, !dbg !11457
  %inc = add i32 %39, 1, !dbg !11457
  store i32 %inc, i32* %i, align 4, !dbg !11457
  br label %for.cond, !dbg !11457, !llvm.loop !11481

for.end:                                          ; preds = %for.cond
  %40 = bitcast %struct.fb_var_screeninfo* %var to i8*, !dbg !11483
  call void @llvm.memset.p0i8.i64(i8* align 4 %40, i8 0, i64 160, i1 false), !dbg !11483
  %41 = load %struct.fbcon_display*, %struct.fbcon_display** %p, align 8, !dbg !11484
  call void @display_to_var(%struct.fb_var_screeninfo* %var, %struct.fbcon_display* %41) #10, !dbg !11485
  %activate = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %var, i32 0, i32 13, !dbg !11486
  store i32 0, i32* %activate, align 4, !dbg !11487
  %activate36 = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %var, i32 0, i32 13, !dbg !11488
  %42 = load i32, i32* %activate36, align 4, !dbg !11488
  %43 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !11489
  %var37 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %43, i32 0, i32 6, !dbg !11490
  %activate38 = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %var37, i32 0, i32 13, !dbg !11491
  store i32 %42, i32* %activate38, align 4, !dbg !11492
  %44 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !11493
  %var39 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %44, i32 0, i32 6, !dbg !11494
  %vmode = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %var39, i32 0, i32 25, !dbg !11495
  %45 = load i32, i32* %vmode, align 4, !dbg !11495
  %and = and i32 %45, -256, !dbg !11496
  %vmode40 = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %var, i32 0, i32 25, !dbg !11497
  %46 = load i32, i32* %vmode40, align 4, !dbg !11498
  %or = or i32 %46, %and, !dbg !11498
  store i32 %or, i32* %vmode40, align 4, !dbg !11498
  %47 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !11499
  %call = call i32 @fb_set_var(%struct.fb_info* %47, %struct.fb_var_screeninfo* %var) #10, !dbg !11500
  %48 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !11501
  %var41 = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %48, i32 0, i32 7, !dbg !11502
  %49 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !11503
  %var42 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %49, i32 0, i32 6, !dbg !11504
  %50 = bitcast %struct.fb_var_screeninfo* %var41 to i8*, !dbg !11504
  %51 = bitcast %struct.fb_var_screeninfo* %var42 to i8*, !dbg !11504
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %50, i8* align 8 %51, i64 160, i1 false), !dbg !11504
  %52 = load %struct.fb_info*, %struct.fb_info** %old_info, align 8, !dbg !11505
  %cmp43 = icmp ne %struct.fb_info* %52, null, !dbg !11507
  br i1 %cmp43, label %land.lhs.true45, label %if.end65, !dbg !11508

land.lhs.true45:                                  ; preds = %for.end
  %53 = load %struct.fb_info*, %struct.fb_info** %old_info, align 8, !dbg !11509
  %54 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !11510
  %cmp46 = icmp ne %struct.fb_info* %53, %54, !dbg !11511
  br i1 %cmp46, label %if.then50, label %lor.lhs.false, !dbg !11512

lor.lhs.false:                                    ; preds = %land.lhs.true45
  %55 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !11513
  %flags = getelementptr inbounds %struct.fb_info, %struct.fb_info* %55, i32 0, i32 2, !dbg !11514
  %56 = load i32, i32* %flags, align 8, !dbg !11514
  %and48 = and i32 %56, 262144, !dbg !11515
  %tobool49 = icmp ne i32 %and48, 0, !dbg !11515
  br i1 %tobool49, label %if.then50, label %if.end65, !dbg !11516

if.then50:                                        ; preds = %lor.lhs.false, %land.lhs.true45
  %57 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !11517
  %fbops = getelementptr inbounds %struct.fb_info, %struct.fb_info* %57, i32 0, i32 20, !dbg !11520
  %58 = load %struct.fb_ops*, %struct.fb_ops** %fbops, align 8, !dbg !11520
  %fb_set_par = getelementptr inbounds %struct.fb_ops, %struct.fb_ops* %58, i32 0, i32 6, !dbg !11521
  %59 = load i32 (%struct.fb_info*)*, i32 (%struct.fb_info*)** %fb_set_par, align 8, !dbg !11521
  %tobool51 = icmp ne i32 (%struct.fb_info*)* %59, null, !dbg !11517
  br i1 %tobool51, label %if.then52, label %if.end60, !dbg !11522

if.then52:                                        ; preds = %if.then50
  %60 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !11523
  %fbops53 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %60, i32 0, i32 20, !dbg !11525
  %61 = load %struct.fb_ops*, %struct.fb_ops** %fbops53, align 8, !dbg !11525
  %fb_set_par54 = getelementptr inbounds %struct.fb_ops, %struct.fb_ops* %61, i32 0, i32 6, !dbg !11526
  %62 = load i32 (%struct.fb_info*)*, i32 (%struct.fb_info*)** %fb_set_par54, align 8, !dbg !11526
  %63 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !11527
  %call55 = call i32 %62(%struct.fb_info* %63) #10, !dbg !11523
  store i32 %call55, i32* %ret, align 4, !dbg !11528
  %64 = load i32, i32* %ret, align 4, !dbg !11529
  %tobool56 = icmp ne i32 %64, 0, !dbg !11529
  br i1 %tobool56, label %if.then57, label %if.end59, !dbg !11531

if.then57:                                        ; preds = %if.then52
  %65 = load i32, i32* %ret, align 4, !dbg !11532
  %call58 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.25, i64 0, i64 0), i32 %65) #11, !dbg !11533
  br label %if.end59, !dbg !11533

if.end59:                                         ; preds = %if.then57, %if.then52
  br label %if.end60, !dbg !11534

if.end60:                                         ; preds = %if.end59, %if.then50
  %66 = load %struct.fb_info*, %struct.fb_info** %old_info, align 8, !dbg !11535
  %67 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !11537
  %cmp61 = icmp ne %struct.fb_info* %66, %67, !dbg !11538
  br i1 %cmp61, label %if.then63, label %if.end64, !dbg !11539

if.then63:                                        ; preds = %if.end60
  %68 = load %struct.fb_info*, %struct.fb_info** %old_info, align 8, !dbg !11540
  call void @fbcon_del_cursor_timer(%struct.fb_info* %68) #10, !dbg !11541
  br label %if.end64, !dbg !11541

if.end64:                                         ; preds = %if.then63, %if.end60
  br label %if.end65, !dbg !11542

if.end65:                                         ; preds = %if.end64, %lor.lhs.false, %for.end
  %69 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11543
  %70 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !11545
  %call66 = call i32 @fbcon_is_inactive(%struct.vc_data* %69, %struct.fb_info* %70) #10, !dbg !11546
  %tobool67 = icmp ne i32 %call66, 0, !dbg !11546
  br i1 %tobool67, label %if.then71, label %lor.lhs.false68, !dbg !11547

lor.lhs.false68:                                  ; preds = %if.end65
  %71 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !11548
  %blank_state = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %71, i32 0, i32 16, !dbg !11549
  %72 = load i32, i32* %blank_state, align 8, !dbg !11549
  %cmp69 = icmp ne i32 %72, 0, !dbg !11550
  br i1 %cmp69, label %if.then71, label %if.else72, !dbg !11551

if.then71:                                        ; preds = %lor.lhs.false68, %if.end65
  %73 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !11552
  call void @fbcon_del_cursor_timer(%struct.fb_info* %73) #10, !dbg !11553
  br label %if.end73, !dbg !11553

if.else72:                                        ; preds = %lor.lhs.false68
  %74 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !11554
  call void @fbcon_add_cursor_timer(%struct.fb_info* %74) #10, !dbg !11555
  br label %if.end73

if.end73:                                         ; preds = %if.else72, %if.then71
  %75 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11556
  %76 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !11557
  call void @set_blitting_type(%struct.vc_data* %75, %struct.fb_info* %76) #10, !dbg !11558
  %77 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !11559
  %cursor_reset = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %77, i32 0, i32 15, !dbg !11560
  store i32 1, i32* %cursor_reset, align 4, !dbg !11561
  %78 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !11562
  %rotate_font = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %78, i32 0, i32 6, !dbg !11564
  %79 = load i32 (%struct.fb_info*, %struct.vc_data*)*, i32 (%struct.fb_info*, %struct.vc_data*)** %rotate_font, align 8, !dbg !11564
  %tobool74 = icmp ne i32 (%struct.fb_info*, %struct.vc_data*)* %79, null, !dbg !11562
  br i1 %tobool74, label %land.lhs.true75, label %if.end80, !dbg !11565

land.lhs.true75:                                  ; preds = %if.end73
  %80 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !11566
  %rotate_font76 = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %80, i32 0, i32 6, !dbg !11567
  %81 = load i32 (%struct.fb_info*, %struct.vc_data*)*, i32 (%struct.fb_info*, %struct.vc_data*)** %rotate_font76, align 8, !dbg !11567
  %82 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !11568
  %83 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11569
  %call77 = call i32 %81(%struct.fb_info* %82, %struct.vc_data* %83) #10, !dbg !11566
  %tobool78 = icmp ne i32 %call77, 0, !dbg !11566
  br i1 %tobool78, label %if.then79, label %if.end80, !dbg !11570

if.then79:                                        ; preds = %land.lhs.true75
  %84 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !11571
  %rotate = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %84, i32 0, i32 20, !dbg !11573
  store i32 0, i32* %rotate, align 8, !dbg !11574
  %85 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11575
  %86 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !11576
  call void @set_blitting_type(%struct.vc_data* %85, %struct.fb_info* %86) #10, !dbg !11577
  br label %if.end80, !dbg !11578

if.end80:                                         ; preds = %if.then79, %land.lhs.true75, %if.end73
  %87 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !11579
  %var81 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %87, i32 0, i32 6, !dbg !11580
  %88 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !11581
  %fix = getelementptr inbounds %struct.fb_info, %struct.fb_info* %88, i32 0, i32 7, !dbg !11582
  %call82 = call i32 @fb_get_color_depth(%struct.fb_var_screeninfo* %var81, %struct.fb_fix_screeninfo* %fix) #10, !dbg !11583
  %cmp83 = icmp ne i32 %call82, 1, !dbg !11584
  %conv84 = zext i1 %cmp83 to i32, !dbg !11584
  %89 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11585
  %vc_can_do_color = getelementptr inbounds %struct.vc_data, %struct.vc_data* %89, i32 0, i32 36, !dbg !11586
  %90 = trunc i32 %conv84 to i16, !dbg !11587
  %bf.load = load i16, i16* %vc_can_do_color, align 8, !dbg !11587
  %bf.value = and i16 %90, 1, !dbg !11587
  %bf.shl = shl i16 %bf.value, 11, !dbg !11587
  %bf.clear = and i16 %bf.load, -2049, !dbg !11587
  %bf.set = or i16 %bf.clear, %bf.shl, !dbg !11587
  store i16 %bf.set, i16* %vc_can_do_color, align 8, !dbg !11587
  %bf.result.cast = zext i16 %bf.value to i32, !dbg !11587
  %91 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11588
  %vc_can_do_color85 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %91, i32 0, i32 36, !dbg !11589
  %bf.load86 = load i16, i16* %vc_can_do_color85, align 8, !dbg !11589
  %bf.lshr = lshr i16 %bf.load86, 11, !dbg !11589
  %bf.clear87 = and i16 %bf.lshr, 1, !dbg !11589
  %bf.cast = zext i16 %bf.clear87 to i32, !dbg !11589
  %tobool88 = icmp ne i32 %bf.cast, 0, !dbg !11588
  %92 = zext i1 %tobool88 to i64, !dbg !11588
  %cond = select i1 %tobool88, i32 30464, i32 2048, !dbg !11588
  %conv89 = trunc i32 %cond to i16, !dbg !11588
  %93 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11590
  %vc_complement_mask = getelementptr inbounds %struct.vc_data, %struct.vc_data* %93, i32 0, i32 23, !dbg !11591
  store i16 %conv89, i16* %vc_complement_mask, align 8, !dbg !11592
  %94 = load %struct.fbcon_display*, %struct.fbcon_display** %p, align 8, !dbg !11593
  %userfont = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %94, i32 0, i32 1, !dbg !11595
  %95 = load i32, i32* %userfont, align 8, !dbg !11595
  %tobool90 = icmp ne i32 %95, 0, !dbg !11593
  br i1 %tobool90, label %if.then91, label %if.end93, !dbg !11596

if.then91:                                        ; preds = %if.end80
  %96 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11597
  %vc_font = getelementptr inbounds %struct.vc_data, %struct.vc_data* %96, i32 0, i32 27, !dbg !11597
  %data = getelementptr inbounds %struct.console_font, %struct.console_font* %vc_font, i32 0, i32 3, !dbg !11597
  %97 = load i8*, i8** %data, align 8, !dbg !11597
  %98 = bitcast i8* %97 to i32*, !dbg !11597
  %arrayidx92 = getelementptr i32, i32* %98, i64 -3, !dbg !11597
  %99 = load i32, i32* %arrayidx92, align 4, !dbg !11597
  store i32 %99, i32* %charcnt, align 4, !dbg !11598
  br label %if.end93, !dbg !11599

if.end93:                                         ; preds = %if.then91, %if.end80
  %100 = load i32, i32* %charcnt, align 4, !dbg !11600
  %cmp94 = icmp sgt i32 %100, 256, !dbg !11602
  br i1 %cmp94, label %if.then96, label %if.end100, !dbg !11603

if.then96:                                        ; preds = %if.end93
  %101 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11604
  %vc_complement_mask97 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %101, i32 0, i32 23, !dbg !11605
  %102 = load i16, i16* %vc_complement_mask97, align 8, !dbg !11606
  %conv98 = zext i16 %102 to i32, !dbg !11606
  %shl = shl i32 %conv98, 1, !dbg !11606
  %conv99 = trunc i32 %shl to i16, !dbg !11606
  store i16 %conv99, i16* %vc_complement_mask97, align 8, !dbg !11606
  br label %if.end100, !dbg !11604

if.end100:                                        ; preds = %if.then96, %if.end93
  %103 = load %struct.fbcon_display*, %struct.fbcon_display** %p, align 8, !dbg !11607
  %104 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !11608
  %105 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11609
  call void @updatescrollmode(%struct.fbcon_display* %103, %struct.fb_info* %104, %struct.vc_data* %105) #10, !dbg !11610
  %106 = load %struct.fbcon_display*, %struct.fbcon_display** %p, align 8, !dbg !11611
  %scrollmode = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %106, i32 0, i32 2, !dbg !11612
  %107 = load i16, i16* %scrollmode, align 4, !dbg !11612
  %conv101 = zext i16 %107 to i32, !dbg !11611
  switch i32 %conv101, label %sw.default [
    i32 3, label %sw.bb
    i32 2, label %sw.bb103
    i32 5, label %sw.bb103
  ], !dbg !11613

sw.bb:                                            ; preds = %if.end100
  %108 = load %struct.fbcon_display*, %struct.fbcon_display** %p, align 8, !dbg !11614
  %vrows = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %108, i32 0, i32 5, !dbg !11616
  %109 = load i32, i32* %vrows, align 4, !dbg !11616
  %110 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11617
  %vc_rows102 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %110, i32 0, i32 5, !dbg !11618
  %111 = load i32, i32* %vc_rows102, align 8, !dbg !11618
  %sub = sub i32 %109, %111, !dbg !11619
  store i32 %sub, i32* @scrollback_phys_max, align 4, !dbg !11620
  br label %sw.epilog, !dbg !11621

sw.bb103:                                         ; preds = %if.end100, %if.end100
  %112 = load %struct.fbcon_display*, %struct.fbcon_display** %p, align 8, !dbg !11622
  %vrows104 = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %112, i32 0, i32 5, !dbg !11623
  %113 = load i32, i32* %vrows104, align 4, !dbg !11623
  %114 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11624
  %vc_rows105 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %114, i32 0, i32 5, !dbg !11625
  %115 = load i32, i32* %vc_rows105, align 8, !dbg !11625
  %mul = mul i32 2, %115, !dbg !11626
  %sub106 = sub i32 %113, %mul, !dbg !11627
  store i32 %sub106, i32* @scrollback_phys_max, align 4, !dbg !11628
  %116 = load i32, i32* @scrollback_phys_max, align 4, !dbg !11629
  %cmp107 = icmp slt i32 %116, 0, !dbg !11631
  br i1 %cmp107, label %if.then109, label %if.end110, !dbg !11632

if.then109:                                       ; preds = %sw.bb103
  store i32 0, i32* @scrollback_phys_max, align 4, !dbg !11633
  br label %if.end110, !dbg !11634

if.end110:                                        ; preds = %if.then109, %sw.bb103
  br label %sw.epilog, !dbg !11635

sw.default:                                       ; preds = %if.end100
  store i32 0, i32* @scrollback_phys_max, align 4, !dbg !11636
  br label %sw.epilog, !dbg !11637

sw.epilog:                                        ; preds = %sw.default, %if.end110, %sw.bb
  store i32 0, i32* @scrollback_max, align 4, !dbg !11638
  store i32 0, i32* @scrollback_current, align 4, !dbg !11639
  %117 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11640
  %118 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !11642
  %call111 = call i32 @fbcon_is_inactive(%struct.vc_data* %117, %struct.fb_info* %118) #10, !dbg !11643
  %tobool112 = icmp ne i32 %call111, 0, !dbg !11643
  br i1 %tobool112, label %if.end117, label %if.then113, !dbg !11644

if.then113:                                       ; preds = %sw.epilog
  %119 = load %struct.fbcon_display*, %struct.fbcon_display** %p, align 8, !dbg !11645
  %yscroll = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %119, i32 0, i32 4, !dbg !11647
  store i16 0, i16* %yscroll, align 8, !dbg !11648
  %120 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !11649
  %var114 = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %120, i32 0, i32 7, !dbg !11650
  %yoffset = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %var114, i32 0, i32 5, !dbg !11651
  store i32 0, i32* %yoffset, align 4, !dbg !11652
  %121 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !11653
  %var115 = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %121, i32 0, i32 7, !dbg !11654
  %xoffset = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %var115, i32 0, i32 4, !dbg !11655
  store i32 0, i32* %xoffset, align 8, !dbg !11656
  %122 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !11657
  %update_start = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %122, i32 0, i32 5, !dbg !11658
  %123 = load i32 (%struct.fb_info*)*, i32 (%struct.fb_info*)** %update_start, align 8, !dbg !11658
  %124 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !11659
  %call116 = call i32 %123(%struct.fb_info* %124) #10, !dbg !11657
  br label %if.end117, !dbg !11660

if.end117:                                        ; preds = %if.then113, %sw.epilog
  %125 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11661
  call void @fbcon_set_palette(%struct.vc_data* %125, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @color_table, i64 0, i64 0)) #10, !dbg !11662
  %126 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11663
  call void @fbcon_clear_margins(%struct.vc_data* %126, i32 0) #10, !dbg !11664
  %127 = load i32, i32* @logo_shown, align 4, !dbg !11665
  %cmp118 = icmp eq i32 %127, -2, !dbg !11667
  br i1 %cmp118, label %if.then120, label %if.end131, !dbg !11668

if.then120:                                       ; preds = %if.end117
  %128 = load i32, i32* @fg_console, align 4, !dbg !11669
  store i32 %128, i32* @logo_shown, align 4, !dbg !11671
  %129 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !11672
  %130 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !11673
  %rotate121 = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %130, i32 0, i32 20, !dbg !11674
  %131 = load i32, i32* %rotate121, align 8, !dbg !11674
  %call122 = call i32 @fb_show_logo(%struct.fb_info* %129, i32 %131) #10, !dbg !11675
  %132 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11676
  %133 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11677
  %vc_origin = getelementptr inbounds %struct.vc_data, %struct.vc_data* %133, i32 0, i32 8, !dbg !11678
  %134 = load i64, i64* %vc_origin, align 8, !dbg !11678
  %135 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11679
  %vc_size_row = getelementptr inbounds %struct.vc_data, %struct.vc_data* %135, i32 0, i32 6, !dbg !11680
  %136 = load i32, i32* %vc_size_row, align 4, !dbg !11680
  %137 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11681
  %vc_top123 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %137, i32 0, i32 11, !dbg !11682
  %138 = load i32, i32* %vc_top123, align 8, !dbg !11682
  %mul124 = mul i32 %136, %138, !dbg !11683
  %conv125 = zext i32 %mul124 to i64, !dbg !11679
  %add = add i64 %134, %conv125, !dbg !11684
  %139 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11685
  %vc_size_row126 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %139, i32 0, i32 6, !dbg !11686
  %140 = load i32, i32* %vc_size_row126, align 4, !dbg !11686
  %141 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11687
  %vc_bottom127 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %141, i32 0, i32 12, !dbg !11688
  %142 = load i32, i32* %vc_bottom127, align 4, !dbg !11688
  %143 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11689
  %vc_top128 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %143, i32 0, i32 11, !dbg !11690
  %144 = load i32, i32* %vc_top128, align 8, !dbg !11690
  %sub129 = sub i32 %142, %144, !dbg !11691
  %mul130 = mul i32 %140, %sub129, !dbg !11692
  %div = udiv i32 %mul130, 2, !dbg !11693
  call void @update_region(%struct.vc_data* %132, i64 %add, i32 %div) #10, !dbg !11694
  store i32 0, i32* %retval, align 4, !dbg !11695
  br label %return, !dbg !11695

if.end131:                                        ; preds = %if.end117
  store i32 1, i32* %retval, align 4, !dbg !11696
  br label %return, !dbg !11696

return:                                           ; preds = %if.end131, %if.then120
  %145 = load i32, i32* %retval, align 4, !dbg !11697
  ret i32 %145, !dbg !11697
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @fbcon_blank(%struct.vc_data* %vc, i32 %blank, i32 %mode_switch) #1 !dbg !11698 {
entry:
  %vc.addr = alloca %struct.vc_data*, align 8
  %blank.addr = alloca i32, align 4
  %mode_switch.addr = alloca i32, align 4
  %info = alloca %struct.fb_info*, align 8
  %ops = alloca %struct.fbcon_ops*, align 8
  %var = alloca %struct.fb_var_screeninfo, align 4
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !11699, metadata !DIExpression()), !dbg !11700
  store i32 %blank, i32* %blank.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %blank.addr, metadata !11701, metadata !DIExpression()), !dbg !11702
  store i32 %mode_switch, i32* %mode_switch.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode_switch.addr, metadata !11703, metadata !DIExpression()), !dbg !11704
  call void @llvm.dbg.declare(metadata %struct.fb_info** %info, metadata !11705, metadata !DIExpression()), !dbg !11706
  %0 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11707
  %vc_num = getelementptr inbounds %struct.vc_data, %struct.vc_data* %0, i32 0, i32 3, !dbg !11708
  %1 = load i16, i16* %vc_num, align 8, !dbg !11708
  %idxprom = zext i16 %1 to i64, !dbg !11709
  %arrayidx = getelementptr [63 x i8], [63 x i8]* @con2fb_map, i64 0, i64 %idxprom, !dbg !11709
  %2 = load i8, i8* %arrayidx, align 1, !dbg !11709
  %idxprom1 = sext i8 %2 to i64, !dbg !11710
  %arrayidx2 = getelementptr [32 x %struct.fb_info*], [32 x %struct.fb_info*]* @registered_fb, i64 0, i64 %idxprom1, !dbg !11710
  %3 = load %struct.fb_info*, %struct.fb_info** %arrayidx2, align 8, !dbg !11710
  store %struct.fb_info* %3, %struct.fb_info** %info, align 8, !dbg !11706
  call void @llvm.dbg.declare(metadata %struct.fbcon_ops** %ops, metadata !11711, metadata !DIExpression()), !dbg !11712
  %4 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !11713
  %fbcon_par = getelementptr inbounds %struct.fb_info, %struct.fb_info* %4, i32 0, i32 29, !dbg !11714
  %5 = load i8*, i8** %fbcon_par, align 8, !dbg !11714
  %6 = bitcast i8* %5 to %struct.fbcon_ops*, !dbg !11713
  store %struct.fbcon_ops* %6, %struct.fbcon_ops** %ops, align 8, !dbg !11712
  %7 = load i32, i32* %mode_switch.addr, align 4, !dbg !11715
  %tobool = icmp ne i32 %7, 0, !dbg !11715
  br i1 %tobool, label %if.then, label %if.end9, !dbg !11717

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.fb_var_screeninfo* %var, metadata !11718, metadata !DIExpression()), !dbg !11720
  %8 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !11721
  %var3 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %8, i32 0, i32 6, !dbg !11722
  %9 = bitcast %struct.fb_var_screeninfo* %var to i8*, !dbg !11722
  %10 = bitcast %struct.fb_var_screeninfo* %var3 to i8*, !dbg !11722
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %9, i8* align 8 %10, i64 160, i1 false), !dbg !11722
  %11 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !11723
  %graphics = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %11, i32 0, i32 17, !dbg !11724
  store i32 1, i32* %graphics, align 4, !dbg !11725
  %12 = load i32, i32* %blank.addr, align 4, !dbg !11726
  %tobool4 = icmp ne i32 %12, 0, !dbg !11726
  br i1 %tobool4, label %if.end, label %if.then5, !dbg !11728

if.then5:                                         ; preds = %if.then
  %activate = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %var, i32 0, i32 13, !dbg !11729
  store i32 640, i32* %activate, align 4, !dbg !11731
  %13 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !11732
  %call = call i32 @fb_set_var(%struct.fb_info* %13, %struct.fb_var_screeninfo* %var) #10, !dbg !11733
  %14 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !11734
  %graphics6 = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %14, i32 0, i32 17, !dbg !11735
  store i32 0, i32* %graphics6, align 4, !dbg !11736
  %15 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !11737
  %var7 = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %15, i32 0, i32 7, !dbg !11738
  %16 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !11739
  %var8 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %16, i32 0, i32 6, !dbg !11740
  %17 = bitcast %struct.fb_var_screeninfo* %var7 to i8*, !dbg !11740
  %18 = bitcast %struct.fb_var_screeninfo* %var8 to i8*, !dbg !11740
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %18, i64 160, i1 false), !dbg !11740
  br label %if.end, !dbg !11741

if.end:                                           ; preds = %if.then5, %if.then
  br label %if.end9, !dbg !11742

if.end9:                                          ; preds = %if.end, %entry
  %19 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11743
  %20 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !11745
  %call10 = call i32 @fbcon_is_inactive(%struct.vc_data* %19, %struct.fb_info* %20) #10, !dbg !11746
  %tobool11 = icmp ne i32 %call10, 0, !dbg !11746
  br i1 %tobool11, label %if.end25, label %if.then12, !dbg !11747

if.then12:                                        ; preds = %if.end9
  %21 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !11748
  %blank_state = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %21, i32 0, i32 16, !dbg !11751
  %22 = load i32, i32* %blank_state, align 8, !dbg !11751
  %23 = load i32, i32* %blank.addr, align 4, !dbg !11752
  %cmp = icmp ne i32 %22, %23, !dbg !11753
  br i1 %cmp, label %if.then13, label %if.end21, !dbg !11754

if.then13:                                        ; preds = %if.then12
  %24 = load i32, i32* %blank.addr, align 4, !dbg !11755
  %25 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !11757
  %blank_state14 = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %25, i32 0, i32 16, !dbg !11758
  store i32 %24, i32* %blank_state14, align 8, !dbg !11759
  %26 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11760
  %27 = load i32, i32* %blank.addr, align 4, !dbg !11761
  %tobool15 = icmp ne i32 %27, 0, !dbg !11761
  %28 = zext i1 %tobool15 to i64, !dbg !11761
  %cond = select i1 %tobool15, i32 2, i32 1, !dbg !11761
  call void @fbcon_cursor(%struct.vc_data* %26, i32 %cond) #10, !dbg !11762
  %29 = load i32, i32* %blank.addr, align 4, !dbg !11763
  %tobool16 = icmp ne i32 %29, 0, !dbg !11764
  %lnot = xor i1 %tobool16, true, !dbg !11764
  %lnot.ext = zext i1 %lnot to i32, !dbg !11764
  %30 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !11765
  %cursor_flash = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %30, i32 0, i32 14, !dbg !11766
  store i32 %lnot.ext, i32* %cursor_flash, align 8, !dbg !11767
  %31 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !11768
  %32 = load i32, i32* %blank.addr, align 4, !dbg !11770
  %call17 = call i32 @fb_blank(%struct.fb_info* %31, i32 %32) #10, !dbg !11771
  %tobool18 = icmp ne i32 %call17, 0, !dbg !11771
  br i1 %tobool18, label %if.then19, label %if.end20, !dbg !11772

if.then19:                                        ; preds = %if.then13
  %33 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11773
  %34 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !11774
  %35 = load i32, i32* %blank.addr, align 4, !dbg !11775
  call void @fbcon_generic_blank(%struct.vc_data* %33, %struct.fb_info* %34, i32 %35) #10, !dbg !11776
  br label %if.end20, !dbg !11776

if.end20:                                         ; preds = %if.then19, %if.then13
  br label %if.end21, !dbg !11777

if.end21:                                         ; preds = %if.end20, %if.then12
  %36 = load i32, i32* %blank.addr, align 4, !dbg !11778
  %tobool22 = icmp ne i32 %36, 0, !dbg !11778
  br i1 %tobool22, label %if.end24, label %if.then23, !dbg !11780

if.then23:                                        ; preds = %if.end21
  %37 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11781
  call void @redraw_screen(%struct.vc_data* %37, i32 0) #10, !dbg !11781
  br label %if.end24, !dbg !11781

if.end24:                                         ; preds = %if.then23, %if.end21
  br label %if.end25, !dbg !11782

if.end25:                                         ; preds = %if.end24, %if.end9
  %38 = load i32, i32* %mode_switch.addr, align 4, !dbg !11783
  %tobool26 = icmp ne i32 %38, 0, !dbg !11783
  br i1 %tobool26, label %if.then32, label %lor.lhs.false, !dbg !11785

lor.lhs.false:                                    ; preds = %if.end25
  %39 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11786
  %40 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !11787
  %call27 = call i32 @fbcon_is_inactive(%struct.vc_data* %39, %struct.fb_info* %40) #10, !dbg !11788
  %tobool28 = icmp ne i32 %call27, 0, !dbg !11788
  br i1 %tobool28, label %if.then32, label %lor.lhs.false29, !dbg !11789

lor.lhs.false29:                                  ; preds = %lor.lhs.false
  %41 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !11790
  %blank_state30 = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %41, i32 0, i32 16, !dbg !11791
  %42 = load i32, i32* %blank_state30, align 8, !dbg !11791
  %cmp31 = icmp ne i32 %42, 0, !dbg !11792
  br i1 %cmp31, label %if.then32, label %if.else, !dbg !11793

if.then32:                                        ; preds = %lor.lhs.false29, %lor.lhs.false, %if.end25
  %43 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !11794
  call void @fbcon_del_cursor_timer(%struct.fb_info* %43) #10, !dbg !11795
  br label %if.end33, !dbg !11795

if.else:                                          ; preds = %lor.lhs.false29
  %44 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !11796
  call void @fbcon_add_cursor_timer(%struct.fb_info* %44) #10, !dbg !11797
  br label %if.end33

if.end33:                                         ; preds = %if.else, %if.then32
  ret i32 0, !dbg !11798
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @fbcon_set_font(%struct.vc_data* %vc, %struct.console_font* %font, i32 %flags) #1 !dbg !11799 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !8676, metadata !DIExpression()), !dbg !11800
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !8686, metadata !DIExpression()), !dbg !11803
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !8688, metadata !DIExpression()), !dbg !11804
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !8690, metadata !DIExpression()), !dbg !11805
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !8692, metadata !DIExpression()), !dbg !11806
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !8698, metadata !DIExpression()), !dbg !11808
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !8704, metadata !DIExpression()), !dbg !11810
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !8713, metadata !DIExpression()), !dbg !11813
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !8715, metadata !DIExpression()), !dbg !11814
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !8717, metadata !DIExpression()), !dbg !11815
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !8719, metadata !DIExpression()), !dbg !11816
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !8721, metadata !DIExpression()), !dbg !11817
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !8723, metadata !DIExpression()), !dbg !11818
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !8725, metadata !DIExpression()), !dbg !11819
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !8727, metadata !DIExpression()), !dbg !11820
  %retval = alloca i32, align 4
  %vc.addr = alloca %struct.vc_data*, align 8
  %font.addr = alloca %struct.console_font*, align 8
  %flags.addr = alloca i32, align 4
  %info = alloca %struct.fb_info*, align 8
  %charcount = alloca i32, align 4
  %w = alloca i32, align 4
  %h = alloca i32, align 4
  %size = alloca i32, align 4
  %i = alloca i32, align 4
  %csum = alloca i32, align 4
  %new_data = alloca i8*, align 8
  %data = alloca i8*, align 8
  %pitch = alloca i32, align 4
  %tmp = alloca %struct.vc_data*, align 8
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !11821, metadata !DIExpression()), !dbg !11822
  store %struct.console_font* %font, %struct.console_font** %font.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.console_font** %font.addr, metadata !11823, metadata !DIExpression()), !dbg !11824
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !11825, metadata !DIExpression()), !dbg !11826
  call void @llvm.dbg.declare(metadata %struct.fb_info** %info, metadata !11827, metadata !DIExpression()), !dbg !11828
  %0 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11829
  %vc_num = getelementptr inbounds %struct.vc_data, %struct.vc_data* %0, i32 0, i32 3, !dbg !11830
  %1 = load i16, i16* %vc_num, align 8, !dbg !11830
  %idxprom = zext i16 %1 to i64, !dbg !11831
  %arrayidx = getelementptr [63 x i8], [63 x i8]* @con2fb_map, i64 0, i64 %idxprom, !dbg !11831
  %2 = load i8, i8* %arrayidx, align 1, !dbg !11831
  %idxprom1 = sext i8 %2 to i64, !dbg !11832
  %arrayidx2 = getelementptr [32 x %struct.fb_info*], [32 x %struct.fb_info*]* @registered_fb, i64 0, i64 %idxprom1, !dbg !11832
  %3 = load %struct.fb_info*, %struct.fb_info** %arrayidx2, align 8, !dbg !11832
  store %struct.fb_info* %3, %struct.fb_info** %info, align 8, !dbg !11828
  call void @llvm.dbg.declare(metadata i32* %charcount, metadata !11833, metadata !DIExpression()), !dbg !11834
  %4 = load %struct.console_font*, %struct.console_font** %font.addr, align 8, !dbg !11835
  %charcount3 = getelementptr inbounds %struct.console_font, %struct.console_font* %4, i32 0, i32 2, !dbg !11836
  %5 = load i32, i32* %charcount3, align 8, !dbg !11836
  store i32 %5, i32* %charcount, align 4, !dbg !11834
  call void @llvm.dbg.declare(metadata i32* %w, metadata !11837, metadata !DIExpression()), !dbg !11838
  %6 = load %struct.console_font*, %struct.console_font** %font.addr, align 8, !dbg !11839
  %width = getelementptr inbounds %struct.console_font, %struct.console_font* %6, i32 0, i32 0, !dbg !11840
  %7 = load i32, i32* %width, align 8, !dbg !11840
  store i32 %7, i32* %w, align 4, !dbg !11838
  call void @llvm.dbg.declare(metadata i32* %h, metadata !11841, metadata !DIExpression()), !dbg !11842
  %8 = load %struct.console_font*, %struct.console_font** %font.addr, align 8, !dbg !11843
  %height = getelementptr inbounds %struct.console_font, %struct.console_font* %8, i32 0, i32 1, !dbg !11844
  %9 = load i32, i32* %height, align 4, !dbg !11844
  store i32 %9, i32* %h, align 4, !dbg !11842
  call void @llvm.dbg.declare(metadata i32* %size, metadata !11845, metadata !DIExpression()), !dbg !11846
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11847, metadata !DIExpression()), !dbg !11848
  call void @llvm.dbg.declare(metadata i32* %csum, metadata !11849, metadata !DIExpression()), !dbg !11850
  call void @llvm.dbg.declare(metadata i8** %new_data, metadata !11851, metadata !DIExpression()), !dbg !11852
  call void @llvm.dbg.declare(metadata i8** %data, metadata !11853, metadata !DIExpression()), !dbg !11854
  %10 = load %struct.console_font*, %struct.console_font** %font.addr, align 8, !dbg !11855
  %data4 = getelementptr inbounds %struct.console_font, %struct.console_font* %10, i32 0, i32 3, !dbg !11856
  %11 = load i8*, i8** %data4, align 8, !dbg !11856
  store i8* %11, i8** %data, align 8, !dbg !11854
  call void @llvm.dbg.declare(metadata i32* %pitch, metadata !11857, metadata !DIExpression()), !dbg !11858
  %12 = load %struct.console_font*, %struct.console_font** %font.addr, align 8, !dbg !11859
  %width5 = getelementptr inbounds %struct.console_font, %struct.console_font* %12, i32 0, i32 0, !dbg !11859
  %13 = load i32, i32* %width5, align 8, !dbg !11859
  %add = add i32 %13, 7, !dbg !11859
  %shr = lshr i32 %add, 3, !dbg !11859
  store i32 %shr, i32* %pitch, align 4, !dbg !11858
  %14 = load i32, i32* %charcount, align 4, !dbg !11860
  %cmp = icmp ne i32 %14, 256, !dbg !11862
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !11863

land.lhs.true:                                    ; preds = %entry
  %15 = load i32, i32* %charcount, align 4, !dbg !11864
  %cmp6 = icmp ne i32 %15, 512, !dbg !11865
  br i1 %cmp6, label %if.then, label %if.end, !dbg !11866

if.then:                                          ; preds = %land.lhs.true
  store i32 -22, i32* %retval, align 4, !dbg !11867
  br label %return, !dbg !11867

if.end:                                           ; preds = %land.lhs.true, %entry
  %16 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !11868
  %pixmap = getelementptr inbounds %struct.fb_info, %struct.fb_info* %16, i32 0, i32 10, !dbg !11870
  %blit_x = getelementptr inbounds %struct.fb_pixmap, %struct.fb_pixmap* %pixmap, i32 0, i32 7, !dbg !11871
  %17 = load i32, i32* %blit_x, align 8, !dbg !11871
  %18 = load %struct.console_font*, %struct.console_font** %font.addr, align 8, !dbg !11872
  %width7 = getelementptr inbounds %struct.console_font, %struct.console_font* %18, i32 0, i32 0, !dbg !11873
  %19 = load i32, i32* %width7, align 8, !dbg !11873
  %sub = sub i32 %19, 1, !dbg !11874
  %shl = shl i32 1, %sub, !dbg !11875
  %and = and i32 %17, %shl, !dbg !11876
  %tobool = icmp ne i32 %and, 0, !dbg !11876
  br i1 %tobool, label %lor.lhs.false, label %if.then14, !dbg !11877

lor.lhs.false:                                    ; preds = %if.end
  %20 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !11878
  %pixmap8 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %20, i32 0, i32 10, !dbg !11879
  %blit_y = getelementptr inbounds %struct.fb_pixmap, %struct.fb_pixmap* %pixmap8, i32 0, i32 8, !dbg !11880
  %21 = load i32, i32* %blit_y, align 4, !dbg !11880
  %22 = load %struct.console_font*, %struct.console_font** %font.addr, align 8, !dbg !11881
  %height9 = getelementptr inbounds %struct.console_font, %struct.console_font* %22, i32 0, i32 1, !dbg !11882
  %23 = load i32, i32* %height9, align 4, !dbg !11882
  %sub10 = sub i32 %23, 1, !dbg !11883
  %shl11 = shl i32 1, %sub10, !dbg !11884
  %and12 = and i32 %21, %shl11, !dbg !11885
  %tobool13 = icmp ne i32 %and12, 0, !dbg !11885
  br i1 %tobool13, label %if.end15, label %if.then14, !dbg !11886

if.then14:                                        ; preds = %lor.lhs.false, %if.end
  store i32 -22, i32* %retval, align 4, !dbg !11887
  br label %return, !dbg !11887

if.end15:                                         ; preds = %lor.lhs.false
  %24 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !11888
  %25 = load i32, i32* %charcount, align 4, !dbg !11890
  %call = call i32 @fbcon_invalid_charcount(%struct.fb_info* %24, i32 %25) #10, !dbg !11891
  %tobool16 = icmp ne i32 %call, 0, !dbg !11891
  br i1 %tobool16, label %if.then17, label %if.end18, !dbg !11892

if.then17:                                        ; preds = %if.end15
  store i32 -22, i32* %retval, align 4, !dbg !11893
  br label %return, !dbg !11893

if.end18:                                         ; preds = %if.end15
  %26 = load i32, i32* %h, align 4, !dbg !11894
  %27 = load i32, i32* %pitch, align 4, !dbg !11894
  %mul = mul i32 %26, %27, !dbg !11894
  %28 = load i32, i32* %charcount, align 4, !dbg !11894
  %mul19 = mul i32 %mul, %28, !dbg !11894
  store i32 %mul19, i32* %size, align 4, !dbg !11895
  %29 = load i32, i32* %size, align 4, !dbg !11896
  %conv = sext i32 %29 to i64, !dbg !11896
  %add20 = add i64 16, %conv, !dbg !11897
  store i64 %add20, i64* %size.addr.i, align 8
  store i32 1051840, i32* %flags.addr.i, align 4
  %30 = load i64, i64* %size.addr.i, align 8, !dbg !11898
  %31 = call i1 @llvm.is.constant.i64(i64 %30) #12, !dbg !11899
  br i1 %31, label %if.then.i, label %if.end9.i, !dbg !11900

if.then.i:                                        ; preds = %if.end18
  %32 = load i64, i64* %size.addr.i, align 8, !dbg !11901
  %cmp.i = icmp ugt i64 %32, 8192, !dbg !11902
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !11903

if.then1.i:                                       ; preds = %if.then.i
  %33 = load i64, i64* %size.addr.i, align 8, !dbg !11904
  %34 = load i32, i32* %flags.addr.i, align 4, !dbg !11905
  store i64 %33, i64* %size.addr.i.i, align 8
  store i32 %34, i32* %flags.addr.i.i, align 4
  %35 = load i64, i64* %size.addr.i.i, align 8, !dbg !11906
  %call.i.i = call i32 @get_order(i64 %35) #14, !dbg !11907
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !11817
  %36 = load i64, i64* %size.addr.i.i, align 8, !dbg !11908
  %37 = load i32, i32* %flags.addr.i.i, align 4, !dbg !11909
  %38 = load i32, i32* %order.i.i, align 4, !dbg !11910
  store i64 %36, i64* %size.addr.i.i.i, align 8
  store i32 %37, i32* %flags.addr.i.i.i, align 4
  store i32 %38, i32* %order.addr.i.i.i, align 4
  %39 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !11911
  %40 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !11912
  %41 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !11913
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %39, i32 %40, i32 %41) #13, !dbg !11914
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !11914
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !11914
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !11914
  call void @llvm.assume(i1 %maskcond.i.i.i) #12, !dbg !11914
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !11915
  br label %kmalloc.exit, !dbg !11915

if.end.i:                                         ; preds = %if.then.i
  %42 = load i64, i64* %size.addr.i, align 8, !dbg !11916
  store i64 %42, i64* %size.addr.i11.i, align 8
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11917
  %tobool.i.i = icmp ne i64 %43, 0, !dbg !11917
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !11918

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !11919
  br label %kmalloc_index.exit.i, !dbg !11919

if.end.i.i:                                       ; preds = %if.end.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11920
  %cmp.i.i = icmp ule i64 %44, 8, !dbg !11921
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !11922

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !11923
  br label %kmalloc_index.exit.i, !dbg !11923

if.end2.i.i:                                      ; preds = %if.end.i.i
  %45 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11924
  %cmp3.i.i = icmp ugt i64 %45, 64, !dbg !11925
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !11926

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %46 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11927
  %cmp4.i.i = icmp ule i64 %46, 96, !dbg !11928
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !11929

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !11930
  br label %kmalloc_index.exit.i, !dbg !11930

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %47 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11931
  %cmp7.i.i = icmp ugt i64 %47, 128, !dbg !11932
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !11933

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %48 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11934
  %cmp9.i.i = icmp ule i64 %48, 192, !dbg !11935
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !11936

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !11937
  br label %kmalloc_index.exit.i, !dbg !11937

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %49 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11938
  %cmp12.i.i = icmp ule i64 %49, 8, !dbg !11939
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !11940

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !11941
  br label %kmalloc_index.exit.i, !dbg !11941

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %50 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11942
  %cmp15.i.i = icmp ule i64 %50, 16, !dbg !11943
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !11944

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !11945
  br label %kmalloc_index.exit.i, !dbg !11945

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %51 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11946
  %cmp18.i.i = icmp ule i64 %51, 32, !dbg !11947
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !11948

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !11949
  br label %kmalloc_index.exit.i, !dbg !11949

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %52 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11950
  %cmp21.i.i = icmp ule i64 %52, 64, !dbg !11951
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !11952

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !11953
  br label %kmalloc_index.exit.i, !dbg !11953

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %53 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11954
  %cmp24.i.i = icmp ule i64 %53, 128, !dbg !11955
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !11956

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !11957
  br label %kmalloc_index.exit.i, !dbg !11957

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %54 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11958
  %cmp27.i.i = icmp ule i64 %54, 256, !dbg !11959
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !11960

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !11961
  br label %kmalloc_index.exit.i, !dbg !11961

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %55 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11962
  %cmp30.i.i = icmp ule i64 %55, 512, !dbg !11963
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !11964

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !11965
  br label %kmalloc_index.exit.i, !dbg !11965

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %56 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11966
  %cmp33.i.i = icmp ule i64 %56, 1024, !dbg !11967
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !11968

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !11969
  br label %kmalloc_index.exit.i, !dbg !11969

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %57 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11970
  %cmp36.i.i = icmp ule i64 %57, 2048, !dbg !11971
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !11972

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !11973
  br label %kmalloc_index.exit.i, !dbg !11973

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %58 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11974
  %cmp39.i.i = icmp ule i64 %58, 4096, !dbg !11975
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !11976

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !11977
  br label %kmalloc_index.exit.i, !dbg !11977

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %59 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11978
  %cmp42.i.i = icmp ule i64 %59, 8192, !dbg !11979
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !11980

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !11981
  br label %kmalloc_index.exit.i, !dbg !11981

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %60 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11982
  %cmp45.i.i = icmp ule i64 %60, 16384, !dbg !11983
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !11984

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !11985
  br label %kmalloc_index.exit.i, !dbg !11985

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %61 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11986
  %cmp48.i.i = icmp ule i64 %61, 32768, !dbg !11987
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !11988

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !11989
  br label %kmalloc_index.exit.i, !dbg !11989

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %62 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11990
  %cmp51.i.i = icmp ule i64 %62, 65536, !dbg !11991
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !11992

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !11993
  br label %kmalloc_index.exit.i, !dbg !11993

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %63 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11994
  %cmp54.i.i = icmp ule i64 %63, 131072, !dbg !11995
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !11996

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !11997
  br label %kmalloc_index.exit.i, !dbg !11997

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %64 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11998
  %cmp57.i.i = icmp ule i64 %64, 262144, !dbg !11999
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !12000

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !12001
  br label %kmalloc_index.exit.i, !dbg !12001

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %65 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12002
  %cmp60.i.i = icmp ule i64 %65, 524288, !dbg !12003
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !12004

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !12005
  br label %kmalloc_index.exit.i, !dbg !12005

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %66 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12006
  %cmp63.i.i = icmp ule i64 %66, 1048576, !dbg !12007
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !12008

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !12009
  br label %kmalloc_index.exit.i, !dbg !12009

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %67 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12010
  %cmp66.i.i = icmp ule i64 %67, 2097152, !dbg !12011
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !12012

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !12013
  br label %kmalloc_index.exit.i, !dbg !12013

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %68 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12014
  %cmp69.i.i = icmp ule i64 %68, 4194304, !dbg !12015
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !12016

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !12017
  br label %kmalloc_index.exit.i, !dbg !12017

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %69 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12018
  %cmp72.i.i = icmp ule i64 %69, 8388608, !dbg !12019
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !12020

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !12021
  br label %kmalloc_index.exit.i, !dbg !12021

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %70 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12022
  %cmp75.i.i = icmp ule i64 %70, 16777216, !dbg !12023
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !12024

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !12025
  br label %kmalloc_index.exit.i, !dbg !12025

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %71 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12026
  %cmp78.i.i = icmp ule i64 %71, 33554432, !dbg !12027
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !12028

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !12029
  br label %kmalloc_index.exit.i, !dbg !12029

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %72 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12030
  %cmp81.i.i = icmp ule i64 %72, 67108864, !dbg !12031
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !12032

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !12033
  br label %kmalloc_index.exit.i, !dbg !12033

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.16, i64 0, i64 0), i32 382, i32 0, i64 12) #12, !dbg !12034, !srcloc !8903
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 201) #12, !dbg !12035, !srcloc !8907
  unreachable, !dbg !12036

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %73 = load i32, i32* %retval.i.i, align 4, !dbg !12037
  store i32 %73, i32* %index.i, align 4, !dbg !12038
  %74 = load i32, i32* %index.i, align 4, !dbg !12039
  %tobool.i = icmp ne i32 %74, 0, !dbg !12039
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !12040

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !12041
  br label %kmalloc.exit, !dbg !12041

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %75 = load i32, i32* %flags.addr.i, align 4, !dbg !12042
  store i32 %75, i32* %flags.addr.i13.i, align 4
  %76 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !12043
  %and.i.i = and i32 %76, 17, !dbg !12043
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !12043
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !12043
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !12043
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !12043
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !12044

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !12045
  br label %kmalloc_type.exit.i, !dbg !12045

if.end.i16.i:                                     ; preds = %if.end4.i
  %77 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !12046
  %and2.i.i = and i32 %77, 1, !dbg !12047
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !12046
  %78 = zext i1 %tobool3.i.i to i64, !dbg !12046
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !12046
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !12048
  br label %kmalloc_type.exit.i, !dbg !12048

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %79 = load i32, i32* %retval.i12.i, align 4, !dbg !12049
  %idxprom.i = zext i32 %79 to i64, !dbg !12050
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !12050
  %80 = load i32, i32* %index.i, align 4, !dbg !12051
  %idxprom6.i = zext i32 %80 to i64, !dbg !12050
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !12050
  %81 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !12050
  %82 = load i32, i32* %flags.addr.i, align 4, !dbg !12052
  %83 = load i64, i64* %size.addr.i, align 8, !dbg !12053
  store %struct.kmem_cache* %81, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %82, i32* %flags.addr.i17.i, align 4
  store i64 %83, i64* %size.addr.i18.i, align 8
  %84 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !12054
  %85 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !12055
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %84, i32 %85) #13, !dbg !12056
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !12056
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !12056
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !12056
  call void @llvm.assume(i1 %maskcond.i.i) #12, !dbg !12056
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !11805
  %86 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !12057
  %87 = load i8*, i8** %ret.i.i, align 8, !dbg !12058
  %88 = load i64, i64* %size.addr.i18.i, align 8, !dbg !12059
  %89 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !12060
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %86, i8* %87, i64 %88, i32 %89) #13, !dbg !12061
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !12062
  %90 = load i8*, i8** %ret.i.i, align 8, !dbg !12063
  store i8* %90, i8** %retval.i, align 8, !dbg !12064
  br label %kmalloc.exit, !dbg !12064

if.end9.i:                                        ; preds = %if.end18
  %91 = load i64, i64* %size.addr.i, align 8, !dbg !12065
  %92 = load i32, i32* %flags.addr.i, align 4, !dbg !12066
  %call10.i = call noalias i8* @__kmalloc(i64 %91, i32 %92) #13, !dbg !12067
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !12067
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !12067
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !12067
  call void @llvm.assume(i1 %maskcond.i) #12, !dbg !12067
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !12068
  br label %kmalloc.exit, !dbg !12068

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %93 = load i8*, i8** %retval.i, align 8, !dbg !12069
  store i8* %93, i8** %new_data, align 8, !dbg !12070
  %94 = load i8*, i8** %new_data, align 8, !dbg !12071
  %tobool22 = icmp ne i8* %94, null, !dbg !12071
  br i1 %tobool22, label %if.end24, label %if.then23, !dbg !12073

if.then23:                                        ; preds = %kmalloc.exit
  store i32 -12, i32* %retval, align 4, !dbg !12074
  br label %return, !dbg !12074

if.end24:                                         ; preds = %kmalloc.exit
  %95 = load i8*, i8** %new_data, align 8, !dbg !12075
  %add.ptr = getelementptr i8, i8* %95, i64 16, !dbg !12075
  store i8* %add.ptr, i8** %new_data, align 8, !dbg !12075
  %96 = load i32, i32* %size, align 4, !dbg !12076
  %97 = load i8*, i8** %new_data, align 8, !dbg !12077
  %98 = bitcast i8* %97 to i32*, !dbg !12077
  %arrayidx25 = getelementptr i32, i32* %98, i64 -2, !dbg !12077
  store i32 %96, i32* %arrayidx25, align 4, !dbg !12078
  %99 = load i32, i32* %charcount, align 4, !dbg !12079
  %100 = load i8*, i8** %new_data, align 8, !dbg !12080
  %101 = bitcast i8* %100 to i32*, !dbg !12080
  %arrayidx26 = getelementptr i32, i32* %101, i64 -3, !dbg !12080
  store i32 %99, i32* %arrayidx26, align 4, !dbg !12081
  %102 = load i8*, i8** %new_data, align 8, !dbg !12082
  %103 = bitcast i8* %102 to i32*, !dbg !12082
  %arrayidx27 = getelementptr i32, i32* %103, i64 -1, !dbg !12082
  store i32 0, i32* %arrayidx27, align 4, !dbg !12083
  store i32 0, i32* %i, align 4, !dbg !12084
  br label %for.cond, !dbg !12086

for.cond:                                         ; preds = %for.inc, %if.end24
  %104 = load i32, i32* %i, align 4, !dbg !12087
  %105 = load i32, i32* %charcount, align 4, !dbg !12089
  %cmp28 = icmp ult i32 %104, %105, !dbg !12090
  br i1 %cmp28, label %for.body, label %for.end, !dbg !12091

for.body:                                         ; preds = %for.cond
  %106 = load i8*, i8** %new_data, align 8, !dbg !12092
  %107 = load i32, i32* %i, align 4, !dbg !12094
  %108 = load i32, i32* %h, align 4, !dbg !12095
  %mul30 = mul i32 %107, %108, !dbg !12096
  %109 = load i32, i32* %pitch, align 4, !dbg !12097
  %mul31 = mul i32 %mul30, %109, !dbg !12098
  %idx.ext = sext i32 %mul31 to i64, !dbg !12099
  %add.ptr32 = getelementptr i8, i8* %106, i64 %idx.ext, !dbg !12099
  %110 = load i8*, i8** %data, align 8, !dbg !12100
  %111 = load i32, i32* %i, align 4, !dbg !12101
  %mul33 = mul i32 %111, 32, !dbg !12102
  %112 = load i32, i32* %pitch, align 4, !dbg !12103
  %mul34 = mul i32 %mul33, %112, !dbg !12104
  %idx.ext35 = sext i32 %mul34 to i64, !dbg !12105
  %add.ptr36 = getelementptr i8, i8* %110, i64 %idx.ext35, !dbg !12105
  %113 = load i32, i32* %h, align 4, !dbg !12106
  %114 = load i32, i32* %pitch, align 4, !dbg !12107
  %mul37 = mul i32 %113, %114, !dbg !12108
  %conv38 = sext i32 %mul37 to i64, !dbg !12106
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr32, i8* align 1 %add.ptr36, i64 %conv38, i1 false), !dbg !12109
  br label %for.inc, !dbg !12110

for.inc:                                          ; preds = %for.body
  %115 = load i32, i32* %i, align 4, !dbg !12111
  %inc = add i32 %115, 1, !dbg !12111
  store i32 %inc, i32* %i, align 4, !dbg !12111
  br label %for.cond, !dbg !12112, !llvm.loop !12113

for.end:                                          ; preds = %for.cond
  %116 = load i8*, i8** %new_data, align 8, !dbg !12115
  %117 = load i32, i32* %size, align 4, !dbg !12115
  %conv39 = sext i32 %117 to i64, !dbg !12115
  %call40 = call i32 @crc32_le(i32 0, i8* %116, i64 %conv39) #16, !dbg !12115
  store i32 %call40, i32* %csum, align 4, !dbg !12116
  %118 = load i32, i32* %csum, align 4, !dbg !12117
  %119 = load i8*, i8** %new_data, align 8, !dbg !12118
  %120 = bitcast i8* %119 to i32*, !dbg !12118
  %arrayidx41 = getelementptr i32, i32* %120, i64 -4, !dbg !12118
  store i32 %118, i32* %arrayidx41, align 4, !dbg !12119
  %121 = load i32, i32* @first_fb_vc, align 4, !dbg !12120
  store i32 %121, i32* %i, align 4, !dbg !12122
  br label %for.cond42, !dbg !12123

for.cond42:                                       ; preds = %for.inc86, %for.end
  %122 = load i32, i32* %i, align 4, !dbg !12124
  %123 = load i32, i32* @last_fb_vc, align 4, !dbg !12126
  %cmp43 = icmp sle i32 %122, %123, !dbg !12127
  br i1 %cmp43, label %for.body45, label %for.end88, !dbg !12128

for.body45:                                       ; preds = %for.cond42
  call void @llvm.dbg.declare(metadata %struct.vc_data** %tmp, metadata !12129, metadata !DIExpression()), !dbg !12131
  %124 = load i32, i32* %i, align 4, !dbg !12132
  %idxprom46 = sext i32 %124 to i64, !dbg !12133
  %arrayidx47 = getelementptr [63 x %struct.vc], [63 x %struct.vc]* @vc_cons, i64 0, i64 %idxprom46, !dbg !12133
  %d = getelementptr inbounds %struct.vc, %struct.vc* %arrayidx47, i32 0, i32 0, !dbg !12134
  %125 = load %struct.vc_data*, %struct.vc_data** %d, align 8, !dbg !12134
  store %struct.vc_data* %125, %struct.vc_data** %tmp, align 8, !dbg !12131
  %126 = load i32, i32* %i, align 4, !dbg !12135
  %idxprom48 = sext i32 %126 to i64, !dbg !12137
  %arrayidx49 = getelementptr [63 x %struct.fbcon_display], [63 x %struct.fbcon_display]* @fb_display, i64 0, i64 %idxprom48, !dbg !12137
  %userfont = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %arrayidx49, i32 0, i32 1, !dbg !12138
  %127 = load i32, i32* %userfont, align 8, !dbg !12138
  %tobool50 = icmp ne i32 %127, 0, !dbg !12137
  br i1 %tobool50, label %land.lhs.true51, label %if.end85, !dbg !12139

land.lhs.true51:                                  ; preds = %for.body45
  %128 = load i32, i32* %i, align 4, !dbg !12140
  %idxprom52 = sext i32 %128 to i64, !dbg !12141
  %arrayidx53 = getelementptr [63 x %struct.fbcon_display], [63 x %struct.fbcon_display]* @fb_display, i64 0, i64 %idxprom52, !dbg !12141
  %fontdata = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %arrayidx53, i32 0, i32 0, !dbg !12142
  %129 = load i8*, i8** %fontdata, align 16, !dbg !12142
  %tobool54 = icmp ne i8* %129, null, !dbg !12141
  br i1 %tobool54, label %land.lhs.true55, label %if.end85, !dbg !12143

land.lhs.true55:                                  ; preds = %land.lhs.true51
  %130 = load i32, i32* %i, align 4, !dbg !12144
  %idxprom56 = sext i32 %130 to i64, !dbg !12144
  %arrayidx57 = getelementptr [63 x %struct.fbcon_display], [63 x %struct.fbcon_display]* @fb_display, i64 0, i64 %idxprom56, !dbg !12144
  %fontdata58 = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %arrayidx57, i32 0, i32 0, !dbg !12144
  %131 = load i8*, i8** %fontdata58, align 16, !dbg !12144
  %132 = bitcast i8* %131 to i32*, !dbg !12144
  %arrayidx59 = getelementptr i32, i32* %132, i64 -4, !dbg !12144
  %133 = load i32, i32* %arrayidx59, align 4, !dbg !12144
  %134 = load i32, i32* %csum, align 4, !dbg !12145
  %cmp60 = icmp eq i32 %133, %134, !dbg !12146
  br i1 %cmp60, label %land.lhs.true62, label %if.end85, !dbg !12147

land.lhs.true62:                                  ; preds = %land.lhs.true55
  %135 = load i32, i32* %i, align 4, !dbg !12148
  %idxprom63 = sext i32 %135 to i64, !dbg !12148
  %arrayidx64 = getelementptr [63 x %struct.fbcon_display], [63 x %struct.fbcon_display]* @fb_display, i64 0, i64 %idxprom63, !dbg !12148
  %fontdata65 = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %arrayidx64, i32 0, i32 0, !dbg !12148
  %136 = load i8*, i8** %fontdata65, align 16, !dbg !12148
  %137 = bitcast i8* %136 to i32*, !dbg !12148
  %arrayidx66 = getelementptr i32, i32* %137, i64 -2, !dbg !12148
  %138 = load i32, i32* %arrayidx66, align 4, !dbg !12148
  %139 = load i32, i32* %size, align 4, !dbg !12149
  %cmp67 = icmp eq i32 %138, %139, !dbg !12150
  br i1 %cmp67, label %land.lhs.true69, label %if.end85, !dbg !12151

land.lhs.true69:                                  ; preds = %land.lhs.true62
  %140 = load %struct.vc_data*, %struct.vc_data** %tmp, align 8, !dbg !12152
  %vc_font = getelementptr inbounds %struct.vc_data, %struct.vc_data* %140, i32 0, i32 27, !dbg !12153
  %width70 = getelementptr inbounds %struct.console_font, %struct.console_font* %vc_font, i32 0, i32 0, !dbg !12154
  %141 = load i32, i32* %width70, align 8, !dbg !12154
  %142 = load i32, i32* %w, align 4, !dbg !12155
  %cmp71 = icmp eq i32 %141, %142, !dbg !12156
  br i1 %cmp71, label %land.lhs.true73, label %if.end85, !dbg !12157

land.lhs.true73:                                  ; preds = %land.lhs.true69
  %143 = load i32, i32* %i, align 4, !dbg !12158
  %idxprom74 = sext i32 %143 to i64, !dbg !12159
  %arrayidx75 = getelementptr [63 x %struct.fbcon_display], [63 x %struct.fbcon_display]* @fb_display, i64 0, i64 %idxprom74, !dbg !12159
  %fontdata76 = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %arrayidx75, i32 0, i32 0, !dbg !12160
  %144 = load i8*, i8** %fontdata76, align 16, !dbg !12160
  %145 = load i8*, i8** %new_data, align 8, !dbg !12161
  %146 = load i32, i32* %size, align 4, !dbg !12162
  %conv77 = sext i32 %146 to i64, !dbg !12162
  %call78 = call i32 @memcmp(i8* %144, i8* %145, i64 %conv77) #10, !dbg !12163
  %tobool79 = icmp ne i32 %call78, 0, !dbg !12163
  br i1 %tobool79, label %if.end85, label %if.then80, !dbg !12164

if.then80:                                        ; preds = %land.lhs.true73
  %147 = load i8*, i8** %new_data, align 8, !dbg !12165
  %add.ptr81 = getelementptr i8, i8* %147, i64 -16, !dbg !12167
  call void @kfree(i8* %add.ptr81) #10, !dbg !12168
  %148 = load i32, i32* %i, align 4, !dbg !12169
  %idxprom82 = sext i32 %148 to i64, !dbg !12170
  %arrayidx83 = getelementptr [63 x %struct.fbcon_display], [63 x %struct.fbcon_display]* @fb_display, i64 0, i64 %idxprom82, !dbg !12170
  %fontdata84 = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %arrayidx83, i32 0, i32 0, !dbg !12171
  %149 = load i8*, i8** %fontdata84, align 16, !dbg !12171
  store i8* %149, i8** %new_data, align 8, !dbg !12172
  br label %for.end88, !dbg !12173

if.end85:                                         ; preds = %land.lhs.true73, %land.lhs.true69, %land.lhs.true62, %land.lhs.true55, %land.lhs.true51, %for.body45
  br label %for.inc86, !dbg !12174

for.inc86:                                        ; preds = %if.end85
  %150 = load i32, i32* %i, align 4, !dbg !12175
  %inc87 = add i32 %150, 1, !dbg !12175
  store i32 %inc87, i32* %i, align 4, !dbg !12175
  br label %for.cond42, !dbg !12176, !llvm.loop !12177

for.end88:                                        ; preds = %if.then80, %for.cond42
  %151 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !12179
  %152 = load %struct.console_font*, %struct.console_font** %font.addr, align 8, !dbg !12180
  %width89 = getelementptr inbounds %struct.console_font, %struct.console_font* %152, i32 0, i32 0, !dbg !12181
  %153 = load i32, i32* %width89, align 8, !dbg !12181
  %154 = load %struct.console_font*, %struct.console_font** %font.addr, align 8, !dbg !12182
  %height90 = getelementptr inbounds %struct.console_font, %struct.console_font* %154, i32 0, i32 1, !dbg !12183
  %155 = load i32, i32* %height90, align 4, !dbg !12183
  %156 = load i8*, i8** %new_data, align 8, !dbg !12184
  %call91 = call i32 @fbcon_do_set_font(%struct.vc_data* %151, i32 %153, i32 %155, i8* %156, i32 1) #10, !dbg !12185
  store i32 %call91, i32* %retval, align 4, !dbg !12186
  br label %return, !dbg !12186

return:                                           ; preds = %for.end88, %if.then23, %if.then17, %if.then14, %if.then
  %157 = load i32, i32* %retval, align 4, !dbg !12187
  ret i32 %157, !dbg !12187
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @fbcon_get_font(%struct.vc_data* %vc, %struct.console_font* %font) #1 !dbg !12188 {
entry:
  %retval = alloca i32, align 4
  %vc.addr = alloca %struct.vc_data*, align 8
  %font.addr = alloca %struct.console_font*, align 8
  %fontdata = alloca i8*, align 8
  %data1 = alloca i8*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !12189, metadata !DIExpression()), !dbg !12190
  store %struct.console_font* %font, %struct.console_font** %font.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.console_font** %font.addr, metadata !12191, metadata !DIExpression()), !dbg !12192
  call void @llvm.dbg.declare(metadata i8** %fontdata, metadata !12193, metadata !DIExpression()), !dbg !12194
  %0 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !12195
  %vc_font = getelementptr inbounds %struct.vc_data, %struct.vc_data* %0, i32 0, i32 27, !dbg !12196
  %data = getelementptr inbounds %struct.console_font, %struct.console_font* %vc_font, i32 0, i32 3, !dbg !12197
  %1 = load i8*, i8** %data, align 8, !dbg !12197
  store i8* %1, i8** %fontdata, align 8, !dbg !12194
  call void @llvm.dbg.declare(metadata i8** %data1, metadata !12198, metadata !DIExpression()), !dbg !12199
  %2 = load %struct.console_font*, %struct.console_font** %font.addr, align 8, !dbg !12200
  %data2 = getelementptr inbounds %struct.console_font, %struct.console_font* %2, i32 0, i32 3, !dbg !12201
  %3 = load i8*, i8** %data2, align 8, !dbg !12201
  store i8* %3, i8** %data1, align 8, !dbg !12199
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12202, metadata !DIExpression()), !dbg !12203
  call void @llvm.dbg.declare(metadata i32* %j, metadata !12204, metadata !DIExpression()), !dbg !12205
  %4 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !12206
  %vc_font3 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %4, i32 0, i32 27, !dbg !12207
  %width = getelementptr inbounds %struct.console_font, %struct.console_font* %vc_font3, i32 0, i32 0, !dbg !12208
  %5 = load i32, i32* %width, align 8, !dbg !12208
  %6 = load %struct.console_font*, %struct.console_font** %font.addr, align 8, !dbg !12209
  %width4 = getelementptr inbounds %struct.console_font, %struct.console_font* %6, i32 0, i32 0, !dbg !12210
  store i32 %5, i32* %width4, align 8, !dbg !12211
  %7 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !12212
  %vc_font5 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %7, i32 0, i32 27, !dbg !12213
  %height = getelementptr inbounds %struct.console_font, %struct.console_font* %vc_font5, i32 0, i32 1, !dbg !12214
  %8 = load i32, i32* %height, align 4, !dbg !12214
  %9 = load %struct.console_font*, %struct.console_font** %font.addr, align 8, !dbg !12215
  %height6 = getelementptr inbounds %struct.console_font, %struct.console_font* %9, i32 0, i32 1, !dbg !12216
  store i32 %8, i32* %height6, align 4, !dbg !12217
  %10 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !12218
  %vc_hi_font_mask = getelementptr inbounds %struct.vc_data, %struct.vc_data* %10, i32 0, i32 26, !dbg !12219
  %11 = load i16, i16* %vc_hi_font_mask, align 8, !dbg !12219
  %conv = zext i16 %11 to i32, !dbg !12218
  %tobool = icmp ne i32 %conv, 0, !dbg !12218
  %12 = zext i1 %tobool to i64, !dbg !12218
  %cond = select i1 %tobool, i32 512, i32 256, !dbg !12218
  %13 = load %struct.console_font*, %struct.console_font** %font.addr, align 8, !dbg !12220
  %charcount = getelementptr inbounds %struct.console_font, %struct.console_font* %13, i32 0, i32 2, !dbg !12221
  store i32 %cond, i32* %charcount, align 8, !dbg !12222
  %14 = load %struct.console_font*, %struct.console_font** %font.addr, align 8, !dbg !12223
  %data7 = getelementptr inbounds %struct.console_font, %struct.console_font* %14, i32 0, i32 3, !dbg !12225
  %15 = load i8*, i8** %data7, align 8, !dbg !12225
  %tobool8 = icmp ne i8* %15, null, !dbg !12223
  br i1 %tobool8, label %if.end, label %if.then, !dbg !12226

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !12227
  br label %return, !dbg !12227

if.end:                                           ; preds = %entry
  %16 = load %struct.console_font*, %struct.console_font** %font.addr, align 8, !dbg !12228
  %width9 = getelementptr inbounds %struct.console_font, %struct.console_font* %16, i32 0, i32 0, !dbg !12230
  %17 = load i32, i32* %width9, align 8, !dbg !12230
  %cmp = icmp ule i32 %17, 8, !dbg !12231
  br i1 %cmp, label %if.then11, label %if.else, !dbg !12232

if.then11:                                        ; preds = %if.end
  %18 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !12233
  %vc_font12 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %18, i32 0, i32 27, !dbg !12235
  %height13 = getelementptr inbounds %struct.console_font, %struct.console_font* %vc_font12, i32 0, i32 1, !dbg !12236
  %19 = load i32, i32* %height13, align 4, !dbg !12236
  store i32 %19, i32* %j, align 4, !dbg !12237
  %20 = load %struct.console_font*, %struct.console_font** %font.addr, align 8, !dbg !12238
  %charcount14 = getelementptr inbounds %struct.console_font, %struct.console_font* %20, i32 0, i32 2, !dbg !12240
  %21 = load i32, i32* %charcount14, align 8, !dbg !12240
  %22 = load i32, i32* %j, align 4, !dbg !12241
  %mul = mul i32 %21, %22, !dbg !12242
  %23 = load i8*, i8** %fontdata, align 8, !dbg !12243
  %24 = bitcast i8* %23 to i32*, !dbg !12243
  %arrayidx = getelementptr i32, i32* %24, i64 -2, !dbg !12243
  %25 = load i32, i32* %arrayidx, align 4, !dbg !12243
  %cmp15 = icmp ugt i32 %mul, %25, !dbg !12244
  br i1 %cmp15, label %if.then17, label %if.end18, !dbg !12245

if.then17:                                        ; preds = %if.then11
  store i32 -22, i32* %retval, align 4, !dbg !12246
  br label %return, !dbg !12246

if.end18:                                         ; preds = %if.then11
  store i32 0, i32* %i, align 4, !dbg !12247
  br label %for.cond, !dbg !12249

for.cond:                                         ; preds = %for.inc, %if.end18
  %26 = load i32, i32* %i, align 4, !dbg !12250
  %27 = load %struct.console_font*, %struct.console_font** %font.addr, align 8, !dbg !12252
  %charcount19 = getelementptr inbounds %struct.console_font, %struct.console_font* %27, i32 0, i32 2, !dbg !12253
  %28 = load i32, i32* %charcount19, align 8, !dbg !12253
  %cmp20 = icmp ult i32 %26, %28, !dbg !12254
  br i1 %cmp20, label %for.body, label %for.end, !dbg !12255

for.body:                                         ; preds = %for.cond
  %29 = load i8*, i8** %data1, align 8, !dbg !12256
  %30 = load i8*, i8** %fontdata, align 8, !dbg !12258
  %31 = load i32, i32* %j, align 4, !dbg !12259
  %conv22 = sext i32 %31 to i64, !dbg !12259
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %29, i8* align 1 %30, i64 %conv22, i1 false), !dbg !12260
  %32 = load i8*, i8** %data1, align 8, !dbg !12261
  %33 = load i32, i32* %j, align 4, !dbg !12262
  %idx.ext = sext i32 %33 to i64, !dbg !12263
  %add.ptr = getelementptr i8, i8* %32, i64 %idx.ext, !dbg !12263
  %34 = load i32, i32* %j, align 4, !dbg !12264
  %sub = sub i32 32, %34, !dbg !12265
  %conv23 = sext i32 %sub to i64, !dbg !12266
  call void @llvm.memset.p0i8.i64(i8* align 1 %add.ptr, i8 0, i64 %conv23, i1 false), !dbg !12267
  %35 = load i8*, i8** %data1, align 8, !dbg !12268
  %add.ptr24 = getelementptr i8, i8* %35, i64 32, !dbg !12268
  store i8* %add.ptr24, i8** %data1, align 8, !dbg !12268
  %36 = load i32, i32* %j, align 4, !dbg !12269
  %37 = load i8*, i8** %fontdata, align 8, !dbg !12270
  %idx.ext25 = sext i32 %36 to i64, !dbg !12270
  %add.ptr26 = getelementptr i8, i8* %37, i64 %idx.ext25, !dbg !12270
  store i8* %add.ptr26, i8** %fontdata, align 8, !dbg !12270
  br label %for.inc, !dbg !12271

for.inc:                                          ; preds = %for.body
  %38 = load i32, i32* %i, align 4, !dbg !12272
  %inc = add i32 %38, 1, !dbg !12272
  store i32 %inc, i32* %i, align 4, !dbg !12272
  br label %for.cond, !dbg !12273, !llvm.loop !12274

for.end:                                          ; preds = %for.cond
  br label %if.end134, !dbg !12276

if.else:                                          ; preds = %if.end
  %39 = load %struct.console_font*, %struct.console_font** %font.addr, align 8, !dbg !12277
  %width27 = getelementptr inbounds %struct.console_font, %struct.console_font* %39, i32 0, i32 0, !dbg !12279
  %40 = load i32, i32* %width27, align 8, !dbg !12279
  %cmp28 = icmp ule i32 %40, 16, !dbg !12280
  br i1 %cmp28, label %if.then30, label %if.else57, !dbg !12281

if.then30:                                        ; preds = %if.else
  %41 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !12282
  %vc_font31 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %41, i32 0, i32 27, !dbg !12284
  %height32 = getelementptr inbounds %struct.console_font, %struct.console_font* %vc_font31, i32 0, i32 1, !dbg !12285
  %42 = load i32, i32* %height32, align 4, !dbg !12285
  %mul33 = mul i32 %42, 2, !dbg !12286
  store i32 %mul33, i32* %j, align 4, !dbg !12287
  %43 = load %struct.console_font*, %struct.console_font** %font.addr, align 8, !dbg !12288
  %charcount34 = getelementptr inbounds %struct.console_font, %struct.console_font* %43, i32 0, i32 2, !dbg !12290
  %44 = load i32, i32* %charcount34, align 8, !dbg !12290
  %45 = load i32, i32* %j, align 4, !dbg !12291
  %mul35 = mul i32 %44, %45, !dbg !12292
  %46 = load i8*, i8** %fontdata, align 8, !dbg !12293
  %47 = bitcast i8* %46 to i32*, !dbg !12293
  %arrayidx36 = getelementptr i32, i32* %47, i64 -2, !dbg !12293
  %48 = load i32, i32* %arrayidx36, align 4, !dbg !12293
  %cmp37 = icmp ugt i32 %mul35, %48, !dbg !12294
  br i1 %cmp37, label %if.then39, label %if.end40, !dbg !12295

if.then39:                                        ; preds = %if.then30
  store i32 -22, i32* %retval, align 4, !dbg !12296
  br label %return, !dbg !12296

if.end40:                                         ; preds = %if.then30
  store i32 0, i32* %i, align 4, !dbg !12297
  br label %for.cond41, !dbg !12299

for.cond41:                                       ; preds = %for.inc54, %if.end40
  %49 = load i32, i32* %i, align 4, !dbg !12300
  %50 = load %struct.console_font*, %struct.console_font** %font.addr, align 8, !dbg !12302
  %charcount42 = getelementptr inbounds %struct.console_font, %struct.console_font* %50, i32 0, i32 2, !dbg !12303
  %51 = load i32, i32* %charcount42, align 8, !dbg !12303
  %cmp43 = icmp ult i32 %49, %51, !dbg !12304
  br i1 %cmp43, label %for.body45, label %for.end56, !dbg !12305

for.body45:                                       ; preds = %for.cond41
  %52 = load i8*, i8** %data1, align 8, !dbg !12306
  %53 = load i8*, i8** %fontdata, align 8, !dbg !12308
  %54 = load i32, i32* %j, align 4, !dbg !12309
  %conv46 = sext i32 %54 to i64, !dbg !12309
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %52, i8* align 1 %53, i64 %conv46, i1 false), !dbg !12310
  %55 = load i8*, i8** %data1, align 8, !dbg !12311
  %56 = load i32, i32* %j, align 4, !dbg !12312
  %idx.ext47 = sext i32 %56 to i64, !dbg !12313
  %add.ptr48 = getelementptr i8, i8* %55, i64 %idx.ext47, !dbg !12313
  %57 = load i32, i32* %j, align 4, !dbg !12314
  %sub49 = sub i32 64, %57, !dbg !12315
  %conv50 = sext i32 %sub49 to i64, !dbg !12316
  call void @llvm.memset.p0i8.i64(i8* align 1 %add.ptr48, i8 0, i64 %conv50, i1 false), !dbg !12317
  %58 = load i8*, i8** %data1, align 8, !dbg !12318
  %add.ptr51 = getelementptr i8, i8* %58, i64 64, !dbg !12318
  store i8* %add.ptr51, i8** %data1, align 8, !dbg !12318
  %59 = load i32, i32* %j, align 4, !dbg !12319
  %60 = load i8*, i8** %fontdata, align 8, !dbg !12320
  %idx.ext52 = sext i32 %59 to i64, !dbg !12320
  %add.ptr53 = getelementptr i8, i8* %60, i64 %idx.ext52, !dbg !12320
  store i8* %add.ptr53, i8** %fontdata, align 8, !dbg !12320
  br label %for.inc54, !dbg !12321

for.inc54:                                        ; preds = %for.body45
  %61 = load i32, i32* %i, align 4, !dbg !12322
  %inc55 = add i32 %61, 1, !dbg !12322
  store i32 %inc55, i32* %i, align 4, !dbg !12322
  br label %for.cond41, !dbg !12323, !llvm.loop !12324

for.end56:                                        ; preds = %for.cond41
  br label %if.end133, !dbg !12326

if.else57:                                        ; preds = %if.else
  %62 = load %struct.console_font*, %struct.console_font** %font.addr, align 8, !dbg !12327
  %width58 = getelementptr inbounds %struct.console_font, %struct.console_font* %62, i32 0, i32 0, !dbg !12329
  %63 = load i32, i32* %width58, align 8, !dbg !12329
  %cmp59 = icmp ule i32 %63, 24, !dbg !12330
  br i1 %cmp59, label %if.then61, label %if.else105, !dbg !12331

if.then61:                                        ; preds = %if.else57
  %64 = load %struct.console_font*, %struct.console_font** %font.addr, align 8, !dbg !12332
  %charcount62 = getelementptr inbounds %struct.console_font, %struct.console_font* %64, i32 0, i32 2, !dbg !12335
  %65 = load i32, i32* %charcount62, align 8, !dbg !12335
  %conv63 = zext i32 %65 to i64, !dbg !12332
  %66 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !12336
  %vc_font64 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %66, i32 0, i32 27, !dbg !12337
  %height65 = getelementptr inbounds %struct.console_font, %struct.console_font* %vc_font64, i32 0, i32 1, !dbg !12338
  %67 = load i32, i32* %height65, align 4, !dbg !12338
  %conv66 = zext i32 %67 to i64, !dbg !12336
  %mul67 = mul i64 %conv66, 4, !dbg !12339
  %mul68 = mul i64 %conv63, %mul67, !dbg !12340
  %68 = load i8*, i8** %fontdata, align 8, !dbg !12341
  %69 = bitcast i8* %68 to i32*, !dbg !12341
  %arrayidx69 = getelementptr i32, i32* %69, i64 -2, !dbg !12341
  %70 = load i32, i32* %arrayidx69, align 4, !dbg !12341
  %conv70 = sext i32 %70 to i64, !dbg !12341
  %cmp71 = icmp ugt i64 %mul68, %conv70, !dbg !12342
  br i1 %cmp71, label %if.then73, label %if.end74, !dbg !12343

if.then73:                                        ; preds = %if.then61
  store i32 -22, i32* %retval, align 4, !dbg !12344
  br label %return, !dbg !12344

if.end74:                                         ; preds = %if.then61
  store i32 0, i32* %i, align 4, !dbg !12345
  br label %for.cond75, !dbg !12347

for.cond75:                                       ; preds = %for.inc102, %if.end74
  %71 = load i32, i32* %i, align 4, !dbg !12348
  %72 = load %struct.console_font*, %struct.console_font** %font.addr, align 8, !dbg !12350
  %charcount76 = getelementptr inbounds %struct.console_font, %struct.console_font* %72, i32 0, i32 2, !dbg !12351
  %73 = load i32, i32* %charcount76, align 8, !dbg !12351
  %cmp77 = icmp ult i32 %71, %73, !dbg !12352
  br i1 %cmp77, label %for.body79, label %for.end104, !dbg !12353

for.body79:                                       ; preds = %for.cond75
  store i32 0, i32* %j, align 4, !dbg !12354
  br label %for.cond80, !dbg !12357

for.cond80:                                       ; preds = %for.inc92, %for.body79
  %74 = load i32, i32* %j, align 4, !dbg !12358
  %75 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !12360
  %vc_font81 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %75, i32 0, i32 27, !dbg !12361
  %height82 = getelementptr inbounds %struct.console_font, %struct.console_font* %vc_font81, i32 0, i32 1, !dbg !12362
  %76 = load i32, i32* %height82, align 4, !dbg !12362
  %cmp83 = icmp ult i32 %74, %76, !dbg !12363
  br i1 %cmp83, label %for.body85, label %for.end94, !dbg !12364

for.body85:                                       ; preds = %for.cond80
  %77 = load i8*, i8** %fontdata, align 8, !dbg !12365
  %arrayidx86 = getelementptr i8, i8* %77, i64 0, !dbg !12365
  %78 = load i8, i8* %arrayidx86, align 1, !dbg !12365
  %79 = load i8*, i8** %data1, align 8, !dbg !12367
  %incdec.ptr = getelementptr i8, i8* %79, i32 1, !dbg !12367
  store i8* %incdec.ptr, i8** %data1, align 8, !dbg !12367
  store i8 %78, i8* %79, align 1, !dbg !12368
  %80 = load i8*, i8** %fontdata, align 8, !dbg !12369
  %arrayidx87 = getelementptr i8, i8* %80, i64 1, !dbg !12369
  %81 = load i8, i8* %arrayidx87, align 1, !dbg !12369
  %82 = load i8*, i8** %data1, align 8, !dbg !12370
  %incdec.ptr88 = getelementptr i8, i8* %82, i32 1, !dbg !12370
  store i8* %incdec.ptr88, i8** %data1, align 8, !dbg !12370
  store i8 %81, i8* %82, align 1, !dbg !12371
  %83 = load i8*, i8** %fontdata, align 8, !dbg !12372
  %arrayidx89 = getelementptr i8, i8* %83, i64 2, !dbg !12372
  %84 = load i8, i8* %arrayidx89, align 1, !dbg !12372
  %85 = load i8*, i8** %data1, align 8, !dbg !12373
  %incdec.ptr90 = getelementptr i8, i8* %85, i32 1, !dbg !12373
  store i8* %incdec.ptr90, i8** %data1, align 8, !dbg !12373
  store i8 %84, i8* %85, align 1, !dbg !12374
  %86 = load i8*, i8** %fontdata, align 8, !dbg !12375
  %add.ptr91 = getelementptr i8, i8* %86, i64 4, !dbg !12375
  store i8* %add.ptr91, i8** %fontdata, align 8, !dbg !12375
  br label %for.inc92, !dbg !12376

for.inc92:                                        ; preds = %for.body85
  %87 = load i32, i32* %j, align 4, !dbg !12377
  %inc93 = add i32 %87, 1, !dbg !12377
  store i32 %inc93, i32* %j, align 4, !dbg !12377
  br label %for.cond80, !dbg !12378, !llvm.loop !12379

for.end94:                                        ; preds = %for.cond80
  %88 = load i8*, i8** %data1, align 8, !dbg !12381
  %89 = load i32, i32* %j, align 4, !dbg !12382
  %sub95 = sub i32 32, %89, !dbg !12383
  %mul96 = mul i32 3, %sub95, !dbg !12384
  %conv97 = sext i32 %mul96 to i64, !dbg !12385
  call void @llvm.memset.p0i8.i64(i8* align 1 %88, i8 0, i64 %conv97, i1 false), !dbg !12386
  %90 = load i32, i32* %j, align 4, !dbg !12387
  %sub98 = sub i32 32, %90, !dbg !12388
  %mul99 = mul i32 3, %sub98, !dbg !12389
  %91 = load i8*, i8** %data1, align 8, !dbg !12390
  %idx.ext100 = sext i32 %mul99 to i64, !dbg !12390
  %add.ptr101 = getelementptr i8, i8* %91, i64 %idx.ext100, !dbg !12390
  store i8* %add.ptr101, i8** %data1, align 8, !dbg !12390
  br label %for.inc102, !dbg !12391

for.inc102:                                       ; preds = %for.end94
  %92 = load i32, i32* %i, align 4, !dbg !12392
  %inc103 = add i32 %92, 1, !dbg !12392
  store i32 %inc103, i32* %i, align 4, !dbg !12392
  br label %for.cond75, !dbg !12393, !llvm.loop !12394

for.end104:                                       ; preds = %for.cond75
  br label %if.end132, !dbg !12396

if.else105:                                       ; preds = %if.else57
  %93 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !12397
  %vc_font106 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %93, i32 0, i32 27, !dbg !12399
  %height107 = getelementptr inbounds %struct.console_font, %struct.console_font* %vc_font106, i32 0, i32 1, !dbg !12400
  %94 = load i32, i32* %height107, align 4, !dbg !12400
  %mul108 = mul i32 %94, 4, !dbg !12401
  store i32 %mul108, i32* %j, align 4, !dbg !12402
  %95 = load %struct.console_font*, %struct.console_font** %font.addr, align 8, !dbg !12403
  %charcount109 = getelementptr inbounds %struct.console_font, %struct.console_font* %95, i32 0, i32 2, !dbg !12405
  %96 = load i32, i32* %charcount109, align 8, !dbg !12405
  %97 = load i32, i32* %j, align 4, !dbg !12406
  %mul110 = mul i32 %96, %97, !dbg !12407
  %98 = load i8*, i8** %fontdata, align 8, !dbg !12408
  %99 = bitcast i8* %98 to i32*, !dbg !12408
  %arrayidx111 = getelementptr i32, i32* %99, i64 -2, !dbg !12408
  %100 = load i32, i32* %arrayidx111, align 4, !dbg !12408
  %cmp112 = icmp ugt i32 %mul110, %100, !dbg !12409
  br i1 %cmp112, label %if.then114, label %if.end115, !dbg !12410

if.then114:                                       ; preds = %if.else105
  store i32 -22, i32* %retval, align 4, !dbg !12411
  br label %return, !dbg !12411

if.end115:                                        ; preds = %if.else105
  store i32 0, i32* %i, align 4, !dbg !12412
  br label %for.cond116, !dbg !12414

for.cond116:                                      ; preds = %for.inc129, %if.end115
  %101 = load i32, i32* %i, align 4, !dbg !12415
  %102 = load %struct.console_font*, %struct.console_font** %font.addr, align 8, !dbg !12417
  %charcount117 = getelementptr inbounds %struct.console_font, %struct.console_font* %102, i32 0, i32 2, !dbg !12418
  %103 = load i32, i32* %charcount117, align 8, !dbg !12418
  %cmp118 = icmp ult i32 %101, %103, !dbg !12419
  br i1 %cmp118, label %for.body120, label %for.end131, !dbg !12420

for.body120:                                      ; preds = %for.cond116
  %104 = load i8*, i8** %data1, align 8, !dbg !12421
  %105 = load i8*, i8** %fontdata, align 8, !dbg !12423
  %106 = load i32, i32* %j, align 4, !dbg !12424
  %conv121 = sext i32 %106 to i64, !dbg !12424
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %104, i8* align 1 %105, i64 %conv121, i1 false), !dbg !12425
  %107 = load i8*, i8** %data1, align 8, !dbg !12426
  %108 = load i32, i32* %j, align 4, !dbg !12427
  %idx.ext122 = sext i32 %108 to i64, !dbg !12428
  %add.ptr123 = getelementptr i8, i8* %107, i64 %idx.ext122, !dbg !12428
  %109 = load i32, i32* %j, align 4, !dbg !12429
  %sub124 = sub i32 128, %109, !dbg !12430
  %conv125 = sext i32 %sub124 to i64, !dbg !12431
  call void @llvm.memset.p0i8.i64(i8* align 1 %add.ptr123, i8 0, i64 %conv125, i1 false), !dbg !12432
  %110 = load i8*, i8** %data1, align 8, !dbg !12433
  %add.ptr126 = getelementptr i8, i8* %110, i64 128, !dbg !12433
  store i8* %add.ptr126, i8** %data1, align 8, !dbg !12433
  %111 = load i32, i32* %j, align 4, !dbg !12434
  %112 = load i8*, i8** %fontdata, align 8, !dbg !12435
  %idx.ext127 = sext i32 %111 to i64, !dbg !12435
  %add.ptr128 = getelementptr i8, i8* %112, i64 %idx.ext127, !dbg !12435
  store i8* %add.ptr128, i8** %fontdata, align 8, !dbg !12435
  br label %for.inc129, !dbg !12436

for.inc129:                                       ; preds = %for.body120
  %113 = load i32, i32* %i, align 4, !dbg !12437
  %inc130 = add i32 %113, 1, !dbg !12437
  store i32 %inc130, i32* %i, align 4, !dbg !12437
  br label %for.cond116, !dbg !12438, !llvm.loop !12439

for.end131:                                       ; preds = %for.cond116
  br label %if.end132

if.end132:                                        ; preds = %for.end131, %for.end104
  br label %if.end133

if.end133:                                        ; preds = %if.end132, %for.end56
  br label %if.end134

if.end134:                                        ; preds = %if.end133, %for.end
  store i32 0, i32* %retval, align 4, !dbg !12441
  br label %return, !dbg !12441

return:                                           ; preds = %if.end134, %if.then114, %if.then73, %if.then39, %if.then17, %if.then
  %114 = load i32, i32* %retval, align 4, !dbg !12442
  ret i32 %114, !dbg !12442
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @fbcon_set_def_font(%struct.vc_data* %vc, %struct.console_font* %font, i8* %name) #1 !dbg !12443 {
entry:
  %retval = alloca i32, align 4
  %vc.addr = alloca %struct.vc_data*, align 8
  %font.addr = alloca %struct.console_font*, align 8
  %name.addr = alloca i8*, align 8
  %info = alloca %struct.fb_info*, align 8
  %f = alloca %struct.font_desc*, align 8
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !12444, metadata !DIExpression()), !dbg !12445
  store %struct.console_font* %font, %struct.console_font** %font.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.console_font** %font.addr, metadata !12446, metadata !DIExpression()), !dbg !12447
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !12448, metadata !DIExpression()), !dbg !12449
  call void @llvm.dbg.declare(metadata %struct.fb_info** %info, metadata !12450, metadata !DIExpression()), !dbg !12451
  %0 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !12452
  %vc_num = getelementptr inbounds %struct.vc_data, %struct.vc_data* %0, i32 0, i32 3, !dbg !12453
  %1 = load i16, i16* %vc_num, align 8, !dbg !12453
  %idxprom = zext i16 %1 to i64, !dbg !12454
  %arrayidx = getelementptr [63 x i8], [63 x i8]* @con2fb_map, i64 0, i64 %idxprom, !dbg !12454
  %2 = load i8, i8* %arrayidx, align 1, !dbg !12454
  %idxprom1 = sext i8 %2 to i64, !dbg !12455
  %arrayidx2 = getelementptr [32 x %struct.fb_info*], [32 x %struct.fb_info*]* @registered_fb, i64 0, i64 %idxprom1, !dbg !12455
  %3 = load %struct.fb_info*, %struct.fb_info** %arrayidx2, align 8, !dbg !12455
  store %struct.fb_info* %3, %struct.fb_info** %info, align 8, !dbg !12451
  call void @llvm.dbg.declare(metadata %struct.font_desc** %f, metadata !12456, metadata !DIExpression()), !dbg !12457
  %4 = load i8*, i8** %name.addr, align 8, !dbg !12458
  %tobool = icmp ne i8* %4, null, !dbg !12458
  br i1 %tobool, label %if.else, label %if.then, !dbg !12460

if.then:                                          ; preds = %entry
  %5 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !12461
  %var = getelementptr inbounds %struct.fb_info, %struct.fb_info* %5, i32 0, i32 6, !dbg !12462
  %xres = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %var, i32 0, i32 0, !dbg !12463
  %6 = load i32, i32* %xres, align 8, !dbg !12463
  %7 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !12464
  %var3 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %7, i32 0, i32 6, !dbg !12465
  %yres = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %var3, i32 0, i32 1, !dbg !12466
  %8 = load i32, i32* %yres, align 4, !dbg !12466
  %9 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !12467
  %pixmap = getelementptr inbounds %struct.fb_info, %struct.fb_info* %9, i32 0, i32 10, !dbg !12468
  %blit_x = getelementptr inbounds %struct.fb_pixmap, %struct.fb_pixmap* %pixmap, i32 0, i32 7, !dbg !12469
  %10 = load i32, i32* %blit_x, align 8, !dbg !12469
  %11 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !12470
  %pixmap4 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %11, i32 0, i32 10, !dbg !12471
  %blit_y = getelementptr inbounds %struct.fb_pixmap, %struct.fb_pixmap* %pixmap4, i32 0, i32 8, !dbg !12472
  %12 = load i32, i32* %blit_y, align 4, !dbg !12472
  %call = call %struct.font_desc* @get_default_font(i32 %6, i32 %8, i32 %10, i32 %12) #10, !dbg !12473
  store %struct.font_desc* %call, %struct.font_desc** %f, align 8, !dbg !12474
  br label %if.end8, !dbg !12475

if.else:                                          ; preds = %entry
  %13 = load i8*, i8** %name.addr, align 8, !dbg !12476
  %call5 = call %struct.font_desc* @find_font(i8* %13) #10, !dbg !12478
  store %struct.font_desc* %call5, %struct.font_desc** %f, align 8, !dbg !12479
  %tobool6 = icmp ne %struct.font_desc* %call5, null, !dbg !12479
  br i1 %tobool6, label %if.end, label %if.then7, !dbg !12480

if.then7:                                         ; preds = %if.else
  store i32 -2, i32* %retval, align 4, !dbg !12481
  br label %return, !dbg !12481

if.end:                                           ; preds = %if.else
  br label %if.end8

if.end8:                                          ; preds = %if.end, %if.then
  %14 = load %struct.font_desc*, %struct.font_desc** %f, align 8, !dbg !12482
  %width = getelementptr inbounds %struct.font_desc, %struct.font_desc* %14, i32 0, i32 2, !dbg !12483
  %15 = load i32, i32* %width, align 8, !dbg !12483
  %16 = load %struct.console_font*, %struct.console_font** %font.addr, align 8, !dbg !12484
  %width9 = getelementptr inbounds %struct.console_font, %struct.console_font* %16, i32 0, i32 0, !dbg !12485
  store i32 %15, i32* %width9, align 8, !dbg !12486
  %17 = load %struct.font_desc*, %struct.font_desc** %f, align 8, !dbg !12487
  %height = getelementptr inbounds %struct.font_desc, %struct.font_desc* %17, i32 0, i32 3, !dbg !12488
  %18 = load i32, i32* %height, align 4, !dbg !12488
  %19 = load %struct.console_font*, %struct.console_font** %font.addr, align 8, !dbg !12489
  %height10 = getelementptr inbounds %struct.console_font, %struct.console_font* %19, i32 0, i32 1, !dbg !12490
  store i32 %18, i32* %height10, align 4, !dbg !12491
  %20 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !12492
  %21 = load %struct.font_desc*, %struct.font_desc** %f, align 8, !dbg !12493
  %width11 = getelementptr inbounds %struct.font_desc, %struct.font_desc* %21, i32 0, i32 2, !dbg !12494
  %22 = load i32, i32* %width11, align 8, !dbg !12494
  %23 = load %struct.font_desc*, %struct.font_desc** %f, align 8, !dbg !12495
  %height12 = getelementptr inbounds %struct.font_desc, %struct.font_desc* %23, i32 0, i32 3, !dbg !12496
  %24 = load i32, i32* %height12, align 4, !dbg !12496
  %25 = load %struct.font_desc*, %struct.font_desc** %f, align 8, !dbg !12497
  %data = getelementptr inbounds %struct.font_desc, %struct.font_desc* %25, i32 0, i32 4, !dbg !12498
  %26 = load i8*, i8** %data, align 8, !dbg !12498
  %call13 = call i32 @fbcon_do_set_font(%struct.vc_data* %20, i32 %22, i32 %24, i8* %26, i32 0) #10, !dbg !12499
  store i32 %call13, i32* %retval, align 4, !dbg !12500
  br label %return, !dbg !12500

return:                                           ; preds = %if.end8, %if.then7
  %27 = load i32, i32* %retval, align 4, !dbg !12501
  ret i32 %27, !dbg !12501
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @fbcon_copy_font(%struct.vc_data* %vc, i32 %con) #1 !dbg !12502 {
entry:
  %retval = alloca i32, align 4
  %vc.addr = alloca %struct.vc_data*, align 8
  %con.addr = alloca i32, align 4
  %od = alloca %struct.fbcon_display*, align 8
  %f = alloca %struct.console_font*, align 8
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !12503, metadata !DIExpression()), !dbg !12504
  store i32 %con, i32* %con.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %con.addr, metadata !12505, metadata !DIExpression()), !dbg !12506
  call void @llvm.dbg.declare(metadata %struct.fbcon_display** %od, metadata !12507, metadata !DIExpression()), !dbg !12508
  %0 = load i32, i32* %con.addr, align 4, !dbg !12509
  %idxprom = sext i32 %0 to i64, !dbg !12510
  %arrayidx = getelementptr [63 x %struct.fbcon_display], [63 x %struct.fbcon_display]* @fb_display, i64 0, i64 %idxprom, !dbg !12510
  store %struct.fbcon_display* %arrayidx, %struct.fbcon_display** %od, align 8, !dbg !12508
  call void @llvm.dbg.declare(metadata %struct.console_font** %f, metadata !12511, metadata !DIExpression()), !dbg !12512
  %1 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !12513
  %vc_font = getelementptr inbounds %struct.vc_data, %struct.vc_data* %1, i32 0, i32 27, !dbg !12514
  store %struct.console_font* %vc_font, %struct.console_font** %f, align 8, !dbg !12512
  %2 = load %struct.fbcon_display*, %struct.fbcon_display** %od, align 8, !dbg !12515
  %fontdata = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %2, i32 0, i32 0, !dbg !12517
  %3 = load i8*, i8** %fontdata, align 8, !dbg !12517
  %4 = load %struct.console_font*, %struct.console_font** %f, align 8, !dbg !12518
  %data = getelementptr inbounds %struct.console_font, %struct.console_font* %4, i32 0, i32 3, !dbg !12519
  %5 = load i8*, i8** %data, align 8, !dbg !12519
  %cmp = icmp eq i8* %3, %5, !dbg !12520
  br i1 %cmp, label %if.then, label %if.end, !dbg !12521

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !12522
  br label %return, !dbg !12522

if.end:                                           ; preds = %entry
  %6 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !12523
  %7 = load %struct.console_font*, %struct.console_font** %f, align 8, !dbg !12524
  %width = getelementptr inbounds %struct.console_font, %struct.console_font* %7, i32 0, i32 0, !dbg !12525
  %8 = load i32, i32* %width, align 8, !dbg !12525
  %9 = load %struct.console_font*, %struct.console_font** %f, align 8, !dbg !12526
  %height = getelementptr inbounds %struct.console_font, %struct.console_font* %9, i32 0, i32 1, !dbg !12527
  %10 = load i32, i32* %height, align 4, !dbg !12527
  %11 = load %struct.fbcon_display*, %struct.fbcon_display** %od, align 8, !dbg !12528
  %fontdata1 = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %11, i32 0, i32 0, !dbg !12529
  %12 = load i8*, i8** %fontdata1, align 8, !dbg !12529
  %13 = load %struct.fbcon_display*, %struct.fbcon_display** %od, align 8, !dbg !12530
  %userfont = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %13, i32 0, i32 1, !dbg !12531
  %14 = load i32, i32* %userfont, align 8, !dbg !12531
  %call = call i32 @fbcon_do_set_font(%struct.vc_data* %6, i32 %8, i32 %10, i8* %12, i32 %14) #10, !dbg !12532
  store i32 %call, i32* %retval, align 4, !dbg !12533
  br label %return, !dbg !12533

return:                                           ; preds = %if.end, %if.then
  %15 = load i32, i32* %retval, align 4, !dbg !12534
  ret i32 %15, !dbg !12534
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @fbcon_resize(%struct.vc_data* %vc, i32 %width, i32 %height, i32 %user) #1 !dbg !12535 {
entry:
  %retval = alloca i32, align 4
  %vc.addr = alloca %struct.vc_data*, align 8
  %width.addr = alloca i32, align 4
  %height.addr = alloca i32, align 4
  %user.addr = alloca i32, align 4
  %info = alloca %struct.fb_info*, align 8
  %ops = alloca %struct.fbcon_ops*, align 8
  %p = alloca %struct.fbcon_display*, align 8
  %var = alloca %struct.fb_var_screeninfo, align 4
  %x_diff = alloca i32, align 4
  %y_diff = alloca i32, align 4
  %virt_w = alloca i32, align 4
  %virt_h = alloca i32, align 4
  %virt_fw = alloca i32, align 4
  %virt_fh = alloca i32, align 4
  %size = alloca i32, align 4
  %pitch = alloca i32, align 4
  %_r = alloca i32, align 4
  %_v = alloca i32, align 4
  %tmp = alloca i32, align 4
  %_r31 = alloca i32, align 4
  %_v32 = alloca i32, align 4
  %tmp35 = alloca i32, align 4
  %_r47 = alloca i32, align 4
  %_v50 = alloca i32, align 4
  %tmp55 = alloca i32, align 4
  %_r67 = alloca i32, align 4
  %_v70 = alloca i32, align 4
  %tmp75 = alloca i32, align 4
  %mode = alloca %struct.fb_videomode*, align 8
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !12536, metadata !DIExpression()), !dbg !12537
  store i32 %width, i32* %width.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %width.addr, metadata !12538, metadata !DIExpression()), !dbg !12539
  store i32 %height, i32* %height.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %height.addr, metadata !12540, metadata !DIExpression()), !dbg !12541
  store i32 %user, i32* %user.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %user.addr, metadata !12542, metadata !DIExpression()), !dbg !12543
  call void @llvm.dbg.declare(metadata %struct.fb_info** %info, metadata !12544, metadata !DIExpression()), !dbg !12545
  %0 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !12546
  %vc_num = getelementptr inbounds %struct.vc_data, %struct.vc_data* %0, i32 0, i32 3, !dbg !12547
  %1 = load i16, i16* %vc_num, align 8, !dbg !12547
  %idxprom = zext i16 %1 to i64, !dbg !12548
  %arrayidx = getelementptr [63 x i8], [63 x i8]* @con2fb_map, i64 0, i64 %idxprom, !dbg !12548
  %2 = load i8, i8* %arrayidx, align 1, !dbg !12548
  %idxprom1 = sext i8 %2 to i64, !dbg !12549
  %arrayidx2 = getelementptr [32 x %struct.fb_info*], [32 x %struct.fb_info*]* @registered_fb, i64 0, i64 %idxprom1, !dbg !12549
  %3 = load %struct.fb_info*, %struct.fb_info** %arrayidx2, align 8, !dbg !12549
  store %struct.fb_info* %3, %struct.fb_info** %info, align 8, !dbg !12545
  call void @llvm.dbg.declare(metadata %struct.fbcon_ops** %ops, metadata !12550, metadata !DIExpression()), !dbg !12551
  %4 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !12552
  %fbcon_par = getelementptr inbounds %struct.fb_info, %struct.fb_info* %4, i32 0, i32 29, !dbg !12553
  %5 = load i8*, i8** %fbcon_par, align 8, !dbg !12553
  %6 = bitcast i8* %5 to %struct.fbcon_ops*, !dbg !12552
  store %struct.fbcon_ops* %6, %struct.fbcon_ops** %ops, align 8, !dbg !12551
  call void @llvm.dbg.declare(metadata %struct.fbcon_display** %p, metadata !12554, metadata !DIExpression()), !dbg !12555
  %7 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !12556
  %vc_num3 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %7, i32 0, i32 3, !dbg !12557
  %8 = load i16, i16* %vc_num3, align 8, !dbg !12557
  %idxprom4 = zext i16 %8 to i64, !dbg !12558
  %arrayidx5 = getelementptr [63 x %struct.fbcon_display], [63 x %struct.fbcon_display]* @fb_display, i64 0, i64 %idxprom4, !dbg !12558
  store %struct.fbcon_display* %arrayidx5, %struct.fbcon_display** %p, align 8, !dbg !12555
  call void @llvm.dbg.declare(metadata %struct.fb_var_screeninfo* %var, metadata !12559, metadata !DIExpression()), !dbg !12560
  %9 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !12561
  %var6 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %9, i32 0, i32 6, !dbg !12562
  %10 = bitcast %struct.fb_var_screeninfo* %var to i8*, !dbg !12562
  %11 = bitcast %struct.fb_var_screeninfo* %var6 to i8*, !dbg !12562
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %10, i8* align 8 %11, i64 160, i1 false), !dbg !12562
  call void @llvm.dbg.declare(metadata i32* %x_diff, metadata !12563, metadata !DIExpression()), !dbg !12564
  call void @llvm.dbg.declare(metadata i32* %y_diff, metadata !12565, metadata !DIExpression()), !dbg !12566
  call void @llvm.dbg.declare(metadata i32* %virt_w, metadata !12567, metadata !DIExpression()), !dbg !12568
  call void @llvm.dbg.declare(metadata i32* %virt_h, metadata !12569, metadata !DIExpression()), !dbg !12570
  call void @llvm.dbg.declare(metadata i32* %virt_fw, metadata !12571, metadata !DIExpression()), !dbg !12572
  call void @llvm.dbg.declare(metadata i32* %virt_fh, metadata !12573, metadata !DIExpression()), !dbg !12574
  %12 = load %struct.fbcon_display*, %struct.fbcon_display** %p, align 8, !dbg !12575
  %userfont = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %12, i32 0, i32 1, !dbg !12577
  %13 = load i32, i32* %userfont, align 8, !dbg !12577
  %tobool = icmp ne i32 %13, 0, !dbg !12575
  br i1 %tobool, label %land.lhs.true, label %if.end24, !dbg !12578

land.lhs.true:                                    ; preds = %entry
  %14 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !12579
  %vc_font = getelementptr inbounds %struct.vc_data, %struct.vc_data* %14, i32 0, i32 27, !dbg !12579
  %data = getelementptr inbounds %struct.console_font, %struct.console_font* %vc_font, i32 0, i32 3, !dbg !12579
  %15 = load i8*, i8** %data, align 8, !dbg !12579
  %16 = bitcast i8* %15 to i32*, !dbg !12579
  %arrayidx7 = getelementptr i32, i32* %16, i64 -2, !dbg !12579
  %17 = load i32, i32* %arrayidx7, align 4, !dbg !12579
  %tobool8 = icmp ne i32 %17, 0, !dbg !12579
  br i1 %tobool8, label %if.then, label %if.end24, !dbg !12580

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %size, metadata !12581, metadata !DIExpression()), !dbg !12583
  call void @llvm.dbg.declare(metadata i32* %pitch, metadata !12584, metadata !DIExpression()), !dbg !12585
  %18 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !12586
  %vc_font9 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %18, i32 0, i32 27, !dbg !12586
  %width10 = getelementptr inbounds %struct.console_font, %struct.console_font* %vc_font9, i32 0, i32 0, !dbg !12586
  %19 = load i32, i32* %width10, align 8, !dbg !12586
  %add = add i32 %19, 7, !dbg !12586
  %shr = lshr i32 %add, 3, !dbg !12586
  store i32 %shr, i32* %pitch, align 4, !dbg !12585
  %20 = load i32, i32* %pitch, align 4, !dbg !12587
  %cmp = icmp sle i32 %20, 0, !dbg !12589
  br i1 %cmp, label %if.then11, label %if.end, !dbg !12590

if.then11:                                        ; preds = %if.then
  store i32 -22, i32* %retval, align 4, !dbg !12591
  br label %return, !dbg !12591

if.end:                                           ; preds = %if.then
  %21 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !12592
  %vc_font12 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %21, i32 0, i32 27, !dbg !12592
  %height13 = getelementptr inbounds %struct.console_font, %struct.console_font* %vc_font12, i32 0, i32 1, !dbg !12592
  %22 = load i32, i32* %height13, align 4, !dbg !12592
  %23 = load i32, i32* %pitch, align 4, !dbg !12592
  %mul = mul i32 %22, %23, !dbg !12592
  %24 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !12592
  %vc_font14 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %24, i32 0, i32 27, !dbg !12592
  %data15 = getelementptr inbounds %struct.console_font, %struct.console_font* %vc_font14, i32 0, i32 3, !dbg !12592
  %25 = load i8*, i8** %data15, align 8, !dbg !12592
  %26 = bitcast i8* %25 to i32*, !dbg !12592
  %arrayidx16 = getelementptr i32, i32* %26, i64 -3, !dbg !12592
  %27 = load i32, i32* %arrayidx16, align 4, !dbg !12592
  %mul17 = mul i32 %mul, %27, !dbg !12592
  store i32 %mul17, i32* %size, align 4, !dbg !12593
  %28 = load i32, i32* %size, align 4, !dbg !12594
  %29 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !12596
  %vc_font18 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %29, i32 0, i32 27, !dbg !12596
  %data19 = getelementptr inbounds %struct.console_font, %struct.console_font* %vc_font18, i32 0, i32 3, !dbg !12596
  %30 = load i8*, i8** %data19, align 8, !dbg !12596
  %31 = bitcast i8* %30 to i32*, !dbg !12596
  %arrayidx20 = getelementptr i32, i32* %31, i64 -2, !dbg !12596
  %32 = load i32, i32* %arrayidx20, align 4, !dbg !12596
  %cmp21 = icmp sgt i32 %28, %32, !dbg !12597
  br i1 %cmp21, label %if.then22, label %if.end23, !dbg !12598

if.then22:                                        ; preds = %if.end
  store i32 -22, i32* %retval, align 4, !dbg !12599
  br label %return, !dbg !12599

if.end23:                                         ; preds = %if.end
  br label %if.end24, !dbg !12600

if.end24:                                         ; preds = %if.end23, %land.lhs.true, %entry
  call void @llvm.dbg.declare(metadata i32* %_r, metadata !12601, metadata !DIExpression()), !dbg !12603
  %33 = load i32, i32* %width.addr, align 4, !dbg !12603
  store i32 %33, i32* %_r, align 4, !dbg !12603
  call void @llvm.dbg.declare(metadata i32* %_v, metadata !12604, metadata !DIExpression()), !dbg !12603
  %34 = load i32, i32* %height.addr, align 4, !dbg !12603
  store i32 %34, i32* %_v, align 4, !dbg !12603
  %cmp25 = icmp eq i32* %_r, %_v, !dbg !12603
  %conv = zext i1 %cmp25 to i32, !dbg !12603
  %35 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !12603
  %rotate = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %35, i32 0, i32 20, !dbg !12603
  %36 = load i32, i32* %rotate, align 8, !dbg !12603
  %cmp26 = icmp eq i32 %36, 0, !dbg !12603
  br i1 %cmp26, label %cond.true, label %lor.lhs.false, !dbg !12603

lor.lhs.false:                                    ; preds = %if.end24
  %37 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !12603
  %rotate28 = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %37, i32 0, i32 20, !dbg !12603
  %38 = load i32, i32* %rotate28, align 8, !dbg !12603
  %cmp29 = icmp eq i32 %38, 2, !dbg !12603
  br i1 %cmp29, label %cond.true, label %cond.false, !dbg !12603

cond.true:                                        ; preds = %lor.lhs.false, %if.end24
  %39 = load i32, i32* %_r, align 4, !dbg !12603
  br label %cond.end, !dbg !12603

cond.false:                                       ; preds = %lor.lhs.false
  %40 = load i32, i32* %_v, align 4, !dbg !12603
  br label %cond.end, !dbg !12603

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %39, %cond.true ], [ %40, %cond.false ], !dbg !12603
  store i32 %cond, i32* %tmp, align 4, !dbg !12603
  %41 = load i32, i32* %tmp, align 4, !dbg !12603
  store i32 %41, i32* %virt_w, align 4, !dbg !12605
  call void @llvm.dbg.declare(metadata i32* %_r31, metadata !12606, metadata !DIExpression()), !dbg !12608
  %42 = load i32, i32* %height.addr, align 4, !dbg !12608
  store i32 %42, i32* %_r31, align 4, !dbg !12608
  call void @llvm.dbg.declare(metadata i32* %_v32, metadata !12609, metadata !DIExpression()), !dbg !12608
  %43 = load i32, i32* %width.addr, align 4, !dbg !12608
  store i32 %43, i32* %_v32, align 4, !dbg !12608
  %cmp33 = icmp eq i32* %_r31, %_v32, !dbg !12608
  %conv34 = zext i1 %cmp33 to i32, !dbg !12608
  %44 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !12608
  %rotate36 = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %44, i32 0, i32 20, !dbg !12608
  %45 = load i32, i32* %rotate36, align 8, !dbg !12608
  %cmp37 = icmp eq i32 %45, 0, !dbg !12608
  br i1 %cmp37, label %cond.true43, label %lor.lhs.false39, !dbg !12608

lor.lhs.false39:                                  ; preds = %cond.end
  %46 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !12608
  %rotate40 = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %46, i32 0, i32 20, !dbg !12608
  %47 = load i32, i32* %rotate40, align 8, !dbg !12608
  %cmp41 = icmp eq i32 %47, 2, !dbg !12608
  br i1 %cmp41, label %cond.true43, label %cond.false44, !dbg !12608

cond.true43:                                      ; preds = %lor.lhs.false39, %cond.end
  %48 = load i32, i32* %_r31, align 4, !dbg !12608
  br label %cond.end45, !dbg !12608

cond.false44:                                     ; preds = %lor.lhs.false39
  %49 = load i32, i32* %_v32, align 4, !dbg !12608
  br label %cond.end45, !dbg !12608

cond.end45:                                       ; preds = %cond.false44, %cond.true43
  %cond46 = phi i32 [ %48, %cond.true43 ], [ %49, %cond.false44 ], !dbg !12608
  store i32 %cond46, i32* %tmp35, align 4, !dbg !12608
  %50 = load i32, i32* %tmp35, align 4, !dbg !12608
  store i32 %50, i32* %virt_h, align 4, !dbg !12610
  call void @llvm.dbg.declare(metadata i32* %_r47, metadata !12611, metadata !DIExpression()), !dbg !12613
  %51 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !12613
  %vc_font48 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %51, i32 0, i32 27, !dbg !12613
  %width49 = getelementptr inbounds %struct.console_font, %struct.console_font* %vc_font48, i32 0, i32 0, !dbg !12613
  %52 = load i32, i32* %width49, align 8, !dbg !12613
  store i32 %52, i32* %_r47, align 4, !dbg !12613
  call void @llvm.dbg.declare(metadata i32* %_v50, metadata !12614, metadata !DIExpression()), !dbg !12613
  %53 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !12613
  %vc_font51 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %53, i32 0, i32 27, !dbg !12613
  %height52 = getelementptr inbounds %struct.console_font, %struct.console_font* %vc_font51, i32 0, i32 1, !dbg !12613
  %54 = load i32, i32* %height52, align 4, !dbg !12613
  store i32 %54, i32* %_v50, align 4, !dbg !12613
  %cmp53 = icmp eq i32* %_r47, %_v50, !dbg !12613
  %conv54 = zext i1 %cmp53 to i32, !dbg !12613
  %55 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !12613
  %rotate56 = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %55, i32 0, i32 20, !dbg !12613
  %56 = load i32, i32* %rotate56, align 8, !dbg !12613
  %cmp57 = icmp eq i32 %56, 0, !dbg !12613
  br i1 %cmp57, label %cond.true63, label %lor.lhs.false59, !dbg !12613

lor.lhs.false59:                                  ; preds = %cond.end45
  %57 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !12613
  %rotate60 = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %57, i32 0, i32 20, !dbg !12613
  %58 = load i32, i32* %rotate60, align 8, !dbg !12613
  %cmp61 = icmp eq i32 %58, 2, !dbg !12613
  br i1 %cmp61, label %cond.true63, label %cond.false64, !dbg !12613

cond.true63:                                      ; preds = %lor.lhs.false59, %cond.end45
  %59 = load i32, i32* %_r47, align 4, !dbg !12613
  br label %cond.end65, !dbg !12613

cond.false64:                                     ; preds = %lor.lhs.false59
  %60 = load i32, i32* %_v50, align 4, !dbg !12613
  br label %cond.end65, !dbg !12613

cond.end65:                                       ; preds = %cond.false64, %cond.true63
  %cond66 = phi i32 [ %59, %cond.true63 ], [ %60, %cond.false64 ], !dbg !12613
  store i32 %cond66, i32* %tmp55, align 4, !dbg !12613
  %61 = load i32, i32* %tmp55, align 4, !dbg !12613
  store i32 %61, i32* %virt_fw, align 4, !dbg !12615
  call void @llvm.dbg.declare(metadata i32* %_r67, metadata !12616, metadata !DIExpression()), !dbg !12618
  %62 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !12618
  %vc_font68 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %62, i32 0, i32 27, !dbg !12618
  %height69 = getelementptr inbounds %struct.console_font, %struct.console_font* %vc_font68, i32 0, i32 1, !dbg !12618
  %63 = load i32, i32* %height69, align 4, !dbg !12618
  store i32 %63, i32* %_r67, align 4, !dbg !12618
  call void @llvm.dbg.declare(metadata i32* %_v70, metadata !12619, metadata !DIExpression()), !dbg !12618
  %64 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !12618
  %vc_font71 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %64, i32 0, i32 27, !dbg !12618
  %width72 = getelementptr inbounds %struct.console_font, %struct.console_font* %vc_font71, i32 0, i32 0, !dbg !12618
  %65 = load i32, i32* %width72, align 8, !dbg !12618
  store i32 %65, i32* %_v70, align 4, !dbg !12618
  %cmp73 = icmp eq i32* %_r67, %_v70, !dbg !12618
  %conv74 = zext i1 %cmp73 to i32, !dbg !12618
  %66 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !12618
  %rotate76 = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %66, i32 0, i32 20, !dbg !12618
  %67 = load i32, i32* %rotate76, align 8, !dbg !12618
  %cmp77 = icmp eq i32 %67, 0, !dbg !12618
  br i1 %cmp77, label %cond.true83, label %lor.lhs.false79, !dbg !12618

lor.lhs.false79:                                  ; preds = %cond.end65
  %68 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !12618
  %rotate80 = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %68, i32 0, i32 20, !dbg !12618
  %69 = load i32, i32* %rotate80, align 8, !dbg !12618
  %cmp81 = icmp eq i32 %69, 2, !dbg !12618
  br i1 %cmp81, label %cond.true83, label %cond.false84, !dbg !12618

cond.true83:                                      ; preds = %lor.lhs.false79, %cond.end65
  %70 = load i32, i32* %_r67, align 4, !dbg !12618
  br label %cond.end85, !dbg !12618

cond.false84:                                     ; preds = %lor.lhs.false79
  %71 = load i32, i32* %_v70, align 4, !dbg !12618
  br label %cond.end85, !dbg !12618

cond.end85:                                       ; preds = %cond.false84, %cond.true83
  %cond86 = phi i32 [ %70, %cond.true83 ], [ %71, %cond.false84 ], !dbg !12618
  store i32 %cond86, i32* %tmp75, align 4, !dbg !12618
  %72 = load i32, i32* %tmp75, align 4, !dbg !12618
  store i32 %72, i32* %virt_fh, align 4, !dbg !12620
  %73 = load i32, i32* %virt_w, align 4, !dbg !12621
  %74 = load i32, i32* %virt_fw, align 4, !dbg !12622
  %mul87 = mul i32 %73, %74, !dbg !12623
  %xres = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %var, i32 0, i32 0, !dbg !12624
  store i32 %mul87, i32* %xres, align 4, !dbg !12625
  %75 = load i32, i32* %virt_h, align 4, !dbg !12626
  %76 = load i32, i32* %virt_fh, align 4, !dbg !12627
  %mul88 = mul i32 %75, %76, !dbg !12628
  %yres = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %var, i32 0, i32 1, !dbg !12629
  store i32 %mul88, i32* %yres, align 4, !dbg !12630
  %77 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !12631
  %var89 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %77, i32 0, i32 6, !dbg !12632
  %xres90 = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %var89, i32 0, i32 0, !dbg !12633
  %78 = load i32, i32* %xres90, align 8, !dbg !12633
  %xres91 = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %var, i32 0, i32 0, !dbg !12634
  %79 = load i32, i32* %xres91, align 4, !dbg !12634
  %sub = sub i32 %78, %79, !dbg !12635
  store i32 %sub, i32* %x_diff, align 4, !dbg !12636
  %80 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !12637
  %var92 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %80, i32 0, i32 6, !dbg !12638
  %yres93 = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %var92, i32 0, i32 1, !dbg !12639
  %81 = load i32, i32* %yres93, align 4, !dbg !12639
  %yres94 = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %var, i32 0, i32 1, !dbg !12640
  %82 = load i32, i32* %yres94, align 4, !dbg !12640
  %sub95 = sub i32 %81, %82, !dbg !12641
  store i32 %sub95, i32* %y_diff, align 4, !dbg !12642
  %83 = load i32, i32* %x_diff, align 4, !dbg !12643
  %cmp96 = icmp slt i32 %83, 0, !dbg !12645
  br i1 %cmp96, label %if.then107, label %lor.lhs.false98, !dbg !12646

lor.lhs.false98:                                  ; preds = %cond.end85
  %84 = load i32, i32* %x_diff, align 4, !dbg !12647
  %85 = load i32, i32* %virt_fw, align 4, !dbg !12648
  %cmp99 = icmp sgt i32 %84, %85, !dbg !12649
  br i1 %cmp99, label %if.then107, label %lor.lhs.false101, !dbg !12650

lor.lhs.false101:                                 ; preds = %lor.lhs.false98
  %86 = load i32, i32* %y_diff, align 4, !dbg !12651
  %cmp102 = icmp slt i32 %86, 0, !dbg !12652
  br i1 %cmp102, label %if.then107, label %lor.lhs.false104, !dbg !12653

lor.lhs.false104:                                 ; preds = %lor.lhs.false101
  %87 = load i32, i32* %y_diff, align 4, !dbg !12654
  %88 = load i32, i32* %virt_fh, align 4, !dbg !12655
  %cmp105 = icmp sgt i32 %87, %88, !dbg !12656
  br i1 %cmp105, label %if.then107, label %if.end130, !dbg !12657

if.then107:                                       ; preds = %lor.lhs.false104, %lor.lhs.false101, %lor.lhs.false98, %cond.end85
  call void @llvm.dbg.declare(metadata %struct.fb_videomode** %mode, metadata !12658, metadata !DIExpression()), !dbg !12660
  %89 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !12661
  %modelist = getelementptr inbounds %struct.fb_info, %struct.fb_info* %89, i32 0, i32 13, !dbg !12662
  %call = call %struct.fb_videomode* @fb_find_best_mode(%struct.fb_var_screeninfo* %var, %struct.list_head* %modelist) #10, !dbg !12663
  store %struct.fb_videomode* %call, %struct.fb_videomode** %mode, align 8, !dbg !12664
  %90 = load %struct.fb_videomode*, %struct.fb_videomode** %mode, align 8, !dbg !12665
  %cmp108 = icmp eq %struct.fb_videomode* %90, null, !dbg !12667
  br i1 %cmp108, label %if.then110, label %if.end111, !dbg !12668

if.then110:                                       ; preds = %if.then107
  store i32 -22, i32* %retval, align 4, !dbg !12669
  br label %return, !dbg !12669

if.end111:                                        ; preds = %if.then107
  %91 = load %struct.fbcon_display*, %struct.fbcon_display** %p, align 8, !dbg !12670
  call void @display_to_var(%struct.fb_var_screeninfo* %var, %struct.fbcon_display* %91) #10, !dbg !12671
  %92 = load %struct.fb_videomode*, %struct.fb_videomode** %mode, align 8, !dbg !12672
  call void @fb_videomode_to_var(%struct.fb_var_screeninfo* %var, %struct.fb_videomode* %92) #10, !dbg !12673
  %93 = load i32, i32* %virt_w, align 4, !dbg !12674
  %xres112 = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %var, i32 0, i32 0, !dbg !12676
  %94 = load i32, i32* %xres112, align 4, !dbg !12676
  %95 = load i32, i32* %virt_fw, align 4, !dbg !12677
  %div = udiv i32 %94, %95, !dbg !12678
  %cmp113 = icmp ugt i32 %93, %div, !dbg !12679
  br i1 %cmp113, label %if.then120, label %lor.lhs.false115, !dbg !12680

lor.lhs.false115:                                 ; preds = %if.end111
  %96 = load i32, i32* %virt_h, align 4, !dbg !12681
  %yres116 = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %var, i32 0, i32 1, !dbg !12682
  %97 = load i32, i32* %yres116, align 4, !dbg !12682
  %98 = load i32, i32* %virt_fh, align 4, !dbg !12683
  %div117 = udiv i32 %97, %98, !dbg !12684
  %cmp118 = icmp ugt i32 %96, %div117, !dbg !12685
  br i1 %cmp118, label %if.then120, label %if.end121, !dbg !12686

if.then120:                                       ; preds = %lor.lhs.false115, %if.end111
  store i32 -22, i32* %retval, align 4, !dbg !12687
  br label %return, !dbg !12687

if.end121:                                        ; preds = %lor.lhs.false115
  %99 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !12688
  %call122 = call zeroext i1 @con_is_visible(%struct.vc_data* %99) #10, !dbg !12690
  br i1 %call122, label %if.then123, label %if.end125, !dbg !12691

if.then123:                                       ; preds = %if.end121
  %activate = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %var, i32 0, i32 13, !dbg !12692
  store i32 128, i32* %activate, align 4, !dbg !12694
  %100 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !12695
  %call124 = call i32 @fb_set_var(%struct.fb_info* %100, %struct.fb_var_screeninfo* %var) #10, !dbg !12696
  br label %if.end125, !dbg !12697

if.end125:                                        ; preds = %if.then123, %if.end121
  %101 = load %struct.fbcon_display*, %struct.fbcon_display** %p, align 8, !dbg !12698
  %102 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !12699
  %var126 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %102, i32 0, i32 6, !dbg !12700
  %103 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !12701
  %call127 = call i32 @var_to_display(%struct.fbcon_display* %101, %struct.fb_var_screeninfo* %var126, %struct.fb_info* %103) #10, !dbg !12702
  %104 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !12703
  %var128 = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %104, i32 0, i32 7, !dbg !12704
  %105 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !12705
  %var129 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %105, i32 0, i32 6, !dbg !12706
  %106 = bitcast %struct.fb_var_screeninfo* %var128 to i8*, !dbg !12706
  %107 = bitcast %struct.fb_var_screeninfo* %var129 to i8*, !dbg !12706
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %106, i8* align 8 %107, i64 160, i1 false), !dbg !12706
  br label %if.end130, !dbg !12707

if.end130:                                        ; preds = %if.end125, %lor.lhs.false104
  %108 = load %struct.fbcon_display*, %struct.fbcon_display** %p, align 8, !dbg !12708
  %109 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !12709
  %110 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !12710
  call void @updatescrollmode(%struct.fbcon_display* %108, %struct.fb_info* %109, %struct.vc_data* %110) #10, !dbg !12711
  store i32 0, i32* %retval, align 4, !dbg !12712
  br label %return, !dbg !12712

return:                                           ; preds = %if.end130, %if.then120, %if.then110, %if.then22, %if.then11
  %111 = load i32, i32* %retval, align 4, !dbg !12713
  ret i32 %111, !dbg !12713
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @fbcon_invert_region(%struct.vc_data* %vc, i16* %p, i32 %cnt) #1 !dbg !12714 {
entry:
  %vc.addr = alloca %struct.vc_data*, align 8
  %p.addr = alloca i16*, align 8
  %cnt.addr = alloca i32, align 4
  %a = alloca i16, align 2
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !12715, metadata !DIExpression()), !dbg !12716
  store i16* %p, i16** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %p.addr, metadata !12717, metadata !DIExpression()), !dbg !12718
  store i32 %cnt, i32* %cnt.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cnt.addr, metadata !12719, metadata !DIExpression()), !dbg !12720
  br label %while.cond, !dbg !12721

while.cond:                                       ; preds = %if.end25, %entry
  %0 = load i32, i32* %cnt.addr, align 4, !dbg !12722
  %dec = add i32 %0, -1, !dbg !12722
  store i32 %dec, i32* %cnt.addr, align 4, !dbg !12722
  %tobool = icmp ne i32 %0, 0, !dbg !12721
  br i1 %tobool, label %while.body, label %while.end, !dbg !12721

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i16* %a, metadata !12723, metadata !DIExpression()), !dbg !12725
  %1 = load i16*, i16** %p.addr, align 8, !dbg !12726
  %2 = load i16, i16* %1, align 2, !dbg !12726
  store i16 %2, i16* %a, align 2, !dbg !12725
  %3 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !12727
  %vc_can_do_color = getelementptr inbounds %struct.vc_data, %struct.vc_data* %3, i32 0, i32 36, !dbg !12729
  %bf.load = load i16, i16* %vc_can_do_color, align 8, !dbg !12729
  %bf.lshr = lshr i16 %bf.load, 11, !dbg !12729
  %bf.clear = and i16 %bf.lshr, 1, !dbg !12729
  %bf.cast = zext i16 %bf.clear to i32, !dbg !12729
  %tobool1 = icmp ne i32 %bf.cast, 0, !dbg !12727
  br i1 %tobool1, label %if.else, label %if.then, !dbg !12730

if.then:                                          ; preds = %while.body
  %4 = load i16, i16* %a, align 2, !dbg !12731
  %conv = zext i16 %4 to i32, !dbg !12731
  %xor = xor i32 %conv, 2048, !dbg !12731
  %conv2 = trunc i32 %xor to i16, !dbg !12731
  store i16 %conv2, i16* %a, align 2, !dbg !12731
  br label %if.end25, !dbg !12732

if.else:                                          ; preds = %while.body
  %5 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !12733
  %vc_hi_font_mask = getelementptr inbounds %struct.vc_data, %struct.vc_data* %5, i32 0, i32 26, !dbg !12735
  %6 = load i16, i16* %vc_hi_font_mask, align 8, !dbg !12735
  %conv3 = zext i16 %6 to i32, !dbg !12733
  %cmp = icmp eq i32 %conv3, 256, !dbg !12736
  br i1 %cmp, label %if.then5, label %if.else13, !dbg !12737

if.then5:                                         ; preds = %if.else
  %7 = load i16, i16* %a, align 2, !dbg !12738
  %conv6 = zext i16 %7 to i32, !dbg !12739
  %and = and i32 %conv6, 4607, !dbg !12740
  %8 = load i16, i16* %a, align 2, !dbg !12741
  %conv7 = zext i16 %8 to i32, !dbg !12742
  %and8 = and i32 %conv7, 57344, !dbg !12743
  %shr = ashr i32 %and8, 4, !dbg !12744
  %or = or i32 %and, %shr, !dbg !12745
  %9 = load i16, i16* %a, align 2, !dbg !12746
  %conv9 = zext i16 %9 to i32, !dbg !12747
  %and10 = and i32 %conv9, 3584, !dbg !12748
  %shl = shl i32 %and10, 4, !dbg !12749
  %or11 = or i32 %or, %shl, !dbg !12750
  %conv12 = trunc i32 %or11 to i16, !dbg !12751
  store i16 %conv12, i16* %a, align 2, !dbg !12752
  br label %if.end, !dbg !12753

if.else13:                                        ; preds = %if.else
  %10 = load i16, i16* %a, align 2, !dbg !12754
  %conv14 = zext i16 %10 to i32, !dbg !12755
  %and15 = and i32 %conv14, 35071, !dbg !12756
  %11 = load i16, i16* %a, align 2, !dbg !12757
  %conv16 = zext i16 %11 to i32, !dbg !12758
  %and17 = and i32 %conv16, 28672, !dbg !12759
  %shr18 = ashr i32 %and17, 4, !dbg !12760
  %or19 = or i32 %and15, %shr18, !dbg !12761
  %12 = load i16, i16* %a, align 2, !dbg !12762
  %conv20 = zext i16 %12 to i32, !dbg !12763
  %and21 = and i32 %conv20, 1792, !dbg !12764
  %shl22 = shl i32 %and21, 4, !dbg !12765
  %or23 = or i32 %or19, %shl22, !dbg !12766
  %conv24 = trunc i32 %or23 to i16, !dbg !12767
  store i16 %conv24, i16* %a, align 2, !dbg !12768
  br label %if.end

if.end:                                           ; preds = %if.else13, %if.then5
  br label %if.end25

if.end25:                                         ; preds = %if.end, %if.then
  %13 = load i16, i16* %a, align 2, !dbg !12769
  %14 = load i16*, i16** %p.addr, align 8, !dbg !12769
  %incdec.ptr = getelementptr i16, i16* %14, i32 1, !dbg !12769
  store i16* %incdec.ptr, i16** %p.addr, align 8, !dbg !12769
  store i16 %13, i16* %14, align 2, !dbg !12769
  br label %while.cond, !dbg !12721, !llvm.loop !12770

while.end:                                        ; preds = %while.cond
  ret void, !dbg !12772
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i16* @fbcon_screen_pos(%struct.vc_data* %vc, i32 %offset) #1 !dbg !12773 {
entry:
  %vc.addr = alloca %struct.vc_data*, align 8
  %offset.addr = alloca i32, align 4
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !12774, metadata !DIExpression()), !dbg !12775
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !12776, metadata !DIExpression()), !dbg !12777
  %0 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !12778
  %vc_origin = getelementptr inbounds %struct.vc_data, %struct.vc_data* %0, i32 0, i32 8, !dbg !12779
  %1 = load i64, i64* %vc_origin, align 8, !dbg !12779
  %2 = load i32, i32* %offset.addr, align 4, !dbg !12780
  %conv = sext i32 %2 to i64, !dbg !12780
  %add = add i64 %1, %conv, !dbg !12781
  %3 = inttoptr i64 %add to i16*, !dbg !12782
  ret i16* %3, !dbg !12783
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @fbcon_getxy(%struct.vc_data* %vc, i64 %pos, i32* %px, i32* %py) #1 !dbg !12784 {
entry:
  %vc.addr = alloca %struct.vc_data*, align 8
  %pos.addr = alloca i64, align 8
  %px.addr = alloca i32*, align 8
  %py.addr = alloca i32*, align 8
  %ret = alloca i64, align 8
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %offset = alloca i64, align 8
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !12785, metadata !DIExpression()), !dbg !12786
  store i64 %pos, i64* %pos.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %pos.addr, metadata !12787, metadata !DIExpression()), !dbg !12788
  store i32* %px, i32** %px.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %px.addr, metadata !12789, metadata !DIExpression()), !dbg !12790
  store i32* %py, i32** %py.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %py.addr, metadata !12791, metadata !DIExpression()), !dbg !12792
  call void @llvm.dbg.declare(metadata i64* %ret, metadata !12793, metadata !DIExpression()), !dbg !12794
  call void @llvm.dbg.declare(metadata i32* %x, metadata !12795, metadata !DIExpression()), !dbg !12796
  call void @llvm.dbg.declare(metadata i32* %y, metadata !12797, metadata !DIExpression()), !dbg !12798
  %0 = load i64, i64* %pos.addr, align 8, !dbg !12799
  %1 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !12801
  %vc_origin = getelementptr inbounds %struct.vc_data, %struct.vc_data* %1, i32 0, i32 8, !dbg !12802
  %2 = load i64, i64* %vc_origin, align 8, !dbg !12802
  %cmp = icmp uge i64 %0, %2, !dbg !12803
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !12804

land.lhs.true:                                    ; preds = %entry
  %3 = load i64, i64* %pos.addr, align 8, !dbg !12805
  %4 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !12806
  %vc_scr_end = getelementptr inbounds %struct.vc_data, %struct.vc_data* %4, i32 0, i32 9, !dbg !12807
  %5 = load i64, i64* %vc_scr_end, align 8, !dbg !12807
  %cmp1 = icmp ult i64 %3, %5, !dbg !12808
  br i1 %cmp1, label %if.then, label %if.else, !dbg !12809

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i64* %offset, metadata !12810, metadata !DIExpression()), !dbg !12812
  %6 = load i64, i64* %pos.addr, align 8, !dbg !12813
  %7 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !12814
  %vc_origin2 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %7, i32 0, i32 8, !dbg !12815
  %8 = load i64, i64* %vc_origin2, align 8, !dbg !12815
  %sub = sub i64 %6, %8, !dbg !12816
  %div = udiv i64 %sub, 2, !dbg !12817
  store i64 %div, i64* %offset, align 8, !dbg !12812
  %9 = load i64, i64* %offset, align 8, !dbg !12818
  %10 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !12819
  %vc_cols = getelementptr inbounds %struct.vc_data, %struct.vc_data* %10, i32 0, i32 4, !dbg !12820
  %11 = load i32, i32* %vc_cols, align 4, !dbg !12820
  %conv = zext i32 %11 to i64, !dbg !12819
  %rem = urem i64 %9, %conv, !dbg !12821
  %conv3 = trunc i64 %rem to i32, !dbg !12818
  store i32 %conv3, i32* %x, align 4, !dbg !12822
  %12 = load i64, i64* %offset, align 8, !dbg !12823
  %13 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !12824
  %vc_cols4 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %13, i32 0, i32 4, !dbg !12825
  %14 = load i32, i32* %vc_cols4, align 4, !dbg !12825
  %conv5 = zext i32 %14 to i64, !dbg !12824
  %div6 = udiv i64 %12, %conv5, !dbg !12826
  %conv7 = trunc i64 %div6 to i32, !dbg !12823
  store i32 %conv7, i32* %y, align 4, !dbg !12827
  %15 = load i64, i64* %pos.addr, align 8, !dbg !12828
  %16 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !12829
  %vc_cols8 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %16, i32 0, i32 4, !dbg !12830
  %17 = load i32, i32* %vc_cols8, align 4, !dbg !12830
  %18 = load i32, i32* %x, align 4, !dbg !12831
  %sub9 = sub i32 %17, %18, !dbg !12832
  %mul = mul i32 %sub9, 2, !dbg !12833
  %conv10 = zext i32 %mul to i64, !dbg !12834
  %add = add i64 %15, %conv10, !dbg !12835
  store i64 %add, i64* %ret, align 8, !dbg !12836
  br label %if.end, !dbg !12837

if.else:                                          ; preds = %land.lhs.true, %entry
  store i32 0, i32* %y, align 4, !dbg !12838
  store i32 0, i32* %x, align 4, !dbg !12840
  %19 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !12841
  %vc_origin11 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %19, i32 0, i32 8, !dbg !12842
  %20 = load i64, i64* %vc_origin11, align 8, !dbg !12842
  store i64 %20, i64* %ret, align 8, !dbg !12843
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %21 = load i32*, i32** %px.addr, align 8, !dbg !12844
  %tobool = icmp ne i32* %21, null, !dbg !12844
  br i1 %tobool, label %if.then12, label %if.end13, !dbg !12846

if.then12:                                        ; preds = %if.end
  %22 = load i32, i32* %x, align 4, !dbg !12847
  %23 = load i32*, i32** %px.addr, align 8, !dbg !12848
  store i32 %22, i32* %23, align 4, !dbg !12849
  br label %if.end13, !dbg !12850

if.end13:                                         ; preds = %if.then12, %if.end
  %24 = load i32*, i32** %py.addr, align 8, !dbg !12851
  %tobool14 = icmp ne i32* %24, null, !dbg !12851
  br i1 %tobool14, label %if.then15, label %if.end16, !dbg !12853

if.then15:                                        ; preds = %if.end13
  %25 = load i32, i32* %y, align 4, !dbg !12854
  %26 = load i32*, i32** %py.addr, align 8, !dbg !12855
  store i32 %25, i32* %26, align 4, !dbg !12856
  br label %if.end16, !dbg !12857

if.end16:                                         ; preds = %if.then15, %if.end13
  %27 = load i64, i64* %ret, align 8, !dbg !12858
  ret i64 %27, !dbg !12859
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @fbcon_debug_enter(%struct.vc_data* %vc) #1 !dbg !12860 {
entry:
  %vc.addr = alloca %struct.vc_data*, align 8
  %info = alloca %struct.fb_info*, align 8
  %ops = alloca %struct.fbcon_ops*, align 8
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !12861, metadata !DIExpression()), !dbg !12862
  call void @llvm.dbg.declare(metadata %struct.fb_info** %info, metadata !12863, metadata !DIExpression()), !dbg !12864
  %0 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !12865
  %vc_num = getelementptr inbounds %struct.vc_data, %struct.vc_data* %0, i32 0, i32 3, !dbg !12866
  %1 = load i16, i16* %vc_num, align 8, !dbg !12866
  %idxprom = zext i16 %1 to i64, !dbg !12867
  %arrayidx = getelementptr [63 x i8], [63 x i8]* @con2fb_map, i64 0, i64 %idxprom, !dbg !12867
  %2 = load i8, i8* %arrayidx, align 1, !dbg !12867
  %idxprom1 = sext i8 %2 to i64, !dbg !12868
  %arrayidx2 = getelementptr [32 x %struct.fb_info*], [32 x %struct.fb_info*]* @registered_fb, i64 0, i64 %idxprom1, !dbg !12868
  %3 = load %struct.fb_info*, %struct.fb_info** %arrayidx2, align 8, !dbg !12868
  store %struct.fb_info* %3, %struct.fb_info** %info, align 8, !dbg !12864
  call void @llvm.dbg.declare(metadata %struct.fbcon_ops** %ops, metadata !12869, metadata !DIExpression()), !dbg !12870
  %4 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !12871
  %fbcon_par = getelementptr inbounds %struct.fb_info, %struct.fb_info* %4, i32 0, i32 29, !dbg !12872
  %5 = load i8*, i8** %fbcon_par, align 8, !dbg !12872
  %6 = bitcast i8* %5 to %struct.fbcon_ops*, !dbg !12871
  store %struct.fbcon_ops* %6, %struct.fbcon_ops** %ops, align 8, !dbg !12870
  %7 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !12873
  %graphics = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %7, i32 0, i32 17, !dbg !12874
  %8 = load i32, i32* %graphics, align 4, !dbg !12874
  %9 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !12875
  %save_graphics = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %9, i32 0, i32 18, !dbg !12876
  store i32 %8, i32* %save_graphics, align 8, !dbg !12877
  %10 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !12878
  %graphics3 = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %10, i32 0, i32 17, !dbg !12879
  store i32 0, i32* %graphics3, align 4, !dbg !12880
  %11 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !12881
  %fbops = getelementptr inbounds %struct.fb_info, %struct.fb_info* %11, i32 0, i32 20, !dbg !12883
  %12 = load %struct.fb_ops*, %struct.fb_ops** %fbops, align 8, !dbg !12883
  %fb_debug_enter = getelementptr inbounds %struct.fb_ops, %struct.fb_ops* %12, i32 0, i32 21, !dbg !12884
  %13 = load i32 (%struct.fb_info*)*, i32 (%struct.fb_info*)** %fb_debug_enter, align 8, !dbg !12884
  %tobool = icmp ne i32 (%struct.fb_info*)* %13, null, !dbg !12881
  br i1 %tobool, label %if.then, label %if.end, !dbg !12885

if.then:                                          ; preds = %entry
  %14 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !12886
  %fbops4 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %14, i32 0, i32 20, !dbg !12887
  %15 = load %struct.fb_ops*, %struct.fb_ops** %fbops4, align 8, !dbg !12887
  %fb_debug_enter5 = getelementptr inbounds %struct.fb_ops, %struct.fb_ops* %15, i32 0, i32 21, !dbg !12888
  %16 = load i32 (%struct.fb_info*)*, i32 (%struct.fb_info*)** %fb_debug_enter5, align 8, !dbg !12888
  %17 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !12889
  %call = call i32 %16(%struct.fb_info* %17) #10, !dbg !12886
  br label %if.end, !dbg !12886

if.end:                                           ; preds = %if.then, %entry
  %18 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !12890
  call void @fbcon_set_palette(%struct.vc_data* %18, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @color_table, i64 0, i64 0)) #10, !dbg !12891
  ret i32 0, !dbg !12892
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @fbcon_debug_leave(%struct.vc_data* %vc) #1 !dbg !12893 {
entry:
  %vc.addr = alloca %struct.vc_data*, align 8
  %info = alloca %struct.fb_info*, align 8
  %ops = alloca %struct.fbcon_ops*, align 8
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !12894, metadata !DIExpression()), !dbg !12895
  call void @llvm.dbg.declare(metadata %struct.fb_info** %info, metadata !12896, metadata !DIExpression()), !dbg !12897
  %0 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !12898
  %vc_num = getelementptr inbounds %struct.vc_data, %struct.vc_data* %0, i32 0, i32 3, !dbg !12899
  %1 = load i16, i16* %vc_num, align 8, !dbg !12899
  %idxprom = zext i16 %1 to i64, !dbg !12900
  %arrayidx = getelementptr [63 x i8], [63 x i8]* @con2fb_map, i64 0, i64 %idxprom, !dbg !12900
  %2 = load i8, i8* %arrayidx, align 1, !dbg !12900
  %idxprom1 = sext i8 %2 to i64, !dbg !12901
  %arrayidx2 = getelementptr [32 x %struct.fb_info*], [32 x %struct.fb_info*]* @registered_fb, i64 0, i64 %idxprom1, !dbg !12901
  %3 = load %struct.fb_info*, %struct.fb_info** %arrayidx2, align 8, !dbg !12901
  store %struct.fb_info* %3, %struct.fb_info** %info, align 8, !dbg !12897
  call void @llvm.dbg.declare(metadata %struct.fbcon_ops** %ops, metadata !12902, metadata !DIExpression()), !dbg !12903
  %4 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !12904
  %fbcon_par = getelementptr inbounds %struct.fb_info, %struct.fb_info* %4, i32 0, i32 29, !dbg !12905
  %5 = load i8*, i8** %fbcon_par, align 8, !dbg !12905
  %6 = bitcast i8* %5 to %struct.fbcon_ops*, !dbg !12904
  store %struct.fbcon_ops* %6, %struct.fbcon_ops** %ops, align 8, !dbg !12903
  %7 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !12906
  %save_graphics = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %7, i32 0, i32 18, !dbg !12907
  %8 = load i32, i32* %save_graphics, align 8, !dbg !12907
  %9 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !12908
  %graphics = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %9, i32 0, i32 17, !dbg !12909
  store i32 %8, i32* %graphics, align 4, !dbg !12910
  %10 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !12911
  %fbops = getelementptr inbounds %struct.fb_info, %struct.fb_info* %10, i32 0, i32 20, !dbg !12913
  %11 = load %struct.fb_ops*, %struct.fb_ops** %fbops, align 8, !dbg !12913
  %fb_debug_leave = getelementptr inbounds %struct.fb_ops, %struct.fb_ops* %11, i32 0, i32 22, !dbg !12914
  %12 = load i32 (%struct.fb_info*)*, i32 (%struct.fb_info*)** %fb_debug_leave, align 8, !dbg !12914
  %tobool = icmp ne i32 (%struct.fb_info*)* %12, null, !dbg !12911
  br i1 %tobool, label %if.then, label %if.end, !dbg !12915

if.then:                                          ; preds = %entry
  %13 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !12916
  %fbops3 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %13, i32 0, i32 20, !dbg !12917
  %14 = load %struct.fb_ops*, %struct.fb_ops** %fbops3, align 8, !dbg !12917
  %fb_debug_leave4 = getelementptr inbounds %struct.fb_ops, %struct.fb_ops* %14, i32 0, i32 22, !dbg !12918
  %15 = load i32 (%struct.fb_info*)*, i32 (%struct.fb_info*)** %fb_debug_leave4, align 8, !dbg !12918
  %16 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !12919
  %call = call i32 %15(%struct.fb_info* %16) #10, !dbg !12916
  br label %if.end, !dbg !12916

if.end:                                           ; preds = %if.then, %entry
  ret i32 0, !dbg !12920
}

; Function Attrs: noredzone
declare dso_local %struct.font_desc* @find_font(i8*) #3

; Function Attrs: noredzone
declare dso_local %struct.font_desc* @get_default_font(i32, i32, i32, i32) #3

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @fbcon_free_font(%struct.fbcon_display* %p, i1 zeroext %freefont) #1 !dbg !12921 {
entry:
  %p.addr = alloca %struct.fbcon_display*, align 8
  %freefont.addr = alloca i8, align 1
  store %struct.fbcon_display* %p, %struct.fbcon_display** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fbcon_display** %p.addr, metadata !12924, metadata !DIExpression()), !dbg !12925
  %frombool = zext i1 %freefont to i8
  store i8 %frombool, i8* %freefont.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %freefont.addr, metadata !12926, metadata !DIExpression()), !dbg !12927
  %0 = load i8, i8* %freefont.addr, align 1, !dbg !12928
  %tobool = trunc i8 %0 to i1, !dbg !12928
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !12930

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.fbcon_display*, %struct.fbcon_display** %p.addr, align 8, !dbg !12931
  %userfont = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %1, i32 0, i32 1, !dbg !12932
  %2 = load i32, i32* %userfont, align 8, !dbg !12932
  %tobool1 = icmp ne i32 %2, 0, !dbg !12931
  br i1 %tobool1, label %land.lhs.true2, label %if.end, !dbg !12933

land.lhs.true2:                                   ; preds = %land.lhs.true
  %3 = load %struct.fbcon_display*, %struct.fbcon_display** %p.addr, align 8, !dbg !12934
  %fontdata = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %3, i32 0, i32 0, !dbg !12935
  %4 = load i8*, i8** %fontdata, align 8, !dbg !12935
  %tobool3 = icmp ne i8* %4, null, !dbg !12934
  br i1 %tobool3, label %land.lhs.true4, label %if.end, !dbg !12936

land.lhs.true4:                                   ; preds = %land.lhs.true2
  %5 = load %struct.fbcon_display*, %struct.fbcon_display** %p.addr, align 8, !dbg !12937
  %fontdata5 = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %5, i32 0, i32 0, !dbg !12937
  %6 = load i8*, i8** %fontdata5, align 8, !dbg !12937
  %7 = bitcast i8* %6 to i32*, !dbg !12937
  %arrayidx = getelementptr i32, i32* %7, i64 -1, !dbg !12937
  %8 = load i32, i32* %arrayidx, align 4, !dbg !12938
  %dec = add i32 %8, -1, !dbg !12938
  store i32 %dec, i32* %arrayidx, align 4, !dbg !12938
  %cmp = icmp eq i32 %dec, 0, !dbg !12939
  br i1 %cmp, label %if.then, label %if.end, !dbg !12940

if.then:                                          ; preds = %land.lhs.true4
  %9 = load %struct.fbcon_display*, %struct.fbcon_display** %p.addr, align 8, !dbg !12941
  %fontdata6 = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %9, i32 0, i32 0, !dbg !12942
  %10 = load i8*, i8** %fontdata6, align 8, !dbg !12942
  %add.ptr = getelementptr i8, i8* %10, i64 -16, !dbg !12943
  call void @kfree(i8* %add.ptr) #10, !dbg !12944
  br label %if.end, !dbg !12944

if.end:                                           ; preds = %if.then, %land.lhs.true4, %land.lhs.true2, %land.lhs.true, %entry
  %11 = load %struct.fbcon_display*, %struct.fbcon_display** %p.addr, align 8, !dbg !12945
  %fontdata7 = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %11, i32 0, i32 0, !dbg !12946
  store i8* null, i8** %fontdata7, align 8, !dbg !12947
  %12 = load %struct.fbcon_display*, %struct.fbcon_display** %p.addr, align 8, !dbg !12948
  %userfont8 = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %12, i32 0, i32 1, !dbg !12949
  store i32 0, i32* %userfont8, align 8, !dbg !12950
  ret void, !dbg !12951
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @set_vc_hi_font(%struct.vc_data* %vc, i1 zeroext %set) #1 !dbg !12952 {
entry:
  %vc.addr = alloca %struct.vc_data*, align 8
  %set.addr = alloca i8, align 1
  %cp = alloca i16*, align 8
  %count = alloca i32, align 4
  %c = alloca i16, align 2
  %cp48 = alloca i16*, align 8
  %count50 = alloca i32, align 4
  %c53 = alloca i16, align 2
  %newc = alloca i16, align 2
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !12955, metadata !DIExpression()), !dbg !12956
  %frombool = zext i1 %set to i8
  store i8 %frombool, i8* %set.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %set.addr, metadata !12957, metadata !DIExpression()), !dbg !12958
  %0 = load i8, i8* %set.addr, align 1, !dbg !12959
  %tobool = trunc i8 %0 to i1, !dbg !12959
  br i1 %tobool, label %if.else, label %if.then, !dbg !12961

if.then:                                          ; preds = %entry
  %1 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !12962
  %vc_hi_font_mask = getelementptr inbounds %struct.vc_data, %struct.vc_data* %1, i32 0, i32 26, !dbg !12964
  store i16 0, i16* %vc_hi_font_mask, align 8, !dbg !12965
  %2 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !12966
  %vc_can_do_color = getelementptr inbounds %struct.vc_data, %struct.vc_data* %2, i32 0, i32 36, !dbg !12968
  %bf.load = load i16, i16* %vc_can_do_color, align 8, !dbg !12968
  %bf.lshr = lshr i16 %bf.load, 11, !dbg !12968
  %bf.clear = and i16 %bf.lshr, 1, !dbg !12968
  %bf.cast = zext i16 %bf.clear to i32, !dbg !12968
  %tobool1 = icmp ne i32 %bf.cast, 0, !dbg !12966
  br i1 %tobool1, label %if.then2, label %if.end, !dbg !12969

if.then2:                                         ; preds = %if.then
  %3 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !12970
  %vc_complement_mask = getelementptr inbounds %struct.vc_data, %struct.vc_data* %3, i32 0, i32 23, !dbg !12972
  %4 = load i16, i16* %vc_complement_mask, align 8, !dbg !12973
  %conv = zext i16 %4 to i32, !dbg !12973
  %shr = ashr i32 %conv, 1, !dbg !12973
  %conv3 = trunc i32 %shr to i16, !dbg !12973
  store i16 %conv3, i16* %vc_complement_mask, align 8, !dbg !12973
  %5 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !12974
  %vc_s_complement_mask = getelementptr inbounds %struct.vc_data, %struct.vc_data* %5, i32 0, i32 24, !dbg !12975
  %6 = load i16, i16* %vc_s_complement_mask, align 2, !dbg !12976
  %conv4 = zext i16 %6 to i32, !dbg !12976
  %shr5 = ashr i32 %conv4, 1, !dbg !12976
  %conv6 = trunc i32 %shr5 to i16, !dbg !12976
  store i16 %conv6, i16* %vc_s_complement_mask, align 2, !dbg !12976
  br label %if.end, !dbg !12977

if.end:                                           ; preds = %if.then2, %if.then
  %7 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !12978
  %vc_can_do_color7 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %7, i32 0, i32 36, !dbg !12980
  %bf.load8 = load i16, i16* %vc_can_do_color7, align 8, !dbg !12980
  %bf.lshr9 = lshr i16 %bf.load8, 11, !dbg !12980
  %bf.clear10 = and i16 %bf.lshr9, 1, !dbg !12980
  %bf.cast11 = zext i16 %bf.clear10 to i32, !dbg !12980
  %tobool12 = icmp ne i32 %bf.cast11, 0, !dbg !12978
  br i1 %tobool12, label %if.then13, label %if.end31, !dbg !12981

if.then13:                                        ; preds = %if.end
  call void @llvm.dbg.declare(metadata i16** %cp, metadata !12982, metadata !DIExpression()), !dbg !12984
  %8 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !12985
  %vc_origin = getelementptr inbounds %struct.vc_data, %struct.vc_data* %8, i32 0, i32 8, !dbg !12986
  %9 = load i64, i64* %vc_origin, align 8, !dbg !12986
  %10 = inttoptr i64 %9 to i16*, !dbg !12987
  store i16* %10, i16** %cp, align 8, !dbg !12984
  call void @llvm.dbg.declare(metadata i32* %count, metadata !12988, metadata !DIExpression()), !dbg !12989
  %11 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !12990
  %vc_screenbuf_size = getelementptr inbounds %struct.vc_data, %struct.vc_data* %11, i32 0, i32 15, !dbg !12991
  %12 = load i32, i32* %vc_screenbuf_size, align 8, !dbg !12991
  %div = udiv i32 %12, 2, !dbg !12992
  store i32 %div, i32* %count, align 4, !dbg !12989
  call void @llvm.dbg.declare(metadata i16* %c, metadata !12993, metadata !DIExpression()), !dbg !12994
  br label %for.cond, !dbg !12995

for.cond:                                         ; preds = %for.inc, %if.then13
  %13 = load i32, i32* %count, align 4, !dbg !12996
  %cmp = icmp sgt i32 %13, 0, !dbg !12999
  br i1 %cmp, label %for.body, label %for.end, !dbg !13000

for.body:                                         ; preds = %for.cond
  %14 = load i16*, i16** %cp, align 8, !dbg !13001
  %15 = load i16, i16* %14, align 2, !dbg !13001
  store i16 %15, i16* %c, align 2, !dbg !13003
  %16 = load i16, i16* %c, align 2, !dbg !13004
  %conv15 = zext i16 %16 to i32, !dbg !13004
  %and = and i32 %conv15, 65024, !dbg !13004
  %shr16 = ashr i32 %and, 1, !dbg !13004
  %17 = load i16, i16* %c, align 2, !dbg !13004
  %conv17 = zext i16 %17 to i32, !dbg !13004
  %and18 = and i32 %conv17, 255, !dbg !13004
  %or = or i32 %shr16, %and18, !dbg !13004
  %conv19 = trunc i32 %or to i16, !dbg !13004
  %18 = load i16*, i16** %cp, align 8, !dbg !13004
  store i16 %conv19, i16* %18, align 2, !dbg !13004
  br label %for.inc, !dbg !13005

for.inc:                                          ; preds = %for.body
  %19 = load i32, i32* %count, align 4, !dbg !13006
  %dec = add i32 %19, -1, !dbg !13006
  store i32 %dec, i32* %count, align 4, !dbg !13006
  %20 = load i16*, i16** %cp, align 8, !dbg !13007
  %incdec.ptr = getelementptr i16, i16* %20, i32 1, !dbg !13007
  store i16* %incdec.ptr, i16** %cp, align 8, !dbg !13007
  br label %for.cond, !dbg !13008, !llvm.loop !13009

for.end:                                          ; preds = %for.cond
  %21 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13011
  %vc_video_erase_char = getelementptr inbounds %struct.vc_data, %struct.vc_data* %21, i32 0, i32 28, !dbg !13012
  %22 = load i16, i16* %vc_video_erase_char, align 8, !dbg !13012
  store i16 %22, i16* %c, align 2, !dbg !13013
  %23 = load i16, i16* %c, align 2, !dbg !13014
  %conv20 = zext i16 %23 to i32, !dbg !13014
  %and21 = and i32 %conv20, 65024, !dbg !13015
  %shr22 = ashr i32 %and21, 1, !dbg !13016
  %24 = load i16, i16* %c, align 2, !dbg !13017
  %conv23 = zext i16 %24 to i32, !dbg !13017
  %and24 = and i32 %conv23, 255, !dbg !13018
  %or25 = or i32 %shr22, %and24, !dbg !13019
  %conv26 = trunc i32 %or25 to i16, !dbg !13020
  %25 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13021
  %vc_video_erase_char27 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %25, i32 0, i32 28, !dbg !13022
  store i16 %conv26, i16* %vc_video_erase_char27, align 8, !dbg !13023
  %26 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13024
  %vc_attr = getelementptr inbounds %struct.vc_data, %struct.vc_data* %26, i32 0, i32 17, !dbg !13025
  %27 = load i8, i8* %vc_attr, align 1, !dbg !13026
  %conv28 = zext i8 %27 to i32, !dbg !13026
  %shr29 = ashr i32 %conv28, 1, !dbg !13026
  %conv30 = trunc i32 %shr29 to i8, !dbg !13026
  store i8 %conv30, i8* %vc_attr, align 1, !dbg !13026
  br label %if.end31, !dbg !13027

if.end31:                                         ; preds = %for.end, %if.end
  br label %if.end107, !dbg !13028

if.else:                                          ; preds = %entry
  %28 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13029
  %vc_hi_font_mask32 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %28, i32 0, i32 26, !dbg !13031
  store i16 256, i16* %vc_hi_font_mask32, align 8, !dbg !13032
  %29 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13033
  %vc_can_do_color33 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %29, i32 0, i32 36, !dbg !13035
  %bf.load34 = load i16, i16* %vc_can_do_color33, align 8, !dbg !13035
  %bf.lshr35 = lshr i16 %bf.load34, 11, !dbg !13035
  %bf.clear36 = and i16 %bf.lshr35, 1, !dbg !13035
  %bf.cast37 = zext i16 %bf.clear36 to i32, !dbg !13035
  %tobool38 = icmp ne i32 %bf.cast37, 0, !dbg !13033
  br i1 %tobool38, label %if.then39, label %if.end47, !dbg !13036

if.then39:                                        ; preds = %if.else
  %30 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13037
  %vc_complement_mask40 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %30, i32 0, i32 23, !dbg !13039
  %31 = load i16, i16* %vc_complement_mask40, align 8, !dbg !13040
  %conv41 = zext i16 %31 to i32, !dbg !13040
  %shl = shl i32 %conv41, 1, !dbg !13040
  %conv42 = trunc i32 %shl to i16, !dbg !13040
  store i16 %conv42, i16* %vc_complement_mask40, align 8, !dbg !13040
  %32 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13041
  %vc_s_complement_mask43 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %32, i32 0, i32 24, !dbg !13042
  %33 = load i16, i16* %vc_s_complement_mask43, align 2, !dbg !13043
  %conv44 = zext i16 %33 to i32, !dbg !13043
  %shl45 = shl i32 %conv44, 1, !dbg !13043
  %conv46 = trunc i32 %shl45 to i16, !dbg !13043
  store i16 %conv46, i16* %vc_s_complement_mask43, align 2, !dbg !13043
  br label %if.end47, !dbg !13044

if.end47:                                         ; preds = %if.then39, %if.else
  call void @llvm.dbg.declare(metadata i16** %cp48, metadata !13045, metadata !DIExpression()), !dbg !13047
  %34 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13048
  %vc_origin49 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %34, i32 0, i32 8, !dbg !13049
  %35 = load i64, i64* %vc_origin49, align 8, !dbg !13049
  %36 = inttoptr i64 %35 to i16*, !dbg !13050
  store i16* %36, i16** %cp48, align 8, !dbg !13047
  call void @llvm.dbg.declare(metadata i32* %count50, metadata !13051, metadata !DIExpression()), !dbg !13052
  %37 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13053
  %vc_screenbuf_size51 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %37, i32 0, i32 15, !dbg !13054
  %38 = load i32, i32* %vc_screenbuf_size51, align 8, !dbg !13054
  %div52 = udiv i32 %38, 2, !dbg !13055
  store i32 %div52, i32* %count50, align 4, !dbg !13052
  call void @llvm.dbg.declare(metadata i16* %c53, metadata !13056, metadata !DIExpression()), !dbg !13057
  br label %for.cond54, !dbg !13058

for.cond54:                                       ; preds = %for.inc77, %if.end47
  %39 = load i32, i32* %count50, align 4, !dbg !13059
  %cmp55 = icmp sgt i32 %39, 0, !dbg !13062
  br i1 %cmp55, label %for.body57, label %for.end80, !dbg !13063

for.body57:                                       ; preds = %for.cond54
  call void @llvm.dbg.declare(metadata i16* %newc, metadata !13064, metadata !DIExpression()), !dbg !13066
  %40 = load i16*, i16** %cp48, align 8, !dbg !13067
  %41 = load i16, i16* %40, align 2, !dbg !13067
  store i16 %41, i16* %c53, align 2, !dbg !13068
  %42 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13069
  %vc_can_do_color58 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %42, i32 0, i32 36, !dbg !13071
  %bf.load59 = load i16, i16* %vc_can_do_color58, align 8, !dbg !13071
  %bf.lshr60 = lshr i16 %bf.load59, 11, !dbg !13071
  %bf.clear61 = and i16 %bf.lshr60, 1, !dbg !13071
  %bf.cast62 = zext i16 %bf.clear61 to i32, !dbg !13071
  %tobool63 = icmp ne i32 %bf.cast62, 0, !dbg !13069
  br i1 %tobool63, label %if.then64, label %if.else72, !dbg !13072

if.then64:                                        ; preds = %for.body57
  %43 = load i16, i16* %c53, align 2, !dbg !13073
  %conv65 = zext i16 %43 to i32, !dbg !13073
  %and66 = and i32 %conv65, 65280, !dbg !13074
  %shl67 = shl i32 %and66, 1, !dbg !13075
  %44 = load i16, i16* %c53, align 2, !dbg !13076
  %conv68 = zext i16 %44 to i32, !dbg !13076
  %and69 = and i32 %conv68, 255, !dbg !13077
  %or70 = or i32 %shl67, %and69, !dbg !13078
  %conv71 = trunc i32 %or70 to i16, !dbg !13079
  store i16 %conv71, i16* %newc, align 2, !dbg !13080
  br label %if.end76, !dbg !13081

if.else72:                                        ; preds = %for.body57
  %45 = load i16, i16* %c53, align 2, !dbg !13082
  %conv73 = zext i16 %45 to i32, !dbg !13082
  %and74 = and i32 %conv73, -257, !dbg !13083
  %conv75 = trunc i32 %and74 to i16, !dbg !13082
  store i16 %conv75, i16* %newc, align 2, !dbg !13084
  br label %if.end76

if.end76:                                         ; preds = %if.else72, %if.then64
  %46 = load i16, i16* %newc, align 2, !dbg !13085
  %47 = load i16*, i16** %cp48, align 8, !dbg !13085
  store i16 %46, i16* %47, align 2, !dbg !13085
  br label %for.inc77, !dbg !13086

for.inc77:                                        ; preds = %if.end76
  %48 = load i32, i32* %count50, align 4, !dbg !13087
  %dec78 = add i32 %48, -1, !dbg !13087
  store i32 %dec78, i32* %count50, align 4, !dbg !13087
  %49 = load i16*, i16** %cp48, align 8, !dbg !13088
  %incdec.ptr79 = getelementptr i16, i16* %49, i32 1, !dbg !13088
  store i16* %incdec.ptr79, i16** %cp48, align 8, !dbg !13088
  br label %for.cond54, !dbg !13089, !llvm.loop !13090

for.end80:                                        ; preds = %for.cond54
  %50 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13092
  %vc_video_erase_char81 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %50, i32 0, i32 28, !dbg !13093
  %51 = load i16, i16* %vc_video_erase_char81, align 8, !dbg !13093
  store i16 %51, i16* %c53, align 2, !dbg !13094
  %52 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13095
  %vc_can_do_color82 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %52, i32 0, i32 36, !dbg !13097
  %bf.load83 = load i16, i16* %vc_can_do_color82, align 8, !dbg !13097
  %bf.lshr84 = lshr i16 %bf.load83, 11, !dbg !13097
  %bf.clear85 = and i16 %bf.lshr84, 1, !dbg !13097
  %bf.cast86 = zext i16 %bf.clear85 to i32, !dbg !13097
  %tobool87 = icmp ne i32 %bf.cast86, 0, !dbg !13095
  br i1 %tobool87, label %if.then88, label %if.else101, !dbg !13098

if.then88:                                        ; preds = %for.end80
  %53 = load i16, i16* %c53, align 2, !dbg !13099
  %conv89 = zext i16 %53 to i32, !dbg !13099
  %and90 = and i32 %conv89, 65280, !dbg !13101
  %shl91 = shl i32 %and90, 1, !dbg !13102
  %54 = load i16, i16* %c53, align 2, !dbg !13103
  %conv92 = zext i16 %54 to i32, !dbg !13103
  %and93 = and i32 %conv92, 255, !dbg !13104
  %or94 = or i32 %shl91, %and93, !dbg !13105
  %conv95 = trunc i32 %or94 to i16, !dbg !13106
  %55 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13107
  %vc_video_erase_char96 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %55, i32 0, i32 28, !dbg !13108
  store i16 %conv95, i16* %vc_video_erase_char96, align 8, !dbg !13109
  %56 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13110
  %vc_attr97 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %56, i32 0, i32 17, !dbg !13111
  %57 = load i8, i8* %vc_attr97, align 1, !dbg !13112
  %conv98 = zext i8 %57 to i32, !dbg !13112
  %shl99 = shl i32 %conv98, 1, !dbg !13112
  %conv100 = trunc i32 %shl99 to i8, !dbg !13112
  store i8 %conv100, i8* %vc_attr97, align 1, !dbg !13112
  br label %if.end106, !dbg !13113

if.else101:                                       ; preds = %for.end80
  %58 = load i16, i16* %c53, align 2, !dbg !13114
  %conv102 = zext i16 %58 to i32, !dbg !13114
  %and103 = and i32 %conv102, -257, !dbg !13115
  %conv104 = trunc i32 %and103 to i16, !dbg !13114
  %59 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13116
  %vc_video_erase_char105 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %59, i32 0, i32 28, !dbg !13117
  store i16 %conv104, i16* %vc_video_erase_char105, align 8, !dbg !13118
  br label %if.end106

if.end106:                                        ; preds = %if.else101, %if.then88
  br label %if.end107

if.end107:                                        ; preds = %if.end106, %if.end31
  ret void, !dbg !13119
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @fbcon_exit() #1 !dbg !13120 {
entry:
  %info = alloca %struct.fb_info*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %mapped = alloca i32, align 4
  %pending = alloca i32, align 4
  %ops = alloca %struct.fbcon_ops*, align 8
  call void @llvm.dbg.declare(metadata %struct.fb_info** %info, metadata !13121, metadata !DIExpression()), !dbg !13122
  call void @llvm.dbg.declare(metadata i32* %i, metadata !13123, metadata !DIExpression()), !dbg !13124
  call void @llvm.dbg.declare(metadata i32* %j, metadata !13125, metadata !DIExpression()), !dbg !13126
  call void @llvm.dbg.declare(metadata i32* %mapped, metadata !13127, metadata !DIExpression()), !dbg !13128
  store i32 0, i32* %i, align 4, !dbg !13129
  br label %for.cond, !dbg !13129

for.cond:                                         ; preds = %for.inc44, %entry
  %0 = load i32, i32* %i, align 4, !dbg !13131
  %cmp = icmp slt i32 %0, 32, !dbg !13131
  br i1 %cmp, label %for.body, label %for.end46, !dbg !13129

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %i, align 4, !dbg !13133
  %idxprom = sext i32 %1 to i64, !dbg !13133
  %arrayidx = getelementptr [32 x %struct.fb_info*], [32 x %struct.fb_info*]* @registered_fb, i64 0, i64 %idxprom, !dbg !13133
  %2 = load %struct.fb_info*, %struct.fb_info** %arrayidx, align 8, !dbg !13133
  %tobool = icmp ne %struct.fb_info* %2, null, !dbg !13133
  br i1 %tobool, label %if.else, label %if.then, !dbg !13131

if.then:                                          ; preds = %for.body
  br label %if.end43, !dbg !13135

if.else:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata i32* %pending, metadata !13137, metadata !DIExpression()), !dbg !13139
  store i32 0, i32* %pending, align 4, !dbg !13139
  store i32 0, i32* %mapped, align 4, !dbg !13140
  %3 = load i32, i32* %i, align 4, !dbg !13141
  %idxprom1 = sext i32 %3 to i64, !dbg !13142
  %arrayidx2 = getelementptr [32 x %struct.fb_info*], [32 x %struct.fb_info*]* @registered_fb, i64 0, i64 %idxprom1, !dbg !13142
  %4 = load %struct.fb_info*, %struct.fb_info** %arrayidx2, align 8, !dbg !13142
  store %struct.fb_info* %4, %struct.fb_info** %info, align 8, !dbg !13143
  %5 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !13144
  %queue = getelementptr inbounds %struct.fb_info, %struct.fb_info* %5, i32 0, i32 9, !dbg !13146
  %func = getelementptr inbounds %struct.work_struct, %struct.work_struct* %queue, i32 0, i32 2, !dbg !13147
  %6 = load void (%struct.work_struct*)*, void (%struct.work_struct*)** %func, align 8, !dbg !13147
  %tobool3 = icmp ne void (%struct.work_struct*)* %6, null, !dbg !13144
  br i1 %tobool3, label %if.then4, label %if.end, !dbg !13148

if.then4:                                         ; preds = %if.else
  %7 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !13149
  %queue5 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %7, i32 0, i32 9, !dbg !13150
  %call = call zeroext i1 @cancel_work_sync(%struct.work_struct* %queue5) #10, !dbg !13151
  %conv = zext i1 %call to i32, !dbg !13151
  store i32 %conv, i32* %pending, align 4, !dbg !13152
  br label %if.end, !dbg !13153

if.end:                                           ; preds = %if.then4, %if.else
  %8 = load i32, i32* @first_fb_vc, align 4, !dbg !13154
  store i32 %8, i32* %j, align 4, !dbg !13156
  br label %for.cond6, !dbg !13157

for.cond6:                                        ; preds = %for.inc, %if.end
  %9 = load i32, i32* %j, align 4, !dbg !13158
  %10 = load i32, i32* @last_fb_vc, align 4, !dbg !13160
  %cmp7 = icmp sle i32 %9, %10, !dbg !13161
  br i1 %cmp7, label %for.body9, label %for.end, !dbg !13162

for.body9:                                        ; preds = %for.cond6
  %11 = load i32, i32* %j, align 4, !dbg !13163
  %idxprom10 = sext i32 %11 to i64, !dbg !13166
  %arrayidx11 = getelementptr [63 x i8], [63 x i8]* @con2fb_map, i64 0, i64 %idxprom10, !dbg !13166
  %12 = load i8, i8* %arrayidx11, align 1, !dbg !13166
  %conv12 = sext i8 %12 to i32, !dbg !13166
  %13 = load i32, i32* %i, align 4, !dbg !13167
  %cmp13 = icmp eq i32 %conv12, %13, !dbg !13168
  br i1 %cmp13, label %if.then15, label %if.end18, !dbg !13169

if.then15:                                        ; preds = %for.body9
  store i32 1, i32* %mapped, align 4, !dbg !13170
  %14 = load i32, i32* %j, align 4, !dbg !13172
  %idxprom16 = sext i32 %14 to i64, !dbg !13173
  %arrayidx17 = getelementptr [63 x i8], [63 x i8]* @con2fb_map, i64 0, i64 %idxprom16, !dbg !13173
  store i8 -1, i8* %arrayidx17, align 1, !dbg !13174
  br label %if.end18, !dbg !13175

if.end18:                                         ; preds = %if.then15, %for.body9
  br label %for.inc, !dbg !13176

for.inc:                                          ; preds = %if.end18
  %15 = load i32, i32* %j, align 4, !dbg !13177
  %inc = add i32 %15, 1, !dbg !13177
  store i32 %inc, i32* %j, align 4, !dbg !13177
  br label %for.cond6, !dbg !13178, !llvm.loop !13179

for.end:                                          ; preds = %for.cond6
  %16 = load i32, i32* %mapped, align 4, !dbg !13181
  %tobool19 = icmp ne i32 %16, 0, !dbg !13181
  br i1 %tobool19, label %if.then20, label %if.end42, !dbg !13183

if.then20:                                        ; preds = %for.end
  %17 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !13184
  %fbops = getelementptr inbounds %struct.fb_info, %struct.fb_info* %17, i32 0, i32 20, !dbg !13187
  %18 = load %struct.fb_ops*, %struct.fb_ops** %fbops, align 8, !dbg !13187
  %fb_release = getelementptr inbounds %struct.fb_ops, %struct.fb_ops* %18, i32 0, i32 2, !dbg !13188
  %19 = load i32 (%struct.fb_info*, i32)*, i32 (%struct.fb_info*, i32)** %fb_release, align 8, !dbg !13188
  %tobool21 = icmp ne i32 (%struct.fb_info*, i32)* %19, null, !dbg !13184
  br i1 %tobool21, label %if.then22, label %if.end26, !dbg !13189

if.then22:                                        ; preds = %if.then20
  %20 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !13190
  %fbops23 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %20, i32 0, i32 20, !dbg !13191
  %21 = load %struct.fb_ops*, %struct.fb_ops** %fbops23, align 8, !dbg !13191
  %fb_release24 = getelementptr inbounds %struct.fb_ops, %struct.fb_ops* %21, i32 0, i32 2, !dbg !13192
  %22 = load i32 (%struct.fb_info*, i32)*, i32 (%struct.fb_info*, i32)** %fb_release24, align 8, !dbg !13192
  %23 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !13193
  %call25 = call i32 %22(%struct.fb_info* %23, i32 0) #10, !dbg !13190
  br label %if.end26, !dbg !13190

if.end26:                                         ; preds = %if.then22, %if.then20
  %24 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !13194
  %fbops27 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %24, i32 0, i32 20, !dbg !13195
  %25 = load %struct.fb_ops*, %struct.fb_ops** %fbops27, align 8, !dbg !13195
  %owner = getelementptr inbounds %struct.fb_ops, %struct.fb_ops* %25, i32 0, i32 0, !dbg !13196
  %26 = load %struct.module*, %struct.module** %owner, align 8, !dbg !13196
  call void @module_put(%struct.module* %26) #10, !dbg !13197
  %27 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !13198
  %fbcon_par = getelementptr inbounds %struct.fb_info, %struct.fb_info* %27, i32 0, i32 29, !dbg !13200
  %28 = load i8*, i8** %fbcon_par, align 8, !dbg !13200
  %tobool28 = icmp ne i8* %28, null, !dbg !13198
  br i1 %tobool28, label %if.then29, label %if.end33, !dbg !13201

if.then29:                                        ; preds = %if.end26
  call void @llvm.dbg.declare(metadata %struct.fbcon_ops** %ops, metadata !13202, metadata !DIExpression()), !dbg !13204
  %29 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !13205
  %fbcon_par30 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %29, i32 0, i32 29, !dbg !13206
  %30 = load i8*, i8** %fbcon_par30, align 8, !dbg !13206
  %31 = bitcast i8* %30 to %struct.fbcon_ops*, !dbg !13205
  store %struct.fbcon_ops* %31, %struct.fbcon_ops** %ops, align 8, !dbg !13204
  %32 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !13207
  call void @fbcon_del_cursor_timer(%struct.fb_info* %32) #10, !dbg !13208
  %33 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !13209
  %cursor_src = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %33, i32 0, i32 25, !dbg !13210
  %34 = load i8*, i8** %cursor_src, align 8, !dbg !13210
  call void @kfree(i8* %34) #10, !dbg !13211
  %35 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !13212
  %cursor_state = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %35, i32 0, i32 9, !dbg !13213
  %mask = getelementptr inbounds %struct.fb_cursor, %struct.fb_cursor* %cursor_state, i32 0, i32 3, !dbg !13214
  %36 = load i8*, i8** %mask, align 8, !dbg !13214
  call void @kfree(i8* %36) #10, !dbg !13215
  %37 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !13216
  %fbcon_par31 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %37, i32 0, i32 29, !dbg !13217
  %38 = load i8*, i8** %fbcon_par31, align 8, !dbg !13217
  call void @kfree(i8* %38) #10, !dbg !13218
  %39 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !13219
  %fbcon_par32 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %39, i32 0, i32 29, !dbg !13220
  store i8* null, i8** %fbcon_par32, align 8, !dbg !13221
  br label %if.end33, !dbg !13222

if.end33:                                         ; preds = %if.then29, %if.end26
  %40 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !13223
  %queue34 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %40, i32 0, i32 9, !dbg !13225
  %func35 = getelementptr inbounds %struct.work_struct, %struct.work_struct* %queue34, i32 0, i32 2, !dbg !13226
  %41 = load void (%struct.work_struct*)*, void (%struct.work_struct*)** %func35, align 8, !dbg !13226
  %cmp36 = icmp eq void (%struct.work_struct*)* %41, @fb_flashcursor, !dbg !13227
  br i1 %cmp36, label %if.then38, label %if.end41, !dbg !13228

if.then38:                                        ; preds = %if.end33
  %42 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !13229
  %queue39 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %42, i32 0, i32 9, !dbg !13230
  %func40 = getelementptr inbounds %struct.work_struct, %struct.work_struct* %queue39, i32 0, i32 2, !dbg !13231
  store void (%struct.work_struct*)* null, void (%struct.work_struct*)** %func40, align 8, !dbg !13232
  br label %if.end41, !dbg !13229

if.end41:                                         ; preds = %if.then38, %if.end33
  br label %if.end42, !dbg !13233

if.end42:                                         ; preds = %if.end41, %for.end
  br label %if.end43

if.end43:                                         ; preds = %if.end42, %if.then
  br label %for.inc44, !dbg !13133

for.inc44:                                        ; preds = %if.end43
  %43 = load i32, i32* %i, align 4, !dbg !13131
  %inc45 = add i32 %43, 1, !dbg !13131
  store i32 %inc45, i32* %i, align 4, !dbg !13131
  br label %for.cond, !dbg !13131, !llvm.loop !13234

for.end46:                                        ; preds = %for.cond
  ret void, !dbg !13236
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @cancel_work_sync(%struct.work_struct*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @real_y(%struct.fbcon_display* %p, i32 %ypos) #1 !dbg !13237 {
entry:
  %p.addr = alloca %struct.fbcon_display*, align 8
  %ypos.addr = alloca i32, align 4
  %rows = alloca i32, align 4
  store %struct.fbcon_display* %p, %struct.fbcon_display** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fbcon_display** %p.addr, metadata !13240, metadata !DIExpression()), !dbg !13241
  store i32 %ypos, i32* %ypos.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ypos.addr, metadata !13242, metadata !DIExpression()), !dbg !13243
  call void @llvm.dbg.declare(metadata i32* %rows, metadata !13244, metadata !DIExpression()), !dbg !13245
  %0 = load %struct.fbcon_display*, %struct.fbcon_display** %p.addr, align 8, !dbg !13246
  %vrows = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %0, i32 0, i32 5, !dbg !13247
  %1 = load i32, i32* %vrows, align 4, !dbg !13247
  store i32 %1, i32* %rows, align 4, !dbg !13245
  %2 = load %struct.fbcon_display*, %struct.fbcon_display** %p.addr, align 8, !dbg !13248
  %yscroll = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %2, i32 0, i32 4, !dbg !13249
  %3 = load i16, i16* %yscroll, align 8, !dbg !13249
  %conv = sext i16 %3 to i32, !dbg !13248
  %4 = load i32, i32* %ypos.addr, align 4, !dbg !13250
  %add = add i32 %4, %conv, !dbg !13250
  store i32 %add, i32* %ypos.addr, align 4, !dbg !13250
  %5 = load i32, i32* %ypos.addr, align 4, !dbg !13251
  %6 = load i32, i32* %rows, align 4, !dbg !13252
  %cmp = icmp slt i32 %5, %6, !dbg !13253
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !13251

cond.true:                                        ; preds = %entry
  %7 = load i32, i32* %ypos.addr, align 4, !dbg !13254
  br label %cond.end, !dbg !13251

cond.false:                                       ; preds = %entry
  %8 = load i32, i32* %ypos.addr, align 4, !dbg !13255
  %9 = load i32, i32* %rows, align 4, !dbg !13256
  %sub = sub i32 %8, %9, !dbg !13257
  br label %cond.end, !dbg !13251

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %7, %cond.true ], [ %sub, %cond.false ], !dbg !13251
  ret i32 %cond, !dbg !13258
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @fbcon_redraw_blit(%struct.vc_data* %vc, %struct.fb_info* %info, %struct.fbcon_display* %p, i32 %line, i32 %count, i32 %ycount) #1 !dbg !13259 {
entry:
  %vc.addr = alloca %struct.vc_data*, align 8
  %info.addr = alloca %struct.fb_info*, align 8
  %p.addr = alloca %struct.fbcon_display*, align 8
  %line.addr = alloca i32, align 4
  %count.addr = alloca i32, align 4
  %ycount.addr = alloca i32, align 4
  %offset = alloca i32, align 4
  %d = alloca i16*, align 8
  %s = alloca i16*, align 8
  %ops = alloca %struct.fbcon_ops*, align 8
  %start = alloca i16*, align 8
  %le = alloca i16*, align 8
  %c = alloca i16, align 2
  %x = alloca i32, align 4
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !13262, metadata !DIExpression()), !dbg !13263
  store %struct.fb_info* %info, %struct.fb_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fb_info** %info.addr, metadata !13264, metadata !DIExpression()), !dbg !13265
  store %struct.fbcon_display* %p, %struct.fbcon_display** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fbcon_display** %p.addr, metadata !13266, metadata !DIExpression()), !dbg !13267
  store i32 %line, i32* %line.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %line.addr, metadata !13268, metadata !DIExpression()), !dbg !13269
  store i32 %count, i32* %count.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %count.addr, metadata !13270, metadata !DIExpression()), !dbg !13271
  store i32 %ycount, i32* %ycount.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ycount.addr, metadata !13272, metadata !DIExpression()), !dbg !13273
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !13274, metadata !DIExpression()), !dbg !13275
  %0 = load i32, i32* %ycount.addr, align 4, !dbg !13276
  %1 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13277
  %vc_cols = getelementptr inbounds %struct.vc_data, %struct.vc_data* %1, i32 0, i32 4, !dbg !13278
  %2 = load i32, i32* %vc_cols, align 4, !dbg !13278
  %mul = mul i32 %0, %2, !dbg !13279
  store i32 %mul, i32* %offset, align 4, !dbg !13275
  call void @llvm.dbg.declare(metadata i16** %d, metadata !13280, metadata !DIExpression()), !dbg !13281
  %3 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13282
  %vc_origin = getelementptr inbounds %struct.vc_data, %struct.vc_data* %3, i32 0, i32 8, !dbg !13283
  %4 = load i64, i64* %vc_origin, align 8, !dbg !13283
  %5 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13284
  %vc_size_row = getelementptr inbounds %struct.vc_data, %struct.vc_data* %5, i32 0, i32 6, !dbg !13285
  %6 = load i32, i32* %vc_size_row, align 4, !dbg !13285
  %7 = load i32, i32* %line.addr, align 4, !dbg !13286
  %mul1 = mul i32 %6, %7, !dbg !13287
  %conv = zext i32 %mul1 to i64, !dbg !13284
  %add = add i64 %4, %conv, !dbg !13288
  %8 = inttoptr i64 %add to i16*, !dbg !13289
  store i16* %8, i16** %d, align 8, !dbg !13281
  call void @llvm.dbg.declare(metadata i16** %s, metadata !13290, metadata !DIExpression()), !dbg !13291
  %9 = load i16*, i16** %d, align 8, !dbg !13292
  %10 = load i32, i32* %offset, align 4, !dbg !13293
  %idx.ext = sext i32 %10 to i64, !dbg !13294
  %add.ptr = getelementptr i16, i16* %9, i64 %idx.ext, !dbg !13294
  store i16* %add.ptr, i16** %s, align 8, !dbg !13291
  call void @llvm.dbg.declare(metadata %struct.fbcon_ops** %ops, metadata !13295, metadata !DIExpression()), !dbg !13296
  %11 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !13297
  %fbcon_par = getelementptr inbounds %struct.fb_info, %struct.fb_info* %11, i32 0, i32 29, !dbg !13298
  %12 = load i8*, i8** %fbcon_par, align 8, !dbg !13298
  %13 = bitcast i8* %12 to %struct.fbcon_ops*, !dbg !13297
  store %struct.fbcon_ops* %13, %struct.fbcon_ops** %ops, align 8, !dbg !13296
  br label %while.cond, !dbg !13299

while.cond:                                       ; preds = %if.end52, %entry
  %14 = load i32, i32* %count.addr, align 4, !dbg !13300
  %dec = add i32 %14, -1, !dbg !13300
  store i32 %dec, i32* %count.addr, align 4, !dbg !13300
  %tobool = icmp ne i32 %14, 0, !dbg !13299
  br i1 %tobool, label %while.body, label %while.end, !dbg !13299

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i16** %start, metadata !13301, metadata !DIExpression()), !dbg !13303
  %15 = load i16*, i16** %s, align 8, !dbg !13304
  store i16* %15, i16** %start, align 8, !dbg !13303
  call void @llvm.dbg.declare(metadata i16** %le, metadata !13305, metadata !DIExpression()), !dbg !13306
  %16 = load i16*, i16** %s, align 8, !dbg !13307
  %17 = ptrtoint i16* %16 to i64, !dbg !13307
  %18 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13307
  %vc_size_row2 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %18, i32 0, i32 6, !dbg !13307
  %19 = load i32, i32* %vc_size_row2, align 4, !dbg !13307
  %mul3 = mul i32 1, %19, !dbg !13307
  %conv4 = zext i32 %mul3 to i64, !dbg !13307
  %add5 = add i64 %17, %conv4, !dbg !13307
  %20 = inttoptr i64 %add5 to i16*, !dbg !13307
  store i16* %20, i16** %le, align 8, !dbg !13306
  call void @llvm.dbg.declare(metadata i16* %c, metadata !13308, metadata !DIExpression()), !dbg !13309
  call void @llvm.dbg.declare(metadata i32* %x, metadata !13310, metadata !DIExpression()), !dbg !13311
  store i32 0, i32* %x, align 4, !dbg !13311
  br label %do.body, !dbg !13312

do.body:                                          ; preds = %do.cond, %while.body
  %21 = load i16*, i16** %s, align 8, !dbg !13313
  %22 = load i16, i16* %21, align 2, !dbg !13313
  store i16 %22, i16* %c, align 2, !dbg !13315
  %23 = load i16, i16* %c, align 2, !dbg !13316
  %conv6 = zext i16 %23 to i32, !dbg !13316
  %24 = load i16*, i16** %d, align 8, !dbg !13318
  %25 = load i16, i16* %24, align 2, !dbg !13318
  %conv7 = zext i16 %25 to i32, !dbg !13318
  %cmp = icmp eq i32 %conv6, %conv7, !dbg !13319
  br i1 %cmp, label %if.then, label %if.end23, !dbg !13320

if.then:                                          ; preds = %do.body
  %26 = load i16*, i16** %s, align 8, !dbg !13321
  %27 = load i16*, i16** %start, align 8, !dbg !13324
  %cmp9 = icmp ugt i16* %26, %27, !dbg !13325
  br i1 %cmp9, label %if.then11, label %if.else, !dbg !13326

if.then11:                                        ; preds = %if.then
  %28 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !13327
  %bmove = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %28, i32 0, i32 0, !dbg !13329
  %29 = load void (%struct.vc_data*, %struct.fb_info*, i32, i32, i32, i32, i32, i32)*, void (%struct.vc_data*, %struct.fb_info*, i32, i32, i32, i32, i32, i32)** %bmove, align 8, !dbg !13329
  %30 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13330
  %31 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !13331
  %32 = load i32, i32* %line.addr, align 4, !dbg !13332
  %33 = load i32, i32* %ycount.addr, align 4, !dbg !13333
  %add12 = add i32 %32, %33, !dbg !13334
  %34 = load i32, i32* %x, align 4, !dbg !13335
  %35 = load i32, i32* %line.addr, align 4, !dbg !13336
  %36 = load i32, i32* %x, align 4, !dbg !13337
  %37 = load i16*, i16** %s, align 8, !dbg !13338
  %38 = load i16*, i16** %start, align 8, !dbg !13339
  %sub.ptr.lhs.cast = ptrtoint i16* %37 to i64, !dbg !13340
  %sub.ptr.rhs.cast = ptrtoint i16* %38 to i64, !dbg !13340
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !13340
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 2, !dbg !13340
  %conv13 = trunc i64 %sub.ptr.div to i32, !dbg !13338
  call void %29(%struct.vc_data* %30, %struct.fb_info* %31, i32 %add12, i32 %34, i32 %35, i32 %36, i32 1, i32 %conv13) #10, !dbg !13327
  %39 = load i16*, i16** %s, align 8, !dbg !13341
  %40 = load i16*, i16** %start, align 8, !dbg !13342
  %sub.ptr.lhs.cast14 = ptrtoint i16* %39 to i64, !dbg !13343
  %sub.ptr.rhs.cast15 = ptrtoint i16* %40 to i64, !dbg !13343
  %sub.ptr.sub16 = sub i64 %sub.ptr.lhs.cast14, %sub.ptr.rhs.cast15, !dbg !13343
  %sub.ptr.div17 = sdiv exact i64 %sub.ptr.sub16, 2, !dbg !13343
  %add18 = add i64 %sub.ptr.div17, 1, !dbg !13344
  %41 = load i32, i32* %x, align 4, !dbg !13345
  %conv19 = sext i32 %41 to i64, !dbg !13345
  %add20 = add i64 %conv19, %add18, !dbg !13345
  %conv21 = trunc i64 %add20 to i32, !dbg !13345
  store i32 %conv21, i32* %x, align 4, !dbg !13345
  %42 = load i16*, i16** %s, align 8, !dbg !13346
  %add.ptr22 = getelementptr i16, i16* %42, i64 1, !dbg !13347
  store i16* %add.ptr22, i16** %start, align 8, !dbg !13348
  br label %if.end, !dbg !13349

if.else:                                          ; preds = %if.then
  %43 = load i32, i32* %x, align 4, !dbg !13350
  %inc = add i32 %43, 1, !dbg !13350
  store i32 %inc, i32* %x, align 4, !dbg !13350
  %44 = load i16*, i16** %start, align 8, !dbg !13352
  %incdec.ptr = getelementptr i16, i16* %44, i32 1, !dbg !13352
  store i16* %incdec.ptr, i16** %start, align 8, !dbg !13352
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then11
  br label %if.end23, !dbg !13353

if.end23:                                         ; preds = %if.end, %do.body
  %45 = load i16, i16* %c, align 2, !dbg !13354
  %46 = load i16*, i16** %d, align 8, !dbg !13354
  store i16 %45, i16* %46, align 2, !dbg !13354
  call void @console_conditional_schedule() #10, !dbg !13355
  %47 = load i16*, i16** %s, align 8, !dbg !13356
  %incdec.ptr24 = getelementptr i16, i16* %47, i32 1, !dbg !13356
  store i16* %incdec.ptr24, i16** %s, align 8, !dbg !13356
  %48 = load i16*, i16** %d, align 8, !dbg !13357
  %incdec.ptr25 = getelementptr i16, i16* %48, i32 1, !dbg !13357
  store i16* %incdec.ptr25, i16** %d, align 8, !dbg !13357
  br label %do.cond, !dbg !13358

do.cond:                                          ; preds = %if.end23
  %49 = load i16*, i16** %s, align 8, !dbg !13359
  %50 = load i16*, i16** %le, align 8, !dbg !13360
  %cmp26 = icmp ult i16* %49, %50, !dbg !13361
  br i1 %cmp26, label %do.body, label %do.end, !dbg !13358, !llvm.loop !13362

do.end:                                           ; preds = %do.cond
  %51 = load i16*, i16** %s, align 8, !dbg !13364
  %52 = load i16*, i16** %start, align 8, !dbg !13366
  %cmp28 = icmp ugt i16* %51, %52, !dbg !13367
  br i1 %cmp28, label %if.then30, label %if.end38, !dbg !13368

if.then30:                                        ; preds = %do.end
  %53 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !13369
  %bmove31 = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %53, i32 0, i32 0, !dbg !13370
  %54 = load void (%struct.vc_data*, %struct.fb_info*, i32, i32, i32, i32, i32, i32)*, void (%struct.vc_data*, %struct.fb_info*, i32, i32, i32, i32, i32, i32)** %bmove31, align 8, !dbg !13370
  %55 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13371
  %56 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !13372
  %57 = load i32, i32* %line.addr, align 4, !dbg !13373
  %58 = load i32, i32* %ycount.addr, align 4, !dbg !13374
  %add32 = add i32 %57, %58, !dbg !13375
  %59 = load i32, i32* %x, align 4, !dbg !13376
  %60 = load i32, i32* %line.addr, align 4, !dbg !13377
  %61 = load i32, i32* %x, align 4, !dbg !13378
  %62 = load i16*, i16** %s, align 8, !dbg !13379
  %63 = load i16*, i16** %start, align 8, !dbg !13380
  %sub.ptr.lhs.cast33 = ptrtoint i16* %62 to i64, !dbg !13381
  %sub.ptr.rhs.cast34 = ptrtoint i16* %63 to i64, !dbg !13381
  %sub.ptr.sub35 = sub i64 %sub.ptr.lhs.cast33, %sub.ptr.rhs.cast34, !dbg !13381
  %sub.ptr.div36 = sdiv exact i64 %sub.ptr.sub35, 2, !dbg !13381
  %conv37 = trunc i64 %sub.ptr.div36 to i32, !dbg !13379
  call void %54(%struct.vc_data* %55, %struct.fb_info* %56, i32 %add32, i32 %59, i32 %60, i32 %61, i32 1, i32 %conv37) #10, !dbg !13369
  br label %if.end38, !dbg !13369

if.end38:                                         ; preds = %if.then30, %do.end
  call void @console_conditional_schedule() #10, !dbg !13382
  %64 = load i32, i32* %ycount.addr, align 4, !dbg !13383
  %cmp39 = icmp sgt i32 %64, 0, !dbg !13385
  br i1 %cmp39, label %if.then41, label %if.else43, !dbg !13386

if.then41:                                        ; preds = %if.end38
  %65 = load i32, i32* %line.addr, align 4, !dbg !13387
  %inc42 = add i32 %65, 1, !dbg !13387
  store i32 %inc42, i32* %line.addr, align 4, !dbg !13387
  br label %if.end52, !dbg !13388

if.else43:                                        ; preds = %if.end38
  %66 = load i32, i32* %line.addr, align 4, !dbg !13389
  %dec44 = add i32 %66, -1, !dbg !13389
  store i32 %dec44, i32* %line.addr, align 4, !dbg !13389
  %67 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13391
  %vc_size_row45 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %67, i32 0, i32 6, !dbg !13392
  %68 = load i32, i32* %vc_size_row45, align 4, !dbg !13392
  %69 = load i16*, i16** %s, align 8, !dbg !13393
  %idx.ext46 = zext i32 %68 to i64, !dbg !13393
  %idx.neg = sub i64 0, %idx.ext46, !dbg !13393
  %add.ptr47 = getelementptr i16, i16* %69, i64 %idx.neg, !dbg !13393
  store i16* %add.ptr47, i16** %s, align 8, !dbg !13393
  %70 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13394
  %vc_size_row48 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %70, i32 0, i32 6, !dbg !13395
  %71 = load i32, i32* %vc_size_row48, align 4, !dbg !13395
  %72 = load i16*, i16** %d, align 8, !dbg !13396
  %idx.ext49 = zext i32 %71 to i64, !dbg !13396
  %idx.neg50 = sub i64 0, %idx.ext49, !dbg !13396
  %add.ptr51 = getelementptr i16, i16* %72, i64 %idx.neg50, !dbg !13396
  store i16* %add.ptr51, i16** %d, align 8, !dbg !13396
  br label %if.end52

if.end52:                                         ; preds = %if.else43, %if.then41
  br label %while.cond, !dbg !13299, !llvm.loop !13397

while.end:                                        ; preds = %while.cond
  ret void, !dbg !13399
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @fbcon_bmove(%struct.vc_data* %vc, i32 %sy, i32 %sx, i32 %dy, i32 %dx, i32 %height, i32 %width) #1 !dbg !13400 {
entry:
  %vc.addr = alloca %struct.vc_data*, align 8
  %sy.addr = alloca i32, align 4
  %sx.addr = alloca i32, align 4
  %dy.addr = alloca i32, align 4
  %dx.addr = alloca i32, align 4
  %height.addr = alloca i32, align 4
  %width.addr = alloca i32, align 4
  %info = alloca %struct.fb_info*, align 8
  %p = alloca %struct.fbcon_display*, align 8
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !13403, metadata !DIExpression()), !dbg !13404
  store i32 %sy, i32* %sy.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sy.addr, metadata !13405, metadata !DIExpression()), !dbg !13406
  store i32 %sx, i32* %sx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sx.addr, metadata !13407, metadata !DIExpression()), !dbg !13408
  store i32 %dy, i32* %dy.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dy.addr, metadata !13409, metadata !DIExpression()), !dbg !13410
  store i32 %dx, i32* %dx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dx.addr, metadata !13411, metadata !DIExpression()), !dbg !13412
  store i32 %height, i32* %height.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %height.addr, metadata !13413, metadata !DIExpression()), !dbg !13414
  store i32 %width, i32* %width.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %width.addr, metadata !13415, metadata !DIExpression()), !dbg !13416
  call void @llvm.dbg.declare(metadata %struct.fb_info** %info, metadata !13417, metadata !DIExpression()), !dbg !13418
  %0 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13419
  %vc_num = getelementptr inbounds %struct.vc_data, %struct.vc_data* %0, i32 0, i32 3, !dbg !13420
  %1 = load i16, i16* %vc_num, align 8, !dbg !13420
  %idxprom = zext i16 %1 to i64, !dbg !13421
  %arrayidx = getelementptr [63 x i8], [63 x i8]* @con2fb_map, i64 0, i64 %idxprom, !dbg !13421
  %2 = load i8, i8* %arrayidx, align 1, !dbg !13421
  %idxprom1 = sext i8 %2 to i64, !dbg !13422
  %arrayidx2 = getelementptr [32 x %struct.fb_info*], [32 x %struct.fb_info*]* @registered_fb, i64 0, i64 %idxprom1, !dbg !13422
  %3 = load %struct.fb_info*, %struct.fb_info** %arrayidx2, align 8, !dbg !13422
  store %struct.fb_info* %3, %struct.fb_info** %info, align 8, !dbg !13418
  call void @llvm.dbg.declare(metadata %struct.fbcon_display** %p, metadata !13423, metadata !DIExpression()), !dbg !13424
  %4 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13425
  %vc_num3 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %4, i32 0, i32 3, !dbg !13426
  %5 = load i16, i16* %vc_num3, align 8, !dbg !13426
  %idxprom4 = zext i16 %5 to i64, !dbg !13427
  %arrayidx5 = getelementptr [63 x %struct.fbcon_display], [63 x %struct.fbcon_display]* @fb_display, i64 0, i64 %idxprom4, !dbg !13427
  store %struct.fbcon_display* %arrayidx5, %struct.fbcon_display** %p, align 8, !dbg !13424
  %6 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13428
  %7 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !13430
  %call = call i32 @fbcon_is_inactive(%struct.vc_data* %6, %struct.fb_info* %7) #10, !dbg !13431
  %tobool = icmp ne i32 %call, 0, !dbg !13431
  br i1 %tobool, label %if.then, label %if.end, !dbg !13432

if.then:                                          ; preds = %entry
  br label %return, !dbg !13433

if.end:                                           ; preds = %entry
  %8 = load i32, i32* %width.addr, align 4, !dbg !13434
  %tobool6 = icmp ne i32 %8, 0, !dbg !13434
  br i1 %tobool6, label %lor.lhs.false, label %if.then8, !dbg !13436

lor.lhs.false:                                    ; preds = %if.end
  %9 = load i32, i32* %height.addr, align 4, !dbg !13437
  %tobool7 = icmp ne i32 %9, 0, !dbg !13437
  br i1 %tobool7, label %if.end9, label %if.then8, !dbg !13438

if.then8:                                         ; preds = %lor.lhs.false, %if.end
  br label %return, !dbg !13439

if.end9:                                          ; preds = %lor.lhs.false
  %10 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13440
  %11 = load %struct.fbcon_display*, %struct.fbcon_display** %p, align 8, !dbg !13441
  %12 = load i32, i32* %sy.addr, align 4, !dbg !13442
  %13 = load i32, i32* %sx.addr, align 4, !dbg !13443
  %14 = load i32, i32* %dy.addr, align 4, !dbg !13444
  %15 = load i32, i32* %dx.addr, align 4, !dbg !13445
  %16 = load i32, i32* %height.addr, align 4, !dbg !13446
  %17 = load i32, i32* %width.addr, align 4, !dbg !13447
  %18 = load %struct.fbcon_display*, %struct.fbcon_display** %p, align 8, !dbg !13448
  %vrows = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %18, i32 0, i32 5, !dbg !13449
  %19 = load i32, i32* %vrows, align 4, !dbg !13449
  %20 = load %struct.fbcon_display*, %struct.fbcon_display** %p, align 8, !dbg !13450
  %yscroll = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %20, i32 0, i32 4, !dbg !13451
  %21 = load i16, i16* %yscroll, align 8, !dbg !13451
  %conv = sext i16 %21 to i32, !dbg !13450
  %sub = sub i32 %19, %conv, !dbg !13452
  call void @fbcon_bmove_rec(%struct.vc_data* %10, %struct.fbcon_display* %11, i32 %12, i32 %13, i32 %14, i32 %15, i32 %16, i32 %17, i32 %sub) #10, !dbg !13453
  br label %return, !dbg !13454

return:                                           ; preds = %if.end9, %if.then8, %if.then
  ret void, !dbg !13454
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ywrap_up(%struct.vc_data* %vc, i32 %count) #1 !dbg !13455 {
entry:
  %vc.addr = alloca %struct.vc_data*, align 8
  %count.addr = alloca i32, align 4
  %info = alloca %struct.fb_info*, align 8
  %ops = alloca %struct.fbcon_ops*, align 8
  %p = alloca %struct.fbcon_display*, align 8
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !13456, metadata !DIExpression()), !dbg !13457
  store i32 %count, i32* %count.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %count.addr, metadata !13458, metadata !DIExpression()), !dbg !13459
  call void @llvm.dbg.declare(metadata %struct.fb_info** %info, metadata !13460, metadata !DIExpression()), !dbg !13461
  %0 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13462
  %vc_num = getelementptr inbounds %struct.vc_data, %struct.vc_data* %0, i32 0, i32 3, !dbg !13463
  %1 = load i16, i16* %vc_num, align 8, !dbg !13463
  %idxprom = zext i16 %1 to i64, !dbg !13464
  %arrayidx = getelementptr [63 x i8], [63 x i8]* @con2fb_map, i64 0, i64 %idxprom, !dbg !13464
  %2 = load i8, i8* %arrayidx, align 1, !dbg !13464
  %idxprom1 = sext i8 %2 to i64, !dbg !13465
  %arrayidx2 = getelementptr [32 x %struct.fb_info*], [32 x %struct.fb_info*]* @registered_fb, i64 0, i64 %idxprom1, !dbg !13465
  %3 = load %struct.fb_info*, %struct.fb_info** %arrayidx2, align 8, !dbg !13465
  store %struct.fb_info* %3, %struct.fb_info** %info, align 8, !dbg !13461
  call void @llvm.dbg.declare(metadata %struct.fbcon_ops** %ops, metadata !13466, metadata !DIExpression()), !dbg !13467
  %4 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !13468
  %fbcon_par = getelementptr inbounds %struct.fb_info, %struct.fb_info* %4, i32 0, i32 29, !dbg !13469
  %5 = load i8*, i8** %fbcon_par, align 8, !dbg !13469
  %6 = bitcast i8* %5 to %struct.fbcon_ops*, !dbg !13468
  store %struct.fbcon_ops* %6, %struct.fbcon_ops** %ops, align 8, !dbg !13467
  call void @llvm.dbg.declare(metadata %struct.fbcon_display** %p, metadata !13470, metadata !DIExpression()), !dbg !13471
  %7 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13472
  %vc_num3 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %7, i32 0, i32 3, !dbg !13473
  %8 = load i16, i16* %vc_num3, align 8, !dbg !13473
  %idxprom4 = zext i16 %8 to i64, !dbg !13474
  %arrayidx5 = getelementptr [63 x %struct.fbcon_display], [63 x %struct.fbcon_display]* @fb_display, i64 0, i64 %idxprom4, !dbg !13474
  store %struct.fbcon_display* %arrayidx5, %struct.fbcon_display** %p, align 8, !dbg !13471
  %9 = load i32, i32* %count.addr, align 4, !dbg !13475
  %10 = load %struct.fbcon_display*, %struct.fbcon_display** %p, align 8, !dbg !13476
  %yscroll = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %10, i32 0, i32 4, !dbg !13477
  %11 = load i16, i16* %yscroll, align 8, !dbg !13478
  %conv = sext i16 %11 to i32, !dbg !13478
  %add = add i32 %conv, %9, !dbg !13478
  %conv6 = trunc i32 %add to i16, !dbg !13478
  store i16 %conv6, i16* %yscroll, align 8, !dbg !13478
  %12 = load %struct.fbcon_display*, %struct.fbcon_display** %p, align 8, !dbg !13479
  %yscroll7 = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %12, i32 0, i32 4, !dbg !13481
  %13 = load i16, i16* %yscroll7, align 8, !dbg !13481
  %conv8 = sext i16 %13 to i32, !dbg !13479
  %14 = load %struct.fbcon_display*, %struct.fbcon_display** %p, align 8, !dbg !13482
  %vrows = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %14, i32 0, i32 5, !dbg !13483
  %15 = load i32, i32* %vrows, align 4, !dbg !13483
  %cmp = icmp sge i32 %conv8, %15, !dbg !13484
  br i1 %cmp, label %if.then, label %if.end, !dbg !13485

if.then:                                          ; preds = %entry
  %16 = load %struct.fbcon_display*, %struct.fbcon_display** %p, align 8, !dbg !13486
  %vrows10 = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %16, i32 0, i32 5, !dbg !13487
  %17 = load i32, i32* %vrows10, align 4, !dbg !13487
  %18 = load %struct.fbcon_display*, %struct.fbcon_display** %p, align 8, !dbg !13488
  %yscroll11 = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %18, i32 0, i32 4, !dbg !13489
  %19 = load i16, i16* %yscroll11, align 8, !dbg !13490
  %conv12 = sext i16 %19 to i32, !dbg !13490
  %sub = sub i32 %conv12, %17, !dbg !13490
  %conv13 = trunc i32 %sub to i16, !dbg !13490
  store i16 %conv13, i16* %yscroll11, align 8, !dbg !13490
  br label %if.end, !dbg !13488

if.end:                                           ; preds = %if.then, %entry
  %20 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !13491
  %var = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %20, i32 0, i32 7, !dbg !13492
  %xoffset = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %var, i32 0, i32 4, !dbg !13493
  store i32 0, i32* %xoffset, align 8, !dbg !13494
  %21 = load %struct.fbcon_display*, %struct.fbcon_display** %p, align 8, !dbg !13495
  %yscroll14 = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %21, i32 0, i32 4, !dbg !13496
  %22 = load i16, i16* %yscroll14, align 8, !dbg !13496
  %conv15 = sext i16 %22 to i32, !dbg !13495
  %23 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13497
  %vc_font = getelementptr inbounds %struct.vc_data, %struct.vc_data* %23, i32 0, i32 27, !dbg !13498
  %height = getelementptr inbounds %struct.console_font, %struct.console_font* %vc_font, i32 0, i32 1, !dbg !13499
  %24 = load i32, i32* %height, align 4, !dbg !13499
  %mul = mul i32 %conv15, %24, !dbg !13500
  %25 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !13501
  %var16 = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %25, i32 0, i32 7, !dbg !13502
  %yoffset = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %var16, i32 0, i32 5, !dbg !13503
  store i32 %mul, i32* %yoffset, align 4, !dbg !13504
  %26 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !13505
  %var17 = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %26, i32 0, i32 7, !dbg !13506
  %vmode = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %var17, i32 0, i32 25, !dbg !13507
  %27 = load i32, i32* %vmode, align 4, !dbg !13508
  %or = or i32 %27, 256, !dbg !13508
  store i32 %or, i32* %vmode, align 4, !dbg !13508
  %28 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !13509
  %update_start = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %28, i32 0, i32 5, !dbg !13510
  %29 = load i32 (%struct.fb_info*)*, i32 (%struct.fb_info*)** %update_start, align 8, !dbg !13510
  %30 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !13511
  %call = call i32 %29(%struct.fb_info* %30) #10, !dbg !13509
  %31 = load i32, i32* %count.addr, align 4, !dbg !13512
  %32 = load i32, i32* @scrollback_max, align 4, !dbg !13513
  %add18 = add i32 %32, %31, !dbg !13513
  store i32 %add18, i32* @scrollback_max, align 4, !dbg !13513
  %33 = load i32, i32* @scrollback_max, align 4, !dbg !13514
  %34 = load i32, i32* @scrollback_phys_max, align 4, !dbg !13516
  %cmp19 = icmp sgt i32 %33, %34, !dbg !13517
  br i1 %cmp19, label %if.then21, label %if.end22, !dbg !13518

if.then21:                                        ; preds = %if.end
  %35 = load i32, i32* @scrollback_phys_max, align 4, !dbg !13519
  store i32 %35, i32* @scrollback_max, align 4, !dbg !13520
  br label %if.end22, !dbg !13521

if.end22:                                         ; preds = %if.then21, %if.end
  store i32 0, i32* @scrollback_current, align 4, !dbg !13522
  ret void, !dbg !13523
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @fbcon_redraw_move(%struct.vc_data* %vc, %struct.fbcon_display* %p, i32 %line, i32 %count, i32 %dy) #1 !dbg !13524 {
entry:
  %vc.addr = alloca %struct.vc_data*, align 8
  %p.addr = alloca %struct.fbcon_display*, align 8
  %line.addr = alloca i32, align 4
  %count.addr = alloca i32, align 4
  %dy.addr = alloca i32, align 4
  %s = alloca i16*, align 8
  %start = alloca i16*, align 8
  %le = alloca i16*, align 8
  %c = alloca i16, align 2
  %x = alloca i32, align 4
  %attr = alloca i16, align 2
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !13527, metadata !DIExpression()), !dbg !13528
  store %struct.fbcon_display* %p, %struct.fbcon_display** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fbcon_display** %p.addr, metadata !13529, metadata !DIExpression()), !dbg !13530
  store i32 %line, i32* %line.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %line.addr, metadata !13531, metadata !DIExpression()), !dbg !13532
  store i32 %count, i32* %count.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %count.addr, metadata !13533, metadata !DIExpression()), !dbg !13534
  store i32 %dy, i32* %dy.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dy.addr, metadata !13535, metadata !DIExpression()), !dbg !13536
  call void @llvm.dbg.declare(metadata i16** %s, metadata !13537, metadata !DIExpression()), !dbg !13538
  %0 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13539
  %vc_origin = getelementptr inbounds %struct.vc_data, %struct.vc_data* %0, i32 0, i32 8, !dbg !13540
  %1 = load i64, i64* %vc_origin, align 8, !dbg !13540
  %2 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13541
  %vc_size_row = getelementptr inbounds %struct.vc_data, %struct.vc_data* %2, i32 0, i32 6, !dbg !13542
  %3 = load i32, i32* %vc_size_row, align 4, !dbg !13542
  %4 = load i32, i32* %line.addr, align 4, !dbg !13543
  %mul = mul i32 %3, %4, !dbg !13544
  %conv = zext i32 %mul to i64, !dbg !13541
  %add = add i64 %1, %conv, !dbg !13545
  %5 = inttoptr i64 %add to i16*, !dbg !13546
  store i16* %5, i16** %s, align 8, !dbg !13538
  br label %while.cond, !dbg !13547

while.cond:                                       ; preds = %if.end33, %entry
  %6 = load i32, i32* %count.addr, align 4, !dbg !13548
  %dec = add i32 %6, -1, !dbg !13548
  store i32 %dec, i32* %count.addr, align 4, !dbg !13548
  %tobool = icmp ne i32 %6, 0, !dbg !13547
  br i1 %tobool, label %while.body, label %while.end, !dbg !13547

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i16** %start, metadata !13549, metadata !DIExpression()), !dbg !13551
  %7 = load i16*, i16** %s, align 8, !dbg !13552
  store i16* %7, i16** %start, align 8, !dbg !13551
  call void @llvm.dbg.declare(metadata i16** %le, metadata !13553, metadata !DIExpression()), !dbg !13554
  %8 = load i16*, i16** %s, align 8, !dbg !13555
  %9 = ptrtoint i16* %8 to i64, !dbg !13555
  %10 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13555
  %vc_size_row1 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %10, i32 0, i32 6, !dbg !13555
  %11 = load i32, i32* %vc_size_row1, align 4, !dbg !13555
  %mul2 = mul i32 1, %11, !dbg !13555
  %conv3 = zext i32 %mul2 to i64, !dbg !13555
  %add4 = add i64 %9, %conv3, !dbg !13555
  %12 = inttoptr i64 %add4 to i16*, !dbg !13555
  store i16* %12, i16** %le, align 8, !dbg !13554
  call void @llvm.dbg.declare(metadata i16* %c, metadata !13556, metadata !DIExpression()), !dbg !13557
  call void @llvm.dbg.declare(metadata i32* %x, metadata !13558, metadata !DIExpression()), !dbg !13559
  store i32 0, i32* %x, align 4, !dbg !13559
  call void @llvm.dbg.declare(metadata i16* %attr, metadata !13560, metadata !DIExpression()), !dbg !13561
  store i16 1, i16* %attr, align 2, !dbg !13561
  br label %do.body, !dbg !13562

do.body:                                          ; preds = %do.cond, %while.body
  %13 = load i16*, i16** %s, align 8, !dbg !13563
  %14 = load i16, i16* %13, align 2, !dbg !13563
  store i16 %14, i16* %c, align 2, !dbg !13565
  %15 = load i16, i16* %attr, align 2, !dbg !13566
  %conv5 = zext i16 %15 to i32, !dbg !13566
  %16 = load i16, i16* %c, align 2, !dbg !13568
  %conv6 = zext i16 %16 to i32, !dbg !13568
  %and = and i32 %conv6, 65280, !dbg !13569
  %cmp = icmp ne i32 %conv5, %and, !dbg !13570
  br i1 %cmp, label %if.then, label %if.end22, !dbg !13571

if.then:                                          ; preds = %do.body
  %17 = load i16, i16* %c, align 2, !dbg !13572
  %conv8 = zext i16 %17 to i32, !dbg !13572
  %and9 = and i32 %conv8, 65280, !dbg !13574
  %conv10 = trunc i32 %and9 to i16, !dbg !13572
  store i16 %conv10, i16* %attr, align 2, !dbg !13575
  %18 = load i16*, i16** %s, align 8, !dbg !13576
  %19 = load i16*, i16** %start, align 8, !dbg !13578
  %cmp11 = icmp ugt i16* %18, %19, !dbg !13579
  br i1 %cmp11, label %if.then13, label %if.end, !dbg !13580

if.then13:                                        ; preds = %if.then
  %20 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13581
  %21 = load i16*, i16** %start, align 8, !dbg !13583
  %22 = load i16*, i16** %s, align 8, !dbg !13584
  %23 = load i16*, i16** %start, align 8, !dbg !13585
  %sub.ptr.lhs.cast = ptrtoint i16* %22 to i64, !dbg !13586
  %sub.ptr.rhs.cast = ptrtoint i16* %23 to i64, !dbg !13586
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !13586
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 2, !dbg !13586
  %conv14 = trunc i64 %sub.ptr.div to i32, !dbg !13584
  %24 = load i32, i32* %dy.addr, align 4, !dbg !13587
  %25 = load i32, i32* %x, align 4, !dbg !13588
  call void @fbcon_putcs(%struct.vc_data* %20, i16* %21, i32 %conv14, i32 %24, i32 %25) #10, !dbg !13589
  %26 = load i16*, i16** %s, align 8, !dbg !13590
  %27 = load i16*, i16** %start, align 8, !dbg !13591
  %sub.ptr.lhs.cast15 = ptrtoint i16* %26 to i64, !dbg !13592
  %sub.ptr.rhs.cast16 = ptrtoint i16* %27 to i64, !dbg !13592
  %sub.ptr.sub17 = sub i64 %sub.ptr.lhs.cast15, %sub.ptr.rhs.cast16, !dbg !13592
  %sub.ptr.div18 = sdiv exact i64 %sub.ptr.sub17, 2, !dbg !13592
  %28 = load i32, i32* %x, align 4, !dbg !13593
  %conv19 = sext i32 %28 to i64, !dbg !13593
  %add20 = add i64 %conv19, %sub.ptr.div18, !dbg !13593
  %conv21 = trunc i64 %add20 to i32, !dbg !13593
  store i32 %conv21, i32* %x, align 4, !dbg !13593
  %29 = load i16*, i16** %s, align 8, !dbg !13594
  store i16* %29, i16** %start, align 8, !dbg !13595
  br label %if.end, !dbg !13596

if.end:                                           ; preds = %if.then13, %if.then
  br label %if.end22, !dbg !13597

if.end22:                                         ; preds = %if.end, %do.body
  call void @console_conditional_schedule() #10, !dbg !13598
  %30 = load i16*, i16** %s, align 8, !dbg !13599
  %incdec.ptr = getelementptr i16, i16* %30, i32 1, !dbg !13599
  store i16* %incdec.ptr, i16** %s, align 8, !dbg !13599
  br label %do.cond, !dbg !13600

do.cond:                                          ; preds = %if.end22
  %31 = load i16*, i16** %s, align 8, !dbg !13601
  %32 = load i16*, i16** %le, align 8, !dbg !13602
  %cmp23 = icmp ult i16* %31, %32, !dbg !13603
  br i1 %cmp23, label %do.body, label %do.end, !dbg !13600, !llvm.loop !13604

do.end:                                           ; preds = %do.cond
  %33 = load i16*, i16** %s, align 8, !dbg !13606
  %34 = load i16*, i16** %start, align 8, !dbg !13608
  %cmp25 = icmp ugt i16* %33, %34, !dbg !13609
  br i1 %cmp25, label %if.then27, label %if.end33, !dbg !13610

if.then27:                                        ; preds = %do.end
  %35 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13611
  %36 = load i16*, i16** %start, align 8, !dbg !13612
  %37 = load i16*, i16** %s, align 8, !dbg !13613
  %38 = load i16*, i16** %start, align 8, !dbg !13614
  %sub.ptr.lhs.cast28 = ptrtoint i16* %37 to i64, !dbg !13615
  %sub.ptr.rhs.cast29 = ptrtoint i16* %38 to i64, !dbg !13615
  %sub.ptr.sub30 = sub i64 %sub.ptr.lhs.cast28, %sub.ptr.rhs.cast29, !dbg !13615
  %sub.ptr.div31 = sdiv exact i64 %sub.ptr.sub30, 2, !dbg !13615
  %conv32 = trunc i64 %sub.ptr.div31 to i32, !dbg !13613
  %39 = load i32, i32* %dy.addr, align 4, !dbg !13616
  %40 = load i32, i32* %x, align 4, !dbg !13617
  call void @fbcon_putcs(%struct.vc_data* %35, i16* %36, i32 %conv32, i32 %39, i32 %40) #10, !dbg !13618
  br label %if.end33, !dbg !13618

if.end33:                                         ; preds = %if.then27, %do.end
  call void @console_conditional_schedule() #10, !dbg !13619
  %41 = load i32, i32* %dy.addr, align 4, !dbg !13620
  %inc = add i32 %41, 1, !dbg !13620
  store i32 %inc, i32* %dy.addr, align 4, !dbg !13620
  br label %while.cond, !dbg !13547, !llvm.loop !13621

while.end:                                        ; preds = %while.cond
  ret void, !dbg !13623
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ypan_up_redraw(%struct.vc_data* %vc, i32 %t, i32 %count) #1 !dbg !13624 {
entry:
  %vc.addr = alloca %struct.vc_data*, align 8
  %t.addr = alloca i32, align 4
  %count.addr = alloca i32, align 4
  %info = alloca %struct.fb_info*, align 8
  %ops = alloca %struct.fbcon_ops*, align 8
  %p = alloca %struct.fbcon_display*, align 8
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !13627, metadata !DIExpression()), !dbg !13628
  store i32 %t, i32* %t.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %t.addr, metadata !13629, metadata !DIExpression()), !dbg !13630
  store i32 %count, i32* %count.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %count.addr, metadata !13631, metadata !DIExpression()), !dbg !13632
  call void @llvm.dbg.declare(metadata %struct.fb_info** %info, metadata !13633, metadata !DIExpression()), !dbg !13634
  %0 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13635
  %vc_num = getelementptr inbounds %struct.vc_data, %struct.vc_data* %0, i32 0, i32 3, !dbg !13636
  %1 = load i16, i16* %vc_num, align 8, !dbg !13636
  %idxprom = zext i16 %1 to i64, !dbg !13637
  %arrayidx = getelementptr [63 x i8], [63 x i8]* @con2fb_map, i64 0, i64 %idxprom, !dbg !13637
  %2 = load i8, i8* %arrayidx, align 1, !dbg !13637
  %idxprom1 = sext i8 %2 to i64, !dbg !13638
  %arrayidx2 = getelementptr [32 x %struct.fb_info*], [32 x %struct.fb_info*]* @registered_fb, i64 0, i64 %idxprom1, !dbg !13638
  %3 = load %struct.fb_info*, %struct.fb_info** %arrayidx2, align 8, !dbg !13638
  store %struct.fb_info* %3, %struct.fb_info** %info, align 8, !dbg !13634
  call void @llvm.dbg.declare(metadata %struct.fbcon_ops** %ops, metadata !13639, metadata !DIExpression()), !dbg !13640
  %4 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !13641
  %fbcon_par = getelementptr inbounds %struct.fb_info, %struct.fb_info* %4, i32 0, i32 29, !dbg !13642
  %5 = load i8*, i8** %fbcon_par, align 8, !dbg !13642
  %6 = bitcast i8* %5 to %struct.fbcon_ops*, !dbg !13641
  store %struct.fbcon_ops* %6, %struct.fbcon_ops** %ops, align 8, !dbg !13640
  call void @llvm.dbg.declare(metadata %struct.fbcon_display** %p, metadata !13643, metadata !DIExpression()), !dbg !13644
  %7 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13645
  %vc_num3 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %7, i32 0, i32 3, !dbg !13646
  %8 = load i16, i16* %vc_num3, align 8, !dbg !13646
  %idxprom4 = zext i16 %8 to i64, !dbg !13647
  %arrayidx5 = getelementptr [63 x %struct.fbcon_display], [63 x %struct.fbcon_display]* @fb_display, i64 0, i64 %idxprom4, !dbg !13647
  store %struct.fbcon_display* %arrayidx5, %struct.fbcon_display** %p, align 8, !dbg !13644
  %9 = load i32, i32* %count.addr, align 4, !dbg !13648
  %10 = load %struct.fbcon_display*, %struct.fbcon_display** %p, align 8, !dbg !13649
  %yscroll = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %10, i32 0, i32 4, !dbg !13650
  %11 = load i16, i16* %yscroll, align 8, !dbg !13651
  %conv = sext i16 %11 to i32, !dbg !13651
  %add = add i32 %conv, %9, !dbg !13651
  %conv6 = trunc i32 %add to i16, !dbg !13651
  store i16 %conv6, i16* %yscroll, align 8, !dbg !13651
  %12 = load %struct.fbcon_display*, %struct.fbcon_display** %p, align 8, !dbg !13652
  %yscroll7 = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %12, i32 0, i32 4, !dbg !13654
  %13 = load i16, i16* %yscroll7, align 8, !dbg !13654
  %conv8 = sext i16 %13 to i32, !dbg !13652
  %14 = load %struct.fbcon_display*, %struct.fbcon_display** %p, align 8, !dbg !13655
  %vrows = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %14, i32 0, i32 5, !dbg !13656
  %15 = load i32, i32* %vrows, align 4, !dbg !13656
  %16 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13657
  %vc_rows = getelementptr inbounds %struct.vc_data, %struct.vc_data* %16, i32 0, i32 5, !dbg !13658
  %17 = load i32, i32* %vc_rows, align 8, !dbg !13658
  %sub = sub i32 %15, %17, !dbg !13659
  %cmp = icmp ugt i32 %conv8, %sub, !dbg !13660
  br i1 %cmp, label %if.then, label %if.end, !dbg !13661

if.then:                                          ; preds = %entry
  %18 = load %struct.fbcon_display*, %struct.fbcon_display** %p, align 8, !dbg !13662
  %vrows10 = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %18, i32 0, i32 5, !dbg !13664
  %19 = load i32, i32* %vrows10, align 4, !dbg !13664
  %20 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13665
  %vc_rows11 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %20, i32 0, i32 5, !dbg !13666
  %21 = load i32, i32* %vc_rows11, align 8, !dbg !13666
  %sub12 = sub i32 %19, %21, !dbg !13667
  %22 = load %struct.fbcon_display*, %struct.fbcon_display** %p, align 8, !dbg !13668
  %yscroll13 = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %22, i32 0, i32 4, !dbg !13669
  %23 = load i16, i16* %yscroll13, align 8, !dbg !13670
  %conv14 = sext i16 %23 to i32, !dbg !13670
  %sub15 = sub i32 %conv14, %sub12, !dbg !13670
  %conv16 = trunc i32 %sub15 to i16, !dbg !13670
  store i16 %conv16, i16* %yscroll13, align 8, !dbg !13670
  %24 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13671
  %25 = load %struct.fbcon_display*, %struct.fbcon_display** %p, align 8, !dbg !13672
  %26 = load i32, i32* %t.addr, align 4, !dbg !13673
  %27 = load i32, i32* %count.addr, align 4, !dbg !13674
  %add17 = add i32 %26, %27, !dbg !13675
  %28 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13676
  %vc_rows18 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %28, i32 0, i32 5, !dbg !13677
  %29 = load i32, i32* %vc_rows18, align 8, !dbg !13677
  %30 = load i32, i32* %count.addr, align 4, !dbg !13678
  %sub19 = sub i32 %29, %30, !dbg !13679
  %31 = load i32, i32* %t.addr, align 4, !dbg !13680
  call void @fbcon_redraw_move(%struct.vc_data* %24, %struct.fbcon_display* %25, i32 %add17, i32 %sub19, i32 %31) #10, !dbg !13681
  br label %if.end, !dbg !13682

if.end:                                           ; preds = %if.then, %entry
  %32 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !13683
  %var = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %32, i32 0, i32 7, !dbg !13684
  %xoffset = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %var, i32 0, i32 4, !dbg !13685
  store i32 0, i32* %xoffset, align 8, !dbg !13686
  %33 = load %struct.fbcon_display*, %struct.fbcon_display** %p, align 8, !dbg !13687
  %yscroll20 = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %33, i32 0, i32 4, !dbg !13688
  %34 = load i16, i16* %yscroll20, align 8, !dbg !13688
  %conv21 = sext i16 %34 to i32, !dbg !13687
  %35 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13689
  %vc_font = getelementptr inbounds %struct.vc_data, %struct.vc_data* %35, i32 0, i32 27, !dbg !13690
  %height = getelementptr inbounds %struct.console_font, %struct.console_font* %vc_font, i32 0, i32 1, !dbg !13691
  %36 = load i32, i32* %height, align 4, !dbg !13691
  %mul = mul i32 %conv21, %36, !dbg !13692
  %37 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !13693
  %var22 = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %37, i32 0, i32 7, !dbg !13694
  %yoffset = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %var22, i32 0, i32 5, !dbg !13695
  store i32 %mul, i32* %yoffset, align 4, !dbg !13696
  %38 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !13697
  %var23 = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %38, i32 0, i32 7, !dbg !13698
  %vmode = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %var23, i32 0, i32 25, !dbg !13699
  %39 = load i32, i32* %vmode, align 4, !dbg !13700
  %and = and i32 %39, -257, !dbg !13700
  store i32 %and, i32* %vmode, align 4, !dbg !13700
  %40 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !13701
  %update_start = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %40, i32 0, i32 5, !dbg !13702
  %41 = load i32 (%struct.fb_info*)*, i32 (%struct.fb_info*)** %update_start, align 8, !dbg !13702
  %42 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !13703
  %call = call i32 %41(%struct.fb_info* %42) #10, !dbg !13701
  %43 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13704
  call void @fbcon_clear_margins(%struct.vc_data* %43, i32 1) #10, !dbg !13705
  %44 = load i32, i32* %count.addr, align 4, !dbg !13706
  %45 = load i32, i32* @scrollback_max, align 4, !dbg !13707
  %add24 = add i32 %45, %44, !dbg !13707
  store i32 %add24, i32* @scrollback_max, align 4, !dbg !13707
  %46 = load i32, i32* @scrollback_max, align 4, !dbg !13708
  %47 = load i32, i32* @scrollback_phys_max, align 4, !dbg !13710
  %cmp25 = icmp sgt i32 %46, %47, !dbg !13711
  br i1 %cmp25, label %if.then27, label %if.end28, !dbg !13712

if.then27:                                        ; preds = %if.end
  %48 = load i32, i32* @scrollback_phys_max, align 4, !dbg !13713
  store i32 %48, i32* @scrollback_max, align 4, !dbg !13714
  br label %if.end28, !dbg !13715

if.end28:                                         ; preds = %if.then27, %if.end
  store i32 0, i32* @scrollback_current, align 4, !dbg !13716
  ret void, !dbg !13717
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ypan_up(%struct.vc_data* %vc, i32 %count) #1 !dbg !13718 {
entry:
  %vc.addr = alloca %struct.vc_data*, align 8
  %count.addr = alloca i32, align 4
  %info = alloca %struct.fb_info*, align 8
  %p = alloca %struct.fbcon_display*, align 8
  %ops = alloca %struct.fbcon_ops*, align 8
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !13719, metadata !DIExpression()), !dbg !13720
  store i32 %count, i32* %count.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %count.addr, metadata !13721, metadata !DIExpression()), !dbg !13722
  call void @llvm.dbg.declare(metadata %struct.fb_info** %info, metadata !13723, metadata !DIExpression()), !dbg !13724
  %0 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13725
  %vc_num = getelementptr inbounds %struct.vc_data, %struct.vc_data* %0, i32 0, i32 3, !dbg !13726
  %1 = load i16, i16* %vc_num, align 8, !dbg !13726
  %idxprom = zext i16 %1 to i64, !dbg !13727
  %arrayidx = getelementptr [63 x i8], [63 x i8]* @con2fb_map, i64 0, i64 %idxprom, !dbg !13727
  %2 = load i8, i8* %arrayidx, align 1, !dbg !13727
  %idxprom1 = sext i8 %2 to i64, !dbg !13728
  %arrayidx2 = getelementptr [32 x %struct.fb_info*], [32 x %struct.fb_info*]* @registered_fb, i64 0, i64 %idxprom1, !dbg !13728
  %3 = load %struct.fb_info*, %struct.fb_info** %arrayidx2, align 8, !dbg !13728
  store %struct.fb_info* %3, %struct.fb_info** %info, align 8, !dbg !13724
  call void @llvm.dbg.declare(metadata %struct.fbcon_display** %p, metadata !13729, metadata !DIExpression()), !dbg !13730
  %4 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13731
  %vc_num3 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %4, i32 0, i32 3, !dbg !13732
  %5 = load i16, i16* %vc_num3, align 8, !dbg !13732
  %idxprom4 = zext i16 %5 to i64, !dbg !13733
  %arrayidx5 = getelementptr [63 x %struct.fbcon_display], [63 x %struct.fbcon_display]* @fb_display, i64 0, i64 %idxprom4, !dbg !13733
  store %struct.fbcon_display* %arrayidx5, %struct.fbcon_display** %p, align 8, !dbg !13730
  call void @llvm.dbg.declare(metadata %struct.fbcon_ops** %ops, metadata !13734, metadata !DIExpression()), !dbg !13735
  %6 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !13736
  %fbcon_par = getelementptr inbounds %struct.fb_info, %struct.fb_info* %6, i32 0, i32 29, !dbg !13737
  %7 = load i8*, i8** %fbcon_par, align 8, !dbg !13737
  %8 = bitcast i8* %7 to %struct.fbcon_ops*, !dbg !13736
  store %struct.fbcon_ops* %8, %struct.fbcon_ops** %ops, align 8, !dbg !13735
  %9 = load i32, i32* %count.addr, align 4, !dbg !13738
  %10 = load %struct.fbcon_display*, %struct.fbcon_display** %p, align 8, !dbg !13739
  %yscroll = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %10, i32 0, i32 4, !dbg !13740
  %11 = load i16, i16* %yscroll, align 8, !dbg !13741
  %conv = sext i16 %11 to i32, !dbg !13741
  %add = add i32 %conv, %9, !dbg !13741
  %conv6 = trunc i32 %add to i16, !dbg !13741
  store i16 %conv6, i16* %yscroll, align 8, !dbg !13741
  %12 = load %struct.fbcon_display*, %struct.fbcon_display** %p, align 8, !dbg !13742
  %yscroll7 = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %12, i32 0, i32 4, !dbg !13744
  %13 = load i16, i16* %yscroll7, align 8, !dbg !13744
  %conv8 = sext i16 %13 to i32, !dbg !13742
  %14 = load %struct.fbcon_display*, %struct.fbcon_display** %p, align 8, !dbg !13745
  %vrows = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %14, i32 0, i32 5, !dbg !13746
  %15 = load i32, i32* %vrows, align 4, !dbg !13746
  %16 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13747
  %vc_rows = getelementptr inbounds %struct.vc_data, %struct.vc_data* %16, i32 0, i32 5, !dbg !13748
  %17 = load i32, i32* %vc_rows, align 8, !dbg !13748
  %sub = sub i32 %15, %17, !dbg !13749
  %cmp = icmp ugt i32 %conv8, %sub, !dbg !13750
  br i1 %cmp, label %if.then, label %if.end, !dbg !13751

if.then:                                          ; preds = %entry
  %18 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !13752
  %bmove = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %18, i32 0, i32 0, !dbg !13754
  %19 = load void (%struct.vc_data*, %struct.fb_info*, i32, i32, i32, i32, i32, i32)*, void (%struct.vc_data*, %struct.fb_info*, i32, i32, i32, i32, i32, i32)** %bmove, align 8, !dbg !13754
  %20 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13755
  %21 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !13756
  %22 = load %struct.fbcon_display*, %struct.fbcon_display** %p, align 8, !dbg !13757
  %vrows10 = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %22, i32 0, i32 5, !dbg !13758
  %23 = load i32, i32* %vrows10, align 4, !dbg !13758
  %24 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13759
  %vc_rows11 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %24, i32 0, i32 5, !dbg !13760
  %25 = load i32, i32* %vc_rows11, align 8, !dbg !13760
  %sub12 = sub i32 %23, %25, !dbg !13761
  %26 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13762
  %vc_rows13 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %26, i32 0, i32 5, !dbg !13763
  %27 = load i32, i32* %vc_rows13, align 8, !dbg !13763
  %28 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13764
  %vc_cols = getelementptr inbounds %struct.vc_data, %struct.vc_data* %28, i32 0, i32 4, !dbg !13765
  %29 = load i32, i32* %vc_cols, align 4, !dbg !13765
  call void %19(%struct.vc_data* %20, %struct.fb_info* %21, i32 %sub12, i32 0, i32 0, i32 0, i32 %27, i32 %29) #10, !dbg !13752
  %30 = load %struct.fbcon_display*, %struct.fbcon_display** %p, align 8, !dbg !13766
  %vrows14 = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %30, i32 0, i32 5, !dbg !13767
  %31 = load i32, i32* %vrows14, align 4, !dbg !13767
  %32 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13768
  %vc_rows15 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %32, i32 0, i32 5, !dbg !13769
  %33 = load i32, i32* %vc_rows15, align 8, !dbg !13769
  %sub16 = sub i32 %31, %33, !dbg !13770
  %34 = load %struct.fbcon_display*, %struct.fbcon_display** %p, align 8, !dbg !13771
  %yscroll17 = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %34, i32 0, i32 4, !dbg !13772
  %35 = load i16, i16* %yscroll17, align 8, !dbg !13773
  %conv18 = sext i16 %35 to i32, !dbg !13773
  %sub19 = sub i32 %conv18, %sub16, !dbg !13773
  %conv20 = trunc i32 %sub19 to i16, !dbg !13773
  store i16 %conv20, i16* %yscroll17, align 8, !dbg !13773
  br label %if.end, !dbg !13774

if.end:                                           ; preds = %if.then, %entry
  %36 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !13775
  %var = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %36, i32 0, i32 7, !dbg !13776
  %xoffset = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %var, i32 0, i32 4, !dbg !13777
  store i32 0, i32* %xoffset, align 8, !dbg !13778
  %37 = load %struct.fbcon_display*, %struct.fbcon_display** %p, align 8, !dbg !13779
  %yscroll21 = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %37, i32 0, i32 4, !dbg !13780
  %38 = load i16, i16* %yscroll21, align 8, !dbg !13780
  %conv22 = sext i16 %38 to i32, !dbg !13779
  %39 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13781
  %vc_font = getelementptr inbounds %struct.vc_data, %struct.vc_data* %39, i32 0, i32 27, !dbg !13782
  %height = getelementptr inbounds %struct.console_font, %struct.console_font* %vc_font, i32 0, i32 1, !dbg !13783
  %40 = load i32, i32* %height, align 4, !dbg !13783
  %mul = mul i32 %conv22, %40, !dbg !13784
  %41 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !13785
  %var23 = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %41, i32 0, i32 7, !dbg !13786
  %yoffset = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %var23, i32 0, i32 5, !dbg !13787
  store i32 %mul, i32* %yoffset, align 4, !dbg !13788
  %42 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !13789
  %var24 = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %42, i32 0, i32 7, !dbg !13790
  %vmode = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %var24, i32 0, i32 25, !dbg !13791
  %43 = load i32, i32* %vmode, align 4, !dbg !13792
  %and = and i32 %43, -257, !dbg !13792
  store i32 %and, i32* %vmode, align 4, !dbg !13792
  %44 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !13793
  %update_start = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %44, i32 0, i32 5, !dbg !13794
  %45 = load i32 (%struct.fb_info*)*, i32 (%struct.fb_info*)** %update_start, align 8, !dbg !13794
  %46 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !13795
  %call = call i32 %45(%struct.fb_info* %46) #10, !dbg !13793
  %47 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13796
  call void @fbcon_clear_margins(%struct.vc_data* %47, i32 1) #10, !dbg !13797
  %48 = load i32, i32* %count.addr, align 4, !dbg !13798
  %49 = load i32, i32* @scrollback_max, align 4, !dbg !13799
  %add25 = add i32 %49, %48, !dbg !13799
  store i32 %add25, i32* @scrollback_max, align 4, !dbg !13799
  %50 = load i32, i32* @scrollback_max, align 4, !dbg !13800
  %51 = load i32, i32* @scrollback_phys_max, align 4, !dbg !13802
  %cmp26 = icmp sgt i32 %50, %51, !dbg !13803
  br i1 %cmp26, label %if.then28, label %if.end29, !dbg !13804

if.then28:                                        ; preds = %if.end
  %52 = load i32, i32* @scrollback_phys_max, align 4, !dbg !13805
  store i32 %52, i32* @scrollback_max, align 4, !dbg !13806
  br label %if.end29, !dbg !13807

if.end29:                                         ; preds = %if.then28, %if.end
  store i32 0, i32* @scrollback_current, align 4, !dbg !13808
  ret void, !dbg !13809
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @fbcon_redraw(%struct.vc_data* %vc, %struct.fbcon_display* %p, i32 %line, i32 %count, i32 %offset) #1 !dbg !13810 {
entry:
  %vc.addr = alloca %struct.vc_data*, align 8
  %p.addr = alloca %struct.fbcon_display*, align 8
  %line.addr = alloca i32, align 4
  %count.addr = alloca i32, align 4
  %offset.addr = alloca i32, align 4
  %d = alloca i16*, align 8
  %s = alloca i16*, align 8
  %start = alloca i16*, align 8
  %le = alloca i16*, align 8
  %c = alloca i16, align 2
  %x = alloca i32, align 4
  %attr = alloca i16, align 2
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !13811, metadata !DIExpression()), !dbg !13812
  store %struct.fbcon_display* %p, %struct.fbcon_display** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fbcon_display** %p.addr, metadata !13813, metadata !DIExpression()), !dbg !13814
  store i32 %line, i32* %line.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %line.addr, metadata !13815, metadata !DIExpression()), !dbg !13816
  store i32 %count, i32* %count.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %count.addr, metadata !13817, metadata !DIExpression()), !dbg !13818
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !13819, metadata !DIExpression()), !dbg !13820
  call void @llvm.dbg.declare(metadata i16** %d, metadata !13821, metadata !DIExpression()), !dbg !13822
  %0 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13823
  %vc_origin = getelementptr inbounds %struct.vc_data, %struct.vc_data* %0, i32 0, i32 8, !dbg !13824
  %1 = load i64, i64* %vc_origin, align 8, !dbg !13824
  %2 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13825
  %vc_size_row = getelementptr inbounds %struct.vc_data, %struct.vc_data* %2, i32 0, i32 6, !dbg !13826
  %3 = load i32, i32* %vc_size_row, align 4, !dbg !13826
  %4 = load i32, i32* %line.addr, align 4, !dbg !13827
  %mul = mul i32 %3, %4, !dbg !13828
  %conv = zext i32 %mul to i64, !dbg !13825
  %add = add i64 %1, %conv, !dbg !13829
  %5 = inttoptr i64 %add to i16*, !dbg !13830
  store i16* %5, i16** %d, align 8, !dbg !13822
  call void @llvm.dbg.declare(metadata i16** %s, metadata !13831, metadata !DIExpression()), !dbg !13832
  %6 = load i16*, i16** %d, align 8, !dbg !13833
  %7 = load i32, i32* %offset.addr, align 4, !dbg !13834
  %idx.ext = sext i32 %7 to i64, !dbg !13835
  %add.ptr = getelementptr i16, i16* %6, i64 %idx.ext, !dbg !13835
  store i16* %add.ptr, i16** %s, align 8, !dbg !13832
  br label %while.cond, !dbg !13836

while.cond:                                       ; preds = %if.end73, %entry
  %8 = load i32, i32* %count.addr, align 4, !dbg !13837
  %dec = add i32 %8, -1, !dbg !13837
  store i32 %dec, i32* %count.addr, align 4, !dbg !13837
  %tobool = icmp ne i32 %8, 0, !dbg !13836
  br i1 %tobool, label %while.body, label %while.end, !dbg !13836

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i16** %start, metadata !13838, metadata !DIExpression()), !dbg !13840
  %9 = load i16*, i16** %s, align 8, !dbg !13841
  store i16* %9, i16** %start, align 8, !dbg !13840
  call void @llvm.dbg.declare(metadata i16** %le, metadata !13842, metadata !DIExpression()), !dbg !13843
  %10 = load i16*, i16** %s, align 8, !dbg !13844
  %11 = ptrtoint i16* %10 to i64, !dbg !13844
  %12 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13844
  %vc_size_row1 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %12, i32 0, i32 6, !dbg !13844
  %13 = load i32, i32* %vc_size_row1, align 4, !dbg !13844
  %mul2 = mul i32 1, %13, !dbg !13844
  %conv3 = zext i32 %mul2 to i64, !dbg !13844
  %add4 = add i64 %11, %conv3, !dbg !13844
  %14 = inttoptr i64 %add4 to i16*, !dbg !13844
  store i16* %14, i16** %le, align 8, !dbg !13843
  call void @llvm.dbg.declare(metadata i16* %c, metadata !13845, metadata !DIExpression()), !dbg !13846
  call void @llvm.dbg.declare(metadata i32* %x, metadata !13847, metadata !DIExpression()), !dbg !13848
  store i32 0, i32* %x, align 4, !dbg !13848
  call void @llvm.dbg.declare(metadata i16* %attr, metadata !13849, metadata !DIExpression()), !dbg !13850
  store i16 1, i16* %attr, align 2, !dbg !13850
  br label %do.body, !dbg !13851

do.body:                                          ; preds = %do.cond, %while.body
  %15 = load i16*, i16** %s, align 8, !dbg !13852
  %16 = load i16, i16* %15, align 2, !dbg !13852
  store i16 %16, i16* %c, align 2, !dbg !13854
  %17 = load i16, i16* %attr, align 2, !dbg !13855
  %conv5 = zext i16 %17 to i32, !dbg !13855
  %18 = load i16, i16* %c, align 2, !dbg !13857
  %conv6 = zext i16 %18 to i32, !dbg !13857
  %and = and i32 %conv6, 65280, !dbg !13858
  %cmp = icmp ne i32 %conv5, %and, !dbg !13859
  br i1 %cmp, label %if.then, label %if.end22, !dbg !13860

if.then:                                          ; preds = %do.body
  %19 = load i16, i16* %c, align 2, !dbg !13861
  %conv8 = zext i16 %19 to i32, !dbg !13861
  %and9 = and i32 %conv8, 65280, !dbg !13863
  %conv10 = trunc i32 %and9 to i16, !dbg !13861
  store i16 %conv10, i16* %attr, align 2, !dbg !13864
  %20 = load i16*, i16** %s, align 8, !dbg !13865
  %21 = load i16*, i16** %start, align 8, !dbg !13867
  %cmp11 = icmp ugt i16* %20, %21, !dbg !13868
  br i1 %cmp11, label %if.then13, label %if.end, !dbg !13869

if.then13:                                        ; preds = %if.then
  %22 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13870
  %23 = load i16*, i16** %start, align 8, !dbg !13872
  %24 = load i16*, i16** %s, align 8, !dbg !13873
  %25 = load i16*, i16** %start, align 8, !dbg !13874
  %sub.ptr.lhs.cast = ptrtoint i16* %24 to i64, !dbg !13875
  %sub.ptr.rhs.cast = ptrtoint i16* %25 to i64, !dbg !13875
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !13875
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 2, !dbg !13875
  %conv14 = trunc i64 %sub.ptr.div to i32, !dbg !13873
  %26 = load i32, i32* %line.addr, align 4, !dbg !13876
  %27 = load i32, i32* %x, align 4, !dbg !13877
  call void @fbcon_putcs(%struct.vc_data* %22, i16* %23, i32 %conv14, i32 %26, i32 %27) #10, !dbg !13878
  %28 = load i16*, i16** %s, align 8, !dbg !13879
  %29 = load i16*, i16** %start, align 8, !dbg !13880
  %sub.ptr.lhs.cast15 = ptrtoint i16* %28 to i64, !dbg !13881
  %sub.ptr.rhs.cast16 = ptrtoint i16* %29 to i64, !dbg !13881
  %sub.ptr.sub17 = sub i64 %sub.ptr.lhs.cast15, %sub.ptr.rhs.cast16, !dbg !13881
  %sub.ptr.div18 = sdiv exact i64 %sub.ptr.sub17, 2, !dbg !13881
  %30 = load i32, i32* %x, align 4, !dbg !13882
  %conv19 = sext i32 %30 to i64, !dbg !13882
  %add20 = add i64 %conv19, %sub.ptr.div18, !dbg !13882
  %conv21 = trunc i64 %add20 to i32, !dbg !13882
  store i32 %conv21, i32* %x, align 4, !dbg !13882
  %31 = load i16*, i16** %s, align 8, !dbg !13883
  store i16* %31, i16** %start, align 8, !dbg !13884
  br label %if.end, !dbg !13885

if.end:                                           ; preds = %if.then13, %if.then
  br label %if.end22, !dbg !13886

if.end22:                                         ; preds = %if.end, %do.body
  %32 = load i16, i16* %c, align 2, !dbg !13887
  %conv23 = zext i16 %32 to i32, !dbg !13887
  %33 = load i16*, i16** %d, align 8, !dbg !13889
  %34 = load i16, i16* %33, align 2, !dbg !13889
  %conv24 = zext i16 %34 to i32, !dbg !13889
  %cmp25 = icmp eq i32 %conv23, %conv24, !dbg !13890
  br i1 %cmp25, label %if.then27, label %if.end46, !dbg !13891

if.then27:                                        ; preds = %if.end22
  %35 = load i16*, i16** %s, align 8, !dbg !13892
  %36 = load i16*, i16** %start, align 8, !dbg !13895
  %cmp28 = icmp ugt i16* %35, %36, !dbg !13896
  br i1 %cmp28, label %if.then30, label %if.else, !dbg !13897

if.then30:                                        ; preds = %if.then27
  %37 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13898
  %38 = load i16*, i16** %start, align 8, !dbg !13900
  %39 = load i16*, i16** %s, align 8, !dbg !13901
  %40 = load i16*, i16** %start, align 8, !dbg !13902
  %sub.ptr.lhs.cast31 = ptrtoint i16* %39 to i64, !dbg !13903
  %sub.ptr.rhs.cast32 = ptrtoint i16* %40 to i64, !dbg !13903
  %sub.ptr.sub33 = sub i64 %sub.ptr.lhs.cast31, %sub.ptr.rhs.cast32, !dbg !13903
  %sub.ptr.div34 = sdiv exact i64 %sub.ptr.sub33, 2, !dbg !13903
  %conv35 = trunc i64 %sub.ptr.div34 to i32, !dbg !13901
  %41 = load i32, i32* %line.addr, align 4, !dbg !13904
  %42 = load i32, i32* %x, align 4, !dbg !13905
  call void @fbcon_putcs(%struct.vc_data* %37, i16* %38, i32 %conv35, i32 %41, i32 %42) #10, !dbg !13906
  %43 = load i16*, i16** %s, align 8, !dbg !13907
  %44 = load i16*, i16** %start, align 8, !dbg !13908
  %sub.ptr.lhs.cast36 = ptrtoint i16* %43 to i64, !dbg !13909
  %sub.ptr.rhs.cast37 = ptrtoint i16* %44 to i64, !dbg !13909
  %sub.ptr.sub38 = sub i64 %sub.ptr.lhs.cast36, %sub.ptr.rhs.cast37, !dbg !13909
  %sub.ptr.div39 = sdiv exact i64 %sub.ptr.sub38, 2, !dbg !13909
  %add40 = add i64 %sub.ptr.div39, 1, !dbg !13910
  %45 = load i32, i32* %x, align 4, !dbg !13911
  %conv41 = sext i32 %45 to i64, !dbg !13911
  %add42 = add i64 %conv41, %add40, !dbg !13911
  %conv43 = trunc i64 %add42 to i32, !dbg !13911
  store i32 %conv43, i32* %x, align 4, !dbg !13911
  %46 = load i16*, i16** %s, align 8, !dbg !13912
  %add.ptr44 = getelementptr i16, i16* %46, i64 1, !dbg !13913
  store i16* %add.ptr44, i16** %start, align 8, !dbg !13914
  br label %if.end45, !dbg !13915

if.else:                                          ; preds = %if.then27
  %47 = load i32, i32* %x, align 4, !dbg !13916
  %inc = add i32 %47, 1, !dbg !13916
  store i32 %inc, i32* %x, align 4, !dbg !13916
  %48 = load i16*, i16** %start, align 8, !dbg !13918
  %incdec.ptr = getelementptr i16, i16* %48, i32 1, !dbg !13918
  store i16* %incdec.ptr, i16** %start, align 8, !dbg !13918
  br label %if.end45

if.end45:                                         ; preds = %if.else, %if.then30
  br label %if.end46, !dbg !13919

if.end46:                                         ; preds = %if.end45, %if.end22
  %49 = load i16, i16* %c, align 2, !dbg !13920
  %50 = load i16*, i16** %d, align 8, !dbg !13920
  store i16 %49, i16* %50, align 2, !dbg !13920
  call void @console_conditional_schedule() #10, !dbg !13921
  %51 = load i16*, i16** %s, align 8, !dbg !13922
  %incdec.ptr47 = getelementptr i16, i16* %51, i32 1, !dbg !13922
  store i16* %incdec.ptr47, i16** %s, align 8, !dbg !13922
  %52 = load i16*, i16** %d, align 8, !dbg !13923
  %incdec.ptr48 = getelementptr i16, i16* %52, i32 1, !dbg !13923
  store i16* %incdec.ptr48, i16** %d, align 8, !dbg !13923
  br label %do.cond, !dbg !13924

do.cond:                                          ; preds = %if.end46
  %53 = load i16*, i16** %s, align 8, !dbg !13925
  %54 = load i16*, i16** %le, align 8, !dbg !13926
  %cmp49 = icmp ult i16* %53, %54, !dbg !13927
  br i1 %cmp49, label %do.body, label %do.end, !dbg !13924, !llvm.loop !13928

do.end:                                           ; preds = %do.cond
  %55 = load i16*, i16** %s, align 8, !dbg !13930
  %56 = load i16*, i16** %start, align 8, !dbg !13932
  %cmp51 = icmp ugt i16* %55, %56, !dbg !13933
  br i1 %cmp51, label %if.then53, label %if.end59, !dbg !13934

if.then53:                                        ; preds = %do.end
  %57 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13935
  %58 = load i16*, i16** %start, align 8, !dbg !13936
  %59 = load i16*, i16** %s, align 8, !dbg !13937
  %60 = load i16*, i16** %start, align 8, !dbg !13938
  %sub.ptr.lhs.cast54 = ptrtoint i16* %59 to i64, !dbg !13939
  %sub.ptr.rhs.cast55 = ptrtoint i16* %60 to i64, !dbg !13939
  %sub.ptr.sub56 = sub i64 %sub.ptr.lhs.cast54, %sub.ptr.rhs.cast55, !dbg !13939
  %sub.ptr.div57 = sdiv exact i64 %sub.ptr.sub56, 2, !dbg !13939
  %conv58 = trunc i64 %sub.ptr.div57 to i32, !dbg !13937
  %61 = load i32, i32* %line.addr, align 4, !dbg !13940
  %62 = load i32, i32* %x, align 4, !dbg !13941
  call void @fbcon_putcs(%struct.vc_data* %57, i16* %58, i32 %conv58, i32 %61, i32 %62) #10, !dbg !13942
  br label %if.end59, !dbg !13942

if.end59:                                         ; preds = %if.then53, %do.end
  call void @console_conditional_schedule() #10, !dbg !13943
  %63 = load i32, i32* %offset.addr, align 4, !dbg !13944
  %cmp60 = icmp sgt i32 %63, 0, !dbg !13946
  br i1 %cmp60, label %if.then62, label %if.else64, !dbg !13947

if.then62:                                        ; preds = %if.end59
  %64 = load i32, i32* %line.addr, align 4, !dbg !13948
  %inc63 = add i32 %64, 1, !dbg !13948
  store i32 %inc63, i32* %line.addr, align 4, !dbg !13948
  br label %if.end73, !dbg !13949

if.else64:                                        ; preds = %if.end59
  %65 = load i32, i32* %line.addr, align 4, !dbg !13950
  %dec65 = add i32 %65, -1, !dbg !13950
  store i32 %dec65, i32* %line.addr, align 4, !dbg !13950
  %66 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13952
  %vc_size_row66 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %66, i32 0, i32 6, !dbg !13953
  %67 = load i32, i32* %vc_size_row66, align 4, !dbg !13953
  %68 = load i16*, i16** %s, align 8, !dbg !13954
  %idx.ext67 = zext i32 %67 to i64, !dbg !13954
  %idx.neg = sub i64 0, %idx.ext67, !dbg !13954
  %add.ptr68 = getelementptr i16, i16* %68, i64 %idx.neg, !dbg !13954
  store i16* %add.ptr68, i16** %s, align 8, !dbg !13954
  %69 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13955
  %vc_size_row69 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %69, i32 0, i32 6, !dbg !13956
  %70 = load i32, i32* %vc_size_row69, align 4, !dbg !13956
  %71 = load i16*, i16** %d, align 8, !dbg !13957
  %idx.ext70 = zext i32 %70 to i64, !dbg !13957
  %idx.neg71 = sub i64 0, %idx.ext70, !dbg !13957
  %add.ptr72 = getelementptr i16, i16* %71, i64 %idx.neg71, !dbg !13957
  store i16* %add.ptr72, i16** %d, align 8, !dbg !13957
  br label %if.end73

if.end73:                                         ; preds = %if.else64, %if.then62
  br label %while.cond, !dbg !13836, !llvm.loop !13958

while.end:                                        ; preds = %while.cond
  ret void, !dbg !13960
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ywrap_down(%struct.vc_data* %vc, i32 %count) #1 !dbg !13961 {
entry:
  %vc.addr = alloca %struct.vc_data*, align 8
  %count.addr = alloca i32, align 4
  %info = alloca %struct.fb_info*, align 8
  %ops = alloca %struct.fbcon_ops*, align 8
  %p = alloca %struct.fbcon_display*, align 8
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !13962, metadata !DIExpression()), !dbg !13963
  store i32 %count, i32* %count.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %count.addr, metadata !13964, metadata !DIExpression()), !dbg !13965
  call void @llvm.dbg.declare(metadata %struct.fb_info** %info, metadata !13966, metadata !DIExpression()), !dbg !13967
  %0 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13968
  %vc_num = getelementptr inbounds %struct.vc_data, %struct.vc_data* %0, i32 0, i32 3, !dbg !13969
  %1 = load i16, i16* %vc_num, align 8, !dbg !13969
  %idxprom = zext i16 %1 to i64, !dbg !13970
  %arrayidx = getelementptr [63 x i8], [63 x i8]* @con2fb_map, i64 0, i64 %idxprom, !dbg !13970
  %2 = load i8, i8* %arrayidx, align 1, !dbg !13970
  %idxprom1 = sext i8 %2 to i64, !dbg !13971
  %arrayidx2 = getelementptr [32 x %struct.fb_info*], [32 x %struct.fb_info*]* @registered_fb, i64 0, i64 %idxprom1, !dbg !13971
  %3 = load %struct.fb_info*, %struct.fb_info** %arrayidx2, align 8, !dbg !13971
  store %struct.fb_info* %3, %struct.fb_info** %info, align 8, !dbg !13967
  call void @llvm.dbg.declare(metadata %struct.fbcon_ops** %ops, metadata !13972, metadata !DIExpression()), !dbg !13973
  %4 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !13974
  %fbcon_par = getelementptr inbounds %struct.fb_info, %struct.fb_info* %4, i32 0, i32 29, !dbg !13975
  %5 = load i8*, i8** %fbcon_par, align 8, !dbg !13975
  %6 = bitcast i8* %5 to %struct.fbcon_ops*, !dbg !13974
  store %struct.fbcon_ops* %6, %struct.fbcon_ops** %ops, align 8, !dbg !13973
  call void @llvm.dbg.declare(metadata %struct.fbcon_display** %p, metadata !13976, metadata !DIExpression()), !dbg !13977
  %7 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13978
  %vc_num3 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %7, i32 0, i32 3, !dbg !13979
  %8 = load i16, i16* %vc_num3, align 8, !dbg !13979
  %idxprom4 = zext i16 %8 to i64, !dbg !13980
  %arrayidx5 = getelementptr [63 x %struct.fbcon_display], [63 x %struct.fbcon_display]* @fb_display, i64 0, i64 %idxprom4, !dbg !13980
  store %struct.fbcon_display* %arrayidx5, %struct.fbcon_display** %p, align 8, !dbg !13977
  %9 = load i32, i32* %count.addr, align 4, !dbg !13981
  %10 = load %struct.fbcon_display*, %struct.fbcon_display** %p, align 8, !dbg !13982
  %yscroll = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %10, i32 0, i32 4, !dbg !13983
  %11 = load i16, i16* %yscroll, align 8, !dbg !13984
  %conv = sext i16 %11 to i32, !dbg !13984
  %sub = sub i32 %conv, %9, !dbg !13984
  %conv6 = trunc i32 %sub to i16, !dbg !13984
  store i16 %conv6, i16* %yscroll, align 8, !dbg !13984
  %12 = load %struct.fbcon_display*, %struct.fbcon_display** %p, align 8, !dbg !13985
  %yscroll7 = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %12, i32 0, i32 4, !dbg !13987
  %13 = load i16, i16* %yscroll7, align 8, !dbg !13987
  %conv8 = sext i16 %13 to i32, !dbg !13985
  %cmp = icmp slt i32 %conv8, 0, !dbg !13988
  br i1 %cmp, label %if.then, label %if.end, !dbg !13989

if.then:                                          ; preds = %entry
  %14 = load %struct.fbcon_display*, %struct.fbcon_display** %p, align 8, !dbg !13990
  %vrows = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %14, i32 0, i32 5, !dbg !13991
  %15 = load i32, i32* %vrows, align 4, !dbg !13991
  %16 = load %struct.fbcon_display*, %struct.fbcon_display** %p, align 8, !dbg !13992
  %yscroll10 = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %16, i32 0, i32 4, !dbg !13993
  %17 = load i16, i16* %yscroll10, align 8, !dbg !13994
  %conv11 = sext i16 %17 to i32, !dbg !13994
  %add = add i32 %conv11, %15, !dbg !13994
  %conv12 = trunc i32 %add to i16, !dbg !13994
  store i16 %conv12, i16* %yscroll10, align 8, !dbg !13994
  br label %if.end, !dbg !13992

if.end:                                           ; preds = %if.then, %entry
  %18 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !13995
  %var = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %18, i32 0, i32 7, !dbg !13996
  %xoffset = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %var, i32 0, i32 4, !dbg !13997
  store i32 0, i32* %xoffset, align 8, !dbg !13998
  %19 = load %struct.fbcon_display*, %struct.fbcon_display** %p, align 8, !dbg !13999
  %yscroll13 = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %19, i32 0, i32 4, !dbg !14000
  %20 = load i16, i16* %yscroll13, align 8, !dbg !14000
  %conv14 = sext i16 %20 to i32, !dbg !13999
  %21 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14001
  %vc_font = getelementptr inbounds %struct.vc_data, %struct.vc_data* %21, i32 0, i32 27, !dbg !14002
  %height = getelementptr inbounds %struct.console_font, %struct.console_font* %vc_font, i32 0, i32 1, !dbg !14003
  %22 = load i32, i32* %height, align 4, !dbg !14003
  %mul = mul i32 %conv14, %22, !dbg !14004
  %23 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !14005
  %var15 = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %23, i32 0, i32 7, !dbg !14006
  %yoffset = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %var15, i32 0, i32 5, !dbg !14007
  store i32 %mul, i32* %yoffset, align 4, !dbg !14008
  %24 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !14009
  %var16 = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %24, i32 0, i32 7, !dbg !14010
  %vmode = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %var16, i32 0, i32 25, !dbg !14011
  %25 = load i32, i32* %vmode, align 4, !dbg !14012
  %or = or i32 %25, 256, !dbg !14012
  store i32 %or, i32* %vmode, align 4, !dbg !14012
  %26 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !14013
  %update_start = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %26, i32 0, i32 5, !dbg !14014
  %27 = load i32 (%struct.fb_info*)*, i32 (%struct.fb_info*)** %update_start, align 8, !dbg !14014
  %28 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !14015
  %call = call i32 %27(%struct.fb_info* %28) #10, !dbg !14013
  %29 = load i32, i32* %count.addr, align 4, !dbg !14016
  %30 = load i32, i32* @scrollback_max, align 4, !dbg !14017
  %sub17 = sub i32 %30, %29, !dbg !14017
  store i32 %sub17, i32* @scrollback_max, align 4, !dbg !14017
  %31 = load i32, i32* @scrollback_max, align 4, !dbg !14018
  %cmp18 = icmp slt i32 %31, 0, !dbg !14020
  br i1 %cmp18, label %if.then20, label %if.end21, !dbg !14021

if.then20:                                        ; preds = %if.end
  store i32 0, i32* @scrollback_max, align 4, !dbg !14022
  br label %if.end21, !dbg !14023

if.end21:                                         ; preds = %if.then20, %if.end
  store i32 0, i32* @scrollback_current, align 4, !dbg !14024
  ret void, !dbg !14025
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ypan_down(%struct.vc_data* %vc, i32 %count) #1 !dbg !14026 {
entry:
  %vc.addr = alloca %struct.vc_data*, align 8
  %count.addr = alloca i32, align 4
  %info = alloca %struct.fb_info*, align 8
  %p = alloca %struct.fbcon_display*, align 8
  %ops = alloca %struct.fbcon_ops*, align 8
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !14027, metadata !DIExpression()), !dbg !14028
  store i32 %count, i32* %count.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %count.addr, metadata !14029, metadata !DIExpression()), !dbg !14030
  call void @llvm.dbg.declare(metadata %struct.fb_info** %info, metadata !14031, metadata !DIExpression()), !dbg !14032
  %0 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14033
  %vc_num = getelementptr inbounds %struct.vc_data, %struct.vc_data* %0, i32 0, i32 3, !dbg !14034
  %1 = load i16, i16* %vc_num, align 8, !dbg !14034
  %idxprom = zext i16 %1 to i64, !dbg !14035
  %arrayidx = getelementptr [63 x i8], [63 x i8]* @con2fb_map, i64 0, i64 %idxprom, !dbg !14035
  %2 = load i8, i8* %arrayidx, align 1, !dbg !14035
  %idxprom1 = sext i8 %2 to i64, !dbg !14036
  %arrayidx2 = getelementptr [32 x %struct.fb_info*], [32 x %struct.fb_info*]* @registered_fb, i64 0, i64 %idxprom1, !dbg !14036
  %3 = load %struct.fb_info*, %struct.fb_info** %arrayidx2, align 8, !dbg !14036
  store %struct.fb_info* %3, %struct.fb_info** %info, align 8, !dbg !14032
  call void @llvm.dbg.declare(metadata %struct.fbcon_display** %p, metadata !14037, metadata !DIExpression()), !dbg !14038
  %4 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14039
  %vc_num3 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %4, i32 0, i32 3, !dbg !14040
  %5 = load i16, i16* %vc_num3, align 8, !dbg !14040
  %idxprom4 = zext i16 %5 to i64, !dbg !14041
  %arrayidx5 = getelementptr [63 x %struct.fbcon_display], [63 x %struct.fbcon_display]* @fb_display, i64 0, i64 %idxprom4, !dbg !14041
  store %struct.fbcon_display* %arrayidx5, %struct.fbcon_display** %p, align 8, !dbg !14038
  call void @llvm.dbg.declare(metadata %struct.fbcon_ops** %ops, metadata !14042, metadata !DIExpression()), !dbg !14043
  %6 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !14044
  %fbcon_par = getelementptr inbounds %struct.fb_info, %struct.fb_info* %6, i32 0, i32 29, !dbg !14045
  %7 = load i8*, i8** %fbcon_par, align 8, !dbg !14045
  %8 = bitcast i8* %7 to %struct.fbcon_ops*, !dbg !14044
  store %struct.fbcon_ops* %8, %struct.fbcon_ops** %ops, align 8, !dbg !14043
  %9 = load i32, i32* %count.addr, align 4, !dbg !14046
  %10 = load %struct.fbcon_display*, %struct.fbcon_display** %p, align 8, !dbg !14047
  %yscroll = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %10, i32 0, i32 4, !dbg !14048
  %11 = load i16, i16* %yscroll, align 8, !dbg !14049
  %conv = sext i16 %11 to i32, !dbg !14049
  %sub = sub i32 %conv, %9, !dbg !14049
  %conv6 = trunc i32 %sub to i16, !dbg !14049
  store i16 %conv6, i16* %yscroll, align 8, !dbg !14049
  %12 = load %struct.fbcon_display*, %struct.fbcon_display** %p, align 8, !dbg !14050
  %yscroll7 = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %12, i32 0, i32 4, !dbg !14052
  %13 = load i16, i16* %yscroll7, align 8, !dbg !14052
  %conv8 = sext i16 %13 to i32, !dbg !14050
  %cmp = icmp slt i32 %conv8, 0, !dbg !14053
  br i1 %cmp, label %if.then, label %if.end, !dbg !14054

if.then:                                          ; preds = %entry
  %14 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !14055
  %bmove = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %14, i32 0, i32 0, !dbg !14057
  %15 = load void (%struct.vc_data*, %struct.fb_info*, i32, i32, i32, i32, i32, i32)*, void (%struct.vc_data*, %struct.fb_info*, i32, i32, i32, i32, i32, i32)** %bmove, align 8, !dbg !14057
  %16 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14058
  %17 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !14059
  %18 = load %struct.fbcon_display*, %struct.fbcon_display** %p, align 8, !dbg !14060
  %vrows = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %18, i32 0, i32 5, !dbg !14061
  %19 = load i32, i32* %vrows, align 4, !dbg !14061
  %20 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14062
  %vc_rows = getelementptr inbounds %struct.vc_data, %struct.vc_data* %20, i32 0, i32 5, !dbg !14063
  %21 = load i32, i32* %vc_rows, align 8, !dbg !14063
  %sub10 = sub i32 %19, %21, !dbg !14064
  %22 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14065
  %vc_rows11 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %22, i32 0, i32 5, !dbg !14066
  %23 = load i32, i32* %vc_rows11, align 8, !dbg !14066
  %24 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14067
  %vc_cols = getelementptr inbounds %struct.vc_data, %struct.vc_data* %24, i32 0, i32 4, !dbg !14068
  %25 = load i32, i32* %vc_cols, align 4, !dbg !14068
  call void %15(%struct.vc_data* %16, %struct.fb_info* %17, i32 0, i32 0, i32 %sub10, i32 0, i32 %23, i32 %25) #10, !dbg !14055
  %26 = load %struct.fbcon_display*, %struct.fbcon_display** %p, align 8, !dbg !14069
  %vrows12 = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %26, i32 0, i32 5, !dbg !14070
  %27 = load i32, i32* %vrows12, align 4, !dbg !14070
  %28 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14071
  %vc_rows13 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %28, i32 0, i32 5, !dbg !14072
  %29 = load i32, i32* %vc_rows13, align 8, !dbg !14072
  %sub14 = sub i32 %27, %29, !dbg !14073
  %30 = load %struct.fbcon_display*, %struct.fbcon_display** %p, align 8, !dbg !14074
  %yscroll15 = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %30, i32 0, i32 4, !dbg !14075
  %31 = load i16, i16* %yscroll15, align 8, !dbg !14076
  %conv16 = sext i16 %31 to i32, !dbg !14076
  %add = add i32 %conv16, %sub14, !dbg !14076
  %conv17 = trunc i32 %add to i16, !dbg !14076
  store i16 %conv17, i16* %yscroll15, align 8, !dbg !14076
  br label %if.end, !dbg !14077

if.end:                                           ; preds = %if.then, %entry
  %32 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !14078
  %var = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %32, i32 0, i32 7, !dbg !14079
  %xoffset = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %var, i32 0, i32 4, !dbg !14080
  store i32 0, i32* %xoffset, align 8, !dbg !14081
  %33 = load %struct.fbcon_display*, %struct.fbcon_display** %p, align 8, !dbg !14082
  %yscroll18 = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %33, i32 0, i32 4, !dbg !14083
  %34 = load i16, i16* %yscroll18, align 8, !dbg !14083
  %conv19 = sext i16 %34 to i32, !dbg !14082
  %35 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14084
  %vc_font = getelementptr inbounds %struct.vc_data, %struct.vc_data* %35, i32 0, i32 27, !dbg !14085
  %height = getelementptr inbounds %struct.console_font, %struct.console_font* %vc_font, i32 0, i32 1, !dbg !14086
  %36 = load i32, i32* %height, align 4, !dbg !14086
  %mul = mul i32 %conv19, %36, !dbg !14087
  %37 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !14088
  %var20 = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %37, i32 0, i32 7, !dbg !14089
  %yoffset = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %var20, i32 0, i32 5, !dbg !14090
  store i32 %mul, i32* %yoffset, align 4, !dbg !14091
  %38 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !14092
  %var21 = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %38, i32 0, i32 7, !dbg !14093
  %vmode = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %var21, i32 0, i32 25, !dbg !14094
  %39 = load i32, i32* %vmode, align 4, !dbg !14095
  %and = and i32 %39, -257, !dbg !14095
  store i32 %and, i32* %vmode, align 4, !dbg !14095
  %40 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !14096
  %update_start = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %40, i32 0, i32 5, !dbg !14097
  %41 = load i32 (%struct.fb_info*)*, i32 (%struct.fb_info*)** %update_start, align 8, !dbg !14097
  %42 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !14098
  %call = call i32 %41(%struct.fb_info* %42) #10, !dbg !14096
  %43 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14099
  call void @fbcon_clear_margins(%struct.vc_data* %43, i32 1) #10, !dbg !14100
  %44 = load i32, i32* %count.addr, align 4, !dbg !14101
  %45 = load i32, i32* @scrollback_max, align 4, !dbg !14102
  %sub22 = sub i32 %45, %44, !dbg !14102
  store i32 %sub22, i32* @scrollback_max, align 4, !dbg !14102
  %46 = load i32, i32* @scrollback_max, align 4, !dbg !14103
  %cmp23 = icmp slt i32 %46, 0, !dbg !14105
  br i1 %cmp23, label %if.then25, label %if.end26, !dbg !14106

if.then25:                                        ; preds = %if.end
  store i32 0, i32* @scrollback_max, align 4, !dbg !14107
  br label %if.end26, !dbg !14108

if.end26:                                         ; preds = %if.then25, %if.end
  store i32 0, i32* @scrollback_current, align 4, !dbg !14109
  ret void, !dbg !14110
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ypan_down_redraw(%struct.vc_data* %vc, i32 %t, i32 %count) #1 !dbg !14111 {
entry:
  %vc.addr = alloca %struct.vc_data*, align 8
  %t.addr = alloca i32, align 4
  %count.addr = alloca i32, align 4
  %info = alloca %struct.fb_info*, align 8
  %ops = alloca %struct.fbcon_ops*, align 8
  %p = alloca %struct.fbcon_display*, align 8
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !14112, metadata !DIExpression()), !dbg !14113
  store i32 %t, i32* %t.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %t.addr, metadata !14114, metadata !DIExpression()), !dbg !14115
  store i32 %count, i32* %count.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %count.addr, metadata !14116, metadata !DIExpression()), !dbg !14117
  call void @llvm.dbg.declare(metadata %struct.fb_info** %info, metadata !14118, metadata !DIExpression()), !dbg !14119
  %0 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14120
  %vc_num = getelementptr inbounds %struct.vc_data, %struct.vc_data* %0, i32 0, i32 3, !dbg !14121
  %1 = load i16, i16* %vc_num, align 8, !dbg !14121
  %idxprom = zext i16 %1 to i64, !dbg !14122
  %arrayidx = getelementptr [63 x i8], [63 x i8]* @con2fb_map, i64 0, i64 %idxprom, !dbg !14122
  %2 = load i8, i8* %arrayidx, align 1, !dbg !14122
  %idxprom1 = sext i8 %2 to i64, !dbg !14123
  %arrayidx2 = getelementptr [32 x %struct.fb_info*], [32 x %struct.fb_info*]* @registered_fb, i64 0, i64 %idxprom1, !dbg !14123
  %3 = load %struct.fb_info*, %struct.fb_info** %arrayidx2, align 8, !dbg !14123
  store %struct.fb_info* %3, %struct.fb_info** %info, align 8, !dbg !14119
  call void @llvm.dbg.declare(metadata %struct.fbcon_ops** %ops, metadata !14124, metadata !DIExpression()), !dbg !14125
  %4 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !14126
  %fbcon_par = getelementptr inbounds %struct.fb_info, %struct.fb_info* %4, i32 0, i32 29, !dbg !14127
  %5 = load i8*, i8** %fbcon_par, align 8, !dbg !14127
  %6 = bitcast i8* %5 to %struct.fbcon_ops*, !dbg !14126
  store %struct.fbcon_ops* %6, %struct.fbcon_ops** %ops, align 8, !dbg !14125
  call void @llvm.dbg.declare(metadata %struct.fbcon_display** %p, metadata !14128, metadata !DIExpression()), !dbg !14129
  %7 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14130
  %vc_num3 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %7, i32 0, i32 3, !dbg !14131
  %8 = load i16, i16* %vc_num3, align 8, !dbg !14131
  %idxprom4 = zext i16 %8 to i64, !dbg !14132
  %arrayidx5 = getelementptr [63 x %struct.fbcon_display], [63 x %struct.fbcon_display]* @fb_display, i64 0, i64 %idxprom4, !dbg !14132
  store %struct.fbcon_display* %arrayidx5, %struct.fbcon_display** %p, align 8, !dbg !14129
  %9 = load i32, i32* %count.addr, align 4, !dbg !14133
  %10 = load %struct.fbcon_display*, %struct.fbcon_display** %p, align 8, !dbg !14134
  %yscroll = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %10, i32 0, i32 4, !dbg !14135
  %11 = load i16, i16* %yscroll, align 8, !dbg !14136
  %conv = sext i16 %11 to i32, !dbg !14136
  %sub = sub i32 %conv, %9, !dbg !14136
  %conv6 = trunc i32 %sub to i16, !dbg !14136
  store i16 %conv6, i16* %yscroll, align 8, !dbg !14136
  %12 = load %struct.fbcon_display*, %struct.fbcon_display** %p, align 8, !dbg !14137
  %yscroll7 = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %12, i32 0, i32 4, !dbg !14139
  %13 = load i16, i16* %yscroll7, align 8, !dbg !14139
  %conv8 = sext i16 %13 to i32, !dbg !14137
  %cmp = icmp slt i32 %conv8, 0, !dbg !14140
  br i1 %cmp, label %if.then, label %if.end, !dbg !14141

if.then:                                          ; preds = %entry
  %14 = load %struct.fbcon_display*, %struct.fbcon_display** %p, align 8, !dbg !14142
  %vrows = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %14, i32 0, i32 5, !dbg !14144
  %15 = load i32, i32* %vrows, align 4, !dbg !14144
  %16 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14145
  %vc_rows = getelementptr inbounds %struct.vc_data, %struct.vc_data* %16, i32 0, i32 5, !dbg !14146
  %17 = load i32, i32* %vc_rows, align 8, !dbg !14146
  %sub10 = sub i32 %15, %17, !dbg !14147
  %18 = load %struct.fbcon_display*, %struct.fbcon_display** %p, align 8, !dbg !14148
  %yscroll11 = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %18, i32 0, i32 4, !dbg !14149
  %19 = load i16, i16* %yscroll11, align 8, !dbg !14150
  %conv12 = sext i16 %19 to i32, !dbg !14150
  %add = add i32 %conv12, %sub10, !dbg !14150
  %conv13 = trunc i32 %add to i16, !dbg !14150
  store i16 %conv13, i16* %yscroll11, align 8, !dbg !14150
  %20 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14151
  %21 = load %struct.fbcon_display*, %struct.fbcon_display** %p, align 8, !dbg !14152
  %22 = load i32, i32* %t.addr, align 4, !dbg !14153
  %23 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14154
  %vc_rows14 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %23, i32 0, i32 5, !dbg !14155
  %24 = load i32, i32* %vc_rows14, align 8, !dbg !14155
  %25 = load i32, i32* %count.addr, align 4, !dbg !14156
  %sub15 = sub i32 %24, %25, !dbg !14157
  %26 = load i32, i32* %t.addr, align 4, !dbg !14158
  %27 = load i32, i32* %count.addr, align 4, !dbg !14159
  %add16 = add i32 %26, %27, !dbg !14160
  call void @fbcon_redraw_move(%struct.vc_data* %20, %struct.fbcon_display* %21, i32 %22, i32 %sub15, i32 %add16) #10, !dbg !14161
  br label %if.end, !dbg !14162

if.end:                                           ; preds = %if.then, %entry
  %28 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !14163
  %var = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %28, i32 0, i32 7, !dbg !14164
  %xoffset = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %var, i32 0, i32 4, !dbg !14165
  store i32 0, i32* %xoffset, align 8, !dbg !14166
  %29 = load %struct.fbcon_display*, %struct.fbcon_display** %p, align 8, !dbg !14167
  %yscroll17 = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %29, i32 0, i32 4, !dbg !14168
  %30 = load i16, i16* %yscroll17, align 8, !dbg !14168
  %conv18 = sext i16 %30 to i32, !dbg !14167
  %31 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14169
  %vc_font = getelementptr inbounds %struct.vc_data, %struct.vc_data* %31, i32 0, i32 27, !dbg !14170
  %height = getelementptr inbounds %struct.console_font, %struct.console_font* %vc_font, i32 0, i32 1, !dbg !14171
  %32 = load i32, i32* %height, align 4, !dbg !14171
  %mul = mul i32 %conv18, %32, !dbg !14172
  %33 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !14173
  %var19 = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %33, i32 0, i32 7, !dbg !14174
  %yoffset = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %var19, i32 0, i32 5, !dbg !14175
  store i32 %mul, i32* %yoffset, align 4, !dbg !14176
  %34 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !14177
  %var20 = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %34, i32 0, i32 7, !dbg !14178
  %vmode = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %var20, i32 0, i32 25, !dbg !14179
  %35 = load i32, i32* %vmode, align 4, !dbg !14180
  %and = and i32 %35, -257, !dbg !14180
  store i32 %and, i32* %vmode, align 4, !dbg !14180
  %36 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !14181
  %update_start = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %36, i32 0, i32 5, !dbg !14182
  %37 = load i32 (%struct.fb_info*)*, i32 (%struct.fb_info*)** %update_start, align 8, !dbg !14182
  %38 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !14183
  %call = call i32 %37(%struct.fb_info* %38) #10, !dbg !14181
  %39 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14184
  call void @fbcon_clear_margins(%struct.vc_data* %39, i32 1) #10, !dbg !14185
  %40 = load i32, i32* %count.addr, align 4, !dbg !14186
  %41 = load i32, i32* @scrollback_max, align 4, !dbg !14187
  %sub21 = sub i32 %41, %40, !dbg !14187
  store i32 %sub21, i32* @scrollback_max, align 4, !dbg !14187
  %42 = load i32, i32* @scrollback_max, align 4, !dbg !14188
  %cmp22 = icmp slt i32 %42, 0, !dbg !14190
  br i1 %cmp22, label %if.then24, label %if.end25, !dbg !14191

if.then24:                                        ; preds = %if.end
  store i32 0, i32* @scrollback_max, align 4, !dbg !14192
  br label %if.end25, !dbg !14193

if.end25:                                         ; preds = %if.then24, %if.end
  store i32 0, i32* @scrollback_current, align 4, !dbg !14194
  ret void, !dbg !14195
}

; Function Attrs: noredzone
declare dso_local void @console_conditional_schedule() #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @fbcon_bmove_rec(%struct.vc_data* %vc, %struct.fbcon_display* %p, i32 %sy, i32 %sx, i32 %dy, i32 %dx, i32 %height, i32 %width, i32 %y_break) #1 !dbg !14196 {
entry:
  %vc.addr = alloca %struct.vc_data*, align 8
  %p.addr = alloca %struct.fbcon_display*, align 8
  %sy.addr = alloca i32, align 4
  %sx.addr = alloca i32, align 4
  %dy.addr = alloca i32, align 4
  %dx.addr = alloca i32, align 4
  %height.addr = alloca i32, align 4
  %width.addr = alloca i32, align 4
  %y_break.addr = alloca i32, align 4
  %info = alloca %struct.fb_info*, align 8
  %ops = alloca %struct.fbcon_ops*, align 8
  %b = alloca i32, align 4
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !14199, metadata !DIExpression()), !dbg !14200
  store %struct.fbcon_display* %p, %struct.fbcon_display** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fbcon_display** %p.addr, metadata !14201, metadata !DIExpression()), !dbg !14202
  store i32 %sy, i32* %sy.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sy.addr, metadata !14203, metadata !DIExpression()), !dbg !14204
  store i32 %sx, i32* %sx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sx.addr, metadata !14205, metadata !DIExpression()), !dbg !14206
  store i32 %dy, i32* %dy.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dy.addr, metadata !14207, metadata !DIExpression()), !dbg !14208
  store i32 %dx, i32* %dx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dx.addr, metadata !14209, metadata !DIExpression()), !dbg !14210
  store i32 %height, i32* %height.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %height.addr, metadata !14211, metadata !DIExpression()), !dbg !14212
  store i32 %width, i32* %width.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %width.addr, metadata !14213, metadata !DIExpression()), !dbg !14214
  store i32 %y_break, i32* %y_break.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y_break.addr, metadata !14215, metadata !DIExpression()), !dbg !14216
  call void @llvm.dbg.declare(metadata %struct.fb_info** %info, metadata !14217, metadata !DIExpression()), !dbg !14218
  %0 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14219
  %vc_num = getelementptr inbounds %struct.vc_data, %struct.vc_data* %0, i32 0, i32 3, !dbg !14220
  %1 = load i16, i16* %vc_num, align 8, !dbg !14220
  %idxprom = zext i16 %1 to i64, !dbg !14221
  %arrayidx = getelementptr [63 x i8], [63 x i8]* @con2fb_map, i64 0, i64 %idxprom, !dbg !14221
  %2 = load i8, i8* %arrayidx, align 1, !dbg !14221
  %idxprom1 = sext i8 %2 to i64, !dbg !14222
  %arrayidx2 = getelementptr [32 x %struct.fb_info*], [32 x %struct.fb_info*]* @registered_fb, i64 0, i64 %idxprom1, !dbg !14222
  %3 = load %struct.fb_info*, %struct.fb_info** %arrayidx2, align 8, !dbg !14222
  store %struct.fb_info* %3, %struct.fb_info** %info, align 8, !dbg !14218
  call void @llvm.dbg.declare(metadata %struct.fbcon_ops** %ops, metadata !14223, metadata !DIExpression()), !dbg !14224
  %4 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !14225
  %fbcon_par = getelementptr inbounds %struct.fb_info, %struct.fb_info* %4, i32 0, i32 29, !dbg !14226
  %5 = load i8*, i8** %fbcon_par, align 8, !dbg !14226
  %6 = bitcast i8* %5 to %struct.fbcon_ops*, !dbg !14225
  store %struct.fbcon_ops* %6, %struct.fbcon_ops** %ops, align 8, !dbg !14224
  call void @llvm.dbg.declare(metadata i32* %b, metadata !14227, metadata !DIExpression()), !dbg !14228
  %7 = load i32, i32* %sy.addr, align 4, !dbg !14229
  %8 = load i32, i32* %y_break.addr, align 4, !dbg !14231
  %cmp = icmp ult i32 %7, %8, !dbg !14232
  br i1 %cmp, label %land.lhs.true, label %if.end12, !dbg !14233

land.lhs.true:                                    ; preds = %entry
  %9 = load i32, i32* %sy.addr, align 4, !dbg !14234
  %10 = load i32, i32* %height.addr, align 4, !dbg !14235
  %add = add i32 %9, %10, !dbg !14236
  %11 = load i32, i32* %y_break.addr, align 4, !dbg !14237
  %cmp3 = icmp ugt i32 %add, %11, !dbg !14238
  br i1 %cmp3, label %if.then, label %if.end12, !dbg !14239

if.then:                                          ; preds = %land.lhs.true
  %12 = load i32, i32* %y_break.addr, align 4, !dbg !14240
  %13 = load i32, i32* %sy.addr, align 4, !dbg !14242
  %sub = sub i32 %12, %13, !dbg !14243
  store i32 %sub, i32* %b, align 4, !dbg !14244
  %14 = load i32, i32* %dy.addr, align 4, !dbg !14245
  %15 = load i32, i32* %sy.addr, align 4, !dbg !14247
  %cmp4 = icmp slt i32 %14, %15, !dbg !14248
  br i1 %cmp4, label %if.then5, label %if.else, !dbg !14249

if.then5:                                         ; preds = %if.then
  %16 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14250
  %17 = load %struct.fbcon_display*, %struct.fbcon_display** %p.addr, align 8, !dbg !14252
  %18 = load i32, i32* %sy.addr, align 4, !dbg !14253
  %19 = load i32, i32* %sx.addr, align 4, !dbg !14254
  %20 = load i32, i32* %dy.addr, align 4, !dbg !14255
  %21 = load i32, i32* %dx.addr, align 4, !dbg !14256
  %22 = load i32, i32* %b, align 4, !dbg !14257
  %23 = load i32, i32* %width.addr, align 4, !dbg !14258
  %24 = load i32, i32* %y_break.addr, align 4, !dbg !14259
  call void @fbcon_bmove_rec(%struct.vc_data* %16, %struct.fbcon_display* %17, i32 %18, i32 %19, i32 %20, i32 %21, i32 %22, i32 %23, i32 %24) #10, !dbg !14260
  %25 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14261
  %26 = load %struct.fbcon_display*, %struct.fbcon_display** %p.addr, align 8, !dbg !14262
  %27 = load i32, i32* %sy.addr, align 4, !dbg !14263
  %28 = load i32, i32* %b, align 4, !dbg !14264
  %add6 = add i32 %27, %28, !dbg !14265
  %29 = load i32, i32* %sx.addr, align 4, !dbg !14266
  %30 = load i32, i32* %dy.addr, align 4, !dbg !14267
  %31 = load i32, i32* %b, align 4, !dbg !14268
  %add7 = add i32 %30, %31, !dbg !14269
  %32 = load i32, i32* %dx.addr, align 4, !dbg !14270
  %33 = load i32, i32* %height.addr, align 4, !dbg !14271
  %34 = load i32, i32* %b, align 4, !dbg !14272
  %sub8 = sub i32 %33, %34, !dbg !14273
  %35 = load i32, i32* %width.addr, align 4, !dbg !14274
  %36 = load i32, i32* %y_break.addr, align 4, !dbg !14275
  call void @fbcon_bmove_rec(%struct.vc_data* %25, %struct.fbcon_display* %26, i32 %add6, i32 %29, i32 %add7, i32 %32, i32 %sub8, i32 %35, i32 %36) #10, !dbg !14276
  br label %if.end, !dbg !14277

if.else:                                          ; preds = %if.then
  %37 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14278
  %38 = load %struct.fbcon_display*, %struct.fbcon_display** %p.addr, align 8, !dbg !14280
  %39 = load i32, i32* %sy.addr, align 4, !dbg !14281
  %40 = load i32, i32* %b, align 4, !dbg !14282
  %add9 = add i32 %39, %40, !dbg !14283
  %41 = load i32, i32* %sx.addr, align 4, !dbg !14284
  %42 = load i32, i32* %dy.addr, align 4, !dbg !14285
  %43 = load i32, i32* %b, align 4, !dbg !14286
  %add10 = add i32 %42, %43, !dbg !14287
  %44 = load i32, i32* %dx.addr, align 4, !dbg !14288
  %45 = load i32, i32* %height.addr, align 4, !dbg !14289
  %46 = load i32, i32* %b, align 4, !dbg !14290
  %sub11 = sub i32 %45, %46, !dbg !14291
  %47 = load i32, i32* %width.addr, align 4, !dbg !14292
  %48 = load i32, i32* %y_break.addr, align 4, !dbg !14293
  call void @fbcon_bmove_rec(%struct.vc_data* %37, %struct.fbcon_display* %38, i32 %add9, i32 %41, i32 %add10, i32 %44, i32 %sub11, i32 %47, i32 %48) #10, !dbg !14294
  %49 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14295
  %50 = load %struct.fbcon_display*, %struct.fbcon_display** %p.addr, align 8, !dbg !14296
  %51 = load i32, i32* %sy.addr, align 4, !dbg !14297
  %52 = load i32, i32* %sx.addr, align 4, !dbg !14298
  %53 = load i32, i32* %dy.addr, align 4, !dbg !14299
  %54 = load i32, i32* %dx.addr, align 4, !dbg !14300
  %55 = load i32, i32* %b, align 4, !dbg !14301
  %56 = load i32, i32* %width.addr, align 4, !dbg !14302
  %57 = load i32, i32* %y_break.addr, align 4, !dbg !14303
  call void @fbcon_bmove_rec(%struct.vc_data* %49, %struct.fbcon_display* %50, i32 %51, i32 %52, i32 %53, i32 %54, i32 %55, i32 %56, i32 %57) #10, !dbg !14304
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then5
  br label %return, !dbg !14305

if.end12:                                         ; preds = %land.lhs.true, %entry
  %58 = load i32, i32* %dy.addr, align 4, !dbg !14306
  %59 = load i32, i32* %y_break.addr, align 4, !dbg !14308
  %cmp13 = icmp ult i32 %58, %59, !dbg !14309
  br i1 %cmp13, label %land.lhs.true14, label %if.end29, !dbg !14310

land.lhs.true14:                                  ; preds = %if.end12
  %60 = load i32, i32* %dy.addr, align 4, !dbg !14311
  %61 = load i32, i32* %height.addr, align 4, !dbg !14312
  %add15 = add i32 %60, %61, !dbg !14313
  %62 = load i32, i32* %y_break.addr, align 4, !dbg !14314
  %cmp16 = icmp ugt i32 %add15, %62, !dbg !14315
  br i1 %cmp16, label %if.then17, label %if.end29, !dbg !14316

if.then17:                                        ; preds = %land.lhs.true14
  %63 = load i32, i32* %y_break.addr, align 4, !dbg !14317
  %64 = load i32, i32* %dy.addr, align 4, !dbg !14319
  %sub18 = sub i32 %63, %64, !dbg !14320
  store i32 %sub18, i32* %b, align 4, !dbg !14321
  %65 = load i32, i32* %dy.addr, align 4, !dbg !14322
  %66 = load i32, i32* %sy.addr, align 4, !dbg !14324
  %cmp19 = icmp slt i32 %65, %66, !dbg !14325
  br i1 %cmp19, label %if.then20, label %if.else24, !dbg !14326

if.then20:                                        ; preds = %if.then17
  %67 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14327
  %68 = load %struct.fbcon_display*, %struct.fbcon_display** %p.addr, align 8, !dbg !14329
  %69 = load i32, i32* %sy.addr, align 4, !dbg !14330
  %70 = load i32, i32* %sx.addr, align 4, !dbg !14331
  %71 = load i32, i32* %dy.addr, align 4, !dbg !14332
  %72 = load i32, i32* %dx.addr, align 4, !dbg !14333
  %73 = load i32, i32* %b, align 4, !dbg !14334
  %74 = load i32, i32* %width.addr, align 4, !dbg !14335
  %75 = load i32, i32* %y_break.addr, align 4, !dbg !14336
  call void @fbcon_bmove_rec(%struct.vc_data* %67, %struct.fbcon_display* %68, i32 %69, i32 %70, i32 %71, i32 %72, i32 %73, i32 %74, i32 %75) #10, !dbg !14337
  %76 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14338
  %77 = load %struct.fbcon_display*, %struct.fbcon_display** %p.addr, align 8, !dbg !14339
  %78 = load i32, i32* %sy.addr, align 4, !dbg !14340
  %79 = load i32, i32* %b, align 4, !dbg !14341
  %add21 = add i32 %78, %79, !dbg !14342
  %80 = load i32, i32* %sx.addr, align 4, !dbg !14343
  %81 = load i32, i32* %dy.addr, align 4, !dbg !14344
  %82 = load i32, i32* %b, align 4, !dbg !14345
  %add22 = add i32 %81, %82, !dbg !14346
  %83 = load i32, i32* %dx.addr, align 4, !dbg !14347
  %84 = load i32, i32* %height.addr, align 4, !dbg !14348
  %85 = load i32, i32* %b, align 4, !dbg !14349
  %sub23 = sub i32 %84, %85, !dbg !14350
  %86 = load i32, i32* %width.addr, align 4, !dbg !14351
  %87 = load i32, i32* %y_break.addr, align 4, !dbg !14352
  call void @fbcon_bmove_rec(%struct.vc_data* %76, %struct.fbcon_display* %77, i32 %add21, i32 %80, i32 %add22, i32 %83, i32 %sub23, i32 %86, i32 %87) #10, !dbg !14353
  br label %if.end28, !dbg !14354

if.else24:                                        ; preds = %if.then17
  %88 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14355
  %89 = load %struct.fbcon_display*, %struct.fbcon_display** %p.addr, align 8, !dbg !14357
  %90 = load i32, i32* %sy.addr, align 4, !dbg !14358
  %91 = load i32, i32* %b, align 4, !dbg !14359
  %add25 = add i32 %90, %91, !dbg !14360
  %92 = load i32, i32* %sx.addr, align 4, !dbg !14361
  %93 = load i32, i32* %dy.addr, align 4, !dbg !14362
  %94 = load i32, i32* %b, align 4, !dbg !14363
  %add26 = add i32 %93, %94, !dbg !14364
  %95 = load i32, i32* %dx.addr, align 4, !dbg !14365
  %96 = load i32, i32* %height.addr, align 4, !dbg !14366
  %97 = load i32, i32* %b, align 4, !dbg !14367
  %sub27 = sub i32 %96, %97, !dbg !14368
  %98 = load i32, i32* %width.addr, align 4, !dbg !14369
  %99 = load i32, i32* %y_break.addr, align 4, !dbg !14370
  call void @fbcon_bmove_rec(%struct.vc_data* %88, %struct.fbcon_display* %89, i32 %add25, i32 %92, i32 %add26, i32 %95, i32 %sub27, i32 %98, i32 %99) #10, !dbg !14371
  %100 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14372
  %101 = load %struct.fbcon_display*, %struct.fbcon_display** %p.addr, align 8, !dbg !14373
  %102 = load i32, i32* %sy.addr, align 4, !dbg !14374
  %103 = load i32, i32* %sx.addr, align 4, !dbg !14375
  %104 = load i32, i32* %dy.addr, align 4, !dbg !14376
  %105 = load i32, i32* %dx.addr, align 4, !dbg !14377
  %106 = load i32, i32* %b, align 4, !dbg !14378
  %107 = load i32, i32* %width.addr, align 4, !dbg !14379
  %108 = load i32, i32* %y_break.addr, align 4, !dbg !14380
  call void @fbcon_bmove_rec(%struct.vc_data* %100, %struct.fbcon_display* %101, i32 %102, i32 %103, i32 %104, i32 %105, i32 %106, i32 %107, i32 %108) #10, !dbg !14381
  br label %if.end28

if.end28:                                         ; preds = %if.else24, %if.then20
  br label %return, !dbg !14382

if.end29:                                         ; preds = %land.lhs.true14, %if.end12
  %109 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !14383
  %bmove = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %109, i32 0, i32 0, !dbg !14384
  %110 = load void (%struct.vc_data*, %struct.fb_info*, i32, i32, i32, i32, i32, i32)*, void (%struct.vc_data*, %struct.fb_info*, i32, i32, i32, i32, i32, i32)** %bmove, align 8, !dbg !14384
  %111 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14385
  %112 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !14386
  %113 = load %struct.fbcon_display*, %struct.fbcon_display** %p.addr, align 8, !dbg !14387
  %114 = load i32, i32* %sy.addr, align 4, !dbg !14388
  %call = call i32 @real_y(%struct.fbcon_display* %113, i32 %114) #10, !dbg !14389
  %115 = load i32, i32* %sx.addr, align 4, !dbg !14390
  %116 = load %struct.fbcon_display*, %struct.fbcon_display** %p.addr, align 8, !dbg !14391
  %117 = load i32, i32* %dy.addr, align 4, !dbg !14392
  %call30 = call i32 @real_y(%struct.fbcon_display* %116, i32 %117) #10, !dbg !14393
  %118 = load i32, i32* %dx.addr, align 4, !dbg !14394
  %119 = load i32, i32* %height.addr, align 4, !dbg !14395
  %120 = load i32, i32* %width.addr, align 4, !dbg !14396
  call void %110(%struct.vc_data* %111, %struct.fb_info* %112, i32 %call, i32 %115, i32 %call30, i32 %118, i32 %119, i32 %120) #10, !dbg !14383
  br label %return, !dbg !14397

return:                                           ; preds = %if.end29, %if.end28, %if.end
  ret void, !dbg !14397
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #6

; Function Attrs: noredzone
declare dso_local i32 @fb_show_logo(%struct.fb_info*, i32) #3

; Function Attrs: noredzone
declare dso_local void @update_region(%struct.vc_data*, i64, i32) #3

; Function Attrs: noredzone
declare dso_local i32 @fb_blank(%struct.fb_info*, i32) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @fbcon_generic_blank(%struct.vc_data* %vc, %struct.fb_info* %info, i32 %blank) #1 !dbg !14398 {
entry:
  %vc.addr = alloca %struct.vc_data*, align 8
  %info.addr = alloca %struct.fb_info*, align 8
  %blank.addr = alloca i32, align 4
  %charmask = alloca i16, align 2
  %oldc = alloca i16, align 2
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !14401, metadata !DIExpression()), !dbg !14402
  store %struct.fb_info* %info, %struct.fb_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fb_info** %info.addr, metadata !14403, metadata !DIExpression()), !dbg !14404
  store i32 %blank, i32* %blank.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %blank.addr, metadata !14405, metadata !DIExpression()), !dbg !14406
  %0 = load i32, i32* %blank.addr, align 4, !dbg !14407
  %tobool = icmp ne i32 %0, 0, !dbg !14407
  br i1 %tobool, label %if.then, label %if.end, !dbg !14409

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i16* %charmask, metadata !14410, metadata !DIExpression()), !dbg !14412
  %1 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14413
  %vc_hi_font_mask = getelementptr inbounds %struct.vc_data, %struct.vc_data* %1, i32 0, i32 26, !dbg !14414
  %2 = load i16, i16* %vc_hi_font_mask, align 8, !dbg !14414
  %conv = zext i16 %2 to i32, !dbg !14413
  %tobool1 = icmp ne i32 %conv, 0, !dbg !14413
  %3 = zext i1 %tobool1 to i64, !dbg !14413
  %cond = select i1 %tobool1, i32 511, i32 255, !dbg !14413
  %conv2 = trunc i32 %cond to i16, !dbg !14413
  store i16 %conv2, i16* %charmask, align 2, !dbg !14412
  call void @llvm.dbg.declare(metadata i16* %oldc, metadata !14415, metadata !DIExpression()), !dbg !14416
  %4 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14417
  %vc_video_erase_char = getelementptr inbounds %struct.vc_data, %struct.vc_data* %4, i32 0, i32 28, !dbg !14418
  %5 = load i16, i16* %vc_video_erase_char, align 8, !dbg !14418
  store i16 %5, i16* %oldc, align 2, !dbg !14419
  %6 = load i16, i16* %charmask, align 2, !dbg !14420
  %conv3 = zext i16 %6 to i32, !dbg !14420
  %7 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14421
  %vc_video_erase_char4 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %7, i32 0, i32 28, !dbg !14422
  %8 = load i16, i16* %vc_video_erase_char4, align 8, !dbg !14423
  %conv5 = zext i16 %8 to i32, !dbg !14423
  %and = and i32 %conv5, %conv3, !dbg !14423
  %conv6 = trunc i32 %and to i16, !dbg !14423
  store i16 %conv6, i16* %vc_video_erase_char4, align 8, !dbg !14423
  %9 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14424
  %10 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14425
  %vc_rows = getelementptr inbounds %struct.vc_data, %struct.vc_data* %10, i32 0, i32 5, !dbg !14426
  %11 = load i32, i32* %vc_rows, align 8, !dbg !14426
  %12 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14427
  %vc_cols = getelementptr inbounds %struct.vc_data, %struct.vc_data* %12, i32 0, i32 4, !dbg !14428
  %13 = load i32, i32* %vc_cols, align 4, !dbg !14428
  call void @fbcon_clear(%struct.vc_data* %9, i32 0, i32 0, i32 %11, i32 %13) #10, !dbg !14429
  %14 = load i16, i16* %oldc, align 2, !dbg !14430
  %15 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14431
  %vc_video_erase_char7 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %15, i32 0, i32 28, !dbg !14432
  store i16 %14, i16* %vc_video_erase_char7, align 8, !dbg !14433
  br label %if.end, !dbg !14434

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !14435
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @fbcon_invalid_charcount(%struct.fb_info* %info, i32 %charcount) #1 !dbg !14436 {
entry:
  %info.addr = alloca %struct.fb_info*, align 8
  %charcount.addr = alloca i32, align 4
  %err = alloca i32, align 4
  store %struct.fb_info* %info, %struct.fb_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fb_info** %info.addr, metadata !14439, metadata !DIExpression()), !dbg !14440
  store i32 %charcount, i32* %charcount.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %charcount.addr, metadata !14441, metadata !DIExpression()), !dbg !14442
  call void @llvm.dbg.declare(metadata i32* %err, metadata !14443, metadata !DIExpression()), !dbg !14444
  store i32 0, i32* %err, align 4, !dbg !14444
  %0 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !14445
  %flags = getelementptr inbounds %struct.fb_info, %struct.fb_info* %0, i32 0, i32 2, !dbg !14447
  %1 = load i32, i32* %flags, align 8, !dbg !14447
  %and = and i32 %1, 131072, !dbg !14448
  %tobool = icmp ne i32 %and, 0, !dbg !14448
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !14449

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !14450
  %tileops = getelementptr inbounds %struct.fb_info, %struct.fb_info* %2, i32 0, i32 24, !dbg !14451
  %3 = load %struct.fb_tile_ops*, %struct.fb_tile_ops** %tileops, align 8, !dbg !14451
  %fb_get_tilemax = getelementptr inbounds %struct.fb_tile_ops, %struct.fb_tile_ops* %3, i32 0, i32 5, !dbg !14452
  %4 = load i32 (%struct.fb_info*)*, i32 (%struct.fb_info*)** %fb_get_tilemax, align 8, !dbg !14452
  %5 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !14453
  %call = call i32 %4(%struct.fb_info* %5) #10, !dbg !14450
  %6 = load i32, i32* %charcount.addr, align 4, !dbg !14454
  %cmp = icmp ult i32 %call, %6, !dbg !14455
  br i1 %cmp, label %if.then, label %if.end, !dbg !14456

if.then:                                          ; preds = %land.lhs.true
  store i32 1, i32* %err, align 4, !dbg !14457
  br label %if.end, !dbg !14458

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %7 = load i32, i32* %err, align 4, !dbg !14459
  ret i32 %7, !dbg !14460
}

; Function Attrs: noredzone nounwind readonly
declare dso_local i32 @crc32_le(i32, i8*, i64) #9

; Function Attrs: noredzone
declare dso_local i32 @memcmp(i8*, i8*, i64) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @fbcon_do_set_font(%struct.vc_data* %vc, i32 %w, i32 %h, i8* %data, i32 %userfont) #1 !dbg !14461 {
entry:
  %vc.addr = alloca %struct.vc_data*, align 8
  %w.addr = alloca i32, align 4
  %h.addr = alloca i32, align 4
  %data.addr = alloca i8*, align 8
  %userfont.addr = alloca i32, align 4
  %info = alloca %struct.fb_info*, align 8
  %ops = alloca %struct.fbcon_ops*, align 8
  %p = alloca %struct.fbcon_display*, align 8
  %resize = alloca i32, align 4
  %cnt = alloca i32, align 4
  %old_data = alloca i8*, align 8
  %cols = alloca i32, align 4
  %rows = alloca i32, align 4
  %_r = alloca i32, align 4
  %_v = alloca i32, align 4
  %tmp = alloca i32, align 4
  %_r49 = alloca i32, align 4
  %_v52 = alloca i32, align 4
  %tmp57 = alloca i32, align 4
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !14466, metadata !DIExpression()), !dbg !14467
  store i32 %w, i32* %w.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr, metadata !14468, metadata !DIExpression()), !dbg !14469
  store i32 %h, i32* %h.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %h.addr, metadata !14470, metadata !DIExpression()), !dbg !14471
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !14472, metadata !DIExpression()), !dbg !14473
  store i32 %userfont, i32* %userfont.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %userfont.addr, metadata !14474, metadata !DIExpression()), !dbg !14475
  call void @llvm.dbg.declare(metadata %struct.fb_info** %info, metadata !14476, metadata !DIExpression()), !dbg !14477
  %0 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14478
  %vc_num = getelementptr inbounds %struct.vc_data, %struct.vc_data* %0, i32 0, i32 3, !dbg !14479
  %1 = load i16, i16* %vc_num, align 8, !dbg !14479
  %idxprom = zext i16 %1 to i64, !dbg !14480
  %arrayidx = getelementptr [63 x i8], [63 x i8]* @con2fb_map, i64 0, i64 %idxprom, !dbg !14480
  %2 = load i8, i8* %arrayidx, align 1, !dbg !14480
  %idxprom1 = sext i8 %2 to i64, !dbg !14481
  %arrayidx2 = getelementptr [32 x %struct.fb_info*], [32 x %struct.fb_info*]* @registered_fb, i64 0, i64 %idxprom1, !dbg !14481
  %3 = load %struct.fb_info*, %struct.fb_info** %arrayidx2, align 8, !dbg !14481
  store %struct.fb_info* %3, %struct.fb_info** %info, align 8, !dbg !14477
  call void @llvm.dbg.declare(metadata %struct.fbcon_ops** %ops, metadata !14482, metadata !DIExpression()), !dbg !14483
  %4 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !14484
  %fbcon_par = getelementptr inbounds %struct.fb_info, %struct.fb_info* %4, i32 0, i32 29, !dbg !14485
  %5 = load i8*, i8** %fbcon_par, align 8, !dbg !14485
  %6 = bitcast i8* %5 to %struct.fbcon_ops*, !dbg !14484
  store %struct.fbcon_ops* %6, %struct.fbcon_ops** %ops, align 8, !dbg !14483
  call void @llvm.dbg.declare(metadata %struct.fbcon_display** %p, metadata !14486, metadata !DIExpression()), !dbg !14487
  %7 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14488
  %vc_num3 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %7, i32 0, i32 3, !dbg !14489
  %8 = load i16, i16* %vc_num3, align 8, !dbg !14489
  %idxprom4 = zext i16 %8 to i64, !dbg !14490
  %arrayidx5 = getelementptr [63 x %struct.fbcon_display], [63 x %struct.fbcon_display]* @fb_display, i64 0, i64 %idxprom4, !dbg !14490
  store %struct.fbcon_display* %arrayidx5, %struct.fbcon_display** %p, align 8, !dbg !14487
  call void @llvm.dbg.declare(metadata i32* %resize, metadata !14491, metadata !DIExpression()), !dbg !14492
  call void @llvm.dbg.declare(metadata i32* %cnt, metadata !14493, metadata !DIExpression()), !dbg !14494
  call void @llvm.dbg.declare(metadata i8** %old_data, metadata !14495, metadata !DIExpression()), !dbg !14496
  store i8* null, i8** %old_data, align 8, !dbg !14496
  %9 = load i32, i32* %w.addr, align 4, !dbg !14497
  %10 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14498
  %vc_font = getelementptr inbounds %struct.vc_data, %struct.vc_data* %10, i32 0, i32 27, !dbg !14499
  %width = getelementptr inbounds %struct.console_font, %struct.console_font* %vc_font, i32 0, i32 0, !dbg !14500
  %11 = load i32, i32* %width, align 8, !dbg !14500
  %cmp = icmp ne i32 %9, %11, !dbg !14501
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !14502

lor.rhs:                                          ; preds = %entry
  %12 = load i32, i32* %h.addr, align 4, !dbg !14503
  %13 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14504
  %vc_font6 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %13, i32 0, i32 27, !dbg !14505
  %height = getelementptr inbounds %struct.console_font, %struct.console_font* %vc_font6, i32 0, i32 1, !dbg !14506
  %14 = load i32, i32* %height, align 4, !dbg !14506
  %cmp7 = icmp ne i32 %12, %14, !dbg !14507
  br label %lor.end, !dbg !14502

lor.end:                                          ; preds = %lor.rhs, %entry
  %15 = phi i1 [ true, %entry ], [ %cmp7, %lor.rhs ]
  %lor.ext = zext i1 %15 to i32, !dbg !14502
  store i32 %lor.ext, i32* %resize, align 4, !dbg !14508
  %16 = load %struct.fbcon_display*, %struct.fbcon_display** %p, align 8, !dbg !14509
  %userfont8 = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %16, i32 0, i32 1, !dbg !14511
  %17 = load i32, i32* %userfont8, align 8, !dbg !14511
  %tobool = icmp ne i32 %17, 0, !dbg !14509
  br i1 %tobool, label %if.then, label %if.end, !dbg !14512

if.then:                                          ; preds = %lor.end
  %18 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14513
  %vc_font9 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %18, i32 0, i32 27, !dbg !14514
  %data10 = getelementptr inbounds %struct.console_font, %struct.console_font* %vc_font9, i32 0, i32 3, !dbg !14515
  %19 = load i8*, i8** %data10, align 8, !dbg !14515
  store i8* %19, i8** %old_data, align 8, !dbg !14516
  br label %if.end, !dbg !14517

if.end:                                           ; preds = %if.then, %lor.end
  %20 = load i32, i32* %userfont.addr, align 4, !dbg !14518
  %tobool11 = icmp ne i32 %20, 0, !dbg !14518
  br i1 %tobool11, label %if.then12, label %if.else, !dbg !14520

if.then12:                                        ; preds = %if.end
  %21 = load i8*, i8** %data.addr, align 8, !dbg !14521
  %22 = bitcast i8* %21 to i32*, !dbg !14521
  %arrayidx13 = getelementptr i32, i32* %22, i64 -3, !dbg !14521
  %23 = load i32, i32* %arrayidx13, align 4, !dbg !14521
  store i32 %23, i32* %cnt, align 4, !dbg !14522
  br label %if.end14, !dbg !14523

if.else:                                          ; preds = %if.end
  store i32 256, i32* %cnt, align 4, !dbg !14524
  br label %if.end14

if.end14:                                         ; preds = %if.else, %if.then12
  %24 = load i8*, i8** %data.addr, align 8, !dbg !14525
  %25 = load %struct.fbcon_display*, %struct.fbcon_display** %p, align 8, !dbg !14526
  %fontdata = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %25, i32 0, i32 0, !dbg !14527
  store i8* %24, i8** %fontdata, align 8, !dbg !14528
  %26 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14529
  %vc_font15 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %26, i32 0, i32 27, !dbg !14530
  %data16 = getelementptr inbounds %struct.console_font, %struct.console_font* %vc_font15, i32 0, i32 3, !dbg !14531
  store i8* %24, i8** %data16, align 8, !dbg !14532
  %27 = load i32, i32* %userfont.addr, align 4, !dbg !14533
  %28 = load %struct.fbcon_display*, %struct.fbcon_display** %p, align 8, !dbg !14535
  %userfont17 = getelementptr inbounds %struct.fbcon_display, %struct.fbcon_display* %28, i32 0, i32 1, !dbg !14536
  store i32 %27, i32* %userfont17, align 8, !dbg !14537
  %tobool18 = icmp ne i32 %27, 0, !dbg !14537
  br i1 %tobool18, label %if.then19, label %if.end21, !dbg !14538

if.then19:                                        ; preds = %if.end14
  %29 = load i8*, i8** %data.addr, align 8, !dbg !14539
  %30 = bitcast i8* %29 to i32*, !dbg !14539
  %arrayidx20 = getelementptr i32, i32* %30, i64 -1, !dbg !14539
  %31 = load i32, i32* %arrayidx20, align 4, !dbg !14540
  %inc = add i32 %31, 1, !dbg !14540
  store i32 %inc, i32* %arrayidx20, align 4, !dbg !14540
  br label %if.end21, !dbg !14539

if.end21:                                         ; preds = %if.then19, %if.end14
  %32 = load i32, i32* %w.addr, align 4, !dbg !14541
  %33 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14542
  %vc_font22 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %33, i32 0, i32 27, !dbg !14543
  %width23 = getelementptr inbounds %struct.console_font, %struct.console_font* %vc_font22, i32 0, i32 0, !dbg !14544
  store i32 %32, i32* %width23, align 8, !dbg !14545
  %34 = load i32, i32* %h.addr, align 4, !dbg !14546
  %35 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14547
  %vc_font24 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %35, i32 0, i32 27, !dbg !14548
  %height25 = getelementptr inbounds %struct.console_font, %struct.console_font* %vc_font24, i32 0, i32 1, !dbg !14549
  store i32 %34, i32* %height25, align 4, !dbg !14550
  %36 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14551
  %vc_hi_font_mask = getelementptr inbounds %struct.vc_data, %struct.vc_data* %36, i32 0, i32 26, !dbg !14553
  %37 = load i16, i16* %vc_hi_font_mask, align 8, !dbg !14553
  %conv = zext i16 %37 to i32, !dbg !14551
  %tobool26 = icmp ne i32 %conv, 0, !dbg !14551
  br i1 %tobool26, label %land.lhs.true, label %if.else30, !dbg !14554

land.lhs.true:                                    ; preds = %if.end21
  %38 = load i32, i32* %cnt, align 4, !dbg !14555
  %cmp27 = icmp eq i32 %38, 256, !dbg !14556
  br i1 %cmp27, label %if.then29, label %if.else30, !dbg !14557

if.then29:                                        ; preds = %land.lhs.true
  %39 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14558
  call void @set_vc_hi_font(%struct.vc_data* %39, i1 zeroext false) #10, !dbg !14559
  br label %if.end38, !dbg !14559

if.else30:                                        ; preds = %land.lhs.true, %if.end21
  %40 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14560
  %vc_hi_font_mask31 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %40, i32 0, i32 26, !dbg !14562
  %41 = load i16, i16* %vc_hi_font_mask31, align 8, !dbg !14562
  %tobool32 = icmp ne i16 %41, 0, !dbg !14560
  br i1 %tobool32, label %if.end37, label %land.lhs.true33, !dbg !14563

land.lhs.true33:                                  ; preds = %if.else30
  %42 = load i32, i32* %cnt, align 4, !dbg !14564
  %cmp34 = icmp eq i32 %42, 512, !dbg !14565
  br i1 %cmp34, label %if.then36, label %if.end37, !dbg !14566

if.then36:                                        ; preds = %land.lhs.true33
  %43 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14567
  call void @set_vc_hi_font(%struct.vc_data* %43, i1 zeroext true) #10, !dbg !14568
  br label %if.end37, !dbg !14568

if.end37:                                         ; preds = %if.then36, %land.lhs.true33, %if.else30
  br label %if.end38

if.end38:                                         ; preds = %if.end37, %if.then29
  %44 = load i32, i32* %resize, align 4, !dbg !14569
  %tobool39 = icmp ne i32 %44, 0, !dbg !14569
  br i1 %tobool39, label %if.then40, label %if.else70, !dbg !14571

if.then40:                                        ; preds = %if.end38
  call void @llvm.dbg.declare(metadata i32* %cols, metadata !14572, metadata !DIExpression()), !dbg !14574
  call void @llvm.dbg.declare(metadata i32* %rows, metadata !14575, metadata !DIExpression()), !dbg !14576
  call void @llvm.dbg.declare(metadata i32* %_r, metadata !14577, metadata !DIExpression()), !dbg !14579
  %45 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !14579
  %var = getelementptr inbounds %struct.fb_info, %struct.fb_info* %45, i32 0, i32 6, !dbg !14579
  %xres = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %var, i32 0, i32 0, !dbg !14579
  %46 = load i32, i32* %xres, align 8, !dbg !14579
  store i32 %46, i32* %_r, align 4, !dbg !14579
  call void @llvm.dbg.declare(metadata i32* %_v, metadata !14580, metadata !DIExpression()), !dbg !14579
  %47 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !14579
  %var41 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %47, i32 0, i32 6, !dbg !14579
  %yres = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %var41, i32 0, i32 1, !dbg !14579
  %48 = load i32, i32* %yres, align 4, !dbg !14579
  store i32 %48, i32* %_v, align 4, !dbg !14579
  %cmp42 = icmp eq i32* %_r, %_v, !dbg !14579
  %conv43 = zext i1 %cmp42 to i32, !dbg !14579
  %49 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !14579
  %rotate = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %49, i32 0, i32 20, !dbg !14579
  %50 = load i32, i32* %rotate, align 8, !dbg !14579
  %cmp44 = icmp eq i32 %50, 0, !dbg !14579
  br i1 %cmp44, label %cond.true, label %lor.lhs.false, !dbg !14579

lor.lhs.false:                                    ; preds = %if.then40
  %51 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !14579
  %rotate46 = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %51, i32 0, i32 20, !dbg !14579
  %52 = load i32, i32* %rotate46, align 8, !dbg !14579
  %cmp47 = icmp eq i32 %52, 2, !dbg !14579
  br i1 %cmp47, label %cond.true, label %cond.false, !dbg !14579

cond.true:                                        ; preds = %lor.lhs.false, %if.then40
  %53 = load i32, i32* %_r, align 4, !dbg !14579
  br label %cond.end, !dbg !14579

cond.false:                                       ; preds = %lor.lhs.false
  %54 = load i32, i32* %_v, align 4, !dbg !14579
  br label %cond.end, !dbg !14579

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %53, %cond.true ], [ %54, %cond.false ], !dbg !14579
  store i32 %cond, i32* %tmp, align 4, !dbg !14579
  %55 = load i32, i32* %tmp, align 4, !dbg !14579
  store i32 %55, i32* %cols, align 4, !dbg !14581
  call void @llvm.dbg.declare(metadata i32* %_r49, metadata !14582, metadata !DIExpression()), !dbg !14584
  %56 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !14584
  %var50 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %56, i32 0, i32 6, !dbg !14584
  %yres51 = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %var50, i32 0, i32 1, !dbg !14584
  %57 = load i32, i32* %yres51, align 4, !dbg !14584
  store i32 %57, i32* %_r49, align 4, !dbg !14584
  call void @llvm.dbg.declare(metadata i32* %_v52, metadata !14585, metadata !DIExpression()), !dbg !14584
  %58 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !14584
  %var53 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %58, i32 0, i32 6, !dbg !14584
  %xres54 = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %var53, i32 0, i32 0, !dbg !14584
  %59 = load i32, i32* %xres54, align 8, !dbg !14584
  store i32 %59, i32* %_v52, align 4, !dbg !14584
  %cmp55 = icmp eq i32* %_r49, %_v52, !dbg !14584
  %conv56 = zext i1 %cmp55 to i32, !dbg !14584
  %60 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !14584
  %rotate58 = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %60, i32 0, i32 20, !dbg !14584
  %61 = load i32, i32* %rotate58, align 8, !dbg !14584
  %cmp59 = icmp eq i32 %61, 0, !dbg !14584
  br i1 %cmp59, label %cond.true65, label %lor.lhs.false61, !dbg !14584

lor.lhs.false61:                                  ; preds = %cond.end
  %62 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !14584
  %rotate62 = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %62, i32 0, i32 20, !dbg !14584
  %63 = load i32, i32* %rotate62, align 8, !dbg !14584
  %cmp63 = icmp eq i32 %63, 2, !dbg !14584
  br i1 %cmp63, label %cond.true65, label %cond.false66, !dbg !14584

cond.true65:                                      ; preds = %lor.lhs.false61, %cond.end
  %64 = load i32, i32* %_r49, align 4, !dbg !14584
  br label %cond.end67, !dbg !14584

cond.false66:                                     ; preds = %lor.lhs.false61
  %65 = load i32, i32* %_v52, align 4, !dbg !14584
  br label %cond.end67, !dbg !14584

cond.end67:                                       ; preds = %cond.false66, %cond.true65
  %cond68 = phi i32 [ %64, %cond.true65 ], [ %65, %cond.false66 ], !dbg !14584
  store i32 %cond68, i32* %tmp57, align 4, !dbg !14584
  %66 = load i32, i32* %tmp57, align 4, !dbg !14584
  store i32 %66, i32* %rows, align 4, !dbg !14586
  %67 = load i32, i32* %w.addr, align 4, !dbg !14587
  %68 = load i32, i32* %cols, align 4, !dbg !14588
  %div = sdiv i32 %68, %67, !dbg !14588
  store i32 %div, i32* %cols, align 4, !dbg !14588
  %69 = load i32, i32* %h.addr, align 4, !dbg !14589
  %70 = load i32, i32* %rows, align 4, !dbg !14590
  %div69 = sdiv i32 %70, %69, !dbg !14590
  store i32 %div69, i32* %rows, align 4, !dbg !14590
  %71 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14591
  %72 = load i32, i32* %cols, align 4, !dbg !14592
  %73 = load i32, i32* %rows, align 4, !dbg !14593
  %call = call i32 @vc_resize(%struct.vc_data* %71, i32 %72, i32 %73) #10, !dbg !14594
  br label %if.end79, !dbg !14595

if.else70:                                        ; preds = %if.end38
  %74 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14596
  %call71 = call zeroext i1 @con_is_visible(%struct.vc_data* %74) #10, !dbg !14598
  br i1 %call71, label %land.lhs.true73, label %if.end78, !dbg !14599

land.lhs.true73:                                  ; preds = %if.else70
  %75 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14600
  %vc_mode = getelementptr inbounds %struct.vc_data, %struct.vc_data* %75, i32 0, i32 16, !dbg !14601
  %76 = load i8, i8* %vc_mode, align 4, !dbg !14601
  %conv74 = zext i8 %76 to i32, !dbg !14600
  %cmp75 = icmp eq i32 %conv74, 0, !dbg !14602
  br i1 %cmp75, label %if.then77, label %if.end78, !dbg !14603

if.then77:                                        ; preds = %land.lhs.true73
  %77 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14604
  call void @fbcon_clear_margins(%struct.vc_data* %77, i32 0) #10, !dbg !14606
  %78 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14607
  call void @redraw_screen(%struct.vc_data* %78, i32 0) #10, !dbg !14607
  br label %if.end78, !dbg !14608

if.end78:                                         ; preds = %if.then77, %land.lhs.true73, %if.else70
  br label %if.end79

if.end79:                                         ; preds = %if.end78, %cond.end67
  %79 = load i8*, i8** %old_data, align 8, !dbg !14609
  %tobool80 = icmp ne i8* %79, null, !dbg !14609
  br i1 %tobool80, label %land.lhs.true81, label %if.end86, !dbg !14611

land.lhs.true81:                                  ; preds = %if.end79
  %80 = load i8*, i8** %old_data, align 8, !dbg !14612
  %81 = bitcast i8* %80 to i32*, !dbg !14612
  %arrayidx82 = getelementptr i32, i32* %81, i64 -1, !dbg !14612
  %82 = load i32, i32* %arrayidx82, align 4, !dbg !14613
  %dec = add i32 %82, -1, !dbg !14613
  store i32 %dec, i32* %arrayidx82, align 4, !dbg !14613
  %cmp83 = icmp eq i32 %dec, 0, !dbg !14614
  br i1 %cmp83, label %if.then85, label %if.end86, !dbg !14615

if.then85:                                        ; preds = %land.lhs.true81
  %83 = load i8*, i8** %old_data, align 8, !dbg !14616
  %add.ptr = getelementptr i8, i8* %83, i64 -16, !dbg !14617
  call void @kfree(i8* %add.ptr) #10, !dbg !14618
  br label %if.end86, !dbg !14618

if.end86:                                         ; preds = %if.then85, %land.lhs.true81, %if.end79
  ret i32 0, !dbg !14619
}

; Function Attrs: noredzone
declare dso_local %struct.fb_videomode* @fb_find_best_mode(%struct.fb_var_screeninfo*, %struct.list_head*) #3

; Function Attrs: noredzone
declare dso_local i32 @device_create_file(%struct.device*, %struct.device_attribute*) #3

; Function Attrs: noredzone
declare dso_local void @device_remove_file(%struct.device*, %struct.device_attribute*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @show_rotate(%struct.device* %device, %struct.device_attribute* %attr, i8* %buf) #1 !dbg !14620 {
entry:
  %device.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %info = alloca %struct.fb_info*, align 8
  %rotate = alloca i32, align 4
  %idx = alloca i32, align 4
  store %struct.device* %device, %struct.device** %device.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %device.addr, metadata !14621, metadata !DIExpression()), !dbg !14622
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !14623, metadata !DIExpression()), !dbg !14624
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !14625, metadata !DIExpression()), !dbg !14626
  call void @llvm.dbg.declare(metadata %struct.fb_info** %info, metadata !14627, metadata !DIExpression()), !dbg !14628
  call void @llvm.dbg.declare(metadata i32* %rotate, metadata !14629, metadata !DIExpression()), !dbg !14630
  store i32 0, i32* %rotate, align 4, !dbg !14630
  call void @llvm.dbg.declare(metadata i32* %idx, metadata !14631, metadata !DIExpression()), !dbg !14632
  call void @console_lock() #10, !dbg !14633
  %0 = load i32, i32* @fg_console, align 4, !dbg !14634
  %idxprom = sext i32 %0 to i64, !dbg !14635
  %arrayidx = getelementptr [63 x i8], [63 x i8]* @con2fb_map, i64 0, i64 %idxprom, !dbg !14635
  %1 = load i8, i8* %arrayidx, align 1, !dbg !14635
  %conv = sext i8 %1 to i32, !dbg !14635
  store i32 %conv, i32* %idx, align 4, !dbg !14636
  %2 = load i32, i32* %idx, align 4, !dbg !14637
  %cmp = icmp eq i32 %2, -1, !dbg !14639
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !14640

lor.lhs.false:                                    ; preds = %entry
  %3 = load i32, i32* %idx, align 4, !dbg !14641
  %idxprom2 = sext i32 %3 to i64, !dbg !14642
  %arrayidx3 = getelementptr [32 x %struct.fb_info*], [32 x %struct.fb_info*]* @registered_fb, i64 0, i64 %idxprom2, !dbg !14642
  %4 = load %struct.fb_info*, %struct.fb_info** %arrayidx3, align 8, !dbg !14642
  %cmp4 = icmp eq %struct.fb_info* %4, null, !dbg !14643
  br i1 %cmp4, label %if.then, label %if.end, !dbg !14644

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %err, !dbg !14645

if.end:                                           ; preds = %lor.lhs.false
  %5 = load i32, i32* %idx, align 4, !dbg !14646
  %idxprom6 = sext i32 %5 to i64, !dbg !14647
  %arrayidx7 = getelementptr [32 x %struct.fb_info*], [32 x %struct.fb_info*]* @registered_fb, i64 0, i64 %idxprom6, !dbg !14647
  %6 = load %struct.fb_info*, %struct.fb_info** %arrayidx7, align 8, !dbg !14647
  store %struct.fb_info* %6, %struct.fb_info** %info, align 8, !dbg !14648
  %7 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !14649
  %call = call i32 @fbcon_get_rotate(%struct.fb_info* %7) #10, !dbg !14650
  store i32 %call, i32* %rotate, align 4, !dbg !14651
  br label %err, !dbg !14652

err:                                              ; preds = %if.end, %if.then
  call void @llvm.dbg.label(metadata !14653), !dbg !14654
  call void @console_unlock() #10, !dbg !14655
  %8 = load i8*, i8** %buf.addr, align 8, !dbg !14656
  %9 = load i32, i32* %rotate, align 4, !dbg !14657
  %call8 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %8, i64 4096, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.29, i64 0, i64 0), i32 %9) #10, !dbg !14658
  %conv9 = sext i32 %call8 to i64, !dbg !14658
  ret i64 %conv9, !dbg !14659
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @store_rotate(%struct.device* %device, %struct.device_attribute* %attr, i8* %buf, i64 %count) #1 !dbg !14660 {
entry:
  %device.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %count.addr = alloca i64, align 8
  %info = alloca %struct.fb_info*, align 8
  %rotate = alloca i32, align 4
  %idx = alloca i32, align 4
  %last = alloca i8**, align 8
  store %struct.device* %device, %struct.device** %device.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %device.addr, metadata !14661, metadata !DIExpression()), !dbg !14662
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !14663, metadata !DIExpression()), !dbg !14664
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !14665, metadata !DIExpression()), !dbg !14666
  store i64 %count, i64* %count.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !14667, metadata !DIExpression()), !dbg !14668
  call void @llvm.dbg.declare(metadata %struct.fb_info** %info, metadata !14669, metadata !DIExpression()), !dbg !14670
  call void @llvm.dbg.declare(metadata i32* %rotate, metadata !14671, metadata !DIExpression()), !dbg !14672
  call void @llvm.dbg.declare(metadata i32* %idx, metadata !14673, metadata !DIExpression()), !dbg !14674
  call void @llvm.dbg.declare(metadata i8*** %last, metadata !14675, metadata !DIExpression()), !dbg !14677
  store i8** null, i8*** %last, align 8, !dbg !14677
  call void @console_lock() #10, !dbg !14678
  %0 = load i32, i32* @fg_console, align 4, !dbg !14679
  %idxprom = sext i32 %0 to i64, !dbg !14680
  %arrayidx = getelementptr [63 x i8], [63 x i8]* @con2fb_map, i64 0, i64 %idxprom, !dbg !14680
  %1 = load i8, i8* %arrayidx, align 1, !dbg !14680
  %conv = sext i8 %1 to i32, !dbg !14680
  store i32 %conv, i32* %idx, align 4, !dbg !14681
  %2 = load i32, i32* %idx, align 4, !dbg !14682
  %cmp = icmp eq i32 %2, -1, !dbg !14684
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !14685

lor.lhs.false:                                    ; preds = %entry
  %3 = load i32, i32* %idx, align 4, !dbg !14686
  %idxprom2 = sext i32 %3 to i64, !dbg !14687
  %arrayidx3 = getelementptr [32 x %struct.fb_info*], [32 x %struct.fb_info*]* @registered_fb, i64 0, i64 %idxprom2, !dbg !14687
  %4 = load %struct.fb_info*, %struct.fb_info** %arrayidx3, align 8, !dbg !14687
  %cmp4 = icmp eq %struct.fb_info* %4, null, !dbg !14688
  br i1 %cmp4, label %if.then, label %if.end, !dbg !14689

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %err, !dbg !14690

if.end:                                           ; preds = %lor.lhs.false
  %5 = load i32, i32* %idx, align 4, !dbg !14691
  %idxprom6 = sext i32 %5 to i64, !dbg !14692
  %arrayidx7 = getelementptr [32 x %struct.fb_info*], [32 x %struct.fb_info*]* @registered_fb, i64 0, i64 %idxprom6, !dbg !14692
  %6 = load %struct.fb_info*, %struct.fb_info** %arrayidx7, align 8, !dbg !14692
  store %struct.fb_info* %6, %struct.fb_info** %info, align 8, !dbg !14693
  %7 = load i8*, i8** %buf.addr, align 8, !dbg !14694
  %8 = load i8**, i8*** %last, align 8, !dbg !14695
  %call = call i64 @simple_strtoul(i8* %7, i8** %8, i32 0) #10, !dbg !14696
  %conv8 = trunc i64 %call to i32, !dbg !14696
  store i32 %conv8, i32* %rotate, align 4, !dbg !14697
  %9 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !14698
  %10 = load i32, i32* %rotate, align 4, !dbg !14699
  call void @fbcon_rotate(%struct.fb_info* %9, i32 %10) #10, !dbg !14700
  br label %err, !dbg !14700

err:                                              ; preds = %if.end, %if.then
  call void @llvm.dbg.label(metadata !14701), !dbg !14702
  call void @console_unlock() #10, !dbg !14703
  %11 = load i64, i64* %count.addr, align 8, !dbg !14704
  ret i64 %11, !dbg !14705
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @store_rotate_all(%struct.device* %device, %struct.device_attribute* %attr, i8* %buf, i64 %count) #1 !dbg !14706 {
entry:
  %device.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %count.addr = alloca i64, align 8
  %info = alloca %struct.fb_info*, align 8
  %rotate = alloca i32, align 4
  %idx = alloca i32, align 4
  %last = alloca i8**, align 8
  store %struct.device* %device, %struct.device** %device.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %device.addr, metadata !14707, metadata !DIExpression()), !dbg !14708
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !14709, metadata !DIExpression()), !dbg !14710
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !14711, metadata !DIExpression()), !dbg !14712
  store i64 %count, i64* %count.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !14713, metadata !DIExpression()), !dbg !14714
  call void @llvm.dbg.declare(metadata %struct.fb_info** %info, metadata !14715, metadata !DIExpression()), !dbg !14716
  call void @llvm.dbg.declare(metadata i32* %rotate, metadata !14717, metadata !DIExpression()), !dbg !14718
  call void @llvm.dbg.declare(metadata i32* %idx, metadata !14719, metadata !DIExpression()), !dbg !14720
  call void @llvm.dbg.declare(metadata i8*** %last, metadata !14721, metadata !DIExpression()), !dbg !14722
  store i8** null, i8*** %last, align 8, !dbg !14722
  call void @console_lock() #10, !dbg !14723
  %0 = load i32, i32* @fg_console, align 4, !dbg !14724
  %idxprom = sext i32 %0 to i64, !dbg !14725
  %arrayidx = getelementptr [63 x i8], [63 x i8]* @con2fb_map, i64 0, i64 %idxprom, !dbg !14725
  %1 = load i8, i8* %arrayidx, align 1, !dbg !14725
  %conv = sext i8 %1 to i32, !dbg !14725
  store i32 %conv, i32* %idx, align 4, !dbg !14726
  %2 = load i32, i32* %idx, align 4, !dbg !14727
  %cmp = icmp eq i32 %2, -1, !dbg !14729
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !14730

lor.lhs.false:                                    ; preds = %entry
  %3 = load i32, i32* %idx, align 4, !dbg !14731
  %idxprom2 = sext i32 %3 to i64, !dbg !14732
  %arrayidx3 = getelementptr [32 x %struct.fb_info*], [32 x %struct.fb_info*]* @registered_fb, i64 0, i64 %idxprom2, !dbg !14732
  %4 = load %struct.fb_info*, %struct.fb_info** %arrayidx3, align 8, !dbg !14732
  %cmp4 = icmp eq %struct.fb_info* %4, null, !dbg !14733
  br i1 %cmp4, label %if.then, label %if.end, !dbg !14734

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %err, !dbg !14735

if.end:                                           ; preds = %lor.lhs.false
  %5 = load i32, i32* %idx, align 4, !dbg !14736
  %idxprom6 = sext i32 %5 to i64, !dbg !14737
  %arrayidx7 = getelementptr [32 x %struct.fb_info*], [32 x %struct.fb_info*]* @registered_fb, i64 0, i64 %idxprom6, !dbg !14737
  %6 = load %struct.fb_info*, %struct.fb_info** %arrayidx7, align 8, !dbg !14737
  store %struct.fb_info* %6, %struct.fb_info** %info, align 8, !dbg !14738
  %7 = load i8*, i8** %buf.addr, align 8, !dbg !14739
  %8 = load i8**, i8*** %last, align 8, !dbg !14740
  %call = call i64 @simple_strtoul(i8* %7, i8** %8, i32 0) #10, !dbg !14741
  %conv8 = trunc i64 %call to i32, !dbg !14741
  store i32 %conv8, i32* %rotate, align 4, !dbg !14742
  %9 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !14743
  %10 = load i32, i32* %rotate, align 4, !dbg !14744
  call void @fbcon_rotate_all(%struct.fb_info* %9, i32 %10) #10, !dbg !14745
  br label %err, !dbg !14745

err:                                              ; preds = %if.end, %if.then
  call void @llvm.dbg.label(metadata !14746), !dbg !14747
  call void @console_unlock() #10, !dbg !14748
  %11 = load i64, i64* %count.addr, align 8, !dbg !14749
  ret i64 %11, !dbg !14750
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @show_cursor_blink(%struct.device* %device, %struct.device_attribute* %attr, i8* %buf) #1 !dbg !14751 {
entry:
  %device.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %info = alloca %struct.fb_info*, align 8
  %ops = alloca %struct.fbcon_ops*, align 8
  %idx = alloca i32, align 4
  %blink = alloca i32, align 4
  store %struct.device* %device, %struct.device** %device.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %device.addr, metadata !14752, metadata !DIExpression()), !dbg !14753
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !14754, metadata !DIExpression()), !dbg !14755
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !14756, metadata !DIExpression()), !dbg !14757
  call void @llvm.dbg.declare(metadata %struct.fb_info** %info, metadata !14758, metadata !DIExpression()), !dbg !14759
  call void @llvm.dbg.declare(metadata %struct.fbcon_ops** %ops, metadata !14760, metadata !DIExpression()), !dbg !14761
  call void @llvm.dbg.declare(metadata i32* %idx, metadata !14762, metadata !DIExpression()), !dbg !14763
  call void @llvm.dbg.declare(metadata i32* %blink, metadata !14764, metadata !DIExpression()), !dbg !14765
  store i32 -1, i32* %blink, align 4, !dbg !14765
  call void @console_lock() #10, !dbg !14766
  %0 = load i32, i32* @fg_console, align 4, !dbg !14767
  %idxprom = sext i32 %0 to i64, !dbg !14768
  %arrayidx = getelementptr [63 x i8], [63 x i8]* @con2fb_map, i64 0, i64 %idxprom, !dbg !14768
  %1 = load i8, i8* %arrayidx, align 1, !dbg !14768
  %conv = sext i8 %1 to i32, !dbg !14768
  store i32 %conv, i32* %idx, align 4, !dbg !14769
  %2 = load i32, i32* %idx, align 4, !dbg !14770
  %cmp = icmp eq i32 %2, -1, !dbg !14772
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !14773

lor.lhs.false:                                    ; preds = %entry
  %3 = load i32, i32* %idx, align 4, !dbg !14774
  %idxprom2 = sext i32 %3 to i64, !dbg !14775
  %arrayidx3 = getelementptr [32 x %struct.fb_info*], [32 x %struct.fb_info*]* @registered_fb, i64 0, i64 %idxprom2, !dbg !14775
  %4 = load %struct.fb_info*, %struct.fb_info** %arrayidx3, align 8, !dbg !14775
  %cmp4 = icmp eq %struct.fb_info* %4, null, !dbg !14776
  br i1 %cmp4, label %if.then, label %if.end, !dbg !14777

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %err, !dbg !14778

if.end:                                           ; preds = %lor.lhs.false
  %5 = load i32, i32* %idx, align 4, !dbg !14779
  %idxprom6 = sext i32 %5 to i64, !dbg !14780
  %arrayidx7 = getelementptr [32 x %struct.fb_info*], [32 x %struct.fb_info*]* @registered_fb, i64 0, i64 %idxprom6, !dbg !14780
  %6 = load %struct.fb_info*, %struct.fb_info** %arrayidx7, align 8, !dbg !14780
  store %struct.fb_info* %6, %struct.fb_info** %info, align 8, !dbg !14781
  %7 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !14782
  %fbcon_par = getelementptr inbounds %struct.fb_info, %struct.fb_info* %7, i32 0, i32 29, !dbg !14783
  %8 = load i8*, i8** %fbcon_par, align 8, !dbg !14783
  %9 = bitcast i8* %8 to %struct.fbcon_ops*, !dbg !14782
  store %struct.fbcon_ops* %9, %struct.fbcon_ops** %ops, align 8, !dbg !14784
  %10 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !14785
  %tobool = icmp ne %struct.fbcon_ops* %10, null, !dbg !14785
  br i1 %tobool, label %if.end9, label %if.then8, !dbg !14787

if.then8:                                         ; preds = %if.end
  br label %err, !dbg !14788

if.end9:                                          ; preds = %if.end
  %11 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !14789
  %flags = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %11, i32 0, i32 19, !dbg !14790
  %12 = load i32, i32* %flags, align 4, !dbg !14790
  %and = and i32 %12, 2, !dbg !14791
  %tobool10 = icmp ne i32 %and, 0, !dbg !14792
  %13 = zext i1 %tobool10 to i64, !dbg !14792
  %cond = select i1 %tobool10, i32 1, i32 0, !dbg !14792
  store i32 %cond, i32* %blink, align 4, !dbg !14793
  br label %err, !dbg !14794

err:                                              ; preds = %if.end9, %if.then8, %if.then
  call void @llvm.dbg.label(metadata !14795), !dbg !14796
  call void @console_unlock() #10, !dbg !14797
  %14 = load i8*, i8** %buf.addr, align 8, !dbg !14798
  %15 = load i32, i32* %blink, align 4, !dbg !14799
  %call = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %14, i64 4096, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.29, i64 0, i64 0), i32 %15) #10, !dbg !14800
  %conv11 = sext i32 %call to i64, !dbg !14800
  ret i64 %conv11, !dbg !14801
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @store_cursor_blink(%struct.device* %device, %struct.device_attribute* %attr, i8* %buf, i64 %count) #1 !dbg !14802 {
entry:
  %device.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %count.addr = alloca i64, align 8
  %info = alloca %struct.fb_info*, align 8
  %blink = alloca i32, align 4
  %idx = alloca i32, align 4
  %last = alloca i8**, align 8
  store %struct.device* %device, %struct.device** %device.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %device.addr, metadata !14803, metadata !DIExpression()), !dbg !14804
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !14805, metadata !DIExpression()), !dbg !14806
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !14807, metadata !DIExpression()), !dbg !14808
  store i64 %count, i64* %count.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !14809, metadata !DIExpression()), !dbg !14810
  call void @llvm.dbg.declare(metadata %struct.fb_info** %info, metadata !14811, metadata !DIExpression()), !dbg !14812
  call void @llvm.dbg.declare(metadata i32* %blink, metadata !14813, metadata !DIExpression()), !dbg !14814
  call void @llvm.dbg.declare(metadata i32* %idx, metadata !14815, metadata !DIExpression()), !dbg !14816
  call void @llvm.dbg.declare(metadata i8*** %last, metadata !14817, metadata !DIExpression()), !dbg !14818
  store i8** null, i8*** %last, align 8, !dbg !14818
  call void @console_lock() #10, !dbg !14819
  %0 = load i32, i32* @fg_console, align 4, !dbg !14820
  %idxprom = sext i32 %0 to i64, !dbg !14821
  %arrayidx = getelementptr [63 x i8], [63 x i8]* @con2fb_map, i64 0, i64 %idxprom, !dbg !14821
  %1 = load i8, i8* %arrayidx, align 1, !dbg !14821
  %conv = sext i8 %1 to i32, !dbg !14821
  store i32 %conv, i32* %idx, align 4, !dbg !14822
  %2 = load i32, i32* %idx, align 4, !dbg !14823
  %cmp = icmp eq i32 %2, -1, !dbg !14825
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !14826

lor.lhs.false:                                    ; preds = %entry
  %3 = load i32, i32* %idx, align 4, !dbg !14827
  %idxprom2 = sext i32 %3 to i64, !dbg !14828
  %arrayidx3 = getelementptr [32 x %struct.fb_info*], [32 x %struct.fb_info*]* @registered_fb, i64 0, i64 %idxprom2, !dbg !14828
  %4 = load %struct.fb_info*, %struct.fb_info** %arrayidx3, align 8, !dbg !14828
  %cmp4 = icmp eq %struct.fb_info* %4, null, !dbg !14829
  br i1 %cmp4, label %if.then, label %if.end, !dbg !14830

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %err, !dbg !14831

if.end:                                           ; preds = %lor.lhs.false
  %5 = load i32, i32* %idx, align 4, !dbg !14832
  %idxprom6 = sext i32 %5 to i64, !dbg !14833
  %arrayidx7 = getelementptr [32 x %struct.fb_info*], [32 x %struct.fb_info*]* @registered_fb, i64 0, i64 %idxprom6, !dbg !14833
  %6 = load %struct.fb_info*, %struct.fb_info** %arrayidx7, align 8, !dbg !14833
  store %struct.fb_info* %6, %struct.fb_info** %info, align 8, !dbg !14834
  %7 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !14835
  %fbcon_par = getelementptr inbounds %struct.fb_info, %struct.fb_info* %7, i32 0, i32 29, !dbg !14837
  %8 = load i8*, i8** %fbcon_par, align 8, !dbg !14837
  %tobool = icmp ne i8* %8, null, !dbg !14835
  br i1 %tobool, label %if.end9, label %if.then8, !dbg !14838

if.then8:                                         ; preds = %if.end
  br label %err, !dbg !14839

if.end9:                                          ; preds = %if.end
  %9 = load i8*, i8** %buf.addr, align 8, !dbg !14840
  %10 = load i8**, i8*** %last, align 8, !dbg !14841
  %call = call i64 @simple_strtoul(i8* %9, i8** %10, i32 0) #10, !dbg !14842
  %conv10 = trunc i64 %call to i32, !dbg !14842
  store i32 %conv10, i32* %blink, align 4, !dbg !14843
  %11 = load i32, i32* %blink, align 4, !dbg !14844
  %tobool11 = icmp ne i32 %11, 0, !dbg !14844
  br i1 %tobool11, label %if.then12, label %if.else, !dbg !14846

if.then12:                                        ; preds = %if.end9
  store i32 0, i32* @fbcon_cursor_noblink, align 4, !dbg !14847
  %12 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !14849
  call void @fbcon_add_cursor_timer(%struct.fb_info* %12) #10, !dbg !14850
  br label %if.end13, !dbg !14851

if.else:                                          ; preds = %if.end9
  store i32 1, i32* @fbcon_cursor_noblink, align 4, !dbg !14852
  %13 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !14854
  call void @fbcon_del_cursor_timer(%struct.fb_info* %13) #10, !dbg !14855
  br label %if.end13

if.end13:                                         ; preds = %if.else, %if.then12
  br label %err, !dbg !14844

err:                                              ; preds = %if.end13, %if.then8, %if.then
  call void @llvm.dbg.label(metadata !14856), !dbg !14857
  call void @console_unlock() #10, !dbg !14858
  %14 = load i64, i64* %count.addr, align 8, !dbg !14859
  ret i64 %14, !dbg !14860
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @fbcon_get_rotate(%struct.fb_info* %info) #1 !dbg !14861 {
entry:
  %info.addr = alloca %struct.fb_info*, align 8
  %ops = alloca %struct.fbcon_ops*, align 8
  store %struct.fb_info* %info, %struct.fb_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fb_info** %info.addr, metadata !14862, metadata !DIExpression()), !dbg !14863
  call void @llvm.dbg.declare(metadata %struct.fbcon_ops** %ops, metadata !14864, metadata !DIExpression()), !dbg !14865
  %0 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !14866
  %fbcon_par = getelementptr inbounds %struct.fb_info, %struct.fb_info* %0, i32 0, i32 29, !dbg !14867
  %1 = load i8*, i8** %fbcon_par, align 8, !dbg !14867
  %2 = bitcast i8* %1 to %struct.fbcon_ops*, !dbg !14866
  store %struct.fbcon_ops* %2, %struct.fbcon_ops** %ops, align 8, !dbg !14865
  %3 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !14868
  %tobool = icmp ne %struct.fbcon_ops* %3, null, !dbg !14869
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !14869

cond.true:                                        ; preds = %entry
  %4 = load %struct.fbcon_ops*, %struct.fbcon_ops** %ops, align 8, !dbg !14870
  %rotate = getelementptr inbounds %struct.fbcon_ops, %struct.fbcon_ops* %4, i32 0, i32 20, !dbg !14871
  %5 = load i32, i32* %rotate, align 8, !dbg !14871
  br label %cond.end, !dbg !14869

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !14869

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %5, %cond.true ], [ 0, %cond.false ], !dbg !14869
  ret i32 %cond, !dbg !14872
}

; Function Attrs: noredzone
declare dso_local i32 @snprintf(i8*, i64, i8*, ...) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @fbcon_rotate(%struct.fb_info* %info, i32 %rotate) #1 !dbg !14873 {
entry:
  %info.addr = alloca %struct.fb_info*, align 8
  %rotate.addr = alloca i32, align 4
  store %struct.fb_info* %info, %struct.fb_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fb_info** %info.addr, metadata !14876, metadata !DIExpression()), !dbg !14877
  store i32 %rotate, i32* %rotate.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %rotate.addr, metadata !14878, metadata !DIExpression()), !dbg !14879
  ret void, !dbg !14880
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @fbcon_rotate_all(%struct.fb_info* %info, i32 %rotate) #1 !dbg !14881 {
entry:
  %info.addr = alloca %struct.fb_info*, align 8
  %rotate.addr = alloca i32, align 4
  store %struct.fb_info* %info, %struct.fb_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fb_info** %info.addr, metadata !14882, metadata !DIExpression()), !dbg !14883
  store i32 %rotate, i32* %rotate.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %rotate.addr, metadata !14884, metadata !DIExpression()), !dbg !14885
  ret void, !dbg !14886
}

attributes #0 = { cold noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readnone speculatable willreturn }
attributes #3 = { noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { cold noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone willreturn }
attributes #6 = { argmemonly nounwind willreturn }
attributes #7 = { nounwind willreturn }
attributes #8 = { noinline noredzone nounwind optnone readnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noredzone nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noredzone }
attributes #11 = { cold noredzone }
attributes #12 = { nounwind }
attributes #13 = { noredzone nounwind }
attributes #14 = { noredzone nounwind readnone }
attributes #15 = { nounwind readonly }
attributes #16 = { noredzone nounwind readonly }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!5190, !5191, !5192, !5193}
!llvm.ident = !{!5194}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "__setup_str_fb_console_setup", scope: !2, file: !3, line: 522, type: !5187, isLocal: true, isDefinition: true, align: 8)
!2 = distinct !DICompileUnit(language: DW_LANG_C89, file: !3, producer: "clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !190, globals: !5099, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "drivers/video/fbdev/core/fbcon.c", directory: "/home/lizy2001/genbc/linux")
!4 = !{!5, !13, !18, !25, !31, !36, !42, !49, !55, !64, !72, !78, !84, !91, !99, !105, !119, !126, !131, !136, !169, !175, !182}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "backlight_type", file: !6, line: 40, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./include/linux/backlight.h", directory: "/home/lizy2001/genbc/linux")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12}
!9 = !DIEnumerator(name: "BACKLIGHT_RAW", value: 1, isUnsigned: true)
!10 = !DIEnumerator(name: "BACKLIGHT_PLATFORM", value: 2, isUnsigned: true)
!11 = !DIEnumerator(name: "BACKLIGHT_FIRMWARE", value: 3, isUnsigned: true)
!12 = !DIEnumerator(name: "BACKLIGHT_TYPE_MAX", value: 4, isUnsigned: true)
!13 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "backlight_scale", file: !6, line: 90, baseType: !7, size: 32, elements: !14)
!14 = !{!15, !16, !17}
!15 = !DIEnumerator(name: "BACKLIGHT_SCALE_UNKNOWN", value: 0, isUnsigned: true)
!16 = !DIEnumerator(name: "BACKLIGHT_SCALE_LINEAR", value: 1, isUnsigned: true)
!17 = !DIEnumerator(name: "BACKLIGHT_SCALE_NON_LINEAR", value: 2, isUnsigned: true)
!18 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "migrate_mode", file: !19, line: 15, baseType: !7, size: 32, elements: !20)
!19 = !DIFile(filename: "./include/linux/migrate_mode.h", directory: "/home/lizy2001/genbc/linux")
!20 = !{!21, !22, !23, !24}
!21 = !DIEnumerator(name: "MIGRATE_ASYNC", value: 0, isUnsigned: true)
!22 = !DIEnumerator(name: "MIGRATE_SYNC_LIGHT", value: 1, isUnsigned: true)
!23 = !DIEnumerator(name: "MIGRATE_SYNC", value: 2, isUnsigned: true)
!24 = !DIEnumerator(name: "MIGRATE_SYNC_NO_COPY", value: 3, isUnsigned: true)
!25 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "page_entry_size", file: !26, line: 546, baseType: !7, size: 32, elements: !27)
!26 = !DIFile(filename: "./include/linux/mm.h", directory: "/home/lizy2001/genbc/linux")
!27 = !{!28, !29, !30}
!28 = !DIEnumerator(name: "PE_SIZE_PTE", value: 0, isUnsigned: true)
!29 = !DIEnumerator(name: "PE_SIZE_PMD", value: 1, isUnsigned: true)
!30 = !DIEnumerator(name: "PE_SIZE_PUD", value: 2, isUnsigned: true)
!31 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "hrtimer_restart", file: !32, line: 65, baseType: !7, size: 32, elements: !33)
!32 = !DIFile(filename: "./include/linux/hrtimer.h", directory: "/home/lizy2001/genbc/linux")
!33 = !{!34, !35}
!34 = !DIEnumerator(name: "HRTIMER_NORESTART", value: 0, isUnsigned: true)
!35 = !DIEnumerator(name: "HRTIMER_RESTART", value: 1, isUnsigned: true)
!36 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "timespec_type", file: !37, line: 16, baseType: !7, size: 32, elements: !38)
!37 = !DIFile(filename: "./include/linux/restart_block.h", directory: "/home/lizy2001/genbc/linux")
!38 = !{!39, !40, !41}
!39 = !DIEnumerator(name: "TT_NONE", value: 0, isUnsigned: true)
!40 = !DIEnumerator(name: "TT_NATIVE", value: 1, isUnsigned: true)
!41 = !DIEnumerator(name: "TT_COMPAT", value: 2, isUnsigned: true)
!42 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "memory_type", file: !43, line: 59, baseType: !7, size: 32, elements: !44)
!43 = !DIFile(filename: "./include/linux/memremap.h", directory: "/home/lizy2001/genbc/linux")
!44 = !{!45, !46, !47, !48}
!45 = !DIEnumerator(name: "MEMORY_DEVICE_PRIVATE", value: 1, isUnsigned: true)
!46 = !DIEnumerator(name: "MEMORY_DEVICE_FS_DAX", value: 2, isUnsigned: true)
!47 = !DIEnumerator(name: "MEMORY_DEVICE_GENERIC", value: 3, isUnsigned: true)
!48 = !DIEnumerator(name: "MEMORY_DEVICE_PCI_P2PDMA", value: 4, isUnsigned: true)
!49 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "quota_type", file: !50, line: 54, baseType: !7, size: 32, elements: !51)
!50 = !DIFile(filename: "./include/linux/quota.h", directory: "/home/lizy2001/genbc/linux")
!51 = !{!52, !53, !54}
!52 = !DIEnumerator(name: "USRQUOTA", value: 0, isUnsigned: true)
!53 = !DIEnumerator(name: "GRPQUOTA", value: 1, isUnsigned: true)
!54 = !DIEnumerator(name: "PRJQUOTA", value: 2, isUnsigned: true)
!55 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rw_hint", file: !56, line: 296, baseType: !7, size: 32, elements: !57)
!56 = !DIFile(filename: "./include/linux/fs.h", directory: "/home/lizy2001/genbc/linux")
!57 = !{!58, !59, !60, !61, !62, !63}
!58 = !DIEnumerator(name: "WRITE_LIFE_NOT_SET", value: 0, isUnsigned: true)
!59 = !DIEnumerator(name: "WRITE_LIFE_NONE", value: 1, isUnsigned: true)
!60 = !DIEnumerator(name: "WRITE_LIFE_SHORT", value: 2, isUnsigned: true)
!61 = !DIEnumerator(name: "WRITE_LIFE_MEDIUM", value: 3, isUnsigned: true)
!62 = !DIEnumerator(name: "WRITE_LIFE_LONG", value: 4, isUnsigned: true)
!63 = !DIEnumerator(name: "WRITE_LIFE_EXTREME", value: 5, isUnsigned: true)
!64 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pid_type", file: !65, line: 9, baseType: !7, size: 32, elements: !66)
!65 = !DIFile(filename: "./include/linux/pid.h", directory: "/home/lizy2001/genbc/linux")
!66 = !{!67, !68, !69, !70, !71}
!67 = !DIEnumerator(name: "PIDTYPE_PID", value: 0, isUnsigned: true)
!68 = !DIEnumerator(name: "PIDTYPE_TGID", value: 1, isUnsigned: true)
!69 = !DIEnumerator(name: "PIDTYPE_PGID", value: 2, isUnsigned: true)
!70 = !DIEnumerator(name: "PIDTYPE_SID", value: 3, isUnsigned: true)
!71 = !DIEnumerator(name: "PIDTYPE_MAX", value: 4, isUnsigned: true)
!72 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kobj_ns_type", file: !73, line: 26, baseType: !7, size: 32, elements: !74)
!73 = !DIFile(filename: "./include/linux/kobject_ns.h", directory: "/home/lizy2001/genbc/linux")
!74 = !{!75, !76, !77}
!75 = !DIEnumerator(name: "KOBJ_NS_TYPE_NONE", value: 0, isUnsigned: true)
!76 = !DIEnumerator(name: "KOBJ_NS_TYPE_NET", value: 1, isUnsigned: true)
!77 = !DIEnumerator(name: "KOBJ_NS_TYPES", value: 2, isUnsigned: true)
!78 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "probe_type", file: !79, line: 44, baseType: !7, size: 32, elements: !80)
!79 = !DIFile(filename: "./include/linux/device/driver.h", directory: "/home/lizy2001/genbc/linux")
!80 = !{!81, !82, !83}
!81 = !DIEnumerator(name: "PROBE_DEFAULT_STRATEGY", value: 0, isUnsigned: true)
!82 = !DIEnumerator(name: "PROBE_PREFER_ASYNCHRONOUS", value: 1, isUnsigned: true)
!83 = !DIEnumerator(name: "PROBE_FORCE_SYNCHRONOUS", value: 2, isUnsigned: true)
!84 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dl_dev_state", file: !85, line: 343, baseType: !7, size: 32, elements: !86)
!85 = !DIFile(filename: "./include/linux/device.h", directory: "/home/lizy2001/genbc/linux")
!86 = !{!87, !88, !89, !90}
!87 = !DIEnumerator(name: "DL_DEV_NO_DRIVER", value: 0, isUnsigned: true)
!88 = !DIEnumerator(name: "DL_DEV_PROBING", value: 1, isUnsigned: true)
!89 = !DIEnumerator(name: "DL_DEV_DRIVER_BOUND", value: 2, isUnsigned: true)
!90 = !DIEnumerator(name: "DL_DEV_UNBINDING", value: 3, isUnsigned: true)
!91 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_request", file: !92, line: 524, baseType: !7, size: 32, elements: !93)
!92 = !DIFile(filename: "./include/linux/pm.h", directory: "/home/lizy2001/genbc/linux")
!93 = !{!94, !95, !96, !97, !98}
!94 = !DIEnumerator(name: "RPM_REQ_NONE", value: 0, isUnsigned: true)
!95 = !DIEnumerator(name: "RPM_REQ_IDLE", value: 1, isUnsigned: true)
!96 = !DIEnumerator(name: "RPM_REQ_SUSPEND", value: 2, isUnsigned: true)
!97 = !DIEnumerator(name: "RPM_REQ_AUTOSUSPEND", value: 3, isUnsigned: true)
!98 = !DIEnumerator(name: "RPM_REQ_RESUME", value: 4, isUnsigned: true)
!99 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_status", file: !92, line: 502, baseType: !7, size: 32, elements: !100)
!100 = !{!101, !102, !103, !104}
!101 = !DIEnumerator(name: "RPM_ACTIVE", value: 0, isUnsigned: true)
!102 = !DIEnumerator(name: "RPM_RESUMING", value: 1, isUnsigned: true)
!103 = !DIEnumerator(name: "RPM_SUSPENDED", value: 2, isUnsigned: true)
!104 = !DIEnumerator(name: "RPM_SUSPENDING", value: 3, isUnsigned: true)
!105 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "irq_domain_bus_token", file: !106, line: 76, baseType: !7, size: 32, elements: !107)
!106 = !DIFile(filename: "./include/linux/irqdomain.h", directory: "/home/lizy2001/genbc/linux")
!107 = !{!108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118}
!108 = !DIEnumerator(name: "DOMAIN_BUS_ANY", value: 0, isUnsigned: true)
!109 = !DIEnumerator(name: "DOMAIN_BUS_WIRED", value: 1, isUnsigned: true)
!110 = !DIEnumerator(name: "DOMAIN_BUS_GENERIC_MSI", value: 2, isUnsigned: true)
!111 = !DIEnumerator(name: "DOMAIN_BUS_PCI_MSI", value: 3, isUnsigned: true)
!112 = !DIEnumerator(name: "DOMAIN_BUS_PLATFORM_MSI", value: 4, isUnsigned: true)
!113 = !DIEnumerator(name: "DOMAIN_BUS_NEXUS", value: 5, isUnsigned: true)
!114 = !DIEnumerator(name: "DOMAIN_BUS_IPI", value: 6, isUnsigned: true)
!115 = !DIEnumerator(name: "DOMAIN_BUS_FSL_MC_MSI", value: 7, isUnsigned: true)
!116 = !DIEnumerator(name: "DOMAIN_BUS_TI_SCI_INTA_MSI", value: 8, isUnsigned: true)
!117 = !DIEnumerator(name: "DOMAIN_BUS_WAKEUP", value: 9, isUnsigned: true)
!118 = !DIEnumerator(name: "DOMAIN_BUS_VMD_MSI", value: 10, isUnsigned: true)
!119 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "vc_intensity", file: !120, line: 26, baseType: !7, size: 32, elements: !121)
!120 = !DIFile(filename: "./include/linux/console_struct.h", directory: "/home/lizy2001/genbc/linux")
!121 = !{!122, !123, !124, !125}
!122 = !DIEnumerator(name: "VCI_HALF_BRIGHT", value: 0, isUnsigned: true)
!123 = !DIEnumerator(name: "VCI_NORMAL", value: 1, isUnsigned: true)
!124 = !DIEnumerator(name: "VCI_BOLD", value: 2, isUnsigned: true)
!125 = !DIEnumerator(name: "VCI_MASK", value: 3, isUnsigned: true)
!126 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "con_scroll", file: !127, line: 27, baseType: !7, size: 32, elements: !128)
!127 = !DIFile(filename: "./include/linux/console.h", directory: "/home/lizy2001/genbc/linux")
!128 = !{!129, !130}
!129 = !DIEnumerator(name: "SM_UP", value: 0, isUnsigned: true)
!130 = !DIEnumerator(name: "SM_DOWN", value: 1, isUnsigned: true)
!131 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !132, line: 10, baseType: !7, size: 32, elements: !133)
!132 = !DIFile(filename: "./include/linux/stddef.h", directory: "/home/lizy2001/genbc/linux")
!133 = !{!134, !135}
!134 = !DIEnumerator(name: "false", value: 0, isUnsigned: true)
!135 = !DIEnumerator(name: "true", value: 1, isUnsigned: true)
!136 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !137, line: 30, baseType: !138, size: 64, elements: !139)
!137 = !DIFile(filename: "./include/linux/workqueue.h", directory: "/home/lizy2001/genbc/linux")
!138 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!139 = !{!140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168}
!140 = !DIEnumerator(name: "WORK_STRUCT_PENDING_BIT", value: 0)
!141 = !DIEnumerator(name: "WORK_STRUCT_DELAYED_BIT", value: 1)
!142 = !DIEnumerator(name: "WORK_STRUCT_PWQ_BIT", value: 2)
!143 = !DIEnumerator(name: "WORK_STRUCT_LINKED_BIT", value: 3)
!144 = !DIEnumerator(name: "WORK_STRUCT_COLOR_SHIFT", value: 4)
!145 = !DIEnumerator(name: "WORK_STRUCT_COLOR_BITS", value: 4)
!146 = !DIEnumerator(name: "WORK_STRUCT_PENDING", value: 1)
!147 = !DIEnumerator(name: "WORK_STRUCT_DELAYED", value: 2)
!148 = !DIEnumerator(name: "WORK_STRUCT_PWQ", value: 4)
!149 = !DIEnumerator(name: "WORK_STRUCT_LINKED", value: 8)
!150 = !DIEnumerator(name: "WORK_STRUCT_STATIC", value: 0)
!151 = !DIEnumerator(name: "WORK_NR_COLORS", value: 15)
!152 = !DIEnumerator(name: "WORK_NO_COLOR", value: 15)
!153 = !DIEnumerator(name: "WORK_CPU_UNBOUND", value: 1)
!154 = !DIEnumerator(name: "WORK_STRUCT_FLAG_BITS", value: 8)
!155 = !DIEnumerator(name: "WORK_OFFQ_FLAG_BASE", value: 4)
!156 = !DIEnumerator(name: "__WORK_OFFQ_CANCELING", value: 4)
!157 = !DIEnumerator(name: "WORK_OFFQ_CANCELING", value: 16)
!158 = !DIEnumerator(name: "WORK_OFFQ_FLAG_BITS", value: 1)
!159 = !DIEnumerator(name: "WORK_OFFQ_POOL_SHIFT", value: 5)
!160 = !DIEnumerator(name: "WORK_OFFQ_LEFT", value: 59)
!161 = !DIEnumerator(name: "WORK_OFFQ_POOL_BITS", value: 31)
!162 = !DIEnumerator(name: "WORK_OFFQ_POOL_NONE", value: 2147483647)
!163 = !DIEnumerator(name: "WORK_STRUCT_FLAG_MASK", value: 255)
!164 = !DIEnumerator(name: "WORK_STRUCT_WQ_DATA_MASK", value: -256)
!165 = !DIEnumerator(name: "WORK_STRUCT_NO_POOL", value: 68719476704)
!166 = !DIEnumerator(name: "WORK_BUSY_PENDING", value: 1)
!167 = !DIEnumerator(name: "WORK_BUSY_RUNNING", value: 2)
!168 = !DIEnumerator(name: "WORKER_DESC_LEN", value: 24)
!169 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !3, line: 110, baseType: !170, size: 32, elements: !171)
!170 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!171 = !{!172, !173, !174}
!172 = !DIEnumerator(name: "FBCON_LOGO_CANSHOW", value: -1)
!173 = !DIEnumerator(name: "FBCON_LOGO_DRAW", value: -2)
!174 = !DIEnumerator(name: "FBCON_LOGO_DONTSHOW", value: -3)
!175 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kmalloc_cache_type", file: !176, line: 305, baseType: !7, size: 32, elements: !177)
!176 = !DIFile(filename: "./include/linux/slab.h", directory: "/home/lizy2001/genbc/linux")
!177 = !{!178, !179, !180, !181}
!178 = !DIEnumerator(name: "KMALLOC_NORMAL", value: 0, isUnsigned: true)
!179 = !DIEnumerator(name: "KMALLOC_RECLAIM", value: 1, isUnsigned: true)
!180 = !DIEnumerator(name: "KMALLOC_DMA", value: 2, isUnsigned: true)
!181 = !DIEnumerator(name: "NR_KMALLOC_TYPES", value: 3, isUnsigned: true)
!182 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !183, line: 303, baseType: !7, size: 32, elements: !184)
!183 = !DIFile(filename: "./include/uapi/linux/fb.h", directory: "/home/lizy2001/genbc/linux")
!184 = !{!185, !186, !187, !188, !189}
!185 = !DIEnumerator(name: "FB_BLANK_UNBLANK", value: 0, isUnsigned: true)
!186 = !DIEnumerator(name: "FB_BLANK_NORMAL", value: 1, isUnsigned: true)
!187 = !DIEnumerator(name: "FB_BLANK_VSYNC_SUSPEND", value: 2, isUnsigned: true)
!188 = !DIEnumerator(name: "FB_BLANK_HSYNC_SUSPEND", value: 3, isUnsigned: true)
!189 = !DIEnumerator(name: "FB_BLANK_POWERDOWN", value: 4, isUnsigned: true)
!190 = !{!191, !192, !193, !170, !138, !199, !299, !4816, !4818, !5096, !1010, !4957, !557, !656, !397}
!191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !170, size: 64)
!192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !194, size: 64)
!194 = !DIDerivedType(tag: DW_TAG_typedef, name: "u16", file: !195, line: 19, baseType: !196)
!195 = !DIFile(filename: "./include/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!196 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u16", file: !197, line: 24, baseType: !198)
!197 = !DIFile(filename: "./include/uapi/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!198 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !200, size: 64)
!200 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fb_info", file: !201, line: 437, size: 8128, elements: !202)
!201 = !DIFile(filename: "./include/linux/fb.h", directory: "/home/lizy2001/genbc/linux")
!202 = !{!203, !209, !210, !211, !212, !248, !249, !290, !316, !382, !393, !412, !413, !423, !424, !425, !4561, !4562, !4564, !4571, !4586, !4714, !4715, !4716, !4717, !4793, !4798, !4799, !4800, !4801, !4802, !4803, !4815}
!203 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !200, file: !201, line: 438, baseType: !204, size: 32)
!204 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !205, line: 168, baseType: !206)
!205 = !DIFile(filename: "./include/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!206 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !205, line: 166, size: 32, elements: !207)
!207 = !{!208}
!208 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !206, file: !205, line: 167, baseType: !170, size: 32)
!209 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !200, file: !201, line: 439, baseType: !170, size: 32, offset: 32)
!210 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !200, file: !201, line: 440, baseType: !170, size: 32, offset: 64)
!211 = !DIDerivedType(tag: DW_TAG_member, name: "fbcon_rotate_hint", scope: !200, file: !201, line: 445, baseType: !170, size: 32, offset: 96)
!212 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !200, file: !201, line: 446, baseType: !213, size: 192, offset: 128)
!213 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mutex", file: !214, line: 53, size: 192, elements: !215)
!214 = !DIFile(filename: "./include/linux/mutex.h", directory: "/home/lizy2001/genbc/linux")
!215 = !{!216, !226, !242}
!216 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !213, file: !214, line: 54, baseType: !217, size: 64)
!217 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_long_t", file: !218, line: 13, baseType: !219)
!218 = !DIFile(filename: "./include/asm-generic/atomic-long.h", directory: "/home/lizy2001/genbc/linux")
!219 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic64_t", file: !205, line: 175, baseType: !220)
!220 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !205, line: 173, size: 64, elements: !221)
!221 = !{!222}
!222 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !220, file: !205, line: 174, baseType: !223, size: 64)
!223 = !DIDerivedType(tag: DW_TAG_typedef, name: "s64", file: !195, line: 22, baseType: !224)
!224 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s64", file: !197, line: 30, baseType: !225)
!225 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!226 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !213, file: !214, line: 55, baseType: !227, offset: 64)
!227 = !DIDerivedType(tag: DW_TAG_typedef, name: "spinlock_t", file: !228, line: 83, baseType: !229)
!228 = !DIFile(filename: "./include/linux/spinlock_types.h", directory: "/home/lizy2001/genbc/linux")
!229 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spinlock", file: !228, line: 71, elements: !230)
!230 = !{!231}
!231 = !DIDerivedType(tag: DW_TAG_member, scope: !229, file: !228, line: 72, baseType: !232)
!232 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !229, file: !228, line: 72, elements: !233)
!233 = !{!234}
!234 = !DIDerivedType(tag: DW_TAG_member, name: "rlock", scope: !232, file: !228, line: 73, baseType: !235)
!235 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raw_spinlock", file: !228, line: 20, elements: !236)
!236 = !{!237}
!237 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !235, file: !228, line: 21, baseType: !238)
!238 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_spinlock_t", file: !239, line: 25, baseType: !240)
!239 = !DIFile(filename: "./include/linux/spinlock_types_up.h", directory: "/home/lizy2001/genbc/linux")
!240 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !239, line: 25, elements: !241)
!241 = !{}
!242 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !213, file: !214, line: 59, baseType: !243, size: 128, offset: 64)
!243 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_head", file: !205, line: 178, size: 128, elements: !244)
!244 = !{!245, !247}
!245 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !243, file: !205, line: 179, baseType: !246, size: 64)
!246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !243, size: 64)
!247 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !243, file: !205, line: 179, baseType: !246, size: 64, offset: 64)
!248 = !DIDerivedType(tag: DW_TAG_member, name: "mm_lock", scope: !200, file: !201, line: 447, baseType: !213, size: 192, offset: 320)
!249 = !DIDerivedType(tag: DW_TAG_member, name: "var", scope: !200, file: !201, line: 448, baseType: !250, size: 1280, offset: 512)
!250 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fb_var_screeninfo", file: !183, line: 242, size: 1280, elements: !251)
!251 = !{!252, !254, !255, !256, !257, !258, !259, !260, !261, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286}
!252 = !DIDerivedType(tag: DW_TAG_member, name: "xres", scope: !250, file: !183, line: 243, baseType: !253, size: 32)
!253 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u32", file: !197, line: 27, baseType: !7)
!254 = !DIDerivedType(tag: DW_TAG_member, name: "yres", scope: !250, file: !183, line: 244, baseType: !253, size: 32, offset: 32)
!255 = !DIDerivedType(tag: DW_TAG_member, name: "xres_virtual", scope: !250, file: !183, line: 245, baseType: !253, size: 32, offset: 64)
!256 = !DIDerivedType(tag: DW_TAG_member, name: "yres_virtual", scope: !250, file: !183, line: 246, baseType: !253, size: 32, offset: 96)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "xoffset", scope: !250, file: !183, line: 247, baseType: !253, size: 32, offset: 128)
!258 = !DIDerivedType(tag: DW_TAG_member, name: "yoffset", scope: !250, file: !183, line: 248, baseType: !253, size: 32, offset: 160)
!259 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_pixel", scope: !250, file: !183, line: 250, baseType: !253, size: 32, offset: 192)
!260 = !DIDerivedType(tag: DW_TAG_member, name: "grayscale", scope: !250, file: !183, line: 251, baseType: !253, size: 32, offset: 224)
!261 = !DIDerivedType(tag: DW_TAG_member, name: "red", scope: !250, file: !183, line: 253, baseType: !262, size: 96, offset: 256)
!262 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fb_bitfield", file: !183, line: 188, size: 96, elements: !263)
!263 = !{!264, !265, !266}
!264 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !262, file: !183, line: 189, baseType: !253, size: 32)
!265 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !262, file: !183, line: 190, baseType: !253, size: 32, offset: 32)
!266 = !DIDerivedType(tag: DW_TAG_member, name: "msb_right", scope: !262, file: !183, line: 191, baseType: !253, size: 32, offset: 64)
!267 = !DIDerivedType(tag: DW_TAG_member, name: "green", scope: !250, file: !183, line: 254, baseType: !262, size: 96, offset: 352)
!268 = !DIDerivedType(tag: DW_TAG_member, name: "blue", scope: !250, file: !183, line: 255, baseType: !262, size: 96, offset: 448)
!269 = !DIDerivedType(tag: DW_TAG_member, name: "transp", scope: !250, file: !183, line: 256, baseType: !262, size: 96, offset: 544)
!270 = !DIDerivedType(tag: DW_TAG_member, name: "nonstd", scope: !250, file: !183, line: 258, baseType: !253, size: 32, offset: 640)
!271 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !250, file: !183, line: 260, baseType: !253, size: 32, offset: 672)
!272 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !250, file: !183, line: 262, baseType: !253, size: 32, offset: 704)
!273 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !250, file: !183, line: 263, baseType: !253, size: 32, offset: 736)
!274 = !DIDerivedType(tag: DW_TAG_member, name: "accel_flags", scope: !250, file: !183, line: 265, baseType: !253, size: 32, offset: 768)
!275 = !DIDerivedType(tag: DW_TAG_member, name: "pixclock", scope: !250, file: !183, line: 268, baseType: !253, size: 32, offset: 800)
!276 = !DIDerivedType(tag: DW_TAG_member, name: "left_margin", scope: !250, file: !183, line: 269, baseType: !253, size: 32, offset: 832)
!277 = !DIDerivedType(tag: DW_TAG_member, name: "right_margin", scope: !250, file: !183, line: 270, baseType: !253, size: 32, offset: 864)
!278 = !DIDerivedType(tag: DW_TAG_member, name: "upper_margin", scope: !250, file: !183, line: 271, baseType: !253, size: 32, offset: 896)
!279 = !DIDerivedType(tag: DW_TAG_member, name: "lower_margin", scope: !250, file: !183, line: 272, baseType: !253, size: 32, offset: 928)
!280 = !DIDerivedType(tag: DW_TAG_member, name: "hsync_len", scope: !250, file: !183, line: 273, baseType: !253, size: 32, offset: 960)
!281 = !DIDerivedType(tag: DW_TAG_member, name: "vsync_len", scope: !250, file: !183, line: 274, baseType: !253, size: 32, offset: 992)
!282 = !DIDerivedType(tag: DW_TAG_member, name: "sync", scope: !250, file: !183, line: 275, baseType: !253, size: 32, offset: 1024)
!283 = !DIDerivedType(tag: DW_TAG_member, name: "vmode", scope: !250, file: !183, line: 276, baseType: !253, size: 32, offset: 1056)
!284 = !DIDerivedType(tag: DW_TAG_member, name: "rotate", scope: !250, file: !183, line: 277, baseType: !253, size: 32, offset: 1088)
!285 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !250, file: !183, line: 278, baseType: !253, size: 32, offset: 1120)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !250, file: !183, line: 279, baseType: !287, size: 128, offset: 1152)
!287 = !DICompositeType(tag: DW_TAG_array_type, baseType: !253, size: 128, elements: !288)
!288 = !{!289}
!289 = !DISubrange(count: 4)
!290 = !DIDerivedType(tag: DW_TAG_member, name: "fix", scope: !200, file: !201, line: 449, baseType: !291, size: 640, offset: 1792)
!291 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fb_fix_screeninfo", file: !183, line: 157, size: 640, elements: !292)
!292 = !{!293, !298, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312}
!293 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !291, file: !183, line: 158, baseType: !294, size: 128)
!294 = !DICompositeType(tag: DW_TAG_array_type, baseType: !295, size: 128, elements: !296)
!295 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!296 = !{!297}
!297 = !DISubrange(count: 16)
!298 = !DIDerivedType(tag: DW_TAG_member, name: "smem_start", scope: !291, file: !183, line: 159, baseType: !299, size: 64, offset: 128)
!299 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!300 = !DIDerivedType(tag: DW_TAG_member, name: "smem_len", scope: !291, file: !183, line: 161, baseType: !253, size: 32, offset: 192)
!301 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !291, file: !183, line: 162, baseType: !253, size: 32, offset: 224)
!302 = !DIDerivedType(tag: DW_TAG_member, name: "type_aux", scope: !291, file: !183, line: 163, baseType: !253, size: 32, offset: 256)
!303 = !DIDerivedType(tag: DW_TAG_member, name: "visual", scope: !291, file: !183, line: 164, baseType: !253, size: 32, offset: 288)
!304 = !DIDerivedType(tag: DW_TAG_member, name: "xpanstep", scope: !291, file: !183, line: 165, baseType: !196, size: 16, offset: 320)
!305 = !DIDerivedType(tag: DW_TAG_member, name: "ypanstep", scope: !291, file: !183, line: 166, baseType: !196, size: 16, offset: 336)
!306 = !DIDerivedType(tag: DW_TAG_member, name: "ywrapstep", scope: !291, file: !183, line: 167, baseType: !196, size: 16, offset: 352)
!307 = !DIDerivedType(tag: DW_TAG_member, name: "line_length", scope: !291, file: !183, line: 168, baseType: !253, size: 32, offset: 384)
!308 = !DIDerivedType(tag: DW_TAG_member, name: "mmio_start", scope: !291, file: !183, line: 169, baseType: !299, size: 64, offset: 448)
!309 = !DIDerivedType(tag: DW_TAG_member, name: "mmio_len", scope: !291, file: !183, line: 171, baseType: !253, size: 32, offset: 512)
!310 = !DIDerivedType(tag: DW_TAG_member, name: "accel", scope: !291, file: !183, line: 172, baseType: !253, size: 32, offset: 544)
!311 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !291, file: !183, line: 174, baseType: !196, size: 16, offset: 576)
!312 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !291, file: !183, line: 175, baseType: !313, size: 32, offset: 592)
!313 = !DICompositeType(tag: DW_TAG_array_type, baseType: !196, size: 32, elements: !314)
!314 = !{!315}
!315 = !DISubrange(count: 2)
!316 = !DIDerivedType(tag: DW_TAG_member, name: "monspecs", scope: !200, file: !201, line: 450, baseType: !317, size: 1152, offset: 2432)
!317 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fb_monspecs", file: !201, line: 63, size: 1152, elements: !318)
!318 = !{!319, !330, !351, !355, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381}
!319 = !DIDerivedType(tag: DW_TAG_member, name: "chroma", scope: !317, file: !201, line: 64, baseType: !320, size: 256)
!320 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fb_chroma", file: !201, line: 52, size: 256, elements: !321)
!321 = !{!322, !323, !324, !325, !326, !327, !328, !329}
!322 = !DIDerivedType(tag: DW_TAG_member, name: "redx", scope: !320, file: !201, line: 53, baseType: !253, size: 32)
!323 = !DIDerivedType(tag: DW_TAG_member, name: "greenx", scope: !320, file: !201, line: 54, baseType: !253, size: 32, offset: 32)
!324 = !DIDerivedType(tag: DW_TAG_member, name: "bluex", scope: !320, file: !201, line: 55, baseType: !253, size: 32, offset: 64)
!325 = !DIDerivedType(tag: DW_TAG_member, name: "whitex", scope: !320, file: !201, line: 56, baseType: !253, size: 32, offset: 96)
!326 = !DIDerivedType(tag: DW_TAG_member, name: "redy", scope: !320, file: !201, line: 57, baseType: !253, size: 32, offset: 128)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "greeny", scope: !320, file: !201, line: 58, baseType: !253, size: 32, offset: 160)
!328 = !DIDerivedType(tag: DW_TAG_member, name: "bluey", scope: !320, file: !201, line: 59, baseType: !253, size: 32, offset: 192)
!329 = !DIDerivedType(tag: DW_TAG_member, name: "whitey", scope: !320, file: !201, line: 60, baseType: !253, size: 32, offset: 224)
!330 = !DIDerivedType(tag: DW_TAG_member, name: "modedb", scope: !317, file: !201, line: 65, baseType: !331, size: 64, offset: 256)
!331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !332, size: 64)
!332 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fb_videomode", file: !201, line: 766, size: 512, elements: !333)
!333 = !{!334, !337, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350}
!334 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !332, file: !201, line: 767, baseType: !335, size: 64)
!335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !336, size: 64)
!336 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !295)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "refresh", scope: !332, file: !201, line: 768, baseType: !338, size: 32, offset: 64)
!338 = !DIDerivedType(tag: DW_TAG_typedef, name: "u32", file: !195, line: 21, baseType: !253)
!339 = !DIDerivedType(tag: DW_TAG_member, name: "xres", scope: !332, file: !201, line: 769, baseType: !338, size: 32, offset: 96)
!340 = !DIDerivedType(tag: DW_TAG_member, name: "yres", scope: !332, file: !201, line: 770, baseType: !338, size: 32, offset: 128)
!341 = !DIDerivedType(tag: DW_TAG_member, name: "pixclock", scope: !332, file: !201, line: 771, baseType: !338, size: 32, offset: 160)
!342 = !DIDerivedType(tag: DW_TAG_member, name: "left_margin", scope: !332, file: !201, line: 772, baseType: !338, size: 32, offset: 192)
!343 = !DIDerivedType(tag: DW_TAG_member, name: "right_margin", scope: !332, file: !201, line: 773, baseType: !338, size: 32, offset: 224)
!344 = !DIDerivedType(tag: DW_TAG_member, name: "upper_margin", scope: !332, file: !201, line: 774, baseType: !338, size: 32, offset: 256)
!345 = !DIDerivedType(tag: DW_TAG_member, name: "lower_margin", scope: !332, file: !201, line: 775, baseType: !338, size: 32, offset: 288)
!346 = !DIDerivedType(tag: DW_TAG_member, name: "hsync_len", scope: !332, file: !201, line: 776, baseType: !338, size: 32, offset: 320)
!347 = !DIDerivedType(tag: DW_TAG_member, name: "vsync_len", scope: !332, file: !201, line: 777, baseType: !338, size: 32, offset: 352)
!348 = !DIDerivedType(tag: DW_TAG_member, name: "sync", scope: !332, file: !201, line: 778, baseType: !338, size: 32, offset: 384)
!349 = !DIDerivedType(tag: DW_TAG_member, name: "vmode", scope: !332, file: !201, line: 779, baseType: !338, size: 32, offset: 416)
!350 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !332, file: !201, line: 780, baseType: !338, size: 32, offset: 448)
!351 = !DIDerivedType(tag: DW_TAG_member, name: "manufacturer", scope: !317, file: !201, line: 66, baseType: !352, size: 32, offset: 320)
!352 = !DICompositeType(tag: DW_TAG_array_type, baseType: !353, size: 32, elements: !288)
!353 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u8", file: !197, line: 21, baseType: !354)
!354 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!355 = !DIDerivedType(tag: DW_TAG_member, name: "monitor", scope: !317, file: !201, line: 67, baseType: !356, size: 112, offset: 352)
!356 = !DICompositeType(tag: DW_TAG_array_type, baseType: !353, size: 112, elements: !357)
!357 = !{!358}
!358 = !DISubrange(count: 14)
!359 = !DIDerivedType(tag: DW_TAG_member, name: "serial_no", scope: !317, file: !201, line: 68, baseType: !356, size: 112, offset: 464)
!360 = !DIDerivedType(tag: DW_TAG_member, name: "ascii", scope: !317, file: !201, line: 69, baseType: !356, size: 112, offset: 576)
!361 = !DIDerivedType(tag: DW_TAG_member, name: "modedb_len", scope: !317, file: !201, line: 70, baseType: !253, size: 32, offset: 704)
!362 = !DIDerivedType(tag: DW_TAG_member, name: "model", scope: !317, file: !201, line: 71, baseType: !253, size: 32, offset: 736)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !317, file: !201, line: 72, baseType: !253, size: 32, offset: 768)
!364 = !DIDerivedType(tag: DW_TAG_member, name: "year", scope: !317, file: !201, line: 73, baseType: !253, size: 32, offset: 800)
!365 = !DIDerivedType(tag: DW_TAG_member, name: "week", scope: !317, file: !201, line: 74, baseType: !253, size: 32, offset: 832)
!366 = !DIDerivedType(tag: DW_TAG_member, name: "hfmin", scope: !317, file: !201, line: 75, baseType: !253, size: 32, offset: 864)
!367 = !DIDerivedType(tag: DW_TAG_member, name: "hfmax", scope: !317, file: !201, line: 76, baseType: !253, size: 32, offset: 896)
!368 = !DIDerivedType(tag: DW_TAG_member, name: "dclkmin", scope: !317, file: !201, line: 77, baseType: !253, size: 32, offset: 928)
!369 = !DIDerivedType(tag: DW_TAG_member, name: "dclkmax", scope: !317, file: !201, line: 78, baseType: !253, size: 32, offset: 960)
!370 = !DIDerivedType(tag: DW_TAG_member, name: "input", scope: !317, file: !201, line: 79, baseType: !196, size: 16, offset: 992)
!371 = !DIDerivedType(tag: DW_TAG_member, name: "dpms", scope: !317, file: !201, line: 80, baseType: !196, size: 16, offset: 1008)
!372 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !317, file: !201, line: 81, baseType: !196, size: 16, offset: 1024)
!373 = !DIDerivedType(tag: DW_TAG_member, name: "vfmin", scope: !317, file: !201, line: 82, baseType: !196, size: 16, offset: 1040)
!374 = !DIDerivedType(tag: DW_TAG_member, name: "vfmax", scope: !317, file: !201, line: 83, baseType: !196, size: 16, offset: 1056)
!375 = !DIDerivedType(tag: DW_TAG_member, name: "gamma", scope: !317, file: !201, line: 84, baseType: !196, size: 16, offset: 1072)
!376 = !DIDerivedType(tag: DW_TAG_member, name: "gtf", scope: !317, file: !201, line: 85, baseType: !196, size: 1, offset: 1088, flags: DIFlagBitField, extraData: i64 1088)
!377 = !DIDerivedType(tag: DW_TAG_member, name: "misc", scope: !317, file: !201, line: 86, baseType: !196, size: 16, offset: 1104)
!378 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !317, file: !201, line: 87, baseType: !353, size: 8, offset: 1120)
!379 = !DIDerivedType(tag: DW_TAG_member, name: "revision", scope: !317, file: !201, line: 88, baseType: !353, size: 8, offset: 1128)
!380 = !DIDerivedType(tag: DW_TAG_member, name: "max_x", scope: !317, file: !201, line: 89, baseType: !353, size: 8, offset: 1136)
!381 = !DIDerivedType(tag: DW_TAG_member, name: "max_y", scope: !317, file: !201, line: 90, baseType: !353, size: 8, offset: 1144)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !200, file: !201, line: 451, baseType: !383, size: 256, offset: 3584)
!383 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "work_struct", file: !137, line: 102, size: 256, elements: !384)
!384 = !{!385, !386, !387}
!385 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !383, file: !137, line: 103, baseType: !217, size: 64)
!386 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !383, file: !137, line: 104, baseType: !243, size: 128, offset: 64)
!387 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !383, file: !137, line: 105, baseType: !388, size: 64, offset: 192)
!388 = !DIDerivedType(tag: DW_TAG_typedef, name: "work_func_t", file: !137, line: 21, baseType: !389)
!389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !390, size: 64)
!390 = !DISubroutineType(types: !391)
!391 = !{null, !392}
!392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !383, size: 64)
!393 = !DIDerivedType(tag: DW_TAG_member, name: "pixmap", scope: !200, file: !201, line: 452, baseType: !394, size: 448, offset: 3840)
!394 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fb_pixmap", file: !201, line: 185, size: 448, elements: !395)
!395 = !{!396, !399, !400, !401, !402, !403, !404, !405, !406, !407, !411}
!396 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !394, file: !201, line: 186, baseType: !397, size: 64)
!397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !398, size: 64)
!398 = !DIDerivedType(tag: DW_TAG_typedef, name: "u8", file: !195, line: 17, baseType: !353)
!399 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !394, file: !201, line: 187, baseType: !338, size: 32, offset: 64)
!400 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !394, file: !201, line: 188, baseType: !338, size: 32, offset: 96)
!401 = !DIDerivedType(tag: DW_TAG_member, name: "buf_align", scope: !394, file: !201, line: 189, baseType: !338, size: 32, offset: 128)
!402 = !DIDerivedType(tag: DW_TAG_member, name: "scan_align", scope: !394, file: !201, line: 190, baseType: !338, size: 32, offset: 160)
!403 = !DIDerivedType(tag: DW_TAG_member, name: "access_align", scope: !394, file: !201, line: 191, baseType: !338, size: 32, offset: 192)
!404 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !394, file: !201, line: 192, baseType: !338, size: 32, offset: 224)
!405 = !DIDerivedType(tag: DW_TAG_member, name: "blit_x", scope: !394, file: !201, line: 193, baseType: !338, size: 32, offset: 256)
!406 = !DIDerivedType(tag: DW_TAG_member, name: "blit_y", scope: !394, file: !201, line: 194, baseType: !338, size: 32, offset: 288)
!407 = !DIDerivedType(tag: DW_TAG_member, name: "writeio", scope: !394, file: !201, line: 198, baseType: !408, size: 64, offset: 320)
!408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !409, size: 64)
!409 = !DISubroutineType(types: !410)
!410 = !{null, !199, !192, !192, !7}
!411 = !DIDerivedType(tag: DW_TAG_member, name: "readio", scope: !394, file: !201, line: 199, baseType: !408, size: 64, offset: 384)
!412 = !DIDerivedType(tag: DW_TAG_member, name: "sprite", scope: !200, file: !201, line: 453, baseType: !394, size: 448, offset: 4288)
!413 = !DIDerivedType(tag: DW_TAG_member, name: "cmap", scope: !200, file: !201, line: 454, baseType: !414, size: 320, offset: 4736)
!414 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fb_cmap", file: !183, line: 282, size: 320, elements: !415)
!415 = !{!416, !417, !418, !420, !421, !422}
!416 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !414, file: !183, line: 283, baseType: !253, size: 32)
!417 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !414, file: !183, line: 284, baseType: !253, size: 32, offset: 32)
!418 = !DIDerivedType(tag: DW_TAG_member, name: "red", scope: !414, file: !183, line: 285, baseType: !419, size: 64, offset: 64)
!419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !196, size: 64)
!420 = !DIDerivedType(tag: DW_TAG_member, name: "green", scope: !414, file: !183, line: 286, baseType: !419, size: 64, offset: 128)
!421 = !DIDerivedType(tag: DW_TAG_member, name: "blue", scope: !414, file: !183, line: 287, baseType: !419, size: 64, offset: 192)
!422 = !DIDerivedType(tag: DW_TAG_member, name: "transp", scope: !414, file: !183, line: 288, baseType: !419, size: 64, offset: 256)
!423 = !DIDerivedType(tag: DW_TAG_member, name: "modelist", scope: !200, file: !201, line: 455, baseType: !243, size: 128, offset: 5056)
!424 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !200, file: !201, line: 456, baseType: !331, size: 64, offset: 5184)
!425 = !DIDerivedType(tag: DW_TAG_member, name: "bl_dev", scope: !200, file: !201, line: 462, baseType: !426, size: 64, offset: 5248)
!426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !427, size: 64)
!427 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "backlight_device", file: !6, line: 280, size: 6912, elements: !428)
!428 = !{!429, !439, !440, !441, !456, !468, !469, !4558, !4560}
!429 = !DIDerivedType(tag: DW_TAG_member, name: "props", scope: !427, file: !6, line: 284, baseType: !430, size: 224)
!430 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "backlight_properties", file: !6, line: 182, size: 224, elements: !431)
!431 = !{!432, !433, !434, !435, !436, !437, !438}
!432 = !DIDerivedType(tag: DW_TAG_member, name: "brightness", scope: !430, file: !6, line: 194, baseType: !170, size: 32)
!433 = !DIDerivedType(tag: DW_TAG_member, name: "max_brightness", scope: !430, file: !6, line: 203, baseType: !170, size: 32, offset: 32)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !430, file: !6, line: 219, baseType: !170, size: 32, offset: 64)
!435 = !DIDerivedType(tag: DW_TAG_member, name: "fb_blank", scope: !430, file: !6, line: 238, baseType: !170, size: 32, offset: 96)
!436 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !430, file: !6, line: 249, baseType: !5, size: 32, offset: 128)
!437 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !430, file: !6, line: 264, baseType: !7, size: 32, offset: 160)
!438 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !430, file: !6, line: 272, baseType: !13, size: 32, offset: 192)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "update_lock", scope: !427, file: !6, line: 294, baseType: !213, size: 192, offset: 256)
!440 = !DIDerivedType(tag: DW_TAG_member, name: "ops_lock", scope: !427, file: !6, line: 303, baseType: !213, size: 192, offset: 448)
!441 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !427, file: !6, line: 312, baseType: !442, size: 64, offset: 640)
!442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !443, size: 64)
!443 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !444)
!444 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "backlight_ops", file: !6, line: 120, size: 256, elements: !445)
!445 = !{!446, !447, !451, !452}
!446 = !DIDerivedType(tag: DW_TAG_member, name: "options", scope: !444, file: !6, line: 128, baseType: !7, size: 32)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "update_status", scope: !444, file: !6, line: 146, baseType: !448, size: 64, offset: 64)
!448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !449, size: 64)
!449 = !DISubroutineType(types: !450)
!450 = !{!170, !426}
!451 = !DIDerivedType(tag: DW_TAG_member, name: "get_brightness", scope: !444, file: !6, line: 160, baseType: !448, size: 64, offset: 128)
!452 = !DIDerivedType(tag: DW_TAG_member, name: "check_fb", scope: !444, file: !6, line: 174, baseType: !453, size: 64, offset: 192)
!453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !454, size: 64)
!454 = !DISubroutineType(types: !455)
!455 = !{!170, !426, !199}
!456 = !DIDerivedType(tag: DW_TAG_member, name: "fb_notif", scope: !427, file: !6, line: 317, baseType: !457, size: 192, offset: 704)
!457 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "notifier_block", file: !458, line: 54, size: 192, elements: !459)
!458 = !DIFile(filename: "./include/linux/notifier.h", directory: "/home/lizy2001/genbc/linux")
!459 = !{!460, !466, !467}
!460 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_call", scope: !457, file: !458, line: 55, baseType: !461, size: 64)
!461 = !DIDerivedType(tag: DW_TAG_typedef, name: "notifier_fn_t", file: !458, line: 51, baseType: !462)
!462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !463, size: 64)
!463 = !DISubroutineType(types: !464)
!464 = !{!170, !465, !299, !192}
!465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !457, size: 64)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !457, file: !458, line: 56, baseType: !465, size: 64, offset: 64)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "priority", scope: !457, file: !458, line: 57, baseType: !170, size: 32, offset: 128)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !427, file: !6, line: 322, baseType: !243, size: 128, offset: 896)
!469 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !427, file: !6, line: 327, baseType: !470, size: 5568, offset: 1024)
!470 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !85, line: 461, size: 5568, elements: !471)
!471 = !{!472, !4012, !4013, !4016, !4017, !4068, !4159, !4160, !4161, !4162, !4163, !4172, !4277, !4290, !4485, !4486, !4490, !4492, !4493, !4494, !4498, !4504, !4505, !4508, !4509, !4510, !4511, !4512, !4513, !4514, !4546, !4547, !4548, !4551, !4554, !4555, !4556, !4557}
!472 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !470, file: !85, line: 462, baseType: !473, size: 512)
!473 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobject", file: !474, line: 64, size: 512, elements: !475)
!474 = !DIFile(filename: "./include/linux/kobject.h", directory: "/home/lizy2001/genbc/linux")
!475 = !{!476, !477, !478, !480, !525, !3885, !4006, !4007, !4008, !4009, !4010, !4011}
!476 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !473, file: !474, line: 65, baseType: !335, size: 64)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !473, file: !474, line: 66, baseType: !243, size: 128, offset: 64)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !473, file: !474, line: 67, baseType: !479, size: 64, offset: 192)
!479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !473, size: 64)
!480 = !DIDerivedType(tag: DW_TAG_member, name: "kset", scope: !473, file: !474, line: 68, baseType: !481, size: 64, offset: 256)
!481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !482, size: 64)
!482 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset", file: !474, line: 192, size: 704, elements: !483)
!483 = !{!484, !485, !486, !487}
!484 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !482, file: !474, line: 193, baseType: !243, size: 128)
!485 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !482, file: !474, line: 194, baseType: !227, offset: 128)
!486 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !482, file: !474, line: 195, baseType: !473, size: 512, offset: 128)
!487 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_ops", scope: !482, file: !474, line: 196, baseType: !488, size: 64, offset: 640)
!488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !489, size: 64)
!489 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !490)
!490 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset_uevent_ops", file: !474, line: 156, size: 192, elements: !491)
!491 = !{!492, !497, !502}
!492 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !490, file: !474, line: 157, baseType: !493, size: 64)
!493 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !494)
!494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !495, size: 64)
!495 = !DISubroutineType(types: !496)
!496 = !{!170, !481, !479}
!497 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !490, file: !474, line: 158, baseType: !498, size: 64, offset: 64)
!498 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !499)
!499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !500, size: 64)
!500 = !DISubroutineType(types: !501)
!501 = !{!335, !481, !479}
!502 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !490, file: !474, line: 159, baseType: !503, size: 64, offset: 128)
!503 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !504)
!504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !505, size: 64)
!505 = !DISubroutineType(types: !506)
!506 = !{!170, !481, !479, !507}
!507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !508, size: 64)
!508 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_uevent_env", file: !474, line: 148, size: 20736, elements: !509)
!509 = !{!510, !515, !519, !520, !524}
!510 = !DIDerivedType(tag: DW_TAG_member, name: "argv", scope: !508, file: !474, line: 149, baseType: !511, size: 192)
!511 = !DICompositeType(tag: DW_TAG_array_type, baseType: !512, size: 192, elements: !513)
!512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !295, size: 64)
!513 = !{!514}
!514 = !DISubrange(count: 3)
!515 = !DIDerivedType(tag: DW_TAG_member, name: "envp", scope: !508, file: !474, line: 150, baseType: !516, size: 4096, offset: 192)
!516 = !DICompositeType(tag: DW_TAG_array_type, baseType: !512, size: 4096, elements: !517)
!517 = !{!518}
!518 = !DISubrange(count: 64)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "envp_idx", scope: !508, file: !474, line: 151, baseType: !170, size: 32, offset: 4288)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !508, file: !474, line: 152, baseType: !521, size: 16384, offset: 4320)
!521 = !DICompositeType(tag: DW_TAG_array_type, baseType: !295, size: 16384, elements: !522)
!522 = !{!523}
!523 = !DISubrange(count: 2048)
!524 = !DIDerivedType(tag: DW_TAG_member, name: "buflen", scope: !508, file: !474, line: 153, baseType: !170, size: 32, offset: 20704)
!525 = !DIDerivedType(tag: DW_TAG_member, name: "ktype", scope: !473, file: !474, line: 69, baseType: !526, size: 64, offset: 320)
!526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !527, size: 64)
!527 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_type", file: !474, line: 138, size: 448, elements: !528)
!528 = !{!529, !533, !560, !562, !3847, !3875, !3879}
!529 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !527, file: !474, line: 139, baseType: !530, size: 64)
!530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !531, size: 64)
!531 = !DISubroutineType(types: !532)
!532 = !{null, !479}
!533 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_ops", scope: !527, file: !474, line: 140, baseType: !534, size: 64, offset: 64)
!534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !535, size: 64)
!535 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !536)
!536 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sysfs_ops", file: !537, line: 230, size: 128, elements: !538)
!537 = !DIFile(filename: "./include/linux/sysfs.h", directory: "/home/lizy2001/genbc/linux")
!538 = !{!539, !553}
!539 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !536, file: !537, line: 231, baseType: !540, size: 64)
!540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !541, size: 64)
!541 = !DISubroutineType(types: !542)
!542 = !{!543, !479, !547, !512}
!543 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !205, line: 60, baseType: !544)
!544 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ssize_t", file: !545, line: 73, baseType: !546)
!545 = !DIFile(filename: "./include/uapi/asm-generic/posix_types.h", directory: "/home/lizy2001/genbc/linux")
!546 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_long_t", file: !545, line: 15, baseType: !138)
!547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !548, size: 64)
!548 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute", file: !537, line: 30, size: 128, elements: !549)
!549 = !{!550, !551}
!550 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !548, file: !537, line: 31, baseType: !335, size: 64)
!551 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !548, file: !537, line: 32, baseType: !552, size: 16, offset: 64)
!552 = !DIDerivedType(tag: DW_TAG_typedef, name: "umode_t", file: !205, line: 19, baseType: !198)
!553 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !536, file: !537, line: 232, baseType: !554, size: 64, offset: 64)
!554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !555, size: 64)
!555 = !DISubroutineType(types: !556)
!556 = !{!543, !479, !547, !335, !557}
!557 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !205, line: 55, baseType: !558)
!558 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_size_t", file: !545, line: 72, baseType: !559)
!559 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ulong_t", file: !545, line: 16, baseType: !299)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "default_attrs", scope: !527, file: !474, line: 141, baseType: !561, size: 64, offset: 128)
!561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !547, size: 64)
!562 = !DIDerivedType(tag: DW_TAG_member, name: "default_groups", scope: !527, file: !474, line: 142, baseType: !563, size: 64, offset: 192)
!563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !564, size: 64)
!564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !565, size: 64)
!565 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !566)
!566 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute_group", file: !537, line: 84, size: 320, elements: !567)
!567 = !{!568, !569, !573, !3844, !3845}
!568 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !566, file: !537, line: 85, baseType: !335, size: 64)
!569 = !DIDerivedType(tag: DW_TAG_member, name: "is_visible", scope: !566, file: !537, line: 86, baseType: !570, size: 64, offset: 64)
!570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !571, size: 64)
!571 = !DISubroutineType(types: !572)
!572 = !{!552, !479, !547, !170}
!573 = !DIDerivedType(tag: DW_TAG_member, name: "is_bin_visible", scope: !566, file: !537, line: 88, baseType: !574, size: 64, offset: 128)
!574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !575, size: 64)
!575 = !DISubroutineType(types: !576)
!576 = !{!552, !479, !577, !170}
!577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !578, size: 64)
!578 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bin_attribute", file: !537, line: 168, size: 448, elements: !579)
!579 = !{!580, !581, !582, !583, !3839, !3840}
!580 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !578, file: !537, line: 169, baseType: !548, size: 128)
!581 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !578, file: !537, line: 170, baseType: !557, size: 64, offset: 128)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !578, file: !537, line: 171, baseType: !192, size: 64, offset: 192)
!583 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !578, file: !537, line: 172, baseType: !584, size: 64, offset: 256)
!584 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !585, size: 64)
!585 = !DISubroutineType(types: !586)
!586 = !{!543, !587, !479, !577, !512, !761, !557}
!587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !588, size: 64)
!588 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file", file: !56, line: 916, size: 1856, align: 32, elements: !589)
!589 = !{!590, !608, !3804, !3805, !3806, !3807, !3808, !3809, !3810, !3811, !3812, !3813, !3822, !3823, !3832, !3833, !3834, !3835, !3836, !3837, !3838}
!590 = !DIDerivedType(tag: DW_TAG_member, name: "f_u", scope: !588, file: !56, line: 920, baseType: !591, size: 128)
!591 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !588, file: !56, line: 917, size: 128, elements: !592)
!592 = !{!593, !599}
!593 = !DIDerivedType(tag: DW_TAG_member, name: "fu_llist", scope: !591, file: !56, line: 918, baseType: !594, size: 64)
!594 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "llist_node", file: !595, line: 58, size: 64, elements: !596)
!595 = !DIFile(filename: "./include/linux/llist.h", directory: "/home/lizy2001/genbc/linux")
!596 = !{!597}
!597 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !594, file: !595, line: 59, baseType: !598, size: 64)
!598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !594, size: 64)
!599 = !DIDerivedType(tag: DW_TAG_member, name: "fu_rcuhead", scope: !591, file: !56, line: 919, baseType: !600, size: 128, align: 64)
!600 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "callback_head", file: !205, line: 216, size: 128, align: 64, elements: !601)
!601 = !{!602, !604}
!602 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !600, file: !205, line: 217, baseType: !603, size: 64)
!603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !600, size: 64)
!604 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !600, file: !205, line: 218, baseType: !605, size: 64, offset: 64)
!605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !606, size: 64)
!606 = !DISubroutineType(types: !607)
!607 = !{null, !603}
!608 = !DIDerivedType(tag: DW_TAG_member, name: "f_path", scope: !588, file: !56, line: 921, baseType: !609, size: 128, offset: 128)
!609 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "path", file: !610, line: 8, size: 128, elements: !611)
!610 = !DIFile(filename: "./include/linux/path.h", directory: "/home/lizy2001/genbc/linux")
!611 = !{!612, !616}
!612 = !DIDerivedType(tag: DW_TAG_member, name: "mnt", scope: !609, file: !610, line: 9, baseType: !613, size: 64)
!613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !614, size: 64)
!614 = !DICompositeType(tag: DW_TAG_structure_type, name: "vfsmount", file: !615, line: 18, flags: DIFlagFwdDecl)
!615 = !DIFile(filename: "./include/linux/dcache.h", directory: "/home/lizy2001/genbc/linux")
!616 = !DIDerivedType(tag: DW_TAG_member, name: "dentry", scope: !609, file: !610, line: 10, baseType: !617, size: 64, offset: 64)
!617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !618, size: 64)
!618 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry", file: !615, line: 89, size: 1536, elements: !619)
!619 = !{!620, !621, !631, !639, !640, !658, !3772, !3774, !3786, !3787, !3788, !3789, !3790, !3796, !3797, !3798}
!620 = !DIDerivedType(tag: DW_TAG_member, name: "d_flags", scope: !618, file: !615, line: 91, baseType: !7, size: 32)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "d_seq", scope: !618, file: !615, line: 92, baseType: !622, size: 32, offset: 32)
!622 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_spinlock_t", file: !623, line: 277, baseType: !624)
!623 = !DIFile(filename: "./include/linux/seqlock.h", directory: "/home/lizy2001/genbc/linux")
!624 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_spinlock", file: !623, line: 277, size: 32, elements: !625)
!625 = !{!626}
!626 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !624, file: !623, line: 277, baseType: !627, size: 32)
!627 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_t", file: !623, line: 70, baseType: !628)
!628 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount", file: !623, line: 65, size: 32, elements: !629)
!629 = !{!630}
!630 = !DIDerivedType(tag: DW_TAG_member, name: "sequence", scope: !628, file: !623, line: 66, baseType: !7, size: 32)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !618, file: !615, line: 93, baseType: !632, size: 128, offset: 64)
!632 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_node", file: !633, line: 38, size: 128, elements: !634)
!633 = !DIFile(filename: "./include/linux/list_bl.h", directory: "/home/lizy2001/genbc/linux")
!634 = !{!635, !637}
!635 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !632, file: !633, line: 39, baseType: !636, size: 64)
!636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !632, size: 64)
!637 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !632, file: !633, line: 39, baseType: !638, size: 64, offset: 64)
!638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !636, size: 64)
!639 = !DIDerivedType(tag: DW_TAG_member, name: "d_parent", scope: !618, file: !615, line: 94, baseType: !617, size: 64, offset: 192)
!640 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !618, file: !615, line: 95, baseType: !641, size: 128, offset: 256)
!641 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qstr", file: !615, line: 47, size: 128, elements: !642)
!642 = !{!643, !655}
!643 = !DIDerivedType(tag: DW_TAG_member, scope: !641, file: !615, line: 48, baseType: !644, size: 64)
!644 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !641, file: !615, line: 48, size: 64, elements: !645)
!645 = !{!646, !651}
!646 = !DIDerivedType(tag: DW_TAG_member, scope: !644, file: !615, line: 49, baseType: !647, size: 64)
!647 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !644, file: !615, line: 49, size: 64, elements: !648)
!648 = !{!649, !650}
!649 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !647, file: !615, line: 50, baseType: !338, size: 32)
!650 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !647, file: !615, line: 50, baseType: !338, size: 32, offset: 32)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "hash_len", scope: !644, file: !615, line: 52, baseType: !652, size: 64)
!652 = !DIDerivedType(tag: DW_TAG_typedef, name: "u64", file: !195, line: 23, baseType: !653)
!653 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u64", file: !197, line: 31, baseType: !654)
!654 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !641, file: !615, line: 54, baseType: !656, size: 64, offset: 64)
!656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !657, size: 64)
!657 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !354)
!658 = !DIDerivedType(tag: DW_TAG_member, name: "d_inode", scope: !618, file: !615, line: 96, baseType: !659, size: 64, offset: 384)
!659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !660, size: 64)
!660 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode", file: !56, line: 610, size: 4224, elements: !661)
!661 = !{!662, !663, !664, !672, !679, !680, !826, !3707, !3708, !3709, !3715, !3716, !3717, !3718, !3719, !3720, !3721, !3722, !3723, !3724, !3725, !3726, !3727, !3728, !3729, !3730, !3731, !3732, !3733, !3734, !3739, !3740, !3741, !3742, !3743, !3744, !3745, !3750, !3758, !3759, !3760, !3768, !3769, !3770, !3771}
!662 = !DIDerivedType(tag: DW_TAG_member, name: "i_mode", scope: !660, file: !56, line: 611, baseType: !552, size: 16)
!663 = !DIDerivedType(tag: DW_TAG_member, name: "i_opflags", scope: !660, file: !56, line: 612, baseType: !198, size: 16, offset: 16)
!664 = !DIDerivedType(tag: DW_TAG_member, name: "i_uid", scope: !660, file: !56, line: 613, baseType: !665, size: 32, offset: 32)
!665 = !DIDerivedType(tag: DW_TAG_typedef, name: "kuid_t", file: !666, line: 23, baseType: !667)
!666 = !DIFile(filename: "./include/linux/uidgid.h", directory: "/home/lizy2001/genbc/linux")
!667 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !666, line: 21, size: 32, elements: !668)
!668 = !{!669}
!669 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !667, file: !666, line: 22, baseType: !670, size: 32)
!670 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !205, line: 32, baseType: !671)
!671 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_uid32_t", file: !545, line: 49, baseType: !7)
!672 = !DIDerivedType(tag: DW_TAG_member, name: "i_gid", scope: !660, file: !56, line: 614, baseType: !673, size: 32, offset: 64)
!673 = !DIDerivedType(tag: DW_TAG_typedef, name: "kgid_t", file: !666, line: 28, baseType: !674)
!674 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !666, line: 26, size: 32, elements: !675)
!675 = !{!676}
!676 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !674, file: !666, line: 27, baseType: !677, size: 32)
!677 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !205, line: 33, baseType: !678)
!678 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_gid32_t", file: !545, line: 50, baseType: !7)
!679 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !660, file: !56, line: 615, baseType: !7, size: 32, offset: 96)
!680 = !DIDerivedType(tag: DW_TAG_member, name: "i_op", scope: !660, file: !56, line: 622, baseType: !681, size: 64, offset: 128)
!681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !682, size: 64)
!682 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !683)
!683 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode_operations", file: !56, line: 1864, size: 1536, align: 512, elements: !684)
!684 = !{!685, !689, !702, !706, !712, !716, !722, !726, !730, !734, !738, !739, !745, !749, !773, !802, !806, !812, !817, !821, !822}
!685 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !683, file: !56, line: 1865, baseType: !686, size: 64)
!686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !687, size: 64)
!687 = !DISubroutineType(types: !688)
!688 = !{!617, !659, !617, !7}
!689 = !DIDerivedType(tag: DW_TAG_member, name: "get_link", scope: !683, file: !56, line: 1866, baseType: !690, size: 64, offset: 64)
!690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !691, size: 64)
!691 = !DISubroutineType(types: !692)
!692 = !{!335, !617, !659, !693}
!693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !694, size: 64)
!694 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_call", file: !695, line: 10, size: 128, elements: !696)
!695 = !DIFile(filename: "./include/linux/delayed_call.h", directory: "/home/lizy2001/genbc/linux")
!696 = !{!697, !701}
!697 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !694, file: !695, line: 11, baseType: !698, size: 64)
!698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !699, size: 64)
!699 = !DISubroutineType(types: !700)
!700 = !{null, !192}
!701 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !694, file: !695, line: 12, baseType: !192, size: 64, offset: 64)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "permission", scope: !683, file: !56, line: 1867, baseType: !703, size: 64, offset: 128)
!703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !704, size: 64)
!704 = !DISubroutineType(types: !705)
!705 = !{!170, !659, !170}
!706 = !DIDerivedType(tag: DW_TAG_member, name: "get_acl", scope: !683, file: !56, line: 1868, baseType: !707, size: 64, offset: 192)
!707 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !708, size: 64)
!708 = !DISubroutineType(types: !709)
!709 = !{!710, !659, !170}
!710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !711, size: 64)
!711 = !DICompositeType(tag: DW_TAG_structure_type, name: "posix_acl", file: !56, line: 581, flags: DIFlagFwdDecl)
!712 = !DIDerivedType(tag: DW_TAG_member, name: "readlink", scope: !683, file: !56, line: 1870, baseType: !713, size: 64, offset: 256)
!713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !714, size: 64)
!714 = !DISubroutineType(types: !715)
!715 = !{!170, !617, !512, !170}
!716 = !DIDerivedType(tag: DW_TAG_member, name: "create", scope: !683, file: !56, line: 1872, baseType: !717, size: 64, offset: 320)
!717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !718, size: 64)
!718 = !DISubroutineType(types: !719)
!719 = !{!170, !659, !617, !552, !720}
!720 = !DIDerivedType(tag: DW_TAG_typedef, name: "bool", file: !205, line: 30, baseType: !721)
!721 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!722 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !683, file: !56, line: 1873, baseType: !723, size: 64, offset: 384)
!723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !724, size: 64)
!724 = !DISubroutineType(types: !725)
!725 = !{!170, !617, !659, !617}
!726 = !DIDerivedType(tag: DW_TAG_member, name: "unlink", scope: !683, file: !56, line: 1874, baseType: !727, size: 64, offset: 448)
!727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !728, size: 64)
!728 = !DISubroutineType(types: !729)
!729 = !{!170, !659, !617}
!730 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !683, file: !56, line: 1875, baseType: !731, size: 64, offset: 512)
!731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !732, size: 64)
!732 = !DISubroutineType(types: !733)
!733 = !{!170, !659, !617, !335}
!734 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !683, file: !56, line: 1876, baseType: !735, size: 64, offset: 576)
!735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !736, size: 64)
!736 = !DISubroutineType(types: !737)
!737 = !{!170, !659, !617, !552}
!738 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !683, file: !56, line: 1877, baseType: !727, size: 64, offset: 640)
!739 = !DIDerivedType(tag: DW_TAG_member, name: "mknod", scope: !683, file: !56, line: 1878, baseType: !740, size: 64, offset: 704)
!740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !741, size: 64)
!741 = !DISubroutineType(types: !742)
!742 = !{!170, !659, !617, !552, !743}
!743 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !205, line: 16, baseType: !744)
!744 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_dev_t", file: !205, line: 13, baseType: !338)
!745 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !683, file: !56, line: 1879, baseType: !746, size: 64, offset: 768)
!746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !747, size: 64)
!747 = !DISubroutineType(types: !748)
!748 = !{!170, !659, !617, !659, !617, !7}
!749 = !DIDerivedType(tag: DW_TAG_member, name: "setattr", scope: !683, file: !56, line: 1881, baseType: !750, size: 64, offset: 832)
!750 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !751, size: 64)
!751 = !DISubroutineType(types: !752)
!752 = !{!170, !617, !753}
!753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !754, size: 64)
!754 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iattr", file: !56, line: 219, size: 640, elements: !755)
!755 = !{!756, !757, !758, !759, !760, !763, !770, !771, !772}
!756 = !DIDerivedType(tag: DW_TAG_member, name: "ia_valid", scope: !754, file: !56, line: 220, baseType: !7, size: 32)
!757 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mode", scope: !754, file: !56, line: 221, baseType: !552, size: 16, offset: 32)
!758 = !DIDerivedType(tag: DW_TAG_member, name: "ia_uid", scope: !754, file: !56, line: 222, baseType: !665, size: 32, offset: 64)
!759 = !DIDerivedType(tag: DW_TAG_member, name: "ia_gid", scope: !754, file: !56, line: 223, baseType: !673, size: 32, offset: 96)
!760 = !DIDerivedType(tag: DW_TAG_member, name: "ia_size", scope: !754, file: !56, line: 224, baseType: !761, size: 64, offset: 128)
!761 = !DIDerivedType(tag: DW_TAG_typedef, name: "loff_t", file: !205, line: 46, baseType: !762)
!762 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_loff_t", file: !545, line: 88, baseType: !225)
!763 = !DIDerivedType(tag: DW_TAG_member, name: "ia_atime", scope: !754, file: !56, line: 225, baseType: !764, size: 128, offset: 192)
!764 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec64", file: !765, line: 13, size: 128, elements: !766)
!765 = !DIFile(filename: "./include/linux/time64.h", directory: "/home/lizy2001/genbc/linux")
!766 = !{!767, !769}
!767 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !764, file: !765, line: 14, baseType: !768, size: 64)
!768 = !DIDerivedType(tag: DW_TAG_typedef, name: "time64_t", file: !765, line: 8, baseType: !224)
!769 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !764, file: !765, line: 15, baseType: !138, size: 64, offset: 64)
!770 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mtime", scope: !754, file: !56, line: 226, baseType: !764, size: 128, offset: 320)
!771 = !DIDerivedType(tag: DW_TAG_member, name: "ia_ctime", scope: !754, file: !56, line: 227, baseType: !764, size: 128, offset: 448)
!772 = !DIDerivedType(tag: DW_TAG_member, name: "ia_file", scope: !754, file: !56, line: 234, baseType: !587, size: 64, offset: 576)
!773 = !DIDerivedType(tag: DW_TAG_member, name: "getattr", scope: !683, file: !56, line: 1882, baseType: !774, size: 64, offset: 896)
!774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !775, size: 64)
!775 = !DISubroutineType(types: !776)
!776 = !{!170, !777, !779, !338, !7}
!777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !778, size: 64)
!778 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !609)
!779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !780, size: 64)
!780 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kstat", file: !781, line: 22, size: 1152, elements: !782)
!781 = !DIFile(filename: "./include/linux/stat.h", directory: "/home/lizy2001/genbc/linux")
!782 = !{!783, !784, !785, !786, !788, !789, !790, !791, !792, !793, !794, !795, !796, !797, !798, !799, !800, !801}
!783 = !DIDerivedType(tag: DW_TAG_member, name: "result_mask", scope: !780, file: !781, line: 23, baseType: !338, size: 32)
!784 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !780, file: !781, line: 24, baseType: !552, size: 16, offset: 32)
!785 = !DIDerivedType(tag: DW_TAG_member, name: "nlink", scope: !780, file: !781, line: 25, baseType: !7, size: 32, offset: 64)
!786 = !DIDerivedType(tag: DW_TAG_member, name: "blksize", scope: !780, file: !781, line: 26, baseType: !787, size: 32, offset: 96)
!787 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !205, line: 104, baseType: !338)
!788 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !780, file: !781, line: 27, baseType: !652, size: 64, offset: 128)
!789 = !DIDerivedType(tag: DW_TAG_member, name: "attributes_mask", scope: !780, file: !781, line: 28, baseType: !652, size: 64, offset: 192)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !780, file: !781, line: 37, baseType: !652, size: 64, offset: 256)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !780, file: !781, line: 38, baseType: !743, size: 32, offset: 320)
!792 = !DIDerivedType(tag: DW_TAG_member, name: "rdev", scope: !780, file: !781, line: 39, baseType: !743, size: 32, offset: 352)
!793 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !780, file: !781, line: 40, baseType: !665, size: 32, offset: 384)
!794 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !780, file: !781, line: 41, baseType: !673, size: 32, offset: 416)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !780, file: !781, line: 42, baseType: !761, size: 64, offset: 448)
!796 = !DIDerivedType(tag: DW_TAG_member, name: "atime", scope: !780, file: !781, line: 43, baseType: !764, size: 128, offset: 512)
!797 = !DIDerivedType(tag: DW_TAG_member, name: "mtime", scope: !780, file: !781, line: 44, baseType: !764, size: 128, offset: 640)
!798 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !780, file: !781, line: 45, baseType: !764, size: 128, offset: 768)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "btime", scope: !780, file: !781, line: 46, baseType: !764, size: 128, offset: 896)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !780, file: !781, line: 47, baseType: !652, size: 64, offset: 1024)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_id", scope: !780, file: !781, line: 48, baseType: !652, size: 64, offset: 1088)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "listxattr", scope: !683, file: !56, line: 1883, baseType: !803, size: 64, offset: 960)
!803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !804, size: 64)
!804 = !DISubroutineType(types: !805)
!805 = !{!543, !617, !512, !557}
!806 = !DIDerivedType(tag: DW_TAG_member, name: "fiemap", scope: !683, file: !56, line: 1884, baseType: !807, size: 64, offset: 1024)
!807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !808, size: 64)
!808 = !DISubroutineType(types: !809)
!809 = !{!170, !659, !810, !652, !652}
!810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !811, size: 64)
!811 = !DICompositeType(tag: DW_TAG_structure_type, name: "fiemap_extent_info", file: !56, line: 50, flags: DIFlagFwdDecl)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "update_time", scope: !683, file: !56, line: 1886, baseType: !813, size: 64, offset: 1088)
!813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !814, size: 64)
!814 = !DISubroutineType(types: !815)
!815 = !{!170, !659, !816, !170}
!816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !764, size: 64)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_open", scope: !683, file: !56, line: 1887, baseType: !818, size: 64, offset: 1152)
!818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !819, size: 64)
!819 = !DISubroutineType(types: !820)
!820 = !{!170, !659, !617, !587, !7, !552}
!821 = !DIDerivedType(tag: DW_TAG_member, name: "tmpfile", scope: !683, file: !56, line: 1890, baseType: !735, size: 64, offset: 1216)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "set_acl", scope: !683, file: !56, line: 1891, baseType: !823, size: 64, offset: 1280)
!823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !824, size: 64)
!824 = !DISubroutineType(types: !825)
!825 = !{!170, !659, !710, !170}
!826 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb", scope: !660, file: !56, line: 623, baseType: !827, size: 64, offset: 192)
!827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !828, size: 64)
!828 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_block", file: !56, line: 1416, size: 9472, elements: !829)
!829 = !{!830, !831, !832, !833, !834, !835, !885, !3314, !3396, !3479, !3483, !3484, !3485, !3486, !3487, !3488, !3489, !3490, !3495, !3499, !3500, !3503, !3504, !3507, !3508, !3509, !3550, !3577, !3578, !3579, !3580, !3581, !3582, !3585, !3587, !3594, !3595, !3597, !3598, !3599, !3658, !3659, !3674, !3675, !3676, !3677, !3678, !3681, !3682, !3683, !3698, !3699, !3700, !3701, !3702, !3703, !3704, !3705, !3706}
!830 = !DIDerivedType(tag: DW_TAG_member, name: "s_list", scope: !828, file: !56, line: 1417, baseType: !243, size: 128)
!831 = !DIDerivedType(tag: DW_TAG_member, name: "s_dev", scope: !828, file: !56, line: 1418, baseType: !743, size: 32, offset: 128)
!832 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize_bits", scope: !828, file: !56, line: 1419, baseType: !354, size: 8, offset: 160)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize", scope: !828, file: !56, line: 1420, baseType: !299, size: 64, offset: 192)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "s_maxbytes", scope: !828, file: !56, line: 1421, baseType: !761, size: 64, offset: 256)
!835 = !DIDerivedType(tag: DW_TAG_member, name: "s_type", scope: !828, file: !56, line: 1422, baseType: !836, size: 64, offset: 320)
!836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !837, size: 64)
!837 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_system_type", file: !56, line: 2228, size: 576, elements: !838)
!838 = !{!839, !840, !841, !848, !852, !856, !860, !864, !865, !875, !878, !879, !880, !882, !883, !884}
!839 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !837, file: !56, line: 2229, baseType: !335, size: 64)
!840 = !DIDerivedType(tag: DW_TAG_member, name: "fs_flags", scope: !837, file: !56, line: 2230, baseType: !170, size: 32, offset: 64)
!841 = !DIDerivedType(tag: DW_TAG_member, name: "init_fs_context", scope: !837, file: !56, line: 2238, baseType: !842, size: 64, offset: 128)
!842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !843, size: 64)
!843 = !DISubroutineType(types: !844)
!844 = !{!170, !845}
!845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !846, size: 64)
!846 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_context", file: !847, line: 28, flags: DIFlagFwdDecl)
!847 = !DIFile(filename: "./include/linux/kernfs.h", directory: "/home/lizy2001/genbc/linux")
!848 = !DIDerivedType(tag: DW_TAG_member, name: "parameters", scope: !837, file: !56, line: 2239, baseType: !849, size: 64, offset: 192)
!849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !850, size: 64)
!850 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !851)
!851 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_parameter_spec", file: !56, line: 70, flags: DIFlagFwdDecl)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "mount", scope: !837, file: !56, line: 2240, baseType: !853, size: 64, offset: 256)
!853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !854, size: 64)
!854 = !DISubroutineType(types: !855)
!855 = !{!617, !836, !170, !335, !192}
!856 = !DIDerivedType(tag: DW_TAG_member, name: "kill_sb", scope: !837, file: !56, line: 2242, baseType: !857, size: 64, offset: 320)
!857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !858, size: 64)
!858 = !DISubroutineType(types: !859)
!859 = !{null, !827}
!860 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !837, file: !56, line: 2243, baseType: !861, size: 64, offset: 384)
!861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !862, size: 64)
!862 = !DICompositeType(tag: DW_TAG_structure_type, name: "module", file: !863, line: 76, flags: DIFlagFwdDecl)
!863 = !DIFile(filename: "./arch/x86/include/asm/alternative.h", directory: "/home/lizy2001/genbc/linux")
!864 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !837, file: !56, line: 2244, baseType: !836, size: 64, offset: 448)
!865 = !DIDerivedType(tag: DW_TAG_member, name: "fs_supers", scope: !837, file: !56, line: 2245, baseType: !866, size: 64, offset: 512)
!866 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_head", file: !205, line: 182, size: 64, elements: !867)
!867 = !{!868}
!868 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !866, file: !205, line: 183, baseType: !869, size: 64)
!869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !870, size: 64)
!870 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_node", file: !205, line: 186, size: 128, elements: !871)
!871 = !{!872, !873}
!872 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !870, file: !205, line: 187, baseType: !869, size: 64)
!873 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !870, file: !205, line: 187, baseType: !874, size: 64, offset: 64)
!874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !869, size: 64)
!875 = !DIDerivedType(tag: DW_TAG_member, name: "s_lock_key", scope: !837, file: !56, line: 2247, baseType: !876, offset: 576)
!876 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_class_key", file: !877, line: 187, elements: !241)
!877 = !DIFile(filename: "./include/linux/lockdep_types.h", directory: "/home/lizy2001/genbc/linux")
!878 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount_key", scope: !837, file: !56, line: 2248, baseType: !876, offset: 576)
!879 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_key", scope: !837, file: !56, line: 2249, baseType: !876, offset: 576)
!880 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers_key", scope: !837, file: !56, line: 2250, baseType: !881, offset: 576)
!881 = !DICompositeType(tag: DW_TAG_array_type, baseType: !876, elements: !513)
!882 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock_key", scope: !837, file: !56, line: 2252, baseType: !876, offset: 576)
!883 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_key", scope: !837, file: !56, line: 2253, baseType: !876, offset: 576)
!884 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_dir_key", scope: !837, file: !56, line: 2254, baseType: !876, offset: 576)
!885 = !DIDerivedType(tag: DW_TAG_member, name: "s_op", scope: !828, file: !56, line: 1423, baseType: !886, size: 64, offset: 384)
!886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !887, size: 64)
!887 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !888)
!888 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_operations", file: !56, line: 1935, size: 1472, elements: !889)
!889 = !{!890, !894, !898, !899, !903, !909, !913, !914, !915, !919, !923, !924, !925, !926, !932, !936, !937, !980, !981, !982, !983, !3298, !3313}
!890 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_inode", scope: !888, file: !56, line: 1936, baseType: !891, size: 64)
!891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !892, size: 64)
!892 = !DISubroutineType(types: !893)
!893 = !{!659, !827}
!894 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_inode", scope: !888, file: !56, line: 1937, baseType: !895, size: 64, offset: 64)
!895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !896, size: 64)
!896 = !DISubroutineType(types: !897)
!897 = !{null, !659}
!898 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !888, file: !56, line: 1938, baseType: !895, size: 64, offset: 128)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_inode", scope: !888, file: !56, line: 1940, baseType: !900, size: 64, offset: 192)
!900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !901, size: 64)
!901 = !DISubroutineType(types: !902)
!902 = !{null, !659, !170}
!903 = !DIDerivedType(tag: DW_TAG_member, name: "write_inode", scope: !888, file: !56, line: 1941, baseType: !904, size: 64, offset: 256)
!904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !905, size: 64)
!905 = !DISubroutineType(types: !906)
!906 = !{!170, !659, !907}
!907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !908, size: 64)
!908 = !DICompositeType(tag: DW_TAG_structure_type, name: "writeback_control", file: !56, line: 289, flags: DIFlagFwdDecl)
!909 = !DIDerivedType(tag: DW_TAG_member, name: "drop_inode", scope: !888, file: !56, line: 1942, baseType: !910, size: 64, offset: 320)
!910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !911, size: 64)
!911 = !DISubroutineType(types: !912)
!912 = !{!170, !659}
!913 = !DIDerivedType(tag: DW_TAG_member, name: "evict_inode", scope: !888, file: !56, line: 1943, baseType: !895, size: 64, offset: 384)
!914 = !DIDerivedType(tag: DW_TAG_member, name: "put_super", scope: !888, file: !56, line: 1944, baseType: !857, size: 64, offset: 448)
!915 = !DIDerivedType(tag: DW_TAG_member, name: "sync_fs", scope: !888, file: !56, line: 1945, baseType: !916, size: 64, offset: 512)
!916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !917, size: 64)
!917 = !DISubroutineType(types: !918)
!918 = !{!170, !827, !170}
!919 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_super", scope: !888, file: !56, line: 1946, baseType: !920, size: 64, offset: 576)
!920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !921, size: 64)
!921 = !DISubroutineType(types: !922)
!922 = !{!170, !827}
!923 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_fs", scope: !888, file: !56, line: 1947, baseType: !920, size: 64, offset: 640)
!924 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_super", scope: !888, file: !56, line: 1948, baseType: !920, size: 64, offset: 704)
!925 = !DIDerivedType(tag: DW_TAG_member, name: "unfreeze_fs", scope: !888, file: !56, line: 1949, baseType: !920, size: 64, offset: 768)
!926 = !DIDerivedType(tag: DW_TAG_member, name: "statfs", scope: !888, file: !56, line: 1950, baseType: !927, size: 64, offset: 832)
!927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !928, size: 64)
!928 = !DISubroutineType(types: !929)
!929 = !{!170, !617, !930}
!930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !931, size: 64)
!931 = !DICompositeType(tag: DW_TAG_structure_type, name: "kstatfs", file: !56, line: 57, flags: DIFlagFwdDecl)
!932 = !DIDerivedType(tag: DW_TAG_member, name: "remount_fs", scope: !888, file: !56, line: 1951, baseType: !933, size: 64, offset: 896)
!933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !934, size: 64)
!934 = !DISubroutineType(types: !935)
!935 = !{!170, !827, !191, !512}
!936 = !DIDerivedType(tag: DW_TAG_member, name: "umount_begin", scope: !888, file: !56, line: 1952, baseType: !857, size: 64, offset: 960)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !888, file: !56, line: 1954, baseType: !938, size: 64, offset: 1024)
!938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !939, size: 64)
!939 = !DISubroutineType(types: !940)
!940 = !{!170, !941, !617}
!941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !942, size: 64)
!942 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seq_file", file: !943, line: 16, size: 896, elements: !944)
!943 = !DIFile(filename: "./include/linux/seq_file.h", directory: "/home/lizy2001/genbc/linux")
!944 = !{!945, !946, !947, !948, !949, !950, !951, !952, !953, !975, !976, !979}
!945 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !942, file: !943, line: 17, baseType: !512, size: 64)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !942, file: !943, line: 18, baseType: !557, size: 64, offset: 64)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "from", scope: !942, file: !943, line: 19, baseType: !557, size: 64, offset: 128)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !942, file: !943, line: 20, baseType: !557, size: 64, offset: 192)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "pad_until", scope: !942, file: !943, line: 21, baseType: !557, size: 64, offset: 256)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !942, file: !943, line: 22, baseType: !761, size: 64, offset: 320)
!951 = !DIDerivedType(tag: DW_TAG_member, name: "read_pos", scope: !942, file: !943, line: 23, baseType: !761, size: 64, offset: 384)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !942, file: !943, line: 24, baseType: !213, size: 192, offset: 448)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !942, file: !943, line: 25, baseType: !954, size: 64, offset: 640)
!954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !955, size: 64)
!955 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !956)
!956 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seq_operations", file: !943, line: 31, size: 256, elements: !957)
!957 = !{!958, !963, !967, !971}
!958 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !956, file: !943, line: 32, baseType: !959, size: 64)
!959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !960, size: 64)
!960 = !DISubroutineType(types: !961)
!961 = !{!192, !941, !962}
!962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !761, size: 64)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !956, file: !943, line: 33, baseType: !964, size: 64, offset: 64)
!964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !965, size: 64)
!965 = !DISubroutineType(types: !966)
!966 = !{null, !941, !192}
!967 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !956, file: !943, line: 34, baseType: !968, size: 64, offset: 128)
!968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !969, size: 64)
!969 = !DISubroutineType(types: !970)
!970 = !{!192, !941, !192, !962}
!971 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !956, file: !943, line: 35, baseType: !972, size: 64, offset: 192)
!972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !973, size: 64)
!973 = !DISubroutineType(types: !974)
!974 = !{!170, !941, !192}
!975 = !DIDerivedType(tag: DW_TAG_member, name: "poll_event", scope: !942, file: !943, line: 26, baseType: !170, size: 32, offset: 704)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !942, file: !943, line: 27, baseType: !977, size: 64, offset: 768)
!977 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !978, size: 64)
!978 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !588)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !942, file: !943, line: 28, baseType: !192, size: 64, offset: 832)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "show_devname", scope: !888, file: !56, line: 1955, baseType: !938, size: 64, offset: 1088)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !888, file: !56, line: 1956, baseType: !938, size: 64, offset: 1152)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "show_stats", scope: !888, file: !56, line: 1957, baseType: !938, size: 64, offset: 1216)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "bdev_try_to_free_page", scope: !888, file: !56, line: 1963, baseType: !984, size: 64, offset: 1280)
!984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !985, size: 64)
!985 = !DISubroutineType(types: !986)
!986 = !{!170, !827, !987, !1010}
!987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !988, size: 64)
!988 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page", file: !989, line: 68, size: 512, align: 128, elements: !990)
!989 = !DIFile(filename: "./include/linux/mm_types.h", directory: "/home/lizy2001/genbc/linux")
!990 = !{!991, !992, !3290, !3297}
!991 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !988, file: !989, line: 69, baseType: !299, size: 64)
!992 = !DIDerivedType(tag: DW_TAG_member, scope: !988, file: !989, line: 77, baseType: !993, size: 320, offset: 64)
!993 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !988, file: !989, line: 77, size: 320, elements: !994)
!994 = !{!995, !1170, !1175, !1203, !1211, !1217, !3221, !3289}
!995 = !DIDerivedType(tag: DW_TAG_member, scope: !993, file: !989, line: 78, baseType: !996, size: 320)
!996 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !993, file: !989, line: 78, size: 320, elements: !997)
!997 = !{!998, !999, !1168, !1169}
!998 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !996, file: !989, line: 84, baseType: !243, size: 128)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !996, file: !989, line: 86, baseType: !1000, size: 64, offset: 128)
!1000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1001, size: 64)
!1001 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space", file: !56, line: 451, size: 1216, align: 64, elements: !1002)
!1002 = !{!1003, !1004, !1012, !1013, !1014, !1029, !1038, !1039, !1040, !1041, !1161, !1162, !1165, !1166, !1167}
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !1001, file: !56, line: 452, baseType: !659, size: 64)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "i_pages", scope: !1001, file: !56, line: 453, baseType: !1005, size: 128, offset: 64)
!1005 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xarray", file: !1006, line: 292, size: 128, elements: !1007)
!1006 = !DIFile(filename: "./include/linux/xarray.h", directory: "/home/lizy2001/genbc/linux")
!1007 = !{!1008, !1009, !1011}
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "xa_lock", scope: !1005, file: !1006, line: 293, baseType: !227)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "xa_flags", scope: !1005, file: !1006, line: 295, baseType: !1010, size: 32)
!1010 = !DIDerivedType(tag: DW_TAG_typedef, name: "gfp_t", file: !205, line: 148, baseType: !7)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "xa_head", scope: !1005, file: !1006, line: 296, baseType: !192, size: 64, offset: 64)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !1001, file: !56, line: 454, baseType: !1010, size: 32, offset: 192)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_writable", scope: !1001, file: !56, line: 455, baseType: !204, size: 32, offset: 224)
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap", scope: !1001, file: !56, line: 460, baseType: !1015, size: 128, offset: 256)
!1015 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root_cached", file: !1016, line: 125, size: 128, elements: !1017)
!1016 = !DIFile(filename: "./include/linux/rbtree.h", directory: "/home/lizy2001/genbc/linux")
!1017 = !{!1018, !1028}
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !1015, file: !1016, line: 126, baseType: !1019, size: 64)
!1019 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root", file: !1016, line: 31, size: 64, elements: !1020)
!1020 = !{!1021}
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !1019, file: !1016, line: 32, baseType: !1022, size: 64)
!1022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1023, size: 64)
!1023 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_node", file: !1016, line: 24, size: 192, align: 64, elements: !1024)
!1024 = !{!1025, !1026, !1027}
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "__rb_parent_color", scope: !1023, file: !1016, line: 25, baseType: !299, size: 64)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "rb_right", scope: !1023, file: !1016, line: 26, baseType: !1022, size: 64, offset: 64)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "rb_left", scope: !1023, file: !1016, line: 27, baseType: !1022, size: 64, offset: 128)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "rb_leftmost", scope: !1015, file: !1016, line: 127, baseType: !1022, size: 64, offset: 64)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_rwsem", scope: !1001, file: !56, line: 461, baseType: !1030, size: 256, offset: 384)
!1030 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rw_semaphore", file: !1031, line: 35, size: 256, elements: !1032)
!1031 = !DIFile(filename: "./include/linux/rwsem.h", directory: "/home/lizy2001/genbc/linux")
!1032 = !{!1033, !1034, !1035, !1037}
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1030, file: !1031, line: 36, baseType: !217, size: 64)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1030, file: !1031, line: 42, baseType: !217, size: 64, offset: 64)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !1030, file: !1031, line: 46, baseType: !1036, offset: 128)
!1036 = !DIDerivedType(tag: DW_TAG_typedef, name: "raw_spinlock_t", file: !228, line: 29, baseType: !235)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !1030, file: !1031, line: 47, baseType: !243, size: 128, offset: 128)
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "nrpages", scope: !1001, file: !56, line: 462, baseType: !299, size: 64, offset: 640)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "nrexceptional", scope: !1001, file: !56, line: 463, baseType: !299, size: 64, offset: 704)
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "writeback_index", scope: !1001, file: !56, line: 464, baseType: !299, size: 64, offset: 768)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "a_ops", scope: !1001, file: !56, line: 465, baseType: !1042, size: 64, offset: 832)
!1042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1043, size: 64)
!1043 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1044)
!1044 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space_operations", file: !56, line: 367, size: 1408, elements: !1045)
!1045 = !{!1046, !1050, !1054, !1058, !1062, !1066, !1072, !1078, !1082, !1087, !1091, !1095, !1099, !1125, !1129, !1135, !1136, !1137, !1141, !1146, !1150, !1157}
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "writepage", scope: !1044, file: !56, line: 368, baseType: !1047, size: 64)
!1047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1048, size: 64)
!1048 = !DISubroutineType(types: !1049)
!1049 = !{!170, !987, !907}
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "readpage", scope: !1044, file: !56, line: 369, baseType: !1051, size: 64, offset: 64)
!1051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1052, size: 64)
!1052 = !DISubroutineType(types: !1053)
!1053 = !{!170, !587, !987}
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "writepages", scope: !1044, file: !56, line: 372, baseType: !1055, size: 64, offset: 128)
!1055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1056, size: 64)
!1056 = !DISubroutineType(types: !1057)
!1057 = !{!170, !1000, !907}
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "set_page_dirty", scope: !1044, file: !56, line: 375, baseType: !1059, size: 64, offset: 192)
!1059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1060, size: 64)
!1060 = !DISubroutineType(types: !1061)
!1061 = !{!170, !987}
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "readpages", scope: !1044, file: !56, line: 381, baseType: !1063, size: 64, offset: 256)
!1063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1064, size: 64)
!1064 = !DISubroutineType(types: !1065)
!1065 = !{!170, !587, !1000, !246, !7}
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "readahead", scope: !1044, file: !56, line: 383, baseType: !1067, size: 64, offset: 320)
!1067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1068, size: 64)
!1068 = !DISubroutineType(types: !1069)
!1069 = !{null, !1070}
!1070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1071, size: 64)
!1071 = !DICompositeType(tag: DW_TAG_structure_type, name: "readahead_control", file: !56, line: 290, flags: DIFlagFwdDecl)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "write_begin", scope: !1044, file: !56, line: 385, baseType: !1073, size: 64, offset: 384)
!1073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1074, size: 64)
!1074 = !DISubroutineType(types: !1075)
!1075 = !{!170, !587, !1000, !761, !7, !7, !1076, !1077}
!1076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !987, size: 64)
!1077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !192, size: 64)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "write_end", scope: !1044, file: !56, line: 388, baseType: !1079, size: 64, offset: 448)
!1079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1080, size: 64)
!1080 = !DISubroutineType(types: !1081)
!1081 = !{!170, !587, !1000, !761, !7, !7, !987, !192}
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "bmap", scope: !1044, file: !56, line: 393, baseType: !1083, size: 64, offset: 512)
!1083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1084, size: 64)
!1084 = !DISubroutineType(types: !1085)
!1085 = !{!1086, !1000, !1086}
!1086 = !DIDerivedType(tag: DW_TAG_typedef, name: "sector_t", file: !205, line: 125, baseType: !652)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "invalidatepage", scope: !1044, file: !56, line: 394, baseType: !1088, size: 64, offset: 576)
!1088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1089, size: 64)
!1089 = !DISubroutineType(types: !1090)
!1090 = !{null, !987, !7, !7}
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "releasepage", scope: !1044, file: !56, line: 395, baseType: !1092, size: 64, offset: 640)
!1092 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1093, size: 64)
!1093 = !DISubroutineType(types: !1094)
!1094 = !{!170, !987, !1010}
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "freepage", scope: !1044, file: !56, line: 396, baseType: !1096, size: 64, offset: 704)
!1096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1097, size: 64)
!1097 = !DISubroutineType(types: !1098)
!1098 = !{null, !987}
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "direct_IO", scope: !1044, file: !56, line: 397, baseType: !1100, size: 64, offset: 768)
!1100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1101, size: 64)
!1101 = !DISubroutineType(types: !1102)
!1102 = !{!543, !1103, !1123}
!1103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1104, size: 64)
!1104 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kiocb", file: !56, line: 320, size: 384, elements: !1105)
!1105 = !{!1106, !1107, !1108, !1112, !1113, !1114, !1115, !1116}
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "ki_filp", scope: !1104, file: !56, line: 321, baseType: !587, size: 64)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "ki_pos", scope: !1104, file: !56, line: 326, baseType: !761, size: 64, offset: 64)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "ki_complete", scope: !1104, file: !56, line: 327, baseType: !1109, size: 64, offset: 128)
!1109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1110, size: 64)
!1110 = !DISubroutineType(types: !1111)
!1111 = !{null, !1103, !138, !138}
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1104, file: !56, line: 328, baseType: !192, size: 64, offset: 192)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "ki_flags", scope: !1104, file: !56, line: 329, baseType: !170, size: 32, offset: 256)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "ki_hint", scope: !1104, file: !56, line: 330, baseType: !194, size: 16, offset: 288)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "ki_ioprio", scope: !1104, file: !56, line: 331, baseType: !194, size: 16, offset: 304)
!1116 = !DIDerivedType(tag: DW_TAG_member, scope: !1104, file: !56, line: 332, baseType: !1117, size: 64, offset: 320)
!1117 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1104, file: !56, line: 332, size: 64, elements: !1118)
!1118 = !{!1119, !1120}
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "ki_cookie", scope: !1117, file: !56, line: 333, baseType: !7, size: 32)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "ki_waitq", scope: !1117, file: !56, line: 334, baseType: !1121, size: 64)
!1121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1122, size: 64)
!1122 = !DICompositeType(tag: DW_TAG_structure_type, name: "wait_page_queue", file: !56, line: 334, flags: DIFlagFwdDecl)
!1123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1124, size: 64)
!1124 = !DICompositeType(tag: DW_TAG_structure_type, name: "iov_iter", file: !56, line: 64, flags: DIFlagFwdDecl)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "migratepage", scope: !1044, file: !56, line: 402, baseType: !1126, size: 64, offset: 832)
!1126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1127, size: 64)
!1127 = !DISubroutineType(types: !1128)
!1128 = !{!170, !1000, !987, !987, !18}
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "isolate_page", scope: !1044, file: !56, line: 404, baseType: !1130, size: 64, offset: 896)
!1130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1131, size: 64)
!1131 = !DISubroutineType(types: !1132)
!1132 = !{!720, !987, !1133}
!1133 = !DIDerivedType(tag: DW_TAG_typedef, name: "isolate_mode_t", file: !1134, line: 305, baseType: !7)
!1134 = !DIFile(filename: "./include/linux/mmzone.h", directory: "/home/lizy2001/genbc/linux")
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "putback_page", scope: !1044, file: !56, line: 405, baseType: !1096, size: 64, offset: 960)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "launder_page", scope: !1044, file: !56, line: 406, baseType: !1059, size: 64, offset: 1024)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "is_partially_uptodate", scope: !1044, file: !56, line: 407, baseType: !1138, size: 64, offset: 1088)
!1138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1139, size: 64)
!1139 = !DISubroutineType(types: !1140)
!1140 = !{!170, !987, !299, !299}
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "is_dirty_writeback", scope: !1044, file: !56, line: 409, baseType: !1142, size: 64, offset: 1152)
!1142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1143, size: 64)
!1143 = !DISubroutineType(types: !1144)
!1144 = !{null, !987, !1145, !1145}
!1145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !720, size: 64)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "error_remove_page", scope: !1044, file: !56, line: 410, baseType: !1147, size: 64, offset: 1216)
!1147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1148, size: 64)
!1148 = !DISubroutineType(types: !1149)
!1149 = !{!170, !1000, !987}
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "swap_activate", scope: !1044, file: !56, line: 413, baseType: !1151, size: 64, offset: 1280)
!1151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1152, size: 64)
!1152 = !DISubroutineType(types: !1153)
!1153 = !{!170, !1154, !587, !1156}
!1154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1155, size: 64)
!1155 = !DICompositeType(tag: DW_TAG_structure_type, name: "swap_info_struct", file: !56, line: 61, flags: DIFlagFwdDecl)
!1156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1086, size: 64)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "swap_deactivate", scope: !1044, file: !56, line: 415, baseType: !1158, size: 64, offset: 1344)
!1158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1159, size: 64)
!1159 = !DISubroutineType(types: !1160)
!1160 = !{null, !587}
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1001, file: !56, line: 466, baseType: !299, size: 64, offset: 896)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "wb_err", scope: !1001, file: !56, line: 467, baseType: !1163, size: 32, offset: 960)
!1163 = !DIDerivedType(tag: DW_TAG_typedef, name: "errseq_t", file: !1164, line: 8, baseType: !338)
!1164 = !DIFile(filename: "./include/linux/errseq.h", directory: "/home/lizy2001/genbc/linux")
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "private_lock", scope: !1001, file: !56, line: 468, baseType: !227, offset: 992)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "private_list", scope: !1001, file: !56, line: 469, baseType: !243, size: 128, offset: 1024)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !1001, file: !56, line: 470, baseType: !192, size: 64, offset: 1152)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !996, file: !989, line: 87, baseType: !299, size: 64, offset: 192)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !996, file: !989, line: 94, baseType: !299, size: 64, offset: 256)
!1170 = !DIDerivedType(tag: DW_TAG_member, scope: !993, file: !989, line: 96, baseType: !1171, size: 64)
!1171 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !993, file: !989, line: 96, size: 64, elements: !1172)
!1172 = !{!1173}
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "dma_addr", scope: !1171, file: !989, line: 101, baseType: !1174, size: 64)
!1174 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_addr_t", file: !205, line: 143, baseType: !652)
!1175 = !DIDerivedType(tag: DW_TAG_member, scope: !993, file: !989, line: 103, baseType: !1176, size: 320)
!1176 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !993, file: !989, line: 103, size: 320, elements: !1177)
!1177 = !{!1178, !1188, !1191, !1192}
!1178 = !DIDerivedType(tag: DW_TAG_member, scope: !1176, file: !989, line: 104, baseType: !1179, size: 128)
!1179 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1176, file: !989, line: 104, size: 128, elements: !1180)
!1180 = !{!1181, !1182}
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "slab_list", scope: !1179, file: !989, line: 105, baseType: !243, size: 128)
!1182 = !DIDerivedType(tag: DW_TAG_member, scope: !1179, file: !989, line: 106, baseType: !1183, size: 128)
!1183 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1179, file: !989, line: 106, size: 128, elements: !1184)
!1184 = !{!1185, !1186, !1187}
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1183, file: !989, line: 107, baseType: !987, size: 64)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !1183, file: !989, line: 109, baseType: !170, size: 32, offset: 64)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "pobjects", scope: !1183, file: !989, line: 110, baseType: !170, size: 32, offset: 96)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "slab_cache", scope: !1176, file: !989, line: 117, baseType: !1189, size: 64, offset: 128)
!1189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1190, size: 64)
!1190 = !DICompositeType(tag: DW_TAG_structure_type, name: "kmem_cache", file: !989, line: 117, flags: DIFlagFwdDecl)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "freelist", scope: !1176, file: !989, line: 119, baseType: !192, size: 64, offset: 192)
!1192 = !DIDerivedType(tag: DW_TAG_member, scope: !1176, file: !989, line: 120, baseType: !1193, size: 64, offset: 256)
!1193 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1176, file: !989, line: 120, size: 64, elements: !1194)
!1194 = !{!1195, !1196, !1197}
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "s_mem", scope: !1193, file: !989, line: 121, baseType: !192, size: 64)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "counters", scope: !1193, file: !989, line: 122, baseType: !299, size: 64)
!1197 = !DIDerivedType(tag: DW_TAG_member, scope: !1193, file: !989, line: 123, baseType: !1198, size: 32)
!1198 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1193, file: !989, line: 123, size: 32, elements: !1199)
!1199 = !{!1200, !1201, !1202}
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "inuse", scope: !1198, file: !989, line: 124, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !1198, file: !989, line: 125, baseType: !7, size: 15, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !1198, file: !989, line: 126, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!1203 = !DIDerivedType(tag: DW_TAG_member, scope: !993, file: !989, line: 130, baseType: !1204, size: 192)
!1204 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !993, file: !989, line: 130, size: 192, elements: !1205)
!1205 = !{!1206, !1207, !1208, !1209, !1210}
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "compound_head", scope: !1204, file: !989, line: 131, baseType: !299, size: 64)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "compound_dtor", scope: !1204, file: !989, line: 134, baseType: !354, size: 8, offset: 64)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "compound_order", scope: !1204, file: !989, line: 135, baseType: !354, size: 8, offset: 72)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "compound_mapcount", scope: !1204, file: !989, line: 136, baseType: !204, size: 32, offset: 96)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "compound_nr", scope: !1204, file: !989, line: 137, baseType: !7, size: 32, offset: 128)
!1211 = !DIDerivedType(tag: DW_TAG_member, scope: !993, file: !989, line: 139, baseType: !1212, size: 256)
!1212 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !993, file: !989, line: 139, size: 256, elements: !1213)
!1213 = !{!1214, !1215, !1216}
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "_compound_pad_1", scope: !1212, file: !989, line: 140, baseType: !299, size: 64)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "hpage_pinned_refcount", scope: !1212, file: !989, line: 141, baseType: !204, size: 32, offset: 64)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_list", scope: !1212, file: !989, line: 143, baseType: !243, size: 128, offset: 128)
!1217 = !DIDerivedType(tag: DW_TAG_member, scope: !993, file: !989, line: 145, baseType: !1218, size: 256)
!1218 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !993, file: !989, line: 145, size: 256, elements: !1219)
!1219 = !{!1220, !1221, !1224, !1225, !3220}
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_1", scope: !1218, file: !989, line: 146, baseType: !299, size: 64)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "pmd_huge_pte", scope: !1218, file: !989, line: 147, baseType: !1222, size: 64, offset: 64)
!1222 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgtable_t", file: !1223, line: 509, baseType: !987)
!1223 = !DIFile(filename: "./arch/x86/include/asm/pgtable_types.h", directory: "/home/lizy2001/genbc/linux")
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_2", scope: !1218, file: !989, line: 148, baseType: !299, size: 64, offset: 128)
!1225 = !DIDerivedType(tag: DW_TAG_member, scope: !1218, file: !989, line: 149, baseType: !1226, size: 64, offset: 192)
!1226 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1218, file: !989, line: 149, size: 64, elements: !1227)
!1227 = !{!1228, !3219}
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "pt_mm", scope: !1226, file: !989, line: 150, baseType: !1229, size: 64)
!1229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1230, size: 64)
!1230 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_struct", file: !989, line: 388, size: 7296, elements: !1231)
!1231 = !{!1232, !3218}
!1232 = !DIDerivedType(tag: DW_TAG_member, scope: !1230, file: !989, line: 389, baseType: !1233, size: 7296)
!1233 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1230, file: !989, line: 389, size: 7296, elements: !1234)
!1234 = !{!1235, !1353, !1354, !1355, !1359, !1360, !1361, !1362, !1363, !1370, !1371, !1372, !1373, !1374, !1375, !1376, !1377, !1378, !1379, !1380, !1381, !1382, !1383, !1384, !1385, !1386, !1387, !1388, !1389, !1390, !1391, !1392, !1393, !1394, !1395, !1396, !1397, !1398, !1399, !1400, !1404, !1410, !1413, !1453, !1454, !3202, !3203, !3206, !3207, !3208, !3211, !3212, !3213, !3216, !3217}
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !1233, file: !989, line: 390, baseType: !1236, size: 64)
!1236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1237, size: 64)
!1237 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_area_struct", file: !989, line: 305, size: 1472, elements: !1238)
!1238 = !{!1239, !1240, !1241, !1242, !1243, !1244, !1245, !1246, !1253, !1254, !1259, !1260, !1263, !1347, !1348, !1349, !1350, !1351}
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "vm_start", scope: !1237, file: !989, line: 308, baseType: !299, size: 64)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "vm_end", scope: !1237, file: !989, line: 309, baseType: !299, size: 64, offset: 64)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "vm_next", scope: !1237, file: !989, line: 313, baseType: !1236, size: 64, offset: 128)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "vm_prev", scope: !1237, file: !989, line: 313, baseType: !1236, size: 64, offset: 192)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "vm_rb", scope: !1237, file: !989, line: 315, baseType: !1023, size: 192, align: 64, offset: 256)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_gap", scope: !1237, file: !989, line: 323, baseType: !299, size: 64, offset: 448)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "vm_mm", scope: !1237, file: !989, line: 327, baseType: !1229, size: 64, offset: 512)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "vm_page_prot", scope: !1237, file: !989, line: 333, baseType: !1247, size: 64, offset: 576)
!1247 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprot_t", file: !1223, line: 284, baseType: !1248)
!1248 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pgprot", file: !1223, line: 284, size: 64, elements: !1249)
!1249 = !{!1250}
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "pgprot", scope: !1248, file: !1223, line: 284, baseType: !1251, size: 64)
!1251 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprotval_t", file: !1252, line: 19, baseType: !299)
!1252 = !DIFile(filename: "./arch/x86/include/asm/pgtable_64_types.h", directory: "/home/lizy2001/genbc/linux")
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "vm_flags", scope: !1237, file: !989, line: 334, baseType: !299, size: 64, offset: 640)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "shared", scope: !1237, file: !989, line: 343, baseType: !1255, size: 256, offset: 704)
!1255 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1237, file: !989, line: 340, size: 256, elements: !1256)
!1256 = !{!1257, !1258}
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !1255, file: !989, line: 341, baseType: !1023, size: 192, align: 64)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_last", scope: !1255, file: !989, line: 342, baseType: !299, size: 64, offset: 192)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma_chain", scope: !1237, file: !989, line: 351, baseType: !243, size: 128, offset: 960)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma", scope: !1237, file: !989, line: 353, baseType: !1261, size: 64, offset: 1088)
!1261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1262, size: 64)
!1262 = !DICompositeType(tag: DW_TAG_structure_type, name: "anon_vma", file: !989, line: 353, flags: DIFlagFwdDecl)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !1237, file: !989, line: 356, baseType: !1264, size: 64, offset: 1152)
!1264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1265, size: 64)
!1265 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1266)
!1266 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_operations_struct", file: !26, line: 557, size: 832, elements: !1267)
!1267 = !{!1268, !1272, !1273, !1277, !1281, !1321, !1325, !1329, !1333, !1334, !1335, !1339, !1343}
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !1266, file: !26, line: 558, baseType: !1269, size: 64)
!1269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1270, size: 64)
!1270 = !DISubroutineType(types: !1271)
!1271 = !{null, !1236}
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !1266, file: !26, line: 559, baseType: !1269, size: 64, offset: 64)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "split", scope: !1266, file: !26, line: 560, baseType: !1274, size: 64, offset: 128)
!1274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1275, size: 64)
!1275 = !DISubroutineType(types: !1276)
!1276 = !{!170, !1236, !299}
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "mremap", scope: !1266, file: !26, line: 561, baseType: !1278, size: 64, offset: 192)
!1278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1279, size: 64)
!1279 = !DISubroutineType(types: !1280)
!1280 = !{!170, !1236}
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "fault", scope: !1266, file: !26, line: 562, baseType: !1282, size: 64, offset: 256)
!1282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1283, size: 64)
!1283 = !DISubroutineType(types: !1284)
!1284 = !{!1285, !1286}
!1285 = !DIDerivedType(tag: DW_TAG_typedef, name: "vm_fault_t", file: !989, line: 682, baseType: !7)
!1286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1287, size: 64)
!1287 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_fault", file: !26, line: 508, size: 768, elements: !1288)
!1288 = !{!1289, !1290, !1291, !1292, !1293, !1294, !1301, !1308, !1314, !1315, !1316, !1318, !1320}
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "vma", scope: !1287, file: !26, line: 509, baseType: !1236, size: 64)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1287, file: !26, line: 510, baseType: !7, size: 32, offset: 64)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !1287, file: !26, line: 511, baseType: !1010, size: 32, offset: 96)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "pgoff", scope: !1287, file: !26, line: 512, baseType: !299, size: 64, offset: 128)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !1287, file: !26, line: 513, baseType: !299, size: 64, offset: 192)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !1287, file: !26, line: 514, baseType: !1295, size: 64, offset: 256)
!1295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1296, size: 64)
!1296 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmd_t", file: !1223, line: 385, baseType: !1297)
!1297 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1223, line: 385, size: 64, elements: !1298)
!1298 = !{!1299}
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !1297, file: !1223, line: 385, baseType: !1300, size: 64)
!1300 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmdval_t", file: !1252, line: 15, baseType: !299)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !1287, file: !26, line: 516, baseType: !1302, size: 64, offset: 320)
!1302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1303, size: 64)
!1303 = !DIDerivedType(tag: DW_TAG_typedef, name: "pud_t", file: !1223, line: 359, baseType: !1304)
!1304 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1223, line: 359, size: 64, elements: !1305)
!1305 = !{!1306}
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !1304, file: !1223, line: 359, baseType: !1307, size: 64)
!1307 = !DIDerivedType(tag: DW_TAG_typedef, name: "pudval_t", file: !1252, line: 16, baseType: !299)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "orig_pte", scope: !1287, file: !26, line: 519, baseType: !1309, size: 64, offset: 384)
!1309 = !DIDerivedType(tag: DW_TAG_typedef, name: "pte_t", file: !1252, line: 21, baseType: !1310)
!1310 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1252, line: 21, size: 64, elements: !1311)
!1311 = !{!1312}
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !1310, file: !1252, line: 21, baseType: !1313, size: 64)
!1313 = !DIDerivedType(tag: DW_TAG_typedef, name: "pteval_t", file: !1252, line: 14, baseType: !299)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "cow_page", scope: !1287, file: !26, line: 521, baseType: !987, size: 64, offset: 448)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !1287, file: !26, line: 522, baseType: !987, size: 64, offset: 512)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !1287, file: !26, line: 528, baseType: !1317, size: 64, offset: 576)
!1317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1309, size: 64)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !1287, file: !26, line: 532, baseType: !1319, size: 64, offset: 640)
!1319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !227, size: 64)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_pte", scope: !1287, file: !26, line: 536, baseType: !1222, size: 64, offset: 704)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "huge_fault", scope: !1266, file: !26, line: 563, baseType: !1322, size: 64, offset: 320)
!1322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1323, size: 64)
!1323 = !DISubroutineType(types: !1324)
!1324 = !{!1285, !1286, !25}
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "map_pages", scope: !1266, file: !26, line: 565, baseType: !1326, size: 64, offset: 384)
!1326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1327, size: 64)
!1327 = !DISubroutineType(types: !1328)
!1328 = !{null, !1286, !299, !299}
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "pagesize", scope: !1266, file: !26, line: 567, baseType: !1330, size: 64, offset: 448)
!1330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1331, size: 64)
!1331 = !DISubroutineType(types: !1332)
!1332 = !{!299, !1236}
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "page_mkwrite", scope: !1266, file: !26, line: 571, baseType: !1282, size: 64, offset: 512)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "pfn_mkwrite", scope: !1266, file: !26, line: 574, baseType: !1282, size: 64, offset: 576)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "access", scope: !1266, file: !26, line: 579, baseType: !1336, size: 64, offset: 640)
!1336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1337, size: 64)
!1337 = !DISubroutineType(types: !1338)
!1338 = !{!170, !1236, !299, !192, !170, !170}
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1266, file: !26, line: 585, baseType: !1340, size: 64, offset: 704)
!1340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1341, size: 64)
!1341 = !DISubroutineType(types: !1342)
!1342 = !{!335, !1236}
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "find_special_page", scope: !1266, file: !26, line: 615, baseType: !1344, size: 64, offset: 768)
!1344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1345, size: 64)
!1345 = !DISubroutineType(types: !1346)
!1346 = !{!987, !1236, !299}
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "vm_pgoff", scope: !1237, file: !989, line: 359, baseType: !299, size: 64, offset: 1216)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "vm_file", scope: !1237, file: !989, line: 361, baseType: !587, size: 64, offset: 1280)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "vm_private_data", scope: !1237, file: !989, line: 362, baseType: !192, size: 64, offset: 1344)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "swap_readahead_info", scope: !1237, file: !989, line: 365, baseType: !217, size: 64, offset: 1408)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "vm_userfaultfd_ctx", scope: !1237, file: !989, line: 373, baseType: !1352, offset: 1472)
!1352 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_userfaultfd_ctx", file: !989, line: 296, elements: !241)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "mm_rb", scope: !1233, file: !989, line: 391, baseType: !1019, size: 64, offset: 64)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache_seqnum", scope: !1233, file: !989, line: 392, baseType: !652, size: 64, offset: 128)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !1233, file: !989, line: 394, baseType: !1356, size: 64, offset: 192)
!1356 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1357, size: 64)
!1357 = !DISubroutineType(types: !1358)
!1358 = !{!299, !587, !299, !299, !299, !299}
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_base", scope: !1233, file: !989, line: 398, baseType: !299, size: 64, offset: 256)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_legacy_base", scope: !1233, file: !989, line: 399, baseType: !299, size: 64, offset: 320)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "task_size", scope: !1233, file: !989, line: 405, baseType: !299, size: 64, offset: 384)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "highest_vm_end", scope: !1233, file: !989, line: 406, baseType: !299, size: 64, offset: 448)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !1233, file: !989, line: 407, baseType: !1364, size: 64, offset: 512)
!1364 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1365, size: 64)
!1365 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgd_t", file: !1223, line: 286, baseType: !1366)
!1366 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1223, line: 286, size: 64, elements: !1367)
!1367 = !{!1368}
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !1366, file: !1223, line: 286, baseType: !1369, size: 64)
!1369 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgdval_t", file: !1252, line: 18, baseType: !299)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "membarrier_state", scope: !1233, file: !989, line: 416, baseType: !204, size: 32, offset: 576)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "mm_users", scope: !1233, file: !989, line: 428, baseType: !204, size: 32, offset: 608)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "mm_count", scope: !1233, file: !989, line: 437, baseType: !204, size: 32, offset: 640)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "has_pinned", scope: !1233, file: !989, line: 447, baseType: !204, size: 32, offset: 672)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "pgtables_bytes", scope: !1233, file: !989, line: 450, baseType: !217, size: 64, offset: 704)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "map_count", scope: !1233, file: !989, line: 452, baseType: !170, size: 32, offset: 768)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "page_table_lock", scope: !1233, file: !989, line: 454, baseType: !227, offset: 800)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_lock", scope: !1233, file: !989, line: 457, baseType: !1030, size: 256, offset: 832)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "mmlist", scope: !1233, file: !989, line: 459, baseType: !243, size: 128, offset: 1088)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_rss", scope: !1233, file: !989, line: 466, baseType: !299, size: 64, offset: 1216)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_vm", scope: !1233, file: !989, line: 467, baseType: !299, size: 64, offset: 1280)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "total_vm", scope: !1233, file: !989, line: 469, baseType: !299, size: 64, offset: 1344)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !1233, file: !989, line: 470, baseType: !299, size: 64, offset: 1408)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "pinned_vm", scope: !1233, file: !989, line: 471, baseType: !219, size: 64, offset: 1472)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "data_vm", scope: !1233, file: !989, line: 472, baseType: !299, size: 64, offset: 1536)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "exec_vm", scope: !1233, file: !989, line: 473, baseType: !299, size: 64, offset: 1600)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm", scope: !1233, file: !989, line: 474, baseType: !299, size: 64, offset: 1664)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "def_flags", scope: !1233, file: !989, line: 475, baseType: !299, size: 64, offset: 1728)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "arg_lock", scope: !1233, file: !989, line: 477, baseType: !227, offset: 1792)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "start_code", scope: !1233, file: !989, line: 478, baseType: !299, size: 64, offset: 1792)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "end_code", scope: !1233, file: !989, line: 478, baseType: !299, size: 64, offset: 1856)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "start_data", scope: !1233, file: !989, line: 478, baseType: !299, size: 64, offset: 1920)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "end_data", scope: !1233, file: !989, line: 478, baseType: !299, size: 64, offset: 1984)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "start_brk", scope: !1233, file: !989, line: 479, baseType: !299, size: 64, offset: 2048)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "brk", scope: !1233, file: !989, line: 479, baseType: !299, size: 64, offset: 2112)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "start_stack", scope: !1233, file: !989, line: 479, baseType: !299, size: 64, offset: 2176)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "arg_start", scope: !1233, file: !989, line: 480, baseType: !299, size: 64, offset: 2240)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "arg_end", scope: !1233, file: !989, line: 480, baseType: !299, size: 64, offset: 2304)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "env_start", scope: !1233, file: !989, line: 480, baseType: !299, size: 64, offset: 2368)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "env_end", scope: !1233, file: !989, line: 480, baseType: !299, size: 64, offset: 2432)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "saved_auxv", scope: !1233, file: !989, line: 482, baseType: !1401, size: 2816, offset: 2496)
!1401 = !DICompositeType(tag: DW_TAG_array_type, baseType: !299, size: 2816, elements: !1402)
!1402 = !{!1403}
!1403 = !DISubrange(count: 44)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "rss_stat", scope: !1233, file: !989, line: 488, baseType: !1405, size: 256, offset: 5312)
!1405 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_rss_stat", file: !1406, line: 60, size: 256, elements: !1407)
!1406 = !DIFile(filename: "./include/linux/mm_types_task.h", directory: "/home/lizy2001/genbc/linux")
!1407 = !{!1408}
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1405, file: !1406, line: 61, baseType: !1409, size: 256)
!1409 = !DICompositeType(tag: DW_TAG_array_type, baseType: !217, size: 256, elements: !288)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "binfmt", scope: !1233, file: !989, line: 490, baseType: !1411, size: 64, offset: 5568)
!1411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1412, size: 64)
!1412 = !DICompositeType(tag: DW_TAG_structure_type, name: "linux_binfmt", file: !989, line: 490, flags: DIFlagFwdDecl)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1233, file: !989, line: 493, baseType: !1414, size: 896, offset: 5632)
!1414 = !DIDerivedType(tag: DW_TAG_typedef, name: "mm_context_t", file: !1415, line: 53, baseType: !1416)
!1415 = !DIFile(filename: "./arch/x86/include/asm/mmu.h", directory: "/home/lizy2001/genbc/linux")
!1416 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1415, line: 13, size: 896, elements: !1417)
!1417 = !{!1418, !1419, !1420, !1421, !1424, !1425, !1426, !1427, !1447, !1448, !1449}
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_id", scope: !1416, file: !1415, line: 18, baseType: !652, size: 64)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_gen", scope: !1416, file: !1415, line: 28, baseType: !219, size: 64, offset: 64)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "ldt_usr_sem", scope: !1416, file: !1415, line: 31, baseType: !1030, size: 256, offset: 128)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "ldt", scope: !1416, file: !1415, line: 32, baseType: !1422, size: 64, offset: 384)
!1422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1423, size: 64)
!1423 = !DICompositeType(tag: DW_TAG_structure_type, name: "ldt_struct", file: !1415, line: 32, flags: DIFlagFwdDecl)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "ia32_compat", scope: !1416, file: !1415, line: 37, baseType: !198, size: 16, offset: 448)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1416, file: !1415, line: 40, baseType: !213, size: 192, offset: 512)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "vdso", scope: !1416, file: !1415, line: 41, baseType: !192, size: 64, offset: 704)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "vdso_image", scope: !1416, file: !1415, line: 42, baseType: !1428, size: 64, offset: 768)
!1428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1429, size: 64)
!1429 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1430)
!1430 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vdso_image", file: !1431, line: 13, size: 896, elements: !1432)
!1431 = !DIFile(filename: "./arch/x86/include/asm/vdso.h", directory: "/home/lizy2001/genbc/linux")
!1432 = !{!1433, !1434, !1435, !1436, !1437, !1438, !1439, !1440, !1441, !1442, !1443, !1444, !1445, !1446}
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1430, file: !1431, line: 14, baseType: !192, size: 64)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1430, file: !1431, line: 15, baseType: !299, size: 64, offset: 64)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "alt", scope: !1430, file: !1431, line: 17, baseType: !299, size: 64, offset: 128)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "alt_len", scope: !1430, file: !1431, line: 17, baseType: !299, size: 64, offset: 192)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_start", scope: !1430, file: !1431, line: 19, baseType: !138, size: 64, offset: 256)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_page", scope: !1430, file: !1431, line: 21, baseType: !138, size: 64, offset: 320)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "sym_pvclock_page", scope: !1430, file: !1431, line: 22, baseType: !138, size: 64, offset: 384)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "sym_hvclock_page", scope: !1430, file: !1431, line: 23, baseType: !138, size: 64, offset: 448)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "sym_timens_page", scope: !1430, file: !1431, line: 24, baseType: !138, size: 64, offset: 512)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "sym_VDSO32_NOTE_MASK", scope: !1430, file: !1431, line: 25, baseType: !138, size: 64, offset: 576)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_sigreturn", scope: !1430, file: !1431, line: 26, baseType: !138, size: 64, offset: 640)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_rt_sigreturn", scope: !1430, file: !1431, line: 27, baseType: !138, size: 64, offset: 704)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_vsyscall", scope: !1430, file: !1431, line: 28, baseType: !138, size: 64, offset: 768)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "sym_int80_landing_pad", scope: !1430, file: !1431, line: 29, baseType: !138, size: 64, offset: 832)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "perf_rdpmc_allowed", scope: !1416, file: !1415, line: 44, baseType: !204, size: 32, offset: 832)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "pkey_allocation_map", scope: !1416, file: !1415, line: 50, baseType: !194, size: 16, offset: 864)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "execute_only_pkey", scope: !1416, file: !1415, line: 51, baseType: !1450, size: 16, offset: 880)
!1450 = !DIDerivedType(tag: DW_TAG_typedef, name: "s16", file: !195, line: 18, baseType: !1451)
!1451 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s16", file: !197, line: 23, baseType: !1452)
!1452 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1233, file: !989, line: 495, baseType: !299, size: 64, offset: 6528)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "core_state", scope: !1233, file: !989, line: 497, baseType: !1455, size: 64, offset: 6592)
!1455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1456, size: 64)
!1456 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_state", file: !989, line: 381, size: 384, elements: !1457)
!1457 = !{!1458, !1459, !3201}
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !1456, file: !989, line: 382, baseType: !204, size: 32)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "dumper", scope: !1456, file: !989, line: 383, baseType: !1460, size: 128, offset: 64)
!1460 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_thread", file: !989, line: 376, size: 128, elements: !1461)
!1461 = !{!1462, !3199}
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !1460, file: !989, line: 377, baseType: !1463, size: 64)
!1463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1464, size: 64)
!1464 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_struct", file: !1465, line: 640, size: 48640, elements: !1466)
!1465 = !DIFile(filename: "./include/linux/sched.h", directory: "/home/lizy2001/genbc/linux")
!1466 = !{!1467, !1473, !1475, !1476, !1482, !1483, !1484, !1485, !1486, !1487, !1488, !1489, !1493, !1511, !1522, !1605, !1606, !1607, !1618, !1619, !1621, !1622, !1623, !1624, !1630, !1631, !1632, !1633, !1634, !1635, !1636, !1637, !1638, !1639, !1640, !1641, !1642, !1643, !1644, !1645, !1703, !1706, !1707, !1708, !1709, !1710, !1711, !1712, !1713, !1714, !1715, !1778, !1780, !1781, !1782, !1794, !1795, !1796, !1797, !1798, !1799, !1805, !1806, !1807, !1808, !1809, !1810, !1811, !1823, !1828, !2008, !2009, !2010, !2011, !2012, !2015, !2018, !2021, !2024, !2050, !2754, !2783, !2784, !2785, !2786, !2787, !2788, !2789, !2790, !2791, !2800, !2801, !2802, !2803, !2804, !2809, !2810, !2811, !2814, !2815, !2818, !2821, !2824, !2827, !2859, !2862, !2863, !2942, !2943, !2946, !2947, !2950, !2951, !2952, !2956, !2957, !2958, !2971, !2972, !2973, !2983, !2988, !2989, !2995, !2996, !2997, !2998, !2999, !3000, !3001, !3002, !3018, !3019, !3020, !3021, !3022, !3023, !3024, !3025, !3026}
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "thread_info", scope: !1464, file: !1465, line: 646, baseType: !1468, size: 128)
!1468 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_info", file: !1469, line: 56, size: 128, elements: !1470)
!1469 = !DIFile(filename: "./arch/x86/include/asm/thread_info.h", directory: "/home/lizy2001/genbc/linux")
!1470 = !{!1471, !1472}
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1468, file: !1469, line: 57, baseType: !299, size: 64)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !1468, file: !1469, line: 58, baseType: !338, size: 32, offset: 64)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1464, file: !1465, line: 649, baseType: !1474, size: 64, offset: 128)
!1474 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !138)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !1464, file: !1465, line: 657, baseType: !192, size: 64, offset: 192)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1464, file: !1465, line: 658, baseType: !1477, size: 32, offset: 256)
!1477 = !DIDerivedType(tag: DW_TAG_typedef, name: "refcount_t", file: !1478, line: 113, baseType: !1479)
!1478 = !DIFile(filename: "./include/linux/refcount.h", directory: "/home/lizy2001/genbc/linux")
!1479 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "refcount_struct", file: !1478, line: 111, size: 32, elements: !1480)
!1480 = !{!1481}
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !1479, file: !1478, line: 112, baseType: !204, size: 32)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1464, file: !1465, line: 660, baseType: !7, size: 32, offset: 288)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace", scope: !1464, file: !1465, line: 661, baseType: !7, size: 32, offset: 320)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1464, file: !1465, line: 684, baseType: !170, size: 32, offset: 352)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1464, file: !1465, line: 686, baseType: !170, size: 32, offset: 384)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "static_prio", scope: !1464, file: !1465, line: 687, baseType: !170, size: 32, offset: 416)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "normal_prio", scope: !1464, file: !1465, line: 688, baseType: !170, size: 32, offset: 448)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "rt_priority", scope: !1464, file: !1465, line: 689, baseType: !7, size: 32, offset: 480)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "sched_class", scope: !1464, file: !1465, line: 691, baseType: !1490, size: 64, offset: 512)
!1490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1491, size: 64)
!1491 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1492)
!1492 = !DICompositeType(tag: DW_TAG_structure_type, name: "sched_class", file: !1465, line: 691, flags: DIFlagFwdDecl)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "se", scope: !1464, file: !1465, line: 692, baseType: !1494, size: 832, offset: 576)
!1494 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_entity", file: !1465, line: 451, size: 832, elements: !1495)
!1495 = !{!1496, !1501, !1502, !1503, !1504, !1505, !1506, !1507, !1508, !1509}
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "load", scope: !1494, file: !1465, line: 453, baseType: !1497, size: 128)
!1497 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "load_weight", file: !1465, line: 325, size: 128, elements: !1498)
!1498 = !{!1499, !1500}
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1497, file: !1465, line: 326, baseType: !299, size: 64)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "inv_weight", scope: !1497, file: !1465, line: 327, baseType: !338, size: 32, offset: 64)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "run_node", scope: !1494, file: !1465, line: 454, baseType: !1023, size: 192, align: 64, offset: 128)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "group_node", scope: !1494, file: !1465, line: 455, baseType: !243, size: 128, offset: 320)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1494, file: !1465, line: 456, baseType: !7, size: 32, offset: 448)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "exec_start", scope: !1494, file: !1465, line: 458, baseType: !652, size: 64, offset: 512)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !1494, file: !1465, line: 459, baseType: !652, size: 64, offset: 576)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "vruntime", scope: !1494, file: !1465, line: 460, baseType: !652, size: 64, offset: 640)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "prev_sum_exec_runtime", scope: !1494, file: !1465, line: 461, baseType: !652, size: 64, offset: 704)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "nr_migrations", scope: !1494, file: !1465, line: 463, baseType: !652, size: 64, offset: 768)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "statistics", scope: !1494, file: !1465, line: 465, baseType: !1510, offset: 832)
!1510 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_statistics", file: !1465, line: 415, elements: !241)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1464, file: !1465, line: 693, baseType: !1512, size: 384, offset: 1408)
!1512 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_rt_entity", file: !1465, line: 489, size: 384, elements: !1513)
!1513 = !{!1514, !1515, !1516, !1517, !1518, !1519, !1520}
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "run_list", scope: !1512, file: !1465, line: 490, baseType: !243, size: 128)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1512, file: !1465, line: 491, baseType: !299, size: 64, offset: 128)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_stamp", scope: !1512, file: !1465, line: 492, baseType: !299, size: 64, offset: 192)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "time_slice", scope: !1512, file: !1465, line: 493, baseType: !7, size: 32, offset: 256)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1512, file: !1465, line: 494, baseType: !198, size: 16, offset: 288)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "on_list", scope: !1512, file: !1465, line: 495, baseType: !198, size: 16, offset: 304)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !1512, file: !1465, line: 497, baseType: !1521, size: 64, offset: 320)
!1521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1512, size: 64)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "dl", scope: !1464, file: !1465, line: 697, baseType: !1523, size: 1792, offset: 1792)
!1523 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_dl_entity", file: !1465, line: 507, size: 1792, elements: !1524)
!1524 = !{!1525, !1526, !1527, !1528, !1529, !1530, !1531, !1532, !1533, !1534, !1535, !1536, !1537, !1538, !1602, !1603}
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !1523, file: !1465, line: 508, baseType: !1023, size: 192, align: 64)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "dl_runtime", scope: !1523, file: !1465, line: 515, baseType: !652, size: 64, offset: 192)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "dl_deadline", scope: !1523, file: !1465, line: 516, baseType: !652, size: 64, offset: 256)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "dl_period", scope: !1523, file: !1465, line: 517, baseType: !652, size: 64, offset: 320)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "dl_bw", scope: !1523, file: !1465, line: 518, baseType: !652, size: 64, offset: 384)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "dl_density", scope: !1523, file: !1465, line: 519, baseType: !652, size: 64, offset: 448)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "runtime", scope: !1523, file: !1465, line: 526, baseType: !223, size: 64, offset: 512)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", scope: !1523, file: !1465, line: 527, baseType: !652, size: 64, offset: 576)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1523, file: !1465, line: 528, baseType: !7, size: 32, offset: 640)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "dl_throttled", scope: !1523, file: !1465, line: 554, baseType: !7, size: 1, offset: 672, flags: DIFlagBitField, extraData: i64 672)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "dl_yielded", scope: !1523, file: !1465, line: 555, baseType: !7, size: 1, offset: 673, flags: DIFlagBitField, extraData: i64 672)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "dl_non_contending", scope: !1523, file: !1465, line: 556, baseType: !7, size: 1, offset: 674, flags: DIFlagBitField, extraData: i64 672)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "dl_overrun", scope: !1523, file: !1465, line: 557, baseType: !7, size: 1, offset: 675, flags: DIFlagBitField, extraData: i64 672)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "dl_timer", scope: !1523, file: !1465, line: 563, baseType: !1539, size: 512, offset: 704)
!1539 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer", file: !32, line: 118, size: 512, elements: !1540)
!1540 = !{!1541, !1549, !1550, !1555, !1598, !1599, !1600, !1601}
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1539, file: !32, line: 119, baseType: !1542, size: 256)
!1542 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_node", file: !1543, line: 9, size: 256, elements: !1544)
!1543 = !DIFile(filename: "./include/linux/timerqueue.h", directory: "/home/lizy2001/genbc/linux")
!1544 = !{!1545, !1546}
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1542, file: !1543, line: 10, baseType: !1023, size: 192, align: 64)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1542, file: !1543, line: 11, baseType: !1547, size: 64, offset: 192)
!1547 = !DIDerivedType(tag: DW_TAG_typedef, name: "ktime_t", file: !1548, line: 29, baseType: !223)
!1548 = !DIFile(filename: "./include/linux/ktime.h", directory: "/home/lizy2001/genbc/linux")
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "_softexpires", scope: !1539, file: !32, line: 120, baseType: !1547, size: 64, offset: 256)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !1539, file: !32, line: 121, baseType: !1551, size: 64, offset: 320)
!1551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1552, size: 64)
!1552 = !DISubroutineType(types: !1553)
!1553 = !{!31, !1554}
!1554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1539, size: 64)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1539, file: !32, line: 122, baseType: !1556, size: 64, offset: 384)
!1556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1557, size: 64)
!1557 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_clock_base", file: !32, line: 159, size: 512, align: 512, elements: !1558)
!1558 = !{!1559, !1579, !1580, !1583, !1588, !1589, !1593, !1597}
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_base", scope: !1557, file: !32, line: 160, baseType: !1560, size: 64)
!1560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1561, size: 64)
!1561 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_cpu_base", file: !32, line: 214, size: 4608, align: 512, elements: !1562)
!1562 = !{!1563, !1564, !1565, !1566, !1567, !1568, !1569, !1570, !1571, !1572, !1573, !1574, !1575}
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1561, file: !32, line: 215, baseType: !1036)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !1561, file: !32, line: 216, baseType: !7, size: 32)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "active_bases", scope: !1561, file: !32, line: 217, baseType: !7, size: 32, offset: 32)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "clock_was_set_seq", scope: !1561, file: !32, line: 218, baseType: !7, size: 32, offset: 64)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "hres_active", scope: !1561, file: !32, line: 219, baseType: !7, size: 1, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "in_hrtirq", scope: !1561, file: !32, line: 220, baseType: !7, size: 1, offset: 97, flags: DIFlagBitField, extraData: i64 96)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "hang_detected", scope: !1561, file: !32, line: 221, baseType: !7, size: 1, offset: 98, flags: DIFlagBitField, extraData: i64 96)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_activated", scope: !1561, file: !32, line: 222, baseType: !7, size: 1, offset: 99, flags: DIFlagBitField, extraData: i64 96)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "expires_next", scope: !1561, file: !32, line: 233, baseType: !1547, size: 64, offset: 128)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "next_timer", scope: !1561, file: !32, line: 234, baseType: !1554, size: 64, offset: 192)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_expires_next", scope: !1561, file: !32, line: 235, baseType: !1547, size: 64, offset: 256)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_next_timer", scope: !1561, file: !32, line: 236, baseType: !1554, size: 64, offset: 320)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "clock_base", scope: !1561, file: !32, line: 237, baseType: !1576, size: 4096, offset: 512)
!1576 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1557, size: 4096, elements: !1577)
!1577 = !{!1578}
!1578 = !DISubrange(count: 8)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1557, file: !32, line: 161, baseType: !7, size: 32, offset: 64)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !1557, file: !32, line: 162, baseType: !1581, size: 32, offset: 96)
!1581 = !DIDerivedType(tag: DW_TAG_typedef, name: "clockid_t", file: !205, line: 27, baseType: !1582)
!1582 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clockid_t", file: !545, line: 96, baseType: !170)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !1557, file: !32, line: 163, baseType: !1584, size: 32, offset: 128)
!1584 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_raw_spinlock_t", file: !623, line: 276, baseType: !1585)
!1585 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_raw_spinlock", file: !623, line: 276, size: 32, elements: !1586)
!1586 = !{!1587}
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !1585, file: !623, line: 276, baseType: !627, size: 32)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "running", scope: !1557, file: !32, line: 164, baseType: !1554, size: 64, offset: 192)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !1557, file: !32, line: 165, baseType: !1590, size: 128, offset: 256)
!1590 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_head", file: !1543, line: 14, size: 128, elements: !1591)
!1591 = !{!1592}
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !1590, file: !1543, line: 15, baseType: !1015, size: 128)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "get_time", scope: !1557, file: !32, line: 166, baseType: !1594, size: 64, offset: 384)
!1594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1595, size: 64)
!1595 = !DISubroutineType(types: !1596)
!1596 = !{!1547}
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1557, file: !32, line: 167, baseType: !1547, size: 64, offset: 448)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1539, file: !32, line: 123, baseType: !398, size: 8, offset: 448)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "is_rel", scope: !1539, file: !32, line: 124, baseType: !398, size: 8, offset: 456)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "is_soft", scope: !1539, file: !32, line: 125, baseType: !398, size: 8, offset: 464)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "is_hard", scope: !1539, file: !32, line: 126, baseType: !398, size: 8, offset: 472)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "inactive_timer", scope: !1523, file: !1465, line: 572, baseType: !1539, size: 512, offset: 1216)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "pi_se", scope: !1523, file: !1465, line: 580, baseType: !1604, size: 64, offset: 1728)
!1604 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1523, size: 64)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !1464, file: !1465, line: 721, baseType: !7, size: 32, offset: 3584)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cpus_allowed", scope: !1464, file: !1465, line: 722, baseType: !170, size: 32, offset: 3616)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_ptr", scope: !1464, file: !1465, line: 723, baseType: !1608, size: 64, offset: 3648)
!1608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1609, size: 64)
!1609 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1610)
!1610 = !DIDerivedType(tag: DW_TAG_typedef, name: "cpumask_t", file: !1611, line: 17, baseType: !1612)
!1611 = !DIFile(filename: "./include/linux/cpumask.h", directory: "/home/lizy2001/genbc/linux")
!1612 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpumask", file: !1611, line: 17, size: 64, elements: !1613)
!1613 = !{!1614}
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !1612, file: !1611, line: 17, baseType: !1615, size: 64)
!1615 = !DICompositeType(tag: DW_TAG_array_type, baseType: !299, size: 64, elements: !1616)
!1616 = !{!1617}
!1617 = !DISubrange(count: 1)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_mask", scope: !1464, file: !1465, line: 724, baseType: !1610, size: 64, offset: 3712)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "sched_info", scope: !1464, file: !1465, line: 749, baseType: !1620, offset: 3776)
!1620 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_info", file: !1465, line: 290, elements: !241)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !1464, file: !1465, line: 751, baseType: !243, size: 128, offset: 3776)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "mm", scope: !1464, file: !1465, line: 757, baseType: !1229, size: 64, offset: 3904)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "active_mm", scope: !1464, file: !1465, line: 758, baseType: !1229, size: 64, offset: 3968)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache", scope: !1464, file: !1465, line: 761, baseType: !1625, size: 320, offset: 4032)
!1625 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmacache", file: !1406, line: 34, size: 320, elements: !1626)
!1626 = !{!1627, !1628}
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "seqnum", scope: !1625, file: !1406, line: 35, baseType: !652, size: 64)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "vmas", scope: !1625, file: !1406, line: 36, baseType: !1629, size: 256, offset: 64)
!1629 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1236, size: 256, elements: !288)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "exit_state", scope: !1464, file: !1465, line: 766, baseType: !170, size: 32, offset: 4352)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "exit_code", scope: !1464, file: !1465, line: 767, baseType: !170, size: 32, offset: 4384)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "exit_signal", scope: !1464, file: !1465, line: 768, baseType: !170, size: 32, offset: 4416)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "pdeath_signal", scope: !1464, file: !1465, line: 770, baseType: !170, size: 32, offset: 4448)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "jobctl", scope: !1464, file: !1465, line: 772, baseType: !299, size: 64, offset: 4480)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !1464, file: !1465, line: 775, baseType: !7, size: 32, offset: 4544)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "sched_reset_on_fork", scope: !1464, file: !1465, line: 778, baseType: !7, size: 1, offset: 4576, flags: DIFlagBitField, extraData: i64 4576)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "sched_contributes_to_load", scope: !1464, file: !1465, line: 779, baseType: !7, size: 1, offset: 4577, flags: DIFlagBitField, extraData: i64 4576)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "sched_migrated", scope: !1464, file: !1465, line: 780, baseType: !7, size: 1, offset: 4578, flags: DIFlagBitField, extraData: i64 4576)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "sched_remote_wakeup", scope: !1464, file: !1465, line: 803, baseType: !7, size: 1, offset: 4608, flags: DIFlagBitField, extraData: i64 4608)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "in_execve", scope: !1464, file: !1465, line: 806, baseType: !7, size: 1, offset: 4609, flags: DIFlagBitField, extraData: i64 4608)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "in_iowait", scope: !1464, file: !1465, line: 807, baseType: !7, size: 1, offset: 4610, flags: DIFlagBitField, extraData: i64 4608)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "restore_sigmask", scope: !1464, file: !1465, line: 809, baseType: !7, size: 1, offset: 4611, flags: DIFlagBitField, extraData: i64 4608)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "brk_randomized", scope: !1464, file: !1465, line: 815, baseType: !7, size: 1, offset: 4612, flags: DIFlagBitField, extraData: i64 4608)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_flags", scope: !1464, file: !1465, line: 831, baseType: !299, size: 64, offset: 4672)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "restart_block", scope: !1464, file: !1465, line: 833, baseType: !1646, size: 384, offset: 4736)
!1646 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "restart_block", file: !37, line: 25, size: 384, elements: !1647)
!1647 = !{!1648, !1653}
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1646, file: !37, line: 26, baseType: !1649, size: 64)
!1649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1650, size: 64)
!1650 = !DISubroutineType(types: !1651)
!1651 = !{!138, !1652}
!1652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1646, size: 64)
!1653 = !DIDerivedType(tag: DW_TAG_member, scope: !1646, file: !37, line: 27, baseType: !1654, size: 320, offset: 64)
!1654 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1646, file: !37, line: 27, size: 320, elements: !1655)
!1655 = !{!1656, !1666, !1693}
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "futex", scope: !1654, file: !37, line: 36, baseType: !1657, size: 320)
!1657 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1654, file: !37, line: 29, size: 320, elements: !1658)
!1658 = !{!1659, !1661, !1662, !1663, !1664, !1665}
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr", scope: !1657, file: !37, line: 30, baseType: !1660, size: 64)
!1660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !338, size: 64)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1657, file: !37, line: 31, baseType: !338, size: 32, offset: 64)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1657, file: !37, line: 32, baseType: !338, size: 32, offset: 96)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "bitset", scope: !1657, file: !37, line: 33, baseType: !338, size: 32, offset: 128)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !1657, file: !37, line: 34, baseType: !652, size: 64, offset: 192)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr2", scope: !1657, file: !37, line: 35, baseType: !1660, size: 64, offset: 256)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "nanosleep", scope: !1654, file: !37, line: 46, baseType: !1667, size: 192)
!1667 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1654, file: !37, line: 38, size: 192, elements: !1668)
!1668 = !{!1669, !1670, !1671, !1692}
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !1667, file: !37, line: 39, baseType: !1581, size: 32)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1667, file: !37, line: 40, baseType: !36, size: 32, offset: 32)
!1671 = !DIDerivedType(tag: DW_TAG_member, scope: !1667, file: !37, line: 41, baseType: !1672, size: 64, offset: 64)
!1672 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1667, file: !37, line: 41, size: 64, elements: !1673)
!1673 = !{!1674, !1682}
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "rmtp", scope: !1672, file: !37, line: 42, baseType: !1675, size: 64)
!1675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1676, size: 64)
!1676 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__kernel_timespec", file: !1677, line: 7, size: 128, elements: !1678)
!1677 = !DIFile(filename: "./include/uapi/linux/time_types.h", directory: "/home/lizy2001/genbc/linux")
!1678 = !{!1679, !1681}
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1676, file: !1677, line: 8, baseType: !1680, size: 64)
!1680 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_time64_t", file: !545, line: 93, baseType: !225)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1676, file: !1677, line: 9, baseType: !225, size: 64, offset: 64)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "compat_rmtp", scope: !1672, file: !37, line: 43, baseType: !1683, size: 64)
!1683 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1684, size: 64)
!1684 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "old_timespec32", file: !1685, line: 7, size: 64, elements: !1686)
!1685 = !DIFile(filename: "./include/vdso/time32.h", directory: "/home/lizy2001/genbc/linux")
!1686 = !{!1687, !1691}
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1684, file: !1685, line: 8, baseType: !1688, size: 32)
!1688 = !DIDerivedType(tag: DW_TAG_typedef, name: "old_time32_t", file: !1685, line: 5, baseType: !1689)
!1689 = !DIDerivedType(tag: DW_TAG_typedef, name: "s32", file: !195, line: 20, baseType: !1690)
!1690 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s32", file: !197, line: 26, baseType: !170)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1684, file: !1685, line: 9, baseType: !1689, size: 32, offset: 32)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1667, file: !37, line: 45, baseType: !652, size: 64, offset: 128)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !1654, file: !37, line: 54, baseType: !1694, size: 256)
!1694 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1654, file: !37, line: 48, size: 256, elements: !1695)
!1695 = !{!1696, !1699, !1700, !1701, !1702}
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "ufds", scope: !1694, file: !37, line: 49, baseType: !1697, size: 64)
!1697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1698, size: 64)
!1698 = !DICompositeType(tag: DW_TAG_structure_type, name: "pollfd", file: !37, line: 14, flags: DIFlagFwdDecl)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "nfds", scope: !1694, file: !37, line: 50, baseType: !170, size: 32, offset: 64)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "has_timeout", scope: !1694, file: !37, line: 51, baseType: !170, size: 32, offset: 96)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1694, file: !37, line: 52, baseType: !299, size: 64, offset: 128)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1694, file: !37, line: 53, baseType: !299, size: 64, offset: 192)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !1464, file: !1465, line: 835, baseType: !1704, size: 32, offset: 5120)
!1704 = !DIDerivedType(tag: DW_TAG_typedef, name: "pid_t", file: !205, line: 22, baseType: !1705)
!1705 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_pid_t", file: !545, line: 28, baseType: !170)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "tgid", scope: !1464, file: !1465, line: 836, baseType: !1704, size: 32, offset: 5152)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "stack_canary", scope: !1464, file: !1465, line: 840, baseType: !299, size: 64, offset: 5184)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "real_parent", scope: !1464, file: !1465, line: 849, baseType: !1463, size: 64, offset: 5248)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1464, file: !1465, line: 852, baseType: !1463, size: 64, offset: 5312)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1464, file: !1465, line: 857, baseType: !243, size: 128, offset: 5376)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !1464, file: !1465, line: 858, baseType: !243, size: 128, offset: 5504)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "group_leader", scope: !1464, file: !1465, line: 859, baseType: !1463, size: 64, offset: 5632)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "ptraced", scope: !1464, file: !1465, line: 867, baseType: !243, size: 128, offset: 5696)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_entry", scope: !1464, file: !1465, line: 868, baseType: !243, size: 128, offset: 5824)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "thread_pid", scope: !1464, file: !1465, line: 871, baseType: !1716, size: 64, offset: 5952)
!1716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1717, size: 64)
!1717 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pid", file: !65, line: 59, size: 768, elements: !1718)
!1718 = !{!1719, !1720, !1721, !1722, !1724, !1725, !1732, !1733}
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1717, file: !65, line: 61, baseType: !1477, size: 32)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1717, file: !65, line: 62, baseType: !7, size: 32, offset: 32)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1717, file: !65, line: 63, baseType: !227, offset: 64)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !1717, file: !65, line: 65, baseType: !1723, size: 256, offset: 64)
!1723 = !DICompositeType(tag: DW_TAG_array_type, baseType: !866, size: 256, elements: !288)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "inodes", scope: !1717, file: !65, line: 66, baseType: !866, size: 64, offset: 320)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "wait_pidfd", scope: !1717, file: !65, line: 68, baseType: !1726, size: 128, offset: 384)
!1726 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_head_t", file: !1727, line: 40, baseType: !1728)
!1727 = !DIFile(filename: "./include/linux/wait.h", directory: "/home/lizy2001/genbc/linux")
!1728 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_head", file: !1727, line: 36, size: 128, elements: !1729)
!1729 = !{!1730, !1731}
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1728, file: !1727, line: 37, baseType: !227)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1728, file: !1727, line: 38, baseType: !243, size: 128)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1717, file: !65, line: 69, baseType: !600, size: 128, align: 64, offset: 512)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "numbers", scope: !1717, file: !65, line: 70, baseType: !1734, size: 128, offset: 640)
!1734 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1735, size: 128, elements: !1616)
!1735 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "upid", file: !65, line: 54, size: 128, elements: !1736)
!1736 = !{!1737, !1738}
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !1735, file: !65, line: 55, baseType: !170, size: 32)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !1735, file: !65, line: 56, baseType: !1739, size: 64, offset: 64)
!1739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1740, size: 64)
!1740 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pid_namespace", file: !1741, line: 20, size: 1088, elements: !1742)
!1741 = !DIFile(filename: "./include/linux/pid_namespace.h", directory: "/home/lizy2001/genbc/linux")
!1742 = !{!1743, !1748, !1755, !1756, !1757, !1758, !1759, !1760, !1761, !1764, !1767, !1768}
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !1740, file: !1741, line: 21, baseType: !1744, size: 32)
!1744 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kref", file: !1745, line: 19, size: 32, elements: !1746)
!1745 = !DIFile(filename: "./include/linux/kref.h", directory: "/home/lizy2001/genbc/linux")
!1746 = !{!1747}
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !1744, file: !1745, line: 20, baseType: !1477, size: 32)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "idr", scope: !1740, file: !1741, line: 22, baseType: !1749, size: 192, offset: 64)
!1749 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "idr", file: !1750, line: 19, size: 192, elements: !1751)
!1750 = !DIFile(filename: "./include/linux/idr.h", directory: "/home/lizy2001/genbc/linux")
!1751 = !{!1752, !1753, !1754}
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "idr_rt", scope: !1749, file: !1750, line: 20, baseType: !1005, size: 128)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "idr_base", scope: !1749, file: !1750, line: 21, baseType: !7, size: 32, offset: 128)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "idr_next", scope: !1749, file: !1750, line: 22, baseType: !7, size: 32, offset: 160)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1740, file: !1741, line: 23, baseType: !600, size: 128, align: 64, offset: 256)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "pid_allocated", scope: !1740, file: !1741, line: 24, baseType: !7, size: 32, offset: 384)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "child_reaper", scope: !1740, file: !1741, line: 25, baseType: !1463, size: 64, offset: 448)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "pid_cachep", scope: !1740, file: !1741, line: 26, baseType: !1189, size: 64, offset: 512)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1740, file: !1741, line: 27, baseType: !7, size: 32, offset: 576)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1740, file: !1741, line: 28, baseType: !1739, size: 64, offset: 640)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1740, file: !1741, line: 32, baseType: !1762, size: 64, offset: 704)
!1762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1763, size: 64)
!1763 = !DICompositeType(tag: DW_TAG_structure_type, name: "user_namespace", file: !666, line: 18, flags: DIFlagFwdDecl)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "ucounts", scope: !1740, file: !1741, line: 33, baseType: !1765, size: 64, offset: 768)
!1765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1766, size: 64)
!1766 = !DICompositeType(tag: DW_TAG_structure_type, name: "ucounts", file: !1741, line: 33, flags: DIFlagFwdDecl)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "reboot", scope: !1740, file: !1741, line: 34, baseType: !170, size: 32, offset: 832)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !1740, file: !1741, line: 35, baseType: !1769, size: 192, offset: 896)
!1769 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ns_common", file: !1770, line: 7, size: 192, elements: !1771)
!1770 = !DIFile(filename: "./include/linux/ns_common.h", directory: "/home/lizy2001/genbc/linux")
!1771 = !{!1772, !1773, !1777}
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "stashed", scope: !1769, file: !1770, line: 8, baseType: !217, size: 64)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1769, file: !1770, line: 9, baseType: !1774, size: 64, offset: 64)
!1774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1775, size: 64)
!1775 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1776)
!1776 = !DICompositeType(tag: DW_TAG_structure_type, name: "proc_ns_operations", file: !1770, line: 5, flags: DIFlagFwdDecl)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "inum", scope: !1769, file: !1770, line: 10, baseType: !7, size: 32, offset: 128)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "pid_links", scope: !1464, file: !1465, line: 872, baseType: !1779, size: 512, offset: 6016)
!1779 = !DICompositeType(tag: DW_TAG_array_type, baseType: !870, size: 512, elements: !288)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "thread_group", scope: !1464, file: !1465, line: 873, baseType: !243, size: 128, offset: 6528)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "thread_node", scope: !1464, file: !1465, line: 874, baseType: !243, size: 128, offset: 6656)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "vfork_done", scope: !1464, file: !1465, line: 876, baseType: !1783, size: 64, offset: 6784)
!1783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1784, size: 64)
!1784 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "completion", file: !1785, line: 26, size: 192, elements: !1786)
!1785 = !DIFile(filename: "./include/linux/completion.h", directory: "/home/lizy2001/genbc/linux")
!1786 = !{!1787, !1788}
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !1784, file: !1785, line: 27, baseType: !7, size: 32)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !1784, file: !1785, line: 28, baseType: !1789, size: 128, offset: 64)
!1789 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swait_queue_head", file: !1790, line: 43, size: 128, elements: !1791)
!1790 = !DIFile(filename: "./include/linux/swait.h", directory: "/home/lizy2001/genbc/linux")
!1791 = !{!1792, !1793}
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1789, file: !1790, line: 44, baseType: !1036)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "task_list", scope: !1789, file: !1790, line: 45, baseType: !243, size: 128)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "set_child_tid", scope: !1464, file: !1465, line: 879, baseType: !191, size: 64, offset: 6848)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "clear_child_tid", scope: !1464, file: !1465, line: 882, baseType: !191, size: 64, offset: 6912)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1464, file: !1465, line: 884, baseType: !652, size: 64, offset: 6976)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1464, file: !1465, line: 885, baseType: !652, size: 64, offset: 7040)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !1464, file: !1465, line: 890, baseType: !652, size: 64, offset: 7104)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !1464, file: !1465, line: 891, baseType: !1800, size: 128, offset: 7168)
!1800 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "prev_cputime", file: !1465, line: 242, size: 128, elements: !1801)
!1801 = !{!1802, !1803, !1804}
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1800, file: !1465, line: 244, baseType: !652, size: 64)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1800, file: !1465, line: 245, baseType: !652, size: 64, offset: 64)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1800, file: !1465, line: 246, baseType: !1036, offset: 128)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !1464, file: !1465, line: 900, baseType: !299, size: 64, offset: 7296)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !1464, file: !1465, line: 901, baseType: !299, size: 64, offset: 7360)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "start_time", scope: !1464, file: !1465, line: 904, baseType: !652, size: 64, offset: 7424)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "start_boottime", scope: !1464, file: !1465, line: 907, baseType: !652, size: 64, offset: 7488)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !1464, file: !1465, line: 910, baseType: !299, size: 64, offset: 7552)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !1464, file: !1465, line: 911, baseType: !299, size: 64, offset: 7616)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !1464, file: !1465, line: 914, baseType: !1812, size: 640, offset: 7680)
!1812 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers", file: !1813, line: 123, size: 640, elements: !1814)
!1813 = !DIFile(filename: "./include/linux/posix-timers.h", directory: "/home/lizy2001/genbc/linux")
!1814 = !{!1815, !1821, !1822}
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "bases", scope: !1812, file: !1813, line: 124, baseType: !1816, size: 576)
!1816 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1817, size: 576, elements: !513)
!1817 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimer_base", file: !1813, line: 108, size: 192, elements: !1818)
!1818 = !{!1819, !1820}
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "nextevt", scope: !1817, file: !1813, line: 109, baseType: !652, size: 64)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "tqhead", scope: !1817, file: !1813, line: 110, baseType: !1590, size: 128, offset: 64)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "timers_active", scope: !1812, file: !1813, line: 125, baseType: !7, size: 32, offset: 576)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "expiry_active", scope: !1812, file: !1813, line: 126, baseType: !7, size: 32, offset: 608)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers_work", scope: !1464, file: !1465, line: 917, baseType: !1824, size: 192, offset: 8320)
!1824 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers_work", file: !1813, line: 134, size: 192, elements: !1825)
!1825 = !{!1826, !1827}
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !1824, file: !1813, line: 135, baseType: !600, size: 128, align: 64)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "scheduled", scope: !1824, file: !1813, line: 136, baseType: !7, size: 32, offset: 128)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "ptracer_cred", scope: !1464, file: !1465, line: 923, baseType: !1829, size: 64, offset: 8512)
!1829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1830, size: 64)
!1830 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1831)
!1831 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cred", file: !1832, line: 111, size: 1280, elements: !1833)
!1832 = !DIFile(filename: "./include/linux/cred.h", directory: "/home/lizy2001/genbc/linux")
!1833 = !{!1834, !1835, !1836, !1837, !1838, !1839, !1840, !1841, !1842, !1843, !1844, !1851, !1852, !1853, !1854, !1855, !1856, !1963, !1964, !1965, !1966, !1992, !1993, !2003}
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1831, file: !1832, line: 112, baseType: !204, size: 32)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1831, file: !1832, line: 120, baseType: !665, size: 32, offset: 32)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1831, file: !1832, line: 121, baseType: !673, size: 32, offset: 64)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "suid", scope: !1831, file: !1832, line: 122, baseType: !665, size: 32, offset: 96)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "sgid", scope: !1831, file: !1832, line: 123, baseType: !673, size: 32, offset: 128)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !1831, file: !1832, line: 124, baseType: !665, size: 32, offset: 160)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "egid", scope: !1831, file: !1832, line: 125, baseType: !673, size: 32, offset: 192)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "fsuid", scope: !1831, file: !1832, line: 126, baseType: !665, size: 32, offset: 224)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "fsgid", scope: !1831, file: !1832, line: 127, baseType: !673, size: 32, offset: 256)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "securebits", scope: !1831, file: !1832, line: 128, baseType: !7, size: 32, offset: 288)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "cap_inheritable", scope: !1831, file: !1832, line: 129, baseType: !1845, size: 64, offset: 320)
!1845 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_cap_t", file: !1846, line: 26, baseType: !1847)
!1846 = !DIFile(filename: "./include/linux/capability.h", directory: "/home/lizy2001/genbc/linux")
!1847 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_cap_struct", file: !1846, line: 24, size: 64, elements: !1848)
!1848 = !{!1849}
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !1847, file: !1846, line: 25, baseType: !1850, size: 64)
!1850 = !DICompositeType(tag: DW_TAG_array_type, baseType: !253, size: 64, elements: !314)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "cap_permitted", scope: !1831, file: !1832, line: 130, baseType: !1845, size: 64, offset: 384)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "cap_effective", scope: !1831, file: !1832, line: 131, baseType: !1845, size: 64, offset: 448)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "cap_bset", scope: !1831, file: !1832, line: 132, baseType: !1845, size: 64, offset: 512)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "cap_ambient", scope: !1831, file: !1832, line: 133, baseType: !1845, size: 64, offset: 576)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "jit_keyring", scope: !1831, file: !1832, line: 135, baseType: !354, size: 8, offset: 640)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "session_keyring", scope: !1831, file: !1832, line: 137, baseType: !1857, size: 64, offset: 704)
!1857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1858, size: 64)
!1858 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key", file: !1859, line: 189, size: 1664, elements: !1860)
!1859 = !DIFile(filename: "./include/linux/key.h", directory: "/home/lizy2001/genbc/linux")
!1860 = !{!1861, !1862, !1865, !1870, !1871, !1874, !1875, !1880, !1881, !1882, !1883, !1885, !1886, !1887, !1888, !1889, !1927, !1948}
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1858, file: !1859, line: 190, baseType: !1477, size: 32)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !1858, file: !1859, line: 191, baseType: !1863, size: 32, offset: 32)
!1863 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_serial_t", file: !1859, line: 28, baseType: !1864)
!1864 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !205, line: 98, baseType: !1689)
!1865 = !DIDerivedType(tag: DW_TAG_member, scope: !1858, file: !1859, line: 192, baseType: !1866, size: 192, offset: 64)
!1866 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1858, file: !1859, line: 192, size: 192, elements: !1867)
!1867 = !{!1868, !1869}
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "graveyard_link", scope: !1866, file: !1859, line: 193, baseType: !243, size: 128)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "serial_node", scope: !1866, file: !1859, line: 194, baseType: !1023, size: 192, align: 64)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "sem", scope: !1858, file: !1859, line: 199, baseType: !1030, size: 256, offset: 256)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1858, file: !1859, line: 200, baseType: !1872, size: 64, offset: 512)
!1872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1873, size: 64)
!1873 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_user", file: !1859, line: 200, flags: DIFlagFwdDecl)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "security", scope: !1858, file: !1859, line: 201, baseType: !192, size: 64, offset: 576)
!1875 = !DIDerivedType(tag: DW_TAG_member, scope: !1858, file: !1859, line: 202, baseType: !1876, size: 64, offset: 640)
!1876 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1858, file: !1859, line: 202, size: 64, elements: !1877)
!1877 = !{!1878, !1879}
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "expiry", scope: !1876, file: !1859, line: 203, baseType: !768, size: 64)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "revoked_at", scope: !1876, file: !1859, line: 204, baseType: !768, size: 64)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "last_used_at", scope: !1858, file: !1859, line: 206, baseType: !768, size: 64, offset: 704)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1858, file: !1859, line: 207, baseType: !665, size: 32, offset: 768)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1858, file: !1859, line: 208, baseType: !673, size: 32, offset: 800)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !1858, file: !1859, line: 209, baseType: !1884, size: 32, offset: 832)
!1884 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_perm_t", file: !1859, line: 31, baseType: !787)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "quotalen", scope: !1858, file: !1859, line: 210, baseType: !198, size: 16, offset: 864)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "datalen", scope: !1858, file: !1859, line: 211, baseType: !198, size: 16, offset: 880)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1858, file: !1859, line: 215, baseType: !1452, size: 16, offset: 896)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1858, file: !1859, line: 222, baseType: !299, size: 64, offset: 960)
!1889 = !DIDerivedType(tag: DW_TAG_member, scope: !1858, file: !1859, line: 239, baseType: !1890, size: 320, offset: 1024)
!1890 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1858, file: !1859, line: 239, size: 320, elements: !1891)
!1891 = !{!1892, !1919}
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "index_key", scope: !1890, file: !1859, line: 240, baseType: !1893, size: 320)
!1893 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "keyring_index_key", file: !1859, line: 108, size: 320, elements: !1894)
!1894 = !{!1895, !1896, !1908, !1911, !1918}
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1893, file: !1859, line: 110, baseType: !299, size: 64)
!1896 = !DIDerivedType(tag: DW_TAG_member, scope: !1893, file: !1859, line: 111, baseType: !1897, size: 64, offset: 64)
!1897 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1893, file: !1859, line: 111, size: 64, elements: !1898)
!1898 = !{!1899, !1907}
!1899 = !DIDerivedType(tag: DW_TAG_member, scope: !1897, file: !1859, line: 112, baseType: !1900, size: 64)
!1900 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1897, file: !1859, line: 112, size: 64, elements: !1901)
!1901 = !{!1902, !1903}
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "desc_len", scope: !1900, file: !1859, line: 114, baseType: !194, size: 16)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !1900, file: !1859, line: 115, baseType: !1904, size: 48, offset: 16)
!1904 = !DICompositeType(tag: DW_TAG_array_type, baseType: !295, size: 48, elements: !1905)
!1905 = !{!1906}
!1906 = !DISubrange(count: 6)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1897, file: !1859, line: 121, baseType: !299, size: 64)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1893, file: !1859, line: 123, baseType: !1909, size: 64, offset: 128)
!1909 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1910, size: 64)
!1910 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_type", file: !1859, line: 96, flags: DIFlagFwdDecl)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !1893, file: !1859, line: 124, baseType: !1912, size: 64, offset: 192)
!1912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1913, size: 64)
!1913 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_tag", file: !1859, line: 102, size: 192, elements: !1914)
!1914 = !{!1915, !1916, !1917}
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1913, file: !1859, line: 103, baseType: !600, size: 128, align: 64)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1913, file: !1859, line: 104, baseType: !1477, size: 32, offset: 128)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "removed", scope: !1913, file: !1859, line: 105, baseType: !720, size: 8, offset: 160)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1893, file: !1859, line: 125, baseType: !335, size: 64, offset: 256)
!1919 = !DIDerivedType(tag: DW_TAG_member, scope: !1890, file: !1859, line: 241, baseType: !1920, size: 320)
!1920 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1890, file: !1859, line: 241, size: 320, elements: !1921)
!1921 = !{!1922, !1923, !1924, !1925, !1926}
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1920, file: !1859, line: 242, baseType: !299, size: 64)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "len_desc", scope: !1920, file: !1859, line: 243, baseType: !299, size: 64, offset: 64)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1920, file: !1859, line: 244, baseType: !1909, size: 64, offset: 128)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !1920, file: !1859, line: 245, baseType: !1912, size: 64, offset: 192)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1920, file: !1859, line: 246, baseType: !512, size: 64, offset: 256)
!1927 = !DIDerivedType(tag: DW_TAG_member, scope: !1858, file: !1859, line: 254, baseType: !1928, size: 256, offset: 1344)
!1928 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1858, file: !1859, line: 254, size: 256, elements: !1929)
!1929 = !{!1930, !1936}
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "payload", scope: !1928, file: !1859, line: 255, baseType: !1931, size: 256)
!1931 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "key_payload", file: !1859, line: 128, size: 256, elements: !1932)
!1932 = !{!1933, !1934}
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_data0", scope: !1931, file: !1859, line: 129, baseType: !192, size: 64)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1931, file: !1859, line: 130, baseType: !1935, size: 256)
!1935 = !DICompositeType(tag: DW_TAG_array_type, baseType: !192, size: 256, elements: !288)
!1936 = !DIDerivedType(tag: DW_TAG_member, scope: !1928, file: !1859, line: 256, baseType: !1937, size: 256)
!1937 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1928, file: !1859, line: 256, size: 256, elements: !1938)
!1938 = !{!1939, !1940}
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "name_link", scope: !1937, file: !1859, line: 258, baseType: !243, size: 128)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !1937, file: !1859, line: 259, baseType: !1941, size: 128, offset: 128)
!1941 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array", file: !1942, line: 22, size: 128, elements: !1943)
!1942 = !DIFile(filename: "./include/linux/assoc_array.h", directory: "/home/lizy2001/genbc/linux")
!1943 = !{!1944, !1947}
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !1941, file: !1942, line: 23, baseType: !1945, size: 64)
!1945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1946, size: 64)
!1946 = !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array_ptr", file: !1942, line: 23, flags: DIFlagFwdDecl)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "nr_leaves_on_tree", scope: !1941, file: !1942, line: 24, baseType: !299, size: 64, offset: 64)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_link", scope: !1858, file: !1859, line: 274, baseType: !1949, size: 64, offset: 1600)
!1949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1950, size: 64)
!1950 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_restriction", file: !1859, line: 170, size: 192, elements: !1951)
!1951 = !{!1952, !1961, !1962}
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !1950, file: !1859, line: 171, baseType: !1953, size: 64)
!1953 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_restrict_link_func_t", file: !1859, line: 165, baseType: !1954)
!1954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1955, size: 64)
!1955 = !DISubroutineType(types: !1956)
!1956 = !{!170, !1857, !1957, !1959, !1857}
!1957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1958, size: 64)
!1958 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1910)
!1959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1960, size: 64)
!1960 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1931)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1950, file: !1859, line: 172, baseType: !1857, size: 64, offset: 64)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "keytype", scope: !1950, file: !1859, line: 173, baseType: !1909, size: 64, offset: 128)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "process_keyring", scope: !1831, file: !1832, line: 138, baseType: !1857, size: 64, offset: 768)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "thread_keyring", scope: !1831, file: !1832, line: 139, baseType: !1857, size: 64, offset: 832)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "request_key_auth", scope: !1831, file: !1832, line: 140, baseType: !1857, size: 64, offset: 896)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1831, file: !1832, line: 145, baseType: !1967, size: 64, offset: 960)
!1967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1968, size: 64)
!1968 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "user_struct", file: !1969, line: 13, size: 896, elements: !1970)
!1969 = !DIFile(filename: "./include/linux/sched/user.h", directory: "/home/lizy2001/genbc/linux")
!1970 = !{!1971, !1972, !1973, !1974, !1975, !1976, !1977, !1978, !1979, !1980, !1981}
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !1968, file: !1969, line: 14, baseType: !1477, size: 32)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "processes", scope: !1968, file: !1969, line: 15, baseType: !204, size: 32, offset: 32)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "sigpending", scope: !1968, file: !1969, line: 16, baseType: !204, size: 32, offset: 64)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "epoll_watches", scope: !1968, file: !1969, line: 21, baseType: !217, size: 64, offset: 128)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "locked_shm", scope: !1968, file: !1969, line: 27, baseType: !299, size: 64, offset: 192)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "unix_inflight", scope: !1968, file: !1969, line: 28, baseType: !299, size: 64, offset: 256)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "pipe_bufs", scope: !1968, file: !1969, line: 29, baseType: !217, size: 64, offset: 320)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "uidhash_node", scope: !1968, file: !1969, line: 32, baseType: !870, size: 128, offset: 384)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1968, file: !1969, line: 33, baseType: !665, size: 32, offset: 512)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !1968, file: !1969, line: 37, baseType: !217, size: 64, offset: 576)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "ratelimit", scope: !1968, file: !1969, line: 44, baseType: !1982, size: 256, offset: 640)
!1982 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ratelimit_state", file: !1983, line: 15, size: 256, elements: !1984)
!1983 = !DIFile(filename: "./include/linux/ratelimit_types.h", directory: "/home/lizy2001/genbc/linux")
!1984 = !{!1985, !1986, !1987, !1988, !1989, !1990, !1991}
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1982, file: !1983, line: 16, baseType: !1036)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !1982, file: !1983, line: 18, baseType: !170, size: 32)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "burst", scope: !1982, file: !1983, line: 19, baseType: !170, size: 32, offset: 32)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "printed", scope: !1982, file: !1983, line: 20, baseType: !170, size: 32, offset: 64)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "missed", scope: !1982, file: !1983, line: 21, baseType: !170, size: 32, offset: 96)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !1982, file: !1983, line: 22, baseType: !299, size: 64, offset: 128)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1982, file: !1983, line: 23, baseType: !299, size: 64, offset: 192)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1831, file: !1832, line: 146, baseType: !1762, size: 64, offset: 1024)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "group_info", scope: !1831, file: !1832, line: 147, baseType: !1994, size: 64, offset: 1088)
!1994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1995, size: 64)
!1995 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group_info", file: !1832, line: 25, size: 64, elements: !1996)
!1996 = !{!1997, !1998, !1999}
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1995, file: !1832, line: 26, baseType: !204, size: 32)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "ngroups", scope: !1995, file: !1832, line: 27, baseType: !170, size: 32, offset: 32)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1995, file: !1832, line: 28, baseType: !2000, offset: 64)
!2000 = !DICompositeType(tag: DW_TAG_array_type, baseType: !673, elements: !2001)
!2001 = !{!2002}
!2002 = !DISubrange(count: 0)
!2003 = !DIDerivedType(tag: DW_TAG_member, scope: !1831, file: !1832, line: 149, baseType: !2004, size: 128, offset: 1152)
!2004 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1831, file: !1832, line: 149, size: 128, elements: !2005)
!2005 = !{!2006, !2007}
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "non_rcu", scope: !2004, file: !1832, line: 150, baseType: !170, size: 32)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2004, file: !1832, line: 151, baseType: !600, size: 128, align: 64)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "real_cred", scope: !1464, file: !1465, line: 926, baseType: !1829, size: 64, offset: 8576)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "cred", scope: !1464, file: !1465, line: 929, baseType: !1829, size: 64, offset: 8640)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "cached_requested_key", scope: !1464, file: !1465, line: 933, baseType: !1857, size: 64, offset: 8704)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "comm", scope: !1464, file: !1465, line: 943, baseType: !294, size: 128, offset: 8768)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "nameidata", scope: !1464, file: !1465, line: 945, baseType: !2013, size: 64, offset: 8896)
!2013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2014, size: 64)
!2014 = !DICompositeType(tag: DW_TAG_structure_type, name: "nameidata", file: !1465, line: 49, flags: DIFlagFwdDecl)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !1464, file: !1465, line: 956, baseType: !2016, size: 64, offset: 8960)
!2016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2017, size: 64)
!2017 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_struct", file: !1465, line: 45, flags: DIFlagFwdDecl)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !1464, file: !1465, line: 959, baseType: !2019, size: 64, offset: 9024)
!2019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2020, size: 64)
!2020 = !DICompositeType(tag: DW_TAG_structure_type, name: "files_struct", file: !1465, line: 959, flags: DIFlagFwdDecl)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "io_uring", scope: !1464, file: !1465, line: 962, baseType: !2022, size: 64, offset: 9088)
!2022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2023, size: 64)
!2023 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_uring_task", file: !1465, line: 66, flags: DIFlagFwdDecl)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "nsproxy", scope: !1464, file: !1465, line: 966, baseType: !2025, size: 64, offset: 9152)
!2025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2026, size: 64)
!2026 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nsproxy", file: !2027, line: 31, size: 576, elements: !2028)
!2027 = !DIFile(filename: "./include/linux/nsproxy.h", directory: "/home/lizy2001/genbc/linux")
!2028 = !{!2029, !2030, !2033, !2036, !2039, !2040, !2043, !2046, !2047}
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2026, file: !2027, line: 32, baseType: !204, size: 32)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "uts_ns", scope: !2026, file: !2027, line: 33, baseType: !2031, size: 64, offset: 64)
!2031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2032, size: 64)
!2032 = !DICompositeType(tag: DW_TAG_structure_type, name: "uts_namespace", file: !2027, line: 9, flags: DIFlagFwdDecl)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "ipc_ns", scope: !2026, file: !2027, line: 34, baseType: !2034, size: 64, offset: 128)
!2034 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2035, size: 64)
!2035 = !DICompositeType(tag: DW_TAG_structure_type, name: "ipc_namespace", file: !2027, line: 10, flags: DIFlagFwdDecl)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_ns", scope: !2026, file: !2027, line: 35, baseType: !2037, size: 64, offset: 192)
!2037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2038, size: 64)
!2038 = !DICompositeType(tag: DW_TAG_structure_type, name: "mnt_namespace", file: !2027, line: 8, flags: DIFlagFwdDecl)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "pid_ns_for_children", scope: !2026, file: !2027, line: 36, baseType: !1739, size: 64, offset: 256)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "net_ns", scope: !2026, file: !2027, line: 37, baseType: !2041, size: 64, offset: 320)
!2041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2042, size: 64)
!2042 = !DICompositeType(tag: DW_TAG_structure_type, name: "net", file: !1859, line: 34, flags: DIFlagFwdDecl)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "time_ns", scope: !2026, file: !2027, line: 38, baseType: !2044, size: 64, offset: 384)
!2044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2045, size: 64)
!2045 = !DICompositeType(tag: DW_TAG_structure_type, name: "time_namespace", file: !2027, line: 38, flags: DIFlagFwdDecl)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "time_ns_for_children", scope: !2026, file: !2027, line: 39, baseType: !2044, size: 64, offset: 448)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "cgroup_ns", scope: !2026, file: !2027, line: 40, baseType: !2048, size: 64, offset: 512)
!2048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2049, size: 64)
!2049 = !DICompositeType(tag: DW_TAG_structure_type, name: "cgroup_namespace", file: !2027, line: 12, flags: DIFlagFwdDecl)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !1464, file: !1465, line: 969, baseType: !2051, size: 64, offset: 9216)
!2051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2052, size: 64)
!2052 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "signal_struct", file: !2053, line: 82, size: 7296, elements: !2054)
!2053 = !DIFile(filename: "./include/linux/sched/signal.h", directory: "/home/lizy2001/genbc/linux")
!2054 = !{!2055, !2056, !2057, !2058, !2059, !2060, !2061, !2072, !2073, !2074, !2075, !2076, !2077, !2078, !2079, !2080, !2081, !2082, !2083, !2084, !2090, !2099, !2100, !2102, !2103, !2104, !2710, !2716, !2717, !2718, !2719, !2720, !2721, !2722, !2723, !2724, !2725, !2726, !2727, !2728, !2729, !2730, !2731, !2732, !2733, !2734, !2735, !2736, !2737, !2740, !2741, !2748, !2749, !2750, !2751, !2752, !2753}
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "sigcnt", scope: !2052, file: !2053, line: 83, baseType: !1477, size: 32)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "live", scope: !2052, file: !2053, line: 84, baseType: !204, size: 32, offset: 32)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !2052, file: !2053, line: 85, baseType: !170, size: 32, offset: 64)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "thread_head", scope: !2052, file: !2053, line: 86, baseType: !243, size: 128, offset: 128)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "wait_chldexit", scope: !2052, file: !2053, line: 88, baseType: !1726, size: 128, offset: 256)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "curr_target", scope: !2052, file: !2053, line: 91, baseType: !1463, size: 64, offset: 384)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "shared_pending", scope: !2052, file: !2053, line: 94, baseType: !2062, size: 192, offset: 448)
!2062 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigpending", file: !2063, line: 30, size: 192, elements: !2064)
!2063 = !DIFile(filename: "./include/linux/signal_types.h", directory: "/home/lizy2001/genbc/linux")
!2064 = !{!2065, !2066}
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2062, file: !2063, line: 31, baseType: !243, size: 128)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !2062, file: !2063, line: 32, baseType: !2067, size: 64, offset: 128)
!2067 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigset_t", file: !2068, line: 25, baseType: !2069)
!2068 = !DIFile(filename: "./arch/x86/include/asm/signal.h", directory: "/home/lizy2001/genbc/linux")
!2069 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2068, line: 23, size: 64, elements: !2070)
!2070 = !{!2071}
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !2069, file: !2068, line: 24, baseType: !1615, size: 64)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "multiprocess", scope: !2052, file: !2053, line: 97, baseType: !866, size: 64, offset: 640)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_code", scope: !2052, file: !2053, line: 100, baseType: !170, size: 32, offset: 704)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "notify_count", scope: !2052, file: !2053, line: 106, baseType: !170, size: 32, offset: 736)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_task", scope: !2052, file: !2053, line: 107, baseType: !1463, size: 64, offset: 768)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "group_stop_count", scope: !2052, file: !2053, line: 110, baseType: !170, size: 32, offset: 832)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2052, file: !2053, line: 111, baseType: !7, size: 32, offset: 864)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "is_child_subreaper", scope: !2052, file: !2053, line: 122, baseType: !7, size: 1, offset: 896, flags: DIFlagBitField, extraData: i64 896)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "has_child_subreaper", scope: !2052, file: !2053, line: 123, baseType: !7, size: 1, offset: 897, flags: DIFlagBitField, extraData: i64 896)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timer_id", scope: !2052, file: !2053, line: 128, baseType: !170, size: 32, offset: 928)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timers", scope: !2052, file: !2053, line: 129, baseType: !243, size: 128, offset: 960)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "real_timer", scope: !2052, file: !2053, line: 132, baseType: !1539, size: 512, offset: 1088)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "it_real_incr", scope: !2052, file: !2053, line: 133, baseType: !1547, size: 64, offset: 1600)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "it", scope: !2052, file: !2053, line: 140, baseType: !2085, size: 256, offset: 1664)
!2085 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2086, size: 256, elements: !314)
!2086 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpu_itimer", file: !2053, line: 38, size: 128, elements: !2087)
!2087 = !{!2088, !2089}
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !2086, file: !2053, line: 39, baseType: !652, size: 64)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "incr", scope: !2086, file: !2053, line: 40, baseType: !652, size: 64, offset: 64)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "cputimer", scope: !2052, file: !2053, line: 146, baseType: !2091, size: 192, offset: 1920)
!2091 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_group_cputimer", file: !2053, line: 66, size: 192, elements: !2092)
!2092 = !{!2093}
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "cputime_atomic", scope: !2091, file: !2053, line: 67, baseType: !2094, size: 192)
!2094 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_cputime_atomic", file: !2053, line: 47, size: 192, elements: !2095)
!2095 = !{!2096, !2097, !2098}
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !2094, file: !2053, line: 48, baseType: !219, size: 64)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !2094, file: !2053, line: 49, baseType: !219, size: 64, offset: 64)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !2094, file: !2053, line: 50, baseType: !219, size: 64, offset: 128)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !2052, file: !2053, line: 150, baseType: !1812, size: 640, offset: 2112)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "pids", scope: !2052, file: !2053, line: 153, baseType: !2101, size: 256, offset: 2752)
!2101 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1716, size: 256, elements: !288)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "tty_old_pgrp", scope: !2052, file: !2053, line: 159, baseType: !1716, size: 64, offset: 3008)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "leader", scope: !2052, file: !2053, line: 162, baseType: !170, size: 32, offset: 3072)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "tty", scope: !2052, file: !2053, line: 164, baseType: !2105, size: 64, offset: 3136)
!2105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2106, size: 64)
!2106 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tty_struct", file: !2107, line: 285, size: 5056, elements: !2108)
!2107 = !DIFile(filename: "./include/linux/tty.h", directory: "/home/lizy2001/genbc/linux")
!2108 = !{!2109, !2110, !2111, !2113, !2609, !2610, !2611, !2620, !2670, !2671, !2672, !2673, !2674, !2675, !2676, !2677, !2678, !2679, !2680, !2682, !2683, !2684, !2685, !2686, !2687, !2688, !2689, !2690, !2691, !2692, !2693, !2694, !2695, !2696, !2697, !2698, !2699, !2700, !2701, !2702, !2703, !2704, !2705, !2706, !2707, !2708, !2709}
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !2106, file: !2107, line: 286, baseType: !170, size: 32)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !2106, file: !2107, line: 287, baseType: !1744, size: 32, offset: 32)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2106, file: !2107, line: 288, baseType: !2112, size: 64, offset: 64)
!2112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !470, size: 64)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !2106, file: !2107, line: 289, baseType: !2114, size: 64, offset: 128)
!2114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2115, size: 64)
!2115 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tty_driver", file: !2116, line: 302, size: 1472, elements: !2117)
!2116 = !DIFile(filename: "./include/linux/tty_driver.h", directory: "/home/lizy2001/genbc/linux")
!2117 = !{!2118, !2119, !2120, !2355, !2356, !2357, !2358, !2359, !2360, !2361, !2362, !2363, !2364, !2382, !2383, !2387, !2388, !2390, !2479, !2482, !2483, !2608}
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !2115, file: !2116, line: 303, baseType: !170, size: 32)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !2115, file: !2116, line: 304, baseType: !1744, size: 32, offset: 32)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "cdevs", scope: !2115, file: !2116, line: 305, baseType: !2121, size: 64, offset: 64)
!2121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2122, size: 64)
!2122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2123, size: 64)
!2123 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cdev", file: !2124, line: 14, size: 832, elements: !2125)
!2124 = !DIFile(filename: "./include/linux/cdev.h", directory: "/home/lizy2001/genbc/linux")
!2125 = !{!2126, !2127, !2128, !2352, !2353, !2354}
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !2123, file: !2124, line: 15, baseType: !473, size: 512)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2123, file: !2124, line: 16, baseType: !861, size: 64, offset: 512)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2123, file: !2124, line: 17, baseType: !2129, size: 64, offset: 576)
!2129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2130, size: 64)
!2130 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2131)
!2131 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_operations", file: !56, line: 1822, size: 2048, elements: !2132)
!2132 = !{!2133, !2134, !2138, !2142, !2146, !2147, !2148, !2152, !2165, !2166, !2174, !2178, !2179, !2183, !2184, !2188, !2193, !2194, !2198, !2202, !2310, !2314, !2315, !2319, !2320, !2326, !2330, !2335, !2339, !2343, !2347, !2351}
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2131, file: !56, line: 1823, baseType: !861, size: 64)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "llseek", scope: !2131, file: !56, line: 1824, baseType: !2135, size: 64, offset: 64)
!2135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2136, size: 64)
!2136 = !DISubroutineType(types: !2137)
!2137 = !{!761, !587, !761, !170}
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !2131, file: !56, line: 1825, baseType: !2139, size: 64, offset: 128)
!2139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2140, size: 64)
!2140 = !DISubroutineType(types: !2141)
!2141 = !{!543, !587, !512, !557, !962}
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !2131, file: !56, line: 1826, baseType: !2143, size: 64, offset: 192)
!2143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2144, size: 64)
!2144 = !DISubroutineType(types: !2145)
!2145 = !{!543, !587, !335, !557, !962}
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "read_iter", scope: !2131, file: !56, line: 1827, baseType: !1100, size: 64, offset: 256)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "write_iter", scope: !2131, file: !56, line: 1828, baseType: !1100, size: 64, offset: 320)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "iopoll", scope: !2131, file: !56, line: 1829, baseType: !2149, size: 64, offset: 384)
!2149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2150, size: 64)
!2150 = !DISubroutineType(types: !2151)
!2151 = !{!170, !1103, !720}
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "iterate", scope: !2131, file: !56, line: 1830, baseType: !2153, size: 64, offset: 448)
!2153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2154, size: 64)
!2154 = !DISubroutineType(types: !2155)
!2155 = !{!170, !587, !2156}
!2156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2157, size: 64)
!2157 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dir_context", file: !56, line: 1776, size: 128, elements: !2158)
!2158 = !{!2159, !2164}
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "actor", scope: !2157, file: !56, line: 1777, baseType: !2160, size: 64)
!2160 = !DIDerivedType(tag: DW_TAG_typedef, name: "filldir_t", file: !56, line: 1773, baseType: !2161)
!2161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2162, size: 64)
!2162 = !DISubroutineType(types: !2163)
!2163 = !{!170, !2156, !335, !170, !761, !652, !7}
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !2157, file: !56, line: 1778, baseType: !761, size: 64, offset: 64)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "iterate_shared", scope: !2131, file: !56, line: 1831, baseType: !2153, size: 64, offset: 512)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !2131, file: !56, line: 1832, baseType: !2167, size: 64, offset: 576)
!2167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2168, size: 64)
!2168 = !DISubroutineType(types: !2169)
!2169 = !{!2170, !587, !2172}
!2170 = !DIDerivedType(tag: DW_TAG_typedef, name: "__poll_t", file: !2171, line: 52, baseType: !7)
!2171 = !DIFile(filename: "./include/uapi/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!2172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2173, size: 64)
!2173 = !DICompositeType(tag: DW_TAG_structure_type, name: "poll_table_struct", file: !847, line: 27, flags: DIFlagFwdDecl)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "unlocked_ioctl", scope: !2131, file: !56, line: 1833, baseType: !2175, size: 64, offset: 640)
!2175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2176, size: 64)
!2176 = !DISubroutineType(types: !2177)
!2177 = !{!138, !587, !7, !299}
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !2131, file: !56, line: 1834, baseType: !2175, size: 64, offset: 704)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !2131, file: !56, line: 1835, baseType: !2180, size: 64, offset: 768)
!2180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2181, size: 64)
!2181 = !DISubroutineType(types: !2182)
!2182 = !{!170, !587, !1236}
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_supported_flags", scope: !2131, file: !56, line: 1836, baseType: !299, size: 64, offset: 832)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !2131, file: !56, line: 1837, baseType: !2185, size: 64, offset: 896)
!2185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2186, size: 64)
!2186 = !DISubroutineType(types: !2187)
!2187 = !{!170, !659, !587}
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !2131, file: !56, line: 1838, baseType: !2189, size: 64, offset: 960)
!2189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2190, size: 64)
!2190 = !DISubroutineType(types: !2191)
!2191 = !{!170, !587, !2192}
!2192 = !DIDerivedType(tag: DW_TAG_typedef, name: "fl_owner_t", file: !56, line: 1007, baseType: !192)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !2131, file: !56, line: 1839, baseType: !2185, size: 64, offset: 1024)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "fsync", scope: !2131, file: !56, line: 1840, baseType: !2195, size: 64, offset: 1088)
!2195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2196, size: 64)
!2196 = !DISubroutineType(types: !2197)
!2197 = !{!170, !587, !761, !761, !170}
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "fasync", scope: !2131, file: !56, line: 1841, baseType: !2199, size: 64, offset: 1152)
!2199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2200, size: 64)
!2200 = !DISubroutineType(types: !2201)
!2201 = !{!170, !170, !587, !170}
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2131, file: !56, line: 1842, baseType: !2203, size: 64, offset: 1216)
!2203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2204, size: 64)
!2204 = !DISubroutineType(types: !2205)
!2205 = !{!170, !587, !170, !2206}
!2206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2207, size: 64)
!2207 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock", file: !56, line: 1062, size: 1664, elements: !2208)
!2208 = !{!2209, !2210, !2211, !2212, !2213, !2214, !2215, !2216, !2217, !2218, !2219, !2220, !2221, !2222, !2223, !2240, !2241, !2242, !2255, !2286}
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocker", scope: !2207, file: !56, line: 1063, baseType: !2206, size: 64)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "fl_list", scope: !2207, file: !56, line: 1064, baseType: !243, size: 128, offset: 64)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link", scope: !2207, file: !56, line: 1065, baseType: !870, size: 128, offset: 192)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_requests", scope: !2207, file: !56, line: 1066, baseType: !243, size: 128, offset: 320)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_member", scope: !2207, file: !56, line: 1069, baseType: !243, size: 128, offset: 448)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "fl_owner", scope: !2207, file: !56, line: 1072, baseType: !2192, size: 64, offset: 576)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "fl_flags", scope: !2207, file: !56, line: 1073, baseType: !7, size: 32, offset: 640)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "fl_type", scope: !2207, file: !56, line: 1074, baseType: !354, size: 8, offset: 672)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "fl_pid", scope: !2207, file: !56, line: 1075, baseType: !7, size: 32, offset: 704)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link_cpu", scope: !2207, file: !56, line: 1076, baseType: !170, size: 32, offset: 736)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "fl_wait", scope: !2207, file: !56, line: 1077, baseType: !1726, size: 128, offset: 768)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "fl_file", scope: !2207, file: !56, line: 1078, baseType: !587, size: 64, offset: 896)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "fl_start", scope: !2207, file: !56, line: 1079, baseType: !761, size: 64, offset: 960)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "fl_end", scope: !2207, file: !56, line: 1080, baseType: !761, size: 64, offset: 1024)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "fl_fasync", scope: !2207, file: !56, line: 1082, baseType: !2224, size: 64, offset: 1088)
!2224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2225, size: 64)
!2225 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fasync_struct", file: !56, line: 1314, size: 320, elements: !2226)
!2226 = !{!2227, !2235, !2236, !2237, !2238, !2239}
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "fa_lock", scope: !2225, file: !56, line: 1315, baseType: !2228)
!2228 = !DIDerivedType(tag: DW_TAG_typedef, name: "rwlock_t", file: !2229, line: 20, baseType: !2230)
!2229 = !DIFile(filename: "./include/linux/rwlock_types.h", directory: "/home/lizy2001/genbc/linux")
!2230 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2229, line: 11, elements: !2231)
!2231 = !{!2232}
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !2230, file: !2229, line: 12, baseType: !2233)
!2233 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_rwlock_t", file: !239, line: 33, baseType: !2234)
!2234 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !239, line: 31, elements: !241)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !2225, file: !56, line: 1316, baseType: !170, size: 32)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "fa_fd", scope: !2225, file: !56, line: 1317, baseType: !170, size: 32, offset: 32)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "fa_next", scope: !2225, file: !56, line: 1318, baseType: !2224, size: 64, offset: 64)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "fa_file", scope: !2225, file: !56, line: 1319, baseType: !587, size: 64, offset: 128)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "fa_rcu", scope: !2225, file: !56, line: 1320, baseType: !600, size: 128, align: 64, offset: 192)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "fl_break_time", scope: !2207, file: !56, line: 1084, baseType: !299, size: 64, offset: 1152)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "fl_downgrade_time", scope: !2207, file: !56, line: 1085, baseType: !299, size: 64, offset: 1216)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "fl_ops", scope: !2207, file: !56, line: 1087, baseType: !2243, size: 64, offset: 1280)
!2243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2244, size: 64)
!2244 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2245)
!2245 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_operations", file: !56, line: 1011, size: 128, elements: !2246)
!2246 = !{!2247, !2251}
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "fl_copy_lock", scope: !2245, file: !56, line: 1012, baseType: !2248, size: 64)
!2248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2249, size: 64)
!2249 = !DISubroutineType(types: !2250)
!2250 = !{null, !2206, !2206}
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "fl_release_private", scope: !2245, file: !56, line: 1013, baseType: !2252, size: 64, offset: 64)
!2252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2253, size: 64)
!2253 = !DISubroutineType(types: !2254)
!2254 = !{null, !2206}
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "fl_lmops", scope: !2207, file: !56, line: 1088, baseType: !2256, size: 64, offset: 1344)
!2256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2257, size: 64)
!2257 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2258)
!2258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_manager_operations", file: !56, line: 1016, size: 512, elements: !2259)
!2259 = !{!2260, !2264, !2268, !2269, !2273, !2277, !2281, !2285}
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "lm_get_owner", scope: !2258, file: !56, line: 1017, baseType: !2261, size: 64)
!2261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2262, size: 64)
!2262 = !DISubroutineType(types: !2263)
!2263 = !{!2192, !2192}
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "lm_put_owner", scope: !2258, file: !56, line: 1018, baseType: !2265, size: 64, offset: 64)
!2265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2266, size: 64)
!2266 = !DISubroutineType(types: !2267)
!2267 = !{null, !2192}
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "lm_notify", scope: !2258, file: !56, line: 1019, baseType: !2252, size: 64, offset: 128)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "lm_grant", scope: !2258, file: !56, line: 1020, baseType: !2270, size: 64, offset: 192)
!2270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2271, size: 64)
!2271 = !DISubroutineType(types: !2272)
!2272 = !{!170, !2206, !170}
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "lm_break", scope: !2258, file: !56, line: 1021, baseType: !2274, size: 64, offset: 256)
!2274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2275, size: 64)
!2275 = !DISubroutineType(types: !2276)
!2276 = !{!720, !2206}
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "lm_change", scope: !2258, file: !56, line: 1022, baseType: !2278, size: 64, offset: 320)
!2278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2279, size: 64)
!2279 = !DISubroutineType(types: !2280)
!2280 = !{!170, !2206, !170, !246}
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "lm_setup", scope: !2258, file: !56, line: 1023, baseType: !2282, size: 64, offset: 384)
!2282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2283, size: 64)
!2283 = !DISubroutineType(types: !2284)
!2284 = !{null, !2206, !1077}
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "lm_breaker_owns_lease", scope: !2258, file: !56, line: 1024, baseType: !2274, size: 64, offset: 448)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "fl_u", scope: !2207, file: !56, line: 1097, baseType: !2287, size: 256, offset: 1408)
!2287 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2207, file: !56, line: 1089, size: 256, elements: !2288)
!2288 = !{!2289, !2298, !2304}
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "nfs_fl", scope: !2287, file: !56, line: 1090, baseType: !2290, size: 256)
!2290 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs_lock_info", file: !2291, line: 10, size: 256, elements: !2292)
!2291 = !DIFile(filename: "./include/linux/nfs_fs_i.h", directory: "/home/lizy2001/genbc/linux")
!2292 = !{!2293, !2294, !2297}
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2290, file: !2291, line: 11, baseType: !338, size: 32)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2290, file: !2291, line: 12, baseType: !2295, size: 64, offset: 64)
!2295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2296, size: 64)
!2296 = !DICompositeType(tag: DW_TAG_structure_type, name: "nlm_lockowner", file: !2291, line: 5, flags: DIFlagFwdDecl)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2290, file: !2291, line: 13, baseType: !243, size: 128, offset: 128)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "nfs4_fl", scope: !2287, file: !56, line: 1091, baseType: !2299, size: 64)
!2299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_info", file: !2291, line: 17, size: 64, elements: !2300)
!2300 = !{!2301}
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2299, file: !2291, line: 18, baseType: !2302, size: 64)
!2302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2303, size: 64)
!2303 = !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_state", file: !2291, line: 16, flags: DIFlagFwdDecl)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "afs", scope: !2287, file: !56, line: 1096, baseType: !2305, size: 192)
!2305 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2287, file: !56, line: 1092, size: 192, elements: !2306)
!2306 = !{!2307, !2308, !2309}
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !2305, file: !56, line: 1093, baseType: !243, size: 128)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2305, file: !56, line: 1094, baseType: !170, size: 32, offset: 128)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "debug_id", scope: !2305, file: !56, line: 1095, baseType: !7, size: 32, offset: 160)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "sendpage", scope: !2131, file: !56, line: 1843, baseType: !2311, size: 64, offset: 1280)
!2311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2312, size: 64)
!2312 = !DISubroutineType(types: !2313)
!2313 = !{!543, !587, !987, !170, !557, !962, !170}
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !2131, file: !56, line: 1844, baseType: !1356, size: 64, offset: 1344)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "check_flags", scope: !2131, file: !56, line: 1845, baseType: !2316, size: 64, offset: 1408)
!2316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2317, size: 64)
!2317 = !DISubroutineType(types: !2318)
!2318 = !{!170, !170}
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "flock", scope: !2131, file: !56, line: 1846, baseType: !2203, size: 64, offset: 1472)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "splice_write", scope: !2131, file: !56, line: 1847, baseType: !2321, size: 64, offset: 1536)
!2321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2322, size: 64)
!2322 = !DISubroutineType(types: !2323)
!2323 = !{!543, !2324, !587, !962, !557, !7}
!2324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2325, size: 64)
!2325 = !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_inode_info", file: !1465, line: 53, flags: DIFlagFwdDecl)
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "splice_read", scope: !2131, file: !56, line: 1848, baseType: !2327, size: 64, offset: 1600)
!2327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2328, size: 64)
!2328 = !DISubroutineType(types: !2329)
!2329 = !{!543, !587, !962, !2324, !557, !7}
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "setlease", scope: !2131, file: !56, line: 1849, baseType: !2331, size: 64, offset: 1664)
!2331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2332, size: 64)
!2332 = !DISubroutineType(types: !2333)
!2333 = !{!170, !587, !138, !2334, !1077}
!2334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2206, size: 64)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "fallocate", scope: !2131, file: !56, line: 1850, baseType: !2336, size: 64, offset: 1728)
!2336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2337, size: 64)
!2337 = !DISubroutineType(types: !2338)
!2338 = !{!138, !587, !170, !761, !761}
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "show_fdinfo", scope: !2131, file: !56, line: 1852, baseType: !2340, size: 64, offset: 1792)
!2340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2341, size: 64)
!2341 = !DISubroutineType(types: !2342)
!2342 = !{null, !941, !587}
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "copy_file_range", scope: !2131, file: !56, line: 1856, baseType: !2344, size: 64, offset: 1856)
!2344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2345, size: 64)
!2345 = !DISubroutineType(types: !2346)
!2346 = !{!543, !587, !761, !587, !761, !557, !7}
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "remap_file_range", scope: !2131, file: !56, line: 1858, baseType: !2348, size: 64, offset: 1920)
!2348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2349, size: 64)
!2349 = !DISubroutineType(types: !2350)
!2350 = !{!761, !587, !761, !587, !761, !761, !7}
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "fadvise", scope: !2131, file: !56, line: 1861, baseType: !2195, size: 64, offset: 1984)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2123, file: !2124, line: 18, baseType: !243, size: 128, offset: 640)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2123, file: !2124, line: 19, baseType: !743, size: 32, offset: 768)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2123, file: !2124, line: 20, baseType: !7, size: 32, offset: 800)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2115, file: !2116, line: 306, baseType: !861, size: 64, offset: 128)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "driver_name", scope: !2115, file: !2116, line: 307, baseType: !335, size: 64, offset: 192)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2115, file: !2116, line: 308, baseType: !335, size: 64, offset: 256)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "name_base", scope: !2115, file: !2116, line: 309, baseType: !170, size: 32, offset: 320)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "major", scope: !2115, file: !2116, line: 310, baseType: !170, size: 32, offset: 352)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "minor_start", scope: !2115, file: !2116, line: 311, baseType: !170, size: 32, offset: 384)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2115, file: !2116, line: 312, baseType: !7, size: 32, offset: 416)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2115, file: !2116, line: 313, baseType: !1452, size: 16, offset: 448)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "subtype", scope: !2115, file: !2116, line: 314, baseType: !1452, size: 16, offset: 464)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "init_termios", scope: !2115, file: !2116, line: 315, baseType: !2365, size: 352, offset: 480)
!2365 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ktermios", file: !2366, line: 32, size: 352, elements: !2367)
!2366 = !DIFile(filename: "./include/uapi/asm-generic/termbits.h", directory: "/home/lizy2001/genbc/linux")
!2367 = !{!2368, !2370, !2371, !2372, !2373, !2375, !2379, !2381}
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "c_iflag", scope: !2365, file: !2366, line: 33, baseType: !2369, size: 32)
!2369 = !DIDerivedType(tag: DW_TAG_typedef, name: "tcflag_t", file: !2366, line: 9, baseType: !7)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "c_oflag", scope: !2365, file: !2366, line: 34, baseType: !2369, size: 32, offset: 32)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "c_cflag", scope: !2365, file: !2366, line: 35, baseType: !2369, size: 32, offset: 64)
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "c_lflag", scope: !2365, file: !2366, line: 36, baseType: !2369, size: 32, offset: 96)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "c_line", scope: !2365, file: !2366, line: 37, baseType: !2374, size: 8, offset: 128)
!2374 = !DIDerivedType(tag: DW_TAG_typedef, name: "cc_t", file: !2366, line: 7, baseType: !354)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "c_cc", scope: !2365, file: !2366, line: 38, baseType: !2376, size: 152, offset: 136)
!2376 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2374, size: 152, elements: !2377)
!2377 = !{!2378}
!2378 = !DISubrange(count: 19)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "c_ispeed", scope: !2365, file: !2366, line: 39, baseType: !2380, size: 32, offset: 288)
!2380 = !DIDerivedType(tag: DW_TAG_typedef, name: "speed_t", file: !2366, line: 8, baseType: !7)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "c_ospeed", scope: !2365, file: !2366, line: 40, baseType: !2380, size: 32, offset: 320)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2115, file: !2116, line: 316, baseType: !299, size: 64, offset: 832)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "proc_entry", scope: !2115, file: !2116, line: 317, baseType: !2384, size: 64, offset: 896)
!2384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2385, size: 64)
!2385 = !DICompositeType(tag: DW_TAG_structure_type, name: "proc_dir_entry", file: !2386, line: 84, flags: DIFlagFwdDecl)
!2386 = !DIFile(filename: "./include/acpi/acpi_bus.h", directory: "/home/lizy2001/genbc/linux")
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "other", scope: !2115, file: !2116, line: 318, baseType: !2114, size: 64, offset: 960)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "ttys", scope: !2115, file: !2116, line: 323, baseType: !2389, size: 64, offset: 1024)
!2389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2105, size: 64)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "ports", scope: !2115, file: !2116, line: 324, baseType: !2391, size: 64, offset: 1088)
!2391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2392, size: 64)
!2392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2393, size: 64)
!2393 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tty_port", file: !2107, line: 230, size: 2432, elements: !2394)
!2394 = !{!2395, !2427, !2428, !2429, !2451, !2461, !2462, !2463, !2464, !2465, !2466, !2467, !2468, !2469, !2470, !2471, !2472, !2474, !2475, !2476, !2477, !2478}
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !2393, file: !2107, line: 231, baseType: !2396, size: 1024)
!2396 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tty_bufhead", file: !2107, line: 85, size: 1024, elements: !2397)
!2397 = !{!2398, !2416, !2417, !2418, !2419, !2420, !2424, !2425, !2426}
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2396, file: !2107, line: 86, baseType: !2399, size: 64)
!2399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2400, size: 64)
!2400 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tty_buffer", file: !2107, line: 58, size: 256, elements: !2401)
!2401 = !{!2402, !2407, !2408, !2409, !2410, !2411, !2412}
!2402 = !DIDerivedType(tag: DW_TAG_member, scope: !2400, file: !2107, line: 59, baseType: !2403, size: 64)
!2403 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2400, file: !2107, line: 59, size: 64, elements: !2404)
!2404 = !{!2405, !2406}
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2403, file: !2107, line: 60, baseType: !2399, size: 64)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !2403, file: !2107, line: 61, baseType: !594, size: 64)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !2400, file: !2107, line: 63, baseType: !170, size: 32, offset: 64)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2400, file: !2107, line: 64, baseType: !170, size: 32, offset: 96)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "commit", scope: !2400, file: !2107, line: 65, baseType: !170, size: 32, offset: 128)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !2400, file: !2107, line: 66, baseType: !170, size: 32, offset: 160)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2400, file: !2107, line: 67, baseType: !170, size: 32, offset: 192)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2400, file: !2107, line: 69, baseType: !2413, offset: 256)
!2413 = !DICompositeType(tag: DW_TAG_array_type, baseType: !299, elements: !2414)
!2414 = !{!2415}
!2415 = !DISubrange(count: -1)
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !2396, file: !2107, line: 87, baseType: !383, size: 256, offset: 64)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2396, file: !2107, line: 88, baseType: !213, size: 192, offset: 320)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "priority", scope: !2396, file: !2107, line: 89, baseType: !204, size: 32, offset: 512)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "sentinel", scope: !2396, file: !2107, line: 90, baseType: !2400, size: 256, offset: 576)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !2396, file: !2107, line: 91, baseType: !2421, size: 64, offset: 832)
!2421 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "llist_head", file: !595, line: 54, size: 64, elements: !2422)
!2422 = !{!2423}
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !2421, file: !595, line: 55, baseType: !598, size: 64)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "mem_used", scope: !2396, file: !2107, line: 92, baseType: !204, size: 32, offset: 896)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "mem_limit", scope: !2396, file: !2107, line: 93, baseType: !170, size: 32, offset: 928)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2396, file: !2107, line: 94, baseType: !2399, size: 64, offset: 960)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "tty", scope: !2393, file: !2107, line: 232, baseType: !2105, size: 64, offset: 1024)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "itty", scope: !2393, file: !2107, line: 233, baseType: !2105, size: 64, offset: 1088)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2393, file: !2107, line: 234, baseType: !2430, size: 64, offset: 1152)
!2430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2431, size: 64)
!2431 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2432)
!2432 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tty_port_operations", file: !2107, line: 205, size: 320, elements: !2433)
!2433 = !{!2434, !2438, !2442, !2446, !2450}
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "carrier_raised", scope: !2432, file: !2107, line: 207, baseType: !2435, size: 64)
!2435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2436, size: 64)
!2436 = !DISubroutineType(types: !2437)
!2437 = !{!170, !2392}
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "dtr_rts", scope: !2432, file: !2107, line: 209, baseType: !2439, size: 64, offset: 64)
!2439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2440, size: 64)
!2440 = !DISubroutineType(types: !2441)
!2441 = !{null, !2392, !170}
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !2432, file: !2107, line: 213, baseType: !2443, size: 64, offset: 128)
!2443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2444, size: 64)
!2444 = !DISubroutineType(types: !2445)
!2445 = !{null, !2392}
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !2432, file: !2107, line: 218, baseType: !2447, size: 64, offset: 192)
!2447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2448, size: 64)
!2448 = !DISubroutineType(types: !2449)
!2449 = !{!170, !2392, !2105}
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "destruct", scope: !2432, file: !2107, line: 220, baseType: !2443, size: 64, offset: 256)
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "client_ops", scope: !2393, file: !2107, line: 235, baseType: !2452, size: 64, offset: 1216)
!2452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2453, size: 64)
!2453 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2454)
!2454 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tty_port_client_operations", file: !2107, line: 223, size: 128, elements: !2455)
!2455 = !{!2456, !2460}
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "receive_buf", scope: !2454, file: !2107, line: 224, baseType: !2457, size: 64)
!2457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2458, size: 64)
!2458 = !DISubroutineType(types: !2459)
!2459 = !{!170, !2392, !656, !656, !557}
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "write_wakeup", scope: !2454, file: !2107, line: 225, baseType: !2443, size: 64, offset: 64)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2393, file: !2107, line: 236, baseType: !227, offset: 1280)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "blocked_open", scope: !2393, file: !2107, line: 237, baseType: !170, size: 32, offset: 1280)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2393, file: !2107, line: 238, baseType: !170, size: 32, offset: 1312)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "open_wait", scope: !2393, file: !2107, line: 239, baseType: !1726, size: 128, offset: 1344)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "delta_msr_wait", scope: !2393, file: !2107, line: 240, baseType: !1726, size: 128, offset: 1472)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2393, file: !2107, line: 241, baseType: !299, size: 64, offset: 1600)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "iflags", scope: !2393, file: !2107, line: 242, baseType: !299, size: 64, offset: 1664)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "console", scope: !2393, file: !2107, line: 243, baseType: !354, size: 1, offset: 1728, flags: DIFlagBitField, extraData: i64 1728)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "low_latency", scope: !2393, file: !2107, line: 244, baseType: !354, size: 1, offset: 1729, flags: DIFlagBitField, extraData: i64 1728)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !2393, file: !2107, line: 245, baseType: !213, size: 192, offset: 1792)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "buf_mutex", scope: !2393, file: !2107, line: 246, baseType: !213, size: 192, offset: 1984)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "xmit_buf", scope: !2393, file: !2107, line: 247, baseType: !2473, size: 64, offset: 2176)
!2473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !354, size: 64)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "close_delay", scope: !2393, file: !2107, line: 248, baseType: !7, size: 32, offset: 2240)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "closing_wait", scope: !2393, file: !2107, line: 249, baseType: !7, size: 32, offset: 2272)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "drain_delay", scope: !2393, file: !2107, line: 250, baseType: !170, size: 32, offset: 2304)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !2393, file: !2107, line: 253, baseType: !1744, size: 32, offset: 2336)
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "client_data", scope: !2393, file: !2107, line: 254, baseType: !192, size: 64, offset: 2368)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "termios", scope: !2115, file: !2116, line: 325, baseType: !2480, size: 64, offset: 1152)
!2480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2481, size: 64)
!2481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2365, size: 64)
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "driver_state", scope: !2115, file: !2116, line: 326, baseType: !192, size: 64, offset: 1216)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2115, file: !2116, line: 332, baseType: !2484, size: 64, offset: 1280)
!2484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2485, size: 64)
!2485 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2486)
!2486 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tty_operations", file: !2116, line: 254, size: 2176, elements: !2487)
!2487 = !{!2488, !2492, !2496, !2500, !2504, !2508, !2512, !2513, !2517, !2521, !2522, !2526, !2527, !2531, !2535, !2539, !2540, !2541, !2542, !2543, !2544, !2548, !2549, !2550, !2554, !2558, !2559, !2563, !2575, !2590, !2596, !2602, !2603, !2607}
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !2486, file: !2116, line: 255, baseType: !2489, size: 64)
!2489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2490, size: 64)
!2490 = !DISubroutineType(types: !2491)
!2491 = !{!2105, !2114, !587, !170}
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "install", scope: !2486, file: !2116, line: 257, baseType: !2493, size: 64, offset: 64)
!2493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2494, size: 64)
!2494 = !DISubroutineType(types: !2495)
!2495 = !{!170, !2114, !2105}
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !2486, file: !2116, line: 258, baseType: !2497, size: 64, offset: 128)
!2497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2498, size: 64)
!2498 = !DISubroutineType(types: !2499)
!2499 = !{null, !2114, !2105}
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !2486, file: !2116, line: 259, baseType: !2501, size: 64, offset: 192)
!2501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2502, size: 64)
!2502 = !DISubroutineType(types: !2503)
!2503 = !{!170, !2105, !587}
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !2486, file: !2116, line: 260, baseType: !2505, size: 64, offset: 256)
!2505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2506, size: 64)
!2506 = !DISubroutineType(types: !2507)
!2507 = !{null, !2105, !587}
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !2486, file: !2116, line: 261, baseType: !2509, size: 64, offset: 320)
!2509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2510, size: 64)
!2510 = !DISubroutineType(types: !2511)
!2511 = !{null, !2105}
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !2486, file: !2116, line: 262, baseType: !2509, size: 64, offset: 384)
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !2486, file: !2116, line: 263, baseType: !2514, size: 64, offset: 448)
!2514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2515, size: 64)
!2515 = !DISubroutineType(types: !2516)
!2516 = !{!170, !2105, !656, !170}
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "put_char", scope: !2486, file: !2116, line: 265, baseType: !2518, size: 64, offset: 512)
!2518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2519, size: 64)
!2519 = !DISubroutineType(types: !2520)
!2520 = !{!170, !2105, !354}
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "flush_chars", scope: !2486, file: !2116, line: 266, baseType: !2509, size: 64, offset: 576)
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "write_room", scope: !2486, file: !2116, line: 267, baseType: !2523, size: 64, offset: 640)
!2523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2524, size: 64)
!2524 = !DISubroutineType(types: !2525)
!2525 = !{!170, !2105}
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "chars_in_buffer", scope: !2486, file: !2116, line: 268, baseType: !2523, size: 64, offset: 704)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "ioctl", scope: !2486, file: !2116, line: 269, baseType: !2528, size: 64, offset: 768)
!2528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2529, size: 64)
!2529 = !DISubroutineType(types: !2530)
!2530 = !{!170, !2105, !7, !299}
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !2486, file: !2116, line: 271, baseType: !2532, size: 64, offset: 832)
!2532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2533, size: 64)
!2533 = !DISubroutineType(types: !2534)
!2534 = !{!138, !2105, !7, !299}
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "set_termios", scope: !2486, file: !2116, line: 273, baseType: !2536, size: 64, offset: 896)
!2536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2537, size: 64)
!2537 = !DISubroutineType(types: !2538)
!2538 = !{null, !2105, !2481}
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "throttle", scope: !2486, file: !2116, line: 274, baseType: !2509, size: 64, offset: 960)
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "unthrottle", scope: !2486, file: !2116, line: 275, baseType: !2509, size: 64, offset: 1024)
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !2486, file: !2116, line: 276, baseType: !2509, size: 64, offset: 1088)
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2486, file: !2116, line: 277, baseType: !2509, size: 64, offset: 1152)
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "hangup", scope: !2486, file: !2116, line: 278, baseType: !2509, size: 64, offset: 1216)
!2544 = !DIDerivedType(tag: DW_TAG_member, name: "break_ctl", scope: !2486, file: !2116, line: 279, baseType: !2545, size: 64, offset: 1280)
!2545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2546, size: 64)
!2546 = !DISubroutineType(types: !2547)
!2547 = !{!170, !2105, !170}
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "flush_buffer", scope: !2486, file: !2116, line: 280, baseType: !2509, size: 64, offset: 1344)
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "set_ldisc", scope: !2486, file: !2116, line: 281, baseType: !2509, size: 64, offset: 1408)
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "wait_until_sent", scope: !2486, file: !2116, line: 282, baseType: !2551, size: 64, offset: 1472)
!2551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2552, size: 64)
!2552 = !DISubroutineType(types: !2553)
!2553 = !{null, !2105, !170}
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "send_xchar", scope: !2486, file: !2116, line: 283, baseType: !2555, size: 64, offset: 1536)
!2555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2556, size: 64)
!2556 = !DISubroutineType(types: !2557)
!2557 = !{null, !2105, !295}
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "tiocmget", scope: !2486, file: !2116, line: 284, baseType: !2523, size: 64, offset: 1600)
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "tiocmset", scope: !2486, file: !2116, line: 285, baseType: !2560, size: 64, offset: 1664)
!2560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2561, size: 64)
!2561 = !DISubroutineType(types: !2562)
!2562 = !{!170, !2105, !7, !7}
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "resize", scope: !2486, file: !2116, line: 287, baseType: !2564, size: 64, offset: 1728)
!2564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2565, size: 64)
!2565 = !DISubroutineType(types: !2566)
!2566 = !{!170, !2105, !2567}
!2567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2568, size: 64)
!2568 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "winsize", file: !2569, line: 15, size: 64, elements: !2570)
!2569 = !DIFile(filename: "./include/uapi/asm-generic/termios.h", directory: "/home/lizy2001/genbc/linux")
!2570 = !{!2571, !2572, !2573, !2574}
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "ws_row", scope: !2568, file: !2569, line: 16, baseType: !198, size: 16)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "ws_col", scope: !2568, file: !2569, line: 17, baseType: !198, size: 16, offset: 16)
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "ws_xpixel", scope: !2568, file: !2569, line: 18, baseType: !198, size: 16, offset: 32)
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "ws_ypixel", scope: !2568, file: !2569, line: 19, baseType: !198, size: 16, offset: 48)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "set_termiox", scope: !2486, file: !2116, line: 288, baseType: !2576, size: 64, offset: 1792)
!2576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2577, size: 64)
!2577 = !DISubroutineType(types: !2578)
!2578 = !{!170, !2105, !2579}
!2579 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2580, size: 64)
!2580 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "termiox", file: !2581, line: 10, size: 128, elements: !2582)
!2581 = !DIFile(filename: "./include/uapi/linux/termios.h", directory: "/home/lizy2001/genbc/linux")
!2582 = !{!2583, !2584, !2585, !2589}
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "x_hflag", scope: !2580, file: !2581, line: 12, baseType: !196, size: 16)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "x_cflag", scope: !2580, file: !2581, line: 13, baseType: !196, size: 16, offset: 16)
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "x_rflag", scope: !2580, file: !2581, line: 14, baseType: !2586, size: 80, offset: 32)
!2586 = !DICompositeType(tag: DW_TAG_array_type, baseType: !196, size: 80, elements: !2587)
!2587 = !{!2588}
!2588 = !DISubrange(count: 5)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "x_sflag", scope: !2580, file: !2581, line: 15, baseType: !196, size: 16, offset: 112)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "get_icount", scope: !2486, file: !2116, line: 289, baseType: !2591, size: 64, offset: 1856)
!2591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2592, size: 64)
!2592 = !DISubroutineType(types: !2593)
!2593 = !{!170, !2105, !2594}
!2594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2595, size: 64)
!2595 = !DICompositeType(tag: DW_TAG_structure_type, name: "serial_icounter_struct", file: !2116, line: 251, flags: DIFlagFwdDecl)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "get_serial", scope: !2486, file: !2116, line: 291, baseType: !2597, size: 64, offset: 1920)
!2597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2598, size: 64)
!2598 = !DISubroutineType(types: !2599)
!2599 = !{!170, !2105, !2600}
!2600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2601, size: 64)
!2601 = !DICompositeType(tag: DW_TAG_structure_type, name: "serial_struct", file: !2116, line: 252, flags: DIFlagFwdDecl)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "set_serial", scope: !2486, file: !2116, line: 292, baseType: !2597, size: 64, offset: 1984)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "show_fdinfo", scope: !2486, file: !2116, line: 293, baseType: !2604, size: 64, offset: 2048)
!2604 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2605, size: 64)
!2605 = !DISubroutineType(types: !2606)
!2606 = !{null, !2105, !941}
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "proc_show", scope: !2486, file: !2116, line: 299, baseType: !972, size: 64, offset: 2112)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "tty_drivers", scope: !2115, file: !2116, line: 333, baseType: !243, size: 128, offset: 1344)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2106, file: !2107, line: 290, baseType: !2484, size: 64, offset: 192)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2106, file: !2107, line: 291, baseType: !170, size: 32, offset: 256)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "ldisc_sem", scope: !2106, file: !2107, line: 294, baseType: !2612, size: 384, offset: 320)
!2612 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ld_semaphore", file: !2613, line: 133, size: 384, elements: !2614)
!2613 = !DIFile(filename: "./include/linux/tty_ldisc.h", directory: "/home/lizy2001/genbc/linux")
!2614 = !{!2615, !2616, !2617, !2618, !2619}
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2612, file: !2613, line: 134, baseType: !217, size: 64)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !2612, file: !2613, line: 135, baseType: !1036, offset: 64)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "wait_readers", scope: !2612, file: !2613, line: 136, baseType: !7, size: 32, offset: 64)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "read_wait", scope: !2612, file: !2613, line: 137, baseType: !243, size: 128, offset: 128)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "write_wait", scope: !2612, file: !2613, line: 138, baseType: !243, size: 128, offset: 256)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "ldisc", scope: !2106, file: !2107, line: 295, baseType: !2621, size: 64, offset: 704)
!2621 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2622, size: 64)
!2622 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tty_ldisc", file: !2613, line: 215, size: 128, elements: !2623)
!2623 = !{!2624, !2669}
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2622, file: !2613, line: 216, baseType: !2625, size: 64)
!2625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2626, size: 64)
!2626 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tty_ldisc_ops", file: !2613, line: 175, size: 1216, elements: !2627)
!2627 = !{!2628, !2629, !2630, !2631, !2632, !2633, !2634, !2635, !2639, !2643, !2647, !2648, !2649, !2653, !2654, !2658, !2659, !2663, !2667, !2668}
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !2626, file: !2613, line: 176, baseType: !170, size: 32)
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2626, file: !2613, line: 177, baseType: !512, size: 64, offset: 64)
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2626, file: !2613, line: 178, baseType: !170, size: 32, offset: 128)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2626, file: !2613, line: 179, baseType: !170, size: 32, offset: 160)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !2626, file: !2613, line: 184, baseType: !2523, size: 64, offset: 192)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !2626, file: !2613, line: 185, baseType: !2509, size: 64, offset: 256)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "flush_buffer", scope: !2626, file: !2613, line: 186, baseType: !2509, size: 64, offset: 320)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !2626, file: !2613, line: 187, baseType: !2636, size: 64, offset: 384)
!2636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2637, size: 64)
!2637 = !DISubroutineType(types: !2638)
!2638 = !{!543, !2105, !587, !2473, !557}
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !2626, file: !2613, line: 189, baseType: !2640, size: 64, offset: 448)
!2640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2641, size: 64)
!2641 = !DISubroutineType(types: !2642)
!2642 = !{!543, !2105, !587, !656, !557}
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "ioctl", scope: !2626, file: !2613, line: 191, baseType: !2644, size: 64, offset: 512)
!2644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2645, size: 64)
!2645 = !DISubroutineType(types: !2646)
!2646 = !{!170, !2105, !587, !7, !299}
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !2626, file: !2613, line: 193, baseType: !2644, size: 64, offset: 576)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "set_termios", scope: !2626, file: !2613, line: 195, baseType: !2536, size: 64, offset: 640)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !2626, file: !2613, line: 196, baseType: !2650, size: 64, offset: 704)
!2650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2651, size: 64)
!2651 = !DISubroutineType(types: !2652)
!2652 = !{!2170, !2105, !587, !2172}
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "hangup", scope: !2626, file: !2613, line: 198, baseType: !2523, size: 64, offset: 768)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "receive_buf", scope: !2626, file: !2613, line: 203, baseType: !2655, size: 64, offset: 832)
!2655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2656, size: 64)
!2656 = !DISubroutineType(types: !2657)
!2657 = !{null, !2105, !656, !512, !170}
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "write_wakeup", scope: !2626, file: !2613, line: 205, baseType: !2509, size: 64, offset: 896)
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "dcd_change", scope: !2626, file: !2613, line: 206, baseType: !2660, size: 64, offset: 960)
!2660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2661, size: 64)
!2661 = !DISubroutineType(types: !2662)
!2662 = !{null, !2105, !7}
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "receive_buf2", scope: !2626, file: !2613, line: 207, baseType: !2664, size: 64, offset: 1024)
!2664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2665, size: 64)
!2665 = !DISubroutineType(types: !2666)
!2666 = !{!170, !2105, !656, !512, !170}
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2626, file: !2613, line: 210, baseType: !861, size: 64, offset: 1088)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !2626, file: !2613, line: 212, baseType: !170, size: 32, offset: 1152)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "tty", scope: !2622, file: !2613, line: 217, baseType: !2105, size: 64, offset: 64)
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_lock", scope: !2106, file: !2107, line: 297, baseType: !213, size: 192, offset: 768)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "legacy_mutex", scope: !2106, file: !2107, line: 298, baseType: !213, size: 192, offset: 960)
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "throttle_mutex", scope: !2106, file: !2107, line: 299, baseType: !213, size: 192, offset: 1152)
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "termios_rwsem", scope: !2106, file: !2107, line: 300, baseType: !1030, size: 256, offset: 1344)
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "winsize_mutex", scope: !2106, file: !2107, line: 301, baseType: !213, size: 192, offset: 1600)
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "ctrl_lock", scope: !2106, file: !2107, line: 302, baseType: !227, offset: 1792)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "flow_lock", scope: !2106, file: !2107, line: 303, baseType: !227, offset: 1792)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "termios", scope: !2106, file: !2107, line: 305, baseType: !2365, size: 352, offset: 1792)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "termios_locked", scope: !2106, file: !2107, line: 305, baseType: !2365, size: 352, offset: 2144)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "termiox", scope: !2106, file: !2107, line: 306, baseType: !2579, size: 64, offset: 2496)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2106, file: !2107, line: 307, baseType: !2681, size: 512, offset: 2560)
!2681 = !DICompositeType(tag: DW_TAG_array_type, baseType: !295, size: 512, elements: !517)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "pgrp", scope: !2106, file: !2107, line: 308, baseType: !1716, size: 64, offset: 3072)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "session", scope: !2106, file: !2107, line: 313, baseType: !1716, size: 64, offset: 3136)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2106, file: !2107, line: 314, baseType: !299, size: 64, offset: 3200)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2106, file: !2107, line: 315, baseType: !170, size: 32, offset: 3264)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "winsize", scope: !2106, file: !2107, line: 316, baseType: !2568, size: 64, offset: 3296)
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "stopped", scope: !2106, file: !2107, line: 317, baseType: !299, size: 1, offset: 3360, flags: DIFlagBitField, extraData: i64 3360)
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "flow_stopped", scope: !2106, file: !2107, line: 318, baseType: !299, size: 1, offset: 3361, flags: DIFlagBitField, extraData: i64 3360)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !2106, file: !2107, line: 319, baseType: !299, size: 62, offset: 3392, flags: DIFlagBitField, extraData: i64 3392)
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "hw_stopped", scope: !2106, file: !2107, line: 320, baseType: !170, size: 32, offset: 3456)
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "ctrl_status", scope: !2106, file: !2107, line: 321, baseType: !299, size: 8, offset: 3488, flags: DIFlagBitField, extraData: i64 3488)
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "packet", scope: !2106, file: !2107, line: 322, baseType: !299, size: 1, offset: 3496, flags: DIFlagBitField, extraData: i64 3488)
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "unused_ctrl", scope: !2106, file: !2107, line: 323, baseType: !299, size: 55, offset: 3520, flags: DIFlagBitField, extraData: i64 3520)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "receive_room", scope: !2106, file: !2107, line: 324, baseType: !7, size: 32, offset: 3584)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "flow_change", scope: !2106, file: !2107, line: 325, baseType: !170, size: 32, offset: 3616)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !2106, file: !2107, line: 327, baseType: !2105, size: 64, offset: 3648)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "fasync", scope: !2106, file: !2107, line: 328, baseType: !2224, size: 64, offset: 3712)
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "write_wait", scope: !2106, file: !2107, line: 329, baseType: !1726, size: 128, offset: 3776)
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "read_wait", scope: !2106, file: !2107, line: 330, baseType: !1726, size: 128, offset: 3904)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "hangup_work", scope: !2106, file: !2107, line: 331, baseType: !383, size: 256, offset: 4032)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "disc_data", scope: !2106, file: !2107, line: 332, baseType: !192, size: 64, offset: 4288)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !2106, file: !2107, line: 333, baseType: !192, size: 64, offset: 4352)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "files_lock", scope: !2106, file: !2107, line: 334, baseType: !227, offset: 4416)
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "tty_files", scope: !2106, file: !2107, line: 335, baseType: !243, size: 128, offset: 4416)
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "closing", scope: !2106, file: !2107, line: 339, baseType: !170, size: 32, offset: 4544)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "write_buf", scope: !2106, file: !2107, line: 340, baseType: !2473, size: 64, offset: 4608)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "write_cnt", scope: !2106, file: !2107, line: 341, baseType: !170, size: 32, offset: 4672)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "SAK_work", scope: !2106, file: !2107, line: 343, baseType: !383, size: 256, offset: 4736)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !2106, file: !2107, line: 344, baseType: !2392, size: 64, offset: 4992)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "stats_lock", scope: !2052, file: !2053, line: 175, baseType: !2711, size: 32, offset: 3200)
!2711 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqlock_t", file: !623, line: 805, baseType: !2712)
!2712 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !623, line: 798, size: 32, elements: !2713)
!2713 = !{!2714, !2715}
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !2712, file: !623, line: 803, baseType: !622, size: 32)
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2712, file: !623, line: 804, baseType: !227, offset: 32)
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !2052, file: !2053, line: 176, baseType: !652, size: 64, offset: 3264)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !2052, file: !2053, line: 176, baseType: !652, size: 64, offset: 3328)
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "cutime", scope: !2052, file: !2053, line: 176, baseType: !652, size: 64, offset: 3392)
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "cstime", scope: !2052, file: !2053, line: 176, baseType: !652, size: 64, offset: 3456)
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !2052, file: !2053, line: 177, baseType: !652, size: 64, offset: 3520)
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "cgtime", scope: !2052, file: !2053, line: 178, baseType: !652, size: 64, offset: 3584)
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !2052, file: !2053, line: 179, baseType: !1800, size: 128, offset: 3648)
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !2052, file: !2053, line: 180, baseType: !299, size: 64, offset: 3776)
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !2052, file: !2053, line: 180, baseType: !299, size: 64, offset: 3840)
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "cnvcsw", scope: !2052, file: !2053, line: 180, baseType: !299, size: 64, offset: 3904)
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "cnivcsw", scope: !2052, file: !2053, line: 180, baseType: !299, size: 64, offset: 3968)
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !2052, file: !2053, line: 181, baseType: !299, size: 64, offset: 4032)
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !2052, file: !2053, line: 181, baseType: !299, size: 64, offset: 4096)
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "cmin_flt", scope: !2052, file: !2053, line: 181, baseType: !299, size: 64, offset: 4160)
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "cmaj_flt", scope: !2052, file: !2053, line: 181, baseType: !299, size: 64, offset: 4224)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "inblock", scope: !2052, file: !2053, line: 182, baseType: !299, size: 64, offset: 4288)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "oublock", scope: !2052, file: !2053, line: 182, baseType: !299, size: 64, offset: 4352)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "cinblock", scope: !2052, file: !2053, line: 182, baseType: !299, size: 64, offset: 4416)
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "coublock", scope: !2052, file: !2053, line: 182, baseType: !299, size: 64, offset: 4480)
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "maxrss", scope: !2052, file: !2053, line: 183, baseType: !299, size: 64, offset: 4544)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "cmaxrss", scope: !2052, file: !2053, line: 183, baseType: !299, size: 64, offset: 4608)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !2052, file: !2053, line: 184, baseType: !2738, offset: 4672)
!2738 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_io_accounting", file: !2739, line: 12, elements: !241)
!2739 = !DIFile(filename: "./include/linux/task_io_accounting.h", directory: "/home/lizy2001/genbc/linux")
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "sum_sched_runtime", scope: !2052, file: !2053, line: 192, baseType: !654, size: 64, offset: 4672)
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "rlim", scope: !2052, file: !2053, line: 203, baseType: !2742, size: 2048, offset: 4736)
!2742 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2743, size: 2048, elements: !296)
!2743 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rlimit", file: !2744, line: 43, size: 128, elements: !2745)
!2744 = !DIFile(filename: "./include/uapi/linux/resource.h", directory: "/home/lizy2001/genbc/linux")
!2745 = !{!2746, !2747}
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_cur", scope: !2743, file: !2744, line: 44, baseType: !559, size: 64)
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_max", scope: !2743, file: !2744, line: 45, baseType: !559, size: 64, offset: 64)
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "oom_flag_origin", scope: !2052, file: !2053, line: 220, baseType: !720, size: 8, offset: 6784)
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj", scope: !2052, file: !2053, line: 221, baseType: !1452, size: 16, offset: 6800)
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj_min", scope: !2052, file: !2053, line: 222, baseType: !1452, size: 16, offset: 6816)
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "oom_mm", scope: !2052, file: !2053, line: 224, baseType: !1229, size: 64, offset: 6848)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "cred_guard_mutex", scope: !2052, file: !2053, line: 227, baseType: !213, size: 192, offset: 6912)
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "exec_update_mutex", scope: !2052, file: !2053, line: 233, baseType: !213, size: 192, offset: 7104)
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "sighand", scope: !1464, file: !1465, line: 970, baseType: !2755, size: 64, offset: 9280)
!2755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2756, size: 64)
!2756 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sighand_struct", file: !2053, line: 20, size: 16576, elements: !2757)
!2757 = !{!2758, !2759, !2760, !2761}
!2758 = !DIDerivedType(tag: DW_TAG_member, name: "siglock", scope: !2756, file: !2053, line: 21, baseType: !227)
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2756, file: !2053, line: 22, baseType: !1477, size: 32)
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "signalfd_wqh", scope: !2756, file: !2053, line: 23, baseType: !1726, size: 128, offset: 64)
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !2756, file: !2053, line: 24, baseType: !2762, size: 16384, offset: 192)
!2762 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2763, size: 16384, elements: !517)
!2763 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sigaction", file: !2063, line: 49, size: 256, elements: !2764)
!2764 = !{!2765}
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "sa", scope: !2763, file: !2063, line: 50, baseType: !2766, size: 256)
!2766 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigaction", file: !2063, line: 35, size: 256, elements: !2767)
!2767 = !{!2768, !2775, !2776, !2782}
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "sa_handler", scope: !2766, file: !2063, line: 37, baseType: !2769, size: 64)
!2769 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sighandler_t", file: !2770, line: 19, baseType: !2771)
!2770 = !DIFile(filename: "./include/uapi/asm-generic/signal-defs.h", directory: "/home/lizy2001/genbc/linux")
!2771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2772, size: 64)
!2772 = !DIDerivedType(tag: DW_TAG_typedef, name: "__signalfn_t", file: !2770, line: 18, baseType: !2773)
!2773 = !DISubroutineType(types: !2774)
!2774 = !{null, !170}
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "sa_flags", scope: !2766, file: !2063, line: 38, baseType: !299, size: 64, offset: 64)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "sa_restorer", scope: !2766, file: !2063, line: 44, baseType: !2777, size: 64, offset: 128)
!2777 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sigrestore_t", file: !2770, line: 22, baseType: !2778)
!2778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2779, size: 64)
!2779 = !DIDerivedType(tag: DW_TAG_typedef, name: "__restorefn_t", file: !2770, line: 21, baseType: !2780)
!2780 = !DISubroutineType(types: !2781)
!2781 = !{null}
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "sa_mask", scope: !2766, file: !2063, line: 46, baseType: !2067, size: 64, offset: 192)
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "blocked", scope: !1464, file: !1465, line: 971, baseType: !2067, size: 64, offset: 9344)
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "real_blocked", scope: !1464, file: !1465, line: 972, baseType: !2067, size: 64, offset: 9408)
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "saved_sigmask", scope: !1464, file: !1465, line: 974, baseType: !2067, size: 64, offset: 9472)
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "pending", scope: !1464, file: !1465, line: 975, baseType: !2062, size: 192, offset: 9536)
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_sp", scope: !1464, file: !1465, line: 976, baseType: !299, size: 64, offset: 9728)
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_size", scope: !1464, file: !1465, line: 977, baseType: !557, size: 64, offset: 9792)
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_flags", scope: !1464, file: !1465, line: 978, baseType: !7, size: 32, offset: 9856)
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "task_works", scope: !1464, file: !1465, line: 980, baseType: !603, size: 64, offset: 9920)
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "seccomp", scope: !1464, file: !1465, line: 989, baseType: !2792, size: 128, offset: 9984)
!2792 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp", file: !2793, line: 35, size: 128, elements: !2794)
!2793 = !DIFile(filename: "./include/linux/seccomp.h", directory: "/home/lizy2001/genbc/linux")
!2794 = !{!2795, !2796, !2797}
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2792, file: !2793, line: 36, baseType: !170, size: 32)
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "filter_count", scope: !2792, file: !2793, line: 37, baseType: !204, size: 32, offset: 32)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !2792, file: !2793, line: 38, baseType: !2798, size: 64, offset: 64)
!2798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2799, size: 64)
!2799 = !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp_filter", file: !2793, line: 23, flags: DIFlagFwdDecl)
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "parent_exec_id", scope: !1464, file: !1465, line: 992, baseType: !652, size: 64, offset: 10112)
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "self_exec_id", scope: !1464, file: !1465, line: 993, baseType: !652, size: 64, offset: 10176)
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_lock", scope: !1464, file: !1465, line: 996, baseType: !227, offset: 10240)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "pi_lock", scope: !1464, file: !1465, line: 999, baseType: !1036, offset: 10240)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "wake_q", scope: !1464, file: !1465, line: 1001, baseType: !2805, size: 64, offset: 10240)
!2805 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wake_q_node", file: !1465, line: 636, size: 64, elements: !2806)
!2806 = !{!2807}
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2805, file: !1465, line: 637, baseType: !2808, size: 64)
!2808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2805, size: 64)
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "pi_waiters", scope: !1464, file: !1465, line: 1005, baseType: !1015, size: 128, offset: 10304)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "pi_top_task", scope: !1464, file: !1465, line: 1007, baseType: !1463, size: 64, offset: 10432)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "pi_blocked_on", scope: !1464, file: !1465, line: 1009, baseType: !2812, size: 64, offset: 10496)
!2812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2813, size: 64)
!2813 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt_mutex_waiter", file: !1465, line: 1009, flags: DIFlagFwdDecl)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "journal_info", scope: !1464, file: !1465, line: 1043, baseType: !192, size: 64, offset: 10560)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "bio_list", scope: !1464, file: !1465, line: 1046, baseType: !2816, size: 64, offset: 10624)
!2816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2817, size: 64)
!2817 = !DICompositeType(tag: DW_TAG_structure_type, name: "bio_list", file: !1465, line: 41, flags: DIFlagFwdDecl)
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "plug", scope: !1464, file: !1465, line: 1050, baseType: !2819, size: 64, offset: 10688)
!2819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2820, size: 64)
!2820 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_plug", file: !1465, line: 42, flags: DIFlagFwdDecl)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "reclaim_state", scope: !1464, file: !1465, line: 1054, baseType: !2822, size: 64, offset: 10752)
!2822 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2823, size: 64)
!2823 = !DICompositeType(tag: DW_TAG_structure_type, name: "reclaim_state", file: !1465, line: 55, flags: DIFlagFwdDecl)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "backing_dev_info", scope: !1464, file: !1465, line: 1056, baseType: !2825, size: 64, offset: 10816)
!2825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2826, size: 64)
!2826 = !DICompositeType(tag: DW_TAG_structure_type, name: "backing_dev_info", file: !1465, line: 40, flags: DIFlagFwdDecl)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "io_context", scope: !1464, file: !1465, line: 1058, baseType: !2828, size: 64, offset: 10880)
!2828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2829, size: 64)
!2829 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_context", file: !2830, line: 99, size: 704, elements: !2831)
!2830 = !DIFile(filename: "./include/linux/iocontext.h", directory: "/home/lizy2001/genbc/linux")
!2831 = !{!2832, !2833, !2834, !2835, !2836, !2837, !2838, !2857, !2858}
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !2829, file: !2830, line: 100, baseType: !217, size: 64)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "active_ref", scope: !2829, file: !2830, line: 101, baseType: !204, size: 32, offset: 64)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "nr_tasks", scope: !2829, file: !2830, line: 102, baseType: !204, size: 32, offset: 96)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2829, file: !2830, line: 105, baseType: !227, offset: 128)
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "ioprio", scope: !2829, file: !2830, line: 107, baseType: !198, size: 16, offset: 128)
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "icq_tree", scope: !2829, file: !2830, line: 109, baseType: !1005, size: 128, offset: 192)
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "icq_hint", scope: !2829, file: !2830, line: 110, baseType: !2839, size: 64, offset: 320)
!2839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2840, size: 64)
!2840 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_cq", file: !2830, line: 73, size: 448, elements: !2841)
!2841 = !{!2842, !2845, !2846, !2851, !2856}
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !2840, file: !2830, line: 74, baseType: !2843, size: 64)
!2843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2844, size: 64)
!2844 = !DICompositeType(tag: DW_TAG_structure_type, name: "request_queue", file: !2830, line: 74, flags: DIFlagFwdDecl)
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "ioc", scope: !2840, file: !2830, line: 75, baseType: !2828, size: 64, offset: 64)
!2846 = !DIDerivedType(tag: DW_TAG_member, scope: !2840, file: !2830, line: 83, baseType: !2847, size: 128, offset: 128)
!2847 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2840, file: !2830, line: 83, size: 128, elements: !2848)
!2848 = !{!2849, !2850}
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "q_node", scope: !2847, file: !2830, line: 84, baseType: !243, size: 128)
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_icq_cache", scope: !2847, file: !2830, line: 85, baseType: !1189, size: 64)
!2851 = !DIDerivedType(tag: DW_TAG_member, scope: !2840, file: !2830, line: 87, baseType: !2852, size: 128, offset: 256)
!2852 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2840, file: !2830, line: 87, size: 128, elements: !2853)
!2853 = !{!2854, !2855}
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "ioc_node", scope: !2852, file: !2830, line: 88, baseType: !870, size: 128)
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_head", scope: !2852, file: !2830, line: 89, baseType: !600, size: 128, align: 64)
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2840, file: !2830, line: 92, baseType: !7, size: 32, offset: 384)
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "icq_list", scope: !2829, file: !2830, line: 111, baseType: !866, size: 64, offset: 384)
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "release_work", scope: !2829, file: !2830, line: 113, baseType: !383, size: 256, offset: 448)
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "capture_control", scope: !1464, file: !1465, line: 1061, baseType: !2860, size: 64, offset: 10944)
!2860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2861, size: 64)
!2861 = !DICompositeType(tag: DW_TAG_structure_type, name: "capture_control", file: !1465, line: 43, flags: DIFlagFwdDecl)
!2862 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_message", scope: !1464, file: !1465, line: 1064, baseType: !299, size: 64, offset: 11008)
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "last_siginfo", scope: !1464, file: !1465, line: 1065, baseType: !2864, size: 64, offset: 11072)
!2864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2865, size: 64)
!2865 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_siginfo_t", file: !2063, line: 14, baseType: !2866)
!2866 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_siginfo", file: !2063, line: 12, size: 384, elements: !2867)
!2867 = !{!2868}
!2868 = !DIDerivedType(tag: DW_TAG_member, scope: !2866, file: !2063, line: 13, baseType: !2869, size: 384)
!2869 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2866, file: !2063, line: 13, size: 384, elements: !2870)
!2870 = !{!2871, !2872, !2873, !2874}
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "si_signo", scope: !2869, file: !2063, line: 13, baseType: !170, size: 32)
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "si_errno", scope: !2869, file: !2063, line: 13, baseType: !170, size: 32, offset: 32)
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "si_code", scope: !2869, file: !2063, line: 13, baseType: !170, size: 32, offset: 64)
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "_sifields", scope: !2869, file: !2063, line: 13, baseType: !2875, size: 256, offset: 128)
!2875 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "__sifields", file: !2876, line: 32, size: 256, elements: !2877)
!2876 = !DIFile(filename: "./include/uapi/asm-generic/siginfo.h", directory: "/home/lizy2001/genbc/linux")
!2877 = !{!2878, !2883, !2896, !2902, !2911, !2931, !2936}
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "_kill", scope: !2875, file: !2876, line: 37, baseType: !2879, size: 64)
!2879 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2875, file: !2876, line: 34, size: 64, elements: !2880)
!2880 = !{!2881, !2882}
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !2879, file: !2876, line: 35, baseType: !1705, size: 32)
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !2879, file: !2876, line: 36, baseType: !671, size: 32, offset: 32)
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "_timer", scope: !2875, file: !2876, line: 45, baseType: !2884, size: 192)
!2884 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2875, file: !2876, line: 40, size: 192, elements: !2885)
!2885 = !{!2886, !2888, !2889, !2895}
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "_tid", scope: !2884, file: !2876, line: 41, baseType: !2887, size: 32)
!2887 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_timer_t", file: !545, line: 95, baseType: !170)
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "_overrun", scope: !2884, file: !2876, line: 42, baseType: !170, size: 32, offset: 32)
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !2884, file: !2876, line: 43, baseType: !2890, size: 64, offset: 64)
!2890 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigval_t", file: !2876, line: 11, baseType: !2891)
!2891 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "sigval", file: !2876, line: 8, size: 64, elements: !2892)
!2892 = !{!2893, !2894}
!2893 = !DIDerivedType(tag: DW_TAG_member, name: "sival_int", scope: !2891, file: !2876, line: 9, baseType: !170, size: 32)
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "sival_ptr", scope: !2891, file: !2876, line: 10, baseType: !192, size: 64)
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "_sys_private", scope: !2884, file: !2876, line: 44, baseType: !170, size: 32, offset: 128)
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "_rt", scope: !2875, file: !2876, line: 52, baseType: !2897, size: 128)
!2897 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2875, file: !2876, line: 48, size: 128, elements: !2898)
!2898 = !{!2899, !2900, !2901}
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !2897, file: !2876, line: 49, baseType: !1705, size: 32)
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !2897, file: !2876, line: 50, baseType: !671, size: 32, offset: 32)
!2901 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !2897, file: !2876, line: 51, baseType: !2890, size: 64, offset: 64)
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "_sigchld", scope: !2875, file: !2876, line: 61, baseType: !2903, size: 256)
!2903 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2875, file: !2876, line: 55, size: 256, elements: !2904)
!2904 = !{!2905, !2906, !2907, !2908, !2910}
!2905 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !2903, file: !2876, line: 56, baseType: !1705, size: 32)
!2906 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !2903, file: !2876, line: 57, baseType: !671, size: 32, offset: 32)
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "_status", scope: !2903, file: !2876, line: 58, baseType: !170, size: 32, offset: 64)
!2908 = !DIDerivedType(tag: DW_TAG_member, name: "_utime", scope: !2903, file: !2876, line: 59, baseType: !2909, size: 64, offset: 128)
!2909 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clock_t", file: !545, line: 94, baseType: !546)
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "_stime", scope: !2903, file: !2876, line: 60, baseType: !2909, size: 64, offset: 192)
!2911 = !DIDerivedType(tag: DW_TAG_member, name: "_sigfault", scope: !2875, file: !2876, line: 95, baseType: !2912, size: 256)
!2912 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2875, file: !2876, line: 64, size: 256, elements: !2913)
!2913 = !{!2914, !2915}
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "_addr", scope: !2912, file: !2876, line: 65, baseType: !192, size: 64)
!2915 = !DIDerivedType(tag: DW_TAG_member, scope: !2912, file: !2876, line: 77, baseType: !2916, size: 192, offset: 64)
!2916 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2912, file: !2876, line: 77, size: 192, elements: !2917)
!2917 = !{!2918, !2919, !2926}
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_lsb", scope: !2916, file: !2876, line: 82, baseType: !1452, size: 16)
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_bnd", scope: !2916, file: !2876, line: 88, baseType: !2920, size: 192)
!2920 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2916, file: !2876, line: 84, size: 192, elements: !2921)
!2921 = !{!2922, !2924, !2925}
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_bnd", scope: !2920, file: !2876, line: 85, baseType: !2923, size: 64)
!2923 = !DICompositeType(tag: DW_TAG_array_type, baseType: !295, size: 64, elements: !1577)
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "_lower", scope: !2920, file: !2876, line: 86, baseType: !192, size: 64, offset: 64)
!2925 = !DIDerivedType(tag: DW_TAG_member, name: "_upper", scope: !2920, file: !2876, line: 87, baseType: !192, size: 64, offset: 128)
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_pkey", scope: !2916, file: !2876, line: 93, baseType: !2927, size: 96)
!2927 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2916, file: !2876, line: 90, size: 96, elements: !2928)
!2928 = !{!2929, !2930}
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_pkey", scope: !2927, file: !2876, line: 91, baseType: !2923, size: 64)
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "_pkey", scope: !2927, file: !2876, line: 92, baseType: !253, size: 32, offset: 64)
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "_sigpoll", scope: !2875, file: !2876, line: 101, baseType: !2932, size: 128)
!2932 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2875, file: !2876, line: 98, size: 128, elements: !2933)
!2933 = !{!2934, !2935}
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "_band", scope: !2932, file: !2876, line: 99, baseType: !138, size: 64)
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "_fd", scope: !2932, file: !2876, line: 100, baseType: !170, size: 32, offset: 64)
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "_sigsys", scope: !2875, file: !2876, line: 108, baseType: !2937, size: 128)
!2937 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2875, file: !2876, line: 104, size: 128, elements: !2938)
!2938 = !{!2939, !2940, !2941}
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "_call_addr", scope: !2937, file: !2876, line: 105, baseType: !192, size: 64)
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "_syscall", scope: !2937, file: !2876, line: 106, baseType: !170, size: 32, offset: 64)
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "_arch", scope: !2937, file: !2876, line: 107, baseType: !7, size: 32, offset: 96)
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !1464, file: !1465, line: 1067, baseType: !2738, offset: 11136)
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "robust_list", scope: !1464, file: !1465, line: 1099, baseType: !2944, size: 64, offset: 11136)
!2944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2945, size: 64)
!2945 = !DICompositeType(tag: DW_TAG_structure_type, name: "robust_list_head", file: !1465, line: 56, flags: DIFlagFwdDecl)
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_list", scope: !1464, file: !1465, line: 1103, baseType: !243, size: 128, offset: 11200)
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_cache", scope: !1464, file: !1465, line: 1104, baseType: !2948, size: 64, offset: 11328)
!2948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2949, size: 64)
!2949 = !DICompositeType(tag: DW_TAG_structure_type, name: "futex_pi_state", file: !1465, line: 46, flags: DIFlagFwdDecl)
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "futex_exit_mutex", scope: !1464, file: !1465, line: 1105, baseType: !213, size: 192, offset: 11392)
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "futex_state", scope: !1464, file: !1465, line: 1106, baseType: !7, size: 32, offset: 11584)
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_ctxp", scope: !1464, file: !1465, line: 1109, baseType: !2953, size: 128, offset: 11648)
!2953 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2954, size: 128, elements: !314)
!2954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2955, size: 64)
!2955 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event_context", file: !1465, line: 51, flags: DIFlagFwdDecl)
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_mutex", scope: !1464, file: !1465, line: 1110, baseType: !213, size: 192, offset: 11776)
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_list", scope: !1464, file: !1465, line: 1111, baseType: !243, size: 128, offset: 11968)
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "rseq", scope: !1464, file: !1465, line: 1173, baseType: !2959, size: 64, offset: 12096)
!2959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2960, size: 64)
!2960 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rseq", file: !2961, line: 62, size: 256, align: 256, elements: !2962)
!2961 = !DIFile(filename: "./include/uapi/linux/rseq.h", directory: "/home/lizy2001/genbc/linux")
!2962 = !{!2963, !2964, !2965, !2970}
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id_start", scope: !2960, file: !2961, line: 75, baseType: !253, size: 32)
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id", scope: !2960, file: !2961, line: 90, baseType: !253, size: 32, offset: 32)
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_cs", scope: !2960, file: !2961, line: 124, baseType: !2966, size: 64, offset: 64)
!2966 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2960, file: !2961, line: 109, size: 64, elements: !2967)
!2967 = !{!2968, !2969}
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "ptr64", scope: !2966, file: !2961, line: 110, baseType: !653, size: 64)
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !2966, file: !2961, line: 112, baseType: !653, size: 64)
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2960, file: !2961, line: 144, baseType: !253, size: 32, offset: 128)
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_sig", scope: !1464, file: !1465, line: 1174, baseType: !338, size: 32, offset: 12160)
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_event_mask", scope: !1464, file: !1465, line: 1179, baseType: !299, size: 64, offset: 12224)
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_ubc", scope: !1464, file: !1465, line: 1182, baseType: !2974, size: 128, offset: 12288)
!2974 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tlbflush_unmap_batch", file: !1406, line: 76, size: 128, elements: !2975)
!2975 = !{!2976, !2981, !2982}
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2974, file: !1406, line: 85, baseType: !2977, size: 64)
!2977 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arch_tlbflush_unmap_batch", file: !2978, line: 7, size: 64, elements: !2979)
!2978 = !DIFile(filename: "./arch/x86/include/asm/tlbbatch.h", directory: "/home/lizy2001/genbc/linux")
!2979 = !{!2980}
!2980 = !DIDerivedType(tag: DW_TAG_member, name: "cpumask", scope: !2977, file: !2978, line: 12, baseType: !1612, size: 64)
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "flush_required", scope: !2974, file: !1406, line: 88, baseType: !720, size: 8, offset: 64)
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "writable", scope: !2974, file: !1406, line: 95, baseType: !720, size: 8, offset: 72)
!2983 = !DIDerivedType(tag: DW_TAG_member, scope: !1464, file: !1465, line: 1184, baseType: !2984, size: 128, offset: 12416)
!2984 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1464, file: !1465, line: 1184, size: 128, elements: !2985)
!2985 = !{!2986, !2987}
!2986 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_users", scope: !2984, file: !1465, line: 1185, baseType: !1477, size: 32)
!2987 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2984, file: !1465, line: 1186, baseType: !600, size: 128, align: 64)
!2988 = !DIDerivedType(tag: DW_TAG_member, name: "splice_pipe", scope: !1464, file: !1465, line: 1190, baseType: !2324, size: 64, offset: 12544)
!2989 = !DIDerivedType(tag: DW_TAG_member, name: "task_frag", scope: !1464, file: !1465, line: 1192, baseType: !2990, size: 128, offset: 12608)
!2990 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page_frag", file: !1406, line: 64, size: 128, elements: !2991)
!2991 = !{!2992, !2993, !2994}
!2992 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !2990, file: !1406, line: 65, baseType: !987, size: 64)
!2993 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2990, file: !1406, line: 67, baseType: !253, size: 32, offset: 64)
!2994 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2990, file: !1406, line: 68, baseType: !253, size: 32, offset: 96)
!2995 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied", scope: !1464, file: !1465, line: 1206, baseType: !170, size: 32, offset: 12736)
!2996 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied_pause", scope: !1464, file: !1465, line: 1207, baseType: !170, size: 32, offset: 12768)
!2997 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_paused_when", scope: !1464, file: !1465, line: 1209, baseType: !299, size: 64, offset: 12800)
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "timer_slack_ns", scope: !1464, file: !1465, line: 1219, baseType: !652, size: 64, offset: 12864)
!2999 = !DIDerivedType(tag: DW_TAG_member, name: "default_timer_slack_ns", scope: !1464, file: !1465, line: 1220, baseType: !652, size: 64, offset: 12928)
!3000 = !DIDerivedType(tag: DW_TAG_member, name: "pagefault_disabled", scope: !1464, file: !1465, line: 1317, baseType: !170, size: 32, offset: 12992)
!3001 = !DIDerivedType(tag: DW_TAG_member, name: "oom_reaper_list", scope: !1464, file: !1465, line: 1319, baseType: !1463, size: 64, offset: 13056)
!3002 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm_area", scope: !1464, file: !1465, line: 1322, baseType: !3003, size: 64, offset: 13120)
!3003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3004, size: 64)
!3004 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_struct", file: !3005, line: 56, size: 512, elements: !3006)
!3005 = !DIFile(filename: "./include/linux/vmalloc.h", directory: "/home/lizy2001/genbc/linux")
!3006 = !{!3007, !3008, !3009, !3010, !3011, !3012, !3013, !3015}
!3007 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3004, file: !3005, line: 57, baseType: !3003, size: 64)
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !3004, file: !3005, line: 58, baseType: !192, size: 64, offset: 64)
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3004, file: !3005, line: 59, baseType: !299, size: 64, offset: 128)
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3004, file: !3005, line: 60, baseType: !299, size: 64, offset: 192)
!3011 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !3004, file: !3005, line: 61, baseType: !1076, size: 64, offset: 256)
!3012 = !DIDerivedType(tag: DW_TAG_member, name: "nr_pages", scope: !3004, file: !3005, line: 62, baseType: !7, size: 32, offset: 320)
!3013 = !DIDerivedType(tag: DW_TAG_member, name: "phys_addr", scope: !3004, file: !3005, line: 63, baseType: !3014, size: 64, offset: 384)
!3014 = !DIDerivedType(tag: DW_TAG_typedef, name: "phys_addr_t", file: !205, line: 153, baseType: !652)
!3015 = !DIDerivedType(tag: DW_TAG_member, name: "caller", scope: !3004, file: !3005, line: 64, baseType: !3016, size: 64, offset: 448)
!3016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3017, size: 64)
!3017 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!3018 = !DIDerivedType(tag: DW_TAG_member, name: "stack_refcount", scope: !1464, file: !1465, line: 1326, baseType: !1477, size: 32, offset: 13184)
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "mce_vaddr", scope: !1464, file: !1465, line: 1342, baseType: !192, size: 64, offset: 13248)
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kflags", scope: !1464, file: !1465, line: 1343, baseType: !653, size: 64, offset: 13312)
!3021 = !DIDerivedType(tag: DW_TAG_member, name: "mce_addr", scope: !1464, file: !1465, line: 1344, baseType: !652, size: 64, offset: 13376)
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "mce_ripv", scope: !1464, file: !1465, line: 1345, baseType: !653, size: 1, offset: 13440, flags: DIFlagBitField, extraData: i64 13440)
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "mce_whole_page", scope: !1464, file: !1465, line: 1346, baseType: !653, size: 1, offset: 13441, flags: DIFlagBitField, extraData: i64 13440)
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "__mce_reserved", scope: !1464, file: !1465, line: 1347, baseType: !653, size: 62, offset: 13442, flags: DIFlagBitField, extraData: i64 13440)
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kill_me", scope: !1464, file: !1465, line: 1348, baseType: !600, size: 128, align: 64, offset: 13504)
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !1464, file: !1465, line: 1358, baseType: !3027, size: 34816, offset: 13824)
!3027 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_struct", file: !3028, line: 485, size: 34816, elements: !3029)
!3028 = !DIFile(filename: "./arch/x86/include/asm/processor.h", directory: "/home/lizy2001/genbc/linux")
!3029 = !{!3030, !3048, !3049, !3050, !3051, !3052, !3053, !3054, !3055, !3059, !3060, !3061, !3062, !3063, !3064, !3067, !3068, !3069}
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "tls_array", scope: !3027, file: !3028, line: 487, baseType: !3031, size: 192)
!3031 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3032, size: 192, elements: !513)
!3032 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "desc_struct", file: !3033, line: 16, size: 64, elements: !3034)
!3033 = !DIFile(filename: "./arch/x86/include/asm/desc_defs.h", directory: "/home/lizy2001/genbc/linux")
!3034 = !{!3035, !3036, !3037, !3038, !3039, !3040, !3041, !3042, !3043, !3044, !3045, !3046, !3047}
!3035 = !DIDerivedType(tag: DW_TAG_member, name: "limit0", scope: !3032, file: !3033, line: 17, baseType: !194, size: 16)
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "base0", scope: !3032, file: !3033, line: 18, baseType: !194, size: 16, offset: 16)
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "base1", scope: !3032, file: !3033, line: 19, baseType: !194, size: 8, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!3038 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3032, file: !3033, line: 19, baseType: !194, size: 4, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!3039 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !3032, file: !3033, line: 19, baseType: !194, size: 1, offset: 44, flags: DIFlagBitField, extraData: i64 32)
!3040 = !DIDerivedType(tag: DW_TAG_member, name: "dpl", scope: !3032, file: !3033, line: 19, baseType: !194, size: 2, offset: 45, flags: DIFlagBitField, extraData: i64 32)
!3041 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3032, file: !3033, line: 19, baseType: !194, size: 1, offset: 47, flags: DIFlagBitField, extraData: i64 32)
!3042 = !DIDerivedType(tag: DW_TAG_member, name: "limit1", scope: !3032, file: !3033, line: 20, baseType: !194, size: 4, offset: 48, flags: DIFlagBitField, extraData: i64 32)
!3043 = !DIDerivedType(tag: DW_TAG_member, name: "avl", scope: !3032, file: !3033, line: 20, baseType: !194, size: 1, offset: 52, flags: DIFlagBitField, extraData: i64 32)
!3044 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !3032, file: !3033, line: 20, baseType: !194, size: 1, offset: 53, flags: DIFlagBitField, extraData: i64 32)
!3045 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !3032, file: !3033, line: 20, baseType: !194, size: 1, offset: 54, flags: DIFlagBitField, extraData: i64 32)
!3046 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !3032, file: !3033, line: 20, baseType: !194, size: 1, offset: 55, flags: DIFlagBitField, extraData: i64 32)
!3047 = !DIDerivedType(tag: DW_TAG_member, name: "base2", scope: !3032, file: !3033, line: 20, baseType: !194, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 32)
!3048 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !3027, file: !3028, line: 491, baseType: !299, size: 64, offset: 192)
!3049 = !DIDerivedType(tag: DW_TAG_member, name: "es", scope: !3027, file: !3028, line: 495, baseType: !198, size: 16, offset: 256)
!3050 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !3027, file: !3028, line: 496, baseType: !198, size: 16, offset: 272)
!3051 = !DIDerivedType(tag: DW_TAG_member, name: "fsindex", scope: !3027, file: !3028, line: 497, baseType: !198, size: 16, offset: 288)
!3052 = !DIDerivedType(tag: DW_TAG_member, name: "gsindex", scope: !3027, file: !3028, line: 498, baseType: !198, size: 16, offset: 304)
!3053 = !DIDerivedType(tag: DW_TAG_member, name: "fsbase", scope: !3027, file: !3028, line: 502, baseType: !299, size: 64, offset: 320)
!3054 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !3027, file: !3028, line: 503, baseType: !299, size: 64, offset: 384)
!3055 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_bps", scope: !3027, file: !3028, line: 514, baseType: !3056, size: 256, offset: 448)
!3056 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3057, size: 256, elements: !288)
!3057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3058, size: 64)
!3058 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event", file: !3028, line: 483, flags: DIFlagFwdDecl)
!3059 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_dr6", scope: !3027, file: !3028, line: 516, baseType: !299, size: 64, offset: 704)
!3060 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_dr7", scope: !3027, file: !3028, line: 518, baseType: !299, size: 64, offset: 768)
!3061 = !DIDerivedType(tag: DW_TAG_member, name: "cr2", scope: !3027, file: !3028, line: 520, baseType: !299, size: 64, offset: 832)
!3062 = !DIDerivedType(tag: DW_TAG_member, name: "trap_nr", scope: !3027, file: !3028, line: 521, baseType: !299, size: 64, offset: 896)
!3063 = !DIDerivedType(tag: DW_TAG_member, name: "error_code", scope: !3027, file: !3028, line: 522, baseType: !299, size: 64, offset: 960)
!3064 = !DIDerivedType(tag: DW_TAG_member, name: "io_bitmap", scope: !3027, file: !3028, line: 528, baseType: !3065, size: 64, offset: 1024)
!3065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3066, size: 64)
!3066 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_bitmap", file: !3028, line: 10, flags: DIFlagFwdDecl)
!3067 = !DIDerivedType(tag: DW_TAG_member, name: "iopl_emul", scope: !3027, file: !3028, line: 535, baseType: !299, size: 64, offset: 1088)
!3068 = !DIDerivedType(tag: DW_TAG_member, name: "sig_on_uaccess_err", scope: !3027, file: !3028, line: 537, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!3069 = !DIDerivedType(tag: DW_TAG_member, name: "fpu", scope: !3027, file: !3028, line: 540, baseType: !3070, size: 33280, offset: 1536)
!3070 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fpu", file: !3071, line: 317, size: 33280, elements: !3072)
!3071 = !DIFile(filename: "./arch/x86/include/asm/fpu/types.h", directory: "/home/lizy2001/genbc/linux")
!3072 = !{!3073, !3074, !3075}
!3073 = !DIDerivedType(tag: DW_TAG_member, name: "last_cpu", scope: !3070, file: !3071, line: 330, baseType: !7, size: 32)
!3074 = !DIDerivedType(tag: DW_TAG_member, name: "avx512_timestamp", scope: !3070, file: !3071, line: 337, baseType: !299, size: 64, offset: 64)
!3075 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !3070, file: !3071, line: 348, baseType: !3076, size: 32768, offset: 512)
!3076 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "fpregs_state", file: !3071, line: 304, size: 32768, elements: !3077)
!3077 = !{!3078, !3093, !3132, !3182, !3195}
!3078 = !DIDerivedType(tag: DW_TAG_member, name: "fsave", scope: !3076, file: !3071, line: 305, baseType: !3079, size: 896)
!3079 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fregs_state", file: !3071, line: 12, size: 896, elements: !3080)
!3080 = !{!3081, !3082, !3083, !3084, !3085, !3086, !3087, !3088, !3092}
!3081 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !3079, file: !3071, line: 13, baseType: !338, size: 32)
!3082 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !3079, file: !3071, line: 14, baseType: !338, size: 32, offset: 32)
!3083 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !3079, file: !3071, line: 15, baseType: !338, size: 32, offset: 64)
!3084 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !3079, file: !3071, line: 16, baseType: !338, size: 32, offset: 96)
!3085 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !3079, file: !3071, line: 17, baseType: !338, size: 32, offset: 128)
!3086 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !3079, file: !3071, line: 18, baseType: !338, size: 32, offset: 160)
!3087 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !3079, file: !3071, line: 19, baseType: !338, size: 32, offset: 192)
!3088 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !3079, file: !3071, line: 22, baseType: !3089, size: 640, offset: 224)
!3089 = !DICompositeType(tag: DW_TAG_array_type, baseType: !338, size: 640, elements: !3090)
!3090 = !{!3091}
!3091 = !DISubrange(count: 20)
!3092 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !3079, file: !3071, line: 25, baseType: !338, size: 32, offset: 864)
!3093 = !DIDerivedType(tag: DW_TAG_member, name: "fxsave", scope: !3076, file: !3071, line: 306, baseType: !3094, size: 4096, align: 128)
!3094 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fxregs_state", file: !3071, line: 34, size: 4096, align: 128, elements: !3095)
!3095 = !{!3096, !3097, !3098, !3099, !3100, !3115, !3116, !3117, !3121, !3123, !3127}
!3096 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !3094, file: !3071, line: 35, baseType: !194, size: 16)
!3097 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !3094, file: !3071, line: 36, baseType: !194, size: 16, offset: 16)
!3098 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !3094, file: !3071, line: 37, baseType: !194, size: 16, offset: 32)
!3099 = !DIDerivedType(tag: DW_TAG_member, name: "fop", scope: !3094, file: !3071, line: 38, baseType: !194, size: 16, offset: 48)
!3100 = !DIDerivedType(tag: DW_TAG_member, scope: !3094, file: !3071, line: 39, baseType: !3101, size: 128, offset: 64)
!3101 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3094, file: !3071, line: 39, size: 128, elements: !3102)
!3102 = !{!3103, !3108}
!3103 = !DIDerivedType(tag: DW_TAG_member, scope: !3101, file: !3071, line: 40, baseType: !3104, size: 128)
!3104 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3101, file: !3071, line: 40, size: 128, elements: !3105)
!3105 = !{!3106, !3107}
!3106 = !DIDerivedType(tag: DW_TAG_member, name: "rip", scope: !3104, file: !3071, line: 41, baseType: !652, size: 64)
!3107 = !DIDerivedType(tag: DW_TAG_member, name: "rdp", scope: !3104, file: !3071, line: 42, baseType: !652, size: 64, offset: 64)
!3108 = !DIDerivedType(tag: DW_TAG_member, scope: !3101, file: !3071, line: 44, baseType: !3109, size: 128)
!3109 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3101, file: !3071, line: 44, size: 128, elements: !3110)
!3110 = !{!3111, !3112, !3113, !3114}
!3111 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !3109, file: !3071, line: 45, baseType: !338, size: 32)
!3112 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !3109, file: !3071, line: 46, baseType: !338, size: 32, offset: 32)
!3113 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !3109, file: !3071, line: 47, baseType: !338, size: 32, offset: 64)
!3114 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !3109, file: !3071, line: 48, baseType: !338, size: 32, offset: 96)
!3115 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr", scope: !3094, file: !3071, line: 51, baseType: !338, size: 32, offset: 192)
!3116 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr_mask", scope: !3094, file: !3071, line: 52, baseType: !338, size: 32, offset: 224)
!3117 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !3094, file: !3071, line: 55, baseType: !3118, size: 1024, offset: 256)
!3118 = !DICompositeType(tag: DW_TAG_array_type, baseType: !338, size: 1024, elements: !3119)
!3119 = !{!3120}
!3120 = !DISubrange(count: 32)
!3121 = !DIDerivedType(tag: DW_TAG_member, name: "xmm_space", scope: !3094, file: !3071, line: 58, baseType: !3122, size: 2048, offset: 1280)
!3122 = !DICompositeType(tag: DW_TAG_array_type, baseType: !338, size: 2048, elements: !517)
!3123 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !3094, file: !3071, line: 60, baseType: !3124, size: 384, offset: 3328)
!3124 = !DICompositeType(tag: DW_TAG_array_type, baseType: !338, size: 384, elements: !3125)
!3125 = !{!3126}
!3126 = !DISubrange(count: 12)
!3127 = !DIDerivedType(tag: DW_TAG_member, scope: !3094, file: !3071, line: 62, baseType: !3128, size: 384, offset: 3712)
!3128 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3094, file: !3071, line: 62, size: 384, elements: !3129)
!3129 = !{!3130, !3131}
!3130 = !DIDerivedType(tag: DW_TAG_member, name: "padding1", scope: !3128, file: !3071, line: 63, baseType: !3124, size: 384)
!3131 = !DIDerivedType(tag: DW_TAG_member, name: "sw_reserved", scope: !3128, file: !3071, line: 64, baseType: !3124, size: 384)
!3132 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !3076, file: !3071, line: 307, baseType: !3133, size: 1088)
!3133 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swregs_state", file: !3071, line: 79, size: 1088, elements: !3134)
!3134 = !{!3135, !3136, !3137, !3138, !3139, !3140, !3141, !3142, !3143, !3144, !3145, !3146, !3147, !3148, !3149, !3181}
!3135 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !3133, file: !3071, line: 80, baseType: !338, size: 32)
!3136 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !3133, file: !3071, line: 81, baseType: !338, size: 32, offset: 32)
!3137 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !3133, file: !3071, line: 82, baseType: !338, size: 32, offset: 64)
!3138 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !3133, file: !3071, line: 83, baseType: !338, size: 32, offset: 96)
!3139 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !3133, file: !3071, line: 84, baseType: !338, size: 32, offset: 128)
!3140 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !3133, file: !3071, line: 85, baseType: !338, size: 32, offset: 160)
!3141 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !3133, file: !3071, line: 86, baseType: !338, size: 32, offset: 192)
!3142 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !3133, file: !3071, line: 88, baseType: !3089, size: 640, offset: 224)
!3143 = !DIDerivedType(tag: DW_TAG_member, name: "ftop", scope: !3133, file: !3071, line: 89, baseType: !398, size: 8, offset: 864)
!3144 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !3133, file: !3071, line: 90, baseType: !398, size: 8, offset: 872)
!3145 = !DIDerivedType(tag: DW_TAG_member, name: "lookahead", scope: !3133, file: !3071, line: 91, baseType: !398, size: 8, offset: 880)
!3146 = !DIDerivedType(tag: DW_TAG_member, name: "no_update", scope: !3133, file: !3071, line: 92, baseType: !398, size: 8, offset: 888)
!3147 = !DIDerivedType(tag: DW_TAG_member, name: "rm", scope: !3133, file: !3071, line: 93, baseType: !398, size: 8, offset: 896)
!3148 = !DIDerivedType(tag: DW_TAG_member, name: "alimit", scope: !3133, file: !3071, line: 94, baseType: !398, size: 8, offset: 904)
!3149 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !3133, file: !3071, line: 95, baseType: !3150, size: 64, offset: 960)
!3150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3151, size: 64)
!3151 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "math_emu_info", file: !3152, line: 11, size: 128, elements: !3153)
!3152 = !DIFile(filename: "./arch/x86/include/asm/math_emu.h", directory: "/home/lizy2001/genbc/linux")
!3153 = !{!3154, !3155}
!3154 = !DIDerivedType(tag: DW_TAG_member, name: "___orig_eip", scope: !3151, file: !3152, line: 12, baseType: !138, size: 64)
!3155 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !3151, file: !3152, line: 13, baseType: !3156, size: 64, offset: 64)
!3156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3157, size: 64)
!3157 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pt_regs", file: !3158, line: 56, size: 1344, elements: !3159)
!3158 = !DIFile(filename: "./arch/x86/include/asm/ptrace.h", directory: "/home/lizy2001/genbc/linux")
!3159 = !{!3160, !3161, !3162, !3163, !3164, !3165, !3166, !3167, !3168, !3169, !3170, !3171, !3172, !3173, !3174, !3175, !3176, !3177, !3178, !3179, !3180}
!3160 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !3157, file: !3158, line: 61, baseType: !299, size: 64)
!3161 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !3157, file: !3158, line: 62, baseType: !299, size: 64, offset: 64)
!3162 = !DIDerivedType(tag: DW_TAG_member, name: "r13", scope: !3157, file: !3158, line: 63, baseType: !299, size: 64, offset: 128)
!3163 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !3157, file: !3158, line: 64, baseType: !299, size: 64, offset: 192)
!3164 = !DIDerivedType(tag: DW_TAG_member, name: "bp", scope: !3157, file: !3158, line: 65, baseType: !299, size: 64, offset: 256)
!3165 = !DIDerivedType(tag: DW_TAG_member, name: "bx", scope: !3157, file: !3158, line: 66, baseType: !299, size: 64, offset: 320)
!3166 = !DIDerivedType(tag: DW_TAG_member, name: "r11", scope: !3157, file: !3158, line: 68, baseType: !299, size: 64, offset: 384)
!3167 = !DIDerivedType(tag: DW_TAG_member, name: "r10", scope: !3157, file: !3158, line: 69, baseType: !299, size: 64, offset: 448)
!3168 = !DIDerivedType(tag: DW_TAG_member, name: "r9", scope: !3157, file: !3158, line: 70, baseType: !299, size: 64, offset: 512)
!3169 = !DIDerivedType(tag: DW_TAG_member, name: "r8", scope: !3157, file: !3158, line: 71, baseType: !299, size: 64, offset: 576)
!3170 = !DIDerivedType(tag: DW_TAG_member, name: "ax", scope: !3157, file: !3158, line: 72, baseType: !299, size: 64, offset: 640)
!3171 = !DIDerivedType(tag: DW_TAG_member, name: "cx", scope: !3157, file: !3158, line: 73, baseType: !299, size: 64, offset: 704)
!3172 = !DIDerivedType(tag: DW_TAG_member, name: "dx", scope: !3157, file: !3158, line: 74, baseType: !299, size: 64, offset: 768)
!3173 = !DIDerivedType(tag: DW_TAG_member, name: "si", scope: !3157, file: !3158, line: 75, baseType: !299, size: 64, offset: 832)
!3174 = !DIDerivedType(tag: DW_TAG_member, name: "di", scope: !3157, file: !3158, line: 76, baseType: !299, size: 64, offset: 896)
!3175 = !DIDerivedType(tag: DW_TAG_member, name: "orig_ax", scope: !3157, file: !3158, line: 81, baseType: !299, size: 64, offset: 960)
!3176 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !3157, file: !3158, line: 83, baseType: !299, size: 64, offset: 1024)
!3177 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !3157, file: !3158, line: 84, baseType: !299, size: 64, offset: 1088)
!3178 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3157, file: !3158, line: 85, baseType: !299, size: 64, offset: 1152)
!3179 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !3157, file: !3158, line: 86, baseType: !299, size: 64, offset: 1216)
!3180 = !DIDerivedType(tag: DW_TAG_member, name: "ss", scope: !3157, file: !3158, line: 87, baseType: !299, size: 64, offset: 1280)
!3181 = !DIDerivedType(tag: DW_TAG_member, name: "entry_eip", scope: !3133, file: !3071, line: 96, baseType: !338, size: 32, offset: 1024)
!3182 = !DIDerivedType(tag: DW_TAG_member, name: "xsave", scope: !3076, file: !3071, line: 308, baseType: !3183, size: 4608, align: 512)
!3183 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xregs_state", file: !3071, line: 289, size: 4608, align: 512, elements: !3184)
!3184 = !{!3185, !3186, !3193}
!3185 = !DIDerivedType(tag: DW_TAG_member, name: "i387", scope: !3183, file: !3071, line: 290, baseType: !3094, size: 4096, align: 128)
!3186 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !3183, file: !3071, line: 291, baseType: !3187, size: 512, offset: 4096)
!3187 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xstate_header", file: !3071, line: 268, size: 512, elements: !3188)
!3188 = !{!3189, !3190, !3191}
!3189 = !DIDerivedType(tag: DW_TAG_member, name: "xfeatures", scope: !3187, file: !3071, line: 269, baseType: !652, size: 64)
!3190 = !DIDerivedType(tag: DW_TAG_member, name: "xcomp_bv", scope: !3187, file: !3071, line: 270, baseType: !652, size: 64, offset: 64)
!3191 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !3187, file: !3071, line: 271, baseType: !3192, size: 384, offset: 128)
!3192 = !DICompositeType(tag: DW_TAG_array_type, baseType: !652, size: 384, elements: !1905)
!3193 = !DIDerivedType(tag: DW_TAG_member, name: "extended_state_area", scope: !3183, file: !3071, line: 292, baseType: !3194, offset: 4608)
!3194 = !DICompositeType(tag: DW_TAG_array_type, baseType: !398, elements: !2001)
!3195 = !DIDerivedType(tag: DW_TAG_member, name: "__padding", scope: !3076, file: !3071, line: 309, baseType: !3196, size: 32768)
!3196 = !DICompositeType(tag: DW_TAG_array_type, baseType: !398, size: 32768, elements: !3197)
!3197 = !{!3198}
!3198 = !DISubrange(count: 4096)
!3199 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1460, file: !989, line: 378, baseType: !3200, size: 64, offset: 64)
!3200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1460, size: 64)
!3201 = !DIDerivedType(tag: DW_TAG_member, name: "startup", scope: !1456, file: !989, line: 384, baseType: !1784, size: 192, offset: 192)
!3202 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_lock", scope: !1233, file: !989, line: 500, baseType: !227, offset: 6656)
!3203 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_table", scope: !1233, file: !989, line: 501, baseType: !3204, size: 64, offset: 6656)
!3204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3205, size: 64)
!3205 = !DICompositeType(tag: DW_TAG_structure_type, name: "kioctx_table", file: !989, line: 387, flags: DIFlagFwdDecl)
!3206 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1233, file: !989, line: 516, baseType: !1762, size: 64, offset: 6720)
!3207 = !DIDerivedType(tag: DW_TAG_member, name: "exe_file", scope: !1233, file: !989, line: 519, baseType: !587, size: 64, offset: 6784)
!3208 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_subscriptions", scope: !1233, file: !989, line: 521, baseType: !3209, size: 64, offset: 6848)
!3209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3210, size: 64)
!3210 = !DICompositeType(tag: DW_TAG_structure_type, name: "mmu_notifier_subscriptions", file: !989, line: 521, flags: DIFlagFwdDecl)
!3211 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_pending", scope: !1233, file: !989, line: 545, baseType: !204, size: 32, offset: 6912)
!3212 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_batched", scope: !1233, file: !989, line: 548, baseType: !720, size: 8, offset: 6944)
!3213 = !DIDerivedType(tag: DW_TAG_member, name: "uprobes_state", scope: !1233, file: !989, line: 550, baseType: !3214, offset: 6952)
!3214 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uprobes_state", file: !3215, line: 142, elements: !241)
!3215 = !DIFile(filename: "./include/linux/uprobes.h", directory: "/home/lizy2001/genbc/linux")
!3216 = !DIDerivedType(tag: DW_TAG_member, name: "async_put_work", scope: !1233, file: !989, line: 554, baseType: !383, size: 256, offset: 6976)
!3217 = !DIDerivedType(tag: DW_TAG_member, name: "pasid", scope: !1233, file: !989, line: 557, baseType: !338, size: 32, offset: 7232)
!3218 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_bitmap", scope: !1230, file: !989, line: 565, baseType: !2413, offset: 7296)
!3219 = !DIDerivedType(tag: DW_TAG_member, name: "pt_frag_refcount", scope: !1226, file: !989, line: 151, baseType: !204, size: 32)
!3220 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !1218, file: !989, line: 156, baseType: !227, offset: 256)
!3221 = !DIDerivedType(tag: DW_TAG_member, scope: !993, file: !989, line: 159, baseType: !3222, size: 128)
!3222 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !993, file: !989, line: 159, size: 128, elements: !3223)
!3223 = !{!3224, !3288}
!3224 = !DIDerivedType(tag: DW_TAG_member, name: "pgmap", scope: !3222, file: !989, line: 161, baseType: !3225, size: 64)
!3225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3226, size: 64)
!3226 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap", file: !43, line: 110, size: 1152, elements: !3227)
!3227 = !{!3228, !3238, !3259, !3260, !3261, !3262, !3263, !3275, !3276, !3277}
!3228 = !DIDerivedType(tag: DW_TAG_member, name: "altmap", scope: !3226, file: !43, line: 111, baseType: !3229, size: 384)
!3229 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmem_altmap", file: !43, line: 19, size: 384, elements: !3230)
!3230 = !{!3231, !3233, !3234, !3235, !3236, !3237}
!3231 = !DIDerivedType(tag: DW_TAG_member, name: "base_pfn", scope: !3229, file: !43, line: 20, baseType: !3232, size: 64)
!3232 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !299)
!3233 = !DIDerivedType(tag: DW_TAG_member, name: "end_pfn", scope: !3229, file: !43, line: 21, baseType: !3232, size: 64, offset: 64)
!3234 = !DIDerivedType(tag: DW_TAG_member, name: "reserve", scope: !3229, file: !43, line: 22, baseType: !3232, size: 64, offset: 128)
!3235 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !3229, file: !43, line: 23, baseType: !299, size: 64, offset: 192)
!3236 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !3229, file: !43, line: 24, baseType: !299, size: 64, offset: 256)
!3237 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !3229, file: !43, line: 25, baseType: !299, size: 64, offset: 320)
!3238 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !3226, file: !43, line: 112, baseType: !3239, size: 64, offset: 384)
!3239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3240, size: 64)
!3240 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref", file: !3241, line: 105, size: 128, elements: !3242)
!3241 = !DIFile(filename: "./include/linux/percpu-refcount.h", directory: "/home/lizy2001/genbc/linux")
!3242 = !{!3243, !3244}
!3243 = !DIDerivedType(tag: DW_TAG_member, name: "percpu_count_ptr", scope: !3240, file: !3241, line: 110, baseType: !299, size: 64)
!3244 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3240, file: !3241, line: 118, baseType: !3245, size: 64, offset: 64)
!3245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3246, size: 64)
!3246 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref_data", file: !3241, line: 95, size: 448, elements: !3247)
!3247 = !{!3248, !3249, !3254, !3255, !3256, !3257, !3258}
!3248 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3246, file: !3241, line: 96, baseType: !217, size: 64)
!3249 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3246, file: !3241, line: 97, baseType: !3250, size: 64, offset: 64)
!3250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3251, size: 64)
!3251 = !DIDerivedType(tag: DW_TAG_typedef, name: "percpu_ref_func_t", file: !3241, line: 60, baseType: !3252)
!3252 = !DISubroutineType(types: !3253)
!3253 = !{null, !3239}
!3254 = !DIDerivedType(tag: DW_TAG_member, name: "confirm_switch", scope: !3246, file: !3241, line: 98, baseType: !3250, size: 64, offset: 128)
!3255 = !DIDerivedType(tag: DW_TAG_member, name: "force_atomic", scope: !3246, file: !3241, line: 99, baseType: !720, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!3256 = !DIDerivedType(tag: DW_TAG_member, name: "allow_reinit", scope: !3246, file: !3241, line: 100, baseType: !720, size: 1, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!3257 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !3246, file: !3241, line: 101, baseType: !600, size: 128, align: 64, offset: 256)
!3258 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !3246, file: !3241, line: 102, baseType: !3239, size: 64, offset: 384)
!3259 = !DIDerivedType(tag: DW_TAG_member, name: "internal_ref", scope: !3226, file: !43, line: 113, baseType: !3240, size: 128, offset: 448)
!3260 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !3226, file: !43, line: 114, baseType: !1784, size: 192, offset: 576)
!3261 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3226, file: !43, line: 115, baseType: !42, size: 32, offset: 768)
!3262 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3226, file: !43, line: 116, baseType: !7, size: 32, offset: 800)
!3263 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3226, file: !43, line: 117, baseType: !3264, size: 64, offset: 832)
!3264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3265, size: 64)
!3265 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3266)
!3266 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap_ops", file: !43, line: 67, size: 256, elements: !3267)
!3267 = !{!3268, !3269, !3273, !3274}
!3268 = !DIDerivedType(tag: DW_TAG_member, name: "page_free", scope: !3266, file: !43, line: 73, baseType: !1096, size: 64)
!3269 = !DIDerivedType(tag: DW_TAG_member, name: "kill", scope: !3266, file: !43, line: 78, baseType: !3270, size: 64, offset: 64)
!3270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3271, size: 64)
!3271 = !DISubroutineType(types: !3272)
!3272 = !{null, !3225}
!3273 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !3266, file: !43, line: 83, baseType: !3270, size: 64, offset: 128)
!3274 = !DIDerivedType(tag: DW_TAG_member, name: "migrate_to_ram", scope: !3266, file: !43, line: 89, baseType: !1282, size: 64, offset: 192)
!3275 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3226, file: !43, line: 118, baseType: !192, size: 64, offset: 896)
!3276 = !DIDerivedType(tag: DW_TAG_member, name: "nr_range", scope: !3226, file: !43, line: 119, baseType: !170, size: 32, offset: 960)
!3277 = !DIDerivedType(tag: DW_TAG_member, scope: !3226, file: !43, line: 120, baseType: !3278, size: 128, offset: 1024)
!3278 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3226, file: !43, line: 120, size: 128, elements: !3279)
!3279 = !{!3280, !3286}
!3280 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !3278, file: !43, line: 121, baseType: !3281, size: 128)
!3281 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "range", file: !3282, line: 6, size: 128, elements: !3283)
!3282 = !DIFile(filename: "./include/linux/range.h", directory: "/home/lizy2001/genbc/linux")
!3283 = !{!3284, !3285}
!3284 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3281, file: !3282, line: 7, baseType: !652, size: 64)
!3285 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !3281, file: !3282, line: 8, baseType: !652, size: 64, offset: 64)
!3286 = !DIDerivedType(tag: DW_TAG_member, name: "ranges", scope: !3278, file: !43, line: 122, baseType: !3287)
!3287 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3281, elements: !2001)
!3288 = !DIDerivedType(tag: DW_TAG_member, name: "zone_device_data", scope: !3222, file: !989, line: 162, baseType: !192, size: 64, offset: 64)
!3289 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !993, file: !989, line: 176, baseType: !600, size: 128, align: 64)
!3290 = !DIDerivedType(tag: DW_TAG_member, scope: !988, file: !989, line: 179, baseType: !3291, size: 32, offset: 384)
!3291 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !988, file: !989, line: 179, size: 32, elements: !3292)
!3292 = !{!3293, !3294, !3295, !3296}
!3293 = !DIDerivedType(tag: DW_TAG_member, name: "_mapcount", scope: !3291, file: !989, line: 184, baseType: !204, size: 32)
!3294 = !DIDerivedType(tag: DW_TAG_member, name: "page_type", scope: !3291, file: !989, line: 192, baseType: !7, size: 32)
!3295 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !3291, file: !989, line: 194, baseType: !7, size: 32)
!3296 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !3291, file: !989, line: 195, baseType: !170, size: 32)
!3297 = !DIDerivedType(tag: DW_TAG_member, name: "_refcount", scope: !988, file: !989, line: 199, baseType: !204, size: 32, offset: 416)
!3298 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cached_objects", scope: !888, file: !56, line: 1964, baseType: !3299, size: 64, offset: 1344)
!3299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3300, size: 64)
!3300 = !DISubroutineType(types: !3301)
!3301 = !{!138, !827, !3302}
!3302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3303, size: 64)
!3303 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrink_control", file: !3304, line: 12, size: 256, elements: !3305)
!3304 = !DIFile(filename: "./include/linux/shrinker.h", directory: "/home/lizy2001/genbc/linux")
!3305 = !{!3306, !3307, !3308, !3309, !3310}
!3306 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !3303, file: !3304, line: 13, baseType: !1010, size: 32)
!3307 = !DIDerivedType(tag: DW_TAG_member, name: "nid", scope: !3303, file: !3304, line: 16, baseType: !170, size: 32, offset: 32)
!3308 = !DIDerivedType(tag: DW_TAG_member, name: "nr_to_scan", scope: !3303, file: !3304, line: 23, baseType: !299, size: 64, offset: 64)
!3309 = !DIDerivedType(tag: DW_TAG_member, name: "nr_scanned", scope: !3303, file: !3304, line: 30, baseType: !299, size: 64, offset: 128)
!3310 = !DIDerivedType(tag: DW_TAG_member, name: "memcg", scope: !3303, file: !3304, line: 33, baseType: !3311, size: 64, offset: 192)
!3311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3312, size: 64)
!3312 = !DICompositeType(tag: DW_TAG_structure_type, name: "mem_cgroup", file: !989, line: 27, flags: DIFlagFwdDecl)
!3313 = !DIDerivedType(tag: DW_TAG_member, name: "free_cached_objects", scope: !888, file: !56, line: 1966, baseType: !3299, size: 64, offset: 1408)
!3314 = !DIDerivedType(tag: DW_TAG_member, name: "dq_op", scope: !828, file: !56, line: 1424, baseType: !3315, size: 64, offset: 448)
!3315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3316, size: 64)
!3316 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3317)
!3317 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot_operations", file: !50, line: 322, size: 704, elements: !3318)
!3318 = !{!3319, !3365, !3369, !3373, !3374, !3375, !3376, !3377, !3382, !3387, !3391}
!3319 = !DIDerivedType(tag: DW_TAG_member, name: "write_dquot", scope: !3317, file: !50, line: 323, baseType: !3320, size: 64)
!3320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3321, size: 64)
!3321 = !DISubroutineType(types: !3322)
!3322 = !{!170, !3323}
!3323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3324, size: 64)
!3324 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot", file: !50, line: 294, size: 1600, elements: !3325)
!3325 = !{!3326, !3327, !3328, !3329, !3330, !3331, !3332, !3333, !3334, !3350, !3351, !3352}
!3326 = !DIDerivedType(tag: DW_TAG_member, name: "dq_hash", scope: !3324, file: !50, line: 295, baseType: !870, size: 128)
!3327 = !DIDerivedType(tag: DW_TAG_member, name: "dq_inuse", scope: !3324, file: !50, line: 296, baseType: !243, size: 128, offset: 128)
!3328 = !DIDerivedType(tag: DW_TAG_member, name: "dq_free", scope: !3324, file: !50, line: 297, baseType: !243, size: 128, offset: 256)
!3329 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dirty", scope: !3324, file: !50, line: 298, baseType: !243, size: 128, offset: 384)
!3330 = !DIDerivedType(tag: DW_TAG_member, name: "dq_lock", scope: !3324, file: !50, line: 299, baseType: !213, size: 192, offset: 512)
!3331 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb_lock", scope: !3324, file: !50, line: 300, baseType: !227, offset: 704)
!3332 = !DIDerivedType(tag: DW_TAG_member, name: "dq_count", scope: !3324, file: !50, line: 301, baseType: !204, size: 32, offset: 704)
!3333 = !DIDerivedType(tag: DW_TAG_member, name: "dq_sb", scope: !3324, file: !50, line: 302, baseType: !827, size: 64, offset: 768)
!3334 = !DIDerivedType(tag: DW_TAG_member, name: "dq_id", scope: !3324, file: !50, line: 303, baseType: !3335, size: 64, offset: 832)
!3335 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kqid", file: !50, line: 68, size: 64, elements: !3336)
!3336 = !{!3337, !3349}
!3337 = !DIDerivedType(tag: DW_TAG_member, scope: !3335, file: !50, line: 69, baseType: !3338, size: 32)
!3338 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3335, file: !50, line: 69, size: 32, elements: !3339)
!3339 = !{!3340, !3341, !3342}
!3340 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !3338, file: !50, line: 70, baseType: !665, size: 32)
!3341 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !3338, file: !50, line: 71, baseType: !673, size: 32)
!3342 = !DIDerivedType(tag: DW_TAG_member, name: "projid", scope: !3338, file: !50, line: 72, baseType: !3343, size: 32)
!3343 = !DIDerivedType(tag: DW_TAG_typedef, name: "kprojid_t", file: !3344, line: 24, baseType: !3345)
!3344 = !DIFile(filename: "./include/linux/projid.h", directory: "/home/lizy2001/genbc/linux")
!3345 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3344, line: 22, size: 32, elements: !3346)
!3346 = !{!3347}
!3347 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !3345, file: !3344, line: 23, baseType: !3348, size: 32)
!3348 = !DIDerivedType(tag: DW_TAG_typedef, name: "projid_t", file: !3344, line: 20, baseType: !671)
!3349 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3335, file: !50, line: 74, baseType: !49, size: 32, offset: 32)
!3350 = !DIDerivedType(tag: DW_TAG_member, name: "dq_off", scope: !3324, file: !50, line: 304, baseType: !761, size: 64, offset: 896)
!3351 = !DIDerivedType(tag: DW_TAG_member, name: "dq_flags", scope: !3324, file: !50, line: 305, baseType: !299, size: 64, offset: 960)
!3352 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb", scope: !3324, file: !50, line: 306, baseType: !3353, size: 576, offset: 1024)
!3353 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqblk", file: !50, line: 205, size: 576, elements: !3354)
!3354 = !{!3355, !3357, !3358, !3359, !3360, !3361, !3362, !3363, !3364}
!3355 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bhardlimit", scope: !3353, file: !50, line: 206, baseType: !3356, size: 64)
!3356 = !DIDerivedType(tag: DW_TAG_typedef, name: "qsize_t", file: !50, line: 66, baseType: !225)
!3357 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bsoftlimit", scope: !3353, file: !50, line: 207, baseType: !3356, size: 64, offset: 64)
!3358 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curspace", scope: !3353, file: !50, line: 208, baseType: !3356, size: 64, offset: 128)
!3359 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_rsvspace", scope: !3353, file: !50, line: 209, baseType: !3356, size: 64, offset: 192)
!3360 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_ihardlimit", scope: !3353, file: !50, line: 210, baseType: !3356, size: 64, offset: 256)
!3361 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_isoftlimit", scope: !3353, file: !50, line: 211, baseType: !3356, size: 64, offset: 320)
!3362 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curinodes", scope: !3353, file: !50, line: 212, baseType: !3356, size: 64, offset: 384)
!3363 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_btime", scope: !3353, file: !50, line: 213, baseType: !768, size: 64, offset: 448)
!3364 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_itime", scope: !3353, file: !50, line: 214, baseType: !768, size: 64, offset: 512)
!3365 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_dquot", scope: !3317, file: !50, line: 324, baseType: !3366, size: 64, offset: 64)
!3366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3367, size: 64)
!3367 = !DISubroutineType(types: !3368)
!3368 = !{!3323, !827, !170}
!3369 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_dquot", scope: !3317, file: !50, line: 325, baseType: !3370, size: 64, offset: 128)
!3370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3371, size: 64)
!3371 = !DISubroutineType(types: !3372)
!3372 = !{null, !3323}
!3373 = !DIDerivedType(tag: DW_TAG_member, name: "acquire_dquot", scope: !3317, file: !50, line: 326, baseType: !3320, size: 64, offset: 192)
!3374 = !DIDerivedType(tag: DW_TAG_member, name: "release_dquot", scope: !3317, file: !50, line: 327, baseType: !3320, size: 64, offset: 256)
!3375 = !DIDerivedType(tag: DW_TAG_member, name: "mark_dirty", scope: !3317, file: !50, line: 328, baseType: !3320, size: 64, offset: 320)
!3376 = !DIDerivedType(tag: DW_TAG_member, name: "write_info", scope: !3317, file: !50, line: 329, baseType: !916, size: 64, offset: 384)
!3377 = !DIDerivedType(tag: DW_TAG_member, name: "get_reserved_space", scope: !3317, file: !50, line: 332, baseType: !3378, size: 64, offset: 448)
!3378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3379, size: 64)
!3379 = !DISubroutineType(types: !3380)
!3380 = !{!3381, !659}
!3381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3356, size: 64)
!3382 = !DIDerivedType(tag: DW_TAG_member, name: "get_projid", scope: !3317, file: !50, line: 333, baseType: !3383, size: 64, offset: 512)
!3383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3384, size: 64)
!3384 = !DISubroutineType(types: !3385)
!3385 = !{!170, !659, !3386}
!3386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3343, size: 64)
!3387 = !DIDerivedType(tag: DW_TAG_member, name: "get_inode_usage", scope: !3317, file: !50, line: 335, baseType: !3388, size: 64, offset: 576)
!3388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3389, size: 64)
!3389 = !DISubroutineType(types: !3390)
!3390 = !{!170, !659, !3381}
!3391 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !3317, file: !50, line: 337, baseType: !3392, size: 64, offset: 640)
!3392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3393, size: 64)
!3393 = !DISubroutineType(types: !3394)
!3394 = !{!170, !827, !3395}
!3395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3335, size: 64)
!3396 = !DIDerivedType(tag: DW_TAG_member, name: "s_qcop", scope: !828, file: !56, line: 1425, baseType: !3397, size: 64, offset: 512)
!3397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3398, size: 64)
!3398 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3399)
!3399 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quotactl_ops", file: !50, line: 428, size: 704, elements: !3400)
!3400 = !{!3401, !3405, !3406, !3410, !3411, !3412, !3427, !3450, !3454, !3455, !3478}
!3401 = !DIDerivedType(tag: DW_TAG_member, name: "quota_on", scope: !3399, file: !50, line: 429, baseType: !3402, size: 64)
!3402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3403, size: 64)
!3403 = !DISubroutineType(types: !3404)
!3404 = !{!170, !827, !170, !170, !777}
!3405 = !DIDerivedType(tag: DW_TAG_member, name: "quota_off", scope: !3399, file: !50, line: 430, baseType: !916, size: 64, offset: 64)
!3406 = !DIDerivedType(tag: DW_TAG_member, name: "quota_enable", scope: !3399, file: !50, line: 431, baseType: !3407, size: 64, offset: 128)
!3407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3408, size: 64)
!3408 = !DISubroutineType(types: !3409)
!3409 = !{!170, !827, !7}
!3410 = !DIDerivedType(tag: DW_TAG_member, name: "quota_disable", scope: !3399, file: !50, line: 432, baseType: !3407, size: 64, offset: 192)
!3411 = !DIDerivedType(tag: DW_TAG_member, name: "quota_sync", scope: !3399, file: !50, line: 433, baseType: !916, size: 64, offset: 256)
!3412 = !DIDerivedType(tag: DW_TAG_member, name: "set_info", scope: !3399, file: !50, line: 434, baseType: !3413, size: 64, offset: 320)
!3413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3414, size: 64)
!3414 = !DISubroutineType(types: !3415)
!3415 = !{!170, !827, !170, !3416}
!3416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3417, size: 64)
!3417 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_info", file: !50, line: 415, size: 256, elements: !3418)
!3418 = !{!3419, !3420, !3421, !3422, !3423, !3424, !3425, !3426}
!3419 = !DIDerivedType(tag: DW_TAG_member, name: "i_fieldmask", scope: !3417, file: !50, line: 416, baseType: !170, size: 32)
!3420 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !3417, file: !50, line: 417, baseType: !7, size: 32, offset: 32)
!3421 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_timelimit", scope: !3417, file: !50, line: 418, baseType: !7, size: 32, offset: 64)
!3422 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_timelimit", scope: !3417, file: !50, line: 420, baseType: !7, size: 32, offset: 96)
!3423 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_timelimit", scope: !3417, file: !50, line: 421, baseType: !7, size: 32, offset: 128)
!3424 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_warnlimit", scope: !3417, file: !50, line: 422, baseType: !7, size: 32, offset: 160)
!3425 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_warnlimit", scope: !3417, file: !50, line: 423, baseType: !7, size: 32, offset: 192)
!3426 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_warnlimit", scope: !3417, file: !50, line: 424, baseType: !7, size: 32, offset: 224)
!3427 = !DIDerivedType(tag: DW_TAG_member, name: "get_dqblk", scope: !3399, file: !50, line: 435, baseType: !3428, size: 64, offset: 384)
!3428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3429, size: 64)
!3429 = !DISubroutineType(types: !3430)
!3430 = !{!170, !827, !3335, !3431}
!3431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3432, size: 64)
!3432 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_dqblk", file: !50, line: 343, size: 960, elements: !3433)
!3433 = !{!3434, !3435, !3436, !3437, !3438, !3439, !3440, !3441, !3442, !3443, !3444, !3445, !3446, !3447, !3448, !3449}
!3434 = !DIDerivedType(tag: DW_TAG_member, name: "d_fieldmask", scope: !3432, file: !50, line: 344, baseType: !170, size: 32)
!3435 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_hardlimit", scope: !3432, file: !50, line: 345, baseType: !652, size: 64, offset: 64)
!3436 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_softlimit", scope: !3432, file: !50, line: 346, baseType: !652, size: 64, offset: 128)
!3437 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_hardlimit", scope: !3432, file: !50, line: 347, baseType: !652, size: 64, offset: 192)
!3438 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_softlimit", scope: !3432, file: !50, line: 348, baseType: !652, size: 64, offset: 256)
!3439 = !DIDerivedType(tag: DW_TAG_member, name: "d_space", scope: !3432, file: !50, line: 349, baseType: !652, size: 64, offset: 320)
!3440 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_count", scope: !3432, file: !50, line: 350, baseType: !652, size: 64, offset: 384)
!3441 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_timer", scope: !3432, file: !50, line: 351, baseType: !223, size: 64, offset: 448)
!3442 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_timer", scope: !3432, file: !50, line: 353, baseType: !223, size: 64, offset: 512)
!3443 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_warns", scope: !3432, file: !50, line: 354, baseType: !170, size: 32, offset: 576)
!3444 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_warns", scope: !3432, file: !50, line: 355, baseType: !170, size: 32, offset: 608)
!3445 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_hardlimit", scope: !3432, file: !50, line: 356, baseType: !652, size: 64, offset: 640)
!3446 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_softlimit", scope: !3432, file: !50, line: 357, baseType: !652, size: 64, offset: 704)
!3447 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_space", scope: !3432, file: !50, line: 358, baseType: !652, size: 64, offset: 768)
!3448 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_timer", scope: !3432, file: !50, line: 359, baseType: !223, size: 64, offset: 832)
!3449 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_warns", scope: !3432, file: !50, line: 360, baseType: !170, size: 32, offset: 896)
!3450 = !DIDerivedType(tag: DW_TAG_member, name: "get_nextdqblk", scope: !3399, file: !50, line: 436, baseType: !3451, size: 64, offset: 448)
!3451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3452, size: 64)
!3452 = !DISubroutineType(types: !3453)
!3453 = !{!170, !827, !3395, !3431}
!3454 = !DIDerivedType(tag: DW_TAG_member, name: "set_dqblk", scope: !3399, file: !50, line: 438, baseType: !3428, size: 64, offset: 512)
!3455 = !DIDerivedType(tag: DW_TAG_member, name: "get_state", scope: !3399, file: !50, line: 439, baseType: !3456, size: 64, offset: 576)
!3456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3457, size: 64)
!3457 = !DISubroutineType(types: !3458)
!3458 = !{!170, !827, !3459}
!3459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3460, size: 64)
!3460 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_state", file: !50, line: 409, size: 1408, elements: !3461)
!3461 = !{!3462, !3463}
!3462 = !DIDerivedType(tag: DW_TAG_member, name: "s_incoredqs", scope: !3460, file: !50, line: 410, baseType: !7, size: 32)
!3463 = !DIDerivedType(tag: DW_TAG_member, name: "s_state", scope: !3460, file: !50, line: 411, baseType: !3464, size: 1344, offset: 64)
!3464 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3465, size: 1344, elements: !513)
!3465 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_type_state", file: !50, line: 395, size: 448, elements: !3466)
!3466 = !{!3467, !3468, !3469, !3470, !3471, !3472, !3473, !3474, !3475, !3477}
!3467 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3465, file: !50, line: 396, baseType: !7, size: 32)
!3468 = !DIDerivedType(tag: DW_TAG_member, name: "spc_timelimit", scope: !3465, file: !50, line: 397, baseType: !7, size: 32, offset: 32)
!3469 = !DIDerivedType(tag: DW_TAG_member, name: "ino_timelimit", scope: !3465, file: !50, line: 399, baseType: !7, size: 32, offset: 64)
!3470 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_timelimit", scope: !3465, file: !50, line: 400, baseType: !7, size: 32, offset: 96)
!3471 = !DIDerivedType(tag: DW_TAG_member, name: "spc_warnlimit", scope: !3465, file: !50, line: 401, baseType: !7, size: 32, offset: 128)
!3472 = !DIDerivedType(tag: DW_TAG_member, name: "ino_warnlimit", scope: !3465, file: !50, line: 402, baseType: !7, size: 32, offset: 160)
!3473 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_warnlimit", scope: !3465, file: !50, line: 403, baseType: !7, size: 32, offset: 192)
!3474 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !3465, file: !50, line: 404, baseType: !654, size: 64, offset: 256)
!3475 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !3465, file: !50, line: 405, baseType: !3476, size: 64, offset: 320)
!3476 = !DIDerivedType(tag: DW_TAG_typedef, name: "blkcnt_t", file: !205, line: 126, baseType: !652)
!3477 = !DIDerivedType(tag: DW_TAG_member, name: "nextents", scope: !3465, file: !50, line: 406, baseType: !3476, size: 64, offset: 384)
!3478 = !DIDerivedType(tag: DW_TAG_member, name: "rm_xquota", scope: !3399, file: !50, line: 440, baseType: !3407, size: 64, offset: 640)
!3479 = !DIDerivedType(tag: DW_TAG_member, name: "s_export_op", scope: !828, file: !56, line: 1426, baseType: !3480, size: 64, offset: 576)
!3480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3481, size: 64)
!3481 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3482)
!3482 = !DICompositeType(tag: DW_TAG_structure_type, name: "export_operations", file: !56, line: 49, flags: DIFlagFwdDecl)
!3483 = !DIDerivedType(tag: DW_TAG_member, name: "s_flags", scope: !828, file: !56, line: 1427, baseType: !299, size: 64, offset: 640)
!3484 = !DIDerivedType(tag: DW_TAG_member, name: "s_iflags", scope: !828, file: !56, line: 1428, baseType: !299, size: 64, offset: 704)
!3485 = !DIDerivedType(tag: DW_TAG_member, name: "s_magic", scope: !828, file: !56, line: 1429, baseType: !299, size: 64, offset: 768)
!3486 = !DIDerivedType(tag: DW_TAG_member, name: "s_root", scope: !828, file: !56, line: 1430, baseType: !617, size: 64, offset: 832)
!3487 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount", scope: !828, file: !56, line: 1431, baseType: !1030, size: 256, offset: 896)
!3488 = !DIDerivedType(tag: DW_TAG_member, name: "s_count", scope: !828, file: !56, line: 1432, baseType: !170, size: 32, offset: 1152)
!3489 = !DIDerivedType(tag: DW_TAG_member, name: "s_active", scope: !828, file: !56, line: 1433, baseType: !204, size: 32, offset: 1184)
!3490 = !DIDerivedType(tag: DW_TAG_member, name: "s_xattr", scope: !828, file: !56, line: 1437, baseType: !3491, size: 64, offset: 1216)
!3491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3492, size: 64)
!3492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3493, size: 64)
!3493 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3494)
!3494 = !DICompositeType(tag: DW_TAG_structure_type, name: "xattr_handler", file: !56, line: 1437, flags: DIFlagFwdDecl)
!3495 = !DIDerivedType(tag: DW_TAG_member, name: "s_roots", scope: !828, file: !56, line: 1449, baseType: !3496, size: 64, offset: 1280)
!3496 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_head", file: !633, line: 34, size: 64, elements: !3497)
!3497 = !{!3498}
!3498 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !3496, file: !633, line: 35, baseType: !636, size: 64)
!3499 = !DIDerivedType(tag: DW_TAG_member, name: "s_mounts", scope: !828, file: !56, line: 1450, baseType: !243, size: 128, offset: 1344)
!3500 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdev", scope: !828, file: !56, line: 1451, baseType: !3501, size: 64, offset: 1472)
!3501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3502, size: 64)
!3502 = !DICompositeType(tag: DW_TAG_structure_type, name: "block_device", file: !56, line: 699, flags: DIFlagFwdDecl)
!3503 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdi", scope: !828, file: !56, line: 1452, baseType: !2825, size: 64, offset: 1536)
!3504 = !DIDerivedType(tag: DW_TAG_member, name: "s_mtd", scope: !828, file: !56, line: 1453, baseType: !3505, size: 64, offset: 1600)
!3505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3506, size: 64)
!3506 = !DICompositeType(tag: DW_TAG_structure_type, name: "mtd_info", file: !56, line: 1453, flags: DIFlagFwdDecl)
!3507 = !DIDerivedType(tag: DW_TAG_member, name: "s_instances", scope: !828, file: !56, line: 1454, baseType: !870, size: 128, offset: 1664)
!3508 = !DIDerivedType(tag: DW_TAG_member, name: "s_quota_types", scope: !828, file: !56, line: 1455, baseType: !7, size: 32, offset: 1792)
!3509 = !DIDerivedType(tag: DW_TAG_member, name: "s_dquot", scope: !828, file: !56, line: 1456, baseType: !3510, size: 2432, offset: 1856)
!3510 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_info", file: !50, line: 518, size: 2432, elements: !3511)
!3511 = !{!3512, !3513, !3514, !3516, !3548}
!3512 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3510, file: !50, line: 519, baseType: !7, size: 32)
!3513 = !DIDerivedType(tag: DW_TAG_member, name: "dqio_sem", scope: !3510, file: !50, line: 520, baseType: !1030, size: 256, offset: 64)
!3514 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !3510, file: !50, line: 521, baseType: !3515, size: 192, offset: 320)
!3515 = !DICompositeType(tag: DW_TAG_array_type, baseType: !659, size: 192, elements: !513)
!3516 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !3510, file: !50, line: 522, baseType: !3517, size: 1728, offset: 512)
!3517 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3518, size: 1728, elements: !513)
!3518 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqinfo", file: !50, line: 222, size: 576, elements: !3519)
!3519 = !{!3520, !3540, !3541, !3542, !3543, !3544, !3545, !3546, !3547}
!3520 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_format", scope: !3518, file: !50, line: 223, baseType: !3521, size: 64)
!3521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3522, size: 64)
!3522 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_type", file: !50, line: 443, size: 256, elements: !3523)
!3523 = !{!3524, !3525, !3538, !3539}
!3524 = !DIDerivedType(tag: DW_TAG_member, name: "qf_fmt_id", scope: !3522, file: !50, line: 444, baseType: !170, size: 32)
!3525 = !DIDerivedType(tag: DW_TAG_member, name: "qf_ops", scope: !3522, file: !50, line: 445, baseType: !3526, size: 64, offset: 64)
!3526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3527, size: 64)
!3527 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3528)
!3528 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_ops", file: !50, line: 310, size: 512, elements: !3529)
!3529 = !{!3530, !3531, !3532, !3533, !3534, !3535, !3536, !3537}
!3530 = !DIDerivedType(tag: DW_TAG_member, name: "check_quota_file", scope: !3528, file: !50, line: 311, baseType: !916, size: 64)
!3531 = !DIDerivedType(tag: DW_TAG_member, name: "read_file_info", scope: !3528, file: !50, line: 312, baseType: !916, size: 64, offset: 64)
!3532 = !DIDerivedType(tag: DW_TAG_member, name: "write_file_info", scope: !3528, file: !50, line: 313, baseType: !916, size: 64, offset: 128)
!3533 = !DIDerivedType(tag: DW_TAG_member, name: "free_file_info", scope: !3528, file: !50, line: 314, baseType: !916, size: 64, offset: 192)
!3534 = !DIDerivedType(tag: DW_TAG_member, name: "read_dqblk", scope: !3528, file: !50, line: 315, baseType: !3320, size: 64, offset: 256)
!3535 = !DIDerivedType(tag: DW_TAG_member, name: "commit_dqblk", scope: !3528, file: !50, line: 316, baseType: !3320, size: 64, offset: 320)
!3536 = !DIDerivedType(tag: DW_TAG_member, name: "release_dqblk", scope: !3528, file: !50, line: 317, baseType: !3320, size: 64, offset: 384)
!3537 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !3528, file: !50, line: 318, baseType: !3392, size: 64, offset: 448)
!3538 = !DIDerivedType(tag: DW_TAG_member, name: "qf_owner", scope: !3522, file: !50, line: 446, baseType: !861, size: 64, offset: 128)
!3539 = !DIDerivedType(tag: DW_TAG_member, name: "qf_next", scope: !3522, file: !50, line: 447, baseType: !3521, size: 64, offset: 192)
!3540 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_fmt_id", scope: !3518, file: !50, line: 224, baseType: !170, size: 32, offset: 64)
!3541 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_dirty_list", scope: !3518, file: !50, line: 226, baseType: !243, size: 128, offset: 128)
!3542 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_flags", scope: !3518, file: !50, line: 227, baseType: !299, size: 64, offset: 256)
!3543 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_bgrace", scope: !3518, file: !50, line: 228, baseType: !7, size: 32, offset: 320)
!3544 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_igrace", scope: !3518, file: !50, line: 229, baseType: !7, size: 32, offset: 352)
!3545 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_spc_limit", scope: !3518, file: !50, line: 230, baseType: !3356, size: 64, offset: 384)
!3546 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_ino_limit", scope: !3518, file: !50, line: 231, baseType: !3356, size: 64, offset: 448)
!3547 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_priv", scope: !3518, file: !50, line: 232, baseType: !192, size: 64, offset: 512)
!3548 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3510, file: !50, line: 523, baseType: !3549, size: 192, offset: 2240)
!3549 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3526, size: 192, elements: !513)
!3550 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers", scope: !828, file: !56, line: 1458, baseType: !3551, size: 2112, offset: 4288)
!3551 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sb_writers", file: !56, line: 1410, size: 2112, elements: !3552)
!3552 = !{!3553, !3554, !3555}
!3553 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !3551, file: !56, line: 1411, baseType: !170, size: 32)
!3554 = !DIDerivedType(tag: DW_TAG_member, name: "wait_unfrozen", scope: !3551, file: !56, line: 1412, baseType: !1726, size: 128, offset: 64)
!3555 = !DIDerivedType(tag: DW_TAG_member, name: "rw_sem", scope: !3551, file: !56, line: 1413, baseType: !3556, size: 1920, offset: 192)
!3556 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3557, size: 1920, elements: !513)
!3557 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_rw_semaphore", file: !3558, line: 12, size: 640, elements: !3559)
!3558 = !DIFile(filename: "./include/linux/percpu-rwsem.h", directory: "/home/lizy2001/genbc/linux")
!3559 = !{!3560, !3568, !3570, !3575, !3576}
!3560 = !DIDerivedType(tag: DW_TAG_member, name: "rss", scope: !3557, file: !3558, line: 13, baseType: !3561, size: 320)
!3561 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcu_sync", file: !3562, line: 17, size: 320, elements: !3563)
!3562 = !DIFile(filename: "./include/linux/rcu_sync.h", directory: "/home/lizy2001/genbc/linux")
!3563 = !{!3564, !3565, !3566, !3567}
!3564 = !DIDerivedType(tag: DW_TAG_member, name: "gp_state", scope: !3561, file: !3562, line: 18, baseType: !170, size: 32)
!3565 = !DIDerivedType(tag: DW_TAG_member, name: "gp_count", scope: !3561, file: !3562, line: 19, baseType: !170, size: 32, offset: 32)
!3566 = !DIDerivedType(tag: DW_TAG_member, name: "gp_wait", scope: !3561, file: !3562, line: 20, baseType: !1726, size: 128, offset: 64)
!3567 = !DIDerivedType(tag: DW_TAG_member, name: "cb_head", scope: !3561, file: !3562, line: 22, baseType: !600, size: 128, align: 64, offset: 192)
!3568 = !DIDerivedType(tag: DW_TAG_member, name: "read_count", scope: !3557, file: !3558, line: 14, baseType: !3569, size: 64, offset: 320)
!3569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!3570 = !DIDerivedType(tag: DW_TAG_member, name: "writer", scope: !3557, file: !3558, line: 15, baseType: !3571, size: 64, offset: 384)
!3571 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcuwait", file: !3572, line: 16, size: 64, elements: !3573)
!3572 = !DIFile(filename: "./include/linux/rcuwait.h", directory: "/home/lizy2001/genbc/linux")
!3573 = !{!3574}
!3574 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !3571, file: !3572, line: 17, baseType: !1463, size: 64)
!3575 = !DIDerivedType(tag: DW_TAG_member, name: "waiters", scope: !3557, file: !3558, line: 16, baseType: !1726, size: 128, offset: 448)
!3576 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !3557, file: !3558, line: 17, baseType: !204, size: 32, offset: 576)
!3577 = !DIDerivedType(tag: DW_TAG_member, name: "s_fs_info", scope: !828, file: !56, line: 1465, baseType: !192, size: 64, offset: 6400)
!3578 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_gran", scope: !828, file: !56, line: 1468, baseType: !338, size: 32, offset: 6464)
!3579 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_min", scope: !828, file: !56, line: 1470, baseType: !768, size: 64, offset: 6528)
!3580 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_max", scope: !828, file: !56, line: 1471, baseType: !768, size: 64, offset: 6592)
!3581 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_mask", scope: !828, file: !56, line: 1473, baseType: !253, size: 32, offset: 6656)
!3582 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_marks", scope: !828, file: !56, line: 1474, baseType: !3583, size: 64, offset: 6720)
!3583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3584, size: 64)
!3584 = !DICompositeType(tag: DW_TAG_structure_type, name: "fsnotify_mark_connector", file: !56, line: 603, flags: DIFlagFwdDecl)
!3585 = !DIDerivedType(tag: DW_TAG_member, name: "s_id", scope: !828, file: !56, line: 1477, baseType: !3586, size: 256, offset: 6784)
!3586 = !DICompositeType(tag: DW_TAG_array_type, baseType: !295, size: 256, elements: !3119)
!3587 = !DIDerivedType(tag: DW_TAG_member, name: "s_uuid", scope: !828, file: !56, line: 1478, baseType: !3588, size: 128, offset: 7040)
!3588 = !DIDerivedType(tag: DW_TAG_typedef, name: "uuid_t", file: !3589, line: 18, baseType: !3590)
!3589 = !DIFile(filename: "./include/linux/uuid.h", directory: "/home/lizy2001/genbc/linux")
!3590 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3589, line: 16, size: 128, elements: !3591)
!3591 = !{!3592}
!3592 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !3590, file: !3589, line: 17, baseType: !3593, size: 128)
!3593 = !DICompositeType(tag: DW_TAG_array_type, baseType: !353, size: 128, elements: !296)
!3594 = !DIDerivedType(tag: DW_TAG_member, name: "s_max_links", scope: !828, file: !56, line: 1480, baseType: !7, size: 32, offset: 7168)
!3595 = !DIDerivedType(tag: DW_TAG_member, name: "s_mode", scope: !828, file: !56, line: 1481, baseType: !3596, size: 32, offset: 7200)
!3596 = !DIDerivedType(tag: DW_TAG_typedef, name: "fmode_t", file: !205, line: 150, baseType: !7)
!3597 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_mutex", scope: !828, file: !56, line: 1487, baseType: !213, size: 192, offset: 7232)
!3598 = !DIDerivedType(tag: DW_TAG_member, name: "s_subtype", scope: !828, file: !56, line: 1493, baseType: !335, size: 64, offset: 7424)
!3599 = !DIDerivedType(tag: DW_TAG_member, name: "s_d_op", scope: !828, file: !56, line: 1495, baseType: !3600, size: 64, offset: 7488)
!3600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3601, size: 64)
!3601 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3602)
!3602 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry_operations", file: !615, line: 135, size: 1024, align: 512, elements: !3603)
!3603 = !{!3604, !3608, !3609, !3616, !3622, !3626, !3630, !3634, !3635, !3639, !3643, !3648, !3652}
!3604 = !DIDerivedType(tag: DW_TAG_member, name: "d_revalidate", scope: !3602, file: !615, line: 136, baseType: !3605, size: 64)
!3605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3606, size: 64)
!3606 = !DISubroutineType(types: !3607)
!3607 = !{!170, !617, !7}
!3608 = !DIDerivedType(tag: DW_TAG_member, name: "d_weak_revalidate", scope: !3602, file: !615, line: 137, baseType: !3605, size: 64, offset: 64)
!3609 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !3602, file: !615, line: 138, baseType: !3610, size: 64, offset: 128)
!3610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3611, size: 64)
!3611 = !DISubroutineType(types: !3612)
!3612 = !{!170, !3613, !3615}
!3613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3614, size: 64)
!3614 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !618)
!3615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !641, size: 64)
!3616 = !DIDerivedType(tag: DW_TAG_member, name: "d_compare", scope: !3602, file: !615, line: 139, baseType: !3617, size: 64, offset: 192)
!3617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3618, size: 64)
!3618 = !DISubroutineType(types: !3619)
!3619 = !{!170, !3613, !7, !335, !3620}
!3620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3621, size: 64)
!3621 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !641)
!3622 = !DIDerivedType(tag: DW_TAG_member, name: "d_delete", scope: !3602, file: !615, line: 141, baseType: !3623, size: 64, offset: 256)
!3623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3624, size: 64)
!3624 = !DISubroutineType(types: !3625)
!3625 = !{!170, !3613}
!3626 = !DIDerivedType(tag: DW_TAG_member, name: "d_init", scope: !3602, file: !615, line: 142, baseType: !3627, size: 64, offset: 320)
!3627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3628, size: 64)
!3628 = !DISubroutineType(types: !3629)
!3629 = !{!170, !617}
!3630 = !DIDerivedType(tag: DW_TAG_member, name: "d_release", scope: !3602, file: !615, line: 143, baseType: !3631, size: 64, offset: 384)
!3631 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3632, size: 64)
!3632 = !DISubroutineType(types: !3633)
!3633 = !{null, !617}
!3634 = !DIDerivedType(tag: DW_TAG_member, name: "d_prune", scope: !3602, file: !615, line: 144, baseType: !3631, size: 64, offset: 448)
!3635 = !DIDerivedType(tag: DW_TAG_member, name: "d_iput", scope: !3602, file: !615, line: 145, baseType: !3636, size: 64, offset: 512)
!3636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3637, size: 64)
!3637 = !DISubroutineType(types: !3638)
!3638 = !{null, !617, !659}
!3639 = !DIDerivedType(tag: DW_TAG_member, name: "d_dname", scope: !3602, file: !615, line: 146, baseType: !3640, size: 64, offset: 576)
!3640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3641, size: 64)
!3641 = !DISubroutineType(types: !3642)
!3642 = !{!512, !617, !512, !170}
!3643 = !DIDerivedType(tag: DW_TAG_member, name: "d_automount", scope: !3602, file: !615, line: 147, baseType: !3644, size: 64, offset: 640)
!3644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3645, size: 64)
!3645 = !DISubroutineType(types: !3646)
!3646 = !{!613, !3647}
!3647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !609, size: 64)
!3648 = !DIDerivedType(tag: DW_TAG_member, name: "d_manage", scope: !3602, file: !615, line: 148, baseType: !3649, size: 64, offset: 704)
!3649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3650, size: 64)
!3650 = !DISubroutineType(types: !3651)
!3651 = !{!170, !777, !720}
!3652 = !DIDerivedType(tag: DW_TAG_member, name: "d_real", scope: !3602, file: !615, line: 149, baseType: !3653, size: 64, offset: 768)
!3653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3654, size: 64)
!3654 = !DISubroutineType(types: !3655)
!3655 = !{!617, !617, !3656}
!3656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3657, size: 64)
!3657 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !660)
!3658 = !DIDerivedType(tag: DW_TAG_member, name: "cleancache_poolid", scope: !828, file: !56, line: 1500, baseType: !170, size: 32, offset: 7552)
!3659 = !DIDerivedType(tag: DW_TAG_member, name: "s_shrink", scope: !828, file: !56, line: 1502, baseType: !3660, size: 448, offset: 7616)
!3660 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrinker", file: !3304, line: 60, size: 448, elements: !3661)
!3661 = !{!3662, !3667, !3668, !3669, !3670, !3671, !3672}
!3662 = !DIDerivedType(tag: DW_TAG_member, name: "count_objects", scope: !3660, file: !3304, line: 61, baseType: !3663, size: 64)
!3663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3664, size: 64)
!3664 = !DISubroutineType(types: !3665)
!3665 = !{!299, !3666, !3302}
!3666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3660, size: 64)
!3667 = !DIDerivedType(tag: DW_TAG_member, name: "scan_objects", scope: !3660, file: !3304, line: 63, baseType: !3663, size: 64, offset: 64)
!3668 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !3660, file: !3304, line: 66, baseType: !138, size: 64, offset: 128)
!3669 = !DIDerivedType(tag: DW_TAG_member, name: "seeks", scope: !3660, file: !3304, line: 67, baseType: !170, size: 32, offset: 192)
!3670 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3660, file: !3304, line: 68, baseType: !7, size: 32, offset: 224)
!3671 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3660, file: !3304, line: 71, baseType: !243, size: 128, offset: 256)
!3672 = !DIDerivedType(tag: DW_TAG_member, name: "nr_deferred", scope: !3660, file: !3304, line: 77, baseType: !3673, size: 64, offset: 384)
!3673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !217, size: 64)
!3674 = !DIDerivedType(tag: DW_TAG_member, name: "s_remove_count", scope: !828, file: !56, line: 1505, baseType: !217, size: 64, offset: 8064)
!3675 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_inode_refs", scope: !828, file: !56, line: 1508, baseType: !217, size: 64, offset: 8128)
!3676 = !DIDerivedType(tag: DW_TAG_member, name: "s_readonly_remount", scope: !828, file: !56, line: 1511, baseType: !170, size: 32, offset: 8192)
!3677 = !DIDerivedType(tag: DW_TAG_member, name: "s_wb_err", scope: !828, file: !56, line: 1514, baseType: !1163, size: 32, offset: 8224)
!3678 = !DIDerivedType(tag: DW_TAG_member, name: "s_dio_done_wq", scope: !828, file: !56, line: 1517, baseType: !3679, size: 64, offset: 8256)
!3679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3680, size: 64)
!3680 = !DICompositeType(tag: DW_TAG_structure_type, name: "workqueue_struct", file: !137, line: 18, flags: DIFlagFwdDecl)
!3681 = !DIDerivedType(tag: DW_TAG_member, name: "s_pins", scope: !828, file: !56, line: 1518, baseType: !866, size: 64, offset: 8320)
!3682 = !DIDerivedType(tag: DW_TAG_member, name: "s_user_ns", scope: !828, file: !56, line: 1525, baseType: !1762, size: 64, offset: 8384)
!3683 = !DIDerivedType(tag: DW_TAG_member, name: "s_dentry_lru", scope: !828, file: !56, line: 1532, baseType: !3684, size: 64, offset: 8448)
!3684 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru", file: !3685, line: 52, size: 64, elements: !3686)
!3685 = !DIFile(filename: "./include/linux/list_lru.h", directory: "/home/lizy2001/genbc/linux")
!3686 = !{!3687}
!3687 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3684, file: !3685, line: 53, baseType: !3688, size: 64)
!3688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3689, size: 64)
!3689 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_node", file: !3685, line: 40, size: 256, elements: !3690)
!3690 = !{!3691, !3692, !3697}
!3691 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3689, file: !3685, line: 42, baseType: !227)
!3692 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !3689, file: !3685, line: 44, baseType: !3693, size: 192)
!3693 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_one", file: !3685, line: 28, size: 192, elements: !3694)
!3694 = !{!3695, !3696}
!3695 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3693, file: !3685, line: 29, baseType: !243, size: 128)
!3696 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !3693, file: !3685, line: 31, baseType: !138, size: 64, offset: 128)
!3697 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !3689, file: !3685, line: 49, baseType: !138, size: 64, offset: 192)
!3698 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_lru", scope: !828, file: !56, line: 1533, baseType: !3684, size: 64, offset: 8512)
!3699 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !828, file: !56, line: 1534, baseType: !600, size: 128, align: 64, offset: 8576)
!3700 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_work", scope: !828, file: !56, line: 1535, baseType: !383, size: 256, offset: 8704)
!3701 = !DIDerivedType(tag: DW_TAG_member, name: "s_sync_lock", scope: !828, file: !56, line: 1537, baseType: !213, size: 192, offset: 8960)
!3702 = !DIDerivedType(tag: DW_TAG_member, name: "s_stack_depth", scope: !828, file: !56, line: 1542, baseType: !170, size: 32, offset: 9152)
!3703 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_list_lock", scope: !828, file: !56, line: 1545, baseType: !227, offset: 9184)
!3704 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes", scope: !828, file: !56, line: 1546, baseType: !243, size: 128, offset: 9216)
!3705 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_wblist_lock", scope: !828, file: !56, line: 1548, baseType: !227, offset: 9344)
!3706 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes_wb", scope: !828, file: !56, line: 1549, baseType: !243, size: 128, offset: 9344)
!3707 = !DIDerivedType(tag: DW_TAG_member, name: "i_mapping", scope: !660, file: !56, line: 624, baseType: !1000, size: 64, offset: 256)
!3708 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino", scope: !660, file: !56, line: 631, baseType: !299, size: 64, offset: 320)
!3709 = !DIDerivedType(tag: DW_TAG_member, scope: !660, file: !56, line: 639, baseType: !3710, size: 32, offset: 384)
!3710 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !660, file: !56, line: 639, size: 32, elements: !3711)
!3711 = !{!3712, !3714}
!3712 = !DIDerivedType(tag: DW_TAG_member, name: "i_nlink", scope: !3710, file: !56, line: 640, baseType: !3713, size: 32)
!3713 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!3714 = !DIDerivedType(tag: DW_TAG_member, name: "__i_nlink", scope: !3710, file: !56, line: 641, baseType: !7, size: 32)
!3715 = !DIDerivedType(tag: DW_TAG_member, name: "i_rdev", scope: !660, file: !56, line: 643, baseType: !743, size: 32, offset: 416)
!3716 = !DIDerivedType(tag: DW_TAG_member, name: "i_size", scope: !660, file: !56, line: 644, baseType: !761, size: 64, offset: 448)
!3717 = !DIDerivedType(tag: DW_TAG_member, name: "i_atime", scope: !660, file: !56, line: 645, baseType: !764, size: 128, offset: 512)
!3718 = !DIDerivedType(tag: DW_TAG_member, name: "i_mtime", scope: !660, file: !56, line: 646, baseType: !764, size: 128, offset: 640)
!3719 = !DIDerivedType(tag: DW_TAG_member, name: "i_ctime", scope: !660, file: !56, line: 647, baseType: !764, size: 128, offset: 768)
!3720 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock", scope: !660, file: !56, line: 648, baseType: !227, offset: 896)
!3721 = !DIDerivedType(tag: DW_TAG_member, name: "i_bytes", scope: !660, file: !56, line: 649, baseType: !198, size: 16, offset: 896)
!3722 = !DIDerivedType(tag: DW_TAG_member, name: "i_blkbits", scope: !660, file: !56, line: 650, baseType: !398, size: 8, offset: 912)
!3723 = !DIDerivedType(tag: DW_TAG_member, name: "i_write_hint", scope: !660, file: !56, line: 651, baseType: !398, size: 8, offset: 920)
!3724 = !DIDerivedType(tag: DW_TAG_member, name: "i_blocks", scope: !660, file: !56, line: 652, baseType: !3476, size: 64, offset: 960)
!3725 = !DIDerivedType(tag: DW_TAG_member, name: "i_state", scope: !660, file: !56, line: 659, baseType: !299, size: 64, offset: 1024)
!3726 = !DIDerivedType(tag: DW_TAG_member, name: "i_rwsem", scope: !660, file: !56, line: 660, baseType: !1030, size: 256, offset: 1088)
!3727 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_when", scope: !660, file: !56, line: 662, baseType: !299, size: 64, offset: 1344)
!3728 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_time_when", scope: !660, file: !56, line: 663, baseType: !299, size: 64, offset: 1408)
!3729 = !DIDerivedType(tag: DW_TAG_member, name: "i_hash", scope: !660, file: !56, line: 665, baseType: !870, size: 128, offset: 1472)
!3730 = !DIDerivedType(tag: DW_TAG_member, name: "i_io_list", scope: !660, file: !56, line: 666, baseType: !243, size: 128, offset: 1600)
!3731 = !DIDerivedType(tag: DW_TAG_member, name: "i_lru", scope: !660, file: !56, line: 675, baseType: !243, size: 128, offset: 1728)
!3732 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb_list", scope: !660, file: !56, line: 676, baseType: !243, size: 128, offset: 1856)
!3733 = !DIDerivedType(tag: DW_TAG_member, name: "i_wb_list", scope: !660, file: !56, line: 677, baseType: !243, size: 128, offset: 1984)
!3734 = !DIDerivedType(tag: DW_TAG_member, scope: !660, file: !56, line: 678, baseType: !3735, size: 128, offset: 2112)
!3735 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !660, file: !56, line: 678, size: 128, elements: !3736)
!3736 = !{!3737, !3738}
!3737 = !DIDerivedType(tag: DW_TAG_member, name: "i_dentry", scope: !3735, file: !56, line: 679, baseType: !866, size: 64)
!3738 = !DIDerivedType(tag: DW_TAG_member, name: "i_rcu", scope: !3735, file: !56, line: 680, baseType: !600, size: 128, align: 64)
!3739 = !DIDerivedType(tag: DW_TAG_member, name: "i_version", scope: !660, file: !56, line: 682, baseType: !219, size: 64, offset: 2240)
!3740 = !DIDerivedType(tag: DW_TAG_member, name: "i_sequence", scope: !660, file: !56, line: 683, baseType: !219, size: 64, offset: 2304)
!3741 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !660, file: !56, line: 684, baseType: !204, size: 32, offset: 2368)
!3742 = !DIDerivedType(tag: DW_TAG_member, name: "i_dio_count", scope: !660, file: !56, line: 685, baseType: !204, size: 32, offset: 2400)
!3743 = !DIDerivedType(tag: DW_TAG_member, name: "i_writecount", scope: !660, file: !56, line: 686, baseType: !204, size: 32, offset: 2432)
!3744 = !DIDerivedType(tag: DW_TAG_member, name: "i_readcount", scope: !660, file: !56, line: 688, baseType: !204, size: 32, offset: 2464)
!3745 = !DIDerivedType(tag: DW_TAG_member, scope: !660, file: !56, line: 690, baseType: !3746, size: 64, offset: 2496)
!3746 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !660, file: !56, line: 690, size: 64, elements: !3747)
!3747 = !{!3748, !3749}
!3748 = !DIDerivedType(tag: DW_TAG_member, name: "i_fop", scope: !3746, file: !56, line: 691, baseType: !2129, size: 64)
!3749 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !3746, file: !56, line: 692, baseType: !895, size: 64)
!3750 = !DIDerivedType(tag: DW_TAG_member, name: "i_flctx", scope: !660, file: !56, line: 694, baseType: !3751, size: 64, offset: 2560)
!3751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3752, size: 64)
!3752 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_context", file: !56, line: 1100, size: 384, elements: !3753)
!3753 = !{!3754, !3755, !3756, !3757}
!3754 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lock", scope: !3752, file: !56, line: 1101, baseType: !227)
!3755 = !DIDerivedType(tag: DW_TAG_member, name: "flc_flock", scope: !3752, file: !56, line: 1102, baseType: !243, size: 128)
!3756 = !DIDerivedType(tag: DW_TAG_member, name: "flc_posix", scope: !3752, file: !56, line: 1103, baseType: !243, size: 128, offset: 128)
!3757 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lease", scope: !3752, file: !56, line: 1104, baseType: !243, size: 128, offset: 256)
!3758 = !DIDerivedType(tag: DW_TAG_member, name: "i_data", scope: !660, file: !56, line: 695, baseType: !1001, size: 1216, align: 64, offset: 2624)
!3759 = !DIDerivedType(tag: DW_TAG_member, name: "i_devices", scope: !660, file: !56, line: 696, baseType: !243, size: 128, offset: 3840)
!3760 = !DIDerivedType(tag: DW_TAG_member, scope: !660, file: !56, line: 697, baseType: !3761, size: 64, offset: 3968)
!3761 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !660, file: !56, line: 697, size: 64, elements: !3762)
!3762 = !{!3763, !3764, !3765, !3766, !3767}
!3763 = !DIDerivedType(tag: DW_TAG_member, name: "i_pipe", scope: !3761, file: !56, line: 698, baseType: !2324, size: 64)
!3764 = !DIDerivedType(tag: DW_TAG_member, name: "i_bdev", scope: !3761, file: !56, line: 699, baseType: !3501, size: 64)
!3765 = !DIDerivedType(tag: DW_TAG_member, name: "i_cdev", scope: !3761, file: !56, line: 700, baseType: !2122, size: 64)
!3766 = !DIDerivedType(tag: DW_TAG_member, name: "i_link", scope: !3761, file: !56, line: 701, baseType: !512, size: 64)
!3767 = !DIDerivedType(tag: DW_TAG_member, name: "i_dir_seq", scope: !3761, file: !56, line: 702, baseType: !7, size: 32)
!3768 = !DIDerivedType(tag: DW_TAG_member, name: "i_generation", scope: !660, file: !56, line: 705, baseType: !253, size: 32, offset: 4032)
!3769 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_mask", scope: !660, file: !56, line: 708, baseType: !253, size: 32, offset: 4064)
!3770 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_marks", scope: !660, file: !56, line: 709, baseType: !3583, size: 64, offset: 4096)
!3771 = !DIDerivedType(tag: DW_TAG_member, name: "i_private", scope: !660, file: !56, line: 720, baseType: !192, size: 64, offset: 4160)
!3772 = !DIDerivedType(tag: DW_TAG_member, name: "d_iname", scope: !618, file: !615, line: 98, baseType: !3773, size: 256, offset: 448)
!3773 = !DICompositeType(tag: DW_TAG_array_type, baseType: !354, size: 256, elements: !3119)
!3774 = !DIDerivedType(tag: DW_TAG_member, name: "d_lockref", scope: !618, file: !615, line: 101, baseType: !3775, size: 32, offset: 704)
!3775 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lockref", file: !3776, line: 25, size: 32, elements: !3777)
!3776 = !DIFile(filename: "./include/linux/lockref.h", directory: "/home/lizy2001/genbc/linux")
!3777 = !{!3778}
!3778 = !DIDerivedType(tag: DW_TAG_member, scope: !3775, file: !3776, line: 26, baseType: !3779, size: 32)
!3779 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3775, file: !3776, line: 26, size: 32, elements: !3780)
!3780 = !{!3781}
!3781 = !DIDerivedType(tag: DW_TAG_member, scope: !3779, file: !3776, line: 30, baseType: !3782, size: 32)
!3782 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3779, file: !3776, line: 30, size: 32, elements: !3783)
!3783 = !{!3784, !3785}
!3784 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3782, file: !3776, line: 31, baseType: !227)
!3785 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3782, file: !3776, line: 32, baseType: !170, size: 32)
!3786 = !DIDerivedType(tag: DW_TAG_member, name: "d_op", scope: !618, file: !615, line: 102, baseType: !3600, size: 64, offset: 768)
!3787 = !DIDerivedType(tag: DW_TAG_member, name: "d_sb", scope: !618, file: !615, line: 103, baseType: !827, size: 64, offset: 832)
!3788 = !DIDerivedType(tag: DW_TAG_member, name: "d_time", scope: !618, file: !615, line: 104, baseType: !299, size: 64, offset: 896)
!3789 = !DIDerivedType(tag: DW_TAG_member, name: "d_fsdata", scope: !618, file: !615, line: 105, baseType: !192, size: 64, offset: 960)
!3790 = !DIDerivedType(tag: DW_TAG_member, scope: !618, file: !615, line: 107, baseType: !3791, size: 128, offset: 1024)
!3791 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !618, file: !615, line: 107, size: 128, elements: !3792)
!3792 = !{!3793, !3794}
!3793 = !DIDerivedType(tag: DW_TAG_member, name: "d_lru", scope: !3791, file: !615, line: 108, baseType: !243, size: 128)
!3794 = !DIDerivedType(tag: DW_TAG_member, name: "d_wait", scope: !3791, file: !615, line: 109, baseType: !3795, size: 64)
!3795 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1726, size: 64)
!3796 = !DIDerivedType(tag: DW_TAG_member, name: "d_child", scope: !618, file: !615, line: 111, baseType: !243, size: 128, offset: 1152)
!3797 = !DIDerivedType(tag: DW_TAG_member, name: "d_subdirs", scope: !618, file: !615, line: 112, baseType: !243, size: 128, offset: 1280)
!3798 = !DIDerivedType(tag: DW_TAG_member, name: "d_u", scope: !618, file: !615, line: 120, baseType: !3799, size: 128, offset: 1408)
!3799 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !618, file: !615, line: 116, size: 128, elements: !3800)
!3800 = !{!3801, !3802, !3803}
!3801 = !DIDerivedType(tag: DW_TAG_member, name: "d_alias", scope: !3799, file: !615, line: 117, baseType: !870, size: 128)
!3802 = !DIDerivedType(tag: DW_TAG_member, name: "d_in_lookup_hash", scope: !3799, file: !615, line: 118, baseType: !632, size: 128)
!3803 = !DIDerivedType(tag: DW_TAG_member, name: "d_rcu", scope: !3799, file: !615, line: 119, baseType: !600, size: 128, align: 64)
!3804 = !DIDerivedType(tag: DW_TAG_member, name: "f_inode", scope: !588, file: !56, line: 922, baseType: !659, size: 64, offset: 256)
!3805 = !DIDerivedType(tag: DW_TAG_member, name: "f_op", scope: !588, file: !56, line: 923, baseType: !2129, size: 64, offset: 320)
!3806 = !DIDerivedType(tag: DW_TAG_member, name: "f_lock", scope: !588, file: !56, line: 929, baseType: !227, offset: 384)
!3807 = !DIDerivedType(tag: DW_TAG_member, name: "f_write_hint", scope: !588, file: !56, line: 930, baseType: !55, size: 32, offset: 384)
!3808 = !DIDerivedType(tag: DW_TAG_member, name: "f_count", scope: !588, file: !56, line: 931, baseType: !217, size: 64, offset: 448)
!3809 = !DIDerivedType(tag: DW_TAG_member, name: "f_flags", scope: !588, file: !56, line: 932, baseType: !7, size: 32, offset: 512)
!3810 = !DIDerivedType(tag: DW_TAG_member, name: "f_mode", scope: !588, file: !56, line: 933, baseType: !3596, size: 32, offset: 544)
!3811 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos_lock", scope: !588, file: !56, line: 934, baseType: !213, size: 192, offset: 576)
!3812 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos", scope: !588, file: !56, line: 935, baseType: !761, size: 64, offset: 768)
!3813 = !DIDerivedType(tag: DW_TAG_member, name: "f_owner", scope: !588, file: !56, line: 936, baseType: !3814, size: 192, offset: 832)
!3814 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fown_struct", file: !56, line: 885, size: 192, elements: !3815)
!3815 = !{!3816, !3817, !3818, !3819, !3820, !3821}
!3816 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3814, file: !56, line: 886, baseType: !2228)
!3817 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !3814, file: !56, line: 887, baseType: !1716, size: 64)
!3818 = !DIDerivedType(tag: DW_TAG_member, name: "pid_type", scope: !3814, file: !56, line: 888, baseType: !64, size: 32, offset: 64)
!3819 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !3814, file: !56, line: 889, baseType: !665, size: 32, offset: 96)
!3820 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !3814, file: !56, line: 889, baseType: !665, size: 32, offset: 128)
!3821 = !DIDerivedType(tag: DW_TAG_member, name: "signum", scope: !3814, file: !56, line: 890, baseType: !170, size: 32, offset: 160)
!3822 = !DIDerivedType(tag: DW_TAG_member, name: "f_cred", scope: !588, file: !56, line: 937, baseType: !1829, size: 64, offset: 1024)
!3823 = !DIDerivedType(tag: DW_TAG_member, name: "f_ra", scope: !588, file: !56, line: 938, baseType: !3824, size: 256, offset: 1088)
!3824 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_ra_state", file: !56, line: 896, size: 256, elements: !3825)
!3825 = !{!3826, !3827, !3828, !3829, !3830, !3831}
!3826 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3824, file: !56, line: 897, baseType: !299, size: 64)
!3827 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3824, file: !56, line: 898, baseType: !7, size: 32, offset: 64)
!3828 = !DIDerivedType(tag: DW_TAG_member, name: "async_size", scope: !3824, file: !56, line: 899, baseType: !7, size: 32, offset: 96)
!3829 = !DIDerivedType(tag: DW_TAG_member, name: "ra_pages", scope: !3824, file: !56, line: 902, baseType: !7, size: 32, offset: 128)
!3830 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_miss", scope: !3824, file: !56, line: 903, baseType: !7, size: 32, offset: 160)
!3831 = !DIDerivedType(tag: DW_TAG_member, name: "prev_pos", scope: !3824, file: !56, line: 904, baseType: !761, size: 64, offset: 192)
!3832 = !DIDerivedType(tag: DW_TAG_member, name: "f_version", scope: !588, file: !56, line: 940, baseType: !652, size: 64, offset: 1344)
!3833 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !588, file: !56, line: 945, baseType: !192, size: 64, offset: 1408)
!3834 = !DIDerivedType(tag: DW_TAG_member, name: "f_ep_links", scope: !588, file: !56, line: 949, baseType: !243, size: 128, offset: 1472)
!3835 = !DIDerivedType(tag: DW_TAG_member, name: "f_tfile_llink", scope: !588, file: !56, line: 950, baseType: !243, size: 128, offset: 1600)
!3836 = !DIDerivedType(tag: DW_TAG_member, name: "f_mapping", scope: !588, file: !56, line: 952, baseType: !1000, size: 64, offset: 1728)
!3837 = !DIDerivedType(tag: DW_TAG_member, name: "f_wb_err", scope: !588, file: !56, line: 953, baseType: !1163, size: 32, offset: 1792)
!3838 = !DIDerivedType(tag: DW_TAG_member, name: "f_sb_err", scope: !588, file: !56, line: 954, baseType: !1163, size: 32, offset: 1824)
!3839 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !578, file: !537, line: 174, baseType: !584, size: 64, offset: 320)
!3840 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !578, file: !537, line: 176, baseType: !3841, size: 64, offset: 384)
!3841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3842, size: 64)
!3842 = !DISubroutineType(types: !3843)
!3843 = !{!170, !587, !479, !577, !1236}
!3844 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", scope: !566, file: !537, line: 90, baseType: !561, size: 64, offset: 192)
!3845 = !DIDerivedType(tag: DW_TAG_member, name: "bin_attrs", scope: !566, file: !537, line: 91, baseType: !3846, size: 64, offset: 256)
!3846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !577, size: 64)
!3847 = !DIDerivedType(tag: DW_TAG_member, name: "child_ns_type", scope: !527, file: !474, line: 143, baseType: !3848, size: 64, offset: 256)
!3848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3849, size: 64)
!3849 = !DISubroutineType(types: !3850)
!3850 = !{!3851, !479}
!3851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3852, size: 64)
!3852 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3853)
!3853 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_ns_type_operations", file: !73, line: 39, size: 384, elements: !3854)
!3854 = !{!3855, !3856, !3860, !3864, !3870, !3874}
!3855 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3853, file: !73, line: 40, baseType: !72, size: 32)
!3856 = !DIDerivedType(tag: DW_TAG_member, name: "current_may_mount", scope: !3853, file: !73, line: 41, baseType: !3857, size: 64, offset: 64)
!3857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3858, size: 64)
!3858 = !DISubroutineType(types: !3859)
!3859 = !{!720}
!3860 = !DIDerivedType(tag: DW_TAG_member, name: "grab_current_ns", scope: !3853, file: !73, line: 42, baseType: !3861, size: 64, offset: 128)
!3861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3862, size: 64)
!3862 = !DISubroutineType(types: !3863)
!3863 = !{!192}
!3864 = !DIDerivedType(tag: DW_TAG_member, name: "netlink_ns", scope: !3853, file: !73, line: 43, baseType: !3865, size: 64, offset: 192)
!3865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3866, size: 64)
!3866 = !DISubroutineType(types: !3867)
!3867 = !{!3016, !3868}
!3868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3869, size: 64)
!3869 = !DICompositeType(tag: DW_TAG_structure_type, name: "sock", file: !73, line: 19, flags: DIFlagFwdDecl)
!3870 = !DIDerivedType(tag: DW_TAG_member, name: "initial_ns", scope: !3853, file: !73, line: 44, baseType: !3871, size: 64, offset: 256)
!3871 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3872, size: 64)
!3872 = !DISubroutineType(types: !3873)
!3873 = !{!3016}
!3874 = !DIDerivedType(tag: DW_TAG_member, name: "drop_ns", scope: !3853, file: !73, line: 45, baseType: !698, size: 64, offset: 320)
!3875 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !527, file: !474, line: 144, baseType: !3876, size: 64, offset: 320)
!3876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3877, size: 64)
!3877 = !DISubroutineType(types: !3878)
!3878 = !{!3016, !479}
!3879 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !527, file: !474, line: 145, baseType: !3880, size: 64, offset: 384)
!3880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3881, size: 64)
!3881 = !DISubroutineType(types: !3882)
!3882 = !{null, !479, !3883, !3884}
!3883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !665, size: 64)
!3884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !673, size: 64)
!3885 = !DIDerivedType(tag: DW_TAG_member, name: "sd", scope: !473, file: !474, line: 70, baseType: !3886, size: 64, offset: 384)
!3886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3887, size: 64)
!3887 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_node", file: !847, line: 123, size: 1024, elements: !3888)
!3888 = !{!3889, !3890, !3891, !3892, !3893, !3894, !3895, !3896, !3999, !4000, !4001, !4002, !4003}
!3889 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3887, file: !847, line: 124, baseType: !204, size: 32)
!3890 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !3887, file: !847, line: 125, baseType: !204, size: 32, offset: 32)
!3891 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3887, file: !847, line: 135, baseType: !3886, size: 64, offset: 64)
!3892 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3887, file: !847, line: 136, baseType: !335, size: 64, offset: 128)
!3893 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !3887, file: !847, line: 138, baseType: !1023, size: 192, align: 64, offset: 192)
!3894 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !3887, file: !847, line: 140, baseType: !3016, size: 64, offset: 384)
!3895 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !3887, file: !847, line: 141, baseType: !7, size: 32, offset: 448)
!3896 = !DIDerivedType(tag: DW_TAG_member, scope: !3887, file: !847, line: 142, baseType: !3897, size: 256, offset: 512)
!3897 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3887, file: !847, line: 142, size: 256, elements: !3898)
!3898 = !{!3899, !3939, !3943}
!3899 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !3897, file: !847, line: 143, baseType: !3900, size: 192)
!3900 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_dir", file: !847, line: 91, size: 192, elements: !3901)
!3901 = !{!3902, !3903, !3904}
!3902 = !DIDerivedType(tag: DW_TAG_member, name: "subdirs", scope: !3900, file: !847, line: 92, baseType: !299, size: 64)
!3903 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3900, file: !847, line: 94, baseType: !1019, size: 64, offset: 64)
!3904 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !3900, file: !847, line: 100, baseType: !3905, size: 64, offset: 128)
!3905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3906, size: 64)
!3906 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_root", file: !847, line: 180, size: 704, elements: !3907)
!3907 = !{!3908, !3909, !3910, !3911, !3912, !3913, !3937, !3938}
!3908 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !3906, file: !847, line: 182, baseType: !3886, size: 64)
!3909 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3906, file: !847, line: 183, baseType: !7, size: 32, offset: 64)
!3910 = !DIDerivedType(tag: DW_TAG_member, name: "ino_idr", scope: !3906, file: !847, line: 186, baseType: !1749, size: 192, offset: 128)
!3911 = !DIDerivedType(tag: DW_TAG_member, name: "last_id_lowbits", scope: !3906, file: !847, line: 187, baseType: !338, size: 32, offset: 320)
!3912 = !DIDerivedType(tag: DW_TAG_member, name: "id_highbits", scope: !3906, file: !847, line: 188, baseType: !338, size: 32, offset: 352)
!3913 = !DIDerivedType(tag: DW_TAG_member, name: "syscall_ops", scope: !3906, file: !847, line: 189, baseType: !3914, size: 64, offset: 384)
!3914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3915, size: 64)
!3915 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_syscall_ops", file: !847, line: 168, size: 320, elements: !3916)
!3916 = !{!3917, !3921, !3925, !3929, !3933}
!3917 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !3915, file: !847, line: 169, baseType: !3918, size: 64)
!3918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3919, size: 64)
!3919 = !DISubroutineType(types: !3920)
!3920 = !{!170, !941, !3905}
!3921 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !3915, file: !847, line: 171, baseType: !3922, size: 64, offset: 64)
!3922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3923, size: 64)
!3923 = !DISubroutineType(types: !3924)
!3924 = !{!170, !3886, !335, !552}
!3925 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !3915, file: !847, line: 173, baseType: !3926, size: 64, offset: 128)
!3926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3927, size: 64)
!3927 = !DISubroutineType(types: !3928)
!3928 = !{!170, !3886}
!3929 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !3915, file: !847, line: 174, baseType: !3930, size: 64, offset: 192)
!3930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3931, size: 64)
!3931 = !DISubroutineType(types: !3932)
!3932 = !{!170, !3886, !3886, !335}
!3933 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !3915, file: !847, line: 176, baseType: !3934, size: 64, offset: 256)
!3934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3935, size: 64)
!3935 = !DISubroutineType(types: !3936)
!3936 = !{!170, !941, !3886, !3905}
!3937 = !DIDerivedType(tag: DW_TAG_member, name: "supers", scope: !3906, file: !847, line: 192, baseType: !243, size: 128, offset: 448)
!3938 = !DIDerivedType(tag: DW_TAG_member, name: "deactivate_waitq", scope: !3906, file: !847, line: 194, baseType: !1726, size: 128, offset: 576)
!3939 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !3897, file: !847, line: 144, baseType: !3940, size: 64)
!3940 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_symlink", file: !847, line: 103, size: 64, elements: !3941)
!3941 = !{!3942}
!3942 = !DIDerivedType(tag: DW_TAG_member, name: "target_kn", scope: !3940, file: !847, line: 104, baseType: !3886, size: 64)
!3943 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !3897, file: !847, line: 145, baseType: !3944, size: 256)
!3944 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_attr", file: !847, line: 107, size: 256, elements: !3945)
!3945 = !{!3946, !3994, !3997, !3998}
!3946 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3944, file: !847, line: 108, baseType: !3947, size: 64)
!3947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3948, size: 64)
!3948 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3949)
!3949 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_ops", file: !847, line: 217, size: 768, elements: !3950)
!3950 = !{!3951, !3971, !3975, !3976, !3977, !3978, !3979, !3983, !3984, !3985, !3986, !3990}
!3951 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !3949, file: !847, line: 222, baseType: !3952, size: 64)
!3952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3953, size: 64)
!3953 = !DISubroutineType(types: !3954)
!3954 = !{!170, !3955}
!3955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3956, size: 64)
!3956 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_file", file: !847, line: 197, size: 1088, elements: !3957)
!3957 = !{!3958, !3959, !3960, !3961, !3962, !3963, !3964, !3965, !3966, !3967, !3968, !3969, !3970}
!3958 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !3956, file: !847, line: 199, baseType: !3886, size: 64)
!3959 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !3956, file: !847, line: 200, baseType: !587, size: 64, offset: 64)
!3960 = !DIDerivedType(tag: DW_TAG_member, name: "seq_file", scope: !3956, file: !847, line: 201, baseType: !941, size: 64, offset: 128)
!3961 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !3956, file: !847, line: 202, baseType: !192, size: 64, offset: 192)
!3962 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !3956, file: !847, line: 205, baseType: !213, size: 192, offset: 256)
!3963 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_mutex", scope: !3956, file: !847, line: 206, baseType: !213, size: 192, offset: 448)
!3964 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !3956, file: !847, line: 207, baseType: !170, size: 32, offset: 640)
!3965 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3956, file: !847, line: 208, baseType: !243, size: 128, offset: 704)
!3966 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_buf", scope: !3956, file: !847, line: 209, baseType: !512, size: 64, offset: 832)
!3967 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !3956, file: !847, line: 211, baseType: !557, size: 64, offset: 896)
!3968 = !DIDerivedType(tag: DW_TAG_member, name: "mmapped", scope: !3956, file: !847, line: 212, baseType: !720, size: 1, offset: 960, flags: DIFlagBitField, extraData: i64 960)
!3969 = !DIDerivedType(tag: DW_TAG_member, name: "released", scope: !3956, file: !847, line: 213, baseType: !720, size: 1, offset: 961, flags: DIFlagBitField, extraData: i64 960)
!3970 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !3956, file: !847, line: 214, baseType: !1264, size: 64, offset: 1024)
!3971 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3949, file: !847, line: 223, baseType: !3972, size: 64, offset: 64)
!3972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3973, size: 64)
!3973 = !DISubroutineType(types: !3974)
!3974 = !{null, !3955}
!3975 = !DIDerivedType(tag: DW_TAG_member, name: "seq_show", scope: !3949, file: !847, line: 236, baseType: !972, size: 64, offset: 128)
!3976 = !DIDerivedType(tag: DW_TAG_member, name: "seq_start", scope: !3949, file: !847, line: 238, baseType: !959, size: 64, offset: 192)
!3977 = !DIDerivedType(tag: DW_TAG_member, name: "seq_next", scope: !3949, file: !847, line: 239, baseType: !968, size: 64, offset: 256)
!3978 = !DIDerivedType(tag: DW_TAG_member, name: "seq_stop", scope: !3949, file: !847, line: 240, baseType: !964, size: 64, offset: 320)
!3979 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !3949, file: !847, line: 242, baseType: !3980, size: 64, offset: 384)
!3980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3981, size: 64)
!3981 = !DISubroutineType(types: !3982)
!3982 = !{!543, !3955, !512, !557, !761}
!3983 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !3949, file: !847, line: 252, baseType: !557, size: 64, offset: 448)
!3984 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc", scope: !3949, file: !847, line: 259, baseType: !720, size: 8, offset: 512)
!3985 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !3949, file: !847, line: 260, baseType: !3980, size: 64, offset: 576)
!3986 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !3949, file: !847, line: 263, baseType: !3987, size: 64, offset: 640)
!3987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3988, size: 64)
!3988 = !DISubroutineType(types: !3989)
!3989 = !{!2170, !3955, !2172}
!3990 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !3949, file: !847, line: 266, baseType: !3991, size: 64, offset: 704)
!3991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3992, size: 64)
!3992 = !DISubroutineType(types: !3993)
!3993 = !{!170, !3955, !1236}
!3994 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !3944, file: !847, line: 109, baseType: !3995, size: 64, offset: 64)
!3995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3996, size: 64)
!3996 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_node", file: !847, line: 31, flags: DIFlagFwdDecl)
!3997 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3944, file: !847, line: 110, baseType: !761, size: 64, offset: 128)
!3998 = !DIDerivedType(tag: DW_TAG_member, name: "notify_next", scope: !3944, file: !847, line: 111, baseType: !3886, size: 64, offset: 192)
!3999 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !3887, file: !847, line: 148, baseType: !192, size: 64, offset: 768)
!4000 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3887, file: !847, line: 154, baseType: !652, size: 64, offset: 832)
!4001 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3887, file: !847, line: 156, baseType: !198, size: 16, offset: 896)
!4002 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3887, file: !847, line: 157, baseType: !552, size: 16, offset: 912)
!4003 = !DIDerivedType(tag: DW_TAG_member, name: "iattr", scope: !3887, file: !847, line: 158, baseType: !4004, size: 64, offset: 960)
!4004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4005, size: 64)
!4005 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_iattrs", file: !847, line: 32, flags: DIFlagFwdDecl)
!4006 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !473, file: !474, line: 71, baseType: !1744, size: 32, offset: 448)
!4007 = !DIDerivedType(tag: DW_TAG_member, name: "state_initialized", scope: !473, file: !474, line: 75, baseType: !7, size: 1, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!4008 = !DIDerivedType(tag: DW_TAG_member, name: "state_in_sysfs", scope: !473, file: !474, line: 76, baseType: !7, size: 1, offset: 481, flags: DIFlagBitField, extraData: i64 480)
!4009 = !DIDerivedType(tag: DW_TAG_member, name: "state_add_uevent_sent", scope: !473, file: !474, line: 77, baseType: !7, size: 1, offset: 482, flags: DIFlagBitField, extraData: i64 480)
!4010 = !DIDerivedType(tag: DW_TAG_member, name: "state_remove_uevent_sent", scope: !473, file: !474, line: 78, baseType: !7, size: 1, offset: 483, flags: DIFlagBitField, extraData: i64 480)
!4011 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_suppress", scope: !473, file: !474, line: 79, baseType: !7, size: 1, offset: 484, flags: DIFlagBitField, extraData: i64 480)
!4012 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !470, file: !85, line: 463, baseType: !2112, size: 64, offset: 512)
!4013 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !470, file: !85, line: 465, baseType: !4014, size: 64, offset: 576)
!4014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4015, size: 64)
!4015 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_private", file: !85, line: 36, flags: DIFlagFwdDecl)
!4016 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !470, file: !85, line: 467, baseType: !335, size: 64, offset: 640)
!4017 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !470, file: !85, line: 468, baseType: !4018, size: 64, offset: 704)
!4018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4019, size: 64)
!4019 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4020)
!4020 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_type", file: !85, line: 87, size: 384, elements: !4021)
!4021 = !{!4022, !4023, !4024, !4028, !4033, !4037}
!4022 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4020, file: !85, line: 88, baseType: !335, size: 64)
!4023 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !4020, file: !85, line: 89, baseType: !563, size: 64, offset: 64)
!4024 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !4020, file: !85, line: 90, baseType: !4025, size: 64, offset: 128)
!4025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4026, size: 64)
!4026 = !DISubroutineType(types: !4027)
!4027 = !{!170, !2112, !507}
!4028 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !4020, file: !85, line: 91, baseType: !4029, size: 64, offset: 192)
!4029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4030, size: 64)
!4030 = !DISubroutineType(types: !4031)
!4031 = !{!512, !2112, !4032, !3883, !3884}
!4032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !552, size: 64)
!4033 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !4020, file: !85, line: 93, baseType: !4034, size: 64, offset: 256)
!4034 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4035, size: 64)
!4035 = !DISubroutineType(types: !4036)
!4036 = !{null, !2112}
!4037 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !4020, file: !85, line: 95, baseType: !4038, size: 64, offset: 320)
!4038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4039, size: 64)
!4039 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4040)
!4040 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_ops", file: !92, line: 278, size: 1472, elements: !4041)
!4041 = !{!4042, !4046, !4047, !4048, !4049, !4050, !4051, !4052, !4053, !4054, !4055, !4056, !4057, !4058, !4059, !4060, !4061, !4062, !4063, !4064, !4065, !4066, !4067}
!4042 = !DIDerivedType(tag: DW_TAG_member, name: "prepare", scope: !4040, file: !92, line: 279, baseType: !4043, size: 64)
!4043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4044, size: 64)
!4044 = !DISubroutineType(types: !4045)
!4045 = !{!170, !2112}
!4046 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !4040, file: !92, line: 280, baseType: !4034, size: 64, offset: 64)
!4047 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !4040, file: !92, line: 281, baseType: !4043, size: 64, offset: 128)
!4048 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !4040, file: !92, line: 282, baseType: !4043, size: 64, offset: 192)
!4049 = !DIDerivedType(tag: DW_TAG_member, name: "freeze", scope: !4040, file: !92, line: 283, baseType: !4043, size: 64, offset: 256)
!4050 = !DIDerivedType(tag: DW_TAG_member, name: "thaw", scope: !4040, file: !92, line: 284, baseType: !4043, size: 64, offset: 320)
!4051 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff", scope: !4040, file: !92, line: 285, baseType: !4043, size: 64, offset: 384)
!4052 = !DIDerivedType(tag: DW_TAG_member, name: "restore", scope: !4040, file: !92, line: 286, baseType: !4043, size: 64, offset: 448)
!4053 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_late", scope: !4040, file: !92, line: 287, baseType: !4043, size: 64, offset: 512)
!4054 = !DIDerivedType(tag: DW_TAG_member, name: "resume_early", scope: !4040, file: !92, line: 288, baseType: !4043, size: 64, offset: 576)
!4055 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_late", scope: !4040, file: !92, line: 289, baseType: !4043, size: 64, offset: 640)
!4056 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_early", scope: !4040, file: !92, line: 290, baseType: !4043, size: 64, offset: 704)
!4057 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_late", scope: !4040, file: !92, line: 291, baseType: !4043, size: 64, offset: 768)
!4058 = !DIDerivedType(tag: DW_TAG_member, name: "restore_early", scope: !4040, file: !92, line: 292, baseType: !4043, size: 64, offset: 832)
!4059 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_noirq", scope: !4040, file: !92, line: 293, baseType: !4043, size: 64, offset: 896)
!4060 = !DIDerivedType(tag: DW_TAG_member, name: "resume_noirq", scope: !4040, file: !92, line: 294, baseType: !4043, size: 64, offset: 960)
!4061 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_noirq", scope: !4040, file: !92, line: 295, baseType: !4043, size: 64, offset: 1024)
!4062 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_noirq", scope: !4040, file: !92, line: 296, baseType: !4043, size: 64, offset: 1088)
!4063 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_noirq", scope: !4040, file: !92, line: 297, baseType: !4043, size: 64, offset: 1152)
!4064 = !DIDerivedType(tag: DW_TAG_member, name: "restore_noirq", scope: !4040, file: !92, line: 298, baseType: !4043, size: 64, offset: 1216)
!4065 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_suspend", scope: !4040, file: !92, line: 299, baseType: !4043, size: 64, offset: 1280)
!4066 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_resume", scope: !4040, file: !92, line: 300, baseType: !4043, size: 64, offset: 1344)
!4067 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_idle", scope: !4040, file: !92, line: 301, baseType: !4043, size: 64, offset: 1408)
!4068 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !470, file: !85, line: 470, baseType: !4069, size: 64, offset: 768)
!4069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4070, size: 64)
!4070 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bus_type", file: !4071, line: 82, size: 1408, elements: !4072)
!4071 = !DIFile(filename: "./include/linux/device/bus.h", directory: "/home/lizy2001/genbc/linux")
!4072 = !{!4073, !4074, !4075, !4076, !4077, !4078, !4079, !4138, !4139, !4140, !4141, !4142, !4143, !4144, !4145, !4146, !4147, !4148, !4149, !4150, !4154, !4157, !4158}
!4073 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4070, file: !4071, line: 83, baseType: !335, size: 64)
!4074 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name", scope: !4070, file: !4071, line: 84, baseType: !335, size: 64, offset: 64)
!4075 = !DIDerivedType(tag: DW_TAG_member, name: "dev_root", scope: !4070, file: !4071, line: 85, baseType: !2112, size: 64, offset: 128)
!4076 = !DIDerivedType(tag: DW_TAG_member, name: "bus_groups", scope: !4070, file: !4071, line: 86, baseType: !563, size: 64, offset: 192)
!4077 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !4070, file: !4071, line: 87, baseType: !563, size: 64, offset: 256)
!4078 = !DIDerivedType(tag: DW_TAG_member, name: "drv_groups", scope: !4070, file: !4071, line: 88, baseType: !563, size: 64, offset: 320)
!4079 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !4070, file: !4071, line: 90, baseType: !4080, size: 64, offset: 384)
!4080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4081, size: 64)
!4081 = !DISubroutineType(types: !4082)
!4082 = !{!170, !2112, !4083}
!4083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4084, size: 64)
!4084 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_driver", file: !79, line: 95, size: 1152, elements: !4085)
!4085 = !{!4086, !4087, !4088, !4089, !4090, !4091, !4092, !4105, !4118, !4119, !4120, !4121, !4122, !4130, !4131, !4132, !4133, !4134, !4135}
!4086 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4084, file: !79, line: 96, baseType: !335, size: 64)
!4087 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !4084, file: !79, line: 97, baseType: !4069, size: 64, offset: 64)
!4088 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4084, file: !79, line: 99, baseType: !861, size: 64, offset: 128)
!4089 = !DIDerivedType(tag: DW_TAG_member, name: "mod_name", scope: !4084, file: !79, line: 100, baseType: !335, size: 64, offset: 192)
!4090 = !DIDerivedType(tag: DW_TAG_member, name: "suppress_bind_attrs", scope: !4084, file: !79, line: 102, baseType: !720, size: 8, offset: 256)
!4091 = !DIDerivedType(tag: DW_TAG_member, name: "probe_type", scope: !4084, file: !79, line: 103, baseType: !78, size: 32, offset: 288)
!4092 = !DIDerivedType(tag: DW_TAG_member, name: "of_match_table", scope: !4084, file: !79, line: 105, baseType: !4093, size: 64, offset: 320)
!4093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4094, size: 64)
!4094 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4095)
!4095 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "of_device_id", file: !4096, line: 262, size: 1600, elements: !4097)
!4096 = !DIFile(filename: "./include/linux/mod_devicetable.h", directory: "/home/lizy2001/genbc/linux")
!4097 = !{!4098, !4099, !4100, !4104}
!4098 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4095, file: !4096, line: 263, baseType: !3586, size: 256)
!4099 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4095, file: !4096, line: 264, baseType: !3586, size: 256, offset: 256)
!4100 = !DIDerivedType(tag: DW_TAG_member, name: "compatible", scope: !4095, file: !4096, line: 265, baseType: !4101, size: 1024, offset: 512)
!4101 = !DICompositeType(tag: DW_TAG_array_type, baseType: !295, size: 1024, elements: !4102)
!4102 = !{!4103}
!4103 = !DISubrange(count: 128)
!4104 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4095, file: !4096, line: 266, baseType: !3016, size: 64, offset: 1536)
!4105 = !DIDerivedType(tag: DW_TAG_member, name: "acpi_match_table", scope: !4084, file: !79, line: 106, baseType: !4106, size: 64, offset: 384)
!4106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4107, size: 64)
!4107 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4108)
!4108 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_id", file: !4096, line: 210, size: 256, elements: !4109)
!4109 = !{!4110, !4114, !4116, !4117}
!4110 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4108, file: !4096, line: 211, baseType: !4111, size: 72)
!4111 = !DICompositeType(tag: DW_TAG_array_type, baseType: !353, size: 72, elements: !4112)
!4112 = !{!4113}
!4113 = !DISubrange(count: 9)
!4114 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !4108, file: !4096, line: 212, baseType: !4115, size: 64, offset: 128)
!4115 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_ulong_t", file: !4096, line: 14, baseType: !299)
!4116 = !DIDerivedType(tag: DW_TAG_member, name: "cls", scope: !4108, file: !4096, line: 213, baseType: !253, size: 32, offset: 192)
!4117 = !DIDerivedType(tag: DW_TAG_member, name: "cls_msk", scope: !4108, file: !4096, line: 214, baseType: !253, size: 32, offset: 224)
!4118 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !4084, file: !79, line: 108, baseType: !4043, size: 64, offset: 448)
!4119 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !4084, file: !79, line: 109, baseType: !4034, size: 64, offset: 512)
!4120 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !4084, file: !79, line: 110, baseType: !4043, size: 64, offset: 576)
!4121 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !4084, file: !79, line: 111, baseType: !4034, size: 64, offset: 640)
!4122 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !4084, file: !79, line: 112, baseType: !4123, size: 64, offset: 704)
!4123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4124, size: 64)
!4124 = !DISubroutineType(types: !4125)
!4125 = !{!170, !2112, !4126}
!4126 = !DIDerivedType(tag: DW_TAG_typedef, name: "pm_message_t", file: !92, line: 52, baseType: !4127)
!4127 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_message", file: !92, line: 50, size: 32, elements: !4128)
!4128 = !{!4129}
!4129 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !4127, file: !92, line: 51, baseType: !170, size: 32)
!4130 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !4084, file: !79, line: 113, baseType: !4043, size: 64, offset: 768)
!4131 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !4084, file: !79, line: 114, baseType: !563, size: 64, offset: 832)
!4132 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !4084, file: !79, line: 115, baseType: !563, size: 64, offset: 896)
!4133 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !4084, file: !79, line: 117, baseType: !4038, size: 64, offset: 960)
!4134 = !DIDerivedType(tag: DW_TAG_member, name: "coredump", scope: !4084, file: !79, line: 118, baseType: !4034, size: 64, offset: 1024)
!4135 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !4084, file: !79, line: 120, baseType: !4136, size: 64, offset: 1088)
!4136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4137, size: 64)
!4137 = !DICompositeType(tag: DW_TAG_structure_type, name: "driver_private", file: !79, line: 120, flags: DIFlagFwdDecl)
!4138 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !4070, file: !4071, line: 91, baseType: !4025, size: 64, offset: 448)
!4139 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !4070, file: !4071, line: 92, baseType: !4043, size: 64, offset: 512)
!4140 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !4070, file: !4071, line: 93, baseType: !4034, size: 64, offset: 576)
!4141 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !4070, file: !4071, line: 94, baseType: !4043, size: 64, offset: 640)
!4142 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !4070, file: !4071, line: 95, baseType: !4034, size: 64, offset: 704)
!4143 = !DIDerivedType(tag: DW_TAG_member, name: "online", scope: !4070, file: !4071, line: 97, baseType: !4043, size: 64, offset: 768)
!4144 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !4070, file: !4071, line: 98, baseType: !4043, size: 64, offset: 832)
!4145 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !4070, file: !4071, line: 100, baseType: !4123, size: 64, offset: 896)
!4146 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !4070, file: !4071, line: 101, baseType: !4043, size: 64, offset: 960)
!4147 = !DIDerivedType(tag: DW_TAG_member, name: "num_vf", scope: !4070, file: !4071, line: 103, baseType: !4043, size: 64, offset: 1024)
!4148 = !DIDerivedType(tag: DW_TAG_member, name: "dma_configure", scope: !4070, file: !4071, line: 105, baseType: !4043, size: 64, offset: 1088)
!4149 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !4070, file: !4071, line: 107, baseType: !4038, size: 64, offset: 1152)
!4150 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_ops", scope: !4070, file: !4071, line: 109, baseType: !4151, size: 64, offset: 1216)
!4151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4152, size: 64)
!4152 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4153)
!4153 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_ops", file: !4071, line: 109, flags: DIFlagFwdDecl)
!4154 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !4070, file: !4071, line: 111, baseType: !4155, size: 64, offset: 1280)
!4155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4156, size: 64)
!4156 = !DICompositeType(tag: DW_TAG_structure_type, name: "subsys_private", file: !4071, line: 111, flags: DIFlagFwdDecl)
!4157 = !DIDerivedType(tag: DW_TAG_member, name: "lock_key", scope: !4070, file: !4071, line: 112, baseType: !876, offset: 1344)
!4158 = !DIDerivedType(tag: DW_TAG_member, name: "need_parent_lock", scope: !4070, file: !4071, line: 114, baseType: !720, size: 8, offset: 1344)
!4159 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !470, file: !85, line: 471, baseType: !4083, size: 64, offset: 832)
!4160 = !DIDerivedType(tag: DW_TAG_member, name: "platform_data", scope: !470, file: !85, line: 473, baseType: !192, size: 64, offset: 896)
!4161 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !470, file: !85, line: 475, baseType: !192, size: 64, offset: 960)
!4162 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !470, file: !85, line: 480, baseType: !213, size: 192, offset: 1024)
!4163 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !470, file: !85, line: 484, baseType: !4164, size: 576, offset: 1216)
!4164 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_links_info", file: !85, line: 361, size: 576, elements: !4165)
!4165 = !{!4166, !4167, !4168, !4169, !4170, !4171}
!4166 = !DIDerivedType(tag: DW_TAG_member, name: "suppliers", scope: !4164, file: !85, line: 362, baseType: !243, size: 128)
!4167 = !DIDerivedType(tag: DW_TAG_member, name: "consumers", scope: !4164, file: !85, line: 363, baseType: !243, size: 128, offset: 128)
!4168 = !DIDerivedType(tag: DW_TAG_member, name: "needs_suppliers", scope: !4164, file: !85, line: 364, baseType: !243, size: 128, offset: 256)
!4169 = !DIDerivedType(tag: DW_TAG_member, name: "defer_hook", scope: !4164, file: !85, line: 365, baseType: !243, size: 128, offset: 384)
!4170 = !DIDerivedType(tag: DW_TAG_member, name: "need_for_probe", scope: !4164, file: !85, line: 366, baseType: !720, size: 8, offset: 512)
!4171 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !4164, file: !85, line: 367, baseType: !84, size: 32, offset: 544)
!4172 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !470, file: !85, line: 485, baseType: !4173, size: 2304, offset: 1792)
!4173 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_info", file: !92, line: 565, size: 2304, elements: !4174)
!4174 = !{!4175, !4176, !4177, !4178, !4179, !4180, !4181, !4182, !4183, !4184, !4185, !4186, !4187, !4188, !4189, !4190, !4228, !4229, !4230, !4231, !4232, !4233, !4234, !4235, !4236, !4237, !4238, !4239, !4240, !4241, !4242, !4243, !4244, !4245, !4246, !4247, !4248, !4249, !4250, !4251, !4252, !4253, !4254, !4255, !4256, !4257, !4258, !4259, !4260, !4270, !4274}
!4175 = !DIDerivedType(tag: DW_TAG_member, name: "power_state", scope: !4173, file: !92, line: 566, baseType: !4126, size: 32)
!4176 = !DIDerivedType(tag: DW_TAG_member, name: "can_wakeup", scope: !4173, file: !92, line: 567, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!4177 = !DIDerivedType(tag: DW_TAG_member, name: "async_suspend", scope: !4173, file: !92, line: 568, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 32)
!4178 = !DIDerivedType(tag: DW_TAG_member, name: "in_dpm_list", scope: !4173, file: !92, line: 569, baseType: !720, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 32)
!4179 = !DIDerivedType(tag: DW_TAG_member, name: "is_prepared", scope: !4173, file: !92, line: 570, baseType: !720, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 32)
!4180 = !DIDerivedType(tag: DW_TAG_member, name: "is_suspended", scope: !4173, file: !92, line: 571, baseType: !720, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 32)
!4181 = !DIDerivedType(tag: DW_TAG_member, name: "is_noirq_suspended", scope: !4173, file: !92, line: 572, baseType: !720, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 32)
!4182 = !DIDerivedType(tag: DW_TAG_member, name: "is_late_suspended", scope: !4173, file: !92, line: 573, baseType: !720, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 32)
!4183 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm", scope: !4173, file: !92, line: 574, baseType: !720, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 32)
!4184 = !DIDerivedType(tag: DW_TAG_member, name: "early_init", scope: !4173, file: !92, line: 575, baseType: !720, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!4185 = !DIDerivedType(tag: DW_TAG_member, name: "direct_complete", scope: !4173, file: !92, line: 576, baseType: !720, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 32)
!4186 = !DIDerivedType(tag: DW_TAG_member, name: "driver_flags", scope: !4173, file: !92, line: 577, baseType: !338, size: 32, offset: 64)
!4187 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4173, file: !92, line: 578, baseType: !227, offset: 96)
!4188 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !4173, file: !92, line: 580, baseType: !243, size: 128, offset: 128)
!4189 = !DIDerivedType(tag: DW_TAG_member, name: "completion", scope: !4173, file: !92, line: 581, baseType: !1784, size: 192, offset: 256)
!4190 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup", scope: !4173, file: !92, line: 582, baseType: !4191, size: 64, offset: 448)
!4191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4192, size: 64)
!4192 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wakeup_source", file: !4193, line: 43, size: 1472, elements: !4194)
!4193 = !DIFile(filename: "./include/linux/pm_wakeup.h", directory: "/home/lizy2001/genbc/linux")
!4194 = !{!4195, !4196, !4197, !4198, !4199, !4202, !4214, !4215, !4216, !4217, !4218, !4219, !4220, !4221, !4222, !4223, !4224, !4225, !4226, !4227}
!4195 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4192, file: !4193, line: 44, baseType: !335, size: 64)
!4196 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4192, file: !4193, line: 45, baseType: !170, size: 32, offset: 64)
!4197 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !4192, file: !4193, line: 46, baseType: !243, size: 128, offset: 128)
!4198 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4192, file: !4193, line: 47, baseType: !227, offset: 256)
!4199 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !4192, file: !4193, line: 48, baseType: !4200, size: 64, offset: 256)
!4200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4201, size: 64)
!4201 = !DICompositeType(tag: DW_TAG_structure_type, name: "wake_irq", file: !92, line: 533, flags: DIFlagFwdDecl)
!4202 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !4192, file: !4193, line: 49, baseType: !4203, size: 320, offset: 320)
!4203 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timer_list", file: !4204, line: 11, size: 320, elements: !4205)
!4204 = !DIFile(filename: "./include/linux/timer.h", directory: "/home/lizy2001/genbc/linux")
!4205 = !{!4206, !4207, !4208, !4213}
!4206 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !4203, file: !4204, line: 16, baseType: !870, size: 128)
!4207 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !4203, file: !4204, line: 17, baseType: !299, size: 64, offset: 128)
!4208 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !4203, file: !4204, line: 18, baseType: !4209, size: 64, offset: 192)
!4209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4210, size: 64)
!4210 = !DISubroutineType(types: !4211)
!4211 = !{null, !4212}
!4212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4203, size: 64)
!4213 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4203, file: !4204, line: 19, baseType: !338, size: 32, offset: 256)
!4214 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !4192, file: !4193, line: 50, baseType: !299, size: 64, offset: 640)
!4215 = !DIDerivedType(tag: DW_TAG_member, name: "total_time", scope: !4192, file: !4193, line: 51, baseType: !1547, size: 64, offset: 704)
!4216 = !DIDerivedType(tag: DW_TAG_member, name: "max_time", scope: !4192, file: !4193, line: 52, baseType: !1547, size: 64, offset: 768)
!4217 = !DIDerivedType(tag: DW_TAG_member, name: "last_time", scope: !4192, file: !4193, line: 53, baseType: !1547, size: 64, offset: 832)
!4218 = !DIDerivedType(tag: DW_TAG_member, name: "start_prevent_time", scope: !4192, file: !4193, line: 54, baseType: !1547, size: 64, offset: 896)
!4219 = !DIDerivedType(tag: DW_TAG_member, name: "prevent_sleep_time", scope: !4192, file: !4193, line: 55, baseType: !1547, size: 64, offset: 960)
!4220 = !DIDerivedType(tag: DW_TAG_member, name: "event_count", scope: !4192, file: !4193, line: 56, baseType: !299, size: 64, offset: 1024)
!4221 = !DIDerivedType(tag: DW_TAG_member, name: "active_count", scope: !4192, file: !4193, line: 57, baseType: !299, size: 64, offset: 1088)
!4222 = !DIDerivedType(tag: DW_TAG_member, name: "relax_count", scope: !4192, file: !4193, line: 58, baseType: !299, size: 64, offset: 1152)
!4223 = !DIDerivedType(tag: DW_TAG_member, name: "expire_count", scope: !4192, file: !4193, line: 59, baseType: !299, size: 64, offset: 1216)
!4224 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_count", scope: !4192, file: !4193, line: 60, baseType: !299, size: 64, offset: 1280)
!4225 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4192, file: !4193, line: 61, baseType: !2112, size: 64, offset: 1344)
!4226 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !4192, file: !4193, line: 62, baseType: !720, size: 1, offset: 1408, flags: DIFlagBitField, extraData: i64 1408)
!4227 = !DIDerivedType(tag: DW_TAG_member, name: "autosleep_enabled", scope: !4192, file: !4193, line: 63, baseType: !720, size: 1, offset: 1409, flags: DIFlagBitField, extraData: i64 1408)
!4228 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_path", scope: !4173, file: !92, line: 583, baseType: !720, size: 1, offset: 512, flags: DIFlagBitField, extraData: i64 512)
!4229 = !DIDerivedType(tag: DW_TAG_member, name: "syscore", scope: !4173, file: !92, line: 584, baseType: !720, size: 1, offset: 513, flags: DIFlagBitField, extraData: i64 512)
!4230 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm_callbacks", scope: !4173, file: !92, line: 585, baseType: !720, size: 1, offset: 514, flags: DIFlagBitField, extraData: i64 512)
!4231 = !DIDerivedType(tag: DW_TAG_member, name: "must_resume", scope: !4173, file: !92, line: 586, baseType: !7, size: 1, offset: 515, flags: DIFlagBitField, extraData: i64 512)
!4232 = !DIDerivedType(tag: DW_TAG_member, name: "may_skip_resume", scope: !4173, file: !92, line: 587, baseType: !7, size: 1, offset: 516, flags: DIFlagBitField, extraData: i64 512)
!4233 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_timer", scope: !4173, file: !92, line: 592, baseType: !1539, size: 512, offset: 576)
!4234 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !4173, file: !92, line: 593, baseType: !652, size: 64, offset: 1088)
!4235 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !4173, file: !92, line: 594, baseType: !383, size: 256, offset: 1152)
!4236 = !DIDerivedType(tag: DW_TAG_member, name: "wait_queue", scope: !4173, file: !92, line: 595, baseType: !1726, size: 128, offset: 1408)
!4237 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !4173, file: !92, line: 596, baseType: !4200, size: 64, offset: 1536)
!4238 = !DIDerivedType(tag: DW_TAG_member, name: "usage_count", scope: !4173, file: !92, line: 597, baseType: !204, size: 32, offset: 1600)
!4239 = !DIDerivedType(tag: DW_TAG_member, name: "child_count", scope: !4173, file: !92, line: 598, baseType: !204, size: 32, offset: 1632)
!4240 = !DIDerivedType(tag: DW_TAG_member, name: "disable_depth", scope: !4173, file: !92, line: 599, baseType: !7, size: 3, offset: 1664, flags: DIFlagBitField, extraData: i64 1664)
!4241 = !DIDerivedType(tag: DW_TAG_member, name: "idle_notification", scope: !4173, file: !92, line: 600, baseType: !7, size: 1, offset: 1667, flags: DIFlagBitField, extraData: i64 1664)
!4242 = !DIDerivedType(tag: DW_TAG_member, name: "request_pending", scope: !4173, file: !92, line: 601, baseType: !7, size: 1, offset: 1668, flags: DIFlagBitField, extraData: i64 1664)
!4243 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_resume", scope: !4173, file: !92, line: 602, baseType: !7, size: 1, offset: 1669, flags: DIFlagBitField, extraData: i64 1664)
!4244 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_auto", scope: !4173, file: !92, line: 603, baseType: !7, size: 1, offset: 1670, flags: DIFlagBitField, extraData: i64 1664)
!4245 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_children", scope: !4173, file: !92, line: 604, baseType: !720, size: 1, offset: 1671, flags: DIFlagBitField, extraData: i64 1664)
!4246 = !DIDerivedType(tag: DW_TAG_member, name: "no_callbacks", scope: !4173, file: !92, line: 605, baseType: !7, size: 1, offset: 1672, flags: DIFlagBitField, extraData: i64 1664)
!4247 = !DIDerivedType(tag: DW_TAG_member, name: "irq_safe", scope: !4173, file: !92, line: 606, baseType: !7, size: 1, offset: 1673, flags: DIFlagBitField, extraData: i64 1664)
!4248 = !DIDerivedType(tag: DW_TAG_member, name: "use_autosuspend", scope: !4173, file: !92, line: 607, baseType: !7, size: 1, offset: 1674, flags: DIFlagBitField, extraData: i64 1664)
!4249 = !DIDerivedType(tag: DW_TAG_member, name: "timer_autosuspends", scope: !4173, file: !92, line: 608, baseType: !7, size: 1, offset: 1675, flags: DIFlagBitField, extraData: i64 1664)
!4250 = !DIDerivedType(tag: DW_TAG_member, name: "memalloc_noio", scope: !4173, file: !92, line: 609, baseType: !7, size: 1, offset: 1676, flags: DIFlagBitField, extraData: i64 1664)
!4251 = !DIDerivedType(tag: DW_TAG_member, name: "links_count", scope: !4173, file: !92, line: 610, baseType: !7, size: 32, offset: 1696)
!4252 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !4173, file: !92, line: 611, baseType: !91, size: 32, offset: 1728)
!4253 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_status", scope: !4173, file: !92, line: 612, baseType: !99, size: 32, offset: 1760)
!4254 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_error", scope: !4173, file: !92, line: 613, baseType: !170, size: 32, offset: 1792)
!4255 = !DIDerivedType(tag: DW_TAG_member, name: "autosuspend_delay", scope: !4173, file: !92, line: 614, baseType: !170, size: 32, offset: 1824)
!4256 = !DIDerivedType(tag: DW_TAG_member, name: "last_busy", scope: !4173, file: !92, line: 615, baseType: !652, size: 64, offset: 1856)
!4257 = !DIDerivedType(tag: DW_TAG_member, name: "active_time", scope: !4173, file: !92, line: 616, baseType: !652, size: 64, offset: 1920)
!4258 = !DIDerivedType(tag: DW_TAG_member, name: "suspended_time", scope: !4173, file: !92, line: 617, baseType: !652, size: 64, offset: 1984)
!4259 = !DIDerivedType(tag: DW_TAG_member, name: "accounting_timestamp", scope: !4173, file: !92, line: 618, baseType: !652, size: 64, offset: 2048)
!4260 = !DIDerivedType(tag: DW_TAG_member, name: "subsys_data", scope: !4173, file: !92, line: 620, baseType: !4261, size: 64, offset: 2112)
!4261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4262, size: 64)
!4262 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_subsys_data", file: !92, line: 536, size: 256, elements: !4263)
!4263 = !{!4264, !4265, !4266, !4267}
!4264 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4262, file: !92, line: 537, baseType: !227)
!4265 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !4262, file: !92, line: 538, baseType: !7, size: 32)
!4266 = !DIDerivedType(tag: DW_TAG_member, name: "clock_list", scope: !4262, file: !92, line: 540, baseType: !243, size: 128, offset: 64)
!4267 = !DIDerivedType(tag: DW_TAG_member, name: "domain_data", scope: !4262, file: !92, line: 543, baseType: !4268, size: 64, offset: 192)
!4268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4269, size: 64)
!4269 = !DICompositeType(tag: DW_TAG_structure_type, name: "pm_domain_data", file: !92, line: 534, flags: DIFlagFwdDecl)
!4270 = !DIDerivedType(tag: DW_TAG_member, name: "set_latency_tolerance", scope: !4173, file: !92, line: 621, baseType: !4271, size: 64, offset: 2176)
!4271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4272, size: 64)
!4272 = !DISubroutineType(types: !4273)
!4273 = !{null, !2112, !1689}
!4274 = !DIDerivedType(tag: DW_TAG_member, name: "qos", scope: !4173, file: !92, line: 622, baseType: !4275, size: 64, offset: 2240)
!4275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4276, size: 64)
!4276 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_qos", file: !92, line: 622, flags: DIFlagFwdDecl)
!4277 = !DIDerivedType(tag: DW_TAG_member, name: "pm_domain", scope: !470, file: !85, line: 486, baseType: !4278, size: 64, offset: 4096)
!4278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4279, size: 64)
!4279 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_domain", file: !92, line: 642, size: 1792, elements: !4280)
!4280 = !{!4281, !4282, !4283, !4287, !4288, !4289}
!4281 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4279, file: !92, line: 643, baseType: !4040, size: 1472)
!4282 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4279, file: !92, line: 644, baseType: !4043, size: 64, offset: 1472)
!4283 = !DIDerivedType(tag: DW_TAG_member, name: "detach", scope: !4279, file: !92, line: 645, baseType: !4284, size: 64, offset: 1536)
!4284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4285, size: 64)
!4285 = !DISubroutineType(types: !4286)
!4286 = !{null, !2112, !720}
!4287 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !4279, file: !92, line: 646, baseType: !4043, size: 64, offset: 1600)
!4288 = !DIDerivedType(tag: DW_TAG_member, name: "sync", scope: !4279, file: !92, line: 647, baseType: !4034, size: 64, offset: 1664)
!4289 = !DIDerivedType(tag: DW_TAG_member, name: "dismiss", scope: !4279, file: !92, line: 648, baseType: !4034, size: 64, offset: 1728)
!4290 = !DIDerivedType(tag: DW_TAG_member, name: "msi_domain", scope: !470, file: !85, line: 493, baseType: !4291, size: 64, offset: 4160)
!4291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4292, size: 64)
!4292 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain", file: !106, line: 162, size: 1088, elements: !4293)
!4293 = !{!4294, !4295, !4296, !4469, !4470, !4471, !4472, !4473, !4474, !4477, !4478, !4479, !4480, !4481, !4482, !4483}
!4294 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !4292, file: !106, line: 163, baseType: !243, size: 128)
!4295 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4292, file: !106, line: 164, baseType: !335, size: 64, offset: 128)
!4296 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4292, file: !106, line: 165, baseType: !4297, size: 64, offset: 192)
!4297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4298, size: 64)
!4298 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4299)
!4299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain_ops", file: !106, line: 105, size: 640, elements: !4300)
!4300 = !{!4301, !4419, !4430, !4435, !4439, !4446, !4450, !4454, !4461, !4465}
!4301 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !4299, file: !106, line: 106, baseType: !4302, size: 64)
!4302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4303, size: 64)
!4303 = !DISubroutineType(types: !4304)
!4304 = !{!170, !4291, !4305, !105}
!4305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4306, size: 64)
!4306 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_node", file: !4307, line: 51, size: 1344, elements: !4308)
!4307 = !DIFile(filename: "./include/linux/of.h", directory: "/home/lizy2001/genbc/linux")
!4308 = !{!4309, !4310, !4312, !4313, !4403, !4412, !4413, !4414, !4415, !4416, !4417, !4418}
!4309 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4306, file: !4307, line: 52, baseType: !335, size: 64)
!4310 = !DIDerivedType(tag: DW_TAG_member, name: "phandle", scope: !4306, file: !4307, line: 53, baseType: !4311, size: 32, offset: 64)
!4311 = !DIDerivedType(tag: DW_TAG_typedef, name: "phandle", file: !4307, line: 28, baseType: !338)
!4312 = !DIDerivedType(tag: DW_TAG_member, name: "full_name", scope: !4306, file: !4307, line: 54, baseType: !335, size: 64, offset: 128)
!4313 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !4306, file: !4307, line: 55, baseType: !4314, size: 192, offset: 192)
!4314 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_handle", file: !4315, line: 17, size: 192, elements: !4316)
!4315 = !DIFile(filename: "./include/linux/fwnode.h", directory: "/home/lizy2001/genbc/linux")
!4316 = !{!4317, !4319, !4402}
!4317 = !DIDerivedType(tag: DW_TAG_member, name: "secondary", scope: !4314, file: !4315, line: 18, baseType: !4318, size: 64)
!4318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4314, size: 64)
!4319 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4314, file: !4315, line: 19, baseType: !4320, size: 64, offset: 64)
!4320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4321, size: 64)
!4321 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4322)
!4322 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_operations", file: !4315, line: 110, size: 1152, elements: !4323)
!4323 = !{!4324, !4328, !4332, !4338, !4344, !4348, !4352, !4357, !4361, !4362, !4366, !4370, !4374, !4385, !4386, !4387, !4388, !4398}
!4324 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !4322, file: !4315, line: 111, baseType: !4325, size: 64)
!4325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4326, size: 64)
!4326 = !DISubroutineType(types: !4327)
!4327 = !{!4318, !4318}
!4328 = !DIDerivedType(tag: DW_TAG_member, name: "put", scope: !4322, file: !4315, line: 112, baseType: !4329, size: 64, offset: 64)
!4329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4330, size: 64)
!4330 = !DISubroutineType(types: !4331)
!4331 = !{null, !4318}
!4332 = !DIDerivedType(tag: DW_TAG_member, name: "device_is_available", scope: !4322, file: !4315, line: 113, baseType: !4333, size: 64, offset: 128)
!4333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4334, size: 64)
!4334 = !DISubroutineType(types: !4335)
!4335 = !{!720, !4336}
!4336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4337, size: 64)
!4337 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4314)
!4338 = !DIDerivedType(tag: DW_TAG_member, name: "device_get_match_data", scope: !4322, file: !4315, line: 114, baseType: !4339, size: 64, offset: 192)
!4339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4340, size: 64)
!4340 = !DISubroutineType(types: !4341)
!4341 = !{!3016, !4336, !4342}
!4342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4343, size: 64)
!4343 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !470)
!4344 = !DIDerivedType(tag: DW_TAG_member, name: "property_present", scope: !4322, file: !4315, line: 116, baseType: !4345, size: 64, offset: 256)
!4345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4346, size: 64)
!4346 = !DISubroutineType(types: !4347)
!4347 = !{!720, !4336, !335}
!4348 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_int_array", scope: !4322, file: !4315, line: 118, baseType: !4349, size: 64, offset: 320)
!4349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4350, size: 64)
!4350 = !DISubroutineType(types: !4351)
!4351 = !{!170, !4336, !335, !7, !192, !557}
!4352 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_string_array", scope: !4322, file: !4315, line: 123, baseType: !4353, size: 64, offset: 384)
!4353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4354, size: 64)
!4354 = !DISubroutineType(types: !4355)
!4355 = !{!170, !4336, !335, !4356, !557}
!4356 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !335, size: 64)
!4357 = !DIDerivedType(tag: DW_TAG_member, name: "get_name", scope: !4322, file: !4315, line: 126, baseType: !4358, size: 64, offset: 448)
!4358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4359, size: 64)
!4359 = !DISubroutineType(types: !4360)
!4360 = !{!335, !4336}
!4361 = !DIDerivedType(tag: DW_TAG_member, name: "get_name_prefix", scope: !4322, file: !4315, line: 127, baseType: !4358, size: 64, offset: 512)
!4362 = !DIDerivedType(tag: DW_TAG_member, name: "get_parent", scope: !4322, file: !4315, line: 128, baseType: !4363, size: 64, offset: 576)
!4363 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4364, size: 64)
!4364 = !DISubroutineType(types: !4365)
!4365 = !{!4318, !4336}
!4366 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_child_node", scope: !4322, file: !4315, line: 130, baseType: !4367, size: 64, offset: 640)
!4367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4368, size: 64)
!4368 = !DISubroutineType(types: !4369)
!4369 = !{!4318, !4336, !4318}
!4370 = !DIDerivedType(tag: DW_TAG_member, name: "get_named_child_node", scope: !4322, file: !4315, line: 133, baseType: !4371, size: 64, offset: 704)
!4371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4372, size: 64)
!4372 = !DISubroutineType(types: !4373)
!4373 = !{!4318, !4336, !335}
!4374 = !DIDerivedType(tag: DW_TAG_member, name: "get_reference_args", scope: !4322, file: !4315, line: 135, baseType: !4375, size: 64, offset: 768)
!4375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4376, size: 64)
!4376 = !DISubroutineType(types: !4377)
!4377 = !{!170, !4336, !335, !335, !7, !7, !4378}
!4378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4379, size: 64)
!4379 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_reference_args", file: !4315, line: 43, size: 640, elements: !4380)
!4380 = !{!4381, !4382, !4383}
!4381 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !4379, file: !4315, line: 44, baseType: !4318, size: 64)
!4382 = !DIDerivedType(tag: DW_TAG_member, name: "nargs", scope: !4379, file: !4315, line: 45, baseType: !7, size: 32, offset: 64)
!4383 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !4379, file: !4315, line: 46, baseType: !4384, size: 512, offset: 128)
!4384 = !DICompositeType(tag: DW_TAG_array_type, baseType: !652, size: 512, elements: !1577)
!4385 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_next_endpoint", scope: !4322, file: !4315, line: 140, baseType: !4367, size: 64, offset: 832)
!4386 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_remote_endpoint", scope: !4322, file: !4315, line: 143, baseType: !4363, size: 64, offset: 896)
!4387 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_port_parent", scope: !4322, file: !4315, line: 145, baseType: !4325, size: 64, offset: 960)
!4388 = !DIDerivedType(tag: DW_TAG_member, name: "graph_parse_endpoint", scope: !4322, file: !4315, line: 146, baseType: !4389, size: 64, offset: 1024)
!4389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4390, size: 64)
!4390 = !DISubroutineType(types: !4391)
!4391 = !{!170, !4336, !4392}
!4392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4393, size: 64)
!4393 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_endpoint", file: !4315, line: 29, size: 128, elements: !4394)
!4394 = !{!4395, !4396, !4397}
!4395 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !4393, file: !4315, line: 30, baseType: !7, size: 32)
!4396 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4393, file: !4315, line: 31, baseType: !7, size: 32, offset: 32)
!4397 = !DIDerivedType(tag: DW_TAG_member, name: "local_fwnode", scope: !4393, file: !4315, line: 32, baseType: !4336, size: 64, offset: 64)
!4398 = !DIDerivedType(tag: DW_TAG_member, name: "add_links", scope: !4322, file: !4315, line: 148, baseType: !4399, size: 64, offset: 1088)
!4399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4400, size: 64)
!4400 = !DISubroutineType(types: !4401)
!4401 = !{!170, !4336, !2112}
!4402 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4314, file: !4315, line: 20, baseType: !2112, size: 64, offset: 128)
!4403 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !4306, file: !4307, line: 57, baseType: !4404, size: 64, offset: 384)
!4404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4405, size: 64)
!4405 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "property", file: !4307, line: 31, size: 704, elements: !4406)
!4406 = !{!4407, !4408, !4409, !4410, !4411}
!4407 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4405, file: !4307, line: 32, baseType: !512, size: 64)
!4408 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !4405, file: !4307, line: 33, baseType: !170, size: 32, offset: 64)
!4409 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !4405, file: !4307, line: 34, baseType: !192, size: 64, offset: 128)
!4410 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4405, file: !4307, line: 35, baseType: !4404, size: 64, offset: 192)
!4411 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !4405, file: !4307, line: 43, baseType: !578, size: 448, offset: 256)
!4412 = !DIDerivedType(tag: DW_TAG_member, name: "deadprops", scope: !4306, file: !4307, line: 58, baseType: !4404, size: 64, offset: 448)
!4413 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !4306, file: !4307, line: 59, baseType: !4305, size: 64, offset: 512)
!4414 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !4306, file: !4307, line: 60, baseType: !4305, size: 64, offset: 576)
!4415 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !4306, file: !4307, line: 61, baseType: !4305, size: 64, offset: 640)
!4416 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !4306, file: !4307, line: 63, baseType: !473, size: 512, offset: 704)
!4417 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !4306, file: !4307, line: 65, baseType: !299, size: 64, offset: 1216)
!4418 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4306, file: !4307, line: 66, baseType: !192, size: 64, offset: 1280)
!4419 = !DIDerivedType(tag: DW_TAG_member, name: "select", scope: !4299, file: !106, line: 108, baseType: !4420, size: 64, offset: 64)
!4420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4421, size: 64)
!4421 = !DISubroutineType(types: !4422)
!4422 = !{!170, !4291, !4423, !105}
!4423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4424, size: 64)
!4424 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_fwspec", file: !106, line: 63, size: 640, elements: !4425)
!4425 = !{!4426, !4427, !4428}
!4426 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !4424, file: !106, line: 64, baseType: !4318, size: 64)
!4427 = !DIDerivedType(tag: DW_TAG_member, name: "param_count", scope: !4424, file: !106, line: 65, baseType: !170, size: 32, offset: 64)
!4428 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !4424, file: !106, line: 66, baseType: !4429, size: 512, offset: 96)
!4429 = !DICompositeType(tag: DW_TAG_array_type, baseType: !338, size: 512, elements: !296)
!4430 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !4299, file: !106, line: 110, baseType: !4431, size: 64, offset: 128)
!4431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4432, size: 64)
!4432 = !DISubroutineType(types: !4433)
!4433 = !{!170, !4291, !7, !4434}
!4434 = !DIDerivedType(tag: DW_TAG_typedef, name: "irq_hw_number_t", file: !205, line: 164, baseType: !299)
!4435 = !DIDerivedType(tag: DW_TAG_member, name: "unmap", scope: !4299, file: !106, line: 111, baseType: !4436, size: 64, offset: 192)
!4436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4437, size: 64)
!4437 = !DISubroutineType(types: !4438)
!4438 = !{null, !4291, !7}
!4439 = !DIDerivedType(tag: DW_TAG_member, name: "xlate", scope: !4299, file: !106, line: 112, baseType: !4440, size: 64, offset: 256)
!4440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4441, size: 64)
!4441 = !DISubroutineType(types: !4442)
!4442 = !{!170, !4291, !4305, !4443, !7, !4445, !3569}
!4443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4444, size: 64)
!4444 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !338)
!4445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !299, size: 64)
!4446 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !4299, file: !106, line: 117, baseType: !4447, size: 64, offset: 320)
!4447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4448, size: 64)
!4448 = !DISubroutineType(types: !4449)
!4449 = !{!170, !4291, !7, !7, !192}
!4450 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !4299, file: !106, line: 119, baseType: !4451, size: 64, offset: 384)
!4451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4452, size: 64)
!4452 = !DISubroutineType(types: !4453)
!4453 = !{null, !4291, !7, !7}
!4454 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !4299, file: !106, line: 121, baseType: !4455, size: 64, offset: 448)
!4455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4456, size: 64)
!4456 = !DISubroutineType(types: !4457)
!4457 = !{!170, !4291, !4458, !720}
!4458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4459, size: 64)
!4459 = !DICompositeType(tag: DW_TAG_structure_type, name: "irq_data", file: !4460, line: 11, flags: DIFlagFwdDecl)
!4460 = !DIFile(filename: "./include/linux/irqhandler.h", directory: "/home/lizy2001/genbc/linux")
!4461 = !DIDerivedType(tag: DW_TAG_member, name: "deactivate", scope: !4299, file: !106, line: 122, baseType: !4462, size: 64, offset: 512)
!4462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4463, size: 64)
!4463 = !DISubroutineType(types: !4464)
!4464 = !{null, !4291, !4458}
!4465 = !DIDerivedType(tag: DW_TAG_member, name: "translate", scope: !4299, file: !106, line: 123, baseType: !4466, size: 64, offset: 576)
!4466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4467, size: 64)
!4467 = !DISubroutineType(types: !4468)
!4468 = !{!170, !4291, !4423, !4445, !3569}
!4469 = !DIDerivedType(tag: DW_TAG_member, name: "host_data", scope: !4292, file: !106, line: 166, baseType: !192, size: 64, offset: 256)
!4470 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4292, file: !106, line: 167, baseType: !7, size: 32, offset: 320)
!4471 = !DIDerivedType(tag: DW_TAG_member, name: "mapcount", scope: !4292, file: !106, line: 168, baseType: !7, size: 32, offset: 352)
!4472 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !4292, file: !106, line: 171, baseType: !4318, size: 64, offset: 384)
!4473 = !DIDerivedType(tag: DW_TAG_member, name: "bus_token", scope: !4292, file: !106, line: 172, baseType: !105, size: 32, offset: 448)
!4474 = !DIDerivedType(tag: DW_TAG_member, name: "gc", scope: !4292, file: !106, line: 173, baseType: !4475, size: 64, offset: 512)
!4475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4476, size: 64)
!4476 = !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain_chip_generic", file: !106, line: 134, flags: DIFlagFwdDecl)
!4477 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !4292, file: !106, line: 175, baseType: !4291, size: 64, offset: 576)
!4478 = !DIDerivedType(tag: DW_TAG_member, name: "hwirq_max", scope: !4292, file: !106, line: 182, baseType: !4434, size: 64, offset: 640)
!4479 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_direct_max_irq", scope: !4292, file: !106, line: 183, baseType: !7, size: 32, offset: 704)
!4480 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_size", scope: !4292, file: !106, line: 184, baseType: !7, size: 32, offset: 736)
!4481 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_tree", scope: !4292, file: !106, line: 185, baseType: !1005, size: 128, offset: 768)
!4482 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_tree_mutex", scope: !4292, file: !106, line: 186, baseType: !213, size: 192, offset: 896)
!4483 = !DIDerivedType(tag: DW_TAG_member, name: "linear_revmap", scope: !4292, file: !106, line: 187, baseType: !4484, offset: 1088)
!4484 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, elements: !2414)
!4485 = !DIDerivedType(tag: DW_TAG_member, name: "msi_list", scope: !470, file: !85, line: 499, baseType: !243, size: 128, offset: 4224)
!4486 = !DIDerivedType(tag: DW_TAG_member, name: "dma_ops", scope: !470, file: !85, line: 502, baseType: !4487, size: 64, offset: 4352)
!4487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4488, size: 64)
!4488 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4489)
!4489 = !DICompositeType(tag: DW_TAG_structure_type, name: "dma_map_ops", file: !85, line: 502, flags: DIFlagFwdDecl)
!4490 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !470, file: !85, line: 504, baseType: !4491, size: 64, offset: 4416)
!4491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !652, size: 64)
!4492 = !DIDerivedType(tag: DW_TAG_member, name: "coherent_dma_mask", scope: !470, file: !85, line: 505, baseType: !652, size: 64, offset: 4480)
!4493 = !DIDerivedType(tag: DW_TAG_member, name: "bus_dma_limit", scope: !470, file: !85, line: 510, baseType: !652, size: 64, offset: 4544)
!4494 = !DIDerivedType(tag: DW_TAG_member, name: "dma_range_map", scope: !470, file: !85, line: 511, baseType: !4495, size: 64, offset: 4608)
!4495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4496, size: 64)
!4496 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4497)
!4497 = !DICompositeType(tag: DW_TAG_structure_type, name: "bus_dma_region", file: !85, line: 511, flags: DIFlagFwdDecl)
!4498 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !470, file: !85, line: 513, baseType: !4499, size: 64, offset: 4672)
!4499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4500, size: 64)
!4500 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_dma_parameters", file: !85, line: 288, size: 128, elements: !4501)
!4501 = !{!4502, !4503}
!4502 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !4500, file: !85, line: 293, baseType: !7, size: 32)
!4503 = !DIDerivedType(tag: DW_TAG_member, name: "segment_boundary_mask", scope: !4500, file: !85, line: 294, baseType: !299, size: 64, offset: 64)
!4504 = !DIDerivedType(tag: DW_TAG_member, name: "dma_pools", scope: !470, file: !85, line: 515, baseType: !243, size: 128, offset: 4736)
!4505 = !DIDerivedType(tag: DW_TAG_member, name: "archdata", scope: !470, file: !85, line: 526, baseType: !4506, offset: 4864)
!4506 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_archdata", file: !4507, line: 5, elements: !241)
!4507 = !DIFile(filename: "./arch/x86/include/asm/device.h", directory: "/home/lizy2001/genbc/linux")
!4508 = !DIDerivedType(tag: DW_TAG_member, name: "of_node", scope: !470, file: !85, line: 528, baseType: !4305, size: 64, offset: 4864)
!4509 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !470, file: !85, line: 529, baseType: !4318, size: 64, offset: 4928)
!4510 = !DIDerivedType(tag: DW_TAG_member, name: "devt", scope: !470, file: !85, line: 534, baseType: !743, size: 32, offset: 4992)
!4511 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !470, file: !85, line: 535, baseType: !338, size: 32, offset: 5024)
!4512 = !DIDerivedType(tag: DW_TAG_member, name: "devres_lock", scope: !470, file: !85, line: 537, baseType: !227, offset: 5056)
!4513 = !DIDerivedType(tag: DW_TAG_member, name: "devres_head", scope: !470, file: !85, line: 538, baseType: !243, size: 128, offset: 5056)
!4514 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !470, file: !85, line: 540, baseType: !4515, size: 64, offset: 5184)
!4515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4516, size: 64)
!4516 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "class", file: !4517, line: 54, size: 960, elements: !4518)
!4517 = !DIFile(filename: "./include/linux/device/class.h", directory: "/home/lizy2001/genbc/linux")
!4518 = !{!4519, !4520, !4521, !4522, !4523, !4524, !4525, !4529, !4533, !4534, !4535, !4536, !4540, !4544, !4545}
!4519 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4516, file: !4517, line: 55, baseType: !335, size: 64)
!4520 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4516, file: !4517, line: 56, baseType: !861, size: 64, offset: 64)
!4521 = !DIDerivedType(tag: DW_TAG_member, name: "class_groups", scope: !4516, file: !4517, line: 58, baseType: !563, size: 64, offset: 128)
!4522 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !4516, file: !4517, line: 59, baseType: !563, size: 64, offset: 192)
!4523 = !DIDerivedType(tag: DW_TAG_member, name: "dev_kobj", scope: !4516, file: !4517, line: 60, baseType: !479, size: 64, offset: 256)
!4524 = !DIDerivedType(tag: DW_TAG_member, name: "dev_uevent", scope: !4516, file: !4517, line: 62, baseType: !4025, size: 64, offset: 320)
!4525 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !4516, file: !4517, line: 63, baseType: !4526, size: 64, offset: 384)
!4526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4527, size: 64)
!4527 = !DISubroutineType(types: !4528)
!4528 = !{!512, !2112, !4032}
!4529 = !DIDerivedType(tag: DW_TAG_member, name: "class_release", scope: !4516, file: !4517, line: 65, baseType: !4530, size: 64, offset: 448)
!4530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4531, size: 64)
!4531 = !DISubroutineType(types: !4532)
!4532 = !{null, !4515}
!4533 = !DIDerivedType(tag: DW_TAG_member, name: "dev_release", scope: !4516, file: !4517, line: 66, baseType: !4034, size: 64, offset: 512)
!4534 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown_pre", scope: !4516, file: !4517, line: 68, baseType: !4043, size: 64, offset: 576)
!4535 = !DIDerivedType(tag: DW_TAG_member, name: "ns_type", scope: !4516, file: !4517, line: 70, baseType: !3851, size: 64, offset: 640)
!4536 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !4516, file: !4517, line: 71, baseType: !4537, size: 64, offset: 704)
!4537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4538, size: 64)
!4538 = !DISubroutineType(types: !4539)
!4539 = !{!3016, !2112}
!4540 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !4516, file: !4517, line: 73, baseType: !4541, size: 64, offset: 768)
!4541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4542, size: 64)
!4542 = !DISubroutineType(types: !4543)
!4543 = !{null, !2112, !3883, !3884}
!4544 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !4516, file: !4517, line: 75, baseType: !4038, size: 64, offset: 832)
!4545 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !4516, file: !4517, line: 77, baseType: !4155, size: 64, offset: 896)
!4546 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !470, file: !85, line: 541, baseType: !563, size: 64, offset: 5248)
!4547 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !470, file: !85, line: 543, baseType: !4034, size: 64, offset: 5312)
!4548 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_group", scope: !470, file: !85, line: 544, baseType: !4549, size: 64, offset: 5376)
!4549 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4550, size: 64)
!4550 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_group", file: !85, line: 45, flags: DIFlagFwdDecl)
!4551 = !DIDerivedType(tag: DW_TAG_member, name: "iommu", scope: !470, file: !85, line: 545, baseType: !4552, size: 64, offset: 5440)
!4552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4553, size: 64)
!4553 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_iommu", file: !85, line: 47, flags: DIFlagFwdDecl)
!4554 = !DIDerivedType(tag: DW_TAG_member, name: "offline_disabled", scope: !470, file: !85, line: 547, baseType: !720, size: 1, offset: 5504, flags: DIFlagBitField, extraData: i64 5504)
!4555 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !470, file: !85, line: 548, baseType: !720, size: 1, offset: 5505, flags: DIFlagBitField, extraData: i64 5504)
!4556 = !DIDerivedType(tag: DW_TAG_member, name: "of_node_reused", scope: !470, file: !85, line: 549, baseType: !720, size: 1, offset: 5506, flags: DIFlagBitField, extraData: i64 5504)
!4557 = !DIDerivedType(tag: DW_TAG_member, name: "state_synced", scope: !470, file: !85, line: 550, baseType: !720, size: 1, offset: 5507, flags: DIFlagBitField, extraData: i64 5504)
!4558 = !DIDerivedType(tag: DW_TAG_member, name: "fb_bl_on", scope: !427, file: !6, line: 335, baseType: !4559, size: 256, offset: 6592)
!4559 = !DICompositeType(tag: DW_TAG_array_type, baseType: !720, size: 256, elements: !3119)
!4560 = !DIDerivedType(tag: DW_TAG_member, name: "use_count", scope: !427, file: !6, line: 340, baseType: !170, size: 32, offset: 6848)
!4561 = !DIDerivedType(tag: DW_TAG_member, name: "bl_curve_mutex", scope: !200, file: !201, line: 465, baseType: !213, size: 192, offset: 5312)
!4562 = !DIDerivedType(tag: DW_TAG_member, name: "bl_curve", scope: !200, file: !201, line: 466, baseType: !4563, size: 1024, offset: 5504)
!4563 = !DICompositeType(tag: DW_TAG_array_type, baseType: !398, size: 1024, elements: !4102)
!4564 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_work", scope: !200, file: !201, line: 469, baseType: !4565, size: 704, offset: 6528)
!4565 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_work", file: !137, line: 115, size: 704, elements: !4566)
!4566 = !{!4567, !4568, !4569, !4570}
!4567 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !4565, file: !137, line: 116, baseType: !383, size: 256)
!4568 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !4565, file: !137, line: 117, baseType: !4203, size: 320, offset: 256)
!4569 = !DIDerivedType(tag: DW_TAG_member, name: "wq", scope: !4565, file: !137, line: 120, baseType: !3679, size: 64, offset: 576)
!4570 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !4565, file: !137, line: 121, baseType: !170, size: 32, offset: 640)
!4571 = !DIDerivedType(tag: DW_TAG_member, name: "fbdefio", scope: !200, file: !201, line: 470, baseType: !4572, size: 64, offset: 7232)
!4572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4573, size: 64)
!4573 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fb_deferred_io", file: !201, line: 203, size: 512, elements: !4574)
!4574 = !{!4575, !4576, !4577, !4578, !4582}
!4575 = !DIDerivedType(tag: DW_TAG_member, name: "delay", scope: !4573, file: !201, line: 205, baseType: !299, size: 64)
!4576 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4573, file: !201, line: 206, baseType: !213, size: 192, offset: 64)
!4577 = !DIDerivedType(tag: DW_TAG_member, name: "pagelist", scope: !4573, file: !201, line: 207, baseType: !243, size: 128, offset: 256)
!4578 = !DIDerivedType(tag: DW_TAG_member, name: "first_io", scope: !4573, file: !201, line: 209, baseType: !4579, size: 64, offset: 384)
!4579 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4580, size: 64)
!4580 = !DISubroutineType(types: !4581)
!4581 = !{null, !199}
!4582 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_io", scope: !4573, file: !201, line: 210, baseType: !4583, size: 64, offset: 448)
!4583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4584, size: 64)
!4584 = !DISubroutineType(types: !4585)
!4585 = !{null, !199, !246}
!4586 = !DIDerivedType(tag: DW_TAG_member, name: "fbops", scope: !200, file: !201, line: 473, baseType: !4587, size: 64, offset: 7296)
!4587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4588, size: 64)
!4588 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4589)
!4589 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fb_ops", file: !201, line: 228, size: 1472, elements: !4590)
!4590 = !{!4591, !4592, !4596, !4597, !4601, !4605, !4610, !4614, !4618, !4623, !4627, !4628, !4642, !4656, !4673, !4690, !4691, !4695, !4696, !4700, !4711, !4712, !4713}
!4591 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4589, file: !201, line: 230, baseType: !861, size: 64)
!4592 = !DIDerivedType(tag: DW_TAG_member, name: "fb_open", scope: !4589, file: !201, line: 231, baseType: !4593, size: 64, offset: 64)
!4593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4594, size: 64)
!4594 = !DISubroutineType(types: !4595)
!4595 = !{!170, !199, !170}
!4596 = !DIDerivedType(tag: DW_TAG_member, name: "fb_release", scope: !4589, file: !201, line: 232, baseType: !4593, size: 64, offset: 128)
!4597 = !DIDerivedType(tag: DW_TAG_member, name: "fb_read", scope: !4589, file: !201, line: 237, baseType: !4598, size: 64, offset: 192)
!4598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4599, size: 64)
!4599 = !DISubroutineType(types: !4600)
!4600 = !{!543, !199, !512, !557, !962}
!4601 = !DIDerivedType(tag: DW_TAG_member, name: "fb_write", scope: !4589, file: !201, line: 239, baseType: !4602, size: 64, offset: 256)
!4602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4603, size: 64)
!4603 = !DISubroutineType(types: !4604)
!4604 = !{!543, !199, !335, !557, !962}
!4605 = !DIDerivedType(tag: DW_TAG_member, name: "fb_check_var", scope: !4589, file: !201, line: 244, baseType: !4606, size: 64, offset: 320)
!4606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4607, size: 64)
!4607 = !DISubroutineType(types: !4608)
!4608 = !{!170, !4609, !199}
!4609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !250, size: 64)
!4610 = !DIDerivedType(tag: DW_TAG_member, name: "fb_set_par", scope: !4589, file: !201, line: 247, baseType: !4611, size: 64, offset: 384)
!4611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4612, size: 64)
!4612 = !DISubroutineType(types: !4613)
!4613 = !{!170, !199}
!4614 = !DIDerivedType(tag: DW_TAG_member, name: "fb_setcolreg", scope: !4589, file: !201, line: 250, baseType: !4615, size: 64, offset: 448)
!4615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4616, size: 64)
!4616 = !DISubroutineType(types: !4617)
!4617 = !{!170, !7, !7, !7, !7, !7, !199}
!4618 = !DIDerivedType(tag: DW_TAG_member, name: "fb_setcmap", scope: !4589, file: !201, line: 254, baseType: !4619, size: 64, offset: 512)
!4619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4620, size: 64)
!4620 = !DISubroutineType(types: !4621)
!4621 = !{!170, !4622, !199}
!4622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !414, size: 64)
!4623 = !DIDerivedType(tag: DW_TAG_member, name: "fb_blank", scope: !4589, file: !201, line: 257, baseType: !4624, size: 64, offset: 576)
!4624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4625, size: 64)
!4625 = !DISubroutineType(types: !4626)
!4626 = !{!170, !170, !199}
!4627 = !DIDerivedType(tag: DW_TAG_member, name: "fb_pan_display", scope: !4589, file: !201, line: 260, baseType: !4606, size: 64, offset: 640)
!4628 = !DIDerivedType(tag: DW_TAG_member, name: "fb_fillrect", scope: !4589, file: !201, line: 263, baseType: !4629, size: 64, offset: 704)
!4629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4630, size: 64)
!4630 = !DISubroutineType(types: !4631)
!4631 = !{null, !199, !4632}
!4632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4633, size: 64)
!4633 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4634)
!4634 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fb_fillrect", file: !183, line: 351, size: 192, elements: !4635)
!4635 = !{!4636, !4637, !4638, !4639, !4640, !4641}
!4636 = !DIDerivedType(tag: DW_TAG_member, name: "dx", scope: !4634, file: !183, line: 352, baseType: !253, size: 32)
!4637 = !DIDerivedType(tag: DW_TAG_member, name: "dy", scope: !4634, file: !183, line: 353, baseType: !253, size: 32, offset: 32)
!4638 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !4634, file: !183, line: 354, baseType: !253, size: 32, offset: 64)
!4639 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !4634, file: !183, line: 355, baseType: !253, size: 32, offset: 96)
!4640 = !DIDerivedType(tag: DW_TAG_member, name: "color", scope: !4634, file: !183, line: 356, baseType: !253, size: 32, offset: 128)
!4641 = !DIDerivedType(tag: DW_TAG_member, name: "rop", scope: !4634, file: !183, line: 357, baseType: !253, size: 32, offset: 160)
!4642 = !DIDerivedType(tag: DW_TAG_member, name: "fb_copyarea", scope: !4589, file: !201, line: 265, baseType: !4643, size: 64, offset: 768)
!4643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4644, size: 64)
!4644 = !DISubroutineType(types: !4645)
!4645 = !{null, !199, !4646}
!4646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4647, size: 64)
!4647 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4648)
!4648 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fb_copyarea", file: !183, line: 342, size: 192, elements: !4649)
!4649 = !{!4650, !4651, !4652, !4653, !4654, !4655}
!4650 = !DIDerivedType(tag: DW_TAG_member, name: "dx", scope: !4648, file: !183, line: 343, baseType: !253, size: 32)
!4651 = !DIDerivedType(tag: DW_TAG_member, name: "dy", scope: !4648, file: !183, line: 344, baseType: !253, size: 32, offset: 32)
!4652 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !4648, file: !183, line: 345, baseType: !253, size: 32, offset: 64)
!4653 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !4648, file: !183, line: 346, baseType: !253, size: 32, offset: 96)
!4654 = !DIDerivedType(tag: DW_TAG_member, name: "sx", scope: !4648, file: !183, line: 347, baseType: !253, size: 32, offset: 128)
!4655 = !DIDerivedType(tag: DW_TAG_member, name: "sy", scope: !4648, file: !183, line: 348, baseType: !253, size: 32, offset: 160)
!4656 = !DIDerivedType(tag: DW_TAG_member, name: "fb_imageblit", scope: !4589, file: !201, line: 267, baseType: !4657, size: 64, offset: 832)
!4657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4658, size: 64)
!4658 = !DISubroutineType(types: !4659)
!4659 = !{null, !199, !4660}
!4660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4661, size: 64)
!4661 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4662)
!4662 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fb_image", file: !183, line: 360, size: 640, elements: !4663)
!4663 = !{!4664, !4665, !4666, !4667, !4668, !4669, !4670, !4671, !4672}
!4664 = !DIDerivedType(tag: DW_TAG_member, name: "dx", scope: !4662, file: !183, line: 361, baseType: !253, size: 32)
!4665 = !DIDerivedType(tag: DW_TAG_member, name: "dy", scope: !4662, file: !183, line: 362, baseType: !253, size: 32, offset: 32)
!4666 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !4662, file: !183, line: 363, baseType: !253, size: 32, offset: 64)
!4667 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !4662, file: !183, line: 364, baseType: !253, size: 32, offset: 96)
!4668 = !DIDerivedType(tag: DW_TAG_member, name: "fg_color", scope: !4662, file: !183, line: 365, baseType: !253, size: 32, offset: 128)
!4669 = !DIDerivedType(tag: DW_TAG_member, name: "bg_color", scope: !4662, file: !183, line: 366, baseType: !253, size: 32, offset: 160)
!4670 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !4662, file: !183, line: 367, baseType: !353, size: 8, offset: 192)
!4671 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4662, file: !183, line: 368, baseType: !335, size: 64, offset: 256)
!4672 = !DIDerivedType(tag: DW_TAG_member, name: "cmap", scope: !4662, file: !183, line: 369, baseType: !414, size: 320, offset: 320)
!4673 = !DIDerivedType(tag: DW_TAG_member, name: "fb_cursor", scope: !4589, file: !201, line: 270, baseType: !4674, size: 64, offset: 896)
!4674 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4675, size: 64)
!4675 = !DISubroutineType(types: !4676)
!4676 = !{!170, !199, !4677}
!4677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4678, size: 64)
!4678 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fb_cursor", file: !183, line: 388, size: 832, elements: !4679)
!4679 = !{!4680, !4681, !4682, !4683, !4684, !4689}
!4680 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !4678, file: !183, line: 389, baseType: !196, size: 16)
!4681 = !DIDerivedType(tag: DW_TAG_member, name: "enable", scope: !4678, file: !183, line: 390, baseType: !196, size: 16, offset: 16)
!4682 = !DIDerivedType(tag: DW_TAG_member, name: "rop", scope: !4678, file: !183, line: 391, baseType: !196, size: 16, offset: 32)
!4683 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !4678, file: !183, line: 392, baseType: !335, size: 64, offset: 64)
!4684 = !DIDerivedType(tag: DW_TAG_member, name: "hot", scope: !4678, file: !183, line: 393, baseType: !4685, size: 32, offset: 128)
!4685 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fbcurpos", file: !183, line: 384, size: 32, elements: !4686)
!4686 = !{!4687, !4688}
!4687 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !4685, file: !183, line: 385, baseType: !196, size: 16)
!4688 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !4685, file: !183, line: 385, baseType: !196, size: 16, offset: 16)
!4689 = !DIDerivedType(tag: DW_TAG_member, name: "image", scope: !4678, file: !183, line: 394, baseType: !4662, size: 640, offset: 192)
!4690 = !DIDerivedType(tag: DW_TAG_member, name: "fb_sync", scope: !4589, file: !201, line: 273, baseType: !4611, size: 64, offset: 960)
!4691 = !DIDerivedType(tag: DW_TAG_member, name: "fb_ioctl", scope: !4589, file: !201, line: 276, baseType: !4692, size: 64, offset: 1024)
!4692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4693, size: 64)
!4693 = !DISubroutineType(types: !4694)
!4694 = !{!170, !199, !7, !299}
!4695 = !DIDerivedType(tag: DW_TAG_member, name: "fb_compat_ioctl", scope: !4589, file: !201, line: 280, baseType: !4692, size: 64, offset: 1088)
!4696 = !DIDerivedType(tag: DW_TAG_member, name: "fb_mmap", scope: !4589, file: !201, line: 284, baseType: !4697, size: 64, offset: 1152)
!4697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4698, size: 64)
!4698 = !DISubroutineType(types: !4699)
!4699 = !{!170, !199, !1236}
!4700 = !DIDerivedType(tag: DW_TAG_member, name: "fb_get_caps", scope: !4589, file: !201, line: 287, baseType: !4701, size: 64, offset: 1216)
!4701 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4702, size: 64)
!4702 = !DISubroutineType(types: !4703)
!4703 = !{null, !199, !4704, !4609}
!4704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4705, size: 64)
!4705 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fb_blit_caps", file: !201, line: 144, size: 128, elements: !4706)
!4706 = !{!4707, !4708, !4709, !4710}
!4707 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !4705, file: !201, line: 145, baseType: !338, size: 32)
!4708 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !4705, file: !201, line: 146, baseType: !338, size: 32, offset: 32)
!4709 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !4705, file: !201, line: 147, baseType: !338, size: 32, offset: 64)
!4710 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4705, file: !201, line: 148, baseType: !338, size: 32, offset: 96)
!4711 = !DIDerivedType(tag: DW_TAG_member, name: "fb_destroy", scope: !4589, file: !201, line: 291, baseType: !4579, size: 64, offset: 1280)
!4712 = !DIDerivedType(tag: DW_TAG_member, name: "fb_debug_enter", scope: !4589, file: !201, line: 294, baseType: !4611, size: 64, offset: 1344)
!4713 = !DIDerivedType(tag: DW_TAG_member, name: "fb_debug_leave", scope: !4589, file: !201, line: 295, baseType: !4611, size: 64, offset: 1408)
!4714 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !200, file: !201, line: 474, baseType: !2112, size: 64, offset: 7360)
!4715 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !200, file: !201, line: 475, baseType: !2112, size: 64, offset: 7424)
!4716 = !DIDerivedType(tag: DW_TAG_member, name: "class_flag", scope: !200, file: !201, line: 476, baseType: !170, size: 32, offset: 7488)
!4717 = !DIDerivedType(tag: DW_TAG_member, name: "tileops", scope: !200, file: !201, line: 478, baseType: !4718, size: 64, offset: 7552)
!4718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4719, size: 64)
!4719 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fb_tile_ops", file: !201, line: 355, size: 384, elements: !4720)
!4720 = !{!4721, !4735, !4748, !4763, !4779, !4792}
!4721 = !DIDerivedType(tag: DW_TAG_member, name: "fb_settile", scope: !4719, file: !201, line: 357, baseType: !4722, size: 64)
!4722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4723, size: 64)
!4723 = !DISubroutineType(types: !4724)
!4724 = !{null, !199, !4725}
!4725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4726, size: 64)
!4726 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fb_tilemap", file: !201, line: 306, size: 192, elements: !4727)
!4727 = !{!4728, !4729, !4730, !4731, !4732}
!4728 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !4726, file: !201, line: 307, baseType: !253, size: 32)
!4729 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !4726, file: !201, line: 308, baseType: !253, size: 32, offset: 32)
!4730 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !4726, file: !201, line: 309, baseType: !253, size: 32, offset: 64)
!4731 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !4726, file: !201, line: 310, baseType: !253, size: 32, offset: 96)
!4732 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4726, file: !201, line: 311, baseType: !4733, size: 64, offset: 128)
!4733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4734, size: 64)
!4734 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !353)
!4735 = !DIDerivedType(tag: DW_TAG_member, name: "fb_tilecopy", scope: !4719, file: !201, line: 362, baseType: !4736, size: 64, offset: 64)
!4736 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4737, size: 64)
!4737 = !DISubroutineType(types: !4738)
!4738 = !{null, !199, !4739}
!4739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4740, size: 64)
!4740 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fb_tilearea", file: !201, line: 326, size: 192, elements: !4741)
!4741 = !{!4742, !4743, !4744, !4745, !4746, !4747}
!4742 = !DIDerivedType(tag: DW_TAG_member, name: "sx", scope: !4740, file: !201, line: 327, baseType: !253, size: 32)
!4743 = !DIDerivedType(tag: DW_TAG_member, name: "sy", scope: !4740, file: !201, line: 328, baseType: !253, size: 32, offset: 32)
!4744 = !DIDerivedType(tag: DW_TAG_member, name: "dx", scope: !4740, file: !201, line: 329, baseType: !253, size: 32, offset: 64)
!4745 = !DIDerivedType(tag: DW_TAG_member, name: "dy", scope: !4740, file: !201, line: 330, baseType: !253, size: 32, offset: 96)
!4746 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !4740, file: !201, line: 331, baseType: !253, size: 32, offset: 128)
!4747 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !4740, file: !201, line: 332, baseType: !253, size: 32, offset: 160)
!4748 = !DIDerivedType(tag: DW_TAG_member, name: "fb_tilefill", scope: !4719, file: !201, line: 364, baseType: !4749, size: 64, offset: 128)
!4749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4750, size: 64)
!4750 = !DISubroutineType(types: !4751)
!4751 = !{null, !199, !4752}
!4752 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4753, size: 64)
!4753 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fb_tilerect", file: !201, line: 315, size: 256, elements: !4754)
!4754 = !{!4755, !4756, !4757, !4758, !4759, !4760, !4761, !4762}
!4755 = !DIDerivedType(tag: DW_TAG_member, name: "sx", scope: !4753, file: !201, line: 316, baseType: !253, size: 32)
!4756 = !DIDerivedType(tag: DW_TAG_member, name: "sy", scope: !4753, file: !201, line: 317, baseType: !253, size: 32, offset: 32)
!4757 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !4753, file: !201, line: 318, baseType: !253, size: 32, offset: 64)
!4758 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !4753, file: !201, line: 319, baseType: !253, size: 32, offset: 96)
!4759 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !4753, file: !201, line: 320, baseType: !253, size: 32, offset: 128)
!4760 = !DIDerivedType(tag: DW_TAG_member, name: "fg", scope: !4753, file: !201, line: 321, baseType: !253, size: 32, offset: 160)
!4761 = !DIDerivedType(tag: DW_TAG_member, name: "bg", scope: !4753, file: !201, line: 322, baseType: !253, size: 32, offset: 192)
!4762 = !DIDerivedType(tag: DW_TAG_member, name: "rop", scope: !4753, file: !201, line: 323, baseType: !253, size: 32, offset: 224)
!4763 = !DIDerivedType(tag: DW_TAG_member, name: "fb_tileblit", scope: !4719, file: !201, line: 366, baseType: !4764, size: 64, offset: 192)
!4764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4765, size: 64)
!4765 = !DISubroutineType(types: !4766)
!4766 = !{null, !199, !4767}
!4767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4768, size: 64)
!4768 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fb_tileblit", file: !201, line: 335, size: 320, elements: !4769)
!4769 = !{!4770, !4771, !4772, !4773, !4774, !4775, !4776, !4777}
!4770 = !DIDerivedType(tag: DW_TAG_member, name: "sx", scope: !4768, file: !201, line: 336, baseType: !253, size: 32)
!4771 = !DIDerivedType(tag: DW_TAG_member, name: "sy", scope: !4768, file: !201, line: 337, baseType: !253, size: 32, offset: 32)
!4772 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !4768, file: !201, line: 338, baseType: !253, size: 32, offset: 64)
!4773 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !4768, file: !201, line: 339, baseType: !253, size: 32, offset: 96)
!4774 = !DIDerivedType(tag: DW_TAG_member, name: "fg", scope: !4768, file: !201, line: 340, baseType: !253, size: 32, offset: 128)
!4775 = !DIDerivedType(tag: DW_TAG_member, name: "bg", scope: !4768, file: !201, line: 341, baseType: !253, size: 32, offset: 160)
!4776 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !4768, file: !201, line: 342, baseType: !253, size: 32, offset: 192)
!4777 = !DIDerivedType(tag: DW_TAG_member, name: "indices", scope: !4768, file: !201, line: 343, baseType: !4778, size: 64, offset: 256)
!4778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !253, size: 64)
!4779 = !DIDerivedType(tag: DW_TAG_member, name: "fb_tilecursor", scope: !4719, file: !201, line: 368, baseType: !4780, size: 64, offset: 256)
!4780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4781, size: 64)
!4781 = !DISubroutineType(types: !4782)
!4782 = !{null, !199, !4783}
!4783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4784, size: 64)
!4784 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fb_tilecursor", file: !201, line: 346, size: 192, elements: !4785)
!4785 = !{!4786, !4787, !4788, !4789, !4790, !4791}
!4786 = !DIDerivedType(tag: DW_TAG_member, name: "sx", scope: !4784, file: !201, line: 347, baseType: !253, size: 32)
!4787 = !DIDerivedType(tag: DW_TAG_member, name: "sy", scope: !4784, file: !201, line: 348, baseType: !253, size: 32, offset: 32)
!4788 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !4784, file: !201, line: 349, baseType: !253, size: 32, offset: 64)
!4789 = !DIDerivedType(tag: DW_TAG_member, name: "shape", scope: !4784, file: !201, line: 350, baseType: !253, size: 32, offset: 96)
!4790 = !DIDerivedType(tag: DW_TAG_member, name: "fg", scope: !4784, file: !201, line: 351, baseType: !253, size: 32, offset: 128)
!4791 = !DIDerivedType(tag: DW_TAG_member, name: "bg", scope: !4784, file: !201, line: 352, baseType: !253, size: 32, offset: 160)
!4792 = !DIDerivedType(tag: DW_TAG_member, name: "fb_get_tilemax", scope: !4719, file: !201, line: 371, baseType: !4611, size: 64, offset: 320)
!4793 = !DIDerivedType(tag: DW_TAG_member, scope: !200, file: !201, line: 480, baseType: !4794, size: 64, offset: 7616)
!4794 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !200, file: !201, line: 480, size: 64, elements: !4795)
!4795 = !{!4796, !4797}
!4796 = !DIDerivedType(tag: DW_TAG_member, name: "screen_base", scope: !4794, file: !201, line: 481, baseType: !512, size: 64)
!4797 = !DIDerivedType(tag: DW_TAG_member, name: "screen_buffer", scope: !4794, file: !201, line: 482, baseType: !512, size: 64)
!4798 = !DIDerivedType(tag: DW_TAG_member, name: "screen_size", scope: !200, file: !201, line: 484, baseType: !299, size: 64, offset: 7680)
!4799 = !DIDerivedType(tag: DW_TAG_member, name: "pseudo_palette", scope: !200, file: !201, line: 485, baseType: !192, size: 64, offset: 7744)
!4800 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !200, file: !201, line: 488, baseType: !338, size: 32, offset: 7808)
!4801 = !DIDerivedType(tag: DW_TAG_member, name: "fbcon_par", scope: !200, file: !201, line: 489, baseType: !192, size: 64, offset: 7872)
!4802 = !DIDerivedType(tag: DW_TAG_member, name: "par", scope: !200, file: !201, line: 491, baseType: !192, size: 64, offset: 7936)
!4803 = !DIDerivedType(tag: DW_TAG_member, name: "apertures", scope: !200, file: !201, line: 501, baseType: !4804, size: 64, offset: 8000)
!4804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4805, size: 64)
!4805 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "apertures_struct", file: !201, line: 495, size: 64, elements: !4806)
!4806 = !{!4807, !4808}
!4807 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4805, file: !201, line: 496, baseType: !7, size: 32)
!4808 = !DIDerivedType(tag: DW_TAG_member, name: "ranges", scope: !4805, file: !201, line: 500, baseType: !4809, offset: 64)
!4809 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4810, elements: !2001)
!4810 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "aperture", file: !201, line: 497, size: 128, elements: !4811)
!4811 = !{!4812, !4814}
!4812 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !4810, file: !201, line: 498, baseType: !4813, size: 64)
!4813 = !DIDerivedType(tag: DW_TAG_typedef, name: "resource_size_t", file: !205, line: 158, baseType: !3014)
!4814 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4810, file: !201, line: 499, baseType: !4813, size: 64, offset: 64)
!4815 = !DIDerivedType(tag: DW_TAG_member, name: "skip_vt_switch", scope: !200, file: !201, line: 503, baseType: !720, size: 8, offset: 8064)
!4816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4817, size: 64)
!4817 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !246)
!4818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4819, size: 64)
!4819 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fbcon_ops", file: !4820, line: 54, size: 3648, elements: !4821)
!4820 = !DIFile(filename: "drivers/video/fbdev/core/fbcon.h", directory: "/home/lizy2001/genbc/linux")
!4821 = !{!4822, !5023, !5027, !5031, !5035, !5039, !5040, !5044, !5045, !5046, !5047, !5079, !5080, !5081, !5082, !5083, !5084, !5085, !5086, !5087, !5088, !5089, !5090, !5091, !5092, !5093, !5094, !5095}
!4822 = !DIDerivedType(tag: DW_TAG_member, name: "bmove", scope: !4819, file: !4820, line: 55, baseType: !4823, size: 64)
!4823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4824, size: 64)
!4824 = !DISubroutineType(types: !4825)
!4825 = !{null, !4826, !199, !170, !170, !170, !170, !170, !170}
!4826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4827, size: 64)
!4827 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vc_data", file: !120, line: 94, size: 5952, elements: !4828)
!4828 = !{!4829, !4830, !4844, !4845, !4846, !4847, !4848, !4849, !4850, !4851, !4852, !4853, !4854, !4855, !4956, !4958, !4959, !4960, !4961, !4962, !4963, !4964, !4965, !4966, !4967, !4968, !4969, !4970, !4971, !4972, !4973, !4974, !4976, !4985, !4986, !4987, !4988, !4989, !4990, !4991, !4992, !4993, !4994, !4995, !4996, !4997, !4998, !4999, !5000, !5001, !5002, !5004, !5008, !5009, !5010, !5011, !5012, !5013, !5015, !5018, !5020}
!4829 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !4827, file: !120, line: 95, baseType: !2393, size: 2432)
!4830 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !4827, file: !120, line: 97, baseType: !4831, size: 160, offset: 2432)
!4831 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vc_state", file: !120, line: 46, size: 160, elements: !4832)
!4832 = !{!4833, !4834, !4835, !4836, !4838, !4839, !4840, !4841, !4842, !4843}
!4833 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !4831, file: !120, line: 47, baseType: !7, size: 32)
!4834 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !4831, file: !120, line: 47, baseType: !7, size: 32, offset: 32)
!4835 = !DIDerivedType(tag: DW_TAG_member, name: "color", scope: !4831, file: !120, line: 49, baseType: !354, size: 8, offset: 64)
!4836 = !DIDerivedType(tag: DW_TAG_member, name: "Gx_charset", scope: !4831, file: !120, line: 51, baseType: !4837, size: 16, offset: 72)
!4837 = !DICompositeType(tag: DW_TAG_array_type, baseType: !354, size: 16, elements: !314)
!4838 = !DIDerivedType(tag: DW_TAG_member, name: "charset", scope: !4831, file: !120, line: 52, baseType: !7, size: 1, offset: 88, flags: DIFlagBitField, extraData: i64 88)
!4839 = !DIDerivedType(tag: DW_TAG_member, name: "intensity", scope: !4831, file: !120, line: 55, baseType: !119, size: 32, offset: 96)
!4840 = !DIDerivedType(tag: DW_TAG_member, name: "italic", scope: !4831, file: !120, line: 56, baseType: !720, size: 8, offset: 128)
!4841 = !DIDerivedType(tag: DW_TAG_member, name: "underline", scope: !4831, file: !120, line: 57, baseType: !720, size: 8, offset: 136)
!4842 = !DIDerivedType(tag: DW_TAG_member, name: "blink", scope: !4831, file: !120, line: 58, baseType: !720, size: 8, offset: 144)
!4843 = !DIDerivedType(tag: DW_TAG_member, name: "reverse", scope: !4831, file: !120, line: 59, baseType: !720, size: 8, offset: 152)
!4844 = !DIDerivedType(tag: DW_TAG_member, name: "saved_state", scope: !4827, file: !120, line: 97, baseType: !4831, size: 160, offset: 2592)
!4845 = !DIDerivedType(tag: DW_TAG_member, name: "vc_num", scope: !4827, file: !120, line: 99, baseType: !198, size: 16, offset: 2752)
!4846 = !DIDerivedType(tag: DW_TAG_member, name: "vc_cols", scope: !4827, file: !120, line: 100, baseType: !7, size: 32, offset: 2784)
!4847 = !DIDerivedType(tag: DW_TAG_member, name: "vc_rows", scope: !4827, file: !120, line: 101, baseType: !7, size: 32, offset: 2816)
!4848 = !DIDerivedType(tag: DW_TAG_member, name: "vc_size_row", scope: !4827, file: !120, line: 102, baseType: !7, size: 32, offset: 2848)
!4849 = !DIDerivedType(tag: DW_TAG_member, name: "vc_scan_lines", scope: !4827, file: !120, line: 103, baseType: !7, size: 32, offset: 2880)
!4850 = !DIDerivedType(tag: DW_TAG_member, name: "vc_origin", scope: !4827, file: !120, line: 104, baseType: !299, size: 64, offset: 2944)
!4851 = !DIDerivedType(tag: DW_TAG_member, name: "vc_scr_end", scope: !4827, file: !120, line: 105, baseType: !299, size: 64, offset: 3008)
!4852 = !DIDerivedType(tag: DW_TAG_member, name: "vc_visible_origin", scope: !4827, file: !120, line: 106, baseType: !299, size: 64, offset: 3072)
!4853 = !DIDerivedType(tag: DW_TAG_member, name: "vc_top", scope: !4827, file: !120, line: 107, baseType: !7, size: 32, offset: 3136)
!4854 = !DIDerivedType(tag: DW_TAG_member, name: "vc_bottom", scope: !4827, file: !120, line: 107, baseType: !7, size: 32, offset: 3168)
!4855 = !DIDerivedType(tag: DW_TAG_member, name: "vc_sw", scope: !4827, file: !120, line: 108, baseType: !4856, size: 64, offset: 3200)
!4856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4857, size: 64)
!4857 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4858)
!4858 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "consw", file: !127, line: 44, size: 1728, elements: !4859)
!4859 = !{!4860, !4861, !4865, !4869, !4873, !4877, !4881, !4887, !4888, !4892, !4896, !4900, !4912, !4916, !4920, !4924, !4928, !4932, !4933, !4934, !4935, !4939, !4943, !4949, !4953, !4954, !4955}
!4860 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4858, file: !127, line: 45, baseType: !861, size: 64)
!4861 = !DIDerivedType(tag: DW_TAG_member, name: "con_startup", scope: !4858, file: !127, line: 46, baseType: !4862, size: 64, offset: 64)
!4862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4863, size: 64)
!4863 = !DISubroutineType(types: !4864)
!4864 = !{!335}
!4865 = !DIDerivedType(tag: DW_TAG_member, name: "con_init", scope: !4858, file: !127, line: 47, baseType: !4866, size: 64, offset: 128)
!4866 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4867, size: 64)
!4867 = !DISubroutineType(types: !4868)
!4868 = !{null, !4826, !170}
!4869 = !DIDerivedType(tag: DW_TAG_member, name: "con_deinit", scope: !4858, file: !127, line: 48, baseType: !4870, size: 64, offset: 192)
!4870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4871, size: 64)
!4871 = !DISubroutineType(types: !4872)
!4872 = !{null, !4826}
!4873 = !DIDerivedType(tag: DW_TAG_member, name: "con_clear", scope: !4858, file: !127, line: 49, baseType: !4874, size: 64, offset: 256)
!4874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4875, size: 64)
!4875 = !DISubroutineType(types: !4876)
!4876 = !{null, !4826, !170, !170, !170, !170}
!4877 = !DIDerivedType(tag: DW_TAG_member, name: "con_putc", scope: !4858, file: !127, line: 51, baseType: !4878, size: 64, offset: 320)
!4878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4879, size: 64)
!4879 = !DISubroutineType(types: !4880)
!4880 = !{null, !4826, !170, !170, !170}
!4881 = !DIDerivedType(tag: DW_TAG_member, name: "con_putcs", scope: !4858, file: !127, line: 52, baseType: !4882, size: 64, offset: 384)
!4882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4883, size: 64)
!4883 = !DISubroutineType(types: !4884)
!4884 = !{null, !4826, !4885, !170, !170, !170}
!4885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4886, size: 64)
!4886 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !198)
!4887 = !DIDerivedType(tag: DW_TAG_member, name: "con_cursor", scope: !4858, file: !127, line: 54, baseType: !4866, size: 64, offset: 448)
!4888 = !DIDerivedType(tag: DW_TAG_member, name: "con_scroll", scope: !4858, file: !127, line: 55, baseType: !4889, size: 64, offset: 512)
!4889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4890, size: 64)
!4890 = !DISubroutineType(types: !4891)
!4891 = !{!720, !4826, !7, !7, !126, !7}
!4892 = !DIDerivedType(tag: DW_TAG_member, name: "con_switch", scope: !4858, file: !127, line: 58, baseType: !4893, size: 64, offset: 576)
!4893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4894, size: 64)
!4894 = !DISubroutineType(types: !4895)
!4895 = !{!170, !4826}
!4896 = !DIDerivedType(tag: DW_TAG_member, name: "con_blank", scope: !4858, file: !127, line: 59, baseType: !4897, size: 64, offset: 640)
!4897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4898, size: 64)
!4898 = !DISubroutineType(types: !4899)
!4899 = !{!170, !4826, !170, !170}
!4900 = !DIDerivedType(tag: DW_TAG_member, name: "con_font_set", scope: !4858, file: !127, line: 60, baseType: !4901, size: 64, offset: 704)
!4901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4902, size: 64)
!4902 = !DISubroutineType(types: !4903)
!4903 = !{!170, !4826, !4904, !7}
!4904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4905, size: 64)
!4905 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "console_font", file: !4906, line: 167, size: 192, elements: !4907)
!4906 = !DIFile(filename: "./include/uapi/linux/kd.h", directory: "/home/lizy2001/genbc/linux")
!4907 = !{!4908, !4909, !4910, !4911}
!4908 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !4905, file: !4906, line: 168, baseType: !7, size: 32)
!4909 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !4905, file: !4906, line: 168, baseType: !7, size: 32, offset: 32)
!4910 = !DIDerivedType(tag: DW_TAG_member, name: "charcount", scope: !4905, file: !4906, line: 169, baseType: !7, size: 32, offset: 64)
!4911 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4905, file: !4906, line: 170, baseType: !2473, size: 64, offset: 128)
!4912 = !DIDerivedType(tag: DW_TAG_member, name: "con_font_get", scope: !4858, file: !127, line: 62, baseType: !4913, size: 64, offset: 768)
!4913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4914, size: 64)
!4914 = !DISubroutineType(types: !4915)
!4915 = !{!170, !4826, !4904}
!4916 = !DIDerivedType(tag: DW_TAG_member, name: "con_font_default", scope: !4858, file: !127, line: 63, baseType: !4917, size: 64, offset: 832)
!4917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4918, size: 64)
!4918 = !DISubroutineType(types: !4919)
!4919 = !{!170, !4826, !4904, !512}
!4920 = !DIDerivedType(tag: DW_TAG_member, name: "con_font_copy", scope: !4858, file: !127, line: 65, baseType: !4921, size: 64, offset: 896)
!4921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4922, size: 64)
!4922 = !DISubroutineType(types: !4923)
!4923 = !{!170, !4826, !170}
!4924 = !DIDerivedType(tag: DW_TAG_member, name: "con_resize", scope: !4858, file: !127, line: 66, baseType: !4925, size: 64, offset: 960)
!4925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4926, size: 64)
!4926 = !DISubroutineType(types: !4927)
!4927 = !{!170, !4826, !7, !7, !7}
!4928 = !DIDerivedType(tag: DW_TAG_member, name: "con_set_palette", scope: !4858, file: !127, line: 68, baseType: !4929, size: 64, offset: 1024)
!4929 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4930, size: 64)
!4930 = !DISubroutineType(types: !4931)
!4931 = !{null, !4826, !656}
!4932 = !DIDerivedType(tag: DW_TAG_member, name: "con_scrolldelta", scope: !4858, file: !127, line: 70, baseType: !4866, size: 64, offset: 1088)
!4933 = !DIDerivedType(tag: DW_TAG_member, name: "con_set_origin", scope: !4858, file: !127, line: 71, baseType: !4893, size: 64, offset: 1152)
!4934 = !DIDerivedType(tag: DW_TAG_member, name: "con_save_screen", scope: !4858, file: !127, line: 72, baseType: !4870, size: 64, offset: 1216)
!4935 = !DIDerivedType(tag: DW_TAG_member, name: "con_build_attr", scope: !4858, file: !127, line: 73, baseType: !4936, size: 64, offset: 1280)
!4936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4937, size: 64)
!4937 = !DISubroutineType(types: !4938)
!4938 = !{!398, !4826, !398, !119, !720, !720, !720, !720}
!4939 = !DIDerivedType(tag: DW_TAG_member, name: "con_invert_region", scope: !4858, file: !127, line: 76, baseType: !4940, size: 64, offset: 1344)
!4940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4941, size: 64)
!4941 = !DISubroutineType(types: !4942)
!4942 = !{null, !4826, !193, !170}
!4943 = !DIDerivedType(tag: DW_TAG_member, name: "con_screen_pos", scope: !4858, file: !127, line: 77, baseType: !4944, size: 64, offset: 1408)
!4944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4945, size: 64)
!4945 = !DISubroutineType(types: !4946)
!4946 = !{!193, !4947, !170}
!4947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4948, size: 64)
!4948 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4827)
!4949 = !DIDerivedType(tag: DW_TAG_member, name: "con_getxy", scope: !4858, file: !127, line: 78, baseType: !4950, size: 64, offset: 1472)
!4950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4951, size: 64)
!4951 = !DISubroutineType(types: !4952)
!4952 = !{!299, !4826, !299, !191, !191}
!4953 = !DIDerivedType(tag: DW_TAG_member, name: "con_flush_scrollback", scope: !4858, file: !127, line: 83, baseType: !4870, size: 64, offset: 1536)
!4954 = !DIDerivedType(tag: DW_TAG_member, name: "con_debug_enter", scope: !4858, file: !127, line: 89, baseType: !4893, size: 64, offset: 1600)
!4955 = !DIDerivedType(tag: DW_TAG_member, name: "con_debug_leave", scope: !4858, file: !127, line: 93, baseType: !4893, size: 64, offset: 1664)
!4956 = !DIDerivedType(tag: DW_TAG_member, name: "vc_screenbuf", scope: !4827, file: !120, line: 109, baseType: !4957, size: 64, offset: 3264)
!4957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !198, size: 64)
!4958 = !DIDerivedType(tag: DW_TAG_member, name: "vc_screenbuf_size", scope: !4827, file: !120, line: 110, baseType: !7, size: 32, offset: 3328)
!4959 = !DIDerivedType(tag: DW_TAG_member, name: "vc_mode", scope: !4827, file: !120, line: 111, baseType: !354, size: 8, offset: 3360)
!4960 = !DIDerivedType(tag: DW_TAG_member, name: "vc_attr", scope: !4827, file: !120, line: 113, baseType: !354, size: 8, offset: 3368)
!4961 = !DIDerivedType(tag: DW_TAG_member, name: "vc_def_color", scope: !4827, file: !120, line: 114, baseType: !354, size: 8, offset: 3376)
!4962 = !DIDerivedType(tag: DW_TAG_member, name: "vc_ulcolor", scope: !4827, file: !120, line: 115, baseType: !354, size: 8, offset: 3384)
!4963 = !DIDerivedType(tag: DW_TAG_member, name: "vc_itcolor", scope: !4827, file: !120, line: 116, baseType: !354, size: 8, offset: 3392)
!4964 = !DIDerivedType(tag: DW_TAG_member, name: "vc_halfcolor", scope: !4827, file: !120, line: 117, baseType: !354, size: 8, offset: 3400)
!4965 = !DIDerivedType(tag: DW_TAG_member, name: "vc_cursor_type", scope: !4827, file: !120, line: 119, baseType: !7, size: 32, offset: 3424)
!4966 = !DIDerivedType(tag: DW_TAG_member, name: "vc_complement_mask", scope: !4827, file: !120, line: 120, baseType: !198, size: 16, offset: 3456)
!4967 = !DIDerivedType(tag: DW_TAG_member, name: "vc_s_complement_mask", scope: !4827, file: !120, line: 121, baseType: !198, size: 16, offset: 3472)
!4968 = !DIDerivedType(tag: DW_TAG_member, name: "vc_pos", scope: !4827, file: !120, line: 122, baseType: !299, size: 64, offset: 3520)
!4969 = !DIDerivedType(tag: DW_TAG_member, name: "vc_hi_font_mask", scope: !4827, file: !120, line: 124, baseType: !198, size: 16, offset: 3584)
!4970 = !DIDerivedType(tag: DW_TAG_member, name: "vc_font", scope: !4827, file: !120, line: 125, baseType: !4905, size: 192, offset: 3648)
!4971 = !DIDerivedType(tag: DW_TAG_member, name: "vc_video_erase_char", scope: !4827, file: !120, line: 126, baseType: !198, size: 16, offset: 3840)
!4972 = !DIDerivedType(tag: DW_TAG_member, name: "vc_state", scope: !4827, file: !120, line: 128, baseType: !7, size: 32, offset: 3872)
!4973 = !DIDerivedType(tag: DW_TAG_member, name: "vc_npar", scope: !4827, file: !120, line: 129, baseType: !7, size: 32, offset: 3904)
!4974 = !DIDerivedType(tag: DW_TAG_member, name: "vc_par", scope: !4827, file: !120, line: 129, baseType: !4975, size: 512, offset: 3936)
!4975 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 512, elements: !296)
!4976 = !DIDerivedType(tag: DW_TAG_member, name: "vt_mode", scope: !4827, file: !120, line: 131, baseType: !4977, size: 64, offset: 4448)
!4977 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vt_mode", file: !4978, line: 19, size: 64, elements: !4979)
!4978 = !DIFile(filename: "./include/uapi/linux/vt.h", directory: "/home/lizy2001/genbc/linux")
!4979 = !{!4980, !4981, !4982, !4983, !4984}
!4980 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !4977, file: !4978, line: 20, baseType: !295, size: 8)
!4981 = !DIDerivedType(tag: DW_TAG_member, name: "waitv", scope: !4977, file: !4978, line: 21, baseType: !295, size: 8, offset: 8)
!4982 = !DIDerivedType(tag: DW_TAG_member, name: "relsig", scope: !4977, file: !4978, line: 22, baseType: !1452, size: 16, offset: 16)
!4983 = !DIDerivedType(tag: DW_TAG_member, name: "acqsig", scope: !4977, file: !4978, line: 23, baseType: !1452, size: 16, offset: 32)
!4984 = !DIDerivedType(tag: DW_TAG_member, name: "frsig", scope: !4977, file: !4978, line: 24, baseType: !1452, size: 16, offset: 48)
!4985 = !DIDerivedType(tag: DW_TAG_member, name: "vt_pid", scope: !4827, file: !120, line: 132, baseType: !1716, size: 64, offset: 4544)
!4986 = !DIDerivedType(tag: DW_TAG_member, name: "vt_newvt", scope: !4827, file: !120, line: 133, baseType: !170, size: 32, offset: 4608)
!4987 = !DIDerivedType(tag: DW_TAG_member, name: "paste_wait", scope: !4827, file: !120, line: 134, baseType: !1726, size: 128, offset: 4672)
!4988 = !DIDerivedType(tag: DW_TAG_member, name: "vc_disp_ctrl", scope: !4827, file: !120, line: 136, baseType: !7, size: 1, offset: 4800, flags: DIFlagBitField, extraData: i64 4800)
!4989 = !DIDerivedType(tag: DW_TAG_member, name: "vc_toggle_meta", scope: !4827, file: !120, line: 137, baseType: !7, size: 1, offset: 4801, flags: DIFlagBitField, extraData: i64 4800)
!4990 = !DIDerivedType(tag: DW_TAG_member, name: "vc_decscnm", scope: !4827, file: !120, line: 138, baseType: !7, size: 1, offset: 4802, flags: DIFlagBitField, extraData: i64 4800)
!4991 = !DIDerivedType(tag: DW_TAG_member, name: "vc_decom", scope: !4827, file: !120, line: 139, baseType: !7, size: 1, offset: 4803, flags: DIFlagBitField, extraData: i64 4800)
!4992 = !DIDerivedType(tag: DW_TAG_member, name: "vc_decawm", scope: !4827, file: !120, line: 140, baseType: !7, size: 1, offset: 4804, flags: DIFlagBitField, extraData: i64 4800)
!4993 = !DIDerivedType(tag: DW_TAG_member, name: "vc_deccm", scope: !4827, file: !120, line: 141, baseType: !7, size: 1, offset: 4805, flags: DIFlagBitField, extraData: i64 4800)
!4994 = !DIDerivedType(tag: DW_TAG_member, name: "vc_decim", scope: !4827, file: !120, line: 142, baseType: !7, size: 1, offset: 4806, flags: DIFlagBitField, extraData: i64 4800)
!4995 = !DIDerivedType(tag: DW_TAG_member, name: "vc_priv", scope: !4827, file: !120, line: 144, baseType: !7, size: 3, offset: 4807, flags: DIFlagBitField, extraData: i64 4800)
!4996 = !DIDerivedType(tag: DW_TAG_member, name: "vc_need_wrap", scope: !4827, file: !120, line: 145, baseType: !7, size: 1, offset: 4810, flags: DIFlagBitField, extraData: i64 4800)
!4997 = !DIDerivedType(tag: DW_TAG_member, name: "vc_can_do_color", scope: !4827, file: !120, line: 146, baseType: !7, size: 1, offset: 4811, flags: DIFlagBitField, extraData: i64 4800)
!4998 = !DIDerivedType(tag: DW_TAG_member, name: "vc_report_mouse", scope: !4827, file: !120, line: 147, baseType: !7, size: 2, offset: 4812, flags: DIFlagBitField, extraData: i64 4800)
!4999 = !DIDerivedType(tag: DW_TAG_member, name: "vc_utf", scope: !4827, file: !120, line: 148, baseType: !354, size: 1, offset: 4814, flags: DIFlagBitField, extraData: i64 4800)
!5000 = !DIDerivedType(tag: DW_TAG_member, name: "vc_utf_count", scope: !4827, file: !120, line: 149, baseType: !354, size: 8, offset: 4816)
!5001 = !DIDerivedType(tag: DW_TAG_member, name: "vc_utf_char", scope: !4827, file: !120, line: 150, baseType: !170, size: 32, offset: 4832)
!5002 = !DIDerivedType(tag: DW_TAG_member, name: "vc_tab_stop", scope: !4827, file: !120, line: 151, baseType: !5003, size: 256, offset: 4864)
!5003 = !DICompositeType(tag: DW_TAG_array_type, baseType: !299, size: 256, elements: !288)
!5004 = !DIDerivedType(tag: DW_TAG_member, name: "vc_palette", scope: !4827, file: !120, line: 152, baseType: !5005, size: 384, offset: 5120)
!5005 = !DICompositeType(tag: DW_TAG_array_type, baseType: !354, size: 384, elements: !5006)
!5006 = !{!5007}
!5007 = !DISubrange(count: 48)
!5008 = !DIDerivedType(tag: DW_TAG_member, name: "vc_translate", scope: !4827, file: !120, line: 153, baseType: !4957, size: 64, offset: 5504)
!5009 = !DIDerivedType(tag: DW_TAG_member, name: "vc_resize_user", scope: !4827, file: !120, line: 154, baseType: !7, size: 32, offset: 5568)
!5010 = !DIDerivedType(tag: DW_TAG_member, name: "vc_bell_pitch", scope: !4827, file: !120, line: 155, baseType: !7, size: 32, offset: 5600)
!5011 = !DIDerivedType(tag: DW_TAG_member, name: "vc_bell_duration", scope: !4827, file: !120, line: 156, baseType: !7, size: 32, offset: 5632)
!5012 = !DIDerivedType(tag: DW_TAG_member, name: "vc_cur_blink_ms", scope: !4827, file: !120, line: 157, baseType: !198, size: 16, offset: 5664)
!5013 = !DIDerivedType(tag: DW_TAG_member, name: "vc_display_fg", scope: !4827, file: !120, line: 158, baseType: !5014, size: 64, offset: 5696)
!5014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4826, size: 64)
!5015 = !DIDerivedType(tag: DW_TAG_member, name: "vc_uni_pagedir", scope: !4827, file: !120, line: 159, baseType: !5016, size: 64, offset: 5760)
!5016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5017, size: 64)
!5017 = !DICompositeType(tag: DW_TAG_structure_type, name: "uni_pagedir", file: !120, line: 20, flags: DIFlagFwdDecl)
!5018 = !DIDerivedType(tag: DW_TAG_member, name: "vc_uni_pagedir_loc", scope: !4827, file: !120, line: 160, baseType: !5019, size: 64, offset: 5824)
!5019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5016, size: 64)
!5020 = !DIDerivedType(tag: DW_TAG_member, name: "vc_uni_screen", scope: !4827, file: !120, line: 161, baseType: !5021, size: 64, offset: 5888)
!5021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5022, size: 64)
!5022 = !DICompositeType(tag: DW_TAG_structure_type, name: "uni_screen", file: !120, line: 21, flags: DIFlagFwdDecl)
!5023 = !DIDerivedType(tag: DW_TAG_member, name: "clear", scope: !4819, file: !4820, line: 57, baseType: !5024, size: 64, offset: 64)
!5024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5025, size: 64)
!5025 = !DISubroutineType(types: !5026)
!5026 = !{null, !4826, !199, !170, !170, !170, !170}
!5027 = !DIDerivedType(tag: DW_TAG_member, name: "putcs", scope: !4819, file: !4820, line: 59, baseType: !5028, size: 64, offset: 128)
!5028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5029, size: 64)
!5029 = !DISubroutineType(types: !5030)
!5030 = !{null, !4826, !199, !4885, !170, !170, !170, !170, !170}
!5031 = !DIDerivedType(tag: DW_TAG_member, name: "clear_margins", scope: !4819, file: !4820, line: 62, baseType: !5032, size: 64, offset: 192)
!5032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5033, size: 64)
!5033 = !DISubroutineType(types: !5034)
!5034 = !{null, !4826, !199, !170, !170}
!5035 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !4819, file: !4820, line: 64, baseType: !5036, size: 64, offset: 256)
!5036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5037, size: 64)
!5037 = !DISubroutineType(types: !5038)
!5038 = !{null, !4826, !199, !170, !170, !170}
!5039 = !DIDerivedType(tag: DW_TAG_member, name: "update_start", scope: !4819, file: !4820, line: 66, baseType: !4611, size: 64, offset: 320)
!5040 = !DIDerivedType(tag: DW_TAG_member, name: "rotate_font", scope: !4819, file: !4820, line: 67, baseType: !5041, size: 64, offset: 384)
!5041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5042, size: 64)
!5042 = !DISubroutineType(types: !5043)
!5043 = !{!170, !199, !4826}
!5044 = !DIDerivedType(tag: DW_TAG_member, name: "var", scope: !4819, file: !4820, line: 68, baseType: !250, size: 1280, offset: 448)
!5045 = !DIDerivedType(tag: DW_TAG_member, name: "cursor_timer", scope: !4819, file: !4820, line: 69, baseType: !4203, size: 320, offset: 1728)
!5046 = !DIDerivedType(tag: DW_TAG_member, name: "cursor_state", scope: !4819, file: !4820, line: 70, baseType: !4678, size: 832, offset: 2048)
!5047 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !4819, file: !4820, line: 71, baseType: !5048, size: 64, offset: 2880)
!5048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5049, size: 64)
!5049 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fbcon_display", file: !4820, line: 28, size: 1024, elements: !5050)
!5050 = !{!5051, !5055, !5056, !5058, !5059, !5060, !5061, !5062, !5063, !5064, !5065, !5066, !5067, !5068, !5069, !5070, !5071, !5072, !5073, !5074, !5075, !5076}
!5051 = !DIDerivedType(tag: DW_TAG_member, name: "fontdata", scope: !5049, file: !4820, line: 30, baseType: !5052, size: 64)
!5052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5053, size: 64)
!5053 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5054)
!5054 = !DIDerivedType(tag: DW_TAG_typedef, name: "u_char", file: !205, line: 79, baseType: !354)
!5055 = !DIDerivedType(tag: DW_TAG_member, name: "userfont", scope: !5049, file: !4820, line: 31, baseType: !170, size: 32, offset: 64)
!5056 = !DIDerivedType(tag: DW_TAG_member, name: "scrollmode", scope: !5049, file: !4820, line: 32, baseType: !5057, size: 16, offset: 96)
!5057 = !DIDerivedType(tag: DW_TAG_typedef, name: "u_short", file: !205, line: 80, baseType: !198)
!5058 = !DIDerivedType(tag: DW_TAG_member, name: "inverse", scope: !5049, file: !4820, line: 33, baseType: !5057, size: 16, offset: 112)
!5059 = !DIDerivedType(tag: DW_TAG_member, name: "yscroll", scope: !5049, file: !4820, line: 34, baseType: !1452, size: 16, offset: 128)
!5060 = !DIDerivedType(tag: DW_TAG_member, name: "vrows", scope: !5049, file: !4820, line: 35, baseType: !170, size: 32, offset: 160)
!5061 = !DIDerivedType(tag: DW_TAG_member, name: "cursor_shape", scope: !5049, file: !4820, line: 36, baseType: !170, size: 32, offset: 192)
!5062 = !DIDerivedType(tag: DW_TAG_member, name: "con_rotate", scope: !5049, file: !4820, line: 37, baseType: !170, size: 32, offset: 224)
!5063 = !DIDerivedType(tag: DW_TAG_member, name: "xres_virtual", scope: !5049, file: !4820, line: 38, baseType: !338, size: 32, offset: 256)
!5064 = !DIDerivedType(tag: DW_TAG_member, name: "yres_virtual", scope: !5049, file: !4820, line: 39, baseType: !338, size: 32, offset: 288)
!5065 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !5049, file: !4820, line: 40, baseType: !338, size: 32, offset: 320)
!5066 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !5049, file: !4820, line: 41, baseType: !338, size: 32, offset: 352)
!5067 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_pixel", scope: !5049, file: !4820, line: 42, baseType: !338, size: 32, offset: 384)
!5068 = !DIDerivedType(tag: DW_TAG_member, name: "grayscale", scope: !5049, file: !4820, line: 43, baseType: !338, size: 32, offset: 416)
!5069 = !DIDerivedType(tag: DW_TAG_member, name: "nonstd", scope: !5049, file: !4820, line: 44, baseType: !338, size: 32, offset: 448)
!5070 = !DIDerivedType(tag: DW_TAG_member, name: "accel_flags", scope: !5049, file: !4820, line: 45, baseType: !338, size: 32, offset: 480)
!5071 = !DIDerivedType(tag: DW_TAG_member, name: "rotate", scope: !5049, file: !4820, line: 46, baseType: !338, size: 32, offset: 512)
!5072 = !DIDerivedType(tag: DW_TAG_member, name: "red", scope: !5049, file: !4820, line: 47, baseType: !262, size: 96, offset: 544)
!5073 = !DIDerivedType(tag: DW_TAG_member, name: "green", scope: !5049, file: !4820, line: 48, baseType: !262, size: 96, offset: 640)
!5074 = !DIDerivedType(tag: DW_TAG_member, name: "blue", scope: !5049, file: !4820, line: 49, baseType: !262, size: 96, offset: 736)
!5075 = !DIDerivedType(tag: DW_TAG_member, name: "transp", scope: !5049, file: !4820, line: 50, baseType: !262, size: 96, offset: 832)
!5076 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !5049, file: !4820, line: 51, baseType: !5077, size: 64, offset: 960)
!5077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5078, size: 64)
!5078 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !332)
!5079 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !4819, file: !4820, line: 72, baseType: !199, size: 64, offset: 2944)
!5080 = !DIDerivedType(tag: DW_TAG_member, name: "currcon", scope: !4819, file: !4820, line: 73, baseType: !170, size: 32, offset: 3008)
!5081 = !DIDerivedType(tag: DW_TAG_member, name: "cur_blink_jiffies", scope: !4819, file: !4820, line: 74, baseType: !170, size: 32, offset: 3040)
!5082 = !DIDerivedType(tag: DW_TAG_member, name: "cursor_flash", scope: !4819, file: !4820, line: 75, baseType: !170, size: 32, offset: 3072)
!5083 = !DIDerivedType(tag: DW_TAG_member, name: "cursor_reset", scope: !4819, file: !4820, line: 76, baseType: !170, size: 32, offset: 3104)
!5084 = !DIDerivedType(tag: DW_TAG_member, name: "blank_state", scope: !4819, file: !4820, line: 77, baseType: !170, size: 32, offset: 3136)
!5085 = !DIDerivedType(tag: DW_TAG_member, name: "graphics", scope: !4819, file: !4820, line: 78, baseType: !170, size: 32, offset: 3168)
!5086 = !DIDerivedType(tag: DW_TAG_member, name: "save_graphics", scope: !4819, file: !4820, line: 79, baseType: !170, size: 32, offset: 3200)
!5087 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4819, file: !4820, line: 80, baseType: !170, size: 32, offset: 3232)
!5088 = !DIDerivedType(tag: DW_TAG_member, name: "rotate", scope: !4819, file: !4820, line: 81, baseType: !170, size: 32, offset: 3264)
!5089 = !DIDerivedType(tag: DW_TAG_member, name: "cur_rotate", scope: !4819, file: !4820, line: 82, baseType: !170, size: 32, offset: 3296)
!5090 = !DIDerivedType(tag: DW_TAG_member, name: "cursor_data", scope: !4819, file: !4820, line: 83, baseType: !512, size: 64, offset: 3328)
!5091 = !DIDerivedType(tag: DW_TAG_member, name: "fontbuffer", scope: !4819, file: !4820, line: 84, baseType: !397, size: 64, offset: 3392)
!5092 = !DIDerivedType(tag: DW_TAG_member, name: "fontdata", scope: !4819, file: !4820, line: 85, baseType: !397, size: 64, offset: 3456)
!5093 = !DIDerivedType(tag: DW_TAG_member, name: "cursor_src", scope: !4819, file: !4820, line: 86, baseType: !397, size: 64, offset: 3520)
!5094 = !DIDerivedType(tag: DW_TAG_member, name: "cursor_size", scope: !4819, file: !4820, line: 87, baseType: !338, size: 32, offset: 3584)
!5095 = !DIDerivedType(tag: DW_TAG_member, name: "fd_size", scope: !4819, file: !4820, line: 88, baseType: !338, size: 32, offset: 3616)
!5096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5097, size: 64)
!5097 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5098)
!5098 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !170)
!5099 = !{!5100, !5111, !5116, !5120, !5122, !5124, !5126, !0, !5128, !5133, !5135, !5137, !5139, !5141, !5143, !5145, !5147, !5150, !5152, !5154, !5156, !5158, !5160, !5162, !5164, !5166, !5168, !5170, !5172}
!5100 = !DIGlobalVariableExpression(var: !5101, expr: !DIExpression())
!5101 = distinct !DIGlobalVariable(name: "__setup_fb_console_setup", scope: !2, file: !3, line: 522, type: !5102, isLocal: true, isDefinition: true, align: 64)
!5102 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "obs_kernel_param", file: !5103, line: 241, size: 192, elements: !5104)
!5103 = !DIFile(filename: "./include/linux/init.h", directory: "/home/lizy2001/genbc/linux")
!5104 = !{!5105, !5106, !5110}
!5105 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !5102, file: !5103, line: 242, baseType: !335, size: 64)
!5106 = !DIDerivedType(tag: DW_TAG_member, name: "setup_func", scope: !5102, file: !5103, line: 243, baseType: !5107, size: 64, offset: 64)
!5107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5108, size: 64)
!5108 = !DISubroutineType(types: !5109)
!5109 = !{!170, !512}
!5110 = !DIDerivedType(tag: DW_TAG_member, name: "early", scope: !5102, file: !5103, line: 244, baseType: !170, size: 32, offset: 128)
!5111 = !DIGlobalVariableExpression(var: !5112, expr: !DIExpression())
!5112 = distinct !DIGlobalVariable(name: "fb_display", scope: !2, file: !3, line: 116, type: !5113, isLocal: true, isDefinition: true)
!5113 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5049, size: 64512, elements: !5114)
!5114 = !{!5115}
!5115 = !DISubrange(count: 63)
!5116 = !DIGlobalVariableExpression(var: !5117, expr: !DIExpression())
!5117 = distinct !DIGlobalVariable(name: "con2fb_map", scope: !2, file: !3, line: 118, type: !5118, isLocal: true, isDefinition: true)
!5118 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5119, size: 504, elements: !5114)
!5119 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!5120 = !DIGlobalVariableExpression(var: !5121, expr: !DIExpression())
!5121 = distinct !DIGlobalVariable(name: "con2fb_map_boot", scope: !2, file: !3, line: 119, type: !5118, isLocal: true, isDefinition: true)
!5122 = !DIGlobalVariableExpression(var: !5123, expr: !DIExpression())
!5123 = distinct !DIGlobalVariable(name: "first_fb_vc", scope: !2, file: !3, line: 126, type: !170, isLocal: true, isDefinition: true)
!5124 = !DIGlobalVariableExpression(var: !5125, expr: !DIExpression())
!5125 = distinct !DIGlobalVariable(name: "fbcon_has_console_bind", scope: !2, file: !3, line: 130, type: !170, isLocal: true, isDefinition: true)
!5126 = !DIGlobalVariableExpression(var: !5127, expr: !DIExpression())
!5127 = distinct !DIGlobalVariable(name: "fbcon_device", scope: !2, file: !3, line: 207, type: !2112, isLocal: true, isDefinition: true)
!5128 = !DIGlobalVariableExpression(var: !5129, expr: !DIExpression())
!5129 = distinct !DIGlobalVariable(name: "fontname", scope: !2, file: !3, line: 152, type: !5130, isLocal: true, isDefinition: true)
!5130 = !DICompositeType(tag: DW_TAG_array_type, baseType: !295, size: 320, elements: !5131)
!5131 = !{!5132}
!5132 = !DISubrange(count: 40)
!5133 = !DIGlobalVariableExpression(var: !5134, expr: !DIExpression())
!5134 = distinct !DIGlobalVariable(name: "map_override", scope: !2, file: !3, line: 133, type: !170, isLocal: true, isDefinition: true)
!5135 = !DIGlobalVariableExpression(var: !5136, expr: !DIExpression())
!5136 = distinct !DIGlobalVariable(name: "fbcon_is_default", scope: !2, file: !3, line: 128, type: !170, isLocal: true, isDefinition: true)
!5137 = !DIGlobalVariableExpression(var: !5138, expr: !DIExpression())
!5138 = distinct !DIGlobalVariable(name: "initial_rotation", scope: !2, file: !3, line: 158, type: !170, isLocal: true, isDefinition: true)
!5139 = !DIGlobalVariableExpression(var: !5140, expr: !DIExpression())
!5140 = distinct !DIGlobalVariable(name: "margin_color", scope: !2, file: !3, line: 160, type: !170, isLocal: true, isDefinition: true)
!5141 = !DIGlobalVariableExpression(var: !5142, expr: !DIExpression())
!5142 = distinct !DIGlobalVariable(name: "fbcon_cursor_noblink", scope: !2, file: !3, line: 166, type: !170, isLocal: true, isDefinition: true)
!5143 = !DIGlobalVariableExpression(var: !5144, expr: !DIExpression())
!5144 = distinct !DIGlobalVariable(name: "scrollback_max", scope: !2, file: !3, line: 1351, type: !170, isLocal: true, isDefinition: true)
!5145 = !DIGlobalVariableExpression(var: !5146, expr: !DIExpression())
!5146 = distinct !DIGlobalVariable(name: "scrollback_current", scope: !2, file: !3, line: 1352, type: !170, isLocal: true, isDefinition: true)
!5147 = !DIGlobalVariableExpression(var: !5148, expr: !DIExpression())
!5148 = distinct !DIGlobalVariable(name: "palette_red", scope: !2, file: !3, line: 2556, type: !5149, isLocal: true, isDefinition: true)
!5149 = !DICompositeType(tag: DW_TAG_array_type, baseType: !194, size: 256, elements: !296)
!5150 = !DIGlobalVariableExpression(var: !5151, expr: !DIExpression())
!5151 = distinct !DIGlobalVariable(name: "palette_green", scope: !2, file: !3, line: 2557, type: !5149, isLocal: true, isDefinition: true)
!5152 = !DIGlobalVariableExpression(var: !5153, expr: !DIExpression())
!5153 = distinct !DIGlobalVariable(name: "palette_blue", scope: !2, file: !3, line: 2558, type: !5149, isLocal: true, isDefinition: true)
!5154 = !DIGlobalVariableExpression(var: !5155, expr: !DIExpression())
!5155 = distinct !DIGlobalVariable(name: "palette_cmap", scope: !2, file: !3, line: 2560, type: !414, isLocal: true, isDefinition: true)
!5156 = !DIGlobalVariableExpression(var: !5157, expr: !DIExpression())
!5157 = distinct !DIGlobalVariable(name: "last_fb_vc", scope: !2, file: !3, line: 127, type: !170, isLocal: true, isDefinition: true)
!5158 = !DIGlobalVariableExpression(var: !5159, expr: !DIExpression())
!5159 = distinct !DIGlobalVariable(name: "logo_shown", scope: !2, file: !3, line: 124, type: !170, isLocal: true, isDefinition: true)
!5160 = !DIGlobalVariableExpression(var: !5161, expr: !DIExpression())
!5161 = distinct !DIGlobalVariable(name: "logo_lines", scope: !2, file: !3, line: 121, type: !170, isLocal: true, isDefinition: true)
!5162 = !DIGlobalVariableExpression(var: !5163, expr: !DIExpression())
!5163 = distinct !DIGlobalVariable(name: "info_idx", scope: !2, file: !3, line: 155, type: !170, isLocal: true, isDefinition: true)
!5164 = !DIGlobalVariableExpression(var: !5165, expr: !DIExpression())
!5165 = distinct !DIGlobalVariable(name: "primary_device", scope: !2, file: !3, line: 129, type: !170, isLocal: true, isDefinition: true)
!5166 = !DIGlobalVariableExpression(var: !5167, expr: !DIExpression())
!5167 = distinct !DIGlobalVariable(name: "fb_con", scope: !2, file: !3, line: 3099, type: !4857, isLocal: true, isDefinition: true)
!5168 = !DIGlobalVariableExpression(var: !5169, expr: !DIExpression())
!5169 = distinct !DIGlobalVariable(name: "scrollback_phys_max", scope: !2, file: !3, line: 1350, type: !170, isLocal: true, isDefinition: true)
!5170 = !DIGlobalVariableExpression(var: !5171, expr: !DIExpression())
!5171 = distinct !DIGlobalVariable(name: "fbcon_has_sysfs", scope: !2, file: !3, line: 159, type: !170, isLocal: true, isDefinition: true)
!5172 = !DIGlobalVariableExpression(var: !5173, expr: !DIExpression())
!5173 = distinct !DIGlobalVariable(name: "device_attrs", scope: !2, file: !3, line: 3246, type: !5174, isLocal: true, isDefinition: true)
!5174 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5175, size: 768, elements: !513)
!5175 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_attribute", file: !85, line: 99, size: 256, elements: !5176)
!5176 = !{!5177, !5178, !5183}
!5177 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !5175, file: !85, line: 100, baseType: !548, size: 128)
!5178 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !5175, file: !85, line: 101, baseType: !5179, size: 64, offset: 128)
!5179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5180, size: 64)
!5180 = !DISubroutineType(types: !5181)
!5181 = !{!543, !2112, !5182, !512}
!5182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5175, size: 64)
!5183 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !5175, file: !85, line: 103, baseType: !5184, size: 64, offset: 192)
!5184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5185, size: 64)
!5185 = !DISubroutineType(types: !5186)
!5186 = !{!543, !2112, !5182, !335, !557}
!5187 = !DICompositeType(tag: DW_TAG_array_type, baseType: !336, size: 56, elements: !5188)
!5188 = !{!5189}
!5189 = !DISubrange(count: 7)
!5190 = !{i32 7, !"Dwarf Version", i32 4}
!5191 = !{i32 2, !"Debug Info Version", i32 3}
!5192 = !{i32 1, !"wchar_size", i32 2}
!5193 = !{i32 1, !"Code Model", i32 2}
!5194 = !{!"clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)"}
!5195 = distinct !DISubprogram(name: "fb_console_setup", scope: !3, file: !3, line: 437, type: !5108, scopeLine: 438, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !241)
!5196 = !DILocalVariable(name: "this_opt", arg: 1, scope: !5195, file: !3, line: 437, type: !512)
!5197 = !DILocation(line: 437, column: 42, scope: !5195)
!5198 = !DILocalVariable(name: "options", scope: !5195, file: !3, line: 439, type: !512)
!5199 = !DILocation(line: 439, column: 8, scope: !5195)
!5200 = !DILocalVariable(name: "i", scope: !5195, file: !3, line: 440, type: !170)
!5201 = !DILocation(line: 440, column: 6, scope: !5195)
!5202 = !DILocalVariable(name: "j", scope: !5195, file: !3, line: 440, type: !170)
!5203 = !DILocation(line: 440, column: 9, scope: !5195)
!5204 = !DILocation(line: 442, column: 7, scope: !5205)
!5205 = distinct !DILexicalBlock(scope: !5195, file: !3, line: 442, column: 6)
!5206 = !DILocation(line: 442, column: 16, scope: !5205)
!5207 = !DILocation(line: 442, column: 21, scope: !5205)
!5208 = !DILocation(line: 442, column: 20, scope: !5205)
!5209 = !DILocation(line: 442, column: 6, scope: !5195)
!5210 = !DILocation(line: 443, column: 3, scope: !5205)
!5211 = !DILocation(line: 445, column: 2, scope: !5195)
!5212 = !DILocation(line: 445, column: 20, scope: !5195)
!5213 = !DILocation(line: 445, column: 18, scope: !5195)
!5214 = !DILocation(line: 445, column: 44, scope: !5195)
!5215 = !DILocation(line: 446, column: 16, scope: !5216)
!5216 = distinct !DILexicalBlock(scope: !5217, file: !3, line: 446, column: 7)
!5217 = distinct !DILexicalBlock(scope: !5195, file: !3, line: 445, column: 53)
!5218 = !DILocation(line: 446, column: 8, scope: !5216)
!5219 = !DILocation(line: 446, column: 7, scope: !5217)
!5220 = !DILocation(line: 447, column: 22, scope: !5221)
!5221 = distinct !DILexicalBlock(scope: !5216, file: !3, line: 446, column: 38)
!5222 = !DILocation(line: 447, column: 30, scope: !5221)
!5223 = !DILocation(line: 447, column: 4, scope: !5221)
!5224 = !DILocation(line: 448, column: 4, scope: !5221)
!5225 = distinct !{!5225, !5211, !5226}
!5226 = !DILocation(line: 518, column: 2, scope: !5195)
!5227 = !DILocation(line: 451, column: 16, scope: !5228)
!5228 = distinct !DILexicalBlock(scope: !5217, file: !3, line: 451, column: 7)
!5229 = !DILocation(line: 451, column: 8, scope: !5228)
!5230 = !DILocation(line: 451, column: 7, scope: !5217)
!5231 = !DILocation(line: 452, column: 4, scope: !5232)
!5232 = distinct !DILexicalBlock(scope: !5228, file: !3, line: 451, column: 45)
!5233 = !DILocation(line: 453, column: 4, scope: !5232)
!5234 = !DILocation(line: 456, column: 16, scope: !5235)
!5235 = distinct !DILexicalBlock(scope: !5217, file: !3, line: 456, column: 7)
!5236 = !DILocation(line: 456, column: 8, scope: !5235)
!5237 = !DILocation(line: 456, column: 7, scope: !5217)
!5238 = !DILocation(line: 457, column: 12, scope: !5239)
!5239 = distinct !DILexicalBlock(scope: !5235, file: !3, line: 456, column: 37)
!5240 = !DILocation(line: 458, column: 9, scope: !5241)
!5241 = distinct !DILexicalBlock(scope: !5239, file: !3, line: 458, column: 8)
!5242 = !DILocation(line: 458, column: 8, scope: !5241)
!5243 = !DILocation(line: 458, column: 8, scope: !5239)
!5244 = !DILocation(line: 459, column: 12, scope: !5245)
!5245 = distinct !DILexicalBlock(scope: !5246, file: !3, line: 459, column: 5)
!5246 = distinct !DILexicalBlock(scope: !5241, file: !3, line: 458, column: 18)
!5247 = !DILocation(line: 459, column: 19, scope: !5245)
!5248 = !DILocation(line: 459, column: 10, scope: !5245)
!5249 = !DILocation(line: 459, column: 24, scope: !5250)
!5250 = distinct !DILexicalBlock(scope: !5245, file: !3, line: 459, column: 5)
!5251 = !DILocation(line: 459, column: 26, scope: !5250)
!5252 = !DILocation(line: 459, column: 5, scope: !5245)
!5253 = !DILocation(line: 460, column: 11, scope: !5254)
!5254 = distinct !DILexicalBlock(scope: !5255, file: !3, line: 460, column: 10)
!5255 = distinct !DILexicalBlock(scope: !5250, file: !3, line: 459, column: 50)
!5256 = !DILocation(line: 460, column: 19, scope: !5254)
!5257 = !DILocation(line: 460, column: 10, scope: !5255)
!5258 = !DILocation(line: 461, column: 9, scope: !5254)
!5259 = !DILocation(line: 461, column: 7, scope: !5254)
!5260 = !DILocation(line: 463, column: 8, scope: !5255)
!5261 = !DILocation(line: 463, column: 17, scope: !5255)
!5262 = !DILocation(line: 463, column: 20, scope: !5255)
!5263 = !DILocation(line: 463, column: 26, scope: !5255)
!5264 = !DILocation(line: 463, column: 7, scope: !5255)
!5265 = !DILocation(line: 462, column: 22, scope: !5255)
!5266 = !DILocation(line: 462, column: 6, scope: !5255)
!5267 = !DILocation(line: 462, column: 25, scope: !5255)
!5268 = !DILocation(line: 464, column: 5, scope: !5255)
!5269 = !DILocation(line: 459, column: 46, scope: !5250)
!5270 = !DILocation(line: 459, column: 5, scope: !5250)
!5271 = distinct !{!5271, !5252, !5272}
!5272 = !DILocation(line: 464, column: 5, scope: !5245)
!5273 = !DILocation(line: 466, column: 5, scope: !5246)
!5274 = !DILocation(line: 467, column: 4, scope: !5246)
!5275 = !DILocation(line: 468, column: 4, scope: !5239)
!5276 = !DILocation(line: 471, column: 16, scope: !5277)
!5277 = distinct !DILexicalBlock(scope: !5217, file: !3, line: 471, column: 7)
!5278 = !DILocation(line: 471, column: 8, scope: !5277)
!5279 = !DILocation(line: 471, column: 7, scope: !5217)
!5280 = !DILocation(line: 472, column: 12, scope: !5281)
!5281 = distinct !DILexicalBlock(scope: !5277, file: !3, line: 471, column: 36)
!5282 = !DILocation(line: 473, column: 9, scope: !5283)
!5283 = distinct !DILexicalBlock(scope: !5281, file: !3, line: 473, column: 8)
!5284 = !DILocation(line: 473, column: 8, scope: !5283)
!5285 = !DILocation(line: 473, column: 8, scope: !5281)
!5286 = !DILocation(line: 474, column: 34, scope: !5283)
!5287 = !DILocation(line: 474, column: 19, scope: !5283)
!5288 = !DILocation(line: 474, column: 57, scope: !5283)
!5289 = !DILocation(line: 474, column: 17, scope: !5283)
!5290 = !DILocation(line: 474, column: 5, scope: !5283)
!5291 = !DILocation(line: 475, column: 8, scope: !5292)
!5292 = distinct !DILexicalBlock(scope: !5281, file: !3, line: 475, column: 8)
!5293 = !DILocation(line: 475, column: 20, scope: !5292)
!5294 = !DILocation(line: 475, column: 8, scope: !5281)
!5295 = !DILocation(line: 476, column: 17, scope: !5292)
!5296 = !DILocation(line: 476, column: 5, scope: !5292)
!5297 = !DILocation(line: 477, column: 16, scope: !5298)
!5298 = distinct !DILexicalBlock(scope: !5281, file: !3, line: 477, column: 8)
!5299 = !DILocation(line: 477, column: 8, scope: !5298)
!5300 = !DILocation(line: 477, column: 19, scope: !5298)
!5301 = !DILocation(line: 477, column: 8, scope: !5281)
!5302 = !DILocation(line: 478, column: 33, scope: !5298)
!5303 = !DILocation(line: 478, column: 18, scope: !5298)
!5304 = !DILocation(line: 478, column: 56, scope: !5298)
!5305 = !DILocation(line: 478, column: 16, scope: !5298)
!5306 = !DILocation(line: 478, column: 5, scope: !5298)
!5307 = !DILocation(line: 479, column: 21, scope: !5281)
!5308 = !DILocation(line: 480, column: 4, scope: !5281)
!5309 = !DILocation(line: 483, column: 16, scope: !5310)
!5310 = distinct !DILexicalBlock(scope: !5217, file: !3, line: 483, column: 7)
!5311 = !DILocation(line: 483, column: 8, scope: !5310)
!5312 = !DILocation(line: 483, column: 7, scope: !5217)
!5313 = !DILocation(line: 484, column: 12, scope: !5314)
!5314 = distinct !DILexicalBlock(scope: !5310, file: !3, line: 483, column: 40)
!5315 = !DILocation(line: 485, column: 9, scope: !5316)
!5316 = distinct !DILexicalBlock(scope: !5314, file: !3, line: 485, column: 8)
!5317 = !DILocation(line: 485, column: 8, scope: !5316)
!5318 = !DILocation(line: 485, column: 8, scope: !5314)
!5319 = !DILocation(line: 486, column: 39, scope: !5316)
!5320 = !DILocation(line: 486, column: 24, scope: !5316)
!5321 = !DILocation(line: 486, column: 22, scope: !5316)
!5322 = !DILocation(line: 486, column: 5, scope: !5316)
!5323 = !DILocation(line: 487, column: 8, scope: !5324)
!5324 = distinct !DILexicalBlock(scope: !5314, file: !3, line: 487, column: 8)
!5325 = !DILocation(line: 487, column: 25, scope: !5324)
!5326 = !DILocation(line: 487, column: 8, scope: !5314)
!5327 = !DILocation(line: 488, column: 22, scope: !5324)
!5328 = !DILocation(line: 488, column: 5, scope: !5324)
!5329 = !DILocation(line: 489, column: 4, scope: !5314)
!5330 = !DILocation(line: 492, column: 16, scope: !5331)
!5331 = distinct !DILexicalBlock(scope: !5217, file: !3, line: 492, column: 7)
!5332 = !DILocation(line: 492, column: 8, scope: !5331)
!5333 = !DILocation(line: 492, column: 7, scope: !5217)
!5334 = !DILocation(line: 493, column: 12, scope: !5335)
!5335 = distinct !DILexicalBlock(scope: !5331, file: !3, line: 492, column: 40)
!5336 = !DILocation(line: 494, column: 9, scope: !5337)
!5337 = distinct !DILexicalBlock(scope: !5335, file: !3, line: 494, column: 8)
!5338 = !DILocation(line: 494, column: 8, scope: !5337)
!5339 = !DILocation(line: 494, column: 8, scope: !5335)
!5340 = !DILocation(line: 495, column: 35, scope: !5337)
!5341 = !DILocation(line: 495, column: 20, scope: !5337)
!5342 = !DILocation(line: 495, column: 18, scope: !5337)
!5343 = !DILocation(line: 495, column: 5, scope: !5337)
!5344 = !DILocation(line: 496, column: 4, scope: !5335)
!5345 = !DILocation(line: 505, column: 16, scope: !5346)
!5346 = distinct !DILexicalBlock(scope: !5217, file: !3, line: 505, column: 7)
!5347 = !DILocation(line: 505, column: 8, scope: !5346)
!5348 = !DILocation(line: 505, column: 7, scope: !5217)
!5349 = !DILocation(line: 506, column: 12, scope: !5350)
!5350 = distinct !DILexicalBlock(scope: !5346, file: !3, line: 505, column: 42)
!5351 = !DILocation(line: 507, column: 16, scope: !5352)
!5352 = distinct !DILexicalBlock(scope: !5350, file: !3, line: 507, column: 8)
!5353 = !DILocation(line: 507, column: 9, scope: !5352)
!5354 = !DILocation(line: 507, column: 8, scope: !5350)
!5355 = !DILocation(line: 508, column: 20, scope: !5352)
!5356 = !DILocation(line: 508, column: 5, scope: !5352)
!5357 = !DILocation(line: 509, column: 4, scope: !5350)
!5358 = !DILocation(line: 512, column: 16, scope: !5359)
!5359 = distinct !DILexicalBlock(scope: !5217, file: !3, line: 512, column: 7)
!5360 = !DILocation(line: 512, column: 8, scope: !5359)
!5361 = !DILocation(line: 512, column: 7, scope: !5217)
!5362 = !DILocation(line: 513, column: 12, scope: !5363)
!5363 = distinct !DILexicalBlock(scope: !5359, file: !3, line: 512, column: 45)
!5364 = !DILocation(line: 514, column: 9, scope: !5365)
!5365 = distinct !DILexicalBlock(scope: !5363, file: !3, line: 514, column: 8)
!5366 = !DILocation(line: 514, column: 8, scope: !5365)
!5367 = !DILocation(line: 514, column: 8, scope: !5363)
!5368 = !DILocation(line: 515, column: 35, scope: !5365)
!5369 = !DILocation(line: 515, column: 21, scope: !5365)
!5370 = !DILocation(line: 515, column: 19, scope: !5365)
!5371 = !DILocation(line: 515, column: 5, scope: !5365)
!5372 = !DILocation(line: 516, column: 4, scope: !5363)
!5373 = !DILocation(line: 519, column: 2, scope: !5195)
!5374 = !DILocation(line: 520, column: 1, scope: !5195)
!5375 = distinct !DISubprogram(name: "fbcon_suspended", scope: !3, file: !3, line: 2646, type: !4580, scopeLine: 2647, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !241)
!5376 = !DILocalVariable(name: "info", arg: 1, scope: !5375, file: !3, line: 2646, type: !199)
!5377 = !DILocation(line: 2646, column: 38, scope: !5375)
!5378 = !DILocalVariable(name: "vc", scope: !5375, file: !3, line: 2648, type: !4826)
!5379 = !DILocation(line: 2648, column: 18, scope: !5375)
!5380 = !DILocalVariable(name: "ops", scope: !5375, file: !3, line: 2649, type: !4818)
!5381 = !DILocation(line: 2649, column: 20, scope: !5375)
!5382 = !DILocation(line: 2649, column: 26, scope: !5375)
!5383 = !DILocation(line: 2649, column: 32, scope: !5375)
!5384 = !DILocation(line: 2651, column: 7, scope: !5385)
!5385 = distinct !DILexicalBlock(scope: !5375, file: !3, line: 2651, column: 6)
!5386 = !DILocation(line: 2651, column: 11, scope: !5385)
!5387 = !DILocation(line: 2651, column: 14, scope: !5385)
!5388 = !DILocation(line: 2651, column: 19, scope: !5385)
!5389 = !DILocation(line: 2651, column: 27, scope: !5385)
!5390 = !DILocation(line: 2651, column: 6, scope: !5375)
!5391 = !DILocation(line: 2652, column: 3, scope: !5385)
!5392 = !DILocation(line: 2653, column: 15, scope: !5375)
!5393 = !DILocation(line: 2653, column: 20, scope: !5375)
!5394 = !DILocation(line: 2653, column: 7, scope: !5375)
!5395 = !DILocation(line: 2653, column: 29, scope: !5375)
!5396 = !DILocation(line: 2653, column: 5, scope: !5375)
!5397 = !DILocation(line: 2656, column: 15, scope: !5375)
!5398 = !DILocation(line: 2656, column: 2, scope: !5375)
!5399 = !DILocation(line: 2657, column: 1, scope: !5375)
!5400 = distinct !DISubprogram(name: "fbcon_cursor", scope: !3, file: !3, line: 1328, type: !4867, scopeLine: 1329, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !241)
!5401 = !DILocalVariable(name: "m", arg: 1, scope: !5402, file: !5403, line: 363, type: !3713)
!5402 = distinct !DISubprogram(name: "msecs_to_jiffies", scope: !5403, file: !5403, line: 363, type: !5404, scopeLine: 364, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !241)
!5403 = !DIFile(filename: "./include/linux/jiffies.h", directory: "/home/lizy2001/genbc/linux")
!5404 = !DISubroutineType(types: !5405)
!5405 = !{!299, !3713}
!5406 = !DILocation(line: 363, column: 74, scope: !5402, inlinedAt: !5407)
!5407 = distinct !DILocation(line: 1334, column: 27, scope: !5400)
!5408 = !DILocalVariable(name: "vc", arg: 1, scope: !5400, file: !3, line: 1328, type: !4826)
!5409 = !DILocation(line: 1328, column: 42, scope: !5400)
!5410 = !DILocalVariable(name: "mode", arg: 2, scope: !5400, file: !3, line: 1328, type: !170)
!5411 = !DILocation(line: 1328, column: 50, scope: !5400)
!5412 = !DILocalVariable(name: "info", scope: !5400, file: !3, line: 1330, type: !199)
!5413 = !DILocation(line: 1330, column: 18, scope: !5400)
!5414 = !DILocation(line: 1330, column: 50, scope: !5400)
!5415 = !DILocation(line: 1330, column: 54, scope: !5400)
!5416 = !DILocation(line: 1330, column: 39, scope: !5400)
!5417 = !DILocation(line: 1330, column: 25, scope: !5400)
!5418 = !DILocalVariable(name: "ops", scope: !5400, file: !3, line: 1331, type: !4818)
!5419 = !DILocation(line: 1331, column: 20, scope: !5400)
!5420 = !DILocation(line: 1331, column: 26, scope: !5400)
!5421 = !DILocation(line: 1331, column: 32, scope: !5400)
!5422 = !DILocalVariable(name: "c", scope: !5400, file: !3, line: 1332, type: !170)
!5423 = !DILocation(line: 1332, column: 7, scope: !5400)
!5424 = !DILocation(line: 1332, column: 11, scope: !5400)
!5425 = !DILocation(line: 1334, column: 44, scope: !5400)
!5426 = !DILocation(line: 1334, column: 48, scope: !5400)
!5427 = !DILocation(line: 365, column: 27, scope: !5428, inlinedAt: !5407)
!5428 = distinct !DILexicalBlock(scope: !5402, file: !5403, line: 365, column: 6)
!5429 = !DILocation(line: 365, column: 6, scope: !5428, inlinedAt: !5407)
!5430 = !DILocation(line: 365, column: 6, scope: !5402, inlinedAt: !5407)
!5431 = !DILocation(line: 366, column: 12, scope: !5432, inlinedAt: !5407)
!5432 = distinct !DILexicalBlock(scope: !5433, file: !5403, line: 366, column: 7)
!5433 = distinct !DILexicalBlock(scope: !5428, file: !5403, line: 365, column: 31)
!5434 = !DILocation(line: 366, column: 14, scope: !5432, inlinedAt: !5407)
!5435 = !DILocation(line: 366, column: 7, scope: !5433, inlinedAt: !5407)
!5436 = !DILocation(line: 367, column: 4, scope: !5432, inlinedAt: !5407)
!5437 = !DILocation(line: 368, column: 28, scope: !5433, inlinedAt: !5407)
!5438 = !DILocation(line: 368, column: 10, scope: !5433, inlinedAt: !5407)
!5439 = !DILocation(line: 368, column: 3, scope: !5433, inlinedAt: !5407)
!5440 = !DILocation(line: 370, column: 29, scope: !5441, inlinedAt: !5407)
!5441 = distinct !DILexicalBlock(scope: !5428, file: !5403, line: 369, column: 9)
!5442 = !DILocation(line: 370, column: 10, scope: !5441, inlinedAt: !5407)
!5443 = !DILocation(line: 370, column: 3, scope: !5441, inlinedAt: !5407)
!5444 = !DILocation(line: 372, column: 1, scope: !5402, inlinedAt: !5407)
!5445 = !DILocation(line: 1334, column: 27, scope: !5400)
!5446 = !DILocation(line: 1334, column: 2, scope: !5400)
!5447 = !DILocation(line: 1334, column: 7, scope: !5400)
!5448 = !DILocation(line: 1334, column: 25, scope: !5400)
!5449 = !DILocation(line: 1336, column: 24, scope: !5450)
!5450 = distinct !DILexicalBlock(scope: !5400, file: !3, line: 1336, column: 6)
!5451 = !DILocation(line: 1336, column: 28, scope: !5450)
!5452 = !DILocation(line: 1336, column: 6, scope: !5450)
!5453 = !DILocation(line: 1336, column: 34, scope: !5450)
!5454 = !DILocation(line: 1336, column: 37, scope: !5450)
!5455 = !DILocation(line: 1336, column: 41, scope: !5450)
!5456 = !DILocation(line: 1336, column: 50, scope: !5450)
!5457 = !DILocation(line: 1336, column: 6, scope: !5400)
!5458 = !DILocation(line: 1337, column: 3, scope: !5450)
!5459 = !DILocation(line: 1339, column: 6, scope: !5460)
!5460 = distinct !DILexicalBlock(scope: !5400, file: !3, line: 1339, column: 6)
!5461 = !DILocation(line: 1339, column: 10, scope: !5460)
!5462 = !DILocation(line: 1339, column: 25, scope: !5460)
!5463 = !DILocation(line: 1339, column: 6, scope: !5400)
!5464 = !DILocation(line: 1340, column: 26, scope: !5460)
!5465 = !DILocation(line: 1340, column: 3, scope: !5460)
!5466 = !DILocation(line: 1342, column: 26, scope: !5460)
!5467 = !DILocation(line: 1342, column: 3, scope: !5460)
!5468 = !DILocation(line: 1344, column: 23, scope: !5400)
!5469 = !DILocation(line: 1344, column: 28, scope: !5400)
!5470 = !DILocation(line: 1344, column: 22, scope: !5400)
!5471 = !DILocation(line: 1344, column: 2, scope: !5400)
!5472 = !DILocation(line: 1344, column: 7, scope: !5400)
!5473 = !DILocation(line: 1344, column: 20, scope: !5400)
!5474 = !DILocation(line: 1346, column: 2, scope: !5400)
!5475 = !DILocation(line: 1346, column: 7, scope: !5400)
!5476 = !DILocation(line: 1346, column: 14, scope: !5400)
!5477 = !DILocation(line: 1346, column: 18, scope: !5400)
!5478 = !DILocation(line: 1346, column: 24, scope: !5400)
!5479 = !DILocation(line: 1346, column: 40, scope: !5400)
!5480 = !DILocation(line: 1346, column: 44, scope: !5400)
!5481 = !DILocation(line: 1346, column: 50, scope: !5400)
!5482 = !DILocation(line: 1346, column: 30, scope: !5400)
!5483 = !DILocation(line: 1347, column: 17, scope: !5400)
!5484 = !DILocation(line: 1347, column: 21, scope: !5400)
!5485 = !DILocation(line: 1347, column: 27, scope: !5400)
!5486 = !DILocation(line: 1347, column: 7, scope: !5400)
!5487 = !DILocation(line: 1348, column: 1, scope: !5400)
!5488 = distinct !DISubprogram(name: "fbcon_resumed", scope: !3, file: !3, line: 2659, type: !4580, scopeLine: 2660, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !241)
!5489 = !DILocalVariable(name: "info", arg: 1, scope: !5488, file: !3, line: 2659, type: !199)
!5490 = !DILocation(line: 2659, column: 36, scope: !5488)
!5491 = !DILocalVariable(name: "vc", scope: !5488, file: !3, line: 2661, type: !4826)
!5492 = !DILocation(line: 2661, column: 18, scope: !5488)
!5493 = !DILocalVariable(name: "ops", scope: !5488, file: !3, line: 2662, type: !4818)
!5494 = !DILocation(line: 2662, column: 20, scope: !5488)
!5495 = !DILocation(line: 2662, column: 26, scope: !5488)
!5496 = !DILocation(line: 2662, column: 32, scope: !5488)
!5497 = !DILocation(line: 2664, column: 7, scope: !5498)
!5498 = distinct !DILexicalBlock(scope: !5488, file: !3, line: 2664, column: 6)
!5499 = !DILocation(line: 2664, column: 11, scope: !5498)
!5500 = !DILocation(line: 2664, column: 14, scope: !5498)
!5501 = !DILocation(line: 2664, column: 19, scope: !5498)
!5502 = !DILocation(line: 2664, column: 27, scope: !5498)
!5503 = !DILocation(line: 2664, column: 6, scope: !5488)
!5504 = !DILocation(line: 2665, column: 3, scope: !5498)
!5505 = !DILocation(line: 2666, column: 15, scope: !5488)
!5506 = !DILocation(line: 2666, column: 20, scope: !5488)
!5507 = !DILocation(line: 2666, column: 7, scope: !5488)
!5508 = !DILocation(line: 2666, column: 29, scope: !5488)
!5509 = !DILocation(line: 2666, column: 5, scope: !5488)
!5510 = !DILocation(line: 2668, column: 2, scope: !5488)
!5511 = !DILocation(line: 2669, column: 1, scope: !5488)
!5512 = distinct !DISubprogram(name: "fbcon_update_vcs", scope: !3, file: !3, line: 2745, type: !5513, scopeLine: 2746, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !241)
!5513 = !DISubroutineType(types: !5514)
!5514 = !{null, !199, !720}
!5515 = !DILocalVariable(name: "info", arg: 1, scope: !5512, file: !3, line: 2745, type: !199)
!5516 = !DILocation(line: 2745, column: 39, scope: !5512)
!5517 = !DILocalVariable(name: "all", arg: 2, scope: !5512, file: !3, line: 2745, type: !720)
!5518 = !DILocation(line: 2745, column: 50, scope: !5512)
!5519 = !DILocation(line: 2747, column: 6, scope: !5520)
!5520 = distinct !DILexicalBlock(scope: !5512, file: !3, line: 2747, column: 6)
!5521 = !DILocation(line: 2747, column: 6, scope: !5512)
!5522 = !DILocation(line: 2748, column: 21, scope: !5520)
!5523 = !DILocation(line: 2748, column: 3, scope: !5520)
!5524 = !DILocation(line: 2750, column: 21, scope: !5520)
!5525 = !DILocation(line: 2750, column: 3, scope: !5520)
!5526 = !DILocation(line: 2751, column: 1, scope: !5512)
!5527 = distinct !DISubprogram(name: "fbcon_set_all_vcs", scope: !3, file: !3, line: 2709, type: !4580, scopeLine: 2710, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !241)
!5528 = !DILocalVariable(name: "info", arg: 1, scope: !5527, file: !3, line: 2709, type: !199)
!5529 = !DILocation(line: 2709, column: 47, scope: !5527)
!5530 = !DILocalVariable(name: "ops", scope: !5527, file: !3, line: 2711, type: !4818)
!5531 = !DILocation(line: 2711, column: 20, scope: !5527)
!5532 = !DILocation(line: 2711, column: 26, scope: !5527)
!5533 = !DILocation(line: 2711, column: 32, scope: !5527)
!5534 = !DILocalVariable(name: "vc", scope: !5527, file: !3, line: 2712, type: !4826)
!5535 = !DILocation(line: 2712, column: 18, scope: !5527)
!5536 = !DILocalVariable(name: "p", scope: !5527, file: !3, line: 2713, type: !5048)
!5537 = !DILocation(line: 2713, column: 24, scope: !5527)
!5538 = !DILocalVariable(name: "i", scope: !5527, file: !3, line: 2714, type: !170)
!5539 = !DILocation(line: 2714, column: 6, scope: !5527)
!5540 = !DILocalVariable(name: "rows", scope: !5527, file: !3, line: 2714, type: !170)
!5541 = !DILocation(line: 2714, column: 9, scope: !5527)
!5542 = !DILocalVariable(name: "cols", scope: !5527, file: !3, line: 2714, type: !170)
!5543 = !DILocation(line: 2714, column: 15, scope: !5527)
!5544 = !DILocalVariable(name: "fg", scope: !5527, file: !3, line: 2714, type: !170)
!5545 = !DILocation(line: 2714, column: 21, scope: !5527)
!5546 = !DILocation(line: 2716, column: 7, scope: !5547)
!5547 = distinct !DILexicalBlock(scope: !5527, file: !3, line: 2716, column: 6)
!5548 = !DILocation(line: 2716, column: 11, scope: !5547)
!5549 = !DILocation(line: 2716, column: 14, scope: !5547)
!5550 = !DILocation(line: 2716, column: 19, scope: !5547)
!5551 = !DILocation(line: 2716, column: 27, scope: !5547)
!5552 = !DILocation(line: 2716, column: 6, scope: !5527)
!5553 = !DILocation(line: 2717, column: 3, scope: !5547)
!5554 = !DILocation(line: 2719, column: 11, scope: !5555)
!5555 = distinct !DILexicalBlock(scope: !5527, file: !3, line: 2719, column: 2)
!5556 = !DILocation(line: 2719, column: 9, scope: !5555)
!5557 = !DILocation(line: 2719, column: 7, scope: !5555)
!5558 = !DILocation(line: 2719, column: 24, scope: !5559)
!5559 = distinct !DILexicalBlock(scope: !5555, file: !3, line: 2719, column: 2)
!5560 = !DILocation(line: 2719, column: 29, scope: !5559)
!5561 = !DILocation(line: 2719, column: 26, scope: !5559)
!5562 = !DILocation(line: 2719, column: 2, scope: !5555)
!5563 = !DILocation(line: 2720, column: 16, scope: !5564)
!5564 = distinct !DILexicalBlock(scope: !5559, file: !3, line: 2719, column: 46)
!5565 = !DILocation(line: 2720, column: 8, scope: !5564)
!5566 = !DILocation(line: 2720, column: 19, scope: !5564)
!5567 = !DILocation(line: 2720, column: 6, scope: !5564)
!5568 = !DILocation(line: 2721, column: 8, scope: !5569)
!5569 = distinct !DILexicalBlock(scope: !5564, file: !3, line: 2721, column: 7)
!5570 = !DILocation(line: 2721, column: 11, scope: !5569)
!5571 = !DILocation(line: 2721, column: 14, scope: !5569)
!5572 = !DILocation(line: 2721, column: 18, scope: !5569)
!5573 = !DILocation(line: 2721, column: 26, scope: !5569)
!5574 = !DILocation(line: 2721, column: 37, scope: !5569)
!5575 = !DILocation(line: 2722, column: 32, scope: !5569)
!5576 = !DILocation(line: 2722, column: 21, scope: !5569)
!5577 = !DILocation(line: 2722, column: 7, scope: !5569)
!5578 = !DILocation(line: 2722, column: 39, scope: !5569)
!5579 = !DILocation(line: 2722, column: 36, scope: !5569)
!5580 = !DILocation(line: 2721, column: 7, scope: !5564)
!5581 = !DILocation(line: 2723, column: 4, scope: !5569)
!5582 = !DILocation(line: 2725, column: 22, scope: !5583)
!5583 = distinct !DILexicalBlock(scope: !5564, file: !3, line: 2725, column: 7)
!5584 = !DILocation(line: 2725, column: 7, scope: !5583)
!5585 = !DILocation(line: 2725, column: 7, scope: !5564)
!5586 = !DILocation(line: 2726, column: 9, scope: !5587)
!5587 = distinct !DILexicalBlock(scope: !5583, file: !3, line: 2725, column: 27)
!5588 = !DILocation(line: 2726, column: 7, scope: !5587)
!5589 = !DILocation(line: 2727, column: 4, scope: !5587)
!5590 = !DILocation(line: 2730, column: 19, scope: !5564)
!5591 = !DILocation(line: 2730, column: 23, scope: !5564)
!5592 = !DILocation(line: 2730, column: 8, scope: !5564)
!5593 = !DILocation(line: 2730, column: 5, scope: !5564)
!5594 = !DILocation(line: 2731, column: 21, scope: !5564)
!5595 = !DILocation(line: 2731, column: 25, scope: !5564)
!5596 = !DILocation(line: 2731, column: 3, scope: !5564)
!5597 = !DILocation(line: 2732, column: 18, scope: !5564)
!5598 = !DILocation(line: 2732, column: 22, scope: !5564)
!5599 = !DILocation(line: 2732, column: 28, scope: !5564)
!5600 = !DILocation(line: 2732, column: 33, scope: !5564)
!5601 = !DILocation(line: 2732, column: 3, scope: !5564)
!5602 = !DILocalVariable(name: "_r", scope: !5603, file: !3, line: 2733, type: !253)
!5603 = distinct !DILexicalBlock(scope: !5564, file: !3, line: 2733, column: 10)
!5604 = !DILocation(line: 2733, column: 10, scope: !5603)
!5605 = !DILocalVariable(name: "_v", scope: !5603, file: !3, line: 2733, type: !253)
!5606 = !DILocation(line: 2733, column: 8, scope: !5564)
!5607 = !DILocalVariable(name: "_r", scope: !5608, file: !3, line: 2734, type: !253)
!5608 = distinct !DILexicalBlock(scope: !5564, file: !3, line: 2734, column: 10)
!5609 = !DILocation(line: 2734, column: 10, scope: !5608)
!5610 = !DILocalVariable(name: "_v", scope: !5608, file: !3, line: 2734, type: !253)
!5611 = !DILocation(line: 2734, column: 8, scope: !5564)
!5612 = !DILocation(line: 2735, column: 11, scope: !5564)
!5613 = !DILocation(line: 2735, column: 15, scope: !5564)
!5614 = !DILocation(line: 2735, column: 23, scope: !5564)
!5615 = !DILocation(line: 2735, column: 8, scope: !5564)
!5616 = !DILocation(line: 2736, column: 11, scope: !5564)
!5617 = !DILocation(line: 2736, column: 15, scope: !5564)
!5618 = !DILocation(line: 2736, column: 23, scope: !5564)
!5619 = !DILocation(line: 2736, column: 8, scope: !5564)
!5620 = !DILocation(line: 2737, column: 13, scope: !5564)
!5621 = !DILocation(line: 2737, column: 17, scope: !5564)
!5622 = !DILocation(line: 2737, column: 23, scope: !5564)
!5623 = !DILocation(line: 2737, column: 3, scope: !5564)
!5624 = !DILocation(line: 2738, column: 2, scope: !5564)
!5625 = !DILocation(line: 2719, column: 42, scope: !5559)
!5626 = !DILocation(line: 2719, column: 2, scope: !5559)
!5627 = distinct !{!5627, !5562, !5628}
!5628 = !DILocation(line: 2738, column: 2, scope: !5555)
!5629 = !DILocation(line: 2740, column: 6, scope: !5630)
!5630 = distinct !DILexicalBlock(scope: !5527, file: !3, line: 2740, column: 6)
!5631 = !DILocation(line: 2740, column: 9, scope: !5630)
!5632 = !DILocation(line: 2740, column: 6, scope: !5527)
!5633 = !DILocation(line: 2741, column: 21, scope: !5630)
!5634 = !DILocation(line: 2741, column: 3, scope: !5630)
!5635 = !DILocation(line: 2742, column: 1, scope: !5527)
!5636 = distinct !DISubprogram(name: "fbcon_modechanged", scope: !3, file: !3, line: 2671, type: !4580, scopeLine: 2672, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !241)
!5637 = !DILocalVariable(name: "info", arg: 1, scope: !5636, file: !3, line: 2671, type: !199)
!5638 = !DILocation(line: 2671, column: 47, scope: !5636)
!5639 = !DILocalVariable(name: "ops", scope: !5636, file: !3, line: 2673, type: !4818)
!5640 = !DILocation(line: 2673, column: 20, scope: !5636)
!5641 = !DILocation(line: 2673, column: 26, scope: !5636)
!5642 = !DILocation(line: 2673, column: 32, scope: !5636)
!5643 = !DILocalVariable(name: "vc", scope: !5636, file: !3, line: 2674, type: !4826)
!5644 = !DILocation(line: 2674, column: 18, scope: !5636)
!5645 = !DILocalVariable(name: "p", scope: !5636, file: !3, line: 2675, type: !5048)
!5646 = !DILocation(line: 2675, column: 24, scope: !5636)
!5647 = !DILocalVariable(name: "rows", scope: !5636, file: !3, line: 2676, type: !170)
!5648 = !DILocation(line: 2676, column: 6, scope: !5636)
!5649 = !DILocalVariable(name: "cols", scope: !5636, file: !3, line: 2676, type: !170)
!5650 = !DILocation(line: 2676, column: 12, scope: !5636)
!5651 = !DILocation(line: 2678, column: 7, scope: !5652)
!5652 = distinct !DILexicalBlock(scope: !5636, file: !3, line: 2678, column: 6)
!5653 = !DILocation(line: 2678, column: 11, scope: !5652)
!5654 = !DILocation(line: 2678, column: 14, scope: !5652)
!5655 = !DILocation(line: 2678, column: 19, scope: !5652)
!5656 = !DILocation(line: 2678, column: 27, scope: !5652)
!5657 = !DILocation(line: 2678, column: 6, scope: !5636)
!5658 = !DILocation(line: 2679, column: 3, scope: !5652)
!5659 = !DILocation(line: 2680, column: 15, scope: !5636)
!5660 = !DILocation(line: 2680, column: 20, scope: !5636)
!5661 = !DILocation(line: 2680, column: 7, scope: !5636)
!5662 = !DILocation(line: 2680, column: 29, scope: !5636)
!5663 = !DILocation(line: 2680, column: 5, scope: !5636)
!5664 = !DILocation(line: 2681, column: 6, scope: !5665)
!5665 = distinct !DILexicalBlock(scope: !5636, file: !3, line: 2681, column: 6)
!5666 = !DILocation(line: 2681, column: 10, scope: !5665)
!5667 = !DILocation(line: 2681, column: 18, scope: !5665)
!5668 = !DILocation(line: 2681, column: 29, scope: !5665)
!5669 = !DILocation(line: 2682, column: 31, scope: !5665)
!5670 = !DILocation(line: 2682, column: 36, scope: !5665)
!5671 = !DILocation(line: 2682, column: 20, scope: !5665)
!5672 = !DILocation(line: 2682, column: 6, scope: !5665)
!5673 = !DILocation(line: 2682, column: 49, scope: !5665)
!5674 = !DILocation(line: 2682, column: 46, scope: !5665)
!5675 = !DILocation(line: 2681, column: 6, scope: !5636)
!5676 = !DILocation(line: 2683, column: 3, scope: !5665)
!5677 = !DILocation(line: 2685, column: 18, scope: !5636)
!5678 = !DILocation(line: 2685, column: 22, scope: !5636)
!5679 = !DILocation(line: 2685, column: 7, scope: !5636)
!5680 = !DILocation(line: 2685, column: 4, scope: !5636)
!5681 = !DILocation(line: 2686, column: 20, scope: !5636)
!5682 = !DILocation(line: 2686, column: 24, scope: !5636)
!5683 = !DILocation(line: 2686, column: 2, scope: !5636)
!5684 = !DILocation(line: 2688, column: 21, scope: !5685)
!5685 = distinct !DILexicalBlock(scope: !5636, file: !3, line: 2688, column: 6)
!5686 = !DILocation(line: 2688, column: 6, scope: !5685)
!5687 = !DILocation(line: 2688, column: 6, scope: !5636)
!5688 = !DILocation(line: 2689, column: 18, scope: !5689)
!5689 = distinct !DILexicalBlock(scope: !5685, file: !3, line: 2688, column: 26)
!5690 = !DILocation(line: 2689, column: 22, scope: !5689)
!5691 = !DILocation(line: 2689, column: 28, scope: !5689)
!5692 = !DILocation(line: 2689, column: 33, scope: !5689)
!5693 = !DILocation(line: 2689, column: 3, scope: !5689)
!5694 = !DILocalVariable(name: "_r", scope: !5695, file: !3, line: 2690, type: !253)
!5695 = distinct !DILexicalBlock(scope: !5689, file: !3, line: 2690, column: 10)
!5696 = !DILocation(line: 2690, column: 10, scope: !5695)
!5697 = !DILocalVariable(name: "_v", scope: !5695, file: !3, line: 2690, type: !253)
!5698 = !DILocation(line: 2690, column: 8, scope: !5689)
!5699 = !DILocalVariable(name: "_r", scope: !5700, file: !3, line: 2691, type: !253)
!5700 = distinct !DILexicalBlock(scope: !5689, file: !3, line: 2691, column: 10)
!5701 = !DILocation(line: 2691, column: 10, scope: !5700)
!5702 = !DILocalVariable(name: "_v", scope: !5700, file: !3, line: 2691, type: !253)
!5703 = !DILocation(line: 2691, column: 8, scope: !5689)
!5704 = !DILocation(line: 2692, column: 11, scope: !5689)
!5705 = !DILocation(line: 2692, column: 15, scope: !5689)
!5706 = !DILocation(line: 2692, column: 23, scope: !5689)
!5707 = !DILocation(line: 2692, column: 8, scope: !5689)
!5708 = !DILocation(line: 2693, column: 11, scope: !5689)
!5709 = !DILocation(line: 2693, column: 15, scope: !5689)
!5710 = !DILocation(line: 2693, column: 23, scope: !5689)
!5711 = !DILocation(line: 2693, column: 8, scope: !5689)
!5712 = !DILocation(line: 2694, column: 13, scope: !5689)
!5713 = !DILocation(line: 2694, column: 17, scope: !5689)
!5714 = !DILocation(line: 2694, column: 23, scope: !5689)
!5715 = !DILocation(line: 2694, column: 3, scope: !5689)
!5716 = !DILocation(line: 2695, column: 20, scope: !5689)
!5717 = !DILocation(line: 2695, column: 23, scope: !5689)
!5718 = !DILocation(line: 2695, column: 29, scope: !5689)
!5719 = !DILocation(line: 2695, column: 3, scope: !5689)
!5720 = !DILocation(line: 2696, column: 18, scope: !5689)
!5721 = !DILocation(line: 2697, column: 22, scope: !5689)
!5722 = !DILocation(line: 2699, column: 26, scope: !5723)
!5723 = distinct !DILexicalBlock(scope: !5689, file: !3, line: 2699, column: 7)
!5724 = !DILocation(line: 2699, column: 30, scope: !5723)
!5725 = !DILocation(line: 2699, column: 8, scope: !5723)
!5726 = !DILocation(line: 2699, column: 7, scope: !5689)
!5727 = !DILocation(line: 2700, column: 45, scope: !5728)
!5728 = distinct !DILexicalBlock(scope: !5723, file: !3, line: 2699, column: 37)
!5729 = !DILocation(line: 2700, column: 48, scope: !5728)
!5730 = !DILocation(line: 2700, column: 56, scope: !5728)
!5731 = !DILocation(line: 2700, column: 26, scope: !5728)
!5732 = !DILocation(line: 2700, column: 31, scope: !5728)
!5733 = !DILocation(line: 2700, column: 35, scope: !5728)
!5734 = !DILocation(line: 2700, column: 43, scope: !5728)
!5735 = !DILocation(line: 2700, column: 7, scope: !5728)
!5736 = !DILocation(line: 2700, column: 12, scope: !5728)
!5737 = !DILocation(line: 2700, column: 16, scope: !5728)
!5738 = !DILocation(line: 2700, column: 24, scope: !5728)
!5739 = !DILocation(line: 2701, column: 7, scope: !5728)
!5740 = !DILocation(line: 2701, column: 12, scope: !5728)
!5741 = !DILocation(line: 2701, column: 25, scope: !5728)
!5742 = !DILocation(line: 2702, column: 3, scope: !5728)
!5743 = !DILocation(line: 2704, column: 21, scope: !5689)
!5744 = !DILocation(line: 2704, column: 3, scope: !5689)
!5745 = !DILocation(line: 2705, column: 3, scope: !5689)
!5746 = !DILocation(line: 2706, column: 2, scope: !5689)
!5747 = !DILocation(line: 2707, column: 1, scope: !5636)
!5748 = distinct !DISubprogram(name: "fbcon_mode_deleted", scope: !3, file: !3, line: 2754, type: !5749, scopeLine: 2756, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !241)
!5749 = !DISubroutineType(types: !5750)
!5750 = !{!170, !199, !331}
!5751 = !DILocalVariable(name: "info", arg: 1, scope: !5748, file: !3, line: 2754, type: !199)
!5752 = !DILocation(line: 2754, column: 40, scope: !5748)
!5753 = !DILocalVariable(name: "mode", arg: 2, scope: !5748, file: !3, line: 2755, type: !331)
!5754 = !DILocation(line: 2755, column: 31, scope: !5748)
!5755 = !DILocalVariable(name: "fb_info", scope: !5748, file: !3, line: 2757, type: !199)
!5756 = !DILocation(line: 2757, column: 18, scope: !5748)
!5757 = !DILocalVariable(name: "p", scope: !5748, file: !3, line: 2758, type: !5048)
!5758 = !DILocation(line: 2758, column: 24, scope: !5748)
!5759 = !DILocalVariable(name: "i", scope: !5748, file: !3, line: 2759, type: !170)
!5760 = !DILocation(line: 2759, column: 6, scope: !5748)
!5761 = !DILocalVariable(name: "j", scope: !5748, file: !3, line: 2759, type: !170)
!5762 = !DILocation(line: 2759, column: 9, scope: !5748)
!5763 = !DILocalVariable(name: "found", scope: !5748, file: !3, line: 2759, type: !170)
!5764 = !DILocation(line: 2759, column: 12, scope: !5748)
!5765 = !DILocation(line: 2762, column: 11, scope: !5766)
!5766 = distinct !DILexicalBlock(scope: !5748, file: !3, line: 2762, column: 2)
!5767 = !DILocation(line: 2762, column: 9, scope: !5766)
!5768 = !DILocation(line: 2762, column: 7, scope: !5766)
!5769 = !DILocation(line: 2762, column: 24, scope: !5770)
!5770 = distinct !DILexicalBlock(scope: !5766, file: !3, line: 2762, column: 2)
!5771 = !DILocation(line: 2762, column: 29, scope: !5770)
!5772 = !DILocation(line: 2762, column: 26, scope: !5770)
!5773 = !DILocation(line: 2762, column: 2, scope: !5766)
!5774 = !DILocation(line: 2763, column: 18, scope: !5775)
!5775 = distinct !DILexicalBlock(scope: !5770, file: !3, line: 2762, column: 46)
!5776 = !DILocation(line: 2763, column: 7, scope: !5775)
!5777 = !DILocation(line: 2763, column: 5, scope: !5775)
!5778 = !DILocation(line: 2764, column: 7, scope: !5779)
!5779 = distinct !DILexicalBlock(scope: !5775, file: !3, line: 2764, column: 7)
!5780 = !DILocation(line: 2764, column: 9, scope: !5779)
!5781 = !DILocation(line: 2764, column: 7, scope: !5775)
!5782 = !DILocation(line: 2765, column: 4, scope: !5779)
!5783 = !DILocation(line: 2766, column: 27, scope: !5775)
!5784 = !DILocation(line: 2766, column: 13, scope: !5775)
!5785 = !DILocation(line: 2766, column: 11, scope: !5775)
!5786 = !DILocation(line: 2767, column: 7, scope: !5787)
!5787 = distinct !DILexicalBlock(scope: !5775, file: !3, line: 2767, column: 7)
!5788 = !DILocation(line: 2767, column: 18, scope: !5787)
!5789 = !DILocation(line: 2767, column: 15, scope: !5787)
!5790 = !DILocation(line: 2767, column: 7, scope: !5775)
!5791 = !DILocation(line: 2768, column: 4, scope: !5787)
!5792 = !DILocation(line: 2769, column: 19, scope: !5775)
!5793 = !DILocation(line: 2769, column: 8, scope: !5775)
!5794 = !DILocation(line: 2769, column: 5, scope: !5775)
!5795 = !DILocation(line: 2770, column: 8, scope: !5796)
!5796 = distinct !DILexicalBlock(scope: !5775, file: !3, line: 2770, column: 7)
!5797 = !DILocation(line: 2770, column: 10, scope: !5796)
!5798 = !DILocation(line: 2770, column: 14, scope: !5796)
!5799 = !DILocation(line: 2770, column: 17, scope: !5796)
!5800 = !DILocation(line: 2770, column: 7, scope: !5775)
!5801 = !DILocation(line: 2771, column: 4, scope: !5796)
!5802 = !DILocation(line: 2772, column: 24, scope: !5803)
!5803 = distinct !DILexicalBlock(scope: !5775, file: !3, line: 2772, column: 7)
!5804 = !DILocation(line: 2772, column: 27, scope: !5803)
!5805 = !DILocation(line: 2772, column: 33, scope: !5803)
!5806 = !DILocation(line: 2772, column: 7, scope: !5803)
!5807 = !DILocation(line: 2772, column: 7, scope: !5775)
!5808 = !DILocation(line: 2773, column: 10, scope: !5809)
!5809 = distinct !DILexicalBlock(scope: !5803, file: !3, line: 2772, column: 40)
!5810 = !DILocation(line: 2774, column: 4, scope: !5809)
!5811 = !DILocation(line: 2776, column: 2, scope: !5775)
!5812 = !DILocation(line: 2762, column: 42, scope: !5770)
!5813 = !DILocation(line: 2762, column: 2, scope: !5770)
!5814 = distinct !{!5814, !5773, !5815}
!5815 = !DILocation(line: 2776, column: 2, scope: !5766)
!5816 = !DILocation(line: 2777, column: 9, scope: !5748)
!5817 = !DILocation(line: 2777, column: 2, scope: !5748)
!5818 = distinct !DISubprogram(name: "fbcon_fb_unbind", scope: !3, file: !3, line: 2796, type: !4580, scopeLine: 2797, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !241)
!5819 = !DILocalVariable(name: "v", arg: 1, scope: !5820, file: !5821, line: 23, type: !5824)
!5820 = distinct !DISubprogram(name: "arch_atomic_read", scope: !5821, file: !5821, line: 23, type: !5822, scopeLine: 24, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !241)
!5821 = !DIFile(filename: "./arch/x86/include/asm/atomic.h", directory: "/home/lizy2001/genbc/linux")
!5822 = !DISubroutineType(types: !5823)
!5823 = !{!170, !5824}
!5824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5825, size: 64)
!5825 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !204)
!5826 = !DILocation(line: 23, column: 61, scope: !5820, inlinedAt: !5827)
!5827 = distinct !DILocation(line: 28, column: 9, scope: !5828, inlinedAt: !5830)
!5828 = distinct !DISubprogram(name: "atomic_read", scope: !5829, file: !5829, line: 25, type: !5822, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !241)
!5829 = !DIFile(filename: "./include/asm-generic/atomic-instrumented.h", directory: "/home/lizy2001/genbc/linux")
!5830 = distinct !DILocation(line: 2801, column: 2, scope: !5831)
!5831 = distinct !DILexicalBlock(scope: !5818, file: !3, line: 2801, column: 2)
!5832 = !DILocalVariable(name: "v", arg: 1, scope: !5833, file: !5834, line: 69, type: !5837)
!5833 = distinct !DISubprogram(name: "instrument_atomic_read", scope: !5834, file: !5834, line: 69, type: !5835, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !241)
!5834 = !DIFile(filename: "./include/linux/instrumented.h", directory: "/home/lizy2001/genbc/linux")
!5835 = !DISubroutineType(types: !5836)
!5836 = !{null, !5837, !557}
!5837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5838, size: 64)
!5838 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5839)
!5839 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: null)
!5840 = !DILocation(line: 69, column: 73, scope: !5833, inlinedAt: !5841)
!5841 = distinct !DILocation(line: 27, column: 2, scope: !5828, inlinedAt: !5830)
!5842 = !DILocalVariable(name: "size", arg: 2, scope: !5833, file: !5834, line: 69, type: !557)
!5843 = !DILocation(line: 69, column: 83, scope: !5833, inlinedAt: !5841)
!5844 = !DILocalVariable(name: "v", arg: 1, scope: !5828, file: !5829, line: 25, type: !5824)
!5845 = !DILocation(line: 25, column: 29, scope: !5828, inlinedAt: !5830)
!5846 = !DILocalVariable(name: "info", arg: 1, scope: !5818, file: !3, line: 2796, type: !199)
!5847 = !DILocation(line: 2796, column: 38, scope: !5818)
!5848 = !DILocalVariable(name: "i", scope: !5818, file: !3, line: 2798, type: !170)
!5849 = !DILocation(line: 2798, column: 6, scope: !5818)
!5850 = !DILocalVariable(name: "new_idx", scope: !5818, file: !3, line: 2798, type: !170)
!5851 = !DILocation(line: 2798, column: 9, scope: !5818)
!5852 = !DILocalVariable(name: "ret", scope: !5818, file: !3, line: 2798, type: !170)
!5853 = !DILocation(line: 2798, column: 23, scope: !5818)
!5854 = !DILocalVariable(name: "idx", scope: !5818, file: !3, line: 2799, type: !170)
!5855 = !DILocation(line: 2799, column: 6, scope: !5818)
!5856 = !DILocation(line: 2799, column: 12, scope: !5818)
!5857 = !DILocation(line: 2799, column: 18, scope: !5818)
!5858 = !DILocalVariable(name: "__ret_warn_on", scope: !5831, file: !3, line: 2801, type: !170)
!5859 = !DILocation(line: 2801, column: 2, scope: !5831)
!5860 = !DILocation(line: 27, column: 25, scope: !5828, inlinedAt: !5830)
!5861 = !DILocation(line: 71, column: 19, scope: !5833, inlinedAt: !5841)
!5862 = !DILocation(line: 71, column: 22, scope: !5833, inlinedAt: !5841)
!5863 = !DILocation(line: 71, column: 2, scope: !5833, inlinedAt: !5841)
!5864 = !DILocation(line: 72, column: 2, scope: !5833, inlinedAt: !5841)
!5865 = !DILocation(line: 28, column: 26, scope: !5828, inlinedAt: !5830)
!5866 = !DILocation(line: 29, column: 9, scope: !5820, inlinedAt: !5827)
!5867 = !DILocation(line: 0, scope: !5831)
!5868 = !DILocation(line: 2801, column: 2, scope: !5869)
!5869 = distinct !DILexicalBlock(scope: !5831, file: !3, line: 2801, column: 2)
!5870 = !DILocation(line: 2801, column: 2, scope: !5871)
!5871 = distinct !DILexicalBlock(scope: !5869, file: !3, line: 2801, column: 2)
!5872 = !DILocation(line: 2801, column: 2, scope: !5873)
!5873 = distinct !DILexicalBlock(scope: !5871, file: !3, line: 2801, column: 2)
!5874 = !DILocation(line: 2801, column: 2, scope: !5875)
!5875 = distinct !DILexicalBlock(scope: !5871, file: !3, line: 2801, column: 2)
!5876 = !{i32 -2140958036, i32 -2140958007, i32 -2140957961, i32 -2140957903, i32 -2140957849, i32 -2140957795, i32 -2140957740, i32 -2140957709}
!5877 = !DILocation(line: 2801, column: 2, scope: !5878)
!5878 = distinct !DILexicalBlock(scope: !5871, file: !3, line: 2801, column: 2)
!5879 = !{i32 -2140957294, i32 -2140957287, i32 -2140957235, i32 -2140957204, i32 -2140957174}
!5880 = !DILocation(line: 2801, column: 2, scope: !5881)
!5881 = distinct !DILexicalBlock(scope: !5871, file: !3, line: 2801, column: 2)
!5882 = !DILocation(line: 2803, column: 7, scope: !5883)
!5883 = distinct !DILexicalBlock(scope: !5818, file: !3, line: 2803, column: 6)
!5884 = !DILocation(line: 2803, column: 6, scope: !5818)
!5885 = !DILocation(line: 2804, column: 3, scope: !5883)
!5886 = !DILocation(line: 2806, column: 11, scope: !5887)
!5887 = distinct !DILexicalBlock(scope: !5818, file: !3, line: 2806, column: 2)
!5888 = !DILocation(line: 2806, column: 9, scope: !5887)
!5889 = !DILocation(line: 2806, column: 7, scope: !5887)
!5890 = !DILocation(line: 2806, column: 24, scope: !5891)
!5891 = distinct !DILexicalBlock(scope: !5887, file: !3, line: 2806, column: 2)
!5892 = !DILocation(line: 2806, column: 29, scope: !5891)
!5893 = !DILocation(line: 2806, column: 26, scope: !5891)
!5894 = !DILocation(line: 2806, column: 2, scope: !5887)
!5895 = !DILocation(line: 2807, column: 18, scope: !5896)
!5896 = distinct !DILexicalBlock(scope: !5897, file: !3, line: 2807, column: 7)
!5897 = distinct !DILexicalBlock(scope: !5891, file: !3, line: 2806, column: 46)
!5898 = !DILocation(line: 2807, column: 7, scope: !5896)
!5899 = !DILocation(line: 2807, column: 24, scope: !5896)
!5900 = !DILocation(line: 2807, column: 21, scope: !5896)
!5901 = !DILocation(line: 2807, column: 28, scope: !5896)
!5902 = !DILocation(line: 2808, column: 18, scope: !5896)
!5903 = !DILocation(line: 2808, column: 7, scope: !5896)
!5904 = !DILocation(line: 2808, column: 21, scope: !5896)
!5905 = !DILocation(line: 2807, column: 7, scope: !5897)
!5906 = !DILocation(line: 2809, column: 25, scope: !5907)
!5907 = distinct !DILexicalBlock(scope: !5896, file: !3, line: 2808, column: 28)
!5908 = !DILocation(line: 2809, column: 14, scope: !5907)
!5909 = !DILocation(line: 2809, column: 12, scope: !5907)
!5910 = !DILocation(line: 2810, column: 4, scope: !5907)
!5911 = !DILocation(line: 2812, column: 2, scope: !5897)
!5912 = !DILocation(line: 2806, column: 42, scope: !5891)
!5913 = !DILocation(line: 2806, column: 2, scope: !5891)
!5914 = distinct !{!5914, !5894, !5915}
!5915 = !DILocation(line: 2812, column: 2, scope: !5887)
!5916 = !DILocation(line: 2814, column: 6, scope: !5917)
!5917 = distinct !DILexicalBlock(scope: !5818, file: !3, line: 2814, column: 6)
!5918 = !DILocation(line: 2814, column: 14, scope: !5917)
!5919 = !DILocation(line: 2814, column: 6, scope: !5818)
!5920 = !DILocation(line: 2815, column: 12, scope: !5921)
!5921 = distinct !DILexicalBlock(scope: !5922, file: !3, line: 2815, column: 3)
!5922 = distinct !DILexicalBlock(scope: !5917, file: !3, line: 2814, column: 21)
!5923 = !DILocation(line: 2815, column: 10, scope: !5921)
!5924 = !DILocation(line: 2815, column: 8, scope: !5921)
!5925 = !DILocation(line: 2815, column: 25, scope: !5926)
!5926 = distinct !DILexicalBlock(scope: !5921, file: !3, line: 2815, column: 3)
!5927 = !DILocation(line: 2815, column: 30, scope: !5926)
!5928 = !DILocation(line: 2815, column: 27, scope: !5926)
!5929 = !DILocation(line: 2815, column: 3, scope: !5921)
!5930 = !DILocation(line: 2816, column: 19, scope: !5931)
!5931 = distinct !DILexicalBlock(scope: !5932, file: !3, line: 2816, column: 8)
!5932 = distinct !DILexicalBlock(scope: !5926, file: !3, line: 2815, column: 47)
!5933 = !DILocation(line: 2816, column: 8, scope: !5931)
!5934 = !DILocation(line: 2816, column: 25, scope: !5931)
!5935 = !DILocation(line: 2816, column: 22, scope: !5931)
!5936 = !DILocation(line: 2816, column: 8, scope: !5932)
!5937 = !DILocation(line: 2817, column: 20, scope: !5931)
!5938 = !DILocation(line: 2817, column: 23, scope: !5931)
!5939 = !DILocation(line: 2817, column: 5, scope: !5931)
!5940 = !DILocation(line: 2818, column: 3, scope: !5932)
!5941 = !DILocation(line: 2815, column: 43, scope: !5926)
!5942 = !DILocation(line: 2815, column: 3, scope: !5926)
!5943 = distinct !{!5943, !5929, !5944}
!5944 = !DILocation(line: 2818, column: 3, scope: !5921)
!5945 = !DILocation(line: 2819, column: 2, scope: !5922)
!5946 = !DILocalVariable(name: "info", scope: !5947, file: !3, line: 2820, type: !199)
!5947 = distinct !DILexicalBlock(scope: !5917, file: !3, line: 2819, column: 9)
!5948 = !DILocation(line: 2820, column: 19, scope: !5947)
!5949 = !DILocation(line: 2820, column: 40, scope: !5947)
!5950 = !DILocation(line: 2820, column: 26, scope: !5947)
!5951 = !DILocation(line: 2828, column: 12, scope: !5952)
!5952 = distinct !DILexicalBlock(scope: !5947, file: !3, line: 2828, column: 3)
!5953 = !DILocation(line: 2828, column: 10, scope: !5952)
!5954 = !DILocation(line: 2828, column: 8, scope: !5952)
!5955 = !DILocation(line: 2828, column: 25, scope: !5956)
!5956 = distinct !DILexicalBlock(scope: !5952, file: !3, line: 2828, column: 3)
!5957 = !DILocation(line: 2828, column: 30, scope: !5956)
!5958 = !DILocation(line: 2828, column: 27, scope: !5956)
!5959 = !DILocation(line: 2828, column: 3, scope: !5952)
!5960 = !DILocation(line: 2829, column: 19, scope: !5961)
!5961 = distinct !DILexicalBlock(scope: !5962, file: !3, line: 2829, column: 8)
!5962 = distinct !DILexicalBlock(scope: !5956, file: !3, line: 2828, column: 47)
!5963 = !DILocation(line: 2829, column: 8, scope: !5961)
!5964 = !DILocation(line: 2829, column: 25, scope: !5961)
!5965 = !DILocation(line: 2829, column: 22, scope: !5961)
!5966 = !DILocation(line: 2829, column: 8, scope: !5962)
!5967 = !DILocation(line: 2830, column: 16, scope: !5968)
!5968 = distinct !DILexicalBlock(scope: !5961, file: !3, line: 2829, column: 30)
!5969 = !DILocation(line: 2830, column: 5, scope: !5968)
!5970 = !DILocation(line: 2830, column: 19, scope: !5968)
!5971 = !DILocation(line: 2831, column: 27, scope: !5972)
!5972 = distinct !DILexicalBlock(scope: !5968, file: !3, line: 2831, column: 9)
!5973 = !DILocation(line: 2831, column: 10, scope: !5972)
!5974 = !DILocation(line: 2831, column: 9, scope: !5968)
!5975 = !DILocation(line: 2832, column: 43, scope: !5976)
!5976 = distinct !DILexicalBlock(scope: !5972, file: !3, line: 2831, column: 33)
!5977 = !DILocation(line: 2832, column: 35, scope: !5976)
!5978 = !DILocation(line: 2832, column: 46, scope: !5976)
!5979 = !DILocation(line: 2833, column: 14, scope: !5976)
!5980 = !DILocation(line: 2833, column: 26, scope: !5976)
!5981 = !DILocation(line: 2834, column: 14, scope: !5976)
!5982 = !DILocation(line: 2832, column: 12, scope: !5976)
!5983 = !DILocation(line: 2832, column: 10, scope: !5976)
!5984 = !DILocation(line: 2835, column: 10, scope: !5985)
!5985 = distinct !DILexicalBlock(scope: !5976, file: !3, line: 2835, column: 10)
!5986 = !DILocation(line: 2835, column: 10, scope: !5976)
!5987 = !DILocation(line: 2836, column: 23, scope: !5988)
!5988 = distinct !DILexicalBlock(scope: !5985, file: !3, line: 2835, column: 15)
!5989 = !DILocation(line: 2836, column: 18, scope: !5988)
!5990 = !DILocation(line: 2836, column: 7, scope: !5988)
!5991 = !DILocation(line: 2836, column: 21, scope: !5988)
!5992 = !DILocation(line: 2837, column: 7, scope: !5988)
!5993 = !DILocation(line: 2839, column: 5, scope: !5976)
!5994 = !DILocation(line: 2840, column: 4, scope: !5968)
!5995 = !DILocation(line: 2841, column: 3, scope: !5962)
!5996 = !DILocation(line: 2828, column: 43, scope: !5956)
!5997 = !DILocation(line: 2828, column: 3, scope: !5956)
!5998 = distinct !{!5998, !5959, !5999}
!5999 = !DILocation(line: 2841, column: 3, scope: !5952)
!6000 = !DILocation(line: 2842, column: 3, scope: !5947)
!6001 = !DILocation(line: 2844, column: 1, scope: !5818)
!6002 = distinct !DISubprogram(name: "set_con2fb_map", scope: !3, file: !3, line: 842, type: !6003, scopeLine: 843, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !241)
!6003 = !DISubroutineType(types: !6004)
!6004 = !{!170, !170, !170, !170}
!6005 = !DILocation(line: 23, column: 61, scope: !5820, inlinedAt: !6006)
!6006 = distinct !DILocation(line: 28, column: 9, scope: !5828, inlinedAt: !6007)
!6007 = distinct !DILocation(line: 850, column: 2, scope: !6008)
!6008 = distinct !DILexicalBlock(scope: !6002, file: !3, line: 850, column: 2)
!6009 = !DILocation(line: 69, column: 73, scope: !5833, inlinedAt: !6010)
!6010 = distinct !DILocation(line: 27, column: 2, scope: !5828, inlinedAt: !6007)
!6011 = !DILocation(line: 69, column: 83, scope: !5833, inlinedAt: !6010)
!6012 = !DILocation(line: 25, column: 29, scope: !5828, inlinedAt: !6007)
!6013 = !DILocalVariable(name: "unit", arg: 1, scope: !6002, file: !3, line: 842, type: !170)
!6014 = !DILocation(line: 842, column: 31, scope: !6002)
!6015 = !DILocalVariable(name: "newidx", arg: 2, scope: !6002, file: !3, line: 842, type: !170)
!6016 = !DILocation(line: 842, column: 41, scope: !6002)
!6017 = !DILocalVariable(name: "user", arg: 3, scope: !6002, file: !3, line: 842, type: !170)
!6018 = !DILocation(line: 842, column: 53, scope: !6002)
!6019 = !DILocalVariable(name: "vc", scope: !6002, file: !3, line: 844, type: !4826)
!6020 = !DILocation(line: 844, column: 18, scope: !6002)
!6021 = !DILocation(line: 844, column: 31, scope: !6002)
!6022 = !DILocation(line: 844, column: 23, scope: !6002)
!6023 = !DILocation(line: 844, column: 37, scope: !6002)
!6024 = !DILocalVariable(name: "oldidx", scope: !6002, file: !3, line: 845, type: !170)
!6025 = !DILocation(line: 845, column: 6, scope: !6002)
!6026 = !DILocation(line: 845, column: 26, scope: !6002)
!6027 = !DILocation(line: 845, column: 15, scope: !6002)
!6028 = !DILocalVariable(name: "info", scope: !6002, file: !3, line: 846, type: !199)
!6029 = !DILocation(line: 846, column: 18, scope: !6002)
!6030 = !DILocation(line: 846, column: 39, scope: !6002)
!6031 = !DILocation(line: 846, column: 25, scope: !6002)
!6032 = !DILocalVariable(name: "oldinfo", scope: !6002, file: !3, line: 847, type: !199)
!6033 = !DILocation(line: 847, column: 18, scope: !6002)
!6034 = !DILocalVariable(name: "found", scope: !6002, file: !3, line: 848, type: !170)
!6035 = !DILocation(line: 848, column: 6, scope: !6002)
!6036 = !DILocalVariable(name: "err", scope: !6002, file: !3, line: 848, type: !170)
!6037 = !DILocation(line: 848, column: 13, scope: !6002)
!6038 = !DILocalVariable(name: "__ret_warn_on", scope: !6008, file: !3, line: 850, type: !170)
!6039 = !DILocation(line: 850, column: 2, scope: !6008)
!6040 = !DILocation(line: 27, column: 25, scope: !5828, inlinedAt: !6007)
!6041 = !DILocation(line: 71, column: 19, scope: !5833, inlinedAt: !6010)
!6042 = !DILocation(line: 71, column: 22, scope: !5833, inlinedAt: !6010)
!6043 = !DILocation(line: 71, column: 2, scope: !5833, inlinedAt: !6010)
!6044 = !DILocation(line: 72, column: 2, scope: !5833, inlinedAt: !6010)
!6045 = !DILocation(line: 28, column: 26, scope: !5828, inlinedAt: !6007)
!6046 = !DILocation(line: 29, column: 9, scope: !5820, inlinedAt: !6006)
!6047 = !DILocation(line: 0, scope: !6008)
!6048 = !DILocation(line: 850, column: 2, scope: !6049)
!6049 = distinct !DILexicalBlock(scope: !6008, file: !3, line: 850, column: 2)
!6050 = !DILocation(line: 850, column: 2, scope: !6051)
!6051 = distinct !DILexicalBlock(scope: !6049, file: !3, line: 850, column: 2)
!6052 = !DILocation(line: 850, column: 2, scope: !6053)
!6053 = distinct !DILexicalBlock(scope: !6051, file: !3, line: 850, column: 2)
!6054 = !DILocation(line: 850, column: 2, scope: !6055)
!6055 = distinct !DILexicalBlock(scope: !6051, file: !3, line: 850, column: 2)
!6056 = !{i32 -2140970296, i32 -2140970267, i32 -2140970221, i32 -2140970163, i32 -2140970109, i32 -2140970055, i32 -2140970000, i32 -2140969969}
!6057 = !DILocation(line: 850, column: 2, scope: !6058)
!6058 = distinct !DILexicalBlock(scope: !6051, file: !3, line: 850, column: 2)
!6059 = !{i32 -2140969555, i32 -2140969548, i32 -2140969496, i32 -2140969465, i32 -2140969435}
!6060 = !DILocation(line: 850, column: 2, scope: !6061)
!6061 = distinct !DILexicalBlock(scope: !6051, file: !3, line: 850, column: 2)
!6062 = !DILocation(line: 852, column: 6, scope: !6063)
!6063 = distinct !DILexicalBlock(scope: !6002, file: !3, line: 852, column: 6)
!6064 = !DILocation(line: 852, column: 16, scope: !6063)
!6065 = !DILocation(line: 852, column: 13, scope: !6063)
!6066 = !DILocation(line: 852, column: 6, scope: !6002)
!6067 = !DILocation(line: 853, column: 3, scope: !6063)
!6068 = !DILocation(line: 855, column: 7, scope: !6069)
!6069 = distinct !DILexicalBlock(scope: !6002, file: !3, line: 855, column: 6)
!6070 = !DILocation(line: 855, column: 6, scope: !6002)
!6071 = !DILocation(line: 856, column: 3, scope: !6069)
!6072 = !DILocation(line: 858, column: 7, scope: !6073)
!6073 = distinct !DILexicalBlock(scope: !6002, file: !3, line: 858, column: 6)
!6074 = !DILocation(line: 858, column: 31, scope: !6073)
!6075 = !DILocation(line: 858, column: 35, scope: !6073)
!6076 = !DILocation(line: 858, column: 6, scope: !6002)
!6077 = !DILocation(line: 859, column: 14, scope: !6078)
!6078 = distinct !DILexicalBlock(scope: !6073, file: !3, line: 858, column: 58)
!6079 = !DILocation(line: 859, column: 12, scope: !6078)
!6080 = !DILocation(line: 860, column: 10, scope: !6078)
!6081 = !DILocation(line: 860, column: 3, scope: !6078)
!6082 = !DILocation(line: 863, column: 6, scope: !6083)
!6083 = distinct !DILexicalBlock(scope: !6002, file: !3, line: 863, column: 6)
!6084 = !DILocation(line: 863, column: 13, scope: !6083)
!6085 = !DILocation(line: 863, column: 6, scope: !6002)
!6086 = !DILocation(line: 864, column: 27, scope: !6083)
!6087 = !DILocation(line: 864, column: 13, scope: !6083)
!6088 = !DILocation(line: 864, column: 11, scope: !6083)
!6089 = !DILocation(line: 864, column: 3, scope: !6083)
!6090 = !DILocation(line: 866, column: 27, scope: !6002)
!6091 = !DILocation(line: 866, column: 10, scope: !6002)
!6092 = !DILocation(line: 866, column: 8, scope: !6002)
!6093 = !DILocation(line: 868, column: 21, scope: !6002)
!6094 = !DILocation(line: 868, column: 13, scope: !6002)
!6095 = !DILocation(line: 868, column: 2, scope: !6002)
!6096 = !DILocation(line: 868, column: 19, scope: !6002)
!6097 = !DILocation(line: 869, column: 7, scope: !6098)
!6098 = distinct !DILexicalBlock(scope: !6002, file: !3, line: 869, column: 6)
!6099 = !DILocation(line: 869, column: 11, scope: !6098)
!6100 = !DILocation(line: 869, column: 15, scope: !6098)
!6101 = !DILocation(line: 869, column: 6, scope: !6002)
!6102 = !DILocation(line: 870, column: 32, scope: !6098)
!6103 = !DILocation(line: 870, column: 36, scope: !6098)
!6104 = !DILocation(line: 870, column: 42, scope: !6098)
!6105 = !DILocation(line: 870, column: 48, scope: !6098)
!6106 = !DILocation(line: 870, column: 9, scope: !6098)
!6107 = !DILocation(line: 870, column: 7, scope: !6098)
!6108 = !DILocation(line: 870, column: 3, scope: !6098)
!6109 = !DILocation(line: 876, column: 7, scope: !6110)
!6110 = distinct !DILexicalBlock(scope: !6002, file: !3, line: 876, column: 6)
!6111 = !DILocation(line: 876, column: 11, scope: !6110)
!6112 = !DILocation(line: 876, column: 14, scope: !6110)
!6113 = !DILocation(line: 876, column: 22, scope: !6110)
!6114 = !DILocation(line: 876, column: 43, scope: !6110)
!6115 = !DILocation(line: 876, column: 26, scope: !6110)
!6116 = !DILocation(line: 876, column: 6, scope: !6002)
!6117 = !DILocation(line: 877, column: 32, scope: !6110)
!6118 = !DILocation(line: 877, column: 36, scope: !6110)
!6119 = !DILocation(line: 877, column: 45, scope: !6110)
!6120 = !DILocation(line: 877, column: 51, scope: !6110)
!6121 = !DILocation(line: 877, column: 57, scope: !6110)
!6122 = !DILocation(line: 878, column: 11, scope: !6110)
!6123 = !DILocation(line: 877, column: 9, scope: !6110)
!6124 = !DILocation(line: 877, column: 7, scope: !6110)
!6125 = !DILocation(line: 877, column: 3, scope: !6110)
!6126 = !DILocation(line: 880, column: 7, scope: !6127)
!6127 = distinct !DILexicalBlock(scope: !6002, file: !3, line: 880, column: 6)
!6128 = !DILocation(line: 880, column: 6, scope: !6002)
!6129 = !DILocalVariable(name: "show_logo", scope: !6130, file: !3, line: 881, type: !170)
!6130 = distinct !DILexicalBlock(scope: !6127, file: !3, line: 880, column: 12)
!6131 = !DILocation(line: 881, column: 7, scope: !6130)
!6132 = !DILocation(line: 881, column: 20, scope: !6130)
!6133 = !DILocation(line: 881, column: 31, scope: !6130)
!6134 = !DILocation(line: 881, column: 36, scope: !6130)
!6135 = !DILocation(line: 881, column: 40, scope: !6130)
!6136 = !DILocation(line: 881, column: 45, scope: !6130)
!6137 = !DILocation(line: 882, column: 6, scope: !6130)
!6138 = !DILocation(line: 882, column: 17, scope: !6130)
!6139 = !DILocation(line: 0, scope: !6130)
!6140 = !DILocation(line: 884, column: 8, scope: !6141)
!6141 = distinct !DILexicalBlock(scope: !6130, file: !3, line: 884, column: 7)
!6142 = !DILocation(line: 884, column: 7, scope: !6130)
!6143 = !DILocation(line: 885, column: 27, scope: !6141)
!6144 = !DILocation(line: 885, column: 4, scope: !6141)
!6145 = !DILocation(line: 886, column: 27, scope: !6130)
!6146 = !DILocation(line: 886, column: 19, scope: !6130)
!6147 = !DILocation(line: 886, column: 3, scope: !6130)
!6148 = !DILocation(line: 886, column: 25, scope: !6130)
!6149 = !DILocation(line: 887, column: 23, scope: !6130)
!6150 = !DILocation(line: 887, column: 27, scope: !6130)
!6151 = !DILocation(line: 887, column: 33, scope: !6130)
!6152 = !DILocation(line: 887, column: 39, scope: !6130)
!6153 = !DILocation(line: 887, column: 3, scope: !6130)
!6154 = !DILocation(line: 888, column: 2, scope: !6130)
!6155 = !DILocation(line: 890, column: 24, scope: !6156)
!6156 = distinct !DILexicalBlock(scope: !6002, file: !3, line: 890, column: 6)
!6157 = !DILocation(line: 890, column: 7, scope: !6156)
!6158 = !DILocation(line: 890, column: 6, scope: !6002)
!6159 = !DILocation(line: 891, column: 14, scope: !6156)
!6160 = !DILocation(line: 891, column: 12, scope: !6156)
!6161 = !DILocation(line: 891, column: 3, scope: !6156)
!6162 = !DILocation(line: 893, column: 9, scope: !6002)
!6163 = !DILocation(line: 893, column: 2, scope: !6002)
!6164 = !DILocation(line: 894, column: 1, scope: !6002)
!6165 = distinct !DISubprogram(name: "search_fb_in_map", scope: !3, file: !3, line: 525, type: !2317, scopeLine: 526, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !241)
!6166 = !DILocalVariable(name: "idx", arg: 1, scope: !6165, file: !3, line: 525, type: !170)
!6167 = !DILocation(line: 525, column: 33, scope: !6165)
!6168 = !DILocalVariable(name: "i", scope: !6165, file: !3, line: 527, type: !170)
!6169 = !DILocation(line: 527, column: 6, scope: !6165)
!6170 = !DILocalVariable(name: "retval", scope: !6165, file: !3, line: 527, type: !170)
!6171 = !DILocation(line: 527, column: 9, scope: !6165)
!6172 = !DILocation(line: 529, column: 11, scope: !6173)
!6173 = distinct !DILexicalBlock(scope: !6165, file: !3, line: 529, column: 2)
!6174 = !DILocation(line: 529, column: 9, scope: !6173)
!6175 = !DILocation(line: 529, column: 7, scope: !6173)
!6176 = !DILocation(line: 529, column: 24, scope: !6177)
!6177 = distinct !DILexicalBlock(scope: !6173, file: !3, line: 529, column: 2)
!6178 = !DILocation(line: 529, column: 29, scope: !6177)
!6179 = !DILocation(line: 529, column: 26, scope: !6177)
!6180 = !DILocation(line: 529, column: 2, scope: !6173)
!6181 = !DILocation(line: 530, column: 18, scope: !6182)
!6182 = distinct !DILexicalBlock(scope: !6183, file: !3, line: 530, column: 7)
!6183 = distinct !DILexicalBlock(scope: !6177, file: !3, line: 529, column: 46)
!6184 = !DILocation(line: 530, column: 7, scope: !6182)
!6185 = !DILocation(line: 530, column: 24, scope: !6182)
!6186 = !DILocation(line: 530, column: 21, scope: !6182)
!6187 = !DILocation(line: 530, column: 7, scope: !6183)
!6188 = !DILocation(line: 531, column: 11, scope: !6182)
!6189 = !DILocation(line: 531, column: 4, scope: !6182)
!6190 = !DILocation(line: 532, column: 2, scope: !6183)
!6191 = !DILocation(line: 529, column: 42, scope: !6177)
!6192 = !DILocation(line: 529, column: 2, scope: !6177)
!6193 = distinct !{!6193, !6180, !6194}
!6194 = !DILocation(line: 532, column: 2, scope: !6173)
!6195 = !DILocation(line: 533, column: 9, scope: !6165)
!6196 = !DILocation(line: 533, column: 2, scope: !6165)
!6197 = distinct !DISubprogram(name: "con2fb_release_oldinfo", scope: !3, file: !3, line: 751, type: !6198, scopeLine: 754, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !241)
!6198 = !DISubroutineType(types: !6199)
!6199 = !{!170, !4826, !199, !199, !170, !170, !170}
!6200 = !DILocalVariable(name: "vc", arg: 1, scope: !6197, file: !3, line: 751, type: !4826)
!6201 = !DILocation(line: 751, column: 51, scope: !6197)
!6202 = !DILocalVariable(name: "oldinfo", arg: 2, scope: !6197, file: !3, line: 751, type: !199)
!6203 = !DILocation(line: 751, column: 71, scope: !6197)
!6204 = !DILocalVariable(name: "newinfo", arg: 3, scope: !6197, file: !3, line: 752, type: !199)
!6205 = !DILocation(line: 752, column: 23, scope: !6197)
!6206 = !DILocalVariable(name: "unit", arg: 4, scope: !6197, file: !3, line: 752, type: !170)
!6207 = !DILocation(line: 752, column: 36, scope: !6197)
!6208 = !DILocalVariable(name: "oldidx", arg: 5, scope: !6197, file: !3, line: 753, type: !170)
!6209 = !DILocation(line: 753, column: 11, scope: !6197)
!6210 = !DILocalVariable(name: "found", arg: 6, scope: !6197, file: !3, line: 753, type: !170)
!6211 = !DILocation(line: 753, column: 23, scope: !6197)
!6212 = !DILocalVariable(name: "ops", scope: !6197, file: !3, line: 755, type: !4818)
!6213 = !DILocation(line: 755, column: 20, scope: !6197)
!6214 = !DILocation(line: 755, column: 26, scope: !6197)
!6215 = !DILocation(line: 755, column: 35, scope: !6197)
!6216 = !DILocalVariable(name: "err", scope: !6197, file: !3, line: 756, type: !170)
!6217 = !DILocation(line: 756, column: 6, scope: !6197)
!6218 = !DILocalVariable(name: "ret", scope: !6197, file: !3, line: 756, type: !170)
!6219 = !DILocation(line: 756, column: 15, scope: !6197)
!6220 = !DILocation(line: 758, column: 6, scope: !6221)
!6221 = distinct !DILexicalBlock(scope: !6197, file: !3, line: 758, column: 6)
!6222 = !DILocation(line: 758, column: 15, scope: !6221)
!6223 = !DILocation(line: 758, column: 22, scope: !6221)
!6224 = !DILocation(line: 758, column: 33, scope: !6221)
!6225 = !DILocation(line: 759, column: 6, scope: !6221)
!6226 = !DILocation(line: 759, column: 15, scope: !6221)
!6227 = !DILocation(line: 759, column: 22, scope: !6221)
!6228 = !DILocation(line: 759, column: 33, scope: !6221)
!6229 = !DILocation(line: 758, column: 6, scope: !6197)
!6230 = !DILocation(line: 760, column: 22, scope: !6231)
!6231 = distinct !DILexicalBlock(scope: !6221, file: !3, line: 759, column: 46)
!6232 = !DILocation(line: 760, column: 14, scope: !6231)
!6233 = !DILocation(line: 760, column: 3, scope: !6231)
!6234 = !DILocation(line: 760, column: 20, scope: !6231)
!6235 = !DILocation(line: 761, column: 8, scope: !6236)
!6236 = distinct !DILexicalBlock(scope: !6231, file: !3, line: 761, column: 7)
!6237 = !DILocation(line: 761, column: 14, scope: !6236)
!6238 = !DILocation(line: 761, column: 17, scope: !6236)
!6239 = !DILocation(line: 761, column: 26, scope: !6236)
!6240 = !DILocation(line: 761, column: 33, scope: !6236)
!6241 = !DILocation(line: 761, column: 7, scope: !6231)
!6242 = !DILocation(line: 762, column: 4, scope: !6236)
!6243 = !DILocation(line: 762, column: 13, scope: !6236)
!6244 = !DILocation(line: 762, column: 20, scope: !6236)
!6245 = !DILocation(line: 762, column: 31, scope: !6236)
!6246 = !DILocation(line: 763, column: 8, scope: !6247)
!6247 = distinct !DILexicalBlock(scope: !6231, file: !3, line: 763, column: 7)
!6248 = !DILocation(line: 763, column: 7, scope: !6231)
!6249 = !DILocation(line: 764, column: 15, scope: !6247)
!6250 = !DILocation(line: 764, column: 24, scope: !6247)
!6251 = !DILocation(line: 764, column: 31, scope: !6247)
!6252 = !DILocation(line: 764, column: 4, scope: !6247)
!6253 = !DILocation(line: 765, column: 7, scope: !6231)
!6254 = !DILocation(line: 766, column: 2, scope: !6231)
!6255 = !DILocation(line: 768, column: 7, scope: !6256)
!6256 = distinct !DILexicalBlock(scope: !6197, file: !3, line: 768, column: 6)
!6257 = !DILocation(line: 768, column: 6, scope: !6197)
!6258 = !DILocation(line: 769, column: 26, scope: !6259)
!6259 = distinct !DILexicalBlock(scope: !6256, file: !3, line: 768, column: 12)
!6260 = !DILocation(line: 769, column: 3, scope: !6259)
!6261 = !DILocation(line: 770, column: 9, scope: !6259)
!6262 = !DILocation(line: 770, column: 14, scope: !6259)
!6263 = !DILocation(line: 770, column: 27, scope: !6259)
!6264 = !DILocation(line: 770, column: 3, scope: !6259)
!6265 = !DILocation(line: 771, column: 9, scope: !6259)
!6266 = !DILocation(line: 771, column: 14, scope: !6259)
!6267 = !DILocation(line: 771, column: 3, scope: !6259)
!6268 = !DILocation(line: 772, column: 9, scope: !6259)
!6269 = !DILocation(line: 772, column: 14, scope: !6259)
!6270 = !DILocation(line: 772, column: 3, scope: !6259)
!6271 = !DILocation(line: 773, column: 9, scope: !6259)
!6272 = !DILocation(line: 773, column: 14, scope: !6259)
!6273 = !DILocation(line: 773, column: 3, scope: !6259)
!6274 = !DILocation(line: 774, column: 9, scope: !6259)
!6275 = !DILocation(line: 774, column: 18, scope: !6259)
!6276 = !DILocation(line: 774, column: 3, scope: !6259)
!6277 = !DILocation(line: 775, column: 3, scope: !6259)
!6278 = !DILocation(line: 775, column: 12, scope: !6259)
!6279 = !DILocation(line: 775, column: 22, scope: !6259)
!6280 = !DILocation(line: 776, column: 14, scope: !6259)
!6281 = !DILocation(line: 776, column: 23, scope: !6259)
!6282 = !DILocation(line: 776, column: 30, scope: !6259)
!6283 = !DILocation(line: 776, column: 3, scope: !6259)
!6284 = !DILocation(line: 784, column: 7, scope: !6285)
!6285 = distinct !DILexicalBlock(scope: !6259, file: !3, line: 784, column: 7)
!6286 = !DILocation(line: 784, column: 15, scope: !6285)
!6287 = !DILocation(line: 784, column: 18, scope: !6285)
!6288 = !DILocation(line: 784, column: 27, scope: !6285)
!6289 = !DILocation(line: 784, column: 34, scope: !6285)
!6290 = !DILocation(line: 784, column: 7, scope: !6259)
!6291 = !DILocation(line: 785, column: 10, scope: !6292)
!6292 = distinct !DILexicalBlock(scope: !6285, file: !3, line: 784, column: 46)
!6293 = !DILocation(line: 785, column: 19, scope: !6292)
!6294 = !DILocation(line: 785, column: 26, scope: !6292)
!6295 = !DILocation(line: 785, column: 37, scope: !6292)
!6296 = !DILocation(line: 785, column: 8, scope: !6292)
!6297 = !DILocation(line: 787, column: 8, scope: !6298)
!6298 = distinct !DILexicalBlock(scope: !6292, file: !3, line: 787, column: 8)
!6299 = !DILocation(line: 787, column: 8, scope: !6292)
!6300 = !DILocation(line: 790, column: 25, scope: !6298)
!6301 = !DILocation(line: 788, column: 5, scope: !6298)
!6302 = !DILocation(line: 791, column: 3, scope: !6292)
!6303 = !DILocation(line: 792, column: 2, scope: !6259)
!6304 = !DILocation(line: 794, column: 9, scope: !6197)
!6305 = !DILocation(line: 794, column: 2, scope: !6197)
!6306 = distinct !DISubprogram(name: "fbcon_unbind", scope: !3, file: !3, line: 2781, type: !2780, scopeLine: 2782, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !241)
!6307 = !DILocalVariable(name: "ret", scope: !6306, file: !3, line: 2783, type: !170)
!6308 = !DILocation(line: 2783, column: 6, scope: !6306)
!6309 = !DILocation(line: 2785, column: 38, scope: !6306)
!6310 = !DILocation(line: 2785, column: 51, scope: !6306)
!6311 = !DILocation(line: 2786, column: 5, scope: !6306)
!6312 = !DILocation(line: 2785, column: 8, scope: !6306)
!6313 = !DILocation(line: 2785, column: 6, scope: !6306)
!6314 = !DILocation(line: 2788, column: 7, scope: !6315)
!6315 = distinct !DILexicalBlock(scope: !6306, file: !3, line: 2788, column: 6)
!6316 = !DILocation(line: 2788, column: 6, scope: !6306)
!6317 = !DILocation(line: 2789, column: 26, scope: !6315)
!6318 = !DILocation(line: 2789, column: 3, scope: !6315)
!6319 = !DILocation(line: 2790, column: 1, scope: !6306)
!6320 = distinct !DISubprogram(name: "fbcon_fb_unregistered", scope: !3, file: !3, line: 2847, type: !4580, scopeLine: 2848, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !241)
!6321 = !DILocation(line: 23, column: 61, scope: !5820, inlinedAt: !6322)
!6322 = distinct !DILocation(line: 28, column: 9, scope: !5828, inlinedAt: !6323)
!6323 = distinct !DILocation(line: 2851, column: 2, scope: !6324)
!6324 = distinct !DILexicalBlock(scope: !6320, file: !3, line: 2851, column: 2)
!6325 = !DILocation(line: 69, column: 73, scope: !5833, inlinedAt: !6326)
!6326 = distinct !DILocation(line: 27, column: 2, scope: !5828, inlinedAt: !6323)
!6327 = !DILocation(line: 69, column: 83, scope: !5833, inlinedAt: !6326)
!6328 = !DILocation(line: 25, column: 29, scope: !5828, inlinedAt: !6323)
!6329 = !DILocalVariable(name: "info", arg: 1, scope: !6320, file: !3, line: 2847, type: !199)
!6330 = !DILocation(line: 2847, column: 44, scope: !6320)
!6331 = !DILocalVariable(name: "i", scope: !6320, file: !3, line: 2849, type: !170)
!6332 = !DILocation(line: 2849, column: 6, scope: !6320)
!6333 = !DILocalVariable(name: "idx", scope: !6320, file: !3, line: 2849, type: !170)
!6334 = !DILocation(line: 2849, column: 9, scope: !6320)
!6335 = !DILocalVariable(name: "__ret_warn_on", scope: !6324, file: !3, line: 2851, type: !170)
!6336 = !DILocation(line: 2851, column: 2, scope: !6324)
!6337 = !DILocation(line: 27, column: 25, scope: !5828, inlinedAt: !6323)
!6338 = !DILocation(line: 71, column: 19, scope: !5833, inlinedAt: !6326)
!6339 = !DILocation(line: 71, column: 22, scope: !5833, inlinedAt: !6326)
!6340 = !DILocation(line: 71, column: 2, scope: !5833, inlinedAt: !6326)
!6341 = !DILocation(line: 72, column: 2, scope: !5833, inlinedAt: !6326)
!6342 = !DILocation(line: 28, column: 26, scope: !5828, inlinedAt: !6323)
!6343 = !DILocation(line: 29, column: 9, scope: !5820, inlinedAt: !6322)
!6344 = !DILocation(line: 0, scope: !6324)
!6345 = !DILocation(line: 2851, column: 2, scope: !6346)
!6346 = distinct !DILexicalBlock(scope: !6324, file: !3, line: 2851, column: 2)
!6347 = !DILocation(line: 2851, column: 2, scope: !6348)
!6348 = distinct !DILexicalBlock(scope: !6346, file: !3, line: 2851, column: 2)
!6349 = !DILocation(line: 2851, column: 2, scope: !6350)
!6350 = distinct !DILexicalBlock(scope: !6348, file: !3, line: 2851, column: 2)
!6351 = !DILocation(line: 2851, column: 2, scope: !6352)
!6352 = distinct !DILexicalBlock(scope: !6348, file: !3, line: 2851, column: 2)
!6353 = !{i32 -2140956382, i32 -2140956353, i32 -2140956307, i32 -2140956249, i32 -2140956195, i32 -2140956141, i32 -2140956086, i32 -2140956055}
!6354 = !DILocation(line: 2851, column: 2, scope: !6355)
!6355 = distinct !DILexicalBlock(scope: !6348, file: !3, line: 2851, column: 2)
!6356 = !{i32 -2140955640, i32 -2140955633, i32 -2140955581, i32 -2140955550, i32 -2140955520}
!6357 = !DILocation(line: 2851, column: 2, scope: !6358)
!6358 = distinct !DILexicalBlock(scope: !6348, file: !3, line: 2851, column: 2)
!6359 = !DILocation(line: 2856, column: 8, scope: !6320)
!6360 = !DILocation(line: 2856, column: 14, scope: !6320)
!6361 = !DILocation(line: 2856, column: 6, scope: !6320)
!6362 = !DILocation(line: 2857, column: 11, scope: !6363)
!6363 = distinct !DILexicalBlock(scope: !6320, file: !3, line: 2857, column: 2)
!6364 = !DILocation(line: 2857, column: 9, scope: !6363)
!6365 = !DILocation(line: 2857, column: 7, scope: !6363)
!6366 = !DILocation(line: 2857, column: 24, scope: !6367)
!6367 = distinct !DILexicalBlock(scope: !6363, file: !3, line: 2857, column: 2)
!6368 = !DILocation(line: 2857, column: 29, scope: !6367)
!6369 = !DILocation(line: 2857, column: 26, scope: !6367)
!6370 = !DILocation(line: 2857, column: 2, scope: !6363)
!6371 = !DILocation(line: 2858, column: 18, scope: !6372)
!6372 = distinct !DILexicalBlock(scope: !6373, file: !3, line: 2858, column: 7)
!6373 = distinct !DILexicalBlock(scope: !6367, file: !3, line: 2857, column: 46)
!6374 = !DILocation(line: 2858, column: 7, scope: !6372)
!6375 = !DILocation(line: 2858, column: 24, scope: !6372)
!6376 = !DILocation(line: 2858, column: 21, scope: !6372)
!6377 = !DILocation(line: 2858, column: 7, scope: !6373)
!6378 = !DILocation(line: 2859, column: 15, scope: !6372)
!6379 = !DILocation(line: 2859, column: 4, scope: !6372)
!6380 = !DILocation(line: 2859, column: 18, scope: !6372)
!6381 = !DILocation(line: 2860, column: 2, scope: !6373)
!6382 = !DILocation(line: 2857, column: 42, scope: !6367)
!6383 = !DILocation(line: 2857, column: 2, scope: !6367)
!6384 = distinct !{!6384, !6370, !6385}
!6385 = !DILocation(line: 2860, column: 2, scope: !6363)
!6386 = !DILocation(line: 2862, column: 6, scope: !6387)
!6387 = distinct !DILexicalBlock(scope: !6320, file: !3, line: 2862, column: 6)
!6388 = !DILocation(line: 2862, column: 13, scope: !6387)
!6389 = !DILocation(line: 2862, column: 10, scope: !6387)
!6390 = !DILocation(line: 2862, column: 6, scope: !6320)
!6391 = !DILocation(line: 2863, column: 12, scope: !6392)
!6392 = distinct !DILexicalBlock(scope: !6387, file: !3, line: 2862, column: 23)
!6393 = !DILocation(line: 2865, column: 3, scope: !6394)
!6394 = distinct !DILexicalBlock(scope: !6392, file: !3, line: 2865, column: 3)
!6395 = !DILocation(line: 2865, column: 3, scope: !6396)
!6396 = distinct !DILexicalBlock(scope: !6394, file: !3, line: 2865, column: 3)
!6397 = !DILocation(line: 2865, column: 3, scope: !6398)
!6398 = distinct !DILexicalBlock(scope: !6396, file: !3, line: 2865, column: 3)
!6399 = !DILocation(line: 2865, column: 3, scope: !6400)
!6400 = distinct !DILexicalBlock(scope: !6398, file: !3, line: 2865, column: 3)
!6401 = !DILocation(line: 2866, column: 15, scope: !6402)
!6402 = distinct !DILexicalBlock(scope: !6398, file: !3, line: 2865, column: 29)
!6403 = !DILocation(line: 2866, column: 13, scope: !6402)
!6404 = !DILocation(line: 2867, column: 4, scope: !6402)
!6405 = distinct !{!6405, !6393, !6406}
!6406 = !DILocation(line: 2868, column: 3, scope: !6394)
!6407 = !DILocation(line: 2869, column: 2, scope: !6392)
!6408 = !DILocation(line: 2871, column: 6, scope: !6409)
!6409 = distinct !DILexicalBlock(scope: !6320, file: !3, line: 2871, column: 6)
!6410 = !DILocation(line: 2871, column: 15, scope: !6409)
!6411 = !DILocation(line: 2871, column: 6, scope: !6320)
!6412 = !DILocation(line: 2872, column: 12, scope: !6413)
!6413 = distinct !DILexicalBlock(scope: !6414, file: !3, line: 2872, column: 3)
!6414 = distinct !DILexicalBlock(scope: !6409, file: !3, line: 2871, column: 22)
!6415 = !DILocation(line: 2872, column: 10, scope: !6413)
!6416 = !DILocation(line: 2872, column: 8, scope: !6413)
!6417 = !DILocation(line: 2872, column: 25, scope: !6418)
!6418 = distinct !DILexicalBlock(scope: !6413, file: !3, line: 2872, column: 3)
!6419 = !DILocation(line: 2872, column: 30, scope: !6418)
!6420 = !DILocation(line: 2872, column: 27, scope: !6418)
!6421 = !DILocation(line: 2872, column: 3, scope: !6413)
!6422 = !DILocation(line: 2873, column: 19, scope: !6423)
!6423 = distinct !DILexicalBlock(scope: !6424, file: !3, line: 2873, column: 8)
!6424 = distinct !DILexicalBlock(scope: !6418, file: !3, line: 2872, column: 47)
!6425 = !DILocation(line: 2873, column: 8, scope: !6423)
!6426 = !DILocation(line: 2873, column: 22, scope: !6423)
!6427 = !DILocation(line: 2873, column: 8, scope: !6424)
!6428 = !DILocation(line: 2874, column: 21, scope: !6423)
!6429 = !DILocation(line: 2874, column: 16, scope: !6423)
!6430 = !DILocation(line: 2874, column: 5, scope: !6423)
!6431 = !DILocation(line: 2874, column: 19, scope: !6423)
!6432 = !DILocation(line: 2875, column: 3, scope: !6424)
!6433 = !DILocation(line: 2872, column: 43, scope: !6418)
!6434 = !DILocation(line: 2872, column: 3, scope: !6418)
!6435 = distinct !{!6435, !6421, !6436}
!6436 = !DILocation(line: 2875, column: 3, scope: !6413)
!6437 = !DILocation(line: 2876, column: 2, scope: !6414)
!6438 = !DILocation(line: 2878, column: 6, scope: !6439)
!6439 = distinct !DILexicalBlock(scope: !6320, file: !3, line: 2878, column: 6)
!6440 = !DILocation(line: 2878, column: 24, scope: !6439)
!6441 = !DILocation(line: 2878, column: 21, scope: !6439)
!6442 = !DILocation(line: 2878, column: 6, scope: !6320)
!6443 = !DILocation(line: 2879, column: 18, scope: !6439)
!6444 = !DILocation(line: 2879, column: 3, scope: !6439)
!6445 = !DILocation(line: 2881, column: 7, scope: !6446)
!6446 = distinct !DILexicalBlock(scope: !6320, file: !3, line: 2881, column: 6)
!6447 = !DILocation(line: 2881, column: 6, scope: !6320)
!6448 = !DILocation(line: 2882, column: 3, scope: !6446)
!6449 = !DILocation(line: 2883, column: 1, scope: !6320)
!6450 = distinct !DISubprogram(name: "fbcon_remap_all", scope: !3, file: !3, line: 2885, type: !4580, scopeLine: 2886, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !241)
!6451 = !DILocalVariable(name: "info", arg: 1, scope: !6450, file: !3, line: 2885, type: !199)
!6452 = !DILocation(line: 2885, column: 38, scope: !6450)
!6453 = !DILocalVariable(name: "i", scope: !6450, file: !3, line: 2887, type: !170)
!6454 = !DILocation(line: 2887, column: 6, scope: !6450)
!6455 = !DILocalVariable(name: "idx", scope: !6450, file: !3, line: 2887, type: !170)
!6456 = !DILocation(line: 2887, column: 9, scope: !6450)
!6457 = !DILocation(line: 2887, column: 15, scope: !6450)
!6458 = !DILocation(line: 2887, column: 21, scope: !6450)
!6459 = !DILocation(line: 2889, column: 2, scope: !6450)
!6460 = !DILocation(line: 2898, column: 11, scope: !6461)
!6461 = distinct !DILexicalBlock(scope: !6450, file: !3, line: 2898, column: 2)
!6462 = !DILocation(line: 2898, column: 9, scope: !6461)
!6463 = !DILocation(line: 2898, column: 7, scope: !6461)
!6464 = !DILocation(line: 2898, column: 24, scope: !6465)
!6465 = distinct !DILexicalBlock(scope: !6461, file: !3, line: 2898, column: 2)
!6466 = !DILocation(line: 2898, column: 29, scope: !6465)
!6467 = !DILocation(line: 2898, column: 26, scope: !6465)
!6468 = !DILocation(line: 2898, column: 2, scope: !6461)
!6469 = !DILocation(line: 2899, column: 18, scope: !6465)
!6470 = !DILocation(line: 2899, column: 21, scope: !6465)
!6471 = !DILocation(line: 2899, column: 3, scope: !6465)
!6472 = !DILocation(line: 2898, column: 42, scope: !6465)
!6473 = !DILocation(line: 2898, column: 2, scope: !6465)
!6474 = distinct !{!6474, !6468, !6475}
!6475 = !DILocation(line: 2899, column: 27, scope: !6461)
!6476 = !DILocation(line: 2901, column: 6, scope: !6477)
!6477 = distinct !DILexicalBlock(scope: !6450, file: !3, line: 2901, column: 6)
!6478 = !DILocation(line: 2901, column: 6, scope: !6450)
!6479 = !DILocation(line: 2903, column: 34, scope: !6480)
!6480 = distinct !DILexicalBlock(scope: !6477, file: !3, line: 2901, column: 29)
!6481 = !DILocation(line: 2904, column: 10, scope: !6480)
!6482 = !DILocation(line: 2904, column: 22, scope: !6480)
!6483 = !DILocation(line: 2904, column: 27, scope: !6480)
!6484 = !DILocation(line: 2904, column: 38, scope: !6480)
!6485 = !DILocation(line: 2902, column: 3, scope: !6480)
!6486 = !DILocation(line: 2905, column: 14, scope: !6480)
!6487 = !DILocation(line: 2905, column: 12, scope: !6480)
!6488 = !DILocation(line: 2906, column: 2, scope: !6480)
!6489 = !DILocation(line: 2907, column: 2, scope: !6450)
!6490 = !DILocation(line: 2908, column: 1, scope: !6450)
!6491 = distinct !DISubprogram(name: "fbcon_fb_registered", scope: !3, file: !3, line: 2941, type: !4612, scopeLine: 2942, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !241)
!6492 = !DILocation(line: 23, column: 61, scope: !5820, inlinedAt: !6493)
!6493 = distinct !DILocation(line: 28, column: 9, scope: !5828, inlinedAt: !6494)
!6494 = distinct !DILocation(line: 2945, column: 2, scope: !6495)
!6495 = distinct !DILexicalBlock(scope: !6491, file: !3, line: 2945, column: 2)
!6496 = !DILocation(line: 69, column: 73, scope: !5833, inlinedAt: !6497)
!6497 = distinct !DILocation(line: 27, column: 2, scope: !5828, inlinedAt: !6494)
!6498 = !DILocation(line: 69, column: 83, scope: !5833, inlinedAt: !6497)
!6499 = !DILocation(line: 25, column: 29, scope: !5828, inlinedAt: !6494)
!6500 = !DILocalVariable(name: "info", arg: 1, scope: !6491, file: !3, line: 2941, type: !199)
!6501 = !DILocation(line: 2941, column: 41, scope: !6491)
!6502 = !DILocalVariable(name: "ret", scope: !6491, file: !3, line: 2943, type: !170)
!6503 = !DILocation(line: 2943, column: 6, scope: !6491)
!6504 = !DILocalVariable(name: "i", scope: !6491, file: !3, line: 2943, type: !170)
!6505 = !DILocation(line: 2943, column: 15, scope: !6491)
!6506 = !DILocalVariable(name: "idx", scope: !6491, file: !3, line: 2943, type: !170)
!6507 = !DILocation(line: 2943, column: 18, scope: !6491)
!6508 = !DILocalVariable(name: "__ret_warn_on", scope: !6495, file: !3, line: 2945, type: !170)
!6509 = !DILocation(line: 2945, column: 2, scope: !6495)
!6510 = !DILocation(line: 27, column: 25, scope: !5828, inlinedAt: !6494)
!6511 = !DILocation(line: 71, column: 19, scope: !5833, inlinedAt: !6497)
!6512 = !DILocation(line: 71, column: 22, scope: !5833, inlinedAt: !6497)
!6513 = !DILocation(line: 71, column: 2, scope: !5833, inlinedAt: !6497)
!6514 = !DILocation(line: 72, column: 2, scope: !5833, inlinedAt: !6497)
!6515 = !DILocation(line: 28, column: 26, scope: !5828, inlinedAt: !6494)
!6516 = !DILocation(line: 29, column: 9, scope: !5820, inlinedAt: !6493)
!6517 = !DILocation(line: 0, scope: !6495)
!6518 = !DILocation(line: 2945, column: 2, scope: !6519)
!6519 = distinct !DILexicalBlock(scope: !6495, file: !3, line: 2945, column: 2)
!6520 = !DILocation(line: 2945, column: 2, scope: !6521)
!6521 = distinct !DILexicalBlock(scope: !6519, file: !3, line: 2945, column: 2)
!6522 = !DILocation(line: 2945, column: 2, scope: !6523)
!6523 = distinct !DILexicalBlock(scope: !6521, file: !3, line: 2945, column: 2)
!6524 = !DILocation(line: 2945, column: 2, scope: !6525)
!6525 = distinct !DILexicalBlock(scope: !6521, file: !3, line: 2945, column: 2)
!6526 = !{i32 -2140954592, i32 -2140954563, i32 -2140954517, i32 -2140954459, i32 -2140954405, i32 -2140954351, i32 -2140954296, i32 -2140954265}
!6527 = !DILocation(line: 2945, column: 2, scope: !6528)
!6528 = distinct !DILexicalBlock(scope: !6521, file: !3, line: 2945, column: 2)
!6529 = !{i32 -2140953850, i32 -2140953843, i32 -2140953791, i32 -2140953760, i32 -2140953730}
!6530 = !DILocation(line: 2945, column: 2, scope: !6531)
!6531 = distinct !DILexicalBlock(scope: !6521, file: !3, line: 2945, column: 2)
!6532 = !DILocation(line: 2947, column: 8, scope: !6491)
!6533 = !DILocation(line: 2947, column: 14, scope: !6491)
!6534 = !DILocation(line: 2947, column: 6, scope: !6491)
!6535 = !DILocation(line: 2948, column: 23, scope: !6491)
!6536 = !DILocation(line: 2948, column: 2, scope: !6491)
!6537 = !DILocation(line: 2955, column: 6, scope: !6538)
!6538 = distinct !DILexicalBlock(scope: !6491, file: !3, line: 2955, column: 6)
!6539 = !DILocation(line: 2955, column: 15, scope: !6538)
!6540 = !DILocation(line: 2955, column: 6, scope: !6491)
!6541 = !DILocation(line: 2956, column: 12, scope: !6542)
!6542 = distinct !DILexicalBlock(scope: !6543, file: !3, line: 2956, column: 3)
!6543 = distinct !DILexicalBlock(scope: !6538, file: !3, line: 2955, column: 22)
!6544 = !DILocation(line: 2956, column: 10, scope: !6542)
!6545 = !DILocation(line: 2956, column: 8, scope: !6542)
!6546 = !DILocation(line: 2956, column: 25, scope: !6547)
!6547 = distinct !DILexicalBlock(scope: !6542, file: !3, line: 2956, column: 3)
!6548 = !DILocation(line: 2956, column: 30, scope: !6547)
!6549 = !DILocation(line: 2956, column: 27, scope: !6547)
!6550 = !DILocation(line: 2956, column: 3, scope: !6542)
!6551 = !DILocation(line: 2957, column: 24, scope: !6552)
!6552 = distinct !DILexicalBlock(scope: !6553, file: !3, line: 2957, column: 8)
!6553 = distinct !DILexicalBlock(scope: !6547, file: !3, line: 2956, column: 47)
!6554 = !DILocation(line: 2957, column: 8, scope: !6552)
!6555 = !DILocation(line: 2957, column: 30, scope: !6552)
!6556 = !DILocation(line: 2957, column: 27, scope: !6552)
!6557 = !DILocation(line: 2957, column: 8, scope: !6553)
!6558 = !DILocation(line: 2958, column: 16, scope: !6559)
!6559 = distinct !DILexicalBlock(scope: !6552, file: !3, line: 2957, column: 35)
!6560 = !DILocation(line: 2958, column: 14, scope: !6559)
!6561 = !DILocation(line: 2959, column: 5, scope: !6559)
!6562 = !DILocation(line: 2961, column: 3, scope: !6553)
!6563 = !DILocation(line: 2956, column: 43, scope: !6547)
!6564 = !DILocation(line: 2956, column: 3, scope: !6547)
!6565 = distinct !{!6565, !6550, !6566}
!6566 = !DILocation(line: 2961, column: 3, scope: !6542)
!6567 = !DILocation(line: 2963, column: 7, scope: !6568)
!6568 = distinct !DILexicalBlock(scope: !6543, file: !3, line: 2963, column: 7)
!6569 = !DILocation(line: 2963, column: 16, scope: !6568)
!6570 = !DILocation(line: 2963, column: 7, scope: !6543)
!6571 = !DILocation(line: 2964, column: 10, scope: !6568)
!6572 = !DILocation(line: 2964, column: 8, scope: !6568)
!6573 = !DILocation(line: 2964, column: 4, scope: !6568)
!6574 = !DILocation(line: 2965, column: 2, scope: !6543)
!6575 = !DILocation(line: 2966, column: 12, scope: !6576)
!6576 = distinct !DILexicalBlock(scope: !6577, file: !3, line: 2966, column: 3)
!6577 = distinct !DILexicalBlock(scope: !6538, file: !3, line: 2965, column: 9)
!6578 = !DILocation(line: 2966, column: 10, scope: !6576)
!6579 = !DILocation(line: 2966, column: 8, scope: !6576)
!6580 = !DILocation(line: 2966, column: 25, scope: !6581)
!6581 = distinct !DILexicalBlock(scope: !6576, file: !3, line: 2966, column: 3)
!6582 = !DILocation(line: 2966, column: 30, scope: !6581)
!6583 = !DILocation(line: 2966, column: 27, scope: !6581)
!6584 = !DILocation(line: 2966, column: 3, scope: !6576)
!6585 = !DILocation(line: 2967, column: 24, scope: !6586)
!6586 = distinct !DILexicalBlock(scope: !6587, file: !3, line: 2967, column: 8)
!6587 = distinct !DILexicalBlock(scope: !6581, file: !3, line: 2966, column: 47)
!6588 = !DILocation(line: 2967, column: 8, scope: !6586)
!6589 = !DILocation(line: 2967, column: 30, scope: !6586)
!6590 = !DILocation(line: 2967, column: 27, scope: !6586)
!6591 = !DILocation(line: 2967, column: 8, scope: !6587)
!6592 = !DILocation(line: 2968, column: 20, scope: !6586)
!6593 = !DILocation(line: 2968, column: 23, scope: !6586)
!6594 = !DILocation(line: 2968, column: 5, scope: !6586)
!6595 = !DILocation(line: 2969, column: 3, scope: !6587)
!6596 = !DILocation(line: 2966, column: 43, scope: !6581)
!6597 = !DILocation(line: 2966, column: 3, scope: !6581)
!6598 = distinct !{!6598, !6584, !6599}
!6599 = !DILocation(line: 2969, column: 3, scope: !6576)
!6600 = !DILocation(line: 2972, column: 9, scope: !6491)
!6601 = !DILocation(line: 2972, column: 2, scope: !6491)
!6602 = distinct !DISubprogram(name: "fbcon_select_primary", scope: !3, file: !3, line: 2911, type: !4580, scopeLine: 2912, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !241)
!6603 = !DILocalVariable(name: "info", arg: 1, scope: !6602, file: !3, line: 2911, type: !199)
!6604 = !DILocation(line: 2911, column: 50, scope: !6602)
!6605 = !DILocation(line: 2913, column: 7, scope: !6606)
!6606 = distinct !DILexicalBlock(scope: !6602, file: !3, line: 2913, column: 6)
!6607 = !DILocation(line: 2913, column: 20, scope: !6606)
!6608 = !DILocation(line: 2913, column: 23, scope: !6606)
!6609 = !DILocation(line: 2913, column: 38, scope: !6606)
!6610 = !DILocation(line: 2913, column: 44, scope: !6606)
!6611 = !DILocation(line: 2914, column: 27, scope: !6606)
!6612 = !DILocation(line: 2914, column: 6, scope: !6606)
!6613 = !DILocation(line: 2913, column: 6, scope: !6602)
!6614 = !DILocalVariable(name: "i", scope: !6615, file: !3, line: 2915, type: !170)
!6615 = distinct !DILexicalBlock(scope: !6606, file: !3, line: 2914, column: 34)
!6616 = !DILocation(line: 2915, column: 7, scope: !6615)
!6617 = !DILocation(line: 2918, column: 10, scope: !6615)
!6618 = !DILocation(line: 2918, column: 16, scope: !6615)
!6619 = !DILocation(line: 2918, column: 20, scope: !6615)
!6620 = !DILocation(line: 2918, column: 24, scope: !6615)
!6621 = !DILocation(line: 2918, column: 30, scope: !6615)
!6622 = !DILocation(line: 2917, column: 3, scope: !6615)
!6623 = !DILocation(line: 2919, column: 20, scope: !6615)
!6624 = !DILocation(line: 2919, column: 26, scope: !6615)
!6625 = !DILocation(line: 2919, column: 18, scope: !6615)
!6626 = !DILocation(line: 2921, column: 12, scope: !6627)
!6627 = distinct !DILexicalBlock(scope: !6615, file: !3, line: 2921, column: 3)
!6628 = !DILocation(line: 2921, column: 10, scope: !6627)
!6629 = !DILocation(line: 2921, column: 8, scope: !6627)
!6630 = !DILocation(line: 2921, column: 25, scope: !6631)
!6631 = distinct !DILexicalBlock(scope: !6627, file: !3, line: 2921, column: 3)
!6632 = !DILocation(line: 2921, column: 30, scope: !6631)
!6633 = !DILocation(line: 2921, column: 27, scope: !6631)
!6634 = !DILocation(line: 2921, column: 3, scope: !6627)
!6635 = !DILocation(line: 2922, column: 25, scope: !6631)
!6636 = !DILocation(line: 2922, column: 20, scope: !6631)
!6637 = !DILocation(line: 2922, column: 4, scope: !6631)
!6638 = !DILocation(line: 2922, column: 23, scope: !6631)
!6639 = !DILocation(line: 2921, column: 43, scope: !6631)
!6640 = !DILocation(line: 2921, column: 3, scope: !6631)
!6641 = distinct !{!6641, !6634, !6642}
!6642 = !DILocation(line: 2922, column: 25, scope: !6627)
!6643 = !DILocation(line: 2924, column: 7, scope: !6644)
!6644 = distinct !DILexicalBlock(scope: !6615, file: !3, line: 2924, column: 7)
!6645 = !DILocation(line: 2924, column: 7, scope: !6615)
!6646 = !DILocation(line: 2926, column: 35, scope: !6647)
!6647 = distinct !DILexicalBlock(scope: !6644, file: !3, line: 2924, column: 30)
!6648 = !DILocation(line: 2926, column: 41, scope: !6647)
!6649 = !DILocation(line: 2927, column: 11, scope: !6647)
!6650 = !DILocation(line: 2927, column: 23, scope: !6647)
!6651 = !DILocation(line: 2927, column: 28, scope: !6647)
!6652 = !DILocation(line: 2927, column: 39, scope: !6647)
!6653 = !DILocation(line: 2925, column: 4, scope: !6647)
!6654 = !DILocation(line: 2928, column: 15, scope: !6647)
!6655 = !DILocation(line: 2928, column: 13, scope: !6647)
!6656 = !DILocation(line: 2929, column: 3, scope: !6647)
!6657 = !DILocation(line: 2930, column: 2, scope: !6615)
!6658 = !DILocation(line: 2932, column: 1, scope: !6602)
!6659 = distinct !DISubprogram(name: "do_fbcon_takeover", scope: !3, file: !3, line: 547, type: !2317, scopeLine: 548, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !241)
!6660 = !DILocalVariable(name: "show_logo", arg: 1, scope: !6659, file: !3, line: 547, type: !170)
!6661 = !DILocation(line: 547, column: 34, scope: !6659)
!6662 = !DILocalVariable(name: "err", scope: !6659, file: !3, line: 549, type: !170)
!6663 = !DILocation(line: 549, column: 6, scope: !6659)
!6664 = !DILocalVariable(name: "i", scope: !6659, file: !3, line: 549, type: !170)
!6665 = !DILocation(line: 549, column: 11, scope: !6659)
!6666 = !DILocation(line: 551, column: 7, scope: !6667)
!6667 = distinct !DILexicalBlock(scope: !6659, file: !3, line: 551, column: 6)
!6668 = !DILocation(line: 551, column: 6, scope: !6659)
!6669 = !DILocation(line: 552, column: 3, scope: !6667)
!6670 = !DILocation(line: 554, column: 7, scope: !6671)
!6671 = distinct !DILexicalBlock(scope: !6659, file: !3, line: 554, column: 6)
!6672 = !DILocation(line: 554, column: 6, scope: !6659)
!6673 = !DILocation(line: 555, column: 14, scope: !6671)
!6674 = !DILocation(line: 555, column: 3, scope: !6671)
!6675 = !DILocation(line: 557, column: 11, scope: !6676)
!6676 = distinct !DILexicalBlock(scope: !6659, file: !3, line: 557, column: 2)
!6677 = !DILocation(line: 557, column: 9, scope: !6676)
!6678 = !DILocation(line: 557, column: 7, scope: !6676)
!6679 = !DILocation(line: 557, column: 24, scope: !6680)
!6680 = distinct !DILexicalBlock(scope: !6676, file: !3, line: 557, column: 2)
!6681 = !DILocation(line: 557, column: 29, scope: !6680)
!6682 = !DILocation(line: 557, column: 26, scope: !6680)
!6683 = !DILocation(line: 557, column: 2, scope: !6676)
!6684 = !DILocation(line: 558, column: 19, scope: !6680)
!6685 = !DILocation(line: 558, column: 14, scope: !6680)
!6686 = !DILocation(line: 558, column: 3, scope: !6680)
!6687 = !DILocation(line: 558, column: 17, scope: !6680)
!6688 = !DILocation(line: 557, column: 42, scope: !6680)
!6689 = !DILocation(line: 557, column: 2, scope: !6680)
!6690 = distinct !{!6690, !6683, !6691}
!6691 = !DILocation(line: 558, column: 19, scope: !6676)
!6692 = !DILocation(line: 560, column: 38, scope: !6659)
!6693 = !DILocation(line: 560, column: 51, scope: !6659)
!6694 = !DILocation(line: 561, column: 5, scope: !6659)
!6695 = !DILocation(line: 560, column: 8, scope: !6659)
!6696 = !DILocation(line: 560, column: 6, scope: !6659)
!6697 = !DILocation(line: 563, column: 6, scope: !6698)
!6698 = distinct !DILexicalBlock(scope: !6659, file: !3, line: 563, column: 6)
!6699 = !DILocation(line: 563, column: 6, scope: !6659)
!6700 = !DILocation(line: 564, column: 12, scope: !6701)
!6701 = distinct !DILexicalBlock(scope: !6702, file: !3, line: 564, column: 3)
!6702 = distinct !DILexicalBlock(scope: !6698, file: !3, line: 563, column: 11)
!6703 = !DILocation(line: 564, column: 10, scope: !6701)
!6704 = !DILocation(line: 564, column: 8, scope: !6701)
!6705 = !DILocation(line: 564, column: 25, scope: !6706)
!6706 = distinct !DILexicalBlock(scope: !6701, file: !3, line: 564, column: 3)
!6707 = !DILocation(line: 564, column: 30, scope: !6706)
!6708 = !DILocation(line: 564, column: 27, scope: !6706)
!6709 = !DILocation(line: 564, column: 3, scope: !6701)
!6710 = !DILocation(line: 565, column: 15, scope: !6706)
!6711 = !DILocation(line: 565, column: 4, scope: !6706)
!6712 = !DILocation(line: 565, column: 18, scope: !6706)
!6713 = !DILocation(line: 564, column: 43, scope: !6706)
!6714 = !DILocation(line: 564, column: 3, scope: !6706)
!6715 = distinct !{!6715, !6709, !6716}
!6716 = !DILocation(line: 565, column: 21, scope: !6701)
!6717 = !DILocation(line: 566, column: 12, scope: !6702)
!6718 = !DILocation(line: 567, column: 2, scope: !6702)
!6719 = !DILocation(line: 568, column: 26, scope: !6720)
!6720 = distinct !DILexicalBlock(scope: !6698, file: !3, line: 567, column: 9)
!6721 = !DILocation(line: 571, column: 9, scope: !6659)
!6722 = !DILocation(line: 571, column: 2, scope: !6659)
!6723 = !DILocation(line: 572, column: 1, scope: !6659)
!6724 = distinct !DISubprogram(name: "fbcon_fb_blanked", scope: !3, file: !3, line: 2975, type: !6725, scopeLine: 2976, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !241)
!6725 = !DISubroutineType(types: !6726)
!6726 = !{null, !199, !170}
!6727 = !DILocalVariable(name: "info", arg: 1, scope: !6724, file: !3, line: 2975, type: !199)
!6728 = !DILocation(line: 2975, column: 39, scope: !6724)
!6729 = !DILocalVariable(name: "blank", arg: 2, scope: !6724, file: !3, line: 2975, type: !170)
!6730 = !DILocation(line: 2975, column: 49, scope: !6724)
!6731 = !DILocalVariable(name: "ops", scope: !6724, file: !3, line: 2977, type: !4818)
!6732 = !DILocation(line: 2977, column: 20, scope: !6724)
!6733 = !DILocation(line: 2977, column: 26, scope: !6724)
!6734 = !DILocation(line: 2977, column: 32, scope: !6724)
!6735 = !DILocalVariable(name: "vc", scope: !6724, file: !3, line: 2978, type: !4826)
!6736 = !DILocation(line: 2978, column: 18, scope: !6724)
!6737 = !DILocation(line: 2980, column: 7, scope: !6738)
!6738 = distinct !DILexicalBlock(scope: !6724, file: !3, line: 2980, column: 6)
!6739 = !DILocation(line: 2980, column: 11, scope: !6738)
!6740 = !DILocation(line: 2980, column: 14, scope: !6738)
!6741 = !DILocation(line: 2980, column: 19, scope: !6738)
!6742 = !DILocation(line: 2980, column: 27, scope: !6738)
!6743 = !DILocation(line: 2980, column: 6, scope: !6724)
!6744 = !DILocation(line: 2981, column: 3, scope: !6738)
!6745 = !DILocation(line: 2983, column: 15, scope: !6724)
!6746 = !DILocation(line: 2983, column: 20, scope: !6724)
!6747 = !DILocation(line: 2983, column: 7, scope: !6724)
!6748 = !DILocation(line: 2983, column: 29, scope: !6724)
!6749 = !DILocation(line: 2983, column: 5, scope: !6724)
!6750 = !DILocation(line: 2984, column: 6, scope: !6751)
!6751 = distinct !DILexicalBlock(scope: !6724, file: !3, line: 2984, column: 6)
!6752 = !DILocation(line: 2984, column: 10, scope: !6751)
!6753 = !DILocation(line: 2984, column: 18, scope: !6751)
!6754 = !DILocation(line: 2984, column: 29, scope: !6751)
!6755 = !DILocation(line: 2985, column: 29, scope: !6751)
!6756 = !DILocation(line: 2985, column: 34, scope: !6751)
!6757 = !DILocation(line: 2985, column: 18, scope: !6751)
!6758 = !DILocation(line: 2985, column: 4, scope: !6751)
!6759 = !DILocation(line: 2985, column: 47, scope: !6751)
!6760 = !DILocation(line: 2985, column: 44, scope: !6751)
!6761 = !DILocation(line: 2984, column: 6, scope: !6724)
!6762 = !DILocation(line: 2986, column: 3, scope: !6751)
!6763 = !DILocation(line: 2988, column: 21, scope: !6764)
!6764 = distinct !DILexicalBlock(scope: !6724, file: !3, line: 2988, column: 6)
!6765 = !DILocation(line: 2988, column: 6, scope: !6764)
!6766 = !DILocation(line: 2988, column: 6, scope: !6724)
!6767 = !DILocation(line: 2989, column: 7, scope: !6768)
!6768 = distinct !DILexicalBlock(scope: !6769, file: !3, line: 2989, column: 7)
!6769 = distinct !DILexicalBlock(scope: !6764, file: !3, line: 2988, column: 26)
!6770 = !DILocation(line: 2989, column: 7, scope: !6769)
!6771 = !DILocation(line: 2990, column: 4, scope: !6768)
!6772 = !DILocation(line: 2992, column: 4, scope: !6768)
!6773 = !DILocation(line: 2993, column: 2, scope: !6769)
!6774 = !DILocation(line: 2994, column: 21, scope: !6724)
!6775 = !DILocation(line: 2994, column: 2, scope: !6724)
!6776 = !DILocation(line: 2994, column: 7, scope: !6724)
!6777 = !DILocation(line: 2994, column: 19, scope: !6724)
!6778 = !DILocation(line: 2995, column: 1, scope: !6724)
!6779 = distinct !DISubprogram(name: "fbcon_new_modelist", scope: !3, file: !3, line: 2997, type: !4580, scopeLine: 2998, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !241)
!6780 = !DILocalVariable(name: "info", arg: 1, scope: !6779, file: !3, line: 2997, type: !199)
!6781 = !DILocation(line: 2997, column: 41, scope: !6779)
!6782 = !DILocalVariable(name: "i", scope: !6779, file: !3, line: 2999, type: !170)
!6783 = !DILocation(line: 2999, column: 6, scope: !6779)
!6784 = !DILocalVariable(name: "vc", scope: !6779, file: !3, line: 3000, type: !4826)
!6785 = !DILocation(line: 3000, column: 18, scope: !6779)
!6786 = !DILocalVariable(name: "var", scope: !6779, file: !3, line: 3001, type: !250)
!6787 = !DILocation(line: 3001, column: 27, scope: !6779)
!6788 = !DILocalVariable(name: "mode", scope: !6779, file: !3, line: 3002, type: !5077)
!6789 = !DILocation(line: 3002, column: 29, scope: !6779)
!6790 = !DILocation(line: 3004, column: 11, scope: !6791)
!6791 = distinct !DILexicalBlock(scope: !6779, file: !3, line: 3004, column: 2)
!6792 = !DILocation(line: 3004, column: 9, scope: !6791)
!6793 = !DILocation(line: 3004, column: 7, scope: !6791)
!6794 = !DILocation(line: 3004, column: 24, scope: !6795)
!6795 = distinct !DILexicalBlock(scope: !6791, file: !3, line: 3004, column: 2)
!6796 = !DILocation(line: 3004, column: 29, scope: !6795)
!6797 = !DILocation(line: 3004, column: 26, scope: !6795)
!6798 = !DILocation(line: 3004, column: 2, scope: !6791)
!6799 = !DILocation(line: 3005, column: 32, scope: !6800)
!6800 = distinct !DILexicalBlock(scope: !6801, file: !3, line: 3005, column: 7)
!6801 = distinct !DILexicalBlock(scope: !6795, file: !3, line: 3004, column: 46)
!6802 = !DILocation(line: 3005, column: 21, scope: !6800)
!6803 = !DILocation(line: 3005, column: 7, scope: !6800)
!6804 = !DILocation(line: 3005, column: 39, scope: !6800)
!6805 = !DILocation(line: 3005, column: 36, scope: !6800)
!6806 = !DILocation(line: 3005, column: 7, scope: !6801)
!6807 = !DILocation(line: 3006, column: 4, scope: !6800)
!6808 = !DILocation(line: 3007, column: 19, scope: !6809)
!6809 = distinct !DILexicalBlock(scope: !6801, file: !3, line: 3007, column: 7)
!6810 = !DILocation(line: 3007, column: 8, scope: !6809)
!6811 = !DILocation(line: 3007, column: 22, scope: !6809)
!6812 = !DILocation(line: 3007, column: 7, scope: !6801)
!6813 = !DILocation(line: 3008, column: 4, scope: !6809)
!6814 = !DILocation(line: 3009, column: 16, scope: !6801)
!6815 = !DILocation(line: 3009, column: 8, scope: !6801)
!6816 = !DILocation(line: 3009, column: 19, scope: !6801)
!6817 = !DILocation(line: 3009, column: 6, scope: !6801)
!6818 = !DILocation(line: 3010, column: 36, scope: !6801)
!6819 = !DILocation(line: 3010, column: 25, scope: !6801)
!6820 = !DILocation(line: 3010, column: 3, scope: !6801)
!6821 = !DILocation(line: 3011, column: 42, scope: !6801)
!6822 = !DILocation(line: 3011, column: 31, scope: !6801)
!6823 = !DILocation(line: 3011, column: 45, scope: !6801)
!6824 = !DILocation(line: 3012, column: 11, scope: !6801)
!6825 = !DILocation(line: 3012, column: 17, scope: !6801)
!6826 = !DILocation(line: 3011, column: 10, scope: !6801)
!6827 = !DILocation(line: 3011, column: 8, scope: !6801)
!6828 = !DILocation(line: 3013, column: 29, scope: !6801)
!6829 = !DILocation(line: 3013, column: 3, scope: !6801)
!6830 = !DILocation(line: 3014, column: 18, scope: !6801)
!6831 = !DILocation(line: 3014, column: 30, scope: !6801)
!6832 = !DILocation(line: 3014, column: 34, scope: !6801)
!6833 = !DILocation(line: 3014, column: 3, scope: !6801)
!6834 = !DILocation(line: 3015, column: 2, scope: !6801)
!6835 = !DILocation(line: 3004, column: 42, scope: !6795)
!6836 = !DILocation(line: 3004, column: 2, scope: !6795)
!6837 = distinct !{!6837, !6798, !6838}
!6838 = !DILocation(line: 3015, column: 2, scope: !6791)
!6839 = !DILocation(line: 3016, column: 1, scope: !6779)
!6840 = distinct !DISubprogram(name: "display_to_var", scope: !3, file: !3, line: 924, type: !6841, scopeLine: 926, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !241)
!6841 = !DISubroutineType(types: !6842)
!6842 = !{null, !4609, !5048}
!6843 = !DILocalVariable(name: "var", arg: 1, scope: !6840, file: !3, line: 924, type: !4609)
!6844 = !DILocation(line: 924, column: 54, scope: !6840)
!6845 = !DILocalVariable(name: "disp", arg: 2, scope: !6840, file: !3, line: 925, type: !5048)
!6846 = !DILocation(line: 925, column: 29, scope: !6840)
!6847 = !DILocation(line: 927, column: 22, scope: !6840)
!6848 = !DILocation(line: 927, column: 27, scope: !6840)
!6849 = !DILocation(line: 927, column: 33, scope: !6840)
!6850 = !DILocation(line: 927, column: 2, scope: !6840)
!6851 = !DILocation(line: 928, column: 22, scope: !6840)
!6852 = !DILocation(line: 928, column: 28, scope: !6840)
!6853 = !DILocation(line: 928, column: 2, scope: !6840)
!6854 = !DILocation(line: 928, column: 7, scope: !6840)
!6855 = !DILocation(line: 928, column: 20, scope: !6840)
!6856 = !DILocation(line: 929, column: 22, scope: !6840)
!6857 = !DILocation(line: 929, column: 28, scope: !6840)
!6858 = !DILocation(line: 929, column: 2, scope: !6840)
!6859 = !DILocation(line: 929, column: 7, scope: !6840)
!6860 = !DILocation(line: 929, column: 20, scope: !6840)
!6861 = !DILocation(line: 930, column: 24, scope: !6840)
!6862 = !DILocation(line: 930, column: 30, scope: !6840)
!6863 = !DILocation(line: 930, column: 2, scope: !6840)
!6864 = !DILocation(line: 930, column: 7, scope: !6840)
!6865 = !DILocation(line: 930, column: 22, scope: !6840)
!6866 = !DILocation(line: 931, column: 19, scope: !6840)
!6867 = !DILocation(line: 931, column: 25, scope: !6840)
!6868 = !DILocation(line: 931, column: 2, scope: !6840)
!6869 = !DILocation(line: 931, column: 7, scope: !6840)
!6870 = !DILocation(line: 931, column: 17, scope: !6840)
!6871 = !DILocation(line: 932, column: 16, scope: !6840)
!6872 = !DILocation(line: 932, column: 22, scope: !6840)
!6873 = !DILocation(line: 932, column: 2, scope: !6840)
!6874 = !DILocation(line: 932, column: 7, scope: !6840)
!6875 = !DILocation(line: 932, column: 14, scope: !6840)
!6876 = !DILocation(line: 933, column: 21, scope: !6840)
!6877 = !DILocation(line: 933, column: 27, scope: !6840)
!6878 = !DILocation(line: 933, column: 2, scope: !6840)
!6879 = !DILocation(line: 933, column: 7, scope: !6840)
!6880 = !DILocation(line: 933, column: 19, scope: !6840)
!6881 = !DILocation(line: 934, column: 16, scope: !6840)
!6882 = !DILocation(line: 934, column: 22, scope: !6840)
!6883 = !DILocation(line: 934, column: 2, scope: !6840)
!6884 = !DILocation(line: 934, column: 7, scope: !6840)
!6885 = !DILocation(line: 934, column: 14, scope: !6840)
!6886 = !DILocation(line: 935, column: 15, scope: !6840)
!6887 = !DILocation(line: 935, column: 21, scope: !6840)
!6888 = !DILocation(line: 935, column: 2, scope: !6840)
!6889 = !DILocation(line: 935, column: 7, scope: !6840)
!6890 = !DILocation(line: 935, column: 13, scope: !6840)
!6891 = !DILocation(line: 936, column: 2, scope: !6840)
!6892 = !DILocation(line: 936, column: 7, scope: !6840)
!6893 = !DILocation(line: 936, column: 13, scope: !6840)
!6894 = !DILocation(line: 936, column: 19, scope: !6840)
!6895 = !DILocation(line: 937, column: 2, scope: !6840)
!6896 = !DILocation(line: 937, column: 7, scope: !6840)
!6897 = !DILocation(line: 937, column: 15, scope: !6840)
!6898 = !DILocation(line: 937, column: 21, scope: !6840)
!6899 = !DILocation(line: 938, column: 2, scope: !6840)
!6900 = !DILocation(line: 938, column: 7, scope: !6840)
!6901 = !DILocation(line: 938, column: 14, scope: !6840)
!6902 = !DILocation(line: 938, column: 20, scope: !6840)
!6903 = !DILocation(line: 939, column: 2, scope: !6840)
!6904 = !DILocation(line: 939, column: 7, scope: !6840)
!6905 = !DILocation(line: 939, column: 16, scope: !6840)
!6906 = !DILocation(line: 939, column: 22, scope: !6840)
!6907 = !DILocation(line: 940, column: 16, scope: !6840)
!6908 = !DILocation(line: 940, column: 22, scope: !6840)
!6909 = !DILocation(line: 940, column: 2, scope: !6840)
!6910 = !DILocation(line: 940, column: 7, scope: !6840)
!6911 = !DILocation(line: 940, column: 14, scope: !6840)
!6912 = !DILocation(line: 941, column: 1, scope: !6840)
!6913 = distinct !DISubprogram(name: "fbcon_set_disp", scope: !3, file: !3, line: 1354, type: !6914, scopeLine: 1356, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !241)
!6914 = !DISubroutineType(types: !6915)
!6915 = !{null, !199, !4609, !170}
!6916 = !DILocalVariable(name: "info", arg: 1, scope: !6913, file: !3, line: 1354, type: !199)
!6917 = !DILocation(line: 1354, column: 44, scope: !6913)
!6918 = !DILocalVariable(name: "var", arg: 2, scope: !6913, file: !3, line: 1354, type: !4609)
!6919 = !DILocation(line: 1354, column: 76, scope: !6913)
!6920 = !DILocalVariable(name: "unit", arg: 3, scope: !6913, file: !3, line: 1355, type: !170)
!6921 = !DILocation(line: 1355, column: 11, scope: !6913)
!6922 = !DILocalVariable(name: "p", scope: !6913, file: !3, line: 1357, type: !5048)
!6923 = !DILocation(line: 1357, column: 24, scope: !6913)
!6924 = !DILocalVariable(name: "t", scope: !6913, file: !3, line: 1357, type: !5048)
!6925 = !DILocation(line: 1357, column: 28, scope: !6913)
!6926 = !DILocalVariable(name: "default_mode", scope: !6913, file: !3, line: 1358, type: !5014)
!6927 = !DILocation(line: 1358, column: 19, scope: !6913)
!6928 = !DILocalVariable(name: "vc", scope: !6913, file: !3, line: 1358, type: !4826)
!6929 = !DILocation(line: 1358, column: 34, scope: !6913)
!6930 = !DILocalVariable(name: "svc", scope: !6913, file: !3, line: 1359, type: !4826)
!6931 = !DILocation(line: 1359, column: 18, scope: !6913)
!6932 = !DILocalVariable(name: "ops", scope: !6913, file: !3, line: 1360, type: !4818)
!6933 = !DILocation(line: 1360, column: 20, scope: !6913)
!6934 = !DILocation(line: 1360, column: 26, scope: !6913)
!6935 = !DILocation(line: 1360, column: 32, scope: !6913)
!6936 = !DILocalVariable(name: "rows", scope: !6913, file: !3, line: 1361, type: !170)
!6937 = !DILocation(line: 1361, column: 6, scope: !6913)
!6938 = !DILocalVariable(name: "cols", scope: !6913, file: !3, line: 1361, type: !170)
!6939 = !DILocation(line: 1361, column: 12, scope: !6913)
!6940 = !DILocalVariable(name: "charcnt", scope: !6913, file: !3, line: 1361, type: !170)
!6941 = !DILocation(line: 1361, column: 18, scope: !6913)
!6942 = !DILocation(line: 1363, column: 18, scope: !6913)
!6943 = !DILocation(line: 1363, column: 7, scope: !6913)
!6944 = !DILocation(line: 1363, column: 4, scope: !6913)
!6945 = !DILocation(line: 1365, column: 21, scope: !6946)
!6946 = distinct !DILexicalBlock(scope: !6913, file: !3, line: 1365, column: 6)
!6947 = !DILocation(line: 1365, column: 24, scope: !6946)
!6948 = !DILocation(line: 1365, column: 29, scope: !6946)
!6949 = !DILocation(line: 1365, column: 6, scope: !6946)
!6950 = !DILocation(line: 1365, column: 6, scope: !6913)
!6951 = !DILocation(line: 1366, column: 3, scope: !6946)
!6952 = !DILocation(line: 1368, column: 15, scope: !6913)
!6953 = !DILocation(line: 1368, column: 7, scope: !6913)
!6954 = !DILocation(line: 1368, column: 21, scope: !6913)
!6955 = !DILocation(line: 1368, column: 5, scope: !6913)
!6956 = !DILocation(line: 1370, column: 7, scope: !6957)
!6957 = distinct !DILexicalBlock(scope: !6913, file: !3, line: 1370, column: 6)
!6958 = !DILocation(line: 1370, column: 6, scope: !6913)
!6959 = !DILocation(line: 1371, column: 3, scope: !6957)
!6960 = !DILocation(line: 1373, column: 17, scope: !6913)
!6961 = !DILocation(line: 1373, column: 21, scope: !6913)
!6962 = !DILocation(line: 1373, column: 15, scope: !6913)
!6963 = !DILocation(line: 1374, column: 9, scope: !6913)
!6964 = !DILocation(line: 1374, column: 8, scope: !6913)
!6965 = !DILocation(line: 1374, column: 6, scope: !6913)
!6966 = !DILocation(line: 1375, column: 18, scope: !6913)
!6967 = !DILocation(line: 1375, column: 23, scope: !6913)
!6968 = !DILocation(line: 1375, column: 7, scope: !6913)
!6969 = !DILocation(line: 1375, column: 4, scope: !6913)
!6970 = !DILocation(line: 1377, column: 7, scope: !6971)
!6971 = distinct !DILexicalBlock(scope: !6913, file: !3, line: 1377, column: 6)
!6972 = !DILocation(line: 1377, column: 11, scope: !6971)
!6973 = !DILocation(line: 1377, column: 19, scope: !6971)
!6974 = !DILocation(line: 1377, column: 6, scope: !6913)
!6975 = !DILocation(line: 1378, column: 45, scope: !6976)
!6976 = distinct !DILexicalBlock(scope: !6971, file: !3, line: 1377, column: 25)
!6977 = !DILocation(line: 1378, column: 48, scope: !6976)
!6978 = !DILocation(line: 1378, column: 31, scope: !6976)
!6979 = !DILocation(line: 1378, column: 34, scope: !6976)
!6980 = !DILocation(line: 1378, column: 43, scope: !6976)
!6981 = !DILocation(line: 1378, column: 3, scope: !6976)
!6982 = !DILocation(line: 1378, column: 7, scope: !6976)
!6983 = !DILocation(line: 1378, column: 15, scope: !6976)
!6984 = !DILocation(line: 1378, column: 20, scope: !6976)
!6985 = !DILocation(line: 1379, column: 25, scope: !6976)
!6986 = !DILocation(line: 1379, column: 24, scope: !6976)
!6987 = !DILocation(line: 1379, column: 40, scope: !6976)
!6988 = !DILocation(line: 1379, column: 48, scope: !6976)
!6989 = !DILocation(line: 1379, column: 3, scope: !6976)
!6990 = !DILocation(line: 1379, column: 7, scope: !6976)
!6991 = !DILocation(line: 1379, column: 15, scope: !6976)
!6992 = !DILocation(line: 1379, column: 21, scope: !6976)
!6993 = !DILocation(line: 1380, column: 26, scope: !6976)
!6994 = !DILocation(line: 1380, column: 25, scope: !6976)
!6995 = !DILocation(line: 1380, column: 41, scope: !6976)
!6996 = !DILocation(line: 1380, column: 49, scope: !6976)
!6997 = !DILocation(line: 1380, column: 3, scope: !6976)
!6998 = !DILocation(line: 1380, column: 7, scope: !6976)
!6999 = !DILocation(line: 1380, column: 15, scope: !6976)
!7000 = !DILocation(line: 1380, column: 22, scope: !6976)
!7001 = !DILocation(line: 1381, column: 17, scope: !6976)
!7002 = !DILocation(line: 1381, column: 20, scope: !6976)
!7003 = !DILocation(line: 1381, column: 3, scope: !6976)
!7004 = !DILocation(line: 1381, column: 6, scope: !6976)
!7005 = !DILocation(line: 1381, column: 15, scope: !6976)
!7006 = !DILocation(line: 1382, column: 7, scope: !7007)
!7007 = distinct !DILexicalBlock(scope: !6976, file: !3, line: 1382, column: 7)
!7008 = !DILocation(line: 1382, column: 10, scope: !7007)
!7009 = !DILocation(line: 1382, column: 7, scope: !6976)
!7010 = !DILocation(line: 1383, column: 4, scope: !7007)
!7011 = !DILocation(line: 1383, column: 25, scope: !7007)
!7012 = !DILocation(line: 1384, column: 2, scope: !6976)
!7013 = !DILocation(line: 1385, column: 6, scope: !7014)
!7014 = distinct !DILexicalBlock(scope: !6913, file: !3, line: 1385, column: 6)
!7015 = !DILocation(line: 1385, column: 9, scope: !7014)
!7016 = !DILocation(line: 1385, column: 6, scope: !6913)
!7017 = !DILocation(line: 1386, column: 13, scope: !7014)
!7018 = !DILocation(line: 1386, column: 11, scope: !7014)
!7019 = !DILocation(line: 1386, column: 3, scope: !7014)
!7020 = !DILocation(line: 1388, column: 2, scope: !6913)
!7021 = !DILocation(line: 1388, column: 7, scope: !6913)
!7022 = !DILocation(line: 1388, column: 16, scope: !6913)
!7023 = !DILocation(line: 1389, column: 23, scope: !6913)
!7024 = !DILocation(line: 1389, column: 28, scope: !6913)
!7025 = !DILocation(line: 1389, column: 2, scope: !6913)
!7026 = !DILocation(line: 1389, column: 8, scope: !6913)
!7027 = !DILocation(line: 1389, column: 12, scope: !6913)
!7028 = !DILocation(line: 1389, column: 21, scope: !6913)
!7029 = !DILocation(line: 1390, column: 17, scope: !6913)
!7030 = !DILocation(line: 1390, column: 23, scope: !6913)
!7031 = !DILocation(line: 1390, column: 27, scope: !6913)
!7032 = !DILocation(line: 1390, column: 2, scope: !6913)
!7033 = !DILocation(line: 1390, column: 7, scope: !6913)
!7034 = !DILocation(line: 1390, column: 15, scope: !6913)
!7035 = !DILocation(line: 1391, column: 17, scope: !6913)
!7036 = !DILocation(line: 1391, column: 23, scope: !6913)
!7037 = !DILocation(line: 1391, column: 27, scope: !6913)
!7038 = !DILocation(line: 1391, column: 2, scope: !6913)
!7039 = !DILocation(line: 1391, column: 7, scope: !6913)
!7040 = !DILocation(line: 1391, column: 15, scope: !6913)
!7041 = !DILocation(line: 1392, column: 13, scope: !6913)
!7042 = !DILocation(line: 1392, column: 19, scope: !6913)
!7043 = !DILocation(line: 1392, column: 2, scope: !6913)
!7044 = !DILocation(line: 1393, column: 2, scope: !6913)
!7045 = !DILocation(line: 1393, column: 7, scope: !6913)
!7046 = !DILocation(line: 1393, column: 13, scope: !6913)
!7047 = !DILocation(line: 1393, column: 19, scope: !6913)
!7048 = !DILocation(line: 1394, column: 45, scope: !6913)
!7049 = !DILocation(line: 1394, column: 51, scope: !6913)
!7050 = !DILocation(line: 1394, column: 57, scope: !6913)
!7051 = !DILocation(line: 1394, column: 63, scope: !6913)
!7052 = !DILocation(line: 1394, column: 25, scope: !6913)
!7053 = !DILocation(line: 1394, column: 67, scope: !6913)
!7054 = !DILocation(line: 1394, column: 2, scope: !6913)
!7055 = !DILocation(line: 1394, column: 6, scope: !6913)
!7056 = !DILocation(line: 1394, column: 22, scope: !6913)
!7057 = !DILocation(line: 1395, column: 27, scope: !6913)
!7058 = !DILocation(line: 1395, column: 31, scope: !6913)
!7059 = !DILocation(line: 1395, column: 2, scope: !6913)
!7060 = !DILocation(line: 1395, column: 6, scope: !6913)
!7061 = !DILocation(line: 1395, column: 25, scope: !6913)
!7062 = !DILocation(line: 1396, column: 6, scope: !7063)
!7063 = distinct !DILexicalBlock(scope: !6913, file: !3, line: 1396, column: 6)
!7064 = !DILocation(line: 1396, column: 14, scope: !7063)
!7065 = !DILocation(line: 1396, column: 6, scope: !6913)
!7066 = !DILocation(line: 1397, column: 3, scope: !7067)
!7067 = distinct !DILexicalBlock(scope: !7063, file: !3, line: 1396, column: 22)
!7068 = !DILocation(line: 1397, column: 7, scope: !7067)
!7069 = !DILocation(line: 1397, column: 23, scope: !7067)
!7070 = !DILocation(line: 1398, column: 2, scope: !7067)
!7071 = !DILocation(line: 1399, column: 3, scope: !7072)
!7072 = distinct !DILexicalBlock(scope: !7063, file: !3, line: 1398, column: 9)
!7073 = !DILocation(line: 1399, column: 7, scope: !7072)
!7074 = !DILocation(line: 1399, column: 23, scope: !7072)
!7075 = !DILocation(line: 1400, column: 7, scope: !7076)
!7076 = distinct !DILexicalBlock(scope: !7072, file: !3, line: 1400, column: 7)
!7077 = !DILocation(line: 1400, column: 11, scope: !7076)
!7078 = !DILocation(line: 1400, column: 7, scope: !7072)
!7079 = !DILocation(line: 1401, column: 4, scope: !7076)
!7080 = !DILocation(line: 1401, column: 8, scope: !7076)
!7081 = !DILocation(line: 1401, column: 27, scope: !7076)
!7082 = !DILocation(line: 1404, column: 8, scope: !7083)
!7083 = distinct !DILexicalBlock(scope: !6913, file: !3, line: 1404, column: 6)
!7084 = !DILocation(line: 1404, column: 13, scope: !7083)
!7085 = !DILocation(line: 1404, column: 7, scope: !7083)
!7086 = !DILocation(line: 1404, column: 6, scope: !6913)
!7087 = !DILocation(line: 1405, column: 26, scope: !7083)
!7088 = !DILocation(line: 1405, column: 3, scope: !7083)
!7089 = !DILocation(line: 1406, column: 8, scope: !7090)
!7090 = distinct !DILexicalBlock(scope: !6913, file: !3, line: 1406, column: 6)
!7091 = !DILocation(line: 1406, column: 12, scope: !7090)
!7092 = !DILocation(line: 1406, column: 7, scope: !7090)
!7093 = !DILocation(line: 1406, column: 6, scope: !6913)
!7094 = !DILocation(line: 1407, column: 19, scope: !7090)
!7095 = !DILocation(line: 1407, column: 23, scope: !7090)
!7096 = !DILocation(line: 1407, column: 3, scope: !7090)
!7097 = !DILocalVariable(name: "_r", scope: !7098, file: !3, line: 1409, type: !253)
!7098 = distinct !DILexicalBlock(scope: !6913, file: !3, line: 1409, column: 9)
!7099 = !DILocation(line: 1409, column: 9, scope: !7098)
!7100 = !DILocalVariable(name: "_v", scope: !7098, file: !3, line: 1409, type: !253)
!7101 = !DILocation(line: 1409, column: 7, scope: !6913)
!7102 = !DILocalVariable(name: "_r", scope: !7103, file: !3, line: 1410, type: !253)
!7103 = distinct !DILexicalBlock(scope: !6913, file: !3, line: 1410, column: 9)
!7104 = !DILocation(line: 1410, column: 9, scope: !7103)
!7105 = !DILocalVariable(name: "_v", scope: !7103, file: !3, line: 1410, type: !253)
!7106 = !DILocation(line: 1410, column: 7, scope: !6913)
!7107 = !DILocation(line: 1411, column: 10, scope: !6913)
!7108 = !DILocation(line: 1411, column: 14, scope: !6913)
!7109 = !DILocation(line: 1411, column: 22, scope: !6913)
!7110 = !DILocation(line: 1411, column: 7, scope: !6913)
!7111 = !DILocation(line: 1412, column: 10, scope: !6913)
!7112 = !DILocation(line: 1412, column: 14, scope: !6913)
!7113 = !DILocation(line: 1412, column: 22, scope: !6913)
!7114 = !DILocation(line: 1412, column: 7, scope: !6913)
!7115 = !DILocation(line: 1413, column: 12, scope: !6913)
!7116 = !DILocation(line: 1413, column: 16, scope: !6913)
!7117 = !DILocation(line: 1413, column: 22, scope: !6913)
!7118 = !DILocation(line: 1413, column: 2, scope: !6913)
!7119 = !DILocation(line: 1415, column: 21, scope: !7120)
!7120 = distinct !DILexicalBlock(scope: !6913, file: !3, line: 1415, column: 6)
!7121 = !DILocation(line: 1415, column: 6, scope: !7120)
!7122 = !DILocation(line: 1415, column: 6, scope: !6913)
!7123 = !DILocation(line: 1416, column: 3, scope: !7124)
!7124 = distinct !DILexicalBlock(scope: !7120, file: !3, line: 1415, column: 26)
!7125 = !DILocation(line: 1417, column: 2, scope: !7124)
!7126 = !DILocation(line: 1418, column: 1, scope: !6913)
!7127 = distinct !DISubprogram(name: "fbcon_get_requirement", scope: !3, file: !3, line: 3018, type: !7128, scopeLine: 3020, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !241)
!7128 = !DISubroutineType(types: !7129)
!7129 = !{null, !199, !4704}
!7130 = !DILocalVariable(name: "info", arg: 1, scope: !7127, file: !3, line: 3018, type: !199)
!7131 = !DILocation(line: 3018, column: 44, scope: !7127)
!7132 = !DILocalVariable(name: "caps", arg: 2, scope: !7127, file: !3, line: 3019, type: !4704)
!7133 = !DILocation(line: 3019, column: 28, scope: !7127)
!7134 = !DILocalVariable(name: "vc", scope: !7127, file: !3, line: 3021, type: !4826)
!7135 = !DILocation(line: 3021, column: 18, scope: !7127)
!7136 = !DILocalVariable(name: "p", scope: !7127, file: !3, line: 3022, type: !5048)
!7137 = !DILocation(line: 3022, column: 24, scope: !7127)
!7138 = !DILocation(line: 3024, column: 6, scope: !7139)
!7139 = distinct !DILexicalBlock(scope: !7127, file: !3, line: 3024, column: 6)
!7140 = !DILocation(line: 3024, column: 12, scope: !7139)
!7141 = !DILocation(line: 3024, column: 6, scope: !7127)
!7142 = !DILocalVariable(name: "i", scope: !7143, file: !3, line: 3025, type: !170)
!7143 = distinct !DILexicalBlock(scope: !7139, file: !3, line: 3024, column: 19)
!7144 = !DILocation(line: 3025, column: 7, scope: !7143)
!7145 = !DILocalVariable(name: "charcnt", scope: !7143, file: !3, line: 3025, type: !170)
!7146 = !DILocation(line: 3025, column: 10, scope: !7143)
!7147 = !DILocation(line: 3027, column: 12, scope: !7148)
!7148 = distinct !DILexicalBlock(scope: !7143, file: !3, line: 3027, column: 3)
!7149 = !DILocation(line: 3027, column: 10, scope: !7148)
!7150 = !DILocation(line: 3027, column: 8, scope: !7148)
!7151 = !DILocation(line: 3027, column: 25, scope: !7152)
!7152 = distinct !DILexicalBlock(scope: !7148, file: !3, line: 3027, column: 3)
!7153 = !DILocation(line: 3027, column: 30, scope: !7152)
!7154 = !DILocation(line: 3027, column: 27, scope: !7152)
!7155 = !DILocation(line: 3027, column: 3, scope: !7148)
!7156 = !DILocation(line: 3028, column: 17, scope: !7157)
!7157 = distinct !DILexicalBlock(scope: !7152, file: !3, line: 3027, column: 47)
!7158 = !DILocation(line: 3028, column: 9, scope: !7157)
!7159 = !DILocation(line: 3028, column: 20, scope: !7157)
!7160 = !DILocation(line: 3028, column: 7, scope: !7157)
!7161 = !DILocation(line: 3029, column: 8, scope: !7162)
!7162 = distinct !DILexicalBlock(scope: !7157, file: !3, line: 3029, column: 8)
!7163 = !DILocation(line: 3029, column: 11, scope: !7162)
!7164 = !DILocation(line: 3029, column: 14, scope: !7162)
!7165 = !DILocation(line: 3029, column: 18, scope: !7162)
!7166 = !DILocation(line: 3029, column: 26, scope: !7162)
!7167 = !DILocation(line: 3029, column: 37, scope: !7162)
!7168 = !DILocation(line: 3030, column: 8, scope: !7162)
!7169 = !DILocation(line: 3030, column: 14, scope: !7162)
!7170 = !DILocation(line: 3030, column: 33, scope: !7162)
!7171 = !DILocation(line: 3030, column: 22, scope: !7162)
!7172 = !DILocation(line: 3030, column: 19, scope: !7162)
!7173 = !DILocation(line: 3029, column: 8, scope: !7157)
!7174 = !DILocation(line: 3031, column: 21, scope: !7175)
!7175 = distinct !DILexicalBlock(scope: !7162, file: !3, line: 3030, column: 37)
!7176 = !DILocation(line: 3031, column: 10, scope: !7175)
!7177 = !DILocation(line: 3031, column: 7, scope: !7175)
!7178 = !DILocation(line: 3032, column: 22, scope: !7175)
!7179 = !DILocation(line: 3032, column: 26, scope: !7175)
!7180 = !DILocation(line: 3032, column: 34, scope: !7175)
!7181 = !DILocation(line: 3032, column: 40, scope: !7175)
!7182 = !DILocation(line: 3032, column: 18, scope: !7175)
!7183 = !DILocation(line: 3032, column: 5, scope: !7175)
!7184 = !DILocation(line: 3032, column: 11, scope: !7175)
!7185 = !DILocation(line: 3032, column: 13, scope: !7175)
!7186 = !DILocation(line: 3033, column: 22, scope: !7175)
!7187 = !DILocation(line: 3033, column: 26, scope: !7175)
!7188 = !DILocation(line: 3033, column: 34, scope: !7175)
!7189 = !DILocation(line: 3033, column: 41, scope: !7175)
!7190 = !DILocation(line: 3033, column: 18, scope: !7175)
!7191 = !DILocation(line: 3033, column: 5, scope: !7175)
!7192 = !DILocation(line: 3033, column: 11, scope: !7175)
!7193 = !DILocation(line: 3033, column: 13, scope: !7175)
!7194 = !DILocation(line: 3034, column: 16, scope: !7175)
!7195 = !DILocation(line: 3034, column: 19, scope: !7175)
!7196 = !DILocation(line: 3034, column: 15, scope: !7175)
!7197 = !DILocation(line: 3035, column: 6, scope: !7175)
!7198 = !DILocation(line: 3034, column: 13, scope: !7175)
!7199 = !DILocation(line: 3036, column: 9, scope: !7200)
!7200 = distinct !DILexicalBlock(scope: !7175, file: !3, line: 3036, column: 9)
!7201 = !DILocation(line: 3036, column: 15, scope: !7200)
!7202 = !DILocation(line: 3036, column: 21, scope: !7200)
!7203 = !DILocation(line: 3036, column: 19, scope: !7200)
!7204 = !DILocation(line: 3036, column: 9, scope: !7175)
!7205 = !DILocation(line: 3037, column: 18, scope: !7200)
!7206 = !DILocation(line: 3037, column: 6, scope: !7200)
!7207 = !DILocation(line: 3037, column: 12, scope: !7200)
!7208 = !DILocation(line: 3037, column: 16, scope: !7200)
!7209 = !DILocation(line: 3038, column: 4, scope: !7175)
!7210 = !DILocation(line: 3039, column: 3, scope: !7157)
!7211 = !DILocation(line: 3027, column: 43, scope: !7152)
!7212 = !DILocation(line: 3027, column: 3, scope: !7152)
!7213 = distinct !{!7213, !7155, !7214}
!7214 = !DILocation(line: 3039, column: 3, scope: !7148)
!7215 = !DILocation(line: 3040, column: 2, scope: !7143)
!7216 = !DILocation(line: 3041, column: 16, scope: !7217)
!7217 = distinct !DILexicalBlock(scope: !7139, file: !3, line: 3040, column: 9)
!7218 = !DILocation(line: 3041, column: 8, scope: !7217)
!7219 = !DILocation(line: 3041, column: 28, scope: !7217)
!7220 = !DILocation(line: 3041, column: 6, scope: !7217)
!7221 = !DILocation(line: 3043, column: 7, scope: !7222)
!7222 = distinct !DILexicalBlock(scope: !7217, file: !3, line: 3043, column: 7)
!7223 = !DILocation(line: 3043, column: 10, scope: !7222)
!7224 = !DILocation(line: 3043, column: 13, scope: !7222)
!7225 = !DILocation(line: 3043, column: 17, scope: !7222)
!7226 = !DILocation(line: 3043, column: 25, scope: !7222)
!7227 = !DILocation(line: 3043, column: 36, scope: !7222)
!7228 = !DILocation(line: 3044, column: 7, scope: !7222)
!7229 = !DILocation(line: 3044, column: 13, scope: !7222)
!7230 = !DILocation(line: 3044, column: 32, scope: !7222)
!7231 = !DILocation(line: 3044, column: 21, scope: !7222)
!7232 = !DILocation(line: 3044, column: 18, scope: !7222)
!7233 = !DILocation(line: 3043, column: 7, scope: !7217)
!7234 = !DILocation(line: 3045, column: 20, scope: !7235)
!7235 = distinct !DILexicalBlock(scope: !7222, file: !3, line: 3044, column: 45)
!7236 = !DILocation(line: 3045, column: 9, scope: !7235)
!7237 = !DILocation(line: 3045, column: 6, scope: !7235)
!7238 = !DILocation(line: 3046, column: 20, scope: !7235)
!7239 = !DILocation(line: 3046, column: 24, scope: !7235)
!7240 = !DILocation(line: 3046, column: 32, scope: !7235)
!7241 = !DILocation(line: 3046, column: 38, scope: !7235)
!7242 = !DILocation(line: 3046, column: 16, scope: !7235)
!7243 = !DILocation(line: 3046, column: 4, scope: !7235)
!7244 = !DILocation(line: 3046, column: 10, scope: !7235)
!7245 = !DILocation(line: 3046, column: 12, scope: !7235)
!7246 = !DILocation(line: 3047, column: 20, scope: !7235)
!7247 = !DILocation(line: 3047, column: 24, scope: !7235)
!7248 = !DILocation(line: 3047, column: 32, scope: !7235)
!7249 = !DILocation(line: 3047, column: 39, scope: !7235)
!7250 = !DILocation(line: 3047, column: 16, scope: !7235)
!7251 = !DILocation(line: 3047, column: 4, scope: !7235)
!7252 = !DILocation(line: 3047, column: 10, scope: !7235)
!7253 = !DILocation(line: 3047, column: 12, scope: !7235)
!7254 = !DILocation(line: 3048, column: 17, scope: !7235)
!7255 = !DILocation(line: 3048, column: 20, scope: !7235)
!7256 = !DILocation(line: 3048, column: 16, scope: !7235)
!7257 = !DILocation(line: 3049, column: 5, scope: !7235)
!7258 = !DILocation(line: 3048, column: 4, scope: !7235)
!7259 = !DILocation(line: 3048, column: 10, scope: !7235)
!7260 = !DILocation(line: 3048, column: 14, scope: !7235)
!7261 = !DILocation(line: 3050, column: 3, scope: !7235)
!7262 = !DILocation(line: 3052, column: 1, scope: !7127)
!7263 = distinct !DISubprogram(name: "fbcon_set_con2fb_map_ioctl", scope: !3, file: !3, line: 3054, type: !7264, scopeLine: 3055, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !241)
!7264 = !DISubroutineType(types: !7265)
!7265 = !{!170, !192}
!7266 = !DILocalVariable(name: "addr", arg: 1, scope: !7267, file: !7268, line: 138, type: !3016)
!7267 = distinct !DISubprogram(name: "check_copy_size", scope: !7268, file: !7268, line: 138, type: !7269, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !241)
!7268 = !DIFile(filename: "./include/linux/thread_info.h", directory: "/home/lizy2001/genbc/linux")
!7269 = !DISubroutineType(types: !7270)
!7270 = !{!720, !3016, !557, !720}
!7271 = !DILocation(line: 138, column: 29, scope: !7267, inlinedAt: !7272)
!7272 = distinct !DILocation(line: 191, column: 6, scope: !7273, inlinedAt: !7278)
!7273 = distinct !DILexicalBlock(scope: !7275, file: !7274, line: 191, column: 6)
!7274 = !DIFile(filename: "./include/linux/uaccess.h", directory: "/home/lizy2001/genbc/linux")
!7275 = distinct !DISubprogram(name: "copy_from_user", scope: !7274, file: !7274, line: 189, type: !7276, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !241)
!7276 = !DISubroutineType(types: !7277)
!7277 = !{!299, !192, !3016, !299}
!7278 = distinct !DILocation(line: 3059, column: 6, scope: !7279)
!7279 = distinct !DILexicalBlock(scope: !7263, file: !3, line: 3059, column: 6)
!7280 = !DILocalVariable(name: "bytes", arg: 2, scope: !7267, file: !7268, line: 138, type: !557)
!7281 = !DILocation(line: 138, column: 42, scope: !7267, inlinedAt: !7272)
!7282 = !DILocalVariable(name: "is_source", arg: 3, scope: !7267, file: !7268, line: 138, type: !720)
!7283 = !DILocation(line: 138, column: 54, scope: !7267, inlinedAt: !7272)
!7284 = !DILocalVariable(name: "sz", scope: !7267, file: !7268, line: 140, type: !170)
!7285 = !DILocation(line: 140, column: 6, scope: !7267, inlinedAt: !7272)
!7286 = !DILocalVariable(name: "__ret_warn_on", scope: !7287, file: !7268, line: 150, type: !170)
!7287 = distinct !DILexicalBlock(scope: !7288, file: !7268, line: 150, column: 6)
!7288 = distinct !DILexicalBlock(scope: !7267, file: !7268, line: 150, column: 6)
!7289 = !DILocation(line: 150, column: 6, scope: !7287, inlinedAt: !7272)
!7290 = !DILocalVariable(name: "to", arg: 1, scope: !7275, file: !7274, line: 189, type: !192)
!7291 = !DILocation(line: 189, column: 22, scope: !7275, inlinedAt: !7278)
!7292 = !DILocalVariable(name: "from", arg: 2, scope: !7275, file: !7274, line: 189, type: !3016)
!7293 = !DILocation(line: 189, column: 45, scope: !7275, inlinedAt: !7278)
!7294 = !DILocalVariable(name: "n", arg: 3, scope: !7275, file: !7274, line: 189, type: !299)
!7295 = !DILocation(line: 189, column: 65, scope: !7275, inlinedAt: !7278)
!7296 = !DILocalVariable(name: "argp", arg: 1, scope: !7263, file: !3, line: 3054, type: !192)
!7297 = !DILocation(line: 3054, column: 45, scope: !7263)
!7298 = !DILocalVariable(name: "con2fb", scope: !7263, file: !3, line: 3056, type: !7299)
!7299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fb_con2fbmap", file: !183, line: 291, size: 64, elements: !7300)
!7300 = !{!7301, !7302}
!7301 = !DIDerivedType(tag: DW_TAG_member, name: "console", scope: !7299, file: !183, line: 292, baseType: !253, size: 32)
!7302 = !DIDerivedType(tag: DW_TAG_member, name: "framebuffer", scope: !7299, file: !183, line: 293, baseType: !253, size: 32, offset: 32)
!7303 = !DILocation(line: 3056, column: 22, scope: !7263)
!7304 = !DILocalVariable(name: "ret", scope: !7263, file: !3, line: 3057, type: !170)
!7305 = !DILocation(line: 3057, column: 6, scope: !7263)
!7306 = !DILocation(line: 3059, column: 21, scope: !7279)
!7307 = !DILocation(line: 3059, column: 30, scope: !7279)
!7308 = !DILocation(line: 191, column: 6, scope: !7273, inlinedAt: !7278)
!7309 = !DILocation(line: 141, column: 6, scope: !7310, inlinedAt: !7272)
!7310 = distinct !DILexicalBlock(scope: !7267, file: !7268, line: 141, column: 6)
!7311 = !DILocation(line: 0, scope: !7310, inlinedAt: !7272)
!7312 = !DILocation(line: 141, column: 6, scope: !7267, inlinedAt: !7272)
!7313 = !DILocation(line: 142, column: 29, scope: !7314, inlinedAt: !7272)
!7314 = distinct !DILexicalBlock(scope: !7315, file: !7268, line: 142, column: 7)
!7315 = distinct !DILexicalBlock(scope: !7310, file: !7268, line: 141, column: 39)
!7316 = !DILocation(line: 142, column: 8, scope: !7314, inlinedAt: !7272)
!7317 = !DILocation(line: 142, column: 7, scope: !7315, inlinedAt: !7272)
!7318 = !DILocation(line: 143, column: 18, scope: !7314, inlinedAt: !7272)
!7319 = !DILocation(line: 143, column: 22, scope: !7314, inlinedAt: !7272)
!7320 = !DILocation(line: 143, column: 4, scope: !7314, inlinedAt: !7272)
!7321 = !DILocation(line: 144, column: 12, scope: !7322, inlinedAt: !7272)
!7322 = distinct !DILexicalBlock(scope: !7314, file: !7268, line: 144, column: 12)
!7323 = !DILocation(line: 144, column: 12, scope: !7314, inlinedAt: !7272)
!7324 = !DILocation(line: 145, column: 4, scope: !7322, inlinedAt: !7272)
!7325 = !DILocation(line: 147, column: 4, scope: !7322, inlinedAt: !7272)
!7326 = !DILocation(line: 148, column: 3, scope: !7315, inlinedAt: !7272)
!7327 = !DILocation(line: 150, column: 6, scope: !7328, inlinedAt: !7272)
!7328 = distinct !DILexicalBlock(scope: !7287, file: !7268, line: 150, column: 6)
!7329 = !DILocation(line: 150, column: 6, scope: !7330, inlinedAt: !7272)
!7330 = distinct !DILexicalBlock(scope: !7331, file: !7268, line: 150, column: 6)
!7331 = distinct !DILexicalBlock(scope: !7328, file: !7268, line: 150, column: 6)
!7332 = !{i32 -2145474226, i32 -2145474197, i32 -2145474151, i32 -2145474093, i32 -2145474039, i32 -2145473985, i32 -2145473930, i32 -2145473899}
!7333 = !DILocation(line: 150, column: 6, scope: !7334, inlinedAt: !7272)
!7334 = distinct !DILexicalBlock(scope: !7331, file: !7268, line: 150, column: 6)
!7335 = !{i32 -2145473479, i32 -2145473472, i32 -2145473420, i32 -2145473389, i32 -2145473359}
!7336 = !DILocation(line: 150, column: 6, scope: !7331, inlinedAt: !7272)
!7337 = !DILocation(line: 150, column: 6, scope: !7288, inlinedAt: !7272)
!7338 = !DILocation(line: 150, column: 6, scope: !7267, inlinedAt: !7272)
!7339 = !DILocation(line: 151, column: 3, scope: !7288, inlinedAt: !7272)
!7340 = !DILocation(line: 152, column: 20, scope: !7267, inlinedAt: !7272)
!7341 = !DILocation(line: 152, column: 26, scope: !7267, inlinedAt: !7272)
!7342 = !DILocation(line: 152, column: 33, scope: !7267, inlinedAt: !7272)
!7343 = !DILocation(line: 152, column: 2, scope: !7267, inlinedAt: !7272)
!7344 = !DILocation(line: 153, column: 2, scope: !7267, inlinedAt: !7272)
!7345 = !DILocation(line: 154, column: 1, scope: !7267, inlinedAt: !7272)
!7346 = !DILocation(line: 191, column: 6, scope: !7275, inlinedAt: !7278)
!7347 = !DILocation(line: 192, column: 23, scope: !7273, inlinedAt: !7278)
!7348 = !DILocation(line: 192, column: 27, scope: !7273, inlinedAt: !7278)
!7349 = !DILocation(line: 192, column: 33, scope: !7273, inlinedAt: !7278)
!7350 = !DILocation(line: 192, column: 7, scope: !7273, inlinedAt: !7278)
!7351 = !DILocation(line: 192, column: 5, scope: !7273, inlinedAt: !7278)
!7352 = !DILocation(line: 192, column: 3, scope: !7273, inlinedAt: !7278)
!7353 = !DILocation(line: 193, column: 9, scope: !7275, inlinedAt: !7278)
!7354 = !DILocation(line: 3059, column: 6, scope: !7279)
!7355 = !DILocation(line: 3059, column: 6, scope: !7263)
!7356 = !DILocation(line: 3060, column: 3, scope: !7279)
!7357 = !DILocation(line: 3061, column: 13, scope: !7358)
!7358 = distinct !DILexicalBlock(scope: !7263, file: !3, line: 3061, column: 6)
!7359 = !DILocation(line: 3061, column: 21, scope: !7358)
!7360 = !DILocation(line: 3061, column: 25, scope: !7358)
!7361 = !DILocation(line: 3061, column: 35, scope: !7358)
!7362 = !DILocation(line: 3061, column: 43, scope: !7358)
!7363 = !DILocation(line: 3061, column: 6, scope: !7263)
!7364 = !DILocation(line: 3062, column: 3, scope: !7358)
!7365 = !DILocation(line: 3063, column: 13, scope: !7366)
!7366 = distinct !DILexicalBlock(scope: !7263, file: !3, line: 3063, column: 6)
!7367 = !DILocation(line: 3063, column: 25, scope: !7366)
!7368 = !DILocation(line: 3063, column: 6, scope: !7263)
!7369 = !DILocation(line: 3064, column: 3, scope: !7366)
!7370 = !DILocation(line: 3065, column: 28, scope: !7371)
!7371 = distinct !DILexicalBlock(scope: !7263, file: !3, line: 3065, column: 6)
!7372 = !DILocation(line: 3065, column: 7, scope: !7371)
!7373 = !DILocation(line: 3065, column: 6, scope: !7263)
!7374 = !DILocation(line: 3066, column: 33, scope: !7371)
!7375 = !DILocation(line: 3066, column: 3, scope: !7371)
!7376 = !DILocation(line: 3067, column: 28, scope: !7377)
!7377 = distinct !DILexicalBlock(scope: !7263, file: !3, line: 3067, column: 6)
!7378 = !DILocation(line: 3067, column: 7, scope: !7377)
!7379 = !DILocation(line: 3067, column: 6, scope: !7263)
!7380 = !DILocation(line: 3068, column: 3, scope: !7381)
!7381 = distinct !DILexicalBlock(scope: !7377, file: !3, line: 3067, column: 42)
!7382 = !DILocation(line: 3071, column: 2, scope: !7263)
!7383 = !DILocation(line: 3072, column: 30, scope: !7263)
!7384 = !DILocation(line: 3072, column: 38, scope: !7263)
!7385 = !DILocation(line: 3073, column: 16, scope: !7263)
!7386 = !DILocation(line: 3072, column: 8, scope: !7263)
!7387 = !DILocation(line: 3072, column: 6, scope: !7263)
!7388 = !DILocation(line: 3074, column: 2, scope: !7263)
!7389 = !DILocation(line: 3076, column: 9, scope: !7263)
!7390 = !DILocation(line: 3076, column: 2, scope: !7263)
!7391 = !DILocation(line: 3077, column: 1, scope: !7263)
!7392 = distinct !DISubprogram(name: "request_module", scope: !7393, file: !7393, line: 30, type: !7394, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !241)
!7393 = !DIFile(filename: "./include/linux/kmod.h", directory: "/home/lizy2001/genbc/linux")
!7394 = !DISubroutineType(types: !7395)
!7395 = !{!170, !335, null}
!7396 = !DILocalVariable(name: "name", arg: 1, scope: !7392, file: !7393, line: 30, type: !335)
!7397 = !DILocation(line: 30, column: 46, scope: !7392)
!7398 = !DILocation(line: 30, column: 59, scope: !7392)
!7399 = distinct !DISubprogram(name: "fbcon_get_con2fb_map_ioctl", scope: !3, file: !3, line: 3079, type: !7264, scopeLine: 3080, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !241)
!7400 = !DILocation(line: 138, column: 29, scope: !7267, inlinedAt: !7401)
!7401 = distinct !DILocation(line: 199, column: 6, scope: !7402, inlinedAt: !7404)
!7402 = distinct !DILexicalBlock(scope: !7403, file: !7274, line: 199, column: 6)
!7403 = distinct !DISubprogram(name: "copy_to_user", scope: !7274, file: !7274, line: 197, type: !7276, scopeLine: 198, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !241)
!7404 = distinct !DILocation(line: 3092, column: 9, scope: !7399)
!7405 = !DILocation(line: 138, column: 42, scope: !7267, inlinedAt: !7401)
!7406 = !DILocation(line: 138, column: 54, scope: !7267, inlinedAt: !7401)
!7407 = !DILocation(line: 140, column: 6, scope: !7267, inlinedAt: !7401)
!7408 = !DILocation(line: 150, column: 6, scope: !7287, inlinedAt: !7401)
!7409 = !DILocalVariable(name: "to", arg: 1, scope: !7403, file: !7274, line: 197, type: !192)
!7410 = !DILocation(line: 197, column: 27, scope: !7403, inlinedAt: !7404)
!7411 = !DILocalVariable(name: "from", arg: 2, scope: !7403, file: !7274, line: 197, type: !3016)
!7412 = !DILocation(line: 197, column: 43, scope: !7403, inlinedAt: !7404)
!7413 = !DILocalVariable(name: "n", arg: 3, scope: !7403, file: !7274, line: 197, type: !299)
!7414 = !DILocation(line: 197, column: 63, scope: !7403, inlinedAt: !7404)
!7415 = !DILocation(line: 138, column: 29, scope: !7267, inlinedAt: !7416)
!7416 = distinct !DILocation(line: 191, column: 6, scope: !7273, inlinedAt: !7417)
!7417 = distinct !DILocation(line: 3083, column: 6, scope: !7418)
!7418 = distinct !DILexicalBlock(scope: !7399, file: !3, line: 3083, column: 6)
!7419 = !DILocation(line: 138, column: 42, scope: !7267, inlinedAt: !7416)
!7420 = !DILocation(line: 138, column: 54, scope: !7267, inlinedAt: !7416)
!7421 = !DILocation(line: 140, column: 6, scope: !7267, inlinedAt: !7416)
!7422 = !DILocation(line: 150, column: 6, scope: !7287, inlinedAt: !7416)
!7423 = !DILocation(line: 189, column: 22, scope: !7275, inlinedAt: !7417)
!7424 = !DILocation(line: 189, column: 45, scope: !7275, inlinedAt: !7417)
!7425 = !DILocation(line: 189, column: 65, scope: !7275, inlinedAt: !7417)
!7426 = !DILocalVariable(name: "argp", arg: 1, scope: !7399, file: !3, line: 3079, type: !192)
!7427 = !DILocation(line: 3079, column: 45, scope: !7399)
!7428 = !DILocalVariable(name: "con2fb", scope: !7399, file: !3, line: 3081, type: !7299)
!7429 = !DILocation(line: 3081, column: 22, scope: !7399)
!7430 = !DILocation(line: 3083, column: 21, scope: !7418)
!7431 = !DILocation(line: 3083, column: 30, scope: !7418)
!7432 = !DILocation(line: 191, column: 6, scope: !7273, inlinedAt: !7417)
!7433 = !DILocation(line: 141, column: 6, scope: !7310, inlinedAt: !7416)
!7434 = !DILocation(line: 0, scope: !7310, inlinedAt: !7416)
!7435 = !DILocation(line: 141, column: 6, scope: !7267, inlinedAt: !7416)
!7436 = !DILocation(line: 142, column: 29, scope: !7314, inlinedAt: !7416)
!7437 = !DILocation(line: 142, column: 8, scope: !7314, inlinedAt: !7416)
!7438 = !DILocation(line: 142, column: 7, scope: !7315, inlinedAt: !7416)
!7439 = !DILocation(line: 143, column: 18, scope: !7314, inlinedAt: !7416)
!7440 = !DILocation(line: 143, column: 22, scope: !7314, inlinedAt: !7416)
!7441 = !DILocation(line: 143, column: 4, scope: !7314, inlinedAt: !7416)
!7442 = !DILocation(line: 144, column: 12, scope: !7322, inlinedAt: !7416)
!7443 = !DILocation(line: 144, column: 12, scope: !7314, inlinedAt: !7416)
!7444 = !DILocation(line: 145, column: 4, scope: !7322, inlinedAt: !7416)
!7445 = !DILocation(line: 147, column: 4, scope: !7322, inlinedAt: !7416)
!7446 = !DILocation(line: 148, column: 3, scope: !7315, inlinedAt: !7416)
!7447 = !DILocation(line: 150, column: 6, scope: !7328, inlinedAt: !7416)
!7448 = !DILocation(line: 150, column: 6, scope: !7330, inlinedAt: !7416)
!7449 = !DILocation(line: 150, column: 6, scope: !7334, inlinedAt: !7416)
!7450 = !DILocation(line: 150, column: 6, scope: !7331, inlinedAt: !7416)
!7451 = !DILocation(line: 150, column: 6, scope: !7288, inlinedAt: !7416)
!7452 = !DILocation(line: 150, column: 6, scope: !7267, inlinedAt: !7416)
!7453 = !DILocation(line: 151, column: 3, scope: !7288, inlinedAt: !7416)
!7454 = !DILocation(line: 152, column: 20, scope: !7267, inlinedAt: !7416)
!7455 = !DILocation(line: 152, column: 26, scope: !7267, inlinedAt: !7416)
!7456 = !DILocation(line: 152, column: 33, scope: !7267, inlinedAt: !7416)
!7457 = !DILocation(line: 152, column: 2, scope: !7267, inlinedAt: !7416)
!7458 = !DILocation(line: 153, column: 2, scope: !7267, inlinedAt: !7416)
!7459 = !DILocation(line: 154, column: 1, scope: !7267, inlinedAt: !7416)
!7460 = !DILocation(line: 191, column: 6, scope: !7275, inlinedAt: !7417)
!7461 = !DILocation(line: 192, column: 23, scope: !7273, inlinedAt: !7417)
!7462 = !DILocation(line: 192, column: 27, scope: !7273, inlinedAt: !7417)
!7463 = !DILocation(line: 192, column: 33, scope: !7273, inlinedAt: !7417)
!7464 = !DILocation(line: 192, column: 7, scope: !7273, inlinedAt: !7417)
!7465 = !DILocation(line: 192, column: 5, scope: !7273, inlinedAt: !7417)
!7466 = !DILocation(line: 192, column: 3, scope: !7273, inlinedAt: !7417)
!7467 = !DILocation(line: 193, column: 9, scope: !7275, inlinedAt: !7417)
!7468 = !DILocation(line: 3083, column: 6, scope: !7418)
!7469 = !DILocation(line: 3083, column: 6, scope: !7399)
!7470 = !DILocation(line: 3084, column: 3, scope: !7418)
!7471 = !DILocation(line: 3085, column: 13, scope: !7472)
!7472 = distinct !DILexicalBlock(scope: !7399, file: !3, line: 3085, column: 6)
!7473 = !DILocation(line: 3085, column: 21, scope: !7472)
!7474 = !DILocation(line: 3085, column: 25, scope: !7472)
!7475 = !DILocation(line: 3085, column: 35, scope: !7472)
!7476 = !DILocation(line: 3085, column: 43, scope: !7472)
!7477 = !DILocation(line: 3085, column: 6, scope: !7399)
!7478 = !DILocation(line: 3086, column: 3, scope: !7472)
!7479 = !DILocation(line: 3088, column: 2, scope: !7399)
!7480 = !DILocation(line: 3089, column: 41, scope: !7399)
!7481 = !DILocation(line: 3089, column: 49, scope: !7399)
!7482 = !DILocation(line: 3089, column: 23, scope: !7399)
!7483 = !DILocation(line: 3089, column: 9, scope: !7399)
!7484 = !DILocation(line: 3089, column: 21, scope: !7399)
!7485 = !DILocation(line: 3090, column: 2, scope: !7399)
!7486 = !DILocation(line: 3092, column: 22, scope: !7399)
!7487 = !DILocation(line: 3092, column: 28, scope: !7399)
!7488 = !DILocation(line: 199, column: 6, scope: !7402, inlinedAt: !7404)
!7489 = !DILocation(line: 141, column: 6, scope: !7310, inlinedAt: !7401)
!7490 = !DILocation(line: 0, scope: !7310, inlinedAt: !7401)
!7491 = !DILocation(line: 141, column: 6, scope: !7267, inlinedAt: !7401)
!7492 = !DILocation(line: 142, column: 29, scope: !7314, inlinedAt: !7401)
!7493 = !DILocation(line: 142, column: 8, scope: !7314, inlinedAt: !7401)
!7494 = !DILocation(line: 142, column: 7, scope: !7315, inlinedAt: !7401)
!7495 = !DILocation(line: 143, column: 18, scope: !7314, inlinedAt: !7401)
!7496 = !DILocation(line: 143, column: 22, scope: !7314, inlinedAt: !7401)
!7497 = !DILocation(line: 143, column: 4, scope: !7314, inlinedAt: !7401)
!7498 = !DILocation(line: 144, column: 12, scope: !7322, inlinedAt: !7401)
!7499 = !DILocation(line: 144, column: 12, scope: !7314, inlinedAt: !7401)
!7500 = !DILocation(line: 145, column: 4, scope: !7322, inlinedAt: !7401)
!7501 = !DILocation(line: 147, column: 4, scope: !7322, inlinedAt: !7401)
!7502 = !DILocation(line: 148, column: 3, scope: !7315, inlinedAt: !7401)
!7503 = !DILocation(line: 150, column: 6, scope: !7328, inlinedAt: !7401)
!7504 = !DILocation(line: 150, column: 6, scope: !7330, inlinedAt: !7401)
!7505 = !DILocation(line: 150, column: 6, scope: !7334, inlinedAt: !7401)
!7506 = !DILocation(line: 150, column: 6, scope: !7331, inlinedAt: !7401)
!7507 = !DILocation(line: 150, column: 6, scope: !7288, inlinedAt: !7401)
!7508 = !DILocation(line: 150, column: 6, scope: !7267, inlinedAt: !7401)
!7509 = !DILocation(line: 151, column: 3, scope: !7288, inlinedAt: !7401)
!7510 = !DILocation(line: 152, column: 20, scope: !7267, inlinedAt: !7401)
!7511 = !DILocation(line: 152, column: 26, scope: !7267, inlinedAt: !7401)
!7512 = !DILocation(line: 152, column: 33, scope: !7267, inlinedAt: !7401)
!7513 = !DILocation(line: 152, column: 2, scope: !7267, inlinedAt: !7401)
!7514 = !DILocation(line: 153, column: 2, scope: !7267, inlinedAt: !7401)
!7515 = !DILocation(line: 154, column: 1, scope: !7267, inlinedAt: !7401)
!7516 = !DILocation(line: 199, column: 6, scope: !7403, inlinedAt: !7404)
!7517 = !DILocation(line: 200, column: 21, scope: !7402, inlinedAt: !7404)
!7518 = !DILocation(line: 200, column: 25, scope: !7402, inlinedAt: !7404)
!7519 = !DILocation(line: 200, column: 31, scope: !7402, inlinedAt: !7404)
!7520 = !DILocation(line: 200, column: 7, scope: !7402, inlinedAt: !7404)
!7521 = !DILocation(line: 200, column: 5, scope: !7402, inlinedAt: !7404)
!7522 = !DILocation(line: 200, column: 3, scope: !7402, inlinedAt: !7404)
!7523 = !DILocation(line: 201, column: 9, scope: !7403, inlinedAt: !7404)
!7524 = !DILocation(line: 3092, column: 9, scope: !7399)
!7525 = !DILocation(line: 3092, column: 2, scope: !7399)
!7526 = !DILocation(line: 3093, column: 1, scope: !7399)
!7527 = distinct !DISubprogram(name: "fb_console_init", scope: !3, file: !3, line: 3388, type: !2780, scopeLine: 3389, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !241)
!7528 = !DILocalVariable(name: "i", scope: !7527, file: !3, line: 3390, type: !170)
!7529 = !DILocation(line: 3390, column: 6, scope: !7527)
!7530 = !DILocation(line: 3392, column: 2, scope: !7527)
!7531 = !DILocation(line: 3393, column: 31, scope: !7527)
!7532 = !DILocation(line: 3393, column: 17, scope: !7527)
!7533 = !DILocation(line: 3393, column: 15, scope: !7527)
!7534 = !DILocation(line: 3396, column: 13, scope: !7535)
!7535 = distinct !DILexicalBlock(scope: !7527, file: !3, line: 3396, column: 6)
!7536 = !DILocation(line: 3396, column: 6, scope: !7535)
!7537 = !DILocation(line: 3396, column: 6, scope: !7527)
!7538 = !DILocation(line: 3399, column: 18, scope: !7539)
!7539 = distinct !DILexicalBlock(scope: !7535, file: !3, line: 3396, column: 28)
!7540 = !DILocation(line: 3399, column: 10, scope: !7539)
!7541 = !DILocation(line: 3397, column: 3, scope: !7539)
!7542 = !DILocation(line: 3400, column: 16, scope: !7539)
!7543 = !DILocation(line: 3401, column: 2, scope: !7539)
!7544 = !DILocation(line: 3402, column: 3, scope: !7535)
!7545 = !DILocation(line: 3404, column: 9, scope: !7546)
!7546 = distinct !DILexicalBlock(scope: !7527, file: !3, line: 3404, column: 2)
!7547 = !DILocation(line: 3404, column: 7, scope: !7546)
!7548 = !DILocation(line: 3404, column: 14, scope: !7549)
!7549 = distinct !DILexicalBlock(scope: !7546, file: !3, line: 3404, column: 2)
!7550 = !DILocation(line: 3404, column: 16, scope: !7549)
!7551 = !DILocation(line: 3404, column: 2, scope: !7546)
!7552 = !DILocation(line: 3405, column: 14, scope: !7549)
!7553 = !DILocation(line: 3405, column: 3, scope: !7549)
!7554 = !DILocation(line: 3405, column: 17, scope: !7549)
!7555 = !DILocation(line: 3404, column: 36, scope: !7549)
!7556 = !DILocation(line: 3404, column: 2, scope: !7549)
!7557 = distinct !{!7557, !7551, !7558}
!7558 = !DILocation(line: 3405, column: 20, scope: !7546)
!7559 = !DILocation(line: 3407, column: 2, scope: !7527)
!7560 = !DILocation(line: 3408, column: 2, scope: !7527)
!7561 = !DILocation(line: 3409, column: 1, scope: !7527)
!7562 = distinct !DISubprogram(name: "IS_ERR", scope: !7563, file: !7563, line: 34, type: !7564, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !241)
!7563 = !DIFile(filename: "./include/linux/err.h", directory: "/home/lizy2001/genbc/linux")
!7564 = !DISubroutineType(types: !7565)
!7565 = !{!720, !3016}
!7566 = !DILocalVariable(name: "ptr", arg: 1, scope: !7562, file: !7563, line: 34, type: !3016)
!7567 = !DILocation(line: 34, column: 60, scope: !7562)
!7568 = !DILocation(line: 36, column: 9, scope: !7562)
!7569 = !DILocation(line: 36, column: 2, scope: !7562)
!7570 = distinct !DISubprogram(name: "PTR_ERR", scope: !7563, file: !7563, line: 29, type: !7571, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !241)
!7571 = !DISubroutineType(types: !7572)
!7572 = !{!138, !3016}
!7573 = !DILocalVariable(name: "ptr", arg: 1, scope: !7570, file: !7563, line: 29, type: !3016)
!7574 = !DILocation(line: 29, column: 61, scope: !7570)
!7575 = !DILocation(line: 31, column: 16, scope: !7570)
!7576 = !DILocation(line: 31, column: 9, scope: !7570)
!7577 = !DILocation(line: 31, column: 2, scope: !7570)
!7578 = distinct !DISubprogram(name: "fbcon_init_device", scope: !3, file: !3, line: 3253, type: !7579, scopeLine: 3254, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !241)
!7579 = !DISubroutineType(types: !7580)
!7580 = !{!170}
!7581 = !DILocalVariable(name: "i", scope: !7578, file: !3, line: 3255, type: !170)
!7582 = !DILocation(line: 3255, column: 6, scope: !7578)
!7583 = !DILocalVariable(name: "error", scope: !7578, file: !3, line: 3255, type: !170)
!7584 = !DILocation(line: 3255, column: 9, scope: !7578)
!7585 = !DILocation(line: 3257, column: 18, scope: !7578)
!7586 = !DILocation(line: 3259, column: 9, scope: !7587)
!7587 = distinct !DILexicalBlock(scope: !7578, file: !3, line: 3259, column: 2)
!7588 = !DILocation(line: 3259, column: 7, scope: !7587)
!7589 = !DILocation(line: 3259, column: 14, scope: !7590)
!7590 = distinct !DILexicalBlock(scope: !7587, file: !3, line: 3259, column: 2)
!7591 = !DILocation(line: 3259, column: 16, scope: !7590)
!7592 = !DILocation(line: 3259, column: 2, scope: !7587)
!7593 = !DILocation(line: 3260, column: 30, scope: !7594)
!7594 = distinct !DILexicalBlock(scope: !7590, file: !3, line: 3259, column: 49)
!7595 = !DILocation(line: 3260, column: 58, scope: !7594)
!7596 = !DILocation(line: 3260, column: 45, scope: !7594)
!7597 = !DILocation(line: 3260, column: 11, scope: !7594)
!7598 = !DILocation(line: 3260, column: 9, scope: !7594)
!7599 = !DILocation(line: 3262, column: 7, scope: !7600)
!7600 = distinct !DILexicalBlock(scope: !7594, file: !3, line: 3262, column: 7)
!7601 = !DILocation(line: 3262, column: 7, scope: !7594)
!7602 = !DILocation(line: 3263, column: 4, scope: !7600)
!7603 = !DILocation(line: 3264, column: 2, scope: !7594)
!7604 = !DILocation(line: 3259, column: 45, scope: !7590)
!7605 = !DILocation(line: 3259, column: 2, scope: !7590)
!7606 = distinct !{!7606, !7592, !7607}
!7607 = !DILocation(line: 3264, column: 2, scope: !7587)
!7608 = !DILocation(line: 3266, column: 6, scope: !7609)
!7609 = distinct !DILexicalBlock(scope: !7578, file: !3, line: 3266, column: 6)
!7610 = !DILocation(line: 3266, column: 6, scope: !7578)
!7611 = !DILocation(line: 3267, column: 3, scope: !7612)
!7612 = distinct !DILexicalBlock(scope: !7609, file: !3, line: 3266, column: 13)
!7613 = !DILocation(line: 3267, column: 10, scope: !7612)
!7614 = !DILocation(line: 3267, column: 14, scope: !7612)
!7615 = !DILocation(line: 3268, column: 23, scope: !7612)
!7616 = !DILocation(line: 3268, column: 51, scope: !7612)
!7617 = !DILocation(line: 3268, column: 38, scope: !7612)
!7618 = !DILocation(line: 3268, column: 4, scope: !7612)
!7619 = distinct !{!7619, !7611, !7620}
!7620 = !DILocation(line: 3268, column: 53, scope: !7612)
!7621 = !DILocation(line: 3270, column: 19, scope: !7612)
!7622 = !DILocation(line: 3271, column: 2, scope: !7612)
!7623 = !DILocation(line: 3273, column: 2, scope: !7578)
!7624 = distinct !DISubprogram(name: "fbcon_start", scope: !3, file: !3, line: 3310, type: !2780, scopeLine: 3311, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !241)
!7625 = !DILocation(line: 23, column: 61, scope: !5820, inlinedAt: !7626)
!7626 = distinct !DILocation(line: 28, column: 9, scope: !5828, inlinedAt: !7627)
!7627 = distinct !DILocation(line: 3312, column: 2, scope: !7628)
!7628 = distinct !DILexicalBlock(scope: !7624, file: !3, line: 3312, column: 2)
!7629 = !DILocation(line: 69, column: 73, scope: !5833, inlinedAt: !7630)
!7630 = distinct !DILocation(line: 27, column: 2, scope: !5828, inlinedAt: !7627)
!7631 = !DILocation(line: 69, column: 83, scope: !5833, inlinedAt: !7630)
!7632 = !DILocation(line: 25, column: 29, scope: !5828, inlinedAt: !7627)
!7633 = !DILocalVariable(name: "__ret_warn_on", scope: !7628, file: !3, line: 3312, type: !170)
!7634 = !DILocation(line: 3312, column: 2, scope: !7628)
!7635 = !DILocation(line: 27, column: 25, scope: !5828, inlinedAt: !7627)
!7636 = !DILocation(line: 71, column: 19, scope: !5833, inlinedAt: !7630)
!7637 = !DILocation(line: 71, column: 22, scope: !5833, inlinedAt: !7630)
!7638 = !DILocation(line: 71, column: 2, scope: !5833, inlinedAt: !7630)
!7639 = !DILocation(line: 72, column: 2, scope: !5833, inlinedAt: !7630)
!7640 = !DILocation(line: 28, column: 26, scope: !5828, inlinedAt: !7627)
!7641 = !DILocation(line: 29, column: 9, scope: !5820, inlinedAt: !7626)
!7642 = !DILocation(line: 0, scope: !7628)
!7643 = !DILocation(line: 3312, column: 2, scope: !7644)
!7644 = distinct !DILexicalBlock(scope: !7628, file: !3, line: 3312, column: 2)
!7645 = !DILocation(line: 3312, column: 2, scope: !7646)
!7646 = distinct !DILexicalBlock(scope: !7644, file: !3, line: 3312, column: 2)
!7647 = !DILocation(line: 3312, column: 2, scope: !7648)
!7648 = distinct !DILexicalBlock(scope: !7646, file: !3, line: 3312, column: 2)
!7649 = !DILocation(line: 3312, column: 2, scope: !7650)
!7650 = distinct !DILexicalBlock(scope: !7646, file: !3, line: 3312, column: 2)
!7651 = !{i32 -2140947113, i32 -2140947084, i32 -2140947038, i32 -2140946980, i32 -2140946926, i32 -2140946872, i32 -2140946817, i32 -2140946786}
!7652 = !DILocation(line: 3312, column: 2, scope: !7653)
!7653 = distinct !DILexicalBlock(scope: !7646, file: !3, line: 3312, column: 2)
!7654 = !{i32 -2140946371, i32 -2140946364, i32 -2140946312, i32 -2140946281, i32 -2140946251}
!7655 = !DILocation(line: 3312, column: 2, scope: !7656)
!7656 = distinct !DILexicalBlock(scope: !7646, file: !3, line: 3312, column: 2)
!7657 = !DILocation(line: 3325, column: 6, scope: !7658)
!7658 = distinct !DILexicalBlock(scope: !7624, file: !3, line: 3325, column: 6)
!7659 = !DILocation(line: 3325, column: 6, scope: !7624)
!7660 = !DILocalVariable(name: "i", scope: !7661, file: !3, line: 3326, type: !170)
!7661 = distinct !DILexicalBlock(scope: !7658, file: !3, line: 3325, column: 25)
!7662 = !DILocation(line: 3326, column: 7, scope: !7661)
!7663 = !DILocation(line: 3328, column: 3, scope: !7664)
!7664 = distinct !DILexicalBlock(scope: !7661, file: !3, line: 3328, column: 3)
!7665 = !DILocation(line: 3328, column: 3, scope: !7666)
!7666 = distinct !DILexicalBlock(scope: !7664, file: !3, line: 3328, column: 3)
!7667 = !DILocation(line: 3328, column: 3, scope: !7668)
!7668 = distinct !DILexicalBlock(scope: !7666, file: !3, line: 3328, column: 3)
!7669 = !DILocation(line: 3328, column: 3, scope: !7670)
!7670 = distinct !DILexicalBlock(scope: !7668, file: !3, line: 3328, column: 3)
!7671 = !DILocation(line: 3329, column: 15, scope: !7672)
!7672 = distinct !DILexicalBlock(scope: !7668, file: !3, line: 3328, column: 29)
!7673 = !DILocation(line: 3329, column: 13, scope: !7672)
!7674 = !DILocation(line: 3330, column: 4, scope: !7672)
!7675 = distinct !{!7675, !7663, !7676}
!7676 = !DILocation(line: 3331, column: 3, scope: !7664)
!7677 = !DILocation(line: 3333, column: 3, scope: !7661)
!7678 = !DILocation(line: 3334, column: 2, scope: !7661)
!7679 = !DILocation(line: 3335, column: 1, scope: !7624)
!7680 = distinct !DISubprogram(name: "fbcon_map_override", scope: !3, file: !3, line: 135, type: !2780, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !241)
!7681 = !DILocation(line: 137, column: 15, scope: !7680)
!7682 = !DILocation(line: 138, column: 1, scope: !7680)
!7683 = distinct !DISubprogram(name: "fbcon_is_inactive", scope: !3, file: !3, line: 291, type: !7684, scopeLine: 292, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !241)
!7684 = !DISubroutineType(types: !7685)
!7685 = !{!170, !4826, !199}
!7686 = !DILocalVariable(name: "vc", arg: 1, scope: !7683, file: !3, line: 291, type: !4826)
!7687 = !DILocation(line: 291, column: 53, scope: !7683)
!7688 = !DILocalVariable(name: "info", arg: 2, scope: !7683, file: !3, line: 291, type: !199)
!7689 = !DILocation(line: 291, column: 73, scope: !7683)
!7690 = !DILocalVariable(name: "ops", scope: !7683, file: !3, line: 293, type: !4818)
!7691 = !DILocation(line: 293, column: 20, scope: !7683)
!7692 = !DILocation(line: 293, column: 26, scope: !7683)
!7693 = !DILocation(line: 293, column: 32, scope: !7683)
!7694 = !DILocation(line: 295, column: 10, scope: !7683)
!7695 = !DILocation(line: 295, column: 16, scope: !7683)
!7696 = !DILocation(line: 295, column: 22, scope: !7683)
!7697 = !DILocation(line: 295, column: 46, scope: !7683)
!7698 = !DILocation(line: 296, column: 3, scope: !7683)
!7699 = !DILocation(line: 296, column: 7, scope: !7683)
!7700 = !DILocation(line: 296, column: 15, scope: !7683)
!7701 = !DILocation(line: 296, column: 26, scope: !7683)
!7702 = !DILocation(line: 296, column: 29, scope: !7683)
!7703 = !DILocation(line: 296, column: 34, scope: !7683)
!7704 = !DILocation(line: 295, column: 2, scope: !7683)
!7705 = distinct !DISubprogram(name: "fbcon_del_cursor_timer", scope: !3, file: !3, line: 425, type: !4580, scopeLine: 426, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !241)
!7706 = !DILocalVariable(name: "info", arg: 1, scope: !7705, file: !3, line: 425, type: !199)
!7707 = !DILocation(line: 425, column: 52, scope: !7705)
!7708 = !DILocalVariable(name: "ops", scope: !7705, file: !3, line: 427, type: !4818)
!7709 = !DILocation(line: 427, column: 20, scope: !7705)
!7710 = !DILocation(line: 427, column: 26, scope: !7705)
!7711 = !DILocation(line: 427, column: 32, scope: !7705)
!7712 = !DILocation(line: 429, column: 6, scope: !7713)
!7713 = distinct !DILexicalBlock(scope: !7705, file: !3, line: 429, column: 6)
!7714 = !DILocation(line: 429, column: 12, scope: !7713)
!7715 = !DILocation(line: 429, column: 18, scope: !7713)
!7716 = !DILocation(line: 429, column: 23, scope: !7713)
!7717 = !DILocation(line: 429, column: 41, scope: !7713)
!7718 = !DILocation(line: 430, column: 6, scope: !7713)
!7719 = !DILocation(line: 430, column: 11, scope: !7713)
!7720 = !DILocation(line: 430, column: 17, scope: !7713)
!7721 = !DILocation(line: 429, column: 6, scope: !7705)
!7722 = !DILocation(line: 431, column: 3, scope: !7723)
!7723 = distinct !DILexicalBlock(scope: !7713, file: !3, line: 430, column: 45)
!7724 = !DILocation(line: 432, column: 3, scope: !7723)
!7725 = !DILocation(line: 432, column: 8, scope: !7723)
!7726 = !DILocation(line: 432, column: 14, scope: !7723)
!7727 = !DILocation(line: 433, column: 2, scope: !7723)
!7728 = !DILocation(line: 434, column: 1, scope: !7705)
!7729 = distinct !DISubprogram(name: "fbcon_add_cursor_timer", scope: !3, file: !3, line: 409, type: !4580, scopeLine: 410, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !241)
!7730 = !DILocalVariable(name: "info", arg: 1, scope: !7729, file: !3, line: 409, type: !199)
!7731 = !DILocation(line: 409, column: 52, scope: !7729)
!7732 = !DILocalVariable(name: "ops", scope: !7729, file: !3, line: 411, type: !4818)
!7733 = !DILocation(line: 411, column: 20, scope: !7729)
!7734 = !DILocation(line: 411, column: 26, scope: !7729)
!7735 = !DILocation(line: 411, column: 32, scope: !7729)
!7736 = !DILocation(line: 413, column: 8, scope: !7737)
!7737 = distinct !DILexicalBlock(scope: !7729, file: !3, line: 413, column: 6)
!7738 = !DILocation(line: 413, column: 14, scope: !7737)
!7739 = !DILocation(line: 413, column: 20, scope: !7737)
!7740 = !DILocation(line: 413, column: 25, scope: !7737)
!7741 = !DILocation(line: 413, column: 28, scope: !7737)
!7742 = !DILocation(line: 413, column: 34, scope: !7737)
!7743 = !DILocation(line: 413, column: 40, scope: !7737)
!7744 = !DILocation(line: 413, column: 45, scope: !7737)
!7745 = !DILocation(line: 413, column: 64, scope: !7737)
!7746 = !DILocation(line: 414, column: 8, scope: !7737)
!7747 = !DILocation(line: 414, column: 13, scope: !7737)
!7748 = !DILocation(line: 414, column: 19, scope: !7737)
!7749 = !DILocation(line: 414, column: 47, scope: !7737)
!7750 = !DILocation(line: 415, column: 7, scope: !7737)
!7751 = !DILocation(line: 413, column: 6, scope: !7729)
!7752 = !DILocation(line: 416, column: 8, scope: !7753)
!7753 = distinct !DILexicalBlock(scope: !7754, file: !3, line: 416, column: 7)
!7754 = distinct !DILexicalBlock(scope: !7737, file: !3, line: 415, column: 29)
!7755 = !DILocation(line: 416, column: 14, scope: !7753)
!7756 = !DILocation(line: 416, column: 20, scope: !7753)
!7757 = !DILocation(line: 416, column: 7, scope: !7754)
!7758 = !DILocation(line: 417, column: 4, scope: !7753)
!7759 = !DILocation(line: 417, column: 4, scope: !7760)
!7760 = distinct !DILexicalBlock(scope: !7753, file: !3, line: 417, column: 4)
!7761 = !DILocation(line: 419, column: 3, scope: !7754)
!7762 = !DILocation(line: 420, column: 14, scope: !7754)
!7763 = !DILocation(line: 420, column: 19, scope: !7754)
!7764 = !DILocation(line: 420, column: 33, scope: !7754)
!7765 = !DILocation(line: 420, column: 43, scope: !7754)
!7766 = !DILocation(line: 420, column: 48, scope: !7754)
!7767 = !DILocation(line: 420, column: 41, scope: !7754)
!7768 = !DILocation(line: 420, column: 3, scope: !7754)
!7769 = !DILocation(line: 421, column: 3, scope: !7754)
!7770 = !DILocation(line: 421, column: 8, scope: !7754)
!7771 = !DILocation(line: 421, column: 14, scope: !7754)
!7772 = !DILocation(line: 422, column: 2, scope: !7754)
!7773 = !DILocation(line: 423, column: 1, scope: !7729)
!7774 = distinct !DISubprogram(name: "get_color", scope: !3, file: !3, line: 299, type: !7775, scopeLine: 301, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !241)
!7775 = !DISubroutineType(types: !7776)
!7776 = !{!170, !4826, !199, !194, !170}
!7777 = !DILocalVariable(name: "vc", arg: 1, scope: !7774, file: !3, line: 299, type: !4826)
!7778 = !DILocation(line: 299, column: 38, scope: !7774)
!7779 = !DILocalVariable(name: "info", arg: 2, scope: !7774, file: !3, line: 299, type: !199)
!7780 = !DILocation(line: 299, column: 58, scope: !7774)
!7781 = !DILocalVariable(name: "c", arg: 3, scope: !7774, file: !3, line: 300, type: !194)
!7782 = !DILocation(line: 300, column: 12, scope: !7774)
!7783 = !DILocalVariable(name: "is_fg", arg: 4, scope: !7774, file: !3, line: 300, type: !170)
!7784 = !DILocation(line: 300, column: 19, scope: !7774)
!7785 = !DILocalVariable(name: "depth", scope: !7774, file: !3, line: 302, type: !170)
!7786 = !DILocation(line: 302, column: 6, scope: !7774)
!7787 = !DILocation(line: 302, column: 34, scope: !7774)
!7788 = !DILocation(line: 302, column: 40, scope: !7774)
!7789 = !DILocation(line: 302, column: 46, scope: !7774)
!7790 = !DILocation(line: 302, column: 52, scope: !7774)
!7791 = !DILocation(line: 302, column: 14, scope: !7774)
!7792 = !DILocalVariable(name: "color", scope: !7774, file: !3, line: 303, type: !170)
!7793 = !DILocation(line: 303, column: 6, scope: !7774)
!7794 = !DILocation(line: 305, column: 6, scope: !7795)
!7795 = distinct !DILexicalBlock(scope: !7774, file: !3, line: 305, column: 6)
!7796 = !DILocation(line: 305, column: 6, scope: !7774)
!7797 = !DILocalVariable(name: "charmask", scope: !7798, file: !3, line: 306, type: !198)
!7798 = distinct !DILexicalBlock(scope: !7795, file: !3, line: 305, column: 23)
!7799 = !DILocation(line: 306, column: 18, scope: !7798)
!7800 = !DILocation(line: 306, column: 29, scope: !7798)
!7801 = !DILocation(line: 306, column: 33, scope: !7798)
!7802 = !DILocation(line: 308, column: 7, scope: !7798)
!7803 = !DILocation(line: 308, column: 11, scope: !7798)
!7804 = !DILocation(line: 308, column: 33, scope: !7798)
!7805 = !DILocation(line: 308, column: 31, scope: !7798)
!7806 = !DILocation(line: 308, column: 5, scope: !7798)
!7807 = !DILocation(line: 309, column: 2, scope: !7798)
!7808 = !DILocation(line: 311, column: 6, scope: !7809)
!7809 = distinct !DILexicalBlock(scope: !7774, file: !3, line: 311, column: 6)
!7810 = !DILocation(line: 311, column: 12, scope: !7809)
!7811 = !DILocation(line: 311, column: 6, scope: !7774)
!7812 = !DILocation(line: 312, column: 12, scope: !7809)
!7813 = !DILocation(line: 312, column: 11, scope: !7809)
!7814 = !DILocation(line: 312, column: 21, scope: !7809)
!7815 = !DILocation(line: 313, column: 6, scope: !7809)
!7816 = !DILocation(line: 312, column: 9, scope: !7809)
!7817 = !DILocation(line: 312, column: 3, scope: !7809)
!7818 = !DILocation(line: 315, column: 10, scope: !7774)
!7819 = !DILocation(line: 315, column: 2, scope: !7774)
!7820 = !DILocalVariable(name: "col", scope: !7821, file: !3, line: 318, type: !170)
!7821 = distinct !DILexicalBlock(scope: !7822, file: !3, line: 317, column: 2)
!7822 = distinct !DILexicalBlock(scope: !7774, file: !3, line: 315, column: 17)
!7823 = !DILocation(line: 318, column: 7, scope: !7821)
!7824 = !DILocation(line: 318, column: 22, scope: !7821)
!7825 = !DILocation(line: 318, column: 13, scope: !7821)
!7826 = !DILocalVariable(name: "fg", scope: !7821, file: !3, line: 320, type: !170)
!7827 = !DILocation(line: 320, column: 7, scope: !7821)
!7828 = !DILocation(line: 320, column: 13, scope: !7821)
!7829 = !DILocation(line: 320, column: 19, scope: !7821)
!7830 = !DILocation(line: 320, column: 23, scope: !7821)
!7831 = !DILocation(line: 320, column: 30, scope: !7821)
!7832 = !DILocation(line: 320, column: 12, scope: !7821)
!7833 = !DILocation(line: 320, column: 53, scope: !7821)
!7834 = !DILocalVariable(name: "bg", scope: !7821, file: !3, line: 321, type: !170)
!7835 = !DILocation(line: 321, column: 7, scope: !7821)
!7836 = !DILocation(line: 321, column: 13, scope: !7821)
!7837 = !DILocation(line: 321, column: 19, scope: !7821)
!7838 = !DILocation(line: 321, column: 23, scope: !7821)
!7839 = !DILocation(line: 321, column: 30, scope: !7821)
!7840 = !DILocation(line: 321, column: 12, scope: !7821)
!7841 = !DILocation(line: 321, column: 57, scope: !7821)
!7842 = !DILocation(line: 323, column: 7, scope: !7843)
!7843 = distinct !DILexicalBlock(scope: !7821, file: !3, line: 323, column: 7)
!7844 = !DILocation(line: 323, column: 7, scope: !7821)
!7845 = !DILocation(line: 324, column: 9, scope: !7843)
!7846 = !DILocation(line: 324, column: 7, scope: !7843)
!7847 = !DILocation(line: 324, column: 4, scope: !7843)
!7848 = !DILocation(line: 326, column: 12, scope: !7821)
!7849 = !DILocation(line: 326, column: 11, scope: !7821)
!7850 = !DILocation(line: 326, column: 21, scope: !7821)
!7851 = !DILocation(line: 326, column: 26, scope: !7821)
!7852 = !DILocation(line: 326, column: 9, scope: !7821)
!7853 = !DILocation(line: 327, column: 3, scope: !7821)
!7854 = !DILocation(line: 337, column: 11, scope: !7822)
!7855 = !DILocation(line: 337, column: 3, scope: !7822)
!7856 = !DILocation(line: 339, column: 10, scope: !7857)
!7857 = distinct !DILexicalBlock(scope: !7822, file: !3, line: 337, column: 18)
!7858 = !DILocation(line: 340, column: 4, scope: !7857)
!7859 = !DILocation(line: 342, column: 10, scope: !7857)
!7860 = !DILocation(line: 343, column: 4, scope: !7857)
!7861 = !DILocation(line: 345, column: 10, scope: !7857)
!7862 = !DILocation(line: 346, column: 4, scope: !7857)
!7863 = !DILocation(line: 348, column: 10, scope: !7857)
!7864 = !DILocation(line: 349, column: 4, scope: !7857)
!7865 = !DILocation(line: 351, column: 3, scope: !7822)
!7866 = !DILocation(line: 358, column: 9, scope: !7822)
!7867 = !DILocation(line: 359, column: 3, scope: !7822)
!7868 = !DILocation(line: 363, column: 9, scope: !7774)
!7869 = !DILocation(line: 363, column: 2, scope: !7774)
!7870 = distinct !DISubprogram(name: "_msecs_to_jiffies", scope: !5403, file: !5403, line: 308, type: !5404, scopeLine: 309, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !241)
!7871 = !DILocalVariable(name: "m", arg: 1, scope: !7870, file: !5403, line: 308, type: !3713)
!7872 = !DILocation(line: 308, column: 66, scope: !7870)
!7873 = !DILocation(line: 310, column: 10, scope: !7870)
!7874 = !DILocation(line: 310, column: 12, scope: !7870)
!7875 = !DILocation(line: 310, column: 34, scope: !7870)
!7876 = !DILocation(line: 310, column: 39, scope: !7870)
!7877 = !DILocation(line: 310, column: 2, scope: !7870)
!7878 = distinct !DISubprogram(name: "fb_flashcursor", scope: !3, file: !3, line: 366, type: !390, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !241)
!7879 = !DILocalVariable(name: "work", arg: 1, scope: !7878, file: !3, line: 366, type: !392)
!7880 = !DILocation(line: 366, column: 48, scope: !7878)
!7881 = !DILocalVariable(name: "info", scope: !7878, file: !3, line: 368, type: !199)
!7882 = !DILocation(line: 368, column: 18, scope: !7878)
!7883 = !DILocalVariable(name: "__mptr", scope: !7884, file: !3, line: 368, type: !192)
!7884 = distinct !DILexicalBlock(scope: !7878, file: !3, line: 368, column: 25)
!7885 = !DILocation(line: 368, column: 25, scope: !7884)
!7886 = !DILocation(line: 368, column: 25, scope: !7887)
!7887 = distinct !DILexicalBlock(scope: !7884, file: !3, line: 368, column: 25)
!7888 = !DILocalVariable(name: "ops", scope: !7878, file: !3, line: 369, type: !4818)
!7889 = !DILocation(line: 369, column: 20, scope: !7878)
!7890 = !DILocation(line: 369, column: 26, scope: !7878)
!7891 = !DILocation(line: 369, column: 32, scope: !7878)
!7892 = !DILocalVariable(name: "vc", scope: !7878, file: !3, line: 370, type: !4826)
!7893 = !DILocation(line: 370, column: 18, scope: !7878)
!7894 = !DILocalVariable(name: "c", scope: !7878, file: !3, line: 371, type: !170)
!7895 = !DILocation(line: 371, column: 6, scope: !7878)
!7896 = !DILocalVariable(name: "mode", scope: !7878, file: !3, line: 372, type: !170)
!7897 = !DILocation(line: 372, column: 6, scope: !7878)
!7898 = !DILocalVariable(name: "ret", scope: !7878, file: !3, line: 373, type: !170)
!7899 = !DILocation(line: 373, column: 6, scope: !7878)
!7900 = !DILocation(line: 378, column: 8, scope: !7878)
!7901 = !DILocation(line: 378, column: 6, scope: !7878)
!7902 = !DILocation(line: 379, column: 6, scope: !7903)
!7903 = distinct !DILexicalBlock(scope: !7878, file: !3, line: 379, column: 6)
!7904 = !DILocation(line: 379, column: 10, scope: !7903)
!7905 = !DILocation(line: 379, column: 6, scope: !7878)
!7906 = !DILocation(line: 380, column: 3, scope: !7903)
!7907 = !DILocation(line: 382, column: 6, scope: !7908)
!7908 = distinct !DILexicalBlock(scope: !7878, file: !3, line: 382, column: 6)
!7909 = !DILocation(line: 382, column: 10, scope: !7908)
!7910 = !DILocation(line: 382, column: 13, scope: !7908)
!7911 = !DILocation(line: 382, column: 18, scope: !7908)
!7912 = !DILocation(line: 382, column: 26, scope: !7908)
!7913 = !DILocation(line: 382, column: 6, scope: !7878)
!7914 = !DILocation(line: 383, column: 16, scope: !7908)
!7915 = !DILocation(line: 383, column: 21, scope: !7908)
!7916 = !DILocation(line: 383, column: 8, scope: !7908)
!7917 = !DILocation(line: 383, column: 30, scope: !7908)
!7918 = !DILocation(line: 383, column: 6, scope: !7908)
!7919 = !DILocation(line: 383, column: 3, scope: !7908)
!7920 = !DILocation(line: 385, column: 7, scope: !7921)
!7921 = distinct !DILexicalBlock(scope: !7878, file: !3, line: 385, column: 6)
!7922 = !DILocation(line: 385, column: 10, scope: !7921)
!7923 = !DILocation(line: 385, column: 29, scope: !7921)
!7924 = !DILocation(line: 385, column: 14, scope: !7921)
!7925 = !DILocation(line: 385, column: 33, scope: !7921)
!7926 = !DILocation(line: 386, column: 32, scope: !7921)
!7927 = !DILocation(line: 386, column: 36, scope: !7921)
!7928 = !DILocation(line: 386, column: 21, scope: !7921)
!7929 = !DILocation(line: 386, column: 7, scope: !7921)
!7930 = !DILocation(line: 386, column: 48, scope: !7921)
!7931 = !DILocation(line: 386, column: 45, scope: !7921)
!7932 = !DILocation(line: 386, column: 53, scope: !7921)
!7933 = !DILocation(line: 387, column: 6, scope: !7921)
!7934 = !DILocation(line: 387, column: 10, scope: !7921)
!7935 = !DILocation(line: 387, column: 19, scope: !7921)
!7936 = !DILocation(line: 385, column: 6, scope: !7878)
!7937 = !DILocation(line: 388, column: 3, scope: !7938)
!7938 = distinct !DILexicalBlock(scope: !7921, file: !3, line: 387, column: 25)
!7939 = !DILocation(line: 389, column: 3, scope: !7938)
!7940 = !DILocation(line: 392, column: 6, scope: !7878)
!7941 = !DILocation(line: 392, column: 4, scope: !7878)
!7942 = !DILocation(line: 393, column: 11, scope: !7878)
!7943 = !DILocation(line: 393, column: 16, scope: !7878)
!7944 = !DILocation(line: 393, column: 29, scope: !7878)
!7945 = !DILocation(line: 393, column: 32, scope: !7878)
!7946 = !DILocation(line: 393, column: 37, scope: !7878)
!7947 = !DILocation(line: 393, column: 50, scope: !7878)
!7948 = !DILocation(line: 393, column: 9, scope: !7878)
!7949 = !DILocation(line: 393, column: 7, scope: !7878)
!7950 = !DILocation(line: 395, column: 2, scope: !7878)
!7951 = !DILocation(line: 395, column: 7, scope: !7878)
!7952 = !DILocation(line: 395, column: 14, scope: !7878)
!7953 = !DILocation(line: 395, column: 18, scope: !7878)
!7954 = !DILocation(line: 395, column: 24, scope: !7878)
!7955 = !DILocation(line: 395, column: 40, scope: !7878)
!7956 = !DILocation(line: 395, column: 44, scope: !7878)
!7957 = !DILocation(line: 395, column: 50, scope: !7878)
!7958 = !DILocation(line: 395, column: 30, scope: !7878)
!7959 = !DILocation(line: 396, column: 17, scope: !7878)
!7960 = !DILocation(line: 396, column: 21, scope: !7878)
!7961 = !DILocation(line: 396, column: 27, scope: !7878)
!7962 = !DILocation(line: 396, column: 7, scope: !7878)
!7963 = !DILocation(line: 397, column: 2, scope: !7878)
!7964 = !DILocation(line: 398, column: 1, scope: !7878)
!7965 = distinct !DISubprogram(name: "__init_work", scope: !137, file: !137, line: 215, type: !7966, scopeLine: 215, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !241)
!7966 = !DISubroutineType(types: !7967)
!7967 = !{null, !392, !170}
!7968 = !DILocalVariable(name: "work", arg: 1, scope: !7965, file: !137, line: 215, type: !392)
!7969 = !DILocation(line: 215, column: 52, scope: !7965)
!7970 = !DILocalVariable(name: "onstack", arg: 2, scope: !7965, file: !137, line: 215, type: !170)
!7971 = !DILocation(line: 215, column: 62, scope: !7965)
!7972 = !DILocation(line: 215, column: 73, scope: !7965)
!7973 = distinct !DISubprogram(name: "INIT_LIST_HEAD", scope: !7974, file: !7974, line: 33, type: !7975, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !241)
!7974 = !DIFile(filename: "./include/linux/list.h", directory: "/home/lizy2001/genbc/linux")
!7975 = !DISubroutineType(types: !7976)
!7976 = !{null, !246}
!7977 = !DILocalVariable(name: "list", arg: 1, scope: !7973, file: !7974, line: 33, type: !246)
!7978 = !DILocation(line: 33, column: 53, scope: !7973)
!7979 = !DILocation(line: 35, column: 2, scope: !7973)
!7980 = !DILocation(line: 35, column: 2, scope: !7981)
!7981 = distinct !DILexicalBlock(scope: !7973, file: !7974, line: 35, column: 2)
!7982 = !DILocation(line: 35, column: 2, scope: !7983)
!7983 = distinct !DILexicalBlock(scope: !7981, file: !7974, line: 35, column: 2)
!7984 = !DILocation(line: 35, column: 2, scope: !7985)
!7985 = distinct !DILexicalBlock(scope: !7981, file: !7974, line: 35, column: 2)
!7986 = !DILocation(line: 36, column: 15, scope: !7973)
!7987 = !DILocation(line: 36, column: 2, scope: !7973)
!7988 = !DILocation(line: 36, column: 8, scope: !7973)
!7989 = !DILocation(line: 36, column: 13, scope: !7973)
!7990 = !DILocation(line: 37, column: 1, scope: !7973)
!7991 = distinct !DISubprogram(name: "cursor_timer_handler", scope: !3, file: !3, line: 400, type: !4210, scopeLine: 401, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !241)
!7992 = !DILocalVariable(name: "t", arg: 1, scope: !7991, file: !3, line: 400, type: !4212)
!7993 = !DILocation(line: 400, column: 53, scope: !7991)
!7994 = !DILocalVariable(name: "ops", scope: !7991, file: !3, line: 402, type: !4818)
!7995 = !DILocation(line: 402, column: 20, scope: !7991)
!7996 = !DILocalVariable(name: "__mptr", scope: !7997, file: !3, line: 402, type: !192)
!7997 = distinct !DILexicalBlock(scope: !7991, file: !3, line: 402, column: 26)
!7998 = !DILocation(line: 402, column: 26, scope: !7997)
!7999 = !DILocation(line: 402, column: 26, scope: !8000)
!8000 = distinct !DILexicalBlock(scope: !7997, file: !3, line: 402, column: 26)
!8001 = !DILocalVariable(name: "info", scope: !7991, file: !3, line: 403, type: !199)
!8002 = !DILocation(line: 403, column: 18, scope: !7991)
!8003 = !DILocation(line: 403, column: 25, scope: !7991)
!8004 = !DILocation(line: 403, column: 30, scope: !7991)
!8005 = !DILocation(line: 405, column: 13, scope: !7991)
!8006 = !DILocation(line: 405, column: 41, scope: !7991)
!8007 = !DILocation(line: 405, column: 47, scope: !7991)
!8008 = !DILocation(line: 405, column: 2, scope: !7991)
!8009 = !DILocation(line: 406, column: 13, scope: !7991)
!8010 = !DILocation(line: 406, column: 18, scope: !7991)
!8011 = !DILocation(line: 406, column: 32, scope: !7991)
!8012 = !DILocation(line: 406, column: 42, scope: !7991)
!8013 = !DILocation(line: 406, column: 47, scope: !7991)
!8014 = !DILocation(line: 406, column: 40, scope: !7991)
!8015 = !DILocation(line: 406, column: 2, scope: !7991)
!8016 = !DILocation(line: 407, column: 1, scope: !7991)
!8017 = distinct !DISubprogram(name: "queue_work", scope: !137, file: !137, line: 504, type: !8018, scopeLine: 506, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !241)
!8018 = !DISubroutineType(types: !8019)
!8019 = !{!720, !3679, !392}
!8020 = !DILocalVariable(name: "wq", arg: 1, scope: !8017, file: !137, line: 504, type: !3679)
!8021 = !DILocation(line: 504, column: 56, scope: !8017)
!8022 = !DILocalVariable(name: "work", arg: 2, scope: !8017, file: !137, line: 505, type: !392)
!8023 = !DILocation(line: 505, column: 30, scope: !8017)
!8024 = !DILocation(line: 507, column: 41, scope: !8017)
!8025 = !DILocation(line: 507, column: 45, scope: !8017)
!8026 = !DILocation(line: 507, column: 9, scope: !8017)
!8027 = !DILocation(line: 507, column: 2, scope: !8017)
!8028 = distinct !DISubprogram(name: "mono_col", scope: !4820, file: !4820, line: 111, type: !8029, scopeLine: 112, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !241)
!8029 = !DISubroutineType(types: !8030)
!8030 = !{!170, !8031}
!8031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8032, size: 64)
!8032 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !200)
!8033 = !DILocalVariable(name: "info", arg: 1, scope: !8028, file: !4820, line: 111, type: !8031)
!8034 = !DILocation(line: 111, column: 50, scope: !8028)
!8035 = !DILocalVariable(name: "max_len", scope: !8028, file: !4820, line: 113, type: !253)
!8036 = !DILocation(line: 113, column: 8, scope: !8028)
!8037 = !DILocalVariable(name: "__UNIQUE_ID___x241", scope: !8038, file: !4820, line: 114, type: !8039)
!8038 = distinct !DILexicalBlock(scope: !8028, file: !4820, line: 114, column: 12)
!8039 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !253)
!8040 = !DILocation(line: 114, column: 12, scope: !8038)
!8041 = !DILocalVariable(name: "__UNIQUE_ID___y242", scope: !8038, file: !4820, line: 114, type: !8039)
!8042 = !DILocation(line: 114, column: 10, scope: !8028)
!8043 = !DILocalVariable(name: "__UNIQUE_ID___x243", scope: !8044, file: !4820, line: 115, type: !8039)
!8044 = distinct !DILexicalBlock(scope: !8028, file: !4820, line: 115, column: 12)
!8045 = !DILocation(line: 115, column: 12, scope: !8044)
!8046 = !DILocalVariable(name: "__UNIQUE_ID___y244", scope: !8044, file: !4820, line: 115, type: !253)
!8047 = !DILocation(line: 115, column: 10, scope: !8028)
!8048 = !DILocation(line: 116, column: 21, scope: !8028)
!8049 = !DILocation(line: 116, column: 18, scope: !8028)
!8050 = !DILocation(line: 116, column: 10, scope: !8028)
!8051 = !DILocation(line: 116, column: 31, scope: !8028)
!8052 = !DILocation(line: 116, column: 2, scope: !8028)
!8053 = distinct !DISubprogram(name: "set_blitting_type", scope: !3, file: !3, line: 672, type: !8054, scopeLine: 673, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !241)
!8054 = !DISubroutineType(types: !8055)
!8055 = !{null, !4826, !199}
!8056 = !DILocalVariable(name: "vc", arg: 1, scope: !8053, file: !3, line: 672, type: !4826)
!8057 = !DILocation(line: 672, column: 47, scope: !8053)
!8058 = !DILocalVariable(name: "info", arg: 2, scope: !8053, file: !3, line: 672, type: !199)
!8059 = !DILocation(line: 672, column: 67, scope: !8053)
!8060 = !DILocalVariable(name: "ops", scope: !8053, file: !3, line: 674, type: !4818)
!8061 = !DILocation(line: 674, column: 20, scope: !8053)
!8062 = !DILocation(line: 674, column: 26, scope: !8053)
!8063 = !DILocation(line: 674, column: 32, scope: !8053)
!8064 = !DILocation(line: 676, column: 23, scope: !8053)
!8065 = !DILocation(line: 676, column: 27, scope: !8053)
!8066 = !DILocation(line: 676, column: 12, scope: !8053)
!8067 = !DILocation(line: 676, column: 2, scope: !8053)
!8068 = !DILocation(line: 676, column: 7, scope: !8053)
!8069 = !DILocation(line: 676, column: 9, scope: !8053)
!8070 = !DILocation(line: 678, column: 7, scope: !8071)
!8071 = distinct !DILexicalBlock(scope: !8053, file: !3, line: 678, column: 6)
!8072 = !DILocation(line: 678, column: 13, scope: !8071)
!8073 = !DILocation(line: 678, column: 19, scope: !8071)
!8074 = !DILocation(line: 678, column: 6, scope: !8053)
!8075 = !DILocation(line: 679, column: 21, scope: !8071)
!8076 = !DILocation(line: 679, column: 25, scope: !8071)
!8077 = !DILocation(line: 679, column: 3, scope: !8071)
!8078 = !DILocation(line: 681, column: 22, scope: !8079)
!8079 = distinct !DILexicalBlock(scope: !8071, file: !3, line: 680, column: 7)
!8080 = !DILocation(line: 681, column: 3, scope: !8079)
!8081 = !DILocation(line: 682, column: 20, scope: !8079)
!8082 = !DILocation(line: 682, column: 3, scope: !8079)
!8083 = !DILocation(line: 684, column: 1, scope: !8053)
!8084 = distinct !DISubprogram(name: "var_to_display", scope: !3, file: !3, line: 900, type: !8085, scopeLine: 903, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !241)
!8085 = !DISubroutineType(types: !8086)
!8086 = !{!170, !5048, !4609, !199}
!8087 = !DILocalVariable(name: "disp", arg: 1, scope: !8084, file: !3, line: 900, type: !5048)
!8088 = !DILocation(line: 900, column: 49, scope: !8084)
!8089 = !DILocalVariable(name: "var", arg: 2, scope: !8084, file: !3, line: 901, type: !4609)
!8090 = !DILocation(line: 901, column: 32, scope: !8084)
!8091 = !DILocalVariable(name: "info", arg: 3, scope: !8084, file: !3, line: 902, type: !199)
!8092 = !DILocation(line: 902, column: 22, scope: !8084)
!8093 = !DILocation(line: 904, column: 23, scope: !8084)
!8094 = !DILocation(line: 904, column: 28, scope: !8084)
!8095 = !DILocation(line: 904, column: 2, scope: !8084)
!8096 = !DILocation(line: 904, column: 8, scope: !8084)
!8097 = !DILocation(line: 904, column: 21, scope: !8084)
!8098 = !DILocation(line: 905, column: 23, scope: !8084)
!8099 = !DILocation(line: 905, column: 28, scope: !8084)
!8100 = !DILocation(line: 905, column: 2, scope: !8084)
!8101 = !DILocation(line: 905, column: 8, scope: !8084)
!8102 = !DILocation(line: 905, column: 21, scope: !8084)
!8103 = !DILocation(line: 906, column: 25, scope: !8084)
!8104 = !DILocation(line: 906, column: 30, scope: !8084)
!8105 = !DILocation(line: 906, column: 2, scope: !8084)
!8106 = !DILocation(line: 906, column: 8, scope: !8084)
!8107 = !DILocation(line: 906, column: 23, scope: !8084)
!8108 = !DILocation(line: 907, column: 20, scope: !8084)
!8109 = !DILocation(line: 907, column: 25, scope: !8084)
!8110 = !DILocation(line: 907, column: 2, scope: !8084)
!8111 = !DILocation(line: 907, column: 8, scope: !8084)
!8112 = !DILocation(line: 907, column: 18, scope: !8084)
!8113 = !DILocation(line: 908, column: 17, scope: !8084)
!8114 = !DILocation(line: 908, column: 22, scope: !8084)
!8115 = !DILocation(line: 908, column: 2, scope: !8084)
!8116 = !DILocation(line: 908, column: 8, scope: !8084)
!8117 = !DILocation(line: 908, column: 15, scope: !8084)
!8118 = !DILocation(line: 909, column: 22, scope: !8084)
!8119 = !DILocation(line: 909, column: 27, scope: !8084)
!8120 = !DILocation(line: 909, column: 2, scope: !8084)
!8121 = !DILocation(line: 909, column: 8, scope: !8084)
!8122 = !DILocation(line: 909, column: 20, scope: !8084)
!8123 = !DILocation(line: 910, column: 17, scope: !8084)
!8124 = !DILocation(line: 910, column: 22, scope: !8084)
!8125 = !DILocation(line: 910, column: 2, scope: !8084)
!8126 = !DILocation(line: 910, column: 8, scope: !8084)
!8127 = !DILocation(line: 910, column: 15, scope: !8084)
!8128 = !DILocation(line: 911, column: 16, scope: !8084)
!8129 = !DILocation(line: 911, column: 21, scope: !8084)
!8130 = !DILocation(line: 911, column: 2, scope: !8084)
!8131 = !DILocation(line: 911, column: 8, scope: !8084)
!8132 = !DILocation(line: 911, column: 14, scope: !8084)
!8133 = !DILocation(line: 912, column: 2, scope: !8084)
!8134 = !DILocation(line: 912, column: 8, scope: !8084)
!8135 = !DILocation(line: 912, column: 14, scope: !8084)
!8136 = !DILocation(line: 912, column: 19, scope: !8084)
!8137 = !DILocation(line: 913, column: 2, scope: !8084)
!8138 = !DILocation(line: 913, column: 8, scope: !8084)
!8139 = !DILocation(line: 913, column: 16, scope: !8084)
!8140 = !DILocation(line: 913, column: 21, scope: !8084)
!8141 = !DILocation(line: 914, column: 2, scope: !8084)
!8142 = !DILocation(line: 914, column: 8, scope: !8084)
!8143 = !DILocation(line: 914, column: 15, scope: !8084)
!8144 = !DILocation(line: 914, column: 20, scope: !8084)
!8145 = !DILocation(line: 915, column: 2, scope: !8084)
!8146 = !DILocation(line: 915, column: 8, scope: !8084)
!8147 = !DILocation(line: 915, column: 17, scope: !8084)
!8148 = !DILocation(line: 915, column: 22, scope: !8084)
!8149 = !DILocation(line: 916, column: 17, scope: !8084)
!8150 = !DILocation(line: 916, column: 22, scope: !8084)
!8151 = !DILocation(line: 916, column: 2, scope: !8084)
!8152 = !DILocation(line: 916, column: 8, scope: !8084)
!8153 = !DILocation(line: 916, column: 15, scope: !8084)
!8154 = !DILocation(line: 917, column: 29, scope: !8084)
!8155 = !DILocation(line: 917, column: 35, scope: !8084)
!8156 = !DILocation(line: 917, column: 41, scope: !8084)
!8157 = !DILocation(line: 917, column: 15, scope: !8084)
!8158 = !DILocation(line: 917, column: 2, scope: !8084)
!8159 = !DILocation(line: 917, column: 8, scope: !8084)
!8160 = !DILocation(line: 917, column: 13, scope: !8084)
!8161 = !DILocation(line: 918, column: 6, scope: !8162)
!8162 = distinct !DILexicalBlock(scope: !8084, file: !3, line: 918, column: 6)
!8163 = !DILocation(line: 918, column: 12, scope: !8162)
!8164 = !DILocation(line: 918, column: 17, scope: !8162)
!8165 = !DILocation(line: 918, column: 6, scope: !8084)
!8166 = !DILocation(line: 920, column: 3, scope: !8162)
!8167 = !DILocation(line: 921, column: 2, scope: !8084)
!8168 = !DILocation(line: 922, column: 1, scope: !8084)
!8169 = distinct !DISubprogram(name: "fbcon_set_rotation", scope: !3, file: !3, line: 266, type: !4580, scopeLine: 267, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !241)
!8170 = !DILocalVariable(name: "info", arg: 1, scope: !8169, file: !3, line: 266, type: !199)
!8171 = !DILocation(line: 266, column: 55, scope: !8169)
!8172 = !DILocalVariable(name: "ops", scope: !8169, file: !3, line: 268, type: !4818)
!8173 = !DILocation(line: 268, column: 20, scope: !8169)
!8174 = !DILocation(line: 268, column: 26, scope: !8169)
!8175 = !DILocation(line: 268, column: 32, scope: !8169)
!8176 = !DILocation(line: 270, column: 2, scope: !8169)
!8177 = !DILocation(line: 270, column: 7, scope: !8169)
!8178 = !DILocation(line: 270, column: 14, scope: !8169)
!8179 = !DILocation(line: 271, column: 1, scope: !8169)
!8180 = distinct !DISubprogram(name: "updatescrollmode", scope: !3, file: !3, line: 1958, type: !8181, scopeLine: 1961, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !241)
!8181 = !DISubroutineType(types: !8182)
!8182 = !{null, !5048, !199, !4826}
!8183 = !DILocalVariable(name: "p", arg: 1, scope: !8180, file: !3, line: 1958, type: !5048)
!8184 = !DILocation(line: 1958, column: 52, scope: !8180)
!8185 = !DILocalVariable(name: "info", arg: 2, scope: !8180, file: !3, line: 1959, type: !199)
!8186 = !DILocation(line: 1959, column: 22, scope: !8180)
!8187 = !DILocalVariable(name: "vc", arg: 3, scope: !8180, file: !3, line: 1960, type: !4826)
!8188 = !DILocation(line: 1960, column: 22, scope: !8180)
!8189 = !DILocalVariable(name: "ops", scope: !8180, file: !3, line: 1962, type: !4818)
!8190 = !DILocation(line: 1962, column: 20, scope: !8180)
!8191 = !DILocation(line: 1962, column: 26, scope: !8180)
!8192 = !DILocation(line: 1962, column: 32, scope: !8180)
!8193 = !DILocalVariable(name: "fh", scope: !8180, file: !3, line: 1963, type: !170)
!8194 = !DILocation(line: 1963, column: 6, scope: !8180)
!8195 = !DILocation(line: 1963, column: 11, scope: !8180)
!8196 = !DILocation(line: 1963, column: 15, scope: !8180)
!8197 = !DILocation(line: 1963, column: 23, scope: !8180)
!8198 = !DILocalVariable(name: "cap", scope: !8180, file: !3, line: 1964, type: !170)
!8199 = !DILocation(line: 1964, column: 6, scope: !8180)
!8200 = !DILocation(line: 1964, column: 12, scope: !8180)
!8201 = !DILocation(line: 1964, column: 18, scope: !8180)
!8202 = !DILocalVariable(name: "t", scope: !8180, file: !3, line: 1965, type: !194)
!8203 = !DILocation(line: 1965, column: 6, scope: !8180)
!8204 = !DILocalVariable(name: "ypan", scope: !8180, file: !3, line: 1966, type: !170)
!8205 = !DILocation(line: 1966, column: 6, scope: !8180)
!8206 = !DILocalVariable(name: "_r", scope: !8207, file: !3, line: 1966, type: !196)
!8207 = distinct !DILexicalBlock(scope: !8180, file: !3, line: 1966, column: 13)
!8208 = !DILocation(line: 1966, column: 13, scope: !8207)
!8209 = !DILocalVariable(name: "_v", scope: !8207, file: !3, line: 1966, type: !196)
!8210 = !DILocalVariable(name: "ywrap", scope: !8180, file: !3, line: 1968, type: !170)
!8211 = !DILocation(line: 1968, column: 6, scope: !8180)
!8212 = !DILocalVariable(name: "_r", scope: !8213, file: !3, line: 1968, type: !196)
!8213 = distinct !DILexicalBlock(scope: !8180, file: !3, line: 1968, column: 14)
!8214 = !DILocation(line: 1968, column: 14, scope: !8213)
!8215 = !DILocalVariable(name: "_v", scope: !8213, file: !3, line: 1968, type: !194)
!8216 = !DILocalVariable(name: "yres", scope: !8180, file: !3, line: 1969, type: !170)
!8217 = !DILocation(line: 1969, column: 6, scope: !8180)
!8218 = !DILocalVariable(name: "_r", scope: !8219, file: !3, line: 1969, type: !253)
!8219 = distinct !DILexicalBlock(scope: !8180, file: !3, line: 1969, column: 13)
!8220 = !DILocation(line: 1969, column: 13, scope: !8219)
!8221 = !DILocalVariable(name: "_v", scope: !8219, file: !3, line: 1969, type: !253)
!8222 = !DILocalVariable(name: "vyres", scope: !8180, file: !3, line: 1970, type: !170)
!8223 = !DILocation(line: 1970, column: 6, scope: !8180)
!8224 = !DILocalVariable(name: "_r", scope: !8225, file: !3, line: 1970, type: !253)
!8225 = distinct !DILexicalBlock(scope: !8180, file: !3, line: 1970, column: 14)
!8226 = !DILocation(line: 1970, column: 14, scope: !8225)
!8227 = !DILocalVariable(name: "_v", scope: !8225, file: !3, line: 1970, type: !253)
!8228 = !DILocalVariable(name: "good_pan", scope: !8180, file: !3, line: 1972, type: !170)
!8229 = !DILocation(line: 1972, column: 6, scope: !8180)
!8230 = !DILocation(line: 1972, column: 18, scope: !8180)
!8231 = !DILocation(line: 1972, column: 22, scope: !8180)
!8232 = !DILocation(line: 1972, column: 45, scope: !8180)
!8233 = !DILocation(line: 1973, column: 3, scope: !8180)
!8234 = !DILocation(line: 1973, column: 37, scope: !8180)
!8235 = !DILocation(line: 1973, column: 40, scope: !8180)
!8236 = !DILocation(line: 1973, column: 48, scope: !8180)
!8237 = !DILocation(line: 1973, column: 46, scope: !8180)
!8238 = !DILocation(line: 0, scope: !8180)
!8239 = !DILocalVariable(name: "good_wrap", scope: !8180, file: !3, line: 1974, type: !170)
!8240 = !DILocation(line: 1974, column: 6, scope: !8180)
!8241 = !DILocation(line: 1974, column: 19, scope: !8180)
!8242 = !DILocation(line: 1974, column: 23, scope: !8180)
!8243 = !DILocation(line: 1974, column: 47, scope: !8180)
!8244 = !DILocation(line: 1975, column: 3, scope: !8180)
!8245 = !DILocation(line: 1975, column: 38, scope: !8180)
!8246 = !DILocation(line: 1976, column: 3, scope: !8180)
!8247 = !DILocation(line: 1976, column: 38, scope: !8180)
!8248 = !DILocation(line: 1977, column: 3, scope: !8180)
!8249 = !DILocalVariable(name: "reading_fast", scope: !8180, file: !3, line: 1978, type: !170)
!8250 = !DILocation(line: 1978, column: 6, scope: !8180)
!8251 = !DILocation(line: 1978, column: 21, scope: !8180)
!8252 = !DILocation(line: 1978, column: 25, scope: !8180)
!8253 = !DILocalVariable(name: "fast_copyarea", scope: !8180, file: !3, line: 1979, type: !170)
!8254 = !DILocation(line: 1979, column: 6, scope: !8180)
!8255 = !DILocation(line: 1979, column: 23, scope: !8180)
!8256 = !DILocation(line: 1979, column: 27, scope: !8180)
!8257 = !DILocation(line: 1979, column: 54, scope: !8180)
!8258 = !DILocation(line: 1980, column: 5, scope: !8180)
!8259 = !DILocation(line: 1980, column: 9, scope: !8180)
!8260 = !DILocation(line: 1980, column: 3, scope: !8180)
!8261 = !DILocalVariable(name: "fast_imageblit", scope: !8180, file: !3, line: 1981, type: !170)
!8262 = !DILocation(line: 1981, column: 6, scope: !8180)
!8263 = !DILocation(line: 1981, column: 24, scope: !8180)
!8264 = !DILocation(line: 1981, column: 28, scope: !8180)
!8265 = !DILocation(line: 1981, column: 56, scope: !8180)
!8266 = !DILocation(line: 1982, column: 5, scope: !8180)
!8267 = !DILocation(line: 1982, column: 9, scope: !8180)
!8268 = !DILocation(line: 1982, column: 3, scope: !8180)
!8269 = !DILocation(line: 1984, column: 13, scope: !8180)
!8270 = !DILocation(line: 1984, column: 19, scope: !8180)
!8271 = !DILocation(line: 1984, column: 18, scope: !8180)
!8272 = !DILocation(line: 1984, column: 2, scope: !8180)
!8273 = !DILocation(line: 1984, column: 5, scope: !8180)
!8274 = !DILocation(line: 1984, column: 11, scope: !8180)
!8275 = !DILocation(line: 1985, column: 6, scope: !8276)
!8276 = distinct !DILexicalBlock(scope: !8180, file: !3, line: 1985, column: 6)
!8277 = !DILocation(line: 1985, column: 14, scope: !8276)
!8278 = !DILocation(line: 1985, column: 20, scope: !8276)
!8279 = !DILocation(line: 1985, column: 24, scope: !8276)
!8280 = !DILocation(line: 1985, column: 32, scope: !8276)
!8281 = !DILocation(line: 1985, column: 17, scope: !8276)
!8282 = !DILocation(line: 1985, column: 11, scope: !8276)
!8283 = !DILocation(line: 1985, column: 6, scope: !8180)
!8284 = !DILocation(line: 1986, column: 16, scope: !8276)
!8285 = !DILocation(line: 1986, column: 24, scope: !8276)
!8286 = !DILocation(line: 1986, column: 29, scope: !8276)
!8287 = !DILocation(line: 1986, column: 33, scope: !8276)
!8288 = !DILocation(line: 1986, column: 27, scope: !8276)
!8289 = !DILocation(line: 1986, column: 21, scope: !8276)
!8290 = !DILocation(line: 1986, column: 45, scope: !8276)
!8291 = !DILocation(line: 1986, column: 43, scope: !8276)
!8292 = !DILocation(line: 1986, column: 3, scope: !8276)
!8293 = !DILocation(line: 1986, column: 6, scope: !8276)
!8294 = !DILocation(line: 1986, column: 12, scope: !8276)
!8295 = !DILocation(line: 1987, column: 7, scope: !8296)
!8296 = distinct !DILexicalBlock(scope: !8180, file: !3, line: 1987, column: 6)
!8297 = !DILocation(line: 1987, column: 14, scope: !8296)
!8298 = !DILocation(line: 1987, column: 12, scope: !8296)
!8299 = !DILocation(line: 1987, column: 18, scope: !8296)
!8300 = !DILocation(line: 1987, column: 22, scope: !8296)
!8301 = !DILocation(line: 1987, column: 30, scope: !8296)
!8302 = !DILocation(line: 1987, column: 28, scope: !8296)
!8303 = !DILocation(line: 1987, column: 35, scope: !8296)
!8304 = !DILocation(line: 1987, column: 42, scope: !8296)
!8305 = !DILocation(line: 1987, column: 40, scope: !8296)
!8306 = !DILocation(line: 1987, column: 33, scope: !8296)
!8307 = !DILocation(line: 1987, column: 6, scope: !8180)
!8308 = !DILocation(line: 1988, column: 3, scope: !8296)
!8309 = !DILocation(line: 1988, column: 6, scope: !8296)
!8310 = !DILocation(line: 1988, column: 11, scope: !8296)
!8311 = !DILocation(line: 1990, column: 6, scope: !8312)
!8312 = distinct !DILexicalBlock(scope: !8180, file: !3, line: 1990, column: 6)
!8313 = !DILocation(line: 1990, column: 16, scope: !8312)
!8314 = !DILocation(line: 1990, column: 19, scope: !8312)
!8315 = !DILocation(line: 1990, column: 6, scope: !8180)
!8316 = !DILocation(line: 1991, column: 7, scope: !8317)
!8317 = distinct !DILexicalBlock(scope: !8318, file: !3, line: 1991, column: 7)
!8318 = distinct !DILexicalBlock(scope: !8312, file: !3, line: 1990, column: 29)
!8319 = !DILocation(line: 1991, column: 20, scope: !8317)
!8320 = !DILocation(line: 1991, column: 23, scope: !8317)
!8321 = !DILocation(line: 1991, column: 7, scope: !8318)
!8322 = !DILocation(line: 1992, column: 20, scope: !8317)
!8323 = !DILocation(line: 1992, column: 4, scope: !8317)
!8324 = !DILocation(line: 1992, column: 7, scope: !8317)
!8325 = !DILocation(line: 1992, column: 18, scope: !8317)
!8326 = !DILocation(line: 1995, column: 20, scope: !8317)
!8327 = !DILocation(line: 1995, column: 4, scope: !8317)
!8328 = !DILocation(line: 1995, column: 7, scope: !8317)
!8329 = !DILocation(line: 1995, column: 18, scope: !8317)
!8330 = !DILocation(line: 1997, column: 2, scope: !8318)
!8331 = !DILocation(line: 1998, column: 7, scope: !8332)
!8332 = distinct !DILexicalBlock(scope: !8333, file: !3, line: 1998, column: 7)
!8333 = distinct !DILexicalBlock(scope: !8312, file: !3, line: 1997, column: 9)
!8334 = !DILocation(line: 1998, column: 20, scope: !8332)
!8335 = !DILocation(line: 1998, column: 24, scope: !8332)
!8336 = !DILocation(line: 1998, column: 38, scope: !8332)
!8337 = !DILocation(line: 1998, column: 42, scope: !8332)
!8338 = !DILocation(line: 1998, column: 7, scope: !8333)
!8339 = !DILocation(line: 1999, column: 4, scope: !8332)
!8340 = !DILocation(line: 1999, column: 7, scope: !8332)
!8341 = !DILocation(line: 1999, column: 18, scope: !8332)
!8342 = !DILocation(line: 2001, column: 4, scope: !8332)
!8343 = !DILocation(line: 2001, column: 7, scope: !8332)
!8344 = !DILocation(line: 2001, column: 18, scope: !8332)
!8345 = !DILocation(line: 2003, column: 1, scope: !8180)
!8346 = distinct !DISubprogram(name: "fbcon_set_palette", scope: !3, file: !3, line: 2564, type: !4930, scopeLine: 2565, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !241)
!8347 = !DILocalVariable(name: "vc", arg: 1, scope: !8346, file: !3, line: 2564, type: !4826)
!8348 = !DILocation(line: 2564, column: 47, scope: !8346)
!8349 = !DILocalVariable(name: "table", arg: 2, scope: !8346, file: !3, line: 2564, type: !656)
!8350 = !DILocation(line: 2564, column: 72, scope: !8346)
!8351 = !DILocalVariable(name: "info", scope: !8346, file: !3, line: 2566, type: !199)
!8352 = !DILocation(line: 2566, column: 18, scope: !8346)
!8353 = !DILocation(line: 2566, column: 50, scope: !8346)
!8354 = !DILocation(line: 2566, column: 54, scope: !8346)
!8355 = !DILocation(line: 2566, column: 39, scope: !8346)
!8356 = !DILocation(line: 2566, column: 25, scope: !8346)
!8357 = !DILocalVariable(name: "i", scope: !8346, file: !3, line: 2567, type: !170)
!8358 = !DILocation(line: 2567, column: 6, scope: !8346)
!8359 = !DILocalVariable(name: "j", scope: !8346, file: !3, line: 2567, type: !170)
!8360 = !DILocation(line: 2567, column: 9, scope: !8346)
!8361 = !DILocalVariable(name: "k", scope: !8346, file: !3, line: 2567, type: !170)
!8362 = !DILocation(line: 2567, column: 12, scope: !8346)
!8363 = !DILocalVariable(name: "depth", scope: !8346, file: !3, line: 2567, type: !170)
!8364 = !DILocation(line: 2567, column: 15, scope: !8346)
!8365 = !DILocalVariable(name: "val", scope: !8346, file: !3, line: 2568, type: !398)
!8366 = !DILocation(line: 2568, column: 5, scope: !8346)
!8367 = !DILocation(line: 2570, column: 24, scope: !8368)
!8368 = distinct !DILexicalBlock(scope: !8346, file: !3, line: 2570, column: 6)
!8369 = !DILocation(line: 2570, column: 28, scope: !8368)
!8370 = !DILocation(line: 2570, column: 6, scope: !8368)
!8371 = !DILocation(line: 2570, column: 6, scope: !8346)
!8372 = !DILocation(line: 2571, column: 3, scope: !8368)
!8373 = !DILocation(line: 2573, column: 22, scope: !8374)
!8374 = distinct !DILexicalBlock(scope: !8346, file: !3, line: 2573, column: 6)
!8375 = !DILocation(line: 2573, column: 7, scope: !8374)
!8376 = !DILocation(line: 2573, column: 6, scope: !8346)
!8377 = !DILocation(line: 2574, column: 3, scope: !8374)
!8378 = !DILocation(line: 2576, column: 30, scope: !8346)
!8379 = !DILocation(line: 2576, column: 36, scope: !8346)
!8380 = !DILocation(line: 2576, column: 42, scope: !8346)
!8381 = !DILocation(line: 2576, column: 48, scope: !8346)
!8382 = !DILocation(line: 2576, column: 10, scope: !8346)
!8383 = !DILocation(line: 2576, column: 8, scope: !8346)
!8384 = !DILocation(line: 2577, column: 6, scope: !8385)
!8385 = distinct !DILexicalBlock(scope: !8346, file: !3, line: 2577, column: 6)
!8386 = !DILocation(line: 2577, column: 12, scope: !8385)
!8387 = !DILocation(line: 2577, column: 6, scope: !8346)
!8388 = !DILocation(line: 2578, column: 14, scope: !8389)
!8389 = distinct !DILexicalBlock(scope: !8390, file: !3, line: 2578, column: 3)
!8390 = distinct !DILexicalBlock(scope: !8385, file: !3, line: 2577, column: 17)
!8391 = !DILocation(line: 2578, column: 10, scope: !8389)
!8392 = !DILocation(line: 2578, column: 8, scope: !8389)
!8393 = !DILocation(line: 2578, column: 19, scope: !8394)
!8394 = distinct !DILexicalBlock(scope: !8389, file: !3, line: 2578, column: 3)
!8395 = !DILocation(line: 2578, column: 21, scope: !8394)
!8396 = !DILocation(line: 2578, column: 3, scope: !8389)
!8397 = !DILocation(line: 2579, column: 8, scope: !8398)
!8398 = distinct !DILexicalBlock(scope: !8394, file: !3, line: 2578, column: 32)
!8399 = !DILocation(line: 2579, column: 14, scope: !8398)
!8400 = !DILocation(line: 2579, column: 6, scope: !8398)
!8401 = !DILocation(line: 2580, column: 10, scope: !8398)
!8402 = !DILocation(line: 2580, column: 14, scope: !8398)
!8403 = !DILocation(line: 2580, column: 26, scope: !8398)
!8404 = !DILocation(line: 2580, column: 8, scope: !8398)
!8405 = !DILocation(line: 2581, column: 22, scope: !8398)
!8406 = !DILocation(line: 2581, column: 26, scope: !8398)
!8407 = !DILocation(line: 2581, column: 34, scope: !8398)
!8408 = !DILocation(line: 2581, column: 32, scope: !8398)
!8409 = !DILocation(line: 2581, column: 21, scope: !8398)
!8410 = !DILocation(line: 2581, column: 16, scope: !8398)
!8411 = !DILocation(line: 2581, column: 4, scope: !8398)
!8412 = !DILocation(line: 2581, column: 19, scope: !8398)
!8413 = !DILocation(line: 2582, column: 10, scope: !8398)
!8414 = !DILocation(line: 2582, column: 14, scope: !8398)
!8415 = !DILocation(line: 2582, column: 26, scope: !8398)
!8416 = !DILocation(line: 2582, column: 8, scope: !8398)
!8417 = !DILocation(line: 2583, column: 24, scope: !8398)
!8418 = !DILocation(line: 2583, column: 28, scope: !8398)
!8419 = !DILocation(line: 2583, column: 36, scope: !8398)
!8420 = !DILocation(line: 2583, column: 34, scope: !8398)
!8421 = !DILocation(line: 2583, column: 23, scope: !8398)
!8422 = !DILocation(line: 2583, column: 18, scope: !8398)
!8423 = !DILocation(line: 2583, column: 4, scope: !8398)
!8424 = !DILocation(line: 2583, column: 21, scope: !8398)
!8425 = !DILocation(line: 2584, column: 10, scope: !8398)
!8426 = !DILocation(line: 2584, column: 14, scope: !8398)
!8427 = !DILocation(line: 2584, column: 26, scope: !8398)
!8428 = !DILocation(line: 2584, column: 8, scope: !8398)
!8429 = !DILocation(line: 2585, column: 23, scope: !8398)
!8430 = !DILocation(line: 2585, column: 27, scope: !8398)
!8431 = !DILocation(line: 2585, column: 35, scope: !8398)
!8432 = !DILocation(line: 2585, column: 33, scope: !8398)
!8433 = !DILocation(line: 2585, column: 22, scope: !8398)
!8434 = !DILocation(line: 2585, column: 17, scope: !8398)
!8435 = !DILocation(line: 2585, column: 4, scope: !8398)
!8436 = !DILocation(line: 2585, column: 20, scope: !8398)
!8437 = !DILocation(line: 2586, column: 3, scope: !8398)
!8438 = !DILocation(line: 2578, column: 28, scope: !8394)
!8439 = !DILocation(line: 2578, column: 3, scope: !8394)
!8440 = distinct !{!8440, !8396, !8441}
!8441 = !DILocation(line: 2586, column: 3, scope: !8389)
!8442 = !DILocation(line: 2587, column: 20, scope: !8390)
!8443 = !DILocation(line: 2588, column: 22, scope: !8390)
!8444 = !DILocation(line: 2593, column: 2, scope: !8390)
!8445 = !DILocation(line: 2594, column: 37, scope: !8385)
!8446 = !DILocation(line: 2594, column: 34, scope: !8385)
!8447 = !DILocation(line: 2594, column: 16, scope: !8385)
!8448 = !DILocation(line: 2594, column: 3, scope: !8385)
!8449 = !DILocation(line: 2596, column: 29, scope: !8346)
!8450 = !DILocation(line: 2596, column: 2, scope: !8346)
!8451 = !DILocation(line: 2597, column: 1, scope: !8346)
!8452 = distinct !DISubprogram(name: "kasan_check_read", scope: !8453, file: !8453, line: 34, type: !8454, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !241)
!8453 = !DIFile(filename: "./include/linux/kasan-checks.h", directory: "/home/lizy2001/genbc/linux")
!8454 = !DISubroutineType(types: !8455)
!8455 = !{!720, !5837, !7}
!8456 = !DILocalVariable(name: "p", arg: 1, scope: !8452, file: !8453, line: 34, type: !5837)
!8457 = !DILocation(line: 34, column: 58, scope: !8452)
!8458 = !DILocalVariable(name: "size", arg: 2, scope: !8452, file: !8453, line: 34, type: !7)
!8459 = !DILocation(line: 34, column: 74, scope: !8452)
!8460 = !DILocation(line: 36, column: 2, scope: !8452)
!8461 = distinct !DISubprogram(name: "kcsan_check_access", scope: !8462, file: !8462, line: 178, type: !8463, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !241)
!8462 = !DIFile(filename: "./include/linux/kcsan-checks.h", directory: "/home/lizy2001/genbc/linux")
!8463 = !DISubroutineType(types: !8464)
!8464 = !{null, !5837, !557, !170}
!8465 = !DILocalVariable(name: "ptr", arg: 1, scope: !8461, file: !8462, line: 178, type: !5837)
!8466 = !DILocation(line: 178, column: 60, scope: !8461)
!8467 = !DILocalVariable(name: "size", arg: 2, scope: !8461, file: !8462, line: 178, type: !557)
!8468 = !DILocation(line: 178, column: 72, scope: !8461)
!8469 = !DILocalVariable(name: "type", arg: 3, scope: !8461, file: !8462, line: 179, type: !170)
!8470 = !DILocation(line: 179, column: 15, scope: !8461)
!8471 = !DILocation(line: 179, column: 23, scope: !8461)
!8472 = distinct !DISubprogram(name: "search_for_mapped_con", scope: !3, file: !3, line: 536, type: !7579, scopeLine: 537, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !241)
!8473 = !DILocalVariable(name: "i", scope: !8472, file: !3, line: 538, type: !170)
!8474 = !DILocation(line: 538, column: 6, scope: !8472)
!8475 = !DILocalVariable(name: "retval", scope: !8472, file: !3, line: 538, type: !170)
!8476 = !DILocation(line: 538, column: 9, scope: !8472)
!8477 = !DILocation(line: 540, column: 11, scope: !8478)
!8478 = distinct !DILexicalBlock(scope: !8472, file: !3, line: 540, column: 2)
!8479 = !DILocation(line: 540, column: 9, scope: !8478)
!8480 = !DILocation(line: 540, column: 7, scope: !8478)
!8481 = !DILocation(line: 540, column: 24, scope: !8482)
!8482 = distinct !DILexicalBlock(scope: !8478, file: !3, line: 540, column: 2)
!8483 = !DILocation(line: 540, column: 29, scope: !8482)
!8484 = !DILocation(line: 540, column: 26, scope: !8482)
!8485 = !DILocation(line: 540, column: 2, scope: !8478)
!8486 = !DILocation(line: 541, column: 18, scope: !8487)
!8487 = distinct !DILexicalBlock(scope: !8488, file: !3, line: 541, column: 7)
!8488 = distinct !DILexicalBlock(scope: !8482, file: !3, line: 540, column: 46)
!8489 = !DILocation(line: 541, column: 7, scope: !8487)
!8490 = !DILocation(line: 541, column: 21, scope: !8487)
!8491 = !DILocation(line: 541, column: 7, scope: !8488)
!8492 = !DILocation(line: 542, column: 11, scope: !8487)
!8493 = !DILocation(line: 542, column: 4, scope: !8487)
!8494 = !DILocation(line: 543, column: 2, scope: !8488)
!8495 = !DILocation(line: 540, column: 42, scope: !8482)
!8496 = !DILocation(line: 540, column: 2, scope: !8482)
!8497 = distinct !{!8497, !8485, !8498}
!8498 = !DILocation(line: 543, column: 2, scope: !8478)
!8499 = !DILocation(line: 544, column: 9, scope: !8472)
!8500 = !DILocation(line: 544, column: 2, scope: !8472)
!8501 = distinct !DISubprogram(name: "con2fb_acquire_newinfo", scope: !3, file: !3, line: 715, type: !8502, scopeLine: 717, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !241)
!8502 = !DISubroutineType(types: !8503)
!8503 = !{!170, !4826, !199, !170, !170}
!8504 = !DILocalVariable(name: "vc", arg: 1, scope: !8501, file: !3, line: 715, type: !4826)
!8505 = !DILocation(line: 715, column: 51, scope: !8501)
!8506 = !DILocalVariable(name: "info", arg: 2, scope: !8501, file: !3, line: 715, type: !199)
!8507 = !DILocation(line: 715, column: 71, scope: !8501)
!8508 = !DILocalVariable(name: "unit", arg: 3, scope: !8501, file: !3, line: 716, type: !170)
!8509 = !DILocation(line: 716, column: 11, scope: !8501)
!8510 = !DILocalVariable(name: "oldidx", arg: 4, scope: !8501, file: !3, line: 716, type: !170)
!8511 = !DILocation(line: 716, column: 21, scope: !8501)
!8512 = !DILocalVariable(name: "ops", scope: !8501, file: !3, line: 718, type: !4818)
!8513 = !DILocation(line: 718, column: 20, scope: !8501)
!8514 = !DILocalVariable(name: "err", scope: !8501, file: !3, line: 719, type: !170)
!8515 = !DILocation(line: 719, column: 6, scope: !8501)
!8516 = !DILocation(line: 721, column: 22, scope: !8517)
!8517 = distinct !DILexicalBlock(scope: !8501, file: !3, line: 721, column: 6)
!8518 = !DILocation(line: 721, column: 28, scope: !8517)
!8519 = !DILocation(line: 721, column: 35, scope: !8517)
!8520 = !DILocation(line: 721, column: 7, scope: !8517)
!8521 = !DILocation(line: 721, column: 6, scope: !8501)
!8522 = !DILocation(line: 722, column: 7, scope: !8517)
!8523 = !DILocation(line: 722, column: 3, scope: !8517)
!8524 = !DILocation(line: 724, column: 7, scope: !8525)
!8525 = distinct !DILexicalBlock(scope: !8501, file: !3, line: 724, column: 6)
!8526 = !DILocation(line: 724, column: 11, scope: !8525)
!8527 = !DILocation(line: 724, column: 14, scope: !8525)
!8528 = !DILocation(line: 724, column: 20, scope: !8525)
!8529 = !DILocation(line: 724, column: 27, scope: !8525)
!8530 = !DILocation(line: 724, column: 35, scope: !8525)
!8531 = !DILocation(line: 725, column: 6, scope: !8525)
!8532 = !DILocation(line: 725, column: 12, scope: !8525)
!8533 = !DILocation(line: 725, column: 19, scope: !8525)
!8534 = !DILocation(line: 725, column: 27, scope: !8525)
!8535 = !DILocation(line: 724, column: 6, scope: !8501)
!8536 = !DILocation(line: 726, column: 7, scope: !8525)
!8537 = !DILocation(line: 726, column: 3, scope: !8525)
!8538 = !DILocation(line: 728, column: 7, scope: !8539)
!8539 = distinct !DILexicalBlock(scope: !8501, file: !3, line: 728, column: 6)
!8540 = !DILocation(line: 728, column: 6, scope: !8501)
!8541 = !DILocation(line: 729, column: 9, scope: !8542)
!8542 = distinct !DILexicalBlock(scope: !8539, file: !3, line: 728, column: 12)
!8543 = !DILocation(line: 729, column: 7, scope: !8542)
!8544 = !DILocation(line: 730, column: 8, scope: !8545)
!8545 = distinct !DILexicalBlock(scope: !8542, file: !3, line: 730, column: 7)
!8546 = !DILocation(line: 730, column: 7, scope: !8542)
!8547 = !DILocation(line: 731, column: 8, scope: !8545)
!8548 = !DILocation(line: 731, column: 4, scope: !8545)
!8549 = !DILocation(line: 732, column: 2, scope: !8542)
!8550 = !DILocation(line: 734, column: 7, scope: !8551)
!8551 = distinct !DILexicalBlock(scope: !8501, file: !3, line: 734, column: 6)
!8552 = !DILocation(line: 734, column: 6, scope: !8501)
!8553 = !DILocation(line: 735, column: 3, scope: !8554)
!8554 = distinct !DILexicalBlock(scope: !8551, file: !3, line: 734, column: 12)
!8555 = !DILocation(line: 735, column: 8, scope: !8554)
!8556 = !DILocation(line: 735, column: 26, scope: !8554)
!8557 = !DILocation(line: 736, column: 15, scope: !8554)
!8558 = !DILocation(line: 736, column: 3, scope: !8554)
!8559 = !DILocation(line: 736, column: 8, scope: !8554)
!8560 = !DILocation(line: 736, column: 13, scope: !8554)
!8561 = !DILocation(line: 737, column: 21, scope: !8554)
!8562 = !DILocation(line: 737, column: 3, scope: !8554)
!8563 = !DILocation(line: 737, column: 9, scope: !8554)
!8564 = !DILocation(line: 737, column: 19, scope: !8554)
!8565 = !DILocation(line: 739, column: 7, scope: !8566)
!8566 = distinct !DILexicalBlock(scope: !8554, file: !3, line: 739, column: 7)
!8567 = !DILocation(line: 739, column: 7, scope: !8554)
!8568 = !DILocation(line: 740, column: 22, scope: !8566)
!8569 = !DILocation(line: 740, column: 26, scope: !8566)
!8570 = !DILocation(line: 740, column: 4, scope: !8566)
!8571 = !DILocation(line: 741, column: 2, scope: !8554)
!8572 = !DILocation(line: 743, column: 6, scope: !8573)
!8573 = distinct !DILexicalBlock(scope: !8501, file: !3, line: 743, column: 6)
!8574 = !DILocation(line: 743, column: 6, scope: !8501)
!8575 = !DILocation(line: 744, column: 22, scope: !8576)
!8576 = distinct !DILexicalBlock(scope: !8573, file: !3, line: 743, column: 11)
!8577 = !DILocation(line: 744, column: 14, scope: !8576)
!8578 = !DILocation(line: 744, column: 3, scope: !8576)
!8579 = !DILocation(line: 744, column: 20, scope: !8576)
!8580 = !DILocation(line: 745, column: 14, scope: !8576)
!8581 = !DILocation(line: 745, column: 20, scope: !8576)
!8582 = !DILocation(line: 745, column: 27, scope: !8576)
!8583 = !DILocation(line: 745, column: 3, scope: !8576)
!8584 = !DILocation(line: 746, column: 2, scope: !8576)
!8585 = !DILocation(line: 748, column: 9, scope: !8501)
!8586 = !DILocation(line: 748, column: 2, scope: !8501)
!8587 = distinct !DISubprogram(name: "con2fb_init_display", scope: !3, file: !3, line: 797, type: !5033, scopeLine: 799, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !241)
!8588 = !DILocalVariable(name: "vc", arg: 1, scope: !8587, file: !3, line: 797, type: !4826)
!8589 = !DILocation(line: 797, column: 49, scope: !8587)
!8590 = !DILocalVariable(name: "info", arg: 2, scope: !8587, file: !3, line: 797, type: !199)
!8591 = !DILocation(line: 797, column: 69, scope: !8587)
!8592 = !DILocalVariable(name: "unit", arg: 3, scope: !8587, file: !3, line: 798, type: !170)
!8593 = !DILocation(line: 798, column: 9, scope: !8587)
!8594 = !DILocalVariable(name: "show_logo", arg: 4, scope: !8587, file: !3, line: 798, type: !170)
!8595 = !DILocation(line: 798, column: 19, scope: !8587)
!8596 = !DILocalVariable(name: "ops", scope: !8587, file: !3, line: 800, type: !4818)
!8597 = !DILocation(line: 800, column: 20, scope: !8587)
!8598 = !DILocation(line: 800, column: 26, scope: !8587)
!8599 = !DILocation(line: 800, column: 32, scope: !8587)
!8600 = !DILocalVariable(name: "ret", scope: !8587, file: !3, line: 801, type: !170)
!8601 = !DILocation(line: 801, column: 6, scope: !8587)
!8602 = !DILocation(line: 803, column: 17, scope: !8587)
!8603 = !DILocation(line: 803, column: 2, scope: !8587)
!8604 = !DILocation(line: 803, column: 7, scope: !8587)
!8605 = !DILocation(line: 803, column: 15, scope: !8587)
!8606 = !DILocation(line: 805, column: 6, scope: !8607)
!8607 = distinct !DILexicalBlock(scope: !8587, file: !3, line: 805, column: 6)
!8608 = !DILocation(line: 805, column: 12, scope: !8607)
!8609 = !DILocation(line: 805, column: 19, scope: !8607)
!8610 = !DILocation(line: 805, column: 30, scope: !8607)
!8611 = !DILocation(line: 805, column: 35, scope: !8607)
!8612 = !DILocation(line: 805, column: 40, scope: !8607)
!8613 = !DILocation(line: 805, column: 46, scope: !8607)
!8614 = !DILocation(line: 805, column: 6, scope: !8587)
!8615 = !DILocation(line: 806, column: 9, scope: !8616)
!8616 = distinct !DILexicalBlock(scope: !8607, file: !3, line: 805, column: 67)
!8617 = !DILocation(line: 806, column: 15, scope: !8616)
!8618 = !DILocation(line: 806, column: 22, scope: !8616)
!8619 = !DILocation(line: 806, column: 33, scope: !8616)
!8620 = !DILocation(line: 806, column: 7, scope: !8616)
!8621 = !DILocation(line: 808, column: 7, scope: !8622)
!8622 = distinct !DILexicalBlock(scope: !8616, file: !3, line: 808, column: 7)
!8623 = !DILocation(line: 808, column: 7, scope: !8616)
!8624 = !DILocation(line: 811, column: 24, scope: !8622)
!8625 = !DILocation(line: 809, column: 4, scope: !8622)
!8626 = !DILocation(line: 812, column: 2, scope: !8616)
!8627 = !DILocation(line: 814, column: 2, scope: !8587)
!8628 = !DILocation(line: 814, column: 7, scope: !8587)
!8629 = !DILocation(line: 814, column: 13, scope: !8587)
!8630 = !DILocation(line: 815, column: 2, scope: !8587)
!8631 = !DILocation(line: 815, column: 7, scope: !8587)
!8632 = !DILocation(line: 815, column: 16, scope: !8587)
!8633 = !DILocation(line: 816, column: 17, scope: !8587)
!8634 = !DILocation(line: 816, column: 24, scope: !8587)
!8635 = !DILocation(line: 816, column: 30, scope: !8587)
!8636 = !DILocation(line: 816, column: 35, scope: !8587)
!8637 = !DILocation(line: 816, column: 2, scope: !8587)
!8638 = !DILocation(line: 818, column: 6, scope: !8639)
!8639 = distinct !DILexicalBlock(scope: !8587, file: !3, line: 818, column: 6)
!8640 = !DILocation(line: 818, column: 6, scope: !8587)
!8641 = !DILocalVariable(name: "fg_vc", scope: !8642, file: !3, line: 819, type: !4826)
!8642 = distinct !DILexicalBlock(scope: !8639, file: !3, line: 818, column: 17)
!8643 = !DILocation(line: 819, column: 19, scope: !8642)
!8644 = !DILocation(line: 819, column: 35, scope: !8642)
!8645 = !DILocation(line: 819, column: 27, scope: !8642)
!8646 = !DILocation(line: 819, column: 47, scope: !8642)
!8647 = !DILocalVariable(name: "fg_info", scope: !8642, file: !3, line: 820, type: !199)
!8648 = !DILocation(line: 820, column: 19, scope: !8642)
!8649 = !DILocation(line: 821, column: 29, scope: !8642)
!8650 = !DILocation(line: 821, column: 18, scope: !8642)
!8651 = !DILocation(line: 821, column: 4, scope: !8642)
!8652 = !DILocation(line: 823, column: 22, scope: !8642)
!8653 = !DILocation(line: 823, column: 29, scope: !8642)
!8654 = !DILocation(line: 823, column: 38, scope: !8642)
!8655 = !DILocation(line: 823, column: 45, scope: !8642)
!8656 = !DILocation(line: 824, column: 8, scope: !8642)
!8657 = !DILocation(line: 824, column: 15, scope: !8642)
!8658 = !DILocation(line: 824, column: 24, scope: !8642)
!8659 = !DILocation(line: 824, column: 31, scope: !8642)
!8660 = !DILocation(line: 825, column: 8, scope: !8642)
!8661 = !DILocation(line: 825, column: 15, scope: !8642)
!8662 = !DILocation(line: 823, column: 3, scope: !8642)
!8663 = !DILocation(line: 826, column: 2, scope: !8642)
!8664 = !DILocation(line: 828, column: 2, scope: !8587)
!8665 = !DILocation(line: 829, column: 1, scope: !8587)
!8666 = distinct !DISubprogram(name: "try_module_get", scope: !8667, file: !8667, line: 751, type: !8668, scopeLine: 752, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !241)
!8667 = !DIFile(filename: "./include/linux/module.h", directory: "/home/lizy2001/genbc/linux")
!8668 = !DISubroutineType(types: !8669)
!8669 = !{!720, !861}
!8670 = !DILocalVariable(name: "module", arg: 1, scope: !8666, file: !8667, line: 751, type: !861)
!8671 = !DILocation(line: 751, column: 50, scope: !8666)
!8672 = !DILocation(line: 753, column: 2, scope: !8666)
!8673 = distinct !DISubprogram(name: "kzalloc", scope: !176, file: !176, line: 662, type: !8674, scopeLine: 663, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !241)
!8674 = !DISubroutineType(types: !8675)
!8675 = !{!192, !557, !1010}
!8676 = !DILocalVariable(name: "s", arg: 1, scope: !8677, file: !176, line: 445, type: !1189)
!8677 = distinct !DISubprogram(name: "kmem_cache_alloc_trace", scope: !176, file: !176, line: 445, type: !8678, scopeLine: 447, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !241)
!8678 = !DISubroutineType(types: !8679)
!8679 = !{!192, !1189, !1010, !557}
!8680 = !DILocation(line: 445, column: 72, scope: !8677, inlinedAt: !8681)
!8681 = distinct !DILocation(line: 552, column: 10, scope: !8682, inlinedAt: !8685)
!8682 = distinct !DILexicalBlock(scope: !8683, file: !176, line: 540, column: 34)
!8683 = distinct !DILexicalBlock(scope: !8684, file: !176, line: 540, column: 6)
!8684 = distinct !DISubprogram(name: "kmalloc", scope: !176, file: !176, line: 538, type: !8674, scopeLine: 539, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !241)
!8685 = distinct !DILocation(line: 664, column: 9, scope: !8673)
!8686 = !DILocalVariable(name: "flags", arg: 2, scope: !8677, file: !176, line: 446, type: !1010)
!8687 = !DILocation(line: 446, column: 9, scope: !8677, inlinedAt: !8681)
!8688 = !DILocalVariable(name: "size", arg: 3, scope: !8677, file: !176, line: 446, type: !557)
!8689 = !DILocation(line: 446, column: 23, scope: !8677, inlinedAt: !8681)
!8690 = !DILocalVariable(name: "ret", scope: !8677, file: !176, line: 448, type: !192)
!8691 = !DILocation(line: 448, column: 8, scope: !8677, inlinedAt: !8681)
!8692 = !DILocalVariable(name: "flags", arg: 1, scope: !8693, file: !176, line: 318, type: !1010)
!8693 = distinct !DISubprogram(name: "kmalloc_type", scope: !176, file: !176, line: 318, type: !8694, scopeLine: 319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !241)
!8694 = !DISubroutineType(types: !8695)
!8695 = !{!175, !1010}
!8696 = !DILocation(line: 318, column: 67, scope: !8693, inlinedAt: !8697)
!8697 = distinct !DILocation(line: 553, column: 20, scope: !8682, inlinedAt: !8685)
!8698 = !DILocalVariable(name: "size", arg: 1, scope: !8699, file: !176, line: 346, type: !557)
!8699 = distinct !DISubprogram(name: "kmalloc_index", scope: !176, file: !176, line: 346, type: !8700, scopeLine: 347, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !241)
!8700 = !DISubroutineType(types: !8701)
!8701 = !{!7, !557}
!8702 = !DILocation(line: 346, column: 58, scope: !8699, inlinedAt: !8703)
!8703 = distinct !DILocation(line: 547, column: 11, scope: !8682, inlinedAt: !8685)
!8704 = !DILocalVariable(name: "size", arg: 1, scope: !8705, file: !176, line: 472, type: !557)
!8705 = distinct !DISubprogram(name: "kmalloc_order_trace", scope: !176, file: !176, line: 472, type: !8706, scopeLine: 473, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !241)
!8706 = !DISubroutineType(types: !8707)
!8707 = !{!192, !557, !1010, !7}
!8708 = !DILocation(line: 472, column: 28, scope: !8705, inlinedAt: !8709)
!8709 = distinct !DILocation(line: 481, column: 9, scope: !8710, inlinedAt: !8711)
!8710 = distinct !DISubprogram(name: "kmalloc_large", scope: !176, file: !176, line: 478, type: !8674, scopeLine: 479, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !241)
!8711 = distinct !DILocation(line: 545, column: 11, scope: !8712, inlinedAt: !8685)
!8712 = distinct !DILexicalBlock(scope: !8682, file: !176, line: 544, column: 7)
!8713 = !DILocalVariable(name: "flags", arg: 2, scope: !8705, file: !176, line: 472, type: !1010)
!8714 = !DILocation(line: 472, column: 40, scope: !8705, inlinedAt: !8709)
!8715 = !DILocalVariable(name: "order", arg: 3, scope: !8705, file: !176, line: 472, type: !7)
!8716 = !DILocation(line: 472, column: 60, scope: !8705, inlinedAt: !8709)
!8717 = !DILocalVariable(name: "size", arg: 1, scope: !8710, file: !176, line: 478, type: !557)
!8718 = !DILocation(line: 478, column: 51, scope: !8710, inlinedAt: !8711)
!8719 = !DILocalVariable(name: "flags", arg: 2, scope: !8710, file: !176, line: 478, type: !1010)
!8720 = !DILocation(line: 478, column: 63, scope: !8710, inlinedAt: !8711)
!8721 = !DILocalVariable(name: "order", scope: !8710, file: !176, line: 480, type: !7)
!8722 = !DILocation(line: 480, column: 15, scope: !8710, inlinedAt: !8711)
!8723 = !DILocalVariable(name: "size", arg: 1, scope: !8684, file: !176, line: 538, type: !557)
!8724 = !DILocation(line: 538, column: 45, scope: !8684, inlinedAt: !8685)
!8725 = !DILocalVariable(name: "flags", arg: 2, scope: !8684, file: !176, line: 538, type: !1010)
!8726 = !DILocation(line: 538, column: 57, scope: !8684, inlinedAt: !8685)
!8727 = !DILocalVariable(name: "index", scope: !8682, file: !176, line: 542, type: !7)
!8728 = !DILocation(line: 542, column: 16, scope: !8682, inlinedAt: !8685)
!8729 = !DILocalVariable(name: "size", arg: 1, scope: !8673, file: !176, line: 662, type: !557)
!8730 = !DILocation(line: 662, column: 36, scope: !8673)
!8731 = !DILocalVariable(name: "flags", arg: 2, scope: !8673, file: !176, line: 662, type: !1010)
!8732 = !DILocation(line: 662, column: 48, scope: !8673)
!8733 = !DILocation(line: 664, column: 17, scope: !8673)
!8734 = !DILocation(line: 664, column: 23, scope: !8673)
!8735 = !DILocation(line: 664, column: 29, scope: !8673)
!8736 = !DILocation(line: 540, column: 27, scope: !8683, inlinedAt: !8685)
!8737 = !DILocation(line: 540, column: 6, scope: !8683, inlinedAt: !8685)
!8738 = !DILocation(line: 540, column: 6, scope: !8684, inlinedAt: !8685)
!8739 = !DILocation(line: 544, column: 7, scope: !8712, inlinedAt: !8685)
!8740 = !DILocation(line: 544, column: 12, scope: !8712, inlinedAt: !8685)
!8741 = !DILocation(line: 544, column: 7, scope: !8682, inlinedAt: !8685)
!8742 = !DILocation(line: 545, column: 25, scope: !8712, inlinedAt: !8685)
!8743 = !DILocation(line: 545, column: 31, scope: !8712, inlinedAt: !8685)
!8744 = !DILocation(line: 480, column: 33, scope: !8710, inlinedAt: !8711)
!8745 = !DILocation(line: 480, column: 23, scope: !8710, inlinedAt: !8711)
!8746 = !DILocation(line: 481, column: 29, scope: !8710, inlinedAt: !8711)
!8747 = !DILocation(line: 481, column: 35, scope: !8710, inlinedAt: !8711)
!8748 = !DILocation(line: 481, column: 42, scope: !8710, inlinedAt: !8711)
!8749 = !DILocation(line: 474, column: 23, scope: !8705, inlinedAt: !8709)
!8750 = !DILocation(line: 474, column: 29, scope: !8705, inlinedAt: !8709)
!8751 = !DILocation(line: 474, column: 36, scope: !8705, inlinedAt: !8709)
!8752 = !DILocation(line: 474, column: 9, scope: !8705, inlinedAt: !8709)
!8753 = !DILocation(line: 545, column: 4, scope: !8712, inlinedAt: !8685)
!8754 = !DILocation(line: 547, column: 25, scope: !8682, inlinedAt: !8685)
!8755 = !DILocation(line: 348, column: 7, scope: !8756, inlinedAt: !8703)
!8756 = distinct !DILexicalBlock(scope: !8699, file: !176, line: 348, column: 6)
!8757 = !DILocation(line: 348, column: 6, scope: !8699, inlinedAt: !8703)
!8758 = !DILocation(line: 349, column: 3, scope: !8756, inlinedAt: !8703)
!8759 = !DILocation(line: 351, column: 6, scope: !8760, inlinedAt: !8703)
!8760 = distinct !DILexicalBlock(scope: !8699, file: !176, line: 351, column: 6)
!8761 = !DILocation(line: 351, column: 11, scope: !8760, inlinedAt: !8703)
!8762 = !DILocation(line: 351, column: 6, scope: !8699, inlinedAt: !8703)
!8763 = !DILocation(line: 352, column: 3, scope: !8760, inlinedAt: !8703)
!8764 = !DILocation(line: 354, column: 32, scope: !8765, inlinedAt: !8703)
!8765 = distinct !DILexicalBlock(scope: !8699, file: !176, line: 354, column: 6)
!8766 = !DILocation(line: 354, column: 37, scope: !8765, inlinedAt: !8703)
!8767 = !DILocation(line: 354, column: 42, scope: !8765, inlinedAt: !8703)
!8768 = !DILocation(line: 354, column: 45, scope: !8765, inlinedAt: !8703)
!8769 = !DILocation(line: 354, column: 50, scope: !8765, inlinedAt: !8703)
!8770 = !DILocation(line: 354, column: 6, scope: !8699, inlinedAt: !8703)
!8771 = !DILocation(line: 355, column: 3, scope: !8765, inlinedAt: !8703)
!8772 = !DILocation(line: 356, column: 32, scope: !8773, inlinedAt: !8703)
!8773 = distinct !DILexicalBlock(scope: !8699, file: !176, line: 356, column: 6)
!8774 = !DILocation(line: 356, column: 37, scope: !8773, inlinedAt: !8703)
!8775 = !DILocation(line: 356, column: 43, scope: !8773, inlinedAt: !8703)
!8776 = !DILocation(line: 356, column: 46, scope: !8773, inlinedAt: !8703)
!8777 = !DILocation(line: 356, column: 51, scope: !8773, inlinedAt: !8703)
!8778 = !DILocation(line: 356, column: 6, scope: !8699, inlinedAt: !8703)
!8779 = !DILocation(line: 357, column: 3, scope: !8773, inlinedAt: !8703)
!8780 = !DILocation(line: 358, column: 6, scope: !8781, inlinedAt: !8703)
!8781 = distinct !DILexicalBlock(scope: !8699, file: !176, line: 358, column: 6)
!8782 = !DILocation(line: 358, column: 11, scope: !8781, inlinedAt: !8703)
!8783 = !DILocation(line: 358, column: 6, scope: !8699, inlinedAt: !8703)
!8784 = !DILocation(line: 358, column: 26, scope: !8781, inlinedAt: !8703)
!8785 = !DILocation(line: 359, column: 6, scope: !8786, inlinedAt: !8703)
!8786 = distinct !DILexicalBlock(scope: !8699, file: !176, line: 359, column: 6)
!8787 = !DILocation(line: 359, column: 11, scope: !8786, inlinedAt: !8703)
!8788 = !DILocation(line: 359, column: 6, scope: !8699, inlinedAt: !8703)
!8789 = !DILocation(line: 359, column: 26, scope: !8786, inlinedAt: !8703)
!8790 = !DILocation(line: 360, column: 6, scope: !8791, inlinedAt: !8703)
!8791 = distinct !DILexicalBlock(scope: !8699, file: !176, line: 360, column: 6)
!8792 = !DILocation(line: 360, column: 11, scope: !8791, inlinedAt: !8703)
!8793 = !DILocation(line: 360, column: 6, scope: !8699, inlinedAt: !8703)
!8794 = !DILocation(line: 360, column: 26, scope: !8791, inlinedAt: !8703)
!8795 = !DILocation(line: 361, column: 6, scope: !8796, inlinedAt: !8703)
!8796 = distinct !DILexicalBlock(scope: !8699, file: !176, line: 361, column: 6)
!8797 = !DILocation(line: 361, column: 11, scope: !8796, inlinedAt: !8703)
!8798 = !DILocation(line: 361, column: 6, scope: !8699, inlinedAt: !8703)
!8799 = !DILocation(line: 361, column: 26, scope: !8796, inlinedAt: !8703)
!8800 = !DILocation(line: 362, column: 6, scope: !8801, inlinedAt: !8703)
!8801 = distinct !DILexicalBlock(scope: !8699, file: !176, line: 362, column: 6)
!8802 = !DILocation(line: 362, column: 11, scope: !8801, inlinedAt: !8703)
!8803 = !DILocation(line: 362, column: 6, scope: !8699, inlinedAt: !8703)
!8804 = !DILocation(line: 362, column: 26, scope: !8801, inlinedAt: !8703)
!8805 = !DILocation(line: 363, column: 6, scope: !8806, inlinedAt: !8703)
!8806 = distinct !DILexicalBlock(scope: !8699, file: !176, line: 363, column: 6)
!8807 = !DILocation(line: 363, column: 11, scope: !8806, inlinedAt: !8703)
!8808 = !DILocation(line: 363, column: 6, scope: !8699, inlinedAt: !8703)
!8809 = !DILocation(line: 363, column: 26, scope: !8806, inlinedAt: !8703)
!8810 = !DILocation(line: 364, column: 6, scope: !8811, inlinedAt: !8703)
!8811 = distinct !DILexicalBlock(scope: !8699, file: !176, line: 364, column: 6)
!8812 = !DILocation(line: 364, column: 11, scope: !8811, inlinedAt: !8703)
!8813 = !DILocation(line: 364, column: 6, scope: !8699, inlinedAt: !8703)
!8814 = !DILocation(line: 364, column: 26, scope: !8811, inlinedAt: !8703)
!8815 = !DILocation(line: 365, column: 6, scope: !8816, inlinedAt: !8703)
!8816 = distinct !DILexicalBlock(scope: !8699, file: !176, line: 365, column: 6)
!8817 = !DILocation(line: 365, column: 11, scope: !8816, inlinedAt: !8703)
!8818 = !DILocation(line: 365, column: 6, scope: !8699, inlinedAt: !8703)
!8819 = !DILocation(line: 365, column: 26, scope: !8816, inlinedAt: !8703)
!8820 = !DILocation(line: 366, column: 6, scope: !8821, inlinedAt: !8703)
!8821 = distinct !DILexicalBlock(scope: !8699, file: !176, line: 366, column: 6)
!8822 = !DILocation(line: 366, column: 11, scope: !8821, inlinedAt: !8703)
!8823 = !DILocation(line: 366, column: 6, scope: !8699, inlinedAt: !8703)
!8824 = !DILocation(line: 366, column: 26, scope: !8821, inlinedAt: !8703)
!8825 = !DILocation(line: 367, column: 6, scope: !8826, inlinedAt: !8703)
!8826 = distinct !DILexicalBlock(scope: !8699, file: !176, line: 367, column: 6)
!8827 = !DILocation(line: 367, column: 11, scope: !8826, inlinedAt: !8703)
!8828 = !DILocation(line: 367, column: 6, scope: !8699, inlinedAt: !8703)
!8829 = !DILocation(line: 367, column: 26, scope: !8826, inlinedAt: !8703)
!8830 = !DILocation(line: 368, column: 6, scope: !8831, inlinedAt: !8703)
!8831 = distinct !DILexicalBlock(scope: !8699, file: !176, line: 368, column: 6)
!8832 = !DILocation(line: 368, column: 11, scope: !8831, inlinedAt: !8703)
!8833 = !DILocation(line: 368, column: 6, scope: !8699, inlinedAt: !8703)
!8834 = !DILocation(line: 368, column: 26, scope: !8831, inlinedAt: !8703)
!8835 = !DILocation(line: 369, column: 6, scope: !8836, inlinedAt: !8703)
!8836 = distinct !DILexicalBlock(scope: !8699, file: !176, line: 369, column: 6)
!8837 = !DILocation(line: 369, column: 11, scope: !8836, inlinedAt: !8703)
!8838 = !DILocation(line: 369, column: 6, scope: !8699, inlinedAt: !8703)
!8839 = !DILocation(line: 369, column: 26, scope: !8836, inlinedAt: !8703)
!8840 = !DILocation(line: 370, column: 6, scope: !8841, inlinedAt: !8703)
!8841 = distinct !DILexicalBlock(scope: !8699, file: !176, line: 370, column: 6)
!8842 = !DILocation(line: 370, column: 11, scope: !8841, inlinedAt: !8703)
!8843 = !DILocation(line: 370, column: 6, scope: !8699, inlinedAt: !8703)
!8844 = !DILocation(line: 370, column: 26, scope: !8841, inlinedAt: !8703)
!8845 = !DILocation(line: 371, column: 6, scope: !8846, inlinedAt: !8703)
!8846 = distinct !DILexicalBlock(scope: !8699, file: !176, line: 371, column: 6)
!8847 = !DILocation(line: 371, column: 11, scope: !8846, inlinedAt: !8703)
!8848 = !DILocation(line: 371, column: 6, scope: !8699, inlinedAt: !8703)
!8849 = !DILocation(line: 371, column: 26, scope: !8846, inlinedAt: !8703)
!8850 = !DILocation(line: 372, column: 6, scope: !8851, inlinedAt: !8703)
!8851 = distinct !DILexicalBlock(scope: !8699, file: !176, line: 372, column: 6)
!8852 = !DILocation(line: 372, column: 11, scope: !8851, inlinedAt: !8703)
!8853 = !DILocation(line: 372, column: 6, scope: !8699, inlinedAt: !8703)
!8854 = !DILocation(line: 372, column: 26, scope: !8851, inlinedAt: !8703)
!8855 = !DILocation(line: 373, column: 6, scope: !8856, inlinedAt: !8703)
!8856 = distinct !DILexicalBlock(scope: !8699, file: !176, line: 373, column: 6)
!8857 = !DILocation(line: 373, column: 11, scope: !8856, inlinedAt: !8703)
!8858 = !DILocation(line: 373, column: 6, scope: !8699, inlinedAt: !8703)
!8859 = !DILocation(line: 373, column: 26, scope: !8856, inlinedAt: !8703)
!8860 = !DILocation(line: 374, column: 6, scope: !8861, inlinedAt: !8703)
!8861 = distinct !DILexicalBlock(scope: !8699, file: !176, line: 374, column: 6)
!8862 = !DILocation(line: 374, column: 11, scope: !8861, inlinedAt: !8703)
!8863 = !DILocation(line: 374, column: 6, scope: !8699, inlinedAt: !8703)
!8864 = !DILocation(line: 374, column: 26, scope: !8861, inlinedAt: !8703)
!8865 = !DILocation(line: 375, column: 6, scope: !8866, inlinedAt: !8703)
!8866 = distinct !DILexicalBlock(scope: !8699, file: !176, line: 375, column: 6)
!8867 = !DILocation(line: 375, column: 11, scope: !8866, inlinedAt: !8703)
!8868 = !DILocation(line: 375, column: 6, scope: !8699, inlinedAt: !8703)
!8869 = !DILocation(line: 375, column: 27, scope: !8866, inlinedAt: !8703)
!8870 = !DILocation(line: 376, column: 6, scope: !8871, inlinedAt: !8703)
!8871 = distinct !DILexicalBlock(scope: !8699, file: !176, line: 376, column: 6)
!8872 = !DILocation(line: 376, column: 11, scope: !8871, inlinedAt: !8703)
!8873 = !DILocation(line: 376, column: 6, scope: !8699, inlinedAt: !8703)
!8874 = !DILocation(line: 376, column: 32, scope: !8871, inlinedAt: !8703)
!8875 = !DILocation(line: 377, column: 6, scope: !8876, inlinedAt: !8703)
!8876 = distinct !DILexicalBlock(scope: !8699, file: !176, line: 377, column: 6)
!8877 = !DILocation(line: 377, column: 11, scope: !8876, inlinedAt: !8703)
!8878 = !DILocation(line: 377, column: 6, scope: !8699, inlinedAt: !8703)
!8879 = !DILocation(line: 377, column: 32, scope: !8876, inlinedAt: !8703)
!8880 = !DILocation(line: 378, column: 6, scope: !8881, inlinedAt: !8703)
!8881 = distinct !DILexicalBlock(scope: !8699, file: !176, line: 378, column: 6)
!8882 = !DILocation(line: 378, column: 11, scope: !8881, inlinedAt: !8703)
!8883 = !DILocation(line: 378, column: 6, scope: !8699, inlinedAt: !8703)
!8884 = !DILocation(line: 378, column: 32, scope: !8881, inlinedAt: !8703)
!8885 = !DILocation(line: 379, column: 6, scope: !8886, inlinedAt: !8703)
!8886 = distinct !DILexicalBlock(scope: !8699, file: !176, line: 379, column: 6)
!8887 = !DILocation(line: 379, column: 11, scope: !8886, inlinedAt: !8703)
!8888 = !DILocation(line: 379, column: 6, scope: !8699, inlinedAt: !8703)
!8889 = !DILocation(line: 379, column: 33, scope: !8886, inlinedAt: !8703)
!8890 = !DILocation(line: 380, column: 6, scope: !8891, inlinedAt: !8703)
!8891 = distinct !DILexicalBlock(scope: !8699, file: !176, line: 380, column: 6)
!8892 = !DILocation(line: 380, column: 11, scope: !8891, inlinedAt: !8703)
!8893 = !DILocation(line: 380, column: 6, scope: !8699, inlinedAt: !8703)
!8894 = !DILocation(line: 380, column: 33, scope: !8891, inlinedAt: !8703)
!8895 = !DILocation(line: 381, column: 6, scope: !8896, inlinedAt: !8703)
!8896 = distinct !DILexicalBlock(scope: !8699, file: !176, line: 381, column: 6)
!8897 = !DILocation(line: 381, column: 11, scope: !8896, inlinedAt: !8703)
!8898 = !DILocation(line: 381, column: 6, scope: !8699, inlinedAt: !8703)
!8899 = !DILocation(line: 381, column: 33, scope: !8896, inlinedAt: !8703)
!8900 = !DILocation(line: 382, column: 2, scope: !8901, inlinedAt: !8703)
!8901 = distinct !DILexicalBlock(scope: !8902, file: !176, line: 382, column: 2)
!8902 = distinct !DILexicalBlock(scope: !8699, file: !176, line: 382, column: 2)
!8903 = !{i32 -2143009494, i32 -2143009465, i32 -2143009419, i32 -2143009361, i32 -2143009307, i32 -2143009253, i32 -2143009198, i32 -2143009167}
!8904 = !DILocation(line: 382, column: 2, scope: !8905, inlinedAt: !8703)
!8905 = distinct !DILexicalBlock(scope: !8906, file: !176, line: 382, column: 2)
!8906 = distinct !DILexicalBlock(scope: !8902, file: !176, line: 382, column: 2)
!8907 = !{i32 -2143008724, i32 -2143008717, i32 -2143008663, i32 -2143008632, i32 -2143008602}
!8908 = !DILocation(line: 382, column: 2, scope: !8906, inlinedAt: !8703)
!8909 = !DILocation(line: 386, column: 1, scope: !8699, inlinedAt: !8703)
!8910 = !DILocation(line: 547, column: 9, scope: !8682, inlinedAt: !8685)
!8911 = !DILocation(line: 549, column: 8, scope: !8912, inlinedAt: !8685)
!8912 = distinct !DILexicalBlock(scope: !8682, file: !176, line: 549, column: 7)
!8913 = !DILocation(line: 549, column: 7, scope: !8682, inlinedAt: !8685)
!8914 = !DILocation(line: 550, column: 4, scope: !8912, inlinedAt: !8685)
!8915 = !DILocation(line: 553, column: 33, scope: !8682, inlinedAt: !8685)
!8916 = !DILocation(line: 325, column: 6, scope: !8917, inlinedAt: !8697)
!8917 = distinct !DILexicalBlock(scope: !8693, file: !176, line: 325, column: 6)
!8918 = !DILocation(line: 325, column: 6, scope: !8693, inlinedAt: !8697)
!8919 = !DILocation(line: 326, column: 3, scope: !8917, inlinedAt: !8697)
!8920 = !DILocation(line: 332, column: 9, scope: !8693, inlinedAt: !8697)
!8921 = !DILocation(line: 332, column: 15, scope: !8693, inlinedAt: !8697)
!8922 = !DILocation(line: 332, column: 2, scope: !8693, inlinedAt: !8697)
!8923 = !DILocation(line: 336, column: 1, scope: !8693, inlinedAt: !8697)
!8924 = !DILocation(line: 553, column: 5, scope: !8682, inlinedAt: !8685)
!8925 = !DILocation(line: 553, column: 41, scope: !8682, inlinedAt: !8685)
!8926 = !DILocation(line: 554, column: 5, scope: !8682, inlinedAt: !8685)
!8927 = !DILocation(line: 554, column: 12, scope: !8682, inlinedAt: !8685)
!8928 = !DILocation(line: 448, column: 31, scope: !8677, inlinedAt: !8681)
!8929 = !DILocation(line: 448, column: 34, scope: !8677, inlinedAt: !8681)
!8930 = !DILocation(line: 448, column: 14, scope: !8677, inlinedAt: !8681)
!8931 = !DILocation(line: 450, column: 22, scope: !8677, inlinedAt: !8681)
!8932 = !DILocation(line: 450, column: 25, scope: !8677, inlinedAt: !8681)
!8933 = !DILocation(line: 450, column: 30, scope: !8677, inlinedAt: !8681)
!8934 = !DILocation(line: 450, column: 36, scope: !8677, inlinedAt: !8681)
!8935 = !DILocation(line: 450, column: 8, scope: !8677, inlinedAt: !8681)
!8936 = !DILocation(line: 450, column: 6, scope: !8677, inlinedAt: !8681)
!8937 = !DILocation(line: 451, column: 9, scope: !8677, inlinedAt: !8681)
!8938 = !DILocation(line: 552, column: 3, scope: !8682, inlinedAt: !8685)
!8939 = !DILocation(line: 557, column: 19, scope: !8684, inlinedAt: !8685)
!8940 = !DILocation(line: 557, column: 25, scope: !8684, inlinedAt: !8685)
!8941 = !DILocation(line: 557, column: 9, scope: !8684, inlinedAt: !8685)
!8942 = !DILocation(line: 557, column: 2, scope: !8684, inlinedAt: !8685)
!8943 = !DILocation(line: 558, column: 1, scope: !8684, inlinedAt: !8685)
!8944 = !DILocation(line: 664, column: 2, scope: !8673)
!8945 = distinct !DISubprogram(name: "module_put", scope: !8667, file: !8667, line: 756, type: !8946, scopeLine: 757, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !241)
!8946 = !DISubroutineType(types: !8947)
!8947 = !{null, !861}
!8948 = !DILocalVariable(name: "module", arg: 1, scope: !8945, file: !8667, line: 756, type: !861)
!8949 = !DILocation(line: 756, column: 46, scope: !8945)
!8950 = !DILocation(line: 758, column: 1, scope: !8945)
!8951 = distinct !DISubprogram(name: "get_order", scope: !8952, file: !8952, line: 29, type: !8953, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !241)
!8952 = !DIFile(filename: "./include/asm-generic/getorder.h", directory: "/home/lizy2001/genbc/linux")
!8953 = !DISubroutineType(types: !8954)
!8954 = !{!170, !299}
!8955 = !DILocalVariable(name: "x", arg: 1, scope: !8956, file: !8957, line: 366, type: !653)
!8956 = distinct !DISubprogram(name: "fls64", scope: !8957, file: !8957, line: 366, type: !8958, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !241)
!8957 = !DIFile(filename: "./arch/x86/include/asm/bitops.h", directory: "/home/lizy2001/genbc/linux")
!8958 = !DISubroutineType(types: !8959)
!8959 = !{!170, !653}
!8960 = !DILocation(line: 366, column: 40, scope: !8956, inlinedAt: !8961)
!8961 = distinct !DILocation(line: 46, column: 9, scope: !8951)
!8962 = !DILocalVariable(name: "bitpos", scope: !8956, file: !8957, line: 368, type: !170)
!8963 = !DILocation(line: 368, column: 6, scope: !8956, inlinedAt: !8961)
!8964 = !DILocalVariable(name: "size", arg: 1, scope: !8951, file: !8952, line: 29, type: !299)
!8965 = !DILocation(line: 29, column: 63, scope: !8951)
!8966 = !DILocation(line: 31, column: 27, scope: !8967)
!8967 = distinct !DILexicalBlock(scope: !8951, file: !8952, line: 31, column: 6)
!8968 = !DILocation(line: 31, column: 6, scope: !8967)
!8969 = !DILocation(line: 31, column: 6, scope: !8951)
!8970 = !DILocation(line: 32, column: 8, scope: !8971)
!8971 = distinct !DILexicalBlock(scope: !8972, file: !8952, line: 32, column: 7)
!8972 = distinct !DILexicalBlock(scope: !8967, file: !8952, line: 31, column: 34)
!8973 = !DILocation(line: 32, column: 7, scope: !8972)
!8974 = !DILocation(line: 33, column: 4, scope: !8971)
!8975 = !DILocation(line: 35, column: 7, scope: !8976)
!8976 = distinct !DILexicalBlock(scope: !8972, file: !8952, line: 35, column: 7)
!8977 = !DILocation(line: 35, column: 12, scope: !8976)
!8978 = !DILocation(line: 35, column: 7, scope: !8972)
!8979 = !DILocation(line: 36, column: 4, scope: !8976)
!8980 = !DILocation(line: 38, column: 10, scope: !8972)
!8981 = !DILocation(line: 38, column: 28, scope: !8972)
!8982 = !DILocation(line: 38, column: 41, scope: !8972)
!8983 = !DILocation(line: 38, column: 3, scope: !8972)
!8984 = !DILocation(line: 41, column: 6, scope: !8951)
!8985 = !DILocation(line: 42, column: 7, scope: !8951)
!8986 = !DILocation(line: 46, column: 15, scope: !8951)
!8987 = !DILocation(line: 374, column: 2, scope: !8956, inlinedAt: !8961)
!8988 = !DILocation(line: 376, column: 14, scope: !8956, inlinedAt: !8961)
!8989 = !{i32 382606}
!8990 = !DILocation(line: 377, column: 9, scope: !8956, inlinedAt: !8961)
!8991 = !DILocation(line: 377, column: 16, scope: !8956, inlinedAt: !8961)
!8992 = !DILocation(line: 46, column: 2, scope: !8951)
!8993 = !DILocation(line: 48, column: 1, scope: !8951)
!8994 = distinct !DISubprogram(name: "__ilog2_u64", scope: !8995, file: !8995, line: 30, type: !8996, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !241)
!8995 = !DIFile(filename: "./include/linux/log2.h", directory: "/home/lizy2001/genbc/linux")
!8996 = !DISubroutineType(types: !8997)
!8997 = !{!170, !652}
!8998 = !DILocation(line: 366, column: 40, scope: !8956, inlinedAt: !8999)
!8999 = distinct !DILocation(line: 32, column: 9, scope: !8994)
!9000 = !DILocation(line: 368, column: 6, scope: !8956, inlinedAt: !8999)
!9001 = !DILocalVariable(name: "n", arg: 1, scope: !8994, file: !8995, line: 30, type: !652)
!9002 = !DILocation(line: 30, column: 21, scope: !8994)
!9003 = !DILocation(line: 32, column: 15, scope: !8994)
!9004 = !DILocation(line: 374, column: 2, scope: !8956, inlinedAt: !8999)
!9005 = !DILocation(line: 376, column: 14, scope: !8956, inlinedAt: !8999)
!9006 = !DILocation(line: 377, column: 9, scope: !8956, inlinedAt: !8999)
!9007 = !DILocation(line: 377, column: 16, scope: !8956, inlinedAt: !8999)
!9008 = !DILocation(line: 32, column: 18, scope: !8994)
!9009 = !DILocation(line: 32, column: 2, scope: !8994)
!9010 = distinct !DISubprogram(name: "kasan_kmalloc", scope: !9011, file: !9011, line: 137, type: !9012, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !241)
!9011 = !DIFile(filename: "./include/linux/kasan.h", directory: "/home/lizy2001/genbc/linux")
!9012 = !DISubroutineType(types: !9013)
!9013 = !{!192, !1189, !3016, !557, !1010}
!9014 = !DILocalVariable(name: "s", arg: 1, scope: !9010, file: !9011, line: 137, type: !1189)
!9015 = !DILocation(line: 137, column: 54, scope: !9010)
!9016 = !DILocalVariable(name: "object", arg: 2, scope: !9010, file: !9011, line: 137, type: !3016)
!9017 = !DILocation(line: 137, column: 69, scope: !9010)
!9018 = !DILocalVariable(name: "size", arg: 3, scope: !9010, file: !9011, line: 138, type: !557)
!9019 = !DILocation(line: 138, column: 12, scope: !9010)
!9020 = !DILocalVariable(name: "flags", arg: 4, scope: !9010, file: !9011, line: 138, type: !1010)
!9021 = !DILocation(line: 138, column: 24, scope: !9010)
!9022 = !DILocation(line: 140, column: 17, scope: !9010)
!9023 = !DILocation(line: 140, column: 2, scope: !9010)
!9024 = distinct !DISubprogram(name: "fbcon_prepare_logo", scope: !3, file: !3, line: 581, type: !5025, scopeLine: 583, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !241)
!9025 = !DILocation(line: 445, column: 72, scope: !8677, inlinedAt: !9026)
!9026 = distinct !DILocation(line: 552, column: 10, scope: !8682, inlinedAt: !9027)
!9027 = distinct !DILocation(line: 610, column: 10, scope: !9028)
!9028 = distinct !DILexicalBlock(scope: !9029, file: !3, line: 609, column: 47)
!9029 = distinct !DILexicalBlock(scope: !9024, file: !3, line: 609, column: 6)
!9030 = !DILocation(line: 446, column: 9, scope: !8677, inlinedAt: !9026)
!9031 = !DILocation(line: 446, column: 23, scope: !8677, inlinedAt: !9026)
!9032 = !DILocation(line: 448, column: 8, scope: !8677, inlinedAt: !9026)
!9033 = !DILocation(line: 318, column: 67, scope: !8693, inlinedAt: !9034)
!9034 = distinct !DILocation(line: 553, column: 20, scope: !8682, inlinedAt: !9027)
!9035 = !DILocation(line: 346, column: 58, scope: !8699, inlinedAt: !9036)
!9036 = distinct !DILocation(line: 547, column: 11, scope: !8682, inlinedAt: !9027)
!9037 = !DILocation(line: 472, column: 28, scope: !8705, inlinedAt: !9038)
!9038 = distinct !DILocation(line: 481, column: 9, scope: !8710, inlinedAt: !9039)
!9039 = distinct !DILocation(line: 545, column: 11, scope: !8712, inlinedAt: !9027)
!9040 = !DILocation(line: 472, column: 40, scope: !8705, inlinedAt: !9038)
!9041 = !DILocation(line: 472, column: 60, scope: !8705, inlinedAt: !9038)
!9042 = !DILocation(line: 478, column: 51, scope: !8710, inlinedAt: !9039)
!9043 = !DILocation(line: 478, column: 63, scope: !8710, inlinedAt: !9039)
!9044 = !DILocation(line: 480, column: 15, scope: !8710, inlinedAt: !9039)
!9045 = !DILocation(line: 538, column: 45, scope: !8684, inlinedAt: !9027)
!9046 = !DILocation(line: 538, column: 57, scope: !8684, inlinedAt: !9027)
!9047 = !DILocation(line: 542, column: 16, scope: !8682, inlinedAt: !9027)
!9048 = !DILocalVariable(name: "vc", arg: 1, scope: !9024, file: !3, line: 581, type: !4826)
!9049 = !DILocation(line: 581, column: 48, scope: !9024)
!9050 = !DILocalVariable(name: "info", arg: 2, scope: !9024, file: !3, line: 581, type: !199)
!9051 = !DILocation(line: 581, column: 68, scope: !9024)
!9052 = !DILocalVariable(name: "cols", arg: 3, scope: !9024, file: !3, line: 582, type: !170)
!9053 = !DILocation(line: 582, column: 15, scope: !9024)
!9054 = !DILocalVariable(name: "rows", arg: 4, scope: !9024, file: !3, line: 582, type: !170)
!9055 = !DILocation(line: 582, column: 25, scope: !9024)
!9056 = !DILocalVariable(name: "new_cols", arg: 5, scope: !9024, file: !3, line: 582, type: !170)
!9057 = !DILocation(line: 582, column: 35, scope: !9024)
!9058 = !DILocalVariable(name: "new_rows", arg: 6, scope: !9024, file: !3, line: 582, type: !170)
!9059 = !DILocation(line: 582, column: 49, scope: !9024)
!9060 = !DILocalVariable(name: "ops", scope: !9024, file: !3, line: 585, type: !4818)
!9061 = !DILocation(line: 585, column: 20, scope: !9024)
!9062 = !DILocation(line: 585, column: 26, scope: !9024)
!9063 = !DILocation(line: 585, column: 32, scope: !9024)
!9064 = !DILocalVariable(name: "cnt", scope: !9024, file: !3, line: 586, type: !170)
!9065 = !DILocation(line: 586, column: 6, scope: !9024)
!9066 = !DILocalVariable(name: "erase", scope: !9024, file: !3, line: 586, type: !170)
!9067 = !DILocation(line: 586, column: 11, scope: !9024)
!9068 = !DILocation(line: 586, column: 19, scope: !9024)
!9069 = !DILocation(line: 586, column: 23, scope: !9024)
!9070 = !DILocalVariable(name: "step", scope: !9024, file: !3, line: 586, type: !170)
!9071 = !DILocation(line: 586, column: 44, scope: !9024)
!9072 = !DILocalVariable(name: "save", scope: !9024, file: !3, line: 587, type: !4957)
!9073 = !DILocation(line: 587, column: 18, scope: !9024)
!9074 = !DILocalVariable(name: "r", scope: !9024, file: !3, line: 587, type: !4957)
!9075 = !DILocation(line: 587, column: 32, scope: !9024)
!9076 = !DILocalVariable(name: "q", scope: !9024, file: !3, line: 587, type: !4957)
!9077 = !DILocation(line: 587, column: 36, scope: !9024)
!9078 = !DILocalVariable(name: "logo_height", scope: !9024, file: !3, line: 588, type: !170)
!9079 = !DILocation(line: 588, column: 6, scope: !9024)
!9080 = !DILocation(line: 590, column: 6, scope: !9081)
!9081 = distinct !DILexicalBlock(scope: !9024, file: !3, line: 590, column: 6)
!9082 = !DILocation(line: 590, column: 12, scope: !9081)
!9083 = !DILocation(line: 590, column: 19, scope: !9081)
!9084 = !DILocation(line: 590, column: 6, scope: !9024)
!9085 = !DILocation(line: 591, column: 14, scope: !9086)
!9086 = distinct !DILexicalBlock(scope: !9081, file: !3, line: 590, column: 26)
!9087 = !DILocation(line: 592, column: 3, scope: !9086)
!9088 = !DILocation(line: 599, column: 26, scope: !9089)
!9089 = distinct !DILexicalBlock(scope: !9024, file: !3, line: 599, column: 6)
!9090 = !DILocation(line: 599, column: 32, scope: !9089)
!9091 = !DILocation(line: 599, column: 38, scope: !9089)
!9092 = !DILocation(line: 599, column: 44, scope: !9089)
!9093 = !DILocation(line: 599, column: 6, scope: !9089)
!9094 = !DILocation(line: 599, column: 49, scope: !9089)
!9095 = !DILocation(line: 599, column: 6, scope: !9024)
!9096 = !DILocation(line: 600, column: 9, scope: !9089)
!9097 = !DILocation(line: 600, column: 3, scope: !9089)
!9098 = !DILocation(line: 601, column: 32, scope: !9024)
!9099 = !DILocation(line: 601, column: 38, scope: !9024)
!9100 = !DILocation(line: 601, column: 43, scope: !9024)
!9101 = !DILocation(line: 601, column: 16, scope: !9024)
!9102 = !DILocation(line: 601, column: 14, scope: !9024)
!9103 = !DILocation(line: 602, column: 15, scope: !9024)
!9104 = !DILocation(line: 602, column: 13, scope: !9024)
!9105 = !DILocation(line: 603, column: 26, scope: !9024)
!9106 = !DILocation(line: 603, column: 30, scope: !9024)
!9107 = !DILocation(line: 604, column: 5, scope: !9024)
!9108 = !DILocation(line: 604, column: 9, scope: !9024)
!9109 = !DILocation(line: 604, column: 23, scope: !9024)
!9110 = !DILocation(line: 604, column: 21, scope: !9024)
!9111 = !DILocation(line: 603, column: 40, scope: !9024)
!9112 = !DILocation(line: 603, column: 6, scope: !9024)
!9113 = !DILocation(line: 603, column: 4, scope: !9024)
!9114 = !DILocation(line: 605, column: 9, scope: !9024)
!9115 = !DILocation(line: 605, column: 22, scope: !9024)
!9116 = !DILocation(line: 605, column: 20, scope: !9024)
!9117 = !DILocation(line: 605, column: 7, scope: !9024)
!9118 = !DILocation(line: 606, column: 11, scope: !9119)
!9119 = distinct !DILexicalBlock(scope: !9024, file: !3, line: 606, column: 2)
!9120 = !DILocation(line: 606, column: 15, scope: !9119)
!9121 = !DILocation(line: 606, column: 28, scope: !9119)
!9122 = !DILocation(line: 606, column: 26, scope: !9119)
!9123 = !DILocation(line: 606, column: 13, scope: !9119)
!9124 = !DILocation(line: 606, column: 9, scope: !9119)
!9125 = !DILocation(line: 606, column: 7, scope: !9119)
!9126 = !DILocation(line: 606, column: 34, scope: !9127)
!9127 = distinct !DILexicalBlock(scope: !9119, file: !3, line: 606, column: 2)
!9128 = !DILocation(line: 606, column: 38, scope: !9127)
!9129 = !DILocation(line: 606, column: 36, scope: !9127)
!9130 = !DILocation(line: 606, column: 2, scope: !9119)
!9131 = !DILocation(line: 607, column: 7, scope: !9132)
!9132 = distinct !DILexicalBlock(scope: !9127, file: !3, line: 607, column: 7)
!9133 = !DILocation(line: 607, column: 23, scope: !9132)
!9134 = !DILocation(line: 607, column: 27, scope: !9132)
!9135 = !DILocation(line: 607, column: 20, scope: !9132)
!9136 = !DILocation(line: 607, column: 7, scope: !9127)
!9137 = !DILocation(line: 608, column: 4, scope: !9132)
!9138 = !DILocation(line: 606, column: 42, scope: !9127)
!9139 = !DILocation(line: 606, column: 2, scope: !9127)
!9140 = distinct !{!9140, !9130, !9141}
!9141 = !DILocation(line: 608, column: 4, scope: !9119)
!9142 = !DILocation(line: 609, column: 6, scope: !9029)
!9143 = !DILocation(line: 609, column: 11, scope: !9029)
!9144 = !DILocation(line: 609, column: 8, scope: !9029)
!9145 = !DILocation(line: 609, column: 13, scope: !9029)
!9146 = !DILocation(line: 609, column: 16, scope: !9029)
!9147 = !DILocation(line: 609, column: 28, scope: !9029)
!9148 = !DILocation(line: 609, column: 35, scope: !9029)
!9149 = !DILocation(line: 609, column: 33, scope: !9029)
!9150 = !DILocation(line: 609, column: 25, scope: !9029)
!9151 = !DILocation(line: 609, column: 6, scope: !9024)
!9152 = !DILocation(line: 610, column: 30, scope: !9028)
!9153 = !DILocation(line: 610, column: 42, scope: !9028)
!9154 = !DILocation(line: 610, column: 18, scope: !9028)
!9155 = !DILocation(line: 540, column: 27, scope: !8683, inlinedAt: !9027)
!9156 = !DILocation(line: 540, column: 6, scope: !8683, inlinedAt: !9027)
!9157 = !DILocation(line: 540, column: 6, scope: !8684, inlinedAt: !9027)
!9158 = !DILocation(line: 544, column: 7, scope: !8712, inlinedAt: !9027)
!9159 = !DILocation(line: 544, column: 12, scope: !8712, inlinedAt: !9027)
!9160 = !DILocation(line: 544, column: 7, scope: !8682, inlinedAt: !9027)
!9161 = !DILocation(line: 545, column: 25, scope: !8712, inlinedAt: !9027)
!9162 = !DILocation(line: 545, column: 31, scope: !8712, inlinedAt: !9027)
!9163 = !DILocation(line: 480, column: 33, scope: !8710, inlinedAt: !9039)
!9164 = !DILocation(line: 480, column: 23, scope: !8710, inlinedAt: !9039)
!9165 = !DILocation(line: 481, column: 29, scope: !8710, inlinedAt: !9039)
!9166 = !DILocation(line: 481, column: 35, scope: !8710, inlinedAt: !9039)
!9167 = !DILocation(line: 481, column: 42, scope: !8710, inlinedAt: !9039)
!9168 = !DILocation(line: 474, column: 23, scope: !8705, inlinedAt: !9038)
!9169 = !DILocation(line: 474, column: 29, scope: !8705, inlinedAt: !9038)
!9170 = !DILocation(line: 474, column: 36, scope: !8705, inlinedAt: !9038)
!9171 = !DILocation(line: 474, column: 9, scope: !8705, inlinedAt: !9038)
!9172 = !DILocation(line: 545, column: 4, scope: !8712, inlinedAt: !9027)
!9173 = !DILocation(line: 547, column: 25, scope: !8682, inlinedAt: !9027)
!9174 = !DILocation(line: 348, column: 7, scope: !8756, inlinedAt: !9036)
!9175 = !DILocation(line: 348, column: 6, scope: !8699, inlinedAt: !9036)
!9176 = !DILocation(line: 349, column: 3, scope: !8756, inlinedAt: !9036)
!9177 = !DILocation(line: 351, column: 6, scope: !8760, inlinedAt: !9036)
!9178 = !DILocation(line: 351, column: 11, scope: !8760, inlinedAt: !9036)
!9179 = !DILocation(line: 351, column: 6, scope: !8699, inlinedAt: !9036)
!9180 = !DILocation(line: 352, column: 3, scope: !8760, inlinedAt: !9036)
!9181 = !DILocation(line: 354, column: 32, scope: !8765, inlinedAt: !9036)
!9182 = !DILocation(line: 354, column: 37, scope: !8765, inlinedAt: !9036)
!9183 = !DILocation(line: 354, column: 42, scope: !8765, inlinedAt: !9036)
!9184 = !DILocation(line: 354, column: 45, scope: !8765, inlinedAt: !9036)
!9185 = !DILocation(line: 354, column: 50, scope: !8765, inlinedAt: !9036)
!9186 = !DILocation(line: 354, column: 6, scope: !8699, inlinedAt: !9036)
!9187 = !DILocation(line: 355, column: 3, scope: !8765, inlinedAt: !9036)
!9188 = !DILocation(line: 356, column: 32, scope: !8773, inlinedAt: !9036)
!9189 = !DILocation(line: 356, column: 37, scope: !8773, inlinedAt: !9036)
!9190 = !DILocation(line: 356, column: 43, scope: !8773, inlinedAt: !9036)
!9191 = !DILocation(line: 356, column: 46, scope: !8773, inlinedAt: !9036)
!9192 = !DILocation(line: 356, column: 51, scope: !8773, inlinedAt: !9036)
!9193 = !DILocation(line: 356, column: 6, scope: !8699, inlinedAt: !9036)
!9194 = !DILocation(line: 357, column: 3, scope: !8773, inlinedAt: !9036)
!9195 = !DILocation(line: 358, column: 6, scope: !8781, inlinedAt: !9036)
!9196 = !DILocation(line: 358, column: 11, scope: !8781, inlinedAt: !9036)
!9197 = !DILocation(line: 358, column: 6, scope: !8699, inlinedAt: !9036)
!9198 = !DILocation(line: 358, column: 26, scope: !8781, inlinedAt: !9036)
!9199 = !DILocation(line: 359, column: 6, scope: !8786, inlinedAt: !9036)
!9200 = !DILocation(line: 359, column: 11, scope: !8786, inlinedAt: !9036)
!9201 = !DILocation(line: 359, column: 6, scope: !8699, inlinedAt: !9036)
!9202 = !DILocation(line: 359, column: 26, scope: !8786, inlinedAt: !9036)
!9203 = !DILocation(line: 360, column: 6, scope: !8791, inlinedAt: !9036)
!9204 = !DILocation(line: 360, column: 11, scope: !8791, inlinedAt: !9036)
!9205 = !DILocation(line: 360, column: 6, scope: !8699, inlinedAt: !9036)
!9206 = !DILocation(line: 360, column: 26, scope: !8791, inlinedAt: !9036)
!9207 = !DILocation(line: 361, column: 6, scope: !8796, inlinedAt: !9036)
!9208 = !DILocation(line: 361, column: 11, scope: !8796, inlinedAt: !9036)
!9209 = !DILocation(line: 361, column: 6, scope: !8699, inlinedAt: !9036)
!9210 = !DILocation(line: 361, column: 26, scope: !8796, inlinedAt: !9036)
!9211 = !DILocation(line: 362, column: 6, scope: !8801, inlinedAt: !9036)
!9212 = !DILocation(line: 362, column: 11, scope: !8801, inlinedAt: !9036)
!9213 = !DILocation(line: 362, column: 6, scope: !8699, inlinedAt: !9036)
!9214 = !DILocation(line: 362, column: 26, scope: !8801, inlinedAt: !9036)
!9215 = !DILocation(line: 363, column: 6, scope: !8806, inlinedAt: !9036)
!9216 = !DILocation(line: 363, column: 11, scope: !8806, inlinedAt: !9036)
!9217 = !DILocation(line: 363, column: 6, scope: !8699, inlinedAt: !9036)
!9218 = !DILocation(line: 363, column: 26, scope: !8806, inlinedAt: !9036)
!9219 = !DILocation(line: 364, column: 6, scope: !8811, inlinedAt: !9036)
!9220 = !DILocation(line: 364, column: 11, scope: !8811, inlinedAt: !9036)
!9221 = !DILocation(line: 364, column: 6, scope: !8699, inlinedAt: !9036)
!9222 = !DILocation(line: 364, column: 26, scope: !8811, inlinedAt: !9036)
!9223 = !DILocation(line: 365, column: 6, scope: !8816, inlinedAt: !9036)
!9224 = !DILocation(line: 365, column: 11, scope: !8816, inlinedAt: !9036)
!9225 = !DILocation(line: 365, column: 6, scope: !8699, inlinedAt: !9036)
!9226 = !DILocation(line: 365, column: 26, scope: !8816, inlinedAt: !9036)
!9227 = !DILocation(line: 366, column: 6, scope: !8821, inlinedAt: !9036)
!9228 = !DILocation(line: 366, column: 11, scope: !8821, inlinedAt: !9036)
!9229 = !DILocation(line: 366, column: 6, scope: !8699, inlinedAt: !9036)
!9230 = !DILocation(line: 366, column: 26, scope: !8821, inlinedAt: !9036)
!9231 = !DILocation(line: 367, column: 6, scope: !8826, inlinedAt: !9036)
!9232 = !DILocation(line: 367, column: 11, scope: !8826, inlinedAt: !9036)
!9233 = !DILocation(line: 367, column: 6, scope: !8699, inlinedAt: !9036)
!9234 = !DILocation(line: 367, column: 26, scope: !8826, inlinedAt: !9036)
!9235 = !DILocation(line: 368, column: 6, scope: !8831, inlinedAt: !9036)
!9236 = !DILocation(line: 368, column: 11, scope: !8831, inlinedAt: !9036)
!9237 = !DILocation(line: 368, column: 6, scope: !8699, inlinedAt: !9036)
!9238 = !DILocation(line: 368, column: 26, scope: !8831, inlinedAt: !9036)
!9239 = !DILocation(line: 369, column: 6, scope: !8836, inlinedAt: !9036)
!9240 = !DILocation(line: 369, column: 11, scope: !8836, inlinedAt: !9036)
!9241 = !DILocation(line: 369, column: 6, scope: !8699, inlinedAt: !9036)
!9242 = !DILocation(line: 369, column: 26, scope: !8836, inlinedAt: !9036)
!9243 = !DILocation(line: 370, column: 6, scope: !8841, inlinedAt: !9036)
!9244 = !DILocation(line: 370, column: 11, scope: !8841, inlinedAt: !9036)
!9245 = !DILocation(line: 370, column: 6, scope: !8699, inlinedAt: !9036)
!9246 = !DILocation(line: 370, column: 26, scope: !8841, inlinedAt: !9036)
!9247 = !DILocation(line: 371, column: 6, scope: !8846, inlinedAt: !9036)
!9248 = !DILocation(line: 371, column: 11, scope: !8846, inlinedAt: !9036)
!9249 = !DILocation(line: 371, column: 6, scope: !8699, inlinedAt: !9036)
!9250 = !DILocation(line: 371, column: 26, scope: !8846, inlinedAt: !9036)
!9251 = !DILocation(line: 372, column: 6, scope: !8851, inlinedAt: !9036)
!9252 = !DILocation(line: 372, column: 11, scope: !8851, inlinedAt: !9036)
!9253 = !DILocation(line: 372, column: 6, scope: !8699, inlinedAt: !9036)
!9254 = !DILocation(line: 372, column: 26, scope: !8851, inlinedAt: !9036)
!9255 = !DILocation(line: 373, column: 6, scope: !8856, inlinedAt: !9036)
!9256 = !DILocation(line: 373, column: 11, scope: !8856, inlinedAt: !9036)
!9257 = !DILocation(line: 373, column: 6, scope: !8699, inlinedAt: !9036)
!9258 = !DILocation(line: 373, column: 26, scope: !8856, inlinedAt: !9036)
!9259 = !DILocation(line: 374, column: 6, scope: !8861, inlinedAt: !9036)
!9260 = !DILocation(line: 374, column: 11, scope: !8861, inlinedAt: !9036)
!9261 = !DILocation(line: 374, column: 6, scope: !8699, inlinedAt: !9036)
!9262 = !DILocation(line: 374, column: 26, scope: !8861, inlinedAt: !9036)
!9263 = !DILocation(line: 375, column: 6, scope: !8866, inlinedAt: !9036)
!9264 = !DILocation(line: 375, column: 11, scope: !8866, inlinedAt: !9036)
!9265 = !DILocation(line: 375, column: 6, scope: !8699, inlinedAt: !9036)
!9266 = !DILocation(line: 375, column: 27, scope: !8866, inlinedAt: !9036)
!9267 = !DILocation(line: 376, column: 6, scope: !8871, inlinedAt: !9036)
!9268 = !DILocation(line: 376, column: 11, scope: !8871, inlinedAt: !9036)
!9269 = !DILocation(line: 376, column: 6, scope: !8699, inlinedAt: !9036)
!9270 = !DILocation(line: 376, column: 32, scope: !8871, inlinedAt: !9036)
!9271 = !DILocation(line: 377, column: 6, scope: !8876, inlinedAt: !9036)
!9272 = !DILocation(line: 377, column: 11, scope: !8876, inlinedAt: !9036)
!9273 = !DILocation(line: 377, column: 6, scope: !8699, inlinedAt: !9036)
!9274 = !DILocation(line: 377, column: 32, scope: !8876, inlinedAt: !9036)
!9275 = !DILocation(line: 378, column: 6, scope: !8881, inlinedAt: !9036)
!9276 = !DILocation(line: 378, column: 11, scope: !8881, inlinedAt: !9036)
!9277 = !DILocation(line: 378, column: 6, scope: !8699, inlinedAt: !9036)
!9278 = !DILocation(line: 378, column: 32, scope: !8881, inlinedAt: !9036)
!9279 = !DILocation(line: 379, column: 6, scope: !8886, inlinedAt: !9036)
!9280 = !DILocation(line: 379, column: 11, scope: !8886, inlinedAt: !9036)
!9281 = !DILocation(line: 379, column: 6, scope: !8699, inlinedAt: !9036)
!9282 = !DILocation(line: 379, column: 33, scope: !8886, inlinedAt: !9036)
!9283 = !DILocation(line: 380, column: 6, scope: !8891, inlinedAt: !9036)
!9284 = !DILocation(line: 380, column: 11, scope: !8891, inlinedAt: !9036)
!9285 = !DILocation(line: 380, column: 6, scope: !8699, inlinedAt: !9036)
!9286 = !DILocation(line: 380, column: 33, scope: !8891, inlinedAt: !9036)
!9287 = !DILocation(line: 381, column: 6, scope: !8896, inlinedAt: !9036)
!9288 = !DILocation(line: 381, column: 11, scope: !8896, inlinedAt: !9036)
!9289 = !DILocation(line: 381, column: 6, scope: !8699, inlinedAt: !9036)
!9290 = !DILocation(line: 381, column: 33, scope: !8896, inlinedAt: !9036)
!9291 = !DILocation(line: 382, column: 2, scope: !8901, inlinedAt: !9036)
!9292 = !DILocation(line: 382, column: 2, scope: !8905, inlinedAt: !9036)
!9293 = !DILocation(line: 382, column: 2, scope: !8906, inlinedAt: !9036)
!9294 = !DILocation(line: 386, column: 1, scope: !8699, inlinedAt: !9036)
!9295 = !DILocation(line: 547, column: 9, scope: !8682, inlinedAt: !9027)
!9296 = !DILocation(line: 549, column: 8, scope: !8912, inlinedAt: !9027)
!9297 = !DILocation(line: 549, column: 7, scope: !8682, inlinedAt: !9027)
!9298 = !DILocation(line: 550, column: 4, scope: !8912, inlinedAt: !9027)
!9299 = !DILocation(line: 553, column: 33, scope: !8682, inlinedAt: !9027)
!9300 = !DILocation(line: 325, column: 6, scope: !8917, inlinedAt: !9034)
!9301 = !DILocation(line: 325, column: 6, scope: !8693, inlinedAt: !9034)
!9302 = !DILocation(line: 326, column: 3, scope: !8917, inlinedAt: !9034)
!9303 = !DILocation(line: 332, column: 9, scope: !8693, inlinedAt: !9034)
!9304 = !DILocation(line: 332, column: 15, scope: !8693, inlinedAt: !9034)
!9305 = !DILocation(line: 332, column: 2, scope: !8693, inlinedAt: !9034)
!9306 = !DILocation(line: 336, column: 1, scope: !8693, inlinedAt: !9034)
!9307 = !DILocation(line: 553, column: 5, scope: !8682, inlinedAt: !9027)
!9308 = !DILocation(line: 553, column: 41, scope: !8682, inlinedAt: !9027)
!9309 = !DILocation(line: 554, column: 5, scope: !8682, inlinedAt: !9027)
!9310 = !DILocation(line: 554, column: 12, scope: !8682, inlinedAt: !9027)
!9311 = !DILocation(line: 448, column: 31, scope: !8677, inlinedAt: !9026)
!9312 = !DILocation(line: 448, column: 34, scope: !8677, inlinedAt: !9026)
!9313 = !DILocation(line: 448, column: 14, scope: !8677, inlinedAt: !9026)
!9314 = !DILocation(line: 450, column: 22, scope: !8677, inlinedAt: !9026)
!9315 = !DILocation(line: 450, column: 25, scope: !8677, inlinedAt: !9026)
!9316 = !DILocation(line: 450, column: 30, scope: !8677, inlinedAt: !9026)
!9317 = !DILocation(line: 450, column: 36, scope: !8677, inlinedAt: !9026)
!9318 = !DILocation(line: 450, column: 8, scope: !8677, inlinedAt: !9026)
!9319 = !DILocation(line: 450, column: 6, scope: !8677, inlinedAt: !9026)
!9320 = !DILocation(line: 451, column: 9, scope: !8677, inlinedAt: !9026)
!9321 = !DILocation(line: 552, column: 3, scope: !8682, inlinedAt: !9027)
!9322 = !DILocation(line: 557, column: 19, scope: !8684, inlinedAt: !9027)
!9323 = !DILocation(line: 557, column: 25, scope: !8684, inlinedAt: !9027)
!9324 = !DILocation(line: 557, column: 9, scope: !8684, inlinedAt: !9027)
!9325 = !DILocation(line: 557, column: 2, scope: !8684, inlinedAt: !9027)
!9326 = !DILocation(line: 558, column: 1, scope: !8684, inlinedAt: !9027)
!9327 = !DILocation(line: 610, column: 10, scope: !9028)
!9328 = !DILocation(line: 610, column: 8, scope: !9028)
!9329 = !DILocation(line: 612, column: 7, scope: !9330)
!9330 = distinct !DILexicalBlock(scope: !9028, file: !3, line: 612, column: 7)
!9331 = !DILocation(line: 612, column: 7, scope: !9028)
!9332 = !DILocalVariable(name: "i", scope: !9333, file: !3, line: 613, type: !170)
!9333 = distinct !DILexicalBlock(scope: !9330, file: !3, line: 612, column: 13)
!9334 = !DILocation(line: 613, column: 8, scope: !9333)
!9335 = !DILocation(line: 613, column: 12, scope: !9333)
!9336 = !DILocation(line: 613, column: 19, scope: !9333)
!9337 = !DILocation(line: 613, column: 17, scope: !9333)
!9338 = !DILocation(line: 613, column: 30, scope: !9333)
!9339 = !DILocation(line: 613, column: 37, scope: !9333)
!9340 = !DILocation(line: 614, column: 16, scope: !9333)
!9341 = !DILocation(line: 614, column: 22, scope: !9333)
!9342 = !DILocation(line: 614, column: 41, scope: !9333)
!9343 = !DILocation(line: 614, column: 53, scope: !9333)
!9344 = !DILocation(line: 614, column: 29, scope: !9333)
!9345 = !DILocation(line: 614, column: 4, scope: !9333)
!9346 = !DILocation(line: 615, column: 8, scope: !9333)
!9347 = !DILocation(line: 615, column: 12, scope: !9333)
!9348 = !DILocation(line: 615, column: 10, scope: !9333)
!9349 = !DILocation(line: 615, column: 6, scope: !9333)
!9350 = !DILocation(line: 616, column: 13, scope: !9351)
!9351 = distinct !DILexicalBlock(scope: !9333, file: !3, line: 616, column: 4)
!9352 = !DILocation(line: 616, column: 9, scope: !9351)
!9353 = !DILocation(line: 616, column: 18, scope: !9354)
!9354 = distinct !DILexicalBlock(scope: !9351, file: !3, line: 616, column: 4)
!9355 = !DILocation(line: 616, column: 24, scope: !9354)
!9356 = !DILocation(line: 616, column: 22, scope: !9354)
!9357 = !DILocation(line: 616, column: 4, scope: !9351)
!9358 = !DILocation(line: 617, column: 17, scope: !9354)
!9359 = !DILocation(line: 617, column: 24, scope: !9354)
!9360 = !DILocation(line: 617, column: 30, scope: !9354)
!9361 = !DILocation(line: 617, column: 28, scope: !9354)
!9362 = !DILocation(line: 617, column: 22, scope: !9354)
!9363 = !DILocation(line: 617, column: 40, scope: !9354)
!9364 = !DILocation(line: 617, column: 47, scope: !9354)
!9365 = !DILocation(line: 617, column: 45, scope: !9354)
!9366 = !DILocation(line: 617, column: 5, scope: !9354)
!9367 = !DILocation(line: 616, column: 39, scope: !9354)
!9368 = !DILocation(line: 616, column: 48, scope: !9354)
!9369 = !DILocation(line: 616, column: 45, scope: !9354)
!9370 = !DILocation(line: 616, column: 4, scope: !9354)
!9371 = distinct !{!9371, !9357, !9372}
!9372 = !DILocation(line: 617, column: 48, scope: !9351)
!9373 = !DILocation(line: 618, column: 8, scope: !9333)
!9374 = !DILocation(line: 618, column: 6, scope: !9333)
!9375 = !DILocation(line: 619, column: 3, scope: !9333)
!9376 = !DILocation(line: 620, column: 2, scope: !9028)
!9377 = !DILocation(line: 621, column: 6, scope: !9378)
!9378 = distinct !DILexicalBlock(scope: !9024, file: !3, line: 621, column: 6)
!9379 = !DILocation(line: 621, column: 11, scope: !9378)
!9380 = !DILocation(line: 621, column: 8, scope: !9378)
!9381 = !DILocation(line: 621, column: 6, scope: !9024)
!9382 = !DILocation(line: 623, column: 7, scope: !9383)
!9383 = distinct !DILexicalBlock(scope: !9378, file: !3, line: 621, column: 14)
!9384 = !DILocation(line: 623, column: 11, scope: !9383)
!9385 = !DILocation(line: 623, column: 9, scope: !9383)
!9386 = !DILocation(line: 623, column: 18, scope: !9383)
!9387 = !DILocation(line: 623, column: 16, scope: !9383)
!9388 = !DILocation(line: 623, column: 5, scope: !9383)
!9389 = !DILocation(line: 624, column: 14, scope: !9390)
!9390 = distinct !DILexicalBlock(scope: !9383, file: !3, line: 624, column: 3)
!9391 = !DILocation(line: 624, column: 21, scope: !9390)
!9392 = !DILocation(line: 624, column: 19, scope: !9390)
!9393 = !DILocation(line: 624, column: 12, scope: !9390)
!9394 = !DILocation(line: 624, column: 8, scope: !9390)
!9395 = !DILocation(line: 624, column: 33, scope: !9396)
!9396 = distinct !DILexicalBlock(scope: !9390, file: !3, line: 624, column: 3)
!9397 = !DILocation(line: 624, column: 37, scope: !9396)
!9398 = !DILocation(line: 624, column: 3, scope: !9390)
!9399 = !DILocation(line: 625, column: 16, scope: !9400)
!9400 = distinct !DILexicalBlock(scope: !9396, file: !3, line: 624, column: 49)
!9401 = !DILocation(line: 625, column: 20, scope: !9400)
!9402 = !DILocation(line: 625, column: 18, scope: !9400)
!9403 = !DILocation(line: 625, column: 26, scope: !9400)
!9404 = !DILocation(line: 625, column: 29, scope: !9400)
!9405 = !DILocation(line: 625, column: 33, scope: !9400)
!9406 = !DILocation(line: 625, column: 4, scope: !9400)
!9407 = !DILocation(line: 626, column: 9, scope: !9400)
!9408 = !DILocation(line: 626, column: 6, scope: !9400)
!9409 = !DILocation(line: 627, column: 3, scope: !9400)
!9410 = !DILocation(line: 624, column: 45, scope: !9396)
!9411 = !DILocation(line: 624, column: 3, scope: !9396)
!9412 = distinct !{!9412, !9398, !9413}
!9413 = !DILocation(line: 627, column: 3, scope: !9390)
!9414 = !DILocation(line: 628, column: 8, scope: !9415)
!9415 = distinct !DILexicalBlock(scope: !9383, file: !3, line: 628, column: 7)
!9416 = !DILocation(line: 628, column: 7, scope: !9383)
!9417 = !DILocalVariable(name: "lines", scope: !9418, file: !3, line: 629, type: !170)
!9418 = distinct !DILexicalBlock(scope: !9415, file: !3, line: 628, column: 14)
!9419 = !DILocation(line: 629, column: 8, scope: !9418)
!9420 = !DILocation(line: 630, column: 8, scope: !9421)
!9421 = distinct !DILexicalBlock(scope: !9418, file: !3, line: 630, column: 8)
!9422 = !DILocation(line: 630, column: 12, scope: !9421)
!9423 = !DILocation(line: 630, column: 18, scope: !9421)
!9424 = !DILocation(line: 630, column: 22, scope: !9421)
!9425 = !DILocation(line: 630, column: 20, scope: !9421)
!9426 = !DILocation(line: 630, column: 36, scope: !9421)
!9427 = !DILocation(line: 630, column: 33, scope: !9421)
!9428 = !DILocation(line: 630, column: 8, scope: !9418)
!9429 = !DILocation(line: 631, column: 13, scope: !9421)
!9430 = !DILocation(line: 631, column: 20, scope: !9421)
!9431 = !DILocation(line: 631, column: 24, scope: !9421)
!9432 = !DILocation(line: 631, column: 30, scope: !9421)
!9433 = !DILocation(line: 631, column: 18, scope: !9421)
!9434 = !DILocation(line: 631, column: 32, scope: !9421)
!9435 = !DILocation(line: 631, column: 11, scope: !9421)
!9436 = !DILocation(line: 631, column: 5, scope: !9421)
!9437 = !DILocation(line: 633, column: 13, scope: !9421)
!9438 = !DILocation(line: 633, column: 11, scope: !9421)
!9439 = !DILocation(line: 634, column: 19, scope: !9418)
!9440 = !DILocation(line: 634, column: 4, scope: !9418)
!9441 = !DILocation(line: 634, column: 8, scope: !9418)
!9442 = !DILocation(line: 634, column: 14, scope: !9418)
!9443 = !DILocation(line: 634, column: 16, scope: !9418)
!9444 = !DILocation(line: 635, column: 18, scope: !9418)
!9445 = !DILocation(line: 635, column: 26, scope: !9418)
!9446 = !DILocation(line: 635, column: 30, scope: !9418)
!9447 = !DILocation(line: 635, column: 24, scope: !9418)
!9448 = !DILocation(line: 635, column: 4, scope: !9418)
!9449 = !DILocation(line: 635, column: 8, scope: !9418)
!9450 = !DILocation(line: 635, column: 15, scope: !9418)
!9451 = !DILocation(line: 636, column: 3, scope: !9418)
!9452 = !DILocation(line: 637, column: 2, scope: !9383)
!9453 = !DILocation(line: 638, column: 33, scope: !9024)
!9454 = !DILocation(line: 638, column: 37, scope: !9024)
!9455 = !DILocation(line: 638, column: 14, scope: !9024)
!9456 = !DILocation(line: 639, column: 7, scope: !9024)
!9457 = !DILocation(line: 640, column: 7, scope: !9024)
!9458 = !DILocation(line: 640, column: 11, scope: !9024)
!9459 = !DILocation(line: 640, column: 25, scope: !9024)
!9460 = !DILocation(line: 640, column: 23, scope: !9024)
!9461 = !DILocation(line: 638, column: 2, scope: !9024)
!9462 = !DILocation(line: 642, column: 21, scope: !9463)
!9463 = distinct !DILexicalBlock(scope: !9024, file: !3, line: 642, column: 6)
!9464 = !DILocation(line: 642, column: 6, scope: !9463)
!9465 = !DILocation(line: 642, column: 25, scope: !9463)
!9466 = !DILocation(line: 642, column: 28, scope: !9463)
!9467 = !DILocation(line: 642, column: 32, scope: !9463)
!9468 = !DILocation(line: 642, column: 40, scope: !9463)
!9469 = !DILocation(line: 642, column: 6, scope: !9024)
!9470 = !DILocation(line: 643, column: 23, scope: !9471)
!9471 = distinct !DILexicalBlock(scope: !9463, file: !3, line: 642, column: 52)
!9472 = !DILocation(line: 643, column: 3, scope: !9471)
!9473 = !DILocation(line: 644, column: 3, scope: !9471)
!9474 = !DILocation(line: 645, column: 2, scope: !9471)
!9475 = !DILocation(line: 647, column: 6, scope: !9476)
!9476 = distinct !DILexicalBlock(scope: !9024, file: !3, line: 647, column: 6)
!9477 = !DILocation(line: 647, column: 6, scope: !9024)
!9478 = !DILocation(line: 648, column: 27, scope: !9479)
!9479 = distinct !DILexicalBlock(scope: !9476, file: !3, line: 647, column: 12)
!9480 = !DILocation(line: 648, column: 31, scope: !9479)
!9481 = !DILocation(line: 649, column: 6, scope: !9479)
!9482 = !DILocation(line: 649, column: 10, scope: !9479)
!9483 = !DILocation(line: 650, column: 6, scope: !9479)
!9484 = !DILocation(line: 649, column: 22, scope: !9479)
!9485 = !DILocation(line: 648, column: 41, scope: !9479)
!9486 = !DILocation(line: 648, column: 7, scope: !9479)
!9487 = !DILocation(line: 648, column: 5, scope: !9479)
!9488 = !DILocation(line: 651, column: 15, scope: !9479)
!9489 = !DILocation(line: 651, column: 18, scope: !9479)
!9490 = !DILocation(line: 651, column: 36, scope: !9479)
!9491 = !DILocation(line: 651, column: 48, scope: !9479)
!9492 = !DILocation(line: 651, column: 24, scope: !9479)
!9493 = !DILocation(line: 651, column: 3, scope: !9479)
!9494 = !DILocation(line: 652, column: 18, scope: !9479)
!9495 = !DILocation(line: 652, column: 3, scope: !9479)
!9496 = !DILocation(line: 652, column: 7, scope: !9479)
!9497 = !DILocation(line: 652, column: 13, scope: !9479)
!9498 = !DILocation(line: 652, column: 15, scope: !9479)
!9499 = !DILocation(line: 653, column: 17, scope: !9479)
!9500 = !DILocation(line: 653, column: 30, scope: !9479)
!9501 = !DILocation(line: 653, column: 34, scope: !9479)
!9502 = !DILocation(line: 653, column: 28, scope: !9479)
!9503 = !DILocation(line: 653, column: 3, scope: !9479)
!9504 = !DILocation(line: 653, column: 7, scope: !9479)
!9505 = !DILocation(line: 653, column: 14, scope: !9479)
!9506 = !DILocation(line: 654, column: 9, scope: !9479)
!9507 = !DILocation(line: 654, column: 3, scope: !9479)
!9508 = !DILocation(line: 655, column: 2, scope: !9479)
!9509 = !DILocation(line: 657, column: 6, scope: !9510)
!9510 = distinct !DILexicalBlock(scope: !9024, file: !3, line: 657, column: 6)
!9511 = !DILocation(line: 657, column: 17, scope: !9510)
!9512 = !DILocation(line: 657, column: 6, scope: !9024)
!9513 = !DILocation(line: 658, column: 3, scope: !9510)
!9514 = !DILocation(line: 660, column: 6, scope: !9515)
!9515 = distinct !DILexicalBlock(scope: !9024, file: !3, line: 660, column: 6)
!9516 = !DILocation(line: 660, column: 19, scope: !9515)
!9517 = !DILocation(line: 660, column: 23, scope: !9515)
!9518 = !DILocation(line: 660, column: 17, scope: !9515)
!9519 = !DILocation(line: 660, column: 6, scope: !9024)
!9520 = !DILocation(line: 661, column: 14, scope: !9521)
!9521 = distinct !DILexicalBlock(scope: !9515, file: !3, line: 660, column: 34)
!9522 = !DILocation(line: 662, column: 3, scope: !9521)
!9523 = !DILocation(line: 664, column: 2, scope: !9521)
!9524 = !DILocation(line: 665, column: 14, scope: !9525)
!9525 = distinct !DILexicalBlock(scope: !9515, file: !3, line: 664, column: 9)
!9526 = !DILocation(line: 666, column: 16, scope: !9525)
!9527 = !DILocation(line: 666, column: 3, scope: !9525)
!9528 = !DILocation(line: 666, column: 7, scope: !9525)
!9529 = !DILocation(line: 666, column: 14, scope: !9525)
!9530 = !DILocation(line: 668, column: 1, scope: !9024)
!9531 = distinct !DISubprogram(name: "array3_size", scope: !9532, file: !9532, line: 285, type: !9533, scopeLine: 286, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !241)
!9532 = !DIFile(filename: "./include/linux/overflow.h", directory: "/home/lizy2001/genbc/linux")
!9533 = !DISubroutineType(types: !9534)
!9534 = !{!557, !557, !557, !557}
!9535 = !DILocalVariable(name: "a", arg: 1, scope: !9531, file: !9532, line: 285, type: !557)
!9536 = !DILocation(line: 285, column: 54, scope: !9531)
!9537 = !DILocalVariable(name: "b", arg: 2, scope: !9531, file: !9532, line: 285, type: !557)
!9538 = !DILocation(line: 285, column: 64, scope: !9531)
!9539 = !DILocalVariable(name: "c", arg: 3, scope: !9531, file: !9532, line: 285, type: !557)
!9540 = !DILocation(line: 285, column: 74, scope: !9531)
!9541 = !DILocalVariable(name: "bytes", scope: !9531, file: !9532, line: 287, type: !557)
!9542 = !DILocation(line: 287, column: 9, scope: !9531)
!9543 = !DILocalVariable(name: "__a", scope: !9544, file: !9532, line: 289, type: !557)
!9544 = distinct !DILexicalBlock(scope: !9545, file: !9532, line: 289, column: 6)
!9545 = distinct !DILexicalBlock(scope: !9531, file: !9532, line: 289, column: 6)
!9546 = !DILocation(line: 289, column: 6, scope: !9544)
!9547 = !DILocalVariable(name: "__b", scope: !9544, file: !9532, line: 289, type: !557)
!9548 = !DILocalVariable(name: "__d", scope: !9544, file: !9532, line: 289, type: !9549)
!9549 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !557, size: 64)
!9550 = !DILocation(line: 289, column: 6, scope: !9545)
!9551 = !DILocation(line: 289, column: 6, scope: !9531)
!9552 = !DILocation(line: 290, column: 3, scope: !9545)
!9553 = !DILocalVariable(name: "__a", scope: !9554, file: !9532, line: 291, type: !557)
!9554 = distinct !DILexicalBlock(scope: !9555, file: !9532, line: 291, column: 6)
!9555 = distinct !DILexicalBlock(scope: !9531, file: !9532, line: 291, column: 6)
!9556 = !DILocation(line: 291, column: 6, scope: !9554)
!9557 = !DILocalVariable(name: "__b", scope: !9554, file: !9532, line: 291, type: !557)
!9558 = !DILocalVariable(name: "__d", scope: !9554, file: !9532, line: 291, type: !9549)
!9559 = !DILocation(line: 291, column: 6, scope: !9555)
!9560 = !DILocation(line: 291, column: 6, scope: !9531)
!9561 = !DILocation(line: 292, column: 3, scope: !9555)
!9562 = !DILocation(line: 294, column: 9, scope: !9531)
!9563 = !DILocation(line: 294, column: 2, scope: !9531)
!9564 = !DILocation(line: 295, column: 1, scope: !9531)
!9565 = distinct !DISubprogram(name: "scr_memsetw", scope: !9566, file: !9566, line: 29, type: !9567, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !241)
!9566 = !DIFile(filename: "./include/linux/vt_buffer.h", directory: "/home/lizy2001/genbc/linux")
!9567 = !DISubroutineType(types: !9568)
!9568 = !{null, !193, !194, !7}
!9569 = !DILocalVariable(name: "s", arg: 1, scope: !9565, file: !9566, line: 29, type: !193)
!9570 = !DILocation(line: 29, column: 37, scope: !9565)
!9571 = !DILocalVariable(name: "c", arg: 2, scope: !9565, file: !9566, line: 29, type: !194)
!9572 = !DILocation(line: 29, column: 44, scope: !9565)
!9573 = !DILocalVariable(name: "count", arg: 3, scope: !9565, file: !9566, line: 29, type: !7)
!9574 = !DILocation(line: 29, column: 60, scope: !9565)
!9575 = !DILocation(line: 36, column: 11, scope: !9565)
!9576 = !DILocation(line: 36, column: 14, scope: !9565)
!9577 = !DILocation(line: 36, column: 17, scope: !9565)
!9578 = !DILocation(line: 36, column: 23, scope: !9565)
!9579 = !DILocation(line: 36, column: 2, scope: !9565)
!9580 = !DILocation(line: 38, column: 1, scope: !9565)
!9581 = distinct !DISubprogram(name: "scr_memcpyw", scope: !9566, file: !9566, line: 42, type: !9582, scopeLine: 43, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !241)
!9582 = !DISubroutineType(types: !9583)
!9583 = !{null, !193, !9584, !7}
!9584 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9585, size: 64)
!9585 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !194)
!9586 = !DILocalVariable(name: "d", arg: 1, scope: !9581, file: !9566, line: 42, type: !193)
!9587 = !DILocation(line: 42, column: 37, scope: !9581)
!9588 = !DILocalVariable(name: "s", arg: 2, scope: !9581, file: !9566, line: 42, type: !9584)
!9589 = !DILocation(line: 42, column: 51, scope: !9581)
!9590 = !DILocalVariable(name: "count", arg: 3, scope: !9581, file: !9566, line: 42, type: !7)
!9591 = !DILocation(line: 42, column: 67, scope: !9581)
!9592 = !DILocation(line: 49, column: 9, scope: !9581)
!9593 = !DILocation(line: 49, column: 2, scope: !9581)
!9594 = !DILocation(line: 49, column: 12, scope: !9581)
!9595 = !DILocation(line: 49, column: 15, scope: !9581)
!9596 = !DILocation(line: 51, column: 1, scope: !9581)
!9597 = distinct !DISubprogram(name: "fbcon_clear_margins", scope: !3, file: !3, line: 1319, type: !4867, scopeLine: 1320, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !241)
!9598 = !DILocalVariable(name: "vc", arg: 1, scope: !9597, file: !3, line: 1319, type: !4826)
!9599 = !DILocation(line: 1319, column: 49, scope: !9597)
!9600 = !DILocalVariable(name: "bottom_only", arg: 2, scope: !9597, file: !3, line: 1319, type: !170)
!9601 = !DILocation(line: 1319, column: 57, scope: !9597)
!9602 = !DILocalVariable(name: "info", scope: !9597, file: !3, line: 1321, type: !199)
!9603 = !DILocation(line: 1321, column: 18, scope: !9597)
!9604 = !DILocation(line: 1321, column: 50, scope: !9597)
!9605 = !DILocation(line: 1321, column: 54, scope: !9597)
!9606 = !DILocation(line: 1321, column: 39, scope: !9597)
!9607 = !DILocation(line: 1321, column: 25, scope: !9597)
!9608 = !DILocalVariable(name: "ops", scope: !9597, file: !3, line: 1322, type: !4818)
!9609 = !DILocation(line: 1322, column: 20, scope: !9597)
!9610 = !DILocation(line: 1322, column: 26, scope: !9597)
!9611 = !DILocation(line: 1322, column: 32, scope: !9597)
!9612 = !DILocation(line: 1324, column: 25, scope: !9613)
!9613 = distinct !DILexicalBlock(scope: !9597, file: !3, line: 1324, column: 6)
!9614 = !DILocation(line: 1324, column: 29, scope: !9613)
!9615 = !DILocation(line: 1324, column: 7, scope: !9613)
!9616 = !DILocation(line: 1324, column: 6, scope: !9597)
!9617 = !DILocation(line: 1325, column: 3, scope: !9613)
!9618 = !DILocation(line: 1325, column: 8, scope: !9613)
!9619 = !DILocation(line: 1325, column: 22, scope: !9613)
!9620 = !DILocation(line: 1325, column: 26, scope: !9613)
!9621 = !DILocation(line: 1325, column: 32, scope: !9613)
!9622 = !DILocation(line: 1325, column: 46, scope: !9613)
!9623 = !DILocation(line: 1326, column: 1, scope: !9597)
!9624 = distinct !DISubprogram(name: "__must_check_overflow", scope: !9532, file: !9532, line: 52, type: !9625, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !241)
!9625 = !DISubroutineType(types: !9626)
!9626 = !{!720, !720}
!9627 = !DILocalVariable(name: "overflow", arg: 1, scope: !9624, file: !9532, line: 52, type: !720)
!9628 = !DILocation(line: 52, column: 60, scope: !9624)
!9629 = !DILocation(line: 54, column: 9, scope: !9624)
!9630 = !DILocation(line: 54, column: 2, scope: !9624)
!9631 = distinct !DISubprogram(name: "memset16", scope: !9632, file: !9632, line: 22, type: !9633, scopeLine: 23, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !241)
!9632 = !DIFile(filename: "./arch/x86/include/asm/string_64.h", directory: "/home/lizy2001/genbc/linux")
!9633 = !DISubroutineType(types: !9634)
!9634 = !{!192, !9635, !9636, !557}
!9635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9636, size: 64)
!9636 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !205, line: 103, baseType: !194)
!9637 = !DILocalVariable(name: "s", arg: 1, scope: !9631, file: !9632, line: 22, type: !9635)
!9638 = !DILocation(line: 22, column: 40, scope: !9631)
!9639 = !DILocalVariable(name: "v", arg: 2, scope: !9631, file: !9632, line: 22, type: !9636)
!9640 = !DILocation(line: 22, column: 52, scope: !9631)
!9641 = !DILocalVariable(name: "n", arg: 3, scope: !9631, file: !9632, line: 22, type: !557)
!9642 = !DILocation(line: 22, column: 62, scope: !9631)
!9643 = !DILocalVariable(name: "d0", scope: !9631, file: !9632, line: 24, type: !138)
!9644 = !DILocation(line: 24, column: 7, scope: !9631)
!9645 = !DILocalVariable(name: "d1", scope: !9631, file: !9632, line: 24, type: !138)
!9646 = !DILocation(line: 24, column: 11, scope: !9631)
!9647 = !DILocation(line: 28, column: 15, scope: !9631)
!9648 = !DILocation(line: 28, column: 24, scope: !9631)
!9649 = !DILocation(line: 28, column: 33, scope: !9631)
!9650 = !DILocation(line: 25, column: 2, scope: !9631)
!9651 = !{i32 1440879, i32 1440885}
!9652 = !DILocation(line: 30, column: 9, scope: !9631)
!9653 = !DILocation(line: 30, column: 2, scope: !9631)
!9654 = distinct !DISubprogram(name: "copy_overflow", scope: !7268, file: !7268, line: 132, type: !9655, scopeLine: 133, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !241)
!9655 = !DISubroutineType(types: !9656)
!9656 = !{null, !170, !299}
!9657 = !DILocalVariable(name: "size", arg: 1, scope: !9654, file: !7268, line: 132, type: !170)
!9658 = !DILocation(line: 132, column: 38, scope: !9654)
!9659 = !DILocalVariable(name: "count", arg: 2, scope: !9654, file: !7268, line: 132, type: !299)
!9660 = !DILocation(line: 132, column: 58, scope: !9654)
!9661 = !DILocalVariable(name: "__ret_warn_on", scope: !9662, file: !7268, line: 134, type: !170)
!9662 = distinct !DILexicalBlock(scope: !9654, file: !7268, line: 134, column: 2)
!9663 = !DILocation(line: 134, column: 2, scope: !9662)
!9664 = !DILocation(line: 134, column: 2, scope: !9665)
!9665 = distinct !DILexicalBlock(scope: !9662, file: !7268, line: 134, column: 2)
!9666 = !DILocation(line: 134, column: 2, scope: !9667)
!9667 = distinct !DILexicalBlock(scope: !9665, file: !7268, line: 134, column: 2)
!9668 = !DILocation(line: 134, column: 2, scope: !9669)
!9669 = distinct !DILexicalBlock(scope: !9667, file: !7268, line: 134, column: 2)
!9670 = !DILocation(line: 134, column: 2, scope: !9671)
!9671 = distinct !DILexicalBlock(scope: !9667, file: !7268, line: 134, column: 2)
!9672 = !DILocation(line: 134, column: 2, scope: !9673)
!9673 = distinct !DILexicalBlock(scope: !9671, file: !7268, line: 134, column: 2)
!9674 = !DILocation(line: 134, column: 2, scope: !9675)
!9675 = distinct !DILexicalBlock(scope: !9671, file: !7268, line: 134, column: 2)
!9676 = !{i32 -2145476050, i32 -2145476021, i32 -2145475975, i32 -2145475917, i32 -2145475863, i32 -2145475809, i32 -2145475754, i32 -2145475723}
!9677 = !DILocation(line: 134, column: 2, scope: !9678)
!9678 = distinct !DILexicalBlock(scope: !9671, file: !7268, line: 134, column: 2)
!9679 = !{i32 -2145475303, i32 -2145475296, i32 -2145475244, i32 -2145475213, i32 -2145475183}
!9680 = !DILocation(line: 134, column: 2, scope: !9681)
!9681 = distinct !DILexicalBlock(scope: !9671, file: !7268, line: 134, column: 2)
!9682 = !DILocation(line: 134, column: 2, scope: !9683)
!9683 = distinct !DILexicalBlock(scope: !9667, file: !7268, line: 134, column: 2)
!9684 = !DILocation(line: 135, column: 1, scope: !9654)
!9685 = distinct !DISubprogram(name: "check_object_size", scope: !7268, file: !7268, line: 122, type: !9686, scopeLine: 124, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !241)
!9686 = !DISubroutineType(types: !9687)
!9687 = !{null, !3016, !299, !720}
!9688 = !DILocalVariable(name: "ptr", arg: 1, scope: !9685, file: !7268, line: 122, type: !3016)
!9689 = !DILocation(line: 122, column: 50, scope: !9685)
!9690 = !DILocalVariable(name: "n", arg: 2, scope: !9685, file: !7268, line: 122, type: !299)
!9691 = !DILocation(line: 122, column: 69, scope: !9685)
!9692 = !DILocalVariable(name: "to_user", arg: 3, scope: !9685, file: !7268, line: 123, type: !720)
!9693 = !DILocation(line: 123, column: 15, scope: !9685)
!9694 = !DILocation(line: 124, column: 3, scope: !9685)
!9695 = distinct !DISubprogram(name: "fbcon_startup", scope: !3, file: !3, line: 943, type: !4863, scopeLine: 944, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !241)
!9696 = !DILocalVariable(name: "display_desc", scope: !9695, file: !3, line: 945, type: !335)
!9697 = !DILocation(line: 945, column: 14, scope: !9695)
!9698 = !DILocalVariable(name: "p", scope: !9695, file: !3, line: 946, type: !5048)
!9699 = !DILocation(line: 946, column: 24, scope: !9695)
!9700 = !DILocation(line: 946, column: 40, scope: !9695)
!9701 = !DILocation(line: 946, column: 29, scope: !9695)
!9702 = !DILocalVariable(name: "vc", scope: !9695, file: !3, line: 947, type: !4826)
!9703 = !DILocation(line: 947, column: 18, scope: !9695)
!9704 = !DILocation(line: 947, column: 31, scope: !9695)
!9705 = !DILocation(line: 947, column: 23, scope: !9695)
!9706 = !DILocation(line: 947, column: 43, scope: !9695)
!9707 = !DILocalVariable(name: "font", scope: !9695, file: !3, line: 948, type: !9708)
!9708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9709, size: 64)
!9709 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9710)
!9710 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "font_desc", file: !9711, line: 16, size: 320, elements: !9712)
!9711 = !DIFile(filename: "./include/linux/font.h", directory: "/home/lizy2001/genbc/linux")
!9712 = !{!9713, !9714, !9715, !9716, !9717, !9718}
!9713 = !DIDerivedType(tag: DW_TAG_member, name: "idx", scope: !9710, file: !9711, line: 17, baseType: !170, size: 32)
!9714 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !9710, file: !9711, line: 18, baseType: !335, size: 64, offset: 64)
!9715 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !9710, file: !9711, line: 19, baseType: !170, size: 32, offset: 128)
!9716 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !9710, file: !9711, line: 19, baseType: !170, size: 32, offset: 160)
!9717 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !9710, file: !9711, line: 20, baseType: !3016, size: 64, offset: 192)
!9718 = !DIDerivedType(tag: DW_TAG_member, name: "pref", scope: !9710, file: !9711, line: 21, baseType: !170, size: 32, offset: 256)
!9719 = !DILocation(line: 948, column: 26, scope: !9695)
!9720 = !DILocalVariable(name: "owner", scope: !9695, file: !3, line: 949, type: !861)
!9721 = !DILocation(line: 949, column: 17, scope: !9695)
!9722 = !DILocalVariable(name: "info", scope: !9695, file: !3, line: 950, type: !199)
!9723 = !DILocation(line: 950, column: 18, scope: !9695)
!9724 = !DILocalVariable(name: "ops", scope: !9695, file: !3, line: 951, type: !4818)
!9725 = !DILocation(line: 951, column: 20, scope: !9695)
!9726 = !DILocalVariable(name: "rows", scope: !9695, file: !3, line: 952, type: !170)
!9727 = !DILocation(line: 952, column: 6, scope: !9695)
!9728 = !DILocalVariable(name: "cols", scope: !9695, file: !3, line: 952, type: !170)
!9729 = !DILocation(line: 952, column: 12, scope: !9695)
!9730 = !DILocation(line: 958, column: 7, scope: !9731)
!9731 = distinct !DILexicalBlock(scope: !9695, file: !3, line: 958, column: 6)
!9732 = !DILocation(line: 958, column: 25, scope: !9731)
!9733 = !DILocation(line: 958, column: 28, scope: !9731)
!9734 = !DILocation(line: 958, column: 37, scope: !9731)
!9735 = !DILocation(line: 958, column: 6, scope: !9695)
!9736 = !DILocation(line: 959, column: 10, scope: !9731)
!9737 = !DILocation(line: 959, column: 3, scope: !9731)
!9738 = !DILocation(line: 964, column: 23, scope: !9695)
!9739 = !DILocation(line: 964, column: 9, scope: !9695)
!9740 = !DILocation(line: 964, column: 7, scope: !9695)
!9741 = !DILocation(line: 965, column: 7, scope: !9742)
!9742 = distinct !DILexicalBlock(scope: !9695, file: !3, line: 965, column: 6)
!9743 = !DILocation(line: 965, column: 6, scope: !9695)
!9744 = !DILocation(line: 966, column: 3, scope: !9742)
!9745 = !DILocation(line: 968, column: 10, scope: !9695)
!9746 = !DILocation(line: 968, column: 16, scope: !9695)
!9747 = !DILocation(line: 968, column: 23, scope: !9695)
!9748 = !DILocation(line: 968, column: 8, scope: !9695)
!9749 = !DILocation(line: 969, column: 22, scope: !9750)
!9750 = distinct !DILexicalBlock(scope: !9695, file: !3, line: 969, column: 6)
!9751 = !DILocation(line: 969, column: 7, scope: !9750)
!9752 = !DILocation(line: 969, column: 6, scope: !9695)
!9753 = !DILocation(line: 970, column: 3, scope: !9750)
!9754 = !DILocation(line: 971, column: 6, scope: !9755)
!9755 = distinct !DILexicalBlock(scope: !9695, file: !3, line: 971, column: 6)
!9756 = !DILocation(line: 971, column: 12, scope: !9755)
!9757 = !DILocation(line: 971, column: 19, scope: !9755)
!9758 = !DILocation(line: 971, column: 27, scope: !9755)
!9759 = !DILocation(line: 971, column: 30, scope: !9755)
!9760 = !DILocation(line: 971, column: 36, scope: !9755)
!9761 = !DILocation(line: 971, column: 43, scope: !9755)
!9762 = !DILocation(line: 971, column: 51, scope: !9755)
!9763 = !DILocation(line: 971, column: 6, scope: !9695)
!9764 = !DILocation(line: 972, column: 14, scope: !9765)
!9765 = distinct !DILexicalBlock(scope: !9755, file: !3, line: 971, column: 61)
!9766 = !DILocation(line: 972, column: 3, scope: !9765)
!9767 = !DILocation(line: 973, column: 3, scope: !9765)
!9768 = !DILocation(line: 976, column: 8, scope: !9695)
!9769 = !DILocation(line: 976, column: 6, scope: !9695)
!9770 = !DILocation(line: 977, column: 7, scope: !9771)
!9771 = distinct !DILexicalBlock(scope: !9695, file: !3, line: 977, column: 6)
!9772 = !DILocation(line: 977, column: 6, scope: !9695)
!9773 = !DILocation(line: 978, column: 14, scope: !9774)
!9774 = distinct !DILexicalBlock(scope: !9771, file: !3, line: 977, column: 12)
!9775 = !DILocation(line: 978, column: 3, scope: !9774)
!9776 = !DILocation(line: 979, column: 3, scope: !9774)
!9777 = !DILocation(line: 982, column: 2, scope: !9695)
!9778 = !DILocation(line: 982, column: 7, scope: !9695)
!9779 = !DILocation(line: 982, column: 15, scope: !9695)
!9780 = !DILocation(line: 983, column: 2, scope: !9695)
!9781 = !DILocation(line: 983, column: 7, scope: !9695)
!9782 = !DILocation(line: 983, column: 16, scope: !9695)
!9783 = !DILocation(line: 984, column: 2, scope: !9695)
!9784 = !DILocation(line: 984, column: 7, scope: !9695)
!9785 = !DILocation(line: 984, column: 18, scope: !9695)
!9786 = !DILocation(line: 985, column: 2, scope: !9695)
!9787 = !DILocation(line: 985, column: 7, scope: !9695)
!9788 = !DILocation(line: 985, column: 25, scope: !9695)
!9789 = !DILocation(line: 986, column: 14, scope: !9695)
!9790 = !DILocation(line: 986, column: 2, scope: !9695)
!9791 = !DILocation(line: 986, column: 7, scope: !9695)
!9792 = !DILocation(line: 986, column: 12, scope: !9695)
!9793 = !DILocation(line: 987, column: 20, scope: !9695)
!9794 = !DILocation(line: 987, column: 2, scope: !9695)
!9795 = !DILocation(line: 987, column: 8, scope: !9695)
!9796 = !DILocation(line: 987, column: 18, scope: !9695)
!9797 = !DILocation(line: 989, column: 18, scope: !9695)
!9798 = !DILocation(line: 989, column: 2, scope: !9695)
!9799 = !DILocation(line: 989, column: 5, scope: !9695)
!9800 = !DILocation(line: 989, column: 16, scope: !9695)
!9801 = !DILocation(line: 990, column: 6, scope: !9802)
!9802 = distinct !DILexicalBlock(scope: !9695, file: !3, line: 990, column: 6)
!9803 = !DILocation(line: 990, column: 9, scope: !9802)
!9804 = !DILocation(line: 990, column: 20, scope: !9802)
!9805 = !DILocation(line: 990, column: 6, scope: !9695)
!9806 = !DILocation(line: 991, column: 19, scope: !9802)
!9807 = !DILocation(line: 991, column: 25, scope: !9802)
!9808 = !DILocation(line: 991, column: 3, scope: !9802)
!9809 = !DILocation(line: 991, column: 6, scope: !9802)
!9810 = !DILocation(line: 991, column: 17, scope: !9802)
!9811 = !DILocation(line: 992, column: 6, scope: !9812)
!9812 = distinct !DILexicalBlock(scope: !9695, file: !3, line: 992, column: 6)
!9813 = !DILocation(line: 992, column: 9, scope: !9812)
!9814 = !DILocation(line: 992, column: 20, scope: !9812)
!9815 = !DILocation(line: 992, column: 6, scope: !9695)
!9816 = !DILocation(line: 993, column: 3, scope: !9812)
!9817 = !DILocation(line: 993, column: 6, scope: !9812)
!9818 = !DILocation(line: 993, column: 17, scope: !9812)
!9819 = !DILocation(line: 995, column: 20, scope: !9695)
!9820 = !DILocation(line: 995, column: 24, scope: !9695)
!9821 = !DILocation(line: 995, column: 2, scope: !9695)
!9822 = !DILocation(line: 998, column: 7, scope: !9823)
!9823 = distinct !DILexicalBlock(scope: !9695, file: !3, line: 998, column: 6)
!9824 = !DILocation(line: 998, column: 10, scope: !9823)
!9825 = !DILocation(line: 998, column: 19, scope: !9823)
!9826 = !DILocation(line: 998, column: 23, scope: !9823)
!9827 = !DILocation(line: 998, column: 27, scope: !9823)
!9828 = !DILocation(line: 998, column: 35, scope: !9823)
!9829 = !DILocation(line: 998, column: 6, scope: !9695)
!9830 = !DILocation(line: 999, column: 8, scope: !9831)
!9831 = distinct !DILexicalBlock(scope: !9832, file: !3, line: 999, column: 7)
!9832 = distinct !DILexicalBlock(scope: !9823, file: !3, line: 998, column: 41)
!9833 = !DILocation(line: 999, column: 20, scope: !9831)
!9834 = !DILocation(line: 999, column: 32, scope: !9831)
!9835 = !DILocation(line: 999, column: 30, scope: !9831)
!9836 = !DILocation(line: 999, column: 7, scope: !9832)
!9837 = !DILocation(line: 1000, column: 28, scope: !9831)
!9838 = !DILocation(line: 1000, column: 34, scope: !9831)
!9839 = !DILocation(line: 1000, column: 38, scope: !9831)
!9840 = !DILocation(line: 1001, column: 7, scope: !9831)
!9841 = !DILocation(line: 1001, column: 13, scope: !9831)
!9842 = !DILocation(line: 1001, column: 17, scope: !9831)
!9843 = !DILocation(line: 1002, column: 7, scope: !9831)
!9844 = !DILocation(line: 1002, column: 13, scope: !9831)
!9845 = !DILocation(line: 1002, column: 20, scope: !9831)
!9846 = !DILocation(line: 1003, column: 7, scope: !9831)
!9847 = !DILocation(line: 1003, column: 13, scope: !9831)
!9848 = !DILocation(line: 1003, column: 20, scope: !9831)
!9849 = !DILocation(line: 1000, column: 11, scope: !9831)
!9850 = !DILocation(line: 1000, column: 9, scope: !9831)
!9851 = !DILocation(line: 1000, column: 4, scope: !9831)
!9852 = !DILocation(line: 1004, column: 23, scope: !9832)
!9853 = !DILocation(line: 1004, column: 29, scope: !9832)
!9854 = !DILocation(line: 1004, column: 3, scope: !9832)
!9855 = !DILocation(line: 1004, column: 7, scope: !9832)
!9856 = !DILocation(line: 1004, column: 15, scope: !9832)
!9857 = !DILocation(line: 1004, column: 21, scope: !9832)
!9858 = !DILocation(line: 1005, column: 24, scope: !9832)
!9859 = !DILocation(line: 1005, column: 30, scope: !9832)
!9860 = !DILocation(line: 1005, column: 3, scope: !9832)
!9861 = !DILocation(line: 1005, column: 7, scope: !9832)
!9862 = !DILocation(line: 1005, column: 15, scope: !9832)
!9863 = !DILocation(line: 1005, column: 22, scope: !9832)
!9864 = !DILocation(line: 1006, column: 45, scope: !9832)
!9865 = !DILocation(line: 1006, column: 51, scope: !9832)
!9866 = !DILocation(line: 1006, column: 31, scope: !9832)
!9867 = !DILocation(line: 1006, column: 34, scope: !9832)
!9868 = !DILocation(line: 1006, column: 43, scope: !9832)
!9869 = !DILocation(line: 1006, column: 3, scope: !9832)
!9870 = !DILocation(line: 1006, column: 7, scope: !9832)
!9871 = !DILocation(line: 1006, column: 15, scope: !9832)
!9872 = !DILocation(line: 1006, column: 20, scope: !9832)
!9873 = !DILocation(line: 1007, column: 3, scope: !9832)
!9874 = !DILocation(line: 1007, column: 7, scope: !9832)
!9875 = !DILocation(line: 1007, column: 15, scope: !9832)
!9876 = !DILocation(line: 1007, column: 25, scope: !9832)
!9877 = !DILocation(line: 1008, column: 2, scope: !9832)
!9878 = !DILocation(line: 1009, column: 17, scope: !9879)
!9879 = distinct !DILexicalBlock(scope: !9823, file: !3, line: 1008, column: 9)
!9880 = !DILocation(line: 1009, column: 21, scope: !9879)
!9881 = !DILocation(line: 1009, column: 29, scope: !9879)
!9882 = !DILocation(line: 1009, column: 3, scope: !9879)
!9883 = !DILocation(line: 1009, column: 6, scope: !9879)
!9884 = !DILocation(line: 1009, column: 15, scope: !9879)
!9885 = !DILocalVariable(name: "_r", scope: !9886, file: !3, line: 1012, type: !253)
!9886 = distinct !DILexicalBlock(scope: !9695, file: !3, line: 1012, column: 9)
!9887 = !DILocation(line: 1012, column: 9, scope: !9886)
!9888 = !DILocalVariable(name: "_v", scope: !9886, file: !3, line: 1012, type: !253)
!9889 = !DILocation(line: 1012, column: 7, scope: !9695)
!9890 = !DILocalVariable(name: "_r", scope: !9891, file: !3, line: 1013, type: !253)
!9891 = distinct !DILexicalBlock(scope: !9695, file: !3, line: 1013, column: 9)
!9892 = !DILocation(line: 1013, column: 9, scope: !9891)
!9893 = !DILocalVariable(name: "_v", scope: !9891, file: !3, line: 1013, type: !253)
!9894 = !DILocation(line: 1013, column: 7, scope: !9695)
!9895 = !DILocation(line: 1014, column: 10, scope: !9695)
!9896 = !DILocation(line: 1014, column: 14, scope: !9695)
!9897 = !DILocation(line: 1014, column: 22, scope: !9695)
!9898 = !DILocation(line: 1014, column: 7, scope: !9695)
!9899 = !DILocation(line: 1015, column: 10, scope: !9695)
!9900 = !DILocation(line: 1015, column: 14, scope: !9695)
!9901 = !DILocation(line: 1015, column: 22, scope: !9695)
!9902 = !DILocation(line: 1015, column: 7, scope: !9695)
!9903 = !DILocation(line: 1016, column: 12, scope: !9695)
!9904 = !DILocation(line: 1016, column: 16, scope: !9695)
!9905 = !DILocation(line: 1016, column: 22, scope: !9695)
!9906 = !DILocation(line: 1016, column: 2, scope: !9695)
!9907 = !DILocation(line: 1024, column: 25, scope: !9695)
!9908 = !DILocation(line: 1024, column: 2, scope: !9695)
!9909 = !DILocation(line: 1025, column: 9, scope: !9695)
!9910 = !DILocation(line: 1025, column: 2, scope: !9695)
!9911 = !DILocation(line: 1026, column: 1, scope: !9695)
!9912 = distinct !DISubprogram(name: "fbcon_init", scope: !3, file: !3, line: 1028, type: !4867, scopeLine: 1029, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !241)
!9913 = !DILocation(line: 363, column: 74, scope: !5402, inlinedAt: !9914)
!9914 = distinct !DILocation(line: 1110, column: 27, scope: !9912)
!9915 = !DILocalVariable(name: "vc", arg: 1, scope: !9912, file: !3, line: 1028, type: !4826)
!9916 = !DILocation(line: 1028, column: 40, scope: !9912)
!9917 = !DILocalVariable(name: "init", arg: 2, scope: !9912, file: !3, line: 1028, type: !170)
!9918 = !DILocation(line: 1028, column: 48, scope: !9912)
!9919 = !DILocalVariable(name: "info", scope: !9912, file: !3, line: 1030, type: !199)
!9920 = !DILocation(line: 1030, column: 18, scope: !9912)
!9921 = !DILocalVariable(name: "ops", scope: !9912, file: !3, line: 1031, type: !4818)
!9922 = !DILocation(line: 1031, column: 20, scope: !9912)
!9923 = !DILocalVariable(name: "default_mode", scope: !9912, file: !3, line: 1032, type: !5014)
!9924 = !DILocation(line: 1032, column: 19, scope: !9912)
!9925 = !DILocation(line: 1032, column: 34, scope: !9912)
!9926 = !DILocation(line: 1032, column: 38, scope: !9912)
!9927 = !DILocalVariable(name: "svc", scope: !9912, file: !3, line: 1033, type: !4826)
!9928 = !DILocation(line: 1033, column: 18, scope: !9912)
!9929 = !DILocation(line: 1033, column: 25, scope: !9912)
!9930 = !DILocation(line: 1033, column: 24, scope: !9912)
!9931 = !DILocalVariable(name: "t", scope: !9912, file: !3, line: 1034, type: !5048)
!9932 = !DILocation(line: 1034, column: 24, scope: !9912)
!9933 = !DILocalVariable(name: "p", scope: !9912, file: !3, line: 1034, type: !5048)
!9934 = !DILocation(line: 1034, column: 28, scope: !9912)
!9935 = !DILocation(line: 1034, column: 44, scope: !9912)
!9936 = !DILocation(line: 1034, column: 48, scope: !9912)
!9937 = !DILocation(line: 1034, column: 33, scope: !9912)
!9938 = !DILocalVariable(name: "logo", scope: !9912, file: !3, line: 1035, type: !170)
!9939 = !DILocation(line: 1035, column: 6, scope: !9912)
!9940 = !DILocalVariable(name: "new_rows", scope: !9912, file: !3, line: 1035, type: !170)
!9941 = !DILocation(line: 1035, column: 16, scope: !9912)
!9942 = !DILocalVariable(name: "new_cols", scope: !9912, file: !3, line: 1035, type: !170)
!9943 = !DILocation(line: 1035, column: 26, scope: !9912)
!9944 = !DILocalVariable(name: "rows", scope: !9912, file: !3, line: 1035, type: !170)
!9945 = !DILocation(line: 1035, column: 36, scope: !9912)
!9946 = !DILocalVariable(name: "cols", scope: !9912, file: !3, line: 1035, type: !170)
!9947 = !DILocation(line: 1035, column: 42, scope: !9912)
!9948 = !DILocalVariable(name: "charcnt", scope: !9912, file: !3, line: 1035, type: !170)
!9949 = !DILocation(line: 1035, column: 48, scope: !9912)
!9950 = !DILocalVariable(name: "cap", scope: !9912, file: !3, line: 1036, type: !170)
!9951 = !DILocation(line: 1036, column: 6, scope: !9912)
!9952 = !DILocalVariable(name: "ret", scope: !9912, file: !3, line: 1036, type: !170)
!9953 = !DILocation(line: 1036, column: 11, scope: !9912)
!9954 = !DILocalVariable(name: "__ret_warn_on", scope: !9955, file: !3, line: 1038, type: !170)
!9955 = distinct !DILexicalBlock(scope: !9956, file: !3, line: 1038, column: 6)
!9956 = distinct !DILexicalBlock(scope: !9912, file: !3, line: 1038, column: 6)
!9957 = !DILocation(line: 1038, column: 6, scope: !9955)
!9958 = !DILocation(line: 1038, column: 6, scope: !9959)
!9959 = distinct !DILexicalBlock(scope: !9955, file: !3, line: 1038, column: 6)
!9960 = !DILocation(line: 1038, column: 6, scope: !9961)
!9961 = distinct !DILexicalBlock(scope: !9959, file: !3, line: 1038, column: 6)
!9962 = !DILocation(line: 1038, column: 6, scope: !9963)
!9963 = distinct !DILexicalBlock(scope: !9961, file: !3, line: 1038, column: 6)
!9964 = !DILocation(line: 1038, column: 6, scope: !9965)
!9965 = distinct !DILexicalBlock(scope: !9961, file: !3, line: 1038, column: 6)
!9966 = !{i32 -2140968064, i32 -2140968035, i32 -2140967989, i32 -2140967931, i32 -2140967877, i32 -2140967823, i32 -2140967768, i32 -2140967737}
!9967 = !DILocation(line: 1038, column: 6, scope: !9968)
!9968 = distinct !DILexicalBlock(scope: !9961, file: !3, line: 1038, column: 6)
!9969 = !{i32 -2140967322, i32 -2140967315, i32 -2140967263, i32 -2140967232, i32 -2140967202}
!9970 = !DILocation(line: 1038, column: 6, scope: !9971)
!9971 = distinct !DILexicalBlock(scope: !9961, file: !3, line: 1038, column: 6)
!9972 = !DILocation(line: 1038, column: 6, scope: !9956)
!9973 = !DILocation(line: 1038, column: 6, scope: !9912)
!9974 = !DILocation(line: 1039, column: 6, scope: !9956)
!9975 = !DILocation(line: 1041, column: 17, scope: !9976)
!9976 = distinct !DILexicalBlock(scope: !9912, file: !3, line: 1041, column: 6)
!9977 = !DILocation(line: 1041, column: 21, scope: !9976)
!9978 = !DILocation(line: 1041, column: 6, scope: !9976)
!9979 = !DILocation(line: 1041, column: 29, scope: !9976)
!9980 = !DILocation(line: 1041, column: 6, scope: !9912)
!9981 = !DILocation(line: 1042, column: 28, scope: !9976)
!9982 = !DILocation(line: 1042, column: 14, scope: !9976)
!9983 = !DILocation(line: 1042, column: 18, scope: !9976)
!9984 = !DILocation(line: 1042, column: 3, scope: !9976)
!9985 = !DILocation(line: 1042, column: 26, scope: !9976)
!9986 = !DILocation(line: 1044, column: 34, scope: !9912)
!9987 = !DILocation(line: 1044, column: 38, scope: !9912)
!9988 = !DILocation(line: 1044, column: 23, scope: !9912)
!9989 = !DILocation(line: 1044, column: 9, scope: !9912)
!9990 = !DILocation(line: 1044, column: 7, scope: !9912)
!9991 = !DILocation(line: 1045, column: 8, scope: !9912)
!9992 = !DILocation(line: 1045, column: 14, scope: !9912)
!9993 = !DILocation(line: 1045, column: 6, scope: !9912)
!9994 = !DILocation(line: 1047, column: 6, scope: !9995)
!9995 = distinct !DILexicalBlock(scope: !9912, file: !3, line: 1047, column: 6)
!9996 = !DILocation(line: 1047, column: 17, scope: !9995)
!9997 = !DILocation(line: 1047, column: 21, scope: !9995)
!9998 = !DILocation(line: 1047, column: 24, scope: !9995)
!9999 = !DILocation(line: 1047, column: 41, scope: !9995)
!10000 = !DILocation(line: 1047, column: 6, scope: !9912)
!10001 = !DILocation(line: 1048, column: 14, scope: !9995)
!10002 = !DILocation(line: 1048, column: 3, scope: !9995)
!10003 = !DILocation(line: 1050, column: 6, scope: !10004)
!10004 = distinct !DILexicalBlock(scope: !9912, file: !3, line: 1050, column: 6)
!10005 = !DILocation(line: 1050, column: 12, scope: !10004)
!10006 = !DILocation(line: 1050, column: 9, scope: !10004)
!10007 = !DILocation(line: 1050, column: 16, scope: !10004)
!10008 = !DILocation(line: 1050, column: 19, scope: !10004)
!10009 = !DILocation(line: 1050, column: 30, scope: !10004)
!10010 = !DILocation(line: 1050, column: 53, scope: !10004)
!10011 = !DILocation(line: 1051, column: 7, scope: !10004)
!10012 = !DILocation(line: 1051, column: 13, scope: !10004)
!10013 = !DILocation(line: 1051, column: 17, scope: !10004)
!10014 = !DILocation(line: 1051, column: 22, scope: !10004)
!10015 = !DILocation(line: 1050, column: 6, scope: !9912)
!10016 = !DILocation(line: 1052, column: 8, scope: !10004)
!10017 = !DILocation(line: 1052, column: 3, scope: !10004)
!10018 = !DILocation(line: 1054, column: 21, scope: !10019)
!10019 = distinct !DILexicalBlock(scope: !9912, file: !3, line: 1054, column: 6)
!10020 = !DILocation(line: 1054, column: 25, scope: !10019)
!10021 = !DILocation(line: 1054, column: 31, scope: !10019)
!10022 = !DILocation(line: 1054, column: 36, scope: !10019)
!10023 = !DILocation(line: 1054, column: 6, scope: !10019)
!10024 = !DILocation(line: 1054, column: 6, scope: !9912)
!10025 = !DILocation(line: 1055, column: 3, scope: !10019)
!10026 = !DILocation(line: 1057, column: 7, scope: !10027)
!10027 = distinct !DILexicalBlock(scope: !9912, file: !3, line: 1057, column: 6)
!10028 = !DILocation(line: 1057, column: 13, scope: !10027)
!10029 = !DILocation(line: 1057, column: 6, scope: !9912)
!10030 = !DILocation(line: 1058, column: 26, scope: !10027)
!10031 = !DILocation(line: 1058, column: 30, scope: !10027)
!10032 = !DILocation(line: 1058, column: 36, scope: !10027)
!10033 = !DILocation(line: 1058, column: 40, scope: !10027)
!10034 = !DILocation(line: 1058, column: 3, scope: !10027)
!10035 = !DILocation(line: 1062, column: 18, scope: !9912)
!10036 = !DILocation(line: 1062, column: 7, scope: !9912)
!10037 = !DILocation(line: 1062, column: 4, scope: !9912)
!10038 = !DILocation(line: 1063, column: 7, scope: !10039)
!10039 = distinct !DILexicalBlock(scope: !9912, file: !3, line: 1063, column: 6)
!10040 = !DILocation(line: 1063, column: 10, scope: !10039)
!10041 = !DILocation(line: 1063, column: 6, scope: !9912)
!10042 = !DILocation(line: 1064, column: 7, scope: !10043)
!10043 = distinct !DILexicalBlock(scope: !10044, file: !3, line: 1064, column: 7)
!10044 = distinct !DILexicalBlock(scope: !10039, file: !3, line: 1063, column: 20)
!10045 = !DILocation(line: 1064, column: 10, scope: !10043)
!10046 = !DILocation(line: 1064, column: 7, scope: !10044)
!10047 = !DILocalVariable(name: "fvc", scope: !10048, file: !3, line: 1065, type: !4826)
!10048 = distinct !DILexicalBlock(scope: !10043, file: !3, line: 1064, column: 20)
!10049 = !DILocation(line: 1065, column: 20, scope: !10048)
!10050 = !DILocation(line: 1065, column: 34, scope: !10048)
!10051 = !DILocation(line: 1065, column: 26, scope: !10048)
!10052 = !DILocation(line: 1065, column: 46, scope: !10048)
!10053 = !DILocation(line: 1068, column: 11, scope: !10048)
!10054 = !DILocation(line: 1068, column: 16, scope: !10048)
!10055 = !DILocation(line: 1068, column: 24, scope: !10048)
!10056 = !DILocation(line: 1067, column: 32, scope: !10048)
!10057 = !DILocation(line: 1067, column: 35, scope: !10048)
!10058 = !DILocation(line: 1067, column: 44, scope: !10048)
!10059 = !DILocation(line: 1067, column: 4, scope: !10048)
!10060 = !DILocation(line: 1067, column: 8, scope: !10048)
!10061 = !DILocation(line: 1067, column: 16, scope: !10048)
!10062 = !DILocation(line: 1067, column: 21, scope: !10048)
!10063 = !DILocation(line: 1069, column: 24, scope: !10048)
!10064 = !DILocation(line: 1069, column: 29, scope: !10048)
!10065 = !DILocation(line: 1069, column: 37, scope: !10048)
!10066 = !DILocation(line: 1069, column: 4, scope: !10048)
!10067 = !DILocation(line: 1069, column: 8, scope: !10048)
!10068 = !DILocation(line: 1069, column: 16, scope: !10048)
!10069 = !DILocation(line: 1069, column: 22, scope: !10048)
!10070 = !DILocation(line: 1070, column: 25, scope: !10048)
!10071 = !DILocation(line: 1070, column: 30, scope: !10048)
!10072 = !DILocation(line: 1070, column: 38, scope: !10048)
!10073 = !DILocation(line: 1070, column: 4, scope: !10048)
!10074 = !DILocation(line: 1070, column: 8, scope: !10048)
!10075 = !DILocation(line: 1070, column: 16, scope: !10048)
!10076 = !DILocation(line: 1070, column: 23, scope: !10048)
!10077 = !DILocation(line: 1071, column: 18, scope: !10048)
!10078 = !DILocation(line: 1071, column: 21, scope: !10048)
!10079 = !DILocation(line: 1071, column: 4, scope: !10048)
!10080 = !DILocation(line: 1071, column: 7, scope: !10048)
!10081 = !DILocation(line: 1071, column: 16, scope: !10048)
!10082 = !DILocation(line: 1073, column: 8, scope: !10083)
!10083 = distinct !DILexicalBlock(scope: !10048, file: !3, line: 1073, column: 8)
!10084 = !DILocation(line: 1073, column: 11, scope: !10083)
!10085 = !DILocation(line: 1073, column: 8, scope: !10048)
!10086 = !DILocation(line: 1074, column: 5, scope: !10083)
!10087 = !DILocation(line: 1074, column: 26, scope: !10083)
!10088 = !DILocation(line: 1075, column: 3, scope: !10048)
!10089 = !DILocalVariable(name: "font", scope: !10090, file: !3, line: 1076, type: !9708)
!10090 = distinct !DILexicalBlock(scope: !10043, file: !3, line: 1075, column: 10)
!10091 = !DILocation(line: 1076, column: 28, scope: !10090)
!10092 = !DILocation(line: 1078, column: 9, scope: !10093)
!10093 = distinct !DILexicalBlock(scope: !10090, file: !3, line: 1078, column: 8)
!10094 = !DILocation(line: 1078, column: 21, scope: !10093)
!10095 = !DILocation(line: 1078, column: 33, scope: !10093)
!10096 = !DILocation(line: 1078, column: 31, scope: !10093)
!10097 = !DILocation(line: 1078, column: 8, scope: !10090)
!10098 = !DILocation(line: 1079, column: 29, scope: !10093)
!10099 = !DILocation(line: 1079, column: 35, scope: !10093)
!10100 = !DILocation(line: 1079, column: 39, scope: !10093)
!10101 = !DILocation(line: 1080, column: 8, scope: !10093)
!10102 = !DILocation(line: 1080, column: 14, scope: !10093)
!10103 = !DILocation(line: 1080, column: 18, scope: !10093)
!10104 = !DILocation(line: 1081, column: 8, scope: !10093)
!10105 = !DILocation(line: 1081, column: 14, scope: !10093)
!10106 = !DILocation(line: 1081, column: 21, scope: !10093)
!10107 = !DILocation(line: 1082, column: 8, scope: !10093)
!10108 = !DILocation(line: 1082, column: 14, scope: !10093)
!10109 = !DILocation(line: 1082, column: 21, scope: !10093)
!10110 = !DILocation(line: 1079, column: 12, scope: !10093)
!10111 = !DILocation(line: 1079, column: 10, scope: !10093)
!10112 = !DILocation(line: 1079, column: 5, scope: !10093)
!10113 = !DILocation(line: 1083, column: 24, scope: !10090)
!10114 = !DILocation(line: 1083, column: 30, scope: !10090)
!10115 = !DILocation(line: 1083, column: 4, scope: !10090)
!10116 = !DILocation(line: 1083, column: 8, scope: !10090)
!10117 = !DILocation(line: 1083, column: 16, scope: !10090)
!10118 = !DILocation(line: 1083, column: 22, scope: !10090)
!10119 = !DILocation(line: 1084, column: 25, scope: !10090)
!10120 = !DILocation(line: 1084, column: 31, scope: !10090)
!10121 = !DILocation(line: 1084, column: 4, scope: !10090)
!10122 = !DILocation(line: 1084, column: 8, scope: !10090)
!10123 = !DILocation(line: 1084, column: 16, scope: !10090)
!10124 = !DILocation(line: 1084, column: 23, scope: !10090)
!10125 = !DILocation(line: 1085, column: 46, scope: !10090)
!10126 = !DILocation(line: 1085, column: 52, scope: !10090)
!10127 = !DILocation(line: 1085, column: 32, scope: !10090)
!10128 = !DILocation(line: 1085, column: 35, scope: !10090)
!10129 = !DILocation(line: 1085, column: 44, scope: !10090)
!10130 = !DILocation(line: 1085, column: 4, scope: !10090)
!10131 = !DILocation(line: 1085, column: 8, scope: !10090)
!10132 = !DILocation(line: 1085, column: 16, scope: !10090)
!10133 = !DILocation(line: 1085, column: 21, scope: !10090)
!10134 = !DILocation(line: 1086, column: 4, scope: !10090)
!10135 = !DILocation(line: 1086, column: 8, scope: !10090)
!10136 = !DILocation(line: 1086, column: 16, scope: !10090)
!10137 = !DILocation(line: 1086, column: 26, scope: !10090)
!10138 = !DILocation(line: 1089, column: 2, scope: !10044)
!10139 = !DILocation(line: 1091, column: 6, scope: !10140)
!10140 = distinct !DILexicalBlock(scope: !9912, file: !3, line: 1091, column: 6)
!10141 = !DILocation(line: 1091, column: 9, scope: !10140)
!10142 = !DILocation(line: 1091, column: 6, scope: !9912)
!10143 = !DILocation(line: 1092, column: 13, scope: !10140)
!10144 = !DILocation(line: 1092, column: 11, scope: !10140)
!10145 = !DILocation(line: 1092, column: 3, scope: !10140)
!10146 = !DILocation(line: 1094, column: 45, scope: !9912)
!10147 = !DILocation(line: 1094, column: 51, scope: !9912)
!10148 = !DILocation(line: 1094, column: 57, scope: !9912)
!10149 = !DILocation(line: 1094, column: 63, scope: !9912)
!10150 = !DILocation(line: 1094, column: 25, scope: !9912)
!10151 = !DILocation(line: 1094, column: 67, scope: !9912)
!10152 = !DILocation(line: 1094, column: 2, scope: !9912)
!10153 = !DILocation(line: 1094, column: 6, scope: !9912)
!10154 = !DILocation(line: 1094, column: 22, scope: !9912)
!10155 = !DILocation(line: 1095, column: 27, scope: !9912)
!10156 = !DILocation(line: 1095, column: 31, scope: !9912)
!10157 = !DILocation(line: 1095, column: 2, scope: !9912)
!10158 = !DILocation(line: 1095, column: 6, scope: !9912)
!10159 = !DILocation(line: 1095, column: 25, scope: !9912)
!10160 = !DILocation(line: 1096, column: 6, scope: !10161)
!10161 = distinct !DILexicalBlock(scope: !9912, file: !3, line: 1096, column: 6)
!10162 = !DILocation(line: 1096, column: 14, scope: !10161)
!10163 = !DILocation(line: 1096, column: 6, scope: !9912)
!10164 = !DILocation(line: 1097, column: 3, scope: !10165)
!10165 = distinct !DILexicalBlock(scope: !10161, file: !3, line: 1096, column: 22)
!10166 = !DILocation(line: 1097, column: 7, scope: !10165)
!10167 = !DILocation(line: 1097, column: 23, scope: !10165)
!10168 = !DILocation(line: 1098, column: 2, scope: !10165)
!10169 = !DILocation(line: 1099, column: 3, scope: !10170)
!10170 = distinct !DILexicalBlock(scope: !10161, file: !3, line: 1098, column: 9)
!10171 = !DILocation(line: 1099, column: 7, scope: !10170)
!10172 = !DILocation(line: 1099, column: 23, scope: !10170)
!10173 = !DILocation(line: 1100, column: 7, scope: !10174)
!10174 = distinct !DILexicalBlock(scope: !10170, file: !3, line: 1100, column: 7)
!10175 = !DILocation(line: 1100, column: 11, scope: !10174)
!10176 = !DILocation(line: 1100, column: 7, scope: !10170)
!10177 = !DILocation(line: 1101, column: 4, scope: !10174)
!10178 = !DILocation(line: 1101, column: 8, scope: !10174)
!10179 = !DILocation(line: 1101, column: 27, scope: !10174)
!10180 = !DILocation(line: 1104, column: 8, scope: !10181)
!10181 = distinct !DILexicalBlock(scope: !9912, file: !3, line: 1104, column: 6)
!10182 = !DILocation(line: 1104, column: 13, scope: !10181)
!10183 = !DILocation(line: 1104, column: 7, scope: !10181)
!10184 = !DILocation(line: 1104, column: 6, scope: !9912)
!10185 = !DILocation(line: 1105, column: 26, scope: !10181)
!10186 = !DILocation(line: 1105, column: 3, scope: !10181)
!10187 = !DILocation(line: 1106, column: 8, scope: !10188)
!10188 = distinct !DILexicalBlock(scope: !9912, file: !3, line: 1106, column: 6)
!10189 = !DILocation(line: 1106, column: 12, scope: !10188)
!10190 = !DILocation(line: 1106, column: 7, scope: !10188)
!10191 = !DILocation(line: 1106, column: 6, scope: !9912)
!10192 = !DILocation(line: 1107, column: 19, scope: !10188)
!10193 = !DILocation(line: 1107, column: 23, scope: !10188)
!10194 = !DILocation(line: 1107, column: 3, scope: !10188)
!10195 = !DILocation(line: 1109, column: 8, scope: !9912)
!10196 = !DILocation(line: 1109, column: 14, scope: !9912)
!10197 = !DILocation(line: 1109, column: 6, scope: !9912)
!10198 = !DILocation(line: 1110, column: 44, scope: !9912)
!10199 = !DILocation(line: 1110, column: 48, scope: !9912)
!10200 = !DILocation(line: 365, column: 27, scope: !5428, inlinedAt: !9914)
!10201 = !DILocation(line: 365, column: 6, scope: !5428, inlinedAt: !9914)
!10202 = !DILocation(line: 365, column: 6, scope: !5402, inlinedAt: !9914)
!10203 = !DILocation(line: 366, column: 12, scope: !5432, inlinedAt: !9914)
!10204 = !DILocation(line: 366, column: 14, scope: !5432, inlinedAt: !9914)
!10205 = !DILocation(line: 366, column: 7, scope: !5433, inlinedAt: !9914)
!10206 = !DILocation(line: 367, column: 4, scope: !5432, inlinedAt: !9914)
!10207 = !DILocation(line: 368, column: 28, scope: !5433, inlinedAt: !9914)
!10208 = !DILocation(line: 368, column: 10, scope: !5433, inlinedAt: !9914)
!10209 = !DILocation(line: 368, column: 3, scope: !5433, inlinedAt: !9914)
!10210 = !DILocation(line: 370, column: 29, scope: !5441, inlinedAt: !9914)
!10211 = !DILocation(line: 370, column: 10, scope: !5441, inlinedAt: !9914)
!10212 = !DILocation(line: 370, column: 3, scope: !5441, inlinedAt: !9914)
!10213 = !DILocation(line: 372, column: 1, scope: !5402, inlinedAt: !9914)
!10214 = !DILocation(line: 1110, column: 27, scope: !9912)
!10215 = !DILocation(line: 1110, column: 2, scope: !9912)
!10216 = !DILocation(line: 1110, column: 7, scope: !9912)
!10217 = !DILocation(line: 1110, column: 25, scope: !9912)
!10218 = !DILocation(line: 1112, column: 18, scope: !9912)
!10219 = !DILocation(line: 1112, column: 2, scope: !9912)
!10220 = !DILocation(line: 1112, column: 5, scope: !9912)
!10221 = !DILocation(line: 1112, column: 16, scope: !9912)
!10222 = !DILocation(line: 1113, column: 6, scope: !10223)
!10223 = distinct !DILexicalBlock(scope: !9912, file: !3, line: 1113, column: 6)
!10224 = !DILocation(line: 1113, column: 9, scope: !10223)
!10225 = !DILocation(line: 1113, column: 20, scope: !10223)
!10226 = !DILocation(line: 1113, column: 6, scope: !9912)
!10227 = !DILocation(line: 1114, column: 19, scope: !10223)
!10228 = !DILocation(line: 1114, column: 25, scope: !10223)
!10229 = !DILocation(line: 1114, column: 3, scope: !10223)
!10230 = !DILocation(line: 1114, column: 6, scope: !10223)
!10231 = !DILocation(line: 1114, column: 17, scope: !10223)
!10232 = !DILocation(line: 1115, column: 6, scope: !10233)
!10233 = distinct !DILexicalBlock(scope: !9912, file: !3, line: 1115, column: 6)
!10234 = !DILocation(line: 1115, column: 9, scope: !10233)
!10235 = !DILocation(line: 1115, column: 20, scope: !10233)
!10236 = !DILocation(line: 1115, column: 6, scope: !9912)
!10237 = !DILocation(line: 1116, column: 3, scope: !10233)
!10238 = !DILocation(line: 1116, column: 6, scope: !10233)
!10239 = !DILocation(line: 1116, column: 17, scope: !10233)
!10240 = !DILocation(line: 1118, column: 20, scope: !9912)
!10241 = !DILocation(line: 1118, column: 24, scope: !9912)
!10242 = !DILocation(line: 1118, column: 2, scope: !9912)
!10243 = !DILocation(line: 1120, column: 9, scope: !9912)
!10244 = !DILocation(line: 1120, column: 13, scope: !9912)
!10245 = !DILocation(line: 1120, column: 7, scope: !9912)
!10246 = !DILocation(line: 1121, column: 9, scope: !9912)
!10247 = !DILocation(line: 1121, column: 13, scope: !9912)
!10248 = !DILocation(line: 1121, column: 7, scope: !9912)
!10249 = !DILocalVariable(name: "_r", scope: !10250, file: !3, line: 1122, type: !253)
!10250 = distinct !DILexicalBlock(scope: !9912, file: !3, line: 1122, column: 13)
!10251 = !DILocation(line: 1122, column: 13, scope: !10250)
!10252 = !DILocalVariable(name: "_v", scope: !10250, file: !3, line: 1122, type: !253)
!10253 = !DILocation(line: 1122, column: 11, scope: !9912)
!10254 = !DILocalVariable(name: "_r", scope: !10255, file: !3, line: 1123, type: !253)
!10255 = distinct !DILexicalBlock(scope: !9912, file: !3, line: 1123, column: 13)
!10256 = !DILocation(line: 1123, column: 13, scope: !10255)
!10257 = !DILocalVariable(name: "_v", scope: !10255, file: !3, line: 1123, type: !253)
!10258 = !DILocation(line: 1123, column: 11, scope: !9912)
!10259 = !DILocation(line: 1124, column: 14, scope: !9912)
!10260 = !DILocation(line: 1124, column: 18, scope: !9912)
!10261 = !DILocation(line: 1124, column: 26, scope: !9912)
!10262 = !DILocation(line: 1124, column: 11, scope: !9912)
!10263 = !DILocation(line: 1125, column: 14, scope: !9912)
!10264 = !DILocation(line: 1125, column: 18, scope: !9912)
!10265 = !DILocation(line: 1125, column: 26, scope: !9912)
!10266 = !DILocation(line: 1125, column: 11, scope: !9912)
!10267 = !DILocation(line: 1134, column: 21, scope: !10268)
!10268 = distinct !DILexicalBlock(scope: !9912, file: !3, line: 1134, column: 6)
!10269 = !DILocation(line: 1134, column: 6, scope: !10268)
!10270 = !DILocation(line: 1134, column: 25, scope: !10268)
!10271 = !DILocation(line: 1134, column: 28, scope: !10268)
!10272 = !DILocation(line: 1134, column: 32, scope: !10268)
!10273 = !DILocation(line: 1134, column: 40, scope: !10268)
!10274 = !DILocation(line: 1134, column: 6, scope: !9912)
!10275 = !DILocation(line: 1135, column: 7, scope: !10276)
!10276 = distinct !DILexicalBlock(scope: !10277, file: !3, line: 1135, column: 7)
!10277 = distinct !DILexicalBlock(scope: !10268, file: !3, line: 1134, column: 52)
!10278 = !DILocation(line: 1135, column: 13, scope: !10276)
!10279 = !DILocation(line: 1135, column: 20, scope: !10276)
!10280 = !DILocation(line: 1135, column: 31, scope: !10276)
!10281 = !DILocation(line: 1136, column: 9, scope: !10276)
!10282 = !DILocation(line: 1136, column: 14, scope: !10276)
!10283 = !DILocation(line: 1136, column: 20, scope: !10276)
!10284 = !DILocation(line: 1135, column: 7, scope: !10277)
!10285 = !DILocation(line: 1137, column: 10, scope: !10286)
!10286 = distinct !DILexicalBlock(scope: !10276, file: !3, line: 1136, column: 41)
!10287 = !DILocation(line: 1137, column: 16, scope: !10286)
!10288 = !DILocation(line: 1137, column: 23, scope: !10286)
!10289 = !DILocation(line: 1137, column: 34, scope: !10286)
!10290 = !DILocation(line: 1137, column: 8, scope: !10286)
!10291 = !DILocation(line: 1139, column: 8, scope: !10292)
!10292 = distinct !DILexicalBlock(scope: !10286, file: !3, line: 1139, column: 8)
!10293 = !DILocation(line: 1139, column: 8, scope: !10286)
!10294 = !DILocation(line: 1142, column: 25, scope: !10292)
!10295 = !DILocation(line: 1140, column: 5, scope: !10292)
!10296 = !DILocation(line: 1143, column: 3, scope: !10286)
!10297 = !DILocation(line: 1145, column: 3, scope: !10277)
!10298 = !DILocation(line: 1145, column: 8, scope: !10277)
!10299 = !DILocation(line: 1145, column: 14, scope: !10277)
!10300 = !DILocation(line: 1146, column: 2, scope: !10277)
!10301 = !DILocation(line: 1148, column: 2, scope: !9912)
!10302 = !DILocation(line: 1148, column: 7, scope: !9912)
!10303 = !DILocation(line: 1148, column: 16, scope: !9912)
!10304 = !DILocation(line: 1150, column: 7, scope: !10305)
!10305 = distinct !DILexicalBlock(scope: !9912, file: !3, line: 1150, column: 6)
!10306 = !DILocation(line: 1150, column: 11, scope: !10305)
!10307 = !DILocation(line: 1150, column: 38, scope: !10305)
!10308 = !DILocation(line: 1151, column: 8, scope: !10305)
!10309 = !DILocation(line: 1151, column: 12, scope: !10305)
!10310 = !DILocation(line: 1150, column: 6, scope: !9912)
!10311 = !DILocation(line: 1152, column: 3, scope: !10305)
!10312 = !DILocation(line: 1152, column: 6, scope: !10305)
!10313 = !DILocation(line: 1152, column: 17, scope: !10305)
!10314 = !DILocation(line: 1154, column: 3, scope: !10305)
!10315 = !DILocation(line: 1154, column: 6, scope: !10305)
!10316 = !DILocation(line: 1154, column: 17, scope: !10305)
!10317 = !DILocation(line: 1161, column: 6, scope: !10318)
!10318 = distinct !DILexicalBlock(scope: !9912, file: !3, line: 1161, column: 6)
!10319 = !DILocation(line: 1161, column: 6, scope: !9912)
!10320 = !DILocation(line: 1162, column: 17, scope: !10321)
!10321 = distinct !DILexicalBlock(scope: !10318, file: !3, line: 1161, column: 12)
!10322 = !DILocation(line: 1162, column: 3, scope: !10321)
!10323 = !DILocation(line: 1162, column: 7, scope: !10321)
!10324 = !DILocation(line: 1162, column: 15, scope: !10321)
!10325 = !DILocation(line: 1163, column: 17, scope: !10321)
!10326 = !DILocation(line: 1163, column: 3, scope: !10321)
!10327 = !DILocation(line: 1163, column: 7, scope: !10321)
!10328 = !DILocation(line: 1163, column: 15, scope: !10321)
!10329 = !DILocation(line: 1164, column: 2, scope: !10321)
!10330 = !DILocation(line: 1165, column: 13, scope: !10318)
!10331 = !DILocation(line: 1165, column: 17, scope: !10318)
!10332 = !DILocation(line: 1165, column: 27, scope: !10318)
!10333 = !DILocation(line: 1165, column: 3, scope: !10318)
!10334 = !DILocation(line: 1167, column: 6, scope: !10335)
!10335 = distinct !DILexicalBlock(scope: !9912, file: !3, line: 1167, column: 6)
!10336 = !DILocation(line: 1167, column: 6, scope: !9912)
!10337 = !DILocation(line: 1168, column: 22, scope: !10335)
!10338 = !DILocation(line: 1168, column: 26, scope: !10335)
!10339 = !DILocation(line: 1168, column: 32, scope: !10335)
!10340 = !DILocation(line: 1168, column: 38, scope: !10335)
!10341 = !DILocation(line: 1168, column: 44, scope: !10335)
!10342 = !DILocation(line: 1168, column: 54, scope: !10335)
!10343 = !DILocation(line: 1168, column: 3, scope: !10335)
!10344 = !DILocation(line: 1170, column: 6, scope: !10345)
!10345 = distinct !DILexicalBlock(scope: !9912, file: !3, line: 1170, column: 6)
!10346 = !DILocation(line: 1170, column: 11, scope: !10345)
!10347 = !DILocation(line: 1170, column: 23, scope: !10345)
!10348 = !DILocation(line: 1170, column: 26, scope: !10345)
!10349 = !DILocation(line: 1170, column: 31, scope: !10345)
!10350 = !DILocation(line: 1170, column: 43, scope: !10345)
!10351 = !DILocation(line: 1170, column: 49, scope: !10345)
!10352 = !DILocation(line: 1170, column: 6, scope: !9912)
!10353 = !DILocation(line: 1171, column: 3, scope: !10354)
!10354 = distinct !DILexicalBlock(scope: !10345, file: !3, line: 1170, column: 54)
!10355 = !DILocation(line: 1171, column: 8, scope: !10354)
!10356 = !DILocation(line: 1171, column: 15, scope: !10354)
!10357 = !DILocation(line: 1172, column: 21, scope: !10354)
!10358 = !DILocation(line: 1172, column: 25, scope: !10354)
!10359 = !DILocation(line: 1172, column: 3, scope: !10354)
!10360 = !DILocation(line: 1173, column: 2, scope: !10354)
!10361 = !DILocation(line: 1175, column: 23, scope: !9912)
!10362 = !DILocation(line: 1175, column: 12, scope: !9912)
!10363 = !DILocation(line: 1175, column: 2, scope: !9912)
!10364 = !DILocation(line: 1175, column: 7, scope: !9912)
!10365 = !DILocation(line: 1175, column: 9, scope: !9912)
!10366 = !DILocation(line: 1176, column: 1, scope: !9912)
!10367 = distinct !DISubprogram(name: "fbcon_deinit", scope: !3, file: !3, line: 1188, type: !4871, scopeLine: 1189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !241)
!10368 = !DILocalVariable(name: "vc", arg: 1, scope: !10367, file: !3, line: 1188, type: !4826)
!10369 = !DILocation(line: 1188, column: 42, scope: !10367)
!10370 = !DILocalVariable(name: "p", scope: !10367, file: !3, line: 1190, type: !5048)
!10371 = !DILocation(line: 1190, column: 24, scope: !10367)
!10372 = !DILocation(line: 1190, column: 40, scope: !10367)
!10373 = !DILocation(line: 1190, column: 44, scope: !10367)
!10374 = !DILocation(line: 1190, column: 29, scope: !10367)
!10375 = !DILocalVariable(name: "info", scope: !10367, file: !3, line: 1191, type: !199)
!10376 = !DILocation(line: 1191, column: 18, scope: !10367)
!10377 = !DILocalVariable(name: "ops", scope: !10367, file: !3, line: 1192, type: !4818)
!10378 = !DILocation(line: 1192, column: 20, scope: !10367)
!10379 = !DILocalVariable(name: "idx", scope: !10367, file: !3, line: 1193, type: !170)
!10380 = !DILocation(line: 1193, column: 6, scope: !10367)
!10381 = !DILocalVariable(name: "free_font", scope: !10367, file: !3, line: 1194, type: !720)
!10382 = !DILocation(line: 1194, column: 7, scope: !10367)
!10383 = !DILocation(line: 1196, column: 19, scope: !10367)
!10384 = !DILocation(line: 1196, column: 23, scope: !10367)
!10385 = !DILocation(line: 1196, column: 8, scope: !10367)
!10386 = !DILocation(line: 1196, column: 6, scope: !10367)
!10387 = !DILocation(line: 1198, column: 6, scope: !10388)
!10388 = distinct !DILexicalBlock(scope: !10367, file: !3, line: 1198, column: 6)
!10389 = !DILocation(line: 1198, column: 10, scope: !10388)
!10390 = !DILocation(line: 1198, column: 6, scope: !10367)
!10391 = !DILocation(line: 1199, column: 3, scope: !10388)
!10392 = !DILocation(line: 1201, column: 23, scope: !10367)
!10393 = !DILocation(line: 1201, column: 9, scope: !10367)
!10394 = !DILocation(line: 1201, column: 7, scope: !10367)
!10395 = !DILocation(line: 1203, column: 7, scope: !10396)
!10396 = distinct !DILexicalBlock(scope: !10367, file: !3, line: 1203, column: 6)
!10397 = !DILocation(line: 1203, column: 6, scope: !10367)
!10398 = !DILocation(line: 1204, column: 3, scope: !10396)
!10399 = !DILocation(line: 1206, column: 6, scope: !10400)
!10400 = distinct !DILexicalBlock(scope: !10367, file: !3, line: 1206, column: 6)
!10401 = !DILocation(line: 1206, column: 12, scope: !10400)
!10402 = !DILocation(line: 1206, column: 18, scope: !10400)
!10403 = !DILocation(line: 1206, column: 6, scope: !10367)
!10404 = !DILocation(line: 1207, column: 13, scope: !10400)
!10405 = !DILocation(line: 1207, column: 3, scope: !10400)
!10406 = !DILocation(line: 1208, column: 8, scope: !10367)
!10407 = !DILocation(line: 1208, column: 14, scope: !10367)
!10408 = !DILocation(line: 1208, column: 6, scope: !10367)
!10409 = !DILocation(line: 1210, column: 7, scope: !10410)
!10410 = distinct !DILexicalBlock(scope: !10367, file: !3, line: 1210, column: 6)
!10411 = !DILocation(line: 1210, column: 6, scope: !10367)
!10412 = !DILocation(line: 1211, column: 3, scope: !10410)
!10413 = !DILocation(line: 1213, column: 21, scope: !10414)
!10414 = distinct !DILexicalBlock(scope: !10367, file: !3, line: 1213, column: 6)
!10415 = !DILocation(line: 1213, column: 6, scope: !10414)
!10416 = !DILocation(line: 1213, column: 6, scope: !10367)
!10417 = !DILocation(line: 1214, column: 26, scope: !10414)
!10418 = !DILocation(line: 1214, column: 3, scope: !10414)
!10419 = !DILocation(line: 1216, column: 2, scope: !10367)
!10420 = !DILocation(line: 1216, column: 7, scope: !10367)
!10421 = !DILocation(line: 1216, column: 13, scope: !10367)
!10422 = !DILabel(scope: !10367, name: "finished", file: !3, line: 1217)
!10423 = !DILocation(line: 1217, column: 1, scope: !10367)
!10424 = !DILocation(line: 1219, column: 18, scope: !10367)
!10425 = !DILocation(line: 1219, column: 21, scope: !10367)
!10426 = !DILocation(line: 1219, column: 2, scope: !10367)
!10427 = !DILocation(line: 1220, column: 6, scope: !10428)
!10428 = distinct !DILexicalBlock(scope: !10367, file: !3, line: 1220, column: 6)
!10429 = !DILocation(line: 1220, column: 6, scope: !10367)
!10430 = !DILocation(line: 1221, column: 3, scope: !10428)
!10431 = !DILocation(line: 1221, column: 7, scope: !10428)
!10432 = !DILocation(line: 1221, column: 15, scope: !10428)
!10433 = !DILocation(line: 1221, column: 20, scope: !10428)
!10434 = !DILocation(line: 1223, column: 6, scope: !10435)
!10435 = distinct !DILexicalBlock(scope: !10367, file: !3, line: 1223, column: 6)
!10436 = !DILocation(line: 1223, column: 10, scope: !10435)
!10437 = !DILocation(line: 1223, column: 26, scope: !10435)
!10438 = !DILocation(line: 1223, column: 29, scope: !10435)
!10439 = !DILocation(line: 1223, column: 33, scope: !10435)
!10440 = !DILocation(line: 1223, column: 6, scope: !10367)
!10441 = !DILocation(line: 1224, column: 18, scope: !10435)
!10442 = !DILocation(line: 1224, column: 3, scope: !10435)
!10443 = !DILocation(line: 1226, column: 7, scope: !10444)
!10444 = distinct !DILexicalBlock(scope: !10367, file: !3, line: 1226, column: 6)
!10445 = !DILocation(line: 1226, column: 6, scope: !10367)
!10446 = !DILocation(line: 1227, column: 3, scope: !10444)
!10447 = !DILocation(line: 1229, column: 6, scope: !10448)
!10448 = distinct !DILexicalBlock(scope: !10367, file: !3, line: 1229, column: 6)
!10449 = !DILocation(line: 1229, column: 10, scope: !10448)
!10450 = !DILocation(line: 1229, column: 20, scope: !10448)
!10451 = !DILocation(line: 1229, column: 17, scope: !10448)
!10452 = !DILocation(line: 1229, column: 6, scope: !10367)
!10453 = !DILocation(line: 1230, column: 14, scope: !10448)
!10454 = !DILocation(line: 1230, column: 3, scope: !10448)
!10455 = !DILocation(line: 1232, column: 2, scope: !10367)
!10456 = distinct !DISubprogram(name: "fbcon_clear", scope: !3, file: !3, line: 1260, type: !4875, scopeLine: 1262, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !241)
!10457 = !DILocalVariable(name: "vc", arg: 1, scope: !10456, file: !3, line: 1260, type: !4826)
!10458 = !DILocation(line: 1260, column: 41, scope: !10456)
!10459 = !DILocalVariable(name: "sy", arg: 2, scope: !10456, file: !3, line: 1260, type: !170)
!10460 = !DILocation(line: 1260, column: 49, scope: !10456)
!10461 = !DILocalVariable(name: "sx", arg: 3, scope: !10456, file: !3, line: 1260, type: !170)
!10462 = !DILocation(line: 1260, column: 57, scope: !10456)
!10463 = !DILocalVariable(name: "height", arg: 4, scope: !10456, file: !3, line: 1260, type: !170)
!10464 = !DILocation(line: 1260, column: 65, scope: !10456)
!10465 = !DILocalVariable(name: "width", arg: 5, scope: !10456, file: !3, line: 1261, type: !170)
!10466 = !DILocation(line: 1261, column: 8, scope: !10456)
!10467 = !DILocalVariable(name: "info", scope: !10456, file: !3, line: 1263, type: !199)
!10468 = !DILocation(line: 1263, column: 18, scope: !10456)
!10469 = !DILocation(line: 1263, column: 50, scope: !10456)
!10470 = !DILocation(line: 1263, column: 54, scope: !10456)
!10471 = !DILocation(line: 1263, column: 39, scope: !10456)
!10472 = !DILocation(line: 1263, column: 25, scope: !10456)
!10473 = !DILocalVariable(name: "ops", scope: !10456, file: !3, line: 1264, type: !4818)
!10474 = !DILocation(line: 1264, column: 20, scope: !10456)
!10475 = !DILocation(line: 1264, column: 26, scope: !10456)
!10476 = !DILocation(line: 1264, column: 32, scope: !10456)
!10477 = !DILocalVariable(name: "p", scope: !10456, file: !3, line: 1266, type: !5048)
!10478 = !DILocation(line: 1266, column: 24, scope: !10456)
!10479 = !DILocation(line: 1266, column: 40, scope: !10456)
!10480 = !DILocation(line: 1266, column: 44, scope: !10456)
!10481 = !DILocation(line: 1266, column: 29, scope: !10456)
!10482 = !DILocalVariable(name: "y_break", scope: !10456, file: !3, line: 1267, type: !10483)
!10483 = !DIDerivedType(tag: DW_TAG_typedef, name: "u_int", file: !205, line: 81, baseType: !7)
!10484 = !DILocation(line: 1267, column: 8, scope: !10456)
!10485 = !DILocation(line: 1269, column: 24, scope: !10486)
!10486 = distinct !DILexicalBlock(scope: !10456, file: !3, line: 1269, column: 6)
!10487 = !DILocation(line: 1269, column: 28, scope: !10486)
!10488 = !DILocation(line: 1269, column: 6, scope: !10486)
!10489 = !DILocation(line: 1269, column: 6, scope: !10456)
!10490 = !DILocation(line: 1270, column: 3, scope: !10486)
!10491 = !DILocation(line: 1272, column: 7, scope: !10492)
!10492 = distinct !DILexicalBlock(scope: !10456, file: !3, line: 1272, column: 6)
!10493 = !DILocation(line: 1272, column: 14, scope: !10492)
!10494 = !DILocation(line: 1272, column: 18, scope: !10492)
!10495 = !DILocation(line: 1272, column: 6, scope: !10456)
!10496 = !DILocation(line: 1273, column: 3, scope: !10492)
!10497 = !DILocation(line: 1275, column: 6, scope: !10498)
!10498 = distinct !DILexicalBlock(scope: !10456, file: !3, line: 1275, column: 6)
!10499 = !DILocation(line: 1275, column: 11, scope: !10498)
!10500 = !DILocation(line: 1275, column: 15, scope: !10498)
!10501 = !DILocation(line: 1275, column: 9, scope: !10498)
!10502 = !DILocation(line: 1275, column: 22, scope: !10498)
!10503 = !DILocation(line: 1275, column: 25, scope: !10498)
!10504 = !DILocation(line: 1275, column: 29, scope: !10498)
!10505 = !DILocation(line: 1275, column: 39, scope: !10498)
!10506 = !DILocation(line: 1275, column: 36, scope: !10498)
!10507 = !DILocation(line: 1275, column: 6, scope: !10456)
!10508 = !DILocation(line: 1276, column: 3, scope: !10509)
!10509 = distinct !DILexicalBlock(scope: !10498, file: !3, line: 1275, column: 51)
!10510 = !DILocation(line: 1276, column: 7, scope: !10509)
!10511 = !DILocation(line: 1276, column: 14, scope: !10509)
!10512 = !DILocation(line: 1283, column: 23, scope: !10509)
!10513 = !DILocation(line: 1283, column: 3, scope: !10509)
!10514 = !DILocation(line: 1284, column: 2, scope: !10509)
!10515 = !DILocation(line: 1288, column: 12, scope: !10456)
!10516 = !DILocation(line: 1288, column: 15, scope: !10456)
!10517 = !DILocation(line: 1288, column: 23, scope: !10456)
!10518 = !DILocation(line: 1288, column: 26, scope: !10456)
!10519 = !DILocation(line: 1288, column: 21, scope: !10456)
!10520 = !DILocation(line: 1288, column: 10, scope: !10456)
!10521 = !DILocation(line: 1289, column: 6, scope: !10522)
!10522 = distinct !DILexicalBlock(scope: !10456, file: !3, line: 1289, column: 6)
!10523 = !DILocation(line: 1289, column: 11, scope: !10522)
!10524 = !DILocation(line: 1289, column: 9, scope: !10522)
!10525 = !DILocation(line: 1289, column: 19, scope: !10522)
!10526 = !DILocation(line: 1289, column: 22, scope: !10522)
!10527 = !DILocation(line: 1289, column: 27, scope: !10522)
!10528 = !DILocation(line: 1289, column: 25, scope: !10522)
!10529 = !DILocation(line: 1289, column: 34, scope: !10522)
!10530 = !DILocation(line: 1289, column: 41, scope: !10522)
!10531 = !DILocation(line: 1289, column: 38, scope: !10522)
!10532 = !DILocation(line: 1289, column: 6, scope: !10456)
!10533 = !DILocalVariable(name: "b", scope: !10534, file: !3, line: 1290, type: !10483)
!10534 = distinct !DILexicalBlock(scope: !10522, file: !3, line: 1289, column: 50)
!10535 = !DILocation(line: 1290, column: 9, scope: !10534)
!10536 = !DILocation(line: 1290, column: 13, scope: !10534)
!10537 = !DILocation(line: 1290, column: 23, scope: !10534)
!10538 = !DILocation(line: 1290, column: 21, scope: !10534)
!10539 = !DILocation(line: 1291, column: 3, scope: !10534)
!10540 = !DILocation(line: 1291, column: 8, scope: !10534)
!10541 = !DILocation(line: 1291, column: 14, scope: !10534)
!10542 = !DILocation(line: 1291, column: 18, scope: !10534)
!10543 = !DILocation(line: 1291, column: 31, scope: !10534)
!10544 = !DILocation(line: 1291, column: 34, scope: !10534)
!10545 = !DILocation(line: 1291, column: 24, scope: !10534)
!10546 = !DILocation(line: 1291, column: 39, scope: !10534)
!10547 = !DILocation(line: 1291, column: 43, scope: !10534)
!10548 = !DILocation(line: 1291, column: 46, scope: !10534)
!10549 = !DILocation(line: 1292, column: 3, scope: !10534)
!10550 = !DILocation(line: 1292, column: 8, scope: !10534)
!10551 = !DILocation(line: 1292, column: 14, scope: !10534)
!10552 = !DILocation(line: 1292, column: 18, scope: !10534)
!10553 = !DILocation(line: 1292, column: 31, scope: !10534)
!10554 = !DILocation(line: 1292, column: 34, scope: !10534)
!10555 = !DILocation(line: 1292, column: 39, scope: !10534)
!10556 = !DILocation(line: 1292, column: 37, scope: !10534)
!10557 = !DILocation(line: 1292, column: 24, scope: !10534)
!10558 = !DILocation(line: 1292, column: 43, scope: !10534)
!10559 = !DILocation(line: 1292, column: 47, scope: !10534)
!10560 = !DILocation(line: 1292, column: 56, scope: !10534)
!10561 = !DILocation(line: 1292, column: 54, scope: !10534)
!10562 = !DILocation(line: 1293, column: 6, scope: !10534)
!10563 = !DILocation(line: 1294, column: 2, scope: !10534)
!10564 = !DILocation(line: 1295, column: 3, scope: !10522)
!10565 = !DILocation(line: 1295, column: 8, scope: !10522)
!10566 = !DILocation(line: 1295, column: 14, scope: !10522)
!10567 = !DILocation(line: 1295, column: 18, scope: !10522)
!10568 = !DILocation(line: 1295, column: 31, scope: !10522)
!10569 = !DILocation(line: 1295, column: 34, scope: !10522)
!10570 = !DILocation(line: 1295, column: 24, scope: !10522)
!10571 = !DILocation(line: 1295, column: 39, scope: !10522)
!10572 = !DILocation(line: 1295, column: 43, scope: !10522)
!10573 = !DILocation(line: 1295, column: 51, scope: !10522)
!10574 = !DILocation(line: 1296, column: 1, scope: !10456)
!10575 = distinct !DISubprogram(name: "fbcon_putc", scope: !3, file: !3, line: 1311, type: !4879, scopeLine: 1312, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !241)
!10576 = !DILocalVariable(name: "vc", arg: 1, scope: !10575, file: !3, line: 1311, type: !4826)
!10577 = !DILocation(line: 1311, column: 40, scope: !10575)
!10578 = !DILocalVariable(name: "c", arg: 2, scope: !10575, file: !3, line: 1311, type: !170)
!10579 = !DILocation(line: 1311, column: 48, scope: !10575)
!10580 = !DILocalVariable(name: "ypos", arg: 3, scope: !10575, file: !3, line: 1311, type: !170)
!10581 = !DILocation(line: 1311, column: 55, scope: !10575)
!10582 = !DILocalVariable(name: "xpos", arg: 4, scope: !10575, file: !3, line: 1311, type: !170)
!10583 = !DILocation(line: 1311, column: 65, scope: !10575)
!10584 = !DILocalVariable(name: "chr", scope: !10575, file: !3, line: 1313, type: !198)
!10585 = !DILocation(line: 1313, column: 17, scope: !10575)
!10586 = !DILocation(line: 1315, column: 2, scope: !10575)
!10587 = !DILocation(line: 1316, column: 14, scope: !10575)
!10588 = !DILocation(line: 1316, column: 27, scope: !10575)
!10589 = !DILocation(line: 1316, column: 33, scope: !10575)
!10590 = !DILocation(line: 1316, column: 2, scope: !10575)
!10591 = !DILocation(line: 1317, column: 1, scope: !10575)
!10592 = distinct !DISubprogram(name: "fbcon_putcs", scope: !3, file: !3, line: 1298, type: !4883, scopeLine: 1300, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !241)
!10593 = !DILocalVariable(name: "vc", arg: 1, scope: !10592, file: !3, line: 1298, type: !4826)
!10594 = !DILocation(line: 1298, column: 41, scope: !10592)
!10595 = !DILocalVariable(name: "s", arg: 2, scope: !10592, file: !3, line: 1298, type: !4885)
!10596 = !DILocation(line: 1298, column: 67, scope: !10592)
!10597 = !DILocalVariable(name: "count", arg: 3, scope: !10592, file: !3, line: 1299, type: !170)
!10598 = !DILocation(line: 1299, column: 8, scope: !10592)
!10599 = !DILocalVariable(name: "ypos", arg: 4, scope: !10592, file: !3, line: 1299, type: !170)
!10600 = !DILocation(line: 1299, column: 19, scope: !10592)
!10601 = !DILocalVariable(name: "xpos", arg: 5, scope: !10592, file: !3, line: 1299, type: !170)
!10602 = !DILocation(line: 1299, column: 29, scope: !10592)
!10603 = !DILocalVariable(name: "info", scope: !10592, file: !3, line: 1301, type: !199)
!10604 = !DILocation(line: 1301, column: 18, scope: !10592)
!10605 = !DILocation(line: 1301, column: 50, scope: !10592)
!10606 = !DILocation(line: 1301, column: 54, scope: !10592)
!10607 = !DILocation(line: 1301, column: 39, scope: !10592)
!10608 = !DILocation(line: 1301, column: 25, scope: !10592)
!10609 = !DILocalVariable(name: "p", scope: !10592, file: !3, line: 1302, type: !5048)
!10610 = !DILocation(line: 1302, column: 24, scope: !10592)
!10611 = !DILocation(line: 1302, column: 40, scope: !10592)
!10612 = !DILocation(line: 1302, column: 44, scope: !10592)
!10613 = !DILocation(line: 1302, column: 29, scope: !10592)
!10614 = !DILocalVariable(name: "ops", scope: !10592, file: !3, line: 1303, type: !4818)
!10615 = !DILocation(line: 1303, column: 20, scope: !10592)
!10616 = !DILocation(line: 1303, column: 26, scope: !10592)
!10617 = !DILocation(line: 1303, column: 32, scope: !10592)
!10618 = !DILocation(line: 1305, column: 25, scope: !10619)
!10619 = distinct !DILexicalBlock(scope: !10592, file: !3, line: 1305, column: 6)
!10620 = !DILocation(line: 1305, column: 29, scope: !10619)
!10621 = !DILocation(line: 1305, column: 7, scope: !10619)
!10622 = !DILocation(line: 1305, column: 6, scope: !10592)
!10623 = !DILocation(line: 1306, column: 3, scope: !10619)
!10624 = !DILocation(line: 1306, column: 8, scope: !10619)
!10625 = !DILocation(line: 1306, column: 14, scope: !10619)
!10626 = !DILocation(line: 1306, column: 18, scope: !10619)
!10627 = !DILocation(line: 1306, column: 24, scope: !10619)
!10628 = !DILocation(line: 1306, column: 27, scope: !10619)
!10629 = !DILocation(line: 1306, column: 41, scope: !10619)
!10630 = !DILocation(line: 1306, column: 44, scope: !10619)
!10631 = !DILocation(line: 1306, column: 34, scope: !10619)
!10632 = !DILocation(line: 1306, column: 51, scope: !10619)
!10633 = !DILocation(line: 1307, column: 17, scope: !10619)
!10634 = !DILocation(line: 1307, column: 21, scope: !10619)
!10635 = !DILocation(line: 1307, column: 27, scope: !10619)
!10636 = !DILocation(line: 1307, column: 7, scope: !10619)
!10637 = !DILocation(line: 1308, column: 17, scope: !10619)
!10638 = !DILocation(line: 1308, column: 21, scope: !10619)
!10639 = !DILocation(line: 1308, column: 27, scope: !10619)
!10640 = !DILocation(line: 1308, column: 7, scope: !10619)
!10641 = !DILocation(line: 1309, column: 1, scope: !10592)
!10642 = distinct !DISubprogram(name: "fbcon_scroll", scope: !3, file: !3, line: 1693, type: !4890, scopeLine: 1695, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !241)
!10643 = !DILocalVariable(name: "vc", arg: 1, scope: !10642, file: !3, line: 1693, type: !4826)
!10644 = !DILocation(line: 1693, column: 42, scope: !10642)
!10645 = !DILocalVariable(name: "t", arg: 2, scope: !10642, file: !3, line: 1693, type: !7)
!10646 = !DILocation(line: 1693, column: 59, scope: !10642)
!10647 = !DILocalVariable(name: "b", arg: 3, scope: !10642, file: !3, line: 1693, type: !7)
!10648 = !DILocation(line: 1693, column: 75, scope: !10642)
!10649 = !DILocalVariable(name: "dir", arg: 4, scope: !10642, file: !3, line: 1694, type: !126)
!10650 = !DILocation(line: 1694, column: 19, scope: !10642)
!10651 = !DILocalVariable(name: "count", arg: 5, scope: !10642, file: !3, line: 1694, type: !7)
!10652 = !DILocation(line: 1694, column: 37, scope: !10642)
!10653 = !DILocalVariable(name: "info", scope: !10642, file: !3, line: 1696, type: !199)
!10654 = !DILocation(line: 1696, column: 18, scope: !10642)
!10655 = !DILocation(line: 1696, column: 50, scope: !10642)
!10656 = !DILocation(line: 1696, column: 54, scope: !10642)
!10657 = !DILocation(line: 1696, column: 39, scope: !10642)
!10658 = !DILocation(line: 1696, column: 25, scope: !10642)
!10659 = !DILocalVariable(name: "p", scope: !10642, file: !3, line: 1697, type: !5048)
!10660 = !DILocation(line: 1697, column: 24, scope: !10642)
!10661 = !DILocation(line: 1697, column: 40, scope: !10642)
!10662 = !DILocation(line: 1697, column: 44, scope: !10642)
!10663 = !DILocation(line: 1697, column: 29, scope: !10642)
!10664 = !DILocalVariable(name: "scroll_partial", scope: !10642, file: !3, line: 1698, type: !170)
!10665 = !DILocation(line: 1698, column: 6, scope: !10642)
!10666 = !DILocation(line: 1698, column: 23, scope: !10642)
!10667 = !DILocation(line: 1698, column: 29, scope: !10642)
!10668 = !DILocation(line: 1698, column: 35, scope: !10642)
!10669 = !DILocation(line: 1700, column: 24, scope: !10670)
!10670 = distinct !DILexicalBlock(scope: !10642, file: !3, line: 1700, column: 6)
!10671 = !DILocation(line: 1700, column: 28, scope: !10670)
!10672 = !DILocation(line: 1700, column: 6, scope: !10670)
!10673 = !DILocation(line: 1700, column: 6, scope: !10642)
!10674 = !DILocation(line: 1701, column: 3, scope: !10670)
!10675 = !DILocation(line: 1703, column: 15, scope: !10642)
!10676 = !DILocation(line: 1703, column: 2, scope: !10642)
!10677 = !DILocation(line: 1711, column: 10, scope: !10642)
!10678 = !DILocation(line: 1711, column: 2, scope: !10642)
!10679 = !DILocation(line: 1713, column: 7, scope: !10680)
!10680 = distinct !DILexicalBlock(scope: !10681, file: !3, line: 1713, column: 7)
!10681 = distinct !DILexicalBlock(scope: !10642, file: !3, line: 1711, column: 15)
!10682 = !DILocation(line: 1713, column: 15, scope: !10680)
!10683 = !DILocation(line: 1713, column: 19, scope: !10680)
!10684 = !DILocation(line: 1713, column: 13, scope: !10680)
!10685 = !DILocation(line: 1713, column: 7, scope: !10681)
!10686 = !DILocation(line: 1714, column: 12, scope: !10680)
!10687 = !DILocation(line: 1714, column: 16, scope: !10680)
!10688 = !DILocation(line: 1714, column: 10, scope: !10680)
!10689 = !DILocation(line: 1714, column: 4, scope: !10680)
!10690 = !DILocation(line: 1715, column: 7, scope: !10691)
!10691 = distinct !DILexicalBlock(scope: !10681, file: !3, line: 1715, column: 7)
!10692 = !DILocation(line: 1715, column: 18, scope: !10691)
!10693 = !DILocation(line: 1715, column: 7, scope: !10681)
!10694 = !DILocation(line: 1716, column: 4, scope: !10691)
!10695 = !DILocation(line: 1717, column: 11, scope: !10681)
!10696 = !DILocation(line: 1717, column: 14, scope: !10681)
!10697 = !DILocation(line: 1717, column: 3, scope: !10681)
!10698 = !DILocation(line: 1719, column: 22, scope: !10699)
!10699 = distinct !DILexicalBlock(scope: !10681, file: !3, line: 1717, column: 26)
!10700 = !DILocation(line: 1719, column: 26, scope: !10699)
!10701 = !DILocation(line: 1719, column: 32, scope: !10699)
!10702 = !DILocation(line: 1719, column: 35, scope: !10699)
!10703 = !DILocation(line: 1719, column: 38, scope: !10699)
!10704 = !DILocation(line: 1719, column: 42, scope: !10699)
!10705 = !DILocation(line: 1719, column: 40, scope: !10699)
!10706 = !DILocation(line: 1719, column: 46, scope: !10699)
!10707 = !DILocation(line: 1719, column: 44, scope: !10699)
!10708 = !DILocation(line: 1720, column: 10, scope: !10699)
!10709 = !DILocation(line: 1719, column: 4, scope: !10699)
!10710 = !DILocation(line: 1721, column: 16, scope: !10699)
!10711 = !DILocation(line: 1721, column: 20, scope: !10699)
!10712 = !DILocation(line: 1721, column: 24, scope: !10699)
!10713 = !DILocation(line: 1721, column: 22, scope: !10699)
!10714 = !DILocation(line: 1721, column: 34, scope: !10699)
!10715 = !DILocation(line: 1721, column: 41, scope: !10699)
!10716 = !DILocation(line: 1721, column: 45, scope: !10699)
!10717 = !DILocation(line: 1721, column: 4, scope: !10699)
!10718 = !DILocation(line: 1722, column: 36, scope: !10699)
!10719 = !DILocation(line: 1722, column: 40, scope: !10699)
!10720 = !DILocation(line: 1723, column: 8, scope: !10699)
!10721 = !DILocation(line: 1723, column: 12, scope: !10699)
!10722 = !DILocation(line: 1724, column: 9, scope: !10699)
!10723 = !DILocation(line: 1724, column: 13, scope: !10699)
!10724 = !DILocation(line: 1724, column: 11, scope: !10699)
!10725 = !DILocation(line: 1723, column: 24, scope: !10699)
!10726 = !DILocation(line: 1722, column: 50, scope: !10699)
!10727 = !DILocation(line: 1722, column: 16, scope: !10699)
!10728 = !DILocation(line: 1725, column: 9, scope: !10699)
!10729 = !DILocation(line: 1725, column: 13, scope: !10699)
!10730 = !DILocation(line: 1726, column: 9, scope: !10699)
!10731 = !DILocation(line: 1726, column: 13, scope: !10699)
!10732 = !DILocation(line: 1726, column: 27, scope: !10699)
!10733 = !DILocation(line: 1726, column: 25, scope: !10699)
!10734 = !DILocation(line: 1722, column: 4, scope: !10699)
!10735 = !DILocation(line: 1727, column: 4, scope: !10699)
!10736 = !DILocation(line: 1730, column: 8, scope: !10737)
!10737 = distinct !DILexicalBlock(scope: !10699, file: !3, line: 1730, column: 8)
!10738 = !DILocation(line: 1730, column: 12, scope: !10737)
!10739 = !DILocation(line: 1730, column: 10, scope: !10737)
!10740 = !DILocation(line: 1730, column: 16, scope: !10737)
!10741 = !DILocation(line: 1730, column: 14, scope: !10737)
!10742 = !DILocation(line: 1730, column: 28, scope: !10737)
!10743 = !DILocation(line: 1730, column: 32, scope: !10737)
!10744 = !DILocation(line: 1730, column: 26, scope: !10737)
!10745 = !DILocation(line: 1730, column: 40, scope: !10737)
!10746 = !DILocation(line: 1730, column: 22, scope: !10737)
!10747 = !DILocation(line: 1730, column: 8, scope: !10699)
!10748 = !DILocation(line: 1731, column: 9, scope: !10749)
!10749 = distinct !DILexicalBlock(scope: !10750, file: !3, line: 1731, column: 9)
!10750 = distinct !DILexicalBlock(scope: !10737, file: !3, line: 1730, column: 46)
!10751 = !DILocation(line: 1731, column: 11, scope: !10749)
!10752 = !DILocation(line: 1731, column: 9, scope: !10750)
!10753 = !DILocation(line: 1732, column: 18, scope: !10749)
!10754 = !DILocation(line: 1732, column: 28, scope: !10749)
!10755 = !DILocation(line: 1732, column: 38, scope: !10749)
!10756 = !DILocation(line: 1733, column: 11, scope: !10749)
!10757 = !DILocation(line: 1733, column: 15, scope: !10749)
!10758 = !DILocation(line: 1732, column: 6, scope: !10749)
!10759 = !DILocation(line: 1734, column: 14, scope: !10750)
!10760 = !DILocation(line: 1734, column: 18, scope: !10750)
!10761 = !DILocation(line: 1734, column: 5, scope: !10750)
!10762 = !DILocation(line: 1735, column: 9, scope: !10763)
!10763 = distinct !DILexicalBlock(scope: !10750, file: !3, line: 1735, column: 9)
!10764 = !DILocation(line: 1735, column: 13, scope: !10763)
!10765 = !DILocation(line: 1735, column: 23, scope: !10763)
!10766 = !DILocation(line: 1735, column: 21, scope: !10763)
!10767 = !DILocation(line: 1735, column: 25, scope: !10763)
!10768 = !DILocation(line: 1735, column: 9, scope: !10750)
!10769 = !DILocation(line: 1736, column: 18, scope: !10763)
!10770 = !DILocation(line: 1736, column: 22, scope: !10763)
!10771 = !DILocation(line: 1736, column: 26, scope: !10763)
!10772 = !DILocation(line: 1736, column: 24, scope: !10763)
!10773 = !DILocation(line: 1736, column: 36, scope: !10763)
!10774 = !DILocation(line: 1737, column: 11, scope: !10763)
!10775 = !DILocation(line: 1737, column: 15, scope: !10763)
!10776 = !DILocation(line: 1737, column: 25, scope: !10763)
!10777 = !DILocation(line: 1737, column: 23, scope: !10763)
!10778 = !DILocation(line: 1738, column: 11, scope: !10763)
!10779 = !DILocation(line: 1738, column: 15, scope: !10763)
!10780 = !DILocation(line: 1736, column: 6, scope: !10763)
!10781 = !DILocation(line: 1739, column: 4, scope: !10750)
!10782 = !DILocation(line: 1739, column: 15, scope: !10783)
!10783 = distinct !DILexicalBlock(scope: !10737, file: !3, line: 1739, column: 15)
!10784 = !DILocation(line: 1739, column: 21, scope: !10783)
!10785 = !DILocation(line: 1739, column: 27, scope: !10783)
!10786 = !DILocation(line: 1739, column: 15, scope: !10737)
!10787 = !DILocation(line: 1740, column: 17, scope: !10783)
!10788 = !DILocation(line: 1740, column: 21, scope: !10783)
!10789 = !DILocation(line: 1740, column: 25, scope: !10783)
!10790 = !DILocation(line: 1740, column: 23, scope: !10783)
!10791 = !DILocation(line: 1740, column: 35, scope: !10783)
!10792 = !DILocation(line: 1741, column: 10, scope: !10783)
!10793 = !DILocation(line: 1741, column: 14, scope: !10783)
!10794 = !DILocation(line: 1741, column: 12, scope: !10783)
!10795 = !DILocation(line: 1741, column: 18, scope: !10783)
!10796 = !DILocation(line: 1741, column: 16, scope: !10783)
!10797 = !DILocation(line: 1741, column: 25, scope: !10783)
!10798 = !DILocation(line: 1741, column: 29, scope: !10783)
!10799 = !DILocation(line: 1740, column: 5, scope: !10783)
!10800 = !DILocation(line: 1743, column: 5, scope: !10783)
!10801 = !DILocation(line: 1744, column: 16, scope: !10699)
!10802 = !DILocation(line: 1744, column: 20, scope: !10699)
!10803 = !DILocation(line: 1744, column: 24, scope: !10699)
!10804 = !DILocation(line: 1744, column: 22, scope: !10699)
!10805 = !DILocation(line: 1744, column: 34, scope: !10699)
!10806 = !DILocation(line: 1744, column: 41, scope: !10699)
!10807 = !DILocation(line: 1744, column: 45, scope: !10699)
!10808 = !DILocation(line: 1744, column: 4, scope: !10699)
!10809 = !DILocation(line: 1745, column: 4, scope: !10699)
!10810 = !DILocation(line: 1748, column: 9, scope: !10811)
!10811 = distinct !DILexicalBlock(scope: !10699, file: !3, line: 1748, column: 8)
!10812 = !DILocation(line: 1748, column: 12, scope: !10811)
!10813 = !DILocation(line: 1748, column: 22, scope: !10811)
!10814 = !DILocation(line: 1748, column: 20, scope: !10811)
!10815 = !DILocation(line: 1749, column: 14, scope: !10811)
!10816 = !DILocation(line: 1749, column: 17, scope: !10811)
!10817 = !DILocation(line: 1749, column: 25, scope: !10811)
!10818 = !DILocation(line: 1749, column: 29, scope: !10811)
!10819 = !DILocation(line: 1749, column: 23, scope: !10811)
!10820 = !DILocation(line: 1749, column: 11, scope: !10811)
!10821 = !DILocation(line: 1748, column: 28, scope: !10811)
!10822 = !DILocation(line: 1750, column: 8, scope: !10811)
!10823 = !DILocation(line: 1750, column: 14, scope: !10811)
!10824 = !DILocation(line: 1750, column: 29, scope: !10811)
!10825 = !DILocation(line: 1750, column: 33, scope: !10811)
!10826 = !DILocation(line: 1750, column: 37, scope: !10811)
!10827 = !DILocation(line: 1750, column: 35, scope: !10811)
!10828 = !DILocation(line: 1750, column: 42, scope: !10811)
!10829 = !DILocation(line: 1750, column: 46, scope: !10811)
!10830 = !DILocation(line: 1750, column: 39, scope: !10811)
!10831 = !DILocation(line: 1751, column: 5, scope: !10811)
!10832 = !DILocation(line: 1751, column: 9, scope: !10811)
!10833 = !DILocation(line: 1752, column: 9, scope: !10811)
!10834 = !DILocation(line: 1752, column: 13, scope: !10811)
!10835 = !DILocation(line: 1752, column: 17, scope: !10811)
!10836 = !DILocation(line: 1752, column: 15, scope: !10811)
!10837 = !DILocation(line: 1752, column: 21, scope: !10811)
!10838 = !DILocation(line: 1752, column: 19, scope: !10811)
!10839 = !DILocation(line: 1753, column: 10, scope: !10811)
!10840 = !DILocation(line: 1753, column: 14, scope: !10811)
!10841 = !DILocation(line: 1753, column: 8, scope: !10811)
!10842 = !DILocation(line: 1753, column: 22, scope: !10811)
!10843 = !DILocation(line: 1752, column: 27, scope: !10811)
!10844 = !DILocation(line: 1748, column: 8, scope: !10699)
!10845 = !DILocation(line: 1754, column: 9, scope: !10846)
!10846 = distinct !DILexicalBlock(scope: !10847, file: !3, line: 1754, column: 9)
!10847 = distinct !DILexicalBlock(scope: !10811, file: !3, line: 1753, column: 31)
!10848 = !DILocation(line: 1754, column: 11, scope: !10846)
!10849 = !DILocation(line: 1754, column: 9, scope: !10847)
!10850 = !DILocation(line: 1755, column: 24, scope: !10846)
!10851 = !DILocation(line: 1755, column: 28, scope: !10846)
!10852 = !DILocation(line: 1755, column: 34, scope: !10846)
!10853 = !DILocation(line: 1755, column: 37, scope: !10846)
!10854 = !DILocation(line: 1755, column: 6, scope: !10846)
!10855 = !DILocation(line: 1756, column: 20, scope: !10847)
!10856 = !DILocation(line: 1756, column: 24, scope: !10847)
!10857 = !DILocation(line: 1756, column: 27, scope: !10847)
!10858 = !DILocation(line: 1756, column: 5, scope: !10847)
!10859 = !DILocation(line: 1757, column: 9, scope: !10860)
!10860 = distinct !DILexicalBlock(scope: !10847, file: !3, line: 1757, column: 9)
!10861 = !DILocation(line: 1757, column: 13, scope: !10860)
!10862 = !DILocation(line: 1757, column: 23, scope: !10860)
!10863 = !DILocation(line: 1757, column: 21, scope: !10860)
!10864 = !DILocation(line: 1757, column: 25, scope: !10860)
!10865 = !DILocation(line: 1757, column: 9, scope: !10847)
!10866 = !DILocation(line: 1758, column: 24, scope: !10860)
!10867 = !DILocation(line: 1758, column: 28, scope: !10860)
!10868 = !DILocation(line: 1758, column: 31, scope: !10860)
!10869 = !DILocation(line: 1759, column: 10, scope: !10860)
!10870 = !DILocation(line: 1759, column: 14, scope: !10860)
!10871 = !DILocation(line: 1759, column: 24, scope: !10860)
!10872 = !DILocation(line: 1759, column: 22, scope: !10860)
!10873 = !DILocation(line: 1759, column: 27, scope: !10860)
!10874 = !DILocation(line: 1758, column: 6, scope: !10860)
!10875 = !DILocation(line: 1760, column: 4, scope: !10847)
!10876 = !DILocation(line: 1761, column: 23, scope: !10811)
!10877 = !DILocation(line: 1761, column: 27, scope: !10811)
!10878 = !DILocation(line: 1761, column: 30, scope: !10811)
!10879 = !DILocation(line: 1761, column: 34, scope: !10811)
!10880 = !DILocation(line: 1761, column: 32, scope: !10811)
!10881 = !DILocation(line: 1761, column: 41, scope: !10811)
!10882 = !DILocation(line: 1761, column: 45, scope: !10811)
!10883 = !DILocation(line: 1761, column: 43, scope: !10811)
!10884 = !DILocation(line: 1761, column: 49, scope: !10811)
!10885 = !DILocation(line: 1761, column: 47, scope: !10811)
!10886 = !DILocation(line: 1761, column: 56, scope: !10811)
!10887 = !DILocation(line: 1761, column: 5, scope: !10811)
!10888 = !DILocation(line: 1762, column: 16, scope: !10699)
!10889 = !DILocation(line: 1762, column: 20, scope: !10699)
!10890 = !DILocation(line: 1762, column: 24, scope: !10699)
!10891 = !DILocation(line: 1762, column: 22, scope: !10699)
!10892 = !DILocation(line: 1762, column: 34, scope: !10699)
!10893 = !DILocation(line: 1762, column: 41, scope: !10699)
!10894 = !DILocation(line: 1762, column: 45, scope: !10699)
!10895 = !DILocation(line: 1762, column: 4, scope: !10699)
!10896 = !DILocation(line: 1763, column: 4, scope: !10699)
!10897 = !DILocation(line: 1766, column: 9, scope: !10898)
!10898 = distinct !DILexicalBlock(scope: !10699, file: !3, line: 1766, column: 8)
!10899 = !DILocation(line: 1766, column: 12, scope: !10898)
!10900 = !DILocation(line: 1766, column: 22, scope: !10898)
!10901 = !DILocation(line: 1766, column: 20, scope: !10898)
!10902 = !DILocation(line: 1767, column: 14, scope: !10898)
!10903 = !DILocation(line: 1767, column: 17, scope: !10898)
!10904 = !DILocation(line: 1767, column: 25, scope: !10898)
!10905 = !DILocation(line: 1767, column: 29, scope: !10898)
!10906 = !DILocation(line: 1767, column: 23, scope: !10898)
!10907 = !DILocation(line: 1767, column: 11, scope: !10898)
!10908 = !DILocation(line: 1766, column: 28, scope: !10898)
!10909 = !DILocation(line: 1768, column: 8, scope: !10898)
!10910 = !DILocation(line: 1768, column: 14, scope: !10898)
!10911 = !DILocation(line: 1768, column: 29, scope: !10898)
!10912 = !DILocation(line: 1768, column: 33, scope: !10898)
!10913 = !DILocation(line: 1768, column: 37, scope: !10898)
!10914 = !DILocation(line: 1768, column: 35, scope: !10898)
!10915 = !DILocation(line: 1768, column: 42, scope: !10898)
!10916 = !DILocation(line: 1768, column: 46, scope: !10898)
!10917 = !DILocation(line: 1768, column: 39, scope: !10898)
!10918 = !DILocation(line: 1769, column: 5, scope: !10898)
!10919 = !DILocation(line: 1769, column: 9, scope: !10898)
!10920 = !DILocation(line: 1770, column: 9, scope: !10898)
!10921 = !DILocation(line: 1770, column: 13, scope: !10898)
!10922 = !DILocation(line: 1770, column: 17, scope: !10898)
!10923 = !DILocation(line: 1770, column: 15, scope: !10898)
!10924 = !DILocation(line: 1770, column: 21, scope: !10898)
!10925 = !DILocation(line: 1770, column: 19, scope: !10898)
!10926 = !DILocation(line: 1771, column: 10, scope: !10898)
!10927 = !DILocation(line: 1771, column: 14, scope: !10898)
!10928 = !DILocation(line: 1771, column: 8, scope: !10898)
!10929 = !DILocation(line: 1771, column: 22, scope: !10898)
!10930 = !DILocation(line: 1770, column: 27, scope: !10898)
!10931 = !DILocation(line: 1766, column: 8, scope: !10699)
!10932 = !DILocation(line: 1772, column: 9, scope: !10933)
!10933 = distinct !DILexicalBlock(scope: !10934, file: !3, line: 1772, column: 9)
!10934 = distinct !DILexicalBlock(scope: !10898, file: !3, line: 1771, column: 31)
!10935 = !DILocation(line: 1772, column: 11, scope: !10933)
!10936 = !DILocation(line: 1772, column: 9, scope: !10934)
!10937 = !DILocation(line: 1773, column: 18, scope: !10933)
!10938 = !DILocation(line: 1773, column: 28, scope: !10933)
!10939 = !DILocation(line: 1773, column: 38, scope: !10933)
!10940 = !DILocation(line: 1774, column: 11, scope: !10933)
!10941 = !DILocation(line: 1774, column: 15, scope: !10933)
!10942 = !DILocation(line: 1773, column: 6, scope: !10933)
!10943 = !DILocation(line: 1775, column: 13, scope: !10934)
!10944 = !DILocation(line: 1775, column: 17, scope: !10934)
!10945 = !DILocation(line: 1775, column: 5, scope: !10934)
!10946 = !DILocation(line: 1776, column: 9, scope: !10947)
!10947 = distinct !DILexicalBlock(scope: !10934, file: !3, line: 1776, column: 9)
!10948 = !DILocation(line: 1776, column: 13, scope: !10947)
!10949 = !DILocation(line: 1776, column: 23, scope: !10947)
!10950 = !DILocation(line: 1776, column: 21, scope: !10947)
!10951 = !DILocation(line: 1776, column: 25, scope: !10947)
!10952 = !DILocation(line: 1776, column: 9, scope: !10934)
!10953 = !DILocation(line: 1777, column: 18, scope: !10947)
!10954 = !DILocation(line: 1777, column: 22, scope: !10947)
!10955 = !DILocation(line: 1777, column: 26, scope: !10947)
!10956 = !DILocation(line: 1777, column: 24, scope: !10947)
!10957 = !DILocation(line: 1777, column: 36, scope: !10947)
!10958 = !DILocation(line: 1778, column: 11, scope: !10947)
!10959 = !DILocation(line: 1778, column: 15, scope: !10947)
!10960 = !DILocation(line: 1778, column: 25, scope: !10947)
!10961 = !DILocation(line: 1778, column: 23, scope: !10947)
!10962 = !DILocation(line: 1779, column: 11, scope: !10947)
!10963 = !DILocation(line: 1779, column: 15, scope: !10947)
!10964 = !DILocation(line: 1777, column: 6, scope: !10947)
!10965 = !DILocation(line: 1780, column: 4, scope: !10934)
!10966 = !DILocation(line: 1780, column: 15, scope: !10967)
!10967 = distinct !DILexicalBlock(scope: !10898, file: !3, line: 1780, column: 15)
!10968 = !DILocation(line: 1780, column: 21, scope: !10967)
!10969 = !DILocation(line: 1780, column: 27, scope: !10967)
!10970 = !DILocation(line: 1780, column: 15, scope: !10898)
!10971 = !DILocation(line: 1781, column: 17, scope: !10967)
!10972 = !DILocation(line: 1781, column: 21, scope: !10967)
!10973 = !DILocation(line: 1781, column: 25, scope: !10967)
!10974 = !DILocation(line: 1781, column: 23, scope: !10967)
!10975 = !DILocation(line: 1781, column: 35, scope: !10967)
!10976 = !DILocation(line: 1782, column: 10, scope: !10967)
!10977 = !DILocation(line: 1782, column: 14, scope: !10967)
!10978 = !DILocation(line: 1782, column: 12, scope: !10967)
!10979 = !DILocation(line: 1782, column: 18, scope: !10967)
!10980 = !DILocation(line: 1782, column: 16, scope: !10967)
!10981 = !DILocation(line: 1782, column: 25, scope: !10967)
!10982 = !DILocation(line: 1782, column: 29, scope: !10967)
!10983 = !DILocation(line: 1781, column: 5, scope: !10967)
!10984 = !DILocation(line: 1784, column: 5, scope: !10967)
!10985 = !DILocation(line: 1785, column: 16, scope: !10699)
!10986 = !DILocation(line: 1785, column: 20, scope: !10699)
!10987 = !DILocation(line: 1785, column: 24, scope: !10699)
!10988 = !DILocation(line: 1785, column: 22, scope: !10699)
!10989 = !DILocation(line: 1785, column: 34, scope: !10699)
!10990 = !DILocation(line: 1785, column: 41, scope: !10699)
!10991 = !DILocation(line: 1785, column: 45, scope: !10699)
!10992 = !DILocation(line: 1785, column: 4, scope: !10699)
!10993 = !DILocation(line: 1786, column: 4, scope: !10699)
!10994 = !DILabel(scope: !10699, name: "redraw_up", file: !3, line: 1789)
!10995 = !DILocation(line: 1789, column: 9, scope: !10699)
!10996 = !DILocation(line: 1790, column: 17, scope: !10699)
!10997 = !DILocation(line: 1790, column: 21, scope: !10699)
!10998 = !DILocation(line: 1790, column: 24, scope: !10699)
!10999 = !DILocation(line: 1790, column: 27, scope: !10699)
!11000 = !DILocation(line: 1790, column: 31, scope: !10699)
!11001 = !DILocation(line: 1790, column: 29, scope: !10699)
!11002 = !DILocation(line: 1790, column: 35, scope: !10699)
!11003 = !DILocation(line: 1790, column: 33, scope: !10699)
!11004 = !DILocation(line: 1791, column: 10, scope: !10699)
!11005 = !DILocation(line: 1791, column: 18, scope: !10699)
!11006 = !DILocation(line: 1791, column: 22, scope: !10699)
!11007 = !DILocation(line: 1791, column: 16, scope: !10699)
!11008 = !DILocation(line: 1790, column: 4, scope: !10699)
!11009 = !DILocation(line: 1792, column: 16, scope: !10699)
!11010 = !DILocation(line: 1792, column: 20, scope: !10699)
!11011 = !DILocation(line: 1792, column: 24, scope: !10699)
!11012 = !DILocation(line: 1792, column: 22, scope: !10699)
!11013 = !DILocation(line: 1792, column: 34, scope: !10699)
!11014 = !DILocation(line: 1792, column: 41, scope: !10699)
!11015 = !DILocation(line: 1792, column: 45, scope: !10699)
!11016 = !DILocation(line: 1792, column: 4, scope: !10699)
!11017 = !DILocation(line: 1793, column: 36, scope: !10699)
!11018 = !DILocation(line: 1793, column: 40, scope: !10699)
!11019 = !DILocation(line: 1794, column: 8, scope: !10699)
!11020 = !DILocation(line: 1794, column: 12, scope: !10699)
!11021 = !DILocation(line: 1795, column: 9, scope: !10699)
!11022 = !DILocation(line: 1795, column: 13, scope: !10699)
!11023 = !DILocation(line: 1795, column: 11, scope: !10699)
!11024 = !DILocation(line: 1794, column: 24, scope: !10699)
!11025 = !DILocation(line: 1793, column: 50, scope: !10699)
!11026 = !DILocation(line: 1793, column: 16, scope: !10699)
!11027 = !DILocation(line: 1796, column: 9, scope: !10699)
!11028 = !DILocation(line: 1796, column: 13, scope: !10699)
!11029 = !DILocation(line: 1797, column: 9, scope: !10699)
!11030 = !DILocation(line: 1797, column: 13, scope: !10699)
!11031 = !DILocation(line: 1797, column: 27, scope: !10699)
!11032 = !DILocation(line: 1797, column: 25, scope: !10699)
!11033 = !DILocation(line: 1793, column: 4, scope: !10699)
!11034 = !DILocation(line: 1798, column: 4, scope: !10699)
!11035 = !DILocation(line: 1800, column: 3, scope: !10681)
!11036 = !DILocation(line: 1803, column: 7, scope: !11037)
!11037 = distinct !DILexicalBlock(scope: !10681, file: !3, line: 1803, column: 7)
!11038 = !DILocation(line: 1803, column: 15, scope: !11037)
!11039 = !DILocation(line: 1803, column: 19, scope: !11037)
!11040 = !DILocation(line: 1803, column: 13, scope: !11037)
!11041 = !DILocation(line: 1803, column: 7, scope: !10681)
!11042 = !DILocation(line: 1804, column: 12, scope: !11037)
!11043 = !DILocation(line: 1804, column: 16, scope: !11037)
!11044 = !DILocation(line: 1804, column: 10, scope: !11037)
!11045 = !DILocation(line: 1804, column: 4, scope: !11037)
!11046 = !DILocation(line: 1805, column: 7, scope: !11047)
!11047 = distinct !DILexicalBlock(scope: !10681, file: !3, line: 1805, column: 7)
!11048 = !DILocation(line: 1805, column: 18, scope: !11047)
!11049 = !DILocation(line: 1805, column: 7, scope: !10681)
!11050 = !DILocation(line: 1806, column: 4, scope: !11047)
!11051 = !DILocation(line: 1807, column: 11, scope: !10681)
!11052 = !DILocation(line: 1807, column: 14, scope: !10681)
!11053 = !DILocation(line: 1807, column: 3, scope: !10681)
!11054 = !DILocation(line: 1809, column: 22, scope: !11055)
!11055 = distinct !DILexicalBlock(scope: !10681, file: !3, line: 1807, column: 26)
!11056 = !DILocation(line: 1809, column: 26, scope: !11055)
!11057 = !DILocation(line: 1809, column: 32, scope: !11055)
!11058 = !DILocation(line: 1809, column: 35, scope: !11055)
!11059 = !DILocation(line: 1809, column: 37, scope: !11055)
!11060 = !DILocation(line: 1809, column: 42, scope: !11055)
!11061 = !DILocation(line: 1809, column: 46, scope: !11055)
!11062 = !DILocation(line: 1809, column: 44, scope: !11055)
!11063 = !DILocation(line: 1809, column: 50, scope: !11055)
!11064 = !DILocation(line: 1809, column: 48, scope: !11055)
!11065 = !DILocation(line: 1810, column: 11, scope: !11055)
!11066 = !DILocation(line: 1810, column: 10, scope: !11055)
!11067 = !DILocation(line: 1809, column: 4, scope: !11055)
!11068 = !DILocation(line: 1811, column: 16, scope: !11055)
!11069 = !DILocation(line: 1811, column: 20, scope: !11055)
!11070 = !DILocation(line: 1811, column: 26, scope: !11055)
!11071 = !DILocation(line: 1811, column: 33, scope: !11055)
!11072 = !DILocation(line: 1811, column: 37, scope: !11055)
!11073 = !DILocation(line: 1811, column: 4, scope: !11055)
!11074 = !DILocation(line: 1812, column: 36, scope: !11055)
!11075 = !DILocation(line: 1812, column: 40, scope: !11055)
!11076 = !DILocation(line: 1813, column: 8, scope: !11055)
!11077 = !DILocation(line: 1813, column: 12, scope: !11055)
!11078 = !DILocation(line: 1814, column: 8, scope: !11055)
!11079 = !DILocation(line: 1813, column: 24, scope: !11055)
!11080 = !DILocation(line: 1812, column: 50, scope: !11055)
!11081 = !DILocation(line: 1812, column: 16, scope: !11055)
!11082 = !DILocation(line: 1815, column: 9, scope: !11055)
!11083 = !DILocation(line: 1815, column: 13, scope: !11055)
!11084 = !DILocation(line: 1816, column: 9, scope: !11055)
!11085 = !DILocation(line: 1816, column: 13, scope: !11055)
!11086 = !DILocation(line: 1816, column: 27, scope: !11055)
!11087 = !DILocation(line: 1816, column: 25, scope: !11055)
!11088 = !DILocation(line: 1812, column: 4, scope: !11055)
!11089 = !DILocation(line: 1817, column: 4, scope: !11055)
!11090 = !DILocation(line: 1820, column: 8, scope: !11091)
!11091 = distinct !DILexicalBlock(scope: !11055, file: !3, line: 1820, column: 8)
!11092 = !DILocation(line: 1820, column: 12, scope: !11091)
!11093 = !DILocation(line: 1820, column: 10, scope: !11091)
!11094 = !DILocation(line: 1820, column: 16, scope: !11091)
!11095 = !DILocation(line: 1820, column: 14, scope: !11091)
!11096 = !DILocation(line: 1820, column: 28, scope: !11091)
!11097 = !DILocation(line: 1820, column: 32, scope: !11091)
!11098 = !DILocation(line: 1820, column: 26, scope: !11091)
!11099 = !DILocation(line: 1820, column: 40, scope: !11091)
!11100 = !DILocation(line: 1820, column: 22, scope: !11091)
!11101 = !DILocation(line: 1820, column: 8, scope: !11055)
!11102 = !DILocation(line: 1821, column: 9, scope: !11103)
!11103 = distinct !DILexicalBlock(scope: !11104, file: !3, line: 1821, column: 9)
!11104 = distinct !DILexicalBlock(scope: !11091, file: !3, line: 1820, column: 46)
!11105 = !DILocation(line: 1821, column: 13, scope: !11103)
!11106 = !DILocation(line: 1821, column: 23, scope: !11103)
!11107 = !DILocation(line: 1821, column: 21, scope: !11103)
!11108 = !DILocation(line: 1821, column: 25, scope: !11103)
!11109 = !DILocation(line: 1821, column: 9, scope: !11104)
!11110 = !DILocation(line: 1822, column: 18, scope: !11103)
!11111 = !DILocation(line: 1822, column: 22, scope: !11103)
!11112 = !DILocation(line: 1822, column: 28, scope: !11103)
!11113 = !DILocation(line: 1822, column: 32, scope: !11103)
!11114 = !DILocation(line: 1822, column: 30, scope: !11103)
!11115 = !DILocation(line: 1823, column: 11, scope: !11103)
!11116 = !DILocation(line: 1823, column: 15, scope: !11103)
!11117 = !DILocation(line: 1823, column: 25, scope: !11103)
!11118 = !DILocation(line: 1823, column: 23, scope: !11103)
!11119 = !DILocation(line: 1824, column: 11, scope: !11103)
!11120 = !DILocation(line: 1824, column: 15, scope: !11103)
!11121 = !DILocation(line: 1822, column: 6, scope: !11103)
!11122 = !DILocation(line: 1825, column: 16, scope: !11104)
!11123 = !DILocation(line: 1825, column: 20, scope: !11104)
!11124 = !DILocation(line: 1825, column: 5, scope: !11104)
!11125 = !DILocation(line: 1826, column: 9, scope: !11126)
!11126 = distinct !DILexicalBlock(scope: !11104, file: !3, line: 1826, column: 9)
!11127 = !DILocation(line: 1826, column: 11, scope: !11126)
!11128 = !DILocation(line: 1826, column: 9, scope: !11104)
!11129 = !DILocation(line: 1827, column: 18, scope: !11126)
!11130 = !DILocation(line: 1827, column: 22, scope: !11126)
!11131 = !DILocation(line: 1827, column: 38, scope: !11126)
!11132 = !DILocation(line: 1828, column: 11, scope: !11126)
!11133 = !DILocation(line: 1828, column: 15, scope: !11126)
!11134 = !DILocation(line: 1827, column: 6, scope: !11126)
!11135 = !DILocation(line: 1829, column: 4, scope: !11104)
!11136 = !DILocation(line: 1829, column: 15, scope: !11137)
!11137 = distinct !DILexicalBlock(scope: !11091, file: !3, line: 1829, column: 15)
!11138 = !DILocation(line: 1829, column: 21, scope: !11137)
!11139 = !DILocation(line: 1829, column: 27, scope: !11137)
!11140 = !DILocation(line: 1829, column: 15, scope: !11091)
!11141 = !DILocation(line: 1830, column: 17, scope: !11137)
!11142 = !DILocation(line: 1830, column: 21, scope: !11137)
!11143 = !DILocation(line: 1830, column: 27, scope: !11137)
!11144 = !DILocation(line: 1830, column: 31, scope: !11137)
!11145 = !DILocation(line: 1830, column: 29, scope: !11137)
!11146 = !DILocation(line: 1831, column: 10, scope: !11137)
!11147 = !DILocation(line: 1831, column: 14, scope: !11137)
!11148 = !DILocation(line: 1831, column: 12, scope: !11137)
!11149 = !DILocation(line: 1831, column: 18, scope: !11137)
!11150 = !DILocation(line: 1831, column: 16, scope: !11137)
!11151 = !DILocation(line: 1831, column: 25, scope: !11137)
!11152 = !DILocation(line: 1831, column: 29, scope: !11137)
!11153 = !DILocation(line: 1830, column: 5, scope: !11137)
!11154 = !DILocation(line: 1833, column: 5, scope: !11137)
!11155 = !DILocation(line: 1834, column: 16, scope: !11055)
!11156 = !DILocation(line: 1834, column: 20, scope: !11055)
!11157 = !DILocation(line: 1834, column: 26, scope: !11055)
!11158 = !DILocation(line: 1834, column: 33, scope: !11055)
!11159 = !DILocation(line: 1834, column: 37, scope: !11055)
!11160 = !DILocation(line: 1834, column: 4, scope: !11055)
!11161 = !DILocation(line: 1835, column: 4, scope: !11055)
!11162 = !DILocation(line: 1838, column: 9, scope: !11163)
!11163 = distinct !DILexicalBlock(scope: !11055, file: !3, line: 1838, column: 8)
!11164 = !DILocation(line: 1838, column: 17, scope: !11163)
!11165 = !DILocation(line: 1838, column: 20, scope: !11163)
!11166 = !DILocation(line: 1838, column: 15, scope: !11163)
!11167 = !DILocation(line: 1838, column: 31, scope: !11163)
!11168 = !DILocation(line: 1838, column: 34, scope: !11163)
!11169 = !DILocation(line: 1838, column: 42, scope: !11163)
!11170 = !DILocation(line: 1838, column: 46, scope: !11163)
!11171 = !DILocation(line: 1838, column: 40, scope: !11163)
!11172 = !DILocation(line: 1838, column: 28, scope: !11163)
!11173 = !DILocation(line: 1839, column: 8, scope: !11163)
!11174 = !DILocation(line: 1839, column: 14, scope: !11163)
!11175 = !DILocation(line: 1839, column: 29, scope: !11163)
!11176 = !DILocation(line: 1839, column: 33, scope: !11163)
!11177 = !DILocation(line: 1839, column: 37, scope: !11163)
!11178 = !DILocation(line: 1839, column: 35, scope: !11163)
!11179 = !DILocation(line: 1839, column: 42, scope: !11163)
!11180 = !DILocation(line: 1839, column: 46, scope: !11163)
!11181 = !DILocation(line: 1839, column: 39, scope: !11163)
!11182 = !DILocation(line: 1840, column: 5, scope: !11163)
!11183 = !DILocation(line: 1840, column: 9, scope: !11163)
!11184 = !DILocation(line: 1841, column: 9, scope: !11163)
!11185 = !DILocation(line: 1841, column: 13, scope: !11163)
!11186 = !DILocation(line: 1841, column: 17, scope: !11163)
!11187 = !DILocation(line: 1841, column: 15, scope: !11163)
!11188 = !DILocation(line: 1841, column: 21, scope: !11163)
!11189 = !DILocation(line: 1841, column: 19, scope: !11163)
!11190 = !DILocation(line: 1842, column: 10, scope: !11163)
!11191 = !DILocation(line: 1842, column: 14, scope: !11163)
!11192 = !DILocation(line: 1842, column: 8, scope: !11163)
!11193 = !DILocation(line: 1842, column: 22, scope: !11163)
!11194 = !DILocation(line: 1841, column: 27, scope: !11163)
!11195 = !DILocation(line: 1838, column: 8, scope: !11055)
!11196 = !DILocation(line: 1843, column: 9, scope: !11197)
!11197 = distinct !DILexicalBlock(scope: !11198, file: !3, line: 1843, column: 9)
!11198 = distinct !DILexicalBlock(scope: !11163, file: !3, line: 1842, column: 31)
!11199 = !DILocation(line: 1843, column: 13, scope: !11197)
!11200 = !DILocation(line: 1843, column: 23, scope: !11197)
!11201 = !DILocation(line: 1843, column: 21, scope: !11197)
!11202 = !DILocation(line: 1843, column: 25, scope: !11197)
!11203 = !DILocation(line: 1843, column: 9, scope: !11198)
!11204 = !DILocation(line: 1844, column: 18, scope: !11197)
!11205 = !DILocation(line: 1844, column: 22, scope: !11197)
!11206 = !DILocation(line: 1844, column: 28, scope: !11197)
!11207 = !DILocation(line: 1844, column: 32, scope: !11197)
!11208 = !DILocation(line: 1844, column: 30, scope: !11197)
!11209 = !DILocation(line: 1845, column: 11, scope: !11197)
!11210 = !DILocation(line: 1845, column: 15, scope: !11197)
!11211 = !DILocation(line: 1845, column: 25, scope: !11197)
!11212 = !DILocation(line: 1845, column: 23, scope: !11197)
!11213 = !DILocation(line: 1846, column: 11, scope: !11197)
!11214 = !DILocation(line: 1846, column: 15, scope: !11197)
!11215 = !DILocation(line: 1844, column: 6, scope: !11197)
!11216 = !DILocation(line: 1847, column: 15, scope: !11198)
!11217 = !DILocation(line: 1847, column: 19, scope: !11198)
!11218 = !DILocation(line: 1847, column: 5, scope: !11198)
!11219 = !DILocation(line: 1848, column: 9, scope: !11220)
!11220 = distinct !DILexicalBlock(scope: !11198, file: !3, line: 1848, column: 9)
!11221 = !DILocation(line: 1848, column: 11, scope: !11220)
!11222 = !DILocation(line: 1848, column: 9, scope: !11198)
!11223 = !DILocation(line: 1849, column: 18, scope: !11220)
!11224 = !DILocation(line: 1849, column: 22, scope: !11220)
!11225 = !DILocation(line: 1849, column: 38, scope: !11220)
!11226 = !DILocation(line: 1850, column: 11, scope: !11220)
!11227 = !DILocation(line: 1850, column: 15, scope: !11220)
!11228 = !DILocation(line: 1849, column: 6, scope: !11220)
!11229 = !DILocation(line: 1851, column: 4, scope: !11198)
!11230 = !DILocation(line: 1851, column: 15, scope: !11231)
!11231 = distinct !DILexicalBlock(scope: !11163, file: !3, line: 1851, column: 15)
!11232 = !DILocation(line: 1851, column: 21, scope: !11231)
!11233 = !DILocation(line: 1851, column: 27, scope: !11231)
!11234 = !DILocation(line: 1851, column: 15, scope: !11163)
!11235 = !DILocation(line: 1852, column: 17, scope: !11231)
!11236 = !DILocation(line: 1852, column: 21, scope: !11231)
!11237 = !DILocation(line: 1852, column: 27, scope: !11231)
!11238 = !DILocation(line: 1852, column: 31, scope: !11231)
!11239 = !DILocation(line: 1852, column: 29, scope: !11231)
!11240 = !DILocation(line: 1853, column: 10, scope: !11231)
!11241 = !DILocation(line: 1853, column: 14, scope: !11231)
!11242 = !DILocation(line: 1853, column: 12, scope: !11231)
!11243 = !DILocation(line: 1853, column: 18, scope: !11231)
!11244 = !DILocation(line: 1853, column: 16, scope: !11231)
!11245 = !DILocation(line: 1853, column: 25, scope: !11231)
!11246 = !DILocation(line: 1853, column: 29, scope: !11231)
!11247 = !DILocation(line: 1852, column: 5, scope: !11231)
!11248 = !DILocation(line: 1855, column: 5, scope: !11231)
!11249 = !DILocation(line: 1856, column: 16, scope: !11055)
!11250 = !DILocation(line: 1856, column: 20, scope: !11055)
!11251 = !DILocation(line: 1856, column: 26, scope: !11055)
!11252 = !DILocation(line: 1856, column: 33, scope: !11055)
!11253 = !DILocation(line: 1856, column: 37, scope: !11055)
!11254 = !DILocation(line: 1856, column: 4, scope: !11055)
!11255 = !DILocation(line: 1857, column: 4, scope: !11055)
!11256 = !DILocation(line: 1860, column: 9, scope: !11257)
!11257 = distinct !DILexicalBlock(scope: !11055, file: !3, line: 1860, column: 8)
!11258 = !DILocation(line: 1860, column: 17, scope: !11257)
!11259 = !DILocation(line: 1860, column: 20, scope: !11257)
!11260 = !DILocation(line: 1860, column: 15, scope: !11257)
!11261 = !DILocation(line: 1860, column: 31, scope: !11257)
!11262 = !DILocation(line: 1860, column: 34, scope: !11257)
!11263 = !DILocation(line: 1860, column: 42, scope: !11257)
!11264 = !DILocation(line: 1860, column: 46, scope: !11257)
!11265 = !DILocation(line: 1860, column: 40, scope: !11257)
!11266 = !DILocation(line: 1860, column: 28, scope: !11257)
!11267 = !DILocation(line: 1861, column: 8, scope: !11257)
!11268 = !DILocation(line: 1861, column: 14, scope: !11257)
!11269 = !DILocation(line: 1861, column: 29, scope: !11257)
!11270 = !DILocation(line: 1861, column: 33, scope: !11257)
!11271 = !DILocation(line: 1861, column: 37, scope: !11257)
!11272 = !DILocation(line: 1861, column: 35, scope: !11257)
!11273 = !DILocation(line: 1861, column: 42, scope: !11257)
!11274 = !DILocation(line: 1861, column: 46, scope: !11257)
!11275 = !DILocation(line: 1861, column: 39, scope: !11257)
!11276 = !DILocation(line: 1862, column: 5, scope: !11257)
!11277 = !DILocation(line: 1862, column: 9, scope: !11257)
!11278 = !DILocation(line: 1863, column: 9, scope: !11257)
!11279 = !DILocation(line: 1863, column: 13, scope: !11257)
!11280 = !DILocation(line: 1863, column: 17, scope: !11257)
!11281 = !DILocation(line: 1863, column: 15, scope: !11257)
!11282 = !DILocation(line: 1863, column: 21, scope: !11257)
!11283 = !DILocation(line: 1863, column: 19, scope: !11257)
!11284 = !DILocation(line: 1864, column: 10, scope: !11257)
!11285 = !DILocation(line: 1864, column: 14, scope: !11257)
!11286 = !DILocation(line: 1864, column: 8, scope: !11257)
!11287 = !DILocation(line: 1864, column: 22, scope: !11257)
!11288 = !DILocation(line: 1863, column: 27, scope: !11257)
!11289 = !DILocation(line: 1860, column: 8, scope: !11055)
!11290 = !DILocation(line: 1865, column: 9, scope: !11291)
!11291 = distinct !DILexicalBlock(scope: !11292, file: !3, line: 1865, column: 9)
!11292 = distinct !DILexicalBlock(scope: !11257, file: !3, line: 1864, column: 31)
!11293 = !DILocation(line: 1865, column: 13, scope: !11291)
!11294 = !DILocation(line: 1865, column: 23, scope: !11291)
!11295 = !DILocation(line: 1865, column: 21, scope: !11291)
!11296 = !DILocation(line: 1865, column: 25, scope: !11291)
!11297 = !DILocation(line: 1865, column: 9, scope: !11292)
!11298 = !DILocation(line: 1866, column: 24, scope: !11291)
!11299 = !DILocation(line: 1866, column: 28, scope: !11291)
!11300 = !DILocation(line: 1866, column: 31, scope: !11291)
!11301 = !DILocation(line: 1866, column: 34, scope: !11291)
!11302 = !DILocation(line: 1866, column: 38, scope: !11291)
!11303 = !DILocation(line: 1866, column: 48, scope: !11291)
!11304 = !DILocation(line: 1866, column: 46, scope: !11291)
!11305 = !DILocation(line: 1867, column: 10, scope: !11291)
!11306 = !DILocation(line: 1867, column: 14, scope: !11291)
!11307 = !DILocation(line: 1867, column: 12, scope: !11291)
!11308 = !DILocation(line: 1866, column: 6, scope: !11291)
!11309 = !DILocation(line: 1868, column: 22, scope: !11292)
!11310 = !DILocation(line: 1868, column: 26, scope: !11292)
!11311 = !DILocation(line: 1868, column: 29, scope: !11292)
!11312 = !DILocation(line: 1868, column: 5, scope: !11292)
!11313 = !DILocation(line: 1869, column: 9, scope: !11314)
!11314 = distinct !DILexicalBlock(scope: !11292, file: !3, line: 1869, column: 9)
!11315 = !DILocation(line: 1869, column: 11, scope: !11314)
!11316 = !DILocation(line: 1869, column: 9, scope: !11292)
!11317 = !DILocation(line: 1870, column: 24, scope: !11314)
!11318 = !DILocation(line: 1870, column: 28, scope: !11314)
!11319 = !DILocation(line: 1870, column: 31, scope: !11314)
!11320 = !DILocation(line: 1870, column: 38, scope: !11314)
!11321 = !DILocation(line: 1870, column: 6, scope: !11314)
!11322 = !DILocation(line: 1871, column: 4, scope: !11292)
!11323 = !DILocation(line: 1872, column: 23, scope: !11257)
!11324 = !DILocation(line: 1872, column: 27, scope: !11257)
!11325 = !DILocation(line: 1872, column: 30, scope: !11257)
!11326 = !DILocation(line: 1872, column: 33, scope: !11257)
!11327 = !DILocation(line: 1872, column: 37, scope: !11257)
!11328 = !DILocation(line: 1872, column: 35, scope: !11257)
!11329 = !DILocation(line: 1872, column: 41, scope: !11257)
!11330 = !DILocation(line: 1872, column: 39, scope: !11257)
!11331 = !DILocation(line: 1872, column: 48, scope: !11257)
!11332 = !DILocation(line: 1872, column: 52, scope: !11257)
!11333 = !DILocation(line: 1872, column: 50, scope: !11257)
!11334 = !DILocation(line: 1872, column: 5, scope: !11257)
!11335 = !DILocation(line: 1873, column: 16, scope: !11055)
!11336 = !DILocation(line: 1873, column: 20, scope: !11055)
!11337 = !DILocation(line: 1873, column: 26, scope: !11055)
!11338 = !DILocation(line: 1873, column: 33, scope: !11055)
!11339 = !DILocation(line: 1873, column: 37, scope: !11055)
!11340 = !DILocation(line: 1873, column: 4, scope: !11055)
!11341 = !DILocation(line: 1874, column: 4, scope: !11055)
!11342 = !DILabel(scope: !11055, name: "redraw_down", file: !3, line: 1877)
!11343 = !DILocation(line: 1877, column: 9, scope: !11055)
!11344 = !DILocation(line: 1878, column: 17, scope: !11055)
!11345 = !DILocation(line: 1878, column: 21, scope: !11055)
!11346 = !DILocation(line: 1878, column: 24, scope: !11055)
!11347 = !DILocation(line: 1878, column: 26, scope: !11055)
!11348 = !DILocation(line: 1878, column: 31, scope: !11055)
!11349 = !DILocation(line: 1878, column: 35, scope: !11055)
!11350 = !DILocation(line: 1878, column: 33, scope: !11055)
!11351 = !DILocation(line: 1878, column: 39, scope: !11055)
!11352 = !DILocation(line: 1878, column: 37, scope: !11055)
!11353 = !DILocation(line: 1879, column: 11, scope: !11055)
!11354 = !DILocation(line: 1879, column: 10, scope: !11055)
!11355 = !DILocation(line: 1879, column: 19, scope: !11055)
!11356 = !DILocation(line: 1879, column: 23, scope: !11055)
!11357 = !DILocation(line: 1879, column: 17, scope: !11055)
!11358 = !DILocation(line: 1878, column: 4, scope: !11055)
!11359 = !DILocation(line: 1880, column: 16, scope: !11055)
!11360 = !DILocation(line: 1880, column: 20, scope: !11055)
!11361 = !DILocation(line: 1880, column: 26, scope: !11055)
!11362 = !DILocation(line: 1880, column: 33, scope: !11055)
!11363 = !DILocation(line: 1880, column: 37, scope: !11055)
!11364 = !DILocation(line: 1880, column: 4, scope: !11055)
!11365 = !DILocation(line: 1881, column: 36, scope: !11055)
!11366 = !DILocation(line: 1881, column: 40, scope: !11055)
!11367 = !DILocation(line: 1882, column: 8, scope: !11055)
!11368 = !DILocation(line: 1882, column: 12, scope: !11055)
!11369 = !DILocation(line: 1883, column: 8, scope: !11055)
!11370 = !DILocation(line: 1882, column: 24, scope: !11055)
!11371 = !DILocation(line: 1881, column: 50, scope: !11055)
!11372 = !DILocation(line: 1881, column: 16, scope: !11055)
!11373 = !DILocation(line: 1884, column: 9, scope: !11055)
!11374 = !DILocation(line: 1884, column: 13, scope: !11055)
!11375 = !DILocation(line: 1885, column: 9, scope: !11055)
!11376 = !DILocation(line: 1885, column: 13, scope: !11055)
!11377 = !DILocation(line: 1885, column: 27, scope: !11055)
!11378 = !DILocation(line: 1885, column: 25, scope: !11055)
!11379 = !DILocation(line: 1881, column: 4, scope: !11055)
!11380 = !DILocation(line: 1886, column: 4, scope: !11055)
!11381 = !DILocation(line: 1888, column: 2, scope: !10681)
!11382 = !DILocation(line: 1889, column: 2, scope: !10642)
!11383 = !DILocation(line: 1890, column: 1, scope: !10642)
!11384 = distinct !DISubprogram(name: "fbcon_switch", scope: !3, file: !3, line: 2072, type: !4894, scopeLine: 2073, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !241)
!11385 = !DILocalVariable(name: "vc", arg: 1, scope: !11384, file: !3, line: 2072, type: !4826)
!11386 = !DILocation(line: 2072, column: 41, scope: !11384)
!11387 = !DILocalVariable(name: "info", scope: !11384, file: !3, line: 2074, type: !199)
!11388 = !DILocation(line: 2074, column: 18, scope: !11384)
!11389 = !DILocalVariable(name: "old_info", scope: !11384, file: !3, line: 2074, type: !199)
!11390 = !DILocation(line: 2074, column: 25, scope: !11384)
!11391 = !DILocalVariable(name: "ops", scope: !11384, file: !3, line: 2075, type: !4818)
!11392 = !DILocation(line: 2075, column: 20, scope: !11384)
!11393 = !DILocalVariable(name: "p", scope: !11384, file: !3, line: 2076, type: !5048)
!11394 = !DILocation(line: 2076, column: 24, scope: !11384)
!11395 = !DILocation(line: 2076, column: 40, scope: !11384)
!11396 = !DILocation(line: 2076, column: 44, scope: !11384)
!11397 = !DILocation(line: 2076, column: 29, scope: !11384)
!11398 = !DILocalVariable(name: "var", scope: !11384, file: !3, line: 2077, type: !250)
!11399 = !DILocation(line: 2077, column: 27, scope: !11384)
!11400 = !DILocalVariable(name: "i", scope: !11384, file: !3, line: 2078, type: !170)
!11401 = !DILocation(line: 2078, column: 6, scope: !11384)
!11402 = !DILocalVariable(name: "ret", scope: !11384, file: !3, line: 2078, type: !170)
!11403 = !DILocation(line: 2078, column: 9, scope: !11384)
!11404 = !DILocalVariable(name: "prev_console", scope: !11384, file: !3, line: 2078, type: !170)
!11405 = !DILocation(line: 2078, column: 14, scope: !11384)
!11406 = !DILocalVariable(name: "charcnt", scope: !11384, file: !3, line: 2078, type: !170)
!11407 = !DILocation(line: 2078, column: 28, scope: !11384)
!11408 = !DILocation(line: 2080, column: 34, scope: !11384)
!11409 = !DILocation(line: 2080, column: 38, scope: !11384)
!11410 = !DILocation(line: 2080, column: 23, scope: !11384)
!11411 = !DILocation(line: 2080, column: 9, scope: !11384)
!11412 = !DILocation(line: 2080, column: 7, scope: !11384)
!11413 = !DILocation(line: 2081, column: 8, scope: !11384)
!11414 = !DILocation(line: 2081, column: 14, scope: !11384)
!11415 = !DILocation(line: 2081, column: 6, scope: !11384)
!11416 = !DILocation(line: 2083, column: 6, scope: !11417)
!11417 = distinct !DILexicalBlock(scope: !11384, file: !3, line: 2083, column: 6)
!11418 = !DILocation(line: 2083, column: 17, scope: !11417)
!11419 = !DILocation(line: 2083, column: 6, scope: !11384)
!11420 = !DILocalVariable(name: "conp2", scope: !11421, file: !3, line: 2084, type: !4826)
!11421 = distinct !DILexicalBlock(scope: !11417, file: !3, line: 2083, column: 23)
!11422 = !DILocation(line: 2084, column: 19, scope: !11421)
!11423 = !DILocation(line: 2084, column: 35, scope: !11421)
!11424 = !DILocation(line: 2084, column: 27, scope: !11421)
!11425 = !DILocation(line: 2084, column: 47, scope: !11421)
!11426 = !DILocation(line: 2086, column: 7, scope: !11427)
!11427 = distinct !DILexicalBlock(scope: !11421, file: !3, line: 2086, column: 7)
!11428 = !DILocation(line: 2086, column: 14, scope: !11427)
!11429 = !DILocation(line: 2086, column: 24, scope: !11427)
!11430 = !DILocation(line: 2086, column: 21, scope: !11427)
!11431 = !DILocation(line: 2087, column: 7, scope: !11427)
!11432 = !DILocation(line: 2087, column: 10, scope: !11427)
!11433 = !DILocation(line: 2087, column: 17, scope: !11427)
!11434 = !DILocation(line: 2087, column: 30, scope: !11427)
!11435 = !DILocation(line: 2087, column: 37, scope: !11427)
!11436 = !DILocation(line: 2087, column: 27, scope: !11427)
!11437 = !DILocation(line: 2086, column: 7, scope: !11421)
!11438 = !DILocation(line: 2088, column: 4, scope: !11427)
!11439 = !DILocation(line: 2088, column: 11, scope: !11427)
!11440 = !DILocation(line: 2088, column: 18, scope: !11427)
!11441 = !DILocation(line: 2089, column: 14, scope: !11421)
!11442 = !DILocation(line: 2090, column: 2, scope: !11421)
!11443 = !DILocation(line: 2092, column: 17, scope: !11384)
!11444 = !DILocation(line: 2092, column: 22, scope: !11384)
!11445 = !DILocation(line: 2092, column: 15, scope: !11384)
!11446 = !DILocation(line: 2093, column: 6, scope: !11447)
!11447 = distinct !DILexicalBlock(scope: !11384, file: !3, line: 2093, column: 6)
!11448 = !DILocation(line: 2093, column: 19, scope: !11447)
!11449 = !DILocation(line: 2093, column: 6, scope: !11384)
!11450 = !DILocation(line: 2094, column: 39, scope: !11447)
!11451 = !DILocation(line: 2094, column: 28, scope: !11447)
!11452 = !DILocation(line: 2094, column: 14, scope: !11447)
!11453 = !DILocation(line: 2094, column: 12, scope: !11447)
!11454 = !DILocation(line: 2094, column: 3, scope: !11447)
!11455 = !DILocation(line: 2103, column: 2, scope: !11456)
!11456 = distinct !DILexicalBlock(scope: !11384, file: !3, line: 2103, column: 2)
!11457 = !DILocation(line: 2103, column: 2, scope: !11458)
!11458 = distinct !DILexicalBlock(scope: !11456, file: !3, line: 2103, column: 2)
!11459 = !DILocation(line: 2103, column: 2, scope: !11460)
!11460 = distinct !DILexicalBlock(scope: !11458, file: !3, line: 2103, column: 2)
!11461 = !DILocation(line: 2103, column: 2, scope: !11462)
!11462 = distinct !DILexicalBlock(scope: !11460, file: !3, line: 2103, column: 2)
!11463 = !DILocation(line: 2104, column: 21, scope: !11464)
!11464 = distinct !DILexicalBlock(scope: !11465, file: !3, line: 2104, column: 7)
!11465 = distinct !DILexicalBlock(scope: !11460, file: !3, line: 2103, column: 28)
!11466 = !DILocation(line: 2104, column: 7, scope: !11464)
!11467 = !DILocation(line: 2104, column: 25, scope: !11464)
!11468 = !DILocation(line: 2104, column: 7, scope: !11465)
!11469 = !DILocalVariable(name: "o", scope: !11470, file: !3, line: 2105, type: !4818)
!11470 = distinct !DILexicalBlock(scope: !11464, file: !3, line: 2104, column: 36)
!11471 = !DILocation(line: 2105, column: 22, scope: !11470)
!11472 = !DILocation(line: 2105, column: 40, scope: !11470)
!11473 = !DILocation(line: 2105, column: 26, scope: !11470)
!11474 = !DILocation(line: 2105, column: 44, scope: !11470)
!11475 = !DILocation(line: 2107, column: 17, scope: !11470)
!11476 = !DILocation(line: 2107, column: 21, scope: !11470)
!11477 = !DILocation(line: 2107, column: 4, scope: !11470)
!11478 = !DILocation(line: 2107, column: 7, scope: !11470)
!11479 = !DILocation(line: 2107, column: 15, scope: !11470)
!11480 = !DILocation(line: 2108, column: 3, scope: !11470)
!11481 = distinct !{!11481, !11455, !11482}
!11482 = !DILocation(line: 2109, column: 2, scope: !11456)
!11483 = !DILocation(line: 2110, column: 2, scope: !11384)
!11484 = !DILocation(line: 2111, column: 23, scope: !11384)
!11485 = !DILocation(line: 2111, column: 2, scope: !11384)
!11486 = !DILocation(line: 2112, column: 6, scope: !11384)
!11487 = !DILocation(line: 2112, column: 15, scope: !11384)
!11488 = !DILocation(line: 2118, column: 27, scope: !11384)
!11489 = !DILocation(line: 2118, column: 2, scope: !11384)
!11490 = !DILocation(line: 2118, column: 8, scope: !11384)
!11491 = !DILocation(line: 2118, column: 12, scope: !11384)
!11492 = !DILocation(line: 2118, column: 21, scope: !11384)
!11493 = !DILocation(line: 2119, column: 15, scope: !11384)
!11494 = !DILocation(line: 2119, column: 21, scope: !11384)
!11495 = !DILocation(line: 2119, column: 25, scope: !11384)
!11496 = !DILocation(line: 2119, column: 31, scope: !11384)
!11497 = !DILocation(line: 2119, column: 6, scope: !11384)
!11498 = !DILocation(line: 2119, column: 12, scope: !11384)
!11499 = !DILocation(line: 2120, column: 13, scope: !11384)
!11500 = !DILocation(line: 2120, column: 2, scope: !11384)
!11501 = !DILocation(line: 2121, column: 2, scope: !11384)
!11502 = !DILocation(line: 2121, column: 7, scope: !11384)
!11503 = !DILocation(line: 2121, column: 13, scope: !11384)
!11504 = !DILocation(line: 2121, column: 19, scope: !11384)
!11505 = !DILocation(line: 2123, column: 6, scope: !11506)
!11506 = distinct !DILexicalBlock(scope: !11384, file: !3, line: 2123, column: 6)
!11507 = !DILocation(line: 2123, column: 15, scope: !11506)
!11508 = !DILocation(line: 2123, column: 23, scope: !11506)
!11509 = !DILocation(line: 2123, column: 27, scope: !11506)
!11510 = !DILocation(line: 2123, column: 39, scope: !11506)
!11511 = !DILocation(line: 2123, column: 36, scope: !11506)
!11512 = !DILocation(line: 2123, column: 44, scope: !11506)
!11513 = !DILocation(line: 2124, column: 6, scope: !11506)
!11514 = !DILocation(line: 2124, column: 12, scope: !11506)
!11515 = !DILocation(line: 2124, column: 18, scope: !11506)
!11516 = !DILocation(line: 2123, column: 6, scope: !11384)
!11517 = !DILocation(line: 2125, column: 7, scope: !11518)
!11518 = distinct !DILexicalBlock(scope: !11519, file: !3, line: 2125, column: 7)
!11519 = distinct !DILexicalBlock(scope: !11506, file: !3, line: 2124, column: 48)
!11520 = !DILocation(line: 2125, column: 13, scope: !11518)
!11521 = !DILocation(line: 2125, column: 20, scope: !11518)
!11522 = !DILocation(line: 2125, column: 7, scope: !11519)
!11523 = !DILocation(line: 2126, column: 10, scope: !11524)
!11524 = distinct !DILexicalBlock(scope: !11518, file: !3, line: 2125, column: 32)
!11525 = !DILocation(line: 2126, column: 16, scope: !11524)
!11526 = !DILocation(line: 2126, column: 23, scope: !11524)
!11527 = !DILocation(line: 2126, column: 34, scope: !11524)
!11528 = !DILocation(line: 2126, column: 8, scope: !11524)
!11529 = !DILocation(line: 2128, column: 8, scope: !11530)
!11530 = distinct !DILexicalBlock(scope: !11524, file: !3, line: 2128, column: 8)
!11531 = !DILocation(line: 2128, column: 8, scope: !11524)
!11532 = !DILocation(line: 2131, column: 25, scope: !11530)
!11533 = !DILocation(line: 2129, column: 5, scope: !11530)
!11534 = !DILocation(line: 2132, column: 3, scope: !11524)
!11535 = !DILocation(line: 2134, column: 7, scope: !11536)
!11536 = distinct !DILexicalBlock(scope: !11519, file: !3, line: 2134, column: 7)
!11537 = !DILocation(line: 2134, column: 19, scope: !11536)
!11538 = !DILocation(line: 2134, column: 16, scope: !11536)
!11539 = !DILocation(line: 2134, column: 7, scope: !11519)
!11540 = !DILocation(line: 2135, column: 27, scope: !11536)
!11541 = !DILocation(line: 2135, column: 4, scope: !11536)
!11542 = !DILocation(line: 2136, column: 2, scope: !11519)
!11543 = !DILocation(line: 2138, column: 24, scope: !11544)
!11544 = distinct !DILexicalBlock(scope: !11384, file: !3, line: 2138, column: 6)
!11545 = !DILocation(line: 2138, column: 28, scope: !11544)
!11546 = !DILocation(line: 2138, column: 6, scope: !11544)
!11547 = !DILocation(line: 2138, column: 34, scope: !11544)
!11548 = !DILocation(line: 2139, column: 6, scope: !11544)
!11549 = !DILocation(line: 2139, column: 11, scope: !11544)
!11550 = !DILocation(line: 2139, column: 23, scope: !11544)
!11551 = !DILocation(line: 2138, column: 6, scope: !11384)
!11552 = !DILocation(line: 2140, column: 26, scope: !11544)
!11553 = !DILocation(line: 2140, column: 3, scope: !11544)
!11554 = !DILocation(line: 2142, column: 26, scope: !11544)
!11555 = !DILocation(line: 2142, column: 3, scope: !11544)
!11556 = !DILocation(line: 2144, column: 20, scope: !11384)
!11557 = !DILocation(line: 2144, column: 24, scope: !11384)
!11558 = !DILocation(line: 2144, column: 2, scope: !11384)
!11559 = !DILocation(line: 2145, column: 2, scope: !11384)
!11560 = !DILocation(line: 2145, column: 7, scope: !11384)
!11561 = !DILocation(line: 2145, column: 20, scope: !11384)
!11562 = !DILocation(line: 2147, column: 6, scope: !11563)
!11563 = distinct !DILexicalBlock(scope: !11384, file: !3, line: 2147, column: 6)
!11564 = !DILocation(line: 2147, column: 11, scope: !11563)
!11565 = !DILocation(line: 2147, column: 23, scope: !11563)
!11566 = !DILocation(line: 2147, column: 26, scope: !11563)
!11567 = !DILocation(line: 2147, column: 31, scope: !11563)
!11568 = !DILocation(line: 2147, column: 43, scope: !11563)
!11569 = !DILocation(line: 2147, column: 49, scope: !11563)
!11570 = !DILocation(line: 2147, column: 6, scope: !11384)
!11571 = !DILocation(line: 2148, column: 3, scope: !11572)
!11572 = distinct !DILexicalBlock(scope: !11563, file: !3, line: 2147, column: 54)
!11573 = !DILocation(line: 2148, column: 8, scope: !11572)
!11574 = !DILocation(line: 2148, column: 15, scope: !11572)
!11575 = !DILocation(line: 2149, column: 21, scope: !11572)
!11576 = !DILocation(line: 2149, column: 25, scope: !11572)
!11577 = !DILocation(line: 2149, column: 3, scope: !11572)
!11578 = !DILocation(line: 2150, column: 2, scope: !11572)
!11579 = !DILocation(line: 2152, column: 45, scope: !11384)
!11580 = !DILocation(line: 2152, column: 51, scope: !11384)
!11581 = !DILocation(line: 2152, column: 57, scope: !11384)
!11582 = !DILocation(line: 2152, column: 63, scope: !11384)
!11583 = !DILocation(line: 2152, column: 25, scope: !11384)
!11584 = !DILocation(line: 2152, column: 67, scope: !11384)
!11585 = !DILocation(line: 2152, column: 2, scope: !11384)
!11586 = !DILocation(line: 2152, column: 6, scope: !11384)
!11587 = !DILocation(line: 2152, column: 22, scope: !11384)
!11588 = !DILocation(line: 2153, column: 27, scope: !11384)
!11589 = !DILocation(line: 2153, column: 31, scope: !11384)
!11590 = !DILocation(line: 2153, column: 2, scope: !11384)
!11591 = !DILocation(line: 2153, column: 6, scope: !11384)
!11592 = !DILocation(line: 2153, column: 25, scope: !11384)
!11593 = !DILocation(line: 2155, column: 6, scope: !11594)
!11594 = distinct !DILexicalBlock(scope: !11384, file: !3, line: 2155, column: 6)
!11595 = !DILocation(line: 2155, column: 9, scope: !11594)
!11596 = !DILocation(line: 2155, column: 6, scope: !11384)
!11597 = !DILocation(line: 2156, column: 13, scope: !11594)
!11598 = !DILocation(line: 2156, column: 11, scope: !11594)
!11599 = !DILocation(line: 2156, column: 3, scope: !11594)
!11600 = !DILocation(line: 2158, column: 6, scope: !11601)
!11601 = distinct !DILexicalBlock(scope: !11384, file: !3, line: 2158, column: 6)
!11602 = !DILocation(line: 2158, column: 14, scope: !11601)
!11603 = !DILocation(line: 2158, column: 6, scope: !11384)
!11604 = !DILocation(line: 2159, column: 3, scope: !11601)
!11605 = !DILocation(line: 2159, column: 7, scope: !11601)
!11606 = !DILocation(line: 2159, column: 26, scope: !11601)
!11607 = !DILocation(line: 2161, column: 19, scope: !11384)
!11608 = !DILocation(line: 2161, column: 22, scope: !11384)
!11609 = !DILocation(line: 2161, column: 28, scope: !11384)
!11610 = !DILocation(line: 2161, column: 2, scope: !11384)
!11611 = !DILocation(line: 2163, column: 10, scope: !11384)
!11612 = !DILocation(line: 2163, column: 13, scope: !11384)
!11613 = !DILocation(line: 2163, column: 2, scope: !11384)
!11614 = !DILocation(line: 2165, column: 25, scope: !11615)
!11615 = distinct !DILexicalBlock(scope: !11384, file: !3, line: 2163, column: 25)
!11616 = !DILocation(line: 2165, column: 28, scope: !11615)
!11617 = !DILocation(line: 2165, column: 36, scope: !11615)
!11618 = !DILocation(line: 2165, column: 40, scope: !11615)
!11619 = !DILocation(line: 2165, column: 34, scope: !11615)
!11620 = !DILocation(line: 2165, column: 23, scope: !11615)
!11621 = !DILocation(line: 2166, column: 3, scope: !11615)
!11622 = !DILocation(line: 2169, column: 25, scope: !11615)
!11623 = !DILocation(line: 2169, column: 28, scope: !11615)
!11624 = !DILocation(line: 2169, column: 40, scope: !11615)
!11625 = !DILocation(line: 2169, column: 44, scope: !11615)
!11626 = !DILocation(line: 2169, column: 38, scope: !11615)
!11627 = !DILocation(line: 2169, column: 34, scope: !11615)
!11628 = !DILocation(line: 2169, column: 23, scope: !11615)
!11629 = !DILocation(line: 2170, column: 7, scope: !11630)
!11630 = distinct !DILexicalBlock(scope: !11615, file: !3, line: 2170, column: 7)
!11631 = !DILocation(line: 2170, column: 27, scope: !11630)
!11632 = !DILocation(line: 2170, column: 7, scope: !11615)
!11633 = !DILocation(line: 2171, column: 24, scope: !11630)
!11634 = !DILocation(line: 2171, column: 4, scope: !11630)
!11635 = !DILocation(line: 2172, column: 3, scope: !11615)
!11636 = !DILocation(line: 2174, column: 23, scope: !11615)
!11637 = !DILocation(line: 2175, column: 3, scope: !11615)
!11638 = !DILocation(line: 2178, column: 17, scope: !11384)
!11639 = !DILocation(line: 2179, column: 21, scope: !11384)
!11640 = !DILocation(line: 2181, column: 25, scope: !11641)
!11641 = distinct !DILexicalBlock(scope: !11384, file: !3, line: 2181, column: 6)
!11642 = !DILocation(line: 2181, column: 29, scope: !11641)
!11643 = !DILocation(line: 2181, column: 7, scope: !11641)
!11644 = !DILocation(line: 2181, column: 6, scope: !11384)
!11645 = !DILocation(line: 2182, column: 44, scope: !11646)
!11646 = distinct !DILexicalBlock(scope: !11641, file: !3, line: 2181, column: 36)
!11647 = !DILocation(line: 2182, column: 47, scope: !11646)
!11648 = !DILocation(line: 2182, column: 55, scope: !11646)
!11649 = !DILocation(line: 2182, column: 25, scope: !11646)
!11650 = !DILocation(line: 2182, column: 30, scope: !11646)
!11651 = !DILocation(line: 2182, column: 34, scope: !11646)
!11652 = !DILocation(line: 2182, column: 42, scope: !11646)
!11653 = !DILocation(line: 2182, column: 6, scope: !11646)
!11654 = !DILocation(line: 2182, column: 11, scope: !11646)
!11655 = !DILocation(line: 2182, column: 15, scope: !11646)
!11656 = !DILocation(line: 2182, column: 23, scope: !11646)
!11657 = !DILocation(line: 2183, column: 6, scope: !11646)
!11658 = !DILocation(line: 2183, column: 11, scope: !11646)
!11659 = !DILocation(line: 2183, column: 24, scope: !11646)
!11660 = !DILocation(line: 2184, column: 2, scope: !11646)
!11661 = !DILocation(line: 2186, column: 20, scope: !11384)
!11662 = !DILocation(line: 2186, column: 2, scope: !11384)
!11663 = !DILocation(line: 2187, column: 22, scope: !11384)
!11664 = !DILocation(line: 2187, column: 2, scope: !11384)
!11665 = !DILocation(line: 2189, column: 6, scope: !11666)
!11666 = distinct !DILexicalBlock(scope: !11384, file: !3, line: 2189, column: 6)
!11667 = !DILocation(line: 2189, column: 17, scope: !11666)
!11668 = !DILocation(line: 2189, column: 6, scope: !11384)
!11669 = !DILocation(line: 2191, column: 16, scope: !11670)
!11670 = distinct !DILexicalBlock(scope: !11666, file: !3, line: 2189, column: 37)
!11671 = !DILocation(line: 2191, column: 14, scope: !11670)
!11672 = !DILocation(line: 2193, column: 16, scope: !11670)
!11673 = !DILocation(line: 2193, column: 22, scope: !11670)
!11674 = !DILocation(line: 2193, column: 27, scope: !11670)
!11675 = !DILocation(line: 2193, column: 3, scope: !11670)
!11676 = !DILocation(line: 2194, column: 17, scope: !11670)
!11677 = !DILocation(line: 2195, column: 10, scope: !11670)
!11678 = !DILocation(line: 2195, column: 14, scope: !11670)
!11679 = !DILocation(line: 2195, column: 26, scope: !11670)
!11680 = !DILocation(line: 2195, column: 30, scope: !11670)
!11681 = !DILocation(line: 2195, column: 44, scope: !11670)
!11682 = !DILocation(line: 2195, column: 48, scope: !11670)
!11683 = !DILocation(line: 2195, column: 42, scope: !11670)
!11684 = !DILocation(line: 2195, column: 24, scope: !11670)
!11685 = !DILocation(line: 2196, column: 10, scope: !11670)
!11686 = !DILocation(line: 2196, column: 14, scope: !11670)
!11687 = !DILocation(line: 2196, column: 29, scope: !11670)
!11688 = !DILocation(line: 2196, column: 33, scope: !11670)
!11689 = !DILocation(line: 2197, column: 8, scope: !11670)
!11690 = !DILocation(line: 2197, column: 12, scope: !11670)
!11691 = !DILocation(line: 2196, column: 43, scope: !11670)
!11692 = !DILocation(line: 2196, column: 26, scope: !11670)
!11693 = !DILocation(line: 2197, column: 20, scope: !11670)
!11694 = !DILocation(line: 2194, column: 3, scope: !11670)
!11695 = !DILocation(line: 2198, column: 3, scope: !11670)
!11696 = !DILocation(line: 2200, column: 2, scope: !11384)
!11697 = !DILocation(line: 2201, column: 1, scope: !11384)
!11698 = distinct !DISubprogram(name: "fbcon_blank", scope: !3, file: !3, line: 2218, type: !4898, scopeLine: 2219, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !241)
!11699 = !DILocalVariable(name: "vc", arg: 1, scope: !11698, file: !3, line: 2218, type: !4826)
!11700 = !DILocation(line: 2218, column: 40, scope: !11698)
!11701 = !DILocalVariable(name: "blank", arg: 2, scope: !11698, file: !3, line: 2218, type: !170)
!11702 = !DILocation(line: 2218, column: 48, scope: !11698)
!11703 = !DILocalVariable(name: "mode_switch", arg: 3, scope: !11698, file: !3, line: 2218, type: !170)
!11704 = !DILocation(line: 2218, column: 59, scope: !11698)
!11705 = !DILocalVariable(name: "info", scope: !11698, file: !3, line: 2220, type: !199)
!11706 = !DILocation(line: 2220, column: 18, scope: !11698)
!11707 = !DILocation(line: 2220, column: 50, scope: !11698)
!11708 = !DILocation(line: 2220, column: 54, scope: !11698)
!11709 = !DILocation(line: 2220, column: 39, scope: !11698)
!11710 = !DILocation(line: 2220, column: 25, scope: !11698)
!11711 = !DILocalVariable(name: "ops", scope: !11698, file: !3, line: 2221, type: !4818)
!11712 = !DILocation(line: 2221, column: 20, scope: !11698)
!11713 = !DILocation(line: 2221, column: 26, scope: !11698)
!11714 = !DILocation(line: 2221, column: 32, scope: !11698)
!11715 = !DILocation(line: 2223, column: 6, scope: !11716)
!11716 = distinct !DILexicalBlock(scope: !11698, file: !3, line: 2223, column: 6)
!11717 = !DILocation(line: 2223, column: 6, scope: !11698)
!11718 = !DILocalVariable(name: "var", scope: !11719, file: !3, line: 2224, type: !250)
!11719 = distinct !DILexicalBlock(scope: !11716, file: !3, line: 2223, column: 19)
!11720 = !DILocation(line: 2224, column: 28, scope: !11719)
!11721 = !DILocation(line: 2224, column: 34, scope: !11719)
!11722 = !DILocation(line: 2224, column: 40, scope: !11719)
!11723 = !DILocation(line: 2226, column: 3, scope: !11719)
!11724 = !DILocation(line: 2226, column: 8, scope: !11719)
!11725 = !DILocation(line: 2226, column: 17, scope: !11719)
!11726 = !DILocation(line: 2228, column: 8, scope: !11727)
!11727 = distinct !DILexicalBlock(scope: !11719, file: !3, line: 2228, column: 7)
!11728 = !DILocation(line: 2228, column: 7, scope: !11719)
!11729 = !DILocation(line: 2229, column: 8, scope: !11730)
!11730 = distinct !DILexicalBlock(scope: !11727, file: !3, line: 2228, column: 15)
!11731 = !DILocation(line: 2229, column: 17, scope: !11730)
!11732 = !DILocation(line: 2231, column: 15, scope: !11730)
!11733 = !DILocation(line: 2231, column: 4, scope: !11730)
!11734 = !DILocation(line: 2232, column: 4, scope: !11730)
!11735 = !DILocation(line: 2232, column: 9, scope: !11730)
!11736 = !DILocation(line: 2232, column: 18, scope: !11730)
!11737 = !DILocation(line: 2233, column: 4, scope: !11730)
!11738 = !DILocation(line: 2233, column: 9, scope: !11730)
!11739 = !DILocation(line: 2233, column: 15, scope: !11730)
!11740 = !DILocation(line: 2233, column: 21, scope: !11730)
!11741 = !DILocation(line: 2234, column: 3, scope: !11730)
!11742 = !DILocation(line: 2235, column: 2, scope: !11719)
!11743 = !DILocation(line: 2237, column: 26, scope: !11744)
!11744 = distinct !DILexicalBlock(scope: !11698, file: !3, line: 2237, column: 7)
!11745 = !DILocation(line: 2237, column: 30, scope: !11744)
!11746 = !DILocation(line: 2237, column: 8, scope: !11744)
!11747 = !DILocation(line: 2237, column: 7, scope: !11698)
!11748 = !DILocation(line: 2238, column: 7, scope: !11749)
!11749 = distinct !DILexicalBlock(scope: !11750, file: !3, line: 2238, column: 7)
!11750 = distinct !DILexicalBlock(scope: !11744, file: !3, line: 2237, column: 37)
!11751 = !DILocation(line: 2238, column: 12, scope: !11749)
!11752 = !DILocation(line: 2238, column: 27, scope: !11749)
!11753 = !DILocation(line: 2238, column: 24, scope: !11749)
!11754 = !DILocation(line: 2238, column: 7, scope: !11750)
!11755 = !DILocation(line: 2239, column: 23, scope: !11756)
!11756 = distinct !DILexicalBlock(scope: !11749, file: !3, line: 2238, column: 34)
!11757 = !DILocation(line: 2239, column: 4, scope: !11756)
!11758 = !DILocation(line: 2239, column: 9, scope: !11756)
!11759 = !DILocation(line: 2239, column: 21, scope: !11756)
!11760 = !DILocation(line: 2240, column: 17, scope: !11756)
!11761 = !DILocation(line: 2240, column: 21, scope: !11756)
!11762 = !DILocation(line: 2240, column: 4, scope: !11756)
!11763 = !DILocation(line: 2241, column: 26, scope: !11756)
!11764 = !DILocation(line: 2241, column: 25, scope: !11756)
!11765 = !DILocation(line: 2241, column: 4, scope: !11756)
!11766 = !DILocation(line: 2241, column: 9, scope: !11756)
!11767 = !DILocation(line: 2241, column: 22, scope: !11756)
!11768 = !DILocation(line: 2243, column: 17, scope: !11769)
!11769 = distinct !DILexicalBlock(scope: !11756, file: !3, line: 2243, column: 8)
!11770 = !DILocation(line: 2243, column: 23, scope: !11769)
!11771 = !DILocation(line: 2243, column: 8, scope: !11769)
!11772 = !DILocation(line: 2243, column: 8, scope: !11756)
!11773 = !DILocation(line: 2244, column: 25, scope: !11769)
!11774 = !DILocation(line: 2244, column: 29, scope: !11769)
!11775 = !DILocation(line: 2244, column: 35, scope: !11769)
!11776 = !DILocation(line: 2244, column: 5, scope: !11769)
!11777 = !DILocation(line: 2245, column: 3, scope: !11756)
!11778 = !DILocation(line: 2247, column: 8, scope: !11779)
!11779 = distinct !DILexicalBlock(scope: !11750, file: !3, line: 2247, column: 7)
!11780 = !DILocation(line: 2247, column: 7, scope: !11750)
!11781 = !DILocation(line: 2248, column: 4, scope: !11779)
!11782 = !DILocation(line: 2249, column: 2, scope: !11750)
!11783 = !DILocation(line: 2251, column: 6, scope: !11784)
!11784 = distinct !DILexicalBlock(scope: !11698, file: !3, line: 2251, column: 6)
!11785 = !DILocation(line: 2251, column: 18, scope: !11784)
!11786 = !DILocation(line: 2251, column: 39, scope: !11784)
!11787 = !DILocation(line: 2251, column: 43, scope: !11784)
!11788 = !DILocation(line: 2251, column: 21, scope: !11784)
!11789 = !DILocation(line: 2251, column: 49, scope: !11784)
!11790 = !DILocation(line: 2252, column: 6, scope: !11784)
!11791 = !DILocation(line: 2252, column: 11, scope: !11784)
!11792 = !DILocation(line: 2252, column: 23, scope: !11784)
!11793 = !DILocation(line: 2251, column: 6, scope: !11698)
!11794 = !DILocation(line: 2253, column: 26, scope: !11784)
!11795 = !DILocation(line: 2253, column: 3, scope: !11784)
!11796 = !DILocation(line: 2255, column: 26, scope: !11784)
!11797 = !DILocation(line: 2255, column: 3, scope: !11784)
!11798 = !DILocation(line: 2257, column: 2, scope: !11698)
!11799 = distinct !DISubprogram(name: "fbcon_set_font", scope: !3, file: !3, line: 2476, type: !4902, scopeLine: 2478, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !241)
!11800 = !DILocation(line: 445, column: 72, scope: !8677, inlinedAt: !11801)
!11801 = distinct !DILocation(line: 552, column: 10, scope: !8682, inlinedAt: !11802)
!11802 = distinct !DILocation(line: 2504, column: 13, scope: !11799)
!11803 = !DILocation(line: 446, column: 9, scope: !8677, inlinedAt: !11801)
!11804 = !DILocation(line: 446, column: 23, scope: !8677, inlinedAt: !11801)
!11805 = !DILocation(line: 448, column: 8, scope: !8677, inlinedAt: !11801)
!11806 = !DILocation(line: 318, column: 67, scope: !8693, inlinedAt: !11807)
!11807 = distinct !DILocation(line: 553, column: 20, scope: !8682, inlinedAt: !11802)
!11808 = !DILocation(line: 346, column: 58, scope: !8699, inlinedAt: !11809)
!11809 = distinct !DILocation(line: 547, column: 11, scope: !8682, inlinedAt: !11802)
!11810 = !DILocation(line: 472, column: 28, scope: !8705, inlinedAt: !11811)
!11811 = distinct !DILocation(line: 481, column: 9, scope: !8710, inlinedAt: !11812)
!11812 = distinct !DILocation(line: 545, column: 11, scope: !8712, inlinedAt: !11802)
!11813 = !DILocation(line: 472, column: 40, scope: !8705, inlinedAt: !11811)
!11814 = !DILocation(line: 472, column: 60, scope: !8705, inlinedAt: !11811)
!11815 = !DILocation(line: 478, column: 51, scope: !8710, inlinedAt: !11812)
!11816 = !DILocation(line: 478, column: 63, scope: !8710, inlinedAt: !11812)
!11817 = !DILocation(line: 480, column: 15, scope: !8710, inlinedAt: !11812)
!11818 = !DILocation(line: 538, column: 45, scope: !8684, inlinedAt: !11802)
!11819 = !DILocation(line: 538, column: 57, scope: !8684, inlinedAt: !11802)
!11820 = !DILocation(line: 542, column: 16, scope: !8682, inlinedAt: !11802)
!11821 = !DILocalVariable(name: "vc", arg: 1, scope: !11799, file: !3, line: 2476, type: !4826)
!11822 = !DILocation(line: 2476, column: 43, scope: !11799)
!11823 = !DILocalVariable(name: "font", arg: 2, scope: !11799, file: !3, line: 2476, type: !4904)
!11824 = !DILocation(line: 2476, column: 68, scope: !11799)
!11825 = !DILocalVariable(name: "flags", arg: 3, scope: !11799, file: !3, line: 2477, type: !7)
!11826 = !DILocation(line: 2477, column: 19, scope: !11799)
!11827 = !DILocalVariable(name: "info", scope: !11799, file: !3, line: 2479, type: !199)
!11828 = !DILocation(line: 2479, column: 18, scope: !11799)
!11829 = !DILocation(line: 2479, column: 50, scope: !11799)
!11830 = !DILocation(line: 2479, column: 54, scope: !11799)
!11831 = !DILocation(line: 2479, column: 39, scope: !11799)
!11832 = !DILocation(line: 2479, column: 25, scope: !11799)
!11833 = !DILocalVariable(name: "charcount", scope: !11799, file: !3, line: 2480, type: !7)
!11834 = !DILocation(line: 2480, column: 11, scope: !11799)
!11835 = !DILocation(line: 2480, column: 23, scope: !11799)
!11836 = !DILocation(line: 2480, column: 29, scope: !11799)
!11837 = !DILocalVariable(name: "w", scope: !11799, file: !3, line: 2481, type: !170)
!11838 = !DILocation(line: 2481, column: 6, scope: !11799)
!11839 = !DILocation(line: 2481, column: 10, scope: !11799)
!11840 = !DILocation(line: 2481, column: 16, scope: !11799)
!11841 = !DILocalVariable(name: "h", scope: !11799, file: !3, line: 2482, type: !170)
!11842 = !DILocation(line: 2482, column: 6, scope: !11799)
!11843 = !DILocation(line: 2482, column: 10, scope: !11799)
!11844 = !DILocation(line: 2482, column: 16, scope: !11799)
!11845 = !DILocalVariable(name: "size", scope: !11799, file: !3, line: 2483, type: !170)
!11846 = !DILocation(line: 2483, column: 6, scope: !11799)
!11847 = !DILocalVariable(name: "i", scope: !11799, file: !3, line: 2484, type: !170)
!11848 = !DILocation(line: 2484, column: 6, scope: !11799)
!11849 = !DILocalVariable(name: "csum", scope: !11799, file: !3, line: 2484, type: !170)
!11850 = !DILocation(line: 2484, column: 9, scope: !11799)
!11851 = !DILocalVariable(name: "new_data", scope: !11799, file: !3, line: 2485, type: !397)
!11852 = !DILocation(line: 2485, column: 6, scope: !11799)
!11853 = !DILocalVariable(name: "data", scope: !11799, file: !3, line: 2485, type: !397)
!11854 = !DILocation(line: 2485, column: 17, scope: !11799)
!11855 = !DILocation(line: 2485, column: 24, scope: !11799)
!11856 = !DILocation(line: 2485, column: 30, scope: !11799)
!11857 = !DILocalVariable(name: "pitch", scope: !11799, file: !3, line: 2486, type: !170)
!11858 = !DILocation(line: 2486, column: 6, scope: !11799)
!11859 = !DILocation(line: 2486, column: 14, scope: !11799)
!11860 = !DILocation(line: 2490, column: 6, scope: !11861)
!11861 = distinct !DILexicalBlock(scope: !11799, file: !3, line: 2490, column: 6)
!11862 = !DILocation(line: 2490, column: 16, scope: !11861)
!11863 = !DILocation(line: 2490, column: 23, scope: !11861)
!11864 = !DILocation(line: 2490, column: 26, scope: !11861)
!11865 = !DILocation(line: 2490, column: 36, scope: !11861)
!11866 = !DILocation(line: 2490, column: 6, scope: !11799)
!11867 = !DILocation(line: 2491, column: 3, scope: !11861)
!11868 = !DILocation(line: 2494, column: 8, scope: !11869)
!11869 = distinct !DILexicalBlock(scope: !11799, file: !3, line: 2494, column: 6)
!11870 = !DILocation(line: 2494, column: 14, scope: !11869)
!11871 = !DILocation(line: 2494, column: 21, scope: !11869)
!11872 = !DILocation(line: 2494, column: 37, scope: !11869)
!11873 = !DILocation(line: 2494, column: 43, scope: !11869)
!11874 = !DILocation(line: 2494, column: 49, scope: !11869)
!11875 = !DILocation(line: 2494, column: 33, scope: !11869)
!11876 = !DILocation(line: 2494, column: 28, scope: !11869)
!11877 = !DILocation(line: 2494, column: 56, scope: !11869)
!11878 = !DILocation(line: 2495, column: 8, scope: !11869)
!11879 = !DILocation(line: 2495, column: 14, scope: !11869)
!11880 = !DILocation(line: 2495, column: 21, scope: !11869)
!11881 = !DILocation(line: 2495, column: 37, scope: !11869)
!11882 = !DILocation(line: 2495, column: 43, scope: !11869)
!11883 = !DILocation(line: 2495, column: 50, scope: !11869)
!11884 = !DILocation(line: 2495, column: 33, scope: !11869)
!11885 = !DILocation(line: 2495, column: 28, scope: !11869)
!11886 = !DILocation(line: 2494, column: 6, scope: !11799)
!11887 = !DILocation(line: 2496, column: 3, scope: !11869)
!11888 = !DILocation(line: 2499, column: 30, scope: !11889)
!11889 = distinct !DILexicalBlock(scope: !11799, file: !3, line: 2499, column: 6)
!11890 = !DILocation(line: 2499, column: 36, scope: !11889)
!11891 = !DILocation(line: 2499, column: 6, scope: !11889)
!11892 = !DILocation(line: 2499, column: 6, scope: !11799)
!11893 = !DILocation(line: 2500, column: 3, scope: !11889)
!11894 = !DILocation(line: 2502, column: 9, scope: !11799)
!11895 = !DILocation(line: 2502, column: 7, scope: !11799)
!11896 = !DILocation(line: 2504, column: 54, scope: !11799)
!11897 = !DILocation(line: 2504, column: 52, scope: !11799)
!11898 = !DILocation(line: 540, column: 27, scope: !8683, inlinedAt: !11802)
!11899 = !DILocation(line: 540, column: 6, scope: !8683, inlinedAt: !11802)
!11900 = !DILocation(line: 540, column: 6, scope: !8684, inlinedAt: !11802)
!11901 = !DILocation(line: 544, column: 7, scope: !8712, inlinedAt: !11802)
!11902 = !DILocation(line: 544, column: 12, scope: !8712, inlinedAt: !11802)
!11903 = !DILocation(line: 544, column: 7, scope: !8682, inlinedAt: !11802)
!11904 = !DILocation(line: 545, column: 25, scope: !8712, inlinedAt: !11802)
!11905 = !DILocation(line: 545, column: 31, scope: !8712, inlinedAt: !11802)
!11906 = !DILocation(line: 480, column: 33, scope: !8710, inlinedAt: !11812)
!11907 = !DILocation(line: 480, column: 23, scope: !8710, inlinedAt: !11812)
!11908 = !DILocation(line: 481, column: 29, scope: !8710, inlinedAt: !11812)
!11909 = !DILocation(line: 481, column: 35, scope: !8710, inlinedAt: !11812)
!11910 = !DILocation(line: 481, column: 42, scope: !8710, inlinedAt: !11812)
!11911 = !DILocation(line: 474, column: 23, scope: !8705, inlinedAt: !11811)
!11912 = !DILocation(line: 474, column: 29, scope: !8705, inlinedAt: !11811)
!11913 = !DILocation(line: 474, column: 36, scope: !8705, inlinedAt: !11811)
!11914 = !DILocation(line: 474, column: 9, scope: !8705, inlinedAt: !11811)
!11915 = !DILocation(line: 545, column: 4, scope: !8712, inlinedAt: !11802)
!11916 = !DILocation(line: 547, column: 25, scope: !8682, inlinedAt: !11802)
!11917 = !DILocation(line: 348, column: 7, scope: !8756, inlinedAt: !11809)
!11918 = !DILocation(line: 348, column: 6, scope: !8699, inlinedAt: !11809)
!11919 = !DILocation(line: 349, column: 3, scope: !8756, inlinedAt: !11809)
!11920 = !DILocation(line: 351, column: 6, scope: !8760, inlinedAt: !11809)
!11921 = !DILocation(line: 351, column: 11, scope: !8760, inlinedAt: !11809)
!11922 = !DILocation(line: 351, column: 6, scope: !8699, inlinedAt: !11809)
!11923 = !DILocation(line: 352, column: 3, scope: !8760, inlinedAt: !11809)
!11924 = !DILocation(line: 354, column: 32, scope: !8765, inlinedAt: !11809)
!11925 = !DILocation(line: 354, column: 37, scope: !8765, inlinedAt: !11809)
!11926 = !DILocation(line: 354, column: 42, scope: !8765, inlinedAt: !11809)
!11927 = !DILocation(line: 354, column: 45, scope: !8765, inlinedAt: !11809)
!11928 = !DILocation(line: 354, column: 50, scope: !8765, inlinedAt: !11809)
!11929 = !DILocation(line: 354, column: 6, scope: !8699, inlinedAt: !11809)
!11930 = !DILocation(line: 355, column: 3, scope: !8765, inlinedAt: !11809)
!11931 = !DILocation(line: 356, column: 32, scope: !8773, inlinedAt: !11809)
!11932 = !DILocation(line: 356, column: 37, scope: !8773, inlinedAt: !11809)
!11933 = !DILocation(line: 356, column: 43, scope: !8773, inlinedAt: !11809)
!11934 = !DILocation(line: 356, column: 46, scope: !8773, inlinedAt: !11809)
!11935 = !DILocation(line: 356, column: 51, scope: !8773, inlinedAt: !11809)
!11936 = !DILocation(line: 356, column: 6, scope: !8699, inlinedAt: !11809)
!11937 = !DILocation(line: 357, column: 3, scope: !8773, inlinedAt: !11809)
!11938 = !DILocation(line: 358, column: 6, scope: !8781, inlinedAt: !11809)
!11939 = !DILocation(line: 358, column: 11, scope: !8781, inlinedAt: !11809)
!11940 = !DILocation(line: 358, column: 6, scope: !8699, inlinedAt: !11809)
!11941 = !DILocation(line: 358, column: 26, scope: !8781, inlinedAt: !11809)
!11942 = !DILocation(line: 359, column: 6, scope: !8786, inlinedAt: !11809)
!11943 = !DILocation(line: 359, column: 11, scope: !8786, inlinedAt: !11809)
!11944 = !DILocation(line: 359, column: 6, scope: !8699, inlinedAt: !11809)
!11945 = !DILocation(line: 359, column: 26, scope: !8786, inlinedAt: !11809)
!11946 = !DILocation(line: 360, column: 6, scope: !8791, inlinedAt: !11809)
!11947 = !DILocation(line: 360, column: 11, scope: !8791, inlinedAt: !11809)
!11948 = !DILocation(line: 360, column: 6, scope: !8699, inlinedAt: !11809)
!11949 = !DILocation(line: 360, column: 26, scope: !8791, inlinedAt: !11809)
!11950 = !DILocation(line: 361, column: 6, scope: !8796, inlinedAt: !11809)
!11951 = !DILocation(line: 361, column: 11, scope: !8796, inlinedAt: !11809)
!11952 = !DILocation(line: 361, column: 6, scope: !8699, inlinedAt: !11809)
!11953 = !DILocation(line: 361, column: 26, scope: !8796, inlinedAt: !11809)
!11954 = !DILocation(line: 362, column: 6, scope: !8801, inlinedAt: !11809)
!11955 = !DILocation(line: 362, column: 11, scope: !8801, inlinedAt: !11809)
!11956 = !DILocation(line: 362, column: 6, scope: !8699, inlinedAt: !11809)
!11957 = !DILocation(line: 362, column: 26, scope: !8801, inlinedAt: !11809)
!11958 = !DILocation(line: 363, column: 6, scope: !8806, inlinedAt: !11809)
!11959 = !DILocation(line: 363, column: 11, scope: !8806, inlinedAt: !11809)
!11960 = !DILocation(line: 363, column: 6, scope: !8699, inlinedAt: !11809)
!11961 = !DILocation(line: 363, column: 26, scope: !8806, inlinedAt: !11809)
!11962 = !DILocation(line: 364, column: 6, scope: !8811, inlinedAt: !11809)
!11963 = !DILocation(line: 364, column: 11, scope: !8811, inlinedAt: !11809)
!11964 = !DILocation(line: 364, column: 6, scope: !8699, inlinedAt: !11809)
!11965 = !DILocation(line: 364, column: 26, scope: !8811, inlinedAt: !11809)
!11966 = !DILocation(line: 365, column: 6, scope: !8816, inlinedAt: !11809)
!11967 = !DILocation(line: 365, column: 11, scope: !8816, inlinedAt: !11809)
!11968 = !DILocation(line: 365, column: 6, scope: !8699, inlinedAt: !11809)
!11969 = !DILocation(line: 365, column: 26, scope: !8816, inlinedAt: !11809)
!11970 = !DILocation(line: 366, column: 6, scope: !8821, inlinedAt: !11809)
!11971 = !DILocation(line: 366, column: 11, scope: !8821, inlinedAt: !11809)
!11972 = !DILocation(line: 366, column: 6, scope: !8699, inlinedAt: !11809)
!11973 = !DILocation(line: 366, column: 26, scope: !8821, inlinedAt: !11809)
!11974 = !DILocation(line: 367, column: 6, scope: !8826, inlinedAt: !11809)
!11975 = !DILocation(line: 367, column: 11, scope: !8826, inlinedAt: !11809)
!11976 = !DILocation(line: 367, column: 6, scope: !8699, inlinedAt: !11809)
!11977 = !DILocation(line: 367, column: 26, scope: !8826, inlinedAt: !11809)
!11978 = !DILocation(line: 368, column: 6, scope: !8831, inlinedAt: !11809)
!11979 = !DILocation(line: 368, column: 11, scope: !8831, inlinedAt: !11809)
!11980 = !DILocation(line: 368, column: 6, scope: !8699, inlinedAt: !11809)
!11981 = !DILocation(line: 368, column: 26, scope: !8831, inlinedAt: !11809)
!11982 = !DILocation(line: 369, column: 6, scope: !8836, inlinedAt: !11809)
!11983 = !DILocation(line: 369, column: 11, scope: !8836, inlinedAt: !11809)
!11984 = !DILocation(line: 369, column: 6, scope: !8699, inlinedAt: !11809)
!11985 = !DILocation(line: 369, column: 26, scope: !8836, inlinedAt: !11809)
!11986 = !DILocation(line: 370, column: 6, scope: !8841, inlinedAt: !11809)
!11987 = !DILocation(line: 370, column: 11, scope: !8841, inlinedAt: !11809)
!11988 = !DILocation(line: 370, column: 6, scope: !8699, inlinedAt: !11809)
!11989 = !DILocation(line: 370, column: 26, scope: !8841, inlinedAt: !11809)
!11990 = !DILocation(line: 371, column: 6, scope: !8846, inlinedAt: !11809)
!11991 = !DILocation(line: 371, column: 11, scope: !8846, inlinedAt: !11809)
!11992 = !DILocation(line: 371, column: 6, scope: !8699, inlinedAt: !11809)
!11993 = !DILocation(line: 371, column: 26, scope: !8846, inlinedAt: !11809)
!11994 = !DILocation(line: 372, column: 6, scope: !8851, inlinedAt: !11809)
!11995 = !DILocation(line: 372, column: 11, scope: !8851, inlinedAt: !11809)
!11996 = !DILocation(line: 372, column: 6, scope: !8699, inlinedAt: !11809)
!11997 = !DILocation(line: 372, column: 26, scope: !8851, inlinedAt: !11809)
!11998 = !DILocation(line: 373, column: 6, scope: !8856, inlinedAt: !11809)
!11999 = !DILocation(line: 373, column: 11, scope: !8856, inlinedAt: !11809)
!12000 = !DILocation(line: 373, column: 6, scope: !8699, inlinedAt: !11809)
!12001 = !DILocation(line: 373, column: 26, scope: !8856, inlinedAt: !11809)
!12002 = !DILocation(line: 374, column: 6, scope: !8861, inlinedAt: !11809)
!12003 = !DILocation(line: 374, column: 11, scope: !8861, inlinedAt: !11809)
!12004 = !DILocation(line: 374, column: 6, scope: !8699, inlinedAt: !11809)
!12005 = !DILocation(line: 374, column: 26, scope: !8861, inlinedAt: !11809)
!12006 = !DILocation(line: 375, column: 6, scope: !8866, inlinedAt: !11809)
!12007 = !DILocation(line: 375, column: 11, scope: !8866, inlinedAt: !11809)
!12008 = !DILocation(line: 375, column: 6, scope: !8699, inlinedAt: !11809)
!12009 = !DILocation(line: 375, column: 27, scope: !8866, inlinedAt: !11809)
!12010 = !DILocation(line: 376, column: 6, scope: !8871, inlinedAt: !11809)
!12011 = !DILocation(line: 376, column: 11, scope: !8871, inlinedAt: !11809)
!12012 = !DILocation(line: 376, column: 6, scope: !8699, inlinedAt: !11809)
!12013 = !DILocation(line: 376, column: 32, scope: !8871, inlinedAt: !11809)
!12014 = !DILocation(line: 377, column: 6, scope: !8876, inlinedAt: !11809)
!12015 = !DILocation(line: 377, column: 11, scope: !8876, inlinedAt: !11809)
!12016 = !DILocation(line: 377, column: 6, scope: !8699, inlinedAt: !11809)
!12017 = !DILocation(line: 377, column: 32, scope: !8876, inlinedAt: !11809)
!12018 = !DILocation(line: 378, column: 6, scope: !8881, inlinedAt: !11809)
!12019 = !DILocation(line: 378, column: 11, scope: !8881, inlinedAt: !11809)
!12020 = !DILocation(line: 378, column: 6, scope: !8699, inlinedAt: !11809)
!12021 = !DILocation(line: 378, column: 32, scope: !8881, inlinedAt: !11809)
!12022 = !DILocation(line: 379, column: 6, scope: !8886, inlinedAt: !11809)
!12023 = !DILocation(line: 379, column: 11, scope: !8886, inlinedAt: !11809)
!12024 = !DILocation(line: 379, column: 6, scope: !8699, inlinedAt: !11809)
!12025 = !DILocation(line: 379, column: 33, scope: !8886, inlinedAt: !11809)
!12026 = !DILocation(line: 380, column: 6, scope: !8891, inlinedAt: !11809)
!12027 = !DILocation(line: 380, column: 11, scope: !8891, inlinedAt: !11809)
!12028 = !DILocation(line: 380, column: 6, scope: !8699, inlinedAt: !11809)
!12029 = !DILocation(line: 380, column: 33, scope: !8891, inlinedAt: !11809)
!12030 = !DILocation(line: 381, column: 6, scope: !8896, inlinedAt: !11809)
!12031 = !DILocation(line: 381, column: 11, scope: !8896, inlinedAt: !11809)
!12032 = !DILocation(line: 381, column: 6, scope: !8699, inlinedAt: !11809)
!12033 = !DILocation(line: 381, column: 33, scope: !8896, inlinedAt: !11809)
!12034 = !DILocation(line: 382, column: 2, scope: !8901, inlinedAt: !11809)
!12035 = !DILocation(line: 382, column: 2, scope: !8905, inlinedAt: !11809)
!12036 = !DILocation(line: 382, column: 2, scope: !8906, inlinedAt: !11809)
!12037 = !DILocation(line: 386, column: 1, scope: !8699, inlinedAt: !11809)
!12038 = !DILocation(line: 547, column: 9, scope: !8682, inlinedAt: !11802)
!12039 = !DILocation(line: 549, column: 8, scope: !8912, inlinedAt: !11802)
!12040 = !DILocation(line: 549, column: 7, scope: !8682, inlinedAt: !11802)
!12041 = !DILocation(line: 550, column: 4, scope: !8912, inlinedAt: !11802)
!12042 = !DILocation(line: 553, column: 33, scope: !8682, inlinedAt: !11802)
!12043 = !DILocation(line: 325, column: 6, scope: !8917, inlinedAt: !11807)
!12044 = !DILocation(line: 325, column: 6, scope: !8693, inlinedAt: !11807)
!12045 = !DILocation(line: 326, column: 3, scope: !8917, inlinedAt: !11807)
!12046 = !DILocation(line: 332, column: 9, scope: !8693, inlinedAt: !11807)
!12047 = !DILocation(line: 332, column: 15, scope: !8693, inlinedAt: !11807)
!12048 = !DILocation(line: 332, column: 2, scope: !8693, inlinedAt: !11807)
!12049 = !DILocation(line: 336, column: 1, scope: !8693, inlinedAt: !11807)
!12050 = !DILocation(line: 553, column: 5, scope: !8682, inlinedAt: !11802)
!12051 = !DILocation(line: 553, column: 41, scope: !8682, inlinedAt: !11802)
!12052 = !DILocation(line: 554, column: 5, scope: !8682, inlinedAt: !11802)
!12053 = !DILocation(line: 554, column: 12, scope: !8682, inlinedAt: !11802)
!12054 = !DILocation(line: 448, column: 31, scope: !8677, inlinedAt: !11801)
!12055 = !DILocation(line: 448, column: 34, scope: !8677, inlinedAt: !11801)
!12056 = !DILocation(line: 448, column: 14, scope: !8677, inlinedAt: !11801)
!12057 = !DILocation(line: 450, column: 22, scope: !8677, inlinedAt: !11801)
!12058 = !DILocation(line: 450, column: 25, scope: !8677, inlinedAt: !11801)
!12059 = !DILocation(line: 450, column: 30, scope: !8677, inlinedAt: !11801)
!12060 = !DILocation(line: 450, column: 36, scope: !8677, inlinedAt: !11801)
!12061 = !DILocation(line: 450, column: 8, scope: !8677, inlinedAt: !11801)
!12062 = !DILocation(line: 450, column: 6, scope: !8677, inlinedAt: !11801)
!12063 = !DILocation(line: 451, column: 9, scope: !8677, inlinedAt: !11801)
!12064 = !DILocation(line: 552, column: 3, scope: !8682, inlinedAt: !11802)
!12065 = !DILocation(line: 557, column: 19, scope: !8684, inlinedAt: !11802)
!12066 = !DILocation(line: 557, column: 25, scope: !8684, inlinedAt: !11802)
!12067 = !DILocation(line: 557, column: 9, scope: !8684, inlinedAt: !11802)
!12068 = !DILocation(line: 557, column: 2, scope: !8684, inlinedAt: !11802)
!12069 = !DILocation(line: 558, column: 1, scope: !8684, inlinedAt: !11802)
!12070 = !DILocation(line: 2504, column: 11, scope: !11799)
!12071 = !DILocation(line: 2506, column: 7, scope: !12072)
!12072 = distinct !DILexicalBlock(scope: !11799, file: !3, line: 2506, column: 6)
!12073 = !DILocation(line: 2506, column: 6, scope: !11799)
!12074 = !DILocation(line: 2507, column: 3, scope: !12072)
!12075 = !DILocation(line: 2509, column: 11, scope: !11799)
!12076 = !DILocation(line: 2510, column: 22, scope: !11799)
!12077 = !DILocation(line: 2510, column: 2, scope: !11799)
!12078 = !DILocation(line: 2510, column: 20, scope: !11799)
!12079 = !DILocation(line: 2511, column: 25, scope: !11799)
!12080 = !DILocation(line: 2511, column: 2, scope: !11799)
!12081 = !DILocation(line: 2511, column: 23, scope: !11799)
!12082 = !DILocation(line: 2512, column: 2, scope: !11799)
!12083 = !DILocation(line: 2512, column: 21, scope: !11799)
!12084 = !DILocation(line: 2513, column: 8, scope: !12085)
!12085 = distinct !DILexicalBlock(scope: !11799, file: !3, line: 2513, column: 2)
!12086 = !DILocation(line: 2513, column: 7, scope: !12085)
!12087 = !DILocation(line: 2513, column: 12, scope: !12088)
!12088 = distinct !DILexicalBlock(scope: !12085, file: !3, line: 2513, column: 2)
!12089 = !DILocation(line: 2513, column: 15, scope: !12088)
!12090 = !DILocation(line: 2513, column: 13, scope: !12088)
!12091 = !DILocation(line: 2513, column: 2, scope: !12085)
!12092 = !DILocation(line: 2514, column: 10, scope: !12093)
!12093 = distinct !DILexicalBlock(scope: !12088, file: !3, line: 2513, column: 31)
!12094 = !DILocation(line: 2514, column: 21, scope: !12093)
!12095 = !DILocation(line: 2514, column: 23, scope: !12093)
!12096 = !DILocation(line: 2514, column: 22, scope: !12093)
!12097 = !DILocation(line: 2514, column: 25, scope: !12093)
!12098 = !DILocation(line: 2514, column: 24, scope: !12093)
!12099 = !DILocation(line: 2514, column: 19, scope: !12093)
!12100 = !DILocation(line: 2514, column: 32, scope: !12093)
!12101 = !DILocation(line: 2514, column: 40, scope: !12093)
!12102 = !DILocation(line: 2514, column: 41, scope: !12093)
!12103 = !DILocation(line: 2514, column: 45, scope: !12093)
!12104 = !DILocation(line: 2514, column: 44, scope: !12093)
!12105 = !DILocation(line: 2514, column: 37, scope: !12093)
!12106 = !DILocation(line: 2514, column: 52, scope: !12093)
!12107 = !DILocation(line: 2514, column: 54, scope: !12093)
!12108 = !DILocation(line: 2514, column: 53, scope: !12093)
!12109 = !DILocation(line: 2514, column: 3, scope: !12093)
!12110 = !DILocation(line: 2515, column: 2, scope: !12093)
!12111 = !DILocation(line: 2513, column: 27, scope: !12088)
!12112 = !DILocation(line: 2513, column: 2, scope: !12088)
!12113 = distinct !{!12113, !12091, !12114}
!12114 = !DILocation(line: 2515, column: 2, scope: !12085)
!12115 = !DILocation(line: 2519, column: 9, scope: !11799)
!12116 = !DILocation(line: 2519, column: 7, scope: !11799)
!12117 = !DILocation(line: 2521, column: 21, scope: !11799)
!12118 = !DILocation(line: 2521, column: 2, scope: !11799)
!12119 = !DILocation(line: 2521, column: 19, scope: !11799)
!12120 = !DILocation(line: 2523, column: 11, scope: !12121)
!12121 = distinct !DILexicalBlock(scope: !11799, file: !3, line: 2523, column: 2)
!12122 = !DILocation(line: 2523, column: 9, scope: !12121)
!12123 = !DILocation(line: 2523, column: 7, scope: !12121)
!12124 = !DILocation(line: 2523, column: 24, scope: !12125)
!12125 = distinct !DILexicalBlock(scope: !12121, file: !3, line: 2523, column: 2)
!12126 = !DILocation(line: 2523, column: 29, scope: !12125)
!12127 = !DILocation(line: 2523, column: 26, scope: !12125)
!12128 = !DILocation(line: 2523, column: 2, scope: !12121)
!12129 = !DILocalVariable(name: "tmp", scope: !12130, file: !3, line: 2524, type: !4826)
!12130 = distinct !DILexicalBlock(scope: !12125, file: !3, line: 2523, column: 46)
!12131 = !DILocation(line: 2524, column: 19, scope: !12130)
!12132 = !DILocation(line: 2524, column: 33, scope: !12130)
!12133 = !DILocation(line: 2524, column: 25, scope: !12130)
!12134 = !DILocation(line: 2524, column: 36, scope: !12130)
!12135 = !DILocation(line: 2526, column: 18, scope: !12136)
!12136 = distinct !DILexicalBlock(scope: !12130, file: !3, line: 2526, column: 7)
!12137 = !DILocation(line: 2526, column: 7, scope: !12136)
!12138 = !DILocation(line: 2526, column: 21, scope: !12136)
!12139 = !DILocation(line: 2526, column: 30, scope: !12136)
!12140 = !DILocation(line: 2527, column: 18, scope: !12136)
!12141 = !DILocation(line: 2527, column: 7, scope: !12136)
!12142 = !DILocation(line: 2527, column: 21, scope: !12136)
!12143 = !DILocation(line: 2527, column: 30, scope: !12136)
!12144 = !DILocation(line: 2528, column: 7, scope: !12136)
!12145 = !DILocation(line: 2528, column: 41, scope: !12136)
!12146 = !DILocation(line: 2528, column: 38, scope: !12136)
!12147 = !DILocation(line: 2528, column: 46, scope: !12136)
!12148 = !DILocation(line: 2529, column: 7, scope: !12136)
!12149 = !DILocation(line: 2529, column: 42, scope: !12136)
!12150 = !DILocation(line: 2529, column: 39, scope: !12136)
!12151 = !DILocation(line: 2529, column: 47, scope: !12136)
!12152 = !DILocation(line: 2530, column: 7, scope: !12136)
!12153 = !DILocation(line: 2530, column: 12, scope: !12136)
!12154 = !DILocation(line: 2530, column: 20, scope: !12136)
!12155 = !DILocation(line: 2530, column: 29, scope: !12136)
!12156 = !DILocation(line: 2530, column: 26, scope: !12136)
!12157 = !DILocation(line: 2530, column: 31, scope: !12136)
!12158 = !DILocation(line: 2531, column: 26, scope: !12136)
!12159 = !DILocation(line: 2531, column: 15, scope: !12136)
!12160 = !DILocation(line: 2531, column: 29, scope: !12136)
!12161 = !DILocation(line: 2531, column: 39, scope: !12136)
!12162 = !DILocation(line: 2531, column: 49, scope: !12136)
!12163 = !DILocation(line: 2531, column: 8, scope: !12136)
!12164 = !DILocation(line: 2526, column: 7, scope: !12130)
!12165 = !DILocation(line: 2532, column: 10, scope: !12166)
!12166 = distinct !DILexicalBlock(scope: !12136, file: !3, line: 2531, column: 56)
!12167 = !DILocation(line: 2532, column: 19, scope: !12166)
!12168 = !DILocation(line: 2532, column: 4, scope: !12166)
!12169 = !DILocation(line: 2533, column: 32, scope: !12166)
!12170 = !DILocation(line: 2533, column: 21, scope: !12166)
!12171 = !DILocation(line: 2533, column: 35, scope: !12166)
!12172 = !DILocation(line: 2533, column: 13, scope: !12166)
!12173 = !DILocation(line: 2534, column: 4, scope: !12166)
!12174 = !DILocation(line: 2536, column: 2, scope: !12130)
!12175 = !DILocation(line: 2523, column: 42, scope: !12125)
!12176 = !DILocation(line: 2523, column: 2, scope: !12125)
!12177 = distinct !{!12177, !12128, !12178}
!12178 = !DILocation(line: 2536, column: 2, scope: !12121)
!12179 = !DILocation(line: 2537, column: 27, scope: !11799)
!12180 = !DILocation(line: 2537, column: 31, scope: !11799)
!12181 = !DILocation(line: 2537, column: 37, scope: !11799)
!12182 = !DILocation(line: 2537, column: 44, scope: !11799)
!12183 = !DILocation(line: 2537, column: 50, scope: !11799)
!12184 = !DILocation(line: 2537, column: 58, scope: !11799)
!12185 = !DILocation(line: 2537, column: 9, scope: !11799)
!12186 = !DILocation(line: 2537, column: 2, scope: !11799)
!12187 = !DILocation(line: 2538, column: 1, scope: !11799)
!12188 = distinct !DISubprogram(name: "fbcon_get_font", scope: !3, file: !3, line: 2284, type: !4914, scopeLine: 2285, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !241)
!12189 = !DILocalVariable(name: "vc", arg: 1, scope: !12188, file: !3, line: 2284, type: !4826)
!12190 = !DILocation(line: 2284, column: 43, scope: !12188)
!12191 = !DILocalVariable(name: "font", arg: 2, scope: !12188, file: !3, line: 2284, type: !4904)
!12192 = !DILocation(line: 2284, column: 68, scope: !12188)
!12193 = !DILocalVariable(name: "fontdata", scope: !12188, file: !3, line: 2286, type: !397)
!12194 = !DILocation(line: 2286, column: 6, scope: !12188)
!12195 = !DILocation(line: 2286, column: 17, scope: !12188)
!12196 = !DILocation(line: 2286, column: 21, scope: !12188)
!12197 = !DILocation(line: 2286, column: 29, scope: !12188)
!12198 = !DILocalVariable(name: "data", scope: !12188, file: !3, line: 2287, type: !397)
!12199 = !DILocation(line: 2287, column: 6, scope: !12188)
!12200 = !DILocation(line: 2287, column: 13, scope: !12188)
!12201 = !DILocation(line: 2287, column: 19, scope: !12188)
!12202 = !DILocalVariable(name: "i", scope: !12188, file: !3, line: 2288, type: !170)
!12203 = !DILocation(line: 2288, column: 6, scope: !12188)
!12204 = !DILocalVariable(name: "j", scope: !12188, file: !3, line: 2288, type: !170)
!12205 = !DILocation(line: 2288, column: 9, scope: !12188)
!12206 = !DILocation(line: 2290, column: 16, scope: !12188)
!12207 = !DILocation(line: 2290, column: 20, scope: !12188)
!12208 = !DILocation(line: 2290, column: 28, scope: !12188)
!12209 = !DILocation(line: 2290, column: 2, scope: !12188)
!12210 = !DILocation(line: 2290, column: 8, scope: !12188)
!12211 = !DILocation(line: 2290, column: 14, scope: !12188)
!12212 = !DILocation(line: 2291, column: 17, scope: !12188)
!12213 = !DILocation(line: 2291, column: 21, scope: !12188)
!12214 = !DILocation(line: 2291, column: 29, scope: !12188)
!12215 = !DILocation(line: 2291, column: 2, scope: !12188)
!12216 = !DILocation(line: 2291, column: 8, scope: !12188)
!12217 = !DILocation(line: 2291, column: 15, scope: !12188)
!12218 = !DILocation(line: 2292, column: 20, scope: !12188)
!12219 = !DILocation(line: 2292, column: 24, scope: !12188)
!12220 = !DILocation(line: 2292, column: 2, scope: !12188)
!12221 = !DILocation(line: 2292, column: 8, scope: !12188)
!12222 = !DILocation(line: 2292, column: 18, scope: !12188)
!12223 = !DILocation(line: 2293, column: 7, scope: !12224)
!12224 = distinct !DILexicalBlock(scope: !12188, file: !3, line: 2293, column: 6)
!12225 = !DILocation(line: 2293, column: 13, scope: !12224)
!12226 = !DILocation(line: 2293, column: 6, scope: !12188)
!12227 = !DILocation(line: 2294, column: 3, scope: !12224)
!12228 = !DILocation(line: 2296, column: 6, scope: !12229)
!12229 = distinct !DILexicalBlock(scope: !12188, file: !3, line: 2296, column: 6)
!12230 = !DILocation(line: 2296, column: 12, scope: !12229)
!12231 = !DILocation(line: 2296, column: 18, scope: !12229)
!12232 = !DILocation(line: 2296, column: 6, scope: !12188)
!12233 = !DILocation(line: 2297, column: 7, scope: !12234)
!12234 = distinct !DILexicalBlock(scope: !12229, file: !3, line: 2296, column: 24)
!12235 = !DILocation(line: 2297, column: 11, scope: !12234)
!12236 = !DILocation(line: 2297, column: 19, scope: !12234)
!12237 = !DILocation(line: 2297, column: 5, scope: !12234)
!12238 = !DILocation(line: 2298, column: 7, scope: !12239)
!12239 = distinct !DILexicalBlock(scope: !12234, file: !3, line: 2298, column: 7)
!12240 = !DILocation(line: 2298, column: 13, scope: !12239)
!12241 = !DILocation(line: 2298, column: 25, scope: !12239)
!12242 = !DILocation(line: 2298, column: 23, scope: !12239)
!12243 = !DILocation(line: 2298, column: 29, scope: !12239)
!12244 = !DILocation(line: 2298, column: 27, scope: !12239)
!12245 = !DILocation(line: 2298, column: 7, scope: !12234)
!12246 = !DILocation(line: 2299, column: 4, scope: !12239)
!12247 = !DILocation(line: 2301, column: 10, scope: !12248)
!12248 = distinct !DILexicalBlock(scope: !12234, file: !3, line: 2301, column: 3)
!12249 = !DILocation(line: 2301, column: 8, scope: !12248)
!12250 = !DILocation(line: 2301, column: 15, scope: !12251)
!12251 = distinct !DILexicalBlock(scope: !12248, file: !3, line: 2301, column: 3)
!12252 = !DILocation(line: 2301, column: 19, scope: !12251)
!12253 = !DILocation(line: 2301, column: 25, scope: !12251)
!12254 = !DILocation(line: 2301, column: 17, scope: !12251)
!12255 = !DILocation(line: 2301, column: 3, scope: !12248)
!12256 = !DILocation(line: 2302, column: 11, scope: !12257)
!12257 = distinct !DILexicalBlock(scope: !12251, file: !3, line: 2301, column: 41)
!12258 = !DILocation(line: 2302, column: 17, scope: !12257)
!12259 = !DILocation(line: 2302, column: 27, scope: !12257)
!12260 = !DILocation(line: 2302, column: 4, scope: !12257)
!12261 = !DILocation(line: 2303, column: 11, scope: !12257)
!12262 = !DILocation(line: 2303, column: 18, scope: !12257)
!12263 = !DILocation(line: 2303, column: 16, scope: !12257)
!12264 = !DILocation(line: 2303, column: 29, scope: !12257)
!12265 = !DILocation(line: 2303, column: 27, scope: !12257)
!12266 = !DILocation(line: 2303, column: 24, scope: !12257)
!12267 = !DILocation(line: 2303, column: 4, scope: !12257)
!12268 = !DILocation(line: 2304, column: 9, scope: !12257)
!12269 = !DILocation(line: 2305, column: 16, scope: !12257)
!12270 = !DILocation(line: 2305, column: 13, scope: !12257)
!12271 = !DILocation(line: 2306, column: 3, scope: !12257)
!12272 = !DILocation(line: 2301, column: 37, scope: !12251)
!12273 = !DILocation(line: 2301, column: 3, scope: !12251)
!12274 = distinct !{!12274, !12255, !12275}
!12275 = !DILocation(line: 2306, column: 3, scope: !12248)
!12276 = !DILocation(line: 2307, column: 2, scope: !12234)
!12277 = !DILocation(line: 2307, column: 13, scope: !12278)
!12278 = distinct !DILexicalBlock(scope: !12229, file: !3, line: 2307, column: 13)
!12279 = !DILocation(line: 2307, column: 19, scope: !12278)
!12280 = !DILocation(line: 2307, column: 25, scope: !12278)
!12281 = !DILocation(line: 2307, column: 13, scope: !12229)
!12282 = !DILocation(line: 2308, column: 7, scope: !12283)
!12283 = distinct !DILexicalBlock(scope: !12278, file: !3, line: 2307, column: 32)
!12284 = !DILocation(line: 2308, column: 11, scope: !12283)
!12285 = !DILocation(line: 2308, column: 19, scope: !12283)
!12286 = !DILocation(line: 2308, column: 26, scope: !12283)
!12287 = !DILocation(line: 2308, column: 5, scope: !12283)
!12288 = !DILocation(line: 2309, column: 7, scope: !12289)
!12289 = distinct !DILexicalBlock(scope: !12283, file: !3, line: 2309, column: 7)
!12290 = !DILocation(line: 2309, column: 13, scope: !12289)
!12291 = !DILocation(line: 2309, column: 25, scope: !12289)
!12292 = !DILocation(line: 2309, column: 23, scope: !12289)
!12293 = !DILocation(line: 2309, column: 29, scope: !12289)
!12294 = !DILocation(line: 2309, column: 27, scope: !12289)
!12295 = !DILocation(line: 2309, column: 7, scope: !12283)
!12296 = !DILocation(line: 2310, column: 4, scope: !12289)
!12297 = !DILocation(line: 2312, column: 10, scope: !12298)
!12298 = distinct !DILexicalBlock(scope: !12283, file: !3, line: 2312, column: 3)
!12299 = !DILocation(line: 2312, column: 8, scope: !12298)
!12300 = !DILocation(line: 2312, column: 15, scope: !12301)
!12301 = distinct !DILexicalBlock(scope: !12298, file: !3, line: 2312, column: 3)
!12302 = !DILocation(line: 2312, column: 19, scope: !12301)
!12303 = !DILocation(line: 2312, column: 25, scope: !12301)
!12304 = !DILocation(line: 2312, column: 17, scope: !12301)
!12305 = !DILocation(line: 2312, column: 3, scope: !12298)
!12306 = !DILocation(line: 2313, column: 11, scope: !12307)
!12307 = distinct !DILexicalBlock(scope: !12301, file: !3, line: 2312, column: 41)
!12308 = !DILocation(line: 2313, column: 17, scope: !12307)
!12309 = !DILocation(line: 2313, column: 27, scope: !12307)
!12310 = !DILocation(line: 2313, column: 4, scope: !12307)
!12311 = !DILocation(line: 2314, column: 11, scope: !12307)
!12312 = !DILocation(line: 2314, column: 18, scope: !12307)
!12313 = !DILocation(line: 2314, column: 16, scope: !12307)
!12314 = !DILocation(line: 2314, column: 29, scope: !12307)
!12315 = !DILocation(line: 2314, column: 27, scope: !12307)
!12316 = !DILocation(line: 2314, column: 24, scope: !12307)
!12317 = !DILocation(line: 2314, column: 4, scope: !12307)
!12318 = !DILocation(line: 2315, column: 9, scope: !12307)
!12319 = !DILocation(line: 2316, column: 16, scope: !12307)
!12320 = !DILocation(line: 2316, column: 13, scope: !12307)
!12321 = !DILocation(line: 2317, column: 3, scope: !12307)
!12322 = !DILocation(line: 2312, column: 37, scope: !12301)
!12323 = !DILocation(line: 2312, column: 3, scope: !12301)
!12324 = distinct !{!12324, !12305, !12325}
!12325 = !DILocation(line: 2317, column: 3, scope: !12298)
!12326 = !DILocation(line: 2318, column: 2, scope: !12283)
!12327 = !DILocation(line: 2318, column: 13, scope: !12328)
!12328 = distinct !DILexicalBlock(scope: !12278, file: !3, line: 2318, column: 13)
!12329 = !DILocation(line: 2318, column: 19, scope: !12328)
!12330 = !DILocation(line: 2318, column: 25, scope: !12328)
!12331 = !DILocation(line: 2318, column: 13, scope: !12278)
!12332 = !DILocation(line: 2319, column: 7, scope: !12333)
!12333 = distinct !DILexicalBlock(scope: !12334, file: !3, line: 2319, column: 7)
!12334 = distinct !DILexicalBlock(scope: !12328, file: !3, line: 2318, column: 32)
!12335 = !DILocation(line: 2319, column: 13, scope: !12333)
!12336 = !DILocation(line: 2319, column: 26, scope: !12333)
!12337 = !DILocation(line: 2319, column: 30, scope: !12333)
!12338 = !DILocation(line: 2319, column: 38, scope: !12333)
!12339 = !DILocation(line: 2319, column: 45, scope: !12333)
!12340 = !DILocation(line: 2319, column: 23, scope: !12333)
!12341 = !DILocation(line: 2319, column: 62, scope: !12333)
!12342 = !DILocation(line: 2319, column: 60, scope: !12333)
!12343 = !DILocation(line: 2319, column: 7, scope: !12334)
!12344 = !DILocation(line: 2320, column: 4, scope: !12333)
!12345 = !DILocation(line: 2322, column: 10, scope: !12346)
!12346 = distinct !DILexicalBlock(scope: !12334, file: !3, line: 2322, column: 3)
!12347 = !DILocation(line: 2322, column: 8, scope: !12346)
!12348 = !DILocation(line: 2322, column: 15, scope: !12349)
!12349 = distinct !DILexicalBlock(scope: !12346, file: !3, line: 2322, column: 3)
!12350 = !DILocation(line: 2322, column: 19, scope: !12349)
!12351 = !DILocation(line: 2322, column: 25, scope: !12349)
!12352 = !DILocation(line: 2322, column: 17, scope: !12349)
!12353 = !DILocation(line: 2322, column: 3, scope: !12346)
!12354 = !DILocation(line: 2323, column: 11, scope: !12355)
!12355 = distinct !DILexicalBlock(scope: !12356, file: !3, line: 2323, column: 4)
!12356 = distinct !DILexicalBlock(scope: !12349, file: !3, line: 2322, column: 41)
!12357 = !DILocation(line: 2323, column: 9, scope: !12355)
!12358 = !DILocation(line: 2323, column: 16, scope: !12359)
!12359 = distinct !DILexicalBlock(scope: !12355, file: !3, line: 2323, column: 4)
!12360 = !DILocation(line: 2323, column: 20, scope: !12359)
!12361 = !DILocation(line: 2323, column: 24, scope: !12359)
!12362 = !DILocation(line: 2323, column: 32, scope: !12359)
!12363 = !DILocation(line: 2323, column: 18, scope: !12359)
!12364 = !DILocation(line: 2323, column: 4, scope: !12355)
!12365 = !DILocation(line: 2324, column: 15, scope: !12366)
!12366 = distinct !DILexicalBlock(scope: !12359, file: !3, line: 2323, column: 45)
!12367 = !DILocation(line: 2324, column: 10, scope: !12366)
!12368 = !DILocation(line: 2324, column: 13, scope: !12366)
!12369 = !DILocation(line: 2325, column: 15, scope: !12366)
!12370 = !DILocation(line: 2325, column: 10, scope: !12366)
!12371 = !DILocation(line: 2325, column: 13, scope: !12366)
!12372 = !DILocation(line: 2326, column: 15, scope: !12366)
!12373 = !DILocation(line: 2326, column: 10, scope: !12366)
!12374 = !DILocation(line: 2326, column: 13, scope: !12366)
!12375 = !DILocation(line: 2327, column: 14, scope: !12366)
!12376 = !DILocation(line: 2328, column: 4, scope: !12366)
!12377 = !DILocation(line: 2323, column: 41, scope: !12359)
!12378 = !DILocation(line: 2323, column: 4, scope: !12359)
!12379 = distinct !{!12379, !12364, !12380}
!12380 = !DILocation(line: 2328, column: 4, scope: !12355)
!12381 = !DILocation(line: 2329, column: 11, scope: !12356)
!12382 = !DILocation(line: 2329, column: 30, scope: !12356)
!12383 = !DILocation(line: 2329, column: 28, scope: !12356)
!12384 = !DILocation(line: 2329, column: 22, scope: !12356)
!12385 = !DILocation(line: 2329, column: 20, scope: !12356)
!12386 = !DILocation(line: 2329, column: 4, scope: !12356)
!12387 = !DILocation(line: 2330, column: 22, scope: !12356)
!12388 = !DILocation(line: 2330, column: 20, scope: !12356)
!12389 = !DILocation(line: 2330, column: 14, scope: !12356)
!12390 = !DILocation(line: 2330, column: 9, scope: !12356)
!12391 = !DILocation(line: 2331, column: 3, scope: !12356)
!12392 = !DILocation(line: 2322, column: 37, scope: !12349)
!12393 = !DILocation(line: 2322, column: 3, scope: !12349)
!12394 = distinct !{!12394, !12353, !12395}
!12395 = !DILocation(line: 2331, column: 3, scope: !12346)
!12396 = !DILocation(line: 2332, column: 2, scope: !12334)
!12397 = !DILocation(line: 2333, column: 7, scope: !12398)
!12398 = distinct !DILexicalBlock(scope: !12328, file: !3, line: 2332, column: 9)
!12399 = !DILocation(line: 2333, column: 11, scope: !12398)
!12400 = !DILocation(line: 2333, column: 19, scope: !12398)
!12401 = !DILocation(line: 2333, column: 26, scope: !12398)
!12402 = !DILocation(line: 2333, column: 5, scope: !12398)
!12403 = !DILocation(line: 2334, column: 7, scope: !12404)
!12404 = distinct !DILexicalBlock(scope: !12398, file: !3, line: 2334, column: 7)
!12405 = !DILocation(line: 2334, column: 13, scope: !12404)
!12406 = !DILocation(line: 2334, column: 25, scope: !12404)
!12407 = !DILocation(line: 2334, column: 23, scope: !12404)
!12408 = !DILocation(line: 2334, column: 29, scope: !12404)
!12409 = !DILocation(line: 2334, column: 27, scope: !12404)
!12410 = !DILocation(line: 2334, column: 7, scope: !12398)
!12411 = !DILocation(line: 2335, column: 4, scope: !12404)
!12412 = !DILocation(line: 2337, column: 10, scope: !12413)
!12413 = distinct !DILexicalBlock(scope: !12398, file: !3, line: 2337, column: 3)
!12414 = !DILocation(line: 2337, column: 8, scope: !12413)
!12415 = !DILocation(line: 2337, column: 15, scope: !12416)
!12416 = distinct !DILexicalBlock(scope: !12413, file: !3, line: 2337, column: 3)
!12417 = !DILocation(line: 2337, column: 19, scope: !12416)
!12418 = !DILocation(line: 2337, column: 25, scope: !12416)
!12419 = !DILocation(line: 2337, column: 17, scope: !12416)
!12420 = !DILocation(line: 2337, column: 3, scope: !12413)
!12421 = !DILocation(line: 2338, column: 11, scope: !12422)
!12422 = distinct !DILexicalBlock(scope: !12416, file: !3, line: 2337, column: 41)
!12423 = !DILocation(line: 2338, column: 17, scope: !12422)
!12424 = !DILocation(line: 2338, column: 27, scope: !12422)
!12425 = !DILocation(line: 2338, column: 4, scope: !12422)
!12426 = !DILocation(line: 2339, column: 11, scope: !12422)
!12427 = !DILocation(line: 2339, column: 18, scope: !12422)
!12428 = !DILocation(line: 2339, column: 16, scope: !12422)
!12429 = !DILocation(line: 2339, column: 30, scope: !12422)
!12430 = !DILocation(line: 2339, column: 28, scope: !12422)
!12431 = !DILocation(line: 2339, column: 24, scope: !12422)
!12432 = !DILocation(line: 2339, column: 4, scope: !12422)
!12433 = !DILocation(line: 2340, column: 9, scope: !12422)
!12434 = !DILocation(line: 2341, column: 16, scope: !12422)
!12435 = !DILocation(line: 2341, column: 13, scope: !12422)
!12436 = !DILocation(line: 2342, column: 3, scope: !12422)
!12437 = !DILocation(line: 2337, column: 37, scope: !12416)
!12438 = !DILocation(line: 2337, column: 3, scope: !12416)
!12439 = distinct !{!12439, !12420, !12440}
!12440 = !DILocation(line: 2342, column: 3, scope: !12413)
!12441 = !DILocation(line: 2344, column: 2, scope: !12188)
!12442 = !DILocation(line: 2345, column: 1, scope: !12188)
!12443 = distinct !DISubprogram(name: "fbcon_set_def_font", scope: !3, file: !3, line: 2540, type: !4918, scopeLine: 2541, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !241)
!12444 = !DILocalVariable(name: "vc", arg: 1, scope: !12443, file: !3, line: 2540, type: !4826)
!12445 = !DILocation(line: 2540, column: 47, scope: !12443)
!12446 = !DILocalVariable(name: "font", arg: 2, scope: !12443, file: !3, line: 2540, type: !4904)
!12447 = !DILocation(line: 2540, column: 72, scope: !12443)
!12448 = !DILocalVariable(name: "name", arg: 3, scope: !12443, file: !3, line: 2540, type: !512)
!12449 = !DILocation(line: 2540, column: 84, scope: !12443)
!12450 = !DILocalVariable(name: "info", scope: !12443, file: !3, line: 2542, type: !199)
!12451 = !DILocation(line: 2542, column: 18, scope: !12443)
!12452 = !DILocation(line: 2542, column: 50, scope: !12443)
!12453 = !DILocation(line: 2542, column: 54, scope: !12443)
!12454 = !DILocation(line: 2542, column: 39, scope: !12443)
!12455 = !DILocation(line: 2542, column: 25, scope: !12443)
!12456 = !DILocalVariable(name: "f", scope: !12443, file: !3, line: 2543, type: !9708)
!12457 = !DILocation(line: 2543, column: 26, scope: !12443)
!12458 = !DILocation(line: 2545, column: 7, scope: !12459)
!12459 = distinct !DILexicalBlock(scope: !12443, file: !3, line: 2545, column: 6)
!12460 = !DILocation(line: 2545, column: 6, scope: !12443)
!12461 = !DILocation(line: 2546, column: 24, scope: !12459)
!12462 = !DILocation(line: 2546, column: 30, scope: !12459)
!12463 = !DILocation(line: 2546, column: 34, scope: !12459)
!12464 = !DILocation(line: 2546, column: 40, scope: !12459)
!12465 = !DILocation(line: 2546, column: 46, scope: !12459)
!12466 = !DILocation(line: 2546, column: 50, scope: !12459)
!12467 = !DILocation(line: 2547, column: 10, scope: !12459)
!12468 = !DILocation(line: 2547, column: 16, scope: !12459)
!12469 = !DILocation(line: 2547, column: 23, scope: !12459)
!12470 = !DILocation(line: 2547, column: 31, scope: !12459)
!12471 = !DILocation(line: 2547, column: 37, scope: !12459)
!12472 = !DILocation(line: 2547, column: 44, scope: !12459)
!12473 = !DILocation(line: 2546, column: 7, scope: !12459)
!12474 = !DILocation(line: 2546, column: 5, scope: !12459)
!12475 = !DILocation(line: 2546, column: 3, scope: !12459)
!12476 = !DILocation(line: 2548, column: 27, scope: !12477)
!12477 = distinct !DILexicalBlock(scope: !12459, file: !3, line: 2548, column: 11)
!12478 = !DILocation(line: 2548, column: 17, scope: !12477)
!12479 = !DILocation(line: 2548, column: 15, scope: !12477)
!12480 = !DILocation(line: 2548, column: 11, scope: !12459)
!12481 = !DILocation(line: 2549, column: 3, scope: !12477)
!12482 = !DILocation(line: 2551, column: 16, scope: !12443)
!12483 = !DILocation(line: 2551, column: 19, scope: !12443)
!12484 = !DILocation(line: 2551, column: 2, scope: !12443)
!12485 = !DILocation(line: 2551, column: 8, scope: !12443)
!12486 = !DILocation(line: 2551, column: 14, scope: !12443)
!12487 = !DILocation(line: 2552, column: 17, scope: !12443)
!12488 = !DILocation(line: 2552, column: 20, scope: !12443)
!12489 = !DILocation(line: 2552, column: 2, scope: !12443)
!12490 = !DILocation(line: 2552, column: 8, scope: !12443)
!12491 = !DILocation(line: 2552, column: 15, scope: !12443)
!12492 = !DILocation(line: 2553, column: 27, scope: !12443)
!12493 = !DILocation(line: 2553, column: 31, scope: !12443)
!12494 = !DILocation(line: 2553, column: 34, scope: !12443)
!12495 = !DILocation(line: 2553, column: 41, scope: !12443)
!12496 = !DILocation(line: 2553, column: 44, scope: !12443)
!12497 = !DILocation(line: 2553, column: 52, scope: !12443)
!12498 = !DILocation(line: 2553, column: 55, scope: !12443)
!12499 = !DILocation(line: 2553, column: 9, scope: !12443)
!12500 = !DILocation(line: 2553, column: 2, scope: !12443)
!12501 = !DILocation(line: 2554, column: 1, scope: !12443)
!12502 = distinct !DISubprogram(name: "fbcon_copy_font", scope: !3, file: !3, line: 2454, type: !4922, scopeLine: 2455, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !241)
!12503 = !DILocalVariable(name: "vc", arg: 1, scope: !12502, file: !3, line: 2454, type: !4826)
!12504 = !DILocation(line: 2454, column: 44, scope: !12502)
!12505 = !DILocalVariable(name: "con", arg: 2, scope: !12502, file: !3, line: 2454, type: !170)
!12506 = !DILocation(line: 2454, column: 52, scope: !12502)
!12507 = !DILocalVariable(name: "od", scope: !12502, file: !3, line: 2456, type: !5048)
!12508 = !DILocation(line: 2456, column: 24, scope: !12502)
!12509 = !DILocation(line: 2456, column: 41, scope: !12502)
!12510 = !DILocation(line: 2456, column: 30, scope: !12502)
!12511 = !DILocalVariable(name: "f", scope: !12502, file: !3, line: 2457, type: !4904)
!12512 = !DILocation(line: 2457, column: 23, scope: !12502)
!12513 = !DILocation(line: 2457, column: 28, scope: !12502)
!12514 = !DILocation(line: 2457, column: 32, scope: !12502)
!12515 = !DILocation(line: 2459, column: 6, scope: !12516)
!12516 = distinct !DILexicalBlock(scope: !12502, file: !3, line: 2459, column: 6)
!12517 = !DILocation(line: 2459, column: 10, scope: !12516)
!12518 = !DILocation(line: 2459, column: 22, scope: !12516)
!12519 = !DILocation(line: 2459, column: 25, scope: !12516)
!12520 = !DILocation(line: 2459, column: 19, scope: !12516)
!12521 = !DILocation(line: 2459, column: 6, scope: !12502)
!12522 = !DILocation(line: 2460, column: 3, scope: !12516)
!12523 = !DILocation(line: 2461, column: 27, scope: !12502)
!12524 = !DILocation(line: 2461, column: 31, scope: !12502)
!12525 = !DILocation(line: 2461, column: 34, scope: !12502)
!12526 = !DILocation(line: 2461, column: 41, scope: !12502)
!12527 = !DILocation(line: 2461, column: 44, scope: !12502)
!12528 = !DILocation(line: 2461, column: 52, scope: !12502)
!12529 = !DILocation(line: 2461, column: 56, scope: !12502)
!12530 = !DILocation(line: 2461, column: 66, scope: !12502)
!12531 = !DILocation(line: 2461, column: 70, scope: !12502)
!12532 = !DILocation(line: 2461, column: 9, scope: !12502)
!12533 = !DILocation(line: 2461, column: 2, scope: !12502)
!12534 = !DILocation(line: 2462, column: 1, scope: !12502)
!12535 = distinct !DISubprogram(name: "fbcon_resize", scope: !3, file: !3, line: 2008, type: !4926, scopeLine: 2010, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !241)
!12536 = !DILocalVariable(name: "vc", arg: 1, scope: !12535, file: !3, line: 2008, type: !4826)
!12537 = !DILocation(line: 2008, column: 41, scope: !12535)
!12538 = !DILocalVariable(name: "width", arg: 2, scope: !12535, file: !3, line: 2008, type: !7)
!12539 = !DILocation(line: 2008, column: 58, scope: !12535)
!12540 = !DILocalVariable(name: "height", arg: 3, scope: !12535, file: !3, line: 2009, type: !7)
!12541 = !DILocation(line: 2009, column: 17, scope: !12535)
!12542 = !DILocalVariable(name: "user", arg: 4, scope: !12535, file: !3, line: 2009, type: !7)
!12543 = !DILocation(line: 2009, column: 38, scope: !12535)
!12544 = !DILocalVariable(name: "info", scope: !12535, file: !3, line: 2011, type: !199)
!12545 = !DILocation(line: 2011, column: 18, scope: !12535)
!12546 = !DILocation(line: 2011, column: 50, scope: !12535)
!12547 = !DILocation(line: 2011, column: 54, scope: !12535)
!12548 = !DILocation(line: 2011, column: 39, scope: !12535)
!12549 = !DILocation(line: 2011, column: 25, scope: !12535)
!12550 = !DILocalVariable(name: "ops", scope: !12535, file: !3, line: 2012, type: !4818)
!12551 = !DILocation(line: 2012, column: 20, scope: !12535)
!12552 = !DILocation(line: 2012, column: 26, scope: !12535)
!12553 = !DILocation(line: 2012, column: 32, scope: !12535)
!12554 = !DILocalVariable(name: "p", scope: !12535, file: !3, line: 2013, type: !5048)
!12555 = !DILocation(line: 2013, column: 24, scope: !12535)
!12556 = !DILocation(line: 2013, column: 40, scope: !12535)
!12557 = !DILocation(line: 2013, column: 44, scope: !12535)
!12558 = !DILocation(line: 2013, column: 29, scope: !12535)
!12559 = !DILocalVariable(name: "var", scope: !12535, file: !3, line: 2014, type: !250)
!12560 = !DILocation(line: 2014, column: 27, scope: !12535)
!12561 = !DILocation(line: 2014, column: 33, scope: !12535)
!12562 = !DILocation(line: 2014, column: 39, scope: !12535)
!12563 = !DILocalVariable(name: "x_diff", scope: !12535, file: !3, line: 2015, type: !170)
!12564 = !DILocation(line: 2015, column: 6, scope: !12535)
!12565 = !DILocalVariable(name: "y_diff", scope: !12535, file: !3, line: 2015, type: !170)
!12566 = !DILocation(line: 2015, column: 14, scope: !12535)
!12567 = !DILocalVariable(name: "virt_w", scope: !12535, file: !3, line: 2015, type: !170)
!12568 = !DILocation(line: 2015, column: 22, scope: !12535)
!12569 = !DILocalVariable(name: "virt_h", scope: !12535, file: !3, line: 2015, type: !170)
!12570 = !DILocation(line: 2015, column: 30, scope: !12535)
!12571 = !DILocalVariable(name: "virt_fw", scope: !12535, file: !3, line: 2015, type: !170)
!12572 = !DILocation(line: 2015, column: 38, scope: !12535)
!12573 = !DILocalVariable(name: "virt_fh", scope: !12535, file: !3, line: 2015, type: !170)
!12574 = !DILocation(line: 2015, column: 47, scope: !12535)
!12575 = !DILocation(line: 2017, column: 6, scope: !12576)
!12576 = distinct !DILexicalBlock(scope: !12535, file: !3, line: 2017, column: 6)
!12577 = !DILocation(line: 2017, column: 9, scope: !12576)
!12578 = !DILocation(line: 2017, column: 18, scope: !12576)
!12579 = !DILocation(line: 2017, column: 21, scope: !12576)
!12580 = !DILocation(line: 2017, column: 6, scope: !12535)
!12581 = !DILocalVariable(name: "size", scope: !12582, file: !3, line: 2018, type: !170)
!12582 = distinct !DILexicalBlock(scope: !12576, file: !3, line: 2017, column: 48)
!12583 = !DILocation(line: 2018, column: 7, scope: !12582)
!12584 = !DILocalVariable(name: "pitch", scope: !12582, file: !3, line: 2019, type: !170)
!12585 = !DILocation(line: 2019, column: 7, scope: !12582)
!12586 = !DILocation(line: 2019, column: 15, scope: !12582)
!12587 = !DILocation(line: 2028, column: 7, scope: !12588)
!12588 = distinct !DILexicalBlock(scope: !12582, file: !3, line: 2028, column: 7)
!12589 = !DILocation(line: 2028, column: 13, scope: !12588)
!12590 = !DILocation(line: 2028, column: 7, scope: !12582)
!12591 = !DILocation(line: 2029, column: 4, scope: !12588)
!12592 = !DILocation(line: 2030, column: 10, scope: !12582)
!12593 = !DILocation(line: 2030, column: 8, scope: !12582)
!12594 = !DILocation(line: 2031, column: 7, scope: !12595)
!12595 = distinct !DILexicalBlock(scope: !12582, file: !3, line: 2031, column: 7)
!12596 = !DILocation(line: 2031, column: 14, scope: !12595)
!12597 = !DILocation(line: 2031, column: 12, scope: !12595)
!12598 = !DILocation(line: 2031, column: 7, scope: !12582)
!12599 = !DILocation(line: 2032, column: 4, scope: !12595)
!12600 = !DILocation(line: 2033, column: 2, scope: !12582)
!12601 = !DILocalVariable(name: "_r", scope: !12602, file: !3, line: 2035, type: !7)
!12602 = distinct !DILexicalBlock(scope: !12535, file: !3, line: 2035, column: 11)
!12603 = !DILocation(line: 2035, column: 11, scope: !12602)
!12604 = !DILocalVariable(name: "_v", scope: !12602, file: !3, line: 2035, type: !7)
!12605 = !DILocation(line: 2035, column: 9, scope: !12535)
!12606 = !DILocalVariable(name: "_r", scope: !12607, file: !3, line: 2036, type: !7)
!12607 = distinct !DILexicalBlock(scope: !12535, file: !3, line: 2036, column: 11)
!12608 = !DILocation(line: 2036, column: 11, scope: !12607)
!12609 = !DILocalVariable(name: "_v", scope: !12607, file: !3, line: 2036, type: !7)
!12610 = !DILocation(line: 2036, column: 9, scope: !12535)
!12611 = !DILocalVariable(name: "_r", scope: !12612, file: !3, line: 2037, type: !7)
!12612 = distinct !DILexicalBlock(scope: !12535, file: !3, line: 2037, column: 12)
!12613 = !DILocation(line: 2037, column: 12, scope: !12612)
!12614 = !DILocalVariable(name: "_v", scope: !12612, file: !3, line: 2037, type: !7)
!12615 = !DILocation(line: 2037, column: 10, scope: !12535)
!12616 = !DILocalVariable(name: "_r", scope: !12617, file: !3, line: 2039, type: !7)
!12617 = distinct !DILexicalBlock(scope: !12535, file: !3, line: 2039, column: 12)
!12618 = !DILocation(line: 2039, column: 12, scope: !12617)
!12619 = !DILocalVariable(name: "_v", scope: !12617, file: !3, line: 2039, type: !7)
!12620 = !DILocation(line: 2039, column: 10, scope: !12535)
!12621 = !DILocation(line: 2041, column: 13, scope: !12535)
!12622 = !DILocation(line: 2041, column: 22, scope: !12535)
!12623 = !DILocation(line: 2041, column: 20, scope: !12535)
!12624 = !DILocation(line: 2041, column: 6, scope: !12535)
!12625 = !DILocation(line: 2041, column: 11, scope: !12535)
!12626 = !DILocation(line: 2042, column: 13, scope: !12535)
!12627 = !DILocation(line: 2042, column: 22, scope: !12535)
!12628 = !DILocation(line: 2042, column: 20, scope: !12535)
!12629 = !DILocation(line: 2042, column: 6, scope: !12535)
!12630 = !DILocation(line: 2042, column: 11, scope: !12535)
!12631 = !DILocation(line: 2043, column: 11, scope: !12535)
!12632 = !DILocation(line: 2043, column: 17, scope: !12535)
!12633 = !DILocation(line: 2043, column: 21, scope: !12535)
!12634 = !DILocation(line: 2043, column: 32, scope: !12535)
!12635 = !DILocation(line: 2043, column: 26, scope: !12535)
!12636 = !DILocation(line: 2043, column: 9, scope: !12535)
!12637 = !DILocation(line: 2044, column: 11, scope: !12535)
!12638 = !DILocation(line: 2044, column: 17, scope: !12535)
!12639 = !DILocation(line: 2044, column: 21, scope: !12535)
!12640 = !DILocation(line: 2044, column: 32, scope: !12535)
!12641 = !DILocation(line: 2044, column: 26, scope: !12535)
!12642 = !DILocation(line: 2044, column: 9, scope: !12535)
!12643 = !DILocation(line: 2045, column: 6, scope: !12644)
!12644 = distinct !DILexicalBlock(scope: !12535, file: !3, line: 2045, column: 6)
!12645 = !DILocation(line: 2045, column: 13, scope: !12644)
!12646 = !DILocation(line: 2045, column: 17, scope: !12644)
!12647 = !DILocation(line: 2045, column: 20, scope: !12644)
!12648 = !DILocation(line: 2045, column: 29, scope: !12644)
!12649 = !DILocation(line: 2045, column: 27, scope: !12644)
!12650 = !DILocation(line: 2045, column: 37, scope: !12644)
!12651 = !DILocation(line: 2046, column: 6, scope: !12644)
!12652 = !DILocation(line: 2046, column: 13, scope: !12644)
!12653 = !DILocation(line: 2046, column: 17, scope: !12644)
!12654 = !DILocation(line: 2046, column: 20, scope: !12644)
!12655 = !DILocation(line: 2046, column: 29, scope: !12644)
!12656 = !DILocation(line: 2046, column: 27, scope: !12644)
!12657 = !DILocation(line: 2045, column: 6, scope: !12535)
!12658 = !DILocalVariable(name: "mode", scope: !12659, file: !3, line: 2047, type: !5077)
!12659 = distinct !DILexicalBlock(scope: !12644, file: !3, line: 2046, column: 38)
!12660 = !DILocation(line: 2047, column: 30, scope: !12659)
!12661 = !DILocation(line: 2050, column: 35, scope: !12659)
!12662 = !DILocation(line: 2050, column: 41, scope: !12659)
!12663 = !DILocation(line: 2050, column: 10, scope: !12659)
!12664 = !DILocation(line: 2050, column: 8, scope: !12659)
!12665 = !DILocation(line: 2051, column: 7, scope: !12666)
!12666 = distinct !DILexicalBlock(scope: !12659, file: !3, line: 2051, column: 7)
!12667 = !DILocation(line: 2051, column: 12, scope: !12666)
!12668 = !DILocation(line: 2051, column: 7, scope: !12659)
!12669 = !DILocation(line: 2052, column: 4, scope: !12666)
!12670 = !DILocation(line: 2053, column: 24, scope: !12659)
!12671 = !DILocation(line: 2053, column: 3, scope: !12659)
!12672 = !DILocation(line: 2054, column: 29, scope: !12659)
!12673 = !DILocation(line: 2054, column: 3, scope: !12659)
!12674 = !DILocation(line: 2056, column: 7, scope: !12675)
!12675 = distinct !DILexicalBlock(scope: !12659, file: !3, line: 2056, column: 7)
!12676 = !DILocation(line: 2056, column: 20, scope: !12675)
!12677 = !DILocation(line: 2056, column: 25, scope: !12675)
!12678 = !DILocation(line: 2056, column: 24, scope: !12675)
!12679 = !DILocation(line: 2056, column: 14, scope: !12675)
!12680 = !DILocation(line: 2056, column: 33, scope: !12675)
!12681 = !DILocation(line: 2056, column: 36, scope: !12675)
!12682 = !DILocation(line: 2056, column: 49, scope: !12675)
!12683 = !DILocation(line: 2056, column: 54, scope: !12675)
!12684 = !DILocation(line: 2056, column: 53, scope: !12675)
!12685 = !DILocation(line: 2056, column: 43, scope: !12675)
!12686 = !DILocation(line: 2056, column: 7, scope: !12659)
!12687 = !DILocation(line: 2057, column: 4, scope: !12675)
!12688 = !DILocation(line: 2060, column: 22, scope: !12689)
!12689 = distinct !DILexicalBlock(scope: !12659, file: !3, line: 2060, column: 7)
!12690 = !DILocation(line: 2060, column: 7, scope: !12689)
!12691 = !DILocation(line: 2060, column: 7, scope: !12659)
!12692 = !DILocation(line: 2061, column: 8, scope: !12693)
!12693 = distinct !DILexicalBlock(scope: !12689, file: !3, line: 2060, column: 27)
!12694 = !DILocation(line: 2061, column: 17, scope: !12693)
!12695 = !DILocation(line: 2063, column: 15, scope: !12693)
!12696 = !DILocation(line: 2063, column: 4, scope: !12693)
!12697 = !DILocation(line: 2064, column: 3, scope: !12693)
!12698 = !DILocation(line: 2065, column: 18, scope: !12659)
!12699 = !DILocation(line: 2065, column: 22, scope: !12659)
!12700 = !DILocation(line: 2065, column: 28, scope: !12659)
!12701 = !DILocation(line: 2065, column: 33, scope: !12659)
!12702 = !DILocation(line: 2065, column: 3, scope: !12659)
!12703 = !DILocation(line: 2066, column: 3, scope: !12659)
!12704 = !DILocation(line: 2066, column: 8, scope: !12659)
!12705 = !DILocation(line: 2066, column: 14, scope: !12659)
!12706 = !DILocation(line: 2066, column: 20, scope: !12659)
!12707 = !DILocation(line: 2067, column: 2, scope: !12659)
!12708 = !DILocation(line: 2068, column: 19, scope: !12535)
!12709 = !DILocation(line: 2068, column: 22, scope: !12535)
!12710 = !DILocation(line: 2068, column: 28, scope: !12535)
!12711 = !DILocation(line: 2068, column: 2, scope: !12535)
!12712 = !DILocation(line: 2069, column: 2, scope: !12535)
!12713 = !DILocation(line: 2070, column: 1, scope: !12535)
!12714 = distinct !DISubprogram(name: "fbcon_invert_region", scope: !3, file: !3, line: 2630, type: !4941, scopeLine: 2631, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !241)
!12715 = !DILocalVariable(name: "vc", arg: 1, scope: !12714, file: !3, line: 2630, type: !4826)
!12716 = !DILocation(line: 2630, column: 49, scope: !12714)
!12717 = !DILocalVariable(name: "p", arg: 2, scope: !12714, file: !3, line: 2630, type: !193)
!12718 = !DILocation(line: 2630, column: 59, scope: !12714)
!12719 = !DILocalVariable(name: "cnt", arg: 3, scope: !12714, file: !3, line: 2630, type: !170)
!12720 = !DILocation(line: 2630, column: 66, scope: !12714)
!12721 = !DILocation(line: 2632, column: 2, scope: !12714)
!12722 = !DILocation(line: 2632, column: 12, scope: !12714)
!12723 = !DILocalVariable(name: "a", scope: !12724, file: !3, line: 2633, type: !194)
!12724 = distinct !DILexicalBlock(scope: !12714, file: !3, line: 2632, column: 16)
!12725 = !DILocation(line: 2633, column: 7, scope: !12724)
!12726 = !DILocation(line: 2633, column: 11, scope: !12724)
!12727 = !DILocation(line: 2634, column: 8, scope: !12728)
!12728 = distinct !DILexicalBlock(scope: !12724, file: !3, line: 2634, column: 7)
!12729 = !DILocation(line: 2634, column: 12, scope: !12728)
!12730 = !DILocation(line: 2634, column: 7, scope: !12724)
!12731 = !DILocation(line: 2635, column: 6, scope: !12728)
!12732 = !DILocation(line: 2635, column: 4, scope: !12728)
!12733 = !DILocation(line: 2636, column: 12, scope: !12734)
!12734 = distinct !DILexicalBlock(scope: !12728, file: !3, line: 2636, column: 12)
!12735 = !DILocation(line: 2636, column: 16, scope: !12734)
!12736 = !DILocation(line: 2636, column: 32, scope: !12734)
!12737 = !DILocation(line: 2636, column: 12, scope: !12728)
!12738 = !DILocation(line: 2637, column: 10, scope: !12734)
!12739 = !DILocation(line: 2637, column: 9, scope: !12734)
!12740 = !DILocation(line: 2637, column: 13, scope: !12734)
!12741 = !DILocation(line: 2637, column: 28, scope: !12734)
!12742 = !DILocation(line: 2637, column: 27, scope: !12734)
!12743 = !DILocation(line: 2637, column: 31, scope: !12734)
!12744 = !DILocation(line: 2637, column: 41, scope: !12734)
!12745 = !DILocation(line: 2637, column: 23, scope: !12734)
!12746 = !DILocation(line: 2638, column: 11, scope: !12734)
!12747 = !DILocation(line: 2638, column: 10, scope: !12734)
!12748 = !DILocation(line: 2638, column: 14, scope: !12734)
!12749 = !DILocation(line: 2638, column: 24, scope: !12734)
!12750 = !DILocation(line: 2637, column: 47, scope: !12734)
!12751 = !DILocation(line: 2637, column: 8, scope: !12734)
!12752 = !DILocation(line: 2637, column: 6, scope: !12734)
!12753 = !DILocation(line: 2637, column: 4, scope: !12734)
!12754 = !DILocation(line: 2640, column: 10, scope: !12734)
!12755 = !DILocation(line: 2640, column: 9, scope: !12734)
!12756 = !DILocation(line: 2640, column: 13, scope: !12734)
!12757 = !DILocation(line: 2640, column: 28, scope: !12734)
!12758 = !DILocation(line: 2640, column: 27, scope: !12734)
!12759 = !DILocation(line: 2640, column: 31, scope: !12734)
!12760 = !DILocation(line: 2640, column: 41, scope: !12734)
!12761 = !DILocation(line: 2640, column: 23, scope: !12734)
!12762 = !DILocation(line: 2641, column: 11, scope: !12734)
!12763 = !DILocation(line: 2641, column: 10, scope: !12734)
!12764 = !DILocation(line: 2641, column: 14, scope: !12734)
!12765 = !DILocation(line: 2641, column: 24, scope: !12734)
!12766 = !DILocation(line: 2640, column: 47, scope: !12734)
!12767 = !DILocation(line: 2640, column: 8, scope: !12734)
!12768 = !DILocation(line: 2640, column: 6, scope: !12734)
!12769 = !DILocation(line: 2642, column: 3, scope: !12724)
!12770 = distinct !{!12770, !12721, !12771}
!12771 = !DILocation(line: 2643, column: 2, scope: !12714)
!12772 = !DILocation(line: 2644, column: 1, scope: !12714)
!12773 = distinct !DISubprogram(name: "fbcon_screen_pos", scope: !3, file: !3, line: 2599, type: !4945, scopeLine: 2600, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !241)
!12774 = !DILocalVariable(name: "vc", arg: 1, scope: !12773, file: !3, line: 2599, type: !4947)
!12775 = !DILocation(line: 2599, column: 52, scope: !12773)
!12776 = !DILocalVariable(name: "offset", arg: 2, scope: !12773, file: !3, line: 2599, type: !170)
!12777 = !DILocation(line: 2599, column: 60, scope: !12773)
!12778 = !DILocation(line: 2601, column: 18, scope: !12773)
!12779 = !DILocation(line: 2601, column: 22, scope: !12773)
!12780 = !DILocation(line: 2601, column: 34, scope: !12773)
!12781 = !DILocation(line: 2601, column: 32, scope: !12773)
!12782 = !DILocation(line: 2601, column: 9, scope: !12773)
!12783 = !DILocation(line: 2601, column: 2, scope: !12773)
!12784 = distinct !DISubprogram(name: "fbcon_getxy", scope: !3, file: !3, line: 2604, type: !4951, scopeLine: 2606, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !241)
!12785 = !DILocalVariable(name: "vc", arg: 1, scope: !12784, file: !3, line: 2604, type: !4826)
!12786 = !DILocation(line: 2604, column: 50, scope: !12784)
!12787 = !DILocalVariable(name: "pos", arg: 2, scope: !12784, file: !3, line: 2604, type: !299)
!12788 = !DILocation(line: 2604, column: 68, scope: !12784)
!12789 = !DILocalVariable(name: "px", arg: 3, scope: !12784, file: !3, line: 2605, type: !191)
!12790 = !DILocation(line: 2605, column: 11, scope: !12784)
!12791 = !DILocalVariable(name: "py", arg: 4, scope: !12784, file: !3, line: 2605, type: !191)
!12792 = !DILocation(line: 2605, column: 20, scope: !12784)
!12793 = !DILocalVariable(name: "ret", scope: !12784, file: !3, line: 2607, type: !299)
!12794 = !DILocation(line: 2607, column: 16, scope: !12784)
!12795 = !DILocalVariable(name: "x", scope: !12784, file: !3, line: 2608, type: !170)
!12796 = !DILocation(line: 2608, column: 6, scope: !12784)
!12797 = !DILocalVariable(name: "y", scope: !12784, file: !3, line: 2608, type: !170)
!12798 = !DILocation(line: 2608, column: 9, scope: !12784)
!12799 = !DILocation(line: 2610, column: 6, scope: !12800)
!12800 = distinct !DILexicalBlock(scope: !12784, file: !3, line: 2610, column: 6)
!12801 = !DILocation(line: 2610, column: 13, scope: !12800)
!12802 = !DILocation(line: 2610, column: 17, scope: !12800)
!12803 = !DILocation(line: 2610, column: 10, scope: !12800)
!12804 = !DILocation(line: 2610, column: 27, scope: !12800)
!12805 = !DILocation(line: 2610, column: 30, scope: !12800)
!12806 = !DILocation(line: 2610, column: 36, scope: !12800)
!12807 = !DILocation(line: 2610, column: 40, scope: !12800)
!12808 = !DILocation(line: 2610, column: 34, scope: !12800)
!12809 = !DILocation(line: 2610, column: 6, scope: !12784)
!12810 = !DILocalVariable(name: "offset", scope: !12811, file: !3, line: 2611, type: !299)
!12811 = distinct !DILexicalBlock(scope: !12800, file: !3, line: 2610, column: 52)
!12812 = !DILocation(line: 2611, column: 17, scope: !12811)
!12813 = !DILocation(line: 2611, column: 27, scope: !12811)
!12814 = !DILocation(line: 2611, column: 33, scope: !12811)
!12815 = !DILocation(line: 2611, column: 37, scope: !12811)
!12816 = !DILocation(line: 2611, column: 31, scope: !12811)
!12817 = !DILocation(line: 2611, column: 48, scope: !12811)
!12818 = !DILocation(line: 2613, column: 7, scope: !12811)
!12819 = !DILocation(line: 2613, column: 16, scope: !12811)
!12820 = !DILocation(line: 2613, column: 20, scope: !12811)
!12821 = !DILocation(line: 2613, column: 14, scope: !12811)
!12822 = !DILocation(line: 2613, column: 5, scope: !12811)
!12823 = !DILocation(line: 2614, column: 7, scope: !12811)
!12824 = !DILocation(line: 2614, column: 16, scope: !12811)
!12825 = !DILocation(line: 2614, column: 20, scope: !12811)
!12826 = !DILocation(line: 2614, column: 14, scope: !12811)
!12827 = !DILocation(line: 2614, column: 5, scope: !12811)
!12828 = !DILocation(line: 2615, column: 9, scope: !12811)
!12829 = !DILocation(line: 2615, column: 16, scope: !12811)
!12830 = !DILocation(line: 2615, column: 20, scope: !12811)
!12831 = !DILocation(line: 2615, column: 30, scope: !12811)
!12832 = !DILocation(line: 2615, column: 28, scope: !12811)
!12833 = !DILocation(line: 2615, column: 33, scope: !12811)
!12834 = !DILocation(line: 2615, column: 15, scope: !12811)
!12835 = !DILocation(line: 2615, column: 13, scope: !12811)
!12836 = !DILocation(line: 2615, column: 7, scope: !12811)
!12837 = !DILocation(line: 2616, column: 2, scope: !12811)
!12838 = !DILocation(line: 2618, column: 9, scope: !12839)
!12839 = distinct !DILexicalBlock(scope: !12800, file: !3, line: 2616, column: 9)
!12840 = !DILocation(line: 2618, column: 5, scope: !12839)
!12841 = !DILocation(line: 2619, column: 9, scope: !12839)
!12842 = !DILocation(line: 2619, column: 13, scope: !12839)
!12843 = !DILocation(line: 2619, column: 7, scope: !12839)
!12844 = !DILocation(line: 2621, column: 6, scope: !12845)
!12845 = distinct !DILexicalBlock(scope: !12784, file: !3, line: 2621, column: 6)
!12846 = !DILocation(line: 2621, column: 6, scope: !12784)
!12847 = !DILocation(line: 2622, column: 9, scope: !12845)
!12848 = !DILocation(line: 2622, column: 4, scope: !12845)
!12849 = !DILocation(line: 2622, column: 7, scope: !12845)
!12850 = !DILocation(line: 2622, column: 3, scope: !12845)
!12851 = !DILocation(line: 2623, column: 6, scope: !12852)
!12852 = distinct !DILexicalBlock(scope: !12784, file: !3, line: 2623, column: 6)
!12853 = !DILocation(line: 2623, column: 6, scope: !12784)
!12854 = !DILocation(line: 2624, column: 9, scope: !12852)
!12855 = !DILocation(line: 2624, column: 4, scope: !12852)
!12856 = !DILocation(line: 2624, column: 7, scope: !12852)
!12857 = !DILocation(line: 2624, column: 3, scope: !12852)
!12858 = !DILocation(line: 2625, column: 9, scope: !12784)
!12859 = !DILocation(line: 2625, column: 2, scope: !12784)
!12860 = distinct !DISubprogram(name: "fbcon_debug_enter", scope: !3, file: !3, line: 2260, type: !4894, scopeLine: 2261, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !241)
!12861 = !DILocalVariable(name: "vc", arg: 1, scope: !12860, file: !3, line: 2260, type: !4826)
!12862 = !DILocation(line: 2260, column: 46, scope: !12860)
!12863 = !DILocalVariable(name: "info", scope: !12860, file: !3, line: 2262, type: !199)
!12864 = !DILocation(line: 2262, column: 18, scope: !12860)
!12865 = !DILocation(line: 2262, column: 50, scope: !12860)
!12866 = !DILocation(line: 2262, column: 54, scope: !12860)
!12867 = !DILocation(line: 2262, column: 39, scope: !12860)
!12868 = !DILocation(line: 2262, column: 25, scope: !12860)
!12869 = !DILocalVariable(name: "ops", scope: !12860, file: !3, line: 2263, type: !4818)
!12870 = !DILocation(line: 2263, column: 20, scope: !12860)
!12871 = !DILocation(line: 2263, column: 26, scope: !12860)
!12872 = !DILocation(line: 2263, column: 32, scope: !12860)
!12873 = !DILocation(line: 2265, column: 23, scope: !12860)
!12874 = !DILocation(line: 2265, column: 28, scope: !12860)
!12875 = !DILocation(line: 2265, column: 2, scope: !12860)
!12876 = !DILocation(line: 2265, column: 7, scope: !12860)
!12877 = !DILocation(line: 2265, column: 21, scope: !12860)
!12878 = !DILocation(line: 2266, column: 2, scope: !12860)
!12879 = !DILocation(line: 2266, column: 7, scope: !12860)
!12880 = !DILocation(line: 2266, column: 16, scope: !12860)
!12881 = !DILocation(line: 2267, column: 6, scope: !12882)
!12882 = distinct !DILexicalBlock(scope: !12860, file: !3, line: 2267, column: 6)
!12883 = !DILocation(line: 2267, column: 12, scope: !12882)
!12884 = !DILocation(line: 2267, column: 19, scope: !12882)
!12885 = !DILocation(line: 2267, column: 6, scope: !12860)
!12886 = !DILocation(line: 2268, column: 3, scope: !12882)
!12887 = !DILocation(line: 2268, column: 9, scope: !12882)
!12888 = !DILocation(line: 2268, column: 16, scope: !12882)
!12889 = !DILocation(line: 2268, column: 31, scope: !12882)
!12890 = !DILocation(line: 2269, column: 20, scope: !12860)
!12891 = !DILocation(line: 2269, column: 2, scope: !12860)
!12892 = !DILocation(line: 2270, column: 2, scope: !12860)
!12893 = distinct !DISubprogram(name: "fbcon_debug_leave", scope: !3, file: !3, line: 2273, type: !4894, scopeLine: 2274, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !241)
!12894 = !DILocalVariable(name: "vc", arg: 1, scope: !12893, file: !3, line: 2273, type: !4826)
!12895 = !DILocation(line: 2273, column: 46, scope: !12893)
!12896 = !DILocalVariable(name: "info", scope: !12893, file: !3, line: 2275, type: !199)
!12897 = !DILocation(line: 2275, column: 18, scope: !12893)
!12898 = !DILocation(line: 2275, column: 50, scope: !12893)
!12899 = !DILocation(line: 2275, column: 54, scope: !12893)
!12900 = !DILocation(line: 2275, column: 39, scope: !12893)
!12901 = !DILocation(line: 2275, column: 25, scope: !12893)
!12902 = !DILocalVariable(name: "ops", scope: !12893, file: !3, line: 2276, type: !4818)
!12903 = !DILocation(line: 2276, column: 20, scope: !12893)
!12904 = !DILocation(line: 2276, column: 26, scope: !12893)
!12905 = !DILocation(line: 2276, column: 32, scope: !12893)
!12906 = !DILocation(line: 2278, column: 18, scope: !12893)
!12907 = !DILocation(line: 2278, column: 23, scope: !12893)
!12908 = !DILocation(line: 2278, column: 2, scope: !12893)
!12909 = !DILocation(line: 2278, column: 7, scope: !12893)
!12910 = !DILocation(line: 2278, column: 16, scope: !12893)
!12911 = !DILocation(line: 2279, column: 6, scope: !12912)
!12912 = distinct !DILexicalBlock(scope: !12893, file: !3, line: 2279, column: 6)
!12913 = !DILocation(line: 2279, column: 12, scope: !12912)
!12914 = !DILocation(line: 2279, column: 19, scope: !12912)
!12915 = !DILocation(line: 2279, column: 6, scope: !12893)
!12916 = !DILocation(line: 2280, column: 3, scope: !12912)
!12917 = !DILocation(line: 2280, column: 9, scope: !12912)
!12918 = !DILocation(line: 2280, column: 16, scope: !12912)
!12919 = !DILocation(line: 2280, column: 31, scope: !12912)
!12920 = !DILocation(line: 2281, column: 2, scope: !12893)
!12921 = distinct !DISubprogram(name: "fbcon_free_font", scope: !3, file: !3, line: 1178, type: !12922, scopeLine: 1179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !241)
!12922 = !DISubroutineType(types: !12923)
!12923 = !{null, !5048, !720}
!12924 = !DILocalVariable(name: "p", arg: 1, scope: !12921, file: !3, line: 1178, type: !5048)
!12925 = !DILocation(line: 1178, column: 51, scope: !12921)
!12926 = !DILocalVariable(name: "freefont", arg: 2, scope: !12921, file: !3, line: 1178, type: !720)
!12927 = !DILocation(line: 1178, column: 59, scope: !12921)
!12928 = !DILocation(line: 1180, column: 6, scope: !12929)
!12929 = distinct !DILexicalBlock(scope: !12921, file: !3, line: 1180, column: 6)
!12930 = !DILocation(line: 1180, column: 15, scope: !12929)
!12931 = !DILocation(line: 1180, column: 18, scope: !12929)
!12932 = !DILocation(line: 1180, column: 21, scope: !12929)
!12933 = !DILocation(line: 1180, column: 30, scope: !12929)
!12934 = !DILocation(line: 1180, column: 33, scope: !12929)
!12935 = !DILocation(line: 1180, column: 36, scope: !12929)
!12936 = !DILocation(line: 1180, column: 45, scope: !12929)
!12937 = !DILocation(line: 1180, column: 51, scope: !12929)
!12938 = !DILocation(line: 1180, column: 49, scope: !12929)
!12939 = !DILocation(line: 1180, column: 73, scope: !12929)
!12940 = !DILocation(line: 1180, column: 6, scope: !12921)
!12941 = !DILocation(line: 1181, column: 9, scope: !12929)
!12942 = !DILocation(line: 1181, column: 12, scope: !12929)
!12943 = !DILocation(line: 1181, column: 21, scope: !12929)
!12944 = !DILocation(line: 1181, column: 3, scope: !12929)
!12945 = !DILocation(line: 1182, column: 2, scope: !12921)
!12946 = !DILocation(line: 1182, column: 5, scope: !12921)
!12947 = !DILocation(line: 1182, column: 14, scope: !12921)
!12948 = !DILocation(line: 1183, column: 2, scope: !12921)
!12949 = !DILocation(line: 1183, column: 5, scope: !12921)
!12950 = !DILocation(line: 1183, column: 14, scope: !12921)
!12951 = !DILocation(line: 1184, column: 1, scope: !12921)
!12952 = distinct !DISubprogram(name: "set_vc_hi_font", scope: !3, file: !3, line: 2348, type: !12953, scopeLine: 2349, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !241)
!12953 = !DISubroutineType(types: !12954)
!12954 = !{null, !4826, !720}
!12955 = !DILocalVariable(name: "vc", arg: 1, scope: !12952, file: !3, line: 2348, type: !4826)
!12956 = !DILocation(line: 2348, column: 44, scope: !12952)
!12957 = !DILocalVariable(name: "set", arg: 2, scope: !12952, file: !3, line: 2348, type: !720)
!12958 = !DILocation(line: 2348, column: 53, scope: !12952)
!12959 = !DILocation(line: 2350, column: 7, scope: !12960)
!12960 = distinct !DILexicalBlock(scope: !12952, file: !3, line: 2350, column: 6)
!12961 = !DILocation(line: 2350, column: 6, scope: !12952)
!12962 = !DILocation(line: 2351, column: 3, scope: !12963)
!12963 = distinct !DILexicalBlock(scope: !12960, file: !3, line: 2350, column: 12)
!12964 = !DILocation(line: 2351, column: 7, scope: !12963)
!12965 = !DILocation(line: 2351, column: 23, scope: !12963)
!12966 = !DILocation(line: 2352, column: 7, scope: !12967)
!12967 = distinct !DILexicalBlock(scope: !12963, file: !3, line: 2352, column: 7)
!12968 = !DILocation(line: 2352, column: 11, scope: !12967)
!12969 = !DILocation(line: 2352, column: 7, scope: !12963)
!12970 = !DILocation(line: 2353, column: 4, scope: !12971)
!12971 = distinct !DILexicalBlock(scope: !12967, file: !3, line: 2352, column: 28)
!12972 = !DILocation(line: 2353, column: 8, scope: !12971)
!12973 = !DILocation(line: 2353, column: 27, scope: !12971)
!12974 = !DILocation(line: 2354, column: 4, scope: !12971)
!12975 = !DILocation(line: 2354, column: 8, scope: !12971)
!12976 = !DILocation(line: 2354, column: 29, scope: !12971)
!12977 = !DILocation(line: 2355, column: 3, scope: !12971)
!12978 = !DILocation(line: 2358, column: 7, scope: !12979)
!12979 = distinct !DILexicalBlock(scope: !12963, file: !3, line: 2358, column: 7)
!12980 = !DILocation(line: 2358, column: 11, scope: !12979)
!12981 = !DILocation(line: 2358, column: 7, scope: !12963)
!12982 = !DILocalVariable(name: "cp", scope: !12983, file: !3, line: 2359, type: !4957)
!12983 = distinct !DILexicalBlock(scope: !12979, file: !3, line: 2358, column: 28)
!12984 = !DILocation(line: 2359, column: 20, scope: !12983)
!12985 = !DILocation(line: 2360, column: 27, scope: !12983)
!12986 = !DILocation(line: 2360, column: 31, scope: !12983)
!12987 = !DILocation(line: 2360, column: 8, scope: !12983)
!12988 = !DILocalVariable(name: "count", scope: !12983, file: !3, line: 2361, type: !170)
!12989 = !DILocation(line: 2361, column: 8, scope: !12983)
!12990 = !DILocation(line: 2361, column: 16, scope: !12983)
!12991 = !DILocation(line: 2361, column: 20, scope: !12983)
!12992 = !DILocation(line: 2361, column: 38, scope: !12983)
!12993 = !DILocalVariable(name: "c", scope: !12983, file: !3, line: 2362, type: !198)
!12994 = !DILocation(line: 2362, column: 19, scope: !12983)
!12995 = !DILocation(line: 2363, column: 4, scope: !12983)
!12996 = !DILocation(line: 2363, column: 11, scope: !12997)
!12997 = distinct !DILexicalBlock(scope: !12998, file: !3, line: 2363, column: 4)
!12998 = distinct !DILexicalBlock(scope: !12983, file: !3, line: 2363, column: 4)
!12999 = !DILocation(line: 2363, column: 17, scope: !12997)
!13000 = !DILocation(line: 2363, column: 4, scope: !12998)
!13001 = !DILocation(line: 2364, column: 9, scope: !13002)
!13002 = distinct !DILexicalBlock(scope: !12997, file: !3, line: 2363, column: 37)
!13003 = !DILocation(line: 2364, column: 7, scope: !13002)
!13004 = !DILocation(line: 2365, column: 5, scope: !13002)
!13005 = !DILocation(line: 2367, column: 4, scope: !13002)
!13006 = !DILocation(line: 2363, column: 27, scope: !12997)
!13007 = !DILocation(line: 2363, column: 33, scope: !12997)
!13008 = !DILocation(line: 2363, column: 4, scope: !12997)
!13009 = distinct !{!13009, !13000, !13010}
!13010 = !DILocation(line: 2367, column: 4, scope: !12998)
!13011 = !DILocation(line: 2368, column: 8, scope: !12983)
!13012 = !DILocation(line: 2368, column: 12, scope: !12983)
!13013 = !DILocation(line: 2368, column: 6, scope: !12983)
!13014 = !DILocation(line: 2370, column: 10, scope: !12983)
!13015 = !DILocation(line: 2370, column: 12, scope: !12983)
!13016 = !DILocation(line: 2370, column: 22, scope: !12983)
!13017 = !DILocation(line: 2370, column: 31, scope: !12983)
!13018 = !DILocation(line: 2370, column: 33, scope: !12983)
!13019 = !DILocation(line: 2370, column: 28, scope: !12983)
!13020 = !DILocation(line: 2370, column: 8, scope: !12983)
!13021 = !DILocation(line: 2369, column: 4, scope: !12983)
!13022 = !DILocation(line: 2369, column: 8, scope: !12983)
!13023 = !DILocation(line: 2369, column: 28, scope: !12983)
!13024 = !DILocation(line: 2371, column: 4, scope: !12983)
!13025 = !DILocation(line: 2371, column: 8, scope: !12983)
!13026 = !DILocation(line: 2371, column: 16, scope: !12983)
!13027 = !DILocation(line: 2372, column: 3, scope: !12983)
!13028 = !DILocation(line: 2373, column: 2, scope: !12963)
!13029 = !DILocation(line: 2374, column: 3, scope: !13030)
!13030 = distinct !DILexicalBlock(scope: !12960, file: !3, line: 2373, column: 9)
!13031 = !DILocation(line: 2374, column: 7, scope: !13030)
!13032 = !DILocation(line: 2374, column: 23, scope: !13030)
!13033 = !DILocation(line: 2375, column: 7, scope: !13034)
!13034 = distinct !DILexicalBlock(scope: !13030, file: !3, line: 2375, column: 7)
!13035 = !DILocation(line: 2375, column: 11, scope: !13034)
!13036 = !DILocation(line: 2375, column: 7, scope: !13030)
!13037 = !DILocation(line: 2376, column: 4, scope: !13038)
!13038 = distinct !DILexicalBlock(scope: !13034, file: !3, line: 2375, column: 28)
!13039 = !DILocation(line: 2376, column: 8, scope: !13038)
!13040 = !DILocation(line: 2376, column: 27, scope: !13038)
!13041 = !DILocation(line: 2377, column: 4, scope: !13038)
!13042 = !DILocation(line: 2377, column: 8, scope: !13038)
!13043 = !DILocation(line: 2377, column: 29, scope: !13038)
!13044 = !DILocation(line: 2378, column: 3, scope: !13038)
!13045 = !DILocalVariable(name: "cp", scope: !13046, file: !3, line: 2382, type: !4957)
!13046 = distinct !DILexicalBlock(scope: !13030, file: !3, line: 2381, column: 3)
!13047 = !DILocation(line: 2382, column: 20, scope: !13046)
!13048 = !DILocation(line: 2383, column: 27, scope: !13046)
!13049 = !DILocation(line: 2383, column: 31, scope: !13046)
!13050 = !DILocation(line: 2383, column: 8, scope: !13046)
!13051 = !DILocalVariable(name: "count", scope: !13046, file: !3, line: 2384, type: !170)
!13052 = !DILocation(line: 2384, column: 8, scope: !13046)
!13053 = !DILocation(line: 2384, column: 16, scope: !13046)
!13054 = !DILocation(line: 2384, column: 20, scope: !13046)
!13055 = !DILocation(line: 2384, column: 38, scope: !13046)
!13056 = !DILocalVariable(name: "c", scope: !13046, file: !3, line: 2385, type: !198)
!13057 = !DILocation(line: 2385, column: 19, scope: !13046)
!13058 = !DILocation(line: 2386, column: 4, scope: !13046)
!13059 = !DILocation(line: 2386, column: 11, scope: !13060)
!13060 = distinct !DILexicalBlock(scope: !13061, file: !3, line: 2386, column: 4)
!13061 = distinct !DILexicalBlock(scope: !13046, file: !3, line: 2386, column: 4)
!13062 = !DILocation(line: 2386, column: 17, scope: !13060)
!13063 = !DILocation(line: 2386, column: 4, scope: !13061)
!13064 = !DILocalVariable(name: "newc", scope: !13065, file: !3, line: 2387, type: !198)
!13065 = distinct !DILexicalBlock(scope: !13060, file: !3, line: 2386, column: 37)
!13066 = !DILocation(line: 2387, column: 20, scope: !13065)
!13067 = !DILocation(line: 2388, column: 9, scope: !13065)
!13068 = !DILocation(line: 2388, column: 7, scope: !13065)
!13069 = !DILocation(line: 2389, column: 9, scope: !13070)
!13070 = distinct !DILexicalBlock(scope: !13065, file: !3, line: 2389, column: 9)
!13071 = !DILocation(line: 2389, column: 13, scope: !13070)
!13072 = !DILocation(line: 2389, column: 9, scope: !13065)
!13073 = !DILocation(line: 2391, column: 12, scope: !13070)
!13074 = !DILocation(line: 2391, column: 14, scope: !13070)
!13075 = !DILocation(line: 2391, column: 24, scope: !13070)
!13076 = !DILocation(line: 2391, column: 33, scope: !13070)
!13077 = !DILocation(line: 2391, column: 35, scope: !13070)
!13078 = !DILocation(line: 2391, column: 30, scope: !13070)
!13079 = !DILocation(line: 2391, column: 10, scope: !13070)
!13080 = !DILocation(line: 2390, column: 11, scope: !13070)
!13081 = !DILocation(line: 2390, column: 6, scope: !13070)
!13082 = !DILocation(line: 2394, column: 13, scope: !13070)
!13083 = !DILocation(line: 2394, column: 15, scope: !13070)
!13084 = !DILocation(line: 2394, column: 11, scope: !13070)
!13085 = !DILocation(line: 2395, column: 5, scope: !13065)
!13086 = !DILocation(line: 2396, column: 4, scope: !13065)
!13087 = !DILocation(line: 2386, column: 27, scope: !13060)
!13088 = !DILocation(line: 2386, column: 33, scope: !13060)
!13089 = !DILocation(line: 2386, column: 4, scope: !13060)
!13090 = distinct !{!13090, !13063, !13091}
!13091 = !DILocation(line: 2396, column: 4, scope: !13061)
!13092 = !DILocation(line: 2397, column: 8, scope: !13046)
!13093 = !DILocation(line: 2397, column: 12, scope: !13046)
!13094 = !DILocation(line: 2397, column: 6, scope: !13046)
!13095 = !DILocation(line: 2398, column: 8, scope: !13096)
!13096 = distinct !DILexicalBlock(scope: !13046, file: !3, line: 2398, column: 8)
!13097 = !DILocation(line: 2398, column: 12, scope: !13096)
!13098 = !DILocation(line: 2398, column: 8, scope: !13046)
!13099 = !DILocation(line: 2400, column: 11, scope: !13100)
!13100 = distinct !DILexicalBlock(scope: !13096, file: !3, line: 2398, column: 29)
!13101 = !DILocation(line: 2400, column: 13, scope: !13100)
!13102 = !DILocation(line: 2400, column: 23, scope: !13100)
!13103 = !DILocation(line: 2400, column: 32, scope: !13100)
!13104 = !DILocation(line: 2400, column: 34, scope: !13100)
!13105 = !DILocation(line: 2400, column: 29, scope: !13100)
!13106 = !DILocation(line: 2400, column: 9, scope: !13100)
!13107 = !DILocation(line: 2399, column: 5, scope: !13100)
!13108 = !DILocation(line: 2399, column: 9, scope: !13100)
!13109 = !DILocation(line: 2399, column: 29, scope: !13100)
!13110 = !DILocation(line: 2401, column: 5, scope: !13100)
!13111 = !DILocation(line: 2401, column: 9, scope: !13100)
!13112 = !DILocation(line: 2401, column: 17, scope: !13100)
!13113 = !DILocation(line: 2402, column: 4, scope: !13100)
!13114 = !DILocation(line: 2403, column: 31, scope: !13096)
!13115 = !DILocation(line: 2403, column: 33, scope: !13096)
!13116 = !DILocation(line: 2403, column: 5, scope: !13096)
!13117 = !DILocation(line: 2403, column: 9, scope: !13096)
!13118 = !DILocation(line: 2403, column: 29, scope: !13096)
!13119 = !DILocation(line: 2406, column: 1, scope: !12952)
!13120 = distinct !DISubprogram(name: "fbcon_exit", scope: !3, file: !3, line: 3337, type: !2780, scopeLine: 3338, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !241)
!13121 = !DILocalVariable(name: "info", scope: !13120, file: !3, line: 3339, type: !199)
!13122 = !DILocation(line: 3339, column: 18, scope: !13120)
!13123 = !DILocalVariable(name: "i", scope: !13120, file: !3, line: 3340, type: !170)
!13124 = !DILocation(line: 3340, column: 6, scope: !13120)
!13125 = !DILocalVariable(name: "j", scope: !13120, file: !3, line: 3340, type: !170)
!13126 = !DILocation(line: 3340, column: 9, scope: !13120)
!13127 = !DILocalVariable(name: "mapped", scope: !13120, file: !3, line: 3340, type: !170)
!13128 = !DILocation(line: 3340, column: 12, scope: !13120)
!13129 = !DILocation(line: 3349, column: 2, scope: !13130)
!13130 = distinct !DILexicalBlock(scope: !13120, file: !3, line: 3349, column: 2)
!13131 = !DILocation(line: 3349, column: 2, scope: !13132)
!13132 = distinct !DILexicalBlock(scope: !13130, file: !3, line: 3349, column: 2)
!13133 = !DILocation(line: 3349, column: 2, scope: !13134)
!13134 = distinct !DILexicalBlock(scope: !13132, file: !3, line: 3349, column: 2)
!13135 = !DILocation(line: 3349, column: 2, scope: !13136)
!13136 = distinct !DILexicalBlock(scope: !13134, file: !3, line: 3349, column: 2)
!13137 = !DILocalVariable(name: "pending", scope: !13138, file: !3, line: 3350, type: !170)
!13138 = distinct !DILexicalBlock(scope: !13134, file: !3, line: 3349, column: 28)
!13139 = !DILocation(line: 3350, column: 7, scope: !13138)
!13140 = !DILocation(line: 3352, column: 10, scope: !13138)
!13141 = !DILocation(line: 3353, column: 24, scope: !13138)
!13142 = !DILocation(line: 3353, column: 10, scope: !13138)
!13143 = !DILocation(line: 3353, column: 8, scope: !13138)
!13144 = !DILocation(line: 3355, column: 7, scope: !13145)
!13145 = distinct !DILexicalBlock(scope: !13138, file: !3, line: 3355, column: 7)
!13146 = !DILocation(line: 3355, column: 13, scope: !13145)
!13147 = !DILocation(line: 3355, column: 19, scope: !13145)
!13148 = !DILocation(line: 3355, column: 7, scope: !13138)
!13149 = !DILocation(line: 3356, column: 32, scope: !13145)
!13150 = !DILocation(line: 3356, column: 38, scope: !13145)
!13151 = !DILocation(line: 3356, column: 14, scope: !13145)
!13152 = !DILocation(line: 3356, column: 12, scope: !13145)
!13153 = !DILocation(line: 3356, column: 4, scope: !13145)
!13154 = !DILocation(line: 3360, column: 12, scope: !13155)
!13155 = distinct !DILexicalBlock(scope: !13138, file: !3, line: 3360, column: 3)
!13156 = !DILocation(line: 3360, column: 10, scope: !13155)
!13157 = !DILocation(line: 3360, column: 8, scope: !13155)
!13158 = !DILocation(line: 3360, column: 25, scope: !13159)
!13159 = distinct !DILexicalBlock(scope: !13155, file: !3, line: 3360, column: 3)
!13160 = !DILocation(line: 3360, column: 30, scope: !13159)
!13161 = !DILocation(line: 3360, column: 27, scope: !13159)
!13162 = !DILocation(line: 3360, column: 3, scope: !13155)
!13163 = !DILocation(line: 3361, column: 19, scope: !13164)
!13164 = distinct !DILexicalBlock(scope: !13165, file: !3, line: 3361, column: 8)
!13165 = distinct !DILexicalBlock(scope: !13159, file: !3, line: 3360, column: 47)
!13166 = !DILocation(line: 3361, column: 8, scope: !13164)
!13167 = !DILocation(line: 3361, column: 25, scope: !13164)
!13168 = !DILocation(line: 3361, column: 22, scope: !13164)
!13169 = !DILocation(line: 3361, column: 8, scope: !13165)
!13170 = !DILocation(line: 3362, column: 12, scope: !13171)
!13171 = distinct !DILexicalBlock(scope: !13164, file: !3, line: 3361, column: 28)
!13172 = !DILocation(line: 3363, column: 16, scope: !13171)
!13173 = !DILocation(line: 3363, column: 5, scope: !13171)
!13174 = !DILocation(line: 3363, column: 19, scope: !13171)
!13175 = !DILocation(line: 3364, column: 4, scope: !13171)
!13176 = !DILocation(line: 3365, column: 3, scope: !13165)
!13177 = !DILocation(line: 3360, column: 43, scope: !13159)
!13178 = !DILocation(line: 3360, column: 3, scope: !13159)
!13179 = distinct !{!13179, !13162, !13180}
!13180 = !DILocation(line: 3365, column: 3, scope: !13155)
!13181 = !DILocation(line: 3367, column: 7, scope: !13182)
!13182 = distinct !DILexicalBlock(scope: !13138, file: !3, line: 3367, column: 7)
!13183 = !DILocation(line: 3367, column: 7, scope: !13138)
!13184 = !DILocation(line: 3368, column: 8, scope: !13185)
!13185 = distinct !DILexicalBlock(scope: !13186, file: !3, line: 3368, column: 8)
!13186 = distinct !DILexicalBlock(scope: !13182, file: !3, line: 3367, column: 15)
!13187 = !DILocation(line: 3368, column: 14, scope: !13185)
!13188 = !DILocation(line: 3368, column: 21, scope: !13185)
!13189 = !DILocation(line: 3368, column: 8, scope: !13186)
!13190 = !DILocation(line: 3369, column: 5, scope: !13185)
!13191 = !DILocation(line: 3369, column: 11, scope: !13185)
!13192 = !DILocation(line: 3369, column: 18, scope: !13185)
!13193 = !DILocation(line: 3369, column: 29, scope: !13185)
!13194 = !DILocation(line: 3370, column: 15, scope: !13186)
!13195 = !DILocation(line: 3370, column: 21, scope: !13186)
!13196 = !DILocation(line: 3370, column: 28, scope: !13186)
!13197 = !DILocation(line: 3370, column: 4, scope: !13186)
!13198 = !DILocation(line: 3372, column: 8, scope: !13199)
!13199 = distinct !DILexicalBlock(scope: !13186, file: !3, line: 3372, column: 8)
!13200 = !DILocation(line: 3372, column: 14, scope: !13199)
!13201 = !DILocation(line: 3372, column: 8, scope: !13186)
!13202 = !DILocalVariable(name: "ops", scope: !13203, file: !3, line: 3373, type: !4818)
!13203 = distinct !DILexicalBlock(scope: !13199, file: !3, line: 3372, column: 25)
!13204 = !DILocation(line: 3373, column: 23, scope: !13203)
!13205 = !DILocation(line: 3373, column: 29, scope: !13203)
!13206 = !DILocation(line: 3373, column: 35, scope: !13203)
!13207 = !DILocation(line: 3375, column: 28, scope: !13203)
!13208 = !DILocation(line: 3375, column: 5, scope: !13203)
!13209 = !DILocation(line: 3376, column: 11, scope: !13203)
!13210 = !DILocation(line: 3376, column: 16, scope: !13203)
!13211 = !DILocation(line: 3376, column: 5, scope: !13203)
!13212 = !DILocation(line: 3377, column: 11, scope: !13203)
!13213 = !DILocation(line: 3377, column: 16, scope: !13203)
!13214 = !DILocation(line: 3377, column: 29, scope: !13203)
!13215 = !DILocation(line: 3377, column: 5, scope: !13203)
!13216 = !DILocation(line: 3378, column: 11, scope: !13203)
!13217 = !DILocation(line: 3378, column: 17, scope: !13203)
!13218 = !DILocation(line: 3378, column: 5, scope: !13203)
!13219 = !DILocation(line: 3379, column: 5, scope: !13203)
!13220 = !DILocation(line: 3379, column: 11, scope: !13203)
!13221 = !DILocation(line: 3379, column: 21, scope: !13203)
!13222 = !DILocation(line: 3380, column: 4, scope: !13203)
!13223 = !DILocation(line: 3382, column: 8, scope: !13224)
!13224 = distinct !DILexicalBlock(scope: !13186, file: !3, line: 3382, column: 8)
!13225 = !DILocation(line: 3382, column: 14, scope: !13224)
!13226 = !DILocation(line: 3382, column: 20, scope: !13224)
!13227 = !DILocation(line: 3382, column: 25, scope: !13224)
!13228 = !DILocation(line: 3382, column: 8, scope: !13186)
!13229 = !DILocation(line: 3383, column: 5, scope: !13224)
!13230 = !DILocation(line: 3383, column: 11, scope: !13224)
!13231 = !DILocation(line: 3383, column: 17, scope: !13224)
!13232 = !DILocation(line: 3383, column: 22, scope: !13224)
!13233 = !DILocation(line: 3384, column: 3, scope: !13186)
!13234 = distinct !{!13234, !13129, !13235}
!13235 = !DILocation(line: 3385, column: 2, scope: !13130)
!13236 = !DILocation(line: 3386, column: 1, scope: !13120)
!13237 = distinct !DISubprogram(name: "real_y", scope: !4820, file: !4820, line: 221, type: !13238, scopeLine: 222, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !241)
!13238 = !DISubroutineType(types: !13239)
!13239 = !{!170, !5048, !170}
!13240 = !DILocalVariable(name: "p", arg: 1, scope: !13237, file: !4820, line: 221, type: !5048)
!13241 = !DILocation(line: 221, column: 48, scope: !13237)
!13242 = !DILocalVariable(name: "ypos", arg: 2, scope: !13237, file: !4820, line: 221, type: !170)
!13243 = !DILocation(line: 221, column: 55, scope: !13237)
!13244 = !DILocalVariable(name: "rows", scope: !13237, file: !4820, line: 223, type: !170)
!13245 = !DILocation(line: 223, column: 6, scope: !13237)
!13246 = !DILocation(line: 223, column: 13, scope: !13237)
!13247 = !DILocation(line: 223, column: 16, scope: !13237)
!13248 = !DILocation(line: 225, column: 10, scope: !13237)
!13249 = !DILocation(line: 225, column: 13, scope: !13237)
!13250 = !DILocation(line: 225, column: 7, scope: !13237)
!13251 = !DILocation(line: 226, column: 9, scope: !13237)
!13252 = !DILocation(line: 226, column: 16, scope: !13237)
!13253 = !DILocation(line: 226, column: 14, scope: !13237)
!13254 = !DILocation(line: 226, column: 23, scope: !13237)
!13255 = !DILocation(line: 226, column: 30, scope: !13237)
!13256 = !DILocation(line: 226, column: 37, scope: !13237)
!13257 = !DILocation(line: 226, column: 35, scope: !13237)
!13258 = !DILocation(line: 226, column: 2, scope: !13237)
!13259 = distinct !DISubprogram(name: "fbcon_redraw_blit", scope: !3, file: !3, line: 1588, type: !13260, scopeLine: 1590, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !241)
!13260 = !DISubroutineType(types: !13261)
!13261 = !{null, !4826, !199, !5048, !170, !170, !170}
!13262 = !DILocalVariable(name: "vc", arg: 1, scope: !13259, file: !3, line: 1588, type: !4826)
!13263 = !DILocation(line: 1588, column: 47, scope: !13259)
!13264 = !DILocalVariable(name: "info", arg: 2, scope: !13259, file: !3, line: 1588, type: !199)
!13265 = !DILocation(line: 1588, column: 67, scope: !13259)
!13266 = !DILocalVariable(name: "p", arg: 3, scope: !13259, file: !3, line: 1589, type: !5048)
!13267 = !DILocation(line: 1589, column: 26, scope: !13259)
!13268 = !DILocalVariable(name: "line", arg: 4, scope: !13259, file: !3, line: 1589, type: !170)
!13269 = !DILocation(line: 1589, column: 33, scope: !13259)
!13270 = !DILocalVariable(name: "count", arg: 5, scope: !13259, file: !3, line: 1589, type: !170)
!13271 = !DILocation(line: 1589, column: 43, scope: !13259)
!13272 = !DILocalVariable(name: "ycount", arg: 6, scope: !13259, file: !3, line: 1589, type: !170)
!13273 = !DILocation(line: 1589, column: 54, scope: !13259)
!13274 = !DILocalVariable(name: "offset", scope: !13259, file: !3, line: 1591, type: !170)
!13275 = !DILocation(line: 1591, column: 6, scope: !13259)
!13276 = !DILocation(line: 1591, column: 15, scope: !13259)
!13277 = !DILocation(line: 1591, column: 24, scope: !13259)
!13278 = !DILocation(line: 1591, column: 28, scope: !13259)
!13279 = !DILocation(line: 1591, column: 22, scope: !13259)
!13280 = !DILocalVariable(name: "d", scope: !13259, file: !3, line: 1592, type: !4957)
!13281 = !DILocation(line: 1592, column: 18, scope: !13259)
!13282 = !DILocation(line: 1593, column: 7, scope: !13259)
!13283 = !DILocation(line: 1593, column: 11, scope: !13259)
!13284 = !DILocation(line: 1593, column: 23, scope: !13259)
!13285 = !DILocation(line: 1593, column: 27, scope: !13259)
!13286 = !DILocation(line: 1593, column: 41, scope: !13259)
!13287 = !DILocation(line: 1593, column: 39, scope: !13259)
!13288 = !DILocation(line: 1593, column: 21, scope: !13259)
!13289 = !DILocation(line: 1592, column: 22, scope: !13259)
!13290 = !DILocalVariable(name: "s", scope: !13259, file: !3, line: 1594, type: !4957)
!13291 = !DILocation(line: 1594, column: 18, scope: !13259)
!13292 = !DILocation(line: 1594, column: 22, scope: !13259)
!13293 = !DILocation(line: 1594, column: 26, scope: !13259)
!13294 = !DILocation(line: 1594, column: 24, scope: !13259)
!13295 = !DILocalVariable(name: "ops", scope: !13259, file: !3, line: 1595, type: !4818)
!13296 = !DILocation(line: 1595, column: 20, scope: !13259)
!13297 = !DILocation(line: 1595, column: 26, scope: !13259)
!13298 = !DILocation(line: 1595, column: 32, scope: !13259)
!13299 = !DILocation(line: 1597, column: 2, scope: !13259)
!13300 = !DILocation(line: 1597, column: 14, scope: !13259)
!13301 = !DILocalVariable(name: "start", scope: !13302, file: !3, line: 1598, type: !4957)
!13302 = distinct !DILexicalBlock(scope: !13259, file: !3, line: 1597, column: 18)
!13303 = !DILocation(line: 1598, column: 19, scope: !13302)
!13304 = !DILocation(line: 1598, column: 27, scope: !13302)
!13305 = !DILocalVariable(name: "le", scope: !13302, file: !3, line: 1599, type: !4957)
!13306 = !DILocation(line: 1599, column: 19, scope: !13302)
!13307 = !DILocation(line: 1599, column: 24, scope: !13302)
!13308 = !DILocalVariable(name: "c", scope: !13302, file: !3, line: 1600, type: !198)
!13309 = !DILocation(line: 1600, column: 18, scope: !13302)
!13310 = !DILocalVariable(name: "x", scope: !13302, file: !3, line: 1601, type: !170)
!13311 = !DILocation(line: 1601, column: 7, scope: !13302)
!13312 = !DILocation(line: 1603, column: 3, scope: !13302)
!13313 = !DILocation(line: 1604, column: 8, scope: !13314)
!13314 = distinct !DILexicalBlock(scope: !13302, file: !3, line: 1603, column: 6)
!13315 = !DILocation(line: 1604, column: 6, scope: !13314)
!13316 = !DILocation(line: 1606, column: 8, scope: !13317)
!13317 = distinct !DILexicalBlock(scope: !13314, file: !3, line: 1606, column: 8)
!13318 = !DILocation(line: 1606, column: 13, scope: !13317)
!13319 = !DILocation(line: 1606, column: 10, scope: !13317)
!13320 = !DILocation(line: 1606, column: 8, scope: !13314)
!13321 = !DILocation(line: 1607, column: 9, scope: !13322)
!13322 = distinct !DILexicalBlock(scope: !13323, file: !3, line: 1607, column: 9)
!13323 = distinct !DILexicalBlock(scope: !13317, file: !3, line: 1606, column: 27)
!13324 = !DILocation(line: 1607, column: 13, scope: !13322)
!13325 = !DILocation(line: 1607, column: 11, scope: !13322)
!13326 = !DILocation(line: 1607, column: 9, scope: !13323)
!13327 = !DILocation(line: 1608, column: 6, scope: !13328)
!13328 = distinct !DILexicalBlock(scope: !13322, file: !3, line: 1607, column: 20)
!13329 = !DILocation(line: 1608, column: 11, scope: !13328)
!13330 = !DILocation(line: 1608, column: 17, scope: !13328)
!13331 = !DILocation(line: 1608, column: 21, scope: !13328)
!13332 = !DILocation(line: 1608, column: 27, scope: !13328)
!13333 = !DILocation(line: 1608, column: 34, scope: !13328)
!13334 = !DILocation(line: 1608, column: 32, scope: !13328)
!13335 = !DILocation(line: 1608, column: 42, scope: !13328)
!13336 = !DILocation(line: 1609, column: 10, scope: !13328)
!13337 = !DILocation(line: 1609, column: 16, scope: !13328)
!13338 = !DILocation(line: 1609, column: 22, scope: !13328)
!13339 = !DILocation(line: 1609, column: 24, scope: !13328)
!13340 = !DILocation(line: 1609, column: 23, scope: !13328)
!13341 = !DILocation(line: 1610, column: 11, scope: !13328)
!13342 = !DILocation(line: 1610, column: 15, scope: !13328)
!13343 = !DILocation(line: 1610, column: 13, scope: !13328)
!13344 = !DILocation(line: 1610, column: 21, scope: !13328)
!13345 = !DILocation(line: 1610, column: 8, scope: !13328)
!13346 = !DILocation(line: 1611, column: 14, scope: !13328)
!13347 = !DILocation(line: 1611, column: 16, scope: !13328)
!13348 = !DILocation(line: 1611, column: 12, scope: !13328)
!13349 = !DILocation(line: 1612, column: 5, scope: !13328)
!13350 = !DILocation(line: 1613, column: 7, scope: !13351)
!13351 = distinct !DILexicalBlock(scope: !13322, file: !3, line: 1612, column: 12)
!13352 = !DILocation(line: 1614, column: 11, scope: !13351)
!13353 = !DILocation(line: 1616, column: 4, scope: !13323)
!13354 = !DILocation(line: 1618, column: 4, scope: !13314)
!13355 = !DILocation(line: 1619, column: 4, scope: !13314)
!13356 = !DILocation(line: 1620, column: 5, scope: !13314)
!13357 = !DILocation(line: 1621, column: 5, scope: !13314)
!13358 = !DILocation(line: 1622, column: 3, scope: !13314)
!13359 = !DILocation(line: 1622, column: 12, scope: !13302)
!13360 = !DILocation(line: 1622, column: 16, scope: !13302)
!13361 = !DILocation(line: 1622, column: 14, scope: !13302)
!13362 = distinct !{!13362, !13312, !13363}
!13363 = !DILocation(line: 1622, column: 18, scope: !13302)
!13364 = !DILocation(line: 1623, column: 7, scope: !13365)
!13365 = distinct !DILexicalBlock(scope: !13302, file: !3, line: 1623, column: 7)
!13366 = !DILocation(line: 1623, column: 11, scope: !13365)
!13367 = !DILocation(line: 1623, column: 9, scope: !13365)
!13368 = !DILocation(line: 1623, column: 7, scope: !13302)
!13369 = !DILocation(line: 1624, column: 4, scope: !13365)
!13370 = !DILocation(line: 1624, column: 9, scope: !13365)
!13371 = !DILocation(line: 1624, column: 15, scope: !13365)
!13372 = !DILocation(line: 1624, column: 19, scope: !13365)
!13373 = !DILocation(line: 1624, column: 25, scope: !13365)
!13374 = !DILocation(line: 1624, column: 32, scope: !13365)
!13375 = !DILocation(line: 1624, column: 30, scope: !13365)
!13376 = !DILocation(line: 1624, column: 40, scope: !13365)
!13377 = !DILocation(line: 1624, column: 43, scope: !13365)
!13378 = !DILocation(line: 1624, column: 49, scope: !13365)
!13379 = !DILocation(line: 1625, column: 8, scope: !13365)
!13380 = !DILocation(line: 1625, column: 10, scope: !13365)
!13381 = !DILocation(line: 1625, column: 9, scope: !13365)
!13382 = !DILocation(line: 1626, column: 3, scope: !13302)
!13383 = !DILocation(line: 1627, column: 7, scope: !13384)
!13384 = distinct !DILexicalBlock(scope: !13302, file: !3, line: 1627, column: 7)
!13385 = !DILocation(line: 1627, column: 14, scope: !13384)
!13386 = !DILocation(line: 1627, column: 7, scope: !13302)
!13387 = !DILocation(line: 1628, column: 8, scope: !13384)
!13388 = !DILocation(line: 1628, column: 4, scope: !13384)
!13389 = !DILocation(line: 1630, column: 8, scope: !13390)
!13390 = distinct !DILexicalBlock(scope: !13384, file: !3, line: 1629, column: 8)
!13391 = !DILocation(line: 1632, column: 9, scope: !13390)
!13392 = !DILocation(line: 1632, column: 13, scope: !13390)
!13393 = !DILocation(line: 1632, column: 6, scope: !13390)
!13394 = !DILocation(line: 1633, column: 9, scope: !13390)
!13395 = !DILocation(line: 1633, column: 13, scope: !13390)
!13396 = !DILocation(line: 1633, column: 6, scope: !13390)
!13397 = distinct !{!13397, !13299, !13398}
!13398 = !DILocation(line: 1635, column: 2, scope: !13259)
!13399 = !DILocation(line: 1636, column: 1, scope: !13259)
!13400 = distinct !DISubprogram(name: "fbcon_bmove", scope: !3, file: !3, line: 1893, type: !13401, scopeLine: 1895, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !241)
!13401 = !DISubroutineType(types: !13402)
!13402 = !{null, !4826, !170, !170, !170, !170, !170, !170}
!13403 = !DILocalVariable(name: "vc", arg: 1, scope: !13400, file: !3, line: 1893, type: !4826)
!13404 = !DILocation(line: 1893, column: 41, scope: !13400)
!13405 = !DILocalVariable(name: "sy", arg: 2, scope: !13400, file: !3, line: 1893, type: !170)
!13406 = !DILocation(line: 1893, column: 49, scope: !13400)
!13407 = !DILocalVariable(name: "sx", arg: 3, scope: !13400, file: !3, line: 1893, type: !170)
!13408 = !DILocation(line: 1893, column: 57, scope: !13400)
!13409 = !DILocalVariable(name: "dy", arg: 4, scope: !13400, file: !3, line: 1893, type: !170)
!13410 = !DILocation(line: 1893, column: 65, scope: !13400)
!13411 = !DILocalVariable(name: "dx", arg: 5, scope: !13400, file: !3, line: 1893, type: !170)
!13412 = !DILocation(line: 1893, column: 73, scope: !13400)
!13413 = !DILocalVariable(name: "height", arg: 6, scope: !13400, file: !3, line: 1894, type: !170)
!13414 = !DILocation(line: 1894, column: 8, scope: !13400)
!13415 = !DILocalVariable(name: "width", arg: 7, scope: !13400, file: !3, line: 1894, type: !170)
!13416 = !DILocation(line: 1894, column: 20, scope: !13400)
!13417 = !DILocalVariable(name: "info", scope: !13400, file: !3, line: 1896, type: !199)
!13418 = !DILocation(line: 1896, column: 18, scope: !13400)
!13419 = !DILocation(line: 1896, column: 50, scope: !13400)
!13420 = !DILocation(line: 1896, column: 54, scope: !13400)
!13421 = !DILocation(line: 1896, column: 39, scope: !13400)
!13422 = !DILocation(line: 1896, column: 25, scope: !13400)
!13423 = !DILocalVariable(name: "p", scope: !13400, file: !3, line: 1897, type: !5048)
!13424 = !DILocation(line: 1897, column: 24, scope: !13400)
!13425 = !DILocation(line: 1897, column: 40, scope: !13400)
!13426 = !DILocation(line: 1897, column: 44, scope: !13400)
!13427 = !DILocation(line: 1897, column: 29, scope: !13400)
!13428 = !DILocation(line: 1899, column: 24, scope: !13429)
!13429 = distinct !DILexicalBlock(scope: !13400, file: !3, line: 1899, column: 6)
!13430 = !DILocation(line: 1899, column: 28, scope: !13429)
!13431 = !DILocation(line: 1899, column: 6, scope: !13429)
!13432 = !DILocation(line: 1899, column: 6, scope: !13400)
!13433 = !DILocation(line: 1900, column: 3, scope: !13429)
!13434 = !DILocation(line: 1902, column: 7, scope: !13435)
!13435 = distinct !DILexicalBlock(scope: !13400, file: !3, line: 1902, column: 6)
!13436 = !DILocation(line: 1902, column: 13, scope: !13435)
!13437 = !DILocation(line: 1902, column: 17, scope: !13435)
!13438 = !DILocation(line: 1902, column: 6, scope: !13400)
!13439 = !DILocation(line: 1903, column: 3, scope: !13435)
!13440 = !DILocation(line: 1912, column: 18, scope: !13400)
!13441 = !DILocation(line: 1912, column: 22, scope: !13400)
!13442 = !DILocation(line: 1912, column: 25, scope: !13400)
!13443 = !DILocation(line: 1912, column: 29, scope: !13400)
!13444 = !DILocation(line: 1912, column: 33, scope: !13400)
!13445 = !DILocation(line: 1912, column: 37, scope: !13400)
!13446 = !DILocation(line: 1912, column: 41, scope: !13400)
!13447 = !DILocation(line: 1912, column: 49, scope: !13400)
!13448 = !DILocation(line: 1913, column: 4, scope: !13400)
!13449 = !DILocation(line: 1913, column: 7, scope: !13400)
!13450 = !DILocation(line: 1913, column: 15, scope: !13400)
!13451 = !DILocation(line: 1913, column: 18, scope: !13400)
!13452 = !DILocation(line: 1913, column: 13, scope: !13400)
!13453 = !DILocation(line: 1912, column: 2, scope: !13400)
!13454 = !DILocation(line: 1914, column: 1, scope: !13400)
!13455 = distinct !DISubprogram(name: "ywrap_up", scope: !3, file: !3, line: 1420, type: !4867, scopeLine: 1421, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !241)
!13456 = !DILocalVariable(name: "vc", arg: 1, scope: !13455, file: !3, line: 1420, type: !4826)
!13457 = !DILocation(line: 1420, column: 49, scope: !13455)
!13458 = !DILocalVariable(name: "count", arg: 2, scope: !13455, file: !3, line: 1420, type: !170)
!13459 = !DILocation(line: 1420, column: 57, scope: !13455)
!13460 = !DILocalVariable(name: "info", scope: !13455, file: !3, line: 1422, type: !199)
!13461 = !DILocation(line: 1422, column: 18, scope: !13455)
!13462 = !DILocation(line: 1422, column: 50, scope: !13455)
!13463 = !DILocation(line: 1422, column: 54, scope: !13455)
!13464 = !DILocation(line: 1422, column: 39, scope: !13455)
!13465 = !DILocation(line: 1422, column: 25, scope: !13455)
!13466 = !DILocalVariable(name: "ops", scope: !13455, file: !3, line: 1423, type: !4818)
!13467 = !DILocation(line: 1423, column: 20, scope: !13455)
!13468 = !DILocation(line: 1423, column: 26, scope: !13455)
!13469 = !DILocation(line: 1423, column: 32, scope: !13455)
!13470 = !DILocalVariable(name: "p", scope: !13455, file: !3, line: 1424, type: !5048)
!13471 = !DILocation(line: 1424, column: 24, scope: !13455)
!13472 = !DILocation(line: 1424, column: 40, scope: !13455)
!13473 = !DILocation(line: 1424, column: 44, scope: !13455)
!13474 = !DILocation(line: 1424, column: 29, scope: !13455)
!13475 = !DILocation(line: 1426, column: 16, scope: !13455)
!13476 = !DILocation(line: 1426, column: 2, scope: !13455)
!13477 = !DILocation(line: 1426, column: 5, scope: !13455)
!13478 = !DILocation(line: 1426, column: 13, scope: !13455)
!13479 = !DILocation(line: 1427, column: 6, scope: !13480)
!13480 = distinct !DILexicalBlock(scope: !13455, file: !3, line: 1427, column: 6)
!13481 = !DILocation(line: 1427, column: 9, scope: !13480)
!13482 = !DILocation(line: 1427, column: 20, scope: !13480)
!13483 = !DILocation(line: 1427, column: 23, scope: !13480)
!13484 = !DILocation(line: 1427, column: 17, scope: !13480)
!13485 = !DILocation(line: 1427, column: 6, scope: !13455)
!13486 = !DILocation(line: 1428, column: 17, scope: !13480)
!13487 = !DILocation(line: 1428, column: 20, scope: !13480)
!13488 = !DILocation(line: 1428, column: 3, scope: !13480)
!13489 = !DILocation(line: 1428, column: 6, scope: !13480)
!13490 = !DILocation(line: 1428, column: 14, scope: !13480)
!13491 = !DILocation(line: 1429, column: 2, scope: !13455)
!13492 = !DILocation(line: 1429, column: 7, scope: !13455)
!13493 = !DILocation(line: 1429, column: 11, scope: !13455)
!13494 = !DILocation(line: 1429, column: 19, scope: !13455)
!13495 = !DILocation(line: 1430, column: 21, scope: !13455)
!13496 = !DILocation(line: 1430, column: 24, scope: !13455)
!13497 = !DILocation(line: 1430, column: 34, scope: !13455)
!13498 = !DILocation(line: 1430, column: 38, scope: !13455)
!13499 = !DILocation(line: 1430, column: 46, scope: !13455)
!13500 = !DILocation(line: 1430, column: 32, scope: !13455)
!13501 = !DILocation(line: 1430, column: 2, scope: !13455)
!13502 = !DILocation(line: 1430, column: 7, scope: !13455)
!13503 = !DILocation(line: 1430, column: 11, scope: !13455)
!13504 = !DILocation(line: 1430, column: 19, scope: !13455)
!13505 = !DILocation(line: 1431, column: 2, scope: !13455)
!13506 = !DILocation(line: 1431, column: 7, scope: !13455)
!13507 = !DILocation(line: 1431, column: 11, scope: !13455)
!13508 = !DILocation(line: 1431, column: 17, scope: !13455)
!13509 = !DILocation(line: 1432, column: 2, scope: !13455)
!13510 = !DILocation(line: 1432, column: 7, scope: !13455)
!13511 = !DILocation(line: 1432, column: 20, scope: !13455)
!13512 = !DILocation(line: 1433, column: 20, scope: !13455)
!13513 = !DILocation(line: 1433, column: 17, scope: !13455)
!13514 = !DILocation(line: 1434, column: 6, scope: !13515)
!13515 = distinct !DILexicalBlock(scope: !13455, file: !3, line: 1434, column: 6)
!13516 = !DILocation(line: 1434, column: 23, scope: !13515)
!13517 = !DILocation(line: 1434, column: 21, scope: !13515)
!13518 = !DILocation(line: 1434, column: 6, scope: !13455)
!13519 = !DILocation(line: 1435, column: 20, scope: !13515)
!13520 = !DILocation(line: 1435, column: 18, scope: !13515)
!13521 = !DILocation(line: 1435, column: 3, scope: !13515)
!13522 = !DILocation(line: 1436, column: 21, scope: !13455)
!13523 = !DILocation(line: 1437, column: 1, scope: !13455)
!13524 = distinct !DISubprogram(name: "fbcon_redraw_move", scope: !3, file: !3, line: 1554, type: !13525, scopeLine: 1556, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !241)
!13525 = !DISubroutineType(types: !13526)
!13526 = !{null, !4826, !5048, !170, !170, !170}
!13527 = !DILocalVariable(name: "vc", arg: 1, scope: !13524, file: !3, line: 1554, type: !4826)
!13528 = !DILocation(line: 1554, column: 47, scope: !13524)
!13529 = !DILocalVariable(name: "p", arg: 2, scope: !13524, file: !3, line: 1554, type: !5048)
!13530 = !DILocation(line: 1554, column: 73, scope: !13524)
!13531 = !DILocalVariable(name: "line", arg: 3, scope: !13524, file: !3, line: 1555, type: !170)
!13532 = !DILocation(line: 1555, column: 14, scope: !13524)
!13533 = !DILocalVariable(name: "count", arg: 4, scope: !13524, file: !3, line: 1555, type: !170)
!13534 = !DILocation(line: 1555, column: 24, scope: !13524)
!13535 = !DILocalVariable(name: "dy", arg: 5, scope: !13524, file: !3, line: 1555, type: !170)
!13536 = !DILocation(line: 1555, column: 35, scope: !13524)
!13537 = !DILocalVariable(name: "s", scope: !13524, file: !3, line: 1557, type: !4957)
!13538 = !DILocation(line: 1557, column: 18, scope: !13524)
!13539 = !DILocation(line: 1558, column: 4, scope: !13524)
!13540 = !DILocation(line: 1558, column: 8, scope: !13524)
!13541 = !DILocation(line: 1558, column: 20, scope: !13524)
!13542 = !DILocation(line: 1558, column: 24, scope: !13524)
!13543 = !DILocation(line: 1558, column: 38, scope: !13524)
!13544 = !DILocation(line: 1558, column: 36, scope: !13524)
!13545 = !DILocation(line: 1558, column: 18, scope: !13524)
!13546 = !DILocation(line: 1557, column: 22, scope: !13524)
!13547 = !DILocation(line: 1560, column: 2, scope: !13524)
!13548 = !DILocation(line: 1560, column: 14, scope: !13524)
!13549 = !DILocalVariable(name: "start", scope: !13550, file: !3, line: 1561, type: !4957)
!13550 = distinct !DILexicalBlock(scope: !13524, file: !3, line: 1560, column: 18)
!13551 = !DILocation(line: 1561, column: 19, scope: !13550)
!13552 = !DILocation(line: 1561, column: 27, scope: !13550)
!13553 = !DILocalVariable(name: "le", scope: !13550, file: !3, line: 1562, type: !4957)
!13554 = !DILocation(line: 1562, column: 19, scope: !13550)
!13555 = !DILocation(line: 1562, column: 24, scope: !13550)
!13556 = !DILocalVariable(name: "c", scope: !13550, file: !3, line: 1563, type: !198)
!13557 = !DILocation(line: 1563, column: 18, scope: !13550)
!13558 = !DILocalVariable(name: "x", scope: !13550, file: !3, line: 1564, type: !170)
!13559 = !DILocation(line: 1564, column: 7, scope: !13550)
!13560 = !DILocalVariable(name: "attr", scope: !13550, file: !3, line: 1565, type: !198)
!13561 = !DILocation(line: 1565, column: 18, scope: !13550)
!13562 = !DILocation(line: 1567, column: 3, scope: !13550)
!13563 = !DILocation(line: 1568, column: 8, scope: !13564)
!13564 = distinct !DILexicalBlock(scope: !13550, file: !3, line: 1567, column: 6)
!13565 = !DILocation(line: 1568, column: 6, scope: !13564)
!13566 = !DILocation(line: 1569, column: 8, scope: !13567)
!13567 = distinct !DILexicalBlock(scope: !13564, file: !3, line: 1569, column: 8)
!13568 = !DILocation(line: 1569, column: 17, scope: !13567)
!13569 = !DILocation(line: 1569, column: 19, scope: !13567)
!13570 = !DILocation(line: 1569, column: 13, scope: !13567)
!13571 = !DILocation(line: 1569, column: 8, scope: !13564)
!13572 = !DILocation(line: 1570, column: 12, scope: !13573)
!13573 = distinct !DILexicalBlock(scope: !13567, file: !3, line: 1569, column: 30)
!13574 = !DILocation(line: 1570, column: 14, scope: !13573)
!13575 = !DILocation(line: 1570, column: 10, scope: !13573)
!13576 = !DILocation(line: 1571, column: 9, scope: !13577)
!13577 = distinct !DILexicalBlock(scope: !13573, file: !3, line: 1571, column: 9)
!13578 = !DILocation(line: 1571, column: 13, scope: !13577)
!13579 = !DILocation(line: 1571, column: 11, scope: !13577)
!13580 = !DILocation(line: 1571, column: 9, scope: !13573)
!13581 = !DILocation(line: 1572, column: 18, scope: !13582)
!13582 = distinct !DILexicalBlock(scope: !13577, file: !3, line: 1571, column: 20)
!13583 = !DILocation(line: 1572, column: 22, scope: !13582)
!13584 = !DILocation(line: 1572, column: 29, scope: !13582)
!13585 = !DILocation(line: 1572, column: 33, scope: !13582)
!13586 = !DILocation(line: 1572, column: 31, scope: !13582)
!13587 = !DILocation(line: 1573, column: 11, scope: !13582)
!13588 = !DILocation(line: 1573, column: 15, scope: !13582)
!13589 = !DILocation(line: 1572, column: 6, scope: !13582)
!13590 = !DILocation(line: 1574, column: 11, scope: !13582)
!13591 = !DILocation(line: 1574, column: 15, scope: !13582)
!13592 = !DILocation(line: 1574, column: 13, scope: !13582)
!13593 = !DILocation(line: 1574, column: 8, scope: !13582)
!13594 = !DILocation(line: 1575, column: 14, scope: !13582)
!13595 = !DILocation(line: 1575, column: 12, scope: !13582)
!13596 = !DILocation(line: 1576, column: 5, scope: !13582)
!13597 = !DILocation(line: 1577, column: 4, scope: !13573)
!13598 = !DILocation(line: 1578, column: 4, scope: !13564)
!13599 = !DILocation(line: 1579, column: 5, scope: !13564)
!13600 = !DILocation(line: 1580, column: 3, scope: !13564)
!13601 = !DILocation(line: 1580, column: 12, scope: !13550)
!13602 = !DILocation(line: 1580, column: 16, scope: !13550)
!13603 = !DILocation(line: 1580, column: 14, scope: !13550)
!13604 = distinct !{!13604, !13562, !13605}
!13605 = !DILocation(line: 1580, column: 18, scope: !13550)
!13606 = !DILocation(line: 1581, column: 7, scope: !13607)
!13607 = distinct !DILexicalBlock(scope: !13550, file: !3, line: 1581, column: 7)
!13608 = !DILocation(line: 1581, column: 11, scope: !13607)
!13609 = !DILocation(line: 1581, column: 9, scope: !13607)
!13610 = !DILocation(line: 1581, column: 7, scope: !13550)
!13611 = !DILocation(line: 1582, column: 16, scope: !13607)
!13612 = !DILocation(line: 1582, column: 20, scope: !13607)
!13613 = !DILocation(line: 1582, column: 27, scope: !13607)
!13614 = !DILocation(line: 1582, column: 31, scope: !13607)
!13615 = !DILocation(line: 1582, column: 29, scope: !13607)
!13616 = !DILocation(line: 1582, column: 38, scope: !13607)
!13617 = !DILocation(line: 1582, column: 42, scope: !13607)
!13618 = !DILocation(line: 1582, column: 4, scope: !13607)
!13619 = !DILocation(line: 1583, column: 3, scope: !13550)
!13620 = !DILocation(line: 1584, column: 5, scope: !13550)
!13621 = distinct !{!13621, !13547, !13622}
!13622 = !DILocation(line: 1585, column: 2, scope: !13524)
!13623 = !DILocation(line: 1586, column: 1, scope: !13524)
!13624 = distinct !DISubprogram(name: "ypan_up_redraw", scope: !3, file: !3, line: 1482, type: !13625, scopeLine: 1483, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !241)
!13625 = !DISubroutineType(types: !13626)
!13626 = !{null, !4826, !170, !170}
!13627 = !DILocalVariable(name: "vc", arg: 1, scope: !13624, file: !3, line: 1482, type: !4826)
!13628 = !DILocation(line: 1482, column: 55, scope: !13624)
!13629 = !DILocalVariable(name: "t", arg: 2, scope: !13624, file: !3, line: 1482, type: !170)
!13630 = !DILocation(line: 1482, column: 63, scope: !13624)
!13631 = !DILocalVariable(name: "count", arg: 3, scope: !13624, file: !3, line: 1482, type: !170)
!13632 = !DILocation(line: 1482, column: 70, scope: !13624)
!13633 = !DILocalVariable(name: "info", scope: !13624, file: !3, line: 1484, type: !199)
!13634 = !DILocation(line: 1484, column: 18, scope: !13624)
!13635 = !DILocation(line: 1484, column: 50, scope: !13624)
!13636 = !DILocation(line: 1484, column: 54, scope: !13624)
!13637 = !DILocation(line: 1484, column: 39, scope: !13624)
!13638 = !DILocation(line: 1484, column: 25, scope: !13624)
!13639 = !DILocalVariable(name: "ops", scope: !13624, file: !3, line: 1485, type: !4818)
!13640 = !DILocation(line: 1485, column: 20, scope: !13624)
!13641 = !DILocation(line: 1485, column: 26, scope: !13624)
!13642 = !DILocation(line: 1485, column: 32, scope: !13624)
!13643 = !DILocalVariable(name: "p", scope: !13624, file: !3, line: 1486, type: !5048)
!13644 = !DILocation(line: 1486, column: 24, scope: !13624)
!13645 = !DILocation(line: 1486, column: 40, scope: !13624)
!13646 = !DILocation(line: 1486, column: 44, scope: !13624)
!13647 = !DILocation(line: 1486, column: 29, scope: !13624)
!13648 = !DILocation(line: 1488, column: 16, scope: !13624)
!13649 = !DILocation(line: 1488, column: 2, scope: !13624)
!13650 = !DILocation(line: 1488, column: 5, scope: !13624)
!13651 = !DILocation(line: 1488, column: 13, scope: !13624)
!13652 = !DILocation(line: 1490, column: 6, scope: !13653)
!13653 = distinct !DILexicalBlock(scope: !13624, file: !3, line: 1490, column: 6)
!13654 = !DILocation(line: 1490, column: 9, scope: !13653)
!13655 = !DILocation(line: 1490, column: 19, scope: !13653)
!13656 = !DILocation(line: 1490, column: 22, scope: !13653)
!13657 = !DILocation(line: 1490, column: 30, scope: !13653)
!13658 = !DILocation(line: 1490, column: 34, scope: !13653)
!13659 = !DILocation(line: 1490, column: 28, scope: !13653)
!13660 = !DILocation(line: 1490, column: 17, scope: !13653)
!13661 = !DILocation(line: 1490, column: 6, scope: !13624)
!13662 = !DILocation(line: 1491, column: 17, scope: !13663)
!13663 = distinct !DILexicalBlock(scope: !13653, file: !3, line: 1490, column: 43)
!13664 = !DILocation(line: 1491, column: 20, scope: !13663)
!13665 = !DILocation(line: 1491, column: 28, scope: !13663)
!13666 = !DILocation(line: 1491, column: 32, scope: !13663)
!13667 = !DILocation(line: 1491, column: 26, scope: !13663)
!13668 = !DILocation(line: 1491, column: 3, scope: !13663)
!13669 = !DILocation(line: 1491, column: 6, scope: !13663)
!13670 = !DILocation(line: 1491, column: 14, scope: !13663)
!13671 = !DILocation(line: 1492, column: 21, scope: !13663)
!13672 = !DILocation(line: 1492, column: 25, scope: !13663)
!13673 = !DILocation(line: 1492, column: 28, scope: !13663)
!13674 = !DILocation(line: 1492, column: 32, scope: !13663)
!13675 = !DILocation(line: 1492, column: 30, scope: !13663)
!13676 = !DILocation(line: 1492, column: 39, scope: !13663)
!13677 = !DILocation(line: 1492, column: 43, scope: !13663)
!13678 = !DILocation(line: 1492, column: 53, scope: !13663)
!13679 = !DILocation(line: 1492, column: 51, scope: !13663)
!13680 = !DILocation(line: 1492, column: 60, scope: !13663)
!13681 = !DILocation(line: 1492, column: 3, scope: !13663)
!13682 = !DILocation(line: 1493, column: 2, scope: !13663)
!13683 = !DILocation(line: 1495, column: 2, scope: !13624)
!13684 = !DILocation(line: 1495, column: 7, scope: !13624)
!13685 = !DILocation(line: 1495, column: 11, scope: !13624)
!13686 = !DILocation(line: 1495, column: 19, scope: !13624)
!13687 = !DILocation(line: 1496, column: 21, scope: !13624)
!13688 = !DILocation(line: 1496, column: 24, scope: !13624)
!13689 = !DILocation(line: 1496, column: 34, scope: !13624)
!13690 = !DILocation(line: 1496, column: 38, scope: !13624)
!13691 = !DILocation(line: 1496, column: 46, scope: !13624)
!13692 = !DILocation(line: 1496, column: 32, scope: !13624)
!13693 = !DILocation(line: 1496, column: 2, scope: !13624)
!13694 = !DILocation(line: 1496, column: 7, scope: !13624)
!13695 = !DILocation(line: 1496, column: 11, scope: !13624)
!13696 = !DILocation(line: 1496, column: 19, scope: !13624)
!13697 = !DILocation(line: 1497, column: 2, scope: !13624)
!13698 = !DILocation(line: 1497, column: 7, scope: !13624)
!13699 = !DILocation(line: 1497, column: 11, scope: !13624)
!13700 = !DILocation(line: 1497, column: 17, scope: !13624)
!13701 = !DILocation(line: 1498, column: 2, scope: !13624)
!13702 = !DILocation(line: 1498, column: 7, scope: !13624)
!13703 = !DILocation(line: 1498, column: 20, scope: !13624)
!13704 = !DILocation(line: 1499, column: 22, scope: !13624)
!13705 = !DILocation(line: 1499, column: 2, scope: !13624)
!13706 = !DILocation(line: 1500, column: 20, scope: !13624)
!13707 = !DILocation(line: 1500, column: 17, scope: !13624)
!13708 = !DILocation(line: 1501, column: 6, scope: !13709)
!13709 = distinct !DILexicalBlock(scope: !13624, file: !3, line: 1501, column: 6)
!13710 = !DILocation(line: 1501, column: 23, scope: !13709)
!13711 = !DILocation(line: 1501, column: 21, scope: !13709)
!13712 = !DILocation(line: 1501, column: 6, scope: !13624)
!13713 = !DILocation(line: 1502, column: 20, scope: !13709)
!13714 = !DILocation(line: 1502, column: 18, scope: !13709)
!13715 = !DILocation(line: 1502, column: 3, scope: !13709)
!13716 = !DILocation(line: 1503, column: 21, scope: !13624)
!13717 = !DILocation(line: 1504, column: 1, scope: !13624)
!13718 = distinct !DISubprogram(name: "ypan_up", scope: !3, file: !3, line: 1458, type: !4867, scopeLine: 1459, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !241)
!13719 = !DILocalVariable(name: "vc", arg: 1, scope: !13718, file: !3, line: 1458, type: !4826)
!13720 = !DILocation(line: 1458, column: 48, scope: !13718)
!13721 = !DILocalVariable(name: "count", arg: 2, scope: !13718, file: !3, line: 1458, type: !170)
!13722 = !DILocation(line: 1458, column: 56, scope: !13718)
!13723 = !DILocalVariable(name: "info", scope: !13718, file: !3, line: 1460, type: !199)
!13724 = !DILocation(line: 1460, column: 18, scope: !13718)
!13725 = !DILocation(line: 1460, column: 50, scope: !13718)
!13726 = !DILocation(line: 1460, column: 54, scope: !13718)
!13727 = !DILocation(line: 1460, column: 39, scope: !13718)
!13728 = !DILocation(line: 1460, column: 25, scope: !13718)
!13729 = !DILocalVariable(name: "p", scope: !13718, file: !3, line: 1461, type: !5048)
!13730 = !DILocation(line: 1461, column: 24, scope: !13718)
!13731 = !DILocation(line: 1461, column: 40, scope: !13718)
!13732 = !DILocation(line: 1461, column: 44, scope: !13718)
!13733 = !DILocation(line: 1461, column: 29, scope: !13718)
!13734 = !DILocalVariable(name: "ops", scope: !13718, file: !3, line: 1462, type: !4818)
!13735 = !DILocation(line: 1462, column: 20, scope: !13718)
!13736 = !DILocation(line: 1462, column: 26, scope: !13718)
!13737 = !DILocation(line: 1462, column: 32, scope: !13718)
!13738 = !DILocation(line: 1464, column: 16, scope: !13718)
!13739 = !DILocation(line: 1464, column: 2, scope: !13718)
!13740 = !DILocation(line: 1464, column: 5, scope: !13718)
!13741 = !DILocation(line: 1464, column: 13, scope: !13718)
!13742 = !DILocation(line: 1465, column: 6, scope: !13743)
!13743 = distinct !DILexicalBlock(scope: !13718, file: !3, line: 1465, column: 6)
!13744 = !DILocation(line: 1465, column: 9, scope: !13743)
!13745 = !DILocation(line: 1465, column: 19, scope: !13743)
!13746 = !DILocation(line: 1465, column: 22, scope: !13743)
!13747 = !DILocation(line: 1465, column: 30, scope: !13743)
!13748 = !DILocation(line: 1465, column: 34, scope: !13743)
!13749 = !DILocation(line: 1465, column: 28, scope: !13743)
!13750 = !DILocation(line: 1465, column: 17, scope: !13743)
!13751 = !DILocation(line: 1465, column: 6, scope: !13718)
!13752 = !DILocation(line: 1466, column: 3, scope: !13753)
!13753 = distinct !DILexicalBlock(scope: !13743, file: !3, line: 1465, column: 43)
!13754 = !DILocation(line: 1466, column: 8, scope: !13753)
!13755 = !DILocation(line: 1466, column: 14, scope: !13753)
!13756 = !DILocation(line: 1466, column: 18, scope: !13753)
!13757 = !DILocation(line: 1466, column: 24, scope: !13753)
!13758 = !DILocation(line: 1466, column: 27, scope: !13753)
!13759 = !DILocation(line: 1466, column: 35, scope: !13753)
!13760 = !DILocation(line: 1466, column: 39, scope: !13753)
!13761 = !DILocation(line: 1466, column: 33, scope: !13753)
!13762 = !DILocation(line: 1467, column: 17, scope: !13753)
!13763 = !DILocation(line: 1467, column: 21, scope: !13753)
!13764 = !DILocation(line: 1467, column: 30, scope: !13753)
!13765 = !DILocation(line: 1467, column: 34, scope: !13753)
!13766 = !DILocation(line: 1468, column: 17, scope: !13753)
!13767 = !DILocation(line: 1468, column: 20, scope: !13753)
!13768 = !DILocation(line: 1468, column: 28, scope: !13753)
!13769 = !DILocation(line: 1468, column: 32, scope: !13753)
!13770 = !DILocation(line: 1468, column: 26, scope: !13753)
!13771 = !DILocation(line: 1468, column: 3, scope: !13753)
!13772 = !DILocation(line: 1468, column: 6, scope: !13753)
!13773 = !DILocation(line: 1468, column: 14, scope: !13753)
!13774 = !DILocation(line: 1469, column: 2, scope: !13753)
!13775 = !DILocation(line: 1471, column: 2, scope: !13718)
!13776 = !DILocation(line: 1471, column: 7, scope: !13718)
!13777 = !DILocation(line: 1471, column: 11, scope: !13718)
!13778 = !DILocation(line: 1471, column: 19, scope: !13718)
!13779 = !DILocation(line: 1472, column: 21, scope: !13718)
!13780 = !DILocation(line: 1472, column: 24, scope: !13718)
!13781 = !DILocation(line: 1472, column: 34, scope: !13718)
!13782 = !DILocation(line: 1472, column: 38, scope: !13718)
!13783 = !DILocation(line: 1472, column: 46, scope: !13718)
!13784 = !DILocation(line: 1472, column: 32, scope: !13718)
!13785 = !DILocation(line: 1472, column: 2, scope: !13718)
!13786 = !DILocation(line: 1472, column: 7, scope: !13718)
!13787 = !DILocation(line: 1472, column: 11, scope: !13718)
!13788 = !DILocation(line: 1472, column: 19, scope: !13718)
!13789 = !DILocation(line: 1473, column: 2, scope: !13718)
!13790 = !DILocation(line: 1473, column: 7, scope: !13718)
!13791 = !DILocation(line: 1473, column: 11, scope: !13718)
!13792 = !DILocation(line: 1473, column: 17, scope: !13718)
!13793 = !DILocation(line: 1474, column: 2, scope: !13718)
!13794 = !DILocation(line: 1474, column: 7, scope: !13718)
!13795 = !DILocation(line: 1474, column: 20, scope: !13718)
!13796 = !DILocation(line: 1475, column: 22, scope: !13718)
!13797 = !DILocation(line: 1475, column: 2, scope: !13718)
!13798 = !DILocation(line: 1476, column: 20, scope: !13718)
!13799 = !DILocation(line: 1476, column: 17, scope: !13718)
!13800 = !DILocation(line: 1477, column: 6, scope: !13801)
!13801 = distinct !DILexicalBlock(scope: !13718, file: !3, line: 1477, column: 6)
!13802 = !DILocation(line: 1477, column: 23, scope: !13801)
!13803 = !DILocation(line: 1477, column: 21, scope: !13801)
!13804 = !DILocation(line: 1477, column: 6, scope: !13718)
!13805 = !DILocation(line: 1478, column: 20, scope: !13801)
!13806 = !DILocation(line: 1478, column: 18, scope: !13801)
!13807 = !DILocation(line: 1478, column: 3, scope: !13801)
!13808 = !DILocation(line: 1479, column: 21, scope: !13718)
!13809 = !DILocation(line: 1480, column: 1, scope: !13718)
!13810 = distinct !DISubprogram(name: "fbcon_redraw", scope: !3, file: !3, line: 1638, type: !13525, scopeLine: 1640, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !241)
!13811 = !DILocalVariable(name: "vc", arg: 1, scope: !13810, file: !3, line: 1638, type: !4826)
!13812 = !DILocation(line: 1638, column: 42, scope: !13810)
!13813 = !DILocalVariable(name: "p", arg: 2, scope: !13810, file: !3, line: 1638, type: !5048)
!13814 = !DILocation(line: 1638, column: 68, scope: !13810)
!13815 = !DILocalVariable(name: "line", arg: 3, scope: !13810, file: !3, line: 1639, type: !170)
!13816 = !DILocation(line: 1639, column: 9, scope: !13810)
!13817 = !DILocalVariable(name: "count", arg: 4, scope: !13810, file: !3, line: 1639, type: !170)
!13818 = !DILocation(line: 1639, column: 19, scope: !13810)
!13819 = !DILocalVariable(name: "offset", arg: 5, scope: !13810, file: !3, line: 1639, type: !170)
!13820 = !DILocation(line: 1639, column: 30, scope: !13810)
!13821 = !DILocalVariable(name: "d", scope: !13810, file: !3, line: 1641, type: !4957)
!13822 = !DILocation(line: 1641, column: 18, scope: !13810)
!13823 = !DILocation(line: 1642, column: 7, scope: !13810)
!13824 = !DILocation(line: 1642, column: 11, scope: !13810)
!13825 = !DILocation(line: 1642, column: 23, scope: !13810)
!13826 = !DILocation(line: 1642, column: 27, scope: !13810)
!13827 = !DILocation(line: 1642, column: 41, scope: !13810)
!13828 = !DILocation(line: 1642, column: 39, scope: !13810)
!13829 = !DILocation(line: 1642, column: 21, scope: !13810)
!13830 = !DILocation(line: 1641, column: 22, scope: !13810)
!13831 = !DILocalVariable(name: "s", scope: !13810, file: !3, line: 1643, type: !4957)
!13832 = !DILocation(line: 1643, column: 18, scope: !13810)
!13833 = !DILocation(line: 1643, column: 22, scope: !13810)
!13834 = !DILocation(line: 1643, column: 26, scope: !13810)
!13835 = !DILocation(line: 1643, column: 24, scope: !13810)
!13836 = !DILocation(line: 1645, column: 2, scope: !13810)
!13837 = !DILocation(line: 1645, column: 14, scope: !13810)
!13838 = !DILocalVariable(name: "start", scope: !13839, file: !3, line: 1646, type: !4957)
!13839 = distinct !DILexicalBlock(scope: !13810, file: !3, line: 1645, column: 18)
!13840 = !DILocation(line: 1646, column: 19, scope: !13839)
!13841 = !DILocation(line: 1646, column: 27, scope: !13839)
!13842 = !DILocalVariable(name: "le", scope: !13839, file: !3, line: 1647, type: !4957)
!13843 = !DILocation(line: 1647, column: 19, scope: !13839)
!13844 = !DILocation(line: 1647, column: 24, scope: !13839)
!13845 = !DILocalVariable(name: "c", scope: !13839, file: !3, line: 1648, type: !198)
!13846 = !DILocation(line: 1648, column: 18, scope: !13839)
!13847 = !DILocalVariable(name: "x", scope: !13839, file: !3, line: 1649, type: !170)
!13848 = !DILocation(line: 1649, column: 7, scope: !13839)
!13849 = !DILocalVariable(name: "attr", scope: !13839, file: !3, line: 1650, type: !198)
!13850 = !DILocation(line: 1650, column: 18, scope: !13839)
!13851 = !DILocation(line: 1652, column: 3, scope: !13839)
!13852 = !DILocation(line: 1653, column: 8, scope: !13853)
!13853 = distinct !DILexicalBlock(scope: !13839, file: !3, line: 1652, column: 6)
!13854 = !DILocation(line: 1653, column: 6, scope: !13853)
!13855 = !DILocation(line: 1654, column: 8, scope: !13856)
!13856 = distinct !DILexicalBlock(scope: !13853, file: !3, line: 1654, column: 8)
!13857 = !DILocation(line: 1654, column: 17, scope: !13856)
!13858 = !DILocation(line: 1654, column: 19, scope: !13856)
!13859 = !DILocation(line: 1654, column: 13, scope: !13856)
!13860 = !DILocation(line: 1654, column: 8, scope: !13853)
!13861 = !DILocation(line: 1655, column: 12, scope: !13862)
!13862 = distinct !DILexicalBlock(scope: !13856, file: !3, line: 1654, column: 30)
!13863 = !DILocation(line: 1655, column: 14, scope: !13862)
!13864 = !DILocation(line: 1655, column: 10, scope: !13862)
!13865 = !DILocation(line: 1656, column: 9, scope: !13866)
!13866 = distinct !DILexicalBlock(scope: !13862, file: !3, line: 1656, column: 9)
!13867 = !DILocation(line: 1656, column: 13, scope: !13866)
!13868 = !DILocation(line: 1656, column: 11, scope: !13866)
!13869 = !DILocation(line: 1656, column: 9, scope: !13862)
!13870 = !DILocation(line: 1657, column: 18, scope: !13871)
!13871 = distinct !DILexicalBlock(scope: !13866, file: !3, line: 1656, column: 20)
!13872 = !DILocation(line: 1657, column: 22, scope: !13871)
!13873 = !DILocation(line: 1657, column: 29, scope: !13871)
!13874 = !DILocation(line: 1657, column: 33, scope: !13871)
!13875 = !DILocation(line: 1657, column: 31, scope: !13871)
!13876 = !DILocation(line: 1658, column: 11, scope: !13871)
!13877 = !DILocation(line: 1658, column: 17, scope: !13871)
!13878 = !DILocation(line: 1657, column: 6, scope: !13871)
!13879 = !DILocation(line: 1659, column: 11, scope: !13871)
!13880 = !DILocation(line: 1659, column: 15, scope: !13871)
!13881 = !DILocation(line: 1659, column: 13, scope: !13871)
!13882 = !DILocation(line: 1659, column: 8, scope: !13871)
!13883 = !DILocation(line: 1660, column: 14, scope: !13871)
!13884 = !DILocation(line: 1660, column: 12, scope: !13871)
!13885 = !DILocation(line: 1661, column: 5, scope: !13871)
!13886 = !DILocation(line: 1662, column: 4, scope: !13862)
!13887 = !DILocation(line: 1663, column: 8, scope: !13888)
!13888 = distinct !DILexicalBlock(scope: !13853, file: !3, line: 1663, column: 8)
!13889 = !DILocation(line: 1663, column: 13, scope: !13888)
!13890 = !DILocation(line: 1663, column: 10, scope: !13888)
!13891 = !DILocation(line: 1663, column: 8, scope: !13853)
!13892 = !DILocation(line: 1664, column: 9, scope: !13893)
!13893 = distinct !DILexicalBlock(scope: !13894, file: !3, line: 1664, column: 9)
!13894 = distinct !DILexicalBlock(scope: !13888, file: !3, line: 1663, column: 27)
!13895 = !DILocation(line: 1664, column: 13, scope: !13893)
!13896 = !DILocation(line: 1664, column: 11, scope: !13893)
!13897 = !DILocation(line: 1664, column: 9, scope: !13894)
!13898 = !DILocation(line: 1665, column: 18, scope: !13899)
!13899 = distinct !DILexicalBlock(scope: !13893, file: !3, line: 1664, column: 20)
!13900 = !DILocation(line: 1665, column: 22, scope: !13899)
!13901 = !DILocation(line: 1665, column: 29, scope: !13899)
!13902 = !DILocation(line: 1665, column: 33, scope: !13899)
!13903 = !DILocation(line: 1665, column: 31, scope: !13899)
!13904 = !DILocation(line: 1666, column: 12, scope: !13899)
!13905 = !DILocation(line: 1666, column: 18, scope: !13899)
!13906 = !DILocation(line: 1665, column: 6, scope: !13899)
!13907 = !DILocation(line: 1667, column: 11, scope: !13899)
!13908 = !DILocation(line: 1667, column: 15, scope: !13899)
!13909 = !DILocation(line: 1667, column: 13, scope: !13899)
!13910 = !DILocation(line: 1667, column: 21, scope: !13899)
!13911 = !DILocation(line: 1667, column: 8, scope: !13899)
!13912 = !DILocation(line: 1668, column: 14, scope: !13899)
!13913 = !DILocation(line: 1668, column: 16, scope: !13899)
!13914 = !DILocation(line: 1668, column: 12, scope: !13899)
!13915 = !DILocation(line: 1669, column: 5, scope: !13899)
!13916 = !DILocation(line: 1670, column: 7, scope: !13917)
!13917 = distinct !DILexicalBlock(scope: !13893, file: !3, line: 1669, column: 12)
!13918 = !DILocation(line: 1671, column: 11, scope: !13917)
!13919 = !DILocation(line: 1673, column: 4, scope: !13894)
!13920 = !DILocation(line: 1674, column: 4, scope: !13853)
!13921 = !DILocation(line: 1675, column: 4, scope: !13853)
!13922 = !DILocation(line: 1676, column: 5, scope: !13853)
!13923 = !DILocation(line: 1677, column: 5, scope: !13853)
!13924 = !DILocation(line: 1678, column: 3, scope: !13853)
!13925 = !DILocation(line: 1678, column: 12, scope: !13839)
!13926 = !DILocation(line: 1678, column: 16, scope: !13839)
!13927 = !DILocation(line: 1678, column: 14, scope: !13839)
!13928 = distinct !{!13928, !13851, !13929}
!13929 = !DILocation(line: 1678, column: 18, scope: !13839)
!13930 = !DILocation(line: 1679, column: 7, scope: !13931)
!13931 = distinct !DILexicalBlock(scope: !13839, file: !3, line: 1679, column: 7)
!13932 = !DILocation(line: 1679, column: 11, scope: !13931)
!13933 = !DILocation(line: 1679, column: 9, scope: !13931)
!13934 = !DILocation(line: 1679, column: 7, scope: !13839)
!13935 = !DILocation(line: 1680, column: 16, scope: !13931)
!13936 = !DILocation(line: 1680, column: 20, scope: !13931)
!13937 = !DILocation(line: 1680, column: 27, scope: !13931)
!13938 = !DILocation(line: 1680, column: 31, scope: !13931)
!13939 = !DILocation(line: 1680, column: 29, scope: !13931)
!13940 = !DILocation(line: 1680, column: 38, scope: !13931)
!13941 = !DILocation(line: 1680, column: 44, scope: !13931)
!13942 = !DILocation(line: 1680, column: 4, scope: !13931)
!13943 = !DILocation(line: 1681, column: 3, scope: !13839)
!13944 = !DILocation(line: 1682, column: 7, scope: !13945)
!13945 = distinct !DILexicalBlock(scope: !13839, file: !3, line: 1682, column: 7)
!13946 = !DILocation(line: 1682, column: 14, scope: !13945)
!13947 = !DILocation(line: 1682, column: 7, scope: !13839)
!13948 = !DILocation(line: 1683, column: 8, scope: !13945)
!13949 = !DILocation(line: 1683, column: 4, scope: !13945)
!13950 = !DILocation(line: 1685, column: 8, scope: !13951)
!13951 = distinct !DILexicalBlock(scope: !13945, file: !3, line: 1684, column: 8)
!13952 = !DILocation(line: 1687, column: 9, scope: !13951)
!13953 = !DILocation(line: 1687, column: 13, scope: !13951)
!13954 = !DILocation(line: 1687, column: 6, scope: !13951)
!13955 = !DILocation(line: 1688, column: 9, scope: !13951)
!13956 = !DILocation(line: 1688, column: 13, scope: !13951)
!13957 = !DILocation(line: 1688, column: 6, scope: !13951)
!13958 = distinct !{!13958, !13836, !13959}
!13959 = !DILocation(line: 1690, column: 2, scope: !13810)
!13960 = !DILocation(line: 1691, column: 1, scope: !13810)
!13961 = distinct !DISubprogram(name: "ywrap_down", scope: !3, file: !3, line: 1439, type: !4867, scopeLine: 1440, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !241)
!13962 = !DILocalVariable(name: "vc", arg: 1, scope: !13961, file: !3, line: 1439, type: !4826)
!13963 = !DILocation(line: 1439, column: 51, scope: !13961)
!13964 = !DILocalVariable(name: "count", arg: 2, scope: !13961, file: !3, line: 1439, type: !170)
!13965 = !DILocation(line: 1439, column: 59, scope: !13961)
!13966 = !DILocalVariable(name: "info", scope: !13961, file: !3, line: 1441, type: !199)
!13967 = !DILocation(line: 1441, column: 18, scope: !13961)
!13968 = !DILocation(line: 1441, column: 50, scope: !13961)
!13969 = !DILocation(line: 1441, column: 54, scope: !13961)
!13970 = !DILocation(line: 1441, column: 39, scope: !13961)
!13971 = !DILocation(line: 1441, column: 25, scope: !13961)
!13972 = !DILocalVariable(name: "ops", scope: !13961, file: !3, line: 1442, type: !4818)
!13973 = !DILocation(line: 1442, column: 20, scope: !13961)
!13974 = !DILocation(line: 1442, column: 26, scope: !13961)
!13975 = !DILocation(line: 1442, column: 32, scope: !13961)
!13976 = !DILocalVariable(name: "p", scope: !13961, file: !3, line: 1443, type: !5048)
!13977 = !DILocation(line: 1443, column: 24, scope: !13961)
!13978 = !DILocation(line: 1443, column: 40, scope: !13961)
!13979 = !DILocation(line: 1443, column: 44, scope: !13961)
!13980 = !DILocation(line: 1443, column: 29, scope: !13961)
!13981 = !DILocation(line: 1445, column: 16, scope: !13961)
!13982 = !DILocation(line: 1445, column: 2, scope: !13961)
!13983 = !DILocation(line: 1445, column: 5, scope: !13961)
!13984 = !DILocation(line: 1445, column: 13, scope: !13961)
!13985 = !DILocation(line: 1446, column: 6, scope: !13986)
!13986 = distinct !DILexicalBlock(scope: !13961, file: !3, line: 1446, column: 6)
!13987 = !DILocation(line: 1446, column: 9, scope: !13986)
!13988 = !DILocation(line: 1446, column: 17, scope: !13986)
!13989 = !DILocation(line: 1446, column: 6, scope: !13961)
!13990 = !DILocation(line: 1447, column: 17, scope: !13986)
!13991 = !DILocation(line: 1447, column: 20, scope: !13986)
!13992 = !DILocation(line: 1447, column: 3, scope: !13986)
!13993 = !DILocation(line: 1447, column: 6, scope: !13986)
!13994 = !DILocation(line: 1447, column: 14, scope: !13986)
!13995 = !DILocation(line: 1448, column: 2, scope: !13961)
!13996 = !DILocation(line: 1448, column: 7, scope: !13961)
!13997 = !DILocation(line: 1448, column: 11, scope: !13961)
!13998 = !DILocation(line: 1448, column: 19, scope: !13961)
!13999 = !DILocation(line: 1449, column: 21, scope: !13961)
!14000 = !DILocation(line: 1449, column: 24, scope: !13961)
!14001 = !DILocation(line: 1449, column: 34, scope: !13961)
!14002 = !DILocation(line: 1449, column: 38, scope: !13961)
!14003 = !DILocation(line: 1449, column: 46, scope: !13961)
!14004 = !DILocation(line: 1449, column: 32, scope: !13961)
!14005 = !DILocation(line: 1449, column: 2, scope: !13961)
!14006 = !DILocation(line: 1449, column: 7, scope: !13961)
!14007 = !DILocation(line: 1449, column: 11, scope: !13961)
!14008 = !DILocation(line: 1449, column: 19, scope: !13961)
!14009 = !DILocation(line: 1450, column: 2, scope: !13961)
!14010 = !DILocation(line: 1450, column: 7, scope: !13961)
!14011 = !DILocation(line: 1450, column: 11, scope: !13961)
!14012 = !DILocation(line: 1450, column: 17, scope: !13961)
!14013 = !DILocation(line: 1451, column: 2, scope: !13961)
!14014 = !DILocation(line: 1451, column: 7, scope: !13961)
!14015 = !DILocation(line: 1451, column: 20, scope: !13961)
!14016 = !DILocation(line: 1452, column: 20, scope: !13961)
!14017 = !DILocation(line: 1452, column: 17, scope: !13961)
!14018 = !DILocation(line: 1453, column: 6, scope: !14019)
!14019 = distinct !DILexicalBlock(scope: !13961, file: !3, line: 1453, column: 6)
!14020 = !DILocation(line: 1453, column: 21, scope: !14019)
!14021 = !DILocation(line: 1453, column: 6, scope: !13961)
!14022 = !DILocation(line: 1454, column: 18, scope: !14019)
!14023 = !DILocation(line: 1454, column: 3, scope: !14019)
!14024 = !DILocation(line: 1455, column: 21, scope: !13961)
!14025 = !DILocation(line: 1456, column: 1, scope: !13961)
!14026 = distinct !DISubprogram(name: "ypan_down", scope: !3, file: !3, line: 1506, type: !4867, scopeLine: 1507, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !241)
!14027 = !DILocalVariable(name: "vc", arg: 1, scope: !14026, file: !3, line: 1506, type: !4826)
!14028 = !DILocation(line: 1506, column: 50, scope: !14026)
!14029 = !DILocalVariable(name: "count", arg: 2, scope: !14026, file: !3, line: 1506, type: !170)
!14030 = !DILocation(line: 1506, column: 58, scope: !14026)
!14031 = !DILocalVariable(name: "info", scope: !14026, file: !3, line: 1508, type: !199)
!14032 = !DILocation(line: 1508, column: 18, scope: !14026)
!14033 = !DILocation(line: 1508, column: 50, scope: !14026)
!14034 = !DILocation(line: 1508, column: 54, scope: !14026)
!14035 = !DILocation(line: 1508, column: 39, scope: !14026)
!14036 = !DILocation(line: 1508, column: 25, scope: !14026)
!14037 = !DILocalVariable(name: "p", scope: !14026, file: !3, line: 1509, type: !5048)
!14038 = !DILocation(line: 1509, column: 24, scope: !14026)
!14039 = !DILocation(line: 1509, column: 40, scope: !14026)
!14040 = !DILocation(line: 1509, column: 44, scope: !14026)
!14041 = !DILocation(line: 1509, column: 29, scope: !14026)
!14042 = !DILocalVariable(name: "ops", scope: !14026, file: !3, line: 1510, type: !4818)
!14043 = !DILocation(line: 1510, column: 20, scope: !14026)
!14044 = !DILocation(line: 1510, column: 26, scope: !14026)
!14045 = !DILocation(line: 1510, column: 32, scope: !14026)
!14046 = !DILocation(line: 1512, column: 16, scope: !14026)
!14047 = !DILocation(line: 1512, column: 2, scope: !14026)
!14048 = !DILocation(line: 1512, column: 5, scope: !14026)
!14049 = !DILocation(line: 1512, column: 13, scope: !14026)
!14050 = !DILocation(line: 1513, column: 6, scope: !14051)
!14051 = distinct !DILexicalBlock(scope: !14026, file: !3, line: 1513, column: 6)
!14052 = !DILocation(line: 1513, column: 9, scope: !14051)
!14053 = !DILocation(line: 1513, column: 17, scope: !14051)
!14054 = !DILocation(line: 1513, column: 6, scope: !14026)
!14055 = !DILocation(line: 1514, column: 3, scope: !14056)
!14056 = distinct !DILexicalBlock(scope: !14051, file: !3, line: 1513, column: 22)
!14057 = !DILocation(line: 1514, column: 8, scope: !14056)
!14058 = !DILocation(line: 1514, column: 14, scope: !14056)
!14059 = !DILocation(line: 1514, column: 18, scope: !14056)
!14060 = !DILocation(line: 1514, column: 30, scope: !14056)
!14061 = !DILocation(line: 1514, column: 33, scope: !14056)
!14062 = !DILocation(line: 1514, column: 41, scope: !14056)
!14063 = !DILocation(line: 1514, column: 45, scope: !14056)
!14064 = !DILocation(line: 1514, column: 39, scope: !14056)
!14065 = !DILocation(line: 1515, column: 11, scope: !14056)
!14066 = !DILocation(line: 1515, column: 15, scope: !14056)
!14067 = !DILocation(line: 1515, column: 24, scope: !14056)
!14068 = !DILocation(line: 1515, column: 28, scope: !14056)
!14069 = !DILocation(line: 1516, column: 17, scope: !14056)
!14070 = !DILocation(line: 1516, column: 20, scope: !14056)
!14071 = !DILocation(line: 1516, column: 28, scope: !14056)
!14072 = !DILocation(line: 1516, column: 32, scope: !14056)
!14073 = !DILocation(line: 1516, column: 26, scope: !14056)
!14074 = !DILocation(line: 1516, column: 3, scope: !14056)
!14075 = !DILocation(line: 1516, column: 6, scope: !14056)
!14076 = !DILocation(line: 1516, column: 14, scope: !14056)
!14077 = !DILocation(line: 1517, column: 2, scope: !14056)
!14078 = !DILocation(line: 1519, column: 2, scope: !14026)
!14079 = !DILocation(line: 1519, column: 7, scope: !14026)
!14080 = !DILocation(line: 1519, column: 11, scope: !14026)
!14081 = !DILocation(line: 1519, column: 19, scope: !14026)
!14082 = !DILocation(line: 1520, column: 21, scope: !14026)
!14083 = !DILocation(line: 1520, column: 24, scope: !14026)
!14084 = !DILocation(line: 1520, column: 34, scope: !14026)
!14085 = !DILocation(line: 1520, column: 38, scope: !14026)
!14086 = !DILocation(line: 1520, column: 46, scope: !14026)
!14087 = !DILocation(line: 1520, column: 32, scope: !14026)
!14088 = !DILocation(line: 1520, column: 2, scope: !14026)
!14089 = !DILocation(line: 1520, column: 7, scope: !14026)
!14090 = !DILocation(line: 1520, column: 11, scope: !14026)
!14091 = !DILocation(line: 1520, column: 19, scope: !14026)
!14092 = !DILocation(line: 1521, column: 2, scope: !14026)
!14093 = !DILocation(line: 1521, column: 7, scope: !14026)
!14094 = !DILocation(line: 1521, column: 11, scope: !14026)
!14095 = !DILocation(line: 1521, column: 17, scope: !14026)
!14096 = !DILocation(line: 1522, column: 2, scope: !14026)
!14097 = !DILocation(line: 1522, column: 7, scope: !14026)
!14098 = !DILocation(line: 1522, column: 20, scope: !14026)
!14099 = !DILocation(line: 1523, column: 22, scope: !14026)
!14100 = !DILocation(line: 1523, column: 2, scope: !14026)
!14101 = !DILocation(line: 1524, column: 20, scope: !14026)
!14102 = !DILocation(line: 1524, column: 17, scope: !14026)
!14103 = !DILocation(line: 1525, column: 6, scope: !14104)
!14104 = distinct !DILexicalBlock(scope: !14026, file: !3, line: 1525, column: 6)
!14105 = !DILocation(line: 1525, column: 21, scope: !14104)
!14106 = !DILocation(line: 1525, column: 6, scope: !14026)
!14107 = !DILocation(line: 1526, column: 18, scope: !14104)
!14108 = !DILocation(line: 1526, column: 3, scope: !14104)
!14109 = !DILocation(line: 1527, column: 21, scope: !14026)
!14110 = !DILocation(line: 1528, column: 1, scope: !14026)
!14111 = distinct !DISubprogram(name: "ypan_down_redraw", scope: !3, file: !3, line: 1530, type: !13625, scopeLine: 1531, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !241)
!14112 = !DILocalVariable(name: "vc", arg: 1, scope: !14111, file: !3, line: 1530, type: !4826)
!14113 = !DILocation(line: 1530, column: 57, scope: !14111)
!14114 = !DILocalVariable(name: "t", arg: 2, scope: !14111, file: !3, line: 1530, type: !170)
!14115 = !DILocation(line: 1530, column: 65, scope: !14111)
!14116 = !DILocalVariable(name: "count", arg: 3, scope: !14111, file: !3, line: 1530, type: !170)
!14117 = !DILocation(line: 1530, column: 72, scope: !14111)
!14118 = !DILocalVariable(name: "info", scope: !14111, file: !3, line: 1532, type: !199)
!14119 = !DILocation(line: 1532, column: 18, scope: !14111)
!14120 = !DILocation(line: 1532, column: 50, scope: !14111)
!14121 = !DILocation(line: 1532, column: 54, scope: !14111)
!14122 = !DILocation(line: 1532, column: 39, scope: !14111)
!14123 = !DILocation(line: 1532, column: 25, scope: !14111)
!14124 = !DILocalVariable(name: "ops", scope: !14111, file: !3, line: 1533, type: !4818)
!14125 = !DILocation(line: 1533, column: 20, scope: !14111)
!14126 = !DILocation(line: 1533, column: 26, scope: !14111)
!14127 = !DILocation(line: 1533, column: 32, scope: !14111)
!14128 = !DILocalVariable(name: "p", scope: !14111, file: !3, line: 1534, type: !5048)
!14129 = !DILocation(line: 1534, column: 24, scope: !14111)
!14130 = !DILocation(line: 1534, column: 40, scope: !14111)
!14131 = !DILocation(line: 1534, column: 44, scope: !14111)
!14132 = !DILocation(line: 1534, column: 29, scope: !14111)
!14133 = !DILocation(line: 1536, column: 16, scope: !14111)
!14134 = !DILocation(line: 1536, column: 2, scope: !14111)
!14135 = !DILocation(line: 1536, column: 5, scope: !14111)
!14136 = !DILocation(line: 1536, column: 13, scope: !14111)
!14137 = !DILocation(line: 1538, column: 6, scope: !14138)
!14138 = distinct !DILexicalBlock(scope: !14111, file: !3, line: 1538, column: 6)
!14139 = !DILocation(line: 1538, column: 9, scope: !14138)
!14140 = !DILocation(line: 1538, column: 17, scope: !14138)
!14141 = !DILocation(line: 1538, column: 6, scope: !14111)
!14142 = !DILocation(line: 1539, column: 17, scope: !14143)
!14143 = distinct !DILexicalBlock(scope: !14138, file: !3, line: 1538, column: 22)
!14144 = !DILocation(line: 1539, column: 20, scope: !14143)
!14145 = !DILocation(line: 1539, column: 28, scope: !14143)
!14146 = !DILocation(line: 1539, column: 32, scope: !14143)
!14147 = !DILocation(line: 1539, column: 26, scope: !14143)
!14148 = !DILocation(line: 1539, column: 3, scope: !14143)
!14149 = !DILocation(line: 1539, column: 6, scope: !14143)
!14150 = !DILocation(line: 1539, column: 14, scope: !14143)
!14151 = !DILocation(line: 1540, column: 21, scope: !14143)
!14152 = !DILocation(line: 1540, column: 25, scope: !14143)
!14153 = !DILocation(line: 1540, column: 28, scope: !14143)
!14154 = !DILocation(line: 1540, column: 31, scope: !14143)
!14155 = !DILocation(line: 1540, column: 35, scope: !14143)
!14156 = !DILocation(line: 1540, column: 45, scope: !14143)
!14157 = !DILocation(line: 1540, column: 43, scope: !14143)
!14158 = !DILocation(line: 1540, column: 52, scope: !14143)
!14159 = !DILocation(line: 1540, column: 56, scope: !14143)
!14160 = !DILocation(line: 1540, column: 54, scope: !14143)
!14161 = !DILocation(line: 1540, column: 3, scope: !14143)
!14162 = !DILocation(line: 1541, column: 2, scope: !14143)
!14163 = !DILocation(line: 1543, column: 2, scope: !14111)
!14164 = !DILocation(line: 1543, column: 7, scope: !14111)
!14165 = !DILocation(line: 1543, column: 11, scope: !14111)
!14166 = !DILocation(line: 1543, column: 19, scope: !14111)
!14167 = !DILocation(line: 1544, column: 21, scope: !14111)
!14168 = !DILocation(line: 1544, column: 24, scope: !14111)
!14169 = !DILocation(line: 1544, column: 34, scope: !14111)
!14170 = !DILocation(line: 1544, column: 38, scope: !14111)
!14171 = !DILocation(line: 1544, column: 46, scope: !14111)
!14172 = !DILocation(line: 1544, column: 32, scope: !14111)
!14173 = !DILocation(line: 1544, column: 2, scope: !14111)
!14174 = !DILocation(line: 1544, column: 7, scope: !14111)
!14175 = !DILocation(line: 1544, column: 11, scope: !14111)
!14176 = !DILocation(line: 1544, column: 19, scope: !14111)
!14177 = !DILocation(line: 1545, column: 2, scope: !14111)
!14178 = !DILocation(line: 1545, column: 7, scope: !14111)
!14179 = !DILocation(line: 1545, column: 11, scope: !14111)
!14180 = !DILocation(line: 1545, column: 17, scope: !14111)
!14181 = !DILocation(line: 1546, column: 2, scope: !14111)
!14182 = !DILocation(line: 1546, column: 7, scope: !14111)
!14183 = !DILocation(line: 1546, column: 20, scope: !14111)
!14184 = !DILocation(line: 1547, column: 22, scope: !14111)
!14185 = !DILocation(line: 1547, column: 2, scope: !14111)
!14186 = !DILocation(line: 1548, column: 20, scope: !14111)
!14187 = !DILocation(line: 1548, column: 17, scope: !14111)
!14188 = !DILocation(line: 1549, column: 6, scope: !14189)
!14189 = distinct !DILexicalBlock(scope: !14111, file: !3, line: 1549, column: 6)
!14190 = !DILocation(line: 1549, column: 21, scope: !14189)
!14191 = !DILocation(line: 1549, column: 6, scope: !14111)
!14192 = !DILocation(line: 1550, column: 18, scope: !14189)
!14193 = !DILocation(line: 1550, column: 3, scope: !14189)
!14194 = !DILocation(line: 1551, column: 21, scope: !14111)
!14195 = !DILocation(line: 1552, column: 1, scope: !14111)
!14196 = distinct !DISubprogram(name: "fbcon_bmove_rec", scope: !3, file: !3, line: 1916, type: !14197, scopeLine: 1918, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !241)
!14197 = !DISubroutineType(types: !14198)
!14198 = !{null, !4826, !5048, !170, !170, !170, !170, !170, !170, !10483}
!14199 = !DILocalVariable(name: "vc", arg: 1, scope: !14196, file: !3, line: 1916, type: !4826)
!14200 = !DILocation(line: 1916, column: 45, scope: !14196)
!14201 = !DILocalVariable(name: "p", arg: 2, scope: !14196, file: !3, line: 1916, type: !5048)
!14202 = !DILocation(line: 1916, column: 71, scope: !14196)
!14203 = !DILocalVariable(name: "sy", arg: 3, scope: !14196, file: !3, line: 1916, type: !170)
!14204 = !DILocation(line: 1916, column: 78, scope: !14196)
!14205 = !DILocalVariable(name: "sx", arg: 4, scope: !14196, file: !3, line: 1916, type: !170)
!14206 = !DILocation(line: 1916, column: 86, scope: !14196)
!14207 = !DILocalVariable(name: "dy", arg: 5, scope: !14196, file: !3, line: 1917, type: !170)
!14208 = !DILocation(line: 1917, column: 12, scope: !14196)
!14209 = !DILocalVariable(name: "dx", arg: 6, scope: !14196, file: !3, line: 1917, type: !170)
!14210 = !DILocation(line: 1917, column: 20, scope: !14196)
!14211 = !DILocalVariable(name: "height", arg: 7, scope: !14196, file: !3, line: 1917, type: !170)
!14212 = !DILocation(line: 1917, column: 28, scope: !14196)
!14213 = !DILocalVariable(name: "width", arg: 8, scope: !14196, file: !3, line: 1917, type: !170)
!14214 = !DILocation(line: 1917, column: 40, scope: !14196)
!14215 = !DILocalVariable(name: "y_break", arg: 9, scope: !14196, file: !3, line: 1917, type: !10483)
!14216 = !DILocation(line: 1917, column: 53, scope: !14196)
!14217 = !DILocalVariable(name: "info", scope: !14196, file: !3, line: 1919, type: !199)
!14218 = !DILocation(line: 1919, column: 18, scope: !14196)
!14219 = !DILocation(line: 1919, column: 50, scope: !14196)
!14220 = !DILocation(line: 1919, column: 54, scope: !14196)
!14221 = !DILocation(line: 1919, column: 39, scope: !14196)
!14222 = !DILocation(line: 1919, column: 25, scope: !14196)
!14223 = !DILocalVariable(name: "ops", scope: !14196, file: !3, line: 1920, type: !4818)
!14224 = !DILocation(line: 1920, column: 20, scope: !14196)
!14225 = !DILocation(line: 1920, column: 26, scope: !14196)
!14226 = !DILocation(line: 1920, column: 32, scope: !14196)
!14227 = !DILocalVariable(name: "b", scope: !14196, file: !3, line: 1921, type: !10483)
!14228 = !DILocation(line: 1921, column: 8, scope: !14196)
!14229 = !DILocation(line: 1923, column: 6, scope: !14230)
!14230 = distinct !DILexicalBlock(scope: !14196, file: !3, line: 1923, column: 6)
!14231 = !DILocation(line: 1923, column: 11, scope: !14230)
!14232 = !DILocation(line: 1923, column: 9, scope: !14230)
!14233 = !DILocation(line: 1923, column: 19, scope: !14230)
!14234 = !DILocation(line: 1923, column: 22, scope: !14230)
!14235 = !DILocation(line: 1923, column: 27, scope: !14230)
!14236 = !DILocation(line: 1923, column: 25, scope: !14230)
!14237 = !DILocation(line: 1923, column: 36, scope: !14230)
!14238 = !DILocation(line: 1923, column: 34, scope: !14230)
!14239 = !DILocation(line: 1923, column: 6, scope: !14196)
!14240 = !DILocation(line: 1924, column: 7, scope: !14241)
!14241 = distinct !DILexicalBlock(scope: !14230, file: !3, line: 1923, column: 45)
!14242 = !DILocation(line: 1924, column: 17, scope: !14241)
!14243 = !DILocation(line: 1924, column: 15, scope: !14241)
!14244 = !DILocation(line: 1924, column: 5, scope: !14241)
!14245 = !DILocation(line: 1925, column: 7, scope: !14246)
!14246 = distinct !DILexicalBlock(scope: !14241, file: !3, line: 1925, column: 7)
!14247 = !DILocation(line: 1925, column: 12, scope: !14246)
!14248 = !DILocation(line: 1925, column: 10, scope: !14246)
!14249 = !DILocation(line: 1925, column: 7, scope: !14241)
!14250 = !DILocation(line: 1926, column: 20, scope: !14251)
!14251 = distinct !DILexicalBlock(scope: !14246, file: !3, line: 1925, column: 16)
!14252 = !DILocation(line: 1926, column: 24, scope: !14251)
!14253 = !DILocation(line: 1926, column: 27, scope: !14251)
!14254 = !DILocation(line: 1926, column: 31, scope: !14251)
!14255 = !DILocation(line: 1926, column: 35, scope: !14251)
!14256 = !DILocation(line: 1926, column: 39, scope: !14251)
!14257 = !DILocation(line: 1926, column: 43, scope: !14251)
!14258 = !DILocation(line: 1926, column: 46, scope: !14251)
!14259 = !DILocation(line: 1927, column: 6, scope: !14251)
!14260 = !DILocation(line: 1926, column: 4, scope: !14251)
!14261 = !DILocation(line: 1928, column: 20, scope: !14251)
!14262 = !DILocation(line: 1928, column: 24, scope: !14251)
!14263 = !DILocation(line: 1928, column: 27, scope: !14251)
!14264 = !DILocation(line: 1928, column: 32, scope: !14251)
!14265 = !DILocation(line: 1928, column: 30, scope: !14251)
!14266 = !DILocation(line: 1928, column: 35, scope: !14251)
!14267 = !DILocation(line: 1928, column: 39, scope: !14251)
!14268 = !DILocation(line: 1928, column: 44, scope: !14251)
!14269 = !DILocation(line: 1928, column: 42, scope: !14251)
!14270 = !DILocation(line: 1928, column: 47, scope: !14251)
!14271 = !DILocation(line: 1929, column: 6, scope: !14251)
!14272 = !DILocation(line: 1929, column: 15, scope: !14251)
!14273 = !DILocation(line: 1929, column: 13, scope: !14251)
!14274 = !DILocation(line: 1929, column: 18, scope: !14251)
!14275 = !DILocation(line: 1929, column: 25, scope: !14251)
!14276 = !DILocation(line: 1928, column: 4, scope: !14251)
!14277 = !DILocation(line: 1930, column: 3, scope: !14251)
!14278 = !DILocation(line: 1931, column: 20, scope: !14279)
!14279 = distinct !DILexicalBlock(scope: !14246, file: !3, line: 1930, column: 10)
!14280 = !DILocation(line: 1931, column: 24, scope: !14279)
!14281 = !DILocation(line: 1931, column: 27, scope: !14279)
!14282 = !DILocation(line: 1931, column: 32, scope: !14279)
!14283 = !DILocation(line: 1931, column: 30, scope: !14279)
!14284 = !DILocation(line: 1931, column: 35, scope: !14279)
!14285 = !DILocation(line: 1931, column: 39, scope: !14279)
!14286 = !DILocation(line: 1931, column: 44, scope: !14279)
!14287 = !DILocation(line: 1931, column: 42, scope: !14279)
!14288 = !DILocation(line: 1931, column: 47, scope: !14279)
!14289 = !DILocation(line: 1932, column: 6, scope: !14279)
!14290 = !DILocation(line: 1932, column: 15, scope: !14279)
!14291 = !DILocation(line: 1932, column: 13, scope: !14279)
!14292 = !DILocation(line: 1932, column: 18, scope: !14279)
!14293 = !DILocation(line: 1932, column: 25, scope: !14279)
!14294 = !DILocation(line: 1931, column: 4, scope: !14279)
!14295 = !DILocation(line: 1933, column: 20, scope: !14279)
!14296 = !DILocation(line: 1933, column: 24, scope: !14279)
!14297 = !DILocation(line: 1933, column: 27, scope: !14279)
!14298 = !DILocation(line: 1933, column: 31, scope: !14279)
!14299 = !DILocation(line: 1933, column: 35, scope: !14279)
!14300 = !DILocation(line: 1933, column: 39, scope: !14279)
!14301 = !DILocation(line: 1933, column: 43, scope: !14279)
!14302 = !DILocation(line: 1933, column: 46, scope: !14279)
!14303 = !DILocation(line: 1934, column: 6, scope: !14279)
!14304 = !DILocation(line: 1933, column: 4, scope: !14279)
!14305 = !DILocation(line: 1936, column: 3, scope: !14241)
!14306 = !DILocation(line: 1939, column: 6, scope: !14307)
!14307 = distinct !DILexicalBlock(scope: !14196, file: !3, line: 1939, column: 6)
!14308 = !DILocation(line: 1939, column: 11, scope: !14307)
!14309 = !DILocation(line: 1939, column: 9, scope: !14307)
!14310 = !DILocation(line: 1939, column: 19, scope: !14307)
!14311 = !DILocation(line: 1939, column: 22, scope: !14307)
!14312 = !DILocation(line: 1939, column: 27, scope: !14307)
!14313 = !DILocation(line: 1939, column: 25, scope: !14307)
!14314 = !DILocation(line: 1939, column: 36, scope: !14307)
!14315 = !DILocation(line: 1939, column: 34, scope: !14307)
!14316 = !DILocation(line: 1939, column: 6, scope: !14196)
!14317 = !DILocation(line: 1940, column: 7, scope: !14318)
!14318 = distinct !DILexicalBlock(scope: !14307, file: !3, line: 1939, column: 45)
!14319 = !DILocation(line: 1940, column: 17, scope: !14318)
!14320 = !DILocation(line: 1940, column: 15, scope: !14318)
!14321 = !DILocation(line: 1940, column: 5, scope: !14318)
!14322 = !DILocation(line: 1941, column: 7, scope: !14323)
!14323 = distinct !DILexicalBlock(scope: !14318, file: !3, line: 1941, column: 7)
!14324 = !DILocation(line: 1941, column: 12, scope: !14323)
!14325 = !DILocation(line: 1941, column: 10, scope: !14323)
!14326 = !DILocation(line: 1941, column: 7, scope: !14318)
!14327 = !DILocation(line: 1942, column: 20, scope: !14328)
!14328 = distinct !DILexicalBlock(scope: !14323, file: !3, line: 1941, column: 16)
!14329 = !DILocation(line: 1942, column: 24, scope: !14328)
!14330 = !DILocation(line: 1942, column: 27, scope: !14328)
!14331 = !DILocation(line: 1942, column: 31, scope: !14328)
!14332 = !DILocation(line: 1942, column: 35, scope: !14328)
!14333 = !DILocation(line: 1942, column: 39, scope: !14328)
!14334 = !DILocation(line: 1942, column: 43, scope: !14328)
!14335 = !DILocation(line: 1942, column: 46, scope: !14328)
!14336 = !DILocation(line: 1943, column: 6, scope: !14328)
!14337 = !DILocation(line: 1942, column: 4, scope: !14328)
!14338 = !DILocation(line: 1944, column: 20, scope: !14328)
!14339 = !DILocation(line: 1944, column: 24, scope: !14328)
!14340 = !DILocation(line: 1944, column: 27, scope: !14328)
!14341 = !DILocation(line: 1944, column: 32, scope: !14328)
!14342 = !DILocation(line: 1944, column: 30, scope: !14328)
!14343 = !DILocation(line: 1944, column: 35, scope: !14328)
!14344 = !DILocation(line: 1944, column: 39, scope: !14328)
!14345 = !DILocation(line: 1944, column: 44, scope: !14328)
!14346 = !DILocation(line: 1944, column: 42, scope: !14328)
!14347 = !DILocation(line: 1944, column: 47, scope: !14328)
!14348 = !DILocation(line: 1945, column: 6, scope: !14328)
!14349 = !DILocation(line: 1945, column: 15, scope: !14328)
!14350 = !DILocation(line: 1945, column: 13, scope: !14328)
!14351 = !DILocation(line: 1945, column: 18, scope: !14328)
!14352 = !DILocation(line: 1945, column: 25, scope: !14328)
!14353 = !DILocation(line: 1944, column: 4, scope: !14328)
!14354 = !DILocation(line: 1946, column: 3, scope: !14328)
!14355 = !DILocation(line: 1947, column: 20, scope: !14356)
!14356 = distinct !DILexicalBlock(scope: !14323, file: !3, line: 1946, column: 10)
!14357 = !DILocation(line: 1947, column: 24, scope: !14356)
!14358 = !DILocation(line: 1947, column: 27, scope: !14356)
!14359 = !DILocation(line: 1947, column: 32, scope: !14356)
!14360 = !DILocation(line: 1947, column: 30, scope: !14356)
!14361 = !DILocation(line: 1947, column: 35, scope: !14356)
!14362 = !DILocation(line: 1947, column: 39, scope: !14356)
!14363 = !DILocation(line: 1947, column: 44, scope: !14356)
!14364 = !DILocation(line: 1947, column: 42, scope: !14356)
!14365 = !DILocation(line: 1947, column: 47, scope: !14356)
!14366 = !DILocation(line: 1948, column: 6, scope: !14356)
!14367 = !DILocation(line: 1948, column: 15, scope: !14356)
!14368 = !DILocation(line: 1948, column: 13, scope: !14356)
!14369 = !DILocation(line: 1948, column: 18, scope: !14356)
!14370 = !DILocation(line: 1948, column: 25, scope: !14356)
!14371 = !DILocation(line: 1947, column: 4, scope: !14356)
!14372 = !DILocation(line: 1949, column: 20, scope: !14356)
!14373 = !DILocation(line: 1949, column: 24, scope: !14356)
!14374 = !DILocation(line: 1949, column: 27, scope: !14356)
!14375 = !DILocation(line: 1949, column: 31, scope: !14356)
!14376 = !DILocation(line: 1949, column: 35, scope: !14356)
!14377 = !DILocation(line: 1949, column: 39, scope: !14356)
!14378 = !DILocation(line: 1949, column: 43, scope: !14356)
!14379 = !DILocation(line: 1949, column: 46, scope: !14356)
!14380 = !DILocation(line: 1950, column: 6, scope: !14356)
!14381 = !DILocation(line: 1949, column: 4, scope: !14356)
!14382 = !DILocation(line: 1952, column: 3, scope: !14318)
!14383 = !DILocation(line: 1954, column: 2, scope: !14196)
!14384 = !DILocation(line: 1954, column: 7, scope: !14196)
!14385 = !DILocation(line: 1954, column: 13, scope: !14196)
!14386 = !DILocation(line: 1954, column: 17, scope: !14196)
!14387 = !DILocation(line: 1954, column: 30, scope: !14196)
!14388 = !DILocation(line: 1954, column: 33, scope: !14196)
!14389 = !DILocation(line: 1954, column: 23, scope: !14196)
!14390 = !DILocation(line: 1954, column: 38, scope: !14196)
!14391 = !DILocation(line: 1954, column: 49, scope: !14196)
!14392 = !DILocation(line: 1954, column: 52, scope: !14196)
!14393 = !DILocation(line: 1954, column: 42, scope: !14196)
!14394 = !DILocation(line: 1954, column: 57, scope: !14196)
!14395 = !DILocation(line: 1955, column: 6, scope: !14196)
!14396 = !DILocation(line: 1955, column: 14, scope: !14196)
!14397 = !DILocation(line: 1956, column: 1, scope: !14196)
!14398 = distinct !DISubprogram(name: "fbcon_generic_blank", scope: !3, file: !3, line: 2203, type: !14399, scopeLine: 2205, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !241)
!14399 = !DISubroutineType(types: !14400)
!14400 = !{null, !4826, !199, !170}
!14401 = !DILocalVariable(name: "vc", arg: 1, scope: !14398, file: !3, line: 2203, type: !4826)
!14402 = !DILocation(line: 2203, column: 49, scope: !14398)
!14403 = !DILocalVariable(name: "info", arg: 2, scope: !14398, file: !3, line: 2203, type: !199)
!14404 = !DILocation(line: 2203, column: 69, scope: !14398)
!14405 = !DILocalVariable(name: "blank", arg: 3, scope: !14398, file: !3, line: 2204, type: !170)
!14406 = !DILocation(line: 2204, column: 9, scope: !14398)
!14407 = !DILocation(line: 2206, column: 6, scope: !14408)
!14408 = distinct !DILexicalBlock(scope: !14398, file: !3, line: 2206, column: 6)
!14409 = !DILocation(line: 2206, column: 6, scope: !14398)
!14410 = !DILocalVariable(name: "charmask", scope: !14411, file: !3, line: 2207, type: !198)
!14411 = distinct !DILexicalBlock(scope: !14408, file: !3, line: 2206, column: 13)
!14412 = !DILocation(line: 2207, column: 18, scope: !14411)
!14413 = !DILocation(line: 2207, column: 29, scope: !14411)
!14414 = !DILocation(line: 2207, column: 33, scope: !14411)
!14415 = !DILocalVariable(name: "oldc", scope: !14411, file: !3, line: 2209, type: !198)
!14416 = !DILocation(line: 2209, column: 18, scope: !14411)
!14417 = !DILocation(line: 2211, column: 10, scope: !14411)
!14418 = !DILocation(line: 2211, column: 14, scope: !14411)
!14419 = !DILocation(line: 2211, column: 8, scope: !14411)
!14420 = !DILocation(line: 2212, column: 30, scope: !14411)
!14421 = !DILocation(line: 2212, column: 3, scope: !14411)
!14422 = !DILocation(line: 2212, column: 7, scope: !14411)
!14423 = !DILocation(line: 2212, column: 27, scope: !14411)
!14424 = !DILocation(line: 2213, column: 15, scope: !14411)
!14425 = !DILocation(line: 2213, column: 25, scope: !14411)
!14426 = !DILocation(line: 2213, column: 29, scope: !14411)
!14427 = !DILocation(line: 2213, column: 38, scope: !14411)
!14428 = !DILocation(line: 2213, column: 42, scope: !14411)
!14429 = !DILocation(line: 2213, column: 3, scope: !14411)
!14430 = !DILocation(line: 2214, column: 29, scope: !14411)
!14431 = !DILocation(line: 2214, column: 3, scope: !14411)
!14432 = !DILocation(line: 2214, column: 7, scope: !14411)
!14433 = !DILocation(line: 2214, column: 27, scope: !14411)
!14434 = !DILocation(line: 2215, column: 2, scope: !14411)
!14435 = !DILocation(line: 2216, column: 1, scope: !14398)
!14436 = distinct !DISubprogram(name: "fbcon_invalid_charcount", scope: !3, file: !3, line: 686, type: !14437, scopeLine: 687, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !241)
!14437 = !DISubroutineType(types: !14438)
!14438 = !{!170, !199, !7}
!14439 = !DILocalVariable(name: "info", arg: 1, scope: !14436, file: !3, line: 686, type: !199)
!14440 = !DILocation(line: 686, column: 52, scope: !14436)
!14441 = !DILocalVariable(name: "charcount", arg: 2, scope: !14436, file: !3, line: 686, type: !7)
!14442 = !DILocation(line: 686, column: 67, scope: !14436)
!14443 = !DILocalVariable(name: "err", scope: !14436, file: !3, line: 688, type: !170)
!14444 = !DILocation(line: 688, column: 6, scope: !14436)
!14445 = !DILocation(line: 690, column: 6, scope: !14446)
!14446 = distinct !DILexicalBlock(scope: !14436, file: !3, line: 690, column: 6)
!14447 = !DILocation(line: 690, column: 12, scope: !14446)
!14448 = !DILocation(line: 690, column: 18, scope: !14446)
!14449 = !DILocation(line: 690, column: 45, scope: !14446)
!14450 = !DILocation(line: 691, column: 6, scope: !14446)
!14451 = !DILocation(line: 691, column: 12, scope: !14446)
!14452 = !DILocation(line: 691, column: 21, scope: !14446)
!14453 = !DILocation(line: 691, column: 36, scope: !14446)
!14454 = !DILocation(line: 691, column: 44, scope: !14446)
!14455 = !DILocation(line: 691, column: 42, scope: !14446)
!14456 = !DILocation(line: 690, column: 6, scope: !14436)
!14457 = !DILocation(line: 692, column: 7, scope: !14446)
!14458 = !DILocation(line: 692, column: 3, scope: !14446)
!14459 = !DILocation(line: 694, column: 9, scope: !14436)
!14460 = !DILocation(line: 694, column: 2, scope: !14436)
!14461 = distinct !DISubprogram(name: "fbcon_do_set_font", scope: !3, file: !3, line: 2408, type: !14462, scopeLine: 2410, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !241)
!14462 = !DISubroutineType(types: !14463)
!14463 = !{!170, !4826, !170, !170, !14464, !170}
!14464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14465, size: 64)
!14465 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !398)
!14466 = !DILocalVariable(name: "vc", arg: 1, scope: !14461, file: !3, line: 2408, type: !4826)
!14467 = !DILocation(line: 2408, column: 46, scope: !14461)
!14468 = !DILocalVariable(name: "w", arg: 2, scope: !14461, file: !3, line: 2408, type: !170)
!14469 = !DILocation(line: 2408, column: 54, scope: !14461)
!14470 = !DILocalVariable(name: "h", arg: 3, scope: !14461, file: !3, line: 2408, type: !170)
!14471 = !DILocation(line: 2408, column: 61, scope: !14461)
!14472 = !DILocalVariable(name: "data", arg: 4, scope: !14461, file: !3, line: 2409, type: !14464)
!14473 = !DILocation(line: 2409, column: 20, scope: !14461)
!14474 = !DILocalVariable(name: "userfont", arg: 5, scope: !14461, file: !3, line: 2409, type: !170)
!14475 = !DILocation(line: 2409, column: 30, scope: !14461)
!14476 = !DILocalVariable(name: "info", scope: !14461, file: !3, line: 2411, type: !199)
!14477 = !DILocation(line: 2411, column: 18, scope: !14461)
!14478 = !DILocation(line: 2411, column: 50, scope: !14461)
!14479 = !DILocation(line: 2411, column: 54, scope: !14461)
!14480 = !DILocation(line: 2411, column: 39, scope: !14461)
!14481 = !DILocation(line: 2411, column: 25, scope: !14461)
!14482 = !DILocalVariable(name: "ops", scope: !14461, file: !3, line: 2412, type: !4818)
!14483 = !DILocation(line: 2412, column: 20, scope: !14461)
!14484 = !DILocation(line: 2412, column: 26, scope: !14461)
!14485 = !DILocation(line: 2412, column: 32, scope: !14461)
!14486 = !DILocalVariable(name: "p", scope: !14461, file: !3, line: 2413, type: !5048)
!14487 = !DILocation(line: 2413, column: 24, scope: !14461)
!14488 = !DILocation(line: 2413, column: 40, scope: !14461)
!14489 = !DILocation(line: 2413, column: 44, scope: !14461)
!14490 = !DILocation(line: 2413, column: 29, scope: !14461)
!14491 = !DILocalVariable(name: "resize", scope: !14461, file: !3, line: 2414, type: !170)
!14492 = !DILocation(line: 2414, column: 6, scope: !14461)
!14493 = !DILocalVariable(name: "cnt", scope: !14461, file: !3, line: 2415, type: !170)
!14494 = !DILocation(line: 2415, column: 6, scope: !14461)
!14495 = !DILocalVariable(name: "old_data", scope: !14461, file: !3, line: 2416, type: !512)
!14496 = !DILocation(line: 2416, column: 8, scope: !14461)
!14497 = !DILocation(line: 2418, column: 12, scope: !14461)
!14498 = !DILocation(line: 2418, column: 17, scope: !14461)
!14499 = !DILocation(line: 2418, column: 21, scope: !14461)
!14500 = !DILocation(line: 2418, column: 29, scope: !14461)
!14501 = !DILocation(line: 2418, column: 14, scope: !14461)
!14502 = !DILocation(line: 2418, column: 36, scope: !14461)
!14503 = !DILocation(line: 2418, column: 40, scope: !14461)
!14504 = !DILocation(line: 2418, column: 45, scope: !14461)
!14505 = !DILocation(line: 2418, column: 49, scope: !14461)
!14506 = !DILocation(line: 2418, column: 57, scope: !14461)
!14507 = !DILocation(line: 2418, column: 42, scope: !14461)
!14508 = !DILocation(line: 2418, column: 9, scope: !14461)
!14509 = !DILocation(line: 2419, column: 6, scope: !14510)
!14510 = distinct !DILexicalBlock(scope: !14461, file: !3, line: 2419, column: 6)
!14511 = !DILocation(line: 2419, column: 9, scope: !14510)
!14512 = !DILocation(line: 2419, column: 6, scope: !14461)
!14513 = !DILocation(line: 2420, column: 14, scope: !14510)
!14514 = !DILocation(line: 2420, column: 18, scope: !14510)
!14515 = !DILocation(line: 2420, column: 26, scope: !14510)
!14516 = !DILocation(line: 2420, column: 12, scope: !14510)
!14517 = !DILocation(line: 2420, column: 3, scope: !14510)
!14518 = !DILocation(line: 2421, column: 6, scope: !14519)
!14519 = distinct !DILexicalBlock(scope: !14461, file: !3, line: 2421, column: 6)
!14520 = !DILocation(line: 2421, column: 6, scope: !14461)
!14521 = !DILocation(line: 2422, column: 9, scope: !14519)
!14522 = !DILocation(line: 2422, column: 7, scope: !14519)
!14523 = !DILocation(line: 2422, column: 3, scope: !14519)
!14524 = !DILocation(line: 2424, column: 7, scope: !14519)
!14525 = !DILocation(line: 2425, column: 44, scope: !14461)
!14526 = !DILocation(line: 2425, column: 30, scope: !14461)
!14527 = !DILocation(line: 2425, column: 33, scope: !14461)
!14528 = !DILocation(line: 2425, column: 42, scope: !14461)
!14529 = !DILocation(line: 2425, column: 2, scope: !14461)
!14530 = !DILocation(line: 2425, column: 6, scope: !14461)
!14531 = !DILocation(line: 2425, column: 14, scope: !14461)
!14532 = !DILocation(line: 2425, column: 19, scope: !14461)
!14533 = !DILocation(line: 2426, column: 21, scope: !14534)
!14534 = distinct !DILexicalBlock(scope: !14461, file: !3, line: 2426, column: 6)
!14535 = !DILocation(line: 2426, column: 7, scope: !14534)
!14536 = !DILocation(line: 2426, column: 10, scope: !14534)
!14537 = !DILocation(line: 2426, column: 19, scope: !14534)
!14538 = !DILocation(line: 2426, column: 6, scope: !14461)
!14539 = !DILocation(line: 2427, column: 3, scope: !14534)
!14540 = !DILocation(line: 2427, column: 17, scope: !14534)
!14541 = !DILocation(line: 2428, column: 22, scope: !14461)
!14542 = !DILocation(line: 2428, column: 2, scope: !14461)
!14543 = !DILocation(line: 2428, column: 6, scope: !14461)
!14544 = !DILocation(line: 2428, column: 14, scope: !14461)
!14545 = !DILocation(line: 2428, column: 20, scope: !14461)
!14546 = !DILocation(line: 2429, column: 23, scope: !14461)
!14547 = !DILocation(line: 2429, column: 2, scope: !14461)
!14548 = !DILocation(line: 2429, column: 6, scope: !14461)
!14549 = !DILocation(line: 2429, column: 14, scope: !14461)
!14550 = !DILocation(line: 2429, column: 21, scope: !14461)
!14551 = !DILocation(line: 2430, column: 6, scope: !14552)
!14552 = distinct !DILexicalBlock(scope: !14461, file: !3, line: 2430, column: 6)
!14553 = !DILocation(line: 2430, column: 10, scope: !14552)
!14554 = !DILocation(line: 2430, column: 26, scope: !14552)
!14555 = !DILocation(line: 2430, column: 29, scope: !14552)
!14556 = !DILocation(line: 2430, column: 33, scope: !14552)
!14557 = !DILocation(line: 2430, column: 6, scope: !14461)
!14558 = !DILocation(line: 2431, column: 18, scope: !14552)
!14559 = !DILocation(line: 2431, column: 3, scope: !14552)
!14560 = !DILocation(line: 2432, column: 12, scope: !14561)
!14561 = distinct !DILexicalBlock(scope: !14552, file: !3, line: 2432, column: 11)
!14562 = !DILocation(line: 2432, column: 16, scope: !14561)
!14563 = !DILocation(line: 2432, column: 32, scope: !14561)
!14564 = !DILocation(line: 2432, column: 35, scope: !14561)
!14565 = !DILocation(line: 2432, column: 39, scope: !14561)
!14566 = !DILocation(line: 2432, column: 11, scope: !14552)
!14567 = !DILocation(line: 2433, column: 18, scope: !14561)
!14568 = !DILocation(line: 2433, column: 3, scope: !14561)
!14569 = !DILocation(line: 2435, column: 6, scope: !14570)
!14570 = distinct !DILexicalBlock(scope: !14461, file: !3, line: 2435, column: 6)
!14571 = !DILocation(line: 2435, column: 6, scope: !14461)
!14572 = !DILocalVariable(name: "cols", scope: !14573, file: !3, line: 2436, type: !170)
!14573 = distinct !DILexicalBlock(scope: !14570, file: !3, line: 2435, column: 14)
!14574 = !DILocation(line: 2436, column: 7, scope: !14573)
!14575 = !DILocalVariable(name: "rows", scope: !14573, file: !3, line: 2436, type: !170)
!14576 = !DILocation(line: 2436, column: 13, scope: !14573)
!14577 = !DILocalVariable(name: "_r", scope: !14578, file: !3, line: 2438, type: !253)
!14578 = distinct !DILexicalBlock(scope: !14573, file: !3, line: 2438, column: 10)
!14579 = !DILocation(line: 2438, column: 10, scope: !14578)
!14580 = !DILocalVariable(name: "_v", scope: !14578, file: !3, line: 2438, type: !253)
!14581 = !DILocation(line: 2438, column: 8, scope: !14573)
!14582 = !DILocalVariable(name: "_r", scope: !14583, file: !3, line: 2439, type: !253)
!14583 = distinct !DILexicalBlock(scope: !14573, file: !3, line: 2439, column: 10)
!14584 = !DILocation(line: 2439, column: 10, scope: !14583)
!14585 = !DILocalVariable(name: "_v", scope: !14583, file: !3, line: 2439, type: !253)
!14586 = !DILocation(line: 2439, column: 8, scope: !14573)
!14587 = !DILocation(line: 2440, column: 11, scope: !14573)
!14588 = !DILocation(line: 2440, column: 8, scope: !14573)
!14589 = !DILocation(line: 2441, column: 11, scope: !14573)
!14590 = !DILocation(line: 2441, column: 8, scope: !14573)
!14591 = !DILocation(line: 2442, column: 13, scope: !14573)
!14592 = !DILocation(line: 2442, column: 17, scope: !14573)
!14593 = !DILocation(line: 2442, column: 23, scope: !14573)
!14594 = !DILocation(line: 2442, column: 3, scope: !14573)
!14595 = !DILocation(line: 2443, column: 2, scope: !14573)
!14596 = !DILocation(line: 2443, column: 28, scope: !14597)
!14597 = distinct !DILexicalBlock(scope: !14570, file: !3, line: 2443, column: 13)
!14598 = !DILocation(line: 2443, column: 13, scope: !14597)
!14599 = !DILocation(line: 2444, column: 6, scope: !14597)
!14600 = !DILocation(line: 2444, column: 9, scope: !14597)
!14601 = !DILocation(line: 2444, column: 13, scope: !14597)
!14602 = !DILocation(line: 2444, column: 21, scope: !14597)
!14603 = !DILocation(line: 2443, column: 13, scope: !14570)
!14604 = !DILocation(line: 2445, column: 23, scope: !14605)
!14605 = distinct !DILexicalBlock(scope: !14597, file: !3, line: 2444, column: 33)
!14606 = !DILocation(line: 2445, column: 3, scope: !14605)
!14607 = !DILocation(line: 2446, column: 3, scope: !14605)
!14608 = !DILocation(line: 2447, column: 2, scope: !14605)
!14609 = !DILocation(line: 2449, column: 6, scope: !14610)
!14610 = distinct !DILexicalBlock(scope: !14461, file: !3, line: 2449, column: 6)
!14611 = !DILocation(line: 2449, column: 15, scope: !14610)
!14612 = !DILocation(line: 2449, column: 21, scope: !14610)
!14613 = !DILocation(line: 2449, column: 19, scope: !14610)
!14614 = !DILocation(line: 2449, column: 40, scope: !14610)
!14615 = !DILocation(line: 2449, column: 6, scope: !14461)
!14616 = !DILocation(line: 2450, column: 9, scope: !14610)
!14617 = !DILocation(line: 2450, column: 18, scope: !14610)
!14618 = !DILocation(line: 2450, column: 3, scope: !14610)
!14619 = !DILocation(line: 2451, column: 2, scope: !14461)
!14620 = distinct !DISubprogram(name: "show_rotate", scope: !3, file: !3, line: 3168, type: !5180, scopeLine: 3170, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !241)
!14621 = !DILocalVariable(name: "device", arg: 1, scope: !14620, file: !3, line: 3168, type: !2112)
!14622 = !DILocation(line: 3168, column: 43, scope: !14620)
!14623 = !DILocalVariable(name: "attr", arg: 2, scope: !14620, file: !3, line: 3169, type: !5182)
!14624 = !DILocation(line: 3169, column: 32, scope: !14620)
!14625 = !DILocalVariable(name: "buf", arg: 3, scope: !14620, file: !3, line: 3169, type: !512)
!14626 = !DILocation(line: 3169, column: 43, scope: !14620)
!14627 = !DILocalVariable(name: "info", scope: !14620, file: !3, line: 3171, type: !199)
!14628 = !DILocation(line: 3171, column: 18, scope: !14620)
!14629 = !DILocalVariable(name: "rotate", scope: !14620, file: !3, line: 3172, type: !170)
!14630 = !DILocation(line: 3172, column: 6, scope: !14620)
!14631 = !DILocalVariable(name: "idx", scope: !14620, file: !3, line: 3172, type: !170)
!14632 = !DILocation(line: 3172, column: 18, scope: !14620)
!14633 = !DILocation(line: 3174, column: 2, scope: !14620)
!14634 = !DILocation(line: 3175, column: 19, scope: !14620)
!14635 = !DILocation(line: 3175, column: 8, scope: !14620)
!14636 = !DILocation(line: 3175, column: 6, scope: !14620)
!14637 = !DILocation(line: 3177, column: 6, scope: !14638)
!14638 = distinct !DILexicalBlock(scope: !14620, file: !3, line: 3177, column: 6)
!14639 = !DILocation(line: 3177, column: 10, scope: !14638)
!14640 = !DILocation(line: 3177, column: 16, scope: !14638)
!14641 = !DILocation(line: 3177, column: 33, scope: !14638)
!14642 = !DILocation(line: 3177, column: 19, scope: !14638)
!14643 = !DILocation(line: 3177, column: 38, scope: !14638)
!14644 = !DILocation(line: 3177, column: 6, scope: !14620)
!14645 = !DILocation(line: 3178, column: 3, scope: !14638)
!14646 = !DILocation(line: 3180, column: 23, scope: !14620)
!14647 = !DILocation(line: 3180, column: 9, scope: !14620)
!14648 = !DILocation(line: 3180, column: 7, scope: !14620)
!14649 = !DILocation(line: 3181, column: 28, scope: !14620)
!14650 = !DILocation(line: 3181, column: 11, scope: !14620)
!14651 = !DILocation(line: 3181, column: 9, scope: !14620)
!14652 = !DILocation(line: 3181, column: 2, scope: !14620)
!14653 = !DILabel(scope: !14620, name: "err", file: !3, line: 3182)
!14654 = !DILocation(line: 3182, column: 1, scope: !14620)
!14655 = !DILocation(line: 3183, column: 2, scope: !14620)
!14656 = !DILocation(line: 3184, column: 18, scope: !14620)
!14657 = !DILocation(line: 3184, column: 42, scope: !14620)
!14658 = !DILocation(line: 3184, column: 9, scope: !14620)
!14659 = !DILocation(line: 3184, column: 2, scope: !14620)
!14660 = distinct !DISubprogram(name: "store_rotate", scope: !3, file: !3, line: 3124, type: !5185, scopeLine: 3127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !241)
!14661 = !DILocalVariable(name: "device", arg: 1, scope: !14660, file: !3, line: 3124, type: !2112)
!14662 = !DILocation(line: 3124, column: 44, scope: !14660)
!14663 = !DILocalVariable(name: "attr", arg: 2, scope: !14660, file: !3, line: 3125, type: !5182)
!14664 = !DILocation(line: 3125, column: 33, scope: !14660)
!14665 = !DILocalVariable(name: "buf", arg: 3, scope: !14660, file: !3, line: 3125, type: !335)
!14666 = !DILocation(line: 3125, column: 51, scope: !14660)
!14667 = !DILocalVariable(name: "count", arg: 4, scope: !14660, file: !3, line: 3126, type: !557)
!14668 = !DILocation(line: 3126, column: 15, scope: !14660)
!14669 = !DILocalVariable(name: "info", scope: !14660, file: !3, line: 3128, type: !199)
!14670 = !DILocation(line: 3128, column: 18, scope: !14660)
!14671 = !DILocalVariable(name: "rotate", scope: !14660, file: !3, line: 3129, type: !170)
!14672 = !DILocation(line: 3129, column: 6, scope: !14660)
!14673 = !DILocalVariable(name: "idx", scope: !14660, file: !3, line: 3129, type: !170)
!14674 = !DILocation(line: 3129, column: 14, scope: !14660)
!14675 = !DILocalVariable(name: "last", scope: !14660, file: !3, line: 3130, type: !14676)
!14676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !512, size: 64)
!14677 = !DILocation(line: 3130, column: 9, scope: !14660)
!14678 = !DILocation(line: 3132, column: 2, scope: !14660)
!14679 = !DILocation(line: 3133, column: 19, scope: !14660)
!14680 = !DILocation(line: 3133, column: 8, scope: !14660)
!14681 = !DILocation(line: 3133, column: 6, scope: !14660)
!14682 = !DILocation(line: 3135, column: 6, scope: !14683)
!14683 = distinct !DILexicalBlock(scope: !14660, file: !3, line: 3135, column: 6)
!14684 = !DILocation(line: 3135, column: 10, scope: !14683)
!14685 = !DILocation(line: 3135, column: 16, scope: !14683)
!14686 = !DILocation(line: 3135, column: 33, scope: !14683)
!14687 = !DILocation(line: 3135, column: 19, scope: !14683)
!14688 = !DILocation(line: 3135, column: 38, scope: !14683)
!14689 = !DILocation(line: 3135, column: 6, scope: !14660)
!14690 = !DILocation(line: 3136, column: 3, scope: !14683)
!14691 = !DILocation(line: 3138, column: 23, scope: !14660)
!14692 = !DILocation(line: 3138, column: 9, scope: !14660)
!14693 = !DILocation(line: 3138, column: 7, scope: !14660)
!14694 = !DILocation(line: 3139, column: 26, scope: !14660)
!14695 = !DILocation(line: 3139, column: 31, scope: !14660)
!14696 = !DILocation(line: 3139, column: 11, scope: !14660)
!14697 = !DILocation(line: 3139, column: 9, scope: !14660)
!14698 = !DILocation(line: 3140, column: 15, scope: !14660)
!14699 = !DILocation(line: 3140, column: 21, scope: !14660)
!14700 = !DILocation(line: 3140, column: 2, scope: !14660)
!14701 = !DILabel(scope: !14660, name: "err", file: !3, line: 3141)
!14702 = !DILocation(line: 3141, column: 1, scope: !14660)
!14703 = !DILocation(line: 3142, column: 2, scope: !14660)
!14704 = !DILocation(line: 3143, column: 9, scope: !14660)
!14705 = !DILocation(line: 3143, column: 2, scope: !14660)
!14706 = distinct !DISubprogram(name: "store_rotate_all", scope: !3, file: !3, line: 3146, type: !5185, scopeLine: 3149, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !241)
!14707 = !DILocalVariable(name: "device", arg: 1, scope: !14706, file: !3, line: 3146, type: !2112)
!14708 = !DILocation(line: 3146, column: 48, scope: !14706)
!14709 = !DILocalVariable(name: "attr", arg: 2, scope: !14706, file: !3, line: 3147, type: !5182)
!14710 = !DILocation(line: 3147, column: 30, scope: !14706)
!14711 = !DILocalVariable(name: "buf", arg: 3, scope: !14706, file: !3, line: 3147, type: !335)
!14712 = !DILocation(line: 3147, column: 47, scope: !14706)
!14713 = !DILocalVariable(name: "count", arg: 4, scope: !14706, file: !3, line: 3148, type: !557)
!14714 = !DILocation(line: 3148, column: 12, scope: !14706)
!14715 = !DILocalVariable(name: "info", scope: !14706, file: !3, line: 3150, type: !199)
!14716 = !DILocation(line: 3150, column: 18, scope: !14706)
!14717 = !DILocalVariable(name: "rotate", scope: !14706, file: !3, line: 3151, type: !170)
!14718 = !DILocation(line: 3151, column: 6, scope: !14706)
!14719 = !DILocalVariable(name: "idx", scope: !14706, file: !3, line: 3151, type: !170)
!14720 = !DILocation(line: 3151, column: 14, scope: !14706)
!14721 = !DILocalVariable(name: "last", scope: !14706, file: !3, line: 3152, type: !14676)
!14722 = !DILocation(line: 3152, column: 9, scope: !14706)
!14723 = !DILocation(line: 3154, column: 2, scope: !14706)
!14724 = !DILocation(line: 3155, column: 19, scope: !14706)
!14725 = !DILocation(line: 3155, column: 8, scope: !14706)
!14726 = !DILocation(line: 3155, column: 6, scope: !14706)
!14727 = !DILocation(line: 3157, column: 6, scope: !14728)
!14728 = distinct !DILexicalBlock(scope: !14706, file: !3, line: 3157, column: 6)
!14729 = !DILocation(line: 3157, column: 10, scope: !14728)
!14730 = !DILocation(line: 3157, column: 16, scope: !14728)
!14731 = !DILocation(line: 3157, column: 33, scope: !14728)
!14732 = !DILocation(line: 3157, column: 19, scope: !14728)
!14733 = !DILocation(line: 3157, column: 38, scope: !14728)
!14734 = !DILocation(line: 3157, column: 6, scope: !14706)
!14735 = !DILocation(line: 3158, column: 3, scope: !14728)
!14736 = !DILocation(line: 3160, column: 23, scope: !14706)
!14737 = !DILocation(line: 3160, column: 9, scope: !14706)
!14738 = !DILocation(line: 3160, column: 7, scope: !14706)
!14739 = !DILocation(line: 3161, column: 26, scope: !14706)
!14740 = !DILocation(line: 3161, column: 31, scope: !14706)
!14741 = !DILocation(line: 3161, column: 11, scope: !14706)
!14742 = !DILocation(line: 3161, column: 9, scope: !14706)
!14743 = !DILocation(line: 3162, column: 19, scope: !14706)
!14744 = !DILocation(line: 3162, column: 25, scope: !14706)
!14745 = !DILocation(line: 3162, column: 2, scope: !14706)
!14746 = !DILabel(scope: !14706, name: "err", file: !3, line: 3163)
!14747 = !DILocation(line: 3163, column: 1, scope: !14706)
!14748 = !DILocation(line: 3164, column: 2, scope: !14706)
!14749 = !DILocation(line: 3165, column: 9, scope: !14706)
!14750 = !DILocation(line: 3165, column: 2, scope: !14706)
!14751 = distinct !DISubprogram(name: "show_cursor_blink", scope: !3, file: !3, line: 3187, type: !5180, scopeLine: 3189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !241)
!14752 = !DILocalVariable(name: "device", arg: 1, scope: !14751, file: !3, line: 3187, type: !2112)
!14753 = !DILocation(line: 3187, column: 49, scope: !14751)
!14754 = !DILocalVariable(name: "attr", arg: 2, scope: !14751, file: !3, line: 3188, type: !5182)
!14755 = !DILocation(line: 3188, column: 31, scope: !14751)
!14756 = !DILocalVariable(name: "buf", arg: 3, scope: !14751, file: !3, line: 3188, type: !512)
!14757 = !DILocation(line: 3188, column: 43, scope: !14751)
!14758 = !DILocalVariable(name: "info", scope: !14751, file: !3, line: 3190, type: !199)
!14759 = !DILocation(line: 3190, column: 18, scope: !14751)
!14760 = !DILocalVariable(name: "ops", scope: !14751, file: !3, line: 3191, type: !4818)
!14761 = !DILocation(line: 3191, column: 20, scope: !14751)
!14762 = !DILocalVariable(name: "idx", scope: !14751, file: !3, line: 3192, type: !170)
!14763 = !DILocation(line: 3192, column: 6, scope: !14751)
!14764 = !DILocalVariable(name: "blink", scope: !14751, file: !3, line: 3192, type: !170)
!14765 = !DILocation(line: 3192, column: 11, scope: !14751)
!14766 = !DILocation(line: 3194, column: 2, scope: !14751)
!14767 = !DILocation(line: 3195, column: 19, scope: !14751)
!14768 = !DILocation(line: 3195, column: 8, scope: !14751)
!14769 = !DILocation(line: 3195, column: 6, scope: !14751)
!14770 = !DILocation(line: 3197, column: 6, scope: !14771)
!14771 = distinct !DILexicalBlock(scope: !14751, file: !3, line: 3197, column: 6)
!14772 = !DILocation(line: 3197, column: 10, scope: !14771)
!14773 = !DILocation(line: 3197, column: 16, scope: !14771)
!14774 = !DILocation(line: 3197, column: 33, scope: !14771)
!14775 = !DILocation(line: 3197, column: 19, scope: !14771)
!14776 = !DILocation(line: 3197, column: 38, scope: !14771)
!14777 = !DILocation(line: 3197, column: 6, scope: !14751)
!14778 = !DILocation(line: 3198, column: 3, scope: !14771)
!14779 = !DILocation(line: 3200, column: 23, scope: !14751)
!14780 = !DILocation(line: 3200, column: 9, scope: !14751)
!14781 = !DILocation(line: 3200, column: 7, scope: !14751)
!14782 = !DILocation(line: 3201, column: 8, scope: !14751)
!14783 = !DILocation(line: 3201, column: 14, scope: !14751)
!14784 = !DILocation(line: 3201, column: 6, scope: !14751)
!14785 = !DILocation(line: 3203, column: 7, scope: !14786)
!14786 = distinct !DILexicalBlock(scope: !14751, file: !3, line: 3203, column: 6)
!14787 = !DILocation(line: 3203, column: 6, scope: !14751)
!14788 = !DILocation(line: 3204, column: 3, scope: !14786)
!14789 = !DILocation(line: 3206, column: 11, scope: !14751)
!14790 = !DILocation(line: 3206, column: 16, scope: !14751)
!14791 = !DILocation(line: 3206, column: 22, scope: !14751)
!14792 = !DILocation(line: 3206, column: 10, scope: !14751)
!14793 = !DILocation(line: 3206, column: 8, scope: !14751)
!14794 = !DILocation(line: 3206, column: 2, scope: !14751)
!14795 = !DILabel(scope: !14751, name: "err", file: !3, line: 3207)
!14796 = !DILocation(line: 3207, column: 1, scope: !14751)
!14797 = !DILocation(line: 3208, column: 2, scope: !14751)
!14798 = !DILocation(line: 3209, column: 18, scope: !14751)
!14799 = !DILocation(line: 3209, column: 42, scope: !14751)
!14800 = !DILocation(line: 3209, column: 9, scope: !14751)
!14801 = !DILocation(line: 3209, column: 2, scope: !14751)
!14802 = distinct !DISubprogram(name: "store_cursor_blink", scope: !3, file: !3, line: 3212, type: !5185, scopeLine: 3215, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !241)
!14803 = !DILocalVariable(name: "device", arg: 1, scope: !14802, file: !3, line: 3212, type: !2112)
!14804 = !DILocation(line: 3212, column: 50, scope: !14802)
!14805 = !DILocalVariable(name: "attr", arg: 2, scope: !14802, file: !3, line: 3213, type: !5182)
!14806 = !DILocation(line: 3213, column: 32, scope: !14802)
!14807 = !DILocalVariable(name: "buf", arg: 3, scope: !14802, file: !3, line: 3214, type: !335)
!14808 = !DILocation(line: 3214, column: 19, scope: !14802)
!14809 = !DILocalVariable(name: "count", arg: 4, scope: !14802, file: !3, line: 3214, type: !557)
!14810 = !DILocation(line: 3214, column: 31, scope: !14802)
!14811 = !DILocalVariable(name: "info", scope: !14802, file: !3, line: 3216, type: !199)
!14812 = !DILocation(line: 3216, column: 18, scope: !14802)
!14813 = !DILocalVariable(name: "blink", scope: !14802, file: !3, line: 3217, type: !170)
!14814 = !DILocation(line: 3217, column: 6, scope: !14802)
!14815 = !DILocalVariable(name: "idx", scope: !14802, file: !3, line: 3217, type: !170)
!14816 = !DILocation(line: 3217, column: 13, scope: !14802)
!14817 = !DILocalVariable(name: "last", scope: !14802, file: !3, line: 3218, type: !14676)
!14818 = !DILocation(line: 3218, column: 9, scope: !14802)
!14819 = !DILocation(line: 3220, column: 2, scope: !14802)
!14820 = !DILocation(line: 3221, column: 19, scope: !14802)
!14821 = !DILocation(line: 3221, column: 8, scope: !14802)
!14822 = !DILocation(line: 3221, column: 6, scope: !14802)
!14823 = !DILocation(line: 3223, column: 6, scope: !14824)
!14824 = distinct !DILexicalBlock(scope: !14802, file: !3, line: 3223, column: 6)
!14825 = !DILocation(line: 3223, column: 10, scope: !14824)
!14826 = !DILocation(line: 3223, column: 16, scope: !14824)
!14827 = !DILocation(line: 3223, column: 33, scope: !14824)
!14828 = !DILocation(line: 3223, column: 19, scope: !14824)
!14829 = !DILocation(line: 3223, column: 38, scope: !14824)
!14830 = !DILocation(line: 3223, column: 6, scope: !14802)
!14831 = !DILocation(line: 3224, column: 3, scope: !14824)
!14832 = !DILocation(line: 3226, column: 23, scope: !14802)
!14833 = !DILocation(line: 3226, column: 9, scope: !14802)
!14834 = !DILocation(line: 3226, column: 7, scope: !14802)
!14835 = !DILocation(line: 3228, column: 7, scope: !14836)
!14836 = distinct !DILexicalBlock(scope: !14802, file: !3, line: 3228, column: 6)
!14837 = !DILocation(line: 3228, column: 13, scope: !14836)
!14838 = !DILocation(line: 3228, column: 6, scope: !14802)
!14839 = !DILocation(line: 3229, column: 3, scope: !14836)
!14840 = !DILocation(line: 3231, column: 25, scope: !14802)
!14841 = !DILocation(line: 3231, column: 30, scope: !14802)
!14842 = !DILocation(line: 3231, column: 10, scope: !14802)
!14843 = !DILocation(line: 3231, column: 8, scope: !14802)
!14844 = !DILocation(line: 3233, column: 6, scope: !14845)
!14845 = distinct !DILexicalBlock(scope: !14802, file: !3, line: 3233, column: 6)
!14846 = !DILocation(line: 3233, column: 6, scope: !14802)
!14847 = !DILocation(line: 3234, column: 24, scope: !14848)
!14848 = distinct !DILexicalBlock(scope: !14845, file: !3, line: 3233, column: 13)
!14849 = !DILocation(line: 3235, column: 26, scope: !14848)
!14850 = !DILocation(line: 3235, column: 3, scope: !14848)
!14851 = !DILocation(line: 3236, column: 2, scope: !14848)
!14852 = !DILocation(line: 3237, column: 24, scope: !14853)
!14853 = distinct !DILexicalBlock(scope: !14845, file: !3, line: 3236, column: 9)
!14854 = !DILocation(line: 3238, column: 26, scope: !14853)
!14855 = !DILocation(line: 3238, column: 3, scope: !14853)
!14856 = !DILabel(scope: !14802, name: "err", file: !3, line: 3241)
!14857 = !DILocation(line: 3241, column: 1, scope: !14802)
!14858 = !DILocation(line: 3242, column: 2, scope: !14802)
!14859 = !DILocation(line: 3243, column: 9, scope: !14802)
!14860 = !DILocation(line: 3243, column: 2, scope: !14802)
!14861 = distinct !DISubprogram(name: "fbcon_get_rotate", scope: !3, file: !3, line: 284, type: !4612, scopeLine: 285, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !241)
!14862 = !DILocalVariable(name: "info", arg: 1, scope: !14861, file: !3, line: 284, type: !199)
!14863 = !DILocation(line: 284, column: 45, scope: !14861)
!14864 = !DILocalVariable(name: "ops", scope: !14861, file: !3, line: 286, type: !4818)
!14865 = !DILocation(line: 286, column: 20, scope: !14861)
!14866 = !DILocation(line: 286, column: 26, scope: !14861)
!14867 = !DILocation(line: 286, column: 32, scope: !14861)
!14868 = !DILocation(line: 288, column: 10, scope: !14861)
!14869 = !DILocation(line: 288, column: 9, scope: !14861)
!14870 = !DILocation(line: 288, column: 17, scope: !14861)
!14871 = !DILocation(line: 288, column: 22, scope: !14861)
!14872 = !DILocation(line: 288, column: 2, scope: !14861)
!14873 = distinct !DISubprogram(name: "fbcon_rotate", scope: !3, file: !3, line: 273, type: !14874, scopeLine: 274, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !241)
!14874 = !DISubroutineType(types: !14875)
!14875 = !{null, !199, !338}
!14876 = !DILocalVariable(name: "info", arg: 1, scope: !14873, file: !3, line: 273, type: !199)
!14877 = !DILocation(line: 273, column: 42, scope: !14873)
!14878 = !DILocalVariable(name: "rotate", arg: 2, scope: !14873, file: !3, line: 273, type: !338)
!14879 = !DILocation(line: 273, column: 52, scope: !14873)
!14880 = !DILocation(line: 275, column: 2, scope: !14873)
!14881 = distinct !DISubprogram(name: "fbcon_rotate_all", scope: !3, file: !3, line: 278, type: !14874, scopeLine: 279, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !241)
!14882 = !DILocalVariable(name: "info", arg: 1, scope: !14881, file: !3, line: 278, type: !199)
!14883 = !DILocation(line: 278, column: 46, scope: !14881)
!14884 = !DILocalVariable(name: "rotate", arg: 2, scope: !14881, file: !3, line: 278, type: !338)
!14885 = !DILocation(line: 278, column: 56, scope: !14881)
!14886 = !DILocation(line: 280, column: 2, scope: !14881)
