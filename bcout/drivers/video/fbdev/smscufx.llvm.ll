; ModuleID = '../bcout/drivers/video/fbdev/smscufx.llvm.bc'
source_filename = "drivers/video/fbdev/smscufx.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64"

module asm ".section\09\22.initcall6.init\22, \22a\22\09"
module asm "__initcall_ufx_driver_init6:\09\09\09"
module asm ".long\09ufx_driver_init - .\09\09\09"
module asm ".previous\09\09\09\09\09"

%struct.usb_driver = type { i8*, i32 (%struct.usb_interface*, %struct.usb_device_id*)*, void (%struct.usb_interface*)*, i32 (%struct.usb_interface*, i32, i8*)*, i32 (%struct.usb_interface*, i32)*, i32 (%struct.usb_interface*)*, i32 (%struct.usb_interface*)*, i32 (%struct.usb_interface*)*, i32 (%struct.usb_interface*)*, %struct.usb_device_id*, %struct.attribute_group**, %struct.usb_dynids, %struct.usbdrv_wrap, i8 }
%struct.usb_interface = type { %struct.usb_host_interface*, %struct.usb_host_interface*, i32, %struct.usb_interface_assoc_descriptor*, i32, i32, i8, %struct.device, %struct.device*, %struct.work_struct }
%struct.usb_host_interface = type { %struct.usb_interface_descriptor, i32, i8*, %struct.usb_host_endpoint*, i8* }
%struct.usb_interface_descriptor = type { i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.usb_host_endpoint = type <{ %struct.usb_endpoint_descriptor, %struct.usb_ss_ep_comp_descriptor, %struct.usb_ssp_isoc_ep_comp_descriptor, i8, %struct.list_head, i8*, %struct.ep_device*, i8*, i32, i32, i32, [4 x i8] }>
%struct.usb_endpoint_descriptor = type <{ i8, i8, i8, i8, i16, i8, i8, i8 }>
%struct.usb_ss_ep_comp_descriptor = type { i8, i8, i8, i8, i16 }
%struct.usb_ssp_isoc_ep_comp_descriptor = type { i8, i8, i16, i32 }
%struct.list_head = type { %struct.list_head*, %struct.list_head* }
%struct.ep_device = type opaque
%struct.usb_interface_assoc_descriptor = type { i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.device = type { %struct.kobject, %struct.device*, %struct.device_private*, i8*, %struct.device_type*, %struct.bus_type*, %struct.device_driver*, i8*, i8*, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, %struct.dev_pm_domain*, %struct.irq_domain*, %struct.list_head, %struct.dma_map_ops*, i64*, i64, i64, %struct.bus_dma_region*, %struct.device_dma_parameters*, %struct.list_head, %struct.dev_archdata, %struct.device_node*, %struct.fwnode_handle*, i32, i32, %struct.spinlock, %struct.list_head, %struct.class*, %struct.attribute_group**, void (%struct.device*)*, %struct.iommu_group*, %struct.dev_iommu*, i8 }
%struct.kobject = type { i8*, %struct.list_head, %struct.kobject*, %struct.kset*, %struct.kobj_type*, %struct.kernfs_node*, %struct.kref, i8 }
%struct.kset = type { %struct.list_head, %struct.spinlock, %struct.kobject, %struct.kset_uevent_ops* }
%struct.kset_uevent_ops = type { i32 (%struct.kset*, %struct.kobject*)*, i8* (%struct.kset*, %struct.kobject*)*, i32 (%struct.kset*, %struct.kobject*, %struct.kobj_uevent_env*)* }
%struct.kobj_uevent_env = type { [3 x i8*], [64 x i8*], i32, [2048 x i8], i32 }
%struct.kobj_type = type { void (%struct.kobject*)*, %struct.sysfs_ops*, %struct.attribute**, %struct.attribute_group**, %struct.kobj_ns_type_operations* (%struct.kobject*)*, i8* (%struct.kobject*)*, void (%struct.kobject*, %struct.kuid_t*, %struct.kgid_t*)* }
%struct.sysfs_ops = type { i64 (%struct.kobject*, %struct.attribute*, i8*)*, i64 (%struct.kobject*, %struct.attribute*, i8*, i64)* }
%struct.attribute = type { i8*, i16 }
%struct.kobj_ns_type_operations = type { i32, i1 ()*, i8* ()*, i8* (%struct.sock*)*, i8* ()*, void (i8*)* }
%struct.sock = type opaque
%struct.kuid_t = type { i32 }
%struct.kgid_t = type { i32 }
%struct.kernfs_node = type { %struct.atomic_t, %struct.atomic_t, %struct.kernfs_node*, i8*, %struct.rb_node, i8*, i32, %union.anon.64, i8*, i64, i16, i16, %struct.kernfs_iattrs* }
%struct.atomic_t = type { i32 }
%struct.rb_node = type { i64, %struct.rb_node*, %struct.rb_node* }
%union.anon.64 = type { %struct.kernfs_elem_attr }
%struct.kernfs_elem_attr = type { %struct.kernfs_ops*, %struct.kernfs_open_node*, i64, %struct.kernfs_node* }
%struct.kernfs_ops = type { i32 (%struct.kernfs_open_file*)*, void (%struct.kernfs_open_file*)*, i32 (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i64*)*, i8* (%struct.seq_file*, i8*, i64*)*, void (%struct.seq_file*, i8*)*, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i64, i8, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i32 (%struct.kernfs_open_file*, %struct.poll_table_struct*)*, i32 (%struct.kernfs_open_file*, %struct.vm_area_struct*)* }
%struct.kernfs_open_file = type { %struct.kernfs_node*, %struct.file*, %struct.seq_file*, i8*, %struct.mutex, %struct.mutex, i32, %struct.list_head, i8*, i64, i8, %struct.vm_operations_struct* }
%struct.file = type { %union.anon, %struct.path, %struct.inode*, %struct.file_operations*, %struct.spinlock, i32, %struct.atomic64_t, i32, i32, %struct.mutex, i64, %struct.fown_struct, %struct.cred*, %struct.file_ra_state, i64, i8*, %struct.list_head, %struct.list_head, %struct.address_space*, i32, i32 }
%union.anon = type { %struct.callback_head }
%struct.callback_head = type { %struct.callback_head*, void (%struct.callback_head*)* }
%struct.path = type { %struct.vfsmount*, %struct.dentry* }
%struct.vfsmount = type opaque
%struct.dentry = type { i32, %struct.seqcount_spinlock, %struct.hlist_bl_node, %struct.dentry*, %struct.qstr, %struct.inode*, [32 x i8], %struct.lockref, %struct.dentry_operations*, %struct.super_block*, i64, i8*, %union.anon.62, %struct.list_head, %struct.list_head, %union.anon.63 }
%struct.seqcount_spinlock = type { %struct.seqcount }
%struct.seqcount = type { i32 }
%struct.hlist_bl_node = type { %struct.hlist_bl_node*, %struct.hlist_bl_node** }
%struct.qstr = type { %union.anon.0, i8* }
%union.anon.0 = type { i64 }
%struct.lockref = type { %union.anon.60 }
%union.anon.60 = type { %struct.anon.61 }
%struct.anon.61 = type { %struct.spinlock, i32 }
%struct.dentry_operations = type { i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.qstr*)*, i32 (%struct.dentry*, i32, i8*, %struct.qstr*)*, i32 (%struct.dentry*)*, i32 (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*, %struct.inode*)*, i8* (%struct.dentry*, i8*, i32)*, %struct.vfsmount* (%struct.path*)*, i32 (%struct.path*, i1)*, %struct.dentry* (%struct.dentry*, %struct.inode*)*, [24 x i8] }
%struct.super_block = type { %struct.list_head, i32, i8, i64, i64, %struct.file_system_type*, %struct.super_operations*, %struct.dquot_operations*, %struct.quotactl_ops*, %struct.export_operations*, i64, i64, i64, %struct.dentry*, %struct.rw_semaphore, i32, %struct.atomic_t, %struct.xattr_handler**, %struct.hlist_bl_head, %struct.list_head, %struct.block_device*, %struct.backing_dev_info*, %struct.mtd_info*, %struct.hlist_node, i32, %struct.quota_info, %struct.sb_writers, i8*, i32, i64, i64, i32, %struct.fsnotify_mark_connector*, [32 x i8], %struct.uuid_t, i32, i32, %struct.mutex, i8*, %struct.dentry_operations*, i32, %struct.shrinker, %struct.atomic64_t, %struct.atomic64_t, i32, i32, %struct.workqueue_struct*, %struct.hlist_head, %struct.user_namespace*, %struct.list_lru, %struct.list_lru, %struct.callback_head, %struct.work_struct, %struct.mutex, i32, %struct.spinlock, %struct.list_head, %struct.spinlock, %struct.list_head }
%struct.file_system_type = type { i8*, i32, i32 (%struct.fs_context*)*, %struct.fs_parameter_spec*, %struct.dentry* (%struct.file_system_type*, i32, i8*, i8*)*, void (%struct.super_block*)*, %struct.module*, %struct.file_system_type*, %struct.hlist_head, %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key, [3 x %struct.lock_class_key], %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key }
%struct.fs_context = type opaque
%struct.fs_parameter_spec = type opaque
%struct.module = type opaque
%struct.lock_class_key = type {}
%struct.super_operations = type { %struct.inode* (%struct.super_block*)*, void (%struct.inode*)*, void (%struct.inode*)*, void (%struct.inode*, i32)*, i32 (%struct.inode*, %struct.writeback_control*)*, i32 (%struct.inode*)*, void (%struct.inode*)*, void (%struct.super_block*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.dentry*, %struct.kstatfs*)*, i32 (%struct.super_block*, i32*, i8*)*, void (%struct.super_block*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.super_block*, %struct.page*, i32)*, i64 (%struct.super_block*, %struct.shrink_control*)*, i64 (%struct.super_block*, %struct.shrink_control*)* }
%struct.writeback_control = type opaque
%struct.kstatfs = type opaque
%struct.page = type { i64, %union.anon.1, %union.anon.52, %struct.atomic_t, [8 x i8] }
%union.anon.1 = type { %struct.anon.2 }
%struct.anon.2 = type { %struct.list_head, %struct.address_space*, i64, i64 }
%union.anon.52 = type { %struct.atomic_t }
%struct.shrink_control = type { i32, i32, i64, i64, %struct.mem_cgroup* }
%struct.mem_cgroup = type opaque
%struct.dquot_operations = type { i32 (%struct.dquot*)*, %struct.dquot* (%struct.super_block*, i32)*, void (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, i32)*, i64* (%struct.inode*)*, i32 (%struct.inode*, %struct.kprojid_t*)*, i32 (%struct.inode*, i64*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.dquot = type { %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.mutex, %struct.spinlock, %struct.atomic_t, %struct.super_block*, %struct.kqid, i64, i64, %struct.mem_dqblk }
%struct.kqid = type { %union.anon.53, i32 }
%union.anon.53 = type { %struct.kuid_t }
%struct.mem_dqblk = type { i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.kprojid_t = type { i32 }
%struct.quotactl_ops = type { i32 (%struct.super_block*, i32, i32, %struct.path*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32, %struct.qc_info*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.kqid*, %struct.qc_dqblk*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.qc_state*)*, i32 (%struct.super_block*, i32)* }
%struct.qc_info = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.qc_dqblk = type { i32, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, i64, i64, i64, i64, i32 }
%struct.qc_state = type { i32, [3 x %struct.qc_type_state] }
%struct.qc_type_state = type { i32, i32, i32, i32, i32, i32, i32, i64, i64, i64 }
%struct.export_operations = type opaque
%struct.rw_semaphore = type { %struct.atomic64_t, %struct.atomic64_t, %struct.raw_spinlock, %struct.list_head }
%struct.raw_spinlock = type { %struct.arch_spinlock_t }
%struct.arch_spinlock_t = type {}
%struct.xattr_handler = type opaque
%struct.hlist_bl_head = type { %struct.hlist_bl_node* }
%struct.block_device = type opaque
%struct.backing_dev_info = type opaque
%struct.mtd_info = type opaque
%struct.hlist_node = type { %struct.hlist_node*, %struct.hlist_node** }
%struct.quota_info = type { i32, %struct.rw_semaphore, [3 x %struct.inode*], [3 x %struct.mem_dqinfo], [3 x %struct.quota_format_ops*] }
%struct.mem_dqinfo = type { %struct.quota_format_type*, i32, %struct.list_head, i64, i32, i32, i64, i64, i8* }
%struct.quota_format_type = type { i32, %struct.quota_format_ops*, %struct.module*, %struct.quota_format_type* }
%struct.quota_format_ops = type { i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.sb_writers = type { i32, %struct.wait_queue_head, [3 x %struct.percpu_rw_semaphore] }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.percpu_rw_semaphore = type { %struct.rcu_sync, i32*, %struct.rcuwait, %struct.wait_queue_head, %struct.atomic_t }
%struct.rcu_sync = type { i32, i32, %struct.wait_queue_head, %struct.callback_head }
%struct.rcuwait = type { %struct.task_struct* }
%struct.task_struct = type { %struct.thread_info, i64, i8*, %struct.refcount_struct, i32, i32, i32, i32, i32, i32, i32, %struct.sched_class*, %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, i32, i32, %struct.cpumask*, %struct.cpumask, %struct.sched_info, %struct.list_head, %struct.mm_struct*, %struct.mm_struct*, %struct.vmacache, i32, i32, i32, i32, i64, i32, i8, [3 x i8], i8, i64, %struct.restart_block, i32, i32, i64, %struct.task_struct*, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.pid*, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, %struct.completion*, i32*, i32*, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, %struct.posix_cputimers, %struct.posix_cputimers_work, %struct.cred*, %struct.cred*, %struct.cred*, %struct.key*, [16 x i8], %struct.nameidata*, %struct.fs_struct*, %struct.files_struct*, %struct.io_uring_task*, %struct.nsproxy*, %struct.signal_struct*, %struct.sighand_struct*, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i64, i64, i32, %struct.callback_head*, %struct.seccomp, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, %struct.task_struct*, %struct.rt_mutex_waiter*, i8*, %struct.bio_list*, %struct.blk_plug*, %struct.reclaim_state*, %struct.backing_dev_info*, %struct.io_context*, %struct.capture_control*, i64, %struct.kernel_siginfo*, %struct.task_io_accounting, %struct.robust_list_head*, %struct.list_head, %struct.futex_pi_state*, %struct.mutex, i32, [2 x %struct.perf_event_context*], %struct.mutex, %struct.list_head, %struct.rseq*, i32, i64, %struct.tlbflush_unmap_batch, %union.anon.45, %struct.pipe_inode_info*, %struct.page_frag, i32, i32, i64, i64, i64, i32, %struct.task_struct*, %struct.vm_struct*, %struct.refcount_struct, i8*, i64, i64, i64, %struct.callback_head, [24 x i8], %struct.thread_struct }
%struct.thread_info = type { i64, i32 }
%struct.sched_class = type opaque
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, %struct.sched_statistics }
%struct.load_weight = type { i64, i32 }
%struct.sched_statistics = type {}
%struct.sched_rt_entity = type { %struct.list_head, i64, i64, i32, i16, i16, %struct.sched_rt_entity* }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, %struct.sched_dl_entity* }
%struct.hrtimer = type { %struct.timerqueue_node, i64, i32 (%struct.hrtimer*)*, %struct.hrtimer_clock_base*, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.hrtimer_clock_base = type { %struct.hrtimer_cpu_base*, i32, i32, %struct.seqcount_raw_spinlock, %struct.hrtimer*, %struct.timerqueue_head, i64 ()*, i64 }
%struct.hrtimer_cpu_base = type { %struct.raw_spinlock, i32, i32, i32, i8, i64, %struct.hrtimer*, i64, %struct.hrtimer*, [16 x i8], [8 x %struct.hrtimer_clock_base] }
%struct.seqcount_raw_spinlock = type { %struct.seqcount }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.cpumask = type { [1 x i64] }
%struct.sched_info = type {}
%struct.mm_struct = type { %struct.anon.15, [0 x i64] }
%struct.anon.15 = type { %struct.vm_area_struct*, %struct.rb_root, i64, i64 (%struct.file*, i64, i64, i64, i64)*, i64, i64, i64, i64, %struct.pgd_t*, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i32, %struct.spinlock, %struct.rw_semaphore, %struct.list_head, i64, i64, i64, i64, %struct.atomic64_t, i64, i64, i64, i64, %struct.spinlock, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [44 x i64], %struct.mm_rss_stat, %struct.linux_binfmt*, %struct.mm_context_t, i64, %struct.core_state*, %struct.spinlock, %struct.kioctx_table*, %struct.user_namespace*, %struct.file*, %struct.mmu_notifier_subscriptions*, %struct.atomic_t, i8, %struct.uprobes_state, %struct.work_struct, i32 }
%struct.vm_area_struct = type { i64, i64, %struct.vm_area_struct*, %struct.vm_area_struct*, %struct.rb_node, i64, %struct.mm_struct*, %struct.pgprot, i64, %struct.anon.16, %struct.list_head, %struct.anon_vma*, %struct.vm_operations_struct*, i64, %struct.file*, i8*, %struct.atomic64_t, %struct.vm_userfaultfd_ctx }
%struct.pgprot = type { i64 }
%struct.anon.16 = type { %struct.rb_node, i64 }
%struct.anon_vma = type opaque
%struct.vm_userfaultfd_ctx = type {}
%struct.rb_root = type { %struct.rb_node* }
%struct.pgd_t = type { i64 }
%struct.mm_rss_stat = type { [4 x %struct.atomic64_t] }
%struct.linux_binfmt = type opaque
%struct.mm_context_t = type { i64, %struct.atomic64_t, %struct.rw_semaphore, %struct.ldt_struct*, i16, %struct.mutex, i8*, %struct.vdso_image*, %struct.atomic_t, i16, i16 }
%struct.ldt_struct = type opaque
%struct.vdso_image = type { i8*, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.core_state = type { %struct.atomic_t, %struct.core_thread, %struct.completion }
%struct.core_thread = type { %struct.task_struct*, %struct.core_thread* }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.kioctx_table = type opaque
%struct.mmu_notifier_subscriptions = type opaque
%struct.uprobes_state = type {}
%struct.vmacache = type { i64, [4 x %struct.vm_area_struct*] }
%struct.restart_block = type { i64 (%struct.restart_block*)*, %union.anon.17 }
%union.anon.17 = type { %struct.anon.18 }
%struct.anon.18 = type { i32*, i32, i32, i32, i64, i32* }
%struct.pid = type { %struct.refcount_struct, i32, %struct.spinlock, [4 x %struct.hlist_head], %struct.hlist_head, %struct.wait_queue_head, %struct.callback_head, [1 x %struct.upid] }
%struct.upid = type { i32, %struct.pid_namespace* }
%struct.pid_namespace = type { %struct.kref, %struct.idr, %struct.callback_head, i32, %struct.task_struct*, %struct.kmem_cache*, i32, %struct.pid_namespace*, %struct.user_namespace*, %struct.ucounts*, i32, %struct.ns_common }
%struct.idr = type { %struct.xarray, i32, i32 }
%struct.xarray = type { %struct.spinlock, i32, i8* }
%struct.kmem_cache = type opaque
%struct.ucounts = type opaque
%struct.ns_common = type { %struct.atomic64_t, %struct.proc_ns_operations*, i32 }
%struct.proc_ns_operations = type opaque
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.posix_cputimers_work = type { %struct.callback_head, i32 }
%struct.key = type { %struct.refcount_struct, i32, %union.anon.22, %struct.rw_semaphore, %struct.key_user*, i8*, %union.anon.23, i64, %struct.kuid_t, %struct.kgid_t, i32, i16, i16, i16, i64, %union.anon.24, %union.anon.28, %struct.key_restriction* }
%union.anon.22 = type { %struct.rb_node }
%struct.key_user = type opaque
%union.anon.23 = type { i64 }
%union.anon.24 = type { %struct.keyring_index_key }
%struct.keyring_index_key = type { i64, %union.anon.25, %struct.key_type*, %struct.key_tag*, i8* }
%union.anon.25 = type { i64 }
%struct.key_type = type opaque
%struct.key_tag = type { %struct.callback_head, %struct.refcount_struct, i8 }
%union.anon.28 = type { %union.key_payload }
%union.key_payload = type { [4 x i8*] }
%struct.key_restriction = type { i32 (%struct.key*, %struct.key_type*, %union.key_payload*, %struct.key*)*, %struct.key*, %struct.key_type* }
%struct.nameidata = type opaque
%struct.fs_struct = type opaque
%struct.files_struct = type opaque
%struct.io_uring_task = type opaque
%struct.nsproxy = type { %struct.atomic_t, %struct.uts_namespace*, %struct.ipc_namespace*, %struct.mnt_namespace*, %struct.pid_namespace*, %struct.net*, %struct.time_namespace*, %struct.time_namespace*, %struct.cgroup_namespace* }
%struct.uts_namespace = type opaque
%struct.ipc_namespace = type opaque
%struct.mnt_namespace = type opaque
%struct.net = type opaque
%struct.time_namespace = type opaque
%struct.cgroup_namespace = type opaque
%struct.signal_struct = type { %struct.refcount_struct, %struct.atomic_t, i32, %struct.list_head, %struct.wait_queue_head, %struct.task_struct*, %struct.sigpending, %struct.hlist_head, i32, i32, %struct.task_struct*, i32, i32, i8, i32, %struct.list_head, %struct.hrtimer, i64, [2 x %struct.cpu_itimer], %struct.thread_group_cputimer, %struct.posix_cputimers, [4 x %struct.pid*], %struct.pid*, i32, %struct.tty_struct*, %struct.seqlock_t, i64, i64, i64, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.task_io_accounting, i64, [16 x %struct.rlimit], i8, i16, i16, %struct.mm_struct*, %struct.mutex, %struct.mutex }
%struct.cpu_itimer = type { i64, i64 }
%struct.thread_group_cputimer = type { %struct.task_cputime_atomic }
%struct.task_cputime_atomic = type { %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t }
%struct.tty_struct = type opaque
%struct.seqlock_t = type { %struct.seqcount_spinlock, %struct.spinlock }
%struct.rlimit = type { i64, i64 }
%struct.sighand_struct = type { %struct.spinlock, %struct.refcount_struct, %struct.wait_queue_head, [64 x %struct.k_sigaction] }
%struct.k_sigaction = type { %struct.sigaction }
%struct.sigaction = type { void (i32)*, i64, void ()*, %struct.sigset_t }
%struct.sigset_t = type { [1 x i64] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.seccomp = type { i32, %struct.atomic_t, %struct.seccomp_filter* }
%struct.seccomp_filter = type opaque
%struct.wake_q_node = type { %struct.wake_q_node* }
%struct.rb_root_cached = type { %struct.rb_root, %struct.rb_node* }
%struct.rt_mutex_waiter = type opaque
%struct.bio_list = type opaque
%struct.blk_plug = type opaque
%struct.reclaim_state = type opaque
%struct.io_context = type { %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.spinlock, i16, %struct.xarray, %struct.io_cq*, %struct.hlist_head, %struct.work_struct }
%struct.io_cq = type { %struct.request_queue*, %struct.io_context*, %union.anon.31, %union.anon.32, i32 }
%struct.request_queue = type opaque
%union.anon.31 = type { %struct.list_head }
%union.anon.32 = type { %struct.hlist_node }
%struct.capture_control = type opaque
%struct.kernel_siginfo = type { %struct.anon.33 }
%struct.anon.33 = type { i32, i32, i32, %union.__sifields }
%union.__sifields = type { %struct.anon.37 }
%struct.anon.37 = type { i32, i32, i32, i64, i64 }
%struct.task_io_accounting = type {}
%struct.robust_list_head = type opaque
%struct.futex_pi_state = type opaque
%struct.perf_event_context = type opaque
%struct.rseq = type { i32, i32, %union.anon.44, i32, [12 x i8] }
%union.anon.44 = type { i64 }
%struct.tlbflush_unmap_batch = type { %struct.arch_tlbflush_unmap_batch, i8, i8 }
%struct.arch_tlbflush_unmap_batch = type { %struct.cpumask }
%union.anon.45 = type { %struct.callback_head }
%struct.pipe_inode_info = type opaque
%struct.page_frag = type { %struct.page*, i32, i32 }
%struct.vm_struct = type { %struct.vm_struct*, i8*, i64, i64, %struct.page**, i32, i64, i8* }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.thread_struct = type { [3 x %struct.desc_struct], i64, i16, i16, i16, i16, i64, i64, [4 x %struct.perf_event*], i64, i64, i64, i64, i64, %struct.io_bitmap*, i64, i8, [47 x i8], %struct.fpu }
%struct.desc_struct = type { i16, i16, i32 }
%struct.perf_event = type opaque
%struct.io_bitmap = type opaque
%struct.fpu = type { i32, i64, [48 x i8], %union.fpregs_state }
%union.fpregs_state = type { %struct.xregs_state, [3520 x i8] }
%struct.xregs_state = type { %struct.fxregs_state, %struct.xstate_header, [0 x i8] }
%struct.fxregs_state = type { i16, i16, i16, i16, %union.anon.46, i32, i32, [32 x i32], [64 x i32], [12 x i32], %union.anon.49 }
%union.anon.46 = type { %struct.anon.47 }
%struct.anon.47 = type { i64, i64 }
%union.anon.49 = type { [12 x i32] }
%struct.xstate_header = type { i64, i64, [6 x i64] }
%struct.fsnotify_mark_connector = type opaque
%struct.uuid_t = type { [16 x i8] }
%struct.shrinker = type { i64 (%struct.shrinker*, %struct.shrink_control*)*, i64 (%struct.shrinker*, %struct.shrink_control*)*, i64, i32, i32, %struct.list_head, %struct.atomic64_t* }
%struct.workqueue_struct = type opaque
%struct.hlist_head = type { %struct.hlist_node* }
%struct.user_namespace = type opaque
%struct.list_lru = type { %struct.list_lru_node* }
%struct.list_lru_node = type { %struct.spinlock, %struct.list_lru_one, i64 }
%struct.list_lru_one = type { %struct.list_head, i64 }
%union.anon.62 = type { %struct.list_head }
%union.anon.63 = type { %struct.hlist_node }
%struct.inode = type { i16, i16, %struct.kuid_t, %struct.kgid_t, i32, %struct.inode_operations*, %struct.super_block*, %struct.address_space*, i64, %union.anon.54, i32, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.spinlock, i16, i8, i8, i64, i64, %struct.rw_semaphore, i64, i64, %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %union.anon.55, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %union.anon.56, %struct.file_lock_context*, %struct.address_space, %struct.list_head, %union.anon.59, i32, i32, %struct.fsnotify_mark_connector*, i8* }
%struct.inode_operations = type { %struct.dentry* (%struct.inode*, %struct.dentry*, i32)*, i8* (%struct.dentry*, %struct.inode*, %struct.delayed_call*)*, i32 (%struct.inode*, i32)*, %struct.posix_acl* (%struct.inode*, i32)*, i32 (%struct.dentry*, i8*, i32)*, i32 (%struct.inode*, %struct.dentry*, i16, i1)*, i32 (%struct.dentry*, %struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i8*)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i16, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.inode*, %struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.iattr*)*, i32 (%struct.path*, %struct.kstat*, i32, i32)*, i64 (%struct.dentry*, i8*, i64)*, i32 (%struct.inode*, %struct.fiemap_extent_info*, i64, i64)*, i32 (%struct.inode*, %struct.timespec64*, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.file*, i32, i16)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.posix_acl*, i32)*, [24 x i8] }
%struct.delayed_call = type { void (i8*)*, i8* }
%struct.posix_acl = type opaque
%struct.iattr = type { i32, i16, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.file* }
%struct.kstat = type { i32, i16, i32, i32, i64, i64, i64, i32, i32, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.timespec64, i64, i64 }
%struct.fiemap_extent_info = type opaque
%union.anon.54 = type { i32 }
%struct.timespec64 = type { i64, i64 }
%union.anon.55 = type { %struct.callback_head }
%union.anon.56 = type { %struct.file_operations* }
%struct.file_lock_context = type { %struct.spinlock, %struct.list_head, %struct.list_head, %struct.list_head }
%struct.address_space = type { %struct.inode*, %struct.xarray, i32, %struct.atomic_t, %struct.rb_root_cached, %struct.rw_semaphore, i64, i64, i64, %struct.address_space_operations*, i64, i32, %struct.spinlock, %struct.list_head, i8* }
%struct.address_space_operations = type { i32 (%struct.page*, %struct.writeback_control*)*, i32 (%struct.file*, %struct.page*)*, i32 (%struct.address_space*, %struct.writeback_control*)*, i32 (%struct.page*)*, i32 (%struct.file*, %struct.address_space*, %struct.list_head*, i32)*, void (%struct.readahead_control*)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page**, i8**)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page*, i8*)*, i64 (%struct.address_space*, i64)*, void (%struct.page*, i32, i32)*, i32 (%struct.page*, i32)*, void (%struct.page*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.address_space*, %struct.page*, %struct.page*, i32)*, i1 (%struct.page*, i32)*, void (%struct.page*)*, i32 (%struct.page*)*, i32 (%struct.page*, i64, i64)*, void (%struct.page*, i8*, i8*)*, i32 (%struct.address_space*, %struct.page*)*, i32 (%struct.swap_info_struct*, %struct.file*, i64*)*, void (%struct.file*)* }
%struct.readahead_control = type opaque
%struct.kiocb = type { %struct.file*, i64, void (%struct.kiocb*, i64, i64)*, i8*, i32, i16, i16, %union.anon.4 }
%union.anon.4 = type { %struct.wait_page_queue* }
%struct.wait_page_queue = type opaque
%struct.iov_iter = type opaque
%struct.swap_info_struct = type opaque
%union.anon.59 = type { %struct.pipe_inode_info* }
%struct.file_operations = type { %struct.module*, i64 (%struct.file*, i64, i32)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.kiocb*, i1)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.poll_table_struct*)*, i64 (%struct.file*, i32, i64)*, i64 (%struct.file*, i32, i64)*, i32 (%struct.file*, %struct.vm_area_struct*)*, i64, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i8*)*, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i64, i64, i32)*, i32 (i32, %struct.file*, i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.file*, %struct.page*, i32, i64, i64*, i32)*, i64 (%struct.file*, i64, i64, i64, i64)*, i32 (i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.pipe_inode_info*, %struct.file*, i64*, i64, i32)*, i64 (%struct.file*, i64*, %struct.pipe_inode_info*, i64, i32)*, i32 (%struct.file*, i64, %struct.file_lock**, i8**)*, i64 (%struct.file*, i32, i64, i64)*, void (%struct.seq_file*, %struct.file*)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i32 (%struct.file*, i64, i64, i32)* }
%struct.dir_context = type { i32 (%struct.dir_context*, i8*, i32, i64, i64, i32)*, i64 }
%struct.poll_table_struct = type opaque
%struct.file_lock = type { %struct.file_lock*, %struct.list_head, %struct.hlist_node, %struct.list_head, %struct.list_head, i8*, i32, i8, i32, i32, %struct.wait_queue_head, %struct.file*, i64, i64, %struct.fasync_struct*, i64, i64, %struct.file_lock_operations*, %struct.lock_manager_operations*, %union.anon.57 }
%struct.fasync_struct = type { %struct.rwlock_t, i32, i32, %struct.fasync_struct*, %struct.file*, %struct.callback_head }
%struct.rwlock_t = type { %struct.arch_rwlock_t }
%struct.arch_rwlock_t = type {}
%struct.file_lock_operations = type { void (%struct.file_lock*, %struct.file_lock*)*, void (%struct.file_lock*)* }
%struct.lock_manager_operations = type { i8* (i8*)*, void (i8*)*, void (%struct.file_lock*)*, i32 (%struct.file_lock*, i32)*, i1 (%struct.file_lock*)*, i32 (%struct.file_lock*, i32, %struct.list_head*)*, void (%struct.file_lock*, i8**)*, i1 (%struct.file_lock*)* }
%union.anon.57 = type { %struct.nfs_lock_info }
%struct.nfs_lock_info = type { i32, %struct.nlm_lockowner*, %struct.list_head }
%struct.nlm_lockowner = type opaque
%struct.atomic64_t = type { i64 }
%struct.fown_struct = type { %struct.rwlock_t, %struct.pid*, i32, %struct.kuid_t, %struct.kuid_t, i32 }
%struct.cred = type { %struct.atomic_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, i32, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, i8, %struct.key*, %struct.key*, %struct.key*, %struct.key*, %struct.user_struct*, %struct.user_namespace*, %struct.group_info*, %union.anon.30 }
%struct.kernel_cap_struct = type { [2 x i32] }
%struct.user_struct = type { %struct.refcount_struct, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i64, i64, %struct.atomic64_t, %struct.hlist_node, %struct.kuid_t, %struct.atomic64_t, %struct.ratelimit_state }
%struct.ratelimit_state = type { %struct.raw_spinlock, i32, i32, i32, i32, i64, i64 }
%struct.group_info = type { %struct.atomic_t, i32, [0 x %struct.kgid_t] }
%union.anon.30 = type { %struct.callback_head }
%struct.file_ra_state = type { i64, i32, i32, i32, i32, i64 }
%struct.seq_file = type opaque
%struct.vm_operations_struct = type { void (%struct.vm_area_struct*)*, void (%struct.vm_area_struct*)*, i32 (%struct.vm_area_struct*, i64)*, i32 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*, i32)*, void (%struct.vm_fault*, i64, i64)*, i64 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_area_struct*, i64, i8*, i32, i32)*, i8* (%struct.vm_area_struct*)*, %struct.page* (%struct.vm_area_struct*, i64)* }
%struct.vm_fault = type { %struct.vm_area_struct*, i32, i32, i64, i64, %struct.pmd_t*, %struct.pud_t*, %struct.pte_t, %struct.page*, %struct.page*, %struct.pte_t*, %struct.spinlock*, %struct.page* }
%struct.pmd_t = type { i64 }
%struct.pud_t = type { i64 }
%struct.pte_t = type { i64 }
%struct.kernfs_open_node = type opaque
%struct.kernfs_iattrs = type opaque
%struct.kref = type { %struct.refcount_struct }
%struct.device_private = type opaque
%struct.device_type = type { i8*, %struct.attribute_group**, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*, %struct.kuid_t*, %struct.kgid_t*)*, void (%struct.device*)*, %struct.dev_pm_ops* }
%struct.dev_pm_ops = type { i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)* }
%struct.bus_type = type { i8*, i8*, %struct.device*, %struct.attribute_group**, %struct.attribute_group**, %struct.attribute_group**, i32 (%struct.device*, %struct.device_driver*)*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, %struct.dev_pm_ops*, %struct.iommu_ops*, %struct.subsys_private*, %struct.lock_class_key, i8 }
%struct.iommu_ops = type opaque
%struct.subsys_private = type opaque
%struct.device_driver = type { i8*, %struct.bus_type*, %struct.module*, i8*, i8, i32, %struct.of_device_id*, %struct.acpi_device_id*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, %struct.attribute_group**, %struct.attribute_group**, %struct.dev_pm_ops*, void (%struct.device*)*, %struct.driver_private* }
%struct.of_device_id = type { [32 x i8], [32 x i8], [128 x i8], i8* }
%struct.acpi_device_id = type { [9 x i8], i64, i32, i32 }
%struct.driver_private = type opaque
%struct.mutex = type { %struct.atomic64_t, %struct.spinlock, %struct.list_head }
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, i8, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, %struct.wakeup_source*, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, %struct.wake_irq*, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i64, i64, i64, i64, %struct.pm_subsys_data*, void (%struct.device*, i32)*, %struct.dev_pm_qos* }
%struct.pm_message = type { i32 }
%struct.wakeup_source = type { i8*, i32, %struct.list_head, %struct.spinlock, %struct.wake_irq*, %struct.timer_list, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.device*, i8 }
%struct.timer_list = type { %struct.hlist_node, i64, void (%struct.timer_list*)*, i32 }
%struct.wake_irq = type opaque
%struct.pm_subsys_data = type { %struct.spinlock, i32, %struct.list_head, %struct.pm_domain_data* }
%struct.pm_domain_data = type opaque
%struct.dev_pm_qos = type opaque
%struct.dev_pm_domain = type { %struct.dev_pm_ops, i32 (%struct.device*)*, void (%struct.device*, i1)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)* }
%struct.irq_domain = type { %struct.list_head, i8*, %struct.irq_domain_ops*, i8*, i32, i32, %struct.fwnode_handle*, i32, %struct.irq_domain_chip_generic*, %struct.irq_domain*, i64, i32, i32, %struct.xarray, %struct.mutex, [0 x i32] }
%struct.irq_domain_ops = type { i32 (%struct.irq_domain*, %struct.device_node*, i32)*, i32 (%struct.irq_domain*, %struct.irq_fwspec*, i32)*, i32 (%struct.irq_domain*, i32, i64)*, void (%struct.irq_domain*, i32)*, i32 (%struct.irq_domain*, %struct.device_node*, i32*, i32, i64*, i32*)*, i32 (%struct.irq_domain*, i32, i32, i8*)*, void (%struct.irq_domain*, i32, i32)*, i32 (%struct.irq_domain*, %struct.irq_data*, i1)*, void (%struct.irq_domain*, %struct.irq_data*)*, i32 (%struct.irq_domain*, %struct.irq_fwspec*, i64*, i32*)* }
%struct.irq_fwspec = type { %struct.fwnode_handle*, i32, [16 x i32] }
%struct.irq_data = type opaque
%struct.irq_domain_chip_generic = type opaque
%struct.dma_map_ops = type opaque
%struct.bus_dma_region = type opaque
%struct.device_dma_parameters = type { i32, i64 }
%struct.dev_archdata = type {}
%struct.device_node = type { i8*, i32, i8*, %struct.fwnode_handle, %struct.property*, %struct.property*, %struct.device_node*, %struct.device_node*, %struct.device_node*, %struct.kobject, i64, i8* }
%struct.fwnode_handle = type { %struct.fwnode_handle*, %struct.fwnode_operations*, %struct.device* }
%struct.fwnode_operations = type { %struct.fwnode_handle* (%struct.fwnode_handle*)*, void (%struct.fwnode_handle*)*, i1 (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*, %struct.device*)*, i1 (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i32, i8*, i64)*, i32 (%struct.fwnode_handle*, i8*, i8**, i64)*, i8* (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i8*, i32, i32, %struct.fwnode_reference_args*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, i32 (%struct.fwnode_handle*, %struct.fwnode_endpoint*)*, i32 (%struct.fwnode_handle*, %struct.device*)* }
%struct.fwnode_reference_args = type { %struct.fwnode_handle*, i32, [8 x i64] }
%struct.fwnode_endpoint = type { i32, i32, %struct.fwnode_handle* }
%struct.property = type { i8*, i32, i8*, %struct.property*, %struct.bin_attribute }
%struct.bin_attribute = type { %struct.attribute, i64, i8*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i32 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, %struct.vm_area_struct*)* }
%struct.spinlock = type { %union.anon.3 }
%union.anon.3 = type { %struct.raw_spinlock }
%struct.class = type { i8*, %struct.module*, %struct.attribute_group**, %struct.attribute_group**, %struct.kobject*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*)*, void (%struct.class*)*, void (%struct.device*)*, i32 (%struct.device*)*, %struct.kobj_ns_type_operations*, i8* (%struct.device*)*, void (%struct.device*, %struct.kuid_t*, %struct.kgid_t*)*, %struct.dev_pm_ops*, %struct.subsys_private* }
%struct.iommu_group = type opaque
%struct.dev_iommu = type opaque
%struct.work_struct = type { %struct.atomic64_t, %struct.list_head, void (%struct.work_struct*)* }
%struct.usb_device_id = type { i16, i16, i16, i16, i16, i8, i8, i8, i8, i8, i8, i8, i64 }
%struct.attribute_group = type { i8*, i16 (%struct.kobject*, %struct.attribute*, i32)*, i16 (%struct.kobject*, %struct.bin_attribute*, i32)*, %struct.attribute**, %struct.bin_attribute** }
%struct.usb_dynids = type { %struct.spinlock, %struct.list_head }
%struct.usbdrv_wrap = type { %struct.device_driver, i32 }
%struct.kernel_param_ops = type { i32, i32 (i8*, %struct.kernel_param*)*, i32 (i8*, %struct.kernel_param*)*, void (i8*)* }
%struct.kernel_param = type { i8*, %struct.module*, %struct.kernel_param_ops*, i16, i8, i8, %union.anon.65 }
%union.anon.65 = type { i8* }
%struct.fb_ops = type { %struct.module*, i32 (%struct.fb_info*, i32)*, i32 (%struct.fb_info*, i32)*, i64 (%struct.fb_info*, i8*, i64, i64*)*, i64 (%struct.fb_info*, i8*, i64, i64*)*, i32 (%struct.fb_var_screeninfo*, %struct.fb_info*)*, i32 (%struct.fb_info*)*, i32 (i32, i32, i32, i32, i32, %struct.fb_info*)*, i32 (%struct.fb_cmap*, %struct.fb_info*)*, i32 (i32, %struct.fb_info*)*, i32 (%struct.fb_var_screeninfo*, %struct.fb_info*)*, void (%struct.fb_info*, %struct.fb_fillrect*)*, void (%struct.fb_info*, %struct.fb_copyarea*)*, void (%struct.fb_info*, %struct.fb_image*)*, i32 (%struct.fb_info*, %struct.fb_cursor*)*, i32 (%struct.fb_info*)*, i32 (%struct.fb_info*, i32, i64)*, i32 (%struct.fb_info*, i32, i64)*, i32 (%struct.fb_info*, %struct.vm_area_struct*)*, void (%struct.fb_info*, %struct.fb_blit_caps*, %struct.fb_var_screeninfo*)*, void (%struct.fb_info*)*, i32 (%struct.fb_info*)*, i32 (%struct.fb_info*)* }
%struct.fb_info = type { %struct.atomic_t, i32, i32, i32, %struct.mutex, %struct.mutex, %struct.fb_var_screeninfo, %struct.fb_fix_screeninfo, %struct.fb_monspecs, %struct.work_struct, %struct.fb_pixmap, %struct.fb_pixmap, %struct.fb_cmap, %struct.list_head, %struct.fb_videomode*, %struct.backlight_device*, %struct.mutex, [128 x i8], %struct.delayed_work, %struct.fb_deferred_io*, %struct.fb_ops*, %struct.device*, %struct.device*, i32, %struct.fb_tile_ops*, %union.anon.66, i64, i8*, i32, i8*, i8*, %struct.apertures_struct*, i8 }
%struct.fb_var_screeninfo = type { i32, i32, i32, i32, i32, i32, i32, i32, %struct.fb_bitfield, %struct.fb_bitfield, %struct.fb_bitfield, %struct.fb_bitfield, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i32] }
%struct.fb_bitfield = type { i32, i32, i32 }
%struct.fb_fix_screeninfo = type { [16 x i8], i64, i32, i32, i32, i32, i16, i16, i16, i32, i64, i32, i32, i16, [2 x i16] }
%struct.fb_monspecs = type { %struct.fb_chroma, %struct.fb_videomode*, [4 x i8], [14 x i8], [14 x i8], [14 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, i8, i16, i8, i8, i8, i8 }
%struct.fb_chroma = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.fb_pixmap = type { i8*, i32, i32, i32, i32, i32, i32, i32, i32, void (%struct.fb_info*, i8*, i8*, i32)*, void (%struct.fb_info*, i8*, i8*, i32)* }
%struct.fb_cmap = type { i32, i32, i16*, i16*, i16*, i16* }
%struct.fb_videomode = type { i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.backlight_device = type { %struct.backlight_properties, %struct.mutex, %struct.mutex, %struct.backlight_ops*, %struct.notifier_block, %struct.list_head, %struct.device, [32 x i8], i32 }
%struct.backlight_properties = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.backlight_ops = type { i32, i32 (%struct.backlight_device*)*, i32 (%struct.backlight_device*)*, i32 (%struct.backlight_device*, %struct.fb_info*)* }
%struct.notifier_block = type { i32 (%struct.notifier_block*, i64, i8*)*, %struct.notifier_block*, i32 }
%struct.delayed_work = type { %struct.work_struct, %struct.timer_list, %struct.workqueue_struct*, i32 }
%struct.fb_deferred_io = type { i64, %struct.mutex, %struct.list_head, void (%struct.fb_info*)*, void (%struct.fb_info*, %struct.list_head*)* }
%struct.fb_tile_ops = type { void (%struct.fb_info*, %struct.fb_tilemap*)*, void (%struct.fb_info*, %struct.fb_tilearea*)*, void (%struct.fb_info*, %struct.fb_tilerect*)*, void (%struct.fb_info*, %struct.fb_tileblit*)*, void (%struct.fb_info*, %struct.fb_tilecursor*)*, i32 (%struct.fb_info*)* }
%struct.fb_tilemap = type { i32, i32, i32, i32, i8* }
%struct.fb_tilearea = type { i32, i32, i32, i32, i32, i32 }
%struct.fb_tilerect = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.fb_tileblit = type { i32, i32, i32, i32, i32, i32, i32, i32* }
%struct.fb_tilecursor = type { i32, i32, i32, i32, i32, i32 }
%union.anon.66 = type { i8* }
%struct.apertures_struct = type { i32, [0 x %struct.aperture] }
%struct.aperture = type { i64, i64 }
%struct.fb_fillrect = type { i32, i32, i32, i32, i32, i32 }
%struct.fb_copyarea = type { i32, i32, i32, i32, i32, i32 }
%struct.fb_image = type { i32, i32, i32, i32, i32, i32, i8, i8*, %struct.fb_cmap }
%struct.fb_cursor = type { i16, i16, i16, i8*, %struct.fbcurpos, %struct.fb_image }
%struct.fbcurpos = type { i16, i16 }
%struct.fb_blit_caps = type { i32, i32, i32, i32 }
%struct.paravirt_patch_template = type { %struct.pv_init_ops, %struct.pv_time_ops, %struct.pv_cpu_ops, %struct.pv_irq_ops, %struct.pv_mmu_ops, %struct.pv_lock_ops }
%struct.pv_init_ops = type { i32 (i8, i8*, i64, i32)* }
%struct.pv_time_ops = type { i64 ()*, i64 (i32)* }
%struct.pv_cpu_ops = type { void ()*, i64 (i32)*, void (i32, i64)*, i64 ()*, void (i64)*, void (i64)*, void ()*, void (%struct.desc_ptr*)*, void (%struct.desc_ptr*)*, void (i8*, i32)*, i64 ()*, void (%struct.thread_struct*, i32)*, void (i32)*, void (%struct.desc_struct*, i32, i8*)*, void (%struct.desc_struct*, i32, i8*, i32)*, void (%struct.gate_struct*, i32, %struct.gate_struct*)*, void (%struct.desc_struct*, i32)*, void (%struct.desc_struct*, i32)*, void (i64)*, void ()*, void ()*, void ()*, void (i32*, i32*, i32*, i32*)*, i64 (i32)*, void (i32, i32, i32)*, i64 (i32, i32*)*, i32 (i32, i32, i32)*, i64 (i32)*, void ()*, void ()*, void ()*, void (%struct.task_struct*)*, void (%struct.task_struct*)* }
%struct.desc_ptr = type <{ i16, i64 }>
%struct.gate_struct = type { i16, i16, %struct.idt_bits, i16, i32, i32 }
%struct.idt_bits = type { i16 }
%struct.pv_irq_ops = type { %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void ()*, void ()* }
%struct.paravirt_callee_save = type { i8* }
%struct.pv_mmu_ops = type { void ()*, void ()*, void (i64)*, void (%struct.cpumask*, %struct.flush_tlb_info*)*, void (%struct.mmu_gather*, i8*)*, void (%struct.mm_struct*)*, %struct.paravirt_callee_save, void (i64)*, i64 ()*, void (i64)*, void (%struct.mm_struct*, %struct.mm_struct*)*, void (%struct.mm_struct*, %struct.mm_struct*)*, i32 (%struct.mm_struct*)*, void (%struct.mm_struct*, %struct.pgd_t*)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (i64)*, void (i64)*, void (i64)*, void (i64)*, void (%struct.pte_t*, i64)*, void (%struct.pmd_t*, i64)*, i64 (%struct.vm_area_struct*, i64, %struct.pte_t*)*, void (%struct.vm_area_struct*, i64, %struct.pte_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.pud_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.p4d_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.pgd_t*, i64)*, %struct.pv_lazy_ops, void (i32, i64, i64)* }
%struct.flush_tlb_info = type opaque
%struct.mmu_gather = type opaque
%struct.p4d_t = type { i64 }
%struct.pv_lazy_ops = type { void ()*, void ()*, void ()* }
%struct.pv_lock_ops = type { void (%struct.qspinlock*, i32)*, %struct.paravirt_callee_save, void (i8*, i8)*, void (i32)*, %struct.paravirt_callee_save }
%struct.qspinlock = type opaque
%struct.usb_device = type <{ i32, [16 x i8], i32, i32, i32, i32, i32, %struct.usb_tt*, i32, [2 x i32], [4 x i8], %struct.usb_device*, %struct.usb_bus*, %struct.usb_host_endpoint, %struct.device, %struct.usb_device_descriptor, [6 x i8], %struct.usb_host_bos*, %struct.usb_host_config*, %struct.usb_host_config*, [16 x %struct.usb_host_endpoint*], [16 x %struct.usb_host_endpoint*], i8**, i16, i8, i8, i8, i16, i8, i32, [4 x i8], i8*, i8*, i8*, %struct.list_head, i32, i32, %struct.atomic_t, [4 x i8], i64, i64, i8, [7 x i8], %struct.wusb_dev*, i32, i32, %struct.usb2_lpm_parameters, %struct.usb3_lpm_parameters, %struct.usb3_lpm_parameters, i32, i16, i8, i8 }>
%struct.usb_tt = type opaque
%struct.usb_bus = type { %struct.device*, %struct.device*, i32, i8*, i8, i8, i8, i32, i32, %struct.mutex, %struct.usb_devmap, %struct.usb_device*, %struct.usb_bus*, i32, i32, i32, i32 }
%struct.usb_devmap = type { [2 x i64] }
%struct.usb_device_descriptor = type { i8, i8, i16, i8, i8, i8, i8, i16, i16, i16, i8, i8, i8, i8 }
%struct.usb_host_bos = type { %struct.usb_bos_descriptor*, %struct.usb_ext_cap_descriptor*, %struct.usb_ss_cap_descriptor*, %struct.usb_ssp_cap_descriptor*, %struct.usb_ss_container_id_descriptor*, %struct.usb_ptm_cap_descriptor* }
%struct.usb_bos_descriptor = type <{ i8, i8, i16, i8 }>
%struct.usb_ext_cap_descriptor = type <{ i8, i8, i8, i32 }>
%struct.usb_ss_cap_descriptor = type { i8, i8, i8, i8, i16, i8, i8, i16 }
%struct.usb_ssp_cap_descriptor = type { i8, i8, i8, i8, i32, i16, i16, [1 x i32] }
%struct.usb_ss_container_id_descriptor = type { i8, i8, i8, i8, [16 x i8] }
%struct.usb_ptm_cap_descriptor = type { i8, i8, i8 }
%struct.usb_host_config = type { %struct.usb_config_descriptor, i8*, [16 x %struct.usb_interface_assoc_descriptor*], [32 x %struct.usb_interface*], [32 x %struct.usb_interface_cache*], i8*, i32 }
%struct.usb_config_descriptor = type <{ i8, i8, i16, i8, i8, i8, i8, i8 }>
%struct.usb_interface_cache = type { i32, %struct.kref, [0 x %struct.usb_host_interface] }
%struct.wusb_dev = type opaque
%struct.usb2_lpm_parameters = type { i32, i32 }
%struct.usb3_lpm_parameters = type { i32, i32, i32, i32 }
%struct.ufx_data = type { %struct.usb_device*, %struct.device*, %struct.fb_info*, %struct.urb_list, %struct.kref, i32, i8, %struct.delayed_work, %struct.atomic_t, %struct.atomic_t, i8*, i64, [256 x i32] }
%struct.urb_list = type { %struct.list_head, %struct.spinlock, %struct.semaphore, i32, i32, i64 }
%struct.semaphore = type { %struct.raw_spinlock, i32, %struct.list_head }
%struct.urb = type { %struct.kref, i32, i8*, %struct.atomic_t, %struct.atomic_t, %struct.list_head, %struct.list_head, %struct.usb_anchor*, %struct.usb_device*, %struct.usb_host_endpoint*, i32, i32, i32, i32, i8*, i64, %struct.scatterlist*, i32, i32, i32, i32, i8*, i64, i32, i32, i32, i32, i8*, void (%struct.urb*)*, [0 x %struct.usb_iso_packet_descriptor] }
%struct.usb_anchor = type { %struct.list_head, %struct.wait_queue_head, %struct.spinlock, %struct.atomic_t, i8 }
%struct.scatterlist = type opaque
%struct.usb_iso_packet_descriptor = type { i32, i32, i32, i32 }
%struct.urb_node = type { %struct.list_head, %struct.ufx_data*, %struct.delayed_work, %struct.urb* }
%struct.dloarea = type { i32, i32, i32, i32 }
%struct.pll_values = type { i32, i32, i32, i32, i32, i32, i32, i32 }

@__UNIQUE_ID___addressable_ufx_driver_init269 = internal global i8* bitcast (i32 ()* @ufx_driver_init to i8*), section ".discard.addressable", align 8, !dbg !0
@ufx_driver = internal global %struct.usb_driver { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 (%struct.usb_interface*, %struct.usb_device_id*)* @ufx_usb_probe, void (%struct.usb_interface*)* @ufx_usb_disconnect, i32 (%struct.usb_interface*, i32, i8*)* null, i32 (%struct.usb_interface*, i32)* null, i32 (%struct.usb_interface*)* null, i32 (%struct.usb_interface*)* null, i32 (%struct.usb_interface*)* null, i32 (%struct.usb_interface*)* null, %struct.usb_device_id* getelementptr inbounds ([3 x %struct.usb_device_id], [3 x %struct.usb_device_id]* @id_table, i32 0, i32 0), %struct.attribute_group** null, %struct.usb_dynids zeroinitializer, %struct.usbdrv_wrap zeroinitializer, i8 0 }, align 8, !dbg !4947
@__exitcall_ufx_driver_exit = internal global void ()* @ufx_driver_exit, section ".exitcall.exit", align 8, !dbg !4848
@__param_str_console = internal constant [16 x i8] c"smscufx.console\00", align 16, !dbg !5023
@param_ops_bool = external dso_local constant %struct.kernel_param_ops, align 8
@console = internal global i8 0, align 1, !dbg !4945
@__param_console = internal constant %struct.kernel_param { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__param_str_console, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_bool, i16 432, i8 -1, i8 0, %union.anon.65 { i8* @console } }, section "__param", align 8, !dbg !4853
@__UNIQUE_ID_consoletype274 = internal constant [30 x i8] c"smscufx.parmtype=console:bool\00", section ".modinfo", align 1, !dbg !4905
@__UNIQUE_ID_console275 = internal constant [60 x i8] c"smscufx.parm=console:Allow fbcon to be used on this display\00", section ".modinfo", align 1, !dbg !4910
@__param_str_fb_defio = internal constant [17 x i8] c"smscufx.fb_defio\00", align 16, !dbg !5026
@fb_defio = internal global i8 1, align 1, !dbg !5031
@__param_fb_defio = internal constant %struct.kernel_param { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__param_str_fb_defio, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_bool, i16 432, i8 -1, i8 0, %union.anon.65 { i8* @fb_defio } }, section "__param", align 8, !dbg !4915
@__UNIQUE_ID_fb_defiotype276 = internal constant [31 x i8] c"smscufx.parmtype=fb_defio:bool\00", section ".modinfo", align 1, !dbg !4917
@__UNIQUE_ID_fb_defio277 = internal constant [51 x i8] c"smscufx.parm=fb_defio:Enable fb_defio mmap support\00", section ".modinfo", align 1, !dbg !4922
@__UNIQUE_ID_author278 = internal constant [65 x i8] c"smscufx.author=Steve Glendinning <steve.glendinning@shawell.net>\00", section ".modinfo", align 1, !dbg !4927
@__UNIQUE_ID_description279 = internal constant [55 x i8] c"smscufx.description=SMSC UFX kernel framebuffer driver\00", section ".modinfo", align 1, !dbg !4932
@__UNIQUE_ID_file280 = internal constant [41 x i8] c"smscufx.file=drivers/video/fbdev/smscufx\00", section ".modinfo", align 1, !dbg !4937
@__UNIQUE_ID_license281 = internal constant [20 x i8] c"smscufx.license=GPL\00", section ".modinfo", align 1, !dbg !4942
@.str = private unnamed_addr constant [8 x i8] c"smscufx\00", align 1
@id_table = internal constant [3 x %struct.usb_device_id] [%struct.usb_device_id { i16 3, i16 1060, i16 -25344, i16 0, i16 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i64 0 }, %struct.usb_device_id { i16 3, i16 1060, i16 -25343, i16 0, i16 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i64 0 }, %struct.usb_device_id zeroinitializer], align 16, !dbg !5020
@.str.1 = private unnamed_addr constant [30 x i8] c"drivers/video/fbdev/smscufx.c\00", align 1
@.str.2 = private unnamed_addr constant [43 x i8] c"ufx_usb_probe: failed alloc of dev struct\0A\00", align 1
@.str.3 = private unnamed_addr constant [27 x i8] c"ufx_alloc_urb_list failed\0A\00", align 1
@ufx_ops = internal constant %struct.fb_ops { %struct.module* null, i32 (%struct.fb_info*, i32)* @ufx_ops_open, i32 (%struct.fb_info*, i32)* @ufx_ops_release, i64 (%struct.fb_info*, i8*, i64, i64*)* @fb_sys_read, i64 (%struct.fb_info*, i8*, i64, i64*)* @ufx_ops_write, i32 (%struct.fb_var_screeninfo*, %struct.fb_info*)* @ufx_ops_check_var, i32 (%struct.fb_info*)* @ufx_ops_set_par, i32 (i32, i32, i32, i32, i32, %struct.fb_info*)* @ufx_ops_setcolreg, i32 (%struct.fb_cmap*, %struct.fb_info*)* null, i32 (i32, %struct.fb_info*)* @ufx_ops_blank, i32 (%struct.fb_var_screeninfo*, %struct.fb_info*)* null, void (%struct.fb_info*, %struct.fb_fillrect*)* @ufx_ops_fillrect, void (%struct.fb_info*, %struct.fb_copyarea*)* @ufx_ops_copyarea, void (%struct.fb_info*, %struct.fb_image*)* @ufx_ops_imageblit, i32 (%struct.fb_info*, %struct.fb_cursor*)* null, i32 (%struct.fb_info*)* null, i32 (%struct.fb_info*, i32, i64)* @ufx_ops_ioctl, i32 (%struct.fb_info*, i32, i64)* null, i32 (%struct.fb_info*, %struct.vm_area_struct*)* @ufx_ops_mmap, void (%struct.fb_info*, %struct.fb_blit_caps*, %struct.fb_var_screeninfo*)* null, void (%struct.fb_info*)* null, i32 (%struct.fb_info*)* null, i32 (%struct.fb_info*)* null }, align 8, !dbg !5014
@.str.4 = private unnamed_addr constant [25 x i8] c"fb_alloc_cmap failed %x\0A\00", align 1
@.str.5 = private unnamed_addr constant [56 x i8] c"\014smscufx: error %d reading 0x3000 register from device\00", align 1
@.str.6 = private unnamed_addr constant [56 x i8] c"\014smscufx: error %d reading 0x3004 register from device\00", align 1
@.str.7 = private unnamed_addr constant [37 x i8] c"\014smscufx: error %d resetting device\00", align 1
@.str.8 = private unnamed_addr constant [45 x i8] c"\014smscufx: error %d configuring system clock\00", align 1
@.str.9 = private unnamed_addr constant [49 x i8] c"\014smscufx: error %d initialising DDR2 controller\00", align 1
@.str.10 = private unnamed_addr constant [48 x i8] c"\014smscufx: error %d initialising I2C controller\00", align 1
@.str.11 = private unnamed_addr constant [62 x i8] c"\014smscufx: unable to find common mode for display and adapter\00", align 1
@.str.12 = private unnamed_addr constant [45 x i8] c"\014smscufx: error %d enabling graphics engine\00", align 1
@.str.13 = private unnamed_addr constant [38 x i8] c"\014smscufx: error %d ufx_ops_check_var\00", align 1
@.str.14 = private unnamed_addr constant [36 x i8] c"\014smscufx: error %d ufx_ops_set_par\00", align 1
@.str.15 = private unnamed_addr constant [41 x i8] c"\014smscufx: error %d register_framebuffer\00", align 1
@.str.16 = private unnamed_addr constant [88 x i8] c"SMSC UDX USB device /dev/fb%d attached. %dx%d resolution. Using %dK framebuffer memory\0A\00", align 1
@kmalloc_caches = external dso_local global [3 x [14 x %struct.kmem_cache*]], align 16
@.str.17 = private unnamed_addr constant [21 x i8] c"include/linux/slab.h\00", align 1
@.str.18 = private unnamed_addr constant [56 x i8] c"\013smscufx: %s - nonzero write bulk status received: %d\0A\00", align 1
@__func__.ufx_urb_completion = private unnamed_addr constant [19 x i8] c"ufx_urb_completion\00", align 1
@pv_ops = external dso_local global %struct.paravirt_patch_template, align 8
@system_wq = external dso_local global %struct.workqueue_struct*, align 8
@sema_init.__key = internal global %struct.lock_class_key zeroinitializer, align 1, !dbg !5008
@.str.19 = private unnamed_addr constant [16 x i8] c"semaphore->lock\00", align 1
@.str.20 = private unnamed_addr constant [47 x i8] c"\014smscufx: ufx_handle_damage unable to get urb\00", align 1
@.str.21 = private unnamed_addr constant [32 x i8] c"\014smscufx: Error submitting URB\00", align 1
@.str.22 = private unnamed_addr constant [55 x i8] c"\014smscufx: wait for urb interrupted: %x available: %d\0A\00", align 1
@.str.23 = private unnamed_addr constant [36 x i8] c"\013smscufx: usb_submit_urb error %x\0A\00", align 1
@.str.24 = private unnamed_addr constant [52 x i8] c"\014smscufx: ufx_set_vid_mode error disabling RGB pad\00", align 1
@.str.25 = private unnamed_addr constant [49 x i8] c"\014smscufx: ufx_set_vid_mode error disabling VDAC\00", align 1
@.str.26 = private unnamed_addr constant [51 x i8] c"\014smscufx: ufx_set_vid_mode error blanking display\00", align 1
@.str.27 = private unnamed_addr constant [52 x i8] c"\014smscufx: ufx_set_vid_mode error disabling display\00", align 1
@.str.28 = private unnamed_addr constant [55 x i8] c"\014smscufx: ufx_set_vid_mode error configuring pixclock\00", align 1
@.str.29 = private unnamed_addr constant [49 x i8] c"\014smscufx: ufx_set_vid_mode error writing 0x2000\00", align 1
@.str.30 = private unnamed_addr constant [49 x i8] c"\014smscufx: ufx_set_vid_mode error writing 0x2008\00", align 1
@.str.31 = private unnamed_addr constant [49 x i8] c"\014smscufx: ufx_set_vid_mode error writing 0x200C\00", align 1
@.str.32 = private unnamed_addr constant [49 x i8] c"\014smscufx: ufx_set_vid_mode error writing 0x2010\00", align 1
@.str.33 = private unnamed_addr constant [49 x i8] c"\014smscufx: ufx_set_vid_mode error writing 0x2014\00", align 1
@.str.34 = private unnamed_addr constant [49 x i8] c"\014smscufx: ufx_set_vid_mode error writing 0x2018\00", align 1
@.str.35 = private unnamed_addr constant [49 x i8] c"\014smscufx: ufx_set_vid_mode error writing 0x201C\00", align 1
@.str.36 = private unnamed_addr constant [49 x i8] c"\014smscufx: ufx_set_vid_mode error writing 0x2020\00", align 1
@.str.37 = private unnamed_addr constant [49 x i8] c"\014smscufx: ufx_set_vid_mode error writing 0x2024\00", align 1
@.str.38 = private unnamed_addr constant [49 x i8] c"\014smscufx: ufx_set_vid_mode error writing 0x2028\00", align 1
@.str.39 = private unnamed_addr constant [49 x i8] c"\014smscufx: ufx_set_vid_mode error writing 0x2040\00", align 1
@.str.40 = private unnamed_addr constant [49 x i8] c"\014smscufx: ufx_set_vid_mode error writing 0x2044\00", align 1
@.str.41 = private unnamed_addr constant [49 x i8] c"\014smscufx: ufx_set_vid_mode error writing 0x2048\00", align 1
@.str.42 = private unnamed_addr constant [51 x i8] c"\014smscufx: ufx_set_vid_mode error enabling display\00", align 1
@.str.43 = private unnamed_addr constant [53 x i8] c"\014smscufx: ufx_set_vid_mode error unblanking display\00", align 1
@.str.44 = private unnamed_addr constant [51 x i8] c"\014smscufx: ufx_set_vid_mode error enabling RGB pad\00", align 1
@.str.45 = private unnamed_addr constant [48 x i8] c"\014smscufx: ufx_set_vid_mode error enabling VDAC\00", align 1
@.str.46 = private unnamed_addr constant [68 x i8] c"\014smscufx: Failed to write register index 0x%08x with value 0x%08x\0A\00", align 1
@.str.47 = private unnamed_addr constant [42 x i8] c"\014smscufx: ufx_blank error reading 0x2004\00", align 1
@.str.48 = private unnamed_addr constant [42 x i8] c"\014smscufx: ufx_blank error reading 0x2000\00", align 1
@.str.49 = private unnamed_addr constant [42 x i8] c"\014smscufx: ufx_blank error writing 0x2000\00", align 1
@.str.50 = private unnamed_addr constant [44 x i8] c"\014smscufx: ufx_disable error reading 0x2004\00", align 1
@.str.51 = private unnamed_addr constant [44 x i8] c"\014smscufx: ufx_disable error reading 0x2000\00", align 1
@.str.52 = private unnamed_addr constant [44 x i8] c"\014smscufx: ufx_disable error writing 0x2000\00", align 1
@.str.53 = private unnamed_addr constant [32 x i8] c"\014smscufx: error writing 0x7000\00", align 1
@.str.54 = private unnamed_addr constant [32 x i8] c"\014smscufx: error writing 0x7008\00", align 1
@.str.55 = private unnamed_addr constant [32 x i8] c"\014smscufx: error writing 0x7004\00", align 1
@.str.56 = private unnamed_addr constant [53 x i8] c"\014smscufx: error clearing PLL0 bypass bits in 0x7000\00", align 1
@.str.57 = private unnamed_addr constant [53 x i8] c"\014smscufx: error clearing PLL1 bypass bits in 0x7000\00", align 1
@.str.58 = private unnamed_addr constant [46 x i8] c"\014smscufx: error clearing gate bits in 0x7000\00", align 1
@.str.59 = private unnamed_addr constant [57 x i8] c"\014smscufx: ufx_reg_clear_and_set_bits error reading 0x%x\00", align 1
@.str.60 = private unnamed_addr constant [57 x i8] c"\014smscufx: ufx_reg_clear_and_set_bits error writing 0x%x\00", align 1
@.str.61 = private unnamed_addr constant [43 x i8] c"\014smscufx: ufx_enable error reading 0x2004\00", align 1
@.str.62 = private unnamed_addr constant [43 x i8] c"\014smscufx: ufx_enable error reading 0x2000\00", align 1
@.str.63 = private unnamed_addr constant [43 x i8] c"\014smscufx: ufx_enable error writing 0x2000\00", align 1
@.str.64 = private unnamed_addr constant [44 x i8] c"\014smscufx: ufx_unblank error reading 0x2004\00", align 1
@.str.65 = private unnamed_addr constant [44 x i8] c"\014smscufx: ufx_unblank error reading 0x2000\00", align 1
@.str.66 = private unnamed_addr constant [44 x i8] c"\014smscufx: ufx_unblank error writing 0x2000\00", align 1
@.str.67 = private unnamed_addr constant [28 x i8] c"include/linux/thread_info.h\00", align 1
@.str.68 = private unnamed_addr constant [38 x i8] c"Buffer overflow detected (%d < %lu)!\0A\00", align 1
@.str.69 = private unnamed_addr constant [49 x i8] c"\014smscufx: Failed to read register index 0x%08x\0A\00", align 1
@.str.70 = private unnamed_addr constant [47 x i8] c"\014smscufx: ufx_lite_reset error writing 0x3008\00", align 1
@.str.71 = private unnamed_addr constant [47 x i8] c"\014smscufx: ufx_lite_reset error reading 0x3008\00", align 1
@.str.72 = private unnamed_addr constant [32 x i8] c"\014smscufx: error writing 0x700C\00", align 1
@.str.73 = private unnamed_addr constant [32 x i8] c"\014smscufx: error writing 0x7014\00", align 1
@.str.74 = private unnamed_addr constant [32 x i8] c"\014smscufx: error writing 0x7010\00", align 1
@.str.75 = private unnamed_addr constant [48 x i8] c"\014smscufx: error clearing PLL1 bypass in 0x700C\00", align 1
@.str.76 = private unnamed_addr constant [48 x i8] c"\014smscufx: error clearing output gate in 0x700C\00", align 1
@.str.77 = private unnamed_addr constant [32 x i8] c"\014smscufx: error writing 0x0004\00", align 1
@.str.78 = private unnamed_addr constant [32 x i8] c"\014smscufx: error writing 0x0008\00", align 1
@.str.79 = private unnamed_addr constant [32 x i8] c"\014smscufx: error writing 0x000C\00", align 1
@.str.80 = private unnamed_addr constant [32 x i8] c"\014smscufx: error writing 0x0010\00", align 1
@.str.81 = private unnamed_addr constant [32 x i8] c"\014smscufx: error writing 0x0014\00", align 1
@.str.82 = private unnamed_addr constant [32 x i8] c"\014smscufx: error writing 0x0018\00", align 1
@.str.83 = private unnamed_addr constant [32 x i8] c"\014smscufx: error writing 0x001C\00", align 1
@.str.84 = private unnamed_addr constant [32 x i8] c"\014smscufx: error writing 0x0020\00", align 1
@.str.85 = private unnamed_addr constant [32 x i8] c"\014smscufx: error writing 0x0024\00", align 1
@.str.86 = private unnamed_addr constant [32 x i8] c"\014smscufx: error writing 0x0028\00", align 1
@.str.87 = private unnamed_addr constant [32 x i8] c"\014smscufx: error writing 0x002C\00", align 1
@.str.88 = private unnamed_addr constant [32 x i8] c"\014smscufx: error writing 0x0030\00", align 1
@.str.89 = private unnamed_addr constant [32 x i8] c"\014smscufx: error writing 0x0034\00", align 1
@.str.90 = private unnamed_addr constant [32 x i8] c"\014smscufx: error writing 0x0038\00", align 1
@.str.91 = private unnamed_addr constant [32 x i8] c"\014smscufx: error writing 0x003C\00", align 1
@.str.92 = private unnamed_addr constant [32 x i8] c"\014smscufx: error writing 0x0040\00", align 1
@.str.93 = private unnamed_addr constant [32 x i8] c"\014smscufx: error writing 0x0044\00", align 1
@.str.94 = private unnamed_addr constant [32 x i8] c"\014smscufx: error writing 0x0048\00", align 1
@.str.95 = private unnamed_addr constant [32 x i8] c"\014smscufx: error writing 0x004C\00", align 1
@.str.96 = private unnamed_addr constant [32 x i8] c"\014smscufx: error writing 0x005C\00", align 1
@.str.97 = private unnamed_addr constant [32 x i8] c"\014smscufx: error writing 0x0100\00", align 1
@.str.98 = private unnamed_addr constant [32 x i8] c"\014smscufx: error writing 0x0104\00", align 1
@.str.99 = private unnamed_addr constant [32 x i8] c"\014smscufx: error writing 0x0118\00", align 1
@.str.100 = private unnamed_addr constant [32 x i8] c"\014smscufx: error writing 0x0000\00", align 1
@.str.101 = private unnamed_addr constant [32 x i8] c"\014smscufx: error reading 0x0000\00", align 1
@.str.102 = private unnamed_addr constant [60 x i8] c"\013smscufx: DDR2 initialisation timed out, reg 0x0000=0x%08x\00", align 1
@.str.103 = private unnamed_addr constant [33 x i8] c"\014smscufx: failed to disable I2C\00", align 1
@.str.104 = private unnamed_addr constant [32 x i8] c"\014smscufx: error writing 0x1018\00", align 1
@.str.105 = private unnamed_addr constant [32 x i8] c"\014smscufx: error writing 0x1014\00", align 1
@.str.106 = private unnamed_addr constant [32 x i8] c"\014smscufx: error reading 0x1000\00", align 1
@.str.107 = private unnamed_addr constant [32 x i8] c"\014smscufx: error writing 0x1000\00", align 1
@.str.108 = private unnamed_addr constant [48 x i8] c"\014smscufx: error setting TX mode bits in 0x1004\00", align 1
@.str.109 = private unnamed_addr constant [32 x i8] c"\014smscufx: failed to enable I2C\00", align 1
@.str.110 = private unnamed_addr constant [57 x i8] c"\013smscufx: Unable to get valid EDID from device/display\0A\00", align 1
@.str.111 = private unnamed_addr constant [42 x i8] c"\013smscufx: Using previously queried EDID\0A\00", align 1
@.str.112 = private unnamed_addr constant [38 x i8] c"\013smscufx: Using default/backup EDID\0A\00", align 1
@vesa_modes = external dso_local constant [0 x %struct.fb_videomode], align 8
@ufx_fix = internal global %struct.fb_fix_screeninfo { [16 x i8] c"smscufx\00\00\00\00\00\00\00\00\00", i64 0, i32 0, i32 0, i32 0, i32 2, i16 0, i16 0, i16 0, i32 0, i64 0, i32 0, i32 0, i16 0, [2 x i16] zeroinitializer }, align 8, !dbg !5016
@.str.113 = private unnamed_addr constant [36 x i8] c"\013smscufx: ufx_i2c_configure failed\00", align 1
@.str.114 = private unnamed_addr constant [34 x i8] c"\014smscufx: Failed to write 0x1100\00", align 1
@.str.115 = private unnamed_addr constant [49 x i8] c"\014smscufx: Timeout waiting for I2C BUSY to clear\00", align 1
@.str.116 = private unnamed_addr constant [34 x i8] c"\014smscufx: Error reading i2c data\00", align 1
@.str.117 = private unnamed_addr constant [39 x i8] c"\014smscufx: edid data contains all 0xff\00", align 1
@.str.118 = private unnamed_addr constant [34 x i8] c"\014smscufx: failed to write 0x3010\00", align 1
@.str.119 = private unnamed_addr constant [44 x i8] c"\014smscufx: failed to set TAR bits in 0x1004\00", align 1
@.str.120 = private unnamed_addr constant [30 x i8] c"\014smscufx: 0x1100 read failed\00", align 1
@.str.121 = private unnamed_addr constant [42 x i8] c"\014smscufx: I2C read failed, 0x1100=0x%08x\00", align 1
@.str.122 = private unnamed_addr constant [56 x i8] c"\014smscufx: I2C access timed out, resetting I2C hardware\00", align 1
@.str.123 = private unnamed_addr constant [31 x i8] c"\014smscufx: 0x1100 write failed\00", align 1
@__const.ufx_var_color_format.red = private unnamed_addr constant %struct.fb_bitfield { i32 11, i32 5, i32 0 }, align 4
@__const.ufx_var_color_format.green = private unnamed_addr constant %struct.fb_bitfield { i32 5, i32 6, i32 0 }, align 4
@__const.ufx_var_color_format.blue = private unnamed_addr constant %struct.fb_bitfield { i32 0, i32 5, i32 0 }, align 4
@llvm.used = appending global [13 x i8*] [i8* bitcast (i8** @__UNIQUE_ID___addressable_ufx_driver_init269 to i8*), i8* bitcast (void ()* @ufx_driver_exit to i8*), i8* bitcast (void ()** @__exitcall_ufx_driver_exit to i8*), i8* bitcast (%struct.kernel_param* @__param_console to i8*), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @__UNIQUE_ID_consoletype274, i32 0, i32 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @__UNIQUE_ID_console275, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_fb_defio to i8*), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @__UNIQUE_ID_fb_defiotype276, i32 0, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @__UNIQUE_ID_fb_defio277, i32 0, i32 0), i8* getelementptr inbounds ([65 x i8], [65 x i8]* @__UNIQUE_ID_author278, i32 0, i32 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @__UNIQUE_ID_description279, i32 0, i32 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @__UNIQUE_ID_file280, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__UNIQUE_ID_license281, i32 0, i32 0)], section "llvm.metadata"

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal i32 @ufx_driver_init() #0 section ".init.text" !dbg !5039 {
entry:
  %call = call i32 @usb_register_driver(%struct.usb_driver* @ufx_driver, %struct.module* null, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0)) #11, !dbg !5042
  ret i32 %call, !dbg !5042
}

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal void @ufx_driver_exit() #0 section ".exit.text" !dbg !5043 {
entry:
  call void @usb_deregister(%struct.usb_driver* @ufx_driver) #11, !dbg !5044
  ret void, !dbg !5044
}

; Function Attrs: noredzone
declare dso_local void @usb_deregister(%struct.usb_driver*) #1

; Function Attrs: noredzone
declare dso_local i32 @usb_register_driver(%struct.usb_driver*, %struct.module*, i8*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ufx_usb_probe(%struct.usb_interface* %interface, %struct.usb_device_id* %id) #2 !dbg !5045 {
entry:
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !5046, metadata !DIExpression()), !dbg !5052
  %i.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i.i, metadata !5057, metadata !DIExpression()), !dbg !5058
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !5059, metadata !DIExpression()), !dbg !5067
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !5069, metadata !DIExpression()), !dbg !5070
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !5071, metadata !DIExpression()), !dbg !5072
  %i.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i, metadata !5073, metadata !DIExpression()), !dbg !5074
  %retval = alloca i32, align 4
  %interface.addr = alloca %struct.usb_interface*, align 8
  %id.addr = alloca %struct.usb_device_id*, align 8
  %usbdev = alloca %struct.usb_device*, align 8
  %dev = alloca %struct.ufx_data*, align 8
  %info = alloca %struct.fb_info*, align 8
  %retval1 = alloca i32, align 4
  %id_rev = alloca i32, align 4
  %fpga_rev = alloca i32, align 4
  %.compoundliteral = alloca %struct.atomic64_t, align 8
  store %struct.usb_interface* %interface, %struct.usb_interface** %interface.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_interface** %interface.addr, metadata !5075, metadata !DIExpression()), !dbg !5076
  store %struct.usb_device_id* %id, %struct.usb_device_id** %id.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_device_id** %id.addr, metadata !5077, metadata !DIExpression()), !dbg !5078
  call void @llvm.dbg.declare(metadata %struct.usb_device** %usbdev, metadata !5079, metadata !DIExpression()), !dbg !5080
  call void @llvm.dbg.declare(metadata %struct.ufx_data** %dev, metadata !5081, metadata !DIExpression()), !dbg !5082
  call void @llvm.dbg.declare(metadata %struct.fb_info** %info, metadata !5083, metadata !DIExpression()), !dbg !5084
  call void @llvm.dbg.declare(metadata i32* %retval1, metadata !5085, metadata !DIExpression()), !dbg !5086
  call void @llvm.dbg.declare(metadata i32* %id_rev, metadata !5087, metadata !DIExpression()), !dbg !5088
  call void @llvm.dbg.declare(metadata i32* %fpga_rev, metadata !5089, metadata !DIExpression()), !dbg !5090
  %0 = load %struct.usb_interface*, %struct.usb_interface** %interface.addr, align 8, !dbg !5091
  %call = call %struct.usb_device* @interface_to_usbdev(%struct.usb_interface* %0) #11, !dbg !5092
  store %struct.usb_device* %call, %struct.usb_device** %usbdev, align 8, !dbg !5093
  br label %do.body, !dbg !5094

do.body:                                          ; preds = %entry
  %1 = load %struct.usb_device*, %struct.usb_device** %usbdev, align 8, !dbg !5095
  %tobool = icmp ne %struct.usb_device* %1, null, !dbg !5095
  %lnot = xor i1 %tobool, true, !dbg !5095
  %lnot2 = xor i1 %lnot, true, !dbg !5095
  %lnot3 = xor i1 %lnot2, true, !dbg !5095
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !5095
  %conv = sext i32 %lnot.ext to i64, !dbg !5095
  %tobool4 = icmp ne i64 %conv, 0, !dbg !5095
  br i1 %tobool4, label %if.then, label %if.end, !dbg !5098

if.then:                                          ; preds = %do.body
  br label %do.body5, !dbg !5095

do.body5:                                         ; preds = %if.then
  br label %do.body6, !dbg !5099

do.body6:                                         ; preds = %do.body5
  br label %do.end, !dbg !5101

do.end:                                           ; preds = %do.body6
  br label %do.body7, !dbg !5099

do.body7:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.1, i64 0, i64 0), i32 1618, i32 0, i64 12) #10, !dbg !5103, !srcloc !5105
  br label %do.end8, !dbg !5103

do.end8:                                          ; preds = %do.body7
  br label %do.body9, !dbg !5099

do.body9:                                         ; preds = %do.end8
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 268) #10, !dbg !5106, !srcloc !5109
  unreachable, !dbg !5110

do.end10:                                         ; No predecessors!
  br label %do.end11, !dbg !5099

do.end11:                                         ; preds = %do.end10
  br label %if.end, !dbg !5099

if.end:                                           ; preds = %do.end11, %do.body
  br label %do.end12, !dbg !5098

do.end12:                                         ; preds = %if.end
  %call13 = call i8* @kzalloc(i64 1232, i32 3264) #11, !dbg !5111
  %2 = bitcast i8* %call13 to %struct.ufx_data*, !dbg !5111
  store %struct.ufx_data* %2, %struct.ufx_data** %dev, align 8, !dbg !5112
  %3 = load %struct.ufx_data*, %struct.ufx_data** %dev, align 8, !dbg !5113
  %cmp = icmp eq %struct.ufx_data* %3, null, !dbg !5115
  br i1 %cmp, label %if.then15, label %if.end17, !dbg !5116

if.then15:                                        ; preds = %do.end12
  %4 = load %struct.usb_device*, %struct.usb_device** %usbdev, align 8, !dbg !5117
  %dev16 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %4, i32 0, i32 14, !dbg !5117
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev16, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.2, i64 0, i64 0)) #12, !dbg !5117
  store i32 -12, i32* %retval, align 4, !dbg !5119
  br label %return, !dbg !5119

if.end17:                                         ; preds = %do.end12
  %5 = load %struct.ufx_data*, %struct.ufx_data** %dev, align 8, !dbg !5120
  %kref = getelementptr inbounds %struct.ufx_data, %struct.ufx_data* %5, i32 0, i32 4, !dbg !5121
  call void @kref_init(%struct.kref* %kref) #11, !dbg !5122
  %6 = load %struct.ufx_data*, %struct.ufx_data** %dev, align 8, !dbg !5123
  %kref18 = getelementptr inbounds %struct.ufx_data, %struct.ufx_data* %6, i32 0, i32 4, !dbg !5124
  call void @kref_get(%struct.kref* %kref18) #11, !dbg !5125
  %7 = load %struct.usb_device*, %struct.usb_device** %usbdev, align 8, !dbg !5126
  %8 = load %struct.ufx_data*, %struct.ufx_data** %dev, align 8, !dbg !5127
  %udev = getelementptr inbounds %struct.ufx_data, %struct.ufx_data* %8, i32 0, i32 0, !dbg !5128
  store %struct.usb_device* %7, %struct.usb_device** %udev, align 8, !dbg !5129
  %9 = load %struct.usb_device*, %struct.usb_device** %usbdev, align 8, !dbg !5130
  %dev19 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %9, i32 0, i32 14, !dbg !5131
  %10 = load %struct.ufx_data*, %struct.ufx_data** %dev, align 8, !dbg !5132
  %gdev = getelementptr inbounds %struct.ufx_data, %struct.ufx_data* %10, i32 0, i32 1, !dbg !5133
  store %struct.device* %dev19, %struct.device** %gdev, align 8, !dbg !5134
  %11 = load %struct.usb_interface*, %struct.usb_interface** %interface.addr, align 8, !dbg !5135
  %12 = load %struct.ufx_data*, %struct.ufx_data** %dev, align 8, !dbg !5136
  %13 = bitcast %struct.ufx_data* %12 to i8*, !dbg !5136
  call void @usb_set_intfdata(%struct.usb_interface* %11, i8* %13) #11, !dbg !5137
  %14 = load %struct.ufx_data*, %struct.ufx_data** %dev, align 8, !dbg !5138
  %call20 = call i32 @ufx_alloc_urb_list(%struct.ufx_data* %14, i32 4, i64 65024) #11, !dbg !5140
  %tobool21 = icmp ne i32 %call20, 0, !dbg !5140
  br i1 %tobool21, label %if.end24, label %if.then22, !dbg !5141

if.then22:                                        ; preds = %if.end17
  %15 = load %struct.ufx_data*, %struct.ufx_data** %dev, align 8, !dbg !5142
  %gdev23 = getelementptr inbounds %struct.ufx_data, %struct.ufx_data* %15, i32 0, i32 1, !dbg !5142
  %16 = load %struct.device*, %struct.device** %gdev23, align 8, !dbg !5142
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %16, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.3, i64 0, i64 0)) #12, !dbg !5142
  br label %e_nomem, !dbg !5144

if.end24:                                         ; preds = %if.end17
  %17 = load %struct.usb_device*, %struct.usb_device** %usbdev, align 8, !dbg !5145
  %dev25 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %17, i32 0, i32 14, !dbg !5146
  %call26 = call %struct.fb_info* @framebuffer_alloc(i64 0, %struct.device* %dev25) #11, !dbg !5147
  store %struct.fb_info* %call26, %struct.fb_info** %info, align 8, !dbg !5148
  %18 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !5149
  %tobool27 = icmp ne %struct.fb_info* %18, null, !dbg !5149
  br i1 %tobool27, label %if.end29, label %if.then28, !dbg !5151

if.then28:                                        ; preds = %if.end24
  br label %e_nomem, !dbg !5152

if.end29:                                         ; preds = %if.end24
  %19 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !5153
  %20 = load %struct.ufx_data*, %struct.ufx_data** %dev, align 8, !dbg !5154
  %info30 = getelementptr inbounds %struct.ufx_data, %struct.ufx_data* %20, i32 0, i32 2, !dbg !5155
  store %struct.fb_info* %19, %struct.fb_info** %info30, align 8, !dbg !5156
  %21 = load %struct.ufx_data*, %struct.ufx_data** %dev, align 8, !dbg !5157
  %22 = bitcast %struct.ufx_data* %21 to i8*, !dbg !5157
  %23 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !5158
  %par = getelementptr inbounds %struct.fb_info, %struct.fb_info* %23, i32 0, i32 30, !dbg !5159
  store i8* %22, i8** %par, align 8, !dbg !5160
  %24 = load %struct.ufx_data*, %struct.ufx_data** %dev, align 8, !dbg !5161
  %pseudo_palette = getelementptr inbounds %struct.ufx_data, %struct.ufx_data* %24, i32 0, i32 12, !dbg !5162
  %arraydecay = getelementptr inbounds [256 x i32], [256 x i32]* %pseudo_palette, i64 0, i64 0, !dbg !5161
  %25 = bitcast i32* %arraydecay to i8*, !dbg !5161
  %26 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !5163
  %pseudo_palette31 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %26, i32 0, i32 27, !dbg !5164
  store i8* %25, i8** %pseudo_palette31, align 8, !dbg !5165
  %27 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !5166
  %fbops = getelementptr inbounds %struct.fb_info, %struct.fb_info* %27, i32 0, i32 20, !dbg !5167
  store %struct.fb_ops* @ufx_ops, %struct.fb_ops** %fbops, align 8, !dbg !5168
  %28 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !5169
  %cmap = getelementptr inbounds %struct.fb_info, %struct.fb_info* %28, i32 0, i32 12, !dbg !5170
  %call32 = call i32 @fb_alloc_cmap(%struct.fb_cmap* %cmap, i32 256, i32 0) #11, !dbg !5171
  store i32 %call32, i32* %retval1, align 4, !dbg !5172
  %29 = load i32, i32* %retval1, align 4, !dbg !5173
  %cmp33 = icmp slt i32 %29, 0, !dbg !5175
  br i1 %cmp33, label %if.then35, label %if.end37, !dbg !5176

if.then35:                                        ; preds = %if.end29
  %30 = load %struct.ufx_data*, %struct.ufx_data** %dev, align 8, !dbg !5177
  %gdev36 = getelementptr inbounds %struct.ufx_data, %struct.ufx_data* %30, i32 0, i32 1, !dbg !5177
  %31 = load %struct.device*, %struct.device** %gdev36, align 8, !dbg !5177
  %32 = load i32, i32* %retval1, align 4, !dbg !5177
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %31, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.4, i64 0, i64 0), i32 %32) #12, !dbg !5177
  br label %destroy_modedb, !dbg !5179

if.end37:                                         ; preds = %if.end29
  br label %do.body38, !dbg !5180

do.body38:                                        ; preds = %if.end37
  br label %do.body39, !dbg !5181

do.body39:                                        ; preds = %do.body38
  %33 = load %struct.ufx_data*, %struct.ufx_data** %dev, align 8, !dbg !5183
  %free_framebuffer_work = getelementptr inbounds %struct.ufx_data, %struct.ufx_data* %33, i32 0, i32 7, !dbg !5183
  %work = getelementptr inbounds %struct.delayed_work, %struct.delayed_work* %free_framebuffer_work, i32 0, i32 0, !dbg !5183
  call void @__init_work(%struct.work_struct* %work, i32 0) #11, !dbg !5183
  %34 = load %struct.ufx_data*, %struct.ufx_data** %dev, align 8, !dbg !5183
  %free_framebuffer_work40 = getelementptr inbounds %struct.ufx_data, %struct.ufx_data* %34, i32 0, i32 7, !dbg !5183
  %work41 = getelementptr inbounds %struct.delayed_work, %struct.delayed_work* %free_framebuffer_work40, i32 0, i32 0, !dbg !5183
  %data = getelementptr inbounds %struct.work_struct, %struct.work_struct* %work41, i32 0, i32 0, !dbg !5183
  %counter = getelementptr inbounds %struct.atomic64_t, %struct.atomic64_t* %.compoundliteral, i32 0, i32 0, !dbg !5183
  store i64 68719476704, i64* %counter, align 8, !dbg !5183
  %35 = bitcast %struct.atomic64_t* %data to i8*, !dbg !5183
  %36 = bitcast %struct.atomic64_t* %.compoundliteral to i8*, !dbg !5183
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %35, i8* align 8 %36, i64 8, i1 false), !dbg !5183
  %37 = load %struct.ufx_data*, %struct.ufx_data** %dev, align 8, !dbg !5183
  %free_framebuffer_work42 = getelementptr inbounds %struct.ufx_data, %struct.ufx_data* %37, i32 0, i32 7, !dbg !5183
  %work43 = getelementptr inbounds %struct.delayed_work, %struct.delayed_work* %free_framebuffer_work42, i32 0, i32 0, !dbg !5183
  %entry44 = getelementptr inbounds %struct.work_struct, %struct.work_struct* %work43, i32 0, i32 1, !dbg !5183
  call void @INIT_LIST_HEAD(%struct.list_head* %entry44) #11, !dbg !5183
  %38 = load %struct.ufx_data*, %struct.ufx_data** %dev, align 8, !dbg !5183
  %free_framebuffer_work45 = getelementptr inbounds %struct.ufx_data, %struct.ufx_data* %38, i32 0, i32 7, !dbg !5183
  %work46 = getelementptr inbounds %struct.delayed_work, %struct.delayed_work* %free_framebuffer_work45, i32 0, i32 0, !dbg !5183
  %func = getelementptr inbounds %struct.work_struct, %struct.work_struct* %work46, i32 0, i32 2, !dbg !5183
  store void (%struct.work_struct*)* @ufx_free_framebuffer_work, void (%struct.work_struct*)** %func, align 8, !dbg !5183
  br label %do.end47, !dbg !5183

do.end47:                                         ; preds = %do.body39
  %39 = load %struct.ufx_data*, %struct.ufx_data** %dev, align 8, !dbg !5181
  %free_framebuffer_work48 = getelementptr inbounds %struct.ufx_data, %struct.ufx_data* %39, i32 0, i32 7, !dbg !5181
  %timer = getelementptr inbounds %struct.delayed_work, %struct.delayed_work* %free_framebuffer_work48, i32 0, i32 1, !dbg !5181
  call void @init_timer_key(%struct.timer_list* %timer, void (%struct.timer_list*)* @delayed_work_timer_fn, i32 2097152, i8* null, %struct.lock_class_key* null) #11, !dbg !5181
  br label %do.end49, !dbg !5181

do.end49:                                         ; preds = %do.end47
  %40 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !5185
  %modelist = getelementptr inbounds %struct.fb_info, %struct.fb_info* %40, i32 0, i32 13, !dbg !5186
  call void @INIT_LIST_HEAD(%struct.list_head* %modelist) #11, !dbg !5187
  %41 = load %struct.ufx_data*, %struct.ufx_data** %dev, align 8, !dbg !5188
  %call50 = call i32 @ufx_reg_read(%struct.ufx_data* %41, i32 12288, i32* %id_rev) #11, !dbg !5189
  store i32 %call50, i32* %retval1, align 4, !dbg !5190
  %42 = load i32, i32* %retval1, align 4, !dbg !5191
  %cmp51 = icmp slt i32 %42, 0, !dbg !5191
  br i1 %cmp51, label %if.then53, label %if.end55, !dbg !5194

if.then53:                                        ; preds = %do.end49
  %43 = load i32, i32* %retval1, align 4, !dbg !5195
  %call54 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.5, i64 0, i64 0), i32 %43) #12, !dbg !5195
  br label %error, !dbg !5195

if.end55:                                         ; preds = %do.end49
  %44 = load %struct.ufx_data*, %struct.ufx_data** %dev, align 8, !dbg !5197
  %call56 = call i32 @ufx_reg_read(%struct.ufx_data* %44, i32 12292, i32* %fpga_rev) #11, !dbg !5198
  store i32 %call56, i32* %retval1, align 4, !dbg !5199
  %45 = load i32, i32* %retval1, align 4, !dbg !5200
  %cmp57 = icmp slt i32 %45, 0, !dbg !5200
  br i1 %cmp57, label %if.then59, label %if.end61, !dbg !5203

if.then59:                                        ; preds = %if.end55
  %46 = load i32, i32* %retval1, align 4, !dbg !5204
  %call60 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.6, i64 0, i64 0), i32 %46) #12, !dbg !5204
  br label %error, !dbg !5204

if.end61:                                         ; preds = %if.end55
  %47 = load %struct.ufx_data*, %struct.ufx_data** %dev, align 8, !dbg !5206
  %call62 = call i32 @ufx_lite_reset(%struct.ufx_data* %47) #11, !dbg !5207
  store i32 %call62, i32* %retval1, align 4, !dbg !5208
  %48 = load i32, i32* %retval1, align 4, !dbg !5209
  %cmp63 = icmp slt i32 %48, 0, !dbg !5209
  br i1 %cmp63, label %if.then65, label %if.end67, !dbg !5212

if.then65:                                        ; preds = %if.end61
  %49 = load i32, i32* %retval1, align 4, !dbg !5213
  %call66 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.7, i64 0, i64 0), i32 %49) #12, !dbg !5213
  br label %error, !dbg !5213

if.end67:                                         ; preds = %if.end61
  %50 = load %struct.ufx_data*, %struct.ufx_data** %dev, align 8, !dbg !5215
  %call68 = call i32 @ufx_config_sys_clk(%struct.ufx_data* %50) #11, !dbg !5216
  store i32 %call68, i32* %retval1, align 4, !dbg !5217
  %51 = load i32, i32* %retval1, align 4, !dbg !5218
  %cmp69 = icmp slt i32 %51, 0, !dbg !5218
  br i1 %cmp69, label %if.then71, label %if.end73, !dbg !5221

if.then71:                                        ; preds = %if.end67
  %52 = load i32, i32* %retval1, align 4, !dbg !5222
  %call72 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.8, i64 0, i64 0), i32 %52) #12, !dbg !5222
  br label %error, !dbg !5222

if.end73:                                         ; preds = %if.end67
  %53 = load %struct.ufx_data*, %struct.ufx_data** %dev, align 8, !dbg !5224
  %call74 = call i32 @ufx_config_ddr2(%struct.ufx_data* %53) #11, !dbg !5225
  store i32 %call74, i32* %retval1, align 4, !dbg !5226
  %54 = load i32, i32* %retval1, align 4, !dbg !5227
  %cmp75 = icmp slt i32 %54, 0, !dbg !5227
  br i1 %cmp75, label %if.then77, label %if.end79, !dbg !5230

if.then77:                                        ; preds = %if.end73
  %55 = load i32, i32* %retval1, align 4, !dbg !5231
  %call78 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.9, i64 0, i64 0), i32 %55) #12, !dbg !5231
  br label %error, !dbg !5231

if.end79:                                         ; preds = %if.end73
  %56 = load %struct.ufx_data*, %struct.ufx_data** %dev, align 8, !dbg !5233
  %call80 = call i32 @ufx_i2c_init(%struct.ufx_data* %56) #11, !dbg !5234
  store i32 %call80, i32* %retval1, align 4, !dbg !5235
  %57 = load i32, i32* %retval1, align 4, !dbg !5236
  %cmp81 = icmp slt i32 %57, 0, !dbg !5236
  br i1 %cmp81, label %if.then83, label %if.end85, !dbg !5239

if.then83:                                        ; preds = %if.end79
  %58 = load i32, i32* %retval1, align 4, !dbg !5240
  %call84 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.10, i64 0, i64 0), i32 %58) #12, !dbg !5240
  br label %error, !dbg !5240

if.end85:                                         ; preds = %if.end79
  %59 = load %struct.ufx_data*, %struct.ufx_data** %dev, align 8, !dbg !5242
  %60 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !5243
  %call86 = call i32 @ufx_setup_modes(%struct.ufx_data* %59, %struct.fb_info* %60, i8* null, i64 0) #11, !dbg !5244
  store i32 %call86, i32* %retval1, align 4, !dbg !5245
  %61 = load i32, i32* %retval1, align 4, !dbg !5246
  %cmp87 = icmp slt i32 %61, 0, !dbg !5246
  br i1 %cmp87, label %if.then89, label %if.end91, !dbg !5249

if.then89:                                        ; preds = %if.end85
  %call90 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.11, i64 0, i64 0)) #12, !dbg !5250
  br label %error, !dbg !5250

if.end91:                                         ; preds = %if.end85
  %62 = load %struct.ufx_data*, %struct.ufx_data** %dev, align 8, !dbg !5252
  %call92 = call i32 @ufx_reg_set_bits(%struct.ufx_data* %62, i32 16384, i32 1) #11, !dbg !5253
  store i32 %call92, i32* %retval1, align 4, !dbg !5254
  %63 = load i32, i32* %retval1, align 4, !dbg !5255
  %cmp93 = icmp slt i32 %63, 0, !dbg !5255
  br i1 %cmp93, label %if.then95, label %if.end97, !dbg !5258

if.then95:                                        ; preds = %if.end91
  %64 = load i32, i32* %retval1, align 4, !dbg !5259
  %call96 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.12, i64 0, i64 0), i32 %64) #12, !dbg !5259
  br label %error, !dbg !5259

if.end97:                                         ; preds = %if.end91
  %65 = load %struct.ufx_data*, %struct.ufx_data** %dev, align 8, !dbg !5261
  %usb_active = getelementptr inbounds %struct.ufx_data, %struct.ufx_data* %65, i32 0, i32 8, !dbg !5262
  store %struct.atomic_t* %usb_active, %struct.atomic_t** %v.addr.i, align 8
  store i32 1, i32* %i.addr.i, align 4
  %66 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !5263
  %67 = bitcast %struct.atomic_t* %66 to i8*, !dbg !5263
  store i8* %67, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %68 = load i8*, i8** %v.addr.i.i, align 8, !dbg !5264
  %69 = load i64, i64* %size.addr.i.i, align 8, !dbg !5265
  %conv.i.i = trunc i64 %69 to i32, !dbg !5265
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %68, i32 %conv.i.i) #13, !dbg !5266
  %70 = load i8*, i8** %v.addr.i.i, align 8, !dbg !5267
  %71 = load i64, i64* %size.addr.i.i, align 8, !dbg !5267
  call void @kcsan_check_access(i8* %70, i64 %71, i32 5) #13, !dbg !5267
  %72 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !5268
  %73 = load i32, i32* %i.addr.i, align 4, !dbg !5269
  store %struct.atomic_t* %72, %struct.atomic_t** %v.addr.i1.i, align 8
  store i32 %73, i32* %i.addr.i.i, align 4
  %74 = load i32, i32* %i.addr.i.i, align 4, !dbg !5270
  %75 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !5270
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %75, i32 0, i32 0, !dbg !5270
  store volatile i32 %74, i32* %counter.i.i, align 4, !dbg !5270
  %76 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !5272
  %var = getelementptr inbounds %struct.fb_info, %struct.fb_info* %76, i32 0, i32 6, !dbg !5273
  %77 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !5274
  %call98 = call i32 @ufx_ops_check_var(%struct.fb_var_screeninfo* %var, %struct.fb_info* %77) #11, !dbg !5275
  store i32 %call98, i32* %retval1, align 4, !dbg !5276
  %78 = load i32, i32* %retval1, align 4, !dbg !5277
  %cmp99 = icmp slt i32 %78, 0, !dbg !5277
  br i1 %cmp99, label %if.then101, label %if.end103, !dbg !5280

if.then101:                                       ; preds = %if.end97
  %79 = load i32, i32* %retval1, align 4, !dbg !5281
  %call102 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.13, i64 0, i64 0), i32 %79) #12, !dbg !5281
  br label %error, !dbg !5281

if.end103:                                        ; preds = %if.end97
  %80 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !5283
  %call104 = call i32 @ufx_ops_set_par(%struct.fb_info* %80) #11, !dbg !5284
  store i32 %call104, i32* %retval1, align 4, !dbg !5285
  %81 = load i32, i32* %retval1, align 4, !dbg !5286
  %cmp105 = icmp slt i32 %81, 0, !dbg !5286
  br i1 %cmp105, label %if.then107, label %if.end109, !dbg !5289

if.then107:                                       ; preds = %if.end103
  %82 = load i32, i32* %retval1, align 4, !dbg !5290
  %call108 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.14, i64 0, i64 0), i32 %82) #12, !dbg !5290
  br label %error, !dbg !5290

if.end109:                                        ; preds = %if.end103
  %83 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !5292
  %call110 = call i32 @register_framebuffer(%struct.fb_info* %83) #11, !dbg !5293
  store i32 %call110, i32* %retval1, align 4, !dbg !5294
  %84 = load i32, i32* %retval1, align 4, !dbg !5295
  %cmp111 = icmp slt i32 %84, 0, !dbg !5295
  br i1 %cmp111, label %if.then113, label %if.end115, !dbg !5298

if.then113:                                       ; preds = %if.end109
  %85 = load i32, i32* %retval1, align 4, !dbg !5299
  %call114 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.15, i64 0, i64 0), i32 %85) #12, !dbg !5299
  br label %error, !dbg !5299

if.end115:                                        ; preds = %if.end109
  %86 = load %struct.ufx_data*, %struct.ufx_data** %dev, align 8, !dbg !5301
  %gdev116 = getelementptr inbounds %struct.ufx_data, %struct.ufx_data* %86, i32 0, i32 1, !dbg !5301
  %87 = load %struct.device*, %struct.device** %gdev116, align 8, !dbg !5301
  %88 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !5301
  %node = getelementptr inbounds %struct.fb_info, %struct.fb_info* %88, i32 0, i32 1, !dbg !5301
  %89 = load i32, i32* %node, align 4, !dbg !5301
  %90 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !5301
  %var117 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %90, i32 0, i32 6, !dbg !5301
  %xres = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %var117, i32 0, i32 0, !dbg !5301
  %91 = load i32, i32* %xres, align 8, !dbg !5301
  %92 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !5301
  %var118 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %92, i32 0, i32 6, !dbg !5301
  %yres = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %var118, i32 0, i32 1, !dbg !5301
  %93 = load i32, i32* %yres, align 4, !dbg !5301
  %94 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !5301
  %fix = getelementptr inbounds %struct.fb_info, %struct.fb_info* %94, i32 0, i32 7, !dbg !5301
  %smem_len = getelementptr inbounds %struct.fb_fix_screeninfo, %struct.fb_fix_screeninfo* %fix, i32 0, i32 2, !dbg !5301
  %95 = load i32, i32* %smem_len, align 8, !dbg !5301
  %shr = lshr i32 %95, 10, !dbg !5301
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %87, i8* getelementptr inbounds ([88 x i8], [88 x i8]* @.str.16, i64 0, i64 0), i32 %89, i32 %91, i32 %93, i32 %shr) #12, !dbg !5301
  store i32 0, i32* %retval, align 4, !dbg !5302
  br label %return, !dbg !5302

error:                                            ; preds = %if.then113, %if.then107, %if.then101, %if.then95, %if.then89, %if.then83, %if.then77, %if.then71, %if.then65, %if.then59, %if.then53
  call void @llvm.dbg.label(metadata !5303), !dbg !5304
  %96 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !5305
  %cmap119 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %96, i32 0, i32 12, !dbg !5306
  call void @fb_dealloc_cmap(%struct.fb_cmap* %cmap119) #11, !dbg !5307
  br label %destroy_modedb, !dbg !5307

destroy_modedb:                                   ; preds = %error, %if.then35
  call void @llvm.dbg.label(metadata !5308), !dbg !5309
  %97 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !5310
  %monspecs = getelementptr inbounds %struct.fb_info, %struct.fb_info* %97, i32 0, i32 8, !dbg !5311
  %modedb = getelementptr inbounds %struct.fb_monspecs, %struct.fb_monspecs* %monspecs, i32 0, i32 1, !dbg !5312
  %98 = load %struct.fb_videomode*, %struct.fb_videomode** %modedb, align 8, !dbg !5312
  call void @fb_destroy_modedb(%struct.fb_videomode* %98) #11, !dbg !5313
  %99 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !5314
  %100 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %99, i32 0, i32 25, !dbg !5315
  %screen_base = bitcast %union.anon.66* %100 to i8**, !dbg !5315
  %101 = load i8*, i8** %screen_base, align 8, !dbg !5315
  call void @vfree(i8* %101) #11, !dbg !5316
  %102 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !5317
  %modelist120 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %102, i32 0, i32 13, !dbg !5318
  call void @fb_destroy_modelist(%struct.list_head* %modelist120) #11, !dbg !5319
  %103 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !5320
  call void @framebuffer_release(%struct.fb_info* %103) #11, !dbg !5321
  br label %put_ref, !dbg !5321

put_ref:                                          ; preds = %e_nomem, %destroy_modedb
  call void @llvm.dbg.label(metadata !5322), !dbg !5323
  %104 = load %struct.ufx_data*, %struct.ufx_data** %dev, align 8, !dbg !5324
  %kref121 = getelementptr inbounds %struct.ufx_data, %struct.ufx_data* %104, i32 0, i32 4, !dbg !5325
  %call122 = call i32 @kref_put(%struct.kref* %kref121, void (%struct.kref*)* @ufx_free) #11, !dbg !5326
  %105 = load %struct.ufx_data*, %struct.ufx_data** %dev, align 8, !dbg !5327
  %kref123 = getelementptr inbounds %struct.ufx_data, %struct.ufx_data* %105, i32 0, i32 4, !dbg !5328
  %call124 = call i32 @kref_put(%struct.kref* %kref123, void (%struct.kref*)* @ufx_free) #11, !dbg !5329
  %106 = load i32, i32* %retval1, align 4, !dbg !5330
  store i32 %106, i32* %retval, align 4, !dbg !5331
  br label %return, !dbg !5331

e_nomem:                                          ; preds = %if.then28, %if.then22
  call void @llvm.dbg.label(metadata !5332), !dbg !5333
  store i32 -12, i32* %retval1, align 4, !dbg !5334
  br label %put_ref, !dbg !5335

return:                                           ; preds = %put_ref, %if.end115, %if.then15
  %107 = load i32, i32* %retval, align 4, !dbg !5336
  ret i32 %107, !dbg !5336
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ufx_usb_disconnect(%struct.usb_interface* %interface) #2 !dbg !5337 {
entry:
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !5046, metadata !DIExpression()), !dbg !5338
  %i.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i.i, metadata !5057, metadata !DIExpression()), !dbg !5341
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !5059, metadata !DIExpression()), !dbg !5342
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !5069, metadata !DIExpression()), !dbg !5344
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !5071, metadata !DIExpression()), !dbg !5345
  %i.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i, metadata !5073, metadata !DIExpression()), !dbg !5346
  %interface.addr = alloca %struct.usb_interface*, align 8
  %dev = alloca %struct.ufx_data*, align 8
  %tmp = alloca i32, align 4
  store %struct.usb_interface* %interface, %struct.usb_interface** %interface.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_interface** %interface.addr, metadata !5347, metadata !DIExpression()), !dbg !5348
  call void @llvm.dbg.declare(metadata %struct.ufx_data** %dev, metadata !5349, metadata !DIExpression()), !dbg !5350
  %0 = load %struct.usb_interface*, %struct.usb_interface** %interface.addr, align 8, !dbg !5351
  %call = call i8* @usb_get_intfdata(%struct.usb_interface* %0) #11, !dbg !5352
  %1 = bitcast i8* %call to %struct.ufx_data*, !dbg !5352
  store %struct.ufx_data* %1, %struct.ufx_data** %dev, align 8, !dbg !5353
  store i32 0, i32* %tmp, align 4, !dbg !5354
  %2 = load i32, i32* %tmp, align 4, !dbg !5357
  %3 = load %struct.ufx_data*, %struct.ufx_data** %dev, align 8, !dbg !5358
  %virtualized = getelementptr inbounds %struct.ufx_data, %struct.ufx_data* %3, i32 0, i32 6, !dbg !5359
  store i8 1, i8* %virtualized, align 8, !dbg !5360
  %4 = load %struct.ufx_data*, %struct.ufx_data** %dev, align 8, !dbg !5361
  %usb_active = getelementptr inbounds %struct.ufx_data, %struct.ufx_data* %4, i32 0, i32 8, !dbg !5362
  store %struct.atomic_t* %usb_active, %struct.atomic_t** %v.addr.i, align 8
  store i32 0, i32* %i.addr.i, align 4
  %5 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !5363
  %6 = bitcast %struct.atomic_t* %5 to i8*, !dbg !5363
  store i8* %6, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %7 = load i8*, i8** %v.addr.i.i, align 8, !dbg !5364
  %8 = load i64, i64* %size.addr.i.i, align 8, !dbg !5365
  %conv.i.i = trunc i64 %8 to i32, !dbg !5365
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %7, i32 %conv.i.i) #13, !dbg !5366
  %9 = load i8*, i8** %v.addr.i.i, align 8, !dbg !5367
  %10 = load i64, i64* %size.addr.i.i, align 8, !dbg !5367
  call void @kcsan_check_access(i8* %9, i64 %10, i32 5) #13, !dbg !5367
  %11 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !5368
  %12 = load i32, i32* %i.addr.i, align 4, !dbg !5369
  store %struct.atomic_t* %11, %struct.atomic_t** %v.addr.i1.i, align 8
  store i32 %12, i32* %i.addr.i.i, align 4
  %13 = load i32, i32* %i.addr.i.i, align 4, !dbg !5370
  %14 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !5370
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %14, i32 0, i32 0, !dbg !5370
  store volatile i32 %13, i32* %counter.i.i, align 4, !dbg !5370
  %15 = load %struct.usb_interface*, %struct.usb_interface** %interface.addr, align 8, !dbg !5371
  call void @usb_set_intfdata(%struct.usb_interface* %15, i8* null) #11, !dbg !5372
  %16 = load %struct.ufx_data*, %struct.ufx_data** %dev, align 8, !dbg !5373
  %fb_count = getelementptr inbounds %struct.ufx_data, %struct.ufx_data* %16, i32 0, i32 5, !dbg !5375
  %17 = load i32, i32* %fb_count, align 4, !dbg !5375
  %cmp = icmp eq i32 %17, 0, !dbg !5376
  br i1 %cmp, label %if.then, label %if.end, !dbg !5377

if.then:                                          ; preds = %entry
  %18 = load %struct.ufx_data*, %struct.ufx_data** %dev, align 8, !dbg !5378
  %free_framebuffer_work = getelementptr inbounds %struct.ufx_data, %struct.ufx_data* %18, i32 0, i32 7, !dbg !5379
  %call1 = call zeroext i1 @schedule_delayed_work(%struct.delayed_work* %free_framebuffer_work, i64 0) #11, !dbg !5380
  br label %if.end, !dbg !5380

if.end:                                           ; preds = %if.then, %entry
  %19 = load %struct.ufx_data*, %struct.ufx_data** %dev, align 8, !dbg !5381
  %kref = getelementptr inbounds %struct.ufx_data, %struct.ufx_data* %19, i32 0, i32 4, !dbg !5382
  %call2 = call i32 @kref_put(%struct.kref* %kref, void (%struct.kref*)* @ufx_free) #11, !dbg !5383
  ret void, !dbg !5384
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.usb_device* @interface_to_usbdev(%struct.usb_interface* %intf) #2 !dbg !5385 {
entry:
  %intf.addr = alloca %struct.usb_interface*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.usb_device*, align 8
  store %struct.usb_interface* %intf, %struct.usb_interface** %intf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_interface** %intf.addr, metadata !5388, metadata !DIExpression()), !dbg !5389
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !5390, metadata !DIExpression()), !dbg !5392
  %0 = load %struct.usb_interface*, %struct.usb_interface** %intf.addr, align 8, !dbg !5392
  %dev = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %0, i32 0, i32 7, !dbg !5392
  %parent = getelementptr inbounds %struct.device, %struct.device* %dev, i32 0, i32 1, !dbg !5392
  %1 = load %struct.device*, %struct.device** %parent, align 8, !dbg !5392
  %2 = bitcast %struct.device* %1 to i8*, !dbg !5392
  store i8* %2, i8** %__mptr, align 8, !dbg !5392
  br label %do.body, !dbg !5392

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !5393

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !5392
  %add.ptr = getelementptr i8, i8* %3, i64 -160, !dbg !5392
  %4 = bitcast i8* %add.ptr to %struct.usb_device*, !dbg !5392
  store %struct.usb_device* %4, %struct.usb_device** %tmp, align 8, !dbg !5393
  %5 = load %struct.usb_device*, %struct.usb_device** %tmp, align 8, !dbg !5392
  ret %struct.usb_device* %5, !dbg !5395
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kzalloc(i64 %size, i32 %flags) #2 !dbg !5396 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !5399, metadata !DIExpression()), !dbg !5403
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !5409, metadata !DIExpression()), !dbg !5410
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !5411, metadata !DIExpression()), !dbg !5412
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !5413, metadata !DIExpression()), !dbg !5414
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !5415, metadata !DIExpression()), !dbg !5419
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !5421, metadata !DIExpression()), !dbg !5425
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !5427, metadata !DIExpression()), !dbg !5431
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !5436, metadata !DIExpression()), !dbg !5437
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !5438, metadata !DIExpression()), !dbg !5439
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !5440, metadata !DIExpression()), !dbg !5441
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !5442, metadata !DIExpression()), !dbg !5443
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !5444, metadata !DIExpression()), !dbg !5445
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !5446, metadata !DIExpression()), !dbg !5447
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !5448, metadata !DIExpression()), !dbg !5449
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !5450, metadata !DIExpression()), !dbg !5451
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !5452, metadata !DIExpression()), !dbg !5453
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !5454, metadata !DIExpression()), !dbg !5455
  %0 = load i64, i64* %size.addr, align 8, !dbg !5456
  %1 = load i32, i32* %flags.addr, align 4, !dbg !5457
  %or = or i32 %1, 256, !dbg !5458
  store i64 %0, i64* %size.addr.i, align 8
  store i32 %or, i32* %flags.addr.i, align 4
  %2 = load i64, i64* %size.addr.i, align 8, !dbg !5459
  %3 = call i1 @llvm.is.constant.i64(i64 %2) #10, !dbg !5460
  br i1 %3, label %if.then.i, label %if.end9.i, !dbg !5461

if.then.i:                                        ; preds = %entry
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !5462
  %cmp.i = icmp ugt i64 %4, 8192, !dbg !5463
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !5464

if.then1.i:                                       ; preds = %if.then.i
  %5 = load i64, i64* %size.addr.i, align 8, !dbg !5465
  %6 = load i32, i32* %flags.addr.i, align 4, !dbg !5466
  store i64 %5, i64* %size.addr.i.i, align 8
  store i32 %6, i32* %flags.addr.i.i, align 4
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !5467
  %call.i.i = call i32 @get_order(i64 %7) #14, !dbg !5468
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !5445
  %8 = load i64, i64* %size.addr.i.i, align 8, !dbg !5469
  %9 = load i32, i32* %flags.addr.i.i, align 4, !dbg !5470
  %10 = load i32, i32* %order.i.i, align 4, !dbg !5471
  store i64 %8, i64* %size.addr.i.i.i, align 8
  store i32 %9, i32* %flags.addr.i.i.i, align 4
  store i32 %10, i32* %order.addr.i.i.i, align 4
  %11 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !5472
  %12 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !5473
  %13 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !5474
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %11, i32 %12, i32 %13) #13, !dbg !5475
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !5475
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !5475
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !5475
  call void @llvm.assume(i1 %maskcond.i.i.i) #10, !dbg !5475
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !5476
  br label %kmalloc.exit, !dbg !5476

if.end.i:                                         ; preds = %if.then.i
  %14 = load i64, i64* %size.addr.i, align 8, !dbg !5477
  store i64 %14, i64* %size.addr.i11.i, align 8
  %15 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5478
  %tobool.i.i = icmp ne i64 %15, 0, !dbg !5478
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !5480

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !5481
  br label %kmalloc_index.exit.i, !dbg !5481

if.end.i.i:                                       ; preds = %if.end.i
  %16 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5482
  %cmp.i.i = icmp ule i64 %16, 8, !dbg !5484
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !5485

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !5486
  br label %kmalloc_index.exit.i, !dbg !5486

if.end2.i.i:                                      ; preds = %if.end.i.i
  %17 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5487
  %cmp3.i.i = icmp ugt i64 %17, 64, !dbg !5489
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !5490

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %18 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5491
  %cmp4.i.i = icmp ule i64 %18, 96, !dbg !5492
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !5493

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !5494
  br label %kmalloc_index.exit.i, !dbg !5494

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %19 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5495
  %cmp7.i.i = icmp ugt i64 %19, 128, !dbg !5497
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !5498

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %20 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5499
  %cmp9.i.i = icmp ule i64 %20, 192, !dbg !5500
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !5501

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !5502
  br label %kmalloc_index.exit.i, !dbg !5502

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %21 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5503
  %cmp12.i.i = icmp ule i64 %21, 8, !dbg !5505
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !5506

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !5507
  br label %kmalloc_index.exit.i, !dbg !5507

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %22 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5508
  %cmp15.i.i = icmp ule i64 %22, 16, !dbg !5510
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !5511

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !5512
  br label %kmalloc_index.exit.i, !dbg !5512

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %23 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5513
  %cmp18.i.i = icmp ule i64 %23, 32, !dbg !5515
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !5516

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !5517
  br label %kmalloc_index.exit.i, !dbg !5517

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %24 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5518
  %cmp21.i.i = icmp ule i64 %24, 64, !dbg !5520
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !5521

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !5522
  br label %kmalloc_index.exit.i, !dbg !5522

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %25 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5523
  %cmp24.i.i = icmp ule i64 %25, 128, !dbg !5525
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !5526

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !5527
  br label %kmalloc_index.exit.i, !dbg !5527

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %26 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5528
  %cmp27.i.i = icmp ule i64 %26, 256, !dbg !5530
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !5531

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !5532
  br label %kmalloc_index.exit.i, !dbg !5532

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %27 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5533
  %cmp30.i.i = icmp ule i64 %27, 512, !dbg !5535
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !5536

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !5537
  br label %kmalloc_index.exit.i, !dbg !5537

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %28 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5538
  %cmp33.i.i = icmp ule i64 %28, 1024, !dbg !5540
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !5541

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !5542
  br label %kmalloc_index.exit.i, !dbg !5542

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5543
  %cmp36.i.i = icmp ule i64 %29, 2048, !dbg !5545
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !5546

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !5547
  br label %kmalloc_index.exit.i, !dbg !5547

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5548
  %cmp39.i.i = icmp ule i64 %30, 4096, !dbg !5550
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !5551

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !5552
  br label %kmalloc_index.exit.i, !dbg !5552

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5553
  %cmp42.i.i = icmp ule i64 %31, 8192, !dbg !5555
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !5556

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !5557
  br label %kmalloc_index.exit.i, !dbg !5557

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5558
  %cmp45.i.i = icmp ule i64 %32, 16384, !dbg !5560
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !5561

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !5562
  br label %kmalloc_index.exit.i, !dbg !5562

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5563
  %cmp48.i.i = icmp ule i64 %33, 32768, !dbg !5565
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !5566

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !5567
  br label %kmalloc_index.exit.i, !dbg !5567

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5568
  %cmp51.i.i = icmp ule i64 %34, 65536, !dbg !5570
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !5571

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !5572
  br label %kmalloc_index.exit.i, !dbg !5572

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5573
  %cmp54.i.i = icmp ule i64 %35, 131072, !dbg !5575
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !5576

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !5577
  br label %kmalloc_index.exit.i, !dbg !5577

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5578
  %cmp57.i.i = icmp ule i64 %36, 262144, !dbg !5580
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !5581

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !5582
  br label %kmalloc_index.exit.i, !dbg !5582

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5583
  %cmp60.i.i = icmp ule i64 %37, 524288, !dbg !5585
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !5586

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !5587
  br label %kmalloc_index.exit.i, !dbg !5587

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5588
  %cmp63.i.i = icmp ule i64 %38, 1048576, !dbg !5590
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !5591

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !5592
  br label %kmalloc_index.exit.i, !dbg !5592

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5593
  %cmp66.i.i = icmp ule i64 %39, 2097152, !dbg !5595
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !5596

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !5597
  br label %kmalloc_index.exit.i, !dbg !5597

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5598
  %cmp69.i.i = icmp ule i64 %40, 4194304, !dbg !5600
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !5601

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !5602
  br label %kmalloc_index.exit.i, !dbg !5602

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5603
  %cmp72.i.i = icmp ule i64 %41, 8388608, !dbg !5605
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !5606

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !5607
  br label %kmalloc_index.exit.i, !dbg !5607

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5608
  %cmp75.i.i = icmp ule i64 %42, 16777216, !dbg !5610
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !5611

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !5612
  br label %kmalloc_index.exit.i, !dbg !5612

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5613
  %cmp78.i.i = icmp ule i64 %43, 33554432, !dbg !5615
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !5616

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !5617
  br label %kmalloc_index.exit.i, !dbg !5617

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5618
  %cmp81.i.i = icmp ule i64 %44, 67108864, !dbg !5620
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !5621

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !5622
  br label %kmalloc_index.exit.i, !dbg !5622

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.17, i64 0, i64 0), i32 382, i32 0, i64 12) #10, !dbg !5623, !srcloc !5626
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 239) #10, !dbg !5627, !srcloc !5630
  unreachable, !dbg !5631

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %45 = load i32, i32* %retval.i.i, align 4, !dbg !5632
  store i32 %45, i32* %index.i, align 4, !dbg !5633
  %46 = load i32, i32* %index.i, align 4, !dbg !5634
  %tobool.i = icmp ne i32 %46, 0, !dbg !5634
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !5636

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !5637
  br label %kmalloc.exit, !dbg !5637

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %47 = load i32, i32* %flags.addr.i, align 4, !dbg !5638
  store i32 %47, i32* %flags.addr.i13.i, align 4
  %48 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !5639
  %and.i.i = and i32 %48, 17, !dbg !5639
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !5639
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !5639
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !5639
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !5639
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !5641

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !5642
  br label %kmalloc_type.exit.i, !dbg !5642

if.end.i16.i:                                     ; preds = %if.end4.i
  %49 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !5643
  %and2.i.i = and i32 %49, 1, !dbg !5644
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !5643
  %50 = zext i1 %tobool3.i.i to i64, !dbg !5643
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !5643
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !5645
  br label %kmalloc_type.exit.i, !dbg !5645

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %51 = load i32, i32* %retval.i12.i, align 4, !dbg !5646
  %idxprom.i = zext i32 %51 to i64, !dbg !5647
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !5647
  %52 = load i32, i32* %index.i, align 4, !dbg !5648
  %idxprom6.i = zext i32 %52 to i64, !dbg !5647
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !5647
  %53 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !5647
  %54 = load i32, i32* %flags.addr.i, align 4, !dbg !5649
  %55 = load i64, i64* %size.addr.i, align 8, !dbg !5650
  store %struct.kmem_cache* %53, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %54, i32* %flags.addr.i17.i, align 4
  store i64 %55, i64* %size.addr.i18.i, align 8
  %56 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !5651
  %57 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !5652
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %56, i32 %57) #13, !dbg !5653
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !5653
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !5653
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !5653
  call void @llvm.assume(i1 %maskcond.i.i) #10, !dbg !5653
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !5414
  %58 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !5654
  %59 = load i8*, i8** %ret.i.i, align 8, !dbg !5655
  %60 = load i64, i64* %size.addr.i18.i, align 8, !dbg !5656
  %61 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !5657
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %58, i8* %59, i64 %60, i32 %61) #13, !dbg !5658
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !5659
  %62 = load i8*, i8** %ret.i.i, align 8, !dbg !5660
  store i8* %62, i8** %retval.i, align 8, !dbg !5661
  br label %kmalloc.exit, !dbg !5661

if.end9.i:                                        ; preds = %entry
  %63 = load i64, i64* %size.addr.i, align 8, !dbg !5662
  %64 = load i32, i32* %flags.addr.i, align 4, !dbg !5663
  %call10.i = call noalias i8* @__kmalloc(i64 %63, i32 %64) #13, !dbg !5664
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !5664
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !5664
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !5664
  call void @llvm.assume(i1 %maskcond.i) #10, !dbg !5664
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !5665
  br label %kmalloc.exit, !dbg !5665

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %65 = load i8*, i8** %retval.i, align 8, !dbg !5666
  ret i8* %65, !dbg !5667
}

; Function Attrs: cold noredzone
declare dso_local void @_dev_err(%struct.device*, i8*, ...) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @kref_init(%struct.kref* %kref) #2 !dbg !5668 {
entry:
  %kref.addr = alloca %struct.kref*, align 8
  store %struct.kref* %kref, %struct.kref** %kref.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kref** %kref.addr, metadata !5672, metadata !DIExpression()), !dbg !5673
  %0 = load %struct.kref*, %struct.kref** %kref.addr, align 8, !dbg !5674
  %refcount = getelementptr inbounds %struct.kref, %struct.kref* %0, i32 0, i32 0, !dbg !5675
  call void @refcount_set(%struct.refcount_struct* %refcount, i32 1) #11, !dbg !5676
  ret void, !dbg !5677
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @kref_get(%struct.kref* %kref) #2 !dbg !5678 {
entry:
  %kref.addr = alloca %struct.kref*, align 8
  store %struct.kref* %kref, %struct.kref** %kref.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kref** %kref.addr, metadata !5679, metadata !DIExpression()), !dbg !5680
  %0 = load %struct.kref*, %struct.kref** %kref.addr, align 8, !dbg !5681
  %refcount = getelementptr inbounds %struct.kref, %struct.kref* %0, i32 0, i32 0, !dbg !5682
  call void @refcount_inc(%struct.refcount_struct* %refcount) #11, !dbg !5683
  ret void, !dbg !5684
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @usb_set_intfdata(%struct.usb_interface* %intf, i8* %data) #2 !dbg !5685 {
entry:
  %intf.addr = alloca %struct.usb_interface*, align 8
  %data.addr = alloca i8*, align 8
  store %struct.usb_interface* %intf, %struct.usb_interface** %intf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_interface** %intf.addr, metadata !5688, metadata !DIExpression()), !dbg !5689
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !5690, metadata !DIExpression()), !dbg !5691
  %0 = load %struct.usb_interface*, %struct.usb_interface** %intf.addr, align 8, !dbg !5692
  %dev = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %0, i32 0, i32 7, !dbg !5693
  %1 = load i8*, i8** %data.addr, align 8, !dbg !5694
  call void @dev_set_drvdata(%struct.device* %dev, i8* %1) #11, !dbg !5695
  ret void, !dbg !5696
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ufx_alloc_urb_list(%struct.ufx_data* %dev, i32 %count, i64 %size) #2 !dbg !5697 {
entry:
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5700, metadata !DIExpression()), !dbg !5706
  %dev.addr = alloca %struct.ufx_data*, align 8
  %count.addr = alloca i32, align 4
  %size.addr = alloca i64, align 8
  %i = alloca i32, align 4
  %urb = alloca %struct.urb*, align 8
  %unode = alloca %struct.urb_node*, align 8
  %buf = alloca i8*, align 8
  %.compoundliteral = alloca %struct.spinlock, align 1
  %.compoundliteral12 = alloca %struct.atomic64_t, align 8
  %tmp = alloca i32, align 4
  store %struct.ufx_data* %dev, %struct.ufx_data** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ufx_data** %dev.addr, metadata !5709, metadata !DIExpression()), !dbg !5710
  store i32 %count, i32* %count.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %count.addr, metadata !5711, metadata !DIExpression()), !dbg !5712
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !5713, metadata !DIExpression()), !dbg !5714
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5715, metadata !DIExpression()), !dbg !5716
  store i32 0, i32* %i, align 4, !dbg !5716
  call void @llvm.dbg.declare(metadata %struct.urb** %urb, metadata !5717, metadata !DIExpression()), !dbg !5718
  call void @llvm.dbg.declare(metadata %struct.urb_node** %unode, metadata !5719, metadata !DIExpression()), !dbg !5720
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !5721, metadata !DIExpression()), !dbg !5722
  br label %do.body, !dbg !5723

do.body:                                          ; preds = %entry
  %0 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !5724
  %urbs = getelementptr inbounds %struct.ufx_data, %struct.ufx_data* %0, i32 0, i32 3, !dbg !5724
  %lock = getelementptr inbounds %struct.urb_list, %struct.urb_list* %urbs, i32 0, i32 1, !dbg !5724
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %1 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !5725
  %2 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %1, i32 0, i32 0, !dbg !5726
  %rlock.i = bitcast %union.anon.3* %2 to %struct.raw_spinlock*, !dbg !5726
  %3 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !5724
  %urbs1 = getelementptr inbounds %struct.ufx_data, %struct.ufx_data* %3, i32 0, i32 3, !dbg !5724
  %lock2 = getelementptr inbounds %struct.urb_list, %struct.urb_list* %urbs1, i32 0, i32 1, !dbg !5724
  %4 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %.compoundliteral, i32 0, i32 0, !dbg !5724
  %rlock = bitcast %union.anon.3* %4 to %struct.raw_spinlock*, !dbg !5724
  %5 = bitcast %struct.spinlock* %lock2 to i8*, !dbg !5724
  %6 = bitcast %struct.spinlock* %.compoundliteral to i8*, !dbg !5724
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 1 %6, i64 0, i1 false), !dbg !5724
  br label %do.end, !dbg !5724

do.end:                                           ; preds = %do.body
  %7 = load i64, i64* %size.addr, align 8, !dbg !5727
  %8 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !5728
  %urbs3 = getelementptr inbounds %struct.ufx_data, %struct.ufx_data* %8, i32 0, i32 3, !dbg !5729
  %size4 = getelementptr inbounds %struct.urb_list, %struct.urb_list* %urbs3, i32 0, i32 5, !dbg !5730
  store i64 %7, i64* %size4, align 8, !dbg !5731
  %9 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !5732
  %urbs5 = getelementptr inbounds %struct.ufx_data, %struct.ufx_data* %9, i32 0, i32 3, !dbg !5733
  %list = getelementptr inbounds %struct.urb_list, %struct.urb_list* %urbs5, i32 0, i32 0, !dbg !5734
  call void @INIT_LIST_HEAD(%struct.list_head* %list) #11, !dbg !5735
  br label %while.cond, !dbg !5736

while.cond:                                       ; preds = %if.end29, %do.end
  %10 = load i32, i32* %i, align 4, !dbg !5737
  %11 = load i32, i32* %count.addr, align 4, !dbg !5738
  %cmp = icmp slt i32 %10, %11, !dbg !5739
  br i1 %cmp, label %while.body, label %while.end, !dbg !5736

while.body:                                       ; preds = %while.cond
  %call6 = call i8* @kzalloc(i64 120, i32 3264) #11, !dbg !5740
  %12 = bitcast i8* %call6 to %struct.urb_node*, !dbg !5740
  store %struct.urb_node* %12, %struct.urb_node** %unode, align 8, !dbg !5742
  %13 = load %struct.urb_node*, %struct.urb_node** %unode, align 8, !dbg !5743
  %tobool = icmp ne %struct.urb_node* %13, null, !dbg !5743
  br i1 %tobool, label %if.end, label %if.then, !dbg !5745

if.then:                                          ; preds = %while.body
  br label %while.end, !dbg !5746

if.end:                                           ; preds = %while.body
  %14 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !5747
  %15 = load %struct.urb_node*, %struct.urb_node** %unode, align 8, !dbg !5748
  %dev7 = getelementptr inbounds %struct.urb_node, %struct.urb_node* %15, i32 0, i32 1, !dbg !5749
  store %struct.ufx_data* %14, %struct.ufx_data** %dev7, align 8, !dbg !5750
  br label %do.body8, !dbg !5751

do.body8:                                         ; preds = %if.end
  br label %do.body9, !dbg !5752

do.body9:                                         ; preds = %do.body8
  %16 = load %struct.urb_node*, %struct.urb_node** %unode, align 8, !dbg !5754
  %release_urb_work = getelementptr inbounds %struct.urb_node, %struct.urb_node* %16, i32 0, i32 2, !dbg !5754
  %work = getelementptr inbounds %struct.delayed_work, %struct.delayed_work* %release_urb_work, i32 0, i32 0, !dbg !5754
  call void @__init_work(%struct.work_struct* %work, i32 0) #11, !dbg !5754
  %17 = load %struct.urb_node*, %struct.urb_node** %unode, align 8, !dbg !5754
  %release_urb_work10 = getelementptr inbounds %struct.urb_node, %struct.urb_node* %17, i32 0, i32 2, !dbg !5754
  %work11 = getelementptr inbounds %struct.delayed_work, %struct.delayed_work* %release_urb_work10, i32 0, i32 0, !dbg !5754
  %data = getelementptr inbounds %struct.work_struct, %struct.work_struct* %work11, i32 0, i32 0, !dbg !5754
  %counter = getelementptr inbounds %struct.atomic64_t, %struct.atomic64_t* %.compoundliteral12, i32 0, i32 0, !dbg !5754
  store i64 68719476704, i64* %counter, align 8, !dbg !5754
  %18 = bitcast %struct.atomic64_t* %data to i8*, !dbg !5754
  %19 = bitcast %struct.atomic64_t* %.compoundliteral12 to i8*, !dbg !5754
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* align 8 %19, i64 8, i1 false), !dbg !5754
  %20 = load %struct.urb_node*, %struct.urb_node** %unode, align 8, !dbg !5754
  %release_urb_work13 = getelementptr inbounds %struct.urb_node, %struct.urb_node* %20, i32 0, i32 2, !dbg !5754
  %work14 = getelementptr inbounds %struct.delayed_work, %struct.delayed_work* %release_urb_work13, i32 0, i32 0, !dbg !5754
  %entry15 = getelementptr inbounds %struct.work_struct, %struct.work_struct* %work14, i32 0, i32 1, !dbg !5754
  call void @INIT_LIST_HEAD(%struct.list_head* %entry15) #11, !dbg !5754
  %21 = load %struct.urb_node*, %struct.urb_node** %unode, align 8, !dbg !5754
  %release_urb_work16 = getelementptr inbounds %struct.urb_node, %struct.urb_node* %21, i32 0, i32 2, !dbg !5754
  %work17 = getelementptr inbounds %struct.delayed_work, %struct.delayed_work* %release_urb_work16, i32 0, i32 0, !dbg !5754
  %func = getelementptr inbounds %struct.work_struct, %struct.work_struct* %work17, i32 0, i32 2, !dbg !5754
  store void (%struct.work_struct*)* @ufx_release_urb_work, void (%struct.work_struct*)** %func, align 8, !dbg !5754
  br label %do.end18, !dbg !5754

do.end18:                                         ; preds = %do.body9
  %22 = load %struct.urb_node*, %struct.urb_node** %unode, align 8, !dbg !5752
  %release_urb_work19 = getelementptr inbounds %struct.urb_node, %struct.urb_node* %22, i32 0, i32 2, !dbg !5752
  %timer = getelementptr inbounds %struct.delayed_work, %struct.delayed_work* %release_urb_work19, i32 0, i32 1, !dbg !5752
  call void @init_timer_key(%struct.timer_list* %timer, void (%struct.timer_list*)* @delayed_work_timer_fn, i32 2097152, i8* null, %struct.lock_class_key* null) #11, !dbg !5752
  br label %do.end20, !dbg !5752

do.end20:                                         ; preds = %do.end18
  %call21 = call %struct.urb* @usb_alloc_urb(i32 0, i32 3264) #11, !dbg !5756
  store %struct.urb* %call21, %struct.urb** %urb, align 8, !dbg !5757
  %23 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !5758
  %tobool22 = icmp ne %struct.urb* %23, null, !dbg !5758
  br i1 %tobool22, label %if.end24, label %if.then23, !dbg !5760

if.then23:                                        ; preds = %do.end20
  %24 = load %struct.urb_node*, %struct.urb_node** %unode, align 8, !dbg !5761
  %25 = bitcast %struct.urb_node* %24 to i8*, !dbg !5761
  call void @kfree(i8* %25) #11, !dbg !5763
  br label %while.end, !dbg !5764

if.end24:                                         ; preds = %do.end20
  %26 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !5765
  %27 = load %struct.urb_node*, %struct.urb_node** %unode, align 8, !dbg !5766
  %urb25 = getelementptr inbounds %struct.urb_node, %struct.urb_node* %27, i32 0, i32 3, !dbg !5767
  store %struct.urb* %26, %struct.urb** %urb25, align 8, !dbg !5768
  %28 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !5769
  %udev = getelementptr inbounds %struct.ufx_data, %struct.ufx_data* %28, i32 0, i32 0, !dbg !5770
  %29 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !dbg !5770
  %30 = load i64, i64* %size.addr, align 8, !dbg !5771
  %31 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !5772
  %transfer_dma = getelementptr inbounds %struct.urb, %struct.urb* %31, i32 0, i32 15, !dbg !5773
  %call26 = call i8* @usb_alloc_coherent(%struct.usb_device* %29, i64 %30, i32 3264, i64* %transfer_dma) #11, !dbg !5774
  store i8* %call26, i8** %buf, align 8, !dbg !5775
  %32 = load i8*, i8** %buf, align 8, !dbg !5776
  %tobool27 = icmp ne i8* %32, null, !dbg !5776
  br i1 %tobool27, label %if.end29, label %if.then28, !dbg !5778

if.then28:                                        ; preds = %if.end24
  %33 = load %struct.urb_node*, %struct.urb_node** %unode, align 8, !dbg !5779
  %34 = bitcast %struct.urb_node* %33 to i8*, !dbg !5779
  call void @kfree(i8* %34) #11, !dbg !5781
  %35 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !5782
  call void @usb_free_urb(%struct.urb* %35) #11, !dbg !5783
  br label %while.end, !dbg !5784

if.end29:                                         ; preds = %if.end24
  %36 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !5785
  %37 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !5786
  %udev30 = getelementptr inbounds %struct.ufx_data, %struct.ufx_data* %37, i32 0, i32 0, !dbg !5787
  %38 = load %struct.usb_device*, %struct.usb_device** %udev30, align 8, !dbg !5787
  %39 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !5788
  %udev31 = getelementptr inbounds %struct.ufx_data, %struct.ufx_data* %39, i32 0, i32 0, !dbg !5788
  %40 = load %struct.usb_device*, %struct.usb_device** %udev31, align 8, !dbg !5788
  %call32 = call i32 @__create_pipe(%struct.usb_device* %40, i32 1) #11, !dbg !5788
  %or = or i32 -1073741824, %call32, !dbg !5788
  %41 = load i8*, i8** %buf, align 8, !dbg !5789
  %42 = load i64, i64* %size.addr, align 8, !dbg !5790
  %conv = trunc i64 %42 to i32, !dbg !5790
  %43 = load %struct.urb_node*, %struct.urb_node** %unode, align 8, !dbg !5791
  %44 = bitcast %struct.urb_node* %43 to i8*, !dbg !5791
  call void @usb_fill_bulk_urb(%struct.urb* %36, %struct.usb_device* %38, i32 %or, i8* %41, i32 %conv, void (%struct.urb*)* @ufx_urb_completion, i8* %44) #11, !dbg !5792
  %45 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !5793
  %transfer_flags = getelementptr inbounds %struct.urb, %struct.urb* %45, i32 0, i32 13, !dbg !5794
  %46 = load i32, i32* %transfer_flags, align 4, !dbg !5795
  %or33 = or i32 %46, 4, !dbg !5795
  store i32 %or33, i32* %transfer_flags, align 4, !dbg !5795
  %47 = load %struct.urb_node*, %struct.urb_node** %unode, align 8, !dbg !5796
  %entry34 = getelementptr inbounds %struct.urb_node, %struct.urb_node* %47, i32 0, i32 0, !dbg !5797
  %48 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !5798
  %urbs35 = getelementptr inbounds %struct.ufx_data, %struct.ufx_data* %48, i32 0, i32 3, !dbg !5799
  %list36 = getelementptr inbounds %struct.urb_list, %struct.urb_list* %urbs35, i32 0, i32 0, !dbg !5800
  call void @list_add_tail(%struct.list_head* %entry34, %struct.list_head* %list36) #11, !dbg !5801
  %49 = load i32, i32* %i, align 4, !dbg !5802
  %inc = add i32 %49, 1, !dbg !5802
  store i32 %inc, i32* %i, align 4, !dbg !5802
  br label %while.cond, !dbg !5736, !llvm.loop !5803

while.end:                                        ; preds = %if.then28, %if.then23, %if.then, %while.cond
  %50 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !5805
  %urbs37 = getelementptr inbounds %struct.ufx_data, %struct.ufx_data* %50, i32 0, i32 3, !dbg !5806
  %limit_sem = getelementptr inbounds %struct.urb_list, %struct.urb_list* %urbs37, i32 0, i32 2, !dbg !5807
  %51 = load i32, i32* %i, align 4, !dbg !5808
  call void @sema_init(%struct.semaphore* %limit_sem, i32 %51) #11, !dbg !5809
  %52 = load i32, i32* %i, align 4, !dbg !5810
  %53 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !5811
  %urbs38 = getelementptr inbounds %struct.ufx_data, %struct.ufx_data* %53, i32 0, i32 3, !dbg !5812
  %count39 = getelementptr inbounds %struct.urb_list, %struct.urb_list* %urbs38, i32 0, i32 4, !dbg !5813
  store i32 %52, i32* %count39, align 4, !dbg !5814
  %54 = load i32, i32* %i, align 4, !dbg !5815
  %55 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !5816
  %urbs40 = getelementptr inbounds %struct.ufx_data, %struct.ufx_data* %55, i32 0, i32 3, !dbg !5817
  %available = getelementptr inbounds %struct.urb_list, %struct.urb_list* %urbs40, i32 0, i32 3, !dbg !5818
  store i32 %54, i32* %available, align 8, !dbg !5819
  store i32 0, i32* %tmp, align 4, !dbg !5820
  %56 = load i32, i32* %tmp, align 4, !dbg !5823
  %57 = load i32, i32* %i, align 4, !dbg !5824
  ret i32 %57, !dbg !5825
}

; Function Attrs: noredzone
declare dso_local %struct.fb_info* @framebuffer_alloc(i64, %struct.device*) #1

; Function Attrs: noredzone
declare dso_local i32 @fb_alloc_cmap(%struct.fb_cmap*, i32, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__init_work(%struct.work_struct* %work, i32 %onstack) #2 !dbg !5826 {
entry:
  %work.addr = alloca %struct.work_struct*, align 8
  %onstack.addr = alloca i32, align 4
  store %struct.work_struct* %work, %struct.work_struct** %work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.work_struct** %work.addr, metadata !5829, metadata !DIExpression()), !dbg !5830
  store i32 %onstack, i32* %onstack.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %onstack.addr, metadata !5831, metadata !DIExpression()), !dbg !5832
  ret void, !dbg !5833
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @INIT_LIST_HEAD(%struct.list_head* %list) #2 !dbg !5834 {
entry:
  %list.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %list, %struct.list_head** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %list.addr, metadata !5838, metadata !DIExpression()), !dbg !5839
  br label %do.body, !dbg !5840

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !5841

do.body1:                                         ; preds = %do.body
  br label %do.end, !dbg !5843

do.end:                                           ; preds = %do.body1
  br label %do.body2, !dbg !5841

do.body2:                                         ; preds = %do.end
  %0 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !5845
  %1 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !5845
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 0, !dbg !5845
  store volatile %struct.list_head* %0, %struct.list_head** %next, align 8, !dbg !5845
  br label %do.end3, !dbg !5845

do.end3:                                          ; preds = %do.body2
  br label %do.end4, !dbg !5841

do.end4:                                          ; preds = %do.end3
  %2 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !5847
  %3 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !5848
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 1, !dbg !5849
  store %struct.list_head* %2, %struct.list_head** %prev, align 8, !dbg !5850
  ret void, !dbg !5851
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ufx_free_framebuffer_work(%struct.work_struct* %work) #2 !dbg !5852 {
entry:
  %work.addr = alloca %struct.work_struct*, align 8
  %dev = alloca %struct.ufx_data*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.ufx_data*, align 8
  %info = alloca %struct.fb_info*, align 8
  %node = alloca i32, align 4
  %tmp9 = alloca i32, align 4
  store %struct.work_struct* %work, %struct.work_struct** %work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.work_struct** %work.addr, metadata !5853, metadata !DIExpression()), !dbg !5854
  call void @llvm.dbg.declare(metadata %struct.ufx_data** %dev, metadata !5855, metadata !DIExpression()), !dbg !5856
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !5857, metadata !DIExpression()), !dbg !5859
  %0 = load %struct.work_struct*, %struct.work_struct** %work.addr, align 8, !dbg !5859
  %1 = bitcast %struct.work_struct* %0 to i8*, !dbg !5859
  store i8* %1, i8** %__mptr, align 8, !dbg !5859
  br label %do.body, !dbg !5859

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !5860

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !5859
  %add.ptr = getelementptr i8, i8* %2, i64 -96, !dbg !5859
  %3 = bitcast i8* %add.ptr to %struct.ufx_data*, !dbg !5859
  store %struct.ufx_data* %3, %struct.ufx_data** %tmp, align 8, !dbg !5860
  %4 = load %struct.ufx_data*, %struct.ufx_data** %tmp, align 8, !dbg !5859
  store %struct.ufx_data* %4, %struct.ufx_data** %dev, align 8, !dbg !5856
  call void @llvm.dbg.declare(metadata %struct.fb_info** %info, metadata !5862, metadata !DIExpression()), !dbg !5863
  %5 = load %struct.ufx_data*, %struct.ufx_data** %dev, align 8, !dbg !5864
  %info1 = getelementptr inbounds %struct.ufx_data, %struct.ufx_data* %5, i32 0, i32 2, !dbg !5865
  %6 = load %struct.fb_info*, %struct.fb_info** %info1, align 8, !dbg !5865
  store %struct.fb_info* %6, %struct.fb_info** %info, align 8, !dbg !5863
  call void @llvm.dbg.declare(metadata i32* %node, metadata !5866, metadata !DIExpression()), !dbg !5867
  %7 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !5868
  %node2 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %7, i32 0, i32 1, !dbg !5869
  %8 = load i32, i32* %node2, align 4, !dbg !5869
  store i32 %8, i32* %node, align 4, !dbg !5867
  %9 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !5870
  call void @unregister_framebuffer(%struct.fb_info* %9) #11, !dbg !5871
  %10 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !5872
  %cmap = getelementptr inbounds %struct.fb_info, %struct.fb_info* %10, i32 0, i32 12, !dbg !5874
  %len = getelementptr inbounds %struct.fb_cmap, %struct.fb_cmap* %cmap, i32 0, i32 1, !dbg !5875
  %11 = load i32, i32* %len, align 4, !dbg !5875
  %cmp = icmp ne i32 %11, 0, !dbg !5876
  br i1 %cmp, label %if.then, label %if.end, !dbg !5877

if.then:                                          ; preds = %do.end
  %12 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !5878
  %cmap3 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %12, i32 0, i32 12, !dbg !5879
  call void @fb_dealloc_cmap(%struct.fb_cmap* %cmap3) #11, !dbg !5880
  br label %if.end, !dbg !5880

if.end:                                           ; preds = %if.then, %do.end
  %13 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !5881
  %monspecs = getelementptr inbounds %struct.fb_info, %struct.fb_info* %13, i32 0, i32 8, !dbg !5883
  %modedb = getelementptr inbounds %struct.fb_monspecs, %struct.fb_monspecs* %monspecs, i32 0, i32 1, !dbg !5884
  %14 = load %struct.fb_videomode*, %struct.fb_videomode** %modedb, align 8, !dbg !5884
  %tobool = icmp ne %struct.fb_videomode* %14, null, !dbg !5881
  br i1 %tobool, label %if.then4, label %if.end7, !dbg !5885

if.then4:                                         ; preds = %if.end
  %15 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !5886
  %monspecs5 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %15, i32 0, i32 8, !dbg !5887
  %modedb6 = getelementptr inbounds %struct.fb_monspecs, %struct.fb_monspecs* %monspecs5, i32 0, i32 1, !dbg !5888
  %16 = load %struct.fb_videomode*, %struct.fb_videomode** %modedb6, align 8, !dbg !5888
  call void @fb_destroy_modedb(%struct.fb_videomode* %16) #11, !dbg !5889
  br label %if.end7, !dbg !5889

if.end7:                                          ; preds = %if.then4, %if.end
  %17 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !5890
  %18 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %17, i32 0, i32 25, !dbg !5891
  %screen_base = bitcast %union.anon.66* %18 to i8**, !dbg !5891
  %19 = load i8*, i8** %screen_base, align 8, !dbg !5891
  call void @vfree(i8* %19) #11, !dbg !5892
  %20 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !5893
  %modelist = getelementptr inbounds %struct.fb_info, %struct.fb_info* %20, i32 0, i32 13, !dbg !5894
  call void @fb_destroy_modelist(%struct.list_head* %modelist) #11, !dbg !5895
  %21 = load %struct.ufx_data*, %struct.ufx_data** %dev, align 8, !dbg !5896
  %info8 = getelementptr inbounds %struct.ufx_data, %struct.ufx_data* %21, i32 0, i32 2, !dbg !5897
  store %struct.fb_info* null, %struct.fb_info** %info8, align 8, !dbg !5898
  %22 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !5899
  call void @framebuffer_release(%struct.fb_info* %22) #11, !dbg !5900
  store i32 0, i32* %tmp9, align 4, !dbg !5901
  %23 = load i32, i32* %tmp9, align 4, !dbg !5904
  %24 = load %struct.ufx_data*, %struct.ufx_data** %dev, align 8, !dbg !5905
  %kref = getelementptr inbounds %struct.ufx_data, %struct.ufx_data* %24, i32 0, i32 4, !dbg !5906
  %call = call i32 @kref_put(%struct.kref* %kref, void (%struct.kref*)* @ufx_free) #11, !dbg !5907
  ret void, !dbg !5908
}

; Function Attrs: noredzone
declare dso_local void @init_timer_key(%struct.timer_list*, void (%struct.timer_list*)*, i32, i8*, %struct.lock_class_key*) #1

; Function Attrs: noredzone
declare dso_local void @delayed_work_timer_fn(%struct.timer_list*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ufx_reg_read(%struct.ufx_data* %dev, i32 %index, i32* %data) #2 !dbg !5909 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !5399, metadata !DIExpression()), !dbg !5912
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !5409, metadata !DIExpression()), !dbg !5915
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !5411, metadata !DIExpression()), !dbg !5916
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !5413, metadata !DIExpression()), !dbg !5917
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !5415, metadata !DIExpression()), !dbg !5918
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !5421, metadata !DIExpression()), !dbg !5920
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !5427, metadata !DIExpression()), !dbg !5922
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !5436, metadata !DIExpression()), !dbg !5925
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !5438, metadata !DIExpression()), !dbg !5926
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !5440, metadata !DIExpression()), !dbg !5927
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !5442, metadata !DIExpression()), !dbg !5928
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !5444, metadata !DIExpression()), !dbg !5929
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !5446, metadata !DIExpression()), !dbg !5930
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !5448, metadata !DIExpression()), !dbg !5931
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !5450, metadata !DIExpression()), !dbg !5932
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.ufx_data*, align 8
  %index.addr = alloca i32, align 4
  %data.addr = alloca i32*, align 8
  %buf = alloca i32*, align 8
  %ret = alloca i32, align 4
  store %struct.ufx_data* %dev, %struct.ufx_data** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ufx_data** %dev.addr, metadata !5933, metadata !DIExpression()), !dbg !5934
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !5935, metadata !DIExpression()), !dbg !5936
  store i32* %data, i32** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %data.addr, metadata !5937, metadata !DIExpression()), !dbg !5938
  call void @llvm.dbg.declare(metadata i32** %buf, metadata !5939, metadata !DIExpression()), !dbg !5940
  store i64 4, i64* %size.addr.i, align 8
  store i32 3264, i32* %flags.addr.i, align 4
  %0 = load i64, i64* %size.addr.i, align 8, !dbg !5941
  %1 = call i1 @llvm.is.constant.i64(i64 %0) #10, !dbg !5942
  br i1 %1, label %if.then.i, label %if.end9.i, !dbg !5943

if.then.i:                                        ; preds = %entry
  %2 = load i64, i64* %size.addr.i, align 8, !dbg !5944
  %cmp.i = icmp ugt i64 %2, 8192, !dbg !5945
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !5946

if.then1.i:                                       ; preds = %if.then.i
  %3 = load i64, i64* %size.addr.i, align 8, !dbg !5947
  %4 = load i32, i32* %flags.addr.i, align 4, !dbg !5948
  store i64 %3, i64* %size.addr.i.i, align 8
  store i32 %4, i32* %flags.addr.i.i, align 4
  %5 = load i64, i64* %size.addr.i.i, align 8, !dbg !5949
  %call.i.i = call i32 @get_order(i64 %5) #14, !dbg !5950
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !5929
  %6 = load i64, i64* %size.addr.i.i, align 8, !dbg !5951
  %7 = load i32, i32* %flags.addr.i.i, align 4, !dbg !5952
  %8 = load i32, i32* %order.i.i, align 4, !dbg !5953
  store i64 %6, i64* %size.addr.i.i.i, align 8
  store i32 %7, i32* %flags.addr.i.i.i, align 4
  store i32 %8, i32* %order.addr.i.i.i, align 4
  %9 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !5954
  %10 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !5955
  %11 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !5956
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %9, i32 %10, i32 %11) #13, !dbg !5957
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !5957
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !5957
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !5957
  call void @llvm.assume(i1 %maskcond.i.i.i) #10, !dbg !5957
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !5958
  br label %kmalloc.exit, !dbg !5958

if.end.i:                                         ; preds = %if.then.i
  %12 = load i64, i64* %size.addr.i, align 8, !dbg !5959
  store i64 %12, i64* %size.addr.i11.i, align 8
  %13 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5960
  %tobool.i.i = icmp ne i64 %13, 0, !dbg !5960
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !5961

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !5962
  br label %kmalloc_index.exit.i, !dbg !5962

if.end.i.i:                                       ; preds = %if.end.i
  %14 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5963
  %cmp.i.i = icmp ule i64 %14, 8, !dbg !5964
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !5965

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !5966
  br label %kmalloc_index.exit.i, !dbg !5966

if.end2.i.i:                                      ; preds = %if.end.i.i
  %15 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5967
  %cmp3.i.i = icmp ugt i64 %15, 64, !dbg !5968
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !5969

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %16 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5970
  %cmp4.i.i = icmp ule i64 %16, 96, !dbg !5971
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !5972

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !5973
  br label %kmalloc_index.exit.i, !dbg !5973

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %17 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5974
  %cmp7.i.i = icmp ugt i64 %17, 128, !dbg !5975
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !5976

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %18 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5977
  %cmp9.i.i = icmp ule i64 %18, 192, !dbg !5978
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !5979

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !5980
  br label %kmalloc_index.exit.i, !dbg !5980

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %19 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5981
  %cmp12.i.i = icmp ule i64 %19, 8, !dbg !5982
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !5983

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !5984
  br label %kmalloc_index.exit.i, !dbg !5984

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %20 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5985
  %cmp15.i.i = icmp ule i64 %20, 16, !dbg !5986
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !5987

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !5988
  br label %kmalloc_index.exit.i, !dbg !5988

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %21 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5989
  %cmp18.i.i = icmp ule i64 %21, 32, !dbg !5990
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !5991

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !5992
  br label %kmalloc_index.exit.i, !dbg !5992

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %22 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5993
  %cmp21.i.i = icmp ule i64 %22, 64, !dbg !5994
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !5995

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !5996
  br label %kmalloc_index.exit.i, !dbg !5996

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %23 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5997
  %cmp24.i.i = icmp ule i64 %23, 128, !dbg !5998
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !5999

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !6000
  br label %kmalloc_index.exit.i, !dbg !6000

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %24 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6001
  %cmp27.i.i = icmp ule i64 %24, 256, !dbg !6002
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !6003

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !6004
  br label %kmalloc_index.exit.i, !dbg !6004

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %25 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6005
  %cmp30.i.i = icmp ule i64 %25, 512, !dbg !6006
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !6007

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !6008
  br label %kmalloc_index.exit.i, !dbg !6008

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %26 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6009
  %cmp33.i.i = icmp ule i64 %26, 1024, !dbg !6010
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !6011

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !6012
  br label %kmalloc_index.exit.i, !dbg !6012

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %27 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6013
  %cmp36.i.i = icmp ule i64 %27, 2048, !dbg !6014
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !6015

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !6016
  br label %kmalloc_index.exit.i, !dbg !6016

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %28 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6017
  %cmp39.i.i = icmp ule i64 %28, 4096, !dbg !6018
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !6019

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !6020
  br label %kmalloc_index.exit.i, !dbg !6020

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6021
  %cmp42.i.i = icmp ule i64 %29, 8192, !dbg !6022
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !6023

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !6024
  br label %kmalloc_index.exit.i, !dbg !6024

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6025
  %cmp45.i.i = icmp ule i64 %30, 16384, !dbg !6026
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !6027

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !6028
  br label %kmalloc_index.exit.i, !dbg !6028

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6029
  %cmp48.i.i = icmp ule i64 %31, 32768, !dbg !6030
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !6031

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !6032
  br label %kmalloc_index.exit.i, !dbg !6032

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6033
  %cmp51.i.i = icmp ule i64 %32, 65536, !dbg !6034
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !6035

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !6036
  br label %kmalloc_index.exit.i, !dbg !6036

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6037
  %cmp54.i.i = icmp ule i64 %33, 131072, !dbg !6038
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !6039

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !6040
  br label %kmalloc_index.exit.i, !dbg !6040

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6041
  %cmp57.i.i = icmp ule i64 %34, 262144, !dbg !6042
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !6043

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !6044
  br label %kmalloc_index.exit.i, !dbg !6044

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6045
  %cmp60.i.i = icmp ule i64 %35, 524288, !dbg !6046
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !6047

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !6048
  br label %kmalloc_index.exit.i, !dbg !6048

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6049
  %cmp63.i.i = icmp ule i64 %36, 1048576, !dbg !6050
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !6051

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !6052
  br label %kmalloc_index.exit.i, !dbg !6052

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6053
  %cmp66.i.i = icmp ule i64 %37, 2097152, !dbg !6054
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !6055

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !6056
  br label %kmalloc_index.exit.i, !dbg !6056

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6057
  %cmp69.i.i = icmp ule i64 %38, 4194304, !dbg !6058
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !6059

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !6060
  br label %kmalloc_index.exit.i, !dbg !6060

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6061
  %cmp72.i.i = icmp ule i64 %39, 8388608, !dbg !6062
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !6063

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !6064
  br label %kmalloc_index.exit.i, !dbg !6064

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6065
  %cmp75.i.i = icmp ule i64 %40, 16777216, !dbg !6066
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !6067

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !6068
  br label %kmalloc_index.exit.i, !dbg !6068

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6069
  %cmp78.i.i = icmp ule i64 %41, 33554432, !dbg !6070
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !6071

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !6072
  br label %kmalloc_index.exit.i, !dbg !6072

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6073
  %cmp81.i.i = icmp ule i64 %42, 67108864, !dbg !6074
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !6075

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !6076
  br label %kmalloc_index.exit.i, !dbg !6076

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.17, i64 0, i64 0), i32 382, i32 0, i64 12) #10, !dbg !6077, !srcloc !5626
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 239) #10, !dbg !6078, !srcloc !5630
  unreachable, !dbg !6079

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %43 = load i32, i32* %retval.i.i, align 4, !dbg !6080
  store i32 %43, i32* %index.i, align 4, !dbg !6081
  %44 = load i32, i32* %index.i, align 4, !dbg !6082
  %tobool.i = icmp ne i32 %44, 0, !dbg !6082
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !6083

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !6084
  br label %kmalloc.exit, !dbg !6084

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %45 = load i32, i32* %flags.addr.i, align 4, !dbg !6085
  store i32 %45, i32* %flags.addr.i13.i, align 4
  %46 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !6086
  %and.i.i = and i32 %46, 17, !dbg !6086
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !6086
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !6086
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !6086
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !6086
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !6087

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !6088
  br label %kmalloc_type.exit.i, !dbg !6088

if.end.i16.i:                                     ; preds = %if.end4.i
  %47 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !6089
  %and2.i.i = and i32 %47, 1, !dbg !6090
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !6089
  %48 = zext i1 %tobool3.i.i to i64, !dbg !6089
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !6089
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !6091
  br label %kmalloc_type.exit.i, !dbg !6091

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %49 = load i32, i32* %retval.i12.i, align 4, !dbg !6092
  %idxprom.i = zext i32 %49 to i64, !dbg !6093
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !6093
  %50 = load i32, i32* %index.i, align 4, !dbg !6094
  %idxprom6.i = zext i32 %50 to i64, !dbg !6093
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !6093
  %51 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !6093
  %52 = load i32, i32* %flags.addr.i, align 4, !dbg !6095
  %53 = load i64, i64* %size.addr.i, align 8, !dbg !6096
  store %struct.kmem_cache* %51, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %52, i32* %flags.addr.i17.i, align 4
  store i64 %53, i64* %size.addr.i18.i, align 8
  %54 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !6097
  %55 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !6098
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %54, i32 %55) #13, !dbg !6099
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !6099
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !6099
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !6099
  call void @llvm.assume(i1 %maskcond.i.i) #10, !dbg !6099
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !5917
  %56 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !6100
  %57 = load i8*, i8** %ret.i.i, align 8, !dbg !6101
  %58 = load i64, i64* %size.addr.i18.i, align 8, !dbg !6102
  %59 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !6103
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %56, i8* %57, i64 %58, i32 %59) #13, !dbg !6104
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !6105
  %60 = load i8*, i8** %ret.i.i, align 8, !dbg !6106
  store i8* %60, i8** %retval.i, align 8, !dbg !6107
  br label %kmalloc.exit, !dbg !6107

if.end9.i:                                        ; preds = %entry
  %61 = load i64, i64* %size.addr.i, align 8, !dbg !6108
  %62 = load i32, i32* %flags.addr.i, align 4, !dbg !6109
  %call10.i = call noalias i8* @__kmalloc(i64 %61, i32 %62) #13, !dbg !6110
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !6110
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !6110
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !6110
  call void @llvm.assume(i1 %maskcond.i) #10, !dbg !6110
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !6111
  br label %kmalloc.exit, !dbg !6111

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %63 = load i8*, i8** %retval.i, align 8, !dbg !6112
  %64 = bitcast i8* %63 to i32*, !dbg !6113
  store i32* %64, i32** %buf, align 8, !dbg !5940
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6114, metadata !DIExpression()), !dbg !6115
  br label %do.body, !dbg !6116

do.body:                                          ; preds = %kmalloc.exit
  %65 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !6117
  %tobool = icmp ne %struct.ufx_data* %65, null, !dbg !6117
  %lnot = xor i1 %tobool, true, !dbg !6117
  %lnot1 = xor i1 %lnot, true, !dbg !6117
  %lnot2 = xor i1 %lnot1, true, !dbg !6117
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !6117
  %conv = sext i32 %lnot.ext to i64, !dbg !6117
  %tobool3 = icmp ne i64 %conv, 0, !dbg !6117
  br i1 %tobool3, label %if.then, label %if.end, !dbg !6120

if.then:                                          ; preds = %do.body
  br label %do.body4, !dbg !6117

do.body4:                                         ; preds = %if.then
  br label %do.body5, !dbg !6121

do.body5:                                         ; preds = %do.body4
  br label %do.end, !dbg !6123

do.end:                                           ; preds = %do.body5
  br label %do.body6, !dbg !6121

do.body6:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.1, i64 0, i64 0), i32 146, i32 0, i64 12) #10, !dbg !6125, !srcloc !6127
  br label %do.end7, !dbg !6125

do.end7:                                          ; preds = %do.body6
  br label %do.body8, !dbg !6121

do.body8:                                         ; preds = %do.end7
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 247) #10, !dbg !6128, !srcloc !6131
  unreachable, !dbg !6132

do.end9:                                          ; No predecessors!
  br label %do.end10, !dbg !6121

do.end10:                                         ; preds = %do.end9
  br label %if.end, !dbg !6121

if.end:                                           ; preds = %do.end10, %do.body
  br label %do.end11, !dbg !6120

do.end11:                                         ; preds = %if.end
  %66 = load i32*, i32** %buf, align 8, !dbg !6133
  %tobool12 = icmp ne i32* %66, null, !dbg !6133
  br i1 %tobool12, label %if.end14, label %if.then13, !dbg !6135

if.then13:                                        ; preds = %do.end11
  store i32 -12, i32* %retval, align 4, !dbg !6136
  br label %return, !dbg !6136

if.end14:                                         ; preds = %do.end11
  %67 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !6137
  %udev = getelementptr inbounds %struct.ufx_data, %struct.ufx_data* %67, i32 0, i32 0, !dbg !6138
  %68 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !dbg !6138
  %69 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !6139
  %udev15 = getelementptr inbounds %struct.ufx_data, %struct.ufx_data* %69, i32 0, i32 0, !dbg !6139
  %70 = load %struct.usb_device*, %struct.usb_device** %udev15, align 8, !dbg !6139
  %call16 = call i32 @__create_pipe(%struct.usb_device* %70, i32 0) #11, !dbg !6139
  %or = or i32 -2147483648, %call16, !dbg !6139
  %or17 = or i32 %or, 128, !dbg !6139
  %71 = load i32, i32* %index.addr, align 4, !dbg !6140
  %conv18 = trunc i32 %71 to i16, !dbg !6140
  %72 = load i32*, i32** %buf, align 8, !dbg !6141
  %73 = bitcast i32* %72 to i8*, !dbg !6141
  %call19 = call i32 @usb_control_msg(%struct.usb_device* %68, i32 %or17, i8 zeroext -95, i8 zeroext -64, i16 zeroext 0, i16 zeroext %conv18, i8* %73, i16 zeroext 4, i32 5000) #11, !dbg !6142
  store i32 %call19, i32* %ret, align 4, !dbg !6143
  br label %do.body20, !dbg !6144

do.body20:                                        ; preds = %if.end14
  %74 = load i32*, i32** %buf, align 8, !dbg !6145
  br label %do.end21, !dbg !6145

do.end21:                                         ; preds = %do.body20
  %75 = load i32*, i32** %buf, align 8, !dbg !6147
  %76 = load i32, i32* %75, align 4, !dbg !6148
  %77 = load i32*, i32** %data.addr, align 8, !dbg !6149
  store i32 %76, i32* %77, align 4, !dbg !6150
  %78 = load i32*, i32** %buf, align 8, !dbg !6151
  %79 = bitcast i32* %78 to i8*, !dbg !6151
  call void @kfree(i8* %79) #11, !dbg !6152
  %80 = load i32, i32* %ret, align 4, !dbg !6153
  %cmp = icmp slt i32 %80, 0, !dbg !6153
  %lnot23 = xor i1 %cmp, true, !dbg !6153
  %lnot25 = xor i1 %lnot23, true, !dbg !6153
  %lnot.ext26 = zext i1 %lnot25 to i32, !dbg !6153
  %conv27 = sext i32 %lnot.ext26 to i64, !dbg !6153
  %tobool28 = icmp ne i64 %conv27, 0, !dbg !6153
  br i1 %tobool28, label %if.then29, label %if.end31, !dbg !6155

if.then29:                                        ; preds = %do.end21
  %81 = load i32, i32* %index.addr, align 4, !dbg !6156
  %call30 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.69, i64 0, i64 0), i32 %81) #12, !dbg !6156
  br label %if.end31, !dbg !6156

if.end31:                                         ; preds = %if.then29, %do.end21
  %82 = load i32, i32* %ret, align 4, !dbg !6157
  store i32 %82, i32* %retval, align 4, !dbg !6158
  br label %return, !dbg !6158

return:                                           ; preds = %if.end31, %if.then13
  %83 = load i32, i32* %retval, align 4, !dbg !6159
  ret i32 %83, !dbg !6159
}

; Function Attrs: cold noredzone
declare dso_local i32 @printk(i8*, ...) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ufx_lite_reset(%struct.ufx_data* %dev) #2 !dbg !6160 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.ufx_data*, align 8
  %status = alloca i32, align 4
  %value = alloca i32, align 4
  store %struct.ufx_data* %dev, %struct.ufx_data** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ufx_data** %dev.addr, metadata !6163, metadata !DIExpression()), !dbg !6164
  call void @llvm.dbg.declare(metadata i32* %status, metadata !6165, metadata !DIExpression()), !dbg !6166
  call void @llvm.dbg.declare(metadata i32* %value, metadata !6167, metadata !DIExpression()), !dbg !6168
  %0 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !6169
  %call = call i32 @ufx_reg_write(%struct.ufx_data* %0, i32 12296, i32 1) #11, !dbg !6170
  store i32 %call, i32* %status, align 4, !dbg !6171
  %1 = load i32, i32* %status, align 4, !dbg !6172
  %cmp = icmp slt i32 %1, 0, !dbg !6172
  br i1 %cmp, label %if.then, label %if.end, !dbg !6175

if.then:                                          ; preds = %entry
  %call1 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.70, i64 0, i64 0)) #12, !dbg !6176
  %2 = load i32, i32* %status, align 4, !dbg !6176
  store i32 %2, i32* %retval, align 4, !dbg !6176
  br label %return, !dbg !6176

if.end:                                           ; preds = %entry
  %3 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !6178
  %call2 = call i32 @ufx_reg_read(%struct.ufx_data* %3, i32 12296, i32* %value) #11, !dbg !6179
  store i32 %call2, i32* %status, align 4, !dbg !6180
  %4 = load i32, i32* %status, align 4, !dbg !6181
  %cmp3 = icmp slt i32 %4, 0, !dbg !6181
  br i1 %cmp3, label %if.then4, label %if.end6, !dbg !6184

if.then4:                                         ; preds = %if.end
  %call5 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.71, i64 0, i64 0)) #12, !dbg !6185
  %5 = load i32, i32* %status, align 4, !dbg !6185
  store i32 %5, i32* %retval, align 4, !dbg !6185
  br label %return, !dbg !6185

if.end6:                                          ; preds = %if.end
  %6 = load i32, i32* %value, align 4, !dbg !6187
  %cmp7 = icmp eq i32 %6, 0, !dbg !6188
  %7 = zext i1 %cmp7 to i64, !dbg !6189
  %cond = select i1 %cmp7, i32 0, i32 -5, !dbg !6189
  store i32 %cond, i32* %retval, align 4, !dbg !6190
  br label %return, !dbg !6190

return:                                           ; preds = %if.end6, %if.then4, %if.then
  %8 = load i32, i32* %retval, align 4, !dbg !6191
  ret i32 %8, !dbg !6191
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ufx_config_sys_clk(%struct.ufx_data* %dev) #2 !dbg !6192 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.ufx_data*, align 8
  %status = alloca i32, align 4
  store %struct.ufx_data* %dev, %struct.ufx_data** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ufx_data** %dev.addr, metadata !6193, metadata !DIExpression()), !dbg !6194
  call void @llvm.dbg.declare(metadata i32* %status, metadata !6195, metadata !DIExpression()), !dbg !6196
  %0 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !6197
  %call = call i32 @ufx_reg_write(%struct.ufx_data* %0, i32 28684, i32 -2147483633) #11, !dbg !6198
  store i32 %call, i32* %status, align 4, !dbg !6196
  %1 = load i32, i32* %status, align 4, !dbg !6199
  %cmp = icmp slt i32 %1, 0, !dbg !6199
  br i1 %cmp, label %if.then, label %if.end, !dbg !6202

if.then:                                          ; preds = %entry
  %call1 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.72, i64 0, i64 0)) #12, !dbg !6203
  %2 = load i32, i32* %status, align 4, !dbg !6203
  store i32 %2, i32* %retval, align 4, !dbg !6203
  br label %return, !dbg !6203

if.end:                                           ; preds = %entry
  %3 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !6205
  %call2 = call i32 @ufx_reg_write(%struct.ufx_data* %3, i32 28692, i32 1049167) #11, !dbg !6206
  store i32 %call2, i32* %status, align 4, !dbg !6207
  %4 = load i32, i32* %status, align 4, !dbg !6208
  %cmp3 = icmp slt i32 %4, 0, !dbg !6208
  br i1 %cmp3, label %if.then4, label %if.end6, !dbg !6211

if.then4:                                         ; preds = %if.end
  %call5 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.73, i64 0, i64 0)) #12, !dbg !6212
  %5 = load i32, i32* %status, align 4, !dbg !6212
  store i32 %5, i32* %retval, align 4, !dbg !6212
  br label %return, !dbg !6212

if.end6:                                          ; preds = %if.end
  %6 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !6214
  %call7 = call i32 @ufx_reg_write(%struct.ufx_data* %6, i32 28688, i32 0) #11, !dbg !6215
  store i32 %call7, i32* %status, align 4, !dbg !6216
  %7 = load i32, i32* %status, align 4, !dbg !6217
  %cmp8 = icmp slt i32 %7, 0, !dbg !6217
  br i1 %cmp8, label %if.then9, label %if.end11, !dbg !6220

if.then9:                                         ; preds = %if.end6
  %call10 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.74, i64 0, i64 0)) #12, !dbg !6221
  %8 = load i32, i32* %status, align 4, !dbg !6221
  store i32 %8, i32* %retval, align 4, !dbg !6221
  br label %return, !dbg !6221

if.end11:                                         ; preds = %if.end6
  %9 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !6223
  %call12 = call i32 @ufx_reg_clear_bits(%struct.ufx_data* %9, i32 28684, i32 10) #11, !dbg !6224
  store i32 %call12, i32* %status, align 4, !dbg !6225
  %10 = load i32, i32* %status, align 4, !dbg !6226
  %cmp13 = icmp slt i32 %10, 0, !dbg !6226
  br i1 %cmp13, label %if.then14, label %if.end16, !dbg !6229

if.then14:                                        ; preds = %if.end11
  %call15 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.75, i64 0, i64 0)) #12, !dbg !6230
  %11 = load i32, i32* %status, align 4, !dbg !6230
  store i32 %11, i32* %retval, align 4, !dbg !6230
  br label %return, !dbg !6230

if.end16:                                         ; preds = %if.end11
  call void @msleep(i32 1) #11, !dbg !6232
  %12 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !6233
  %call17 = call i32 @ufx_reg_clear_bits(%struct.ufx_data* %12, i32 28684, i32 -2147483648) #11, !dbg !6234
  store i32 %call17, i32* %status, align 4, !dbg !6235
  %13 = load i32, i32* %status, align 4, !dbg !6236
  %cmp18 = icmp slt i32 %13, 0, !dbg !6236
  br i1 %cmp18, label %if.then19, label %if.end21, !dbg !6239

if.then19:                                        ; preds = %if.end16
  %call20 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.76, i64 0, i64 0)) #12, !dbg !6240
  %14 = load i32, i32* %status, align 4, !dbg !6240
  store i32 %14, i32* %retval, align 4, !dbg !6240
  br label %return, !dbg !6240

if.end21:                                         ; preds = %if.end16
  store i32 0, i32* %retval, align 4, !dbg !6242
  br label %return, !dbg !6242

return:                                           ; preds = %if.end21, %if.then19, %if.then14, %if.then9, %if.then4, %if.then
  %15 = load i32, i32* %retval, align 4, !dbg !6243
  ret i32 %15, !dbg !6243
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ufx_config_ddr2(%struct.ufx_data* %dev) #2 !dbg !6244 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.ufx_data*, align 8
  %status = alloca i32, align 4
  %i = alloca i32, align 4
  %tmp = alloca i32, align 4
  store %struct.ufx_data* %dev, %struct.ufx_data** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ufx_data** %dev.addr, metadata !6245, metadata !DIExpression()), !dbg !6246
  call void @llvm.dbg.declare(metadata i32* %status, metadata !6247, metadata !DIExpression()), !dbg !6248
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6249, metadata !DIExpression()), !dbg !6250
  store i32 0, i32* %i, align 4, !dbg !6250
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !6251, metadata !DIExpression()), !dbg !6252
  %0 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !6253
  %call = call i32 @ufx_reg_write(%struct.ufx_data* %0, i32 4, i32 2035575) #11, !dbg !6254
  store i32 %call, i32* %status, align 4, !dbg !6255
  %1 = load i32, i32* %status, align 4, !dbg !6256
  %cmp = icmp slt i32 %1, 0, !dbg !6256
  br i1 %cmp, label %if.then, label %if.end, !dbg !6259

if.then:                                          ; preds = %entry
  %call1 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.77, i64 0, i64 0)) #12, !dbg !6260
  %2 = load i32, i32* %status, align 4, !dbg !6260
  store i32 %2, i32* %retval, align 4, !dbg !6260
  br label %return, !dbg !6260

if.end:                                           ; preds = %entry
  %3 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !6262
  %call2 = call i32 @ufx_reg_write(%struct.ufx_data* %3, i32 8, i32 -1048576) #11, !dbg !6263
  store i32 %call2, i32* %status, align 4, !dbg !6264
  %4 = load i32, i32* %status, align 4, !dbg !6265
  %cmp3 = icmp slt i32 %4, 0, !dbg !6265
  br i1 %cmp3, label %if.then4, label %if.end6, !dbg !6268

if.then4:                                         ; preds = %if.end
  %call5 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.78, i64 0, i64 0)) #12, !dbg !6269
  %5 = load i32, i32* %status, align 4, !dbg !6269
  store i32 %5, i32* %retval, align 4, !dbg !6269
  br label %return, !dbg !6269

if.end6:                                          ; preds = %if.end
  %6 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !6271
  %call7 = call i32 @ufx_reg_write(%struct.ufx_data* %6, i32 12, i32 268378658) #11, !dbg !6272
  store i32 %call7, i32* %status, align 4, !dbg !6273
  %7 = load i32, i32* %status, align 4, !dbg !6274
  %cmp8 = icmp slt i32 %7, 0, !dbg !6274
  br i1 %cmp8, label %if.then9, label %if.end11, !dbg !6277

if.then9:                                         ; preds = %if.end6
  %call10 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.79, i64 0, i64 0)) #12, !dbg !6278
  %8 = load i32, i32* %status, align 4, !dbg !6278
  store i32 %8, i32* %retval, align 4, !dbg !6278
  br label %return, !dbg !6278

if.end11:                                         ; preds = %if.end6
  %9 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !6280
  %call12 = call i32 @ufx_reg_write(%struct.ufx_data* %9, i32 16, i32 198676) #11, !dbg !6281
  store i32 %call12, i32* %status, align 4, !dbg !6282
  %10 = load i32, i32* %status, align 4, !dbg !6283
  %cmp13 = icmp slt i32 %10, 0, !dbg !6283
  br i1 %cmp13, label %if.then14, label %if.end16, !dbg !6286

if.then14:                                        ; preds = %if.end11
  %call15 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.80, i64 0, i64 0)) #12, !dbg !6287
  %11 = load i32, i32* %status, align 4, !dbg !6287
  store i32 %11, i32* %retval, align 4, !dbg !6287
  br label %return, !dbg !6287

if.end16:                                         ; preds = %if.end11
  %12 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !6289
  %call17 = call i32 @ufx_reg_write(%struct.ufx_data* %12, i32 20, i32 5242905) #11, !dbg !6290
  store i32 %call17, i32* %status, align 4, !dbg !6291
  %13 = load i32, i32* %status, align 4, !dbg !6292
  %cmp18 = icmp slt i32 %13, 0, !dbg !6292
  br i1 %cmp18, label %if.then19, label %if.end21, !dbg !6295

if.then19:                                        ; preds = %if.end16
  %call20 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.81, i64 0, i64 0)) #12, !dbg !6296
  %14 = load i32, i32* %status, align 4, !dbg !6296
  store i32 %14, i32* %retval, align 4, !dbg !6296
  br label %return, !dbg !6296

if.end21:                                         ; preds = %if.end16
  %15 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !6298
  %call22 = call i32 @ufx_reg_write(%struct.ufx_data* %15, i32 24, i32 34410261) #11, !dbg !6299
  store i32 %call22, i32* %status, align 4, !dbg !6300
  %16 = load i32, i32* %status, align 4, !dbg !6301
  %cmp23 = icmp slt i32 %16, 0, !dbg !6301
  br i1 %cmp23, label %if.then24, label %if.end26, !dbg !6304

if.then24:                                        ; preds = %if.end21
  %call25 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.82, i64 0, i64 0)) #12, !dbg !6305
  %17 = load i32, i32* %status, align 4, !dbg !6305
  store i32 %17, i32* %retval, align 4, !dbg !6305
  br label %return, !dbg !6305

if.end26:                                         ; preds = %if.end21
  %18 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !6307
  %call27 = call i32 @ufx_reg_write(%struct.ufx_data* %18, i32 28, i32 39002885) #11, !dbg !6308
  store i32 %call27, i32* %status, align 4, !dbg !6309
  %19 = load i32, i32* %status, align 4, !dbg !6310
  %cmp28 = icmp slt i32 %19, 0, !dbg !6310
  br i1 %cmp28, label %if.then29, label %if.end31, !dbg !6313

if.then29:                                        ; preds = %if.end26
  %call30 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.83, i64 0, i64 0)) #12, !dbg !6314
  %20 = load i32, i32* %status, align 4, !dbg !6314
  store i32 %20, i32* %retval, align 4, !dbg !6314
  br label %return, !dbg !6314

if.end31:                                         ; preds = %if.end26
  %21 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !6316
  %call32 = call i32 @ufx_reg_write(%struct.ufx_data* %21, i32 32, i32 184748293) #11, !dbg !6317
  store i32 %call32, i32* %status, align 4, !dbg !6318
  %22 = load i32, i32* %status, align 4, !dbg !6319
  %cmp33 = icmp slt i32 %22, 0, !dbg !6319
  br i1 %cmp33, label %if.then34, label %if.end36, !dbg !6322

if.then34:                                        ; preds = %if.end31
  %call35 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.84, i64 0, i64 0)) #12, !dbg !6323
  %23 = load i32, i32* %status, align 4, !dbg !6323
  store i32 %23, i32* %retval, align 4, !dbg !6323
  br label %return, !dbg !6323

if.end36:                                         ; preds = %if.end31
  %24 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !6325
  %call37 = call i32 @ufx_reg_write(%struct.ufx_data* %24, i32 36, i32 2087) #11, !dbg !6326
  store i32 %call37, i32* %status, align 4, !dbg !6327
  %25 = load i32, i32* %status, align 4, !dbg !6328
  %cmp38 = icmp slt i32 %25, 0, !dbg !6328
  br i1 %cmp38, label %if.then39, label %if.end41, !dbg !6331

if.then39:                                        ; preds = %if.end36
  %call40 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.85, i64 0, i64 0)) #12, !dbg !6332
  %26 = load i32, i32* %status, align 4, !dbg !6332
  store i32 %26, i32* %retval, align 4, !dbg !6332
  br label %return, !dbg !6332

if.end41:                                         ; preds = %if.end36
  %27 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !6334
  %call42 = call i32 @ufx_reg_write(%struct.ufx_data* %27, i32 40, i32 0) #11, !dbg !6335
  store i32 %call42, i32* %status, align 4, !dbg !6336
  %28 = load i32, i32* %status, align 4, !dbg !6337
  %cmp43 = icmp slt i32 %28, 0, !dbg !6337
  br i1 %cmp43, label %if.then44, label %if.end46, !dbg !6340

if.then44:                                        ; preds = %if.end41
  %call45 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.86, i64 0, i64 0)) #12, !dbg !6341
  %29 = load i32, i32* %status, align 4, !dbg !6341
  store i32 %29, i32* %retval, align 4, !dbg !6341
  br label %return, !dbg !6341

if.end46:                                         ; preds = %if.end41
  %30 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !6343
  %call47 = call i32 @ufx_reg_write(%struct.ufx_data* %30, i32 44, i32 66) #11, !dbg !6344
  store i32 %call47, i32* %status, align 4, !dbg !6345
  %31 = load i32, i32* %status, align 4, !dbg !6346
  %cmp48 = icmp slt i32 %31, 0, !dbg !6346
  br i1 %cmp48, label %if.then49, label %if.end51, !dbg !6349

if.then49:                                        ; preds = %if.end46
  %call50 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.87, i64 0, i64 0)) #12, !dbg !6350
  %32 = load i32, i32* %status, align 4, !dbg !6350
  store i32 %32, i32* %retval, align 4, !dbg !6350
  br label %return, !dbg !6350

if.end51:                                         ; preds = %if.end46
  %33 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !6352
  %call52 = call i32 @ufx_reg_write(%struct.ufx_data* %33, i32 48, i32 156368896) #11, !dbg !6353
  store i32 %call52, i32* %status, align 4, !dbg !6354
  %34 = load i32, i32* %status, align 4, !dbg !6355
  %cmp53 = icmp slt i32 %34, 0, !dbg !6355
  br i1 %cmp53, label %if.then54, label %if.end56, !dbg !6358

if.then54:                                        ; preds = %if.end51
  %call55 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.88, i64 0, i64 0)) #12, !dbg !6359
  %35 = load i32, i32* %status, align 4, !dbg !6359
  store i32 %35, i32* %retval, align 4, !dbg !6359
  br label %return, !dbg !6359

if.end56:                                         ; preds = %if.end51
  %36 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !6361
  %call57 = call i32 @ufx_reg_write(%struct.ufx_data* %36, i32 52, i32 35795732) #11, !dbg !6362
  store i32 %call57, i32* %status, align 4, !dbg !6363
  %37 = load i32, i32* %status, align 4, !dbg !6364
  %cmp58 = icmp slt i32 %37, 0, !dbg !6364
  br i1 %cmp58, label %if.then59, label %if.end61, !dbg !6367

if.then59:                                        ; preds = %if.end56
  %call60 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.89, i64 0, i64 0)) #12, !dbg !6368
  %38 = load i32, i32* %status, align 4, !dbg !6368
  store i32 %38, i32* %retval, align 4, !dbg !6368
  br label %return, !dbg !6368

if.end61:                                         ; preds = %if.end56
  %39 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !6370
  %call62 = call i32 @ufx_reg_write(%struct.ufx_data* %39, i32 56, i32 4390979) #11, !dbg !6371
  store i32 %call62, i32* %status, align 4, !dbg !6372
  %40 = load i32, i32* %status, align 4, !dbg !6373
  %cmp63 = icmp slt i32 %40, 0, !dbg !6373
  br i1 %cmp63, label %if.then64, label %if.end66, !dbg !6376

if.then64:                                        ; preds = %if.end61
  %call65 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.90, i64 0, i64 0)) #12, !dbg !6377
  %41 = load i32, i32* %status, align 4, !dbg !6377
  store i32 %41, i32* %retval, align 4, !dbg !6377
  br label %return, !dbg !6377

if.end66:                                         ; preds = %if.end61
  %42 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !6379
  %call67 = call i32 @ufx_reg_write(%struct.ufx_data* %42, i32 60, i32 -267452401) #11, !dbg !6380
  store i32 %call67, i32* %status, align 4, !dbg !6381
  %43 = load i32, i32* %status, align 4, !dbg !6382
  %cmp68 = icmp slt i32 %43, 0, !dbg !6382
  br i1 %cmp68, label %if.then69, label %if.end71, !dbg !6385

if.then69:                                        ; preds = %if.end66
  %call70 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.91, i64 0, i64 0)) #12, !dbg !6386
  %44 = load i32, i32* %status, align 4, !dbg !6386
  store i32 %44, i32* %retval, align 4, !dbg !6386
  br label %return, !dbg !6386

if.end71:                                         ; preds = %if.end66
  %45 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !6388
  %call72 = call i32 @ufx_reg_write(%struct.ufx_data* %45, i32 64, i32 -209653745) #11, !dbg !6389
  store i32 %call72, i32* %status, align 4, !dbg !6390
  %46 = load i32, i32* %status, align 4, !dbg !6391
  %cmp73 = icmp slt i32 %46, 0, !dbg !6391
  br i1 %cmp73, label %if.then74, label %if.end76, !dbg !6394

if.then74:                                        ; preds = %if.end71
  %call75 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.92, i64 0, i64 0)) #12, !dbg !6395
  %47 = load i32, i32* %status, align 4, !dbg !6395
  store i32 %47, i32* %retval, align 4, !dbg !6395
  br label %return, !dbg !6395

if.end76:                                         ; preds = %if.end71
  %48 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !6397
  %call77 = call i32 @ufx_reg_write(%struct.ufx_data* %48, i32 68, i32 -267451242) #11, !dbg !6398
  store i32 %call77, i32* %status, align 4, !dbg !6399
  %49 = load i32, i32* %status, align 4, !dbg !6400
  %cmp78 = icmp slt i32 %49, 0, !dbg !6400
  br i1 %cmp78, label %if.then79, label %if.end81, !dbg !6403

if.then79:                                        ; preds = %if.end76
  %call80 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.93, i64 0, i64 0)) #12, !dbg !6404
  %50 = load i32, i32* %status, align 4, !dbg !6404
  store i32 %50, i32* %retval, align 4, !dbg !6404
  br label %return, !dbg !6404

if.end81:                                         ; preds = %if.end76
  %51 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !6406
  %call82 = call i32 @ufx_reg_write(%struct.ufx_data* %51, i32 72, i32 50856966) #11, !dbg !6407
  store i32 %call82, i32* %status, align 4, !dbg !6408
  %52 = load i32, i32* %status, align 4, !dbg !6409
  %cmp83 = icmp slt i32 %52, 0, !dbg !6409
  br i1 %cmp83, label %if.then84, label %if.end86, !dbg !6412

if.then84:                                        ; preds = %if.end81
  %call85 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.94, i64 0, i64 0)) #12, !dbg !6413
  %53 = load i32, i32* %status, align 4, !dbg !6413
  store i32 %53, i32* %retval, align 4, !dbg !6413
  br label %return, !dbg !6413

if.end86:                                         ; preds = %if.end81
  %54 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !6415
  %call87 = call i32 @ufx_reg_write(%struct.ufx_data* %54, i32 76, i32 4096) #11, !dbg !6416
  store i32 %call87, i32* %status, align 4, !dbg !6417
  %55 = load i32, i32* %status, align 4, !dbg !6418
  %cmp88 = icmp slt i32 %55, 0, !dbg !6418
  br i1 %cmp88, label %if.then89, label %if.end91, !dbg !6421

if.then89:                                        ; preds = %if.end86
  %call90 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.95, i64 0, i64 0)) #12, !dbg !6422
  %56 = load i32, i32* %status, align 4, !dbg !6422
  store i32 %56, i32* %retval, align 4, !dbg !6422
  br label %return, !dbg !6422

if.end91:                                         ; preds = %if.end86
  %57 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !6424
  %call92 = call i32 @ufx_reg_write(%struct.ufx_data* %57, i32 92, i32 7) #11, !dbg !6425
  store i32 %call92, i32* %status, align 4, !dbg !6426
  %58 = load i32, i32* %status, align 4, !dbg !6427
  %cmp93 = icmp slt i32 %58, 0, !dbg !6427
  br i1 %cmp93, label %if.then94, label %if.end96, !dbg !6430

if.then94:                                        ; preds = %if.end91
  %call95 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.96, i64 0, i64 0)) #12, !dbg !6431
  %59 = load i32, i32* %status, align 4, !dbg !6431
  store i32 %59, i32* %retval, align 4, !dbg !6431
  br label %return, !dbg !6431

if.end96:                                         ; preds = %if.end91
  %60 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !6433
  %call97 = call i32 @ufx_reg_write(%struct.ufx_data* %60, i32 256, i32 1425014802) #11, !dbg !6434
  store i32 %call97, i32* %status, align 4, !dbg !6435
  %61 = load i32, i32* %status, align 4, !dbg !6436
  %cmp98 = icmp slt i32 %61, 0, !dbg !6436
  br i1 %cmp98, label %if.then99, label %if.end101, !dbg !6439

if.then99:                                        ; preds = %if.end96
  %call100 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.97, i64 0, i64 0)) #12, !dbg !6440
  %62 = load i32, i32* %status, align 4, !dbg !6440
  store i32 %62, i32* %retval, align 4, !dbg !6440
  br label %return, !dbg !6440

if.end101:                                        ; preds = %if.end96
  %63 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !6442
  %call102 = call i32 @ufx_reg_write(%struct.ufx_data* %63, i32 260, i32 16402) #11, !dbg !6443
  store i32 %call102, i32* %status, align 4, !dbg !6444
  %64 = load i32, i32* %status, align 4, !dbg !6445
  %cmp103 = icmp slt i32 %64, 0, !dbg !6445
  br i1 %cmp103, label %if.then104, label %if.end106, !dbg !6448

if.then104:                                       ; preds = %if.end101
  %call105 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.98, i64 0, i64 0)) #12, !dbg !6449
  %65 = load i32, i32* %status, align 4, !dbg !6449
  store i32 %65, i32* %retval, align 4, !dbg !6449
  br label %return, !dbg !6449

if.end106:                                        ; preds = %if.end101
  %66 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !6451
  %call107 = call i32 @ufx_reg_write(%struct.ufx_data* %66, i32 280, i32 1077952576) #11, !dbg !6452
  store i32 %call107, i32* %status, align 4, !dbg !6453
  %67 = load i32, i32* %status, align 4, !dbg !6454
  %cmp108 = icmp slt i32 %67, 0, !dbg !6454
  br i1 %cmp108, label %if.then109, label %if.end111, !dbg !6457

if.then109:                                       ; preds = %if.end106
  %call110 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.99, i64 0, i64 0)) #12, !dbg !6458
  %68 = load i32, i32* %status, align 4, !dbg !6458
  store i32 %68, i32* %retval, align 4, !dbg !6458
  br label %return, !dbg !6458

if.end111:                                        ; preds = %if.end106
  %69 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !6460
  %call112 = call i32 @ufx_reg_write(%struct.ufx_data* %69, i32 0, i32 1) #11, !dbg !6461
  store i32 %call112, i32* %status, align 4, !dbg !6462
  %70 = load i32, i32* %status, align 4, !dbg !6463
  %cmp113 = icmp slt i32 %70, 0, !dbg !6463
  br i1 %cmp113, label %if.then114, label %if.end116, !dbg !6466

if.then114:                                       ; preds = %if.end111
  %call115 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.100, i64 0, i64 0)) #12, !dbg !6467
  %71 = load i32, i32* %status, align 4, !dbg !6467
  store i32 %71, i32* %retval, align 4, !dbg !6467
  br label %return, !dbg !6467

if.end116:                                        ; preds = %if.end111
  br label %while.cond, !dbg !6469

while.cond:                                       ; preds = %if.end125, %if.end116
  %72 = load i32, i32* %i, align 4, !dbg !6470
  %inc = add i32 %72, 1, !dbg !6470
  store i32 %inc, i32* %i, align 4, !dbg !6470
  %cmp117 = icmp slt i32 %72, 500, !dbg !6471
  br i1 %cmp117, label %while.body, label %while.end, !dbg !6469

while.body:                                       ; preds = %while.cond
  %73 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !6472
  %call118 = call i32 @ufx_reg_read(%struct.ufx_data* %73, i32 0, i32* %tmp) #11, !dbg !6474
  store i32 %call118, i32* %status, align 4, !dbg !6475
  %74 = load i32, i32* %status, align 4, !dbg !6476
  %cmp119 = icmp slt i32 %74, 0, !dbg !6476
  br i1 %cmp119, label %if.then120, label %if.end122, !dbg !6479

if.then120:                                       ; preds = %while.body
  %call121 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.101, i64 0, i64 0)) #12, !dbg !6480
  %75 = load i32, i32* %status, align 4, !dbg !6480
  store i32 %75, i32* %retval, align 4, !dbg !6480
  br label %return, !dbg !6480

if.end122:                                        ; preds = %while.body
  %76 = load i32, i32* %tmp, align 4, !dbg !6482
  %and = and i32 %76, -1073741824, !dbg !6482
  %cmp123 = icmp eq i32 %and, -1073741824, !dbg !6482
  br i1 %cmp123, label %if.then124, label %if.end125, !dbg !6484

if.then124:                                       ; preds = %if.end122
  store i32 0, i32* %retval, align 4, !dbg !6485
  br label %return, !dbg !6485

if.end125:                                        ; preds = %if.end122
  br label %while.cond, !dbg !6469, !llvm.loop !6486

while.end:                                        ; preds = %while.cond
  %77 = load i32, i32* %tmp, align 4, !dbg !6488
  %call126 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.102, i64 0, i64 0), i32 %77) #12, !dbg !6488
  store i32 -110, i32* %retval, align 4, !dbg !6489
  br label %return, !dbg !6489

return:                                           ; preds = %while.end, %if.then124, %if.then120, %if.then114, %if.then109, %if.then104, %if.then99, %if.then94, %if.then89, %if.then84, %if.then79, %if.then74, %if.then69, %if.then64, %if.then59, %if.then54, %if.then49, %if.then44, %if.then39, %if.then34, %if.then29, %if.then24, %if.then19, %if.then14, %if.then9, %if.then4, %if.then
  %78 = load i32, i32* %retval, align 4, !dbg !6490
  ret i32 %78, !dbg !6490
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ufx_i2c_init(%struct.ufx_data* %dev) #2 !dbg !6491 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.ufx_data*, align 8
  %tmp = alloca i32, align 4
  %status = alloca i32, align 4
  store %struct.ufx_data* %dev, %struct.ufx_data** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ufx_data** %dev.addr, metadata !6492, metadata !DIExpression()), !dbg !6493
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !6494, metadata !DIExpression()), !dbg !6495
  call void @llvm.dbg.declare(metadata i32* %status, metadata !6496, metadata !DIExpression()), !dbg !6497
  %0 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !6498
  %call = call i32 @ufx_reg_write(%struct.ufx_data* %0, i32 4204, i32 0) #11, !dbg !6499
  store i32 %call, i32* %status, align 4, !dbg !6497
  %1 = load i32, i32* %status, align 4, !dbg !6500
  %cmp = icmp slt i32 %1, 0, !dbg !6500
  br i1 %cmp, label %if.then, label %if.end, !dbg !6503

if.then:                                          ; preds = %entry
  %call1 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.103, i64 0, i64 0)) #12, !dbg !6504
  %2 = load i32, i32* %status, align 4, !dbg !6504
  store i32 %2, i32* %retval, align 4, !dbg !6504
  br label %return, !dbg !6504

if.end:                                           ; preds = %entry
  %3 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !6506
  %call2 = call i32 @ufx_reg_write(%struct.ufx_data* %3, i32 4120, i32 12) #11, !dbg !6507
  store i32 %call2, i32* %status, align 4, !dbg !6508
  %4 = load i32, i32* %status, align 4, !dbg !6509
  %cmp3 = icmp slt i32 %4, 0, !dbg !6509
  br i1 %cmp3, label %if.then4, label %if.end6, !dbg !6512

if.then4:                                         ; preds = %if.end
  %call5 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.104, i64 0, i64 0)) #12, !dbg !6513
  %5 = load i32, i32* %status, align 4, !dbg !6513
  store i32 %5, i32* %retval, align 4, !dbg !6513
  br label %return, !dbg !6513

if.end6:                                          ; preds = %if.end
  %6 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !6515
  %call7 = call i32 @ufx_reg_write(%struct.ufx_data* %6, i32 4116, i32 6) #11, !dbg !6516
  store i32 %call7, i32* %status, align 4, !dbg !6517
  %7 = load i32, i32* %status, align 4, !dbg !6518
  %cmp8 = icmp slt i32 %7, 0, !dbg !6518
  br i1 %cmp8, label %if.then9, label %if.end11, !dbg !6521

if.then9:                                         ; preds = %if.end6
  %call10 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.105, i64 0, i64 0)) #12, !dbg !6522
  %8 = load i32, i32* %status, align 4, !dbg !6522
  store i32 %8, i32* %retval, align 4, !dbg !6522
  br label %return, !dbg !6522

if.end11:                                         ; preds = %if.end6
  %9 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !6524
  %call12 = call i32 @ufx_reg_read(%struct.ufx_data* %9, i32 4096, i32* %tmp) #11, !dbg !6525
  store i32 %call12, i32* %status, align 4, !dbg !6526
  %10 = load i32, i32* %status, align 4, !dbg !6527
  %cmp13 = icmp slt i32 %10, 0, !dbg !6527
  br i1 %cmp13, label %if.then14, label %if.end16, !dbg !6530

if.then14:                                        ; preds = %if.end11
  %call15 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.106, i64 0, i64 0)) #12, !dbg !6531
  %11 = load i32, i32* %status, align 4, !dbg !6531
  store i32 %11, i32* %retval, align 4, !dbg !6531
  br label %return, !dbg !6531

if.end16:                                         ; preds = %if.end11
  %12 = load i32, i32* %tmp, align 4, !dbg !6533
  %and = and i32 %12, -7, !dbg !6533
  store i32 %and, i32* %tmp, align 4, !dbg !6533
  %13 = load i32, i32* %tmp, align 4, !dbg !6534
  %or = or i32 %13, 2, !dbg !6534
  store i32 %or, i32* %tmp, align 4, !dbg !6534
  %14 = load i32, i32* %tmp, align 4, !dbg !6535
  %and17 = and i32 %14, -17, !dbg !6535
  store i32 %and17, i32* %tmp, align 4, !dbg !6535
  %15 = load i32, i32* %tmp, align 4, !dbg !6536
  %or18 = or i32 %15, 33, !dbg !6536
  store i32 %or18, i32* %tmp, align 4, !dbg !6536
  %16 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !6537
  %17 = load i32, i32* %tmp, align 4, !dbg !6538
  %call19 = call i32 @ufx_reg_write(%struct.ufx_data* %16, i32 4096, i32 %17) #11, !dbg !6539
  store i32 %call19, i32* %status, align 4, !dbg !6540
  %18 = load i32, i32* %status, align 4, !dbg !6541
  %cmp20 = icmp slt i32 %18, 0, !dbg !6541
  br i1 %cmp20, label %if.then21, label %if.end23, !dbg !6544

if.then21:                                        ; preds = %if.end16
  %call22 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.107, i64 0, i64 0)) #12, !dbg !6545
  %19 = load i32, i32* %status, align 4, !dbg !6545
  store i32 %19, i32* %retval, align 4, !dbg !6545
  br label %return, !dbg !6545

if.end23:                                         ; preds = %if.end16
  %20 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !6547
  %call24 = call i32 @ufx_reg_clear_and_set_bits(%struct.ufx_data* %20, i32 4100, i32 3072, i32 0) #11, !dbg !6548
  store i32 %call24, i32* %status, align 4, !dbg !6549
  %21 = load i32, i32* %status, align 4, !dbg !6550
  %cmp25 = icmp slt i32 %21, 0, !dbg !6550
  br i1 %cmp25, label %if.then26, label %if.end28, !dbg !6553

if.then26:                                        ; preds = %if.end23
  %call27 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.108, i64 0, i64 0)) #12, !dbg !6554
  %22 = load i32, i32* %status, align 4, !dbg !6554
  store i32 %22, i32* %retval, align 4, !dbg !6554
  br label %return, !dbg !6554

if.end28:                                         ; preds = %if.end23
  %23 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !6556
  %call29 = call i32 @ufx_reg_write(%struct.ufx_data* %23, i32 4204, i32 1) #11, !dbg !6557
  store i32 %call29, i32* %status, align 4, !dbg !6558
  %24 = load i32, i32* %status, align 4, !dbg !6559
  %cmp30 = icmp slt i32 %24, 0, !dbg !6559
  br i1 %cmp30, label %if.then31, label %if.end33, !dbg !6562

if.then31:                                        ; preds = %if.end28
  %call32 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.109, i64 0, i64 0)) #12, !dbg !6563
  %25 = load i32, i32* %status, align 4, !dbg !6563
  store i32 %25, i32* %retval, align 4, !dbg !6563
  br label %return, !dbg !6563

if.end33:                                         ; preds = %if.end28
  store i32 0, i32* %retval, align 4, !dbg !6565
  br label %return, !dbg !6565

return:                                           ; preds = %if.end33, %if.then31, %if.then26, %if.then21, %if.then14, %if.then9, %if.then4, %if.then
  %26 = load i32, i32* %retval, align 4, !dbg !6566
  ret i32 %26, !dbg !6566
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ufx_setup_modes(%struct.ufx_data* %dev, %struct.fb_info* %info, i8* %default_edid, i64 %default_edid_size) #2 !dbg !6567 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !5399, metadata !DIExpression()), !dbg !6570
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !5409, metadata !DIExpression()), !dbg !6573
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !5411, metadata !DIExpression()), !dbg !6574
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !5413, metadata !DIExpression()), !dbg !6575
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !5415, metadata !DIExpression()), !dbg !6576
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !5421, metadata !DIExpression()), !dbg !6578
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !5427, metadata !DIExpression()), !dbg !6580
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !5436, metadata !DIExpression()), !dbg !6583
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !5438, metadata !DIExpression()), !dbg !6584
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !5440, metadata !DIExpression()), !dbg !6585
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !5442, metadata !DIExpression()), !dbg !6586
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !5444, metadata !DIExpression()), !dbg !6587
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !5446, metadata !DIExpression()), !dbg !6588
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !5448, metadata !DIExpression()), !dbg !6589
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !5450, metadata !DIExpression()), !dbg !6590
  %dev.addr = alloca %struct.ufx_data*, align 8
  %info.addr = alloca %struct.fb_info*, align 8
  %default_edid.addr = alloca i8*, align 8
  %default_edid_size.addr = alloca i64, align 8
  %default_vmode = alloca %struct.fb_videomode*, align 8
  %edid = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca i32, align 4
  %tries = alloca i32, align 4
  %fb_vmode = alloca %struct.fb_videomode, align 8
  store %struct.ufx_data* %dev, %struct.ufx_data** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ufx_data** %dev.addr, metadata !6591, metadata !DIExpression()), !dbg !6592
  store %struct.fb_info* %info, %struct.fb_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fb_info** %info.addr, metadata !6593, metadata !DIExpression()), !dbg !6594
  store i8* %default_edid, i8** %default_edid.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %default_edid.addr, metadata !6595, metadata !DIExpression()), !dbg !6596
  store i64 %default_edid_size, i64* %default_edid_size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %default_edid_size.addr, metadata !6597, metadata !DIExpression()), !dbg !6598
  call void @llvm.dbg.declare(metadata %struct.fb_videomode** %default_vmode, metadata !6599, metadata !DIExpression()), !dbg !6602
  store %struct.fb_videomode* null, %struct.fb_videomode** %default_vmode, align 8, !dbg !6602
  call void @llvm.dbg.declare(metadata i8** %edid, metadata !6603, metadata !DIExpression()), !dbg !6604
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6605, metadata !DIExpression()), !dbg !6606
  call void @llvm.dbg.declare(metadata i32* %result, metadata !6607, metadata !DIExpression()), !dbg !6608
  store i32 0, i32* %result, align 4, !dbg !6608
  call void @llvm.dbg.declare(metadata i32* %tries, metadata !6609, metadata !DIExpression()), !dbg !6610
  store i32 3, i32* %tries, align 4, !dbg !6610
  %0 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !6611
  %dev1 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %0, i32 0, i32 22, !dbg !6613
  %1 = load %struct.device*, %struct.device** %dev1, align 8, !dbg !6613
  %tobool = icmp ne %struct.device* %1, null, !dbg !6611
  br i1 %tobool, label %if.then, label %if.end, !dbg !6614

if.then:                                          ; preds = %entry
  %2 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !6615
  %lock = getelementptr inbounds %struct.fb_info, %struct.fb_info* %2, i32 0, i32 4, !dbg !6616
  call void @mutex_lock(%struct.mutex* %lock) #11, !dbg !6617
  br label %if.end, !dbg !6617

if.end:                                           ; preds = %if.then, %entry
  store i64 128, i64* %size.addr.i, align 8
  store i32 3264, i32* %flags.addr.i, align 4
  %3 = load i64, i64* %size.addr.i, align 8, !dbg !6618
  %4 = call i1 @llvm.is.constant.i64(i64 %3) #10, !dbg !6619
  br i1 %4, label %if.then.i, label %if.end9.i, !dbg !6620

if.then.i:                                        ; preds = %if.end
  %5 = load i64, i64* %size.addr.i, align 8, !dbg !6621
  %cmp.i = icmp ugt i64 %5, 8192, !dbg !6622
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !6623

if.then1.i:                                       ; preds = %if.then.i
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !6624
  %7 = load i32, i32* %flags.addr.i, align 4, !dbg !6625
  store i64 %6, i64* %size.addr.i.i, align 8
  store i32 %7, i32* %flags.addr.i.i, align 4
  %8 = load i64, i64* %size.addr.i.i, align 8, !dbg !6626
  %call.i.i = call i32 @get_order(i64 %8) #14, !dbg !6627
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !6587
  %9 = load i64, i64* %size.addr.i.i, align 8, !dbg !6628
  %10 = load i32, i32* %flags.addr.i.i, align 4, !dbg !6629
  %11 = load i32, i32* %order.i.i, align 4, !dbg !6630
  store i64 %9, i64* %size.addr.i.i.i, align 8
  store i32 %10, i32* %flags.addr.i.i.i, align 4
  store i32 %11, i32* %order.addr.i.i.i, align 4
  %12 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !6631
  %13 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !6632
  %14 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !6633
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %12, i32 %13, i32 %14) #13, !dbg !6634
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !6634
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !6634
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !6634
  call void @llvm.assume(i1 %maskcond.i.i.i) #10, !dbg !6634
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !6635
  br label %kmalloc.exit, !dbg !6635

if.end.i:                                         ; preds = %if.then.i
  %15 = load i64, i64* %size.addr.i, align 8, !dbg !6636
  store i64 %15, i64* %size.addr.i11.i, align 8
  %16 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6637
  %tobool.i.i = icmp ne i64 %16, 0, !dbg !6637
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !6638

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !6639
  br label %kmalloc_index.exit.i, !dbg !6639

if.end.i.i:                                       ; preds = %if.end.i
  %17 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6640
  %cmp.i.i = icmp ule i64 %17, 8, !dbg !6641
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !6642

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !6643
  br label %kmalloc_index.exit.i, !dbg !6643

if.end2.i.i:                                      ; preds = %if.end.i.i
  %18 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6644
  %cmp3.i.i = icmp ugt i64 %18, 64, !dbg !6645
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !6646

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %19 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6647
  %cmp4.i.i = icmp ule i64 %19, 96, !dbg !6648
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !6649

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !6650
  br label %kmalloc_index.exit.i, !dbg !6650

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %20 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6651
  %cmp7.i.i = icmp ugt i64 %20, 128, !dbg !6652
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !6653

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %21 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6654
  %cmp9.i.i = icmp ule i64 %21, 192, !dbg !6655
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !6656

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !6657
  br label %kmalloc_index.exit.i, !dbg !6657

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %22 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6658
  %cmp12.i.i = icmp ule i64 %22, 8, !dbg !6659
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !6660

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !6661
  br label %kmalloc_index.exit.i, !dbg !6661

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %23 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6662
  %cmp15.i.i = icmp ule i64 %23, 16, !dbg !6663
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !6664

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !6665
  br label %kmalloc_index.exit.i, !dbg !6665

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %24 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6666
  %cmp18.i.i = icmp ule i64 %24, 32, !dbg !6667
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !6668

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !6669
  br label %kmalloc_index.exit.i, !dbg !6669

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %25 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6670
  %cmp21.i.i = icmp ule i64 %25, 64, !dbg !6671
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !6672

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !6673
  br label %kmalloc_index.exit.i, !dbg !6673

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %26 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6674
  %cmp24.i.i = icmp ule i64 %26, 128, !dbg !6675
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !6676

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !6677
  br label %kmalloc_index.exit.i, !dbg !6677

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %27 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6678
  %cmp27.i.i = icmp ule i64 %27, 256, !dbg !6679
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !6680

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !6681
  br label %kmalloc_index.exit.i, !dbg !6681

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %28 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6682
  %cmp30.i.i = icmp ule i64 %28, 512, !dbg !6683
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !6684

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !6685
  br label %kmalloc_index.exit.i, !dbg !6685

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6686
  %cmp33.i.i = icmp ule i64 %29, 1024, !dbg !6687
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !6688

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !6689
  br label %kmalloc_index.exit.i, !dbg !6689

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6690
  %cmp36.i.i = icmp ule i64 %30, 2048, !dbg !6691
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !6692

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !6693
  br label %kmalloc_index.exit.i, !dbg !6693

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6694
  %cmp39.i.i = icmp ule i64 %31, 4096, !dbg !6695
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !6696

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !6697
  br label %kmalloc_index.exit.i, !dbg !6697

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6698
  %cmp42.i.i = icmp ule i64 %32, 8192, !dbg !6699
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !6700

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !6701
  br label %kmalloc_index.exit.i, !dbg !6701

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6702
  %cmp45.i.i = icmp ule i64 %33, 16384, !dbg !6703
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !6704

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !6705
  br label %kmalloc_index.exit.i, !dbg !6705

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6706
  %cmp48.i.i = icmp ule i64 %34, 32768, !dbg !6707
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !6708

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !6709
  br label %kmalloc_index.exit.i, !dbg !6709

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6710
  %cmp51.i.i = icmp ule i64 %35, 65536, !dbg !6711
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !6712

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !6713
  br label %kmalloc_index.exit.i, !dbg !6713

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6714
  %cmp54.i.i = icmp ule i64 %36, 131072, !dbg !6715
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !6716

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !6717
  br label %kmalloc_index.exit.i, !dbg !6717

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6718
  %cmp57.i.i = icmp ule i64 %37, 262144, !dbg !6719
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !6720

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !6721
  br label %kmalloc_index.exit.i, !dbg !6721

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6722
  %cmp60.i.i = icmp ule i64 %38, 524288, !dbg !6723
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !6724

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !6725
  br label %kmalloc_index.exit.i, !dbg !6725

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6726
  %cmp63.i.i = icmp ule i64 %39, 1048576, !dbg !6727
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !6728

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !6729
  br label %kmalloc_index.exit.i, !dbg !6729

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6730
  %cmp66.i.i = icmp ule i64 %40, 2097152, !dbg !6731
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !6732

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !6733
  br label %kmalloc_index.exit.i, !dbg !6733

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6734
  %cmp69.i.i = icmp ule i64 %41, 4194304, !dbg !6735
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !6736

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !6737
  br label %kmalloc_index.exit.i, !dbg !6737

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6738
  %cmp72.i.i = icmp ule i64 %42, 8388608, !dbg !6739
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !6740

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !6741
  br label %kmalloc_index.exit.i, !dbg !6741

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6742
  %cmp75.i.i = icmp ule i64 %43, 16777216, !dbg !6743
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !6744

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !6745
  br label %kmalloc_index.exit.i, !dbg !6745

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6746
  %cmp78.i.i = icmp ule i64 %44, 33554432, !dbg !6747
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !6748

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !6749
  br label %kmalloc_index.exit.i, !dbg !6749

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %45 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6750
  %cmp81.i.i = icmp ule i64 %45, 67108864, !dbg !6751
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !6752

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !6753
  br label %kmalloc_index.exit.i, !dbg !6753

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.17, i64 0, i64 0), i32 382, i32 0, i64 12) #10, !dbg !6754, !srcloc !5626
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 239) #10, !dbg !6755, !srcloc !5630
  unreachable, !dbg !6756

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %46 = load i32, i32* %retval.i.i, align 4, !dbg !6757
  store i32 %46, i32* %index.i, align 4, !dbg !6758
  %47 = load i32, i32* %index.i, align 4, !dbg !6759
  %tobool.i = icmp ne i32 %47, 0, !dbg !6759
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !6760

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !6761
  br label %kmalloc.exit, !dbg !6761

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %48 = load i32, i32* %flags.addr.i, align 4, !dbg !6762
  store i32 %48, i32* %flags.addr.i13.i, align 4
  %49 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !6763
  %and.i.i = and i32 %49, 17, !dbg !6763
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !6763
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !6763
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !6763
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !6763
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !6764

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !6765
  br label %kmalloc_type.exit.i, !dbg !6765

if.end.i16.i:                                     ; preds = %if.end4.i
  %50 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !6766
  %and2.i.i = and i32 %50, 1, !dbg !6767
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !6766
  %51 = zext i1 %tobool3.i.i to i64, !dbg !6766
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !6766
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !6768
  br label %kmalloc_type.exit.i, !dbg !6768

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %52 = load i32, i32* %retval.i12.i, align 4, !dbg !6769
  %idxprom.i = zext i32 %52 to i64, !dbg !6770
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !6770
  %53 = load i32, i32* %index.i, align 4, !dbg !6771
  %idxprom6.i = zext i32 %53 to i64, !dbg !6770
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !6770
  %54 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !6770
  %55 = load i32, i32* %flags.addr.i, align 4, !dbg !6772
  %56 = load i64, i64* %size.addr.i, align 8, !dbg !6773
  store %struct.kmem_cache* %54, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %55, i32* %flags.addr.i17.i, align 4
  store i64 %56, i64* %size.addr.i18.i, align 8
  %57 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !6774
  %58 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !6775
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %57, i32 %58) #13, !dbg !6776
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !6776
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !6776
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !6776
  call void @llvm.assume(i1 %maskcond.i.i) #10, !dbg !6776
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !6575
  %59 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !6777
  %60 = load i8*, i8** %ret.i.i, align 8, !dbg !6778
  %61 = load i64, i64* %size.addr.i18.i, align 8, !dbg !6779
  %62 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !6780
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %59, i8* %60, i64 %61, i32 %62) #13, !dbg !6781
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !6782
  %63 = load i8*, i8** %ret.i.i, align 8, !dbg !6783
  store i8* %63, i8** %retval.i, align 8, !dbg !6784
  br label %kmalloc.exit, !dbg !6784

if.end9.i:                                        ; preds = %if.end
  %64 = load i64, i64* %size.addr.i, align 8, !dbg !6785
  %65 = load i32, i32* %flags.addr.i, align 4, !dbg !6786
  %call10.i = call noalias i8* @__kmalloc(i64 %64, i32 %65) #13, !dbg !6787
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !6787
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !6787
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !6787
  call void @llvm.assume(i1 %maskcond.i) #10, !dbg !6787
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !6788
  br label %kmalloc.exit, !dbg !6788

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %66 = load i8*, i8** %retval.i, align 8, !dbg !6789
  store i8* %66, i8** %edid, align 8, !dbg !6790
  %67 = load i8*, i8** %edid, align 8, !dbg !6791
  %tobool2 = icmp ne i8* %67, null, !dbg !6791
  br i1 %tobool2, label %if.end4, label %if.then3, !dbg !6793

if.then3:                                         ; preds = %kmalloc.exit
  store i32 -12, i32* %result, align 4, !dbg !6794
  br label %error, !dbg !6796

if.end4:                                          ; preds = %kmalloc.exit
  %68 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !6797
  %modelist = getelementptr inbounds %struct.fb_info, %struct.fb_info* %68, i32 0, i32 13, !dbg !6798
  call void @fb_destroy_modelist(%struct.list_head* %modelist) #11, !dbg !6799
  %69 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !6800
  %monspecs = getelementptr inbounds %struct.fb_info, %struct.fb_info* %69, i32 0, i32 8, !dbg !6801
  %70 = bitcast %struct.fb_monspecs* %monspecs to i8*, !dbg !6802
  call void @llvm.memset.p0i8.i64(i8* align 8 %70, i8 0, i64 144, i1 false), !dbg !6802
  br label %while.cond, !dbg !6803

while.cond:                                       ; preds = %if.end14, %if.end4
  %71 = load i32, i32* %tries, align 4, !dbg !6804
  %dec = add i32 %71, -1, !dbg !6804
  store i32 %dec, i32* %tries, align 4, !dbg !6804
  %tobool5 = icmp ne i32 %71, 0, !dbg !6803
  br i1 %tobool5, label %while.body, label %while.end, !dbg !6803

while.body:                                       ; preds = %while.cond
  %72 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !6805
  %73 = load i8*, i8** %edid, align 8, !dbg !6807
  %call6 = call i32 @ufx_read_edid(%struct.ufx_data* %72, i8* %73, i32 128) #11, !dbg !6808
  store i32 %call6, i32* %i, align 4, !dbg !6809
  %74 = load i32, i32* %i, align 4, !dbg !6810
  %cmp = icmp sge i32 %74, 128, !dbg !6812
  br i1 %cmp, label %if.then7, label %if.end9, !dbg !6813

if.then7:                                         ; preds = %while.body
  %75 = load i8*, i8** %edid, align 8, !dbg !6814
  %76 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !6815
  %monspecs8 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %76, i32 0, i32 8, !dbg !6816
  call void @fb_edid_to_monspecs(i8* %75, %struct.fb_monspecs* %monspecs8) #11, !dbg !6817
  br label %if.end9, !dbg !6817

if.end9:                                          ; preds = %if.then7, %while.body
  %77 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !6818
  %monspecs10 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %77, i32 0, i32 8, !dbg !6820
  %modedb_len = getelementptr inbounds %struct.fb_monspecs, %struct.fb_monspecs* %monspecs10, i32 0, i32 6, !dbg !6821
  %78 = load i32, i32* %modedb_len, align 8, !dbg !6821
  %cmp11 = icmp ugt i32 %78, 0, !dbg !6822
  br i1 %cmp11, label %if.then12, label %if.end14, !dbg !6823

if.then12:                                        ; preds = %if.end9
  %79 = load i8*, i8** %edid, align 8, !dbg !6824
  %80 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !6826
  %edid13 = getelementptr inbounds %struct.ufx_data, %struct.ufx_data* %80, i32 0, i32 10, !dbg !6827
  store i8* %79, i8** %edid13, align 8, !dbg !6828
  %81 = load i32, i32* %i, align 4, !dbg !6829
  %conv = sext i32 %81 to i64, !dbg !6829
  %82 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !6830
  %edid_size = getelementptr inbounds %struct.ufx_data, %struct.ufx_data* %82, i32 0, i32 11, !dbg !6831
  store i64 %conv, i64* %edid_size, align 8, !dbg !6832
  br label %while.end, !dbg !6833

if.end14:                                         ; preds = %if.end9
  br label %while.cond, !dbg !6803, !llvm.loop !6834

while.end:                                        ; preds = %if.then12, %while.cond
  %83 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !6836
  %monspecs15 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %83, i32 0, i32 8, !dbg !6838
  %modedb_len16 = getelementptr inbounds %struct.fb_monspecs, %struct.fb_monspecs* %monspecs15, i32 0, i32 6, !dbg !6839
  %84 = load i32, i32* %modedb_len16, align 8, !dbg !6839
  %cmp17 = icmp eq i32 %84, 0, !dbg !6840
  br i1 %cmp17, label %if.then19, label %if.end34, !dbg !6841

if.then19:                                        ; preds = %while.end
  %call20 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.110, i64 0, i64 0)) #12, !dbg !6842
  %85 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !6844
  %edid21 = getelementptr inbounds %struct.ufx_data, %struct.ufx_data* %85, i32 0, i32 10, !dbg !6846
  %86 = load i8*, i8** %edid21, align 8, !dbg !6846
  %tobool22 = icmp ne i8* %86, null, !dbg !6844
  br i1 %tobool22, label %if.then23, label %if.end33, !dbg !6847

if.then23:                                        ; preds = %if.then19
  %87 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !6848
  %edid24 = getelementptr inbounds %struct.ufx_data, %struct.ufx_data* %87, i32 0, i32 10, !dbg !6850
  %88 = load i8*, i8** %edid24, align 8, !dbg !6850
  %89 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !6851
  %monspecs25 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %89, i32 0, i32 8, !dbg !6852
  call void @fb_edid_to_monspecs(i8* %88, %struct.fb_monspecs* %monspecs25) #11, !dbg !6853
  %90 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !6854
  %monspecs26 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %90, i32 0, i32 8, !dbg !6856
  %modedb_len27 = getelementptr inbounds %struct.fb_monspecs, %struct.fb_monspecs* %monspecs26, i32 0, i32 6, !dbg !6857
  %91 = load i32, i32* %modedb_len27, align 8, !dbg !6857
  %cmp28 = icmp ugt i32 %91, 0, !dbg !6858
  br i1 %cmp28, label %if.then30, label %if.end32, !dbg !6859

if.then30:                                        ; preds = %if.then23
  %call31 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.111, i64 0, i64 0)) #12, !dbg !6860
  br label %if.end32, !dbg !6860

if.end32:                                         ; preds = %if.then30, %if.then23
  br label %if.end33, !dbg !6861

if.end33:                                         ; preds = %if.end32, %if.then19
  br label %if.end34, !dbg !6862

if.end34:                                         ; preds = %if.end33, %while.end
  %92 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !6863
  %monspecs35 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %92, i32 0, i32 8, !dbg !6865
  %modedb_len36 = getelementptr inbounds %struct.fb_monspecs, %struct.fb_monspecs* %monspecs35, i32 0, i32 6, !dbg !6866
  %93 = load i32, i32* %modedb_len36, align 8, !dbg !6866
  %cmp37 = icmp eq i32 %93, 0, !dbg !6867
  br i1 %cmp37, label %if.then39, label %if.end54, !dbg !6868

if.then39:                                        ; preds = %if.end34
  %94 = load i64, i64* %default_edid_size.addr, align 8, !dbg !6869
  %cmp40 = icmp uge i64 %94, 128, !dbg !6872
  br i1 %cmp40, label %if.then42, label %if.end53, !dbg !6873

if.then42:                                        ; preds = %if.then39
  %95 = load i8*, i8** %default_edid.addr, align 8, !dbg !6874
  %96 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !6876
  %monspecs43 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %96, i32 0, i32 8, !dbg !6877
  call void @fb_edid_to_monspecs(i8* %95, %struct.fb_monspecs* %monspecs43) #11, !dbg !6878
  %97 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !6879
  %monspecs44 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %97, i32 0, i32 8, !dbg !6881
  %modedb_len45 = getelementptr inbounds %struct.fb_monspecs, %struct.fb_monspecs* %monspecs44, i32 0, i32 6, !dbg !6882
  %98 = load i32, i32* %modedb_len45, align 8, !dbg !6882
  %cmp46 = icmp ugt i32 %98, 0, !dbg !6883
  br i1 %cmp46, label %if.then48, label %if.end52, !dbg !6884

if.then48:                                        ; preds = %if.then42
  %99 = load i8*, i8** %edid, align 8, !dbg !6885
  %100 = load i8*, i8** %default_edid.addr, align 8, !dbg !6887
  %101 = load i64, i64* %default_edid_size.addr, align 8, !dbg !6888
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %99, i8* align 1 %100, i64 %101, i1 false), !dbg !6889
  %102 = load i8*, i8** %edid, align 8, !dbg !6890
  %103 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !6891
  %edid49 = getelementptr inbounds %struct.ufx_data, %struct.ufx_data* %103, i32 0, i32 10, !dbg !6892
  store i8* %102, i8** %edid49, align 8, !dbg !6893
  %104 = load i64, i64* %default_edid_size.addr, align 8, !dbg !6894
  %105 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !6895
  %edid_size50 = getelementptr inbounds %struct.ufx_data, %struct.ufx_data* %105, i32 0, i32 11, !dbg !6896
  store i64 %104, i64* %edid_size50, align 8, !dbg !6897
  %call51 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.112, i64 0, i64 0)) #12, !dbg !6898
  br label %if.end52, !dbg !6899

if.end52:                                         ; preds = %if.then48, %if.then42
  br label %if.end53, !dbg !6900

if.end53:                                         ; preds = %if.end52, %if.then39
  br label %if.end54, !dbg !6901

if.end54:                                         ; preds = %if.end53, %if.end34
  %106 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !6902
  %monspecs55 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %106, i32 0, i32 8, !dbg !6904
  %modedb_len56 = getelementptr inbounds %struct.fb_monspecs, %struct.fb_monspecs* %monspecs55, i32 0, i32 6, !dbg !6905
  %107 = load i32, i32* %modedb_len56, align 8, !dbg !6905
  %cmp57 = icmp ugt i32 %107, 0, !dbg !6906
  br i1 %cmp57, label %if.then59, label %if.end81, !dbg !6907

if.then59:                                        ; preds = %if.end54
  store i32 0, i32* %i, align 4, !dbg !6908
  br label %for.cond, !dbg !6911

for.cond:                                         ; preds = %for.inc, %if.then59
  %108 = load i32, i32* %i, align 4, !dbg !6912
  %109 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !6914
  %monspecs60 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %109, i32 0, i32 8, !dbg !6915
  %modedb_len61 = getelementptr inbounds %struct.fb_monspecs, %struct.fb_monspecs* %monspecs60, i32 0, i32 6, !dbg !6916
  %110 = load i32, i32* %modedb_len61, align 8, !dbg !6916
  %cmp62 = icmp ult i32 %108, %110, !dbg !6917
  br i1 %cmp62, label %for.body, label %for.end, !dbg !6918

for.body:                                         ; preds = %for.cond
  %111 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !6919
  %monspecs64 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %111, i32 0, i32 8, !dbg !6922
  %modedb = getelementptr inbounds %struct.fb_monspecs, %struct.fb_monspecs* %monspecs64, i32 0, i32 1, !dbg !6923
  %112 = load %struct.fb_videomode*, %struct.fb_videomode** %modedb, align 8, !dbg !6923
  %113 = load i32, i32* %i, align 4, !dbg !6924
  %idxprom = sext i32 %113 to i64, !dbg !6919
  %arrayidx = getelementptr %struct.fb_videomode, %struct.fb_videomode* %112, i64 %idxprom, !dbg !6919
  %114 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !6925
  %call65 = call i32 @ufx_is_valid_mode(%struct.fb_videomode* %arrayidx, %struct.fb_info* %114) #11, !dbg !6926
  %tobool66 = icmp ne i32 %call65, 0, !dbg !6926
  br i1 %tobool66, label %if.then67, label %if.else, !dbg !6927

if.then67:                                        ; preds = %for.body
  %115 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !6928
  %monspecs68 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %115, i32 0, i32 8, !dbg !6929
  %modedb69 = getelementptr inbounds %struct.fb_monspecs, %struct.fb_monspecs* %monspecs68, i32 0, i32 1, !dbg !6930
  %116 = load %struct.fb_videomode*, %struct.fb_videomode** %modedb69, align 8, !dbg !6930
  %117 = load i32, i32* %i, align 4, !dbg !6931
  %idxprom70 = sext i32 %117 to i64, !dbg !6928
  %arrayidx71 = getelementptr %struct.fb_videomode, %struct.fb_videomode* %116, i64 %idxprom70, !dbg !6928
  %118 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !6932
  %modelist72 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %118, i32 0, i32 13, !dbg !6933
  %call73 = call i32 @fb_add_videomode(%struct.fb_videomode* %arrayidx71, %struct.list_head* %modelist72) #11, !dbg !6934
  br label %if.end77, !dbg !6934

if.else:                                          ; preds = %for.body
  %119 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !6935
  %monspecs74 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %119, i32 0, i32 8, !dbg !6936
  %misc = getelementptr inbounds %struct.fb_monspecs, %struct.fb_monspecs* %monspecs74, i32 0, i32 22, !dbg !6937
  %120 = load i16, i16* %misc, align 2, !dbg !6938
  %conv75 = zext i16 %120 to i32, !dbg !6938
  %and = and i32 %conv75, -3, !dbg !6938
  %conv76 = trunc i32 %and to i16, !dbg !6938
  store i16 %conv76, i16* %misc, align 2, !dbg !6938
  br label %if.end77

if.end77:                                         ; preds = %if.else, %if.then67
  br label %for.inc, !dbg !6939

for.inc:                                          ; preds = %if.end77
  %121 = load i32, i32* %i, align 4, !dbg !6940
  %inc = add i32 %121, 1, !dbg !6940
  store i32 %inc, i32* %i, align 4, !dbg !6940
  br label %for.cond, !dbg !6941, !llvm.loop !6942

for.end:                                          ; preds = %for.cond
  %122 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !6944
  %monspecs78 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %122, i32 0, i32 8, !dbg !6945
  %123 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !6946
  %modelist79 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %123, i32 0, i32 13, !dbg !6947
  %call80 = call %struct.fb_videomode* @fb_find_best_display(%struct.fb_monspecs* %monspecs78, %struct.list_head* %modelist79) #11, !dbg !6948
  store %struct.fb_videomode* %call80, %struct.fb_videomode** %default_vmode, align 8, !dbg !6949
  br label %if.end81, !dbg !6950

if.end81:                                         ; preds = %for.end, %if.end54
  %124 = load %struct.fb_videomode*, %struct.fb_videomode** %default_vmode, align 8, !dbg !6951
  %cmp82 = icmp eq %struct.fb_videomode* %124, null, !dbg !6953
  br i1 %cmp82, label %if.then84, label %if.end104, !dbg !6954

if.then84:                                        ; preds = %if.end81
  call void @llvm.dbg.declare(metadata %struct.fb_videomode* %fb_vmode, metadata !6955, metadata !DIExpression()), !dbg !6957
  %125 = bitcast %struct.fb_videomode* %fb_vmode to i8*, !dbg !6957
  call void @llvm.memset.p0i8.i64(i8* align 8 %125, i8 0, i64 64, i1 false), !dbg !6957
  store i32 0, i32* %i, align 4, !dbg !6958
  br label %for.cond85, !dbg !6960

for.cond85:                                       ; preds = %for.inc99, %if.then84
  %126 = load i32, i32* %i, align 4, !dbg !6961
  %cmp86 = icmp slt i32 %126, 43, !dbg !6963
  br i1 %cmp86, label %for.body88, label %for.end101, !dbg !6964

for.body88:                                       ; preds = %for.cond85
  %127 = load i32, i32* %i, align 4, !dbg !6965
  %idxprom89 = sext i32 %127 to i64, !dbg !6968
  %arrayidx90 = getelementptr [0 x %struct.fb_videomode], [0 x %struct.fb_videomode]* @vesa_modes, i64 0, i64 %idxprom89, !dbg !6968
  %128 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !6969
  %call91 = call i32 @ufx_is_valid_mode(%struct.fb_videomode* %arrayidx90, %struct.fb_info* %128) #11, !dbg !6970
  %tobool92 = icmp ne i32 %call91, 0, !dbg !6970
  br i1 %tobool92, label %if.then93, label %if.end98, !dbg !6971

if.then93:                                        ; preds = %for.body88
  %129 = load i32, i32* %i, align 4, !dbg !6972
  %idxprom94 = sext i32 %129 to i64, !dbg !6973
  %arrayidx95 = getelementptr [0 x %struct.fb_videomode], [0 x %struct.fb_videomode]* @vesa_modes, i64 0, i64 %idxprom94, !dbg !6973
  %130 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !6974
  %modelist96 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %130, i32 0, i32 13, !dbg !6975
  %call97 = call i32 @fb_add_videomode(%struct.fb_videomode* %arrayidx95, %struct.list_head* %modelist96) #11, !dbg !6976
  br label %if.end98, !dbg !6976

if.end98:                                         ; preds = %if.then93, %for.body88
  br label %for.inc99, !dbg !6977

for.inc99:                                        ; preds = %if.end98
  %131 = load i32, i32* %i, align 4, !dbg !6978
  %inc100 = add i32 %131, 1, !dbg !6978
  store i32 %inc100, i32* %i, align 4, !dbg !6978
  br label %for.cond85, !dbg !6979, !llvm.loop !6980

for.end101:                                       ; preds = %for.cond85
  %xres = getelementptr inbounds %struct.fb_videomode, %struct.fb_videomode* %fb_vmode, i32 0, i32 2, !dbg !6982
  store i32 800, i32* %xres, align 4, !dbg !6983
  %yres = getelementptr inbounds %struct.fb_videomode, %struct.fb_videomode* %fb_vmode, i32 0, i32 3, !dbg !6984
  store i32 600, i32* %yres, align 8, !dbg !6985
  %refresh = getelementptr inbounds %struct.fb_videomode, %struct.fb_videomode* %fb_vmode, i32 0, i32 1, !dbg !6986
  store i32 60, i32* %refresh, align 8, !dbg !6987
  %132 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !6988
  %modelist102 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %132, i32 0, i32 13, !dbg !6989
  %call103 = call %struct.fb_videomode* @fb_find_nearest_mode(%struct.fb_videomode* %fb_vmode, %struct.list_head* %modelist102) #11, !dbg !6990
  store %struct.fb_videomode* %call103, %struct.fb_videomode** %default_vmode, align 8, !dbg !6991
  br label %if.end104, !dbg !6992

if.end104:                                        ; preds = %for.end101, %if.end81
  %133 = load %struct.fb_videomode*, %struct.fb_videomode** %default_vmode, align 8, !dbg !6993
  %cmp105 = icmp ne %struct.fb_videomode* %133, null, !dbg !6995
  br i1 %cmp105, label %land.lhs.true, label %if.else116, !dbg !6996

land.lhs.true:                                    ; preds = %if.end104
  %134 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !6997
  %fb_count = getelementptr inbounds %struct.ufx_data, %struct.ufx_data* %134, i32 0, i32 5, !dbg !6998
  %135 = load i32, i32* %fb_count, align 4, !dbg !6998
  %cmp107 = icmp eq i32 %135, 0, !dbg !6999
  br i1 %cmp107, label %if.then109, label %if.else116, !dbg !7000

if.then109:                                       ; preds = %land.lhs.true
  %136 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !7001
  %var = getelementptr inbounds %struct.fb_info, %struct.fb_info* %136, i32 0, i32 6, !dbg !7003
  %137 = load %struct.fb_videomode*, %struct.fb_videomode** %default_vmode, align 8, !dbg !7004
  call void @fb_videomode_to_var(%struct.fb_var_screeninfo* %var, %struct.fb_videomode* %137) #11, !dbg !7005
  %138 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !7006
  %var110 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %138, i32 0, i32 6, !dbg !7007
  call void @ufx_var_color_format(%struct.fb_var_screeninfo* %var110) #11, !dbg !7008
  %139 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !7009
  %fix = getelementptr inbounds %struct.fb_info, %struct.fb_info* %139, i32 0, i32 7, !dbg !7010
  %140 = bitcast %struct.fb_fix_screeninfo* %fix to i8*, !dbg !7011
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %140, i8* align 8 getelementptr inbounds (%struct.fb_fix_screeninfo, %struct.fb_fix_screeninfo* @ufx_fix, i32 0, i32 0, i32 0), i64 80, i1 false), !dbg !7011
  %141 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !7012
  %var111 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %141, i32 0, i32 6, !dbg !7013
  %xres112 = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %var111, i32 0, i32 0, !dbg !7014
  %142 = load i32, i32* %xres112, align 8, !dbg !7014
  %143 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !7015
  %var113 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %143, i32 0, i32 6, !dbg !7016
  %bits_per_pixel = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %var113, i32 0, i32 6, !dbg !7017
  %144 = load i32, i32* %bits_per_pixel, align 8, !dbg !7017
  %div = udiv i32 %144, 8, !dbg !7018
  %mul = mul i32 %142, %div, !dbg !7019
  %145 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !7020
  %fix114 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %145, i32 0, i32 7, !dbg !7021
  %line_length = getelementptr inbounds %struct.fb_fix_screeninfo, %struct.fb_fix_screeninfo* %fix114, i32 0, i32 9, !dbg !7022
  store i32 %mul, i32* %line_length, align 8, !dbg !7023
  %146 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !7024
  %147 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !7025
  %call115 = call i32 @ufx_realloc_framebuffer(%struct.ufx_data* %146, %struct.fb_info* %147) #11, !dbg !7026
  store i32 %call115, i32* %result, align 4, !dbg !7027
  br label %if.end117, !dbg !7028

if.else116:                                       ; preds = %land.lhs.true, %if.end104
  store i32 -22, i32* %result, align 4, !dbg !7029
  br label %if.end117

if.end117:                                        ; preds = %if.else116, %if.then109
  br label %error, !dbg !7030

error:                                            ; preds = %if.end117, %if.then3
  call void @llvm.dbg.label(metadata !7031), !dbg !7032
  %148 = load i8*, i8** %edid, align 8, !dbg !7033
  %tobool118 = icmp ne i8* %148, null, !dbg !7033
  br i1 %tobool118, label %land.lhs.true119, label %if.end124, !dbg !7035

land.lhs.true119:                                 ; preds = %error
  %149 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !7036
  %edid120 = getelementptr inbounds %struct.ufx_data, %struct.ufx_data* %149, i32 0, i32 10, !dbg !7037
  %150 = load i8*, i8** %edid120, align 8, !dbg !7037
  %151 = load i8*, i8** %edid, align 8, !dbg !7038
  %cmp121 = icmp ne i8* %150, %151, !dbg !7039
  br i1 %cmp121, label %if.then123, label %if.end124, !dbg !7040

if.then123:                                       ; preds = %land.lhs.true119
  %152 = load i8*, i8** %edid, align 8, !dbg !7041
  call void @kfree(i8* %152) #11, !dbg !7042
  br label %if.end124, !dbg !7042

if.end124:                                        ; preds = %if.then123, %land.lhs.true119, %error
  %153 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !7043
  %dev125 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %153, i32 0, i32 22, !dbg !7045
  %154 = load %struct.device*, %struct.device** %dev125, align 8, !dbg !7045
  %tobool126 = icmp ne %struct.device* %154, null, !dbg !7043
  br i1 %tobool126, label %if.then127, label %if.end129, !dbg !7046

if.then127:                                       ; preds = %if.end124
  %155 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !7047
  %lock128 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %155, i32 0, i32 4, !dbg !7048
  call void @mutex_unlock(%struct.mutex* %lock128) #11, !dbg !7049
  br label %if.end129, !dbg !7049

if.end129:                                        ; preds = %if.then127, %if.end124
  %156 = load i32, i32* %result, align 4, !dbg !7050
  ret i32 %156, !dbg !7051
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ufx_reg_set_bits(%struct.ufx_data* %dev, i32 %index, i32 %bits) #2 !dbg !7052 {
entry:
  %dev.addr = alloca %struct.ufx_data*, align 8
  %index.addr = alloca i32, align 4
  %bits.addr = alloca i32, align 4
  store %struct.ufx_data* %dev, %struct.ufx_data** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ufx_data** %dev.addr, metadata !7055, metadata !DIExpression()), !dbg !7056
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !7057, metadata !DIExpression()), !dbg !7058
  store i32 %bits, i32* %bits.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr, metadata !7059, metadata !DIExpression()), !dbg !7060
  %0 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !7061
  %1 = load i32, i32* %index.addr, align 4, !dbg !7062
  %2 = load i32, i32* %bits.addr, align 4, !dbg !7063
  %call = call i32 @ufx_reg_clear_and_set_bits(%struct.ufx_data* %0, i32 %1, i32 0, i32 %2) #11, !dbg !7064
  ret i32 %call, !dbg !7065
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ufx_ops_check_var(%struct.fb_var_screeninfo* %var, %struct.fb_info* %info) #2 !dbg !7066 {
entry:
  %retval = alloca i32, align 4
  %var.addr = alloca %struct.fb_var_screeninfo*, align 8
  %info.addr = alloca %struct.fb_info*, align 8
  %mode = alloca %struct.fb_videomode, align 8
  store %struct.fb_var_screeninfo* %var, %struct.fb_var_screeninfo** %var.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fb_var_screeninfo** %var.addr, metadata !7067, metadata !DIExpression()), !dbg !7068
  store %struct.fb_info* %info, %struct.fb_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fb_info** %info.addr, metadata !7069, metadata !DIExpression()), !dbg !7070
  call void @llvm.dbg.declare(metadata %struct.fb_videomode* %mode, metadata !7071, metadata !DIExpression()), !dbg !7072
  %0 = load %struct.fb_var_screeninfo*, %struct.fb_var_screeninfo** %var.addr, align 8, !dbg !7073
  %xres = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %0, i32 0, i32 0, !dbg !7075
  %1 = load i32, i32* %xres, align 4, !dbg !7075
  %2 = load %struct.fb_var_screeninfo*, %struct.fb_var_screeninfo** %var.addr, align 8, !dbg !7076
  %yres = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %2, i32 0, i32 1, !dbg !7077
  %3 = load i32, i32* %yres, align 4, !dbg !7077
  %mul = mul i32 %1, %3, !dbg !7078
  %mul1 = mul i32 %mul, 2, !dbg !7079
  %4 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !7080
  %fix = getelementptr inbounds %struct.fb_info, %struct.fb_info* %4, i32 0, i32 7, !dbg !7081
  %smem_len = getelementptr inbounds %struct.fb_fix_screeninfo, %struct.fb_fix_screeninfo* %fix, i32 0, i32 2, !dbg !7082
  %5 = load i32, i32* %smem_len, align 8, !dbg !7082
  %cmp = icmp ugt i32 %mul1, %5, !dbg !7083
  br i1 %cmp, label %if.then, label %if.end, !dbg !7084

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !7085
  br label %return, !dbg !7085

if.end:                                           ; preds = %entry
  %6 = load %struct.fb_var_screeninfo*, %struct.fb_var_screeninfo** %var.addr, align 8, !dbg !7086
  call void @ufx_var_color_format(%struct.fb_var_screeninfo* %6) #11, !dbg !7087
  %7 = load %struct.fb_var_screeninfo*, %struct.fb_var_screeninfo** %var.addr, align 8, !dbg !7088
  call void @fb_var_to_videomode(%struct.fb_videomode* %mode, %struct.fb_var_screeninfo* %7) #11, !dbg !7089
  %8 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !7090
  %call = call i32 @ufx_is_valid_mode(%struct.fb_videomode* %mode, %struct.fb_info* %8) #11, !dbg !7092
  %tobool = icmp ne i32 %call, 0, !dbg !7092
  br i1 %tobool, label %if.end3, label %if.then2, !dbg !7093

if.then2:                                         ; preds = %if.end
  store i32 -22, i32* %retval, align 4, !dbg !7094
  br label %return, !dbg !7094

if.end3:                                          ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !7095
  br label %return, !dbg !7095

return:                                           ; preds = %if.end3, %if.then2, %if.then
  %9 = load i32, i32* %retval, align 4, !dbg !7096
  ret i32 %9, !dbg !7096
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ufx_ops_set_par(%struct.fb_info* %info) #2 !dbg !7097 {
entry:
  %info.addr = alloca %struct.fb_info*, align 8
  %dev = alloca %struct.ufx_data*, align 8
  %result = alloca i32, align 4
  %pix_framebuffer = alloca i16*, align 8
  %i = alloca i32, align 4
  %tmp = alloca i32, align 4
  store %struct.fb_info* %info, %struct.fb_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fb_info** %info.addr, metadata !7098, metadata !DIExpression()), !dbg !7099
  call void @llvm.dbg.declare(metadata %struct.ufx_data** %dev, metadata !7100, metadata !DIExpression()), !dbg !7101
  %0 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !7102
  %par = getelementptr inbounds %struct.fb_info, %struct.fb_info* %0, i32 0, i32 30, !dbg !7103
  %1 = load i8*, i8** %par, align 8, !dbg !7103
  %2 = bitcast i8* %1 to %struct.ufx_data*, !dbg !7102
  store %struct.ufx_data* %2, %struct.ufx_data** %dev, align 8, !dbg !7101
  call void @llvm.dbg.declare(metadata i32* %result, metadata !7104, metadata !DIExpression()), !dbg !7105
  call void @llvm.dbg.declare(metadata i16** %pix_framebuffer, metadata !7106, metadata !DIExpression()), !dbg !7107
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7108, metadata !DIExpression()), !dbg !7109
  store i32 0, i32* %tmp, align 4, !dbg !7110
  %3 = load i32, i32* %tmp, align 4, !dbg !7113
  %4 = load %struct.ufx_data*, %struct.ufx_data** %dev, align 8, !dbg !7114
  %5 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !7115
  %var = getelementptr inbounds %struct.fb_info, %struct.fb_info* %5, i32 0, i32 6, !dbg !7116
  %call = call i32 @ufx_set_vid_mode(%struct.ufx_data* %4, %struct.fb_var_screeninfo* %var) #11, !dbg !7117
  store i32 %call, i32* %result, align 4, !dbg !7118
  %6 = load i32, i32* %result, align 4, !dbg !7119
  %cmp = icmp eq i32 %6, 0, !dbg !7121
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !7122

land.lhs.true:                                    ; preds = %entry
  %7 = load %struct.ufx_data*, %struct.ufx_data** %dev, align 8, !dbg !7123
  %fb_count = getelementptr inbounds %struct.ufx_data, %struct.ufx_data* %7, i32 0, i32 5, !dbg !7124
  %8 = load i32, i32* %fb_count, align 4, !dbg !7124
  %cmp1 = icmp eq i32 %8, 0, !dbg !7125
  br i1 %cmp1, label %if.then, label %if.end, !dbg !7126

if.then:                                          ; preds = %land.lhs.true
  %9 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !7127
  %10 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %9, i32 0, i32 25, !dbg !7129
  %screen_base = bitcast %union.anon.66* %10 to i8**, !dbg !7129
  %11 = load i8*, i8** %screen_base, align 8, !dbg !7129
  %12 = bitcast i8* %11 to i16*, !dbg !7130
  store i16* %12, i16** %pix_framebuffer, align 8, !dbg !7131
  store i32 0, i32* %i, align 4, !dbg !7132
  br label %for.cond, !dbg !7134

for.cond:                                         ; preds = %for.inc, %if.then
  %13 = load i32, i32* %i, align 4, !dbg !7135
  %14 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !7137
  %fix = getelementptr inbounds %struct.fb_info, %struct.fb_info* %14, i32 0, i32 7, !dbg !7138
  %smem_len = getelementptr inbounds %struct.fb_fix_screeninfo, %struct.fb_fix_screeninfo* %fix, i32 0, i32 2, !dbg !7139
  %15 = load i32, i32* %smem_len, align 8, !dbg !7139
  %div = udiv i32 %15, 2, !dbg !7140
  %cmp2 = icmp ult i32 %13, %div, !dbg !7141
  br i1 %cmp2, label %for.body, label %for.end, !dbg !7142

for.body:                                         ; preds = %for.cond
  %16 = load i16*, i16** %pix_framebuffer, align 8, !dbg !7143
  %17 = load i32, i32* %i, align 4, !dbg !7144
  %idxprom = sext i32 %17 to i64, !dbg !7143
  %arrayidx = getelementptr i16, i16* %16, i64 %idxprom, !dbg !7143
  store i16 14310, i16* %arrayidx, align 2, !dbg !7145
  br label %for.inc, !dbg !7143

for.inc:                                          ; preds = %for.body
  %18 = load i32, i32* %i, align 4, !dbg !7146
  %inc = add i32 %18, 1, !dbg !7146
  store i32 %inc, i32* %i, align 4, !dbg !7146
  br label %for.cond, !dbg !7147, !llvm.loop !7148

for.end:                                          ; preds = %for.cond
  %19 = load %struct.ufx_data*, %struct.ufx_data** %dev, align 8, !dbg !7150
  %20 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !7151
  %var3 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %20, i32 0, i32 6, !dbg !7152
  %xres = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %var3, i32 0, i32 0, !dbg !7153
  %21 = load i32, i32* %xres, align 8, !dbg !7153
  %22 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !7154
  %var4 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %22, i32 0, i32 6, !dbg !7155
  %yres = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %var4, i32 0, i32 1, !dbg !7156
  %23 = load i32, i32* %yres, align 4, !dbg !7156
  %call5 = call i32 @ufx_handle_damage(%struct.ufx_data* %19, i32 0, i32 0, i32 %21, i32 %23) #11, !dbg !7157
  br label %if.end, !dbg !7158

if.end:                                           ; preds = %for.end, %land.lhs.true, %entry
  %24 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !7159
  %fbdefio = getelementptr inbounds %struct.fb_info, %struct.fb_info* %24, i32 0, i32 19, !dbg !7161
  %25 = load %struct.fb_deferred_io*, %struct.fb_deferred_io** %fbdefio, align 8, !dbg !7161
  %tobool = icmp ne %struct.fb_deferred_io* %25, null, !dbg !7159
  br i1 %tobool, label %if.then6, label %if.end8, !dbg !7162

if.then6:                                         ; preds = %if.end
  %26 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !7163
  %fbdefio7 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %26, i32 0, i32 19, !dbg !7164
  %27 = load %struct.fb_deferred_io*, %struct.fb_deferred_io** %fbdefio7, align 8, !dbg !7164
  %delay = getelementptr inbounds %struct.fb_deferred_io, %struct.fb_deferred_io* %27, i32 0, i32 0, !dbg !7165
  store i64 5, i64* %delay, align 8, !dbg !7166
  br label %if.end8, !dbg !7163

if.end8:                                          ; preds = %if.then6, %if.end
  %28 = load i32, i32* %result, align 4, !dbg !7167
  ret i32 %28, !dbg !7168
}

; Function Attrs: noredzone
declare dso_local i32 @register_framebuffer(%struct.fb_info*) #1

; Function Attrs: cold noredzone
declare dso_local void @_dev_info(%struct.device*, i8*, ...) #4

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #3

; Function Attrs: noredzone
declare dso_local void @fb_dealloc_cmap(%struct.fb_cmap*) #1

; Function Attrs: noredzone
declare dso_local void @fb_destroy_modedb(%struct.fb_videomode*) #1

; Function Attrs: noredzone
declare dso_local void @vfree(i8*) #1

; Function Attrs: noredzone
declare dso_local void @fb_destroy_modelist(%struct.list_head*) #1

; Function Attrs: noredzone
declare dso_local void @framebuffer_release(%struct.fb_info*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @kref_put(%struct.kref* %kref, void (%struct.kref*)* %release) #2 !dbg !7169 {
entry:
  %retval = alloca i32, align 4
  %kref.addr = alloca %struct.kref*, align 8
  %release.addr = alloca void (%struct.kref*)*, align 8
  store %struct.kref* %kref, %struct.kref** %kref.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kref** %kref.addr, metadata !7173, metadata !DIExpression()), !dbg !7174
  store void (%struct.kref*)* %release, void (%struct.kref*)** %release.addr, align 8
  call void @llvm.dbg.declare(metadata void (%struct.kref*)** %release.addr, metadata !7175, metadata !DIExpression()), !dbg !7176
  %0 = load %struct.kref*, %struct.kref** %kref.addr, align 8, !dbg !7177
  %refcount = getelementptr inbounds %struct.kref, %struct.kref* %0, i32 0, i32 0, !dbg !7179
  %call = call zeroext i1 @refcount_dec_and_test(%struct.refcount_struct* %refcount) #11, !dbg !7180
  br i1 %call, label %if.then, label %if.end, !dbg !7181

if.then:                                          ; preds = %entry
  %1 = load void (%struct.kref*)*, void (%struct.kref*)** %release.addr, align 8, !dbg !7182
  %2 = load %struct.kref*, %struct.kref** %kref.addr, align 8, !dbg !7184
  call void %1(%struct.kref* %2) #11, !dbg !7182
  store i32 1, i32* %retval, align 4, !dbg !7185
  br label %return, !dbg !7185

if.end:                                           ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !7186
  br label %return, !dbg !7186

return:                                           ; preds = %if.end, %if.then
  %3 = load i32, i32* %retval, align 4, !dbg !7187
  ret i32 %3, !dbg !7187
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ufx_free(%struct.kref* %kref) #2 !dbg !7188 {
entry:
  %kref.addr = alloca %struct.kref*, align 8
  %dev = alloca %struct.ufx_data*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.ufx_data*, align 8
  %tmp1 = alloca i32, align 4
  store %struct.kref* %kref, %struct.kref** %kref.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kref** %kref.addr, metadata !7189, metadata !DIExpression()), !dbg !7190
  call void @llvm.dbg.declare(metadata %struct.ufx_data** %dev, metadata !7191, metadata !DIExpression()), !dbg !7192
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !7193, metadata !DIExpression()), !dbg !7195
  %0 = load %struct.kref*, %struct.kref** %kref.addr, align 8, !dbg !7195
  %1 = bitcast %struct.kref* %0 to i8*, !dbg !7195
  store i8* %1, i8** %__mptr, align 8, !dbg !7195
  br label %do.body, !dbg !7195

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !7196

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !7195
  %add.ptr = getelementptr i8, i8* %2, i64 -80, !dbg !7195
  %3 = bitcast i8* %add.ptr to %struct.ufx_data*, !dbg !7195
  store %struct.ufx_data* %3, %struct.ufx_data** %tmp, align 8, !dbg !7196
  %4 = load %struct.ufx_data*, %struct.ufx_data** %tmp, align 8, !dbg !7195
  store %struct.ufx_data* %4, %struct.ufx_data** %dev, align 8, !dbg !7192
  %5 = load %struct.ufx_data*, %struct.ufx_data** %dev, align 8, !dbg !7198
  %urbs = getelementptr inbounds %struct.ufx_data, %struct.ufx_data* %5, i32 0, i32 3, !dbg !7200
  %count = getelementptr inbounds %struct.urb_list, %struct.urb_list* %urbs, i32 0, i32 4, !dbg !7201
  %6 = load i32, i32* %count, align 4, !dbg !7201
  %cmp = icmp sgt i32 %6, 0, !dbg !7202
  br i1 %cmp, label %if.then, label %if.end, !dbg !7203

if.then:                                          ; preds = %do.end
  %7 = load %struct.ufx_data*, %struct.ufx_data** %dev, align 8, !dbg !7204
  call void @ufx_free_urb_list(%struct.ufx_data* %7) #11, !dbg !7205
  br label %if.end, !dbg !7205

if.end:                                           ; preds = %if.then, %do.end
  store i32 0, i32* %tmp1, align 4, !dbg !7206
  %8 = load i32, i32* %tmp1, align 4, !dbg !7209
  %9 = load %struct.ufx_data*, %struct.ufx_data** %dev, align 8, !dbg !7210
  %10 = bitcast %struct.ufx_data* %9 to i8*, !dbg !7210
  call void @kfree(i8* %10) #11, !dbg !7211
  ret void, !dbg !7212
}

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i64(i64) #6

; Function Attrs: noredzone
declare dso_local noalias i8* @__kmalloc(i64, i32) #1

; Function Attrs: nounwind willreturn
declare void @llvm.assume(i1) #7

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @get_order(i64 %size) #8 !dbg !7213 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !7217, metadata !DIExpression()), !dbg !7222
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !7224, metadata !DIExpression()), !dbg !7225
  %retval = alloca i32, align 4
  %size.addr = alloca i64, align 8
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !7226, metadata !DIExpression()), !dbg !7227
  %0 = load i64, i64* %size.addr, align 8, !dbg !7228
  %1 = call i1 @llvm.is.constant.i64(i64 %0), !dbg !7230
  br i1 %1, label %if.then, label %if.end447, !dbg !7231

if.then:                                          ; preds = %entry
  %2 = load i64, i64* %size.addr, align 8, !dbg !7232
  %tobool = icmp ne i64 %2, 0, !dbg !7232
  br i1 %tobool, label %if.end, label %if.then1, !dbg !7235

if.then1:                                         ; preds = %if.then
  store i32 52, i32* %retval, align 4, !dbg !7236
  br label %return, !dbg !7236

if.end:                                           ; preds = %if.then
  %3 = load i64, i64* %size.addr, align 8, !dbg !7237
  %cmp = icmp ult i64 %3, 4096, !dbg !7239
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !7240

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !7241
  br label %return, !dbg !7241

if.end3:                                          ; preds = %if.end
  %4 = load i64, i64* %size.addr, align 8, !dbg !7242
  %sub = sub i64 %4, 1, !dbg !7242
  %5 = call i1 @llvm.is.constant.i64(i64 %sub), !dbg !7242
  br i1 %5, label %cond.true, label %cond.false442, !dbg !7242

cond.true:                                        ; preds = %if.end3
  %6 = load i64, i64* %size.addr, align 8, !dbg !7242
  %sub4 = sub i64 %6, 1, !dbg !7242
  %7 = call i1 @llvm.is.constant.i64(i64 %sub4), !dbg !7242
  br i1 %7, label %cond.true5, label %cond.false439, !dbg !7242

cond.true5:                                       ; preds = %cond.true
  %8 = load i64, i64* %size.addr, align 8, !dbg !7242
  %sub6 = sub i64 %8, 1, !dbg !7242
  %cmp7 = icmp ult i64 %sub6, 2, !dbg !7242
  br i1 %cmp7, label %cond.true8, label %cond.false, !dbg !7242

cond.true8:                                       ; preds = %cond.true5
  br label %cond.end437, !dbg !7242

cond.false:                                       ; preds = %cond.true5
  %9 = load i64, i64* %size.addr, align 8, !dbg !7242
  %sub9 = sub i64 %9, 1, !dbg !7242
  %and = and i64 %sub9, -9223372036854775808, !dbg !7242
  %tobool10 = icmp ne i64 %and, 0, !dbg !7242
  br i1 %tobool10, label %cond.true11, label %cond.false12, !dbg !7242

cond.true11:                                      ; preds = %cond.false
  br label %cond.end435, !dbg !7242

cond.false12:                                     ; preds = %cond.false
  %10 = load i64, i64* %size.addr, align 8, !dbg !7242
  %sub13 = sub i64 %10, 1, !dbg !7242
  %and14 = and i64 %sub13, 4611686018427387904, !dbg !7242
  %tobool15 = icmp ne i64 %and14, 0, !dbg !7242
  br i1 %tobool15, label %cond.true16, label %cond.false17, !dbg !7242

cond.true16:                                      ; preds = %cond.false12
  br label %cond.end433, !dbg !7242

cond.false17:                                     ; preds = %cond.false12
  %11 = load i64, i64* %size.addr, align 8, !dbg !7242
  %sub18 = sub i64 %11, 1, !dbg !7242
  %and19 = and i64 %sub18, 2305843009213693952, !dbg !7242
  %tobool20 = icmp ne i64 %and19, 0, !dbg !7242
  br i1 %tobool20, label %cond.true21, label %cond.false22, !dbg !7242

cond.true21:                                      ; preds = %cond.false17
  br label %cond.end431, !dbg !7242

cond.false22:                                     ; preds = %cond.false17
  %12 = load i64, i64* %size.addr, align 8, !dbg !7242
  %sub23 = sub i64 %12, 1, !dbg !7242
  %and24 = and i64 %sub23, 1152921504606846976, !dbg !7242
  %tobool25 = icmp ne i64 %and24, 0, !dbg !7242
  br i1 %tobool25, label %cond.true26, label %cond.false27, !dbg !7242

cond.true26:                                      ; preds = %cond.false22
  br label %cond.end429, !dbg !7242

cond.false27:                                     ; preds = %cond.false22
  %13 = load i64, i64* %size.addr, align 8, !dbg !7242
  %sub28 = sub i64 %13, 1, !dbg !7242
  %and29 = and i64 %sub28, 576460752303423488, !dbg !7242
  %tobool30 = icmp ne i64 %and29, 0, !dbg !7242
  br i1 %tobool30, label %cond.true31, label %cond.false32, !dbg !7242

cond.true31:                                      ; preds = %cond.false27
  br label %cond.end427, !dbg !7242

cond.false32:                                     ; preds = %cond.false27
  %14 = load i64, i64* %size.addr, align 8, !dbg !7242
  %sub33 = sub i64 %14, 1, !dbg !7242
  %and34 = and i64 %sub33, 288230376151711744, !dbg !7242
  %tobool35 = icmp ne i64 %and34, 0, !dbg !7242
  br i1 %tobool35, label %cond.true36, label %cond.false37, !dbg !7242

cond.true36:                                      ; preds = %cond.false32
  br label %cond.end425, !dbg !7242

cond.false37:                                     ; preds = %cond.false32
  %15 = load i64, i64* %size.addr, align 8, !dbg !7242
  %sub38 = sub i64 %15, 1, !dbg !7242
  %and39 = and i64 %sub38, 144115188075855872, !dbg !7242
  %tobool40 = icmp ne i64 %and39, 0, !dbg !7242
  br i1 %tobool40, label %cond.true41, label %cond.false42, !dbg !7242

cond.true41:                                      ; preds = %cond.false37
  br label %cond.end423, !dbg !7242

cond.false42:                                     ; preds = %cond.false37
  %16 = load i64, i64* %size.addr, align 8, !dbg !7242
  %sub43 = sub i64 %16, 1, !dbg !7242
  %and44 = and i64 %sub43, 72057594037927936, !dbg !7242
  %tobool45 = icmp ne i64 %and44, 0, !dbg !7242
  br i1 %tobool45, label %cond.true46, label %cond.false47, !dbg !7242

cond.true46:                                      ; preds = %cond.false42
  br label %cond.end421, !dbg !7242

cond.false47:                                     ; preds = %cond.false42
  %17 = load i64, i64* %size.addr, align 8, !dbg !7242
  %sub48 = sub i64 %17, 1, !dbg !7242
  %and49 = and i64 %sub48, 36028797018963968, !dbg !7242
  %tobool50 = icmp ne i64 %and49, 0, !dbg !7242
  br i1 %tobool50, label %cond.true51, label %cond.false52, !dbg !7242

cond.true51:                                      ; preds = %cond.false47
  br label %cond.end419, !dbg !7242

cond.false52:                                     ; preds = %cond.false47
  %18 = load i64, i64* %size.addr, align 8, !dbg !7242
  %sub53 = sub i64 %18, 1, !dbg !7242
  %and54 = and i64 %sub53, 18014398509481984, !dbg !7242
  %tobool55 = icmp ne i64 %and54, 0, !dbg !7242
  br i1 %tobool55, label %cond.true56, label %cond.false57, !dbg !7242

cond.true56:                                      ; preds = %cond.false52
  br label %cond.end417, !dbg !7242

cond.false57:                                     ; preds = %cond.false52
  %19 = load i64, i64* %size.addr, align 8, !dbg !7242
  %sub58 = sub i64 %19, 1, !dbg !7242
  %and59 = and i64 %sub58, 9007199254740992, !dbg !7242
  %tobool60 = icmp ne i64 %and59, 0, !dbg !7242
  br i1 %tobool60, label %cond.true61, label %cond.false62, !dbg !7242

cond.true61:                                      ; preds = %cond.false57
  br label %cond.end415, !dbg !7242

cond.false62:                                     ; preds = %cond.false57
  %20 = load i64, i64* %size.addr, align 8, !dbg !7242
  %sub63 = sub i64 %20, 1, !dbg !7242
  %and64 = and i64 %sub63, 4503599627370496, !dbg !7242
  %tobool65 = icmp ne i64 %and64, 0, !dbg !7242
  br i1 %tobool65, label %cond.true66, label %cond.false67, !dbg !7242

cond.true66:                                      ; preds = %cond.false62
  br label %cond.end413, !dbg !7242

cond.false67:                                     ; preds = %cond.false62
  %21 = load i64, i64* %size.addr, align 8, !dbg !7242
  %sub68 = sub i64 %21, 1, !dbg !7242
  %and69 = and i64 %sub68, 2251799813685248, !dbg !7242
  %tobool70 = icmp ne i64 %and69, 0, !dbg !7242
  br i1 %tobool70, label %cond.true71, label %cond.false72, !dbg !7242

cond.true71:                                      ; preds = %cond.false67
  br label %cond.end411, !dbg !7242

cond.false72:                                     ; preds = %cond.false67
  %22 = load i64, i64* %size.addr, align 8, !dbg !7242
  %sub73 = sub i64 %22, 1, !dbg !7242
  %and74 = and i64 %sub73, 1125899906842624, !dbg !7242
  %tobool75 = icmp ne i64 %and74, 0, !dbg !7242
  br i1 %tobool75, label %cond.true76, label %cond.false77, !dbg !7242

cond.true76:                                      ; preds = %cond.false72
  br label %cond.end409, !dbg !7242

cond.false77:                                     ; preds = %cond.false72
  %23 = load i64, i64* %size.addr, align 8, !dbg !7242
  %sub78 = sub i64 %23, 1, !dbg !7242
  %and79 = and i64 %sub78, 562949953421312, !dbg !7242
  %tobool80 = icmp ne i64 %and79, 0, !dbg !7242
  br i1 %tobool80, label %cond.true81, label %cond.false82, !dbg !7242

cond.true81:                                      ; preds = %cond.false77
  br label %cond.end407, !dbg !7242

cond.false82:                                     ; preds = %cond.false77
  %24 = load i64, i64* %size.addr, align 8, !dbg !7242
  %sub83 = sub i64 %24, 1, !dbg !7242
  %and84 = and i64 %sub83, 281474976710656, !dbg !7242
  %tobool85 = icmp ne i64 %and84, 0, !dbg !7242
  br i1 %tobool85, label %cond.true86, label %cond.false87, !dbg !7242

cond.true86:                                      ; preds = %cond.false82
  br label %cond.end405, !dbg !7242

cond.false87:                                     ; preds = %cond.false82
  %25 = load i64, i64* %size.addr, align 8, !dbg !7242
  %sub88 = sub i64 %25, 1, !dbg !7242
  %and89 = and i64 %sub88, 140737488355328, !dbg !7242
  %tobool90 = icmp ne i64 %and89, 0, !dbg !7242
  br i1 %tobool90, label %cond.true91, label %cond.false92, !dbg !7242

cond.true91:                                      ; preds = %cond.false87
  br label %cond.end403, !dbg !7242

cond.false92:                                     ; preds = %cond.false87
  %26 = load i64, i64* %size.addr, align 8, !dbg !7242
  %sub93 = sub i64 %26, 1, !dbg !7242
  %and94 = and i64 %sub93, 70368744177664, !dbg !7242
  %tobool95 = icmp ne i64 %and94, 0, !dbg !7242
  br i1 %tobool95, label %cond.true96, label %cond.false97, !dbg !7242

cond.true96:                                      ; preds = %cond.false92
  br label %cond.end401, !dbg !7242

cond.false97:                                     ; preds = %cond.false92
  %27 = load i64, i64* %size.addr, align 8, !dbg !7242
  %sub98 = sub i64 %27, 1, !dbg !7242
  %and99 = and i64 %sub98, 35184372088832, !dbg !7242
  %tobool100 = icmp ne i64 %and99, 0, !dbg !7242
  br i1 %tobool100, label %cond.true101, label %cond.false102, !dbg !7242

cond.true101:                                     ; preds = %cond.false97
  br label %cond.end399, !dbg !7242

cond.false102:                                    ; preds = %cond.false97
  %28 = load i64, i64* %size.addr, align 8, !dbg !7242
  %sub103 = sub i64 %28, 1, !dbg !7242
  %and104 = and i64 %sub103, 17592186044416, !dbg !7242
  %tobool105 = icmp ne i64 %and104, 0, !dbg !7242
  br i1 %tobool105, label %cond.true106, label %cond.false107, !dbg !7242

cond.true106:                                     ; preds = %cond.false102
  br label %cond.end397, !dbg !7242

cond.false107:                                    ; preds = %cond.false102
  %29 = load i64, i64* %size.addr, align 8, !dbg !7242
  %sub108 = sub i64 %29, 1, !dbg !7242
  %and109 = and i64 %sub108, 8796093022208, !dbg !7242
  %tobool110 = icmp ne i64 %and109, 0, !dbg !7242
  br i1 %tobool110, label %cond.true111, label %cond.false112, !dbg !7242

cond.true111:                                     ; preds = %cond.false107
  br label %cond.end395, !dbg !7242

cond.false112:                                    ; preds = %cond.false107
  %30 = load i64, i64* %size.addr, align 8, !dbg !7242
  %sub113 = sub i64 %30, 1, !dbg !7242
  %and114 = and i64 %sub113, 4398046511104, !dbg !7242
  %tobool115 = icmp ne i64 %and114, 0, !dbg !7242
  br i1 %tobool115, label %cond.true116, label %cond.false117, !dbg !7242

cond.true116:                                     ; preds = %cond.false112
  br label %cond.end393, !dbg !7242

cond.false117:                                    ; preds = %cond.false112
  %31 = load i64, i64* %size.addr, align 8, !dbg !7242
  %sub118 = sub i64 %31, 1, !dbg !7242
  %and119 = and i64 %sub118, 2199023255552, !dbg !7242
  %tobool120 = icmp ne i64 %and119, 0, !dbg !7242
  br i1 %tobool120, label %cond.true121, label %cond.false122, !dbg !7242

cond.true121:                                     ; preds = %cond.false117
  br label %cond.end391, !dbg !7242

cond.false122:                                    ; preds = %cond.false117
  %32 = load i64, i64* %size.addr, align 8, !dbg !7242
  %sub123 = sub i64 %32, 1, !dbg !7242
  %and124 = and i64 %sub123, 1099511627776, !dbg !7242
  %tobool125 = icmp ne i64 %and124, 0, !dbg !7242
  br i1 %tobool125, label %cond.true126, label %cond.false127, !dbg !7242

cond.true126:                                     ; preds = %cond.false122
  br label %cond.end389, !dbg !7242

cond.false127:                                    ; preds = %cond.false122
  %33 = load i64, i64* %size.addr, align 8, !dbg !7242
  %sub128 = sub i64 %33, 1, !dbg !7242
  %and129 = and i64 %sub128, 549755813888, !dbg !7242
  %tobool130 = icmp ne i64 %and129, 0, !dbg !7242
  br i1 %tobool130, label %cond.true131, label %cond.false132, !dbg !7242

cond.true131:                                     ; preds = %cond.false127
  br label %cond.end387, !dbg !7242

cond.false132:                                    ; preds = %cond.false127
  %34 = load i64, i64* %size.addr, align 8, !dbg !7242
  %sub133 = sub i64 %34, 1, !dbg !7242
  %and134 = and i64 %sub133, 274877906944, !dbg !7242
  %tobool135 = icmp ne i64 %and134, 0, !dbg !7242
  br i1 %tobool135, label %cond.true136, label %cond.false137, !dbg !7242

cond.true136:                                     ; preds = %cond.false132
  br label %cond.end385, !dbg !7242

cond.false137:                                    ; preds = %cond.false132
  %35 = load i64, i64* %size.addr, align 8, !dbg !7242
  %sub138 = sub i64 %35, 1, !dbg !7242
  %and139 = and i64 %sub138, 137438953472, !dbg !7242
  %tobool140 = icmp ne i64 %and139, 0, !dbg !7242
  br i1 %tobool140, label %cond.true141, label %cond.false142, !dbg !7242

cond.true141:                                     ; preds = %cond.false137
  br label %cond.end383, !dbg !7242

cond.false142:                                    ; preds = %cond.false137
  %36 = load i64, i64* %size.addr, align 8, !dbg !7242
  %sub143 = sub i64 %36, 1, !dbg !7242
  %and144 = and i64 %sub143, 68719476736, !dbg !7242
  %tobool145 = icmp ne i64 %and144, 0, !dbg !7242
  br i1 %tobool145, label %cond.true146, label %cond.false147, !dbg !7242

cond.true146:                                     ; preds = %cond.false142
  br label %cond.end381, !dbg !7242

cond.false147:                                    ; preds = %cond.false142
  %37 = load i64, i64* %size.addr, align 8, !dbg !7242
  %sub148 = sub i64 %37, 1, !dbg !7242
  %and149 = and i64 %sub148, 34359738368, !dbg !7242
  %tobool150 = icmp ne i64 %and149, 0, !dbg !7242
  br i1 %tobool150, label %cond.true151, label %cond.false152, !dbg !7242

cond.true151:                                     ; preds = %cond.false147
  br label %cond.end379, !dbg !7242

cond.false152:                                    ; preds = %cond.false147
  %38 = load i64, i64* %size.addr, align 8, !dbg !7242
  %sub153 = sub i64 %38, 1, !dbg !7242
  %and154 = and i64 %sub153, 17179869184, !dbg !7242
  %tobool155 = icmp ne i64 %and154, 0, !dbg !7242
  br i1 %tobool155, label %cond.true156, label %cond.false157, !dbg !7242

cond.true156:                                     ; preds = %cond.false152
  br label %cond.end377, !dbg !7242

cond.false157:                                    ; preds = %cond.false152
  %39 = load i64, i64* %size.addr, align 8, !dbg !7242
  %sub158 = sub i64 %39, 1, !dbg !7242
  %and159 = and i64 %sub158, 8589934592, !dbg !7242
  %tobool160 = icmp ne i64 %and159, 0, !dbg !7242
  br i1 %tobool160, label %cond.true161, label %cond.false162, !dbg !7242

cond.true161:                                     ; preds = %cond.false157
  br label %cond.end375, !dbg !7242

cond.false162:                                    ; preds = %cond.false157
  %40 = load i64, i64* %size.addr, align 8, !dbg !7242
  %sub163 = sub i64 %40, 1, !dbg !7242
  %and164 = and i64 %sub163, 4294967296, !dbg !7242
  %tobool165 = icmp ne i64 %and164, 0, !dbg !7242
  br i1 %tobool165, label %cond.true166, label %cond.false167, !dbg !7242

cond.true166:                                     ; preds = %cond.false162
  br label %cond.end373, !dbg !7242

cond.false167:                                    ; preds = %cond.false162
  %41 = load i64, i64* %size.addr, align 8, !dbg !7242
  %sub168 = sub i64 %41, 1, !dbg !7242
  %and169 = and i64 %sub168, 2147483648, !dbg !7242
  %tobool170 = icmp ne i64 %and169, 0, !dbg !7242
  br i1 %tobool170, label %cond.true171, label %cond.false172, !dbg !7242

cond.true171:                                     ; preds = %cond.false167
  br label %cond.end371, !dbg !7242

cond.false172:                                    ; preds = %cond.false167
  %42 = load i64, i64* %size.addr, align 8, !dbg !7242
  %sub173 = sub i64 %42, 1, !dbg !7242
  %and174 = and i64 %sub173, 1073741824, !dbg !7242
  %tobool175 = icmp ne i64 %and174, 0, !dbg !7242
  br i1 %tobool175, label %cond.true176, label %cond.false177, !dbg !7242

cond.true176:                                     ; preds = %cond.false172
  br label %cond.end369, !dbg !7242

cond.false177:                                    ; preds = %cond.false172
  %43 = load i64, i64* %size.addr, align 8, !dbg !7242
  %sub178 = sub i64 %43, 1, !dbg !7242
  %and179 = and i64 %sub178, 536870912, !dbg !7242
  %tobool180 = icmp ne i64 %and179, 0, !dbg !7242
  br i1 %tobool180, label %cond.true181, label %cond.false182, !dbg !7242

cond.true181:                                     ; preds = %cond.false177
  br label %cond.end367, !dbg !7242

cond.false182:                                    ; preds = %cond.false177
  %44 = load i64, i64* %size.addr, align 8, !dbg !7242
  %sub183 = sub i64 %44, 1, !dbg !7242
  %and184 = and i64 %sub183, 268435456, !dbg !7242
  %tobool185 = icmp ne i64 %and184, 0, !dbg !7242
  br i1 %tobool185, label %cond.true186, label %cond.false187, !dbg !7242

cond.true186:                                     ; preds = %cond.false182
  br label %cond.end365, !dbg !7242

cond.false187:                                    ; preds = %cond.false182
  %45 = load i64, i64* %size.addr, align 8, !dbg !7242
  %sub188 = sub i64 %45, 1, !dbg !7242
  %and189 = and i64 %sub188, 134217728, !dbg !7242
  %tobool190 = icmp ne i64 %and189, 0, !dbg !7242
  br i1 %tobool190, label %cond.true191, label %cond.false192, !dbg !7242

cond.true191:                                     ; preds = %cond.false187
  br label %cond.end363, !dbg !7242

cond.false192:                                    ; preds = %cond.false187
  %46 = load i64, i64* %size.addr, align 8, !dbg !7242
  %sub193 = sub i64 %46, 1, !dbg !7242
  %and194 = and i64 %sub193, 67108864, !dbg !7242
  %tobool195 = icmp ne i64 %and194, 0, !dbg !7242
  br i1 %tobool195, label %cond.true196, label %cond.false197, !dbg !7242

cond.true196:                                     ; preds = %cond.false192
  br label %cond.end361, !dbg !7242

cond.false197:                                    ; preds = %cond.false192
  %47 = load i64, i64* %size.addr, align 8, !dbg !7242
  %sub198 = sub i64 %47, 1, !dbg !7242
  %and199 = and i64 %sub198, 33554432, !dbg !7242
  %tobool200 = icmp ne i64 %and199, 0, !dbg !7242
  br i1 %tobool200, label %cond.true201, label %cond.false202, !dbg !7242

cond.true201:                                     ; preds = %cond.false197
  br label %cond.end359, !dbg !7242

cond.false202:                                    ; preds = %cond.false197
  %48 = load i64, i64* %size.addr, align 8, !dbg !7242
  %sub203 = sub i64 %48, 1, !dbg !7242
  %and204 = and i64 %sub203, 16777216, !dbg !7242
  %tobool205 = icmp ne i64 %and204, 0, !dbg !7242
  br i1 %tobool205, label %cond.true206, label %cond.false207, !dbg !7242

cond.true206:                                     ; preds = %cond.false202
  br label %cond.end357, !dbg !7242

cond.false207:                                    ; preds = %cond.false202
  %49 = load i64, i64* %size.addr, align 8, !dbg !7242
  %sub208 = sub i64 %49, 1, !dbg !7242
  %and209 = and i64 %sub208, 8388608, !dbg !7242
  %tobool210 = icmp ne i64 %and209, 0, !dbg !7242
  br i1 %tobool210, label %cond.true211, label %cond.false212, !dbg !7242

cond.true211:                                     ; preds = %cond.false207
  br label %cond.end355, !dbg !7242

cond.false212:                                    ; preds = %cond.false207
  %50 = load i64, i64* %size.addr, align 8, !dbg !7242
  %sub213 = sub i64 %50, 1, !dbg !7242
  %and214 = and i64 %sub213, 4194304, !dbg !7242
  %tobool215 = icmp ne i64 %and214, 0, !dbg !7242
  br i1 %tobool215, label %cond.true216, label %cond.false217, !dbg !7242

cond.true216:                                     ; preds = %cond.false212
  br label %cond.end353, !dbg !7242

cond.false217:                                    ; preds = %cond.false212
  %51 = load i64, i64* %size.addr, align 8, !dbg !7242
  %sub218 = sub i64 %51, 1, !dbg !7242
  %and219 = and i64 %sub218, 2097152, !dbg !7242
  %tobool220 = icmp ne i64 %and219, 0, !dbg !7242
  br i1 %tobool220, label %cond.true221, label %cond.false222, !dbg !7242

cond.true221:                                     ; preds = %cond.false217
  br label %cond.end351, !dbg !7242

cond.false222:                                    ; preds = %cond.false217
  %52 = load i64, i64* %size.addr, align 8, !dbg !7242
  %sub223 = sub i64 %52, 1, !dbg !7242
  %and224 = and i64 %sub223, 1048576, !dbg !7242
  %tobool225 = icmp ne i64 %and224, 0, !dbg !7242
  br i1 %tobool225, label %cond.true226, label %cond.false227, !dbg !7242

cond.true226:                                     ; preds = %cond.false222
  br label %cond.end349, !dbg !7242

cond.false227:                                    ; preds = %cond.false222
  %53 = load i64, i64* %size.addr, align 8, !dbg !7242
  %sub228 = sub i64 %53, 1, !dbg !7242
  %and229 = and i64 %sub228, 524288, !dbg !7242
  %tobool230 = icmp ne i64 %and229, 0, !dbg !7242
  br i1 %tobool230, label %cond.true231, label %cond.false232, !dbg !7242

cond.true231:                                     ; preds = %cond.false227
  br label %cond.end347, !dbg !7242

cond.false232:                                    ; preds = %cond.false227
  %54 = load i64, i64* %size.addr, align 8, !dbg !7242
  %sub233 = sub i64 %54, 1, !dbg !7242
  %and234 = and i64 %sub233, 262144, !dbg !7242
  %tobool235 = icmp ne i64 %and234, 0, !dbg !7242
  br i1 %tobool235, label %cond.true236, label %cond.false237, !dbg !7242

cond.true236:                                     ; preds = %cond.false232
  br label %cond.end345, !dbg !7242

cond.false237:                                    ; preds = %cond.false232
  %55 = load i64, i64* %size.addr, align 8, !dbg !7242
  %sub238 = sub i64 %55, 1, !dbg !7242
  %and239 = and i64 %sub238, 131072, !dbg !7242
  %tobool240 = icmp ne i64 %and239, 0, !dbg !7242
  br i1 %tobool240, label %cond.true241, label %cond.false242, !dbg !7242

cond.true241:                                     ; preds = %cond.false237
  br label %cond.end343, !dbg !7242

cond.false242:                                    ; preds = %cond.false237
  %56 = load i64, i64* %size.addr, align 8, !dbg !7242
  %sub243 = sub i64 %56, 1, !dbg !7242
  %and244 = and i64 %sub243, 65536, !dbg !7242
  %tobool245 = icmp ne i64 %and244, 0, !dbg !7242
  br i1 %tobool245, label %cond.true246, label %cond.false247, !dbg !7242

cond.true246:                                     ; preds = %cond.false242
  br label %cond.end341, !dbg !7242

cond.false247:                                    ; preds = %cond.false242
  %57 = load i64, i64* %size.addr, align 8, !dbg !7242
  %sub248 = sub i64 %57, 1, !dbg !7242
  %and249 = and i64 %sub248, 32768, !dbg !7242
  %tobool250 = icmp ne i64 %and249, 0, !dbg !7242
  br i1 %tobool250, label %cond.true251, label %cond.false252, !dbg !7242

cond.true251:                                     ; preds = %cond.false247
  br label %cond.end339, !dbg !7242

cond.false252:                                    ; preds = %cond.false247
  %58 = load i64, i64* %size.addr, align 8, !dbg !7242
  %sub253 = sub i64 %58, 1, !dbg !7242
  %and254 = and i64 %sub253, 16384, !dbg !7242
  %tobool255 = icmp ne i64 %and254, 0, !dbg !7242
  br i1 %tobool255, label %cond.true256, label %cond.false257, !dbg !7242

cond.true256:                                     ; preds = %cond.false252
  br label %cond.end337, !dbg !7242

cond.false257:                                    ; preds = %cond.false252
  %59 = load i64, i64* %size.addr, align 8, !dbg !7242
  %sub258 = sub i64 %59, 1, !dbg !7242
  %and259 = and i64 %sub258, 8192, !dbg !7242
  %tobool260 = icmp ne i64 %and259, 0, !dbg !7242
  br i1 %tobool260, label %cond.true261, label %cond.false262, !dbg !7242

cond.true261:                                     ; preds = %cond.false257
  br label %cond.end335, !dbg !7242

cond.false262:                                    ; preds = %cond.false257
  %60 = load i64, i64* %size.addr, align 8, !dbg !7242
  %sub263 = sub i64 %60, 1, !dbg !7242
  %and264 = and i64 %sub263, 4096, !dbg !7242
  %tobool265 = icmp ne i64 %and264, 0, !dbg !7242
  br i1 %tobool265, label %cond.true266, label %cond.false267, !dbg !7242

cond.true266:                                     ; preds = %cond.false262
  br label %cond.end333, !dbg !7242

cond.false267:                                    ; preds = %cond.false262
  %61 = load i64, i64* %size.addr, align 8, !dbg !7242
  %sub268 = sub i64 %61, 1, !dbg !7242
  %and269 = and i64 %sub268, 2048, !dbg !7242
  %tobool270 = icmp ne i64 %and269, 0, !dbg !7242
  br i1 %tobool270, label %cond.true271, label %cond.false272, !dbg !7242

cond.true271:                                     ; preds = %cond.false267
  br label %cond.end331, !dbg !7242

cond.false272:                                    ; preds = %cond.false267
  %62 = load i64, i64* %size.addr, align 8, !dbg !7242
  %sub273 = sub i64 %62, 1, !dbg !7242
  %and274 = and i64 %sub273, 1024, !dbg !7242
  %tobool275 = icmp ne i64 %and274, 0, !dbg !7242
  br i1 %tobool275, label %cond.true276, label %cond.false277, !dbg !7242

cond.true276:                                     ; preds = %cond.false272
  br label %cond.end329, !dbg !7242

cond.false277:                                    ; preds = %cond.false272
  %63 = load i64, i64* %size.addr, align 8, !dbg !7242
  %sub278 = sub i64 %63, 1, !dbg !7242
  %and279 = and i64 %sub278, 512, !dbg !7242
  %tobool280 = icmp ne i64 %and279, 0, !dbg !7242
  br i1 %tobool280, label %cond.true281, label %cond.false282, !dbg !7242

cond.true281:                                     ; preds = %cond.false277
  br label %cond.end327, !dbg !7242

cond.false282:                                    ; preds = %cond.false277
  %64 = load i64, i64* %size.addr, align 8, !dbg !7242
  %sub283 = sub i64 %64, 1, !dbg !7242
  %and284 = and i64 %sub283, 256, !dbg !7242
  %tobool285 = icmp ne i64 %and284, 0, !dbg !7242
  br i1 %tobool285, label %cond.true286, label %cond.false287, !dbg !7242

cond.true286:                                     ; preds = %cond.false282
  br label %cond.end325, !dbg !7242

cond.false287:                                    ; preds = %cond.false282
  %65 = load i64, i64* %size.addr, align 8, !dbg !7242
  %sub288 = sub i64 %65, 1, !dbg !7242
  %and289 = and i64 %sub288, 128, !dbg !7242
  %tobool290 = icmp ne i64 %and289, 0, !dbg !7242
  br i1 %tobool290, label %cond.true291, label %cond.false292, !dbg !7242

cond.true291:                                     ; preds = %cond.false287
  br label %cond.end323, !dbg !7242

cond.false292:                                    ; preds = %cond.false287
  %66 = load i64, i64* %size.addr, align 8, !dbg !7242
  %sub293 = sub i64 %66, 1, !dbg !7242
  %and294 = and i64 %sub293, 64, !dbg !7242
  %tobool295 = icmp ne i64 %and294, 0, !dbg !7242
  br i1 %tobool295, label %cond.true296, label %cond.false297, !dbg !7242

cond.true296:                                     ; preds = %cond.false292
  br label %cond.end321, !dbg !7242

cond.false297:                                    ; preds = %cond.false292
  %67 = load i64, i64* %size.addr, align 8, !dbg !7242
  %sub298 = sub i64 %67, 1, !dbg !7242
  %and299 = and i64 %sub298, 32, !dbg !7242
  %tobool300 = icmp ne i64 %and299, 0, !dbg !7242
  br i1 %tobool300, label %cond.true301, label %cond.false302, !dbg !7242

cond.true301:                                     ; preds = %cond.false297
  br label %cond.end319, !dbg !7242

cond.false302:                                    ; preds = %cond.false297
  %68 = load i64, i64* %size.addr, align 8, !dbg !7242
  %sub303 = sub i64 %68, 1, !dbg !7242
  %and304 = and i64 %sub303, 16, !dbg !7242
  %tobool305 = icmp ne i64 %and304, 0, !dbg !7242
  br i1 %tobool305, label %cond.true306, label %cond.false307, !dbg !7242

cond.true306:                                     ; preds = %cond.false302
  br label %cond.end317, !dbg !7242

cond.false307:                                    ; preds = %cond.false302
  %69 = load i64, i64* %size.addr, align 8, !dbg !7242
  %sub308 = sub i64 %69, 1, !dbg !7242
  %and309 = and i64 %sub308, 8, !dbg !7242
  %tobool310 = icmp ne i64 %and309, 0, !dbg !7242
  br i1 %tobool310, label %cond.true311, label %cond.false312, !dbg !7242

cond.true311:                                     ; preds = %cond.false307
  br label %cond.end, !dbg !7242

cond.false312:                                    ; preds = %cond.false307
  %70 = load i64, i64* %size.addr, align 8, !dbg !7242
  %sub313 = sub i64 %70, 1, !dbg !7242
  %and314 = and i64 %sub313, 4, !dbg !7242
  %tobool315 = icmp ne i64 %and314, 0, !dbg !7242
  %71 = zext i1 %tobool315 to i64, !dbg !7242
  %cond = select i1 %tobool315, i32 2, i32 1, !dbg !7242
  br label %cond.end, !dbg !7242

cond.end:                                         ; preds = %cond.false312, %cond.true311
  %cond316 = phi i32 [ 3, %cond.true311 ], [ %cond, %cond.false312 ], !dbg !7242
  br label %cond.end317, !dbg !7242

cond.end317:                                      ; preds = %cond.end, %cond.true306
  %cond318 = phi i32 [ 4, %cond.true306 ], [ %cond316, %cond.end ], !dbg !7242
  br label %cond.end319, !dbg !7242

cond.end319:                                      ; preds = %cond.end317, %cond.true301
  %cond320 = phi i32 [ 5, %cond.true301 ], [ %cond318, %cond.end317 ], !dbg !7242
  br label %cond.end321, !dbg !7242

cond.end321:                                      ; preds = %cond.end319, %cond.true296
  %cond322 = phi i32 [ 6, %cond.true296 ], [ %cond320, %cond.end319 ], !dbg !7242
  br label %cond.end323, !dbg !7242

cond.end323:                                      ; preds = %cond.end321, %cond.true291
  %cond324 = phi i32 [ 7, %cond.true291 ], [ %cond322, %cond.end321 ], !dbg !7242
  br label %cond.end325, !dbg !7242

cond.end325:                                      ; preds = %cond.end323, %cond.true286
  %cond326 = phi i32 [ 8, %cond.true286 ], [ %cond324, %cond.end323 ], !dbg !7242
  br label %cond.end327, !dbg !7242

cond.end327:                                      ; preds = %cond.end325, %cond.true281
  %cond328 = phi i32 [ 9, %cond.true281 ], [ %cond326, %cond.end325 ], !dbg !7242
  br label %cond.end329, !dbg !7242

cond.end329:                                      ; preds = %cond.end327, %cond.true276
  %cond330 = phi i32 [ 10, %cond.true276 ], [ %cond328, %cond.end327 ], !dbg !7242
  br label %cond.end331, !dbg !7242

cond.end331:                                      ; preds = %cond.end329, %cond.true271
  %cond332 = phi i32 [ 11, %cond.true271 ], [ %cond330, %cond.end329 ], !dbg !7242
  br label %cond.end333, !dbg !7242

cond.end333:                                      ; preds = %cond.end331, %cond.true266
  %cond334 = phi i32 [ 12, %cond.true266 ], [ %cond332, %cond.end331 ], !dbg !7242
  br label %cond.end335, !dbg !7242

cond.end335:                                      ; preds = %cond.end333, %cond.true261
  %cond336 = phi i32 [ 13, %cond.true261 ], [ %cond334, %cond.end333 ], !dbg !7242
  br label %cond.end337, !dbg !7242

cond.end337:                                      ; preds = %cond.end335, %cond.true256
  %cond338 = phi i32 [ 14, %cond.true256 ], [ %cond336, %cond.end335 ], !dbg !7242
  br label %cond.end339, !dbg !7242

cond.end339:                                      ; preds = %cond.end337, %cond.true251
  %cond340 = phi i32 [ 15, %cond.true251 ], [ %cond338, %cond.end337 ], !dbg !7242
  br label %cond.end341, !dbg !7242

cond.end341:                                      ; preds = %cond.end339, %cond.true246
  %cond342 = phi i32 [ 16, %cond.true246 ], [ %cond340, %cond.end339 ], !dbg !7242
  br label %cond.end343, !dbg !7242

cond.end343:                                      ; preds = %cond.end341, %cond.true241
  %cond344 = phi i32 [ 17, %cond.true241 ], [ %cond342, %cond.end341 ], !dbg !7242
  br label %cond.end345, !dbg !7242

cond.end345:                                      ; preds = %cond.end343, %cond.true236
  %cond346 = phi i32 [ 18, %cond.true236 ], [ %cond344, %cond.end343 ], !dbg !7242
  br label %cond.end347, !dbg !7242

cond.end347:                                      ; preds = %cond.end345, %cond.true231
  %cond348 = phi i32 [ 19, %cond.true231 ], [ %cond346, %cond.end345 ], !dbg !7242
  br label %cond.end349, !dbg !7242

cond.end349:                                      ; preds = %cond.end347, %cond.true226
  %cond350 = phi i32 [ 20, %cond.true226 ], [ %cond348, %cond.end347 ], !dbg !7242
  br label %cond.end351, !dbg !7242

cond.end351:                                      ; preds = %cond.end349, %cond.true221
  %cond352 = phi i32 [ 21, %cond.true221 ], [ %cond350, %cond.end349 ], !dbg !7242
  br label %cond.end353, !dbg !7242

cond.end353:                                      ; preds = %cond.end351, %cond.true216
  %cond354 = phi i32 [ 22, %cond.true216 ], [ %cond352, %cond.end351 ], !dbg !7242
  br label %cond.end355, !dbg !7242

cond.end355:                                      ; preds = %cond.end353, %cond.true211
  %cond356 = phi i32 [ 23, %cond.true211 ], [ %cond354, %cond.end353 ], !dbg !7242
  br label %cond.end357, !dbg !7242

cond.end357:                                      ; preds = %cond.end355, %cond.true206
  %cond358 = phi i32 [ 24, %cond.true206 ], [ %cond356, %cond.end355 ], !dbg !7242
  br label %cond.end359, !dbg !7242

cond.end359:                                      ; preds = %cond.end357, %cond.true201
  %cond360 = phi i32 [ 25, %cond.true201 ], [ %cond358, %cond.end357 ], !dbg !7242
  br label %cond.end361, !dbg !7242

cond.end361:                                      ; preds = %cond.end359, %cond.true196
  %cond362 = phi i32 [ 26, %cond.true196 ], [ %cond360, %cond.end359 ], !dbg !7242
  br label %cond.end363, !dbg !7242

cond.end363:                                      ; preds = %cond.end361, %cond.true191
  %cond364 = phi i32 [ 27, %cond.true191 ], [ %cond362, %cond.end361 ], !dbg !7242
  br label %cond.end365, !dbg !7242

cond.end365:                                      ; preds = %cond.end363, %cond.true186
  %cond366 = phi i32 [ 28, %cond.true186 ], [ %cond364, %cond.end363 ], !dbg !7242
  br label %cond.end367, !dbg !7242

cond.end367:                                      ; preds = %cond.end365, %cond.true181
  %cond368 = phi i32 [ 29, %cond.true181 ], [ %cond366, %cond.end365 ], !dbg !7242
  br label %cond.end369, !dbg !7242

cond.end369:                                      ; preds = %cond.end367, %cond.true176
  %cond370 = phi i32 [ 30, %cond.true176 ], [ %cond368, %cond.end367 ], !dbg !7242
  br label %cond.end371, !dbg !7242

cond.end371:                                      ; preds = %cond.end369, %cond.true171
  %cond372 = phi i32 [ 31, %cond.true171 ], [ %cond370, %cond.end369 ], !dbg !7242
  br label %cond.end373, !dbg !7242

cond.end373:                                      ; preds = %cond.end371, %cond.true166
  %cond374 = phi i32 [ 32, %cond.true166 ], [ %cond372, %cond.end371 ], !dbg !7242
  br label %cond.end375, !dbg !7242

cond.end375:                                      ; preds = %cond.end373, %cond.true161
  %cond376 = phi i32 [ 33, %cond.true161 ], [ %cond374, %cond.end373 ], !dbg !7242
  br label %cond.end377, !dbg !7242

cond.end377:                                      ; preds = %cond.end375, %cond.true156
  %cond378 = phi i32 [ 34, %cond.true156 ], [ %cond376, %cond.end375 ], !dbg !7242
  br label %cond.end379, !dbg !7242

cond.end379:                                      ; preds = %cond.end377, %cond.true151
  %cond380 = phi i32 [ 35, %cond.true151 ], [ %cond378, %cond.end377 ], !dbg !7242
  br label %cond.end381, !dbg !7242

cond.end381:                                      ; preds = %cond.end379, %cond.true146
  %cond382 = phi i32 [ 36, %cond.true146 ], [ %cond380, %cond.end379 ], !dbg !7242
  br label %cond.end383, !dbg !7242

cond.end383:                                      ; preds = %cond.end381, %cond.true141
  %cond384 = phi i32 [ 37, %cond.true141 ], [ %cond382, %cond.end381 ], !dbg !7242
  br label %cond.end385, !dbg !7242

cond.end385:                                      ; preds = %cond.end383, %cond.true136
  %cond386 = phi i32 [ 38, %cond.true136 ], [ %cond384, %cond.end383 ], !dbg !7242
  br label %cond.end387, !dbg !7242

cond.end387:                                      ; preds = %cond.end385, %cond.true131
  %cond388 = phi i32 [ 39, %cond.true131 ], [ %cond386, %cond.end385 ], !dbg !7242
  br label %cond.end389, !dbg !7242

cond.end389:                                      ; preds = %cond.end387, %cond.true126
  %cond390 = phi i32 [ 40, %cond.true126 ], [ %cond388, %cond.end387 ], !dbg !7242
  br label %cond.end391, !dbg !7242

cond.end391:                                      ; preds = %cond.end389, %cond.true121
  %cond392 = phi i32 [ 41, %cond.true121 ], [ %cond390, %cond.end389 ], !dbg !7242
  br label %cond.end393, !dbg !7242

cond.end393:                                      ; preds = %cond.end391, %cond.true116
  %cond394 = phi i32 [ 42, %cond.true116 ], [ %cond392, %cond.end391 ], !dbg !7242
  br label %cond.end395, !dbg !7242

cond.end395:                                      ; preds = %cond.end393, %cond.true111
  %cond396 = phi i32 [ 43, %cond.true111 ], [ %cond394, %cond.end393 ], !dbg !7242
  br label %cond.end397, !dbg !7242

cond.end397:                                      ; preds = %cond.end395, %cond.true106
  %cond398 = phi i32 [ 44, %cond.true106 ], [ %cond396, %cond.end395 ], !dbg !7242
  br label %cond.end399, !dbg !7242

cond.end399:                                      ; preds = %cond.end397, %cond.true101
  %cond400 = phi i32 [ 45, %cond.true101 ], [ %cond398, %cond.end397 ], !dbg !7242
  br label %cond.end401, !dbg !7242

cond.end401:                                      ; preds = %cond.end399, %cond.true96
  %cond402 = phi i32 [ 46, %cond.true96 ], [ %cond400, %cond.end399 ], !dbg !7242
  br label %cond.end403, !dbg !7242

cond.end403:                                      ; preds = %cond.end401, %cond.true91
  %cond404 = phi i32 [ 47, %cond.true91 ], [ %cond402, %cond.end401 ], !dbg !7242
  br label %cond.end405, !dbg !7242

cond.end405:                                      ; preds = %cond.end403, %cond.true86
  %cond406 = phi i32 [ 48, %cond.true86 ], [ %cond404, %cond.end403 ], !dbg !7242
  br label %cond.end407, !dbg !7242

cond.end407:                                      ; preds = %cond.end405, %cond.true81
  %cond408 = phi i32 [ 49, %cond.true81 ], [ %cond406, %cond.end405 ], !dbg !7242
  br label %cond.end409, !dbg !7242

cond.end409:                                      ; preds = %cond.end407, %cond.true76
  %cond410 = phi i32 [ 50, %cond.true76 ], [ %cond408, %cond.end407 ], !dbg !7242
  br label %cond.end411, !dbg !7242

cond.end411:                                      ; preds = %cond.end409, %cond.true71
  %cond412 = phi i32 [ 51, %cond.true71 ], [ %cond410, %cond.end409 ], !dbg !7242
  br label %cond.end413, !dbg !7242

cond.end413:                                      ; preds = %cond.end411, %cond.true66
  %cond414 = phi i32 [ 52, %cond.true66 ], [ %cond412, %cond.end411 ], !dbg !7242
  br label %cond.end415, !dbg !7242

cond.end415:                                      ; preds = %cond.end413, %cond.true61
  %cond416 = phi i32 [ 53, %cond.true61 ], [ %cond414, %cond.end413 ], !dbg !7242
  br label %cond.end417, !dbg !7242

cond.end417:                                      ; preds = %cond.end415, %cond.true56
  %cond418 = phi i32 [ 54, %cond.true56 ], [ %cond416, %cond.end415 ], !dbg !7242
  br label %cond.end419, !dbg !7242

cond.end419:                                      ; preds = %cond.end417, %cond.true51
  %cond420 = phi i32 [ 55, %cond.true51 ], [ %cond418, %cond.end417 ], !dbg !7242
  br label %cond.end421, !dbg !7242

cond.end421:                                      ; preds = %cond.end419, %cond.true46
  %cond422 = phi i32 [ 56, %cond.true46 ], [ %cond420, %cond.end419 ], !dbg !7242
  br label %cond.end423, !dbg !7242

cond.end423:                                      ; preds = %cond.end421, %cond.true41
  %cond424 = phi i32 [ 57, %cond.true41 ], [ %cond422, %cond.end421 ], !dbg !7242
  br label %cond.end425, !dbg !7242

cond.end425:                                      ; preds = %cond.end423, %cond.true36
  %cond426 = phi i32 [ 58, %cond.true36 ], [ %cond424, %cond.end423 ], !dbg !7242
  br label %cond.end427, !dbg !7242

cond.end427:                                      ; preds = %cond.end425, %cond.true31
  %cond428 = phi i32 [ 59, %cond.true31 ], [ %cond426, %cond.end425 ], !dbg !7242
  br label %cond.end429, !dbg !7242

cond.end429:                                      ; preds = %cond.end427, %cond.true26
  %cond430 = phi i32 [ 60, %cond.true26 ], [ %cond428, %cond.end427 ], !dbg !7242
  br label %cond.end431, !dbg !7242

cond.end431:                                      ; preds = %cond.end429, %cond.true21
  %cond432 = phi i32 [ 61, %cond.true21 ], [ %cond430, %cond.end429 ], !dbg !7242
  br label %cond.end433, !dbg !7242

cond.end433:                                      ; preds = %cond.end431, %cond.true16
  %cond434 = phi i32 [ 62, %cond.true16 ], [ %cond432, %cond.end431 ], !dbg !7242
  br label %cond.end435, !dbg !7242

cond.end435:                                      ; preds = %cond.end433, %cond.true11
  %cond436 = phi i32 [ 63, %cond.true11 ], [ %cond434, %cond.end433 ], !dbg !7242
  br label %cond.end437, !dbg !7242

cond.end437:                                      ; preds = %cond.end435, %cond.true8
  %cond438 = phi i32 [ 0, %cond.true8 ], [ %cond436, %cond.end435 ], !dbg !7242
  br label %cond.end440, !dbg !7242

cond.false439:                                    ; preds = %cond.true
  br label %cond.end440, !dbg !7242

cond.end440:                                      ; preds = %cond.false439, %cond.end437
  %cond441 = phi i32 [ %cond438, %cond.end437 ], [ -1, %cond.false439 ], !dbg !7242
  br label %cond.end444, !dbg !7242

cond.false442:                                    ; preds = %if.end3
  %72 = load i64, i64* %size.addr, align 8, !dbg !7242
  %sub443 = sub i64 %72, 1, !dbg !7242
  %call = call i32 @__ilog2_u64(i64 %sub443) #14, !dbg !7242
  br label %cond.end444, !dbg !7242

cond.end444:                                      ; preds = %cond.false442, %cond.end440
  %cond445 = phi i32 [ %cond441, %cond.end440 ], [ %call, %cond.false442 ], !dbg !7242
  %sub446 = sub i32 %cond445, 12, !dbg !7243
  %add = add i32 %sub446, 1, !dbg !7244
  store i32 %add, i32* %retval, align 4, !dbg !7245
  br label %return, !dbg !7245

if.end447:                                        ; preds = %entry
  %73 = load i64, i64* %size.addr, align 8, !dbg !7246
  %dec = add i64 %73, -1, !dbg !7246
  store i64 %dec, i64* %size.addr, align 8, !dbg !7246
  %74 = load i64, i64* %size.addr, align 8, !dbg !7247
  %shr = lshr i64 %74, 12, !dbg !7247
  store i64 %shr, i64* %size.addr, align 8, !dbg !7247
  %75 = load i64, i64* %size.addr, align 8, !dbg !7248
  store i64 %75, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !7225
  %76 = load i32, i32* %bitpos.i, align 4, !dbg !7249
  %77 = load i64, i64* %x.addr.i, align 8, !dbg !7250
  %78 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %77, i32 %76) #9, !dbg !7249, !srcloc !7251
  store i32 %78, i32* %bitpos.i, align 4, !dbg !7249
  %79 = load i32, i32* %bitpos.i, align 4, !dbg !7252
  %add.i = add i32 %79, 1, !dbg !7253
  store i32 %add.i, i32* %retval, align 4, !dbg !7254
  br label %return, !dbg !7254

return:                                           ; preds = %if.end447, %cond.end444, %if.then2, %if.then1
  %80 = load i32, i32* %retval, align 4, !dbg !7255
  ret i32 %80, !dbg !7255
}

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @__ilog2_u64(i64 %n) #8 !dbg !7256 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !7217, metadata !DIExpression()), !dbg !7260
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !7224, metadata !DIExpression()), !dbg !7262
  %n.addr = alloca i64, align 8
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !7263, metadata !DIExpression()), !dbg !7264
  %0 = load i64, i64* %n.addr, align 8, !dbg !7265
  store i64 %0, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !7262
  %1 = load i32, i32* %bitpos.i, align 4, !dbg !7266
  %2 = load i64, i64* %x.addr.i, align 8, !dbg !7267
  %3 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %2, i32 %1) #9, !dbg !7266, !srcloc !7251
  store i32 %3, i32* %bitpos.i, align 4, !dbg !7266
  %4 = load i32, i32* %bitpos.i, align 4, !dbg !7268
  %add.i = add i32 %4, 1, !dbg !7269
  %sub = sub i32 %add.i, 1, !dbg !7270
  ret i32 %sub, !dbg !7271
}

; Function Attrs: noredzone
declare dso_local noalias i8* @kmalloc_order(i64, i32, i32) #1

; Function Attrs: noredzone
declare dso_local noalias i8* @kmem_cache_alloc(%struct.kmem_cache*, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kasan_kmalloc(%struct.kmem_cache* %s, i8* %object, i64 %size, i32 %flags) #2 !dbg !7272 {
entry:
  %s.addr = alloca %struct.kmem_cache*, align 8
  %object.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store %struct.kmem_cache* %s, %struct.kmem_cache** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr, metadata !7276, metadata !DIExpression()), !dbg !7277
  store i8* %object, i8** %object.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %object.addr, metadata !7278, metadata !DIExpression()), !dbg !7279
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !7280, metadata !DIExpression()), !dbg !7281
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !7282, metadata !DIExpression()), !dbg !7283
  %0 = load i8*, i8** %object.addr, align 8, !dbg !7284
  ret i8* %0, !dbg !7285
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @refcount_set(%struct.refcount_struct* %r, i32 %n) #2 !dbg !7286 {
entry:
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !5046, metadata !DIExpression()), !dbg !7290
  %i.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i.i, metadata !5057, metadata !DIExpression()), !dbg !7293
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !5059, metadata !DIExpression()), !dbg !7294
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !5069, metadata !DIExpression()), !dbg !7296
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !5071, metadata !DIExpression()), !dbg !7297
  %i.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i, metadata !5073, metadata !DIExpression()), !dbg !7298
  %r.addr = alloca %struct.refcount_struct*, align 8
  %n.addr = alloca i32, align 4
  store %struct.refcount_struct* %r, %struct.refcount_struct** %r.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.refcount_struct** %r.addr, metadata !7299, metadata !DIExpression()), !dbg !7300
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !7301, metadata !DIExpression()), !dbg !7302
  %0 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !7303
  %refs = getelementptr inbounds %struct.refcount_struct, %struct.refcount_struct* %0, i32 0, i32 0, !dbg !7304
  %1 = load i32, i32* %n.addr, align 4, !dbg !7305
  store %struct.atomic_t* %refs, %struct.atomic_t** %v.addr.i, align 8
  store i32 %1, i32* %i.addr.i, align 4
  %2 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !7306
  %3 = bitcast %struct.atomic_t* %2 to i8*, !dbg !7306
  store i8* %3, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %4 = load i8*, i8** %v.addr.i.i, align 8, !dbg !7307
  %5 = load i64, i64* %size.addr.i.i, align 8, !dbg !7308
  %conv.i.i = trunc i64 %5 to i32, !dbg !7308
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %4, i32 %conv.i.i) #13, !dbg !7309
  %6 = load i8*, i8** %v.addr.i.i, align 8, !dbg !7310
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !7310
  call void @kcsan_check_access(i8* %6, i64 %7, i32 5) #13, !dbg !7310
  %8 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !7311
  %9 = load i32, i32* %i.addr.i, align 4, !dbg !7312
  store %struct.atomic_t* %8, %struct.atomic_t** %v.addr.i1.i, align 8
  store i32 %9, i32* %i.addr.i.i, align 4
  %10 = load i32, i32* %i.addr.i.i, align 4, !dbg !7313
  %11 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !7313
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %11, i32 0, i32 0, !dbg !7313
  store volatile i32 %10, i32* %counter.i.i, align 4, !dbg !7313
  ret void, !dbg !7314
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @refcount_inc(%struct.refcount_struct* %r) #2 !dbg !7315 {
entry:
  %r.addr = alloca %struct.refcount_struct*, align 8
  store %struct.refcount_struct* %r, %struct.refcount_struct** %r.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.refcount_struct** %r.addr, metadata !7318, metadata !DIExpression()), !dbg !7319
  %0 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !7320
  call void @__refcount_inc(%struct.refcount_struct* %0, i32* null) #11, !dbg !7321
  ret void, !dbg !7322
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__refcount_inc(%struct.refcount_struct* %r, i32* %oldp) #2 !dbg !7323 {
entry:
  %r.addr = alloca %struct.refcount_struct*, align 8
  %oldp.addr = alloca i32*, align 8
  store %struct.refcount_struct* %r, %struct.refcount_struct** %r.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.refcount_struct** %r.addr, metadata !7326, metadata !DIExpression()), !dbg !7327
  store i32* %oldp, i32** %oldp.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %oldp.addr, metadata !7328, metadata !DIExpression()), !dbg !7329
  %0 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !7330
  %1 = load i32*, i32** %oldp.addr, align 8, !dbg !7331
  call void @__refcount_add(i32 1, %struct.refcount_struct* %0, i32* %1) #11, !dbg !7332
  ret void, !dbg !7333
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__refcount_add(i32 %i, %struct.refcount_struct* %r, i32* %oldp) #2 !dbg !7334 {
entry:
  %i.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i.i, metadata !7337, metadata !DIExpression()), !dbg !7341
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !7345, metadata !DIExpression()), !dbg !7346
  %__ret.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret.i.i, metadata !7347, metadata !DIExpression()), !dbg !7349
  %tmp.i.i = alloca i32, align 4
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !7350, metadata !DIExpression()), !dbg !7352
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !7354, metadata !DIExpression()), !dbg !7355
  %i.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i, metadata !7356, metadata !DIExpression()), !dbg !7357
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !7358, metadata !DIExpression()), !dbg !7359
  %i.addr = alloca i32, align 4
  %r.addr = alloca %struct.refcount_struct*, align 8
  %oldp.addr = alloca i32*, align 8
  %old = alloca i32, align 4
  store i32 %i, i32* %i.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr, metadata !7360, metadata !DIExpression()), !dbg !7361
  store %struct.refcount_struct* %r, %struct.refcount_struct** %r.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.refcount_struct** %r.addr, metadata !7362, metadata !DIExpression()), !dbg !7363
  store i32* %oldp, i32** %oldp.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %oldp.addr, metadata !7364, metadata !DIExpression()), !dbg !7365
  call void @llvm.dbg.declare(metadata i32* %old, metadata !7366, metadata !DIExpression()), !dbg !7367
  %0 = load i32, i32* %i.addr, align 4, !dbg !7368
  %1 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !7369
  %refs = getelementptr inbounds %struct.refcount_struct, %struct.refcount_struct* %1, i32 0, i32 0, !dbg !7370
  store i32 %0, i32* %i.addr.i, align 4
  store %struct.atomic_t* %refs, %struct.atomic_t** %v.addr.i, align 8
  %2 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !7371
  %3 = bitcast %struct.atomic_t* %2 to i8*, !dbg !7371
  store i8* %3, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %4 = load i8*, i8** %v.addr.i.i, align 8, !dbg !7372
  %5 = load i64, i64* %size.addr.i.i, align 8, !dbg !7373
  %conv.i.i = trunc i64 %5 to i32, !dbg !7373
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %4, i32 %conv.i.i) #13, !dbg !7374
  %6 = load i8*, i8** %v.addr.i.i, align 8, !dbg !7375
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !7375
  call void @kcsan_check_access(i8* %6, i64 %7, i32 7) #13, !dbg !7375
  %8 = load i32, i32* %i.addr.i, align 4, !dbg !7376
  %9 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !7377
  store i32 %8, i32* %i.addr.i.i, align 4
  store %struct.atomic_t* %9, %struct.atomic_t** %v.addr.i1.i, align 8
  %10 = load i32, i32* %i.addr.i.i, align 4, !dbg !7349
  store i32 %10, i32* %__ret.i.i, align 4, !dbg !7349
  %11 = load i32, i32* %__ret.i.i, align 4, !dbg !7349
  %12 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !7349
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %12, i32 0, i32 0, !dbg !7349
  %13 = call i32 asm sideeffect "xaddl $0, $1\0A", "=r,=*m,0,*m,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i32* %counter.i.i, i32 %11, i32* %counter.i.i) #10, !dbg !7349, !srcloc !7378
  store i32 %13, i32* %__ret.i.i, align 4, !dbg !7349
  %14 = load i32, i32* %__ret.i.i, align 4, !dbg !7349
  store i32 %14, i32* %tmp.i.i, align 4, !dbg !7349
  %15 = load i32, i32* %tmp.i.i, align 4, !dbg !7349
  store i32 %15, i32* %old, align 4, !dbg !7367
  %16 = load i32*, i32** %oldp.addr, align 8, !dbg !7379
  %tobool = icmp ne i32* %16, null, !dbg !7379
  br i1 %tobool, label %if.then, label %if.end, !dbg !7381

if.then:                                          ; preds = %entry
  %17 = load i32, i32* %old, align 4, !dbg !7382
  %18 = load i32*, i32** %oldp.addr, align 8, !dbg !7383
  store i32 %17, i32* %18, align 4, !dbg !7384
  br label %if.end, !dbg !7385

if.end:                                           ; preds = %if.then, %entry
  %19 = load i32, i32* %old, align 4, !dbg !7386
  %tobool1 = icmp ne i32 %19, 0, !dbg !7386
  %lnot = xor i1 %tobool1, true, !dbg !7386
  %lnot2 = xor i1 %lnot, true, !dbg !7386
  %lnot3 = xor i1 %lnot2, true, !dbg !7386
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !7386
  %conv = sext i32 %lnot.ext to i64, !dbg !7386
  %tobool4 = icmp ne i64 %conv, 0, !dbg !7386
  br i1 %tobool4, label %if.then5, label %if.else, !dbg !7388

if.then5:                                         ; preds = %if.end
  %20 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !7389
  call void @refcount_warn_saturate(%struct.refcount_struct* %20, i32 2) #11, !dbg !7390
  br label %if.end17, !dbg !7390

if.else:                                          ; preds = %if.end
  %21 = load i32, i32* %old, align 4, !dbg !7391
  %cmp = icmp slt i32 %21, 0, !dbg !7391
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !7391

lor.rhs:                                          ; preds = %if.else
  %22 = load i32, i32* %old, align 4, !dbg !7391
  %23 = load i32, i32* %i.addr, align 4, !dbg !7391
  %add = add i32 %22, %23, !dbg !7391
  %cmp7 = icmp slt i32 %add, 0, !dbg !7391
  br label %lor.end, !dbg !7391

lor.end:                                          ; preds = %lor.rhs, %if.else
  %24 = phi i1 [ true, %if.else ], [ %cmp7, %lor.rhs ]
  %lnot9 = xor i1 %24, true, !dbg !7391
  %lnot11 = xor i1 %lnot9, true, !dbg !7391
  %lnot.ext12 = zext i1 %lnot11 to i32, !dbg !7391
  %conv13 = sext i32 %lnot.ext12 to i64, !dbg !7391
  %tobool14 = icmp ne i64 %conv13, 0, !dbg !7391
  br i1 %tobool14, label %if.then15, label %if.end16, !dbg !7393

if.then15:                                        ; preds = %lor.end
  %25 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !7394
  call void @refcount_warn_saturate(%struct.refcount_struct* %25, i32 1) #11, !dbg !7395
  br label %if.end16, !dbg !7395

if.end16:                                         ; preds = %if.then15, %lor.end
  br label %if.end17

if.end17:                                         ; preds = %if.end16, %if.then5
  ret void, !dbg !7396
}

; Function Attrs: noredzone
declare dso_local void @refcount_warn_saturate(%struct.refcount_struct*, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @kasan_check_write(i8* %p, i32 %size) #2 !dbg !7397 {
entry:
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !7401, metadata !DIExpression()), !dbg !7402
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !7403, metadata !DIExpression()), !dbg !7404
  ret i1 true, !dbg !7405
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @kcsan_check_access(i8* %ptr, i64 %size, i32 %type) #2 !dbg !7406 {
entry:
  %ptr.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %type.addr = alloca i32, align 4
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !7410, metadata !DIExpression()), !dbg !7411
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !7412, metadata !DIExpression()), !dbg !7413
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !7414, metadata !DIExpression()), !dbg !7415
  ret void, !dbg !7416
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dev_set_drvdata(%struct.device* %dev, i8* %data) #2 !dbg !7417 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %data.addr = alloca i8*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !7420, metadata !DIExpression()), !dbg !7421
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !7422, metadata !DIExpression()), !dbg !7423
  %0 = load i8*, i8** %data.addr, align 8, !dbg !7424
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !7425
  %driver_data = getelementptr inbounds %struct.device, %struct.device* %1, i32 0, i32 8, !dbg !7426
  store i8* %0, i8** %driver_data, align 8, !dbg !7427
  ret void, !dbg !7428
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ufx_release_urb_work(%struct.work_struct* %work) #2 !dbg !7429 {
entry:
  %work.addr = alloca %struct.work_struct*, align 8
  %unode = alloca %struct.urb_node*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.urb_node*, align 8
  store %struct.work_struct* %work, %struct.work_struct** %work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.work_struct** %work.addr, metadata !7430, metadata !DIExpression()), !dbg !7431
  call void @llvm.dbg.declare(metadata %struct.urb_node** %unode, metadata !7432, metadata !DIExpression()), !dbg !7433
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !7434, metadata !DIExpression()), !dbg !7436
  %0 = load %struct.work_struct*, %struct.work_struct** %work.addr, align 8, !dbg !7436
  %1 = bitcast %struct.work_struct* %0 to i8*, !dbg !7436
  store i8* %1, i8** %__mptr, align 8, !dbg !7436
  br label %do.body, !dbg !7436

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !7437

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !7436
  %add.ptr = getelementptr i8, i8* %2, i64 -24, !dbg !7436
  %3 = bitcast i8* %add.ptr to %struct.urb_node*, !dbg !7436
  store %struct.urb_node* %3, %struct.urb_node** %tmp, align 8, !dbg !7437
  %4 = load %struct.urb_node*, %struct.urb_node** %tmp, align 8, !dbg !7436
  store %struct.urb_node* %4, %struct.urb_node** %unode, align 8, !dbg !7433
  %5 = load %struct.urb_node*, %struct.urb_node** %unode, align 8, !dbg !7439
  %dev = getelementptr inbounds %struct.urb_node, %struct.urb_node* %5, i32 0, i32 1, !dbg !7440
  %6 = load %struct.ufx_data*, %struct.ufx_data** %dev, align 8, !dbg !7440
  %urbs = getelementptr inbounds %struct.ufx_data, %struct.ufx_data* %6, i32 0, i32 3, !dbg !7441
  %limit_sem = getelementptr inbounds %struct.urb_list, %struct.urb_list* %urbs, i32 0, i32 2, !dbg !7442
  call void @up(%struct.semaphore* %limit_sem) #11, !dbg !7443
  ret void, !dbg !7444
}

; Function Attrs: noredzone
declare dso_local %struct.urb* @usb_alloc_urb(i32, i32) #1

; Function Attrs: noredzone
declare dso_local void @kfree(i8*) #1

; Function Attrs: noredzone
declare dso_local i8* @usb_alloc_coherent(%struct.usb_device*, i64, i32, i64*) #1

; Function Attrs: noredzone
declare dso_local void @usb_free_urb(%struct.urb*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @usb_fill_bulk_urb(%struct.urb* %urb, %struct.usb_device* %dev, i32 %pipe, i8* %transfer_buffer, i32 %buffer_length, void (%struct.urb*)* %complete_fn, i8* %context) #2 !dbg !7445 {
entry:
  %urb.addr = alloca %struct.urb*, align 8
  %dev.addr = alloca %struct.usb_device*, align 8
  %pipe.addr = alloca i32, align 4
  %transfer_buffer.addr = alloca i8*, align 8
  %buffer_length.addr = alloca i32, align 4
  %complete_fn.addr = alloca void (%struct.urb*)*, align 8
  %context.addr = alloca i8*, align 8
  store %struct.urb* %urb, %struct.urb** %urb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.urb** %urb.addr, metadata !7448, metadata !DIExpression()), !dbg !7449
  store %struct.usb_device* %dev, %struct.usb_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_device** %dev.addr, metadata !7450, metadata !DIExpression()), !dbg !7451
  store i32 %pipe, i32* %pipe.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %pipe.addr, metadata !7452, metadata !DIExpression()), !dbg !7453
  store i8* %transfer_buffer, i8** %transfer_buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %transfer_buffer.addr, metadata !7454, metadata !DIExpression()), !dbg !7455
  store i32 %buffer_length, i32* %buffer_length.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %buffer_length.addr, metadata !7456, metadata !DIExpression()), !dbg !7457
  store void (%struct.urb*)* %complete_fn, void (%struct.urb*)** %complete_fn.addr, align 8
  call void @llvm.dbg.declare(metadata void (%struct.urb*)** %complete_fn.addr, metadata !7458, metadata !DIExpression()), !dbg !7459
  store i8* %context, i8** %context.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %context.addr, metadata !7460, metadata !DIExpression()), !dbg !7461
  %0 = load %struct.usb_device*, %struct.usb_device** %dev.addr, align 8, !dbg !7462
  %1 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !7463
  %dev1 = getelementptr inbounds %struct.urb, %struct.urb* %1, i32 0, i32 8, !dbg !7464
  store %struct.usb_device* %0, %struct.usb_device** %dev1, align 8, !dbg !7465
  %2 = load i32, i32* %pipe.addr, align 4, !dbg !7466
  %3 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !7467
  %pipe2 = getelementptr inbounds %struct.urb, %struct.urb* %3, i32 0, i32 10, !dbg !7468
  store i32 %2, i32* %pipe2, align 8, !dbg !7469
  %4 = load i8*, i8** %transfer_buffer.addr, align 8, !dbg !7470
  %5 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !7471
  %transfer_buffer3 = getelementptr inbounds %struct.urb, %struct.urb* %5, i32 0, i32 14, !dbg !7472
  store i8* %4, i8** %transfer_buffer3, align 8, !dbg !7473
  %6 = load i32, i32* %buffer_length.addr, align 4, !dbg !7474
  %7 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !7475
  %transfer_buffer_length = getelementptr inbounds %struct.urb, %struct.urb* %7, i32 0, i32 19, !dbg !7476
  store i32 %6, i32* %transfer_buffer_length, align 8, !dbg !7477
  %8 = load void (%struct.urb*)*, void (%struct.urb*)** %complete_fn.addr, align 8, !dbg !7478
  %9 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !7479
  %complete = getelementptr inbounds %struct.urb, %struct.urb* %9, i32 0, i32 28, !dbg !7480
  store void (%struct.urb*)* %8, void (%struct.urb*)** %complete, align 8, !dbg !7481
  %10 = load i8*, i8** %context.addr, align 8, !dbg !7482
  %11 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !7483
  %context4 = getelementptr inbounds %struct.urb, %struct.urb* %11, i32 0, i32 27, !dbg !7484
  store i8* %10, i8** %context4, align 8, !dbg !7485
  ret void, !dbg !7486
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__create_pipe(%struct.usb_device* %dev, i32 %endpoint) #2 !dbg !7487 {
entry:
  %dev.addr = alloca %struct.usb_device*, align 8
  %endpoint.addr = alloca i32, align 4
  store %struct.usb_device* %dev, %struct.usb_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_device** %dev.addr, metadata !7490, metadata !DIExpression()), !dbg !7491
  store i32 %endpoint, i32* %endpoint.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %endpoint.addr, metadata !7492, metadata !DIExpression()), !dbg !7493
  %0 = load %struct.usb_device*, %struct.usb_device** %dev.addr, align 8, !dbg !7494
  %devnum = getelementptr inbounds %struct.usb_device, %struct.usb_device* %0, i32 0, i32 0, !dbg !7495
  %1 = load i32, i32* %devnum, align 8, !dbg !7495
  %shl = shl i32 %1, 8, !dbg !7496
  %2 = load i32, i32* %endpoint.addr, align 4, !dbg !7497
  %shl1 = shl i32 %2, 15, !dbg !7498
  %or = or i32 %shl, %shl1, !dbg !7499
  ret i32 %or, !dbg !7500
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ufx_urb_completion(%struct.urb* %urb) #2 !dbg !7501 {
entry:
  %lock.addr.i43 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i43, metadata !7502, metadata !DIExpression()), !dbg !7506
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !7508, metadata !DIExpression()), !dbg !7509
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5700, metadata !DIExpression()), !dbg !7510
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !5046, metadata !DIExpression()), !dbg !7517
  %i.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i.i, metadata !5057, metadata !DIExpression()), !dbg !7524
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !5059, metadata !DIExpression()), !dbg !7525
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !5069, metadata !DIExpression()), !dbg !7527
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !5071, metadata !DIExpression()), !dbg !7528
  %i.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i, metadata !5073, metadata !DIExpression()), !dbg !7529
  %urb.addr = alloca %struct.urb*, align 8
  %unode = alloca %struct.urb_node*, align 8
  %dev = alloca %struct.ufx_data*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy17 = alloca i64, align 8
  %__dummy218 = alloca i64, align 8
  %tmp21 = alloca i32, align 4
  store %struct.urb* %urb, %struct.urb** %urb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.urb** %urb.addr, metadata !7530, metadata !DIExpression()), !dbg !7531
  call void @llvm.dbg.declare(metadata %struct.urb_node** %unode, metadata !7532, metadata !DIExpression()), !dbg !7533
  %0 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !7534
  %context = getelementptr inbounds %struct.urb, %struct.urb* %0, i32 0, i32 27, !dbg !7535
  %1 = load i8*, i8** %context, align 8, !dbg !7535
  %2 = bitcast i8* %1 to %struct.urb_node*, !dbg !7534
  store %struct.urb_node* %2, %struct.urb_node** %unode, align 8, !dbg !7533
  call void @llvm.dbg.declare(metadata %struct.ufx_data** %dev, metadata !7536, metadata !DIExpression()), !dbg !7537
  %3 = load %struct.urb_node*, %struct.urb_node** %unode, align 8, !dbg !7538
  %dev1 = getelementptr inbounds %struct.urb_node, %struct.urb_node* %3, i32 0, i32 1, !dbg !7539
  %4 = load %struct.ufx_data*, %struct.ufx_data** %dev1, align 8, !dbg !7539
  store %struct.ufx_data* %4, %struct.ufx_data** %dev, align 8, !dbg !7537
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !7540, metadata !DIExpression()), !dbg !7541
  %5 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !7542
  %status = getelementptr inbounds %struct.urb, %struct.urb* %5, i32 0, i32 12, !dbg !7543
  %6 = load i32, i32* %status, align 8, !dbg !7543
  %tobool = icmp ne i32 %6, 0, !dbg !7542
  br i1 %tobool, label %if.then, label %if.end10, !dbg !7544

if.then:                                          ; preds = %entry
  %7 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !7545
  %status2 = getelementptr inbounds %struct.urb, %struct.urb* %7, i32 0, i32 12, !dbg !7546
  %8 = load i32, i32* %status2, align 8, !dbg !7546
  %cmp = icmp eq i32 %8, -2, !dbg !7547
  br i1 %cmp, label %if.end, label %lor.lhs.false, !dbg !7548

lor.lhs.false:                                    ; preds = %if.then
  %9 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !7549
  %status3 = getelementptr inbounds %struct.urb, %struct.urb* %9, i32 0, i32 12, !dbg !7550
  %10 = load i32, i32* %status3, align 8, !dbg !7550
  %cmp4 = icmp eq i32 %10, -104, !dbg !7551
  br i1 %cmp4, label %if.end, label %lor.lhs.false5, !dbg !7552

lor.lhs.false5:                                   ; preds = %lor.lhs.false
  %11 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !7553
  %status6 = getelementptr inbounds %struct.urb, %struct.urb* %11, i32 0, i32 12, !dbg !7554
  %12 = load i32, i32* %status6, align 8, !dbg !7554
  %cmp7 = icmp eq i32 %12, -108, !dbg !7555
  br i1 %cmp7, label %if.end, label %if.then8, !dbg !7556

if.then8:                                         ; preds = %lor.lhs.false5
  %13 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !7557
  %status9 = getelementptr inbounds %struct.urb, %struct.urb* %13, i32 0, i32 12, !dbg !7557
  %14 = load i32, i32* %status9, align 8, !dbg !7557
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.18, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.ufx_urb_completion, i64 0, i64 0), i32 %14) #12, !dbg !7557
  %15 = load %struct.ufx_data*, %struct.ufx_data** %dev, align 8, !dbg !7558
  %lost_pixels = getelementptr inbounds %struct.ufx_data, %struct.ufx_data* %15, i32 0, i32 9, !dbg !7559
  store %struct.atomic_t* %lost_pixels, %struct.atomic_t** %v.addr.i, align 8
  store i32 1, i32* %i.addr.i, align 4
  %16 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !7560
  %17 = bitcast %struct.atomic_t* %16 to i8*, !dbg !7560
  store i8* %17, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %18 = load i8*, i8** %v.addr.i.i, align 8, !dbg !7561
  %19 = load i64, i64* %size.addr.i.i, align 8, !dbg !7562
  %conv.i.i = trunc i64 %19 to i32, !dbg !7562
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %18, i32 %conv.i.i) #13, !dbg !7563
  %20 = load i8*, i8** %v.addr.i.i, align 8, !dbg !7564
  %21 = load i64, i64* %size.addr.i.i, align 8, !dbg !7564
  call void @kcsan_check_access(i8* %20, i64 %21, i32 5) #13, !dbg !7564
  %22 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !7565
  %23 = load i32, i32* %i.addr.i, align 4, !dbg !7566
  store %struct.atomic_t* %22, %struct.atomic_t** %v.addr.i1.i, align 8
  store i32 %23, i32* %i.addr.i.i, align 4
  %24 = load i32, i32* %i.addr.i.i, align 4, !dbg !7567
  %25 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !7567
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %25, i32 0, i32 0, !dbg !7567
  store volatile i32 %24, i32* %counter.i.i, align 4, !dbg !7567
  br label %if.end, !dbg !7568

if.end:                                           ; preds = %if.then8, %lor.lhs.false5, %lor.lhs.false, %if.then
  br label %if.end10, !dbg !7569

if.end10:                                         ; preds = %if.end, %entry
  %26 = load %struct.ufx_data*, %struct.ufx_data** %dev, align 8, !dbg !7570
  %urbs = getelementptr inbounds %struct.ufx_data, %struct.ufx_data* %26, i32 0, i32 3, !dbg !7571
  %size = getelementptr inbounds %struct.urb_list, %struct.urb_list* %urbs, i32 0, i32 5, !dbg !7572
  %27 = load i64, i64* %size, align 8, !dbg !7572
  %conv = trunc i64 %27 to i32, !dbg !7570
  %28 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !7573
  %transfer_buffer_length = getelementptr inbounds %struct.urb, %struct.urb* %28, i32 0, i32 19, !dbg !7574
  store i32 %conv, i32* %transfer_buffer_length, align 8, !dbg !7575
  br label %do.body, !dbg !7576

do.body:                                          ; preds = %if.end10
  br label %do.body11, !dbg !7577

do.body11:                                        ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !7578, metadata !DIExpression()), !dbg !7580
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !7581, metadata !DIExpression()), !dbg !7580
  %cmp12 = icmp eq i64* %__dummy, %__dummy2, !dbg !7580
  %conv13 = zext i1 %cmp12 to i32, !dbg !7580
  store i32 1, i32* %tmp, align 4, !dbg !7580
  %29 = load i32, i32* %tmp, align 4, !dbg !7580
  br label %do.body14, !dbg !7582

do.body14:                                        ; preds = %do.body11
  br label %do.body15, !dbg !7583

do.body15:                                        ; preds = %do.body14
  br label %do.body16, !dbg !7584

do.body16:                                        ; preds = %do.body15
  call void @llvm.dbg.declare(metadata i64* %__dummy17, metadata !7586, metadata !DIExpression()), !dbg !7589
  call void @llvm.dbg.declare(metadata i64* %__dummy218, metadata !7590, metadata !DIExpression()), !dbg !7589
  %cmp19 = icmp eq i64* %__dummy17, %__dummy218, !dbg !7589
  %conv20 = zext i1 %cmp19 to i32, !dbg !7589
  store i32 1, i32* %tmp21, align 4, !dbg !7589
  %30 = load i32, i32* %tmp21, align 4, !dbg !7589
  %call22 = call i64 @arch_local_irq_save() #11, !dbg !7591
  store i64 %call22, i64* %flags, align 8, !dbg !7591
  br label %do.end, !dbg !7591

do.end:                                           ; preds = %do.body16
  br label %do.end23, !dbg !7584

do.end23:                                         ; preds = %do.end
  br label %do.body24, !dbg !7583

do.body24:                                        ; preds = %do.end23
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !7592, !srcloc !7593
  br label %do.body25, !dbg !7592

do.body25:                                        ; preds = %do.body24
  %31 = load %struct.ufx_data*, %struct.ufx_data** %dev, align 8, !dbg !7594
  %urbs26 = getelementptr inbounds %struct.ufx_data, %struct.ufx_data* %31, i32 0, i32 3, !dbg !7594
  %lock = getelementptr inbounds %struct.urb_list, %struct.urb_list* %urbs26, i32 0, i32 1, !dbg !7594
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %32 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !7595
  %33 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %32, i32 0, i32 0, !dbg !7596
  %rlock.i = bitcast %union.anon.3* %33 to %struct.raw_spinlock*, !dbg !7596
  br label %do.end28, !dbg !7594

do.end28:                                         ; preds = %do.body25
  br label %do.end29, !dbg !7592

do.end29:                                         ; preds = %do.end28
  br label %do.end30, !dbg !7583

do.end30:                                         ; preds = %do.end29
  br label %do.end31, !dbg !7582

do.end31:                                         ; preds = %do.end30
  br label %do.end32, !dbg !7577

do.end32:                                         ; preds = %do.end31
  %34 = load %struct.urb_node*, %struct.urb_node** %unode, align 8, !dbg !7597
  %entry33 = getelementptr inbounds %struct.urb_node, %struct.urb_node* %34, i32 0, i32 0, !dbg !7598
  %35 = load %struct.ufx_data*, %struct.ufx_data** %dev, align 8, !dbg !7599
  %urbs34 = getelementptr inbounds %struct.ufx_data, %struct.ufx_data* %35, i32 0, i32 3, !dbg !7600
  %list = getelementptr inbounds %struct.urb_list, %struct.urb_list* %urbs34, i32 0, i32 0, !dbg !7601
  call void @list_add_tail(%struct.list_head* %entry33, %struct.list_head* %list) #11, !dbg !7602
  %36 = load %struct.ufx_data*, %struct.ufx_data** %dev, align 8, !dbg !7603
  %urbs35 = getelementptr inbounds %struct.ufx_data, %struct.ufx_data* %36, i32 0, i32 3, !dbg !7604
  %available = getelementptr inbounds %struct.urb_list, %struct.urb_list* %urbs35, i32 0, i32 3, !dbg !7605
  %37 = load i32, i32* %available, align 8, !dbg !7606
  %inc = add i32 %37, 1, !dbg !7606
  store i32 %inc, i32* %available, align 8, !dbg !7606
  %38 = load %struct.ufx_data*, %struct.ufx_data** %dev, align 8, !dbg !7607
  %urbs36 = getelementptr inbounds %struct.ufx_data, %struct.ufx_data* %38, i32 0, i32 3, !dbg !7608
  %lock37 = getelementptr inbounds %struct.urb_list, %struct.urb_list* %urbs36, i32 0, i32 1, !dbg !7609
  %39 = load i64, i64* %flags, align 8, !dbg !7610
  store %struct.spinlock* %lock37, %struct.spinlock** %lock.addr.i43, align 8
  store i64 %39, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !284, metadata !7611, metadata !DIExpression()) #10, !dbg !7614
  call void @llvm.dbg.declare(metadata !284, metadata !7615, metadata !DIExpression()) #10, !dbg !7614
  store i32 1, i32* %tmp.i, align 4, !dbg !7614
  %40 = load i32, i32* %tmp.i, align 4, !dbg !7614
  call void @llvm.dbg.declare(metadata !284, metadata !7616, metadata !DIExpression()) #10, !dbg !7621
  call void @llvm.dbg.declare(metadata !284, metadata !7622, metadata !DIExpression()) #10, !dbg !7621
  store i32 1, i32* %tmp8.i, align 4, !dbg !7621
  %41 = load i32, i32* %tmp8.i, align 4, !dbg !7621
  %42 = load i64, i64* %flags.addr.i, align 8, !dbg !7623
  call void @arch_local_irq_restore(i64 %42) #13, !dbg !7623
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !7624, !srcloc !7626
  %43 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i43, align 8, !dbg !7627
  %44 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %43, i32 0, i32 0, !dbg !7627
  %rlock.i44 = bitcast %union.anon.3* %44 to %struct.raw_spinlock*, !dbg !7627
  %45 = load i8, i8* @fb_defio, align 1, !dbg !7629
  %tobool38 = trunc i8 %45 to i1, !dbg !7629
  br i1 %tobool38, label %if.then39, label %if.else, !dbg !7631

if.then39:                                        ; preds = %do.end32
  %46 = load %struct.urb_node*, %struct.urb_node** %unode, align 8, !dbg !7632
  %release_urb_work = getelementptr inbounds %struct.urb_node, %struct.urb_node* %46, i32 0, i32 2, !dbg !7633
  %call40 = call zeroext i1 @schedule_delayed_work(%struct.delayed_work* %release_urb_work, i64 0) #11, !dbg !7634
  br label %if.end42, !dbg !7634

if.else:                                          ; preds = %do.end32
  %47 = load %struct.ufx_data*, %struct.ufx_data** %dev, align 8, !dbg !7635
  %urbs41 = getelementptr inbounds %struct.ufx_data, %struct.ufx_data* %47, i32 0, i32 3, !dbg !7636
  %limit_sem = getelementptr inbounds %struct.urb_list, %struct.urb_list* %urbs41, i32 0, i32 2, !dbg !7637
  call void @up(%struct.semaphore* %limit_sem) #11, !dbg !7638
  br label %if.end42

if.end42:                                         ; preds = %if.else, %if.then39
  ret void, !dbg !7639
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_add_tail(%struct.list_head* %new, %struct.list_head* %head) #2 !dbg !7640 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %head.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !7643, metadata !DIExpression()), !dbg !7644
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !7645, metadata !DIExpression()), !dbg !7646
  %0 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !7647
  %1 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !7648
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !7649
  %2 = load %struct.list_head*, %struct.list_head** %prev, align 8, !dbg !7649
  %3 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !7650
  call void @__list_add(%struct.list_head* %0, %struct.list_head* %2, %struct.list_head* %3) #11, !dbg !7651
  ret void, !dbg !7652
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sema_init(%struct.semaphore* %sem, i32 %val) #2 !dbg !5010 {
entry:
  %sem.addr = alloca %struct.semaphore*, align 8
  %val.addr = alloca i32, align 4
  %.compoundliteral = alloca %struct.semaphore, align 8
  store %struct.semaphore* %sem, %struct.semaphore** %sem.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.semaphore** %sem.addr, metadata !7653, metadata !DIExpression()), !dbg !7654
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !7655, metadata !DIExpression()), !dbg !7656
  %0 = load %struct.semaphore*, %struct.semaphore** %sem.addr, align 8, !dbg !7657
  %count = getelementptr inbounds %struct.semaphore, %struct.semaphore* %.compoundliteral, i32 0, i32 1, !dbg !7658
  %1 = load i32, i32* %val.addr, align 4, !dbg !7658
  store i32 %1, i32* %count, align 8, !dbg !7658
  %wait_list = getelementptr inbounds %struct.semaphore, %struct.semaphore* %.compoundliteral, i32 0, i32 2, !dbg !7658
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %wait_list, i32 0, i32 0, !dbg !7658
  %2 = load %struct.semaphore*, %struct.semaphore** %sem.addr, align 8, !dbg !7658
  %wait_list1 = getelementptr inbounds %struct.semaphore, %struct.semaphore* %2, i32 0, i32 2, !dbg !7658
  store %struct.list_head* %wait_list1, %struct.list_head** %next, align 8, !dbg !7658
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %wait_list, i32 0, i32 1, !dbg !7658
  %3 = load %struct.semaphore*, %struct.semaphore** %sem.addr, align 8, !dbg !7658
  %wait_list2 = getelementptr inbounds %struct.semaphore, %struct.semaphore* %3, i32 0, i32 2, !dbg !7658
  store %struct.list_head* %wait_list2, %struct.list_head** %prev, align 8, !dbg !7658
  %4 = bitcast %struct.semaphore* %0 to i8*, !dbg !7659
  %5 = bitcast %struct.semaphore* %.compoundliteral to i8*, !dbg !7659
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 24, i1 false), !dbg !7659
  br label %do.body, !dbg !7660

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !7661

do.end:                                           ; preds = %do.body
  ret void, !dbg !7663
}

; Function Attrs: noredzone
declare dso_local void @up(%struct.semaphore*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @arch_local_irq_save() #2 !dbg !7664 {
entry:
  %f = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %f, metadata !7668, metadata !DIExpression()), !dbg !7669
  %call = call i64 @arch_local_save_flags() #11, !dbg !7670
  store i64 %call, i64* %f, align 8, !dbg !7671
  call void @arch_local_irq_disable() #11, !dbg !7672
  %0 = load i64, i64* %f, align 8, !dbg !7673
  ret i64 %0, !dbg !7674
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @schedule_delayed_work(%struct.delayed_work* %dwork, i64 %delay) #2 !dbg !7675 {
entry:
  %dwork.addr = alloca %struct.delayed_work*, align 8
  %delay.addr = alloca i64, align 8
  store %struct.delayed_work* %dwork, %struct.delayed_work** %dwork.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.delayed_work** %dwork.addr, metadata !7679, metadata !DIExpression()), !dbg !7680
  store i64 %delay, i64* %delay.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %delay.addr, metadata !7681, metadata !DIExpression()), !dbg !7682
  %0 = load %struct.workqueue_struct*, %struct.workqueue_struct** @system_wq, align 8, !dbg !7683
  %1 = load %struct.delayed_work*, %struct.delayed_work** %dwork.addr, align 8, !dbg !7684
  %2 = load i64, i64* %delay.addr, align 8, !dbg !7685
  %call = call zeroext i1 @queue_delayed_work(%struct.workqueue_struct* %0, %struct.delayed_work* %1, i64 %2) #11, !dbg !7686
  ret i1 %call, !dbg !7687
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @arch_local_save_flags() #2 !dbg !7688 {
entry:
  %__ret = alloca i64, align 8
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  %__mask = alloca i64, align 8
  %tmp = alloca i64, align 8
  %tmp2 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__ret, metadata !7689, metadata !DIExpression()), !dbg !7691
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !7692, metadata !DIExpression()), !dbg !7691
  %0 = load i64, i64* %__edi, align 8, !dbg !7691
  store i64 %0, i64* %__edi, align 8, !dbg !7691
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !7693, metadata !DIExpression()), !dbg !7691
  %1 = load i64, i64* %__esi, align 8, !dbg !7691
  store i64 %1, i64* %__esi, align 8, !dbg !7691
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !7694, metadata !DIExpression()), !dbg !7691
  %2 = load i64, i64* %__edx, align 8, !dbg !7691
  store i64 %2, i64* %__edx, align 8, !dbg !7691
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !7695, metadata !DIExpression()), !dbg !7691
  %3 = load i64, i64* %__ecx, align 8, !dbg !7691
  store i64 %3, i64* %__ecx, align 8, !dbg !7691
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !7696, metadata !DIExpression()), !dbg !7691
  %4 = load i64, i64* %__eax, align 8, !dbg !7691
  store i64 %4, i64* %__eax, align 8, !dbg !7691
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 0, i32 0), align 8, !dbg !7691
  %6 = call i64 @llvm.read_register.i64(metadata !5033), !dbg !7697
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 36, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 0, i32 0), i32 1, i64 %6) #10, !dbg !7697, !srcloc !7700
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !7697
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !7697
  store i64 %asmresult, i64* %__eax, align 8, !dbg !7697
  call void @llvm.write_register.i64(metadata !5033, i64 %asmresult1), !dbg !7697
  %8 = load i64, i64* %__eax, align 8, !dbg !7697
  call void @llvm.dbg.declare(metadata i64* %__mask, metadata !7701, metadata !DIExpression()), !dbg !7703
  store i64 -1, i64* %__mask, align 8, !dbg !7703
  %9 = load i64, i64* %__mask, align 8, !dbg !7703
  store i64 %9, i64* %tmp, align 8, !dbg !7703
  %10 = load i64, i64* %tmp, align 8, !dbg !7703
  %and = and i64 %8, %10, !dbg !7697
  store i64 %and, i64* %__ret, align 8, !dbg !7697
  %11 = load i64, i64* %__ret, align 8, !dbg !7691
  store i64 %11, i64* %tmp2, align 8, !dbg !7704
  %12 = load i64, i64* %tmp2, align 8, !dbg !7691
  ret i64 %12, !dbg !7705
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_disable() #2 !dbg !7706 {
entry:
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !7707, metadata !DIExpression()), !dbg !7709
  %0 = load i64, i64* %__edi, align 8, !dbg !7709
  store i64 %0, i64* %__edi, align 8, !dbg !7709
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !7710, metadata !DIExpression()), !dbg !7709
  %1 = load i64, i64* %__esi, align 8, !dbg !7709
  store i64 %1, i64* %__esi, align 8, !dbg !7709
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !7711, metadata !DIExpression()), !dbg !7709
  %2 = load i64, i64* %__edx, align 8, !dbg !7709
  store i64 %2, i64* %__edx, align 8, !dbg !7709
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !7712, metadata !DIExpression()), !dbg !7709
  %3 = load i64, i64* %__ecx, align 8, !dbg !7709
  store i64 %3, i64* %__ecx, align 8, !dbg !7709
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !7713, metadata !DIExpression()), !dbg !7709
  %4 = load i64, i64* %__eax, align 8, !dbg !7709
  store i64 %4, i64* %__eax, align 8, !dbg !7709
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 2, i32 0), align 8, !dbg !7709
  %6 = call i64 @llvm.read_register.i64(metadata !5033), !dbg !7709
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 38, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 2, i32 0), i32 1, i64 %6) #10, !dbg !7709, !srcloc !7714
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !7709
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !7709
  store i64 %asmresult, i64* %__eax, align 8, !dbg !7709
  call void @llvm.write_register.i64(metadata !5033, i64 %asmresult1), !dbg !7709
  ret void, !dbg !7715
}

; Function Attrs: nounwind readonly
declare i64 @llvm.read_register.i64(metadata) #9

; Function Attrs: nounwind
declare void @llvm.write_register.i64(metadata, i64) #10

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_restore(i64 %f) #2 !dbg !7716 {
entry:
  %f.addr = alloca i64, align 8
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  store i64 %f, i64* %f.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %f.addr, metadata !7719, metadata !DIExpression()), !dbg !7720
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !7721, metadata !DIExpression()), !dbg !7723
  %0 = load i64, i64* %__edi, align 8, !dbg !7723
  store i64 %0, i64* %__edi, align 8, !dbg !7723
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !7724, metadata !DIExpression()), !dbg !7723
  %1 = load i64, i64* %__esi, align 8, !dbg !7723
  store i64 %1, i64* %__esi, align 8, !dbg !7723
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !7725, metadata !DIExpression()), !dbg !7723
  %2 = load i64, i64* %__edx, align 8, !dbg !7723
  store i64 %2, i64* %__edx, align 8, !dbg !7723
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !7726, metadata !DIExpression()), !dbg !7723
  %3 = load i64, i64* %__ecx, align 8, !dbg !7723
  store i64 %3, i64* %__ecx, align 8, !dbg !7723
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !7727, metadata !DIExpression()), !dbg !7723
  %4 = load i64, i64* %__eax, align 8, !dbg !7723
  store i64 %4, i64* %__eax, align 8, !dbg !7723
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 1, i32 0), align 8, !dbg !7723
  %6 = call i64 @llvm.read_register.i64(metadata !5033), !dbg !7723
  %7 = load i64, i64* %f.addr, align 8, !dbg !7723
  %8 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,{di},1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 37, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 1, i32 0), i32 1, i64 %7, i64 %6) #10, !dbg !7723, !srcloc !7728
  %asmresult = extractvalue { i64, i64 } %8, 0, !dbg !7723
  %asmresult1 = extractvalue { i64, i64 } %8, 1, !dbg !7723
  store i64 %asmresult, i64* %__eax, align 8, !dbg !7723
  call void @llvm.write_register.i64(metadata !5033, i64 %asmresult1), !dbg !7723
  ret void, !dbg !7729
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @queue_delayed_work(%struct.workqueue_struct* %wq, %struct.delayed_work* %dwork, i64 %delay) #2 !dbg !7730 {
entry:
  %wq.addr = alloca %struct.workqueue_struct*, align 8
  %dwork.addr = alloca %struct.delayed_work*, align 8
  %delay.addr = alloca i64, align 8
  store %struct.workqueue_struct* %wq, %struct.workqueue_struct** %wq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.workqueue_struct** %wq.addr, metadata !7733, metadata !DIExpression()), !dbg !7734
  store %struct.delayed_work* %dwork, %struct.delayed_work** %dwork.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.delayed_work** %dwork.addr, metadata !7735, metadata !DIExpression()), !dbg !7736
  store i64 %delay, i64* %delay.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %delay.addr, metadata !7737, metadata !DIExpression()), !dbg !7738
  %0 = load %struct.workqueue_struct*, %struct.workqueue_struct** %wq.addr, align 8, !dbg !7739
  %1 = load %struct.delayed_work*, %struct.delayed_work** %dwork.addr, align 8, !dbg !7740
  %2 = load i64, i64* %delay.addr, align 8, !dbg !7741
  %call = call zeroext i1 @queue_delayed_work_on(i32 1, %struct.workqueue_struct* %0, %struct.delayed_work* %1, i64 %2) #11, !dbg !7742
  ret i1 %call, !dbg !7743
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @queue_delayed_work_on(i32, %struct.workqueue_struct*, %struct.delayed_work*, i64) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_add(%struct.list_head* %new, %struct.list_head* %prev, %struct.list_head* %next) #2 !dbg !7744 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !7747, metadata !DIExpression()), !dbg !7748
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !7749, metadata !DIExpression()), !dbg !7750
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !7751, metadata !DIExpression()), !dbg !7752
  %0 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !7753
  %1 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !7755
  %2 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !7756
  %call = call zeroext i1 @__list_add_valid(%struct.list_head* %0, %struct.list_head* %1, %struct.list_head* %2) #11, !dbg !7757
  br i1 %call, label %if.end, label %if.then, !dbg !7758

if.then:                                          ; preds = %entry
  br label %do.end8, !dbg !7759

if.end:                                           ; preds = %entry
  %3 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !7760
  %4 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !7761
  %prev1 = getelementptr inbounds %struct.list_head, %struct.list_head* %4, i32 0, i32 1, !dbg !7762
  store %struct.list_head* %3, %struct.list_head** %prev1, align 8, !dbg !7763
  %5 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !7764
  %6 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !7765
  %next2 = getelementptr inbounds %struct.list_head, %struct.list_head* %6, i32 0, i32 0, !dbg !7766
  store %struct.list_head* %5, %struct.list_head** %next2, align 8, !dbg !7767
  %7 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !7768
  %8 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !7769
  %prev3 = getelementptr inbounds %struct.list_head, %struct.list_head* %8, i32 0, i32 1, !dbg !7770
  store %struct.list_head* %7, %struct.list_head** %prev3, align 8, !dbg !7771
  br label %do.body, !dbg !7772

do.body:                                          ; preds = %if.end
  br label %do.body4, !dbg !7773

do.body4:                                         ; preds = %do.body
  br label %do.end, !dbg !7775

do.end:                                           ; preds = %do.body4
  br label %do.body5, !dbg !7773

do.body5:                                         ; preds = %do.end
  %9 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !7777
  %10 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !7777
  %next6 = getelementptr inbounds %struct.list_head, %struct.list_head* %10, i32 0, i32 0, !dbg !7777
  store volatile %struct.list_head* %9, %struct.list_head** %next6, align 8, !dbg !7777
  br label %do.end7, !dbg !7777

do.end7:                                          ; preds = %do.body5
  br label %do.end8, !dbg !7773

do.end8:                                          ; preds = %if.then, %do.end7
  ret void, !dbg !7779
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__list_add_valid(%struct.list_head* %new, %struct.list_head* %prev, %struct.list_head* %next) #2 !dbg !7780 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !7783, metadata !DIExpression()), !dbg !7784
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !7785, metadata !DIExpression()), !dbg !7786
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !7787, metadata !DIExpression()), !dbg !7788
  ret i1 true, !dbg !7789
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ufx_ops_open(%struct.fb_info* %info, i32 %user) #2 !dbg !7790 {
entry:
  %retval = alloca i32, align 4
  %info.addr = alloca %struct.fb_info*, align 8
  %user.addr = alloca i32, align 4
  %dev = alloca %struct.ufx_data*, align 8
  %fbdefio8 = alloca %struct.fb_deferred_io*, align 8
  %tmp = alloca i32, align 4
  store %struct.fb_info* %info, %struct.fb_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fb_info** %info.addr, metadata !7791, metadata !DIExpression()), !dbg !7792
  store i32 %user, i32* %user.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %user.addr, metadata !7793, metadata !DIExpression()), !dbg !7794
  call void @llvm.dbg.declare(metadata %struct.ufx_data** %dev, metadata !7795, metadata !DIExpression()), !dbg !7796
  %0 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !7797
  %par = getelementptr inbounds %struct.fb_info, %struct.fb_info* %0, i32 0, i32 30, !dbg !7798
  %1 = load i8*, i8** %par, align 8, !dbg !7798
  %2 = bitcast i8* %1 to %struct.ufx_data*, !dbg !7797
  store %struct.ufx_data* %2, %struct.ufx_data** %dev, align 8, !dbg !7796
  %3 = load i32, i32* %user.addr, align 4, !dbg !7799
  %cmp = icmp eq i32 %3, 0, !dbg !7801
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !7802

land.lhs.true:                                    ; preds = %entry
  %4 = load i8, i8* @console, align 1, !dbg !7803
  %tobool = trunc i8 %4 to i1, !dbg !7803
  br i1 %tobool, label %if.end, label %if.then, !dbg !7804

if.then:                                          ; preds = %land.lhs.true
  store i32 -16, i32* %retval, align 4, !dbg !7805
  br label %return, !dbg !7805

if.end:                                           ; preds = %land.lhs.true, %entry
  %5 = load %struct.ufx_data*, %struct.ufx_data** %dev, align 8, !dbg !7806
  %virtualized = getelementptr inbounds %struct.ufx_data, %struct.ufx_data* %5, i32 0, i32 6, !dbg !7808
  %6 = load i8, i8* %virtualized, align 8, !dbg !7808
  %tobool1 = trunc i8 %6 to i1, !dbg !7808
  br i1 %tobool1, label %if.then2, label %if.end3, !dbg !7809

if.then2:                                         ; preds = %if.end
  store i32 -19, i32* %retval, align 4, !dbg !7810
  br label %return, !dbg !7810

if.end3:                                          ; preds = %if.end
  %7 = load %struct.ufx_data*, %struct.ufx_data** %dev, align 8, !dbg !7811
  %fb_count = getelementptr inbounds %struct.ufx_data, %struct.ufx_data* %7, i32 0, i32 5, !dbg !7812
  %8 = load i32, i32* %fb_count, align 4, !dbg !7813
  %inc = add i32 %8, 1, !dbg !7813
  store i32 %inc, i32* %fb_count, align 4, !dbg !7813
  %9 = load %struct.ufx_data*, %struct.ufx_data** %dev, align 8, !dbg !7814
  %kref = getelementptr inbounds %struct.ufx_data, %struct.ufx_data* %9, i32 0, i32 4, !dbg !7815
  call void @kref_get(%struct.kref* %kref) #11, !dbg !7816
  %10 = load i8, i8* @fb_defio, align 1, !dbg !7817
  %tobool4 = trunc i8 %10 to i1, !dbg !7817
  br i1 %tobool4, label %land.lhs.true5, label %if.end13, !dbg !7819

land.lhs.true5:                                   ; preds = %if.end3
  %11 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !7820
  %fbdefio = getelementptr inbounds %struct.fb_info, %struct.fb_info* %11, i32 0, i32 19, !dbg !7821
  %12 = load %struct.fb_deferred_io*, %struct.fb_deferred_io** %fbdefio, align 8, !dbg !7821
  %cmp6 = icmp eq %struct.fb_deferred_io* %12, null, !dbg !7822
  br i1 %cmp6, label %if.then7, label %if.end13, !dbg !7823

if.then7:                                         ; preds = %land.lhs.true5
  call void @llvm.dbg.declare(metadata %struct.fb_deferred_io** %fbdefio8, metadata !7824, metadata !DIExpression()), !dbg !7826
  %call = call i8* @kzalloc(i64 64, i32 3264) #11, !dbg !7827
  %13 = bitcast i8* %call to %struct.fb_deferred_io*, !dbg !7827
  store %struct.fb_deferred_io* %13, %struct.fb_deferred_io** %fbdefio8, align 8, !dbg !7828
  %14 = load %struct.fb_deferred_io*, %struct.fb_deferred_io** %fbdefio8, align 8, !dbg !7829
  %tobool9 = icmp ne %struct.fb_deferred_io* %14, null, !dbg !7829
  br i1 %tobool9, label %if.then10, label %if.end11, !dbg !7831

if.then10:                                        ; preds = %if.then7
  %15 = load %struct.fb_deferred_io*, %struct.fb_deferred_io** %fbdefio8, align 8, !dbg !7832
  %delay = getelementptr inbounds %struct.fb_deferred_io, %struct.fb_deferred_io* %15, i32 0, i32 0, !dbg !7834
  store i64 5, i64* %delay, align 8, !dbg !7835
  %16 = load %struct.fb_deferred_io*, %struct.fb_deferred_io** %fbdefio8, align 8, !dbg !7836
  %deferred_io = getelementptr inbounds %struct.fb_deferred_io, %struct.fb_deferred_io* %16, i32 0, i32 4, !dbg !7837
  store void (%struct.fb_info*, %struct.list_head*)* @ufx_dpy_deferred_io, void (%struct.fb_info*, %struct.list_head*)** %deferred_io, align 8, !dbg !7838
  br label %if.end11, !dbg !7839

if.end11:                                         ; preds = %if.then10, %if.then7
  %17 = load %struct.fb_deferred_io*, %struct.fb_deferred_io** %fbdefio8, align 8, !dbg !7840
  %18 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !7841
  %fbdefio12 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %18, i32 0, i32 19, !dbg !7842
  store %struct.fb_deferred_io* %17, %struct.fb_deferred_io** %fbdefio12, align 8, !dbg !7843
  %19 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !7844
  call void @fb_deferred_io_init(%struct.fb_info* %19) #11, !dbg !7845
  br label %if.end13, !dbg !7846

if.end13:                                         ; preds = %if.end11, %land.lhs.true5, %if.end3
  store i32 0, i32* %tmp, align 4, !dbg !7847
  %20 = load i32, i32* %tmp, align 4, !dbg !7850
  store i32 0, i32* %retval, align 4, !dbg !7851
  br label %return, !dbg !7851

return:                                           ; preds = %if.end13, %if.then2, %if.then
  %21 = load i32, i32* %retval, align 4, !dbg !7852
  ret i32 %21, !dbg !7852
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ufx_ops_release(%struct.fb_info* %info, i32 %user) #2 !dbg !7853 {
entry:
  %info.addr = alloca %struct.fb_info*, align 8
  %user.addr = alloca i32, align 4
  %dev = alloca %struct.ufx_data*, align 8
  %tmp = alloca i32, align 4
  store %struct.fb_info* %info, %struct.fb_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fb_info** %info.addr, metadata !7854, metadata !DIExpression()), !dbg !7855
  store i32 %user, i32* %user.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %user.addr, metadata !7856, metadata !DIExpression()), !dbg !7857
  call void @llvm.dbg.declare(metadata %struct.ufx_data** %dev, metadata !7858, metadata !DIExpression()), !dbg !7859
  %0 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !7860
  %par = getelementptr inbounds %struct.fb_info, %struct.fb_info* %0, i32 0, i32 30, !dbg !7861
  %1 = load i8*, i8** %par, align 8, !dbg !7861
  %2 = bitcast i8* %1 to %struct.ufx_data*, !dbg !7860
  store %struct.ufx_data* %2, %struct.ufx_data** %dev, align 8, !dbg !7859
  %3 = load %struct.ufx_data*, %struct.ufx_data** %dev, align 8, !dbg !7862
  %fb_count = getelementptr inbounds %struct.ufx_data, %struct.ufx_data* %3, i32 0, i32 5, !dbg !7863
  %4 = load i32, i32* %fb_count, align 4, !dbg !7864
  %dec = add i32 %4, -1, !dbg !7864
  store i32 %dec, i32* %fb_count, align 4, !dbg !7864
  %5 = load %struct.ufx_data*, %struct.ufx_data** %dev, align 8, !dbg !7865
  %virtualized = getelementptr inbounds %struct.ufx_data, %struct.ufx_data* %5, i32 0, i32 6, !dbg !7867
  %6 = load i8, i8* %virtualized, align 8, !dbg !7867
  %tobool = trunc i8 %6 to i1, !dbg !7867
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !7868

land.lhs.true:                                    ; preds = %entry
  %7 = load %struct.ufx_data*, %struct.ufx_data** %dev, align 8, !dbg !7869
  %fb_count1 = getelementptr inbounds %struct.ufx_data, %struct.ufx_data* %7, i32 0, i32 5, !dbg !7870
  %8 = load i32, i32* %fb_count1, align 4, !dbg !7870
  %cmp = icmp eq i32 %8, 0, !dbg !7871
  br i1 %cmp, label %if.then, label %if.end, !dbg !7872

if.then:                                          ; preds = %land.lhs.true
  %9 = load %struct.ufx_data*, %struct.ufx_data** %dev, align 8, !dbg !7873
  %free_framebuffer_work = getelementptr inbounds %struct.ufx_data, %struct.ufx_data* %9, i32 0, i32 7, !dbg !7874
  %call = call zeroext i1 @schedule_delayed_work(%struct.delayed_work* %free_framebuffer_work, i64 250) #11, !dbg !7875
  br label %if.end, !dbg !7875

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %10 = load %struct.ufx_data*, %struct.ufx_data** %dev, align 8, !dbg !7876
  %fb_count2 = getelementptr inbounds %struct.ufx_data, %struct.ufx_data* %10, i32 0, i32 5, !dbg !7878
  %11 = load i32, i32* %fb_count2, align 4, !dbg !7878
  %cmp3 = icmp eq i32 %11, 0, !dbg !7879
  br i1 %cmp3, label %land.lhs.true4, label %if.end9, !dbg !7880

land.lhs.true4:                                   ; preds = %if.end
  %12 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !7881
  %fbdefio = getelementptr inbounds %struct.fb_info, %struct.fb_info* %12, i32 0, i32 19, !dbg !7882
  %13 = load %struct.fb_deferred_io*, %struct.fb_deferred_io** %fbdefio, align 8, !dbg !7882
  %tobool5 = icmp ne %struct.fb_deferred_io* %13, null, !dbg !7883
  br i1 %tobool5, label %if.then6, label %if.end9, !dbg !7884

if.then6:                                         ; preds = %land.lhs.true4
  %14 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !7885
  call void @fb_deferred_io_cleanup(%struct.fb_info* %14) #11, !dbg !7887
  %15 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !7888
  %fbdefio7 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %15, i32 0, i32 19, !dbg !7889
  %16 = load %struct.fb_deferred_io*, %struct.fb_deferred_io** %fbdefio7, align 8, !dbg !7889
  %17 = bitcast %struct.fb_deferred_io* %16 to i8*, !dbg !7888
  call void @kfree(i8* %17) #11, !dbg !7890
  %18 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !7891
  %fbdefio8 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %18, i32 0, i32 19, !dbg !7892
  store %struct.fb_deferred_io* null, %struct.fb_deferred_io** %fbdefio8, align 8, !dbg !7893
  br label %if.end9, !dbg !7894

if.end9:                                          ; preds = %if.then6, %land.lhs.true4, %if.end
  store i32 0, i32* %tmp, align 4, !dbg !7895
  %19 = load i32, i32* %tmp, align 4, !dbg !7898
  %20 = load %struct.ufx_data*, %struct.ufx_data** %dev, align 8, !dbg !7899
  %kref = getelementptr inbounds %struct.ufx_data, %struct.ufx_data* %20, i32 0, i32 4, !dbg !7900
  %call10 = call i32 @kref_put(%struct.kref* %kref, void (%struct.kref*)* @ufx_free) #11, !dbg !7901
  ret i32 0, !dbg !7902
}

; Function Attrs: noredzone
declare dso_local i64 @fb_sys_read(%struct.fb_info*, i8*, i64, i64*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @ufx_ops_write(%struct.fb_info* %info, i8* %buf, i64 %count, i64* %ppos) #2 !dbg !7903 {
entry:
  %info.addr = alloca %struct.fb_info*, align 8
  %buf.addr = alloca i8*, align 8
  %count.addr = alloca i64, align 8
  %ppos.addr = alloca i64*, align 8
  %result = alloca i64, align 8
  %dev = alloca %struct.ufx_data*, align 8
  %offset = alloca i32, align 4
  %start = alloca i32, align 4
  %__UNIQUE_ID___x254 = alloca i32, align 4
  %__UNIQUE_ID___y255 = alloca i32, align 4
  %tmp = alloca i32, align 4
  %lines = alloca i32, align 4
  %__UNIQUE_ID___x256 = alloca i32, align 4
  %__UNIQUE_ID___y257 = alloca i32, align 4
  %tmp9 = alloca i32, align 4
  store %struct.fb_info* %info, %struct.fb_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fb_info** %info.addr, metadata !7904, metadata !DIExpression()), !dbg !7905
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !7906, metadata !DIExpression()), !dbg !7907
  store i64 %count, i64* %count.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !7908, metadata !DIExpression()), !dbg !7909
  store i64* %ppos, i64** %ppos.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %ppos.addr, metadata !7910, metadata !DIExpression()), !dbg !7911
  call void @llvm.dbg.declare(metadata i64* %result, metadata !7912, metadata !DIExpression()), !dbg !7913
  call void @llvm.dbg.declare(metadata %struct.ufx_data** %dev, metadata !7914, metadata !DIExpression()), !dbg !7915
  %0 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !7916
  %par = getelementptr inbounds %struct.fb_info, %struct.fb_info* %0, i32 0, i32 30, !dbg !7917
  %1 = load i8*, i8** %par, align 8, !dbg !7917
  %2 = bitcast i8* %1 to %struct.ufx_data*, !dbg !7916
  store %struct.ufx_data* %2, %struct.ufx_data** %dev, align 8, !dbg !7915
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !7918, metadata !DIExpression()), !dbg !7919
  %3 = load i64*, i64** %ppos.addr, align 8, !dbg !7920
  %4 = load i64, i64* %3, align 8, !dbg !7921
  %conv = trunc i64 %4 to i32, !dbg !7922
  store i32 %conv, i32* %offset, align 4, !dbg !7919
  %5 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !7923
  %6 = load i8*, i8** %buf.addr, align 8, !dbg !7924
  %7 = load i64, i64* %count.addr, align 8, !dbg !7925
  %8 = load i64*, i64** %ppos.addr, align 8, !dbg !7926
  %call = call i64 @fb_sys_write(%struct.fb_info* %5, i8* %6, i64 %7, i64* %8) #11, !dbg !7927
  store i64 %call, i64* %result, align 8, !dbg !7928
  %9 = load i64, i64* %result, align 8, !dbg !7929
  %cmp = icmp sgt i64 %9, 0, !dbg !7931
  br i1 %cmp, label %if.then, label %if.end, !dbg !7932

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %start, metadata !7933, metadata !DIExpression()), !dbg !7935
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x254, metadata !7936, metadata !DIExpression()), !dbg !7938
  %10 = load i32, i32* %offset, align 4, !dbg !7938
  %11 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !7938
  %fix = getelementptr inbounds %struct.fb_info, %struct.fb_info* %11, i32 0, i32 7, !dbg !7938
  %line_length = getelementptr inbounds %struct.fb_fix_screeninfo, %struct.fb_fix_screeninfo* %fix, i32 0, i32 9, !dbg !7938
  %12 = load i32, i32* %line_length, align 8, !dbg !7938
  %div = udiv i32 %10, %12, !dbg !7938
  store i32 %div, i32* %__UNIQUE_ID___x254, align 4, !dbg !7938
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y255, metadata !7939, metadata !DIExpression()), !dbg !7938
  store i32 0, i32* %__UNIQUE_ID___y255, align 4, !dbg !7938
  %13 = load i32, i32* %__UNIQUE_ID___x254, align 4, !dbg !7938
  %14 = load i32, i32* %__UNIQUE_ID___y255, align 4, !dbg !7938
  %cmp2 = icmp sgt i32 %13, %14, !dbg !7938
  br i1 %cmp2, label %cond.true, label %cond.false, !dbg !7938

cond.true:                                        ; preds = %if.then
  %15 = load i32, i32* %__UNIQUE_ID___x254, align 4, !dbg !7938
  br label %cond.end, !dbg !7938

cond.false:                                       ; preds = %if.then
  %16 = load i32, i32* %__UNIQUE_ID___y255, align 4, !dbg !7938
  br label %cond.end, !dbg !7938

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %15, %cond.true ], [ %16, %cond.false ], !dbg !7938
  store i32 %cond, i32* %tmp, align 4, !dbg !7938
  %17 = load i32, i32* %tmp, align 4, !dbg !7938
  store i32 %17, i32* %start, align 4, !dbg !7935
  call void @llvm.dbg.declare(metadata i32* %lines, metadata !7940, metadata !DIExpression()), !dbg !7941
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x256, metadata !7942, metadata !DIExpression()), !dbg !7944
  %18 = load i64, i64* %result, align 8, !dbg !7944
  %19 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !7944
  %fix4 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %19, i32 0, i32 7, !dbg !7944
  %line_length5 = getelementptr inbounds %struct.fb_fix_screeninfo, %struct.fb_fix_screeninfo* %fix4, i32 0, i32 9, !dbg !7944
  %20 = load i32, i32* %line_length5, align 8, !dbg !7944
  %conv6 = zext i32 %20 to i64, !dbg !7944
  %div7 = sdiv i64 %18, %conv6, !dbg !7944
  %add = add i64 %div7, 1, !dbg !7944
  %conv8 = trunc i64 %add to i32, !dbg !7944
  store i32 %conv8, i32* %__UNIQUE_ID___x256, align 4, !dbg !7944
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y257, metadata !7945, metadata !DIExpression()), !dbg !7944
  %21 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !7944
  %var = getelementptr inbounds %struct.fb_info, %struct.fb_info* %21, i32 0, i32 6, !dbg !7944
  %yres = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %var, i32 0, i32 1, !dbg !7944
  %22 = load i32, i32* %yres, align 4, !dbg !7944
  store i32 %22, i32* %__UNIQUE_ID___y257, align 4, !dbg !7944
  %23 = load i32, i32* %__UNIQUE_ID___x256, align 4, !dbg !7944
  %24 = load i32, i32* %__UNIQUE_ID___y257, align 4, !dbg !7944
  %cmp10 = icmp ult i32 %23, %24, !dbg !7944
  br i1 %cmp10, label %cond.true12, label %cond.false13, !dbg !7944

cond.true12:                                      ; preds = %cond.end
  %25 = load i32, i32* %__UNIQUE_ID___x256, align 4, !dbg !7944
  br label %cond.end14, !dbg !7944

cond.false13:                                     ; preds = %cond.end
  %26 = load i32, i32* %__UNIQUE_ID___y257, align 4, !dbg !7944
  br label %cond.end14, !dbg !7944

cond.end14:                                       ; preds = %cond.false13, %cond.true12
  %cond15 = phi i32 [ %25, %cond.true12 ], [ %26, %cond.false13 ], !dbg !7944
  store i32 %cond15, i32* %tmp9, align 4, !dbg !7944
  %27 = load i32, i32* %tmp9, align 4, !dbg !7944
  store i32 %27, i32* %lines, align 4, !dbg !7941
  %28 = load %struct.ufx_data*, %struct.ufx_data** %dev, align 8, !dbg !7946
  %29 = load i32, i32* %start, align 4, !dbg !7947
  %30 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !7948
  %var16 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %30, i32 0, i32 6, !dbg !7949
  %xres = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %var16, i32 0, i32 0, !dbg !7950
  %31 = load i32, i32* %xres, align 8, !dbg !7950
  %32 = load i32, i32* %lines, align 4, !dbg !7951
  %call17 = call i32 @ufx_handle_damage(%struct.ufx_data* %28, i32 0, i32 %29, i32 %31, i32 %32) #11, !dbg !7952
  br label %if.end, !dbg !7953

if.end:                                           ; preds = %cond.end14, %entry
  %33 = load i64, i64* %result, align 8, !dbg !7954
  ret i64 %33, !dbg !7955
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ufx_ops_setcolreg(i32 %regno, i32 %red, i32 %green, i32 %blue, i32 %transp, %struct.fb_info* %info) #2 !dbg !7956 {
entry:
  %retval = alloca i32, align 4
  %regno.addr = alloca i32, align 4
  %red.addr = alloca i32, align 4
  %green.addr = alloca i32, align 4
  %blue.addr = alloca i32, align 4
  %transp.addr = alloca i32, align 4
  %info.addr = alloca %struct.fb_info*, align 8
  %err = alloca i32, align 4
  store i32 %regno, i32* %regno.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %regno.addr, metadata !7957, metadata !DIExpression()), !dbg !7958
  store i32 %red, i32* %red.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %red.addr, metadata !7959, metadata !DIExpression()), !dbg !7960
  store i32 %green, i32* %green.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %green.addr, metadata !7961, metadata !DIExpression()), !dbg !7962
  store i32 %blue, i32* %blue.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %blue.addr, metadata !7963, metadata !DIExpression()), !dbg !7964
  store i32 %transp, i32* %transp.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %transp.addr, metadata !7965, metadata !DIExpression()), !dbg !7966
  store %struct.fb_info* %info, %struct.fb_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fb_info** %info.addr, metadata !7967, metadata !DIExpression()), !dbg !7968
  call void @llvm.dbg.declare(metadata i32* %err, metadata !7969, metadata !DIExpression()), !dbg !7970
  store i32 0, i32* %err, align 4, !dbg !7970
  %0 = load i32, i32* %regno.addr, align 4, !dbg !7971
  %1 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !7973
  %cmap = getelementptr inbounds %struct.fb_info, %struct.fb_info* %1, i32 0, i32 12, !dbg !7974
  %len = getelementptr inbounds %struct.fb_cmap, %struct.fb_cmap* %cmap, i32 0, i32 1, !dbg !7975
  %2 = load i32, i32* %len, align 4, !dbg !7975
  %cmp = icmp uge i32 %0, %2, !dbg !7976
  br i1 %cmp, label %if.then, label %if.end, !dbg !7977

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !7978
  br label %return, !dbg !7978

if.end:                                           ; preds = %entry
  %3 = load i32, i32* %regno.addr, align 4, !dbg !7979
  %cmp1 = icmp ult i32 %3, 16, !dbg !7981
  br i1 %cmp1, label %if.then2, label %if.end22, !dbg !7982

if.then2:                                         ; preds = %if.end
  %4 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !7983
  %var = getelementptr inbounds %struct.fb_info, %struct.fb_info* %4, i32 0, i32 6, !dbg !7986
  %red3 = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %var, i32 0, i32 8, !dbg !7987
  %offset = getelementptr inbounds %struct.fb_bitfield, %struct.fb_bitfield* %red3, i32 0, i32 0, !dbg !7988
  %5 = load i32, i32* %offset, align 8, !dbg !7988
  %cmp4 = icmp eq i32 %5, 10, !dbg !7989
  br i1 %cmp4, label %if.then5, label %if.else, !dbg !7990

if.then5:                                         ; preds = %if.then2
  %6 = load i32, i32* %red.addr, align 4, !dbg !7991
  %and = and i32 %6, 63488, !dbg !7993
  %shr = lshr i32 %and, 1, !dbg !7994
  %7 = load i32, i32* %green.addr, align 4, !dbg !7995
  %and6 = and i32 %7, 63488, !dbg !7996
  %shr7 = lshr i32 %and6, 6, !dbg !7997
  %or = or i32 %shr, %shr7, !dbg !7998
  %8 = load i32, i32* %blue.addr, align 4, !dbg !7999
  %and8 = and i32 %8, 63488, !dbg !8000
  %shr9 = lshr i32 %and8, 11, !dbg !8001
  %or10 = or i32 %or, %shr9, !dbg !8002
  %9 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !8003
  %pseudo_palette = getelementptr inbounds %struct.fb_info, %struct.fb_info* %9, i32 0, i32 27, !dbg !8004
  %10 = load i8*, i8** %pseudo_palette, align 8, !dbg !8004
  %11 = bitcast i8* %10 to i32*, !dbg !8005
  %12 = load i32, i32* %regno.addr, align 4, !dbg !8006
  %idxprom = zext i32 %12 to i64, !dbg !8007
  %arrayidx = getelementptr i32, i32* %11, i64 %idxprom, !dbg !8007
  store i32 %or10, i32* %arrayidx, align 4, !dbg !8008
  br label %if.end21, !dbg !8009

if.else:                                          ; preds = %if.then2
  %13 = load i32, i32* %red.addr, align 4, !dbg !8010
  %and11 = and i32 %13, 63488, !dbg !8012
  %14 = load i32, i32* %green.addr, align 4, !dbg !8013
  %and12 = and i32 %14, 64512, !dbg !8014
  %shr13 = lshr i32 %and12, 5, !dbg !8015
  %or14 = or i32 %and11, %shr13, !dbg !8016
  %15 = load i32, i32* %blue.addr, align 4, !dbg !8017
  %and15 = and i32 %15, 63488, !dbg !8018
  %shr16 = lshr i32 %and15, 11, !dbg !8019
  %or17 = or i32 %or14, %shr16, !dbg !8020
  %16 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !8021
  %pseudo_palette18 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %16, i32 0, i32 27, !dbg !8022
  %17 = load i8*, i8** %pseudo_palette18, align 8, !dbg !8022
  %18 = bitcast i8* %17 to i32*, !dbg !8023
  %19 = load i32, i32* %regno.addr, align 4, !dbg !8024
  %idxprom19 = zext i32 %19 to i64, !dbg !8025
  %arrayidx20 = getelementptr i32, i32* %18, i64 %idxprom19, !dbg !8025
  store i32 %or17, i32* %arrayidx20, align 4, !dbg !8026
  br label %if.end21

if.end21:                                         ; preds = %if.else, %if.then5
  br label %if.end22, !dbg !8027

if.end22:                                         ; preds = %if.end21, %if.end
  %20 = load i32, i32* %err, align 4, !dbg !8028
  store i32 %20, i32* %retval, align 4, !dbg !8029
  br label %return, !dbg !8029

return:                                           ; preds = %if.end22, %if.then
  %21 = load i32, i32* %retval, align 4, !dbg !8030
  ret i32 %21, !dbg !8030
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ufx_ops_blank(i32 %blank_mode, %struct.fb_info* %info) #2 !dbg !8031 {
entry:
  %blank_mode.addr = alloca i32, align 4
  %info.addr = alloca %struct.fb_info*, align 8
  %dev = alloca %struct.ufx_data*, align 8
  store i32 %blank_mode, i32* %blank_mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %blank_mode.addr, metadata !8032, metadata !DIExpression()), !dbg !8033
  store %struct.fb_info* %info, %struct.fb_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fb_info** %info.addr, metadata !8034, metadata !DIExpression()), !dbg !8035
  call void @llvm.dbg.declare(metadata %struct.ufx_data** %dev, metadata !8036, metadata !DIExpression()), !dbg !8037
  %0 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !8038
  %par = getelementptr inbounds %struct.fb_info, %struct.fb_info* %0, i32 0, i32 30, !dbg !8039
  %1 = load i8*, i8** %par, align 8, !dbg !8039
  %2 = bitcast i8* %1 to %struct.ufx_data*, !dbg !8038
  store %struct.ufx_data* %2, %struct.ufx_data** %dev, align 8, !dbg !8037
  %3 = load %struct.ufx_data*, %struct.ufx_data** %dev, align 8, !dbg !8040
  %4 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !8041
  %var = getelementptr inbounds %struct.fb_info, %struct.fb_info* %4, i32 0, i32 6, !dbg !8042
  %call = call i32 @ufx_set_vid_mode(%struct.ufx_data* %3, %struct.fb_var_screeninfo* %var) #11, !dbg !8043
  ret i32 0, !dbg !8044
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ufx_ops_fillrect(%struct.fb_info* %info, %struct.fb_fillrect* %rect) #2 !dbg !8045 {
entry:
  %info.addr = alloca %struct.fb_info*, align 8
  %rect.addr = alloca %struct.fb_fillrect*, align 8
  %dev = alloca %struct.ufx_data*, align 8
  store %struct.fb_info* %info, %struct.fb_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fb_info** %info.addr, metadata !8046, metadata !DIExpression()), !dbg !8047
  store %struct.fb_fillrect* %rect, %struct.fb_fillrect** %rect.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fb_fillrect** %rect.addr, metadata !8048, metadata !DIExpression()), !dbg !8049
  call void @llvm.dbg.declare(metadata %struct.ufx_data** %dev, metadata !8050, metadata !DIExpression()), !dbg !8051
  %0 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !8052
  %par = getelementptr inbounds %struct.fb_info, %struct.fb_info* %0, i32 0, i32 30, !dbg !8053
  %1 = load i8*, i8** %par, align 8, !dbg !8053
  %2 = bitcast i8* %1 to %struct.ufx_data*, !dbg !8052
  store %struct.ufx_data* %2, %struct.ufx_data** %dev, align 8, !dbg !8051
  %3 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !8054
  %4 = load %struct.fb_fillrect*, %struct.fb_fillrect** %rect.addr, align 8, !dbg !8055
  call void @sys_fillrect(%struct.fb_info* %3, %struct.fb_fillrect* %4) #11, !dbg !8056
  %5 = load %struct.ufx_data*, %struct.ufx_data** %dev, align 8, !dbg !8057
  %6 = load %struct.fb_fillrect*, %struct.fb_fillrect** %rect.addr, align 8, !dbg !8058
  %dx = getelementptr inbounds %struct.fb_fillrect, %struct.fb_fillrect* %6, i32 0, i32 0, !dbg !8059
  %7 = load i32, i32* %dx, align 4, !dbg !8059
  %8 = load %struct.fb_fillrect*, %struct.fb_fillrect** %rect.addr, align 8, !dbg !8060
  %dy = getelementptr inbounds %struct.fb_fillrect, %struct.fb_fillrect* %8, i32 0, i32 1, !dbg !8061
  %9 = load i32, i32* %dy, align 4, !dbg !8061
  %10 = load %struct.fb_fillrect*, %struct.fb_fillrect** %rect.addr, align 8, !dbg !8062
  %width = getelementptr inbounds %struct.fb_fillrect, %struct.fb_fillrect* %10, i32 0, i32 2, !dbg !8063
  %11 = load i32, i32* %width, align 4, !dbg !8063
  %12 = load %struct.fb_fillrect*, %struct.fb_fillrect** %rect.addr, align 8, !dbg !8064
  %height = getelementptr inbounds %struct.fb_fillrect, %struct.fb_fillrect* %12, i32 0, i32 3, !dbg !8065
  %13 = load i32, i32* %height, align 4, !dbg !8065
  %call = call i32 @ufx_handle_damage(%struct.ufx_data* %5, i32 %7, i32 %9, i32 %11, i32 %13) #11, !dbg !8066
  ret void, !dbg !8067
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ufx_ops_copyarea(%struct.fb_info* %info, %struct.fb_copyarea* %area) #2 !dbg !8068 {
entry:
  %info.addr = alloca %struct.fb_info*, align 8
  %area.addr = alloca %struct.fb_copyarea*, align 8
  %dev = alloca %struct.ufx_data*, align 8
  store %struct.fb_info* %info, %struct.fb_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fb_info** %info.addr, metadata !8069, metadata !DIExpression()), !dbg !8070
  store %struct.fb_copyarea* %area, %struct.fb_copyarea** %area.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fb_copyarea** %area.addr, metadata !8071, metadata !DIExpression()), !dbg !8072
  call void @llvm.dbg.declare(metadata %struct.ufx_data** %dev, metadata !8073, metadata !DIExpression()), !dbg !8074
  %0 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !8075
  %par = getelementptr inbounds %struct.fb_info, %struct.fb_info* %0, i32 0, i32 30, !dbg !8076
  %1 = load i8*, i8** %par, align 8, !dbg !8076
  %2 = bitcast i8* %1 to %struct.ufx_data*, !dbg !8075
  store %struct.ufx_data* %2, %struct.ufx_data** %dev, align 8, !dbg !8074
  %3 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !8077
  %4 = load %struct.fb_copyarea*, %struct.fb_copyarea** %area.addr, align 8, !dbg !8078
  call void @sys_copyarea(%struct.fb_info* %3, %struct.fb_copyarea* %4) #11, !dbg !8079
  %5 = load %struct.ufx_data*, %struct.ufx_data** %dev, align 8, !dbg !8080
  %6 = load %struct.fb_copyarea*, %struct.fb_copyarea** %area.addr, align 8, !dbg !8081
  %dx = getelementptr inbounds %struct.fb_copyarea, %struct.fb_copyarea* %6, i32 0, i32 0, !dbg !8082
  %7 = load i32, i32* %dx, align 4, !dbg !8082
  %8 = load %struct.fb_copyarea*, %struct.fb_copyarea** %area.addr, align 8, !dbg !8083
  %dy = getelementptr inbounds %struct.fb_copyarea, %struct.fb_copyarea* %8, i32 0, i32 1, !dbg !8084
  %9 = load i32, i32* %dy, align 4, !dbg !8084
  %10 = load %struct.fb_copyarea*, %struct.fb_copyarea** %area.addr, align 8, !dbg !8085
  %width = getelementptr inbounds %struct.fb_copyarea, %struct.fb_copyarea* %10, i32 0, i32 2, !dbg !8086
  %11 = load i32, i32* %width, align 4, !dbg !8086
  %12 = load %struct.fb_copyarea*, %struct.fb_copyarea** %area.addr, align 8, !dbg !8087
  %height = getelementptr inbounds %struct.fb_copyarea, %struct.fb_copyarea* %12, i32 0, i32 3, !dbg !8088
  %13 = load i32, i32* %height, align 4, !dbg !8088
  %call = call i32 @ufx_handle_damage(%struct.ufx_data* %5, i32 %7, i32 %9, i32 %11, i32 %13) #11, !dbg !8089
  ret void, !dbg !8090
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ufx_ops_imageblit(%struct.fb_info* %info, %struct.fb_image* %image) #2 !dbg !8091 {
entry:
  %info.addr = alloca %struct.fb_info*, align 8
  %image.addr = alloca %struct.fb_image*, align 8
  %dev = alloca %struct.ufx_data*, align 8
  store %struct.fb_info* %info, %struct.fb_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fb_info** %info.addr, metadata !8092, metadata !DIExpression()), !dbg !8093
  store %struct.fb_image* %image, %struct.fb_image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fb_image** %image.addr, metadata !8094, metadata !DIExpression()), !dbg !8095
  call void @llvm.dbg.declare(metadata %struct.ufx_data** %dev, metadata !8096, metadata !DIExpression()), !dbg !8097
  %0 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !8098
  %par = getelementptr inbounds %struct.fb_info, %struct.fb_info* %0, i32 0, i32 30, !dbg !8099
  %1 = load i8*, i8** %par, align 8, !dbg !8099
  %2 = bitcast i8* %1 to %struct.ufx_data*, !dbg !8098
  store %struct.ufx_data* %2, %struct.ufx_data** %dev, align 8, !dbg !8097
  %3 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !8100
  %4 = load %struct.fb_image*, %struct.fb_image** %image.addr, align 8, !dbg !8101
  call void @sys_imageblit(%struct.fb_info* %3, %struct.fb_image* %4) #11, !dbg !8102
  %5 = load %struct.ufx_data*, %struct.ufx_data** %dev, align 8, !dbg !8103
  %6 = load %struct.fb_image*, %struct.fb_image** %image.addr, align 8, !dbg !8104
  %dx = getelementptr inbounds %struct.fb_image, %struct.fb_image* %6, i32 0, i32 0, !dbg !8105
  %7 = load i32, i32* %dx, align 8, !dbg !8105
  %8 = load %struct.fb_image*, %struct.fb_image** %image.addr, align 8, !dbg !8106
  %dy = getelementptr inbounds %struct.fb_image, %struct.fb_image* %8, i32 0, i32 1, !dbg !8107
  %9 = load i32, i32* %dy, align 4, !dbg !8107
  %10 = load %struct.fb_image*, %struct.fb_image** %image.addr, align 8, !dbg !8108
  %width = getelementptr inbounds %struct.fb_image, %struct.fb_image* %10, i32 0, i32 2, !dbg !8109
  %11 = load i32, i32* %width, align 8, !dbg !8109
  %12 = load %struct.fb_image*, %struct.fb_image** %image.addr, align 8, !dbg !8110
  %height = getelementptr inbounds %struct.fb_image, %struct.fb_image* %12, i32 0, i32 3, !dbg !8111
  %13 = load i32, i32* %height, align 4, !dbg !8111
  %call = call i32 @ufx_handle_damage(%struct.ufx_data* %5, i32 %7, i32 %9, i32 %11, i32 %13) #11, !dbg !8112
  ret void, !dbg !8113
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ufx_ops_ioctl(%struct.fb_info* %info, i32 %cmd, i64 %arg) #2 !dbg !8114 {
entry:
  %retval.i.i = alloca i1, align 1
  %addr.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i, metadata !8115, metadata !DIExpression()), !dbg !8120
  %bytes.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i, metadata !8131, metadata !DIExpression()), !dbg !8132
  %is_source.addr.i.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i, metadata !8133, metadata !DIExpression()), !dbg !8134
  %sz.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i, metadata !8135, metadata !DIExpression()), !dbg !8136
  %__ret_warn_on.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i, metadata !8137, metadata !DIExpression()), !dbg !8140
  %tmp.i.i = alloca i64, align 8
  %to.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i, metadata !8141, metadata !DIExpression()), !dbg !8142
  %from.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i, metadata !8143, metadata !DIExpression()), !dbg !8144
  %n.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i, metadata !8145, metadata !DIExpression()), !dbg !8146
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !8147, metadata !DIExpression()), !dbg !8153
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !8158, metadata !DIExpression()), !dbg !8160
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !8162, metadata !DIExpression()), !dbg !8163
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !8164, metadata !DIExpression()), !dbg !8165
  %retval = alloca i32, align 4
  %info.addr = alloca %struct.fb_info*, align 8
  %cmd.addr = alloca i32, align 4
  %arg.addr = alloca i64, align 8
  %dev = alloca %struct.ufx_data*, align 8
  %area = alloca %struct.dloarea*, align 8
  %edid = alloca i8*, align 8
  store %struct.fb_info* %info, %struct.fb_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fb_info** %info.addr, metadata !8166, metadata !DIExpression()), !dbg !8167
  store i32 %cmd, i32* %cmd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cmd.addr, metadata !8168, metadata !DIExpression()), !dbg !8169
  store i64 %arg, i64* %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %arg.addr, metadata !8170, metadata !DIExpression()), !dbg !8171
  call void @llvm.dbg.declare(metadata %struct.ufx_data** %dev, metadata !8172, metadata !DIExpression()), !dbg !8173
  %0 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !8174
  %par = getelementptr inbounds %struct.fb_info, %struct.fb_info* %0, i32 0, i32 30, !dbg !8175
  %1 = load i8*, i8** %par, align 8, !dbg !8175
  %2 = bitcast i8* %1 to %struct.ufx_data*, !dbg !8174
  store %struct.ufx_data* %2, %struct.ufx_data** %dev, align 8, !dbg !8173
  call void @llvm.dbg.declare(metadata %struct.dloarea** %area, metadata !8176, metadata !DIExpression()), !dbg !8177
  store %struct.dloarea* null, %struct.dloarea** %area, align 8, !dbg !8177
  %3 = load %struct.ufx_data*, %struct.ufx_data** %dev, align 8, !dbg !8178
  %usb_active = getelementptr inbounds %struct.ufx_data, %struct.ufx_data* %3, i32 0, i32 8, !dbg !8179
  store %struct.atomic_t* %usb_active, %struct.atomic_t** %v.addr.i, align 8
  %4 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !8180
  %5 = bitcast %struct.atomic_t* %4 to i8*, !dbg !8180
  store i8* %5, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %6 = load i8*, i8** %v.addr.i.i, align 8, !dbg !8181
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !8182
  %conv.i.i = trunc i64 %7 to i32, !dbg !8182
  %call.i.i = call zeroext i1 @kasan_check_read(i8* %6, i32 %conv.i.i) #13, !dbg !8183
  %8 = load i8*, i8** %v.addr.i.i, align 8, !dbg !8184
  %9 = load i64, i64* %size.addr.i.i, align 8, !dbg !8184
  call void @kcsan_check_access(i8* %8, i64 %9, i32 4) #13, !dbg !8184
  %10 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !8185
  store %struct.atomic_t* %10, %struct.atomic_t** %v.addr.i1.i, align 8
  %11 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !8186
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %11, i32 0, i32 0, !dbg !8186
  %12 = load volatile i32, i32* %counter.i.i, align 4, !dbg !8186
  %tobool = icmp ne i32 %12, 0, !dbg !8187
  br i1 %tobool, label %if.end, label %if.then, !dbg !8188

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !8189
  br label %return, !dbg !8189

if.end:                                           ; preds = %entry
  %13 = load i32, i32* %cmd.addr, align 4, !dbg !8190
  %cmp = icmp eq i32 %13, 173, !dbg !8191
  br i1 %cmp, label %if.then1, label %if.end7, !dbg !8192

if.then1:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8** %edid, metadata !8193, metadata !DIExpression()), !dbg !8194
  %14 = load i64, i64* %arg.addr, align 8, !dbg !8195
  %15 = inttoptr i64 %14 to i8*, !dbg !8196
  store i8* %15, i8** %edid, align 8, !dbg !8194
  %16 = load i8*, i8** %edid, align 8, !dbg !8197
  %17 = load %struct.ufx_data*, %struct.ufx_data** %dev, align 8, !dbg !8198
  %edid2 = getelementptr inbounds %struct.ufx_data, %struct.ufx_data* %17, i32 0, i32 10, !dbg !8199
  %18 = load i8*, i8** %edid2, align 8, !dbg !8199
  %19 = load %struct.ufx_data*, %struct.ufx_data** %dev, align 8, !dbg !8200
  %edid_size = getelementptr inbounds %struct.ufx_data, %struct.ufx_data* %19, i32 0, i32 11, !dbg !8201
  %20 = load i64, i64* %edid_size, align 8, !dbg !8201
  store i8* %16, i8** %to.addr.i, align 8
  store i8* %18, i8** %from.addr.i, align 8
  store i64 %20, i64* %n.addr.i, align 8
  %21 = load i8*, i8** %from.addr.i, align 8, !dbg !8202
  %22 = load i64, i64* %n.addr.i, align 8, !dbg !8202
  store i8* %21, i8** %addr.addr.i.i, align 8
  store i64 %22, i64* %bytes.addr.i.i, align 8
  store i8 1, i8* %is_source.addr.i.i, align 1
  store i32 -1, i32* %sz.i.i, align 4, !dbg !8136
  %23 = load i32, i32* %sz.i.i, align 4, !dbg !8203
  %cmp.i.i = icmp sge i32 %23, 0, !dbg !8203
  br i1 %cmp.i.i, label %land.rhs.i.i, label %land.end.i.i, !dbg !8203

land.rhs.i.i:                                     ; preds = %if.then1
  %24 = load i32, i32* %sz.i.i, align 4, !dbg !8203
  %conv.i.i41 = sext i32 %24 to i64, !dbg !8203
  %25 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !8203
  %cmp1.i.i = icmp ult i64 %conv.i.i41, %25, !dbg !8203
  br label %land.end.i.i

land.end.i.i:                                     ; preds = %land.rhs.i.i, %if.then1
  %26 = phi i1 [ false, %if.then1 ], [ %cmp1.i.i, %land.rhs.i.i ], !dbg !8205
  %lnot.i.i = xor i1 %26, true, !dbg !8203
  %lnot.ext.i.i = zext i1 %26 to i32, !dbg !8203
  %conv4.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !8203
  br i1 %26, label %if.then.i.i, label %if.end10.i.i, !dbg !8206

if.then.i.i:                                      ; preds = %land.end.i.i
  %27 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !8207
  %28 = call i1 @llvm.is.constant.i64(i64 %27) #10, !dbg !8210
  br i1 %28, label %if.else.i.i, label %if.then5.i.i, !dbg !8211

if.then5.i.i:                                     ; preds = %if.then.i.i
  %29 = load i32, i32* %sz.i.i, align 4, !dbg !8212
  %30 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !8213
  call void @copy_overflow(i32 %29, i64 %30) #13, !dbg !8214
  br label %if.end9.i.i, !dbg !8214

if.else.i.i:                                      ; preds = %if.then.i.i
  %31 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !8215
  %tobool6.i.i = trunc i8 %31 to i1, !dbg !8215
  br i1 %tobool6.i.i, label %if.then7.i.i, label %if.else8.i.i, !dbg !8217

if.then7.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_from() #13, !dbg !8218
  br label %if.end.i.i, !dbg !8218

if.else8.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_to() #13, !dbg !8219
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.else8.i.i, %if.then7.i.i
  br label %if.end9.i.i

if.end9.i.i:                                      ; preds = %if.end.i.i, %if.then5.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !8220
  br label %check_copy_size.exit.i, !dbg !8220

if.end10.i.i:                                     ; preds = %land.end.i.i
  %32 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !8140
  %cmp11.i.i = icmp ugt i64 %32, 2147483647, !dbg !8140
  %lnot13.i.i = xor i1 %cmp11.i.i, true, !dbg !8140
  %lnot.ext16.i.i = zext i1 %cmp11.i.i to i32, !dbg !8140
  store i32 %lnot.ext16.i.i, i32* %__ret_warn_on.i.i, align 4, !dbg !8140
  %33 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !8221
  %tobool17.i.i = icmp ne i32 %33, 0, !dbg !8221
  %lnot18.i.i = xor i1 %tobool17.i.i, true, !dbg !8221
  %lnot.ext21.i.i = zext i1 %tobool17.i.i to i32, !dbg !8221
  %conv22.i.i = sext i32 %lnot.ext21.i.i to i64, !dbg !8221
  br i1 %tobool17.i.i, label %if.then24.i.i, label %if.end31.i.i, !dbg !8140

if.then24.i.i:                                    ; preds = %if.end10.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.67, i64 0, i64 0), i32 150, i32 2307, i64 12) #10, !dbg !8223, !srcloc !8226
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 39) #10, !dbg !8227, !srcloc !8229
  br label %if.end31.i.i, !dbg !8230

if.end31.i.i:                                     ; preds = %if.then24.i.i, %if.end10.i.i
  %34 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !8140
  %tobool32.i.i = icmp ne i32 %34, 0, !dbg !8140
  %lnot33.i.i = xor i1 %tobool32.i.i, true, !dbg !8140
  %lnot.ext36.i.i = zext i1 %tobool32.i.i to i32, !dbg !8140
  %conv37.i.i = sext i32 %lnot.ext36.i.i to i64, !dbg !8140
  store i64 %conv37.i.i, i64* %tmp.i.i, align 8, !dbg !8221
  %35 = load i64, i64* %tmp.i.i, align 8, !dbg !8140
  %tobool38.i.i = icmp ne i64 %35, 0, !dbg !8231
  br i1 %tobool38.i.i, label %if.then39.i.i, label %if.end40.i.i, !dbg !8232

if.then39.i.i:                                    ; preds = %if.end31.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !8233
  br label %check_copy_size.exit.i, !dbg !8233

if.end40.i.i:                                     ; preds = %if.end31.i.i
  %36 = load i8*, i8** %addr.addr.i.i, align 8, !dbg !8234
  %37 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !8235
  %38 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !8236
  %tobool41.i.i = trunc i8 %38 to i1, !dbg !8236
  call void @check_object_size(i8* %36, i64 %37, i1 zeroext %tobool41.i.i) #13, !dbg !8237
  store i1 true, i1* %retval.i.i, align 1, !dbg !8238
  br label %check_copy_size.exit.i, !dbg !8238

check_copy_size.exit.i:                           ; preds = %if.end40.i.i, %if.then39.i.i, %if.end9.i.i
  %39 = load i1, i1* %retval.i.i, align 1, !dbg !8239
  %lnot.i = xor i1 %39, true, !dbg !8202
  %lnot.ext.i = zext i1 %39 to i32, !dbg !8202
  %conv.i = sext i32 %lnot.ext.i to i64, !dbg !8202
  br i1 %39, label %if.then.i, label %copy_to_user.exit, !dbg !8240

if.then.i:                                        ; preds = %check_copy_size.exit.i
  %40 = load i8*, i8** %to.addr.i, align 8, !dbg !8241
  %41 = load i8*, i8** %from.addr.i, align 8, !dbg !8242
  %42 = load i64, i64* %n.addr.i, align 8, !dbg !8243
  %call2.i = call i64 @_copy_to_user(i8* %40, i8* %41, i64 %42) #13, !dbg !8244
  store i64 %call2.i, i64* %n.addr.i, align 8, !dbg !8245
  br label %copy_to_user.exit, !dbg !8246

copy_to_user.exit:                                ; preds = %check_copy_size.exit.i, %if.then.i
  %43 = load i64, i64* %n.addr.i, align 8, !dbg !8247
  %tobool4 = icmp ne i64 %43, 0, !dbg !8248
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !8249

if.then5:                                         ; preds = %copy_to_user.exit
  store i32 -14, i32* %retval, align 4, !dbg !8250
  br label %return, !dbg !8250

if.end6:                                          ; preds = %copy_to_user.exit
  store i32 0, i32* %retval, align 4, !dbg !8251
  br label %return, !dbg !8251

if.end7:                                          ; preds = %if.end
  %44 = load i32, i32* %cmd.addr, align 4, !dbg !8252
  %cmp8 = icmp eq i32 %44, 170, !dbg !8254
  br i1 %cmp8, label %if.then9, label %if.end40, !dbg !8255

if.then9:                                         ; preds = %if.end7
  %45 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !8256
  %fbdefio = getelementptr inbounds %struct.fb_info, %struct.fb_info* %45, i32 0, i32 19, !dbg !8259
  %46 = load %struct.fb_deferred_io*, %struct.fb_deferred_io** %fbdefio, align 8, !dbg !8259
  %tobool10 = icmp ne %struct.fb_deferred_io* %46, null, !dbg !8256
  br i1 %tobool10, label %if.then11, label %if.end13, !dbg !8260

if.then11:                                        ; preds = %if.then9
  %47 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !8261
  %fbdefio12 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %47, i32 0, i32 19, !dbg !8262
  %48 = load %struct.fb_deferred_io*, %struct.fb_deferred_io** %fbdefio12, align 8, !dbg !8262
  %delay = getelementptr inbounds %struct.fb_deferred_io, %struct.fb_deferred_io* %48, i32 0, i32 0, !dbg !8263
  store i64 15000, i64* %delay, align 8, !dbg !8264
  br label %if.end13, !dbg !8261

if.end13:                                         ; preds = %if.then11, %if.then9
  %49 = load i64, i64* %arg.addr, align 8, !dbg !8265
  %50 = inttoptr i64 %49 to %struct.dloarea*, !dbg !8266
  store %struct.dloarea* %50, %struct.dloarea** %area, align 8, !dbg !8267
  %51 = load %struct.dloarea*, %struct.dloarea** %area, align 8, !dbg !8268
  %x = getelementptr inbounds %struct.dloarea, %struct.dloarea* %51, i32 0, i32 0, !dbg !8270
  %52 = load i32, i32* %x, align 4, !dbg !8270
  %cmp14 = icmp slt i32 %52, 0, !dbg !8271
  br i1 %cmp14, label %if.then15, label %if.end17, !dbg !8272

if.then15:                                        ; preds = %if.end13
  %53 = load %struct.dloarea*, %struct.dloarea** %area, align 8, !dbg !8273
  %x16 = getelementptr inbounds %struct.dloarea, %struct.dloarea* %53, i32 0, i32 0, !dbg !8274
  store i32 0, i32* %x16, align 4, !dbg !8275
  br label %if.end17, !dbg !8273

if.end17:                                         ; preds = %if.then15, %if.end13
  %54 = load %struct.dloarea*, %struct.dloarea** %area, align 8, !dbg !8276
  %x18 = getelementptr inbounds %struct.dloarea, %struct.dloarea* %54, i32 0, i32 0, !dbg !8278
  %55 = load i32, i32* %x18, align 4, !dbg !8278
  %56 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !8279
  %var = getelementptr inbounds %struct.fb_info, %struct.fb_info* %56, i32 0, i32 6, !dbg !8280
  %xres = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %var, i32 0, i32 0, !dbg !8281
  %57 = load i32, i32* %xres, align 8, !dbg !8281
  %cmp19 = icmp ugt i32 %55, %57, !dbg !8282
  br i1 %cmp19, label %if.then20, label %if.end24, !dbg !8283

if.then20:                                        ; preds = %if.end17
  %58 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !8284
  %var21 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %58, i32 0, i32 6, !dbg !8285
  %xres22 = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %var21, i32 0, i32 0, !dbg !8286
  %59 = load i32, i32* %xres22, align 8, !dbg !8286
  %60 = load %struct.dloarea*, %struct.dloarea** %area, align 8, !dbg !8287
  %x23 = getelementptr inbounds %struct.dloarea, %struct.dloarea* %60, i32 0, i32 0, !dbg !8288
  store i32 %59, i32* %x23, align 4, !dbg !8289
  br label %if.end24, !dbg !8287

if.end24:                                         ; preds = %if.then20, %if.end17
  %61 = load %struct.dloarea*, %struct.dloarea** %area, align 8, !dbg !8290
  %y = getelementptr inbounds %struct.dloarea, %struct.dloarea* %61, i32 0, i32 1, !dbg !8292
  %62 = load i32, i32* %y, align 4, !dbg !8292
  %cmp25 = icmp slt i32 %62, 0, !dbg !8293
  br i1 %cmp25, label %if.then26, label %if.end28, !dbg !8294

if.then26:                                        ; preds = %if.end24
  %63 = load %struct.dloarea*, %struct.dloarea** %area, align 8, !dbg !8295
  %y27 = getelementptr inbounds %struct.dloarea, %struct.dloarea* %63, i32 0, i32 1, !dbg !8296
  store i32 0, i32* %y27, align 4, !dbg !8297
  br label %if.end28, !dbg !8295

if.end28:                                         ; preds = %if.then26, %if.end24
  %64 = load %struct.dloarea*, %struct.dloarea** %area, align 8, !dbg !8298
  %y29 = getelementptr inbounds %struct.dloarea, %struct.dloarea* %64, i32 0, i32 1, !dbg !8300
  %65 = load i32, i32* %y29, align 4, !dbg !8300
  %66 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !8301
  %var30 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %66, i32 0, i32 6, !dbg !8302
  %yres = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %var30, i32 0, i32 1, !dbg !8303
  %67 = load i32, i32* %yres, align 4, !dbg !8303
  %cmp31 = icmp ugt i32 %65, %67, !dbg !8304
  br i1 %cmp31, label %if.then32, label %if.end36, !dbg !8305

if.then32:                                        ; preds = %if.end28
  %68 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !8306
  %var33 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %68, i32 0, i32 6, !dbg !8307
  %yres34 = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %var33, i32 0, i32 1, !dbg !8308
  %69 = load i32, i32* %yres34, align 4, !dbg !8308
  %70 = load %struct.dloarea*, %struct.dloarea** %area, align 8, !dbg !8309
  %y35 = getelementptr inbounds %struct.dloarea, %struct.dloarea* %70, i32 0, i32 1, !dbg !8310
  store i32 %69, i32* %y35, align 4, !dbg !8311
  br label %if.end36, !dbg !8309

if.end36:                                         ; preds = %if.then32, %if.end28
  %71 = load %struct.ufx_data*, %struct.ufx_data** %dev, align 8, !dbg !8312
  %72 = load %struct.dloarea*, %struct.dloarea** %area, align 8, !dbg !8313
  %x37 = getelementptr inbounds %struct.dloarea, %struct.dloarea* %72, i32 0, i32 0, !dbg !8314
  %73 = load i32, i32* %x37, align 4, !dbg !8314
  %74 = load %struct.dloarea*, %struct.dloarea** %area, align 8, !dbg !8315
  %y38 = getelementptr inbounds %struct.dloarea, %struct.dloarea* %74, i32 0, i32 1, !dbg !8316
  %75 = load i32, i32* %y38, align 4, !dbg !8316
  %76 = load %struct.dloarea*, %struct.dloarea** %area, align 8, !dbg !8317
  %w = getelementptr inbounds %struct.dloarea, %struct.dloarea* %76, i32 0, i32 2, !dbg !8318
  %77 = load i32, i32* %w, align 4, !dbg !8318
  %78 = load %struct.dloarea*, %struct.dloarea** %area, align 8, !dbg !8319
  %h = getelementptr inbounds %struct.dloarea, %struct.dloarea* %78, i32 0, i32 3, !dbg !8320
  %79 = load i32, i32* %h, align 4, !dbg !8320
  %call39 = call i32 @ufx_handle_damage(%struct.ufx_data* %71, i32 %73, i32 %75, i32 %77, i32 %79) #11, !dbg !8321
  br label %if.end40, !dbg !8322

if.end40:                                         ; preds = %if.end36, %if.end7
  store i32 0, i32* %retval, align 4, !dbg !8323
  br label %return, !dbg !8323

return:                                           ; preds = %if.end40, %if.end6, %if.then5, %if.then
  %80 = load i32, i32* %retval, align 4, !dbg !8324
  ret i32 %80, !dbg !8324
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ufx_ops_mmap(%struct.fb_info* %info, %struct.vm_area_struct* %vma) #2 !dbg !8325 {
entry:
  %retval = alloca i32, align 4
  %info.addr = alloca %struct.fb_info*, align 8
  %vma.addr = alloca %struct.vm_area_struct*, align 8
  %start = alloca i64, align 8
  %size = alloca i64, align 8
  %offset = alloca i64, align 8
  %page = alloca i64, align 8
  %pos = alloca i64, align 8
  %tmp = alloca i32, align 4
  %.compoundliteral = alloca %struct.pgprot, align 8
  store %struct.fb_info* %info, %struct.fb_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fb_info** %info.addr, metadata !8326, metadata !DIExpression()), !dbg !8327
  store %struct.vm_area_struct* %vma, %struct.vm_area_struct** %vma.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vm_area_struct** %vma.addr, metadata !8328, metadata !DIExpression()), !dbg !8329
  call void @llvm.dbg.declare(metadata i64* %start, metadata !8330, metadata !DIExpression()), !dbg !8331
  %0 = load %struct.vm_area_struct*, %struct.vm_area_struct** %vma.addr, align 8, !dbg !8332
  %vm_start = getelementptr inbounds %struct.vm_area_struct, %struct.vm_area_struct* %0, i32 0, i32 0, !dbg !8333
  %1 = load i64, i64* %vm_start, align 8, !dbg !8333
  store i64 %1, i64* %start, align 8, !dbg !8331
  call void @llvm.dbg.declare(metadata i64* %size, metadata !8334, metadata !DIExpression()), !dbg !8335
  %2 = load %struct.vm_area_struct*, %struct.vm_area_struct** %vma.addr, align 8, !dbg !8336
  %vm_end = getelementptr inbounds %struct.vm_area_struct, %struct.vm_area_struct* %2, i32 0, i32 1, !dbg !8337
  %3 = load i64, i64* %vm_end, align 8, !dbg !8337
  %4 = load %struct.vm_area_struct*, %struct.vm_area_struct** %vma.addr, align 8, !dbg !8338
  %vm_start1 = getelementptr inbounds %struct.vm_area_struct, %struct.vm_area_struct* %4, i32 0, i32 0, !dbg !8339
  %5 = load i64, i64* %vm_start1, align 8, !dbg !8339
  %sub = sub i64 %3, %5, !dbg !8340
  store i64 %sub, i64* %size, align 8, !dbg !8335
  call void @llvm.dbg.declare(metadata i64* %offset, metadata !8341, metadata !DIExpression()), !dbg !8342
  %6 = load %struct.vm_area_struct*, %struct.vm_area_struct** %vma.addr, align 8, !dbg !8343
  %vm_pgoff = getelementptr inbounds %struct.vm_area_struct, %struct.vm_area_struct* %6, i32 0, i32 13, !dbg !8344
  %7 = load i64, i64* %vm_pgoff, align 8, !dbg !8344
  %shl = shl i64 %7, 12, !dbg !8345
  store i64 %shl, i64* %offset, align 8, !dbg !8342
  call void @llvm.dbg.declare(metadata i64* %page, metadata !8346, metadata !DIExpression()), !dbg !8347
  call void @llvm.dbg.declare(metadata i64* %pos, metadata !8348, metadata !DIExpression()), !dbg !8349
  %8 = load %struct.vm_area_struct*, %struct.vm_area_struct** %vma.addr, align 8, !dbg !8350
  %vm_pgoff2 = getelementptr inbounds %struct.vm_area_struct, %struct.vm_area_struct* %8, i32 0, i32 13, !dbg !8352
  %9 = load i64, i64* %vm_pgoff2, align 8, !dbg !8352
  %cmp = icmp ugt i64 %9, 4503599627370495, !dbg !8353
  br i1 %cmp, label %if.then, label %if.end, !dbg !8354

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !8355
  br label %return, !dbg !8355

if.end:                                           ; preds = %entry
  %10 = load i64, i64* %size, align 8, !dbg !8356
  %11 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !8358
  %fix = getelementptr inbounds %struct.fb_info, %struct.fb_info* %11, i32 0, i32 7, !dbg !8359
  %smem_len = getelementptr inbounds %struct.fb_fix_screeninfo, %struct.fb_fix_screeninfo* %fix, i32 0, i32 2, !dbg !8360
  %12 = load i32, i32* %smem_len, align 8, !dbg !8360
  %conv = zext i32 %12 to i64, !dbg !8358
  %cmp3 = icmp ugt i64 %10, %conv, !dbg !8361
  br i1 %cmp3, label %if.then5, label %if.end6, !dbg !8362

if.then5:                                         ; preds = %if.end
  store i32 -22, i32* %retval, align 4, !dbg !8363
  br label %return, !dbg !8363

if.end6:                                          ; preds = %if.end
  %13 = load i64, i64* %offset, align 8, !dbg !8364
  %14 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !8366
  %fix7 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %14, i32 0, i32 7, !dbg !8367
  %smem_len8 = getelementptr inbounds %struct.fb_fix_screeninfo, %struct.fb_fix_screeninfo* %fix7, i32 0, i32 2, !dbg !8368
  %15 = load i32, i32* %smem_len8, align 8, !dbg !8368
  %conv9 = zext i32 %15 to i64, !dbg !8366
  %16 = load i64, i64* %size, align 8, !dbg !8369
  %sub10 = sub i64 %conv9, %16, !dbg !8370
  %cmp11 = icmp ugt i64 %13, %sub10, !dbg !8371
  br i1 %cmp11, label %if.then13, label %if.end14, !dbg !8372

if.then13:                                        ; preds = %if.end6
  store i32 -22, i32* %retval, align 4, !dbg !8373
  br label %return, !dbg !8373

if.end14:                                         ; preds = %if.end6
  %17 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !8374
  %fix15 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %17, i32 0, i32 7, !dbg !8375
  %smem_start = getelementptr inbounds %struct.fb_fix_screeninfo, %struct.fb_fix_screeninfo* %fix15, i32 0, i32 1, !dbg !8376
  %18 = load i64, i64* %smem_start, align 8, !dbg !8376
  %19 = load i64, i64* %offset, align 8, !dbg !8377
  %add = add i64 %18, %19, !dbg !8378
  store i64 %add, i64* %pos, align 8, !dbg !8379
  store i32 0, i32* %tmp, align 4, !dbg !8380
  %20 = load i32, i32* %tmp, align 4, !dbg !8383
  br label %while.cond, !dbg !8384

while.cond:                                       ; preds = %if.end27, %if.end14
  %21 = load i64, i64* %size, align 8, !dbg !8385
  %cmp16 = icmp ugt i64 %21, 0, !dbg !8386
  br i1 %cmp16, label %while.body, label %while.end, !dbg !8384

while.body:                                       ; preds = %while.cond
  %22 = load i64, i64* %pos, align 8, !dbg !8387
  %23 = inttoptr i64 %22 to i8*, !dbg !8389
  %call = call i64 @vmalloc_to_pfn(i8* %23) #11, !dbg !8390
  store i64 %call, i64* %page, align 8, !dbg !8391
  %24 = load %struct.vm_area_struct*, %struct.vm_area_struct** %vma.addr, align 8, !dbg !8392
  %25 = load i64, i64* %start, align 8, !dbg !8394
  %26 = load i64, i64* %page, align 8, !dbg !8395
  %pgprot = getelementptr inbounds %struct.pgprot, %struct.pgprot* %.compoundliteral, i32 0, i32 0, !dbg !8396
  store i64 -9223372036854775769, i64* %pgprot, align 8, !dbg !8396
  %coerce.dive = getelementptr inbounds %struct.pgprot, %struct.pgprot* %.compoundliteral, i32 0, i32 0, !dbg !8397
  %27 = load i64, i64* %coerce.dive, align 8, !dbg !8397
  %call18 = call i32 @remap_pfn_range(%struct.vm_area_struct* %24, i64 %25, i64 %26, i64 4096, i64 %27) #11, !dbg !8397
  %tobool = icmp ne i32 %call18, 0, !dbg !8397
  br i1 %tobool, label %if.then19, label %if.end20, !dbg !8398

if.then19:                                        ; preds = %while.body
  store i32 -11, i32* %retval, align 4, !dbg !8399
  br label %return, !dbg !8399

if.end20:                                         ; preds = %while.body
  %28 = load i64, i64* %start, align 8, !dbg !8400
  %add21 = add i64 %28, 4096, !dbg !8400
  store i64 %add21, i64* %start, align 8, !dbg !8400
  %29 = load i64, i64* %pos, align 8, !dbg !8401
  %add22 = add i64 %29, 4096, !dbg !8401
  store i64 %add22, i64* %pos, align 8, !dbg !8401
  %30 = load i64, i64* %size, align 8, !dbg !8402
  %cmp23 = icmp ugt i64 %30, 4096, !dbg !8404
  br i1 %cmp23, label %if.then25, label %if.else, !dbg !8405

if.then25:                                        ; preds = %if.end20
  %31 = load i64, i64* %size, align 8, !dbg !8406
  %sub26 = sub i64 %31, 4096, !dbg !8406
  store i64 %sub26, i64* %size, align 8, !dbg !8406
  br label %if.end27, !dbg !8407

if.else:                                          ; preds = %if.end20
  store i64 0, i64* %size, align 8, !dbg !8408
  br label %if.end27

if.end27:                                         ; preds = %if.else, %if.then25
  br label %while.cond, !dbg !8384, !llvm.loop !8409

while.end:                                        ; preds = %while.cond
  store i32 0, i32* %retval, align 4, !dbg !8411
  br label %return, !dbg !8411

return:                                           ; preds = %while.end, %if.then19, %if.then13, %if.then5, %if.then
  %32 = load i32, i32* %retval, align 4, !dbg !8412
  ret i32 %32, !dbg !8412
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ufx_dpy_deferred_io(%struct.fb_info* %info, %struct.list_head* %pagelist) #2 !dbg !8413 {
entry:
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !8147, metadata !DIExpression()), !dbg !8414
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !8158, metadata !DIExpression()), !dbg !8418
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !8162, metadata !DIExpression()), !dbg !8420
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !8164, metadata !DIExpression()), !dbg !8421
  %info.addr = alloca %struct.fb_info*, align 8
  %pagelist.addr = alloca %struct.list_head*, align 8
  %cur = alloca %struct.page*, align 8
  %fbdefio = alloca %struct.fb_deferred_io*, align 8
  %dev = alloca %struct.ufx_data*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.page*, align 8
  %x = alloca i32, align 4
  %width = alloca i32, align 4
  %y = alloca i32, align 4
  %height = alloca i32, align 4
  %__UNIQUE_ID___x260 = alloca i32, align 4
  %__UNIQUE_ID___y261 = alloca i32, align 4
  %tmp15 = alloca i32, align 4
  %__mptr64 = alloca i8*, align 8
  %tmp69 = alloca %struct.page*, align 8
  store %struct.fb_info* %info, %struct.fb_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fb_info** %info.addr, metadata !8422, metadata !DIExpression()), !dbg !8423
  store %struct.list_head* %pagelist, %struct.list_head** %pagelist.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %pagelist.addr, metadata !8424, metadata !DIExpression()), !dbg !8425
  call void @llvm.dbg.declare(metadata %struct.page** %cur, metadata !8426, metadata !DIExpression()), !dbg !8427
  call void @llvm.dbg.declare(metadata %struct.fb_deferred_io** %fbdefio, metadata !8428, metadata !DIExpression()), !dbg !8429
  %0 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !8430
  %fbdefio1 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %0, i32 0, i32 19, !dbg !8431
  %1 = load %struct.fb_deferred_io*, %struct.fb_deferred_io** %fbdefio1, align 8, !dbg !8431
  store %struct.fb_deferred_io* %1, %struct.fb_deferred_io** %fbdefio, align 8, !dbg !8429
  call void @llvm.dbg.declare(metadata %struct.ufx_data** %dev, metadata !8432, metadata !DIExpression()), !dbg !8433
  %2 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !8434
  %par = getelementptr inbounds %struct.fb_info, %struct.fb_info* %2, i32 0, i32 30, !dbg !8435
  %3 = load i8*, i8** %par, align 8, !dbg !8435
  %4 = bitcast i8* %3 to %struct.ufx_data*, !dbg !8434
  store %struct.ufx_data* %4, %struct.ufx_data** %dev, align 8, !dbg !8433
  %5 = load i8, i8* @fb_defio, align 1, !dbg !8436
  %tobool = trunc i8 %5 to i1, !dbg !8436
  br i1 %tobool, label %if.end, label %if.then, !dbg !8438

if.then:                                          ; preds = %entry
  br label %for.end, !dbg !8439

if.end:                                           ; preds = %entry
  %6 = load %struct.ufx_data*, %struct.ufx_data** %dev, align 8, !dbg !8440
  %usb_active = getelementptr inbounds %struct.ufx_data, %struct.ufx_data* %6, i32 0, i32 8, !dbg !8441
  store %struct.atomic_t* %usb_active, %struct.atomic_t** %v.addr.i, align 8
  %7 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !8442
  %8 = bitcast %struct.atomic_t* %7 to i8*, !dbg !8442
  store i8* %8, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %9 = load i8*, i8** %v.addr.i.i, align 8, !dbg !8443
  %10 = load i64, i64* %size.addr.i.i, align 8, !dbg !8444
  %conv.i.i = trunc i64 %10 to i32, !dbg !8444
  %call.i.i = call zeroext i1 @kasan_check_read(i8* %9, i32 %conv.i.i) #13, !dbg !8445
  %11 = load i8*, i8** %v.addr.i.i, align 8, !dbg !8446
  %12 = load i64, i64* %size.addr.i.i, align 8, !dbg !8446
  call void @kcsan_check_access(i8* %11, i64 %12, i32 4) #13, !dbg !8446
  %13 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !8447
  store %struct.atomic_t* %13, %struct.atomic_t** %v.addr.i1.i, align 8
  %14 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !8448
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %14, i32 0, i32 0, !dbg !8448
  %15 = load volatile i32, i32* %counter.i.i, align 4, !dbg !8448
  %tobool2 = icmp ne i32 %15, 0, !dbg !8449
  br i1 %tobool2, label %if.end4, label %if.then3, !dbg !8450

if.then3:                                         ; preds = %if.end
  br label %for.end, !dbg !8451

if.end4:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !8452, metadata !DIExpression()), !dbg !8455
  %16 = load %struct.fb_deferred_io*, %struct.fb_deferred_io** %fbdefio, align 8, !dbg !8455
  %pagelist5 = getelementptr inbounds %struct.fb_deferred_io, %struct.fb_deferred_io* %16, i32 0, i32 2, !dbg !8455
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %pagelist5, i32 0, i32 0, !dbg !8455
  %17 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !8455
  %18 = bitcast %struct.list_head* %17 to i8*, !dbg !8455
  store i8* %18, i8** %__mptr, align 8, !dbg !8455
  br label %do.body, !dbg !8455

do.body:                                          ; preds = %if.end4
  br label %do.end, !dbg !8456

do.end:                                           ; preds = %do.body
  %19 = load i8*, i8** %__mptr, align 8, !dbg !8455
  %add.ptr = getelementptr i8, i8* %19, i64 -8, !dbg !8455
  %20 = bitcast i8* %add.ptr to %struct.page*, !dbg !8455
  store %struct.page* %20, %struct.page** %tmp, align 8, !dbg !8456
  %21 = load %struct.page*, %struct.page** %tmp, align 8, !dbg !8455
  store %struct.page* %21, %struct.page** %cur, align 8, !dbg !8458
  br label %for.cond, !dbg !8458

for.cond:                                         ; preds = %do.end68, %do.end
  %22 = load %struct.page*, %struct.page** %cur, align 8, !dbg !8459
  %23 = getelementptr inbounds %struct.page, %struct.page* %22, i32 0, i32 1, !dbg !8459
  %24 = bitcast %union.anon.1* %23 to %struct.anon.2*, !dbg !8459
  %lru = getelementptr inbounds %struct.anon.2, %struct.anon.2* %24, i32 0, i32 0, !dbg !8459
  %25 = load %struct.fb_deferred_io*, %struct.fb_deferred_io** %fbdefio, align 8, !dbg !8459
  %pagelist6 = getelementptr inbounds %struct.fb_deferred_io, %struct.fb_deferred_io* %25, i32 0, i32 2, !dbg !8459
  %cmp = icmp eq %struct.list_head* %lru, %pagelist6, !dbg !8459
  %lnot = xor i1 %cmp, true, !dbg !8459
  br i1 %lnot, label %for.body, label %for.end, !dbg !8458

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %x, metadata !8461, metadata !DIExpression()), !dbg !8464
  store i32 0, i32* %x, align 4, !dbg !8464
  call void @llvm.dbg.declare(metadata i32* %width, metadata !8465, metadata !DIExpression()), !dbg !8466
  %26 = load %struct.ufx_data*, %struct.ufx_data** %dev, align 8, !dbg !8467
  %info7 = getelementptr inbounds %struct.ufx_data, %struct.ufx_data* %26, i32 0, i32 2, !dbg !8468
  %27 = load %struct.fb_info*, %struct.fb_info** %info7, align 8, !dbg !8468
  %var = getelementptr inbounds %struct.fb_info, %struct.fb_info* %27, i32 0, i32 6, !dbg !8469
  %xres = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %var, i32 0, i32 0, !dbg !8470
  %28 = load i32, i32* %xres, align 8, !dbg !8470
  store i32 %28, i32* %width, align 4, !dbg !8466
  call void @llvm.dbg.declare(metadata i32* %y, metadata !8471, metadata !DIExpression()), !dbg !8472
  %29 = load %struct.page*, %struct.page** %cur, align 8, !dbg !8473
  %30 = getelementptr inbounds %struct.page, %struct.page* %29, i32 0, i32 1, !dbg !8474
  %31 = bitcast %union.anon.1* %30 to %struct.anon.2*, !dbg !8474
  %index = getelementptr inbounds %struct.anon.2, %struct.anon.2* %31, i32 0, i32 2, !dbg !8474
  %32 = load i64, i64* %index, align 8, !dbg !8474
  %shl = shl i64 %32, 12, !dbg !8475
  %33 = load i32, i32* %width, align 4, !dbg !8476
  %mul = mul i32 %33, 2, !dbg !8477
  %conv = sext i32 %mul to i64, !dbg !8478
  %div = udiv i64 %shl, %conv, !dbg !8479
  %conv8 = trunc i64 %div to i32, !dbg !8480
  store i32 %conv8, i32* %y, align 4, !dbg !8472
  call void @llvm.dbg.declare(metadata i32* %height, metadata !8481, metadata !DIExpression()), !dbg !8482
  %34 = load i32, i32* %width, align 4, !dbg !8483
  %mul9 = mul i32 %34, 2, !dbg !8484
  %conv10 = sext i32 %mul9 to i64, !dbg !8485
  %div11 = udiv i64 4096, %conv10, !dbg !8486
  %add = add i64 %div11, 1, !dbg !8487
  %conv12 = trunc i64 %add to i32, !dbg !8488
  store i32 %conv12, i32* %height, align 4, !dbg !8482
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x260, metadata !8489, metadata !DIExpression()), !dbg !8491
  %35 = load i32, i32* %height, align 4, !dbg !8491
  store i32 %35, i32* %__UNIQUE_ID___x260, align 4, !dbg !8491
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y261, metadata !8492, metadata !DIExpression()), !dbg !8491
  %36 = load %struct.ufx_data*, %struct.ufx_data** %dev, align 8, !dbg !8491
  %info13 = getelementptr inbounds %struct.ufx_data, %struct.ufx_data* %36, i32 0, i32 2, !dbg !8491
  %37 = load %struct.fb_info*, %struct.fb_info** %info13, align 8, !dbg !8491
  %var14 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %37, i32 0, i32 6, !dbg !8491
  %yres = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %var14, i32 0, i32 1, !dbg !8491
  %38 = load i32, i32* %yres, align 4, !dbg !8491
  %39 = load i32, i32* %y, align 4, !dbg !8491
  %sub = sub i32 %38, %39, !dbg !8491
  store i32 %sub, i32* %__UNIQUE_ID___y261, align 4, !dbg !8491
  %40 = load i32, i32* %__UNIQUE_ID___x260, align 4, !dbg !8491
  %41 = load i32, i32* %__UNIQUE_ID___y261, align 4, !dbg !8491
  %cmp16 = icmp slt i32 %40, %41, !dbg !8491
  br i1 %cmp16, label %cond.true, label %cond.false, !dbg !8491

cond.true:                                        ; preds = %for.body
  %42 = load i32, i32* %__UNIQUE_ID___x260, align 4, !dbg !8491
  br label %cond.end, !dbg !8491

cond.false:                                       ; preds = %for.body
  %43 = load i32, i32* %__UNIQUE_ID___y261, align 4, !dbg !8491
  br label %cond.end, !dbg !8491

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %42, %cond.true ], [ %43, %cond.false ], !dbg !8491
  store i32 %cond, i32* %tmp15, align 4, !dbg !8491
  %44 = load i32, i32* %tmp15, align 4, !dbg !8491
  store i32 %44, i32* %height, align 4, !dbg !8493
  br label %do.body18, !dbg !8494

do.body18:                                        ; preds = %cond.end
  %45 = load i32, i32* %y, align 4, !dbg !8495
  %46 = load %struct.ufx_data*, %struct.ufx_data** %dev, align 8, !dbg !8495
  %info19 = getelementptr inbounds %struct.ufx_data, %struct.ufx_data* %46, i32 0, i32 2, !dbg !8495
  %47 = load %struct.fb_info*, %struct.fb_info** %info19, align 8, !dbg !8495
  %var20 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %47, i32 0, i32 6, !dbg !8495
  %yres21 = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %var20, i32 0, i32 1, !dbg !8495
  %48 = load i32, i32* %yres21, align 4, !dbg !8495
  %cmp22 = icmp uge i32 %45, %48, !dbg !8495
  %lnot24 = xor i1 %cmp22, true, !dbg !8495
  %lnot25 = xor i1 %lnot24, true, !dbg !8495
  %lnot.ext = zext i1 %lnot25 to i32, !dbg !8495
  %conv26 = sext i32 %lnot.ext to i64, !dbg !8495
  %tobool27 = icmp ne i64 %conv26, 0, !dbg !8495
  br i1 %tobool27, label %if.then28, label %if.end37, !dbg !8498

if.then28:                                        ; preds = %do.body18
  br label %do.body29, !dbg !8495

do.body29:                                        ; preds = %if.then28
  br label %do.body30, !dbg !8499

do.body30:                                        ; preds = %do.body29
  br label %do.end31, !dbg !8501

do.end31:                                         ; preds = %do.body30
  br label %do.body32, !dbg !8499

do.body32:                                        ; preds = %do.end31
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.1, i64 0, i64 0), i32 978, i32 0, i64 12) #10, !dbg !8503, !srcloc !8505
  br label %do.end33, !dbg !8503

do.end33:                                         ; preds = %do.body32
  br label %do.body34, !dbg !8499

do.body34:                                        ; preds = %do.end33
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 262) #10, !dbg !8506, !srcloc !8509
  unreachable, !dbg !8510

do.end35:                                         ; No predecessors!
  br label %do.end36, !dbg !8499

do.end36:                                         ; preds = %do.end35
  br label %if.end37, !dbg !8499

if.end37:                                         ; preds = %do.end36, %do.body18
  br label %do.end38, !dbg !8498

do.end38:                                         ; preds = %if.end37
  br label %do.body39, !dbg !8511

do.body39:                                        ; preds = %do.end38
  %49 = load i32, i32* %y, align 4, !dbg !8512
  %50 = load i32, i32* %height, align 4, !dbg !8512
  %add40 = add i32 %49, %50, !dbg !8512
  %51 = load %struct.ufx_data*, %struct.ufx_data** %dev, align 8, !dbg !8512
  %info41 = getelementptr inbounds %struct.ufx_data, %struct.ufx_data* %51, i32 0, i32 2, !dbg !8512
  %52 = load %struct.fb_info*, %struct.fb_info** %info41, align 8, !dbg !8512
  %var42 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %52, i32 0, i32 6, !dbg !8512
  %yres43 = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %var42, i32 0, i32 1, !dbg !8512
  %53 = load i32, i32* %yres43, align 4, !dbg !8512
  %cmp44 = icmp ugt i32 %add40, %53, !dbg !8512
  %lnot46 = xor i1 %cmp44, true, !dbg !8512
  %lnot48 = xor i1 %lnot46, true, !dbg !8512
  %lnot.ext49 = zext i1 %lnot48 to i32, !dbg !8512
  %conv50 = sext i32 %lnot.ext49 to i64, !dbg !8512
  %tobool51 = icmp ne i64 %conv50, 0, !dbg !8512
  br i1 %tobool51, label %if.then52, label %if.end61, !dbg !8515

if.then52:                                        ; preds = %do.body39
  br label %do.body53, !dbg !8512

do.body53:                                        ; preds = %if.then52
  br label %do.body54, !dbg !8516

do.body54:                                        ; preds = %do.body53
  br label %do.end55, !dbg !8518

do.end55:                                         ; preds = %do.body54
  br label %do.body56, !dbg !8516

do.body56:                                        ; preds = %do.end55
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.1, i64 0, i64 0), i32 979, i32 0, i64 12) #10, !dbg !8520, !srcloc !8522
  br label %do.end57, !dbg !8520

do.end57:                                         ; preds = %do.body56
  br label %do.body58, !dbg !8516

do.body58:                                        ; preds = %do.end57
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 263) #10, !dbg !8523, !srcloc !8526
  unreachable, !dbg !8527

do.end59:                                         ; No predecessors!
  br label %do.end60, !dbg !8516

do.end60:                                         ; preds = %do.end59
  br label %if.end61, !dbg !8516

if.end61:                                         ; preds = %do.end60, %do.body39
  br label %do.end62, !dbg !8515

do.end62:                                         ; preds = %if.end61
  %54 = load %struct.ufx_data*, %struct.ufx_data** %dev, align 8, !dbg !8528
  %55 = load i32, i32* %y, align 4, !dbg !8529
  %56 = load i32, i32* %width, align 4, !dbg !8530
  %57 = load i32, i32* %height, align 4, !dbg !8531
  %call63 = call i32 @ufx_handle_damage(%struct.ufx_data* %54, i32 0, i32 %55, i32 %56, i32 %57) #11, !dbg !8532
  br label %for.inc, !dbg !8533

for.inc:                                          ; preds = %do.end62
  call void @llvm.dbg.declare(metadata i8** %__mptr64, metadata !8534, metadata !DIExpression()), !dbg !8536
  %58 = load %struct.page*, %struct.page** %cur, align 8, !dbg !8536
  %59 = getelementptr inbounds %struct.page, %struct.page* %58, i32 0, i32 1, !dbg !8536
  %60 = bitcast %union.anon.1* %59 to %struct.anon.2*, !dbg !8536
  %lru65 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %60, i32 0, i32 0, !dbg !8536
  %next66 = getelementptr inbounds %struct.list_head, %struct.list_head* %lru65, i32 0, i32 0, !dbg !8536
  %61 = load %struct.list_head*, %struct.list_head** %next66, align 8, !dbg !8536
  %62 = bitcast %struct.list_head* %61 to i8*, !dbg !8536
  store i8* %62, i8** %__mptr64, align 8, !dbg !8536
  br label %do.body67, !dbg !8536

do.body67:                                        ; preds = %for.inc
  br label %do.end68, !dbg !8537

do.end68:                                         ; preds = %do.body67
  %63 = load i8*, i8** %__mptr64, align 8, !dbg !8536
  %add.ptr70 = getelementptr i8, i8* %63, i64 -8, !dbg !8536
  %64 = bitcast i8* %add.ptr70 to %struct.page*, !dbg !8536
  store %struct.page* %64, %struct.page** %tmp69, align 8, !dbg !8537
  %65 = load %struct.page*, %struct.page** %tmp69, align 8, !dbg !8536
  store %struct.page* %65, %struct.page** %cur, align 8, !dbg !8459
  br label %for.cond, !dbg !8459, !llvm.loop !8539

for.end:                                          ; preds = %if.then, %if.then3, %for.cond
  ret void, !dbg !8541
}

; Function Attrs: noredzone
declare dso_local void @fb_deferred_io_init(%struct.fb_info*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ufx_handle_damage(%struct.ufx_data* %dev, i32 %x, i32 %y, i32 %width, i32 %height) #2 !dbg !8542 {
entry:
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !8147, metadata !DIExpression()), !dbg !8545
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !8158, metadata !DIExpression()), !dbg !8549
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !8162, metadata !DIExpression()), !dbg !8551
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !8164, metadata !DIExpression()), !dbg !8552
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.ufx_data*, align 8
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %width.addr = alloca i32, align 4
  %height.addr = alloca i32, align 4
  %packed_line_len = alloca i64, align 8
  %len = alloca i32, align 4
  %status = alloca i32, align 4
  %urb_lines = alloca i32, align 4
  %start_line = alloca i32, align 4
  %urb = alloca %struct.urb*, align 8
  %__UNIQUE_ID___x252 = alloca i32, align 4
  %__UNIQUE_ID___y253 = alloca i32, align 4
  %tmp = alloca i32, align 4
  store %struct.ufx_data* %dev, %struct.ufx_data** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ufx_data** %dev.addr, metadata !8553, metadata !DIExpression()), !dbg !8554
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !8555, metadata !DIExpression()), !dbg !8556
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !8557, metadata !DIExpression()), !dbg !8558
  store i32 %width, i32* %width.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %width.addr, metadata !8559, metadata !DIExpression()), !dbg !8560
  store i32 %height, i32* %height.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %height.addr, metadata !8561, metadata !DIExpression()), !dbg !8562
  call void @llvm.dbg.declare(metadata i64* %packed_line_len, metadata !8563, metadata !DIExpression()), !dbg !8564
  %0 = load i32, i32* %width.addr, align 4, !dbg !8565
  %mul = mul i32 %0, 2, !dbg !8565
  %add = add i32 %mul, 3, !dbg !8565
  %and = and i32 %add, -4, !dbg !8565
  %conv = sext i32 %and to i64, !dbg !8565
  store i64 %conv, i64* %packed_line_len, align 8, !dbg !8564
  call void @llvm.dbg.declare(metadata i32* %len, metadata !8566, metadata !DIExpression()), !dbg !8567
  call void @llvm.dbg.declare(metadata i32* %status, metadata !8568, metadata !DIExpression()), !dbg !8569
  call void @llvm.dbg.declare(metadata i32* %urb_lines, metadata !8570, metadata !DIExpression()), !dbg !8571
  call void @llvm.dbg.declare(metadata i32* %start_line, metadata !8572, metadata !DIExpression()), !dbg !8573
  store i32 0, i32* %start_line, align 4, !dbg !8573
  %1 = load i32, i32* %width.addr, align 4, !dbg !8574
  %cmp = icmp sle i32 %1, 0, !dbg !8576
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !8577

lor.lhs.false:                                    ; preds = %entry
  %2 = load i32, i32* %height.addr, align 4, !dbg !8578
  %cmp2 = icmp sle i32 %2, 0, !dbg !8579
  br i1 %cmp2, label %if.then, label %lor.lhs.false4, !dbg !8580

lor.lhs.false4:                                   ; preds = %lor.lhs.false
  %3 = load i32, i32* %x.addr, align 4, !dbg !8581
  %4 = load i32, i32* %width.addr, align 4, !dbg !8582
  %add5 = add i32 %3, %4, !dbg !8583
  %5 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !8584
  %info = getelementptr inbounds %struct.ufx_data, %struct.ufx_data* %5, i32 0, i32 2, !dbg !8585
  %6 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !8585
  %var = getelementptr inbounds %struct.fb_info, %struct.fb_info* %6, i32 0, i32 6, !dbg !8586
  %xres = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %var, i32 0, i32 0, !dbg !8587
  %7 = load i32, i32* %xres, align 8, !dbg !8587
  %cmp6 = icmp ugt i32 %add5, %7, !dbg !8588
  br i1 %cmp6, label %if.then, label %lor.lhs.false8, !dbg !8589

lor.lhs.false8:                                   ; preds = %lor.lhs.false4
  %8 = load i32, i32* %y.addr, align 4, !dbg !8590
  %9 = load i32, i32* %height.addr, align 4, !dbg !8591
  %add9 = add i32 %8, %9, !dbg !8592
  %10 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !8593
  %info10 = getelementptr inbounds %struct.ufx_data, %struct.ufx_data* %10, i32 0, i32 2, !dbg !8594
  %11 = load %struct.fb_info*, %struct.fb_info** %info10, align 8, !dbg !8594
  %var11 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %11, i32 0, i32 6, !dbg !8595
  %yres = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %var11, i32 0, i32 1, !dbg !8596
  %12 = load i32, i32* %yres, align 4, !dbg !8596
  %cmp12 = icmp ugt i32 %add9, %12, !dbg !8597
  br i1 %cmp12, label %if.then, label %if.end, !dbg !8598

if.then:                                          ; preds = %lor.lhs.false8, %lor.lhs.false4, %lor.lhs.false, %entry
  store i32 -22, i32* %retval, align 4, !dbg !8599
  br label %return, !dbg !8599

if.end:                                           ; preds = %lor.lhs.false8
  %13 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !8600
  %usb_active = getelementptr inbounds %struct.ufx_data, %struct.ufx_data* %13, i32 0, i32 8, !dbg !8601
  store %struct.atomic_t* %usb_active, %struct.atomic_t** %v.addr.i, align 8
  %14 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !8602
  %15 = bitcast %struct.atomic_t* %14 to i8*, !dbg !8602
  store i8* %15, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %16 = load i8*, i8** %v.addr.i.i, align 8, !dbg !8603
  %17 = load i64, i64* %size.addr.i.i, align 8, !dbg !8604
  %conv.i.i = trunc i64 %17 to i32, !dbg !8604
  %call.i.i = call zeroext i1 @kasan_check_read(i8* %16, i32 %conv.i.i) #13, !dbg !8605
  %18 = load i8*, i8** %v.addr.i.i, align 8, !dbg !8606
  %19 = load i64, i64* %size.addr.i.i, align 8, !dbg !8606
  call void @kcsan_check_access(i8* %18, i64 %19, i32 4) #13, !dbg !8606
  %20 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !8607
  store %struct.atomic_t* %20, %struct.atomic_t** %v.addr.i1.i, align 8
  %21 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !8608
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %21, i32 0, i32 0, !dbg !8608
  %22 = load volatile i32, i32* %counter.i.i, align 4, !dbg !8608
  %tobool = icmp ne i32 %22, 0, !dbg !8609
  br i1 %tobool, label %if.end15, label %if.then14, !dbg !8610

if.then14:                                        ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !8611
  br label %return, !dbg !8611

if.end15:                                         ; preds = %if.end
  br label %while.cond, !dbg !8612

while.cond:                                       ; preds = %if.end60, %if.end15
  %23 = load i32, i32* %start_line, align 4, !dbg !8613
  %24 = load i32, i32* %height.addr, align 4, !dbg !8614
  %cmp16 = icmp slt i32 %23, %24, !dbg !8615
  br i1 %cmp16, label %while.body, label %while.end, !dbg !8612

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata %struct.urb** %urb, metadata !8616, metadata !DIExpression()), !dbg !8618
  %25 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !8619
  %call18 = call %struct.urb* @ufx_get_urb(%struct.ufx_data* %25) #11, !dbg !8620
  store %struct.urb* %call18, %struct.urb** %urb, align 8, !dbg !8618
  %26 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !8621
  %tobool19 = icmp ne %struct.urb* %26, null, !dbg !8621
  br i1 %tobool19, label %if.end22, label %if.then20, !dbg !8623

if.then20:                                        ; preds = %while.body
  %call21 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.20, i64 0, i64 0)) #12, !dbg !8624
  store i32 0, i32* %retval, align 4, !dbg !8626
  br label %return, !dbg !8626

if.end22:                                         ; preds = %while.body
  br label %do.body, !dbg !8627

do.body:                                          ; preds = %if.end22
  %27 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !8628
  %transfer_buffer_length = getelementptr inbounds %struct.urb, %struct.urb* %27, i32 0, i32 19, !dbg !8628
  %28 = load i32, i32* %transfer_buffer_length, align 8, !dbg !8628
  %29 = load i32, i32* %width.addr, align 4, !dbg !8628
  %mul23 = mul i32 %29, 2, !dbg !8628
  %add24 = add i32 24, %mul23, !dbg !8628
  %cmp25 = icmp ult i32 %28, %add24, !dbg !8628
  %lnot = xor i1 %cmp25, true, !dbg !8628
  %lnot27 = xor i1 %lnot, true, !dbg !8628
  %lnot.ext = zext i1 %lnot27 to i32, !dbg !8628
  %conv28 = sext i32 %lnot.ext to i64, !dbg !8628
  %tobool29 = icmp ne i64 %conv28, 0, !dbg !8628
  br i1 %tobool29, label %if.then30, label %if.end38, !dbg !8631

if.then30:                                        ; preds = %do.body
  br label %do.body31, !dbg !8628

do.body31:                                        ; preds = %if.then30
  br label %do.body32, !dbg !8632

do.body32:                                        ; preds = %do.body31
  br label %do.end, !dbg !8634

do.end:                                           ; preds = %do.body32
  br label %do.body33, !dbg !8632

do.body33:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.1, i64 0, i64 0), i32 871, i32 0, i64 12) #10, !dbg !8636, !srcloc !8638
  br label %do.end34, !dbg !8636

do.end34:                                         ; preds = %do.body33
  br label %do.body35, !dbg !8632

do.body35:                                        ; preds = %do.end34
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 251) #10, !dbg !8639, !srcloc !8642
  unreachable, !dbg !8643

do.end36:                                         ; No predecessors!
  br label %do.end37, !dbg !8632

do.end37:                                         ; preds = %do.end36
  br label %if.end38, !dbg !8632

if.end38:                                         ; preds = %do.end37, %do.body
  br label %do.end39, !dbg !8631

do.end39:                                         ; preds = %if.end38
  %30 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !8644
  %transfer_buffer_length40 = getelementptr inbounds %struct.urb, %struct.urb* %30, i32 0, i32 19, !dbg !8645
  %31 = load i32, i32* %transfer_buffer_length40, align 8, !dbg !8645
  %sub = sub i32 %31, 24, !dbg !8646
  %conv41 = zext i32 %sub to i64, !dbg !8647
  %32 = load i64, i64* %packed_line_len, align 8, !dbg !8648
  %div = udiv i64 %conv41, %32, !dbg !8649
  %conv42 = trunc i64 %div to i32, !dbg !8647
  store i32 %conv42, i32* %urb_lines, align 4, !dbg !8650
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x252, metadata !8651, metadata !DIExpression()), !dbg !8653
  %33 = load i32, i32* %urb_lines, align 4, !dbg !8653
  store i32 %33, i32* %__UNIQUE_ID___x252, align 4, !dbg !8653
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y253, metadata !8654, metadata !DIExpression()), !dbg !8653
  %34 = load i32, i32* %height.addr, align 4, !dbg !8653
  %35 = load i32, i32* %start_line, align 4, !dbg !8653
  %sub43 = sub i32 %34, %35, !dbg !8653
  store i32 %sub43, i32* %__UNIQUE_ID___y253, align 4, !dbg !8653
  %36 = load i32, i32* %__UNIQUE_ID___x252, align 4, !dbg !8653
  %37 = load i32, i32* %__UNIQUE_ID___y253, align 4, !dbg !8653
  %cmp44 = icmp slt i32 %36, %37, !dbg !8653
  br i1 %cmp44, label %cond.true, label %cond.false, !dbg !8653

cond.true:                                        ; preds = %do.end39
  %38 = load i32, i32* %__UNIQUE_ID___x252, align 4, !dbg !8653
  br label %cond.end, !dbg !8653

cond.false:                                       ; preds = %do.end39
  %39 = load i32, i32* %__UNIQUE_ID___y253, align 4, !dbg !8653
  br label %cond.end, !dbg !8653

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %38, %cond.true ], [ %39, %cond.false ], !dbg !8653
  store i32 %cond, i32* %tmp, align 4, !dbg !8653
  %40 = load i32, i32* %tmp, align 4, !dbg !8653
  store i32 %40, i32* %urb_lines, align 4, !dbg !8655
  %41 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !8656
  %transfer_buffer = getelementptr inbounds %struct.urb, %struct.urb* %41, i32 0, i32 14, !dbg !8657
  %42 = load i8*, i8** %transfer_buffer, align 8, !dbg !8657
  %43 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !8658
  %transfer_buffer_length46 = getelementptr inbounds %struct.urb, %struct.urb* %43, i32 0, i32 19, !dbg !8659
  %44 = load i32, i32* %transfer_buffer_length46, align 8, !dbg !8659
  %conv47 = zext i32 %44 to i64, !dbg !8658
  call void @llvm.memset.p0i8.i64(i8* align 1 %42, i8 0, i64 %conv47, i1 false), !dbg !8660
  %45 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !8661
  %46 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !8662
  %transfer_buffer48 = getelementptr inbounds %struct.urb, %struct.urb* %46, i32 0, i32 14, !dbg !8663
  %47 = load i8*, i8** %transfer_buffer48, align 8, !dbg !8663
  %48 = bitcast i8* %47 to i16*, !dbg !8662
  %49 = load i32, i32* %x.addr, align 4, !dbg !8664
  %50 = load i32, i32* %y.addr, align 4, !dbg !8665
  %51 = load i32, i32* %start_line, align 4, !dbg !8666
  %add49 = add i32 %50, %51, !dbg !8667
  %52 = load i32, i32* %width.addr, align 4, !dbg !8668
  %53 = load i32, i32* %urb_lines, align 4, !dbg !8669
  call void @ufx_raw_rect(%struct.ufx_data* %45, i16* %48, i32 %49, i32 %add49, i32 %52, i32 %53) #11, !dbg !8670
  %54 = load i64, i64* %packed_line_len, align 8, !dbg !8671
  %55 = load i32, i32* %urb_lines, align 4, !dbg !8672
  %conv50 = sext i32 %55 to i64, !dbg !8672
  %mul51 = mul i64 %54, %conv50, !dbg !8673
  %add52 = add i64 24, %mul51, !dbg !8674
  %conv53 = trunc i64 %add52 to i32, !dbg !8675
  store i32 %conv53, i32* %len, align 4, !dbg !8676
  %56 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !8677
  %57 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !8678
  %58 = load i32, i32* %len, align 4, !dbg !8679
  %conv54 = sext i32 %58 to i64, !dbg !8679
  %call55 = call i32 @ufx_submit_urb(%struct.ufx_data* %56, %struct.urb* %57, i64 %conv54) #11, !dbg !8680
  store i32 %call55, i32* %status, align 4, !dbg !8681
  %59 = load i32, i32* %status, align 4, !dbg !8682
  %cmp56 = icmp slt i32 %59, 0, !dbg !8682
  br i1 %cmp56, label %if.then58, label %if.end60, !dbg !8685

if.then58:                                        ; preds = %cond.end
  %call59 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.21, i64 0, i64 0)) #12, !dbg !8686
  %60 = load i32, i32* %status, align 4, !dbg !8686
  store i32 %60, i32* %retval, align 4, !dbg !8686
  br label %return, !dbg !8686

if.end60:                                         ; preds = %cond.end
  %61 = load i32, i32* %urb_lines, align 4, !dbg !8688
  %62 = load i32, i32* %start_line, align 4, !dbg !8689
  %add61 = add i32 %62, %61, !dbg !8689
  store i32 %add61, i32* %start_line, align 4, !dbg !8689
  br label %while.cond, !dbg !8612, !llvm.loop !8690

while.end:                                        ; preds = %while.cond
  store i32 0, i32* %retval, align 4, !dbg !8692
  br label %return, !dbg !8692

return:                                           ; preds = %while.end, %if.then58, %if.then20, %if.then14, %if.then
  %63 = load i32, i32* %retval, align 4, !dbg !8693
  ret i32 %63, !dbg !8693
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @kasan_check_read(i8* %p, i32 %size) #2 !dbg !8694 {
entry:
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !8695, metadata !DIExpression()), !dbg !8696
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !8697, metadata !DIExpression()), !dbg !8698
  ret i1 true, !dbg !8699
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.urb* @ufx_get_urb(%struct.ufx_data* %dev) #2 !dbg !8700 {
entry:
  %lock.addr.i52 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i52, metadata !7502, metadata !DIExpression()), !dbg !8703
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !7508, metadata !DIExpression()), !dbg !8705
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5700, metadata !DIExpression()), !dbg !8706
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !5046, metadata !DIExpression()), !dbg !8713
  %i.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i.i, metadata !5057, metadata !DIExpression()), !dbg !8718
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !5059, metadata !DIExpression()), !dbg !8719
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !5069, metadata !DIExpression()), !dbg !8721
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !5071, metadata !DIExpression()), !dbg !8722
  %i.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i, metadata !5073, metadata !DIExpression()), !dbg !8723
  %dev.addr = alloca %struct.ufx_data*, align 8
  %ret = alloca i32, align 4
  %entry1 = alloca %struct.list_head*, align 8
  %unode = alloca %struct.urb_node*, align 8
  %urb = alloca %struct.urb*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy8 = alloca i64, align 8
  %__dummy29 = alloca i64, align 8
  %tmp12 = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp50 = alloca %struct.urb_node*, align 8
  store %struct.ufx_data* %dev, %struct.ufx_data** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ufx_data** %dev.addr, metadata !8724, metadata !DIExpression()), !dbg !8725
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8726, metadata !DIExpression()), !dbg !8727
  store i32 0, i32* %ret, align 4, !dbg !8727
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry1, metadata !8728, metadata !DIExpression()), !dbg !8729
  call void @llvm.dbg.declare(metadata %struct.urb_node** %unode, metadata !8730, metadata !DIExpression()), !dbg !8731
  call void @llvm.dbg.declare(metadata %struct.urb** %urb, metadata !8732, metadata !DIExpression()), !dbg !8733
  store %struct.urb* null, %struct.urb** %urb, align 8, !dbg !8733
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !8734, metadata !DIExpression()), !dbg !8735
  %0 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !8736
  %urbs = getelementptr inbounds %struct.ufx_data, %struct.ufx_data* %0, i32 0, i32 3, !dbg !8737
  %limit_sem = getelementptr inbounds %struct.urb_list, %struct.urb_list* %urbs, i32 0, i32 2, !dbg !8738
  %call = call i32 @down_timeout(%struct.semaphore* %limit_sem, i64 250) #11, !dbg !8739
  store i32 %call, i32* %ret, align 4, !dbg !8740
  %1 = load i32, i32* %ret, align 4, !dbg !8741
  %tobool = icmp ne i32 %1, 0, !dbg !8741
  br i1 %tobool, label %if.then, label %if.end, !dbg !8742

if.then:                                          ; preds = %entry
  %2 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !8743
  %lost_pixels = getelementptr inbounds %struct.ufx_data, %struct.ufx_data* %2, i32 0, i32 9, !dbg !8744
  store %struct.atomic_t* %lost_pixels, %struct.atomic_t** %v.addr.i, align 8
  store i32 1, i32* %i.addr.i, align 4
  %3 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !8745
  %4 = bitcast %struct.atomic_t* %3 to i8*, !dbg !8745
  store i8* %4, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %5 = load i8*, i8** %v.addr.i.i, align 8, !dbg !8746
  %6 = load i64, i64* %size.addr.i.i, align 8, !dbg !8747
  %conv.i.i = trunc i64 %6 to i32, !dbg !8747
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %5, i32 %conv.i.i) #13, !dbg !8748
  %7 = load i8*, i8** %v.addr.i.i, align 8, !dbg !8749
  %8 = load i64, i64* %size.addr.i.i, align 8, !dbg !8749
  call void @kcsan_check_access(i8* %7, i64 %8, i32 5) #13, !dbg !8749
  %9 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !8750
  %10 = load i32, i32* %i.addr.i, align 4, !dbg !8751
  store %struct.atomic_t* %9, %struct.atomic_t** %v.addr.i1.i, align 8
  store i32 %10, i32* %i.addr.i.i, align 4
  %11 = load i32, i32* %i.addr.i.i, align 4, !dbg !8752
  %12 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !8752
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %12, i32 0, i32 0, !dbg !8752
  store volatile i32 %11, i32* %counter.i.i, align 4, !dbg !8752
  %13 = load i32, i32* %ret, align 4, !dbg !8753
  %14 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !8753
  %urbs2 = getelementptr inbounds %struct.ufx_data, %struct.ufx_data* %14, i32 0, i32 3, !dbg !8753
  %available = getelementptr inbounds %struct.urb_list, %struct.urb_list* %urbs2, i32 0, i32 3, !dbg !8753
  %15 = load i32, i32* %available, align 8, !dbg !8753
  %call3 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.22, i64 0, i64 0), i32 %13, i32 %15) #12, !dbg !8753
  br label %error, !dbg !8754

if.end:                                           ; preds = %entry
  br label %do.body, !dbg !8755

do.body:                                          ; preds = %if.end
  br label %do.body4, !dbg !8756

do.body4:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !8757, metadata !DIExpression()), !dbg !8759
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !8760, metadata !DIExpression()), !dbg !8759
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !8759
  %conv = zext i1 %cmp to i32, !dbg !8759
  store i32 1, i32* %tmp, align 4, !dbg !8759
  %16 = load i32, i32* %tmp, align 4, !dbg !8759
  br label %do.body5, !dbg !8761

do.body5:                                         ; preds = %do.body4
  br label %do.body6, !dbg !8762

do.body6:                                         ; preds = %do.body5
  br label %do.body7, !dbg !8763

do.body7:                                         ; preds = %do.body6
  call void @llvm.dbg.declare(metadata i64* %__dummy8, metadata !8765, metadata !DIExpression()), !dbg !8768
  call void @llvm.dbg.declare(metadata i64* %__dummy29, metadata !8769, metadata !DIExpression()), !dbg !8768
  %cmp10 = icmp eq i64* %__dummy8, %__dummy29, !dbg !8768
  %conv11 = zext i1 %cmp10 to i32, !dbg !8768
  store i32 1, i32* %tmp12, align 4, !dbg !8768
  %17 = load i32, i32* %tmp12, align 4, !dbg !8768
  %call13 = call i64 @arch_local_irq_save() #11, !dbg !8770
  store i64 %call13, i64* %flags, align 8, !dbg !8770
  br label %do.end, !dbg !8770

do.end:                                           ; preds = %do.body7
  br label %do.end14, !dbg !8763

do.end14:                                         ; preds = %do.end
  br label %do.body15, !dbg !8762

do.body15:                                        ; preds = %do.end14
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !8771, !srcloc !8772
  br label %do.body16, !dbg !8771

do.body16:                                        ; preds = %do.body15
  %18 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !8773
  %urbs17 = getelementptr inbounds %struct.ufx_data, %struct.ufx_data* %18, i32 0, i32 3, !dbg !8773
  %lock = getelementptr inbounds %struct.urb_list, %struct.urb_list* %urbs17, i32 0, i32 1, !dbg !8773
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %19 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !8774
  %20 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %19, i32 0, i32 0, !dbg !8775
  %rlock.i = bitcast %union.anon.3* %20 to %struct.raw_spinlock*, !dbg !8775
  br label %do.end19, !dbg !8773

do.end19:                                         ; preds = %do.body16
  br label %do.end20, !dbg !8771

do.end20:                                         ; preds = %do.end19
  br label %do.end21, !dbg !8762

do.end21:                                         ; preds = %do.end20
  br label %do.end22, !dbg !8761

do.end22:                                         ; preds = %do.end21
  br label %do.end23, !dbg !8756

do.end23:                                         ; preds = %do.end22
  br label %do.body24, !dbg !8776

do.body24:                                        ; preds = %do.end23
  %21 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !8777
  %urbs25 = getelementptr inbounds %struct.ufx_data, %struct.ufx_data* %21, i32 0, i32 3, !dbg !8777
  %list = getelementptr inbounds %struct.urb_list, %struct.urb_list* %urbs25, i32 0, i32 0, !dbg !8777
  %call26 = call i32 @list_empty(%struct.list_head* %list) #11, !dbg !8777
  %tobool27 = icmp ne i32 %call26, 0, !dbg !8777
  %lnot = xor i1 %tobool27, true, !dbg !8777
  %lnot28 = xor i1 %lnot, true, !dbg !8777
  %lnot.ext = zext i1 %lnot28 to i32, !dbg !8777
  %conv29 = sext i32 %lnot.ext to i64, !dbg !8777
  %tobool30 = icmp ne i64 %conv29, 0, !dbg !8777
  br i1 %tobool30, label %if.then31, label %if.end40, !dbg !8780

if.then31:                                        ; preds = %do.body24
  br label %do.body32, !dbg !8777

do.body32:                                        ; preds = %if.then31
  br label %do.body33, !dbg !8781

do.body33:                                        ; preds = %do.body32
  br label %do.end34, !dbg !8783

do.end34:                                         ; preds = %do.body33
  br label %do.body35, !dbg !8781

do.body35:                                        ; preds = %do.end34
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.1, i64 0, i64 0), i32 1917, i32 0, i64 12) #10, !dbg !8785, !srcloc !8787
  br label %do.end36, !dbg !8785

do.end36:                                         ; preds = %do.body35
  br label %do.body37, !dbg !8781

do.body37:                                        ; preds = %do.end36
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 271) #10, !dbg !8788, !srcloc !8791
  unreachable, !dbg !8792

do.end38:                                         ; No predecessors!
  br label %do.end39, !dbg !8781

do.end39:                                         ; preds = %do.end38
  br label %if.end40, !dbg !8781

if.end40:                                         ; preds = %do.end39, %do.body24
  br label %do.end41, !dbg !8780

do.end41:                                         ; preds = %if.end40
  %22 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !8793
  %urbs42 = getelementptr inbounds %struct.ufx_data, %struct.ufx_data* %22, i32 0, i32 3, !dbg !8794
  %list43 = getelementptr inbounds %struct.urb_list, %struct.urb_list* %urbs42, i32 0, i32 0, !dbg !8795
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %list43, i32 0, i32 0, !dbg !8796
  %23 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !8796
  store %struct.list_head* %23, %struct.list_head** %entry1, align 8, !dbg !8797
  %24 = load %struct.list_head*, %struct.list_head** %entry1, align 8, !dbg !8798
  call void @list_del_init(%struct.list_head* %24) #11, !dbg !8799
  %25 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !8800
  %urbs44 = getelementptr inbounds %struct.ufx_data, %struct.ufx_data* %25, i32 0, i32 3, !dbg !8801
  %available45 = getelementptr inbounds %struct.urb_list, %struct.urb_list* %urbs44, i32 0, i32 3, !dbg !8802
  %26 = load i32, i32* %available45, align 8, !dbg !8803
  %dec = add i32 %26, -1, !dbg !8803
  store i32 %dec, i32* %available45, align 8, !dbg !8803
  %27 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !8804
  %urbs46 = getelementptr inbounds %struct.ufx_data, %struct.ufx_data* %27, i32 0, i32 3, !dbg !8805
  %lock47 = getelementptr inbounds %struct.urb_list, %struct.urb_list* %urbs46, i32 0, i32 1, !dbg !8806
  %28 = load i64, i64* %flags, align 8, !dbg !8807
  store %struct.spinlock* %lock47, %struct.spinlock** %lock.addr.i52, align 8
  store i64 %28, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !284, metadata !7611, metadata !DIExpression()) #10, !dbg !8808
  call void @llvm.dbg.declare(metadata !284, metadata !7615, metadata !DIExpression()) #10, !dbg !8808
  store i32 1, i32* %tmp.i, align 4, !dbg !8808
  %29 = load i32, i32* %tmp.i, align 4, !dbg !8808
  call void @llvm.dbg.declare(metadata !284, metadata !7616, metadata !DIExpression()) #10, !dbg !8809
  call void @llvm.dbg.declare(metadata !284, metadata !7622, metadata !DIExpression()) #10, !dbg !8809
  store i32 1, i32* %tmp8.i, align 4, !dbg !8809
  %30 = load i32, i32* %tmp8.i, align 4, !dbg !8809
  %31 = load i64, i64* %flags.addr.i, align 8, !dbg !8810
  call void @arch_local_irq_restore(i64 %31) #13, !dbg !8810
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !8811, !srcloc !7626
  %32 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i52, align 8, !dbg !8812
  %33 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %32, i32 0, i32 0, !dbg !8812
  %rlock.i53 = bitcast %union.anon.3* %33 to %struct.raw_spinlock*, !dbg !8812
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !8813, metadata !DIExpression()), !dbg !8815
  %34 = load %struct.list_head*, %struct.list_head** %entry1, align 8, !dbg !8815
  %35 = bitcast %struct.list_head* %34 to i8*, !dbg !8815
  store i8* %35, i8** %__mptr, align 8, !dbg !8815
  br label %do.body48, !dbg !8815

do.body48:                                        ; preds = %do.end41
  br label %do.end49, !dbg !8816

do.end49:                                         ; preds = %do.body48
  %36 = load i8*, i8** %__mptr, align 8, !dbg !8815
  %add.ptr = getelementptr i8, i8* %36, i64 0, !dbg !8815
  %37 = bitcast i8* %add.ptr to %struct.urb_node*, !dbg !8815
  store %struct.urb_node* %37, %struct.urb_node** %tmp50, align 8, !dbg !8816
  %38 = load %struct.urb_node*, %struct.urb_node** %tmp50, align 8, !dbg !8815
  store %struct.urb_node* %38, %struct.urb_node** %unode, align 8, !dbg !8818
  %39 = load %struct.urb_node*, %struct.urb_node** %unode, align 8, !dbg !8819
  %urb51 = getelementptr inbounds %struct.urb_node, %struct.urb_node* %39, i32 0, i32 3, !dbg !8820
  %40 = load %struct.urb*, %struct.urb** %urb51, align 8, !dbg !8820
  store %struct.urb* %40, %struct.urb** %urb, align 8, !dbg !8821
  br label %error, !dbg !8822

error:                                            ; preds = %do.end49, %if.then
  call void @llvm.dbg.label(metadata !8823), !dbg !8824
  %41 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !8825
  ret %struct.urb* %41, !dbg !8826
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ufx_raw_rect(%struct.ufx_data* %dev, i16* %cmd, i32 %x, i32 %y, i32 %width, i32 %height) #2 !dbg !8827 {
entry:
  %dev.addr = alloca %struct.ufx_data*, align 8
  %cmd.addr = alloca i16*, align 8
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %width.addr = alloca i32, align 4
  %height.addr = alloca i32, align 4
  %packed_line_len = alloca i64, align 8
  %packed_rect_len = alloca i64, align 8
  %line = alloca i32, align 4
  %line_offset = alloca i32, align 4
  %byte_offset = alloca i32, align 4
  store %struct.ufx_data* %dev, %struct.ufx_data** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ufx_data** %dev.addr, metadata !8830, metadata !DIExpression()), !dbg !8831
  store i16* %cmd, i16** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %cmd.addr, metadata !8832, metadata !DIExpression()), !dbg !8833
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !8834, metadata !DIExpression()), !dbg !8835
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !8836, metadata !DIExpression()), !dbg !8837
  store i32 %width, i32* %width.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %width.addr, metadata !8838, metadata !DIExpression()), !dbg !8839
  store i32 %height, i32* %height.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %height.addr, metadata !8840, metadata !DIExpression()), !dbg !8841
  call void @llvm.dbg.declare(metadata i64* %packed_line_len, metadata !8842, metadata !DIExpression()), !dbg !8843
  %0 = load i32, i32* %width.addr, align 4, !dbg !8844
  %mul = mul i32 %0, 2, !dbg !8844
  %add = add i32 %mul, 3, !dbg !8844
  %and = and i32 %add, -4, !dbg !8844
  %conv = sext i32 %and to i64, !dbg !8844
  store i64 %conv, i64* %packed_line_len, align 8, !dbg !8843
  call void @llvm.dbg.declare(metadata i64* %packed_rect_len, metadata !8845, metadata !DIExpression()), !dbg !8846
  %1 = load i64, i64* %packed_line_len, align 8, !dbg !8847
  %2 = load i32, i32* %height.addr, align 4, !dbg !8848
  %conv1 = sext i32 %2 to i64, !dbg !8848
  %mul2 = mul i64 %1, %conv1, !dbg !8849
  store i64 %mul2, i64* %packed_rect_len, align 8, !dbg !8846
  call void @llvm.dbg.declare(metadata i32* %line, metadata !8850, metadata !DIExpression()), !dbg !8851
  br label %do.body, !dbg !8852

do.body:                                          ; preds = %entry
  %3 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !8853
  %tobool = icmp ne %struct.ufx_data* %3, null, !dbg !8853
  %lnot = xor i1 %tobool, true, !dbg !8853
  %lnot3 = xor i1 %lnot, true, !dbg !8853
  %lnot4 = xor i1 %lnot3, true, !dbg !8853
  %lnot.ext = zext i1 %lnot4 to i32, !dbg !8853
  %conv5 = sext i32 %lnot.ext to i64, !dbg !8853
  %tobool6 = icmp ne i64 %conv5, 0, !dbg !8853
  br i1 %tobool6, label %if.then, label %if.end, !dbg !8856

if.then:                                          ; preds = %do.body
  br label %do.body7, !dbg !8853

do.body7:                                         ; preds = %if.then
  br label %do.body8, !dbg !8857

do.body8:                                         ; preds = %do.body7
  br label %do.end, !dbg !8859

do.end:                                           ; preds = %do.body8
  br label %do.body9, !dbg !8857

do.body9:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.1, i64 0, i64 0), i32 817, i32 0, i64 12) #10, !dbg !8861, !srcloc !8863
  br label %do.end10, !dbg !8861

do.end10:                                         ; preds = %do.body9
  br label %do.body11, !dbg !8857

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 249) #10, !dbg !8864, !srcloc !8867
  unreachable, !dbg !8868

do.end12:                                         ; No predecessors!
  br label %do.end13, !dbg !8857

do.end13:                                         ; preds = %do.end12
  br label %if.end, !dbg !8857

if.end:                                           ; preds = %do.end13, %do.body
  br label %do.end14, !dbg !8856

do.end14:                                         ; preds = %if.end
  br label %do.body15, !dbg !8869

do.body15:                                        ; preds = %do.end14
  %4 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !8870
  %info = getelementptr inbounds %struct.ufx_data, %struct.ufx_data* %4, i32 0, i32 2, !dbg !8870
  %5 = load %struct.fb_info*, %struct.fb_info** %info, align 8, !dbg !8870
  %tobool16 = icmp ne %struct.fb_info* %5, null, !dbg !8870
  %lnot17 = xor i1 %tobool16, true, !dbg !8870
  %lnot19 = xor i1 %lnot17, true, !dbg !8870
  %lnot21 = xor i1 %lnot19, true, !dbg !8870
  %lnot.ext22 = zext i1 %lnot21 to i32, !dbg !8870
  %conv23 = sext i32 %lnot.ext22 to i64, !dbg !8870
  %tobool24 = icmp ne i64 %conv23, 0, !dbg !8870
  br i1 %tobool24, label %if.then25, label %if.end34, !dbg !8873

if.then25:                                        ; preds = %do.body15
  br label %do.body26, !dbg !8870

do.body26:                                        ; preds = %if.then25
  br label %do.body27, !dbg !8874

do.body27:                                        ; preds = %do.body26
  br label %do.end28, !dbg !8876

do.end28:                                         ; preds = %do.body27
  br label %do.body29, !dbg !8874

do.body29:                                        ; preds = %do.end28
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.1, i64 0, i64 0), i32 818, i32 0, i64 12) #10, !dbg !8878, !srcloc !8880
  br label %do.end30, !dbg !8878

do.end30:                                         ; preds = %do.body29
  br label %do.body31, !dbg !8874

do.body31:                                        ; preds = %do.end30
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 250) #10, !dbg !8881, !srcloc !8884
  unreachable, !dbg !8885

do.end32:                                         ; No predecessors!
  br label %do.end33, !dbg !8874

do.end33:                                         ; preds = %do.end32
  br label %if.end34, !dbg !8874

if.end34:                                         ; preds = %do.end33, %do.body15
  br label %do.end35, !dbg !8873

do.end35:                                         ; preds = %if.end34
  %6 = load i16*, i16** %cmd.addr, align 8, !dbg !8886
  %arrayidx = getelementptr i16, i16* %6, i64 0, !dbg !8886
  %7 = bitcast i16* %arrayidx to i32*, !dbg !8887
  store i32 1, i32* %7, align 4, !dbg !8888
  %8 = load i64, i64* %packed_rect_len, align 8, !dbg !8889
  %add36 = add i64 %8, 16, !dbg !8889
  %conv37 = trunc i64 %add36 to i32, !dbg !8889
  %9 = load i16*, i16** %cmd.addr, align 8, !dbg !8890
  %arrayidx38 = getelementptr i16, i16* %9, i64 2, !dbg !8890
  %10 = bitcast i16* %arrayidx38 to i32*, !dbg !8891
  store i32 %conv37, i32* %10, align 4, !dbg !8892
  %11 = load i32, i32* %x.addr, align 4, !dbg !8893
  %conv39 = trunc i32 %11 to i16, !dbg !8893
  %12 = load i16*, i16** %cmd.addr, align 8, !dbg !8894
  %arrayidx40 = getelementptr i16, i16* %12, i64 4, !dbg !8894
  store i16 %conv39, i16* %arrayidx40, align 2, !dbg !8895
  %13 = load i32, i32* %y.addr, align 4, !dbg !8896
  %conv41 = trunc i32 %13 to i16, !dbg !8896
  %14 = load i16*, i16** %cmd.addr, align 8, !dbg !8897
  %arrayidx42 = getelementptr i16, i16* %14, i64 5, !dbg !8897
  store i16 %conv41, i16* %arrayidx42, align 2, !dbg !8898
  %15 = load i32, i32* %width.addr, align 4, !dbg !8899
  %conv43 = trunc i32 %15 to i16, !dbg !8899
  %16 = load i16*, i16** %cmd.addr, align 8, !dbg !8900
  %arrayidx44 = getelementptr i16, i16* %16, i64 6, !dbg !8900
  store i16 %conv43, i16* %arrayidx44, align 2, !dbg !8901
  %17 = load i32, i32* %height.addr, align 4, !dbg !8902
  %conv45 = trunc i32 %17 to i16, !dbg !8902
  %18 = load i16*, i16** %cmd.addr, align 8, !dbg !8903
  %arrayidx46 = getelementptr i16, i16* %18, i64 7, !dbg !8903
  store i16 %conv45, i16* %arrayidx46, align 2, !dbg !8904
  %19 = load i16*, i16** %cmd.addr, align 8, !dbg !8905
  %arrayidx47 = getelementptr i16, i16* %19, i64 8, !dbg !8905
  %20 = bitcast i16* %arrayidx47 to i32*, !dbg !8906
  store i32 0, i32* %20, align 4, !dbg !8907
  %21 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !8908
  %info48 = getelementptr inbounds %struct.ufx_data, %struct.ufx_data* %21, i32 0, i32 2, !dbg !8908
  %22 = load %struct.fb_info*, %struct.fb_info** %info48, align 8, !dbg !8908
  %var = getelementptr inbounds %struct.fb_info, %struct.fb_info* %22, i32 0, i32 6, !dbg !8908
  %xres = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %var, i32 0, i32 0, !dbg !8908
  %23 = load i32, i32* %xres, align 8, !dbg !8908
  %or = or i32 16384, %23, !dbg !8908
  %conv49 = trunc i32 %or to i16, !dbg !8908
  %24 = load i16*, i16** %cmd.addr, align 8, !dbg !8909
  %arrayidx50 = getelementptr i16, i16* %24, i64 10, !dbg !8909
  store i16 %conv49, i16* %arrayidx50, align 2, !dbg !8910
  %25 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !8911
  %info51 = getelementptr inbounds %struct.ufx_data, %struct.ufx_data* %25, i32 0, i32 2, !dbg !8911
  %26 = load %struct.fb_info*, %struct.fb_info** %info51, align 8, !dbg !8911
  %var52 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %26, i32 0, i32 6, !dbg !8911
  %yres = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %var52, i32 0, i32 1, !dbg !8911
  %27 = load i32, i32* %yres, align 4, !dbg !8911
  %conv53 = trunc i32 %27 to i16, !dbg !8911
  %28 = load i16*, i16** %cmd.addr, align 8, !dbg !8912
  %arrayidx54 = getelementptr i16, i16* %28, i64 11, !dbg !8912
  store i16 %conv53, i16* %arrayidx54, align 2, !dbg !8913
  store i32 0, i32* %line, align 4, !dbg !8914
  br label %for.cond, !dbg !8916

for.cond:                                         ; preds = %for.inc, %do.end35
  %29 = load i32, i32* %line, align 4, !dbg !8917
  %30 = load i32, i32* %height.addr, align 4, !dbg !8919
  %cmp = icmp slt i32 %29, %30, !dbg !8920
  br i1 %cmp, label %for.body, label %for.end, !dbg !8921

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %line_offset, metadata !8922, metadata !DIExpression()), !dbg !8924
  %31 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !8925
  %info56 = getelementptr inbounds %struct.ufx_data, %struct.ufx_data* %31, i32 0, i32 2, !dbg !8926
  %32 = load %struct.fb_info*, %struct.fb_info** %info56, align 8, !dbg !8926
  %fix = getelementptr inbounds %struct.fb_info, %struct.fb_info* %32, i32 0, i32 7, !dbg !8927
  %line_length = getelementptr inbounds %struct.fb_fix_screeninfo, %struct.fb_fix_screeninfo* %fix, i32 0, i32 9, !dbg !8928
  %33 = load i32, i32* %line_length, align 8, !dbg !8928
  %34 = load i32, i32* %y.addr, align 4, !dbg !8929
  %35 = load i32, i32* %line, align 4, !dbg !8930
  %add57 = add i32 %34, %35, !dbg !8931
  %mul58 = mul i32 %33, %add57, !dbg !8932
  store i32 %mul58, i32* %line_offset, align 4, !dbg !8924
  call void @llvm.dbg.declare(metadata i32* %byte_offset, metadata !8933, metadata !DIExpression()), !dbg !8934
  %36 = load i32, i32* %line_offset, align 4, !dbg !8935
  %37 = load i32, i32* %x.addr, align 4, !dbg !8936
  %mul59 = mul i32 %37, 2, !dbg !8937
  %add60 = add i32 %36, %mul59, !dbg !8938
  store i32 %add60, i32* %byte_offset, align 4, !dbg !8934
  %38 = load i16*, i16** %cmd.addr, align 8, !dbg !8939
  %39 = load i64, i64* %packed_line_len, align 8, !dbg !8940
  %40 = load i32, i32* %line, align 4, !dbg !8941
  %conv61 = sext i32 %40 to i64, !dbg !8941
  %mul62 = mul i64 %39, %conv61, !dbg !8942
  %add63 = add i64 24, %mul62, !dbg !8943
  %div = udiv i64 %add63, 2, !dbg !8944
  %arrayidx64 = getelementptr i16, i16* %38, i64 %div, !dbg !8939
  %41 = bitcast i16* %arrayidx64 to i8*, !dbg !8945
  %42 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !8946
  %info65 = getelementptr inbounds %struct.ufx_data, %struct.ufx_data* %42, i32 0, i32 2, !dbg !8947
  %43 = load %struct.fb_info*, %struct.fb_info** %info65, align 8, !dbg !8947
  %fix66 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %43, i32 0, i32 7, !dbg !8948
  %smem_start = getelementptr inbounds %struct.fb_fix_screeninfo, %struct.fb_fix_screeninfo* %fix66, i32 0, i32 1, !dbg !8949
  %44 = load i64, i64* %smem_start, align 8, !dbg !8949
  %45 = inttoptr i64 %44 to i8*, !dbg !8950
  %46 = load i32, i32* %byte_offset, align 4, !dbg !8951
  %idx.ext = sext i32 %46 to i64, !dbg !8952
  %add.ptr = getelementptr i8, i8* %45, i64 %idx.ext, !dbg !8952
  %47 = load i32, i32* %width.addr, align 4, !dbg !8953
  %mul67 = mul i32 %47, 2, !dbg !8954
  %conv68 = sext i32 %mul67 to i64, !dbg !8953
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %41, i8* align 1 %add.ptr, i64 %conv68, i1 false), !dbg !8945
  br label %for.inc, !dbg !8955

for.inc:                                          ; preds = %for.body
  %48 = load i32, i32* %line, align 4, !dbg !8956
  %inc = add i32 %48, 1, !dbg !8956
  store i32 %inc, i32* %line, align 4, !dbg !8956
  br label %for.cond, !dbg !8957, !llvm.loop !8958

for.end:                                          ; preds = %for.cond
  ret void, !dbg !8960
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ufx_submit_urb(%struct.ufx_data* %dev, %struct.urb* %urb, i64 %len) #2 !dbg !8961 {
entry:
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !5046, metadata !DIExpression()), !dbg !8964
  %i.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i.i, metadata !5057, metadata !DIExpression()), !dbg !8969
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !5059, metadata !DIExpression()), !dbg !8970
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !5069, metadata !DIExpression()), !dbg !8972
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !5071, metadata !DIExpression()), !dbg !8973
  %i.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i, metadata !5073, metadata !DIExpression()), !dbg !8974
  %dev.addr = alloca %struct.ufx_data*, align 8
  %urb.addr = alloca %struct.urb*, align 8
  %len.addr = alloca i64, align 8
  %ret = alloca i32, align 4
  store %struct.ufx_data* %dev, %struct.ufx_data** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ufx_data** %dev.addr, metadata !8975, metadata !DIExpression()), !dbg !8976
  store %struct.urb* %urb, %struct.urb** %urb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.urb** %urb.addr, metadata !8977, metadata !DIExpression()), !dbg !8978
  store i64 %len, i64* %len.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %len.addr, metadata !8979, metadata !DIExpression()), !dbg !8980
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8981, metadata !DIExpression()), !dbg !8982
  br label %do.body, !dbg !8983

do.body:                                          ; preds = %entry
  %0 = load i64, i64* %len.addr, align 8, !dbg !8984
  %1 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !8984
  %urbs = getelementptr inbounds %struct.ufx_data, %struct.ufx_data* %1, i32 0, i32 3, !dbg !8984
  %size = getelementptr inbounds %struct.urb_list, %struct.urb_list* %urbs, i32 0, i32 5, !dbg !8984
  %2 = load i64, i64* %size, align 8, !dbg !8984
  %cmp = icmp ugt i64 %0, %2, !dbg !8984
  %lnot = xor i1 %cmp, true, !dbg !8984
  %lnot1 = xor i1 %lnot, true, !dbg !8984
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !8984
  %conv = sext i32 %lnot.ext to i64, !dbg !8984
  %tobool = icmp ne i64 %conv, 0, !dbg !8984
  br i1 %tobool, label %if.then, label %if.end, !dbg !8987

if.then:                                          ; preds = %do.body
  br label %do.body2, !dbg !8984

do.body2:                                         ; preds = %if.then
  br label %do.body3, !dbg !8988

do.body3:                                         ; preds = %do.body2
  br label %do.end, !dbg !8990

do.end:                                           ; preds = %do.body3
  br label %do.body4, !dbg !8988

do.body4:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.1, i64 0, i64 0), i32 1935, i32 0, i64 12) #10, !dbg !8992, !srcloc !8994
  br label %do.end5, !dbg !8992

do.end5:                                          ; preds = %do.body4
  br label %do.body6, !dbg !8988

do.body6:                                         ; preds = %do.end5
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 273) #10, !dbg !8995, !srcloc !8998
  unreachable, !dbg !8999

do.end7:                                          ; No predecessors!
  br label %do.end8, !dbg !8988

do.end8:                                          ; preds = %do.end7
  br label %if.end, !dbg !8988

if.end:                                           ; preds = %do.end8, %do.body
  br label %do.end9, !dbg !8987

do.end9:                                          ; preds = %if.end
  %3 = load i64, i64* %len.addr, align 8, !dbg !9000
  %conv10 = trunc i64 %3 to i32, !dbg !9000
  %4 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !9001
  %transfer_buffer_length = getelementptr inbounds %struct.urb, %struct.urb* %4, i32 0, i32 19, !dbg !9002
  store i32 %conv10, i32* %transfer_buffer_length, align 8, !dbg !9003
  %5 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !9004
  %call = call i32 @usb_submit_urb(%struct.urb* %5, i32 3264) #11, !dbg !9005
  store i32 %call, i32* %ret, align 4, !dbg !9006
  %6 = load i32, i32* %ret, align 4, !dbg !9007
  %tobool11 = icmp ne i32 %6, 0, !dbg !9007
  br i1 %tobool11, label %if.then12, label %if.end14, !dbg !9008

if.then12:                                        ; preds = %do.end9
  %7 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !9009
  call void @ufx_urb_completion(%struct.urb* %7) #11, !dbg !9010
  %8 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !9011
  %lost_pixels = getelementptr inbounds %struct.ufx_data, %struct.ufx_data* %8, i32 0, i32 9, !dbg !9012
  store %struct.atomic_t* %lost_pixels, %struct.atomic_t** %v.addr.i, align 8
  store i32 1, i32* %i.addr.i, align 4
  %9 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !9013
  %10 = bitcast %struct.atomic_t* %9 to i8*, !dbg !9013
  store i8* %10, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %11 = load i8*, i8** %v.addr.i.i, align 8, !dbg !9014
  %12 = load i64, i64* %size.addr.i.i, align 8, !dbg !9015
  %conv.i.i = trunc i64 %12 to i32, !dbg !9015
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %11, i32 %conv.i.i) #13, !dbg !9016
  %13 = load i8*, i8** %v.addr.i.i, align 8, !dbg !9017
  %14 = load i64, i64* %size.addr.i.i, align 8, !dbg !9017
  call void @kcsan_check_access(i8* %13, i64 %14, i32 5) #13, !dbg !9017
  %15 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !9018
  %16 = load i32, i32* %i.addr.i, align 4, !dbg !9019
  store %struct.atomic_t* %15, %struct.atomic_t** %v.addr.i1.i, align 8
  store i32 %16, i32* %i.addr.i.i, align 4
  %17 = load i32, i32* %i.addr.i.i, align 4, !dbg !9020
  %18 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !9020
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %18, i32 0, i32 0, !dbg !9020
  store volatile i32 %17, i32* %counter.i.i, align 4, !dbg !9020
  %19 = load i32, i32* %ret, align 4, !dbg !9021
  %call13 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.23, i64 0, i64 0), i32 %19) #12, !dbg !9021
  br label %if.end14, !dbg !9022

if.end14:                                         ; preds = %if.then12, %do.end9
  %20 = load i32, i32* %ret, align 4, !dbg !9023
  ret i32 %20, !dbg !9024
}

; Function Attrs: noredzone
declare dso_local i32 @down_timeout(%struct.semaphore*, i64) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @list_empty(%struct.list_head* %head) #2 !dbg !9025 {
entry:
  %head.addr = alloca %struct.list_head*, align 8
  %tmp = alloca %struct.list_head*, align 8
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !9030, metadata !DIExpression()), !dbg !9031
  br label %do.body, !dbg !9032

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !9034

do.end:                                           ; preds = %do.body
  %0 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !9032
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %0, i32 0, i32 0, !dbg !9032
  %1 = load volatile %struct.list_head*, %struct.list_head** %next, align 8, !dbg !9032
  store %struct.list_head* %1, %struct.list_head** %tmp, align 8, !dbg !9034
  %2 = load %struct.list_head*, %struct.list_head** %tmp, align 8, !dbg !9032
  %3 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !9036
  %cmp = icmp eq %struct.list_head* %2, %3, !dbg !9037
  %conv = zext i1 %cmp to i32, !dbg !9037
  ret i32 %conv, !dbg !9038
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_del_init(%struct.list_head* %entry1) #2 !dbg !9039 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !9040, metadata !DIExpression()), !dbg !9041
  %0 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !9042
  call void @__list_del_entry(%struct.list_head* %0) #11, !dbg !9043
  %1 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !9044
  call void @INIT_LIST_HEAD(%struct.list_head* %1) #11, !dbg !9045
  ret void, !dbg !9046
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_del_entry(%struct.list_head* %entry1) #2 !dbg !9047 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !9048, metadata !DIExpression()), !dbg !9049
  %0 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !9050
  %call = call zeroext i1 @__list_del_entry_valid(%struct.list_head* %0) #11, !dbg !9052
  br i1 %call, label %if.end, label %if.then, !dbg !9053

if.then:                                          ; preds = %entry
  br label %return, !dbg !9054

if.end:                                           ; preds = %entry
  %1 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !9055
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !9056
  %2 = load %struct.list_head*, %struct.list_head** %prev, align 8, !dbg !9056
  %3 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !9057
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 0, !dbg !9058
  %4 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !9058
  call void @__list_del(%struct.list_head* %2, %struct.list_head* %4) #11, !dbg !9059
  br label %return, !dbg !9060

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !9060
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__list_del_entry_valid(%struct.list_head* %entry1) #2 !dbg !9061 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !9064, metadata !DIExpression()), !dbg !9065
  ret i1 true, !dbg !9066
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_del(%struct.list_head* %prev, %struct.list_head* %next) #2 !dbg !9067 {
entry:
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !9068, metadata !DIExpression()), !dbg !9069
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !9070, metadata !DIExpression()), !dbg !9071
  %0 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !9072
  %1 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !9073
  %prev1 = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !9074
  store %struct.list_head* %0, %struct.list_head** %prev1, align 8, !dbg !9075
  br label %do.body, !dbg !9076

do.body:                                          ; preds = %entry
  br label %do.body2, !dbg !9077

do.body2:                                         ; preds = %do.body
  br label %do.end, !dbg !9079

do.end:                                           ; preds = %do.body2
  br label %do.body3, !dbg !9077

do.body3:                                         ; preds = %do.end
  %2 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !9081
  %3 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !9081
  %next4 = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 0, !dbg !9081
  store volatile %struct.list_head* %2, %struct.list_head** %next4, align 8, !dbg !9081
  br label %do.end5, !dbg !9081

do.end5:                                          ; preds = %do.body3
  br label %do.end6, !dbg !9077

do.end6:                                          ; preds = %do.end5
  ret void, !dbg !9083
}

; Function Attrs: noredzone
declare dso_local i32 @usb_submit_urb(%struct.urb*, i32) #1

; Function Attrs: noredzone
declare dso_local void @fb_deferred_io_cleanup(%struct.fb_info*) #1

; Function Attrs: noredzone
declare dso_local i64 @fb_sys_write(%struct.fb_info*, i8*, i64, i64*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ufx_set_vid_mode(%struct.ufx_data* %dev, %struct.fb_var_screeninfo* %var) #2 !dbg !9084 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.ufx_data*, align 8
  %var.addr = alloca %struct.fb_var_screeninfo*, align 8
  %temp = alloca i32, align 4
  %h_total = alloca i16, align 2
  %h_active = alloca i16, align 2
  %h_blank_start = alloca i16, align 2
  %h_blank_end = alloca i16, align 2
  %h_sync_start = alloca i16, align 2
  %h_sync_end = alloca i16, align 2
  %v_total = alloca i16, align 2
  %v_active = alloca i16, align 2
  %v_blank_start = alloca i16, align 2
  %v_blank_end = alloca i16, align 2
  %v_sync_start = alloca i16, align 2
  %v_sync_end = alloca i16, align 2
  %status = alloca i32, align 4
  store %struct.ufx_data* %dev, %struct.ufx_data** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ufx_data** %dev.addr, metadata !9087, metadata !DIExpression()), !dbg !9088
  store %struct.fb_var_screeninfo* %var, %struct.fb_var_screeninfo** %var.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fb_var_screeninfo** %var.addr, metadata !9089, metadata !DIExpression()), !dbg !9090
  call void @llvm.dbg.declare(metadata i32* %temp, metadata !9091, metadata !DIExpression()), !dbg !9092
  call void @llvm.dbg.declare(metadata i16* %h_total, metadata !9093, metadata !DIExpression()), !dbg !9094
  call void @llvm.dbg.declare(metadata i16* %h_active, metadata !9095, metadata !DIExpression()), !dbg !9096
  call void @llvm.dbg.declare(metadata i16* %h_blank_start, metadata !9097, metadata !DIExpression()), !dbg !9098
  call void @llvm.dbg.declare(metadata i16* %h_blank_end, metadata !9099, metadata !DIExpression()), !dbg !9100
  call void @llvm.dbg.declare(metadata i16* %h_sync_start, metadata !9101, metadata !DIExpression()), !dbg !9102
  call void @llvm.dbg.declare(metadata i16* %h_sync_end, metadata !9103, metadata !DIExpression()), !dbg !9104
  call void @llvm.dbg.declare(metadata i16* %v_total, metadata !9105, metadata !DIExpression()), !dbg !9106
  call void @llvm.dbg.declare(metadata i16* %v_active, metadata !9107, metadata !DIExpression()), !dbg !9108
  call void @llvm.dbg.declare(metadata i16* %v_blank_start, metadata !9109, metadata !DIExpression()), !dbg !9110
  call void @llvm.dbg.declare(metadata i16* %v_blank_end, metadata !9111, metadata !DIExpression()), !dbg !9112
  call void @llvm.dbg.declare(metadata i16* %v_sync_start, metadata !9113, metadata !DIExpression()), !dbg !9114
  call void @llvm.dbg.declare(metadata i16* %v_sync_end, metadata !9115, metadata !DIExpression()), !dbg !9116
  call void @llvm.dbg.declare(metadata i32* %status, metadata !9117, metadata !DIExpression()), !dbg !9118
  %0 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !9119
  %call = call i32 @ufx_reg_write(%struct.ufx_data* %0, i32 32808, i32 0) #11, !dbg !9120
  store i32 %call, i32* %status, align 4, !dbg !9118
  %1 = load i32, i32* %status, align 4, !dbg !9121
  %cmp = icmp slt i32 %1, 0, !dbg !9121
  br i1 %cmp, label %if.then, label %if.end, !dbg !9124

if.then:                                          ; preds = %entry
  %call1 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.24, i64 0, i64 0)) #12, !dbg !9125
  %2 = load i32, i32* %status, align 4, !dbg !9125
  store i32 %2, i32* %retval, align 4, !dbg !9125
  br label %return, !dbg !9125

if.end:                                           ; preds = %entry
  %3 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !9127
  %call2 = call i32 @ufx_reg_write(%struct.ufx_data* %3, i32 32804, i32 0) #11, !dbg !9128
  store i32 %call2, i32* %status, align 4, !dbg !9129
  %4 = load i32, i32* %status, align 4, !dbg !9130
  %cmp3 = icmp slt i32 %4, 0, !dbg !9130
  br i1 %cmp3, label %if.then4, label %if.end6, !dbg !9133

if.then4:                                         ; preds = %if.end
  %call5 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.25, i64 0, i64 0)) #12, !dbg !9134
  %5 = load i32, i32* %status, align 4, !dbg !9134
  store i32 %5, i32* %retval, align 4, !dbg !9134
  br label %return, !dbg !9134

if.end6:                                          ; preds = %if.end
  %6 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !9136
  %call7 = call i32 @ufx_blank(%struct.ufx_data* %6, i1 zeroext true) #11, !dbg !9137
  store i32 %call7, i32* %status, align 4, !dbg !9138
  %7 = load i32, i32* %status, align 4, !dbg !9139
  %cmp8 = icmp slt i32 %7, 0, !dbg !9139
  br i1 %cmp8, label %if.then9, label %if.end11, !dbg !9142

if.then9:                                         ; preds = %if.end6
  %call10 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.26, i64 0, i64 0)) #12, !dbg !9143
  %8 = load i32, i32* %status, align 4, !dbg !9143
  store i32 %8, i32* %retval, align 4, !dbg !9143
  br label %return, !dbg !9143

if.end11:                                         ; preds = %if.end6
  %9 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !9145
  %call12 = call i32 @ufx_disable(%struct.ufx_data* %9, i1 zeroext true) #11, !dbg !9146
  store i32 %call12, i32* %status, align 4, !dbg !9147
  %10 = load i32, i32* %status, align 4, !dbg !9148
  %cmp13 = icmp slt i32 %10, 0, !dbg !9148
  br i1 %cmp13, label %if.then14, label %if.end16, !dbg !9151

if.then14:                                        ; preds = %if.end11
  %call15 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.27, i64 0, i64 0)) #12, !dbg !9152
  %11 = load i32, i32* %status, align 4, !dbg !9152
  store i32 %11, i32* %retval, align 4, !dbg !9152
  br label %return, !dbg !9152

if.end16:                                         ; preds = %if.end11
  %12 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !9154
  %13 = load %struct.fb_var_screeninfo*, %struct.fb_var_screeninfo** %var.addr, align 8, !dbg !9155
  %pixclock = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %13, i32 0, i32 17, !dbg !9156
  %14 = load i32, i32* %pixclock, align 4, !dbg !9156
  %call17 = call i32 @ufx_config_pix_clk(%struct.ufx_data* %12, i32 %14) #11, !dbg !9157
  store i32 %call17, i32* %status, align 4, !dbg !9158
  %15 = load i32, i32* %status, align 4, !dbg !9159
  %cmp18 = icmp slt i32 %15, 0, !dbg !9159
  br i1 %cmp18, label %if.then19, label %if.end21, !dbg !9162

if.then19:                                        ; preds = %if.end16
  %call20 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.28, i64 0, i64 0)) #12, !dbg !9163
  %16 = load i32, i32* %status, align 4, !dbg !9163
  store i32 %16, i32* %retval, align 4, !dbg !9163
  br label %return, !dbg !9163

if.end21:                                         ; preds = %if.end16
  %17 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !9165
  %call22 = call i32 @ufx_reg_write(%struct.ufx_data* %17, i32 8192, i32 260) #11, !dbg !9166
  store i32 %call22, i32* %status, align 4, !dbg !9167
  %18 = load i32, i32* %status, align 4, !dbg !9168
  %cmp23 = icmp slt i32 %18, 0, !dbg !9168
  br i1 %cmp23, label %if.then24, label %if.end26, !dbg !9171

if.then24:                                        ; preds = %if.end21
  %call25 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.29, i64 0, i64 0)) #12, !dbg !9172
  %19 = load i32, i32* %status, align 4, !dbg !9172
  store i32 %19, i32* %retval, align 4, !dbg !9172
  br label %return, !dbg !9172

if.end26:                                         ; preds = %if.end21
  %20 = load %struct.fb_var_screeninfo*, %struct.fb_var_screeninfo** %var.addr, align 8, !dbg !9174
  %xres = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %20, i32 0, i32 0, !dbg !9175
  %21 = load i32, i32* %xres, align 4, !dbg !9175
  %22 = load %struct.fb_var_screeninfo*, %struct.fb_var_screeninfo** %var.addr, align 8, !dbg !9176
  %right_margin = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %22, i32 0, i32 19, !dbg !9177
  %23 = load i32, i32* %right_margin, align 4, !dbg !9177
  %add = add i32 %21, %23, !dbg !9178
  %24 = load %struct.fb_var_screeninfo*, %struct.fb_var_screeninfo** %var.addr, align 8, !dbg !9179
  %hsync_len = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %24, i32 0, i32 22, !dbg !9180
  %25 = load i32, i32* %hsync_len, align 4, !dbg !9180
  %add27 = add i32 %add, %25, !dbg !9181
  %26 = load %struct.fb_var_screeninfo*, %struct.fb_var_screeninfo** %var.addr, align 8, !dbg !9182
  %left_margin = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %26, i32 0, i32 18, !dbg !9183
  %27 = load i32, i32* %left_margin, align 4, !dbg !9183
  %add28 = add i32 %add27, %27, !dbg !9184
  %conv = trunc i32 %add28 to i16, !dbg !9174
  store i16 %conv, i16* %h_total, align 2, !dbg !9185
  %28 = load %struct.fb_var_screeninfo*, %struct.fb_var_screeninfo** %var.addr, align 8, !dbg !9186
  %xres29 = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %28, i32 0, i32 0, !dbg !9187
  %29 = load i32, i32* %xres29, align 4, !dbg !9187
  %conv30 = trunc i32 %29 to i16, !dbg !9186
  store i16 %conv30, i16* %h_active, align 2, !dbg !9188
  %30 = load %struct.fb_var_screeninfo*, %struct.fb_var_screeninfo** %var.addr, align 8, !dbg !9189
  %xres31 = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %30, i32 0, i32 0, !dbg !9190
  %31 = load i32, i32* %xres31, align 4, !dbg !9190
  %32 = load %struct.fb_var_screeninfo*, %struct.fb_var_screeninfo** %var.addr, align 8, !dbg !9191
  %right_margin32 = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %32, i32 0, i32 19, !dbg !9192
  %33 = load i32, i32* %right_margin32, align 4, !dbg !9192
  %add33 = add i32 %31, %33, !dbg !9193
  %conv34 = trunc i32 %add33 to i16, !dbg !9189
  store i16 %conv34, i16* %h_blank_start, align 2, !dbg !9194
  %34 = load %struct.fb_var_screeninfo*, %struct.fb_var_screeninfo** %var.addr, align 8, !dbg !9195
  %xres35 = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %34, i32 0, i32 0, !dbg !9196
  %35 = load i32, i32* %xres35, align 4, !dbg !9196
  %36 = load %struct.fb_var_screeninfo*, %struct.fb_var_screeninfo** %var.addr, align 8, !dbg !9197
  %right_margin36 = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %36, i32 0, i32 19, !dbg !9198
  %37 = load i32, i32* %right_margin36, align 4, !dbg !9198
  %add37 = add i32 %35, %37, !dbg !9199
  %38 = load %struct.fb_var_screeninfo*, %struct.fb_var_screeninfo** %var.addr, align 8, !dbg !9200
  %hsync_len38 = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %38, i32 0, i32 22, !dbg !9201
  %39 = load i32, i32* %hsync_len38, align 4, !dbg !9201
  %add39 = add i32 %add37, %39, !dbg !9202
  %conv40 = trunc i32 %add39 to i16, !dbg !9195
  store i16 %conv40, i16* %h_blank_end, align 2, !dbg !9203
  %40 = load %struct.fb_var_screeninfo*, %struct.fb_var_screeninfo** %var.addr, align 8, !dbg !9204
  %xres41 = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %40, i32 0, i32 0, !dbg !9205
  %41 = load i32, i32* %xres41, align 4, !dbg !9205
  %42 = load %struct.fb_var_screeninfo*, %struct.fb_var_screeninfo** %var.addr, align 8, !dbg !9206
  %right_margin42 = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %42, i32 0, i32 19, !dbg !9207
  %43 = load i32, i32* %right_margin42, align 4, !dbg !9207
  %add43 = add i32 %41, %43, !dbg !9208
  %conv44 = trunc i32 %add43 to i16, !dbg !9204
  store i16 %conv44, i16* %h_sync_start, align 2, !dbg !9209
  %44 = load %struct.fb_var_screeninfo*, %struct.fb_var_screeninfo** %var.addr, align 8, !dbg !9210
  %xres45 = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %44, i32 0, i32 0, !dbg !9211
  %45 = load i32, i32* %xres45, align 4, !dbg !9211
  %46 = load %struct.fb_var_screeninfo*, %struct.fb_var_screeninfo** %var.addr, align 8, !dbg !9212
  %right_margin46 = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %46, i32 0, i32 19, !dbg !9213
  %47 = load i32, i32* %right_margin46, align 4, !dbg !9213
  %add47 = add i32 %45, %47, !dbg !9214
  %48 = load %struct.fb_var_screeninfo*, %struct.fb_var_screeninfo** %var.addr, align 8, !dbg !9215
  %hsync_len48 = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %48, i32 0, i32 22, !dbg !9216
  %49 = load i32, i32* %hsync_len48, align 4, !dbg !9216
  %add49 = add i32 %add47, %49, !dbg !9217
  %conv50 = trunc i32 %add49 to i16, !dbg !9210
  store i16 %conv50, i16* %h_sync_end, align 2, !dbg !9218
  %50 = load i16, i16* %h_total, align 2, !dbg !9219
  %conv51 = zext i16 %50 to i32, !dbg !9219
  %sub = sub i32 %conv51, 1, !dbg !9220
  %shl = shl i32 %sub, 16, !dbg !9221
  %51 = load i16, i16* %h_active, align 2, !dbg !9222
  %conv52 = zext i16 %51 to i32, !dbg !9222
  %sub53 = sub i32 %conv52, 1, !dbg !9223
  %or = or i32 %shl, %sub53, !dbg !9224
  store i32 %or, i32* %temp, align 4, !dbg !9225
  %52 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !9226
  %53 = load i32, i32* %temp, align 4, !dbg !9227
  %call54 = call i32 @ufx_reg_write(%struct.ufx_data* %52, i32 8200, i32 %53) #11, !dbg !9228
  store i32 %call54, i32* %status, align 4, !dbg !9229
  %54 = load i32, i32* %status, align 4, !dbg !9230
  %cmp55 = icmp slt i32 %54, 0, !dbg !9230
  br i1 %cmp55, label %if.then57, label %if.end59, !dbg !9233

if.then57:                                        ; preds = %if.end26
  %call58 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.30, i64 0, i64 0)) #12, !dbg !9234
  %55 = load i32, i32* %status, align 4, !dbg !9234
  store i32 %55, i32* %retval, align 4, !dbg !9234
  br label %return, !dbg !9234

if.end59:                                         ; preds = %if.end26
  %56 = load i16, i16* %h_blank_start, align 2, !dbg !9236
  %conv60 = zext i16 %56 to i32, !dbg !9236
  %sub61 = sub i32 %conv60, 1, !dbg !9237
  %shl62 = shl i32 %sub61, 16, !dbg !9238
  %57 = load i16, i16* %h_blank_end, align 2, !dbg !9239
  %conv63 = zext i16 %57 to i32, !dbg !9239
  %sub64 = sub i32 %conv63, 1, !dbg !9240
  %or65 = or i32 %shl62, %sub64, !dbg !9241
  store i32 %or65, i32* %temp, align 4, !dbg !9242
  %58 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !9243
  %59 = load i32, i32* %temp, align 4, !dbg !9244
  %call66 = call i32 @ufx_reg_write(%struct.ufx_data* %58, i32 8204, i32 %59) #11, !dbg !9245
  store i32 %call66, i32* %status, align 4, !dbg !9246
  %60 = load i32, i32* %status, align 4, !dbg !9247
  %cmp67 = icmp slt i32 %60, 0, !dbg !9247
  br i1 %cmp67, label %if.then69, label %if.end71, !dbg !9250

if.then69:                                        ; preds = %if.end59
  %call70 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.31, i64 0, i64 0)) #12, !dbg !9251
  %61 = load i32, i32* %status, align 4, !dbg !9251
  store i32 %61, i32* %retval, align 4, !dbg !9251
  br label %return, !dbg !9251

if.end71:                                         ; preds = %if.end59
  %62 = load i16, i16* %h_sync_start, align 2, !dbg !9253
  %conv72 = zext i16 %62 to i32, !dbg !9253
  %sub73 = sub i32 %conv72, 1, !dbg !9254
  %shl74 = shl i32 %sub73, 16, !dbg !9255
  %63 = load i16, i16* %h_sync_end, align 2, !dbg !9256
  %conv75 = zext i16 %63 to i32, !dbg !9256
  %sub76 = sub i32 %conv75, 1, !dbg !9257
  %or77 = or i32 %shl74, %sub76, !dbg !9258
  store i32 %or77, i32* %temp, align 4, !dbg !9259
  %64 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !9260
  %65 = load i32, i32* %temp, align 4, !dbg !9261
  %call78 = call i32 @ufx_reg_write(%struct.ufx_data* %64, i32 8208, i32 %65) #11, !dbg !9262
  store i32 %call78, i32* %status, align 4, !dbg !9263
  %66 = load i32, i32* %status, align 4, !dbg !9264
  %cmp79 = icmp slt i32 %66, 0, !dbg !9264
  br i1 %cmp79, label %if.then81, label %if.end83, !dbg !9267

if.then81:                                        ; preds = %if.end71
  %call82 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.32, i64 0, i64 0)) #12, !dbg !9268
  %67 = load i32, i32* %status, align 4, !dbg !9268
  store i32 %67, i32* %retval, align 4, !dbg !9268
  br label %return, !dbg !9268

if.end83:                                         ; preds = %if.end71
  %68 = load %struct.fb_var_screeninfo*, %struct.fb_var_screeninfo** %var.addr, align 8, !dbg !9270
  %upper_margin = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %68, i32 0, i32 20, !dbg !9271
  %69 = load i32, i32* %upper_margin, align 4, !dbg !9271
  %70 = load %struct.fb_var_screeninfo*, %struct.fb_var_screeninfo** %var.addr, align 8, !dbg !9272
  %yres = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %70, i32 0, i32 1, !dbg !9273
  %71 = load i32, i32* %yres, align 4, !dbg !9273
  %add84 = add i32 %69, %71, !dbg !9274
  %72 = load %struct.fb_var_screeninfo*, %struct.fb_var_screeninfo** %var.addr, align 8, !dbg !9275
  %lower_margin = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %72, i32 0, i32 21, !dbg !9276
  %73 = load i32, i32* %lower_margin, align 4, !dbg !9276
  %add85 = add i32 %add84, %73, !dbg !9277
  %74 = load %struct.fb_var_screeninfo*, %struct.fb_var_screeninfo** %var.addr, align 8, !dbg !9278
  %vsync_len = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %74, i32 0, i32 23, !dbg !9279
  %75 = load i32, i32* %vsync_len, align 4, !dbg !9279
  %add86 = add i32 %add85, %75, !dbg !9280
  %conv87 = trunc i32 %add86 to i16, !dbg !9270
  store i16 %conv87, i16* %v_total, align 2, !dbg !9281
  %76 = load %struct.fb_var_screeninfo*, %struct.fb_var_screeninfo** %var.addr, align 8, !dbg !9282
  %yres88 = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %76, i32 0, i32 1, !dbg !9283
  %77 = load i32, i32* %yres88, align 4, !dbg !9283
  %conv89 = trunc i32 %77 to i16, !dbg !9282
  store i16 %conv89, i16* %v_active, align 2, !dbg !9284
  %78 = load %struct.fb_var_screeninfo*, %struct.fb_var_screeninfo** %var.addr, align 8, !dbg !9285
  %yres90 = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %78, i32 0, i32 1, !dbg !9286
  %79 = load i32, i32* %yres90, align 4, !dbg !9286
  %80 = load %struct.fb_var_screeninfo*, %struct.fb_var_screeninfo** %var.addr, align 8, !dbg !9287
  %lower_margin91 = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %80, i32 0, i32 21, !dbg !9288
  %81 = load i32, i32* %lower_margin91, align 4, !dbg !9288
  %add92 = add i32 %79, %81, !dbg !9289
  %conv93 = trunc i32 %add92 to i16, !dbg !9285
  store i16 %conv93, i16* %v_blank_start, align 2, !dbg !9290
  %82 = load %struct.fb_var_screeninfo*, %struct.fb_var_screeninfo** %var.addr, align 8, !dbg !9291
  %yres94 = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %82, i32 0, i32 1, !dbg !9292
  %83 = load i32, i32* %yres94, align 4, !dbg !9292
  %84 = load %struct.fb_var_screeninfo*, %struct.fb_var_screeninfo** %var.addr, align 8, !dbg !9293
  %lower_margin95 = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %84, i32 0, i32 21, !dbg !9294
  %85 = load i32, i32* %lower_margin95, align 4, !dbg !9294
  %add96 = add i32 %83, %85, !dbg !9295
  %86 = load %struct.fb_var_screeninfo*, %struct.fb_var_screeninfo** %var.addr, align 8, !dbg !9296
  %vsync_len97 = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %86, i32 0, i32 23, !dbg !9297
  %87 = load i32, i32* %vsync_len97, align 4, !dbg !9297
  %add98 = add i32 %add96, %87, !dbg !9298
  %conv99 = trunc i32 %add98 to i16, !dbg !9291
  store i16 %conv99, i16* %v_blank_end, align 2, !dbg !9299
  %88 = load %struct.fb_var_screeninfo*, %struct.fb_var_screeninfo** %var.addr, align 8, !dbg !9300
  %yres100 = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %88, i32 0, i32 1, !dbg !9301
  %89 = load i32, i32* %yres100, align 4, !dbg !9301
  %90 = load %struct.fb_var_screeninfo*, %struct.fb_var_screeninfo** %var.addr, align 8, !dbg !9302
  %lower_margin101 = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %90, i32 0, i32 21, !dbg !9303
  %91 = load i32, i32* %lower_margin101, align 4, !dbg !9303
  %add102 = add i32 %89, %91, !dbg !9304
  %conv103 = trunc i32 %add102 to i16, !dbg !9300
  store i16 %conv103, i16* %v_sync_start, align 2, !dbg !9305
  %92 = load %struct.fb_var_screeninfo*, %struct.fb_var_screeninfo** %var.addr, align 8, !dbg !9306
  %yres104 = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %92, i32 0, i32 1, !dbg !9307
  %93 = load i32, i32* %yres104, align 4, !dbg !9307
  %94 = load %struct.fb_var_screeninfo*, %struct.fb_var_screeninfo** %var.addr, align 8, !dbg !9308
  %lower_margin105 = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %94, i32 0, i32 21, !dbg !9309
  %95 = load i32, i32* %lower_margin105, align 4, !dbg !9309
  %add106 = add i32 %93, %95, !dbg !9310
  %96 = load %struct.fb_var_screeninfo*, %struct.fb_var_screeninfo** %var.addr, align 8, !dbg !9311
  %vsync_len107 = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %96, i32 0, i32 23, !dbg !9312
  %97 = load i32, i32* %vsync_len107, align 4, !dbg !9312
  %add108 = add i32 %add106, %97, !dbg !9313
  %conv109 = trunc i32 %add108 to i16, !dbg !9306
  store i16 %conv109, i16* %v_sync_end, align 2, !dbg !9314
  %98 = load i16, i16* %v_total, align 2, !dbg !9315
  %conv110 = zext i16 %98 to i32, !dbg !9315
  %sub111 = sub i32 %conv110, 1, !dbg !9316
  %shl112 = shl i32 %sub111, 16, !dbg !9317
  %99 = load i16, i16* %v_active, align 2, !dbg !9318
  %conv113 = zext i16 %99 to i32, !dbg !9318
  %sub114 = sub i32 %conv113, 1, !dbg !9319
  %or115 = or i32 %shl112, %sub114, !dbg !9320
  store i32 %or115, i32* %temp, align 4, !dbg !9321
  %100 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !9322
  %101 = load i32, i32* %temp, align 4, !dbg !9323
  %call116 = call i32 @ufx_reg_write(%struct.ufx_data* %100, i32 8212, i32 %101) #11, !dbg !9324
  store i32 %call116, i32* %status, align 4, !dbg !9325
  %102 = load i32, i32* %status, align 4, !dbg !9326
  %cmp117 = icmp slt i32 %102, 0, !dbg !9326
  br i1 %cmp117, label %if.then119, label %if.end121, !dbg !9329

if.then119:                                       ; preds = %if.end83
  %call120 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.33, i64 0, i64 0)) #12, !dbg !9330
  %103 = load i32, i32* %status, align 4, !dbg !9330
  store i32 %103, i32* %retval, align 4, !dbg !9330
  br label %return, !dbg !9330

if.end121:                                        ; preds = %if.end83
  %104 = load i16, i16* %v_blank_start, align 2, !dbg !9332
  %conv122 = zext i16 %104 to i32, !dbg !9332
  %sub123 = sub i32 %conv122, 1, !dbg !9333
  %shl124 = shl i32 %sub123, 16, !dbg !9334
  %105 = load i16, i16* %v_blank_end, align 2, !dbg !9335
  %conv125 = zext i16 %105 to i32, !dbg !9335
  %sub126 = sub i32 %conv125, 1, !dbg !9336
  %or127 = or i32 %shl124, %sub126, !dbg !9337
  store i32 %or127, i32* %temp, align 4, !dbg !9338
  %106 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !9339
  %107 = load i32, i32* %temp, align 4, !dbg !9340
  %call128 = call i32 @ufx_reg_write(%struct.ufx_data* %106, i32 8216, i32 %107) #11, !dbg !9341
  store i32 %call128, i32* %status, align 4, !dbg !9342
  %108 = load i32, i32* %status, align 4, !dbg !9343
  %cmp129 = icmp slt i32 %108, 0, !dbg !9343
  br i1 %cmp129, label %if.then131, label %if.end133, !dbg !9346

if.then131:                                       ; preds = %if.end121
  %call132 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.34, i64 0, i64 0)) #12, !dbg !9347
  %109 = load i32, i32* %status, align 4, !dbg !9347
  store i32 %109, i32* %retval, align 4, !dbg !9347
  br label %return, !dbg !9347

if.end133:                                        ; preds = %if.end121
  %110 = load i16, i16* %v_sync_start, align 2, !dbg !9349
  %conv134 = zext i16 %110 to i32, !dbg !9349
  %sub135 = sub i32 %conv134, 1, !dbg !9350
  %shl136 = shl i32 %sub135, 16, !dbg !9351
  %111 = load i16, i16* %v_sync_end, align 2, !dbg !9352
  %conv137 = zext i16 %111 to i32, !dbg !9352
  %sub138 = sub i32 %conv137, 1, !dbg !9353
  %or139 = or i32 %shl136, %sub138, !dbg !9354
  store i32 %or139, i32* %temp, align 4, !dbg !9355
  %112 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !9356
  %113 = load i32, i32* %temp, align 4, !dbg !9357
  %call140 = call i32 @ufx_reg_write(%struct.ufx_data* %112, i32 8220, i32 %113) #11, !dbg !9358
  store i32 %call140, i32* %status, align 4, !dbg !9359
  %114 = load i32, i32* %status, align 4, !dbg !9360
  %cmp141 = icmp slt i32 %114, 0, !dbg !9360
  br i1 %cmp141, label %if.then143, label %if.end145, !dbg !9363

if.then143:                                       ; preds = %if.end133
  %call144 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i64 0, i64 0)) #12, !dbg !9364
  %115 = load i32, i32* %status, align 4, !dbg !9364
  store i32 %115, i32* %retval, align 4, !dbg !9364
  br label %return, !dbg !9364

if.end145:                                        ; preds = %if.end133
  %116 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !9366
  %call146 = call i32 @ufx_reg_write(%struct.ufx_data* %116, i32 8224, i32 0) #11, !dbg !9367
  store i32 %call146, i32* %status, align 4, !dbg !9368
  %117 = load i32, i32* %status, align 4, !dbg !9369
  %cmp147 = icmp slt i32 %117, 0, !dbg !9369
  br i1 %cmp147, label %if.then149, label %if.end151, !dbg !9372

if.then149:                                       ; preds = %if.end145
  %call150 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.36, i64 0, i64 0)) #12, !dbg !9373
  %118 = load i32, i32* %status, align 4, !dbg !9373
  store i32 %118, i32* %retval, align 4, !dbg !9373
  br label %return, !dbg !9373

if.end151:                                        ; preds = %if.end145
  %119 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !9375
  %call152 = call i32 @ufx_reg_write(%struct.ufx_data* %119, i32 8228, i32 0) #11, !dbg !9376
  store i32 %call152, i32* %status, align 4, !dbg !9377
  %120 = load i32, i32* %status, align 4, !dbg !9378
  %cmp153 = icmp slt i32 %120, 0, !dbg !9378
  br i1 %cmp153, label %if.then155, label %if.end157, !dbg !9381

if.then155:                                       ; preds = %if.end151
  %call156 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.37, i64 0, i64 0)) #12, !dbg !9382
  %121 = load i32, i32* %status, align 4, !dbg !9382
  store i32 %121, i32* %retval, align 4, !dbg !9382
  br label %return, !dbg !9382

if.end157:                                        ; preds = %if.end151
  %122 = load %struct.fb_var_screeninfo*, %struct.fb_var_screeninfo** %var.addr, align 8, !dbg !9384
  %xres158 = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %122, i32 0, i32 0, !dbg !9385
  %123 = load i32, i32* %xres158, align 4, !dbg !9385
  %124 = load %struct.fb_var_screeninfo*, %struct.fb_var_screeninfo** %var.addr, align 8, !dbg !9386
  %yres159 = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %124, i32 0, i32 1, !dbg !9387
  %125 = load i32, i32* %yres159, align 4, !dbg !9387
  %mul = mul i32 %123, %125, !dbg !9388
  %mul160 = mul i32 %mul, 2, !dbg !9389
  store i32 %mul160, i32* %temp, align 4, !dbg !9390
  %126 = load i32, i32* %temp, align 4, !dbg !9391
  %add161 = add i32 %126, 7, !dbg !9392
  %and = and i32 %add161, -8, !dbg !9393
  store i32 %and, i32* %temp, align 4, !dbg !9394
  %127 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !9395
  %128 = load i32, i32* %temp, align 4, !dbg !9396
  %call162 = call i32 @ufx_reg_write(%struct.ufx_data* %127, i32 8232, i32 %128) #11, !dbg !9397
  store i32 %call162, i32* %status, align 4, !dbg !9398
  %129 = load i32, i32* %status, align 4, !dbg !9399
  %cmp163 = icmp slt i32 %129, 0, !dbg !9399
  br i1 %cmp163, label %if.then165, label %if.end167, !dbg !9402

if.then165:                                       ; preds = %if.end157
  %call166 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.38, i64 0, i64 0)) #12, !dbg !9403
  %130 = load i32, i32* %status, align 4, !dbg !9403
  store i32 %130, i32* %retval, align 4, !dbg !9403
  br label %return, !dbg !9403

if.end167:                                        ; preds = %if.end157
  %131 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !9405
  %call168 = call i32 @ufx_reg_write(%struct.ufx_data* %131, i32 8256, i32 0) #11, !dbg !9406
  store i32 %call168, i32* %status, align 4, !dbg !9407
  %132 = load i32, i32* %status, align 4, !dbg !9408
  %cmp169 = icmp slt i32 %132, 0, !dbg !9408
  br i1 %cmp169, label %if.then171, label %if.end173, !dbg !9411

if.then171:                                       ; preds = %if.end167
  %call172 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.39, i64 0, i64 0)) #12, !dbg !9412
  %133 = load i32, i32* %status, align 4, !dbg !9412
  store i32 %133, i32* %retval, align 4, !dbg !9412
  br label %return, !dbg !9412

if.end173:                                        ; preds = %if.end167
  %134 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !9414
  %call174 = call i32 @ufx_reg_write(%struct.ufx_data* %134, i32 8260, i32 0) #11, !dbg !9415
  store i32 %call174, i32* %status, align 4, !dbg !9416
  %135 = load i32, i32* %status, align 4, !dbg !9417
  %cmp175 = icmp slt i32 %135, 0, !dbg !9417
  br i1 %cmp175, label %if.then177, label %if.end179, !dbg !9420

if.then177:                                       ; preds = %if.end173
  %call178 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.40, i64 0, i64 0)) #12, !dbg !9421
  %136 = load i32, i32* %status, align 4, !dbg !9421
  store i32 %136, i32* %retval, align 4, !dbg !9421
  br label %return, !dbg !9421

if.end179:                                        ; preds = %if.end173
  %137 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !9423
  %call180 = call i32 @ufx_reg_write(%struct.ufx_data* %137, i32 8264, i32 0) #11, !dbg !9424
  store i32 %call180, i32* %status, align 4, !dbg !9425
  %138 = load i32, i32* %status, align 4, !dbg !9426
  %cmp181 = icmp slt i32 %138, 0, !dbg !9426
  br i1 %cmp181, label %if.then183, label %if.end185, !dbg !9429

if.then183:                                       ; preds = %if.end179
  %call184 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.41, i64 0, i64 0)) #12, !dbg !9430
  %139 = load i32, i32* %status, align 4, !dbg !9430
  store i32 %139, i32* %retval, align 4, !dbg !9430
  br label %return, !dbg !9430

if.end185:                                        ; preds = %if.end179
  store i32 1, i32* %temp, align 4, !dbg !9432
  %140 = load %struct.fb_var_screeninfo*, %struct.fb_var_screeninfo** %var.addr, align 8, !dbg !9433
  %sync = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %140, i32 0, i32 24, !dbg !9435
  %141 = load i32, i32* %sync, align 4, !dbg !9435
  %and186 = and i32 %141, 1, !dbg !9436
  %tobool = icmp ne i32 %and186, 0, !dbg !9436
  br i1 %tobool, label %if.then187, label %if.end189, !dbg !9437

if.then187:                                       ; preds = %if.end185
  %142 = load i32, i32* %temp, align 4, !dbg !9438
  %or188 = or i32 %142, 16, !dbg !9438
  store i32 %or188, i32* %temp, align 4, !dbg !9438
  br label %if.end189, !dbg !9439

if.end189:                                        ; preds = %if.then187, %if.end185
  %143 = load %struct.fb_var_screeninfo*, %struct.fb_var_screeninfo** %var.addr, align 8, !dbg !9440
  %sync190 = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %143, i32 0, i32 24, !dbg !9442
  %144 = load i32, i32* %sync190, align 4, !dbg !9442
  %and191 = and i32 %144, 2, !dbg !9443
  %tobool192 = icmp ne i32 %and191, 0, !dbg !9443
  br i1 %tobool192, label %if.then193, label %if.end195, !dbg !9444

if.then193:                                       ; preds = %if.end189
  %145 = load i32, i32* %temp, align 4, !dbg !9445
  %or194 = or i32 %145, 8, !dbg !9445
  store i32 %or194, i32* %temp, align 4, !dbg !9445
  br label %if.end195, !dbg !9446

if.end195:                                        ; preds = %if.then193, %if.end189
  %146 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !9447
  %147 = load i32, i32* %temp, align 4, !dbg !9448
  %call196 = call i32 @ufx_reg_write(%struct.ufx_data* %146, i32 8256, i32 %147) #11, !dbg !9449
  store i32 %call196, i32* %status, align 4, !dbg !9450
  %148 = load i32, i32* %status, align 4, !dbg !9451
  %cmp197 = icmp slt i32 %148, 0, !dbg !9451
  br i1 %cmp197, label %if.then199, label %if.end201, !dbg !9454

if.then199:                                       ; preds = %if.end195
  %call200 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.39, i64 0, i64 0)) #12, !dbg !9455
  %149 = load i32, i32* %status, align 4, !dbg !9455
  store i32 %149, i32* %retval, align 4, !dbg !9455
  br label %return, !dbg !9455

if.end201:                                        ; preds = %if.end195
  %150 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !9457
  %call202 = call i32 @ufx_enable(%struct.ufx_data* %150, i1 zeroext true) #11, !dbg !9458
  store i32 %call202, i32* %status, align 4, !dbg !9459
  %151 = load i32, i32* %status, align 4, !dbg !9460
  %cmp203 = icmp slt i32 %151, 0, !dbg !9460
  br i1 %cmp203, label %if.then205, label %if.end207, !dbg !9463

if.then205:                                       ; preds = %if.end201
  %call206 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.42, i64 0, i64 0)) #12, !dbg !9464
  %152 = load i32, i32* %status, align 4, !dbg !9464
  store i32 %152, i32* %retval, align 4, !dbg !9464
  br label %return, !dbg !9464

if.end207:                                        ; preds = %if.end201
  %153 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !9466
  %call208 = call i32 @ufx_unblank(%struct.ufx_data* %153, i1 zeroext true) #11, !dbg !9467
  store i32 %call208, i32* %status, align 4, !dbg !9468
  %154 = load i32, i32* %status, align 4, !dbg !9469
  %cmp209 = icmp slt i32 %154, 0, !dbg !9469
  br i1 %cmp209, label %if.then211, label %if.end213, !dbg !9472

if.then211:                                       ; preds = %if.end207
  %call212 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.43, i64 0, i64 0)) #12, !dbg !9473
  %155 = load i32, i32* %status, align 4, !dbg !9473
  store i32 %155, i32* %retval, align 4, !dbg !9473
  br label %return, !dbg !9473

if.end213:                                        ; preds = %if.end207
  %156 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !9475
  %call214 = call i32 @ufx_reg_write(%struct.ufx_data* %156, i32 32808, i32 3) #11, !dbg !9476
  store i32 %call214, i32* %status, align 4, !dbg !9477
  %157 = load i32, i32* %status, align 4, !dbg !9478
  %cmp215 = icmp slt i32 %157, 0, !dbg !9478
  br i1 %cmp215, label %if.then217, label %if.end219, !dbg !9481

if.then217:                                       ; preds = %if.end213
  %call218 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.44, i64 0, i64 0)) #12, !dbg !9482
  %158 = load i32, i32* %status, align 4, !dbg !9482
  store i32 %158, i32* %retval, align 4, !dbg !9482
  br label %return, !dbg !9482

if.end219:                                        ; preds = %if.end213
  %159 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !9484
  %call220 = call i32 @ufx_reg_write(%struct.ufx_data* %159, i32 32804, i32 7) #11, !dbg !9485
  store i32 %call220, i32* %status, align 4, !dbg !9486
  %160 = load i32, i32* %status, align 4, !dbg !9487
  %cmp221 = icmp slt i32 %160, 0, !dbg !9487
  br i1 %cmp221, label %if.then223, label %if.end225, !dbg !9490

if.then223:                                       ; preds = %if.end219
  %call224 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.45, i64 0, i64 0)) #12, !dbg !9491
  %161 = load i32, i32* %status, align 4, !dbg !9491
  store i32 %161, i32* %retval, align 4, !dbg !9491
  br label %return, !dbg !9491

if.end225:                                        ; preds = %if.end219
  store i32 0, i32* %retval, align 4, !dbg !9493
  br label %return, !dbg !9493

return:                                           ; preds = %if.end225, %if.then223, %if.then217, %if.then211, %if.then205, %if.then199, %if.then183, %if.then177, %if.then171, %if.then165, %if.then155, %if.then149, %if.then143, %if.then131, %if.then119, %if.then81, %if.then69, %if.then57, %if.then24, %if.then19, %if.then14, %if.then9, %if.then4, %if.then
  %162 = load i32, i32* %retval, align 4, !dbg !9494
  ret i32 %162, !dbg !9494
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ufx_reg_write(%struct.ufx_data* %dev, i32 %index, i32 %data) #2 !dbg !9495 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !5399, metadata !DIExpression()), !dbg !9496
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !5409, metadata !DIExpression()), !dbg !9499
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !5411, metadata !DIExpression()), !dbg !9500
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !5413, metadata !DIExpression()), !dbg !9501
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !5415, metadata !DIExpression()), !dbg !9502
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !5421, metadata !DIExpression()), !dbg !9504
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !5427, metadata !DIExpression()), !dbg !9506
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !5436, metadata !DIExpression()), !dbg !9509
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !5438, metadata !DIExpression()), !dbg !9510
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !5440, metadata !DIExpression()), !dbg !9511
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !5442, metadata !DIExpression()), !dbg !9512
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !5444, metadata !DIExpression()), !dbg !9513
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !5446, metadata !DIExpression()), !dbg !9514
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !5448, metadata !DIExpression()), !dbg !9515
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !5450, metadata !DIExpression()), !dbg !9516
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.ufx_data*, align 8
  %index.addr = alloca i32, align 4
  %data.addr = alloca i32, align 4
  %buf = alloca i32*, align 8
  %ret = alloca i32, align 4
  store %struct.ufx_data* %dev, %struct.ufx_data** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ufx_data** %dev.addr, metadata !9517, metadata !DIExpression()), !dbg !9518
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !9519, metadata !DIExpression()), !dbg !9520
  store i32 %data, i32* %data.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %data.addr, metadata !9521, metadata !DIExpression()), !dbg !9522
  call void @llvm.dbg.declare(metadata i32** %buf, metadata !9523, metadata !DIExpression()), !dbg !9524
  store i64 4, i64* %size.addr.i, align 8
  store i32 3264, i32* %flags.addr.i, align 4
  %0 = load i64, i64* %size.addr.i, align 8, !dbg !9525
  %1 = call i1 @llvm.is.constant.i64(i64 %0) #10, !dbg !9526
  br i1 %1, label %if.then.i, label %if.end9.i, !dbg !9527

if.then.i:                                        ; preds = %entry
  %2 = load i64, i64* %size.addr.i, align 8, !dbg !9528
  %cmp.i = icmp ugt i64 %2, 8192, !dbg !9529
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !9530

if.then1.i:                                       ; preds = %if.then.i
  %3 = load i64, i64* %size.addr.i, align 8, !dbg !9531
  %4 = load i32, i32* %flags.addr.i, align 4, !dbg !9532
  store i64 %3, i64* %size.addr.i.i, align 8
  store i32 %4, i32* %flags.addr.i.i, align 4
  %5 = load i64, i64* %size.addr.i.i, align 8, !dbg !9533
  %call.i.i = call i32 @get_order(i64 %5) #14, !dbg !9534
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !9513
  %6 = load i64, i64* %size.addr.i.i, align 8, !dbg !9535
  %7 = load i32, i32* %flags.addr.i.i, align 4, !dbg !9536
  %8 = load i32, i32* %order.i.i, align 4, !dbg !9537
  store i64 %6, i64* %size.addr.i.i.i, align 8
  store i32 %7, i32* %flags.addr.i.i.i, align 4
  store i32 %8, i32* %order.addr.i.i.i, align 4
  %9 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !9538
  %10 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !9539
  %11 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !9540
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %9, i32 %10, i32 %11) #13, !dbg !9541
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !9541
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !9541
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !9541
  call void @llvm.assume(i1 %maskcond.i.i.i) #10, !dbg !9541
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !9542
  br label %kmalloc.exit, !dbg !9542

if.end.i:                                         ; preds = %if.then.i
  %12 = load i64, i64* %size.addr.i, align 8, !dbg !9543
  store i64 %12, i64* %size.addr.i11.i, align 8
  %13 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9544
  %tobool.i.i = icmp ne i64 %13, 0, !dbg !9544
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !9545

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !9546
  br label %kmalloc_index.exit.i, !dbg !9546

if.end.i.i:                                       ; preds = %if.end.i
  %14 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9547
  %cmp.i.i = icmp ule i64 %14, 8, !dbg !9548
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !9549

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !9550
  br label %kmalloc_index.exit.i, !dbg !9550

if.end2.i.i:                                      ; preds = %if.end.i.i
  %15 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9551
  %cmp3.i.i = icmp ugt i64 %15, 64, !dbg !9552
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !9553

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %16 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9554
  %cmp4.i.i = icmp ule i64 %16, 96, !dbg !9555
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !9556

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !9557
  br label %kmalloc_index.exit.i, !dbg !9557

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %17 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9558
  %cmp7.i.i = icmp ugt i64 %17, 128, !dbg !9559
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !9560

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %18 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9561
  %cmp9.i.i = icmp ule i64 %18, 192, !dbg !9562
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !9563

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !9564
  br label %kmalloc_index.exit.i, !dbg !9564

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %19 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9565
  %cmp12.i.i = icmp ule i64 %19, 8, !dbg !9566
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !9567

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !9568
  br label %kmalloc_index.exit.i, !dbg !9568

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %20 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9569
  %cmp15.i.i = icmp ule i64 %20, 16, !dbg !9570
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !9571

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !9572
  br label %kmalloc_index.exit.i, !dbg !9572

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %21 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9573
  %cmp18.i.i = icmp ule i64 %21, 32, !dbg !9574
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !9575

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !9576
  br label %kmalloc_index.exit.i, !dbg !9576

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %22 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9577
  %cmp21.i.i = icmp ule i64 %22, 64, !dbg !9578
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !9579

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !9580
  br label %kmalloc_index.exit.i, !dbg !9580

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %23 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9581
  %cmp24.i.i = icmp ule i64 %23, 128, !dbg !9582
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !9583

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !9584
  br label %kmalloc_index.exit.i, !dbg !9584

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %24 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9585
  %cmp27.i.i = icmp ule i64 %24, 256, !dbg !9586
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !9587

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !9588
  br label %kmalloc_index.exit.i, !dbg !9588

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %25 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9589
  %cmp30.i.i = icmp ule i64 %25, 512, !dbg !9590
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !9591

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !9592
  br label %kmalloc_index.exit.i, !dbg !9592

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %26 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9593
  %cmp33.i.i = icmp ule i64 %26, 1024, !dbg !9594
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !9595

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !9596
  br label %kmalloc_index.exit.i, !dbg !9596

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %27 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9597
  %cmp36.i.i = icmp ule i64 %27, 2048, !dbg !9598
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !9599

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !9600
  br label %kmalloc_index.exit.i, !dbg !9600

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %28 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9601
  %cmp39.i.i = icmp ule i64 %28, 4096, !dbg !9602
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !9603

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !9604
  br label %kmalloc_index.exit.i, !dbg !9604

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9605
  %cmp42.i.i = icmp ule i64 %29, 8192, !dbg !9606
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !9607

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !9608
  br label %kmalloc_index.exit.i, !dbg !9608

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9609
  %cmp45.i.i = icmp ule i64 %30, 16384, !dbg !9610
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !9611

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !9612
  br label %kmalloc_index.exit.i, !dbg !9612

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9613
  %cmp48.i.i = icmp ule i64 %31, 32768, !dbg !9614
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !9615

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !9616
  br label %kmalloc_index.exit.i, !dbg !9616

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9617
  %cmp51.i.i = icmp ule i64 %32, 65536, !dbg !9618
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !9619

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !9620
  br label %kmalloc_index.exit.i, !dbg !9620

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9621
  %cmp54.i.i = icmp ule i64 %33, 131072, !dbg !9622
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !9623

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !9624
  br label %kmalloc_index.exit.i, !dbg !9624

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9625
  %cmp57.i.i = icmp ule i64 %34, 262144, !dbg !9626
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !9627

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !9628
  br label %kmalloc_index.exit.i, !dbg !9628

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9629
  %cmp60.i.i = icmp ule i64 %35, 524288, !dbg !9630
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !9631

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !9632
  br label %kmalloc_index.exit.i, !dbg !9632

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9633
  %cmp63.i.i = icmp ule i64 %36, 1048576, !dbg !9634
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !9635

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !9636
  br label %kmalloc_index.exit.i, !dbg !9636

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9637
  %cmp66.i.i = icmp ule i64 %37, 2097152, !dbg !9638
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !9639

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !9640
  br label %kmalloc_index.exit.i, !dbg !9640

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9641
  %cmp69.i.i = icmp ule i64 %38, 4194304, !dbg !9642
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !9643

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !9644
  br label %kmalloc_index.exit.i, !dbg !9644

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9645
  %cmp72.i.i = icmp ule i64 %39, 8388608, !dbg !9646
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !9647

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !9648
  br label %kmalloc_index.exit.i, !dbg !9648

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9649
  %cmp75.i.i = icmp ule i64 %40, 16777216, !dbg !9650
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !9651

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !9652
  br label %kmalloc_index.exit.i, !dbg !9652

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9653
  %cmp78.i.i = icmp ule i64 %41, 33554432, !dbg !9654
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !9655

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !9656
  br label %kmalloc_index.exit.i, !dbg !9656

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9657
  %cmp81.i.i = icmp ule i64 %42, 67108864, !dbg !9658
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !9659

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !9660
  br label %kmalloc_index.exit.i, !dbg !9660

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.17, i64 0, i64 0), i32 382, i32 0, i64 12) #10, !dbg !9661, !srcloc !5626
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 239) #10, !dbg !9662, !srcloc !5630
  unreachable, !dbg !9663

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %43 = load i32, i32* %retval.i.i, align 4, !dbg !9664
  store i32 %43, i32* %index.i, align 4, !dbg !9665
  %44 = load i32, i32* %index.i, align 4, !dbg !9666
  %tobool.i = icmp ne i32 %44, 0, !dbg !9666
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !9667

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !9668
  br label %kmalloc.exit, !dbg !9668

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %45 = load i32, i32* %flags.addr.i, align 4, !dbg !9669
  store i32 %45, i32* %flags.addr.i13.i, align 4
  %46 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !9670
  %and.i.i = and i32 %46, 17, !dbg !9670
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !9670
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !9670
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !9670
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !9670
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !9671

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !9672
  br label %kmalloc_type.exit.i, !dbg !9672

if.end.i16.i:                                     ; preds = %if.end4.i
  %47 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !9673
  %and2.i.i = and i32 %47, 1, !dbg !9674
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !9673
  %48 = zext i1 %tobool3.i.i to i64, !dbg !9673
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !9673
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !9675
  br label %kmalloc_type.exit.i, !dbg !9675

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %49 = load i32, i32* %retval.i12.i, align 4, !dbg !9676
  %idxprom.i = zext i32 %49 to i64, !dbg !9677
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !9677
  %50 = load i32, i32* %index.i, align 4, !dbg !9678
  %idxprom6.i = zext i32 %50 to i64, !dbg !9677
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !9677
  %51 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !9677
  %52 = load i32, i32* %flags.addr.i, align 4, !dbg !9679
  %53 = load i64, i64* %size.addr.i, align 8, !dbg !9680
  store %struct.kmem_cache* %51, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %52, i32* %flags.addr.i17.i, align 4
  store i64 %53, i64* %size.addr.i18.i, align 8
  %54 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !9681
  %55 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !9682
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %54, i32 %55) #13, !dbg !9683
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !9683
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !9683
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !9683
  call void @llvm.assume(i1 %maskcond.i.i) #10, !dbg !9683
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !9501
  %56 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !9684
  %57 = load i8*, i8** %ret.i.i, align 8, !dbg !9685
  %58 = load i64, i64* %size.addr.i18.i, align 8, !dbg !9686
  %59 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !9687
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %56, i8* %57, i64 %58, i32 %59) #13, !dbg !9688
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !9689
  %60 = load i8*, i8** %ret.i.i, align 8, !dbg !9690
  store i8* %60, i8** %retval.i, align 8, !dbg !9691
  br label %kmalloc.exit, !dbg !9691

if.end9.i:                                        ; preds = %entry
  %61 = load i64, i64* %size.addr.i, align 8, !dbg !9692
  %62 = load i32, i32* %flags.addr.i, align 4, !dbg !9693
  %call10.i = call noalias i8* @__kmalloc(i64 %61, i32 %62) #13, !dbg !9694
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !9694
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !9694
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !9694
  call void @llvm.assume(i1 %maskcond.i) #10, !dbg !9694
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !9695
  br label %kmalloc.exit, !dbg !9695

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %63 = load i8*, i8** %retval.i, align 8, !dbg !9696
  %64 = bitcast i8* %63 to i32*, !dbg !9697
  store i32* %64, i32** %buf, align 8, !dbg !9524
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9698, metadata !DIExpression()), !dbg !9699
  br label %do.body, !dbg !9700

do.body:                                          ; preds = %kmalloc.exit
  %65 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !9701
  %tobool = icmp ne %struct.ufx_data* %65, null, !dbg !9701
  %lnot = xor i1 %tobool, true, !dbg !9701
  %lnot1 = xor i1 %lnot, true, !dbg !9701
  %lnot2 = xor i1 %lnot1, true, !dbg !9701
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !9701
  %conv = sext i32 %lnot.ext to i64, !dbg !9701
  %tobool3 = icmp ne i64 %conv, 0, !dbg !9701
  br i1 %tobool3, label %if.then, label %if.end, !dbg !9704

if.then:                                          ; preds = %do.body
  br label %do.body4, !dbg !9701

do.body4:                                         ; preds = %if.then
  br label %do.body5, !dbg !9705

do.body5:                                         ; preds = %do.body4
  br label %do.end, !dbg !9707

do.end:                                           ; preds = %do.body5
  br label %do.body6, !dbg !9705

do.body6:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.1, i64 0, i64 0), i32 172, i32 0, i64 12) #10, !dbg !9709, !srcloc !9711
  br label %do.end7, !dbg !9709

do.end7:                                          ; preds = %do.body6
  br label %do.body8, !dbg !9705

do.body8:                                         ; preds = %do.end7
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 248) #10, !dbg !9712, !srcloc !9715
  unreachable, !dbg !9716

do.end9:                                          ; No predecessors!
  br label %do.end10, !dbg !9705

do.end10:                                         ; preds = %do.end9
  br label %if.end, !dbg !9705

if.end:                                           ; preds = %do.end10, %do.body
  br label %do.end11, !dbg !9704

do.end11:                                         ; preds = %if.end
  %66 = load i32*, i32** %buf, align 8, !dbg !9717
  %tobool12 = icmp ne i32* %66, null, !dbg !9717
  br i1 %tobool12, label %if.end14, label %if.then13, !dbg !9719

if.then13:                                        ; preds = %do.end11
  store i32 -12, i32* %retval, align 4, !dbg !9720
  br label %return, !dbg !9720

if.end14:                                         ; preds = %do.end11
  %67 = load i32, i32* %data.addr, align 4, !dbg !9721
  %68 = load i32*, i32** %buf, align 8, !dbg !9722
  store i32 %67, i32* %68, align 4, !dbg !9723
  br label %do.body15, !dbg !9724

do.body15:                                        ; preds = %if.end14
  %69 = load i32*, i32** %buf, align 8, !dbg !9725
  br label %do.end16, !dbg !9725

do.end16:                                         ; preds = %do.body15
  %70 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !9727
  %udev = getelementptr inbounds %struct.ufx_data, %struct.ufx_data* %70, i32 0, i32 0, !dbg !9728
  %71 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !dbg !9728
  %72 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !9729
  %udev17 = getelementptr inbounds %struct.ufx_data, %struct.ufx_data* %72, i32 0, i32 0, !dbg !9729
  %73 = load %struct.usb_device*, %struct.usb_device** %udev17, align 8, !dbg !9729
  %call18 = call i32 @__create_pipe(%struct.usb_device* %73, i32 0) #11, !dbg !9729
  %or = or i32 -2147483648, %call18, !dbg !9729
  %74 = load i32, i32* %index.addr, align 4, !dbg !9730
  %conv19 = trunc i32 %74 to i16, !dbg !9730
  %75 = load i32*, i32** %buf, align 8, !dbg !9731
  %76 = bitcast i32* %75 to i8*, !dbg !9731
  %call20 = call i32 @usb_control_msg(%struct.usb_device* %71, i32 %or, i8 zeroext -96, i8 zeroext 64, i16 zeroext 0, i16 zeroext %conv19, i8* %76, i16 zeroext 4, i32 5000) #11, !dbg !9732
  store i32 %call20, i32* %ret, align 4, !dbg !9733
  %77 = load i32*, i32** %buf, align 8, !dbg !9734
  %78 = bitcast i32* %77 to i8*, !dbg !9734
  call void @kfree(i8* %78) #11, !dbg !9735
  %79 = load i32, i32* %ret, align 4, !dbg !9736
  %cmp = icmp slt i32 %79, 0, !dbg !9736
  %lnot22 = xor i1 %cmp, true, !dbg !9736
  %lnot24 = xor i1 %lnot22, true, !dbg !9736
  %lnot.ext25 = zext i1 %lnot24 to i32, !dbg !9736
  %conv26 = sext i32 %lnot.ext25 to i64, !dbg !9736
  %tobool27 = icmp ne i64 %conv26, 0, !dbg !9736
  br i1 %tobool27, label %if.then28, label %if.end30, !dbg !9738

if.then28:                                        ; preds = %do.end16
  %80 = load i32, i32* %index.addr, align 4, !dbg !9739
  %81 = load i32, i32* %data.addr, align 4, !dbg !9739
  %call29 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.46, i64 0, i64 0), i32 %80, i32 %81) #12, !dbg !9739
  br label %if.end30, !dbg !9739

if.end30:                                         ; preds = %if.then28, %do.end16
  %82 = load i32, i32* %ret, align 4, !dbg !9740
  store i32 %82, i32* %retval, align 4, !dbg !9741
  br label %return, !dbg !9741

return:                                           ; preds = %if.end30, %if.then13
  %83 = load i32, i32* %retval, align 4, !dbg !9742
  ret i32 %83, !dbg !9742
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ufx_blank(%struct.ufx_data* %dev, i1 zeroext %wait) #2 !dbg !9743 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.ufx_data*, align 8
  %wait.addr = alloca i8, align 1
  %dc_ctrl = alloca i32, align 4
  %dc_sts = alloca i32, align 4
  %i = alloca i32, align 4
  %status = alloca i32, align 4
  store %struct.ufx_data* %dev, %struct.ufx_data** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ufx_data** %dev.addr, metadata !9746, metadata !DIExpression()), !dbg !9747
  %frombool = zext i1 %wait to i8
  store i8 %frombool, i8* %wait.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %wait.addr, metadata !9748, metadata !DIExpression()), !dbg !9749
  call void @llvm.dbg.declare(metadata i32* %dc_ctrl, metadata !9750, metadata !DIExpression()), !dbg !9751
  call void @llvm.dbg.declare(metadata i32* %dc_sts, metadata !9752, metadata !DIExpression()), !dbg !9753
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9754, metadata !DIExpression()), !dbg !9755
  call void @llvm.dbg.declare(metadata i32* %status, metadata !9756, metadata !DIExpression()), !dbg !9757
  %0 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !9758
  %call = call i32 @ufx_reg_read(%struct.ufx_data* %0, i32 8196, i32* %dc_sts) #11, !dbg !9759
  store i32 %call, i32* %status, align 4, !dbg !9757
  %1 = load i32, i32* %status, align 4, !dbg !9760
  %cmp = icmp slt i32 %1, 0, !dbg !9760
  br i1 %cmp, label %if.then, label %if.end, !dbg !9763

if.then:                                          ; preds = %entry
  %call1 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.47, i64 0, i64 0)) #12, !dbg !9764
  %2 = load i32, i32* %status, align 4, !dbg !9764
  store i32 %2, i32* %retval, align 4, !dbg !9764
  br label %return, !dbg !9764

if.end:                                           ; preds = %entry
  %3 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !9766
  %call2 = call i32 @ufx_reg_read(%struct.ufx_data* %3, i32 8192, i32* %dc_ctrl) #11, !dbg !9767
  store i32 %call2, i32* %status, align 4, !dbg !9768
  %4 = load i32, i32* %status, align 4, !dbg !9769
  %cmp3 = icmp slt i32 %4, 0, !dbg !9769
  br i1 %cmp3, label %if.then4, label %if.end6, !dbg !9772

if.then4:                                         ; preds = %if.end
  %call5 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.48, i64 0, i64 0)) #12, !dbg !9773
  %5 = load i32, i32* %status, align 4, !dbg !9773
  store i32 %5, i32* %retval, align 4, !dbg !9773
  br label %return, !dbg !9773

if.end6:                                          ; preds = %if.end
  %6 = load i32, i32* %dc_sts, align 4, !dbg !9775
  %and = and i32 %6, 256, !dbg !9777
  %tobool = icmp ne i32 %and, 0, !dbg !9777
  br i1 %tobool, label %if.then9, label %lor.lhs.false, !dbg !9778

lor.lhs.false:                                    ; preds = %if.end6
  %7 = load i32, i32* %dc_ctrl, align 4, !dbg !9779
  %and7 = and i32 %7, 256, !dbg !9780
  %tobool8 = icmp ne i32 %and7, 0, !dbg !9780
  br i1 %tobool8, label %if.then9, label %if.end10, !dbg !9781

if.then9:                                         ; preds = %lor.lhs.false, %if.end6
  store i32 0, i32* %retval, align 4, !dbg !9782
  br label %return, !dbg !9782

if.end10:                                         ; preds = %lor.lhs.false
  %8 = load i32, i32* %dc_ctrl, align 4, !dbg !9783
  %or = or i32 %8, 256, !dbg !9783
  store i32 %or, i32* %dc_ctrl, align 4, !dbg !9783
  %9 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !9784
  %10 = load i32, i32* %dc_ctrl, align 4, !dbg !9785
  %call11 = call i32 @ufx_reg_write(%struct.ufx_data* %9, i32 8192, i32 %10) #11, !dbg !9786
  store i32 %call11, i32* %status, align 4, !dbg !9787
  %11 = load i32, i32* %status, align 4, !dbg !9788
  %cmp12 = icmp slt i32 %11, 0, !dbg !9788
  br i1 %cmp12, label %if.then13, label %if.end15, !dbg !9791

if.then13:                                        ; preds = %if.end10
  %call14 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.49, i64 0, i64 0)) #12, !dbg !9792
  %12 = load i32, i32* %status, align 4, !dbg !9792
  store i32 %12, i32* %retval, align 4, !dbg !9792
  br label %return, !dbg !9792

if.end15:                                         ; preds = %if.end10
  %13 = load i8, i8* %wait.addr, align 1, !dbg !9794
  %tobool16 = trunc i8 %13 to i1, !dbg !9794
  br i1 %tobool16, label %if.end18, label %if.then17, !dbg !9796

if.then17:                                        ; preds = %if.end15
  store i32 0, i32* %retval, align 4, !dbg !9797
  br label %return, !dbg !9797

if.end18:                                         ; preds = %if.end15
  store i32 0, i32* %i, align 4, !dbg !9798
  br label %for.cond, !dbg !9800

for.cond:                                         ; preds = %for.inc, %if.end18
  %14 = load i32, i32* %i, align 4, !dbg !9801
  %cmp19 = icmp slt i32 %14, 250, !dbg !9803
  br i1 %cmp19, label %for.body, label %for.end, !dbg !9804

for.body:                                         ; preds = %for.cond
  %15 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !9805
  %call20 = call i32 @ufx_reg_read(%struct.ufx_data* %15, i32 8196, i32* %dc_sts) #11, !dbg !9807
  store i32 %call20, i32* %status, align 4, !dbg !9808
  %16 = load i32, i32* %status, align 4, !dbg !9809
  %cmp21 = icmp slt i32 %16, 0, !dbg !9809
  br i1 %cmp21, label %if.then22, label %if.end24, !dbg !9812

if.then22:                                        ; preds = %for.body
  %call23 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.47, i64 0, i64 0)) #12, !dbg !9813
  %17 = load i32, i32* %status, align 4, !dbg !9813
  store i32 %17, i32* %retval, align 4, !dbg !9813
  br label %return, !dbg !9813

if.end24:                                         ; preds = %for.body
  %18 = load i32, i32* %dc_sts, align 4, !dbg !9815
  %and25 = and i32 %18, 256, !dbg !9817
  %tobool26 = icmp ne i32 %and25, 0, !dbg !9817
  br i1 %tobool26, label %if.then27, label %if.end28, !dbg !9818

if.then27:                                        ; preds = %if.end24
  store i32 0, i32* %retval, align 4, !dbg !9819
  br label %return, !dbg !9819

if.end28:                                         ; preds = %if.end24
  br label %for.inc, !dbg !9820

for.inc:                                          ; preds = %if.end28
  %19 = load i32, i32* %i, align 4, !dbg !9821
  %inc = add i32 %19, 1, !dbg !9821
  store i32 %inc, i32* %i, align 4, !dbg !9821
  br label %for.cond, !dbg !9822, !llvm.loop !9823

for.end:                                          ; preds = %for.cond
  store i32 -5, i32* %retval, align 4, !dbg !9825
  br label %return, !dbg !9825

return:                                           ; preds = %for.end, %if.then27, %if.then22, %if.then17, %if.then13, %if.then9, %if.then4, %if.then
  %20 = load i32, i32* %retval, align 4, !dbg !9826
  ret i32 %20, !dbg !9826
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ufx_disable(%struct.ufx_data* %dev, i1 zeroext %wait) #2 !dbg !9827 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.ufx_data*, align 8
  %wait.addr = alloca i8, align 1
  %dc_ctrl = alloca i32, align 4
  %dc_sts = alloca i32, align 4
  %i = alloca i32, align 4
  %status = alloca i32, align 4
  store %struct.ufx_data* %dev, %struct.ufx_data** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ufx_data** %dev.addr, metadata !9828, metadata !DIExpression()), !dbg !9829
  %frombool = zext i1 %wait to i8
  store i8 %frombool, i8* %wait.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %wait.addr, metadata !9830, metadata !DIExpression()), !dbg !9831
  call void @llvm.dbg.declare(metadata i32* %dc_ctrl, metadata !9832, metadata !DIExpression()), !dbg !9833
  call void @llvm.dbg.declare(metadata i32* %dc_sts, metadata !9834, metadata !DIExpression()), !dbg !9835
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9836, metadata !DIExpression()), !dbg !9837
  call void @llvm.dbg.declare(metadata i32* %status, metadata !9838, metadata !DIExpression()), !dbg !9839
  %0 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !9840
  %call = call i32 @ufx_reg_read(%struct.ufx_data* %0, i32 8196, i32* %dc_sts) #11, !dbg !9841
  store i32 %call, i32* %status, align 4, !dbg !9839
  %1 = load i32, i32* %status, align 4, !dbg !9842
  %cmp = icmp slt i32 %1, 0, !dbg !9842
  br i1 %cmp, label %if.then, label %if.end, !dbg !9845

if.then:                                          ; preds = %entry
  %call1 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.50, i64 0, i64 0)) #12, !dbg !9846
  %2 = load i32, i32* %status, align 4, !dbg !9846
  store i32 %2, i32* %retval, align 4, !dbg !9846
  br label %return, !dbg !9846

if.end:                                           ; preds = %entry
  %3 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !9848
  %call2 = call i32 @ufx_reg_read(%struct.ufx_data* %3, i32 8192, i32* %dc_ctrl) #11, !dbg !9849
  store i32 %call2, i32* %status, align 4, !dbg !9850
  %4 = load i32, i32* %status, align 4, !dbg !9851
  %cmp3 = icmp slt i32 %4, 0, !dbg !9851
  br i1 %cmp3, label %if.then4, label %if.end6, !dbg !9854

if.then4:                                         ; preds = %if.end
  %call5 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.51, i64 0, i64 0)) #12, !dbg !9855
  %5 = load i32, i32* %status, align 4, !dbg !9855
  store i32 %5, i32* %retval, align 4, !dbg !9855
  br label %return, !dbg !9855

if.end6:                                          ; preds = %if.end
  %6 = load i32, i32* %dc_sts, align 4, !dbg !9857
  %and = and i32 %6, 1, !dbg !9859
  %cmp7 = icmp eq i32 %and, 0, !dbg !9860
  br i1 %cmp7, label %if.then10, label %lor.lhs.false, !dbg !9861

lor.lhs.false:                                    ; preds = %if.end6
  %7 = load i32, i32* %dc_ctrl, align 4, !dbg !9862
  %and8 = and i32 %7, 1, !dbg !9863
  %cmp9 = icmp eq i32 %and8, 0, !dbg !9864
  br i1 %cmp9, label %if.then10, label %if.end11, !dbg !9865

if.then10:                                        ; preds = %lor.lhs.false, %if.end6
  store i32 0, i32* %retval, align 4, !dbg !9866
  br label %return, !dbg !9866

if.end11:                                         ; preds = %lor.lhs.false
  %8 = load i32, i32* %dc_ctrl, align 4, !dbg !9867
  %and12 = and i32 %8, -2, !dbg !9867
  store i32 %and12, i32* %dc_ctrl, align 4, !dbg !9867
  %9 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !9868
  %10 = load i32, i32* %dc_ctrl, align 4, !dbg !9869
  %call13 = call i32 @ufx_reg_write(%struct.ufx_data* %9, i32 8192, i32 %10) #11, !dbg !9870
  store i32 %call13, i32* %status, align 4, !dbg !9871
  %11 = load i32, i32* %status, align 4, !dbg !9872
  %cmp14 = icmp slt i32 %11, 0, !dbg !9872
  br i1 %cmp14, label %if.then15, label %if.end17, !dbg !9875

if.then15:                                        ; preds = %if.end11
  %call16 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.52, i64 0, i64 0)) #12, !dbg !9876
  %12 = load i32, i32* %status, align 4, !dbg !9876
  store i32 %12, i32* %retval, align 4, !dbg !9876
  br label %return, !dbg !9876

if.end17:                                         ; preds = %if.end11
  %13 = load i8, i8* %wait.addr, align 1, !dbg !9878
  %tobool = trunc i8 %13 to i1, !dbg !9878
  br i1 %tobool, label %if.end19, label %if.then18, !dbg !9880

if.then18:                                        ; preds = %if.end17
  store i32 0, i32* %retval, align 4, !dbg !9881
  br label %return, !dbg !9881

if.end19:                                         ; preds = %if.end17
  store i32 0, i32* %i, align 4, !dbg !9882
  br label %for.cond, !dbg !9884

for.cond:                                         ; preds = %for.inc, %if.end19
  %14 = load i32, i32* %i, align 4, !dbg !9885
  %cmp20 = icmp slt i32 %14, 250, !dbg !9887
  br i1 %cmp20, label %for.body, label %for.end, !dbg !9888

for.body:                                         ; preds = %for.cond
  %15 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !9889
  %call21 = call i32 @ufx_reg_read(%struct.ufx_data* %15, i32 8196, i32* %dc_sts) #11, !dbg !9891
  store i32 %call21, i32* %status, align 4, !dbg !9892
  %16 = load i32, i32* %status, align 4, !dbg !9893
  %cmp22 = icmp slt i32 %16, 0, !dbg !9893
  br i1 %cmp22, label %if.then23, label %if.end25, !dbg !9896

if.then23:                                        ; preds = %for.body
  %call24 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.50, i64 0, i64 0)) #12, !dbg !9897
  %17 = load i32, i32* %status, align 4, !dbg !9897
  store i32 %17, i32* %retval, align 4, !dbg !9897
  br label %return, !dbg !9897

if.end25:                                         ; preds = %for.body
  %18 = load i32, i32* %dc_sts, align 4, !dbg !9899
  %and26 = and i32 %18, 1, !dbg !9901
  %cmp27 = icmp eq i32 %and26, 0, !dbg !9902
  br i1 %cmp27, label %if.then28, label %if.end29, !dbg !9903

if.then28:                                        ; preds = %if.end25
  store i32 0, i32* %retval, align 4, !dbg !9904
  br label %return, !dbg !9904

if.end29:                                         ; preds = %if.end25
  br label %for.inc, !dbg !9905

for.inc:                                          ; preds = %if.end29
  %19 = load i32, i32* %i, align 4, !dbg !9906
  %inc = add i32 %19, 1, !dbg !9906
  store i32 %inc, i32* %i, align 4, !dbg !9906
  br label %for.cond, !dbg !9907, !llvm.loop !9908

for.end:                                          ; preds = %for.cond
  store i32 -5, i32* %retval, align 4, !dbg !9910
  br label %return, !dbg !9910

return:                                           ; preds = %for.end, %if.then28, %if.then23, %if.then18, %if.then15, %if.then10, %if.then4, %if.then
  %20 = load i32, i32* %retval, align 4, !dbg !9911
  ret i32 %20, !dbg !9911
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ufx_config_pix_clk(%struct.ufx_data* %dev, i32 %pixclock) #2 !dbg !9912 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.ufx_data*, align 8
  %pixclock.addr = alloca i32, align 4
  %asic_pll = alloca %struct.pll_values, align 4
  %value = alloca i32, align 4
  %clk_pixel = alloca i32, align 4
  %clk_pixel_pll = alloca i32, align 4
  %status = alloca i32, align 4
  %tmp = alloca i32, align 4
  store %struct.ufx_data* %dev, %struct.ufx_data** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ufx_data** %dev.addr, metadata !9915, metadata !DIExpression()), !dbg !9916
  store i32 %pixclock, i32* %pixclock.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %pixclock.addr, metadata !9917, metadata !DIExpression()), !dbg !9918
  call void @llvm.dbg.declare(metadata %struct.pll_values* %asic_pll, metadata !9919, metadata !DIExpression()), !dbg !9930
  %0 = bitcast %struct.pll_values* %asic_pll to i8*, !dbg !9930
  call void @llvm.memset.p0i8.i64(i8* align 4 %0, i8 0, i64 32, i1 false), !dbg !9930
  call void @llvm.dbg.declare(metadata i32* %value, metadata !9931, metadata !DIExpression()), !dbg !9932
  call void @llvm.dbg.declare(metadata i32* %clk_pixel, metadata !9933, metadata !DIExpression()), !dbg !9934
  call void @llvm.dbg.declare(metadata i32* %clk_pixel_pll, metadata !9935, metadata !DIExpression()), !dbg !9936
  call void @llvm.dbg.declare(metadata i32* %status, metadata !9937, metadata !DIExpression()), !dbg !9938
  %1 = load i32, i32* %pixclock.addr, align 4, !dbg !9939
  %conv = zext i32 %1 to i64, !dbg !9939
  %div = udiv i64 1000000000, %conv, !dbg !9939
  %mul = mul i64 %div, 1000, !dbg !9940
  %conv1 = trunc i64 %mul to i32, !dbg !9939
  store i32 %conv1, i32* %clk_pixel, align 4, !dbg !9941
  store i32 0, i32* %tmp, align 4, !dbg !9942
  %2 = load i32, i32* %tmp, align 4, !dbg !9945
  %3 = load i32, i32* %clk_pixel, align 4, !dbg !9946
  %mul2 = mul i32 %3, 2, !dbg !9947
  store i32 %mul2, i32* %clk_pixel_pll, align 4, !dbg !9948
  %4 = load i32, i32* %clk_pixel_pll, align 4, !dbg !9949
  call void @ufx_calc_pll_values(i32 %4, %struct.pll_values* %asic_pll) #11, !dbg !9950
  %5 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !9951
  %call = call i32 @ufx_reg_write(%struct.ufx_data* %5, i32 28672, i32 -2147483633) #11, !dbg !9952
  store i32 %call, i32* %status, align 4, !dbg !9953
  %6 = load i32, i32* %status, align 4, !dbg !9954
  %cmp = icmp slt i32 %6, 0, !dbg !9954
  br i1 %cmp, label %if.then, label %if.end, !dbg !9957

if.then:                                          ; preds = %entry
  %call4 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.53, i64 0, i64 0)) #12, !dbg !9958
  %7 = load i32, i32* %status, align 4, !dbg !9958
  store i32 %7, i32* %retval, align 4, !dbg !9958
  br label %return, !dbg !9958

if.end:                                           ; preds = %entry
  %div_f1 = getelementptr inbounds %struct.pll_values, %struct.pll_values* %asic_pll, i32 0, i32 5, !dbg !9960
  %8 = load i32, i32* %div_f1, align 4, !dbg !9960
  %div_r1 = getelementptr inbounds %struct.pll_values, %struct.pll_values* %asic_pll, i32 0, i32 4, !dbg !9961
  %9 = load i32, i32* %div_r1, align 4, !dbg !9961
  %shl = shl i32 %9, 8, !dbg !9962
  %or = or i32 %8, %shl, !dbg !9963
  %div_q1 = getelementptr inbounds %struct.pll_values, %struct.pll_values* %asic_pll, i32 0, i32 6, !dbg !9964
  %10 = load i32, i32* %div_q1, align 4, !dbg !9964
  %shl5 = shl i32 %10, 16, !dbg !9965
  %or6 = or i32 %or, %shl5, !dbg !9966
  %range1 = getelementptr inbounds %struct.pll_values, %struct.pll_values* %asic_pll, i32 0, i32 7, !dbg !9967
  %11 = load i32, i32* %range1, align 4, !dbg !9967
  %shl7 = shl i32 %11, 20, !dbg !9968
  %or8 = or i32 %or6, %shl7, !dbg !9969
  store i32 %or8, i32* %value, align 4, !dbg !9970
  %12 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !9971
  %13 = load i32, i32* %value, align 4, !dbg !9972
  %call9 = call i32 @ufx_reg_write(%struct.ufx_data* %12, i32 28680, i32 %13) #11, !dbg !9973
  store i32 %call9, i32* %status, align 4, !dbg !9974
  %14 = load i32, i32* %status, align 4, !dbg !9975
  %cmp10 = icmp slt i32 %14, 0, !dbg !9975
  br i1 %cmp10, label %if.then12, label %if.end14, !dbg !9978

if.then12:                                        ; preds = %if.end
  %call13 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.54, i64 0, i64 0)) #12, !dbg !9979
  %15 = load i32, i32* %status, align 4, !dbg !9979
  store i32 %15, i32* %retval, align 4, !dbg !9979
  br label %return, !dbg !9979

if.end14:                                         ; preds = %if.end
  %div_f0 = getelementptr inbounds %struct.pll_values, %struct.pll_values* %asic_pll, i32 0, i32 1, !dbg !9981
  %16 = load i32, i32* %div_f0, align 4, !dbg !9981
  %div_r0 = getelementptr inbounds %struct.pll_values, %struct.pll_values* %asic_pll, i32 0, i32 0, !dbg !9982
  %17 = load i32, i32* %div_r0, align 4, !dbg !9982
  %shl15 = shl i32 %17, 8, !dbg !9983
  %or16 = or i32 %16, %shl15, !dbg !9984
  %div_q0 = getelementptr inbounds %struct.pll_values, %struct.pll_values* %asic_pll, i32 0, i32 2, !dbg !9985
  %18 = load i32, i32* %div_q0, align 4, !dbg !9985
  %shl17 = shl i32 %18, 16, !dbg !9986
  %or18 = or i32 %or16, %shl17, !dbg !9987
  %range0 = getelementptr inbounds %struct.pll_values, %struct.pll_values* %asic_pll, i32 0, i32 3, !dbg !9988
  %19 = load i32, i32* %range0, align 4, !dbg !9988
  %shl19 = shl i32 %19, 20, !dbg !9989
  %or20 = or i32 %or18, %shl19, !dbg !9990
  store i32 %or20, i32* %value, align 4, !dbg !9991
  %20 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !9992
  %21 = load i32, i32* %value, align 4, !dbg !9993
  %call21 = call i32 @ufx_reg_write(%struct.ufx_data* %20, i32 28676, i32 %21) #11, !dbg !9994
  store i32 %call21, i32* %status, align 4, !dbg !9995
  %22 = load i32, i32* %status, align 4, !dbg !9996
  %cmp22 = icmp slt i32 %22, 0, !dbg !9996
  br i1 %cmp22, label %if.then24, label %if.end26, !dbg !9999

if.then24:                                        ; preds = %if.end14
  %call25 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.55, i64 0, i64 0)) #12, !dbg !10000
  %23 = load i32, i32* %status, align 4, !dbg !10000
  store i32 %23, i32* %retval, align 4, !dbg !10000
  br label %return, !dbg !10000

if.end26:                                         ; preds = %if.end14
  %24 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !10002
  %call27 = call i32 @ufx_reg_clear_bits(%struct.ufx_data* %24, i32 28672, i32 5) #11, !dbg !10003
  store i32 %call27, i32* %status, align 4, !dbg !10004
  %25 = load i32, i32* %status, align 4, !dbg !10005
  %cmp28 = icmp slt i32 %25, 0, !dbg !10005
  br i1 %cmp28, label %if.then30, label %if.end32, !dbg !10008

if.then30:                                        ; preds = %if.end26
  %call31 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.56, i64 0, i64 0)) #12, !dbg !10009
  %26 = load i32, i32* %status, align 4, !dbg !10009
  store i32 %26, i32* %retval, align 4, !dbg !10009
  br label %return, !dbg !10009

if.end32:                                         ; preds = %if.end26
  call void @msleep(i32 1) #11, !dbg !10011
  %27 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !10012
  %call33 = call i32 @ufx_reg_clear_bits(%struct.ufx_data* %27, i32 28672, i32 10) #11, !dbg !10013
  store i32 %call33, i32* %status, align 4, !dbg !10014
  %28 = load i32, i32* %status, align 4, !dbg !10015
  %cmp34 = icmp slt i32 %28, 0, !dbg !10015
  br i1 %cmp34, label %if.then36, label %if.end38, !dbg !10018

if.then36:                                        ; preds = %if.end32
  %call37 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.57, i64 0, i64 0)) #12, !dbg !10019
  %29 = load i32, i32* %status, align 4, !dbg !10019
  store i32 %29, i32* %retval, align 4, !dbg !10019
  br label %return, !dbg !10019

if.end38:                                         ; preds = %if.end32
  call void @msleep(i32 1) #11, !dbg !10021
  %30 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !10022
  %call39 = call i32 @ufx_reg_clear_bits(%struct.ufx_data* %30, i32 28672, i32 -2147483648) #11, !dbg !10023
  store i32 %call39, i32* %status, align 4, !dbg !10024
  %31 = load i32, i32* %status, align 4, !dbg !10025
  %cmp40 = icmp slt i32 %31, 0, !dbg !10025
  br i1 %cmp40, label %if.then42, label %if.end44, !dbg !10028

if.then42:                                        ; preds = %if.end38
  %call43 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.58, i64 0, i64 0)) #12, !dbg !10029
  %32 = load i32, i32* %status, align 4, !dbg !10029
  store i32 %32, i32* %retval, align 4, !dbg !10029
  br label %return, !dbg !10029

if.end44:                                         ; preds = %if.end38
  store i32 0, i32* %retval, align 4, !dbg !10031
  br label %return, !dbg !10031

return:                                           ; preds = %if.end44, %if.then42, %if.then36, %if.then30, %if.then24, %if.then12, %if.then
  %33 = load i32, i32* %retval, align 4, !dbg !10032
  ret i32 %33, !dbg !10032
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ufx_enable(%struct.ufx_data* %dev, i1 zeroext %wait) #2 !dbg !10033 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.ufx_data*, align 8
  %wait.addr = alloca i8, align 1
  %dc_ctrl = alloca i32, align 4
  %dc_sts = alloca i32, align 4
  %i = alloca i32, align 4
  %status = alloca i32, align 4
  store %struct.ufx_data* %dev, %struct.ufx_data** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ufx_data** %dev.addr, metadata !10034, metadata !DIExpression()), !dbg !10035
  %frombool = zext i1 %wait to i8
  store i8 %frombool, i8* %wait.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %wait.addr, metadata !10036, metadata !DIExpression()), !dbg !10037
  call void @llvm.dbg.declare(metadata i32* %dc_ctrl, metadata !10038, metadata !DIExpression()), !dbg !10039
  call void @llvm.dbg.declare(metadata i32* %dc_sts, metadata !10040, metadata !DIExpression()), !dbg !10041
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10042, metadata !DIExpression()), !dbg !10043
  call void @llvm.dbg.declare(metadata i32* %status, metadata !10044, metadata !DIExpression()), !dbg !10045
  %0 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !10046
  %call = call i32 @ufx_reg_read(%struct.ufx_data* %0, i32 8196, i32* %dc_sts) #11, !dbg !10047
  store i32 %call, i32* %status, align 4, !dbg !10045
  %1 = load i32, i32* %status, align 4, !dbg !10048
  %cmp = icmp slt i32 %1, 0, !dbg !10048
  br i1 %cmp, label %if.then, label %if.end, !dbg !10051

if.then:                                          ; preds = %entry
  %call1 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.61, i64 0, i64 0)) #12, !dbg !10052
  %2 = load i32, i32* %status, align 4, !dbg !10052
  store i32 %2, i32* %retval, align 4, !dbg !10052
  br label %return, !dbg !10052

if.end:                                           ; preds = %entry
  %3 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !10054
  %call2 = call i32 @ufx_reg_read(%struct.ufx_data* %3, i32 8192, i32* %dc_ctrl) #11, !dbg !10055
  store i32 %call2, i32* %status, align 4, !dbg !10056
  %4 = load i32, i32* %status, align 4, !dbg !10057
  %cmp3 = icmp slt i32 %4, 0, !dbg !10057
  br i1 %cmp3, label %if.then4, label %if.end6, !dbg !10060

if.then4:                                         ; preds = %if.end
  %call5 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.62, i64 0, i64 0)) #12, !dbg !10061
  %5 = load i32, i32* %status, align 4, !dbg !10061
  store i32 %5, i32* %retval, align 4, !dbg !10061
  br label %return, !dbg !10061

if.end6:                                          ; preds = %if.end
  %6 = load i32, i32* %dc_sts, align 4, !dbg !10063
  %and = and i32 %6, 1, !dbg !10065
  %tobool = icmp ne i32 %and, 0, !dbg !10065
  br i1 %tobool, label %if.then9, label %lor.lhs.false, !dbg !10066

lor.lhs.false:                                    ; preds = %if.end6
  %7 = load i32, i32* %dc_ctrl, align 4, !dbg !10067
  %and7 = and i32 %7, 1, !dbg !10068
  %tobool8 = icmp ne i32 %and7, 0, !dbg !10068
  br i1 %tobool8, label %if.then9, label %if.end10, !dbg !10069

if.then9:                                         ; preds = %lor.lhs.false, %if.end6
  store i32 0, i32* %retval, align 4, !dbg !10070
  br label %return, !dbg !10070

if.end10:                                         ; preds = %lor.lhs.false
  %8 = load i32, i32* %dc_ctrl, align 4, !dbg !10071
  %or = or i32 %8, 1, !dbg !10071
  store i32 %or, i32* %dc_ctrl, align 4, !dbg !10071
  %9 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !10072
  %10 = load i32, i32* %dc_ctrl, align 4, !dbg !10073
  %call11 = call i32 @ufx_reg_write(%struct.ufx_data* %9, i32 8192, i32 %10) #11, !dbg !10074
  store i32 %call11, i32* %status, align 4, !dbg !10075
  %11 = load i32, i32* %status, align 4, !dbg !10076
  %cmp12 = icmp slt i32 %11, 0, !dbg !10076
  br i1 %cmp12, label %if.then13, label %if.end15, !dbg !10079

if.then13:                                        ; preds = %if.end10
  %call14 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.63, i64 0, i64 0)) #12, !dbg !10080
  %12 = load i32, i32* %status, align 4, !dbg !10080
  store i32 %12, i32* %retval, align 4, !dbg !10080
  br label %return, !dbg !10080

if.end15:                                         ; preds = %if.end10
  %13 = load i8, i8* %wait.addr, align 1, !dbg !10082
  %tobool16 = trunc i8 %13 to i1, !dbg !10082
  br i1 %tobool16, label %if.end18, label %if.then17, !dbg !10084

if.then17:                                        ; preds = %if.end15
  store i32 0, i32* %retval, align 4, !dbg !10085
  br label %return, !dbg !10085

if.end18:                                         ; preds = %if.end15
  store i32 0, i32* %i, align 4, !dbg !10086
  br label %for.cond, !dbg !10088

for.cond:                                         ; preds = %for.inc, %if.end18
  %14 = load i32, i32* %i, align 4, !dbg !10089
  %cmp19 = icmp slt i32 %14, 250, !dbg !10091
  br i1 %cmp19, label %for.body, label %for.end, !dbg !10092

for.body:                                         ; preds = %for.cond
  %15 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !10093
  %call20 = call i32 @ufx_reg_read(%struct.ufx_data* %15, i32 8196, i32* %dc_sts) #11, !dbg !10095
  store i32 %call20, i32* %status, align 4, !dbg !10096
  %16 = load i32, i32* %status, align 4, !dbg !10097
  %cmp21 = icmp slt i32 %16, 0, !dbg !10097
  br i1 %cmp21, label %if.then22, label %if.end24, !dbg !10100

if.then22:                                        ; preds = %for.body
  %call23 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.61, i64 0, i64 0)) #12, !dbg !10101
  %17 = load i32, i32* %status, align 4, !dbg !10101
  store i32 %17, i32* %retval, align 4, !dbg !10101
  br label %return, !dbg !10101

if.end24:                                         ; preds = %for.body
  %18 = load i32, i32* %dc_sts, align 4, !dbg !10103
  %and25 = and i32 %18, 1, !dbg !10105
  %tobool26 = icmp ne i32 %and25, 0, !dbg !10105
  br i1 %tobool26, label %if.then27, label %if.end28, !dbg !10106

if.then27:                                        ; preds = %if.end24
  store i32 0, i32* %retval, align 4, !dbg !10107
  br label %return, !dbg !10107

if.end28:                                         ; preds = %if.end24
  br label %for.inc, !dbg !10108

for.inc:                                          ; preds = %if.end28
  %19 = load i32, i32* %i, align 4, !dbg !10109
  %inc = add i32 %19, 1, !dbg !10109
  store i32 %inc, i32* %i, align 4, !dbg !10109
  br label %for.cond, !dbg !10110, !llvm.loop !10111

for.end:                                          ; preds = %for.cond
  store i32 -5, i32* %retval, align 4, !dbg !10113
  br label %return, !dbg !10113

return:                                           ; preds = %for.end, %if.then27, %if.then22, %if.then17, %if.then13, %if.then9, %if.then4, %if.then
  %20 = load i32, i32* %retval, align 4, !dbg !10114
  ret i32 %20, !dbg !10114
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ufx_unblank(%struct.ufx_data* %dev, i1 zeroext %wait) #2 !dbg !10115 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.ufx_data*, align 8
  %wait.addr = alloca i8, align 1
  %dc_ctrl = alloca i32, align 4
  %dc_sts = alloca i32, align 4
  %i = alloca i32, align 4
  %status = alloca i32, align 4
  store %struct.ufx_data* %dev, %struct.ufx_data** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ufx_data** %dev.addr, metadata !10116, metadata !DIExpression()), !dbg !10117
  %frombool = zext i1 %wait to i8
  store i8 %frombool, i8* %wait.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %wait.addr, metadata !10118, metadata !DIExpression()), !dbg !10119
  call void @llvm.dbg.declare(metadata i32* %dc_ctrl, metadata !10120, metadata !DIExpression()), !dbg !10121
  call void @llvm.dbg.declare(metadata i32* %dc_sts, metadata !10122, metadata !DIExpression()), !dbg !10123
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10124, metadata !DIExpression()), !dbg !10125
  call void @llvm.dbg.declare(metadata i32* %status, metadata !10126, metadata !DIExpression()), !dbg !10127
  %0 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !10128
  %call = call i32 @ufx_reg_read(%struct.ufx_data* %0, i32 8196, i32* %dc_sts) #11, !dbg !10129
  store i32 %call, i32* %status, align 4, !dbg !10127
  %1 = load i32, i32* %status, align 4, !dbg !10130
  %cmp = icmp slt i32 %1, 0, !dbg !10130
  br i1 %cmp, label %if.then, label %if.end, !dbg !10133

if.then:                                          ; preds = %entry
  %call1 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.64, i64 0, i64 0)) #12, !dbg !10134
  %2 = load i32, i32* %status, align 4, !dbg !10134
  store i32 %2, i32* %retval, align 4, !dbg !10134
  br label %return, !dbg !10134

if.end:                                           ; preds = %entry
  %3 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !10136
  %call2 = call i32 @ufx_reg_read(%struct.ufx_data* %3, i32 8192, i32* %dc_ctrl) #11, !dbg !10137
  store i32 %call2, i32* %status, align 4, !dbg !10138
  %4 = load i32, i32* %status, align 4, !dbg !10139
  %cmp3 = icmp slt i32 %4, 0, !dbg !10139
  br i1 %cmp3, label %if.then4, label %if.end6, !dbg !10142

if.then4:                                         ; preds = %if.end
  %call5 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.65, i64 0, i64 0)) #12, !dbg !10143
  %5 = load i32, i32* %status, align 4, !dbg !10143
  store i32 %5, i32* %retval, align 4, !dbg !10143
  br label %return, !dbg !10143

if.end6:                                          ; preds = %if.end
  %6 = load i32, i32* %dc_sts, align 4, !dbg !10145
  %and = and i32 %6, 256, !dbg !10147
  %cmp7 = icmp eq i32 %and, 0, !dbg !10148
  br i1 %cmp7, label %if.then10, label %lor.lhs.false, !dbg !10149

lor.lhs.false:                                    ; preds = %if.end6
  %7 = load i32, i32* %dc_ctrl, align 4, !dbg !10150
  %and8 = and i32 %7, 256, !dbg !10151
  %cmp9 = icmp eq i32 %and8, 0, !dbg !10152
  br i1 %cmp9, label %if.then10, label %if.end11, !dbg !10153

if.then10:                                        ; preds = %lor.lhs.false, %if.end6
  store i32 0, i32* %retval, align 4, !dbg !10154
  br label %return, !dbg !10154

if.end11:                                         ; preds = %lor.lhs.false
  %8 = load i32, i32* %dc_ctrl, align 4, !dbg !10155
  %and12 = and i32 %8, -257, !dbg !10155
  store i32 %and12, i32* %dc_ctrl, align 4, !dbg !10155
  %9 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !10156
  %10 = load i32, i32* %dc_ctrl, align 4, !dbg !10157
  %call13 = call i32 @ufx_reg_write(%struct.ufx_data* %9, i32 8192, i32 %10) #11, !dbg !10158
  store i32 %call13, i32* %status, align 4, !dbg !10159
  %11 = load i32, i32* %status, align 4, !dbg !10160
  %cmp14 = icmp slt i32 %11, 0, !dbg !10160
  br i1 %cmp14, label %if.then15, label %if.end17, !dbg !10163

if.then15:                                        ; preds = %if.end11
  %call16 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.66, i64 0, i64 0)) #12, !dbg !10164
  %12 = load i32, i32* %status, align 4, !dbg !10164
  store i32 %12, i32* %retval, align 4, !dbg !10164
  br label %return, !dbg !10164

if.end17:                                         ; preds = %if.end11
  %13 = load i8, i8* %wait.addr, align 1, !dbg !10166
  %tobool = trunc i8 %13 to i1, !dbg !10166
  br i1 %tobool, label %if.end19, label %if.then18, !dbg !10168

if.then18:                                        ; preds = %if.end17
  store i32 0, i32* %retval, align 4, !dbg !10169
  br label %return, !dbg !10169

if.end19:                                         ; preds = %if.end17
  store i32 0, i32* %i, align 4, !dbg !10170
  br label %for.cond, !dbg !10172

for.cond:                                         ; preds = %for.inc, %if.end19
  %14 = load i32, i32* %i, align 4, !dbg !10173
  %cmp20 = icmp slt i32 %14, 250, !dbg !10175
  br i1 %cmp20, label %for.body, label %for.end, !dbg !10176

for.body:                                         ; preds = %for.cond
  %15 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !10177
  %call21 = call i32 @ufx_reg_read(%struct.ufx_data* %15, i32 8196, i32* %dc_sts) #11, !dbg !10179
  store i32 %call21, i32* %status, align 4, !dbg !10180
  %16 = load i32, i32* %status, align 4, !dbg !10181
  %cmp22 = icmp slt i32 %16, 0, !dbg !10181
  br i1 %cmp22, label %if.then23, label %if.end25, !dbg !10184

if.then23:                                        ; preds = %for.body
  %call24 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.64, i64 0, i64 0)) #12, !dbg !10185
  %17 = load i32, i32* %status, align 4, !dbg !10185
  store i32 %17, i32* %retval, align 4, !dbg !10185
  br label %return, !dbg !10185

if.end25:                                         ; preds = %for.body
  %18 = load i32, i32* %dc_sts, align 4, !dbg !10187
  %and26 = and i32 %18, 256, !dbg !10189
  %cmp27 = icmp eq i32 %and26, 0, !dbg !10190
  br i1 %cmp27, label %if.then28, label %if.end29, !dbg !10191

if.then28:                                        ; preds = %if.end25
  store i32 0, i32* %retval, align 4, !dbg !10192
  br label %return, !dbg !10192

if.end29:                                         ; preds = %if.end25
  br label %for.inc, !dbg !10193

for.inc:                                          ; preds = %if.end29
  %19 = load i32, i32* %i, align 4, !dbg !10194
  %inc = add i32 %19, 1, !dbg !10194
  store i32 %inc, i32* %i, align 4, !dbg !10194
  br label %for.cond, !dbg !10195, !llvm.loop !10196

for.end:                                          ; preds = %for.cond
  store i32 -5, i32* %retval, align 4, !dbg !10198
  br label %return, !dbg !10198

return:                                           ; preds = %for.end, %if.then28, %if.then23, %if.then18, %if.then15, %if.then10, %if.then4, %if.then
  %20 = load i32, i32* %retval, align 4, !dbg !10199
  ret i32 %20, !dbg !10199
}

; Function Attrs: noredzone
declare dso_local i32 @usb_control_msg(%struct.usb_device*, i32, i8 zeroext, i8 zeroext, i16 zeroext, i16 zeroext, i8*, i16 zeroext, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ufx_calc_pll_values(i32 %clk_pixel_pll, %struct.pll_values* %asic_pll) #2 !dbg !10200 {
entry:
  %clk_pixel_pll.addr = alloca i32, align 4
  %asic_pll.addr = alloca %struct.pll_values*, align 8
  %ref_clk = alloca i32, align 4
  %div_r0 = alloca i32, align 4
  %div_f0 = alloca i32, align 4
  %div_q0 = alloca i32, align 4
  %div_r1 = alloca i32, align 4
  %div_f1 = alloca i32, align 4
  %div_q1 = alloca i32, align 4
  %min_error = alloca i32, align 4
  %ref_freq0 = alloca i32, align 4
  %vco_freq0 = alloca i32, align 4
  %pllout_freq0 = alloca i32, align 4
  %ref_freq1 = alloca i32, align 4
  %vco_freq1 = alloca i32, align 4
  %pllout_freq1 = alloca i32, align 4
  %error = alloca i32, align 4
  %__x = alloca i32, align 4
  %tmp = alloca i32, align 4
  store i32 %clk_pixel_pll, i32* %clk_pixel_pll.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %clk_pixel_pll.addr, metadata !10204, metadata !DIExpression()), !dbg !10205
  store %struct.pll_values* %asic_pll, %struct.pll_values** %asic_pll.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pll_values** %asic_pll.addr, metadata !10206, metadata !DIExpression()), !dbg !10207
  call void @llvm.dbg.declare(metadata i32* %ref_clk, metadata !10208, metadata !DIExpression()), !dbg !10209
  store i32 25000000, i32* %ref_clk, align 4, !dbg !10209
  call void @llvm.dbg.declare(metadata i32* %div_r0, metadata !10210, metadata !DIExpression()), !dbg !10211
  call void @llvm.dbg.declare(metadata i32* %div_f0, metadata !10212, metadata !DIExpression()), !dbg !10213
  call void @llvm.dbg.declare(metadata i32* %div_q0, metadata !10214, metadata !DIExpression()), !dbg !10215
  call void @llvm.dbg.declare(metadata i32* %div_r1, metadata !10216, metadata !DIExpression()), !dbg !10217
  call void @llvm.dbg.declare(metadata i32* %div_f1, metadata !10218, metadata !DIExpression()), !dbg !10219
  call void @llvm.dbg.declare(metadata i32* %div_q1, metadata !10220, metadata !DIExpression()), !dbg !10221
  call void @llvm.dbg.declare(metadata i32* %min_error, metadata !10222, metadata !DIExpression()), !dbg !10223
  %0 = load i32, i32* %clk_pixel_pll.addr, align 4, !dbg !10224
  store i32 %0, i32* %min_error, align 4, !dbg !10223
  store i32 1, i32* %div_r0, align 4, !dbg !10225
  br label %for.cond, !dbg !10227

for.cond:                                         ; preds = %for.inc83, %entry
  %1 = load i32, i32* %div_r0, align 4, !dbg !10228
  %cmp = icmp ule i32 %1, 32, !dbg !10230
  br i1 %cmp, label %for.body, label %for.end85, !dbg !10231

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %ref_freq0, metadata !10232, metadata !DIExpression()), !dbg !10234
  %2 = load i32, i32* %div_r0, align 4, !dbg !10235
  %div = udiv i32 25000000, %2, !dbg !10236
  store i32 %div, i32* %ref_freq0, align 4, !dbg !10234
  %3 = load i32, i32* %ref_freq0, align 4, !dbg !10237
  %cmp1 = icmp ult i32 %3, 5000000, !dbg !10239
  br i1 %cmp1, label %if.then, label %if.end, !dbg !10240

if.then:                                          ; preds = %for.body
  br label %for.end85, !dbg !10241

if.end:                                           ; preds = %for.body
  %4 = load i32, i32* %ref_freq0, align 4, !dbg !10242
  %cmp2 = icmp ugt i32 %4, 200000000, !dbg !10244
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !10245

if.then3:                                         ; preds = %if.end
  br label %for.inc83, !dbg !10246

if.end4:                                          ; preds = %if.end
  store i32 1, i32* %div_f0, align 4, !dbg !10247
  br label %for.cond5, !dbg !10249

for.cond5:                                        ; preds = %for.inc80, %if.end4
  %5 = load i32, i32* %div_f0, align 4, !dbg !10250
  %cmp6 = icmp ule i32 %5, 256, !dbg !10252
  br i1 %cmp6, label %for.body7, label %for.end82, !dbg !10253

for.body7:                                        ; preds = %for.cond5
  call void @llvm.dbg.declare(metadata i32* %vco_freq0, metadata !10254, metadata !DIExpression()), !dbg !10256
  %6 = load i32, i32* %ref_freq0, align 4, !dbg !10257
  %7 = load i32, i32* %div_f0, align 4, !dbg !10258
  %mul = mul i32 %6, %7, !dbg !10259
  store i32 %mul, i32* %vco_freq0, align 4, !dbg !10256
  %8 = load i32, i32* %vco_freq0, align 4, !dbg !10260
  %cmp8 = icmp ult i32 %8, 350000000, !dbg !10262
  br i1 %cmp8, label %if.then9, label %if.end10, !dbg !10263

if.then9:                                         ; preds = %for.body7
  br label %for.inc80, !dbg !10264

if.end10:                                         ; preds = %for.body7
  %9 = load i32, i32* %vco_freq0, align 4, !dbg !10265
  %cmp11 = icmp ugt i32 %9, 700000000, !dbg !10267
  br i1 %cmp11, label %if.then12, label %if.end13, !dbg !10268

if.then12:                                        ; preds = %if.end10
  br label %for.end82, !dbg !10269

if.end13:                                         ; preds = %if.end10
  store i32 0, i32* %div_q0, align 4, !dbg !10270
  br label %for.cond14, !dbg !10272

for.cond14:                                       ; preds = %for.inc77, %if.end13
  %10 = load i32, i32* %div_q0, align 4, !dbg !10273
  %cmp15 = icmp ult i32 %10, 7, !dbg !10275
  br i1 %cmp15, label %for.body16, label %for.end79, !dbg !10276

for.body16:                                       ; preds = %for.cond14
  call void @llvm.dbg.declare(metadata i32* %pllout_freq0, metadata !10277, metadata !DIExpression()), !dbg !10279
  %11 = load i32, i32* %vco_freq0, align 4, !dbg !10280
  %12 = load i32, i32* %div_q0, align 4, !dbg !10281
  %shl = shl i32 1, %12, !dbg !10282
  %div17 = udiv i32 %11, %shl, !dbg !10283
  store i32 %div17, i32* %pllout_freq0, align 4, !dbg !10279
  %13 = load i32, i32* %pllout_freq0, align 4, !dbg !10284
  %cmp18 = icmp ult i32 %13, 5000000, !dbg !10286
  br i1 %cmp18, label %if.then19, label %if.end20, !dbg !10287

if.then19:                                        ; preds = %for.body16
  br label %for.end79, !dbg !10288

if.end20:                                         ; preds = %for.body16
  %14 = load i32, i32* %pllout_freq0, align 4, !dbg !10289
  %cmp21 = icmp ugt i32 %14, 200000000, !dbg !10291
  br i1 %cmp21, label %if.then22, label %if.end23, !dbg !10292

if.then22:                                        ; preds = %if.end20
  br label %for.inc77, !dbg !10293

if.end23:                                         ; preds = %if.end20
  store i32 1, i32* %div_r1, align 4, !dbg !10294
  br label %for.cond24, !dbg !10296

for.cond24:                                       ; preds = %for.inc74, %if.end23
  %15 = load i32, i32* %div_r1, align 4, !dbg !10297
  %cmp25 = icmp ule i32 %15, 32, !dbg !10299
  br i1 %cmp25, label %for.body26, label %for.end76, !dbg !10300

for.body26:                                       ; preds = %for.cond24
  call void @llvm.dbg.declare(metadata i32* %ref_freq1, metadata !10301, metadata !DIExpression()), !dbg !10303
  %16 = load i32, i32* %pllout_freq0, align 4, !dbg !10304
  %17 = load i32, i32* %div_r1, align 4, !dbg !10305
  %div27 = udiv i32 %16, %17, !dbg !10306
  store i32 %div27, i32* %ref_freq1, align 4, !dbg !10303
  %18 = load i32, i32* %ref_freq1, align 4, !dbg !10307
  %cmp28 = icmp ult i32 %18, 5000000, !dbg !10309
  br i1 %cmp28, label %if.then29, label %if.end30, !dbg !10310

if.then29:                                        ; preds = %for.body26
  br label %for.end76, !dbg !10311

if.end30:                                         ; preds = %for.body26
  store i32 1, i32* %div_f1, align 4, !dbg !10312
  br label %for.cond31, !dbg !10314

for.cond31:                                       ; preds = %for.inc71, %if.end30
  %19 = load i32, i32* %div_f1, align 4, !dbg !10315
  %cmp32 = icmp ule i32 %19, 256, !dbg !10317
  br i1 %cmp32, label %for.body33, label %for.end73, !dbg !10318

for.body33:                                       ; preds = %for.cond31
  call void @llvm.dbg.declare(metadata i32* %vco_freq1, metadata !10319, metadata !DIExpression()), !dbg !10321
  %20 = load i32, i32* %ref_freq1, align 4, !dbg !10322
  %21 = load i32, i32* %div_f1, align 4, !dbg !10323
  %mul34 = mul i32 %20, %21, !dbg !10324
  store i32 %mul34, i32* %vco_freq1, align 4, !dbg !10321
  %22 = load i32, i32* %vco_freq1, align 4, !dbg !10325
  %cmp35 = icmp ult i32 %22, 350000000, !dbg !10327
  br i1 %cmp35, label %if.then36, label %if.end37, !dbg !10328

if.then36:                                        ; preds = %for.body33
  br label %for.inc71, !dbg !10329

if.end37:                                         ; preds = %for.body33
  %23 = load i32, i32* %vco_freq1, align 4, !dbg !10330
  %cmp38 = icmp ugt i32 %23, 700000000, !dbg !10332
  br i1 %cmp38, label %if.then39, label %if.end40, !dbg !10333

if.then39:                                        ; preds = %if.end37
  br label %for.end73, !dbg !10334

if.end40:                                         ; preds = %if.end37
  store i32 0, i32* %div_q1, align 4, !dbg !10335
  br label %for.cond41, !dbg !10337

for.cond41:                                       ; preds = %for.inc, %if.end40
  %24 = load i32, i32* %div_q1, align 4, !dbg !10338
  %cmp42 = icmp ult i32 %24, 7, !dbg !10340
  br i1 %cmp42, label %for.body43, label %for.end, !dbg !10341

for.body43:                                       ; preds = %for.cond41
  call void @llvm.dbg.declare(metadata i32* %pllout_freq1, metadata !10342, metadata !DIExpression()), !dbg !10344
  %25 = load i32, i32* %vco_freq1, align 4, !dbg !10345
  %26 = load i32, i32* %div_q1, align 4, !dbg !10346
  %shl44 = shl i32 1, %26, !dbg !10347
  %div45 = udiv i32 %25, %shl44, !dbg !10348
  store i32 %div45, i32* %pllout_freq1, align 4, !dbg !10344
  call void @llvm.dbg.declare(metadata i32* %error, metadata !10349, metadata !DIExpression()), !dbg !10350
  call void @llvm.dbg.declare(metadata i32* %__x, metadata !10351, metadata !DIExpression()), !dbg !10353
  %27 = load i32, i32* %pllout_freq1, align 4, !dbg !10353
  %28 = load i32, i32* %clk_pixel_pll.addr, align 4, !dbg !10353
  %sub = sub i32 %27, %28, !dbg !10353
  store i32 %sub, i32* %__x, align 4, !dbg !10353
  %29 = load i32, i32* %__x, align 4, !dbg !10353
  %cmp46 = icmp slt i32 %29, 0, !dbg !10353
  br i1 %cmp46, label %cond.true, label %cond.false, !dbg !10353

cond.true:                                        ; preds = %for.body43
  %30 = load i32, i32* %__x, align 4, !dbg !10353
  %sub47 = sub i32 0, %30, !dbg !10353
  br label %cond.end, !dbg !10353

cond.false:                                       ; preds = %for.body43
  %31 = load i32, i32* %__x, align 4, !dbg !10353
  br label %cond.end, !dbg !10353

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub47, %cond.true ], [ %31, %cond.false ], !dbg !10353
  store i32 %cond, i32* %tmp, align 4, !dbg !10353
  %32 = load i32, i32* %tmp, align 4, !dbg !10353
  store i32 %32, i32* %error, align 4, !dbg !10350
  %33 = load i32, i32* %pllout_freq1, align 4, !dbg !10354
  %cmp48 = icmp ult i32 %33, 5000000, !dbg !10356
  br i1 %cmp48, label %if.then49, label %if.end50, !dbg !10357

if.then49:                                        ; preds = %cond.end
  br label %for.end, !dbg !10358

if.end50:                                         ; preds = %cond.end
  %34 = load i32, i32* %pllout_freq1, align 4, !dbg !10359
  %cmp51 = icmp ugt i32 %34, 700000000, !dbg !10361
  br i1 %cmp51, label %if.then52, label %if.end53, !dbg !10362

if.then52:                                        ; preds = %if.end50
  br label %for.inc, !dbg !10363

if.end53:                                         ; preds = %if.end50
  %35 = load i32, i32* %error, align 4, !dbg !10364
  %36 = load i32, i32* %min_error, align 4, !dbg !10366
  %cmp54 = icmp ult i32 %35, %36, !dbg !10367
  br i1 %cmp54, label %if.then55, label %if.end70, !dbg !10368

if.then55:                                        ; preds = %if.end53
  %37 = load i32, i32* %error, align 4, !dbg !10369
  store i32 %37, i32* %min_error, align 4, !dbg !10371
  %38 = load i32, i32* %div_r0, align 4, !dbg !10372
  %sub56 = sub i32 %38, 1, !dbg !10373
  %39 = load %struct.pll_values*, %struct.pll_values** %asic_pll.addr, align 8, !dbg !10374
  %div_r057 = getelementptr inbounds %struct.pll_values, %struct.pll_values* %39, i32 0, i32 0, !dbg !10375
  store i32 %sub56, i32* %div_r057, align 4, !dbg !10376
  %40 = load i32, i32* %div_f0, align 4, !dbg !10377
  %sub58 = sub i32 %40, 1, !dbg !10378
  %41 = load %struct.pll_values*, %struct.pll_values** %asic_pll.addr, align 8, !dbg !10379
  %div_f059 = getelementptr inbounds %struct.pll_values, %struct.pll_values* %41, i32 0, i32 1, !dbg !10380
  store i32 %sub58, i32* %div_f059, align 4, !dbg !10381
  %42 = load i32, i32* %div_q0, align 4, !dbg !10382
  %43 = load %struct.pll_values*, %struct.pll_values** %asic_pll.addr, align 8, !dbg !10383
  %div_q060 = getelementptr inbounds %struct.pll_values, %struct.pll_values* %43, i32 0, i32 2, !dbg !10384
  store i32 %42, i32* %div_q060, align 4, !dbg !10385
  %44 = load i32, i32* %div_r1, align 4, !dbg !10386
  %sub61 = sub i32 %44, 1, !dbg !10387
  %45 = load %struct.pll_values*, %struct.pll_values** %asic_pll.addr, align 8, !dbg !10388
  %div_r162 = getelementptr inbounds %struct.pll_values, %struct.pll_values* %45, i32 0, i32 4, !dbg !10389
  store i32 %sub61, i32* %div_r162, align 4, !dbg !10390
  %46 = load i32, i32* %div_f1, align 4, !dbg !10391
  %sub63 = sub i32 %46, 1, !dbg !10392
  %47 = load %struct.pll_values*, %struct.pll_values** %asic_pll.addr, align 8, !dbg !10393
  %div_f164 = getelementptr inbounds %struct.pll_values, %struct.pll_values* %47, i32 0, i32 5, !dbg !10394
  store i32 %sub63, i32* %div_f164, align 4, !dbg !10395
  %48 = load i32, i32* %div_q1, align 4, !dbg !10396
  %49 = load %struct.pll_values*, %struct.pll_values** %asic_pll.addr, align 8, !dbg !10397
  %div_q165 = getelementptr inbounds %struct.pll_values, %struct.pll_values* %49, i32 0, i32 6, !dbg !10398
  store i32 %48, i32* %div_q165, align 4, !dbg !10399
  %50 = load i32, i32* %ref_freq0, align 4, !dbg !10400
  %call = call i32 @ufx_calc_range(i32 %50) #11, !dbg !10401
  %51 = load %struct.pll_values*, %struct.pll_values** %asic_pll.addr, align 8, !dbg !10402
  %range0 = getelementptr inbounds %struct.pll_values, %struct.pll_values* %51, i32 0, i32 3, !dbg !10403
  store i32 %call, i32* %range0, align 4, !dbg !10404
  %52 = load i32, i32* %ref_freq1, align 4, !dbg !10405
  %call66 = call i32 @ufx_calc_range(i32 %52) #11, !dbg !10406
  %53 = load %struct.pll_values*, %struct.pll_values** %asic_pll.addr, align 8, !dbg !10407
  %range1 = getelementptr inbounds %struct.pll_values, %struct.pll_values* %53, i32 0, i32 7, !dbg !10408
  store i32 %call66, i32* %range1, align 4, !dbg !10409
  %54 = load i32, i32* %min_error, align 4, !dbg !10410
  %cmp67 = icmp eq i32 %54, 0, !dbg !10412
  br i1 %cmp67, label %if.then68, label %if.end69, !dbg !10413

if.then68:                                        ; preds = %if.then55
  br label %for.end85, !dbg !10414

if.end69:                                         ; preds = %if.then55
  br label %if.end70, !dbg !10415

if.end70:                                         ; preds = %if.end69, %if.end53
  br label %for.inc, !dbg !10416

for.inc:                                          ; preds = %if.end70, %if.then52
  %55 = load i32, i32* %div_q1, align 4, !dbg !10417
  %inc = add i32 %55, 1, !dbg !10417
  store i32 %inc, i32* %div_q1, align 4, !dbg !10417
  br label %for.cond41, !dbg !10418, !llvm.loop !10419

for.end:                                          ; preds = %if.then49, %for.cond41
  br label %for.inc71, !dbg !10421

for.inc71:                                        ; preds = %for.end, %if.then36
  %56 = load i32, i32* %div_f1, align 4, !dbg !10422
  %inc72 = add i32 %56, 1, !dbg !10422
  store i32 %inc72, i32* %div_f1, align 4, !dbg !10422
  br label %for.cond31, !dbg !10423, !llvm.loop !10424

for.end73:                                        ; preds = %if.then39, %for.cond31
  br label %for.inc74, !dbg !10426

for.inc74:                                        ; preds = %for.end73
  %57 = load i32, i32* %div_r1, align 4, !dbg !10427
  %inc75 = add i32 %57, 1, !dbg !10427
  store i32 %inc75, i32* %div_r1, align 4, !dbg !10427
  br label %for.cond24, !dbg !10428, !llvm.loop !10429

for.end76:                                        ; preds = %if.then29, %for.cond24
  br label %for.inc77, !dbg !10431

for.inc77:                                        ; preds = %for.end76, %if.then22
  %58 = load i32, i32* %div_q0, align 4, !dbg !10432
  %inc78 = add i32 %58, 1, !dbg !10432
  store i32 %inc78, i32* %div_q0, align 4, !dbg !10432
  br label %for.cond14, !dbg !10433, !llvm.loop !10434

for.end79:                                        ; preds = %if.then19, %for.cond14
  br label %for.inc80, !dbg !10436

for.inc80:                                        ; preds = %for.end79, %if.then9
  %59 = load i32, i32* %div_f0, align 4, !dbg !10437
  %inc81 = add i32 %59, 1, !dbg !10437
  store i32 %inc81, i32* %div_f0, align 4, !dbg !10437
  br label %for.cond5, !dbg !10438, !llvm.loop !10439

for.end82:                                        ; preds = %if.then12, %for.cond5
  br label %for.inc83, !dbg !10441

for.inc83:                                        ; preds = %for.end82, %if.then3
  %60 = load i32, i32* %div_r0, align 4, !dbg !10442
  %inc84 = add i32 %60, 1, !dbg !10442
  store i32 %inc84, i32* %div_r0, align 4, !dbg !10442
  br label %for.cond, !dbg !10443, !llvm.loop !10444

for.end85:                                        ; preds = %if.then68, %if.then, %for.cond
  ret void, !dbg !10446
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ufx_reg_clear_bits(%struct.ufx_data* %dev, i32 %index, i32 %bits) #2 !dbg !10447 {
entry:
  %dev.addr = alloca %struct.ufx_data*, align 8
  %index.addr = alloca i32, align 4
  %bits.addr = alloca i32, align 4
  store %struct.ufx_data* %dev, %struct.ufx_data** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ufx_data** %dev.addr, metadata !10448, metadata !DIExpression()), !dbg !10449
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !10450, metadata !DIExpression()), !dbg !10451
  store i32 %bits, i32* %bits.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr, metadata !10452, metadata !DIExpression()), !dbg !10453
  %0 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !10454
  %1 = load i32, i32* %index.addr, align 4, !dbg !10455
  %2 = load i32, i32* %bits.addr, align 4, !dbg !10456
  %call = call i32 @ufx_reg_clear_and_set_bits(%struct.ufx_data* %0, i32 %1, i32 %2, i32 0) #11, !dbg !10457
  ret i32 %call, !dbg !10458
}

; Function Attrs: noredzone
declare dso_local void @msleep(i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ufx_calc_range(i32 %ref_freq) #2 !dbg !10459 {
entry:
  %retval = alloca i32, align 4
  %ref_freq.addr = alloca i32, align 4
  store i32 %ref_freq, i32* %ref_freq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ref_freq.addr, metadata !10462, metadata !DIExpression()), !dbg !10463
  %0 = load i32, i32* %ref_freq.addr, align 4, !dbg !10464
  %cmp = icmp uge i32 %0, 88000000, !dbg !10466
  br i1 %cmp, label %if.then, label %if.end, !dbg !10467

if.then:                                          ; preds = %entry
  store i32 7, i32* %retval, align 4, !dbg !10468
  br label %return, !dbg !10468

if.end:                                           ; preds = %entry
  %1 = load i32, i32* %ref_freq.addr, align 4, !dbg !10469
  %cmp1 = icmp uge i32 %1, 54000000, !dbg !10471
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !10472

if.then2:                                         ; preds = %if.end
  store i32 6, i32* %retval, align 4, !dbg !10473
  br label %return, !dbg !10473

if.end3:                                          ; preds = %if.end
  %2 = load i32, i32* %ref_freq.addr, align 4, !dbg !10474
  %cmp4 = icmp uge i32 %2, 34000000, !dbg !10476
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !10477

if.then5:                                         ; preds = %if.end3
  store i32 5, i32* %retval, align 4, !dbg !10478
  br label %return, !dbg !10478

if.end6:                                          ; preds = %if.end3
  %3 = load i32, i32* %ref_freq.addr, align 4, !dbg !10479
  %cmp7 = icmp uge i32 %3, 21000000, !dbg !10481
  br i1 %cmp7, label %if.then8, label %if.end9, !dbg !10482

if.then8:                                         ; preds = %if.end6
  store i32 4, i32* %retval, align 4, !dbg !10483
  br label %return, !dbg !10483

if.end9:                                          ; preds = %if.end6
  %4 = load i32, i32* %ref_freq.addr, align 4, !dbg !10484
  %cmp10 = icmp uge i32 %4, 13000000, !dbg !10486
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !10487

if.then11:                                        ; preds = %if.end9
  store i32 3, i32* %retval, align 4, !dbg !10488
  br label %return, !dbg !10488

if.end12:                                         ; preds = %if.end9
  %5 = load i32, i32* %ref_freq.addr, align 4, !dbg !10489
  %cmp13 = icmp uge i32 %5, 8000000, !dbg !10491
  br i1 %cmp13, label %if.then14, label %if.end15, !dbg !10492

if.then14:                                        ; preds = %if.end12
  store i32 2, i32* %retval, align 4, !dbg !10493
  br label %return, !dbg !10493

if.end15:                                         ; preds = %if.end12
  store i32 1, i32* %retval, align 4, !dbg !10494
  br label %return, !dbg !10494

return:                                           ; preds = %if.end15, %if.then14, %if.then11, %if.then8, %if.then5, %if.then2, %if.then
  %6 = load i32, i32* %retval, align 4, !dbg !10495
  ret i32 %6, !dbg !10495
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ufx_reg_clear_and_set_bits(%struct.ufx_data* %dev, i32 %index, i32 %bits_to_clear, i32 %bits_to_set) #2 !dbg !10496 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.ufx_data*, align 8
  %index.addr = alloca i32, align 4
  %bits_to_clear.addr = alloca i32, align 4
  %bits_to_set.addr = alloca i32, align 4
  %data = alloca i32, align 4
  %status = alloca i32, align 4
  store %struct.ufx_data* %dev, %struct.ufx_data** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ufx_data** %dev.addr, metadata !10499, metadata !DIExpression()), !dbg !10500
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !10501, metadata !DIExpression()), !dbg !10502
  store i32 %bits_to_clear, i32* %bits_to_clear.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bits_to_clear.addr, metadata !10503, metadata !DIExpression()), !dbg !10504
  store i32 %bits_to_set, i32* %bits_to_set.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bits_to_set.addr, metadata !10505, metadata !DIExpression()), !dbg !10506
  call void @llvm.dbg.declare(metadata i32* %data, metadata !10507, metadata !DIExpression()), !dbg !10508
  call void @llvm.dbg.declare(metadata i32* %status, metadata !10509, metadata !DIExpression()), !dbg !10510
  %0 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !10511
  %1 = load i32, i32* %index.addr, align 4, !dbg !10512
  %call = call i32 @ufx_reg_read(%struct.ufx_data* %0, i32 %1, i32* %data) #11, !dbg !10513
  store i32 %call, i32* %status, align 4, !dbg !10510
  %2 = load i32, i32* %status, align 4, !dbg !10514
  %cmp = icmp slt i32 %2, 0, !dbg !10514
  br i1 %cmp, label %if.then, label %if.end, !dbg !10517

if.then:                                          ; preds = %entry
  %3 = load i32, i32* %index.addr, align 4, !dbg !10518
  %call1 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.59, i64 0, i64 0), i32 %3) #12, !dbg !10518
  %4 = load i32, i32* %status, align 4, !dbg !10518
  store i32 %4, i32* %retval, align 4, !dbg !10518
  br label %return, !dbg !10518

if.end:                                           ; preds = %entry
  %5 = load i32, i32* %bits_to_clear.addr, align 4, !dbg !10520
  %neg = xor i32 %5, -1, !dbg !10521
  %6 = load i32, i32* %data, align 4, !dbg !10522
  %and = and i32 %6, %neg, !dbg !10522
  store i32 %and, i32* %data, align 4, !dbg !10522
  %7 = load i32, i32* %bits_to_set.addr, align 4, !dbg !10523
  %8 = load i32, i32* %data, align 4, !dbg !10524
  %or = or i32 %8, %7, !dbg !10524
  store i32 %or, i32* %data, align 4, !dbg !10524
  %9 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !10525
  %10 = load i32, i32* %index.addr, align 4, !dbg !10526
  %11 = load i32, i32* %data, align 4, !dbg !10527
  %call2 = call i32 @ufx_reg_write(%struct.ufx_data* %9, i32 %10, i32 %11) #11, !dbg !10528
  store i32 %call2, i32* %status, align 4, !dbg !10529
  %12 = load i32, i32* %status, align 4, !dbg !10530
  %cmp3 = icmp slt i32 %12, 0, !dbg !10530
  br i1 %cmp3, label %if.then4, label %if.end6, !dbg !10533

if.then4:                                         ; preds = %if.end
  %13 = load i32, i32* %index.addr, align 4, !dbg !10534
  %call5 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.60, i64 0, i64 0), i32 %13) #12, !dbg !10534
  %14 = load i32, i32* %status, align 4, !dbg !10534
  store i32 %14, i32* %retval, align 4, !dbg !10534
  br label %return, !dbg !10534

if.end6:                                          ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !10536
  br label %return, !dbg !10536

return:                                           ; preds = %if.end6, %if.then4, %if.then
  %15 = load i32, i32* %retval, align 4, !dbg !10537
  ret i32 %15, !dbg !10537
}

; Function Attrs: noredzone
declare dso_local void @sys_fillrect(%struct.fb_info*, %struct.fb_fillrect*) #1

; Function Attrs: noredzone
declare dso_local void @sys_copyarea(%struct.fb_info*, %struct.fb_copyarea*) #1

; Function Attrs: noredzone
declare dso_local void @sys_imageblit(%struct.fb_info*, %struct.fb_image*) #1

; Function Attrs: noredzone
declare dso_local i64 @_copy_to_user(i8*, i8*, i64) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @copy_overflow(i32 %size, i64 %count) #2 !dbg !10538 {
entry:
  %size.addr = alloca i32, align 4
  %count.addr = alloca i64, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !10541, metadata !DIExpression()), !dbg !10542
  store i64 %count, i64* %count.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !10543, metadata !DIExpression()), !dbg !10544
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !10545, metadata !DIExpression()), !dbg !10547
  store i32 1, i32* %__ret_warn_on, align 4, !dbg !10547
  %0 = load i32, i32* %__ret_warn_on, align 4, !dbg !10548
  %tobool = icmp ne i32 %0, 0, !dbg !10548
  %lnot = xor i1 %tobool, true, !dbg !10548
  %lnot1 = xor i1 %lnot, true, !dbg !10548
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !10548
  %conv = sext i32 %lnot.ext to i64, !dbg !10548
  %tobool2 = icmp ne i64 %conv, 0, !dbg !10548
  br i1 %tobool2, label %if.then, label %if.end, !dbg !10547

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !10548

do.body:                                          ; preds = %if.then
  br label %do.body3, !dbg !10550

do.body3:                                         ; preds = %do.body
  br label %do.end, !dbg !10552

do.end:                                           ; preds = %do.body3
  %1 = load i32, i32* %size.addr, align 4, !dbg !10550
  %2 = load i64, i64* %count.addr, align 8, !dbg !10550
  call void (i8*, ...) @__warn_printk(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.68, i64 0, i64 0), i32 %1, i64 %2) #11, !dbg !10550
  br label %do.body4, !dbg !10550

do.body4:                                         ; preds = %do.end
  br label %do.body5, !dbg !10554

do.body5:                                         ; preds = %do.body4
  br label %do.end6, !dbg !10556

do.end6:                                          ; preds = %do.body5
  br label %do.body7, !dbg !10554

do.body7:                                         ; preds = %do.end6
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.67, i64 0, i64 0), i32 134, i32 2313, i64 12) #10, !dbg !10558, !srcloc !10560
  br label %do.end8, !dbg !10558

do.end8:                                          ; preds = %do.body7
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 38) #10, !dbg !10561, !srcloc !10563
  br label %do.body9, !dbg !10554

do.body9:                                         ; preds = %do.end8
  br label %do.end10, !dbg !10564

do.end10:                                         ; preds = %do.body9
  br label %do.end11, !dbg !10554

do.end11:                                         ; preds = %do.end10
  br label %do.body12, !dbg !10550

do.body12:                                        ; preds = %do.end11
  br label %do.end13, !dbg !10566

do.end13:                                         ; preds = %do.body12
  br label %do.end14, !dbg !10550

do.end14:                                         ; preds = %do.end13
  br label %if.end, !dbg !10550

if.end:                                           ; preds = %do.end14, %entry
  %3 = load i32, i32* %__ret_warn_on, align 4, !dbg !10547
  %tobool15 = icmp ne i32 %3, 0, !dbg !10547
  %lnot16 = xor i1 %tobool15, true, !dbg !10547
  %lnot18 = xor i1 %lnot16, true, !dbg !10547
  %lnot.ext19 = zext i1 %lnot18 to i32, !dbg !10547
  %conv20 = sext i32 %lnot.ext19 to i64, !dbg !10547
  store i64 %conv20, i64* %tmp, align 8, !dbg !10548
  %4 = load i64, i64* %tmp, align 8, !dbg !10547
  ret void, !dbg !10568
}

; Function Attrs: noredzone
declare dso_local void @__bad_copy_from() #1

; Function Attrs: noredzone
declare dso_local void @__bad_copy_to() #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @check_object_size(i8* %ptr, i64 %n, i1 zeroext %to_user) #2 !dbg !10569 {
entry:
  %ptr.addr = alloca i8*, align 8
  %n.addr = alloca i64, align 8
  %to_user.addr = alloca i8, align 1
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !10572, metadata !DIExpression()), !dbg !10573
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !10574, metadata !DIExpression()), !dbg !10575
  %frombool = zext i1 %to_user to i8
  store i8 %frombool, i8* %to_user.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %to_user.addr, metadata !10576, metadata !DIExpression()), !dbg !10577
  ret void, !dbg !10578
}

; Function Attrs: noredzone
declare dso_local void @__warn_printk(i8*, ...) #1

; Function Attrs: noredzone
declare dso_local i64 @vmalloc_to_pfn(i8*) #1

; Function Attrs: noredzone
declare dso_local i32 @remap_pfn_range(%struct.vm_area_struct*, i64, i64, i64, i64) #1

; Function Attrs: noredzone
declare dso_local void @unregister_framebuffer(%struct.fb_info*) #1

; Function Attrs: noredzone
declare dso_local void @mutex_lock(%struct.mutex*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ufx_read_edid(%struct.ufx_data* %dev, i8* %edid, i32 %edid_len) #2 !dbg !10579 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.ufx_data*, align 8
  %edid.addr = alloca i8*, align 8
  %edid_len.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %status = alloca i32, align 4
  %edid_u32 = alloca i32*, align 8
  %temp = alloca i32, align 4
  %data_reg_addr = alloca i32, align 4
  %tmp = alloca i32, align 4
  store %struct.ufx_data* %dev, %struct.ufx_data** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ufx_data** %dev.addr, metadata !10582, metadata !DIExpression()), !dbg !10583
  store i8* %edid, i8** %edid.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %edid.addr, metadata !10584, metadata !DIExpression()), !dbg !10585
  store i32 %edid_len, i32* %edid_len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %edid_len.addr, metadata !10586, metadata !DIExpression()), !dbg !10587
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10588, metadata !DIExpression()), !dbg !10589
  call void @llvm.dbg.declare(metadata i32* %j, metadata !10590, metadata !DIExpression()), !dbg !10591
  call void @llvm.dbg.declare(metadata i32* %status, metadata !10592, metadata !DIExpression()), !dbg !10593
  call void @llvm.dbg.declare(metadata i32** %edid_u32, metadata !10594, metadata !DIExpression()), !dbg !10595
  %0 = load i8*, i8** %edid.addr, align 8, !dbg !10596
  %1 = bitcast i8* %0 to i32*, !dbg !10597
  store i32* %1, i32** %edid_u32, align 8, !dbg !10595
  br label %do.body, !dbg !10598

do.body:                                          ; preds = %entry
  %2 = load i32, i32* %edid_len.addr, align 4, !dbg !10599
  %cmp = icmp ne i32 %2, 128, !dbg !10599
  %lnot = xor i1 %cmp, true, !dbg !10599
  %lnot1 = xor i1 %lnot, true, !dbg !10599
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !10599
  %conv = sext i32 %lnot.ext to i64, !dbg !10599
  %tobool = icmp ne i64 %conv, 0, !dbg !10599
  br i1 %tobool, label %if.then, label %if.end, !dbg !10602

if.then:                                          ; preds = %do.body
  br label %do.body2, !dbg !10599

do.body2:                                         ; preds = %if.then
  br label %do.body3, !dbg !10603

do.body3:                                         ; preds = %do.body2
  br label %do.end, !dbg !10605

do.end:                                           ; preds = %do.body3
  br label %do.body4, !dbg !10603

do.body4:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.1, i64 0, i64 0), i32 1426, i32 0, i64 12) #10, !dbg !10607, !srcloc !10609
  br label %do.end5, !dbg !10607

do.end5:                                          ; preds = %do.body4
  br label %do.body6, !dbg !10603

do.body6:                                         ; preds = %do.end5
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 267) #10, !dbg !10610, !srcloc !10613
  unreachable, !dbg !10614

do.end7:                                          ; No predecessors!
  br label %do.end8, !dbg !10603

do.end8:                                          ; preds = %do.end7
  br label %if.end, !dbg !10603

if.end:                                           ; preds = %do.end8, %do.body
  br label %do.end9, !dbg !10602

do.end9:                                          ; preds = %if.end
  %3 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !10615
  %call = call i32 @ufx_i2c_configure(%struct.ufx_data* %3) #11, !dbg !10616
  store i32 %call, i32* %status, align 4, !dbg !10617
  %4 = load i32, i32* %status, align 4, !dbg !10618
  %cmp10 = icmp slt i32 %4, 0, !dbg !10620
  br i1 %cmp10, label %if.then12, label %if.end14, !dbg !10621

if.then12:                                        ; preds = %do.end9
  %call13 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.113, i64 0, i64 0)) #12, !dbg !10622
  %5 = load i32, i32* %status, align 4, !dbg !10624
  store i32 %5, i32* %retval, align 4, !dbg !10625
  br label %return, !dbg !10625

if.end14:                                         ; preds = %do.end9
  %6 = load i8*, i8** %edid.addr, align 8, !dbg !10626
  call void @llvm.memset.p0i8.i64(i8* align 1 %6, i8 -1, i64 128, i1 false), !dbg !10627
  store i32 0, i32* %i, align 4, !dbg !10628
  br label %for.cond, !dbg !10630

for.cond:                                         ; preds = %for.inc47, %if.end14
  %7 = load i32, i32* %i, align 4, !dbg !10631
  %cmp15 = icmp slt i32 %7, 2, !dbg !10633
  br i1 %cmp15, label %for.body, label %for.end49, !dbg !10634

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %temp, metadata !10635, metadata !DIExpression()), !dbg !10637
  %8 = load i32, i32* %i, align 4, !dbg !10638
  %mul = mul i32 %8, 64, !dbg !10639
  %shl = shl i32 %mul, 8, !dbg !10640
  %or = or i32 737607680, %shl, !dbg !10641
  store i32 %or, i32* %temp, align 4, !dbg !10637
  %9 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !10642
  %10 = load i32, i32* %temp, align 4, !dbg !10643
  %call17 = call i32 @ufx_reg_write(%struct.ufx_data* %9, i32 4352, i32 %10) #11, !dbg !10644
  store i32 %call17, i32* %status, align 4, !dbg !10645
  %11 = load i32, i32* %status, align 4, !dbg !10646
  %cmp18 = icmp slt i32 %11, 0, !dbg !10646
  br i1 %cmp18, label %if.then20, label %if.end22, !dbg !10649

if.then20:                                        ; preds = %for.body
  %call21 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.114, i64 0, i64 0)) #12, !dbg !10650
  %12 = load i32, i32* %status, align 4, !dbg !10650
  store i32 %12, i32* %retval, align 4, !dbg !10650
  br label %return, !dbg !10650

if.end22:                                         ; preds = %for.body
  %13 = load i32, i32* %temp, align 4, !dbg !10652
  %or23 = or i32 %13, -2147483648, !dbg !10652
  store i32 %or23, i32* %temp, align 4, !dbg !10652
  %14 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !10653
  %15 = load i32, i32* %temp, align 4, !dbg !10654
  %call24 = call i32 @ufx_reg_write(%struct.ufx_data* %14, i32 4352, i32 %15) #11, !dbg !10655
  store i32 %call24, i32* %status, align 4, !dbg !10656
  %16 = load i32, i32* %status, align 4, !dbg !10657
  %cmp25 = icmp slt i32 %16, 0, !dbg !10657
  br i1 %cmp25, label %if.then27, label %if.end29, !dbg !10660

if.then27:                                        ; preds = %if.end22
  %call28 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.114, i64 0, i64 0)) #12, !dbg !10661
  %17 = load i32, i32* %status, align 4, !dbg !10661
  store i32 %17, i32* %retval, align 4, !dbg !10661
  br label %return, !dbg !10661

if.end29:                                         ; preds = %if.end22
  %18 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !10663
  %call30 = call i32 @ufx_i2c_wait_busy(%struct.ufx_data* %18) #11, !dbg !10664
  store i32 %call30, i32* %status, align 4, !dbg !10665
  %19 = load i32, i32* %status, align 4, !dbg !10666
  %cmp31 = icmp slt i32 %19, 0, !dbg !10666
  br i1 %cmp31, label %if.then33, label %if.end35, !dbg !10669

if.then33:                                        ; preds = %if.end29
  %call34 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.115, i64 0, i64 0)) #12, !dbg !10670
  %20 = load i32, i32* %status, align 4, !dbg !10670
  store i32 %20, i32* %retval, align 4, !dbg !10670
  br label %return, !dbg !10670

if.end35:                                         ; preds = %if.end29
  store i32 0, i32* %j, align 4, !dbg !10672
  br label %for.cond36, !dbg !10674

for.cond36:                                       ; preds = %for.inc, %if.end35
  %21 = load i32, i32* %j, align 4, !dbg !10675
  %cmp37 = icmp slt i32 %21, 16, !dbg !10677
  br i1 %cmp37, label %for.body39, label %for.end, !dbg !10678

for.body39:                                       ; preds = %for.cond36
  call void @llvm.dbg.declare(metadata i32* %data_reg_addr, metadata !10679, metadata !DIExpression()), !dbg !10681
  %22 = load i32, i32* %j, align 4, !dbg !10682
  %mul40 = mul i32 %22, 4, !dbg !10683
  %add = add i32 4368, %mul40, !dbg !10684
  store i32 %add, i32* %data_reg_addr, align 4, !dbg !10681
  %23 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !10685
  %24 = load i32, i32* %data_reg_addr, align 4, !dbg !10686
  %25 = load i32*, i32** %edid_u32, align 8, !dbg !10687
  %incdec.ptr = getelementptr i32, i32* %25, i32 1, !dbg !10687
  store i32* %incdec.ptr, i32** %edid_u32, align 8, !dbg !10687
  %call41 = call i32 @ufx_reg_read(%struct.ufx_data* %23, i32 %24, i32* %25) #11, !dbg !10688
  store i32 %call41, i32* %status, align 4, !dbg !10689
  %26 = load i32, i32* %status, align 4, !dbg !10690
  %cmp42 = icmp slt i32 %26, 0, !dbg !10690
  br i1 %cmp42, label %if.then44, label %if.end46, !dbg !10693

if.then44:                                        ; preds = %for.body39
  %call45 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.116, i64 0, i64 0)) #12, !dbg !10694
  %27 = load i32, i32* %status, align 4, !dbg !10694
  store i32 %27, i32* %retval, align 4, !dbg !10694
  br label %return, !dbg !10694

if.end46:                                         ; preds = %for.body39
  br label %for.inc, !dbg !10696

for.inc:                                          ; preds = %if.end46
  %28 = load i32, i32* %j, align 4, !dbg !10697
  %inc = add i32 %28, 1, !dbg !10697
  store i32 %inc, i32* %j, align 4, !dbg !10697
  br label %for.cond36, !dbg !10698, !llvm.loop !10699

for.end:                                          ; preds = %for.cond36
  br label %for.inc47, !dbg !10701

for.inc47:                                        ; preds = %for.end
  %29 = load i32, i32* %i, align 4, !dbg !10702
  %inc48 = add i32 %29, 1, !dbg !10702
  store i32 %inc48, i32* %i, align 4, !dbg !10702
  br label %for.cond, !dbg !10703, !llvm.loop !10704

for.end49:                                        ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !10706
  br label %for.cond50, !dbg !10708

for.cond50:                                       ; preds = %for.inc59, %for.end49
  %30 = load i32, i32* %i, align 4, !dbg !10709
  %cmp51 = icmp slt i32 %30, 16, !dbg !10711
  br i1 %cmp51, label %for.body53, label %for.end61, !dbg !10712

for.body53:                                       ; preds = %for.cond50
  %31 = load i8*, i8** %edid.addr, align 8, !dbg !10713
  %32 = load i32, i32* %i, align 4, !dbg !10716
  %idxprom = sext i32 %32 to i64, !dbg !10713
  %arrayidx = getelementptr i8, i8* %31, i64 %idxprom, !dbg !10713
  %33 = load i8, i8* %arrayidx, align 1, !dbg !10713
  %conv54 = zext i8 %33 to i32, !dbg !10713
  %cmp55 = icmp ne i32 %conv54, 255, !dbg !10717
  br i1 %cmp55, label %if.then57, label %if.end58, !dbg !10718

if.then57:                                        ; preds = %for.body53
  store i32 0, i32* %tmp, align 4, !dbg !10719
  %34 = load i32, i32* %tmp, align 4, !dbg !10723
  store i32 128, i32* %retval, align 4, !dbg !10724
  br label %return, !dbg !10724

if.end58:                                         ; preds = %for.body53
  br label %for.inc59, !dbg !10725

for.inc59:                                        ; preds = %if.end58
  %35 = load i32, i32* %i, align 4, !dbg !10726
  %inc60 = add i32 %35, 1, !dbg !10726
  store i32 %inc60, i32* %i, align 4, !dbg !10726
  br label %for.cond50, !dbg !10727, !llvm.loop !10728

for.end61:                                        ; preds = %for.cond50
  %call62 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.117, i64 0, i64 0)) #12, !dbg !10730
  store i32 -110, i32* %retval, align 4, !dbg !10731
  br label %return, !dbg !10731

return:                                           ; preds = %for.end61, %if.then57, %if.then44, %if.then33, %if.then27, %if.then20, %if.then12
  %36 = load i32, i32* %retval, align 4, !dbg !10732
  ret i32 %36, !dbg !10732
}

; Function Attrs: noredzone
declare dso_local void @fb_edid_to_monspecs(i8*, %struct.fb_monspecs*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ufx_is_valid_mode(%struct.fb_videomode* %mode, %struct.fb_info* %info) #2 !dbg !10733 {
entry:
  %retval = alloca i32, align 4
  %mode.addr = alloca %struct.fb_videomode*, align 8
  %info.addr = alloca %struct.fb_info*, align 8
  %tmp = alloca i32, align 4
  %tmp3 = alloca i32, align 4
  %tmp5 = alloca i32, align 4
  store %struct.fb_videomode* %mode, %struct.fb_videomode** %mode.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fb_videomode** %mode.addr, metadata !10736, metadata !DIExpression()), !dbg !10737
  store %struct.fb_info* %info, %struct.fb_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fb_info** %info.addr, metadata !10738, metadata !DIExpression()), !dbg !10739
  %0 = load %struct.fb_videomode*, %struct.fb_videomode** %mode.addr, align 8, !dbg !10740
  %xres = getelementptr inbounds %struct.fb_videomode, %struct.fb_videomode* %0, i32 0, i32 2, !dbg !10742
  %1 = load i32, i32* %xres, align 4, !dbg !10742
  %2 = load %struct.fb_videomode*, %struct.fb_videomode** %mode.addr, align 8, !dbg !10743
  %yres = getelementptr inbounds %struct.fb_videomode, %struct.fb_videomode* %2, i32 0, i32 3, !dbg !10744
  %3 = load i32, i32* %yres, align 8, !dbg !10744
  %mul = mul i32 %1, %3, !dbg !10745
  %cmp = icmp ugt i32 %mul, 2359296, !dbg !10746
  br i1 %cmp, label %if.then, label %if.end, !dbg !10747

if.then:                                          ; preds = %entry
  store i32 0, i32* %tmp, align 4, !dbg !10748
  %4 = load i32, i32* %tmp, align 4, !dbg !10752
  store i32 0, i32* %retval, align 4, !dbg !10753
  br label %return, !dbg !10753

if.end:                                           ; preds = %entry
  %5 = load %struct.fb_videomode*, %struct.fb_videomode** %mode.addr, align 8, !dbg !10754
  %pixclock = getelementptr inbounds %struct.fb_videomode, %struct.fb_videomode* %5, i32 0, i32 4, !dbg !10756
  %6 = load i32, i32* %pixclock, align 4, !dbg !10756
  %cmp1 = icmp ult i32 %6, 5000, !dbg !10757
  br i1 %cmp1, label %if.then2, label %if.end4, !dbg !10758

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %tmp3, align 4, !dbg !10759
  %7 = load i32, i32* %tmp3, align 4, !dbg !10763
  store i32 0, i32* %retval, align 4, !dbg !10764
  br label %return, !dbg !10764

if.end4:                                          ; preds = %if.end
  store i32 0, i32* %tmp5, align 4, !dbg !10765
  %8 = load i32, i32* %tmp5, align 4, !dbg !10768
  store i32 1, i32* %retval, align 4, !dbg !10769
  br label %return, !dbg !10769

return:                                           ; preds = %if.end4, %if.then2, %if.then
  %9 = load i32, i32* %retval, align 4, !dbg !10770
  ret i32 %9, !dbg !10770
}

; Function Attrs: noredzone
declare dso_local i32 @fb_add_videomode(%struct.fb_videomode*, %struct.list_head*) #1

; Function Attrs: noredzone
declare dso_local %struct.fb_videomode* @fb_find_best_display(%struct.fb_monspecs*, %struct.list_head*) #1

; Function Attrs: noredzone
declare dso_local %struct.fb_videomode* @fb_find_nearest_mode(%struct.fb_videomode*, %struct.list_head*) #1

; Function Attrs: noredzone
declare dso_local void @fb_videomode_to_var(%struct.fb_var_screeninfo*, %struct.fb_videomode*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ufx_var_color_format(%struct.fb_var_screeninfo* %var) #2 !dbg !10771 {
entry:
  %var.addr = alloca %struct.fb_var_screeninfo*, align 8
  %red = alloca %struct.fb_bitfield, align 4
  %green = alloca %struct.fb_bitfield, align 4
  %blue = alloca %struct.fb_bitfield, align 4
  store %struct.fb_var_screeninfo* %var, %struct.fb_var_screeninfo** %var.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fb_var_screeninfo** %var.addr, metadata !10774, metadata !DIExpression()), !dbg !10775
  call void @llvm.dbg.declare(metadata %struct.fb_bitfield* %red, metadata !10776, metadata !DIExpression()), !dbg !10778
  %0 = bitcast %struct.fb_bitfield* %red to i8*, !dbg !10778
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %0, i8* align 4 bitcast (%struct.fb_bitfield* @__const.ufx_var_color_format.red to i8*), i64 12, i1 false), !dbg !10778
  call void @llvm.dbg.declare(metadata %struct.fb_bitfield* %green, metadata !10779, metadata !DIExpression()), !dbg !10780
  %1 = bitcast %struct.fb_bitfield* %green to i8*, !dbg !10780
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1, i8* align 4 bitcast (%struct.fb_bitfield* @__const.ufx_var_color_format.green to i8*), i64 12, i1 false), !dbg !10780
  call void @llvm.dbg.declare(metadata %struct.fb_bitfield* %blue, metadata !10781, metadata !DIExpression()), !dbg !10782
  %2 = bitcast %struct.fb_bitfield* %blue to i8*, !dbg !10782
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2, i8* align 4 bitcast (%struct.fb_bitfield* @__const.ufx_var_color_format.blue to i8*), i64 12, i1 false), !dbg !10782
  %3 = load %struct.fb_var_screeninfo*, %struct.fb_var_screeninfo** %var.addr, align 8, !dbg !10783
  %bits_per_pixel = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %3, i32 0, i32 6, !dbg !10784
  store i32 16, i32* %bits_per_pixel, align 4, !dbg !10785
  %4 = load %struct.fb_var_screeninfo*, %struct.fb_var_screeninfo** %var.addr, align 8, !dbg !10786
  %red1 = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %4, i32 0, i32 8, !dbg !10787
  %5 = bitcast %struct.fb_bitfield* %red1 to i8*, !dbg !10788
  %6 = bitcast %struct.fb_bitfield* %red to i8*, !dbg !10788
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %5, i8* align 4 %6, i64 12, i1 false), !dbg !10788
  %7 = load %struct.fb_var_screeninfo*, %struct.fb_var_screeninfo** %var.addr, align 8, !dbg !10789
  %green2 = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %7, i32 0, i32 9, !dbg !10790
  %8 = bitcast %struct.fb_bitfield* %green2 to i8*, !dbg !10791
  %9 = bitcast %struct.fb_bitfield* %green to i8*, !dbg !10791
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %8, i8* align 4 %9, i64 12, i1 false), !dbg !10791
  %10 = load %struct.fb_var_screeninfo*, %struct.fb_var_screeninfo** %var.addr, align 8, !dbg !10792
  %blue3 = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %10, i32 0, i32 10, !dbg !10793
  %11 = bitcast %struct.fb_bitfield* %blue3 to i8*, !dbg !10794
  %12 = bitcast %struct.fb_bitfield* %blue to i8*, !dbg !10794
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %11, i8* align 4 %12, i64 12, i1 false), !dbg !10794
  ret void, !dbg !10795
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ufx_realloc_framebuffer(%struct.ufx_data* %dev, %struct.fb_info* %info) #2 !dbg !10796 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.ufx_data*, align 8
  %info.addr = alloca %struct.fb_info*, align 8
  %old_len = alloca i32, align 4
  %new_len = alloca i32, align 4
  %old_fb = alloca i8*, align 8
  %new_fb = alloca i8*, align 8
  %tmp = alloca i32, align 4
  store %struct.ufx_data* %dev, %struct.ufx_data** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ufx_data** %dev.addr, metadata !10799, metadata !DIExpression()), !dbg !10800
  store %struct.fb_info* %info, %struct.fb_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fb_info** %info.addr, metadata !10801, metadata !DIExpression()), !dbg !10802
  call void @llvm.dbg.declare(metadata i32* %old_len, metadata !10803, metadata !DIExpression()), !dbg !10804
  %0 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !10805
  %fix = getelementptr inbounds %struct.fb_info, %struct.fb_info* %0, i32 0, i32 7, !dbg !10806
  %smem_len = getelementptr inbounds %struct.fb_fix_screeninfo, %struct.fb_fix_screeninfo* %fix, i32 0, i32 2, !dbg !10807
  %1 = load i32, i32* %smem_len, align 8, !dbg !10807
  store i32 %1, i32* %old_len, align 4, !dbg !10804
  call void @llvm.dbg.declare(metadata i32* %new_len, metadata !10808, metadata !DIExpression()), !dbg !10809
  call void @llvm.dbg.declare(metadata i8** %old_fb, metadata !10810, metadata !DIExpression()), !dbg !10811
  %2 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !10812
  %3 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %2, i32 0, i32 25, !dbg !10813
  %screen_base = bitcast %union.anon.66* %3 to i8**, !dbg !10813
  %4 = load i8*, i8** %screen_base, align 8, !dbg !10813
  store i8* %4, i8** %old_fb, align 8, !dbg !10811
  call void @llvm.dbg.declare(metadata i8** %new_fb, metadata !10814, metadata !DIExpression()), !dbg !10815
  store i32 0, i32* %tmp, align 4, !dbg !10816
  %5 = load i32, i32* %tmp, align 4, !dbg !10819
  %6 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !10820
  %fix1 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %6, i32 0, i32 7, !dbg !10821
  %line_length = getelementptr inbounds %struct.fb_fix_screeninfo, %struct.fb_fix_screeninfo* %fix1, i32 0, i32 9, !dbg !10822
  %7 = load i32, i32* %line_length, align 8, !dbg !10822
  %8 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !10823
  %var = getelementptr inbounds %struct.fb_info, %struct.fb_info* %8, i32 0, i32 6, !dbg !10824
  %yres = getelementptr inbounds %struct.fb_var_screeninfo, %struct.fb_var_screeninfo* %var, i32 0, i32 1, !dbg !10825
  %9 = load i32, i32* %yres, align 4, !dbg !10825
  %mul = mul i32 %7, %9, !dbg !10826
  store i32 %mul, i32* %new_len, align 4, !dbg !10827
  %10 = load i32, i32* %new_len, align 4, !dbg !10828
  %add = add i32 %10, 4095, !dbg !10828
  %and = and i32 %add, -4096, !dbg !10828
  %11 = load i32, i32* %old_len, align 4, !dbg !10830
  %cmp = icmp sgt i32 %and, %11, !dbg !10831
  br i1 %cmp, label %if.then, label %if.end15, !dbg !10832

if.then:                                          ; preds = %entry
  %12 = load i32, i32* %new_len, align 4, !dbg !10833
  %conv = sext i32 %12 to i64, !dbg !10833
  %call = call i8* @vmalloc(i64 %conv) #11, !dbg !10835
  store i8* %call, i8** %new_fb, align 8, !dbg !10836
  %13 = load i8*, i8** %new_fb, align 8, !dbg !10837
  %tobool = icmp ne i8* %13, null, !dbg !10837
  br i1 %tobool, label %if.end, label %if.then2, !dbg !10839

if.then2:                                         ; preds = %if.then
  store i32 -12, i32* %retval, align 4, !dbg !10840
  br label %return, !dbg !10840

if.end:                                           ; preds = %if.then
  %14 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !10841
  %15 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %14, i32 0, i32 25, !dbg !10843
  %screen_base3 = bitcast %union.anon.66* %15 to i8**, !dbg !10843
  %16 = load i8*, i8** %screen_base3, align 8, !dbg !10843
  %tobool4 = icmp ne i8* %16, null, !dbg !10841
  br i1 %tobool4, label %if.then5, label %if.end8, !dbg !10844

if.then5:                                         ; preds = %if.end
  %17 = load i8*, i8** %new_fb, align 8, !dbg !10845
  %18 = load i8*, i8** %old_fb, align 8, !dbg !10847
  %19 = load i32, i32* %old_len, align 4, !dbg !10848
  %conv6 = sext i32 %19 to i64, !dbg !10848
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %17, i8* align 1 %18, i64 %conv6, i1 false), !dbg !10849
  %20 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !10850
  %21 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %20, i32 0, i32 25, !dbg !10851
  %screen_base7 = bitcast %union.anon.66* %21 to i8**, !dbg !10851
  %22 = load i8*, i8** %screen_base7, align 8, !dbg !10851
  call void @vfree(i8* %22) #11, !dbg !10852
  br label %if.end8, !dbg !10853

if.end8:                                          ; preds = %if.then5, %if.end
  %23 = load i8*, i8** %new_fb, align 8, !dbg !10854
  %24 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !10855
  %25 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %24, i32 0, i32 25, !dbg !10856
  %screen_base9 = bitcast %union.anon.66* %25 to i8**, !dbg !10856
  store i8* %23, i8** %screen_base9, align 8, !dbg !10857
  %26 = load i32, i32* %new_len, align 4, !dbg !10858
  %add10 = add i32 %26, 4095, !dbg !10858
  %and11 = and i32 %add10, -4096, !dbg !10858
  %27 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !10859
  %fix12 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %27, i32 0, i32 7, !dbg !10860
  %smem_len13 = getelementptr inbounds %struct.fb_fix_screeninfo, %struct.fb_fix_screeninfo* %fix12, i32 0, i32 2, !dbg !10861
  store i32 %and11, i32* %smem_len13, align 8, !dbg !10862
  %28 = load i8*, i8** %new_fb, align 8, !dbg !10863
  %29 = ptrtoint i8* %28 to i64, !dbg !10864
  %30 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !10865
  %fix14 = getelementptr inbounds %struct.fb_info, %struct.fb_info* %30, i32 0, i32 7, !dbg !10866
  %smem_start = getelementptr inbounds %struct.fb_fix_screeninfo, %struct.fb_fix_screeninfo* %fix14, i32 0, i32 1, !dbg !10867
  store i64 %29, i64* %smem_start, align 8, !dbg !10868
  %31 = load %struct.fb_info*, %struct.fb_info** %info.addr, align 8, !dbg !10869
  %flags = getelementptr inbounds %struct.fb_info, %struct.fb_info* %31, i32 0, i32 2, !dbg !10870
  store i32 264068, i32* %flags, align 8, !dbg !10871
  br label %if.end15, !dbg !10872

if.end15:                                         ; preds = %if.end8, %entry
  store i32 0, i32* %retval, align 4, !dbg !10873
  br label %return, !dbg !10873

return:                                           ; preds = %if.end15, %if.then2
  %32 = load i32, i32* %retval, align 4, !dbg !10874
  ret i32 %32, !dbg !10874
}

; Function Attrs: noredzone
declare dso_local void @mutex_unlock(%struct.mutex*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ufx_i2c_configure(%struct.ufx_data* %dev) #2 !dbg !10875 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.ufx_data*, align 8
  %status = alloca i32, align 4
  store %struct.ufx_data* %dev, %struct.ufx_data** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ufx_data** %dev.addr, metadata !10876, metadata !DIExpression()), !dbg !10877
  call void @llvm.dbg.declare(metadata i32* %status, metadata !10878, metadata !DIExpression()), !dbg !10879
  %0 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !10880
  %call = call i32 @ufx_reg_write(%struct.ufx_data* %0, i32 4204, i32 0) #11, !dbg !10881
  store i32 %call, i32* %status, align 4, !dbg !10879
  %1 = load i32, i32* %status, align 4, !dbg !10882
  %cmp = icmp slt i32 %1, 0, !dbg !10882
  br i1 %cmp, label %if.then, label %if.end, !dbg !10885

if.then:                                          ; preds = %entry
  %call1 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.103, i64 0, i64 0)) #12, !dbg !10886
  %2 = load i32, i32* %status, align 4, !dbg !10886
  store i32 %2, i32* %retval, align 4, !dbg !10886
  br label %return, !dbg !10886

if.end:                                           ; preds = %entry
  %3 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !10888
  %call2 = call i32 @ufx_reg_write(%struct.ufx_data* %3, i32 12304, i32 0) #11, !dbg !10889
  store i32 %call2, i32* %status, align 4, !dbg !10890
  %4 = load i32, i32* %status, align 4, !dbg !10891
  %cmp3 = icmp slt i32 %4, 0, !dbg !10891
  br i1 %cmp3, label %if.then4, label %if.end6, !dbg !10894

if.then4:                                         ; preds = %if.end
  %call5 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.118, i64 0, i64 0)) #12, !dbg !10895
  %5 = load i32, i32* %status, align 4, !dbg !10895
  store i32 %5, i32* %retval, align 4, !dbg !10895
  br label %return, !dbg !10895

if.end6:                                          ; preds = %if.end
  %6 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !10897
  %call7 = call i32 @ufx_reg_clear_and_set_bits(%struct.ufx_data* %6, i32 4100, i32 1023, i32 80) #11, !dbg !10898
  store i32 %call7, i32* %status, align 4, !dbg !10899
  %7 = load i32, i32* %status, align 4, !dbg !10900
  %cmp8 = icmp slt i32 %7, 0, !dbg !10900
  br i1 %cmp8, label %if.then9, label %if.end11, !dbg !10903

if.then9:                                         ; preds = %if.end6
  %call10 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.119, i64 0, i64 0)) #12, !dbg !10904
  %8 = load i32, i32* %status, align 4, !dbg !10904
  store i32 %8, i32* %retval, align 4, !dbg !10904
  br label %return, !dbg !10904

if.end11:                                         ; preds = %if.end6
  %9 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !10906
  %call12 = call i32 @ufx_reg_write(%struct.ufx_data* %9, i32 4204, i32 1) #11, !dbg !10907
  store i32 %call12, i32* %status, align 4, !dbg !10908
  %10 = load i32, i32* %status, align 4, !dbg !10909
  %cmp13 = icmp slt i32 %10, 0, !dbg !10909
  br i1 %cmp13, label %if.then14, label %if.end16, !dbg !10912

if.then14:                                        ; preds = %if.end11
  %call15 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.109, i64 0, i64 0)) #12, !dbg !10913
  %11 = load i32, i32* %status, align 4, !dbg !10913
  store i32 %11, i32* %retval, align 4, !dbg !10913
  br label %return, !dbg !10913

if.end16:                                         ; preds = %if.end11
  store i32 0, i32* %retval, align 4, !dbg !10915
  br label %return, !dbg !10915

return:                                           ; preds = %if.end16, %if.then14, %if.then9, %if.then4, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !10916
  ret i32 %12, !dbg !10916
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ufx_i2c_wait_busy(%struct.ufx_data* %dev) #2 !dbg !10917 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.ufx_data*, align 8
  %tmp = alloca i32, align 4
  %i = alloca i32, align 4
  %status = alloca i32, align 4
  store %struct.ufx_data* %dev, %struct.ufx_data** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ufx_data** %dev.addr, metadata !10918, metadata !DIExpression()), !dbg !10919
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !10920, metadata !DIExpression()), !dbg !10921
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10922, metadata !DIExpression()), !dbg !10923
  call void @llvm.dbg.declare(metadata i32* %status, metadata !10924, metadata !DIExpression()), !dbg !10925
  store i32 0, i32* %i, align 4, !dbg !10926
  br label %for.cond, !dbg !10928

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !10929
  %cmp = icmp slt i32 %0, 15, !dbg !10931
  br i1 %cmp, label %for.body, label %for.end, !dbg !10932

for.body:                                         ; preds = %for.cond
  %1 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !10933
  %call = call i32 @ufx_reg_read(%struct.ufx_data* %1, i32 4352, i32* %tmp) #11, !dbg !10935
  store i32 %call, i32* %status, align 4, !dbg !10936
  %2 = load i32, i32* %status, align 4, !dbg !10937
  %cmp1 = icmp slt i32 %2, 0, !dbg !10937
  br i1 %cmp1, label %if.then, label %if.end, !dbg !10940

if.then:                                          ; preds = %for.body
  %call2 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.120, i64 0, i64 0)) #12, !dbg !10941
  %3 = load i32, i32* %status, align 4, !dbg !10941
  store i32 %3, i32* %retval, align 4, !dbg !10941
  br label %return, !dbg !10941

if.end:                                           ; preds = %for.body
  %4 = load i32, i32* %tmp, align 4, !dbg !10943
  %and = and i32 %4, -2147483648, !dbg !10945
  %cmp3 = icmp eq i32 %and, 0, !dbg !10946
  br i1 %cmp3, label %if.then4, label %if.end9, !dbg !10947

if.then4:                                         ; preds = %if.end
  %5 = load i32, i32* %tmp, align 4, !dbg !10948
  %and5 = and i32 %5, 536870912, !dbg !10951
  %tobool = icmp ne i32 %and5, 0, !dbg !10951
  br i1 %tobool, label %if.then6, label %if.end8, !dbg !10952

if.then6:                                         ; preds = %if.then4
  %6 = load i32, i32* %tmp, align 4, !dbg !10953
  %call7 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.121, i64 0, i64 0), i32 %6) #12, !dbg !10953
  store i32 -5, i32* %retval, align 4, !dbg !10955
  br label %return, !dbg !10955

if.end8:                                          ; preds = %if.then4
  store i32 0, i32* %retval, align 4, !dbg !10956
  br label %return, !dbg !10956

if.end9:                                          ; preds = %if.end
  %7 = load i32, i32* %i, align 4, !dbg !10957
  %cmp10 = icmp sge i32 %7, 10, !dbg !10959
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !10960

if.then11:                                        ; preds = %if.end9
  call void @msleep(i32 10) #11, !dbg !10961
  br label %if.end12, !dbg !10961

if.end12:                                         ; preds = %if.then11, %if.end9
  br label %for.inc, !dbg !10962

for.inc:                                          ; preds = %if.end12
  %8 = load i32, i32* %i, align 4, !dbg !10963
  %inc = add i32 %8, 1, !dbg !10963
  store i32 %inc, i32* %i, align 4, !dbg !10963
  br label %for.cond, !dbg !10964, !llvm.loop !10965

for.end:                                          ; preds = %for.cond
  %call13 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.122, i64 0, i64 0)) #12, !dbg !10967
  %9 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !10968
  %call14 = call i32 @ufx_reg_write(%struct.ufx_data* %9, i32 4352, i32 1073741824) #11, !dbg !10969
  store i32 %call14, i32* %status, align 4, !dbg !10970
  %10 = load i32, i32* %status, align 4, !dbg !10971
  %cmp15 = icmp slt i32 %10, 0, !dbg !10971
  br i1 %cmp15, label %if.then16, label %if.end18, !dbg !10974

if.then16:                                        ; preds = %for.end
  %call17 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.123, i64 0, i64 0)) #12, !dbg !10975
  %11 = load i32, i32* %status, align 4, !dbg !10975
  store i32 %11, i32* %retval, align 4, !dbg !10975
  br label %return, !dbg !10975

if.end18:                                         ; preds = %for.end
  store i32 -110, i32* %retval, align 4, !dbg !10977
  br label %return, !dbg !10977

return:                                           ; preds = %if.end18, %if.then16, %if.end8, %if.then6, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !10978
  ret i32 %12, !dbg !10978
}

; Function Attrs: noredzone
declare dso_local i8* @vmalloc(i64) #1

; Function Attrs: noredzone
declare dso_local void @fb_var_to_videomode(%struct.fb_videomode*, %struct.fb_var_screeninfo*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @refcount_dec_and_test(%struct.refcount_struct* %r) #2 !dbg !10979 {
entry:
  %r.addr = alloca %struct.refcount_struct*, align 8
  store %struct.refcount_struct* %r, %struct.refcount_struct** %r.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.refcount_struct** %r.addr, metadata !10982, metadata !DIExpression()), !dbg !10983
  %0 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !10984
  %call = call zeroext i1 @__refcount_dec_and_test(%struct.refcount_struct* %0, i32* null) #11, !dbg !10985
  ret i1 %call, !dbg !10986
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__refcount_dec_and_test(%struct.refcount_struct* %r, i32* %oldp) #2 !dbg !10987 {
entry:
  %r.addr = alloca %struct.refcount_struct*, align 8
  %oldp.addr = alloca i32*, align 8
  store %struct.refcount_struct* %r, %struct.refcount_struct** %r.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.refcount_struct** %r.addr, metadata !10990, metadata !DIExpression()), !dbg !10991
  store i32* %oldp, i32** %oldp.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %oldp.addr, metadata !10992, metadata !DIExpression()), !dbg !10993
  %0 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !10994
  %1 = load i32*, i32** %oldp.addr, align 8, !dbg !10995
  %call = call zeroext i1 @__refcount_sub_and_test(i32 1, %struct.refcount_struct* %0, i32* %1) #11, !dbg !10996
  ret i1 %call, !dbg !10997
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__refcount_sub_and_test(i32 %i, %struct.refcount_struct* %r, i32* %oldp) #2 !dbg !10998 {
entry:
  %i.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i.i, metadata !11001, metadata !DIExpression()), !dbg !11003
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !11007, metadata !DIExpression()), !dbg !11008
  %__ret.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret.i.i, metadata !11009, metadata !DIExpression()), !dbg !11011
  %tmp.i.i = alloca i32, align 4
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !7350, metadata !DIExpression()), !dbg !11012
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !7354, metadata !DIExpression()), !dbg !11014
  %i.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i, metadata !11015, metadata !DIExpression()), !dbg !11016
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !11017, metadata !DIExpression()), !dbg !11018
  %retval = alloca i1, align 1
  %i.addr = alloca i32, align 4
  %r.addr = alloca %struct.refcount_struct*, align 8
  %oldp.addr = alloca i32*, align 8
  %old = alloca i32, align 4
  store i32 %i, i32* %i.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr, metadata !11019, metadata !DIExpression()), !dbg !11020
  store %struct.refcount_struct* %r, %struct.refcount_struct** %r.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.refcount_struct** %r.addr, metadata !11021, metadata !DIExpression()), !dbg !11022
  store i32* %oldp, i32** %oldp.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %oldp.addr, metadata !11023, metadata !DIExpression()), !dbg !11024
  call void @llvm.dbg.declare(metadata i32* %old, metadata !11025, metadata !DIExpression()), !dbg !11026
  %0 = load i32, i32* %i.addr, align 4, !dbg !11027
  %1 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !11028
  %refs = getelementptr inbounds %struct.refcount_struct, %struct.refcount_struct* %1, i32 0, i32 0, !dbg !11029
  store i32 %0, i32* %i.addr.i, align 4
  store %struct.atomic_t* %refs, %struct.atomic_t** %v.addr.i, align 8
  %2 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !11030
  %3 = bitcast %struct.atomic_t* %2 to i8*, !dbg !11030
  store i8* %3, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %4 = load i8*, i8** %v.addr.i.i, align 8, !dbg !11031
  %5 = load i64, i64* %size.addr.i.i, align 8, !dbg !11032
  %conv.i.i = trunc i64 %5 to i32, !dbg !11032
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %4, i32 %conv.i.i) #13, !dbg !11033
  %6 = load i8*, i8** %v.addr.i.i, align 8, !dbg !11034
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !11034
  call void @kcsan_check_access(i8* %6, i64 %7, i32 7) #13, !dbg !11034
  %8 = load i32, i32* %i.addr.i, align 4, !dbg !11035
  %9 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !11036
  store i32 %8, i32* %i.addr.i.i, align 4
  store %struct.atomic_t* %9, %struct.atomic_t** %v.addr.i1.i, align 8
  %10 = load i32, i32* %i.addr.i.i, align 4, !dbg !11011
  %sub.i.i = sub i32 0, %10, !dbg !11011
  store i32 %sub.i.i, i32* %__ret.i.i, align 4, !dbg !11011
  %11 = load i32, i32* %__ret.i.i, align 4, !dbg !11011
  %12 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !11011
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %12, i32 0, i32 0, !dbg !11011
  %13 = call i32 asm sideeffect "xaddl $0, $1\0A", "=r,=*m,0,*m,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i32* %counter.i.i, i32 %11, i32* %counter.i.i) #10, !dbg !11011, !srcloc !11037
  store i32 %13, i32* %__ret.i.i, align 4, !dbg !11011
  %14 = load i32, i32* %__ret.i.i, align 4, !dbg !11011
  store i32 %14, i32* %tmp.i.i, align 4, !dbg !11011
  %15 = load i32, i32* %tmp.i.i, align 4, !dbg !11011
  store i32 %15, i32* %old, align 4, !dbg !11026
  %16 = load i32*, i32** %oldp.addr, align 8, !dbg !11038
  %tobool = icmp ne i32* %16, null, !dbg !11038
  br i1 %tobool, label %if.then, label %if.end, !dbg !11040

if.then:                                          ; preds = %entry
  %17 = load i32, i32* %old, align 4, !dbg !11041
  %18 = load i32*, i32** %oldp.addr, align 8, !dbg !11042
  store i32 %17, i32* %18, align 4, !dbg !11043
  br label %if.end, !dbg !11044

if.end:                                           ; preds = %if.then, %entry
  %19 = load i32, i32* %old, align 4, !dbg !11045
  %20 = load i32, i32* %i.addr, align 4, !dbg !11047
  %cmp = icmp eq i32 %19, %20, !dbg !11048
  br i1 %cmp, label %if.then1, label %if.end2, !dbg !11049

if.then1:                                         ; preds = %if.end
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !11050, !srcloc !11052
  store i1 true, i1* %retval, align 1, !dbg !11053
  br label %return, !dbg !11053

if.end2:                                          ; preds = %if.end
  %21 = load i32, i32* %old, align 4, !dbg !11054
  %cmp3 = icmp slt i32 %21, 0, !dbg !11054
  br i1 %cmp3, label %lor.end, label %lor.rhs, !dbg !11054

lor.rhs:                                          ; preds = %if.end2
  %22 = load i32, i32* %old, align 4, !dbg !11054
  %23 = load i32, i32* %i.addr, align 4, !dbg !11054
  %sub = sub i32 %22, %23, !dbg !11054
  %cmp4 = icmp slt i32 %sub, 0, !dbg !11054
  br label %lor.end, !dbg !11054

lor.end:                                          ; preds = %lor.rhs, %if.end2
  %24 = phi i1 [ true, %if.end2 ], [ %cmp4, %lor.rhs ]
  %lnot = xor i1 %24, true, !dbg !11054
  %lnot5 = xor i1 %lnot, true, !dbg !11054
  %lnot.ext = zext i1 %lnot5 to i32, !dbg !11054
  %conv = sext i32 %lnot.ext to i64, !dbg !11054
  %tobool6 = icmp ne i64 %conv, 0, !dbg !11054
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !11056

if.then7:                                         ; preds = %lor.end
  %25 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !11057
  call void @refcount_warn_saturate(%struct.refcount_struct* %25, i32 3) #11, !dbg !11058
  br label %if.end8, !dbg !11058

if.end8:                                          ; preds = %if.then7, %lor.end
  store i1 false, i1* %retval, align 1, !dbg !11059
  br label %return, !dbg !11059

return:                                           ; preds = %if.end8, %if.then1
  %26 = load i1, i1* %retval, align 1, !dbg !11060
  ret i1 %26, !dbg !11060
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ufx_free_urb_list(%struct.ufx_data* %dev) #2 !dbg !11061 {
entry:
  %lock.addr.i34 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i34, metadata !7502, metadata !DIExpression()), !dbg !11064
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !7508, metadata !DIExpression()), !dbg !11067
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5700, metadata !DIExpression()), !dbg !11068
  %dev.addr = alloca %struct.ufx_data*, align 8
  %count = alloca i32, align 4
  %node = alloca %struct.list_head*, align 8
  %unode = alloca %struct.urb_node*, align 8
  %urb = alloca %struct.urb*, align 8
  %ret = alloca i32, align 4
  %flags = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp5 = alloca i32, align 4
  %__dummy9 = alloca i64, align 8
  %__dummy210 = alloca i64, align 8
  %tmp13 = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp30 = alloca %struct.urb_node*, align 8
  store %struct.ufx_data* %dev, %struct.ufx_data** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ufx_data** %dev.addr, metadata !11075, metadata !DIExpression()), !dbg !11076
  call void @llvm.dbg.declare(metadata i32* %count, metadata !11077, metadata !DIExpression()), !dbg !11078
  %0 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !11079
  %urbs = getelementptr inbounds %struct.ufx_data, %struct.ufx_data* %0, i32 0, i32 3, !dbg !11080
  %count1 = getelementptr inbounds %struct.urb_list, %struct.urb_list* %urbs, i32 0, i32 4, !dbg !11081
  %1 = load i32, i32* %count1, align 4, !dbg !11081
  store i32 %1, i32* %count, align 4, !dbg !11078
  call void @llvm.dbg.declare(metadata %struct.list_head** %node, metadata !11082, metadata !DIExpression()), !dbg !11083
  call void @llvm.dbg.declare(metadata %struct.urb_node** %unode, metadata !11084, metadata !DIExpression()), !dbg !11085
  call void @llvm.dbg.declare(metadata %struct.urb** %urb, metadata !11086, metadata !DIExpression()), !dbg !11087
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !11088, metadata !DIExpression()), !dbg !11089
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !11090, metadata !DIExpression()), !dbg !11091
  store i32 0, i32* %tmp, align 4, !dbg !11092
  %2 = load i32, i32* %tmp, align 4, !dbg !11095
  br label %while.cond, !dbg !11096

while.cond:                                       ; preds = %do.end29, %entry
  %3 = load i32, i32* %count, align 4, !dbg !11097
  %dec = add i32 %3, -1, !dbg !11097
  store i32 %dec, i32* %count, align 4, !dbg !11097
  %tobool = icmp ne i32 %3, 0, !dbg !11096
  br i1 %tobool, label %while.body, label %while.end, !dbg !11096

while.body:                                       ; preds = %while.cond
  %4 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !11098
  %urbs2 = getelementptr inbounds %struct.ufx_data, %struct.ufx_data* %4, i32 0, i32 3, !dbg !11099
  %limit_sem = getelementptr inbounds %struct.urb_list, %struct.urb_list* %urbs2, i32 0, i32 2, !dbg !11100
  %call = call i32 @down_interruptible(%struct.semaphore* %limit_sem) #11, !dbg !11101
  store i32 %call, i32* %ret, align 4, !dbg !11102
  %5 = load i32, i32* %ret, align 4, !dbg !11103
  %tobool3 = icmp ne i32 %5, 0, !dbg !11103
  br i1 %tobool3, label %if.then, label %if.end, !dbg !11105

if.then:                                          ; preds = %while.body
  br label %while.end, !dbg !11106

if.end:                                           ; preds = %while.body
  br label %do.body, !dbg !11107

do.body:                                          ; preds = %if.end
  br label %do.body4, !dbg !11108

do.body4:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !11109, metadata !DIExpression()), !dbg !11111
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !11112, metadata !DIExpression()), !dbg !11111
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !11111
  %conv = zext i1 %cmp to i32, !dbg !11111
  store i32 1, i32* %tmp5, align 4, !dbg !11111
  %6 = load i32, i32* %tmp5, align 4, !dbg !11111
  br label %do.body6, !dbg !11113

do.body6:                                         ; preds = %do.body4
  br label %do.body7, !dbg !11114

do.body7:                                         ; preds = %do.body6
  br label %do.body8, !dbg !11115

do.body8:                                         ; preds = %do.body7
  call void @llvm.dbg.declare(metadata i64* %__dummy9, metadata !11117, metadata !DIExpression()), !dbg !11120
  call void @llvm.dbg.declare(metadata i64* %__dummy210, metadata !11121, metadata !DIExpression()), !dbg !11120
  %cmp11 = icmp eq i64* %__dummy9, %__dummy210, !dbg !11120
  %conv12 = zext i1 %cmp11 to i32, !dbg !11120
  store i32 1, i32* %tmp13, align 4, !dbg !11120
  %7 = load i32, i32* %tmp13, align 4, !dbg !11120
  %call14 = call i64 @arch_local_irq_save() #11, !dbg !11122
  store i64 %call14, i64* %flags, align 8, !dbg !11122
  br label %do.end, !dbg !11122

do.end:                                           ; preds = %do.body8
  br label %do.end15, !dbg !11115

do.end15:                                         ; preds = %do.end
  br label %do.body16, !dbg !11114

do.body16:                                        ; preds = %do.end15
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !11123, !srcloc !11124
  br label %do.body17, !dbg !11123

do.body17:                                        ; preds = %do.body16
  %8 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !11125
  %urbs18 = getelementptr inbounds %struct.ufx_data, %struct.ufx_data* %8, i32 0, i32 3, !dbg !11125
  %lock = getelementptr inbounds %struct.urb_list, %struct.urb_list* %urbs18, i32 0, i32 1, !dbg !11125
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %9 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !11126
  %10 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %9, i32 0, i32 0, !dbg !11127
  %rlock.i = bitcast %union.anon.3* %10 to %struct.raw_spinlock*, !dbg !11127
  br label %do.end20, !dbg !11125

do.end20:                                         ; preds = %do.body17
  br label %do.end21, !dbg !11123

do.end21:                                         ; preds = %do.end20
  br label %do.end22, !dbg !11114

do.end22:                                         ; preds = %do.end21
  br label %do.end23, !dbg !11113

do.end23:                                         ; preds = %do.end22
  br label %do.end24, !dbg !11108

do.end24:                                         ; preds = %do.end23
  %11 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !11128
  %urbs25 = getelementptr inbounds %struct.ufx_data, %struct.ufx_data* %11, i32 0, i32 3, !dbg !11129
  %list = getelementptr inbounds %struct.urb_list, %struct.urb_list* %urbs25, i32 0, i32 0, !dbg !11130
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %list, i32 0, i32 0, !dbg !11131
  %12 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !11131
  store %struct.list_head* %12, %struct.list_head** %node, align 8, !dbg !11132
  %13 = load %struct.list_head*, %struct.list_head** %node, align 8, !dbg !11133
  call void @list_del_init(%struct.list_head* %13) #11, !dbg !11134
  %14 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !11135
  %urbs26 = getelementptr inbounds %struct.ufx_data, %struct.ufx_data* %14, i32 0, i32 3, !dbg !11136
  %lock27 = getelementptr inbounds %struct.urb_list, %struct.urb_list* %urbs26, i32 0, i32 1, !dbg !11137
  %15 = load i64, i64* %flags, align 8, !dbg !11138
  store %struct.spinlock* %lock27, %struct.spinlock** %lock.addr.i34, align 8
  store i64 %15, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !284, metadata !7611, metadata !DIExpression()) #10, !dbg !11139
  call void @llvm.dbg.declare(metadata !284, metadata !7615, metadata !DIExpression()) #10, !dbg !11139
  store i32 1, i32* %tmp.i, align 4, !dbg !11139
  %16 = load i32, i32* %tmp.i, align 4, !dbg !11139
  call void @llvm.dbg.declare(metadata !284, metadata !7616, metadata !DIExpression()) #10, !dbg !11140
  call void @llvm.dbg.declare(metadata !284, metadata !7622, metadata !DIExpression()) #10, !dbg !11140
  store i32 1, i32* %tmp8.i, align 4, !dbg !11140
  %17 = load i32, i32* %tmp8.i, align 4, !dbg !11140
  %18 = load i64, i64* %flags.addr.i, align 8, !dbg !11141
  call void @arch_local_irq_restore(i64 %18) #13, !dbg !11141
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !11142, !srcloc !7626
  %19 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i34, align 8, !dbg !11143
  %20 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %19, i32 0, i32 0, !dbg !11143
  %rlock.i35 = bitcast %union.anon.3* %20 to %struct.raw_spinlock*, !dbg !11143
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !11144, metadata !DIExpression()), !dbg !11146
  %21 = load %struct.list_head*, %struct.list_head** %node, align 8, !dbg !11146
  %22 = bitcast %struct.list_head* %21 to i8*, !dbg !11146
  store i8* %22, i8** %__mptr, align 8, !dbg !11146
  br label %do.body28, !dbg !11146

do.body28:                                        ; preds = %do.end24
  br label %do.end29, !dbg !11147

do.end29:                                         ; preds = %do.body28
  %23 = load i8*, i8** %__mptr, align 8, !dbg !11146
  %add.ptr = getelementptr i8, i8* %23, i64 0, !dbg !11146
  %24 = bitcast i8* %add.ptr to %struct.urb_node*, !dbg !11146
  store %struct.urb_node* %24, %struct.urb_node** %tmp30, align 8, !dbg !11147
  %25 = load %struct.urb_node*, %struct.urb_node** %tmp30, align 8, !dbg !11146
  store %struct.urb_node* %25, %struct.urb_node** %unode, align 8, !dbg !11149
  %26 = load %struct.urb_node*, %struct.urb_node** %unode, align 8, !dbg !11150
  %urb31 = getelementptr inbounds %struct.urb_node, %struct.urb_node* %26, i32 0, i32 3, !dbg !11151
  %27 = load %struct.urb*, %struct.urb** %urb31, align 8, !dbg !11151
  store %struct.urb* %27, %struct.urb** %urb, align 8, !dbg !11152
  %28 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !11153
  %dev32 = getelementptr inbounds %struct.urb, %struct.urb* %28, i32 0, i32 8, !dbg !11154
  %29 = load %struct.usb_device*, %struct.usb_device** %dev32, align 8, !dbg !11154
  %30 = load %struct.ufx_data*, %struct.ufx_data** %dev.addr, align 8, !dbg !11155
  %urbs33 = getelementptr inbounds %struct.ufx_data, %struct.ufx_data* %30, i32 0, i32 3, !dbg !11156
  %size = getelementptr inbounds %struct.urb_list, %struct.urb_list* %urbs33, i32 0, i32 5, !dbg !11157
  %31 = load i64, i64* %size, align 8, !dbg !11157
  %32 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !11158
  %transfer_buffer = getelementptr inbounds %struct.urb, %struct.urb* %32, i32 0, i32 14, !dbg !11159
  %33 = load i8*, i8** %transfer_buffer, align 8, !dbg !11159
  %34 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !11160
  %transfer_dma = getelementptr inbounds %struct.urb, %struct.urb* %34, i32 0, i32 15, !dbg !11161
  %35 = load i64, i64* %transfer_dma, align 8, !dbg !11161
  call void @usb_free_coherent(%struct.usb_device* %29, i64 %31, i8* %33, i64 %35) #11, !dbg !11162
  %36 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !11163
  call void @usb_free_urb(%struct.urb* %36) #11, !dbg !11164
  %37 = load %struct.list_head*, %struct.list_head** %node, align 8, !dbg !11165
  %38 = bitcast %struct.list_head* %37 to i8*, !dbg !11165
  call void @kfree(i8* %38) #11, !dbg !11166
  br label %while.cond, !dbg !11096, !llvm.loop !11167

while.end:                                        ; preds = %if.then, %while.cond
  ret void, !dbg !11169
}

; Function Attrs: noredzone
declare dso_local i32 @down_interruptible(%struct.semaphore*) #1

; Function Attrs: noredzone
declare dso_local void @usb_free_coherent(%struct.usb_device*, i64, i8*, i64) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @usb_get_intfdata(%struct.usb_interface* %intf) #2 !dbg !11170 {
entry:
  %intf.addr = alloca %struct.usb_interface*, align 8
  store %struct.usb_interface* %intf, %struct.usb_interface** %intf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_interface** %intf.addr, metadata !11173, metadata !DIExpression()), !dbg !11174
  %0 = load %struct.usb_interface*, %struct.usb_interface** %intf.addr, align 8, !dbg !11175
  %dev = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %0, i32 0, i32 7, !dbg !11176
  %call = call i8* @dev_get_drvdata(%struct.device* %dev) #11, !dbg !11177
  ret i8* %call, !dbg !11178
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @dev_get_drvdata(%struct.device* %dev) #2 !dbg !11179 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !11182, metadata !DIExpression()), !dbg !11183
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11184
  %driver_data = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 8, !dbg !11185
  %1 = load i8*, i8** %driver_data, align 8, !dbg !11185
  ret i8* %1, !dbg !11186
}

attributes #0 = { cold noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone speculatable willreturn }
attributes #4 = { cold noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind willreturn }
attributes #6 = { nounwind readnone willreturn }
attributes #7 = { nounwind willreturn }
attributes #8 = { noinline noredzone nounwind optnone readnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readonly }
attributes #10 = { nounwind }
attributes #11 = { noredzone }
attributes #12 = { cold noredzone }
attributes #13 = { noredzone nounwind }
attributes #14 = { noredzone nounwind readnone }

!llvm.dbg.cu = !{!2}
!llvm.named.register.rsp = !{!5033}
!llvm.module.flags = !{!5034, !5035, !5036, !5037}
!llvm.ident = !{!5038}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_ufx_driver_init269", scope: !2, file: !3, line: 1773, type: !211, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C89, file: !3, producer: "clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !205, globals: !4847, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "drivers/video/fbdev/smscufx.c", directory: "/home/lizy2001/genbc/linux")
!4 = !{!5, !13, !20, !26, !31, !37, !44, !50, !59, !67, !73, !79, !86, !94, !100, !114, !126, !135, !140, !147, !152, !185, !192, !200}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "usb_interface_condition", file: !6, line: 96, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./include/linux/usb.h", directory: "/home/lizy2001/genbc/linux")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12}
!9 = !DIEnumerator(name: "USB_INTERFACE_UNBOUND", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "USB_INTERFACE_BINDING", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "USB_INTERFACE_BOUND", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "USB_INTERFACE_UNBINDING", value: 3, isUnsigned: true)
!13 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "migrate_mode", file: !14, line: 15, baseType: !7, size: 32, elements: !15)
!14 = !DIFile(filename: "./include/linux/migrate_mode.h", directory: "/home/lizy2001/genbc/linux")
!15 = !{!16, !17, !18, !19}
!16 = !DIEnumerator(name: "MIGRATE_ASYNC", value: 0, isUnsigned: true)
!17 = !DIEnumerator(name: "MIGRATE_SYNC_LIGHT", value: 1, isUnsigned: true)
!18 = !DIEnumerator(name: "MIGRATE_SYNC", value: 2, isUnsigned: true)
!19 = !DIEnumerator(name: "MIGRATE_SYNC_NO_COPY", value: 3, isUnsigned: true)
!20 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "page_entry_size", file: !21, line: 546, baseType: !7, size: 32, elements: !22)
!21 = !DIFile(filename: "./include/linux/mm.h", directory: "/home/lizy2001/genbc/linux")
!22 = !{!23, !24, !25}
!23 = !DIEnumerator(name: "PE_SIZE_PTE", value: 0, isUnsigned: true)
!24 = !DIEnumerator(name: "PE_SIZE_PMD", value: 1, isUnsigned: true)
!25 = !DIEnumerator(name: "PE_SIZE_PUD", value: 2, isUnsigned: true)
!26 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "hrtimer_restart", file: !27, line: 65, baseType: !7, size: 32, elements: !28)
!27 = !DIFile(filename: "./include/linux/hrtimer.h", directory: "/home/lizy2001/genbc/linux")
!28 = !{!29, !30}
!29 = !DIEnumerator(name: "HRTIMER_NORESTART", value: 0, isUnsigned: true)
!30 = !DIEnumerator(name: "HRTIMER_RESTART", value: 1, isUnsigned: true)
!31 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "timespec_type", file: !32, line: 16, baseType: !7, size: 32, elements: !33)
!32 = !DIFile(filename: "./include/linux/restart_block.h", directory: "/home/lizy2001/genbc/linux")
!33 = !{!34, !35, !36}
!34 = !DIEnumerator(name: "TT_NONE", value: 0, isUnsigned: true)
!35 = !DIEnumerator(name: "TT_NATIVE", value: 1, isUnsigned: true)
!36 = !DIEnumerator(name: "TT_COMPAT", value: 2, isUnsigned: true)
!37 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "memory_type", file: !38, line: 59, baseType: !7, size: 32, elements: !39)
!38 = !DIFile(filename: "./include/linux/memremap.h", directory: "/home/lizy2001/genbc/linux")
!39 = !{!40, !41, !42, !43}
!40 = !DIEnumerator(name: "MEMORY_DEVICE_PRIVATE", value: 1, isUnsigned: true)
!41 = !DIEnumerator(name: "MEMORY_DEVICE_FS_DAX", value: 2, isUnsigned: true)
!42 = !DIEnumerator(name: "MEMORY_DEVICE_GENERIC", value: 3, isUnsigned: true)
!43 = !DIEnumerator(name: "MEMORY_DEVICE_PCI_P2PDMA", value: 4, isUnsigned: true)
!44 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "quota_type", file: !45, line: 54, baseType: !7, size: 32, elements: !46)
!45 = !DIFile(filename: "./include/linux/quota.h", directory: "/home/lizy2001/genbc/linux")
!46 = !{!47, !48, !49}
!47 = !DIEnumerator(name: "USRQUOTA", value: 0, isUnsigned: true)
!48 = !DIEnumerator(name: "GRPQUOTA", value: 1, isUnsigned: true)
!49 = !DIEnumerator(name: "PRJQUOTA", value: 2, isUnsigned: true)
!50 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rw_hint", file: !51, line: 296, baseType: !7, size: 32, elements: !52)
!51 = !DIFile(filename: "./include/linux/fs.h", directory: "/home/lizy2001/genbc/linux")
!52 = !{!53, !54, !55, !56, !57, !58}
!53 = !DIEnumerator(name: "WRITE_LIFE_NOT_SET", value: 0, isUnsigned: true)
!54 = !DIEnumerator(name: "WRITE_LIFE_NONE", value: 1, isUnsigned: true)
!55 = !DIEnumerator(name: "WRITE_LIFE_SHORT", value: 2, isUnsigned: true)
!56 = !DIEnumerator(name: "WRITE_LIFE_MEDIUM", value: 3, isUnsigned: true)
!57 = !DIEnumerator(name: "WRITE_LIFE_LONG", value: 4, isUnsigned: true)
!58 = !DIEnumerator(name: "WRITE_LIFE_EXTREME", value: 5, isUnsigned: true)
!59 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pid_type", file: !60, line: 9, baseType: !7, size: 32, elements: !61)
!60 = !DIFile(filename: "./include/linux/pid.h", directory: "/home/lizy2001/genbc/linux")
!61 = !{!62, !63, !64, !65, !66}
!62 = !DIEnumerator(name: "PIDTYPE_PID", value: 0, isUnsigned: true)
!63 = !DIEnumerator(name: "PIDTYPE_TGID", value: 1, isUnsigned: true)
!64 = !DIEnumerator(name: "PIDTYPE_PGID", value: 2, isUnsigned: true)
!65 = !DIEnumerator(name: "PIDTYPE_SID", value: 3, isUnsigned: true)
!66 = !DIEnumerator(name: "PIDTYPE_MAX", value: 4, isUnsigned: true)
!67 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kobj_ns_type", file: !68, line: 26, baseType: !7, size: 32, elements: !69)
!68 = !DIFile(filename: "./include/linux/kobject_ns.h", directory: "/home/lizy2001/genbc/linux")
!69 = !{!70, !71, !72}
!70 = !DIEnumerator(name: "KOBJ_NS_TYPE_NONE", value: 0, isUnsigned: true)
!71 = !DIEnumerator(name: "KOBJ_NS_TYPE_NET", value: 1, isUnsigned: true)
!72 = !DIEnumerator(name: "KOBJ_NS_TYPES", value: 2, isUnsigned: true)
!73 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "probe_type", file: !74, line: 44, baseType: !7, size: 32, elements: !75)
!74 = !DIFile(filename: "./include/linux/device/driver.h", directory: "/home/lizy2001/genbc/linux")
!75 = !{!76, !77, !78}
!76 = !DIEnumerator(name: "PROBE_DEFAULT_STRATEGY", value: 0, isUnsigned: true)
!77 = !DIEnumerator(name: "PROBE_PREFER_ASYNCHRONOUS", value: 1, isUnsigned: true)
!78 = !DIEnumerator(name: "PROBE_FORCE_SYNCHRONOUS", value: 2, isUnsigned: true)
!79 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dl_dev_state", file: !80, line: 343, baseType: !7, size: 32, elements: !81)
!80 = !DIFile(filename: "./include/linux/device.h", directory: "/home/lizy2001/genbc/linux")
!81 = !{!82, !83, !84, !85}
!82 = !DIEnumerator(name: "DL_DEV_NO_DRIVER", value: 0, isUnsigned: true)
!83 = !DIEnumerator(name: "DL_DEV_PROBING", value: 1, isUnsigned: true)
!84 = !DIEnumerator(name: "DL_DEV_DRIVER_BOUND", value: 2, isUnsigned: true)
!85 = !DIEnumerator(name: "DL_DEV_UNBINDING", value: 3, isUnsigned: true)
!86 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_request", file: !87, line: 524, baseType: !7, size: 32, elements: !88)
!87 = !DIFile(filename: "./include/linux/pm.h", directory: "/home/lizy2001/genbc/linux")
!88 = !{!89, !90, !91, !92, !93}
!89 = !DIEnumerator(name: "RPM_REQ_NONE", value: 0, isUnsigned: true)
!90 = !DIEnumerator(name: "RPM_REQ_IDLE", value: 1, isUnsigned: true)
!91 = !DIEnumerator(name: "RPM_REQ_SUSPEND", value: 2, isUnsigned: true)
!92 = !DIEnumerator(name: "RPM_REQ_AUTOSUSPEND", value: 3, isUnsigned: true)
!93 = !DIEnumerator(name: "RPM_REQ_RESUME", value: 4, isUnsigned: true)
!94 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_status", file: !87, line: 502, baseType: !7, size: 32, elements: !95)
!95 = !{!96, !97, !98, !99}
!96 = !DIEnumerator(name: "RPM_ACTIVE", value: 0, isUnsigned: true)
!97 = !DIEnumerator(name: "RPM_RESUMING", value: 1, isUnsigned: true)
!98 = !DIEnumerator(name: "RPM_SUSPENDED", value: 2, isUnsigned: true)
!99 = !DIEnumerator(name: "RPM_SUSPENDING", value: 3, isUnsigned: true)
!100 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "irq_domain_bus_token", file: !101, line: 76, baseType: !7, size: 32, elements: !102)
!101 = !DIFile(filename: "./include/linux/irqdomain.h", directory: "/home/lizy2001/genbc/linux")
!102 = !{!103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113}
!103 = !DIEnumerator(name: "DOMAIN_BUS_ANY", value: 0, isUnsigned: true)
!104 = !DIEnumerator(name: "DOMAIN_BUS_WIRED", value: 1, isUnsigned: true)
!105 = !DIEnumerator(name: "DOMAIN_BUS_GENERIC_MSI", value: 2, isUnsigned: true)
!106 = !DIEnumerator(name: "DOMAIN_BUS_PCI_MSI", value: 3, isUnsigned: true)
!107 = !DIEnumerator(name: "DOMAIN_BUS_PLATFORM_MSI", value: 4, isUnsigned: true)
!108 = !DIEnumerator(name: "DOMAIN_BUS_NEXUS", value: 5, isUnsigned: true)
!109 = !DIEnumerator(name: "DOMAIN_BUS_IPI", value: 6, isUnsigned: true)
!110 = !DIEnumerator(name: "DOMAIN_BUS_FSL_MC_MSI", value: 7, isUnsigned: true)
!111 = !DIEnumerator(name: "DOMAIN_BUS_TI_SCI_INTA_MSI", value: 8, isUnsigned: true)
!112 = !DIEnumerator(name: "DOMAIN_BUS_WAKEUP", value: 9, isUnsigned: true)
!113 = !DIEnumerator(name: "DOMAIN_BUS_VMD_MSI", value: 10, isUnsigned: true)
!114 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "usb_device_state", file: !115, line: 1156, baseType: !7, size: 32, elements: !116)
!115 = !DIFile(filename: "./include/uapi/linux/usb/ch9.h", directory: "/home/lizy2001/genbc/linux")
!116 = !{!117, !118, !119, !120, !121, !122, !123, !124, !125}
!117 = !DIEnumerator(name: "USB_STATE_NOTATTACHED", value: 0, isUnsigned: true)
!118 = !DIEnumerator(name: "USB_STATE_ATTACHED", value: 1, isUnsigned: true)
!119 = !DIEnumerator(name: "USB_STATE_POWERED", value: 2, isUnsigned: true)
!120 = !DIEnumerator(name: "USB_STATE_RECONNECTING", value: 3, isUnsigned: true)
!121 = !DIEnumerator(name: "USB_STATE_UNAUTHENTICATED", value: 4, isUnsigned: true)
!122 = !DIEnumerator(name: "USB_STATE_DEFAULT", value: 5, isUnsigned: true)
!123 = !DIEnumerator(name: "USB_STATE_ADDRESS", value: 6, isUnsigned: true)
!124 = !DIEnumerator(name: "USB_STATE_CONFIGURED", value: 7, isUnsigned: true)
!125 = !DIEnumerator(name: "USB_STATE_SUSPENDED", value: 8, isUnsigned: true)
!126 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "usb_device_speed", file: !115, line: 1146, baseType: !7, size: 32, elements: !127)
!127 = !{!128, !129, !130, !131, !132, !133, !134}
!128 = !DIEnumerator(name: "USB_SPEED_UNKNOWN", value: 0, isUnsigned: true)
!129 = !DIEnumerator(name: "USB_SPEED_LOW", value: 1, isUnsigned: true)
!130 = !DIEnumerator(name: "USB_SPEED_FULL", value: 2, isUnsigned: true)
!131 = !DIEnumerator(name: "USB_SPEED_HIGH", value: 3, isUnsigned: true)
!132 = !DIEnumerator(name: "USB_SPEED_WIRELESS", value: 4, isUnsigned: true)
!133 = !DIEnumerator(name: "USB_SPEED_SUPER", value: 5, isUnsigned: true)
!134 = !DIEnumerator(name: "USB_SPEED_SUPER_PLUS", value: 6, isUnsigned: true)
!135 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "usb_device_removable", file: !6, line: 476, baseType: !7, size: 32, elements: !136)
!136 = !{!137, !138, !139}
!137 = !DIEnumerator(name: "USB_DEVICE_REMOVABLE_UNKNOWN", value: 0, isUnsigned: true)
!138 = !DIEnumerator(name: "USB_DEVICE_REMOVABLE", value: 1, isUnsigned: true)
!139 = !DIEnumerator(name: "USB_DEVICE_FIXED", value: 2, isUnsigned: true)
!140 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "backlight_type", file: !141, line: 40, baseType: !7, size: 32, elements: !142)
!141 = !DIFile(filename: "./include/linux/backlight.h", directory: "/home/lizy2001/genbc/linux")
!142 = !{!143, !144, !145, !146}
!143 = !DIEnumerator(name: "BACKLIGHT_RAW", value: 1, isUnsigned: true)
!144 = !DIEnumerator(name: "BACKLIGHT_PLATFORM", value: 2, isUnsigned: true)
!145 = !DIEnumerator(name: "BACKLIGHT_FIRMWARE", value: 3, isUnsigned: true)
!146 = !DIEnumerator(name: "BACKLIGHT_TYPE_MAX", value: 4, isUnsigned: true)
!147 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "backlight_scale", file: !141, line: 90, baseType: !7, size: 32, elements: !148)
!148 = !{!149, !150, !151}
!149 = !DIEnumerator(name: "BACKLIGHT_SCALE_UNKNOWN", value: 0, isUnsigned: true)
!150 = !DIEnumerator(name: "BACKLIGHT_SCALE_LINEAR", value: 1, isUnsigned: true)
!151 = !DIEnumerator(name: "BACKLIGHT_SCALE_NON_LINEAR", value: 2, isUnsigned: true)
!152 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !153, line: 30, baseType: !154, size: 64, elements: !155)
!153 = !DIFile(filename: "./include/linux/workqueue.h", directory: "/home/lizy2001/genbc/linux")
!154 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!155 = !{!156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184}
!156 = !DIEnumerator(name: "WORK_STRUCT_PENDING_BIT", value: 0)
!157 = !DIEnumerator(name: "WORK_STRUCT_DELAYED_BIT", value: 1)
!158 = !DIEnumerator(name: "WORK_STRUCT_PWQ_BIT", value: 2)
!159 = !DIEnumerator(name: "WORK_STRUCT_LINKED_BIT", value: 3)
!160 = !DIEnumerator(name: "WORK_STRUCT_COLOR_SHIFT", value: 4)
!161 = !DIEnumerator(name: "WORK_STRUCT_COLOR_BITS", value: 4)
!162 = !DIEnumerator(name: "WORK_STRUCT_PENDING", value: 1)
!163 = !DIEnumerator(name: "WORK_STRUCT_DELAYED", value: 2)
!164 = !DIEnumerator(name: "WORK_STRUCT_PWQ", value: 4)
!165 = !DIEnumerator(name: "WORK_STRUCT_LINKED", value: 8)
!166 = !DIEnumerator(name: "WORK_STRUCT_STATIC", value: 0)
!167 = !DIEnumerator(name: "WORK_NR_COLORS", value: 15)
!168 = !DIEnumerator(name: "WORK_NO_COLOR", value: 15)
!169 = !DIEnumerator(name: "WORK_CPU_UNBOUND", value: 1)
!170 = !DIEnumerator(name: "WORK_STRUCT_FLAG_BITS", value: 8)
!171 = !DIEnumerator(name: "WORK_OFFQ_FLAG_BASE", value: 4)
!172 = !DIEnumerator(name: "__WORK_OFFQ_CANCELING", value: 4)
!173 = !DIEnumerator(name: "WORK_OFFQ_CANCELING", value: 16)
!174 = !DIEnumerator(name: "WORK_OFFQ_FLAG_BITS", value: 1)
!175 = !DIEnumerator(name: "WORK_OFFQ_POOL_SHIFT", value: 5)
!176 = !DIEnumerator(name: "WORK_OFFQ_LEFT", value: 59)
!177 = !DIEnumerator(name: "WORK_OFFQ_POOL_BITS", value: 31)
!178 = !DIEnumerator(name: "WORK_OFFQ_POOL_NONE", value: 2147483647)
!179 = !DIEnumerator(name: "WORK_STRUCT_FLAG_MASK", value: 255)
!180 = !DIEnumerator(name: "WORK_STRUCT_WQ_DATA_MASK", value: -256)
!181 = !DIEnumerator(name: "WORK_STRUCT_NO_POOL", value: 68719476704)
!182 = !DIEnumerator(name: "WORK_BUSY_PENDING", value: 1)
!183 = !DIEnumerator(name: "WORK_BUSY_RUNNING", value: 2)
!184 = !DIEnumerator(name: "WORKER_DESC_LEN", value: 24)
!185 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kmalloc_cache_type", file: !186, line: 305, baseType: !7, size: 32, elements: !187)
!186 = !DIFile(filename: "./include/linux/slab.h", directory: "/home/lizy2001/genbc/linux")
!187 = !{!188, !189, !190, !191}
!188 = !DIEnumerator(name: "KMALLOC_NORMAL", value: 0, isUnsigned: true)
!189 = !DIEnumerator(name: "KMALLOC_RECLAIM", value: 1, isUnsigned: true)
!190 = !DIEnumerator(name: "KMALLOC_DMA", value: 2, isUnsigned: true)
!191 = !DIEnumerator(name: "NR_KMALLOC_TYPES", value: 3, isUnsigned: true)
!192 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "refcount_saturation_type", file: !193, line: 119, baseType: !7, size: 32, elements: !194)
!193 = !DIFile(filename: "./include/linux/refcount.h", directory: "/home/lizy2001/genbc/linux")
!194 = !{!195, !196, !197, !198, !199}
!195 = !DIEnumerator(name: "REFCOUNT_ADD_NOT_ZERO_OVF", value: 0, isUnsigned: true)
!196 = !DIEnumerator(name: "REFCOUNT_ADD_OVF", value: 1, isUnsigned: true)
!197 = !DIEnumerator(name: "REFCOUNT_ADD_UAF", value: 2, isUnsigned: true)
!198 = !DIEnumerator(name: "REFCOUNT_SUB_UAF", value: 3, isUnsigned: true)
!199 = !DIEnumerator(name: "REFCOUNT_DEC_LEAK", value: 4, isUnsigned: true)
!200 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !201, line: 10, baseType: !7, size: 32, elements: !202)
!201 = !DIFile(filename: "./include/linux/stddef.h", directory: "/home/lizy2001/genbc/linux")
!202 = !{!203, !204}
!203 = !DIEnumerator(name: "false", value: 0, isUnsigned: true)
!204 = !DIEnumerator(name: "true", value: 1, isUnsigned: true)
!205 = !{!206, !209, !211, !212, !213, !4273, !4831, !752, !217, !4833, !4836, !4044, !226, !1445, !4025, !891, !311, !224, !4418, !4838, !1089, !4278, !4367, !4845, !4846}
!206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !207, size: 64)
!207 = !DICompositeType(tag: DW_TAG_structure_type, name: "module", file: !208, line: 76, flags: DIFlagFwdDecl)
!208 = !DIFile(filename: "./arch/x86/include/asm/alternative.h", directory: "/home/lizy2001/genbc/linux")
!209 = !DIDerivedType(tag: DW_TAG_typedef, name: "gfp_t", file: !210, line: 148, baseType: !7)
!210 = !DIFile(filename: "./include/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!212 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !214, size: 64)
!214 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_device", file: !6, line: 631, size: 10624, elements: !215)
!215 = !{!216, !218, !223, !228, !229, !230, !231, !232, !235, !236, !240, !241, !4014, !4055, !4056, !4073, !4134, !4216, !4217, !4219, !4220, !4222, !4223, !4224, !4225, !4226, !4227, !4228, !4229, !4230, !4231, !4232, !4233, !4234, !4235, !4236, !4237, !4238, !4239, !4240, !4241, !4242, !4243, !4244, !4245, !4246, !4247, !4248, !4249, !4250, !4251, !4252, !4255, !4256, !4257, !4262, !4269, !4270, !4271, !4272}
!216 = !DIDerivedType(tag: DW_TAG_member, name: "devnum", scope: !214, file: !6, line: 632, baseType: !217, size: 32)
!217 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!218 = !DIDerivedType(tag: DW_TAG_member, name: "devpath", scope: !214, file: !6, line: 633, baseType: !219, size: 128, offset: 32)
!219 = !DICompositeType(tag: DW_TAG_array_type, baseType: !220, size: 128, elements: !221)
!220 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!221 = !{!222}
!222 = !DISubrange(count: 16)
!223 = !DIDerivedType(tag: DW_TAG_member, name: "route", scope: !214, file: !6, line: 634, baseType: !224, size: 32, offset: 160)
!224 = !DIDerivedType(tag: DW_TAG_typedef, name: "u32", file: !225, line: 21, baseType: !226)
!225 = !DIFile(filename: "./include/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!226 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u32", file: !227, line: 27, baseType: !7)
!227 = !DIFile(filename: "./include/uapi/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!228 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !214, file: !6, line: 635, baseType: !114, size: 32, offset: 192)
!229 = !DIDerivedType(tag: DW_TAG_member, name: "speed", scope: !214, file: !6, line: 636, baseType: !126, size: 32, offset: 224)
!230 = !DIDerivedType(tag: DW_TAG_member, name: "rx_lanes", scope: !214, file: !6, line: 637, baseType: !7, size: 32, offset: 256)
!231 = !DIDerivedType(tag: DW_TAG_member, name: "tx_lanes", scope: !214, file: !6, line: 638, baseType: !7, size: 32, offset: 288)
!232 = !DIDerivedType(tag: DW_TAG_member, name: "tt", scope: !214, file: !6, line: 640, baseType: !233, size: 64, offset: 320)
!233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !234, size: 64)
!234 = !DICompositeType(tag: DW_TAG_structure_type, name: "usb_tt", file: !6, line: 474, flags: DIFlagFwdDecl)
!235 = !DIDerivedType(tag: DW_TAG_member, name: "ttport", scope: !214, file: !6, line: 641, baseType: !217, size: 32, offset: 384)
!236 = !DIDerivedType(tag: DW_TAG_member, name: "toggle", scope: !214, file: !6, line: 643, baseType: !237, size: 64, offset: 416)
!237 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 64, elements: !238)
!238 = !{!239}
!239 = !DISubrange(count: 2)
!240 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !214, file: !6, line: 645, baseType: !213, size: 64, offset: 512)
!241 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !214, file: !6, line: 646, baseType: !242, size: 64, offset: 576)
!242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !243, size: 64)
!243 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_bus", file: !6, line: 424, size: 960, elements: !244)
!244 = !{!245, !3991, !3992, !3993, !3994, !3995, !3996, !3997, !3998, !3999, !4000, !4001, !4002, !4003, !4008, !4009, !4010, !4011, !4012, !4013}
!245 = !DIDerivedType(tag: DW_TAG_member, name: "controller", scope: !243, file: !6, line: 425, baseType: !246, size: 64)
!246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !247, size: 64)
!247 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !80, line: 461, size: 5568, elements: !248)
!248 = !{!249, !3445, !3446, !3449, !3450, !3501, !3592, !3593, !3594, !3595, !3596, !3605, !3710, !3723, !3918, !3919, !3923, !3925, !3926, !3927, !3931, !3937, !3938, !3941, !3942, !3943, !3944, !3945, !3946, !3947, !3979, !3980, !3981, !3984, !3987, !3988, !3989, !3990}
!249 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !247, file: !80, line: 462, baseType: !250, size: 512)
!250 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobject", file: !251, line: 64, size: 512, elements: !252)
!251 = !DIFile(filename: "./include/linux/kobject.h", directory: "/home/lizy2001/genbc/linux")
!252 = !{!253, !256, !262, !264, !324, !3306, !3439, !3440, !3441, !3442, !3443, !3444}
!253 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !250, file: !251, line: 65, baseType: !254, size: 64)
!254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !255, size: 64)
!255 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !220)
!256 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !250, file: !251, line: 66, baseType: !257, size: 128, offset: 64)
!257 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_head", file: !210, line: 178, size: 128, elements: !258)
!258 = !{!259, !261}
!259 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !257, file: !210, line: 179, baseType: !260, size: 64)
!260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !257, size: 64)
!261 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !257, file: !210, line: 179, baseType: !260, size: 64, offset: 64)
!262 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !250, file: !251, line: 67, baseType: !263, size: 64, offset: 192)
!263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !250, size: 64)
!264 = !DIDerivedType(tag: DW_TAG_member, name: "kset", scope: !250, file: !251, line: 68, baseType: !265, size: 64, offset: 256)
!265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !266, size: 64)
!266 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset", file: !251, line: 192, size: 704, elements: !267)
!267 = !{!268, !269, !285, !286}
!268 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !266, file: !251, line: 193, baseType: !257, size: 128)
!269 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !266, file: !251, line: 194, baseType: !270, offset: 128)
!270 = !DIDerivedType(tag: DW_TAG_typedef, name: "spinlock_t", file: !271, line: 83, baseType: !272)
!271 = !DIFile(filename: "./include/linux/spinlock_types.h", directory: "/home/lizy2001/genbc/linux")
!272 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spinlock", file: !271, line: 71, elements: !273)
!273 = !{!274}
!274 = !DIDerivedType(tag: DW_TAG_member, scope: !272, file: !271, line: 72, baseType: !275)
!275 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !272, file: !271, line: 72, elements: !276)
!276 = !{!277}
!277 = !DIDerivedType(tag: DW_TAG_member, name: "rlock", scope: !275, file: !271, line: 73, baseType: !278)
!278 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raw_spinlock", file: !271, line: 20, elements: !279)
!279 = !{!280}
!280 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !278, file: !271, line: 21, baseType: !281)
!281 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_spinlock_t", file: !282, line: 25, baseType: !283)
!282 = !DIFile(filename: "./include/linux/spinlock_types_up.h", directory: "/home/lizy2001/genbc/linux")
!283 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !282, line: 25, elements: !284)
!284 = !{}
!285 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !266, file: !251, line: 195, baseType: !250, size: 512, offset: 128)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_ops", scope: !266, file: !251, line: 196, baseType: !287, size: 64, offset: 640)
!287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !288, size: 64)
!288 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !289)
!289 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset_uevent_ops", file: !251, line: 156, size: 192, elements: !290)
!290 = !{!291, !296, !301}
!291 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !289, file: !251, line: 157, baseType: !292, size: 64)
!292 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !293)
!293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !294, size: 64)
!294 = !DISubroutineType(types: !295)
!295 = !{!217, !265, !263}
!296 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !289, file: !251, line: 158, baseType: !297, size: 64, offset: 64)
!297 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !298)
!298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !299, size: 64)
!299 = !DISubroutineType(types: !300)
!300 = !{!254, !265, !263}
!301 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !289, file: !251, line: 159, baseType: !302, size: 64, offset: 128)
!302 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !303)
!303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !304, size: 64)
!304 = !DISubroutineType(types: !305)
!305 = !{!217, !265, !263, !306}
!306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !307, size: 64)
!307 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_uevent_env", file: !251, line: 148, size: 20736, elements: !308)
!308 = !{!309, !314, !318, !319, !323}
!309 = !DIDerivedType(tag: DW_TAG_member, name: "argv", scope: !307, file: !251, line: 149, baseType: !310, size: 192)
!310 = !DICompositeType(tag: DW_TAG_array_type, baseType: !311, size: 192, elements: !312)
!311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !220, size: 64)
!312 = !{!313}
!313 = !DISubrange(count: 3)
!314 = !DIDerivedType(tag: DW_TAG_member, name: "envp", scope: !307, file: !251, line: 150, baseType: !315, size: 4096, offset: 192)
!315 = !DICompositeType(tag: DW_TAG_array_type, baseType: !311, size: 4096, elements: !316)
!316 = !{!317}
!317 = !DISubrange(count: 64)
!318 = !DIDerivedType(tag: DW_TAG_member, name: "envp_idx", scope: !307, file: !251, line: 151, baseType: !217, size: 32, offset: 4288)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !307, file: !251, line: 152, baseType: !320, size: 16384, offset: 4320)
!320 = !DICompositeType(tag: DW_TAG_array_type, baseType: !220, size: 16384, elements: !321)
!321 = !{!322}
!322 = !DISubrange(count: 2048)
!323 = !DIDerivedType(tag: DW_TAG_member, name: "buflen", scope: !307, file: !251, line: 153, baseType: !217, size: 32, offset: 20704)
!324 = !DIDerivedType(tag: DW_TAG_member, name: "ktype", scope: !250, file: !251, line: 69, baseType: !325, size: 64, offset: 320)
!325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !326, size: 64)
!326 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_type", file: !251, line: 138, size: 448, elements: !327)
!327 = !{!328, !332, !360, !362, !3268, !3296, !3300}
!328 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !326, file: !251, line: 139, baseType: !329, size: 64)
!329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !330, size: 64)
!330 = !DISubroutineType(types: !331)
!331 = !{null, !263}
!332 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_ops", scope: !326, file: !251, line: 140, baseType: !333, size: 64, offset: 64)
!333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !334, size: 64)
!334 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !335)
!335 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sysfs_ops", file: !336, line: 230, size: 128, elements: !337)
!336 = !DIFile(filename: "./include/linux/sysfs.h", directory: "/home/lizy2001/genbc/linux")
!337 = !{!338, !353}
!338 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !335, file: !336, line: 231, baseType: !339, size: 64)
!339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !340, size: 64)
!340 = !DISubroutineType(types: !341)
!341 = !{!342, !263, !346, !311}
!342 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !210, line: 60, baseType: !343)
!343 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ssize_t", file: !344, line: 73, baseType: !345)
!344 = !DIFile(filename: "./include/uapi/asm-generic/posix_types.h", directory: "/home/lizy2001/genbc/linux")
!345 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_long_t", file: !344, line: 15, baseType: !154)
!346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !347, size: 64)
!347 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute", file: !336, line: 30, size: 128, elements: !348)
!348 = !{!349, !350}
!349 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !347, file: !336, line: 31, baseType: !254, size: 64)
!350 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !347, file: !336, line: 32, baseType: !351, size: 16, offset: 64)
!351 = !DIDerivedType(tag: DW_TAG_typedef, name: "umode_t", file: !210, line: 19, baseType: !352)
!352 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!353 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !335, file: !336, line: 232, baseType: !354, size: 64, offset: 64)
!354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !355, size: 64)
!355 = !DISubroutineType(types: !356)
!356 = !{!342, !263, !346, !254, !357}
!357 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !210, line: 55, baseType: !358)
!358 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_size_t", file: !344, line: 72, baseType: !359)
!359 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ulong_t", file: !344, line: 16, baseType: !212)
!360 = !DIDerivedType(tag: DW_TAG_member, name: "default_attrs", scope: !326, file: !251, line: 141, baseType: !361, size: 64, offset: 128)
!361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !346, size: 64)
!362 = !DIDerivedType(tag: DW_TAG_member, name: "default_groups", scope: !326, file: !251, line: 142, baseType: !363, size: 64, offset: 192)
!363 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !364, size: 64)
!364 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !365, size: 64)
!365 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !366)
!366 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute_group", file: !336, line: 84, size: 320, elements: !367)
!367 = !{!368, !369, !373, !3265, !3266}
!368 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !366, file: !336, line: 85, baseType: !254, size: 64)
!369 = !DIDerivedType(tag: DW_TAG_member, name: "is_visible", scope: !366, file: !336, line: 86, baseType: !370, size: 64, offset: 64)
!370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !371, size: 64)
!371 = !DISubroutineType(types: !372)
!372 = !{!351, !263, !346, !217}
!373 = !DIDerivedType(tag: DW_TAG_member, name: "is_bin_visible", scope: !366, file: !336, line: 88, baseType: !374, size: 64, offset: 128)
!374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !375, size: 64)
!375 = !DISubroutineType(types: !376)
!376 = !{!351, !263, !377, !217}
!377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !378, size: 64)
!378 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bin_attribute", file: !336, line: 168, size: 448, elements: !379)
!379 = !{!380, !381, !382, !383, !3260, !3261}
!380 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !378, file: !336, line: 169, baseType: !347, size: 128)
!381 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !378, file: !336, line: 170, baseType: !357, size: 64, offset: 128)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !378, file: !336, line: 171, baseType: !211, size: 64, offset: 192)
!383 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !378, file: !336, line: 172, baseType: !384, size: 64, offset: 256)
!384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !385, size: 64)
!385 = !DISubroutineType(types: !386)
!386 = !{!342, !387, !263, !377, !311, !562, !357}
!387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !388, size: 64)
!388 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file", file: !51, line: 916, size: 1856, align: 32, elements: !389)
!389 = !{!390, !408, !3225, !3226, !3227, !3228, !3229, !3230, !3231, !3232, !3233, !3234, !3243, !3244, !3253, !3254, !3255, !3256, !3257, !3258, !3259}
!390 = !DIDerivedType(tag: DW_TAG_member, name: "f_u", scope: !388, file: !51, line: 920, baseType: !391, size: 128)
!391 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !388, file: !51, line: 917, size: 128, elements: !392)
!392 = !{!393, !399}
!393 = !DIDerivedType(tag: DW_TAG_member, name: "fu_llist", scope: !391, file: !51, line: 918, baseType: !394, size: 64)
!394 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "llist_node", file: !395, line: 58, size: 64, elements: !396)
!395 = !DIFile(filename: "./include/linux/llist.h", directory: "/home/lizy2001/genbc/linux")
!396 = !{!397}
!397 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !394, file: !395, line: 59, baseType: !398, size: 64)
!398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !394, size: 64)
!399 = !DIDerivedType(tag: DW_TAG_member, name: "fu_rcuhead", scope: !391, file: !51, line: 919, baseType: !400, size: 128, align: 64)
!400 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "callback_head", file: !210, line: 216, size: 128, align: 64, elements: !401)
!401 = !{!402, !404}
!402 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !400, file: !210, line: 217, baseType: !403, size: 64)
!403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !400, size: 64)
!404 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !400, file: !210, line: 218, baseType: !405, size: 64, offset: 64)
!405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !406, size: 64)
!406 = !DISubroutineType(types: !407)
!407 = !{null, !403}
!408 = !DIDerivedType(tag: DW_TAG_member, name: "f_path", scope: !388, file: !51, line: 921, baseType: !409, size: 128, offset: 128)
!409 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "path", file: !410, line: 8, size: 128, elements: !411)
!410 = !DIFile(filename: "./include/linux/path.h", directory: "/home/lizy2001/genbc/linux")
!411 = !{!412, !416}
!412 = !DIDerivedType(tag: DW_TAG_member, name: "mnt", scope: !409, file: !410, line: 9, baseType: !413, size: 64)
!413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !414, size: 64)
!414 = !DICompositeType(tag: DW_TAG_structure_type, name: "vfsmount", file: !415, line: 18, flags: DIFlagFwdDecl)
!415 = !DIFile(filename: "./include/linux/dcache.h", directory: "/home/lizy2001/genbc/linux")
!416 = !DIDerivedType(tag: DW_TAG_member, name: "dentry", scope: !409, file: !410, line: 10, baseType: !417, size: 64, offset: 64)
!417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !418, size: 64)
!418 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry", file: !415, line: 89, size: 1536, elements: !419)
!419 = !{!420, !421, !431, !439, !440, !459, !3193, !3195, !3207, !3208, !3209, !3210, !3211, !3217, !3218, !3219}
!420 = !DIDerivedType(tag: DW_TAG_member, name: "d_flags", scope: !418, file: !415, line: 91, baseType: !7, size: 32)
!421 = !DIDerivedType(tag: DW_TAG_member, name: "d_seq", scope: !418, file: !415, line: 92, baseType: !422, size: 32, offset: 32)
!422 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_spinlock_t", file: !423, line: 277, baseType: !424)
!423 = !DIFile(filename: "./include/linux/seqlock.h", directory: "/home/lizy2001/genbc/linux")
!424 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_spinlock", file: !423, line: 277, size: 32, elements: !425)
!425 = !{!426}
!426 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !424, file: !423, line: 277, baseType: !427, size: 32)
!427 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_t", file: !423, line: 70, baseType: !428)
!428 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount", file: !423, line: 65, size: 32, elements: !429)
!429 = !{!430}
!430 = !DIDerivedType(tag: DW_TAG_member, name: "sequence", scope: !428, file: !423, line: 66, baseType: !7, size: 32)
!431 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !418, file: !415, line: 93, baseType: !432, size: 128, offset: 64)
!432 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_node", file: !433, line: 38, size: 128, elements: !434)
!433 = !DIFile(filename: "./include/linux/list_bl.h", directory: "/home/lizy2001/genbc/linux")
!434 = !{!435, !437}
!435 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !432, file: !433, line: 39, baseType: !436, size: 64)
!436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !432, size: 64)
!437 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !432, file: !433, line: 39, baseType: !438, size: 64, offset: 64)
!438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !436, size: 64)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "d_parent", scope: !418, file: !415, line: 94, baseType: !417, size: 64, offset: 192)
!440 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !418, file: !415, line: 95, baseType: !441, size: 128, offset: 256)
!441 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qstr", file: !415, line: 47, size: 128, elements: !442)
!442 = !{!443, !455}
!443 = !DIDerivedType(tag: DW_TAG_member, scope: !441, file: !415, line: 48, baseType: !444, size: 64)
!444 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !441, file: !415, line: 48, size: 64, elements: !445)
!445 = !{!446, !451}
!446 = !DIDerivedType(tag: DW_TAG_member, scope: !444, file: !415, line: 49, baseType: !447, size: 64)
!447 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !444, file: !415, line: 49, size: 64, elements: !448)
!448 = !{!449, !450}
!449 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !447, file: !415, line: 50, baseType: !224, size: 32)
!450 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !447, file: !415, line: 50, baseType: !224, size: 32, offset: 32)
!451 = !DIDerivedType(tag: DW_TAG_member, name: "hash_len", scope: !444, file: !415, line: 52, baseType: !452, size: 64)
!452 = !DIDerivedType(tag: DW_TAG_typedef, name: "u64", file: !225, line: 23, baseType: !453)
!453 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u64", file: !227, line: 31, baseType: !454)
!454 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!455 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !441, file: !415, line: 54, baseType: !456, size: 64, offset: 64)
!456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !457, size: 64)
!457 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !458)
!458 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!459 = !DIDerivedType(tag: DW_TAG_member, name: "d_inode", scope: !418, file: !415, line: 96, baseType: !460, size: 64, offset: 384)
!460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !461, size: 64)
!461 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode", file: !51, line: 610, size: 4224, elements: !462)
!462 = !{!463, !464, !465, !473, !480, !481, !629, !2904, !2905, !2906, !2912, !2913, !2914, !2915, !2916, !2917, !2918, !2919, !2920, !2921, !2922, !2923, !2924, !2925, !2926, !2927, !2928, !2929, !2930, !2931, !2936, !2937, !2938, !2939, !2940, !2941, !2942, !3169, !3177, !3178, !3179, !3189, !3190, !3191, !3192}
!463 = !DIDerivedType(tag: DW_TAG_member, name: "i_mode", scope: !461, file: !51, line: 611, baseType: !351, size: 16)
!464 = !DIDerivedType(tag: DW_TAG_member, name: "i_opflags", scope: !461, file: !51, line: 612, baseType: !352, size: 16, offset: 16)
!465 = !DIDerivedType(tag: DW_TAG_member, name: "i_uid", scope: !461, file: !51, line: 613, baseType: !466, size: 32, offset: 32)
!466 = !DIDerivedType(tag: DW_TAG_typedef, name: "kuid_t", file: !467, line: 23, baseType: !468)
!467 = !DIFile(filename: "./include/linux/uidgid.h", directory: "/home/lizy2001/genbc/linux")
!468 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !467, line: 21, size: 32, elements: !469)
!469 = !{!470}
!470 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !468, file: !467, line: 22, baseType: !471, size: 32)
!471 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !210, line: 32, baseType: !472)
!472 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_uid32_t", file: !344, line: 49, baseType: !7)
!473 = !DIDerivedType(tag: DW_TAG_member, name: "i_gid", scope: !461, file: !51, line: 614, baseType: !474, size: 32, offset: 64)
!474 = !DIDerivedType(tag: DW_TAG_typedef, name: "kgid_t", file: !467, line: 28, baseType: !475)
!475 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !467, line: 26, size: 32, elements: !476)
!476 = !{!477}
!477 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !475, file: !467, line: 27, baseType: !478, size: 32)
!478 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !210, line: 33, baseType: !479)
!479 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_gid32_t", file: !344, line: 50, baseType: !7)
!480 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !461, file: !51, line: 615, baseType: !7, size: 32, offset: 96)
!481 = !DIDerivedType(tag: DW_TAG_member, name: "i_op", scope: !461, file: !51, line: 622, baseType: !482, size: 64, offset: 128)
!482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !483, size: 64)
!483 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !484)
!484 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode_operations", file: !51, line: 1864, size: 1536, align: 512, elements: !485)
!485 = !{!486, !490, !503, !507, !513, !517, !523, !527, !531, !535, !539, !540, !546, !550, !576, !605, !609, !615, !620, !624, !625}
!486 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !484, file: !51, line: 1865, baseType: !487, size: 64)
!487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !488, size: 64)
!488 = !DISubroutineType(types: !489)
!489 = !{!417, !460, !417, !7}
!490 = !DIDerivedType(tag: DW_TAG_member, name: "get_link", scope: !484, file: !51, line: 1866, baseType: !491, size: 64, offset: 64)
!491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !492, size: 64)
!492 = !DISubroutineType(types: !493)
!493 = !{!254, !417, !460, !494}
!494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !495, size: 64)
!495 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_call", file: !496, line: 10, size: 128, elements: !497)
!496 = !DIFile(filename: "./include/linux/delayed_call.h", directory: "/home/lizy2001/genbc/linux")
!497 = !{!498, !502}
!498 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !495, file: !496, line: 11, baseType: !499, size: 64)
!499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !500, size: 64)
!500 = !DISubroutineType(types: !501)
!501 = !{null, !211}
!502 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !495, file: !496, line: 12, baseType: !211, size: 64, offset: 64)
!503 = !DIDerivedType(tag: DW_TAG_member, name: "permission", scope: !484, file: !51, line: 1867, baseType: !504, size: 64, offset: 128)
!504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !505, size: 64)
!505 = !DISubroutineType(types: !506)
!506 = !{!217, !460, !217}
!507 = !DIDerivedType(tag: DW_TAG_member, name: "get_acl", scope: !484, file: !51, line: 1868, baseType: !508, size: 64, offset: 192)
!508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !509, size: 64)
!509 = !DISubroutineType(types: !510)
!510 = !{!511, !460, !217}
!511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !512, size: 64)
!512 = !DICompositeType(tag: DW_TAG_structure_type, name: "posix_acl", file: !51, line: 581, flags: DIFlagFwdDecl)
!513 = !DIDerivedType(tag: DW_TAG_member, name: "readlink", scope: !484, file: !51, line: 1870, baseType: !514, size: 64, offset: 256)
!514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !515, size: 64)
!515 = !DISubroutineType(types: !516)
!516 = !{!217, !417, !311, !217}
!517 = !DIDerivedType(tag: DW_TAG_member, name: "create", scope: !484, file: !51, line: 1872, baseType: !518, size: 64, offset: 320)
!518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !519, size: 64)
!519 = !DISubroutineType(types: !520)
!520 = !{!217, !460, !417, !351, !521}
!521 = !DIDerivedType(tag: DW_TAG_typedef, name: "bool", file: !210, line: 30, baseType: !522)
!522 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!523 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !484, file: !51, line: 1873, baseType: !524, size: 64, offset: 384)
!524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !525, size: 64)
!525 = !DISubroutineType(types: !526)
!526 = !{!217, !417, !460, !417}
!527 = !DIDerivedType(tag: DW_TAG_member, name: "unlink", scope: !484, file: !51, line: 1874, baseType: !528, size: 64, offset: 448)
!528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !529, size: 64)
!529 = !DISubroutineType(types: !530)
!530 = !{!217, !460, !417}
!531 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !484, file: !51, line: 1875, baseType: !532, size: 64, offset: 512)
!532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !533, size: 64)
!533 = !DISubroutineType(types: !534)
!534 = !{!217, !460, !417, !254}
!535 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !484, file: !51, line: 1876, baseType: !536, size: 64, offset: 576)
!536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !537, size: 64)
!537 = !DISubroutineType(types: !538)
!538 = !{!217, !460, !417, !351}
!539 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !484, file: !51, line: 1877, baseType: !528, size: 64, offset: 640)
!540 = !DIDerivedType(tag: DW_TAG_member, name: "mknod", scope: !484, file: !51, line: 1878, baseType: !541, size: 64, offset: 704)
!541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !542, size: 64)
!542 = !DISubroutineType(types: !543)
!543 = !{!217, !460, !417, !351, !544}
!544 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !210, line: 16, baseType: !545)
!545 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_dev_t", file: !210, line: 13, baseType: !224)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !484, file: !51, line: 1879, baseType: !547, size: 64, offset: 768)
!547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !548, size: 64)
!548 = !DISubroutineType(types: !549)
!549 = !{!217, !460, !417, !460, !417, !7}
!550 = !DIDerivedType(tag: DW_TAG_member, name: "setattr", scope: !484, file: !51, line: 1881, baseType: !551, size: 64, offset: 832)
!551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !552, size: 64)
!552 = !DISubroutineType(types: !553)
!553 = !{!217, !417, !554}
!554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !555, size: 64)
!555 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iattr", file: !51, line: 219, size: 640, elements: !556)
!556 = !{!557, !558, !559, !560, !561, !565, !573, !574, !575}
!557 = !DIDerivedType(tag: DW_TAG_member, name: "ia_valid", scope: !555, file: !51, line: 220, baseType: !7, size: 32)
!558 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mode", scope: !555, file: !51, line: 221, baseType: !351, size: 16, offset: 32)
!559 = !DIDerivedType(tag: DW_TAG_member, name: "ia_uid", scope: !555, file: !51, line: 222, baseType: !466, size: 32, offset: 64)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "ia_gid", scope: !555, file: !51, line: 223, baseType: !474, size: 32, offset: 96)
!561 = !DIDerivedType(tag: DW_TAG_member, name: "ia_size", scope: !555, file: !51, line: 224, baseType: !562, size: 64, offset: 128)
!562 = !DIDerivedType(tag: DW_TAG_typedef, name: "loff_t", file: !210, line: 46, baseType: !563)
!563 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_loff_t", file: !344, line: 88, baseType: !564)
!564 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "ia_atime", scope: !555, file: !51, line: 225, baseType: !566, size: 128, offset: 192)
!566 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec64", file: !567, line: 13, size: 128, elements: !568)
!567 = !DIFile(filename: "./include/linux/time64.h", directory: "/home/lizy2001/genbc/linux")
!568 = !{!569, !572}
!569 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !566, file: !567, line: 14, baseType: !570, size: 64)
!570 = !DIDerivedType(tag: DW_TAG_typedef, name: "time64_t", file: !567, line: 8, baseType: !571)
!571 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s64", file: !227, line: 30, baseType: !564)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !566, file: !567, line: 15, baseType: !154, size: 64, offset: 64)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mtime", scope: !555, file: !51, line: 226, baseType: !566, size: 128, offset: 320)
!574 = !DIDerivedType(tag: DW_TAG_member, name: "ia_ctime", scope: !555, file: !51, line: 227, baseType: !566, size: 128, offset: 448)
!575 = !DIDerivedType(tag: DW_TAG_member, name: "ia_file", scope: !555, file: !51, line: 234, baseType: !387, size: 64, offset: 576)
!576 = !DIDerivedType(tag: DW_TAG_member, name: "getattr", scope: !484, file: !51, line: 1882, baseType: !577, size: 64, offset: 896)
!577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !578, size: 64)
!578 = !DISubroutineType(types: !579)
!579 = !{!217, !580, !582, !224, !7}
!580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !581, size: 64)
!581 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !409)
!582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !583, size: 64)
!583 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kstat", file: !584, line: 22, size: 1152, elements: !585)
!584 = !DIFile(filename: "./include/linux/stat.h", directory: "/home/lizy2001/genbc/linux")
!585 = !{!586, !587, !588, !589, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604}
!586 = !DIDerivedType(tag: DW_TAG_member, name: "result_mask", scope: !583, file: !584, line: 23, baseType: !224, size: 32)
!587 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !583, file: !584, line: 24, baseType: !351, size: 16, offset: 32)
!588 = !DIDerivedType(tag: DW_TAG_member, name: "nlink", scope: !583, file: !584, line: 25, baseType: !7, size: 32, offset: 64)
!589 = !DIDerivedType(tag: DW_TAG_member, name: "blksize", scope: !583, file: !584, line: 26, baseType: !590, size: 32, offset: 96)
!590 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !210, line: 104, baseType: !224)
!591 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !583, file: !584, line: 27, baseType: !452, size: 64, offset: 128)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "attributes_mask", scope: !583, file: !584, line: 28, baseType: !452, size: 64, offset: 192)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !583, file: !584, line: 37, baseType: !452, size: 64, offset: 256)
!594 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !583, file: !584, line: 38, baseType: !544, size: 32, offset: 320)
!595 = !DIDerivedType(tag: DW_TAG_member, name: "rdev", scope: !583, file: !584, line: 39, baseType: !544, size: 32, offset: 352)
!596 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !583, file: !584, line: 40, baseType: !466, size: 32, offset: 384)
!597 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !583, file: !584, line: 41, baseType: !474, size: 32, offset: 416)
!598 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !583, file: !584, line: 42, baseType: !562, size: 64, offset: 448)
!599 = !DIDerivedType(tag: DW_TAG_member, name: "atime", scope: !583, file: !584, line: 43, baseType: !566, size: 128, offset: 512)
!600 = !DIDerivedType(tag: DW_TAG_member, name: "mtime", scope: !583, file: !584, line: 44, baseType: !566, size: 128, offset: 640)
!601 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !583, file: !584, line: 45, baseType: !566, size: 128, offset: 768)
!602 = !DIDerivedType(tag: DW_TAG_member, name: "btime", scope: !583, file: !584, line: 46, baseType: !566, size: 128, offset: 896)
!603 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !583, file: !584, line: 47, baseType: !452, size: 64, offset: 1024)
!604 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_id", scope: !583, file: !584, line: 48, baseType: !452, size: 64, offset: 1088)
!605 = !DIDerivedType(tag: DW_TAG_member, name: "listxattr", scope: !484, file: !51, line: 1883, baseType: !606, size: 64, offset: 960)
!606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !607, size: 64)
!607 = !DISubroutineType(types: !608)
!608 = !{!342, !417, !311, !357}
!609 = !DIDerivedType(tag: DW_TAG_member, name: "fiemap", scope: !484, file: !51, line: 1884, baseType: !610, size: 64, offset: 1024)
!610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !611, size: 64)
!611 = !DISubroutineType(types: !612)
!612 = !{!217, !460, !613, !452, !452}
!613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !614, size: 64)
!614 = !DICompositeType(tag: DW_TAG_structure_type, name: "fiemap_extent_info", file: !51, line: 50, flags: DIFlagFwdDecl)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "update_time", scope: !484, file: !51, line: 1886, baseType: !616, size: 64, offset: 1088)
!616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !617, size: 64)
!617 = !DISubroutineType(types: !618)
!618 = !{!217, !460, !619, !217}
!619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !566, size: 64)
!620 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_open", scope: !484, file: !51, line: 1887, baseType: !621, size: 64, offset: 1152)
!621 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !622, size: 64)
!622 = !DISubroutineType(types: !623)
!623 = !{!217, !460, !417, !387, !7, !351}
!624 = !DIDerivedType(tag: DW_TAG_member, name: "tmpfile", scope: !484, file: !51, line: 1890, baseType: !536, size: 64, offset: 1216)
!625 = !DIDerivedType(tag: DW_TAG_member, name: "set_acl", scope: !484, file: !51, line: 1891, baseType: !626, size: 64, offset: 1280)
!626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !627, size: 64)
!627 = !DISubroutineType(types: !628)
!628 = !{!217, !460, !511, !217}
!629 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb", scope: !461, file: !51, line: 623, baseType: !630, size: 64, offset: 192)
!630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !631, size: 64)
!631 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_block", file: !51, line: 1416, size: 9472, elements: !632)
!632 = !{!633, !634, !635, !636, !637, !638, !685, !2511, !2593, !2676, !2680, !2681, !2682, !2683, !2684, !2685, !2686, !2687, !2692, !2696, !2697, !2700, !2701, !2704, !2705, !2706, !2747, !2774, !2775, !2776, !2777, !2778, !2779, !2782, !2784, !2791, !2792, !2794, !2795, !2796, !2855, !2856, !2871, !2872, !2873, !2874, !2875, !2878, !2879, !2880, !2895, !2896, !2897, !2898, !2899, !2900, !2901, !2902, !2903}
!633 = !DIDerivedType(tag: DW_TAG_member, name: "s_list", scope: !631, file: !51, line: 1417, baseType: !257, size: 128)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "s_dev", scope: !631, file: !51, line: 1418, baseType: !544, size: 32, offset: 128)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize_bits", scope: !631, file: !51, line: 1419, baseType: !458, size: 8, offset: 160)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize", scope: !631, file: !51, line: 1420, baseType: !212, size: 64, offset: 192)
!637 = !DIDerivedType(tag: DW_TAG_member, name: "s_maxbytes", scope: !631, file: !51, line: 1421, baseType: !562, size: 64, offset: 256)
!638 = !DIDerivedType(tag: DW_TAG_member, name: "s_type", scope: !631, file: !51, line: 1422, baseType: !639, size: 64, offset: 320)
!639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !640, size: 64)
!640 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_system_type", file: !51, line: 2228, size: 576, elements: !641)
!641 = !{!642, !643, !644, !651, !655, !659, !663, !664, !665, !675, !678, !679, !680, !682, !683, !684}
!642 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !640, file: !51, line: 2229, baseType: !254, size: 64)
!643 = !DIDerivedType(tag: DW_TAG_member, name: "fs_flags", scope: !640, file: !51, line: 2230, baseType: !217, size: 32, offset: 64)
!644 = !DIDerivedType(tag: DW_TAG_member, name: "init_fs_context", scope: !640, file: !51, line: 2238, baseType: !645, size: 64, offset: 128)
!645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !646, size: 64)
!646 = !DISubroutineType(types: !647)
!647 = !{!217, !648}
!648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !649, size: 64)
!649 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_context", file: !650, line: 28, flags: DIFlagFwdDecl)
!650 = !DIFile(filename: "./include/linux/kernfs.h", directory: "/home/lizy2001/genbc/linux")
!651 = !DIDerivedType(tag: DW_TAG_member, name: "parameters", scope: !640, file: !51, line: 2239, baseType: !652, size: 64, offset: 192)
!652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !653, size: 64)
!653 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !654)
!654 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_parameter_spec", file: !51, line: 70, flags: DIFlagFwdDecl)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "mount", scope: !640, file: !51, line: 2240, baseType: !656, size: 64, offset: 256)
!656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !657, size: 64)
!657 = !DISubroutineType(types: !658)
!658 = !{!417, !639, !217, !254, !211}
!659 = !DIDerivedType(tag: DW_TAG_member, name: "kill_sb", scope: !640, file: !51, line: 2242, baseType: !660, size: 64, offset: 320)
!660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !661, size: 64)
!661 = !DISubroutineType(types: !662)
!662 = !{null, !630}
!663 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !640, file: !51, line: 2243, baseType: !206, size: 64, offset: 384)
!664 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !640, file: !51, line: 2244, baseType: !639, size: 64, offset: 448)
!665 = !DIDerivedType(tag: DW_TAG_member, name: "fs_supers", scope: !640, file: !51, line: 2245, baseType: !666, size: 64, offset: 512)
!666 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_head", file: !210, line: 182, size: 64, elements: !667)
!667 = !{!668}
!668 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !666, file: !210, line: 183, baseType: !669, size: 64)
!669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !670, size: 64)
!670 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_node", file: !210, line: 186, size: 128, elements: !671)
!671 = !{!672, !673}
!672 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !670, file: !210, line: 187, baseType: !669, size: 64)
!673 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !670, file: !210, line: 187, baseType: !674, size: 64, offset: 64)
!674 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !669, size: 64)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "s_lock_key", scope: !640, file: !51, line: 2247, baseType: !676, offset: 576)
!676 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_class_key", file: !677, line: 187, elements: !284)
!677 = !DIFile(filename: "./include/linux/lockdep_types.h", directory: "/home/lizy2001/genbc/linux")
!678 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount_key", scope: !640, file: !51, line: 2248, baseType: !676, offset: 576)
!679 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_key", scope: !640, file: !51, line: 2249, baseType: !676, offset: 576)
!680 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers_key", scope: !640, file: !51, line: 2250, baseType: !681, offset: 576)
!681 = !DICompositeType(tag: DW_TAG_array_type, baseType: !676, elements: !312)
!682 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock_key", scope: !640, file: !51, line: 2252, baseType: !676, offset: 576)
!683 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_key", scope: !640, file: !51, line: 2253, baseType: !676, offset: 576)
!684 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_dir_key", scope: !640, file: !51, line: 2254, baseType: !676, offset: 576)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "s_op", scope: !631, file: !51, line: 1423, baseType: !686, size: 64, offset: 384)
!686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !687, size: 64)
!687 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !688)
!688 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_operations", file: !51, line: 1935, size: 1472, elements: !689)
!689 = !{!690, !694, !698, !699, !703, !709, !713, !714, !715, !719, !723, !724, !725, !726, !732, !737, !738, !745, !746, !747, !748, !2495, !2510}
!690 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_inode", scope: !688, file: !51, line: 1936, baseType: !691, size: 64)
!691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !692, size: 64)
!692 = !DISubroutineType(types: !693)
!693 = !{!460, !630}
!694 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_inode", scope: !688, file: !51, line: 1937, baseType: !695, size: 64, offset: 64)
!695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !696, size: 64)
!696 = !DISubroutineType(types: !697)
!697 = !{null, !460}
!698 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !688, file: !51, line: 1938, baseType: !695, size: 64, offset: 128)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_inode", scope: !688, file: !51, line: 1940, baseType: !700, size: 64, offset: 192)
!700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !701, size: 64)
!701 = !DISubroutineType(types: !702)
!702 = !{null, !460, !217}
!703 = !DIDerivedType(tag: DW_TAG_member, name: "write_inode", scope: !688, file: !51, line: 1941, baseType: !704, size: 64, offset: 256)
!704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !705, size: 64)
!705 = !DISubroutineType(types: !706)
!706 = !{!217, !460, !707}
!707 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !708, size: 64)
!708 = !DICompositeType(tag: DW_TAG_structure_type, name: "writeback_control", file: !51, line: 289, flags: DIFlagFwdDecl)
!709 = !DIDerivedType(tag: DW_TAG_member, name: "drop_inode", scope: !688, file: !51, line: 1942, baseType: !710, size: 64, offset: 320)
!710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !711, size: 64)
!711 = !DISubroutineType(types: !712)
!712 = !{!217, !460}
!713 = !DIDerivedType(tag: DW_TAG_member, name: "evict_inode", scope: !688, file: !51, line: 1943, baseType: !695, size: 64, offset: 384)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "put_super", scope: !688, file: !51, line: 1944, baseType: !660, size: 64, offset: 448)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "sync_fs", scope: !688, file: !51, line: 1945, baseType: !716, size: 64, offset: 512)
!716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !717, size: 64)
!717 = !DISubroutineType(types: !718)
!718 = !{!217, !630, !217}
!719 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_super", scope: !688, file: !51, line: 1946, baseType: !720, size: 64, offset: 576)
!720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !721, size: 64)
!721 = !DISubroutineType(types: !722)
!722 = !{!217, !630}
!723 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_fs", scope: !688, file: !51, line: 1947, baseType: !720, size: 64, offset: 640)
!724 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_super", scope: !688, file: !51, line: 1948, baseType: !720, size: 64, offset: 704)
!725 = !DIDerivedType(tag: DW_TAG_member, name: "unfreeze_fs", scope: !688, file: !51, line: 1949, baseType: !720, size: 64, offset: 768)
!726 = !DIDerivedType(tag: DW_TAG_member, name: "statfs", scope: !688, file: !51, line: 1950, baseType: !727, size: 64, offset: 832)
!727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !728, size: 64)
!728 = !DISubroutineType(types: !729)
!729 = !{!217, !417, !730}
!730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !731, size: 64)
!731 = !DICompositeType(tag: DW_TAG_structure_type, name: "kstatfs", file: !51, line: 57, flags: DIFlagFwdDecl)
!732 = !DIDerivedType(tag: DW_TAG_member, name: "remount_fs", scope: !688, file: !51, line: 1951, baseType: !733, size: 64, offset: 896)
!733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !734, size: 64)
!734 = !DISubroutineType(types: !735)
!735 = !{!217, !630, !736, !311}
!736 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !217, size: 64)
!737 = !DIDerivedType(tag: DW_TAG_member, name: "umount_begin", scope: !688, file: !51, line: 1952, baseType: !660, size: 64, offset: 960)
!738 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !688, file: !51, line: 1954, baseType: !739, size: 64, offset: 1024)
!739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !740, size: 64)
!740 = !DISubroutineType(types: !741)
!741 = !{!217, !742, !417}
!742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !743, size: 64)
!743 = !DICompositeType(tag: DW_TAG_structure_type, name: "seq_file", file: !744, line: 539, flags: DIFlagFwdDecl)
!744 = !DIFile(filename: "./arch/x86/include/asm/pgtable_types.h", directory: "/home/lizy2001/genbc/linux")
!745 = !DIDerivedType(tag: DW_TAG_member, name: "show_devname", scope: !688, file: !51, line: 1955, baseType: !739, size: 64, offset: 1088)
!746 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !688, file: !51, line: 1956, baseType: !739, size: 64, offset: 1152)
!747 = !DIDerivedType(tag: DW_TAG_member, name: "show_stats", scope: !688, file: !51, line: 1957, baseType: !739, size: 64, offset: 1216)
!748 = !DIDerivedType(tag: DW_TAG_member, name: "bdev_try_to_free_page", scope: !688, file: !51, line: 1963, baseType: !749, size: 64, offset: 1280)
!749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !750, size: 64)
!750 = !DISubroutineType(types: !751)
!751 = !{!217, !630, !752, !209}
!752 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !753, size: 64)
!753 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page", file: !754, line: 68, size: 512, align: 128, elements: !755)
!754 = !DIFile(filename: "./include/linux/mm_types.h", directory: "/home/lizy2001/genbc/linux")
!755 = !{!756, !757, !2487, !2494}
!756 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !753, file: !754, line: 69, baseType: !212, size: 64)
!757 = !DIDerivedType(tag: DW_TAG_member, scope: !753, file: !754, line: 77, baseType: !758, size: 320, offset: 64)
!758 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !753, file: !754, line: 77, size: 320, elements: !759)
!759 = !{!760, !947, !952, !980, !988, !994, !2418, !2486}
!760 = !DIDerivedType(tag: DW_TAG_member, scope: !758, file: !754, line: 78, baseType: !761, size: 320)
!761 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !758, file: !754, line: 78, size: 320, elements: !762)
!762 = !{!763, !764, !945, !946}
!763 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !761, file: !754, line: 84, baseType: !257, size: 128)
!764 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !761, file: !754, line: 86, baseType: !765, size: 64, offset: 128)
!765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !766, size: 64)
!766 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space", file: !51, line: 451, size: 1216, align: 64, elements: !767)
!767 = !{!768, !769, !776, !777, !782, !797, !813, !814, !815, !816, !938, !939, !942, !943, !944}
!768 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !766, file: !51, line: 452, baseType: !460, size: 64)
!769 = !DIDerivedType(tag: DW_TAG_member, name: "i_pages", scope: !766, file: !51, line: 453, baseType: !770, size: 128, offset: 64)
!770 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xarray", file: !771, line: 292, size: 128, elements: !772)
!771 = !DIFile(filename: "./include/linux/xarray.h", directory: "/home/lizy2001/genbc/linux")
!772 = !{!773, !774, !775}
!773 = !DIDerivedType(tag: DW_TAG_member, name: "xa_lock", scope: !770, file: !771, line: 293, baseType: !270)
!774 = !DIDerivedType(tag: DW_TAG_member, name: "xa_flags", scope: !770, file: !771, line: 295, baseType: !209, size: 32)
!775 = !DIDerivedType(tag: DW_TAG_member, name: "xa_head", scope: !770, file: !771, line: 296, baseType: !211, size: 64, offset: 64)
!776 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !766, file: !51, line: 454, baseType: !209, size: 32, offset: 192)
!777 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_writable", scope: !766, file: !51, line: 455, baseType: !778, size: 32, offset: 224)
!778 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !210, line: 168, baseType: !779)
!779 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !210, line: 166, size: 32, elements: !780)
!780 = !{!781}
!781 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !779, file: !210, line: 167, baseType: !217, size: 32)
!782 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap", scope: !766, file: !51, line: 460, baseType: !783, size: 128, offset: 256)
!783 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root_cached", file: !784, line: 125, size: 128, elements: !785)
!784 = !DIFile(filename: "./include/linux/rbtree.h", directory: "/home/lizy2001/genbc/linux")
!785 = !{!786, !796}
!786 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !783, file: !784, line: 126, baseType: !787, size: 64)
!787 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root", file: !784, line: 31, size: 64, elements: !788)
!788 = !{!789}
!789 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !787, file: !784, line: 32, baseType: !790, size: 64)
!790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !791, size: 64)
!791 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_node", file: !784, line: 24, size: 192, align: 64, elements: !792)
!792 = !{!793, !794, !795}
!793 = !DIDerivedType(tag: DW_TAG_member, name: "__rb_parent_color", scope: !791, file: !784, line: 25, baseType: !212, size: 64)
!794 = !DIDerivedType(tag: DW_TAG_member, name: "rb_right", scope: !791, file: !784, line: 26, baseType: !790, size: 64, offset: 64)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "rb_left", scope: !791, file: !784, line: 27, baseType: !790, size: 64, offset: 128)
!796 = !DIDerivedType(tag: DW_TAG_member, name: "rb_leftmost", scope: !783, file: !784, line: 127, baseType: !790, size: 64, offset: 64)
!797 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_rwsem", scope: !766, file: !51, line: 461, baseType: !798, size: 256, offset: 384)
!798 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rw_semaphore", file: !799, line: 35, size: 256, elements: !800)
!799 = !DIFile(filename: "./include/linux/rwsem.h", directory: "/home/lizy2001/genbc/linux")
!800 = !{!801, !809, !810, !812}
!801 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !798, file: !799, line: 36, baseType: !802, size: 64)
!802 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_long_t", file: !803, line: 13, baseType: !804)
!803 = !DIFile(filename: "./include/asm-generic/atomic-long.h", directory: "/home/lizy2001/genbc/linux")
!804 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic64_t", file: !210, line: 175, baseType: !805)
!805 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !210, line: 173, size: 64, elements: !806)
!806 = !{!807}
!807 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !805, file: !210, line: 174, baseType: !808, size: 64)
!808 = !DIDerivedType(tag: DW_TAG_typedef, name: "s64", file: !225, line: 22, baseType: !571)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !798, file: !799, line: 42, baseType: !802, size: 64, offset: 64)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !798, file: !799, line: 46, baseType: !811, offset: 128)
!811 = !DIDerivedType(tag: DW_TAG_typedef, name: "raw_spinlock_t", file: !271, line: 29, baseType: !278)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !798, file: !799, line: 47, baseType: !257, size: 128, offset: 128)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "nrpages", scope: !766, file: !51, line: 462, baseType: !212, size: 64, offset: 640)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "nrexceptional", scope: !766, file: !51, line: 463, baseType: !212, size: 64, offset: 704)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "writeback_index", scope: !766, file: !51, line: 464, baseType: !212, size: 64, offset: 768)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "a_ops", scope: !766, file: !51, line: 465, baseType: !817, size: 64, offset: 832)
!817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !818, size: 64)
!818 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !819)
!819 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space_operations", file: !51, line: 367, size: 1408, elements: !820)
!820 = !{!821, !825, !829, !833, !837, !841, !847, !853, !857, !862, !866, !870, !874, !902, !906, !912, !913, !914, !918, !923, !927, !934}
!821 = !DIDerivedType(tag: DW_TAG_member, name: "writepage", scope: !819, file: !51, line: 368, baseType: !822, size: 64)
!822 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !823, size: 64)
!823 = !DISubroutineType(types: !824)
!824 = !{!217, !752, !707}
!825 = !DIDerivedType(tag: DW_TAG_member, name: "readpage", scope: !819, file: !51, line: 369, baseType: !826, size: 64, offset: 64)
!826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !827, size: 64)
!827 = !DISubroutineType(types: !828)
!828 = !{!217, !387, !752}
!829 = !DIDerivedType(tag: DW_TAG_member, name: "writepages", scope: !819, file: !51, line: 372, baseType: !830, size: 64, offset: 128)
!830 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !831, size: 64)
!831 = !DISubroutineType(types: !832)
!832 = !{!217, !765, !707}
!833 = !DIDerivedType(tag: DW_TAG_member, name: "set_page_dirty", scope: !819, file: !51, line: 375, baseType: !834, size: 64, offset: 192)
!834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !835, size: 64)
!835 = !DISubroutineType(types: !836)
!836 = !{!217, !752}
!837 = !DIDerivedType(tag: DW_TAG_member, name: "readpages", scope: !819, file: !51, line: 381, baseType: !838, size: 64, offset: 256)
!838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !839, size: 64)
!839 = !DISubroutineType(types: !840)
!840 = !{!217, !387, !765, !260, !7}
!841 = !DIDerivedType(tag: DW_TAG_member, name: "readahead", scope: !819, file: !51, line: 383, baseType: !842, size: 64, offset: 320)
!842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !843, size: 64)
!843 = !DISubroutineType(types: !844)
!844 = !{null, !845}
!845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !846, size: 64)
!846 = !DICompositeType(tag: DW_TAG_structure_type, name: "readahead_control", file: !51, line: 290, flags: DIFlagFwdDecl)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "write_begin", scope: !819, file: !51, line: 385, baseType: !848, size: 64, offset: 384)
!848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !849, size: 64)
!849 = !DISubroutineType(types: !850)
!850 = !{!217, !387, !765, !562, !7, !7, !851, !852}
!851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !752, size: 64)
!852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !211, size: 64)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "write_end", scope: !819, file: !51, line: 388, baseType: !854, size: 64, offset: 448)
!854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !855, size: 64)
!855 = !DISubroutineType(types: !856)
!856 = !{!217, !387, !765, !562, !7, !7, !752, !211}
!857 = !DIDerivedType(tag: DW_TAG_member, name: "bmap", scope: !819, file: !51, line: 393, baseType: !858, size: 64, offset: 512)
!858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !859, size: 64)
!859 = !DISubroutineType(types: !860)
!860 = !{!861, !765, !861}
!861 = !DIDerivedType(tag: DW_TAG_typedef, name: "sector_t", file: !210, line: 125, baseType: !452)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "invalidatepage", scope: !819, file: !51, line: 394, baseType: !863, size: 64, offset: 576)
!863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !864, size: 64)
!864 = !DISubroutineType(types: !865)
!865 = !{null, !752, !7, !7}
!866 = !DIDerivedType(tag: DW_TAG_member, name: "releasepage", scope: !819, file: !51, line: 395, baseType: !867, size: 64, offset: 640)
!867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !868, size: 64)
!868 = !DISubroutineType(types: !869)
!869 = !{!217, !752, !209}
!870 = !DIDerivedType(tag: DW_TAG_member, name: "freepage", scope: !819, file: !51, line: 396, baseType: !871, size: 64, offset: 704)
!871 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !872, size: 64)
!872 = !DISubroutineType(types: !873)
!873 = !{null, !752}
!874 = !DIDerivedType(tag: DW_TAG_member, name: "direct_IO", scope: !819, file: !51, line: 397, baseType: !875, size: 64, offset: 768)
!875 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !876, size: 64)
!876 = !DISubroutineType(types: !877)
!877 = !{!342, !878, !900}
!878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !879, size: 64)
!879 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kiocb", file: !51, line: 320, size: 384, elements: !880)
!880 = !{!881, !882, !883, !887, !888, !889, !892, !893}
!881 = !DIDerivedType(tag: DW_TAG_member, name: "ki_filp", scope: !879, file: !51, line: 321, baseType: !387, size: 64)
!882 = !DIDerivedType(tag: DW_TAG_member, name: "ki_pos", scope: !879, file: !51, line: 326, baseType: !562, size: 64, offset: 64)
!883 = !DIDerivedType(tag: DW_TAG_member, name: "ki_complete", scope: !879, file: !51, line: 327, baseType: !884, size: 64, offset: 128)
!884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !885, size: 64)
!885 = !DISubroutineType(types: !886)
!886 = !{null, !878, !154, !154}
!887 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !879, file: !51, line: 328, baseType: !211, size: 64, offset: 192)
!888 = !DIDerivedType(tag: DW_TAG_member, name: "ki_flags", scope: !879, file: !51, line: 329, baseType: !217, size: 32, offset: 256)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "ki_hint", scope: !879, file: !51, line: 330, baseType: !890, size: 16, offset: 288)
!890 = !DIDerivedType(tag: DW_TAG_typedef, name: "u16", file: !225, line: 19, baseType: !891)
!891 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u16", file: !227, line: 24, baseType: !352)
!892 = !DIDerivedType(tag: DW_TAG_member, name: "ki_ioprio", scope: !879, file: !51, line: 331, baseType: !890, size: 16, offset: 304)
!893 = !DIDerivedType(tag: DW_TAG_member, scope: !879, file: !51, line: 332, baseType: !894, size: 64, offset: 320)
!894 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !879, file: !51, line: 332, size: 64, elements: !895)
!895 = !{!896, !897}
!896 = !DIDerivedType(tag: DW_TAG_member, name: "ki_cookie", scope: !894, file: !51, line: 333, baseType: !7, size: 32)
!897 = !DIDerivedType(tag: DW_TAG_member, name: "ki_waitq", scope: !894, file: !51, line: 334, baseType: !898, size: 64)
!898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !899, size: 64)
!899 = !DICompositeType(tag: DW_TAG_structure_type, name: "wait_page_queue", file: !51, line: 334, flags: DIFlagFwdDecl)
!900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !901, size: 64)
!901 = !DICompositeType(tag: DW_TAG_structure_type, name: "iov_iter", file: !51, line: 64, flags: DIFlagFwdDecl)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "migratepage", scope: !819, file: !51, line: 402, baseType: !903, size: 64, offset: 832)
!903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !904, size: 64)
!904 = !DISubroutineType(types: !905)
!905 = !{!217, !765, !752, !752, !13}
!906 = !DIDerivedType(tag: DW_TAG_member, name: "isolate_page", scope: !819, file: !51, line: 404, baseType: !907, size: 64, offset: 896)
!907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !908, size: 64)
!908 = !DISubroutineType(types: !909)
!909 = !{!521, !752, !910}
!910 = !DIDerivedType(tag: DW_TAG_typedef, name: "isolate_mode_t", file: !911, line: 305, baseType: !7)
!911 = !DIFile(filename: "./include/linux/mmzone.h", directory: "/home/lizy2001/genbc/linux")
!912 = !DIDerivedType(tag: DW_TAG_member, name: "putback_page", scope: !819, file: !51, line: 405, baseType: !871, size: 64, offset: 960)
!913 = !DIDerivedType(tag: DW_TAG_member, name: "launder_page", scope: !819, file: !51, line: 406, baseType: !834, size: 64, offset: 1024)
!914 = !DIDerivedType(tag: DW_TAG_member, name: "is_partially_uptodate", scope: !819, file: !51, line: 407, baseType: !915, size: 64, offset: 1088)
!915 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !916, size: 64)
!916 = !DISubroutineType(types: !917)
!917 = !{!217, !752, !212, !212}
!918 = !DIDerivedType(tag: DW_TAG_member, name: "is_dirty_writeback", scope: !819, file: !51, line: 409, baseType: !919, size: 64, offset: 1152)
!919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !920, size: 64)
!920 = !DISubroutineType(types: !921)
!921 = !{null, !752, !922, !922}
!922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !521, size: 64)
!923 = !DIDerivedType(tag: DW_TAG_member, name: "error_remove_page", scope: !819, file: !51, line: 410, baseType: !924, size: 64, offset: 1216)
!924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !925, size: 64)
!925 = !DISubroutineType(types: !926)
!926 = !{!217, !765, !752}
!927 = !DIDerivedType(tag: DW_TAG_member, name: "swap_activate", scope: !819, file: !51, line: 413, baseType: !928, size: 64, offset: 1280)
!928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !929, size: 64)
!929 = !DISubroutineType(types: !930)
!930 = !{!217, !931, !387, !933}
!931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !932, size: 64)
!932 = !DICompositeType(tag: DW_TAG_structure_type, name: "swap_info_struct", file: !51, line: 61, flags: DIFlagFwdDecl)
!933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !861, size: 64)
!934 = !DIDerivedType(tag: DW_TAG_member, name: "swap_deactivate", scope: !819, file: !51, line: 415, baseType: !935, size: 64, offset: 1344)
!935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !936, size: 64)
!936 = !DISubroutineType(types: !937)
!937 = !{null, !387}
!938 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !766, file: !51, line: 466, baseType: !212, size: 64, offset: 896)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "wb_err", scope: !766, file: !51, line: 467, baseType: !940, size: 32, offset: 960)
!940 = !DIDerivedType(tag: DW_TAG_typedef, name: "errseq_t", file: !941, line: 8, baseType: !224)
!941 = !DIFile(filename: "./include/linux/errseq.h", directory: "/home/lizy2001/genbc/linux")
!942 = !DIDerivedType(tag: DW_TAG_member, name: "private_lock", scope: !766, file: !51, line: 468, baseType: !270, offset: 992)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "private_list", scope: !766, file: !51, line: 469, baseType: !257, size: 128, offset: 1024)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !766, file: !51, line: 470, baseType: !211, size: 64, offset: 1152)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !761, file: !754, line: 87, baseType: !212, size: 64, offset: 192)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !761, file: !754, line: 94, baseType: !212, size: 64, offset: 256)
!947 = !DIDerivedType(tag: DW_TAG_member, scope: !758, file: !754, line: 96, baseType: !948, size: 64)
!948 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !758, file: !754, line: 96, size: 64, elements: !949)
!949 = !{!950}
!950 = !DIDerivedType(tag: DW_TAG_member, name: "dma_addr", scope: !948, file: !754, line: 101, baseType: !951, size: 64)
!951 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_addr_t", file: !210, line: 143, baseType: !452)
!952 = !DIDerivedType(tag: DW_TAG_member, scope: !758, file: !754, line: 103, baseType: !953, size: 320)
!953 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !758, file: !754, line: 103, size: 320, elements: !954)
!954 = !{!955, !965, !968, !969}
!955 = !DIDerivedType(tag: DW_TAG_member, scope: !953, file: !754, line: 104, baseType: !956, size: 128)
!956 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !953, file: !754, line: 104, size: 128, elements: !957)
!957 = !{!958, !959}
!958 = !DIDerivedType(tag: DW_TAG_member, name: "slab_list", scope: !956, file: !754, line: 105, baseType: !257, size: 128)
!959 = !DIDerivedType(tag: DW_TAG_member, scope: !956, file: !754, line: 106, baseType: !960, size: 128)
!960 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !956, file: !754, line: 106, size: 128, elements: !961)
!961 = !{!962, !963, !964}
!962 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !960, file: !754, line: 107, baseType: !752, size: 64)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !960, file: !754, line: 109, baseType: !217, size: 32, offset: 64)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "pobjects", scope: !960, file: !754, line: 110, baseType: !217, size: 32, offset: 96)
!965 = !DIDerivedType(tag: DW_TAG_member, name: "slab_cache", scope: !953, file: !754, line: 117, baseType: !966, size: 64, offset: 128)
!966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !967, size: 64)
!967 = !DICompositeType(tag: DW_TAG_structure_type, name: "kmem_cache", file: !754, line: 117, flags: DIFlagFwdDecl)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "freelist", scope: !953, file: !754, line: 119, baseType: !211, size: 64, offset: 192)
!969 = !DIDerivedType(tag: DW_TAG_member, scope: !953, file: !754, line: 120, baseType: !970, size: 64, offset: 256)
!970 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !953, file: !754, line: 120, size: 64, elements: !971)
!971 = !{!972, !973, !974}
!972 = !DIDerivedType(tag: DW_TAG_member, name: "s_mem", scope: !970, file: !754, line: 121, baseType: !211, size: 64)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "counters", scope: !970, file: !754, line: 122, baseType: !212, size: 64)
!974 = !DIDerivedType(tag: DW_TAG_member, scope: !970, file: !754, line: 123, baseType: !975, size: 32)
!975 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !970, file: !754, line: 123, size: 32, elements: !976)
!976 = !{!977, !978, !979}
!977 = !DIDerivedType(tag: DW_TAG_member, name: "inuse", scope: !975, file: !754, line: 124, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !975, file: !754, line: 125, baseType: !7, size: 15, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !975, file: !754, line: 126, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!980 = !DIDerivedType(tag: DW_TAG_member, scope: !758, file: !754, line: 130, baseType: !981, size: 192)
!981 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !758, file: !754, line: 130, size: 192, elements: !982)
!982 = !{!983, !984, !985, !986, !987}
!983 = !DIDerivedType(tag: DW_TAG_member, name: "compound_head", scope: !981, file: !754, line: 131, baseType: !212, size: 64)
!984 = !DIDerivedType(tag: DW_TAG_member, name: "compound_dtor", scope: !981, file: !754, line: 134, baseType: !458, size: 8, offset: 64)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "compound_order", scope: !981, file: !754, line: 135, baseType: !458, size: 8, offset: 72)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "compound_mapcount", scope: !981, file: !754, line: 136, baseType: !778, size: 32, offset: 96)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "compound_nr", scope: !981, file: !754, line: 137, baseType: !7, size: 32, offset: 128)
!988 = !DIDerivedType(tag: DW_TAG_member, scope: !758, file: !754, line: 139, baseType: !989, size: 256)
!989 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !758, file: !754, line: 139, size: 256, elements: !990)
!990 = !{!991, !992, !993}
!991 = !DIDerivedType(tag: DW_TAG_member, name: "_compound_pad_1", scope: !989, file: !754, line: 140, baseType: !212, size: 64)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "hpage_pinned_refcount", scope: !989, file: !754, line: 141, baseType: !778, size: 32, offset: 64)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_list", scope: !989, file: !754, line: 143, baseType: !257, size: 128, offset: 128)
!994 = !DIDerivedType(tag: DW_TAG_member, scope: !758, file: !754, line: 145, baseType: !995, size: 256)
!995 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !758, file: !754, line: 145, size: 256, elements: !996)
!996 = !{!997, !998, !1000, !1001, !2417}
!997 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_1", scope: !995, file: !754, line: 146, baseType: !212, size: 64)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "pmd_huge_pte", scope: !995, file: !754, line: 147, baseType: !999, size: 64, offset: 64)
!999 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgtable_t", file: !744, line: 509, baseType: !752)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_2", scope: !995, file: !754, line: 148, baseType: !212, size: 64, offset: 128)
!1001 = !DIDerivedType(tag: DW_TAG_member, scope: !995, file: !754, line: 149, baseType: !1002, size: 64, offset: 192)
!1002 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !995, file: !754, line: 149, size: 64, elements: !1003)
!1003 = !{!1004, !2416}
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "pt_mm", scope: !1002, file: !754, line: 150, baseType: !1005, size: 64)
!1005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1006, size: 64)
!1006 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_struct", file: !754, line: 388, size: 7296, elements: !1007)
!1007 = !{!1008, !2412}
!1008 = !DIDerivedType(tag: DW_TAG_member, scope: !1006, file: !754, line: 389, baseType: !1009, size: 7296)
!1009 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1006, file: !754, line: 389, size: 7296, elements: !1010)
!1010 = !{!1011, !1129, !1130, !1131, !1135, !1136, !1137, !1138, !1139, !1146, !1147, !1148, !1149, !1150, !1151, !1152, !1153, !1154, !1155, !1156, !1157, !1158, !1159, !1160, !1161, !1162, !1163, !1164, !1165, !1166, !1167, !1168, !1169, !1170, !1171, !1172, !1173, !1174, !1175, !1176, !1180, !1188, !1191, !1237, !1238, !2396, !2397, !2400, !2401, !2402, !2405, !2406, !2407, !2410, !2411}
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !1009, file: !754, line: 390, baseType: !1012, size: 64)
!1012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1013, size: 64)
!1013 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_area_struct", file: !754, line: 305, size: 1472, elements: !1014)
!1014 = !{!1015, !1016, !1017, !1018, !1019, !1020, !1021, !1022, !1029, !1030, !1035, !1036, !1039, !1123, !1124, !1125, !1126, !1127}
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "vm_start", scope: !1013, file: !754, line: 308, baseType: !212, size: 64)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "vm_end", scope: !1013, file: !754, line: 309, baseType: !212, size: 64, offset: 64)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "vm_next", scope: !1013, file: !754, line: 313, baseType: !1012, size: 64, offset: 128)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "vm_prev", scope: !1013, file: !754, line: 313, baseType: !1012, size: 64, offset: 192)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "vm_rb", scope: !1013, file: !754, line: 315, baseType: !791, size: 192, align: 64, offset: 256)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_gap", scope: !1013, file: !754, line: 323, baseType: !212, size: 64, offset: 448)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "vm_mm", scope: !1013, file: !754, line: 327, baseType: !1005, size: 64, offset: 512)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "vm_page_prot", scope: !1013, file: !754, line: 333, baseType: !1023, size: 64, offset: 576)
!1023 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprot_t", file: !744, line: 284, baseType: !1024)
!1024 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pgprot", file: !744, line: 284, size: 64, elements: !1025)
!1025 = !{!1026}
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "pgprot", scope: !1024, file: !744, line: 284, baseType: !1027, size: 64)
!1027 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprotval_t", file: !1028, line: 19, baseType: !212)
!1028 = !DIFile(filename: "./arch/x86/include/asm/pgtable_64_types.h", directory: "/home/lizy2001/genbc/linux")
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "vm_flags", scope: !1013, file: !754, line: 334, baseType: !212, size: 64, offset: 640)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "shared", scope: !1013, file: !754, line: 343, baseType: !1031, size: 256, offset: 704)
!1031 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1013, file: !754, line: 340, size: 256, elements: !1032)
!1032 = !{!1033, !1034}
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !1031, file: !754, line: 341, baseType: !791, size: 192, align: 64)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_last", scope: !1031, file: !754, line: 342, baseType: !212, size: 64, offset: 192)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma_chain", scope: !1013, file: !754, line: 351, baseType: !257, size: 128, offset: 960)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma", scope: !1013, file: !754, line: 353, baseType: !1037, size: 64, offset: 1088)
!1037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1038, size: 64)
!1038 = !DICompositeType(tag: DW_TAG_structure_type, name: "anon_vma", file: !754, line: 353, flags: DIFlagFwdDecl)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !1013, file: !754, line: 356, baseType: !1040, size: 64, offset: 1152)
!1040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1041, size: 64)
!1041 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1042)
!1042 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_operations_struct", file: !21, line: 557, size: 832, elements: !1043)
!1043 = !{!1044, !1048, !1049, !1053, !1057, !1097, !1101, !1105, !1109, !1110, !1111, !1115, !1119}
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !1042, file: !21, line: 558, baseType: !1045, size: 64)
!1045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1046, size: 64)
!1046 = !DISubroutineType(types: !1047)
!1047 = !{null, !1012}
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !1042, file: !21, line: 559, baseType: !1045, size: 64, offset: 64)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "split", scope: !1042, file: !21, line: 560, baseType: !1050, size: 64, offset: 128)
!1050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1051, size: 64)
!1051 = !DISubroutineType(types: !1052)
!1052 = !{!217, !1012, !212}
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "mremap", scope: !1042, file: !21, line: 561, baseType: !1054, size: 64, offset: 192)
!1054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1055, size: 64)
!1055 = !DISubroutineType(types: !1056)
!1056 = !{!217, !1012}
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "fault", scope: !1042, file: !21, line: 562, baseType: !1058, size: 64, offset: 256)
!1058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1059, size: 64)
!1059 = !DISubroutineType(types: !1060)
!1060 = !{!1061, !1062}
!1061 = !DIDerivedType(tag: DW_TAG_typedef, name: "vm_fault_t", file: !754, line: 682, baseType: !7)
!1062 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1063, size: 64)
!1063 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_fault", file: !21, line: 508, size: 768, elements: !1064)
!1064 = !{!1065, !1066, !1067, !1068, !1069, !1070, !1077, !1084, !1090, !1091, !1092, !1094, !1096}
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "vma", scope: !1063, file: !21, line: 509, baseType: !1012, size: 64)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1063, file: !21, line: 510, baseType: !7, size: 32, offset: 64)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !1063, file: !21, line: 511, baseType: !209, size: 32, offset: 96)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "pgoff", scope: !1063, file: !21, line: 512, baseType: !212, size: 64, offset: 128)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !1063, file: !21, line: 513, baseType: !212, size: 64, offset: 192)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !1063, file: !21, line: 514, baseType: !1071, size: 64, offset: 256)
!1071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1072, size: 64)
!1072 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmd_t", file: !744, line: 385, baseType: !1073)
!1073 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !744, line: 385, size: 64, elements: !1074)
!1074 = !{!1075}
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !1073, file: !744, line: 385, baseType: !1076, size: 64)
!1076 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmdval_t", file: !1028, line: 15, baseType: !212)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !1063, file: !21, line: 516, baseType: !1078, size: 64, offset: 320)
!1078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1079, size: 64)
!1079 = !DIDerivedType(tag: DW_TAG_typedef, name: "pud_t", file: !744, line: 359, baseType: !1080)
!1080 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !744, line: 359, size: 64, elements: !1081)
!1081 = !{!1082}
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !1080, file: !744, line: 359, baseType: !1083, size: 64)
!1083 = !DIDerivedType(tag: DW_TAG_typedef, name: "pudval_t", file: !1028, line: 16, baseType: !212)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "orig_pte", scope: !1063, file: !21, line: 519, baseType: !1085, size: 64, offset: 384)
!1085 = !DIDerivedType(tag: DW_TAG_typedef, name: "pte_t", file: !1028, line: 21, baseType: !1086)
!1086 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1028, line: 21, size: 64, elements: !1087)
!1087 = !{!1088}
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !1086, file: !1028, line: 21, baseType: !1089, size: 64)
!1089 = !DIDerivedType(tag: DW_TAG_typedef, name: "pteval_t", file: !1028, line: 14, baseType: !212)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "cow_page", scope: !1063, file: !21, line: 521, baseType: !752, size: 64, offset: 448)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !1063, file: !21, line: 522, baseType: !752, size: 64, offset: 512)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !1063, file: !21, line: 528, baseType: !1093, size: 64, offset: 576)
!1093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1085, size: 64)
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !1063, file: !21, line: 532, baseType: !1095, size: 64, offset: 640)
!1095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !270, size: 64)
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_pte", scope: !1063, file: !21, line: 536, baseType: !999, size: 64, offset: 704)
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "huge_fault", scope: !1042, file: !21, line: 563, baseType: !1098, size: 64, offset: 320)
!1098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1099, size: 64)
!1099 = !DISubroutineType(types: !1100)
!1100 = !{!1061, !1062, !20}
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "map_pages", scope: !1042, file: !21, line: 565, baseType: !1102, size: 64, offset: 384)
!1102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1103, size: 64)
!1103 = !DISubroutineType(types: !1104)
!1104 = !{null, !1062, !212, !212}
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "pagesize", scope: !1042, file: !21, line: 567, baseType: !1106, size: 64, offset: 448)
!1106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1107, size: 64)
!1107 = !DISubroutineType(types: !1108)
!1108 = !{!212, !1012}
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "page_mkwrite", scope: !1042, file: !21, line: 571, baseType: !1058, size: 64, offset: 512)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "pfn_mkwrite", scope: !1042, file: !21, line: 574, baseType: !1058, size: 64, offset: 576)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "access", scope: !1042, file: !21, line: 579, baseType: !1112, size: 64, offset: 640)
!1112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1113, size: 64)
!1113 = !DISubroutineType(types: !1114)
!1114 = !{!217, !1012, !212, !211, !217, !217}
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1042, file: !21, line: 585, baseType: !1116, size: 64, offset: 704)
!1116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1117, size: 64)
!1117 = !DISubroutineType(types: !1118)
!1118 = !{!254, !1012}
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "find_special_page", scope: !1042, file: !21, line: 615, baseType: !1120, size: 64, offset: 768)
!1120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1121, size: 64)
!1121 = !DISubroutineType(types: !1122)
!1122 = !{!752, !1012, !212}
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "vm_pgoff", scope: !1013, file: !754, line: 359, baseType: !212, size: 64, offset: 1216)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "vm_file", scope: !1013, file: !754, line: 361, baseType: !387, size: 64, offset: 1280)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "vm_private_data", scope: !1013, file: !754, line: 362, baseType: !211, size: 64, offset: 1344)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "swap_readahead_info", scope: !1013, file: !754, line: 365, baseType: !802, size: 64, offset: 1408)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "vm_userfaultfd_ctx", scope: !1013, file: !754, line: 373, baseType: !1128, offset: 1472)
!1128 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_userfaultfd_ctx", file: !754, line: 296, elements: !284)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "mm_rb", scope: !1009, file: !754, line: 391, baseType: !787, size: 64, offset: 64)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache_seqnum", scope: !1009, file: !754, line: 392, baseType: !452, size: 64, offset: 128)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !1009, file: !754, line: 394, baseType: !1132, size: 64, offset: 192)
!1132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1133, size: 64)
!1133 = !DISubroutineType(types: !1134)
!1134 = !{!212, !387, !212, !212, !212, !212}
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_base", scope: !1009, file: !754, line: 398, baseType: !212, size: 64, offset: 256)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_legacy_base", scope: !1009, file: !754, line: 399, baseType: !212, size: 64, offset: 320)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "task_size", scope: !1009, file: !754, line: 405, baseType: !212, size: 64, offset: 384)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "highest_vm_end", scope: !1009, file: !754, line: 406, baseType: !212, size: 64, offset: 448)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !1009, file: !754, line: 407, baseType: !1140, size: 64, offset: 512)
!1140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1141, size: 64)
!1141 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgd_t", file: !744, line: 286, baseType: !1142)
!1142 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !744, line: 286, size: 64, elements: !1143)
!1143 = !{!1144}
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !1142, file: !744, line: 286, baseType: !1145, size: 64)
!1145 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgdval_t", file: !1028, line: 18, baseType: !212)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "membarrier_state", scope: !1009, file: !754, line: 416, baseType: !778, size: 32, offset: 576)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "mm_users", scope: !1009, file: !754, line: 428, baseType: !778, size: 32, offset: 608)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "mm_count", scope: !1009, file: !754, line: 437, baseType: !778, size: 32, offset: 640)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "has_pinned", scope: !1009, file: !754, line: 447, baseType: !778, size: 32, offset: 672)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "pgtables_bytes", scope: !1009, file: !754, line: 450, baseType: !802, size: 64, offset: 704)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "map_count", scope: !1009, file: !754, line: 452, baseType: !217, size: 32, offset: 768)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "page_table_lock", scope: !1009, file: !754, line: 454, baseType: !270, offset: 800)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_lock", scope: !1009, file: !754, line: 457, baseType: !798, size: 256, offset: 832)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "mmlist", scope: !1009, file: !754, line: 459, baseType: !257, size: 128, offset: 1088)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_rss", scope: !1009, file: !754, line: 466, baseType: !212, size: 64, offset: 1216)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_vm", scope: !1009, file: !754, line: 467, baseType: !212, size: 64, offset: 1280)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "total_vm", scope: !1009, file: !754, line: 469, baseType: !212, size: 64, offset: 1344)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !1009, file: !754, line: 470, baseType: !212, size: 64, offset: 1408)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "pinned_vm", scope: !1009, file: !754, line: 471, baseType: !804, size: 64, offset: 1472)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "data_vm", scope: !1009, file: !754, line: 472, baseType: !212, size: 64, offset: 1536)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "exec_vm", scope: !1009, file: !754, line: 473, baseType: !212, size: 64, offset: 1600)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm", scope: !1009, file: !754, line: 474, baseType: !212, size: 64, offset: 1664)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "def_flags", scope: !1009, file: !754, line: 475, baseType: !212, size: 64, offset: 1728)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "arg_lock", scope: !1009, file: !754, line: 477, baseType: !270, offset: 1792)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "start_code", scope: !1009, file: !754, line: 478, baseType: !212, size: 64, offset: 1792)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "end_code", scope: !1009, file: !754, line: 478, baseType: !212, size: 64, offset: 1856)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "start_data", scope: !1009, file: !754, line: 478, baseType: !212, size: 64, offset: 1920)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "end_data", scope: !1009, file: !754, line: 478, baseType: !212, size: 64, offset: 1984)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "start_brk", scope: !1009, file: !754, line: 479, baseType: !212, size: 64, offset: 2048)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "brk", scope: !1009, file: !754, line: 479, baseType: !212, size: 64, offset: 2112)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "start_stack", scope: !1009, file: !754, line: 479, baseType: !212, size: 64, offset: 2176)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "arg_start", scope: !1009, file: !754, line: 480, baseType: !212, size: 64, offset: 2240)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "arg_end", scope: !1009, file: !754, line: 480, baseType: !212, size: 64, offset: 2304)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "env_start", scope: !1009, file: !754, line: 480, baseType: !212, size: 64, offset: 2368)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "env_end", scope: !1009, file: !754, line: 480, baseType: !212, size: 64, offset: 2432)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "saved_auxv", scope: !1009, file: !754, line: 482, baseType: !1177, size: 2816, offset: 2496)
!1177 = !DICompositeType(tag: DW_TAG_array_type, baseType: !212, size: 2816, elements: !1178)
!1178 = !{!1179}
!1179 = !DISubrange(count: 44)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "rss_stat", scope: !1009, file: !754, line: 488, baseType: !1181, size: 256, offset: 5312)
!1181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_rss_stat", file: !1182, line: 60, size: 256, elements: !1183)
!1182 = !DIFile(filename: "./include/linux/mm_types_task.h", directory: "/home/lizy2001/genbc/linux")
!1183 = !{!1184}
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1181, file: !1182, line: 61, baseType: !1185, size: 256)
!1185 = !DICompositeType(tag: DW_TAG_array_type, baseType: !802, size: 256, elements: !1186)
!1186 = !{!1187}
!1187 = !DISubrange(count: 4)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "binfmt", scope: !1009, file: !754, line: 490, baseType: !1189, size: 64, offset: 5568)
!1189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1190, size: 64)
!1190 = !DICompositeType(tag: DW_TAG_structure_type, name: "linux_binfmt", file: !754, line: 490, flags: DIFlagFwdDecl)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1009, file: !754, line: 493, baseType: !1192, size: 896, offset: 5632)
!1192 = !DIDerivedType(tag: DW_TAG_typedef, name: "mm_context_t", file: !1193, line: 53, baseType: !1194)
!1193 = !DIFile(filename: "./arch/x86/include/asm/mmu.h", directory: "/home/lizy2001/genbc/linux")
!1194 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1193, line: 13, size: 896, elements: !1195)
!1195 = !{!1196, !1197, !1198, !1199, !1202, !1203, !1210, !1211, !1231, !1232, !1233}
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_id", scope: !1194, file: !1193, line: 18, baseType: !452, size: 64)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_gen", scope: !1194, file: !1193, line: 28, baseType: !804, size: 64, offset: 64)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "ldt_usr_sem", scope: !1194, file: !1193, line: 31, baseType: !798, size: 256, offset: 128)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "ldt", scope: !1194, file: !1193, line: 32, baseType: !1200, size: 64, offset: 384)
!1200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1201, size: 64)
!1201 = !DICompositeType(tag: DW_TAG_structure_type, name: "ldt_struct", file: !1193, line: 32, flags: DIFlagFwdDecl)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "ia32_compat", scope: !1194, file: !1193, line: 37, baseType: !352, size: 16, offset: 448)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1194, file: !1193, line: 40, baseType: !1204, size: 192, offset: 512)
!1204 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mutex", file: !1205, line: 53, size: 192, elements: !1206)
!1205 = !DIFile(filename: "./include/linux/mutex.h", directory: "/home/lizy2001/genbc/linux")
!1206 = !{!1207, !1208, !1209}
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1204, file: !1205, line: 54, baseType: !802, size: 64)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !1204, file: !1205, line: 55, baseType: !270, offset: 64)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !1204, file: !1205, line: 59, baseType: !257, size: 128, offset: 64)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "vdso", scope: !1194, file: !1193, line: 41, baseType: !211, size: 64, offset: 704)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "vdso_image", scope: !1194, file: !1193, line: 42, baseType: !1212, size: 64, offset: 768)
!1212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1213, size: 64)
!1213 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1214)
!1214 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vdso_image", file: !1215, line: 13, size: 896, elements: !1216)
!1215 = !DIFile(filename: "./arch/x86/include/asm/vdso.h", directory: "/home/lizy2001/genbc/linux")
!1216 = !{!1217, !1218, !1219, !1220, !1221, !1222, !1223, !1224, !1225, !1226, !1227, !1228, !1229, !1230}
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1214, file: !1215, line: 14, baseType: !211, size: 64)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1214, file: !1215, line: 15, baseType: !212, size: 64, offset: 64)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "alt", scope: !1214, file: !1215, line: 17, baseType: !212, size: 64, offset: 128)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "alt_len", scope: !1214, file: !1215, line: 17, baseType: !212, size: 64, offset: 192)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_start", scope: !1214, file: !1215, line: 19, baseType: !154, size: 64, offset: 256)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_page", scope: !1214, file: !1215, line: 21, baseType: !154, size: 64, offset: 320)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "sym_pvclock_page", scope: !1214, file: !1215, line: 22, baseType: !154, size: 64, offset: 384)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "sym_hvclock_page", scope: !1214, file: !1215, line: 23, baseType: !154, size: 64, offset: 448)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "sym_timens_page", scope: !1214, file: !1215, line: 24, baseType: !154, size: 64, offset: 512)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "sym_VDSO32_NOTE_MASK", scope: !1214, file: !1215, line: 25, baseType: !154, size: 64, offset: 576)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_sigreturn", scope: !1214, file: !1215, line: 26, baseType: !154, size: 64, offset: 640)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_rt_sigreturn", scope: !1214, file: !1215, line: 27, baseType: !154, size: 64, offset: 704)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_vsyscall", scope: !1214, file: !1215, line: 28, baseType: !154, size: 64, offset: 768)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "sym_int80_landing_pad", scope: !1214, file: !1215, line: 29, baseType: !154, size: 64, offset: 832)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "perf_rdpmc_allowed", scope: !1194, file: !1193, line: 44, baseType: !778, size: 32, offset: 832)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "pkey_allocation_map", scope: !1194, file: !1193, line: 50, baseType: !890, size: 16, offset: 864)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "execute_only_pkey", scope: !1194, file: !1193, line: 51, baseType: !1234, size: 16, offset: 880)
!1234 = !DIDerivedType(tag: DW_TAG_typedef, name: "s16", file: !225, line: 18, baseType: !1235)
!1235 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s16", file: !227, line: 23, baseType: !1236)
!1236 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1009, file: !754, line: 495, baseType: !212, size: 64, offset: 6528)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "core_state", scope: !1009, file: !754, line: 497, baseType: !1239, size: 64, offset: 6592)
!1239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1240, size: 64)
!1240 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_state", file: !754, line: 381, size: 384, elements: !1241)
!1241 = !{!1242, !1243, !2395}
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !1240, file: !754, line: 382, baseType: !778, size: 32)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "dumper", scope: !1240, file: !754, line: 383, baseType: !1244, size: 128, offset: 64)
!1244 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_thread", file: !754, line: 376, size: 128, elements: !1245)
!1245 = !{!1246, !2393}
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !1244, file: !754, line: 377, baseType: !1247, size: 64)
!1247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1248, size: 64)
!1248 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_struct", file: !1249, line: 640, size: 48640, elements: !1250)
!1249 = !DIFile(filename: "./include/linux/sched.h", directory: "/home/lizy2001/genbc/linux")
!1250 = !{!1251, !1257, !1259, !1260, !1265, !1266, !1267, !1268, !1269, !1270, !1271, !1272, !1276, !1294, !1305, !1390, !1391, !1392, !1403, !1404, !1406, !1407, !1408, !1409, !1415, !1416, !1417, !1418, !1419, !1420, !1421, !1422, !1423, !1424, !1425, !1426, !1427, !1428, !1429, !1430, !1488, !1491, !1492, !1493, !1494, !1495, !1496, !1497, !1498, !1499, !1500, !1563, !1565, !1566, !1567, !1579, !1580, !1581, !1582, !1583, !1584, !1590, !1591, !1592, !1593, !1594, !1595, !1596, !1608, !1613, !1793, !1794, !1795, !1796, !1797, !1800, !1803, !1806, !1809, !1835, !1936, !1965, !1966, !1967, !1968, !1969, !1970, !1971, !1972, !1973, !1982, !1983, !1984, !1985, !1986, !1991, !1992, !1993, !1996, !1997, !2000, !2003, !2006, !2009, !2051, !2054, !2055, !2134, !2135, !2138, !2139, !2142, !2143, !2144, !2148, !2149, !2150, !2163, !2164, !2165, !2175, !2180, !2183, !2189, !2190, !2191, !2192, !2193, !2194, !2195, !2196, !2212, !2213, !2214, !2215, !2216, !2217, !2218, !2219, !2220}
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "thread_info", scope: !1248, file: !1249, line: 646, baseType: !1252, size: 128)
!1252 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_info", file: !1253, line: 56, size: 128, elements: !1254)
!1253 = !DIFile(filename: "./arch/x86/include/asm/thread_info.h", directory: "/home/lizy2001/genbc/linux")
!1254 = !{!1255, !1256}
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1252, file: !1253, line: 57, baseType: !212, size: 64)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !1252, file: !1253, line: 58, baseType: !224, size: 32, offset: 64)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1248, file: !1249, line: 649, baseType: !1258, size: 64, offset: 128)
!1258 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !154)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !1248, file: !1249, line: 657, baseType: !211, size: 64, offset: 192)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1248, file: !1249, line: 658, baseType: !1261, size: 32, offset: 256)
!1261 = !DIDerivedType(tag: DW_TAG_typedef, name: "refcount_t", file: !193, line: 113, baseType: !1262)
!1262 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "refcount_struct", file: !193, line: 111, size: 32, elements: !1263)
!1263 = !{!1264}
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !1262, file: !193, line: 112, baseType: !778, size: 32)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1248, file: !1249, line: 660, baseType: !7, size: 32, offset: 288)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace", scope: !1248, file: !1249, line: 661, baseType: !7, size: 32, offset: 320)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1248, file: !1249, line: 684, baseType: !217, size: 32, offset: 352)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1248, file: !1249, line: 686, baseType: !217, size: 32, offset: 384)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "static_prio", scope: !1248, file: !1249, line: 687, baseType: !217, size: 32, offset: 416)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "normal_prio", scope: !1248, file: !1249, line: 688, baseType: !217, size: 32, offset: 448)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "rt_priority", scope: !1248, file: !1249, line: 689, baseType: !7, size: 32, offset: 480)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "sched_class", scope: !1248, file: !1249, line: 691, baseType: !1273, size: 64, offset: 512)
!1273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1274, size: 64)
!1274 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1275)
!1275 = !DICompositeType(tag: DW_TAG_structure_type, name: "sched_class", file: !1249, line: 691, flags: DIFlagFwdDecl)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "se", scope: !1248, file: !1249, line: 692, baseType: !1277, size: 832, offset: 576)
!1277 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_entity", file: !1249, line: 451, size: 832, elements: !1278)
!1278 = !{!1279, !1284, !1285, !1286, !1287, !1288, !1289, !1290, !1291, !1292}
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "load", scope: !1277, file: !1249, line: 453, baseType: !1280, size: 128)
!1280 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "load_weight", file: !1249, line: 325, size: 128, elements: !1281)
!1281 = !{!1282, !1283}
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1280, file: !1249, line: 326, baseType: !212, size: 64)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "inv_weight", scope: !1280, file: !1249, line: 327, baseType: !224, size: 32, offset: 64)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "run_node", scope: !1277, file: !1249, line: 454, baseType: !791, size: 192, align: 64, offset: 128)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "group_node", scope: !1277, file: !1249, line: 455, baseType: !257, size: 128, offset: 320)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1277, file: !1249, line: 456, baseType: !7, size: 32, offset: 448)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "exec_start", scope: !1277, file: !1249, line: 458, baseType: !452, size: 64, offset: 512)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !1277, file: !1249, line: 459, baseType: !452, size: 64, offset: 576)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "vruntime", scope: !1277, file: !1249, line: 460, baseType: !452, size: 64, offset: 640)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "prev_sum_exec_runtime", scope: !1277, file: !1249, line: 461, baseType: !452, size: 64, offset: 704)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "nr_migrations", scope: !1277, file: !1249, line: 463, baseType: !452, size: 64, offset: 768)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "statistics", scope: !1277, file: !1249, line: 465, baseType: !1293, offset: 832)
!1293 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_statistics", file: !1249, line: 415, elements: !284)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1248, file: !1249, line: 693, baseType: !1295, size: 384, offset: 1408)
!1295 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_rt_entity", file: !1249, line: 489, size: 384, elements: !1296)
!1296 = !{!1297, !1298, !1299, !1300, !1301, !1302, !1303}
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "run_list", scope: !1295, file: !1249, line: 490, baseType: !257, size: 128)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1295, file: !1249, line: 491, baseType: !212, size: 64, offset: 128)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_stamp", scope: !1295, file: !1249, line: 492, baseType: !212, size: 64, offset: 192)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "time_slice", scope: !1295, file: !1249, line: 493, baseType: !7, size: 32, offset: 256)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1295, file: !1249, line: 494, baseType: !352, size: 16, offset: 288)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "on_list", scope: !1295, file: !1249, line: 495, baseType: !352, size: 16, offset: 304)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !1295, file: !1249, line: 497, baseType: !1304, size: 64, offset: 320)
!1304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1295, size: 64)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "dl", scope: !1248, file: !1249, line: 697, baseType: !1306, size: 1792, offset: 1792)
!1306 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_dl_entity", file: !1249, line: 507, size: 1792, elements: !1307)
!1307 = !{!1308, !1309, !1310, !1311, !1312, !1313, !1314, !1315, !1316, !1317, !1318, !1319, !1320, !1321, !1387, !1388}
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !1306, file: !1249, line: 508, baseType: !791, size: 192, align: 64)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "dl_runtime", scope: !1306, file: !1249, line: 515, baseType: !452, size: 64, offset: 192)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "dl_deadline", scope: !1306, file: !1249, line: 516, baseType: !452, size: 64, offset: 256)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "dl_period", scope: !1306, file: !1249, line: 517, baseType: !452, size: 64, offset: 320)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "dl_bw", scope: !1306, file: !1249, line: 518, baseType: !452, size: 64, offset: 384)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "dl_density", scope: !1306, file: !1249, line: 519, baseType: !452, size: 64, offset: 448)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "runtime", scope: !1306, file: !1249, line: 526, baseType: !808, size: 64, offset: 512)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", scope: !1306, file: !1249, line: 527, baseType: !452, size: 64, offset: 576)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1306, file: !1249, line: 528, baseType: !7, size: 32, offset: 640)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "dl_throttled", scope: !1306, file: !1249, line: 554, baseType: !7, size: 1, offset: 672, flags: DIFlagBitField, extraData: i64 672)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "dl_yielded", scope: !1306, file: !1249, line: 555, baseType: !7, size: 1, offset: 673, flags: DIFlagBitField, extraData: i64 672)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "dl_non_contending", scope: !1306, file: !1249, line: 556, baseType: !7, size: 1, offset: 674, flags: DIFlagBitField, extraData: i64 672)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "dl_overrun", scope: !1306, file: !1249, line: 557, baseType: !7, size: 1, offset: 675, flags: DIFlagBitField, extraData: i64 672)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "dl_timer", scope: !1306, file: !1249, line: 563, baseType: !1322, size: 512, offset: 704)
!1322 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer", file: !27, line: 118, size: 512, elements: !1323)
!1323 = !{!1324, !1332, !1333, !1338, !1381, !1384, !1385, !1386}
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1322, file: !27, line: 119, baseType: !1325, size: 256)
!1325 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_node", file: !1326, line: 9, size: 256, elements: !1327)
!1326 = !DIFile(filename: "./include/linux/timerqueue.h", directory: "/home/lizy2001/genbc/linux")
!1327 = !{!1328, !1329}
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1325, file: !1326, line: 10, baseType: !791, size: 192, align: 64)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1325, file: !1326, line: 11, baseType: !1330, size: 64, offset: 192)
!1330 = !DIDerivedType(tag: DW_TAG_typedef, name: "ktime_t", file: !1331, line: 29, baseType: !808)
!1331 = !DIFile(filename: "./include/linux/ktime.h", directory: "/home/lizy2001/genbc/linux")
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "_softexpires", scope: !1322, file: !27, line: 120, baseType: !1330, size: 64, offset: 256)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !1322, file: !27, line: 121, baseType: !1334, size: 64, offset: 320)
!1334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1335, size: 64)
!1335 = !DISubroutineType(types: !1336)
!1336 = !{!26, !1337}
!1337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1322, size: 64)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1322, file: !27, line: 122, baseType: !1339, size: 64, offset: 384)
!1339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1340, size: 64)
!1340 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_clock_base", file: !27, line: 159, size: 512, align: 512, elements: !1341)
!1341 = !{!1342, !1362, !1363, !1366, !1371, !1372, !1376, !1380}
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_base", scope: !1340, file: !27, line: 160, baseType: !1343, size: 64)
!1343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1344, size: 64)
!1344 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_cpu_base", file: !27, line: 214, size: 4608, align: 512, elements: !1345)
!1345 = !{!1346, !1347, !1348, !1349, !1350, !1351, !1352, !1353, !1354, !1355, !1356, !1357, !1358}
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1344, file: !27, line: 215, baseType: !811)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !1344, file: !27, line: 216, baseType: !7, size: 32)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "active_bases", scope: !1344, file: !27, line: 217, baseType: !7, size: 32, offset: 32)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "clock_was_set_seq", scope: !1344, file: !27, line: 218, baseType: !7, size: 32, offset: 64)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "hres_active", scope: !1344, file: !27, line: 219, baseType: !7, size: 1, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "in_hrtirq", scope: !1344, file: !27, line: 220, baseType: !7, size: 1, offset: 97, flags: DIFlagBitField, extraData: i64 96)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "hang_detected", scope: !1344, file: !27, line: 221, baseType: !7, size: 1, offset: 98, flags: DIFlagBitField, extraData: i64 96)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_activated", scope: !1344, file: !27, line: 222, baseType: !7, size: 1, offset: 99, flags: DIFlagBitField, extraData: i64 96)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "expires_next", scope: !1344, file: !27, line: 233, baseType: !1330, size: 64, offset: 128)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "next_timer", scope: !1344, file: !27, line: 234, baseType: !1337, size: 64, offset: 192)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_expires_next", scope: !1344, file: !27, line: 235, baseType: !1330, size: 64, offset: 256)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_next_timer", scope: !1344, file: !27, line: 236, baseType: !1337, size: 64, offset: 320)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "clock_base", scope: !1344, file: !27, line: 237, baseType: !1359, size: 4096, offset: 512)
!1359 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1340, size: 4096, elements: !1360)
!1360 = !{!1361}
!1361 = !DISubrange(count: 8)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1340, file: !27, line: 161, baseType: !7, size: 32, offset: 64)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !1340, file: !27, line: 162, baseType: !1364, size: 32, offset: 96)
!1364 = !DIDerivedType(tag: DW_TAG_typedef, name: "clockid_t", file: !210, line: 27, baseType: !1365)
!1365 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clockid_t", file: !344, line: 96, baseType: !217)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !1340, file: !27, line: 163, baseType: !1367, size: 32, offset: 128)
!1367 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_raw_spinlock_t", file: !423, line: 276, baseType: !1368)
!1368 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_raw_spinlock", file: !423, line: 276, size: 32, elements: !1369)
!1369 = !{!1370}
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !1368, file: !423, line: 276, baseType: !427, size: 32)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "running", scope: !1340, file: !27, line: 164, baseType: !1337, size: 64, offset: 192)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !1340, file: !27, line: 165, baseType: !1373, size: 128, offset: 256)
!1373 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_head", file: !1326, line: 14, size: 128, elements: !1374)
!1374 = !{!1375}
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !1373, file: !1326, line: 15, baseType: !783, size: 128)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "get_time", scope: !1340, file: !27, line: 166, baseType: !1377, size: 64, offset: 384)
!1377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1378, size: 64)
!1378 = !DISubroutineType(types: !1379)
!1379 = !{!1330}
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1340, file: !27, line: 167, baseType: !1330, size: 64, offset: 448)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1322, file: !27, line: 123, baseType: !1382, size: 8, offset: 448)
!1382 = !DIDerivedType(tag: DW_TAG_typedef, name: "u8", file: !225, line: 17, baseType: !1383)
!1383 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u8", file: !227, line: 21, baseType: !458)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "is_rel", scope: !1322, file: !27, line: 124, baseType: !1382, size: 8, offset: 456)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "is_soft", scope: !1322, file: !27, line: 125, baseType: !1382, size: 8, offset: 464)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "is_hard", scope: !1322, file: !27, line: 126, baseType: !1382, size: 8, offset: 472)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "inactive_timer", scope: !1306, file: !1249, line: 572, baseType: !1322, size: 512, offset: 1216)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "pi_se", scope: !1306, file: !1249, line: 580, baseType: !1389, size: 64, offset: 1728)
!1389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1306, size: 64)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !1248, file: !1249, line: 721, baseType: !7, size: 32, offset: 3584)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cpus_allowed", scope: !1248, file: !1249, line: 722, baseType: !217, size: 32, offset: 3616)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_ptr", scope: !1248, file: !1249, line: 723, baseType: !1393, size: 64, offset: 3648)
!1393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1394, size: 64)
!1394 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1395)
!1395 = !DIDerivedType(tag: DW_TAG_typedef, name: "cpumask_t", file: !1396, line: 17, baseType: !1397)
!1396 = !DIFile(filename: "./include/linux/cpumask.h", directory: "/home/lizy2001/genbc/linux")
!1397 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpumask", file: !1396, line: 17, size: 64, elements: !1398)
!1398 = !{!1399}
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !1397, file: !1396, line: 17, baseType: !1400, size: 64)
!1400 = !DICompositeType(tag: DW_TAG_array_type, baseType: !212, size: 64, elements: !1401)
!1401 = !{!1402}
!1402 = !DISubrange(count: 1)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_mask", scope: !1248, file: !1249, line: 724, baseType: !1395, size: 64, offset: 3712)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "sched_info", scope: !1248, file: !1249, line: 749, baseType: !1405, offset: 3776)
!1405 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_info", file: !1249, line: 290, elements: !284)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !1248, file: !1249, line: 751, baseType: !257, size: 128, offset: 3776)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "mm", scope: !1248, file: !1249, line: 757, baseType: !1005, size: 64, offset: 3904)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "active_mm", scope: !1248, file: !1249, line: 758, baseType: !1005, size: 64, offset: 3968)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache", scope: !1248, file: !1249, line: 761, baseType: !1410, size: 320, offset: 4032)
!1410 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmacache", file: !1182, line: 34, size: 320, elements: !1411)
!1411 = !{!1412, !1413}
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "seqnum", scope: !1410, file: !1182, line: 35, baseType: !452, size: 64)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "vmas", scope: !1410, file: !1182, line: 36, baseType: !1414, size: 256, offset: 64)
!1414 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1012, size: 256, elements: !1186)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "exit_state", scope: !1248, file: !1249, line: 766, baseType: !217, size: 32, offset: 4352)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "exit_code", scope: !1248, file: !1249, line: 767, baseType: !217, size: 32, offset: 4384)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "exit_signal", scope: !1248, file: !1249, line: 768, baseType: !217, size: 32, offset: 4416)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "pdeath_signal", scope: !1248, file: !1249, line: 770, baseType: !217, size: 32, offset: 4448)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "jobctl", scope: !1248, file: !1249, line: 772, baseType: !212, size: 64, offset: 4480)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !1248, file: !1249, line: 775, baseType: !7, size: 32, offset: 4544)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "sched_reset_on_fork", scope: !1248, file: !1249, line: 778, baseType: !7, size: 1, offset: 4576, flags: DIFlagBitField, extraData: i64 4576)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "sched_contributes_to_load", scope: !1248, file: !1249, line: 779, baseType: !7, size: 1, offset: 4577, flags: DIFlagBitField, extraData: i64 4576)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "sched_migrated", scope: !1248, file: !1249, line: 780, baseType: !7, size: 1, offset: 4578, flags: DIFlagBitField, extraData: i64 4576)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "sched_remote_wakeup", scope: !1248, file: !1249, line: 803, baseType: !7, size: 1, offset: 4608, flags: DIFlagBitField, extraData: i64 4608)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "in_execve", scope: !1248, file: !1249, line: 806, baseType: !7, size: 1, offset: 4609, flags: DIFlagBitField, extraData: i64 4608)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "in_iowait", scope: !1248, file: !1249, line: 807, baseType: !7, size: 1, offset: 4610, flags: DIFlagBitField, extraData: i64 4608)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "restore_sigmask", scope: !1248, file: !1249, line: 809, baseType: !7, size: 1, offset: 4611, flags: DIFlagBitField, extraData: i64 4608)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "brk_randomized", scope: !1248, file: !1249, line: 815, baseType: !7, size: 1, offset: 4612, flags: DIFlagBitField, extraData: i64 4608)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_flags", scope: !1248, file: !1249, line: 831, baseType: !212, size: 64, offset: 4672)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "restart_block", scope: !1248, file: !1249, line: 833, baseType: !1431, size: 384, offset: 4736)
!1431 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "restart_block", file: !32, line: 25, size: 384, elements: !1432)
!1432 = !{!1433, !1438}
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1431, file: !32, line: 26, baseType: !1434, size: 64)
!1434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1435, size: 64)
!1435 = !DISubroutineType(types: !1436)
!1436 = !{!154, !1437}
!1437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1431, size: 64)
!1438 = !DIDerivedType(tag: DW_TAG_member, scope: !1431, file: !32, line: 27, baseType: !1439, size: 320, offset: 64)
!1439 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1431, file: !32, line: 27, size: 320, elements: !1440)
!1440 = !{!1441, !1451, !1478}
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "futex", scope: !1439, file: !32, line: 36, baseType: !1442, size: 320)
!1442 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1439, file: !32, line: 29, size: 320, elements: !1443)
!1443 = !{!1444, !1446, !1447, !1448, !1449, !1450}
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr", scope: !1442, file: !32, line: 30, baseType: !1445, size: 64)
!1445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !224, size: 64)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1442, file: !32, line: 31, baseType: !224, size: 32, offset: 64)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1442, file: !32, line: 32, baseType: !224, size: 32, offset: 96)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "bitset", scope: !1442, file: !32, line: 33, baseType: !224, size: 32, offset: 128)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !1442, file: !32, line: 34, baseType: !452, size: 64, offset: 192)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr2", scope: !1442, file: !32, line: 35, baseType: !1445, size: 64, offset: 256)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "nanosleep", scope: !1439, file: !32, line: 46, baseType: !1452, size: 192)
!1452 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1439, file: !32, line: 38, size: 192, elements: !1453)
!1453 = !{!1454, !1455, !1456, !1477}
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !1452, file: !32, line: 39, baseType: !1364, size: 32)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1452, file: !32, line: 40, baseType: !31, size: 32, offset: 32)
!1456 = !DIDerivedType(tag: DW_TAG_member, scope: !1452, file: !32, line: 41, baseType: !1457, size: 64, offset: 64)
!1457 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1452, file: !32, line: 41, size: 64, elements: !1458)
!1458 = !{!1459, !1467}
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "rmtp", scope: !1457, file: !32, line: 42, baseType: !1460, size: 64)
!1460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1461, size: 64)
!1461 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__kernel_timespec", file: !1462, line: 7, size: 128, elements: !1463)
!1462 = !DIFile(filename: "./include/uapi/linux/time_types.h", directory: "/home/lizy2001/genbc/linux")
!1463 = !{!1464, !1466}
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1461, file: !1462, line: 8, baseType: !1465, size: 64)
!1465 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_time64_t", file: !344, line: 93, baseType: !564)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1461, file: !1462, line: 9, baseType: !564, size: 64, offset: 64)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "compat_rmtp", scope: !1457, file: !32, line: 43, baseType: !1468, size: 64)
!1468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1469, size: 64)
!1469 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "old_timespec32", file: !1470, line: 7, size: 64, elements: !1471)
!1470 = !DIFile(filename: "./include/vdso/time32.h", directory: "/home/lizy2001/genbc/linux")
!1471 = !{!1472, !1476}
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1469, file: !1470, line: 8, baseType: !1473, size: 32)
!1473 = !DIDerivedType(tag: DW_TAG_typedef, name: "old_time32_t", file: !1470, line: 5, baseType: !1474)
!1474 = !DIDerivedType(tag: DW_TAG_typedef, name: "s32", file: !225, line: 20, baseType: !1475)
!1475 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s32", file: !227, line: 26, baseType: !217)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1469, file: !1470, line: 9, baseType: !1474, size: 32, offset: 32)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1452, file: !32, line: 45, baseType: !452, size: 64, offset: 128)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !1439, file: !32, line: 54, baseType: !1479, size: 256)
!1479 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1439, file: !32, line: 48, size: 256, elements: !1480)
!1480 = !{!1481, !1484, !1485, !1486, !1487}
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "ufds", scope: !1479, file: !32, line: 49, baseType: !1482, size: 64)
!1482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1483, size: 64)
!1483 = !DICompositeType(tag: DW_TAG_structure_type, name: "pollfd", file: !32, line: 14, flags: DIFlagFwdDecl)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "nfds", scope: !1479, file: !32, line: 50, baseType: !217, size: 32, offset: 64)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "has_timeout", scope: !1479, file: !32, line: 51, baseType: !217, size: 32, offset: 96)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1479, file: !32, line: 52, baseType: !212, size: 64, offset: 128)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1479, file: !32, line: 53, baseType: !212, size: 64, offset: 192)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !1248, file: !1249, line: 835, baseType: !1489, size: 32, offset: 5120)
!1489 = !DIDerivedType(tag: DW_TAG_typedef, name: "pid_t", file: !210, line: 22, baseType: !1490)
!1490 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_pid_t", file: !344, line: 28, baseType: !217)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "tgid", scope: !1248, file: !1249, line: 836, baseType: !1489, size: 32, offset: 5152)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "stack_canary", scope: !1248, file: !1249, line: 840, baseType: !212, size: 64, offset: 5184)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "real_parent", scope: !1248, file: !1249, line: 849, baseType: !1247, size: 64, offset: 5248)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1248, file: !1249, line: 852, baseType: !1247, size: 64, offset: 5312)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1248, file: !1249, line: 857, baseType: !257, size: 128, offset: 5376)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !1248, file: !1249, line: 858, baseType: !257, size: 128, offset: 5504)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "group_leader", scope: !1248, file: !1249, line: 859, baseType: !1247, size: 64, offset: 5632)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "ptraced", scope: !1248, file: !1249, line: 867, baseType: !257, size: 128, offset: 5696)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_entry", scope: !1248, file: !1249, line: 868, baseType: !257, size: 128, offset: 5824)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "thread_pid", scope: !1248, file: !1249, line: 871, baseType: !1501, size: 64, offset: 5952)
!1501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1502, size: 64)
!1502 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pid", file: !60, line: 59, size: 768, elements: !1503)
!1503 = !{!1504, !1505, !1506, !1507, !1509, !1510, !1517, !1518}
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1502, file: !60, line: 61, baseType: !1261, size: 32)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1502, file: !60, line: 62, baseType: !7, size: 32, offset: 32)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1502, file: !60, line: 63, baseType: !270, offset: 64)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !1502, file: !60, line: 65, baseType: !1508, size: 256, offset: 64)
!1508 = !DICompositeType(tag: DW_TAG_array_type, baseType: !666, size: 256, elements: !1186)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "inodes", scope: !1502, file: !60, line: 66, baseType: !666, size: 64, offset: 320)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "wait_pidfd", scope: !1502, file: !60, line: 68, baseType: !1511, size: 128, offset: 384)
!1511 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_head_t", file: !1512, line: 40, baseType: !1513)
!1512 = !DIFile(filename: "./include/linux/wait.h", directory: "/home/lizy2001/genbc/linux")
!1513 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_head", file: !1512, line: 36, size: 128, elements: !1514)
!1514 = !{!1515, !1516}
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1513, file: !1512, line: 37, baseType: !270)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1513, file: !1512, line: 38, baseType: !257, size: 128)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1502, file: !60, line: 69, baseType: !400, size: 128, align: 64, offset: 512)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "numbers", scope: !1502, file: !60, line: 70, baseType: !1519, size: 128, offset: 640)
!1519 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1520, size: 128, elements: !1401)
!1520 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "upid", file: !60, line: 54, size: 128, elements: !1521)
!1521 = !{!1522, !1523}
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !1520, file: !60, line: 55, baseType: !217, size: 32)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !1520, file: !60, line: 56, baseType: !1524, size: 64, offset: 64)
!1524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1525, size: 64)
!1525 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pid_namespace", file: !1526, line: 20, size: 1088, elements: !1527)
!1526 = !DIFile(filename: "./include/linux/pid_namespace.h", directory: "/home/lizy2001/genbc/linux")
!1527 = !{!1528, !1533, !1540, !1541, !1542, !1543, !1544, !1545, !1546, !1549, !1552, !1553}
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !1525, file: !1526, line: 21, baseType: !1529, size: 32)
!1529 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kref", file: !1530, line: 19, size: 32, elements: !1531)
!1530 = !DIFile(filename: "./include/linux/kref.h", directory: "/home/lizy2001/genbc/linux")
!1531 = !{!1532}
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !1529, file: !1530, line: 20, baseType: !1261, size: 32)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "idr", scope: !1525, file: !1526, line: 22, baseType: !1534, size: 192, offset: 64)
!1534 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "idr", file: !1535, line: 19, size: 192, elements: !1536)
!1535 = !DIFile(filename: "./include/linux/idr.h", directory: "/home/lizy2001/genbc/linux")
!1536 = !{!1537, !1538, !1539}
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "idr_rt", scope: !1534, file: !1535, line: 20, baseType: !770, size: 128)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "idr_base", scope: !1534, file: !1535, line: 21, baseType: !7, size: 32, offset: 128)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "idr_next", scope: !1534, file: !1535, line: 22, baseType: !7, size: 32, offset: 160)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1525, file: !1526, line: 23, baseType: !400, size: 128, align: 64, offset: 256)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "pid_allocated", scope: !1525, file: !1526, line: 24, baseType: !7, size: 32, offset: 384)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "child_reaper", scope: !1525, file: !1526, line: 25, baseType: !1247, size: 64, offset: 448)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "pid_cachep", scope: !1525, file: !1526, line: 26, baseType: !966, size: 64, offset: 512)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1525, file: !1526, line: 27, baseType: !7, size: 32, offset: 576)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1525, file: !1526, line: 28, baseType: !1524, size: 64, offset: 640)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1525, file: !1526, line: 32, baseType: !1547, size: 64, offset: 704)
!1547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1548, size: 64)
!1548 = !DICompositeType(tag: DW_TAG_structure_type, name: "user_namespace", file: !467, line: 18, flags: DIFlagFwdDecl)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "ucounts", scope: !1525, file: !1526, line: 33, baseType: !1550, size: 64, offset: 768)
!1550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1551, size: 64)
!1551 = !DICompositeType(tag: DW_TAG_structure_type, name: "ucounts", file: !1526, line: 33, flags: DIFlagFwdDecl)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "reboot", scope: !1525, file: !1526, line: 34, baseType: !217, size: 32, offset: 832)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !1525, file: !1526, line: 35, baseType: !1554, size: 192, offset: 896)
!1554 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ns_common", file: !1555, line: 7, size: 192, elements: !1556)
!1555 = !DIFile(filename: "./include/linux/ns_common.h", directory: "/home/lizy2001/genbc/linux")
!1556 = !{!1557, !1558, !1562}
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "stashed", scope: !1554, file: !1555, line: 8, baseType: !802, size: 64)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1554, file: !1555, line: 9, baseType: !1559, size: 64, offset: 64)
!1559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1560, size: 64)
!1560 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1561)
!1561 = !DICompositeType(tag: DW_TAG_structure_type, name: "proc_ns_operations", file: !1555, line: 5, flags: DIFlagFwdDecl)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "inum", scope: !1554, file: !1555, line: 10, baseType: !7, size: 32, offset: 128)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "pid_links", scope: !1248, file: !1249, line: 872, baseType: !1564, size: 512, offset: 6016)
!1564 = !DICompositeType(tag: DW_TAG_array_type, baseType: !670, size: 512, elements: !1186)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "thread_group", scope: !1248, file: !1249, line: 873, baseType: !257, size: 128, offset: 6528)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "thread_node", scope: !1248, file: !1249, line: 874, baseType: !257, size: 128, offset: 6656)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "vfork_done", scope: !1248, file: !1249, line: 876, baseType: !1568, size: 64, offset: 6784)
!1568 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1569, size: 64)
!1569 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "completion", file: !1570, line: 26, size: 192, elements: !1571)
!1570 = !DIFile(filename: "./include/linux/completion.h", directory: "/home/lizy2001/genbc/linux")
!1571 = !{!1572, !1573}
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !1569, file: !1570, line: 27, baseType: !7, size: 32)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !1569, file: !1570, line: 28, baseType: !1574, size: 128, offset: 64)
!1574 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swait_queue_head", file: !1575, line: 43, size: 128, elements: !1576)
!1575 = !DIFile(filename: "./include/linux/swait.h", directory: "/home/lizy2001/genbc/linux")
!1576 = !{!1577, !1578}
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1574, file: !1575, line: 44, baseType: !811)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "task_list", scope: !1574, file: !1575, line: 45, baseType: !257, size: 128)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "set_child_tid", scope: !1248, file: !1249, line: 879, baseType: !736, size: 64, offset: 6848)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "clear_child_tid", scope: !1248, file: !1249, line: 882, baseType: !736, size: 64, offset: 6912)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1248, file: !1249, line: 884, baseType: !452, size: 64, offset: 6976)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1248, file: !1249, line: 885, baseType: !452, size: 64, offset: 7040)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !1248, file: !1249, line: 890, baseType: !452, size: 64, offset: 7104)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !1248, file: !1249, line: 891, baseType: !1585, size: 128, offset: 7168)
!1585 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "prev_cputime", file: !1249, line: 242, size: 128, elements: !1586)
!1586 = !{!1587, !1588, !1589}
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1585, file: !1249, line: 244, baseType: !452, size: 64)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1585, file: !1249, line: 245, baseType: !452, size: 64, offset: 64)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1585, file: !1249, line: 246, baseType: !811, offset: 128)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !1248, file: !1249, line: 900, baseType: !212, size: 64, offset: 7296)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !1248, file: !1249, line: 901, baseType: !212, size: 64, offset: 7360)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "start_time", scope: !1248, file: !1249, line: 904, baseType: !452, size: 64, offset: 7424)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "start_boottime", scope: !1248, file: !1249, line: 907, baseType: !452, size: 64, offset: 7488)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !1248, file: !1249, line: 910, baseType: !212, size: 64, offset: 7552)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !1248, file: !1249, line: 911, baseType: !212, size: 64, offset: 7616)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !1248, file: !1249, line: 914, baseType: !1597, size: 640, offset: 7680)
!1597 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers", file: !1598, line: 123, size: 640, elements: !1599)
!1598 = !DIFile(filename: "./include/linux/posix-timers.h", directory: "/home/lizy2001/genbc/linux")
!1599 = !{!1600, !1606, !1607}
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "bases", scope: !1597, file: !1598, line: 124, baseType: !1601, size: 576)
!1601 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1602, size: 576, elements: !312)
!1602 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimer_base", file: !1598, line: 108, size: 192, elements: !1603)
!1603 = !{!1604, !1605}
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "nextevt", scope: !1602, file: !1598, line: 109, baseType: !452, size: 64)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "tqhead", scope: !1602, file: !1598, line: 110, baseType: !1373, size: 128, offset: 64)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "timers_active", scope: !1597, file: !1598, line: 125, baseType: !7, size: 32, offset: 576)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "expiry_active", scope: !1597, file: !1598, line: 126, baseType: !7, size: 32, offset: 608)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers_work", scope: !1248, file: !1249, line: 917, baseType: !1609, size: 192, offset: 8320)
!1609 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers_work", file: !1598, line: 134, size: 192, elements: !1610)
!1610 = !{!1611, !1612}
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !1609, file: !1598, line: 135, baseType: !400, size: 128, align: 64)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "scheduled", scope: !1609, file: !1598, line: 136, baseType: !7, size: 32, offset: 128)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "ptracer_cred", scope: !1248, file: !1249, line: 923, baseType: !1614, size: 64, offset: 8512)
!1614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1615, size: 64)
!1615 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1616)
!1616 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cred", file: !1617, line: 111, size: 1280, elements: !1618)
!1617 = !DIFile(filename: "./include/linux/cred.h", directory: "/home/lizy2001/genbc/linux")
!1618 = !{!1619, !1620, !1621, !1622, !1623, !1624, !1625, !1626, !1627, !1628, !1629, !1636, !1637, !1638, !1639, !1640, !1641, !1748, !1749, !1750, !1751, !1777, !1778, !1788}
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1616, file: !1617, line: 112, baseType: !778, size: 32)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1616, file: !1617, line: 120, baseType: !466, size: 32, offset: 32)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1616, file: !1617, line: 121, baseType: !474, size: 32, offset: 64)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "suid", scope: !1616, file: !1617, line: 122, baseType: !466, size: 32, offset: 96)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "sgid", scope: !1616, file: !1617, line: 123, baseType: !474, size: 32, offset: 128)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !1616, file: !1617, line: 124, baseType: !466, size: 32, offset: 160)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "egid", scope: !1616, file: !1617, line: 125, baseType: !474, size: 32, offset: 192)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "fsuid", scope: !1616, file: !1617, line: 126, baseType: !466, size: 32, offset: 224)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "fsgid", scope: !1616, file: !1617, line: 127, baseType: !474, size: 32, offset: 256)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "securebits", scope: !1616, file: !1617, line: 128, baseType: !7, size: 32, offset: 288)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "cap_inheritable", scope: !1616, file: !1617, line: 129, baseType: !1630, size: 64, offset: 320)
!1630 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_cap_t", file: !1631, line: 26, baseType: !1632)
!1631 = !DIFile(filename: "./include/linux/capability.h", directory: "/home/lizy2001/genbc/linux")
!1632 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_cap_struct", file: !1631, line: 24, size: 64, elements: !1633)
!1633 = !{!1634}
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !1632, file: !1631, line: 25, baseType: !1635, size: 64)
!1635 = !DICompositeType(tag: DW_TAG_array_type, baseType: !226, size: 64, elements: !238)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "cap_permitted", scope: !1616, file: !1617, line: 130, baseType: !1630, size: 64, offset: 384)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "cap_effective", scope: !1616, file: !1617, line: 131, baseType: !1630, size: 64, offset: 448)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "cap_bset", scope: !1616, file: !1617, line: 132, baseType: !1630, size: 64, offset: 512)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "cap_ambient", scope: !1616, file: !1617, line: 133, baseType: !1630, size: 64, offset: 576)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "jit_keyring", scope: !1616, file: !1617, line: 135, baseType: !458, size: 8, offset: 640)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "session_keyring", scope: !1616, file: !1617, line: 137, baseType: !1642, size: 64, offset: 704)
!1642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1643, size: 64)
!1643 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key", file: !1644, line: 189, size: 1664, elements: !1645)
!1644 = !DIFile(filename: "./include/linux/key.h", directory: "/home/lizy2001/genbc/linux")
!1645 = !{!1646, !1647, !1650, !1655, !1656, !1659, !1660, !1665, !1666, !1667, !1668, !1670, !1671, !1672, !1673, !1674, !1712, !1733}
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1643, file: !1644, line: 190, baseType: !1261, size: 32)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !1643, file: !1644, line: 191, baseType: !1648, size: 32, offset: 32)
!1648 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_serial_t", file: !1644, line: 28, baseType: !1649)
!1649 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !210, line: 98, baseType: !1474)
!1650 = !DIDerivedType(tag: DW_TAG_member, scope: !1643, file: !1644, line: 192, baseType: !1651, size: 192, offset: 64)
!1651 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1643, file: !1644, line: 192, size: 192, elements: !1652)
!1652 = !{!1653, !1654}
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "graveyard_link", scope: !1651, file: !1644, line: 193, baseType: !257, size: 128)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "serial_node", scope: !1651, file: !1644, line: 194, baseType: !791, size: 192, align: 64)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "sem", scope: !1643, file: !1644, line: 199, baseType: !798, size: 256, offset: 256)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1643, file: !1644, line: 200, baseType: !1657, size: 64, offset: 512)
!1657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1658, size: 64)
!1658 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_user", file: !1644, line: 200, flags: DIFlagFwdDecl)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "security", scope: !1643, file: !1644, line: 201, baseType: !211, size: 64, offset: 576)
!1660 = !DIDerivedType(tag: DW_TAG_member, scope: !1643, file: !1644, line: 202, baseType: !1661, size: 64, offset: 640)
!1661 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1643, file: !1644, line: 202, size: 64, elements: !1662)
!1662 = !{!1663, !1664}
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "expiry", scope: !1661, file: !1644, line: 203, baseType: !570, size: 64)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "revoked_at", scope: !1661, file: !1644, line: 204, baseType: !570, size: 64)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "last_used_at", scope: !1643, file: !1644, line: 206, baseType: !570, size: 64, offset: 704)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1643, file: !1644, line: 207, baseType: !466, size: 32, offset: 768)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1643, file: !1644, line: 208, baseType: !474, size: 32, offset: 800)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !1643, file: !1644, line: 209, baseType: !1669, size: 32, offset: 832)
!1669 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_perm_t", file: !1644, line: 31, baseType: !590)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "quotalen", scope: !1643, file: !1644, line: 210, baseType: !352, size: 16, offset: 864)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "datalen", scope: !1643, file: !1644, line: 211, baseType: !352, size: 16, offset: 880)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1643, file: !1644, line: 215, baseType: !1236, size: 16, offset: 896)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1643, file: !1644, line: 222, baseType: !212, size: 64, offset: 960)
!1674 = !DIDerivedType(tag: DW_TAG_member, scope: !1643, file: !1644, line: 239, baseType: !1675, size: 320, offset: 1024)
!1675 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1643, file: !1644, line: 239, size: 320, elements: !1676)
!1676 = !{!1677, !1704}
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "index_key", scope: !1675, file: !1644, line: 240, baseType: !1678, size: 320)
!1678 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "keyring_index_key", file: !1644, line: 108, size: 320, elements: !1679)
!1679 = !{!1680, !1681, !1693, !1696, !1703}
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1678, file: !1644, line: 110, baseType: !212, size: 64)
!1681 = !DIDerivedType(tag: DW_TAG_member, scope: !1678, file: !1644, line: 111, baseType: !1682, size: 64, offset: 64)
!1682 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1678, file: !1644, line: 111, size: 64, elements: !1683)
!1683 = !{!1684, !1692}
!1684 = !DIDerivedType(tag: DW_TAG_member, scope: !1682, file: !1644, line: 112, baseType: !1685, size: 64)
!1685 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1682, file: !1644, line: 112, size: 64, elements: !1686)
!1686 = !{!1687, !1688}
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "desc_len", scope: !1685, file: !1644, line: 114, baseType: !890, size: 16)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !1685, file: !1644, line: 115, baseType: !1689, size: 48, offset: 16)
!1689 = !DICompositeType(tag: DW_TAG_array_type, baseType: !220, size: 48, elements: !1690)
!1690 = !{!1691}
!1691 = !DISubrange(count: 6)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1682, file: !1644, line: 121, baseType: !212, size: 64)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1678, file: !1644, line: 123, baseType: !1694, size: 64, offset: 128)
!1694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1695, size: 64)
!1695 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_type", file: !1644, line: 96, flags: DIFlagFwdDecl)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !1678, file: !1644, line: 124, baseType: !1697, size: 64, offset: 192)
!1697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1698, size: 64)
!1698 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_tag", file: !1644, line: 102, size: 192, elements: !1699)
!1699 = !{!1700, !1701, !1702}
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1698, file: !1644, line: 103, baseType: !400, size: 128, align: 64)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1698, file: !1644, line: 104, baseType: !1261, size: 32, offset: 128)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "removed", scope: !1698, file: !1644, line: 105, baseType: !521, size: 8, offset: 160)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1678, file: !1644, line: 125, baseType: !254, size: 64, offset: 256)
!1704 = !DIDerivedType(tag: DW_TAG_member, scope: !1675, file: !1644, line: 241, baseType: !1705, size: 320)
!1705 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1675, file: !1644, line: 241, size: 320, elements: !1706)
!1706 = !{!1707, !1708, !1709, !1710, !1711}
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1705, file: !1644, line: 242, baseType: !212, size: 64)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "len_desc", scope: !1705, file: !1644, line: 243, baseType: !212, size: 64, offset: 64)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1705, file: !1644, line: 244, baseType: !1694, size: 64, offset: 128)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !1705, file: !1644, line: 245, baseType: !1697, size: 64, offset: 192)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1705, file: !1644, line: 246, baseType: !311, size: 64, offset: 256)
!1712 = !DIDerivedType(tag: DW_TAG_member, scope: !1643, file: !1644, line: 254, baseType: !1713, size: 256, offset: 1344)
!1713 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1643, file: !1644, line: 254, size: 256, elements: !1714)
!1714 = !{!1715, !1721}
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "payload", scope: !1713, file: !1644, line: 255, baseType: !1716, size: 256)
!1716 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "key_payload", file: !1644, line: 128, size: 256, elements: !1717)
!1717 = !{!1718, !1719}
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_data0", scope: !1716, file: !1644, line: 129, baseType: !211, size: 64)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1716, file: !1644, line: 130, baseType: !1720, size: 256)
!1720 = !DICompositeType(tag: DW_TAG_array_type, baseType: !211, size: 256, elements: !1186)
!1721 = !DIDerivedType(tag: DW_TAG_member, scope: !1713, file: !1644, line: 256, baseType: !1722, size: 256)
!1722 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1713, file: !1644, line: 256, size: 256, elements: !1723)
!1723 = !{!1724, !1725}
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "name_link", scope: !1722, file: !1644, line: 258, baseType: !257, size: 128)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !1722, file: !1644, line: 259, baseType: !1726, size: 128, offset: 128)
!1726 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array", file: !1727, line: 22, size: 128, elements: !1728)
!1727 = !DIFile(filename: "./include/linux/assoc_array.h", directory: "/home/lizy2001/genbc/linux")
!1728 = !{!1729, !1732}
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !1726, file: !1727, line: 23, baseType: !1730, size: 64)
!1730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1731, size: 64)
!1731 = !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array_ptr", file: !1727, line: 23, flags: DIFlagFwdDecl)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "nr_leaves_on_tree", scope: !1726, file: !1727, line: 24, baseType: !212, size: 64, offset: 64)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_link", scope: !1643, file: !1644, line: 274, baseType: !1734, size: 64, offset: 1600)
!1734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1735, size: 64)
!1735 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_restriction", file: !1644, line: 170, size: 192, elements: !1736)
!1736 = !{!1737, !1746, !1747}
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !1735, file: !1644, line: 171, baseType: !1738, size: 64)
!1738 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_restrict_link_func_t", file: !1644, line: 165, baseType: !1739)
!1739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1740, size: 64)
!1740 = !DISubroutineType(types: !1741)
!1741 = !{!217, !1642, !1742, !1744, !1642}
!1742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1743, size: 64)
!1743 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1695)
!1744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1745, size: 64)
!1745 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1716)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1735, file: !1644, line: 172, baseType: !1642, size: 64, offset: 64)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "keytype", scope: !1735, file: !1644, line: 173, baseType: !1694, size: 64, offset: 128)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "process_keyring", scope: !1616, file: !1617, line: 138, baseType: !1642, size: 64, offset: 768)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "thread_keyring", scope: !1616, file: !1617, line: 139, baseType: !1642, size: 64, offset: 832)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "request_key_auth", scope: !1616, file: !1617, line: 140, baseType: !1642, size: 64, offset: 896)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1616, file: !1617, line: 145, baseType: !1752, size: 64, offset: 960)
!1752 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1753, size: 64)
!1753 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "user_struct", file: !1754, line: 13, size: 896, elements: !1755)
!1754 = !DIFile(filename: "./include/linux/sched/user.h", directory: "/home/lizy2001/genbc/linux")
!1755 = !{!1756, !1757, !1758, !1759, !1760, !1761, !1762, !1763, !1764, !1765, !1766}
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !1753, file: !1754, line: 14, baseType: !1261, size: 32)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "processes", scope: !1753, file: !1754, line: 15, baseType: !778, size: 32, offset: 32)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "sigpending", scope: !1753, file: !1754, line: 16, baseType: !778, size: 32, offset: 64)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "epoll_watches", scope: !1753, file: !1754, line: 21, baseType: !802, size: 64, offset: 128)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "locked_shm", scope: !1753, file: !1754, line: 27, baseType: !212, size: 64, offset: 192)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "unix_inflight", scope: !1753, file: !1754, line: 28, baseType: !212, size: 64, offset: 256)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "pipe_bufs", scope: !1753, file: !1754, line: 29, baseType: !802, size: 64, offset: 320)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "uidhash_node", scope: !1753, file: !1754, line: 32, baseType: !670, size: 128, offset: 384)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1753, file: !1754, line: 33, baseType: !466, size: 32, offset: 512)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !1753, file: !1754, line: 37, baseType: !802, size: 64, offset: 576)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "ratelimit", scope: !1753, file: !1754, line: 44, baseType: !1767, size: 256, offset: 640)
!1767 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ratelimit_state", file: !1768, line: 15, size: 256, elements: !1769)
!1768 = !DIFile(filename: "./include/linux/ratelimit_types.h", directory: "/home/lizy2001/genbc/linux")
!1769 = !{!1770, !1771, !1772, !1773, !1774, !1775, !1776}
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1767, file: !1768, line: 16, baseType: !811)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !1767, file: !1768, line: 18, baseType: !217, size: 32)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "burst", scope: !1767, file: !1768, line: 19, baseType: !217, size: 32, offset: 32)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "printed", scope: !1767, file: !1768, line: 20, baseType: !217, size: 32, offset: 64)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "missed", scope: !1767, file: !1768, line: 21, baseType: !217, size: 32, offset: 96)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !1767, file: !1768, line: 22, baseType: !212, size: 64, offset: 128)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1767, file: !1768, line: 23, baseType: !212, size: 64, offset: 192)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1616, file: !1617, line: 146, baseType: !1547, size: 64, offset: 1024)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "group_info", scope: !1616, file: !1617, line: 147, baseType: !1779, size: 64, offset: 1088)
!1779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1780, size: 64)
!1780 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group_info", file: !1617, line: 25, size: 64, elements: !1781)
!1781 = !{!1782, !1783, !1784}
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1780, file: !1617, line: 26, baseType: !778, size: 32)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "ngroups", scope: !1780, file: !1617, line: 27, baseType: !217, size: 32, offset: 32)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1780, file: !1617, line: 28, baseType: !1785, offset: 64)
!1785 = !DICompositeType(tag: DW_TAG_array_type, baseType: !474, elements: !1786)
!1786 = !{!1787}
!1787 = !DISubrange(count: 0)
!1788 = !DIDerivedType(tag: DW_TAG_member, scope: !1616, file: !1617, line: 149, baseType: !1789, size: 128, offset: 1152)
!1789 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1616, file: !1617, line: 149, size: 128, elements: !1790)
!1790 = !{!1791, !1792}
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "non_rcu", scope: !1789, file: !1617, line: 150, baseType: !217, size: 32)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1789, file: !1617, line: 151, baseType: !400, size: 128, align: 64)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "real_cred", scope: !1248, file: !1249, line: 926, baseType: !1614, size: 64, offset: 8576)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "cred", scope: !1248, file: !1249, line: 929, baseType: !1614, size: 64, offset: 8640)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "cached_requested_key", scope: !1248, file: !1249, line: 933, baseType: !1642, size: 64, offset: 8704)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "comm", scope: !1248, file: !1249, line: 943, baseType: !219, size: 128, offset: 8768)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "nameidata", scope: !1248, file: !1249, line: 945, baseType: !1798, size: 64, offset: 8896)
!1798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1799, size: 64)
!1799 = !DICompositeType(tag: DW_TAG_structure_type, name: "nameidata", file: !1249, line: 49, flags: DIFlagFwdDecl)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !1248, file: !1249, line: 956, baseType: !1801, size: 64, offset: 8960)
!1801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1802, size: 64)
!1802 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_struct", file: !1249, line: 45, flags: DIFlagFwdDecl)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !1248, file: !1249, line: 959, baseType: !1804, size: 64, offset: 9024)
!1804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1805, size: 64)
!1805 = !DICompositeType(tag: DW_TAG_structure_type, name: "files_struct", file: !1249, line: 959, flags: DIFlagFwdDecl)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "io_uring", scope: !1248, file: !1249, line: 962, baseType: !1807, size: 64, offset: 9088)
!1807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1808, size: 64)
!1808 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_uring_task", file: !1249, line: 66, flags: DIFlagFwdDecl)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "nsproxy", scope: !1248, file: !1249, line: 966, baseType: !1810, size: 64, offset: 9152)
!1810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1811, size: 64)
!1811 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nsproxy", file: !1812, line: 31, size: 576, elements: !1813)
!1812 = !DIFile(filename: "./include/linux/nsproxy.h", directory: "/home/lizy2001/genbc/linux")
!1813 = !{!1814, !1815, !1818, !1821, !1824, !1825, !1828, !1831, !1832}
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1811, file: !1812, line: 32, baseType: !778, size: 32)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "uts_ns", scope: !1811, file: !1812, line: 33, baseType: !1816, size: 64, offset: 64)
!1816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1817, size: 64)
!1817 = !DICompositeType(tag: DW_TAG_structure_type, name: "uts_namespace", file: !1812, line: 9, flags: DIFlagFwdDecl)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "ipc_ns", scope: !1811, file: !1812, line: 34, baseType: !1819, size: 64, offset: 128)
!1819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1820, size: 64)
!1820 = !DICompositeType(tag: DW_TAG_structure_type, name: "ipc_namespace", file: !1812, line: 10, flags: DIFlagFwdDecl)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_ns", scope: !1811, file: !1812, line: 35, baseType: !1822, size: 64, offset: 192)
!1822 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1823, size: 64)
!1823 = !DICompositeType(tag: DW_TAG_structure_type, name: "mnt_namespace", file: !1812, line: 8, flags: DIFlagFwdDecl)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "pid_ns_for_children", scope: !1811, file: !1812, line: 36, baseType: !1524, size: 64, offset: 256)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "net_ns", scope: !1811, file: !1812, line: 37, baseType: !1826, size: 64, offset: 320)
!1826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1827, size: 64)
!1827 = !DICompositeType(tag: DW_TAG_structure_type, name: "net", file: !1644, line: 34, flags: DIFlagFwdDecl)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "time_ns", scope: !1811, file: !1812, line: 38, baseType: !1829, size: 64, offset: 384)
!1829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1830, size: 64)
!1830 = !DICompositeType(tag: DW_TAG_structure_type, name: "time_namespace", file: !1812, line: 38, flags: DIFlagFwdDecl)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "time_ns_for_children", scope: !1811, file: !1812, line: 39, baseType: !1829, size: 64, offset: 448)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "cgroup_ns", scope: !1811, file: !1812, line: 40, baseType: !1833, size: 64, offset: 512)
!1833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1834, size: 64)
!1834 = !DICompositeType(tag: DW_TAG_structure_type, name: "cgroup_namespace", file: !1812, line: 12, flags: DIFlagFwdDecl)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !1248, file: !1249, line: 969, baseType: !1836, size: 64, offset: 9216)
!1836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1837, size: 64)
!1837 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "signal_struct", file: !1838, line: 82, size: 7296, elements: !1839)
!1838 = !DIFile(filename: "./include/linux/sched/signal.h", directory: "/home/lizy2001/genbc/linux")
!1839 = !{!1840, !1841, !1842, !1843, !1844, !1845, !1846, !1857, !1858, !1859, !1860, !1861, !1862, !1863, !1864, !1865, !1866, !1867, !1868, !1869, !1875, !1884, !1885, !1887, !1888, !1889, !1892, !1898, !1899, !1900, !1901, !1902, !1903, !1904, !1905, !1906, !1907, !1908, !1909, !1910, !1911, !1912, !1913, !1914, !1915, !1916, !1917, !1918, !1919, !1922, !1923, !1930, !1931, !1932, !1933, !1934, !1935}
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "sigcnt", scope: !1837, file: !1838, line: 83, baseType: !1261, size: 32)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "live", scope: !1837, file: !1838, line: 84, baseType: !778, size: 32, offset: 32)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !1837, file: !1838, line: 85, baseType: !217, size: 32, offset: 64)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "thread_head", scope: !1837, file: !1838, line: 86, baseType: !257, size: 128, offset: 128)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "wait_chldexit", scope: !1837, file: !1838, line: 88, baseType: !1511, size: 128, offset: 256)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "curr_target", scope: !1837, file: !1838, line: 91, baseType: !1247, size: 64, offset: 384)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "shared_pending", scope: !1837, file: !1838, line: 94, baseType: !1847, size: 192, offset: 448)
!1847 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigpending", file: !1848, line: 30, size: 192, elements: !1849)
!1848 = !DIFile(filename: "./include/linux/signal_types.h", directory: "/home/lizy2001/genbc/linux")
!1849 = !{!1850, !1851}
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !1847, file: !1848, line: 31, baseType: !257, size: 128)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !1847, file: !1848, line: 32, baseType: !1852, size: 64, offset: 128)
!1852 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigset_t", file: !1853, line: 25, baseType: !1854)
!1853 = !DIFile(filename: "./arch/x86/include/asm/signal.h", directory: "/home/lizy2001/genbc/linux")
!1854 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1853, line: 23, size: 64, elements: !1855)
!1855 = !{!1856}
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !1854, file: !1853, line: 24, baseType: !1400, size: 64)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "multiprocess", scope: !1837, file: !1838, line: 97, baseType: !666, size: 64, offset: 640)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_code", scope: !1837, file: !1838, line: 100, baseType: !217, size: 32, offset: 704)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "notify_count", scope: !1837, file: !1838, line: 106, baseType: !217, size: 32, offset: 736)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_task", scope: !1837, file: !1838, line: 107, baseType: !1247, size: 64, offset: 768)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "group_stop_count", scope: !1837, file: !1838, line: 110, baseType: !217, size: 32, offset: 832)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1837, file: !1838, line: 111, baseType: !7, size: 32, offset: 864)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "is_child_subreaper", scope: !1837, file: !1838, line: 122, baseType: !7, size: 1, offset: 896, flags: DIFlagBitField, extraData: i64 896)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "has_child_subreaper", scope: !1837, file: !1838, line: 123, baseType: !7, size: 1, offset: 897, flags: DIFlagBitField, extraData: i64 896)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timer_id", scope: !1837, file: !1838, line: 128, baseType: !217, size: 32, offset: 928)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timers", scope: !1837, file: !1838, line: 129, baseType: !257, size: 128, offset: 960)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "real_timer", scope: !1837, file: !1838, line: 132, baseType: !1322, size: 512, offset: 1088)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "it_real_incr", scope: !1837, file: !1838, line: 133, baseType: !1330, size: 64, offset: 1600)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "it", scope: !1837, file: !1838, line: 140, baseType: !1870, size: 256, offset: 1664)
!1870 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1871, size: 256, elements: !238)
!1871 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpu_itimer", file: !1838, line: 38, size: 128, elements: !1872)
!1872 = !{!1873, !1874}
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1871, file: !1838, line: 39, baseType: !452, size: 64)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "incr", scope: !1871, file: !1838, line: 40, baseType: !452, size: 64, offset: 64)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "cputimer", scope: !1837, file: !1838, line: 146, baseType: !1876, size: 192, offset: 1920)
!1876 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_group_cputimer", file: !1838, line: 66, size: 192, elements: !1877)
!1877 = !{!1878}
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "cputime_atomic", scope: !1876, file: !1838, line: 67, baseType: !1879, size: 192)
!1879 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_cputime_atomic", file: !1838, line: 47, size: 192, elements: !1880)
!1880 = !{!1881, !1882, !1883}
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1879, file: !1838, line: 48, baseType: !804, size: 64)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1879, file: !1838, line: 49, baseType: !804, size: 64, offset: 64)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !1879, file: !1838, line: 50, baseType: !804, size: 64, offset: 128)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !1837, file: !1838, line: 150, baseType: !1597, size: 640, offset: 2112)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "pids", scope: !1837, file: !1838, line: 153, baseType: !1886, size: 256, offset: 2752)
!1886 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1501, size: 256, elements: !1186)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "tty_old_pgrp", scope: !1837, file: !1838, line: 159, baseType: !1501, size: 64, offset: 3008)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "leader", scope: !1837, file: !1838, line: 162, baseType: !217, size: 32, offset: 3072)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "tty", scope: !1837, file: !1838, line: 164, baseType: !1890, size: 64, offset: 3136)
!1890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1891, size: 64)
!1891 = !DICompositeType(tag: DW_TAG_structure_type, name: "tty_struct", file: !1838, line: 164, flags: DIFlagFwdDecl)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "stats_lock", scope: !1837, file: !1838, line: 175, baseType: !1893, size: 32, offset: 3200)
!1893 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqlock_t", file: !423, line: 805, baseType: !1894)
!1894 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !423, line: 798, size: 32, elements: !1895)
!1895 = !{!1896, !1897}
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !1894, file: !423, line: 803, baseType: !422, size: 32)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1894, file: !423, line: 804, baseType: !270, offset: 32)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1837, file: !1838, line: 176, baseType: !452, size: 64, offset: 3264)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1837, file: !1838, line: 176, baseType: !452, size: 64, offset: 3328)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "cutime", scope: !1837, file: !1838, line: 176, baseType: !452, size: 64, offset: 3392)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "cstime", scope: !1837, file: !1838, line: 176, baseType: !452, size: 64, offset: 3456)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !1837, file: !1838, line: 177, baseType: !452, size: 64, offset: 3520)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "cgtime", scope: !1837, file: !1838, line: 178, baseType: !452, size: 64, offset: 3584)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !1837, file: !1838, line: 179, baseType: !1585, size: 128, offset: 3648)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !1837, file: !1838, line: 180, baseType: !212, size: 64, offset: 3776)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !1837, file: !1838, line: 180, baseType: !212, size: 64, offset: 3840)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "cnvcsw", scope: !1837, file: !1838, line: 180, baseType: !212, size: 64, offset: 3904)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "cnivcsw", scope: !1837, file: !1838, line: 180, baseType: !212, size: 64, offset: 3968)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !1837, file: !1838, line: 181, baseType: !212, size: 64, offset: 4032)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !1837, file: !1838, line: 181, baseType: !212, size: 64, offset: 4096)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "cmin_flt", scope: !1837, file: !1838, line: 181, baseType: !212, size: 64, offset: 4160)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "cmaj_flt", scope: !1837, file: !1838, line: 181, baseType: !212, size: 64, offset: 4224)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "inblock", scope: !1837, file: !1838, line: 182, baseType: !212, size: 64, offset: 4288)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "oublock", scope: !1837, file: !1838, line: 182, baseType: !212, size: 64, offset: 4352)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "cinblock", scope: !1837, file: !1838, line: 182, baseType: !212, size: 64, offset: 4416)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "coublock", scope: !1837, file: !1838, line: 182, baseType: !212, size: 64, offset: 4480)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "maxrss", scope: !1837, file: !1838, line: 183, baseType: !212, size: 64, offset: 4544)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "cmaxrss", scope: !1837, file: !1838, line: 183, baseType: !212, size: 64, offset: 4608)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !1837, file: !1838, line: 184, baseType: !1920, offset: 4672)
!1920 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_io_accounting", file: !1921, line: 12, elements: !284)
!1921 = !DIFile(filename: "./include/linux/task_io_accounting.h", directory: "/home/lizy2001/genbc/linux")
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "sum_sched_runtime", scope: !1837, file: !1838, line: 192, baseType: !454, size: 64, offset: 4672)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "rlim", scope: !1837, file: !1838, line: 203, baseType: !1924, size: 2048, offset: 4736)
!1924 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1925, size: 2048, elements: !221)
!1925 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rlimit", file: !1926, line: 43, size: 128, elements: !1927)
!1926 = !DIFile(filename: "./include/uapi/linux/resource.h", directory: "/home/lizy2001/genbc/linux")
!1927 = !{!1928, !1929}
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_cur", scope: !1925, file: !1926, line: 44, baseType: !359, size: 64)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_max", scope: !1925, file: !1926, line: 45, baseType: !359, size: 64, offset: 64)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "oom_flag_origin", scope: !1837, file: !1838, line: 220, baseType: !521, size: 8, offset: 6784)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj", scope: !1837, file: !1838, line: 221, baseType: !1236, size: 16, offset: 6800)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj_min", scope: !1837, file: !1838, line: 222, baseType: !1236, size: 16, offset: 6816)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "oom_mm", scope: !1837, file: !1838, line: 224, baseType: !1005, size: 64, offset: 6848)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "cred_guard_mutex", scope: !1837, file: !1838, line: 227, baseType: !1204, size: 192, offset: 6912)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "exec_update_mutex", scope: !1837, file: !1838, line: 233, baseType: !1204, size: 192, offset: 7104)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "sighand", scope: !1248, file: !1249, line: 970, baseType: !1937, size: 64, offset: 9280)
!1937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1938, size: 64)
!1938 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sighand_struct", file: !1838, line: 20, size: 16576, elements: !1939)
!1939 = !{!1940, !1941, !1942, !1943}
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "siglock", scope: !1938, file: !1838, line: 21, baseType: !270)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1938, file: !1838, line: 22, baseType: !1261, size: 32)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "signalfd_wqh", scope: !1938, file: !1838, line: 23, baseType: !1511, size: 128, offset: 64)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !1938, file: !1838, line: 24, baseType: !1944, size: 16384, offset: 192)
!1944 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1945, size: 16384, elements: !316)
!1945 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sigaction", file: !1848, line: 49, size: 256, elements: !1946)
!1946 = !{!1947}
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "sa", scope: !1945, file: !1848, line: 50, baseType: !1948, size: 256)
!1948 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigaction", file: !1848, line: 35, size: 256, elements: !1949)
!1949 = !{!1950, !1957, !1958, !1964}
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "sa_handler", scope: !1948, file: !1848, line: 37, baseType: !1951, size: 64)
!1951 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sighandler_t", file: !1952, line: 19, baseType: !1953)
!1952 = !DIFile(filename: "./include/uapi/asm-generic/signal-defs.h", directory: "/home/lizy2001/genbc/linux")
!1953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1954, size: 64)
!1954 = !DIDerivedType(tag: DW_TAG_typedef, name: "__signalfn_t", file: !1952, line: 18, baseType: !1955)
!1955 = !DISubroutineType(types: !1956)
!1956 = !{null, !217}
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "sa_flags", scope: !1948, file: !1848, line: 38, baseType: !212, size: 64, offset: 64)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "sa_restorer", scope: !1948, file: !1848, line: 44, baseType: !1959, size: 64, offset: 128)
!1959 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sigrestore_t", file: !1952, line: 22, baseType: !1960)
!1960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1961, size: 64)
!1961 = !DIDerivedType(tag: DW_TAG_typedef, name: "__restorefn_t", file: !1952, line: 21, baseType: !1962)
!1962 = !DISubroutineType(types: !1963)
!1963 = !{null}
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "sa_mask", scope: !1948, file: !1848, line: 46, baseType: !1852, size: 64, offset: 192)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "blocked", scope: !1248, file: !1249, line: 971, baseType: !1852, size: 64, offset: 9344)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "real_blocked", scope: !1248, file: !1249, line: 972, baseType: !1852, size: 64, offset: 9408)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "saved_sigmask", scope: !1248, file: !1249, line: 974, baseType: !1852, size: 64, offset: 9472)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "pending", scope: !1248, file: !1249, line: 975, baseType: !1847, size: 192, offset: 9536)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_sp", scope: !1248, file: !1249, line: 976, baseType: !212, size: 64, offset: 9728)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_size", scope: !1248, file: !1249, line: 977, baseType: !357, size: 64, offset: 9792)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_flags", scope: !1248, file: !1249, line: 978, baseType: !7, size: 32, offset: 9856)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "task_works", scope: !1248, file: !1249, line: 980, baseType: !403, size: 64, offset: 9920)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "seccomp", scope: !1248, file: !1249, line: 989, baseType: !1974, size: 128, offset: 9984)
!1974 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp", file: !1975, line: 35, size: 128, elements: !1976)
!1975 = !DIFile(filename: "./include/linux/seccomp.h", directory: "/home/lizy2001/genbc/linux")
!1976 = !{!1977, !1978, !1979}
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1974, file: !1975, line: 36, baseType: !217, size: 32)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "filter_count", scope: !1974, file: !1975, line: 37, baseType: !778, size: 32, offset: 32)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1974, file: !1975, line: 38, baseType: !1980, size: 64, offset: 64)
!1980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1981, size: 64)
!1981 = !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp_filter", file: !1975, line: 23, flags: DIFlagFwdDecl)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "parent_exec_id", scope: !1248, file: !1249, line: 992, baseType: !452, size: 64, offset: 10112)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "self_exec_id", scope: !1248, file: !1249, line: 993, baseType: !452, size: 64, offset: 10176)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_lock", scope: !1248, file: !1249, line: 996, baseType: !270, offset: 10240)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "pi_lock", scope: !1248, file: !1249, line: 999, baseType: !811, offset: 10240)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "wake_q", scope: !1248, file: !1249, line: 1001, baseType: !1987, size: 64, offset: 10240)
!1987 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wake_q_node", file: !1249, line: 636, size: 64, elements: !1988)
!1988 = !{!1989}
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1987, file: !1249, line: 637, baseType: !1990, size: 64)
!1990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1987, size: 64)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "pi_waiters", scope: !1248, file: !1249, line: 1005, baseType: !783, size: 128, offset: 10304)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "pi_top_task", scope: !1248, file: !1249, line: 1007, baseType: !1247, size: 64, offset: 10432)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "pi_blocked_on", scope: !1248, file: !1249, line: 1009, baseType: !1994, size: 64, offset: 10496)
!1994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1995, size: 64)
!1995 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt_mutex_waiter", file: !1249, line: 1009, flags: DIFlagFwdDecl)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "journal_info", scope: !1248, file: !1249, line: 1043, baseType: !211, size: 64, offset: 10560)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "bio_list", scope: !1248, file: !1249, line: 1046, baseType: !1998, size: 64, offset: 10624)
!1998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1999, size: 64)
!1999 = !DICompositeType(tag: DW_TAG_structure_type, name: "bio_list", file: !1249, line: 41, flags: DIFlagFwdDecl)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "plug", scope: !1248, file: !1249, line: 1050, baseType: !2001, size: 64, offset: 10688)
!2001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2002, size: 64)
!2002 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_plug", file: !1249, line: 42, flags: DIFlagFwdDecl)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "reclaim_state", scope: !1248, file: !1249, line: 1054, baseType: !2004, size: 64, offset: 10752)
!2004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2005, size: 64)
!2005 = !DICompositeType(tag: DW_TAG_structure_type, name: "reclaim_state", file: !1249, line: 55, flags: DIFlagFwdDecl)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "backing_dev_info", scope: !1248, file: !1249, line: 1056, baseType: !2007, size: 64, offset: 10816)
!2007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2008, size: 64)
!2008 = !DICompositeType(tag: DW_TAG_structure_type, name: "backing_dev_info", file: !1249, line: 40, flags: DIFlagFwdDecl)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "io_context", scope: !1248, file: !1249, line: 1058, baseType: !2010, size: 64, offset: 10880)
!2010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2011, size: 64)
!2011 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_context", file: !2012, line: 99, size: 704, elements: !2013)
!2012 = !DIFile(filename: "./include/linux/iocontext.h", directory: "/home/lizy2001/genbc/linux")
!2013 = !{!2014, !2015, !2016, !2017, !2018, !2019, !2020, !2039, !2040}
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !2011, file: !2012, line: 100, baseType: !802, size: 64)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "active_ref", scope: !2011, file: !2012, line: 101, baseType: !778, size: 32, offset: 64)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "nr_tasks", scope: !2011, file: !2012, line: 102, baseType: !778, size: 32, offset: 96)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2011, file: !2012, line: 105, baseType: !270, offset: 128)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "ioprio", scope: !2011, file: !2012, line: 107, baseType: !352, size: 16, offset: 128)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "icq_tree", scope: !2011, file: !2012, line: 109, baseType: !770, size: 128, offset: 192)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "icq_hint", scope: !2011, file: !2012, line: 110, baseType: !2021, size: 64, offset: 320)
!2021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2022, size: 64)
!2022 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_cq", file: !2012, line: 73, size: 448, elements: !2023)
!2023 = !{!2024, !2027, !2028, !2033, !2038}
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !2022, file: !2012, line: 74, baseType: !2025, size: 64)
!2025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2026, size: 64)
!2026 = !DICompositeType(tag: DW_TAG_structure_type, name: "request_queue", file: !2012, line: 74, flags: DIFlagFwdDecl)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "ioc", scope: !2022, file: !2012, line: 75, baseType: !2010, size: 64, offset: 64)
!2028 = !DIDerivedType(tag: DW_TAG_member, scope: !2022, file: !2012, line: 83, baseType: !2029, size: 128, offset: 128)
!2029 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2022, file: !2012, line: 83, size: 128, elements: !2030)
!2030 = !{!2031, !2032}
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "q_node", scope: !2029, file: !2012, line: 84, baseType: !257, size: 128)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_icq_cache", scope: !2029, file: !2012, line: 85, baseType: !966, size: 64)
!2033 = !DIDerivedType(tag: DW_TAG_member, scope: !2022, file: !2012, line: 87, baseType: !2034, size: 128, offset: 256)
!2034 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2022, file: !2012, line: 87, size: 128, elements: !2035)
!2035 = !{!2036, !2037}
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "ioc_node", scope: !2034, file: !2012, line: 88, baseType: !670, size: 128)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_head", scope: !2034, file: !2012, line: 89, baseType: !400, size: 128, align: 64)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2022, file: !2012, line: 92, baseType: !7, size: 32, offset: 384)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "icq_list", scope: !2011, file: !2012, line: 111, baseType: !666, size: 64, offset: 384)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "release_work", scope: !2011, file: !2012, line: 113, baseType: !2041, size: 256, offset: 448)
!2041 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "work_struct", file: !153, line: 102, size: 256, elements: !2042)
!2042 = !{!2043, !2044, !2045}
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2041, file: !153, line: 103, baseType: !802, size: 64)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !2041, file: !153, line: 104, baseType: !257, size: 128, offset: 64)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !2041, file: !153, line: 105, baseType: !2046, size: 64, offset: 192)
!2046 = !DIDerivedType(tag: DW_TAG_typedef, name: "work_func_t", file: !153, line: 21, baseType: !2047)
!2047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2048, size: 64)
!2048 = !DISubroutineType(types: !2049)
!2049 = !{null, !2050}
!2050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2041, size: 64)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "capture_control", scope: !1248, file: !1249, line: 1061, baseType: !2052, size: 64, offset: 10944)
!2052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2053, size: 64)
!2053 = !DICompositeType(tag: DW_TAG_structure_type, name: "capture_control", file: !1249, line: 43, flags: DIFlagFwdDecl)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_message", scope: !1248, file: !1249, line: 1064, baseType: !212, size: 64, offset: 11008)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "last_siginfo", scope: !1248, file: !1249, line: 1065, baseType: !2056, size: 64, offset: 11072)
!2056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2057, size: 64)
!2057 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_siginfo_t", file: !1848, line: 14, baseType: !2058)
!2058 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_siginfo", file: !1848, line: 12, size: 384, elements: !2059)
!2059 = !{!2060}
!2060 = !DIDerivedType(tag: DW_TAG_member, scope: !2058, file: !1848, line: 13, baseType: !2061, size: 384)
!2061 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2058, file: !1848, line: 13, size: 384, elements: !2062)
!2062 = !{!2063, !2064, !2065, !2066}
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "si_signo", scope: !2061, file: !1848, line: 13, baseType: !217, size: 32)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "si_errno", scope: !2061, file: !1848, line: 13, baseType: !217, size: 32, offset: 32)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "si_code", scope: !2061, file: !1848, line: 13, baseType: !217, size: 32, offset: 64)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "_sifields", scope: !2061, file: !1848, line: 13, baseType: !2067, size: 256, offset: 128)
!2067 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "__sifields", file: !2068, line: 32, size: 256, elements: !2069)
!2068 = !DIFile(filename: "./include/uapi/asm-generic/siginfo.h", directory: "/home/lizy2001/genbc/linux")
!2069 = !{!2070, !2075, !2088, !2094, !2103, !2123, !2128}
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "_kill", scope: !2067, file: !2068, line: 37, baseType: !2071, size: 64)
!2071 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2067, file: !2068, line: 34, size: 64, elements: !2072)
!2072 = !{!2073, !2074}
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !2071, file: !2068, line: 35, baseType: !1490, size: 32)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !2071, file: !2068, line: 36, baseType: !472, size: 32, offset: 32)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "_timer", scope: !2067, file: !2068, line: 45, baseType: !2076, size: 192)
!2076 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2067, file: !2068, line: 40, size: 192, elements: !2077)
!2077 = !{!2078, !2080, !2081, !2087}
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "_tid", scope: !2076, file: !2068, line: 41, baseType: !2079, size: 32)
!2079 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_timer_t", file: !344, line: 95, baseType: !217)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "_overrun", scope: !2076, file: !2068, line: 42, baseType: !217, size: 32, offset: 32)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !2076, file: !2068, line: 43, baseType: !2082, size: 64, offset: 64)
!2082 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigval_t", file: !2068, line: 11, baseType: !2083)
!2083 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "sigval", file: !2068, line: 8, size: 64, elements: !2084)
!2084 = !{!2085, !2086}
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "sival_int", scope: !2083, file: !2068, line: 9, baseType: !217, size: 32)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "sival_ptr", scope: !2083, file: !2068, line: 10, baseType: !211, size: 64)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "_sys_private", scope: !2076, file: !2068, line: 44, baseType: !217, size: 32, offset: 128)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "_rt", scope: !2067, file: !2068, line: 52, baseType: !2089, size: 128)
!2089 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2067, file: !2068, line: 48, size: 128, elements: !2090)
!2090 = !{!2091, !2092, !2093}
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !2089, file: !2068, line: 49, baseType: !1490, size: 32)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !2089, file: !2068, line: 50, baseType: !472, size: 32, offset: 32)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !2089, file: !2068, line: 51, baseType: !2082, size: 64, offset: 64)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "_sigchld", scope: !2067, file: !2068, line: 61, baseType: !2095, size: 256)
!2095 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2067, file: !2068, line: 55, size: 256, elements: !2096)
!2096 = !{!2097, !2098, !2099, !2100, !2102}
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !2095, file: !2068, line: 56, baseType: !1490, size: 32)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !2095, file: !2068, line: 57, baseType: !472, size: 32, offset: 32)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "_status", scope: !2095, file: !2068, line: 58, baseType: !217, size: 32, offset: 64)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "_utime", scope: !2095, file: !2068, line: 59, baseType: !2101, size: 64, offset: 128)
!2101 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clock_t", file: !344, line: 94, baseType: !345)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "_stime", scope: !2095, file: !2068, line: 60, baseType: !2101, size: 64, offset: 192)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "_sigfault", scope: !2067, file: !2068, line: 95, baseType: !2104, size: 256)
!2104 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2067, file: !2068, line: 64, size: 256, elements: !2105)
!2105 = !{!2106, !2107}
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "_addr", scope: !2104, file: !2068, line: 65, baseType: !211, size: 64)
!2107 = !DIDerivedType(tag: DW_TAG_member, scope: !2104, file: !2068, line: 77, baseType: !2108, size: 192, offset: 64)
!2108 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2104, file: !2068, line: 77, size: 192, elements: !2109)
!2109 = !{!2110, !2111, !2118}
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_lsb", scope: !2108, file: !2068, line: 82, baseType: !1236, size: 16)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_bnd", scope: !2108, file: !2068, line: 88, baseType: !2112, size: 192)
!2112 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2108, file: !2068, line: 84, size: 192, elements: !2113)
!2113 = !{!2114, !2116, !2117}
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_bnd", scope: !2112, file: !2068, line: 85, baseType: !2115, size: 64)
!2115 = !DICompositeType(tag: DW_TAG_array_type, baseType: !220, size: 64, elements: !1360)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "_lower", scope: !2112, file: !2068, line: 86, baseType: !211, size: 64, offset: 64)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "_upper", scope: !2112, file: !2068, line: 87, baseType: !211, size: 64, offset: 128)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_pkey", scope: !2108, file: !2068, line: 93, baseType: !2119, size: 96)
!2119 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2108, file: !2068, line: 90, size: 96, elements: !2120)
!2120 = !{!2121, !2122}
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_pkey", scope: !2119, file: !2068, line: 91, baseType: !2115, size: 64)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "_pkey", scope: !2119, file: !2068, line: 92, baseType: !226, size: 32, offset: 64)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "_sigpoll", scope: !2067, file: !2068, line: 101, baseType: !2124, size: 128)
!2124 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2067, file: !2068, line: 98, size: 128, elements: !2125)
!2125 = !{!2126, !2127}
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "_band", scope: !2124, file: !2068, line: 99, baseType: !154, size: 64)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "_fd", scope: !2124, file: !2068, line: 100, baseType: !217, size: 32, offset: 64)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "_sigsys", scope: !2067, file: !2068, line: 108, baseType: !2129, size: 128)
!2129 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2067, file: !2068, line: 104, size: 128, elements: !2130)
!2130 = !{!2131, !2132, !2133}
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "_call_addr", scope: !2129, file: !2068, line: 105, baseType: !211, size: 64)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "_syscall", scope: !2129, file: !2068, line: 106, baseType: !217, size: 32, offset: 64)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "_arch", scope: !2129, file: !2068, line: 107, baseType: !7, size: 32, offset: 96)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !1248, file: !1249, line: 1067, baseType: !1920, offset: 11136)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "robust_list", scope: !1248, file: !1249, line: 1099, baseType: !2136, size: 64, offset: 11136)
!2136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2137, size: 64)
!2137 = !DICompositeType(tag: DW_TAG_structure_type, name: "robust_list_head", file: !1249, line: 56, flags: DIFlagFwdDecl)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_list", scope: !1248, file: !1249, line: 1103, baseType: !257, size: 128, offset: 11200)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_cache", scope: !1248, file: !1249, line: 1104, baseType: !2140, size: 64, offset: 11328)
!2140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2141, size: 64)
!2141 = !DICompositeType(tag: DW_TAG_structure_type, name: "futex_pi_state", file: !1249, line: 46, flags: DIFlagFwdDecl)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "futex_exit_mutex", scope: !1248, file: !1249, line: 1105, baseType: !1204, size: 192, offset: 11392)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "futex_state", scope: !1248, file: !1249, line: 1106, baseType: !7, size: 32, offset: 11584)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_ctxp", scope: !1248, file: !1249, line: 1109, baseType: !2145, size: 128, offset: 11648)
!2145 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2146, size: 128, elements: !238)
!2146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2147, size: 64)
!2147 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event_context", file: !1249, line: 51, flags: DIFlagFwdDecl)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_mutex", scope: !1248, file: !1249, line: 1110, baseType: !1204, size: 192, offset: 11776)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_list", scope: !1248, file: !1249, line: 1111, baseType: !257, size: 128, offset: 11968)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "rseq", scope: !1248, file: !1249, line: 1173, baseType: !2151, size: 64, offset: 12096)
!2151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2152, size: 64)
!2152 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rseq", file: !2153, line: 62, size: 256, align: 256, elements: !2154)
!2153 = !DIFile(filename: "./include/uapi/linux/rseq.h", directory: "/home/lizy2001/genbc/linux")
!2154 = !{!2155, !2156, !2157, !2162}
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id_start", scope: !2152, file: !2153, line: 75, baseType: !226, size: 32)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id", scope: !2152, file: !2153, line: 90, baseType: !226, size: 32, offset: 32)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_cs", scope: !2152, file: !2153, line: 124, baseType: !2158, size: 64, offset: 64)
!2158 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2152, file: !2153, line: 109, size: 64, elements: !2159)
!2159 = !{!2160, !2161}
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "ptr64", scope: !2158, file: !2153, line: 110, baseType: !453, size: 64)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !2158, file: !2153, line: 112, baseType: !453, size: 64)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2152, file: !2153, line: 144, baseType: !226, size: 32, offset: 128)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_sig", scope: !1248, file: !1249, line: 1174, baseType: !224, size: 32, offset: 12160)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_event_mask", scope: !1248, file: !1249, line: 1179, baseType: !212, size: 64, offset: 12224)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_ubc", scope: !1248, file: !1249, line: 1182, baseType: !2166, size: 128, offset: 12288)
!2166 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tlbflush_unmap_batch", file: !1182, line: 76, size: 128, elements: !2167)
!2167 = !{!2168, !2173, !2174}
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2166, file: !1182, line: 85, baseType: !2169, size: 64)
!2169 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arch_tlbflush_unmap_batch", file: !2170, line: 7, size: 64, elements: !2171)
!2170 = !DIFile(filename: "./arch/x86/include/asm/tlbbatch.h", directory: "/home/lizy2001/genbc/linux")
!2171 = !{!2172}
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "cpumask", scope: !2169, file: !2170, line: 12, baseType: !1397, size: 64)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "flush_required", scope: !2166, file: !1182, line: 88, baseType: !521, size: 8, offset: 64)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "writable", scope: !2166, file: !1182, line: 95, baseType: !521, size: 8, offset: 72)
!2175 = !DIDerivedType(tag: DW_TAG_member, scope: !1248, file: !1249, line: 1184, baseType: !2176, size: 128, offset: 12416)
!2176 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1248, file: !1249, line: 1184, size: 128, elements: !2177)
!2177 = !{!2178, !2179}
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_users", scope: !2176, file: !1249, line: 1185, baseType: !1261, size: 32)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2176, file: !1249, line: 1186, baseType: !400, size: 128, align: 64)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "splice_pipe", scope: !1248, file: !1249, line: 1190, baseType: !2181, size: 64, offset: 12544)
!2181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2182, size: 64)
!2182 = !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_inode_info", file: !1249, line: 53, flags: DIFlagFwdDecl)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "task_frag", scope: !1248, file: !1249, line: 1192, baseType: !2184, size: 128, offset: 12608)
!2184 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page_frag", file: !1182, line: 64, size: 128, elements: !2185)
!2185 = !{!2186, !2187, !2188}
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !2184, file: !1182, line: 65, baseType: !752, size: 64)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2184, file: !1182, line: 67, baseType: !226, size: 32, offset: 64)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2184, file: !1182, line: 68, baseType: !226, size: 32, offset: 96)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied", scope: !1248, file: !1249, line: 1206, baseType: !217, size: 32, offset: 12736)
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied_pause", scope: !1248, file: !1249, line: 1207, baseType: !217, size: 32, offset: 12768)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_paused_when", scope: !1248, file: !1249, line: 1209, baseType: !212, size: 64, offset: 12800)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "timer_slack_ns", scope: !1248, file: !1249, line: 1219, baseType: !452, size: 64, offset: 12864)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "default_timer_slack_ns", scope: !1248, file: !1249, line: 1220, baseType: !452, size: 64, offset: 12928)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "pagefault_disabled", scope: !1248, file: !1249, line: 1317, baseType: !217, size: 32, offset: 12992)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "oom_reaper_list", scope: !1248, file: !1249, line: 1319, baseType: !1247, size: 64, offset: 13056)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm_area", scope: !1248, file: !1249, line: 1322, baseType: !2197, size: 64, offset: 13120)
!2197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2198, size: 64)
!2198 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_struct", file: !2199, line: 56, size: 512, elements: !2200)
!2199 = !DIFile(filename: "./include/linux/vmalloc.h", directory: "/home/lizy2001/genbc/linux")
!2200 = !{!2201, !2202, !2203, !2204, !2205, !2206, !2207, !2209}
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2198, file: !2199, line: 57, baseType: !2197, size: 64)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !2198, file: !2199, line: 58, baseType: !211, size: 64, offset: 64)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2198, file: !2199, line: 59, baseType: !212, size: 64, offset: 128)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2198, file: !2199, line: 60, baseType: !212, size: 64, offset: 192)
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !2198, file: !2199, line: 61, baseType: !851, size: 64, offset: 256)
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "nr_pages", scope: !2198, file: !2199, line: 62, baseType: !7, size: 32, offset: 320)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "phys_addr", scope: !2198, file: !2199, line: 63, baseType: !2208, size: 64, offset: 384)
!2208 = !DIDerivedType(tag: DW_TAG_typedef, name: "phys_addr_t", file: !210, line: 153, baseType: !452)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "caller", scope: !2198, file: !2199, line: 64, baseType: !2210, size: 64, offset: 448)
!2210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2211, size: 64)
!2211 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "stack_refcount", scope: !1248, file: !1249, line: 1326, baseType: !1261, size: 32, offset: 13184)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "mce_vaddr", scope: !1248, file: !1249, line: 1342, baseType: !211, size: 64, offset: 13248)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kflags", scope: !1248, file: !1249, line: 1343, baseType: !453, size: 64, offset: 13312)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "mce_addr", scope: !1248, file: !1249, line: 1344, baseType: !452, size: 64, offset: 13376)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "mce_ripv", scope: !1248, file: !1249, line: 1345, baseType: !453, size: 1, offset: 13440, flags: DIFlagBitField, extraData: i64 13440)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "mce_whole_page", scope: !1248, file: !1249, line: 1346, baseType: !453, size: 1, offset: 13441, flags: DIFlagBitField, extraData: i64 13440)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "__mce_reserved", scope: !1248, file: !1249, line: 1347, baseType: !453, size: 62, offset: 13442, flags: DIFlagBitField, extraData: i64 13440)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kill_me", scope: !1248, file: !1249, line: 1348, baseType: !400, size: 128, align: 64, offset: 13504)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !1248, file: !1249, line: 1358, baseType: !2221, size: 34816, offset: 13824)
!2221 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_struct", file: !2222, line: 485, size: 34816, elements: !2223)
!2222 = !DIFile(filename: "./arch/x86/include/asm/processor.h", directory: "/home/lizy2001/genbc/linux")
!2223 = !{!2224, !2242, !2243, !2244, !2245, !2246, !2247, !2248, !2249, !2253, !2254, !2255, !2256, !2257, !2258, !2261, !2262, !2263}
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "tls_array", scope: !2221, file: !2222, line: 487, baseType: !2225, size: 192)
!2225 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2226, size: 192, elements: !312)
!2226 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "desc_struct", file: !2227, line: 16, size: 64, elements: !2228)
!2227 = !DIFile(filename: "./arch/x86/include/asm/desc_defs.h", directory: "/home/lizy2001/genbc/linux")
!2228 = !{!2229, !2230, !2231, !2232, !2233, !2234, !2235, !2236, !2237, !2238, !2239, !2240, !2241}
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "limit0", scope: !2226, file: !2227, line: 17, baseType: !890, size: 16)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "base0", scope: !2226, file: !2227, line: 18, baseType: !890, size: 16, offset: 16)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "base1", scope: !2226, file: !2227, line: 19, baseType: !890, size: 8, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2226, file: !2227, line: 19, baseType: !890, size: 4, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !2226, file: !2227, line: 19, baseType: !890, size: 1, offset: 44, flags: DIFlagBitField, extraData: i64 32)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "dpl", scope: !2226, file: !2227, line: 19, baseType: !890, size: 2, offset: 45, flags: DIFlagBitField, extraData: i64 32)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !2226, file: !2227, line: 19, baseType: !890, size: 1, offset: 47, flags: DIFlagBitField, extraData: i64 32)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "limit1", scope: !2226, file: !2227, line: 20, baseType: !890, size: 4, offset: 48, flags: DIFlagBitField, extraData: i64 32)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "avl", scope: !2226, file: !2227, line: 20, baseType: !890, size: 1, offset: 52, flags: DIFlagBitField, extraData: i64 32)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !2226, file: !2227, line: 20, baseType: !890, size: 1, offset: 53, flags: DIFlagBitField, extraData: i64 32)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !2226, file: !2227, line: 20, baseType: !890, size: 1, offset: 54, flags: DIFlagBitField, extraData: i64 32)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !2226, file: !2227, line: 20, baseType: !890, size: 1, offset: 55, flags: DIFlagBitField, extraData: i64 32)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "base2", scope: !2226, file: !2227, line: 20, baseType: !890, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 32)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !2221, file: !2222, line: 491, baseType: !212, size: 64, offset: 192)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "es", scope: !2221, file: !2222, line: 495, baseType: !352, size: 16, offset: 256)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !2221, file: !2222, line: 496, baseType: !352, size: 16, offset: 272)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "fsindex", scope: !2221, file: !2222, line: 497, baseType: !352, size: 16, offset: 288)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "gsindex", scope: !2221, file: !2222, line: 498, baseType: !352, size: 16, offset: 304)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "fsbase", scope: !2221, file: !2222, line: 502, baseType: !212, size: 64, offset: 320)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !2221, file: !2222, line: 503, baseType: !212, size: 64, offset: 384)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_bps", scope: !2221, file: !2222, line: 514, baseType: !2250, size: 256, offset: 448)
!2250 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2251, size: 256, elements: !1186)
!2251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2252, size: 64)
!2252 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event", file: !2222, line: 483, flags: DIFlagFwdDecl)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_dr6", scope: !2221, file: !2222, line: 516, baseType: !212, size: 64, offset: 704)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_dr7", scope: !2221, file: !2222, line: 518, baseType: !212, size: 64, offset: 768)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "cr2", scope: !2221, file: !2222, line: 520, baseType: !212, size: 64, offset: 832)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "trap_nr", scope: !2221, file: !2222, line: 521, baseType: !212, size: 64, offset: 896)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "error_code", scope: !2221, file: !2222, line: 522, baseType: !212, size: 64, offset: 960)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "io_bitmap", scope: !2221, file: !2222, line: 528, baseType: !2259, size: 64, offset: 1024)
!2259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2260, size: 64)
!2260 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_bitmap", file: !2222, line: 10, flags: DIFlagFwdDecl)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "iopl_emul", scope: !2221, file: !2222, line: 535, baseType: !212, size: 64, offset: 1088)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "sig_on_uaccess_err", scope: !2221, file: !2222, line: 537, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "fpu", scope: !2221, file: !2222, line: 540, baseType: !2264, size: 33280, offset: 1536)
!2264 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fpu", file: !2265, line: 317, size: 33280, elements: !2266)
!2265 = !DIFile(filename: "./arch/x86/include/asm/fpu/types.h", directory: "/home/lizy2001/genbc/linux")
!2266 = !{!2267, !2268, !2269}
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "last_cpu", scope: !2264, file: !2265, line: 330, baseType: !7, size: 32)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "avx512_timestamp", scope: !2264, file: !2265, line: 337, baseType: !212, size: 64, offset: 64)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2264, file: !2265, line: 348, baseType: !2270, size: 32768, offset: 512)
!2270 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "fpregs_state", file: !2265, line: 304, size: 32768, elements: !2271)
!2271 = !{!2272, !2287, !2326, !2376, !2389}
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "fsave", scope: !2270, file: !2265, line: 305, baseType: !2273, size: 896)
!2273 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fregs_state", file: !2265, line: 12, size: 896, elements: !2274)
!2274 = !{!2275, !2276, !2277, !2278, !2279, !2280, !2281, !2282, !2286}
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !2273, file: !2265, line: 13, baseType: !224, size: 32)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !2273, file: !2265, line: 14, baseType: !224, size: 32, offset: 32)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !2273, file: !2265, line: 15, baseType: !224, size: 32, offset: 64)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !2273, file: !2265, line: 16, baseType: !224, size: 32, offset: 96)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !2273, file: !2265, line: 17, baseType: !224, size: 32, offset: 128)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !2273, file: !2265, line: 18, baseType: !224, size: 32, offset: 160)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !2273, file: !2265, line: 19, baseType: !224, size: 32, offset: 192)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !2273, file: !2265, line: 22, baseType: !2283, size: 640, offset: 224)
!2283 = !DICompositeType(tag: DW_TAG_array_type, baseType: !224, size: 640, elements: !2284)
!2284 = !{!2285}
!2285 = !DISubrange(count: 20)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !2273, file: !2265, line: 25, baseType: !224, size: 32, offset: 864)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "fxsave", scope: !2270, file: !2265, line: 306, baseType: !2288, size: 4096, align: 128)
!2288 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fxregs_state", file: !2265, line: 34, size: 4096, align: 128, elements: !2289)
!2289 = !{!2290, !2291, !2292, !2293, !2294, !2309, !2310, !2311, !2315, !2317, !2321}
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !2288, file: !2265, line: 35, baseType: !890, size: 16)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !2288, file: !2265, line: 36, baseType: !890, size: 16, offset: 16)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !2288, file: !2265, line: 37, baseType: !890, size: 16, offset: 32)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "fop", scope: !2288, file: !2265, line: 38, baseType: !890, size: 16, offset: 48)
!2294 = !DIDerivedType(tag: DW_TAG_member, scope: !2288, file: !2265, line: 39, baseType: !2295, size: 128, offset: 64)
!2295 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2288, file: !2265, line: 39, size: 128, elements: !2296)
!2296 = !{!2297, !2302}
!2297 = !DIDerivedType(tag: DW_TAG_member, scope: !2295, file: !2265, line: 40, baseType: !2298, size: 128)
!2298 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2295, file: !2265, line: 40, size: 128, elements: !2299)
!2299 = !{!2300, !2301}
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "rip", scope: !2298, file: !2265, line: 41, baseType: !452, size: 64)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "rdp", scope: !2298, file: !2265, line: 42, baseType: !452, size: 64, offset: 64)
!2302 = !DIDerivedType(tag: DW_TAG_member, scope: !2295, file: !2265, line: 44, baseType: !2303, size: 128)
!2303 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2295, file: !2265, line: 44, size: 128, elements: !2304)
!2304 = !{!2305, !2306, !2307, !2308}
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !2303, file: !2265, line: 45, baseType: !224, size: 32)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !2303, file: !2265, line: 46, baseType: !224, size: 32, offset: 32)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !2303, file: !2265, line: 47, baseType: !224, size: 32, offset: 64)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !2303, file: !2265, line: 48, baseType: !224, size: 32, offset: 96)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr", scope: !2288, file: !2265, line: 51, baseType: !224, size: 32, offset: 192)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr_mask", scope: !2288, file: !2265, line: 52, baseType: !224, size: 32, offset: 224)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !2288, file: !2265, line: 55, baseType: !2312, size: 1024, offset: 256)
!2312 = !DICompositeType(tag: DW_TAG_array_type, baseType: !224, size: 1024, elements: !2313)
!2313 = !{!2314}
!2314 = !DISubrange(count: 32)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "xmm_space", scope: !2288, file: !2265, line: 58, baseType: !2316, size: 2048, offset: 1280)
!2316 = !DICompositeType(tag: DW_TAG_array_type, baseType: !224, size: 2048, elements: !316)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !2288, file: !2265, line: 60, baseType: !2318, size: 384, offset: 3328)
!2318 = !DICompositeType(tag: DW_TAG_array_type, baseType: !224, size: 384, elements: !2319)
!2319 = !{!2320}
!2320 = !DISubrange(count: 12)
!2321 = !DIDerivedType(tag: DW_TAG_member, scope: !2288, file: !2265, line: 62, baseType: !2322, size: 384, offset: 3712)
!2322 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2288, file: !2265, line: 62, size: 384, elements: !2323)
!2323 = !{!2324, !2325}
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "padding1", scope: !2322, file: !2265, line: 63, baseType: !2318, size: 384)
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "sw_reserved", scope: !2322, file: !2265, line: 64, baseType: !2318, size: 384)
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !2270, file: !2265, line: 307, baseType: !2327, size: 1088)
!2327 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swregs_state", file: !2265, line: 79, size: 1088, elements: !2328)
!2328 = !{!2329, !2330, !2331, !2332, !2333, !2334, !2335, !2336, !2337, !2338, !2339, !2340, !2341, !2342, !2343, !2375}
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !2327, file: !2265, line: 80, baseType: !224, size: 32)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !2327, file: !2265, line: 81, baseType: !224, size: 32, offset: 32)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !2327, file: !2265, line: 82, baseType: !224, size: 32, offset: 64)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !2327, file: !2265, line: 83, baseType: !224, size: 32, offset: 96)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !2327, file: !2265, line: 84, baseType: !224, size: 32, offset: 128)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !2327, file: !2265, line: 85, baseType: !224, size: 32, offset: 160)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !2327, file: !2265, line: 86, baseType: !224, size: 32, offset: 192)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !2327, file: !2265, line: 88, baseType: !2283, size: 640, offset: 224)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "ftop", scope: !2327, file: !2265, line: 89, baseType: !1382, size: 8, offset: 864)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !2327, file: !2265, line: 90, baseType: !1382, size: 8, offset: 872)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "lookahead", scope: !2327, file: !2265, line: 91, baseType: !1382, size: 8, offset: 880)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "no_update", scope: !2327, file: !2265, line: 92, baseType: !1382, size: 8, offset: 888)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "rm", scope: !2327, file: !2265, line: 93, baseType: !1382, size: 8, offset: 896)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "alimit", scope: !2327, file: !2265, line: 94, baseType: !1382, size: 8, offset: 904)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !2327, file: !2265, line: 95, baseType: !2344, size: 64, offset: 960)
!2344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2345, size: 64)
!2345 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "math_emu_info", file: !2346, line: 11, size: 128, elements: !2347)
!2346 = !DIFile(filename: "./arch/x86/include/asm/math_emu.h", directory: "/home/lizy2001/genbc/linux")
!2347 = !{!2348, !2349}
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "___orig_eip", scope: !2345, file: !2346, line: 12, baseType: !154, size: 64)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !2345, file: !2346, line: 13, baseType: !2350, size: 64, offset: 64)
!2350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2351, size: 64)
!2351 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pt_regs", file: !2352, line: 56, size: 1344, elements: !2353)
!2352 = !DIFile(filename: "./arch/x86/include/asm/ptrace.h", directory: "/home/lizy2001/genbc/linux")
!2353 = !{!2354, !2355, !2356, !2357, !2358, !2359, !2360, !2361, !2362, !2363, !2364, !2365, !2366, !2367, !2368, !2369, !2370, !2371, !2372, !2373, !2374}
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2351, file: !2352, line: 61, baseType: !212, size: 64)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2351, file: !2352, line: 62, baseType: !212, size: 64, offset: 64)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "r13", scope: !2351, file: !2352, line: 63, baseType: !212, size: 64, offset: 128)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2351, file: !2352, line: 64, baseType: !212, size: 64, offset: 192)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "bp", scope: !2351, file: !2352, line: 65, baseType: !212, size: 64, offset: 256)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "bx", scope: !2351, file: !2352, line: 66, baseType: !212, size: 64, offset: 320)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "r11", scope: !2351, file: !2352, line: 68, baseType: !212, size: 64, offset: 384)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "r10", scope: !2351, file: !2352, line: 69, baseType: !212, size: 64, offset: 448)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "r9", scope: !2351, file: !2352, line: 70, baseType: !212, size: 64, offset: 512)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "r8", scope: !2351, file: !2352, line: 71, baseType: !212, size: 64, offset: 576)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "ax", scope: !2351, file: !2352, line: 72, baseType: !212, size: 64, offset: 640)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "cx", scope: !2351, file: !2352, line: 73, baseType: !212, size: 64, offset: 704)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "dx", scope: !2351, file: !2352, line: 74, baseType: !212, size: 64, offset: 768)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "si", scope: !2351, file: !2352, line: 75, baseType: !212, size: 64, offset: 832)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "di", scope: !2351, file: !2352, line: 76, baseType: !212, size: 64, offset: 896)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "orig_ax", scope: !2351, file: !2352, line: 81, baseType: !212, size: 64, offset: 960)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2351, file: !2352, line: 83, baseType: !212, size: 64, offset: 1024)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !2351, file: !2352, line: 84, baseType: !212, size: 64, offset: 1088)
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2351, file: !2352, line: 85, baseType: !212, size: 64, offset: 1152)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !2351, file: !2352, line: 86, baseType: !212, size: 64, offset: 1216)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "ss", scope: !2351, file: !2352, line: 87, baseType: !212, size: 64, offset: 1280)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "entry_eip", scope: !2327, file: !2265, line: 96, baseType: !224, size: 32, offset: 1024)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "xsave", scope: !2270, file: !2265, line: 308, baseType: !2377, size: 4608, align: 512)
!2377 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xregs_state", file: !2265, line: 289, size: 4608, align: 512, elements: !2378)
!2378 = !{!2379, !2380, !2387}
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "i387", scope: !2377, file: !2265, line: 290, baseType: !2288, size: 4096, align: 128)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !2377, file: !2265, line: 291, baseType: !2381, size: 512, offset: 4096)
!2381 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xstate_header", file: !2265, line: 268, size: 512, elements: !2382)
!2382 = !{!2383, !2384, !2385}
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "xfeatures", scope: !2381, file: !2265, line: 269, baseType: !452, size: 64)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "xcomp_bv", scope: !2381, file: !2265, line: 270, baseType: !452, size: 64, offset: 64)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !2381, file: !2265, line: 271, baseType: !2386, size: 384, offset: 128)
!2386 = !DICompositeType(tag: DW_TAG_array_type, baseType: !452, size: 384, elements: !1690)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "extended_state_area", scope: !2377, file: !2265, line: 292, baseType: !2388, offset: 4608)
!2388 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1382, elements: !1786)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "__padding", scope: !2270, file: !2265, line: 309, baseType: !2390, size: 32768)
!2390 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1382, size: 32768, elements: !2391)
!2391 = !{!2392}
!2392 = !DISubrange(count: 4096)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1244, file: !754, line: 378, baseType: !2394, size: 64, offset: 64)
!2394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1244, size: 64)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "startup", scope: !1240, file: !754, line: 384, baseType: !1569, size: 192, offset: 192)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_lock", scope: !1009, file: !754, line: 500, baseType: !270, offset: 6656)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_table", scope: !1009, file: !754, line: 501, baseType: !2398, size: 64, offset: 6656)
!2398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2399, size: 64)
!2399 = !DICompositeType(tag: DW_TAG_structure_type, name: "kioctx_table", file: !754, line: 387, flags: DIFlagFwdDecl)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1009, file: !754, line: 516, baseType: !1547, size: 64, offset: 6720)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "exe_file", scope: !1009, file: !754, line: 519, baseType: !387, size: 64, offset: 6784)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_subscriptions", scope: !1009, file: !754, line: 521, baseType: !2403, size: 64, offset: 6848)
!2403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2404, size: 64)
!2404 = !DICompositeType(tag: DW_TAG_structure_type, name: "mmu_notifier_subscriptions", file: !754, line: 521, flags: DIFlagFwdDecl)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_pending", scope: !1009, file: !754, line: 545, baseType: !778, size: 32, offset: 6912)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_batched", scope: !1009, file: !754, line: 548, baseType: !521, size: 8, offset: 6944)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "uprobes_state", scope: !1009, file: !754, line: 550, baseType: !2408, offset: 6952)
!2408 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uprobes_state", file: !2409, line: 142, elements: !284)
!2409 = !DIFile(filename: "./include/linux/uprobes.h", directory: "/home/lizy2001/genbc/linux")
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "async_put_work", scope: !1009, file: !754, line: 554, baseType: !2041, size: 256, offset: 6976)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "pasid", scope: !1009, file: !754, line: 557, baseType: !224, size: 32, offset: 7232)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_bitmap", scope: !1006, file: !754, line: 565, baseType: !2413, offset: 7296)
!2413 = !DICompositeType(tag: DW_TAG_array_type, baseType: !212, elements: !2414)
!2414 = !{!2415}
!2415 = !DISubrange(count: -1)
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "pt_frag_refcount", scope: !1002, file: !754, line: 151, baseType: !778, size: 32)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !995, file: !754, line: 156, baseType: !270, offset: 256)
!2418 = !DIDerivedType(tag: DW_TAG_member, scope: !758, file: !754, line: 159, baseType: !2419, size: 128)
!2419 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !758, file: !754, line: 159, size: 128, elements: !2420)
!2420 = !{!2421, !2485}
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "pgmap", scope: !2419, file: !754, line: 161, baseType: !2422, size: 64)
!2422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2423, size: 64)
!2423 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap", file: !38, line: 110, size: 1152, elements: !2424)
!2424 = !{!2425, !2435, !2456, !2457, !2458, !2459, !2460, !2472, !2473, !2474}
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "altmap", scope: !2423, file: !38, line: 111, baseType: !2426, size: 384)
!2426 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmem_altmap", file: !38, line: 19, size: 384, elements: !2427)
!2427 = !{!2428, !2430, !2431, !2432, !2433, !2434}
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "base_pfn", scope: !2426, file: !38, line: 20, baseType: !2429, size: 64)
!2429 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !212)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "end_pfn", scope: !2426, file: !38, line: 21, baseType: !2429, size: 64, offset: 64)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "reserve", scope: !2426, file: !38, line: 22, baseType: !2429, size: 64, offset: 128)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !2426, file: !38, line: 23, baseType: !212, size: 64, offset: 192)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !2426, file: !38, line: 24, baseType: !212, size: 64, offset: 256)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2426, file: !38, line: 25, baseType: !212, size: 64, offset: 320)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !2423, file: !38, line: 112, baseType: !2436, size: 64, offset: 384)
!2436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2437, size: 64)
!2437 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref", file: !2438, line: 105, size: 128, elements: !2439)
!2438 = !DIFile(filename: "./include/linux/percpu-refcount.h", directory: "/home/lizy2001/genbc/linux")
!2439 = !{!2440, !2441}
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "percpu_count_ptr", scope: !2437, file: !2438, line: 110, baseType: !212, size: 64)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2437, file: !2438, line: 118, baseType: !2442, size: 64, offset: 64)
!2442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2443, size: 64)
!2443 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref_data", file: !2438, line: 95, size: 448, elements: !2444)
!2444 = !{!2445, !2446, !2451, !2452, !2453, !2454, !2455}
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2443, file: !2438, line: 96, baseType: !802, size: 64)
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !2443, file: !2438, line: 97, baseType: !2447, size: 64, offset: 64)
!2447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2448, size: 64)
!2448 = !DIDerivedType(tag: DW_TAG_typedef, name: "percpu_ref_func_t", file: !2438, line: 60, baseType: !2449)
!2449 = !DISubroutineType(types: !2450)
!2450 = !{null, !2436}
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "confirm_switch", scope: !2443, file: !2438, line: 98, baseType: !2447, size: 64, offset: 128)
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "force_atomic", scope: !2443, file: !2438, line: 99, baseType: !521, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "allow_reinit", scope: !2443, file: !2438, line: 100, baseType: !521, size: 1, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2443, file: !2438, line: 101, baseType: !400, size: 128, align: 64, offset: 256)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !2443, file: !2438, line: 102, baseType: !2436, size: 64, offset: 384)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "internal_ref", scope: !2423, file: !38, line: 113, baseType: !2437, size: 128, offset: 448)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !2423, file: !38, line: 114, baseType: !1569, size: 192, offset: 576)
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2423, file: !38, line: 115, baseType: !37, size: 32, offset: 768)
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2423, file: !38, line: 116, baseType: !7, size: 32, offset: 800)
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2423, file: !38, line: 117, baseType: !2461, size: 64, offset: 832)
!2461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2462, size: 64)
!2462 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2463)
!2463 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap_ops", file: !38, line: 67, size: 256, elements: !2464)
!2464 = !{!2465, !2466, !2470, !2471}
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "page_free", scope: !2463, file: !38, line: 73, baseType: !871, size: 64)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "kill", scope: !2463, file: !38, line: 78, baseType: !2467, size: 64, offset: 64)
!2467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2468, size: 64)
!2468 = !DISubroutineType(types: !2469)
!2469 = !{null, !2422}
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !2463, file: !38, line: 83, baseType: !2467, size: 64, offset: 128)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "migrate_to_ram", scope: !2463, file: !38, line: 89, baseType: !1058, size: 64, offset: 192)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2423, file: !38, line: 118, baseType: !211, size: 64, offset: 896)
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "nr_range", scope: !2423, file: !38, line: 119, baseType: !217, size: 32, offset: 960)
!2474 = !DIDerivedType(tag: DW_TAG_member, scope: !2423, file: !38, line: 120, baseType: !2475, size: 128, offset: 1024)
!2475 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2423, file: !38, line: 120, size: 128, elements: !2476)
!2476 = !{!2477, !2483}
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !2475, file: !38, line: 121, baseType: !2478, size: 128)
!2478 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "range", file: !2479, line: 6, size: 128, elements: !2480)
!2479 = !DIFile(filename: "./include/linux/range.h", directory: "/home/lizy2001/genbc/linux")
!2480 = !{!2481, !2482}
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2478, file: !2479, line: 7, baseType: !452, size: 64)
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !2478, file: !2479, line: 8, baseType: !452, size: 64, offset: 64)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "ranges", scope: !2475, file: !38, line: 122, baseType: !2484)
!2484 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2478, elements: !1786)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "zone_device_data", scope: !2419, file: !754, line: 162, baseType: !211, size: 64, offset: 64)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !758, file: !754, line: 176, baseType: !400, size: 128, align: 64)
!2487 = !DIDerivedType(tag: DW_TAG_member, scope: !753, file: !754, line: 179, baseType: !2488, size: 32, offset: 384)
!2488 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !753, file: !754, line: 179, size: 32, elements: !2489)
!2489 = !{!2490, !2491, !2492, !2493}
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "_mapcount", scope: !2488, file: !754, line: 184, baseType: !778, size: 32)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "page_type", scope: !2488, file: !754, line: 192, baseType: !7, size: 32)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !2488, file: !754, line: 194, baseType: !7, size: 32)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !2488, file: !754, line: 195, baseType: !217, size: 32)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "_refcount", scope: !753, file: !754, line: 199, baseType: !778, size: 32, offset: 416)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cached_objects", scope: !688, file: !51, line: 1964, baseType: !2496, size: 64, offset: 1344)
!2496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2497, size: 64)
!2497 = !DISubroutineType(types: !2498)
!2498 = !{!154, !630, !2499}
!2499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2500, size: 64)
!2500 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrink_control", file: !2501, line: 12, size: 256, elements: !2502)
!2501 = !DIFile(filename: "./include/linux/shrinker.h", directory: "/home/lizy2001/genbc/linux")
!2502 = !{!2503, !2504, !2505, !2506, !2507}
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !2500, file: !2501, line: 13, baseType: !209, size: 32)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "nid", scope: !2500, file: !2501, line: 16, baseType: !217, size: 32, offset: 32)
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "nr_to_scan", scope: !2500, file: !2501, line: 23, baseType: !212, size: 64, offset: 64)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "nr_scanned", scope: !2500, file: !2501, line: 30, baseType: !212, size: 64, offset: 128)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "memcg", scope: !2500, file: !2501, line: 33, baseType: !2508, size: 64, offset: 192)
!2508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2509, size: 64)
!2509 = !DICompositeType(tag: DW_TAG_structure_type, name: "mem_cgroup", file: !754, line: 27, flags: DIFlagFwdDecl)
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "free_cached_objects", scope: !688, file: !51, line: 1966, baseType: !2496, size: 64, offset: 1408)
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "dq_op", scope: !631, file: !51, line: 1424, baseType: !2512, size: 64, offset: 448)
!2512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2513, size: 64)
!2513 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2514)
!2514 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot_operations", file: !45, line: 322, size: 704, elements: !2515)
!2515 = !{!2516, !2562, !2566, !2570, !2571, !2572, !2573, !2574, !2579, !2584, !2588}
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "write_dquot", scope: !2514, file: !45, line: 323, baseType: !2517, size: 64)
!2517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2518, size: 64)
!2518 = !DISubroutineType(types: !2519)
!2519 = !{!217, !2520}
!2520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2521, size: 64)
!2521 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot", file: !45, line: 294, size: 1600, elements: !2522)
!2522 = !{!2523, !2524, !2525, !2526, !2527, !2528, !2529, !2530, !2531, !2547, !2548, !2549}
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "dq_hash", scope: !2521, file: !45, line: 295, baseType: !670, size: 128)
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "dq_inuse", scope: !2521, file: !45, line: 296, baseType: !257, size: 128, offset: 128)
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "dq_free", scope: !2521, file: !45, line: 297, baseType: !257, size: 128, offset: 256)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dirty", scope: !2521, file: !45, line: 298, baseType: !257, size: 128, offset: 384)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "dq_lock", scope: !2521, file: !45, line: 299, baseType: !1204, size: 192, offset: 512)
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb_lock", scope: !2521, file: !45, line: 300, baseType: !270, offset: 704)
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "dq_count", scope: !2521, file: !45, line: 301, baseType: !778, size: 32, offset: 704)
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "dq_sb", scope: !2521, file: !45, line: 302, baseType: !630, size: 64, offset: 768)
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "dq_id", scope: !2521, file: !45, line: 303, baseType: !2532, size: 64, offset: 832)
!2532 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kqid", file: !45, line: 68, size: 64, elements: !2533)
!2533 = !{!2534, !2546}
!2534 = !DIDerivedType(tag: DW_TAG_member, scope: !2532, file: !45, line: 69, baseType: !2535, size: 32)
!2535 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2532, file: !45, line: 69, size: 32, elements: !2536)
!2536 = !{!2537, !2538, !2539}
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2535, file: !45, line: 70, baseType: !466, size: 32)
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !2535, file: !45, line: 71, baseType: !474, size: 32)
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "projid", scope: !2535, file: !45, line: 72, baseType: !2540, size: 32)
!2540 = !DIDerivedType(tag: DW_TAG_typedef, name: "kprojid_t", file: !2541, line: 24, baseType: !2542)
!2541 = !DIFile(filename: "./include/linux/projid.h", directory: "/home/lizy2001/genbc/linux")
!2542 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2541, line: 22, size: 32, elements: !2543)
!2543 = !{!2544}
!2544 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2542, file: !2541, line: 23, baseType: !2545, size: 32)
!2545 = !DIDerivedType(tag: DW_TAG_typedef, name: "projid_t", file: !2541, line: 20, baseType: !472)
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2532, file: !45, line: 74, baseType: !44, size: 32, offset: 32)
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "dq_off", scope: !2521, file: !45, line: 304, baseType: !562, size: 64, offset: 896)
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "dq_flags", scope: !2521, file: !45, line: 305, baseType: !212, size: 64, offset: 960)
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb", scope: !2521, file: !45, line: 306, baseType: !2550, size: 576, offset: 1024)
!2550 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqblk", file: !45, line: 205, size: 576, elements: !2551)
!2551 = !{!2552, !2554, !2555, !2556, !2557, !2558, !2559, !2560, !2561}
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bhardlimit", scope: !2550, file: !45, line: 206, baseType: !2553, size: 64)
!2553 = !DIDerivedType(tag: DW_TAG_typedef, name: "qsize_t", file: !45, line: 66, baseType: !564)
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bsoftlimit", scope: !2550, file: !45, line: 207, baseType: !2553, size: 64, offset: 64)
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curspace", scope: !2550, file: !45, line: 208, baseType: !2553, size: 64, offset: 128)
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_rsvspace", scope: !2550, file: !45, line: 209, baseType: !2553, size: 64, offset: 192)
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_ihardlimit", scope: !2550, file: !45, line: 210, baseType: !2553, size: 64, offset: 256)
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_isoftlimit", scope: !2550, file: !45, line: 211, baseType: !2553, size: 64, offset: 320)
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curinodes", scope: !2550, file: !45, line: 212, baseType: !2553, size: 64, offset: 384)
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_btime", scope: !2550, file: !45, line: 213, baseType: !570, size: 64, offset: 448)
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_itime", scope: !2550, file: !45, line: 214, baseType: !570, size: 64, offset: 512)
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_dquot", scope: !2514, file: !45, line: 324, baseType: !2563, size: 64, offset: 64)
!2563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2564, size: 64)
!2564 = !DISubroutineType(types: !2565)
!2565 = !{!2520, !630, !217}
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_dquot", scope: !2514, file: !45, line: 325, baseType: !2567, size: 64, offset: 128)
!2567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2568, size: 64)
!2568 = !DISubroutineType(types: !2569)
!2569 = !{null, !2520}
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "acquire_dquot", scope: !2514, file: !45, line: 326, baseType: !2517, size: 64, offset: 192)
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "release_dquot", scope: !2514, file: !45, line: 327, baseType: !2517, size: 64, offset: 256)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "mark_dirty", scope: !2514, file: !45, line: 328, baseType: !2517, size: 64, offset: 320)
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "write_info", scope: !2514, file: !45, line: 329, baseType: !716, size: 64, offset: 384)
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "get_reserved_space", scope: !2514, file: !45, line: 332, baseType: !2575, size: 64, offset: 448)
!2575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2576, size: 64)
!2576 = !DISubroutineType(types: !2577)
!2577 = !{!2578, !460}
!2578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2553, size: 64)
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "get_projid", scope: !2514, file: !45, line: 333, baseType: !2580, size: 64, offset: 512)
!2580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2581, size: 64)
!2581 = !DISubroutineType(types: !2582)
!2582 = !{!217, !460, !2583}
!2583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2540, size: 64)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "get_inode_usage", scope: !2514, file: !45, line: 335, baseType: !2585, size: 64, offset: 576)
!2585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2586, size: 64)
!2586 = !DISubroutineType(types: !2587)
!2587 = !{!217, !460, !2578}
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !2514, file: !45, line: 337, baseType: !2589, size: 64, offset: 640)
!2589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2590, size: 64)
!2590 = !DISubroutineType(types: !2591)
!2591 = !{!217, !630, !2592}
!2592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2532, size: 64)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "s_qcop", scope: !631, file: !51, line: 1425, baseType: !2594, size: 64, offset: 512)
!2594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2595, size: 64)
!2595 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2596)
!2596 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quotactl_ops", file: !45, line: 428, size: 704, elements: !2597)
!2597 = !{!2598, !2602, !2603, !2607, !2608, !2609, !2624, !2647, !2651, !2652, !2675}
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "quota_on", scope: !2596, file: !45, line: 429, baseType: !2599, size: 64)
!2599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2600, size: 64)
!2600 = !DISubroutineType(types: !2601)
!2601 = !{!217, !630, !217, !217, !580}
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "quota_off", scope: !2596, file: !45, line: 430, baseType: !716, size: 64, offset: 64)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "quota_enable", scope: !2596, file: !45, line: 431, baseType: !2604, size: 64, offset: 128)
!2604 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2605, size: 64)
!2605 = !DISubroutineType(types: !2606)
!2606 = !{!217, !630, !7}
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "quota_disable", scope: !2596, file: !45, line: 432, baseType: !2604, size: 64, offset: 192)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "quota_sync", scope: !2596, file: !45, line: 433, baseType: !716, size: 64, offset: 256)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "set_info", scope: !2596, file: !45, line: 434, baseType: !2610, size: 64, offset: 320)
!2610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2611, size: 64)
!2611 = !DISubroutineType(types: !2612)
!2612 = !{!217, !630, !217, !2613}
!2613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2614, size: 64)
!2614 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_info", file: !45, line: 415, size: 256, elements: !2615)
!2615 = !{!2616, !2617, !2618, !2619, !2620, !2621, !2622, !2623}
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "i_fieldmask", scope: !2614, file: !45, line: 416, baseType: !217, size: 32)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !2614, file: !45, line: 417, baseType: !7, size: 32, offset: 32)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_timelimit", scope: !2614, file: !45, line: 418, baseType: !7, size: 32, offset: 64)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_timelimit", scope: !2614, file: !45, line: 420, baseType: !7, size: 32, offset: 96)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_timelimit", scope: !2614, file: !45, line: 421, baseType: !7, size: 32, offset: 128)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_warnlimit", scope: !2614, file: !45, line: 422, baseType: !7, size: 32, offset: 160)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_warnlimit", scope: !2614, file: !45, line: 423, baseType: !7, size: 32, offset: 192)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_warnlimit", scope: !2614, file: !45, line: 424, baseType: !7, size: 32, offset: 224)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "get_dqblk", scope: !2596, file: !45, line: 435, baseType: !2625, size: 64, offset: 384)
!2625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2626, size: 64)
!2626 = !DISubroutineType(types: !2627)
!2627 = !{!217, !630, !2532, !2628}
!2628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2629, size: 64)
!2629 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_dqblk", file: !45, line: 343, size: 960, elements: !2630)
!2630 = !{!2631, !2632, !2633, !2634, !2635, !2636, !2637, !2638, !2639, !2640, !2641, !2642, !2643, !2644, !2645, !2646}
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "d_fieldmask", scope: !2629, file: !45, line: 344, baseType: !217, size: 32)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_hardlimit", scope: !2629, file: !45, line: 345, baseType: !452, size: 64, offset: 64)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_softlimit", scope: !2629, file: !45, line: 346, baseType: !452, size: 64, offset: 128)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_hardlimit", scope: !2629, file: !45, line: 347, baseType: !452, size: 64, offset: 192)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_softlimit", scope: !2629, file: !45, line: 348, baseType: !452, size: 64, offset: 256)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "d_space", scope: !2629, file: !45, line: 349, baseType: !452, size: 64, offset: 320)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_count", scope: !2629, file: !45, line: 350, baseType: !452, size: 64, offset: 384)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_timer", scope: !2629, file: !45, line: 351, baseType: !808, size: 64, offset: 448)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_timer", scope: !2629, file: !45, line: 353, baseType: !808, size: 64, offset: 512)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_warns", scope: !2629, file: !45, line: 354, baseType: !217, size: 32, offset: 576)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_warns", scope: !2629, file: !45, line: 355, baseType: !217, size: 32, offset: 608)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_hardlimit", scope: !2629, file: !45, line: 356, baseType: !452, size: 64, offset: 640)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_softlimit", scope: !2629, file: !45, line: 357, baseType: !452, size: 64, offset: 704)
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_space", scope: !2629, file: !45, line: 358, baseType: !452, size: 64, offset: 768)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_timer", scope: !2629, file: !45, line: 359, baseType: !808, size: 64, offset: 832)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_warns", scope: !2629, file: !45, line: 360, baseType: !217, size: 32, offset: 896)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "get_nextdqblk", scope: !2596, file: !45, line: 436, baseType: !2648, size: 64, offset: 448)
!2648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2649, size: 64)
!2649 = !DISubroutineType(types: !2650)
!2650 = !{!217, !630, !2592, !2628}
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "set_dqblk", scope: !2596, file: !45, line: 438, baseType: !2625, size: 64, offset: 512)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "get_state", scope: !2596, file: !45, line: 439, baseType: !2653, size: 64, offset: 576)
!2653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2654, size: 64)
!2654 = !DISubroutineType(types: !2655)
!2655 = !{!217, !630, !2656}
!2656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2657, size: 64)
!2657 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_state", file: !45, line: 409, size: 1408, elements: !2658)
!2658 = !{!2659, !2660}
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "s_incoredqs", scope: !2657, file: !45, line: 410, baseType: !7, size: 32)
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "s_state", scope: !2657, file: !45, line: 411, baseType: !2661, size: 1344, offset: 64)
!2661 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2662, size: 1344, elements: !312)
!2662 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_type_state", file: !45, line: 395, size: 448, elements: !2663)
!2663 = !{!2664, !2665, !2666, !2667, !2668, !2669, !2670, !2671, !2672, !2674}
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2662, file: !45, line: 396, baseType: !7, size: 32)
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "spc_timelimit", scope: !2662, file: !45, line: 397, baseType: !7, size: 32, offset: 32)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "ino_timelimit", scope: !2662, file: !45, line: 399, baseType: !7, size: 32, offset: 64)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_timelimit", scope: !2662, file: !45, line: 400, baseType: !7, size: 32, offset: 96)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "spc_warnlimit", scope: !2662, file: !45, line: 401, baseType: !7, size: 32, offset: 128)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "ino_warnlimit", scope: !2662, file: !45, line: 402, baseType: !7, size: 32, offset: 160)
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_warnlimit", scope: !2662, file: !45, line: 403, baseType: !7, size: 32, offset: 192)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !2662, file: !45, line: 404, baseType: !454, size: 64, offset: 256)
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !2662, file: !45, line: 405, baseType: !2673, size: 64, offset: 320)
!2673 = !DIDerivedType(tag: DW_TAG_typedef, name: "blkcnt_t", file: !210, line: 126, baseType: !452)
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "nextents", scope: !2662, file: !45, line: 406, baseType: !2673, size: 64, offset: 384)
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "rm_xquota", scope: !2596, file: !45, line: 440, baseType: !2604, size: 64, offset: 640)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "s_export_op", scope: !631, file: !51, line: 1426, baseType: !2677, size: 64, offset: 576)
!2677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2678, size: 64)
!2678 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2679)
!2679 = !DICompositeType(tag: DW_TAG_structure_type, name: "export_operations", file: !51, line: 49, flags: DIFlagFwdDecl)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "s_flags", scope: !631, file: !51, line: 1427, baseType: !212, size: 64, offset: 640)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "s_iflags", scope: !631, file: !51, line: 1428, baseType: !212, size: 64, offset: 704)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "s_magic", scope: !631, file: !51, line: 1429, baseType: !212, size: 64, offset: 768)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "s_root", scope: !631, file: !51, line: 1430, baseType: !417, size: 64, offset: 832)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount", scope: !631, file: !51, line: 1431, baseType: !798, size: 256, offset: 896)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "s_count", scope: !631, file: !51, line: 1432, baseType: !217, size: 32, offset: 1152)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "s_active", scope: !631, file: !51, line: 1433, baseType: !778, size: 32, offset: 1184)
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "s_xattr", scope: !631, file: !51, line: 1437, baseType: !2688, size: 64, offset: 1216)
!2688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2689, size: 64)
!2689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2690, size: 64)
!2690 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2691)
!2691 = !DICompositeType(tag: DW_TAG_structure_type, name: "xattr_handler", file: !51, line: 1437, flags: DIFlagFwdDecl)
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "s_roots", scope: !631, file: !51, line: 1449, baseType: !2693, size: 64, offset: 1280)
!2693 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_head", file: !433, line: 34, size: 64, elements: !2694)
!2694 = !{!2695}
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !2693, file: !433, line: 35, baseType: !436, size: 64)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "s_mounts", scope: !631, file: !51, line: 1450, baseType: !257, size: 128, offset: 1344)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdev", scope: !631, file: !51, line: 1451, baseType: !2698, size: 64, offset: 1472)
!2698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2699, size: 64)
!2699 = !DICompositeType(tag: DW_TAG_structure_type, name: "block_device", file: !51, line: 699, flags: DIFlagFwdDecl)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdi", scope: !631, file: !51, line: 1452, baseType: !2007, size: 64, offset: 1536)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "s_mtd", scope: !631, file: !51, line: 1453, baseType: !2702, size: 64, offset: 1600)
!2702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2703, size: 64)
!2703 = !DICompositeType(tag: DW_TAG_structure_type, name: "mtd_info", file: !51, line: 1453, flags: DIFlagFwdDecl)
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "s_instances", scope: !631, file: !51, line: 1454, baseType: !670, size: 128, offset: 1664)
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "s_quota_types", scope: !631, file: !51, line: 1455, baseType: !7, size: 32, offset: 1792)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "s_dquot", scope: !631, file: !51, line: 1456, baseType: !2707, size: 2432, offset: 1856)
!2707 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_info", file: !45, line: 518, size: 2432, elements: !2708)
!2708 = !{!2709, !2710, !2711, !2713, !2745}
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2707, file: !45, line: 519, baseType: !7, size: 32)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "dqio_sem", scope: !2707, file: !45, line: 520, baseType: !798, size: 256, offset: 64)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !2707, file: !45, line: 521, baseType: !2712, size: 192, offset: 320)
!2712 = !DICompositeType(tag: DW_TAG_array_type, baseType: !460, size: 192, elements: !312)
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !2707, file: !45, line: 522, baseType: !2714, size: 1728, offset: 512)
!2714 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2715, size: 1728, elements: !312)
!2715 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqinfo", file: !45, line: 222, size: 576, elements: !2716)
!2716 = !{!2717, !2737, !2738, !2739, !2740, !2741, !2742, !2743, !2744}
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_format", scope: !2715, file: !45, line: 223, baseType: !2718, size: 64)
!2718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2719, size: 64)
!2719 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_type", file: !45, line: 443, size: 256, elements: !2720)
!2720 = !{!2721, !2722, !2735, !2736}
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "qf_fmt_id", scope: !2719, file: !45, line: 444, baseType: !217, size: 32)
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "qf_ops", scope: !2719, file: !45, line: 445, baseType: !2723, size: 64, offset: 64)
!2723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2724, size: 64)
!2724 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2725)
!2725 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_ops", file: !45, line: 310, size: 512, elements: !2726)
!2726 = !{!2727, !2728, !2729, !2730, !2731, !2732, !2733, !2734}
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "check_quota_file", scope: !2725, file: !45, line: 311, baseType: !716, size: 64)
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "read_file_info", scope: !2725, file: !45, line: 312, baseType: !716, size: 64, offset: 64)
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "write_file_info", scope: !2725, file: !45, line: 313, baseType: !716, size: 64, offset: 128)
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "free_file_info", scope: !2725, file: !45, line: 314, baseType: !716, size: 64, offset: 192)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "read_dqblk", scope: !2725, file: !45, line: 315, baseType: !2517, size: 64, offset: 256)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "commit_dqblk", scope: !2725, file: !45, line: 316, baseType: !2517, size: 64, offset: 320)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "release_dqblk", scope: !2725, file: !45, line: 317, baseType: !2517, size: 64, offset: 384)
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !2725, file: !45, line: 318, baseType: !2589, size: 64, offset: 448)
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "qf_owner", scope: !2719, file: !45, line: 446, baseType: !206, size: 64, offset: 128)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "qf_next", scope: !2719, file: !45, line: 447, baseType: !2718, size: 64, offset: 192)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_fmt_id", scope: !2715, file: !45, line: 224, baseType: !217, size: 32, offset: 64)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_dirty_list", scope: !2715, file: !45, line: 226, baseType: !257, size: 128, offset: 128)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_flags", scope: !2715, file: !45, line: 227, baseType: !212, size: 64, offset: 256)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_bgrace", scope: !2715, file: !45, line: 228, baseType: !7, size: 32, offset: 320)
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_igrace", scope: !2715, file: !45, line: 229, baseType: !7, size: 32, offset: 352)
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_spc_limit", scope: !2715, file: !45, line: 230, baseType: !2553, size: 64, offset: 384)
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_ino_limit", scope: !2715, file: !45, line: 231, baseType: !2553, size: 64, offset: 448)
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_priv", scope: !2715, file: !45, line: 232, baseType: !211, size: 64, offset: 512)
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2707, file: !45, line: 523, baseType: !2746, size: 192, offset: 2240)
!2746 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2723, size: 192, elements: !312)
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers", scope: !631, file: !51, line: 1458, baseType: !2748, size: 2112, offset: 4288)
!2748 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sb_writers", file: !51, line: 1410, size: 2112, elements: !2749)
!2749 = !{!2750, !2751, !2752}
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !2748, file: !51, line: 1411, baseType: !217, size: 32)
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "wait_unfrozen", scope: !2748, file: !51, line: 1412, baseType: !1511, size: 128, offset: 64)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "rw_sem", scope: !2748, file: !51, line: 1413, baseType: !2753, size: 1920, offset: 192)
!2753 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2754, size: 1920, elements: !312)
!2754 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_rw_semaphore", file: !2755, line: 12, size: 640, elements: !2756)
!2755 = !DIFile(filename: "./include/linux/percpu-rwsem.h", directory: "/home/lizy2001/genbc/linux")
!2756 = !{!2757, !2765, !2767, !2772, !2773}
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "rss", scope: !2754, file: !2755, line: 13, baseType: !2758, size: 320)
!2758 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcu_sync", file: !2759, line: 17, size: 320, elements: !2760)
!2759 = !DIFile(filename: "./include/linux/rcu_sync.h", directory: "/home/lizy2001/genbc/linux")
!2760 = !{!2761, !2762, !2763, !2764}
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "gp_state", scope: !2758, file: !2759, line: 18, baseType: !217, size: 32)
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "gp_count", scope: !2758, file: !2759, line: 19, baseType: !217, size: 32, offset: 32)
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "gp_wait", scope: !2758, file: !2759, line: 20, baseType: !1511, size: 128, offset: 64)
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "cb_head", scope: !2758, file: !2759, line: 22, baseType: !400, size: 128, align: 64, offset: 192)
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "read_count", scope: !2754, file: !2755, line: 14, baseType: !2766, size: 64, offset: 320)
!2766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "writer", scope: !2754, file: !2755, line: 15, baseType: !2768, size: 64, offset: 384)
!2768 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcuwait", file: !2769, line: 16, size: 64, elements: !2770)
!2769 = !DIFile(filename: "./include/linux/rcuwait.h", directory: "/home/lizy2001/genbc/linux")
!2770 = !{!2771}
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !2768, file: !2769, line: 17, baseType: !1247, size: 64)
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "waiters", scope: !2754, file: !2755, line: 16, baseType: !1511, size: 128, offset: 448)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !2754, file: !2755, line: 17, baseType: !778, size: 32, offset: 576)
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "s_fs_info", scope: !631, file: !51, line: 1465, baseType: !211, size: 64, offset: 6400)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_gran", scope: !631, file: !51, line: 1468, baseType: !224, size: 32, offset: 6464)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_min", scope: !631, file: !51, line: 1470, baseType: !570, size: 64, offset: 6528)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_max", scope: !631, file: !51, line: 1471, baseType: !570, size: 64, offset: 6592)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_mask", scope: !631, file: !51, line: 1473, baseType: !226, size: 32, offset: 6656)
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_marks", scope: !631, file: !51, line: 1474, baseType: !2780, size: 64, offset: 6720)
!2780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2781, size: 64)
!2781 = !DICompositeType(tag: DW_TAG_structure_type, name: "fsnotify_mark_connector", file: !51, line: 603, flags: DIFlagFwdDecl)
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "s_id", scope: !631, file: !51, line: 1477, baseType: !2783, size: 256, offset: 6784)
!2783 = !DICompositeType(tag: DW_TAG_array_type, baseType: !220, size: 256, elements: !2313)
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "s_uuid", scope: !631, file: !51, line: 1478, baseType: !2785, size: 128, offset: 7040)
!2785 = !DIDerivedType(tag: DW_TAG_typedef, name: "uuid_t", file: !2786, line: 18, baseType: !2787)
!2786 = !DIFile(filename: "./include/linux/uuid.h", directory: "/home/lizy2001/genbc/linux")
!2787 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2786, line: 16, size: 128, elements: !2788)
!2788 = !{!2789}
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !2787, file: !2786, line: 17, baseType: !2790, size: 128)
!2790 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1383, size: 128, elements: !221)
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "s_max_links", scope: !631, file: !51, line: 1480, baseType: !7, size: 32, offset: 7168)
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "s_mode", scope: !631, file: !51, line: 1481, baseType: !2793, size: 32, offset: 7200)
!2793 = !DIDerivedType(tag: DW_TAG_typedef, name: "fmode_t", file: !210, line: 150, baseType: !7)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_mutex", scope: !631, file: !51, line: 1487, baseType: !1204, size: 192, offset: 7232)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "s_subtype", scope: !631, file: !51, line: 1493, baseType: !254, size: 64, offset: 7424)
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "s_d_op", scope: !631, file: !51, line: 1495, baseType: !2797, size: 64, offset: 7488)
!2797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2798, size: 64)
!2798 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2799)
!2799 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry_operations", file: !415, line: 135, size: 1024, align: 512, elements: !2800)
!2800 = !{!2801, !2805, !2806, !2813, !2819, !2823, !2827, !2831, !2832, !2836, !2840, !2845, !2849}
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "d_revalidate", scope: !2799, file: !415, line: 136, baseType: !2802, size: 64)
!2802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2803, size: 64)
!2803 = !DISubroutineType(types: !2804)
!2804 = !{!217, !417, !7}
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "d_weak_revalidate", scope: !2799, file: !415, line: 137, baseType: !2802, size: 64, offset: 64)
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !2799, file: !415, line: 138, baseType: !2807, size: 64, offset: 128)
!2807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2808, size: 64)
!2808 = !DISubroutineType(types: !2809)
!2809 = !{!217, !2810, !2812}
!2810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2811, size: 64)
!2811 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !418)
!2812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !441, size: 64)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "d_compare", scope: !2799, file: !415, line: 139, baseType: !2814, size: 64, offset: 192)
!2814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2815, size: 64)
!2815 = !DISubroutineType(types: !2816)
!2816 = !{!217, !2810, !7, !254, !2817}
!2817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2818, size: 64)
!2818 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !441)
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "d_delete", scope: !2799, file: !415, line: 141, baseType: !2820, size: 64, offset: 256)
!2820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2821, size: 64)
!2821 = !DISubroutineType(types: !2822)
!2822 = !{!217, !2810}
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "d_init", scope: !2799, file: !415, line: 142, baseType: !2824, size: 64, offset: 320)
!2824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2825, size: 64)
!2825 = !DISubroutineType(types: !2826)
!2826 = !{!217, !417}
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "d_release", scope: !2799, file: !415, line: 143, baseType: !2828, size: 64, offset: 384)
!2828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2829, size: 64)
!2829 = !DISubroutineType(types: !2830)
!2830 = !{null, !417}
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "d_prune", scope: !2799, file: !415, line: 144, baseType: !2828, size: 64, offset: 448)
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "d_iput", scope: !2799, file: !415, line: 145, baseType: !2833, size: 64, offset: 512)
!2833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2834, size: 64)
!2834 = !DISubroutineType(types: !2835)
!2835 = !{null, !417, !460}
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "d_dname", scope: !2799, file: !415, line: 146, baseType: !2837, size: 64, offset: 576)
!2837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2838, size: 64)
!2838 = !DISubroutineType(types: !2839)
!2839 = !{!311, !417, !311, !217}
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "d_automount", scope: !2799, file: !415, line: 147, baseType: !2841, size: 64, offset: 640)
!2841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2842, size: 64)
!2842 = !DISubroutineType(types: !2843)
!2843 = !{!413, !2844}
!2844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !409, size: 64)
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "d_manage", scope: !2799, file: !415, line: 148, baseType: !2846, size: 64, offset: 704)
!2846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2847, size: 64)
!2847 = !DISubroutineType(types: !2848)
!2848 = !{!217, !580, !521}
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "d_real", scope: !2799, file: !415, line: 149, baseType: !2850, size: 64, offset: 768)
!2850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2851, size: 64)
!2851 = !DISubroutineType(types: !2852)
!2852 = !{!417, !417, !2853}
!2853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2854, size: 64)
!2854 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !461)
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "cleancache_poolid", scope: !631, file: !51, line: 1500, baseType: !217, size: 32, offset: 7552)
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "s_shrink", scope: !631, file: !51, line: 1502, baseType: !2857, size: 448, offset: 7616)
!2857 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrinker", file: !2501, line: 60, size: 448, elements: !2858)
!2858 = !{!2859, !2864, !2865, !2866, !2867, !2868, !2869}
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "count_objects", scope: !2857, file: !2501, line: 61, baseType: !2860, size: 64)
!2860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2861, size: 64)
!2861 = !DISubroutineType(types: !2862)
!2862 = !{!212, !2863, !2499}
!2863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2857, size: 64)
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "scan_objects", scope: !2857, file: !2501, line: 63, baseType: !2860, size: 64, offset: 64)
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !2857, file: !2501, line: 66, baseType: !154, size: 64, offset: 128)
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "seeks", scope: !2857, file: !2501, line: 67, baseType: !217, size: 32, offset: 192)
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2857, file: !2501, line: 68, baseType: !7, size: 32, offset: 224)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2857, file: !2501, line: 71, baseType: !257, size: 128, offset: 256)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "nr_deferred", scope: !2857, file: !2501, line: 77, baseType: !2870, size: 64, offset: 384)
!2870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !802, size: 64)
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "s_remove_count", scope: !631, file: !51, line: 1505, baseType: !802, size: 64, offset: 8064)
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_inode_refs", scope: !631, file: !51, line: 1508, baseType: !802, size: 64, offset: 8128)
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "s_readonly_remount", scope: !631, file: !51, line: 1511, baseType: !217, size: 32, offset: 8192)
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "s_wb_err", scope: !631, file: !51, line: 1514, baseType: !940, size: 32, offset: 8224)
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "s_dio_done_wq", scope: !631, file: !51, line: 1517, baseType: !2876, size: 64, offset: 8256)
!2876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2877, size: 64)
!2877 = !DICompositeType(tag: DW_TAG_structure_type, name: "workqueue_struct", file: !153, line: 18, flags: DIFlagFwdDecl)
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "s_pins", scope: !631, file: !51, line: 1518, baseType: !666, size: 64, offset: 8320)
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "s_user_ns", scope: !631, file: !51, line: 1525, baseType: !1547, size: 64, offset: 8384)
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "s_dentry_lru", scope: !631, file: !51, line: 1532, baseType: !2881, size: 64, offset: 8448)
!2881 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru", file: !2882, line: 52, size: 64, elements: !2883)
!2882 = !DIFile(filename: "./include/linux/list_lru.h", directory: "/home/lizy2001/genbc/linux")
!2883 = !{!2884}
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2881, file: !2882, line: 53, baseType: !2885, size: 64)
!2885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2886, size: 64)
!2886 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_node", file: !2882, line: 40, size: 256, elements: !2887)
!2887 = !{!2888, !2889, !2894}
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2886, file: !2882, line: 42, baseType: !270)
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !2886, file: !2882, line: 44, baseType: !2890, size: 192)
!2890 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_one", file: !2882, line: 28, size: 192, elements: !2891)
!2891 = !{!2892, !2893}
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2890, file: !2882, line: 29, baseType: !257, size: 128)
!2893 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !2890, file: !2882, line: 31, baseType: !154, size: 64, offset: 128)
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !2886, file: !2882, line: 49, baseType: !154, size: 64, offset: 192)
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_lru", scope: !631, file: !51, line: 1533, baseType: !2881, size: 64, offset: 8512)
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !631, file: !51, line: 1534, baseType: !400, size: 128, align: 64, offset: 8576)
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_work", scope: !631, file: !51, line: 1535, baseType: !2041, size: 256, offset: 8704)
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "s_sync_lock", scope: !631, file: !51, line: 1537, baseType: !1204, size: 192, offset: 8960)
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "s_stack_depth", scope: !631, file: !51, line: 1542, baseType: !217, size: 32, offset: 9152)
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_list_lock", scope: !631, file: !51, line: 1545, baseType: !270, offset: 9184)
!2901 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes", scope: !631, file: !51, line: 1546, baseType: !257, size: 128, offset: 9216)
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_wblist_lock", scope: !631, file: !51, line: 1548, baseType: !270, offset: 9344)
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes_wb", scope: !631, file: !51, line: 1549, baseType: !257, size: 128, offset: 9344)
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "i_mapping", scope: !461, file: !51, line: 624, baseType: !765, size: 64, offset: 256)
!2905 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino", scope: !461, file: !51, line: 631, baseType: !212, size: 64, offset: 320)
!2906 = !DIDerivedType(tag: DW_TAG_member, scope: !461, file: !51, line: 639, baseType: !2907, size: 32, offset: 384)
!2907 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !461, file: !51, line: 639, size: 32, elements: !2908)
!2908 = !{!2909, !2911}
!2909 = !DIDerivedType(tag: DW_TAG_member, name: "i_nlink", scope: !2907, file: !51, line: 640, baseType: !2910, size: 32)
!2910 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!2911 = !DIDerivedType(tag: DW_TAG_member, name: "__i_nlink", scope: !2907, file: !51, line: 641, baseType: !7, size: 32)
!2912 = !DIDerivedType(tag: DW_TAG_member, name: "i_rdev", scope: !461, file: !51, line: 643, baseType: !544, size: 32, offset: 416)
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "i_size", scope: !461, file: !51, line: 644, baseType: !562, size: 64, offset: 448)
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "i_atime", scope: !461, file: !51, line: 645, baseType: !566, size: 128, offset: 512)
!2915 = !DIDerivedType(tag: DW_TAG_member, name: "i_mtime", scope: !461, file: !51, line: 646, baseType: !566, size: 128, offset: 640)
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "i_ctime", scope: !461, file: !51, line: 647, baseType: !566, size: 128, offset: 768)
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock", scope: !461, file: !51, line: 648, baseType: !270, offset: 896)
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "i_bytes", scope: !461, file: !51, line: 649, baseType: !352, size: 16, offset: 896)
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "i_blkbits", scope: !461, file: !51, line: 650, baseType: !1382, size: 8, offset: 912)
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "i_write_hint", scope: !461, file: !51, line: 651, baseType: !1382, size: 8, offset: 920)
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "i_blocks", scope: !461, file: !51, line: 652, baseType: !2673, size: 64, offset: 960)
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "i_state", scope: !461, file: !51, line: 659, baseType: !212, size: 64, offset: 1024)
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "i_rwsem", scope: !461, file: !51, line: 660, baseType: !798, size: 256, offset: 1088)
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_when", scope: !461, file: !51, line: 662, baseType: !212, size: 64, offset: 1344)
!2925 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_time_when", scope: !461, file: !51, line: 663, baseType: !212, size: 64, offset: 1408)
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "i_hash", scope: !461, file: !51, line: 665, baseType: !670, size: 128, offset: 1472)
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "i_io_list", scope: !461, file: !51, line: 666, baseType: !257, size: 128, offset: 1600)
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "i_lru", scope: !461, file: !51, line: 675, baseType: !257, size: 128, offset: 1728)
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb_list", scope: !461, file: !51, line: 676, baseType: !257, size: 128, offset: 1856)
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "i_wb_list", scope: !461, file: !51, line: 677, baseType: !257, size: 128, offset: 1984)
!2931 = !DIDerivedType(tag: DW_TAG_member, scope: !461, file: !51, line: 678, baseType: !2932, size: 128, offset: 2112)
!2932 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !461, file: !51, line: 678, size: 128, elements: !2933)
!2933 = !{!2934, !2935}
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "i_dentry", scope: !2932, file: !51, line: 679, baseType: !666, size: 64)
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "i_rcu", scope: !2932, file: !51, line: 680, baseType: !400, size: 128, align: 64)
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "i_version", scope: !461, file: !51, line: 682, baseType: !804, size: 64, offset: 2240)
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "i_sequence", scope: !461, file: !51, line: 683, baseType: !804, size: 64, offset: 2304)
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !461, file: !51, line: 684, baseType: !778, size: 32, offset: 2368)
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "i_dio_count", scope: !461, file: !51, line: 685, baseType: !778, size: 32, offset: 2400)
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "i_writecount", scope: !461, file: !51, line: 686, baseType: !778, size: 32, offset: 2432)
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "i_readcount", scope: !461, file: !51, line: 688, baseType: !778, size: 32, offset: 2464)
!2942 = !DIDerivedType(tag: DW_TAG_member, scope: !461, file: !51, line: 690, baseType: !2943, size: 64, offset: 2496)
!2943 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !461, file: !51, line: 690, size: 64, elements: !2944)
!2944 = !{!2945, !3168}
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "i_fop", scope: !2943, file: !51, line: 691, baseType: !2946, size: 64)
!2946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2947, size: 64)
!2947 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2948)
!2948 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_operations", file: !51, line: 1822, size: 2048, elements: !2949)
!2949 = !{!2950, !2951, !2955, !2960, !2964, !2965, !2966, !2970, !2983, !2984, !2992, !2996, !2997, !3001, !3002, !3006, !3011, !3012, !3016, !3020, !3128, !3132, !3133, !3137, !3138, !3142, !3146, !3151, !3155, !3159, !3163, !3167}
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2948, file: !51, line: 1823, baseType: !206, size: 64)
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "llseek", scope: !2948, file: !51, line: 1824, baseType: !2952, size: 64, offset: 64)
!2952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2953, size: 64)
!2953 = !DISubroutineType(types: !2954)
!2954 = !{!562, !387, !562, !217}
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !2948, file: !51, line: 1825, baseType: !2956, size: 64, offset: 128)
!2956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2957, size: 64)
!2957 = !DISubroutineType(types: !2958)
!2958 = !{!342, !387, !311, !357, !2959}
!2959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !562, size: 64)
!2960 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !2948, file: !51, line: 1826, baseType: !2961, size: 64, offset: 192)
!2961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2962, size: 64)
!2962 = !DISubroutineType(types: !2963)
!2963 = !{!342, !387, !254, !357, !2959}
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "read_iter", scope: !2948, file: !51, line: 1827, baseType: !875, size: 64, offset: 256)
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "write_iter", scope: !2948, file: !51, line: 1828, baseType: !875, size: 64, offset: 320)
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "iopoll", scope: !2948, file: !51, line: 1829, baseType: !2967, size: 64, offset: 384)
!2967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2968, size: 64)
!2968 = !DISubroutineType(types: !2969)
!2969 = !{!217, !878, !521}
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "iterate", scope: !2948, file: !51, line: 1830, baseType: !2971, size: 64, offset: 448)
!2971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2972, size: 64)
!2972 = !DISubroutineType(types: !2973)
!2973 = !{!217, !387, !2974}
!2974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2975, size: 64)
!2975 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dir_context", file: !51, line: 1776, size: 128, elements: !2976)
!2976 = !{!2977, !2982}
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "actor", scope: !2975, file: !51, line: 1777, baseType: !2978, size: 64)
!2978 = !DIDerivedType(tag: DW_TAG_typedef, name: "filldir_t", file: !51, line: 1773, baseType: !2979)
!2979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2980, size: 64)
!2980 = !DISubroutineType(types: !2981)
!2981 = !{!217, !2974, !254, !217, !562, !452, !7}
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !2975, file: !51, line: 1778, baseType: !562, size: 64, offset: 64)
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "iterate_shared", scope: !2948, file: !51, line: 1831, baseType: !2971, size: 64, offset: 512)
!2984 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !2948, file: !51, line: 1832, baseType: !2985, size: 64, offset: 576)
!2985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2986, size: 64)
!2986 = !DISubroutineType(types: !2987)
!2987 = !{!2988, !387, !2990}
!2988 = !DIDerivedType(tag: DW_TAG_typedef, name: "__poll_t", file: !2989, line: 52, baseType: !7)
!2989 = !DIFile(filename: "./include/uapi/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!2990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2991, size: 64)
!2991 = !DICompositeType(tag: DW_TAG_structure_type, name: "poll_table_struct", file: !650, line: 27, flags: DIFlagFwdDecl)
!2992 = !DIDerivedType(tag: DW_TAG_member, name: "unlocked_ioctl", scope: !2948, file: !51, line: 1833, baseType: !2993, size: 64, offset: 640)
!2993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2994, size: 64)
!2994 = !DISubroutineType(types: !2995)
!2995 = !{!154, !387, !7, !212}
!2996 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !2948, file: !51, line: 1834, baseType: !2993, size: 64, offset: 704)
!2997 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !2948, file: !51, line: 1835, baseType: !2998, size: 64, offset: 768)
!2998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2999, size: 64)
!2999 = !DISubroutineType(types: !3000)
!3000 = !{!217, !387, !1012}
!3001 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_supported_flags", scope: !2948, file: !51, line: 1836, baseType: !212, size: 64, offset: 832)
!3002 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !2948, file: !51, line: 1837, baseType: !3003, size: 64, offset: 896)
!3003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3004, size: 64)
!3004 = !DISubroutineType(types: !3005)
!3005 = !{!217, !460, !387}
!3006 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !2948, file: !51, line: 1838, baseType: !3007, size: 64, offset: 960)
!3007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3008, size: 64)
!3008 = !DISubroutineType(types: !3009)
!3009 = !{!217, !387, !3010}
!3010 = !DIDerivedType(tag: DW_TAG_typedef, name: "fl_owner_t", file: !51, line: 1007, baseType: !211)
!3011 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !2948, file: !51, line: 1839, baseType: !3003, size: 64, offset: 1024)
!3012 = !DIDerivedType(tag: DW_TAG_member, name: "fsync", scope: !2948, file: !51, line: 1840, baseType: !3013, size: 64, offset: 1088)
!3013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3014, size: 64)
!3014 = !DISubroutineType(types: !3015)
!3015 = !{!217, !387, !562, !562, !217}
!3016 = !DIDerivedType(tag: DW_TAG_member, name: "fasync", scope: !2948, file: !51, line: 1841, baseType: !3017, size: 64, offset: 1152)
!3017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3018, size: 64)
!3018 = !DISubroutineType(types: !3019)
!3019 = !{!217, !217, !387, !217}
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2948, file: !51, line: 1842, baseType: !3021, size: 64, offset: 1216)
!3021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3022, size: 64)
!3022 = !DISubroutineType(types: !3023)
!3023 = !{!217, !387, !217, !3024}
!3024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3025, size: 64)
!3025 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock", file: !51, line: 1062, size: 1664, elements: !3026)
!3026 = !{!3027, !3028, !3029, !3030, !3031, !3032, !3033, !3034, !3035, !3036, !3037, !3038, !3039, !3040, !3041, !3058, !3059, !3060, !3073, !3104}
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocker", scope: !3025, file: !51, line: 1063, baseType: !3024, size: 64)
!3028 = !DIDerivedType(tag: DW_TAG_member, name: "fl_list", scope: !3025, file: !51, line: 1064, baseType: !257, size: 128, offset: 64)
!3029 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link", scope: !3025, file: !51, line: 1065, baseType: !670, size: 128, offset: 192)
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_requests", scope: !3025, file: !51, line: 1066, baseType: !257, size: 128, offset: 320)
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_member", scope: !3025, file: !51, line: 1069, baseType: !257, size: 128, offset: 448)
!3032 = !DIDerivedType(tag: DW_TAG_member, name: "fl_owner", scope: !3025, file: !51, line: 1072, baseType: !3010, size: 64, offset: 576)
!3033 = !DIDerivedType(tag: DW_TAG_member, name: "fl_flags", scope: !3025, file: !51, line: 1073, baseType: !7, size: 32, offset: 640)
!3034 = !DIDerivedType(tag: DW_TAG_member, name: "fl_type", scope: !3025, file: !51, line: 1074, baseType: !458, size: 8, offset: 672)
!3035 = !DIDerivedType(tag: DW_TAG_member, name: "fl_pid", scope: !3025, file: !51, line: 1075, baseType: !7, size: 32, offset: 704)
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link_cpu", scope: !3025, file: !51, line: 1076, baseType: !217, size: 32, offset: 736)
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "fl_wait", scope: !3025, file: !51, line: 1077, baseType: !1511, size: 128, offset: 768)
!3038 = !DIDerivedType(tag: DW_TAG_member, name: "fl_file", scope: !3025, file: !51, line: 1078, baseType: !387, size: 64, offset: 896)
!3039 = !DIDerivedType(tag: DW_TAG_member, name: "fl_start", scope: !3025, file: !51, line: 1079, baseType: !562, size: 64, offset: 960)
!3040 = !DIDerivedType(tag: DW_TAG_member, name: "fl_end", scope: !3025, file: !51, line: 1080, baseType: !562, size: 64, offset: 1024)
!3041 = !DIDerivedType(tag: DW_TAG_member, name: "fl_fasync", scope: !3025, file: !51, line: 1082, baseType: !3042, size: 64, offset: 1088)
!3042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3043, size: 64)
!3043 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fasync_struct", file: !51, line: 1314, size: 320, elements: !3044)
!3044 = !{!3045, !3053, !3054, !3055, !3056, !3057}
!3045 = !DIDerivedType(tag: DW_TAG_member, name: "fa_lock", scope: !3043, file: !51, line: 1315, baseType: !3046)
!3046 = !DIDerivedType(tag: DW_TAG_typedef, name: "rwlock_t", file: !3047, line: 20, baseType: !3048)
!3047 = !DIFile(filename: "./include/linux/rwlock_types.h", directory: "/home/lizy2001/genbc/linux")
!3048 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3047, line: 11, elements: !3049)
!3049 = !{!3050}
!3050 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !3048, file: !3047, line: 12, baseType: !3051)
!3051 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_rwlock_t", file: !282, line: 33, baseType: !3052)
!3052 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !282, line: 31, elements: !284)
!3053 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !3043, file: !51, line: 1316, baseType: !217, size: 32)
!3054 = !DIDerivedType(tag: DW_TAG_member, name: "fa_fd", scope: !3043, file: !51, line: 1317, baseType: !217, size: 32, offset: 32)
!3055 = !DIDerivedType(tag: DW_TAG_member, name: "fa_next", scope: !3043, file: !51, line: 1318, baseType: !3042, size: 64, offset: 64)
!3056 = !DIDerivedType(tag: DW_TAG_member, name: "fa_file", scope: !3043, file: !51, line: 1319, baseType: !387, size: 64, offset: 128)
!3057 = !DIDerivedType(tag: DW_TAG_member, name: "fa_rcu", scope: !3043, file: !51, line: 1320, baseType: !400, size: 128, align: 64, offset: 192)
!3058 = !DIDerivedType(tag: DW_TAG_member, name: "fl_break_time", scope: !3025, file: !51, line: 1084, baseType: !212, size: 64, offset: 1152)
!3059 = !DIDerivedType(tag: DW_TAG_member, name: "fl_downgrade_time", scope: !3025, file: !51, line: 1085, baseType: !212, size: 64, offset: 1216)
!3060 = !DIDerivedType(tag: DW_TAG_member, name: "fl_ops", scope: !3025, file: !51, line: 1087, baseType: !3061, size: 64, offset: 1280)
!3061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3062, size: 64)
!3062 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3063)
!3063 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_operations", file: !51, line: 1011, size: 128, elements: !3064)
!3064 = !{!3065, !3069}
!3065 = !DIDerivedType(tag: DW_TAG_member, name: "fl_copy_lock", scope: !3063, file: !51, line: 1012, baseType: !3066, size: 64)
!3066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3067, size: 64)
!3067 = !DISubroutineType(types: !3068)
!3068 = !{null, !3024, !3024}
!3069 = !DIDerivedType(tag: DW_TAG_member, name: "fl_release_private", scope: !3063, file: !51, line: 1013, baseType: !3070, size: 64, offset: 64)
!3070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3071, size: 64)
!3071 = !DISubroutineType(types: !3072)
!3072 = !{null, !3024}
!3073 = !DIDerivedType(tag: DW_TAG_member, name: "fl_lmops", scope: !3025, file: !51, line: 1088, baseType: !3074, size: 64, offset: 1344)
!3074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3075, size: 64)
!3075 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3076)
!3076 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_manager_operations", file: !51, line: 1016, size: 512, elements: !3077)
!3077 = !{!3078, !3082, !3086, !3087, !3091, !3095, !3099, !3103}
!3078 = !DIDerivedType(tag: DW_TAG_member, name: "lm_get_owner", scope: !3076, file: !51, line: 1017, baseType: !3079, size: 64)
!3079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3080, size: 64)
!3080 = !DISubroutineType(types: !3081)
!3081 = !{!3010, !3010}
!3082 = !DIDerivedType(tag: DW_TAG_member, name: "lm_put_owner", scope: !3076, file: !51, line: 1018, baseType: !3083, size: 64, offset: 64)
!3083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3084, size: 64)
!3084 = !DISubroutineType(types: !3085)
!3085 = !{null, !3010}
!3086 = !DIDerivedType(tag: DW_TAG_member, name: "lm_notify", scope: !3076, file: !51, line: 1019, baseType: !3070, size: 64, offset: 128)
!3087 = !DIDerivedType(tag: DW_TAG_member, name: "lm_grant", scope: !3076, file: !51, line: 1020, baseType: !3088, size: 64, offset: 192)
!3088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3089, size: 64)
!3089 = !DISubroutineType(types: !3090)
!3090 = !{!217, !3024, !217}
!3091 = !DIDerivedType(tag: DW_TAG_member, name: "lm_break", scope: !3076, file: !51, line: 1021, baseType: !3092, size: 64, offset: 256)
!3092 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3093, size: 64)
!3093 = !DISubroutineType(types: !3094)
!3094 = !{!521, !3024}
!3095 = !DIDerivedType(tag: DW_TAG_member, name: "lm_change", scope: !3076, file: !51, line: 1022, baseType: !3096, size: 64, offset: 320)
!3096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3097, size: 64)
!3097 = !DISubroutineType(types: !3098)
!3098 = !{!217, !3024, !217, !260}
!3099 = !DIDerivedType(tag: DW_TAG_member, name: "lm_setup", scope: !3076, file: !51, line: 1023, baseType: !3100, size: 64, offset: 384)
!3100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3101, size: 64)
!3101 = !DISubroutineType(types: !3102)
!3102 = !{null, !3024, !852}
!3103 = !DIDerivedType(tag: DW_TAG_member, name: "lm_breaker_owns_lease", scope: !3076, file: !51, line: 1024, baseType: !3092, size: 64, offset: 448)
!3104 = !DIDerivedType(tag: DW_TAG_member, name: "fl_u", scope: !3025, file: !51, line: 1097, baseType: !3105, size: 256, offset: 1408)
!3105 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3025, file: !51, line: 1089, size: 256, elements: !3106)
!3106 = !{!3107, !3116, !3122}
!3107 = !DIDerivedType(tag: DW_TAG_member, name: "nfs_fl", scope: !3105, file: !51, line: 1090, baseType: !3108, size: 256)
!3108 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs_lock_info", file: !3109, line: 10, size: 256, elements: !3110)
!3109 = !DIFile(filename: "./include/linux/nfs_fs_i.h", directory: "/home/lizy2001/genbc/linux")
!3110 = !{!3111, !3112, !3115}
!3111 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !3108, file: !3109, line: 11, baseType: !224, size: 32)
!3112 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3108, file: !3109, line: 12, baseType: !3113, size: 64, offset: 64)
!3113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3114, size: 64)
!3114 = !DICompositeType(tag: DW_TAG_structure_type, name: "nlm_lockowner", file: !3109, line: 5, flags: DIFlagFwdDecl)
!3115 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3108, file: !3109, line: 13, baseType: !257, size: 128, offset: 128)
!3116 = !DIDerivedType(tag: DW_TAG_member, name: "nfs4_fl", scope: !3105, file: !51, line: 1091, baseType: !3117, size: 64)
!3117 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_info", file: !3109, line: 17, size: 64, elements: !3118)
!3118 = !{!3119}
!3119 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3117, file: !3109, line: 18, baseType: !3120, size: 64)
!3120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3121, size: 64)
!3121 = !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_state", file: !3109, line: 16, flags: DIFlagFwdDecl)
!3122 = !DIDerivedType(tag: DW_TAG_member, name: "afs", scope: !3105, file: !51, line: 1096, baseType: !3123, size: 192)
!3123 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3105, file: !51, line: 1092, size: 192, elements: !3124)
!3124 = !{!3125, !3126, !3127}
!3125 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !3123, file: !51, line: 1093, baseType: !257, size: 128)
!3126 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !3123, file: !51, line: 1094, baseType: !217, size: 32, offset: 128)
!3127 = !DIDerivedType(tag: DW_TAG_member, name: "debug_id", scope: !3123, file: !51, line: 1095, baseType: !7, size: 32, offset: 160)
!3128 = !DIDerivedType(tag: DW_TAG_member, name: "sendpage", scope: !2948, file: !51, line: 1843, baseType: !3129, size: 64, offset: 1280)
!3129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3130, size: 64)
!3130 = !DISubroutineType(types: !3131)
!3131 = !{!342, !387, !752, !217, !357, !2959, !217}
!3132 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !2948, file: !51, line: 1844, baseType: !1132, size: 64, offset: 1344)
!3133 = !DIDerivedType(tag: DW_TAG_member, name: "check_flags", scope: !2948, file: !51, line: 1845, baseType: !3134, size: 64, offset: 1408)
!3134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3135, size: 64)
!3135 = !DISubroutineType(types: !3136)
!3136 = !{!217, !217}
!3137 = !DIDerivedType(tag: DW_TAG_member, name: "flock", scope: !2948, file: !51, line: 1846, baseType: !3021, size: 64, offset: 1472)
!3138 = !DIDerivedType(tag: DW_TAG_member, name: "splice_write", scope: !2948, file: !51, line: 1847, baseType: !3139, size: 64, offset: 1536)
!3139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3140, size: 64)
!3140 = !DISubroutineType(types: !3141)
!3141 = !{!342, !2181, !387, !2959, !357, !7}
!3142 = !DIDerivedType(tag: DW_TAG_member, name: "splice_read", scope: !2948, file: !51, line: 1848, baseType: !3143, size: 64, offset: 1600)
!3143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3144, size: 64)
!3144 = !DISubroutineType(types: !3145)
!3145 = !{!342, !387, !2959, !2181, !357, !7}
!3146 = !DIDerivedType(tag: DW_TAG_member, name: "setlease", scope: !2948, file: !51, line: 1849, baseType: !3147, size: 64, offset: 1664)
!3147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3148, size: 64)
!3148 = !DISubroutineType(types: !3149)
!3149 = !{!217, !387, !154, !3150, !852}
!3150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3024, size: 64)
!3151 = !DIDerivedType(tag: DW_TAG_member, name: "fallocate", scope: !2948, file: !51, line: 1850, baseType: !3152, size: 64, offset: 1728)
!3152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3153, size: 64)
!3153 = !DISubroutineType(types: !3154)
!3154 = !{!154, !387, !217, !562, !562}
!3155 = !DIDerivedType(tag: DW_TAG_member, name: "show_fdinfo", scope: !2948, file: !51, line: 1852, baseType: !3156, size: 64, offset: 1792)
!3156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3157, size: 64)
!3157 = !DISubroutineType(types: !3158)
!3158 = !{null, !742, !387}
!3159 = !DIDerivedType(tag: DW_TAG_member, name: "copy_file_range", scope: !2948, file: !51, line: 1856, baseType: !3160, size: 64, offset: 1856)
!3160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3161, size: 64)
!3161 = !DISubroutineType(types: !3162)
!3162 = !{!342, !387, !562, !387, !562, !357, !7}
!3163 = !DIDerivedType(tag: DW_TAG_member, name: "remap_file_range", scope: !2948, file: !51, line: 1858, baseType: !3164, size: 64, offset: 1920)
!3164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3165, size: 64)
!3165 = !DISubroutineType(types: !3166)
!3166 = !{!562, !387, !562, !387, !562, !562, !7}
!3167 = !DIDerivedType(tag: DW_TAG_member, name: "fadvise", scope: !2948, file: !51, line: 1861, baseType: !3013, size: 64, offset: 1984)
!3168 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !2943, file: !51, line: 692, baseType: !695, size: 64)
!3169 = !DIDerivedType(tag: DW_TAG_member, name: "i_flctx", scope: !461, file: !51, line: 694, baseType: !3170, size: 64, offset: 2560)
!3170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3171, size: 64)
!3171 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_context", file: !51, line: 1100, size: 384, elements: !3172)
!3172 = !{!3173, !3174, !3175, !3176}
!3173 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lock", scope: !3171, file: !51, line: 1101, baseType: !270)
!3174 = !DIDerivedType(tag: DW_TAG_member, name: "flc_flock", scope: !3171, file: !51, line: 1102, baseType: !257, size: 128)
!3175 = !DIDerivedType(tag: DW_TAG_member, name: "flc_posix", scope: !3171, file: !51, line: 1103, baseType: !257, size: 128, offset: 128)
!3176 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lease", scope: !3171, file: !51, line: 1104, baseType: !257, size: 128, offset: 256)
!3177 = !DIDerivedType(tag: DW_TAG_member, name: "i_data", scope: !461, file: !51, line: 695, baseType: !766, size: 1216, align: 64, offset: 2624)
!3178 = !DIDerivedType(tag: DW_TAG_member, name: "i_devices", scope: !461, file: !51, line: 696, baseType: !257, size: 128, offset: 3840)
!3179 = !DIDerivedType(tag: DW_TAG_member, scope: !461, file: !51, line: 697, baseType: !3180, size: 64, offset: 3968)
!3180 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !461, file: !51, line: 697, size: 64, elements: !3181)
!3181 = !{!3182, !3183, !3184, !3187, !3188}
!3182 = !DIDerivedType(tag: DW_TAG_member, name: "i_pipe", scope: !3180, file: !51, line: 698, baseType: !2181, size: 64)
!3183 = !DIDerivedType(tag: DW_TAG_member, name: "i_bdev", scope: !3180, file: !51, line: 699, baseType: !2698, size: 64)
!3184 = !DIDerivedType(tag: DW_TAG_member, name: "i_cdev", scope: !3180, file: !51, line: 700, baseType: !3185, size: 64)
!3185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3186, size: 64)
!3186 = !DICompositeType(tag: DW_TAG_structure_type, name: "cdev", file: !51, line: 700, flags: DIFlagFwdDecl)
!3187 = !DIDerivedType(tag: DW_TAG_member, name: "i_link", scope: !3180, file: !51, line: 701, baseType: !311, size: 64)
!3188 = !DIDerivedType(tag: DW_TAG_member, name: "i_dir_seq", scope: !3180, file: !51, line: 702, baseType: !7, size: 32)
!3189 = !DIDerivedType(tag: DW_TAG_member, name: "i_generation", scope: !461, file: !51, line: 705, baseType: !226, size: 32, offset: 4032)
!3190 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_mask", scope: !461, file: !51, line: 708, baseType: !226, size: 32, offset: 4064)
!3191 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_marks", scope: !461, file: !51, line: 709, baseType: !2780, size: 64, offset: 4096)
!3192 = !DIDerivedType(tag: DW_TAG_member, name: "i_private", scope: !461, file: !51, line: 720, baseType: !211, size: 64, offset: 4160)
!3193 = !DIDerivedType(tag: DW_TAG_member, name: "d_iname", scope: !418, file: !415, line: 98, baseType: !3194, size: 256, offset: 448)
!3194 = !DICompositeType(tag: DW_TAG_array_type, baseType: !458, size: 256, elements: !2313)
!3195 = !DIDerivedType(tag: DW_TAG_member, name: "d_lockref", scope: !418, file: !415, line: 101, baseType: !3196, size: 32, offset: 704)
!3196 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lockref", file: !3197, line: 25, size: 32, elements: !3198)
!3197 = !DIFile(filename: "./include/linux/lockref.h", directory: "/home/lizy2001/genbc/linux")
!3198 = !{!3199}
!3199 = !DIDerivedType(tag: DW_TAG_member, scope: !3196, file: !3197, line: 26, baseType: !3200, size: 32)
!3200 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3196, file: !3197, line: 26, size: 32, elements: !3201)
!3201 = !{!3202}
!3202 = !DIDerivedType(tag: DW_TAG_member, scope: !3200, file: !3197, line: 30, baseType: !3203, size: 32)
!3203 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3200, file: !3197, line: 30, size: 32, elements: !3204)
!3204 = !{!3205, !3206}
!3205 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3203, file: !3197, line: 31, baseType: !270)
!3206 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3203, file: !3197, line: 32, baseType: !217, size: 32)
!3207 = !DIDerivedType(tag: DW_TAG_member, name: "d_op", scope: !418, file: !415, line: 102, baseType: !2797, size: 64, offset: 768)
!3208 = !DIDerivedType(tag: DW_TAG_member, name: "d_sb", scope: !418, file: !415, line: 103, baseType: !630, size: 64, offset: 832)
!3209 = !DIDerivedType(tag: DW_TAG_member, name: "d_time", scope: !418, file: !415, line: 104, baseType: !212, size: 64, offset: 896)
!3210 = !DIDerivedType(tag: DW_TAG_member, name: "d_fsdata", scope: !418, file: !415, line: 105, baseType: !211, size: 64, offset: 960)
!3211 = !DIDerivedType(tag: DW_TAG_member, scope: !418, file: !415, line: 107, baseType: !3212, size: 128, offset: 1024)
!3212 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !418, file: !415, line: 107, size: 128, elements: !3213)
!3213 = !{!3214, !3215}
!3214 = !DIDerivedType(tag: DW_TAG_member, name: "d_lru", scope: !3212, file: !415, line: 108, baseType: !257, size: 128)
!3215 = !DIDerivedType(tag: DW_TAG_member, name: "d_wait", scope: !3212, file: !415, line: 109, baseType: !3216, size: 64)
!3216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1511, size: 64)
!3217 = !DIDerivedType(tag: DW_TAG_member, name: "d_child", scope: !418, file: !415, line: 111, baseType: !257, size: 128, offset: 1152)
!3218 = !DIDerivedType(tag: DW_TAG_member, name: "d_subdirs", scope: !418, file: !415, line: 112, baseType: !257, size: 128, offset: 1280)
!3219 = !DIDerivedType(tag: DW_TAG_member, name: "d_u", scope: !418, file: !415, line: 120, baseType: !3220, size: 128, offset: 1408)
!3220 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !418, file: !415, line: 116, size: 128, elements: !3221)
!3221 = !{!3222, !3223, !3224}
!3222 = !DIDerivedType(tag: DW_TAG_member, name: "d_alias", scope: !3220, file: !415, line: 117, baseType: !670, size: 128)
!3223 = !DIDerivedType(tag: DW_TAG_member, name: "d_in_lookup_hash", scope: !3220, file: !415, line: 118, baseType: !432, size: 128)
!3224 = !DIDerivedType(tag: DW_TAG_member, name: "d_rcu", scope: !3220, file: !415, line: 119, baseType: !400, size: 128, align: 64)
!3225 = !DIDerivedType(tag: DW_TAG_member, name: "f_inode", scope: !388, file: !51, line: 922, baseType: !460, size: 64, offset: 256)
!3226 = !DIDerivedType(tag: DW_TAG_member, name: "f_op", scope: !388, file: !51, line: 923, baseType: !2946, size: 64, offset: 320)
!3227 = !DIDerivedType(tag: DW_TAG_member, name: "f_lock", scope: !388, file: !51, line: 929, baseType: !270, offset: 384)
!3228 = !DIDerivedType(tag: DW_TAG_member, name: "f_write_hint", scope: !388, file: !51, line: 930, baseType: !50, size: 32, offset: 384)
!3229 = !DIDerivedType(tag: DW_TAG_member, name: "f_count", scope: !388, file: !51, line: 931, baseType: !802, size: 64, offset: 448)
!3230 = !DIDerivedType(tag: DW_TAG_member, name: "f_flags", scope: !388, file: !51, line: 932, baseType: !7, size: 32, offset: 512)
!3231 = !DIDerivedType(tag: DW_TAG_member, name: "f_mode", scope: !388, file: !51, line: 933, baseType: !2793, size: 32, offset: 544)
!3232 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos_lock", scope: !388, file: !51, line: 934, baseType: !1204, size: 192, offset: 576)
!3233 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos", scope: !388, file: !51, line: 935, baseType: !562, size: 64, offset: 768)
!3234 = !DIDerivedType(tag: DW_TAG_member, name: "f_owner", scope: !388, file: !51, line: 936, baseType: !3235, size: 192, offset: 832)
!3235 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fown_struct", file: !51, line: 885, size: 192, elements: !3236)
!3236 = !{!3237, !3238, !3239, !3240, !3241, !3242}
!3237 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3235, file: !51, line: 886, baseType: !3046)
!3238 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !3235, file: !51, line: 887, baseType: !1501, size: 64)
!3239 = !DIDerivedType(tag: DW_TAG_member, name: "pid_type", scope: !3235, file: !51, line: 888, baseType: !59, size: 32, offset: 64)
!3240 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !3235, file: !51, line: 889, baseType: !466, size: 32, offset: 96)
!3241 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !3235, file: !51, line: 889, baseType: !466, size: 32, offset: 128)
!3242 = !DIDerivedType(tag: DW_TAG_member, name: "signum", scope: !3235, file: !51, line: 890, baseType: !217, size: 32, offset: 160)
!3243 = !DIDerivedType(tag: DW_TAG_member, name: "f_cred", scope: !388, file: !51, line: 937, baseType: !1614, size: 64, offset: 1024)
!3244 = !DIDerivedType(tag: DW_TAG_member, name: "f_ra", scope: !388, file: !51, line: 938, baseType: !3245, size: 256, offset: 1088)
!3245 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_ra_state", file: !51, line: 896, size: 256, elements: !3246)
!3246 = !{!3247, !3248, !3249, !3250, !3251, !3252}
!3247 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3245, file: !51, line: 897, baseType: !212, size: 64)
!3248 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3245, file: !51, line: 898, baseType: !7, size: 32, offset: 64)
!3249 = !DIDerivedType(tag: DW_TAG_member, name: "async_size", scope: !3245, file: !51, line: 899, baseType: !7, size: 32, offset: 96)
!3250 = !DIDerivedType(tag: DW_TAG_member, name: "ra_pages", scope: !3245, file: !51, line: 902, baseType: !7, size: 32, offset: 128)
!3251 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_miss", scope: !3245, file: !51, line: 903, baseType: !7, size: 32, offset: 160)
!3252 = !DIDerivedType(tag: DW_TAG_member, name: "prev_pos", scope: !3245, file: !51, line: 904, baseType: !562, size: 64, offset: 192)
!3253 = !DIDerivedType(tag: DW_TAG_member, name: "f_version", scope: !388, file: !51, line: 940, baseType: !452, size: 64, offset: 1344)
!3254 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !388, file: !51, line: 945, baseType: !211, size: 64, offset: 1408)
!3255 = !DIDerivedType(tag: DW_TAG_member, name: "f_ep_links", scope: !388, file: !51, line: 949, baseType: !257, size: 128, offset: 1472)
!3256 = !DIDerivedType(tag: DW_TAG_member, name: "f_tfile_llink", scope: !388, file: !51, line: 950, baseType: !257, size: 128, offset: 1600)
!3257 = !DIDerivedType(tag: DW_TAG_member, name: "f_mapping", scope: !388, file: !51, line: 952, baseType: !765, size: 64, offset: 1728)
!3258 = !DIDerivedType(tag: DW_TAG_member, name: "f_wb_err", scope: !388, file: !51, line: 953, baseType: !940, size: 32, offset: 1792)
!3259 = !DIDerivedType(tag: DW_TAG_member, name: "f_sb_err", scope: !388, file: !51, line: 954, baseType: !940, size: 32, offset: 1824)
!3260 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !378, file: !336, line: 174, baseType: !384, size: 64, offset: 320)
!3261 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !378, file: !336, line: 176, baseType: !3262, size: 64, offset: 384)
!3262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3263, size: 64)
!3263 = !DISubroutineType(types: !3264)
!3264 = !{!217, !387, !263, !377, !1012}
!3265 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", scope: !366, file: !336, line: 90, baseType: !361, size: 64, offset: 192)
!3266 = !DIDerivedType(tag: DW_TAG_member, name: "bin_attrs", scope: !366, file: !336, line: 91, baseType: !3267, size: 64, offset: 256)
!3267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !377, size: 64)
!3268 = !DIDerivedType(tag: DW_TAG_member, name: "child_ns_type", scope: !326, file: !251, line: 143, baseType: !3269, size: 64, offset: 256)
!3269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3270, size: 64)
!3270 = !DISubroutineType(types: !3271)
!3271 = !{!3272, !263}
!3272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3273, size: 64)
!3273 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3274)
!3274 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_ns_type_operations", file: !68, line: 39, size: 384, elements: !3275)
!3275 = !{!3276, !3277, !3281, !3285, !3291, !3295}
!3276 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3274, file: !68, line: 40, baseType: !67, size: 32)
!3277 = !DIDerivedType(tag: DW_TAG_member, name: "current_may_mount", scope: !3274, file: !68, line: 41, baseType: !3278, size: 64, offset: 64)
!3278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3279, size: 64)
!3279 = !DISubroutineType(types: !3280)
!3280 = !{!521}
!3281 = !DIDerivedType(tag: DW_TAG_member, name: "grab_current_ns", scope: !3274, file: !68, line: 42, baseType: !3282, size: 64, offset: 128)
!3282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3283, size: 64)
!3283 = !DISubroutineType(types: !3284)
!3284 = !{!211}
!3285 = !DIDerivedType(tag: DW_TAG_member, name: "netlink_ns", scope: !3274, file: !68, line: 43, baseType: !3286, size: 64, offset: 192)
!3286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3287, size: 64)
!3287 = !DISubroutineType(types: !3288)
!3288 = !{!2210, !3289}
!3289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3290, size: 64)
!3290 = !DICompositeType(tag: DW_TAG_structure_type, name: "sock", file: !68, line: 19, flags: DIFlagFwdDecl)
!3291 = !DIDerivedType(tag: DW_TAG_member, name: "initial_ns", scope: !3274, file: !68, line: 44, baseType: !3292, size: 64, offset: 256)
!3292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3293, size: 64)
!3293 = !DISubroutineType(types: !3294)
!3294 = !{!2210}
!3295 = !DIDerivedType(tag: DW_TAG_member, name: "drop_ns", scope: !3274, file: !68, line: 45, baseType: !499, size: 64, offset: 320)
!3296 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !326, file: !251, line: 144, baseType: !3297, size: 64, offset: 320)
!3297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3298, size: 64)
!3298 = !DISubroutineType(types: !3299)
!3299 = !{!2210, !263}
!3300 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !326, file: !251, line: 145, baseType: !3301, size: 64, offset: 384)
!3301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3302, size: 64)
!3302 = !DISubroutineType(types: !3303)
!3303 = !{null, !263, !3304, !3305}
!3304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !466, size: 64)
!3305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !474, size: 64)
!3306 = !DIDerivedType(tag: DW_TAG_member, name: "sd", scope: !250, file: !251, line: 70, baseType: !3307, size: 64, offset: 384)
!3307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3308, size: 64)
!3308 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_node", file: !650, line: 123, size: 1024, elements: !3309)
!3309 = !{!3310, !3311, !3312, !3313, !3314, !3315, !3316, !3317, !3432, !3433, !3434, !3435, !3436}
!3310 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3308, file: !650, line: 124, baseType: !778, size: 32)
!3311 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !3308, file: !650, line: 125, baseType: !778, size: 32, offset: 32)
!3312 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3308, file: !650, line: 135, baseType: !3307, size: 64, offset: 64)
!3313 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3308, file: !650, line: 136, baseType: !254, size: 64, offset: 128)
!3314 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !3308, file: !650, line: 138, baseType: !791, size: 192, align: 64, offset: 192)
!3315 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !3308, file: !650, line: 140, baseType: !2210, size: 64, offset: 384)
!3316 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !3308, file: !650, line: 141, baseType: !7, size: 32, offset: 448)
!3317 = !DIDerivedType(tag: DW_TAG_member, scope: !3308, file: !650, line: 142, baseType: !3318, size: 256, offset: 512)
!3318 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3308, file: !650, line: 142, size: 256, elements: !3319)
!3319 = !{!3320, !3360, !3364}
!3320 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !3318, file: !650, line: 143, baseType: !3321, size: 192)
!3321 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_dir", file: !650, line: 91, size: 192, elements: !3322)
!3322 = !{!3323, !3324, !3325}
!3323 = !DIDerivedType(tag: DW_TAG_member, name: "subdirs", scope: !3321, file: !650, line: 92, baseType: !212, size: 64)
!3324 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3321, file: !650, line: 94, baseType: !787, size: 64, offset: 64)
!3325 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !3321, file: !650, line: 100, baseType: !3326, size: 64, offset: 128)
!3326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3327, size: 64)
!3327 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_root", file: !650, line: 180, size: 704, elements: !3328)
!3328 = !{!3329, !3330, !3331, !3332, !3333, !3334, !3358, !3359}
!3329 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !3327, file: !650, line: 182, baseType: !3307, size: 64)
!3330 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3327, file: !650, line: 183, baseType: !7, size: 32, offset: 64)
!3331 = !DIDerivedType(tag: DW_TAG_member, name: "ino_idr", scope: !3327, file: !650, line: 186, baseType: !1534, size: 192, offset: 128)
!3332 = !DIDerivedType(tag: DW_TAG_member, name: "last_id_lowbits", scope: !3327, file: !650, line: 187, baseType: !224, size: 32, offset: 320)
!3333 = !DIDerivedType(tag: DW_TAG_member, name: "id_highbits", scope: !3327, file: !650, line: 188, baseType: !224, size: 32, offset: 352)
!3334 = !DIDerivedType(tag: DW_TAG_member, name: "syscall_ops", scope: !3327, file: !650, line: 189, baseType: !3335, size: 64, offset: 384)
!3335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3336, size: 64)
!3336 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_syscall_ops", file: !650, line: 168, size: 320, elements: !3337)
!3337 = !{!3338, !3342, !3346, !3350, !3354}
!3338 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !3336, file: !650, line: 169, baseType: !3339, size: 64)
!3339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3340, size: 64)
!3340 = !DISubroutineType(types: !3341)
!3341 = !{!217, !742, !3326}
!3342 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !3336, file: !650, line: 171, baseType: !3343, size: 64, offset: 64)
!3343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3344, size: 64)
!3344 = !DISubroutineType(types: !3345)
!3345 = !{!217, !3307, !254, !351}
!3346 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !3336, file: !650, line: 173, baseType: !3347, size: 64, offset: 128)
!3347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3348, size: 64)
!3348 = !DISubroutineType(types: !3349)
!3349 = !{!217, !3307}
!3350 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !3336, file: !650, line: 174, baseType: !3351, size: 64, offset: 192)
!3351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3352, size: 64)
!3352 = !DISubroutineType(types: !3353)
!3353 = !{!217, !3307, !3307, !254}
!3354 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !3336, file: !650, line: 176, baseType: !3355, size: 64, offset: 256)
!3355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3356, size: 64)
!3356 = !DISubroutineType(types: !3357)
!3357 = !{!217, !742, !3307, !3326}
!3358 = !DIDerivedType(tag: DW_TAG_member, name: "supers", scope: !3327, file: !650, line: 192, baseType: !257, size: 128, offset: 448)
!3359 = !DIDerivedType(tag: DW_TAG_member, name: "deactivate_waitq", scope: !3327, file: !650, line: 194, baseType: !1511, size: 128, offset: 576)
!3360 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !3318, file: !650, line: 144, baseType: !3361, size: 64)
!3361 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_symlink", file: !650, line: 103, size: 64, elements: !3362)
!3362 = !{!3363}
!3363 = !DIDerivedType(tag: DW_TAG_member, name: "target_kn", scope: !3361, file: !650, line: 104, baseType: !3307, size: 64)
!3364 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !3318, file: !650, line: 145, baseType: !3365, size: 256)
!3365 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_attr", file: !650, line: 107, size: 256, elements: !3366)
!3366 = !{!3367, !3427, !3430, !3431}
!3367 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3365, file: !650, line: 108, baseType: !3368, size: 64)
!3368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3369, size: 64)
!3369 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3370)
!3370 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_ops", file: !650, line: 217, size: 768, elements: !3371)
!3371 = !{!3372, !3392, !3396, !3400, !3404, !3408, !3412, !3416, !3417, !3418, !3419, !3423}
!3372 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !3370, file: !650, line: 222, baseType: !3373, size: 64)
!3373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3374, size: 64)
!3374 = !DISubroutineType(types: !3375)
!3375 = !{!217, !3376}
!3376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3377, size: 64)
!3377 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_file", file: !650, line: 197, size: 1088, elements: !3378)
!3378 = !{!3379, !3380, !3381, !3382, !3383, !3384, !3385, !3386, !3387, !3388, !3389, !3390, !3391}
!3379 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !3377, file: !650, line: 199, baseType: !3307, size: 64)
!3380 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !3377, file: !650, line: 200, baseType: !387, size: 64, offset: 64)
!3381 = !DIDerivedType(tag: DW_TAG_member, name: "seq_file", scope: !3377, file: !650, line: 201, baseType: !742, size: 64, offset: 128)
!3382 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !3377, file: !650, line: 202, baseType: !211, size: 64, offset: 192)
!3383 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !3377, file: !650, line: 205, baseType: !1204, size: 192, offset: 256)
!3384 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_mutex", scope: !3377, file: !650, line: 206, baseType: !1204, size: 192, offset: 448)
!3385 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !3377, file: !650, line: 207, baseType: !217, size: 32, offset: 640)
!3386 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3377, file: !650, line: 208, baseType: !257, size: 128, offset: 704)
!3387 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_buf", scope: !3377, file: !650, line: 209, baseType: !311, size: 64, offset: 832)
!3388 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !3377, file: !650, line: 211, baseType: !357, size: 64, offset: 896)
!3389 = !DIDerivedType(tag: DW_TAG_member, name: "mmapped", scope: !3377, file: !650, line: 212, baseType: !521, size: 1, offset: 960, flags: DIFlagBitField, extraData: i64 960)
!3390 = !DIDerivedType(tag: DW_TAG_member, name: "released", scope: !3377, file: !650, line: 213, baseType: !521, size: 1, offset: 961, flags: DIFlagBitField, extraData: i64 960)
!3391 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !3377, file: !650, line: 214, baseType: !1040, size: 64, offset: 1024)
!3392 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3370, file: !650, line: 223, baseType: !3393, size: 64, offset: 64)
!3393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3394, size: 64)
!3394 = !DISubroutineType(types: !3395)
!3395 = !{null, !3376}
!3396 = !DIDerivedType(tag: DW_TAG_member, name: "seq_show", scope: !3370, file: !650, line: 236, baseType: !3397, size: 64, offset: 128)
!3397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3398, size: 64)
!3398 = !DISubroutineType(types: !3399)
!3399 = !{!217, !742, !211}
!3400 = !DIDerivedType(tag: DW_TAG_member, name: "seq_start", scope: !3370, file: !650, line: 238, baseType: !3401, size: 64, offset: 192)
!3401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3402, size: 64)
!3402 = !DISubroutineType(types: !3403)
!3403 = !{!211, !742, !2959}
!3404 = !DIDerivedType(tag: DW_TAG_member, name: "seq_next", scope: !3370, file: !650, line: 239, baseType: !3405, size: 64, offset: 256)
!3405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3406, size: 64)
!3406 = !DISubroutineType(types: !3407)
!3407 = !{!211, !742, !211, !2959}
!3408 = !DIDerivedType(tag: DW_TAG_member, name: "seq_stop", scope: !3370, file: !650, line: 240, baseType: !3409, size: 64, offset: 320)
!3409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3410, size: 64)
!3410 = !DISubroutineType(types: !3411)
!3411 = !{null, !742, !211}
!3412 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !3370, file: !650, line: 242, baseType: !3413, size: 64, offset: 384)
!3413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3414, size: 64)
!3414 = !DISubroutineType(types: !3415)
!3415 = !{!342, !3376, !311, !357, !562}
!3416 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !3370, file: !650, line: 252, baseType: !357, size: 64, offset: 448)
!3417 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc", scope: !3370, file: !650, line: 259, baseType: !521, size: 8, offset: 512)
!3418 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !3370, file: !650, line: 260, baseType: !3413, size: 64, offset: 576)
!3419 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !3370, file: !650, line: 263, baseType: !3420, size: 64, offset: 640)
!3420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3421, size: 64)
!3421 = !DISubroutineType(types: !3422)
!3422 = !{!2988, !3376, !2990}
!3423 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !3370, file: !650, line: 266, baseType: !3424, size: 64, offset: 704)
!3424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3425, size: 64)
!3425 = !DISubroutineType(types: !3426)
!3426 = !{!217, !3376, !1012}
!3427 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !3365, file: !650, line: 109, baseType: !3428, size: 64, offset: 64)
!3428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3429, size: 64)
!3429 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_node", file: !650, line: 31, flags: DIFlagFwdDecl)
!3430 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3365, file: !650, line: 110, baseType: !562, size: 64, offset: 128)
!3431 = !DIDerivedType(tag: DW_TAG_member, name: "notify_next", scope: !3365, file: !650, line: 111, baseType: !3307, size: 64, offset: 192)
!3432 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !3308, file: !650, line: 148, baseType: !211, size: 64, offset: 768)
!3433 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3308, file: !650, line: 154, baseType: !452, size: 64, offset: 832)
!3434 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3308, file: !650, line: 156, baseType: !352, size: 16, offset: 896)
!3435 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3308, file: !650, line: 157, baseType: !351, size: 16, offset: 912)
!3436 = !DIDerivedType(tag: DW_TAG_member, name: "iattr", scope: !3308, file: !650, line: 158, baseType: !3437, size: 64, offset: 960)
!3437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3438, size: 64)
!3438 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_iattrs", file: !650, line: 32, flags: DIFlagFwdDecl)
!3439 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !250, file: !251, line: 71, baseType: !1529, size: 32, offset: 448)
!3440 = !DIDerivedType(tag: DW_TAG_member, name: "state_initialized", scope: !250, file: !251, line: 75, baseType: !7, size: 1, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!3441 = !DIDerivedType(tag: DW_TAG_member, name: "state_in_sysfs", scope: !250, file: !251, line: 76, baseType: !7, size: 1, offset: 481, flags: DIFlagBitField, extraData: i64 480)
!3442 = !DIDerivedType(tag: DW_TAG_member, name: "state_add_uevent_sent", scope: !250, file: !251, line: 77, baseType: !7, size: 1, offset: 482, flags: DIFlagBitField, extraData: i64 480)
!3443 = !DIDerivedType(tag: DW_TAG_member, name: "state_remove_uevent_sent", scope: !250, file: !251, line: 78, baseType: !7, size: 1, offset: 483, flags: DIFlagBitField, extraData: i64 480)
!3444 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_suppress", scope: !250, file: !251, line: 79, baseType: !7, size: 1, offset: 484, flags: DIFlagBitField, extraData: i64 480)
!3445 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !247, file: !80, line: 463, baseType: !246, size: 64, offset: 512)
!3446 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !247, file: !80, line: 465, baseType: !3447, size: 64, offset: 576)
!3447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3448, size: 64)
!3448 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_private", file: !80, line: 36, flags: DIFlagFwdDecl)
!3449 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !247, file: !80, line: 467, baseType: !254, size: 64, offset: 640)
!3450 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !247, file: !80, line: 468, baseType: !3451, size: 64, offset: 704)
!3451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3452, size: 64)
!3452 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3453)
!3453 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_type", file: !80, line: 87, size: 384, elements: !3454)
!3454 = !{!3455, !3456, !3457, !3461, !3466, !3470}
!3455 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3453, file: !80, line: 88, baseType: !254, size: 64)
!3456 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !3453, file: !80, line: 89, baseType: !363, size: 64, offset: 64)
!3457 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !3453, file: !80, line: 90, baseType: !3458, size: 64, offset: 128)
!3458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3459, size: 64)
!3459 = !DISubroutineType(types: !3460)
!3460 = !{!217, !246, !306}
!3461 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !3453, file: !80, line: 91, baseType: !3462, size: 64, offset: 192)
!3462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3463, size: 64)
!3463 = !DISubroutineType(types: !3464)
!3464 = !{!311, !246, !3465, !3304, !3305}
!3465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !351, size: 64)
!3466 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3453, file: !80, line: 93, baseType: !3467, size: 64, offset: 256)
!3467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3468, size: 64)
!3468 = !DISubroutineType(types: !3469)
!3469 = !{null, !246}
!3470 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3453, file: !80, line: 95, baseType: !3471, size: 64, offset: 320)
!3471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3472, size: 64)
!3472 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3473)
!3473 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_ops", file: !87, line: 278, size: 1472, elements: !3474)
!3474 = !{!3475, !3479, !3480, !3481, !3482, !3483, !3484, !3485, !3486, !3487, !3488, !3489, !3490, !3491, !3492, !3493, !3494, !3495, !3496, !3497, !3498, !3499, !3500}
!3475 = !DIDerivedType(tag: DW_TAG_member, name: "prepare", scope: !3473, file: !87, line: 279, baseType: !3476, size: 64)
!3476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3477, size: 64)
!3477 = !DISubroutineType(types: !3478)
!3478 = !{!217, !246}
!3479 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !3473, file: !87, line: 280, baseType: !3467, size: 64, offset: 64)
!3480 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3473, file: !87, line: 281, baseType: !3476, size: 64, offset: 128)
!3481 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3473, file: !87, line: 282, baseType: !3476, size: 64, offset: 192)
!3482 = !DIDerivedType(tag: DW_TAG_member, name: "freeze", scope: !3473, file: !87, line: 283, baseType: !3476, size: 64, offset: 256)
!3483 = !DIDerivedType(tag: DW_TAG_member, name: "thaw", scope: !3473, file: !87, line: 284, baseType: !3476, size: 64, offset: 320)
!3484 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff", scope: !3473, file: !87, line: 285, baseType: !3476, size: 64, offset: 384)
!3485 = !DIDerivedType(tag: DW_TAG_member, name: "restore", scope: !3473, file: !87, line: 286, baseType: !3476, size: 64, offset: 448)
!3486 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_late", scope: !3473, file: !87, line: 287, baseType: !3476, size: 64, offset: 512)
!3487 = !DIDerivedType(tag: DW_TAG_member, name: "resume_early", scope: !3473, file: !87, line: 288, baseType: !3476, size: 64, offset: 576)
!3488 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_late", scope: !3473, file: !87, line: 289, baseType: !3476, size: 64, offset: 640)
!3489 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_early", scope: !3473, file: !87, line: 290, baseType: !3476, size: 64, offset: 704)
!3490 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_late", scope: !3473, file: !87, line: 291, baseType: !3476, size: 64, offset: 768)
!3491 = !DIDerivedType(tag: DW_TAG_member, name: "restore_early", scope: !3473, file: !87, line: 292, baseType: !3476, size: 64, offset: 832)
!3492 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_noirq", scope: !3473, file: !87, line: 293, baseType: !3476, size: 64, offset: 896)
!3493 = !DIDerivedType(tag: DW_TAG_member, name: "resume_noirq", scope: !3473, file: !87, line: 294, baseType: !3476, size: 64, offset: 960)
!3494 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_noirq", scope: !3473, file: !87, line: 295, baseType: !3476, size: 64, offset: 1024)
!3495 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_noirq", scope: !3473, file: !87, line: 296, baseType: !3476, size: 64, offset: 1088)
!3496 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_noirq", scope: !3473, file: !87, line: 297, baseType: !3476, size: 64, offset: 1152)
!3497 = !DIDerivedType(tag: DW_TAG_member, name: "restore_noirq", scope: !3473, file: !87, line: 298, baseType: !3476, size: 64, offset: 1216)
!3498 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_suspend", scope: !3473, file: !87, line: 299, baseType: !3476, size: 64, offset: 1280)
!3499 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_resume", scope: !3473, file: !87, line: 300, baseType: !3476, size: 64, offset: 1344)
!3500 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_idle", scope: !3473, file: !87, line: 301, baseType: !3476, size: 64, offset: 1408)
!3501 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !247, file: !80, line: 470, baseType: !3502, size: 64, offset: 768)
!3502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3503, size: 64)
!3503 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bus_type", file: !3504, line: 82, size: 1408, elements: !3505)
!3504 = !DIFile(filename: "./include/linux/device/bus.h", directory: "/home/lizy2001/genbc/linux")
!3505 = !{!3506, !3507, !3508, !3509, !3510, !3511, !3512, !3571, !3572, !3573, !3574, !3575, !3576, !3577, !3578, !3579, !3580, !3581, !3582, !3583, !3587, !3590, !3591}
!3506 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3503, file: !3504, line: 83, baseType: !254, size: 64)
!3507 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name", scope: !3503, file: !3504, line: 84, baseType: !254, size: 64, offset: 64)
!3508 = !DIDerivedType(tag: DW_TAG_member, name: "dev_root", scope: !3503, file: !3504, line: 85, baseType: !246, size: 64, offset: 128)
!3509 = !DIDerivedType(tag: DW_TAG_member, name: "bus_groups", scope: !3503, file: !3504, line: 86, baseType: !363, size: 64, offset: 192)
!3510 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !3503, file: !3504, line: 87, baseType: !363, size: 64, offset: 256)
!3511 = !DIDerivedType(tag: DW_TAG_member, name: "drv_groups", scope: !3503, file: !3504, line: 88, baseType: !363, size: 64, offset: 320)
!3512 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !3503, file: !3504, line: 90, baseType: !3513, size: 64, offset: 384)
!3513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3514, size: 64)
!3514 = !DISubroutineType(types: !3515)
!3515 = !{!217, !246, !3516}
!3516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3517, size: 64)
!3517 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_driver", file: !74, line: 95, size: 1152, elements: !3518)
!3518 = !{!3519, !3520, !3521, !3522, !3523, !3524, !3525, !3538, !3551, !3552, !3553, !3554, !3555, !3563, !3564, !3565, !3566, !3567, !3568}
!3519 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3517, file: !74, line: 96, baseType: !254, size: 64)
!3520 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !3517, file: !74, line: 97, baseType: !3502, size: 64, offset: 64)
!3521 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3517, file: !74, line: 99, baseType: !206, size: 64, offset: 128)
!3522 = !DIDerivedType(tag: DW_TAG_member, name: "mod_name", scope: !3517, file: !74, line: 100, baseType: !254, size: 64, offset: 192)
!3523 = !DIDerivedType(tag: DW_TAG_member, name: "suppress_bind_attrs", scope: !3517, file: !74, line: 102, baseType: !521, size: 8, offset: 256)
!3524 = !DIDerivedType(tag: DW_TAG_member, name: "probe_type", scope: !3517, file: !74, line: 103, baseType: !73, size: 32, offset: 288)
!3525 = !DIDerivedType(tag: DW_TAG_member, name: "of_match_table", scope: !3517, file: !74, line: 105, baseType: !3526, size: 64, offset: 320)
!3526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3527, size: 64)
!3527 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3528)
!3528 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "of_device_id", file: !3529, line: 262, size: 1600, elements: !3530)
!3529 = !DIFile(filename: "./include/linux/mod_devicetable.h", directory: "/home/lizy2001/genbc/linux")
!3530 = !{!3531, !3532, !3533, !3537}
!3531 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3528, file: !3529, line: 263, baseType: !2783, size: 256)
!3532 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3528, file: !3529, line: 264, baseType: !2783, size: 256, offset: 256)
!3533 = !DIDerivedType(tag: DW_TAG_member, name: "compatible", scope: !3528, file: !3529, line: 265, baseType: !3534, size: 1024, offset: 512)
!3534 = !DICompositeType(tag: DW_TAG_array_type, baseType: !220, size: 1024, elements: !3535)
!3535 = !{!3536}
!3536 = !DISubrange(count: 128)
!3537 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3528, file: !3529, line: 266, baseType: !2210, size: 64, offset: 1536)
!3538 = !DIDerivedType(tag: DW_TAG_member, name: "acpi_match_table", scope: !3517, file: !74, line: 106, baseType: !3539, size: 64, offset: 384)
!3539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3540, size: 64)
!3540 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3541)
!3541 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_id", file: !3529, line: 210, size: 256, elements: !3542)
!3542 = !{!3543, !3547, !3549, !3550}
!3543 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3541, file: !3529, line: 211, baseType: !3544, size: 72)
!3544 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1383, size: 72, elements: !3545)
!3545 = !{!3546}
!3546 = !DISubrange(count: 9)
!3547 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !3541, file: !3529, line: 212, baseType: !3548, size: 64, offset: 128)
!3548 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_ulong_t", file: !3529, line: 14, baseType: !212)
!3549 = !DIDerivedType(tag: DW_TAG_member, name: "cls", scope: !3541, file: !3529, line: 213, baseType: !226, size: 32, offset: 192)
!3550 = !DIDerivedType(tag: DW_TAG_member, name: "cls_msk", scope: !3541, file: !3529, line: 214, baseType: !226, size: 32, offset: 224)
!3551 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !3517, file: !74, line: 108, baseType: !3476, size: 64, offset: 448)
!3552 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !3517, file: !74, line: 109, baseType: !3467, size: 64, offset: 512)
!3553 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !3517, file: !74, line: 110, baseType: !3476, size: 64, offset: 576)
!3554 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !3517, file: !74, line: 111, baseType: !3467, size: 64, offset: 640)
!3555 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3517, file: !74, line: 112, baseType: !3556, size: 64, offset: 704)
!3556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3557, size: 64)
!3557 = !DISubroutineType(types: !3558)
!3558 = !{!217, !246, !3559}
!3559 = !DIDerivedType(tag: DW_TAG_typedef, name: "pm_message_t", file: !87, line: 52, baseType: !3560)
!3560 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_message", file: !87, line: 50, size: 32, elements: !3561)
!3561 = !{!3562}
!3562 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !3560, file: !87, line: 51, baseType: !217, size: 32)
!3563 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3517, file: !74, line: 113, baseType: !3476, size: 64, offset: 768)
!3564 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !3517, file: !74, line: 114, baseType: !363, size: 64, offset: 832)
!3565 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !3517, file: !74, line: 115, baseType: !363, size: 64, offset: 896)
!3566 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3517, file: !74, line: 117, baseType: !3471, size: 64, offset: 960)
!3567 = !DIDerivedType(tag: DW_TAG_member, name: "coredump", scope: !3517, file: !74, line: 118, baseType: !3467, size: 64, offset: 1024)
!3568 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3517, file: !74, line: 120, baseType: !3569, size: 64, offset: 1088)
!3569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3570, size: 64)
!3570 = !DICompositeType(tag: DW_TAG_structure_type, name: "driver_private", file: !74, line: 120, flags: DIFlagFwdDecl)
!3571 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !3503, file: !3504, line: 91, baseType: !3458, size: 64, offset: 448)
!3572 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !3503, file: !3504, line: 92, baseType: !3476, size: 64, offset: 512)
!3573 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !3503, file: !3504, line: 93, baseType: !3467, size: 64, offset: 576)
!3574 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !3503, file: !3504, line: 94, baseType: !3476, size: 64, offset: 640)
!3575 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !3503, file: !3504, line: 95, baseType: !3467, size: 64, offset: 704)
!3576 = !DIDerivedType(tag: DW_TAG_member, name: "online", scope: !3503, file: !3504, line: 97, baseType: !3476, size: 64, offset: 768)
!3577 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !3503, file: !3504, line: 98, baseType: !3476, size: 64, offset: 832)
!3578 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3503, file: !3504, line: 100, baseType: !3556, size: 64, offset: 896)
!3579 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3503, file: !3504, line: 101, baseType: !3476, size: 64, offset: 960)
!3580 = !DIDerivedType(tag: DW_TAG_member, name: "num_vf", scope: !3503, file: !3504, line: 103, baseType: !3476, size: 64, offset: 1024)
!3581 = !DIDerivedType(tag: DW_TAG_member, name: "dma_configure", scope: !3503, file: !3504, line: 105, baseType: !3476, size: 64, offset: 1088)
!3582 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3503, file: !3504, line: 107, baseType: !3471, size: 64, offset: 1152)
!3583 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_ops", scope: !3503, file: !3504, line: 109, baseType: !3584, size: 64, offset: 1216)
!3584 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3585, size: 64)
!3585 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3586)
!3586 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_ops", file: !3504, line: 109, flags: DIFlagFwdDecl)
!3587 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3503, file: !3504, line: 111, baseType: !3588, size: 64, offset: 1280)
!3588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3589, size: 64)
!3589 = !DICompositeType(tag: DW_TAG_structure_type, name: "subsys_private", file: !3504, line: 111, flags: DIFlagFwdDecl)
!3590 = !DIDerivedType(tag: DW_TAG_member, name: "lock_key", scope: !3503, file: !3504, line: 112, baseType: !676, offset: 1344)
!3591 = !DIDerivedType(tag: DW_TAG_member, name: "need_parent_lock", scope: !3503, file: !3504, line: 114, baseType: !521, size: 8, offset: 1344)
!3592 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !247, file: !80, line: 471, baseType: !3516, size: 64, offset: 832)
!3593 = !DIDerivedType(tag: DW_TAG_member, name: "platform_data", scope: !247, file: !80, line: 473, baseType: !211, size: 64, offset: 896)
!3594 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !247, file: !80, line: 475, baseType: !211, size: 64, offset: 960)
!3595 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !247, file: !80, line: 480, baseType: !1204, size: 192, offset: 1024)
!3596 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !247, file: !80, line: 484, baseType: !3597, size: 576, offset: 1216)
!3597 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_links_info", file: !80, line: 361, size: 576, elements: !3598)
!3598 = !{!3599, !3600, !3601, !3602, !3603, !3604}
!3599 = !DIDerivedType(tag: DW_TAG_member, name: "suppliers", scope: !3597, file: !80, line: 362, baseType: !257, size: 128)
!3600 = !DIDerivedType(tag: DW_TAG_member, name: "consumers", scope: !3597, file: !80, line: 363, baseType: !257, size: 128, offset: 128)
!3601 = !DIDerivedType(tag: DW_TAG_member, name: "needs_suppliers", scope: !3597, file: !80, line: 364, baseType: !257, size: 128, offset: 256)
!3602 = !DIDerivedType(tag: DW_TAG_member, name: "defer_hook", scope: !3597, file: !80, line: 365, baseType: !257, size: 128, offset: 384)
!3603 = !DIDerivedType(tag: DW_TAG_member, name: "need_for_probe", scope: !3597, file: !80, line: 366, baseType: !521, size: 8, offset: 512)
!3604 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !3597, file: !80, line: 367, baseType: !79, size: 32, offset: 544)
!3605 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !247, file: !80, line: 485, baseType: !3606, size: 2304, offset: 1792)
!3606 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_info", file: !87, line: 565, size: 2304, elements: !3607)
!3607 = !{!3608, !3609, !3610, !3611, !3612, !3613, !3614, !3615, !3616, !3617, !3618, !3619, !3620, !3621, !3622, !3623, !3661, !3662, !3663, !3664, !3665, !3666, !3667, !3668, !3669, !3670, !3671, !3672, !3673, !3674, !3675, !3676, !3677, !3678, !3679, !3680, !3681, !3682, !3683, !3684, !3685, !3686, !3687, !3688, !3689, !3690, !3691, !3692, !3693, !3703, !3707}
!3608 = !DIDerivedType(tag: DW_TAG_member, name: "power_state", scope: !3606, file: !87, line: 566, baseType: !3559, size: 32)
!3609 = !DIDerivedType(tag: DW_TAG_member, name: "can_wakeup", scope: !3606, file: !87, line: 567, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!3610 = !DIDerivedType(tag: DW_TAG_member, name: "async_suspend", scope: !3606, file: !87, line: 568, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 32)
!3611 = !DIDerivedType(tag: DW_TAG_member, name: "in_dpm_list", scope: !3606, file: !87, line: 569, baseType: !521, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 32)
!3612 = !DIDerivedType(tag: DW_TAG_member, name: "is_prepared", scope: !3606, file: !87, line: 570, baseType: !521, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 32)
!3613 = !DIDerivedType(tag: DW_TAG_member, name: "is_suspended", scope: !3606, file: !87, line: 571, baseType: !521, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 32)
!3614 = !DIDerivedType(tag: DW_TAG_member, name: "is_noirq_suspended", scope: !3606, file: !87, line: 572, baseType: !521, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 32)
!3615 = !DIDerivedType(tag: DW_TAG_member, name: "is_late_suspended", scope: !3606, file: !87, line: 573, baseType: !521, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 32)
!3616 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm", scope: !3606, file: !87, line: 574, baseType: !521, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 32)
!3617 = !DIDerivedType(tag: DW_TAG_member, name: "early_init", scope: !3606, file: !87, line: 575, baseType: !521, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!3618 = !DIDerivedType(tag: DW_TAG_member, name: "direct_complete", scope: !3606, file: !87, line: 576, baseType: !521, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 32)
!3619 = !DIDerivedType(tag: DW_TAG_member, name: "driver_flags", scope: !3606, file: !87, line: 577, baseType: !224, size: 32, offset: 64)
!3620 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3606, file: !87, line: 578, baseType: !270, offset: 96)
!3621 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3606, file: !87, line: 580, baseType: !257, size: 128, offset: 128)
!3622 = !DIDerivedType(tag: DW_TAG_member, name: "completion", scope: !3606, file: !87, line: 581, baseType: !1569, size: 192, offset: 256)
!3623 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup", scope: !3606, file: !87, line: 582, baseType: !3624, size: 64, offset: 448)
!3624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3625, size: 64)
!3625 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wakeup_source", file: !3626, line: 43, size: 1472, elements: !3627)
!3626 = !DIFile(filename: "./include/linux/pm_wakeup.h", directory: "/home/lizy2001/genbc/linux")
!3627 = !{!3628, !3629, !3630, !3631, !3632, !3635, !3647, !3648, !3649, !3650, !3651, !3652, !3653, !3654, !3655, !3656, !3657, !3658, !3659, !3660}
!3628 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3625, file: !3626, line: 44, baseType: !254, size: 64)
!3629 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3625, file: !3626, line: 45, baseType: !217, size: 32, offset: 64)
!3630 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3625, file: !3626, line: 46, baseType: !257, size: 128, offset: 128)
!3631 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3625, file: !3626, line: 47, baseType: !270, offset: 256)
!3632 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !3625, file: !3626, line: 48, baseType: !3633, size: 64, offset: 256)
!3633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3634, size: 64)
!3634 = !DICompositeType(tag: DW_TAG_structure_type, name: "wake_irq", file: !87, line: 533, flags: DIFlagFwdDecl)
!3635 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !3625, file: !3626, line: 49, baseType: !3636, size: 320, offset: 320)
!3636 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timer_list", file: !3637, line: 11, size: 320, elements: !3638)
!3637 = !DIFile(filename: "./include/linux/timer.h", directory: "/home/lizy2001/genbc/linux")
!3638 = !{!3639, !3640, !3641, !3646}
!3639 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3636, file: !3637, line: 16, baseType: !670, size: 128)
!3640 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !3636, file: !3637, line: 17, baseType: !212, size: 64, offset: 128)
!3641 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !3636, file: !3637, line: 18, baseType: !3642, size: 64, offset: 192)
!3642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3643, size: 64)
!3643 = !DISubroutineType(types: !3644)
!3644 = !{null, !3645}
!3645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3636, size: 64)
!3646 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3636, file: !3637, line: 19, baseType: !224, size: 32, offset: 256)
!3647 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !3625, file: !3626, line: 50, baseType: !212, size: 64, offset: 640)
!3648 = !DIDerivedType(tag: DW_TAG_member, name: "total_time", scope: !3625, file: !3626, line: 51, baseType: !1330, size: 64, offset: 704)
!3649 = !DIDerivedType(tag: DW_TAG_member, name: "max_time", scope: !3625, file: !3626, line: 52, baseType: !1330, size: 64, offset: 768)
!3650 = !DIDerivedType(tag: DW_TAG_member, name: "last_time", scope: !3625, file: !3626, line: 53, baseType: !1330, size: 64, offset: 832)
!3651 = !DIDerivedType(tag: DW_TAG_member, name: "start_prevent_time", scope: !3625, file: !3626, line: 54, baseType: !1330, size: 64, offset: 896)
!3652 = !DIDerivedType(tag: DW_TAG_member, name: "prevent_sleep_time", scope: !3625, file: !3626, line: 55, baseType: !1330, size: 64, offset: 960)
!3653 = !DIDerivedType(tag: DW_TAG_member, name: "event_count", scope: !3625, file: !3626, line: 56, baseType: !212, size: 64, offset: 1024)
!3654 = !DIDerivedType(tag: DW_TAG_member, name: "active_count", scope: !3625, file: !3626, line: 57, baseType: !212, size: 64, offset: 1088)
!3655 = !DIDerivedType(tag: DW_TAG_member, name: "relax_count", scope: !3625, file: !3626, line: 58, baseType: !212, size: 64, offset: 1152)
!3656 = !DIDerivedType(tag: DW_TAG_member, name: "expire_count", scope: !3625, file: !3626, line: 59, baseType: !212, size: 64, offset: 1216)
!3657 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_count", scope: !3625, file: !3626, line: 60, baseType: !212, size: 64, offset: 1280)
!3658 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3625, file: !3626, line: 61, baseType: !246, size: 64, offset: 1344)
!3659 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !3625, file: !3626, line: 62, baseType: !521, size: 1, offset: 1408, flags: DIFlagBitField, extraData: i64 1408)
!3660 = !DIDerivedType(tag: DW_TAG_member, name: "autosleep_enabled", scope: !3625, file: !3626, line: 63, baseType: !521, size: 1, offset: 1409, flags: DIFlagBitField, extraData: i64 1408)
!3661 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_path", scope: !3606, file: !87, line: 583, baseType: !521, size: 1, offset: 512, flags: DIFlagBitField, extraData: i64 512)
!3662 = !DIDerivedType(tag: DW_TAG_member, name: "syscore", scope: !3606, file: !87, line: 584, baseType: !521, size: 1, offset: 513, flags: DIFlagBitField, extraData: i64 512)
!3663 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm_callbacks", scope: !3606, file: !87, line: 585, baseType: !521, size: 1, offset: 514, flags: DIFlagBitField, extraData: i64 512)
!3664 = !DIDerivedType(tag: DW_TAG_member, name: "must_resume", scope: !3606, file: !87, line: 586, baseType: !7, size: 1, offset: 515, flags: DIFlagBitField, extraData: i64 512)
!3665 = !DIDerivedType(tag: DW_TAG_member, name: "may_skip_resume", scope: !3606, file: !87, line: 587, baseType: !7, size: 1, offset: 516, flags: DIFlagBitField, extraData: i64 512)
!3666 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_timer", scope: !3606, file: !87, line: 592, baseType: !1322, size: 512, offset: 576)
!3667 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !3606, file: !87, line: 593, baseType: !452, size: 64, offset: 1088)
!3668 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !3606, file: !87, line: 594, baseType: !2041, size: 256, offset: 1152)
!3669 = !DIDerivedType(tag: DW_TAG_member, name: "wait_queue", scope: !3606, file: !87, line: 595, baseType: !1511, size: 128, offset: 1408)
!3670 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !3606, file: !87, line: 596, baseType: !3633, size: 64, offset: 1536)
!3671 = !DIDerivedType(tag: DW_TAG_member, name: "usage_count", scope: !3606, file: !87, line: 597, baseType: !778, size: 32, offset: 1600)
!3672 = !DIDerivedType(tag: DW_TAG_member, name: "child_count", scope: !3606, file: !87, line: 598, baseType: !778, size: 32, offset: 1632)
!3673 = !DIDerivedType(tag: DW_TAG_member, name: "disable_depth", scope: !3606, file: !87, line: 599, baseType: !7, size: 3, offset: 1664, flags: DIFlagBitField, extraData: i64 1664)
!3674 = !DIDerivedType(tag: DW_TAG_member, name: "idle_notification", scope: !3606, file: !87, line: 600, baseType: !7, size: 1, offset: 1667, flags: DIFlagBitField, extraData: i64 1664)
!3675 = !DIDerivedType(tag: DW_TAG_member, name: "request_pending", scope: !3606, file: !87, line: 601, baseType: !7, size: 1, offset: 1668, flags: DIFlagBitField, extraData: i64 1664)
!3676 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_resume", scope: !3606, file: !87, line: 602, baseType: !7, size: 1, offset: 1669, flags: DIFlagBitField, extraData: i64 1664)
!3677 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_auto", scope: !3606, file: !87, line: 603, baseType: !7, size: 1, offset: 1670, flags: DIFlagBitField, extraData: i64 1664)
!3678 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_children", scope: !3606, file: !87, line: 604, baseType: !521, size: 1, offset: 1671, flags: DIFlagBitField, extraData: i64 1664)
!3679 = !DIDerivedType(tag: DW_TAG_member, name: "no_callbacks", scope: !3606, file: !87, line: 605, baseType: !7, size: 1, offset: 1672, flags: DIFlagBitField, extraData: i64 1664)
!3680 = !DIDerivedType(tag: DW_TAG_member, name: "irq_safe", scope: !3606, file: !87, line: 606, baseType: !7, size: 1, offset: 1673, flags: DIFlagBitField, extraData: i64 1664)
!3681 = !DIDerivedType(tag: DW_TAG_member, name: "use_autosuspend", scope: !3606, file: !87, line: 607, baseType: !7, size: 1, offset: 1674, flags: DIFlagBitField, extraData: i64 1664)
!3682 = !DIDerivedType(tag: DW_TAG_member, name: "timer_autosuspends", scope: !3606, file: !87, line: 608, baseType: !7, size: 1, offset: 1675, flags: DIFlagBitField, extraData: i64 1664)
!3683 = !DIDerivedType(tag: DW_TAG_member, name: "memalloc_noio", scope: !3606, file: !87, line: 609, baseType: !7, size: 1, offset: 1676, flags: DIFlagBitField, extraData: i64 1664)
!3684 = !DIDerivedType(tag: DW_TAG_member, name: "links_count", scope: !3606, file: !87, line: 610, baseType: !7, size: 32, offset: 1696)
!3685 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !3606, file: !87, line: 611, baseType: !86, size: 32, offset: 1728)
!3686 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_status", scope: !3606, file: !87, line: 612, baseType: !94, size: 32, offset: 1760)
!3687 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_error", scope: !3606, file: !87, line: 613, baseType: !217, size: 32, offset: 1792)
!3688 = !DIDerivedType(tag: DW_TAG_member, name: "autosuspend_delay", scope: !3606, file: !87, line: 614, baseType: !217, size: 32, offset: 1824)
!3689 = !DIDerivedType(tag: DW_TAG_member, name: "last_busy", scope: !3606, file: !87, line: 615, baseType: !452, size: 64, offset: 1856)
!3690 = !DIDerivedType(tag: DW_TAG_member, name: "active_time", scope: !3606, file: !87, line: 616, baseType: !452, size: 64, offset: 1920)
!3691 = !DIDerivedType(tag: DW_TAG_member, name: "suspended_time", scope: !3606, file: !87, line: 617, baseType: !452, size: 64, offset: 1984)
!3692 = !DIDerivedType(tag: DW_TAG_member, name: "accounting_timestamp", scope: !3606, file: !87, line: 618, baseType: !452, size: 64, offset: 2048)
!3693 = !DIDerivedType(tag: DW_TAG_member, name: "subsys_data", scope: !3606, file: !87, line: 620, baseType: !3694, size: 64, offset: 2112)
!3694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3695, size: 64)
!3695 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_subsys_data", file: !87, line: 536, size: 256, elements: !3696)
!3696 = !{!3697, !3698, !3699, !3700}
!3697 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3695, file: !87, line: 537, baseType: !270)
!3698 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !3695, file: !87, line: 538, baseType: !7, size: 32)
!3699 = !DIDerivedType(tag: DW_TAG_member, name: "clock_list", scope: !3695, file: !87, line: 540, baseType: !257, size: 128, offset: 64)
!3700 = !DIDerivedType(tag: DW_TAG_member, name: "domain_data", scope: !3695, file: !87, line: 543, baseType: !3701, size: 64, offset: 192)
!3701 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3702, size: 64)
!3702 = !DICompositeType(tag: DW_TAG_structure_type, name: "pm_domain_data", file: !87, line: 534, flags: DIFlagFwdDecl)
!3703 = !DIDerivedType(tag: DW_TAG_member, name: "set_latency_tolerance", scope: !3606, file: !87, line: 621, baseType: !3704, size: 64, offset: 2176)
!3704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3705, size: 64)
!3705 = !DISubroutineType(types: !3706)
!3706 = !{null, !246, !1474}
!3707 = !DIDerivedType(tag: DW_TAG_member, name: "qos", scope: !3606, file: !87, line: 622, baseType: !3708, size: 64, offset: 2240)
!3708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3709, size: 64)
!3709 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_qos", file: !87, line: 622, flags: DIFlagFwdDecl)
!3710 = !DIDerivedType(tag: DW_TAG_member, name: "pm_domain", scope: !247, file: !80, line: 486, baseType: !3711, size: 64, offset: 4096)
!3711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3712, size: 64)
!3712 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_domain", file: !87, line: 642, size: 1792, elements: !3713)
!3713 = !{!3714, !3715, !3716, !3720, !3721, !3722}
!3714 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3712, file: !87, line: 643, baseType: !3473, size: 1472)
!3715 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3712, file: !87, line: 644, baseType: !3476, size: 64, offset: 1472)
!3716 = !DIDerivedType(tag: DW_TAG_member, name: "detach", scope: !3712, file: !87, line: 645, baseType: !3717, size: 64, offset: 1536)
!3717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3718, size: 64)
!3718 = !DISubroutineType(types: !3719)
!3719 = !{null, !246, !521}
!3720 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !3712, file: !87, line: 646, baseType: !3476, size: 64, offset: 1600)
!3721 = !DIDerivedType(tag: DW_TAG_member, name: "sync", scope: !3712, file: !87, line: 647, baseType: !3467, size: 64, offset: 1664)
!3722 = !DIDerivedType(tag: DW_TAG_member, name: "dismiss", scope: !3712, file: !87, line: 648, baseType: !3467, size: 64, offset: 1728)
!3723 = !DIDerivedType(tag: DW_TAG_member, name: "msi_domain", scope: !247, file: !80, line: 493, baseType: !3724, size: 64, offset: 4160)
!3724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3725, size: 64)
!3725 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain", file: !101, line: 162, size: 1088, elements: !3726)
!3726 = !{!3727, !3728, !3729, !3902, !3903, !3904, !3905, !3906, !3907, !3910, !3911, !3912, !3913, !3914, !3915, !3916}
!3727 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !3725, file: !101, line: 163, baseType: !257, size: 128)
!3728 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3725, file: !101, line: 164, baseType: !254, size: 64, offset: 128)
!3729 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3725, file: !101, line: 165, baseType: !3730, size: 64, offset: 192)
!3730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3731, size: 64)
!3731 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3732)
!3732 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain_ops", file: !101, line: 105, size: 640, elements: !3733)
!3733 = !{!3734, !3852, !3863, !3868, !3872, !3879, !3883, !3887, !3894, !3898}
!3734 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !3732, file: !101, line: 106, baseType: !3735, size: 64)
!3735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3736, size: 64)
!3736 = !DISubroutineType(types: !3737)
!3737 = !{!217, !3724, !3738, !100}
!3738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3739, size: 64)
!3739 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_node", file: !3740, line: 51, size: 1344, elements: !3741)
!3740 = !DIFile(filename: "./include/linux/of.h", directory: "/home/lizy2001/genbc/linux")
!3741 = !{!3742, !3743, !3745, !3746, !3836, !3845, !3846, !3847, !3848, !3849, !3850, !3851}
!3742 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3739, file: !3740, line: 52, baseType: !254, size: 64)
!3743 = !DIDerivedType(tag: DW_TAG_member, name: "phandle", scope: !3739, file: !3740, line: 53, baseType: !3744, size: 32, offset: 64)
!3744 = !DIDerivedType(tag: DW_TAG_typedef, name: "phandle", file: !3740, line: 28, baseType: !224)
!3745 = !DIDerivedType(tag: DW_TAG_member, name: "full_name", scope: !3739, file: !3740, line: 54, baseType: !254, size: 64, offset: 128)
!3746 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !3739, file: !3740, line: 55, baseType: !3747, size: 192, offset: 192)
!3747 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_handle", file: !3748, line: 17, size: 192, elements: !3749)
!3748 = !DIFile(filename: "./include/linux/fwnode.h", directory: "/home/lizy2001/genbc/linux")
!3749 = !{!3750, !3752, !3835}
!3750 = !DIDerivedType(tag: DW_TAG_member, name: "secondary", scope: !3747, file: !3748, line: 18, baseType: !3751, size: 64)
!3751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3747, size: 64)
!3752 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3747, file: !3748, line: 19, baseType: !3753, size: 64, offset: 64)
!3753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3754, size: 64)
!3754 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3755)
!3755 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_operations", file: !3748, line: 110, size: 1152, elements: !3756)
!3756 = !{!3757, !3761, !3765, !3771, !3777, !3781, !3785, !3790, !3794, !3795, !3799, !3803, !3807, !3818, !3819, !3820, !3821, !3831}
!3757 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !3755, file: !3748, line: 111, baseType: !3758, size: 64)
!3758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3759, size: 64)
!3759 = !DISubroutineType(types: !3760)
!3760 = !{!3751, !3751}
!3761 = !DIDerivedType(tag: DW_TAG_member, name: "put", scope: !3755, file: !3748, line: 112, baseType: !3762, size: 64, offset: 64)
!3762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3763, size: 64)
!3763 = !DISubroutineType(types: !3764)
!3764 = !{null, !3751}
!3765 = !DIDerivedType(tag: DW_TAG_member, name: "device_is_available", scope: !3755, file: !3748, line: 113, baseType: !3766, size: 64, offset: 128)
!3766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3767, size: 64)
!3767 = !DISubroutineType(types: !3768)
!3768 = !{!521, !3769}
!3769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3770, size: 64)
!3770 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3747)
!3771 = !DIDerivedType(tag: DW_TAG_member, name: "device_get_match_data", scope: !3755, file: !3748, line: 114, baseType: !3772, size: 64, offset: 192)
!3772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3773, size: 64)
!3773 = !DISubroutineType(types: !3774)
!3774 = !{!2210, !3769, !3775}
!3775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3776, size: 64)
!3776 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !247)
!3777 = !DIDerivedType(tag: DW_TAG_member, name: "property_present", scope: !3755, file: !3748, line: 116, baseType: !3778, size: 64, offset: 256)
!3778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3779, size: 64)
!3779 = !DISubroutineType(types: !3780)
!3780 = !{!521, !3769, !254}
!3781 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_int_array", scope: !3755, file: !3748, line: 118, baseType: !3782, size: 64, offset: 320)
!3782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3783, size: 64)
!3783 = !DISubroutineType(types: !3784)
!3784 = !{!217, !3769, !254, !7, !211, !357}
!3785 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_string_array", scope: !3755, file: !3748, line: 123, baseType: !3786, size: 64, offset: 384)
!3786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3787, size: 64)
!3787 = !DISubroutineType(types: !3788)
!3788 = !{!217, !3769, !254, !3789, !357}
!3789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !254, size: 64)
!3790 = !DIDerivedType(tag: DW_TAG_member, name: "get_name", scope: !3755, file: !3748, line: 126, baseType: !3791, size: 64, offset: 448)
!3791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3792, size: 64)
!3792 = !DISubroutineType(types: !3793)
!3793 = !{!254, !3769}
!3794 = !DIDerivedType(tag: DW_TAG_member, name: "get_name_prefix", scope: !3755, file: !3748, line: 127, baseType: !3791, size: 64, offset: 512)
!3795 = !DIDerivedType(tag: DW_TAG_member, name: "get_parent", scope: !3755, file: !3748, line: 128, baseType: !3796, size: 64, offset: 576)
!3796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3797, size: 64)
!3797 = !DISubroutineType(types: !3798)
!3798 = !{!3751, !3769}
!3799 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_child_node", scope: !3755, file: !3748, line: 130, baseType: !3800, size: 64, offset: 640)
!3800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3801, size: 64)
!3801 = !DISubroutineType(types: !3802)
!3802 = !{!3751, !3769, !3751}
!3803 = !DIDerivedType(tag: DW_TAG_member, name: "get_named_child_node", scope: !3755, file: !3748, line: 133, baseType: !3804, size: 64, offset: 704)
!3804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3805, size: 64)
!3805 = !DISubroutineType(types: !3806)
!3806 = !{!3751, !3769, !254}
!3807 = !DIDerivedType(tag: DW_TAG_member, name: "get_reference_args", scope: !3755, file: !3748, line: 135, baseType: !3808, size: 64, offset: 768)
!3808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3809, size: 64)
!3809 = !DISubroutineType(types: !3810)
!3810 = !{!217, !3769, !254, !254, !7, !7, !3811}
!3811 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3812, size: 64)
!3812 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_reference_args", file: !3748, line: 43, size: 640, elements: !3813)
!3813 = !{!3814, !3815, !3816}
!3814 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !3812, file: !3748, line: 44, baseType: !3751, size: 64)
!3815 = !DIDerivedType(tag: DW_TAG_member, name: "nargs", scope: !3812, file: !3748, line: 45, baseType: !7, size: 32, offset: 64)
!3816 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !3812, file: !3748, line: 46, baseType: !3817, size: 512, offset: 128)
!3817 = !DICompositeType(tag: DW_TAG_array_type, baseType: !452, size: 512, elements: !1360)
!3818 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_next_endpoint", scope: !3755, file: !3748, line: 140, baseType: !3800, size: 64, offset: 832)
!3819 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_remote_endpoint", scope: !3755, file: !3748, line: 143, baseType: !3796, size: 64, offset: 896)
!3820 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_port_parent", scope: !3755, file: !3748, line: 145, baseType: !3758, size: 64, offset: 960)
!3821 = !DIDerivedType(tag: DW_TAG_member, name: "graph_parse_endpoint", scope: !3755, file: !3748, line: 146, baseType: !3822, size: 64, offset: 1024)
!3822 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3823, size: 64)
!3823 = !DISubroutineType(types: !3824)
!3824 = !{!217, !3769, !3825}
!3825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3826, size: 64)
!3826 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_endpoint", file: !3748, line: 29, size: 128, elements: !3827)
!3827 = !{!3828, !3829, !3830}
!3828 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !3826, file: !3748, line: 30, baseType: !7, size: 32)
!3829 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3826, file: !3748, line: 31, baseType: !7, size: 32, offset: 32)
!3830 = !DIDerivedType(tag: DW_TAG_member, name: "local_fwnode", scope: !3826, file: !3748, line: 32, baseType: !3769, size: 64, offset: 64)
!3831 = !DIDerivedType(tag: DW_TAG_member, name: "add_links", scope: !3755, file: !3748, line: 148, baseType: !3832, size: 64, offset: 1088)
!3832 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3833, size: 64)
!3833 = !DISubroutineType(types: !3834)
!3834 = !{!217, !3769, !246}
!3835 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3747, file: !3748, line: 20, baseType: !246, size: 64, offset: 128)
!3836 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !3739, file: !3740, line: 57, baseType: !3837, size: 64, offset: 384)
!3837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3838, size: 64)
!3838 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "property", file: !3740, line: 31, size: 704, elements: !3839)
!3839 = !{!3840, !3841, !3842, !3843, !3844}
!3840 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3838, file: !3740, line: 32, baseType: !311, size: 64)
!3841 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !3838, file: !3740, line: 33, baseType: !217, size: 32, offset: 64)
!3842 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !3838, file: !3740, line: 34, baseType: !211, size: 64, offset: 128)
!3843 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3838, file: !3740, line: 35, baseType: !3837, size: 64, offset: 192)
!3844 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !3838, file: !3740, line: 43, baseType: !378, size: 448, offset: 256)
!3845 = !DIDerivedType(tag: DW_TAG_member, name: "deadprops", scope: !3739, file: !3740, line: 58, baseType: !3837, size: 64, offset: 448)
!3846 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3739, file: !3740, line: 59, baseType: !3738, size: 64, offset: 512)
!3847 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !3739, file: !3740, line: 60, baseType: !3738, size: 64, offset: 576)
!3848 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !3739, file: !3740, line: 61, baseType: !3738, size: 64, offset: 640)
!3849 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !3739, file: !3740, line: 63, baseType: !250, size: 512, offset: 704)
!3850 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !3739, file: !3740, line: 65, baseType: !212, size: 64, offset: 1216)
!3851 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3739, file: !3740, line: 66, baseType: !211, size: 64, offset: 1280)
!3852 = !DIDerivedType(tag: DW_TAG_member, name: "select", scope: !3732, file: !101, line: 108, baseType: !3853, size: 64, offset: 64)
!3853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3854, size: 64)
!3854 = !DISubroutineType(types: !3855)
!3855 = !{!217, !3724, !3856, !100}
!3856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3857, size: 64)
!3857 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_fwspec", file: !101, line: 63, size: 640, elements: !3858)
!3858 = !{!3859, !3860, !3861}
!3859 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !3857, file: !101, line: 64, baseType: !3751, size: 64)
!3860 = !DIDerivedType(tag: DW_TAG_member, name: "param_count", scope: !3857, file: !101, line: 65, baseType: !217, size: 32, offset: 64)
!3861 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !3857, file: !101, line: 66, baseType: !3862, size: 512, offset: 96)
!3862 = !DICompositeType(tag: DW_TAG_array_type, baseType: !224, size: 512, elements: !221)
!3863 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !3732, file: !101, line: 110, baseType: !3864, size: 64, offset: 128)
!3864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3865, size: 64)
!3865 = !DISubroutineType(types: !3866)
!3866 = !{!217, !3724, !7, !3867}
!3867 = !DIDerivedType(tag: DW_TAG_typedef, name: "irq_hw_number_t", file: !210, line: 164, baseType: !212)
!3868 = !DIDerivedType(tag: DW_TAG_member, name: "unmap", scope: !3732, file: !101, line: 111, baseType: !3869, size: 64, offset: 192)
!3869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3870, size: 64)
!3870 = !DISubroutineType(types: !3871)
!3871 = !{null, !3724, !7}
!3872 = !DIDerivedType(tag: DW_TAG_member, name: "xlate", scope: !3732, file: !101, line: 112, baseType: !3873, size: 64, offset: 256)
!3873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3874, size: 64)
!3874 = !DISubroutineType(types: !3875)
!3875 = !{!217, !3724, !3738, !3876, !7, !3878, !2766}
!3876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3877, size: 64)
!3877 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !224)
!3878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !212, size: 64)
!3879 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !3732, file: !101, line: 117, baseType: !3880, size: 64, offset: 320)
!3880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3881, size: 64)
!3881 = !DISubroutineType(types: !3882)
!3882 = !{!217, !3724, !7, !7, !211}
!3883 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !3732, file: !101, line: 119, baseType: !3884, size: 64, offset: 384)
!3884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3885, size: 64)
!3885 = !DISubroutineType(types: !3886)
!3886 = !{null, !3724, !7, !7}
!3887 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !3732, file: !101, line: 121, baseType: !3888, size: 64, offset: 448)
!3888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3889, size: 64)
!3889 = !DISubroutineType(types: !3890)
!3890 = !{!217, !3724, !3891, !521}
!3891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3892, size: 64)
!3892 = !DICompositeType(tag: DW_TAG_structure_type, name: "irq_data", file: !3893, line: 11, flags: DIFlagFwdDecl)
!3893 = !DIFile(filename: "./include/linux/irqhandler.h", directory: "/home/lizy2001/genbc/linux")
!3894 = !DIDerivedType(tag: DW_TAG_member, name: "deactivate", scope: !3732, file: !101, line: 122, baseType: !3895, size: 64, offset: 512)
!3895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3896, size: 64)
!3896 = !DISubroutineType(types: !3897)
!3897 = !{null, !3724, !3891}
!3898 = !DIDerivedType(tag: DW_TAG_member, name: "translate", scope: !3732, file: !101, line: 123, baseType: !3899, size: 64, offset: 576)
!3899 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3900, size: 64)
!3900 = !DISubroutineType(types: !3901)
!3901 = !{!217, !3724, !3856, !3878, !2766}
!3902 = !DIDerivedType(tag: DW_TAG_member, name: "host_data", scope: !3725, file: !101, line: 166, baseType: !211, size: 64, offset: 256)
!3903 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3725, file: !101, line: 167, baseType: !7, size: 32, offset: 320)
!3904 = !DIDerivedType(tag: DW_TAG_member, name: "mapcount", scope: !3725, file: !101, line: 168, baseType: !7, size: 32, offset: 352)
!3905 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !3725, file: !101, line: 171, baseType: !3751, size: 64, offset: 384)
!3906 = !DIDerivedType(tag: DW_TAG_member, name: "bus_token", scope: !3725, file: !101, line: 172, baseType: !100, size: 32, offset: 448)
!3907 = !DIDerivedType(tag: DW_TAG_member, name: "gc", scope: !3725, file: !101, line: 173, baseType: !3908, size: 64, offset: 512)
!3908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3909, size: 64)
!3909 = !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain_chip_generic", file: !101, line: 134, flags: DIFlagFwdDecl)
!3910 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3725, file: !101, line: 175, baseType: !3724, size: 64, offset: 576)
!3911 = !DIDerivedType(tag: DW_TAG_member, name: "hwirq_max", scope: !3725, file: !101, line: 182, baseType: !3867, size: 64, offset: 640)
!3912 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_direct_max_irq", scope: !3725, file: !101, line: 183, baseType: !7, size: 32, offset: 704)
!3913 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_size", scope: !3725, file: !101, line: 184, baseType: !7, size: 32, offset: 736)
!3914 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_tree", scope: !3725, file: !101, line: 185, baseType: !770, size: 128, offset: 768)
!3915 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_tree_mutex", scope: !3725, file: !101, line: 186, baseType: !1204, size: 192, offset: 896)
!3916 = !DIDerivedType(tag: DW_TAG_member, name: "linear_revmap", scope: !3725, file: !101, line: 187, baseType: !3917, offset: 1088)
!3917 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, elements: !2414)
!3918 = !DIDerivedType(tag: DW_TAG_member, name: "msi_list", scope: !247, file: !80, line: 499, baseType: !257, size: 128, offset: 4224)
!3919 = !DIDerivedType(tag: DW_TAG_member, name: "dma_ops", scope: !247, file: !80, line: 502, baseType: !3920, size: 64, offset: 4352)
!3920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3921, size: 64)
!3921 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3922)
!3922 = !DICompositeType(tag: DW_TAG_structure_type, name: "dma_map_ops", file: !80, line: 502, flags: DIFlagFwdDecl)
!3923 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !247, file: !80, line: 504, baseType: !3924, size: 64, offset: 4416)
!3924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !452, size: 64)
!3925 = !DIDerivedType(tag: DW_TAG_member, name: "coherent_dma_mask", scope: !247, file: !80, line: 505, baseType: !452, size: 64, offset: 4480)
!3926 = !DIDerivedType(tag: DW_TAG_member, name: "bus_dma_limit", scope: !247, file: !80, line: 510, baseType: !452, size: 64, offset: 4544)
!3927 = !DIDerivedType(tag: DW_TAG_member, name: "dma_range_map", scope: !247, file: !80, line: 511, baseType: !3928, size: 64, offset: 4608)
!3928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3929, size: 64)
!3929 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3930)
!3930 = !DICompositeType(tag: DW_TAG_structure_type, name: "bus_dma_region", file: !80, line: 511, flags: DIFlagFwdDecl)
!3931 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !247, file: !80, line: 513, baseType: !3932, size: 64, offset: 4672)
!3932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3933, size: 64)
!3933 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_dma_parameters", file: !80, line: 288, size: 128, elements: !3934)
!3934 = !{!3935, !3936}
!3935 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !3933, file: !80, line: 293, baseType: !7, size: 32)
!3936 = !DIDerivedType(tag: DW_TAG_member, name: "segment_boundary_mask", scope: !3933, file: !80, line: 294, baseType: !212, size: 64, offset: 64)
!3937 = !DIDerivedType(tag: DW_TAG_member, name: "dma_pools", scope: !247, file: !80, line: 515, baseType: !257, size: 128, offset: 4736)
!3938 = !DIDerivedType(tag: DW_TAG_member, name: "archdata", scope: !247, file: !80, line: 526, baseType: !3939, offset: 4864)
!3939 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_archdata", file: !3940, line: 5, elements: !284)
!3940 = !DIFile(filename: "./arch/x86/include/asm/device.h", directory: "/home/lizy2001/genbc/linux")
!3941 = !DIDerivedType(tag: DW_TAG_member, name: "of_node", scope: !247, file: !80, line: 528, baseType: !3738, size: 64, offset: 4864)
!3942 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !247, file: !80, line: 529, baseType: !3751, size: 64, offset: 4928)
!3943 = !DIDerivedType(tag: DW_TAG_member, name: "devt", scope: !247, file: !80, line: 534, baseType: !544, size: 32, offset: 4992)
!3944 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !247, file: !80, line: 535, baseType: !224, size: 32, offset: 5024)
!3945 = !DIDerivedType(tag: DW_TAG_member, name: "devres_lock", scope: !247, file: !80, line: 537, baseType: !270, offset: 5056)
!3946 = !DIDerivedType(tag: DW_TAG_member, name: "devres_head", scope: !247, file: !80, line: 538, baseType: !257, size: 128, offset: 5056)
!3947 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !247, file: !80, line: 540, baseType: !3948, size: 64, offset: 5184)
!3948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3949, size: 64)
!3949 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "class", file: !3950, line: 54, size: 960, elements: !3951)
!3950 = !DIFile(filename: "./include/linux/device/class.h", directory: "/home/lizy2001/genbc/linux")
!3951 = !{!3952, !3953, !3954, !3955, !3956, !3957, !3958, !3962, !3966, !3967, !3968, !3969, !3973, !3977, !3978}
!3952 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3949, file: !3950, line: 55, baseType: !254, size: 64)
!3953 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3949, file: !3950, line: 56, baseType: !206, size: 64, offset: 64)
!3954 = !DIDerivedType(tag: DW_TAG_member, name: "class_groups", scope: !3949, file: !3950, line: 58, baseType: !363, size: 64, offset: 128)
!3955 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !3949, file: !3950, line: 59, baseType: !363, size: 64, offset: 192)
!3956 = !DIDerivedType(tag: DW_TAG_member, name: "dev_kobj", scope: !3949, file: !3950, line: 60, baseType: !263, size: 64, offset: 256)
!3957 = !DIDerivedType(tag: DW_TAG_member, name: "dev_uevent", scope: !3949, file: !3950, line: 62, baseType: !3458, size: 64, offset: 320)
!3958 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !3949, file: !3950, line: 63, baseType: !3959, size: 64, offset: 384)
!3959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3960, size: 64)
!3960 = !DISubroutineType(types: !3961)
!3961 = !{!311, !246, !3465}
!3962 = !DIDerivedType(tag: DW_TAG_member, name: "class_release", scope: !3949, file: !3950, line: 65, baseType: !3963, size: 64, offset: 448)
!3963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3964, size: 64)
!3964 = !DISubroutineType(types: !3965)
!3965 = !{null, !3948}
!3966 = !DIDerivedType(tag: DW_TAG_member, name: "dev_release", scope: !3949, file: !3950, line: 66, baseType: !3467, size: 64, offset: 512)
!3967 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown_pre", scope: !3949, file: !3950, line: 68, baseType: !3476, size: 64, offset: 576)
!3968 = !DIDerivedType(tag: DW_TAG_member, name: "ns_type", scope: !3949, file: !3950, line: 70, baseType: !3272, size: 64, offset: 640)
!3969 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !3949, file: !3950, line: 71, baseType: !3970, size: 64, offset: 704)
!3970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3971, size: 64)
!3971 = !DISubroutineType(types: !3972)
!3972 = !{!2210, !246}
!3973 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !3949, file: !3950, line: 73, baseType: !3974, size: 64, offset: 768)
!3974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3975, size: 64)
!3975 = !DISubroutineType(types: !3976)
!3976 = !{null, !246, !3304, !3305}
!3977 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3949, file: !3950, line: 75, baseType: !3471, size: 64, offset: 832)
!3978 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3949, file: !3950, line: 77, baseType: !3588, size: 64, offset: 896)
!3979 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !247, file: !80, line: 541, baseType: !363, size: 64, offset: 5248)
!3980 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !247, file: !80, line: 543, baseType: !3467, size: 64, offset: 5312)
!3981 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_group", scope: !247, file: !80, line: 544, baseType: !3982, size: 64, offset: 5376)
!3982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3983, size: 64)
!3983 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_group", file: !80, line: 45, flags: DIFlagFwdDecl)
!3984 = !DIDerivedType(tag: DW_TAG_member, name: "iommu", scope: !247, file: !80, line: 545, baseType: !3985, size: 64, offset: 5440)
!3985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3986, size: 64)
!3986 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_iommu", file: !80, line: 47, flags: DIFlagFwdDecl)
!3987 = !DIDerivedType(tag: DW_TAG_member, name: "offline_disabled", scope: !247, file: !80, line: 547, baseType: !521, size: 1, offset: 5504, flags: DIFlagBitField, extraData: i64 5504)
!3988 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !247, file: !80, line: 548, baseType: !521, size: 1, offset: 5505, flags: DIFlagBitField, extraData: i64 5504)
!3989 = !DIDerivedType(tag: DW_TAG_member, name: "of_node_reused", scope: !247, file: !80, line: 549, baseType: !521, size: 1, offset: 5506, flags: DIFlagBitField, extraData: i64 5504)
!3990 = !DIDerivedType(tag: DW_TAG_member, name: "state_synced", scope: !247, file: !80, line: 550, baseType: !521, size: 1, offset: 5507, flags: DIFlagBitField, extraData: i64 5504)
!3991 = !DIDerivedType(tag: DW_TAG_member, name: "sysdev", scope: !243, file: !6, line: 426, baseType: !246, size: 64, offset: 64)
!3992 = !DIDerivedType(tag: DW_TAG_member, name: "busnum", scope: !243, file: !6, line: 427, baseType: !217, size: 32, offset: 128)
!3993 = !DIDerivedType(tag: DW_TAG_member, name: "bus_name", scope: !243, file: !6, line: 428, baseType: !254, size: 64, offset: 192)
!3994 = !DIDerivedType(tag: DW_TAG_member, name: "uses_pio_for_control", scope: !243, file: !6, line: 429, baseType: !1382, size: 8, offset: 256)
!3995 = !DIDerivedType(tag: DW_TAG_member, name: "otg_port", scope: !243, file: !6, line: 433, baseType: !1382, size: 8, offset: 264)
!3996 = !DIDerivedType(tag: DW_TAG_member, name: "is_b_host", scope: !243, file: !6, line: 434, baseType: !7, size: 1, offset: 272, flags: DIFlagBitField, extraData: i64 272)
!3997 = !DIDerivedType(tag: DW_TAG_member, name: "b_hnp_enable", scope: !243, file: !6, line: 435, baseType: !7, size: 1, offset: 273, flags: DIFlagBitField, extraData: i64 272)
!3998 = !DIDerivedType(tag: DW_TAG_member, name: "no_stop_on_short", scope: !243, file: !6, line: 436, baseType: !7, size: 1, offset: 274, flags: DIFlagBitField, extraData: i64 272)
!3999 = !DIDerivedType(tag: DW_TAG_member, name: "no_sg_constraint", scope: !243, file: !6, line: 441, baseType: !7, size: 1, offset: 275, flags: DIFlagBitField, extraData: i64 272)
!4000 = !DIDerivedType(tag: DW_TAG_member, name: "sg_tablesize", scope: !243, file: !6, line: 442, baseType: !7, size: 32, offset: 288)
!4001 = !DIDerivedType(tag: DW_TAG_member, name: "devnum_next", scope: !243, file: !6, line: 444, baseType: !217, size: 32, offset: 320)
!4002 = !DIDerivedType(tag: DW_TAG_member, name: "devnum_next_mutex", scope: !243, file: !6, line: 446, baseType: !1204, size: 192, offset: 384)
!4003 = !DIDerivedType(tag: DW_TAG_member, name: "devmap", scope: !243, file: !6, line: 448, baseType: !4004, size: 128, offset: 576)
!4004 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_devmap", file: !6, line: 417, size: 128, elements: !4005)
!4005 = !{!4006}
!4006 = !DIDerivedType(tag: DW_TAG_member, name: "devicemap", scope: !4004, file: !6, line: 418, baseType: !4007, size: 128)
!4007 = !DICompositeType(tag: DW_TAG_array_type, baseType: !212, size: 128, elements: !238)
!4008 = !DIDerivedType(tag: DW_TAG_member, name: "root_hub", scope: !243, file: !6, line: 449, baseType: !213, size: 64, offset: 704)
!4009 = !DIDerivedType(tag: DW_TAG_member, name: "hs_companion", scope: !243, file: !6, line: 450, baseType: !242, size: 64, offset: 768)
!4010 = !DIDerivedType(tag: DW_TAG_member, name: "bandwidth_allocated", scope: !243, file: !6, line: 452, baseType: !217, size: 32, offset: 832)
!4011 = !DIDerivedType(tag: DW_TAG_member, name: "bandwidth_int_reqs", scope: !243, file: !6, line: 459, baseType: !217, size: 32, offset: 864)
!4012 = !DIDerivedType(tag: DW_TAG_member, name: "bandwidth_isoc_reqs", scope: !243, file: !6, line: 460, baseType: !217, size: 32, offset: 896)
!4013 = !DIDerivedType(tag: DW_TAG_member, name: "resuming_ports", scope: !243, file: !6, line: 462, baseType: !7, size: 32, offset: 928)
!4014 = !DIDerivedType(tag: DW_TAG_member, name: "ep0", scope: !214, file: !6, line: 647, baseType: !4015, size: 640, offset: 640)
!4015 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_host_endpoint", file: !6, line: 67, size: 640, elements: !4016)
!4016 = !{!4017, !4029, !4037, !4045, !4046, !4047, !4050, !4052, !4053, !4054}
!4017 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !4015, file: !6, line: 68, baseType: !4018, size: 72)
!4018 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_endpoint_descriptor", file: !115, line: 407, size: 72, elements: !4019)
!4019 = !{!4020, !4021, !4022, !4023, !4024, !4026, !4027, !4028}
!4020 = !DIDerivedType(tag: DW_TAG_member, name: "bLength", scope: !4018, file: !115, line: 408, baseType: !1383, size: 8)
!4021 = !DIDerivedType(tag: DW_TAG_member, name: "bDescriptorType", scope: !4018, file: !115, line: 409, baseType: !1383, size: 8, offset: 8)
!4022 = !DIDerivedType(tag: DW_TAG_member, name: "bEndpointAddress", scope: !4018, file: !115, line: 411, baseType: !1383, size: 8, offset: 16)
!4023 = !DIDerivedType(tag: DW_TAG_member, name: "bmAttributes", scope: !4018, file: !115, line: 412, baseType: !1383, size: 8, offset: 24)
!4024 = !DIDerivedType(tag: DW_TAG_member, name: "wMaxPacketSize", scope: !4018, file: !115, line: 413, baseType: !4025, size: 16, offset: 32)
!4025 = !DIDerivedType(tag: DW_TAG_typedef, name: "__le16", file: !2989, line: 29, baseType: !891)
!4026 = !DIDerivedType(tag: DW_TAG_member, name: "bInterval", scope: !4018, file: !115, line: 414, baseType: !1383, size: 8, offset: 48)
!4027 = !DIDerivedType(tag: DW_TAG_member, name: "bRefresh", scope: !4018, file: !115, line: 418, baseType: !1383, size: 8, offset: 56)
!4028 = !DIDerivedType(tag: DW_TAG_member, name: "bSynchAddress", scope: !4018, file: !115, line: 419, baseType: !1383, size: 8, offset: 64)
!4029 = !DIDerivedType(tag: DW_TAG_member, name: "ss_ep_comp", scope: !4015, file: !6, line: 69, baseType: !4030, size: 48, offset: 72)
!4030 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_ss_ep_comp_descriptor", file: !115, line: 689, size: 48, elements: !4031)
!4031 = !{!4032, !4033, !4034, !4035, !4036}
!4032 = !DIDerivedType(tag: DW_TAG_member, name: "bLength", scope: !4030, file: !115, line: 690, baseType: !1383, size: 8)
!4033 = !DIDerivedType(tag: DW_TAG_member, name: "bDescriptorType", scope: !4030, file: !115, line: 691, baseType: !1383, size: 8, offset: 8)
!4034 = !DIDerivedType(tag: DW_TAG_member, name: "bMaxBurst", scope: !4030, file: !115, line: 693, baseType: !1383, size: 8, offset: 16)
!4035 = !DIDerivedType(tag: DW_TAG_member, name: "bmAttributes", scope: !4030, file: !115, line: 694, baseType: !1383, size: 8, offset: 24)
!4036 = !DIDerivedType(tag: DW_TAG_member, name: "wBytesPerInterval", scope: !4030, file: !115, line: 695, baseType: !4025, size: 16, offset: 32)
!4037 = !DIDerivedType(tag: DW_TAG_member, name: "ssp_isoc_ep_comp", scope: !4015, file: !6, line: 70, baseType: !4038, size: 64, offset: 120)
!4038 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_ssp_isoc_ep_comp_descriptor", file: !115, line: 677, size: 64, elements: !4039)
!4039 = !{!4040, !4041, !4042, !4043}
!4040 = !DIDerivedType(tag: DW_TAG_member, name: "bLength", scope: !4038, file: !115, line: 678, baseType: !1383, size: 8)
!4041 = !DIDerivedType(tag: DW_TAG_member, name: "bDescriptorType", scope: !4038, file: !115, line: 679, baseType: !1383, size: 8, offset: 8)
!4042 = !DIDerivedType(tag: DW_TAG_member, name: "wReseved", scope: !4038, file: !115, line: 680, baseType: !4025, size: 16, offset: 16)
!4043 = !DIDerivedType(tag: DW_TAG_member, name: "dwBytesPerInterval", scope: !4038, file: !115, line: 681, baseType: !4044, size: 32, offset: 32)
!4044 = !DIDerivedType(tag: DW_TAG_typedef, name: "__le32", file: !2989, line: 31, baseType: !226)
!4045 = !DIDerivedType(tag: DW_TAG_member, name: "urb_list", scope: !4015, file: !6, line: 71, baseType: !257, size: 128, offset: 192)
!4046 = !DIDerivedType(tag: DW_TAG_member, name: "hcpriv", scope: !4015, file: !6, line: 72, baseType: !211, size: 64, offset: 320)
!4047 = !DIDerivedType(tag: DW_TAG_member, name: "ep_dev", scope: !4015, file: !6, line: 73, baseType: !4048, size: 64, offset: 384)
!4048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4049, size: 64)
!4049 = !DICompositeType(tag: DW_TAG_structure_type, name: "ep_device", file: !6, line: 48, flags: DIFlagFwdDecl)
!4050 = !DIDerivedType(tag: DW_TAG_member, name: "extra", scope: !4015, file: !6, line: 75, baseType: !4051, size: 64, offset: 448)
!4051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !458, size: 64)
!4052 = !DIDerivedType(tag: DW_TAG_member, name: "extralen", scope: !4015, file: !6, line: 76, baseType: !217, size: 32, offset: 512)
!4053 = !DIDerivedType(tag: DW_TAG_member, name: "enabled", scope: !4015, file: !6, line: 77, baseType: !217, size: 32, offset: 544)
!4054 = !DIDerivedType(tag: DW_TAG_member, name: "streams", scope: !4015, file: !6, line: 78, baseType: !217, size: 32, offset: 576)
!4055 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !214, file: !6, line: 649, baseType: !247, size: 5568, offset: 1280)
!4056 = !DIDerivedType(tag: DW_TAG_member, name: "descriptor", scope: !214, file: !6, line: 651, baseType: !4057, size: 144, offset: 6848)
!4057 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_device_descriptor", file: !115, line: 289, size: 144, elements: !4058)
!4058 = !{!4059, !4060, !4061, !4062, !4063, !4064, !4065, !4066, !4067, !4068, !4069, !4070, !4071, !4072}
!4059 = !DIDerivedType(tag: DW_TAG_member, name: "bLength", scope: !4057, file: !115, line: 290, baseType: !1383, size: 8)
!4060 = !DIDerivedType(tag: DW_TAG_member, name: "bDescriptorType", scope: !4057, file: !115, line: 291, baseType: !1383, size: 8, offset: 8)
!4061 = !DIDerivedType(tag: DW_TAG_member, name: "bcdUSB", scope: !4057, file: !115, line: 293, baseType: !4025, size: 16, offset: 16)
!4062 = !DIDerivedType(tag: DW_TAG_member, name: "bDeviceClass", scope: !4057, file: !115, line: 294, baseType: !1383, size: 8, offset: 32)
!4063 = !DIDerivedType(tag: DW_TAG_member, name: "bDeviceSubClass", scope: !4057, file: !115, line: 295, baseType: !1383, size: 8, offset: 40)
!4064 = !DIDerivedType(tag: DW_TAG_member, name: "bDeviceProtocol", scope: !4057, file: !115, line: 296, baseType: !1383, size: 8, offset: 48)
!4065 = !DIDerivedType(tag: DW_TAG_member, name: "bMaxPacketSize0", scope: !4057, file: !115, line: 297, baseType: !1383, size: 8, offset: 56)
!4066 = !DIDerivedType(tag: DW_TAG_member, name: "idVendor", scope: !4057, file: !115, line: 298, baseType: !4025, size: 16, offset: 64)
!4067 = !DIDerivedType(tag: DW_TAG_member, name: "idProduct", scope: !4057, file: !115, line: 299, baseType: !4025, size: 16, offset: 80)
!4068 = !DIDerivedType(tag: DW_TAG_member, name: "bcdDevice", scope: !4057, file: !115, line: 300, baseType: !4025, size: 16, offset: 96)
!4069 = !DIDerivedType(tag: DW_TAG_member, name: "iManufacturer", scope: !4057, file: !115, line: 301, baseType: !1383, size: 8, offset: 112)
!4070 = !DIDerivedType(tag: DW_TAG_member, name: "iProduct", scope: !4057, file: !115, line: 302, baseType: !1383, size: 8, offset: 120)
!4071 = !DIDerivedType(tag: DW_TAG_member, name: "iSerialNumber", scope: !4057, file: !115, line: 303, baseType: !1383, size: 8, offset: 128)
!4072 = !DIDerivedType(tag: DW_TAG_member, name: "bNumConfigurations", scope: !4057, file: !115, line: 304, baseType: !1383, size: 8, offset: 136)
!4073 = !DIDerivedType(tag: DW_TAG_member, name: "bos", scope: !214, file: !6, line: 652, baseType: !4074, size: 64, offset: 7040)
!4074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4075, size: 64)
!4075 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_host_bos", file: !6, line: 396, size: 384, elements: !4076)
!4076 = !{!4077, !4085, !4093, !4105, !4118, !4127}
!4077 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !4075, file: !6, line: 397, baseType: !4078, size: 64)
!4078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4079, size: 64)
!4079 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_bos_descriptor", file: !115, line: 844, size: 40, elements: !4080)
!4080 = !{!4081, !4082, !4083, !4084}
!4081 = !DIDerivedType(tag: DW_TAG_member, name: "bLength", scope: !4079, file: !115, line: 845, baseType: !1383, size: 8)
!4082 = !DIDerivedType(tag: DW_TAG_member, name: "bDescriptorType", scope: !4079, file: !115, line: 846, baseType: !1383, size: 8, offset: 8)
!4083 = !DIDerivedType(tag: DW_TAG_member, name: "wTotalLength", scope: !4079, file: !115, line: 848, baseType: !4025, size: 16, offset: 16)
!4084 = !DIDerivedType(tag: DW_TAG_member, name: "bNumDeviceCaps", scope: !4079, file: !115, line: 849, baseType: !1383, size: 8, offset: 32)
!4085 = !DIDerivedType(tag: DW_TAG_member, name: "ext_cap", scope: !4075, file: !6, line: 400, baseType: !4086, size: 64, offset: 64)
!4086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4087, size: 64)
!4087 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_ext_cap_descriptor", file: !115, line: 895, size: 56, elements: !4088)
!4088 = !{!4089, !4090, !4091, !4092}
!4089 = !DIDerivedType(tag: DW_TAG_member, name: "bLength", scope: !4087, file: !115, line: 896, baseType: !1383, size: 8)
!4090 = !DIDerivedType(tag: DW_TAG_member, name: "bDescriptorType", scope: !4087, file: !115, line: 897, baseType: !1383, size: 8, offset: 8)
!4091 = !DIDerivedType(tag: DW_TAG_member, name: "bDevCapabilityType", scope: !4087, file: !115, line: 898, baseType: !1383, size: 8, offset: 16)
!4092 = !DIDerivedType(tag: DW_TAG_member, name: "bmAttributes", scope: !4087, file: !115, line: 899, baseType: !4044, size: 32, offset: 24)
!4093 = !DIDerivedType(tag: DW_TAG_member, name: "ss_cap", scope: !4075, file: !6, line: 401, baseType: !4094, size: 64, offset: 128)
!4094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4095, size: 64)
!4095 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_ss_cap_descriptor", file: !115, line: 917, size: 80, elements: !4096)
!4096 = !{!4097, !4098, !4099, !4100, !4101, !4102, !4103, !4104}
!4097 = !DIDerivedType(tag: DW_TAG_member, name: "bLength", scope: !4095, file: !115, line: 918, baseType: !1383, size: 8)
!4098 = !DIDerivedType(tag: DW_TAG_member, name: "bDescriptorType", scope: !4095, file: !115, line: 919, baseType: !1383, size: 8, offset: 8)
!4099 = !DIDerivedType(tag: DW_TAG_member, name: "bDevCapabilityType", scope: !4095, file: !115, line: 920, baseType: !1383, size: 8, offset: 16)
!4100 = !DIDerivedType(tag: DW_TAG_member, name: "bmAttributes", scope: !4095, file: !115, line: 921, baseType: !1383, size: 8, offset: 24)
!4101 = !DIDerivedType(tag: DW_TAG_member, name: "wSpeedSupported", scope: !4095, file: !115, line: 923, baseType: !4025, size: 16, offset: 32)
!4102 = !DIDerivedType(tag: DW_TAG_member, name: "bFunctionalitySupport", scope: !4095, file: !115, line: 928, baseType: !1383, size: 8, offset: 48)
!4103 = !DIDerivedType(tag: DW_TAG_member, name: "bU1devExitLat", scope: !4095, file: !115, line: 929, baseType: !1383, size: 8, offset: 56)
!4104 = !DIDerivedType(tag: DW_TAG_member, name: "bU2DevExitLat", scope: !4095, file: !115, line: 930, baseType: !4025, size: 16, offset: 64)
!4105 = !DIDerivedType(tag: DW_TAG_member, name: "ssp_cap", scope: !4075, file: !6, line: 402, baseType: !4106, size: 64, offset: 192)
!4106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4107, size: 64)
!4107 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_ssp_cap_descriptor", file: !115, line: 955, size: 128, elements: !4108)
!4108 = !{!4109, !4110, !4111, !4112, !4113, !4114, !4115, !4116}
!4109 = !DIDerivedType(tag: DW_TAG_member, name: "bLength", scope: !4107, file: !115, line: 956, baseType: !1383, size: 8)
!4110 = !DIDerivedType(tag: DW_TAG_member, name: "bDescriptorType", scope: !4107, file: !115, line: 957, baseType: !1383, size: 8, offset: 8)
!4111 = !DIDerivedType(tag: DW_TAG_member, name: "bDevCapabilityType", scope: !4107, file: !115, line: 958, baseType: !1383, size: 8, offset: 16)
!4112 = !DIDerivedType(tag: DW_TAG_member, name: "bReserved", scope: !4107, file: !115, line: 959, baseType: !1383, size: 8, offset: 24)
!4113 = !DIDerivedType(tag: DW_TAG_member, name: "bmAttributes", scope: !4107, file: !115, line: 960, baseType: !4044, size: 32, offset: 32)
!4114 = !DIDerivedType(tag: DW_TAG_member, name: "wFunctionalitySupport", scope: !4107, file: !115, line: 963, baseType: !4025, size: 16, offset: 64)
!4115 = !DIDerivedType(tag: DW_TAG_member, name: "wReserved", scope: !4107, file: !115, line: 967, baseType: !4025, size: 16, offset: 80)
!4116 = !DIDerivedType(tag: DW_TAG_member, name: "bmSublinkSpeedAttr", scope: !4107, file: !115, line: 968, baseType: !4117, size: 32, offset: 96)
!4117 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4044, size: 32, elements: !1401)
!4118 = !DIDerivedType(tag: DW_TAG_member, name: "ss_id", scope: !4075, file: !6, line: 403, baseType: !4119, size: 64, offset: 256)
!4119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4120, size: 64)
!4120 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_ss_container_id_descriptor", file: !115, line: 940, size: 160, elements: !4121)
!4121 = !{!4122, !4123, !4124, !4125, !4126}
!4122 = !DIDerivedType(tag: DW_TAG_member, name: "bLength", scope: !4120, file: !115, line: 941, baseType: !1383, size: 8)
!4123 = !DIDerivedType(tag: DW_TAG_member, name: "bDescriptorType", scope: !4120, file: !115, line: 942, baseType: !1383, size: 8, offset: 8)
!4124 = !DIDerivedType(tag: DW_TAG_member, name: "bDevCapabilityType", scope: !4120, file: !115, line: 943, baseType: !1383, size: 8, offset: 16)
!4125 = !DIDerivedType(tag: DW_TAG_member, name: "bReserved", scope: !4120, file: !115, line: 944, baseType: !1383, size: 8, offset: 24)
!4126 = !DIDerivedType(tag: DW_TAG_member, name: "ContainerID", scope: !4120, file: !115, line: 945, baseType: !2790, size: 128, offset: 32)
!4127 = !DIDerivedType(tag: DW_TAG_member, name: "ptm_cap", scope: !4075, file: !6, line: 404, baseType: !4128, size: 64, offset: 320)
!4128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4129, size: 64)
!4129 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_ptm_cap_descriptor", file: !115, line: 1080, size: 24, elements: !4130)
!4130 = !{!4131, !4132, !4133}
!4131 = !DIDerivedType(tag: DW_TAG_member, name: "bLength", scope: !4129, file: !115, line: 1081, baseType: !1383, size: 8)
!4132 = !DIDerivedType(tag: DW_TAG_member, name: "bDescriptorType", scope: !4129, file: !115, line: 1082, baseType: !1383, size: 8, offset: 8)
!4133 = !DIDerivedType(tag: DW_TAG_member, name: "bDevCapabilityType", scope: !4129, file: !115, line: 1083, baseType: !1383, size: 8, offset: 16)
!4134 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !214, file: !6, line: 653, baseType: !4135, size: 64, offset: 7104)
!4135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4136, size: 64)
!4136 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_host_config", file: !6, line: 374, size: 5440, elements: !4137)
!4137 = !{!4138, !4149, !4150, !4163, !4205, !4214, !4215}
!4138 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !4136, file: !6, line: 375, baseType: !4139, size: 72)
!4139 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_config_descriptor", file: !115, line: 349, size: 72, elements: !4140)
!4140 = !{!4141, !4142, !4143, !4144, !4145, !4146, !4147, !4148}
!4141 = !DIDerivedType(tag: DW_TAG_member, name: "bLength", scope: !4139, file: !115, line: 350, baseType: !1383, size: 8)
!4142 = !DIDerivedType(tag: DW_TAG_member, name: "bDescriptorType", scope: !4139, file: !115, line: 351, baseType: !1383, size: 8, offset: 8)
!4143 = !DIDerivedType(tag: DW_TAG_member, name: "wTotalLength", scope: !4139, file: !115, line: 353, baseType: !4025, size: 16, offset: 16)
!4144 = !DIDerivedType(tag: DW_TAG_member, name: "bNumInterfaces", scope: !4139, file: !115, line: 354, baseType: !1383, size: 8, offset: 32)
!4145 = !DIDerivedType(tag: DW_TAG_member, name: "bConfigurationValue", scope: !4139, file: !115, line: 355, baseType: !1383, size: 8, offset: 40)
!4146 = !DIDerivedType(tag: DW_TAG_member, name: "iConfiguration", scope: !4139, file: !115, line: 356, baseType: !1383, size: 8, offset: 48)
!4147 = !DIDerivedType(tag: DW_TAG_member, name: "bmAttributes", scope: !4139, file: !115, line: 357, baseType: !1383, size: 8, offset: 56)
!4148 = !DIDerivedType(tag: DW_TAG_member, name: "bMaxPower", scope: !4139, file: !115, line: 358, baseType: !1383, size: 8, offset: 64)
!4149 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !4136, file: !6, line: 377, baseType: !311, size: 64, offset: 128)
!4150 = !DIDerivedType(tag: DW_TAG_member, name: "intf_assoc", scope: !4136, file: !6, line: 381, baseType: !4151, size: 1024, offset: 192)
!4151 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4152, size: 1024, elements: !221)
!4152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4153, size: 64)
!4153 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_interface_assoc_descriptor", file: !115, line: 783, size: 64, elements: !4154)
!4154 = !{!4155, !4156, !4157, !4158, !4159, !4160, !4161, !4162}
!4155 = !DIDerivedType(tag: DW_TAG_member, name: "bLength", scope: !4153, file: !115, line: 784, baseType: !1383, size: 8)
!4156 = !DIDerivedType(tag: DW_TAG_member, name: "bDescriptorType", scope: !4153, file: !115, line: 785, baseType: !1383, size: 8, offset: 8)
!4157 = !DIDerivedType(tag: DW_TAG_member, name: "bFirstInterface", scope: !4153, file: !115, line: 787, baseType: !1383, size: 8, offset: 16)
!4158 = !DIDerivedType(tag: DW_TAG_member, name: "bInterfaceCount", scope: !4153, file: !115, line: 788, baseType: !1383, size: 8, offset: 24)
!4159 = !DIDerivedType(tag: DW_TAG_member, name: "bFunctionClass", scope: !4153, file: !115, line: 789, baseType: !1383, size: 8, offset: 32)
!4160 = !DIDerivedType(tag: DW_TAG_member, name: "bFunctionSubClass", scope: !4153, file: !115, line: 790, baseType: !1383, size: 8, offset: 40)
!4161 = !DIDerivedType(tag: DW_TAG_member, name: "bFunctionProtocol", scope: !4153, file: !115, line: 791, baseType: !1383, size: 8, offset: 48)
!4162 = !DIDerivedType(tag: DW_TAG_member, name: "iFunction", scope: !4153, file: !115, line: 792, baseType: !1383, size: 8, offset: 56)
!4163 = !DIDerivedType(tag: DW_TAG_member, name: "interface", scope: !4136, file: !6, line: 385, baseType: !4164, size: 2048, offset: 1216)
!4164 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4165, size: 2048, elements: !2313)
!4165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4166, size: 64)
!4166 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_interface", file: !6, line: 232, size: 6272, elements: !4167)
!4167 = !{!4168, !4189, !4190, !4191, !4192, !4193, !4194, !4195, !4196, !4197, !4198, !4199, !4200, !4201, !4202, !4203, !4204}
!4168 = !DIDerivedType(tag: DW_TAG_member, name: "altsetting", scope: !4166, file: !6, line: 235, baseType: !4169, size: 64)
!4169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4170, size: 64)
!4170 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_host_interface", file: !6, line: 82, size: 320, elements: !4171)
!4171 = !{!4172, !4184, !4185, !4186, !4188}
!4172 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !4170, file: !6, line: 83, baseType: !4173, size: 72)
!4173 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_interface_descriptor", file: !115, line: 389, size: 72, elements: !4174)
!4174 = !{!4175, !4176, !4177, !4178, !4179, !4180, !4181, !4182, !4183}
!4175 = !DIDerivedType(tag: DW_TAG_member, name: "bLength", scope: !4173, file: !115, line: 390, baseType: !1383, size: 8)
!4176 = !DIDerivedType(tag: DW_TAG_member, name: "bDescriptorType", scope: !4173, file: !115, line: 391, baseType: !1383, size: 8, offset: 8)
!4177 = !DIDerivedType(tag: DW_TAG_member, name: "bInterfaceNumber", scope: !4173, file: !115, line: 393, baseType: !1383, size: 8, offset: 16)
!4178 = !DIDerivedType(tag: DW_TAG_member, name: "bAlternateSetting", scope: !4173, file: !115, line: 394, baseType: !1383, size: 8, offset: 24)
!4179 = !DIDerivedType(tag: DW_TAG_member, name: "bNumEndpoints", scope: !4173, file: !115, line: 395, baseType: !1383, size: 8, offset: 32)
!4180 = !DIDerivedType(tag: DW_TAG_member, name: "bInterfaceClass", scope: !4173, file: !115, line: 396, baseType: !1383, size: 8, offset: 40)
!4181 = !DIDerivedType(tag: DW_TAG_member, name: "bInterfaceSubClass", scope: !4173, file: !115, line: 397, baseType: !1383, size: 8, offset: 48)
!4182 = !DIDerivedType(tag: DW_TAG_member, name: "bInterfaceProtocol", scope: !4173, file: !115, line: 398, baseType: !1383, size: 8, offset: 56)
!4183 = !DIDerivedType(tag: DW_TAG_member, name: "iInterface", scope: !4173, file: !115, line: 399, baseType: !1383, size: 8, offset: 64)
!4184 = !DIDerivedType(tag: DW_TAG_member, name: "extralen", scope: !4170, file: !6, line: 85, baseType: !217, size: 32, offset: 96)
!4185 = !DIDerivedType(tag: DW_TAG_member, name: "extra", scope: !4170, file: !6, line: 86, baseType: !4051, size: 64, offset: 128)
!4186 = !DIDerivedType(tag: DW_TAG_member, name: "endpoint", scope: !4170, file: !6, line: 91, baseType: !4187, size: 64, offset: 192)
!4187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4015, size: 64)
!4188 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !4170, file: !6, line: 93, baseType: !311, size: 64, offset: 256)
!4189 = !DIDerivedType(tag: DW_TAG_member, name: "cur_altsetting", scope: !4166, file: !6, line: 237, baseType: !4169, size: 64, offset: 64)
!4190 = !DIDerivedType(tag: DW_TAG_member, name: "num_altsetting", scope: !4166, file: !6, line: 239, baseType: !7, size: 32, offset: 128)
!4191 = !DIDerivedType(tag: DW_TAG_member, name: "intf_assoc", scope: !4166, file: !6, line: 243, baseType: !4152, size: 64, offset: 192)
!4192 = !DIDerivedType(tag: DW_TAG_member, name: "minor", scope: !4166, file: !6, line: 245, baseType: !217, size: 32, offset: 256)
!4193 = !DIDerivedType(tag: DW_TAG_member, name: "condition", scope: !4166, file: !6, line: 247, baseType: !5, size: 32, offset: 288)
!4194 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_files_created", scope: !4166, file: !6, line: 248, baseType: !7, size: 1, offset: 320, flags: DIFlagBitField, extraData: i64 320)
!4195 = !DIDerivedType(tag: DW_TAG_member, name: "ep_devs_created", scope: !4166, file: !6, line: 249, baseType: !7, size: 1, offset: 321, flags: DIFlagBitField, extraData: i64 320)
!4196 = !DIDerivedType(tag: DW_TAG_member, name: "unregistering", scope: !4166, file: !6, line: 250, baseType: !7, size: 1, offset: 322, flags: DIFlagBitField, extraData: i64 320)
!4197 = !DIDerivedType(tag: DW_TAG_member, name: "needs_remote_wakeup", scope: !4166, file: !6, line: 251, baseType: !7, size: 1, offset: 323, flags: DIFlagBitField, extraData: i64 320)
!4198 = !DIDerivedType(tag: DW_TAG_member, name: "needs_altsetting0", scope: !4166, file: !6, line: 252, baseType: !7, size: 1, offset: 324, flags: DIFlagBitField, extraData: i64 320)
!4199 = !DIDerivedType(tag: DW_TAG_member, name: "needs_binding", scope: !4166, file: !6, line: 253, baseType: !7, size: 1, offset: 325, flags: DIFlagBitField, extraData: i64 320)
!4200 = !DIDerivedType(tag: DW_TAG_member, name: "resetting_device", scope: !4166, file: !6, line: 254, baseType: !7, size: 1, offset: 326, flags: DIFlagBitField, extraData: i64 320)
!4201 = !DIDerivedType(tag: DW_TAG_member, name: "authorized", scope: !4166, file: !6, line: 255, baseType: !7, size: 1, offset: 327, flags: DIFlagBitField, extraData: i64 320)
!4202 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4166, file: !6, line: 257, baseType: !247, size: 5568, offset: 384)
!4203 = !DIDerivedType(tag: DW_TAG_member, name: "usb_dev", scope: !4166, file: !6, line: 258, baseType: !246, size: 64, offset: 5952)
!4204 = !DIDerivedType(tag: DW_TAG_member, name: "reset_ws", scope: !4166, file: !6, line: 259, baseType: !2041, size: 256, offset: 6016)
!4205 = !DIDerivedType(tag: DW_TAG_member, name: "intf_cache", scope: !4136, file: !6, line: 389, baseType: !4206, size: 2048, offset: 3264)
!4206 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4207, size: 2048, elements: !2313)
!4207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4208, size: 64)
!4208 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_interface_cache", file: !6, line: 322, size: 64, elements: !4209)
!4209 = !{!4210, !4211, !4212}
!4210 = !DIDerivedType(tag: DW_TAG_member, name: "num_altsetting", scope: !4208, file: !6, line: 323, baseType: !7, size: 32)
!4211 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !4208, file: !6, line: 324, baseType: !1529, size: 32, offset: 32)
!4212 = !DIDerivedType(tag: DW_TAG_member, name: "altsetting", scope: !4208, file: !6, line: 328, baseType: !4213, offset: 64)
!4213 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4170, elements: !2414)
!4214 = !DIDerivedType(tag: DW_TAG_member, name: "extra", scope: !4136, file: !6, line: 391, baseType: !4051, size: 64, offset: 5312)
!4215 = !DIDerivedType(tag: DW_TAG_member, name: "extralen", scope: !4136, file: !6, line: 392, baseType: !217, size: 32, offset: 5376)
!4216 = !DIDerivedType(tag: DW_TAG_member, name: "actconfig", scope: !214, file: !6, line: 655, baseType: !4135, size: 64, offset: 7168)
!4217 = !DIDerivedType(tag: DW_TAG_member, name: "ep_in", scope: !214, file: !6, line: 656, baseType: !4218, size: 1024, offset: 7232)
!4218 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4187, size: 1024, elements: !221)
!4219 = !DIDerivedType(tag: DW_TAG_member, name: "ep_out", scope: !214, file: !6, line: 657, baseType: !4218, size: 1024, offset: 8256)
!4220 = !DIDerivedType(tag: DW_TAG_member, name: "rawdescriptors", scope: !214, file: !6, line: 659, baseType: !4221, size: 64, offset: 9280)
!4221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !311, size: 64)
!4222 = !DIDerivedType(tag: DW_TAG_member, name: "bus_mA", scope: !214, file: !6, line: 661, baseType: !352, size: 16, offset: 9344)
!4223 = !DIDerivedType(tag: DW_TAG_member, name: "portnum", scope: !214, file: !6, line: 662, baseType: !1382, size: 8, offset: 9360)
!4224 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !214, file: !6, line: 663, baseType: !1382, size: 8, offset: 9368)
!4225 = !DIDerivedType(tag: DW_TAG_member, name: "devaddr", scope: !214, file: !6, line: 664, baseType: !1382, size: 8, offset: 9376)
!4226 = !DIDerivedType(tag: DW_TAG_member, name: "can_submit", scope: !214, file: !6, line: 666, baseType: !7, size: 1, offset: 9384, flags: DIFlagBitField, extraData: i64 9384)
!4227 = !DIDerivedType(tag: DW_TAG_member, name: "persist_enabled", scope: !214, file: !6, line: 667, baseType: !7, size: 1, offset: 9385, flags: DIFlagBitField, extraData: i64 9384)
!4228 = !DIDerivedType(tag: DW_TAG_member, name: "have_langid", scope: !214, file: !6, line: 668, baseType: !7, size: 1, offset: 9386, flags: DIFlagBitField, extraData: i64 9384)
!4229 = !DIDerivedType(tag: DW_TAG_member, name: "authorized", scope: !214, file: !6, line: 669, baseType: !7, size: 1, offset: 9387, flags: DIFlagBitField, extraData: i64 9384)
!4230 = !DIDerivedType(tag: DW_TAG_member, name: "authenticated", scope: !214, file: !6, line: 670, baseType: !7, size: 1, offset: 9388, flags: DIFlagBitField, extraData: i64 9384)
!4231 = !DIDerivedType(tag: DW_TAG_member, name: "wusb", scope: !214, file: !6, line: 671, baseType: !7, size: 1, offset: 9389, flags: DIFlagBitField, extraData: i64 9384)
!4232 = !DIDerivedType(tag: DW_TAG_member, name: "lpm_capable", scope: !214, file: !6, line: 672, baseType: !7, size: 1, offset: 9390, flags: DIFlagBitField, extraData: i64 9384)
!4233 = !DIDerivedType(tag: DW_TAG_member, name: "usb2_hw_lpm_capable", scope: !214, file: !6, line: 673, baseType: !7, size: 1, offset: 9391, flags: DIFlagBitField, extraData: i64 9384)
!4234 = !DIDerivedType(tag: DW_TAG_member, name: "usb2_hw_lpm_besl_capable", scope: !214, file: !6, line: 674, baseType: !7, size: 1, offset: 9392, flags: DIFlagBitField, extraData: i64 9384)
!4235 = !DIDerivedType(tag: DW_TAG_member, name: "usb2_hw_lpm_enabled", scope: !214, file: !6, line: 675, baseType: !7, size: 1, offset: 9393, flags: DIFlagBitField, extraData: i64 9384)
!4236 = !DIDerivedType(tag: DW_TAG_member, name: "usb2_hw_lpm_allowed", scope: !214, file: !6, line: 676, baseType: !7, size: 1, offset: 9394, flags: DIFlagBitField, extraData: i64 9384)
!4237 = !DIDerivedType(tag: DW_TAG_member, name: "usb3_lpm_u1_enabled", scope: !214, file: !6, line: 677, baseType: !7, size: 1, offset: 9395, flags: DIFlagBitField, extraData: i64 9384)
!4238 = !DIDerivedType(tag: DW_TAG_member, name: "usb3_lpm_u2_enabled", scope: !214, file: !6, line: 678, baseType: !7, size: 1, offset: 9396, flags: DIFlagBitField, extraData: i64 9384)
!4239 = !DIDerivedType(tag: DW_TAG_member, name: "string_langid", scope: !214, file: !6, line: 679, baseType: !217, size: 32, offset: 9408)
!4240 = !DIDerivedType(tag: DW_TAG_member, name: "product", scope: !214, file: !6, line: 682, baseType: !311, size: 64, offset: 9472)
!4241 = !DIDerivedType(tag: DW_TAG_member, name: "manufacturer", scope: !214, file: !6, line: 683, baseType: !311, size: 64, offset: 9536)
!4242 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !214, file: !6, line: 684, baseType: !311, size: 64, offset: 9600)
!4243 = !DIDerivedType(tag: DW_TAG_member, name: "filelist", scope: !214, file: !6, line: 686, baseType: !257, size: 128, offset: 9664)
!4244 = !DIDerivedType(tag: DW_TAG_member, name: "maxchild", scope: !214, file: !6, line: 688, baseType: !217, size: 32, offset: 9792)
!4245 = !DIDerivedType(tag: DW_TAG_member, name: "quirks", scope: !214, file: !6, line: 690, baseType: !224, size: 32, offset: 9824)
!4246 = !DIDerivedType(tag: DW_TAG_member, name: "urbnum", scope: !214, file: !6, line: 691, baseType: !778, size: 32, offset: 9856)
!4247 = !DIDerivedType(tag: DW_TAG_member, name: "active_duration", scope: !214, file: !6, line: 693, baseType: !212, size: 64, offset: 9920)
!4248 = !DIDerivedType(tag: DW_TAG_member, name: "connect_time", scope: !214, file: !6, line: 696, baseType: !212, size: 64, offset: 9984)
!4249 = !DIDerivedType(tag: DW_TAG_member, name: "do_remote_wakeup", scope: !214, file: !6, line: 698, baseType: !7, size: 1, offset: 10048, flags: DIFlagBitField, extraData: i64 10048)
!4250 = !DIDerivedType(tag: DW_TAG_member, name: "reset_resume", scope: !214, file: !6, line: 699, baseType: !7, size: 1, offset: 10049, flags: DIFlagBitField, extraData: i64 10048)
!4251 = !DIDerivedType(tag: DW_TAG_member, name: "port_is_suspended", scope: !214, file: !6, line: 700, baseType: !7, size: 1, offset: 10050, flags: DIFlagBitField, extraData: i64 10048)
!4252 = !DIDerivedType(tag: DW_TAG_member, name: "wusb_dev", scope: !214, file: !6, line: 702, baseType: !4253, size: 64, offset: 10112)
!4253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4254, size: 64)
!4254 = !DICompositeType(tag: DW_TAG_structure_type, name: "wusb_dev", file: !6, line: 28, flags: DIFlagFwdDecl)
!4255 = !DIDerivedType(tag: DW_TAG_member, name: "slot_id", scope: !214, file: !6, line: 703, baseType: !217, size: 32, offset: 10176)
!4256 = !DIDerivedType(tag: DW_TAG_member, name: "removable", scope: !214, file: !6, line: 704, baseType: !135, size: 32, offset: 10208)
!4257 = !DIDerivedType(tag: DW_TAG_member, name: "l1_params", scope: !214, file: !6, line: 705, baseType: !4258, size: 64, offset: 10240)
!4258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb2_lpm_parameters", file: !6, line: 502, size: 64, elements: !4259)
!4259 = !{!4260, !4261}
!4260 = !DIDerivedType(tag: DW_TAG_member, name: "besl", scope: !4258, file: !6, line: 506, baseType: !7, size: 32)
!4261 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !4258, file: !6, line: 512, baseType: !217, size: 32, offset: 32)
!4262 = !DIDerivedType(tag: DW_TAG_member, name: "u1_params", scope: !214, file: !6, line: 706, baseType: !4263, size: 128, offset: 10304)
!4263 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb3_lpm_parameters", file: !6, line: 522, size: 128, elements: !4264)
!4264 = !{!4265, !4266, !4267, !4268}
!4265 = !DIDerivedType(tag: DW_TAG_member, name: "mel", scope: !4263, file: !6, line: 529, baseType: !7, size: 32)
!4266 = !DIDerivedType(tag: DW_TAG_member, name: "pel", scope: !4263, file: !6, line: 535, baseType: !7, size: 32, offset: 32)
!4267 = !DIDerivedType(tag: DW_TAG_member, name: "sel", scope: !4263, file: !6, line: 545, baseType: !7, size: 32, offset: 64)
!4268 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !4263, file: !6, line: 551, baseType: !217, size: 32, offset: 96)
!4269 = !DIDerivedType(tag: DW_TAG_member, name: "u2_params", scope: !214, file: !6, line: 707, baseType: !4263, size: 128, offset: 10432)
!4270 = !DIDerivedType(tag: DW_TAG_member, name: "lpm_disable_count", scope: !214, file: !6, line: 708, baseType: !7, size: 32, offset: 10560)
!4271 = !DIDerivedType(tag: DW_TAG_member, name: "hub_delay", scope: !214, file: !6, line: 710, baseType: !890, size: 16, offset: 10592)
!4272 = !DIDerivedType(tag: DW_TAG_member, name: "use_generic_driver", scope: !214, file: !6, line: 711, baseType: !7, size: 1, offset: 10608, flags: DIFlagBitField, extraData: i64 10608)
!4273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4274, size: 64)
!4274 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "urb_node", file: !3, line: 76, size: 960, elements: !4275)
!4275 = !{!4276, !4277, !4775, !4776}
!4276 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !4274, file: !3, line: 77, baseType: !257, size: 128)
!4277 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4274, file: !3, line: 78, baseType: !4278, size: 64, offset: 128)
!4278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4279, size: 64)
!4279 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ufx_data", file: !3, line: 92, size: 9856, elements: !4280)
!4280 = !{!4281, !4282, !4283, !4748, !4763, !4764, !4765, !4766, !4767, !4768, !4769, !4770, !4771}
!4281 = !DIDerivedType(tag: DW_TAG_member, name: "udev", scope: !4279, file: !3, line: 93, baseType: !213, size: 64)
!4282 = !DIDerivedType(tag: DW_TAG_member, name: "gdev", scope: !4279, file: !3, line: 94, baseType: !246, size: 64, offset: 64)
!4283 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !4279, file: !3, line: 95, baseType: !4284, size: 64, offset: 128)
!4284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4285, size: 64)
!4285 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fb_info", file: !4286, line: 437, size: 8128, elements: !4287)
!4286 = !DIFile(filename: "./include/linux/fb.h", directory: "/home/lizy2001/genbc/linux")
!4287 = !{!4288, !4289, !4290, !4291, !4292, !4293, !4294, !4333, !4352, !4413, !4414, !4432, !4433, !4443, !4444, !4445, !4493, !4494, !4496, !4503, !4518, !4646, !4647, !4648, !4649, !4725, !4730, !4731, !4732, !4733, !4734, !4735, !4747}
!4288 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4285, file: !4286, line: 438, baseType: !778, size: 32)
!4289 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !4285, file: !4286, line: 439, baseType: !217, size: 32, offset: 32)
!4290 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4285, file: !4286, line: 440, baseType: !217, size: 32, offset: 64)
!4291 = !DIDerivedType(tag: DW_TAG_member, name: "fbcon_rotate_hint", scope: !4285, file: !4286, line: 445, baseType: !217, size: 32, offset: 96)
!4292 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4285, file: !4286, line: 446, baseType: !1204, size: 192, offset: 128)
!4293 = !DIDerivedType(tag: DW_TAG_member, name: "mm_lock", scope: !4285, file: !4286, line: 447, baseType: !1204, size: 192, offset: 320)
!4294 = !DIDerivedType(tag: DW_TAG_member, name: "var", scope: !4285, file: !4286, line: 448, baseType: !4295, size: 1280, offset: 512)
!4295 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fb_var_screeninfo", file: !4296, line: 242, size: 1280, elements: !4297)
!4296 = !DIFile(filename: "./include/uapi/linux/fb.h", directory: "/home/lizy2001/genbc/linux")
!4297 = !{!4298, !4299, !4300, !4301, !4302, !4303, !4304, !4305, !4306, !4312, !4313, !4314, !4315, !4316, !4317, !4318, !4319, !4320, !4321, !4322, !4323, !4324, !4325, !4326, !4327, !4328, !4329, !4330, !4331}
!4298 = !DIDerivedType(tag: DW_TAG_member, name: "xres", scope: !4295, file: !4296, line: 243, baseType: !226, size: 32)
!4299 = !DIDerivedType(tag: DW_TAG_member, name: "yres", scope: !4295, file: !4296, line: 244, baseType: !226, size: 32, offset: 32)
!4300 = !DIDerivedType(tag: DW_TAG_member, name: "xres_virtual", scope: !4295, file: !4296, line: 245, baseType: !226, size: 32, offset: 64)
!4301 = !DIDerivedType(tag: DW_TAG_member, name: "yres_virtual", scope: !4295, file: !4296, line: 246, baseType: !226, size: 32, offset: 96)
!4302 = !DIDerivedType(tag: DW_TAG_member, name: "xoffset", scope: !4295, file: !4296, line: 247, baseType: !226, size: 32, offset: 128)
!4303 = !DIDerivedType(tag: DW_TAG_member, name: "yoffset", scope: !4295, file: !4296, line: 248, baseType: !226, size: 32, offset: 160)
!4304 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_pixel", scope: !4295, file: !4296, line: 250, baseType: !226, size: 32, offset: 192)
!4305 = !DIDerivedType(tag: DW_TAG_member, name: "grayscale", scope: !4295, file: !4296, line: 251, baseType: !226, size: 32, offset: 224)
!4306 = !DIDerivedType(tag: DW_TAG_member, name: "red", scope: !4295, file: !4296, line: 253, baseType: !4307, size: 96, offset: 256)
!4307 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fb_bitfield", file: !4296, line: 188, size: 96, elements: !4308)
!4308 = !{!4309, !4310, !4311}
!4309 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !4307, file: !4296, line: 189, baseType: !226, size: 32)
!4310 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !4307, file: !4296, line: 190, baseType: !226, size: 32, offset: 32)
!4311 = !DIDerivedType(tag: DW_TAG_member, name: "msb_right", scope: !4307, file: !4296, line: 191, baseType: !226, size: 32, offset: 64)
!4312 = !DIDerivedType(tag: DW_TAG_member, name: "green", scope: !4295, file: !4296, line: 254, baseType: !4307, size: 96, offset: 352)
!4313 = !DIDerivedType(tag: DW_TAG_member, name: "blue", scope: !4295, file: !4296, line: 255, baseType: !4307, size: 96, offset: 448)
!4314 = !DIDerivedType(tag: DW_TAG_member, name: "transp", scope: !4295, file: !4296, line: 256, baseType: !4307, size: 96, offset: 544)
!4315 = !DIDerivedType(tag: DW_TAG_member, name: "nonstd", scope: !4295, file: !4296, line: 258, baseType: !226, size: 32, offset: 640)
!4316 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !4295, file: !4296, line: 260, baseType: !226, size: 32, offset: 672)
!4317 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !4295, file: !4296, line: 262, baseType: !226, size: 32, offset: 704)
!4318 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !4295, file: !4296, line: 263, baseType: !226, size: 32, offset: 736)
!4319 = !DIDerivedType(tag: DW_TAG_member, name: "accel_flags", scope: !4295, file: !4296, line: 265, baseType: !226, size: 32, offset: 768)
!4320 = !DIDerivedType(tag: DW_TAG_member, name: "pixclock", scope: !4295, file: !4296, line: 268, baseType: !226, size: 32, offset: 800)
!4321 = !DIDerivedType(tag: DW_TAG_member, name: "left_margin", scope: !4295, file: !4296, line: 269, baseType: !226, size: 32, offset: 832)
!4322 = !DIDerivedType(tag: DW_TAG_member, name: "right_margin", scope: !4295, file: !4296, line: 270, baseType: !226, size: 32, offset: 864)
!4323 = !DIDerivedType(tag: DW_TAG_member, name: "upper_margin", scope: !4295, file: !4296, line: 271, baseType: !226, size: 32, offset: 896)
!4324 = !DIDerivedType(tag: DW_TAG_member, name: "lower_margin", scope: !4295, file: !4296, line: 272, baseType: !226, size: 32, offset: 928)
!4325 = !DIDerivedType(tag: DW_TAG_member, name: "hsync_len", scope: !4295, file: !4296, line: 273, baseType: !226, size: 32, offset: 960)
!4326 = !DIDerivedType(tag: DW_TAG_member, name: "vsync_len", scope: !4295, file: !4296, line: 274, baseType: !226, size: 32, offset: 992)
!4327 = !DIDerivedType(tag: DW_TAG_member, name: "sync", scope: !4295, file: !4296, line: 275, baseType: !226, size: 32, offset: 1024)
!4328 = !DIDerivedType(tag: DW_TAG_member, name: "vmode", scope: !4295, file: !4296, line: 276, baseType: !226, size: 32, offset: 1056)
!4329 = !DIDerivedType(tag: DW_TAG_member, name: "rotate", scope: !4295, file: !4296, line: 277, baseType: !226, size: 32, offset: 1088)
!4330 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !4295, file: !4296, line: 278, baseType: !226, size: 32, offset: 1120)
!4331 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !4295, file: !4296, line: 279, baseType: !4332, size: 128, offset: 1152)
!4332 = !DICompositeType(tag: DW_TAG_array_type, baseType: !226, size: 128, elements: !1186)
!4333 = !DIDerivedType(tag: DW_TAG_member, name: "fix", scope: !4285, file: !4286, line: 449, baseType: !4334, size: 640, offset: 1792)
!4334 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fb_fix_screeninfo", file: !4296, line: 157, size: 640, elements: !4335)
!4335 = !{!4336, !4337, !4338, !4339, !4340, !4341, !4342, !4343, !4344, !4345, !4346, !4347, !4348, !4349, !4350}
!4336 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4334, file: !4296, line: 158, baseType: !219, size: 128)
!4337 = !DIDerivedType(tag: DW_TAG_member, name: "smem_start", scope: !4334, file: !4296, line: 159, baseType: !212, size: 64, offset: 128)
!4338 = !DIDerivedType(tag: DW_TAG_member, name: "smem_len", scope: !4334, file: !4296, line: 161, baseType: !226, size: 32, offset: 192)
!4339 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4334, file: !4296, line: 162, baseType: !226, size: 32, offset: 224)
!4340 = !DIDerivedType(tag: DW_TAG_member, name: "type_aux", scope: !4334, file: !4296, line: 163, baseType: !226, size: 32, offset: 256)
!4341 = !DIDerivedType(tag: DW_TAG_member, name: "visual", scope: !4334, file: !4296, line: 164, baseType: !226, size: 32, offset: 288)
!4342 = !DIDerivedType(tag: DW_TAG_member, name: "xpanstep", scope: !4334, file: !4296, line: 165, baseType: !891, size: 16, offset: 320)
!4343 = !DIDerivedType(tag: DW_TAG_member, name: "ypanstep", scope: !4334, file: !4296, line: 166, baseType: !891, size: 16, offset: 336)
!4344 = !DIDerivedType(tag: DW_TAG_member, name: "ywrapstep", scope: !4334, file: !4296, line: 167, baseType: !891, size: 16, offset: 352)
!4345 = !DIDerivedType(tag: DW_TAG_member, name: "line_length", scope: !4334, file: !4296, line: 168, baseType: !226, size: 32, offset: 384)
!4346 = !DIDerivedType(tag: DW_TAG_member, name: "mmio_start", scope: !4334, file: !4296, line: 169, baseType: !212, size: 64, offset: 448)
!4347 = !DIDerivedType(tag: DW_TAG_member, name: "mmio_len", scope: !4334, file: !4296, line: 171, baseType: !226, size: 32, offset: 512)
!4348 = !DIDerivedType(tag: DW_TAG_member, name: "accel", scope: !4334, file: !4296, line: 172, baseType: !226, size: 32, offset: 544)
!4349 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !4334, file: !4296, line: 174, baseType: !891, size: 16, offset: 576)
!4350 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !4334, file: !4296, line: 175, baseType: !4351, size: 32, offset: 592)
!4351 = !DICompositeType(tag: DW_TAG_array_type, baseType: !891, size: 32, elements: !238)
!4352 = !DIDerivedType(tag: DW_TAG_member, name: "monspecs", scope: !4285, file: !4286, line: 450, baseType: !4353, size: 1152, offset: 2432)
!4353 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fb_monspecs", file: !4286, line: 63, size: 1152, elements: !4354)
!4354 = !{!4355, !4366, !4384, !4386, !4390, !4391, !4392, !4393, !4394, !4395, !4396, !4397, !4398, !4399, !4400, !4401, !4402, !4403, !4404, !4405, !4406, !4407, !4408, !4409, !4410, !4411, !4412}
!4355 = !DIDerivedType(tag: DW_TAG_member, name: "chroma", scope: !4353, file: !4286, line: 64, baseType: !4356, size: 256)
!4356 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fb_chroma", file: !4286, line: 52, size: 256, elements: !4357)
!4357 = !{!4358, !4359, !4360, !4361, !4362, !4363, !4364, !4365}
!4358 = !DIDerivedType(tag: DW_TAG_member, name: "redx", scope: !4356, file: !4286, line: 53, baseType: !226, size: 32)
!4359 = !DIDerivedType(tag: DW_TAG_member, name: "greenx", scope: !4356, file: !4286, line: 54, baseType: !226, size: 32, offset: 32)
!4360 = !DIDerivedType(tag: DW_TAG_member, name: "bluex", scope: !4356, file: !4286, line: 55, baseType: !226, size: 32, offset: 64)
!4361 = !DIDerivedType(tag: DW_TAG_member, name: "whitex", scope: !4356, file: !4286, line: 56, baseType: !226, size: 32, offset: 96)
!4362 = !DIDerivedType(tag: DW_TAG_member, name: "redy", scope: !4356, file: !4286, line: 57, baseType: !226, size: 32, offset: 128)
!4363 = !DIDerivedType(tag: DW_TAG_member, name: "greeny", scope: !4356, file: !4286, line: 58, baseType: !226, size: 32, offset: 160)
!4364 = !DIDerivedType(tag: DW_TAG_member, name: "bluey", scope: !4356, file: !4286, line: 59, baseType: !226, size: 32, offset: 192)
!4365 = !DIDerivedType(tag: DW_TAG_member, name: "whitey", scope: !4356, file: !4286, line: 60, baseType: !226, size: 32, offset: 224)
!4366 = !DIDerivedType(tag: DW_TAG_member, name: "modedb", scope: !4353, file: !4286, line: 65, baseType: !4367, size: 64, offset: 256)
!4367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4368, size: 64)
!4368 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fb_videomode", file: !4286, line: 766, size: 512, elements: !4369)
!4369 = !{!4370, !4371, !4372, !4373, !4374, !4375, !4376, !4377, !4378, !4379, !4380, !4381, !4382, !4383}
!4370 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4368, file: !4286, line: 767, baseType: !254, size: 64)
!4371 = !DIDerivedType(tag: DW_TAG_member, name: "refresh", scope: !4368, file: !4286, line: 768, baseType: !224, size: 32, offset: 64)
!4372 = !DIDerivedType(tag: DW_TAG_member, name: "xres", scope: !4368, file: !4286, line: 769, baseType: !224, size: 32, offset: 96)
!4373 = !DIDerivedType(tag: DW_TAG_member, name: "yres", scope: !4368, file: !4286, line: 770, baseType: !224, size: 32, offset: 128)
!4374 = !DIDerivedType(tag: DW_TAG_member, name: "pixclock", scope: !4368, file: !4286, line: 771, baseType: !224, size: 32, offset: 160)
!4375 = !DIDerivedType(tag: DW_TAG_member, name: "left_margin", scope: !4368, file: !4286, line: 772, baseType: !224, size: 32, offset: 192)
!4376 = !DIDerivedType(tag: DW_TAG_member, name: "right_margin", scope: !4368, file: !4286, line: 773, baseType: !224, size: 32, offset: 224)
!4377 = !DIDerivedType(tag: DW_TAG_member, name: "upper_margin", scope: !4368, file: !4286, line: 774, baseType: !224, size: 32, offset: 256)
!4378 = !DIDerivedType(tag: DW_TAG_member, name: "lower_margin", scope: !4368, file: !4286, line: 775, baseType: !224, size: 32, offset: 288)
!4379 = !DIDerivedType(tag: DW_TAG_member, name: "hsync_len", scope: !4368, file: !4286, line: 776, baseType: !224, size: 32, offset: 320)
!4380 = !DIDerivedType(tag: DW_TAG_member, name: "vsync_len", scope: !4368, file: !4286, line: 777, baseType: !224, size: 32, offset: 352)
!4381 = !DIDerivedType(tag: DW_TAG_member, name: "sync", scope: !4368, file: !4286, line: 778, baseType: !224, size: 32, offset: 384)
!4382 = !DIDerivedType(tag: DW_TAG_member, name: "vmode", scope: !4368, file: !4286, line: 779, baseType: !224, size: 32, offset: 416)
!4383 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !4368, file: !4286, line: 780, baseType: !224, size: 32, offset: 448)
!4384 = !DIDerivedType(tag: DW_TAG_member, name: "manufacturer", scope: !4353, file: !4286, line: 66, baseType: !4385, size: 32, offset: 320)
!4385 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1383, size: 32, elements: !1186)
!4386 = !DIDerivedType(tag: DW_TAG_member, name: "monitor", scope: !4353, file: !4286, line: 67, baseType: !4387, size: 112, offset: 352)
!4387 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1383, size: 112, elements: !4388)
!4388 = !{!4389}
!4389 = !DISubrange(count: 14)
!4390 = !DIDerivedType(tag: DW_TAG_member, name: "serial_no", scope: !4353, file: !4286, line: 68, baseType: !4387, size: 112, offset: 464)
!4391 = !DIDerivedType(tag: DW_TAG_member, name: "ascii", scope: !4353, file: !4286, line: 69, baseType: !4387, size: 112, offset: 576)
!4392 = !DIDerivedType(tag: DW_TAG_member, name: "modedb_len", scope: !4353, file: !4286, line: 70, baseType: !226, size: 32, offset: 704)
!4393 = !DIDerivedType(tag: DW_TAG_member, name: "model", scope: !4353, file: !4286, line: 71, baseType: !226, size: 32, offset: 736)
!4394 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !4353, file: !4286, line: 72, baseType: !226, size: 32, offset: 768)
!4395 = !DIDerivedType(tag: DW_TAG_member, name: "year", scope: !4353, file: !4286, line: 73, baseType: !226, size: 32, offset: 800)
!4396 = !DIDerivedType(tag: DW_TAG_member, name: "week", scope: !4353, file: !4286, line: 74, baseType: !226, size: 32, offset: 832)
!4397 = !DIDerivedType(tag: DW_TAG_member, name: "hfmin", scope: !4353, file: !4286, line: 75, baseType: !226, size: 32, offset: 864)
!4398 = !DIDerivedType(tag: DW_TAG_member, name: "hfmax", scope: !4353, file: !4286, line: 76, baseType: !226, size: 32, offset: 896)
!4399 = !DIDerivedType(tag: DW_TAG_member, name: "dclkmin", scope: !4353, file: !4286, line: 77, baseType: !226, size: 32, offset: 928)
!4400 = !DIDerivedType(tag: DW_TAG_member, name: "dclkmax", scope: !4353, file: !4286, line: 78, baseType: !226, size: 32, offset: 960)
!4401 = !DIDerivedType(tag: DW_TAG_member, name: "input", scope: !4353, file: !4286, line: 79, baseType: !891, size: 16, offset: 992)
!4402 = !DIDerivedType(tag: DW_TAG_member, name: "dpms", scope: !4353, file: !4286, line: 80, baseType: !891, size: 16, offset: 1008)
!4403 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !4353, file: !4286, line: 81, baseType: !891, size: 16, offset: 1024)
!4404 = !DIDerivedType(tag: DW_TAG_member, name: "vfmin", scope: !4353, file: !4286, line: 82, baseType: !891, size: 16, offset: 1040)
!4405 = !DIDerivedType(tag: DW_TAG_member, name: "vfmax", scope: !4353, file: !4286, line: 83, baseType: !891, size: 16, offset: 1056)
!4406 = !DIDerivedType(tag: DW_TAG_member, name: "gamma", scope: !4353, file: !4286, line: 84, baseType: !891, size: 16, offset: 1072)
!4407 = !DIDerivedType(tag: DW_TAG_member, name: "gtf", scope: !4353, file: !4286, line: 85, baseType: !891, size: 1, offset: 1088, flags: DIFlagBitField, extraData: i64 1088)
!4408 = !DIDerivedType(tag: DW_TAG_member, name: "misc", scope: !4353, file: !4286, line: 86, baseType: !891, size: 16, offset: 1104)
!4409 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !4353, file: !4286, line: 87, baseType: !1383, size: 8, offset: 1120)
!4410 = !DIDerivedType(tag: DW_TAG_member, name: "revision", scope: !4353, file: !4286, line: 88, baseType: !1383, size: 8, offset: 1128)
!4411 = !DIDerivedType(tag: DW_TAG_member, name: "max_x", scope: !4353, file: !4286, line: 89, baseType: !1383, size: 8, offset: 1136)
!4412 = !DIDerivedType(tag: DW_TAG_member, name: "max_y", scope: !4353, file: !4286, line: 90, baseType: !1383, size: 8, offset: 1144)
!4413 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !4285, file: !4286, line: 451, baseType: !2041, size: 256, offset: 3584)
!4414 = !DIDerivedType(tag: DW_TAG_member, name: "pixmap", scope: !4285, file: !4286, line: 452, baseType: !4415, size: 448, offset: 3840)
!4415 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fb_pixmap", file: !4286, line: 185, size: 448, elements: !4416)
!4416 = !{!4417, !4419, !4420, !4421, !4422, !4423, !4424, !4425, !4426, !4427, !4431}
!4417 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !4415, file: !4286, line: 186, baseType: !4418, size: 64)
!4418 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1382, size: 64)
!4419 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4415, file: !4286, line: 187, baseType: !224, size: 32, offset: 64)
!4420 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !4415, file: !4286, line: 188, baseType: !224, size: 32, offset: 96)
!4421 = !DIDerivedType(tag: DW_TAG_member, name: "buf_align", scope: !4415, file: !4286, line: 189, baseType: !224, size: 32, offset: 128)
!4422 = !DIDerivedType(tag: DW_TAG_member, name: "scan_align", scope: !4415, file: !4286, line: 190, baseType: !224, size: 32, offset: 160)
!4423 = !DIDerivedType(tag: DW_TAG_member, name: "access_align", scope: !4415, file: !4286, line: 191, baseType: !224, size: 32, offset: 192)
!4424 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4415, file: !4286, line: 192, baseType: !224, size: 32, offset: 224)
!4425 = !DIDerivedType(tag: DW_TAG_member, name: "blit_x", scope: !4415, file: !4286, line: 193, baseType: !224, size: 32, offset: 256)
!4426 = !DIDerivedType(tag: DW_TAG_member, name: "blit_y", scope: !4415, file: !4286, line: 194, baseType: !224, size: 32, offset: 288)
!4427 = !DIDerivedType(tag: DW_TAG_member, name: "writeio", scope: !4415, file: !4286, line: 198, baseType: !4428, size: 64, offset: 320)
!4428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4429, size: 64)
!4429 = !DISubroutineType(types: !4430)
!4430 = !{null, !4284, !211, !211, !7}
!4431 = !DIDerivedType(tag: DW_TAG_member, name: "readio", scope: !4415, file: !4286, line: 199, baseType: !4428, size: 64, offset: 384)
!4432 = !DIDerivedType(tag: DW_TAG_member, name: "sprite", scope: !4285, file: !4286, line: 453, baseType: !4415, size: 448, offset: 4288)
!4433 = !DIDerivedType(tag: DW_TAG_member, name: "cmap", scope: !4285, file: !4286, line: 454, baseType: !4434, size: 320, offset: 4736)
!4434 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fb_cmap", file: !4296, line: 282, size: 320, elements: !4435)
!4435 = !{!4436, !4437, !4438, !4440, !4441, !4442}
!4436 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4434, file: !4296, line: 283, baseType: !226, size: 32)
!4437 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !4434, file: !4296, line: 284, baseType: !226, size: 32, offset: 32)
!4438 = !DIDerivedType(tag: DW_TAG_member, name: "red", scope: !4434, file: !4296, line: 285, baseType: !4439, size: 64, offset: 64)
!4439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !891, size: 64)
!4440 = !DIDerivedType(tag: DW_TAG_member, name: "green", scope: !4434, file: !4296, line: 286, baseType: !4439, size: 64, offset: 128)
!4441 = !DIDerivedType(tag: DW_TAG_member, name: "blue", scope: !4434, file: !4296, line: 287, baseType: !4439, size: 64, offset: 192)
!4442 = !DIDerivedType(tag: DW_TAG_member, name: "transp", scope: !4434, file: !4296, line: 288, baseType: !4439, size: 64, offset: 256)
!4443 = !DIDerivedType(tag: DW_TAG_member, name: "modelist", scope: !4285, file: !4286, line: 455, baseType: !257, size: 128, offset: 5056)
!4444 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !4285, file: !4286, line: 456, baseType: !4367, size: 64, offset: 5184)
!4445 = !DIDerivedType(tag: DW_TAG_member, name: "bl_dev", scope: !4285, file: !4286, line: 462, baseType: !4446, size: 64, offset: 5248)
!4446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4447, size: 64)
!4447 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "backlight_device", file: !141, line: 280, size: 6912, elements: !4448)
!4448 = !{!4449, !4459, !4460, !4461, !4476, !4488, !4489, !4490, !4492}
!4449 = !DIDerivedType(tag: DW_TAG_member, name: "props", scope: !4447, file: !141, line: 284, baseType: !4450, size: 224)
!4450 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "backlight_properties", file: !141, line: 182, size: 224, elements: !4451)
!4451 = !{!4452, !4453, !4454, !4455, !4456, !4457, !4458}
!4452 = !DIDerivedType(tag: DW_TAG_member, name: "brightness", scope: !4450, file: !141, line: 194, baseType: !217, size: 32)
!4453 = !DIDerivedType(tag: DW_TAG_member, name: "max_brightness", scope: !4450, file: !141, line: 203, baseType: !217, size: 32, offset: 32)
!4454 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !4450, file: !141, line: 219, baseType: !217, size: 32, offset: 64)
!4455 = !DIDerivedType(tag: DW_TAG_member, name: "fb_blank", scope: !4450, file: !141, line: 238, baseType: !217, size: 32, offset: 96)
!4456 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4450, file: !141, line: 249, baseType: !140, size: 32, offset: 128)
!4457 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !4450, file: !141, line: 264, baseType: !7, size: 32, offset: 160)
!4458 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !4450, file: !141, line: 272, baseType: !147, size: 32, offset: 192)
!4459 = !DIDerivedType(tag: DW_TAG_member, name: "update_lock", scope: !4447, file: !141, line: 294, baseType: !1204, size: 192, offset: 256)
!4460 = !DIDerivedType(tag: DW_TAG_member, name: "ops_lock", scope: !4447, file: !141, line: 303, baseType: !1204, size: 192, offset: 448)
!4461 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4447, file: !141, line: 312, baseType: !4462, size: 64, offset: 640)
!4462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4463, size: 64)
!4463 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4464)
!4464 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "backlight_ops", file: !141, line: 120, size: 256, elements: !4465)
!4465 = !{!4466, !4467, !4471, !4472}
!4466 = !DIDerivedType(tag: DW_TAG_member, name: "options", scope: !4464, file: !141, line: 128, baseType: !7, size: 32)
!4467 = !DIDerivedType(tag: DW_TAG_member, name: "update_status", scope: !4464, file: !141, line: 146, baseType: !4468, size: 64, offset: 64)
!4468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4469, size: 64)
!4469 = !DISubroutineType(types: !4470)
!4470 = !{!217, !4446}
!4471 = !DIDerivedType(tag: DW_TAG_member, name: "get_brightness", scope: !4464, file: !141, line: 160, baseType: !4468, size: 64, offset: 128)
!4472 = !DIDerivedType(tag: DW_TAG_member, name: "check_fb", scope: !4464, file: !141, line: 174, baseType: !4473, size: 64, offset: 192)
!4473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4474, size: 64)
!4474 = !DISubroutineType(types: !4475)
!4475 = !{!217, !4446, !4284}
!4476 = !DIDerivedType(tag: DW_TAG_member, name: "fb_notif", scope: !4447, file: !141, line: 317, baseType: !4477, size: 192, offset: 704)
!4477 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "notifier_block", file: !4478, line: 54, size: 192, elements: !4479)
!4478 = !DIFile(filename: "./include/linux/notifier.h", directory: "/home/lizy2001/genbc/linux")
!4479 = !{!4480, !4486, !4487}
!4480 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_call", scope: !4477, file: !4478, line: 55, baseType: !4481, size: 64)
!4481 = !DIDerivedType(tag: DW_TAG_typedef, name: "notifier_fn_t", file: !4478, line: 51, baseType: !4482)
!4482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4483, size: 64)
!4483 = !DISubroutineType(types: !4484)
!4484 = !{!217, !4485, !212, !211}
!4485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4477, size: 64)
!4486 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4477, file: !4478, line: 56, baseType: !4485, size: 64, offset: 64)
!4487 = !DIDerivedType(tag: DW_TAG_member, name: "priority", scope: !4477, file: !4478, line: 57, baseType: !217, size: 32, offset: 128)
!4488 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !4447, file: !141, line: 322, baseType: !257, size: 128, offset: 896)
!4489 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4447, file: !141, line: 327, baseType: !247, size: 5568, offset: 1024)
!4490 = !DIDerivedType(tag: DW_TAG_member, name: "fb_bl_on", scope: !4447, file: !141, line: 335, baseType: !4491, size: 256, offset: 6592)
!4491 = !DICompositeType(tag: DW_TAG_array_type, baseType: !521, size: 256, elements: !2313)
!4492 = !DIDerivedType(tag: DW_TAG_member, name: "use_count", scope: !4447, file: !141, line: 340, baseType: !217, size: 32, offset: 6848)
!4493 = !DIDerivedType(tag: DW_TAG_member, name: "bl_curve_mutex", scope: !4285, file: !4286, line: 465, baseType: !1204, size: 192, offset: 5312)
!4494 = !DIDerivedType(tag: DW_TAG_member, name: "bl_curve", scope: !4285, file: !4286, line: 466, baseType: !4495, size: 1024, offset: 5504)
!4495 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1382, size: 1024, elements: !3535)
!4496 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_work", scope: !4285, file: !4286, line: 469, baseType: !4497, size: 704, offset: 6528)
!4497 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_work", file: !153, line: 115, size: 704, elements: !4498)
!4498 = !{!4499, !4500, !4501, !4502}
!4499 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !4497, file: !153, line: 116, baseType: !2041, size: 256)
!4500 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !4497, file: !153, line: 117, baseType: !3636, size: 320, offset: 256)
!4501 = !DIDerivedType(tag: DW_TAG_member, name: "wq", scope: !4497, file: !153, line: 120, baseType: !2876, size: 64, offset: 576)
!4502 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !4497, file: !153, line: 121, baseType: !217, size: 32, offset: 640)
!4503 = !DIDerivedType(tag: DW_TAG_member, name: "fbdefio", scope: !4285, file: !4286, line: 470, baseType: !4504, size: 64, offset: 7232)
!4504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4505, size: 64)
!4505 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fb_deferred_io", file: !4286, line: 203, size: 512, elements: !4506)
!4506 = !{!4507, !4508, !4509, !4510, !4514}
!4507 = !DIDerivedType(tag: DW_TAG_member, name: "delay", scope: !4505, file: !4286, line: 205, baseType: !212, size: 64)
!4508 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4505, file: !4286, line: 206, baseType: !1204, size: 192, offset: 64)
!4509 = !DIDerivedType(tag: DW_TAG_member, name: "pagelist", scope: !4505, file: !4286, line: 207, baseType: !257, size: 128, offset: 256)
!4510 = !DIDerivedType(tag: DW_TAG_member, name: "first_io", scope: !4505, file: !4286, line: 209, baseType: !4511, size: 64, offset: 384)
!4511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4512, size: 64)
!4512 = !DISubroutineType(types: !4513)
!4513 = !{null, !4284}
!4514 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_io", scope: !4505, file: !4286, line: 210, baseType: !4515, size: 64, offset: 448)
!4515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4516, size: 64)
!4516 = !DISubroutineType(types: !4517)
!4517 = !{null, !4284, !260}
!4518 = !DIDerivedType(tag: DW_TAG_member, name: "fbops", scope: !4285, file: !4286, line: 473, baseType: !4519, size: 64, offset: 7296)
!4519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4520, size: 64)
!4520 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4521)
!4521 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fb_ops", file: !4286, line: 228, size: 1472, elements: !4522)
!4522 = !{!4523, !4524, !4528, !4529, !4533, !4537, !4542, !4546, !4550, !4555, !4559, !4560, !4574, !4588, !4605, !4622, !4623, !4627, !4628, !4632, !4643, !4644, !4645}
!4523 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4521, file: !4286, line: 230, baseType: !206, size: 64)
!4524 = !DIDerivedType(tag: DW_TAG_member, name: "fb_open", scope: !4521, file: !4286, line: 231, baseType: !4525, size: 64, offset: 64)
!4525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4526, size: 64)
!4526 = !DISubroutineType(types: !4527)
!4527 = !{!217, !4284, !217}
!4528 = !DIDerivedType(tag: DW_TAG_member, name: "fb_release", scope: !4521, file: !4286, line: 232, baseType: !4525, size: 64, offset: 128)
!4529 = !DIDerivedType(tag: DW_TAG_member, name: "fb_read", scope: !4521, file: !4286, line: 237, baseType: !4530, size: 64, offset: 192)
!4530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4531, size: 64)
!4531 = !DISubroutineType(types: !4532)
!4532 = !{!342, !4284, !311, !357, !2959}
!4533 = !DIDerivedType(tag: DW_TAG_member, name: "fb_write", scope: !4521, file: !4286, line: 239, baseType: !4534, size: 64, offset: 256)
!4534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4535, size: 64)
!4535 = !DISubroutineType(types: !4536)
!4536 = !{!342, !4284, !254, !357, !2959}
!4537 = !DIDerivedType(tag: DW_TAG_member, name: "fb_check_var", scope: !4521, file: !4286, line: 244, baseType: !4538, size: 64, offset: 320)
!4538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4539, size: 64)
!4539 = !DISubroutineType(types: !4540)
!4540 = !{!217, !4541, !4284}
!4541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4295, size: 64)
!4542 = !DIDerivedType(tag: DW_TAG_member, name: "fb_set_par", scope: !4521, file: !4286, line: 247, baseType: !4543, size: 64, offset: 384)
!4543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4544, size: 64)
!4544 = !DISubroutineType(types: !4545)
!4545 = !{!217, !4284}
!4546 = !DIDerivedType(tag: DW_TAG_member, name: "fb_setcolreg", scope: !4521, file: !4286, line: 250, baseType: !4547, size: 64, offset: 448)
!4547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4548, size: 64)
!4548 = !DISubroutineType(types: !4549)
!4549 = !{!217, !7, !7, !7, !7, !7, !4284}
!4550 = !DIDerivedType(tag: DW_TAG_member, name: "fb_setcmap", scope: !4521, file: !4286, line: 254, baseType: !4551, size: 64, offset: 512)
!4551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4552, size: 64)
!4552 = !DISubroutineType(types: !4553)
!4553 = !{!217, !4554, !4284}
!4554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4434, size: 64)
!4555 = !DIDerivedType(tag: DW_TAG_member, name: "fb_blank", scope: !4521, file: !4286, line: 257, baseType: !4556, size: 64, offset: 576)
!4556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4557, size: 64)
!4557 = !DISubroutineType(types: !4558)
!4558 = !{!217, !217, !4284}
!4559 = !DIDerivedType(tag: DW_TAG_member, name: "fb_pan_display", scope: !4521, file: !4286, line: 260, baseType: !4538, size: 64, offset: 640)
!4560 = !DIDerivedType(tag: DW_TAG_member, name: "fb_fillrect", scope: !4521, file: !4286, line: 263, baseType: !4561, size: 64, offset: 704)
!4561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4562, size: 64)
!4562 = !DISubroutineType(types: !4563)
!4563 = !{null, !4284, !4564}
!4564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4565, size: 64)
!4565 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4566)
!4566 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fb_fillrect", file: !4296, line: 351, size: 192, elements: !4567)
!4567 = !{!4568, !4569, !4570, !4571, !4572, !4573}
!4568 = !DIDerivedType(tag: DW_TAG_member, name: "dx", scope: !4566, file: !4296, line: 352, baseType: !226, size: 32)
!4569 = !DIDerivedType(tag: DW_TAG_member, name: "dy", scope: !4566, file: !4296, line: 353, baseType: !226, size: 32, offset: 32)
!4570 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !4566, file: !4296, line: 354, baseType: !226, size: 32, offset: 64)
!4571 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !4566, file: !4296, line: 355, baseType: !226, size: 32, offset: 96)
!4572 = !DIDerivedType(tag: DW_TAG_member, name: "color", scope: !4566, file: !4296, line: 356, baseType: !226, size: 32, offset: 128)
!4573 = !DIDerivedType(tag: DW_TAG_member, name: "rop", scope: !4566, file: !4296, line: 357, baseType: !226, size: 32, offset: 160)
!4574 = !DIDerivedType(tag: DW_TAG_member, name: "fb_copyarea", scope: !4521, file: !4286, line: 265, baseType: !4575, size: 64, offset: 768)
!4575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4576, size: 64)
!4576 = !DISubroutineType(types: !4577)
!4577 = !{null, !4284, !4578}
!4578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4579, size: 64)
!4579 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4580)
!4580 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fb_copyarea", file: !4296, line: 342, size: 192, elements: !4581)
!4581 = !{!4582, !4583, !4584, !4585, !4586, !4587}
!4582 = !DIDerivedType(tag: DW_TAG_member, name: "dx", scope: !4580, file: !4296, line: 343, baseType: !226, size: 32)
!4583 = !DIDerivedType(tag: DW_TAG_member, name: "dy", scope: !4580, file: !4296, line: 344, baseType: !226, size: 32, offset: 32)
!4584 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !4580, file: !4296, line: 345, baseType: !226, size: 32, offset: 64)
!4585 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !4580, file: !4296, line: 346, baseType: !226, size: 32, offset: 96)
!4586 = !DIDerivedType(tag: DW_TAG_member, name: "sx", scope: !4580, file: !4296, line: 347, baseType: !226, size: 32, offset: 128)
!4587 = !DIDerivedType(tag: DW_TAG_member, name: "sy", scope: !4580, file: !4296, line: 348, baseType: !226, size: 32, offset: 160)
!4588 = !DIDerivedType(tag: DW_TAG_member, name: "fb_imageblit", scope: !4521, file: !4286, line: 267, baseType: !4589, size: 64, offset: 832)
!4589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4590, size: 64)
!4590 = !DISubroutineType(types: !4591)
!4591 = !{null, !4284, !4592}
!4592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4593, size: 64)
!4593 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4594)
!4594 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fb_image", file: !4296, line: 360, size: 640, elements: !4595)
!4595 = !{!4596, !4597, !4598, !4599, !4600, !4601, !4602, !4603, !4604}
!4596 = !DIDerivedType(tag: DW_TAG_member, name: "dx", scope: !4594, file: !4296, line: 361, baseType: !226, size: 32)
!4597 = !DIDerivedType(tag: DW_TAG_member, name: "dy", scope: !4594, file: !4296, line: 362, baseType: !226, size: 32, offset: 32)
!4598 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !4594, file: !4296, line: 363, baseType: !226, size: 32, offset: 64)
!4599 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !4594, file: !4296, line: 364, baseType: !226, size: 32, offset: 96)
!4600 = !DIDerivedType(tag: DW_TAG_member, name: "fg_color", scope: !4594, file: !4296, line: 365, baseType: !226, size: 32, offset: 128)
!4601 = !DIDerivedType(tag: DW_TAG_member, name: "bg_color", scope: !4594, file: !4296, line: 366, baseType: !226, size: 32, offset: 160)
!4602 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !4594, file: !4296, line: 367, baseType: !1383, size: 8, offset: 192)
!4603 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4594, file: !4296, line: 368, baseType: !254, size: 64, offset: 256)
!4604 = !DIDerivedType(tag: DW_TAG_member, name: "cmap", scope: !4594, file: !4296, line: 369, baseType: !4434, size: 320, offset: 320)
!4605 = !DIDerivedType(tag: DW_TAG_member, name: "fb_cursor", scope: !4521, file: !4286, line: 270, baseType: !4606, size: 64, offset: 896)
!4606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4607, size: 64)
!4607 = !DISubroutineType(types: !4608)
!4608 = !{!217, !4284, !4609}
!4609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4610, size: 64)
!4610 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fb_cursor", file: !4296, line: 388, size: 832, elements: !4611)
!4611 = !{!4612, !4613, !4614, !4615, !4616, !4621}
!4612 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !4610, file: !4296, line: 389, baseType: !891, size: 16)
!4613 = !DIDerivedType(tag: DW_TAG_member, name: "enable", scope: !4610, file: !4296, line: 390, baseType: !891, size: 16, offset: 16)
!4614 = !DIDerivedType(tag: DW_TAG_member, name: "rop", scope: !4610, file: !4296, line: 391, baseType: !891, size: 16, offset: 32)
!4615 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !4610, file: !4296, line: 392, baseType: !254, size: 64, offset: 64)
!4616 = !DIDerivedType(tag: DW_TAG_member, name: "hot", scope: !4610, file: !4296, line: 393, baseType: !4617, size: 32, offset: 128)
!4617 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fbcurpos", file: !4296, line: 384, size: 32, elements: !4618)
!4618 = !{!4619, !4620}
!4619 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !4617, file: !4296, line: 385, baseType: !891, size: 16)
!4620 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !4617, file: !4296, line: 385, baseType: !891, size: 16, offset: 16)
!4621 = !DIDerivedType(tag: DW_TAG_member, name: "image", scope: !4610, file: !4296, line: 394, baseType: !4594, size: 640, offset: 192)
!4622 = !DIDerivedType(tag: DW_TAG_member, name: "fb_sync", scope: !4521, file: !4286, line: 273, baseType: !4543, size: 64, offset: 960)
!4623 = !DIDerivedType(tag: DW_TAG_member, name: "fb_ioctl", scope: !4521, file: !4286, line: 276, baseType: !4624, size: 64, offset: 1024)
!4624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4625, size: 64)
!4625 = !DISubroutineType(types: !4626)
!4626 = !{!217, !4284, !7, !212}
!4627 = !DIDerivedType(tag: DW_TAG_member, name: "fb_compat_ioctl", scope: !4521, file: !4286, line: 280, baseType: !4624, size: 64, offset: 1088)
!4628 = !DIDerivedType(tag: DW_TAG_member, name: "fb_mmap", scope: !4521, file: !4286, line: 284, baseType: !4629, size: 64, offset: 1152)
!4629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4630, size: 64)
!4630 = !DISubroutineType(types: !4631)
!4631 = !{!217, !4284, !1012}
!4632 = !DIDerivedType(tag: DW_TAG_member, name: "fb_get_caps", scope: !4521, file: !4286, line: 287, baseType: !4633, size: 64, offset: 1216)
!4633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4634, size: 64)
!4634 = !DISubroutineType(types: !4635)
!4635 = !{null, !4284, !4636, !4541}
!4636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4637, size: 64)
!4637 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fb_blit_caps", file: !4286, line: 144, size: 128, elements: !4638)
!4638 = !{!4639, !4640, !4641, !4642}
!4639 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !4637, file: !4286, line: 145, baseType: !224, size: 32)
!4640 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !4637, file: !4286, line: 146, baseType: !224, size: 32, offset: 32)
!4641 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !4637, file: !4286, line: 147, baseType: !224, size: 32, offset: 64)
!4642 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4637, file: !4286, line: 148, baseType: !224, size: 32, offset: 96)
!4643 = !DIDerivedType(tag: DW_TAG_member, name: "fb_destroy", scope: !4521, file: !4286, line: 291, baseType: !4511, size: 64, offset: 1280)
!4644 = !DIDerivedType(tag: DW_TAG_member, name: "fb_debug_enter", scope: !4521, file: !4286, line: 294, baseType: !4543, size: 64, offset: 1344)
!4645 = !DIDerivedType(tag: DW_TAG_member, name: "fb_debug_leave", scope: !4521, file: !4286, line: 295, baseType: !4543, size: 64, offset: 1408)
!4646 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !4285, file: !4286, line: 474, baseType: !246, size: 64, offset: 7360)
!4647 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4285, file: !4286, line: 475, baseType: !246, size: 64, offset: 7424)
!4648 = !DIDerivedType(tag: DW_TAG_member, name: "class_flag", scope: !4285, file: !4286, line: 476, baseType: !217, size: 32, offset: 7488)
!4649 = !DIDerivedType(tag: DW_TAG_member, name: "tileops", scope: !4285, file: !4286, line: 478, baseType: !4650, size: 64, offset: 7552)
!4650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4651, size: 64)
!4651 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fb_tile_ops", file: !4286, line: 355, size: 384, elements: !4652)
!4652 = !{!4653, !4667, !4680, !4695, !4711, !4724}
!4653 = !DIDerivedType(tag: DW_TAG_member, name: "fb_settile", scope: !4651, file: !4286, line: 357, baseType: !4654, size: 64)
!4654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4655, size: 64)
!4655 = !DISubroutineType(types: !4656)
!4656 = !{null, !4284, !4657}
!4657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4658, size: 64)
!4658 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fb_tilemap", file: !4286, line: 306, size: 192, elements: !4659)
!4659 = !{!4660, !4661, !4662, !4663, !4664}
!4660 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !4658, file: !4286, line: 307, baseType: !226, size: 32)
!4661 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !4658, file: !4286, line: 308, baseType: !226, size: 32, offset: 32)
!4662 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !4658, file: !4286, line: 309, baseType: !226, size: 32, offset: 64)
!4663 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !4658, file: !4286, line: 310, baseType: !226, size: 32, offset: 96)
!4664 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4658, file: !4286, line: 311, baseType: !4665, size: 64, offset: 128)
!4665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4666, size: 64)
!4666 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1383)
!4667 = !DIDerivedType(tag: DW_TAG_member, name: "fb_tilecopy", scope: !4651, file: !4286, line: 362, baseType: !4668, size: 64, offset: 64)
!4668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4669, size: 64)
!4669 = !DISubroutineType(types: !4670)
!4670 = !{null, !4284, !4671}
!4671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4672, size: 64)
!4672 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fb_tilearea", file: !4286, line: 326, size: 192, elements: !4673)
!4673 = !{!4674, !4675, !4676, !4677, !4678, !4679}
!4674 = !DIDerivedType(tag: DW_TAG_member, name: "sx", scope: !4672, file: !4286, line: 327, baseType: !226, size: 32)
!4675 = !DIDerivedType(tag: DW_TAG_member, name: "sy", scope: !4672, file: !4286, line: 328, baseType: !226, size: 32, offset: 32)
!4676 = !DIDerivedType(tag: DW_TAG_member, name: "dx", scope: !4672, file: !4286, line: 329, baseType: !226, size: 32, offset: 64)
!4677 = !DIDerivedType(tag: DW_TAG_member, name: "dy", scope: !4672, file: !4286, line: 330, baseType: !226, size: 32, offset: 96)
!4678 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !4672, file: !4286, line: 331, baseType: !226, size: 32, offset: 128)
!4679 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !4672, file: !4286, line: 332, baseType: !226, size: 32, offset: 160)
!4680 = !DIDerivedType(tag: DW_TAG_member, name: "fb_tilefill", scope: !4651, file: !4286, line: 364, baseType: !4681, size: 64, offset: 128)
!4681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4682, size: 64)
!4682 = !DISubroutineType(types: !4683)
!4683 = !{null, !4284, !4684}
!4684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4685, size: 64)
!4685 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fb_tilerect", file: !4286, line: 315, size: 256, elements: !4686)
!4686 = !{!4687, !4688, !4689, !4690, !4691, !4692, !4693, !4694}
!4687 = !DIDerivedType(tag: DW_TAG_member, name: "sx", scope: !4685, file: !4286, line: 316, baseType: !226, size: 32)
!4688 = !DIDerivedType(tag: DW_TAG_member, name: "sy", scope: !4685, file: !4286, line: 317, baseType: !226, size: 32, offset: 32)
!4689 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !4685, file: !4286, line: 318, baseType: !226, size: 32, offset: 64)
!4690 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !4685, file: !4286, line: 319, baseType: !226, size: 32, offset: 96)
!4691 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !4685, file: !4286, line: 320, baseType: !226, size: 32, offset: 128)
!4692 = !DIDerivedType(tag: DW_TAG_member, name: "fg", scope: !4685, file: !4286, line: 321, baseType: !226, size: 32, offset: 160)
!4693 = !DIDerivedType(tag: DW_TAG_member, name: "bg", scope: !4685, file: !4286, line: 322, baseType: !226, size: 32, offset: 192)
!4694 = !DIDerivedType(tag: DW_TAG_member, name: "rop", scope: !4685, file: !4286, line: 323, baseType: !226, size: 32, offset: 224)
!4695 = !DIDerivedType(tag: DW_TAG_member, name: "fb_tileblit", scope: !4651, file: !4286, line: 366, baseType: !4696, size: 64, offset: 192)
!4696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4697, size: 64)
!4697 = !DISubroutineType(types: !4698)
!4698 = !{null, !4284, !4699}
!4699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4700, size: 64)
!4700 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fb_tileblit", file: !4286, line: 335, size: 320, elements: !4701)
!4701 = !{!4702, !4703, !4704, !4705, !4706, !4707, !4708, !4709}
!4702 = !DIDerivedType(tag: DW_TAG_member, name: "sx", scope: !4700, file: !4286, line: 336, baseType: !226, size: 32)
!4703 = !DIDerivedType(tag: DW_TAG_member, name: "sy", scope: !4700, file: !4286, line: 337, baseType: !226, size: 32, offset: 32)
!4704 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !4700, file: !4286, line: 338, baseType: !226, size: 32, offset: 64)
!4705 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !4700, file: !4286, line: 339, baseType: !226, size: 32, offset: 96)
!4706 = !DIDerivedType(tag: DW_TAG_member, name: "fg", scope: !4700, file: !4286, line: 340, baseType: !226, size: 32, offset: 128)
!4707 = !DIDerivedType(tag: DW_TAG_member, name: "bg", scope: !4700, file: !4286, line: 341, baseType: !226, size: 32, offset: 160)
!4708 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !4700, file: !4286, line: 342, baseType: !226, size: 32, offset: 192)
!4709 = !DIDerivedType(tag: DW_TAG_member, name: "indices", scope: !4700, file: !4286, line: 343, baseType: !4710, size: 64, offset: 256)
!4710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !226, size: 64)
!4711 = !DIDerivedType(tag: DW_TAG_member, name: "fb_tilecursor", scope: !4651, file: !4286, line: 368, baseType: !4712, size: 64, offset: 256)
!4712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4713, size: 64)
!4713 = !DISubroutineType(types: !4714)
!4714 = !{null, !4284, !4715}
!4715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4716, size: 64)
!4716 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fb_tilecursor", file: !4286, line: 346, size: 192, elements: !4717)
!4717 = !{!4718, !4719, !4720, !4721, !4722, !4723}
!4718 = !DIDerivedType(tag: DW_TAG_member, name: "sx", scope: !4716, file: !4286, line: 347, baseType: !226, size: 32)
!4719 = !DIDerivedType(tag: DW_TAG_member, name: "sy", scope: !4716, file: !4286, line: 348, baseType: !226, size: 32, offset: 32)
!4720 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !4716, file: !4286, line: 349, baseType: !226, size: 32, offset: 64)
!4721 = !DIDerivedType(tag: DW_TAG_member, name: "shape", scope: !4716, file: !4286, line: 350, baseType: !226, size: 32, offset: 96)
!4722 = !DIDerivedType(tag: DW_TAG_member, name: "fg", scope: !4716, file: !4286, line: 351, baseType: !226, size: 32, offset: 128)
!4723 = !DIDerivedType(tag: DW_TAG_member, name: "bg", scope: !4716, file: !4286, line: 352, baseType: !226, size: 32, offset: 160)
!4724 = !DIDerivedType(tag: DW_TAG_member, name: "fb_get_tilemax", scope: !4651, file: !4286, line: 371, baseType: !4543, size: 64, offset: 320)
!4725 = !DIDerivedType(tag: DW_TAG_member, scope: !4285, file: !4286, line: 480, baseType: !4726, size: 64, offset: 7616)
!4726 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4285, file: !4286, line: 480, size: 64, elements: !4727)
!4727 = !{!4728, !4729}
!4728 = !DIDerivedType(tag: DW_TAG_member, name: "screen_base", scope: !4726, file: !4286, line: 481, baseType: !311, size: 64)
!4729 = !DIDerivedType(tag: DW_TAG_member, name: "screen_buffer", scope: !4726, file: !4286, line: 482, baseType: !311, size: 64)
!4730 = !DIDerivedType(tag: DW_TAG_member, name: "screen_size", scope: !4285, file: !4286, line: 484, baseType: !212, size: 64, offset: 7680)
!4731 = !DIDerivedType(tag: DW_TAG_member, name: "pseudo_palette", scope: !4285, file: !4286, line: 485, baseType: !211, size: 64, offset: 7744)
!4732 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !4285, file: !4286, line: 488, baseType: !224, size: 32, offset: 7808)
!4733 = !DIDerivedType(tag: DW_TAG_member, name: "fbcon_par", scope: !4285, file: !4286, line: 489, baseType: !211, size: 64, offset: 7872)
!4734 = !DIDerivedType(tag: DW_TAG_member, name: "par", scope: !4285, file: !4286, line: 491, baseType: !211, size: 64, offset: 7936)
!4735 = !DIDerivedType(tag: DW_TAG_member, name: "apertures", scope: !4285, file: !4286, line: 501, baseType: !4736, size: 64, offset: 8000)
!4736 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4737, size: 64)
!4737 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "apertures_struct", file: !4286, line: 495, size: 64, elements: !4738)
!4738 = !{!4739, !4740}
!4739 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4737, file: !4286, line: 496, baseType: !7, size: 32)
!4740 = !DIDerivedType(tag: DW_TAG_member, name: "ranges", scope: !4737, file: !4286, line: 500, baseType: !4741, offset: 64)
!4741 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4742, elements: !1786)
!4742 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "aperture", file: !4286, line: 497, size: 128, elements: !4743)
!4743 = !{!4744, !4746}
!4744 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !4742, file: !4286, line: 498, baseType: !4745, size: 64)
!4745 = !DIDerivedType(tag: DW_TAG_typedef, name: "resource_size_t", file: !210, line: 158, baseType: !2208)
!4746 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4742, file: !4286, line: 499, baseType: !4745, size: 64, offset: 64)
!4747 = !DIDerivedType(tag: DW_TAG_member, name: "skip_vt_switch", scope: !4285, file: !4286, line: 503, baseType: !521, size: 8, offset: 8064)
!4748 = !DIDerivedType(tag: DW_TAG_member, name: "urbs", scope: !4279, file: !3, line: 96, baseType: !4749, size: 448, offset: 192)
!4749 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "urb_list", file: !3, line: 83, size: 448, elements: !4750)
!4750 = !{!4751, !4752, !4753, !4760, !4761, !4762}
!4751 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4749, file: !3, line: 84, baseType: !257, size: 128)
!4752 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4749, file: !3, line: 85, baseType: !270, offset: 128)
!4753 = !DIDerivedType(tag: DW_TAG_member, name: "limit_sem", scope: !4749, file: !3, line: 86, baseType: !4754, size: 192, offset: 128)
!4754 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "semaphore", file: !4755, line: 15, size: 192, elements: !4756)
!4755 = !DIFile(filename: "./include/linux/semaphore.h", directory: "/home/lizy2001/genbc/linux")
!4756 = !{!4757, !4758, !4759}
!4757 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4754, file: !4755, line: 16, baseType: !811)
!4758 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4754, file: !4755, line: 17, baseType: !7, size: 32)
!4759 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !4754, file: !4755, line: 18, baseType: !257, size: 128, offset: 64)
!4760 = !DIDerivedType(tag: DW_TAG_member, name: "available", scope: !4749, file: !3, line: 87, baseType: !217, size: 32, offset: 320)
!4761 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4749, file: !3, line: 88, baseType: !217, size: 32, offset: 352)
!4762 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4749, file: !3, line: 89, baseType: !357, size: 64, offset: 384)
!4763 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !4279, file: !3, line: 97, baseType: !1529, size: 32, offset: 640)
!4764 = !DIDerivedType(tag: DW_TAG_member, name: "fb_count", scope: !4279, file: !3, line: 98, baseType: !217, size: 32, offset: 672)
!4765 = !DIDerivedType(tag: DW_TAG_member, name: "virtualized", scope: !4279, file: !3, line: 99, baseType: !521, size: 8, offset: 704)
!4766 = !DIDerivedType(tag: DW_TAG_member, name: "free_framebuffer_work", scope: !4279, file: !3, line: 100, baseType: !4497, size: 704, offset: 768)
!4767 = !DIDerivedType(tag: DW_TAG_member, name: "usb_active", scope: !4279, file: !3, line: 101, baseType: !778, size: 32, offset: 1472)
!4768 = !DIDerivedType(tag: DW_TAG_member, name: "lost_pixels", scope: !4279, file: !3, line: 102, baseType: !778, size: 32, offset: 1504)
!4769 = !DIDerivedType(tag: DW_TAG_member, name: "edid", scope: !4279, file: !3, line: 103, baseType: !4418, size: 64, offset: 1536)
!4770 = !DIDerivedType(tag: DW_TAG_member, name: "edid_size", scope: !4279, file: !3, line: 104, baseType: !357, size: 64, offset: 1600)
!4771 = !DIDerivedType(tag: DW_TAG_member, name: "pseudo_palette", scope: !4279, file: !3, line: 105, baseType: !4772, size: 8192, offset: 1664)
!4772 = !DICompositeType(tag: DW_TAG_array_type, baseType: !224, size: 8192, elements: !4773)
!4773 = !{!4774}
!4774 = !DISubrange(count: 256)
!4775 = !DIDerivedType(tag: DW_TAG_member, name: "release_urb_work", scope: !4274, file: !3, line: 79, baseType: !4497, size: 704, offset: 192)
!4776 = !DIDerivedType(tag: DW_TAG_member, name: "urb", scope: !4274, file: !3, line: 80, baseType: !4777, size: 64, offset: 896)
!4777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4778, size: 64)
!4778 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "urb", file: !6, line: 1561, size: 1472, elements: !4779)
!4779 = !{!4780, !4781, !4782, !4783, !4784, !4785, !4786, !4787, !4796, !4797, !4798, !4799, !4800, !4801, !4802, !4803, !4804, !4807, !4808, !4809, !4810, !4811, !4812, !4813, !4814, !4815, !4816, !4817, !4818, !4823}
!4780 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !4778, file: !6, line: 1563, baseType: !1529, size: 32)
!4781 = !DIDerivedType(tag: DW_TAG_member, name: "unlinked", scope: !4778, file: !6, line: 1564, baseType: !217, size: 32, offset: 32)
!4782 = !DIDerivedType(tag: DW_TAG_member, name: "hcpriv", scope: !4778, file: !6, line: 1565, baseType: !211, size: 64, offset: 64)
!4783 = !DIDerivedType(tag: DW_TAG_member, name: "use_count", scope: !4778, file: !6, line: 1566, baseType: !778, size: 32, offset: 128)
!4784 = !DIDerivedType(tag: DW_TAG_member, name: "reject", scope: !4778, file: !6, line: 1567, baseType: !778, size: 32, offset: 160)
!4785 = !DIDerivedType(tag: DW_TAG_member, name: "urb_list", scope: !4778, file: !6, line: 1570, baseType: !257, size: 128, offset: 192)
!4786 = !DIDerivedType(tag: DW_TAG_member, name: "anchor_list", scope: !4778, file: !6, line: 1572, baseType: !257, size: 128, offset: 320)
!4787 = !DIDerivedType(tag: DW_TAG_member, name: "anchor", scope: !4778, file: !6, line: 1573, baseType: !4788, size: 64, offset: 448)
!4788 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4789, size: 64)
!4789 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_anchor", file: !6, line: 1360, size: 320, elements: !4790)
!4790 = !{!4791, !4792, !4793, !4794, !4795}
!4791 = !DIDerivedType(tag: DW_TAG_member, name: "urb_list", scope: !4789, file: !6, line: 1361, baseType: !257, size: 128)
!4792 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !4789, file: !6, line: 1362, baseType: !1511, size: 128, offset: 128)
!4793 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4789, file: !6, line: 1363, baseType: !270, offset: 256)
!4794 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_wakeups", scope: !4789, file: !6, line: 1364, baseType: !778, size: 32, offset: 256)
!4795 = !DIDerivedType(tag: DW_TAG_member, name: "poisoned", scope: !4789, file: !6, line: 1365, baseType: !7, size: 1, offset: 288, flags: DIFlagBitField, extraData: i64 288)
!4796 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4778, file: !6, line: 1574, baseType: !213, size: 64, offset: 512)
!4797 = !DIDerivedType(tag: DW_TAG_member, name: "ep", scope: !4778, file: !6, line: 1575, baseType: !4187, size: 64, offset: 576)
!4798 = !DIDerivedType(tag: DW_TAG_member, name: "pipe", scope: !4778, file: !6, line: 1576, baseType: !7, size: 32, offset: 640)
!4799 = !DIDerivedType(tag: DW_TAG_member, name: "stream_id", scope: !4778, file: !6, line: 1577, baseType: !7, size: 32, offset: 672)
!4800 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !4778, file: !6, line: 1578, baseType: !217, size: 32, offset: 704)
!4801 = !DIDerivedType(tag: DW_TAG_member, name: "transfer_flags", scope: !4778, file: !6, line: 1579, baseType: !7, size: 32, offset: 736)
!4802 = !DIDerivedType(tag: DW_TAG_member, name: "transfer_buffer", scope: !4778, file: !6, line: 1580, baseType: !211, size: 64, offset: 768)
!4803 = !DIDerivedType(tag: DW_TAG_member, name: "transfer_dma", scope: !4778, file: !6, line: 1581, baseType: !951, size: 64, offset: 832)
!4804 = !DIDerivedType(tag: DW_TAG_member, name: "sg", scope: !4778, file: !6, line: 1582, baseType: !4805, size: 64, offset: 896)
!4805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4806, size: 64)
!4806 = !DICompositeType(tag: DW_TAG_structure_type, name: "scatterlist", file: !6, line: 1582, flags: DIFlagFwdDecl)
!4807 = !DIDerivedType(tag: DW_TAG_member, name: "num_mapped_sgs", scope: !4778, file: !6, line: 1583, baseType: !217, size: 32, offset: 960)
!4808 = !DIDerivedType(tag: DW_TAG_member, name: "num_sgs", scope: !4778, file: !6, line: 1584, baseType: !217, size: 32, offset: 992)
!4809 = !DIDerivedType(tag: DW_TAG_member, name: "transfer_buffer_length", scope: !4778, file: !6, line: 1585, baseType: !224, size: 32, offset: 1024)
!4810 = !DIDerivedType(tag: DW_TAG_member, name: "actual_length", scope: !4778, file: !6, line: 1586, baseType: !224, size: 32, offset: 1056)
!4811 = !DIDerivedType(tag: DW_TAG_member, name: "setup_packet", scope: !4778, file: !6, line: 1587, baseType: !4051, size: 64, offset: 1088)
!4812 = !DIDerivedType(tag: DW_TAG_member, name: "setup_dma", scope: !4778, file: !6, line: 1588, baseType: !951, size: 64, offset: 1152)
!4813 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !4778, file: !6, line: 1589, baseType: !217, size: 32, offset: 1216)
!4814 = !DIDerivedType(tag: DW_TAG_member, name: "number_of_packets", scope: !4778, file: !6, line: 1590, baseType: !217, size: 32, offset: 1248)
!4815 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !4778, file: !6, line: 1591, baseType: !217, size: 32, offset: 1280)
!4816 = !DIDerivedType(tag: DW_TAG_member, name: "error_count", scope: !4778, file: !6, line: 1593, baseType: !217, size: 32, offset: 1312)
!4817 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !4778, file: !6, line: 1594, baseType: !211, size: 64, offset: 1344)
!4818 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !4778, file: !6, line: 1595, baseType: !4819, size: 64, offset: 1408)
!4819 = !DIDerivedType(tag: DW_TAG_typedef, name: "usb_complete_t", file: !6, line: 1376, baseType: !4820)
!4820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4821, size: 64)
!4821 = !DISubroutineType(types: !4822)
!4822 = !{null, !4777}
!4823 = !DIDerivedType(tag: DW_TAG_member, name: "iso_frame_desc", scope: !4778, file: !6, line: 1596, baseType: !4824, offset: 1472)
!4824 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4825, elements: !2414)
!4825 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_iso_packet_descriptor", file: !6, line: 1351, size: 128, elements: !4826)
!4826 = !{!4827, !4828, !4829, !4830}
!4827 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !4825, file: !6, line: 1352, baseType: !7, size: 32)
!4828 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !4825, file: !6, line: 1353, baseType: !7, size: 32, offset: 32)
!4829 = !DIDerivedType(tag: DW_TAG_member, name: "actual_length", scope: !4825, file: !6, line: 1354, baseType: !7, size: 32, offset: 64)
!4830 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !4825, file: !6, line: 1355, baseType: !217, size: 32, offset: 96)
!4831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4832, size: 64)
!4832 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !260)
!4833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4834, size: 64)
!4834 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4835)
!4835 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !217)
!4836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4837, size: 64)
!4837 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4832)
!4838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4839, size: 64)
!4839 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dloarea", file: !3, line: 71, size: 128, elements: !4840)
!4840 = !{!4841, !4842, !4843, !4844}
!4841 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !4839, file: !3, line: 72, baseType: !217, size: 32)
!4842 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !4839, file: !3, line: 72, baseType: !217, size: 32, offset: 32)
!4843 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !4839, file: !3, line: 73, baseType: !217, size: 32, offset: 64)
!4844 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !4839, file: !3, line: 73, baseType: !217, size: 32, offset: 96)
!4845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4835, size: 64)
!4846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !890, size: 64)
!4847 = !{!0, !4848, !4853, !4905, !4910, !4915, !4917, !4922, !4927, !4932, !4937, !4942, !4945, !4947, !5008, !5014, !5016, !5018, !5020, !5023, !5026, !5031}
!4848 = !DIGlobalVariableExpression(var: !4849, expr: !DIExpression())
!4849 = distinct !DIGlobalVariable(name: "__exitcall_ufx_driver_exit", scope: !2, file: !3, line: 1773, type: !4850, isLocal: true, isDefinition: true)
!4850 = !DIDerivedType(tag: DW_TAG_typedef, name: "exitcall_t", file: !4851, line: 117, baseType: !4852)
!4851 = !DIFile(filename: "./include/linux/init.h", directory: "/home/lizy2001/genbc/linux")
!4852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1962, size: 64)
!4853 = !DIGlobalVariableExpression(var: !4854, expr: !DIExpression())
!4854 = distinct !DIGlobalVariable(name: "__param_console", scope: !2, file: !3, line: 1947, type: !4855, isLocal: true, isDefinition: true, align: 64)
!4855 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4856)
!4856 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_param", file: !4857, line: 69, size: 320, elements: !4858)
!4857 = !DIFile(filename: "./include/linux/moduleparam.h", directory: "/home/lizy2001/genbc/linux")
!4858 = !{!4859, !4860, !4861, !4877, !4879, !4883, !4884}
!4859 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4856, file: !4857, line: 70, baseType: !254, size: 64)
!4860 = !DIDerivedType(tag: DW_TAG_member, name: "mod", scope: !4856, file: !4857, line: 71, baseType: !206, size: 64, offset: 64)
!4861 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4856, file: !4857, line: 72, baseType: !4862, size: 64, offset: 128)
!4862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4863, size: 64)
!4863 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4864)
!4864 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_param_ops", file: !4857, line: 47, size: 256, elements: !4865)
!4865 = !{!4866, !4867, !4872, !4876}
!4866 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4864, file: !4857, line: 49, baseType: !7, size: 32)
!4867 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !4864, file: !4857, line: 51, baseType: !4868, size: 64, offset: 64)
!4868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4869, size: 64)
!4869 = !DISubroutineType(types: !4870)
!4870 = !{!217, !254, !4871}
!4871 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4855, size: 64)
!4872 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !4864, file: !4857, line: 53, baseType: !4873, size: 64, offset: 128)
!4873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4874, size: 64)
!4874 = !DISubroutineType(types: !4875)
!4875 = !{!217, !311, !4871}
!4876 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !4864, file: !4857, line: 55, baseType: !499, size: 64, offset: 192)
!4877 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !4856, file: !4857, line: 73, baseType: !4878, size: 16, offset: 192)
!4878 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !890)
!4879 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !4856, file: !4857, line: 74, baseType: !4880, size: 8, offset: 208)
!4880 = !DIDerivedType(tag: DW_TAG_typedef, name: "s8", file: !225, line: 16, baseType: !4881)
!4881 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s8", file: !227, line: 20, baseType: !4882)
!4882 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!4883 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4856, file: !4857, line: 75, baseType: !1382, size: 8, offset: 216)
!4884 = !DIDerivedType(tag: DW_TAG_member, scope: !4856, file: !4857, line: 76, baseType: !4885, size: 64, offset: 256)
!4885 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4856, file: !4857, line: 76, size: 64, elements: !4886)
!4886 = !{!4887, !4888, !4895}
!4887 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !4885, file: !4857, line: 77, baseType: !211, size: 64)
!4888 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !4885, file: !4857, line: 78, baseType: !4889, size: 64)
!4889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4890, size: 64)
!4890 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4891)
!4891 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kparam_string", file: !4857, line: 86, size: 128, elements: !4892)
!4892 = !{!4893, !4894}
!4893 = !DIDerivedType(tag: DW_TAG_member, name: "maxlen", scope: !4891, file: !4857, line: 87, baseType: !7, size: 32)
!4894 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !4891, file: !4857, line: 88, baseType: !311, size: 64, offset: 64)
!4895 = !DIDerivedType(tag: DW_TAG_member, name: "arr", scope: !4885, file: !4857, line: 79, baseType: !4896, size: 64)
!4896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4897, size: 64)
!4897 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4898)
!4898 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kparam_array", file: !4857, line: 92, size: 256, elements: !4899)
!4899 = !{!4900, !4901, !4902, !4903, !4904}
!4900 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !4898, file: !4857, line: 94, baseType: !7, size: 32)
!4901 = !DIDerivedType(tag: DW_TAG_member, name: "elemsize", scope: !4898, file: !4857, line: 95, baseType: !7, size: 32, offset: 32)
!4902 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !4898, file: !4857, line: 96, baseType: !2766, size: 64, offset: 64)
!4903 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4898, file: !4857, line: 97, baseType: !4862, size: 64, offset: 128)
!4904 = !DIDerivedType(tag: DW_TAG_member, name: "elem", scope: !4898, file: !4857, line: 98, baseType: !211, size: 64, offset: 192)
!4905 = !DIGlobalVariableExpression(var: !4906, expr: !DIExpression())
!4906 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_consoletype274", scope: !2, file: !3, line: 1947, type: !4907, isLocal: true, isDefinition: true, align: 8)
!4907 = !DICompositeType(tag: DW_TAG_array_type, baseType: !255, size: 240, elements: !4908)
!4908 = !{!4909}
!4909 = !DISubrange(count: 30)
!4910 = !DIGlobalVariableExpression(var: !4911, expr: !DIExpression())
!4911 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_console275", scope: !2, file: !3, line: 1948, type: !4912, isLocal: true, isDefinition: true, align: 8)
!4912 = !DICompositeType(tag: DW_TAG_array_type, baseType: !255, size: 480, elements: !4913)
!4913 = !{!4914}
!4914 = !DISubrange(count: 60)
!4915 = !DIGlobalVariableExpression(var: !4916, expr: !DIExpression())
!4916 = distinct !DIGlobalVariable(name: "__param_fb_defio", scope: !2, file: !3, line: 1950, type: !4855, isLocal: true, isDefinition: true, align: 64)
!4917 = !DIGlobalVariableExpression(var: !4918, expr: !DIExpression())
!4918 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_fb_defiotype276", scope: !2, file: !3, line: 1950, type: !4919, isLocal: true, isDefinition: true, align: 8)
!4919 = !DICompositeType(tag: DW_TAG_array_type, baseType: !255, size: 248, elements: !4920)
!4920 = !{!4921}
!4921 = !DISubrange(count: 31)
!4922 = !DIGlobalVariableExpression(var: !4923, expr: !DIExpression())
!4923 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_fb_defio277", scope: !2, file: !3, line: 1951, type: !4924, isLocal: true, isDefinition: true, align: 8)
!4924 = !DICompositeType(tag: DW_TAG_array_type, baseType: !255, size: 408, elements: !4925)
!4925 = !{!4926}
!4926 = !DISubrange(count: 51)
!4927 = !DIGlobalVariableExpression(var: !4928, expr: !DIExpression())
!4928 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_author278", scope: !2, file: !3, line: 1953, type: !4929, isLocal: true, isDefinition: true, align: 8)
!4929 = !DICompositeType(tag: DW_TAG_array_type, baseType: !255, size: 520, elements: !4930)
!4930 = !{!4931}
!4931 = !DISubrange(count: 65)
!4932 = !DIGlobalVariableExpression(var: !4933, expr: !DIExpression())
!4933 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_description279", scope: !2, file: !3, line: 1954, type: !4934, isLocal: true, isDefinition: true, align: 8)
!4934 = !DICompositeType(tag: DW_TAG_array_type, baseType: !255, size: 440, elements: !4935)
!4935 = !{!4936}
!4936 = !DISubrange(count: 55)
!4937 = !DIGlobalVariableExpression(var: !4938, expr: !DIExpression())
!4938 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_file280", scope: !2, file: !3, line: 1955, type: !4939, isLocal: true, isDefinition: true, align: 8)
!4939 = !DICompositeType(tag: DW_TAG_array_type, baseType: !255, size: 328, elements: !4940)
!4940 = !{!4941}
!4941 = !DISubrange(count: 41)
!4942 = !DIGlobalVariableExpression(var: !4943, expr: !DIExpression())
!4943 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_license281", scope: !2, file: !3, line: 1955, type: !4944, isLocal: true, isDefinition: true, align: 8)
!4944 = !DICompositeType(tag: DW_TAG_array_type, baseType: !255, size: 160, elements: !2284)
!4945 = !DIGlobalVariableExpression(var: !4946, expr: !DIExpression())
!4946 = distinct !DIGlobalVariable(name: "console", scope: !2, file: !3, line: 130, type: !521, isLocal: true, isDefinition: true)
!4947 = !DIGlobalVariableExpression(var: !4948, expr: !DIExpression())
!4948 = distinct !DIGlobalVariable(name: "ufx_driver", scope: !2, file: !3, line: 1766, type: !4949, isLocal: true, isDefinition: true)
!4949 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_driver", file: !6, line: 1184, size: 2112, elements: !4950)
!4950 = !{!4951, !4952, !4973, !4977, !4981, !4985, !4989, !4990, !4991, !4992, !4993, !4994, !4999, !5004, !5005, !5006, !5007}
!4951 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4949, file: !6, line: 1185, baseType: !254, size: 64)
!4952 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !4949, file: !6, line: 1187, baseType: !4953, size: 64, offset: 64)
!4953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4954, size: 64)
!4954 = !DISubroutineType(types: !4955)
!4955 = !{!217, !4165, !4956}
!4956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4957, size: 64)
!4957 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4958)
!4958 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_device_id", file: !3529, line: 121, size: 256, elements: !4959)
!4959 = !{!4960, !4961, !4962, !4963, !4964, !4965, !4966, !4967, !4968, !4969, !4970, !4971, !4972}
!4960 = !DIDerivedType(tag: DW_TAG_member, name: "match_flags", scope: !4958, file: !3529, line: 123, baseType: !891, size: 16)
!4961 = !DIDerivedType(tag: DW_TAG_member, name: "idVendor", scope: !4958, file: !3529, line: 126, baseType: !891, size: 16, offset: 16)
!4962 = !DIDerivedType(tag: DW_TAG_member, name: "idProduct", scope: !4958, file: !3529, line: 127, baseType: !891, size: 16, offset: 32)
!4963 = !DIDerivedType(tag: DW_TAG_member, name: "bcdDevice_lo", scope: !4958, file: !3529, line: 128, baseType: !891, size: 16, offset: 48)
!4964 = !DIDerivedType(tag: DW_TAG_member, name: "bcdDevice_hi", scope: !4958, file: !3529, line: 129, baseType: !891, size: 16, offset: 64)
!4965 = !DIDerivedType(tag: DW_TAG_member, name: "bDeviceClass", scope: !4958, file: !3529, line: 132, baseType: !1383, size: 8, offset: 80)
!4966 = !DIDerivedType(tag: DW_TAG_member, name: "bDeviceSubClass", scope: !4958, file: !3529, line: 133, baseType: !1383, size: 8, offset: 88)
!4967 = !DIDerivedType(tag: DW_TAG_member, name: "bDeviceProtocol", scope: !4958, file: !3529, line: 134, baseType: !1383, size: 8, offset: 96)
!4968 = !DIDerivedType(tag: DW_TAG_member, name: "bInterfaceClass", scope: !4958, file: !3529, line: 137, baseType: !1383, size: 8, offset: 104)
!4969 = !DIDerivedType(tag: DW_TAG_member, name: "bInterfaceSubClass", scope: !4958, file: !3529, line: 138, baseType: !1383, size: 8, offset: 112)
!4970 = !DIDerivedType(tag: DW_TAG_member, name: "bInterfaceProtocol", scope: !4958, file: !3529, line: 139, baseType: !1383, size: 8, offset: 120)
!4971 = !DIDerivedType(tag: DW_TAG_member, name: "bInterfaceNumber", scope: !4958, file: !3529, line: 142, baseType: !1383, size: 8, offset: 128)
!4972 = !DIDerivedType(tag: DW_TAG_member, name: "driver_info", scope: !4958, file: !3529, line: 145, baseType: !3548, size: 64, align: 64, offset: 192)
!4973 = !DIDerivedType(tag: DW_TAG_member, name: "disconnect", scope: !4949, file: !6, line: 1190, baseType: !4974, size: 64, offset: 128)
!4974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4975, size: 64)
!4975 = !DISubroutineType(types: !4976)
!4976 = !{null, !4165}
!4977 = !DIDerivedType(tag: DW_TAG_member, name: "unlocked_ioctl", scope: !4949, file: !6, line: 1192, baseType: !4978, size: 64, offset: 192)
!4978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4979, size: 64)
!4979 = !DISubroutineType(types: !4980)
!4980 = !{!217, !4165, !7, !211}
!4981 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !4949, file: !6, line: 1195, baseType: !4982, size: 64, offset: 256)
!4982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4983, size: 64)
!4983 = !DISubroutineType(types: !4984)
!4984 = !{!217, !4165, !3559}
!4985 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !4949, file: !6, line: 1196, baseType: !4986, size: 64, offset: 320)
!4986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4987, size: 64)
!4987 = !DISubroutineType(types: !4988)
!4988 = !{!217, !4165}
!4989 = !DIDerivedType(tag: DW_TAG_member, name: "reset_resume", scope: !4949, file: !6, line: 1197, baseType: !4986, size: 64, offset: 384)
!4990 = !DIDerivedType(tag: DW_TAG_member, name: "pre_reset", scope: !4949, file: !6, line: 1199, baseType: !4986, size: 64, offset: 448)
!4991 = !DIDerivedType(tag: DW_TAG_member, name: "post_reset", scope: !4949, file: !6, line: 1200, baseType: !4986, size: 64, offset: 512)
!4992 = !DIDerivedType(tag: DW_TAG_member, name: "id_table", scope: !4949, file: !6, line: 1202, baseType: !4956, size: 64, offset: 576)
!4993 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !4949, file: !6, line: 1203, baseType: !363, size: 64, offset: 640)
!4994 = !DIDerivedType(tag: DW_TAG_member, name: "dynids", scope: !4949, file: !6, line: 1205, baseType: !4995, size: 128, offset: 704)
!4995 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_dynids", file: !6, line: 1091, size: 128, elements: !4996)
!4996 = !{!4997, !4998}
!4997 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4995, file: !6, line: 1092, baseType: !270)
!4998 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4995, file: !6, line: 1093, baseType: !257, size: 128)
!4999 = !DIDerivedType(tag: DW_TAG_member, name: "drvwrap", scope: !4949, file: !6, line: 1206, baseType: !5000, size: 1216, offset: 832)
!5000 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usbdrv_wrap", file: !6, line: 1113, size: 1216, elements: !5001)
!5001 = !{!5002, !5003}
!5002 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !5000, file: !6, line: 1114, baseType: !3517, size: 1152)
!5003 = !DIDerivedType(tag: DW_TAG_member, name: "for_devices", scope: !5000, file: !6, line: 1115, baseType: !217, size: 32, offset: 1152)
!5004 = !DIDerivedType(tag: DW_TAG_member, name: "no_dynamic_id", scope: !4949, file: !6, line: 1207, baseType: !7, size: 1, offset: 2048, flags: DIFlagBitField, extraData: i64 2048)
!5005 = !DIDerivedType(tag: DW_TAG_member, name: "supports_autosuspend", scope: !4949, file: !6, line: 1208, baseType: !7, size: 1, offset: 2049, flags: DIFlagBitField, extraData: i64 2048)
!5006 = !DIDerivedType(tag: DW_TAG_member, name: "disable_hub_initiated_lpm", scope: !4949, file: !6, line: 1209, baseType: !7, size: 1, offset: 2050, flags: DIFlagBitField, extraData: i64 2048)
!5007 = !DIDerivedType(tag: DW_TAG_member, name: "soft_unbind", scope: !4949, file: !6, line: 1210, baseType: !7, size: 1, offset: 2051, flags: DIFlagBitField, extraData: i64 2048)
!5008 = !DIGlobalVariableExpression(var: !5009, expr: !DIExpression())
!5009 = distinct !DIGlobalVariable(name: "__key", scope: !5010, file: !4755, line: 33, type: !676, isLocal: true, isDefinition: true)
!5010 = distinct !DISubprogram(name: "sema_init", scope: !4755, file: !4755, line: 31, type: !5011, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !284)
!5011 = !DISubroutineType(types: !5012)
!5012 = !{null, !5013, !217}
!5013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4754, size: 64)
!5014 = !DIGlobalVariableExpression(var: !5015, expr: !DIExpression())
!5015 = distinct !DIGlobalVariable(name: "ufx_ops", scope: !2, file: !3, line: 1271, type: !4520, isLocal: true, isDefinition: true)
!5016 = !DIGlobalVariableExpression(var: !5017, expr: !DIExpression())
!5017 = distinct !DIGlobalVariable(name: "ufx_fix", scope: !2, file: !3, line: 108, type: !4334, isLocal: true, isDefinition: true)
!5018 = !DIGlobalVariableExpression(var: !5019, expr: !DIExpression(DW_OP_constu, 264068, DW_OP_stack_value))
!5019 = distinct !DIGlobalVariable(name: "smscufx_info_flags", scope: !2, file: !3, line: 118, type: !3877, isLocal: true, isDefinition: true)
!5020 = !DIGlobalVariableExpression(var: !5021, expr: !DIExpression())
!5021 = distinct !DIGlobalVariable(name: "id_table", scope: !2, file: !3, line: 122, type: !5022, isLocal: true, isDefinition: true)
!5022 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4957, size: 768, elements: !312)
!5023 = !DIGlobalVariableExpression(var: !5024, expr: !DIExpression())
!5024 = distinct !DIGlobalVariable(name: "__param_str_console", scope: !2, file: !3, line: 1947, type: !5025, isLocal: true, isDefinition: true)
!5025 = !DICompositeType(tag: DW_TAG_array_type, baseType: !255, size: 128, elements: !221)
!5026 = !DIGlobalVariableExpression(var: !5027, expr: !DIExpression())
!5027 = distinct !DIGlobalVariable(name: "__param_str_fb_defio", scope: !2, file: !3, line: 1950, type: !5028, isLocal: true, isDefinition: true)
!5028 = !DICompositeType(tag: DW_TAG_array_type, baseType: !255, size: 136, elements: !5029)
!5029 = !{!5030}
!5030 = !DISubrange(count: 17)
!5031 = !DIGlobalVariableExpression(var: !5032, expr: !DIExpression())
!5032 = distinct !DIGlobalVariable(name: "fb_defio", scope: !2, file: !3, line: 131, type: !521, isLocal: true, isDefinition: true)
!5033 = !{!"rsp"}
!5034 = !{i32 7, !"Dwarf Version", i32 4}
!5035 = !{i32 2, !"Debug Info Version", i32 3}
!5036 = !{i32 1, !"wchar_size", i32 2}
!5037 = !{i32 1, !"Code Model", i32 2}
!5038 = !{!"clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)"}
!5039 = distinct !DISubprogram(name: "ufx_driver_init", scope: !3, file: !3, line: 1773, type: !5040, scopeLine: 1773, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !284)
!5040 = !DISubroutineType(types: !5041)
!5041 = !{!217}
!5042 = !DILocation(line: 1773, column: 1, scope: !5039)
!5043 = distinct !DISubprogram(name: "ufx_driver_exit", scope: !3, file: !3, line: 1773, type: !1962, scopeLine: 1773, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !284)
!5044 = !DILocation(line: 1773, column: 1, scope: !5043)
!5045 = distinct !DISubprogram(name: "ufx_usb_probe", scope: !3, file: !3, line: 1607, type: !4954, scopeLine: 1609, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !284)
!5046 = !DILocalVariable(name: "v", arg: 1, scope: !5047, file: !5048, line: 39, type: !5051)
!5047 = distinct !DISubprogram(name: "arch_atomic_set", scope: !5048, file: !5048, line: 39, type: !5049, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !284)
!5048 = !DIFile(filename: "./arch/x86/include/asm/atomic.h", directory: "/home/lizy2001/genbc/linux")
!5049 = !DISubroutineType(types: !5050)
!5050 = !{null, !5051, !217}
!5051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !778, size: 64)
!5052 = !DILocation(line: 39, column: 55, scope: !5047, inlinedAt: !5053)
!5053 = distinct !DILocation(line: 46, column: 2, scope: !5054, inlinedAt: !5056)
!5054 = distinct !DISubprogram(name: "atomic_set", scope: !5055, file: !5055, line: 43, type: !5049, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !284)
!5055 = !DIFile(filename: "./include/asm-generic/atomic-instrumented.h", directory: "/home/lizy2001/genbc/linux")
!5056 = distinct !DILocation(line: 1703, column: 2, scope: !5045)
!5057 = !DILocalVariable(name: "i", arg: 2, scope: !5047, file: !5048, line: 39, type: !217)
!5058 = !DILocation(line: 39, column: 62, scope: !5047, inlinedAt: !5053)
!5059 = !DILocalVariable(name: "v", arg: 1, scope: !5060, file: !5061, line: 84, type: !5064)
!5060 = distinct !DISubprogram(name: "instrument_atomic_write", scope: !5061, file: !5061, line: 84, type: !5062, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !284)
!5061 = !DIFile(filename: "./include/linux/instrumented.h", directory: "/home/lizy2001/genbc/linux")
!5062 = !DISubroutineType(types: !5063)
!5063 = !{null, !5064, !357}
!5064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5065, size: 64)
!5065 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5066)
!5066 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: null)
!5067 = !DILocation(line: 84, column: 74, scope: !5060, inlinedAt: !5068)
!5068 = distinct !DILocation(line: 45, column: 2, scope: !5054, inlinedAt: !5056)
!5069 = !DILocalVariable(name: "size", arg: 2, scope: !5060, file: !5061, line: 84, type: !357)
!5070 = !DILocation(line: 84, column: 84, scope: !5060, inlinedAt: !5068)
!5071 = !DILocalVariable(name: "v", arg: 1, scope: !5054, file: !5055, line: 43, type: !5051)
!5072 = !DILocation(line: 43, column: 22, scope: !5054, inlinedAt: !5056)
!5073 = !DILocalVariable(name: "i", arg: 2, scope: !5054, file: !5055, line: 43, type: !217)
!5074 = !DILocation(line: 43, column: 29, scope: !5054, inlinedAt: !5056)
!5075 = !DILocalVariable(name: "interface", arg: 1, scope: !5045, file: !3, line: 1607, type: !4165)
!5076 = !DILocation(line: 1607, column: 48, scope: !5045)
!5077 = !DILocalVariable(name: "id", arg: 2, scope: !5045, file: !3, line: 1608, type: !4956)
!5078 = !DILocation(line: 1608, column: 32, scope: !5045)
!5079 = !DILocalVariable(name: "usbdev", scope: !5045, file: !3, line: 1610, type: !213)
!5080 = !DILocation(line: 1610, column: 21, scope: !5045)
!5081 = !DILocalVariable(name: "dev", scope: !5045, file: !3, line: 1611, type: !4278)
!5082 = !DILocation(line: 1611, column: 19, scope: !5045)
!5083 = !DILocalVariable(name: "info", scope: !5045, file: !3, line: 1612, type: !4284)
!5084 = !DILocation(line: 1612, column: 18, scope: !5045)
!5085 = !DILocalVariable(name: "retval", scope: !5045, file: !3, line: 1613, type: !217)
!5086 = !DILocation(line: 1613, column: 6, scope: !5045)
!5087 = !DILocalVariable(name: "id_rev", scope: !5045, file: !3, line: 1614, type: !224)
!5088 = !DILocation(line: 1614, column: 6, scope: !5045)
!5089 = !DILocalVariable(name: "fpga_rev", scope: !5045, file: !3, line: 1614, type: !224)
!5090 = !DILocation(line: 1614, column: 14, scope: !5045)
!5091 = !DILocation(line: 1617, column: 31, scope: !5045)
!5092 = !DILocation(line: 1617, column: 11, scope: !5045)
!5093 = !DILocation(line: 1617, column: 9, scope: !5045)
!5094 = !DILocation(line: 1618, column: 2, scope: !5045)
!5095 = !DILocation(line: 1618, column: 2, scope: !5096)
!5096 = distinct !DILexicalBlock(scope: !5097, file: !3, line: 1618, column: 2)
!5097 = distinct !DILexicalBlock(scope: !5045, file: !3, line: 1618, column: 2)
!5098 = !DILocation(line: 1618, column: 2, scope: !5097)
!5099 = !DILocation(line: 1618, column: 2, scope: !5100)
!5100 = distinct !DILexicalBlock(scope: !5096, file: !3, line: 1618, column: 2)
!5101 = !DILocation(line: 1618, column: 2, scope: !5102)
!5102 = distinct !DILexicalBlock(scope: !5100, file: !3, line: 1618, column: 2)
!5103 = !DILocation(line: 1618, column: 2, scope: !5104)
!5104 = distinct !DILexicalBlock(scope: !5100, file: !3, line: 1618, column: 2)
!5105 = !{i32 -2140942558, i32 -2140942529, i32 -2140942483, i32 -2140942425, i32 -2140942371, i32 -2140942317, i32 -2140942262, i32 -2140942231}
!5106 = !DILocation(line: 1618, column: 2, scope: !5107)
!5107 = distinct !DILexicalBlock(scope: !5108, file: !3, line: 1618, column: 2)
!5108 = distinct !DILexicalBlock(scope: !5100, file: !3, line: 1618, column: 2)
!5109 = !{i32 -2140941778, i32 -2140941771, i32 -2140941717, i32 -2140941686, i32 -2140941656}
!5110 = !DILocation(line: 1618, column: 2, scope: !5108)
!5111 = !DILocation(line: 1620, column: 8, scope: !5045)
!5112 = !DILocation(line: 1620, column: 6, scope: !5045)
!5113 = !DILocation(line: 1621, column: 6, scope: !5114)
!5114 = distinct !DILexicalBlock(scope: !5045, file: !3, line: 1621, column: 6)
!5115 = !DILocation(line: 1621, column: 10, scope: !5114)
!5116 = !DILocation(line: 1621, column: 6, scope: !5045)
!5117 = !DILocation(line: 1622, column: 3, scope: !5118)
!5118 = distinct !DILexicalBlock(scope: !5114, file: !3, line: 1621, column: 19)
!5119 = !DILocation(line: 1623, column: 3, scope: !5118)
!5120 = !DILocation(line: 1627, column: 13, scope: !5045)
!5121 = !DILocation(line: 1627, column: 18, scope: !5045)
!5122 = !DILocation(line: 1627, column: 2, scope: !5045)
!5123 = !DILocation(line: 1628, column: 12, scope: !5045)
!5124 = !DILocation(line: 1628, column: 17, scope: !5045)
!5125 = !DILocation(line: 1628, column: 2, scope: !5045)
!5126 = !DILocation(line: 1630, column: 14, scope: !5045)
!5127 = !DILocation(line: 1630, column: 2, scope: !5045)
!5128 = !DILocation(line: 1630, column: 7, scope: !5045)
!5129 = !DILocation(line: 1630, column: 12, scope: !5045)
!5130 = !DILocation(line: 1631, column: 15, scope: !5045)
!5131 = !DILocation(line: 1631, column: 23, scope: !5045)
!5132 = !DILocation(line: 1631, column: 2, scope: !5045)
!5133 = !DILocation(line: 1631, column: 7, scope: !5045)
!5134 = !DILocation(line: 1631, column: 12, scope: !5045)
!5135 = !DILocation(line: 1632, column: 19, scope: !5045)
!5136 = !DILocation(line: 1632, column: 30, scope: !5045)
!5137 = !DILocation(line: 1632, column: 2, scope: !5045)
!5138 = !DILocation(line: 1643, column: 26, scope: !5139)
!5139 = distinct !DILexicalBlock(scope: !5045, file: !3, line: 1643, column: 6)
!5140 = !DILocation(line: 1643, column: 7, scope: !5139)
!5141 = !DILocation(line: 1643, column: 6, scope: !5045)
!5142 = !DILocation(line: 1644, column: 3, scope: !5143)
!5143 = distinct !DILexicalBlock(scope: !5139, file: !3, line: 1643, column: 64)
!5144 = !DILocation(line: 1645, column: 3, scope: !5143)
!5145 = !DILocation(line: 1651, column: 31, scope: !5045)
!5146 = !DILocation(line: 1651, column: 39, scope: !5045)
!5147 = !DILocation(line: 1651, column: 9, scope: !5045)
!5148 = !DILocation(line: 1651, column: 7, scope: !5045)
!5149 = !DILocation(line: 1652, column: 7, scope: !5150)
!5150 = distinct !DILexicalBlock(scope: !5045, file: !3, line: 1652, column: 6)
!5151 = !DILocation(line: 1652, column: 6, scope: !5045)
!5152 = !DILocation(line: 1653, column: 3, scope: !5150)
!5153 = !DILocation(line: 1655, column: 14, scope: !5045)
!5154 = !DILocation(line: 1655, column: 2, scope: !5045)
!5155 = !DILocation(line: 1655, column: 7, scope: !5045)
!5156 = !DILocation(line: 1655, column: 12, scope: !5045)
!5157 = !DILocation(line: 1656, column: 14, scope: !5045)
!5158 = !DILocation(line: 1656, column: 2, scope: !5045)
!5159 = !DILocation(line: 1656, column: 8, scope: !5045)
!5160 = !DILocation(line: 1656, column: 12, scope: !5045)
!5161 = !DILocation(line: 1657, column: 25, scope: !5045)
!5162 = !DILocation(line: 1657, column: 30, scope: !5045)
!5163 = !DILocation(line: 1657, column: 2, scope: !5045)
!5164 = !DILocation(line: 1657, column: 8, scope: !5045)
!5165 = !DILocation(line: 1657, column: 23, scope: !5045)
!5166 = !DILocation(line: 1658, column: 2, scope: !5045)
!5167 = !DILocation(line: 1658, column: 8, scope: !5045)
!5168 = !DILocation(line: 1658, column: 14, scope: !5045)
!5169 = !DILocation(line: 1660, column: 26, scope: !5045)
!5170 = !DILocation(line: 1660, column: 32, scope: !5045)
!5171 = !DILocation(line: 1660, column: 11, scope: !5045)
!5172 = !DILocation(line: 1660, column: 9, scope: !5045)
!5173 = !DILocation(line: 1661, column: 6, scope: !5174)
!5174 = distinct !DILexicalBlock(scope: !5045, file: !3, line: 1661, column: 6)
!5175 = !DILocation(line: 1661, column: 13, scope: !5174)
!5176 = !DILocation(line: 1661, column: 6, scope: !5045)
!5177 = !DILocation(line: 1662, column: 3, scope: !5178)
!5178 = distinct !DILexicalBlock(scope: !5174, file: !3, line: 1661, column: 18)
!5179 = !DILocation(line: 1663, column: 3, scope: !5178)
!5180 = !DILocation(line: 1666, column: 2, scope: !5045)
!5181 = !DILocation(line: 1666, column: 2, scope: !5182)
!5182 = distinct !DILexicalBlock(scope: !5045, file: !3, line: 1666, column: 2)
!5183 = !DILocation(line: 1666, column: 2, scope: !5184)
!5184 = distinct !DILexicalBlock(scope: !5182, file: !3, line: 1666, column: 2)
!5185 = !DILocation(line: 1669, column: 18, scope: !5045)
!5186 = !DILocation(line: 1669, column: 24, scope: !5045)
!5187 = !DILocation(line: 1669, column: 2, scope: !5045)
!5188 = !DILocation(line: 1671, column: 24, scope: !5045)
!5189 = !DILocation(line: 1671, column: 11, scope: !5045)
!5190 = !DILocation(line: 1671, column: 9, scope: !5045)
!5191 = !DILocation(line: 1672, column: 2, scope: !5192)
!5192 = distinct !DILexicalBlock(scope: !5193, file: !3, line: 1672, column: 2)
!5193 = distinct !DILexicalBlock(scope: !5045, file: !3, line: 1672, column: 2)
!5194 = !DILocation(line: 1672, column: 2, scope: !5193)
!5195 = !DILocation(line: 1672, column: 2, scope: !5196)
!5196 = distinct !DILexicalBlock(scope: !5192, file: !3, line: 1672, column: 2)
!5197 = !DILocation(line: 1675, column: 24, scope: !5045)
!5198 = !DILocation(line: 1675, column: 11, scope: !5045)
!5199 = !DILocation(line: 1675, column: 9, scope: !5045)
!5200 = !DILocation(line: 1676, column: 2, scope: !5201)
!5201 = distinct !DILexicalBlock(scope: !5202, file: !3, line: 1676, column: 2)
!5202 = distinct !DILexicalBlock(scope: !5045, file: !3, line: 1676, column: 2)
!5203 = !DILocation(line: 1676, column: 2, scope: !5202)
!5204 = !DILocation(line: 1676, column: 2, scope: !5205)
!5205 = distinct !DILexicalBlock(scope: !5201, file: !3, line: 1676, column: 2)
!5206 = !DILocation(line: 1680, column: 26, scope: !5045)
!5207 = !DILocation(line: 1680, column: 11, scope: !5045)
!5208 = !DILocation(line: 1680, column: 9, scope: !5045)
!5209 = !DILocation(line: 1681, column: 2, scope: !5210)
!5210 = distinct !DILexicalBlock(scope: !5211, file: !3, line: 1681, column: 2)
!5211 = distinct !DILexicalBlock(scope: !5045, file: !3, line: 1681, column: 2)
!5212 = !DILocation(line: 1681, column: 2, scope: !5211)
!5213 = !DILocation(line: 1681, column: 2, scope: !5214)
!5214 = distinct !DILexicalBlock(scope: !5210, file: !3, line: 1681, column: 2)
!5215 = !DILocation(line: 1684, column: 30, scope: !5045)
!5216 = !DILocation(line: 1684, column: 11, scope: !5045)
!5217 = !DILocation(line: 1684, column: 9, scope: !5045)
!5218 = !DILocation(line: 1685, column: 2, scope: !5219)
!5219 = distinct !DILexicalBlock(scope: !5220, file: !3, line: 1685, column: 2)
!5220 = distinct !DILexicalBlock(scope: !5045, file: !3, line: 1685, column: 2)
!5221 = !DILocation(line: 1685, column: 2, scope: !5220)
!5222 = !DILocation(line: 1685, column: 2, scope: !5223)
!5223 = distinct !DILexicalBlock(scope: !5219, file: !3, line: 1685, column: 2)
!5224 = !DILocation(line: 1688, column: 27, scope: !5045)
!5225 = !DILocation(line: 1688, column: 11, scope: !5045)
!5226 = !DILocation(line: 1688, column: 9, scope: !5045)
!5227 = !DILocation(line: 1689, column: 2, scope: !5228)
!5228 = distinct !DILexicalBlock(scope: !5229, file: !3, line: 1689, column: 2)
!5229 = distinct !DILexicalBlock(scope: !5045, file: !3, line: 1689, column: 2)
!5230 = !DILocation(line: 1689, column: 2, scope: !5229)
!5231 = !DILocation(line: 1689, column: 2, scope: !5232)
!5232 = distinct !DILexicalBlock(scope: !5228, file: !3, line: 1689, column: 2)
!5233 = !DILocation(line: 1692, column: 24, scope: !5045)
!5234 = !DILocation(line: 1692, column: 11, scope: !5045)
!5235 = !DILocation(line: 1692, column: 9, scope: !5045)
!5236 = !DILocation(line: 1693, column: 2, scope: !5237)
!5237 = distinct !DILexicalBlock(scope: !5238, file: !3, line: 1693, column: 2)
!5238 = distinct !DILexicalBlock(scope: !5045, file: !3, line: 1693, column: 2)
!5239 = !DILocation(line: 1693, column: 2, scope: !5238)
!5240 = !DILocation(line: 1693, column: 2, scope: !5241)
!5241 = distinct !DILexicalBlock(scope: !5237, file: !3, line: 1693, column: 2)
!5242 = !DILocation(line: 1696, column: 27, scope: !5045)
!5243 = !DILocation(line: 1696, column: 32, scope: !5045)
!5244 = !DILocation(line: 1696, column: 11, scope: !5045)
!5245 = !DILocation(line: 1696, column: 9, scope: !5045)
!5246 = !DILocation(line: 1697, column: 2, scope: !5247)
!5247 = distinct !DILexicalBlock(scope: !5248, file: !3, line: 1697, column: 2)
!5248 = distinct !DILexicalBlock(scope: !5045, file: !3, line: 1697, column: 2)
!5249 = !DILocation(line: 1697, column: 2, scope: !5248)
!5250 = !DILocation(line: 1697, column: 2, scope: !5251)
!5251 = distinct !DILexicalBlock(scope: !5247, file: !3, line: 1697, column: 2)
!5252 = !DILocation(line: 1699, column: 28, scope: !5045)
!5253 = !DILocation(line: 1699, column: 11, scope: !5045)
!5254 = !DILocation(line: 1699, column: 9, scope: !5045)
!5255 = !DILocation(line: 1700, column: 2, scope: !5256)
!5256 = distinct !DILexicalBlock(scope: !5257, file: !3, line: 1700, column: 2)
!5257 = distinct !DILexicalBlock(scope: !5045, file: !3, line: 1700, column: 2)
!5258 = !DILocation(line: 1700, column: 2, scope: !5257)
!5259 = !DILocation(line: 1700, column: 2, scope: !5260)
!5260 = distinct !DILexicalBlock(scope: !5256, file: !3, line: 1700, column: 2)
!5261 = !DILocation(line: 1703, column: 14, scope: !5045)
!5262 = !DILocation(line: 1703, column: 19, scope: !5045)
!5263 = !DILocation(line: 45, column: 26, scope: !5054, inlinedAt: !5056)
!5264 = !DILocation(line: 86, column: 20, scope: !5060, inlinedAt: !5068)
!5265 = !DILocation(line: 86, column: 23, scope: !5060, inlinedAt: !5068)
!5266 = !DILocation(line: 86, column: 2, scope: !5060, inlinedAt: !5068)
!5267 = !DILocation(line: 87, column: 2, scope: !5060, inlinedAt: !5068)
!5268 = !DILocation(line: 46, column: 18, scope: !5054, inlinedAt: !5056)
!5269 = !DILocation(line: 46, column: 21, scope: !5054, inlinedAt: !5056)
!5270 = !DILocation(line: 41, column: 2, scope: !5271, inlinedAt: !5053)
!5271 = distinct !DILexicalBlock(scope: !5047, file: !5048, line: 41, column: 2)
!5272 = !DILocation(line: 1706, column: 30, scope: !5045)
!5273 = !DILocation(line: 1706, column: 36, scope: !5045)
!5274 = !DILocation(line: 1706, column: 41, scope: !5045)
!5275 = !DILocation(line: 1706, column: 11, scope: !5045)
!5276 = !DILocation(line: 1706, column: 9, scope: !5045)
!5277 = !DILocation(line: 1707, column: 2, scope: !5278)
!5278 = distinct !DILexicalBlock(scope: !5279, file: !3, line: 1707, column: 2)
!5279 = distinct !DILexicalBlock(scope: !5045, file: !3, line: 1707, column: 2)
!5280 = !DILocation(line: 1707, column: 2, scope: !5279)
!5281 = !DILocation(line: 1707, column: 2, scope: !5282)
!5282 = distinct !DILexicalBlock(scope: !5278, file: !3, line: 1707, column: 2)
!5283 = !DILocation(line: 1710, column: 27, scope: !5045)
!5284 = !DILocation(line: 1710, column: 11, scope: !5045)
!5285 = !DILocation(line: 1710, column: 9, scope: !5045)
!5286 = !DILocation(line: 1711, column: 2, scope: !5287)
!5287 = distinct !DILexicalBlock(scope: !5288, file: !3, line: 1711, column: 2)
!5288 = distinct !DILexicalBlock(scope: !5045, file: !3, line: 1711, column: 2)
!5289 = !DILocation(line: 1711, column: 2, scope: !5288)
!5290 = !DILocation(line: 1711, column: 2, scope: !5291)
!5291 = distinct !DILexicalBlock(scope: !5287, file: !3, line: 1711, column: 2)
!5292 = !DILocation(line: 1714, column: 32, scope: !5045)
!5293 = !DILocation(line: 1714, column: 11, scope: !5045)
!5294 = !DILocation(line: 1714, column: 9, scope: !5045)
!5295 = !DILocation(line: 1715, column: 2, scope: !5296)
!5296 = distinct !DILexicalBlock(scope: !5297, file: !3, line: 1715, column: 2)
!5297 = distinct !DILexicalBlock(scope: !5045, file: !3, line: 1715, column: 2)
!5298 = !DILocation(line: 1715, column: 2, scope: !5297)
!5299 = !DILocation(line: 1715, column: 2, scope: !5300)
!5300 = distinct !DILexicalBlock(scope: !5296, file: !3, line: 1715, column: 2)
!5301 = !DILocation(line: 1717, column: 2, scope: !5045)
!5302 = !DILocation(line: 1721, column: 2, scope: !5045)
!5303 = !DILabel(scope: !5045, name: "error", file: !3, line: 1723)
!5304 = !DILocation(line: 1723, column: 1, scope: !5045)
!5305 = !DILocation(line: 1724, column: 19, scope: !5045)
!5306 = !DILocation(line: 1724, column: 25, scope: !5045)
!5307 = !DILocation(line: 1724, column: 2, scope: !5045)
!5308 = !DILabel(scope: !5045, name: "destroy_modedb", file: !3, line: 1725)
!5309 = !DILocation(line: 1725, column: 1, scope: !5045)
!5310 = !DILocation(line: 1726, column: 20, scope: !5045)
!5311 = !DILocation(line: 1726, column: 26, scope: !5045)
!5312 = !DILocation(line: 1726, column: 35, scope: !5045)
!5313 = !DILocation(line: 1726, column: 2, scope: !5045)
!5314 = !DILocation(line: 1727, column: 8, scope: !5045)
!5315 = !DILocation(line: 1727, column: 14, scope: !5045)
!5316 = !DILocation(line: 1727, column: 2, scope: !5045)
!5317 = !DILocation(line: 1728, column: 23, scope: !5045)
!5318 = !DILocation(line: 1728, column: 29, scope: !5045)
!5319 = !DILocation(line: 1728, column: 2, scope: !5045)
!5320 = !DILocation(line: 1729, column: 22, scope: !5045)
!5321 = !DILocation(line: 1729, column: 2, scope: !5045)
!5322 = !DILabel(scope: !5045, name: "put_ref", file: !3, line: 1730)
!5323 = !DILocation(line: 1730, column: 1, scope: !5045)
!5324 = !DILocation(line: 1731, column: 12, scope: !5045)
!5325 = !DILocation(line: 1731, column: 17, scope: !5045)
!5326 = !DILocation(line: 1731, column: 2, scope: !5045)
!5327 = !DILocation(line: 1732, column: 12, scope: !5045)
!5328 = !DILocation(line: 1732, column: 17, scope: !5045)
!5329 = !DILocation(line: 1732, column: 2, scope: !5045)
!5330 = !DILocation(line: 1733, column: 9, scope: !5045)
!5331 = !DILocation(line: 1733, column: 2, scope: !5045)
!5332 = !DILabel(scope: !5045, name: "e_nomem", file: !3, line: 1735)
!5333 = !DILocation(line: 1735, column: 1, scope: !5045)
!5334 = !DILocation(line: 1736, column: 9, scope: !5045)
!5335 = !DILocation(line: 1737, column: 2, scope: !5045)
!5336 = !DILocation(line: 1738, column: 1, scope: !5045)
!5337 = distinct !DISubprogram(name: "ufx_usb_disconnect", scope: !3, file: !3, line: 1740, type: !4975, scopeLine: 1741, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !284)
!5338 = !DILocation(line: 39, column: 55, scope: !5047, inlinedAt: !5339)
!5339 = distinct !DILocation(line: 46, column: 2, scope: !5054, inlinedAt: !5340)
!5340 = distinct !DILocation(line: 1752, column: 2, scope: !5337)
!5341 = !DILocation(line: 39, column: 62, scope: !5047, inlinedAt: !5339)
!5342 = !DILocation(line: 84, column: 74, scope: !5060, inlinedAt: !5343)
!5343 = distinct !DILocation(line: 45, column: 2, scope: !5054, inlinedAt: !5340)
!5344 = !DILocation(line: 84, column: 84, scope: !5060, inlinedAt: !5343)
!5345 = !DILocation(line: 43, column: 22, scope: !5054, inlinedAt: !5340)
!5346 = !DILocation(line: 43, column: 29, scope: !5054, inlinedAt: !5340)
!5347 = !DILocalVariable(name: "interface", arg: 1, scope: !5337, file: !3, line: 1740, type: !4165)
!5348 = !DILocation(line: 1740, column: 54, scope: !5337)
!5349 = !DILocalVariable(name: "dev", scope: !5337, file: !3, line: 1742, type: !4278)
!5350 = !DILocation(line: 1742, column: 19, scope: !5337)
!5351 = !DILocation(line: 1744, column: 25, scope: !5337)
!5352 = !DILocation(line: 1744, column: 8, scope: !5337)
!5353 = !DILocation(line: 1744, column: 6, scope: !5337)
!5354 = !DILocation(line: 1746, column: 2, scope: !5355)
!5355 = distinct !DILexicalBlock(scope: !5356, file: !3, line: 1746, column: 2)
!5356 = distinct !DILexicalBlock(scope: !5337, file: !3, line: 1746, column: 2)
!5357 = !DILocation(line: 1746, column: 2, scope: !5356)
!5358 = !DILocation(line: 1749, column: 2, scope: !5337)
!5359 = !DILocation(line: 1749, column: 7, scope: !5337)
!5360 = !DILocation(line: 1749, column: 19, scope: !5337)
!5361 = !DILocation(line: 1752, column: 14, scope: !5337)
!5362 = !DILocation(line: 1752, column: 19, scope: !5337)
!5363 = !DILocation(line: 45, column: 26, scope: !5054, inlinedAt: !5340)
!5364 = !DILocation(line: 86, column: 20, scope: !5060, inlinedAt: !5343)
!5365 = !DILocation(line: 86, column: 23, scope: !5060, inlinedAt: !5343)
!5366 = !DILocation(line: 86, column: 2, scope: !5060, inlinedAt: !5343)
!5367 = !DILocation(line: 87, column: 2, scope: !5060, inlinedAt: !5343)
!5368 = !DILocation(line: 46, column: 18, scope: !5054, inlinedAt: !5340)
!5369 = !DILocation(line: 46, column: 21, scope: !5054, inlinedAt: !5340)
!5370 = !DILocation(line: 41, column: 2, scope: !5271, inlinedAt: !5339)
!5371 = !DILocation(line: 1754, column: 19, scope: !5337)
!5372 = !DILocation(line: 1754, column: 2, scope: !5337)
!5373 = !DILocation(line: 1757, column: 6, scope: !5374)
!5374 = distinct !DILexicalBlock(scope: !5337, file: !3, line: 1757, column: 6)
!5375 = !DILocation(line: 1757, column: 11, scope: !5374)
!5376 = !DILocation(line: 1757, column: 20, scope: !5374)
!5377 = !DILocation(line: 1757, column: 6, scope: !5337)
!5378 = !DILocation(line: 1758, column: 26, scope: !5374)
!5379 = !DILocation(line: 1758, column: 31, scope: !5374)
!5380 = !DILocation(line: 1758, column: 3, scope: !5374)
!5381 = !DILocation(line: 1761, column: 12, scope: !5337)
!5382 = !DILocation(line: 1761, column: 17, scope: !5337)
!5383 = !DILocation(line: 1761, column: 2, scope: !5337)
!5384 = !DILocation(line: 1764, column: 1, scope: !5337)
!5385 = distinct !DISubprogram(name: "interface_to_usbdev", scope: !6, file: !6, line: 715, type: !5386, scopeLine: 716, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !284)
!5386 = !DISubroutineType(types: !5387)
!5387 = !{!213, !4165}
!5388 = !DILocalVariable(name: "intf", arg: 1, scope: !5385, file: !6, line: 715, type: !4165)
!5389 = !DILocation(line: 715, column: 76, scope: !5385)
!5390 = !DILocalVariable(name: "__mptr", scope: !5391, file: !6, line: 717, type: !211)
!5391 = distinct !DILexicalBlock(scope: !5385, file: !6, line: 717, column: 9)
!5392 = !DILocation(line: 717, column: 9, scope: !5391)
!5393 = !DILocation(line: 717, column: 9, scope: !5394)
!5394 = distinct !DILexicalBlock(scope: !5391, file: !6, line: 717, column: 9)
!5395 = !DILocation(line: 717, column: 2, scope: !5385)
!5396 = distinct !DISubprogram(name: "kzalloc", scope: !186, file: !186, line: 662, type: !5397, scopeLine: 663, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !284)
!5397 = !DISubroutineType(types: !5398)
!5398 = !{!211, !357, !209}
!5399 = !DILocalVariable(name: "s", arg: 1, scope: !5400, file: !186, line: 445, type: !966)
!5400 = distinct !DISubprogram(name: "kmem_cache_alloc_trace", scope: !186, file: !186, line: 445, type: !5401, scopeLine: 447, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !284)
!5401 = !DISubroutineType(types: !5402)
!5402 = !{!211, !966, !209, !357}
!5403 = !DILocation(line: 445, column: 72, scope: !5400, inlinedAt: !5404)
!5404 = distinct !DILocation(line: 552, column: 10, scope: !5405, inlinedAt: !5408)
!5405 = distinct !DILexicalBlock(scope: !5406, file: !186, line: 540, column: 34)
!5406 = distinct !DILexicalBlock(scope: !5407, file: !186, line: 540, column: 6)
!5407 = distinct !DISubprogram(name: "kmalloc", scope: !186, file: !186, line: 538, type: !5397, scopeLine: 539, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !284)
!5408 = distinct !DILocation(line: 664, column: 9, scope: !5396)
!5409 = !DILocalVariable(name: "flags", arg: 2, scope: !5400, file: !186, line: 446, type: !209)
!5410 = !DILocation(line: 446, column: 9, scope: !5400, inlinedAt: !5404)
!5411 = !DILocalVariable(name: "size", arg: 3, scope: !5400, file: !186, line: 446, type: !357)
!5412 = !DILocation(line: 446, column: 23, scope: !5400, inlinedAt: !5404)
!5413 = !DILocalVariable(name: "ret", scope: !5400, file: !186, line: 448, type: !211)
!5414 = !DILocation(line: 448, column: 8, scope: !5400, inlinedAt: !5404)
!5415 = !DILocalVariable(name: "flags", arg: 1, scope: !5416, file: !186, line: 318, type: !209)
!5416 = distinct !DISubprogram(name: "kmalloc_type", scope: !186, file: !186, line: 318, type: !5417, scopeLine: 319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !284)
!5417 = !DISubroutineType(types: !5418)
!5418 = !{!185, !209}
!5419 = !DILocation(line: 318, column: 67, scope: !5416, inlinedAt: !5420)
!5420 = distinct !DILocation(line: 553, column: 20, scope: !5405, inlinedAt: !5408)
!5421 = !DILocalVariable(name: "size", arg: 1, scope: !5422, file: !186, line: 346, type: !357)
!5422 = distinct !DISubprogram(name: "kmalloc_index", scope: !186, file: !186, line: 346, type: !5423, scopeLine: 347, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !284)
!5423 = !DISubroutineType(types: !5424)
!5424 = !{!7, !357}
!5425 = !DILocation(line: 346, column: 58, scope: !5422, inlinedAt: !5426)
!5426 = distinct !DILocation(line: 547, column: 11, scope: !5405, inlinedAt: !5408)
!5427 = !DILocalVariable(name: "size", arg: 1, scope: !5428, file: !186, line: 472, type: !357)
!5428 = distinct !DISubprogram(name: "kmalloc_order_trace", scope: !186, file: !186, line: 472, type: !5429, scopeLine: 473, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !284)
!5429 = !DISubroutineType(types: !5430)
!5430 = !{!211, !357, !209, !7}
!5431 = !DILocation(line: 472, column: 28, scope: !5428, inlinedAt: !5432)
!5432 = distinct !DILocation(line: 481, column: 9, scope: !5433, inlinedAt: !5434)
!5433 = distinct !DISubprogram(name: "kmalloc_large", scope: !186, file: !186, line: 478, type: !5397, scopeLine: 479, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !284)
!5434 = distinct !DILocation(line: 545, column: 11, scope: !5435, inlinedAt: !5408)
!5435 = distinct !DILexicalBlock(scope: !5405, file: !186, line: 544, column: 7)
!5436 = !DILocalVariable(name: "flags", arg: 2, scope: !5428, file: !186, line: 472, type: !209)
!5437 = !DILocation(line: 472, column: 40, scope: !5428, inlinedAt: !5432)
!5438 = !DILocalVariable(name: "order", arg: 3, scope: !5428, file: !186, line: 472, type: !7)
!5439 = !DILocation(line: 472, column: 60, scope: !5428, inlinedAt: !5432)
!5440 = !DILocalVariable(name: "size", arg: 1, scope: !5433, file: !186, line: 478, type: !357)
!5441 = !DILocation(line: 478, column: 51, scope: !5433, inlinedAt: !5434)
!5442 = !DILocalVariable(name: "flags", arg: 2, scope: !5433, file: !186, line: 478, type: !209)
!5443 = !DILocation(line: 478, column: 63, scope: !5433, inlinedAt: !5434)
!5444 = !DILocalVariable(name: "order", scope: !5433, file: !186, line: 480, type: !7)
!5445 = !DILocation(line: 480, column: 15, scope: !5433, inlinedAt: !5434)
!5446 = !DILocalVariable(name: "size", arg: 1, scope: !5407, file: !186, line: 538, type: !357)
!5447 = !DILocation(line: 538, column: 45, scope: !5407, inlinedAt: !5408)
!5448 = !DILocalVariable(name: "flags", arg: 2, scope: !5407, file: !186, line: 538, type: !209)
!5449 = !DILocation(line: 538, column: 57, scope: !5407, inlinedAt: !5408)
!5450 = !DILocalVariable(name: "index", scope: !5405, file: !186, line: 542, type: !7)
!5451 = !DILocation(line: 542, column: 16, scope: !5405, inlinedAt: !5408)
!5452 = !DILocalVariable(name: "size", arg: 1, scope: !5396, file: !186, line: 662, type: !357)
!5453 = !DILocation(line: 662, column: 36, scope: !5396)
!5454 = !DILocalVariable(name: "flags", arg: 2, scope: !5396, file: !186, line: 662, type: !209)
!5455 = !DILocation(line: 662, column: 48, scope: !5396)
!5456 = !DILocation(line: 664, column: 17, scope: !5396)
!5457 = !DILocation(line: 664, column: 23, scope: !5396)
!5458 = !DILocation(line: 664, column: 29, scope: !5396)
!5459 = !DILocation(line: 540, column: 27, scope: !5406, inlinedAt: !5408)
!5460 = !DILocation(line: 540, column: 6, scope: !5406, inlinedAt: !5408)
!5461 = !DILocation(line: 540, column: 6, scope: !5407, inlinedAt: !5408)
!5462 = !DILocation(line: 544, column: 7, scope: !5435, inlinedAt: !5408)
!5463 = !DILocation(line: 544, column: 12, scope: !5435, inlinedAt: !5408)
!5464 = !DILocation(line: 544, column: 7, scope: !5405, inlinedAt: !5408)
!5465 = !DILocation(line: 545, column: 25, scope: !5435, inlinedAt: !5408)
!5466 = !DILocation(line: 545, column: 31, scope: !5435, inlinedAt: !5408)
!5467 = !DILocation(line: 480, column: 33, scope: !5433, inlinedAt: !5434)
!5468 = !DILocation(line: 480, column: 23, scope: !5433, inlinedAt: !5434)
!5469 = !DILocation(line: 481, column: 29, scope: !5433, inlinedAt: !5434)
!5470 = !DILocation(line: 481, column: 35, scope: !5433, inlinedAt: !5434)
!5471 = !DILocation(line: 481, column: 42, scope: !5433, inlinedAt: !5434)
!5472 = !DILocation(line: 474, column: 23, scope: !5428, inlinedAt: !5432)
!5473 = !DILocation(line: 474, column: 29, scope: !5428, inlinedAt: !5432)
!5474 = !DILocation(line: 474, column: 36, scope: !5428, inlinedAt: !5432)
!5475 = !DILocation(line: 474, column: 9, scope: !5428, inlinedAt: !5432)
!5476 = !DILocation(line: 545, column: 4, scope: !5435, inlinedAt: !5408)
!5477 = !DILocation(line: 547, column: 25, scope: !5405, inlinedAt: !5408)
!5478 = !DILocation(line: 348, column: 7, scope: !5479, inlinedAt: !5426)
!5479 = distinct !DILexicalBlock(scope: !5422, file: !186, line: 348, column: 6)
!5480 = !DILocation(line: 348, column: 6, scope: !5422, inlinedAt: !5426)
!5481 = !DILocation(line: 349, column: 3, scope: !5479, inlinedAt: !5426)
!5482 = !DILocation(line: 351, column: 6, scope: !5483, inlinedAt: !5426)
!5483 = distinct !DILexicalBlock(scope: !5422, file: !186, line: 351, column: 6)
!5484 = !DILocation(line: 351, column: 11, scope: !5483, inlinedAt: !5426)
!5485 = !DILocation(line: 351, column: 6, scope: !5422, inlinedAt: !5426)
!5486 = !DILocation(line: 352, column: 3, scope: !5483, inlinedAt: !5426)
!5487 = !DILocation(line: 354, column: 32, scope: !5488, inlinedAt: !5426)
!5488 = distinct !DILexicalBlock(scope: !5422, file: !186, line: 354, column: 6)
!5489 = !DILocation(line: 354, column: 37, scope: !5488, inlinedAt: !5426)
!5490 = !DILocation(line: 354, column: 42, scope: !5488, inlinedAt: !5426)
!5491 = !DILocation(line: 354, column: 45, scope: !5488, inlinedAt: !5426)
!5492 = !DILocation(line: 354, column: 50, scope: !5488, inlinedAt: !5426)
!5493 = !DILocation(line: 354, column: 6, scope: !5422, inlinedAt: !5426)
!5494 = !DILocation(line: 355, column: 3, scope: !5488, inlinedAt: !5426)
!5495 = !DILocation(line: 356, column: 32, scope: !5496, inlinedAt: !5426)
!5496 = distinct !DILexicalBlock(scope: !5422, file: !186, line: 356, column: 6)
!5497 = !DILocation(line: 356, column: 37, scope: !5496, inlinedAt: !5426)
!5498 = !DILocation(line: 356, column: 43, scope: !5496, inlinedAt: !5426)
!5499 = !DILocation(line: 356, column: 46, scope: !5496, inlinedAt: !5426)
!5500 = !DILocation(line: 356, column: 51, scope: !5496, inlinedAt: !5426)
!5501 = !DILocation(line: 356, column: 6, scope: !5422, inlinedAt: !5426)
!5502 = !DILocation(line: 357, column: 3, scope: !5496, inlinedAt: !5426)
!5503 = !DILocation(line: 358, column: 6, scope: !5504, inlinedAt: !5426)
!5504 = distinct !DILexicalBlock(scope: !5422, file: !186, line: 358, column: 6)
!5505 = !DILocation(line: 358, column: 11, scope: !5504, inlinedAt: !5426)
!5506 = !DILocation(line: 358, column: 6, scope: !5422, inlinedAt: !5426)
!5507 = !DILocation(line: 358, column: 26, scope: !5504, inlinedAt: !5426)
!5508 = !DILocation(line: 359, column: 6, scope: !5509, inlinedAt: !5426)
!5509 = distinct !DILexicalBlock(scope: !5422, file: !186, line: 359, column: 6)
!5510 = !DILocation(line: 359, column: 11, scope: !5509, inlinedAt: !5426)
!5511 = !DILocation(line: 359, column: 6, scope: !5422, inlinedAt: !5426)
!5512 = !DILocation(line: 359, column: 26, scope: !5509, inlinedAt: !5426)
!5513 = !DILocation(line: 360, column: 6, scope: !5514, inlinedAt: !5426)
!5514 = distinct !DILexicalBlock(scope: !5422, file: !186, line: 360, column: 6)
!5515 = !DILocation(line: 360, column: 11, scope: !5514, inlinedAt: !5426)
!5516 = !DILocation(line: 360, column: 6, scope: !5422, inlinedAt: !5426)
!5517 = !DILocation(line: 360, column: 26, scope: !5514, inlinedAt: !5426)
!5518 = !DILocation(line: 361, column: 6, scope: !5519, inlinedAt: !5426)
!5519 = distinct !DILexicalBlock(scope: !5422, file: !186, line: 361, column: 6)
!5520 = !DILocation(line: 361, column: 11, scope: !5519, inlinedAt: !5426)
!5521 = !DILocation(line: 361, column: 6, scope: !5422, inlinedAt: !5426)
!5522 = !DILocation(line: 361, column: 26, scope: !5519, inlinedAt: !5426)
!5523 = !DILocation(line: 362, column: 6, scope: !5524, inlinedAt: !5426)
!5524 = distinct !DILexicalBlock(scope: !5422, file: !186, line: 362, column: 6)
!5525 = !DILocation(line: 362, column: 11, scope: !5524, inlinedAt: !5426)
!5526 = !DILocation(line: 362, column: 6, scope: !5422, inlinedAt: !5426)
!5527 = !DILocation(line: 362, column: 26, scope: !5524, inlinedAt: !5426)
!5528 = !DILocation(line: 363, column: 6, scope: !5529, inlinedAt: !5426)
!5529 = distinct !DILexicalBlock(scope: !5422, file: !186, line: 363, column: 6)
!5530 = !DILocation(line: 363, column: 11, scope: !5529, inlinedAt: !5426)
!5531 = !DILocation(line: 363, column: 6, scope: !5422, inlinedAt: !5426)
!5532 = !DILocation(line: 363, column: 26, scope: !5529, inlinedAt: !5426)
!5533 = !DILocation(line: 364, column: 6, scope: !5534, inlinedAt: !5426)
!5534 = distinct !DILexicalBlock(scope: !5422, file: !186, line: 364, column: 6)
!5535 = !DILocation(line: 364, column: 11, scope: !5534, inlinedAt: !5426)
!5536 = !DILocation(line: 364, column: 6, scope: !5422, inlinedAt: !5426)
!5537 = !DILocation(line: 364, column: 26, scope: !5534, inlinedAt: !5426)
!5538 = !DILocation(line: 365, column: 6, scope: !5539, inlinedAt: !5426)
!5539 = distinct !DILexicalBlock(scope: !5422, file: !186, line: 365, column: 6)
!5540 = !DILocation(line: 365, column: 11, scope: !5539, inlinedAt: !5426)
!5541 = !DILocation(line: 365, column: 6, scope: !5422, inlinedAt: !5426)
!5542 = !DILocation(line: 365, column: 26, scope: !5539, inlinedAt: !5426)
!5543 = !DILocation(line: 366, column: 6, scope: !5544, inlinedAt: !5426)
!5544 = distinct !DILexicalBlock(scope: !5422, file: !186, line: 366, column: 6)
!5545 = !DILocation(line: 366, column: 11, scope: !5544, inlinedAt: !5426)
!5546 = !DILocation(line: 366, column: 6, scope: !5422, inlinedAt: !5426)
!5547 = !DILocation(line: 366, column: 26, scope: !5544, inlinedAt: !5426)
!5548 = !DILocation(line: 367, column: 6, scope: !5549, inlinedAt: !5426)
!5549 = distinct !DILexicalBlock(scope: !5422, file: !186, line: 367, column: 6)
!5550 = !DILocation(line: 367, column: 11, scope: !5549, inlinedAt: !5426)
!5551 = !DILocation(line: 367, column: 6, scope: !5422, inlinedAt: !5426)
!5552 = !DILocation(line: 367, column: 26, scope: !5549, inlinedAt: !5426)
!5553 = !DILocation(line: 368, column: 6, scope: !5554, inlinedAt: !5426)
!5554 = distinct !DILexicalBlock(scope: !5422, file: !186, line: 368, column: 6)
!5555 = !DILocation(line: 368, column: 11, scope: !5554, inlinedAt: !5426)
!5556 = !DILocation(line: 368, column: 6, scope: !5422, inlinedAt: !5426)
!5557 = !DILocation(line: 368, column: 26, scope: !5554, inlinedAt: !5426)
!5558 = !DILocation(line: 369, column: 6, scope: !5559, inlinedAt: !5426)
!5559 = distinct !DILexicalBlock(scope: !5422, file: !186, line: 369, column: 6)
!5560 = !DILocation(line: 369, column: 11, scope: !5559, inlinedAt: !5426)
!5561 = !DILocation(line: 369, column: 6, scope: !5422, inlinedAt: !5426)
!5562 = !DILocation(line: 369, column: 26, scope: !5559, inlinedAt: !5426)
!5563 = !DILocation(line: 370, column: 6, scope: !5564, inlinedAt: !5426)
!5564 = distinct !DILexicalBlock(scope: !5422, file: !186, line: 370, column: 6)
!5565 = !DILocation(line: 370, column: 11, scope: !5564, inlinedAt: !5426)
!5566 = !DILocation(line: 370, column: 6, scope: !5422, inlinedAt: !5426)
!5567 = !DILocation(line: 370, column: 26, scope: !5564, inlinedAt: !5426)
!5568 = !DILocation(line: 371, column: 6, scope: !5569, inlinedAt: !5426)
!5569 = distinct !DILexicalBlock(scope: !5422, file: !186, line: 371, column: 6)
!5570 = !DILocation(line: 371, column: 11, scope: !5569, inlinedAt: !5426)
!5571 = !DILocation(line: 371, column: 6, scope: !5422, inlinedAt: !5426)
!5572 = !DILocation(line: 371, column: 26, scope: !5569, inlinedAt: !5426)
!5573 = !DILocation(line: 372, column: 6, scope: !5574, inlinedAt: !5426)
!5574 = distinct !DILexicalBlock(scope: !5422, file: !186, line: 372, column: 6)
!5575 = !DILocation(line: 372, column: 11, scope: !5574, inlinedAt: !5426)
!5576 = !DILocation(line: 372, column: 6, scope: !5422, inlinedAt: !5426)
!5577 = !DILocation(line: 372, column: 26, scope: !5574, inlinedAt: !5426)
!5578 = !DILocation(line: 373, column: 6, scope: !5579, inlinedAt: !5426)
!5579 = distinct !DILexicalBlock(scope: !5422, file: !186, line: 373, column: 6)
!5580 = !DILocation(line: 373, column: 11, scope: !5579, inlinedAt: !5426)
!5581 = !DILocation(line: 373, column: 6, scope: !5422, inlinedAt: !5426)
!5582 = !DILocation(line: 373, column: 26, scope: !5579, inlinedAt: !5426)
!5583 = !DILocation(line: 374, column: 6, scope: !5584, inlinedAt: !5426)
!5584 = distinct !DILexicalBlock(scope: !5422, file: !186, line: 374, column: 6)
!5585 = !DILocation(line: 374, column: 11, scope: !5584, inlinedAt: !5426)
!5586 = !DILocation(line: 374, column: 6, scope: !5422, inlinedAt: !5426)
!5587 = !DILocation(line: 374, column: 26, scope: !5584, inlinedAt: !5426)
!5588 = !DILocation(line: 375, column: 6, scope: !5589, inlinedAt: !5426)
!5589 = distinct !DILexicalBlock(scope: !5422, file: !186, line: 375, column: 6)
!5590 = !DILocation(line: 375, column: 11, scope: !5589, inlinedAt: !5426)
!5591 = !DILocation(line: 375, column: 6, scope: !5422, inlinedAt: !5426)
!5592 = !DILocation(line: 375, column: 27, scope: !5589, inlinedAt: !5426)
!5593 = !DILocation(line: 376, column: 6, scope: !5594, inlinedAt: !5426)
!5594 = distinct !DILexicalBlock(scope: !5422, file: !186, line: 376, column: 6)
!5595 = !DILocation(line: 376, column: 11, scope: !5594, inlinedAt: !5426)
!5596 = !DILocation(line: 376, column: 6, scope: !5422, inlinedAt: !5426)
!5597 = !DILocation(line: 376, column: 32, scope: !5594, inlinedAt: !5426)
!5598 = !DILocation(line: 377, column: 6, scope: !5599, inlinedAt: !5426)
!5599 = distinct !DILexicalBlock(scope: !5422, file: !186, line: 377, column: 6)
!5600 = !DILocation(line: 377, column: 11, scope: !5599, inlinedAt: !5426)
!5601 = !DILocation(line: 377, column: 6, scope: !5422, inlinedAt: !5426)
!5602 = !DILocation(line: 377, column: 32, scope: !5599, inlinedAt: !5426)
!5603 = !DILocation(line: 378, column: 6, scope: !5604, inlinedAt: !5426)
!5604 = distinct !DILexicalBlock(scope: !5422, file: !186, line: 378, column: 6)
!5605 = !DILocation(line: 378, column: 11, scope: !5604, inlinedAt: !5426)
!5606 = !DILocation(line: 378, column: 6, scope: !5422, inlinedAt: !5426)
!5607 = !DILocation(line: 378, column: 32, scope: !5604, inlinedAt: !5426)
!5608 = !DILocation(line: 379, column: 6, scope: !5609, inlinedAt: !5426)
!5609 = distinct !DILexicalBlock(scope: !5422, file: !186, line: 379, column: 6)
!5610 = !DILocation(line: 379, column: 11, scope: !5609, inlinedAt: !5426)
!5611 = !DILocation(line: 379, column: 6, scope: !5422, inlinedAt: !5426)
!5612 = !DILocation(line: 379, column: 33, scope: !5609, inlinedAt: !5426)
!5613 = !DILocation(line: 380, column: 6, scope: !5614, inlinedAt: !5426)
!5614 = distinct !DILexicalBlock(scope: !5422, file: !186, line: 380, column: 6)
!5615 = !DILocation(line: 380, column: 11, scope: !5614, inlinedAt: !5426)
!5616 = !DILocation(line: 380, column: 6, scope: !5422, inlinedAt: !5426)
!5617 = !DILocation(line: 380, column: 33, scope: !5614, inlinedAt: !5426)
!5618 = !DILocation(line: 381, column: 6, scope: !5619, inlinedAt: !5426)
!5619 = distinct !DILexicalBlock(scope: !5422, file: !186, line: 381, column: 6)
!5620 = !DILocation(line: 381, column: 11, scope: !5619, inlinedAt: !5426)
!5621 = !DILocation(line: 381, column: 6, scope: !5422, inlinedAt: !5426)
!5622 = !DILocation(line: 381, column: 33, scope: !5619, inlinedAt: !5426)
!5623 = !DILocation(line: 382, column: 2, scope: !5624, inlinedAt: !5426)
!5624 = distinct !DILexicalBlock(scope: !5625, file: !186, line: 382, column: 2)
!5625 = distinct !DILexicalBlock(scope: !5422, file: !186, line: 382, column: 2)
!5626 = !{i32 -2141620209, i32 -2141620180, i32 -2141620134, i32 -2141620076, i32 -2141620022, i32 -2141619968, i32 -2141619913, i32 -2141619882}
!5627 = !DILocation(line: 382, column: 2, scope: !5628, inlinedAt: !5426)
!5628 = distinct !DILexicalBlock(scope: !5629, file: !186, line: 382, column: 2)
!5629 = distinct !DILexicalBlock(scope: !5625, file: !186, line: 382, column: 2)
!5630 = !{i32 -2141619439, i32 -2141619432, i32 -2141619378, i32 -2141619347, i32 -2141619317}
!5631 = !DILocation(line: 382, column: 2, scope: !5629, inlinedAt: !5426)
!5632 = !DILocation(line: 386, column: 1, scope: !5422, inlinedAt: !5426)
!5633 = !DILocation(line: 547, column: 9, scope: !5405, inlinedAt: !5408)
!5634 = !DILocation(line: 549, column: 8, scope: !5635, inlinedAt: !5408)
!5635 = distinct !DILexicalBlock(scope: !5405, file: !186, line: 549, column: 7)
!5636 = !DILocation(line: 549, column: 7, scope: !5405, inlinedAt: !5408)
!5637 = !DILocation(line: 550, column: 4, scope: !5635, inlinedAt: !5408)
!5638 = !DILocation(line: 553, column: 33, scope: !5405, inlinedAt: !5408)
!5639 = !DILocation(line: 325, column: 6, scope: !5640, inlinedAt: !5420)
!5640 = distinct !DILexicalBlock(scope: !5416, file: !186, line: 325, column: 6)
!5641 = !DILocation(line: 325, column: 6, scope: !5416, inlinedAt: !5420)
!5642 = !DILocation(line: 326, column: 3, scope: !5640, inlinedAt: !5420)
!5643 = !DILocation(line: 332, column: 9, scope: !5416, inlinedAt: !5420)
!5644 = !DILocation(line: 332, column: 15, scope: !5416, inlinedAt: !5420)
!5645 = !DILocation(line: 332, column: 2, scope: !5416, inlinedAt: !5420)
!5646 = !DILocation(line: 336, column: 1, scope: !5416, inlinedAt: !5420)
!5647 = !DILocation(line: 553, column: 5, scope: !5405, inlinedAt: !5408)
!5648 = !DILocation(line: 553, column: 41, scope: !5405, inlinedAt: !5408)
!5649 = !DILocation(line: 554, column: 5, scope: !5405, inlinedAt: !5408)
!5650 = !DILocation(line: 554, column: 12, scope: !5405, inlinedAt: !5408)
!5651 = !DILocation(line: 448, column: 31, scope: !5400, inlinedAt: !5404)
!5652 = !DILocation(line: 448, column: 34, scope: !5400, inlinedAt: !5404)
!5653 = !DILocation(line: 448, column: 14, scope: !5400, inlinedAt: !5404)
!5654 = !DILocation(line: 450, column: 22, scope: !5400, inlinedAt: !5404)
!5655 = !DILocation(line: 450, column: 25, scope: !5400, inlinedAt: !5404)
!5656 = !DILocation(line: 450, column: 30, scope: !5400, inlinedAt: !5404)
!5657 = !DILocation(line: 450, column: 36, scope: !5400, inlinedAt: !5404)
!5658 = !DILocation(line: 450, column: 8, scope: !5400, inlinedAt: !5404)
!5659 = !DILocation(line: 450, column: 6, scope: !5400, inlinedAt: !5404)
!5660 = !DILocation(line: 451, column: 9, scope: !5400, inlinedAt: !5404)
!5661 = !DILocation(line: 552, column: 3, scope: !5405, inlinedAt: !5408)
!5662 = !DILocation(line: 557, column: 19, scope: !5407, inlinedAt: !5408)
!5663 = !DILocation(line: 557, column: 25, scope: !5407, inlinedAt: !5408)
!5664 = !DILocation(line: 557, column: 9, scope: !5407, inlinedAt: !5408)
!5665 = !DILocation(line: 557, column: 2, scope: !5407, inlinedAt: !5408)
!5666 = !DILocation(line: 558, column: 1, scope: !5407, inlinedAt: !5408)
!5667 = !DILocation(line: 664, column: 2, scope: !5396)
!5668 = distinct !DISubprogram(name: "kref_init", scope: !1530, file: !1530, line: 29, type: !5669, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !284)
!5669 = !DISubroutineType(types: !5670)
!5670 = !{null, !5671}
!5671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1529, size: 64)
!5672 = !DILocalVariable(name: "kref", arg: 1, scope: !5668, file: !1530, line: 29, type: !5671)
!5673 = !DILocation(line: 29, column: 43, scope: !5668)
!5674 = !DILocation(line: 31, column: 16, scope: !5668)
!5675 = !DILocation(line: 31, column: 22, scope: !5668)
!5676 = !DILocation(line: 31, column: 2, scope: !5668)
!5677 = !DILocation(line: 32, column: 1, scope: !5668)
!5678 = distinct !DISubprogram(name: "kref_get", scope: !1530, file: !1530, line: 43, type: !5669, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !284)
!5679 = !DILocalVariable(name: "kref", arg: 1, scope: !5678, file: !1530, line: 43, type: !5671)
!5680 = !DILocation(line: 43, column: 42, scope: !5678)
!5681 = !DILocation(line: 45, column: 16, scope: !5678)
!5682 = !DILocation(line: 45, column: 22, scope: !5678)
!5683 = !DILocation(line: 45, column: 2, scope: !5678)
!5684 = !DILocation(line: 46, column: 1, scope: !5678)
!5685 = distinct !DISubprogram(name: "usb_set_intfdata", scope: !6, file: !6, line: 268, type: !5686, scopeLine: 269, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !284)
!5686 = !DISubroutineType(types: !5687)
!5687 = !{null, !4165, !211}
!5688 = !DILocalVariable(name: "intf", arg: 1, scope: !5685, file: !6, line: 268, type: !4165)
!5689 = !DILocation(line: 268, column: 59, scope: !5685)
!5690 = !DILocalVariable(name: "data", arg: 2, scope: !5685, file: !6, line: 268, type: !211)
!5691 = !DILocation(line: 268, column: 71, scope: !5685)
!5692 = !DILocation(line: 270, column: 19, scope: !5685)
!5693 = !DILocation(line: 270, column: 25, scope: !5685)
!5694 = !DILocation(line: 270, column: 30, scope: !5685)
!5695 = !DILocation(line: 270, column: 2, scope: !5685)
!5696 = !DILocation(line: 271, column: 1, scope: !5685)
!5697 = distinct !DISubprogram(name: "ufx_alloc_urb_list", scope: !3, file: !3, line: 1843, type: !5698, scopeLine: 1844, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !284)
!5698 = !DISubroutineType(types: !5699)
!5699 = !{!217, !4278, !217, !357}
!5700 = !DILocalVariable(name: "lock", arg: 1, scope: !5701, file: !5702, line: 327, type: !1095)
!5701 = distinct !DISubprogram(name: "spinlock_check", scope: !5702, file: !5702, line: 327, type: !5703, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !284)
!5702 = !DIFile(filename: "./include/linux/spinlock.h", directory: "/home/lizy2001/genbc/linux")
!5703 = !DISubroutineType(types: !5704)
!5704 = !{!5705, !1095}
!5705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !811, size: 64)
!5706 = !DILocation(line: 327, column: 67, scope: !5701, inlinedAt: !5707)
!5707 = distinct !DILocation(line: 1850, column: 2, scope: !5708)
!5708 = distinct !DILexicalBlock(scope: !5697, file: !3, line: 1850, column: 2)
!5709 = !DILocalVariable(name: "dev", arg: 1, scope: !5697, file: !3, line: 1843, type: !4278)
!5710 = !DILocation(line: 1843, column: 48, scope: !5697)
!5711 = !DILocalVariable(name: "count", arg: 2, scope: !5697, file: !3, line: 1843, type: !217)
!5712 = !DILocation(line: 1843, column: 57, scope: !5697)
!5713 = !DILocalVariable(name: "size", arg: 3, scope: !5697, file: !3, line: 1843, type: !357)
!5714 = !DILocation(line: 1843, column: 71, scope: !5697)
!5715 = !DILocalVariable(name: "i", scope: !5697, file: !3, line: 1845, type: !217)
!5716 = !DILocation(line: 1845, column: 6, scope: !5697)
!5717 = !DILocalVariable(name: "urb", scope: !5697, file: !3, line: 1846, type: !4777)
!5718 = !DILocation(line: 1846, column: 14, scope: !5697)
!5719 = !DILocalVariable(name: "unode", scope: !5697, file: !3, line: 1847, type: !4273)
!5720 = !DILocation(line: 1847, column: 19, scope: !5697)
!5721 = !DILocalVariable(name: "buf", scope: !5697, file: !3, line: 1848, type: !311)
!5722 = !DILocation(line: 1848, column: 8, scope: !5697)
!5723 = !DILocation(line: 1850, column: 2, scope: !5697)
!5724 = !DILocation(line: 1850, column: 2, scope: !5708)
!5725 = !DILocation(line: 329, column: 10, scope: !5701, inlinedAt: !5707)
!5726 = !DILocation(line: 329, column: 16, scope: !5701, inlinedAt: !5707)
!5727 = !DILocation(line: 1852, column: 19, scope: !5697)
!5728 = !DILocation(line: 1852, column: 2, scope: !5697)
!5729 = !DILocation(line: 1852, column: 7, scope: !5697)
!5730 = !DILocation(line: 1852, column: 12, scope: !5697)
!5731 = !DILocation(line: 1852, column: 17, scope: !5697)
!5732 = !DILocation(line: 1853, column: 18, scope: !5697)
!5733 = !DILocation(line: 1853, column: 23, scope: !5697)
!5734 = !DILocation(line: 1853, column: 28, scope: !5697)
!5735 = !DILocation(line: 1853, column: 2, scope: !5697)
!5736 = !DILocation(line: 1855, column: 2, scope: !5697)
!5737 = !DILocation(line: 1855, column: 9, scope: !5697)
!5738 = !DILocation(line: 1855, column: 13, scope: !5697)
!5739 = !DILocation(line: 1855, column: 11, scope: !5697)
!5740 = !DILocation(line: 1856, column: 11, scope: !5741)
!5741 = distinct !DILexicalBlock(scope: !5697, file: !3, line: 1855, column: 20)
!5742 = !DILocation(line: 1856, column: 9, scope: !5741)
!5743 = !DILocation(line: 1857, column: 8, scope: !5744)
!5744 = distinct !DILexicalBlock(scope: !5741, file: !3, line: 1857, column: 7)
!5745 = !DILocation(line: 1857, column: 7, scope: !5741)
!5746 = !DILocation(line: 1858, column: 4, scope: !5744)
!5747 = !DILocation(line: 1859, column: 16, scope: !5741)
!5748 = !DILocation(line: 1859, column: 3, scope: !5741)
!5749 = !DILocation(line: 1859, column: 10, scope: !5741)
!5750 = !DILocation(line: 1859, column: 14, scope: !5741)
!5751 = !DILocation(line: 1861, column: 3, scope: !5741)
!5752 = !DILocation(line: 1861, column: 3, scope: !5753)
!5753 = distinct !DILexicalBlock(scope: !5741, file: !3, line: 1861, column: 3)
!5754 = !DILocation(line: 1861, column: 3, scope: !5755)
!5755 = distinct !DILexicalBlock(scope: !5753, file: !3, line: 1861, column: 3)
!5756 = !DILocation(line: 1864, column: 9, scope: !5741)
!5757 = !DILocation(line: 1864, column: 7, scope: !5741)
!5758 = !DILocation(line: 1865, column: 8, scope: !5759)
!5759 = distinct !DILexicalBlock(scope: !5741, file: !3, line: 1865, column: 7)
!5760 = !DILocation(line: 1865, column: 7, scope: !5741)
!5761 = !DILocation(line: 1866, column: 10, scope: !5762)
!5762 = distinct !DILexicalBlock(scope: !5759, file: !3, line: 1865, column: 13)
!5763 = !DILocation(line: 1866, column: 4, scope: !5762)
!5764 = !DILocation(line: 1867, column: 4, scope: !5762)
!5765 = !DILocation(line: 1869, column: 16, scope: !5741)
!5766 = !DILocation(line: 1869, column: 3, scope: !5741)
!5767 = !DILocation(line: 1869, column: 10, scope: !5741)
!5768 = !DILocation(line: 1869, column: 14, scope: !5741)
!5769 = !DILocation(line: 1871, column: 28, scope: !5741)
!5770 = !DILocation(line: 1871, column: 33, scope: !5741)
!5771 = !DILocation(line: 1871, column: 39, scope: !5741)
!5772 = !DILocation(line: 1872, column: 8, scope: !5741)
!5773 = !DILocation(line: 1872, column: 13, scope: !5741)
!5774 = !DILocation(line: 1871, column: 9, scope: !5741)
!5775 = !DILocation(line: 1871, column: 7, scope: !5741)
!5776 = !DILocation(line: 1873, column: 8, scope: !5777)
!5777 = distinct !DILexicalBlock(scope: !5741, file: !3, line: 1873, column: 7)
!5778 = !DILocation(line: 1873, column: 7, scope: !5741)
!5779 = !DILocation(line: 1874, column: 10, scope: !5780)
!5780 = distinct !DILexicalBlock(scope: !5777, file: !3, line: 1873, column: 13)
!5781 = !DILocation(line: 1874, column: 4, scope: !5780)
!5782 = !DILocation(line: 1875, column: 17, scope: !5780)
!5783 = !DILocation(line: 1875, column: 4, scope: !5780)
!5784 = !DILocation(line: 1876, column: 4, scope: !5780)
!5785 = !DILocation(line: 1880, column: 21, scope: !5741)
!5786 = !DILocation(line: 1880, column: 26, scope: !5741)
!5787 = !DILocation(line: 1880, column: 31, scope: !5741)
!5788 = !DILocation(line: 1880, column: 37, scope: !5741)
!5789 = !DILocation(line: 1881, column: 4, scope: !5741)
!5790 = !DILocation(line: 1881, column: 9, scope: !5741)
!5791 = !DILocation(line: 1881, column: 35, scope: !5741)
!5792 = !DILocation(line: 1880, column: 3, scope: !5741)
!5793 = !DILocation(line: 1882, column: 3, scope: !5741)
!5794 = !DILocation(line: 1882, column: 8, scope: !5741)
!5795 = !DILocation(line: 1882, column: 23, scope: !5741)
!5796 = !DILocation(line: 1884, column: 18, scope: !5741)
!5797 = !DILocation(line: 1884, column: 25, scope: !5741)
!5798 = !DILocation(line: 1884, column: 33, scope: !5741)
!5799 = !DILocation(line: 1884, column: 38, scope: !5741)
!5800 = !DILocation(line: 1884, column: 43, scope: !5741)
!5801 = !DILocation(line: 1884, column: 3, scope: !5741)
!5802 = !DILocation(line: 1886, column: 4, scope: !5741)
!5803 = distinct !{!5803, !5736, !5804}
!5804 = !DILocation(line: 1887, column: 2, scope: !5697)
!5805 = !DILocation(line: 1889, column: 13, scope: !5697)
!5806 = !DILocation(line: 1889, column: 18, scope: !5697)
!5807 = !DILocation(line: 1889, column: 23, scope: !5697)
!5808 = !DILocation(line: 1889, column: 34, scope: !5697)
!5809 = !DILocation(line: 1889, column: 2, scope: !5697)
!5810 = !DILocation(line: 1890, column: 20, scope: !5697)
!5811 = !DILocation(line: 1890, column: 2, scope: !5697)
!5812 = !DILocation(line: 1890, column: 7, scope: !5697)
!5813 = !DILocation(line: 1890, column: 12, scope: !5697)
!5814 = !DILocation(line: 1890, column: 18, scope: !5697)
!5815 = !DILocation(line: 1891, column: 24, scope: !5697)
!5816 = !DILocation(line: 1891, column: 2, scope: !5697)
!5817 = !DILocation(line: 1891, column: 7, scope: !5697)
!5818 = !DILocation(line: 1891, column: 12, scope: !5697)
!5819 = !DILocation(line: 1891, column: 22, scope: !5697)
!5820 = !DILocation(line: 1893, column: 2, scope: !5821)
!5821 = distinct !DILexicalBlock(scope: !5822, file: !3, line: 1893, column: 2)
!5822 = distinct !DILexicalBlock(scope: !5697, file: !3, line: 1893, column: 2)
!5823 = !DILocation(line: 1893, column: 2, scope: !5822)
!5824 = !DILocation(line: 1895, column: 9, scope: !5697)
!5825 = !DILocation(line: 1895, column: 2, scope: !5697)
!5826 = distinct !DISubprogram(name: "__init_work", scope: !153, file: !153, line: 215, type: !5827, scopeLine: 215, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !284)
!5827 = !DISubroutineType(types: !5828)
!5828 = !{null, !2050, !217}
!5829 = !DILocalVariable(name: "work", arg: 1, scope: !5826, file: !153, line: 215, type: !2050)
!5830 = !DILocation(line: 215, column: 52, scope: !5826)
!5831 = !DILocalVariable(name: "onstack", arg: 2, scope: !5826, file: !153, line: 215, type: !217)
!5832 = !DILocation(line: 215, column: 62, scope: !5826)
!5833 = !DILocation(line: 215, column: 73, scope: !5826)
!5834 = distinct !DISubprogram(name: "INIT_LIST_HEAD", scope: !5835, file: !5835, line: 33, type: !5836, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !284)
!5835 = !DIFile(filename: "./include/linux/list.h", directory: "/home/lizy2001/genbc/linux")
!5836 = !DISubroutineType(types: !5837)
!5837 = !{null, !260}
!5838 = !DILocalVariable(name: "list", arg: 1, scope: !5834, file: !5835, line: 33, type: !260)
!5839 = !DILocation(line: 33, column: 53, scope: !5834)
!5840 = !DILocation(line: 35, column: 2, scope: !5834)
!5841 = !DILocation(line: 35, column: 2, scope: !5842)
!5842 = distinct !DILexicalBlock(scope: !5834, file: !5835, line: 35, column: 2)
!5843 = !DILocation(line: 35, column: 2, scope: !5844)
!5844 = distinct !DILexicalBlock(scope: !5842, file: !5835, line: 35, column: 2)
!5845 = !DILocation(line: 35, column: 2, scope: !5846)
!5846 = distinct !DILexicalBlock(scope: !5842, file: !5835, line: 35, column: 2)
!5847 = !DILocation(line: 36, column: 15, scope: !5834)
!5848 = !DILocation(line: 36, column: 2, scope: !5834)
!5849 = !DILocation(line: 36, column: 8, scope: !5834)
!5850 = !DILocation(line: 36, column: 13, scope: !5834)
!5851 = !DILocation(line: 37, column: 1, scope: !5834)
!5852 = distinct !DISubprogram(name: "ufx_free_framebuffer_work", scope: !3, file: !3, line: 1128, type: !2048, scopeLine: 1129, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !284)
!5853 = !DILocalVariable(name: "work", arg: 1, scope: !5852, file: !3, line: 1128, type: !2050)
!5854 = !DILocation(line: 1128, column: 59, scope: !5852)
!5855 = !DILocalVariable(name: "dev", scope: !5852, file: !3, line: 1130, type: !4278)
!5856 = !DILocation(line: 1130, column: 19, scope: !5852)
!5857 = !DILocalVariable(name: "__mptr", scope: !5858, file: !3, line: 1130, type: !211)
!5858 = distinct !DILexicalBlock(scope: !5852, file: !3, line: 1130, column: 25)
!5859 = !DILocation(line: 1130, column: 25, scope: !5858)
!5860 = !DILocation(line: 1130, column: 25, scope: !5861)
!5861 = distinct !DILexicalBlock(scope: !5858, file: !3, line: 1130, column: 25)
!5862 = !DILocalVariable(name: "info", scope: !5852, file: !3, line: 1132, type: !4284)
!5863 = !DILocation(line: 1132, column: 18, scope: !5852)
!5864 = !DILocation(line: 1132, column: 25, scope: !5852)
!5865 = !DILocation(line: 1132, column: 30, scope: !5852)
!5866 = !DILocalVariable(name: "node", scope: !5852, file: !3, line: 1133, type: !217)
!5867 = !DILocation(line: 1133, column: 6, scope: !5852)
!5868 = !DILocation(line: 1133, column: 13, scope: !5852)
!5869 = !DILocation(line: 1133, column: 19, scope: !5852)
!5870 = !DILocation(line: 1135, column: 25, scope: !5852)
!5871 = !DILocation(line: 1135, column: 2, scope: !5852)
!5872 = !DILocation(line: 1137, column: 6, scope: !5873)
!5873 = distinct !DILexicalBlock(scope: !5852, file: !3, line: 1137, column: 6)
!5874 = !DILocation(line: 1137, column: 12, scope: !5873)
!5875 = !DILocation(line: 1137, column: 17, scope: !5873)
!5876 = !DILocation(line: 1137, column: 21, scope: !5873)
!5877 = !DILocation(line: 1137, column: 6, scope: !5852)
!5878 = !DILocation(line: 1138, column: 20, scope: !5873)
!5879 = !DILocation(line: 1138, column: 26, scope: !5873)
!5880 = !DILocation(line: 1138, column: 3, scope: !5873)
!5881 = !DILocation(line: 1139, column: 6, scope: !5882)
!5882 = distinct !DILexicalBlock(scope: !5852, file: !3, line: 1139, column: 6)
!5883 = !DILocation(line: 1139, column: 12, scope: !5882)
!5884 = !DILocation(line: 1139, column: 21, scope: !5882)
!5885 = !DILocation(line: 1139, column: 6, scope: !5852)
!5886 = !DILocation(line: 1140, column: 21, scope: !5882)
!5887 = !DILocation(line: 1140, column: 27, scope: !5882)
!5888 = !DILocation(line: 1140, column: 36, scope: !5882)
!5889 = !DILocation(line: 1140, column: 3, scope: !5882)
!5890 = !DILocation(line: 1141, column: 8, scope: !5852)
!5891 = !DILocation(line: 1141, column: 14, scope: !5852)
!5892 = !DILocation(line: 1141, column: 2, scope: !5852)
!5893 = !DILocation(line: 1143, column: 23, scope: !5852)
!5894 = !DILocation(line: 1143, column: 29, scope: !5852)
!5895 = !DILocation(line: 1143, column: 2, scope: !5852)
!5896 = !DILocation(line: 1145, column: 2, scope: !5852)
!5897 = !DILocation(line: 1145, column: 7, scope: !5852)
!5898 = !DILocation(line: 1145, column: 12, scope: !5852)
!5899 = !DILocation(line: 1148, column: 22, scope: !5852)
!5900 = !DILocation(line: 1148, column: 2, scope: !5852)
!5901 = !DILocation(line: 1150, column: 2, scope: !5902)
!5902 = distinct !DILexicalBlock(scope: !5903, file: !3, line: 1150, column: 2)
!5903 = distinct !DILexicalBlock(scope: !5852, file: !3, line: 1150, column: 2)
!5904 = !DILocation(line: 1150, column: 2, scope: !5903)
!5905 = !DILocation(line: 1153, column: 12, scope: !5852)
!5906 = !DILocation(line: 1153, column: 17, scope: !5852)
!5907 = !DILocation(line: 1153, column: 2, scope: !5852)
!5908 = !DILocation(line: 1154, column: 1, scope: !5852)
!5909 = distinct !DISubprogram(name: "ufx_reg_read", scope: !3, file: !3, line: 141, type: !5910, scopeLine: 142, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !284)
!5910 = !DISubroutineType(types: !5911)
!5911 = !{!217, !4278, !224, !1445}
!5912 = !DILocation(line: 445, column: 72, scope: !5400, inlinedAt: !5913)
!5913 = distinct !DILocation(line: 552, column: 10, scope: !5405, inlinedAt: !5914)
!5914 = distinct !DILocation(line: 143, column: 13, scope: !5909)
!5915 = !DILocation(line: 446, column: 9, scope: !5400, inlinedAt: !5913)
!5916 = !DILocation(line: 446, column: 23, scope: !5400, inlinedAt: !5913)
!5917 = !DILocation(line: 448, column: 8, scope: !5400, inlinedAt: !5913)
!5918 = !DILocation(line: 318, column: 67, scope: !5416, inlinedAt: !5919)
!5919 = distinct !DILocation(line: 553, column: 20, scope: !5405, inlinedAt: !5914)
!5920 = !DILocation(line: 346, column: 58, scope: !5422, inlinedAt: !5921)
!5921 = distinct !DILocation(line: 547, column: 11, scope: !5405, inlinedAt: !5914)
!5922 = !DILocation(line: 472, column: 28, scope: !5428, inlinedAt: !5923)
!5923 = distinct !DILocation(line: 481, column: 9, scope: !5433, inlinedAt: !5924)
!5924 = distinct !DILocation(line: 545, column: 11, scope: !5435, inlinedAt: !5914)
!5925 = !DILocation(line: 472, column: 40, scope: !5428, inlinedAt: !5923)
!5926 = !DILocation(line: 472, column: 60, scope: !5428, inlinedAt: !5923)
!5927 = !DILocation(line: 478, column: 51, scope: !5433, inlinedAt: !5924)
!5928 = !DILocation(line: 478, column: 63, scope: !5433, inlinedAt: !5924)
!5929 = !DILocation(line: 480, column: 15, scope: !5433, inlinedAt: !5924)
!5930 = !DILocation(line: 538, column: 45, scope: !5407, inlinedAt: !5914)
!5931 = !DILocation(line: 538, column: 57, scope: !5407, inlinedAt: !5914)
!5932 = !DILocation(line: 542, column: 16, scope: !5405, inlinedAt: !5914)
!5933 = !DILocalVariable(name: "dev", arg: 1, scope: !5909, file: !3, line: 141, type: !4278)
!5934 = !DILocation(line: 141, column: 42, scope: !5909)
!5935 = !DILocalVariable(name: "index", arg: 2, scope: !5909, file: !3, line: 141, type: !224)
!5936 = !DILocation(line: 141, column: 51, scope: !5909)
!5937 = !DILocalVariable(name: "data", arg: 3, scope: !5909, file: !3, line: 141, type: !1445)
!5938 = !DILocation(line: 141, column: 63, scope: !5909)
!5939 = !DILocalVariable(name: "buf", scope: !5909, file: !3, line: 143, type: !1445)
!5940 = !DILocation(line: 143, column: 7, scope: !5909)
!5941 = !DILocation(line: 540, column: 27, scope: !5406, inlinedAt: !5914)
!5942 = !DILocation(line: 540, column: 6, scope: !5406, inlinedAt: !5914)
!5943 = !DILocation(line: 540, column: 6, scope: !5407, inlinedAt: !5914)
!5944 = !DILocation(line: 544, column: 7, scope: !5435, inlinedAt: !5914)
!5945 = !DILocation(line: 544, column: 12, scope: !5435, inlinedAt: !5914)
!5946 = !DILocation(line: 544, column: 7, scope: !5405, inlinedAt: !5914)
!5947 = !DILocation(line: 545, column: 25, scope: !5435, inlinedAt: !5914)
!5948 = !DILocation(line: 545, column: 31, scope: !5435, inlinedAt: !5914)
!5949 = !DILocation(line: 480, column: 33, scope: !5433, inlinedAt: !5924)
!5950 = !DILocation(line: 480, column: 23, scope: !5433, inlinedAt: !5924)
!5951 = !DILocation(line: 481, column: 29, scope: !5433, inlinedAt: !5924)
!5952 = !DILocation(line: 481, column: 35, scope: !5433, inlinedAt: !5924)
!5953 = !DILocation(line: 481, column: 42, scope: !5433, inlinedAt: !5924)
!5954 = !DILocation(line: 474, column: 23, scope: !5428, inlinedAt: !5923)
!5955 = !DILocation(line: 474, column: 29, scope: !5428, inlinedAt: !5923)
!5956 = !DILocation(line: 474, column: 36, scope: !5428, inlinedAt: !5923)
!5957 = !DILocation(line: 474, column: 9, scope: !5428, inlinedAt: !5923)
!5958 = !DILocation(line: 545, column: 4, scope: !5435, inlinedAt: !5914)
!5959 = !DILocation(line: 547, column: 25, scope: !5405, inlinedAt: !5914)
!5960 = !DILocation(line: 348, column: 7, scope: !5479, inlinedAt: !5921)
!5961 = !DILocation(line: 348, column: 6, scope: !5422, inlinedAt: !5921)
!5962 = !DILocation(line: 349, column: 3, scope: !5479, inlinedAt: !5921)
!5963 = !DILocation(line: 351, column: 6, scope: !5483, inlinedAt: !5921)
!5964 = !DILocation(line: 351, column: 11, scope: !5483, inlinedAt: !5921)
!5965 = !DILocation(line: 351, column: 6, scope: !5422, inlinedAt: !5921)
!5966 = !DILocation(line: 352, column: 3, scope: !5483, inlinedAt: !5921)
!5967 = !DILocation(line: 354, column: 32, scope: !5488, inlinedAt: !5921)
!5968 = !DILocation(line: 354, column: 37, scope: !5488, inlinedAt: !5921)
!5969 = !DILocation(line: 354, column: 42, scope: !5488, inlinedAt: !5921)
!5970 = !DILocation(line: 354, column: 45, scope: !5488, inlinedAt: !5921)
!5971 = !DILocation(line: 354, column: 50, scope: !5488, inlinedAt: !5921)
!5972 = !DILocation(line: 354, column: 6, scope: !5422, inlinedAt: !5921)
!5973 = !DILocation(line: 355, column: 3, scope: !5488, inlinedAt: !5921)
!5974 = !DILocation(line: 356, column: 32, scope: !5496, inlinedAt: !5921)
!5975 = !DILocation(line: 356, column: 37, scope: !5496, inlinedAt: !5921)
!5976 = !DILocation(line: 356, column: 43, scope: !5496, inlinedAt: !5921)
!5977 = !DILocation(line: 356, column: 46, scope: !5496, inlinedAt: !5921)
!5978 = !DILocation(line: 356, column: 51, scope: !5496, inlinedAt: !5921)
!5979 = !DILocation(line: 356, column: 6, scope: !5422, inlinedAt: !5921)
!5980 = !DILocation(line: 357, column: 3, scope: !5496, inlinedAt: !5921)
!5981 = !DILocation(line: 358, column: 6, scope: !5504, inlinedAt: !5921)
!5982 = !DILocation(line: 358, column: 11, scope: !5504, inlinedAt: !5921)
!5983 = !DILocation(line: 358, column: 6, scope: !5422, inlinedAt: !5921)
!5984 = !DILocation(line: 358, column: 26, scope: !5504, inlinedAt: !5921)
!5985 = !DILocation(line: 359, column: 6, scope: !5509, inlinedAt: !5921)
!5986 = !DILocation(line: 359, column: 11, scope: !5509, inlinedAt: !5921)
!5987 = !DILocation(line: 359, column: 6, scope: !5422, inlinedAt: !5921)
!5988 = !DILocation(line: 359, column: 26, scope: !5509, inlinedAt: !5921)
!5989 = !DILocation(line: 360, column: 6, scope: !5514, inlinedAt: !5921)
!5990 = !DILocation(line: 360, column: 11, scope: !5514, inlinedAt: !5921)
!5991 = !DILocation(line: 360, column: 6, scope: !5422, inlinedAt: !5921)
!5992 = !DILocation(line: 360, column: 26, scope: !5514, inlinedAt: !5921)
!5993 = !DILocation(line: 361, column: 6, scope: !5519, inlinedAt: !5921)
!5994 = !DILocation(line: 361, column: 11, scope: !5519, inlinedAt: !5921)
!5995 = !DILocation(line: 361, column: 6, scope: !5422, inlinedAt: !5921)
!5996 = !DILocation(line: 361, column: 26, scope: !5519, inlinedAt: !5921)
!5997 = !DILocation(line: 362, column: 6, scope: !5524, inlinedAt: !5921)
!5998 = !DILocation(line: 362, column: 11, scope: !5524, inlinedAt: !5921)
!5999 = !DILocation(line: 362, column: 6, scope: !5422, inlinedAt: !5921)
!6000 = !DILocation(line: 362, column: 26, scope: !5524, inlinedAt: !5921)
!6001 = !DILocation(line: 363, column: 6, scope: !5529, inlinedAt: !5921)
!6002 = !DILocation(line: 363, column: 11, scope: !5529, inlinedAt: !5921)
!6003 = !DILocation(line: 363, column: 6, scope: !5422, inlinedAt: !5921)
!6004 = !DILocation(line: 363, column: 26, scope: !5529, inlinedAt: !5921)
!6005 = !DILocation(line: 364, column: 6, scope: !5534, inlinedAt: !5921)
!6006 = !DILocation(line: 364, column: 11, scope: !5534, inlinedAt: !5921)
!6007 = !DILocation(line: 364, column: 6, scope: !5422, inlinedAt: !5921)
!6008 = !DILocation(line: 364, column: 26, scope: !5534, inlinedAt: !5921)
!6009 = !DILocation(line: 365, column: 6, scope: !5539, inlinedAt: !5921)
!6010 = !DILocation(line: 365, column: 11, scope: !5539, inlinedAt: !5921)
!6011 = !DILocation(line: 365, column: 6, scope: !5422, inlinedAt: !5921)
!6012 = !DILocation(line: 365, column: 26, scope: !5539, inlinedAt: !5921)
!6013 = !DILocation(line: 366, column: 6, scope: !5544, inlinedAt: !5921)
!6014 = !DILocation(line: 366, column: 11, scope: !5544, inlinedAt: !5921)
!6015 = !DILocation(line: 366, column: 6, scope: !5422, inlinedAt: !5921)
!6016 = !DILocation(line: 366, column: 26, scope: !5544, inlinedAt: !5921)
!6017 = !DILocation(line: 367, column: 6, scope: !5549, inlinedAt: !5921)
!6018 = !DILocation(line: 367, column: 11, scope: !5549, inlinedAt: !5921)
!6019 = !DILocation(line: 367, column: 6, scope: !5422, inlinedAt: !5921)
!6020 = !DILocation(line: 367, column: 26, scope: !5549, inlinedAt: !5921)
!6021 = !DILocation(line: 368, column: 6, scope: !5554, inlinedAt: !5921)
!6022 = !DILocation(line: 368, column: 11, scope: !5554, inlinedAt: !5921)
!6023 = !DILocation(line: 368, column: 6, scope: !5422, inlinedAt: !5921)
!6024 = !DILocation(line: 368, column: 26, scope: !5554, inlinedAt: !5921)
!6025 = !DILocation(line: 369, column: 6, scope: !5559, inlinedAt: !5921)
!6026 = !DILocation(line: 369, column: 11, scope: !5559, inlinedAt: !5921)
!6027 = !DILocation(line: 369, column: 6, scope: !5422, inlinedAt: !5921)
!6028 = !DILocation(line: 369, column: 26, scope: !5559, inlinedAt: !5921)
!6029 = !DILocation(line: 370, column: 6, scope: !5564, inlinedAt: !5921)
!6030 = !DILocation(line: 370, column: 11, scope: !5564, inlinedAt: !5921)
!6031 = !DILocation(line: 370, column: 6, scope: !5422, inlinedAt: !5921)
!6032 = !DILocation(line: 370, column: 26, scope: !5564, inlinedAt: !5921)
!6033 = !DILocation(line: 371, column: 6, scope: !5569, inlinedAt: !5921)
!6034 = !DILocation(line: 371, column: 11, scope: !5569, inlinedAt: !5921)
!6035 = !DILocation(line: 371, column: 6, scope: !5422, inlinedAt: !5921)
!6036 = !DILocation(line: 371, column: 26, scope: !5569, inlinedAt: !5921)
!6037 = !DILocation(line: 372, column: 6, scope: !5574, inlinedAt: !5921)
!6038 = !DILocation(line: 372, column: 11, scope: !5574, inlinedAt: !5921)
!6039 = !DILocation(line: 372, column: 6, scope: !5422, inlinedAt: !5921)
!6040 = !DILocation(line: 372, column: 26, scope: !5574, inlinedAt: !5921)
!6041 = !DILocation(line: 373, column: 6, scope: !5579, inlinedAt: !5921)
!6042 = !DILocation(line: 373, column: 11, scope: !5579, inlinedAt: !5921)
!6043 = !DILocation(line: 373, column: 6, scope: !5422, inlinedAt: !5921)
!6044 = !DILocation(line: 373, column: 26, scope: !5579, inlinedAt: !5921)
!6045 = !DILocation(line: 374, column: 6, scope: !5584, inlinedAt: !5921)
!6046 = !DILocation(line: 374, column: 11, scope: !5584, inlinedAt: !5921)
!6047 = !DILocation(line: 374, column: 6, scope: !5422, inlinedAt: !5921)
!6048 = !DILocation(line: 374, column: 26, scope: !5584, inlinedAt: !5921)
!6049 = !DILocation(line: 375, column: 6, scope: !5589, inlinedAt: !5921)
!6050 = !DILocation(line: 375, column: 11, scope: !5589, inlinedAt: !5921)
!6051 = !DILocation(line: 375, column: 6, scope: !5422, inlinedAt: !5921)
!6052 = !DILocation(line: 375, column: 27, scope: !5589, inlinedAt: !5921)
!6053 = !DILocation(line: 376, column: 6, scope: !5594, inlinedAt: !5921)
!6054 = !DILocation(line: 376, column: 11, scope: !5594, inlinedAt: !5921)
!6055 = !DILocation(line: 376, column: 6, scope: !5422, inlinedAt: !5921)
!6056 = !DILocation(line: 376, column: 32, scope: !5594, inlinedAt: !5921)
!6057 = !DILocation(line: 377, column: 6, scope: !5599, inlinedAt: !5921)
!6058 = !DILocation(line: 377, column: 11, scope: !5599, inlinedAt: !5921)
!6059 = !DILocation(line: 377, column: 6, scope: !5422, inlinedAt: !5921)
!6060 = !DILocation(line: 377, column: 32, scope: !5599, inlinedAt: !5921)
!6061 = !DILocation(line: 378, column: 6, scope: !5604, inlinedAt: !5921)
!6062 = !DILocation(line: 378, column: 11, scope: !5604, inlinedAt: !5921)
!6063 = !DILocation(line: 378, column: 6, scope: !5422, inlinedAt: !5921)
!6064 = !DILocation(line: 378, column: 32, scope: !5604, inlinedAt: !5921)
!6065 = !DILocation(line: 379, column: 6, scope: !5609, inlinedAt: !5921)
!6066 = !DILocation(line: 379, column: 11, scope: !5609, inlinedAt: !5921)
!6067 = !DILocation(line: 379, column: 6, scope: !5422, inlinedAt: !5921)
!6068 = !DILocation(line: 379, column: 33, scope: !5609, inlinedAt: !5921)
!6069 = !DILocation(line: 380, column: 6, scope: !5614, inlinedAt: !5921)
!6070 = !DILocation(line: 380, column: 11, scope: !5614, inlinedAt: !5921)
!6071 = !DILocation(line: 380, column: 6, scope: !5422, inlinedAt: !5921)
!6072 = !DILocation(line: 380, column: 33, scope: !5614, inlinedAt: !5921)
!6073 = !DILocation(line: 381, column: 6, scope: !5619, inlinedAt: !5921)
!6074 = !DILocation(line: 381, column: 11, scope: !5619, inlinedAt: !5921)
!6075 = !DILocation(line: 381, column: 6, scope: !5422, inlinedAt: !5921)
!6076 = !DILocation(line: 381, column: 33, scope: !5619, inlinedAt: !5921)
!6077 = !DILocation(line: 382, column: 2, scope: !5624, inlinedAt: !5921)
!6078 = !DILocation(line: 382, column: 2, scope: !5628, inlinedAt: !5921)
!6079 = !DILocation(line: 382, column: 2, scope: !5629, inlinedAt: !5921)
!6080 = !DILocation(line: 386, column: 1, scope: !5422, inlinedAt: !5921)
!6081 = !DILocation(line: 547, column: 9, scope: !5405, inlinedAt: !5914)
!6082 = !DILocation(line: 549, column: 8, scope: !5635, inlinedAt: !5914)
!6083 = !DILocation(line: 549, column: 7, scope: !5405, inlinedAt: !5914)
!6084 = !DILocation(line: 550, column: 4, scope: !5635, inlinedAt: !5914)
!6085 = !DILocation(line: 553, column: 33, scope: !5405, inlinedAt: !5914)
!6086 = !DILocation(line: 325, column: 6, scope: !5640, inlinedAt: !5919)
!6087 = !DILocation(line: 325, column: 6, scope: !5416, inlinedAt: !5919)
!6088 = !DILocation(line: 326, column: 3, scope: !5640, inlinedAt: !5919)
!6089 = !DILocation(line: 332, column: 9, scope: !5416, inlinedAt: !5919)
!6090 = !DILocation(line: 332, column: 15, scope: !5416, inlinedAt: !5919)
!6091 = !DILocation(line: 332, column: 2, scope: !5416, inlinedAt: !5919)
!6092 = !DILocation(line: 336, column: 1, scope: !5416, inlinedAt: !5919)
!6093 = !DILocation(line: 553, column: 5, scope: !5405, inlinedAt: !5914)
!6094 = !DILocation(line: 553, column: 41, scope: !5405, inlinedAt: !5914)
!6095 = !DILocation(line: 554, column: 5, scope: !5405, inlinedAt: !5914)
!6096 = !DILocation(line: 554, column: 12, scope: !5405, inlinedAt: !5914)
!6097 = !DILocation(line: 448, column: 31, scope: !5400, inlinedAt: !5913)
!6098 = !DILocation(line: 448, column: 34, scope: !5400, inlinedAt: !5913)
!6099 = !DILocation(line: 448, column: 14, scope: !5400, inlinedAt: !5913)
!6100 = !DILocation(line: 450, column: 22, scope: !5400, inlinedAt: !5913)
!6101 = !DILocation(line: 450, column: 25, scope: !5400, inlinedAt: !5913)
!6102 = !DILocation(line: 450, column: 30, scope: !5400, inlinedAt: !5913)
!6103 = !DILocation(line: 450, column: 36, scope: !5400, inlinedAt: !5913)
!6104 = !DILocation(line: 450, column: 8, scope: !5400, inlinedAt: !5913)
!6105 = !DILocation(line: 450, column: 6, scope: !5400, inlinedAt: !5913)
!6106 = !DILocation(line: 451, column: 9, scope: !5400, inlinedAt: !5913)
!6107 = !DILocation(line: 552, column: 3, scope: !5405, inlinedAt: !5914)
!6108 = !DILocation(line: 557, column: 19, scope: !5407, inlinedAt: !5914)
!6109 = !DILocation(line: 557, column: 25, scope: !5407, inlinedAt: !5914)
!6110 = !DILocation(line: 557, column: 9, scope: !5407, inlinedAt: !5914)
!6111 = !DILocation(line: 557, column: 2, scope: !5407, inlinedAt: !5914)
!6112 = !DILocation(line: 558, column: 1, scope: !5407, inlinedAt: !5914)
!6113 = !DILocation(line: 143, column: 13, scope: !5909)
!6114 = !DILocalVariable(name: "ret", scope: !5909, file: !3, line: 144, type: !217)
!6115 = !DILocation(line: 144, column: 6, scope: !5909)
!6116 = !DILocation(line: 146, column: 2, scope: !5909)
!6117 = !DILocation(line: 146, column: 2, scope: !6118)
!6118 = distinct !DILexicalBlock(scope: !6119, file: !3, line: 146, column: 2)
!6119 = distinct !DILexicalBlock(scope: !5909, file: !3, line: 146, column: 2)
!6120 = !DILocation(line: 146, column: 2, scope: !6119)
!6121 = !DILocation(line: 146, column: 2, scope: !6122)
!6122 = distinct !DILexicalBlock(scope: !6118, file: !3, line: 146, column: 2)
!6123 = !DILocation(line: 146, column: 2, scope: !6124)
!6124 = distinct !DILexicalBlock(scope: !6122, file: !3, line: 146, column: 2)
!6125 = !DILocation(line: 146, column: 2, scope: !6126)
!6126 = distinct !DILexicalBlock(scope: !6122, file: !3, line: 146, column: 2)
!6127 = !{i32 -2141010674, i32 -2141010645, i32 -2141010599, i32 -2141010541, i32 -2141010487, i32 -2141010433, i32 -2141010378, i32 -2141010347}
!6128 = !DILocation(line: 146, column: 2, scope: !6129)
!6129 = distinct !DILexicalBlock(scope: !6130, file: !3, line: 146, column: 2)
!6130 = distinct !DILexicalBlock(scope: !6122, file: !3, line: 146, column: 2)
!6131 = !{i32 -2141009895, i32 -2141009888, i32 -2141009834, i32 -2141009803, i32 -2141009773}
!6132 = !DILocation(line: 146, column: 2, scope: !6130)
!6133 = !DILocation(line: 148, column: 7, scope: !6134)
!6134 = distinct !DILexicalBlock(scope: !5909, file: !3, line: 148, column: 6)
!6135 = !DILocation(line: 148, column: 6, scope: !5909)
!6136 = !DILocation(line: 149, column: 3, scope: !6134)
!6137 = !DILocation(line: 151, column: 24, scope: !5909)
!6138 = !DILocation(line: 151, column: 29, scope: !5909)
!6139 = !DILocation(line: 151, column: 35, scope: !5909)
!6140 = !DILocation(line: 154, column: 7, scope: !5909)
!6141 = !DILocation(line: 154, column: 14, scope: !5909)
!6142 = !DILocation(line: 151, column: 8, scope: !5909)
!6143 = !DILocation(line: 151, column: 6, scope: !5909)
!6144 = !DILocation(line: 156, column: 2, scope: !5909)
!6145 = !DILocation(line: 156, column: 2, scope: !6146)
!6146 = distinct !DILexicalBlock(scope: !5909, file: !3, line: 156, column: 2)
!6147 = !DILocation(line: 157, column: 11, scope: !5909)
!6148 = !DILocation(line: 157, column: 10, scope: !5909)
!6149 = !DILocation(line: 157, column: 3, scope: !5909)
!6150 = !DILocation(line: 157, column: 8, scope: !5909)
!6151 = !DILocation(line: 158, column: 8, scope: !5909)
!6152 = !DILocation(line: 158, column: 2, scope: !5909)
!6153 = !DILocation(line: 160, column: 6, scope: !6154)
!6154 = distinct !DILexicalBlock(scope: !5909, file: !3, line: 160, column: 6)
!6155 = !DILocation(line: 160, column: 6, scope: !5909)
!6156 = !DILocation(line: 161, column: 3, scope: !6154)
!6157 = !DILocation(line: 163, column: 9, scope: !5909)
!6158 = !DILocation(line: 163, column: 2, scope: !5909)
!6159 = !DILocation(line: 164, column: 1, scope: !5909)
!6160 = distinct !DISubprogram(name: "ufx_lite_reset", scope: !3, file: !3, line: 222, type: !6161, scopeLine: 223, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !284)
!6161 = !DISubroutineType(types: !6162)
!6162 = !{!217, !4278}
!6163 = !DILocalVariable(name: "dev", arg: 1, scope: !6160, file: !3, line: 222, type: !4278)
!6164 = !DILocation(line: 222, column: 44, scope: !6160)
!6165 = !DILocalVariable(name: "status", scope: !6160, file: !3, line: 224, type: !217)
!6166 = !DILocation(line: 224, column: 6, scope: !6160)
!6167 = !DILocalVariable(name: "value", scope: !6160, file: !3, line: 225, type: !224)
!6168 = !DILocation(line: 225, column: 6, scope: !6160)
!6169 = !DILocation(line: 227, column: 25, scope: !6160)
!6170 = !DILocation(line: 227, column: 11, scope: !6160)
!6171 = !DILocation(line: 227, column: 9, scope: !6160)
!6172 = !DILocation(line: 228, column: 2, scope: !6173)
!6173 = distinct !DILexicalBlock(scope: !6174, file: !3, line: 228, column: 2)
!6174 = distinct !DILexicalBlock(scope: !6160, file: !3, line: 228, column: 2)
!6175 = !DILocation(line: 228, column: 2, scope: !6174)
!6176 = !DILocation(line: 228, column: 2, scope: !6177)
!6177 = distinct !DILexicalBlock(scope: !6173, file: !3, line: 228, column: 2)
!6178 = !DILocation(line: 230, column: 24, scope: !6160)
!6179 = !DILocation(line: 230, column: 11, scope: !6160)
!6180 = !DILocation(line: 230, column: 9, scope: !6160)
!6181 = !DILocation(line: 231, column: 2, scope: !6182)
!6182 = distinct !DILexicalBlock(scope: !6183, file: !3, line: 231, column: 2)
!6183 = distinct !DILexicalBlock(scope: !6160, file: !3, line: 231, column: 2)
!6184 = !DILocation(line: 231, column: 2, scope: !6183)
!6185 = !DILocation(line: 231, column: 2, scope: !6186)
!6186 = distinct !DILexicalBlock(scope: !6182, file: !3, line: 231, column: 2)
!6187 = !DILocation(line: 233, column: 10, scope: !6160)
!6188 = !DILocation(line: 233, column: 16, scope: !6160)
!6189 = !DILocation(line: 233, column: 9, scope: !6160)
!6190 = !DILocation(line: 233, column: 2, scope: !6160)
!6191 = !DILocation(line: 234, column: 1, scope: !6160)
!6192 = distinct !DISubprogram(name: "ufx_config_sys_clk", scope: !3, file: !3, line: 384, type: !6161, scopeLine: 385, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !284)
!6193 = !DILocalVariable(name: "dev", arg: 1, scope: !6192, file: !3, line: 384, type: !4278)
!6194 = !DILocation(line: 384, column: 48, scope: !6192)
!6195 = !DILocalVariable(name: "status", scope: !6192, file: !3, line: 386, type: !217)
!6196 = !DILocation(line: 386, column: 6, scope: !6192)
!6197 = !DILocation(line: 386, column: 29, scope: !6192)
!6198 = !DILocation(line: 386, column: 15, scope: !6192)
!6199 = !DILocation(line: 387, column: 2, scope: !6200)
!6200 = distinct !DILexicalBlock(scope: !6201, file: !3, line: 387, column: 2)
!6201 = distinct !DILexicalBlock(scope: !6192, file: !3, line: 387, column: 2)
!6202 = !DILocation(line: 387, column: 2, scope: !6201)
!6203 = !DILocation(line: 387, column: 2, scope: !6204)
!6204 = distinct !DILexicalBlock(scope: !6200, file: !3, line: 387, column: 2)
!6205 = !DILocation(line: 389, column: 25, scope: !6192)
!6206 = !DILocation(line: 389, column: 11, scope: !6192)
!6207 = !DILocation(line: 389, column: 9, scope: !6192)
!6208 = !DILocation(line: 390, column: 2, scope: !6209)
!6209 = distinct !DILexicalBlock(scope: !6210, file: !3, line: 390, column: 2)
!6210 = distinct !DILexicalBlock(scope: !6192, file: !3, line: 390, column: 2)
!6211 = !DILocation(line: 390, column: 2, scope: !6210)
!6212 = !DILocation(line: 390, column: 2, scope: !6213)
!6213 = distinct !DILexicalBlock(scope: !6209, file: !3, line: 390, column: 2)
!6214 = !DILocation(line: 392, column: 25, scope: !6192)
!6215 = !DILocation(line: 392, column: 11, scope: !6192)
!6216 = !DILocation(line: 392, column: 9, scope: !6192)
!6217 = !DILocation(line: 393, column: 2, scope: !6218)
!6218 = distinct !DILexicalBlock(scope: !6219, file: !3, line: 393, column: 2)
!6219 = distinct !DILexicalBlock(scope: !6192, file: !3, line: 393, column: 2)
!6220 = !DILocation(line: 393, column: 2, scope: !6219)
!6221 = !DILocation(line: 393, column: 2, scope: !6222)
!6222 = distinct !DILexicalBlock(scope: !6218, file: !3, line: 393, column: 2)
!6223 = !DILocation(line: 395, column: 30, scope: !6192)
!6224 = !DILocation(line: 395, column: 11, scope: !6192)
!6225 = !DILocation(line: 395, column: 9, scope: !6192)
!6226 = !DILocation(line: 396, column: 2, scope: !6227)
!6227 = distinct !DILexicalBlock(scope: !6228, file: !3, line: 396, column: 2)
!6228 = distinct !DILexicalBlock(scope: !6192, file: !3, line: 396, column: 2)
!6229 = !DILocation(line: 396, column: 2, scope: !6228)
!6230 = !DILocation(line: 396, column: 2, scope: !6231)
!6231 = distinct !DILexicalBlock(scope: !6227, file: !3, line: 396, column: 2)
!6232 = !DILocation(line: 397, column: 2, scope: !6192)
!6233 = !DILocation(line: 399, column: 30, scope: !6192)
!6234 = !DILocation(line: 399, column: 11, scope: !6192)
!6235 = !DILocation(line: 399, column: 9, scope: !6192)
!6236 = !DILocation(line: 400, column: 2, scope: !6237)
!6237 = distinct !DILexicalBlock(scope: !6238, file: !3, line: 400, column: 2)
!6238 = distinct !DILexicalBlock(scope: !6192, file: !3, line: 400, column: 2)
!6239 = !DILocation(line: 400, column: 2, scope: !6238)
!6240 = !DILocation(line: 400, column: 2, scope: !6241)
!6241 = distinct !DILexicalBlock(scope: !6237, file: !3, line: 400, column: 2)
!6242 = !DILocation(line: 402, column: 2, scope: !6192)
!6243 = !DILocation(line: 403, column: 1, scope: !6192)
!6244 = distinct !DISubprogram(name: "ufx_config_ddr2", scope: !3, file: !3, line: 405, type: !6161, scopeLine: 406, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !284)
!6245 = !DILocalVariable(name: "dev", arg: 1, scope: !6244, file: !3, line: 405, type: !4278)
!6246 = !DILocation(line: 405, column: 45, scope: !6244)
!6247 = !DILocalVariable(name: "status", scope: !6244, file: !3, line: 407, type: !217)
!6248 = !DILocation(line: 407, column: 6, scope: !6244)
!6249 = !DILocalVariable(name: "i", scope: !6244, file: !3, line: 407, type: !217)
!6250 = !DILocation(line: 407, column: 14, scope: !6244)
!6251 = !DILocalVariable(name: "tmp", scope: !6244, file: !3, line: 408, type: !224)
!6252 = !DILocation(line: 408, column: 6, scope: !6244)
!6253 = !DILocation(line: 410, column: 25, scope: !6244)
!6254 = !DILocation(line: 410, column: 11, scope: !6244)
!6255 = !DILocation(line: 410, column: 9, scope: !6244)
!6256 = !DILocation(line: 411, column: 2, scope: !6257)
!6257 = distinct !DILexicalBlock(scope: !6258, file: !3, line: 411, column: 2)
!6258 = distinct !DILexicalBlock(scope: !6244, file: !3, line: 411, column: 2)
!6259 = !DILocation(line: 411, column: 2, scope: !6258)
!6260 = !DILocation(line: 411, column: 2, scope: !6261)
!6261 = distinct !DILexicalBlock(scope: !6257, file: !3, line: 411, column: 2)
!6262 = !DILocation(line: 413, column: 25, scope: !6244)
!6263 = !DILocation(line: 413, column: 11, scope: !6244)
!6264 = !DILocation(line: 413, column: 9, scope: !6244)
!6265 = !DILocation(line: 414, column: 2, scope: !6266)
!6266 = distinct !DILexicalBlock(scope: !6267, file: !3, line: 414, column: 2)
!6267 = distinct !DILexicalBlock(scope: !6244, file: !3, line: 414, column: 2)
!6268 = !DILocation(line: 414, column: 2, scope: !6267)
!6269 = !DILocation(line: 414, column: 2, scope: !6270)
!6270 = distinct !DILexicalBlock(scope: !6266, file: !3, line: 414, column: 2)
!6271 = !DILocation(line: 416, column: 25, scope: !6244)
!6272 = !DILocation(line: 416, column: 11, scope: !6244)
!6273 = !DILocation(line: 416, column: 9, scope: !6244)
!6274 = !DILocation(line: 417, column: 2, scope: !6275)
!6275 = distinct !DILexicalBlock(scope: !6276, file: !3, line: 417, column: 2)
!6276 = distinct !DILexicalBlock(scope: !6244, file: !3, line: 417, column: 2)
!6277 = !DILocation(line: 417, column: 2, scope: !6276)
!6278 = !DILocation(line: 417, column: 2, scope: !6279)
!6279 = distinct !DILexicalBlock(scope: !6275, file: !3, line: 417, column: 2)
!6280 = !DILocation(line: 419, column: 25, scope: !6244)
!6281 = !DILocation(line: 419, column: 11, scope: !6244)
!6282 = !DILocation(line: 419, column: 9, scope: !6244)
!6283 = !DILocation(line: 420, column: 2, scope: !6284)
!6284 = distinct !DILexicalBlock(scope: !6285, file: !3, line: 420, column: 2)
!6285 = distinct !DILexicalBlock(scope: !6244, file: !3, line: 420, column: 2)
!6286 = !DILocation(line: 420, column: 2, scope: !6285)
!6287 = !DILocation(line: 420, column: 2, scope: !6288)
!6288 = distinct !DILexicalBlock(scope: !6284, file: !3, line: 420, column: 2)
!6289 = !DILocation(line: 422, column: 25, scope: !6244)
!6290 = !DILocation(line: 422, column: 11, scope: !6244)
!6291 = !DILocation(line: 422, column: 9, scope: !6244)
!6292 = !DILocation(line: 423, column: 2, scope: !6293)
!6293 = distinct !DILexicalBlock(scope: !6294, file: !3, line: 423, column: 2)
!6294 = distinct !DILexicalBlock(scope: !6244, file: !3, line: 423, column: 2)
!6295 = !DILocation(line: 423, column: 2, scope: !6294)
!6296 = !DILocation(line: 423, column: 2, scope: !6297)
!6297 = distinct !DILexicalBlock(scope: !6293, file: !3, line: 423, column: 2)
!6298 = !DILocation(line: 425, column: 25, scope: !6244)
!6299 = !DILocation(line: 425, column: 11, scope: !6244)
!6300 = !DILocation(line: 425, column: 9, scope: !6244)
!6301 = !DILocation(line: 426, column: 2, scope: !6302)
!6302 = distinct !DILexicalBlock(scope: !6303, file: !3, line: 426, column: 2)
!6303 = distinct !DILexicalBlock(scope: !6244, file: !3, line: 426, column: 2)
!6304 = !DILocation(line: 426, column: 2, scope: !6303)
!6305 = !DILocation(line: 426, column: 2, scope: !6306)
!6306 = distinct !DILexicalBlock(scope: !6302, file: !3, line: 426, column: 2)
!6307 = !DILocation(line: 428, column: 25, scope: !6244)
!6308 = !DILocation(line: 428, column: 11, scope: !6244)
!6309 = !DILocation(line: 428, column: 9, scope: !6244)
!6310 = !DILocation(line: 429, column: 2, scope: !6311)
!6311 = distinct !DILexicalBlock(scope: !6312, file: !3, line: 429, column: 2)
!6312 = distinct !DILexicalBlock(scope: !6244, file: !3, line: 429, column: 2)
!6313 = !DILocation(line: 429, column: 2, scope: !6312)
!6314 = !DILocation(line: 429, column: 2, scope: !6315)
!6315 = distinct !DILexicalBlock(scope: !6311, file: !3, line: 429, column: 2)
!6316 = !DILocation(line: 431, column: 25, scope: !6244)
!6317 = !DILocation(line: 431, column: 11, scope: !6244)
!6318 = !DILocation(line: 431, column: 9, scope: !6244)
!6319 = !DILocation(line: 432, column: 2, scope: !6320)
!6320 = distinct !DILexicalBlock(scope: !6321, file: !3, line: 432, column: 2)
!6321 = distinct !DILexicalBlock(scope: !6244, file: !3, line: 432, column: 2)
!6322 = !DILocation(line: 432, column: 2, scope: !6321)
!6323 = !DILocation(line: 432, column: 2, scope: !6324)
!6324 = distinct !DILexicalBlock(scope: !6320, file: !3, line: 432, column: 2)
!6325 = !DILocation(line: 434, column: 25, scope: !6244)
!6326 = !DILocation(line: 434, column: 11, scope: !6244)
!6327 = !DILocation(line: 434, column: 9, scope: !6244)
!6328 = !DILocation(line: 435, column: 2, scope: !6329)
!6329 = distinct !DILexicalBlock(scope: !6330, file: !3, line: 435, column: 2)
!6330 = distinct !DILexicalBlock(scope: !6244, file: !3, line: 435, column: 2)
!6331 = !DILocation(line: 435, column: 2, scope: !6330)
!6332 = !DILocation(line: 435, column: 2, scope: !6333)
!6333 = distinct !DILexicalBlock(scope: !6329, file: !3, line: 435, column: 2)
!6334 = !DILocation(line: 437, column: 25, scope: !6244)
!6335 = !DILocation(line: 437, column: 11, scope: !6244)
!6336 = !DILocation(line: 437, column: 9, scope: !6244)
!6337 = !DILocation(line: 438, column: 2, scope: !6338)
!6338 = distinct !DILexicalBlock(scope: !6339, file: !3, line: 438, column: 2)
!6339 = distinct !DILexicalBlock(scope: !6244, file: !3, line: 438, column: 2)
!6340 = !DILocation(line: 438, column: 2, scope: !6339)
!6341 = !DILocation(line: 438, column: 2, scope: !6342)
!6342 = distinct !DILexicalBlock(scope: !6338, file: !3, line: 438, column: 2)
!6343 = !DILocation(line: 440, column: 25, scope: !6244)
!6344 = !DILocation(line: 440, column: 11, scope: !6244)
!6345 = !DILocation(line: 440, column: 9, scope: !6244)
!6346 = !DILocation(line: 441, column: 2, scope: !6347)
!6347 = distinct !DILexicalBlock(scope: !6348, file: !3, line: 441, column: 2)
!6348 = distinct !DILexicalBlock(scope: !6244, file: !3, line: 441, column: 2)
!6349 = !DILocation(line: 441, column: 2, scope: !6348)
!6350 = !DILocation(line: 441, column: 2, scope: !6351)
!6351 = distinct !DILexicalBlock(scope: !6347, file: !3, line: 441, column: 2)
!6352 = !DILocation(line: 443, column: 25, scope: !6244)
!6353 = !DILocation(line: 443, column: 11, scope: !6244)
!6354 = !DILocation(line: 443, column: 9, scope: !6244)
!6355 = !DILocation(line: 444, column: 2, scope: !6356)
!6356 = distinct !DILexicalBlock(scope: !6357, file: !3, line: 444, column: 2)
!6357 = distinct !DILexicalBlock(scope: !6244, file: !3, line: 444, column: 2)
!6358 = !DILocation(line: 444, column: 2, scope: !6357)
!6359 = !DILocation(line: 444, column: 2, scope: !6360)
!6360 = distinct !DILexicalBlock(scope: !6356, file: !3, line: 444, column: 2)
!6361 = !DILocation(line: 446, column: 25, scope: !6244)
!6362 = !DILocation(line: 446, column: 11, scope: !6244)
!6363 = !DILocation(line: 446, column: 9, scope: !6244)
!6364 = !DILocation(line: 447, column: 2, scope: !6365)
!6365 = distinct !DILexicalBlock(scope: !6366, file: !3, line: 447, column: 2)
!6366 = distinct !DILexicalBlock(scope: !6244, file: !3, line: 447, column: 2)
!6367 = !DILocation(line: 447, column: 2, scope: !6366)
!6368 = !DILocation(line: 447, column: 2, scope: !6369)
!6369 = distinct !DILexicalBlock(scope: !6365, file: !3, line: 447, column: 2)
!6370 = !DILocation(line: 449, column: 25, scope: !6244)
!6371 = !DILocation(line: 449, column: 11, scope: !6244)
!6372 = !DILocation(line: 449, column: 9, scope: !6244)
!6373 = !DILocation(line: 450, column: 2, scope: !6374)
!6374 = distinct !DILexicalBlock(scope: !6375, file: !3, line: 450, column: 2)
!6375 = distinct !DILexicalBlock(scope: !6244, file: !3, line: 450, column: 2)
!6376 = !DILocation(line: 450, column: 2, scope: !6375)
!6377 = !DILocation(line: 450, column: 2, scope: !6378)
!6378 = distinct !DILexicalBlock(scope: !6374, file: !3, line: 450, column: 2)
!6379 = !DILocation(line: 452, column: 25, scope: !6244)
!6380 = !DILocation(line: 452, column: 11, scope: !6244)
!6381 = !DILocation(line: 452, column: 9, scope: !6244)
!6382 = !DILocation(line: 453, column: 2, scope: !6383)
!6383 = distinct !DILexicalBlock(scope: !6384, file: !3, line: 453, column: 2)
!6384 = distinct !DILexicalBlock(scope: !6244, file: !3, line: 453, column: 2)
!6385 = !DILocation(line: 453, column: 2, scope: !6384)
!6386 = !DILocation(line: 453, column: 2, scope: !6387)
!6387 = distinct !DILexicalBlock(scope: !6383, file: !3, line: 453, column: 2)
!6388 = !DILocation(line: 455, column: 25, scope: !6244)
!6389 = !DILocation(line: 455, column: 11, scope: !6244)
!6390 = !DILocation(line: 455, column: 9, scope: !6244)
!6391 = !DILocation(line: 456, column: 2, scope: !6392)
!6392 = distinct !DILexicalBlock(scope: !6393, file: !3, line: 456, column: 2)
!6393 = distinct !DILexicalBlock(scope: !6244, file: !3, line: 456, column: 2)
!6394 = !DILocation(line: 456, column: 2, scope: !6393)
!6395 = !DILocation(line: 456, column: 2, scope: !6396)
!6396 = distinct !DILexicalBlock(scope: !6392, file: !3, line: 456, column: 2)
!6397 = !DILocation(line: 458, column: 25, scope: !6244)
!6398 = !DILocation(line: 458, column: 11, scope: !6244)
!6399 = !DILocation(line: 458, column: 9, scope: !6244)
!6400 = !DILocation(line: 459, column: 2, scope: !6401)
!6401 = distinct !DILexicalBlock(scope: !6402, file: !3, line: 459, column: 2)
!6402 = distinct !DILexicalBlock(scope: !6244, file: !3, line: 459, column: 2)
!6403 = !DILocation(line: 459, column: 2, scope: !6402)
!6404 = !DILocation(line: 459, column: 2, scope: !6405)
!6405 = distinct !DILexicalBlock(scope: !6401, file: !3, line: 459, column: 2)
!6406 = !DILocation(line: 461, column: 25, scope: !6244)
!6407 = !DILocation(line: 461, column: 11, scope: !6244)
!6408 = !DILocation(line: 461, column: 9, scope: !6244)
!6409 = !DILocation(line: 462, column: 2, scope: !6410)
!6410 = distinct !DILexicalBlock(scope: !6411, file: !3, line: 462, column: 2)
!6411 = distinct !DILexicalBlock(scope: !6244, file: !3, line: 462, column: 2)
!6412 = !DILocation(line: 462, column: 2, scope: !6411)
!6413 = !DILocation(line: 462, column: 2, scope: !6414)
!6414 = distinct !DILexicalBlock(scope: !6410, file: !3, line: 462, column: 2)
!6415 = !DILocation(line: 464, column: 25, scope: !6244)
!6416 = !DILocation(line: 464, column: 11, scope: !6244)
!6417 = !DILocation(line: 464, column: 9, scope: !6244)
!6418 = !DILocation(line: 465, column: 2, scope: !6419)
!6419 = distinct !DILexicalBlock(scope: !6420, file: !3, line: 465, column: 2)
!6420 = distinct !DILexicalBlock(scope: !6244, file: !3, line: 465, column: 2)
!6421 = !DILocation(line: 465, column: 2, scope: !6420)
!6422 = !DILocation(line: 465, column: 2, scope: !6423)
!6423 = distinct !DILexicalBlock(scope: !6419, file: !3, line: 465, column: 2)
!6424 = !DILocation(line: 467, column: 25, scope: !6244)
!6425 = !DILocation(line: 467, column: 11, scope: !6244)
!6426 = !DILocation(line: 467, column: 9, scope: !6244)
!6427 = !DILocation(line: 468, column: 2, scope: !6428)
!6428 = distinct !DILexicalBlock(scope: !6429, file: !3, line: 468, column: 2)
!6429 = distinct !DILexicalBlock(scope: !6244, file: !3, line: 468, column: 2)
!6430 = !DILocation(line: 468, column: 2, scope: !6429)
!6431 = !DILocation(line: 468, column: 2, scope: !6432)
!6432 = distinct !DILexicalBlock(scope: !6428, file: !3, line: 468, column: 2)
!6433 = !DILocation(line: 470, column: 25, scope: !6244)
!6434 = !DILocation(line: 470, column: 11, scope: !6244)
!6435 = !DILocation(line: 470, column: 9, scope: !6244)
!6436 = !DILocation(line: 471, column: 2, scope: !6437)
!6437 = distinct !DILexicalBlock(scope: !6438, file: !3, line: 471, column: 2)
!6438 = distinct !DILexicalBlock(scope: !6244, file: !3, line: 471, column: 2)
!6439 = !DILocation(line: 471, column: 2, scope: !6438)
!6440 = !DILocation(line: 471, column: 2, scope: !6441)
!6441 = distinct !DILexicalBlock(scope: !6437, file: !3, line: 471, column: 2)
!6442 = !DILocation(line: 473, column: 25, scope: !6244)
!6443 = !DILocation(line: 473, column: 11, scope: !6244)
!6444 = !DILocation(line: 473, column: 9, scope: !6244)
!6445 = !DILocation(line: 474, column: 2, scope: !6446)
!6446 = distinct !DILexicalBlock(scope: !6447, file: !3, line: 474, column: 2)
!6447 = distinct !DILexicalBlock(scope: !6244, file: !3, line: 474, column: 2)
!6448 = !DILocation(line: 474, column: 2, scope: !6447)
!6449 = !DILocation(line: 474, column: 2, scope: !6450)
!6450 = distinct !DILexicalBlock(scope: !6446, file: !3, line: 474, column: 2)
!6451 = !DILocation(line: 476, column: 25, scope: !6244)
!6452 = !DILocation(line: 476, column: 11, scope: !6244)
!6453 = !DILocation(line: 476, column: 9, scope: !6244)
!6454 = !DILocation(line: 477, column: 2, scope: !6455)
!6455 = distinct !DILexicalBlock(scope: !6456, file: !3, line: 477, column: 2)
!6456 = distinct !DILexicalBlock(scope: !6244, file: !3, line: 477, column: 2)
!6457 = !DILocation(line: 477, column: 2, scope: !6456)
!6458 = !DILocation(line: 477, column: 2, scope: !6459)
!6459 = distinct !DILexicalBlock(scope: !6455, file: !3, line: 477, column: 2)
!6460 = !DILocation(line: 479, column: 25, scope: !6244)
!6461 = !DILocation(line: 479, column: 11, scope: !6244)
!6462 = !DILocation(line: 479, column: 9, scope: !6244)
!6463 = !DILocation(line: 480, column: 2, scope: !6464)
!6464 = distinct !DILexicalBlock(scope: !6465, file: !3, line: 480, column: 2)
!6465 = distinct !DILexicalBlock(scope: !6244, file: !3, line: 480, column: 2)
!6466 = !DILocation(line: 480, column: 2, scope: !6465)
!6467 = !DILocation(line: 480, column: 2, scope: !6468)
!6468 = distinct !DILexicalBlock(scope: !6464, file: !3, line: 480, column: 2)
!6469 = !DILocation(line: 482, column: 2, scope: !6244)
!6470 = !DILocation(line: 482, column: 10, scope: !6244)
!6471 = !DILocation(line: 482, column: 13, scope: !6244)
!6472 = !DILocation(line: 483, column: 25, scope: !6473)
!6473 = distinct !DILexicalBlock(scope: !6244, file: !3, line: 482, column: 20)
!6474 = !DILocation(line: 483, column: 12, scope: !6473)
!6475 = !DILocation(line: 483, column: 10, scope: !6473)
!6476 = !DILocation(line: 484, column: 3, scope: !6477)
!6477 = distinct !DILexicalBlock(scope: !6478, file: !3, line: 484, column: 3)
!6478 = distinct !DILexicalBlock(scope: !6473, file: !3, line: 484, column: 3)
!6479 = !DILocation(line: 484, column: 3, scope: !6478)
!6480 = !DILocation(line: 484, column: 3, scope: !6481)
!6481 = distinct !DILexicalBlock(scope: !6477, file: !3, line: 484, column: 3)
!6482 = !DILocation(line: 486, column: 7, scope: !6483)
!6483 = distinct !DILexicalBlock(scope: !6473, file: !3, line: 486, column: 7)
!6484 = !DILocation(line: 486, column: 7, scope: !6473)
!6485 = !DILocation(line: 487, column: 4, scope: !6483)
!6486 = distinct !{!6486, !6469, !6487}
!6487 = !DILocation(line: 488, column: 2, scope: !6244)
!6488 = !DILocation(line: 490, column: 2, scope: !6244)
!6489 = !DILocation(line: 491, column: 2, scope: !6244)
!6490 = !DILocation(line: 492, column: 1, scope: !6244)
!6491 = distinct !DISubprogram(name: "ufx_i2c_init", scope: !3, file: !3, line: 1324, type: !6161, scopeLine: 1325, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !284)
!6492 = !DILocalVariable(name: "dev", arg: 1, scope: !6491, file: !3, line: 1324, type: !4278)
!6493 = !DILocation(line: 1324, column: 42, scope: !6491)
!6494 = !DILocalVariable(name: "tmp", scope: !6491, file: !3, line: 1326, type: !224)
!6495 = !DILocation(line: 1326, column: 6, scope: !6491)
!6496 = !DILocalVariable(name: "status", scope: !6491, file: !3, line: 1329, type: !217)
!6497 = !DILocation(line: 1329, column: 6, scope: !6491)
!6498 = !DILocation(line: 1329, column: 29, scope: !6491)
!6499 = !DILocation(line: 1329, column: 15, scope: !6491)
!6500 = !DILocation(line: 1330, column: 2, scope: !6501)
!6501 = distinct !DILexicalBlock(scope: !6502, file: !3, line: 1330, column: 2)
!6502 = distinct !DILexicalBlock(scope: !6491, file: !3, line: 1330, column: 2)
!6503 = !DILocation(line: 1330, column: 2, scope: !6502)
!6504 = !DILocation(line: 1330, column: 2, scope: !6505)
!6505 = distinct !DILexicalBlock(scope: !6501, file: !3, line: 1330, column: 2)
!6506 = !DILocation(line: 1334, column: 25, scope: !6491)
!6507 = !DILocation(line: 1334, column: 11, scope: !6491)
!6508 = !DILocation(line: 1334, column: 9, scope: !6491)
!6509 = !DILocation(line: 1335, column: 2, scope: !6510)
!6510 = distinct !DILexicalBlock(scope: !6511, file: !3, line: 1335, column: 2)
!6511 = distinct !DILexicalBlock(scope: !6491, file: !3, line: 1335, column: 2)
!6512 = !DILocation(line: 1335, column: 2, scope: !6511)
!6513 = !DILocation(line: 1335, column: 2, scope: !6514)
!6514 = distinct !DILexicalBlock(scope: !6510, file: !3, line: 1335, column: 2)
!6515 = !DILocation(line: 1338, column: 25, scope: !6491)
!6516 = !DILocation(line: 1338, column: 11, scope: !6491)
!6517 = !DILocation(line: 1338, column: 9, scope: !6491)
!6518 = !DILocation(line: 1339, column: 2, scope: !6519)
!6519 = distinct !DILexicalBlock(scope: !6520, file: !3, line: 1339, column: 2)
!6520 = distinct !DILexicalBlock(scope: !6491, file: !3, line: 1339, column: 2)
!6521 = !DILocation(line: 1339, column: 2, scope: !6520)
!6522 = !DILocation(line: 1339, column: 2, scope: !6523)
!6523 = distinct !DILexicalBlock(scope: !6519, file: !3, line: 1339, column: 2)
!6524 = !DILocation(line: 1341, column: 24, scope: !6491)
!6525 = !DILocation(line: 1341, column: 11, scope: !6491)
!6526 = !DILocation(line: 1341, column: 9, scope: !6491)
!6527 = !DILocation(line: 1342, column: 2, scope: !6528)
!6528 = distinct !DILexicalBlock(scope: !6529, file: !3, line: 1342, column: 2)
!6529 = distinct !DILexicalBlock(scope: !6491, file: !3, line: 1342, column: 2)
!6530 = !DILocation(line: 1342, column: 2, scope: !6529)
!6531 = !DILocation(line: 1342, column: 2, scope: !6532)
!6532 = distinct !DILexicalBlock(scope: !6528, file: !3, line: 1342, column: 2)
!6533 = !DILocation(line: 1345, column: 6, scope: !6491)
!6534 = !DILocation(line: 1346, column: 6, scope: !6491)
!6535 = !DILocation(line: 1349, column: 6, scope: !6491)
!6536 = !DILocation(line: 1352, column: 6, scope: !6491)
!6537 = !DILocation(line: 1354, column: 25, scope: !6491)
!6538 = !DILocation(line: 1354, column: 38, scope: !6491)
!6539 = !DILocation(line: 1354, column: 11, scope: !6491)
!6540 = !DILocation(line: 1354, column: 9, scope: !6491)
!6541 = !DILocation(line: 1355, column: 2, scope: !6542)
!6542 = distinct !DILexicalBlock(scope: !6543, file: !3, line: 1355, column: 2)
!6543 = distinct !DILexicalBlock(scope: !6491, file: !3, line: 1355, column: 2)
!6544 = !DILocation(line: 1355, column: 2, scope: !6543)
!6545 = !DILocation(line: 1355, column: 2, scope: !6546)
!6546 = distinct !DILexicalBlock(scope: !6542, file: !3, line: 1355, column: 2)
!6547 = !DILocation(line: 1358, column: 38, scope: !6491)
!6548 = !DILocation(line: 1358, column: 11, scope: !6491)
!6549 = !DILocation(line: 1358, column: 9, scope: !6491)
!6550 = !DILocation(line: 1359, column: 2, scope: !6551)
!6551 = distinct !DILexicalBlock(scope: !6552, file: !3, line: 1359, column: 2)
!6552 = distinct !DILexicalBlock(scope: !6491, file: !3, line: 1359, column: 2)
!6553 = !DILocation(line: 1359, column: 2, scope: !6552)
!6554 = !DILocation(line: 1359, column: 2, scope: !6555)
!6555 = distinct !DILexicalBlock(scope: !6551, file: !3, line: 1359, column: 2)
!6556 = !DILocation(line: 1362, column: 25, scope: !6491)
!6557 = !DILocation(line: 1362, column: 11, scope: !6491)
!6558 = !DILocation(line: 1362, column: 9, scope: !6491)
!6559 = !DILocation(line: 1363, column: 2, scope: !6560)
!6560 = distinct !DILexicalBlock(scope: !6561, file: !3, line: 1363, column: 2)
!6561 = distinct !DILexicalBlock(scope: !6491, file: !3, line: 1363, column: 2)
!6562 = !DILocation(line: 1363, column: 2, scope: !6561)
!6563 = !DILocation(line: 1363, column: 2, scope: !6564)
!6564 = distinct !DILexicalBlock(scope: !6560, file: !3, line: 1363, column: 2)
!6565 = !DILocation(line: 1365, column: 2, scope: !6491)
!6566 = !DILocation(line: 1366, column: 1, scope: !6491)
!6567 = distinct !DISubprogram(name: "ufx_setup_modes", scope: !3, file: !3, line: 1480, type: !6568, scopeLine: 1482, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !284)
!6568 = !DISubroutineType(types: !6569)
!6569 = !{!217, !4278, !4284, !311, !357}
!6570 = !DILocation(line: 445, column: 72, scope: !5400, inlinedAt: !6571)
!6571 = distinct !DILocation(line: 552, column: 10, scope: !5405, inlinedAt: !6572)
!6572 = distinct !DILocation(line: 1490, column: 9, scope: !6567)
!6573 = !DILocation(line: 446, column: 9, scope: !5400, inlinedAt: !6571)
!6574 = !DILocation(line: 446, column: 23, scope: !5400, inlinedAt: !6571)
!6575 = !DILocation(line: 448, column: 8, scope: !5400, inlinedAt: !6571)
!6576 = !DILocation(line: 318, column: 67, scope: !5416, inlinedAt: !6577)
!6577 = distinct !DILocation(line: 553, column: 20, scope: !5405, inlinedAt: !6572)
!6578 = !DILocation(line: 346, column: 58, scope: !5422, inlinedAt: !6579)
!6579 = distinct !DILocation(line: 547, column: 11, scope: !5405, inlinedAt: !6572)
!6580 = !DILocation(line: 472, column: 28, scope: !5428, inlinedAt: !6581)
!6581 = distinct !DILocation(line: 481, column: 9, scope: !5433, inlinedAt: !6582)
!6582 = distinct !DILocation(line: 545, column: 11, scope: !5435, inlinedAt: !6572)
!6583 = !DILocation(line: 472, column: 40, scope: !5428, inlinedAt: !6581)
!6584 = !DILocation(line: 472, column: 60, scope: !5428, inlinedAt: !6581)
!6585 = !DILocation(line: 478, column: 51, scope: !5433, inlinedAt: !6582)
!6586 = !DILocation(line: 478, column: 63, scope: !5433, inlinedAt: !6582)
!6587 = !DILocation(line: 480, column: 15, scope: !5433, inlinedAt: !6582)
!6588 = !DILocation(line: 538, column: 45, scope: !5407, inlinedAt: !6572)
!6589 = !DILocation(line: 538, column: 57, scope: !5407, inlinedAt: !6572)
!6590 = !DILocation(line: 542, column: 16, scope: !5405, inlinedAt: !6572)
!6591 = !DILocalVariable(name: "dev", arg: 1, scope: !6567, file: !3, line: 1480, type: !4278)
!6592 = !DILocation(line: 1480, column: 45, scope: !6567)
!6593 = !DILocalVariable(name: "info", arg: 2, scope: !6567, file: !3, line: 1480, type: !4284)
!6594 = !DILocation(line: 1480, column: 66, scope: !6567)
!6595 = !DILocalVariable(name: "default_edid", arg: 3, scope: !6567, file: !3, line: 1481, type: !311)
!6596 = !DILocation(line: 1481, column: 8, scope: !6567)
!6597 = !DILocalVariable(name: "default_edid_size", arg: 4, scope: !6567, file: !3, line: 1481, type: !357)
!6598 = !DILocation(line: 1481, column: 29, scope: !6567)
!6599 = !DILocalVariable(name: "default_vmode", scope: !6567, file: !3, line: 1483, type: !6600)
!6600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6601, size: 64)
!6601 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4368)
!6602 = !DILocation(line: 1483, column: 29, scope: !6567)
!6603 = !DILocalVariable(name: "edid", scope: !6567, file: !3, line: 1484, type: !4418)
!6604 = !DILocation(line: 1484, column: 6, scope: !6567)
!6605 = !DILocalVariable(name: "i", scope: !6567, file: !3, line: 1485, type: !217)
!6606 = !DILocation(line: 1485, column: 6, scope: !6567)
!6607 = !DILocalVariable(name: "result", scope: !6567, file: !3, line: 1485, type: !217)
!6608 = !DILocation(line: 1485, column: 9, scope: !6567)
!6609 = !DILocalVariable(name: "tries", scope: !6567, file: !3, line: 1485, type: !217)
!6610 = !DILocation(line: 1485, column: 21, scope: !6567)
!6611 = !DILocation(line: 1487, column: 6, scope: !6612)
!6612 = distinct !DILexicalBlock(scope: !6567, file: !3, line: 1487, column: 6)
!6613 = !DILocation(line: 1487, column: 12, scope: !6612)
!6614 = !DILocation(line: 1487, column: 6, scope: !6567)
!6615 = !DILocation(line: 1488, column: 15, scope: !6612)
!6616 = !DILocation(line: 1488, column: 21, scope: !6612)
!6617 = !DILocation(line: 1488, column: 3, scope: !6612)
!6618 = !DILocation(line: 540, column: 27, scope: !5406, inlinedAt: !6572)
!6619 = !DILocation(line: 540, column: 6, scope: !5406, inlinedAt: !6572)
!6620 = !DILocation(line: 540, column: 6, scope: !5407, inlinedAt: !6572)
!6621 = !DILocation(line: 544, column: 7, scope: !5435, inlinedAt: !6572)
!6622 = !DILocation(line: 544, column: 12, scope: !5435, inlinedAt: !6572)
!6623 = !DILocation(line: 544, column: 7, scope: !5405, inlinedAt: !6572)
!6624 = !DILocation(line: 545, column: 25, scope: !5435, inlinedAt: !6572)
!6625 = !DILocation(line: 545, column: 31, scope: !5435, inlinedAt: !6572)
!6626 = !DILocation(line: 480, column: 33, scope: !5433, inlinedAt: !6582)
!6627 = !DILocation(line: 480, column: 23, scope: !5433, inlinedAt: !6582)
!6628 = !DILocation(line: 481, column: 29, scope: !5433, inlinedAt: !6582)
!6629 = !DILocation(line: 481, column: 35, scope: !5433, inlinedAt: !6582)
!6630 = !DILocation(line: 481, column: 42, scope: !5433, inlinedAt: !6582)
!6631 = !DILocation(line: 474, column: 23, scope: !5428, inlinedAt: !6581)
!6632 = !DILocation(line: 474, column: 29, scope: !5428, inlinedAt: !6581)
!6633 = !DILocation(line: 474, column: 36, scope: !5428, inlinedAt: !6581)
!6634 = !DILocation(line: 474, column: 9, scope: !5428, inlinedAt: !6581)
!6635 = !DILocation(line: 545, column: 4, scope: !5435, inlinedAt: !6572)
!6636 = !DILocation(line: 547, column: 25, scope: !5405, inlinedAt: !6572)
!6637 = !DILocation(line: 348, column: 7, scope: !5479, inlinedAt: !6579)
!6638 = !DILocation(line: 348, column: 6, scope: !5422, inlinedAt: !6579)
!6639 = !DILocation(line: 349, column: 3, scope: !5479, inlinedAt: !6579)
!6640 = !DILocation(line: 351, column: 6, scope: !5483, inlinedAt: !6579)
!6641 = !DILocation(line: 351, column: 11, scope: !5483, inlinedAt: !6579)
!6642 = !DILocation(line: 351, column: 6, scope: !5422, inlinedAt: !6579)
!6643 = !DILocation(line: 352, column: 3, scope: !5483, inlinedAt: !6579)
!6644 = !DILocation(line: 354, column: 32, scope: !5488, inlinedAt: !6579)
!6645 = !DILocation(line: 354, column: 37, scope: !5488, inlinedAt: !6579)
!6646 = !DILocation(line: 354, column: 42, scope: !5488, inlinedAt: !6579)
!6647 = !DILocation(line: 354, column: 45, scope: !5488, inlinedAt: !6579)
!6648 = !DILocation(line: 354, column: 50, scope: !5488, inlinedAt: !6579)
!6649 = !DILocation(line: 354, column: 6, scope: !5422, inlinedAt: !6579)
!6650 = !DILocation(line: 355, column: 3, scope: !5488, inlinedAt: !6579)
!6651 = !DILocation(line: 356, column: 32, scope: !5496, inlinedAt: !6579)
!6652 = !DILocation(line: 356, column: 37, scope: !5496, inlinedAt: !6579)
!6653 = !DILocation(line: 356, column: 43, scope: !5496, inlinedAt: !6579)
!6654 = !DILocation(line: 356, column: 46, scope: !5496, inlinedAt: !6579)
!6655 = !DILocation(line: 356, column: 51, scope: !5496, inlinedAt: !6579)
!6656 = !DILocation(line: 356, column: 6, scope: !5422, inlinedAt: !6579)
!6657 = !DILocation(line: 357, column: 3, scope: !5496, inlinedAt: !6579)
!6658 = !DILocation(line: 358, column: 6, scope: !5504, inlinedAt: !6579)
!6659 = !DILocation(line: 358, column: 11, scope: !5504, inlinedAt: !6579)
!6660 = !DILocation(line: 358, column: 6, scope: !5422, inlinedAt: !6579)
!6661 = !DILocation(line: 358, column: 26, scope: !5504, inlinedAt: !6579)
!6662 = !DILocation(line: 359, column: 6, scope: !5509, inlinedAt: !6579)
!6663 = !DILocation(line: 359, column: 11, scope: !5509, inlinedAt: !6579)
!6664 = !DILocation(line: 359, column: 6, scope: !5422, inlinedAt: !6579)
!6665 = !DILocation(line: 359, column: 26, scope: !5509, inlinedAt: !6579)
!6666 = !DILocation(line: 360, column: 6, scope: !5514, inlinedAt: !6579)
!6667 = !DILocation(line: 360, column: 11, scope: !5514, inlinedAt: !6579)
!6668 = !DILocation(line: 360, column: 6, scope: !5422, inlinedAt: !6579)
!6669 = !DILocation(line: 360, column: 26, scope: !5514, inlinedAt: !6579)
!6670 = !DILocation(line: 361, column: 6, scope: !5519, inlinedAt: !6579)
!6671 = !DILocation(line: 361, column: 11, scope: !5519, inlinedAt: !6579)
!6672 = !DILocation(line: 361, column: 6, scope: !5422, inlinedAt: !6579)
!6673 = !DILocation(line: 361, column: 26, scope: !5519, inlinedAt: !6579)
!6674 = !DILocation(line: 362, column: 6, scope: !5524, inlinedAt: !6579)
!6675 = !DILocation(line: 362, column: 11, scope: !5524, inlinedAt: !6579)
!6676 = !DILocation(line: 362, column: 6, scope: !5422, inlinedAt: !6579)
!6677 = !DILocation(line: 362, column: 26, scope: !5524, inlinedAt: !6579)
!6678 = !DILocation(line: 363, column: 6, scope: !5529, inlinedAt: !6579)
!6679 = !DILocation(line: 363, column: 11, scope: !5529, inlinedAt: !6579)
!6680 = !DILocation(line: 363, column: 6, scope: !5422, inlinedAt: !6579)
!6681 = !DILocation(line: 363, column: 26, scope: !5529, inlinedAt: !6579)
!6682 = !DILocation(line: 364, column: 6, scope: !5534, inlinedAt: !6579)
!6683 = !DILocation(line: 364, column: 11, scope: !5534, inlinedAt: !6579)
!6684 = !DILocation(line: 364, column: 6, scope: !5422, inlinedAt: !6579)
!6685 = !DILocation(line: 364, column: 26, scope: !5534, inlinedAt: !6579)
!6686 = !DILocation(line: 365, column: 6, scope: !5539, inlinedAt: !6579)
!6687 = !DILocation(line: 365, column: 11, scope: !5539, inlinedAt: !6579)
!6688 = !DILocation(line: 365, column: 6, scope: !5422, inlinedAt: !6579)
!6689 = !DILocation(line: 365, column: 26, scope: !5539, inlinedAt: !6579)
!6690 = !DILocation(line: 366, column: 6, scope: !5544, inlinedAt: !6579)
!6691 = !DILocation(line: 366, column: 11, scope: !5544, inlinedAt: !6579)
!6692 = !DILocation(line: 366, column: 6, scope: !5422, inlinedAt: !6579)
!6693 = !DILocation(line: 366, column: 26, scope: !5544, inlinedAt: !6579)
!6694 = !DILocation(line: 367, column: 6, scope: !5549, inlinedAt: !6579)
!6695 = !DILocation(line: 367, column: 11, scope: !5549, inlinedAt: !6579)
!6696 = !DILocation(line: 367, column: 6, scope: !5422, inlinedAt: !6579)
!6697 = !DILocation(line: 367, column: 26, scope: !5549, inlinedAt: !6579)
!6698 = !DILocation(line: 368, column: 6, scope: !5554, inlinedAt: !6579)
!6699 = !DILocation(line: 368, column: 11, scope: !5554, inlinedAt: !6579)
!6700 = !DILocation(line: 368, column: 6, scope: !5422, inlinedAt: !6579)
!6701 = !DILocation(line: 368, column: 26, scope: !5554, inlinedAt: !6579)
!6702 = !DILocation(line: 369, column: 6, scope: !5559, inlinedAt: !6579)
!6703 = !DILocation(line: 369, column: 11, scope: !5559, inlinedAt: !6579)
!6704 = !DILocation(line: 369, column: 6, scope: !5422, inlinedAt: !6579)
!6705 = !DILocation(line: 369, column: 26, scope: !5559, inlinedAt: !6579)
!6706 = !DILocation(line: 370, column: 6, scope: !5564, inlinedAt: !6579)
!6707 = !DILocation(line: 370, column: 11, scope: !5564, inlinedAt: !6579)
!6708 = !DILocation(line: 370, column: 6, scope: !5422, inlinedAt: !6579)
!6709 = !DILocation(line: 370, column: 26, scope: !5564, inlinedAt: !6579)
!6710 = !DILocation(line: 371, column: 6, scope: !5569, inlinedAt: !6579)
!6711 = !DILocation(line: 371, column: 11, scope: !5569, inlinedAt: !6579)
!6712 = !DILocation(line: 371, column: 6, scope: !5422, inlinedAt: !6579)
!6713 = !DILocation(line: 371, column: 26, scope: !5569, inlinedAt: !6579)
!6714 = !DILocation(line: 372, column: 6, scope: !5574, inlinedAt: !6579)
!6715 = !DILocation(line: 372, column: 11, scope: !5574, inlinedAt: !6579)
!6716 = !DILocation(line: 372, column: 6, scope: !5422, inlinedAt: !6579)
!6717 = !DILocation(line: 372, column: 26, scope: !5574, inlinedAt: !6579)
!6718 = !DILocation(line: 373, column: 6, scope: !5579, inlinedAt: !6579)
!6719 = !DILocation(line: 373, column: 11, scope: !5579, inlinedAt: !6579)
!6720 = !DILocation(line: 373, column: 6, scope: !5422, inlinedAt: !6579)
!6721 = !DILocation(line: 373, column: 26, scope: !5579, inlinedAt: !6579)
!6722 = !DILocation(line: 374, column: 6, scope: !5584, inlinedAt: !6579)
!6723 = !DILocation(line: 374, column: 11, scope: !5584, inlinedAt: !6579)
!6724 = !DILocation(line: 374, column: 6, scope: !5422, inlinedAt: !6579)
!6725 = !DILocation(line: 374, column: 26, scope: !5584, inlinedAt: !6579)
!6726 = !DILocation(line: 375, column: 6, scope: !5589, inlinedAt: !6579)
!6727 = !DILocation(line: 375, column: 11, scope: !5589, inlinedAt: !6579)
!6728 = !DILocation(line: 375, column: 6, scope: !5422, inlinedAt: !6579)
!6729 = !DILocation(line: 375, column: 27, scope: !5589, inlinedAt: !6579)
!6730 = !DILocation(line: 376, column: 6, scope: !5594, inlinedAt: !6579)
!6731 = !DILocation(line: 376, column: 11, scope: !5594, inlinedAt: !6579)
!6732 = !DILocation(line: 376, column: 6, scope: !5422, inlinedAt: !6579)
!6733 = !DILocation(line: 376, column: 32, scope: !5594, inlinedAt: !6579)
!6734 = !DILocation(line: 377, column: 6, scope: !5599, inlinedAt: !6579)
!6735 = !DILocation(line: 377, column: 11, scope: !5599, inlinedAt: !6579)
!6736 = !DILocation(line: 377, column: 6, scope: !5422, inlinedAt: !6579)
!6737 = !DILocation(line: 377, column: 32, scope: !5599, inlinedAt: !6579)
!6738 = !DILocation(line: 378, column: 6, scope: !5604, inlinedAt: !6579)
!6739 = !DILocation(line: 378, column: 11, scope: !5604, inlinedAt: !6579)
!6740 = !DILocation(line: 378, column: 6, scope: !5422, inlinedAt: !6579)
!6741 = !DILocation(line: 378, column: 32, scope: !5604, inlinedAt: !6579)
!6742 = !DILocation(line: 379, column: 6, scope: !5609, inlinedAt: !6579)
!6743 = !DILocation(line: 379, column: 11, scope: !5609, inlinedAt: !6579)
!6744 = !DILocation(line: 379, column: 6, scope: !5422, inlinedAt: !6579)
!6745 = !DILocation(line: 379, column: 33, scope: !5609, inlinedAt: !6579)
!6746 = !DILocation(line: 380, column: 6, scope: !5614, inlinedAt: !6579)
!6747 = !DILocation(line: 380, column: 11, scope: !5614, inlinedAt: !6579)
!6748 = !DILocation(line: 380, column: 6, scope: !5422, inlinedAt: !6579)
!6749 = !DILocation(line: 380, column: 33, scope: !5614, inlinedAt: !6579)
!6750 = !DILocation(line: 381, column: 6, scope: !5619, inlinedAt: !6579)
!6751 = !DILocation(line: 381, column: 11, scope: !5619, inlinedAt: !6579)
!6752 = !DILocation(line: 381, column: 6, scope: !5422, inlinedAt: !6579)
!6753 = !DILocation(line: 381, column: 33, scope: !5619, inlinedAt: !6579)
!6754 = !DILocation(line: 382, column: 2, scope: !5624, inlinedAt: !6579)
!6755 = !DILocation(line: 382, column: 2, scope: !5628, inlinedAt: !6579)
!6756 = !DILocation(line: 382, column: 2, scope: !5629, inlinedAt: !6579)
!6757 = !DILocation(line: 386, column: 1, scope: !5422, inlinedAt: !6579)
!6758 = !DILocation(line: 547, column: 9, scope: !5405, inlinedAt: !6572)
!6759 = !DILocation(line: 549, column: 8, scope: !5635, inlinedAt: !6572)
!6760 = !DILocation(line: 549, column: 7, scope: !5405, inlinedAt: !6572)
!6761 = !DILocation(line: 550, column: 4, scope: !5635, inlinedAt: !6572)
!6762 = !DILocation(line: 553, column: 33, scope: !5405, inlinedAt: !6572)
!6763 = !DILocation(line: 325, column: 6, scope: !5640, inlinedAt: !6577)
!6764 = !DILocation(line: 325, column: 6, scope: !5416, inlinedAt: !6577)
!6765 = !DILocation(line: 326, column: 3, scope: !5640, inlinedAt: !6577)
!6766 = !DILocation(line: 332, column: 9, scope: !5416, inlinedAt: !6577)
!6767 = !DILocation(line: 332, column: 15, scope: !5416, inlinedAt: !6577)
!6768 = !DILocation(line: 332, column: 2, scope: !5416, inlinedAt: !6577)
!6769 = !DILocation(line: 336, column: 1, scope: !5416, inlinedAt: !6577)
!6770 = !DILocation(line: 553, column: 5, scope: !5405, inlinedAt: !6572)
!6771 = !DILocation(line: 553, column: 41, scope: !5405, inlinedAt: !6572)
!6772 = !DILocation(line: 554, column: 5, scope: !5405, inlinedAt: !6572)
!6773 = !DILocation(line: 554, column: 12, scope: !5405, inlinedAt: !6572)
!6774 = !DILocation(line: 448, column: 31, scope: !5400, inlinedAt: !6571)
!6775 = !DILocation(line: 448, column: 34, scope: !5400, inlinedAt: !6571)
!6776 = !DILocation(line: 448, column: 14, scope: !5400, inlinedAt: !6571)
!6777 = !DILocation(line: 450, column: 22, scope: !5400, inlinedAt: !6571)
!6778 = !DILocation(line: 450, column: 25, scope: !5400, inlinedAt: !6571)
!6779 = !DILocation(line: 450, column: 30, scope: !5400, inlinedAt: !6571)
!6780 = !DILocation(line: 450, column: 36, scope: !5400, inlinedAt: !6571)
!6781 = !DILocation(line: 450, column: 8, scope: !5400, inlinedAt: !6571)
!6782 = !DILocation(line: 450, column: 6, scope: !5400, inlinedAt: !6571)
!6783 = !DILocation(line: 451, column: 9, scope: !5400, inlinedAt: !6571)
!6784 = !DILocation(line: 552, column: 3, scope: !5405, inlinedAt: !6572)
!6785 = !DILocation(line: 557, column: 19, scope: !5407, inlinedAt: !6572)
!6786 = !DILocation(line: 557, column: 25, scope: !5407, inlinedAt: !6572)
!6787 = !DILocation(line: 557, column: 9, scope: !5407, inlinedAt: !6572)
!6788 = !DILocation(line: 557, column: 2, scope: !5407, inlinedAt: !6572)
!6789 = !DILocation(line: 558, column: 1, scope: !5407, inlinedAt: !6572)
!6790 = !DILocation(line: 1490, column: 7, scope: !6567)
!6791 = !DILocation(line: 1491, column: 7, scope: !6792)
!6792 = distinct !DILexicalBlock(scope: !6567, file: !3, line: 1491, column: 6)
!6793 = !DILocation(line: 1491, column: 6, scope: !6567)
!6794 = !DILocation(line: 1492, column: 10, scope: !6795)
!6795 = distinct !DILexicalBlock(scope: !6792, file: !3, line: 1491, column: 13)
!6796 = !DILocation(line: 1493, column: 3, scope: !6795)
!6797 = !DILocation(line: 1496, column: 23, scope: !6567)
!6798 = !DILocation(line: 1496, column: 29, scope: !6567)
!6799 = !DILocation(line: 1496, column: 2, scope: !6567)
!6800 = !DILocation(line: 1497, column: 10, scope: !6567)
!6801 = !DILocation(line: 1497, column: 16, scope: !6567)
!6802 = !DILocation(line: 1497, column: 2, scope: !6567)
!6803 = !DILocation(line: 1502, column: 2, scope: !6567)
!6804 = !DILocation(line: 1502, column: 14, scope: !6567)
!6805 = !DILocation(line: 1503, column: 21, scope: !6806)
!6806 = distinct !DILexicalBlock(scope: !6567, file: !3, line: 1502, column: 18)
!6807 = !DILocation(line: 1503, column: 26, scope: !6806)
!6808 = !DILocation(line: 1503, column: 7, scope: !6806)
!6809 = !DILocation(line: 1503, column: 5, scope: !6806)
!6810 = !DILocation(line: 1505, column: 7, scope: !6811)
!6811 = distinct !DILexicalBlock(scope: !6806, file: !3, line: 1505, column: 7)
!6812 = !DILocation(line: 1505, column: 9, scope: !6811)
!6813 = !DILocation(line: 1505, column: 7, scope: !6806)
!6814 = !DILocation(line: 1506, column: 24, scope: !6811)
!6815 = !DILocation(line: 1506, column: 31, scope: !6811)
!6816 = !DILocation(line: 1506, column: 37, scope: !6811)
!6817 = !DILocation(line: 1506, column: 4, scope: !6811)
!6818 = !DILocation(line: 1508, column: 7, scope: !6819)
!6819 = distinct !DILexicalBlock(scope: !6806, file: !3, line: 1508, column: 7)
!6820 = !DILocation(line: 1508, column: 13, scope: !6819)
!6821 = !DILocation(line: 1508, column: 22, scope: !6819)
!6822 = !DILocation(line: 1508, column: 33, scope: !6819)
!6823 = !DILocation(line: 1508, column: 7, scope: !6806)
!6824 = !DILocation(line: 1509, column: 16, scope: !6825)
!6825 = distinct !DILexicalBlock(scope: !6819, file: !3, line: 1508, column: 38)
!6826 = !DILocation(line: 1509, column: 4, scope: !6825)
!6827 = !DILocation(line: 1509, column: 9, scope: !6825)
!6828 = !DILocation(line: 1509, column: 14, scope: !6825)
!6829 = !DILocation(line: 1510, column: 21, scope: !6825)
!6830 = !DILocation(line: 1510, column: 4, scope: !6825)
!6831 = !DILocation(line: 1510, column: 9, scope: !6825)
!6832 = !DILocation(line: 1510, column: 19, scope: !6825)
!6833 = !DILocation(line: 1511, column: 4, scope: !6825)
!6834 = distinct !{!6834, !6803, !6835}
!6835 = !DILocation(line: 1513, column: 2, scope: !6567)
!6836 = !DILocation(line: 1516, column: 6, scope: !6837)
!6837 = distinct !DILexicalBlock(scope: !6567, file: !3, line: 1516, column: 6)
!6838 = !DILocation(line: 1516, column: 12, scope: !6837)
!6839 = !DILocation(line: 1516, column: 21, scope: !6837)
!6840 = !DILocation(line: 1516, column: 32, scope: !6837)
!6841 = !DILocation(line: 1516, column: 6, scope: !6567)
!6842 = !DILocation(line: 1517, column: 3, scope: !6843)
!6843 = distinct !DILexicalBlock(scope: !6837, file: !3, line: 1516, column: 38)
!6844 = !DILocation(line: 1519, column: 7, scope: !6845)
!6845 = distinct !DILexicalBlock(scope: !6843, file: !3, line: 1519, column: 7)
!6846 = !DILocation(line: 1519, column: 12, scope: !6845)
!6847 = !DILocation(line: 1519, column: 7, scope: !6843)
!6848 = !DILocation(line: 1520, column: 24, scope: !6849)
!6849 = distinct !DILexicalBlock(scope: !6845, file: !3, line: 1519, column: 18)
!6850 = !DILocation(line: 1520, column: 29, scope: !6849)
!6851 = !DILocation(line: 1520, column: 36, scope: !6849)
!6852 = !DILocation(line: 1520, column: 42, scope: !6849)
!6853 = !DILocation(line: 1520, column: 4, scope: !6849)
!6854 = !DILocation(line: 1521, column: 8, scope: !6855)
!6855 = distinct !DILexicalBlock(scope: !6849, file: !3, line: 1521, column: 8)
!6856 = !DILocation(line: 1521, column: 14, scope: !6855)
!6857 = !DILocation(line: 1521, column: 23, scope: !6855)
!6858 = !DILocation(line: 1521, column: 34, scope: !6855)
!6859 = !DILocation(line: 1521, column: 8, scope: !6849)
!6860 = !DILocation(line: 1522, column: 5, scope: !6855)
!6861 = !DILocation(line: 1523, column: 3, scope: !6849)
!6862 = !DILocation(line: 1524, column: 2, scope: !6843)
!6863 = !DILocation(line: 1527, column: 6, scope: !6864)
!6864 = distinct !DILexicalBlock(scope: !6567, file: !3, line: 1527, column: 6)
!6865 = !DILocation(line: 1527, column: 12, scope: !6864)
!6866 = !DILocation(line: 1527, column: 21, scope: !6864)
!6867 = !DILocation(line: 1527, column: 32, scope: !6864)
!6868 = !DILocation(line: 1527, column: 6, scope: !6567)
!6869 = !DILocation(line: 1528, column: 7, scope: !6870)
!6870 = distinct !DILexicalBlock(scope: !6871, file: !3, line: 1528, column: 7)
!6871 = distinct !DILexicalBlock(scope: !6864, file: !3, line: 1527, column: 38)
!6872 = !DILocation(line: 1528, column: 25, scope: !6870)
!6873 = !DILocation(line: 1528, column: 7, scope: !6871)
!6874 = !DILocation(line: 1529, column: 24, scope: !6875)
!6875 = distinct !DILexicalBlock(scope: !6870, file: !3, line: 1528, column: 41)
!6876 = !DILocation(line: 1529, column: 39, scope: !6875)
!6877 = !DILocation(line: 1529, column: 45, scope: !6875)
!6878 = !DILocation(line: 1529, column: 4, scope: !6875)
!6879 = !DILocation(line: 1530, column: 8, scope: !6880)
!6880 = distinct !DILexicalBlock(scope: !6875, file: !3, line: 1530, column: 8)
!6881 = !DILocation(line: 1530, column: 14, scope: !6880)
!6882 = !DILocation(line: 1530, column: 23, scope: !6880)
!6883 = !DILocation(line: 1530, column: 34, scope: !6880)
!6884 = !DILocation(line: 1530, column: 8, scope: !6875)
!6885 = !DILocation(line: 1531, column: 12, scope: !6886)
!6886 = distinct !DILexicalBlock(scope: !6880, file: !3, line: 1530, column: 39)
!6887 = !DILocation(line: 1531, column: 18, scope: !6886)
!6888 = !DILocation(line: 1531, column: 32, scope: !6886)
!6889 = !DILocation(line: 1531, column: 5, scope: !6886)
!6890 = !DILocation(line: 1532, column: 17, scope: !6886)
!6891 = !DILocation(line: 1532, column: 5, scope: !6886)
!6892 = !DILocation(line: 1532, column: 10, scope: !6886)
!6893 = !DILocation(line: 1532, column: 15, scope: !6886)
!6894 = !DILocation(line: 1533, column: 22, scope: !6886)
!6895 = !DILocation(line: 1533, column: 5, scope: !6886)
!6896 = !DILocation(line: 1533, column: 10, scope: !6886)
!6897 = !DILocation(line: 1533, column: 20, scope: !6886)
!6898 = !DILocation(line: 1534, column: 5, scope: !6886)
!6899 = !DILocation(line: 1535, column: 4, scope: !6886)
!6900 = !DILocation(line: 1536, column: 3, scope: !6875)
!6901 = !DILocation(line: 1537, column: 2, scope: !6871)
!6902 = !DILocation(line: 1540, column: 6, scope: !6903)
!6903 = distinct !DILexicalBlock(scope: !6567, file: !3, line: 1540, column: 6)
!6904 = !DILocation(line: 1540, column: 12, scope: !6903)
!6905 = !DILocation(line: 1540, column: 21, scope: !6903)
!6906 = !DILocation(line: 1540, column: 32, scope: !6903)
!6907 = !DILocation(line: 1540, column: 6, scope: !6567)
!6908 = !DILocation(line: 1542, column: 10, scope: !6909)
!6909 = distinct !DILexicalBlock(scope: !6910, file: !3, line: 1542, column: 3)
!6910 = distinct !DILexicalBlock(scope: !6903, file: !3, line: 1540, column: 37)
!6911 = !DILocation(line: 1542, column: 8, scope: !6909)
!6912 = !DILocation(line: 1542, column: 15, scope: !6913)
!6913 = distinct !DILexicalBlock(scope: !6909, file: !3, line: 1542, column: 3)
!6914 = !DILocation(line: 1542, column: 19, scope: !6913)
!6915 = !DILocation(line: 1542, column: 25, scope: !6913)
!6916 = !DILocation(line: 1542, column: 34, scope: !6913)
!6917 = !DILocation(line: 1542, column: 17, scope: !6913)
!6918 = !DILocation(line: 1542, column: 3, scope: !6909)
!6919 = !DILocation(line: 1543, column: 27, scope: !6920)
!6920 = distinct !DILexicalBlock(scope: !6921, file: !3, line: 1543, column: 8)
!6921 = distinct !DILexicalBlock(scope: !6913, file: !3, line: 1542, column: 51)
!6922 = !DILocation(line: 1543, column: 33, scope: !6920)
!6923 = !DILocation(line: 1543, column: 42, scope: !6920)
!6924 = !DILocation(line: 1543, column: 49, scope: !6920)
!6925 = !DILocation(line: 1543, column: 53, scope: !6920)
!6926 = !DILocation(line: 1543, column: 8, scope: !6920)
!6927 = !DILocation(line: 1543, column: 8, scope: !6921)
!6928 = !DILocation(line: 1544, column: 23, scope: !6920)
!6929 = !DILocation(line: 1544, column: 29, scope: !6920)
!6930 = !DILocation(line: 1544, column: 38, scope: !6920)
!6931 = !DILocation(line: 1544, column: 45, scope: !6920)
!6932 = !DILocation(line: 1545, column: 7, scope: !6920)
!6933 = !DILocation(line: 1545, column: 13, scope: !6920)
!6934 = !DILocation(line: 1544, column: 5, scope: !6920)
!6935 = !DILocation(line: 1547, column: 5, scope: !6920)
!6936 = !DILocation(line: 1547, column: 11, scope: !6920)
!6937 = !DILocation(line: 1547, column: 20, scope: !6920)
!6938 = !DILocation(line: 1547, column: 25, scope: !6920)
!6939 = !DILocation(line: 1548, column: 3, scope: !6921)
!6940 = !DILocation(line: 1542, column: 47, scope: !6913)
!6941 = !DILocation(line: 1542, column: 3, scope: !6913)
!6942 = distinct !{!6942, !6918, !6943}
!6943 = !DILocation(line: 1548, column: 3, scope: !6909)
!6944 = !DILocation(line: 1550, column: 41, scope: !6910)
!6945 = !DILocation(line: 1550, column: 47, scope: !6910)
!6946 = !DILocation(line: 1551, column: 13, scope: !6910)
!6947 = !DILocation(line: 1551, column: 19, scope: !6910)
!6948 = !DILocation(line: 1550, column: 19, scope: !6910)
!6949 = !DILocation(line: 1550, column: 17, scope: !6910)
!6950 = !DILocation(line: 1552, column: 2, scope: !6910)
!6951 = !DILocation(line: 1555, column: 6, scope: !6952)
!6952 = distinct !DILexicalBlock(scope: !6567, file: !3, line: 1555, column: 6)
!6953 = !DILocation(line: 1555, column: 20, scope: !6952)
!6954 = !DILocation(line: 1555, column: 6, scope: !6567)
!6955 = !DILocalVariable(name: "fb_vmode", scope: !6956, file: !3, line: 1557, type: !4368)
!6956 = distinct !DILexicalBlock(scope: !6952, file: !3, line: 1555, column: 29)
!6957 = !DILocation(line: 1557, column: 23, scope: !6956)
!6958 = !DILocation(line: 1564, column: 10, scope: !6959)
!6959 = distinct !DILexicalBlock(scope: !6956, file: !3, line: 1564, column: 3)
!6960 = !DILocation(line: 1564, column: 8, scope: !6959)
!6961 = !DILocation(line: 1564, column: 15, scope: !6962)
!6962 = distinct !DILexicalBlock(scope: !6959, file: !3, line: 1564, column: 3)
!6963 = !DILocation(line: 1564, column: 17, scope: !6962)
!6964 = !DILocation(line: 1564, column: 3, scope: !6959)
!6965 = !DILocation(line: 1566, column: 19, scope: !6966)
!6966 = distinct !DILexicalBlock(scope: !6967, file: !3, line: 1565, column: 8)
!6967 = distinct !DILexicalBlock(scope: !6962, file: !3, line: 1564, column: 42)
!6968 = !DILocation(line: 1566, column: 8, scope: !6966)
!6969 = !DILocation(line: 1566, column: 23, scope: !6966)
!6970 = !DILocation(line: 1565, column: 8, scope: !6966)
!6971 = !DILocation(line: 1565, column: 8, scope: !6967)
!6972 = !DILocation(line: 1567, column: 34, scope: !6966)
!6973 = !DILocation(line: 1567, column: 23, scope: !6966)
!6974 = !DILocation(line: 1568, column: 9, scope: !6966)
!6975 = !DILocation(line: 1568, column: 15, scope: !6966)
!6976 = !DILocation(line: 1567, column: 5, scope: !6966)
!6977 = !DILocation(line: 1569, column: 3, scope: !6967)
!6978 = !DILocation(line: 1564, column: 38, scope: !6962)
!6979 = !DILocation(line: 1564, column: 3, scope: !6962)
!6980 = distinct !{!6980, !6964, !6981}
!6981 = !DILocation(line: 1569, column: 3, scope: !6959)
!6982 = !DILocation(line: 1574, column: 12, scope: !6956)
!6983 = !DILocation(line: 1574, column: 17, scope: !6956)
!6984 = !DILocation(line: 1575, column: 12, scope: !6956)
!6985 = !DILocation(line: 1575, column: 17, scope: !6956)
!6986 = !DILocation(line: 1576, column: 12, scope: !6956)
!6987 = !DILocation(line: 1576, column: 20, scope: !6956)
!6988 = !DILocation(line: 1578, column: 13, scope: !6956)
!6989 = !DILocation(line: 1578, column: 19, scope: !6956)
!6990 = !DILocation(line: 1577, column: 19, scope: !6956)
!6991 = !DILocation(line: 1577, column: 17, scope: !6956)
!6992 = !DILocation(line: 1579, column: 2, scope: !6956)
!6993 = !DILocation(line: 1582, column: 7, scope: !6994)
!6994 = distinct !DILexicalBlock(scope: !6567, file: !3, line: 1582, column: 6)
!6995 = !DILocation(line: 1582, column: 21, scope: !6994)
!6996 = !DILocation(line: 1582, column: 30, scope: !6994)
!6997 = !DILocation(line: 1582, column: 34, scope: !6994)
!6998 = !DILocation(line: 1582, column: 39, scope: !6994)
!6999 = !DILocation(line: 1582, column: 48, scope: !6994)
!7000 = !DILocation(line: 1582, column: 6, scope: !6567)
!7001 = !DILocation(line: 1584, column: 24, scope: !7002)
!7002 = distinct !DILexicalBlock(scope: !6994, file: !3, line: 1582, column: 55)
!7003 = !DILocation(line: 1584, column: 30, scope: !7002)
!7004 = !DILocation(line: 1584, column: 35, scope: !7002)
!7005 = !DILocation(line: 1584, column: 3, scope: !7002)
!7006 = !DILocation(line: 1585, column: 25, scope: !7002)
!7007 = !DILocation(line: 1585, column: 31, scope: !7002)
!7008 = !DILocation(line: 1585, column: 3, scope: !7002)
!7009 = !DILocation(line: 1588, column: 11, scope: !7002)
!7010 = !DILocation(line: 1588, column: 17, scope: !7002)
!7011 = !DILocation(line: 1588, column: 3, scope: !7002)
!7012 = !DILocation(line: 1589, column: 27, scope: !7002)
!7013 = !DILocation(line: 1589, column: 33, scope: !7002)
!7014 = !DILocation(line: 1589, column: 37, scope: !7002)
!7015 = !DILocation(line: 1590, column: 5, scope: !7002)
!7016 = !DILocation(line: 1590, column: 11, scope: !7002)
!7017 = !DILocation(line: 1590, column: 15, scope: !7002)
!7018 = !DILocation(line: 1590, column: 30, scope: !7002)
!7019 = !DILocation(line: 1589, column: 42, scope: !7002)
!7020 = !DILocation(line: 1589, column: 3, scope: !7002)
!7021 = !DILocation(line: 1589, column: 9, scope: !7002)
!7022 = !DILocation(line: 1589, column: 13, scope: !7002)
!7023 = !DILocation(line: 1589, column: 25, scope: !7002)
!7024 = !DILocation(line: 1592, column: 36, scope: !7002)
!7025 = !DILocation(line: 1592, column: 41, scope: !7002)
!7026 = !DILocation(line: 1592, column: 12, scope: !7002)
!7027 = !DILocation(line: 1592, column: 10, scope: !7002)
!7028 = !DILocation(line: 1594, column: 2, scope: !7002)
!7029 = !DILocation(line: 1595, column: 10, scope: !6994)
!7030 = !DILocation(line: 1582, column: 52, scope: !6994)
!7031 = !DILabel(scope: !6567, name: "error", file: !3, line: 1597)
!7032 = !DILocation(line: 1597, column: 1, scope: !6567)
!7033 = !DILocation(line: 1598, column: 6, scope: !7034)
!7034 = distinct !DILexicalBlock(scope: !6567, file: !3, line: 1598, column: 6)
!7035 = !DILocation(line: 1598, column: 11, scope: !7034)
!7036 = !DILocation(line: 1598, column: 15, scope: !7034)
!7037 = !DILocation(line: 1598, column: 20, scope: !7034)
!7038 = !DILocation(line: 1598, column: 28, scope: !7034)
!7039 = !DILocation(line: 1598, column: 25, scope: !7034)
!7040 = !DILocation(line: 1598, column: 6, scope: !6567)
!7041 = !DILocation(line: 1599, column: 9, scope: !7034)
!7042 = !DILocation(line: 1599, column: 3, scope: !7034)
!7043 = !DILocation(line: 1601, column: 6, scope: !7044)
!7044 = distinct !DILexicalBlock(scope: !6567, file: !3, line: 1601, column: 6)
!7045 = !DILocation(line: 1601, column: 12, scope: !7044)
!7046 = !DILocation(line: 1601, column: 6, scope: !6567)
!7047 = !DILocation(line: 1602, column: 17, scope: !7044)
!7048 = !DILocation(line: 1602, column: 23, scope: !7044)
!7049 = !DILocation(line: 1602, column: 3, scope: !7044)
!7050 = !DILocation(line: 1604, column: 9, scope: !6567)
!7051 = !DILocation(line: 1604, column: 2, scope: !6567)
!7052 = distinct !DISubprogram(name: "ufx_reg_set_bits", scope: !3, file: !3, line: 212, type: !7053, scopeLine: 213, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !284)
!7053 = !DISubroutineType(types: !7054)
!7054 = !{!217, !4278, !224, !224}
!7055 = !DILocalVariable(name: "dev", arg: 1, scope: !7052, file: !3, line: 212, type: !4278)
!7056 = !DILocation(line: 212, column: 46, scope: !7052)
!7057 = !DILocalVariable(name: "index", arg: 2, scope: !7052, file: !3, line: 212, type: !224)
!7058 = !DILocation(line: 212, column: 55, scope: !7052)
!7059 = !DILocalVariable(name: "bits", arg: 3, scope: !7052, file: !3, line: 212, type: !224)
!7060 = !DILocation(line: 212, column: 66, scope: !7052)
!7061 = !DILocation(line: 214, column: 36, scope: !7052)
!7062 = !DILocation(line: 214, column: 41, scope: !7052)
!7063 = !DILocation(line: 214, column: 51, scope: !7052)
!7064 = !DILocation(line: 214, column: 9, scope: !7052)
!7065 = !DILocation(line: 214, column: 2, scope: !7052)
!7066 = distinct !DISubprogram(name: "ufx_ops_check_var", scope: !3, file: !3, line: 1217, type: !4539, scopeLine: 1219, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !284)
!7067 = !DILocalVariable(name: "var", arg: 1, scope: !7066, file: !3, line: 1217, type: !4541)
!7068 = !DILocation(line: 1217, column: 56, scope: !7066)
!7069 = !DILocalVariable(name: "info", arg: 2, scope: !7066, file: !3, line: 1218, type: !4284)
!7070 = !DILocation(line: 1218, column: 21, scope: !7066)
!7071 = !DILocalVariable(name: "mode", scope: !7066, file: !3, line: 1220, type: !4368)
!7072 = !DILocation(line: 1220, column: 22, scope: !7066)
!7073 = !DILocation(line: 1223, column: 7, scope: !7074)
!7074 = distinct !DILexicalBlock(scope: !7066, file: !3, line: 1223, column: 6)
!7075 = !DILocation(line: 1223, column: 12, scope: !7074)
!7076 = !DILocation(line: 1223, column: 19, scope: !7074)
!7077 = !DILocation(line: 1223, column: 24, scope: !7074)
!7078 = !DILocation(line: 1223, column: 17, scope: !7074)
!7079 = !DILocation(line: 1223, column: 29, scope: !7074)
!7080 = !DILocation(line: 1223, column: 36, scope: !7074)
!7081 = !DILocation(line: 1223, column: 42, scope: !7074)
!7082 = !DILocation(line: 1223, column: 46, scope: !7074)
!7083 = !DILocation(line: 1223, column: 34, scope: !7074)
!7084 = !DILocation(line: 1223, column: 6, scope: !7066)
!7085 = !DILocation(line: 1224, column: 3, scope: !7074)
!7086 = !DILocation(line: 1227, column: 23, scope: !7066)
!7087 = !DILocation(line: 1227, column: 2, scope: !7066)
!7088 = !DILocation(line: 1229, column: 29, scope: !7066)
!7089 = !DILocation(line: 1229, column: 2, scope: !7066)
!7090 = !DILocation(line: 1231, column: 32, scope: !7091)
!7091 = distinct !DILexicalBlock(scope: !7066, file: !3, line: 1231, column: 6)
!7092 = !DILocation(line: 1231, column: 7, scope: !7091)
!7093 = !DILocation(line: 1231, column: 6, scope: !7066)
!7094 = !DILocation(line: 1232, column: 3, scope: !7091)
!7095 = !DILocation(line: 1234, column: 2, scope: !7066)
!7096 = !DILocation(line: 1235, column: 1, scope: !7066)
!7097 = distinct !DISubprogram(name: "ufx_ops_set_par", scope: !3, file: !3, line: 1237, type: !4544, scopeLine: 1238, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !284)
!7098 = !DILocalVariable(name: "info", arg: 1, scope: !7097, file: !3, line: 1237, type: !4284)
!7099 = !DILocation(line: 1237, column: 44, scope: !7097)
!7100 = !DILocalVariable(name: "dev", scope: !7097, file: !3, line: 1239, type: !4278)
!7101 = !DILocation(line: 1239, column: 19, scope: !7097)
!7102 = !DILocation(line: 1239, column: 25, scope: !7097)
!7103 = !DILocation(line: 1239, column: 31, scope: !7097)
!7104 = !DILocalVariable(name: "result", scope: !7097, file: !3, line: 1240, type: !217)
!7105 = !DILocation(line: 1240, column: 6, scope: !7097)
!7106 = !DILocalVariable(name: "pix_framebuffer", scope: !7097, file: !3, line: 1241, type: !4846)
!7107 = !DILocation(line: 1241, column: 7, scope: !7097)
!7108 = !DILocalVariable(name: "i", scope: !7097, file: !3, line: 1242, type: !217)
!7109 = !DILocation(line: 1242, column: 6, scope: !7097)
!7110 = !DILocation(line: 1244, column: 2, scope: !7111)
!7111 = distinct !DILexicalBlock(scope: !7112, file: !3, line: 1244, column: 2)
!7112 = distinct !DILexicalBlock(scope: !7097, file: !3, line: 1244, column: 2)
!7113 = !DILocation(line: 1244, column: 2, scope: !7112)
!7114 = !DILocation(line: 1245, column: 28, scope: !7097)
!7115 = !DILocation(line: 1245, column: 34, scope: !7097)
!7116 = !DILocation(line: 1245, column: 40, scope: !7097)
!7117 = !DILocation(line: 1245, column: 11, scope: !7097)
!7118 = !DILocation(line: 1245, column: 9, scope: !7097)
!7119 = !DILocation(line: 1247, column: 7, scope: !7120)
!7120 = distinct !DILexicalBlock(scope: !7097, file: !3, line: 1247, column: 6)
!7121 = !DILocation(line: 1247, column: 14, scope: !7120)
!7122 = !DILocation(line: 1247, column: 20, scope: !7120)
!7123 = !DILocation(line: 1247, column: 24, scope: !7120)
!7124 = !DILocation(line: 1247, column: 29, scope: !7120)
!7125 = !DILocation(line: 1247, column: 38, scope: !7120)
!7126 = !DILocation(line: 1247, column: 6, scope: !7097)
!7127 = !DILocation(line: 1249, column: 29, scope: !7128)
!7128 = distinct !DILexicalBlock(scope: !7120, file: !3, line: 1247, column: 45)
!7129 = !DILocation(line: 1249, column: 35, scope: !7128)
!7130 = !DILocation(line: 1249, column: 21, scope: !7128)
!7131 = !DILocation(line: 1249, column: 19, scope: !7128)
!7132 = !DILocation(line: 1250, column: 10, scope: !7133)
!7133 = distinct !DILexicalBlock(scope: !7128, file: !3, line: 1250, column: 3)
!7134 = !DILocation(line: 1250, column: 8, scope: !7133)
!7135 = !DILocation(line: 1250, column: 15, scope: !7136)
!7136 = distinct !DILexicalBlock(scope: !7133, file: !3, line: 1250, column: 3)
!7137 = !DILocation(line: 1250, column: 19, scope: !7136)
!7138 = !DILocation(line: 1250, column: 25, scope: !7136)
!7139 = !DILocation(line: 1250, column: 29, scope: !7136)
!7140 = !DILocation(line: 1250, column: 38, scope: !7136)
!7141 = !DILocation(line: 1250, column: 17, scope: !7136)
!7142 = !DILocation(line: 1250, column: 3, scope: !7133)
!7143 = !DILocation(line: 1251, column: 4, scope: !7136)
!7144 = !DILocation(line: 1251, column: 20, scope: !7136)
!7145 = !DILocation(line: 1251, column: 23, scope: !7136)
!7146 = !DILocation(line: 1250, column: 44, scope: !7136)
!7147 = !DILocation(line: 1250, column: 3, scope: !7136)
!7148 = distinct !{!7148, !7142, !7149}
!7149 = !DILocation(line: 1251, column: 25, scope: !7133)
!7150 = !DILocation(line: 1253, column: 21, scope: !7128)
!7151 = !DILocation(line: 1253, column: 32, scope: !7128)
!7152 = !DILocation(line: 1253, column: 38, scope: !7128)
!7153 = !DILocation(line: 1253, column: 42, scope: !7128)
!7154 = !DILocation(line: 1253, column: 48, scope: !7128)
!7155 = !DILocation(line: 1253, column: 54, scope: !7128)
!7156 = !DILocation(line: 1253, column: 58, scope: !7128)
!7157 = !DILocation(line: 1253, column: 3, scope: !7128)
!7158 = !DILocation(line: 1254, column: 2, scope: !7128)
!7159 = !DILocation(line: 1257, column: 6, scope: !7160)
!7160 = distinct !DILexicalBlock(scope: !7097, file: !3, line: 1257, column: 6)
!7161 = !DILocation(line: 1257, column: 12, scope: !7160)
!7162 = !DILocation(line: 1257, column: 6, scope: !7097)
!7163 = !DILocation(line: 1258, column: 3, scope: !7160)
!7164 = !DILocation(line: 1258, column: 9, scope: !7160)
!7165 = !DILocation(line: 1258, column: 18, scope: !7160)
!7166 = !DILocation(line: 1258, column: 24, scope: !7160)
!7167 = !DILocation(line: 1260, column: 9, scope: !7097)
!7168 = !DILocation(line: 1260, column: 2, scope: !7097)
!7169 = distinct !DISubprogram(name: "kref_put", scope: !1530, file: !1530, line: 62, type: !7170, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !284)
!7170 = !DISubroutineType(types: !7171)
!7171 = !{!217, !5671, !7172}
!7172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5669, size: 64)
!7173 = !DILocalVariable(name: "kref", arg: 1, scope: !7169, file: !1530, line: 62, type: !5671)
!7174 = !DILocation(line: 62, column: 41, scope: !7169)
!7175 = !DILocalVariable(name: "release", arg: 2, scope: !7169, file: !1530, line: 62, type: !7172)
!7176 = !DILocation(line: 62, column: 54, scope: !7169)
!7177 = !DILocation(line: 64, column: 29, scope: !7178)
!7178 = distinct !DILexicalBlock(scope: !7169, file: !1530, line: 64, column: 6)
!7179 = !DILocation(line: 64, column: 35, scope: !7178)
!7180 = !DILocation(line: 64, column: 6, scope: !7178)
!7181 = !DILocation(line: 64, column: 6, scope: !7169)
!7182 = !DILocation(line: 65, column: 3, scope: !7183)
!7183 = distinct !DILexicalBlock(scope: !7178, file: !1530, line: 64, column: 46)
!7184 = !DILocation(line: 65, column: 11, scope: !7183)
!7185 = !DILocation(line: 66, column: 3, scope: !7183)
!7186 = !DILocation(line: 68, column: 2, scope: !7169)
!7187 = !DILocation(line: 69, column: 1, scope: !7169)
!7188 = distinct !DISubprogram(name: "ufx_free", scope: !3, file: !3, line: 1107, type: !5669, scopeLine: 1108, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !284)
!7189 = !DILocalVariable(name: "kref", arg: 1, scope: !7188, file: !3, line: 1107, type: !5671)
!7190 = !DILocation(line: 1107, column: 35, scope: !7188)
!7191 = !DILocalVariable(name: "dev", scope: !7188, file: !3, line: 1109, type: !4278)
!7192 = !DILocation(line: 1109, column: 19, scope: !7188)
!7193 = !DILocalVariable(name: "__mptr", scope: !7194, file: !3, line: 1109, type: !211)
!7194 = distinct !DILexicalBlock(scope: !7188, file: !3, line: 1109, column: 25)
!7195 = !DILocation(line: 1109, column: 25, scope: !7194)
!7196 = !DILocation(line: 1109, column: 25, scope: !7197)
!7197 = distinct !DILexicalBlock(scope: !7194, file: !3, line: 1109, column: 25)
!7198 = !DILocation(line: 1112, column: 6, scope: !7199)
!7199 = distinct !DILexicalBlock(scope: !7188, file: !3, line: 1112, column: 6)
!7200 = !DILocation(line: 1112, column: 11, scope: !7199)
!7201 = !DILocation(line: 1112, column: 16, scope: !7199)
!7202 = !DILocation(line: 1112, column: 22, scope: !7199)
!7203 = !DILocation(line: 1112, column: 6, scope: !7188)
!7204 = !DILocation(line: 1113, column: 21, scope: !7199)
!7205 = !DILocation(line: 1113, column: 3, scope: !7199)
!7206 = !DILocation(line: 1115, column: 2, scope: !7207)
!7207 = distinct !DILexicalBlock(scope: !7208, file: !3, line: 1115, column: 2)
!7208 = distinct !DILexicalBlock(scope: !7188, file: !3, line: 1115, column: 2)
!7209 = !DILocation(line: 1115, column: 2, scope: !7208)
!7210 = !DILocation(line: 1117, column: 8, scope: !7188)
!7211 = !DILocation(line: 1117, column: 2, scope: !7188)
!7212 = !DILocation(line: 1118, column: 1, scope: !7188)
!7213 = distinct !DISubprogram(name: "get_order", scope: !7214, file: !7214, line: 29, type: !7215, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !284)
!7214 = !DIFile(filename: "./include/asm-generic/getorder.h", directory: "/home/lizy2001/genbc/linux")
!7215 = !DISubroutineType(types: !7216)
!7216 = !{!217, !212}
!7217 = !DILocalVariable(name: "x", arg: 1, scope: !7218, file: !7219, line: 366, type: !453)
!7218 = distinct !DISubprogram(name: "fls64", scope: !7219, file: !7219, line: 366, type: !7220, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !284)
!7219 = !DIFile(filename: "./arch/x86/include/asm/bitops.h", directory: "/home/lizy2001/genbc/linux")
!7220 = !DISubroutineType(types: !7221)
!7221 = !{!217, !453}
!7222 = !DILocation(line: 366, column: 40, scope: !7218, inlinedAt: !7223)
!7223 = distinct !DILocation(line: 46, column: 9, scope: !7213)
!7224 = !DILocalVariable(name: "bitpos", scope: !7218, file: !7219, line: 368, type: !217)
!7225 = !DILocation(line: 368, column: 6, scope: !7218, inlinedAt: !7223)
!7226 = !DILocalVariable(name: "size", arg: 1, scope: !7213, file: !7214, line: 29, type: !212)
!7227 = !DILocation(line: 29, column: 63, scope: !7213)
!7228 = !DILocation(line: 31, column: 27, scope: !7229)
!7229 = distinct !DILexicalBlock(scope: !7213, file: !7214, line: 31, column: 6)
!7230 = !DILocation(line: 31, column: 6, scope: !7229)
!7231 = !DILocation(line: 31, column: 6, scope: !7213)
!7232 = !DILocation(line: 32, column: 8, scope: !7233)
!7233 = distinct !DILexicalBlock(scope: !7234, file: !7214, line: 32, column: 7)
!7234 = distinct !DILexicalBlock(scope: !7229, file: !7214, line: 31, column: 34)
!7235 = !DILocation(line: 32, column: 7, scope: !7234)
!7236 = !DILocation(line: 33, column: 4, scope: !7233)
!7237 = !DILocation(line: 35, column: 7, scope: !7238)
!7238 = distinct !DILexicalBlock(scope: !7234, file: !7214, line: 35, column: 7)
!7239 = !DILocation(line: 35, column: 12, scope: !7238)
!7240 = !DILocation(line: 35, column: 7, scope: !7234)
!7241 = !DILocation(line: 36, column: 4, scope: !7238)
!7242 = !DILocation(line: 38, column: 10, scope: !7234)
!7243 = !DILocation(line: 38, column: 28, scope: !7234)
!7244 = !DILocation(line: 38, column: 41, scope: !7234)
!7245 = !DILocation(line: 38, column: 3, scope: !7234)
!7246 = !DILocation(line: 41, column: 6, scope: !7213)
!7247 = !DILocation(line: 42, column: 7, scope: !7213)
!7248 = !DILocation(line: 46, column: 15, scope: !7213)
!7249 = !DILocation(line: 374, column: 2, scope: !7218, inlinedAt: !7223)
!7250 = !DILocation(line: 376, column: 14, scope: !7218, inlinedAt: !7223)
!7251 = !{i32 350905}
!7252 = !DILocation(line: 377, column: 9, scope: !7218, inlinedAt: !7223)
!7253 = !DILocation(line: 377, column: 16, scope: !7218, inlinedAt: !7223)
!7254 = !DILocation(line: 46, column: 2, scope: !7213)
!7255 = !DILocation(line: 48, column: 1, scope: !7213)
!7256 = distinct !DISubprogram(name: "__ilog2_u64", scope: !7257, file: !7257, line: 30, type: !7258, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !284)
!7257 = !DIFile(filename: "./include/linux/log2.h", directory: "/home/lizy2001/genbc/linux")
!7258 = !DISubroutineType(types: !7259)
!7259 = !{!217, !452}
!7260 = !DILocation(line: 366, column: 40, scope: !7218, inlinedAt: !7261)
!7261 = distinct !DILocation(line: 32, column: 9, scope: !7256)
!7262 = !DILocation(line: 368, column: 6, scope: !7218, inlinedAt: !7261)
!7263 = !DILocalVariable(name: "n", arg: 1, scope: !7256, file: !7257, line: 30, type: !452)
!7264 = !DILocation(line: 30, column: 21, scope: !7256)
!7265 = !DILocation(line: 32, column: 15, scope: !7256)
!7266 = !DILocation(line: 374, column: 2, scope: !7218, inlinedAt: !7261)
!7267 = !DILocation(line: 376, column: 14, scope: !7218, inlinedAt: !7261)
!7268 = !DILocation(line: 377, column: 9, scope: !7218, inlinedAt: !7261)
!7269 = !DILocation(line: 377, column: 16, scope: !7218, inlinedAt: !7261)
!7270 = !DILocation(line: 32, column: 18, scope: !7256)
!7271 = !DILocation(line: 32, column: 2, scope: !7256)
!7272 = distinct !DISubprogram(name: "kasan_kmalloc", scope: !7273, file: !7273, line: 137, type: !7274, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !284)
!7273 = !DIFile(filename: "./include/linux/kasan.h", directory: "/home/lizy2001/genbc/linux")
!7274 = !DISubroutineType(types: !7275)
!7275 = !{!211, !966, !2210, !357, !209}
!7276 = !DILocalVariable(name: "s", arg: 1, scope: !7272, file: !7273, line: 137, type: !966)
!7277 = !DILocation(line: 137, column: 54, scope: !7272)
!7278 = !DILocalVariable(name: "object", arg: 2, scope: !7272, file: !7273, line: 137, type: !2210)
!7279 = !DILocation(line: 137, column: 69, scope: !7272)
!7280 = !DILocalVariable(name: "size", arg: 3, scope: !7272, file: !7273, line: 138, type: !357)
!7281 = !DILocation(line: 138, column: 12, scope: !7272)
!7282 = !DILocalVariable(name: "flags", arg: 4, scope: !7272, file: !7273, line: 138, type: !209)
!7283 = !DILocation(line: 138, column: 24, scope: !7272)
!7284 = !DILocation(line: 140, column: 17, scope: !7272)
!7285 = !DILocation(line: 140, column: 2, scope: !7272)
!7286 = distinct !DISubprogram(name: "refcount_set", scope: !193, file: !193, line: 134, type: !7287, scopeLine: 135, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !284)
!7287 = !DISubroutineType(types: !7288)
!7288 = !{null, !7289, !217}
!7289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1261, size: 64)
!7290 = !DILocation(line: 39, column: 55, scope: !5047, inlinedAt: !7291)
!7291 = distinct !DILocation(line: 46, column: 2, scope: !5054, inlinedAt: !7292)
!7292 = distinct !DILocation(line: 136, column: 2, scope: !7286)
!7293 = !DILocation(line: 39, column: 62, scope: !5047, inlinedAt: !7291)
!7294 = !DILocation(line: 84, column: 74, scope: !5060, inlinedAt: !7295)
!7295 = distinct !DILocation(line: 45, column: 2, scope: !5054, inlinedAt: !7292)
!7296 = !DILocation(line: 84, column: 84, scope: !5060, inlinedAt: !7295)
!7297 = !DILocation(line: 43, column: 22, scope: !5054, inlinedAt: !7292)
!7298 = !DILocation(line: 43, column: 29, scope: !5054, inlinedAt: !7292)
!7299 = !DILocalVariable(name: "r", arg: 1, scope: !7286, file: !193, line: 134, type: !7289)
!7300 = !DILocation(line: 134, column: 45, scope: !7286)
!7301 = !DILocalVariable(name: "n", arg: 2, scope: !7286, file: !193, line: 134, type: !217)
!7302 = !DILocation(line: 134, column: 52, scope: !7286)
!7303 = !DILocation(line: 136, column: 14, scope: !7286)
!7304 = !DILocation(line: 136, column: 17, scope: !7286)
!7305 = !DILocation(line: 136, column: 23, scope: !7286)
!7306 = !DILocation(line: 45, column: 26, scope: !5054, inlinedAt: !7292)
!7307 = !DILocation(line: 86, column: 20, scope: !5060, inlinedAt: !7295)
!7308 = !DILocation(line: 86, column: 23, scope: !5060, inlinedAt: !7295)
!7309 = !DILocation(line: 86, column: 2, scope: !5060, inlinedAt: !7295)
!7310 = !DILocation(line: 87, column: 2, scope: !5060, inlinedAt: !7295)
!7311 = !DILocation(line: 46, column: 18, scope: !5054, inlinedAt: !7292)
!7312 = !DILocation(line: 46, column: 21, scope: !5054, inlinedAt: !7292)
!7313 = !DILocation(line: 41, column: 2, scope: !5271, inlinedAt: !7291)
!7314 = !DILocation(line: 137, column: 1, scope: !7286)
!7315 = distinct !DISubprogram(name: "refcount_inc", scope: !193, file: !193, line: 265, type: !7316, scopeLine: 266, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !284)
!7316 = !DISubroutineType(types: !7317)
!7317 = !{null, !7289}
!7318 = !DILocalVariable(name: "r", arg: 1, scope: !7315, file: !193, line: 265, type: !7289)
!7319 = !DILocation(line: 265, column: 45, scope: !7315)
!7320 = !DILocation(line: 267, column: 17, scope: !7315)
!7321 = !DILocation(line: 267, column: 2, scope: !7315)
!7322 = !DILocation(line: 268, column: 1, scope: !7315)
!7323 = distinct !DISubprogram(name: "__refcount_inc", scope: !193, file: !193, line: 248, type: !7324, scopeLine: 249, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !284)
!7324 = !DISubroutineType(types: !7325)
!7325 = !{null, !7289, !736}
!7326 = !DILocalVariable(name: "r", arg: 1, scope: !7323, file: !193, line: 248, type: !7289)
!7327 = !DILocation(line: 248, column: 47, scope: !7323)
!7328 = !DILocalVariable(name: "oldp", arg: 2, scope: !7323, file: !193, line: 248, type: !736)
!7329 = !DILocation(line: 248, column: 55, scope: !7323)
!7330 = !DILocation(line: 250, column: 20, scope: !7323)
!7331 = !DILocation(line: 250, column: 23, scope: !7323)
!7332 = !DILocation(line: 250, column: 2, scope: !7323)
!7333 = !DILocation(line: 251, column: 1, scope: !7323)
!7334 = distinct !DISubprogram(name: "__refcount_add", scope: !193, file: !193, line: 191, type: !7335, scopeLine: 192, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !284)
!7335 = !DISubroutineType(types: !7336)
!7336 = !{null, !217, !7289, !736}
!7337 = !DILocalVariable(name: "i", arg: 1, scope: !7338, file: !5048, line: 182, type: !217)
!7338 = distinct !DISubprogram(name: "arch_atomic_fetch_add", scope: !5048, file: !5048, line: 182, type: !7339, scopeLine: 183, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !284)
!7339 = !DISubroutineType(types: !7340)
!7340 = !{!217, !217, !5051}
!7341 = !DILocation(line: 182, column: 54, scope: !7338, inlinedAt: !7342)
!7342 = distinct !DILocation(line: 143, column: 9, scope: !7343, inlinedAt: !7344)
!7343 = distinct !DISubprogram(name: "atomic_fetch_add_relaxed", scope: !5055, file: !5055, line: 140, type: !7339, scopeLine: 141, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !284)
!7344 = distinct !DILocation(line: 193, column: 12, scope: !7334)
!7345 = !DILocalVariable(name: "v", arg: 2, scope: !7338, file: !5048, line: 182, type: !5051)
!7346 = !DILocation(line: 182, column: 67, scope: !7338, inlinedAt: !7342)
!7347 = !DILocalVariable(name: "__ret", scope: !7348, file: !5048, line: 184, type: !217)
!7348 = distinct !DILexicalBlock(scope: !7338, file: !5048, line: 184, column: 9)
!7349 = !DILocation(line: 184, column: 9, scope: !7348, inlinedAt: !7342)
!7350 = !DILocalVariable(name: "v", arg: 1, scope: !7351, file: !5061, line: 99, type: !5064)
!7351 = distinct !DISubprogram(name: "instrument_atomic_read_write", scope: !5061, file: !5061, line: 99, type: !5062, scopeLine: 100, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !284)
!7352 = !DILocation(line: 99, column: 79, scope: !7351, inlinedAt: !7353)
!7353 = distinct !DILocation(line: 142, column: 2, scope: !7343, inlinedAt: !7344)
!7354 = !DILocalVariable(name: "size", arg: 2, scope: !7351, file: !5061, line: 99, type: !357)
!7355 = !DILocation(line: 99, column: 89, scope: !7351, inlinedAt: !7353)
!7356 = !DILocalVariable(name: "i", arg: 1, scope: !7343, file: !5055, line: 140, type: !217)
!7357 = !DILocation(line: 140, column: 30, scope: !7343, inlinedAt: !7344)
!7358 = !DILocalVariable(name: "v", arg: 2, scope: !7343, file: !5055, line: 140, type: !5051)
!7359 = !DILocation(line: 140, column: 43, scope: !7343, inlinedAt: !7344)
!7360 = !DILocalVariable(name: "i", arg: 1, scope: !7334, file: !193, line: 191, type: !217)
!7361 = !DILocation(line: 191, column: 39, scope: !7334)
!7362 = !DILocalVariable(name: "r", arg: 2, scope: !7334, file: !193, line: 191, type: !7289)
!7363 = !DILocation(line: 191, column: 54, scope: !7334)
!7364 = !DILocalVariable(name: "oldp", arg: 3, scope: !7334, file: !193, line: 191, type: !736)
!7365 = !DILocation(line: 191, column: 62, scope: !7334)
!7366 = !DILocalVariable(name: "old", scope: !7334, file: !193, line: 193, type: !217)
!7367 = !DILocation(line: 193, column: 6, scope: !7334)
!7368 = !DILocation(line: 193, column: 37, scope: !7334)
!7369 = !DILocation(line: 193, column: 41, scope: !7334)
!7370 = !DILocation(line: 193, column: 44, scope: !7334)
!7371 = !DILocation(line: 142, column: 31, scope: !7343, inlinedAt: !7344)
!7372 = !DILocation(line: 101, column: 20, scope: !7351, inlinedAt: !7353)
!7373 = !DILocation(line: 101, column: 23, scope: !7351, inlinedAt: !7353)
!7374 = !DILocation(line: 101, column: 2, scope: !7351, inlinedAt: !7353)
!7375 = !DILocation(line: 102, column: 2, scope: !7351, inlinedAt: !7353)
!7376 = !DILocation(line: 143, column: 39, scope: !7343, inlinedAt: !7344)
!7377 = !DILocation(line: 143, column: 42, scope: !7343, inlinedAt: !7344)
!7378 = !{i32 -2146571260}
!7379 = !DILocation(line: 195, column: 6, scope: !7380)
!7380 = distinct !DILexicalBlock(scope: !7334, file: !193, line: 195, column: 6)
!7381 = !DILocation(line: 195, column: 6, scope: !7334)
!7382 = !DILocation(line: 196, column: 11, scope: !7380)
!7383 = !DILocation(line: 196, column: 4, scope: !7380)
!7384 = !DILocation(line: 196, column: 9, scope: !7380)
!7385 = !DILocation(line: 196, column: 3, scope: !7380)
!7386 = !DILocation(line: 198, column: 6, scope: !7387)
!7387 = distinct !DILexicalBlock(scope: !7334, file: !193, line: 198, column: 6)
!7388 = !DILocation(line: 198, column: 6, scope: !7334)
!7389 = !DILocation(line: 199, column: 26, scope: !7387)
!7390 = !DILocation(line: 199, column: 3, scope: !7387)
!7391 = !DILocation(line: 200, column: 11, scope: !7392)
!7392 = distinct !DILexicalBlock(scope: !7387, file: !193, line: 200, column: 11)
!7393 = !DILocation(line: 200, column: 11, scope: !7387)
!7394 = !DILocation(line: 201, column: 26, scope: !7392)
!7395 = !DILocation(line: 201, column: 3, scope: !7392)
!7396 = !DILocation(line: 202, column: 1, scope: !7334)
!7397 = distinct !DISubprogram(name: "kasan_check_write", scope: !7398, file: !7398, line: 38, type: !7399, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !284)
!7398 = !DIFile(filename: "./include/linux/kasan-checks.h", directory: "/home/lizy2001/genbc/linux")
!7399 = !DISubroutineType(types: !7400)
!7400 = !{!521, !5064, !7}
!7401 = !DILocalVariable(name: "p", arg: 1, scope: !7397, file: !7398, line: 38, type: !5064)
!7402 = !DILocation(line: 38, column: 59, scope: !7397)
!7403 = !DILocalVariable(name: "size", arg: 2, scope: !7397, file: !7398, line: 38, type: !7)
!7404 = !DILocation(line: 38, column: 75, scope: !7397)
!7405 = !DILocation(line: 40, column: 2, scope: !7397)
!7406 = distinct !DISubprogram(name: "kcsan_check_access", scope: !7407, file: !7407, line: 178, type: !7408, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !284)
!7407 = !DIFile(filename: "./include/linux/kcsan-checks.h", directory: "/home/lizy2001/genbc/linux")
!7408 = !DISubroutineType(types: !7409)
!7409 = !{null, !5064, !357, !217}
!7410 = !DILocalVariable(name: "ptr", arg: 1, scope: !7406, file: !7407, line: 178, type: !5064)
!7411 = !DILocation(line: 178, column: 60, scope: !7406)
!7412 = !DILocalVariable(name: "size", arg: 2, scope: !7406, file: !7407, line: 178, type: !357)
!7413 = !DILocation(line: 178, column: 72, scope: !7406)
!7414 = !DILocalVariable(name: "type", arg: 3, scope: !7406, file: !7407, line: 179, type: !217)
!7415 = !DILocation(line: 179, column: 15, scope: !7406)
!7416 = !DILocation(line: 179, column: 23, scope: !7406)
!7417 = distinct !DISubprogram(name: "dev_set_drvdata", scope: !80, file: !80, line: 660, type: !7418, scopeLine: 661, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !284)
!7418 = !DISubroutineType(types: !7419)
!7419 = !{null, !246, !211}
!7420 = !DILocalVariable(name: "dev", arg: 1, scope: !7417, file: !80, line: 660, type: !246)
!7421 = !DILocation(line: 660, column: 51, scope: !7417)
!7422 = !DILocalVariable(name: "data", arg: 2, scope: !7417, file: !80, line: 660, type: !211)
!7423 = !DILocation(line: 660, column: 62, scope: !7417)
!7424 = !DILocation(line: 662, column: 21, scope: !7417)
!7425 = !DILocation(line: 662, column: 2, scope: !7417)
!7426 = !DILocation(line: 662, column: 7, scope: !7417)
!7427 = !DILocation(line: 662, column: 19, scope: !7417)
!7428 = !DILocation(line: 663, column: 1, scope: !7417)
!7429 = distinct !DISubprogram(name: "ufx_release_urb_work", scope: !3, file: !3, line: 1120, type: !2048, scopeLine: 1121, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !284)
!7430 = !DILocalVariable(name: "work", arg: 1, scope: !7429, file: !3, line: 1120, type: !2050)
!7431 = !DILocation(line: 1120, column: 54, scope: !7429)
!7432 = !DILocalVariable(name: "unode", scope: !7429, file: !3, line: 1122, type: !4273)
!7433 = !DILocation(line: 1122, column: 19, scope: !7429)
!7434 = !DILocalVariable(name: "__mptr", scope: !7435, file: !3, line: 1122, type: !211)
!7435 = distinct !DILexicalBlock(scope: !7429, file: !3, line: 1122, column: 27)
!7436 = !DILocation(line: 1122, column: 27, scope: !7435)
!7437 = !DILocation(line: 1122, column: 27, scope: !7438)
!7438 = distinct !DILexicalBlock(scope: !7435, file: !3, line: 1122, column: 27)
!7439 = !DILocation(line: 1125, column: 6, scope: !7429)
!7440 = !DILocation(line: 1125, column: 13, scope: !7429)
!7441 = !DILocation(line: 1125, column: 18, scope: !7429)
!7442 = !DILocation(line: 1125, column: 23, scope: !7429)
!7443 = !DILocation(line: 1125, column: 2, scope: !7429)
!7444 = !DILocation(line: 1126, column: 1, scope: !7429)
!7445 = distinct !DISubprogram(name: "usb_fill_bulk_urb", scope: !6, file: !6, line: 1647, type: !7446, scopeLine: 1654, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !284)
!7446 = !DISubroutineType(types: !7447)
!7447 = !{null, !4777, !213, !7, !211, !217, !4819, !211}
!7448 = !DILocalVariable(name: "urb", arg: 1, scope: !7445, file: !6, line: 1647, type: !4777)
!7449 = !DILocation(line: 1647, column: 50, scope: !7445)
!7450 = !DILocalVariable(name: "dev", arg: 2, scope: !7445, file: !6, line: 1648, type: !213)
!7451 = !DILocation(line: 1648, column: 29, scope: !7445)
!7452 = !DILocalVariable(name: "pipe", arg: 3, scope: !7445, file: !6, line: 1649, type: !7)
!7453 = !DILocation(line: 1649, column: 23, scope: !7445)
!7454 = !DILocalVariable(name: "transfer_buffer", arg: 4, scope: !7445, file: !6, line: 1650, type: !211)
!7455 = !DILocation(line: 1650, column: 16, scope: !7445)
!7456 = !DILocalVariable(name: "buffer_length", arg: 5, scope: !7445, file: !6, line: 1651, type: !217)
!7457 = !DILocation(line: 1651, column: 14, scope: !7445)
!7458 = !DILocalVariable(name: "complete_fn", arg: 6, scope: !7445, file: !6, line: 1652, type: !4819)
!7459 = !DILocation(line: 1652, column: 25, scope: !7445)
!7460 = !DILocalVariable(name: "context", arg: 7, scope: !7445, file: !6, line: 1653, type: !211)
!7461 = !DILocation(line: 1653, column: 16, scope: !7445)
!7462 = !DILocation(line: 1655, column: 13, scope: !7445)
!7463 = !DILocation(line: 1655, column: 2, scope: !7445)
!7464 = !DILocation(line: 1655, column: 7, scope: !7445)
!7465 = !DILocation(line: 1655, column: 11, scope: !7445)
!7466 = !DILocation(line: 1656, column: 14, scope: !7445)
!7467 = !DILocation(line: 1656, column: 2, scope: !7445)
!7468 = !DILocation(line: 1656, column: 7, scope: !7445)
!7469 = !DILocation(line: 1656, column: 12, scope: !7445)
!7470 = !DILocation(line: 1657, column: 25, scope: !7445)
!7471 = !DILocation(line: 1657, column: 2, scope: !7445)
!7472 = !DILocation(line: 1657, column: 7, scope: !7445)
!7473 = !DILocation(line: 1657, column: 23, scope: !7445)
!7474 = !DILocation(line: 1658, column: 32, scope: !7445)
!7475 = !DILocation(line: 1658, column: 2, scope: !7445)
!7476 = !DILocation(line: 1658, column: 7, scope: !7445)
!7477 = !DILocation(line: 1658, column: 30, scope: !7445)
!7478 = !DILocation(line: 1659, column: 18, scope: !7445)
!7479 = !DILocation(line: 1659, column: 2, scope: !7445)
!7480 = !DILocation(line: 1659, column: 7, scope: !7445)
!7481 = !DILocation(line: 1659, column: 16, scope: !7445)
!7482 = !DILocation(line: 1660, column: 17, scope: !7445)
!7483 = !DILocation(line: 1660, column: 2, scope: !7445)
!7484 = !DILocation(line: 1660, column: 7, scope: !7445)
!7485 = !DILocation(line: 1660, column: 15, scope: !7445)
!7486 = !DILocation(line: 1661, column: 1, scope: !7445)
!7487 = distinct !DISubprogram(name: "__create_pipe", scope: !6, file: !6, line: 1945, type: !7488, scopeLine: 1947, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !284)
!7488 = !DISubroutineType(types: !7489)
!7489 = !{!7, !213, !7}
!7490 = !DILocalVariable(name: "dev", arg: 1, scope: !7487, file: !6, line: 1945, type: !213)
!7491 = !DILocation(line: 1945, column: 61, scope: !7487)
!7492 = !DILocalVariable(name: "endpoint", arg: 2, scope: !7487, file: !6, line: 1946, type: !7)
!7493 = !DILocation(line: 1946, column: 16, scope: !7487)
!7494 = !DILocation(line: 1948, column: 10, scope: !7487)
!7495 = !DILocation(line: 1948, column: 15, scope: !7487)
!7496 = !DILocation(line: 1948, column: 22, scope: !7487)
!7497 = !DILocation(line: 1948, column: 31, scope: !7487)
!7498 = !DILocation(line: 1948, column: 40, scope: !7487)
!7499 = !DILocation(line: 1948, column: 28, scope: !7487)
!7500 = !DILocation(line: 1948, column: 2, scope: !7487)
!7501 = distinct !DISubprogram(name: "ufx_urb_completion", scope: !3, file: !3, line: 1775, type: !4821, scopeLine: 1776, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !284)
!7502 = !DILocalVariable(name: "lock", arg: 1, scope: !7503, file: !5702, line: 407, type: !1095)
!7503 = distinct !DISubprogram(name: "spin_unlock_irqrestore", scope: !5702, file: !5702, line: 407, type: !7504, scopeLine: 408, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !284)
!7504 = !DISubroutineType(types: !7505)
!7505 = !{null, !1095, !212}
!7506 = !DILocation(line: 407, column: 64, scope: !7503, inlinedAt: !7507)
!7507 = distinct !DILocation(line: 1797, column: 2, scope: !7501)
!7508 = !DILocalVariable(name: "flags", arg: 2, scope: !7503, file: !5702, line: 407, type: !212)
!7509 = !DILocation(line: 407, column: 84, scope: !7503, inlinedAt: !7507)
!7510 = !DILocation(line: 327, column: 67, scope: !5701, inlinedAt: !7511)
!7511 = distinct !DILocation(line: 1794, column: 2, scope: !7512)
!7512 = distinct !DILexicalBlock(scope: !7513, file: !3, line: 1794, column: 2)
!7513 = distinct !DILexicalBlock(scope: !7514, file: !3, line: 1794, column: 2)
!7514 = distinct !DILexicalBlock(scope: !7515, file: !3, line: 1794, column: 2)
!7515 = distinct !DILexicalBlock(scope: !7516, file: !3, line: 1794, column: 2)
!7516 = distinct !DILexicalBlock(scope: !7501, file: !3, line: 1794, column: 2)
!7517 = !DILocation(line: 39, column: 55, scope: !5047, inlinedAt: !7518)
!7518 = distinct !DILocation(line: 46, column: 2, scope: !5054, inlinedAt: !7519)
!7519 = distinct !DILocation(line: 1788, column: 4, scope: !7520)
!7520 = distinct !DILexicalBlock(scope: !7521, file: !3, line: 1785, column: 35)
!7521 = distinct !DILexicalBlock(scope: !7522, file: !3, line: 1783, column: 7)
!7522 = distinct !DILexicalBlock(scope: !7523, file: !3, line: 1782, column: 19)
!7523 = distinct !DILexicalBlock(scope: !7501, file: !3, line: 1782, column: 6)
!7524 = !DILocation(line: 39, column: 62, scope: !5047, inlinedAt: !7518)
!7525 = !DILocation(line: 84, column: 74, scope: !5060, inlinedAt: !7526)
!7526 = distinct !DILocation(line: 45, column: 2, scope: !5054, inlinedAt: !7519)
!7527 = !DILocation(line: 84, column: 84, scope: !5060, inlinedAt: !7526)
!7528 = !DILocation(line: 43, column: 22, scope: !5054, inlinedAt: !7519)
!7529 = !DILocation(line: 43, column: 29, scope: !5054, inlinedAt: !7519)
!7530 = !DILocalVariable(name: "urb", arg: 1, scope: !7501, file: !3, line: 1775, type: !4777)
!7531 = !DILocation(line: 1775, column: 44, scope: !7501)
!7532 = !DILocalVariable(name: "unode", scope: !7501, file: !3, line: 1777, type: !4273)
!7533 = !DILocation(line: 1777, column: 19, scope: !7501)
!7534 = !DILocation(line: 1777, column: 27, scope: !7501)
!7535 = !DILocation(line: 1777, column: 32, scope: !7501)
!7536 = !DILocalVariable(name: "dev", scope: !7501, file: !3, line: 1778, type: !4278)
!7537 = !DILocation(line: 1778, column: 19, scope: !7501)
!7538 = !DILocation(line: 1778, column: 25, scope: !7501)
!7539 = !DILocation(line: 1778, column: 32, scope: !7501)
!7540 = !DILocalVariable(name: "flags", scope: !7501, file: !3, line: 1779, type: !212)
!7541 = !DILocation(line: 1779, column: 16, scope: !7501)
!7542 = !DILocation(line: 1782, column: 6, scope: !7523)
!7543 = !DILocation(line: 1782, column: 11, scope: !7523)
!7544 = !DILocation(line: 1782, column: 6, scope: !7501)
!7545 = !DILocation(line: 1783, column: 9, scope: !7521)
!7546 = !DILocation(line: 1783, column: 14, scope: !7521)
!7547 = !DILocation(line: 1783, column: 21, scope: !7521)
!7548 = !DILocation(line: 1783, column: 32, scope: !7521)
!7549 = !DILocation(line: 1784, column: 7, scope: !7521)
!7550 = !DILocation(line: 1784, column: 12, scope: !7521)
!7551 = !DILocation(line: 1784, column: 19, scope: !7521)
!7552 = !DILocation(line: 1784, column: 34, scope: !7521)
!7553 = !DILocation(line: 1785, column: 7, scope: !7521)
!7554 = !DILocation(line: 1785, column: 12, scope: !7521)
!7555 = !DILocation(line: 1785, column: 19, scope: !7521)
!7556 = !DILocation(line: 1783, column: 7, scope: !7522)
!7557 = !DILocation(line: 1786, column: 4, scope: !7520)
!7558 = !DILocation(line: 1788, column: 16, scope: !7520)
!7559 = !DILocation(line: 1788, column: 21, scope: !7520)
!7560 = !DILocation(line: 45, column: 26, scope: !5054, inlinedAt: !7519)
!7561 = !DILocation(line: 86, column: 20, scope: !5060, inlinedAt: !7526)
!7562 = !DILocation(line: 86, column: 23, scope: !5060, inlinedAt: !7526)
!7563 = !DILocation(line: 86, column: 2, scope: !5060, inlinedAt: !7526)
!7564 = !DILocation(line: 87, column: 2, scope: !5060, inlinedAt: !7526)
!7565 = !DILocation(line: 46, column: 18, scope: !5054, inlinedAt: !7519)
!7566 = !DILocation(line: 46, column: 21, scope: !5054, inlinedAt: !7519)
!7567 = !DILocation(line: 41, column: 2, scope: !5271, inlinedAt: !7518)
!7568 = !DILocation(line: 1789, column: 3, scope: !7520)
!7569 = !DILocation(line: 1790, column: 2, scope: !7522)
!7570 = !DILocation(line: 1792, column: 32, scope: !7501)
!7571 = !DILocation(line: 1792, column: 37, scope: !7501)
!7572 = !DILocation(line: 1792, column: 42, scope: !7501)
!7573 = !DILocation(line: 1792, column: 2, scope: !7501)
!7574 = !DILocation(line: 1792, column: 7, scope: !7501)
!7575 = !DILocation(line: 1792, column: 30, scope: !7501)
!7576 = !DILocation(line: 1794, column: 2, scope: !7501)
!7577 = !DILocation(line: 1794, column: 2, scope: !7516)
!7578 = !DILocalVariable(name: "__dummy", scope: !7579, file: !3, line: 1794, type: !212)
!7579 = distinct !DILexicalBlock(scope: !7515, file: !3, line: 1794, column: 2)
!7580 = !DILocation(line: 1794, column: 2, scope: !7579)
!7581 = !DILocalVariable(name: "__dummy2", scope: !7579, file: !3, line: 1794, type: !212)
!7582 = !DILocation(line: 1794, column: 2, scope: !7515)
!7583 = !DILocation(line: 1794, column: 2, scope: !7514)
!7584 = !DILocation(line: 1794, column: 2, scope: !7585)
!7585 = distinct !DILexicalBlock(scope: !7514, file: !3, line: 1794, column: 2)
!7586 = !DILocalVariable(name: "__dummy", scope: !7587, file: !3, line: 1794, type: !212)
!7587 = distinct !DILexicalBlock(scope: !7588, file: !3, line: 1794, column: 2)
!7588 = distinct !DILexicalBlock(scope: !7585, file: !3, line: 1794, column: 2)
!7589 = !DILocation(line: 1794, column: 2, scope: !7587)
!7590 = !DILocalVariable(name: "__dummy2", scope: !7587, file: !3, line: 1794, type: !212)
!7591 = !DILocation(line: 1794, column: 2, scope: !7588)
!7592 = !DILocation(line: 1794, column: 2, scope: !7513)
!7593 = !{i32 -2140929341}
!7594 = !DILocation(line: 1794, column: 2, scope: !7512)
!7595 = !DILocation(line: 329, column: 10, scope: !5701, inlinedAt: !7511)
!7596 = !DILocation(line: 329, column: 16, scope: !5701, inlinedAt: !7511)
!7597 = !DILocation(line: 1795, column: 17, scope: !7501)
!7598 = !DILocation(line: 1795, column: 24, scope: !7501)
!7599 = !DILocation(line: 1795, column: 32, scope: !7501)
!7600 = !DILocation(line: 1795, column: 37, scope: !7501)
!7601 = !DILocation(line: 1795, column: 42, scope: !7501)
!7602 = !DILocation(line: 1795, column: 2, scope: !7501)
!7603 = !DILocation(line: 1796, column: 2, scope: !7501)
!7604 = !DILocation(line: 1796, column: 7, scope: !7501)
!7605 = !DILocation(line: 1796, column: 12, scope: !7501)
!7606 = !DILocation(line: 1796, column: 21, scope: !7501)
!7607 = !DILocation(line: 1797, column: 26, scope: !7501)
!7608 = !DILocation(line: 1797, column: 31, scope: !7501)
!7609 = !DILocation(line: 1797, column: 36, scope: !7501)
!7610 = !DILocation(line: 1797, column: 42, scope: !7501)
!7611 = !DILocalVariable(name: "__dummy", scope: !7612, file: !5702, line: 409, type: !212)
!7612 = distinct !DILexicalBlock(scope: !7613, file: !5702, line: 409, column: 2)
!7613 = distinct !DILexicalBlock(scope: !7503, file: !5702, line: 409, column: 2)
!7614 = !DILocation(line: 409, column: 2, scope: !7612, inlinedAt: !7507)
!7615 = !DILocalVariable(name: "__dummy2", scope: !7612, file: !5702, line: 409, type: !212)
!7616 = !DILocalVariable(name: "__dummy", scope: !7617, file: !5702, line: 409, type: !212)
!7617 = distinct !DILexicalBlock(scope: !7618, file: !5702, line: 409, column: 2)
!7618 = distinct !DILexicalBlock(scope: !7619, file: !5702, line: 409, column: 2)
!7619 = distinct !DILexicalBlock(scope: !7620, file: !5702, line: 409, column: 2)
!7620 = distinct !DILexicalBlock(scope: !7613, file: !5702, line: 409, column: 2)
!7621 = !DILocation(line: 409, column: 2, scope: !7617, inlinedAt: !7507)
!7622 = !DILocalVariable(name: "__dummy2", scope: !7617, file: !5702, line: 409, type: !212)
!7623 = !DILocation(line: 409, column: 2, scope: !7618, inlinedAt: !7507)
!7624 = !DILocation(line: 409, column: 2, scope: !7625, inlinedAt: !7507)
!7625 = distinct !DILexicalBlock(scope: !7620, file: !5702, line: 409, column: 2)
!7626 = !{i32 -2145423485}
!7627 = !DILocation(line: 409, column: 2, scope: !7628, inlinedAt: !7507)
!7628 = distinct !DILexicalBlock(scope: !7625, file: !5702, line: 409, column: 2)
!7629 = !DILocation(line: 1801, column: 6, scope: !7630)
!7630 = distinct !DILexicalBlock(scope: !7501, file: !3, line: 1801, column: 6)
!7631 = !DILocation(line: 1801, column: 6, scope: !7501)
!7632 = !DILocation(line: 1802, column: 26, scope: !7630)
!7633 = !DILocation(line: 1802, column: 33, scope: !7630)
!7634 = !DILocation(line: 1802, column: 3, scope: !7630)
!7635 = !DILocation(line: 1804, column: 7, scope: !7630)
!7636 = !DILocation(line: 1804, column: 12, scope: !7630)
!7637 = !DILocation(line: 1804, column: 17, scope: !7630)
!7638 = !DILocation(line: 1804, column: 3, scope: !7630)
!7639 = !DILocation(line: 1805, column: 1, scope: !7501)
!7640 = distinct !DISubprogram(name: "list_add_tail", scope: !5835, file: !5835, line: 98, type: !7641, scopeLine: 99, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !284)
!7641 = !DISubroutineType(types: !7642)
!7642 = !{null, !260, !260}
!7643 = !DILocalVariable(name: "new", arg: 1, scope: !7640, file: !5835, line: 98, type: !260)
!7644 = !DILocation(line: 98, column: 52, scope: !7640)
!7645 = !DILocalVariable(name: "head", arg: 2, scope: !7640, file: !5835, line: 98, type: !260)
!7646 = !DILocation(line: 98, column: 75, scope: !7640)
!7647 = !DILocation(line: 100, column: 13, scope: !7640)
!7648 = !DILocation(line: 100, column: 18, scope: !7640)
!7649 = !DILocation(line: 100, column: 24, scope: !7640)
!7650 = !DILocation(line: 100, column: 30, scope: !7640)
!7651 = !DILocation(line: 100, column: 2, scope: !7640)
!7652 = !DILocation(line: 101, column: 1, scope: !7640)
!7653 = !DILocalVariable(name: "sem", arg: 1, scope: !5010, file: !4755, line: 31, type: !5013)
!7654 = !DILocation(line: 31, column: 48, scope: !5010)
!7655 = !DILocalVariable(name: "val", arg: 2, scope: !5010, file: !4755, line: 31, type: !217)
!7656 = !DILocation(line: 31, column: 57, scope: !5010)
!7657 = !DILocation(line: 34, column: 3, scope: !5010)
!7658 = !DILocation(line: 34, column: 28, scope: !5010)
!7659 = !DILocation(line: 34, column: 9, scope: !5010)
!7660 = !DILocation(line: 35, column: 2, scope: !5010)
!7661 = !DILocation(line: 35, column: 2, scope: !7662)
!7662 = distinct !DILexicalBlock(scope: !5010, file: !4755, line: 35, column: 2)
!7663 = !DILocation(line: 36, column: 1, scope: !5010)
!7664 = distinct !DISubprogram(name: "arch_local_irq_save", scope: !7665, file: !7665, line: 666, type: !7666, scopeLine: 667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !284)
!7665 = !DIFile(filename: "./arch/x86/include/asm/paravirt.h", directory: "/home/lizy2001/genbc/linux")
!7666 = !DISubroutineType(types: !7667)
!7667 = !{!212}
!7668 = !DILocalVariable(name: "f", scope: !7664, file: !7665, line: 668, type: !212)
!7669 = !DILocation(line: 668, column: 16, scope: !7664)
!7670 = !DILocation(line: 670, column: 6, scope: !7664)
!7671 = !DILocation(line: 670, column: 4, scope: !7664)
!7672 = !DILocation(line: 671, column: 2, scope: !7664)
!7673 = !DILocation(line: 672, column: 9, scope: !7664)
!7674 = !DILocation(line: 672, column: 2, scope: !7664)
!7675 = distinct !DISubprogram(name: "schedule_delayed_work", scope: !153, file: !153, line: 623, type: !7676, scopeLine: 625, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !284)
!7676 = !DISubroutineType(types: !7677)
!7677 = !{!521, !7678, !212}
!7678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4497, size: 64)
!7679 = !DILocalVariable(name: "dwork", arg: 1, scope: !7675, file: !153, line: 623, type: !7678)
!7680 = !DILocation(line: 623, column: 63, scope: !7675)
!7681 = !DILocalVariable(name: "delay", arg: 2, scope: !7675, file: !153, line: 624, type: !212)
!7682 = !DILocation(line: 624, column: 21, scope: !7675)
!7683 = !DILocation(line: 626, column: 28, scope: !7675)
!7684 = !DILocation(line: 626, column: 39, scope: !7675)
!7685 = !DILocation(line: 626, column: 46, scope: !7675)
!7686 = !DILocation(line: 626, column: 9, scope: !7675)
!7687 = !DILocation(line: 626, column: 2, scope: !7675)
!7688 = distinct !DISubprogram(name: "arch_local_save_flags", scope: !7665, file: !7665, line: 646, type: !7666, scopeLine: 647, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !284)
!7689 = !DILocalVariable(name: "__ret", scope: !7690, file: !7665, line: 648, type: !212)
!7690 = distinct !DILexicalBlock(scope: !7688, file: !7665, line: 648, column: 9)
!7691 = !DILocation(line: 648, column: 9, scope: !7690)
!7692 = !DILocalVariable(name: "__edi", scope: !7690, file: !7665, line: 648, type: !212)
!7693 = !DILocalVariable(name: "__esi", scope: !7690, file: !7665, line: 648, type: !212)
!7694 = !DILocalVariable(name: "__edx", scope: !7690, file: !7665, line: 648, type: !212)
!7695 = !DILocalVariable(name: "__ecx", scope: !7690, file: !7665, line: 648, type: !212)
!7696 = !DILocalVariable(name: "__eax", scope: !7690, file: !7665, line: 648, type: !212)
!7697 = !DILocation(line: 648, column: 9, scope: !7698)
!7698 = distinct !DILexicalBlock(scope: !7699, file: !7665, line: 648, column: 9)
!7699 = distinct !DILexicalBlock(scope: !7690, file: !7665, line: 648, column: 9)
!7700 = !{i32 -2145737054, i32 -2145734739, i32 -2145734505, i32 -2145734454, i32 -2145734426, i32 -2145734401, i32 -2145734717, i32 -2145734704, i32 -2145734266, i32 -2145734147, i32 -2145734612, i32 -2145734585, i32 -2145734557, i32 -2145734527}
!7701 = !DILocalVariable(name: "__mask", scope: !7702, file: !7665, line: 648, type: !212)
!7702 = distinct !DILexicalBlock(scope: !7698, file: !7665, line: 648, column: 9)
!7703 = !DILocation(line: 648, column: 9, scope: !7702)
!7704 = !DILocation(line: 648, column: 9, scope: !7699)
!7705 = !DILocation(line: 648, column: 2, scope: !7688)
!7706 = distinct !DISubprogram(name: "arch_local_irq_disable", scope: !7665, file: !7665, line: 656, type: !1962, scopeLine: 657, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !284)
!7707 = !DILocalVariable(name: "__edi", scope: !7708, file: !7665, line: 658, type: !212)
!7708 = distinct !DILexicalBlock(scope: !7706, file: !7665, line: 658, column: 2)
!7709 = !DILocation(line: 658, column: 2, scope: !7708)
!7710 = !DILocalVariable(name: "__esi", scope: !7708, file: !7665, line: 658, type: !212)
!7711 = !DILocalVariable(name: "__edx", scope: !7708, file: !7665, line: 658, type: !212)
!7712 = !DILocalVariable(name: "__ecx", scope: !7708, file: !7665, line: 658, type: !212)
!7713 = !DILocalVariable(name: "__eax", scope: !7708, file: !7665, line: 658, type: !212)
!7714 = !{i32 -2145729960, i32 -2145729228, i32 -2145728994, i32 -2145728943, i32 -2145728915, i32 -2145728890, i32 -2145729206, i32 -2145729193, i32 -2145728755, i32 -2145728636, i32 -2145729101, i32 -2145729074, i32 -2145729046, i32 -2145729016}
!7715 = !DILocation(line: 659, column: 1, scope: !7706)
!7716 = distinct !DISubprogram(name: "arch_local_irq_restore", scope: !7665, file: !7665, line: 651, type: !7717, scopeLine: 652, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !284)
!7717 = !DISubroutineType(types: !7718)
!7718 = !{null, !212}
!7719 = !DILocalVariable(name: "f", arg: 1, scope: !7716, file: !7665, line: 651, type: !212)
!7720 = !DILocation(line: 651, column: 65, scope: !7716)
!7721 = !DILocalVariable(name: "__edi", scope: !7722, file: !7665, line: 653, type: !212)
!7722 = distinct !DILexicalBlock(scope: !7716, file: !7665, line: 653, column: 2)
!7723 = !DILocation(line: 653, column: 2, scope: !7722)
!7724 = !DILocalVariable(name: "__esi", scope: !7722, file: !7665, line: 653, type: !212)
!7725 = !DILocalVariable(name: "__edx", scope: !7722, file: !7665, line: 653, type: !212)
!7726 = !DILocalVariable(name: "__ecx", scope: !7722, file: !7665, line: 653, type: !212)
!7727 = !DILocalVariable(name: "__eax", scope: !7722, file: !7665, line: 653, type: !212)
!7728 = !{i32 -2145732587, i32 -2145731837, i32 -2145731603, i32 -2145731552, i32 -2145731524, i32 -2145731499, i32 -2145731815, i32 -2145731802, i32 -2145731364, i32 -2145731245, i32 -2145731710, i32 -2145731683, i32 -2145731655, i32 -2145731625}
!7729 = !DILocation(line: 654, column: 1, scope: !7716)
!7730 = distinct !DISubprogram(name: "queue_delayed_work", scope: !153, file: !153, line: 518, type: !7731, scopeLine: 521, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !284)
!7731 = !DISubroutineType(types: !7732)
!7732 = !{!521, !2876, !7678, !212}
!7733 = !DILocalVariable(name: "wq", arg: 1, scope: !7730, file: !153, line: 518, type: !2876)
!7734 = !DILocation(line: 518, column: 64, scope: !7730)
!7735 = !DILocalVariable(name: "dwork", arg: 2, scope: !7730, file: !153, line: 519, type: !7678)
!7736 = !DILocation(line: 519, column: 32, scope: !7730)
!7737 = !DILocalVariable(name: "delay", arg: 3, scope: !7730, file: !153, line: 520, type: !212)
!7738 = !DILocation(line: 520, column: 25, scope: !7730)
!7739 = !DILocation(line: 522, column: 49, scope: !7730)
!7740 = !DILocation(line: 522, column: 53, scope: !7730)
!7741 = !DILocation(line: 522, column: 60, scope: !7730)
!7742 = !DILocation(line: 522, column: 9, scope: !7730)
!7743 = !DILocation(line: 522, column: 2, scope: !7730)
!7744 = distinct !DISubprogram(name: "__list_add", scope: !5835, file: !5835, line: 63, type: !7745, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !284)
!7745 = !DISubroutineType(types: !7746)
!7746 = !{null, !260, !260, !260}
!7747 = !DILocalVariable(name: "new", arg: 1, scope: !7744, file: !5835, line: 63, type: !260)
!7748 = !DILocation(line: 63, column: 49, scope: !7744)
!7749 = !DILocalVariable(name: "prev", arg: 2, scope: !7744, file: !5835, line: 64, type: !260)
!7750 = !DILocation(line: 64, column: 28, scope: !7744)
!7751 = !DILocalVariable(name: "next", arg: 3, scope: !7744, file: !5835, line: 65, type: !260)
!7752 = !DILocation(line: 65, column: 28, scope: !7744)
!7753 = !DILocation(line: 67, column: 24, scope: !7754)
!7754 = distinct !DILexicalBlock(scope: !7744, file: !5835, line: 67, column: 6)
!7755 = !DILocation(line: 67, column: 29, scope: !7754)
!7756 = !DILocation(line: 67, column: 35, scope: !7754)
!7757 = !DILocation(line: 67, column: 7, scope: !7754)
!7758 = !DILocation(line: 67, column: 6, scope: !7744)
!7759 = !DILocation(line: 68, column: 3, scope: !7754)
!7760 = !DILocation(line: 70, column: 15, scope: !7744)
!7761 = !DILocation(line: 70, column: 2, scope: !7744)
!7762 = !DILocation(line: 70, column: 8, scope: !7744)
!7763 = !DILocation(line: 70, column: 13, scope: !7744)
!7764 = !DILocation(line: 71, column: 14, scope: !7744)
!7765 = !DILocation(line: 71, column: 2, scope: !7744)
!7766 = !DILocation(line: 71, column: 7, scope: !7744)
!7767 = !DILocation(line: 71, column: 12, scope: !7744)
!7768 = !DILocation(line: 72, column: 14, scope: !7744)
!7769 = !DILocation(line: 72, column: 2, scope: !7744)
!7770 = !DILocation(line: 72, column: 7, scope: !7744)
!7771 = !DILocation(line: 72, column: 12, scope: !7744)
!7772 = !DILocation(line: 73, column: 2, scope: !7744)
!7773 = !DILocation(line: 73, column: 2, scope: !7774)
!7774 = distinct !DILexicalBlock(scope: !7744, file: !5835, line: 73, column: 2)
!7775 = !DILocation(line: 73, column: 2, scope: !7776)
!7776 = distinct !DILexicalBlock(scope: !7774, file: !5835, line: 73, column: 2)
!7777 = !DILocation(line: 73, column: 2, scope: !7778)
!7778 = distinct !DILexicalBlock(scope: !7774, file: !5835, line: 73, column: 2)
!7779 = !DILocation(line: 74, column: 1, scope: !7744)
!7780 = distinct !DISubprogram(name: "__list_add_valid", scope: !5835, file: !5835, line: 45, type: !7781, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !284)
!7781 = !DISubroutineType(types: !7782)
!7782 = !{!521, !260, !260, !260}
!7783 = !DILocalVariable(name: "new", arg: 1, scope: !7780, file: !5835, line: 45, type: !260)
!7784 = !DILocation(line: 45, column: 55, scope: !7780)
!7785 = !DILocalVariable(name: "prev", arg: 2, scope: !7780, file: !5835, line: 46, type: !260)
!7786 = !DILocation(line: 46, column: 23, scope: !7780)
!7787 = !DILocalVariable(name: "next", arg: 3, scope: !7780, file: !5835, line: 47, type: !260)
!7788 = !DILocation(line: 47, column: 23, scope: !7780)
!7789 = !DILocation(line: 49, column: 2, scope: !7780)
!7790 = distinct !DISubprogram(name: "ufx_ops_open", scope: !3, file: !3, line: 1063, type: !4526, scopeLine: 1064, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !284)
!7791 = !DILocalVariable(name: "info", arg: 1, scope: !7790, file: !3, line: 1063, type: !4284)
!7792 = !DILocation(line: 1063, column: 41, scope: !7790)
!7793 = !DILocalVariable(name: "user", arg: 2, scope: !7790, file: !3, line: 1063, type: !217)
!7794 = !DILocation(line: 1063, column: 51, scope: !7790)
!7795 = !DILocalVariable(name: "dev", scope: !7790, file: !3, line: 1065, type: !4278)
!7796 = !DILocation(line: 1065, column: 19, scope: !7790)
!7797 = !DILocation(line: 1065, column: 25, scope: !7790)
!7798 = !DILocation(line: 1065, column: 31, scope: !7790)
!7799 = !DILocation(line: 1070, column: 6, scope: !7800)
!7800 = distinct !DILexicalBlock(scope: !7790, file: !3, line: 1070, column: 6)
!7801 = !DILocation(line: 1070, column: 11, scope: !7800)
!7802 = !DILocation(line: 1070, column: 16, scope: !7800)
!7803 = !DILocation(line: 1070, column: 20, scope: !7800)
!7804 = !DILocation(line: 1070, column: 6, scope: !7790)
!7805 = !DILocation(line: 1071, column: 3, scope: !7800)
!7806 = !DILocation(line: 1074, column: 6, scope: !7807)
!7807 = distinct !DILexicalBlock(scope: !7790, file: !3, line: 1074, column: 6)
!7808 = !DILocation(line: 1074, column: 11, scope: !7807)
!7809 = !DILocation(line: 1074, column: 6, scope: !7790)
!7810 = !DILocation(line: 1075, column: 3, scope: !7807)
!7811 = !DILocation(line: 1077, column: 2, scope: !7790)
!7812 = !DILocation(line: 1077, column: 7, scope: !7790)
!7813 = !DILocation(line: 1077, column: 15, scope: !7790)
!7814 = !DILocation(line: 1079, column: 12, scope: !7790)
!7815 = !DILocation(line: 1079, column: 17, scope: !7790)
!7816 = !DILocation(line: 1079, column: 2, scope: !7790)
!7817 = !DILocation(line: 1081, column: 6, scope: !7818)
!7818 = distinct !DILexicalBlock(scope: !7790, file: !3, line: 1081, column: 6)
!7819 = !DILocation(line: 1081, column: 15, scope: !7818)
!7820 = !DILocation(line: 1081, column: 19, scope: !7818)
!7821 = !DILocation(line: 1081, column: 25, scope: !7818)
!7822 = !DILocation(line: 1081, column: 33, scope: !7818)
!7823 = !DILocation(line: 1081, column: 6, scope: !7790)
!7824 = !DILocalVariable(name: "fbdefio", scope: !7825, file: !3, line: 1084, type: !4504)
!7825 = distinct !DILexicalBlock(scope: !7818, file: !3, line: 1081, column: 43)
!7826 = !DILocation(line: 1084, column: 26, scope: !7825)
!7827 = !DILocation(line: 1086, column: 13, scope: !7825)
!7828 = !DILocation(line: 1086, column: 11, scope: !7825)
!7829 = !DILocation(line: 1087, column: 7, scope: !7830)
!7830 = distinct !DILexicalBlock(scope: !7825, file: !3, line: 1087, column: 7)
!7831 = !DILocation(line: 1087, column: 7, scope: !7825)
!7832 = !DILocation(line: 1088, column: 4, scope: !7833)
!7833 = distinct !DILexicalBlock(scope: !7830, file: !3, line: 1087, column: 16)
!7834 = !DILocation(line: 1088, column: 13, scope: !7833)
!7835 = !DILocation(line: 1088, column: 19, scope: !7833)
!7836 = !DILocation(line: 1089, column: 4, scope: !7833)
!7837 = !DILocation(line: 1089, column: 13, scope: !7833)
!7838 = !DILocation(line: 1089, column: 25, scope: !7833)
!7839 = !DILocation(line: 1090, column: 3, scope: !7833)
!7840 = !DILocation(line: 1092, column: 19, scope: !7825)
!7841 = !DILocation(line: 1092, column: 3, scope: !7825)
!7842 = !DILocation(line: 1092, column: 9, scope: !7825)
!7843 = !DILocation(line: 1092, column: 17, scope: !7825)
!7844 = !DILocation(line: 1093, column: 23, scope: !7825)
!7845 = !DILocation(line: 1093, column: 3, scope: !7825)
!7846 = !DILocation(line: 1094, column: 2, scope: !7825)
!7847 = !DILocation(line: 1096, column: 2, scope: !7848)
!7848 = distinct !DILexicalBlock(scope: !7849, file: !3, line: 1096, column: 2)
!7849 = distinct !DILexicalBlock(scope: !7790, file: !3, line: 1096, column: 2)
!7850 = !DILocation(line: 1096, column: 2, scope: !7849)
!7851 = !DILocation(line: 1099, column: 2, scope: !7790)
!7852 = !DILocation(line: 1100, column: 1, scope: !7790)
!7853 = distinct !DISubprogram(name: "ufx_ops_release", scope: !3, file: !3, line: 1159, type: !4526, scopeLine: 1160, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !284)
!7854 = !DILocalVariable(name: "info", arg: 1, scope: !7853, file: !3, line: 1159, type: !4284)
!7855 = !DILocation(line: 1159, column: 44, scope: !7853)
!7856 = !DILocalVariable(name: "user", arg: 2, scope: !7853, file: !3, line: 1159, type: !217)
!7857 = !DILocation(line: 1159, column: 54, scope: !7853)
!7858 = !DILocalVariable(name: "dev", scope: !7853, file: !3, line: 1161, type: !4278)
!7859 = !DILocation(line: 1161, column: 19, scope: !7853)
!7860 = !DILocation(line: 1161, column: 25, scope: !7853)
!7861 = !DILocation(line: 1161, column: 31, scope: !7853)
!7862 = !DILocation(line: 1163, column: 2, scope: !7853)
!7863 = !DILocation(line: 1163, column: 7, scope: !7853)
!7864 = !DILocation(line: 1163, column: 15, scope: !7853)
!7865 = !DILocation(line: 1166, column: 6, scope: !7866)
!7866 = distinct !DILexicalBlock(scope: !7853, file: !3, line: 1166, column: 6)
!7867 = !DILocation(line: 1166, column: 11, scope: !7866)
!7868 = !DILocation(line: 1166, column: 23, scope: !7866)
!7869 = !DILocation(line: 1166, column: 27, scope: !7866)
!7870 = !DILocation(line: 1166, column: 32, scope: !7866)
!7871 = !DILocation(line: 1166, column: 41, scope: !7866)
!7872 = !DILocation(line: 1166, column: 6, scope: !7853)
!7873 = !DILocation(line: 1167, column: 26, scope: !7866)
!7874 = !DILocation(line: 1167, column: 31, scope: !7866)
!7875 = !DILocation(line: 1167, column: 3, scope: !7866)
!7876 = !DILocation(line: 1169, column: 7, scope: !7877)
!7877 = distinct !DILexicalBlock(scope: !7853, file: !3, line: 1169, column: 6)
!7878 = !DILocation(line: 1169, column: 12, scope: !7877)
!7879 = !DILocation(line: 1169, column: 21, scope: !7877)
!7880 = !DILocation(line: 1169, column: 27, scope: !7877)
!7881 = !DILocation(line: 1169, column: 31, scope: !7877)
!7882 = !DILocation(line: 1169, column: 37, scope: !7877)
!7883 = !DILocation(line: 1169, column: 30, scope: !7877)
!7884 = !DILocation(line: 1169, column: 6, scope: !7853)
!7885 = !DILocation(line: 1170, column: 26, scope: !7886)
!7886 = distinct !DILexicalBlock(scope: !7877, file: !3, line: 1169, column: 47)
!7887 = !DILocation(line: 1170, column: 3, scope: !7886)
!7888 = !DILocation(line: 1171, column: 9, scope: !7886)
!7889 = !DILocation(line: 1171, column: 15, scope: !7886)
!7890 = !DILocation(line: 1171, column: 3, scope: !7886)
!7891 = !DILocation(line: 1172, column: 3, scope: !7886)
!7892 = !DILocation(line: 1172, column: 9, scope: !7886)
!7893 = !DILocation(line: 1172, column: 17, scope: !7886)
!7894 = !DILocation(line: 1173, column: 2, scope: !7886)
!7895 = !DILocation(line: 1175, column: 2, scope: !7896)
!7896 = distinct !DILexicalBlock(scope: !7897, file: !3, line: 1175, column: 2)
!7897 = distinct !DILexicalBlock(scope: !7853, file: !3, line: 1175, column: 2)
!7898 = !DILocation(line: 1175, column: 2, scope: !7897)
!7899 = !DILocation(line: 1178, column: 12, scope: !7853)
!7900 = !DILocation(line: 1178, column: 17, scope: !7853)
!7901 = !DILocation(line: 1178, column: 2, scope: !7853)
!7902 = !DILocation(line: 1180, column: 2, scope: !7853)
!7903 = distinct !DISubprogram(name: "ufx_ops_write", scope: !3, file: !3, line: 897, type: !4535, scopeLine: 899, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !284)
!7904 = !DILocalVariable(name: "info", arg: 1, scope: !7903, file: !3, line: 897, type: !4284)
!7905 = !DILocation(line: 897, column: 46, scope: !7903)
!7906 = !DILocalVariable(name: "buf", arg: 2, scope: !7903, file: !3, line: 897, type: !254)
!7907 = !DILocation(line: 897, column: 71, scope: !7903)
!7908 = !DILocalVariable(name: "count", arg: 3, scope: !7903, file: !3, line: 898, type: !357)
!7909 = !DILocation(line: 898, column: 13, scope: !7903)
!7910 = !DILocalVariable(name: "ppos", arg: 4, scope: !7903, file: !3, line: 898, type: !2959)
!7911 = !DILocation(line: 898, column: 28, scope: !7903)
!7912 = !DILocalVariable(name: "result", scope: !7903, file: !3, line: 900, type: !342)
!7913 = !DILocation(line: 900, column: 10, scope: !7903)
!7914 = !DILocalVariable(name: "dev", scope: !7903, file: !3, line: 901, type: !4278)
!7915 = !DILocation(line: 901, column: 19, scope: !7903)
!7916 = !DILocation(line: 901, column: 25, scope: !7903)
!7917 = !DILocation(line: 901, column: 31, scope: !7903)
!7918 = !DILocalVariable(name: "offset", scope: !7903, file: !3, line: 902, type: !224)
!7919 = !DILocation(line: 902, column: 6, scope: !7903)
!7920 = !DILocation(line: 902, column: 22, scope: !7903)
!7921 = !DILocation(line: 902, column: 21, scope: !7903)
!7922 = !DILocation(line: 902, column: 15, scope: !7903)
!7923 = !DILocation(line: 904, column: 24, scope: !7903)
!7924 = !DILocation(line: 904, column: 30, scope: !7903)
!7925 = !DILocation(line: 904, column: 35, scope: !7903)
!7926 = !DILocation(line: 904, column: 42, scope: !7903)
!7927 = !DILocation(line: 904, column: 11, scope: !7903)
!7928 = !DILocation(line: 904, column: 9, scope: !7903)
!7929 = !DILocation(line: 906, column: 6, scope: !7930)
!7930 = distinct !DILexicalBlock(scope: !7903, file: !3, line: 906, column: 6)
!7931 = !DILocation(line: 906, column: 13, scope: !7930)
!7932 = !DILocation(line: 906, column: 6, scope: !7903)
!7933 = !DILocalVariable(name: "start", scope: !7934, file: !3, line: 907, type: !217)
!7934 = distinct !DILexicalBlock(scope: !7930, file: !3, line: 906, column: 18)
!7935 = !DILocation(line: 907, column: 7, scope: !7934)
!7936 = !DILocalVariable(name: "__UNIQUE_ID___x254", scope: !7937, file: !3, line: 907, type: !217)
!7937 = distinct !DILexicalBlock(scope: !7934, file: !3, line: 907, column: 15)
!7938 = !DILocation(line: 907, column: 15, scope: !7937)
!7939 = !DILocalVariable(name: "__UNIQUE_ID___y255", scope: !7937, file: !3, line: 907, type: !217)
!7940 = !DILocalVariable(name: "lines", scope: !7934, file: !3, line: 908, type: !217)
!7941 = !DILocation(line: 908, column: 7, scope: !7934)
!7942 = !DILocalVariable(name: "__UNIQUE_ID___x256", scope: !7943, file: !3, line: 908, type: !224)
!7943 = distinct !DILexicalBlock(scope: !7934, file: !3, line: 908, column: 15)
!7944 = !DILocation(line: 908, column: 15, scope: !7943)
!7945 = !DILocalVariable(name: "__UNIQUE_ID___y257", scope: !7943, file: !3, line: 908, type: !224)
!7946 = !DILocation(line: 911, column: 21, scope: !7934)
!7947 = !DILocation(line: 911, column: 29, scope: !7934)
!7948 = !DILocation(line: 911, column: 36, scope: !7934)
!7949 = !DILocation(line: 911, column: 42, scope: !7934)
!7950 = !DILocation(line: 911, column: 46, scope: !7934)
!7951 = !DILocation(line: 911, column: 52, scope: !7934)
!7952 = !DILocation(line: 911, column: 3, scope: !7934)
!7953 = !DILocation(line: 912, column: 2, scope: !7934)
!7954 = !DILocation(line: 914, column: 9, scope: !7903)
!7955 = !DILocation(line: 914, column: 2, scope: !7903)
!7956 = distinct !DISubprogram(name: "ufx_ops_setcolreg", scope: !3, file: !3, line: 1035, type: !4548, scopeLine: 1037, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !284)
!7957 = !DILocalVariable(name: "regno", arg: 1, scope: !7956, file: !3, line: 1035, type: !7)
!7958 = !DILocation(line: 1035, column: 28, scope: !7956)
!7959 = !DILocalVariable(name: "red", arg: 2, scope: !7956, file: !3, line: 1035, type: !7)
!7960 = !DILocation(line: 1035, column: 44, scope: !7956)
!7961 = !DILocalVariable(name: "green", arg: 3, scope: !7956, file: !3, line: 1035, type: !7)
!7962 = !DILocation(line: 1035, column: 58, scope: !7956)
!7963 = !DILocalVariable(name: "blue", arg: 4, scope: !7956, file: !3, line: 1036, type: !7)
!7964 = !DILocation(line: 1036, column: 18, scope: !7956)
!7965 = !DILocalVariable(name: "transp", arg: 5, scope: !7956, file: !3, line: 1036, type: !7)
!7966 = !DILocation(line: 1036, column: 33, scope: !7956)
!7967 = !DILocalVariable(name: "info", arg: 6, scope: !7956, file: !3, line: 1036, type: !4284)
!7968 = !DILocation(line: 1036, column: 57, scope: !7956)
!7969 = !DILocalVariable(name: "err", scope: !7956, file: !3, line: 1038, type: !217)
!7970 = !DILocation(line: 1038, column: 6, scope: !7956)
!7971 = !DILocation(line: 1040, column: 6, scope: !7972)
!7972 = distinct !DILexicalBlock(scope: !7956, file: !3, line: 1040, column: 6)
!7973 = !DILocation(line: 1040, column: 15, scope: !7972)
!7974 = !DILocation(line: 1040, column: 21, scope: !7972)
!7975 = !DILocation(line: 1040, column: 26, scope: !7972)
!7976 = !DILocation(line: 1040, column: 12, scope: !7972)
!7977 = !DILocation(line: 1040, column: 6, scope: !7956)
!7978 = !DILocation(line: 1041, column: 3, scope: !7972)
!7979 = !DILocation(line: 1043, column: 6, scope: !7980)
!7980 = distinct !DILexicalBlock(scope: !7956, file: !3, line: 1043, column: 6)
!7981 = !DILocation(line: 1043, column: 12, scope: !7980)
!7982 = !DILocation(line: 1043, column: 6, scope: !7956)
!7983 = !DILocation(line: 1044, column: 7, scope: !7984)
!7984 = distinct !DILexicalBlock(scope: !7985, file: !3, line: 1044, column: 7)
!7985 = distinct !DILexicalBlock(scope: !7980, file: !3, line: 1043, column: 18)
!7986 = !DILocation(line: 1044, column: 13, scope: !7984)
!7987 = !DILocation(line: 1044, column: 17, scope: !7984)
!7988 = !DILocation(line: 1044, column: 21, scope: !7984)
!7989 = !DILocation(line: 1044, column: 28, scope: !7984)
!7990 = !DILocation(line: 1044, column: 7, scope: !7985)
!7991 = !DILocation(line: 1047, column: 10, scope: !7992)
!7992 = distinct !DILexicalBlock(scope: !7984, file: !3, line: 1044, column: 35)
!7993 = !DILocation(line: 1047, column: 14, scope: !7992)
!7994 = !DILocation(line: 1047, column: 24, scope: !7992)
!7995 = !DILocation(line: 1048, column: 10, scope: !7992)
!7996 = !DILocation(line: 1048, column: 16, scope: !7992)
!7997 = !DILocation(line: 1048, column: 26, scope: !7992)
!7998 = !DILocation(line: 1047, column: 30, scope: !7992)
!7999 = !DILocation(line: 1048, column: 36, scope: !7992)
!8000 = !DILocation(line: 1048, column: 41, scope: !7992)
!8001 = !DILocation(line: 1048, column: 51, scope: !7992)
!8002 = !DILocation(line: 1048, column: 32, scope: !7992)
!8003 = !DILocation(line: 1046, column: 14, scope: !7992)
!8004 = !DILocation(line: 1046, column: 20, scope: !7992)
!8005 = !DILocation(line: 1046, column: 5, scope: !7992)
!8006 = !DILocation(line: 1046, column: 37, scope: !7992)
!8007 = !DILocation(line: 1046, column: 4, scope: !7992)
!8008 = !DILocation(line: 1046, column: 44, scope: !7992)
!8009 = !DILocation(line: 1049, column: 3, scope: !7992)
!8010 = !DILocation(line: 1052, column: 10, scope: !8011)
!8011 = distinct !DILexicalBlock(scope: !7984, file: !3, line: 1049, column: 10)
!8012 = !DILocation(line: 1052, column: 14, scope: !8011)
!8013 = !DILocation(line: 1053, column: 10, scope: !8011)
!8014 = !DILocation(line: 1053, column: 16, scope: !8011)
!8015 = !DILocation(line: 1053, column: 26, scope: !8011)
!8016 = !DILocation(line: 1052, column: 25, scope: !8011)
!8017 = !DILocation(line: 1053, column: 36, scope: !8011)
!8018 = !DILocation(line: 1053, column: 41, scope: !8011)
!8019 = !DILocation(line: 1053, column: 51, scope: !8011)
!8020 = !DILocation(line: 1053, column: 32, scope: !8011)
!8021 = !DILocation(line: 1051, column: 14, scope: !8011)
!8022 = !DILocation(line: 1051, column: 20, scope: !8011)
!8023 = !DILocation(line: 1051, column: 5, scope: !8011)
!8024 = !DILocation(line: 1051, column: 37, scope: !8011)
!8025 = !DILocation(line: 1051, column: 4, scope: !8011)
!8026 = !DILocation(line: 1051, column: 44, scope: !8011)
!8027 = !DILocation(line: 1055, column: 2, scope: !7985)
!8028 = !DILocation(line: 1057, column: 9, scope: !7956)
!8029 = !DILocation(line: 1057, column: 2, scope: !7956)
!8030 = !DILocation(line: 1058, column: 1, scope: !7956)
!8031 = distinct !DISubprogram(name: "ufx_ops_blank", scope: !3, file: !3, line: 1264, type: !4557, scopeLine: 1265, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !284)
!8032 = !DILocalVariable(name: "blank_mode", arg: 1, scope: !8031, file: !3, line: 1264, type: !217)
!8033 = !DILocation(line: 1264, column: 30, scope: !8031)
!8034 = !DILocalVariable(name: "info", arg: 2, scope: !8031, file: !3, line: 1264, type: !4284)
!8035 = !DILocation(line: 1264, column: 58, scope: !8031)
!8036 = !DILocalVariable(name: "dev", scope: !8031, file: !3, line: 1266, type: !4278)
!8037 = !DILocation(line: 1266, column: 19, scope: !8031)
!8038 = !DILocation(line: 1266, column: 25, scope: !8031)
!8039 = !DILocation(line: 1266, column: 31, scope: !8031)
!8040 = !DILocation(line: 1267, column: 19, scope: !8031)
!8041 = !DILocation(line: 1267, column: 25, scope: !8031)
!8042 = !DILocation(line: 1267, column: 31, scope: !8031)
!8043 = !DILocation(line: 1267, column: 2, scope: !8031)
!8044 = !DILocation(line: 1268, column: 2, scope: !8031)
!8045 = distinct !DISubprogram(name: "ufx_ops_fillrect", scope: !3, file: !3, line: 940, type: !4562, scopeLine: 942, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !284)
!8046 = !DILocalVariable(name: "info", arg: 1, scope: !8045, file: !3, line: 940, type: !4284)
!8047 = !DILocation(line: 940, column: 46, scope: !8045)
!8048 = !DILocalVariable(name: "rect", arg: 2, scope: !8045, file: !3, line: 941, type: !4564)
!8049 = !DILocation(line: 941, column: 32, scope: !8045)
!8050 = !DILocalVariable(name: "dev", scope: !8045, file: !3, line: 943, type: !4278)
!8051 = !DILocation(line: 943, column: 19, scope: !8045)
!8052 = !DILocation(line: 943, column: 25, scope: !8045)
!8053 = !DILocation(line: 943, column: 31, scope: !8045)
!8054 = !DILocation(line: 945, column: 15, scope: !8045)
!8055 = !DILocation(line: 945, column: 21, scope: !8045)
!8056 = !DILocation(line: 945, column: 2, scope: !8045)
!8057 = !DILocation(line: 947, column: 20, scope: !8045)
!8058 = !DILocation(line: 947, column: 25, scope: !8045)
!8059 = !DILocation(line: 947, column: 31, scope: !8045)
!8060 = !DILocation(line: 947, column: 35, scope: !8045)
!8061 = !DILocation(line: 947, column: 41, scope: !8045)
!8062 = !DILocation(line: 947, column: 45, scope: !8045)
!8063 = !DILocation(line: 947, column: 51, scope: !8045)
!8064 = !DILocation(line: 948, column: 10, scope: !8045)
!8065 = !DILocation(line: 948, column: 16, scope: !8045)
!8066 = !DILocation(line: 947, column: 2, scope: !8045)
!8067 = !DILocation(line: 949, column: 1, scope: !8045)
!8068 = distinct !DISubprogram(name: "ufx_ops_copyarea", scope: !3, file: !3, line: 917, type: !4576, scopeLine: 919, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !284)
!8069 = !DILocalVariable(name: "info", arg: 1, scope: !8068, file: !3, line: 917, type: !4284)
!8070 = !DILocation(line: 917, column: 46, scope: !8068)
!8071 = !DILocalVariable(name: "area", arg: 2, scope: !8068, file: !3, line: 918, type: !4578)
!8072 = !DILocation(line: 918, column: 31, scope: !8068)
!8073 = !DILocalVariable(name: "dev", scope: !8068, file: !3, line: 921, type: !4278)
!8074 = !DILocation(line: 921, column: 19, scope: !8068)
!8075 = !DILocation(line: 921, column: 25, scope: !8068)
!8076 = !DILocation(line: 921, column: 31, scope: !8068)
!8077 = !DILocation(line: 923, column: 15, scope: !8068)
!8078 = !DILocation(line: 923, column: 21, scope: !8068)
!8079 = !DILocation(line: 923, column: 2, scope: !8068)
!8080 = !DILocation(line: 925, column: 20, scope: !8068)
!8081 = !DILocation(line: 925, column: 25, scope: !8068)
!8082 = !DILocation(line: 925, column: 31, scope: !8068)
!8083 = !DILocation(line: 925, column: 35, scope: !8068)
!8084 = !DILocation(line: 925, column: 41, scope: !8068)
!8085 = !DILocation(line: 926, column: 4, scope: !8068)
!8086 = !DILocation(line: 926, column: 10, scope: !8068)
!8087 = !DILocation(line: 926, column: 17, scope: !8068)
!8088 = !DILocation(line: 926, column: 23, scope: !8068)
!8089 = !DILocation(line: 925, column: 2, scope: !8068)
!8090 = !DILocation(line: 927, column: 1, scope: !8068)
!8091 = distinct !DISubprogram(name: "ufx_ops_imageblit", scope: !3, file: !3, line: 929, type: !4590, scopeLine: 931, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !284)
!8092 = !DILocalVariable(name: "info", arg: 1, scope: !8091, file: !3, line: 929, type: !4284)
!8093 = !DILocation(line: 929, column: 47, scope: !8091)
!8094 = !DILocalVariable(name: "image", arg: 2, scope: !8091, file: !3, line: 930, type: !4592)
!8095 = !DILocation(line: 930, column: 28, scope: !8091)
!8096 = !DILocalVariable(name: "dev", scope: !8091, file: !3, line: 932, type: !4278)
!8097 = !DILocation(line: 932, column: 19, scope: !8091)
!8098 = !DILocation(line: 932, column: 25, scope: !8091)
!8099 = !DILocation(line: 932, column: 31, scope: !8091)
!8100 = !DILocation(line: 934, column: 16, scope: !8091)
!8101 = !DILocation(line: 934, column: 22, scope: !8091)
!8102 = !DILocation(line: 934, column: 2, scope: !8091)
!8103 = !DILocation(line: 936, column: 20, scope: !8091)
!8104 = !DILocation(line: 936, column: 25, scope: !8091)
!8105 = !DILocation(line: 936, column: 32, scope: !8091)
!8106 = !DILocation(line: 936, column: 36, scope: !8091)
!8107 = !DILocation(line: 936, column: 43, scope: !8091)
!8108 = !DILocation(line: 937, column: 4, scope: !8091)
!8109 = !DILocation(line: 937, column: 11, scope: !8091)
!8110 = !DILocation(line: 937, column: 18, scope: !8091)
!8111 = !DILocation(line: 937, column: 25, scope: !8091)
!8112 = !DILocation(line: 936, column: 2, scope: !8091)
!8113 = !DILocation(line: 938, column: 1, scope: !8091)
!8114 = distinct !DISubprogram(name: "ufx_ops_ioctl", scope: !3, file: !3, line: 985, type: !4625, scopeLine: 987, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !284)
!8115 = !DILocalVariable(name: "addr", arg: 1, scope: !8116, file: !8117, line: 138, type: !2210)
!8116 = distinct !DISubprogram(name: "check_copy_size", scope: !8117, file: !8117, line: 138, type: !8118, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !284)
!8117 = !DIFile(filename: "./include/linux/thread_info.h", directory: "/home/lizy2001/genbc/linux")
!8118 = !DISubroutineType(types: !8119)
!8119 = !{!521, !2210, !357, !521}
!8120 = !DILocation(line: 138, column: 29, scope: !8116, inlinedAt: !8121)
!8121 = distinct !DILocation(line: 199, column: 6, scope: !8122, inlinedAt: !8127)
!8122 = distinct !DILexicalBlock(scope: !8124, file: !8123, line: 199, column: 6)
!8123 = !DIFile(filename: "./include/linux/uaccess.h", directory: "/home/lizy2001/genbc/linux")
!8124 = distinct !DISubprogram(name: "copy_to_user", scope: !8123, file: !8123, line: 197, type: !8125, scopeLine: 198, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !284)
!8125 = !DISubroutineType(types: !8126)
!8126 = !{!212, !211, !2210, !212}
!8127 = distinct !DILocation(line: 997, column: 7, scope: !8128)
!8128 = distinct !DILexicalBlock(scope: !8129, file: !3, line: 997, column: 7)
!8129 = distinct !DILexicalBlock(scope: !8130, file: !3, line: 995, column: 36)
!8130 = distinct !DILexicalBlock(scope: !8114, file: !3, line: 995, column: 6)
!8131 = !DILocalVariable(name: "bytes", arg: 2, scope: !8116, file: !8117, line: 138, type: !357)
!8132 = !DILocation(line: 138, column: 42, scope: !8116, inlinedAt: !8121)
!8133 = !DILocalVariable(name: "is_source", arg: 3, scope: !8116, file: !8117, line: 138, type: !521)
!8134 = !DILocation(line: 138, column: 54, scope: !8116, inlinedAt: !8121)
!8135 = !DILocalVariable(name: "sz", scope: !8116, file: !8117, line: 140, type: !217)
!8136 = !DILocation(line: 140, column: 6, scope: !8116, inlinedAt: !8121)
!8137 = !DILocalVariable(name: "__ret_warn_on", scope: !8138, file: !8117, line: 150, type: !217)
!8138 = distinct !DILexicalBlock(scope: !8139, file: !8117, line: 150, column: 6)
!8139 = distinct !DILexicalBlock(scope: !8116, file: !8117, line: 150, column: 6)
!8140 = !DILocation(line: 150, column: 6, scope: !8138, inlinedAt: !8121)
!8141 = !DILocalVariable(name: "to", arg: 1, scope: !8124, file: !8123, line: 197, type: !211)
!8142 = !DILocation(line: 197, column: 27, scope: !8124, inlinedAt: !8127)
!8143 = !DILocalVariable(name: "from", arg: 2, scope: !8124, file: !8123, line: 197, type: !2210)
!8144 = !DILocation(line: 197, column: 43, scope: !8124, inlinedAt: !8127)
!8145 = !DILocalVariable(name: "n", arg: 3, scope: !8124, file: !8123, line: 197, type: !212)
!8146 = !DILocation(line: 197, column: 63, scope: !8124, inlinedAt: !8127)
!8147 = !DILocalVariable(name: "v", arg: 1, scope: !8148, file: !5048, line: 23, type: !8151)
!8148 = distinct !DISubprogram(name: "arch_atomic_read", scope: !5048, file: !5048, line: 23, type: !8149, scopeLine: 24, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !284)
!8149 = !DISubroutineType(types: !8150)
!8150 = !{!217, !8151}
!8151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8152, size: 64)
!8152 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !778)
!8153 = !DILocation(line: 23, column: 61, scope: !8148, inlinedAt: !8154)
!8154 = distinct !DILocation(line: 28, column: 9, scope: !8155, inlinedAt: !8156)
!8155 = distinct !DISubprogram(name: "atomic_read", scope: !5055, file: !5055, line: 25, type: !8149, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !284)
!8156 = distinct !DILocation(line: 991, column: 7, scope: !8157)
!8157 = distinct !DILexicalBlock(scope: !8114, file: !3, line: 991, column: 6)
!8158 = !DILocalVariable(name: "v", arg: 1, scope: !8159, file: !5061, line: 69, type: !5064)
!8159 = distinct !DISubprogram(name: "instrument_atomic_read", scope: !5061, file: !5061, line: 69, type: !5062, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !284)
!8160 = !DILocation(line: 69, column: 73, scope: !8159, inlinedAt: !8161)
!8161 = distinct !DILocation(line: 27, column: 2, scope: !8155, inlinedAt: !8156)
!8162 = !DILocalVariable(name: "size", arg: 2, scope: !8159, file: !5061, line: 69, type: !357)
!8163 = !DILocation(line: 69, column: 83, scope: !8159, inlinedAt: !8161)
!8164 = !DILocalVariable(name: "v", arg: 1, scope: !8155, file: !5055, line: 25, type: !8151)
!8165 = !DILocation(line: 25, column: 29, scope: !8155, inlinedAt: !8156)
!8166 = !DILocalVariable(name: "info", arg: 1, scope: !8114, file: !3, line: 985, type: !4284)
!8167 = !DILocation(line: 985, column: 42, scope: !8114)
!8168 = !DILocalVariable(name: "cmd", arg: 2, scope: !8114, file: !3, line: 985, type: !7)
!8169 = !DILocation(line: 985, column: 61, scope: !8114)
!8170 = !DILocalVariable(name: "arg", arg: 3, scope: !8114, file: !3, line: 986, type: !212)
!8171 = !DILocation(line: 986, column: 19, scope: !8114)
!8172 = !DILocalVariable(name: "dev", scope: !8114, file: !3, line: 988, type: !4278)
!8173 = !DILocation(line: 988, column: 19, scope: !8114)
!8174 = !DILocation(line: 988, column: 25, scope: !8114)
!8175 = !DILocation(line: 988, column: 31, scope: !8114)
!8176 = !DILocalVariable(name: "area", scope: !8114, file: !3, line: 989, type: !4838)
!8177 = !DILocation(line: 989, column: 18, scope: !8114)
!8178 = !DILocation(line: 991, column: 20, scope: !8157)
!8179 = !DILocation(line: 991, column: 25, scope: !8157)
!8180 = !DILocation(line: 27, column: 25, scope: !8155, inlinedAt: !8156)
!8181 = !DILocation(line: 71, column: 19, scope: !8159, inlinedAt: !8161)
!8182 = !DILocation(line: 71, column: 22, scope: !8159, inlinedAt: !8161)
!8183 = !DILocation(line: 71, column: 2, scope: !8159, inlinedAt: !8161)
!8184 = !DILocation(line: 72, column: 2, scope: !8159, inlinedAt: !8161)
!8185 = !DILocation(line: 28, column: 26, scope: !8155, inlinedAt: !8156)
!8186 = !DILocation(line: 29, column: 9, scope: !8148, inlinedAt: !8154)
!8187 = !DILocation(line: 991, column: 7, scope: !8157)
!8188 = !DILocation(line: 991, column: 6, scope: !8114)
!8189 = !DILocation(line: 992, column: 3, scope: !8157)
!8190 = !DILocation(line: 995, column: 6, scope: !8130)
!8191 = !DILocation(line: 995, column: 10, scope: !8130)
!8192 = !DILocation(line: 995, column: 6, scope: !8114)
!8193 = !DILocalVariable(name: "edid", scope: !8129, file: !3, line: 996, type: !4418)
!8194 = !DILocation(line: 996, column: 14, scope: !8129)
!8195 = !DILocation(line: 996, column: 34, scope: !8129)
!8196 = !DILocation(line: 996, column: 21, scope: !8129)
!8197 = !DILocation(line: 997, column: 20, scope: !8128)
!8198 = !DILocation(line: 997, column: 26, scope: !8128)
!8199 = !DILocation(line: 997, column: 31, scope: !8128)
!8200 = !DILocation(line: 997, column: 37, scope: !8128)
!8201 = !DILocation(line: 997, column: 42, scope: !8128)
!8202 = !DILocation(line: 199, column: 6, scope: !8122, inlinedAt: !8127)
!8203 = !DILocation(line: 141, column: 6, scope: !8204, inlinedAt: !8121)
!8204 = distinct !DILexicalBlock(scope: !8116, file: !8117, line: 141, column: 6)
!8205 = !DILocation(line: 0, scope: !8204, inlinedAt: !8121)
!8206 = !DILocation(line: 141, column: 6, scope: !8116, inlinedAt: !8121)
!8207 = !DILocation(line: 142, column: 29, scope: !8208, inlinedAt: !8121)
!8208 = distinct !DILexicalBlock(scope: !8209, file: !8117, line: 142, column: 7)
!8209 = distinct !DILexicalBlock(scope: !8204, file: !8117, line: 141, column: 39)
!8210 = !DILocation(line: 142, column: 8, scope: !8208, inlinedAt: !8121)
!8211 = !DILocation(line: 142, column: 7, scope: !8209, inlinedAt: !8121)
!8212 = !DILocation(line: 143, column: 18, scope: !8208, inlinedAt: !8121)
!8213 = !DILocation(line: 143, column: 22, scope: !8208, inlinedAt: !8121)
!8214 = !DILocation(line: 143, column: 4, scope: !8208, inlinedAt: !8121)
!8215 = !DILocation(line: 144, column: 12, scope: !8216, inlinedAt: !8121)
!8216 = distinct !DILexicalBlock(scope: !8208, file: !8117, line: 144, column: 12)
!8217 = !DILocation(line: 144, column: 12, scope: !8208, inlinedAt: !8121)
!8218 = !DILocation(line: 145, column: 4, scope: !8216, inlinedAt: !8121)
!8219 = !DILocation(line: 147, column: 4, scope: !8216, inlinedAt: !8121)
!8220 = !DILocation(line: 148, column: 3, scope: !8209, inlinedAt: !8121)
!8221 = !DILocation(line: 150, column: 6, scope: !8222, inlinedAt: !8121)
!8222 = distinct !DILexicalBlock(scope: !8138, file: !8117, line: 150, column: 6)
!8223 = !DILocation(line: 150, column: 6, scope: !8224, inlinedAt: !8121)
!8224 = distinct !DILexicalBlock(scope: !8225, file: !8117, line: 150, column: 6)
!8225 = distinct !DILexicalBlock(scope: !8222, file: !8117, line: 150, column: 6)
!8226 = !{i32 -2145505927, i32 -2145505898, i32 -2145505852, i32 -2145505794, i32 -2145505740, i32 -2145505686, i32 -2145505631, i32 -2145505600}
!8227 = !DILocation(line: 150, column: 6, scope: !8228, inlinedAt: !8121)
!8228 = distinct !DILexicalBlock(scope: !8225, file: !8117, line: 150, column: 6)
!8229 = !{i32 -2145505180, i32 -2145505173, i32 -2145505121, i32 -2145505090, i32 -2145505060}
!8230 = !DILocation(line: 150, column: 6, scope: !8225, inlinedAt: !8121)
!8231 = !DILocation(line: 150, column: 6, scope: !8139, inlinedAt: !8121)
!8232 = !DILocation(line: 150, column: 6, scope: !8116, inlinedAt: !8121)
!8233 = !DILocation(line: 151, column: 3, scope: !8139, inlinedAt: !8121)
!8234 = !DILocation(line: 152, column: 20, scope: !8116, inlinedAt: !8121)
!8235 = !DILocation(line: 152, column: 26, scope: !8116, inlinedAt: !8121)
!8236 = !DILocation(line: 152, column: 33, scope: !8116, inlinedAt: !8121)
!8237 = !DILocation(line: 152, column: 2, scope: !8116, inlinedAt: !8121)
!8238 = !DILocation(line: 153, column: 2, scope: !8116, inlinedAt: !8121)
!8239 = !DILocation(line: 154, column: 1, scope: !8116, inlinedAt: !8121)
!8240 = !DILocation(line: 199, column: 6, scope: !8124, inlinedAt: !8127)
!8241 = !DILocation(line: 200, column: 21, scope: !8122, inlinedAt: !8127)
!8242 = !DILocation(line: 200, column: 25, scope: !8122, inlinedAt: !8127)
!8243 = !DILocation(line: 200, column: 31, scope: !8122, inlinedAt: !8127)
!8244 = !DILocation(line: 200, column: 7, scope: !8122, inlinedAt: !8127)
!8245 = !DILocation(line: 200, column: 5, scope: !8122, inlinedAt: !8127)
!8246 = !DILocation(line: 200, column: 3, scope: !8122, inlinedAt: !8127)
!8247 = !DILocation(line: 201, column: 9, scope: !8124, inlinedAt: !8127)
!8248 = !DILocation(line: 997, column: 7, scope: !8128)
!8249 = !DILocation(line: 997, column: 7, scope: !8129)
!8250 = !DILocation(line: 998, column: 4, scope: !8128)
!8251 = !DILocation(line: 999, column: 3, scope: !8129)
!8252 = !DILocation(line: 1003, column: 6, scope: !8253)
!8253 = distinct !DILexicalBlock(scope: !8114, file: !3, line: 1003, column: 6)
!8254 = !DILocation(line: 1003, column: 10, scope: !8253)
!8255 = !DILocation(line: 1003, column: 6, scope: !8114)
!8256 = !DILocation(line: 1010, column: 7, scope: !8257)
!8257 = distinct !DILexicalBlock(scope: !8258, file: !3, line: 1010, column: 7)
!8258 = distinct !DILexicalBlock(scope: !8253, file: !3, line: 1003, column: 38)
!8259 = !DILocation(line: 1010, column: 13, scope: !8257)
!8260 = !DILocation(line: 1010, column: 7, scope: !8258)
!8261 = !DILocation(line: 1011, column: 4, scope: !8257)
!8262 = !DILocation(line: 1011, column: 10, scope: !8257)
!8263 = !DILocation(line: 1011, column: 19, scope: !8257)
!8264 = !DILocation(line: 1011, column: 25, scope: !8257)
!8265 = !DILocation(line: 1013, column: 28, scope: !8258)
!8266 = !DILocation(line: 1013, column: 10, scope: !8258)
!8267 = !DILocation(line: 1013, column: 8, scope: !8258)
!8268 = !DILocation(line: 1015, column: 7, scope: !8269)
!8269 = distinct !DILexicalBlock(scope: !8258, file: !3, line: 1015, column: 7)
!8270 = !DILocation(line: 1015, column: 13, scope: !8269)
!8271 = !DILocation(line: 1015, column: 15, scope: !8269)
!8272 = !DILocation(line: 1015, column: 7, scope: !8258)
!8273 = !DILocation(line: 1016, column: 4, scope: !8269)
!8274 = !DILocation(line: 1016, column: 10, scope: !8269)
!8275 = !DILocation(line: 1016, column: 12, scope: !8269)
!8276 = !DILocation(line: 1018, column: 7, scope: !8277)
!8277 = distinct !DILexicalBlock(scope: !8258, file: !3, line: 1018, column: 7)
!8278 = !DILocation(line: 1018, column: 13, scope: !8277)
!8279 = !DILocation(line: 1018, column: 17, scope: !8277)
!8280 = !DILocation(line: 1018, column: 23, scope: !8277)
!8281 = !DILocation(line: 1018, column: 27, scope: !8277)
!8282 = !DILocation(line: 1018, column: 15, scope: !8277)
!8283 = !DILocation(line: 1018, column: 7, scope: !8258)
!8284 = !DILocation(line: 1019, column: 14, scope: !8277)
!8285 = !DILocation(line: 1019, column: 20, scope: !8277)
!8286 = !DILocation(line: 1019, column: 24, scope: !8277)
!8287 = !DILocation(line: 1019, column: 4, scope: !8277)
!8288 = !DILocation(line: 1019, column: 10, scope: !8277)
!8289 = !DILocation(line: 1019, column: 12, scope: !8277)
!8290 = !DILocation(line: 1021, column: 7, scope: !8291)
!8291 = distinct !DILexicalBlock(scope: !8258, file: !3, line: 1021, column: 7)
!8292 = !DILocation(line: 1021, column: 13, scope: !8291)
!8293 = !DILocation(line: 1021, column: 15, scope: !8291)
!8294 = !DILocation(line: 1021, column: 7, scope: !8258)
!8295 = !DILocation(line: 1022, column: 4, scope: !8291)
!8296 = !DILocation(line: 1022, column: 10, scope: !8291)
!8297 = !DILocation(line: 1022, column: 12, scope: !8291)
!8298 = !DILocation(line: 1024, column: 7, scope: !8299)
!8299 = distinct !DILexicalBlock(scope: !8258, file: !3, line: 1024, column: 7)
!8300 = !DILocation(line: 1024, column: 13, scope: !8299)
!8301 = !DILocation(line: 1024, column: 17, scope: !8299)
!8302 = !DILocation(line: 1024, column: 23, scope: !8299)
!8303 = !DILocation(line: 1024, column: 27, scope: !8299)
!8304 = !DILocation(line: 1024, column: 15, scope: !8299)
!8305 = !DILocation(line: 1024, column: 7, scope: !8258)
!8306 = !DILocation(line: 1025, column: 14, scope: !8299)
!8307 = !DILocation(line: 1025, column: 20, scope: !8299)
!8308 = !DILocation(line: 1025, column: 24, scope: !8299)
!8309 = !DILocation(line: 1025, column: 4, scope: !8299)
!8310 = !DILocation(line: 1025, column: 10, scope: !8299)
!8311 = !DILocation(line: 1025, column: 12, scope: !8299)
!8312 = !DILocation(line: 1027, column: 21, scope: !8258)
!8313 = !DILocation(line: 1027, column: 26, scope: !8258)
!8314 = !DILocation(line: 1027, column: 32, scope: !8258)
!8315 = !DILocation(line: 1027, column: 35, scope: !8258)
!8316 = !DILocation(line: 1027, column: 41, scope: !8258)
!8317 = !DILocation(line: 1027, column: 44, scope: !8258)
!8318 = !DILocation(line: 1027, column: 50, scope: !8258)
!8319 = !DILocation(line: 1027, column: 53, scope: !8258)
!8320 = !DILocation(line: 1027, column: 59, scope: !8258)
!8321 = !DILocation(line: 1027, column: 3, scope: !8258)
!8322 = !DILocation(line: 1028, column: 2, scope: !8258)
!8323 = !DILocation(line: 1030, column: 2, scope: !8114)
!8324 = !DILocation(line: 1031, column: 1, scope: !8114)
!8325 = distinct !DISubprogram(name: "ufx_ops_mmap", scope: !3, file: !3, line: 775, type: !4630, scopeLine: 776, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !284)
!8326 = !DILocalVariable(name: "info", arg: 1, scope: !8325, file: !3, line: 775, type: !4284)
!8327 = !DILocation(line: 775, column: 41, scope: !8325)
!8328 = !DILocalVariable(name: "vma", arg: 2, scope: !8325, file: !3, line: 775, type: !1012)
!8329 = !DILocation(line: 775, column: 70, scope: !8325)
!8330 = !DILocalVariable(name: "start", scope: !8325, file: !3, line: 777, type: !212)
!8331 = !DILocation(line: 777, column: 16, scope: !8325)
!8332 = !DILocation(line: 777, column: 24, scope: !8325)
!8333 = !DILocation(line: 777, column: 29, scope: !8325)
!8334 = !DILocalVariable(name: "size", scope: !8325, file: !3, line: 778, type: !212)
!8335 = !DILocation(line: 778, column: 16, scope: !8325)
!8336 = !DILocation(line: 778, column: 23, scope: !8325)
!8337 = !DILocation(line: 778, column: 28, scope: !8325)
!8338 = !DILocation(line: 778, column: 37, scope: !8325)
!8339 = !DILocation(line: 778, column: 42, scope: !8325)
!8340 = !DILocation(line: 778, column: 35, scope: !8325)
!8341 = !DILocalVariable(name: "offset", scope: !8325, file: !3, line: 779, type: !212)
!8342 = !DILocation(line: 779, column: 16, scope: !8325)
!8343 = !DILocation(line: 779, column: 25, scope: !8325)
!8344 = !DILocation(line: 779, column: 30, scope: !8325)
!8345 = !DILocation(line: 779, column: 39, scope: !8325)
!8346 = !DILocalVariable(name: "page", scope: !8325, file: !3, line: 780, type: !212)
!8347 = !DILocation(line: 780, column: 16, scope: !8325)
!8348 = !DILocalVariable(name: "pos", scope: !8325, file: !3, line: 780, type: !212)
!8349 = !DILocation(line: 780, column: 22, scope: !8325)
!8350 = !DILocation(line: 782, column: 6, scope: !8351)
!8351 = distinct !DILexicalBlock(scope: !8325, file: !3, line: 782, column: 6)
!8352 = !DILocation(line: 782, column: 11, scope: !8351)
!8353 = !DILocation(line: 782, column: 20, scope: !8351)
!8354 = !DILocation(line: 782, column: 6, scope: !8325)
!8355 = !DILocation(line: 783, column: 3, scope: !8351)
!8356 = !DILocation(line: 784, column: 6, scope: !8357)
!8357 = distinct !DILexicalBlock(scope: !8325, file: !3, line: 784, column: 6)
!8358 = !DILocation(line: 784, column: 13, scope: !8357)
!8359 = !DILocation(line: 784, column: 19, scope: !8357)
!8360 = !DILocation(line: 784, column: 23, scope: !8357)
!8361 = !DILocation(line: 784, column: 11, scope: !8357)
!8362 = !DILocation(line: 784, column: 6, scope: !8325)
!8363 = !DILocation(line: 785, column: 3, scope: !8357)
!8364 = !DILocation(line: 786, column: 6, scope: !8365)
!8365 = distinct !DILexicalBlock(scope: !8325, file: !3, line: 786, column: 6)
!8366 = !DILocation(line: 786, column: 15, scope: !8365)
!8367 = !DILocation(line: 786, column: 21, scope: !8365)
!8368 = !DILocation(line: 786, column: 25, scope: !8365)
!8369 = !DILocation(line: 786, column: 36, scope: !8365)
!8370 = !DILocation(line: 786, column: 34, scope: !8365)
!8371 = !DILocation(line: 786, column: 13, scope: !8365)
!8372 = !DILocation(line: 786, column: 6, scope: !8325)
!8373 = !DILocation(line: 787, column: 3, scope: !8365)
!8374 = !DILocation(line: 789, column: 23, scope: !8325)
!8375 = !DILocation(line: 789, column: 29, scope: !8325)
!8376 = !DILocation(line: 789, column: 33, scope: !8325)
!8377 = !DILocation(line: 789, column: 46, scope: !8325)
!8378 = !DILocation(line: 789, column: 44, scope: !8325)
!8379 = !DILocation(line: 789, column: 6, scope: !8325)
!8380 = !DILocation(line: 791, column: 2, scope: !8381)
!8381 = distinct !DILexicalBlock(scope: !8382, file: !3, line: 791, column: 2)
!8382 = distinct !DILexicalBlock(scope: !8325, file: !3, line: 791, column: 2)
!8383 = !DILocation(line: 791, column: 2, scope: !8382)
!8384 = !DILocation(line: 794, column: 2, scope: !8325)
!8385 = !DILocation(line: 794, column: 9, scope: !8325)
!8386 = !DILocation(line: 794, column: 14, scope: !8325)
!8387 = !DILocation(line: 795, column: 33, scope: !8388)
!8388 = distinct !DILexicalBlock(scope: !8325, file: !3, line: 794, column: 19)
!8389 = !DILocation(line: 795, column: 25, scope: !8388)
!8390 = !DILocation(line: 795, column: 10, scope: !8388)
!8391 = !DILocation(line: 795, column: 8, scope: !8388)
!8392 = !DILocation(line: 796, column: 23, scope: !8393)
!8393 = distinct !DILexicalBlock(scope: !8388, file: !3, line: 796, column: 7)
!8394 = !DILocation(line: 796, column: 28, scope: !8393)
!8395 = !DILocation(line: 796, column: 35, scope: !8393)
!8396 = !DILocation(line: 796, column: 52, scope: !8393)
!8397 = !DILocation(line: 796, column: 7, scope: !8393)
!8398 = !DILocation(line: 796, column: 7, scope: !8388)
!8399 = !DILocation(line: 797, column: 4, scope: !8393)
!8400 = !DILocation(line: 799, column: 9, scope: !8388)
!8401 = !DILocation(line: 800, column: 7, scope: !8388)
!8402 = !DILocation(line: 801, column: 7, scope: !8403)
!8403 = distinct !DILexicalBlock(scope: !8388, file: !3, line: 801, column: 7)
!8404 = !DILocation(line: 801, column: 12, scope: !8403)
!8405 = !DILocation(line: 801, column: 7, scope: !8388)
!8406 = !DILocation(line: 802, column: 9, scope: !8403)
!8407 = !DILocation(line: 802, column: 4, scope: !8403)
!8408 = !DILocation(line: 804, column: 9, scope: !8403)
!8409 = distinct !{!8409, !8384, !8410}
!8410 = !DILocation(line: 805, column: 2, scope: !8325)
!8411 = !DILocation(line: 807, column: 2, scope: !8325)
!8412 = !DILocation(line: 808, column: 1, scope: !8325)
!8413 = distinct !DISubprogram(name: "ufx_dpy_deferred_io", scope: !3, file: !3, line: 955, type: !4516, scopeLine: 957, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !284)
!8414 = !DILocation(line: 23, column: 61, scope: !8148, inlinedAt: !8415)
!8415 = distinct !DILocation(line: 28, column: 9, scope: !8155, inlinedAt: !8416)
!8416 = distinct !DILocation(line: 965, column: 7, scope: !8417)
!8417 = distinct !DILexicalBlock(scope: !8413, file: !3, line: 965, column: 6)
!8418 = !DILocation(line: 69, column: 73, scope: !8159, inlinedAt: !8419)
!8419 = distinct !DILocation(line: 27, column: 2, scope: !8155, inlinedAt: !8416)
!8420 = !DILocation(line: 69, column: 83, scope: !8159, inlinedAt: !8419)
!8421 = !DILocation(line: 25, column: 29, scope: !8155, inlinedAt: !8416)
!8422 = !DILocalVariable(name: "info", arg: 1, scope: !8413, file: !3, line: 955, type: !4284)
!8423 = !DILocation(line: 955, column: 49, scope: !8413)
!8424 = !DILocalVariable(name: "pagelist", arg: 2, scope: !8413, file: !3, line: 956, type: !260)
!8425 = !DILocation(line: 956, column: 23, scope: !8413)
!8426 = !DILocalVariable(name: "cur", scope: !8413, file: !3, line: 958, type: !752)
!8427 = !DILocation(line: 958, column: 15, scope: !8413)
!8428 = !DILocalVariable(name: "fbdefio", scope: !8413, file: !3, line: 959, type: !4504)
!8429 = !DILocation(line: 959, column: 25, scope: !8413)
!8430 = !DILocation(line: 959, column: 35, scope: !8413)
!8431 = !DILocation(line: 959, column: 41, scope: !8413)
!8432 = !DILocalVariable(name: "dev", scope: !8413, file: !3, line: 960, type: !4278)
!8433 = !DILocation(line: 960, column: 19, scope: !8413)
!8434 = !DILocation(line: 960, column: 25, scope: !8413)
!8435 = !DILocation(line: 960, column: 31, scope: !8413)
!8436 = !DILocation(line: 962, column: 7, scope: !8437)
!8437 = distinct !DILexicalBlock(scope: !8413, file: !3, line: 962, column: 6)
!8438 = !DILocation(line: 962, column: 6, scope: !8413)
!8439 = !DILocation(line: 963, column: 3, scope: !8437)
!8440 = !DILocation(line: 965, column: 20, scope: !8417)
!8441 = !DILocation(line: 965, column: 25, scope: !8417)
!8442 = !DILocation(line: 27, column: 25, scope: !8155, inlinedAt: !8416)
!8443 = !DILocation(line: 71, column: 19, scope: !8159, inlinedAt: !8419)
!8444 = !DILocation(line: 71, column: 22, scope: !8159, inlinedAt: !8419)
!8445 = !DILocation(line: 71, column: 2, scope: !8159, inlinedAt: !8419)
!8446 = !DILocation(line: 72, column: 2, scope: !8159, inlinedAt: !8419)
!8447 = !DILocation(line: 28, column: 26, scope: !8155, inlinedAt: !8416)
!8448 = !DILocation(line: 29, column: 9, scope: !8148, inlinedAt: !8415)
!8449 = !DILocation(line: 965, column: 7, scope: !8417)
!8450 = !DILocation(line: 965, column: 6, scope: !8413)
!8451 = !DILocation(line: 966, column: 3, scope: !8417)
!8452 = !DILocalVariable(name: "__mptr", scope: !8453, file: !3, line: 969, type: !211)
!8453 = distinct !DILexicalBlock(scope: !8454, file: !3, line: 969, column: 2)
!8454 = distinct !DILexicalBlock(scope: !8413, file: !3, line: 969, column: 2)
!8455 = !DILocation(line: 969, column: 2, scope: !8453)
!8456 = !DILocation(line: 969, column: 2, scope: !8457)
!8457 = distinct !DILexicalBlock(scope: !8453, file: !3, line: 969, column: 2)
!8458 = !DILocation(line: 969, column: 2, scope: !8454)
!8459 = !DILocation(line: 969, column: 2, scope: !8460)
!8460 = distinct !DILexicalBlock(scope: !8454, file: !3, line: 969, column: 2)
!8461 = !DILocalVariable(name: "x", scope: !8462, file: !3, line: 972, type: !8463)
!8462 = distinct !DILexicalBlock(scope: !8460, file: !3, line: 969, column: 52)
!8463 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !217)
!8464 = !DILocation(line: 972, column: 13, scope: !8462)
!8465 = !DILocalVariable(name: "width", scope: !8462, file: !3, line: 973, type: !8463)
!8466 = !DILocation(line: 973, column: 13, scope: !8462)
!8467 = !DILocation(line: 973, column: 21, scope: !8462)
!8468 = !DILocation(line: 973, column: 26, scope: !8462)
!8469 = !DILocation(line: 973, column: 32, scope: !8462)
!8470 = !DILocation(line: 973, column: 36, scope: !8462)
!8471 = !DILocalVariable(name: "y", scope: !8462, file: !3, line: 974, type: !8463)
!8472 = !DILocation(line: 974, column: 13, scope: !8462)
!8473 = !DILocation(line: 974, column: 18, scope: !8462)
!8474 = !DILocation(line: 974, column: 23, scope: !8462)
!8475 = !DILocation(line: 974, column: 29, scope: !8462)
!8476 = !DILocation(line: 974, column: 47, scope: !8462)
!8477 = !DILocation(line: 974, column: 53, scope: !8462)
!8478 = !DILocation(line: 974, column: 46, scope: !8462)
!8479 = !DILocation(line: 974, column: 44, scope: !8462)
!8480 = !DILocation(line: 974, column: 17, scope: !8462)
!8481 = !DILocalVariable(name: "height", scope: !8462, file: !3, line: 975, type: !217)
!8482 = !DILocation(line: 975, column: 7, scope: !8462)
!8483 = !DILocation(line: 975, column: 30, scope: !8462)
!8484 = !DILocation(line: 975, column: 36, scope: !8462)
!8485 = !DILocation(line: 975, column: 29, scope: !8462)
!8486 = !DILocation(line: 975, column: 27, scope: !8462)
!8487 = !DILocation(line: 975, column: 42, scope: !8462)
!8488 = !DILocation(line: 975, column: 16, scope: !8462)
!8489 = !DILocalVariable(name: "__UNIQUE_ID___x260", scope: !8490, file: !3, line: 976, type: !217)
!8490 = distinct !DILexicalBlock(scope: !8462, file: !3, line: 976, column: 12)
!8491 = !DILocation(line: 976, column: 12, scope: !8490)
!8492 = !DILocalVariable(name: "__UNIQUE_ID___y261", scope: !8490, file: !3, line: 976, type: !217)
!8493 = !DILocation(line: 976, column: 10, scope: !8462)
!8494 = !DILocation(line: 978, column: 3, scope: !8462)
!8495 = !DILocation(line: 978, column: 3, scope: !8496)
!8496 = distinct !DILexicalBlock(scope: !8497, file: !3, line: 978, column: 3)
!8497 = distinct !DILexicalBlock(scope: !8462, file: !3, line: 978, column: 3)
!8498 = !DILocation(line: 978, column: 3, scope: !8497)
!8499 = !DILocation(line: 978, column: 3, scope: !8500)
!8500 = distinct !DILexicalBlock(scope: !8496, file: !3, line: 978, column: 3)
!8501 = !DILocation(line: 978, column: 3, scope: !8502)
!8502 = distinct !DILexicalBlock(scope: !8500, file: !3, line: 978, column: 3)
!8503 = !DILocation(line: 978, column: 3, scope: !8504)
!8504 = distinct !DILexicalBlock(scope: !8500, file: !3, line: 978, column: 3)
!8505 = !{i32 -2140961314, i32 -2140961285, i32 -2140961239, i32 -2140961181, i32 -2140961127, i32 -2140961073, i32 -2140961018, i32 -2140960987}
!8506 = !DILocation(line: 978, column: 3, scope: !8507)
!8507 = distinct !DILexicalBlock(scope: !8508, file: !3, line: 978, column: 3)
!8508 = distinct !DILexicalBlock(scope: !8500, file: !3, line: 978, column: 3)
!8509 = !{i32 -2140960535, i32 -2140960528, i32 -2140960474, i32 -2140960443, i32 -2140960413}
!8510 = !DILocation(line: 978, column: 3, scope: !8508)
!8511 = !DILocation(line: 979, column: 3, scope: !8462)
!8512 = !DILocation(line: 979, column: 3, scope: !8513)
!8513 = distinct !DILexicalBlock(scope: !8514, file: !3, line: 979, column: 3)
!8514 = distinct !DILexicalBlock(scope: !8462, file: !3, line: 979, column: 3)
!8515 = !DILocation(line: 979, column: 3, scope: !8514)
!8516 = !DILocation(line: 979, column: 3, scope: !8517)
!8517 = distinct !DILexicalBlock(scope: !8513, file: !3, line: 979, column: 3)
!8518 = !DILocation(line: 979, column: 3, scope: !8519)
!8519 = distinct !DILexicalBlock(scope: !8517, file: !3, line: 979, column: 3)
!8520 = !DILocation(line: 979, column: 3, scope: !8521)
!8521 = distinct !DILexicalBlock(scope: !8517, file: !3, line: 979, column: 3)
!8522 = !{i32 -2140960062, i32 -2140960033, i32 -2140959987, i32 -2140959929, i32 -2140959875, i32 -2140959821, i32 -2140959766, i32 -2140959735}
!8523 = !DILocation(line: 979, column: 3, scope: !8524)
!8524 = distinct !DILexicalBlock(scope: !8525, file: !3, line: 979, column: 3)
!8525 = distinct !DILexicalBlock(scope: !8517, file: !3, line: 979, column: 3)
!8526 = !{i32 -2140959283, i32 -2140959276, i32 -2140959222, i32 -2140959191, i32 -2140959161}
!8527 = !DILocation(line: 979, column: 3, scope: !8525)
!8528 = !DILocation(line: 981, column: 21, scope: !8462)
!8529 = !DILocation(line: 981, column: 29, scope: !8462)
!8530 = !DILocation(line: 981, column: 32, scope: !8462)
!8531 = !DILocation(line: 981, column: 39, scope: !8462)
!8532 = !DILocation(line: 981, column: 3, scope: !8462)
!8533 = !DILocation(line: 982, column: 2, scope: !8462)
!8534 = !DILocalVariable(name: "__mptr", scope: !8535, file: !3, line: 969, type: !211)
!8535 = distinct !DILexicalBlock(scope: !8460, file: !3, line: 969, column: 2)
!8536 = !DILocation(line: 969, column: 2, scope: !8535)
!8537 = !DILocation(line: 969, column: 2, scope: !8538)
!8538 = distinct !DILexicalBlock(scope: !8535, file: !3, line: 969, column: 2)
!8539 = distinct !{!8539, !8458, !8540}
!8540 = !DILocation(line: 982, column: 2, scope: !8454)
!8541 = !DILocation(line: 983, column: 1, scope: !8413)
!8542 = distinct !DISubprogram(name: "ufx_handle_damage", scope: !3, file: !3, line: 849, type: !8543, scopeLine: 851, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !284)
!8543 = !DISubroutineType(types: !8544)
!8544 = !{!217, !4278, !217, !217, !217, !217}
!8545 = !DILocation(line: 23, column: 61, scope: !8148, inlinedAt: !8546)
!8546 = distinct !DILocation(line: 28, column: 9, scope: !8155, inlinedAt: !8547)
!8547 = distinct !DILocation(line: 860, column: 7, scope: !8548)
!8548 = distinct !DILexicalBlock(scope: !8542, file: !3, line: 860, column: 6)
!8549 = !DILocation(line: 69, column: 73, scope: !8159, inlinedAt: !8550)
!8550 = distinct !DILocation(line: 27, column: 2, scope: !8155, inlinedAt: !8547)
!8551 = !DILocation(line: 69, column: 83, scope: !8159, inlinedAt: !8550)
!8552 = !DILocation(line: 25, column: 29, scope: !8155, inlinedAt: !8547)
!8553 = !DILocalVariable(name: "dev", arg: 1, scope: !8542, file: !3, line: 849, type: !4278)
!8554 = !DILocation(line: 849, column: 47, scope: !8542)
!8555 = !DILocalVariable(name: "x", arg: 2, scope: !8542, file: !3, line: 849, type: !217)
!8556 = !DILocation(line: 849, column: 56, scope: !8542)
!8557 = !DILocalVariable(name: "y", arg: 3, scope: !8542, file: !3, line: 849, type: !217)
!8558 = !DILocation(line: 849, column: 63, scope: !8542)
!8559 = !DILocalVariable(name: "width", arg: 4, scope: !8542, file: !3, line: 850, type: !217)
!8560 = !DILocation(line: 850, column: 6, scope: !8542)
!8561 = !DILocalVariable(name: "height", arg: 5, scope: !8542, file: !3, line: 850, type: !217)
!8562 = !DILocation(line: 850, column: 17, scope: !8542)
!8563 = !DILocalVariable(name: "packed_line_len", scope: !8542, file: !3, line: 852, type: !357)
!8564 = !DILocation(line: 852, column: 9, scope: !8542)
!8565 = !DILocation(line: 852, column: 27, scope: !8542)
!8566 = !DILocalVariable(name: "len", scope: !8542, file: !3, line: 853, type: !217)
!8567 = !DILocation(line: 853, column: 6, scope: !8542)
!8568 = !DILocalVariable(name: "status", scope: !8542, file: !3, line: 853, type: !217)
!8569 = !DILocation(line: 853, column: 11, scope: !8542)
!8570 = !DILocalVariable(name: "urb_lines", scope: !8542, file: !3, line: 853, type: !217)
!8571 = !DILocation(line: 853, column: 19, scope: !8542)
!8572 = !DILocalVariable(name: "start_line", scope: !8542, file: !3, line: 853, type: !217)
!8573 = !DILocation(line: 853, column: 30, scope: !8542)
!8574 = !DILocation(line: 855, column: 7, scope: !8575)
!8575 = distinct !DILexicalBlock(scope: !8542, file: !3, line: 855, column: 6)
!8576 = !DILocation(line: 855, column: 13, scope: !8575)
!8577 = !DILocation(line: 855, column: 19, scope: !8575)
!8578 = !DILocation(line: 855, column: 23, scope: !8575)
!8579 = !DILocation(line: 855, column: 30, scope: !8575)
!8580 = !DILocation(line: 855, column: 36, scope: !8575)
!8581 = !DILocation(line: 856, column: 7, scope: !8575)
!8582 = !DILocation(line: 856, column: 11, scope: !8575)
!8583 = !DILocation(line: 856, column: 9, scope: !8575)
!8584 = !DILocation(line: 856, column: 19, scope: !8575)
!8585 = !DILocation(line: 856, column: 24, scope: !8575)
!8586 = !DILocation(line: 856, column: 30, scope: !8575)
!8587 = !DILocation(line: 856, column: 34, scope: !8575)
!8588 = !DILocation(line: 856, column: 17, scope: !8575)
!8589 = !DILocation(line: 856, column: 40, scope: !8575)
!8590 = !DILocation(line: 857, column: 7, scope: !8575)
!8591 = !DILocation(line: 857, column: 11, scope: !8575)
!8592 = !DILocation(line: 857, column: 9, scope: !8575)
!8593 = !DILocation(line: 857, column: 20, scope: !8575)
!8594 = !DILocation(line: 857, column: 25, scope: !8575)
!8595 = !DILocation(line: 857, column: 31, scope: !8575)
!8596 = !DILocation(line: 857, column: 35, scope: !8575)
!8597 = !DILocation(line: 857, column: 18, scope: !8575)
!8598 = !DILocation(line: 855, column: 6, scope: !8542)
!8599 = !DILocation(line: 858, column: 3, scope: !8575)
!8600 = !DILocation(line: 860, column: 20, scope: !8548)
!8601 = !DILocation(line: 860, column: 25, scope: !8548)
!8602 = !DILocation(line: 27, column: 25, scope: !8155, inlinedAt: !8547)
!8603 = !DILocation(line: 71, column: 19, scope: !8159, inlinedAt: !8550)
!8604 = !DILocation(line: 71, column: 22, scope: !8159, inlinedAt: !8550)
!8605 = !DILocation(line: 71, column: 2, scope: !8159, inlinedAt: !8550)
!8606 = !DILocation(line: 72, column: 2, scope: !8159, inlinedAt: !8550)
!8607 = !DILocation(line: 28, column: 26, scope: !8155, inlinedAt: !8547)
!8608 = !DILocation(line: 29, column: 9, scope: !8148, inlinedAt: !8546)
!8609 = !DILocation(line: 860, column: 7, scope: !8548)
!8610 = !DILocation(line: 860, column: 6, scope: !8542)
!8611 = !DILocation(line: 861, column: 3, scope: !8548)
!8612 = !DILocation(line: 863, column: 2, scope: !8542)
!8613 = !DILocation(line: 863, column: 9, scope: !8542)
!8614 = !DILocation(line: 863, column: 22, scope: !8542)
!8615 = !DILocation(line: 863, column: 20, scope: !8542)
!8616 = !DILocalVariable(name: "urb", scope: !8617, file: !3, line: 864, type: !4777)
!8617 = distinct !DILexicalBlock(scope: !8542, file: !3, line: 863, column: 30)
!8618 = !DILocation(line: 864, column: 15, scope: !8617)
!8619 = !DILocation(line: 864, column: 33, scope: !8617)
!8620 = !DILocation(line: 864, column: 21, scope: !8617)
!8621 = !DILocation(line: 865, column: 8, scope: !8622)
!8622 = distinct !DILexicalBlock(scope: !8617, file: !3, line: 865, column: 7)
!8623 = !DILocation(line: 865, column: 7, scope: !8617)
!8624 = !DILocation(line: 866, column: 4, scope: !8625)
!8625 = distinct !DILexicalBlock(scope: !8622, file: !3, line: 865, column: 13)
!8626 = !DILocation(line: 867, column: 4, scope: !8625)
!8627 = !DILocation(line: 871, column: 3, scope: !8617)
!8628 = !DILocation(line: 871, column: 3, scope: !8629)
!8629 = distinct !DILexicalBlock(scope: !8630, file: !3, line: 871, column: 3)
!8630 = distinct !DILexicalBlock(scope: !8617, file: !3, line: 871, column: 3)
!8631 = !DILocation(line: 871, column: 3, scope: !8630)
!8632 = !DILocation(line: 871, column: 3, scope: !8633)
!8633 = distinct !DILexicalBlock(scope: !8629, file: !3, line: 871, column: 3)
!8634 = !DILocation(line: 871, column: 3, scope: !8635)
!8635 = distinct !DILexicalBlock(scope: !8633, file: !3, line: 871, column: 3)
!8636 = !DILocation(line: 871, column: 3, scope: !8637)
!8637 = distinct !DILexicalBlock(scope: !8633, file: !3, line: 871, column: 3)
!8638 = !{i32 -2140973579, i32 -2140973550, i32 -2140973504, i32 -2140973446, i32 -2140973392, i32 -2140973338, i32 -2140973283, i32 -2140973252}
!8639 = !DILocation(line: 871, column: 3, scope: !8640)
!8640 = distinct !DILexicalBlock(scope: !8641, file: !3, line: 871, column: 3)
!8641 = distinct !DILexicalBlock(scope: !8633, file: !3, line: 871, column: 3)
!8642 = !{i32 -2140972800, i32 -2140972793, i32 -2140972739, i32 -2140972708, i32 -2140972678}
!8643 = !DILocation(line: 871, column: 3, scope: !8641)
!8644 = !DILocation(line: 874, column: 16, scope: !8617)
!8645 = !DILocation(line: 874, column: 21, scope: !8617)
!8646 = !DILocation(line: 874, column: 44, scope: !8617)
!8647 = !DILocation(line: 874, column: 15, scope: !8617)
!8648 = !DILocation(line: 874, column: 52, scope: !8617)
!8649 = !DILocation(line: 874, column: 50, scope: !8617)
!8650 = !DILocation(line: 874, column: 13, scope: !8617)
!8651 = !DILocalVariable(name: "__UNIQUE_ID___x252", scope: !8652, file: !3, line: 877, type: !217)
!8652 = distinct !DILexicalBlock(scope: !8617, file: !3, line: 877, column: 15)
!8653 = !DILocation(line: 877, column: 15, scope: !8652)
!8654 = !DILocalVariable(name: "__UNIQUE_ID___y253", scope: !8652, file: !3, line: 877, type: !217)
!8655 = !DILocation(line: 877, column: 13, scope: !8617)
!8656 = !DILocation(line: 879, column: 10, scope: !8617)
!8657 = !DILocation(line: 879, column: 15, scope: !8617)
!8658 = !DILocation(line: 879, column: 35, scope: !8617)
!8659 = !DILocation(line: 879, column: 40, scope: !8617)
!8660 = !DILocation(line: 879, column: 3, scope: !8617)
!8661 = !DILocation(line: 881, column: 16, scope: !8617)
!8662 = !DILocation(line: 881, column: 21, scope: !8617)
!8663 = !DILocation(line: 881, column: 26, scope: !8617)
!8664 = !DILocation(line: 881, column: 43, scope: !8617)
!8665 = !DILocation(line: 881, column: 47, scope: !8617)
!8666 = !DILocation(line: 881, column: 51, scope: !8617)
!8667 = !DILocation(line: 881, column: 49, scope: !8617)
!8668 = !DILocation(line: 881, column: 64, scope: !8617)
!8669 = !DILocation(line: 881, column: 71, scope: !8617)
!8670 = !DILocation(line: 881, column: 3, scope: !8617)
!8671 = !DILocation(line: 882, column: 15, scope: !8617)
!8672 = !DILocation(line: 882, column: 33, scope: !8617)
!8673 = !DILocation(line: 882, column: 31, scope: !8617)
!8674 = !DILocation(line: 882, column: 12, scope: !8617)
!8675 = !DILocation(line: 882, column: 9, scope: !8617)
!8676 = !DILocation(line: 882, column: 7, scope: !8617)
!8677 = !DILocation(line: 884, column: 27, scope: !8617)
!8678 = !DILocation(line: 884, column: 32, scope: !8617)
!8679 = !DILocation(line: 884, column: 37, scope: !8617)
!8680 = !DILocation(line: 884, column: 12, scope: !8617)
!8681 = !DILocation(line: 884, column: 10, scope: !8617)
!8682 = !DILocation(line: 885, column: 3, scope: !8683)
!8683 = distinct !DILexicalBlock(scope: !8684, file: !3, line: 885, column: 3)
!8684 = distinct !DILexicalBlock(scope: !8617, file: !3, line: 885, column: 3)
!8685 = !DILocation(line: 885, column: 3, scope: !8684)
!8686 = !DILocation(line: 885, column: 3, scope: !8687)
!8687 = distinct !DILexicalBlock(scope: !8683, file: !3, line: 885, column: 3)
!8688 = !DILocation(line: 887, column: 17, scope: !8617)
!8689 = !DILocation(line: 887, column: 14, scope: !8617)
!8690 = distinct !{!8690, !8612, !8691}
!8691 = !DILocation(line: 888, column: 2, scope: !8542)
!8692 = !DILocation(line: 890, column: 2, scope: !8542)
!8693 = !DILocation(line: 891, column: 1, scope: !8542)
!8694 = distinct !DISubprogram(name: "kasan_check_read", scope: !7398, file: !7398, line: 34, type: !7399, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !284)
!8695 = !DILocalVariable(name: "p", arg: 1, scope: !8694, file: !7398, line: 34, type: !5064)
!8696 = !DILocation(line: 34, column: 58, scope: !8694)
!8697 = !DILocalVariable(name: "size", arg: 2, scope: !8694, file: !7398, line: 34, type: !7)
!8698 = !DILocation(line: 34, column: 74, scope: !8694)
!8699 = !DILocation(line: 36, column: 2, scope: !8694)
!8700 = distinct !DISubprogram(name: "ufx_get_urb", scope: !3, file: !3, line: 1898, type: !8701, scopeLine: 1899, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !284)
!8701 = !DISubroutineType(types: !8702)
!8702 = !{!4777, !4278}
!8703 = !DILocation(line: 407, column: 64, scope: !7503, inlinedAt: !8704)
!8704 = distinct !DILocation(line: 1922, column: 2, scope: !8700)
!8705 = !DILocation(line: 407, column: 84, scope: !7503, inlinedAt: !8704)
!8706 = !DILocation(line: 327, column: 67, scope: !5701, inlinedAt: !8707)
!8707 = distinct !DILocation(line: 1915, column: 2, scope: !8708)
!8708 = distinct !DILexicalBlock(scope: !8709, file: !3, line: 1915, column: 2)
!8709 = distinct !DILexicalBlock(scope: !8710, file: !3, line: 1915, column: 2)
!8710 = distinct !DILexicalBlock(scope: !8711, file: !3, line: 1915, column: 2)
!8711 = distinct !DILexicalBlock(scope: !8712, file: !3, line: 1915, column: 2)
!8712 = distinct !DILexicalBlock(scope: !8700, file: !3, line: 1915, column: 2)
!8713 = !DILocation(line: 39, column: 55, scope: !5047, inlinedAt: !8714)
!8714 = distinct !DILocation(line: 46, column: 2, scope: !5054, inlinedAt: !8715)
!8715 = distinct !DILocation(line: 1909, column: 3, scope: !8716)
!8716 = distinct !DILexicalBlock(scope: !8717, file: !3, line: 1908, column: 11)
!8717 = distinct !DILexicalBlock(scope: !8700, file: !3, line: 1908, column: 6)
!8718 = !DILocation(line: 39, column: 62, scope: !5047, inlinedAt: !8714)
!8719 = !DILocation(line: 84, column: 74, scope: !5060, inlinedAt: !8720)
!8720 = distinct !DILocation(line: 45, column: 2, scope: !5054, inlinedAt: !8715)
!8721 = !DILocation(line: 84, column: 84, scope: !5060, inlinedAt: !8720)
!8722 = !DILocation(line: 43, column: 22, scope: !5054, inlinedAt: !8715)
!8723 = !DILocation(line: 43, column: 29, scope: !5054, inlinedAt: !8715)
!8724 = !DILocalVariable(name: "dev", arg: 1, scope: !8700, file: !3, line: 1898, type: !4278)
!8725 = !DILocation(line: 1898, column: 49, scope: !8700)
!8726 = !DILocalVariable(name: "ret", scope: !8700, file: !3, line: 1900, type: !217)
!8727 = !DILocation(line: 1900, column: 6, scope: !8700)
!8728 = !DILocalVariable(name: "entry", scope: !8700, file: !3, line: 1901, type: !260)
!8729 = !DILocation(line: 1901, column: 20, scope: !8700)
!8730 = !DILocalVariable(name: "unode", scope: !8700, file: !3, line: 1902, type: !4273)
!8731 = !DILocation(line: 1902, column: 19, scope: !8700)
!8732 = !DILocalVariable(name: "urb", scope: !8700, file: !3, line: 1903, type: !4777)
!8733 = !DILocation(line: 1903, column: 14, scope: !8700)
!8734 = !DILocalVariable(name: "flags", scope: !8700, file: !3, line: 1904, type: !212)
!8735 = !DILocation(line: 1904, column: 16, scope: !8700)
!8736 = !DILocation(line: 1907, column: 22, scope: !8700)
!8737 = !DILocation(line: 1907, column: 27, scope: !8700)
!8738 = !DILocation(line: 1907, column: 32, scope: !8700)
!8739 = !DILocation(line: 1907, column: 8, scope: !8700)
!8740 = !DILocation(line: 1907, column: 6, scope: !8700)
!8741 = !DILocation(line: 1908, column: 6, scope: !8717)
!8742 = !DILocation(line: 1908, column: 6, scope: !8700)
!8743 = !DILocation(line: 1909, column: 15, scope: !8716)
!8744 = !DILocation(line: 1909, column: 20, scope: !8716)
!8745 = !DILocation(line: 45, column: 26, scope: !5054, inlinedAt: !8715)
!8746 = !DILocation(line: 86, column: 20, scope: !5060, inlinedAt: !8720)
!8747 = !DILocation(line: 86, column: 23, scope: !5060, inlinedAt: !8720)
!8748 = !DILocation(line: 86, column: 2, scope: !5060, inlinedAt: !8720)
!8749 = !DILocation(line: 87, column: 2, scope: !5060, inlinedAt: !8720)
!8750 = !DILocation(line: 46, column: 18, scope: !5054, inlinedAt: !8715)
!8751 = !DILocation(line: 46, column: 21, scope: !5054, inlinedAt: !8715)
!8752 = !DILocation(line: 41, column: 2, scope: !5271, inlinedAt: !8714)
!8753 = !DILocation(line: 1910, column: 3, scope: !8716)
!8754 = !DILocation(line: 1912, column: 3, scope: !8716)
!8755 = !DILocation(line: 1915, column: 2, scope: !8700)
!8756 = !DILocation(line: 1915, column: 2, scope: !8712)
!8757 = !DILocalVariable(name: "__dummy", scope: !8758, file: !3, line: 1915, type: !212)
!8758 = distinct !DILexicalBlock(scope: !8711, file: !3, line: 1915, column: 2)
!8759 = !DILocation(line: 1915, column: 2, scope: !8758)
!8760 = !DILocalVariable(name: "__dummy2", scope: !8758, file: !3, line: 1915, type: !212)
!8761 = !DILocation(line: 1915, column: 2, scope: !8711)
!8762 = !DILocation(line: 1915, column: 2, scope: !8710)
!8763 = !DILocation(line: 1915, column: 2, scope: !8764)
!8764 = distinct !DILexicalBlock(scope: !8710, file: !3, line: 1915, column: 2)
!8765 = !DILocalVariable(name: "__dummy", scope: !8766, file: !3, line: 1915, type: !212)
!8766 = distinct !DILexicalBlock(scope: !8767, file: !3, line: 1915, column: 2)
!8767 = distinct !DILexicalBlock(scope: !8764, file: !3, line: 1915, column: 2)
!8768 = !DILocation(line: 1915, column: 2, scope: !8766)
!8769 = !DILocalVariable(name: "__dummy2", scope: !8766, file: !3, line: 1915, type: !212)
!8770 = !DILocation(line: 1915, column: 2, scope: !8767)
!8771 = !DILocation(line: 1915, column: 2, scope: !8709)
!8772 = !{i32 -2140922633}
!8773 = !DILocation(line: 1915, column: 2, scope: !8708)
!8774 = !DILocation(line: 329, column: 10, scope: !5701, inlinedAt: !8707)
!8775 = !DILocation(line: 329, column: 16, scope: !5701, inlinedAt: !8707)
!8776 = !DILocation(line: 1917, column: 2, scope: !8700)
!8777 = !DILocation(line: 1917, column: 2, scope: !8778)
!8778 = distinct !DILexicalBlock(scope: !8779, file: !3, line: 1917, column: 2)
!8779 = distinct !DILexicalBlock(scope: !8700, file: !3, line: 1917, column: 2)
!8780 = !DILocation(line: 1917, column: 2, scope: !8779)
!8781 = !DILocation(line: 1917, column: 2, scope: !8782)
!8782 = distinct !DILexicalBlock(scope: !8778, file: !3, line: 1917, column: 2)
!8783 = !DILocation(line: 1917, column: 2, scope: !8784)
!8784 = distinct !DILexicalBlock(scope: !8782, file: !3, line: 1917, column: 2)
!8785 = !DILocation(line: 1917, column: 2, scope: !8786)
!8786 = distinct !DILexicalBlock(scope: !8782, file: !3, line: 1917, column: 2)
!8787 = !{i32 -2140922193, i32 -2140922164, i32 -2140922118, i32 -2140922060, i32 -2140922006, i32 -2140921952, i32 -2140921897, i32 -2140921866}
!8788 = !DILocation(line: 1917, column: 2, scope: !8789)
!8789 = distinct !DILexicalBlock(scope: !8790, file: !3, line: 1917, column: 2)
!8790 = distinct !DILexicalBlock(scope: !8782, file: !3, line: 1917, column: 2)
!8791 = !{i32 -2140921413, i32 -2140921406, i32 -2140921352, i32 -2140921321, i32 -2140921291}
!8792 = !DILocation(line: 1917, column: 2, scope: !8790)
!8793 = !DILocation(line: 1918, column: 10, scope: !8700)
!8794 = !DILocation(line: 1918, column: 15, scope: !8700)
!8795 = !DILocation(line: 1918, column: 20, scope: !8700)
!8796 = !DILocation(line: 1918, column: 25, scope: !8700)
!8797 = !DILocation(line: 1918, column: 8, scope: !8700)
!8798 = !DILocation(line: 1919, column: 16, scope: !8700)
!8799 = !DILocation(line: 1919, column: 2, scope: !8700)
!8800 = !DILocation(line: 1920, column: 2, scope: !8700)
!8801 = !DILocation(line: 1920, column: 7, scope: !8700)
!8802 = !DILocation(line: 1920, column: 12, scope: !8700)
!8803 = !DILocation(line: 1920, column: 21, scope: !8700)
!8804 = !DILocation(line: 1922, column: 26, scope: !8700)
!8805 = !DILocation(line: 1922, column: 31, scope: !8700)
!8806 = !DILocation(line: 1922, column: 36, scope: !8700)
!8807 = !DILocation(line: 1922, column: 42, scope: !8700)
!8808 = !DILocation(line: 409, column: 2, scope: !7612, inlinedAt: !8704)
!8809 = !DILocation(line: 409, column: 2, scope: !7617, inlinedAt: !8704)
!8810 = !DILocation(line: 409, column: 2, scope: !7618, inlinedAt: !8704)
!8811 = !DILocation(line: 409, column: 2, scope: !7625, inlinedAt: !8704)
!8812 = !DILocation(line: 409, column: 2, scope: !7628, inlinedAt: !8704)
!8813 = !DILocalVariable(name: "__mptr", scope: !8814, file: !3, line: 1924, type: !211)
!8814 = distinct !DILexicalBlock(scope: !8700, file: !3, line: 1924, column: 10)
!8815 = !DILocation(line: 1924, column: 10, scope: !8814)
!8816 = !DILocation(line: 1924, column: 10, scope: !8817)
!8817 = distinct !DILexicalBlock(scope: !8814, file: !3, line: 1924, column: 10)
!8818 = !DILocation(line: 1924, column: 8, scope: !8700)
!8819 = !DILocation(line: 1925, column: 8, scope: !8700)
!8820 = !DILocation(line: 1925, column: 15, scope: !8700)
!8821 = !DILocation(line: 1925, column: 6, scope: !8700)
!8822 = !DILocation(line: 1925, column: 2, scope: !8700)
!8823 = !DILabel(scope: !8700, name: "error", file: !3, line: 1927)
!8824 = !DILocation(line: 1927, column: 1, scope: !8700)
!8825 = !DILocation(line: 1928, column: 9, scope: !8700)
!8826 = !DILocation(line: 1928, column: 2, scope: !8700)
!8827 = distinct !DISubprogram(name: "ufx_raw_rect", scope: !3, file: !3, line: 810, type: !8828, scopeLine: 812, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !284)
!8828 = !DISubroutineType(types: !8829)
!8829 = !{null, !4278, !4846, !217, !217, !217, !217}
!8830 = !DILocalVariable(name: "dev", arg: 1, scope: !8827, file: !3, line: 810, type: !4278)
!8831 = !DILocation(line: 810, column: 43, scope: !8827)
!8832 = !DILocalVariable(name: "cmd", arg: 2, scope: !8827, file: !3, line: 810, type: !4846)
!8833 = !DILocation(line: 810, column: 53, scope: !8827)
!8834 = !DILocalVariable(name: "x", arg: 3, scope: !8827, file: !3, line: 810, type: !217)
!8835 = !DILocation(line: 810, column: 62, scope: !8827)
!8836 = !DILocalVariable(name: "y", arg: 4, scope: !8827, file: !3, line: 810, type: !217)
!8837 = !DILocation(line: 810, column: 69, scope: !8827)
!8838 = !DILocalVariable(name: "width", arg: 5, scope: !8827, file: !3, line: 811, type: !217)
!8839 = !DILocation(line: 811, column: 6, scope: !8827)
!8840 = !DILocalVariable(name: "height", arg: 6, scope: !8827, file: !3, line: 811, type: !217)
!8841 = !DILocation(line: 811, column: 17, scope: !8827)
!8842 = !DILocalVariable(name: "packed_line_len", scope: !8827, file: !3, line: 813, type: !357)
!8843 = !DILocation(line: 813, column: 9, scope: !8827)
!8844 = !DILocation(line: 813, column: 27, scope: !8827)
!8845 = !DILocalVariable(name: "packed_rect_len", scope: !8827, file: !3, line: 814, type: !357)
!8846 = !DILocation(line: 814, column: 9, scope: !8827)
!8847 = !DILocation(line: 814, column: 27, scope: !8827)
!8848 = !DILocation(line: 814, column: 45, scope: !8827)
!8849 = !DILocation(line: 814, column: 43, scope: !8827)
!8850 = !DILocalVariable(name: "line", scope: !8827, file: !3, line: 815, type: !217)
!8851 = !DILocation(line: 815, column: 6, scope: !8827)
!8852 = !DILocation(line: 817, column: 2, scope: !8827)
!8853 = !DILocation(line: 817, column: 2, scope: !8854)
!8854 = distinct !DILexicalBlock(scope: !8855, file: !3, line: 817, column: 2)
!8855 = distinct !DILexicalBlock(scope: !8827, file: !3, line: 817, column: 2)
!8856 = !DILocation(line: 817, column: 2, scope: !8855)
!8857 = !DILocation(line: 817, column: 2, scope: !8858)
!8858 = distinct !DILexicalBlock(scope: !8854, file: !3, line: 817, column: 2)
!8859 = !DILocation(line: 817, column: 2, scope: !8860)
!8860 = distinct !DILexicalBlock(scope: !8858, file: !3, line: 817, column: 2)
!8861 = !DILocation(line: 817, column: 2, scope: !8862)
!8862 = distinct !DILexicalBlock(scope: !8858, file: !3, line: 817, column: 2)
!8863 = !{i32 -2140976986, i32 -2140976957, i32 -2140976911, i32 -2140976853, i32 -2140976799, i32 -2140976745, i32 -2140976690, i32 -2140976659}
!8864 = !DILocation(line: 817, column: 2, scope: !8865)
!8865 = distinct !DILexicalBlock(scope: !8866, file: !3, line: 817, column: 2)
!8866 = distinct !DILexicalBlock(scope: !8858, file: !3, line: 817, column: 2)
!8867 = !{i32 -2140976207, i32 -2140976200, i32 -2140976146, i32 -2140976115, i32 -2140976085}
!8868 = !DILocation(line: 817, column: 2, scope: !8866)
!8869 = !DILocation(line: 818, column: 2, scope: !8827)
!8870 = !DILocation(line: 818, column: 2, scope: !8871)
!8871 = distinct !DILexicalBlock(scope: !8872, file: !3, line: 818, column: 2)
!8872 = distinct !DILexicalBlock(scope: !8827, file: !3, line: 818, column: 2)
!8873 = !DILocation(line: 818, column: 2, scope: !8872)
!8874 = !DILocation(line: 818, column: 2, scope: !8875)
!8875 = distinct !DILexicalBlock(scope: !8871, file: !3, line: 818, column: 2)
!8876 = !DILocation(line: 818, column: 2, scope: !8877)
!8877 = distinct !DILexicalBlock(scope: !8875, file: !3, line: 818, column: 2)
!8878 = !DILocation(line: 818, column: 2, scope: !8879)
!8879 = distinct !DILexicalBlock(scope: !8875, file: !3, line: 818, column: 2)
!8880 = !{i32 -2140975782, i32 -2140975753, i32 -2140975707, i32 -2140975649, i32 -2140975595, i32 -2140975541, i32 -2140975486, i32 -2140975455}
!8881 = !DILocation(line: 818, column: 2, scope: !8882)
!8882 = distinct !DILexicalBlock(scope: !8883, file: !3, line: 818, column: 2)
!8883 = distinct !DILexicalBlock(scope: !8875, file: !3, line: 818, column: 2)
!8884 = !{i32 -2140975003, i32 -2140974996, i32 -2140974942, i32 -2140974911, i32 -2140974881}
!8885 = !DILocation(line: 818, column: 2, scope: !8883)
!8886 = !DILocation(line: 821, column: 12, scope: !8827)
!8887 = !DILocation(line: 821, column: 2, scope: !8827)
!8888 = !DILocation(line: 821, column: 20, scope: !8827)
!8889 = !DILocation(line: 824, column: 22, scope: !8827)
!8890 = !DILocation(line: 824, column: 12, scope: !8827)
!8891 = !DILocation(line: 824, column: 2, scope: !8827)
!8892 = !DILocation(line: 824, column: 20, scope: !8827)
!8893 = !DILocation(line: 826, column: 11, scope: !8827)
!8894 = !DILocation(line: 826, column: 2, scope: !8827)
!8895 = !DILocation(line: 826, column: 9, scope: !8827)
!8896 = !DILocation(line: 827, column: 11, scope: !8827)
!8897 = !DILocation(line: 827, column: 2, scope: !8827)
!8898 = !DILocation(line: 827, column: 9, scope: !8827)
!8899 = !DILocation(line: 828, column: 11, scope: !8827)
!8900 = !DILocation(line: 828, column: 2, scope: !8827)
!8901 = !DILocation(line: 828, column: 9, scope: !8827)
!8902 = !DILocation(line: 829, column: 11, scope: !8827)
!8903 = !DILocation(line: 829, column: 2, scope: !8827)
!8904 = !DILocation(line: 829, column: 9, scope: !8827)
!8905 = !DILocation(line: 832, column: 12, scope: !8827)
!8906 = !DILocation(line: 832, column: 2, scope: !8827)
!8907 = !DILocation(line: 832, column: 20, scope: !8827)
!8908 = !DILocation(line: 835, column: 12, scope: !8827)
!8909 = !DILocation(line: 835, column: 2, scope: !8827)
!8910 = !DILocation(line: 835, column: 10, scope: !8827)
!8911 = !DILocation(line: 838, column: 12, scope: !8827)
!8912 = !DILocation(line: 838, column: 2, scope: !8827)
!8913 = !DILocation(line: 838, column: 10, scope: !8827)
!8914 = !DILocation(line: 841, column: 12, scope: !8915)
!8915 = distinct !DILexicalBlock(scope: !8827, file: !3, line: 841, column: 2)
!8916 = !DILocation(line: 841, column: 7, scope: !8915)
!8917 = !DILocation(line: 841, column: 17, scope: !8918)
!8918 = distinct !DILexicalBlock(scope: !8915, file: !3, line: 841, column: 2)
!8919 = !DILocation(line: 841, column: 24, scope: !8918)
!8920 = !DILocation(line: 841, column: 22, scope: !8918)
!8921 = !DILocation(line: 841, column: 2, scope: !8915)
!8922 = !DILocalVariable(name: "line_offset", scope: !8923, file: !3, line: 842, type: !8463)
!8923 = distinct !DILexicalBlock(scope: !8918, file: !3, line: 841, column: 40)
!8924 = !DILocation(line: 842, column: 13, scope: !8923)
!8925 = !DILocation(line: 842, column: 27, scope: !8923)
!8926 = !DILocation(line: 842, column: 32, scope: !8923)
!8927 = !DILocation(line: 842, column: 38, scope: !8923)
!8928 = !DILocation(line: 842, column: 42, scope: !8923)
!8929 = !DILocation(line: 842, column: 57, scope: !8923)
!8930 = !DILocation(line: 842, column: 61, scope: !8923)
!8931 = !DILocation(line: 842, column: 59, scope: !8923)
!8932 = !DILocation(line: 842, column: 54, scope: !8923)
!8933 = !DILocalVariable(name: "byte_offset", scope: !8923, file: !3, line: 843, type: !8463)
!8934 = !DILocation(line: 843, column: 13, scope: !8923)
!8935 = !DILocation(line: 843, column: 27, scope: !8923)
!8936 = !DILocation(line: 843, column: 42, scope: !8923)
!8937 = !DILocation(line: 843, column: 44, scope: !8923)
!8938 = !DILocation(line: 843, column: 39, scope: !8923)
!8939 = !DILocation(line: 844, column: 11, scope: !8923)
!8940 = !DILocation(line: 844, column: 22, scope: !8923)
!8941 = !DILocation(line: 844, column: 40, scope: !8923)
!8942 = !DILocation(line: 844, column: 38, scope: !8923)
!8943 = !DILocation(line: 844, column: 19, scope: !8923)
!8944 = !DILocation(line: 844, column: 47, scope: !8923)
!8945 = !DILocation(line: 844, column: 3, scope: !8923)
!8946 = !DILocation(line: 845, column: 12, scope: !8923)
!8947 = !DILocation(line: 845, column: 17, scope: !8923)
!8948 = !DILocation(line: 845, column: 23, scope: !8923)
!8949 = !DILocation(line: 845, column: 27, scope: !8923)
!8950 = !DILocation(line: 845, column: 4, scope: !8923)
!8951 = !DILocation(line: 845, column: 40, scope: !8923)
!8952 = !DILocation(line: 845, column: 38, scope: !8923)
!8953 = !DILocation(line: 845, column: 53, scope: !8923)
!8954 = !DILocation(line: 845, column: 59, scope: !8923)
!8955 = !DILocation(line: 846, column: 2, scope: !8923)
!8956 = !DILocation(line: 841, column: 36, scope: !8918)
!8957 = !DILocation(line: 841, column: 2, scope: !8918)
!8958 = distinct !{!8958, !8921, !8959}
!8959 = !DILocation(line: 846, column: 2, scope: !8915)
!8960 = !DILocation(line: 847, column: 1, scope: !8827)
!8961 = distinct !DISubprogram(name: "ufx_submit_urb", scope: !3, file: !3, line: 1931, type: !8962, scopeLine: 1932, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !284)
!8962 = !DISubroutineType(types: !8963)
!8963 = !{!217, !4278, !4777, !357}
!8964 = !DILocation(line: 39, column: 55, scope: !5047, inlinedAt: !8965)
!8965 = distinct !DILocation(line: 46, column: 2, scope: !5054, inlinedAt: !8966)
!8966 = distinct !DILocation(line: 1941, column: 3, scope: !8967)
!8967 = distinct !DILexicalBlock(scope: !8968, file: !3, line: 1939, column: 11)
!8968 = distinct !DILexicalBlock(scope: !8961, file: !3, line: 1939, column: 6)
!8969 = !DILocation(line: 39, column: 62, scope: !5047, inlinedAt: !8965)
!8970 = !DILocation(line: 84, column: 74, scope: !5060, inlinedAt: !8971)
!8971 = distinct !DILocation(line: 45, column: 2, scope: !5054, inlinedAt: !8966)
!8972 = !DILocation(line: 84, column: 84, scope: !5060, inlinedAt: !8971)
!8973 = !DILocation(line: 43, column: 22, scope: !5054, inlinedAt: !8966)
!8974 = !DILocation(line: 43, column: 29, scope: !5054, inlinedAt: !8966)
!8975 = !DILocalVariable(name: "dev", arg: 1, scope: !8961, file: !3, line: 1931, type: !4278)
!8976 = !DILocation(line: 1931, column: 44, scope: !8961)
!8977 = !DILocalVariable(name: "urb", arg: 2, scope: !8961, file: !3, line: 1931, type: !4777)
!8978 = !DILocation(line: 1931, column: 61, scope: !8961)
!8979 = !DILocalVariable(name: "len", arg: 3, scope: !8961, file: !3, line: 1931, type: !357)
!8980 = !DILocation(line: 1931, column: 73, scope: !8961)
!8981 = !DILocalVariable(name: "ret", scope: !8961, file: !3, line: 1933, type: !217)
!8982 = !DILocation(line: 1933, column: 6, scope: !8961)
!8983 = !DILocation(line: 1935, column: 2, scope: !8961)
!8984 = !DILocation(line: 1935, column: 2, scope: !8985)
!8985 = distinct !DILexicalBlock(scope: !8986, file: !3, line: 1935, column: 2)
!8986 = distinct !DILexicalBlock(scope: !8961, file: !3, line: 1935, column: 2)
!8987 = !DILocation(line: 1935, column: 2, scope: !8986)
!8988 = !DILocation(line: 1935, column: 2, scope: !8989)
!8989 = distinct !DILexicalBlock(scope: !8985, file: !3, line: 1935, column: 2)
!8990 = !DILocation(line: 1935, column: 2, scope: !8991)
!8991 = distinct !DILexicalBlock(scope: !8989, file: !3, line: 1935, column: 2)
!8992 = !DILocation(line: 1935, column: 2, scope: !8993)
!8993 = distinct !DILexicalBlock(scope: !8989, file: !3, line: 1935, column: 2)
!8994 = !{i32 -2140919458, i32 -2140919429, i32 -2140919383, i32 -2140919325, i32 -2140919271, i32 -2140919217, i32 -2140919162, i32 -2140919131}
!8995 = !DILocation(line: 1935, column: 2, scope: !8996)
!8996 = distinct !DILexicalBlock(scope: !8997, file: !3, line: 1935, column: 2)
!8997 = distinct !DILexicalBlock(scope: !8989, file: !3, line: 1935, column: 2)
!8998 = !{i32 -2140918678, i32 -2140918671, i32 -2140918617, i32 -2140918586, i32 -2140918556}
!8999 = !DILocation(line: 1935, column: 2, scope: !8997)
!9000 = !DILocation(line: 1937, column: 32, scope: !8961)
!9001 = !DILocation(line: 1937, column: 2, scope: !8961)
!9002 = !DILocation(line: 1937, column: 7, scope: !8961)
!9003 = !DILocation(line: 1937, column: 30, scope: !8961)
!9004 = !DILocation(line: 1938, column: 23, scope: !8961)
!9005 = !DILocation(line: 1938, column: 8, scope: !8961)
!9006 = !DILocation(line: 1938, column: 6, scope: !8961)
!9007 = !DILocation(line: 1939, column: 6, scope: !8968)
!9008 = !DILocation(line: 1939, column: 6, scope: !8961)
!9009 = !DILocation(line: 1940, column: 22, scope: !8967)
!9010 = !DILocation(line: 1940, column: 3, scope: !8967)
!9011 = !DILocation(line: 1941, column: 15, scope: !8967)
!9012 = !DILocation(line: 1941, column: 20, scope: !8967)
!9013 = !DILocation(line: 45, column: 26, scope: !5054, inlinedAt: !8966)
!9014 = !DILocation(line: 86, column: 20, scope: !5060, inlinedAt: !8971)
!9015 = !DILocation(line: 86, column: 23, scope: !5060, inlinedAt: !8971)
!9016 = !DILocation(line: 86, column: 2, scope: !5060, inlinedAt: !8971)
!9017 = !DILocation(line: 87, column: 2, scope: !5060, inlinedAt: !8971)
!9018 = !DILocation(line: 46, column: 18, scope: !5054, inlinedAt: !8966)
!9019 = !DILocation(line: 46, column: 21, scope: !5054, inlinedAt: !8966)
!9020 = !DILocation(line: 41, column: 2, scope: !5271, inlinedAt: !8965)
!9021 = !DILocation(line: 1942, column: 3, scope: !8967)
!9022 = !DILocation(line: 1943, column: 2, scope: !8967)
!9023 = !DILocation(line: 1944, column: 9, scope: !8961)
!9024 = !DILocation(line: 1944, column: 2, scope: !8961)
!9025 = distinct !DISubprogram(name: "list_empty", scope: !5835, file: !5835, line: 280, type: !9026, scopeLine: 281, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !284)
!9026 = !DISubroutineType(types: !9027)
!9027 = !{!217, !9028}
!9028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9029, size: 64)
!9029 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !257)
!9030 = !DILocalVariable(name: "head", arg: 1, scope: !9025, file: !5835, line: 280, type: !9028)
!9031 = !DILocation(line: 280, column: 54, scope: !9025)
!9032 = !DILocation(line: 282, column: 9, scope: !9033)
!9033 = distinct !DILexicalBlock(scope: !9025, file: !5835, line: 282, column: 9)
!9034 = !DILocation(line: 282, column: 9, scope: !9035)
!9035 = distinct !DILexicalBlock(scope: !9033, file: !5835, line: 282, column: 9)
!9036 = !DILocation(line: 282, column: 34, scope: !9025)
!9037 = !DILocation(line: 282, column: 31, scope: !9025)
!9038 = !DILocation(line: 282, column: 2, scope: !9025)
!9039 = distinct !DISubprogram(name: "list_del_init", scope: !5835, file: !5835, line: 202, type: !5836, scopeLine: 203, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !284)
!9040 = !DILocalVariable(name: "entry", arg: 1, scope: !9039, file: !5835, line: 202, type: !260)
!9041 = !DILocation(line: 202, column: 52, scope: !9039)
!9042 = !DILocation(line: 204, column: 19, scope: !9039)
!9043 = !DILocation(line: 204, column: 2, scope: !9039)
!9044 = !DILocation(line: 205, column: 17, scope: !9039)
!9045 = !DILocation(line: 205, column: 2, scope: !9039)
!9046 = !DILocation(line: 206, column: 1, scope: !9039)
!9047 = distinct !DISubprogram(name: "__list_del_entry", scope: !5835, file: !5835, line: 130, type: !5836, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !284)
!9048 = !DILocalVariable(name: "entry", arg: 1, scope: !9047, file: !5835, line: 130, type: !260)
!9049 = !DILocation(line: 130, column: 55, scope: !9047)
!9050 = !DILocation(line: 132, column: 30, scope: !9051)
!9051 = distinct !DILexicalBlock(scope: !9047, file: !5835, line: 132, column: 6)
!9052 = !DILocation(line: 132, column: 7, scope: !9051)
!9053 = !DILocation(line: 132, column: 6, scope: !9047)
!9054 = !DILocation(line: 133, column: 3, scope: !9051)
!9055 = !DILocation(line: 135, column: 13, scope: !9047)
!9056 = !DILocation(line: 135, column: 20, scope: !9047)
!9057 = !DILocation(line: 135, column: 26, scope: !9047)
!9058 = !DILocation(line: 135, column: 33, scope: !9047)
!9059 = !DILocation(line: 135, column: 2, scope: !9047)
!9060 = !DILocation(line: 136, column: 1, scope: !9047)
!9061 = distinct !DISubprogram(name: "__list_del_entry_valid", scope: !5835, file: !5835, line: 51, type: !9062, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !284)
!9062 = !DISubroutineType(types: !9063)
!9063 = !{!521, !260}
!9064 = !DILocalVariable(name: "entry", arg: 1, scope: !9061, file: !5835, line: 51, type: !260)
!9065 = !DILocation(line: 51, column: 61, scope: !9061)
!9066 = !DILocation(line: 53, column: 2, scope: !9061)
!9067 = distinct !DISubprogram(name: "__list_del", scope: !5835, file: !5835, line: 110, type: !7641, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !284)
!9068 = !DILocalVariable(name: "prev", arg: 1, scope: !9067, file: !5835, line: 110, type: !260)
!9069 = !DILocation(line: 110, column: 50, scope: !9067)
!9070 = !DILocalVariable(name: "next", arg: 2, scope: !9067, file: !5835, line: 110, type: !260)
!9071 = !DILocation(line: 110, column: 75, scope: !9067)
!9072 = !DILocation(line: 112, column: 15, scope: !9067)
!9073 = !DILocation(line: 112, column: 2, scope: !9067)
!9074 = !DILocation(line: 112, column: 8, scope: !9067)
!9075 = !DILocation(line: 112, column: 13, scope: !9067)
!9076 = !DILocation(line: 113, column: 2, scope: !9067)
!9077 = !DILocation(line: 113, column: 2, scope: !9078)
!9078 = distinct !DILexicalBlock(scope: !9067, file: !5835, line: 113, column: 2)
!9079 = !DILocation(line: 113, column: 2, scope: !9080)
!9080 = distinct !DILexicalBlock(scope: !9078, file: !5835, line: 113, column: 2)
!9081 = !DILocation(line: 113, column: 2, scope: !9082)
!9082 = distinct !DILexicalBlock(scope: !9078, file: !5835, line: 113, column: 2)
!9083 = !DILocation(line: 114, column: 1, scope: !9067)
!9084 = distinct !DISubprogram(name: "ufx_set_vid_mode", scope: !3, file: !3, line: 658, type: !9085, scopeLine: 659, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !284)
!9085 = !DISubroutineType(types: !9086)
!9086 = !{!217, !4278, !4541}
!9087 = !DILocalVariable(name: "dev", arg: 1, scope: !9084, file: !3, line: 658, type: !4278)
!9088 = !DILocation(line: 658, column: 46, scope: !9084)
!9089 = !DILocalVariable(name: "var", arg: 2, scope: !9084, file: !3, line: 658, type: !4541)
!9090 = !DILocation(line: 658, column: 77, scope: !9084)
!9091 = !DILocalVariable(name: "temp", scope: !9084, file: !3, line: 660, type: !224)
!9092 = !DILocation(line: 660, column: 6, scope: !9084)
!9093 = !DILocalVariable(name: "h_total", scope: !9084, file: !3, line: 661, type: !890)
!9094 = !DILocation(line: 661, column: 6, scope: !9084)
!9095 = !DILocalVariable(name: "h_active", scope: !9084, file: !3, line: 661, type: !890)
!9096 = !DILocation(line: 661, column: 15, scope: !9084)
!9097 = !DILocalVariable(name: "h_blank_start", scope: !9084, file: !3, line: 661, type: !890)
!9098 = !DILocation(line: 661, column: 25, scope: !9084)
!9099 = !DILocalVariable(name: "h_blank_end", scope: !9084, file: !3, line: 661, type: !890)
!9100 = !DILocation(line: 661, column: 40, scope: !9084)
!9101 = !DILocalVariable(name: "h_sync_start", scope: !9084, file: !3, line: 661, type: !890)
!9102 = !DILocation(line: 661, column: 53, scope: !9084)
!9103 = !DILocalVariable(name: "h_sync_end", scope: !9084, file: !3, line: 661, type: !890)
!9104 = !DILocation(line: 661, column: 67, scope: !9084)
!9105 = !DILocalVariable(name: "v_total", scope: !9084, file: !3, line: 662, type: !890)
!9106 = !DILocation(line: 662, column: 6, scope: !9084)
!9107 = !DILocalVariable(name: "v_active", scope: !9084, file: !3, line: 662, type: !890)
!9108 = !DILocation(line: 662, column: 15, scope: !9084)
!9109 = !DILocalVariable(name: "v_blank_start", scope: !9084, file: !3, line: 662, type: !890)
!9110 = !DILocation(line: 662, column: 25, scope: !9084)
!9111 = !DILocalVariable(name: "v_blank_end", scope: !9084, file: !3, line: 662, type: !890)
!9112 = !DILocation(line: 662, column: 40, scope: !9084)
!9113 = !DILocalVariable(name: "v_sync_start", scope: !9084, file: !3, line: 662, type: !890)
!9114 = !DILocation(line: 662, column: 53, scope: !9084)
!9115 = !DILocalVariable(name: "v_sync_end", scope: !9084, file: !3, line: 662, type: !890)
!9116 = !DILocation(line: 662, column: 67, scope: !9084)
!9117 = !DILocalVariable(name: "status", scope: !9084, file: !3, line: 664, type: !217)
!9118 = !DILocation(line: 664, column: 6, scope: !9084)
!9119 = !DILocation(line: 664, column: 29, scope: !9084)
!9120 = !DILocation(line: 664, column: 15, scope: !9084)
!9121 = !DILocation(line: 665, column: 2, scope: !9122)
!9122 = distinct !DILexicalBlock(scope: !9123, file: !3, line: 665, column: 2)
!9123 = distinct !DILexicalBlock(scope: !9084, file: !3, line: 665, column: 2)
!9124 = !DILocation(line: 665, column: 2, scope: !9123)
!9125 = !DILocation(line: 665, column: 2, scope: !9126)
!9126 = distinct !DILexicalBlock(scope: !9122, file: !3, line: 665, column: 2)
!9127 = !DILocation(line: 667, column: 25, scope: !9084)
!9128 = !DILocation(line: 667, column: 11, scope: !9084)
!9129 = !DILocation(line: 667, column: 9, scope: !9084)
!9130 = !DILocation(line: 668, column: 2, scope: !9131)
!9131 = distinct !DILexicalBlock(scope: !9132, file: !3, line: 668, column: 2)
!9132 = distinct !DILexicalBlock(scope: !9084, file: !3, line: 668, column: 2)
!9133 = !DILocation(line: 668, column: 2, scope: !9132)
!9134 = !DILocation(line: 668, column: 2, scope: !9135)
!9135 = distinct !DILexicalBlock(scope: !9131, file: !3, line: 668, column: 2)
!9136 = !DILocation(line: 671, column: 21, scope: !9084)
!9137 = !DILocation(line: 671, column: 11, scope: !9084)
!9138 = !DILocation(line: 671, column: 9, scope: !9084)
!9139 = !DILocation(line: 672, column: 2, scope: !9140)
!9140 = distinct !DILexicalBlock(scope: !9141, file: !3, line: 672, column: 2)
!9141 = distinct !DILexicalBlock(scope: !9084, file: !3, line: 672, column: 2)
!9142 = !DILocation(line: 672, column: 2, scope: !9141)
!9143 = !DILocation(line: 672, column: 2, scope: !9144)
!9144 = distinct !DILexicalBlock(scope: !9140, file: !3, line: 672, column: 2)
!9145 = !DILocation(line: 674, column: 23, scope: !9084)
!9146 = !DILocation(line: 674, column: 11, scope: !9084)
!9147 = !DILocation(line: 674, column: 9, scope: !9084)
!9148 = !DILocation(line: 675, column: 2, scope: !9149)
!9149 = distinct !DILexicalBlock(scope: !9150, file: !3, line: 675, column: 2)
!9150 = distinct !DILexicalBlock(scope: !9084, file: !3, line: 675, column: 2)
!9151 = !DILocation(line: 675, column: 2, scope: !9150)
!9152 = !DILocation(line: 675, column: 2, scope: !9153)
!9153 = distinct !DILexicalBlock(scope: !9149, file: !3, line: 675, column: 2)
!9154 = !DILocation(line: 677, column: 30, scope: !9084)
!9155 = !DILocation(line: 677, column: 35, scope: !9084)
!9156 = !DILocation(line: 677, column: 40, scope: !9084)
!9157 = !DILocation(line: 677, column: 11, scope: !9084)
!9158 = !DILocation(line: 677, column: 9, scope: !9084)
!9159 = !DILocation(line: 678, column: 2, scope: !9160)
!9160 = distinct !DILexicalBlock(scope: !9161, file: !3, line: 678, column: 2)
!9161 = distinct !DILexicalBlock(scope: !9084, file: !3, line: 678, column: 2)
!9162 = !DILocation(line: 678, column: 2, scope: !9161)
!9163 = !DILocation(line: 678, column: 2, scope: !9164)
!9164 = distinct !DILexicalBlock(scope: !9160, file: !3, line: 678, column: 2)
!9165 = !DILocation(line: 680, column: 25, scope: !9084)
!9166 = !DILocation(line: 680, column: 11, scope: !9084)
!9167 = !DILocation(line: 680, column: 9, scope: !9084)
!9168 = !DILocation(line: 681, column: 2, scope: !9169)
!9169 = distinct !DILexicalBlock(scope: !9170, file: !3, line: 681, column: 2)
!9170 = distinct !DILexicalBlock(scope: !9084, file: !3, line: 681, column: 2)
!9171 = !DILocation(line: 681, column: 2, scope: !9170)
!9172 = !DILocation(line: 681, column: 2, scope: !9173)
!9173 = distinct !DILexicalBlock(scope: !9169, file: !3, line: 681, column: 2)
!9174 = !DILocation(line: 684, column: 12, scope: !9084)
!9175 = !DILocation(line: 684, column: 17, scope: !9084)
!9176 = !DILocation(line: 684, column: 24, scope: !9084)
!9177 = !DILocation(line: 684, column: 29, scope: !9084)
!9178 = !DILocation(line: 684, column: 22, scope: !9084)
!9179 = !DILocation(line: 684, column: 44, scope: !9084)
!9180 = !DILocation(line: 684, column: 49, scope: !9084)
!9181 = !DILocation(line: 684, column: 42, scope: !9084)
!9182 = !DILocation(line: 684, column: 61, scope: !9084)
!9183 = !DILocation(line: 684, column: 66, scope: !9084)
!9184 = !DILocation(line: 684, column: 59, scope: !9084)
!9185 = !DILocation(line: 684, column: 10, scope: !9084)
!9186 = !DILocation(line: 685, column: 13, scope: !9084)
!9187 = !DILocation(line: 685, column: 18, scope: !9084)
!9188 = !DILocation(line: 685, column: 11, scope: !9084)
!9189 = !DILocation(line: 686, column: 18, scope: !9084)
!9190 = !DILocation(line: 686, column: 23, scope: !9084)
!9191 = !DILocation(line: 686, column: 30, scope: !9084)
!9192 = !DILocation(line: 686, column: 35, scope: !9084)
!9193 = !DILocation(line: 686, column: 28, scope: !9084)
!9194 = !DILocation(line: 686, column: 16, scope: !9084)
!9195 = !DILocation(line: 687, column: 16, scope: !9084)
!9196 = !DILocation(line: 687, column: 21, scope: !9084)
!9197 = !DILocation(line: 687, column: 28, scope: !9084)
!9198 = !DILocation(line: 687, column: 33, scope: !9084)
!9199 = !DILocation(line: 687, column: 26, scope: !9084)
!9200 = !DILocation(line: 687, column: 48, scope: !9084)
!9201 = !DILocation(line: 687, column: 53, scope: !9084)
!9202 = !DILocation(line: 687, column: 46, scope: !9084)
!9203 = !DILocation(line: 687, column: 14, scope: !9084)
!9204 = !DILocation(line: 688, column: 17, scope: !9084)
!9205 = !DILocation(line: 688, column: 22, scope: !9084)
!9206 = !DILocation(line: 688, column: 29, scope: !9084)
!9207 = !DILocation(line: 688, column: 34, scope: !9084)
!9208 = !DILocation(line: 688, column: 27, scope: !9084)
!9209 = !DILocation(line: 688, column: 15, scope: !9084)
!9210 = !DILocation(line: 689, column: 15, scope: !9084)
!9211 = !DILocation(line: 689, column: 20, scope: !9084)
!9212 = !DILocation(line: 689, column: 27, scope: !9084)
!9213 = !DILocation(line: 689, column: 32, scope: !9084)
!9214 = !DILocation(line: 689, column: 25, scope: !9084)
!9215 = !DILocation(line: 689, column: 47, scope: !9084)
!9216 = !DILocation(line: 689, column: 52, scope: !9084)
!9217 = !DILocation(line: 689, column: 45, scope: !9084)
!9218 = !DILocation(line: 689, column: 13, scope: !9084)
!9219 = !DILocation(line: 691, column: 11, scope: !9084)
!9220 = !DILocation(line: 691, column: 19, scope: !9084)
!9221 = !DILocation(line: 691, column: 24, scope: !9084)
!9222 = !DILocation(line: 691, column: 34, scope: !9084)
!9223 = !DILocation(line: 691, column: 43, scope: !9084)
!9224 = !DILocation(line: 691, column: 31, scope: !9084)
!9225 = !DILocation(line: 691, column: 7, scope: !9084)
!9226 = !DILocation(line: 692, column: 25, scope: !9084)
!9227 = !DILocation(line: 692, column: 38, scope: !9084)
!9228 = !DILocation(line: 692, column: 11, scope: !9084)
!9229 = !DILocation(line: 692, column: 9, scope: !9084)
!9230 = !DILocation(line: 693, column: 2, scope: !9231)
!9231 = distinct !DILexicalBlock(scope: !9232, file: !3, line: 693, column: 2)
!9232 = distinct !DILexicalBlock(scope: !9084, file: !3, line: 693, column: 2)
!9233 = !DILocation(line: 693, column: 2, scope: !9232)
!9234 = !DILocation(line: 693, column: 2, scope: !9235)
!9235 = distinct !DILexicalBlock(scope: !9231, file: !3, line: 693, column: 2)
!9236 = !DILocation(line: 695, column: 11, scope: !9084)
!9237 = !DILocation(line: 695, column: 25, scope: !9084)
!9238 = !DILocation(line: 695, column: 30, scope: !9084)
!9239 = !DILocation(line: 695, column: 40, scope: !9084)
!9240 = !DILocation(line: 695, column: 52, scope: !9084)
!9241 = !DILocation(line: 695, column: 37, scope: !9084)
!9242 = !DILocation(line: 695, column: 7, scope: !9084)
!9243 = !DILocation(line: 696, column: 25, scope: !9084)
!9244 = !DILocation(line: 696, column: 38, scope: !9084)
!9245 = !DILocation(line: 696, column: 11, scope: !9084)
!9246 = !DILocation(line: 696, column: 9, scope: !9084)
!9247 = !DILocation(line: 697, column: 2, scope: !9248)
!9248 = distinct !DILexicalBlock(scope: !9249, file: !3, line: 697, column: 2)
!9249 = distinct !DILexicalBlock(scope: !9084, file: !3, line: 697, column: 2)
!9250 = !DILocation(line: 697, column: 2, scope: !9249)
!9251 = !DILocation(line: 697, column: 2, scope: !9252)
!9252 = distinct !DILexicalBlock(scope: !9248, file: !3, line: 697, column: 2)
!9253 = !DILocation(line: 699, column: 11, scope: !9084)
!9254 = !DILocation(line: 699, column: 24, scope: !9084)
!9255 = !DILocation(line: 699, column: 29, scope: !9084)
!9256 = !DILocation(line: 699, column: 39, scope: !9084)
!9257 = !DILocation(line: 699, column: 50, scope: !9084)
!9258 = !DILocation(line: 699, column: 36, scope: !9084)
!9259 = !DILocation(line: 699, column: 7, scope: !9084)
!9260 = !DILocation(line: 700, column: 25, scope: !9084)
!9261 = !DILocation(line: 700, column: 38, scope: !9084)
!9262 = !DILocation(line: 700, column: 11, scope: !9084)
!9263 = !DILocation(line: 700, column: 9, scope: !9084)
!9264 = !DILocation(line: 701, column: 2, scope: !9265)
!9265 = distinct !DILexicalBlock(scope: !9266, file: !3, line: 701, column: 2)
!9266 = distinct !DILexicalBlock(scope: !9084, file: !3, line: 701, column: 2)
!9267 = !DILocation(line: 701, column: 2, scope: !9266)
!9268 = !DILocation(line: 701, column: 2, scope: !9269)
!9269 = distinct !DILexicalBlock(scope: !9265, file: !3, line: 701, column: 2)
!9270 = !DILocation(line: 704, column: 12, scope: !9084)
!9271 = !DILocation(line: 704, column: 17, scope: !9084)
!9272 = !DILocation(line: 704, column: 32, scope: !9084)
!9273 = !DILocation(line: 704, column: 37, scope: !9084)
!9274 = !DILocation(line: 704, column: 30, scope: !9084)
!9275 = !DILocation(line: 704, column: 44, scope: !9084)
!9276 = !DILocation(line: 704, column: 49, scope: !9084)
!9277 = !DILocation(line: 704, column: 42, scope: !9084)
!9278 = !DILocation(line: 704, column: 64, scope: !9084)
!9279 = !DILocation(line: 704, column: 69, scope: !9084)
!9280 = !DILocation(line: 704, column: 62, scope: !9084)
!9281 = !DILocation(line: 704, column: 10, scope: !9084)
!9282 = !DILocation(line: 705, column: 13, scope: !9084)
!9283 = !DILocation(line: 705, column: 18, scope: !9084)
!9284 = !DILocation(line: 705, column: 11, scope: !9084)
!9285 = !DILocation(line: 706, column: 18, scope: !9084)
!9286 = !DILocation(line: 706, column: 23, scope: !9084)
!9287 = !DILocation(line: 706, column: 30, scope: !9084)
!9288 = !DILocation(line: 706, column: 35, scope: !9084)
!9289 = !DILocation(line: 706, column: 28, scope: !9084)
!9290 = !DILocation(line: 706, column: 16, scope: !9084)
!9291 = !DILocation(line: 707, column: 16, scope: !9084)
!9292 = !DILocation(line: 707, column: 21, scope: !9084)
!9293 = !DILocation(line: 707, column: 28, scope: !9084)
!9294 = !DILocation(line: 707, column: 33, scope: !9084)
!9295 = !DILocation(line: 707, column: 26, scope: !9084)
!9296 = !DILocation(line: 707, column: 48, scope: !9084)
!9297 = !DILocation(line: 707, column: 53, scope: !9084)
!9298 = !DILocation(line: 707, column: 46, scope: !9084)
!9299 = !DILocation(line: 707, column: 14, scope: !9084)
!9300 = !DILocation(line: 708, column: 17, scope: !9084)
!9301 = !DILocation(line: 708, column: 22, scope: !9084)
!9302 = !DILocation(line: 708, column: 29, scope: !9084)
!9303 = !DILocation(line: 708, column: 34, scope: !9084)
!9304 = !DILocation(line: 708, column: 27, scope: !9084)
!9305 = !DILocation(line: 708, column: 15, scope: !9084)
!9306 = !DILocation(line: 709, column: 15, scope: !9084)
!9307 = !DILocation(line: 709, column: 20, scope: !9084)
!9308 = !DILocation(line: 709, column: 27, scope: !9084)
!9309 = !DILocation(line: 709, column: 32, scope: !9084)
!9310 = !DILocation(line: 709, column: 25, scope: !9084)
!9311 = !DILocation(line: 709, column: 47, scope: !9084)
!9312 = !DILocation(line: 709, column: 52, scope: !9084)
!9313 = !DILocation(line: 709, column: 45, scope: !9084)
!9314 = !DILocation(line: 709, column: 13, scope: !9084)
!9315 = !DILocation(line: 711, column: 11, scope: !9084)
!9316 = !DILocation(line: 711, column: 19, scope: !9084)
!9317 = !DILocation(line: 711, column: 24, scope: !9084)
!9318 = !DILocation(line: 711, column: 34, scope: !9084)
!9319 = !DILocation(line: 711, column: 43, scope: !9084)
!9320 = !DILocation(line: 711, column: 31, scope: !9084)
!9321 = !DILocation(line: 711, column: 7, scope: !9084)
!9322 = !DILocation(line: 712, column: 25, scope: !9084)
!9323 = !DILocation(line: 712, column: 38, scope: !9084)
!9324 = !DILocation(line: 712, column: 11, scope: !9084)
!9325 = !DILocation(line: 712, column: 9, scope: !9084)
!9326 = !DILocation(line: 713, column: 2, scope: !9327)
!9327 = distinct !DILexicalBlock(scope: !9328, file: !3, line: 713, column: 2)
!9328 = distinct !DILexicalBlock(scope: !9084, file: !3, line: 713, column: 2)
!9329 = !DILocation(line: 713, column: 2, scope: !9328)
!9330 = !DILocation(line: 713, column: 2, scope: !9331)
!9331 = distinct !DILexicalBlock(scope: !9327, file: !3, line: 713, column: 2)
!9332 = !DILocation(line: 715, column: 11, scope: !9084)
!9333 = !DILocation(line: 715, column: 25, scope: !9084)
!9334 = !DILocation(line: 715, column: 30, scope: !9084)
!9335 = !DILocation(line: 715, column: 40, scope: !9084)
!9336 = !DILocation(line: 715, column: 52, scope: !9084)
!9337 = !DILocation(line: 715, column: 37, scope: !9084)
!9338 = !DILocation(line: 715, column: 7, scope: !9084)
!9339 = !DILocation(line: 716, column: 25, scope: !9084)
!9340 = !DILocation(line: 716, column: 38, scope: !9084)
!9341 = !DILocation(line: 716, column: 11, scope: !9084)
!9342 = !DILocation(line: 716, column: 9, scope: !9084)
!9343 = !DILocation(line: 717, column: 2, scope: !9344)
!9344 = distinct !DILexicalBlock(scope: !9345, file: !3, line: 717, column: 2)
!9345 = distinct !DILexicalBlock(scope: !9084, file: !3, line: 717, column: 2)
!9346 = !DILocation(line: 717, column: 2, scope: !9345)
!9347 = !DILocation(line: 717, column: 2, scope: !9348)
!9348 = distinct !DILexicalBlock(scope: !9344, file: !3, line: 717, column: 2)
!9349 = !DILocation(line: 719, column: 11, scope: !9084)
!9350 = !DILocation(line: 719, column: 24, scope: !9084)
!9351 = !DILocation(line: 719, column: 29, scope: !9084)
!9352 = !DILocation(line: 719, column: 39, scope: !9084)
!9353 = !DILocation(line: 719, column: 50, scope: !9084)
!9354 = !DILocation(line: 719, column: 36, scope: !9084)
!9355 = !DILocation(line: 719, column: 7, scope: !9084)
!9356 = !DILocation(line: 720, column: 25, scope: !9084)
!9357 = !DILocation(line: 720, column: 38, scope: !9084)
!9358 = !DILocation(line: 720, column: 11, scope: !9084)
!9359 = !DILocation(line: 720, column: 9, scope: !9084)
!9360 = !DILocation(line: 721, column: 2, scope: !9361)
!9361 = distinct !DILexicalBlock(scope: !9362, file: !3, line: 721, column: 2)
!9362 = distinct !DILexicalBlock(scope: !9084, file: !3, line: 721, column: 2)
!9363 = !DILocation(line: 721, column: 2, scope: !9362)
!9364 = !DILocation(line: 721, column: 2, scope: !9365)
!9365 = distinct !DILexicalBlock(scope: !9361, file: !3, line: 721, column: 2)
!9366 = !DILocation(line: 723, column: 25, scope: !9084)
!9367 = !DILocation(line: 723, column: 11, scope: !9084)
!9368 = !DILocation(line: 723, column: 9, scope: !9084)
!9369 = !DILocation(line: 724, column: 2, scope: !9370)
!9370 = distinct !DILexicalBlock(scope: !9371, file: !3, line: 724, column: 2)
!9371 = distinct !DILexicalBlock(scope: !9084, file: !3, line: 724, column: 2)
!9372 = !DILocation(line: 724, column: 2, scope: !9371)
!9373 = !DILocation(line: 724, column: 2, scope: !9374)
!9374 = distinct !DILexicalBlock(scope: !9370, file: !3, line: 724, column: 2)
!9375 = !DILocation(line: 726, column: 25, scope: !9084)
!9376 = !DILocation(line: 726, column: 11, scope: !9084)
!9377 = !DILocation(line: 726, column: 9, scope: !9084)
!9378 = !DILocation(line: 727, column: 2, scope: !9379)
!9379 = distinct !DILexicalBlock(scope: !9380, file: !3, line: 727, column: 2)
!9380 = distinct !DILexicalBlock(scope: !9084, file: !3, line: 727, column: 2)
!9381 = !DILocation(line: 727, column: 2, scope: !9380)
!9382 = !DILocation(line: 727, column: 2, scope: !9383)
!9383 = distinct !DILexicalBlock(scope: !9379, file: !3, line: 727, column: 2)
!9384 = !DILocation(line: 730, column: 9, scope: !9084)
!9385 = !DILocation(line: 730, column: 14, scope: !9084)
!9386 = !DILocation(line: 730, column: 21, scope: !9084)
!9387 = !DILocation(line: 730, column: 26, scope: !9084)
!9388 = !DILocation(line: 730, column: 19, scope: !9084)
!9389 = !DILocation(line: 730, column: 31, scope: !9084)
!9390 = !DILocation(line: 730, column: 7, scope: !9084)
!9391 = !DILocation(line: 731, column: 10, scope: !9084)
!9392 = !DILocation(line: 731, column: 15, scope: !9084)
!9393 = !DILocation(line: 731, column: 20, scope: !9084)
!9394 = !DILocation(line: 731, column: 7, scope: !9084)
!9395 = !DILocation(line: 732, column: 25, scope: !9084)
!9396 = !DILocation(line: 732, column: 38, scope: !9084)
!9397 = !DILocation(line: 732, column: 11, scope: !9084)
!9398 = !DILocation(line: 732, column: 9, scope: !9084)
!9399 = !DILocation(line: 733, column: 2, scope: !9400)
!9400 = distinct !DILexicalBlock(scope: !9401, file: !3, line: 733, column: 2)
!9401 = distinct !DILexicalBlock(scope: !9084, file: !3, line: 733, column: 2)
!9402 = !DILocation(line: 733, column: 2, scope: !9401)
!9403 = !DILocation(line: 733, column: 2, scope: !9404)
!9404 = distinct !DILexicalBlock(scope: !9400, file: !3, line: 733, column: 2)
!9405 = !DILocation(line: 736, column: 25, scope: !9084)
!9406 = !DILocation(line: 736, column: 11, scope: !9084)
!9407 = !DILocation(line: 736, column: 9, scope: !9084)
!9408 = !DILocation(line: 737, column: 2, scope: !9409)
!9409 = distinct !DILexicalBlock(scope: !9410, file: !3, line: 737, column: 2)
!9410 = distinct !DILexicalBlock(scope: !9084, file: !3, line: 737, column: 2)
!9411 = !DILocation(line: 737, column: 2, scope: !9410)
!9412 = !DILocation(line: 737, column: 2, scope: !9413)
!9413 = distinct !DILexicalBlock(scope: !9409, file: !3, line: 737, column: 2)
!9414 = !DILocation(line: 739, column: 25, scope: !9084)
!9415 = !DILocation(line: 739, column: 11, scope: !9084)
!9416 = !DILocation(line: 739, column: 9, scope: !9084)
!9417 = !DILocation(line: 740, column: 2, scope: !9418)
!9418 = distinct !DILexicalBlock(scope: !9419, file: !3, line: 740, column: 2)
!9419 = distinct !DILexicalBlock(scope: !9084, file: !3, line: 740, column: 2)
!9420 = !DILocation(line: 740, column: 2, scope: !9419)
!9421 = !DILocation(line: 740, column: 2, scope: !9422)
!9422 = distinct !DILexicalBlock(scope: !9418, file: !3, line: 740, column: 2)
!9423 = !DILocation(line: 742, column: 25, scope: !9084)
!9424 = !DILocation(line: 742, column: 11, scope: !9084)
!9425 = !DILocation(line: 742, column: 9, scope: !9084)
!9426 = !DILocation(line: 743, column: 2, scope: !9427)
!9427 = distinct !DILexicalBlock(scope: !9428, file: !3, line: 743, column: 2)
!9428 = distinct !DILexicalBlock(scope: !9084, file: !3, line: 743, column: 2)
!9429 = !DILocation(line: 743, column: 2, scope: !9428)
!9430 = !DILocation(line: 743, column: 2, scope: !9431)
!9431 = distinct !DILexicalBlock(scope: !9427, file: !3, line: 743, column: 2)
!9432 = !DILocation(line: 746, column: 7, scope: !9084)
!9433 = !DILocation(line: 747, column: 6, scope: !9434)
!9434 = distinct !DILexicalBlock(scope: !9084, file: !3, line: 747, column: 6)
!9435 = !DILocation(line: 747, column: 11, scope: !9434)
!9436 = !DILocation(line: 747, column: 16, scope: !9434)
!9437 = !DILocation(line: 747, column: 6, scope: !9084)
!9438 = !DILocation(line: 748, column: 8, scope: !9434)
!9439 = !DILocation(line: 748, column: 3, scope: !9434)
!9440 = !DILocation(line: 750, column: 6, scope: !9441)
!9441 = distinct !DILexicalBlock(scope: !9084, file: !3, line: 750, column: 6)
!9442 = !DILocation(line: 750, column: 11, scope: !9441)
!9443 = !DILocation(line: 750, column: 16, scope: !9441)
!9444 = !DILocation(line: 750, column: 6, scope: !9084)
!9445 = !DILocation(line: 751, column: 8, scope: !9441)
!9446 = !DILocation(line: 751, column: 3, scope: !9441)
!9447 = !DILocation(line: 753, column: 25, scope: !9084)
!9448 = !DILocation(line: 753, column: 38, scope: !9084)
!9449 = !DILocation(line: 753, column: 11, scope: !9084)
!9450 = !DILocation(line: 753, column: 9, scope: !9084)
!9451 = !DILocation(line: 754, column: 2, scope: !9452)
!9452 = distinct !DILexicalBlock(scope: !9453, file: !3, line: 754, column: 2)
!9453 = distinct !DILexicalBlock(scope: !9084, file: !3, line: 754, column: 2)
!9454 = !DILocation(line: 754, column: 2, scope: !9453)
!9455 = !DILocation(line: 754, column: 2, scope: !9456)
!9456 = distinct !DILexicalBlock(scope: !9452, file: !3, line: 754, column: 2)
!9457 = !DILocation(line: 757, column: 22, scope: !9084)
!9458 = !DILocation(line: 757, column: 11, scope: !9084)
!9459 = !DILocation(line: 757, column: 9, scope: !9084)
!9460 = !DILocation(line: 758, column: 2, scope: !9461)
!9461 = distinct !DILexicalBlock(scope: !9462, file: !3, line: 758, column: 2)
!9462 = distinct !DILexicalBlock(scope: !9084, file: !3, line: 758, column: 2)
!9463 = !DILocation(line: 758, column: 2, scope: !9462)
!9464 = !DILocation(line: 758, column: 2, scope: !9465)
!9465 = distinct !DILexicalBlock(scope: !9461, file: !3, line: 758, column: 2)
!9466 = !DILocation(line: 761, column: 23, scope: !9084)
!9467 = !DILocation(line: 761, column: 11, scope: !9084)
!9468 = !DILocation(line: 761, column: 9, scope: !9084)
!9469 = !DILocation(line: 762, column: 2, scope: !9470)
!9470 = distinct !DILexicalBlock(scope: !9471, file: !3, line: 762, column: 2)
!9471 = distinct !DILexicalBlock(scope: !9084, file: !3, line: 762, column: 2)
!9472 = !DILocation(line: 762, column: 2, scope: !9471)
!9473 = !DILocation(line: 762, column: 2, scope: !9474)
!9474 = distinct !DILexicalBlock(scope: !9470, file: !3, line: 762, column: 2)
!9475 = !DILocation(line: 765, column: 25, scope: !9084)
!9476 = !DILocation(line: 765, column: 11, scope: !9084)
!9477 = !DILocation(line: 765, column: 9, scope: !9084)
!9478 = !DILocation(line: 766, column: 2, scope: !9479)
!9479 = distinct !DILexicalBlock(scope: !9480, file: !3, line: 766, column: 2)
!9480 = distinct !DILexicalBlock(scope: !9084, file: !3, line: 766, column: 2)
!9481 = !DILocation(line: 766, column: 2, scope: !9480)
!9482 = !DILocation(line: 766, column: 2, scope: !9483)
!9483 = distinct !DILexicalBlock(scope: !9479, file: !3, line: 766, column: 2)
!9484 = !DILocation(line: 769, column: 25, scope: !9084)
!9485 = !DILocation(line: 769, column: 11, scope: !9084)
!9486 = !DILocation(line: 769, column: 9, scope: !9084)
!9487 = !DILocation(line: 770, column: 2, scope: !9488)
!9488 = distinct !DILexicalBlock(scope: !9489, file: !3, line: 770, column: 2)
!9489 = distinct !DILexicalBlock(scope: !9084, file: !3, line: 770, column: 2)
!9490 = !DILocation(line: 770, column: 2, scope: !9489)
!9491 = !DILocation(line: 770, column: 2, scope: !9492)
!9492 = distinct !DILexicalBlock(scope: !9488, file: !3, line: 770, column: 2)
!9493 = !DILocation(line: 772, column: 2, scope: !9084)
!9494 = !DILocation(line: 773, column: 1, scope: !9084)
!9495 = distinct !DISubprogram(name: "ufx_reg_write", scope: !3, file: !3, line: 167, type: !7053, scopeLine: 168, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !284)
!9496 = !DILocation(line: 445, column: 72, scope: !5400, inlinedAt: !9497)
!9497 = distinct !DILocation(line: 552, column: 10, scope: !5405, inlinedAt: !9498)
!9498 = distinct !DILocation(line: 169, column: 13, scope: !9495)
!9499 = !DILocation(line: 446, column: 9, scope: !5400, inlinedAt: !9497)
!9500 = !DILocation(line: 446, column: 23, scope: !5400, inlinedAt: !9497)
!9501 = !DILocation(line: 448, column: 8, scope: !5400, inlinedAt: !9497)
!9502 = !DILocation(line: 318, column: 67, scope: !5416, inlinedAt: !9503)
!9503 = distinct !DILocation(line: 553, column: 20, scope: !5405, inlinedAt: !9498)
!9504 = !DILocation(line: 346, column: 58, scope: !5422, inlinedAt: !9505)
!9505 = distinct !DILocation(line: 547, column: 11, scope: !5405, inlinedAt: !9498)
!9506 = !DILocation(line: 472, column: 28, scope: !5428, inlinedAt: !9507)
!9507 = distinct !DILocation(line: 481, column: 9, scope: !5433, inlinedAt: !9508)
!9508 = distinct !DILocation(line: 545, column: 11, scope: !5435, inlinedAt: !9498)
!9509 = !DILocation(line: 472, column: 40, scope: !5428, inlinedAt: !9507)
!9510 = !DILocation(line: 472, column: 60, scope: !5428, inlinedAt: !9507)
!9511 = !DILocation(line: 478, column: 51, scope: !5433, inlinedAt: !9508)
!9512 = !DILocation(line: 478, column: 63, scope: !5433, inlinedAt: !9508)
!9513 = !DILocation(line: 480, column: 15, scope: !5433, inlinedAt: !9508)
!9514 = !DILocation(line: 538, column: 45, scope: !5407, inlinedAt: !9498)
!9515 = !DILocation(line: 538, column: 57, scope: !5407, inlinedAt: !9498)
!9516 = !DILocation(line: 542, column: 16, scope: !5405, inlinedAt: !9498)
!9517 = !DILocalVariable(name: "dev", arg: 1, scope: !9495, file: !3, line: 167, type: !4278)
!9518 = !DILocation(line: 167, column: 43, scope: !9495)
!9519 = !DILocalVariable(name: "index", arg: 2, scope: !9495, file: !3, line: 167, type: !224)
!9520 = !DILocation(line: 167, column: 52, scope: !9495)
!9521 = !DILocalVariable(name: "data", arg: 3, scope: !9495, file: !3, line: 167, type: !224)
!9522 = !DILocation(line: 167, column: 63, scope: !9495)
!9523 = !DILocalVariable(name: "buf", scope: !9495, file: !3, line: 169, type: !1445)
!9524 = !DILocation(line: 169, column: 7, scope: !9495)
!9525 = !DILocation(line: 540, column: 27, scope: !5406, inlinedAt: !9498)
!9526 = !DILocation(line: 540, column: 6, scope: !5406, inlinedAt: !9498)
!9527 = !DILocation(line: 540, column: 6, scope: !5407, inlinedAt: !9498)
!9528 = !DILocation(line: 544, column: 7, scope: !5435, inlinedAt: !9498)
!9529 = !DILocation(line: 544, column: 12, scope: !5435, inlinedAt: !9498)
!9530 = !DILocation(line: 544, column: 7, scope: !5405, inlinedAt: !9498)
!9531 = !DILocation(line: 545, column: 25, scope: !5435, inlinedAt: !9498)
!9532 = !DILocation(line: 545, column: 31, scope: !5435, inlinedAt: !9498)
!9533 = !DILocation(line: 480, column: 33, scope: !5433, inlinedAt: !9508)
!9534 = !DILocation(line: 480, column: 23, scope: !5433, inlinedAt: !9508)
!9535 = !DILocation(line: 481, column: 29, scope: !5433, inlinedAt: !9508)
!9536 = !DILocation(line: 481, column: 35, scope: !5433, inlinedAt: !9508)
!9537 = !DILocation(line: 481, column: 42, scope: !5433, inlinedAt: !9508)
!9538 = !DILocation(line: 474, column: 23, scope: !5428, inlinedAt: !9507)
!9539 = !DILocation(line: 474, column: 29, scope: !5428, inlinedAt: !9507)
!9540 = !DILocation(line: 474, column: 36, scope: !5428, inlinedAt: !9507)
!9541 = !DILocation(line: 474, column: 9, scope: !5428, inlinedAt: !9507)
!9542 = !DILocation(line: 545, column: 4, scope: !5435, inlinedAt: !9498)
!9543 = !DILocation(line: 547, column: 25, scope: !5405, inlinedAt: !9498)
!9544 = !DILocation(line: 348, column: 7, scope: !5479, inlinedAt: !9505)
!9545 = !DILocation(line: 348, column: 6, scope: !5422, inlinedAt: !9505)
!9546 = !DILocation(line: 349, column: 3, scope: !5479, inlinedAt: !9505)
!9547 = !DILocation(line: 351, column: 6, scope: !5483, inlinedAt: !9505)
!9548 = !DILocation(line: 351, column: 11, scope: !5483, inlinedAt: !9505)
!9549 = !DILocation(line: 351, column: 6, scope: !5422, inlinedAt: !9505)
!9550 = !DILocation(line: 352, column: 3, scope: !5483, inlinedAt: !9505)
!9551 = !DILocation(line: 354, column: 32, scope: !5488, inlinedAt: !9505)
!9552 = !DILocation(line: 354, column: 37, scope: !5488, inlinedAt: !9505)
!9553 = !DILocation(line: 354, column: 42, scope: !5488, inlinedAt: !9505)
!9554 = !DILocation(line: 354, column: 45, scope: !5488, inlinedAt: !9505)
!9555 = !DILocation(line: 354, column: 50, scope: !5488, inlinedAt: !9505)
!9556 = !DILocation(line: 354, column: 6, scope: !5422, inlinedAt: !9505)
!9557 = !DILocation(line: 355, column: 3, scope: !5488, inlinedAt: !9505)
!9558 = !DILocation(line: 356, column: 32, scope: !5496, inlinedAt: !9505)
!9559 = !DILocation(line: 356, column: 37, scope: !5496, inlinedAt: !9505)
!9560 = !DILocation(line: 356, column: 43, scope: !5496, inlinedAt: !9505)
!9561 = !DILocation(line: 356, column: 46, scope: !5496, inlinedAt: !9505)
!9562 = !DILocation(line: 356, column: 51, scope: !5496, inlinedAt: !9505)
!9563 = !DILocation(line: 356, column: 6, scope: !5422, inlinedAt: !9505)
!9564 = !DILocation(line: 357, column: 3, scope: !5496, inlinedAt: !9505)
!9565 = !DILocation(line: 358, column: 6, scope: !5504, inlinedAt: !9505)
!9566 = !DILocation(line: 358, column: 11, scope: !5504, inlinedAt: !9505)
!9567 = !DILocation(line: 358, column: 6, scope: !5422, inlinedAt: !9505)
!9568 = !DILocation(line: 358, column: 26, scope: !5504, inlinedAt: !9505)
!9569 = !DILocation(line: 359, column: 6, scope: !5509, inlinedAt: !9505)
!9570 = !DILocation(line: 359, column: 11, scope: !5509, inlinedAt: !9505)
!9571 = !DILocation(line: 359, column: 6, scope: !5422, inlinedAt: !9505)
!9572 = !DILocation(line: 359, column: 26, scope: !5509, inlinedAt: !9505)
!9573 = !DILocation(line: 360, column: 6, scope: !5514, inlinedAt: !9505)
!9574 = !DILocation(line: 360, column: 11, scope: !5514, inlinedAt: !9505)
!9575 = !DILocation(line: 360, column: 6, scope: !5422, inlinedAt: !9505)
!9576 = !DILocation(line: 360, column: 26, scope: !5514, inlinedAt: !9505)
!9577 = !DILocation(line: 361, column: 6, scope: !5519, inlinedAt: !9505)
!9578 = !DILocation(line: 361, column: 11, scope: !5519, inlinedAt: !9505)
!9579 = !DILocation(line: 361, column: 6, scope: !5422, inlinedAt: !9505)
!9580 = !DILocation(line: 361, column: 26, scope: !5519, inlinedAt: !9505)
!9581 = !DILocation(line: 362, column: 6, scope: !5524, inlinedAt: !9505)
!9582 = !DILocation(line: 362, column: 11, scope: !5524, inlinedAt: !9505)
!9583 = !DILocation(line: 362, column: 6, scope: !5422, inlinedAt: !9505)
!9584 = !DILocation(line: 362, column: 26, scope: !5524, inlinedAt: !9505)
!9585 = !DILocation(line: 363, column: 6, scope: !5529, inlinedAt: !9505)
!9586 = !DILocation(line: 363, column: 11, scope: !5529, inlinedAt: !9505)
!9587 = !DILocation(line: 363, column: 6, scope: !5422, inlinedAt: !9505)
!9588 = !DILocation(line: 363, column: 26, scope: !5529, inlinedAt: !9505)
!9589 = !DILocation(line: 364, column: 6, scope: !5534, inlinedAt: !9505)
!9590 = !DILocation(line: 364, column: 11, scope: !5534, inlinedAt: !9505)
!9591 = !DILocation(line: 364, column: 6, scope: !5422, inlinedAt: !9505)
!9592 = !DILocation(line: 364, column: 26, scope: !5534, inlinedAt: !9505)
!9593 = !DILocation(line: 365, column: 6, scope: !5539, inlinedAt: !9505)
!9594 = !DILocation(line: 365, column: 11, scope: !5539, inlinedAt: !9505)
!9595 = !DILocation(line: 365, column: 6, scope: !5422, inlinedAt: !9505)
!9596 = !DILocation(line: 365, column: 26, scope: !5539, inlinedAt: !9505)
!9597 = !DILocation(line: 366, column: 6, scope: !5544, inlinedAt: !9505)
!9598 = !DILocation(line: 366, column: 11, scope: !5544, inlinedAt: !9505)
!9599 = !DILocation(line: 366, column: 6, scope: !5422, inlinedAt: !9505)
!9600 = !DILocation(line: 366, column: 26, scope: !5544, inlinedAt: !9505)
!9601 = !DILocation(line: 367, column: 6, scope: !5549, inlinedAt: !9505)
!9602 = !DILocation(line: 367, column: 11, scope: !5549, inlinedAt: !9505)
!9603 = !DILocation(line: 367, column: 6, scope: !5422, inlinedAt: !9505)
!9604 = !DILocation(line: 367, column: 26, scope: !5549, inlinedAt: !9505)
!9605 = !DILocation(line: 368, column: 6, scope: !5554, inlinedAt: !9505)
!9606 = !DILocation(line: 368, column: 11, scope: !5554, inlinedAt: !9505)
!9607 = !DILocation(line: 368, column: 6, scope: !5422, inlinedAt: !9505)
!9608 = !DILocation(line: 368, column: 26, scope: !5554, inlinedAt: !9505)
!9609 = !DILocation(line: 369, column: 6, scope: !5559, inlinedAt: !9505)
!9610 = !DILocation(line: 369, column: 11, scope: !5559, inlinedAt: !9505)
!9611 = !DILocation(line: 369, column: 6, scope: !5422, inlinedAt: !9505)
!9612 = !DILocation(line: 369, column: 26, scope: !5559, inlinedAt: !9505)
!9613 = !DILocation(line: 370, column: 6, scope: !5564, inlinedAt: !9505)
!9614 = !DILocation(line: 370, column: 11, scope: !5564, inlinedAt: !9505)
!9615 = !DILocation(line: 370, column: 6, scope: !5422, inlinedAt: !9505)
!9616 = !DILocation(line: 370, column: 26, scope: !5564, inlinedAt: !9505)
!9617 = !DILocation(line: 371, column: 6, scope: !5569, inlinedAt: !9505)
!9618 = !DILocation(line: 371, column: 11, scope: !5569, inlinedAt: !9505)
!9619 = !DILocation(line: 371, column: 6, scope: !5422, inlinedAt: !9505)
!9620 = !DILocation(line: 371, column: 26, scope: !5569, inlinedAt: !9505)
!9621 = !DILocation(line: 372, column: 6, scope: !5574, inlinedAt: !9505)
!9622 = !DILocation(line: 372, column: 11, scope: !5574, inlinedAt: !9505)
!9623 = !DILocation(line: 372, column: 6, scope: !5422, inlinedAt: !9505)
!9624 = !DILocation(line: 372, column: 26, scope: !5574, inlinedAt: !9505)
!9625 = !DILocation(line: 373, column: 6, scope: !5579, inlinedAt: !9505)
!9626 = !DILocation(line: 373, column: 11, scope: !5579, inlinedAt: !9505)
!9627 = !DILocation(line: 373, column: 6, scope: !5422, inlinedAt: !9505)
!9628 = !DILocation(line: 373, column: 26, scope: !5579, inlinedAt: !9505)
!9629 = !DILocation(line: 374, column: 6, scope: !5584, inlinedAt: !9505)
!9630 = !DILocation(line: 374, column: 11, scope: !5584, inlinedAt: !9505)
!9631 = !DILocation(line: 374, column: 6, scope: !5422, inlinedAt: !9505)
!9632 = !DILocation(line: 374, column: 26, scope: !5584, inlinedAt: !9505)
!9633 = !DILocation(line: 375, column: 6, scope: !5589, inlinedAt: !9505)
!9634 = !DILocation(line: 375, column: 11, scope: !5589, inlinedAt: !9505)
!9635 = !DILocation(line: 375, column: 6, scope: !5422, inlinedAt: !9505)
!9636 = !DILocation(line: 375, column: 27, scope: !5589, inlinedAt: !9505)
!9637 = !DILocation(line: 376, column: 6, scope: !5594, inlinedAt: !9505)
!9638 = !DILocation(line: 376, column: 11, scope: !5594, inlinedAt: !9505)
!9639 = !DILocation(line: 376, column: 6, scope: !5422, inlinedAt: !9505)
!9640 = !DILocation(line: 376, column: 32, scope: !5594, inlinedAt: !9505)
!9641 = !DILocation(line: 377, column: 6, scope: !5599, inlinedAt: !9505)
!9642 = !DILocation(line: 377, column: 11, scope: !5599, inlinedAt: !9505)
!9643 = !DILocation(line: 377, column: 6, scope: !5422, inlinedAt: !9505)
!9644 = !DILocation(line: 377, column: 32, scope: !5599, inlinedAt: !9505)
!9645 = !DILocation(line: 378, column: 6, scope: !5604, inlinedAt: !9505)
!9646 = !DILocation(line: 378, column: 11, scope: !5604, inlinedAt: !9505)
!9647 = !DILocation(line: 378, column: 6, scope: !5422, inlinedAt: !9505)
!9648 = !DILocation(line: 378, column: 32, scope: !5604, inlinedAt: !9505)
!9649 = !DILocation(line: 379, column: 6, scope: !5609, inlinedAt: !9505)
!9650 = !DILocation(line: 379, column: 11, scope: !5609, inlinedAt: !9505)
!9651 = !DILocation(line: 379, column: 6, scope: !5422, inlinedAt: !9505)
!9652 = !DILocation(line: 379, column: 33, scope: !5609, inlinedAt: !9505)
!9653 = !DILocation(line: 380, column: 6, scope: !5614, inlinedAt: !9505)
!9654 = !DILocation(line: 380, column: 11, scope: !5614, inlinedAt: !9505)
!9655 = !DILocation(line: 380, column: 6, scope: !5422, inlinedAt: !9505)
!9656 = !DILocation(line: 380, column: 33, scope: !5614, inlinedAt: !9505)
!9657 = !DILocation(line: 381, column: 6, scope: !5619, inlinedAt: !9505)
!9658 = !DILocation(line: 381, column: 11, scope: !5619, inlinedAt: !9505)
!9659 = !DILocation(line: 381, column: 6, scope: !5422, inlinedAt: !9505)
!9660 = !DILocation(line: 381, column: 33, scope: !5619, inlinedAt: !9505)
!9661 = !DILocation(line: 382, column: 2, scope: !5624, inlinedAt: !9505)
!9662 = !DILocation(line: 382, column: 2, scope: !5628, inlinedAt: !9505)
!9663 = !DILocation(line: 382, column: 2, scope: !5629, inlinedAt: !9505)
!9664 = !DILocation(line: 386, column: 1, scope: !5422, inlinedAt: !9505)
!9665 = !DILocation(line: 547, column: 9, scope: !5405, inlinedAt: !9498)
!9666 = !DILocation(line: 549, column: 8, scope: !5635, inlinedAt: !9498)
!9667 = !DILocation(line: 549, column: 7, scope: !5405, inlinedAt: !9498)
!9668 = !DILocation(line: 550, column: 4, scope: !5635, inlinedAt: !9498)
!9669 = !DILocation(line: 553, column: 33, scope: !5405, inlinedAt: !9498)
!9670 = !DILocation(line: 325, column: 6, scope: !5640, inlinedAt: !9503)
!9671 = !DILocation(line: 325, column: 6, scope: !5416, inlinedAt: !9503)
!9672 = !DILocation(line: 326, column: 3, scope: !5640, inlinedAt: !9503)
!9673 = !DILocation(line: 332, column: 9, scope: !5416, inlinedAt: !9503)
!9674 = !DILocation(line: 332, column: 15, scope: !5416, inlinedAt: !9503)
!9675 = !DILocation(line: 332, column: 2, scope: !5416, inlinedAt: !9503)
!9676 = !DILocation(line: 336, column: 1, scope: !5416, inlinedAt: !9503)
!9677 = !DILocation(line: 553, column: 5, scope: !5405, inlinedAt: !9498)
!9678 = !DILocation(line: 553, column: 41, scope: !5405, inlinedAt: !9498)
!9679 = !DILocation(line: 554, column: 5, scope: !5405, inlinedAt: !9498)
!9680 = !DILocation(line: 554, column: 12, scope: !5405, inlinedAt: !9498)
!9681 = !DILocation(line: 448, column: 31, scope: !5400, inlinedAt: !9497)
!9682 = !DILocation(line: 448, column: 34, scope: !5400, inlinedAt: !9497)
!9683 = !DILocation(line: 448, column: 14, scope: !5400, inlinedAt: !9497)
!9684 = !DILocation(line: 450, column: 22, scope: !5400, inlinedAt: !9497)
!9685 = !DILocation(line: 450, column: 25, scope: !5400, inlinedAt: !9497)
!9686 = !DILocation(line: 450, column: 30, scope: !5400, inlinedAt: !9497)
!9687 = !DILocation(line: 450, column: 36, scope: !5400, inlinedAt: !9497)
!9688 = !DILocation(line: 450, column: 8, scope: !5400, inlinedAt: !9497)
!9689 = !DILocation(line: 450, column: 6, scope: !5400, inlinedAt: !9497)
!9690 = !DILocation(line: 451, column: 9, scope: !5400, inlinedAt: !9497)
!9691 = !DILocation(line: 552, column: 3, scope: !5405, inlinedAt: !9498)
!9692 = !DILocation(line: 557, column: 19, scope: !5407, inlinedAt: !9498)
!9693 = !DILocation(line: 557, column: 25, scope: !5407, inlinedAt: !9498)
!9694 = !DILocation(line: 557, column: 9, scope: !5407, inlinedAt: !9498)
!9695 = !DILocation(line: 557, column: 2, scope: !5407, inlinedAt: !9498)
!9696 = !DILocation(line: 558, column: 1, scope: !5407, inlinedAt: !9498)
!9697 = !DILocation(line: 169, column: 13, scope: !9495)
!9698 = !DILocalVariable(name: "ret", scope: !9495, file: !3, line: 170, type: !217)
!9699 = !DILocation(line: 170, column: 6, scope: !9495)
!9700 = !DILocation(line: 172, column: 2, scope: !9495)
!9701 = !DILocation(line: 172, column: 2, scope: !9702)
!9702 = distinct !DILexicalBlock(scope: !9703, file: !3, line: 172, column: 2)
!9703 = distinct !DILexicalBlock(scope: !9495, file: !3, line: 172, column: 2)
!9704 = !DILocation(line: 172, column: 2, scope: !9703)
!9705 = !DILocation(line: 172, column: 2, scope: !9706)
!9706 = distinct !DILexicalBlock(scope: !9702, file: !3, line: 172, column: 2)
!9707 = !DILocation(line: 172, column: 2, scope: !9708)
!9708 = distinct !DILexicalBlock(scope: !9706, file: !3, line: 172, column: 2)
!9709 = !DILocation(line: 172, column: 2, scope: !9710)
!9710 = distinct !DILexicalBlock(scope: !9706, file: !3, line: 172, column: 2)
!9711 = !{i32 -2141008908, i32 -2141008879, i32 -2141008833, i32 -2141008775, i32 -2141008721, i32 -2141008667, i32 -2141008612, i32 -2141008581}
!9712 = !DILocation(line: 172, column: 2, scope: !9713)
!9713 = distinct !DILexicalBlock(scope: !9714, file: !3, line: 172, column: 2)
!9714 = distinct !DILexicalBlock(scope: !9706, file: !3, line: 172, column: 2)
!9715 = !{i32 -2141008129, i32 -2141008122, i32 -2141008068, i32 -2141008037, i32 -2141008007}
!9716 = !DILocation(line: 172, column: 2, scope: !9714)
!9717 = !DILocation(line: 174, column: 7, scope: !9718)
!9718 = distinct !DILexicalBlock(scope: !9495, file: !3, line: 174, column: 6)
!9719 = !DILocation(line: 174, column: 6, scope: !9495)
!9720 = !DILocation(line: 175, column: 3, scope: !9718)
!9721 = !DILocation(line: 177, column: 9, scope: !9495)
!9722 = !DILocation(line: 177, column: 3, scope: !9495)
!9723 = !DILocation(line: 177, column: 7, scope: !9495)
!9724 = !DILocation(line: 178, column: 2, scope: !9495)
!9725 = !DILocation(line: 178, column: 2, scope: !9726)
!9726 = distinct !DILexicalBlock(scope: !9495, file: !3, line: 178, column: 2)
!9727 = !DILocation(line: 180, column: 24, scope: !9495)
!9728 = !DILocation(line: 180, column: 29, scope: !9495)
!9729 = !DILocation(line: 180, column: 35, scope: !9495)
!9730 = !DILocation(line: 183, column: 7, scope: !9495)
!9731 = !DILocation(line: 183, column: 14, scope: !9495)
!9732 = !DILocation(line: 180, column: 8, scope: !9495)
!9733 = !DILocation(line: 180, column: 6, scope: !9495)
!9734 = !DILocation(line: 185, column: 8, scope: !9495)
!9735 = !DILocation(line: 185, column: 2, scope: !9495)
!9736 = !DILocation(line: 187, column: 6, scope: !9737)
!9737 = distinct !DILexicalBlock(scope: !9495, file: !3, line: 187, column: 6)
!9738 = !DILocation(line: 187, column: 6, scope: !9495)
!9739 = !DILocation(line: 188, column: 3, scope: !9737)
!9740 = !DILocation(line: 191, column: 9, scope: !9495)
!9741 = !DILocation(line: 191, column: 2, scope: !9495)
!9742 = !DILocation(line: 192, column: 1, scope: !9495)
!9743 = distinct !DISubprogram(name: "ufx_blank", scope: !3, file: !3, line: 237, type: !9744, scopeLine: 238, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !284)
!9744 = !DISubroutineType(types: !9745)
!9745 = !{!217, !4278, !521}
!9746 = !DILocalVariable(name: "dev", arg: 1, scope: !9743, file: !3, line: 237, type: !4278)
!9747 = !DILocation(line: 237, column: 39, scope: !9743)
!9748 = !DILocalVariable(name: "wait", arg: 2, scope: !9743, file: !3, line: 237, type: !521)
!9749 = !DILocation(line: 237, column: 49, scope: !9743)
!9750 = !DILocalVariable(name: "dc_ctrl", scope: !9743, file: !3, line: 239, type: !224)
!9751 = !DILocation(line: 239, column: 6, scope: !9743)
!9752 = !DILocalVariable(name: "dc_sts", scope: !9743, file: !3, line: 239, type: !224)
!9753 = !DILocation(line: 239, column: 15, scope: !9743)
!9754 = !DILocalVariable(name: "i", scope: !9743, file: !3, line: 240, type: !217)
!9755 = !DILocation(line: 240, column: 6, scope: !9743)
!9756 = !DILocalVariable(name: "status", scope: !9743, file: !3, line: 242, type: !217)
!9757 = !DILocation(line: 242, column: 6, scope: !9743)
!9758 = !DILocation(line: 242, column: 28, scope: !9743)
!9759 = !DILocation(line: 242, column: 15, scope: !9743)
!9760 = !DILocation(line: 243, column: 2, scope: !9761)
!9761 = distinct !DILexicalBlock(scope: !9762, file: !3, line: 243, column: 2)
!9762 = distinct !DILexicalBlock(scope: !9743, file: !3, line: 243, column: 2)
!9763 = !DILocation(line: 243, column: 2, scope: !9762)
!9764 = !DILocation(line: 243, column: 2, scope: !9765)
!9765 = distinct !DILexicalBlock(scope: !9761, file: !3, line: 243, column: 2)
!9766 = !DILocation(line: 245, column: 24, scope: !9743)
!9767 = !DILocation(line: 245, column: 11, scope: !9743)
!9768 = !DILocation(line: 245, column: 9, scope: !9743)
!9769 = !DILocation(line: 246, column: 2, scope: !9770)
!9770 = distinct !DILexicalBlock(scope: !9771, file: !3, line: 246, column: 2)
!9771 = distinct !DILexicalBlock(scope: !9743, file: !3, line: 246, column: 2)
!9772 = !DILocation(line: 246, column: 2, scope: !9771)
!9773 = !DILocation(line: 246, column: 2, scope: !9774)
!9774 = distinct !DILexicalBlock(scope: !9770, file: !3, line: 246, column: 2)
!9775 = !DILocation(line: 249, column: 7, scope: !9776)
!9776 = distinct !DILexicalBlock(scope: !9743, file: !3, line: 249, column: 6)
!9777 = !DILocation(line: 249, column: 14, scope: !9776)
!9778 = !DILocation(line: 249, column: 28, scope: !9776)
!9779 = !DILocation(line: 249, column: 32, scope: !9776)
!9780 = !DILocation(line: 249, column: 40, scope: !9776)
!9781 = !DILocation(line: 249, column: 6, scope: !9743)
!9782 = !DILocation(line: 250, column: 3, scope: !9776)
!9783 = !DILocation(line: 253, column: 10, scope: !9743)
!9784 = !DILocation(line: 254, column: 25, scope: !9743)
!9785 = !DILocation(line: 254, column: 38, scope: !9743)
!9786 = !DILocation(line: 254, column: 11, scope: !9743)
!9787 = !DILocation(line: 254, column: 9, scope: !9743)
!9788 = !DILocation(line: 255, column: 2, scope: !9789)
!9789 = distinct !DILexicalBlock(scope: !9790, file: !3, line: 255, column: 2)
!9790 = distinct !DILexicalBlock(scope: !9743, file: !3, line: 255, column: 2)
!9791 = !DILocation(line: 255, column: 2, scope: !9790)
!9792 = !DILocation(line: 255, column: 2, scope: !9793)
!9793 = distinct !DILexicalBlock(scope: !9789, file: !3, line: 255, column: 2)
!9794 = !DILocation(line: 258, column: 7, scope: !9795)
!9795 = distinct !DILexicalBlock(scope: !9743, file: !3, line: 258, column: 6)
!9796 = !DILocation(line: 258, column: 6, scope: !9743)
!9797 = !DILocation(line: 259, column: 3, scope: !9795)
!9798 = !DILocation(line: 261, column: 9, scope: !9799)
!9799 = distinct !DILexicalBlock(scope: !9743, file: !3, line: 261, column: 2)
!9800 = !DILocation(line: 261, column: 7, scope: !9799)
!9801 = !DILocation(line: 261, column: 14, scope: !9802)
!9802 = distinct !DILexicalBlock(scope: !9799, file: !3, line: 261, column: 2)
!9803 = !DILocation(line: 261, column: 16, scope: !9802)
!9804 = !DILocation(line: 261, column: 2, scope: !9799)
!9805 = !DILocation(line: 262, column: 25, scope: !9806)
!9806 = distinct !DILexicalBlock(scope: !9802, file: !3, line: 261, column: 28)
!9807 = !DILocation(line: 262, column: 12, scope: !9806)
!9808 = !DILocation(line: 262, column: 10, scope: !9806)
!9809 = !DILocation(line: 263, column: 3, scope: !9810)
!9810 = distinct !DILexicalBlock(scope: !9811, file: !3, line: 263, column: 3)
!9811 = distinct !DILexicalBlock(scope: !9806, file: !3, line: 263, column: 3)
!9812 = !DILocation(line: 263, column: 3, scope: !9811)
!9813 = !DILocation(line: 263, column: 3, scope: !9814)
!9814 = distinct !DILexicalBlock(scope: !9810, file: !3, line: 263, column: 3)
!9815 = !DILocation(line: 265, column: 7, scope: !9816)
!9816 = distinct !DILexicalBlock(scope: !9806, file: !3, line: 265, column: 7)
!9817 = !DILocation(line: 265, column: 14, scope: !9816)
!9818 = !DILocation(line: 265, column: 7, scope: !9806)
!9819 = !DILocation(line: 266, column: 4, scope: !9816)
!9820 = !DILocation(line: 267, column: 2, scope: !9806)
!9821 = !DILocation(line: 261, column: 24, scope: !9802)
!9822 = !DILocation(line: 261, column: 2, scope: !9802)
!9823 = distinct !{!9823, !9804, !9824}
!9824 = !DILocation(line: 267, column: 2, scope: !9799)
!9825 = !DILocation(line: 270, column: 2, scope: !9743)
!9826 = !DILocation(line: 271, column: 1, scope: !9743)
!9827 = distinct !DISubprogram(name: "ufx_disable", scope: !3, file: !3, line: 311, type: !9744, scopeLine: 312, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !284)
!9828 = !DILocalVariable(name: "dev", arg: 1, scope: !9827, file: !3, line: 311, type: !4278)
!9829 = !DILocation(line: 311, column: 41, scope: !9827)
!9830 = !DILocalVariable(name: "wait", arg: 2, scope: !9827, file: !3, line: 311, type: !521)
!9831 = !DILocation(line: 311, column: 51, scope: !9827)
!9832 = !DILocalVariable(name: "dc_ctrl", scope: !9827, file: !3, line: 313, type: !224)
!9833 = !DILocation(line: 313, column: 6, scope: !9827)
!9834 = !DILocalVariable(name: "dc_sts", scope: !9827, file: !3, line: 313, type: !224)
!9835 = !DILocation(line: 313, column: 15, scope: !9827)
!9836 = !DILocalVariable(name: "i", scope: !9827, file: !3, line: 314, type: !217)
!9837 = !DILocation(line: 314, column: 6, scope: !9827)
!9838 = !DILocalVariable(name: "status", scope: !9827, file: !3, line: 316, type: !217)
!9839 = !DILocation(line: 316, column: 6, scope: !9827)
!9840 = !DILocation(line: 316, column: 28, scope: !9827)
!9841 = !DILocation(line: 316, column: 15, scope: !9827)
!9842 = !DILocation(line: 317, column: 2, scope: !9843)
!9843 = distinct !DILexicalBlock(scope: !9844, file: !3, line: 317, column: 2)
!9844 = distinct !DILexicalBlock(scope: !9827, file: !3, line: 317, column: 2)
!9845 = !DILocation(line: 317, column: 2, scope: !9844)
!9846 = !DILocation(line: 317, column: 2, scope: !9847)
!9847 = distinct !DILexicalBlock(scope: !9843, file: !3, line: 317, column: 2)
!9848 = !DILocation(line: 319, column: 24, scope: !9827)
!9849 = !DILocation(line: 319, column: 11, scope: !9827)
!9850 = !DILocation(line: 319, column: 9, scope: !9827)
!9851 = !DILocation(line: 320, column: 2, scope: !9852)
!9852 = distinct !DILexicalBlock(scope: !9853, file: !3, line: 320, column: 2)
!9853 = distinct !DILexicalBlock(scope: !9827, file: !3, line: 320, column: 2)
!9854 = !DILocation(line: 320, column: 2, scope: !9853)
!9855 = !DILocation(line: 320, column: 2, scope: !9856)
!9856 = distinct !DILexicalBlock(scope: !9852, file: !3, line: 320, column: 2)
!9857 = !DILocation(line: 323, column: 8, scope: !9858)
!9858 = distinct !DILexicalBlock(scope: !9827, file: !3, line: 323, column: 6)
!9859 = !DILocation(line: 323, column: 15, scope: !9858)
!9860 = !DILocation(line: 323, column: 29, scope: !9858)
!9861 = !DILocation(line: 323, column: 35, scope: !9858)
!9862 = !DILocation(line: 323, column: 40, scope: !9858)
!9863 = !DILocation(line: 323, column: 48, scope: !9858)
!9864 = !DILocation(line: 323, column: 62, scope: !9858)
!9865 = !DILocation(line: 323, column: 6, scope: !9827)
!9866 = !DILocation(line: 324, column: 3, scope: !9858)
!9867 = !DILocation(line: 327, column: 10, scope: !9827)
!9868 = !DILocation(line: 328, column: 25, scope: !9827)
!9869 = !DILocation(line: 328, column: 38, scope: !9827)
!9870 = !DILocation(line: 328, column: 11, scope: !9827)
!9871 = !DILocation(line: 328, column: 9, scope: !9827)
!9872 = !DILocation(line: 329, column: 2, scope: !9873)
!9873 = distinct !DILexicalBlock(scope: !9874, file: !3, line: 329, column: 2)
!9874 = distinct !DILexicalBlock(scope: !9827, file: !3, line: 329, column: 2)
!9875 = !DILocation(line: 329, column: 2, scope: !9874)
!9876 = !DILocation(line: 329, column: 2, scope: !9877)
!9877 = distinct !DILexicalBlock(scope: !9873, file: !3, line: 329, column: 2)
!9878 = !DILocation(line: 332, column: 7, scope: !9879)
!9879 = distinct !DILexicalBlock(scope: !9827, file: !3, line: 332, column: 6)
!9880 = !DILocation(line: 332, column: 6, scope: !9827)
!9881 = !DILocation(line: 333, column: 3, scope: !9879)
!9882 = !DILocation(line: 335, column: 9, scope: !9883)
!9883 = distinct !DILexicalBlock(scope: !9827, file: !3, line: 335, column: 2)
!9884 = !DILocation(line: 335, column: 7, scope: !9883)
!9885 = !DILocation(line: 335, column: 14, scope: !9886)
!9886 = distinct !DILexicalBlock(scope: !9883, file: !3, line: 335, column: 2)
!9887 = !DILocation(line: 335, column: 16, scope: !9886)
!9888 = !DILocation(line: 335, column: 2, scope: !9883)
!9889 = !DILocation(line: 336, column: 25, scope: !9890)
!9890 = distinct !DILexicalBlock(scope: !9886, file: !3, line: 335, column: 28)
!9891 = !DILocation(line: 336, column: 12, scope: !9890)
!9892 = !DILocation(line: 336, column: 10, scope: !9890)
!9893 = !DILocation(line: 337, column: 3, scope: !9894)
!9894 = distinct !DILexicalBlock(scope: !9895, file: !3, line: 337, column: 3)
!9895 = distinct !DILexicalBlock(scope: !9890, file: !3, line: 337, column: 3)
!9896 = !DILocation(line: 337, column: 3, scope: !9895)
!9897 = !DILocation(line: 337, column: 3, scope: !9898)
!9898 = distinct !DILexicalBlock(scope: !9894, file: !3, line: 337, column: 3)
!9899 = !DILocation(line: 339, column: 8, scope: !9900)
!9900 = distinct !DILexicalBlock(scope: !9890, file: !3, line: 339, column: 7)
!9901 = !DILocation(line: 339, column: 15, scope: !9900)
!9902 = !DILocation(line: 339, column: 29, scope: !9900)
!9903 = !DILocation(line: 339, column: 7, scope: !9890)
!9904 = !DILocation(line: 340, column: 4, scope: !9900)
!9905 = !DILocation(line: 341, column: 2, scope: !9890)
!9906 = !DILocation(line: 335, column: 24, scope: !9886)
!9907 = !DILocation(line: 335, column: 2, scope: !9886)
!9908 = distinct !{!9908, !9888, !9909}
!9909 = !DILocation(line: 341, column: 2, scope: !9883)
!9910 = !DILocation(line: 344, column: 2, scope: !9827)
!9911 = !DILocation(line: 345, column: 1, scope: !9827)
!9912 = distinct !DISubprogram(name: "ufx_config_pix_clk", scope: !3, file: !3, line: 613, type: !9913, scopeLine: 614, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !284)
!9913 = !DISubroutineType(types: !9914)
!9914 = !{!217, !4278, !224}
!9915 = !DILocalVariable(name: "dev", arg: 1, scope: !9912, file: !3, line: 613, type: !4278)
!9916 = !DILocation(line: 613, column: 48, scope: !9912)
!9917 = !DILocalVariable(name: "pixclock", arg: 2, scope: !9912, file: !3, line: 613, type: !224)
!9918 = !DILocation(line: 613, column: 57, scope: !9912)
!9919 = !DILocalVariable(name: "asic_pll", scope: !9912, file: !3, line: 615, type: !9920)
!9920 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pll_values", file: !3, line: 494, size: 256, elements: !9921)
!9921 = !{!9922, !9923, !9924, !9925, !9926, !9927, !9928, !9929}
!9922 = !DIDerivedType(tag: DW_TAG_member, name: "div_r0", scope: !9920, file: !3, line: 495, baseType: !224, size: 32)
!9923 = !DIDerivedType(tag: DW_TAG_member, name: "div_f0", scope: !9920, file: !3, line: 496, baseType: !224, size: 32, offset: 32)
!9924 = !DIDerivedType(tag: DW_TAG_member, name: "div_q0", scope: !9920, file: !3, line: 497, baseType: !224, size: 32, offset: 64)
!9925 = !DIDerivedType(tag: DW_TAG_member, name: "range0", scope: !9920, file: !3, line: 498, baseType: !224, size: 32, offset: 96)
!9926 = !DIDerivedType(tag: DW_TAG_member, name: "div_r1", scope: !9920, file: !3, line: 499, baseType: !224, size: 32, offset: 128)
!9927 = !DIDerivedType(tag: DW_TAG_member, name: "div_f1", scope: !9920, file: !3, line: 500, baseType: !224, size: 32, offset: 160)
!9928 = !DIDerivedType(tag: DW_TAG_member, name: "div_q1", scope: !9920, file: !3, line: 501, baseType: !224, size: 32, offset: 192)
!9929 = !DIDerivedType(tag: DW_TAG_member, name: "range1", scope: !9920, file: !3, line: 502, baseType: !224, size: 32, offset: 224)
!9930 = !DILocation(line: 615, column: 20, scope: !9912)
!9931 = !DILocalVariable(name: "value", scope: !9912, file: !3, line: 616, type: !224)
!9932 = !DILocation(line: 616, column: 6, scope: !9912)
!9933 = !DILocalVariable(name: "clk_pixel", scope: !9912, file: !3, line: 616, type: !224)
!9934 = !DILocation(line: 616, column: 13, scope: !9912)
!9935 = !DILocalVariable(name: "clk_pixel_pll", scope: !9912, file: !3, line: 616, type: !224)
!9936 = !DILocation(line: 616, column: 24, scope: !9912)
!9937 = !DILocalVariable(name: "status", scope: !9912, file: !3, line: 617, type: !217)
!9938 = !DILocation(line: 617, column: 6, scope: !9912)
!9939 = !DILocation(line: 620, column: 14, scope: !9912)
!9940 = !DILocation(line: 620, column: 34, scope: !9912)
!9941 = !DILocation(line: 620, column: 12, scope: !9912)
!9942 = !DILocation(line: 621, column: 2, scope: !9943)
!9943 = distinct !DILexicalBlock(scope: !9944, file: !3, line: 621, column: 2)
!9944 = distinct !DILexicalBlock(scope: !9912, file: !3, line: 621, column: 2)
!9945 = !DILocation(line: 621, column: 2, scope: !9944)
!9946 = !DILocation(line: 624, column: 18, scope: !9912)
!9947 = !DILocation(line: 624, column: 28, scope: !9912)
!9948 = !DILocation(line: 624, column: 16, scope: !9912)
!9949 = !DILocation(line: 626, column: 22, scope: !9912)
!9950 = !DILocation(line: 626, column: 2, scope: !9912)
!9951 = !DILocation(line: 629, column: 25, scope: !9912)
!9952 = !DILocation(line: 629, column: 11, scope: !9912)
!9953 = !DILocation(line: 629, column: 9, scope: !9912)
!9954 = !DILocation(line: 630, column: 2, scope: !9955)
!9955 = distinct !DILexicalBlock(scope: !9956, file: !3, line: 630, column: 2)
!9956 = distinct !DILexicalBlock(scope: !9912, file: !3, line: 630, column: 2)
!9957 = !DILocation(line: 630, column: 2, scope: !9956)
!9958 = !DILocation(line: 630, column: 2, scope: !9959)
!9959 = distinct !DILexicalBlock(scope: !9955, file: !3, line: 630, column: 2)
!9960 = !DILocation(line: 632, column: 20, scope: !9912)
!9961 = !DILocation(line: 632, column: 39, scope: !9912)
!9962 = !DILocation(line: 632, column: 46, scope: !9912)
!9963 = !DILocation(line: 632, column: 27, scope: !9912)
!9964 = !DILocation(line: 633, column: 13, scope: !9912)
!9965 = !DILocation(line: 633, column: 20, scope: !9912)
!9966 = !DILocation(line: 632, column: 52, scope: !9912)
!9967 = !DILocation(line: 633, column: 39, scope: !9912)
!9968 = !DILocation(line: 633, column: 46, scope: !9912)
!9969 = !DILocation(line: 633, column: 27, scope: !9912)
!9970 = !DILocation(line: 632, column: 8, scope: !9912)
!9971 = !DILocation(line: 634, column: 25, scope: !9912)
!9972 = !DILocation(line: 634, column: 38, scope: !9912)
!9973 = !DILocation(line: 634, column: 11, scope: !9912)
!9974 = !DILocation(line: 634, column: 9, scope: !9912)
!9975 = !DILocation(line: 635, column: 2, scope: !9976)
!9976 = distinct !DILexicalBlock(scope: !9977, file: !3, line: 635, column: 2)
!9977 = distinct !DILexicalBlock(scope: !9912, file: !3, line: 635, column: 2)
!9978 = !DILocation(line: 635, column: 2, scope: !9977)
!9979 = !DILocation(line: 635, column: 2, scope: !9980)
!9980 = distinct !DILexicalBlock(scope: !9976, file: !3, line: 635, column: 2)
!9981 = !DILocation(line: 637, column: 20, scope: !9912)
!9982 = !DILocation(line: 637, column: 39, scope: !9912)
!9983 = !DILocation(line: 637, column: 46, scope: !9912)
!9984 = !DILocation(line: 637, column: 27, scope: !9912)
!9985 = !DILocation(line: 638, column: 13, scope: !9912)
!9986 = !DILocation(line: 638, column: 20, scope: !9912)
!9987 = !DILocation(line: 637, column: 52, scope: !9912)
!9988 = !DILocation(line: 638, column: 39, scope: !9912)
!9989 = !DILocation(line: 638, column: 46, scope: !9912)
!9990 = !DILocation(line: 638, column: 27, scope: !9912)
!9991 = !DILocation(line: 637, column: 8, scope: !9912)
!9992 = !DILocation(line: 639, column: 25, scope: !9912)
!9993 = !DILocation(line: 639, column: 38, scope: !9912)
!9994 = !DILocation(line: 639, column: 11, scope: !9912)
!9995 = !DILocation(line: 639, column: 9, scope: !9912)
!9996 = !DILocation(line: 640, column: 2, scope: !9997)
!9997 = distinct !DILexicalBlock(scope: !9998, file: !3, line: 640, column: 2)
!9998 = distinct !DILexicalBlock(scope: !9912, file: !3, line: 640, column: 2)
!9999 = !DILocation(line: 640, column: 2, scope: !9998)
!10000 = !DILocation(line: 640, column: 2, scope: !10001)
!10001 = distinct !DILexicalBlock(scope: !9997, file: !3, line: 640, column: 2)
!10002 = !DILocation(line: 642, column: 30, scope: !9912)
!10003 = !DILocation(line: 642, column: 11, scope: !9912)
!10004 = !DILocation(line: 642, column: 9, scope: !9912)
!10005 = !DILocation(line: 643, column: 2, scope: !10006)
!10006 = distinct !DILexicalBlock(scope: !10007, file: !3, line: 643, column: 2)
!10007 = distinct !DILexicalBlock(scope: !9912, file: !3, line: 643, column: 2)
!10008 = !DILocation(line: 643, column: 2, scope: !10007)
!10009 = !DILocation(line: 643, column: 2, scope: !10010)
!10010 = distinct !DILexicalBlock(scope: !10006, file: !3, line: 643, column: 2)
!10011 = !DILocation(line: 645, column: 2, scope: !9912)
!10012 = !DILocation(line: 647, column: 30, scope: !9912)
!10013 = !DILocation(line: 647, column: 11, scope: !9912)
!10014 = !DILocation(line: 647, column: 9, scope: !9912)
!10015 = !DILocation(line: 648, column: 2, scope: !10016)
!10016 = distinct !DILexicalBlock(scope: !10017, file: !3, line: 648, column: 2)
!10017 = distinct !DILexicalBlock(scope: !9912, file: !3, line: 648, column: 2)
!10018 = !DILocation(line: 648, column: 2, scope: !10017)
!10019 = !DILocation(line: 648, column: 2, scope: !10020)
!10020 = distinct !DILexicalBlock(scope: !10016, file: !3, line: 648, column: 2)
!10021 = !DILocation(line: 650, column: 2, scope: !9912)
!10022 = !DILocation(line: 652, column: 30, scope: !9912)
!10023 = !DILocation(line: 652, column: 11, scope: !9912)
!10024 = !DILocation(line: 652, column: 9, scope: !9912)
!10025 = !DILocation(line: 653, column: 2, scope: !10026)
!10026 = distinct !DILexicalBlock(scope: !10027, file: !3, line: 653, column: 2)
!10027 = distinct !DILexicalBlock(scope: !9912, file: !3, line: 653, column: 2)
!10028 = !DILocation(line: 653, column: 2, scope: !10027)
!10029 = !DILocation(line: 653, column: 2, scope: !10030)
!10030 = distinct !DILexicalBlock(scope: !10026, file: !3, line: 653, column: 2)
!10031 = !DILocation(line: 655, column: 2, scope: !9912)
!10032 = !DILocation(line: 656, column: 1, scope: !9912)
!10033 = distinct !DISubprogram(name: "ufx_enable", scope: !3, file: !3, line: 348, type: !9744, scopeLine: 349, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !284)
!10034 = !DILocalVariable(name: "dev", arg: 1, scope: !10033, file: !3, line: 348, type: !4278)
!10035 = !DILocation(line: 348, column: 40, scope: !10033)
!10036 = !DILocalVariable(name: "wait", arg: 2, scope: !10033, file: !3, line: 348, type: !521)
!10037 = !DILocation(line: 348, column: 50, scope: !10033)
!10038 = !DILocalVariable(name: "dc_ctrl", scope: !10033, file: !3, line: 350, type: !224)
!10039 = !DILocation(line: 350, column: 6, scope: !10033)
!10040 = !DILocalVariable(name: "dc_sts", scope: !10033, file: !3, line: 350, type: !224)
!10041 = !DILocation(line: 350, column: 15, scope: !10033)
!10042 = !DILocalVariable(name: "i", scope: !10033, file: !3, line: 351, type: !217)
!10043 = !DILocation(line: 351, column: 6, scope: !10033)
!10044 = !DILocalVariable(name: "status", scope: !10033, file: !3, line: 353, type: !217)
!10045 = !DILocation(line: 353, column: 6, scope: !10033)
!10046 = !DILocation(line: 353, column: 28, scope: !10033)
!10047 = !DILocation(line: 353, column: 15, scope: !10033)
!10048 = !DILocation(line: 354, column: 2, scope: !10049)
!10049 = distinct !DILexicalBlock(scope: !10050, file: !3, line: 354, column: 2)
!10050 = distinct !DILexicalBlock(scope: !10033, file: !3, line: 354, column: 2)
!10051 = !DILocation(line: 354, column: 2, scope: !10050)
!10052 = !DILocation(line: 354, column: 2, scope: !10053)
!10053 = distinct !DILexicalBlock(scope: !10049, file: !3, line: 354, column: 2)
!10054 = !DILocation(line: 356, column: 24, scope: !10033)
!10055 = !DILocation(line: 356, column: 11, scope: !10033)
!10056 = !DILocation(line: 356, column: 9, scope: !10033)
!10057 = !DILocation(line: 357, column: 2, scope: !10058)
!10058 = distinct !DILexicalBlock(scope: !10059, file: !3, line: 357, column: 2)
!10059 = distinct !DILexicalBlock(scope: !10033, file: !3, line: 357, column: 2)
!10060 = !DILocation(line: 357, column: 2, scope: !10059)
!10061 = !DILocation(line: 357, column: 2, scope: !10062)
!10062 = distinct !DILexicalBlock(scope: !10058, file: !3, line: 357, column: 2)
!10063 = !DILocation(line: 360, column: 7, scope: !10064)
!10064 = distinct !DILexicalBlock(scope: !10033, file: !3, line: 360, column: 6)
!10065 = !DILocation(line: 360, column: 14, scope: !10064)
!10066 = !DILocation(line: 360, column: 28, scope: !10064)
!10067 = !DILocation(line: 360, column: 32, scope: !10064)
!10068 = !DILocation(line: 360, column: 40, scope: !10064)
!10069 = !DILocation(line: 360, column: 6, scope: !10033)
!10070 = !DILocation(line: 361, column: 3, scope: !10064)
!10071 = !DILocation(line: 364, column: 10, scope: !10033)
!10072 = !DILocation(line: 365, column: 25, scope: !10033)
!10073 = !DILocation(line: 365, column: 38, scope: !10033)
!10074 = !DILocation(line: 365, column: 11, scope: !10033)
!10075 = !DILocation(line: 365, column: 9, scope: !10033)
!10076 = !DILocation(line: 366, column: 2, scope: !10077)
!10077 = distinct !DILexicalBlock(scope: !10078, file: !3, line: 366, column: 2)
!10078 = distinct !DILexicalBlock(scope: !10033, file: !3, line: 366, column: 2)
!10079 = !DILocation(line: 366, column: 2, scope: !10078)
!10080 = !DILocation(line: 366, column: 2, scope: !10081)
!10081 = distinct !DILexicalBlock(scope: !10077, file: !3, line: 366, column: 2)
!10082 = !DILocation(line: 369, column: 7, scope: !10083)
!10083 = distinct !DILexicalBlock(scope: !10033, file: !3, line: 369, column: 6)
!10084 = !DILocation(line: 369, column: 6, scope: !10033)
!10085 = !DILocation(line: 370, column: 3, scope: !10083)
!10086 = !DILocation(line: 372, column: 9, scope: !10087)
!10087 = distinct !DILexicalBlock(scope: !10033, file: !3, line: 372, column: 2)
!10088 = !DILocation(line: 372, column: 7, scope: !10087)
!10089 = !DILocation(line: 372, column: 14, scope: !10090)
!10090 = distinct !DILexicalBlock(scope: !10087, file: !3, line: 372, column: 2)
!10091 = !DILocation(line: 372, column: 16, scope: !10090)
!10092 = !DILocation(line: 372, column: 2, scope: !10087)
!10093 = !DILocation(line: 373, column: 25, scope: !10094)
!10094 = distinct !DILexicalBlock(scope: !10090, file: !3, line: 372, column: 28)
!10095 = !DILocation(line: 373, column: 12, scope: !10094)
!10096 = !DILocation(line: 373, column: 10, scope: !10094)
!10097 = !DILocation(line: 374, column: 3, scope: !10098)
!10098 = distinct !DILexicalBlock(scope: !10099, file: !3, line: 374, column: 3)
!10099 = distinct !DILexicalBlock(scope: !10094, file: !3, line: 374, column: 3)
!10100 = !DILocation(line: 374, column: 3, scope: !10099)
!10101 = !DILocation(line: 374, column: 3, scope: !10102)
!10102 = distinct !DILexicalBlock(scope: !10098, file: !3, line: 374, column: 3)
!10103 = !DILocation(line: 376, column: 7, scope: !10104)
!10104 = distinct !DILexicalBlock(scope: !10094, file: !3, line: 376, column: 7)
!10105 = !DILocation(line: 376, column: 14, scope: !10104)
!10106 = !DILocation(line: 376, column: 7, scope: !10094)
!10107 = !DILocation(line: 377, column: 4, scope: !10104)
!10108 = !DILocation(line: 378, column: 2, scope: !10094)
!10109 = !DILocation(line: 372, column: 24, scope: !10090)
!10110 = !DILocation(line: 372, column: 2, scope: !10090)
!10111 = distinct !{!10111, !10092, !10112}
!10112 = !DILocation(line: 378, column: 2, scope: !10087)
!10113 = !DILocation(line: 381, column: 2, scope: !10033)
!10114 = !DILocation(line: 382, column: 1, scope: !10033)
!10115 = distinct !DISubprogram(name: "ufx_unblank", scope: !3, file: !3, line: 274, type: !9744, scopeLine: 275, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !284)
!10116 = !DILocalVariable(name: "dev", arg: 1, scope: !10115, file: !3, line: 274, type: !4278)
!10117 = !DILocation(line: 274, column: 41, scope: !10115)
!10118 = !DILocalVariable(name: "wait", arg: 2, scope: !10115, file: !3, line: 274, type: !521)
!10119 = !DILocation(line: 274, column: 51, scope: !10115)
!10120 = !DILocalVariable(name: "dc_ctrl", scope: !10115, file: !3, line: 276, type: !224)
!10121 = !DILocation(line: 276, column: 6, scope: !10115)
!10122 = !DILocalVariable(name: "dc_sts", scope: !10115, file: !3, line: 276, type: !224)
!10123 = !DILocation(line: 276, column: 15, scope: !10115)
!10124 = !DILocalVariable(name: "i", scope: !10115, file: !3, line: 277, type: !217)
!10125 = !DILocation(line: 277, column: 6, scope: !10115)
!10126 = !DILocalVariable(name: "status", scope: !10115, file: !3, line: 279, type: !217)
!10127 = !DILocation(line: 279, column: 6, scope: !10115)
!10128 = !DILocation(line: 279, column: 28, scope: !10115)
!10129 = !DILocation(line: 279, column: 15, scope: !10115)
!10130 = !DILocation(line: 280, column: 2, scope: !10131)
!10131 = distinct !DILexicalBlock(scope: !10132, file: !3, line: 280, column: 2)
!10132 = distinct !DILexicalBlock(scope: !10115, file: !3, line: 280, column: 2)
!10133 = !DILocation(line: 280, column: 2, scope: !10132)
!10134 = !DILocation(line: 280, column: 2, scope: !10135)
!10135 = distinct !DILexicalBlock(scope: !10131, file: !3, line: 280, column: 2)
!10136 = !DILocation(line: 282, column: 24, scope: !10115)
!10137 = !DILocation(line: 282, column: 11, scope: !10115)
!10138 = !DILocation(line: 282, column: 9, scope: !10115)
!10139 = !DILocation(line: 283, column: 2, scope: !10140)
!10140 = distinct !DILexicalBlock(scope: !10141, file: !3, line: 283, column: 2)
!10141 = distinct !DILexicalBlock(scope: !10115, file: !3, line: 283, column: 2)
!10142 = !DILocation(line: 283, column: 2, scope: !10141)
!10143 = !DILocation(line: 283, column: 2, scope: !10144)
!10144 = distinct !DILexicalBlock(scope: !10140, file: !3, line: 283, column: 2)
!10145 = !DILocation(line: 286, column: 8, scope: !10146)
!10146 = distinct !DILexicalBlock(scope: !10115, file: !3, line: 286, column: 6)
!10147 = !DILocation(line: 286, column: 15, scope: !10146)
!10148 = !DILocation(line: 286, column: 29, scope: !10146)
!10149 = !DILocation(line: 286, column: 35, scope: !10146)
!10150 = !DILocation(line: 286, column: 40, scope: !10146)
!10151 = !DILocation(line: 286, column: 48, scope: !10146)
!10152 = !DILocation(line: 286, column: 62, scope: !10146)
!10153 = !DILocation(line: 286, column: 6, scope: !10115)
!10154 = !DILocation(line: 287, column: 3, scope: !10146)
!10155 = !DILocation(line: 290, column: 10, scope: !10115)
!10156 = !DILocation(line: 291, column: 25, scope: !10115)
!10157 = !DILocation(line: 291, column: 38, scope: !10115)
!10158 = !DILocation(line: 291, column: 11, scope: !10115)
!10159 = !DILocation(line: 291, column: 9, scope: !10115)
!10160 = !DILocation(line: 292, column: 2, scope: !10161)
!10161 = distinct !DILexicalBlock(scope: !10162, file: !3, line: 292, column: 2)
!10162 = distinct !DILexicalBlock(scope: !10115, file: !3, line: 292, column: 2)
!10163 = !DILocation(line: 292, column: 2, scope: !10162)
!10164 = !DILocation(line: 292, column: 2, scope: !10165)
!10165 = distinct !DILexicalBlock(scope: !10161, file: !3, line: 292, column: 2)
!10166 = !DILocation(line: 295, column: 7, scope: !10167)
!10167 = distinct !DILexicalBlock(scope: !10115, file: !3, line: 295, column: 6)
!10168 = !DILocation(line: 295, column: 6, scope: !10115)
!10169 = !DILocation(line: 296, column: 3, scope: !10167)
!10170 = !DILocation(line: 298, column: 9, scope: !10171)
!10171 = distinct !DILexicalBlock(scope: !10115, file: !3, line: 298, column: 2)
!10172 = !DILocation(line: 298, column: 7, scope: !10171)
!10173 = !DILocation(line: 298, column: 14, scope: !10174)
!10174 = distinct !DILexicalBlock(scope: !10171, file: !3, line: 298, column: 2)
!10175 = !DILocation(line: 298, column: 16, scope: !10174)
!10176 = !DILocation(line: 298, column: 2, scope: !10171)
!10177 = !DILocation(line: 299, column: 25, scope: !10178)
!10178 = distinct !DILexicalBlock(scope: !10174, file: !3, line: 298, column: 28)
!10179 = !DILocation(line: 299, column: 12, scope: !10178)
!10180 = !DILocation(line: 299, column: 10, scope: !10178)
!10181 = !DILocation(line: 300, column: 3, scope: !10182)
!10182 = distinct !DILexicalBlock(scope: !10183, file: !3, line: 300, column: 3)
!10183 = distinct !DILexicalBlock(scope: !10178, file: !3, line: 300, column: 3)
!10184 = !DILocation(line: 300, column: 3, scope: !10183)
!10185 = !DILocation(line: 300, column: 3, scope: !10186)
!10186 = distinct !DILexicalBlock(scope: !10182, file: !3, line: 300, column: 3)
!10187 = !DILocation(line: 302, column: 8, scope: !10188)
!10188 = distinct !DILexicalBlock(scope: !10178, file: !3, line: 302, column: 7)
!10189 = !DILocation(line: 302, column: 15, scope: !10188)
!10190 = !DILocation(line: 302, column: 29, scope: !10188)
!10191 = !DILocation(line: 302, column: 7, scope: !10178)
!10192 = !DILocation(line: 303, column: 4, scope: !10188)
!10193 = !DILocation(line: 304, column: 2, scope: !10178)
!10194 = !DILocation(line: 298, column: 24, scope: !10174)
!10195 = !DILocation(line: 298, column: 2, scope: !10174)
!10196 = distinct !{!10196, !10176, !10197}
!10197 = !DILocation(line: 304, column: 2, scope: !10171)
!10198 = !DILocation(line: 307, column: 2, scope: !10115)
!10199 = !DILocation(line: 308, column: 1, scope: !10115)
!10200 = distinct !DISubprogram(name: "ufx_calc_pll_values", scope: !3, file: !3, line: 529, type: !10201, scopeLine: 530, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !284)
!10201 = !DISubroutineType(types: !10202)
!10202 = !{null, !3877, !10203}
!10203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9920, size: 64)
!10204 = !DILocalVariable(name: "clk_pixel_pll", arg: 1, scope: !10200, file: !3, line: 529, type: !3877)
!10205 = !DILocation(line: 529, column: 43, scope: !10200)
!10206 = !DILocalVariable(name: "asic_pll", arg: 2, scope: !10200, file: !3, line: 529, type: !10203)
!10207 = !DILocation(line: 529, column: 77, scope: !10200)
!10208 = !DILocalVariable(name: "ref_clk", scope: !10200, file: !3, line: 531, type: !3877)
!10209 = !DILocation(line: 531, column: 12, scope: !10200)
!10210 = !DILocalVariable(name: "div_r0", scope: !10200, file: !3, line: 532, type: !224)
!10211 = !DILocation(line: 532, column: 6, scope: !10200)
!10212 = !DILocalVariable(name: "div_f0", scope: !10200, file: !3, line: 532, type: !224)
!10213 = !DILocation(line: 532, column: 14, scope: !10200)
!10214 = !DILocalVariable(name: "div_q0", scope: !10200, file: !3, line: 532, type: !224)
!10215 = !DILocation(line: 532, column: 22, scope: !10200)
!10216 = !DILocalVariable(name: "div_r1", scope: !10200, file: !3, line: 532, type: !224)
!10217 = !DILocation(line: 532, column: 30, scope: !10200)
!10218 = !DILocalVariable(name: "div_f1", scope: !10200, file: !3, line: 532, type: !224)
!10219 = !DILocation(line: 532, column: 38, scope: !10200)
!10220 = !DILocalVariable(name: "div_q1", scope: !10200, file: !3, line: 532, type: !224)
!10221 = !DILocation(line: 532, column: 46, scope: !10200)
!10222 = !DILocalVariable(name: "min_error", scope: !10200, file: !3, line: 533, type: !224)
!10223 = !DILocation(line: 533, column: 6, scope: !10200)
!10224 = !DILocation(line: 533, column: 18, scope: !10200)
!10225 = !DILocation(line: 535, column: 14, scope: !10226)
!10226 = distinct !DILexicalBlock(scope: !10200, file: !3, line: 535, column: 2)
!10227 = !DILocation(line: 535, column: 7, scope: !10226)
!10228 = !DILocation(line: 535, column: 19, scope: !10229)
!10229 = distinct !DILexicalBlock(scope: !10226, file: !3, line: 535, column: 2)
!10230 = !DILocation(line: 535, column: 26, scope: !10229)
!10231 = !DILocation(line: 535, column: 2, scope: !10226)
!10232 = !DILocalVariable(name: "ref_freq0", scope: !10233, file: !3, line: 536, type: !224)
!10233 = distinct !DILexicalBlock(scope: !10229, file: !3, line: 535, column: 43)
!10234 = !DILocation(line: 536, column: 7, scope: !10233)
!10235 = !DILocation(line: 536, column: 29, scope: !10233)
!10236 = !DILocation(line: 536, column: 27, scope: !10233)
!10237 = !DILocation(line: 537, column: 7, scope: !10238)
!10238 = distinct !DILexicalBlock(scope: !10233, file: !3, line: 537, column: 7)
!10239 = !DILocation(line: 537, column: 17, scope: !10238)
!10240 = !DILocation(line: 537, column: 7, scope: !10233)
!10241 = !DILocation(line: 538, column: 4, scope: !10238)
!10242 = !DILocation(line: 540, column: 7, scope: !10243)
!10243 = distinct !DILexicalBlock(scope: !10233, file: !3, line: 540, column: 7)
!10244 = !DILocation(line: 540, column: 17, scope: !10243)
!10245 = !DILocation(line: 540, column: 7, scope: !10233)
!10246 = !DILocation(line: 541, column: 4, scope: !10243)
!10247 = !DILocation(line: 543, column: 15, scope: !10248)
!10248 = distinct !DILexicalBlock(scope: !10233, file: !3, line: 543, column: 3)
!10249 = !DILocation(line: 543, column: 8, scope: !10248)
!10250 = !DILocation(line: 543, column: 20, scope: !10251)
!10251 = distinct !DILexicalBlock(scope: !10248, file: !3, line: 543, column: 3)
!10252 = !DILocation(line: 543, column: 27, scope: !10251)
!10253 = !DILocation(line: 543, column: 3, scope: !10248)
!10254 = !DILocalVariable(name: "vco_freq0", scope: !10255, file: !3, line: 544, type: !224)
!10255 = distinct !DILexicalBlock(scope: !10251, file: !3, line: 543, column: 45)
!10256 = !DILocation(line: 544, column: 8, scope: !10255)
!10257 = !DILocation(line: 544, column: 20, scope: !10255)
!10258 = !DILocation(line: 544, column: 32, scope: !10255)
!10259 = !DILocation(line: 544, column: 30, scope: !10255)
!10260 = !DILocation(line: 546, column: 8, scope: !10261)
!10261 = distinct !DILexicalBlock(scope: !10255, file: !3, line: 546, column: 8)
!10262 = !DILocation(line: 546, column: 18, scope: !10261)
!10263 = !DILocation(line: 546, column: 8, scope: !10255)
!10264 = !DILocation(line: 547, column: 5, scope: !10261)
!10265 = !DILocation(line: 549, column: 8, scope: !10266)
!10266 = distinct !DILexicalBlock(scope: !10255, file: !3, line: 549, column: 8)
!10267 = !DILocation(line: 549, column: 18, scope: !10266)
!10268 = !DILocation(line: 549, column: 8, scope: !10255)
!10269 = !DILocation(line: 550, column: 5, scope: !10266)
!10270 = !DILocation(line: 552, column: 16, scope: !10271)
!10271 = distinct !DILexicalBlock(scope: !10255, file: !3, line: 552, column: 4)
!10272 = !DILocation(line: 552, column: 9, scope: !10271)
!10273 = !DILocation(line: 552, column: 21, scope: !10274)
!10274 = distinct !DILexicalBlock(scope: !10271, file: !3, line: 552, column: 4)
!10275 = !DILocation(line: 552, column: 28, scope: !10274)
!10276 = !DILocation(line: 552, column: 4, scope: !10271)
!10277 = !DILocalVariable(name: "pllout_freq0", scope: !10278, file: !3, line: 553, type: !224)
!10278 = distinct !DILexicalBlock(scope: !10274, file: !3, line: 552, column: 43)
!10279 = !DILocation(line: 553, column: 9, scope: !10278)
!10280 = !DILocation(line: 553, column: 24, scope: !10278)
!10281 = !DILocation(line: 553, column: 42, scope: !10278)
!10282 = !DILocation(line: 553, column: 39, scope: !10278)
!10283 = !DILocation(line: 553, column: 34, scope: !10278)
!10284 = !DILocation(line: 555, column: 9, scope: !10285)
!10285 = distinct !DILexicalBlock(scope: !10278, file: !3, line: 555, column: 9)
!10286 = !DILocation(line: 555, column: 22, scope: !10285)
!10287 = !DILocation(line: 555, column: 9, scope: !10278)
!10288 = !DILocation(line: 556, column: 6, scope: !10285)
!10289 = !DILocation(line: 558, column: 9, scope: !10290)
!10290 = distinct !DILexicalBlock(scope: !10278, file: !3, line: 558, column: 9)
!10291 = !DILocation(line: 558, column: 22, scope: !10290)
!10292 = !DILocation(line: 558, column: 9, scope: !10278)
!10293 = !DILocation(line: 559, column: 6, scope: !10290)
!10294 = !DILocation(line: 561, column: 17, scope: !10295)
!10295 = distinct !DILexicalBlock(scope: !10278, file: !3, line: 561, column: 5)
!10296 = !DILocation(line: 561, column: 10, scope: !10295)
!10297 = !DILocation(line: 561, column: 22, scope: !10298)
!10298 = distinct !DILexicalBlock(scope: !10295, file: !3, line: 561, column: 5)
!10299 = !DILocation(line: 561, column: 29, scope: !10298)
!10300 = !DILocation(line: 561, column: 5, scope: !10295)
!10301 = !DILocalVariable(name: "ref_freq1", scope: !10302, file: !3, line: 562, type: !224)
!10302 = distinct !DILexicalBlock(scope: !10298, file: !3, line: 561, column: 46)
!10303 = !DILocation(line: 562, column: 10, scope: !10302)
!10304 = !DILocation(line: 562, column: 22, scope: !10302)
!10305 = !DILocation(line: 562, column: 37, scope: !10302)
!10306 = !DILocation(line: 562, column: 35, scope: !10302)
!10307 = !DILocation(line: 564, column: 10, scope: !10308)
!10308 = distinct !DILexicalBlock(scope: !10302, file: !3, line: 564, column: 10)
!10309 = !DILocation(line: 564, column: 20, scope: !10308)
!10310 = !DILocation(line: 564, column: 10, scope: !10302)
!10311 = !DILocation(line: 565, column: 7, scope: !10308)
!10312 = !DILocation(line: 567, column: 18, scope: !10313)
!10313 = distinct !DILexicalBlock(scope: !10302, file: !3, line: 567, column: 6)
!10314 = !DILocation(line: 567, column: 11, scope: !10313)
!10315 = !DILocation(line: 567, column: 23, scope: !10316)
!10316 = distinct !DILexicalBlock(scope: !10313, file: !3, line: 567, column: 6)
!10317 = !DILocation(line: 567, column: 30, scope: !10316)
!10318 = !DILocation(line: 567, column: 6, scope: !10313)
!10319 = !DILocalVariable(name: "vco_freq1", scope: !10320, file: !3, line: 568, type: !224)
!10320 = distinct !DILexicalBlock(scope: !10316, file: !3, line: 567, column: 48)
!10321 = !DILocation(line: 568, column: 11, scope: !10320)
!10322 = !DILocation(line: 568, column: 23, scope: !10320)
!10323 = !DILocation(line: 568, column: 35, scope: !10320)
!10324 = !DILocation(line: 568, column: 33, scope: !10320)
!10325 = !DILocation(line: 570, column: 11, scope: !10326)
!10326 = distinct !DILexicalBlock(scope: !10320, file: !3, line: 570, column: 11)
!10327 = !DILocation(line: 570, column: 21, scope: !10326)
!10328 = !DILocation(line: 570, column: 11, scope: !10320)
!10329 = !DILocation(line: 571, column: 8, scope: !10326)
!10330 = !DILocation(line: 573, column: 11, scope: !10331)
!10331 = distinct !DILexicalBlock(scope: !10320, file: !3, line: 573, column: 11)
!10332 = !DILocation(line: 573, column: 21, scope: !10331)
!10333 = !DILocation(line: 573, column: 11, scope: !10320)
!10334 = !DILocation(line: 574, column: 8, scope: !10331)
!10335 = !DILocation(line: 576, column: 19, scope: !10336)
!10336 = distinct !DILexicalBlock(scope: !10320, file: !3, line: 576, column: 7)
!10337 = !DILocation(line: 576, column: 12, scope: !10336)
!10338 = !DILocation(line: 576, column: 24, scope: !10339)
!10339 = distinct !DILexicalBlock(scope: !10336, file: !3, line: 576, column: 7)
!10340 = !DILocation(line: 576, column: 31, scope: !10339)
!10341 = !DILocation(line: 576, column: 7, scope: !10336)
!10342 = !DILocalVariable(name: "pllout_freq1", scope: !10343, file: !3, line: 577, type: !224)
!10343 = distinct !DILexicalBlock(scope: !10339, file: !3, line: 576, column: 46)
!10344 = !DILocation(line: 577, column: 12, scope: !10343)
!10345 = !DILocation(line: 577, column: 27, scope: !10343)
!10346 = !DILocation(line: 577, column: 45, scope: !10343)
!10347 = !DILocation(line: 577, column: 42, scope: !10343)
!10348 = !DILocation(line: 577, column: 37, scope: !10343)
!10349 = !DILocalVariable(name: "error", scope: !10343, file: !3, line: 578, type: !217)
!10350 = !DILocation(line: 578, column: 12, scope: !10343)
!10351 = !DILocalVariable(name: "__x", scope: !10352, file: !3, line: 578, type: !217)
!10352 = distinct !DILexicalBlock(scope: !10343, file: !3, line: 578, column: 20)
!10353 = !DILocation(line: 578, column: 20, scope: !10352)
!10354 = !DILocation(line: 580, column: 12, scope: !10355)
!10355 = distinct !DILexicalBlock(scope: !10343, file: !3, line: 580, column: 12)
!10356 = !DILocation(line: 580, column: 25, scope: !10355)
!10357 = !DILocation(line: 580, column: 12, scope: !10343)
!10358 = !DILocation(line: 581, column: 9, scope: !10355)
!10359 = !DILocation(line: 583, column: 12, scope: !10360)
!10360 = distinct !DILexicalBlock(scope: !10343, file: !3, line: 583, column: 12)
!10361 = !DILocation(line: 583, column: 25, scope: !10360)
!10362 = !DILocation(line: 583, column: 12, scope: !10343)
!10363 = !DILocation(line: 584, column: 9, scope: !10360)
!10364 = !DILocation(line: 586, column: 12, scope: !10365)
!10365 = distinct !DILexicalBlock(scope: !10343, file: !3, line: 586, column: 12)
!10366 = !DILocation(line: 586, column: 20, scope: !10365)
!10367 = !DILocation(line: 586, column: 18, scope: !10365)
!10368 = !DILocation(line: 586, column: 12, scope: !10343)
!10369 = !DILocation(line: 587, column: 21, scope: !10370)
!10370 = distinct !DILexicalBlock(scope: !10365, file: !3, line: 586, column: 31)
!10371 = !DILocation(line: 587, column: 19, scope: !10370)
!10372 = !DILocation(line: 591, column: 28, scope: !10370)
!10373 = !DILocation(line: 591, column: 35, scope: !10370)
!10374 = !DILocation(line: 591, column: 9, scope: !10370)
!10375 = !DILocation(line: 591, column: 19, scope: !10370)
!10376 = !DILocation(line: 591, column: 26, scope: !10370)
!10377 = !DILocation(line: 592, column: 28, scope: !10370)
!10378 = !DILocation(line: 592, column: 35, scope: !10370)
!10379 = !DILocation(line: 592, column: 9, scope: !10370)
!10380 = !DILocation(line: 592, column: 19, scope: !10370)
!10381 = !DILocation(line: 592, column: 26, scope: !10370)
!10382 = !DILocation(line: 593, column: 28, scope: !10370)
!10383 = !DILocation(line: 593, column: 9, scope: !10370)
!10384 = !DILocation(line: 593, column: 19, scope: !10370)
!10385 = !DILocation(line: 593, column: 26, scope: !10370)
!10386 = !DILocation(line: 594, column: 28, scope: !10370)
!10387 = !DILocation(line: 594, column: 35, scope: !10370)
!10388 = !DILocation(line: 594, column: 9, scope: !10370)
!10389 = !DILocation(line: 594, column: 19, scope: !10370)
!10390 = !DILocation(line: 594, column: 26, scope: !10370)
!10391 = !DILocation(line: 595, column: 28, scope: !10370)
!10392 = !DILocation(line: 595, column: 35, scope: !10370)
!10393 = !DILocation(line: 595, column: 9, scope: !10370)
!10394 = !DILocation(line: 595, column: 19, scope: !10370)
!10395 = !DILocation(line: 595, column: 26, scope: !10370)
!10396 = !DILocation(line: 596, column: 28, scope: !10370)
!10397 = !DILocation(line: 596, column: 9, scope: !10370)
!10398 = !DILocation(line: 596, column: 19, scope: !10370)
!10399 = !DILocation(line: 596, column: 26, scope: !10370)
!10400 = !DILocation(line: 598, column: 43, scope: !10370)
!10401 = !DILocation(line: 598, column: 28, scope: !10370)
!10402 = !DILocation(line: 598, column: 9, scope: !10370)
!10403 = !DILocation(line: 598, column: 19, scope: !10370)
!10404 = !DILocation(line: 598, column: 26, scope: !10370)
!10405 = !DILocation(line: 599, column: 43, scope: !10370)
!10406 = !DILocation(line: 599, column: 28, scope: !10370)
!10407 = !DILocation(line: 599, column: 9, scope: !10370)
!10408 = !DILocation(line: 599, column: 19, scope: !10370)
!10409 = !DILocation(line: 599, column: 26, scope: !10370)
!10410 = !DILocation(line: 601, column: 13, scope: !10411)
!10411 = distinct !DILexicalBlock(scope: !10370, file: !3, line: 601, column: 13)
!10412 = !DILocation(line: 601, column: 23, scope: !10411)
!10413 = !DILocation(line: 601, column: 13, scope: !10370)
!10414 = !DILocation(line: 602, column: 10, scope: !10411)
!10415 = !DILocation(line: 603, column: 8, scope: !10370)
!10416 = !DILocation(line: 604, column: 7, scope: !10343)
!10417 = !DILocation(line: 576, column: 42, scope: !10339)
!10418 = !DILocation(line: 576, column: 7, scope: !10339)
!10419 = distinct !{!10419, !10341, !10420}
!10420 = !DILocation(line: 604, column: 7, scope: !10336)
!10421 = !DILocation(line: 605, column: 6, scope: !10320)
!10422 = !DILocation(line: 567, column: 44, scope: !10316)
!10423 = !DILocation(line: 567, column: 6, scope: !10316)
!10424 = distinct !{!10424, !10318, !10425}
!10425 = !DILocation(line: 605, column: 6, scope: !10313)
!10426 = !DILocation(line: 606, column: 5, scope: !10302)
!10427 = !DILocation(line: 561, column: 42, scope: !10298)
!10428 = !DILocation(line: 561, column: 5, scope: !10298)
!10429 = distinct !{!10429, !10300, !10430}
!10430 = !DILocation(line: 606, column: 5, scope: !10295)
!10431 = !DILocation(line: 607, column: 4, scope: !10278)
!10432 = !DILocation(line: 552, column: 39, scope: !10274)
!10433 = !DILocation(line: 552, column: 4, scope: !10274)
!10434 = distinct !{!10434, !10276, !10435}
!10435 = !DILocation(line: 607, column: 4, scope: !10271)
!10436 = !DILocation(line: 608, column: 3, scope: !10255)
!10437 = !DILocation(line: 543, column: 41, scope: !10251)
!10438 = !DILocation(line: 543, column: 3, scope: !10251)
!10439 = distinct !{!10439, !10253, !10440}
!10440 = !DILocation(line: 608, column: 3, scope: !10248)
!10441 = !DILocation(line: 609, column: 2, scope: !10233)
!10442 = !DILocation(line: 535, column: 39, scope: !10229)
!10443 = !DILocation(line: 535, column: 2, scope: !10229)
!10444 = distinct !{!10444, !10231, !10445}
!10445 = !DILocation(line: 609, column: 2, scope: !10226)
!10446 = !DILocation(line: 610, column: 1, scope: !10200)
!10447 = distinct !DISubprogram(name: "ufx_reg_clear_bits", scope: !3, file: !3, line: 217, type: !7053, scopeLine: 218, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !284)
!10448 = !DILocalVariable(name: "dev", arg: 1, scope: !10447, file: !3, line: 217, type: !4278)
!10449 = !DILocation(line: 217, column: 48, scope: !10447)
!10450 = !DILocalVariable(name: "index", arg: 2, scope: !10447, file: !3, line: 217, type: !224)
!10451 = !DILocation(line: 217, column: 57, scope: !10447)
!10452 = !DILocalVariable(name: "bits", arg: 3, scope: !10447, file: !3, line: 217, type: !224)
!10453 = !DILocation(line: 217, column: 68, scope: !10447)
!10454 = !DILocation(line: 219, column: 36, scope: !10447)
!10455 = !DILocation(line: 219, column: 41, scope: !10447)
!10456 = !DILocation(line: 219, column: 48, scope: !10447)
!10457 = !DILocation(line: 219, column: 9, scope: !10447)
!10458 = !DILocation(line: 219, column: 2, scope: !10447)
!10459 = distinct !DISubprogram(name: "ufx_calc_range", scope: !3, file: !3, line: 505, type: !10460, scopeLine: 506, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !284)
!10460 = !DISubroutineType(types: !10461)
!10461 = !{!224, !224}
!10462 = !DILocalVariable(name: "ref_freq", arg: 1, scope: !10459, file: !3, line: 505, type: !224)
!10463 = !DILocation(line: 505, column: 31, scope: !10459)
!10464 = !DILocation(line: 507, column: 6, scope: !10465)
!10465 = distinct !DILexicalBlock(scope: !10459, file: !3, line: 507, column: 6)
!10466 = !DILocation(line: 507, column: 15, scope: !10465)
!10467 = !DILocation(line: 507, column: 6, scope: !10459)
!10468 = !DILocation(line: 508, column: 3, scope: !10465)
!10469 = !DILocation(line: 510, column: 6, scope: !10470)
!10470 = distinct !DILexicalBlock(scope: !10459, file: !3, line: 510, column: 6)
!10471 = !DILocation(line: 510, column: 15, scope: !10470)
!10472 = !DILocation(line: 510, column: 6, scope: !10459)
!10473 = !DILocation(line: 511, column: 3, scope: !10470)
!10474 = !DILocation(line: 513, column: 6, scope: !10475)
!10475 = distinct !DILexicalBlock(scope: !10459, file: !3, line: 513, column: 6)
!10476 = !DILocation(line: 513, column: 15, scope: !10475)
!10477 = !DILocation(line: 513, column: 6, scope: !10459)
!10478 = !DILocation(line: 514, column: 3, scope: !10475)
!10479 = !DILocation(line: 516, column: 6, scope: !10480)
!10480 = distinct !DILexicalBlock(scope: !10459, file: !3, line: 516, column: 6)
!10481 = !DILocation(line: 516, column: 15, scope: !10480)
!10482 = !DILocation(line: 516, column: 6, scope: !10459)
!10483 = !DILocation(line: 517, column: 3, scope: !10480)
!10484 = !DILocation(line: 519, column: 6, scope: !10485)
!10485 = distinct !DILexicalBlock(scope: !10459, file: !3, line: 519, column: 6)
!10486 = !DILocation(line: 519, column: 15, scope: !10485)
!10487 = !DILocation(line: 519, column: 6, scope: !10459)
!10488 = !DILocation(line: 520, column: 3, scope: !10485)
!10489 = !DILocation(line: 522, column: 6, scope: !10490)
!10490 = distinct !DILexicalBlock(scope: !10459, file: !3, line: 522, column: 6)
!10491 = !DILocation(line: 522, column: 15, scope: !10490)
!10492 = !DILocation(line: 522, column: 6, scope: !10459)
!10493 = !DILocation(line: 523, column: 3, scope: !10490)
!10494 = !DILocation(line: 525, column: 2, scope: !10459)
!10495 = !DILocation(line: 526, column: 1, scope: !10459)
!10496 = distinct !DISubprogram(name: "ufx_reg_clear_and_set_bits", scope: !3, file: !3, line: 194, type: !10497, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !284)
!10497 = !DISubroutineType(types: !10498)
!10498 = !{!217, !4278, !224, !224, !224}
!10499 = !DILocalVariable(name: "dev", arg: 1, scope: !10496, file: !3, line: 194, type: !4278)
!10500 = !DILocation(line: 194, column: 56, scope: !10496)
!10501 = !DILocalVariable(name: "index", arg: 2, scope: !10496, file: !3, line: 194, type: !224)
!10502 = !DILocation(line: 194, column: 65, scope: !10496)
!10503 = !DILocalVariable(name: "bits_to_clear", arg: 3, scope: !10496, file: !3, line: 195, type: !224)
!10504 = !DILocation(line: 195, column: 6, scope: !10496)
!10505 = !DILocalVariable(name: "bits_to_set", arg: 4, scope: !10496, file: !3, line: 195, type: !224)
!10506 = !DILocation(line: 195, column: 25, scope: !10496)
!10507 = !DILocalVariable(name: "data", scope: !10496, file: !3, line: 197, type: !224)
!10508 = !DILocation(line: 197, column: 6, scope: !10496)
!10509 = !DILocalVariable(name: "status", scope: !10496, file: !3, line: 198, type: !217)
!10510 = !DILocation(line: 198, column: 6, scope: !10496)
!10511 = !DILocation(line: 198, column: 28, scope: !10496)
!10512 = !DILocation(line: 198, column: 33, scope: !10496)
!10513 = !DILocation(line: 198, column: 15, scope: !10496)
!10514 = !DILocation(line: 199, column: 2, scope: !10515)
!10515 = distinct !DILexicalBlock(scope: !10516, file: !3, line: 199, column: 2)
!10516 = distinct !DILexicalBlock(scope: !10496, file: !3, line: 199, column: 2)
!10517 = !DILocation(line: 199, column: 2, scope: !10516)
!10518 = !DILocation(line: 199, column: 2, scope: !10519)
!10519 = distinct !DILexicalBlock(scope: !10515, file: !3, line: 199, column: 2)
!10520 = !DILocation(line: 202, column: 12, scope: !10496)
!10521 = !DILocation(line: 202, column: 11, scope: !10496)
!10522 = !DILocation(line: 202, column: 7, scope: !10496)
!10523 = !DILocation(line: 203, column: 10, scope: !10496)
!10524 = !DILocation(line: 203, column: 7, scope: !10496)
!10525 = !DILocation(line: 205, column: 25, scope: !10496)
!10526 = !DILocation(line: 205, column: 30, scope: !10496)
!10527 = !DILocation(line: 205, column: 37, scope: !10496)
!10528 = !DILocation(line: 205, column: 11, scope: !10496)
!10529 = !DILocation(line: 205, column: 9, scope: !10496)
!10530 = !DILocation(line: 206, column: 2, scope: !10531)
!10531 = distinct !DILexicalBlock(scope: !10532, file: !3, line: 206, column: 2)
!10532 = distinct !DILexicalBlock(scope: !10496, file: !3, line: 206, column: 2)
!10533 = !DILocation(line: 206, column: 2, scope: !10532)
!10534 = !DILocation(line: 206, column: 2, scope: !10535)
!10535 = distinct !DILexicalBlock(scope: !10531, file: !3, line: 206, column: 2)
!10536 = !DILocation(line: 209, column: 2, scope: !10496)
!10537 = !DILocation(line: 210, column: 1, scope: !10496)
!10538 = distinct !DISubprogram(name: "copy_overflow", scope: !8117, file: !8117, line: 132, type: !10539, scopeLine: 133, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !284)
!10539 = !DISubroutineType(types: !10540)
!10540 = !{null, !217, !212}
!10541 = !DILocalVariable(name: "size", arg: 1, scope: !10538, file: !8117, line: 132, type: !217)
!10542 = !DILocation(line: 132, column: 38, scope: !10538)
!10543 = !DILocalVariable(name: "count", arg: 2, scope: !10538, file: !8117, line: 132, type: !212)
!10544 = !DILocation(line: 132, column: 58, scope: !10538)
!10545 = !DILocalVariable(name: "__ret_warn_on", scope: !10546, file: !8117, line: 134, type: !217)
!10546 = distinct !DILexicalBlock(scope: !10538, file: !8117, line: 134, column: 2)
!10547 = !DILocation(line: 134, column: 2, scope: !10546)
!10548 = !DILocation(line: 134, column: 2, scope: !10549)
!10549 = distinct !DILexicalBlock(scope: !10546, file: !8117, line: 134, column: 2)
!10550 = !DILocation(line: 134, column: 2, scope: !10551)
!10551 = distinct !DILexicalBlock(scope: !10549, file: !8117, line: 134, column: 2)
!10552 = !DILocation(line: 134, column: 2, scope: !10553)
!10553 = distinct !DILexicalBlock(scope: !10551, file: !8117, line: 134, column: 2)
!10554 = !DILocation(line: 134, column: 2, scope: !10555)
!10555 = distinct !DILexicalBlock(scope: !10551, file: !8117, line: 134, column: 2)
!10556 = !DILocation(line: 134, column: 2, scope: !10557)
!10557 = distinct !DILexicalBlock(scope: !10555, file: !8117, line: 134, column: 2)
!10558 = !DILocation(line: 134, column: 2, scope: !10559)
!10559 = distinct !DILexicalBlock(scope: !10555, file: !8117, line: 134, column: 2)
!10560 = !{i32 -2145507751, i32 -2145507722, i32 -2145507676, i32 -2145507618, i32 -2145507564, i32 -2145507510, i32 -2145507455, i32 -2145507424}
!10561 = !DILocation(line: 134, column: 2, scope: !10562)
!10562 = distinct !DILexicalBlock(scope: !10555, file: !8117, line: 134, column: 2)
!10563 = !{i32 -2145507004, i32 -2145506997, i32 -2145506945, i32 -2145506914, i32 -2145506884}
!10564 = !DILocation(line: 134, column: 2, scope: !10565)
!10565 = distinct !DILexicalBlock(scope: !10555, file: !8117, line: 134, column: 2)
!10566 = !DILocation(line: 134, column: 2, scope: !10567)
!10567 = distinct !DILexicalBlock(scope: !10551, file: !8117, line: 134, column: 2)
!10568 = !DILocation(line: 135, column: 1, scope: !10538)
!10569 = distinct !DISubprogram(name: "check_object_size", scope: !8117, file: !8117, line: 122, type: !10570, scopeLine: 124, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !284)
!10570 = !DISubroutineType(types: !10571)
!10571 = !{null, !2210, !212, !521}
!10572 = !DILocalVariable(name: "ptr", arg: 1, scope: !10569, file: !8117, line: 122, type: !2210)
!10573 = !DILocation(line: 122, column: 50, scope: !10569)
!10574 = !DILocalVariable(name: "n", arg: 2, scope: !10569, file: !8117, line: 122, type: !212)
!10575 = !DILocation(line: 122, column: 69, scope: !10569)
!10576 = !DILocalVariable(name: "to_user", arg: 3, scope: !10569, file: !8117, line: 123, type: !521)
!10577 = !DILocation(line: 123, column: 15, scope: !10569)
!10578 = !DILocation(line: 124, column: 3, scope: !10569)
!10579 = distinct !DISubprogram(name: "ufx_read_edid", scope: !3, file: !3, line: 1421, type: !10580, scopeLine: 1422, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !284)
!10580 = !DISubroutineType(types: !10581)
!10581 = !{!217, !4278, !4418, !217}
!10582 = !DILocalVariable(name: "dev", arg: 1, scope: !10579, file: !3, line: 1421, type: !4278)
!10583 = !DILocation(line: 1421, column: 43, scope: !10579)
!10584 = !DILocalVariable(name: "edid", arg: 2, scope: !10579, file: !3, line: 1421, type: !4418)
!10585 = !DILocation(line: 1421, column: 52, scope: !10579)
!10586 = !DILocalVariable(name: "edid_len", arg: 3, scope: !10579, file: !3, line: 1421, type: !217)
!10587 = !DILocation(line: 1421, column: 62, scope: !10579)
!10588 = !DILocalVariable(name: "i", scope: !10579, file: !3, line: 1423, type: !217)
!10589 = !DILocation(line: 1423, column: 6, scope: !10579)
!10590 = !DILocalVariable(name: "j", scope: !10579, file: !3, line: 1423, type: !217)
!10591 = !DILocation(line: 1423, column: 9, scope: !10579)
!10592 = !DILocalVariable(name: "status", scope: !10579, file: !3, line: 1423, type: !217)
!10593 = !DILocation(line: 1423, column: 12, scope: !10579)
!10594 = !DILocalVariable(name: "edid_u32", scope: !10579, file: !3, line: 1424, type: !1445)
!10595 = !DILocation(line: 1424, column: 7, scope: !10579)
!10596 = !DILocation(line: 1424, column: 25, scope: !10579)
!10597 = !DILocation(line: 1424, column: 18, scope: !10579)
!10598 = !DILocation(line: 1426, column: 2, scope: !10579)
!10599 = !DILocation(line: 1426, column: 2, scope: !10600)
!10600 = distinct !DILexicalBlock(scope: !10601, file: !3, line: 1426, column: 2)
!10601 = distinct !DILexicalBlock(scope: !10579, file: !3, line: 1426, column: 2)
!10602 = !DILocation(line: 1426, column: 2, scope: !10601)
!10603 = !DILocation(line: 1426, column: 2, scope: !10604)
!10604 = distinct !DILexicalBlock(scope: !10600, file: !3, line: 1426, column: 2)
!10605 = !DILocation(line: 1426, column: 2, scope: !10606)
!10606 = distinct !DILexicalBlock(scope: !10604, file: !3, line: 1426, column: 2)
!10607 = !DILocation(line: 1426, column: 2, scope: !10608)
!10608 = distinct !DILexicalBlock(scope: !10604, file: !3, line: 1426, column: 2)
!10609 = !{i32 -2140946208, i32 -2140946179, i32 -2140946133, i32 -2140946075, i32 -2140946021, i32 -2140945967, i32 -2140945912, i32 -2140945881}
!10610 = !DILocation(line: 1426, column: 2, scope: !10611)
!10611 = distinct !DILexicalBlock(scope: !10612, file: !3, line: 1426, column: 2)
!10612 = distinct !DILexicalBlock(scope: !10604, file: !3, line: 1426, column: 2)
!10613 = !{i32 -2140945428, i32 -2140945421, i32 -2140945367, i32 -2140945336, i32 -2140945306}
!10614 = !DILocation(line: 1426, column: 2, scope: !10612)
!10615 = !DILocation(line: 1428, column: 29, scope: !10579)
!10616 = !DILocation(line: 1428, column: 11, scope: !10579)
!10617 = !DILocation(line: 1428, column: 9, scope: !10579)
!10618 = !DILocation(line: 1429, column: 6, scope: !10619)
!10619 = distinct !DILexicalBlock(scope: !10579, file: !3, line: 1429, column: 6)
!10620 = !DILocation(line: 1429, column: 13, scope: !10619)
!10621 = !DILocation(line: 1429, column: 6, scope: !10579)
!10622 = !DILocation(line: 1430, column: 3, scope: !10623)
!10623 = distinct !DILexicalBlock(scope: !10619, file: !3, line: 1429, column: 18)
!10624 = !DILocation(line: 1431, column: 10, scope: !10623)
!10625 = !DILocation(line: 1431, column: 3, scope: !10623)
!10626 = !DILocation(line: 1434, column: 9, scope: !10579)
!10627 = !DILocation(line: 1434, column: 2, scope: !10579)
!10628 = !DILocation(line: 1437, column: 9, scope: !10629)
!10629 = distinct !DILexicalBlock(scope: !10579, file: !3, line: 1437, column: 2)
!10630 = !DILocation(line: 1437, column: 7, scope: !10629)
!10631 = !DILocation(line: 1437, column: 14, scope: !10632)
!10632 = distinct !DILexicalBlock(scope: !10629, file: !3, line: 1437, column: 2)
!10633 = !DILocation(line: 1437, column: 16, scope: !10632)
!10634 = !DILocation(line: 1437, column: 2, scope: !10629)
!10635 = !DILocalVariable(name: "temp", scope: !10636, file: !3, line: 1438, type: !224)
!10636 = distinct !DILexicalBlock(scope: !10632, file: !3, line: 1437, column: 26)
!10637 = !DILocation(line: 1438, column: 7, scope: !10636)
!10638 = !DILocation(line: 1438, column: 48, scope: !10636)
!10639 = !DILocation(line: 1438, column: 50, scope: !10636)
!10640 = !DILocation(line: 1438, column: 57, scope: !10636)
!10641 = !DILocation(line: 1438, column: 38, scope: !10636)
!10642 = !DILocation(line: 1439, column: 26, scope: !10636)
!10643 = !DILocation(line: 1439, column: 39, scope: !10636)
!10644 = !DILocation(line: 1439, column: 12, scope: !10636)
!10645 = !DILocation(line: 1439, column: 10, scope: !10636)
!10646 = !DILocation(line: 1440, column: 3, scope: !10647)
!10647 = distinct !DILexicalBlock(scope: !10648, file: !3, line: 1440, column: 3)
!10648 = distinct !DILexicalBlock(scope: !10636, file: !3, line: 1440, column: 3)
!10649 = !DILocation(line: 1440, column: 3, scope: !10648)
!10650 = !DILocation(line: 1440, column: 3, scope: !10651)
!10651 = distinct !DILexicalBlock(scope: !10647, file: !3, line: 1440, column: 3)
!10652 = !DILocation(line: 1442, column: 8, scope: !10636)
!10653 = !DILocation(line: 1443, column: 26, scope: !10636)
!10654 = !DILocation(line: 1443, column: 39, scope: !10636)
!10655 = !DILocation(line: 1443, column: 12, scope: !10636)
!10656 = !DILocation(line: 1443, column: 10, scope: !10636)
!10657 = !DILocation(line: 1444, column: 3, scope: !10658)
!10658 = distinct !DILexicalBlock(scope: !10659, file: !3, line: 1444, column: 3)
!10659 = distinct !DILexicalBlock(scope: !10636, file: !3, line: 1444, column: 3)
!10660 = !DILocation(line: 1444, column: 3, scope: !10659)
!10661 = !DILocation(line: 1444, column: 3, scope: !10662)
!10662 = distinct !DILexicalBlock(scope: !10658, file: !3, line: 1444, column: 3)
!10663 = !DILocation(line: 1446, column: 30, scope: !10636)
!10664 = !DILocation(line: 1446, column: 12, scope: !10636)
!10665 = !DILocation(line: 1446, column: 10, scope: !10636)
!10666 = !DILocation(line: 1447, column: 3, scope: !10667)
!10667 = distinct !DILexicalBlock(scope: !10668, file: !3, line: 1447, column: 3)
!10668 = distinct !DILexicalBlock(scope: !10636, file: !3, line: 1447, column: 3)
!10669 = !DILocation(line: 1447, column: 3, scope: !10668)
!10670 = !DILocation(line: 1447, column: 3, scope: !10671)
!10671 = distinct !DILexicalBlock(scope: !10667, file: !3, line: 1447, column: 3)
!10672 = !DILocation(line: 1449, column: 10, scope: !10673)
!10673 = distinct !DILexicalBlock(scope: !10636, file: !3, line: 1449, column: 3)
!10674 = !DILocation(line: 1449, column: 8, scope: !10673)
!10675 = !DILocation(line: 1449, column: 15, scope: !10676)
!10676 = distinct !DILexicalBlock(scope: !10673, file: !3, line: 1449, column: 3)
!10677 = !DILocation(line: 1449, column: 17, scope: !10676)
!10678 = !DILocation(line: 1449, column: 3, scope: !10673)
!10679 = !DILocalVariable(name: "data_reg_addr", scope: !10680, file: !3, line: 1450, type: !224)
!10680 = distinct !DILexicalBlock(scope: !10676, file: !3, line: 1449, column: 28)
!10681 = !DILocation(line: 1450, column: 8, scope: !10680)
!10682 = !DILocation(line: 1450, column: 34, scope: !10680)
!10683 = !DILocation(line: 1450, column: 36, scope: !10680)
!10684 = !DILocation(line: 1450, column: 31, scope: !10680)
!10685 = !DILocation(line: 1451, column: 26, scope: !10680)
!10686 = !DILocation(line: 1451, column: 31, scope: !10680)
!10687 = !DILocation(line: 1451, column: 54, scope: !10680)
!10688 = !DILocation(line: 1451, column: 13, scope: !10680)
!10689 = !DILocation(line: 1451, column: 11, scope: !10680)
!10690 = !DILocation(line: 1452, column: 4, scope: !10691)
!10691 = distinct !DILexicalBlock(scope: !10692, file: !3, line: 1452, column: 4)
!10692 = distinct !DILexicalBlock(scope: !10680, file: !3, line: 1452, column: 4)
!10693 = !DILocation(line: 1452, column: 4, scope: !10692)
!10694 = !DILocation(line: 1452, column: 4, scope: !10695)
!10695 = distinct !DILexicalBlock(scope: !10691, file: !3, line: 1452, column: 4)
!10696 = !DILocation(line: 1453, column: 3, scope: !10680)
!10697 = !DILocation(line: 1449, column: 24, scope: !10676)
!10698 = !DILocation(line: 1449, column: 3, scope: !10676)
!10699 = distinct !{!10699, !10678, !10700}
!10700 = !DILocation(line: 1453, column: 3, scope: !10673)
!10701 = !DILocation(line: 1454, column: 2, scope: !10636)
!10702 = !DILocation(line: 1437, column: 22, scope: !10632)
!10703 = !DILocation(line: 1437, column: 2, scope: !10632)
!10704 = distinct !{!10704, !10634, !10705}
!10705 = !DILocation(line: 1454, column: 2, scope: !10629)
!10706 = !DILocation(line: 1457, column: 9, scope: !10707)
!10707 = distinct !DILexicalBlock(scope: !10579, file: !3, line: 1457, column: 2)
!10708 = !DILocation(line: 1457, column: 7, scope: !10707)
!10709 = !DILocation(line: 1457, column: 14, scope: !10710)
!10710 = distinct !DILexicalBlock(scope: !10707, file: !3, line: 1457, column: 2)
!10711 = !DILocation(line: 1457, column: 16, scope: !10710)
!10712 = !DILocation(line: 1457, column: 2, scope: !10707)
!10713 = !DILocation(line: 1458, column: 7, scope: !10714)
!10714 = distinct !DILexicalBlock(scope: !10715, file: !3, line: 1458, column: 7)
!10715 = distinct !DILexicalBlock(scope: !10710, file: !3, line: 1457, column: 27)
!10716 = !DILocation(line: 1458, column: 12, scope: !10714)
!10717 = !DILocation(line: 1458, column: 15, scope: !10714)
!10718 = !DILocation(line: 1458, column: 7, scope: !10715)
!10719 = !DILocation(line: 1459, column: 4, scope: !10720)
!10720 = distinct !DILexicalBlock(scope: !10721, file: !3, line: 1459, column: 4)
!10721 = distinct !DILexicalBlock(scope: !10722, file: !3, line: 1459, column: 4)
!10722 = distinct !DILexicalBlock(scope: !10714, file: !3, line: 1458, column: 24)
!10723 = !DILocation(line: 1459, column: 4, scope: !10721)
!10724 = !DILocation(line: 1460, column: 4, scope: !10722)
!10725 = !DILocation(line: 1462, column: 2, scope: !10715)
!10726 = !DILocation(line: 1457, column: 23, scope: !10710)
!10727 = !DILocation(line: 1457, column: 2, scope: !10710)
!10728 = distinct !{!10728, !10712, !10729}
!10729 = !DILocation(line: 1462, column: 2, scope: !10707)
!10730 = !DILocation(line: 1464, column: 2, scope: !10579)
!10731 = !DILocation(line: 1465, column: 2, scope: !10579)
!10732 = !DILocation(line: 1466, column: 1, scope: !10579)
!10733 = distinct !DISubprogram(name: "ufx_is_valid_mode", scope: !3, file: !3, line: 1185, type: !10734, scopeLine: 1187, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !284)
!10734 = !DISubroutineType(types: !10735)
!10735 = !{!217, !4367, !4284}
!10736 = !DILocalVariable(name: "mode", arg: 1, scope: !10733, file: !3, line: 1185, type: !4367)
!10737 = !DILocation(line: 1185, column: 51, scope: !10733)
!10738 = !DILocalVariable(name: "info", arg: 2, scope: !10733, file: !3, line: 1186, type: !4284)
!10739 = !DILocation(line: 1186, column: 19, scope: !10733)
!10740 = !DILocation(line: 1188, column: 7, scope: !10741)
!10741 = distinct !DILexicalBlock(scope: !10733, file: !3, line: 1188, column: 6)
!10742 = !DILocation(line: 1188, column: 13, scope: !10741)
!10743 = !DILocation(line: 1188, column: 20, scope: !10741)
!10744 = !DILocation(line: 1188, column: 26, scope: !10741)
!10745 = !DILocation(line: 1188, column: 18, scope: !10741)
!10746 = !DILocation(line: 1188, column: 32, scope: !10741)
!10747 = !DILocation(line: 1188, column: 6, scope: !10733)
!10748 = !DILocation(line: 1189, column: 3, scope: !10749)
!10749 = distinct !DILexicalBlock(scope: !10750, file: !3, line: 1189, column: 3)
!10750 = distinct !DILexicalBlock(scope: !10751, file: !3, line: 1189, column: 3)
!10751 = distinct !DILexicalBlock(scope: !10741, file: !3, line: 1188, column: 49)
!10752 = !DILocation(line: 1189, column: 3, scope: !10750)
!10753 = !DILocation(line: 1191, column: 3, scope: !10751)
!10754 = !DILocation(line: 1194, column: 6, scope: !10755)
!10755 = distinct !DILexicalBlock(scope: !10733, file: !3, line: 1194, column: 6)
!10756 = !DILocation(line: 1194, column: 12, scope: !10755)
!10757 = !DILocation(line: 1194, column: 21, scope: !10755)
!10758 = !DILocation(line: 1194, column: 6, scope: !10733)
!10759 = !DILocation(line: 1195, column: 3, scope: !10760)
!10760 = distinct !DILexicalBlock(scope: !10761, file: !3, line: 1195, column: 3)
!10761 = distinct !DILexicalBlock(scope: !10762, file: !3, line: 1195, column: 3)
!10762 = distinct !DILexicalBlock(scope: !10755, file: !3, line: 1194, column: 29)
!10763 = !DILocation(line: 1195, column: 3, scope: !10761)
!10764 = !DILocation(line: 1197, column: 3, scope: !10762)
!10765 = !DILocation(line: 1200, column: 2, scope: !10766)
!10766 = distinct !DILexicalBlock(scope: !10767, file: !3, line: 1200, column: 2)
!10767 = distinct !DILexicalBlock(scope: !10733, file: !3, line: 1200, column: 2)
!10768 = !DILocation(line: 1200, column: 2, scope: !10767)
!10769 = !DILocation(line: 1202, column: 2, scope: !10733)
!10770 = !DILocation(line: 1203, column: 1, scope: !10733)
!10771 = distinct !DISubprogram(name: "ufx_var_color_format", scope: !3, file: !3, line: 1205, type: !10772, scopeLine: 1206, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !284)
!10772 = !DISubroutineType(types: !10773)
!10773 = !{null, !4541}
!10774 = !DILocalVariable(name: "var", arg: 1, scope: !10771, file: !3, line: 1205, type: !4541)
!10775 = !DILocation(line: 1205, column: 60, scope: !10771)
!10776 = !DILocalVariable(name: "red", scope: !10771, file: !3, line: 1207, type: !10777)
!10777 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4307)
!10778 = !DILocation(line: 1207, column: 27, scope: !10771)
!10779 = !DILocalVariable(name: "green", scope: !10771, file: !3, line: 1208, type: !10777)
!10780 = !DILocation(line: 1208, column: 27, scope: !10771)
!10781 = !DILocalVariable(name: "blue", scope: !10771, file: !3, line: 1209, type: !10777)
!10782 = !DILocation(line: 1209, column: 27, scope: !10771)
!10783 = !DILocation(line: 1211, column: 2, scope: !10771)
!10784 = !DILocation(line: 1211, column: 7, scope: !10771)
!10785 = !DILocation(line: 1211, column: 22, scope: !10771)
!10786 = !DILocation(line: 1212, column: 2, scope: !10771)
!10787 = !DILocation(line: 1212, column: 7, scope: !10771)
!10788 = !DILocation(line: 1212, column: 13, scope: !10771)
!10789 = !DILocation(line: 1213, column: 2, scope: !10771)
!10790 = !DILocation(line: 1213, column: 7, scope: !10771)
!10791 = !DILocation(line: 1213, column: 15, scope: !10771)
!10792 = !DILocation(line: 1214, column: 2, scope: !10771)
!10793 = !DILocation(line: 1214, column: 7, scope: !10771)
!10794 = !DILocation(line: 1214, column: 14, scope: !10771)
!10795 = !DILocation(line: 1215, column: 1, scope: !10771)
!10796 = distinct !DISubprogram(name: "ufx_realloc_framebuffer", scope: !3, file: !3, line: 1290, type: !10797, scopeLine: 1291, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !284)
!10797 = !DISubroutineType(types: !10798)
!10798 = !{!217, !4278, !4284}
!10799 = !DILocalVariable(name: "dev", arg: 1, scope: !10796, file: !3, line: 1290, type: !4278)
!10800 = !DILocation(line: 1290, column: 53, scope: !10796)
!10801 = !DILocalVariable(name: "info", arg: 2, scope: !10796, file: !3, line: 1290, type: !4284)
!10802 = !DILocation(line: 1290, column: 74, scope: !10796)
!10803 = !DILocalVariable(name: "old_len", scope: !10796, file: !3, line: 1292, type: !217)
!10804 = !DILocation(line: 1292, column: 6, scope: !10796)
!10805 = !DILocation(line: 1292, column: 16, scope: !10796)
!10806 = !DILocation(line: 1292, column: 22, scope: !10796)
!10807 = !DILocation(line: 1292, column: 26, scope: !10796)
!10808 = !DILocalVariable(name: "new_len", scope: !10796, file: !3, line: 1293, type: !217)
!10809 = !DILocation(line: 1293, column: 6, scope: !10796)
!10810 = !DILocalVariable(name: "old_fb", scope: !10796, file: !3, line: 1294, type: !4051)
!10811 = !DILocation(line: 1294, column: 17, scope: !10796)
!10812 = !DILocation(line: 1294, column: 26, scope: !10796)
!10813 = !DILocation(line: 1294, column: 32, scope: !10796)
!10814 = !DILocalVariable(name: "new_fb", scope: !10796, file: !3, line: 1295, type: !4051)
!10815 = !DILocation(line: 1295, column: 17, scope: !10796)
!10816 = !DILocation(line: 1297, column: 2, scope: !10817)
!10817 = distinct !DILexicalBlock(scope: !10818, file: !3, line: 1297, column: 2)
!10818 = distinct !DILexicalBlock(scope: !10796, file: !3, line: 1297, column: 2)
!10819 = !DILocation(line: 1297, column: 2, scope: !10818)
!10820 = !DILocation(line: 1299, column: 12, scope: !10796)
!10821 = !DILocation(line: 1299, column: 18, scope: !10796)
!10822 = !DILocation(line: 1299, column: 22, scope: !10796)
!10823 = !DILocation(line: 1299, column: 36, scope: !10796)
!10824 = !DILocation(line: 1299, column: 42, scope: !10796)
!10825 = !DILocation(line: 1299, column: 46, scope: !10796)
!10826 = !DILocation(line: 1299, column: 34, scope: !10796)
!10827 = !DILocation(line: 1299, column: 10, scope: !10796)
!10828 = !DILocation(line: 1301, column: 6, scope: !10829)
!10829 = distinct !DILexicalBlock(scope: !10796, file: !3, line: 1301, column: 6)
!10830 = !DILocation(line: 1301, column: 28, scope: !10829)
!10831 = !DILocation(line: 1301, column: 26, scope: !10829)
!10832 = !DILocation(line: 1301, column: 6, scope: !10796)
!10833 = !DILocation(line: 1305, column: 20, scope: !10834)
!10834 = distinct !DILexicalBlock(scope: !10829, file: !3, line: 1301, column: 37)
!10835 = !DILocation(line: 1305, column: 12, scope: !10834)
!10836 = !DILocation(line: 1305, column: 10, scope: !10834)
!10837 = !DILocation(line: 1306, column: 8, scope: !10838)
!10838 = distinct !DILexicalBlock(scope: !10834, file: !3, line: 1306, column: 7)
!10839 = !DILocation(line: 1306, column: 7, scope: !10834)
!10840 = !DILocation(line: 1307, column: 4, scope: !10838)
!10841 = !DILocation(line: 1309, column: 7, scope: !10842)
!10842 = distinct !DILexicalBlock(scope: !10834, file: !3, line: 1309, column: 7)
!10843 = !DILocation(line: 1309, column: 13, scope: !10842)
!10844 = !DILocation(line: 1309, column: 7, scope: !10834)
!10845 = !DILocation(line: 1310, column: 11, scope: !10846)
!10846 = distinct !DILexicalBlock(scope: !10842, file: !3, line: 1309, column: 26)
!10847 = !DILocation(line: 1310, column: 19, scope: !10846)
!10848 = !DILocation(line: 1310, column: 27, scope: !10846)
!10849 = !DILocation(line: 1310, column: 4, scope: !10846)
!10850 = !DILocation(line: 1311, column: 10, scope: !10846)
!10851 = !DILocation(line: 1311, column: 16, scope: !10846)
!10852 = !DILocation(line: 1311, column: 4, scope: !10846)
!10853 = !DILocation(line: 1312, column: 3, scope: !10846)
!10854 = !DILocation(line: 1314, column: 23, scope: !10834)
!10855 = !DILocation(line: 1314, column: 3, scope: !10834)
!10856 = !DILocation(line: 1314, column: 9, scope: !10834)
!10857 = !DILocation(line: 1314, column: 21, scope: !10834)
!10858 = !DILocation(line: 1315, column: 24, scope: !10834)
!10859 = !DILocation(line: 1315, column: 3, scope: !10834)
!10860 = !DILocation(line: 1315, column: 9, scope: !10834)
!10861 = !DILocation(line: 1315, column: 13, scope: !10834)
!10862 = !DILocation(line: 1315, column: 22, scope: !10834)
!10863 = !DILocation(line: 1316, column: 42, scope: !10834)
!10864 = !DILocation(line: 1316, column: 26, scope: !10834)
!10865 = !DILocation(line: 1316, column: 3, scope: !10834)
!10866 = !DILocation(line: 1316, column: 9, scope: !10834)
!10867 = !DILocation(line: 1316, column: 13, scope: !10834)
!10868 = !DILocation(line: 1316, column: 24, scope: !10834)
!10869 = !DILocation(line: 1317, column: 3, scope: !10834)
!10870 = !DILocation(line: 1317, column: 9, scope: !10834)
!10871 = !DILocation(line: 1317, column: 15, scope: !10834)
!10872 = !DILocation(line: 1318, column: 2, scope: !10834)
!10873 = !DILocation(line: 1319, column: 2, scope: !10796)
!10874 = !DILocation(line: 1320, column: 1, scope: !10796)
!10875 = distinct !DISubprogram(name: "ufx_i2c_configure", scope: !3, file: !3, line: 1369, type: !6161, scopeLine: 1370, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !284)
!10876 = !DILocalVariable(name: "dev", arg: 1, scope: !10875, file: !3, line: 1369, type: !4278)
!10877 = !DILocation(line: 1369, column: 47, scope: !10875)
!10878 = !DILocalVariable(name: "status", scope: !10875, file: !3, line: 1371, type: !217)
!10879 = !DILocation(line: 1371, column: 6, scope: !10875)
!10880 = !DILocation(line: 1371, column: 29, scope: !10875)
!10881 = !DILocation(line: 1371, column: 15, scope: !10875)
!10882 = !DILocation(line: 1372, column: 2, scope: !10883)
!10883 = distinct !DILexicalBlock(scope: !10884, file: !3, line: 1372, column: 2)
!10884 = distinct !DILexicalBlock(scope: !10875, file: !3, line: 1372, column: 2)
!10885 = !DILocation(line: 1372, column: 2, scope: !10884)
!10886 = !DILocation(line: 1372, column: 2, scope: !10887)
!10887 = distinct !DILexicalBlock(scope: !10883, file: !3, line: 1372, column: 2)
!10888 = !DILocation(line: 1374, column: 25, scope: !10875)
!10889 = !DILocation(line: 1374, column: 11, scope: !10875)
!10890 = !DILocation(line: 1374, column: 9, scope: !10875)
!10891 = !DILocation(line: 1375, column: 2, scope: !10892)
!10892 = distinct !DILexicalBlock(scope: !10893, file: !3, line: 1375, column: 2)
!10893 = distinct !DILexicalBlock(scope: !10875, file: !3, line: 1375, column: 2)
!10894 = !DILocation(line: 1375, column: 2, scope: !10893)
!10895 = !DILocation(line: 1375, column: 2, scope: !10896)
!10896 = distinct !DILexicalBlock(scope: !10892, file: !3, line: 1375, column: 2)
!10897 = !DILocation(line: 1378, column: 38, scope: !10875)
!10898 = !DILocation(line: 1378, column: 11, scope: !10875)
!10899 = !DILocation(line: 1378, column: 9, scope: !10875)
!10900 = !DILocation(line: 1379, column: 2, scope: !10901)
!10901 = distinct !DILexicalBlock(scope: !10902, file: !3, line: 1379, column: 2)
!10902 = distinct !DILexicalBlock(scope: !10875, file: !3, line: 1379, column: 2)
!10903 = !DILocation(line: 1379, column: 2, scope: !10902)
!10904 = !DILocation(line: 1379, column: 2, scope: !10905)
!10905 = distinct !DILexicalBlock(scope: !10901, file: !3, line: 1379, column: 2)
!10906 = !DILocation(line: 1381, column: 25, scope: !10875)
!10907 = !DILocation(line: 1381, column: 11, scope: !10875)
!10908 = !DILocation(line: 1381, column: 9, scope: !10875)
!10909 = !DILocation(line: 1382, column: 2, scope: !10910)
!10910 = distinct !DILexicalBlock(scope: !10911, file: !3, line: 1382, column: 2)
!10911 = distinct !DILexicalBlock(scope: !10875, file: !3, line: 1382, column: 2)
!10912 = !DILocation(line: 1382, column: 2, scope: !10911)
!10913 = !DILocation(line: 1382, column: 2, scope: !10914)
!10914 = distinct !DILexicalBlock(scope: !10910, file: !3, line: 1382, column: 2)
!10915 = !DILocation(line: 1384, column: 2, scope: !10875)
!10916 = !DILocation(line: 1385, column: 1, scope: !10875)
!10917 = distinct !DISubprogram(name: "ufx_i2c_wait_busy", scope: !3, file: !3, line: 1389, type: !6161, scopeLine: 1390, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !284)
!10918 = !DILocalVariable(name: "dev", arg: 1, scope: !10917, file: !3, line: 1389, type: !4278)
!10919 = !DILocation(line: 1389, column: 47, scope: !10917)
!10920 = !DILocalVariable(name: "tmp", scope: !10917, file: !3, line: 1391, type: !224)
!10921 = !DILocation(line: 1391, column: 6, scope: !10917)
!10922 = !DILocalVariable(name: "i", scope: !10917, file: !3, line: 1392, type: !217)
!10923 = !DILocation(line: 1392, column: 6, scope: !10917)
!10924 = !DILocalVariable(name: "status", scope: !10917, file: !3, line: 1392, type: !217)
!10925 = !DILocation(line: 1392, column: 9, scope: !10917)
!10926 = !DILocation(line: 1394, column: 9, scope: !10927)
!10927 = distinct !DILexicalBlock(scope: !10917, file: !3, line: 1394, column: 2)
!10928 = !DILocation(line: 1394, column: 7, scope: !10927)
!10929 = !DILocation(line: 1394, column: 14, scope: !10930)
!10930 = distinct !DILexicalBlock(scope: !10927, file: !3, line: 1394, column: 2)
!10931 = !DILocation(line: 1394, column: 16, scope: !10930)
!10932 = !DILocation(line: 1394, column: 2, scope: !10927)
!10933 = !DILocation(line: 1395, column: 25, scope: !10934)
!10934 = distinct !DILexicalBlock(scope: !10930, file: !3, line: 1394, column: 27)
!10935 = !DILocation(line: 1395, column: 12, scope: !10934)
!10936 = !DILocation(line: 1395, column: 10, scope: !10934)
!10937 = !DILocation(line: 1396, column: 3, scope: !10938)
!10938 = distinct !DILexicalBlock(scope: !10939, file: !3, line: 1396, column: 3)
!10939 = distinct !DILexicalBlock(scope: !10934, file: !3, line: 1396, column: 3)
!10940 = !DILocation(line: 1396, column: 3, scope: !10939)
!10941 = !DILocation(line: 1396, column: 3, scope: !10942)
!10942 = distinct !DILexicalBlock(scope: !10938, file: !3, line: 1396, column: 3)
!10943 = !DILocation(line: 1399, column: 8, scope: !10944)
!10944 = distinct !DILexicalBlock(scope: !10934, file: !3, line: 1399, column: 7)
!10945 = !DILocation(line: 1399, column: 12, scope: !10944)
!10946 = !DILocation(line: 1399, column: 26, scope: !10944)
!10947 = !DILocation(line: 1399, column: 7, scope: !10934)
!10948 = !DILocation(line: 1400, column: 8, scope: !10949)
!10949 = distinct !DILexicalBlock(scope: !10950, file: !3, line: 1400, column: 8)
!10950 = distinct !DILexicalBlock(scope: !10944, file: !3, line: 1399, column: 32)
!10951 = !DILocation(line: 1400, column: 12, scope: !10949)
!10952 = !DILocation(line: 1400, column: 8, scope: !10950)
!10953 = !DILocation(line: 1401, column: 5, scope: !10954)
!10954 = distinct !DILexicalBlock(scope: !10949, file: !3, line: 1400, column: 26)
!10955 = !DILocation(line: 1402, column: 5, scope: !10954)
!10956 = !DILocation(line: 1405, column: 4, scope: !10950)
!10957 = !DILocation(line: 1409, column: 7, scope: !10958)
!10958 = distinct !DILexicalBlock(scope: !10934, file: !3, line: 1409, column: 7)
!10959 = !DILocation(line: 1409, column: 9, scope: !10958)
!10960 = !DILocation(line: 1409, column: 7, scope: !10934)
!10961 = !DILocation(line: 1410, column: 4, scope: !10958)
!10962 = !DILocation(line: 1411, column: 2, scope: !10934)
!10963 = !DILocation(line: 1394, column: 23, scope: !10930)
!10964 = !DILocation(line: 1394, column: 2, scope: !10930)
!10965 = distinct !{!10965, !10932, !10966}
!10966 = !DILocation(line: 1411, column: 2, scope: !10927)
!10967 = !DILocation(line: 1413, column: 2, scope: !10917)
!10968 = !DILocation(line: 1414, column: 26, scope: !10917)
!10969 = !DILocation(line: 1414, column: 12, scope: !10917)
!10970 = !DILocation(line: 1414, column: 9, scope: !10917)
!10971 = !DILocation(line: 1415, column: 2, scope: !10972)
!10972 = distinct !DILexicalBlock(scope: !10973, file: !3, line: 1415, column: 2)
!10973 = distinct !DILexicalBlock(scope: !10917, file: !3, line: 1415, column: 2)
!10974 = !DILocation(line: 1415, column: 2, scope: !10973)
!10975 = !DILocation(line: 1415, column: 2, scope: !10976)
!10976 = distinct !DILexicalBlock(scope: !10972, file: !3, line: 1415, column: 2)
!10977 = !DILocation(line: 1417, column: 2, scope: !10917)
!10978 = !DILocation(line: 1418, column: 1, scope: !10917)
!10979 = distinct !DISubprogram(name: "refcount_dec_and_test", scope: !193, file: !193, line: 331, type: !10980, scopeLine: 332, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !284)
!10980 = !DISubroutineType(types: !10981)
!10981 = !{!521, !7289}
!10982 = !DILocalVariable(name: "r", arg: 1, scope: !10979, file: !193, line: 331, type: !7289)
!10983 = !DILocation(line: 331, column: 67, scope: !10979)
!10984 = !DILocation(line: 333, column: 33, scope: !10979)
!10985 = !DILocation(line: 333, column: 9, scope: !10979)
!10986 = !DILocation(line: 333, column: 2, scope: !10979)
!10987 = distinct !DISubprogram(name: "__refcount_dec_and_test", scope: !193, file: !193, line: 313, type: !10988, scopeLine: 314, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !284)
!10988 = !DISubroutineType(types: !10989)
!10989 = !{!521, !7289, !736}
!10990 = !DILocalVariable(name: "r", arg: 1, scope: !10987, file: !193, line: 313, type: !7289)
!10991 = !DILocation(line: 313, column: 69, scope: !10987)
!10992 = !DILocalVariable(name: "oldp", arg: 2, scope: !10987, file: !193, line: 313, type: !736)
!10993 = !DILocation(line: 313, column: 77, scope: !10987)
!10994 = !DILocation(line: 315, column: 36, scope: !10987)
!10995 = !DILocation(line: 315, column: 39, scope: !10987)
!10996 = !DILocation(line: 315, column: 9, scope: !10987)
!10997 = !DILocation(line: 315, column: 2, scope: !10987)
!10998 = distinct !DISubprogram(name: "__refcount_sub_and_test", scope: !193, file: !193, line: 270, type: !10999, scopeLine: 271, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !284)
!10999 = !DISubroutineType(types: !11000)
!11000 = !{!521, !217, !7289, !736}
!11001 = !DILocalVariable(name: "i", arg: 1, scope: !11002, file: !5048, line: 188, type: !217)
!11002 = distinct !DISubprogram(name: "arch_atomic_fetch_sub", scope: !5048, file: !5048, line: 188, type: !7339, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !284)
!11003 = !DILocation(line: 188, column: 54, scope: !11002, inlinedAt: !11004)
!11004 = distinct !DILocation(line: 221, column: 9, scope: !11005, inlinedAt: !11006)
!11005 = distinct !DISubprogram(name: "atomic_fetch_sub_release", scope: !5055, file: !5055, line: 218, type: !7339, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !284)
!11006 = distinct !DILocation(line: 272, column: 12, scope: !10998)
!11007 = !DILocalVariable(name: "v", arg: 2, scope: !11002, file: !5048, line: 188, type: !5051)
!11008 = !DILocation(line: 188, column: 67, scope: !11002, inlinedAt: !11004)
!11009 = !DILocalVariable(name: "__ret", scope: !11010, file: !5048, line: 190, type: !217)
!11010 = distinct !DILexicalBlock(scope: !11002, file: !5048, line: 190, column: 9)
!11011 = !DILocation(line: 190, column: 9, scope: !11010, inlinedAt: !11004)
!11012 = !DILocation(line: 99, column: 79, scope: !7351, inlinedAt: !11013)
!11013 = distinct !DILocation(line: 220, column: 2, scope: !11005, inlinedAt: !11006)
!11014 = !DILocation(line: 99, column: 89, scope: !7351, inlinedAt: !11013)
!11015 = !DILocalVariable(name: "i", arg: 1, scope: !11005, file: !5055, line: 218, type: !217)
!11016 = !DILocation(line: 218, column: 30, scope: !11005, inlinedAt: !11006)
!11017 = !DILocalVariable(name: "v", arg: 2, scope: !11005, file: !5055, line: 218, type: !5051)
!11018 = !DILocation(line: 218, column: 43, scope: !11005, inlinedAt: !11006)
!11019 = !DILocalVariable(name: "i", arg: 1, scope: !10998, file: !193, line: 270, type: !217)
!11020 = !DILocation(line: 270, column: 61, scope: !10998)
!11021 = !DILocalVariable(name: "r", arg: 2, scope: !10998, file: !193, line: 270, type: !7289)
!11022 = !DILocation(line: 270, column: 76, scope: !10998)
!11023 = !DILocalVariable(name: "oldp", arg: 3, scope: !10998, file: !193, line: 270, type: !736)
!11024 = !DILocation(line: 270, column: 84, scope: !10998)
!11025 = !DILocalVariable(name: "old", scope: !10998, file: !193, line: 272, type: !217)
!11026 = !DILocation(line: 272, column: 6, scope: !10998)
!11027 = !DILocation(line: 272, column: 37, scope: !10998)
!11028 = !DILocation(line: 272, column: 41, scope: !10998)
!11029 = !DILocation(line: 272, column: 44, scope: !10998)
!11030 = !DILocation(line: 220, column: 31, scope: !11005, inlinedAt: !11006)
!11031 = !DILocation(line: 101, column: 20, scope: !7351, inlinedAt: !11013)
!11032 = !DILocation(line: 101, column: 23, scope: !7351, inlinedAt: !11013)
!11033 = !DILocation(line: 101, column: 2, scope: !7351, inlinedAt: !11013)
!11034 = !DILocation(line: 102, column: 2, scope: !7351, inlinedAt: !11013)
!11035 = !DILocation(line: 221, column: 39, scope: !11005, inlinedAt: !11006)
!11036 = !DILocation(line: 221, column: 42, scope: !11005, inlinedAt: !11006)
!11037 = !{i32 -2146569908}
!11038 = !DILocation(line: 274, column: 6, scope: !11039)
!11039 = distinct !DILexicalBlock(scope: !10998, file: !193, line: 274, column: 6)
!11040 = !DILocation(line: 274, column: 6, scope: !10998)
!11041 = !DILocation(line: 275, column: 11, scope: !11039)
!11042 = !DILocation(line: 275, column: 4, scope: !11039)
!11043 = !DILocation(line: 275, column: 9, scope: !11039)
!11044 = !DILocation(line: 275, column: 3, scope: !11039)
!11045 = !DILocation(line: 277, column: 6, scope: !11046)
!11046 = distinct !DILexicalBlock(scope: !10998, file: !193, line: 277, column: 6)
!11047 = !DILocation(line: 277, column: 13, scope: !11046)
!11048 = !DILocation(line: 277, column: 10, scope: !11046)
!11049 = !DILocation(line: 277, column: 6, scope: !10998)
!11050 = !DILocation(line: 278, column: 3, scope: !11051)
!11051 = distinct !DILexicalBlock(scope: !11046, file: !193, line: 277, column: 16)
!11052 = !{i32 -2144349411}
!11053 = !DILocation(line: 279, column: 3, scope: !11051)
!11054 = !DILocation(line: 282, column: 6, scope: !11055)
!11055 = distinct !DILexicalBlock(scope: !10998, file: !193, line: 282, column: 6)
!11056 = !DILocation(line: 282, column: 6, scope: !10998)
!11057 = !DILocation(line: 283, column: 26, scope: !11055)
!11058 = !DILocation(line: 283, column: 3, scope: !11055)
!11059 = !DILocation(line: 285, column: 2, scope: !10998)
!11060 = !DILocation(line: 286, column: 1, scope: !10998)
!11061 = distinct !DISubprogram(name: "ufx_free_urb_list", scope: !3, file: !3, line: 1807, type: !11062, scopeLine: 1808, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !284)
!11062 = !DISubroutineType(types: !11063)
!11063 = !{null, !4278}
!11064 = !DILocation(line: 407, column: 64, scope: !7503, inlinedAt: !11065)
!11065 = distinct !DILocation(line: 1830, column: 3, scope: !11066)
!11066 = distinct !DILexicalBlock(scope: !11061, file: !3, line: 1819, column: 18)
!11067 = !DILocation(line: 407, column: 84, scope: !7503, inlinedAt: !11065)
!11068 = !DILocation(line: 327, column: 67, scope: !5701, inlinedAt: !11069)
!11069 = distinct !DILocation(line: 1825, column: 3, scope: !11070)
!11070 = distinct !DILexicalBlock(scope: !11071, file: !3, line: 1825, column: 3)
!11071 = distinct !DILexicalBlock(scope: !11072, file: !3, line: 1825, column: 3)
!11072 = distinct !DILexicalBlock(scope: !11073, file: !3, line: 1825, column: 3)
!11073 = distinct !DILexicalBlock(scope: !11074, file: !3, line: 1825, column: 3)
!11074 = distinct !DILexicalBlock(scope: !11066, file: !3, line: 1825, column: 3)
!11075 = !DILocalVariable(name: "dev", arg: 1, scope: !11061, file: !3, line: 1807, type: !4278)
!11076 = !DILocation(line: 1807, column: 48, scope: !11061)
!11077 = !DILocalVariable(name: "count", scope: !11061, file: !3, line: 1809, type: !217)
!11078 = !DILocation(line: 1809, column: 6, scope: !11061)
!11079 = !DILocation(line: 1809, column: 14, scope: !11061)
!11080 = !DILocation(line: 1809, column: 19, scope: !11061)
!11081 = !DILocation(line: 1809, column: 24, scope: !11061)
!11082 = !DILocalVariable(name: "node", scope: !11061, file: !3, line: 1810, type: !260)
!11083 = !DILocation(line: 1810, column: 20, scope: !11061)
!11084 = !DILocalVariable(name: "unode", scope: !11061, file: !3, line: 1811, type: !4273)
!11085 = !DILocation(line: 1811, column: 19, scope: !11061)
!11086 = !DILocalVariable(name: "urb", scope: !11061, file: !3, line: 1812, type: !4777)
!11087 = !DILocation(line: 1812, column: 14, scope: !11061)
!11088 = !DILocalVariable(name: "ret", scope: !11061, file: !3, line: 1813, type: !217)
!11089 = !DILocation(line: 1813, column: 6, scope: !11061)
!11090 = !DILocalVariable(name: "flags", scope: !11061, file: !3, line: 1814, type: !212)
!11091 = !DILocation(line: 1814, column: 16, scope: !11061)
!11092 = !DILocation(line: 1816, column: 2, scope: !11093)
!11093 = distinct !DILexicalBlock(scope: !11094, file: !3, line: 1816, column: 2)
!11094 = distinct !DILexicalBlock(scope: !11061, file: !3, line: 1816, column: 2)
!11095 = !DILocation(line: 1816, column: 2, scope: !11094)
!11096 = !DILocation(line: 1819, column: 2, scope: !11061)
!11097 = !DILocation(line: 1819, column: 14, scope: !11061)
!11098 = !DILocation(line: 1821, column: 29, scope: !11066)
!11099 = !DILocation(line: 1821, column: 34, scope: !11066)
!11100 = !DILocation(line: 1821, column: 39, scope: !11066)
!11101 = !DILocation(line: 1821, column: 9, scope: !11066)
!11102 = !DILocation(line: 1821, column: 7, scope: !11066)
!11103 = !DILocation(line: 1822, column: 7, scope: !11104)
!11104 = distinct !DILexicalBlock(scope: !11066, file: !3, line: 1822, column: 7)
!11105 = !DILocation(line: 1822, column: 7, scope: !11066)
!11106 = !DILocation(line: 1823, column: 4, scope: !11104)
!11107 = !DILocation(line: 1825, column: 3, scope: !11066)
!11108 = !DILocation(line: 1825, column: 3, scope: !11074)
!11109 = !DILocalVariable(name: "__dummy", scope: !11110, file: !3, line: 1825, type: !212)
!11110 = distinct !DILexicalBlock(scope: !11073, file: !3, line: 1825, column: 3)
!11111 = !DILocation(line: 1825, column: 3, scope: !11110)
!11112 = !DILocalVariable(name: "__dummy2", scope: !11110, file: !3, line: 1825, type: !212)
!11113 = !DILocation(line: 1825, column: 3, scope: !11073)
!11114 = !DILocation(line: 1825, column: 3, scope: !11072)
!11115 = !DILocation(line: 1825, column: 3, scope: !11116)
!11116 = distinct !DILexicalBlock(scope: !11072, file: !3, line: 1825, column: 3)
!11117 = !DILocalVariable(name: "__dummy", scope: !11118, file: !3, line: 1825, type: !212)
!11118 = distinct !DILexicalBlock(scope: !11119, file: !3, line: 1825, column: 3)
!11119 = distinct !DILexicalBlock(scope: !11116, file: !3, line: 1825, column: 3)
!11120 = !DILocation(line: 1825, column: 3, scope: !11118)
!11121 = !DILocalVariable(name: "__dummy2", scope: !11118, file: !3, line: 1825, type: !212)
!11122 = !DILocation(line: 1825, column: 3, scope: !11119)
!11123 = !DILocation(line: 1825, column: 3, scope: !11071)
!11124 = !{i32 -2140927928}
!11125 = !DILocation(line: 1825, column: 3, scope: !11070)
!11126 = !DILocation(line: 329, column: 10, scope: !5701, inlinedAt: !11069)
!11127 = !DILocation(line: 329, column: 16, scope: !5701, inlinedAt: !11069)
!11128 = !DILocation(line: 1827, column: 10, scope: !11066)
!11129 = !DILocation(line: 1827, column: 15, scope: !11066)
!11130 = !DILocation(line: 1827, column: 20, scope: !11066)
!11131 = !DILocation(line: 1827, column: 25, scope: !11066)
!11132 = !DILocation(line: 1827, column: 8, scope: !11066)
!11133 = !DILocation(line: 1828, column: 17, scope: !11066)
!11134 = !DILocation(line: 1828, column: 3, scope: !11066)
!11135 = !DILocation(line: 1830, column: 27, scope: !11066)
!11136 = !DILocation(line: 1830, column: 32, scope: !11066)
!11137 = !DILocation(line: 1830, column: 37, scope: !11066)
!11138 = !DILocation(line: 1830, column: 43, scope: !11066)
!11139 = !DILocation(line: 409, column: 2, scope: !7612, inlinedAt: !11065)
!11140 = !DILocation(line: 409, column: 2, scope: !7617, inlinedAt: !11065)
!11141 = !DILocation(line: 409, column: 2, scope: !7618, inlinedAt: !11065)
!11142 = !DILocation(line: 409, column: 2, scope: !7625, inlinedAt: !11065)
!11143 = !DILocation(line: 409, column: 2, scope: !7628, inlinedAt: !11065)
!11144 = !DILocalVariable(name: "__mptr", scope: !11145, file: !3, line: 1832, type: !211)
!11145 = distinct !DILexicalBlock(scope: !11066, file: !3, line: 1832, column: 11)
!11146 = !DILocation(line: 1832, column: 11, scope: !11145)
!11147 = !DILocation(line: 1832, column: 11, scope: !11148)
!11148 = distinct !DILexicalBlock(scope: !11145, file: !3, line: 1832, column: 11)
!11149 = !DILocation(line: 1832, column: 9, scope: !11066)
!11150 = !DILocation(line: 1833, column: 9, scope: !11066)
!11151 = !DILocation(line: 1833, column: 16, scope: !11066)
!11152 = !DILocation(line: 1833, column: 7, scope: !11066)
!11153 = !DILocation(line: 1836, column: 21, scope: !11066)
!11154 = !DILocation(line: 1836, column: 26, scope: !11066)
!11155 = !DILocation(line: 1836, column: 31, scope: !11066)
!11156 = !DILocation(line: 1836, column: 36, scope: !11066)
!11157 = !DILocation(line: 1836, column: 41, scope: !11066)
!11158 = !DILocation(line: 1837, column: 7, scope: !11066)
!11159 = !DILocation(line: 1837, column: 12, scope: !11066)
!11160 = !DILocation(line: 1837, column: 29, scope: !11066)
!11161 = !DILocation(line: 1837, column: 34, scope: !11066)
!11162 = !DILocation(line: 1836, column: 3, scope: !11066)
!11163 = !DILocation(line: 1838, column: 16, scope: !11066)
!11164 = !DILocation(line: 1838, column: 3, scope: !11066)
!11165 = !DILocation(line: 1839, column: 9, scope: !11066)
!11166 = !DILocation(line: 1839, column: 3, scope: !11066)
!11167 = distinct !{!11167, !11096, !11168}
!11168 = !DILocation(line: 1840, column: 2, scope: !11061)
!11169 = !DILocation(line: 1841, column: 1, scope: !11061)
!11170 = distinct !DISubprogram(name: "usb_get_intfdata", scope: !6, file: !6, line: 263, type: !11171, scopeLine: 264, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !284)
!11171 = !DISubroutineType(types: !11172)
!11172 = !{!211, !4165}
!11173 = !DILocalVariable(name: "intf", arg: 1, scope: !11170, file: !6, line: 263, type: !4165)
!11174 = !DILocation(line: 263, column: 60, scope: !11170)
!11175 = !DILocation(line: 265, column: 26, scope: !11170)
!11176 = !DILocation(line: 265, column: 32, scope: !11170)
!11177 = !DILocation(line: 265, column: 9, scope: !11170)
!11178 = !DILocation(line: 265, column: 2, scope: !11170)
!11179 = distinct !DISubprogram(name: "dev_get_drvdata", scope: !80, file: !80, line: 655, type: !11180, scopeLine: 656, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !284)
!11180 = !DISubroutineType(types: !11181)
!11181 = !{!211, !3775}
!11182 = !DILocalVariable(name: "dev", arg: 1, scope: !11179, file: !80, line: 655, type: !3775)
!11183 = !DILocation(line: 655, column: 58, scope: !11179)
!11184 = !DILocation(line: 657, column: 9, scope: !11179)
!11185 = !DILocation(line: 657, column: 14, scope: !11179)
!11186 = !DILocation(line: 657, column: 2, scope: !11179)
