; ModuleID = '../bcout/drivers/input/mouse/alps.llvm.bc'
source_filename = "drivers/input/mouse/alps.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64"

%struct.mutex = type { %struct.atomic64_t, %struct.spinlock, %struct.list_head }
%struct.atomic64_t = type { i64 }
%struct.spinlock = type { %union.anon.0 }
%union.anon.0 = type { %struct.raw_spinlock }
%struct.raw_spinlock = type { %struct.arch_spinlock_t }
%struct.arch_spinlock_t = type {}
%struct.list_head = type { %struct.list_head*, %struct.list_head* }
%struct.alps_protocol_info = type { i16, i8, i8, i32 }
%struct.alps_model_info = type { [3 x i8], %struct.alps_protocol_info }
%struct.alps_nibble_commands = type { i32, i8 }
%struct.paravirt_patch_template = type { %struct.pv_init_ops, %struct.pv_time_ops, %struct.pv_cpu_ops, %struct.pv_irq_ops, %struct.pv_mmu_ops, %struct.pv_lock_ops }
%struct.pv_init_ops = type { i32 (i8, i8*, i64, i32)* }
%struct.pv_time_ops = type { i64 ()*, i64 (i32)* }
%struct.pv_cpu_ops = type { void ()*, i64 (i32)*, void (i32, i64)*, i64 ()*, void (i64)*, void (i64)*, void ()*, void (%struct.desc_ptr*)*, void (%struct.desc_ptr*)*, void (i8*, i32)*, i64 ()*, void (%struct.thread_struct*, i32)*, void (i32)*, void (%struct.desc_struct*, i32, i8*)*, void (%struct.desc_struct*, i32, i8*, i32)*, void (%struct.gate_struct*, i32, %struct.gate_struct*)*, void (%struct.desc_struct*, i32)*, void (%struct.desc_struct*, i32)*, void (i64)*, void ()*, void ()*, void ()*, void (i32*, i32*, i32*, i32*)*, i64 (i32)*, void (i32, i32, i32)*, i64 (i32, i32*)*, i32 (i32, i32, i32)*, i64 (i32)*, void ()*, void ()*, void ()*, void (%struct.task_struct*)*, void (%struct.task_struct*)* }
%struct.desc_ptr = type <{ i16, i64 }>
%struct.thread_struct = type { [3 x %struct.desc_struct], i64, i16, i16, i16, i16, i64, i64, [4 x %struct.perf_event*], i64, i64, i64, i64, i64, %struct.io_bitmap*, i64, i8, [47 x i8], %struct.fpu }
%struct.desc_struct = type { i16, i16, i32 }
%struct.perf_event = type opaque
%struct.io_bitmap = type opaque
%struct.fpu = type { i32, i64, [48 x i8], %union.fpregs_state }
%union.fpregs_state = type { %struct.xregs_state, [3520 x i8] }
%struct.xregs_state = type { %struct.fxregs_state, %struct.xstate_header, [0 x i8] }
%struct.fxregs_state = type { i16, i16, i16, i16, %union.anon.47, i32, i32, [32 x i32], [64 x i32], [12 x i32], %union.anon.50 }
%union.anon.47 = type { %struct.anon.48 }
%struct.anon.48 = type { i64, i64 }
%union.anon.50 = type { [12 x i32] }
%struct.xstate_header = type { i64, i64, [6 x i64] }
%struct.gate_struct = type { i16, i16, %struct.idt_bits, i16, i32, i32 }
%struct.idt_bits = type { i16 }
%struct.task_struct = type { %struct.thread_info, i64, i8*, %struct.refcount_struct, i32, i32, i32, i32, i32, i32, i32, %struct.sched_class*, %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, i32, i32, %struct.cpumask*, %struct.cpumask, %struct.sched_info, %struct.list_head, %struct.mm_struct*, %struct.mm_struct*, %struct.vmacache, i32, i32, i32, i32, i64, i32, i8, [3 x i8], i8, i64, %struct.restart_block, i32, i32, i64, %struct.task_struct*, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.pid*, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, %struct.completion*, i32*, i32*, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, %struct.posix_cputimers, %struct.posix_cputimers_work, %struct.cred*, %struct.cred*, %struct.cred*, %struct.key*, [16 x i8], %struct.nameidata*, %struct.fs_struct*, %struct.files_struct*, %struct.io_uring_task*, %struct.nsproxy*, %struct.signal_struct*, %struct.sighand_struct*, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i64, i64, i32, %struct.callback_head*, %struct.seccomp, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, %struct.task_struct*, %struct.rt_mutex_waiter*, i8*, %struct.bio_list*, %struct.blk_plug*, %struct.reclaim_state*, %struct.backing_dev_info*, %struct.io_context*, %struct.capture_control*, i64, %struct.kernel_siginfo*, %struct.task_io_accounting, %struct.robust_list_head*, %struct.list_head, %struct.futex_pi_state*, %struct.mutex, i32, [2 x %struct.perf_event_context*], %struct.mutex, %struct.list_head, %struct.rseq*, i32, i64, %struct.tlbflush_unmap_batch, %union.anon.46, %struct.pipe_inode_info*, %struct.page_frag, i32, i32, i64, i64, i64, i32, %struct.task_struct*, %struct.vm_struct*, %struct.refcount_struct, i8*, i64, i64, i64, %struct.callback_head, [24 x i8], %struct.thread_struct }
%struct.thread_info = type { i64, i32 }
%struct.sched_class = type opaque
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, %struct.sched_statistics }
%struct.load_weight = type { i64, i32 }
%struct.rb_node = type { i64, %struct.rb_node*, %struct.rb_node* }
%struct.sched_statistics = type {}
%struct.sched_rt_entity = type { %struct.list_head, i64, i64, i32, i16, i16, %struct.sched_rt_entity* }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, %struct.sched_dl_entity* }
%struct.hrtimer = type { %struct.timerqueue_node, i64, i32 (%struct.hrtimer*)*, %struct.hrtimer_clock_base*, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.hrtimer_clock_base = type { %struct.hrtimer_cpu_base*, i32, i32, %struct.seqcount_raw_spinlock, %struct.hrtimer*, %struct.timerqueue_head, i64 ()*, i64 }
%struct.hrtimer_cpu_base = type { %struct.raw_spinlock, i32, i32, i32, i8, i64, %struct.hrtimer*, i64, %struct.hrtimer*, [16 x i8], [8 x %struct.hrtimer_clock_base] }
%struct.seqcount_raw_spinlock = type { %struct.seqcount }
%struct.seqcount = type { i32 }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.cpumask = type { [1 x i64] }
%struct.sched_info = type {}
%struct.mm_struct = type { %struct.anon.16, [0 x i64] }
%struct.anon.16 = type { %struct.vm_area_struct*, %struct.rb_root, i64, i64 (%struct.file*, i64, i64, i64, i64)*, i64, i64, i64, i64, %struct.pgd_t*, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i32, %struct.spinlock, %struct.rw_semaphore, %struct.list_head, i64, i64, i64, i64, %struct.atomic64_t, i64, i64, i64, i64, %struct.spinlock, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [44 x i64], %struct.mm_rss_stat, %struct.linux_binfmt*, %struct.mm_context_t, i64, %struct.core_state*, %struct.spinlock, %struct.kioctx_table*, %struct.user_namespace*, %struct.file*, %struct.mmu_notifier_subscriptions*, %struct.atomic_t, i8, %struct.uprobes_state, %struct.work_struct, i32 }
%struct.vm_area_struct = type { i64, i64, %struct.vm_area_struct*, %struct.vm_area_struct*, %struct.rb_node, i64, %struct.mm_struct*, %struct.pgprot, i64, %struct.anon.17, %struct.list_head, %struct.anon_vma*, %struct.vm_operations_struct*, i64, %struct.file*, i8*, %struct.atomic64_t, %struct.vm_userfaultfd_ctx }
%struct.pgprot = type { i64 }
%struct.anon.17 = type { %struct.rb_node, i64 }
%struct.anon_vma = type opaque
%struct.vm_operations_struct = type opaque
%struct.vm_userfaultfd_ctx = type {}
%struct.rb_root = type { %struct.rb_node* }
%struct.pgd_t = type { i64 }
%struct.rw_semaphore = type { %struct.atomic64_t, %struct.atomic64_t, %struct.raw_spinlock, %struct.list_head }
%struct.mm_rss_stat = type { [4 x %struct.atomic64_t] }
%struct.linux_binfmt = type opaque
%struct.mm_context_t = type { i64, %struct.atomic64_t, %struct.rw_semaphore, %struct.ldt_struct*, i16, %struct.mutex, i8*, %struct.vdso_image*, %struct.atomic_t, i16, i16 }
%struct.ldt_struct = type opaque
%struct.vdso_image = type opaque
%struct.core_state = type { %struct.atomic_t, %struct.core_thread, %struct.completion }
%struct.core_thread = type { %struct.task_struct*, %struct.core_thread* }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.kioctx_table = type opaque
%struct.user_namespace = type opaque
%struct.file = type { %union.anon.1, %struct.path, %struct.inode*, %struct.file_operations*, %struct.spinlock, i32, %struct.atomic64_t, i32, i32, %struct.mutex, i64, %struct.fown_struct, %struct.cred*, %struct.file_ra_state, i64, i8*, %struct.list_head, %struct.list_head, %struct.address_space*, i32, i32 }
%union.anon.1 = type { %struct.callback_head }
%struct.path = type { %struct.vfsmount*, %struct.dentry* }
%struct.vfsmount = type opaque
%struct.dentry = type { i32, %struct.seqcount_spinlock, %struct.hlist_bl_node, %struct.dentry*, %struct.qstr, %struct.inode*, [32 x i8], %struct.lockref, %struct.dentry_operations*, %struct.super_block*, i64, i8*, %union.anon.62, %struct.list_head, %struct.list_head, %union.anon.63 }
%struct.seqcount_spinlock = type { %struct.seqcount }
%struct.hlist_bl_node = type { %struct.hlist_bl_node*, %struct.hlist_bl_node** }
%struct.qstr = type { %union.anon.2, i8* }
%union.anon.2 = type { i64 }
%struct.lockref = type { %union.anon.60 }
%union.anon.60 = type { %struct.anon.61 }
%struct.anon.61 = type { %struct.spinlock, i32 }
%struct.dentry_operations = type { i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.qstr*)*, i32 (%struct.dentry*, i32, i8*, %struct.qstr*)*, i32 (%struct.dentry*)*, i32 (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*, %struct.inode*)*, i8* (%struct.dentry*, i8*, i32)*, %struct.vfsmount* (%struct.path*)*, i32 (%struct.path*, i1)*, %struct.dentry* (%struct.dentry*, %struct.inode*)*, [24 x i8] }
%struct.super_block = type { %struct.list_head, i32, i8, i64, i64, %struct.file_system_type*, %struct.super_operations*, %struct.dquot_operations*, %struct.quotactl_ops*, %struct.export_operations*, i64, i64, i64, %struct.dentry*, %struct.rw_semaphore, i32, %struct.atomic_t, %struct.xattr_handler**, %struct.hlist_bl_head, %struct.list_head, %struct.block_device*, %struct.backing_dev_info*, %struct.mtd_info*, %struct.hlist_node, i32, %struct.quota_info, %struct.sb_writers, i8*, i32, i64, i64, i32, %struct.fsnotify_mark_connector*, [32 x i8], %struct.uuid_t, i32, i32, %struct.mutex, i8*, %struct.dentry_operations*, i32, %struct.shrinker, %struct.atomic64_t, %struct.atomic64_t, i32, i32, %struct.workqueue_struct*, %struct.hlist_head, %struct.user_namespace*, %struct.list_lru, %struct.list_lru, %struct.callback_head, %struct.work_struct, %struct.mutex, i32, %struct.spinlock, %struct.list_head, %struct.spinlock, %struct.list_head }
%struct.file_system_type = type { i8*, i32, i32 (%struct.fs_context*)*, %struct.fs_parameter_spec*, %struct.dentry* (%struct.file_system_type*, i32, i8*, i8*)*, void (%struct.super_block*)*, %struct.module*, %struct.file_system_type*, %struct.hlist_head, %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key, [3 x %struct.lock_class_key], %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key }
%struct.fs_context = type opaque
%struct.fs_parameter_spec = type opaque
%struct.module = type opaque
%struct.lock_class_key = type {}
%struct.super_operations = type { %struct.inode* (%struct.super_block*)*, void (%struct.inode*)*, void (%struct.inode*)*, void (%struct.inode*, i32)*, i32 (%struct.inode*, %struct.writeback_control*)*, i32 (%struct.inode*)*, void (%struct.inode*)*, void (%struct.super_block*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.dentry*, %struct.kstatfs*)*, i32 (%struct.super_block*, i32*, i8*)*, void (%struct.super_block*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.super_block*, %struct.page*, i32)*, i64 (%struct.super_block*, %struct.shrink_control*)*, i64 (%struct.super_block*, %struct.shrink_control*)* }
%struct.writeback_control = type opaque
%struct.kstatfs = type opaque
%struct.seq_file = type opaque
%struct.page = type { i64, %union.anon.3, %union.anon.52, %struct.atomic_t, [8 x i8] }
%union.anon.3 = type { %struct.anon.4 }
%struct.anon.4 = type { %struct.list_head, %struct.address_space*, i64, i64 }
%union.anon.52 = type { %struct.atomic_t }
%struct.shrink_control = type { i32, i32, i64, i64, %struct.mem_cgroup* }
%struct.mem_cgroup = type opaque
%struct.dquot_operations = type { i32 (%struct.dquot*)*, %struct.dquot* (%struct.super_block*, i32)*, void (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, i32)*, i64* (%struct.inode*)*, i32 (%struct.inode*, %struct.kprojid_t*)*, i32 (%struct.inode*, i64*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.dquot = type { %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.mutex, %struct.spinlock, %struct.atomic_t, %struct.super_block*, %struct.kqid, i64, i64, %struct.mem_dqblk }
%struct.kqid = type { %union.anon.53, i32 }
%union.anon.53 = type { %struct.kuid_t }
%struct.kuid_t = type { i32 }
%struct.mem_dqblk = type { i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.kprojid_t = type { i32 }
%struct.quotactl_ops = type { i32 (%struct.super_block*, i32, i32, %struct.path*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32, %struct.qc_info*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.kqid*, %struct.qc_dqblk*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.qc_state*)*, i32 (%struct.super_block*, i32)* }
%struct.qc_info = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.qc_dqblk = type { i32, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, i64, i64, i64, i64, i32 }
%struct.qc_state = type { i32, [3 x %struct.qc_type_state] }
%struct.qc_type_state = type { i32, i32, i32, i32, i32, i32, i32, i64, i64, i64 }
%struct.export_operations = type opaque
%struct.xattr_handler = type opaque
%struct.hlist_bl_head = type { %struct.hlist_bl_node* }
%struct.block_device = type opaque
%struct.mtd_info = type opaque
%struct.hlist_node = type { %struct.hlist_node*, %struct.hlist_node** }
%struct.quota_info = type { i32, %struct.rw_semaphore, [3 x %struct.inode*], [3 x %struct.mem_dqinfo], [3 x %struct.quota_format_ops*] }
%struct.mem_dqinfo = type { %struct.quota_format_type*, i32, %struct.list_head, i64, i32, i32, i64, i64, i8* }
%struct.quota_format_type = type { i32, %struct.quota_format_ops*, %struct.module*, %struct.quota_format_type* }
%struct.quota_format_ops = type { i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.sb_writers = type { i32, %struct.wait_queue_head, [3 x %struct.percpu_rw_semaphore] }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.percpu_rw_semaphore = type { %struct.rcu_sync, i32*, %struct.rcuwait, %struct.wait_queue_head, %struct.atomic_t }
%struct.rcu_sync = type { i32, i32, %struct.wait_queue_head, %struct.callback_head }
%struct.rcuwait = type { %struct.task_struct* }
%struct.fsnotify_mark_connector = type opaque
%struct.uuid_t = type { [16 x i8] }
%struct.shrinker = type { i64 (%struct.shrinker*, %struct.shrink_control*)*, i64 (%struct.shrinker*, %struct.shrink_control*)*, i64, i32, i32, %struct.list_head, %struct.atomic64_t* }
%struct.workqueue_struct = type opaque
%struct.hlist_head = type { %struct.hlist_node* }
%struct.list_lru = type { %struct.list_lru_node* }
%struct.list_lru_node = type { %struct.spinlock, %struct.list_lru_one, i64 }
%struct.list_lru_one = type { %struct.list_head, i64 }
%union.anon.62 = type { %struct.list_head }
%union.anon.63 = type { %struct.hlist_node }
%struct.inode = type { i16, i16, %struct.kuid_t, %struct.kgid_t, i32, %struct.inode_operations*, %struct.super_block*, %struct.address_space*, i64, %union.anon.54, i32, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.spinlock, i16, i8, i8, i64, i64, %struct.rw_semaphore, i64, i64, %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %union.anon.55, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %union.anon.56, %struct.file_lock_context*, %struct.address_space, %struct.list_head, %union.anon.59, i32, i32, %struct.fsnotify_mark_connector*, i8* }
%struct.kgid_t = type { i32 }
%struct.inode_operations = type { %struct.dentry* (%struct.inode*, %struct.dentry*, i32)*, i8* (%struct.dentry*, %struct.inode*, %struct.delayed_call*)*, i32 (%struct.inode*, i32)*, %struct.posix_acl* (%struct.inode*, i32)*, i32 (%struct.dentry*, i8*, i32)*, i32 (%struct.inode*, %struct.dentry*, i16, i1)*, i32 (%struct.dentry*, %struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i8*)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i16, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.inode*, %struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.iattr*)*, i32 (%struct.path*, %struct.kstat*, i32, i32)*, i64 (%struct.dentry*, i8*, i64)*, i32 (%struct.inode*, %struct.fiemap_extent_info*, i64, i64)*, i32 (%struct.inode*, %struct.timespec64*, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.file*, i32, i16)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.posix_acl*, i32)*, [24 x i8] }
%struct.delayed_call = type { void (i8*)*, i8* }
%struct.posix_acl = type opaque
%struct.iattr = type { i32, i16, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.file* }
%struct.kstat = type { i32, i16, i32, i32, i64, i64, i64, i32, i32, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.timespec64, i64, i64 }
%struct.fiemap_extent_info = type opaque
%union.anon.54 = type { i32 }
%struct.timespec64 = type { i64, i64 }
%union.anon.55 = type { %struct.callback_head }
%union.anon.56 = type { %struct.file_operations* }
%struct.file_lock_context = type { %struct.spinlock, %struct.list_head, %struct.list_head, %struct.list_head }
%struct.address_space = type { %struct.inode*, %struct.xarray, i32, %struct.atomic_t, %struct.rb_root_cached, %struct.rw_semaphore, i64, i64, i64, %struct.address_space_operations*, i64, i32, %struct.spinlock, %struct.list_head, i8* }
%struct.xarray = type { %struct.spinlock, i32, i8* }
%struct.address_space_operations = type { i32 (%struct.page*, %struct.writeback_control*)*, i32 (%struct.file*, %struct.page*)*, i32 (%struct.address_space*, %struct.writeback_control*)*, i32 (%struct.page*)*, i32 (%struct.file*, %struct.address_space*, %struct.list_head*, i32)*, void (%struct.readahead_control*)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page**, i8**)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page*, i8*)*, i64 (%struct.address_space*, i64)*, void (%struct.page*, i32, i32)*, i32 (%struct.page*, i32)*, void (%struct.page*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.address_space*, %struct.page*, %struct.page*, i32)*, i1 (%struct.page*, i32)*, void (%struct.page*)*, i32 (%struct.page*)*, i32 (%struct.page*, i64, i64)*, void (%struct.page*, i8*, i8*)*, i32 (%struct.address_space*, %struct.page*)*, i32 (%struct.swap_info_struct*, %struct.file*, i64*)*, void (%struct.file*)* }
%struct.readahead_control = type opaque
%struct.kiocb = type { %struct.file*, i64, void (%struct.kiocb*, i64, i64)*, i8*, i32, i16, i16, %union.anon.5 }
%union.anon.5 = type { %struct.wait_page_queue* }
%struct.wait_page_queue = type opaque
%struct.iov_iter = type opaque
%struct.swap_info_struct = type opaque
%union.anon.59 = type { %struct.pipe_inode_info* }
%struct.file_operations = type { %struct.module*, i64 (%struct.file*, i64, i32)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.kiocb*, i1)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.poll_table_struct*)*, i64 (%struct.file*, i32, i64)*, i64 (%struct.file*, i32, i64)*, i32 (%struct.file*, %struct.vm_area_struct*)*, i64, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i8*)*, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i64, i64, i32)*, i32 (i32, %struct.file*, i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.file*, %struct.page*, i32, i64, i64*, i32)*, i64 (%struct.file*, i64, i64, i64, i64)*, i32 (i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.pipe_inode_info*, %struct.file*, i64*, i64, i32)*, i64 (%struct.file*, i64*, %struct.pipe_inode_info*, i64, i32)*, i32 (%struct.file*, i64, %struct.file_lock**, i8**)*, i64 (%struct.file*, i32, i64, i64)*, void (%struct.seq_file*, %struct.file*)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i32 (%struct.file*, i64, i64, i32)* }
%struct.dir_context = type { i32 (%struct.dir_context*, i8*, i32, i64, i64, i32)*, i64 }
%struct.poll_table_struct = type opaque
%struct.file_lock = type { %struct.file_lock*, %struct.list_head, %struct.hlist_node, %struct.list_head, %struct.list_head, i8*, i32, i8, i32, i32, %struct.wait_queue_head, %struct.file*, i64, i64, %struct.fasync_struct*, i64, i64, %struct.file_lock_operations*, %struct.lock_manager_operations*, %union.anon.57 }
%struct.fasync_struct = type { %struct.rwlock_t, i32, i32, %struct.fasync_struct*, %struct.file*, %struct.callback_head }
%struct.rwlock_t = type { %struct.arch_rwlock_t }
%struct.arch_rwlock_t = type {}
%struct.file_lock_operations = type { void (%struct.file_lock*, %struct.file_lock*)*, void (%struct.file_lock*)* }
%struct.lock_manager_operations = type { i8* (i8*)*, void (i8*)*, void (%struct.file_lock*)*, i32 (%struct.file_lock*, i32)*, i1 (%struct.file_lock*)*, i32 (%struct.file_lock*, i32, %struct.list_head*)*, void (%struct.file_lock*, i8**)*, i1 (%struct.file_lock*)* }
%union.anon.57 = type { %struct.nfs_lock_info }
%struct.nfs_lock_info = type { i32, %struct.nlm_lockowner*, %struct.list_head }
%struct.nlm_lockowner = type opaque
%struct.fown_struct = type { %struct.rwlock_t, %struct.pid*, i32, %struct.kuid_t, %struct.kuid_t, i32 }
%struct.file_ra_state = type { i64, i32, i32, i32, i32, i64 }
%struct.mmu_notifier_subscriptions = type opaque
%struct.atomic_t = type { i32 }
%struct.uprobes_state = type {}
%struct.work_struct = type { %struct.atomic64_t, %struct.list_head, void (%struct.work_struct*)* }
%struct.vmacache = type { i64, [4 x %struct.vm_area_struct*] }
%struct.restart_block = type { i64 (%struct.restart_block*)*, %union.anon.18 }
%union.anon.18 = type { %struct.anon.19 }
%struct.anon.19 = type { i32*, i32, i32, i32, i64, i32* }
%struct.pid = type { %struct.refcount_struct, i32, %struct.spinlock, [4 x %struct.hlist_head], %struct.hlist_head, %struct.wait_queue_head, %struct.callback_head, [1 x %struct.upid] }
%struct.upid = type { i32, %struct.pid_namespace* }
%struct.pid_namespace = type opaque
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.posix_cputimers_work = type { %struct.callback_head, i32 }
%struct.cred = type { %struct.atomic_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, i32, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, i8, %struct.key*, %struct.key*, %struct.key*, %struct.key*, %struct.user_struct*, %struct.user_namespace*, %struct.group_info*, %union.anon.31 }
%struct.kernel_cap_struct = type { [2 x i32] }
%struct.user_struct = type { %struct.refcount_struct, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i64, i64, %struct.atomic64_t, %struct.hlist_node, %struct.kuid_t, %struct.atomic64_t, %struct.ratelimit_state }
%struct.ratelimit_state = type { %struct.raw_spinlock, i32, i32, i32, i32, i64, i64 }
%struct.group_info = type { %struct.atomic_t, i32, [0 x %struct.kgid_t] }
%union.anon.31 = type { %struct.callback_head }
%struct.key = type { %struct.refcount_struct, i32, %union.anon.23, %struct.rw_semaphore, %struct.key_user*, i8*, %union.anon.24, i64, %struct.kuid_t, %struct.kgid_t, i32, i16, i16, i16, i64, %union.anon.25, %union.anon.29, %struct.key_restriction* }
%union.anon.23 = type { %struct.rb_node }
%struct.key_user = type opaque
%union.anon.24 = type { i64 }
%union.anon.25 = type { %struct.keyring_index_key }
%struct.keyring_index_key = type { i64, %union.anon.26, %struct.key_type*, %struct.key_tag*, i8* }
%union.anon.26 = type { i64 }
%struct.key_type = type opaque
%struct.key_tag = type { %struct.callback_head, %struct.refcount_struct, i8 }
%union.anon.29 = type { %union.key_payload }
%union.key_payload = type { [4 x i8*] }
%struct.key_restriction = type { i32 (%struct.key*, %struct.key_type*, %union.key_payload*, %struct.key*)*, %struct.key*, %struct.key_type* }
%struct.nameidata = type opaque
%struct.fs_struct = type opaque
%struct.files_struct = type opaque
%struct.io_uring_task = type opaque
%struct.nsproxy = type opaque
%struct.signal_struct = type { %struct.refcount_struct, %struct.atomic_t, i32, %struct.list_head, %struct.wait_queue_head, %struct.task_struct*, %struct.sigpending, %struct.hlist_head, i32, i32, %struct.task_struct*, i32, i32, i8, i32, %struct.list_head, %struct.hrtimer, i64, [2 x %struct.cpu_itimer], %struct.thread_group_cputimer, %struct.posix_cputimers, [4 x %struct.pid*], %struct.pid*, i32, %struct.tty_struct*, %struct.seqlock_t, i64, i64, i64, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.task_io_accounting, i64, [16 x %struct.rlimit], i8, i16, i16, %struct.mm_struct*, %struct.mutex, %struct.mutex }
%struct.cpu_itimer = type { i64, i64 }
%struct.thread_group_cputimer = type { %struct.task_cputime_atomic }
%struct.task_cputime_atomic = type { %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t }
%struct.tty_struct = type opaque
%struct.seqlock_t = type { %struct.seqcount_spinlock, %struct.spinlock }
%struct.rlimit = type { i64, i64 }
%struct.sighand_struct = type { %struct.spinlock, %struct.refcount_struct, %struct.wait_queue_head, [64 x %struct.k_sigaction] }
%struct.k_sigaction = type { %struct.sigaction }
%struct.sigaction = type { void (i32)*, i64, void ()*, %struct.sigset_t }
%struct.sigset_t = type { [1 x i64] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.seccomp = type { i32, %struct.atomic_t, %struct.seccomp_filter* }
%struct.seccomp_filter = type opaque
%struct.wake_q_node = type { %struct.wake_q_node* }
%struct.rb_root_cached = type { %struct.rb_root, %struct.rb_node* }
%struct.rt_mutex_waiter = type opaque
%struct.bio_list = type opaque
%struct.blk_plug = type opaque
%struct.reclaim_state = type opaque
%struct.backing_dev_info = type opaque
%struct.io_context = type { %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.spinlock, i16, %struct.xarray, %struct.io_cq*, %struct.hlist_head, %struct.work_struct }
%struct.io_cq = type { %struct.request_queue*, %struct.io_context*, %union.anon.32, %union.anon.33, i32 }
%struct.request_queue = type opaque
%union.anon.32 = type { %struct.list_head }
%union.anon.33 = type { %struct.hlist_node }
%struct.capture_control = type opaque
%struct.kernel_siginfo = type { %struct.anon.34 }
%struct.anon.34 = type { i32, i32, i32, %union.__sifields }
%union.__sifields = type { %struct.anon.38 }
%struct.anon.38 = type { i32, i32, i32, i64, i64 }
%struct.task_io_accounting = type {}
%struct.robust_list_head = type opaque
%struct.futex_pi_state = type opaque
%struct.perf_event_context = type opaque
%struct.rseq = type { i32, i32, %union.anon.45, i32, [12 x i8] }
%union.anon.45 = type { i64 }
%struct.tlbflush_unmap_batch = type { %struct.arch_tlbflush_unmap_batch, i8, i8 }
%struct.arch_tlbflush_unmap_batch = type { %struct.cpumask }
%union.anon.46 = type { %struct.callback_head }
%struct.pipe_inode_info = type opaque
%struct.page_frag = type { %struct.page*, i32, i32 }
%struct.vm_struct = type opaque
%struct.refcount_struct = type { %struct.atomic_t }
%struct.callback_head = type { %struct.callback_head*, void (%struct.callback_head*)* }
%struct.pv_irq_ops = type { %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void ()*, void ()* }
%struct.paravirt_callee_save = type { i8* }
%struct.pv_mmu_ops = type { void ()*, void ()*, void (i64)*, void (%struct.cpumask*, %struct.flush_tlb_info*)*, void (%struct.mmu_gather*, i8*)*, void (%struct.mm_struct*)*, %struct.paravirt_callee_save, void (i64)*, i64 ()*, void (i64)*, void (%struct.mm_struct*, %struct.mm_struct*)*, void (%struct.mm_struct*, %struct.mm_struct*)*, i32 (%struct.mm_struct*)*, void (%struct.mm_struct*, %struct.pgd_t*)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (i64)*, void (i64)*, void (i64)*, void (i64)*, void (%struct.pte_t*, i64)*, void (%struct.pmd_t*, i64)*, i64 (%struct.vm_area_struct*, i64, %struct.pte_t*)*, void (%struct.vm_area_struct*, i64, %struct.pte_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.pud_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.p4d_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.pgd_t*, i64)*, %struct.pv_lazy_ops, void (i32, i64, i64)* }
%struct.flush_tlb_info = type opaque
%struct.mmu_gather = type opaque
%struct.pte_t = type { i64 }
%struct.pmd_t = type { i64 }
%struct.pud_t = type { i64 }
%struct.p4d_t = type { i64 }
%struct.pv_lazy_ops = type { void ()*, void ()*, void ()* }
%struct.pv_lock_ops = type { void (%struct.qspinlock*, i32)*, %struct.paravirt_callee_save, void (i8*, i8)*, void (i32)*, %struct.paravirt_callee_save }
%struct.qspinlock = type opaque
%struct.dmi_system_id = type { {}*, i8*, [4 x %struct.dmi_strmatch], i8* }
%struct.dmi_strmatch = type { i8, [79 x i8] }
%struct.kmem_cache = type opaque
%struct.psmouse = type { i8*, %struct.input_dev*, %struct.ps2dev, %struct.delayed_work, i8*, i8*, %struct.psmouse_protocol*, [8 x i8], i8, i8, i8, i8, i8, i8, i32, i64, i64, i64, i32, [64 x i8], [32 x i8], i32, i32, i32, i32, i8, i32 (%struct.psmouse*)*, void (%struct.psmouse*, i32)*, void (%struct.psmouse*, i32)*, void (%struct.psmouse*, i32)*, {}*, {}*, void (%struct.psmouse*)*, void (%struct.psmouse*)*, {}*, void (%struct.psmouse*)*, void (%struct.psmouse*)* }
%struct.input_dev = type { i8*, i8*, i8*, %struct.input_id, [1 x i64], [1 x i64], [12 x i64], [1 x i64], [1 x i64], [1 x i64], [1 x i64], [1 x i64], [2 x i64], [1 x i64], i32, i32, i32, i8*, i32 (%struct.input_dev*, %struct.input_keymap_entry*, i32*)*, i32 (%struct.input_dev*, %struct.input_keymap_entry*)*, %struct.ff_device*, %struct.input_dev_poller*, i32, %struct.timer_list, [2 x i32], %struct.input_mt*, %struct.input_absinfo*, [12 x i64], [1 x i64], [1 x i64], [1 x i64], i32 (%struct.input_dev*)*, void (%struct.input_dev*)*, i32 (%struct.input_dev*, %struct.file*)*, i32 (%struct.input_dev*, i32, i32, i32)*, %struct.input_handle*, %struct.spinlock, %struct.mutex, i32, i8, %struct.device, %struct.list_head, %struct.list_head, i32, i32, %struct.input_value*, i8, [3 x i64] }
%struct.input_id = type { i16, i16, i16, i16 }
%struct.input_keymap_entry = type { i8, i8, i16, i32, [32 x i8] }
%struct.ff_device = type { i32 (%struct.input_dev*, %struct.ff_effect*, %struct.ff_effect*)*, i32 (%struct.input_dev*, i32)*, i32 (%struct.input_dev*, i32, i32)*, void (%struct.input_dev*, i16)*, void (%struct.input_dev*, i16)*, void (%struct.ff_device*)*, i8*, [2 x i64], %struct.mutex, i32, %struct.ff_effect*, [0 x %struct.file*] }
%struct.ff_effect = type { i16, i16, i16, %struct.ff_trigger, %struct.ff_replay, %union.anon }
%struct.ff_trigger = type { i16, i16 }
%struct.ff_replay = type { i16, i16 }
%union.anon = type { %struct.ff_periodic_effect }
%struct.ff_periodic_effect = type { i16, i16, i16, i16, i16, %struct.ff_envelope, i32, i16* }
%struct.ff_envelope = type { i16, i16, i16, i16 }
%struct.input_dev_poller = type opaque
%struct.timer_list = type { %struct.hlist_node, i64, void (%struct.timer_list*)*, i32 }
%struct.input_mt = type { i32, i32, i32, i32, i32, i32*, [0 x %struct.input_mt_slot] }
%struct.input_mt_slot = type { [14 x i32], i32, i32 }
%struct.input_absinfo = type { i32, i32, i32, i32, i32, i32 }
%struct.input_handle = type { i8*, i32, i8*, %struct.input_dev*, %struct.input_handler*, %struct.list_head, %struct.list_head }
%struct.input_handler = type { i8*, void (%struct.input_handle*, i32, i32, i32)*, void (%struct.input_handle*, %struct.input_value*, i32)*, i1 (%struct.input_handle*, i32, i32, i32)*, i1 (%struct.input_handler*, %struct.input_dev*)*, i32 (%struct.input_handler*, %struct.input_dev*, %struct.input_device_id*)*, void (%struct.input_handle*)*, void (%struct.input_handle*)*, i8, i32, i8*, %struct.input_device_id*, %struct.list_head, %struct.list_head }
%struct.input_device_id = type { i64, i16, i16, i16, i16, [1 x i64], [12 x i64], [1 x i64], [1 x i64], [1 x i64], [1 x i64], [1 x i64], [2 x i64], [1 x i64], [1 x i64], i64 }
%struct.device = type { %struct.kobject, %struct.device*, %struct.device_private*, i8*, %struct.device_type*, %struct.bus_type*, %struct.device_driver*, i8*, i8*, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, %struct.dev_pm_domain*, %struct.irq_domain*, %struct.list_head, %struct.dma_map_ops*, i64*, i64, i64, %struct.bus_dma_region*, %struct.device_dma_parameters*, %struct.list_head, %struct.dev_archdata, %struct.device_node*, %struct.fwnode_handle*, i32, i32, %struct.spinlock, %struct.list_head, %struct.class*, %struct.attribute_group**, void (%struct.device*)*, %struct.iommu_group*, %struct.dev_iommu*, i8 }
%struct.kobject = type { i8*, %struct.list_head, %struct.kobject*, %struct.kset*, %struct.kobj_type*, %struct.kernfs_node*, %struct.kref, i8 }
%struct.kset = type { %struct.list_head, %struct.spinlock, %struct.kobject, %struct.kset_uevent_ops* }
%struct.kset_uevent_ops = type { i32 (%struct.kset*, %struct.kobject*)*, i8* (%struct.kset*, %struct.kobject*)*, i32 (%struct.kset*, %struct.kobject*, %struct.kobj_uevent_env*)* }
%struct.kobj_uevent_env = type { [3 x i8*], [64 x i8*], i32, [2048 x i8], i32 }
%struct.kobj_type = type { void (%struct.kobject*)*, %struct.sysfs_ops*, %struct.attribute**, %struct.attribute_group**, %struct.kobj_ns_type_operations* (%struct.kobject*)*, i8* (%struct.kobject*)*, void (%struct.kobject*, %struct.kuid_t*, %struct.kgid_t*)* }
%struct.sysfs_ops = type { i64 (%struct.kobject*, %struct.attribute*, i8*)*, i64 (%struct.kobject*, %struct.attribute*, i8*, i64)* }
%struct.attribute = type { i8*, i16 }
%struct.kobj_ns_type_operations = type { i32, i1 ()*, i8* ()*, i8* (%struct.sock*)*, i8* ()*, void (i8*)* }
%struct.sock = type opaque
%struct.kernfs_node = type { %struct.atomic_t, %struct.atomic_t, %struct.kernfs_node*, i8*, %struct.rb_node, i8*, i32, %union.anon.64, i8*, i64, i16, i16, %struct.kernfs_iattrs* }
%union.anon.64 = type { %struct.kernfs_elem_attr }
%struct.kernfs_elem_attr = type { %struct.kernfs_ops*, %struct.kernfs_open_node*, i64, %struct.kernfs_node* }
%struct.kernfs_ops = type { i32 (%struct.kernfs_open_file*)*, void (%struct.kernfs_open_file*)*, i32 (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i64*)*, i8* (%struct.seq_file*, i8*, i64*)*, void (%struct.seq_file*, i8*)*, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i64, i8, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i32 (%struct.kernfs_open_file*, %struct.poll_table_struct*)*, i32 (%struct.kernfs_open_file*, %struct.vm_area_struct*)* }
%struct.kernfs_open_file = type { %struct.kernfs_node*, %struct.file*, %struct.seq_file*, i8*, %struct.mutex, %struct.mutex, i32, %struct.list_head, i8*, i64, i8, %struct.vm_operations_struct* }
%struct.kernfs_open_node = type opaque
%struct.kernfs_iattrs = type opaque
%struct.kref = type { %struct.refcount_struct }
%struct.device_private = type opaque
%struct.device_type = type { i8*, %struct.attribute_group**, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*, %struct.kuid_t*, %struct.kgid_t*)*, void (%struct.device*)*, %struct.dev_pm_ops* }
%struct.dev_pm_ops = type { i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)* }
%struct.bus_type = type { i8*, i8*, %struct.device*, %struct.attribute_group**, %struct.attribute_group**, %struct.attribute_group**, i32 (%struct.device*, %struct.device_driver*)*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, %struct.dev_pm_ops*, %struct.iommu_ops*, %struct.subsys_private*, %struct.lock_class_key, i8 }
%struct.iommu_ops = type opaque
%struct.subsys_private = type opaque
%struct.device_driver = type { i8*, %struct.bus_type*, %struct.module*, i8*, i8, i32, %struct.of_device_id*, %struct.acpi_device_id*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, %struct.attribute_group**, %struct.attribute_group**, %struct.dev_pm_ops*, void (%struct.device*)*, %struct.driver_private* }
%struct.of_device_id = type { [32 x i8], [32 x i8], [128 x i8], i8* }
%struct.acpi_device_id = type { [9 x i8], i64, i32, i32 }
%struct.driver_private = type opaque
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, i8, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, %struct.wakeup_source*, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, %struct.wake_irq*, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i64, i64, i64, i64, %struct.pm_subsys_data*, void (%struct.device*, i32)*, %struct.dev_pm_qos* }
%struct.pm_message = type { i32 }
%struct.wakeup_source = type { i8*, i32, %struct.list_head, %struct.spinlock, %struct.wake_irq*, %struct.timer_list, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.device*, i8 }
%struct.wake_irq = type opaque
%struct.pm_subsys_data = type { %struct.spinlock, i32, %struct.list_head, %struct.pm_domain_data* }
%struct.pm_domain_data = type opaque
%struct.dev_pm_qos = type opaque
%struct.dev_pm_domain = type { %struct.dev_pm_ops, i32 (%struct.device*)*, void (%struct.device*, i1)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)* }
%struct.irq_domain = type opaque
%struct.dma_map_ops = type opaque
%struct.bus_dma_region = type opaque
%struct.device_dma_parameters = type { i32, i64 }
%struct.dev_archdata = type {}
%struct.device_node = type opaque
%struct.fwnode_handle = type opaque
%struct.class = type { i8*, %struct.module*, %struct.attribute_group**, %struct.attribute_group**, %struct.kobject*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*)*, void (%struct.class*)*, void (%struct.device*)*, i32 (%struct.device*)*, %struct.kobj_ns_type_operations*, i8* (%struct.device*)*, void (%struct.device*, %struct.kuid_t*, %struct.kgid_t*)*, %struct.dev_pm_ops*, %struct.subsys_private* }
%struct.attribute_group = type { i8*, i16 (%struct.kobject*, %struct.attribute*, i32)*, i16 (%struct.kobject*, %struct.bin_attribute*, i32)*, %struct.attribute**, %struct.bin_attribute** }
%struct.bin_attribute = type { %struct.attribute, i64, i8*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i32 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, %struct.vm_area_struct*)* }
%struct.iommu_group = type opaque
%struct.dev_iommu = type opaque
%struct.input_value = type { i16, i16, i32 }
%struct.ps2dev = type { %struct.serio*, %struct.mutex, %struct.wait_queue_head, i64, [8 x i8], i8, i8 }
%struct.serio = type { i8*, [32 x i8], [32 x i8], [128 x i8], i8, %struct.serio_device_id, %struct.spinlock, i32 (%struct.serio*, i8)*, i32 (%struct.serio*)*, void (%struct.serio*)*, i32 (%struct.serio*)*, void (%struct.serio*)*, %struct.serio*, %struct.list_head, %struct.list_head, i32, %struct.serio_driver*, %struct.mutex, %struct.device, %struct.list_head, %struct.mutex* }
%struct.serio_device_id = type { i8, i8, i8, i8 }
%struct.serio_driver = type { i8*, %struct.serio_device_id*, i8, void (%struct.serio*)*, i32 (%struct.serio*, i8, i32)*, i32 (%struct.serio*, %struct.serio_driver*)*, i32 (%struct.serio*)*, i32 (%struct.serio*)*, void (%struct.serio*)*, void (%struct.serio*)*, %struct.device_driver }
%struct.delayed_work = type { %struct.work_struct, %struct.timer_list, %struct.workqueue_struct*, i32 }
%struct.psmouse_protocol = type { i32, i8, i8, i8, i8, i8*, i8*, i32 (%struct.psmouse*, i1)*, {}* }
%struct.alps_data = type { %struct.psmouse*, %struct.input_dev*, %struct.input_dev*, [32 x i8], [32 x i8], %struct.delayed_work, %struct.alps_nibble_commands*, i32, i16, i8, i8, [3 x i8], [3 x i8], i32, i32, i32, i32, i32, i32, i32, i32 (%struct.psmouse*)*, void (%struct.psmouse*)*, i32 (%struct.alps_fields*, i8*, %struct.psmouse*)*, void (%struct.alps_data*, %struct.input_dev*)*, i32, i32, i32, [6 x i8], %struct.alps_fields, i8, %struct.timer_list }
%struct.alps_fields = type { i32, i32, i32, i32, %struct.input_mt_pos, [4 x %struct.input_mt_pos], i8 }
%struct.input_mt_pos = type { i16, i16 }
%struct.alps_bitmap_point = type { i32, i32 }

@.str = private unnamed_addr constant [44 x i8] c"alps: failed to allocate trackstick device\0A\00", align 1
@.str.1 = private unnamed_addr constant [10 x i8] c"%s/input1\00", align 1
@.str.2 = private unnamed_addr constant [30 x i8] c"AlpsPS/2 ALPS DualPoint Stick\00", align 1
@.str.3 = private unnamed_addr constant [48 x i8] c"alps: failed to register trackstick device: %d\0A\00", align 1
@.str.4 = private unnamed_addr constant [5 x i8] c"ALPS\00", align 1
@.str.5 = private unnamed_addr constant [19 x i8] c"DualPoint TouchPad\00", align 1
@.str.6 = private unnamed_addr constant [11 x i8] c"GlidePoint\00", align 1
@alps_mutex = internal global %struct.mutex { %struct.atomic64_t zeroinitializer, %struct.spinlock undef, %struct.list_head { %struct.list_head* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.mutex* @alps_mutex to i8*), i64 8) to %struct.list_head*), %struct.list_head* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.mutex* @alps_mutex to i8*), i64 8) to %struct.list_head*) } }, align 8, !dbg !0
@.str.7 = private unnamed_addr constant [43 x i8] c"alps: failed to allocate secondary device\0A\00", align 1
@.str.8 = private unnamed_addr constant [6 x i8] c"%s/%s\00", align 1
@.str.9 = private unnamed_addr constant [7 x i8] c"input2\00", align 1
@.str.10 = private unnamed_addr constant [7 x i8] c"input1\00", align 1
@.str.11 = private unnamed_addr constant [16 x i8] c"PS/2 ALPS Mouse\00", align 1
@.str.12 = private unnamed_addr constant [47 x i8] c"alps: failed to register secondary device: %d\0A\00", align 1
@jiffies = external dso_local global i64, align 8
@alps_v4_protocol_data = internal constant %struct.alps_protocol_info { i16 1024, i8 -113, i8 -113, i32 0 }, align 4, !dbg !4097
@alps_v5_protocol_data = internal constant %struct.alps_protocol_info { i16 1280, i8 -56, i8 -40, i32 0 }, align 4, !dbg !4100
@alps_v7_protocol_data = internal constant %struct.alps_protocol_info { i16 1792, i8 72, i8 72, i32 1026 }, align 4, !dbg !4102
@alps_v3_rushmore_data = internal constant %struct.alps_protocol_info { i16 784, i8 -113, i8 -113, i32 1026 }, align 4, !dbg !4104
@alps_v3_protocol_data = internal constant %struct.alps_protocol_info { i16 768, i8 -113, i8 -113, i32 1026 }, align 4, !dbg !4106
@alps_v8_protocol_data = internal constant %struct.alps_protocol_info { i16 2048, i8 24, i8 24, i32 0 }, align 4, !dbg !4108
@alps_v9_protocol_data = internal constant %struct.alps_protocol_info { i16 2304, i8 -56, i8 -56, i32 0 }, align 4, !dbg !4110
@.str.13 = private unnamed_addr constant [54 x i8] c"alps: Unsupported ALPS V9 touchpad: E7=%3ph, EC=%3ph\0A\00", align 1
@alps_model_data = internal constant [22 x %struct.alps_model_info] [%struct.alps_model_info { [3 x i8] c" \02\0E", %struct.alps_protocol_info { i16 512, i8 -8, i8 -8, i32 6 } }, %struct.alps_model_info { [3 x i8] c"\22\02\0A", %struct.alps_protocol_info { i16 512, i8 -8, i8 -8, i32 6 } }, %struct.alps_model_info { [3 x i8] c"\22\02\14", %struct.alps_protocol_info { i16 512, i8 -1, i8 -1, i32 6 } }, %struct.alps_model_info { [3 x i8] c"2\02\14", %struct.alps_protocol_info { i16 512, i8 -8, i8 -8, i32 6 } }, %struct.alps_model_info { [3 x i8] c"3\02\0A", %struct.alps_protocol_info { i16 256, i8 -120, i8 -8, i32 0 } }, %struct.alps_model_info { [3 x i8] c"R\01\14", %struct.alps_protocol_info { i16 512, i8 -1, i8 -1, i32 134 } }, %struct.alps_model_info { [3 x i8] c"S\02\0A", %struct.alps_protocol_info { i16 512, i8 -8, i8 -8, i32 0 } }, %struct.alps_model_info { [3 x i8] c"S\02\14", %struct.alps_protocol_info { i16 512, i8 -8, i8 -8, i32 0 } }, %struct.alps_model_info { [3 x i8] c"`\03\C8", %struct.alps_protocol_info { i16 512, i8 -8, i8 -8, i32 0 } }, %struct.alps_model_info { [3 x i8] c"b\02\14", %struct.alps_protocol_info { i16 512, i8 -49, i8 -49, i32 134 } }, %struct.alps_model_info { [3 x i8] c"c\02\0A", %struct.alps_protocol_info { i16 512, i8 -8, i8 -8, i32 0 } }, %struct.alps_model_info { [3 x i8] c"c\02\14", %struct.alps_protocol_info { i16 512, i8 -8, i8 -8, i32 0 } }, %struct.alps_model_info { [3 x i8] c"c\02(", %struct.alps_protocol_info { i16 512, i8 -8, i8 -8, i32 32 } }, %struct.alps_model_info { [3 x i8] c"c\02<", %struct.alps_protocol_info { i16 512, i8 -113, i8 -113, i32 8 } }, %struct.alps_model_info { [3 x i8] c"c\02P", %struct.alps_protocol_info { i16 512, i8 -17, i8 -17, i32 16 } }, %struct.alps_model_info { [3 x i8] c"c\02d", %struct.alps_protocol_info { i16 512, i8 -8, i8 -8, i32 0 } }, %struct.alps_model_info { [3 x i8] c"c\03\C8", %struct.alps_protocol_info { i16 512, i8 -8, i8 -8, i32 6 } }, %struct.alps_model_info { [3 x i8] c"s\00\0A", %struct.alps_protocol_info { i16 512, i8 -8, i8 -8, i32 2 } }, %struct.alps_model_info { [3 x i8] c"s\00\14", %struct.alps_protocol_info { i16 1536, i8 -1, i8 -1, i32 2 } }, %struct.alps_model_info { [3 x i8] c"s\02\0A", %struct.alps_protocol_info { i16 512, i8 -8, i8 -8, i32 0 } }, %struct.alps_model_info { [3 x i8] c"s\02\14", %struct.alps_protocol_info { i16 512, i8 -8, i8 -8, i32 32 } }, %struct.alps_model_info { [3 x i8] c"s\02P", %struct.alps_protocol_info { i16 512, i8 -49, i8 -49, i32 64 } }], align 16, !dbg !4081
@alps_v3_nibble_commands = internal constant [16 x %struct.alps_nibble_commands] [%struct.alps_nibble_commands { i32 240, i8 0 }, %struct.alps_nibble_commands { i32 246, i8 0 }, %struct.alps_nibble_commands { i32 231, i8 0 }, %struct.alps_nibble_commands { i32 4339, i8 10 }, %struct.alps_nibble_commands { i32 4339, i8 20 }, %struct.alps_nibble_commands { i32 4339, i8 40 }, %struct.alps_nibble_commands { i32 4339, i8 60 }, %struct.alps_nibble_commands { i32 4339, i8 80 }, %struct.alps_nibble_commands { i32 4339, i8 100 }, %struct.alps_nibble_commands { i32 4339, i8 -56 }, %struct.alps_nibble_commands { i32 498, i8 0 }, %struct.alps_nibble_commands { i32 4328, i8 0 }, %struct.alps_nibble_commands { i32 4328, i8 1 }, %struct.alps_nibble_commands { i32 4328, i8 2 }, %struct.alps_nibble_commands { i32 4328, i8 3 }, %struct.alps_nibble_commands { i32 230, i8 0 }], align 16, !dbg !4137
@alps_v4_nibble_commands = internal constant [16 x %struct.alps_nibble_commands] [%struct.alps_nibble_commands { i32 244, i8 0 }, %struct.alps_nibble_commands { i32 246, i8 0 }, %struct.alps_nibble_commands { i32 231, i8 0 }, %struct.alps_nibble_commands { i32 4339, i8 10 }, %struct.alps_nibble_commands { i32 4339, i8 20 }, %struct.alps_nibble_commands { i32 4339, i8 40 }, %struct.alps_nibble_commands { i32 4339, i8 60 }, %struct.alps_nibble_commands { i32 4339, i8 80 }, %struct.alps_nibble_commands { i32 4339, i8 100 }, %struct.alps_nibble_commands { i32 4339, i8 -56 }, %struct.alps_nibble_commands { i32 498, i8 0 }, %struct.alps_nibble_commands { i32 4328, i8 0 }, %struct.alps_nibble_commands { i32 4328, i8 1 }, %struct.alps_nibble_commands { i32 4328, i8 2 }, %struct.alps_nibble_commands { i32 4328, i8 3 }, %struct.alps_nibble_commands { i32 230, i8 0 }], align 16, !dbg !4140
@alps_v6_nibble_commands = internal constant [16 x %struct.alps_nibble_commands] [%struct.alps_nibble_commands { i32 244, i8 0 }, %struct.alps_nibble_commands { i32 4339, i8 10 }, %struct.alps_nibble_commands { i32 4339, i8 20 }, %struct.alps_nibble_commands { i32 4339, i8 40 }, %struct.alps_nibble_commands { i32 4339, i8 60 }, %struct.alps_nibble_commands { i32 4339, i8 80 }, %struct.alps_nibble_commands { i32 4339, i8 100 }, %struct.alps_nibble_commands { i32 4339, i8 -56 }, %struct.alps_nibble_commands { i32 754, i8 0 }, %struct.alps_nibble_commands { i32 1001, i8 0 }, %struct.alps_nibble_commands { i32 4328, i8 0 }, %struct.alps_nibble_commands { i32 4328, i8 1 }, %struct.alps_nibble_commands { i32 4328, i8 2 }, %struct.alps_nibble_commands { i32 4328, i8 3 }, %struct.alps_nibble_commands { i32 231, i8 0 }, %struct.alps_nibble_commands { i32 230, i8 0 }], align 16, !dbg !4142
@pv_ops = external dso_local global %struct.paravirt_patch_template, align 8
@.str.14 = private unnamed_addr constant [41 x i8] c"alps: Failed to enable hardware tapping\0A\00", align 1
@.str.15 = private unnamed_addr constant [38 x i8] c"alps: Failed to enable absolute mode\0A\00", align 1
@.str.16 = private unnamed_addr constant [36 x i8] c"alps: Failed to enable stream mode\0A\00", align 1
@alps_dmi_has_separate_stick_buttons = internal constant [5 x { i32 (%struct.dmi_system_id*)*, i8*, [4 x %struct.dmi_strmatch], i8* }] [{ i32 (%struct.dmi_system_id*)*, i8*, [4 x %struct.dmi_strmatch], i8* } { i32 (%struct.dmi_system_id*)* null, i8* null, [4 x %struct.dmi_strmatch] [%struct.dmi_strmatch { i8 6, [79 x i8] c"Dell Inc.\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.dmi_strmatch { i8 7, [79 x i8] c"Latitude D420\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.dmi_strmatch zeroinitializer, %struct.dmi_strmatch zeroinitializer], i8* null }, { i32 (%struct.dmi_system_id*)*, i8*, [4 x %struct.dmi_strmatch], i8* } { i32 (%struct.dmi_system_id*)* null, i8* null, [4 x %struct.dmi_strmatch] [%struct.dmi_strmatch { i8 6, [79 x i8] c"Dell Inc.\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.dmi_strmatch { i8 7, [79 x i8] c"Latitude D430\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.dmi_strmatch zeroinitializer, %struct.dmi_strmatch zeroinitializer], i8* null }, { i32 (%struct.dmi_system_id*)*, i8*, [4 x %struct.dmi_strmatch], i8* } { i32 (%struct.dmi_system_id*)* null, i8* null, [4 x %struct.dmi_strmatch] [%struct.dmi_strmatch { i8 6, [79 x i8] c"Dell Inc.\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.dmi_strmatch { i8 7, [79 x i8] c"Latitude D620\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.dmi_strmatch zeroinitializer, %struct.dmi_strmatch zeroinitializer], i8* null }, { i32 (%struct.dmi_system_id*)*, i8*, [4 x %struct.dmi_strmatch], i8* } { i32 (%struct.dmi_system_id*)* null, i8* null, [4 x %struct.dmi_strmatch] [%struct.dmi_strmatch { i8 6, [79 x i8] c"Dell Inc.\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.dmi_strmatch { i8 7, [79 x i8] c"Latitude D630\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.dmi_strmatch zeroinitializer, %struct.dmi_strmatch zeroinitializer], i8* null }, { i32 (%struct.dmi_system_id*)*, i8*, [4 x %struct.dmi_strmatch], i8* } zeroinitializer], align 16, !dbg !4112
@.str.18 = private unnamed_addr constant [37 x i8] c"alps: Failed to enter absolute mode\0A\00", align 1
@.str.19 = private unnamed_addr constant [39 x i8] c"alps: Failed to enable data reporting\0A\00", align 1
@.str.20 = private unnamed_addr constant [58 x i8] c"alps: Failed to initialize trackstick (E7 report failed)\0A\00", align 1
@.str.21 = private unnamed_addr constant [53 x i8] c"alps: Failed to enter into trackstick extended mode\0A\00", align 1
@__const.alps_trackstick_enter_extended_mode_v3_v6.param = private unnamed_addr constant [2 x i8] c"\C8\14", align 1
@.str.22 = private unnamed_addr constant [36 x i8] c"alps: failed to enter command mode\0A\00", align 1
@.str.23 = private unnamed_addr constant [27 x i8] c"drivers/input/mouse/alps.c\00", align 1
@.str.24 = private unnamed_addr constant [59 x i8] c"alps: Rejected trackstick packet from non DualPoint device\00", align 1
@__const.alps_hw_init_ss4_v2.param = private unnamed_addr constant [2 x i8] c"d(", align 1
@kmalloc_caches = external dso_local global [3 x [14 x %struct.kmem_cache*]], align 16
@.str.25 = private unnamed_addr constant [21 x i8] c"include/linux/slab.h\00", align 1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @alps_init(%struct.psmouse* %psmouse) #0 !dbg !4150 {
entry:
  %retval = alloca i32, align 4
  %psmouse.addr = alloca %struct.psmouse*, align 8
  %priv = alloca %struct.alps_data*, align 8
  %dev1 = alloca %struct.input_dev*, align 8
  %error = alloca i32, align 4
  %dev2 = alloca %struct.input_dev*, align 8
  %.compoundliteral = alloca %struct.atomic64_t, align 8
  store %struct.psmouse* %psmouse, %struct.psmouse** %psmouse.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.psmouse** %psmouse.addr, metadata !4151, metadata !DIExpression()), !dbg !4152
  call void @llvm.dbg.declare(metadata %struct.alps_data** %priv, metadata !4153, metadata !DIExpression()), !dbg !4154
  %0 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !4155
  %private = getelementptr inbounds %struct.psmouse, %struct.psmouse* %0, i32 0, i32 0, !dbg !4156
  %1 = load i8*, i8** %private, align 8, !dbg !4156
  %2 = bitcast i8* %1 to %struct.alps_data*, !dbg !4155
  store %struct.alps_data* %2, %struct.alps_data** %priv, align 8, !dbg !4154
  call void @llvm.dbg.declare(metadata %struct.input_dev** %dev1, metadata !4157, metadata !DIExpression()), !dbg !4158
  %3 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !4159
  %dev = getelementptr inbounds %struct.psmouse, %struct.psmouse* %3, i32 0, i32 1, !dbg !4160
  %4 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !4160
  store %struct.input_dev* %4, %struct.input_dev** %dev1, align 8, !dbg !4158
  call void @llvm.dbg.declare(metadata i32* %error, metadata !4161, metadata !DIExpression()), !dbg !4162
  %5 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !4163
  %hw_init = getelementptr inbounds %struct.alps_data, %struct.alps_data* %5, i32 0, i32 20, !dbg !4164
  %6 = load i32 (%struct.psmouse*)*, i32 (%struct.psmouse*)** %hw_init, align 8, !dbg !4164
  %7 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !4165
  %call = call i32 %6(%struct.psmouse* %7) #10, !dbg !4163
  store i32 %call, i32* %error, align 4, !dbg !4166
  %8 = load i32, i32* %error, align 4, !dbg !4167
  %tobool = icmp ne i32 %8, 0, !dbg !4167
  br i1 %tobool, label %if.then, label %if.end, !dbg !4169

if.then:                                          ; preds = %entry
  br label %init_fail, !dbg !4170

if.end:                                           ; preds = %entry
  %9 = load %struct.input_dev*, %struct.input_dev** %dev1, align 8, !dbg !4171
  %evbit = getelementptr inbounds %struct.input_dev, %struct.input_dev* %9, i32 0, i32 5, !dbg !4172
  %arraydecay = getelementptr inbounds [1 x i64], [1 x i64]* %evbit, i64 0, i64 0, !dbg !4171
  call void @__clear_bit(i64 2, i64* %arraydecay) #10, !dbg !4173
  %10 = load %struct.input_dev*, %struct.input_dev** %dev1, align 8, !dbg !4174
  %relbit = getelementptr inbounds %struct.input_dev, %struct.input_dev* %10, i32 0, i32 7, !dbg !4175
  %arraydecay1 = getelementptr inbounds [1 x i64], [1 x i64]* %relbit, i64 0, i64 0, !dbg !4174
  call void @__clear_bit(i64 0, i64* %arraydecay1) #10, !dbg !4176
  %11 = load %struct.input_dev*, %struct.input_dev** %dev1, align 8, !dbg !4177
  %relbit2 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %11, i32 0, i32 7, !dbg !4178
  %arraydecay3 = getelementptr inbounds [1 x i64], [1 x i64]* %relbit2, i64 0, i64 0, !dbg !4177
  call void @__clear_bit(i64 1, i64* %arraydecay3) #10, !dbg !4179
  %12 = load %struct.input_dev*, %struct.input_dev** %dev1, align 8, !dbg !4180
  %evbit4 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %12, i32 0, i32 5, !dbg !4181
  %arrayidx = getelementptr [1 x i64], [1 x i64]* %evbit4, i64 0, i64 0, !dbg !4180
  %13 = load i64, i64* %arrayidx, align 8, !dbg !4182
  %or = or i64 %13, 2, !dbg !4182
  store i64 %or, i64* %arrayidx, align 8, !dbg !4182
  %14 = load %struct.input_dev*, %struct.input_dev** %dev1, align 8, !dbg !4183
  %keybit = getelementptr inbounds %struct.input_dev, %struct.input_dev* %14, i32 0, i32 6, !dbg !4184
  %arrayidx5 = getelementptr [12 x i64], [12 x i64]* %keybit, i64 0, i64 5, !dbg !4183
  %15 = load i64, i64* %arrayidx5, align 8, !dbg !4185
  %or6 = or i64 %15, 1024, !dbg !4185
  store i64 %or6, i64* %arrayidx5, align 8, !dbg !4185
  %16 = load %struct.input_dev*, %struct.input_dev** %dev1, align 8, !dbg !4186
  %keybit7 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %16, i32 0, i32 6, !dbg !4187
  %arrayidx8 = getelementptr [12 x i64], [12 x i64]* %keybit7, i64 0, i64 5, !dbg !4186
  %17 = load i64, i64* %arrayidx8, align 8, !dbg !4188
  %or9 = or i64 %17, 32, !dbg !4188
  store i64 %or9, i64* %arrayidx8, align 8, !dbg !4188
  %18 = load %struct.input_dev*, %struct.input_dev** %dev1, align 8, !dbg !4189
  %keybit10 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %18, i32 0, i32 6, !dbg !4190
  %arrayidx11 = getelementptr [12 x i64], [12 x i64]* %keybit10, i64 0, i64 4, !dbg !4189
  %19 = load i64, i64* %arrayidx11, align 8, !dbg !4191
  %or12 = or i64 %19, 196608, !dbg !4191
  store i64 %or12, i64* %arrayidx11, align 8, !dbg !4191
  %20 = load %struct.input_dev*, %struct.input_dev** %dev1, align 8, !dbg !4192
  %evbit13 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %20, i32 0, i32 5, !dbg !4193
  %arrayidx14 = getelementptr [1 x i64], [1 x i64]* %evbit13, i64 0, i64 0, !dbg !4192
  %21 = load i64, i64* %arrayidx14, align 8, !dbg !4194
  %or15 = or i64 %21, 8, !dbg !4194
  store i64 %or15, i64* %arrayidx14, align 8, !dbg !4194
  %22 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !4195
  %set_abs_params = getelementptr inbounds %struct.alps_data, %struct.alps_data* %22, i32 0, i32 23, !dbg !4196
  %23 = load void (%struct.alps_data*, %struct.input_dev*)*, void (%struct.alps_data*, %struct.input_dev*)** %set_abs_params, align 8, !dbg !4196
  %24 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !4197
  %25 = load %struct.input_dev*, %struct.input_dev** %dev1, align 8, !dbg !4198
  call void %23(%struct.alps_data* %24, %struct.input_dev* %25) #10, !dbg !4195
  %26 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !4199
  %flags = getelementptr inbounds %struct.alps_data, %struct.alps_data* %26, i32 0, i32 13, !dbg !4201
  %27 = load i32, i32* %flags, align 8, !dbg !4201
  %and = and i32 %27, 8, !dbg !4202
  %tobool16 = icmp ne i32 %and, 0, !dbg !4202
  br i1 %tobool16, label %if.then17, label %if.end24, !dbg !4203

if.then17:                                        ; preds = %if.end
  %28 = load %struct.input_dev*, %struct.input_dev** %dev1, align 8, !dbg !4204
  %evbit18 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %28, i32 0, i32 5, !dbg !4206
  %arrayidx19 = getelementptr [1 x i64], [1 x i64]* %evbit18, i64 0, i64 0, !dbg !4204
  %29 = load i64, i64* %arrayidx19, align 8, !dbg !4207
  %or20 = or i64 %29, 4, !dbg !4207
  store i64 %or20, i64* %arrayidx19, align 8, !dbg !4207
  %30 = load %struct.input_dev*, %struct.input_dev** %dev1, align 8, !dbg !4208
  %relbit21 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %30, i32 0, i32 7, !dbg !4209
  %arrayidx22 = getelementptr [1 x i64], [1 x i64]* %relbit21, i64 0, i64 0, !dbg !4208
  %31 = load i64, i64* %arrayidx22, align 8, !dbg !4210
  %or23 = or i64 %31, 256, !dbg !4210
  store i64 %or23, i64* %arrayidx22, align 8, !dbg !4210
  br label %if.end24, !dbg !4211

if.end24:                                         ; preds = %if.then17, %if.end
  %32 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !4212
  %flags25 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %32, i32 0, i32 13, !dbg !4214
  %33 = load i32, i32* %flags25, align 8, !dbg !4214
  %and26 = and i32 %33, 48, !dbg !4215
  %tobool27 = icmp ne i32 %and26, 0, !dbg !4215
  br i1 %tobool27, label %if.then28, label %if.end35, !dbg !4216

if.then28:                                        ; preds = %if.end24
  %34 = load %struct.input_dev*, %struct.input_dev** %dev1, align 8, !dbg !4217
  %keybit29 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %34, i32 0, i32 6, !dbg !4219
  %arrayidx30 = getelementptr [12 x i64], [12 x i64]* %keybit29, i64 0, i64 4, !dbg !4217
  %35 = load i64, i64* %arrayidx30, align 8, !dbg !4220
  %or31 = or i64 %35, 2097152, !dbg !4220
  store i64 %or31, i64* %arrayidx30, align 8, !dbg !4220
  %36 = load %struct.input_dev*, %struct.input_dev** %dev1, align 8, !dbg !4221
  %keybit32 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %36, i32 0, i32 6, !dbg !4222
  %arrayidx33 = getelementptr [12 x i64], [12 x i64]* %keybit32, i64 0, i64 4, !dbg !4221
  %37 = load i64, i64* %arrayidx33, align 8, !dbg !4223
  %or34 = or i64 %37, 4194304, !dbg !4223
  store i64 %or34, i64* %arrayidx33, align 8, !dbg !4223
  br label %if.end35, !dbg !4224

if.end35:                                         ; preds = %if.then28, %if.end24
  %38 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !4225
  %flags36 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %38, i32 0, i32 13, !dbg !4227
  %39 = load i32, i32* %flags36, align 8, !dbg !4227
  %and37 = and i32 %39, 64, !dbg !4228
  %tobool38 = icmp ne i32 %and37, 0, !dbg !4228
  br i1 %tobool38, label %if.then39, label %if.else, !dbg !4229

if.then39:                                        ; preds = %if.end35
  %40 = load %struct.input_dev*, %struct.input_dev** %dev1, align 8, !dbg !4230
  %keybit40 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %40, i32 0, i32 6, !dbg !4232
  %arrayidx41 = getelementptr [12 x i64], [12 x i64]* %keybit40, i64 0, i64 4, !dbg !4230
  %41 = load i64, i64* %arrayidx41, align 8, !dbg !4233
  %or42 = or i64 %41, 1, !dbg !4233
  store i64 %or42, i64* %arrayidx41, align 8, !dbg !4233
  %42 = load %struct.input_dev*, %struct.input_dev** %dev1, align 8, !dbg !4234
  %keybit43 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %42, i32 0, i32 6, !dbg !4235
  %arrayidx44 = getelementptr [12 x i64], [12 x i64]* %keybit43, i64 0, i64 4, !dbg !4234
  %43 = load i64, i64* %arrayidx44, align 8, !dbg !4236
  %or45 = or i64 %43, 2, !dbg !4236
  store i64 %or45, i64* %arrayidx44, align 8, !dbg !4236
  %44 = load %struct.input_dev*, %struct.input_dev** %dev1, align 8, !dbg !4237
  %keybit46 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %44, i32 0, i32 6, !dbg !4238
  %arrayidx47 = getelementptr [12 x i64], [12 x i64]* %keybit46, i64 0, i64 4, !dbg !4237
  %45 = load i64, i64* %arrayidx47, align 8, !dbg !4239
  %or48 = or i64 %45, 4, !dbg !4239
  store i64 %or48, i64* %arrayidx47, align 8, !dbg !4239
  %46 = load %struct.input_dev*, %struct.input_dev** %dev1, align 8, !dbg !4240
  %keybit49 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %46, i32 0, i32 6, !dbg !4241
  %arrayidx50 = getelementptr [12 x i64], [12 x i64]* %keybit49, i64 0, i64 4, !dbg !4240
  %47 = load i64, i64* %arrayidx50, align 8, !dbg !4242
  %or51 = or i64 %47, 8, !dbg !4242
  store i64 %or51, i64* %arrayidx50, align 8, !dbg !4242
  br label %if.end64, !dbg !4243

if.else:                                          ; preds = %if.end35
  %48 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !4244
  %flags52 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %48, i32 0, i32 13, !dbg !4246
  %49 = load i32, i32* %flags52, align 8, !dbg !4246
  %and53 = and i32 %49, 512, !dbg !4247
  %tobool54 = icmp ne i32 %and53, 0, !dbg !4247
  br i1 %tobool54, label %if.then55, label %if.else59, !dbg !4248

if.then55:                                        ; preds = %if.else
  %50 = load %struct.input_dev*, %struct.input_dev** %dev1, align 8, !dbg !4249
  %propbit = getelementptr inbounds %struct.input_dev, %struct.input_dev* %50, i32 0, i32 4, !dbg !4251
  %arraydecay56 = getelementptr inbounds [1 x i64], [1 x i64]* %propbit, i64 0, i64 0, !dbg !4249
  call void @set_bit(i64 2, i64* %arraydecay56) #10, !dbg !4252
  %51 = load %struct.input_dev*, %struct.input_dev** %dev1, align 8, !dbg !4253
  %keybit57 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %51, i32 0, i32 6, !dbg !4254
  %arraydecay58 = getelementptr inbounds [12 x i64], [12 x i64]* %keybit57, i64 0, i64 0, !dbg !4253
  call void @clear_bit(i64 273, i64* %arraydecay58) #10, !dbg !4255
  br label %if.end63, !dbg !4256

if.else59:                                        ; preds = %if.else
  %52 = load %struct.input_dev*, %struct.input_dev** %dev1, align 8, !dbg !4257
  %keybit60 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %52, i32 0, i32 6, !dbg !4259
  %arrayidx61 = getelementptr [12 x i64], [12 x i64]* %keybit60, i64 0, i64 4, !dbg !4257
  %53 = load i64, i64* %arrayidx61, align 8, !dbg !4260
  %or62 = or i64 %53, 262144, !dbg !4260
  store i64 %or62, i64* %arrayidx61, align 8, !dbg !4260
  br label %if.end63

if.end63:                                         ; preds = %if.else59, %if.then55
  br label %if.end64

if.end64:                                         ; preds = %if.end63, %if.then39
  %54 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !4261
  %flags65 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %54, i32 0, i32 13, !dbg !4263
  %55 = load i32, i32* %flags65, align 8, !dbg !4263
  %and66 = and i32 %55, 2, !dbg !4264
  %tobool67 = icmp ne i32 %and66, 0, !dbg !4264
  br i1 %tobool67, label %if.then68, label %if.end106, !dbg !4265

if.then68:                                        ; preds = %if.end64
  call void @llvm.dbg.declare(metadata %struct.input_dev** %dev2, metadata !4266, metadata !DIExpression()), !dbg !4268
  %call69 = call %struct.input_dev* @input_allocate_device() #10, !dbg !4269
  store %struct.input_dev* %call69, %struct.input_dev** %dev2, align 8, !dbg !4270
  %56 = load %struct.input_dev*, %struct.input_dev** %dev2, align 8, !dbg !4271
  %tobool70 = icmp ne %struct.input_dev* %56, null, !dbg !4271
  br i1 %tobool70, label %if.end73, label %if.then71, !dbg !4273

if.then71:                                        ; preds = %if.then68
  %57 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !4274
  %ps2dev = getelementptr inbounds %struct.psmouse, %struct.psmouse* %57, i32 0, i32 2, !dbg !4274
  %serio = getelementptr inbounds %struct.ps2dev, %struct.ps2dev* %ps2dev, i32 0, i32 0, !dbg !4274
  %58 = load %struct.serio*, %struct.serio** %serio, align 8, !dbg !4274
  %dev72 = getelementptr inbounds %struct.serio, %struct.serio* %58, i32 0, i32 18, !dbg !4274
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev72, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str, i64 0, i64 0)) #11, !dbg !4274
  store i32 -12, i32* %error, align 4, !dbg !4276
  br label %init_fail, !dbg !4277

if.end73:                                         ; preds = %if.then68
  %59 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !4278
  %phys2 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %59, i32 0, i32 3, !dbg !4279
  %arraydecay74 = getelementptr inbounds [32 x i8], [32 x i8]* %phys2, i64 0, i64 0, !dbg !4278
  %60 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !4280
  %ps2dev75 = getelementptr inbounds %struct.psmouse, %struct.psmouse* %60, i32 0, i32 2, !dbg !4281
  %serio76 = getelementptr inbounds %struct.ps2dev, %struct.ps2dev* %ps2dev75, i32 0, i32 0, !dbg !4282
  %61 = load %struct.serio*, %struct.serio** %serio76, align 8, !dbg !4282
  %phys = getelementptr inbounds %struct.serio, %struct.serio* %61, i32 0, i32 2, !dbg !4283
  %arraydecay77 = getelementptr inbounds [32 x i8], [32 x i8]* %phys, i64 0, i64 0, !dbg !4280
  %call78 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %arraydecay74, i64 32, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i64 0, i64 0), i8* %arraydecay77) #10, !dbg !4284
  %62 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !4285
  %phys279 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %62, i32 0, i32 3, !dbg !4286
  %arraydecay80 = getelementptr inbounds [32 x i8], [32 x i8]* %phys279, i64 0, i64 0, !dbg !4285
  %63 = load %struct.input_dev*, %struct.input_dev** %dev2, align 8, !dbg !4287
  %phys81 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %63, i32 0, i32 1, !dbg !4288
  store i8* %arraydecay80, i8** %phys81, align 8, !dbg !4289
  %64 = load %struct.input_dev*, %struct.input_dev** %dev2, align 8, !dbg !4290
  %name = getelementptr inbounds %struct.input_dev, %struct.input_dev* %64, i32 0, i32 0, !dbg !4291
  store i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.2, i64 0, i64 0), i8** %name, align 8, !dbg !4292
  %65 = load %struct.input_dev*, %struct.input_dev** %dev2, align 8, !dbg !4293
  %id = getelementptr inbounds %struct.input_dev, %struct.input_dev* %65, i32 0, i32 3, !dbg !4294
  %bustype = getelementptr inbounds %struct.input_id, %struct.input_id* %id, i32 0, i32 0, !dbg !4295
  store i16 17, i16* %bustype, align 8, !dbg !4296
  %66 = load %struct.input_dev*, %struct.input_dev** %dev2, align 8, !dbg !4297
  %id82 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %66, i32 0, i32 3, !dbg !4298
  %vendor = getelementptr inbounds %struct.input_id, %struct.input_id* %id82, i32 0, i32 1, !dbg !4299
  store i16 2, i16* %vendor, align 2, !dbg !4300
  %67 = load %struct.input_dev*, %struct.input_dev** %dev2, align 8, !dbg !4301
  %id83 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %67, i32 0, i32 3, !dbg !4302
  %product = getelementptr inbounds %struct.input_id, %struct.input_id* %id83, i32 0, i32 2, !dbg !4303
  store i16 8, i16* %product, align 4, !dbg !4304
  %68 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !4305
  %proto_version = getelementptr inbounds %struct.alps_data, %struct.alps_data* %68, i32 0, i32 8, !dbg !4306
  %69 = load i16, i16* %proto_version, align 4, !dbg !4306
  %70 = load %struct.input_dev*, %struct.input_dev** %dev2, align 8, !dbg !4307
  %id84 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %70, i32 0, i32 3, !dbg !4308
  %version = getelementptr inbounds %struct.input_id, %struct.input_id* %id84, i32 0, i32 3, !dbg !4309
  store i16 %69, i16* %version, align 2, !dbg !4310
  %71 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !4311
  %ps2dev85 = getelementptr inbounds %struct.psmouse, %struct.psmouse* %71, i32 0, i32 2, !dbg !4312
  %serio86 = getelementptr inbounds %struct.ps2dev, %struct.ps2dev* %ps2dev85, i32 0, i32 0, !dbg !4313
  %72 = load %struct.serio*, %struct.serio** %serio86, align 8, !dbg !4313
  %dev87 = getelementptr inbounds %struct.serio, %struct.serio* %72, i32 0, i32 18, !dbg !4314
  %73 = load %struct.input_dev*, %struct.input_dev** %dev2, align 8, !dbg !4315
  %dev88 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %73, i32 0, i32 40, !dbg !4316
  %parent = getelementptr inbounds %struct.device, %struct.device* %dev88, i32 0, i32 1, !dbg !4317
  store %struct.device* %dev87, %struct.device** %parent, align 8, !dbg !4318
  %74 = load %struct.input_dev*, %struct.input_dev** %dev2, align 8, !dbg !4319
  call void @input_set_capability(%struct.input_dev* %74, i32 2, i32 0) #10, !dbg !4320
  %75 = load %struct.input_dev*, %struct.input_dev** %dev2, align 8, !dbg !4321
  call void @input_set_capability(%struct.input_dev* %75, i32 2, i32 1) #10, !dbg !4322
  %76 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !4323
  %flags89 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %76, i32 0, i32 13, !dbg !4325
  %77 = load i32, i32* %flags89, align 8, !dbg !4325
  %and90 = and i32 %77, 1024, !dbg !4326
  %tobool91 = icmp ne i32 %and90, 0, !dbg !4326
  br i1 %tobool91, label %if.then92, label %if.end93, !dbg !4327

if.then92:                                        ; preds = %if.end73
  %78 = load %struct.input_dev*, %struct.input_dev** %dev2, align 8, !dbg !4328
  call void @input_set_capability(%struct.input_dev* %78, i32 3, i32 24) #10, !dbg !4330
  %79 = load %struct.input_dev*, %struct.input_dev** %dev2, align 8, !dbg !4331
  call void @input_set_abs_params(%struct.input_dev* %79, i32 24, i32 0, i32 127, i32 0, i32 0) #10, !dbg !4332
  br label %if.end93, !dbg !4333

if.end93:                                         ; preds = %if.then92, %if.end73
  %80 = load %struct.input_dev*, %struct.input_dev** %dev2, align 8, !dbg !4334
  call void @input_set_capability(%struct.input_dev* %80, i32 1, i32 272) #10, !dbg !4335
  %81 = load %struct.input_dev*, %struct.input_dev** %dev2, align 8, !dbg !4336
  call void @input_set_capability(%struct.input_dev* %81, i32 1, i32 273) #10, !dbg !4337
  %82 = load %struct.input_dev*, %struct.input_dev** %dev2, align 8, !dbg !4338
  call void @input_set_capability(%struct.input_dev* %82, i32 1, i32 274) #10, !dbg !4339
  %83 = load %struct.input_dev*, %struct.input_dev** %dev2, align 8, !dbg !4340
  %propbit94 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %83, i32 0, i32 4, !dbg !4341
  %arraydecay95 = getelementptr inbounds [1 x i64], [1 x i64]* %propbit94, i64 0, i64 0, !dbg !4340
  call void @__set_bit(i64 0, i64* %arraydecay95) #10, !dbg !4342
  %84 = load %struct.input_dev*, %struct.input_dev** %dev2, align 8, !dbg !4343
  %propbit96 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %84, i32 0, i32 4, !dbg !4344
  %arraydecay97 = getelementptr inbounds [1 x i64], [1 x i64]* %propbit96, i64 0, i64 0, !dbg !4343
  call void @__set_bit(i64 5, i64* %arraydecay97) #10, !dbg !4345
  %85 = load %struct.input_dev*, %struct.input_dev** %dev2, align 8, !dbg !4346
  %call98 = call i32 @input_register_device(%struct.input_dev* %85) #10, !dbg !4347
  store i32 %call98, i32* %error, align 4, !dbg !4348
  %86 = load i32, i32* %error, align 4, !dbg !4349
  %tobool99 = icmp ne i32 %86, 0, !dbg !4349
  br i1 %tobool99, label %if.then100, label %if.end104, !dbg !4351

if.then100:                                       ; preds = %if.end93
  %87 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !4352
  %ps2dev101 = getelementptr inbounds %struct.psmouse, %struct.psmouse* %87, i32 0, i32 2, !dbg !4352
  %serio102 = getelementptr inbounds %struct.ps2dev, %struct.ps2dev* %ps2dev101, i32 0, i32 0, !dbg !4352
  %88 = load %struct.serio*, %struct.serio** %serio102, align 8, !dbg !4352
  %dev103 = getelementptr inbounds %struct.serio, %struct.serio* %88, i32 0, i32 18, !dbg !4352
  %89 = load i32, i32* %error, align 4, !dbg !4352
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev103, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.3, i64 0, i64 0), i32 %89) #11, !dbg !4352
  %90 = load %struct.input_dev*, %struct.input_dev** %dev2, align 8, !dbg !4354
  call void @input_free_device(%struct.input_dev* %90) #10, !dbg !4355
  br label %init_fail, !dbg !4356

if.end104:                                        ; preds = %if.end93
  %91 = load %struct.input_dev*, %struct.input_dev** %dev2, align 8, !dbg !4357
  %92 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !4358
  %dev2105 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %92, i32 0, i32 1, !dbg !4359
  store %struct.input_dev* %91, %struct.input_dev** %dev2105, align 8, !dbg !4360
  br label %if.end106, !dbg !4361

if.end106:                                        ; preds = %if.end104, %if.end64
  %93 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !4362
  %94 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !4363
  %psmouse107 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %94, i32 0, i32 0, !dbg !4364
  store %struct.psmouse* %93, %struct.psmouse** %psmouse107, align 8, !dbg !4365
  br label %do.body, !dbg !4366

do.body:                                          ; preds = %if.end106
  br label %do.body108, !dbg !4367

do.body108:                                       ; preds = %do.body
  %95 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !4369
  %dev3_register_work = getelementptr inbounds %struct.alps_data, %struct.alps_data* %95, i32 0, i32 5, !dbg !4369
  %work = getelementptr inbounds %struct.delayed_work, %struct.delayed_work* %dev3_register_work, i32 0, i32 0, !dbg !4369
  call void @__init_work(%struct.work_struct* %work, i32 0) #10, !dbg !4369
  %96 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !4369
  %dev3_register_work109 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %96, i32 0, i32 5, !dbg !4369
  %work110 = getelementptr inbounds %struct.delayed_work, %struct.delayed_work* %dev3_register_work109, i32 0, i32 0, !dbg !4369
  %data = getelementptr inbounds %struct.work_struct, %struct.work_struct* %work110, i32 0, i32 0, !dbg !4369
  %counter = getelementptr inbounds %struct.atomic64_t, %struct.atomic64_t* %.compoundliteral, i32 0, i32 0, !dbg !4369
  store i64 68719476704, i64* %counter, align 8, !dbg !4369
  %97 = bitcast %struct.atomic64_t* %data to i8*, !dbg !4369
  %98 = bitcast %struct.atomic64_t* %.compoundliteral to i8*, !dbg !4369
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %97, i8* align 8 %98, i64 8, i1 false), !dbg !4369
  %99 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !4369
  %dev3_register_work111 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %99, i32 0, i32 5, !dbg !4369
  %work112 = getelementptr inbounds %struct.delayed_work, %struct.delayed_work* %dev3_register_work111, i32 0, i32 0, !dbg !4369
  %entry113 = getelementptr inbounds %struct.work_struct, %struct.work_struct* %work112, i32 0, i32 1, !dbg !4369
  call void @INIT_LIST_HEAD(%struct.list_head* %entry113) #10, !dbg !4369
  %100 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !4369
  %dev3_register_work114 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %100, i32 0, i32 5, !dbg !4369
  %work115 = getelementptr inbounds %struct.delayed_work, %struct.delayed_work* %dev3_register_work114, i32 0, i32 0, !dbg !4369
  %func = getelementptr inbounds %struct.work_struct, %struct.work_struct* %work115, i32 0, i32 2, !dbg !4369
  store void (%struct.work_struct*)* @alps_register_bare_ps2_mouse, void (%struct.work_struct*)** %func, align 8, !dbg !4369
  br label %do.end, !dbg !4369

do.end:                                           ; preds = %do.body108
  %101 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !4367
  %dev3_register_work116 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %101, i32 0, i32 5, !dbg !4367
  %timer = getelementptr inbounds %struct.delayed_work, %struct.delayed_work* %dev3_register_work116, i32 0, i32 1, !dbg !4367
  call void @init_timer_key(%struct.timer_list* %timer, void (%struct.timer_list*)* @delayed_work_timer_fn, i32 2097152, i8* null, %struct.lock_class_key* null) #10, !dbg !4367
  br label %do.end117, !dbg !4367

do.end117:                                        ; preds = %do.end
  %102 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !4371
  %protocol_handler = getelementptr inbounds %struct.psmouse, %struct.psmouse* %102, i32 0, i32 26, !dbg !4372
  store i32 (%struct.psmouse*)* @alps_process_byte, i32 (%struct.psmouse*)** %protocol_handler, align 8, !dbg !4373
  %103 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !4374
  %poll = getelementptr inbounds %struct.psmouse, %struct.psmouse* %103, i32 0, i32 34, !dbg !4375
  %poll118 = bitcast {}** %poll to i32 (%struct.psmouse*)**, !dbg !4375
  store i32 (%struct.psmouse*)* @alps_poll, i32 (%struct.psmouse*)** %poll118, align 8, !dbg !4376
  %104 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !4377
  %disconnect = getelementptr inbounds %struct.psmouse, %struct.psmouse* %104, i32 0, i32 32, !dbg !4378
  store void (%struct.psmouse*)* @alps_disconnect, void (%struct.psmouse*)** %disconnect, align 8, !dbg !4379
  %105 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !4380
  %reconnect = getelementptr inbounds %struct.psmouse, %struct.psmouse* %105, i32 0, i32 30, !dbg !4381
  %reconnect119 = bitcast {}** %reconnect to i32 (%struct.psmouse*)**, !dbg !4381
  store i32 (%struct.psmouse*)* @alps_reconnect, i32 (%struct.psmouse*)** %reconnect119, align 8, !dbg !4382
  %106 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !4383
  %proto_version120 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %106, i32 0, i32 8, !dbg !4384
  %107 = load i16, i16* %proto_version120, align 4, !dbg !4384
  %conv = zext i16 %107 to i32, !dbg !4383
  %cmp = icmp eq i32 %conv, 1024, !dbg !4385
  %108 = zext i1 %cmp to i64, !dbg !4383
  %cond = select i1 %cmp, i32 8, i32 6, !dbg !4383
  %conv122 = trunc i32 %cond to i8, !dbg !4383
  %109 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !4386
  %pktsize = getelementptr inbounds %struct.psmouse, %struct.psmouse* %109, i32 0, i32 10, !dbg !4387
  store i8 %conv122, i8* %pktsize, align 2, !dbg !4388
  %110 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !4389
  %resync_time = getelementptr inbounds %struct.psmouse, %struct.psmouse* %110, i32 0, i32 24, !dbg !4390
  store i32 0, i32* %resync_time, align 8, !dbg !4391
  %111 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !4392
  %pktsize123 = getelementptr inbounds %struct.psmouse, %struct.psmouse* %111, i32 0, i32 10, !dbg !4393
  %112 = load i8, i8* %pktsize123, align 2, !dbg !4393
  %conv124 = zext i8 %112 to i32, !dbg !4392
  %mul = mul i32 %conv124, 2, !dbg !4394
  %113 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !4395
  %resetafter = getelementptr inbounds %struct.psmouse, %struct.psmouse* %113, i32 0, i32 23, !dbg !4396
  store i32 %mul, i32* %resetafter, align 4, !dbg !4397
  store i32 0, i32* %retval, align 4, !dbg !4398
  br label %return, !dbg !4398

init_fail:                                        ; preds = %if.then100, %if.then71, %if.then
  call void @llvm.dbg.label(metadata !4399), !dbg !4400
  %114 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !4401
  %call125 = call i32 @psmouse_reset(%struct.psmouse* %114) #10, !dbg !4402
  %115 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !4403
  %private126 = getelementptr inbounds %struct.psmouse, %struct.psmouse* %115, i32 0, i32 0, !dbg !4404
  %116 = load i8*, i8** %private126, align 8, !dbg !4404
  call void @kfree(i8* %116) #10, !dbg !4405
  %117 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !4406
  %private127 = getelementptr inbounds %struct.psmouse, %struct.psmouse* %117, i32 0, i32 0, !dbg !4407
  store i8* null, i8** %private127, align 8, !dbg !4408
  %118 = load i32, i32* %error, align 4, !dbg !4409
  store i32 %118, i32* %retval, align 4, !dbg !4410
  br label %return, !dbg !4410

return:                                           ; preds = %init_fail, %do.end117
  %119 = load i32, i32* %retval, align 4, !dbg !4411
  ret i32 %119, !dbg !4411
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__clear_bit(i64 %nr, i64* %addr) #0 !dbg !4412 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !4418, metadata !DIExpression()), !dbg !4421
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !4423, metadata !DIExpression()), !dbg !4424
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !4425, metadata !DIExpression()), !dbg !4433
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !4435, metadata !DIExpression()), !dbg !4436
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !4437, metadata !DIExpression()), !dbg !4438
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !4439, metadata !DIExpression()), !dbg !4440
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !4441
  %1 = load i64, i64* %nr.addr, align 8, !dbg !4442
  %div = sdiv i64 %1, 64, !dbg !4442
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !4443
  %2 = bitcast i64* %add.ptr to i8*, !dbg !4441
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !4444
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !4445
  %conv.i = trunc i64 %4 to i32, !dbg !4445
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #12, !dbg !4446
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !4447
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !4447
  call void @kcsan_check_access(i8* %5, i64 %6, i32 1) #12, !dbg !4447
  %7 = load i64, i64* %nr.addr, align 8, !dbg !4448
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !4449
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64*, i64** %addr.addr.i, align 8, !dbg !4450
  %10 = load i64, i64* %nr.addr.i, align 8, !dbg !4451
  call void asm sideeffect " btrq  $1,$0", "*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %9, i64 %10) #7, !dbg !4452, !srcloc !4453
  ret void, !dbg !4454
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @set_bit(i64 %nr, i64* %addr) #0 !dbg !4455 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !4457, metadata !DIExpression()), !dbg !4459
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !4461, metadata !DIExpression()), !dbg !4462
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !4463, metadata !DIExpression()), !dbg !4465
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !4467, metadata !DIExpression()), !dbg !4468
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !4469, metadata !DIExpression()), !dbg !4470
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !4471, metadata !DIExpression()), !dbg !4472
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !4473
  %1 = load i64, i64* %nr.addr, align 8, !dbg !4474
  %div = sdiv i64 %1, 64, !dbg !4474
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !4475
  %2 = bitcast i64* %add.ptr to i8*, !dbg !4473
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !4476
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !4477
  %conv.i = trunc i64 %4 to i32, !dbg !4477
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #12, !dbg !4478
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !4479
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !4479
  call void @kcsan_check_access(i8* %5, i64 %6, i32 5) #12, !dbg !4479
  %7 = load i64, i64* %nr.addr, align 8, !dbg !4480
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !4481
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64, i64* %nr.addr.i, align 8, !dbg !4482
  %10 = call i1 @llvm.is.constant.i64(i64 %9) #7, !dbg !4484
  br i1 %10, label %if.then.i, label %if.else.i, !dbg !4485

if.then.i:                                        ; preds = %entry
  %11 = load i64*, i64** %addr.addr.i, align 8, !dbg !4486
  %12 = bitcast i64* %11 to i8*, !dbg !4486
  %13 = load i64, i64* %nr.addr.i, align 8, !dbg !4486
  %shr.i = ashr i64 %13, 3, !dbg !4486
  %add.ptr.i = getelementptr i8, i8* %12, i64 %shr.i, !dbg !4486
  %14 = load i64, i64* %nr.addr.i, align 8, !dbg !4488
  %and.i = and i64 %14, 7, !dbg !4488
  %sh_prom.i = trunc i64 %and.i to i32, !dbg !4488
  %shl.i = shl i32 1, %sh_prom.i, !dbg !4488
  call void asm sideeffect "orb ${1:b},$0", "=*m,iq,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i8* %add.ptr.i, i32 %shl.i, i8* %add.ptr.i) #7, !dbg !4489, !srcloc !4490
  br label %arch_set_bit.exit, !dbg !4491

if.else.i:                                        ; preds = %entry
  %15 = load i64*, i64** %addr.addr.i, align 8, !dbg !4492
  %16 = load i64, i64* %nr.addr.i, align 8, !dbg !4494
  call void asm sideeffect " btsq  $1,$0", "*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %15, i64 %16) #7, !dbg !4495, !srcloc !4496
  br label %arch_set_bit.exit

arch_set_bit.exit:                                ; preds = %if.then.i, %if.else.i
  ret void, !dbg !4497
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @clear_bit(i64 %nr, i64* %addr) #0 !dbg !4498 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !4499, metadata !DIExpression()), !dbg !4501
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !4503, metadata !DIExpression()), !dbg !4504
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !4463, metadata !DIExpression()), !dbg !4505
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !4467, metadata !DIExpression()), !dbg !4507
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !4508, metadata !DIExpression()), !dbg !4509
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !4510, metadata !DIExpression()), !dbg !4511
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !4512
  %1 = load i64, i64* %nr.addr, align 8, !dbg !4513
  %div = sdiv i64 %1, 64, !dbg !4513
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !4514
  %2 = bitcast i64* %add.ptr to i8*, !dbg !4512
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !4515
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !4516
  %conv.i = trunc i64 %4 to i32, !dbg !4516
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #12, !dbg !4517
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !4518
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !4518
  call void @kcsan_check_access(i8* %5, i64 %6, i32 5) #12, !dbg !4518
  %7 = load i64, i64* %nr.addr, align 8, !dbg !4519
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !4520
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64, i64* %nr.addr.i, align 8, !dbg !4521
  %10 = call i1 @llvm.is.constant.i64(i64 %9) #7, !dbg !4523
  br i1 %10, label %if.then.i, label %if.else.i, !dbg !4524

if.then.i:                                        ; preds = %entry
  %11 = load i64*, i64** %addr.addr.i, align 8, !dbg !4525
  %12 = bitcast i64* %11 to i8*, !dbg !4525
  %13 = load i64, i64* %nr.addr.i, align 8, !dbg !4525
  %shr.i = ashr i64 %13, 3, !dbg !4525
  %add.ptr.i = getelementptr i8, i8* %12, i64 %shr.i, !dbg !4525
  %14 = load i64, i64* %nr.addr.i, align 8, !dbg !4527
  %and.i = and i64 %14, 7, !dbg !4527
  %sh_prom.i = trunc i64 %and.i to i32, !dbg !4527
  %shl.i = shl i32 1, %sh_prom.i, !dbg !4527
  %neg.i = xor i32 %shl.i, -1, !dbg !4528
  call void asm sideeffect "andb ${1:b},$0", "=*m,iq,*m,~{dirflag},~{fpsr},~{flags}"(i8* %add.ptr.i, i32 %neg.i, i8* %add.ptr.i) #7, !dbg !4529, !srcloc !4530
  br label %arch_clear_bit.exit, !dbg !4531

if.else.i:                                        ; preds = %entry
  %15 = load i64*, i64** %addr.addr.i, align 8, !dbg !4532
  %16 = load i64, i64* %nr.addr.i, align 8, !dbg !4534
  call void asm sideeffect " btrq  $1,$0", "*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %15, i64 %16) #7, !dbg !4535, !srcloc !4536
  br label %arch_clear_bit.exit

arch_clear_bit.exit:                              ; preds = %if.then.i, %if.else.i
  ret void, !dbg !4537
}

; Function Attrs: noredzone
declare dso_local %struct.input_dev* @input_allocate_device() #2

; Function Attrs: cold noredzone
declare dso_local void @_dev_err(%struct.device*, i8*, ...) #3

; Function Attrs: noredzone
declare dso_local i32 @snprintf(i8*, i64, i8*, ...) #2

; Function Attrs: noredzone
declare dso_local void @input_set_capability(%struct.input_dev*, i32, i32) #2

; Function Attrs: noredzone
declare dso_local void @input_set_abs_params(%struct.input_dev*, i32, i32, i32, i32, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__set_bit(i64 %nr, i64* %addr) #0 !dbg !4538 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !4539, metadata !DIExpression()), !dbg !4541
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !4543, metadata !DIExpression()), !dbg !4544
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !4425, metadata !DIExpression()), !dbg !4545
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !4435, metadata !DIExpression()), !dbg !4547
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !4548, metadata !DIExpression()), !dbg !4549
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !4550, metadata !DIExpression()), !dbg !4551
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !4552
  %1 = load i64, i64* %nr.addr, align 8, !dbg !4553
  %div = sdiv i64 %1, 64, !dbg !4553
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !4554
  %2 = bitcast i64* %add.ptr to i8*, !dbg !4552
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !4555
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !4556
  %conv.i = trunc i64 %4 to i32, !dbg !4556
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #12, !dbg !4557
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !4558
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !4558
  call void @kcsan_check_access(i8* %5, i64 %6, i32 1) #12, !dbg !4558
  %7 = load i64, i64* %nr.addr, align 8, !dbg !4559
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !4560
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64*, i64** %addr.addr.i, align 8, !dbg !4561
  %10 = load i64, i64* %nr.addr.i, align 8, !dbg !4562
  call void asm sideeffect " btsq  $1,$0", "*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %9, i64 %10) #7, !dbg !4563, !srcloc !4564
  ret void, !dbg !4565
}

; Function Attrs: noredzone
declare dso_local i32 @input_register_device(%struct.input_dev*) #2

; Function Attrs: noredzone
declare dso_local void @input_free_device(%struct.input_dev*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__init_work(%struct.work_struct* %work, i32 %onstack) #0 !dbg !4566 {
entry:
  %work.addr = alloca %struct.work_struct*, align 8
  %onstack.addr = alloca i32, align 4
  store %struct.work_struct* %work, %struct.work_struct** %work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.work_struct** %work.addr, metadata !4569, metadata !DIExpression()), !dbg !4570
  store i32 %onstack, i32* %onstack.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %onstack.addr, metadata !4571, metadata !DIExpression()), !dbg !4572
  ret void, !dbg !4573
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @INIT_LIST_HEAD(%struct.list_head* %list) #0 !dbg !4574 {
entry:
  %list.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %list, %struct.list_head** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %list.addr, metadata !4578, metadata !DIExpression()), !dbg !4579
  br label %do.body, !dbg !4580

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !4581

do.body1:                                         ; preds = %do.body
  br label %do.end, !dbg !4583

do.end:                                           ; preds = %do.body1
  br label %do.body2, !dbg !4581

do.body2:                                         ; preds = %do.end
  %0 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !4585
  %1 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !4585
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 0, !dbg !4585
  store volatile %struct.list_head* %0, %struct.list_head** %next, align 8, !dbg !4585
  br label %do.end3, !dbg !4585

do.end3:                                          ; preds = %do.body2
  br label %do.end4, !dbg !4581

do.end4:                                          ; preds = %do.end3
  %2 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !4587
  %3 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !4588
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 1, !dbg !4589
  store %struct.list_head* %2, %struct.list_head** %prev, align 8, !dbg !4590
  ret void, !dbg !4591
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @alps_register_bare_ps2_mouse(%struct.work_struct* %work) #0 !dbg !4592 {
entry:
  %work.addr = alloca %struct.work_struct*, align 8
  %priv = alloca %struct.alps_data*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.alps_data*, align 8
  %psmouse = alloca %struct.psmouse*, align 8
  %dev3 = alloca %struct.input_dev*, align 8
  %error = alloca i32, align 4
  store %struct.work_struct* %work, %struct.work_struct** %work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.work_struct** %work.addr, metadata !4593, metadata !DIExpression()), !dbg !4594
  call void @llvm.dbg.declare(metadata %struct.alps_data** %priv, metadata !4595, metadata !DIExpression()), !dbg !4596
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !4597, metadata !DIExpression()), !dbg !4599
  %0 = load %struct.work_struct*, %struct.work_struct** %work.addr, align 8, !dbg !4599
  %1 = bitcast %struct.work_struct* %0 to i8*, !dbg !4599
  store i8* %1, i8** %__mptr, align 8, !dbg !4599
  br label %do.body, !dbg !4599

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !4600

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !4599
  %add.ptr = getelementptr i8, i8* %2, i64 -88, !dbg !4599
  %3 = bitcast i8* %add.ptr to %struct.alps_data*, !dbg !4599
  store %struct.alps_data* %3, %struct.alps_data** %tmp, align 8, !dbg !4600
  %4 = load %struct.alps_data*, %struct.alps_data** %tmp, align 8, !dbg !4599
  store %struct.alps_data* %4, %struct.alps_data** %priv, align 8, !dbg !4596
  call void @llvm.dbg.declare(metadata %struct.psmouse** %psmouse, metadata !4602, metadata !DIExpression()), !dbg !4603
  %5 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !4604
  %psmouse1 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %5, i32 0, i32 0, !dbg !4605
  %6 = load %struct.psmouse*, %struct.psmouse** %psmouse1, align 8, !dbg !4605
  store %struct.psmouse* %6, %struct.psmouse** %psmouse, align 8, !dbg !4603
  call void @llvm.dbg.declare(metadata %struct.input_dev** %dev3, metadata !4606, metadata !DIExpression()), !dbg !4607
  call void @llvm.dbg.declare(metadata i32* %error, metadata !4608, metadata !DIExpression()), !dbg !4609
  store i32 0, i32* %error, align 4, !dbg !4609
  call void @mutex_lock(%struct.mutex* @alps_mutex) #10, !dbg !4610
  %7 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !4611
  %dev32 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %7, i32 0, i32 2, !dbg !4613
  %8 = load %struct.input_dev*, %struct.input_dev** %dev32, align 8, !dbg !4613
  %tobool = icmp ne %struct.input_dev* %8, null, !dbg !4611
  br i1 %tobool, label %if.then, label %if.end, !dbg !4614

if.then:                                          ; preds = %do.end
  br label %out, !dbg !4615

if.end:                                           ; preds = %do.end
  %call = call %struct.input_dev* @input_allocate_device() #10, !dbg !4616
  store %struct.input_dev* %call, %struct.input_dev** %dev3, align 8, !dbg !4617
  %9 = load %struct.input_dev*, %struct.input_dev** %dev3, align 8, !dbg !4618
  %tobool3 = icmp ne %struct.input_dev* %9, null, !dbg !4618
  br i1 %tobool3, label %if.end5, label %if.then4, !dbg !4620

if.then4:                                         ; preds = %if.end
  %10 = load %struct.psmouse*, %struct.psmouse** %psmouse, align 8, !dbg !4621
  %ps2dev = getelementptr inbounds %struct.psmouse, %struct.psmouse* %10, i32 0, i32 2, !dbg !4621
  %serio = getelementptr inbounds %struct.ps2dev, %struct.ps2dev* %ps2dev, i32 0, i32 0, !dbg !4621
  %11 = load %struct.serio*, %struct.serio** %serio, align 8, !dbg !4621
  %dev = getelementptr inbounds %struct.serio, %struct.serio* %11, i32 0, i32 18, !dbg !4621
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.7, i64 0, i64 0)) #11, !dbg !4621
  store i32 -12, i32* %error, align 4, !dbg !4623
  br label %out, !dbg !4624

if.end5:                                          ; preds = %if.end
  %12 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !4625
  %phys3 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %12, i32 0, i32 4, !dbg !4626
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %phys3, i64 0, i64 0, !dbg !4625
  %13 = load %struct.psmouse*, %struct.psmouse** %psmouse, align 8, !dbg !4627
  %ps2dev6 = getelementptr inbounds %struct.psmouse, %struct.psmouse* %13, i32 0, i32 2, !dbg !4628
  %serio7 = getelementptr inbounds %struct.ps2dev, %struct.ps2dev* %ps2dev6, i32 0, i32 0, !dbg !4629
  %14 = load %struct.serio*, %struct.serio** %serio7, align 8, !dbg !4629
  %phys = getelementptr inbounds %struct.serio, %struct.serio* %14, i32 0, i32 2, !dbg !4630
  %arraydecay8 = getelementptr inbounds [32 x i8], [32 x i8]* %phys, i64 0, i64 0, !dbg !4627
  %15 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !4631
  %dev2 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %15, i32 0, i32 1, !dbg !4632
  %16 = load %struct.input_dev*, %struct.input_dev** %dev2, align 8, !dbg !4632
  %tobool9 = icmp ne %struct.input_dev* %16, null, !dbg !4631
  %17 = zext i1 %tobool9 to i64, !dbg !4631
  %cond = select i1 %tobool9, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.10, i64 0, i64 0), !dbg !4631
  %call10 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %arraydecay, i64 32, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.8, i64 0, i64 0), i8* %arraydecay8, i8* %cond) #10, !dbg !4633
  %18 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !4634
  %phys311 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %18, i32 0, i32 4, !dbg !4635
  %arraydecay12 = getelementptr inbounds [32 x i8], [32 x i8]* %phys311, i64 0, i64 0, !dbg !4634
  %19 = load %struct.input_dev*, %struct.input_dev** %dev3, align 8, !dbg !4636
  %phys13 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %19, i32 0, i32 1, !dbg !4637
  store i8* %arraydecay12, i8** %phys13, align 8, !dbg !4638
  %20 = load %struct.input_dev*, %struct.input_dev** %dev3, align 8, !dbg !4639
  %name = getelementptr inbounds %struct.input_dev, %struct.input_dev* %20, i32 0, i32 0, !dbg !4640
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.11, i64 0, i64 0), i8** %name, align 8, !dbg !4641
  %21 = load %struct.input_dev*, %struct.input_dev** %dev3, align 8, !dbg !4642
  %id = getelementptr inbounds %struct.input_dev, %struct.input_dev* %21, i32 0, i32 3, !dbg !4643
  %bustype = getelementptr inbounds %struct.input_id, %struct.input_id* %id, i32 0, i32 0, !dbg !4644
  store i16 17, i16* %bustype, align 8, !dbg !4645
  %22 = load %struct.input_dev*, %struct.input_dev** %dev3, align 8, !dbg !4646
  %id14 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %22, i32 0, i32 3, !dbg !4647
  %vendor = getelementptr inbounds %struct.input_id, %struct.input_id* %id14, i32 0, i32 1, !dbg !4648
  store i16 2, i16* %vendor, align 2, !dbg !4649
  %23 = load %struct.input_dev*, %struct.input_dev** %dev3, align 8, !dbg !4650
  %id15 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %23, i32 0, i32 3, !dbg !4651
  %product = getelementptr inbounds %struct.input_id, %struct.input_id* %id15, i32 0, i32 2, !dbg !4652
  store i16 1, i16* %product, align 4, !dbg !4653
  %24 = load %struct.input_dev*, %struct.input_dev** %dev3, align 8, !dbg !4654
  %id16 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %24, i32 0, i32 3, !dbg !4655
  %version = getelementptr inbounds %struct.input_id, %struct.input_id* %id16, i32 0, i32 3, !dbg !4656
  store i16 0, i16* %version, align 2, !dbg !4657
  %25 = load %struct.psmouse*, %struct.psmouse** %psmouse, align 8, !dbg !4658
  %ps2dev17 = getelementptr inbounds %struct.psmouse, %struct.psmouse* %25, i32 0, i32 2, !dbg !4659
  %serio18 = getelementptr inbounds %struct.ps2dev, %struct.ps2dev* %ps2dev17, i32 0, i32 0, !dbg !4660
  %26 = load %struct.serio*, %struct.serio** %serio18, align 8, !dbg !4660
  %dev19 = getelementptr inbounds %struct.serio, %struct.serio* %26, i32 0, i32 18, !dbg !4661
  %27 = load %struct.input_dev*, %struct.input_dev** %dev3, align 8, !dbg !4662
  %dev20 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %27, i32 0, i32 40, !dbg !4663
  %parent = getelementptr inbounds %struct.device, %struct.device* %dev20, i32 0, i32 1, !dbg !4664
  store %struct.device* %dev19, %struct.device** %parent, align 8, !dbg !4665
  %28 = load %struct.input_dev*, %struct.input_dev** %dev3, align 8, !dbg !4666
  call void @input_set_capability(%struct.input_dev* %28, i32 2, i32 0) #10, !dbg !4667
  %29 = load %struct.input_dev*, %struct.input_dev** %dev3, align 8, !dbg !4668
  call void @input_set_capability(%struct.input_dev* %29, i32 2, i32 1) #10, !dbg !4669
  %30 = load %struct.input_dev*, %struct.input_dev** %dev3, align 8, !dbg !4670
  call void @input_set_capability(%struct.input_dev* %30, i32 1, i32 272) #10, !dbg !4671
  %31 = load %struct.input_dev*, %struct.input_dev** %dev3, align 8, !dbg !4672
  call void @input_set_capability(%struct.input_dev* %31, i32 1, i32 273) #10, !dbg !4673
  %32 = load %struct.input_dev*, %struct.input_dev** %dev3, align 8, !dbg !4674
  call void @input_set_capability(%struct.input_dev* %32, i32 1, i32 274) #10, !dbg !4675
  %33 = load %struct.input_dev*, %struct.input_dev** %dev3, align 8, !dbg !4676
  %propbit = getelementptr inbounds %struct.input_dev, %struct.input_dev* %33, i32 0, i32 4, !dbg !4677
  %arraydecay21 = getelementptr inbounds [1 x i64], [1 x i64]* %propbit, i64 0, i64 0, !dbg !4676
  call void @__set_bit(i64 0, i64* %arraydecay21) #10, !dbg !4678
  %34 = load %struct.input_dev*, %struct.input_dev** %dev3, align 8, !dbg !4679
  %call22 = call i32 @input_register_device(%struct.input_dev* %34) #10, !dbg !4680
  store i32 %call22, i32* %error, align 4, !dbg !4681
  %35 = load i32, i32* %error, align 4, !dbg !4682
  %tobool23 = icmp ne i32 %35, 0, !dbg !4682
  br i1 %tobool23, label %if.then24, label %if.end28, !dbg !4684

if.then24:                                        ; preds = %if.end5
  %36 = load %struct.psmouse*, %struct.psmouse** %psmouse, align 8, !dbg !4685
  %ps2dev25 = getelementptr inbounds %struct.psmouse, %struct.psmouse* %36, i32 0, i32 2, !dbg !4685
  %serio26 = getelementptr inbounds %struct.ps2dev, %struct.ps2dev* %ps2dev25, i32 0, i32 0, !dbg !4685
  %37 = load %struct.serio*, %struct.serio** %serio26, align 8, !dbg !4685
  %dev27 = getelementptr inbounds %struct.serio, %struct.serio* %37, i32 0, i32 18, !dbg !4685
  %38 = load i32, i32* %error, align 4, !dbg !4685
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev27, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.12, i64 0, i64 0), i32 %38) #11, !dbg !4685
  %39 = load %struct.input_dev*, %struct.input_dev** %dev3, align 8, !dbg !4687
  call void @input_free_device(%struct.input_dev* %39) #10, !dbg !4688
  br label %out, !dbg !4689

if.end28:                                         ; preds = %if.end5
  %40 = load %struct.input_dev*, %struct.input_dev** %dev3, align 8, !dbg !4690
  %41 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !4691
  %dev329 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %41, i32 0, i32 2, !dbg !4692
  store %struct.input_dev* %40, %struct.input_dev** %dev329, align 8, !dbg !4693
  br label %out, !dbg !4691

out:                                              ; preds = %if.end28, %if.then24, %if.then4, %if.then
  call void @llvm.dbg.label(metadata !4694), !dbg !4695
  %42 = load i32, i32* %error, align 4, !dbg !4696
  %tobool30 = icmp ne i32 %42, 0, !dbg !4696
  br i1 %tobool30, label %if.then31, label %if.end34, !dbg !4698

if.then31:                                        ; preds = %out
  %43 = load i32, i32* %error, align 4, !dbg !4699
  %conv = sext i32 %43 to i64, !dbg !4699
  %call32 = call i8* @ERR_PTR(i64 %conv) #10, !dbg !4700
  %44 = bitcast i8* %call32 to %struct.input_dev*, !dbg !4700
  %45 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !4701
  %dev333 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %45, i32 0, i32 2, !dbg !4702
  store %struct.input_dev* %44, %struct.input_dev** %dev333, align 8, !dbg !4703
  br label %if.end34, !dbg !4701

if.end34:                                         ; preds = %if.then31, %out
  call void @mutex_unlock(%struct.mutex* @alps_mutex) #10, !dbg !4704
  ret void, !dbg !4705
}

; Function Attrs: noredzone
declare dso_local void @init_timer_key(%struct.timer_list*, void (%struct.timer_list*)*, i32, i8*, %struct.lock_class_key*) #2

; Function Attrs: noredzone
declare dso_local void @delayed_work_timer_fn(%struct.timer_list*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @alps_process_byte(%struct.psmouse* %psmouse) #0 !dbg !4706 {
entry:
  %retval = alloca i32, align 4
  %psmouse.addr = alloca %struct.psmouse*, align 8
  %priv = alloca %struct.alps_data*, align 8
  store %struct.psmouse* %psmouse, %struct.psmouse** %psmouse.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.psmouse** %psmouse.addr, metadata !4707, metadata !DIExpression()), !dbg !4708
  call void @llvm.dbg.declare(metadata %struct.alps_data** %priv, metadata !4709, metadata !DIExpression()), !dbg !4710
  %0 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !4711
  %private = getelementptr inbounds %struct.psmouse, %struct.psmouse* %0, i32 0, i32 0, !dbg !4712
  %1 = load i8*, i8** %private, align 8, !dbg !4712
  %2 = bitcast i8* %1 to %struct.alps_data*, !dbg !4711
  store %struct.alps_data* %2, %struct.alps_data** %priv, align 8, !dbg !4710
  %3 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !4713
  %proto_version = getelementptr inbounds %struct.alps_data, %struct.alps_data* %3, i32 0, i32 8, !dbg !4715
  %4 = load i16, i16* %proto_version, align 4, !dbg !4715
  %conv = zext i16 %4 to i32, !dbg !4713
  %cmp = icmp ne i32 %conv, 2048, !dbg !4716
  br i1 %cmp, label %land.lhs.true, label %if.end11, !dbg !4717

land.lhs.true:                                    ; preds = %entry
  %5 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !4718
  %out_of_sync_cnt = getelementptr inbounds %struct.psmouse, %struct.psmouse* %5, i32 0, i32 16, !dbg !4719
  %6 = load i64, i64* %out_of_sync_cnt, align 8, !dbg !4719
  %tobool = icmp ne i64 %6, 0, !dbg !4718
  br i1 %tobool, label %if.end11, label %land.lhs.true2, !dbg !4720

land.lhs.true2:                                   ; preds = %land.lhs.true
  %7 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !4721
  %packet = getelementptr inbounds %struct.psmouse, %struct.psmouse* %7, i32 0, i32 7, !dbg !4722
  %arrayidx = getelementptr [8 x i8], [8 x i8]* %packet, i64 0, i64 0, !dbg !4721
  %8 = load i8, i8* %arrayidx, align 8, !dbg !4721
  %conv3 = zext i8 %8 to i32, !dbg !4721
  %and = and i32 %conv3, 200, !dbg !4723
  %cmp4 = icmp eq i32 %and, 8, !dbg !4724
  br i1 %cmp4, label %if.then, label %if.end11, !dbg !4725

if.then:                                          ; preds = %land.lhs.true2
  %9 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !4726
  %pktcnt = getelementptr inbounds %struct.psmouse, %struct.psmouse* %9, i32 0, i32 9, !dbg !4729
  %10 = load i8, i8* %pktcnt, align 1, !dbg !4729
  %conv6 = zext i8 %10 to i32, !dbg !4726
  %cmp7 = icmp eq i32 %conv6, 3, !dbg !4730
  br i1 %cmp7, label %if.then9, label %if.end, !dbg !4731

if.then9:                                         ; preds = %if.then
  %11 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !4732
  %12 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !4734
  %packet10 = getelementptr inbounds %struct.psmouse, %struct.psmouse* %12, i32 0, i32 7, !dbg !4735
  %arraydecay = getelementptr inbounds [8 x i8], [8 x i8]* %packet10, i64 0, i64 0, !dbg !4734
  call void @alps_report_bare_ps2_packet(%struct.psmouse* %11, i8* %arraydecay, i1 zeroext true) #10, !dbg !4736
  store i32 2, i32* %retval, align 4, !dbg !4737
  br label %return, !dbg !4737

if.end:                                           ; preds = %if.then
  store i32 1, i32* %retval, align 4, !dbg !4738
  br label %return, !dbg !4738

if.end11:                                         ; preds = %land.lhs.true2, %land.lhs.true, %entry
  %13 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !4739
  %flags = getelementptr inbounds %struct.alps_data, %struct.alps_data* %13, i32 0, i32 13, !dbg !4741
  %14 = load i32, i32* %flags, align 8, !dbg !4741
  %and12 = and i32 %14, 128, !dbg !4742
  %tobool13 = icmp ne i32 %and12, 0, !dbg !4742
  br i1 %tobool13, label %land.lhs.true14, label %if.end27, !dbg !4743

land.lhs.true14:                                  ; preds = %if.end11
  %15 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !4744
  %pktcnt15 = getelementptr inbounds %struct.psmouse, %struct.psmouse* %15, i32 0, i32 9, !dbg !4745
  %16 = load i8, i8* %pktcnt15, align 1, !dbg !4745
  %conv16 = zext i8 %16 to i32, !dbg !4744
  %cmp17 = icmp sge i32 %conv16, 4, !dbg !4746
  br i1 %cmp17, label %land.lhs.true19, label %if.end27, !dbg !4747

land.lhs.true19:                                  ; preds = %land.lhs.true14
  %17 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !4748
  %packet20 = getelementptr inbounds %struct.psmouse, %struct.psmouse* %17, i32 0, i32 7, !dbg !4749
  %arrayidx21 = getelementptr [8 x i8], [8 x i8]* %packet20, i64 0, i64 3, !dbg !4748
  %18 = load i8, i8* %arrayidx21, align 1, !dbg !4748
  %conv22 = zext i8 %18 to i32, !dbg !4748
  %and23 = and i32 %conv22, 15, !dbg !4750
  %cmp24 = icmp eq i32 %and23, 15, !dbg !4751
  br i1 %cmp24, label %if.then26, label %if.end27, !dbg !4752

if.then26:                                        ; preds = %land.lhs.true19
  %19 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !4753
  %call = call i32 @alps_handle_interleaved_ps2(%struct.psmouse* %19) #10, !dbg !4755
  store i32 %call, i32* %retval, align 4, !dbg !4756
  br label %return, !dbg !4756

if.end27:                                         ; preds = %land.lhs.true19, %land.lhs.true14, %if.end11
  %20 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !4757
  %21 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !4759
  %packet28 = getelementptr inbounds %struct.psmouse, %struct.psmouse* %21, i32 0, i32 7, !dbg !4760
  %arrayidx29 = getelementptr [8 x i8], [8 x i8]* %packet28, i64 0, i64 0, !dbg !4759
  %22 = load i8, i8* %arrayidx29, align 8, !dbg !4759
  %call30 = call zeroext i1 @alps_is_valid_first_byte(%struct.alps_data* %20, i8 zeroext %22) #10, !dbg !4761
  br i1 %call30, label %if.end32, label %if.then31, !dbg !4762

if.then31:                                        ; preds = %if.end27
  store i32 0, i32* %retval, align 4, !dbg !4763
  br label %return, !dbg !4763

if.end32:                                         ; preds = %if.end27
  %23 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !4765
  %proto_version33 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %23, i32 0, i32 8, !dbg !4767
  %24 = load i16, i16* %proto_version33, align 4, !dbg !4767
  %conv34 = zext i16 %24 to i32, !dbg !4765
  %cmp35 = icmp slt i32 %conv34, 1280, !dbg !4768
  br i1 %cmp35, label %land.lhs.true37, label %if.end70, !dbg !4769

land.lhs.true37:                                  ; preds = %if.end32
  %25 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !4770
  %pktcnt38 = getelementptr inbounds %struct.psmouse, %struct.psmouse* %25, i32 0, i32 9, !dbg !4771
  %26 = load i8, i8* %pktcnt38, align 1, !dbg !4771
  %conv39 = zext i8 %26 to i32, !dbg !4770
  %cmp40 = icmp sge i32 %conv39, 2, !dbg !4772
  br i1 %cmp40, label %land.lhs.true42, label %if.end70, !dbg !4773

land.lhs.true42:                                  ; preds = %land.lhs.true37
  %27 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !4774
  %pktcnt43 = getelementptr inbounds %struct.psmouse, %struct.psmouse* %27, i32 0, i32 9, !dbg !4775
  %28 = load i8, i8* %pktcnt43, align 1, !dbg !4775
  %conv44 = zext i8 %28 to i32, !dbg !4774
  %29 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !4776
  %pktsize = getelementptr inbounds %struct.psmouse, %struct.psmouse* %29, i32 0, i32 10, !dbg !4777
  %30 = load i8, i8* %pktsize, align 2, !dbg !4777
  %conv45 = zext i8 %30 to i32, !dbg !4776
  %cmp46 = icmp sle i32 %conv44, %conv45, !dbg !4778
  br i1 %cmp46, label %land.lhs.true48, label %if.end70, !dbg !4779

land.lhs.true48:                                  ; preds = %land.lhs.true42
  %31 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !4780
  %packet49 = getelementptr inbounds %struct.psmouse, %struct.psmouse* %31, i32 0, i32 7, !dbg !4781
  %32 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !4782
  %pktcnt50 = getelementptr inbounds %struct.psmouse, %struct.psmouse* %32, i32 0, i32 9, !dbg !4783
  %33 = load i8, i8* %pktcnt50, align 1, !dbg !4783
  %conv51 = zext i8 %33 to i32, !dbg !4782
  %sub = sub i32 %conv51, 1, !dbg !4784
  %idxprom = sext i32 %sub to i64, !dbg !4780
  %arrayidx52 = getelementptr [8 x i8], [8 x i8]* %packet49, i64 0, i64 %idxprom, !dbg !4780
  %34 = load i8, i8* %arrayidx52, align 1, !dbg !4780
  %conv53 = zext i8 %34 to i32, !dbg !4780
  %and54 = and i32 %conv53, 128, !dbg !4785
  %tobool55 = icmp ne i32 %and54, 0, !dbg !4785
  br i1 %tobool55, label %if.then56, label %if.end70, !dbg !4786

if.then56:                                        ; preds = %land.lhs.true48
  %35 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !4787
  %proto_version57 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %35, i32 0, i32 8, !dbg !4790
  %36 = load i16, i16* %proto_version57, align 4, !dbg !4790
  %conv58 = zext i16 %36 to i32, !dbg !4787
  %cmp59 = icmp eq i32 %conv58, 784, !dbg !4791
  br i1 %cmp59, label %land.lhs.true61, label %if.end69, !dbg !4792

land.lhs.true61:                                  ; preds = %if.then56
  %37 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !4793
  %pktcnt62 = getelementptr inbounds %struct.psmouse, %struct.psmouse* %37, i32 0, i32 9, !dbg !4794
  %38 = load i8, i8* %pktcnt62, align 1, !dbg !4794
  %conv63 = zext i8 %38 to i32, !dbg !4793
  %39 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !4795
  %pktsize64 = getelementptr inbounds %struct.psmouse, %struct.psmouse* %39, i32 0, i32 10, !dbg !4796
  %40 = load i8, i8* %pktsize64, align 2, !dbg !4796
  %conv65 = zext i8 %40 to i32, !dbg !4795
  %cmp66 = icmp eq i32 %conv63, %conv65, !dbg !4797
  br i1 %cmp66, label %if.then68, label %if.end69, !dbg !4798

if.then68:                                        ; preds = %land.lhs.true61
  store i32 2, i32* %retval, align 4, !dbg !4799
  br label %return, !dbg !4799

if.end69:                                         ; preds = %land.lhs.true61, %if.then56
  store i32 0, i32* %retval, align 4, !dbg !4801
  br label %return, !dbg !4801

if.end70:                                         ; preds = %land.lhs.true48, %land.lhs.true42, %land.lhs.true37, %if.end32
  %41 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !4802
  %proto_version71 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %41, i32 0, i32 8, !dbg !4804
  %42 = load i16, i16* %proto_version71, align 4, !dbg !4804
  %conv72 = zext i16 %42 to i32, !dbg !4802
  %cmp73 = icmp eq i32 %conv72, 1792, !dbg !4805
  br i1 %cmp73, label %land.lhs.true75, label %lor.lhs.false, !dbg !4806

land.lhs.true75:                                  ; preds = %if.end70
  %43 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !4807
  %call76 = call zeroext i1 @alps_is_valid_package_v7(%struct.psmouse* %43) #10, !dbg !4808
  br i1 %call76, label %lor.lhs.false, label %if.then83, !dbg !4809

lor.lhs.false:                                    ; preds = %land.lhs.true75, %if.end70
  %44 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !4810
  %proto_version77 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %44, i32 0, i32 8, !dbg !4811
  %45 = load i16, i16* %proto_version77, align 4, !dbg !4811
  %conv78 = zext i16 %45 to i32, !dbg !4810
  %cmp79 = icmp eq i32 %conv78, 2048, !dbg !4812
  br i1 %cmp79, label %land.lhs.true81, label %if.end84, !dbg !4813

land.lhs.true81:                                  ; preds = %lor.lhs.false
  %46 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !4814
  %call82 = call zeroext i1 @alps_is_valid_package_ss4_v2(%struct.psmouse* %46) #10, !dbg !4815
  br i1 %call82, label %if.end84, label %if.then83, !dbg !4816

if.then83:                                        ; preds = %land.lhs.true81, %land.lhs.true75
  store i32 0, i32* %retval, align 4, !dbg !4817
  br label %return, !dbg !4817

if.end84:                                         ; preds = %land.lhs.true81, %lor.lhs.false
  %47 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !4819
  %pktcnt85 = getelementptr inbounds %struct.psmouse, %struct.psmouse* %47, i32 0, i32 9, !dbg !4821
  %48 = load i8, i8* %pktcnt85, align 1, !dbg !4821
  %conv86 = zext i8 %48 to i32, !dbg !4819
  %49 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !4822
  %pktsize87 = getelementptr inbounds %struct.psmouse, %struct.psmouse* %49, i32 0, i32 10, !dbg !4823
  %50 = load i8, i8* %pktsize87, align 2, !dbg !4823
  %conv88 = zext i8 %50 to i32, !dbg !4822
  %cmp89 = icmp eq i32 %conv86, %conv88, !dbg !4824
  br i1 %cmp89, label %if.then91, label %if.end92, !dbg !4825

if.then91:                                        ; preds = %if.end84
  %51 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !4826
  %process_packet = getelementptr inbounds %struct.alps_data, %struct.alps_data* %51, i32 0, i32 21, !dbg !4828
  %52 = load void (%struct.psmouse*)*, void (%struct.psmouse*)** %process_packet, align 8, !dbg !4828
  %53 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !4829
  call void %52(%struct.psmouse* %53) #10, !dbg !4826
  store i32 2, i32* %retval, align 4, !dbg !4830
  br label %return, !dbg !4830

if.end92:                                         ; preds = %if.end84
  store i32 1, i32* %retval, align 4, !dbg !4831
  br label %return, !dbg !4831

return:                                           ; preds = %if.end92, %if.then91, %if.then83, %if.end69, %if.then68, %if.then31, %if.then26, %if.end, %if.then9
  %54 = load i32, i32* %retval, align 4, !dbg !4832
  ret i32 %54, !dbg !4832
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @alps_poll(%struct.psmouse* %psmouse) #0 !dbg !4833 {
entry:
  %retval = alloca i32, align 4
  %psmouse.addr = alloca %struct.psmouse*, align 8
  %priv = alloca %struct.alps_data*, align 8
  %buf = alloca [8 x i8], align 1
  %poll_failed = alloca i8, align 1
  store %struct.psmouse* %psmouse, %struct.psmouse** %psmouse.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.psmouse** %psmouse.addr, metadata !4834, metadata !DIExpression()), !dbg !4835
  call void @llvm.dbg.declare(metadata %struct.alps_data** %priv, metadata !4836, metadata !DIExpression()), !dbg !4837
  %0 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !4838
  %private = getelementptr inbounds %struct.psmouse, %struct.psmouse* %0, i32 0, i32 0, !dbg !4839
  %1 = load i8*, i8** %private, align 8, !dbg !4839
  %2 = bitcast i8* %1 to %struct.alps_data*, !dbg !4838
  store %struct.alps_data* %2, %struct.alps_data** %priv, align 8, !dbg !4837
  call void @llvm.dbg.declare(metadata [8 x i8]* %buf, metadata !4840, metadata !DIExpression()), !dbg !4841
  call void @llvm.dbg.declare(metadata i8* %poll_failed, metadata !4842, metadata !DIExpression()), !dbg !4843
  %3 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !4844
  %flags = getelementptr inbounds %struct.alps_data, %struct.alps_data* %3, i32 0, i32 13, !dbg !4846
  %4 = load i32, i32* %flags, align 8, !dbg !4846
  %and = and i32 %4, 4, !dbg !4847
  %tobool = icmp ne i32 %and, 0, !dbg !4847
  br i1 %tobool, label %if.then, label %if.end, !dbg !4848

if.then:                                          ; preds = %entry
  %5 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !4849
  %call = call i32 @alps_passthrough_mode_v2(%struct.psmouse* %5, i1 zeroext true) #10, !dbg !4850
  br label %if.end, !dbg !4850

if.end:                                           ; preds = %if.then, %entry
  %6 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !4851
  %ps2dev = getelementptr inbounds %struct.psmouse, %struct.psmouse* %6, i32 0, i32 2, !dbg !4852
  %arraydecay = getelementptr inbounds [8 x i8], [8 x i8]* %buf, i64 0, i64 0, !dbg !4853
  %7 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !4854
  %pktsize = getelementptr inbounds %struct.psmouse, %struct.psmouse* %7, i32 0, i32 10, !dbg !4855
  %8 = load i8, i8* %pktsize, align 2, !dbg !4855
  %conv = zext i8 %8 to i32, !dbg !4854
  %shl = shl i32 %conv, 8, !dbg !4856
  %or = or i32 235, %shl, !dbg !4857
  %call1 = call i32 @ps2_command(%struct.ps2dev* %ps2dev, i8* %arraydecay, i32 %or) #10, !dbg !4858
  %cmp = icmp slt i32 %call1, 0, !dbg !4859
  %frombool = zext i1 %cmp to i8, !dbg !4860
  store i8 %frombool, i8* %poll_failed, align 1, !dbg !4860
  %9 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !4861
  %flags3 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %9, i32 0, i32 13, !dbg !4863
  %10 = load i32, i32* %flags3, align 8, !dbg !4863
  %and4 = and i32 %10, 4, !dbg !4864
  %tobool5 = icmp ne i32 %and4, 0, !dbg !4864
  br i1 %tobool5, label %if.then6, label %if.end8, !dbg !4865

if.then6:                                         ; preds = %if.end
  %11 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !4866
  %call7 = call i32 @alps_passthrough_mode_v2(%struct.psmouse* %11, i1 zeroext false) #10, !dbg !4867
  br label %if.end8, !dbg !4867

if.end8:                                          ; preds = %if.then6, %if.end
  %12 = load i8, i8* %poll_failed, align 1, !dbg !4868
  %tobool9 = trunc i8 %12 to i1, !dbg !4868
  br i1 %tobool9, label %if.then17, label %lor.lhs.false, !dbg !4870

lor.lhs.false:                                    ; preds = %if.end8
  %arrayidx = getelementptr [8 x i8], [8 x i8]* %buf, i64 0, i64 0, !dbg !4871
  %13 = load i8, i8* %arrayidx, align 1, !dbg !4871
  %conv11 = zext i8 %13 to i32, !dbg !4871
  %14 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !4872
  %mask0 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %14, i32 0, i32 10, !dbg !4873
  %15 = load i8, i8* %mask0, align 1, !dbg !4873
  %conv12 = zext i8 %15 to i32, !dbg !4872
  %and13 = and i32 %conv11, %conv12, !dbg !4874
  %16 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !4875
  %byte0 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %16, i32 0, i32 9, !dbg !4876
  %17 = load i8, i8* %byte0, align 2, !dbg !4876
  %conv14 = zext i8 %17 to i32, !dbg !4875
  %cmp15 = icmp ne i32 %and13, %conv14, !dbg !4877
  br i1 %cmp15, label %if.then17, label %if.end18, !dbg !4878

if.then17:                                        ; preds = %lor.lhs.false, %if.end8
  store i32 -1, i32* %retval, align 4, !dbg !4879
  br label %return, !dbg !4879

if.end18:                                         ; preds = %lor.lhs.false
  %18 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !4880
  %badbyte = getelementptr inbounds %struct.psmouse, %struct.psmouse* %18, i32 0, i32 8, !dbg !4882
  %19 = load i8, i8* %badbyte, align 8, !dbg !4882
  %conv19 = zext i8 %19 to i32, !dbg !4880
  %and20 = and i32 %conv19, 200, !dbg !4883
  %cmp21 = icmp eq i32 %and20, 8, !dbg !4884
  br i1 %cmp21, label %if.then23, label %if.end30, !dbg !4885

if.then23:                                        ; preds = %if.end18
  %20 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !4886
  %ps2dev24 = getelementptr inbounds %struct.psmouse, %struct.psmouse* %20, i32 0, i32 2, !dbg !4889
  %arraydecay25 = getelementptr inbounds [8 x i8], [8 x i8]* %buf, i64 0, i64 0, !dbg !4890
  %call26 = call i32 @ps2_command(%struct.ps2dev* %ps2dev24, i8* %arraydecay25, i32 1003) #10, !dbg !4891
  %tobool27 = icmp ne i32 %call26, 0, !dbg !4891
  br i1 %tobool27, label %if.then28, label %if.end29, !dbg !4892

if.then28:                                        ; preds = %if.then23
  store i32 -1, i32* %retval, align 4, !dbg !4893
  br label %return, !dbg !4893

if.end29:                                         ; preds = %if.then23
  br label %if.end30, !dbg !4894

if.end30:                                         ; preds = %if.end29, %if.end18
  %21 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !4895
  %packet = getelementptr inbounds %struct.psmouse, %struct.psmouse* %21, i32 0, i32 7, !dbg !4896
  %arraydecay31 = getelementptr inbounds [8 x i8], [8 x i8]* %packet, i64 0, i64 0, !dbg !4897
  %arraydecay32 = getelementptr inbounds [8 x i8], [8 x i8]* %buf, i64 0, i64 0, !dbg !4897
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %arraydecay31, i8* align 1 %arraydecay32, i64 8, i1 false), !dbg !4897
  store i32 0, i32* %retval, align 4, !dbg !4898
  br label %return, !dbg !4898

return:                                           ; preds = %if.end30, %if.then28, %if.then17
  %22 = load i32, i32* %retval, align 4, !dbg !4899
  ret i32 %22, !dbg !4899
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @alps_disconnect(%struct.psmouse* %psmouse) #0 !dbg !4900 {
entry:
  %psmouse.addr = alloca %struct.psmouse*, align 8
  %priv = alloca %struct.alps_data*, align 8
  store %struct.psmouse* %psmouse, %struct.psmouse** %psmouse.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.psmouse** %psmouse.addr, metadata !4901, metadata !DIExpression()), !dbg !4902
  call void @llvm.dbg.declare(metadata %struct.alps_data** %priv, metadata !4903, metadata !DIExpression()), !dbg !4904
  %0 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !4905
  %private = getelementptr inbounds %struct.psmouse, %struct.psmouse* %0, i32 0, i32 0, !dbg !4906
  %1 = load i8*, i8** %private, align 8, !dbg !4906
  %2 = bitcast i8* %1 to %struct.alps_data*, !dbg !4905
  store %struct.alps_data* %2, %struct.alps_data** %priv, align 8, !dbg !4904
  %3 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !4907
  %call = call i32 @psmouse_reset(%struct.psmouse* %3) #10, !dbg !4908
  %4 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !4909
  %timer = getelementptr inbounds %struct.alps_data, %struct.alps_data* %4, i32 0, i32 30, !dbg !4909
  %call1 = call i32 @del_timer(%struct.timer_list* %timer) #10, !dbg !4909
  %5 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !4910
  %dev2 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %5, i32 0, i32 1, !dbg !4912
  %6 = load %struct.input_dev*, %struct.input_dev** %dev2, align 8, !dbg !4912
  %tobool = icmp ne %struct.input_dev* %6, null, !dbg !4910
  br i1 %tobool, label %if.then, label %if.end, !dbg !4913

if.then:                                          ; preds = %entry
  %7 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !4914
  %dev22 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %7, i32 0, i32 1, !dbg !4915
  %8 = load %struct.input_dev*, %struct.input_dev** %dev22, align 8, !dbg !4915
  call void @input_unregister_device(%struct.input_dev* %8) #10, !dbg !4916
  br label %if.end, !dbg !4916

if.end:                                           ; preds = %if.then, %entry
  %9 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !4917
  %dev3 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %9, i32 0, i32 2, !dbg !4919
  %10 = load %struct.input_dev*, %struct.input_dev** %dev3, align 8, !dbg !4919
  %11 = bitcast %struct.input_dev* %10 to i8*, !dbg !4917
  %call3 = call zeroext i1 @IS_ERR_OR_NULL(i8* %11) #10, !dbg !4920
  br i1 %call3, label %if.end6, label %if.then4, !dbg !4921

if.then4:                                         ; preds = %if.end
  %12 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !4922
  %dev35 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %12, i32 0, i32 2, !dbg !4923
  %13 = load %struct.input_dev*, %struct.input_dev** %dev35, align 8, !dbg !4923
  call void @input_unregister_device(%struct.input_dev* %13) #10, !dbg !4924
  br label %if.end6, !dbg !4924

if.end6:                                          ; preds = %if.then4, %if.end
  %14 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !4925
  %15 = bitcast %struct.alps_data* %14 to i8*, !dbg !4925
  call void @kfree(i8* %15) #10, !dbg !4926
  ret void, !dbg !4927
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @alps_reconnect(%struct.psmouse* %psmouse) #0 !dbg !4928 {
entry:
  %retval = alloca i32, align 4
  %psmouse.addr = alloca %struct.psmouse*, align 8
  %priv = alloca %struct.alps_data*, align 8
  store %struct.psmouse* %psmouse, %struct.psmouse** %psmouse.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.psmouse** %psmouse.addr, metadata !4929, metadata !DIExpression()), !dbg !4930
  call void @llvm.dbg.declare(metadata %struct.alps_data** %priv, metadata !4931, metadata !DIExpression()), !dbg !4932
  %0 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !4933
  %private = getelementptr inbounds %struct.psmouse, %struct.psmouse* %0, i32 0, i32 0, !dbg !4934
  %1 = load i8*, i8** %private, align 8, !dbg !4934
  %2 = bitcast i8* %1 to %struct.alps_data*, !dbg !4933
  store %struct.alps_data* %2, %struct.alps_data** %priv, align 8, !dbg !4932
  %3 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !4935
  %call = call i32 @psmouse_reset(%struct.psmouse* %3) #10, !dbg !4936
  %4 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !4937
  %5 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !4939
  %call1 = call i32 @alps_identify(%struct.psmouse* %4, %struct.alps_data* %5) #10, !dbg !4940
  %cmp = icmp slt i32 %call1, 0, !dbg !4941
  br i1 %cmp, label %if.then, label %if.end, !dbg !4942

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !4943
  br label %return, !dbg !4943

if.end:                                           ; preds = %entry
  %6 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !4944
  %hw_init = getelementptr inbounds %struct.alps_data, %struct.alps_data* %6, i32 0, i32 20, !dbg !4945
  %7 = load i32 (%struct.psmouse*)*, i32 (%struct.psmouse*)** %hw_init, align 8, !dbg !4945
  %8 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !4946
  %call2 = call i32 %7(%struct.psmouse* %8) #10, !dbg !4944
  store i32 %call2, i32* %retval, align 4, !dbg !4947
  br label %return, !dbg !4947

return:                                           ; preds = %if.end, %if.then
  %9 = load i32, i32* %retval, align 4, !dbg !4948
  ret i32 %9, !dbg !4948
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: noredzone
declare dso_local i32 @psmouse_reset(%struct.psmouse*) #2

; Function Attrs: noredzone
declare dso_local void @kfree(i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @alps_detect(%struct.psmouse* %psmouse, i1 zeroext %set_properties) #0 !dbg !4949 {
entry:
  %retval = alloca i32, align 4
  %psmouse.addr = alloca %struct.psmouse*, align 8
  %set_properties.addr = alloca i8, align 1
  %priv = alloca %struct.alps_data*, align 8
  %error = alloca i32, align 4
  store %struct.psmouse* %psmouse, %struct.psmouse** %psmouse.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.psmouse** %psmouse.addr, metadata !4950, metadata !DIExpression()), !dbg !4951
  %frombool = zext i1 %set_properties to i8
  store i8 %frombool, i8* %set_properties.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %set_properties.addr, metadata !4952, metadata !DIExpression()), !dbg !4953
  call void @llvm.dbg.declare(metadata %struct.alps_data** %priv, metadata !4954, metadata !DIExpression()), !dbg !4955
  call void @llvm.dbg.declare(metadata i32* %error, metadata !4956, metadata !DIExpression()), !dbg !4957
  %0 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !4958
  %call = call i32 @alps_identify(%struct.psmouse* %0, %struct.alps_data* null) #10, !dbg !4959
  store i32 %call, i32* %error, align 4, !dbg !4960
  %1 = load i32, i32* %error, align 4, !dbg !4961
  %tobool = icmp ne i32 %1, 0, !dbg !4961
  br i1 %tobool, label %if.then, label %if.end, !dbg !4963

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %error, align 4, !dbg !4964
  store i32 %2, i32* %retval, align 4, !dbg !4965
  br label %return, !dbg !4965

if.end:                                           ; preds = %entry
  %3 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !4966
  %call1 = call zeroext i1 @alps_is_cs19_trackpoint(%struct.psmouse* %3) #10, !dbg !4968
  br i1 %call1, label %if.then2, label %if.end3, !dbg !4969

if.then2:                                         ; preds = %if.end
  store i32 -22, i32* %retval, align 4, !dbg !4970
  br label %return, !dbg !4970

if.end3:                                          ; preds = %if.end
  %4 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !4972
  %call4 = call i32 @psmouse_reset(%struct.psmouse* %4) #10, !dbg !4973
  %call5 = call i8* @kzalloc(i64 368, i32 3264) #10, !dbg !4974
  %5 = bitcast i8* %call5 to %struct.alps_data*, !dbg !4974
  store %struct.alps_data* %5, %struct.alps_data** %priv, align 8, !dbg !4975
  %6 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !4976
  %tobool6 = icmp ne %struct.alps_data* %6, null, !dbg !4976
  br i1 %tobool6, label %if.end8, label %if.then7, !dbg !4978

if.then7:                                         ; preds = %if.end3
  store i32 -12, i32* %retval, align 4, !dbg !4979
  br label %return, !dbg !4979

if.end8:                                          ; preds = %if.end3
  %7 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !4980
  %8 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !4981
  %call9 = call i32 @alps_identify(%struct.psmouse* %7, %struct.alps_data* %8) #10, !dbg !4982
  store i32 %call9, i32* %error, align 4, !dbg !4983
  %9 = load i32, i32* %error, align 4, !dbg !4984
  %tobool10 = icmp ne i32 %9, 0, !dbg !4984
  br i1 %tobool10, label %if.then11, label %if.end12, !dbg !4986

if.then11:                                        ; preds = %if.end8
  %10 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !4987
  %11 = bitcast %struct.alps_data* %10 to i8*, !dbg !4987
  call void @kfree(i8* %11) #10, !dbg !4989
  %12 = load i32, i32* %error, align 4, !dbg !4990
  store i32 %12, i32* %retval, align 4, !dbg !4991
  br label %return, !dbg !4991

if.end12:                                         ; preds = %if.end8
  %13 = load i8, i8* %set_properties.addr, align 1, !dbg !4992
  %tobool13 = trunc i8 %13 to i1, !dbg !4992
  br i1 %tobool13, label %if.then14, label %if.else, !dbg !4994

if.then14:                                        ; preds = %if.end12
  %14 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !4995
  %vendor = getelementptr inbounds %struct.psmouse, %struct.psmouse* %14, i32 0, i32 4, !dbg !4997
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8** %vendor, align 8, !dbg !4998
  %15 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !4999
  %flags = getelementptr inbounds %struct.alps_data, %struct.alps_data* %15, i32 0, i32 13, !dbg !5000
  %16 = load i32, i32* %flags, align 8, !dbg !5000
  %and = and i32 %16, 2, !dbg !5001
  %tobool15 = icmp ne i32 %and, 0, !dbg !4999
  %17 = zext i1 %tobool15 to i64, !dbg !4999
  %cond = select i1 %tobool15, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.6, i64 0, i64 0), !dbg !4999
  %18 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !5002
  %name = getelementptr inbounds %struct.psmouse, %struct.psmouse* %18, i32 0, i32 5, !dbg !5003
  store i8* %cond, i8** %name, align 8, !dbg !5004
  %19 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !5005
  %proto_version = getelementptr inbounds %struct.alps_data, %struct.alps_data* %19, i32 0, i32 8, !dbg !5006
  %20 = load i16, i16* %proto_version, align 4, !dbg !5006
  %conv = zext i16 %20 to i32, !dbg !5005
  %21 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !5007
  %model = getelementptr inbounds %struct.psmouse, %struct.psmouse* %21, i32 0, i32 14, !dbg !5008
  store i32 %conv, i32* %model, align 8, !dbg !5009
  br label %if.end16, !dbg !5010

if.else:                                          ; preds = %if.end12
  %22 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !5011
  %23 = bitcast %struct.alps_data* %22 to i8*, !dbg !5011
  call void @kfree(i8* %23) #10, !dbg !5013
  %24 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !5014
  %private = getelementptr inbounds %struct.psmouse, %struct.psmouse* %24, i32 0, i32 0, !dbg !5015
  store i8* null, i8** %private, align 8, !dbg !5016
  br label %if.end16

if.end16:                                         ; preds = %if.else, %if.then14
  store i32 0, i32* %retval, align 4, !dbg !5017
  br label %return, !dbg !5017

return:                                           ; preds = %if.end16, %if.then11, %if.then7, %if.then2, %if.then
  %25 = load i32, i32* %retval, align 4, !dbg !5018
  ret i32 %25, !dbg !5018
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @alps_identify(%struct.psmouse* %psmouse, %struct.alps_data* %priv) #0 !dbg !5019 {
entry:
  %retval = alloca i32, align 4
  %psmouse.addr = alloca %struct.psmouse*, align 8
  %priv.addr = alloca %struct.alps_data*, align 8
  %protocol = alloca %struct.alps_protocol_info*, align 8
  %e6 = alloca [4 x i8], align 1
  %e7 = alloca [4 x i8], align 1
  %ec = alloca [4 x i8], align 1
  %error = alloca i32, align 4
  store %struct.psmouse* %psmouse, %struct.psmouse** %psmouse.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.psmouse** %psmouse.addr, metadata !5022, metadata !DIExpression()), !dbg !5023
  store %struct.alps_data* %priv, %struct.alps_data** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.alps_data** %priv.addr, metadata !5024, metadata !DIExpression()), !dbg !5025
  call void @llvm.dbg.declare(metadata %struct.alps_protocol_info** %protocol, metadata !5026, metadata !DIExpression()), !dbg !5028
  call void @llvm.dbg.declare(metadata [4 x i8]* %e6, metadata !5029, metadata !DIExpression()), !dbg !5031
  call void @llvm.dbg.declare(metadata [4 x i8]* %e7, metadata !5032, metadata !DIExpression()), !dbg !5033
  call void @llvm.dbg.declare(metadata [4 x i8]* %ec, metadata !5034, metadata !DIExpression()), !dbg !5035
  call void @llvm.dbg.declare(metadata i32* %error, metadata !5036, metadata !DIExpression()), !dbg !5037
  %0 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !5038
  %arraydecay = getelementptr inbounds [4 x i8], [4 x i8]* %e6, i64 0, i64 0, !dbg !5040
  %call = call i32 @alps_rpt_cmd(%struct.psmouse* %0, i32 4328, i32 230, i8* %arraydecay) #10, !dbg !5041
  %tobool = icmp ne i32 %call, 0, !dbg !5041
  br i1 %tobool, label %if.then, label %if.end, !dbg !5042

if.then:                                          ; preds = %entry
  store i32 -5, i32* %retval, align 4, !dbg !5043
  br label %return, !dbg !5043

if.end:                                           ; preds = %entry
  %arrayidx = getelementptr [4 x i8], [4 x i8]* %e6, i64 0, i64 0, !dbg !5044
  %1 = load i8, i8* %arrayidx, align 1, !dbg !5044
  %conv = zext i8 %1 to i32, !dbg !5044
  %and = and i32 %conv, 248, !dbg !5046
  %cmp = icmp ne i32 %and, 0, !dbg !5047
  br i1 %cmp, label %if.then15, label %lor.lhs.false, !dbg !5048

lor.lhs.false:                                    ; preds = %if.end
  %arrayidx2 = getelementptr [4 x i8], [4 x i8]* %e6, i64 0, i64 1, !dbg !5049
  %2 = load i8, i8* %arrayidx2, align 1, !dbg !5049
  %conv3 = zext i8 %2 to i32, !dbg !5049
  %cmp4 = icmp ne i32 %conv3, 0, !dbg !5050
  br i1 %cmp4, label %if.then15, label %lor.lhs.false6, !dbg !5051

lor.lhs.false6:                                   ; preds = %lor.lhs.false
  %arrayidx7 = getelementptr [4 x i8], [4 x i8]* %e6, i64 0, i64 2, !dbg !5052
  %3 = load i8, i8* %arrayidx7, align 1, !dbg !5052
  %conv8 = zext i8 %3 to i32, !dbg !5052
  %cmp9 = icmp ne i32 %conv8, 10, !dbg !5053
  br i1 %cmp9, label %land.lhs.true, label %if.end16, !dbg !5054

land.lhs.true:                                    ; preds = %lor.lhs.false6
  %arrayidx11 = getelementptr [4 x i8], [4 x i8]* %e6, i64 0, i64 2, !dbg !5055
  %4 = load i8, i8* %arrayidx11, align 1, !dbg !5055
  %conv12 = zext i8 %4 to i32, !dbg !5055
  %cmp13 = icmp ne i32 %conv12, 100, !dbg !5056
  br i1 %cmp13, label %if.then15, label %if.end16, !dbg !5057

if.then15:                                        ; preds = %land.lhs.true, %lor.lhs.false, %if.end
  store i32 -22, i32* %retval, align 4, !dbg !5058
  br label %return, !dbg !5058

if.end16:                                         ; preds = %land.lhs.true, %lor.lhs.false6
  %5 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !5059
  %arraydecay17 = getelementptr inbounds [4 x i8], [4 x i8]* %e7, i64 0, i64 0, !dbg !5061
  %call18 = call i32 @alps_rpt_cmd(%struct.psmouse* %5, i32 4328, i32 231, i8* %arraydecay17) #10, !dbg !5062
  %tobool19 = icmp ne i32 %call18, 0, !dbg !5062
  br i1 %tobool19, label %if.then27, label %lor.lhs.false20, !dbg !5063

lor.lhs.false20:                                  ; preds = %if.end16
  %6 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !5064
  %arraydecay21 = getelementptr inbounds [4 x i8], [4 x i8]* %ec, i64 0, i64 0, !dbg !5065
  %call22 = call i32 @alps_rpt_cmd(%struct.psmouse* %6, i32 4328, i32 236, i8* %arraydecay21) #10, !dbg !5066
  %tobool23 = icmp ne i32 %call22, 0, !dbg !5066
  br i1 %tobool23, label %if.then27, label %lor.lhs.false24, !dbg !5067

lor.lhs.false24:                                  ; preds = %lor.lhs.false20
  %7 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !5068
  %call25 = call i32 @alps_exit_command_mode(%struct.psmouse* %7) #10, !dbg !5069
  %tobool26 = icmp ne i32 %call25, 0, !dbg !5069
  br i1 %tobool26, label %if.then27, label %if.end28, !dbg !5070

if.then27:                                        ; preds = %lor.lhs.false24, %lor.lhs.false20, %if.end16
  store i32 -5, i32* %retval, align 4, !dbg !5071
  br label %return, !dbg !5071

if.end28:                                         ; preds = %lor.lhs.false24
  %arraydecay29 = getelementptr inbounds [4 x i8], [4 x i8]* %e7, i64 0, i64 0, !dbg !5072
  %arraydecay30 = getelementptr inbounds [4 x i8], [4 x i8]* %ec, i64 0, i64 0, !dbg !5073
  %call31 = call %struct.alps_protocol_info* @alps_match_table(i8* %arraydecay29, i8* %arraydecay30) #10, !dbg !5074
  store %struct.alps_protocol_info* %call31, %struct.alps_protocol_info** %protocol, align 8, !dbg !5075
  %8 = load %struct.alps_protocol_info*, %struct.alps_protocol_info** %protocol, align 8, !dbg !5076
  %tobool32 = icmp ne %struct.alps_protocol_info* %8, null, !dbg !5076
  br i1 %tobool32, label %if.end180, label %if.then33, !dbg !5078

if.then33:                                        ; preds = %if.end28
  %arrayidx34 = getelementptr [4 x i8], [4 x i8]* %e7, i64 0, i64 0, !dbg !5079
  %9 = load i8, i8* %arrayidx34, align 1, !dbg !5079
  %conv35 = zext i8 %9 to i32, !dbg !5079
  %cmp36 = icmp eq i32 %conv35, 115, !dbg !5082
  br i1 %cmp36, label %land.lhs.true38, label %if.else, !dbg !5083

land.lhs.true38:                                  ; preds = %if.then33
  %arrayidx39 = getelementptr [4 x i8], [4 x i8]* %e7, i64 0, i64 1, !dbg !5084
  %10 = load i8, i8* %arrayidx39, align 1, !dbg !5084
  %conv40 = zext i8 %10 to i32, !dbg !5084
  %cmp41 = icmp eq i32 %conv40, 2, !dbg !5085
  br i1 %cmp41, label %land.lhs.true43, label %if.else, !dbg !5086

land.lhs.true43:                                  ; preds = %land.lhs.true38
  %arrayidx44 = getelementptr [4 x i8], [4 x i8]* %e7, i64 0, i64 2, !dbg !5087
  %11 = load i8, i8* %arrayidx44, align 1, !dbg !5087
  %conv45 = zext i8 %11 to i32, !dbg !5087
  %cmp46 = icmp eq i32 %conv45, 100, !dbg !5088
  br i1 %cmp46, label %land.lhs.true48, label %if.else, !dbg !5089

land.lhs.true48:                                  ; preds = %land.lhs.true43
  %arrayidx49 = getelementptr [4 x i8], [4 x i8]* %ec, i64 0, i64 2, !dbg !5090
  %12 = load i8, i8* %arrayidx49, align 1, !dbg !5090
  %conv50 = zext i8 %12 to i32, !dbg !5090
  %cmp51 = icmp eq i32 %conv50, 138, !dbg !5091
  br i1 %cmp51, label %if.then53, label %if.else, !dbg !5092

if.then53:                                        ; preds = %land.lhs.true48
  store %struct.alps_protocol_info* @alps_v4_protocol_data, %struct.alps_protocol_info** %protocol, align 8, !dbg !5093
  br label %if.end179, !dbg !5095

if.else:                                          ; preds = %land.lhs.true48, %land.lhs.true43, %land.lhs.true38, %if.then33
  %arrayidx54 = getelementptr [4 x i8], [4 x i8]* %e7, i64 0, i64 0, !dbg !5096
  %13 = load i8, i8* %arrayidx54, align 1, !dbg !5096
  %conv55 = zext i8 %13 to i32, !dbg !5096
  %cmp56 = icmp eq i32 %conv55, 115, !dbg !5098
  br i1 %cmp56, label %land.lhs.true58, label %if.else84, !dbg !5099

land.lhs.true58:                                  ; preds = %if.else
  %arrayidx59 = getelementptr [4 x i8], [4 x i8]* %e7, i64 0, i64 1, !dbg !5100
  %14 = load i8, i8* %arrayidx59, align 1, !dbg !5100
  %conv60 = zext i8 %14 to i32, !dbg !5100
  %cmp61 = icmp eq i32 %conv60, 3, !dbg !5101
  br i1 %cmp61, label %land.lhs.true63, label %if.else84, !dbg !5102

land.lhs.true63:                                  ; preds = %land.lhs.true58
  %arrayidx64 = getelementptr [4 x i8], [4 x i8]* %e7, i64 0, i64 2, !dbg !5103
  %15 = load i8, i8* %arrayidx64, align 1, !dbg !5103
  %conv65 = zext i8 %15 to i32, !dbg !5103
  %cmp66 = icmp eq i32 %conv65, 80, !dbg !5104
  br i1 %cmp66, label %land.lhs.true68, label %if.else84, !dbg !5105

land.lhs.true68:                                  ; preds = %land.lhs.true63
  %arrayidx69 = getelementptr [4 x i8], [4 x i8]* %ec, i64 0, i64 0, !dbg !5106
  %16 = load i8, i8* %arrayidx69, align 1, !dbg !5106
  %conv70 = zext i8 %16 to i32, !dbg !5106
  %cmp71 = icmp eq i32 %conv70, 115, !dbg !5107
  br i1 %cmp71, label %land.lhs.true73, label %if.else84, !dbg !5108

land.lhs.true73:                                  ; preds = %land.lhs.true68
  %arrayidx74 = getelementptr [4 x i8], [4 x i8]* %ec, i64 0, i64 1, !dbg !5109
  %17 = load i8, i8* %arrayidx74, align 1, !dbg !5109
  %conv75 = zext i8 %17 to i32, !dbg !5109
  %cmp76 = icmp eq i32 %conv75, 1, !dbg !5110
  br i1 %cmp76, label %if.then83, label %lor.lhs.false78, !dbg !5111

lor.lhs.false78:                                  ; preds = %land.lhs.true73
  %arrayidx79 = getelementptr [4 x i8], [4 x i8]* %ec, i64 0, i64 1, !dbg !5112
  %18 = load i8, i8* %arrayidx79, align 1, !dbg !5112
  %conv80 = zext i8 %18 to i32, !dbg !5112
  %cmp81 = icmp eq i32 %conv80, 2, !dbg !5113
  br i1 %cmp81, label %if.then83, label %if.else84, !dbg !5114

if.then83:                                        ; preds = %lor.lhs.false78, %land.lhs.true73
  store %struct.alps_protocol_info* @alps_v5_protocol_data, %struct.alps_protocol_info** %protocol, align 8, !dbg !5115
  br label %if.end178, !dbg !5117

if.else84:                                        ; preds = %lor.lhs.false78, %land.lhs.true68, %land.lhs.true63, %land.lhs.true58, %if.else
  %arrayidx85 = getelementptr [4 x i8], [4 x i8]* %ec, i64 0, i64 0, !dbg !5118
  %19 = load i8, i8* %arrayidx85, align 1, !dbg !5118
  %conv86 = zext i8 %19 to i32, !dbg !5118
  %cmp87 = icmp eq i32 %conv86, 136, !dbg !5120
  br i1 %cmp87, label %land.lhs.true89, label %if.else102, !dbg !5121

land.lhs.true89:                                  ; preds = %if.else84
  %arrayidx90 = getelementptr [4 x i8], [4 x i8]* %ec, i64 0, i64 1, !dbg !5122
  %20 = load i8, i8* %arrayidx90, align 1, !dbg !5122
  %conv91 = zext i8 %20 to i32, !dbg !5122
  %and92 = and i32 %conv91, 240, !dbg !5123
  %cmp93 = icmp eq i32 %and92, 176, !dbg !5124
  br i1 %cmp93, label %if.then101, label %lor.lhs.false95, !dbg !5125

lor.lhs.false95:                                  ; preds = %land.lhs.true89
  %arrayidx96 = getelementptr [4 x i8], [4 x i8]* %ec, i64 0, i64 1, !dbg !5126
  %21 = load i8, i8* %arrayidx96, align 1, !dbg !5126
  %conv97 = zext i8 %21 to i32, !dbg !5126
  %and98 = and i32 %conv97, 240, !dbg !5127
  %cmp99 = icmp eq i32 %and98, 192, !dbg !5128
  br i1 %cmp99, label %if.then101, label %if.else102, !dbg !5129

if.then101:                                       ; preds = %lor.lhs.false95, %land.lhs.true89
  store %struct.alps_protocol_info* @alps_v7_protocol_data, %struct.alps_protocol_info** %protocol, align 8, !dbg !5130
  br label %if.end177, !dbg !5132

if.else102:                                       ; preds = %lor.lhs.false95, %if.else84
  %arrayidx103 = getelementptr [4 x i8], [4 x i8]* %ec, i64 0, i64 0, !dbg !5133
  %22 = load i8, i8* %arrayidx103, align 1, !dbg !5133
  %conv104 = zext i8 %22 to i32, !dbg !5133
  %cmp105 = icmp eq i32 %conv104, 136, !dbg !5135
  br i1 %cmp105, label %land.lhs.true107, label %if.else113, !dbg !5136

land.lhs.true107:                                 ; preds = %if.else102
  %arrayidx108 = getelementptr [4 x i8], [4 x i8]* %ec, i64 0, i64 1, !dbg !5137
  %23 = load i8, i8* %arrayidx108, align 1, !dbg !5137
  %conv109 = zext i8 %23 to i32, !dbg !5137
  %cmp110 = icmp eq i32 %conv109, 8, !dbg !5138
  br i1 %cmp110, label %if.then112, label %if.else113, !dbg !5139

if.then112:                                       ; preds = %land.lhs.true107
  store %struct.alps_protocol_info* @alps_v3_rushmore_data, %struct.alps_protocol_info** %protocol, align 8, !dbg !5140
  br label %if.end176, !dbg !5142

if.else113:                                       ; preds = %land.lhs.true107, %if.else102
  %arrayidx114 = getelementptr [4 x i8], [4 x i8]* %ec, i64 0, i64 0, !dbg !5143
  %24 = load i8, i8* %arrayidx114, align 1, !dbg !5143
  %conv115 = zext i8 %24 to i32, !dbg !5143
  %cmp116 = icmp eq i32 %conv115, 136, !dbg !5145
  br i1 %cmp116, label %land.lhs.true118, label %if.else134, !dbg !5146

land.lhs.true118:                                 ; preds = %if.else113
  %arrayidx119 = getelementptr [4 x i8], [4 x i8]* %ec, i64 0, i64 1, !dbg !5147
  %25 = load i8, i8* %arrayidx119, align 1, !dbg !5147
  %conv120 = zext i8 %25 to i32, !dbg !5147
  %cmp121 = icmp eq i32 %conv120, 7, !dbg !5148
  br i1 %cmp121, label %land.lhs.true123, label %if.else134, !dbg !5149

land.lhs.true123:                                 ; preds = %land.lhs.true118
  %arrayidx124 = getelementptr [4 x i8], [4 x i8]* %ec, i64 0, i64 2, !dbg !5150
  %26 = load i8, i8* %arrayidx124, align 1, !dbg !5150
  %conv125 = zext i8 %26 to i32, !dbg !5150
  %cmp126 = icmp sge i32 %conv125, 144, !dbg !5151
  br i1 %cmp126, label %land.lhs.true128, label %if.else134, !dbg !5152

land.lhs.true128:                                 ; preds = %land.lhs.true123
  %arrayidx129 = getelementptr [4 x i8], [4 x i8]* %ec, i64 0, i64 2, !dbg !5153
  %27 = load i8, i8* %arrayidx129, align 1, !dbg !5153
  %conv130 = zext i8 %27 to i32, !dbg !5153
  %cmp131 = icmp sle i32 %conv130, 157, !dbg !5154
  br i1 %cmp131, label %if.then133, label %if.else134, !dbg !5155

if.then133:                                       ; preds = %land.lhs.true128
  store %struct.alps_protocol_info* @alps_v3_protocol_data, %struct.alps_protocol_info** %protocol, align 8, !dbg !5156
  br label %if.end175, !dbg !5158

if.else134:                                       ; preds = %land.lhs.true128, %land.lhs.true123, %land.lhs.true118, %if.else113
  %arrayidx135 = getelementptr [4 x i8], [4 x i8]* %e7, i64 0, i64 0, !dbg !5159
  %28 = load i8, i8* %arrayidx135, align 1, !dbg !5159
  %conv136 = zext i8 %28 to i32, !dbg !5159
  %cmp137 = icmp eq i32 %conv136, 115, !dbg !5161
  br i1 %cmp137, label %land.lhs.true139, label %if.else155, !dbg !5162

land.lhs.true139:                                 ; preds = %if.else134
  %arrayidx140 = getelementptr [4 x i8], [4 x i8]* %e7, i64 0, i64 1, !dbg !5163
  %29 = load i8, i8* %arrayidx140, align 1, !dbg !5163
  %conv141 = zext i8 %29 to i32, !dbg !5163
  %cmp142 = icmp eq i32 %conv141, 3, !dbg !5164
  br i1 %cmp142, label %land.lhs.true144, label %if.else155, !dbg !5165

land.lhs.true144:                                 ; preds = %land.lhs.true139
  %arrayidx145 = getelementptr [4 x i8], [4 x i8]* %e7, i64 0, i64 2, !dbg !5166
  %30 = load i8, i8* %arrayidx145, align 1, !dbg !5166
  %conv146 = zext i8 %30 to i32, !dbg !5166
  %cmp147 = icmp eq i32 %conv146, 20, !dbg !5167
  br i1 %cmp147, label %if.then154, label %lor.lhs.false149, !dbg !5168

lor.lhs.false149:                                 ; preds = %land.lhs.true144
  %arrayidx150 = getelementptr [4 x i8], [4 x i8]* %e7, i64 0, i64 2, !dbg !5169
  %31 = load i8, i8* %arrayidx150, align 1, !dbg !5169
  %conv151 = zext i8 %31 to i32, !dbg !5169
  %cmp152 = icmp eq i32 %conv151, 40, !dbg !5170
  br i1 %cmp152, label %if.then154, label %if.else155, !dbg !5171

if.then154:                                       ; preds = %lor.lhs.false149, %land.lhs.true144
  store %struct.alps_protocol_info* @alps_v8_protocol_data, %struct.alps_protocol_info** %protocol, align 8, !dbg !5172
  br label %if.end174, !dbg !5174

if.else155:                                       ; preds = %lor.lhs.false149, %land.lhs.true139, %if.else134
  %arrayidx156 = getelementptr [4 x i8], [4 x i8]* %e7, i64 0, i64 0, !dbg !5175
  %32 = load i8, i8* %arrayidx156, align 1, !dbg !5175
  %conv157 = zext i8 %32 to i32, !dbg !5175
  %cmp158 = icmp eq i32 %conv157, 115, !dbg !5177
  br i1 %cmp158, label %land.lhs.true160, label %if.else173, !dbg !5178

land.lhs.true160:                                 ; preds = %if.else155
  %arrayidx161 = getelementptr [4 x i8], [4 x i8]* %e7, i64 0, i64 1, !dbg !5179
  %33 = load i8, i8* %arrayidx161, align 1, !dbg !5179
  %conv162 = zext i8 %33 to i32, !dbg !5179
  %cmp163 = icmp eq i32 %conv162, 3, !dbg !5180
  br i1 %cmp163, label %land.lhs.true165, label %if.else173, !dbg !5181

land.lhs.true165:                                 ; preds = %land.lhs.true160
  %arrayidx166 = getelementptr [4 x i8], [4 x i8]* %e7, i64 0, i64 2, !dbg !5182
  %34 = load i8, i8* %arrayidx166, align 1, !dbg !5182
  %conv167 = zext i8 %34 to i32, !dbg !5182
  %cmp168 = icmp eq i32 %conv167, 200, !dbg !5183
  br i1 %cmp168, label %if.then170, label %if.else173, !dbg !5184

if.then170:                                       ; preds = %land.lhs.true165
  store %struct.alps_protocol_info* @alps_v9_protocol_data, %struct.alps_protocol_info** %protocol, align 8, !dbg !5185
  %35 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !5187
  %ps2dev = getelementptr inbounds %struct.psmouse, %struct.psmouse* %35, i32 0, i32 2, !dbg !5187
  %serio = getelementptr inbounds %struct.ps2dev, %struct.ps2dev* %ps2dev, i32 0, i32 0, !dbg !5187
  %36 = load %struct.serio*, %struct.serio** %serio, align 8, !dbg !5187
  %dev = getelementptr inbounds %struct.serio, %struct.serio* %36, i32 0, i32 18, !dbg !5187
  %arraydecay171 = getelementptr inbounds [4 x i8], [4 x i8]* %e7, i64 0, i64 0, !dbg !5187
  %arraydecay172 = getelementptr inbounds [4 x i8], [4 x i8]* %ec, i64 0, i64 0, !dbg !5187
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.13, i64 0, i64 0), i8* %arraydecay171, i8* %arraydecay172) #11, !dbg !5187
  store i32 -22, i32* %retval, align 4, !dbg !5188
  br label %return, !dbg !5188

if.else173:                                       ; preds = %land.lhs.true165, %land.lhs.true160, %if.else155
  store i32 -22, i32* %retval, align 4, !dbg !5189
  br label %return, !dbg !5189

if.end174:                                        ; preds = %if.then154
  br label %if.end175

if.end175:                                        ; preds = %if.end174, %if.then133
  br label %if.end176

if.end176:                                        ; preds = %if.end175, %if.then112
  br label %if.end177

if.end177:                                        ; preds = %if.end176, %if.then101
  br label %if.end178

if.end178:                                        ; preds = %if.end177, %if.then83
  br label %if.end179

if.end179:                                        ; preds = %if.end178, %if.then53
  br label %if.end180, !dbg !5191

if.end180:                                        ; preds = %if.end179, %if.end28
  %37 = load %struct.alps_data*, %struct.alps_data** %priv.addr, align 8, !dbg !5192
  %tobool181 = icmp ne %struct.alps_data* %37, null, !dbg !5192
  br i1 %tobool181, label %if.then182, label %if.end191, !dbg !5194

if.then182:                                       ; preds = %if.end180
  %38 = load %struct.alps_data*, %struct.alps_data** %priv.addr, align 8, !dbg !5195
  %dev_id = getelementptr inbounds %struct.alps_data, %struct.alps_data* %38, i32 0, i32 11, !dbg !5197
  %arraydecay183 = getelementptr inbounds [3 x i8], [3 x i8]* %dev_id, i64 0, i64 0, !dbg !5198
  %arraydecay184 = getelementptr inbounds [4 x i8], [4 x i8]* %e7, i64 0, i64 0, !dbg !5198
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %arraydecay183, i8* align 1 %arraydecay184, i64 3, i1 false), !dbg !5198
  %39 = load %struct.alps_data*, %struct.alps_data** %priv.addr, align 8, !dbg !5199
  %fw_ver = getelementptr inbounds %struct.alps_data, %struct.alps_data* %39, i32 0, i32 12, !dbg !5200
  %arraydecay185 = getelementptr inbounds [3 x i8], [3 x i8]* %fw_ver, i64 0, i64 0, !dbg !5201
  %arraydecay186 = getelementptr inbounds [4 x i8], [4 x i8]* %ec, i64 0, i64 0, !dbg !5201
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %arraydecay185, i8* align 1 %arraydecay186, i64 3, i1 false), !dbg !5201
  %40 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !5202
  %41 = load %struct.alps_data*, %struct.alps_data** %priv.addr, align 8, !dbg !5203
  %42 = load %struct.alps_protocol_info*, %struct.alps_protocol_info** %protocol, align 8, !dbg !5204
  %call187 = call i32 @alps_set_protocol(%struct.psmouse* %40, %struct.alps_data* %41, %struct.alps_protocol_info* %42) #10, !dbg !5205
  store i32 %call187, i32* %error, align 4, !dbg !5206
  %43 = load i32, i32* %error, align 4, !dbg !5207
  %tobool188 = icmp ne i32 %43, 0, !dbg !5207
  br i1 %tobool188, label %if.then189, label %if.end190, !dbg !5209

if.then189:                                       ; preds = %if.then182
  %44 = load i32, i32* %error, align 4, !dbg !5210
  store i32 %44, i32* %retval, align 4, !dbg !5211
  br label %return, !dbg !5211

if.end190:                                        ; preds = %if.then182
  br label %if.end191, !dbg !5212

if.end191:                                        ; preds = %if.end190, %if.end180
  store i32 0, i32* %retval, align 4, !dbg !5213
  br label %return, !dbg !5213

return:                                           ; preds = %if.end191, %if.then189, %if.else173, %if.then170, %if.then27, %if.then15, %if.then
  %45 = load i32, i32* %retval, align 4, !dbg !5214
  ret i32 %45, !dbg !5214
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @alps_is_cs19_trackpoint(%struct.psmouse* %psmouse) #0 !dbg !5215 {
entry:
  %retval = alloca i1, align 1
  %psmouse.addr = alloca %struct.psmouse*, align 8
  %param = alloca [2 x i8], align 1
  store %struct.psmouse* %psmouse, %struct.psmouse** %psmouse.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.psmouse** %psmouse.addr, metadata !5218, metadata !DIExpression()), !dbg !5219
  call void @llvm.dbg.declare(metadata [2 x i8]* %param, metadata !5220, metadata !DIExpression()), !dbg !5222
  %0 = bitcast [2 x i8]* %param to i8*, !dbg !5222
  call void @llvm.memset.p0i8.i64(i8* align 1 %0, i8 0, i64 2, i1 false), !dbg !5222
  %1 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !5223
  %ps2dev = getelementptr inbounds %struct.psmouse, %struct.psmouse* %1, i32 0, i32 2, !dbg !5225
  %arraydecay = getelementptr inbounds [2 x i8], [2 x i8]* %param, i64 0, i64 0, !dbg !5226
  %call = call i32 @ps2_command(%struct.ps2dev* %ps2dev, i8* %arraydecay, i32 737) #10, !dbg !5227
  %tobool = icmp ne i32 %call, 0, !dbg !5227
  br i1 %tobool, label %if.then, label %if.end, !dbg !5228

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !5229
  br label %return, !dbg !5229

if.end:                                           ; preds = %entry
  %arrayidx = getelementptr [2 x i8], [2 x i8]* %param, i64 0, i64 0, !dbg !5230
  %2 = load i8, i8* %arrayidx, align 1, !dbg !5230
  %conv = zext i8 %2 to i32, !dbg !5230
  %cmp = icmp eq i32 %conv, 2, !dbg !5231
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !5232

land.rhs:                                         ; preds = %if.end
  %arrayidx2 = getelementptr [2 x i8], [2 x i8]* %param, i64 0, i64 1, !dbg !5233
  %3 = load i8, i8* %arrayidx2, align 1, !dbg !5233
  %conv3 = zext i8 %3 to i32, !dbg !5233
  %and = and i32 %conv3, 240, !dbg !5234
  %cmp4 = icmp eq i32 %and, 32, !dbg !5235
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end
  %4 = phi i1 [ false, %if.end ], [ %cmp4, %land.rhs ], !dbg !5236
  store i1 %4, i1* %retval, align 1, !dbg !5237
  br label %return, !dbg !5237

return:                                           ; preds = %land.end, %if.then
  %5 = load i1, i1* %retval, align 1, !dbg !5238
  ret i1 %5, !dbg !5238
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kzalloc(i64 %size, i32 %flags) #0 !dbg !5239 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !5242, metadata !DIExpression()), !dbg !5246
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !5252, metadata !DIExpression()), !dbg !5253
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !5254, metadata !DIExpression()), !dbg !5255
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !5256, metadata !DIExpression()), !dbg !5257
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !5258, metadata !DIExpression()), !dbg !5262
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !5264, metadata !DIExpression()), !dbg !5268
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !5270, metadata !DIExpression()), !dbg !5274
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !5279, metadata !DIExpression()), !dbg !5280
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !5281, metadata !DIExpression()), !dbg !5282
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !5283, metadata !DIExpression()), !dbg !5284
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !5285, metadata !DIExpression()), !dbg !5286
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !5287, metadata !DIExpression()), !dbg !5288
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !5289, metadata !DIExpression()), !dbg !5290
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !5291, metadata !DIExpression()), !dbg !5292
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !5293, metadata !DIExpression()), !dbg !5294
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !5295, metadata !DIExpression()), !dbg !5296
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !5297, metadata !DIExpression()), !dbg !5298
  %0 = load i64, i64* %size.addr, align 8, !dbg !5299
  %1 = load i32, i32* %flags.addr, align 4, !dbg !5300
  %or = or i32 %1, 256, !dbg !5301
  store i64 %0, i64* %size.addr.i, align 8
  store i32 %or, i32* %flags.addr.i, align 4
  %2 = load i64, i64* %size.addr.i, align 8, !dbg !5302
  %3 = call i1 @llvm.is.constant.i64(i64 %2) #7, !dbg !5303
  br i1 %3, label %if.then.i, label %if.end9.i, !dbg !5304

if.then.i:                                        ; preds = %entry
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !5305
  %cmp.i = icmp ugt i64 %4, 8192, !dbg !5306
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !5307

if.then1.i:                                       ; preds = %if.then.i
  %5 = load i64, i64* %size.addr.i, align 8, !dbg !5308
  %6 = load i32, i32* %flags.addr.i, align 4, !dbg !5309
  store i64 %5, i64* %size.addr.i.i, align 8
  store i32 %6, i32* %flags.addr.i.i, align 4
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !5310
  %call.i.i = call i32 @get_order(i64 %7) #13, !dbg !5311
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !5288
  %8 = load i64, i64* %size.addr.i.i, align 8, !dbg !5312
  %9 = load i32, i32* %flags.addr.i.i, align 4, !dbg !5313
  %10 = load i32, i32* %order.i.i, align 4, !dbg !5314
  store i64 %8, i64* %size.addr.i.i.i, align 8
  store i32 %9, i32* %flags.addr.i.i.i, align 4
  store i32 %10, i32* %order.addr.i.i.i, align 4
  %11 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !5315
  %12 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !5316
  %13 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !5317
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %11, i32 %12, i32 %13) #12, !dbg !5318
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !5318
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !5318
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !5318
  call void @llvm.assume(i1 %maskcond.i.i.i) #7, !dbg !5318
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !5319
  br label %kmalloc.exit, !dbg !5319

if.end.i:                                         ; preds = %if.then.i
  %14 = load i64, i64* %size.addr.i, align 8, !dbg !5320
  store i64 %14, i64* %size.addr.i11.i, align 8
  %15 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5321
  %tobool.i.i = icmp ne i64 %15, 0, !dbg !5321
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !5323

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !5324
  br label %kmalloc_index.exit.i, !dbg !5324

if.end.i.i:                                       ; preds = %if.end.i
  %16 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5325
  %cmp.i.i = icmp ule i64 %16, 8, !dbg !5327
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !5328

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !5329
  br label %kmalloc_index.exit.i, !dbg !5329

if.end2.i.i:                                      ; preds = %if.end.i.i
  %17 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5330
  %cmp3.i.i = icmp ugt i64 %17, 64, !dbg !5332
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !5333

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %18 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5334
  %cmp4.i.i = icmp ule i64 %18, 96, !dbg !5335
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !5336

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !5337
  br label %kmalloc_index.exit.i, !dbg !5337

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %19 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5338
  %cmp7.i.i = icmp ugt i64 %19, 128, !dbg !5340
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !5341

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %20 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5342
  %cmp9.i.i = icmp ule i64 %20, 192, !dbg !5343
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !5344

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !5345
  br label %kmalloc_index.exit.i, !dbg !5345

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %21 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5346
  %cmp12.i.i = icmp ule i64 %21, 8, !dbg !5348
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !5349

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !5350
  br label %kmalloc_index.exit.i, !dbg !5350

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %22 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5351
  %cmp15.i.i = icmp ule i64 %22, 16, !dbg !5353
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !5354

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !5355
  br label %kmalloc_index.exit.i, !dbg !5355

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %23 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5356
  %cmp18.i.i = icmp ule i64 %23, 32, !dbg !5358
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !5359

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !5360
  br label %kmalloc_index.exit.i, !dbg !5360

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %24 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5361
  %cmp21.i.i = icmp ule i64 %24, 64, !dbg !5363
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !5364

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !5365
  br label %kmalloc_index.exit.i, !dbg !5365

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %25 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5366
  %cmp24.i.i = icmp ule i64 %25, 128, !dbg !5368
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !5369

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !5370
  br label %kmalloc_index.exit.i, !dbg !5370

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %26 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5371
  %cmp27.i.i = icmp ule i64 %26, 256, !dbg !5373
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !5374

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !5375
  br label %kmalloc_index.exit.i, !dbg !5375

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %27 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5376
  %cmp30.i.i = icmp ule i64 %27, 512, !dbg !5378
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !5379

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !5380
  br label %kmalloc_index.exit.i, !dbg !5380

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %28 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5381
  %cmp33.i.i = icmp ule i64 %28, 1024, !dbg !5383
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !5384

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !5385
  br label %kmalloc_index.exit.i, !dbg !5385

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5386
  %cmp36.i.i = icmp ule i64 %29, 2048, !dbg !5388
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !5389

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !5390
  br label %kmalloc_index.exit.i, !dbg !5390

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5391
  %cmp39.i.i = icmp ule i64 %30, 4096, !dbg !5393
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !5394

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !5395
  br label %kmalloc_index.exit.i, !dbg !5395

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5396
  %cmp42.i.i = icmp ule i64 %31, 8192, !dbg !5398
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !5399

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !5400
  br label %kmalloc_index.exit.i, !dbg !5400

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5401
  %cmp45.i.i = icmp ule i64 %32, 16384, !dbg !5403
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !5404

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !5405
  br label %kmalloc_index.exit.i, !dbg !5405

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5406
  %cmp48.i.i = icmp ule i64 %33, 32768, !dbg !5408
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !5409

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !5410
  br label %kmalloc_index.exit.i, !dbg !5410

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5411
  %cmp51.i.i = icmp ule i64 %34, 65536, !dbg !5413
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !5414

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !5415
  br label %kmalloc_index.exit.i, !dbg !5415

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5416
  %cmp54.i.i = icmp ule i64 %35, 131072, !dbg !5418
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !5419

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !5420
  br label %kmalloc_index.exit.i, !dbg !5420

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5421
  %cmp57.i.i = icmp ule i64 %36, 262144, !dbg !5423
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !5424

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !5425
  br label %kmalloc_index.exit.i, !dbg !5425

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5426
  %cmp60.i.i = icmp ule i64 %37, 524288, !dbg !5428
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !5429

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !5430
  br label %kmalloc_index.exit.i, !dbg !5430

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5431
  %cmp63.i.i = icmp ule i64 %38, 1048576, !dbg !5433
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !5434

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !5435
  br label %kmalloc_index.exit.i, !dbg !5435

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5436
  %cmp66.i.i = icmp ule i64 %39, 2097152, !dbg !5438
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !5439

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !5440
  br label %kmalloc_index.exit.i, !dbg !5440

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5441
  %cmp69.i.i = icmp ule i64 %40, 4194304, !dbg !5443
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !5444

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !5445
  br label %kmalloc_index.exit.i, !dbg !5445

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5446
  %cmp72.i.i = icmp ule i64 %41, 8388608, !dbg !5448
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !5449

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !5450
  br label %kmalloc_index.exit.i, !dbg !5450

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5451
  %cmp75.i.i = icmp ule i64 %42, 16777216, !dbg !5453
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !5454

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !5455
  br label %kmalloc_index.exit.i, !dbg !5455

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5456
  %cmp78.i.i = icmp ule i64 %43, 33554432, !dbg !5458
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !5459

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !5460
  br label %kmalloc_index.exit.i, !dbg !5460

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5461
  %cmp81.i.i = icmp ule i64 %44, 67108864, !dbg !5463
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !5464

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !5465
  br label %kmalloc_index.exit.i, !dbg !5465

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.25, i64 0, i64 0), i32 382, i32 0, i64 12) #7, !dbg !5466, !srcloc !5469
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 88) #7, !dbg !5470, !srcloc !5473
  unreachable, !dbg !5474

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %45 = load i32, i32* %retval.i.i, align 4, !dbg !5475
  store i32 %45, i32* %index.i, align 4, !dbg !5476
  %46 = load i32, i32* %index.i, align 4, !dbg !5477
  %tobool.i = icmp ne i32 %46, 0, !dbg !5477
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !5479

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !5480
  br label %kmalloc.exit, !dbg !5480

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %47 = load i32, i32* %flags.addr.i, align 4, !dbg !5481
  store i32 %47, i32* %flags.addr.i13.i, align 4
  %48 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !5482
  %and.i.i = and i32 %48, 17, !dbg !5482
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !5482
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !5482
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !5482
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !5482
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !5484

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !5485
  br label %kmalloc_type.exit.i, !dbg !5485

if.end.i16.i:                                     ; preds = %if.end4.i
  %49 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !5486
  %and2.i.i = and i32 %49, 1, !dbg !5487
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !5486
  %50 = zext i1 %tobool3.i.i to i64, !dbg !5486
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !5486
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !5488
  br label %kmalloc_type.exit.i, !dbg !5488

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %51 = load i32, i32* %retval.i12.i, align 4, !dbg !5489
  %idxprom.i = zext i32 %51 to i64, !dbg !5490
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !5490
  %52 = load i32, i32* %index.i, align 4, !dbg !5491
  %idxprom6.i = zext i32 %52 to i64, !dbg !5490
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !5490
  %53 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !5490
  %54 = load i32, i32* %flags.addr.i, align 4, !dbg !5492
  %55 = load i64, i64* %size.addr.i, align 8, !dbg !5493
  store %struct.kmem_cache* %53, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %54, i32* %flags.addr.i17.i, align 4
  store i64 %55, i64* %size.addr.i18.i, align 8
  %56 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !5494
  %57 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !5495
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %56, i32 %57) #12, !dbg !5496
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !5496
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !5496
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !5496
  call void @llvm.assume(i1 %maskcond.i.i) #7, !dbg !5496
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !5257
  %58 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !5497
  %59 = load i8*, i8** %ret.i.i, align 8, !dbg !5498
  %60 = load i64, i64* %size.addr.i18.i, align 8, !dbg !5499
  %61 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !5500
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %58, i8* %59, i64 %60, i32 %61) #12, !dbg !5501
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !5502
  %62 = load i8*, i8** %ret.i.i, align 8, !dbg !5503
  store i8* %62, i8** %retval.i, align 8, !dbg !5504
  br label %kmalloc.exit, !dbg !5504

if.end9.i:                                        ; preds = %entry
  %63 = load i64, i64* %size.addr.i, align 8, !dbg !5505
  %64 = load i32, i32* %flags.addr.i, align 4, !dbg !5506
  %call10.i = call noalias i8* @__kmalloc(i64 %63, i32 %64) #12, !dbg !5507
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !5507
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !5507
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !5507
  call void @llvm.assume(i1 %maskcond.i) #7, !dbg !5507
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !5508
  br label %kmalloc.exit, !dbg !5508

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %65 = load i8*, i8** %retval.i, align 8, !dbg !5509
  ret i8* %65, !dbg !5510
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @kasan_check_write(i8* %p, i32 %size) #0 !dbg !5511 {
entry:
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !5515, metadata !DIExpression()), !dbg !5516
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !5517, metadata !DIExpression()), !dbg !5518
  ret i1 true, !dbg !5519
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @kcsan_check_access(i8* %ptr, i64 %size, i32 %type) #0 !dbg !5520 {
entry:
  %ptr.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %type.addr = alloca i32, align 4
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !5524, metadata !DIExpression()), !dbg !5525
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !5526, metadata !DIExpression()), !dbg !5527
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !5528, metadata !DIExpression()), !dbg !5529
  ret void, !dbg !5530
}

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i64(i64) #5

; Function Attrs: noredzone
declare dso_local void @mutex_lock(%struct.mutex*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @ERR_PTR(i64 %error) #0 !dbg !5531 {
entry:
  %error.addr = alloca i64, align 8
  store i64 %error, i64* %error.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %error.addr, metadata !5535, metadata !DIExpression()), !dbg !5536
  %0 = load i64, i64* %error.addr, align 8, !dbg !5537
  %1 = inttoptr i64 %0 to i8*, !dbg !5538
  ret i8* %1, !dbg !5539
}

; Function Attrs: noredzone
declare dso_local void @mutex_unlock(%struct.mutex*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @alps_report_bare_ps2_packet(%struct.psmouse* %psmouse, i8* %packet, i1 zeroext %report_buttons) #0 !dbg !5540 {
entry:
  %psmouse.addr = alloca %struct.psmouse*, align 8
  %packet.addr = alloca i8*, align 8
  %report_buttons.addr = alloca i8, align 1
  %priv = alloca %struct.alps_data*, align 8
  %dev = alloca %struct.input_dev*, align 8
  %dev2 = alloca %struct.input_dev*, align 8
  store %struct.psmouse* %psmouse, %struct.psmouse** %psmouse.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.psmouse** %psmouse.addr, metadata !5543, metadata !DIExpression()), !dbg !5544
  store i8* %packet, i8** %packet.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %packet.addr, metadata !5545, metadata !DIExpression()), !dbg !5546
  %frombool = zext i1 %report_buttons to i8
  store i8 %frombool, i8* %report_buttons.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %report_buttons.addr, metadata !5547, metadata !DIExpression()), !dbg !5548
  call void @llvm.dbg.declare(metadata %struct.alps_data** %priv, metadata !5549, metadata !DIExpression()), !dbg !5550
  %0 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !5551
  %private = getelementptr inbounds %struct.psmouse, %struct.psmouse* %0, i32 0, i32 0, !dbg !5552
  %1 = load i8*, i8** %private, align 8, !dbg !5552
  %2 = bitcast i8* %1 to %struct.alps_data*, !dbg !5551
  store %struct.alps_data* %2, %struct.alps_data** %priv, align 8, !dbg !5550
  call void @llvm.dbg.declare(metadata %struct.input_dev** %dev, metadata !5553, metadata !DIExpression()), !dbg !5554
  call void @llvm.dbg.declare(metadata %struct.input_dev** %dev2, metadata !5555, metadata !DIExpression()), !dbg !5556
  store %struct.input_dev* null, %struct.input_dev** %dev2, align 8, !dbg !5556
  %3 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !5557
  %proto_version = getelementptr inbounds %struct.alps_data, %struct.alps_data* %3, i32 0, i32 8, !dbg !5559
  %4 = load i16, i16* %proto_version, align 4, !dbg !5559
  %conv = zext i16 %4 to i32, !dbg !5557
  %cmp = icmp eq i32 %conv, 512, !dbg !5560
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !5561

land.lhs.true:                                    ; preds = %entry
  %5 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !5562
  %flags = getelementptr inbounds %struct.alps_data, %struct.alps_data* %5, i32 0, i32 13, !dbg !5563
  %6 = load i32, i32* %flags, align 8, !dbg !5563
  %and = and i32 %6, 2, !dbg !5564
  %tobool = icmp ne i32 %and, 0, !dbg !5564
  br i1 %tobool, label %if.then, label %if.else, !dbg !5565

if.then:                                          ; preds = %land.lhs.true
  %7 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !5566
  %dev22 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %7, i32 0, i32 1, !dbg !5568
  %8 = load %struct.input_dev*, %struct.input_dev** %dev22, align 8, !dbg !5568
  store %struct.input_dev* %8, %struct.input_dev** %dev, align 8, !dbg !5569
  %9 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !5570
  %dev3 = getelementptr inbounds %struct.psmouse, %struct.psmouse* %9, i32 0, i32 1, !dbg !5571
  %10 = load %struct.input_dev*, %struct.input_dev** %dev3, align 8, !dbg !5571
  store %struct.input_dev* %10, %struct.input_dev** %dev2, align 8, !dbg !5572
  br label %if.end15, !dbg !5573

if.else:                                          ; preds = %land.lhs.true, %entry
  %11 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !5574
  %dev34 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %11, i32 0, i32 2, !dbg !5574
  %12 = load %struct.input_dev*, %struct.input_dev** %dev34, align 8, !dbg !5574
  %13 = bitcast %struct.input_dev* %12 to i8*, !dbg !5574
  %call = call zeroext i1 @IS_ERR_OR_NULL(i8* %13) #10, !dbg !5574
  %lnot = xor i1 %call, true, !dbg !5574
  %lnot5 = xor i1 %lnot, true, !dbg !5574
  %lnot.ext = zext i1 %lnot5 to i32, !dbg !5574
  %conv6 = sext i32 %lnot.ext to i64, !dbg !5574
  %tobool7 = icmp ne i64 %conv6, 0, !dbg !5574
  br i1 %tobool7, label %if.then8, label %if.else12, !dbg !5576

if.then8:                                         ; preds = %if.else
  %14 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !5577
  %dev39 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %14, i32 0, i32 2, !dbg !5580
  %15 = load %struct.input_dev*, %struct.input_dev** %dev39, align 8, !dbg !5580
  %16 = bitcast %struct.input_dev* %15 to i8*, !dbg !5577
  %call10 = call zeroext i1 @IS_ERR(i8* %16) #10, !dbg !5581
  br i1 %call10, label %if.end, label %if.then11, !dbg !5582

if.then11:                                        ; preds = %if.then8
  %17 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !5583
  %18 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !5584
  %dev3_register_work = getelementptr inbounds %struct.alps_data, %struct.alps_data* %18, i32 0, i32 5, !dbg !5585
  call void @psmouse_queue_work(%struct.psmouse* %17, %struct.delayed_work* %dev3_register_work, i64 0) #10, !dbg !5586
  br label %if.end, !dbg !5586

if.end:                                           ; preds = %if.then11, %if.then8
  br label %return, !dbg !5587

if.else12:                                        ; preds = %if.else
  %19 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !5588
  %dev313 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %19, i32 0, i32 2, !dbg !5590
  %20 = load %struct.input_dev*, %struct.input_dev** %dev313, align 8, !dbg !5590
  store %struct.input_dev* %20, %struct.input_dev** %dev, align 8, !dbg !5591
  br label %if.end14

if.end14:                                         ; preds = %if.else12
  br label %if.end15

if.end15:                                         ; preds = %if.end14, %if.then
  %21 = load i8, i8* %report_buttons.addr, align 1, !dbg !5592
  %tobool16 = trunc i8 %21 to i1, !dbg !5592
  br i1 %tobool16, label %if.then17, label %if.end26, !dbg !5594

if.then17:                                        ; preds = %if.end15
  %22 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !5595
  %23 = load %struct.input_dev*, %struct.input_dev** %dev2, align 8, !dbg !5596
  %24 = load i8*, i8** %packet.addr, align 8, !dbg !5597
  %arrayidx = getelementptr i8, i8* %24, i64 0, !dbg !5597
  %25 = load i8, i8* %arrayidx, align 1, !dbg !5597
  %conv18 = zext i8 %25 to i32, !dbg !5597
  %and19 = and i32 %conv18, 1, !dbg !5598
  %26 = load i8*, i8** %packet.addr, align 8, !dbg !5599
  %arrayidx20 = getelementptr i8, i8* %26, i64 0, !dbg !5599
  %27 = load i8, i8* %arrayidx20, align 1, !dbg !5599
  %conv21 = zext i8 %27 to i32, !dbg !5599
  %and22 = and i32 %conv21, 2, !dbg !5600
  %28 = load i8*, i8** %packet.addr, align 8, !dbg !5601
  %arrayidx23 = getelementptr i8, i8* %28, i64 0, !dbg !5601
  %29 = load i8, i8* %arrayidx23, align 1, !dbg !5601
  %conv24 = zext i8 %29 to i32, !dbg !5601
  %and25 = and i32 %conv24, 4, !dbg !5602
  call void @alps_report_buttons(%struct.input_dev* %22, %struct.input_dev* %23, i32 %and19, i32 %and22, i32 %and25) #10, !dbg !5603
  br label %if.end26, !dbg !5603

if.end26:                                         ; preds = %if.then17, %if.end15
  %30 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !5604
  %31 = load i8*, i8** %packet.addr, align 8, !dbg !5605
  call void @psmouse_report_standard_motion(%struct.input_dev* %30, i8* %31) #10, !dbg !5606
  %32 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !5607
  call void @input_sync(%struct.input_dev* %32) #10, !dbg !5608
  br label %return, !dbg !5609

return:                                           ; preds = %if.end26, %if.end
  ret void, !dbg !5609
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @alps_handle_interleaved_ps2(%struct.psmouse* %psmouse) #0 !dbg !5610 {
entry:
  %retval.i = alloca i64, align 8
  %m.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m.addr.i, metadata !5611, metadata !DIExpression()), !dbg !5616
  %retval = alloca i32, align 4
  %psmouse.addr = alloca %struct.psmouse*, align 8
  %priv = alloca %struct.alps_data*, align 8
  store %struct.psmouse* %psmouse, %struct.psmouse** %psmouse.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.psmouse** %psmouse.addr, metadata !5620, metadata !DIExpression()), !dbg !5621
  call void @llvm.dbg.declare(metadata %struct.alps_data** %priv, metadata !5622, metadata !DIExpression()), !dbg !5623
  %0 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !5624
  %private = getelementptr inbounds %struct.psmouse, %struct.psmouse* %0, i32 0, i32 0, !dbg !5625
  %1 = load i8*, i8** %private, align 8, !dbg !5625
  %2 = bitcast i8* %1 to %struct.alps_data*, !dbg !5624
  store %struct.alps_data* %2, %struct.alps_data** %priv, align 8, !dbg !5623
  %3 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !5626
  %pktcnt = getelementptr inbounds %struct.psmouse, %struct.psmouse* %3, i32 0, i32 9, !dbg !5628
  %4 = load i8, i8* %pktcnt, align 1, !dbg !5628
  %conv = zext i8 %4 to i32, !dbg !5626
  %cmp = icmp slt i32 %conv, 6, !dbg !5629
  br i1 %cmp, label %if.then, label %if.end, !dbg !5630

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !5631
  br label %return, !dbg !5631

if.end:                                           ; preds = %entry
  %5 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !5632
  %pktcnt2 = getelementptr inbounds %struct.psmouse, %struct.psmouse* %5, i32 0, i32 9, !dbg !5633
  %6 = load i8, i8* %pktcnt2, align 1, !dbg !5633
  %conv3 = zext i8 %6 to i32, !dbg !5632
  %cmp4 = icmp eq i32 %conv3, 6, !dbg !5634
  br i1 %cmp4, label %if.then6, label %if.end8, !dbg !5635

if.then6:                                         ; preds = %if.end
  %7 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !5636
  %timer = getelementptr inbounds %struct.alps_data, %struct.alps_data* %7, i32 0, i32 30, !dbg !5637
  %8 = load volatile i64, i64* @jiffies, align 8, !dbg !5638
  store i32 20, i32* %m.addr.i, align 4
  %9 = load i32, i32* %m.addr.i, align 4, !dbg !5639
  %10 = call i1 @llvm.is.constant.i32(i32 %9) #7, !dbg !5641
  br i1 %10, label %if.then.i, label %if.else.i, !dbg !5642

if.then.i:                                        ; preds = %if.then6
  %11 = load i32, i32* %m.addr.i, align 4, !dbg !5643
  %cmp.i = icmp slt i32 %11, 0, !dbg !5646
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !5647

if.then1.i:                                       ; preds = %if.then.i
  store i64 4611686018427387902, i64* %retval.i, align 8, !dbg !5648
  br label %msecs_to_jiffies.exit, !dbg !5648

if.end.i:                                         ; preds = %if.then.i
  %12 = load i32, i32* %m.addr.i, align 4, !dbg !5649
  %call.i = call i64 @_msecs_to_jiffies(i32 %12) #12, !dbg !5650
  store i64 %call.i, i64* %retval.i, align 8, !dbg !5651
  br label %msecs_to_jiffies.exit, !dbg !5651

if.else.i:                                        ; preds = %if.then6
  %13 = load i32, i32* %m.addr.i, align 4, !dbg !5652
  %call2.i = call i64 @__msecs_to_jiffies(i32 %13) #12, !dbg !5654
  store i64 %call2.i, i64* %retval.i, align 8, !dbg !5655
  br label %msecs_to_jiffies.exit, !dbg !5655

msecs_to_jiffies.exit:                            ; preds = %if.then1.i, %if.end.i, %if.else.i
  %14 = load i64, i64* %retval.i, align 8, !dbg !5656
  %add = add i64 %8, %14, !dbg !5657
  %call7 = call i32 @mod_timer(%struct.timer_list* %timer, i64 %add) #10, !dbg !5658
  store i32 1, i32* %retval, align 4, !dbg !5659
  br label %return, !dbg !5659

if.end8:                                          ; preds = %if.end
  %15 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !5660
  %timer9 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %15, i32 0, i32 30, !dbg !5661
  %call10 = call i32 @del_timer(%struct.timer_list* %timer9) #10, !dbg !5662
  %16 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !5663
  %packet = getelementptr inbounds %struct.psmouse, %struct.psmouse* %16, i32 0, i32 7, !dbg !5665
  %arrayidx = getelementptr [8 x i8], [8 x i8]* %packet, i64 0, i64 6, !dbg !5663
  %17 = load i8, i8* %arrayidx, align 2, !dbg !5663
  %conv11 = zext i8 %17 to i32, !dbg !5663
  %and = and i32 %conv11, 128, !dbg !5666
  %tobool = icmp ne i32 %and, 0, !dbg !5666
  br i1 %tobool, label %if.then12, label %if.else, !dbg !5667

if.then12:                                        ; preds = %if.end8
  %18 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !5668
  %packet13 = getelementptr inbounds %struct.psmouse, %struct.psmouse* %18, i32 0, i32 7, !dbg !5671
  %arrayidx14 = getelementptr [8 x i8], [8 x i8]* %packet13, i64 0, i64 3, !dbg !5668
  %19 = load i8, i8* %arrayidx14, align 1, !dbg !5668
  %conv15 = zext i8 %19 to i32, !dbg !5668
  %20 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !5672
  %packet16 = getelementptr inbounds %struct.psmouse, %struct.psmouse* %20, i32 0, i32 7, !dbg !5673
  %arrayidx17 = getelementptr [8 x i8], [8 x i8]* %packet16, i64 0, i64 4, !dbg !5672
  %21 = load i8, i8* %arrayidx17, align 4, !dbg !5672
  %conv18 = zext i8 %21 to i32, !dbg !5672
  %or = or i32 %conv15, %conv18, !dbg !5674
  %22 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !5675
  %packet19 = getelementptr inbounds %struct.psmouse, %struct.psmouse* %22, i32 0, i32 7, !dbg !5676
  %arrayidx20 = getelementptr [8 x i8], [8 x i8]* %packet19, i64 0, i64 5, !dbg !5675
  %23 = load i8, i8* %arrayidx20, align 1, !dbg !5675
  %conv21 = zext i8 %23 to i32, !dbg !5675
  %or22 = or i32 %or, %conv21, !dbg !5677
  %and23 = and i32 %or22, 128, !dbg !5678
  %tobool24 = icmp ne i32 %and23, 0, !dbg !5678
  br i1 %tobool24, label %if.then28, label %lor.lhs.false, !dbg !5679

lor.lhs.false:                                    ; preds = %if.then12
  %24 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !5680
  %25 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !5681
  %packet25 = getelementptr inbounds %struct.psmouse, %struct.psmouse* %25, i32 0, i32 7, !dbg !5682
  %arrayidx26 = getelementptr [8 x i8], [8 x i8]* %packet25, i64 0, i64 6, !dbg !5681
  %26 = load i8, i8* %arrayidx26, align 2, !dbg !5681
  %call27 = call zeroext i1 @alps_is_valid_first_byte(%struct.alps_data* %24, i8 zeroext %26) #10, !dbg !5683
  br i1 %call27, label %if.end29, label %if.then28, !dbg !5684

if.then28:                                        ; preds = %lor.lhs.false, %if.then12
  store i32 0, i32* %retval, align 4, !dbg !5685
  br label %return, !dbg !5685

if.end29:                                         ; preds = %lor.lhs.false
  %27 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !5687
  %process_packet = getelementptr inbounds %struct.alps_data, %struct.alps_data* %27, i32 0, i32 21, !dbg !5688
  %28 = load void (%struct.psmouse*)*, void (%struct.psmouse*)** %process_packet, align 8, !dbg !5688
  %29 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !5689
  call void %28(%struct.psmouse* %29) #10, !dbg !5687
  %30 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !5690
  %packet30 = getelementptr inbounds %struct.psmouse, %struct.psmouse* %30, i32 0, i32 7, !dbg !5691
  %arrayidx31 = getelementptr [8 x i8], [8 x i8]* %packet30, i64 0, i64 6, !dbg !5690
  %31 = load i8, i8* %arrayidx31, align 2, !dbg !5690
  %32 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !5692
  %packet32 = getelementptr inbounds %struct.psmouse, %struct.psmouse* %32, i32 0, i32 7, !dbg !5693
  %arrayidx33 = getelementptr [8 x i8], [8 x i8]* %packet32, i64 0, i64 0, !dbg !5692
  store i8 %31, i8* %arrayidx33, align 8, !dbg !5694
  %33 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !5695
  %pktcnt34 = getelementptr inbounds %struct.psmouse, %struct.psmouse* %33, i32 0, i32 9, !dbg !5696
  store i8 1, i8* %pktcnt34, align 1, !dbg !5697
  br label %if.end45, !dbg !5698

if.else:                                          ; preds = %if.end8
  %34 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !5699
  %35 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !5701
  %packet35 = getelementptr inbounds %struct.psmouse, %struct.psmouse* %35, i32 0, i32 7, !dbg !5702
  %arrayidx36 = getelementptr [8 x i8], [8 x i8]* %packet35, i64 0, i64 3, !dbg !5701
  call void @alps_report_bare_ps2_packet(%struct.psmouse* %34, i8* %arrayidx36, i1 zeroext false) #10, !dbg !5703
  %36 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !5704
  %packet37 = getelementptr inbounds %struct.psmouse, %struct.psmouse* %36, i32 0, i32 7, !dbg !5705
  %arrayidx38 = getelementptr [8 x i8], [8 x i8]* %packet37, i64 0, i64 6, !dbg !5704
  %37 = load i8, i8* %arrayidx38, align 2, !dbg !5704
  %conv39 = zext i8 %37 to i32, !dbg !5704
  %and40 = and i32 %conv39, 247, !dbg !5706
  %conv41 = trunc i32 %and40 to i8, !dbg !5704
  %38 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !5707
  %packet42 = getelementptr inbounds %struct.psmouse, %struct.psmouse* %38, i32 0, i32 7, !dbg !5708
  %arrayidx43 = getelementptr [8 x i8], [8 x i8]* %packet42, i64 0, i64 3, !dbg !5707
  store i8 %conv41, i8* %arrayidx43, align 1, !dbg !5709
  %39 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !5710
  %pktcnt44 = getelementptr inbounds %struct.psmouse, %struct.psmouse* %39, i32 0, i32 9, !dbg !5711
  store i8 4, i8* %pktcnt44, align 1, !dbg !5712
  br label %if.end45

if.end45:                                         ; preds = %if.else, %if.end29
  store i32 1, i32* %retval, align 4, !dbg !5713
  br label %return, !dbg !5713

return:                                           ; preds = %if.end45, %if.then28, %msecs_to_jiffies.exit, %if.then
  %40 = load i32, i32* %retval, align 4, !dbg !5714
  ret i32 %40, !dbg !5714
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @alps_is_valid_first_byte(%struct.alps_data* %priv, i8 zeroext %data) #0 !dbg !5715 {
entry:
  %priv.addr = alloca %struct.alps_data*, align 8
  %data.addr = alloca i8, align 1
  store %struct.alps_data* %priv, %struct.alps_data** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.alps_data** %priv.addr, metadata !5718, metadata !DIExpression()), !dbg !5719
  store i8 %data, i8* %data.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %data.addr, metadata !5720, metadata !DIExpression()), !dbg !5721
  %0 = load i8, i8* %data.addr, align 1, !dbg !5722
  %conv = zext i8 %0 to i32, !dbg !5722
  %1 = load %struct.alps_data*, %struct.alps_data** %priv.addr, align 8, !dbg !5723
  %mask0 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %1, i32 0, i32 10, !dbg !5724
  %2 = load i8, i8* %mask0, align 1, !dbg !5724
  %conv1 = zext i8 %2 to i32, !dbg !5723
  %and = and i32 %conv, %conv1, !dbg !5725
  %3 = load %struct.alps_data*, %struct.alps_data** %priv.addr, align 8, !dbg !5726
  %byte0 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %3, i32 0, i32 9, !dbg !5727
  %4 = load i8, i8* %byte0, align 2, !dbg !5727
  %conv2 = zext i8 %4 to i32, !dbg !5726
  %cmp = icmp eq i32 %and, %conv2, !dbg !5728
  ret i1 %cmp, !dbg !5729
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @alps_is_valid_package_v7(%struct.psmouse* %psmouse) #0 !dbg !5730 {
entry:
  %retval = alloca i1, align 1
  %psmouse.addr = alloca %struct.psmouse*, align 8
  store %struct.psmouse* %psmouse, %struct.psmouse** %psmouse.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.psmouse** %psmouse.addr, metadata !5731, metadata !DIExpression()), !dbg !5732
  %0 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !5733
  %pktcnt = getelementptr inbounds %struct.psmouse, %struct.psmouse* %0, i32 0, i32 9, !dbg !5734
  %1 = load i8, i8* %pktcnt, align 1, !dbg !5734
  %conv = zext i8 %1 to i32, !dbg !5733
  switch i32 %conv, label %sw.epilog [
    i32 3, label %sw.bb
    i32 4, label %sw.bb3
    i32 6, label %sw.bb10
  ], !dbg !5735

sw.bb:                                            ; preds = %entry
  %2 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !5736
  %packet = getelementptr inbounds %struct.psmouse, %struct.psmouse* %2, i32 0, i32 7, !dbg !5738
  %arrayidx = getelementptr [8 x i8], [8 x i8]* %packet, i64 0, i64 2, !dbg !5736
  %3 = load i8, i8* %arrayidx, align 2, !dbg !5736
  %conv1 = zext i8 %3 to i32, !dbg !5736
  %and = and i32 %conv1, 64, !dbg !5739
  %cmp = icmp eq i32 %and, 64, !dbg !5740
  store i1 %cmp, i1* %retval, align 1, !dbg !5741
  br label %return, !dbg !5741

sw.bb3:                                           ; preds = %entry
  %4 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !5742
  %packet4 = getelementptr inbounds %struct.psmouse, %struct.psmouse* %4, i32 0, i32 7, !dbg !5743
  %arrayidx5 = getelementptr [8 x i8], [8 x i8]* %packet4, i64 0, i64 3, !dbg !5742
  %5 = load i8, i8* %arrayidx5, align 1, !dbg !5742
  %conv6 = zext i8 %5 to i32, !dbg !5742
  %and7 = and i32 %conv6, 72, !dbg !5744
  %cmp8 = icmp eq i32 %and7, 72, !dbg !5745
  store i1 %cmp8, i1* %retval, align 1, !dbg !5746
  br label %return, !dbg !5746

sw.bb10:                                          ; preds = %entry
  %6 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !5747
  %packet11 = getelementptr inbounds %struct.psmouse, %struct.psmouse* %6, i32 0, i32 7, !dbg !5748
  %arrayidx12 = getelementptr [8 x i8], [8 x i8]* %packet11, i64 0, i64 5, !dbg !5747
  %7 = load i8, i8* %arrayidx12, align 1, !dbg !5747
  %conv13 = zext i8 %7 to i32, !dbg !5747
  %and14 = and i32 %conv13, 64, !dbg !5749
  %cmp15 = icmp eq i32 %and14, 0, !dbg !5750
  store i1 %cmp15, i1* %retval, align 1, !dbg !5751
  br label %return, !dbg !5751

sw.epilog:                                        ; preds = %entry
  store i1 true, i1* %retval, align 1, !dbg !5752
  br label %return, !dbg !5752

return:                                           ; preds = %sw.epilog, %sw.bb10, %sw.bb3, %sw.bb
  %8 = load i1, i1* %retval, align 1, !dbg !5753
  ret i1 %8, !dbg !5753
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @alps_is_valid_package_ss4_v2(%struct.psmouse* %psmouse) #0 !dbg !5754 {
entry:
  %retval = alloca i1, align 1
  %psmouse.addr = alloca %struct.psmouse*, align 8
  store %struct.psmouse* %psmouse, %struct.psmouse** %psmouse.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.psmouse** %psmouse.addr, metadata !5755, metadata !DIExpression()), !dbg !5756
  %0 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !5757
  %pktcnt = getelementptr inbounds %struct.psmouse, %struct.psmouse* %0, i32 0, i32 9, !dbg !5759
  %1 = load i8, i8* %pktcnt, align 1, !dbg !5759
  %conv = zext i8 %1 to i32, !dbg !5757
  %cmp = icmp eq i32 %conv, 4, !dbg !5760
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !5761

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !5762
  %packet = getelementptr inbounds %struct.psmouse, %struct.psmouse* %2, i32 0, i32 7, !dbg !5763
  %arrayidx = getelementptr [8 x i8], [8 x i8]* %packet, i64 0, i64 3, !dbg !5762
  %3 = load i8, i8* %arrayidx, align 1, !dbg !5762
  %conv2 = zext i8 %3 to i32, !dbg !5762
  %and = and i32 %conv2, 8, !dbg !5764
  %cmp3 = icmp ne i32 %and, 8, !dbg !5765
  br i1 %cmp3, label %if.then, label %if.end, !dbg !5766

if.then:                                          ; preds = %land.lhs.true
  store i1 false, i1* %retval, align 1, !dbg !5767
  br label %return, !dbg !5767

if.end:                                           ; preds = %land.lhs.true, %entry
  %4 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !5768
  %pktcnt5 = getelementptr inbounds %struct.psmouse, %struct.psmouse* %4, i32 0, i32 9, !dbg !5770
  %5 = load i8, i8* %pktcnt5, align 1, !dbg !5770
  %conv6 = zext i8 %5 to i32, !dbg !5768
  %cmp7 = icmp eq i32 %conv6, 6, !dbg !5771
  br i1 %cmp7, label %land.lhs.true9, label %if.end17, !dbg !5772

land.lhs.true9:                                   ; preds = %if.end
  %6 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !5773
  %packet10 = getelementptr inbounds %struct.psmouse, %struct.psmouse* %6, i32 0, i32 7, !dbg !5774
  %arrayidx11 = getelementptr [8 x i8], [8 x i8]* %packet10, i64 0, i64 5, !dbg !5773
  %7 = load i8, i8* %arrayidx11, align 1, !dbg !5773
  %conv12 = zext i8 %7 to i32, !dbg !5773
  %and13 = and i32 %conv12, 16, !dbg !5775
  %cmp14 = icmp ne i32 %and13, 0, !dbg !5776
  br i1 %cmp14, label %if.then16, label %if.end17, !dbg !5777

if.then16:                                        ; preds = %land.lhs.true9
  store i1 false, i1* %retval, align 1, !dbg !5778
  br label %return, !dbg !5778

if.end17:                                         ; preds = %land.lhs.true9, %if.end
  store i1 true, i1* %retval, align 1, !dbg !5779
  br label %return, !dbg !5779

return:                                           ; preds = %if.end17, %if.then16, %if.then
  %8 = load i1, i1* %retval, align 1, !dbg !5780
  ret i1 %8, !dbg !5780
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @IS_ERR_OR_NULL(i8* %ptr) #0 !dbg !5781 {
entry:
  %ptr.addr = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !5784, metadata !DIExpression()), !dbg !5785
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !5786
  %tobool = icmp ne i8* %0, null, !dbg !5786
  %lnot = xor i1 %tobool, true, !dbg !5786
  %lnot1 = xor i1 %lnot, true, !dbg !5786
  %lnot2 = xor i1 %lnot1, true, !dbg !5786
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !5786
  %conv = sext i32 %lnot.ext to i64, !dbg !5786
  %tobool3 = icmp ne i64 %conv, 0, !dbg !5786
  br i1 %tobool3, label %lor.end, label %lor.rhs, !dbg !5787

lor.rhs:                                          ; preds = %entry
  %1 = load i8*, i8** %ptr.addr, align 8, !dbg !5788
  %2 = ptrtoint i8* %1 to i64, !dbg !5788
  %3 = inttoptr i64 %2 to i8*, !dbg !5788
  %4 = ptrtoint i8* %3 to i64, !dbg !5788
  %cmp = icmp uge i64 %4, -4095, !dbg !5788
  %lnot5 = xor i1 %cmp, true, !dbg !5788
  %lnot7 = xor i1 %lnot5, true, !dbg !5788
  %lnot.ext8 = zext i1 %lnot7 to i32, !dbg !5788
  %conv9 = sext i32 %lnot.ext8 to i64, !dbg !5788
  %tobool10 = icmp ne i64 %conv9, 0, !dbg !5787
  br label %lor.end, !dbg !5787

lor.end:                                          ; preds = %lor.rhs, %entry
  %5 = phi i1 [ true, %entry ], [ %tobool10, %lor.rhs ]
  ret i1 %5, !dbg !5789
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @IS_ERR(i8* %ptr) #0 !dbg !5790 {
entry:
  %ptr.addr = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !5791, metadata !DIExpression()), !dbg !5792
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !5793
  %1 = ptrtoint i8* %0 to i64, !dbg !5793
  %2 = inttoptr i64 %1 to i8*, !dbg !5793
  %3 = ptrtoint i8* %2 to i64, !dbg !5793
  %cmp = icmp uge i64 %3, -4095, !dbg !5793
  %lnot = xor i1 %cmp, true, !dbg !5793
  %lnot1 = xor i1 %lnot, true, !dbg !5793
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !5793
  %conv = sext i32 %lnot.ext to i64, !dbg !5793
  %tobool = icmp ne i64 %conv, 0, !dbg !5793
  ret i1 %tobool, !dbg !5794
}

; Function Attrs: noredzone
declare dso_local void @psmouse_queue_work(%struct.psmouse*, %struct.delayed_work*, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @alps_report_buttons(%struct.input_dev* %dev1, %struct.input_dev* %dev2, i32 %left, i32 %right, i32 %middle) #0 !dbg !5795 {
entry:
  %dev1.addr = alloca %struct.input_dev*, align 8
  %dev2.addr = alloca %struct.input_dev*, align 8
  %left.addr = alloca i32, align 4
  %right.addr = alloca i32, align 4
  %middle.addr = alloca i32, align 4
  %dev = alloca %struct.input_dev*, align 8
  store %struct.input_dev* %dev1, %struct.input_dev** %dev1.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.input_dev** %dev1.addr, metadata !5798, metadata !DIExpression()), !dbg !5799
  store %struct.input_dev* %dev2, %struct.input_dev** %dev2.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.input_dev** %dev2.addr, metadata !5800, metadata !DIExpression()), !dbg !5801
  store i32 %left, i32* %left.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %left.addr, metadata !5802, metadata !DIExpression()), !dbg !5803
  store i32 %right, i32* %right.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %right.addr, metadata !5804, metadata !DIExpression()), !dbg !5805
  store i32 %middle, i32* %middle.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %middle.addr, metadata !5806, metadata !DIExpression()), !dbg !5807
  call void @llvm.dbg.declare(metadata %struct.input_dev** %dev, metadata !5808, metadata !DIExpression()), !dbg !5809
  %0 = load %struct.input_dev*, %struct.input_dev** %dev2.addr, align 8, !dbg !5810
  %tobool = icmp ne %struct.input_dev* %0, null, !dbg !5810
  br i1 %tobool, label %land.lhs.true, label %cond.false, !dbg !5811

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.input_dev*, %struct.input_dev** %dev2.addr, align 8, !dbg !5812
  %key = getelementptr inbounds %struct.input_dev, %struct.input_dev* %1, i32 0, i32 27, !dbg !5813
  %arraydecay = getelementptr inbounds [12 x i64], [12 x i64]* %key, i64 0, i64 0, !dbg !5812
  %call = call zeroext i1 @test_bit(i64 272, i64* %arraydecay) #10, !dbg !5814
  br i1 %call, label %cond.true, label %cond.false, !dbg !5815

cond.true:                                        ; preds = %land.lhs.true
  %2 = load %struct.input_dev*, %struct.input_dev** %dev2.addr, align 8, !dbg !5816
  br label %cond.end, !dbg !5815

cond.false:                                       ; preds = %land.lhs.true, %entry
  %3 = load %struct.input_dev*, %struct.input_dev** %dev1.addr, align 8, !dbg !5817
  br label %cond.end, !dbg !5815

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.input_dev* [ %2, %cond.true ], [ %3, %cond.false ], !dbg !5815
  store %struct.input_dev* %cond, %struct.input_dev** %dev, align 8, !dbg !5818
  %4 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !5819
  %5 = load i32, i32* %left.addr, align 4, !dbg !5820
  call void @input_report_key(%struct.input_dev* %4, i32 272, i32 %5) #10, !dbg !5821
  %6 = load %struct.input_dev*, %struct.input_dev** %dev2.addr, align 8, !dbg !5822
  %tobool1 = icmp ne %struct.input_dev* %6, null, !dbg !5822
  br i1 %tobool1, label %land.lhs.true2, label %cond.false7, !dbg !5823

land.lhs.true2:                                   ; preds = %cond.end
  %7 = load %struct.input_dev*, %struct.input_dev** %dev2.addr, align 8, !dbg !5824
  %key3 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %7, i32 0, i32 27, !dbg !5825
  %arraydecay4 = getelementptr inbounds [12 x i64], [12 x i64]* %key3, i64 0, i64 0, !dbg !5824
  %call5 = call zeroext i1 @test_bit(i64 273, i64* %arraydecay4) #10, !dbg !5826
  br i1 %call5, label %cond.true6, label %cond.false7, !dbg !5827

cond.true6:                                       ; preds = %land.lhs.true2
  %8 = load %struct.input_dev*, %struct.input_dev** %dev2.addr, align 8, !dbg !5828
  br label %cond.end8, !dbg !5827

cond.false7:                                      ; preds = %land.lhs.true2, %cond.end
  %9 = load %struct.input_dev*, %struct.input_dev** %dev1.addr, align 8, !dbg !5829
  br label %cond.end8, !dbg !5827

cond.end8:                                        ; preds = %cond.false7, %cond.true6
  %cond9 = phi %struct.input_dev* [ %8, %cond.true6 ], [ %9, %cond.false7 ], !dbg !5827
  store %struct.input_dev* %cond9, %struct.input_dev** %dev, align 8, !dbg !5830
  %10 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !5831
  %11 = load i32, i32* %right.addr, align 4, !dbg !5832
  call void @input_report_key(%struct.input_dev* %10, i32 273, i32 %11) #10, !dbg !5833
  %12 = load %struct.input_dev*, %struct.input_dev** %dev2.addr, align 8, !dbg !5834
  %tobool10 = icmp ne %struct.input_dev* %12, null, !dbg !5834
  br i1 %tobool10, label %land.lhs.true11, label %cond.false16, !dbg !5835

land.lhs.true11:                                  ; preds = %cond.end8
  %13 = load %struct.input_dev*, %struct.input_dev** %dev2.addr, align 8, !dbg !5836
  %key12 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %13, i32 0, i32 27, !dbg !5837
  %arraydecay13 = getelementptr inbounds [12 x i64], [12 x i64]* %key12, i64 0, i64 0, !dbg !5836
  %call14 = call zeroext i1 @test_bit(i64 274, i64* %arraydecay13) #10, !dbg !5838
  br i1 %call14, label %cond.true15, label %cond.false16, !dbg !5839

cond.true15:                                      ; preds = %land.lhs.true11
  %14 = load %struct.input_dev*, %struct.input_dev** %dev2.addr, align 8, !dbg !5840
  br label %cond.end17, !dbg !5839

cond.false16:                                     ; preds = %land.lhs.true11, %cond.end8
  %15 = load %struct.input_dev*, %struct.input_dev** %dev1.addr, align 8, !dbg !5841
  br label %cond.end17, !dbg !5839

cond.end17:                                       ; preds = %cond.false16, %cond.true15
  %cond18 = phi %struct.input_dev* [ %14, %cond.true15 ], [ %15, %cond.false16 ], !dbg !5839
  store %struct.input_dev* %cond18, %struct.input_dev** %dev, align 8, !dbg !5842
  %16 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !5843
  %17 = load i32, i32* %middle.addr, align 4, !dbg !5844
  call void @input_report_key(%struct.input_dev* %16, i32 274, i32 %17) #10, !dbg !5845
  %18 = load %struct.input_dev*, %struct.input_dev** %dev2.addr, align 8, !dbg !5846
  %tobool19 = icmp ne %struct.input_dev* %18, null, !dbg !5846
  br i1 %tobool19, label %if.then, label %if.end, !dbg !5848

if.then:                                          ; preds = %cond.end17
  %19 = load %struct.input_dev*, %struct.input_dev** %dev2.addr, align 8, !dbg !5849
  call void @input_sync(%struct.input_dev* %19) #10, !dbg !5850
  br label %if.end, !dbg !5850

if.end:                                           ; preds = %if.then, %cond.end17
  ret void, !dbg !5851
}

; Function Attrs: noredzone
declare dso_local void @psmouse_report_standard_motion(%struct.input_dev*, i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @input_sync(%struct.input_dev* %dev) #0 !dbg !5852 {
entry:
  %dev.addr = alloca %struct.input_dev*, align 8
  store %struct.input_dev* %dev, %struct.input_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.input_dev** %dev.addr, metadata !5853, metadata !DIExpression()), !dbg !5854
  %0 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !5855
  call void @input_event(%struct.input_dev* %0, i32 0, i32 0, i32 0) #10, !dbg !5856
  ret void, !dbg !5857
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @test_bit(i64 %nr, i64* %addr) #0 !dbg !5858 {
entry:
  %nr.addr.i3 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i3, metadata !5863, metadata !DIExpression()), !dbg !5865
  %addr.addr.i4 = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i4, metadata !5867, metadata !DIExpression()), !dbg !5868
  %oldbit.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %oldbit.i, metadata !5869, metadata !DIExpression()), !dbg !5870
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !5871, metadata !DIExpression()), !dbg !5873
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !5875, metadata !DIExpression()), !dbg !5876
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !5877, metadata !DIExpression()), !dbg !5879
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !5881, metadata !DIExpression()), !dbg !5882
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !5883, metadata !DIExpression()), !dbg !5884
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !5885, metadata !DIExpression()), !dbg !5886
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !5887
  %1 = load i64, i64* %nr.addr, align 8, !dbg !5888
  %div = sdiv i64 %1, 64, !dbg !5888
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !5889
  %2 = bitcast i64* %add.ptr to i8*, !dbg !5887
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !5890
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !5891
  %conv.i = trunc i64 %4 to i32, !dbg !5891
  %call.i = call zeroext i1 @kasan_check_read(i8* %3, i32 %conv.i) #12, !dbg !5892
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !5893
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !5893
  call void @kcsan_check_access(i8* %5, i64 %6, i32 4) #12, !dbg !5893
  %7 = load i64, i64* %nr.addr, align 8, !dbg !5894
  %8 = call i1 @llvm.is.constant.i64(i64 %7), !dbg !5894
  br i1 %8, label %cond.true, label %cond.false, !dbg !5894

cond.true:                                        ; preds = %entry
  %9 = load i64, i64* %nr.addr, align 8, !dbg !5894
  %10 = load i64*, i64** %addr.addr, align 8, !dbg !5894
  store i64 %9, i64* %nr.addr.i, align 8
  store i64* %10, i64** %addr.addr.i, align 8
  %11 = load i64, i64* %nr.addr.i, align 8, !dbg !5895
  %and.i = and i64 %11, 63, !dbg !5896
  %shl.i = shl i64 1, %and.i, !dbg !5897
  %12 = load i64*, i64** %addr.addr.i, align 8, !dbg !5898
  %13 = load i64, i64* %nr.addr.i, align 8, !dbg !5899
  %shr.i = ashr i64 %13, 6, !dbg !5900
  %arrayidx.i = getelementptr i64, i64* %12, i64 %shr.i, !dbg !5898
  %14 = load volatile i64, i64* %arrayidx.i, align 8, !dbg !5898
  %and1.i = and i64 %shl.i, %14, !dbg !5901
  %cmp.i = icmp ne i64 %and1.i, 0, !dbg !5902
  %conv = zext i1 %cmp.i to i32, !dbg !5894
  br label %cond.end, !dbg !5894

cond.false:                                       ; preds = %entry
  %15 = load i64, i64* %nr.addr, align 8, !dbg !5894
  %16 = load i64*, i64** %addr.addr, align 8, !dbg !5894
  store i64 %15, i64* %nr.addr.i3, align 8
  store i64* %16, i64** %addr.addr.i4, align 8
  %17 = load i64*, i64** %addr.addr.i4, align 8, !dbg !5903
  %18 = load i64, i64* %nr.addr.i3, align 8, !dbg !5904
  %19 = call i8 asm sideeffect " btq  $2,$1\0A\09/* output condition code c*/\0A", "={@ccc},*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %17, i64 %18) #7, !dbg !5905, !srcloc !5906
  store i8 %19, i8* %oldbit.i, align 1, !dbg !5905
  %20 = load i8, i8* %oldbit.i, align 1, !dbg !5907
  %tobool.i = trunc i8 %20 to i1, !dbg !5907
  %conv2 = zext i1 %tobool.i to i32, !dbg !5894
  br label %cond.end, !dbg !5894

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv, %cond.true ], [ %conv2, %cond.false ], !dbg !5894
  %tobool = icmp ne i32 %cond, 0, !dbg !5894
  ret i1 %tobool, !dbg !5908
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @input_report_key(%struct.input_dev* %dev, i32 %code, i32 %value) #0 !dbg !5909 {
entry:
  %dev.addr = alloca %struct.input_dev*, align 8
  %code.addr = alloca i32, align 4
  %value.addr = alloca i32, align 4
  store %struct.input_dev* %dev, %struct.input_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.input_dev** %dev.addr, metadata !5912, metadata !DIExpression()), !dbg !5913
  store i32 %code, i32* %code.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %code.addr, metadata !5914, metadata !DIExpression()), !dbg !5915
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !5916, metadata !DIExpression()), !dbg !5917
  %0 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !5918
  %1 = load i32, i32* %code.addr, align 4, !dbg !5919
  %2 = load i32, i32* %value.addr, align 4, !dbg !5920
  %tobool = icmp ne i32 %2, 0, !dbg !5921
  %lnot = xor i1 %tobool, true, !dbg !5921
  %lnot1 = xor i1 %lnot, true, !dbg !5922
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !5922
  call void @input_event(%struct.input_dev* %0, i32 1, i32 %1, i32 %lnot.ext) #10, !dbg !5923
  ret void, !dbg !5924
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @kasan_check_read(i8* %p, i32 %size) #0 !dbg !5925 {
entry:
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !5926, metadata !DIExpression()), !dbg !5927
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !5928, metadata !DIExpression()), !dbg !5929
  ret i1 true, !dbg !5930
}

; Function Attrs: noredzone
declare dso_local void @input_event(%struct.input_dev*, i32, i32, i32) #2

; Function Attrs: noredzone
declare dso_local i32 @mod_timer(%struct.timer_list*, i64) #2

; Function Attrs: noredzone
declare dso_local i32 @del_timer(%struct.timer_list*) #2

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i32(i32) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @_msecs_to_jiffies(i32 %m) #0 !dbg !5931 {
entry:
  %m.addr = alloca i32, align 4
  store i32 %m, i32* %m.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %m.addr, metadata !5932, metadata !DIExpression()), !dbg !5933
  %0 = load i32, i32* %m.addr, align 4, !dbg !5934
  %conv = zext i32 %0 to i64, !dbg !5934
  %add = add i64 %conv, 4, !dbg !5935
  %sub = sub i64 %add, 1, !dbg !5936
  %div = sdiv i64 %sub, 4, !dbg !5937
  ret i64 %div, !dbg !5938
}

; Function Attrs: noredzone
declare dso_local i64 @__msecs_to_jiffies(i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @alps_passthrough_mode_v2(%struct.psmouse* %psmouse, i1 zeroext %enable) #0 !dbg !5939 {
entry:
  %retval = alloca i32, align 4
  %psmouse.addr = alloca %struct.psmouse*, align 8
  %enable.addr = alloca i8, align 1
  %ps2dev = alloca %struct.ps2dev*, align 8
  %cmd = alloca i32, align 4
  store %struct.psmouse* %psmouse, %struct.psmouse** %psmouse.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.psmouse** %psmouse.addr, metadata !5940, metadata !DIExpression()), !dbg !5941
  %frombool = zext i1 %enable to i8
  store i8 %frombool, i8* %enable.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %enable.addr, metadata !5942, metadata !DIExpression()), !dbg !5943
  call void @llvm.dbg.declare(metadata %struct.ps2dev** %ps2dev, metadata !5944, metadata !DIExpression()), !dbg !5946
  %0 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !5947
  %ps2dev1 = getelementptr inbounds %struct.psmouse, %struct.psmouse* %0, i32 0, i32 2, !dbg !5948
  store %struct.ps2dev* %ps2dev1, %struct.ps2dev** %ps2dev, align 8, !dbg !5946
  call void @llvm.dbg.declare(metadata i32* %cmd, metadata !5949, metadata !DIExpression()), !dbg !5950
  %1 = load i8, i8* %enable.addr, align 1, !dbg !5951
  %tobool = trunc i8 %1 to i1, !dbg !5951
  %2 = zext i1 %tobool to i64, !dbg !5951
  %cond = select i1 %tobool, i32 231, i32 230, !dbg !5951
  store i32 %cond, i32* %cmd, align 4, !dbg !5950
  %3 = load %struct.ps2dev*, %struct.ps2dev** %ps2dev, align 8, !dbg !5952
  %4 = load i32, i32* %cmd, align 4, !dbg !5954
  %call = call i32 @ps2_command(%struct.ps2dev* %3, i8* null, i32 %4) #10, !dbg !5955
  %tobool2 = icmp ne i32 %call, 0, !dbg !5955
  br i1 %tobool2, label %if.then, label %lor.lhs.false, !dbg !5956

lor.lhs.false:                                    ; preds = %entry
  %5 = load %struct.ps2dev*, %struct.ps2dev** %ps2dev, align 8, !dbg !5957
  %6 = load i32, i32* %cmd, align 4, !dbg !5958
  %call3 = call i32 @ps2_command(%struct.ps2dev* %5, i8* null, i32 %6) #10, !dbg !5959
  %tobool4 = icmp ne i32 %call3, 0, !dbg !5959
  br i1 %tobool4, label %if.then, label %lor.lhs.false5, !dbg !5960

lor.lhs.false5:                                   ; preds = %lor.lhs.false
  %7 = load %struct.ps2dev*, %struct.ps2dev** %ps2dev, align 8, !dbg !5961
  %8 = load i32, i32* %cmd, align 4, !dbg !5962
  %call6 = call i32 @ps2_command(%struct.ps2dev* %7, i8* null, i32 %8) #10, !dbg !5963
  %tobool7 = icmp ne i32 %call6, 0, !dbg !5963
  br i1 %tobool7, label %if.then, label %lor.lhs.false8, !dbg !5964

lor.lhs.false8:                                   ; preds = %lor.lhs.false5
  %9 = load %struct.ps2dev*, %struct.ps2dev** %ps2dev, align 8, !dbg !5965
  %call9 = call i32 @ps2_command(%struct.ps2dev* %9, i8* null, i32 245) #10, !dbg !5966
  %tobool10 = icmp ne i32 %call9, 0, !dbg !5966
  br i1 %tobool10, label %if.then, label %if.end, !dbg !5967

if.then:                                          ; preds = %lor.lhs.false8, %lor.lhs.false5, %lor.lhs.false, %entry
  store i32 -1, i32* %retval, align 4, !dbg !5968
  br label %return, !dbg !5968

if.end:                                           ; preds = %lor.lhs.false8
  %10 = load %struct.ps2dev*, %struct.ps2dev** %ps2dev, align 8, !dbg !5969
  call void @ps2_drain(%struct.ps2dev* %10, i64 3, i32 100) #10, !dbg !5970
  store i32 0, i32* %retval, align 4, !dbg !5971
  br label %return, !dbg !5971

return:                                           ; preds = %if.end, %if.then
  %11 = load i32, i32* %retval, align 4, !dbg !5972
  ret i32 %11, !dbg !5972
}

; Function Attrs: noredzone
declare dso_local i32 @ps2_command(%struct.ps2dev*, i8*, i32) #2

; Function Attrs: noredzone
declare dso_local void @ps2_drain(%struct.ps2dev*, i64, i32) #2

; Function Attrs: noredzone
declare dso_local void @input_unregister_device(%struct.input_dev*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @alps_rpt_cmd(%struct.psmouse* %psmouse, i32 %init_command, i32 %repeated_command, i8* %param) #0 !dbg !5973 {
entry:
  %retval = alloca i32, align 4
  %psmouse.addr = alloca %struct.psmouse*, align 8
  %init_command.addr = alloca i32, align 4
  %repeated_command.addr = alloca i32, align 4
  %param.addr = alloca i8*, align 8
  %ps2dev = alloca %struct.ps2dev*, align 8
  store %struct.psmouse* %psmouse, %struct.psmouse** %psmouse.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.psmouse** %psmouse.addr, metadata !5976, metadata !DIExpression()), !dbg !5977
  store i32 %init_command, i32* %init_command.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %init_command.addr, metadata !5978, metadata !DIExpression()), !dbg !5979
  store i32 %repeated_command, i32* %repeated_command.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %repeated_command.addr, metadata !5980, metadata !DIExpression()), !dbg !5981
  store i8* %param, i8** %param.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %param.addr, metadata !5982, metadata !DIExpression()), !dbg !5983
  call void @llvm.dbg.declare(metadata %struct.ps2dev** %ps2dev, metadata !5984, metadata !DIExpression()), !dbg !5985
  %0 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !5986
  %ps2dev1 = getelementptr inbounds %struct.psmouse, %struct.psmouse* %0, i32 0, i32 2, !dbg !5987
  store %struct.ps2dev* %ps2dev1, %struct.ps2dev** %ps2dev, align 8, !dbg !5985
  %1 = load i8*, i8** %param.addr, align 8, !dbg !5988
  %arrayidx = getelementptr i8, i8* %1, i64 0, !dbg !5988
  store i8 0, i8* %arrayidx, align 1, !dbg !5989
  %2 = load i32, i32* %init_command.addr, align 4, !dbg !5990
  %tobool = icmp ne i32 %2, 0, !dbg !5990
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !5992

land.lhs.true:                                    ; preds = %entry
  %3 = load %struct.ps2dev*, %struct.ps2dev** %ps2dev, align 8, !dbg !5993
  %4 = load i8*, i8** %param.addr, align 8, !dbg !5994
  %5 = load i32, i32* %init_command.addr, align 4, !dbg !5995
  %call = call i32 @ps2_command(%struct.ps2dev* %3, i8* %4, i32 %5) #10, !dbg !5996
  %tobool2 = icmp ne i32 %call, 0, !dbg !5996
  br i1 %tobool2, label %if.then, label %if.end, !dbg !5997

if.then:                                          ; preds = %land.lhs.true
  store i32 -5, i32* %retval, align 4, !dbg !5998
  br label %return, !dbg !5998

if.end:                                           ; preds = %land.lhs.true, %entry
  %6 = load %struct.ps2dev*, %struct.ps2dev** %ps2dev, align 8, !dbg !5999
  %7 = load i32, i32* %repeated_command.addr, align 4, !dbg !6001
  %call3 = call i32 @ps2_command(%struct.ps2dev* %6, i8* null, i32 %7) #10, !dbg !6002
  %tobool4 = icmp ne i32 %call3, 0, !dbg !6002
  br i1 %tobool4, label %if.then10, label %lor.lhs.false, !dbg !6003

lor.lhs.false:                                    ; preds = %if.end
  %8 = load %struct.ps2dev*, %struct.ps2dev** %ps2dev, align 8, !dbg !6004
  %9 = load i32, i32* %repeated_command.addr, align 4, !dbg !6005
  %call5 = call i32 @ps2_command(%struct.ps2dev* %8, i8* null, i32 %9) #10, !dbg !6006
  %tobool6 = icmp ne i32 %call5, 0, !dbg !6006
  br i1 %tobool6, label %if.then10, label %lor.lhs.false7, !dbg !6007

lor.lhs.false7:                                   ; preds = %lor.lhs.false
  %10 = load %struct.ps2dev*, %struct.ps2dev** %ps2dev, align 8, !dbg !6008
  %11 = load i32, i32* %repeated_command.addr, align 4, !dbg !6009
  %call8 = call i32 @ps2_command(%struct.ps2dev* %10, i8* null, i32 %11) #10, !dbg !6010
  %tobool9 = icmp ne i32 %call8, 0, !dbg !6010
  br i1 %tobool9, label %if.then10, label %if.end11, !dbg !6011

if.then10:                                        ; preds = %lor.lhs.false7, %lor.lhs.false, %if.end
  store i32 -5, i32* %retval, align 4, !dbg !6012
  br label %return, !dbg !6012

if.end11:                                         ; preds = %lor.lhs.false7
  %12 = load i8*, i8** %param.addr, align 8, !dbg !6013
  %arrayidx12 = getelementptr i8, i8* %12, i64 2, !dbg !6013
  store i8 -1, i8* %arrayidx12, align 1, !dbg !6014
  %13 = load i8*, i8** %param.addr, align 8, !dbg !6015
  %arrayidx13 = getelementptr i8, i8* %13, i64 1, !dbg !6015
  store i8 -1, i8* %arrayidx13, align 1, !dbg !6016
  %14 = load i8*, i8** %param.addr, align 8, !dbg !6017
  %arrayidx14 = getelementptr i8, i8* %14, i64 0, !dbg !6017
  store i8 -1, i8* %arrayidx14, align 1, !dbg !6018
  %15 = load %struct.ps2dev*, %struct.ps2dev** %ps2dev, align 8, !dbg !6019
  %16 = load i8*, i8** %param.addr, align 8, !dbg !6021
  %call15 = call i32 @ps2_command(%struct.ps2dev* %15, i8* %16, i32 1001) #10, !dbg !6022
  %tobool16 = icmp ne i32 %call15, 0, !dbg !6022
  br i1 %tobool16, label %if.then17, label %if.end18, !dbg !6023

if.then17:                                        ; preds = %if.end11
  store i32 -5, i32* %retval, align 4, !dbg !6024
  br label %return, !dbg !6024

if.end18:                                         ; preds = %if.end11
  store i32 0, i32* %retval, align 4, !dbg !6025
  br label %return, !dbg !6025

return:                                           ; preds = %if.end18, %if.then17, %if.then10, %if.then
  %17 = load i32, i32* %retval, align 4, !dbg !6026
  ret i32 %17, !dbg !6026
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @alps_exit_command_mode(%struct.psmouse* %psmouse) #0 !dbg !6027 {
entry:
  %retval = alloca i32, align 4
  %psmouse.addr = alloca %struct.psmouse*, align 8
  %ps2dev = alloca %struct.ps2dev*, align 8
  store %struct.psmouse* %psmouse, %struct.psmouse** %psmouse.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.psmouse** %psmouse.addr, metadata !6028, metadata !DIExpression()), !dbg !6029
  call void @llvm.dbg.declare(metadata %struct.ps2dev** %ps2dev, metadata !6030, metadata !DIExpression()), !dbg !6031
  %0 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !6032
  %ps2dev1 = getelementptr inbounds %struct.psmouse, %struct.psmouse* %0, i32 0, i32 2, !dbg !6033
  store %struct.ps2dev* %ps2dev1, %struct.ps2dev** %ps2dev, align 8, !dbg !6031
  %1 = load %struct.ps2dev*, %struct.ps2dev** %ps2dev, align 8, !dbg !6034
  %call = call i32 @ps2_command(%struct.ps2dev* %1, i8* null, i32 234) #10, !dbg !6036
  %tobool = icmp ne i32 %call, 0, !dbg !6036
  br i1 %tobool, label %if.then, label %if.end, !dbg !6037

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !6038
  br label %return, !dbg !6038

if.end:                                           ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !6039
  br label %return, !dbg !6039

return:                                           ; preds = %if.end, %if.then
  %2 = load i32, i32* %retval, align 4, !dbg !6040
  ret i32 %2, !dbg !6040
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.alps_protocol_info* @alps_match_table(i8* %e7, i8* %ec) #0 !dbg !6041 {
entry:
  %retval = alloca %struct.alps_protocol_info*, align 8
  %e7.addr = alloca i8*, align 8
  %ec.addr = alloca i8*, align 8
  %model = alloca %struct.alps_model_info*, align 8
  %i = alloca i32, align 4
  store i8* %e7, i8** %e7.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %e7.addr, metadata !6044, metadata !DIExpression()), !dbg !6045
  store i8* %ec, i8** %ec.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ec.addr, metadata !6046, metadata !DIExpression()), !dbg !6047
  call void @llvm.dbg.declare(metadata %struct.alps_model_info** %model, metadata !6048, metadata !DIExpression()), !dbg !6050
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6051, metadata !DIExpression()), !dbg !6052
  store i32 0, i32* %i, align 4, !dbg !6053
  br label %for.cond, !dbg !6055

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !6056
  %conv = sext i32 %0 to i64, !dbg !6056
  %cmp = icmp ult i64 %conv, 22, !dbg !6058
  br i1 %cmp, label %for.body, label %for.end, !dbg !6059

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %i, align 4, !dbg !6060
  %idxprom = sext i32 %1 to i64, !dbg !6062
  %arrayidx = getelementptr [22 x %struct.alps_model_info], [22 x %struct.alps_model_info]* @alps_model_data, i64 0, i64 %idxprom, !dbg !6062
  store %struct.alps_model_info* %arrayidx, %struct.alps_model_info** %model, align 8, !dbg !6063
  %2 = load i8*, i8** %e7.addr, align 8, !dbg !6064
  %3 = load %struct.alps_model_info*, %struct.alps_model_info** %model, align 8, !dbg !6066
  %signature = getelementptr inbounds %struct.alps_model_info, %struct.alps_model_info* %3, i32 0, i32 0, !dbg !6067
  %arraydecay = getelementptr inbounds [3 x i8], [3 x i8]* %signature, i64 0, i64 0, !dbg !6066
  %call = call i32 @memcmp(i8* %2, i8* %arraydecay, i64 3) #10, !dbg !6068
  %tobool = icmp ne i32 %call, 0, !dbg !6068
  br i1 %tobool, label %if.end, label %if.then, !dbg !6069

if.then:                                          ; preds = %for.body
  %4 = load %struct.alps_model_info*, %struct.alps_model_info** %model, align 8, !dbg !6070
  %protocol_info = getelementptr inbounds %struct.alps_model_info, %struct.alps_model_info* %4, i32 0, i32 1, !dbg !6071
  store %struct.alps_protocol_info* %protocol_info, %struct.alps_protocol_info** %retval, align 8, !dbg !6072
  br label %return, !dbg !6072

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !6073

for.inc:                                          ; preds = %if.end
  %5 = load i32, i32* %i, align 4, !dbg !6074
  %inc = add i32 %5, 1, !dbg !6074
  store i32 %inc, i32* %i, align 4, !dbg !6074
  br label %for.cond, !dbg !6075, !llvm.loop !6076

for.end:                                          ; preds = %for.cond
  store %struct.alps_protocol_info* null, %struct.alps_protocol_info** %retval, align 8, !dbg !6078
  br label %return, !dbg !6078

return:                                           ; preds = %for.end, %if.then
  %6 = load %struct.alps_protocol_info*, %struct.alps_protocol_info** %retval, align 8, !dbg !6079
  ret %struct.alps_protocol_info* %6, !dbg !6079
}

; Function Attrs: cold noredzone
declare dso_local void @_dev_warn(%struct.device*, i8*, ...) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @alps_set_protocol(%struct.psmouse* %psmouse, %struct.alps_data* %priv, %struct.alps_protocol_info* %protocol) #0 !dbg !6080 {
entry:
  %retval = alloca i32, align 4
  %psmouse.addr = alloca %struct.psmouse*, align 8
  %priv.addr = alloca %struct.alps_data*, align 8
  %protocol.addr = alloca %struct.alps_protocol_info*, align 8
  store %struct.psmouse* %psmouse, %struct.psmouse** %psmouse.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.psmouse** %psmouse.addr, metadata !6083, metadata !DIExpression()), !dbg !6084
  store %struct.alps_data* %priv, %struct.alps_data** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.alps_data** %priv.addr, metadata !6085, metadata !DIExpression()), !dbg !6086
  store %struct.alps_protocol_info* %protocol, %struct.alps_protocol_info** %protocol.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.alps_protocol_info** %protocol.addr, metadata !6087, metadata !DIExpression()), !dbg !6088
  %0 = load %struct.alps_data*, %struct.alps_data** %priv.addr, align 8, !dbg !6089
  %1 = bitcast %struct.alps_data* %0 to i8*, !dbg !6089
  %2 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !6090
  %private = getelementptr inbounds %struct.psmouse, %struct.psmouse* %2, i32 0, i32 0, !dbg !6091
  store i8* %1, i8** %private, align 8, !dbg !6092
  %3 = load %struct.alps_data*, %struct.alps_data** %priv.addr, align 8, !dbg !6093
  %timer = getelementptr inbounds %struct.alps_data, %struct.alps_data* %3, i32 0, i32 30, !dbg !6093
  call void @init_timer_key(%struct.timer_list* %timer, void (%struct.timer_list*)* @alps_flush_packet, i32 0, i8* null, %struct.lock_class_key* null) #10, !dbg !6093
  %4 = load %struct.alps_protocol_info*, %struct.alps_protocol_info** %protocol.addr, align 8, !dbg !6094
  %version = getelementptr inbounds %struct.alps_protocol_info, %struct.alps_protocol_info* %4, i32 0, i32 0, !dbg !6095
  %5 = load i16, i16* %version, align 4, !dbg !6095
  %6 = load %struct.alps_data*, %struct.alps_data** %priv.addr, align 8, !dbg !6096
  %proto_version = getelementptr inbounds %struct.alps_data, %struct.alps_data* %6, i32 0, i32 8, !dbg !6097
  store i16 %5, i16* %proto_version, align 4, !dbg !6098
  %7 = load %struct.alps_protocol_info*, %struct.alps_protocol_info** %protocol.addr, align 8, !dbg !6099
  %byte0 = getelementptr inbounds %struct.alps_protocol_info, %struct.alps_protocol_info* %7, i32 0, i32 1, !dbg !6100
  %8 = load i8, i8* %byte0, align 2, !dbg !6100
  %9 = load %struct.alps_data*, %struct.alps_data** %priv.addr, align 8, !dbg !6101
  %byte01 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %9, i32 0, i32 9, !dbg !6102
  store i8 %8, i8* %byte01, align 2, !dbg !6103
  %10 = load %struct.alps_protocol_info*, %struct.alps_protocol_info** %protocol.addr, align 8, !dbg !6104
  %mask0 = getelementptr inbounds %struct.alps_protocol_info, %struct.alps_protocol_info* %10, i32 0, i32 2, !dbg !6105
  %11 = load i8, i8* %mask0, align 1, !dbg !6105
  %12 = load %struct.alps_data*, %struct.alps_data** %priv.addr, align 8, !dbg !6106
  %mask02 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %12, i32 0, i32 10, !dbg !6107
  store i8 %11, i8* %mask02, align 1, !dbg !6108
  %13 = load %struct.alps_protocol_info*, %struct.alps_protocol_info** %protocol.addr, align 8, !dbg !6109
  %flags = getelementptr inbounds %struct.alps_protocol_info, %struct.alps_protocol_info* %13, i32 0, i32 3, !dbg !6110
  %14 = load i32, i32* %flags, align 4, !dbg !6110
  %15 = load %struct.alps_data*, %struct.alps_data** %priv.addr, align 8, !dbg !6111
  %flags3 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %15, i32 0, i32 13, !dbg !6112
  store i32 %14, i32* %flags3, align 8, !dbg !6113
  %16 = load %struct.alps_data*, %struct.alps_data** %priv.addr, align 8, !dbg !6114
  %x_max = getelementptr inbounds %struct.alps_data, %struct.alps_data* %16, i32 0, i32 14, !dbg !6115
  store i32 2000, i32* %x_max, align 4, !dbg !6116
  %17 = load %struct.alps_data*, %struct.alps_data** %priv.addr, align 8, !dbg !6117
  %y_max = getelementptr inbounds %struct.alps_data, %struct.alps_data* %17, i32 0, i32 15, !dbg !6118
  store i32 1400, i32* %y_max, align 8, !dbg !6119
  %18 = load %struct.alps_data*, %struct.alps_data** %priv.addr, align 8, !dbg !6120
  %x_bits = getelementptr inbounds %struct.alps_data, %struct.alps_data* %18, i32 0, i32 16, !dbg !6121
  store i32 15, i32* %x_bits, align 4, !dbg !6122
  %19 = load %struct.alps_data*, %struct.alps_data** %priv.addr, align 8, !dbg !6123
  %y_bits = getelementptr inbounds %struct.alps_data, %struct.alps_data* %19, i32 0, i32 17, !dbg !6124
  store i32 11, i32* %y_bits, align 8, !dbg !6125
  %20 = load %struct.alps_data*, %struct.alps_data** %priv.addr, align 8, !dbg !6126
  %proto_version4 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %20, i32 0, i32 8, !dbg !6127
  %21 = load i16, i16* %proto_version4, align 4, !dbg !6127
  %conv = zext i16 %21 to i32, !dbg !6126
  switch i32 %conv, label %sw.epilog [
    i32 256, label %sw.bb
    i32 512, label %sw.bb
    i32 768, label %sw.bb8
    i32 784, label %sw.bb17
    i32 1024, label %sw.bb33
    i32 1280, label %sw.bb39
    i32 1536, label %sw.bb52
    i32 1792, label %sw.bb59
    i32 2048, label %sw.bb82
  ], !dbg !6128

sw.bb:                                            ; preds = %entry, %entry
  %22 = load %struct.alps_data*, %struct.alps_data** %priv.addr, align 8, !dbg !6129
  %hw_init = getelementptr inbounds %struct.alps_data, %struct.alps_data* %22, i32 0, i32 20, !dbg !6131
  store i32 (%struct.psmouse*)* @alps_hw_init_v1_v2, i32 (%struct.psmouse*)** %hw_init, align 8, !dbg !6132
  %23 = load %struct.alps_data*, %struct.alps_data** %priv.addr, align 8, !dbg !6133
  %process_packet = getelementptr inbounds %struct.alps_data, %struct.alps_data* %23, i32 0, i32 21, !dbg !6134
  store void (%struct.psmouse*)* @alps_process_packet_v1_v2, void (%struct.psmouse*)** %process_packet, align 8, !dbg !6135
  %24 = load %struct.alps_data*, %struct.alps_data** %priv.addr, align 8, !dbg !6136
  %set_abs_params = getelementptr inbounds %struct.alps_data, %struct.alps_data* %24, i32 0, i32 23, !dbg !6137
  store void (%struct.alps_data*, %struct.input_dev*)* @alps_set_abs_params_st, void (%struct.alps_data*, %struct.input_dev*)** %set_abs_params, align 8, !dbg !6138
  %25 = load %struct.alps_data*, %struct.alps_data** %priv.addr, align 8, !dbg !6139
  %x_max5 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %25, i32 0, i32 14, !dbg !6140
  store i32 1023, i32* %x_max5, align 4, !dbg !6141
  %26 = load %struct.alps_data*, %struct.alps_data** %priv.addr, align 8, !dbg !6142
  %y_max6 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %26, i32 0, i32 15, !dbg !6143
  store i32 767, i32* %y_max6, align 8, !dbg !6144
  %call = call i32 @dmi_check_system(%struct.dmi_system_id* getelementptr inbounds ([5 x %struct.dmi_system_id], [5 x %struct.dmi_system_id]* bitcast ([5 x { i32 (%struct.dmi_system_id*)*, i8*, [4 x %struct.dmi_strmatch], i8* }]* @alps_dmi_has_separate_stick_buttons to [5 x %struct.dmi_system_id]*), i64 0, i64 0)) #10, !dbg !6145
  %tobool = icmp ne i32 %call, 0, !dbg !6145
  br i1 %tobool, label %if.then, label %if.end, !dbg !6147

if.then:                                          ; preds = %sw.bb
  %27 = load %struct.alps_data*, %struct.alps_data** %priv.addr, align 8, !dbg !6148
  %flags7 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %27, i32 0, i32 13, !dbg !6149
  %28 = load i32, i32* %flags7, align 8, !dbg !6150
  %or = or i32 %28, 256, !dbg !6150
  store i32 %or, i32* %flags7, align 8, !dbg !6150
  br label %if.end, !dbg !6148

if.end:                                           ; preds = %if.then, %sw.bb
  br label %sw.epilog, !dbg !6151

sw.bb8:                                           ; preds = %entry
  %29 = load %struct.alps_data*, %struct.alps_data** %priv.addr, align 8, !dbg !6152
  %hw_init9 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %29, i32 0, i32 20, !dbg !6153
  store i32 (%struct.psmouse*)* @alps_hw_init_v3, i32 (%struct.psmouse*)** %hw_init9, align 8, !dbg !6154
  %30 = load %struct.alps_data*, %struct.alps_data** %priv.addr, align 8, !dbg !6155
  %process_packet10 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %30, i32 0, i32 21, !dbg !6156
  store void (%struct.psmouse*)* @alps_process_packet_v3, void (%struct.psmouse*)** %process_packet10, align 8, !dbg !6157
  %31 = load %struct.alps_data*, %struct.alps_data** %priv.addr, align 8, !dbg !6158
  %set_abs_params11 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %31, i32 0, i32 23, !dbg !6159
  store void (%struct.alps_data*, %struct.input_dev*)* @alps_set_abs_params_semi_mt, void (%struct.alps_data*, %struct.input_dev*)** %set_abs_params11, align 8, !dbg !6160
  %32 = load %struct.alps_data*, %struct.alps_data** %priv.addr, align 8, !dbg !6161
  %decode_fields = getelementptr inbounds %struct.alps_data, %struct.alps_data* %32, i32 0, i32 22, !dbg !6162
  store i32 (%struct.alps_fields*, i8*, %struct.psmouse*)* @alps_decode_pinnacle, i32 (%struct.alps_fields*, i8*, %struct.psmouse*)** %decode_fields, align 8, !dbg !6163
  %33 = load %struct.alps_data*, %struct.alps_data** %priv.addr, align 8, !dbg !6164
  %nibble_commands = getelementptr inbounds %struct.alps_data, %struct.alps_data* %33, i32 0, i32 6, !dbg !6165
  store %struct.alps_nibble_commands* getelementptr inbounds ([16 x %struct.alps_nibble_commands], [16 x %struct.alps_nibble_commands]* @alps_v3_nibble_commands, i64 0, i64 0), %struct.alps_nibble_commands** %nibble_commands, align 8, !dbg !6166
  %34 = load %struct.alps_data*, %struct.alps_data** %priv.addr, align 8, !dbg !6167
  %addr_command = getelementptr inbounds %struct.alps_data, %struct.alps_data* %34, i32 0, i32 7, !dbg !6168
  store i32 236, i32* %addr_command, align 8, !dbg !6169
  %35 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !6170
  %call12 = call i32 @alps_probe_trackstick_v3_v7(%struct.psmouse* %35, i32 0) #10, !dbg !6172
  %cmp = icmp slt i32 %call12, 0, !dbg !6173
  br i1 %cmp, label %if.then14, label %if.end16, !dbg !6174

if.then14:                                        ; preds = %sw.bb8
  %36 = load %struct.alps_data*, %struct.alps_data** %priv.addr, align 8, !dbg !6175
  %flags15 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %36, i32 0, i32 13, !dbg !6176
  %37 = load i32, i32* %flags15, align 8, !dbg !6177
  %and = and i32 %37, -3, !dbg !6177
  store i32 %and, i32* %flags15, align 8, !dbg !6177
  br label %if.end16, !dbg !6175

if.end16:                                         ; preds = %if.then14, %sw.bb8
  br label %sw.epilog, !dbg !6178

sw.bb17:                                          ; preds = %entry
  %38 = load %struct.alps_data*, %struct.alps_data** %priv.addr, align 8, !dbg !6179
  %hw_init18 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %38, i32 0, i32 20, !dbg !6180
  store i32 (%struct.psmouse*)* @alps_hw_init_rushmore_v3, i32 (%struct.psmouse*)** %hw_init18, align 8, !dbg !6181
  %39 = load %struct.alps_data*, %struct.alps_data** %priv.addr, align 8, !dbg !6182
  %process_packet19 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %39, i32 0, i32 21, !dbg !6183
  store void (%struct.psmouse*)* @alps_process_packet_v3, void (%struct.psmouse*)** %process_packet19, align 8, !dbg !6184
  %40 = load %struct.alps_data*, %struct.alps_data** %priv.addr, align 8, !dbg !6185
  %set_abs_params20 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %40, i32 0, i32 23, !dbg !6186
  store void (%struct.alps_data*, %struct.input_dev*)* @alps_set_abs_params_semi_mt, void (%struct.alps_data*, %struct.input_dev*)** %set_abs_params20, align 8, !dbg !6187
  %41 = load %struct.alps_data*, %struct.alps_data** %priv.addr, align 8, !dbg !6188
  %decode_fields21 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %41, i32 0, i32 22, !dbg !6189
  store i32 (%struct.alps_fields*, i8*, %struct.psmouse*)* @alps_decode_rushmore, i32 (%struct.alps_fields*, i8*, %struct.psmouse*)** %decode_fields21, align 8, !dbg !6190
  %42 = load %struct.alps_data*, %struct.alps_data** %priv.addr, align 8, !dbg !6191
  %nibble_commands22 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %42, i32 0, i32 6, !dbg !6192
  store %struct.alps_nibble_commands* getelementptr inbounds ([16 x %struct.alps_nibble_commands], [16 x %struct.alps_nibble_commands]* @alps_v3_nibble_commands, i64 0, i64 0), %struct.alps_nibble_commands** %nibble_commands22, align 8, !dbg !6193
  %43 = load %struct.alps_data*, %struct.alps_data** %priv.addr, align 8, !dbg !6194
  %addr_command23 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %43, i32 0, i32 7, !dbg !6195
  store i32 236, i32* %addr_command23, align 8, !dbg !6196
  %44 = load %struct.alps_data*, %struct.alps_data** %priv.addr, align 8, !dbg !6197
  %x_bits24 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %44, i32 0, i32 16, !dbg !6198
  store i32 16, i32* %x_bits24, align 4, !dbg !6199
  %45 = load %struct.alps_data*, %struct.alps_data** %priv.addr, align 8, !dbg !6200
  %y_bits25 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %45, i32 0, i32 17, !dbg !6201
  store i32 12, i32* %y_bits25, align 8, !dbg !6202
  %46 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !6203
  %call26 = call i32 @alps_probe_trackstick_v3_v7(%struct.psmouse* %46, i32 49856) #10, !dbg !6205
  %cmp27 = icmp slt i32 %call26, 0, !dbg !6206
  br i1 %cmp27, label %if.then29, label %if.end32, !dbg !6207

if.then29:                                        ; preds = %sw.bb17
  %47 = load %struct.alps_data*, %struct.alps_data** %priv.addr, align 8, !dbg !6208
  %flags30 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %47, i32 0, i32 13, !dbg !6209
  %48 = load i32, i32* %flags30, align 8, !dbg !6210
  %and31 = and i32 %48, -3, !dbg !6210
  store i32 %and31, i32* %flags30, align 8, !dbg !6210
  br label %if.end32, !dbg !6208

if.end32:                                         ; preds = %if.then29, %sw.bb17
  br label %sw.epilog, !dbg !6211

sw.bb33:                                          ; preds = %entry
  %49 = load %struct.alps_data*, %struct.alps_data** %priv.addr, align 8, !dbg !6212
  %hw_init34 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %49, i32 0, i32 20, !dbg !6213
  store i32 (%struct.psmouse*)* @alps_hw_init_v4, i32 (%struct.psmouse*)** %hw_init34, align 8, !dbg !6214
  %50 = load %struct.alps_data*, %struct.alps_data** %priv.addr, align 8, !dbg !6215
  %process_packet35 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %50, i32 0, i32 21, !dbg !6216
  store void (%struct.psmouse*)* @alps_process_packet_v4, void (%struct.psmouse*)** %process_packet35, align 8, !dbg !6217
  %51 = load %struct.alps_data*, %struct.alps_data** %priv.addr, align 8, !dbg !6218
  %set_abs_params36 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %51, i32 0, i32 23, !dbg !6219
  store void (%struct.alps_data*, %struct.input_dev*)* @alps_set_abs_params_semi_mt, void (%struct.alps_data*, %struct.input_dev*)** %set_abs_params36, align 8, !dbg !6220
  %52 = load %struct.alps_data*, %struct.alps_data** %priv.addr, align 8, !dbg !6221
  %nibble_commands37 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %52, i32 0, i32 6, !dbg !6222
  store %struct.alps_nibble_commands* getelementptr inbounds ([16 x %struct.alps_nibble_commands], [16 x %struct.alps_nibble_commands]* @alps_v4_nibble_commands, i64 0, i64 0), %struct.alps_nibble_commands** %nibble_commands37, align 8, !dbg !6223
  %53 = load %struct.alps_data*, %struct.alps_data** %priv.addr, align 8, !dbg !6224
  %addr_command38 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %53, i32 0, i32 7, !dbg !6225
  store i32 245, i32* %addr_command38, align 8, !dbg !6226
  br label %sw.epilog, !dbg !6227

sw.bb39:                                          ; preds = %entry
  %54 = load %struct.alps_data*, %struct.alps_data** %priv.addr, align 8, !dbg !6228
  %hw_init40 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %54, i32 0, i32 20, !dbg !6229
  store i32 (%struct.psmouse*)* @alps_hw_init_dolphin_v1, i32 (%struct.psmouse*)** %hw_init40, align 8, !dbg !6230
  %55 = load %struct.alps_data*, %struct.alps_data** %priv.addr, align 8, !dbg !6231
  %process_packet41 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %55, i32 0, i32 21, !dbg !6232
  store void (%struct.psmouse*)* @alps_process_touchpad_packet_v3_v5, void (%struct.psmouse*)** %process_packet41, align 8, !dbg !6233
  %56 = load %struct.alps_data*, %struct.alps_data** %priv.addr, align 8, !dbg !6234
  %decode_fields42 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %56, i32 0, i32 22, !dbg !6235
  store i32 (%struct.alps_fields*, i8*, %struct.psmouse*)* @alps_decode_dolphin, i32 (%struct.alps_fields*, i8*, %struct.psmouse*)** %decode_fields42, align 8, !dbg !6236
  %57 = load %struct.alps_data*, %struct.alps_data** %priv.addr, align 8, !dbg !6237
  %set_abs_params43 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %57, i32 0, i32 23, !dbg !6238
  store void (%struct.alps_data*, %struct.input_dev*)* @alps_set_abs_params_semi_mt, void (%struct.alps_data*, %struct.input_dev*)** %set_abs_params43, align 8, !dbg !6239
  %58 = load %struct.alps_data*, %struct.alps_data** %priv.addr, align 8, !dbg !6240
  %nibble_commands44 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %58, i32 0, i32 6, !dbg !6241
  store %struct.alps_nibble_commands* getelementptr inbounds ([16 x %struct.alps_nibble_commands], [16 x %struct.alps_nibble_commands]* @alps_v3_nibble_commands, i64 0, i64 0), %struct.alps_nibble_commands** %nibble_commands44, align 8, !dbg !6242
  %59 = load %struct.alps_data*, %struct.alps_data** %priv.addr, align 8, !dbg !6243
  %addr_command45 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %59, i32 0, i32 7, !dbg !6244
  store i32 236, i32* %addr_command45, align 8, !dbg !6245
  %60 = load %struct.alps_data*, %struct.alps_data** %priv.addr, align 8, !dbg !6246
  %x_bits46 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %60, i32 0, i32 16, !dbg !6247
  store i32 23, i32* %x_bits46, align 4, !dbg !6248
  %61 = load %struct.alps_data*, %struct.alps_data** %priv.addr, align 8, !dbg !6249
  %y_bits47 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %61, i32 0, i32 17, !dbg !6250
  store i32 12, i32* %y_bits47, align 8, !dbg !6251
  %62 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !6252
  %63 = load %struct.alps_data*, %struct.alps_data** %priv.addr, align 8, !dbg !6254
  %call48 = call i32 @alps_dolphin_get_device_area(%struct.psmouse* %62, %struct.alps_data* %63) #10, !dbg !6255
  %tobool49 = icmp ne i32 %call48, 0, !dbg !6255
  br i1 %tobool49, label %if.then50, label %if.end51, !dbg !6256

if.then50:                                        ; preds = %sw.bb39
  store i32 -5, i32* %retval, align 4, !dbg !6257
  br label %return, !dbg !6257

if.end51:                                         ; preds = %sw.bb39
  br label %sw.epilog, !dbg !6258

sw.bb52:                                          ; preds = %entry
  %64 = load %struct.alps_data*, %struct.alps_data** %priv.addr, align 8, !dbg !6259
  %hw_init53 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %64, i32 0, i32 20, !dbg !6260
  store i32 (%struct.psmouse*)* @alps_hw_init_v6, i32 (%struct.psmouse*)** %hw_init53, align 8, !dbg !6261
  %65 = load %struct.alps_data*, %struct.alps_data** %priv.addr, align 8, !dbg !6262
  %process_packet54 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %65, i32 0, i32 21, !dbg !6263
  store void (%struct.psmouse*)* @alps_process_packet_v6, void (%struct.psmouse*)** %process_packet54, align 8, !dbg !6264
  %66 = load %struct.alps_data*, %struct.alps_data** %priv.addr, align 8, !dbg !6265
  %set_abs_params55 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %66, i32 0, i32 23, !dbg !6266
  store void (%struct.alps_data*, %struct.input_dev*)* @alps_set_abs_params_st, void (%struct.alps_data*, %struct.input_dev*)** %set_abs_params55, align 8, !dbg !6267
  %67 = load %struct.alps_data*, %struct.alps_data** %priv.addr, align 8, !dbg !6268
  %nibble_commands56 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %67, i32 0, i32 6, !dbg !6269
  store %struct.alps_nibble_commands* getelementptr inbounds ([16 x %struct.alps_nibble_commands], [16 x %struct.alps_nibble_commands]* @alps_v6_nibble_commands, i64 0, i64 0), %struct.alps_nibble_commands** %nibble_commands56, align 8, !dbg !6270
  %68 = load %struct.alps_data*, %struct.alps_data** %priv.addr, align 8, !dbg !6271
  %x_max57 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %68, i32 0, i32 14, !dbg !6272
  store i32 2047, i32* %x_max57, align 4, !dbg !6273
  %69 = load %struct.alps_data*, %struct.alps_data** %priv.addr, align 8, !dbg !6274
  %y_max58 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %69, i32 0, i32 15, !dbg !6275
  store i32 1535, i32* %y_max58, align 8, !dbg !6276
  br label %sw.epilog, !dbg !6277

sw.bb59:                                          ; preds = %entry
  %70 = load %struct.alps_data*, %struct.alps_data** %priv.addr, align 8, !dbg !6278
  %hw_init60 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %70, i32 0, i32 20, !dbg !6279
  store i32 (%struct.psmouse*)* @alps_hw_init_v7, i32 (%struct.psmouse*)** %hw_init60, align 8, !dbg !6280
  %71 = load %struct.alps_data*, %struct.alps_data** %priv.addr, align 8, !dbg !6281
  %process_packet61 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %71, i32 0, i32 21, !dbg !6282
  store void (%struct.psmouse*)* @alps_process_packet_v7, void (%struct.psmouse*)** %process_packet61, align 8, !dbg !6283
  %72 = load %struct.alps_data*, %struct.alps_data** %priv.addr, align 8, !dbg !6284
  %decode_fields62 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %72, i32 0, i32 22, !dbg !6285
  store i32 (%struct.alps_fields*, i8*, %struct.psmouse*)* @alps_decode_packet_v7, i32 (%struct.alps_fields*, i8*, %struct.psmouse*)** %decode_fields62, align 8, !dbg !6286
  %73 = load %struct.alps_data*, %struct.alps_data** %priv.addr, align 8, !dbg !6287
  %set_abs_params63 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %73, i32 0, i32 23, !dbg !6288
  store void (%struct.alps_data*, %struct.input_dev*)* @alps_set_abs_params_v7, void (%struct.alps_data*, %struct.input_dev*)** %set_abs_params63, align 8, !dbg !6289
  %74 = load %struct.alps_data*, %struct.alps_data** %priv.addr, align 8, !dbg !6290
  %nibble_commands64 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %74, i32 0, i32 6, !dbg !6291
  store %struct.alps_nibble_commands* getelementptr inbounds ([16 x %struct.alps_nibble_commands], [16 x %struct.alps_nibble_commands]* @alps_v3_nibble_commands, i64 0, i64 0), %struct.alps_nibble_commands** %nibble_commands64, align 8, !dbg !6292
  %75 = load %struct.alps_data*, %struct.alps_data** %priv.addr, align 8, !dbg !6293
  %addr_command65 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %75, i32 0, i32 7, !dbg !6294
  store i32 236, i32* %addr_command65, align 8, !dbg !6295
  %76 = load %struct.alps_data*, %struct.alps_data** %priv.addr, align 8, !dbg !6296
  %x_max66 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %76, i32 0, i32 14, !dbg !6297
  store i32 4095, i32* %x_max66, align 4, !dbg !6298
  %77 = load %struct.alps_data*, %struct.alps_data** %priv.addr, align 8, !dbg !6299
  %y_max67 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %77, i32 0, i32 15, !dbg !6300
  store i32 2047, i32* %y_max67, align 8, !dbg !6301
  %78 = load %struct.alps_data*, %struct.alps_data** %priv.addr, align 8, !dbg !6302
  %fw_ver = getelementptr inbounds %struct.alps_data, %struct.alps_data* %78, i32 0, i32 12, !dbg !6304
  %arrayidx = getelementptr [3 x i8], [3 x i8]* %fw_ver, i64 0, i64 1, !dbg !6302
  %79 = load i8, i8* %arrayidx, align 1, !dbg !6302
  %conv68 = zext i8 %79 to i32, !dbg !6302
  %cmp69 = icmp ne i32 %conv68, 186, !dbg !6305
  br i1 %cmp69, label %if.then71, label %if.end74, !dbg !6306

if.then71:                                        ; preds = %sw.bb59
  %80 = load %struct.alps_data*, %struct.alps_data** %priv.addr, align 8, !dbg !6307
  %flags72 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %80, i32 0, i32 13, !dbg !6308
  %81 = load i32, i32* %flags72, align 8, !dbg !6309
  %or73 = or i32 %81, 512, !dbg !6309
  store i32 %or73, i32* %flags72, align 8, !dbg !6309
  br label %if.end74, !dbg !6307

if.end74:                                         ; preds = %if.then71, %sw.bb59
  %82 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !6310
  %call75 = call i32 @alps_probe_trackstick_v3_v7(%struct.psmouse* %82, i32 49856) #10, !dbg !6312
  %cmp76 = icmp slt i32 %call75, 0, !dbg !6313
  br i1 %cmp76, label %if.then78, label %if.end81, !dbg !6314

if.then78:                                        ; preds = %if.end74
  %83 = load %struct.alps_data*, %struct.alps_data** %priv.addr, align 8, !dbg !6315
  %flags79 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %83, i32 0, i32 13, !dbg !6316
  %84 = load i32, i32* %flags79, align 8, !dbg !6317
  %and80 = and i32 %84, -3, !dbg !6317
  store i32 %and80, i32* %flags79, align 8, !dbg !6317
  br label %if.end81, !dbg !6315

if.end81:                                         ; preds = %if.then78, %if.end74
  br label %sw.epilog, !dbg !6318

sw.bb82:                                          ; preds = %entry
  %85 = load %struct.alps_data*, %struct.alps_data** %priv.addr, align 8, !dbg !6319
  %hw_init83 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %85, i32 0, i32 20, !dbg !6320
  store i32 (%struct.psmouse*)* @alps_hw_init_ss4_v2, i32 (%struct.psmouse*)** %hw_init83, align 8, !dbg !6321
  %86 = load %struct.alps_data*, %struct.alps_data** %priv.addr, align 8, !dbg !6322
  %process_packet84 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %86, i32 0, i32 21, !dbg !6323
  store void (%struct.psmouse*)* @alps_process_packet_ss4_v2, void (%struct.psmouse*)** %process_packet84, align 8, !dbg !6324
  %87 = load %struct.alps_data*, %struct.alps_data** %priv.addr, align 8, !dbg !6325
  %decode_fields85 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %87, i32 0, i32 22, !dbg !6326
  store i32 (%struct.alps_fields*, i8*, %struct.psmouse*)* @alps_decode_ss4_v2, i32 (%struct.alps_fields*, i8*, %struct.psmouse*)** %decode_fields85, align 8, !dbg !6327
  %88 = load %struct.alps_data*, %struct.alps_data** %priv.addr, align 8, !dbg !6328
  %set_abs_params86 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %88, i32 0, i32 23, !dbg !6329
  store void (%struct.alps_data*, %struct.input_dev*)* @alps_set_abs_params_ss4_v2, void (%struct.alps_data*, %struct.input_dev*)** %set_abs_params86, align 8, !dbg !6330
  %89 = load %struct.alps_data*, %struct.alps_data** %priv.addr, align 8, !dbg !6331
  %nibble_commands87 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %89, i32 0, i32 6, !dbg !6332
  store %struct.alps_nibble_commands* getelementptr inbounds ([16 x %struct.alps_nibble_commands], [16 x %struct.alps_nibble_commands]* @alps_v3_nibble_commands, i64 0, i64 0), %struct.alps_nibble_commands** %nibble_commands87, align 8, !dbg !6333
  %90 = load %struct.alps_data*, %struct.alps_data** %priv.addr, align 8, !dbg !6334
  %addr_command88 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %90, i32 0, i32 7, !dbg !6335
  store i32 236, i32* %addr_command88, align 8, !dbg !6336
  %91 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !6337
  %92 = load %struct.alps_data*, %struct.alps_data** %priv.addr, align 8, !dbg !6339
  %call89 = call i32 @alps_set_defaults_ss4_v2(%struct.psmouse* %91, %struct.alps_data* %92) #10, !dbg !6340
  %tobool90 = icmp ne i32 %call89, 0, !dbg !6340
  br i1 %tobool90, label %if.then91, label %if.end92, !dbg !6341

if.then91:                                        ; preds = %sw.bb82
  store i32 -5, i32* %retval, align 4, !dbg !6342
  br label %return, !dbg !6342

if.end92:                                         ; preds = %sw.bb82
  br label %sw.epilog, !dbg !6343

sw.epilog:                                        ; preds = %entry, %if.end92, %if.end81, %sw.bb52, %if.end51, %sw.bb33, %if.end32, %if.end16, %if.end
  store i32 0, i32* %retval, align 4, !dbg !6344
  br label %return, !dbg !6344

return:                                           ; preds = %sw.epilog, %if.then91, %if.then50
  %93 = load i32, i32* %retval, align 4, !dbg !6345
  ret i32 %93, !dbg !6345
}

; Function Attrs: noredzone
declare dso_local i32 @memcmp(i8*, i8*, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @alps_flush_packet(%struct.timer_list* %t) #0 !dbg !6346 {
entry:
  %t.addr = alloca %struct.timer_list*, align 8
  %priv = alloca %struct.alps_data*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.alps_data*, align 8
  %psmouse = alloca %struct.psmouse*, align 8
  store %struct.timer_list* %t, %struct.timer_list** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.timer_list** %t.addr, metadata !6347, metadata !DIExpression()), !dbg !6348
  call void @llvm.dbg.declare(metadata %struct.alps_data** %priv, metadata !6349, metadata !DIExpression()), !dbg !6350
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !6351, metadata !DIExpression()), !dbg !6353
  %0 = load %struct.timer_list*, %struct.timer_list** %t.addr, align 8, !dbg !6353
  %1 = bitcast %struct.timer_list* %0 to i8*, !dbg !6353
  store i8* %1, i8** %__mptr, align 8, !dbg !6353
  br label %do.body, !dbg !6353

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !6354

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !6353
  %add.ptr = getelementptr i8, i8* %2, i64 -328, !dbg !6353
  %3 = bitcast i8* %add.ptr to %struct.alps_data*, !dbg !6353
  store %struct.alps_data* %3, %struct.alps_data** %tmp, align 8, !dbg !6354
  %4 = load %struct.alps_data*, %struct.alps_data** %tmp, align 8, !dbg !6353
  store %struct.alps_data* %4, %struct.alps_data** %priv, align 8, !dbg !6350
  call void @llvm.dbg.declare(metadata %struct.psmouse** %psmouse, metadata !6356, metadata !DIExpression()), !dbg !6357
  %5 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !6358
  %psmouse1 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %5, i32 0, i32 0, !dbg !6359
  %6 = load %struct.psmouse*, %struct.psmouse** %psmouse1, align 8, !dbg !6359
  store %struct.psmouse* %6, %struct.psmouse** %psmouse, align 8, !dbg !6357
  %7 = load %struct.psmouse*, %struct.psmouse** %psmouse, align 8, !dbg !6360
  %ps2dev = getelementptr inbounds %struct.psmouse, %struct.psmouse* %7, i32 0, i32 2, !dbg !6361
  %serio = getelementptr inbounds %struct.ps2dev, %struct.ps2dev* %ps2dev, i32 0, i32 0, !dbg !6362
  %8 = load %struct.serio*, %struct.serio** %serio, align 8, !dbg !6362
  call void @serio_pause_rx(%struct.serio* %8) #10, !dbg !6363
  %9 = load %struct.psmouse*, %struct.psmouse** %psmouse, align 8, !dbg !6364
  %pktcnt = getelementptr inbounds %struct.psmouse, %struct.psmouse* %9, i32 0, i32 9, !dbg !6366
  %10 = load i8, i8* %pktcnt, align 1, !dbg !6366
  %conv = zext i8 %10 to i32, !dbg !6364
  %11 = load %struct.psmouse*, %struct.psmouse** %psmouse, align 8, !dbg !6367
  %pktsize = getelementptr inbounds %struct.psmouse, %struct.psmouse* %11, i32 0, i32 10, !dbg !6368
  %12 = load i8, i8* %pktsize, align 2, !dbg !6368
  %conv2 = zext i8 %12 to i32, !dbg !6367
  %cmp = icmp eq i32 %conv, %conv2, !dbg !6369
  br i1 %cmp, label %if.then, label %if.end14, !dbg !6370

if.then:                                          ; preds = %do.end
  %13 = load %struct.psmouse*, %struct.psmouse** %psmouse, align 8, !dbg !6371
  %packet = getelementptr inbounds %struct.psmouse, %struct.psmouse* %13, i32 0, i32 7, !dbg !6374
  %arrayidx = getelementptr [8 x i8], [8 x i8]* %packet, i64 0, i64 3, !dbg !6371
  %14 = load i8, i8* %arrayidx, align 1, !dbg !6371
  %conv4 = zext i8 %14 to i32, !dbg !6371
  %15 = load %struct.psmouse*, %struct.psmouse** %psmouse, align 8, !dbg !6375
  %packet5 = getelementptr inbounds %struct.psmouse, %struct.psmouse* %15, i32 0, i32 7, !dbg !6376
  %arrayidx6 = getelementptr [8 x i8], [8 x i8]* %packet5, i64 0, i64 4, !dbg !6375
  %16 = load i8, i8* %arrayidx6, align 4, !dbg !6375
  %conv7 = zext i8 %16 to i32, !dbg !6375
  %or = or i32 %conv4, %conv7, !dbg !6377
  %17 = load %struct.psmouse*, %struct.psmouse** %psmouse, align 8, !dbg !6378
  %packet8 = getelementptr inbounds %struct.psmouse, %struct.psmouse* %17, i32 0, i32 7, !dbg !6379
  %arrayidx9 = getelementptr [8 x i8], [8 x i8]* %packet8, i64 0, i64 5, !dbg !6378
  %18 = load i8, i8* %arrayidx9, align 1, !dbg !6378
  %conv10 = zext i8 %18 to i32, !dbg !6378
  %or11 = or i32 %or, %conv10, !dbg !6380
  %and = and i32 %or11, 128, !dbg !6381
  %tobool = icmp ne i32 %and, 0, !dbg !6381
  br i1 %tobool, label %if.then12, label %if.else, !dbg !6382

if.then12:                                        ; preds = %if.then
  br label %if.end, !dbg !6383

if.else:                                          ; preds = %if.then
  %19 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !6385
  %process_packet = getelementptr inbounds %struct.alps_data, %struct.alps_data* %19, i32 0, i32 21, !dbg !6387
  %20 = load void (%struct.psmouse*)*, void (%struct.psmouse*)** %process_packet, align 8, !dbg !6387
  %21 = load %struct.psmouse*, %struct.psmouse** %psmouse, align 8, !dbg !6388
  call void %20(%struct.psmouse* %21) #10, !dbg !6385
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then12
  %22 = load %struct.psmouse*, %struct.psmouse** %psmouse, align 8, !dbg !6389
  %pktcnt13 = getelementptr inbounds %struct.psmouse, %struct.psmouse* %22, i32 0, i32 9, !dbg !6390
  store i8 0, i8* %pktcnt13, align 1, !dbg !6391
  br label %if.end14, !dbg !6392

if.end14:                                         ; preds = %if.end, %do.end
  %23 = load %struct.psmouse*, %struct.psmouse** %psmouse, align 8, !dbg !6393
  %ps2dev15 = getelementptr inbounds %struct.psmouse, %struct.psmouse* %23, i32 0, i32 2, !dbg !6394
  %serio16 = getelementptr inbounds %struct.ps2dev, %struct.ps2dev* %ps2dev15, i32 0, i32 0, !dbg !6395
  %24 = load %struct.serio*, %struct.serio** %serio16, align 8, !dbg !6395
  call void @serio_continue_rx(%struct.serio* %24) #10, !dbg !6396
  ret void, !dbg !6397
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @alps_hw_init_v1_v2(%struct.psmouse* %psmouse) #0 !dbg !6398 {
entry:
  %retval = alloca i32, align 4
  %psmouse.addr = alloca %struct.psmouse*, align 8
  %priv = alloca %struct.alps_data*, align 8
  store %struct.psmouse* %psmouse, %struct.psmouse** %psmouse.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.psmouse** %psmouse.addr, metadata !6399, metadata !DIExpression()), !dbg !6400
  call void @llvm.dbg.declare(metadata %struct.alps_data** %priv, metadata !6401, metadata !DIExpression()), !dbg !6402
  %0 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !6403
  %private = getelementptr inbounds %struct.psmouse, %struct.psmouse* %0, i32 0, i32 0, !dbg !6404
  %1 = load i8*, i8** %private, align 8, !dbg !6404
  %2 = bitcast i8* %1 to %struct.alps_data*, !dbg !6403
  store %struct.alps_data* %2, %struct.alps_data** %priv, align 8, !dbg !6402
  %3 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !6405
  %flags = getelementptr inbounds %struct.alps_data, %struct.alps_data* %3, i32 0, i32 13, !dbg !6407
  %4 = load i32, i32* %flags, align 8, !dbg !6407
  %and = and i32 %4, 4, !dbg !6408
  %tobool = icmp ne i32 %and, 0, !dbg !6408
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !6409

land.lhs.true:                                    ; preds = %entry
  %5 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !6410
  %call = call i32 @alps_passthrough_mode_v2(%struct.psmouse* %5, i1 zeroext true) #10, !dbg !6411
  %tobool1 = icmp ne i32 %call, 0, !dbg !6411
  br i1 %tobool1, label %if.then, label %if.end, !dbg !6412

if.then:                                          ; preds = %land.lhs.true
  store i32 -1, i32* %retval, align 4, !dbg !6413
  br label %return, !dbg !6413

if.end:                                           ; preds = %land.lhs.true, %entry
  %6 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !6415
  %call2 = call i32 @alps_tap_mode(%struct.psmouse* %6, i32 1) #10, !dbg !6417
  %tobool3 = icmp ne i32 %call2, 0, !dbg !6417
  br i1 %tobool3, label %if.then4, label %if.end5, !dbg !6418

if.then4:                                         ; preds = %if.end
  %7 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !6419
  %ps2dev = getelementptr inbounds %struct.psmouse, %struct.psmouse* %7, i32 0, i32 2, !dbg !6419
  %serio = getelementptr inbounds %struct.ps2dev, %struct.ps2dev* %ps2dev, i32 0, i32 0, !dbg !6419
  %8 = load %struct.serio*, %struct.serio** %serio, align 8, !dbg !6419
  %dev = getelementptr inbounds %struct.serio, %struct.serio* %8, i32 0, i32 18, !dbg !6419
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.14, i64 0, i64 0)) #11, !dbg !6419
  store i32 -1, i32* %retval, align 4, !dbg !6421
  br label %return, !dbg !6421

if.end5:                                          ; preds = %if.end
  %9 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !6422
  %call6 = call i32 @alps_absolute_mode_v1_v2(%struct.psmouse* %9) #10, !dbg !6424
  %tobool7 = icmp ne i32 %call6, 0, !dbg !6424
  br i1 %tobool7, label %if.then8, label %if.end12, !dbg !6425

if.then8:                                         ; preds = %if.end5
  %10 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !6426
  %ps2dev9 = getelementptr inbounds %struct.psmouse, %struct.psmouse* %10, i32 0, i32 2, !dbg !6426
  %serio10 = getelementptr inbounds %struct.ps2dev, %struct.ps2dev* %ps2dev9, i32 0, i32 0, !dbg !6426
  %11 = load %struct.serio*, %struct.serio** %serio10, align 8, !dbg !6426
  %dev11 = getelementptr inbounds %struct.serio, %struct.serio* %11, i32 0, i32 18, !dbg !6426
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev11, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15, i64 0, i64 0)) #11, !dbg !6426
  store i32 -1, i32* %retval, align 4, !dbg !6428
  br label %return, !dbg !6428

if.end12:                                         ; preds = %if.end5
  %12 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !6429
  %flags13 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %12, i32 0, i32 13, !dbg !6431
  %13 = load i32, i32* %flags13, align 8, !dbg !6431
  %and14 = and i32 %13, 4, !dbg !6432
  %tobool15 = icmp ne i32 %and14, 0, !dbg !6432
  br i1 %tobool15, label %land.lhs.true16, label %if.end20, !dbg !6433

land.lhs.true16:                                  ; preds = %if.end12
  %14 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !6434
  %call17 = call i32 @alps_passthrough_mode_v2(%struct.psmouse* %14, i1 zeroext false) #10, !dbg !6435
  %tobool18 = icmp ne i32 %call17, 0, !dbg !6435
  br i1 %tobool18, label %if.then19, label %if.end20, !dbg !6436

if.then19:                                        ; preds = %land.lhs.true16
  store i32 -1, i32* %retval, align 4, !dbg !6437
  br label %return, !dbg !6437

if.end20:                                         ; preds = %land.lhs.true16, %if.end12
  %15 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !6439
  %ps2dev21 = getelementptr inbounds %struct.psmouse, %struct.psmouse* %15, i32 0, i32 2, !dbg !6441
  %call22 = call i32 @ps2_command(%struct.ps2dev* %ps2dev21, i8* null, i32 234) #10, !dbg !6442
  %tobool23 = icmp ne i32 %call22, 0, !dbg !6442
  br i1 %tobool23, label %if.then24, label %if.end28, !dbg !6443

if.then24:                                        ; preds = %if.end20
  %16 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !6444
  %ps2dev25 = getelementptr inbounds %struct.psmouse, %struct.psmouse* %16, i32 0, i32 2, !dbg !6444
  %serio26 = getelementptr inbounds %struct.ps2dev, %struct.ps2dev* %ps2dev25, i32 0, i32 0, !dbg !6444
  %17 = load %struct.serio*, %struct.serio** %serio26, align 8, !dbg !6444
  %dev27 = getelementptr inbounds %struct.serio, %struct.serio* %17, i32 0, i32 18, !dbg !6444
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev27, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.16, i64 0, i64 0)) #11, !dbg !6444
  store i32 -1, i32* %retval, align 4, !dbg !6446
  br label %return, !dbg !6446

if.end28:                                         ; preds = %if.end20
  store i32 0, i32* %retval, align 4, !dbg !6447
  br label %return, !dbg !6447

return:                                           ; preds = %if.end28, %if.then24, %if.then19, %if.then8, %if.then4, %if.then
  %18 = load i32, i32* %retval, align 4, !dbg !6448
  ret i32 %18, !dbg !6448
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @alps_process_packet_v1_v2(%struct.psmouse* %psmouse) #0 !dbg !6449 {
entry:
  %psmouse.addr = alloca %struct.psmouse*, align 8
  %priv = alloca %struct.alps_data*, align 8
  %packet = alloca i8*, align 8
  %dev = alloca %struct.input_dev*, align 8
  %dev23 = alloca %struct.input_dev*, align 8
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %z = alloca i32, align 4
  %ges = alloca i32, align 4
  %fin = alloca i32, align 4
  %left = alloca i32, align 4
  %right = alloca i32, align 4
  %middle = alloca i32, align 4
  %back = alloca i32, align 4
  %forward = alloca i32, align 4
  store %struct.psmouse* %psmouse, %struct.psmouse** %psmouse.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.psmouse** %psmouse.addr, metadata !6450, metadata !DIExpression()), !dbg !6451
  call void @llvm.dbg.declare(metadata %struct.alps_data** %priv, metadata !6452, metadata !DIExpression()), !dbg !6453
  %0 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !6454
  %private = getelementptr inbounds %struct.psmouse, %struct.psmouse* %0, i32 0, i32 0, !dbg !6455
  %1 = load i8*, i8** %private, align 8, !dbg !6455
  %2 = bitcast i8* %1 to %struct.alps_data*, !dbg !6454
  store %struct.alps_data* %2, %struct.alps_data** %priv, align 8, !dbg !6453
  call void @llvm.dbg.declare(metadata i8** %packet, metadata !6456, metadata !DIExpression()), !dbg !6457
  %3 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !6458
  %packet1 = getelementptr inbounds %struct.psmouse, %struct.psmouse* %3, i32 0, i32 7, !dbg !6459
  %arraydecay = getelementptr inbounds [8 x i8], [8 x i8]* %packet1, i64 0, i64 0, !dbg !6458
  store i8* %arraydecay, i8** %packet, align 8, !dbg !6457
  call void @llvm.dbg.declare(metadata %struct.input_dev** %dev, metadata !6460, metadata !DIExpression()), !dbg !6461
  %4 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !6462
  %dev2 = getelementptr inbounds %struct.psmouse, %struct.psmouse* %4, i32 0, i32 1, !dbg !6463
  %5 = load %struct.input_dev*, %struct.input_dev** %dev2, align 8, !dbg !6463
  store %struct.input_dev* %5, %struct.input_dev** %dev, align 8, !dbg !6461
  call void @llvm.dbg.declare(metadata %struct.input_dev** %dev23, metadata !6464, metadata !DIExpression()), !dbg !6465
  %6 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !6466
  %dev24 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %6, i32 0, i32 1, !dbg !6467
  %7 = load %struct.input_dev*, %struct.input_dev** %dev24, align 8, !dbg !6467
  store %struct.input_dev* %7, %struct.input_dev** %dev23, align 8, !dbg !6465
  call void @llvm.dbg.declare(metadata i32* %x, metadata !6468, metadata !DIExpression()), !dbg !6469
  call void @llvm.dbg.declare(metadata i32* %y, metadata !6470, metadata !DIExpression()), !dbg !6471
  call void @llvm.dbg.declare(metadata i32* %z, metadata !6472, metadata !DIExpression()), !dbg !6473
  call void @llvm.dbg.declare(metadata i32* %ges, metadata !6474, metadata !DIExpression()), !dbg !6475
  call void @llvm.dbg.declare(metadata i32* %fin, metadata !6476, metadata !DIExpression()), !dbg !6477
  call void @llvm.dbg.declare(metadata i32* %left, metadata !6478, metadata !DIExpression()), !dbg !6479
  call void @llvm.dbg.declare(metadata i32* %right, metadata !6480, metadata !DIExpression()), !dbg !6481
  call void @llvm.dbg.declare(metadata i32* %middle, metadata !6482, metadata !DIExpression()), !dbg !6483
  call void @llvm.dbg.declare(metadata i32* %back, metadata !6484, metadata !DIExpression()), !dbg !6485
  store i32 0, i32* %back, align 4, !dbg !6485
  call void @llvm.dbg.declare(metadata i32* %forward, metadata !6486, metadata !DIExpression()), !dbg !6487
  store i32 0, i32* %forward, align 4, !dbg !6487
  %8 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !6488
  %proto_version = getelementptr inbounds %struct.alps_data, %struct.alps_data* %8, i32 0, i32 8, !dbg !6490
  %9 = load i16, i16* %proto_version, align 4, !dbg !6490
  %conv = zext i16 %9 to i32, !dbg !6488
  %cmp = icmp eq i32 %conv, 256, !dbg !6491
  br i1 %cmp, label %if.then, label %if.else, !dbg !6492

if.then:                                          ; preds = %entry
  %10 = load i8*, i8** %packet, align 8, !dbg !6493
  %arrayidx = getelementptr i8, i8* %10, i64 2, !dbg !6493
  %11 = load i8, i8* %arrayidx, align 1, !dbg !6493
  %conv6 = zext i8 %11 to i32, !dbg !6493
  %and = and i32 %conv6, 16, !dbg !6495
  store i32 %and, i32* %left, align 4, !dbg !6496
  %12 = load i8*, i8** %packet, align 8, !dbg !6497
  %arrayidx7 = getelementptr i8, i8* %12, i64 2, !dbg !6497
  %13 = load i8, i8* %arrayidx7, align 1, !dbg !6497
  %conv8 = zext i8 %13 to i32, !dbg !6497
  %and9 = and i32 %conv8, 8, !dbg !6498
  store i32 %and9, i32* %right, align 4, !dbg !6499
  store i32 0, i32* %middle, align 4, !dbg !6500
  %14 = load i8*, i8** %packet, align 8, !dbg !6501
  %arrayidx10 = getelementptr i8, i8* %14, i64 1, !dbg !6501
  %15 = load i8, i8* %arrayidx10, align 1, !dbg !6501
  %conv11 = zext i8 %15 to i32, !dbg !6501
  %16 = load i8*, i8** %packet, align 8, !dbg !6502
  %arrayidx12 = getelementptr i8, i8* %16, i64 0, !dbg !6502
  %17 = load i8, i8* %arrayidx12, align 1, !dbg !6502
  %conv13 = zext i8 %17 to i32, !dbg !6502
  %and14 = and i32 %conv13, 7, !dbg !6503
  %shl = shl i32 %and14, 7, !dbg !6504
  %or = or i32 %conv11, %shl, !dbg !6505
  store i32 %or, i32* %x, align 4, !dbg !6506
  %18 = load i8*, i8** %packet, align 8, !dbg !6507
  %arrayidx15 = getelementptr i8, i8* %18, i64 4, !dbg !6507
  %19 = load i8, i8* %arrayidx15, align 1, !dbg !6507
  %conv16 = zext i8 %19 to i32, !dbg !6507
  %20 = load i8*, i8** %packet, align 8, !dbg !6508
  %arrayidx17 = getelementptr i8, i8* %20, i64 3, !dbg !6508
  %21 = load i8, i8* %arrayidx17, align 1, !dbg !6508
  %conv18 = zext i8 %21 to i32, !dbg !6508
  %and19 = and i32 %conv18, 7, !dbg !6509
  %shl20 = shl i32 %and19, 7, !dbg !6510
  %or21 = or i32 %conv16, %shl20, !dbg !6511
  store i32 %or21, i32* %y, align 4, !dbg !6512
  %22 = load i8*, i8** %packet, align 8, !dbg !6513
  %arrayidx22 = getelementptr i8, i8* %22, i64 5, !dbg !6513
  %23 = load i8, i8* %arrayidx22, align 1, !dbg !6513
  %conv23 = zext i8 %23 to i32, !dbg !6513
  store i32 %conv23, i32* %z, align 4, !dbg !6514
  br label %if.end, !dbg !6515

if.else:                                          ; preds = %entry
  %24 = load i8*, i8** %packet, align 8, !dbg !6516
  %arrayidx24 = getelementptr i8, i8* %24, i64 3, !dbg !6516
  %25 = load i8, i8* %arrayidx24, align 1, !dbg !6516
  %conv25 = zext i8 %25 to i32, !dbg !6516
  %and26 = and i32 %conv25, 1, !dbg !6518
  store i32 %and26, i32* %left, align 4, !dbg !6519
  %26 = load i8*, i8** %packet, align 8, !dbg !6520
  %arrayidx27 = getelementptr i8, i8* %26, i64 3, !dbg !6520
  %27 = load i8, i8* %arrayidx27, align 1, !dbg !6520
  %conv28 = zext i8 %27 to i32, !dbg !6520
  %and29 = and i32 %conv28, 2, !dbg !6521
  store i32 %and29, i32* %right, align 4, !dbg !6522
  %28 = load i8*, i8** %packet, align 8, !dbg !6523
  %arrayidx30 = getelementptr i8, i8* %28, i64 3, !dbg !6523
  %29 = load i8, i8* %arrayidx30, align 1, !dbg !6523
  %conv31 = zext i8 %29 to i32, !dbg !6523
  %and32 = and i32 %conv31, 4, !dbg !6524
  store i32 %and32, i32* %middle, align 4, !dbg !6525
  %30 = load i8*, i8** %packet, align 8, !dbg !6526
  %arrayidx33 = getelementptr i8, i8* %30, i64 1, !dbg !6526
  %31 = load i8, i8* %arrayidx33, align 1, !dbg !6526
  %conv34 = zext i8 %31 to i32, !dbg !6526
  %32 = load i8*, i8** %packet, align 8, !dbg !6527
  %arrayidx35 = getelementptr i8, i8* %32, i64 2, !dbg !6527
  %33 = load i8, i8* %arrayidx35, align 1, !dbg !6527
  %conv36 = zext i8 %33 to i32, !dbg !6527
  %and37 = and i32 %conv36, 120, !dbg !6528
  %shl38 = shl i32 %and37, 4, !dbg !6529
  %or39 = or i32 %conv34, %shl38, !dbg !6530
  store i32 %or39, i32* %x, align 4, !dbg !6531
  %34 = load i8*, i8** %packet, align 8, !dbg !6532
  %arrayidx40 = getelementptr i8, i8* %34, i64 4, !dbg !6532
  %35 = load i8, i8* %arrayidx40, align 1, !dbg !6532
  %conv41 = zext i8 %35 to i32, !dbg !6532
  %36 = load i8*, i8** %packet, align 8, !dbg !6533
  %arrayidx42 = getelementptr i8, i8* %36, i64 3, !dbg !6533
  %37 = load i8, i8* %arrayidx42, align 1, !dbg !6533
  %conv43 = zext i8 %37 to i32, !dbg !6533
  %and44 = and i32 %conv43, 112, !dbg !6534
  %shl45 = shl i32 %and44, 3, !dbg !6535
  %or46 = or i32 %conv41, %shl45, !dbg !6536
  store i32 %or46, i32* %y, align 4, !dbg !6537
  %38 = load i8*, i8** %packet, align 8, !dbg !6538
  %arrayidx47 = getelementptr i8, i8* %38, i64 5, !dbg !6538
  %39 = load i8, i8* %arrayidx47, align 1, !dbg !6538
  %conv48 = zext i8 %39 to i32, !dbg !6538
  store i32 %conv48, i32* %z, align 4, !dbg !6539
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %40 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !6540
  %flags = getelementptr inbounds %struct.alps_data, %struct.alps_data* %40, i32 0, i32 13, !dbg !6542
  %41 = load i32, i32* %flags, align 8, !dbg !6542
  %and49 = and i32 %41, 16, !dbg !6543
  %tobool = icmp ne i32 %and49, 0, !dbg !6543
  br i1 %tobool, label %if.then50, label %if.end57, !dbg !6544

if.then50:                                        ; preds = %if.end
  %42 = load i8*, i8** %packet, align 8, !dbg !6545
  %arrayidx51 = getelementptr i8, i8* %42, i64 0, !dbg !6545
  %43 = load i8, i8* %arrayidx51, align 1, !dbg !6545
  %conv52 = zext i8 %43 to i32, !dbg !6545
  %and53 = and i32 %conv52, 16, !dbg !6547
  store i32 %and53, i32* %back, align 4, !dbg !6548
  %44 = load i8*, i8** %packet, align 8, !dbg !6549
  %arrayidx54 = getelementptr i8, i8* %44, i64 2, !dbg !6549
  %45 = load i8, i8* %arrayidx54, align 1, !dbg !6549
  %conv55 = zext i8 %45 to i32, !dbg !6549
  %and56 = and i32 %conv55, 4, !dbg !6550
  store i32 %and56, i32* %forward, align 4, !dbg !6551
  br label %if.end57, !dbg !6552

if.end57:                                         ; preds = %if.then50, %if.end
  %46 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !6553
  %flags58 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %46, i32 0, i32 13, !dbg !6555
  %47 = load i32, i32* %flags58, align 8, !dbg !6555
  %and59 = and i32 %47, 32, !dbg !6556
  %tobool60 = icmp ne i32 %and59, 0, !dbg !6556
  br i1 %tobool60, label %if.then61, label %if.end72, !dbg !6557

if.then61:                                        ; preds = %if.end57
  %48 = load i8*, i8** %packet, align 8, !dbg !6558
  %arrayidx62 = getelementptr i8, i8* %48, i64 3, !dbg !6558
  %49 = load i8, i8* %arrayidx62, align 1, !dbg !6558
  %conv63 = zext i8 %49 to i32, !dbg !6558
  %and64 = and i32 %conv63, 4, !dbg !6560
  store i32 %and64, i32* %back, align 4, !dbg !6561
  %50 = load i8*, i8** %packet, align 8, !dbg !6562
  %arrayidx65 = getelementptr i8, i8* %50, i64 2, !dbg !6562
  %51 = load i8, i8* %arrayidx65, align 1, !dbg !6562
  %conv66 = zext i8 %51 to i32, !dbg !6562
  %and67 = and i32 %conv66, 4, !dbg !6563
  store i32 %and67, i32* %forward, align 4, !dbg !6564
  %52 = load i32, i32* %forward, align 4, !dbg !6565
  %tobool68 = icmp ne i32 %52, 0, !dbg !6565
  br i1 %tobool68, label %land.rhs, label %land.end, !dbg !6567

land.rhs:                                         ; preds = %if.then61
  %53 = load i32, i32* %back, align 4, !dbg !6568
  %tobool69 = icmp ne i32 %53, 0, !dbg !6567
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.then61
  %54 = phi i1 [ false, %if.then61 ], [ %tobool69, %land.rhs ], !dbg !6569
  %land.ext = zext i1 %54 to i32, !dbg !6567
  store i32 %land.ext, i32* %middle, align 4, !dbg !6570
  br i1 %54, label %if.then70, label %if.end71, !dbg !6571

if.then70:                                        ; preds = %land.end
  store i32 0, i32* %back, align 4, !dbg !6572
  store i32 0, i32* %forward, align 4, !dbg !6573
  br label %if.end71, !dbg !6574

if.end71:                                         ; preds = %if.then70, %land.end
  br label %if.end72, !dbg !6575

if.end72:                                         ; preds = %if.end71, %if.end57
  %55 = load i8*, i8** %packet, align 8, !dbg !6576
  %arrayidx73 = getelementptr i8, i8* %55, i64 2, !dbg !6576
  %56 = load i8, i8* %arrayidx73, align 1, !dbg !6576
  %conv74 = zext i8 %56 to i32, !dbg !6576
  %and75 = and i32 %conv74, 1, !dbg !6577
  store i32 %and75, i32* %ges, align 4, !dbg !6578
  %57 = load i8*, i8** %packet, align 8, !dbg !6579
  %arrayidx76 = getelementptr i8, i8* %57, i64 2, !dbg !6579
  %58 = load i8, i8* %arrayidx76, align 1, !dbg !6579
  %conv77 = zext i8 %58 to i32, !dbg !6579
  %and78 = and i32 %conv77, 2, !dbg !6580
  store i32 %and78, i32* %fin, align 4, !dbg !6581
  %59 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !6582
  %flags79 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %59, i32 0, i32 13, !dbg !6584
  %60 = load i32, i32* %flags79, align 8, !dbg !6584
  %and80 = and i32 %60, 2, !dbg !6585
  %tobool81 = icmp ne i32 %and80, 0, !dbg !6585
  br i1 %tobool81, label %land.lhs.true, label %if.end95, !dbg !6586

land.lhs.true:                                    ; preds = %if.end72
  %61 = load i32, i32* %z, align 4, !dbg !6587
  %cmp82 = icmp eq i32 %61, 127, !dbg !6588
  br i1 %cmp82, label %if.then84, label %if.end95, !dbg !6589

if.then84:                                        ; preds = %land.lhs.true
  %62 = load %struct.input_dev*, %struct.input_dev** %dev23, align 8, !dbg !6590
  %63 = load i32, i32* %x, align 4, !dbg !6592
  %cmp85 = icmp sgt i32 %63, 383, !dbg !6593
  br i1 %cmp85, label %cond.true, label %cond.false, !dbg !6592

cond.true:                                        ; preds = %if.then84
  %64 = load i32, i32* %x, align 4, !dbg !6594
  %sub = sub i32 %64, 768, !dbg !6595
  br label %cond.end, !dbg !6592

cond.false:                                       ; preds = %if.then84
  %65 = load i32, i32* %x, align 4, !dbg !6596
  br label %cond.end, !dbg !6592

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub, %cond.true ], [ %65, %cond.false ], !dbg !6592
  call void @input_report_rel(%struct.input_dev* %62, i32 0, i32 %cond) #10, !dbg !6597
  %66 = load %struct.input_dev*, %struct.input_dev** %dev23, align 8, !dbg !6598
  %67 = load i32, i32* %y, align 4, !dbg !6599
  %cmp87 = icmp sgt i32 %67, 255, !dbg !6600
  br i1 %cmp87, label %cond.true89, label %cond.false91, !dbg !6599

cond.true89:                                      ; preds = %cond.end
  %68 = load i32, i32* %y, align 4, !dbg !6601
  %sub90 = sub i32 %68, 512, !dbg !6602
  br label %cond.end92, !dbg !6599

cond.false91:                                     ; preds = %cond.end
  %69 = load i32, i32* %y, align 4, !dbg !6603
  br label %cond.end92, !dbg !6599

cond.end92:                                       ; preds = %cond.false91, %cond.true89
  %cond93 = phi i32 [ %sub90, %cond.true89 ], [ %69, %cond.false91 ], !dbg !6599
  %sub94 = sub i32 0, %cond93, !dbg !6604
  call void @input_report_rel(%struct.input_dev* %66, i32 1, i32 %sub94) #10, !dbg !6605
  %70 = load %struct.input_dev*, %struct.input_dev** %dev23, align 8, !dbg !6606
  %71 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !6607
  %72 = load i32, i32* %left, align 4, !dbg !6608
  %73 = load i32, i32* %right, align 4, !dbg !6609
  %74 = load i32, i32* %middle, align 4, !dbg !6610
  call void @alps_report_buttons(%struct.input_dev* %70, %struct.input_dev* %71, i32 %72, i32 %73, i32 %74) #10, !dbg !6611
  %75 = load %struct.input_dev*, %struct.input_dev** %dev23, align 8, !dbg !6612
  call void @input_sync(%struct.input_dev* %75) #10, !dbg !6613
  br label %return, !dbg !6614

if.end95:                                         ; preds = %land.lhs.true, %if.end72
  %76 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !6615
  %flags96 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %76, i32 0, i32 13, !dbg !6617
  %77 = load i32, i32* %flags96, align 8, !dbg !6617
  %and97 = and i32 %77, 256, !dbg !6618
  %tobool98 = icmp ne i32 %and97, 0, !dbg !6618
  br i1 %tobool98, label %if.then99, label %if.end112, !dbg !6619

if.then99:                                        ; preds = %if.end95
  %78 = load i8*, i8** %packet, align 8, !dbg !6620
  %arrayidx100 = getelementptr i8, i8* %78, i64 0, !dbg !6620
  %79 = load i8, i8* %arrayidx100, align 1, !dbg !6620
  %conv101 = zext i8 %79 to i32, !dbg !6620
  %and102 = and i32 %conv101, 1, !dbg !6622
  %80 = load i32, i32* %left, align 4, !dbg !6623
  %or103 = or i32 %80, %and102, !dbg !6623
  store i32 %or103, i32* %left, align 4, !dbg !6623
  %81 = load i8*, i8** %packet, align 8, !dbg !6624
  %arrayidx104 = getelementptr i8, i8* %81, i64 0, !dbg !6624
  %82 = load i8, i8* %arrayidx104, align 1, !dbg !6624
  %conv105 = zext i8 %82 to i32, !dbg !6624
  %and106 = and i32 %conv105, 2, !dbg !6625
  %83 = load i32, i32* %right, align 4, !dbg !6626
  %or107 = or i32 %83, %and106, !dbg !6626
  store i32 %or107, i32* %right, align 4, !dbg !6626
  %84 = load i8*, i8** %packet, align 8, !dbg !6627
  %arrayidx108 = getelementptr i8, i8* %84, i64 0, !dbg !6627
  %85 = load i8, i8* %arrayidx108, align 1, !dbg !6627
  %conv109 = zext i8 %85 to i32, !dbg !6627
  %and110 = and i32 %conv109, 4, !dbg !6628
  %86 = load i32, i32* %middle, align 4, !dbg !6629
  %or111 = or i32 %86, %and110, !dbg !6629
  store i32 %or111, i32* %middle, align 4, !dbg !6629
  br label %if.end112, !dbg !6630

if.end112:                                        ; preds = %if.then99, %if.end95
  %87 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !6631
  %88 = load %struct.input_dev*, %struct.input_dev** %dev23, align 8, !dbg !6632
  %89 = load i32, i32* %left, align 4, !dbg !6633
  %90 = load i32, i32* %right, align 4, !dbg !6634
  %91 = load i32, i32* %middle, align 4, !dbg !6635
  call void @alps_report_buttons(%struct.input_dev* %87, %struct.input_dev* %88, i32 %89, i32 %90, i32 %91) #10, !dbg !6636
  %92 = load i32, i32* %ges, align 4, !dbg !6637
  %tobool113 = icmp ne i32 %92, 0, !dbg !6637
  br i1 %tobool113, label %land.lhs.true114, label %if.end117, !dbg !6639

land.lhs.true114:                                 ; preds = %if.end112
  %93 = load i32, i32* %fin, align 4, !dbg !6640
  %tobool115 = icmp ne i32 %93, 0, !dbg !6640
  br i1 %tobool115, label %if.end117, label %if.then116, !dbg !6641

if.then116:                                       ; preds = %land.lhs.true114
  store i32 40, i32* %z, align 4, !dbg !6642
  br label %if.end117, !dbg !6643

if.end117:                                        ; preds = %if.then116, %land.lhs.true114, %if.end112
  %94 = load i32, i32* %ges, align 4, !dbg !6644
  %tobool118 = icmp ne i32 %94, 0, !dbg !6644
  br i1 %tobool118, label %land.lhs.true119, label %if.end124, !dbg !6646

land.lhs.true119:                                 ; preds = %if.end117
  %95 = load i32, i32* %fin, align 4, !dbg !6647
  %tobool120 = icmp ne i32 %95, 0, !dbg !6647
  br i1 %tobool120, label %land.lhs.true121, label %if.end124, !dbg !6648

land.lhs.true121:                                 ; preds = %land.lhs.true119
  %96 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !6649
  %prev_fin = getelementptr inbounds %struct.alps_data, %struct.alps_data* %96, i32 0, i32 24, !dbg !6650
  %97 = load i32, i32* %prev_fin, align 8, !dbg !6650
  %tobool122 = icmp ne i32 %97, 0, !dbg !6649
  br i1 %tobool122, label %if.end124, label %if.then123, !dbg !6651

if.then123:                                       ; preds = %land.lhs.true121
  %98 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !6652
  %99 = load i32, i32* %x, align 4, !dbg !6654
  call void @input_report_abs(%struct.input_dev* %98, i32 0, i32 %99) #10, !dbg !6655
  %100 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !6656
  %101 = load i32, i32* %y, align 4, !dbg !6657
  call void @input_report_abs(%struct.input_dev* %100, i32 1, i32 %101) #10, !dbg !6658
  %102 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !6659
  call void @input_report_abs(%struct.input_dev* %102, i32 24, i32 0) #10, !dbg !6660
  %103 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !6661
  call void @input_report_key(%struct.input_dev* %103, i32 325, i32 0) #10, !dbg !6662
  %104 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !6663
  call void @input_sync(%struct.input_dev* %104) #10, !dbg !6664
  br label %if.end124, !dbg !6665

if.end124:                                        ; preds = %if.then123, %land.lhs.true121, %land.lhs.true119, %if.end117
  %105 = load i32, i32* %fin, align 4, !dbg !6666
  %106 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !6667
  %prev_fin125 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %106, i32 0, i32 24, !dbg !6668
  store i32 %105, i32* %prev_fin125, align 8, !dbg !6669
  %107 = load i32, i32* %z, align 4, !dbg !6670
  %cmp126 = icmp sgt i32 %107, 30, !dbg !6672
  br i1 %cmp126, label %if.then128, label %if.end129, !dbg !6673

if.then128:                                       ; preds = %if.end124
  %108 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !6674
  call void @input_report_key(%struct.input_dev* %108, i32 330, i32 1) #10, !dbg !6675
  br label %if.end129, !dbg !6675

if.end129:                                        ; preds = %if.then128, %if.end124
  %109 = load i32, i32* %z, align 4, !dbg !6676
  %cmp130 = icmp slt i32 %109, 25, !dbg !6678
  br i1 %cmp130, label %if.then132, label %if.end133, !dbg !6679

if.then132:                                       ; preds = %if.end129
  %110 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !6680
  call void @input_report_key(%struct.input_dev* %110, i32 330, i32 0) #10, !dbg !6681
  br label %if.end133, !dbg !6681

if.end133:                                        ; preds = %if.then132, %if.end129
  %111 = load i32, i32* %z, align 4, !dbg !6682
  %cmp134 = icmp sgt i32 %111, 0, !dbg !6684
  br i1 %cmp134, label %if.then136, label %if.end137, !dbg !6685

if.then136:                                       ; preds = %if.end133
  %112 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !6686
  %113 = load i32, i32* %x, align 4, !dbg !6688
  call void @input_report_abs(%struct.input_dev* %112, i32 0, i32 %113) #10, !dbg !6689
  %114 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !6690
  %115 = load i32, i32* %y, align 4, !dbg !6691
  call void @input_report_abs(%struct.input_dev* %114, i32 1, i32 %115) #10, !dbg !6692
  br label %if.end137, !dbg !6693

if.end137:                                        ; preds = %if.then136, %if.end133
  %116 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !6694
  %117 = load i32, i32* %z, align 4, !dbg !6695
  call void @input_report_abs(%struct.input_dev* %116, i32 24, i32 %117) #10, !dbg !6696
  %118 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !6697
  %119 = load i32, i32* %z, align 4, !dbg !6698
  %cmp138 = icmp sgt i32 %119, 0, !dbg !6699
  %conv139 = zext i1 %cmp138 to i32, !dbg !6699
  call void @input_report_key(%struct.input_dev* %118, i32 325, i32 %conv139) #10, !dbg !6700
  %120 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !6701
  %flags140 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %120, i32 0, i32 13, !dbg !6703
  %121 = load i32, i32* %flags140, align 8, !dbg !6703
  %and141 = and i32 %121, 8, !dbg !6704
  %tobool142 = icmp ne i32 %and141, 0, !dbg !6704
  br i1 %tobool142, label %if.then143, label %if.end152, !dbg !6705

if.then143:                                       ; preds = %if.end137
  %122 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !6706
  %123 = load i8*, i8** %packet, align 8, !dbg !6707
  %arrayidx144 = getelementptr i8, i8* %123, i64 2, !dbg !6707
  %124 = load i8, i8* %arrayidx144, align 1, !dbg !6707
  %conv145 = zext i8 %124 to i32, !dbg !6707
  %shl146 = shl i32 %conv145, 1, !dbg !6708
  %and147 = and i32 %shl146, 8, !dbg !6709
  %125 = load i8*, i8** %packet, align 8, !dbg !6710
  %arrayidx148 = getelementptr i8, i8* %125, i64 0, !dbg !6710
  %126 = load i8, i8* %arrayidx148, align 1, !dbg !6710
  %conv149 = zext i8 %126 to i32, !dbg !6710
  %shr = ashr i32 %conv149, 4, !dbg !6711
  %and150 = and i32 %shr, 7, !dbg !6712
  %sub151 = sub i32 %and147, %and150, !dbg !6713
  call void @input_report_rel(%struct.input_dev* %122, i32 8, i32 %sub151) #10, !dbg !6714
  br label %if.end152, !dbg !6714

if.end152:                                        ; preds = %if.then143, %if.end137
  %127 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !6715
  %flags153 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %127, i32 0, i32 13, !dbg !6717
  %128 = load i32, i32* %flags153, align 8, !dbg !6717
  %and154 = and i32 %128, 48, !dbg !6718
  %tobool155 = icmp ne i32 %and154, 0, !dbg !6718
  br i1 %tobool155, label %if.then156, label %if.end157, !dbg !6719

if.then156:                                       ; preds = %if.end152
  %129 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !6720
  %130 = load i32, i32* %forward, align 4, !dbg !6722
  call void @input_report_key(%struct.input_dev* %129, i32 277, i32 %130) #10, !dbg !6723
  %131 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !6724
  %132 = load i32, i32* %back, align 4, !dbg !6725
  call void @input_report_key(%struct.input_dev* %131, i32 278, i32 %132) #10, !dbg !6726
  br label %if.end157, !dbg !6727

if.end157:                                        ; preds = %if.then156, %if.end152
  %133 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !6728
  %flags158 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %133, i32 0, i32 13, !dbg !6730
  %134 = load i32, i32* %flags158, align 8, !dbg !6730
  %and159 = and i32 %134, 64, !dbg !6731
  %tobool160 = icmp ne i32 %and159, 0, !dbg !6731
  br i1 %tobool160, label %if.then161, label %if.end174, !dbg !6732

if.then161:                                       ; preds = %if.end157
  %135 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !6733
  %136 = load i8*, i8** %packet, align 8, !dbg !6735
  %arrayidx162 = getelementptr i8, i8* %136, i64 2, !dbg !6735
  %137 = load i8, i8* %arrayidx162, align 1, !dbg !6735
  %conv163 = zext i8 %137 to i32, !dbg !6735
  %and164 = and i32 %conv163, 4, !dbg !6736
  call void @input_report_key(%struct.input_dev* %135, i32 256, i32 %and164) #10, !dbg !6737
  %138 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !6738
  %139 = load i8*, i8** %packet, align 8, !dbg !6739
  %arrayidx165 = getelementptr i8, i8* %139, i64 0, !dbg !6739
  %140 = load i8, i8* %arrayidx165, align 1, !dbg !6739
  %conv166 = zext i8 %140 to i32, !dbg !6739
  %and167 = and i32 %conv166, 16, !dbg !6740
  call void @input_report_key(%struct.input_dev* %138, i32 257, i32 %and167) #10, !dbg !6741
  %141 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !6742
  %142 = load i8*, i8** %packet, align 8, !dbg !6743
  %arrayidx168 = getelementptr i8, i8* %142, i64 3, !dbg !6743
  %143 = load i8, i8* %arrayidx168, align 1, !dbg !6743
  %conv169 = zext i8 %143 to i32, !dbg !6743
  %and170 = and i32 %conv169, 4, !dbg !6744
  call void @input_report_key(%struct.input_dev* %141, i32 258, i32 %and170) #10, !dbg !6745
  %144 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !6746
  %145 = load i8*, i8** %packet, align 8, !dbg !6747
  %arrayidx171 = getelementptr i8, i8* %145, i64 0, !dbg !6747
  %146 = load i8, i8* %arrayidx171, align 1, !dbg !6747
  %conv172 = zext i8 %146 to i32, !dbg !6747
  %and173 = and i32 %conv172, 32, !dbg !6748
  call void @input_report_key(%struct.input_dev* %144, i32 259, i32 %and173) #10, !dbg !6749
  br label %if.end174, !dbg !6750

if.end174:                                        ; preds = %if.then161, %if.end157
  %147 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !6751
  call void @input_sync(%struct.input_dev* %147) #10, !dbg !6752
  br label %return, !dbg !6753

return:                                           ; preds = %if.end174, %cond.end92
  ret void, !dbg !6753
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @alps_set_abs_params_st(%struct.alps_data* %priv, %struct.input_dev* %dev1) #0 !dbg !6754 {
entry:
  %priv.addr = alloca %struct.alps_data*, align 8
  %dev1.addr = alloca %struct.input_dev*, align 8
  store %struct.alps_data* %priv, %struct.alps_data** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.alps_data** %priv.addr, metadata !6755, metadata !DIExpression()), !dbg !6756
  store %struct.input_dev* %dev1, %struct.input_dev** %dev1.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.input_dev** %dev1.addr, metadata !6757, metadata !DIExpression()), !dbg !6758
  %0 = load %struct.input_dev*, %struct.input_dev** %dev1.addr, align 8, !dbg !6759
  %1 = load %struct.alps_data*, %struct.alps_data** %priv.addr, align 8, !dbg !6760
  %x_max = getelementptr inbounds %struct.alps_data, %struct.alps_data* %1, i32 0, i32 14, !dbg !6761
  %2 = load i32, i32* %x_max, align 4, !dbg !6761
  call void @input_set_abs_params(%struct.input_dev* %0, i32 0, i32 0, i32 %2, i32 0, i32 0) #10, !dbg !6762
  %3 = load %struct.input_dev*, %struct.input_dev** %dev1.addr, align 8, !dbg !6763
  %4 = load %struct.alps_data*, %struct.alps_data** %priv.addr, align 8, !dbg !6764
  %y_max = getelementptr inbounds %struct.alps_data, %struct.alps_data* %4, i32 0, i32 15, !dbg !6765
  %5 = load i32, i32* %y_max, align 8, !dbg !6765
  call void @input_set_abs_params(%struct.input_dev* %3, i32 1, i32 0, i32 %5, i32 0, i32 0) #10, !dbg !6766
  %6 = load %struct.input_dev*, %struct.input_dev** %dev1.addr, align 8, !dbg !6767
  call void @input_set_abs_params(%struct.input_dev* %6, i32 24, i32 0, i32 127, i32 0, i32 0) #10, !dbg !6768
  ret void, !dbg !6769
}

; Function Attrs: noredzone
declare dso_local i32 @dmi_check_system(%struct.dmi_system_id*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @alps_hw_init_v3(%struct.psmouse* %psmouse) #0 !dbg !6770 {
entry:
  %retval = alloca i32, align 4
  %psmouse.addr = alloca %struct.psmouse*, align 8
  %priv = alloca %struct.alps_data*, align 8
  %ps2dev = alloca %struct.ps2dev*, align 8
  %reg_val = alloca i32, align 4
  %param = alloca [4 x i8], align 1
  store %struct.psmouse* %psmouse, %struct.psmouse** %psmouse.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.psmouse** %psmouse.addr, metadata !6771, metadata !DIExpression()), !dbg !6772
  call void @llvm.dbg.declare(metadata %struct.alps_data** %priv, metadata !6773, metadata !DIExpression()), !dbg !6774
  %0 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !6775
  %private = getelementptr inbounds %struct.psmouse, %struct.psmouse* %0, i32 0, i32 0, !dbg !6776
  %1 = load i8*, i8** %private, align 8, !dbg !6776
  %2 = bitcast i8* %1 to %struct.alps_data*, !dbg !6775
  store %struct.alps_data* %2, %struct.alps_data** %priv, align 8, !dbg !6774
  call void @llvm.dbg.declare(metadata %struct.ps2dev** %ps2dev, metadata !6777, metadata !DIExpression()), !dbg !6778
  %3 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !6779
  %ps2dev1 = getelementptr inbounds %struct.psmouse, %struct.psmouse* %3, i32 0, i32 2, !dbg !6780
  store %struct.ps2dev* %ps2dev1, %struct.ps2dev** %ps2dev, align 8, !dbg !6778
  call void @llvm.dbg.declare(metadata i32* %reg_val, metadata !6781, metadata !DIExpression()), !dbg !6782
  call void @llvm.dbg.declare(metadata [4 x i8]* %param, metadata !6783, metadata !DIExpression()), !dbg !6784
  %4 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !6785
  %flags = getelementptr inbounds %struct.alps_data, %struct.alps_data* %4, i32 0, i32 13, !dbg !6787
  %5 = load i32, i32* %flags, align 8, !dbg !6787
  %and = and i32 %5, 2, !dbg !6788
  %tobool = icmp ne i32 %and, 0, !dbg !6788
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !6789

land.lhs.true:                                    ; preds = %entry
  %6 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !6790
  %call = call i32 @alps_setup_trackstick_v3(%struct.psmouse* %6, i32 0) #10, !dbg !6791
  %cmp = icmp eq i32 %call, -5, !dbg !6792
  br i1 %cmp, label %if.then, label %if.end, !dbg !6793

if.then:                                          ; preds = %land.lhs.true
  br label %error, !dbg !6794

if.end:                                           ; preds = %land.lhs.true, %entry
  %7 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !6795
  %call2 = call i32 @alps_enter_command_mode(%struct.psmouse* %7) #10, !dbg !6797
  %tobool3 = icmp ne i32 %call2, 0, !dbg !6797
  br i1 %tobool3, label %if.then6, label %lor.lhs.false, !dbg !6798

lor.lhs.false:                                    ; preds = %if.end
  %8 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !6799
  %call4 = call i32 @alps_absolute_mode_v3(%struct.psmouse* %8) #10, !dbg !6800
  %tobool5 = icmp ne i32 %call4, 0, !dbg !6800
  br i1 %tobool5, label %if.then6, label %if.end8, !dbg !6801

if.then6:                                         ; preds = %lor.lhs.false, %if.end
  %9 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !6802
  %ps2dev7 = getelementptr inbounds %struct.psmouse, %struct.psmouse* %9, i32 0, i32 2, !dbg !6802
  %serio = getelementptr inbounds %struct.ps2dev, %struct.ps2dev* %ps2dev7, i32 0, i32 0, !dbg !6802
  %10 = load %struct.serio*, %struct.serio** %serio, align 8, !dbg !6802
  %dev = getelementptr inbounds %struct.serio, %struct.serio* %10, i32 0, i32 18, !dbg !6802
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.18, i64 0, i64 0)) #11, !dbg !6802
  br label %error, !dbg !6804

if.end8:                                          ; preds = %lor.lhs.false
  %11 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !6805
  %call9 = call i32 @alps_command_mode_read_reg(%struct.psmouse* %11, i32 6) #10, !dbg !6806
  store i32 %call9, i32* %reg_val, align 4, !dbg !6807
  %12 = load i32, i32* %reg_val, align 4, !dbg !6808
  %cmp10 = icmp eq i32 %12, -1, !dbg !6810
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !6811

if.then11:                                        ; preds = %if.end8
  br label %error, !dbg !6812

if.end12:                                         ; preds = %if.end8
  %13 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !6813
  %14 = load i32, i32* %reg_val, align 4, !dbg !6815
  %or = or i32 %14, 1, !dbg !6816
  %conv = trunc i32 %or to i8, !dbg !6815
  %call13 = call i32 @__alps_command_mode_write_reg(%struct.psmouse* %13, i8 zeroext %conv) #10, !dbg !6817
  %tobool14 = icmp ne i32 %call13, 0, !dbg !6817
  br i1 %tobool14, label %if.then15, label %if.end16, !dbg !6818

if.then15:                                        ; preds = %if.end12
  br label %error, !dbg !6819

if.end16:                                         ; preds = %if.end12
  %15 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !6820
  %call17 = call i32 @alps_command_mode_read_reg(%struct.psmouse* %15, i32 7) #10, !dbg !6821
  store i32 %call17, i32* %reg_val, align 4, !dbg !6822
  %16 = load i32, i32* %reg_val, align 4, !dbg !6823
  %cmp18 = icmp eq i32 %16, -1, !dbg !6825
  br i1 %cmp18, label %if.then20, label %if.end21, !dbg !6826

if.then20:                                        ; preds = %if.end16
  br label %error, !dbg !6827

if.end21:                                         ; preds = %if.end16
  %17 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !6828
  %18 = load i32, i32* %reg_val, align 4, !dbg !6830
  %or22 = or i32 %18, 1, !dbg !6831
  %conv23 = trunc i32 %or22 to i8, !dbg !6830
  %call24 = call i32 @__alps_command_mode_write_reg(%struct.psmouse* %17, i8 zeroext %conv23) #10, !dbg !6832
  %tobool25 = icmp ne i32 %call24, 0, !dbg !6832
  br i1 %tobool25, label %if.then26, label %if.end27, !dbg !6833

if.then26:                                        ; preds = %if.end21
  br label %error, !dbg !6834

if.end27:                                         ; preds = %if.end21
  %19 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !6835
  %call28 = call i32 @alps_command_mode_read_reg(%struct.psmouse* %19, i32 324) #10, !dbg !6837
  %cmp29 = icmp eq i32 %call28, -1, !dbg !6838
  br i1 %cmp29, label %if.then31, label %if.end32, !dbg !6839

if.then31:                                        ; preds = %if.end27
  br label %error, !dbg !6840

if.end32:                                         ; preds = %if.end27
  %20 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !6841
  %call33 = call i32 @__alps_command_mode_write_reg(%struct.psmouse* %20, i8 zeroext 4) #10, !dbg !6843
  %tobool34 = icmp ne i32 %call33, 0, !dbg !6843
  br i1 %tobool34, label %if.then35, label %if.end36, !dbg !6844

if.then35:                                        ; preds = %if.end32
  br label %error, !dbg !6845

if.end36:                                         ; preds = %if.end32
  %21 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !6846
  %call37 = call i32 @alps_command_mode_read_reg(%struct.psmouse* %21, i32 345) #10, !dbg !6848
  %cmp38 = icmp eq i32 %call37, -1, !dbg !6849
  br i1 %cmp38, label %if.then40, label %if.end41, !dbg !6850

if.then40:                                        ; preds = %if.end36
  br label %error, !dbg !6851

if.end41:                                         ; preds = %if.end36
  %22 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !6852
  %call42 = call i32 @__alps_command_mode_write_reg(%struct.psmouse* %22, i8 zeroext 3) #10, !dbg !6854
  %tobool43 = icmp ne i32 %call42, 0, !dbg !6854
  br i1 %tobool43, label %if.then44, label %if.end45, !dbg !6855

if.then44:                                        ; preds = %if.end41
  br label %error, !dbg !6856

if.end45:                                         ; preds = %if.end41
  %23 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !6857
  %call46 = call i32 @alps_command_mode_read_reg(%struct.psmouse* %23, i32 355) #10, !dbg !6859
  %cmp47 = icmp eq i32 %call46, -1, !dbg !6860
  br i1 %cmp47, label %if.then49, label %if.end50, !dbg !6861

if.then49:                                        ; preds = %if.end45
  br label %error, !dbg !6862

if.end50:                                         ; preds = %if.end45
  %24 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !6863
  %call51 = call i32 @alps_command_mode_write_reg(%struct.psmouse* %24, i32 355, i8 zeroext 3) #10, !dbg !6865
  %tobool52 = icmp ne i32 %call51, 0, !dbg !6865
  br i1 %tobool52, label %if.then53, label %if.end54, !dbg !6866

if.then53:                                        ; preds = %if.end50
  br label %error, !dbg !6867

if.end54:                                         ; preds = %if.end50
  %25 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !6868
  %call55 = call i32 @alps_command_mode_read_reg(%struct.psmouse* %25, i32 354) #10, !dbg !6870
  %cmp56 = icmp eq i32 %call55, -1, !dbg !6871
  br i1 %cmp56, label %if.then58, label %if.end59, !dbg !6872

if.then58:                                        ; preds = %if.end54
  br label %error, !dbg !6873

if.end59:                                         ; preds = %if.end54
  %26 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !6874
  %call60 = call i32 @alps_command_mode_write_reg(%struct.psmouse* %26, i32 354, i8 zeroext 4) #10, !dbg !6876
  %tobool61 = icmp ne i32 %call60, 0, !dbg !6876
  br i1 %tobool61, label %if.then62, label %if.end63, !dbg !6877

if.then62:                                        ; preds = %if.end59
  br label %error, !dbg !6878

if.end63:                                         ; preds = %if.end59
  %27 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !6879
  %call64 = call i32 @alps_exit_command_mode(%struct.psmouse* %27) #10, !dbg !6880
  %arrayidx = getelementptr [4 x i8], [4 x i8]* %param, i64 0, i64 0, !dbg !6881
  store i8 100, i8* %arrayidx, align 1, !dbg !6882
  %28 = load %struct.ps2dev*, %struct.ps2dev** %ps2dev, align 8, !dbg !6883
  %arraydecay = getelementptr inbounds [4 x i8], [4 x i8]* %param, i64 0, i64 0, !dbg !6885
  %call65 = call i32 @ps2_command(%struct.ps2dev* %28, i8* %arraydecay, i32 4339) #10, !dbg !6886
  %tobool66 = icmp ne i32 %call65, 0, !dbg !6886
  br i1 %tobool66, label %if.then70, label %lor.lhs.false67, !dbg !6887

lor.lhs.false67:                                  ; preds = %if.end63
  %29 = load %struct.ps2dev*, %struct.ps2dev** %ps2dev, align 8, !dbg !6888
  %call68 = call i32 @ps2_command(%struct.ps2dev* %29, i8* null, i32 244) #10, !dbg !6889
  %tobool69 = icmp ne i32 %call68, 0, !dbg !6889
  br i1 %tobool69, label %if.then70, label %if.end74, !dbg !6890

if.then70:                                        ; preds = %lor.lhs.false67, %if.end63
  %30 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !6891
  %ps2dev71 = getelementptr inbounds %struct.psmouse, %struct.psmouse* %30, i32 0, i32 2, !dbg !6891
  %serio72 = getelementptr inbounds %struct.ps2dev, %struct.ps2dev* %ps2dev71, i32 0, i32 0, !dbg !6891
  %31 = load %struct.serio*, %struct.serio** %serio72, align 8, !dbg !6891
  %dev73 = getelementptr inbounds %struct.serio, %struct.serio* %31, i32 0, i32 18, !dbg !6891
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev73, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.19, i64 0, i64 0)) #11, !dbg !6891
  store i32 -1, i32* %retval, align 4, !dbg !6893
  br label %return, !dbg !6893

if.end74:                                         ; preds = %lor.lhs.false67
  store i32 0, i32* %retval, align 4, !dbg !6894
  br label %return, !dbg !6894

error:                                            ; preds = %if.then62, %if.then58, %if.then53, %if.then49, %if.then44, %if.then40, %if.then35, %if.then31, %if.then26, %if.then20, %if.then15, %if.then11, %if.then6, %if.then
  call void @llvm.dbg.label(metadata !6895), !dbg !6896
  %32 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !6897
  %call75 = call i32 @alps_exit_command_mode(%struct.psmouse* %32) #10, !dbg !6898
  store i32 -1, i32* %retval, align 4, !dbg !6899
  br label %return, !dbg !6899

return:                                           ; preds = %error, %if.end74, %if.then70
  %33 = load i32, i32* %retval, align 4, !dbg !6900
  ret i32 %33, !dbg !6900
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @alps_process_packet_v3(%struct.psmouse* %psmouse) #0 !dbg !6901 {
entry:
  %psmouse.addr = alloca %struct.psmouse*, align 8
  %packet = alloca i8*, align 8
  store %struct.psmouse* %psmouse, %struct.psmouse** %psmouse.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.psmouse** %psmouse.addr, metadata !6902, metadata !DIExpression()), !dbg !6903
  call void @llvm.dbg.declare(metadata i8** %packet, metadata !6904, metadata !DIExpression()), !dbg !6905
  %0 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !6906
  %packet1 = getelementptr inbounds %struct.psmouse, %struct.psmouse* %0, i32 0, i32 7, !dbg !6907
  %arraydecay = getelementptr inbounds [8 x i8], [8 x i8]* %packet1, i64 0, i64 0, !dbg !6906
  store i8* %arraydecay, i8** %packet, align 8, !dbg !6905
  %1 = load i8*, i8** %packet, align 8, !dbg !6908
  %arrayidx = getelementptr i8, i8* %1, i64 5, !dbg !6908
  %2 = load i8, i8* %arrayidx, align 1, !dbg !6908
  %conv = zext i8 %2 to i32, !dbg !6908
  %cmp = icmp eq i32 %conv, 63, !dbg !6910
  br i1 %cmp, label %if.then, label %if.end, !dbg !6911

if.then:                                          ; preds = %entry
  %3 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !6912
  call void @alps_process_trackstick_packet_v3(%struct.psmouse* %3) #10, !dbg !6914
  br label %return, !dbg !6915

if.end:                                           ; preds = %entry
  %4 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !6916
  call void @alps_process_touchpad_packet_v3_v5(%struct.psmouse* %4) #10, !dbg !6917
  br label %return, !dbg !6918

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !6918
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @alps_set_abs_params_semi_mt(%struct.alps_data* %priv, %struct.input_dev* %dev1) #0 !dbg !6919 {
entry:
  %priv.addr = alloca %struct.alps_data*, align 8
  %dev1.addr = alloca %struct.input_dev*, align 8
  store %struct.alps_data* %priv, %struct.alps_data** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.alps_data** %priv.addr, metadata !6920, metadata !DIExpression()), !dbg !6921
  store %struct.input_dev* %dev1, %struct.input_dev** %dev1.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.input_dev** %dev1.addr, metadata !6922, metadata !DIExpression()), !dbg !6923
  %0 = load %struct.alps_data*, %struct.alps_data** %priv.addr, align 8, !dbg !6924
  %1 = load %struct.input_dev*, %struct.input_dev** %dev1.addr, align 8, !dbg !6925
  call void @alps_set_abs_params_mt_common(%struct.alps_data* %0, %struct.input_dev* %1) #10, !dbg !6926
  %2 = load %struct.input_dev*, %struct.input_dev** %dev1.addr, align 8, !dbg !6927
  call void @input_set_abs_params(%struct.input_dev* %2, i32 24, i32 0, i32 127, i32 0, i32 0) #10, !dbg !6928
  %3 = load %struct.input_dev*, %struct.input_dev** %dev1.addr, align 8, !dbg !6929
  %call = call i32 @input_mt_init_slots(%struct.input_dev* %3, i32 4, i32 21) #10, !dbg !6930
  ret void, !dbg !6931
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @alps_decode_pinnacle(%struct.alps_fields* %f, i8* %p, %struct.psmouse* %psmouse) #0 !dbg !6932 {
entry:
  %f.addr = alloca %struct.alps_fields*, align 8
  %p.addr = alloca i8*, align 8
  %psmouse.addr = alloca %struct.psmouse*, align 8
  store %struct.alps_fields* %f, %struct.alps_fields** %f.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.alps_fields** %f.addr, metadata !6933, metadata !DIExpression()), !dbg !6934
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !6935, metadata !DIExpression()), !dbg !6936
  store %struct.psmouse* %psmouse, %struct.psmouse** %psmouse.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.psmouse** %psmouse.addr, metadata !6937, metadata !DIExpression()), !dbg !6938
  %0 = load i8*, i8** %p.addr, align 8, !dbg !6939
  %arrayidx = getelementptr i8, i8* %0, i64 4, !dbg !6939
  %1 = load i8, i8* %arrayidx, align 1, !dbg !6939
  %conv = zext i8 %1 to i32, !dbg !6939
  %and = and i32 %conv, 64, !dbg !6940
  %tobool = icmp ne i32 %and, 0, !dbg !6941
  %lnot = xor i1 %tobool, true, !dbg !6941
  %lnot1 = xor i1 %lnot, true, !dbg !6942
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !6942
  %2 = load %struct.alps_fields*, %struct.alps_fields** %f.addr, align 8, !dbg !6943
  %first_mp = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %2, i32 0, i32 6, !dbg !6944
  %3 = trunc i32 %lnot.ext to i8, !dbg !6945
  %bf.load = load i8, i8* %first_mp, align 4, !dbg !6945
  %bf.value = and i8 %3, 1, !dbg !6945
  %bf.clear = and i8 %bf.load, -2, !dbg !6945
  %bf.set = or i8 %bf.clear, %bf.value, !dbg !6945
  store i8 %bf.set, i8* %first_mp, align 4, !dbg !6945
  %bf.result.cast = zext i8 %bf.value to i32, !dbg !6945
  %4 = load i8*, i8** %p.addr, align 8, !dbg !6946
  %arrayidx2 = getelementptr i8, i8* %4, i64 0, !dbg !6946
  %5 = load i8, i8* %arrayidx2, align 1, !dbg !6946
  %conv3 = zext i8 %5 to i32, !dbg !6946
  %and4 = and i32 %conv3, 64, !dbg !6947
  %tobool5 = icmp ne i32 %and4, 0, !dbg !6948
  %lnot6 = xor i1 %tobool5, true, !dbg !6948
  %lnot8 = xor i1 %lnot6, true, !dbg !6949
  %lnot.ext9 = zext i1 %lnot8 to i32, !dbg !6949
  %6 = load %struct.alps_fields*, %struct.alps_fields** %f.addr, align 8, !dbg !6950
  %is_mp = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %6, i32 0, i32 6, !dbg !6951
  %7 = trunc i32 %lnot.ext9 to i8, !dbg !6952
  %bf.load10 = load i8, i8* %is_mp, align 4, !dbg !6952
  %bf.value11 = and i8 %7, 1, !dbg !6952
  %bf.shl = shl i8 %bf.value11, 1, !dbg !6952
  %bf.clear12 = and i8 %bf.load10, -3, !dbg !6952
  %bf.set13 = or i8 %bf.clear12, %bf.shl, !dbg !6952
  store i8 %bf.set13, i8* %is_mp, align 4, !dbg !6952
  %bf.result.cast14 = zext i8 %bf.value11 to i32, !dbg !6952
  %8 = load %struct.alps_fields*, %struct.alps_fields** %f.addr, align 8, !dbg !6953
  %is_mp15 = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %8, i32 0, i32 6, !dbg !6955
  %bf.load16 = load i8, i8* %is_mp15, align 4, !dbg !6955
  %bf.lshr = lshr i8 %bf.load16, 1, !dbg !6955
  %bf.clear17 = and i8 %bf.lshr, 1, !dbg !6955
  %bf.cast = zext i8 %bf.clear17 to i32, !dbg !6955
  %tobool18 = icmp ne i32 %bf.cast, 0, !dbg !6953
  br i1 %tobool18, label %if.then, label %if.else, !dbg !6956

if.then:                                          ; preds = %entry
  %9 = load i8*, i8** %p.addr, align 8, !dbg !6957
  %arrayidx19 = getelementptr i8, i8* %9, i64 5, !dbg !6957
  %10 = load i8, i8* %arrayidx19, align 1, !dbg !6957
  %conv20 = zext i8 %10 to i32, !dbg !6957
  %and21 = and i32 %conv20, 3, !dbg !6959
  %add = add i32 %and21, 1, !dbg !6960
  %11 = load %struct.alps_fields*, %struct.alps_fields** %f.addr, align 8, !dbg !6961
  %fingers = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %11, i32 0, i32 2, !dbg !6962
  store i32 %add, i32* %fingers, align 4, !dbg !6963
  %12 = load i8*, i8** %p.addr, align 8, !dbg !6964
  %arrayidx22 = getelementptr i8, i8* %12, i64 4, !dbg !6964
  %13 = load i8, i8* %arrayidx22, align 1, !dbg !6964
  %conv23 = zext i8 %13 to i32, !dbg !6964
  %and24 = and i32 %conv23, 126, !dbg !6965
  %shl = shl i32 %and24, 8, !dbg !6966
  %14 = load i8*, i8** %p.addr, align 8, !dbg !6967
  %arrayidx25 = getelementptr i8, i8* %14, i64 1, !dbg !6967
  %15 = load i8, i8* %arrayidx25, align 1, !dbg !6967
  %conv26 = zext i8 %15 to i32, !dbg !6967
  %and27 = and i32 %conv26, 127, !dbg !6968
  %shl28 = shl i32 %and27, 2, !dbg !6969
  %or = or i32 %shl, %shl28, !dbg !6970
  %16 = load i8*, i8** %p.addr, align 8, !dbg !6971
  %arrayidx29 = getelementptr i8, i8* %16, i64 0, !dbg !6971
  %17 = load i8, i8* %arrayidx29, align 1, !dbg !6971
  %conv30 = zext i8 %17 to i32, !dbg !6971
  %and31 = and i32 %conv30, 48, !dbg !6972
  %shr = ashr i32 %and31, 4, !dbg !6973
  %or32 = or i32 %or, %shr, !dbg !6974
  %18 = load %struct.alps_fields*, %struct.alps_fields** %f.addr, align 8, !dbg !6975
  %x_map = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %18, i32 0, i32 0, !dbg !6976
  store i32 %or32, i32* %x_map, align 4, !dbg !6977
  %19 = load i8*, i8** %p.addr, align 8, !dbg !6978
  %arrayidx33 = getelementptr i8, i8* %19, i64 3, !dbg !6978
  %20 = load i8, i8* %arrayidx33, align 1, !dbg !6978
  %conv34 = zext i8 %20 to i32, !dbg !6978
  %and35 = and i32 %conv34, 112, !dbg !6979
  %shl36 = shl i32 %and35, 4, !dbg !6980
  %21 = load i8*, i8** %p.addr, align 8, !dbg !6981
  %arrayidx37 = getelementptr i8, i8* %21, i64 2, !dbg !6981
  %22 = load i8, i8* %arrayidx37, align 1, !dbg !6981
  %conv38 = zext i8 %22 to i32, !dbg !6981
  %and39 = and i32 %conv38, 127, !dbg !6982
  %shl40 = shl i32 %and39, 1, !dbg !6983
  %or41 = or i32 %shl36, %shl40, !dbg !6984
  %23 = load i8*, i8** %p.addr, align 8, !dbg !6985
  %arrayidx42 = getelementptr i8, i8* %23, i64 4, !dbg !6985
  %24 = load i8, i8* %arrayidx42, align 1, !dbg !6985
  %conv43 = zext i8 %24 to i32, !dbg !6985
  %and44 = and i32 %conv43, 1, !dbg !6986
  %or45 = or i32 %or41, %and44, !dbg !6987
  %25 = load %struct.alps_fields*, %struct.alps_fields** %f.addr, align 8, !dbg !6988
  %y_map = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %25, i32 0, i32 1, !dbg !6989
  store i32 %or45, i32* %y_map, align 4, !dbg !6990
  br label %if.end, !dbg !6991

if.else:                                          ; preds = %entry
  %26 = load i8*, i8** %p.addr, align 8, !dbg !6992
  %arrayidx46 = getelementptr i8, i8* %26, i64 1, !dbg !6992
  %27 = load i8, i8* %arrayidx46, align 1, !dbg !6992
  %conv47 = zext i8 %27 to i32, !dbg !6992
  %and48 = and i32 %conv47, 127, !dbg !6994
  %shl49 = shl i32 %and48, 4, !dbg !6995
  %28 = load i8*, i8** %p.addr, align 8, !dbg !6996
  %arrayidx50 = getelementptr i8, i8* %28, i64 4, !dbg !6996
  %29 = load i8, i8* %arrayidx50, align 1, !dbg !6996
  %conv51 = zext i8 %29 to i32, !dbg !6996
  %and52 = and i32 %conv51, 48, !dbg !6997
  %shr53 = ashr i32 %and52, 2, !dbg !6998
  %or54 = or i32 %shl49, %shr53, !dbg !6999
  %30 = load i8*, i8** %p.addr, align 8, !dbg !7000
  %arrayidx55 = getelementptr i8, i8* %30, i64 0, !dbg !7000
  %31 = load i8, i8* %arrayidx55, align 1, !dbg !7000
  %conv56 = zext i8 %31 to i32, !dbg !7000
  %and57 = and i32 %conv56, 48, !dbg !7001
  %shr58 = ashr i32 %and57, 4, !dbg !7002
  %or59 = or i32 %or54, %shr58, !dbg !7003
  %conv60 = trunc i32 %or59 to i16, !dbg !7004
  %32 = load %struct.alps_fields*, %struct.alps_fields** %f.addr, align 8, !dbg !7005
  %st = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %32, i32 0, i32 4, !dbg !7006
  %x = getelementptr inbounds %struct.input_mt_pos, %struct.input_mt_pos* %st, i32 0, i32 0, !dbg !7007
  store i16 %conv60, i16* %x, align 4, !dbg !7008
  %33 = load i8*, i8** %p.addr, align 8, !dbg !7009
  %arrayidx61 = getelementptr i8, i8* %33, i64 2, !dbg !7009
  %34 = load i8, i8* %arrayidx61, align 1, !dbg !7009
  %conv62 = zext i8 %34 to i32, !dbg !7009
  %and63 = and i32 %conv62, 127, !dbg !7010
  %shl64 = shl i32 %and63, 4, !dbg !7011
  %35 = load i8*, i8** %p.addr, align 8, !dbg !7012
  %arrayidx65 = getelementptr i8, i8* %35, i64 4, !dbg !7012
  %36 = load i8, i8* %arrayidx65, align 1, !dbg !7012
  %conv66 = zext i8 %36 to i32, !dbg !7012
  %and67 = and i32 %conv66, 15, !dbg !7013
  %or68 = or i32 %shl64, %and67, !dbg !7014
  %conv69 = trunc i32 %or68 to i16, !dbg !7015
  %37 = load %struct.alps_fields*, %struct.alps_fields** %f.addr, align 8, !dbg !7016
  %st70 = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %37, i32 0, i32 4, !dbg !7017
  %y = getelementptr inbounds %struct.input_mt_pos, %struct.input_mt_pos* %st70, i32 0, i32 1, !dbg !7018
  store i16 %conv69, i16* %y, align 2, !dbg !7019
  %38 = load i8*, i8** %p.addr, align 8, !dbg !7020
  %arrayidx71 = getelementptr i8, i8* %38, i64 5, !dbg !7020
  %39 = load i8, i8* %arrayidx71, align 1, !dbg !7020
  %conv72 = zext i8 %39 to i32, !dbg !7020
  %and73 = and i32 %conv72, 127, !dbg !7021
  %40 = load %struct.alps_fields*, %struct.alps_fields** %f.addr, align 8, !dbg !7022
  %pressure = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %40, i32 0, i32 3, !dbg !7023
  store i32 %and73, i32* %pressure, align 4, !dbg !7024
  %41 = load %struct.alps_fields*, %struct.alps_fields** %f.addr, align 8, !dbg !7025
  %42 = load i8*, i8** %p.addr, align 8, !dbg !7026
  call void @alps_decode_buttons_v3(%struct.alps_fields* %41, i8* %42) #10, !dbg !7027
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret i32 0, !dbg !7028
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @alps_probe_trackstick_v3_v7(%struct.psmouse* %psmouse, i32 %reg_base) #0 !dbg !7029 {
entry:
  %psmouse.addr = alloca %struct.psmouse*, align 8
  %reg_base.addr = alloca i32, align 4
  %ret = alloca i32, align 4
  %reg_val = alloca i32, align 4
  store %struct.psmouse* %psmouse, %struct.psmouse** %psmouse.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.psmouse** %psmouse.addr, metadata !7032, metadata !DIExpression()), !dbg !7033
  store i32 %reg_base, i32* %reg_base.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %reg_base.addr, metadata !7034, metadata !DIExpression()), !dbg !7035
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7036, metadata !DIExpression()), !dbg !7037
  store i32 -5, i32* %ret, align 4, !dbg !7037
  call void @llvm.dbg.declare(metadata i32* %reg_val, metadata !7038, metadata !DIExpression()), !dbg !7039
  %0 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !7040
  %call = call i32 @alps_enter_command_mode(%struct.psmouse* %0) #10, !dbg !7042
  %tobool = icmp ne i32 %call, 0, !dbg !7042
  br i1 %tobool, label %if.then, label %if.end, !dbg !7043

if.then:                                          ; preds = %entry
  br label %error, !dbg !7044

if.end:                                           ; preds = %entry
  %1 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !7045
  %2 = load i32, i32* %reg_base.addr, align 4, !dbg !7046
  %add = add i32 %2, 8, !dbg !7047
  %call1 = call i32 @alps_command_mode_read_reg(%struct.psmouse* %1, i32 %add) #10, !dbg !7048
  store i32 %call1, i32* %reg_val, align 4, !dbg !7049
  %3 = load i32, i32* %reg_val, align 4, !dbg !7050
  %cmp = icmp eq i32 %3, -1, !dbg !7052
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !7053

if.then2:                                         ; preds = %if.end
  br label %error, !dbg !7054

if.end3:                                          ; preds = %if.end
  %4 = load i32, i32* %reg_val, align 4, !dbg !7055
  %and = and i32 %4, 128, !dbg !7056
  %tobool4 = icmp ne i32 %and, 0, !dbg !7055
  %5 = zext i1 %tobool4 to i64, !dbg !7055
  %cond = select i1 %tobool4, i32 0, i32 -19, !dbg !7055
  store i32 %cond, i32* %ret, align 4, !dbg !7057
  br label %error, !dbg !7058

error:                                            ; preds = %if.end3, %if.then2, %if.then
  call void @llvm.dbg.label(metadata !7059), !dbg !7060
  %6 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !7061
  %call5 = call i32 @alps_exit_command_mode(%struct.psmouse* %6) #10, !dbg !7062
  %7 = load i32, i32* %ret, align 4, !dbg !7063
  ret i32 %7, !dbg !7064
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @alps_hw_init_rushmore_v3(%struct.psmouse* %psmouse) #0 !dbg !7065 {
entry:
  %retval = alloca i32, align 4
  %psmouse.addr = alloca %struct.psmouse*, align 8
  %priv = alloca %struct.alps_data*, align 8
  %ps2dev = alloca %struct.ps2dev*, align 8
  %reg_val = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.psmouse* %psmouse, %struct.psmouse** %psmouse.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.psmouse** %psmouse.addr, metadata !7066, metadata !DIExpression()), !dbg !7067
  call void @llvm.dbg.declare(metadata %struct.alps_data** %priv, metadata !7068, metadata !DIExpression()), !dbg !7069
  %0 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !7070
  %private = getelementptr inbounds %struct.psmouse, %struct.psmouse* %0, i32 0, i32 0, !dbg !7071
  %1 = load i8*, i8** %private, align 8, !dbg !7071
  %2 = bitcast i8* %1 to %struct.alps_data*, !dbg !7070
  store %struct.alps_data* %2, %struct.alps_data** %priv, align 8, !dbg !7069
  call void @llvm.dbg.declare(metadata %struct.ps2dev** %ps2dev, metadata !7072, metadata !DIExpression()), !dbg !7073
  %3 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !7074
  %ps2dev1 = getelementptr inbounds %struct.psmouse, %struct.psmouse* %3, i32 0, i32 2, !dbg !7075
  store %struct.ps2dev* %ps2dev1, %struct.ps2dev** %ps2dev, align 8, !dbg !7073
  call void @llvm.dbg.declare(metadata i32* %reg_val, metadata !7076, metadata !DIExpression()), !dbg !7077
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7078, metadata !DIExpression()), !dbg !7079
  store i32 -1, i32* %ret, align 4, !dbg !7079
  %4 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !7080
  %flags = getelementptr inbounds %struct.alps_data, %struct.alps_data* %4, i32 0, i32 13, !dbg !7082
  %5 = load i32, i32* %flags, align 8, !dbg !7082
  %and = and i32 %5, 2, !dbg !7083
  %tobool = icmp ne i32 %and, 0, !dbg !7083
  br i1 %tobool, label %if.then, label %if.end3, !dbg !7084

if.then:                                          ; preds = %entry
  %6 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !7085
  %call = call i32 @alps_setup_trackstick_v3(%struct.psmouse* %6, i32 49856) #10, !dbg !7087
  store i32 %call, i32* %reg_val, align 4, !dbg !7088
  %7 = load i32, i32* %reg_val, align 4, !dbg !7089
  %cmp = icmp eq i32 %7, -5, !dbg !7091
  br i1 %cmp, label %if.then2, label %if.end, !dbg !7092

if.then2:                                         ; preds = %if.then
  br label %error, !dbg !7093

if.end:                                           ; preds = %if.then
  br label %if.end3, !dbg !7094

if.end3:                                          ; preds = %if.end, %entry
  %8 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !7095
  %call4 = call i32 @alps_enter_command_mode(%struct.psmouse* %8) #10, !dbg !7097
  %tobool5 = icmp ne i32 %call4, 0, !dbg !7097
  br i1 %tobool5, label %if.then11, label %lor.lhs.false, !dbg !7098

lor.lhs.false:                                    ; preds = %if.end3
  %9 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !7099
  %call6 = call i32 @alps_command_mode_read_reg(%struct.psmouse* %9, i32 49881) #10, !dbg !7100
  %cmp7 = icmp eq i32 %call6, -1, !dbg !7101
  br i1 %cmp7, label %if.then11, label %lor.lhs.false8, !dbg !7102

lor.lhs.false8:                                   ; preds = %lor.lhs.false
  %10 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !7103
  %call9 = call i32 @alps_command_mode_write_reg(%struct.psmouse* %10, i32 49867, i8 zeroext 0) #10, !dbg !7104
  %tobool10 = icmp ne i32 %call9, 0, !dbg !7104
  br i1 %tobool10, label %if.then11, label %if.end12, !dbg !7105

if.then11:                                        ; preds = %lor.lhs.false8, %lor.lhs.false, %if.end3
  br label %error, !dbg !7106

if.end12:                                         ; preds = %lor.lhs.false8
  %11 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !7107
  %call13 = call i32 @alps_get_v3_v7_resolution(%struct.psmouse* %11, i32 49882) #10, !dbg !7109
  %tobool14 = icmp ne i32 %call13, 0, !dbg !7109
  br i1 %tobool14, label %if.then15, label %if.end16, !dbg !7110

if.then15:                                        ; preds = %if.end12
  br label %error, !dbg !7111

if.end16:                                         ; preds = %if.end12
  %12 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !7112
  %call17 = call i32 @alps_command_mode_read_reg(%struct.psmouse* %12, i32 49862) #10, !dbg !7113
  store i32 %call17, i32* %reg_val, align 4, !dbg !7114
  %13 = load i32, i32* %reg_val, align 4, !dbg !7115
  %cmp18 = icmp eq i32 %13, -1, !dbg !7117
  br i1 %cmp18, label %if.then19, label %if.end20, !dbg !7118

if.then19:                                        ; preds = %if.end16
  br label %error, !dbg !7119

if.end20:                                         ; preds = %if.end16
  %14 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !7120
  %15 = load i32, i32* %reg_val, align 4, !dbg !7122
  %and21 = and i32 %15, 253, !dbg !7123
  %conv = trunc i32 %and21 to i8, !dbg !7122
  %call22 = call i32 @__alps_command_mode_write_reg(%struct.psmouse* %14, i8 zeroext %conv) #10, !dbg !7124
  %tobool23 = icmp ne i32 %call22, 0, !dbg !7124
  br i1 %tobool23, label %if.then24, label %if.end25, !dbg !7125

if.then24:                                        ; preds = %if.end20
  br label %error, !dbg !7126

if.end25:                                         ; preds = %if.end20
  %16 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !7127
  %call26 = call i32 @alps_command_mode_write_reg(%struct.psmouse* %16, i32 49865, i8 zeroext 100) #10, !dbg !7129
  %tobool27 = icmp ne i32 %call26, 0, !dbg !7129
  br i1 %tobool27, label %if.then28, label %if.end29, !dbg !7130

if.then28:                                        ; preds = %if.end25
  br label %error, !dbg !7131

if.end29:                                         ; preds = %if.end25
  %17 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !7132
  %call30 = call i32 @alps_command_mode_read_reg(%struct.psmouse* %17, i32 49860) #10, !dbg !7133
  store i32 %call30, i32* %reg_val, align 4, !dbg !7134
  %18 = load i32, i32* %reg_val, align 4, !dbg !7135
  %cmp31 = icmp eq i32 %18, -1, !dbg !7137
  br i1 %cmp31, label %if.then33, label %if.end34, !dbg !7138

if.then33:                                        ; preds = %if.end29
  br label %error, !dbg !7139

if.end34:                                         ; preds = %if.end29
  %19 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !7140
  %20 = load i32, i32* %reg_val, align 4, !dbg !7142
  %or = or i32 %20, 2, !dbg !7143
  %conv35 = trunc i32 %or to i8, !dbg !7142
  %call36 = call i32 @__alps_command_mode_write_reg(%struct.psmouse* %19, i8 zeroext %conv35) #10, !dbg !7144
  %tobool37 = icmp ne i32 %call36, 0, !dbg !7144
  br i1 %tobool37, label %if.then38, label %if.end39, !dbg !7145

if.then38:                                        ; preds = %if.end34
  br label %error, !dbg !7146

if.end39:                                         ; preds = %if.end34
  %21 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !7147
  %call40 = call i32 @alps_exit_command_mode(%struct.psmouse* %21) #10, !dbg !7148
  %22 = load %struct.ps2dev*, %struct.ps2dev** %ps2dev, align 8, !dbg !7149
  %call41 = call i32 @ps2_command(%struct.ps2dev* %22, i8* null, i32 244) #10, !dbg !7150
  store i32 %call41, i32* %retval, align 4, !dbg !7151
  br label %return, !dbg !7151

error:                                            ; preds = %if.then38, %if.then33, %if.then28, %if.then24, %if.then19, %if.then15, %if.then11, %if.then2
  call void @llvm.dbg.label(metadata !7152), !dbg !7153
  %23 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !7154
  %call42 = call i32 @alps_exit_command_mode(%struct.psmouse* %23) #10, !dbg !7155
  %24 = load i32, i32* %ret, align 4, !dbg !7156
  store i32 %24, i32* %retval, align 4, !dbg !7157
  br label %return, !dbg !7157

return:                                           ; preds = %error, %if.end39
  %25 = load i32, i32* %retval, align 4, !dbg !7158
  ret i32 %25, !dbg !7158
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @alps_decode_rushmore(%struct.alps_fields* %f, i8* %p, %struct.psmouse* %psmouse) #0 !dbg !7159 {
entry:
  %f.addr = alloca %struct.alps_fields*, align 8
  %p.addr = alloca i8*, align 8
  %psmouse.addr = alloca %struct.psmouse*, align 8
  %__UNIQUE_ID___x206 = alloca i32, align 4
  %__UNIQUE_ID___y207 = alloca i32, align 4
  %tmp = alloca i32, align 4
  store %struct.alps_fields* %f, %struct.alps_fields** %f.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.alps_fields** %f.addr, metadata !7160, metadata !DIExpression()), !dbg !7161
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !7162, metadata !DIExpression()), !dbg !7163
  store %struct.psmouse* %psmouse, %struct.psmouse** %psmouse.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.psmouse** %psmouse.addr, metadata !7164, metadata !DIExpression()), !dbg !7165
  %0 = load i8*, i8** %p.addr, align 8, !dbg !7166
  %arrayidx = getelementptr i8, i8* %0, i64 4, !dbg !7166
  %1 = load i8, i8* %arrayidx, align 1, !dbg !7166
  %conv = zext i8 %1 to i32, !dbg !7166
  %and = and i32 %conv, 64, !dbg !7167
  %tobool = icmp ne i32 %and, 0, !dbg !7168
  %lnot = xor i1 %tobool, true, !dbg !7168
  %lnot1 = xor i1 %lnot, true, !dbg !7169
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !7169
  %2 = load %struct.alps_fields*, %struct.alps_fields** %f.addr, align 8, !dbg !7170
  %first_mp = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %2, i32 0, i32 6, !dbg !7171
  %3 = trunc i32 %lnot.ext to i8, !dbg !7172
  %bf.load = load i8, i8* %first_mp, align 4, !dbg !7172
  %bf.value = and i8 %3, 1, !dbg !7172
  %bf.clear = and i8 %bf.load, -2, !dbg !7172
  %bf.set = or i8 %bf.clear, %bf.value, !dbg !7172
  store i8 %bf.set, i8* %first_mp, align 4, !dbg !7172
  %bf.result.cast = zext i8 %bf.value to i32, !dbg !7172
  %4 = load i8*, i8** %p.addr, align 8, !dbg !7173
  %arrayidx2 = getelementptr i8, i8* %4, i64 5, !dbg !7173
  %5 = load i8, i8* %arrayidx2, align 1, !dbg !7173
  %conv3 = zext i8 %5 to i32, !dbg !7173
  %and4 = and i32 %conv3, 64, !dbg !7174
  %tobool5 = icmp ne i32 %and4, 0, !dbg !7175
  %lnot6 = xor i1 %tobool5, true, !dbg !7175
  %lnot8 = xor i1 %lnot6, true, !dbg !7176
  %lnot.ext9 = zext i1 %lnot8 to i32, !dbg !7176
  %6 = load %struct.alps_fields*, %struct.alps_fields** %f.addr, align 8, !dbg !7177
  %is_mp = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %6, i32 0, i32 6, !dbg !7178
  %7 = trunc i32 %lnot.ext9 to i8, !dbg !7179
  %bf.load10 = load i8, i8* %is_mp, align 4, !dbg !7179
  %bf.value11 = and i8 %7, 1, !dbg !7179
  %bf.shl = shl i8 %bf.value11, 1, !dbg !7179
  %bf.clear12 = and i8 %bf.load10, -3, !dbg !7179
  %bf.set13 = or i8 %bf.clear12, %bf.shl, !dbg !7179
  store i8 %bf.set13, i8* %is_mp, align 4, !dbg !7179
  %bf.result.cast14 = zext i8 %bf.value11 to i32, !dbg !7179
  %8 = load %struct.alps_fields*, %struct.alps_fields** %f.addr, align 8, !dbg !7180
  %is_mp15 = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %8, i32 0, i32 6, !dbg !7182
  %bf.load16 = load i8, i8* %is_mp15, align 4, !dbg !7182
  %bf.lshr = lshr i8 %bf.load16, 1, !dbg !7182
  %bf.clear17 = and i8 %bf.lshr, 1, !dbg !7182
  %bf.cast = zext i8 %bf.clear17 to i32, !dbg !7182
  %tobool18 = icmp ne i32 %bf.cast, 0, !dbg !7180
  br i1 %tobool18, label %if.then, label %if.else, !dbg !7183

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x206, metadata !7184, metadata !DIExpression()), !dbg !7187
  %9 = load i8*, i8** %p.addr, align 8, !dbg !7187
  %arrayidx19 = getelementptr i8, i8* %9, i64 5, !dbg !7187
  %10 = load i8, i8* %arrayidx19, align 1, !dbg !7187
  %conv20 = zext i8 %10 to i32, !dbg !7187
  %and21 = and i32 %conv20, 3, !dbg !7187
  store i32 %and21, i32* %__UNIQUE_ID___x206, align 4, !dbg !7187
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y207, metadata !7188, metadata !DIExpression()), !dbg !7187
  %11 = load i8*, i8** %p.addr, align 8, !dbg !7187
  %arrayidx22 = getelementptr i8, i8* %11, i64 5, !dbg !7187
  %12 = load i8, i8* %arrayidx22, align 1, !dbg !7187
  %conv23 = zext i8 %12 to i32, !dbg !7187
  %shr = ashr i32 %conv23, 2, !dbg !7187
  %and24 = and i32 %shr, 3, !dbg !7187
  store i32 %and24, i32* %__UNIQUE_ID___y207, align 4, !dbg !7187
  %13 = load i32, i32* %__UNIQUE_ID___x206, align 4, !dbg !7187
  %14 = load i32, i32* %__UNIQUE_ID___y207, align 4, !dbg !7187
  %cmp = icmp sgt i32 %13, %14, !dbg !7187
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !7187

cond.true:                                        ; preds = %if.then
  %15 = load i32, i32* %__UNIQUE_ID___x206, align 4, !dbg !7187
  br label %cond.end, !dbg !7187

cond.false:                                       ; preds = %if.then
  %16 = load i32, i32* %__UNIQUE_ID___y207, align 4, !dbg !7187
  br label %cond.end, !dbg !7187

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %15, %cond.true ], [ %16, %cond.false ], !dbg !7187
  store i32 %cond, i32* %tmp, align 4, !dbg !7187
  %17 = load i32, i32* %tmp, align 4, !dbg !7187
  %add = add i32 %17, 1, !dbg !7189
  %18 = load %struct.alps_fields*, %struct.alps_fields** %f.addr, align 8, !dbg !7190
  %fingers = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %18, i32 0, i32 2, !dbg !7191
  store i32 %add, i32* %fingers, align 4, !dbg !7192
  %19 = load i8*, i8** %p.addr, align 8, !dbg !7193
  %arrayidx26 = getelementptr i8, i8* %19, i64 5, !dbg !7193
  %20 = load i8, i8* %arrayidx26, align 1, !dbg !7193
  %conv27 = zext i8 %20 to i32, !dbg !7193
  %and28 = and i32 %conv27, 16, !dbg !7194
  %shl = shl i32 %and28, 11, !dbg !7195
  %21 = load i8*, i8** %p.addr, align 8, !dbg !7196
  %arrayidx29 = getelementptr i8, i8* %21, i64 4, !dbg !7196
  %22 = load i8, i8* %arrayidx29, align 1, !dbg !7196
  %conv30 = zext i8 %22 to i32, !dbg !7196
  %and31 = and i32 %conv30, 126, !dbg !7197
  %shl32 = shl i32 %and31, 8, !dbg !7198
  %or = or i32 %shl, %shl32, !dbg !7199
  %23 = load i8*, i8** %p.addr, align 8, !dbg !7200
  %arrayidx33 = getelementptr i8, i8* %23, i64 1, !dbg !7200
  %24 = load i8, i8* %arrayidx33, align 1, !dbg !7200
  %conv34 = zext i8 %24 to i32, !dbg !7200
  %and35 = and i32 %conv34, 127, !dbg !7201
  %shl36 = shl i32 %and35, 2, !dbg !7202
  %or37 = or i32 %or, %shl36, !dbg !7203
  %25 = load i8*, i8** %p.addr, align 8, !dbg !7204
  %arrayidx38 = getelementptr i8, i8* %25, i64 0, !dbg !7204
  %26 = load i8, i8* %arrayidx38, align 1, !dbg !7204
  %conv39 = zext i8 %26 to i32, !dbg !7204
  %and40 = and i32 %conv39, 48, !dbg !7205
  %shr41 = ashr i32 %and40, 4, !dbg !7206
  %or42 = or i32 %or37, %shr41, !dbg !7207
  %27 = load %struct.alps_fields*, %struct.alps_fields** %f.addr, align 8, !dbg !7208
  %x_map = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %27, i32 0, i32 0, !dbg !7209
  store i32 %or42, i32* %x_map, align 4, !dbg !7210
  %28 = load i8*, i8** %p.addr, align 8, !dbg !7211
  %arrayidx43 = getelementptr i8, i8* %28, i64 5, !dbg !7211
  %29 = load i8, i8* %arrayidx43, align 1, !dbg !7211
  %conv44 = zext i8 %29 to i32, !dbg !7211
  %and45 = and i32 %conv44, 32, !dbg !7212
  %shl46 = shl i32 %and45, 6, !dbg !7213
  %30 = load i8*, i8** %p.addr, align 8, !dbg !7214
  %arrayidx47 = getelementptr i8, i8* %30, i64 3, !dbg !7214
  %31 = load i8, i8* %arrayidx47, align 1, !dbg !7214
  %conv48 = zext i8 %31 to i32, !dbg !7214
  %and49 = and i32 %conv48, 112, !dbg !7215
  %shl50 = shl i32 %and49, 4, !dbg !7216
  %or51 = or i32 %shl46, %shl50, !dbg !7217
  %32 = load i8*, i8** %p.addr, align 8, !dbg !7218
  %arrayidx52 = getelementptr i8, i8* %32, i64 2, !dbg !7218
  %33 = load i8, i8* %arrayidx52, align 1, !dbg !7218
  %conv53 = zext i8 %33 to i32, !dbg !7218
  %and54 = and i32 %conv53, 127, !dbg !7219
  %shl55 = shl i32 %and54, 1, !dbg !7220
  %or56 = or i32 %or51, %shl55, !dbg !7221
  %34 = load i8*, i8** %p.addr, align 8, !dbg !7222
  %arrayidx57 = getelementptr i8, i8* %34, i64 4, !dbg !7222
  %35 = load i8, i8* %arrayidx57, align 1, !dbg !7222
  %conv58 = zext i8 %35 to i32, !dbg !7222
  %and59 = and i32 %conv58, 1, !dbg !7223
  %or60 = or i32 %or56, %and59, !dbg !7224
  %36 = load %struct.alps_fields*, %struct.alps_fields** %f.addr, align 8, !dbg !7225
  %y_map = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %36, i32 0, i32 1, !dbg !7226
  store i32 %or60, i32* %y_map, align 4, !dbg !7227
  br label %if.end, !dbg !7228

if.else:                                          ; preds = %entry
  %37 = load i8*, i8** %p.addr, align 8, !dbg !7229
  %arrayidx61 = getelementptr i8, i8* %37, i64 1, !dbg !7229
  %38 = load i8, i8* %arrayidx61, align 1, !dbg !7229
  %conv62 = zext i8 %38 to i32, !dbg !7229
  %and63 = and i32 %conv62, 127, !dbg !7231
  %shl64 = shl i32 %and63, 4, !dbg !7232
  %39 = load i8*, i8** %p.addr, align 8, !dbg !7233
  %arrayidx65 = getelementptr i8, i8* %39, i64 4, !dbg !7233
  %40 = load i8, i8* %arrayidx65, align 1, !dbg !7233
  %conv66 = zext i8 %40 to i32, !dbg !7233
  %and67 = and i32 %conv66, 48, !dbg !7234
  %shr68 = ashr i32 %and67, 2, !dbg !7235
  %or69 = or i32 %shl64, %shr68, !dbg !7236
  %41 = load i8*, i8** %p.addr, align 8, !dbg !7237
  %arrayidx70 = getelementptr i8, i8* %41, i64 0, !dbg !7237
  %42 = load i8, i8* %arrayidx70, align 1, !dbg !7237
  %conv71 = zext i8 %42 to i32, !dbg !7237
  %and72 = and i32 %conv71, 48, !dbg !7238
  %shr73 = ashr i32 %and72, 4, !dbg !7239
  %or74 = or i32 %or69, %shr73, !dbg !7240
  %conv75 = trunc i32 %or74 to i16, !dbg !7241
  %43 = load %struct.alps_fields*, %struct.alps_fields** %f.addr, align 8, !dbg !7242
  %st = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %43, i32 0, i32 4, !dbg !7243
  %x = getelementptr inbounds %struct.input_mt_pos, %struct.input_mt_pos* %st, i32 0, i32 0, !dbg !7244
  store i16 %conv75, i16* %x, align 4, !dbg !7245
  %44 = load i8*, i8** %p.addr, align 8, !dbg !7246
  %arrayidx76 = getelementptr i8, i8* %44, i64 2, !dbg !7246
  %45 = load i8, i8* %arrayidx76, align 1, !dbg !7246
  %conv77 = zext i8 %45 to i32, !dbg !7246
  %and78 = and i32 %conv77, 127, !dbg !7247
  %shl79 = shl i32 %and78, 4, !dbg !7248
  %46 = load i8*, i8** %p.addr, align 8, !dbg !7249
  %arrayidx80 = getelementptr i8, i8* %46, i64 4, !dbg !7249
  %47 = load i8, i8* %arrayidx80, align 1, !dbg !7249
  %conv81 = zext i8 %47 to i32, !dbg !7249
  %and82 = and i32 %conv81, 15, !dbg !7250
  %or83 = or i32 %shl79, %and82, !dbg !7251
  %conv84 = trunc i32 %or83 to i16, !dbg !7252
  %48 = load %struct.alps_fields*, %struct.alps_fields** %f.addr, align 8, !dbg !7253
  %st85 = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %48, i32 0, i32 4, !dbg !7254
  %y = getelementptr inbounds %struct.input_mt_pos, %struct.input_mt_pos* %st85, i32 0, i32 1, !dbg !7255
  store i16 %conv84, i16* %y, align 2, !dbg !7256
  %49 = load i8*, i8** %p.addr, align 8, !dbg !7257
  %arrayidx86 = getelementptr i8, i8* %49, i64 5, !dbg !7257
  %50 = load i8, i8* %arrayidx86, align 1, !dbg !7257
  %conv87 = zext i8 %50 to i32, !dbg !7257
  %and88 = and i32 %conv87, 127, !dbg !7258
  %51 = load %struct.alps_fields*, %struct.alps_fields** %f.addr, align 8, !dbg !7259
  %pressure = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %51, i32 0, i32 3, !dbg !7260
  store i32 %and88, i32* %pressure, align 4, !dbg !7261
  %52 = load %struct.alps_fields*, %struct.alps_fields** %f.addr, align 8, !dbg !7262
  %53 = load i8*, i8** %p.addr, align 8, !dbg !7263
  call void @alps_decode_buttons_v3(%struct.alps_fields* %52, i8* %53) #10, !dbg !7264
  br label %if.end

if.end:                                           ; preds = %if.else, %cond.end
  ret i32 0, !dbg !7265
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @alps_hw_init_v4(%struct.psmouse* %psmouse) #0 !dbg !7266 {
entry:
  %retval = alloca i32, align 4
  %psmouse.addr = alloca %struct.psmouse*, align 8
  %ps2dev = alloca %struct.ps2dev*, align 8
  %param = alloca [4 x i8], align 1
  store %struct.psmouse* %psmouse, %struct.psmouse** %psmouse.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.psmouse** %psmouse.addr, metadata !7267, metadata !DIExpression()), !dbg !7268
  call void @llvm.dbg.declare(metadata %struct.ps2dev** %ps2dev, metadata !7269, metadata !DIExpression()), !dbg !7270
  %0 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !7271
  %ps2dev1 = getelementptr inbounds %struct.psmouse, %struct.psmouse* %0, i32 0, i32 2, !dbg !7272
  store %struct.ps2dev* %ps2dev1, %struct.ps2dev** %ps2dev, align 8, !dbg !7270
  call void @llvm.dbg.declare(metadata [4 x i8]* %param, metadata !7273, metadata !DIExpression()), !dbg !7274
  %1 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !7275
  %call = call i32 @alps_enter_command_mode(%struct.psmouse* %1) #10, !dbg !7277
  %tobool = icmp ne i32 %call, 0, !dbg !7277
  br i1 %tobool, label %if.then, label %if.end, !dbg !7278

if.then:                                          ; preds = %entry
  br label %error, !dbg !7279

if.end:                                           ; preds = %entry
  %2 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !7280
  %call2 = call i32 @alps_absolute_mode_v4(%struct.psmouse* %2) #10, !dbg !7282
  %tobool3 = icmp ne i32 %call2, 0, !dbg !7282
  br i1 %tobool3, label %if.then4, label %if.end6, !dbg !7283

if.then4:                                         ; preds = %if.end
  %3 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !7284
  %ps2dev5 = getelementptr inbounds %struct.psmouse, %struct.psmouse* %3, i32 0, i32 2, !dbg !7284
  %serio = getelementptr inbounds %struct.ps2dev, %struct.ps2dev* %ps2dev5, i32 0, i32 0, !dbg !7284
  %4 = load %struct.serio*, %struct.serio** %serio, align 8, !dbg !7284
  %dev = getelementptr inbounds %struct.serio, %struct.serio* %4, i32 0, i32 18, !dbg !7284
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.18, i64 0, i64 0)) #11, !dbg !7284
  br label %error, !dbg !7286

if.end6:                                          ; preds = %if.end
  %5 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !7287
  %call7 = call i32 @alps_command_mode_write_reg(%struct.psmouse* %5, i32 7, i8 zeroext -116) #10, !dbg !7289
  %tobool8 = icmp ne i32 %call7, 0, !dbg !7289
  br i1 %tobool8, label %if.then9, label %if.end10, !dbg !7290

if.then9:                                         ; preds = %if.end6
  br label %error, !dbg !7291

if.end10:                                         ; preds = %if.end6
  %6 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !7292
  %call11 = call i32 @alps_command_mode_write_reg(%struct.psmouse* %6, i32 329, i8 zeroext 3) #10, !dbg !7294
  %tobool12 = icmp ne i32 %call11, 0, !dbg !7294
  br i1 %tobool12, label %if.then13, label %if.end14, !dbg !7295

if.then13:                                        ; preds = %if.end10
  br label %error, !dbg !7296

if.end14:                                         ; preds = %if.end10
  %7 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !7297
  %call15 = call i32 @alps_command_mode_write_reg(%struct.psmouse* %7, i32 352, i8 zeroext 3) #10, !dbg !7299
  %tobool16 = icmp ne i32 %call15, 0, !dbg !7299
  br i1 %tobool16, label %if.then17, label %if.end18, !dbg !7300

if.then17:                                        ; preds = %if.end14
  br label %error, !dbg !7301

if.end18:                                         ; preds = %if.end14
  %8 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !7302
  %call19 = call i32 @alps_command_mode_write_reg(%struct.psmouse* %8, i32 383, i8 zeroext 21) #10, !dbg !7304
  %tobool20 = icmp ne i32 %call19, 0, !dbg !7304
  br i1 %tobool20, label %if.then21, label %if.end22, !dbg !7305

if.then21:                                        ; preds = %if.end18
  br label %error, !dbg !7306

if.end22:                                         ; preds = %if.end18
  %9 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !7307
  %call23 = call i32 @alps_command_mode_write_reg(%struct.psmouse* %9, i32 337, i8 zeroext 1) #10, !dbg !7309
  %tobool24 = icmp ne i32 %call23, 0, !dbg !7309
  br i1 %tobool24, label %if.then25, label %if.end26, !dbg !7310

if.then25:                                        ; preds = %if.end22
  br label %error, !dbg !7311

if.end26:                                         ; preds = %if.end22
  %10 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !7312
  %call27 = call i32 @alps_command_mode_write_reg(%struct.psmouse* %10, i32 360, i8 zeroext 3) #10, !dbg !7314
  %tobool28 = icmp ne i32 %call27, 0, !dbg !7314
  br i1 %tobool28, label %if.then29, label %if.end30, !dbg !7315

if.then29:                                        ; preds = %if.end26
  br label %error, !dbg !7316

if.end30:                                         ; preds = %if.end26
  %11 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !7317
  %call31 = call i32 @alps_command_mode_write_reg(%struct.psmouse* %11, i32 330, i8 zeroext 3) #10, !dbg !7319
  %tobool32 = icmp ne i32 %call31, 0, !dbg !7319
  br i1 %tobool32, label %if.then33, label %if.end34, !dbg !7320

if.then33:                                        ; preds = %if.end30
  br label %error, !dbg !7321

if.end34:                                         ; preds = %if.end30
  %12 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !7322
  %call35 = call i32 @alps_command_mode_write_reg(%struct.psmouse* %12, i32 353, i8 zeroext 3) #10, !dbg !7324
  %tobool36 = icmp ne i32 %call35, 0, !dbg !7324
  br i1 %tobool36, label %if.then37, label %if.end38, !dbg !7325

if.then37:                                        ; preds = %if.end34
  br label %error, !dbg !7326

if.end38:                                         ; preds = %if.end34
  %13 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !7327
  %call39 = call i32 @alps_exit_command_mode(%struct.psmouse* %13) #10, !dbg !7328
  %arrayidx = getelementptr [4 x i8], [4 x i8]* %param, i64 0, i64 0, !dbg !7329
  store i8 -56, i8* %arrayidx, align 1, !dbg !7330
  %arrayidx40 = getelementptr [4 x i8], [4 x i8]* %param, i64 0, i64 1, !dbg !7331
  store i8 100, i8* %arrayidx40, align 1, !dbg !7332
  %arrayidx41 = getelementptr [4 x i8], [4 x i8]* %param, i64 0, i64 2, !dbg !7333
  store i8 80, i8* %arrayidx41, align 1, !dbg !7334
  %14 = load %struct.ps2dev*, %struct.ps2dev** %ps2dev, align 8, !dbg !7335
  %arrayidx42 = getelementptr [4 x i8], [4 x i8]* %param, i64 0, i64 0, !dbg !7337
  %call43 = call i32 @ps2_command(%struct.ps2dev* %14, i8* %arrayidx42, i32 4339) #10, !dbg !7338
  %tobool44 = icmp ne i32 %call43, 0, !dbg !7338
  br i1 %tobool44, label %if.then55, label %lor.lhs.false, !dbg !7339

lor.lhs.false:                                    ; preds = %if.end38
  %15 = load %struct.ps2dev*, %struct.ps2dev** %ps2dev, align 8, !dbg !7340
  %arrayidx45 = getelementptr [4 x i8], [4 x i8]* %param, i64 0, i64 1, !dbg !7341
  %call46 = call i32 @ps2_command(%struct.ps2dev* %15, i8* %arrayidx45, i32 4339) #10, !dbg !7342
  %tobool47 = icmp ne i32 %call46, 0, !dbg !7342
  br i1 %tobool47, label %if.then55, label %lor.lhs.false48, !dbg !7343

lor.lhs.false48:                                  ; preds = %lor.lhs.false
  %16 = load %struct.ps2dev*, %struct.ps2dev** %ps2dev, align 8, !dbg !7344
  %arrayidx49 = getelementptr [4 x i8], [4 x i8]* %param, i64 0, i64 2, !dbg !7345
  %call50 = call i32 @ps2_command(%struct.ps2dev* %16, i8* %arrayidx49, i32 4339) #10, !dbg !7346
  %tobool51 = icmp ne i32 %call50, 0, !dbg !7346
  br i1 %tobool51, label %if.then55, label %lor.lhs.false52, !dbg !7347

lor.lhs.false52:                                  ; preds = %lor.lhs.false48
  %17 = load %struct.ps2dev*, %struct.ps2dev** %ps2dev, align 8, !dbg !7348
  %arraydecay = getelementptr inbounds [4 x i8], [4 x i8]* %param, i64 0, i64 0, !dbg !7349
  %call53 = call i32 @ps2_command(%struct.ps2dev* %17, i8* %arraydecay, i32 754) #10, !dbg !7350
  %tobool54 = icmp ne i32 %call53, 0, !dbg !7350
  br i1 %tobool54, label %if.then55, label %if.end56, !dbg !7351

if.then55:                                        ; preds = %lor.lhs.false52, %lor.lhs.false48, %lor.lhs.false, %if.end38
  store i32 -1, i32* %retval, align 4, !dbg !7352
  br label %return, !dbg !7352

if.end56:                                         ; preds = %lor.lhs.false52
  %arrayidx57 = getelementptr [4 x i8], [4 x i8]* %param, i64 0, i64 0, !dbg !7353
  store i8 100, i8* %arrayidx57, align 1, !dbg !7354
  %18 = load %struct.ps2dev*, %struct.ps2dev** %ps2dev, align 8, !dbg !7355
  %arraydecay58 = getelementptr inbounds [4 x i8], [4 x i8]* %param, i64 0, i64 0, !dbg !7357
  %call59 = call i32 @ps2_command(%struct.ps2dev* %18, i8* %arraydecay58, i32 4339) #10, !dbg !7358
  %tobool60 = icmp ne i32 %call59, 0, !dbg !7358
  br i1 %tobool60, label %if.then64, label %lor.lhs.false61, !dbg !7359

lor.lhs.false61:                                  ; preds = %if.end56
  %19 = load %struct.ps2dev*, %struct.ps2dev** %ps2dev, align 8, !dbg !7360
  %call62 = call i32 @ps2_command(%struct.ps2dev* %19, i8* null, i32 244) #10, !dbg !7361
  %tobool63 = icmp ne i32 %call62, 0, !dbg !7361
  br i1 %tobool63, label %if.then64, label %if.end68, !dbg !7362

if.then64:                                        ; preds = %lor.lhs.false61, %if.end56
  %20 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !7363
  %ps2dev65 = getelementptr inbounds %struct.psmouse, %struct.psmouse* %20, i32 0, i32 2, !dbg !7363
  %serio66 = getelementptr inbounds %struct.ps2dev, %struct.ps2dev* %ps2dev65, i32 0, i32 0, !dbg !7363
  %21 = load %struct.serio*, %struct.serio** %serio66, align 8, !dbg !7363
  %dev67 = getelementptr inbounds %struct.serio, %struct.serio* %21, i32 0, i32 18, !dbg !7363
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev67, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.19, i64 0, i64 0)) #11, !dbg !7363
  store i32 -1, i32* %retval, align 4, !dbg !7365
  br label %return, !dbg !7365

if.end68:                                         ; preds = %lor.lhs.false61
  store i32 0, i32* %retval, align 4, !dbg !7366
  br label %return, !dbg !7366

error:                                            ; preds = %if.then37, %if.then33, %if.then29, %if.then25, %if.then21, %if.then17, %if.then13, %if.then9, %if.then4, %if.then
  call void @llvm.dbg.label(metadata !7367), !dbg !7368
  %22 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !7369
  %call69 = call i32 @alps_exit_command_mode(%struct.psmouse* %22) #10, !dbg !7370
  store i32 -1, i32* %retval, align 4, !dbg !7371
  br label %return, !dbg !7371

return:                                           ; preds = %error, %if.end68, %if.then64, %if.then55
  %23 = load i32, i32* %retval, align 4, !dbg !7372
  ret i32 %23, !dbg !7372
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @alps_process_packet_v4(%struct.psmouse* %psmouse) #0 !dbg !7373 {
entry:
  %psmouse.addr = alloca %struct.psmouse*, align 8
  %priv = alloca %struct.alps_data*, align 8
  %packet = alloca i8*, align 8
  %f = alloca %struct.alps_fields*, align 8
  %offset = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.psmouse* %psmouse, %struct.psmouse** %psmouse.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.psmouse** %psmouse.addr, metadata !7374, metadata !DIExpression()), !dbg !7375
  call void @llvm.dbg.declare(metadata %struct.alps_data** %priv, metadata !7376, metadata !DIExpression()), !dbg !7377
  %0 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !7378
  %private = getelementptr inbounds %struct.psmouse, %struct.psmouse* %0, i32 0, i32 0, !dbg !7379
  %1 = load i8*, i8** %private, align 8, !dbg !7379
  %2 = bitcast i8* %1 to %struct.alps_data*, !dbg !7378
  store %struct.alps_data* %2, %struct.alps_data** %priv, align 8, !dbg !7377
  call void @llvm.dbg.declare(metadata i8** %packet, metadata !7380, metadata !DIExpression()), !dbg !7381
  %3 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !7382
  %packet1 = getelementptr inbounds %struct.psmouse, %struct.psmouse* %3, i32 0, i32 7, !dbg !7383
  %arraydecay = getelementptr inbounds [8 x i8], [8 x i8]* %packet1, i64 0, i64 0, !dbg !7382
  store i8* %arraydecay, i8** %packet, align 8, !dbg !7381
  call void @llvm.dbg.declare(metadata %struct.alps_fields** %f, metadata !7384, metadata !DIExpression()), !dbg !7385
  %4 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !7386
  %f2 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %4, i32 0, i32 28, !dbg !7387
  store %struct.alps_fields* %f2, %struct.alps_fields** %f, align 8, !dbg !7385
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !7388, metadata !DIExpression()), !dbg !7389
  %5 = load i8*, i8** %packet, align 8, !dbg !7390
  %arrayidx = getelementptr i8, i8* %5, i64 6, !dbg !7390
  %6 = load i8, i8* %arrayidx, align 1, !dbg !7390
  %conv = zext i8 %6 to i32, !dbg !7390
  %and = and i32 %conv, 64, !dbg !7392
  %tobool = icmp ne i32 %and, 0, !dbg !7392
  br i1 %tobool, label %if.then, label %if.end, !dbg !7393

if.then:                                          ; preds = %entry
  %7 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !7394
  %multi_packet = getelementptr inbounds %struct.alps_data, %struct.alps_data* %7, i32 0, i32 25, !dbg !7396
  store i32 0, i32* %multi_packet, align 4, !dbg !7397
  br label %if.end, !dbg !7398

if.end:                                           ; preds = %if.then, %entry
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !7399, metadata !DIExpression()), !dbg !7402
  %8 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !7402
  %multi_packet3 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %8, i32 0, i32 25, !dbg !7402
  %9 = load i32, i32* %multi_packet3, align 4, !dbg !7402
  %cmp = icmp sgt i32 %9, 2, !dbg !7402
  %lnot = xor i1 %cmp, true, !dbg !7402
  %lnot5 = xor i1 %lnot, true, !dbg !7402
  %lnot.ext = zext i1 %lnot5 to i32, !dbg !7402
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !7402
  %10 = load i32, i32* %__ret_warn_on, align 4, !dbg !7403
  %tobool6 = icmp ne i32 %10, 0, !dbg !7403
  %lnot7 = xor i1 %tobool6, true, !dbg !7403
  %lnot9 = xor i1 %lnot7, true, !dbg !7403
  %lnot.ext10 = zext i1 %lnot9 to i32, !dbg !7403
  %conv11 = sext i32 %lnot.ext10 to i64, !dbg !7403
  %tobool12 = icmp ne i64 %conv11, 0, !dbg !7403
  br i1 %tobool12, label %if.then13, label %if.end20, !dbg !7402

if.then13:                                        ; preds = %if.end
  br label %do.body, !dbg !7403

do.body:                                          ; preds = %if.then13
  br label %do.body14, !dbg !7405

do.body14:                                        ; preds = %do.body
  br label %do.end, !dbg !7407

do.end:                                           ; preds = %do.body14
  br label %do.body15, !dbg !7405

do.body15:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.23, i64 0, i64 0), i32 906, i32 2307, i64 12) #7, !dbg !7409, !srcloc !7411
  br label %do.end16, !dbg !7409

do.end16:                                         ; preds = %do.body15
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 208) #7, !dbg !7412, !srcloc !7414
  br label %do.body17, !dbg !7405

do.body17:                                        ; preds = %do.end16
  br label %do.end18, !dbg !7415

do.end18:                                         ; preds = %do.body17
  br label %do.end19, !dbg !7405

do.end19:                                         ; preds = %do.end18
  br label %if.end20, !dbg !7405

if.end20:                                         ; preds = %do.end19, %if.end
  %11 = load i32, i32* %__ret_warn_on, align 4, !dbg !7402
  %tobool21 = icmp ne i32 %11, 0, !dbg !7402
  %lnot22 = xor i1 %tobool21, true, !dbg !7402
  %lnot24 = xor i1 %lnot22, true, !dbg !7402
  %lnot.ext25 = zext i1 %lnot24 to i32, !dbg !7402
  %conv26 = sext i32 %lnot.ext25 to i64, !dbg !7402
  store i64 %conv26, i64* %tmp, align 8, !dbg !7403
  %12 = load i64, i64* %tmp, align 8, !dbg !7402
  %tobool27 = icmp ne i64 %12, 0, !dbg !7417
  br i1 %tobool27, label %if.then28, label %if.end29, !dbg !7418

if.then28:                                        ; preds = %if.end20
  br label %return, !dbg !7419

if.end29:                                         ; preds = %if.end20
  %13 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !7420
  %multi_packet30 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %13, i32 0, i32 25, !dbg !7421
  %14 = load i32, i32* %multi_packet30, align 4, !dbg !7421
  %mul = mul i32 2, %14, !dbg !7422
  store i32 %mul, i32* %offset, align 4, !dbg !7423
  %15 = load i8*, i8** %packet, align 8, !dbg !7424
  %arrayidx31 = getelementptr i8, i8* %15, i64 6, !dbg !7424
  %16 = load i8, i8* %arrayidx31, align 1, !dbg !7424
  %17 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !7425
  %multi_data = getelementptr inbounds %struct.alps_data, %struct.alps_data* %17, i32 0, i32 27, !dbg !7426
  %18 = load i32, i32* %offset, align 4, !dbg !7427
  %idxprom = sext i32 %18 to i64, !dbg !7425
  %arrayidx32 = getelementptr [6 x i8], [6 x i8]* %multi_data, i64 0, i64 %idxprom, !dbg !7425
  store i8 %16, i8* %arrayidx32, align 1, !dbg !7428
  %19 = load i8*, i8** %packet, align 8, !dbg !7429
  %arrayidx33 = getelementptr i8, i8* %19, i64 7, !dbg !7429
  %20 = load i8, i8* %arrayidx33, align 1, !dbg !7429
  %21 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !7430
  %multi_data34 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %21, i32 0, i32 27, !dbg !7431
  %22 = load i32, i32* %offset, align 4, !dbg !7432
  %add = add i32 %22, 1, !dbg !7433
  %idxprom35 = sext i32 %add to i64, !dbg !7430
  %arrayidx36 = getelementptr [6 x i8], [6 x i8]* %multi_data34, i64 0, i64 %idxprom35, !dbg !7430
  store i8 %20, i8* %arrayidx36, align 1, !dbg !7434
  %23 = load i8*, i8** %packet, align 8, !dbg !7435
  %arrayidx37 = getelementptr i8, i8* %23, i64 4, !dbg !7435
  %24 = load i8, i8* %arrayidx37, align 1, !dbg !7435
  %conv38 = zext i8 %24 to i32, !dbg !7435
  %and39 = and i32 %conv38, 1, !dbg !7436
  %tobool40 = icmp ne i32 %and39, 0, !dbg !7437
  %lnot41 = xor i1 %tobool40, true, !dbg !7437
  %lnot43 = xor i1 %lnot41, true, !dbg !7438
  %lnot.ext44 = zext i1 %lnot43 to i32, !dbg !7438
  %25 = load %struct.alps_fields*, %struct.alps_fields** %f, align 8, !dbg !7439
  %left = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %25, i32 0, i32 6, !dbg !7440
  %26 = trunc i32 %lnot.ext44 to i8, !dbg !7441
  %bf.load = load i8, i8* %left, align 4, !dbg !7441
  %bf.value = and i8 %26, 1, !dbg !7441
  %bf.shl = shl i8 %bf.value, 2, !dbg !7441
  %bf.clear = and i8 %bf.load, -5, !dbg !7441
  %bf.set = or i8 %bf.clear, %bf.shl, !dbg !7441
  store i8 %bf.set, i8* %left, align 4, !dbg !7441
  %bf.result.cast = zext i8 %bf.value to i32, !dbg !7441
  %27 = load i8*, i8** %packet, align 8, !dbg !7442
  %arrayidx45 = getelementptr i8, i8* %27, i64 4, !dbg !7442
  %28 = load i8, i8* %arrayidx45, align 1, !dbg !7442
  %conv46 = zext i8 %28 to i32, !dbg !7442
  %and47 = and i32 %conv46, 2, !dbg !7443
  %tobool48 = icmp ne i32 %and47, 0, !dbg !7444
  %lnot49 = xor i1 %tobool48, true, !dbg !7444
  %lnot51 = xor i1 %lnot49, true, !dbg !7445
  %lnot.ext52 = zext i1 %lnot51 to i32, !dbg !7445
  %29 = load %struct.alps_fields*, %struct.alps_fields** %f, align 8, !dbg !7446
  %right = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %29, i32 0, i32 6, !dbg !7447
  %30 = trunc i32 %lnot.ext52 to i8, !dbg !7448
  %bf.load53 = load i8, i8* %right, align 4, !dbg !7448
  %bf.value54 = and i8 %30, 1, !dbg !7448
  %bf.shl55 = shl i8 %bf.value54, 3, !dbg !7448
  %bf.clear56 = and i8 %bf.load53, -9, !dbg !7448
  %bf.set57 = or i8 %bf.clear56, %bf.shl55, !dbg !7448
  store i8 %bf.set57, i8* %right, align 4, !dbg !7448
  %bf.result.cast58 = zext i8 %bf.value54 to i32, !dbg !7448
  %31 = load i8*, i8** %packet, align 8, !dbg !7449
  %arrayidx59 = getelementptr i8, i8* %31, i64 1, !dbg !7449
  %32 = load i8, i8* %arrayidx59, align 1, !dbg !7449
  %conv60 = zext i8 %32 to i32, !dbg !7449
  %and61 = and i32 %conv60, 127, !dbg !7450
  %shl = shl i32 %and61, 4, !dbg !7451
  %33 = load i8*, i8** %packet, align 8, !dbg !7452
  %arrayidx62 = getelementptr i8, i8* %33, i64 3, !dbg !7452
  %34 = load i8, i8* %arrayidx62, align 1, !dbg !7452
  %conv63 = zext i8 %34 to i32, !dbg !7452
  %and64 = and i32 %conv63, 48, !dbg !7453
  %shr = ashr i32 %and64, 2, !dbg !7454
  %or = or i32 %shl, %shr, !dbg !7455
  %35 = load i8*, i8** %packet, align 8, !dbg !7456
  %arrayidx65 = getelementptr i8, i8* %35, i64 0, !dbg !7456
  %36 = load i8, i8* %arrayidx65, align 1, !dbg !7456
  %conv66 = zext i8 %36 to i32, !dbg !7456
  %and67 = and i32 %conv66, 48, !dbg !7457
  %shr68 = ashr i32 %and67, 4, !dbg !7458
  %or69 = or i32 %or, %shr68, !dbg !7459
  %conv70 = trunc i32 %or69 to i16, !dbg !7460
  %37 = load %struct.alps_fields*, %struct.alps_fields** %f, align 8, !dbg !7461
  %st = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %37, i32 0, i32 4, !dbg !7462
  %x = getelementptr inbounds %struct.input_mt_pos, %struct.input_mt_pos* %st, i32 0, i32 0, !dbg !7463
  store i16 %conv70, i16* %x, align 4, !dbg !7464
  %38 = load i8*, i8** %packet, align 8, !dbg !7465
  %arrayidx71 = getelementptr i8, i8* %38, i64 2, !dbg !7465
  %39 = load i8, i8* %arrayidx71, align 1, !dbg !7465
  %conv72 = zext i8 %39 to i32, !dbg !7465
  %and73 = and i32 %conv72, 127, !dbg !7466
  %shl74 = shl i32 %and73, 4, !dbg !7467
  %40 = load i8*, i8** %packet, align 8, !dbg !7468
  %arrayidx75 = getelementptr i8, i8* %40, i64 3, !dbg !7468
  %41 = load i8, i8* %arrayidx75, align 1, !dbg !7468
  %conv76 = zext i8 %41 to i32, !dbg !7468
  %and77 = and i32 %conv76, 15, !dbg !7469
  %or78 = or i32 %shl74, %and77, !dbg !7470
  %conv79 = trunc i32 %or78 to i16, !dbg !7471
  %42 = load %struct.alps_fields*, %struct.alps_fields** %f, align 8, !dbg !7472
  %st80 = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %42, i32 0, i32 4, !dbg !7473
  %y = getelementptr inbounds %struct.input_mt_pos, %struct.input_mt_pos* %st80, i32 0, i32 1, !dbg !7474
  store i16 %conv79, i16* %y, align 2, !dbg !7475
  %43 = load i8*, i8** %packet, align 8, !dbg !7476
  %arrayidx81 = getelementptr i8, i8* %43, i64 5, !dbg !7476
  %44 = load i8, i8* %arrayidx81, align 1, !dbg !7476
  %conv82 = zext i8 %44 to i32, !dbg !7476
  %and83 = and i32 %conv82, 127, !dbg !7477
  %45 = load %struct.alps_fields*, %struct.alps_fields** %f, align 8, !dbg !7478
  %pressure = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %45, i32 0, i32 3, !dbg !7479
  store i32 %and83, i32* %pressure, align 4, !dbg !7480
  %46 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !7481
  %multi_packet84 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %46, i32 0, i32 25, !dbg !7483
  %47 = load i32, i32* %multi_packet84, align 4, !dbg !7484
  %inc = add i32 %47, 1, !dbg !7484
  store i32 %inc, i32* %multi_packet84, align 4, !dbg !7484
  %cmp85 = icmp sgt i32 %inc, 2, !dbg !7485
  br i1 %cmp85, label %if.then87, label %if.end128, !dbg !7486

if.then87:                                        ; preds = %if.end29
  %48 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !7487
  %multi_packet88 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %48, i32 0, i32 25, !dbg !7489
  store i32 0, i32* %multi_packet88, align 4, !dbg !7490
  %49 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !7491
  %multi_data89 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %49, i32 0, i32 27, !dbg !7492
  %arrayidx90 = getelementptr [6 x i8], [6 x i8]* %multi_data89, i64 0, i64 2, !dbg !7491
  %50 = load i8, i8* %arrayidx90, align 2, !dbg !7491
  %conv91 = zext i8 %50 to i32, !dbg !7491
  %and92 = and i32 %conv91, 31, !dbg !7493
  %shl93 = shl i32 %and92, 10, !dbg !7494
  %51 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !7495
  %multi_data94 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %51, i32 0, i32 27, !dbg !7496
  %arrayidx95 = getelementptr [6 x i8], [6 x i8]* %multi_data94, i64 0, i64 3, !dbg !7495
  %52 = load i8, i8* %arrayidx95, align 1, !dbg !7495
  %conv96 = zext i8 %52 to i32, !dbg !7495
  %and97 = and i32 %conv96, 96, !dbg !7497
  %shl98 = shl i32 %and97, 3, !dbg !7498
  %or99 = or i32 %shl93, %shl98, !dbg !7499
  %53 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !7500
  %multi_data100 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %53, i32 0, i32 27, !dbg !7501
  %arrayidx101 = getelementptr [6 x i8], [6 x i8]* %multi_data100, i64 0, i64 0, !dbg !7500
  %54 = load i8, i8* %arrayidx101, align 4, !dbg !7500
  %conv102 = zext i8 %54 to i32, !dbg !7500
  %and103 = and i32 %conv102, 63, !dbg !7502
  %shl104 = shl i32 %and103, 2, !dbg !7503
  %or105 = or i32 %or99, %shl104, !dbg !7504
  %55 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !7505
  %multi_data106 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %55, i32 0, i32 27, !dbg !7506
  %arrayidx107 = getelementptr [6 x i8], [6 x i8]* %multi_data106, i64 0, i64 1, !dbg !7505
  %56 = load i8, i8* %arrayidx107, align 1, !dbg !7505
  %conv108 = zext i8 %56 to i32, !dbg !7505
  %and109 = and i32 %conv108, 96, !dbg !7507
  %shr110 = ashr i32 %and109, 5, !dbg !7508
  %or111 = or i32 %or105, %shr110, !dbg !7509
  %57 = load %struct.alps_fields*, %struct.alps_fields** %f, align 8, !dbg !7510
  %x_map = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %57, i32 0, i32 0, !dbg !7511
  store i32 %or111, i32* %x_map, align 4, !dbg !7512
  %58 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !7513
  %multi_data112 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %58, i32 0, i32 27, !dbg !7514
  %arrayidx113 = getelementptr [6 x i8], [6 x i8]* %multi_data112, i64 0, i64 5, !dbg !7513
  %59 = load i8, i8* %arrayidx113, align 1, !dbg !7513
  %conv114 = zext i8 %59 to i32, !dbg !7513
  %and115 = and i32 %conv114, 1, !dbg !7515
  %shl116 = shl i32 %and115, 10, !dbg !7516
  %60 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !7517
  %multi_data117 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %60, i32 0, i32 27, !dbg !7518
  %arrayidx118 = getelementptr [6 x i8], [6 x i8]* %multi_data117, i64 0, i64 3, !dbg !7517
  %61 = load i8, i8* %arrayidx118, align 1, !dbg !7517
  %conv119 = zext i8 %61 to i32, !dbg !7517
  %and120 = and i32 %conv119, 31, !dbg !7519
  %shl121 = shl i32 %and120, 5, !dbg !7520
  %or122 = or i32 %shl116, %shl121, !dbg !7521
  %62 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !7522
  %multi_data123 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %62, i32 0, i32 27, !dbg !7523
  %arrayidx124 = getelementptr [6 x i8], [6 x i8]* %multi_data123, i64 0, i64 1, !dbg !7522
  %63 = load i8, i8* %arrayidx124, align 1, !dbg !7522
  %conv125 = zext i8 %63 to i32, !dbg !7522
  %and126 = and i32 %conv125, 31, !dbg !7524
  %or127 = or i32 %or122, %and126, !dbg !7525
  %64 = load %struct.alps_fields*, %struct.alps_fields** %f, align 8, !dbg !7526
  %y_map = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %64, i32 0, i32 1, !dbg !7527
  store i32 %or127, i32* %y_map, align 4, !dbg !7528
  %65 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !7529
  %66 = load %struct.alps_fields*, %struct.alps_fields** %f, align 8, !dbg !7530
  %call = call i32 @alps_process_bitmap(%struct.alps_data* %65, %struct.alps_fields* %66) #10, !dbg !7531
  %67 = load %struct.alps_fields*, %struct.alps_fields** %f, align 8, !dbg !7532
  %fingers = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %67, i32 0, i32 2, !dbg !7533
  store i32 %call, i32* %fingers, align 4, !dbg !7534
  br label %if.end128, !dbg !7535

if.end128:                                        ; preds = %if.then87, %if.end29
  %68 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !7536
  %69 = load %struct.alps_fields*, %struct.alps_fields** %f, align 8, !dbg !7537
  %fingers129 = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %69, i32 0, i32 2, !dbg !7538
  %70 = load i32, i32* %fingers129, align 4, !dbg !7538
  call void @alps_report_semi_mt_data(%struct.psmouse* %68, i32 %70) #10, !dbg !7539
  br label %return, !dbg !7540

return:                                           ; preds = %if.end128, %if.then28
  ret void, !dbg !7540
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @alps_hw_init_dolphin_v1(%struct.psmouse* %psmouse) #0 !dbg !7541 {
entry:
  %retval = alloca i32, align 4
  %psmouse.addr = alloca %struct.psmouse*, align 8
  %ps2dev = alloca %struct.ps2dev*, align 8
  %param = alloca [2 x i8], align 1
  store %struct.psmouse* %psmouse, %struct.psmouse** %psmouse.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.psmouse** %psmouse.addr, metadata !7542, metadata !DIExpression()), !dbg !7543
  call void @llvm.dbg.declare(metadata %struct.ps2dev** %ps2dev, metadata !7544, metadata !DIExpression()), !dbg !7545
  %0 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !7546
  %ps2dev1 = getelementptr inbounds %struct.psmouse, %struct.psmouse* %0, i32 0, i32 2, !dbg !7547
  store %struct.ps2dev* %ps2dev1, %struct.ps2dev** %ps2dev, align 8, !dbg !7545
  call void @llvm.dbg.declare(metadata [2 x i8]* %param, metadata !7548, metadata !DIExpression()), !dbg !7550
  %arrayidx = getelementptr [2 x i8], [2 x i8]* %param, i64 0, i64 0, !dbg !7551
  store i8 100, i8* %arrayidx, align 1, !dbg !7552
  %arrayidx2 = getelementptr [2 x i8], [2 x i8]* %param, i64 0, i64 1, !dbg !7553
  store i8 40, i8* %arrayidx2, align 1, !dbg !7554
  %1 = load %struct.ps2dev*, %struct.ps2dev** %ps2dev, align 8, !dbg !7555
  %call = call i32 @ps2_command(%struct.ps2dev* %1, i8* null, i32 234) #10, !dbg !7557
  %tobool = icmp ne i32 %call, 0, !dbg !7557
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !7558

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.ps2dev*, %struct.ps2dev** %ps2dev, align 8, !dbg !7559
  %arrayidx3 = getelementptr [2 x i8], [2 x i8]* %param, i64 0, i64 0, !dbg !7560
  %call4 = call i32 @ps2_command(%struct.ps2dev* %2, i8* %arrayidx3, i32 4339) #10, !dbg !7561
  %tobool5 = icmp ne i32 %call4, 0, !dbg !7561
  br i1 %tobool5, label %if.then, label %lor.lhs.false6, !dbg !7562

lor.lhs.false6:                                   ; preds = %lor.lhs.false
  %3 = load %struct.ps2dev*, %struct.ps2dev** %ps2dev, align 8, !dbg !7563
  %arrayidx7 = getelementptr [2 x i8], [2 x i8]* %param, i64 0, i64 1, !dbg !7564
  %call8 = call i32 @ps2_command(%struct.ps2dev* %3, i8* %arrayidx7, i32 4339) #10, !dbg !7565
  %tobool9 = icmp ne i32 %call8, 0, !dbg !7565
  br i1 %tobool9, label %if.then, label %if.end, !dbg !7566

if.then:                                          ; preds = %lor.lhs.false6, %lor.lhs.false, %entry
  store i32 -1, i32* %retval, align 4, !dbg !7567
  br label %return, !dbg !7567

if.end:                                           ; preds = %lor.lhs.false6
  store i32 0, i32* %retval, align 4, !dbg !7568
  br label %return, !dbg !7568

return:                                           ; preds = %if.end, %if.then
  %4 = load i32, i32* %retval, align 4, !dbg !7569
  ret i32 %4, !dbg !7569
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @alps_process_touchpad_packet_v3_v5(%struct.psmouse* %psmouse) #0 !dbg !7570 {
entry:
  %psmouse.addr = alloca %struct.psmouse*, align 8
  %priv = alloca %struct.alps_data*, align 8
  %packet = alloca i8*, align 8
  %dev2 = alloca %struct.input_dev*, align 8
  %f = alloca %struct.alps_fields*, align 8
  %fingers = alloca i32, align 4
  store %struct.psmouse* %psmouse, %struct.psmouse** %psmouse.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.psmouse** %psmouse.addr, metadata !7571, metadata !DIExpression()), !dbg !7572
  call void @llvm.dbg.declare(metadata %struct.alps_data** %priv, metadata !7573, metadata !DIExpression()), !dbg !7574
  %0 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !7575
  %private = getelementptr inbounds %struct.psmouse, %struct.psmouse* %0, i32 0, i32 0, !dbg !7576
  %1 = load i8*, i8** %private, align 8, !dbg !7576
  %2 = bitcast i8* %1 to %struct.alps_data*, !dbg !7575
  store %struct.alps_data* %2, %struct.alps_data** %priv, align 8, !dbg !7574
  call void @llvm.dbg.declare(metadata i8** %packet, metadata !7577, metadata !DIExpression()), !dbg !7578
  %3 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !7579
  %packet1 = getelementptr inbounds %struct.psmouse, %struct.psmouse* %3, i32 0, i32 7, !dbg !7580
  %arraydecay = getelementptr inbounds [8 x i8], [8 x i8]* %packet1, i64 0, i64 0, !dbg !7579
  store i8* %arraydecay, i8** %packet, align 8, !dbg !7578
  call void @llvm.dbg.declare(metadata %struct.input_dev** %dev2, metadata !7581, metadata !DIExpression()), !dbg !7582
  %4 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !7583
  %dev22 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %4, i32 0, i32 1, !dbg !7584
  %5 = load %struct.input_dev*, %struct.input_dev** %dev22, align 8, !dbg !7584
  store %struct.input_dev* %5, %struct.input_dev** %dev2, align 8, !dbg !7582
  call void @llvm.dbg.declare(metadata %struct.alps_fields** %f, metadata !7585, metadata !DIExpression()), !dbg !7586
  %6 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !7587
  %f3 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %6, i32 0, i32 28, !dbg !7588
  store %struct.alps_fields* %f3, %struct.alps_fields** %f, align 8, !dbg !7586
  call void @llvm.dbg.declare(metadata i32* %fingers, metadata !7589, metadata !DIExpression()), !dbg !7590
  store i32 0, i32* %fingers, align 4, !dbg !7590
  %7 = load %struct.alps_fields*, %struct.alps_fields** %f, align 8, !dbg !7591
  %8 = bitcast %struct.alps_fields* %7 to i8*, !dbg !7592
  call void @llvm.memset.p0i8.i64(i8* align 4 %8, i8 0, i64 40, i1 false), !dbg !7592
  %9 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !7593
  %decode_fields = getelementptr inbounds %struct.alps_data, %struct.alps_data* %9, i32 0, i32 22, !dbg !7594
  %10 = load i32 (%struct.alps_fields*, i8*, %struct.psmouse*)*, i32 (%struct.alps_fields*, i8*, %struct.psmouse*)** %decode_fields, align 8, !dbg !7594
  %11 = load %struct.alps_fields*, %struct.alps_fields** %f, align 8, !dbg !7595
  %12 = load i8*, i8** %packet, align 8, !dbg !7596
  %13 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !7597
  %call = call i32 %10(%struct.alps_fields* %11, i8* %12, %struct.psmouse* %13) #10, !dbg !7593
  %14 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !7598
  %multi_packet = getelementptr inbounds %struct.alps_data, %struct.alps_data* %14, i32 0, i32 25, !dbg !7600
  %15 = load i32, i32* %multi_packet, align 4, !dbg !7600
  %tobool = icmp ne i32 %15, 0, !dbg !7598
  br i1 %tobool, label %if.then, label %if.end14, !dbg !7601

if.then:                                          ; preds = %entry
  %16 = load %struct.alps_fields*, %struct.alps_fields** %f, align 8, !dbg !7602
  %is_mp = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %16, i32 0, i32 6, !dbg !7605
  %bf.load = load i8, i8* %is_mp, align 4, !dbg !7605
  %bf.lshr = lshr i8 %bf.load, 1, !dbg !7605
  %bf.clear = and i8 %bf.lshr, 1, !dbg !7605
  %bf.cast = zext i8 %bf.clear to i32, !dbg !7605
  %tobool4 = icmp ne i32 %bf.cast, 0, !dbg !7602
  br i1 %tobool4, label %if.then5, label %if.else, !dbg !7606

if.then5:                                         ; preds = %if.then
  %17 = load %struct.alps_fields*, %struct.alps_fields** %f, align 8, !dbg !7607
  %fingers6 = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %17, i32 0, i32 2, !dbg !7609
  %18 = load i32, i32* %fingers6, align 4, !dbg !7609
  store i32 %18, i32* %fingers, align 4, !dbg !7610
  %19 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !7611
  %decode_fields7 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %19, i32 0, i32 22, !dbg !7612
  %20 = load i32 (%struct.alps_fields*, i8*, %struct.psmouse*)*, i32 (%struct.alps_fields*, i8*, %struct.psmouse*)** %decode_fields7, align 8, !dbg !7612
  %21 = load %struct.alps_fields*, %struct.alps_fields** %f, align 8, !dbg !7613
  %22 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !7614
  %multi_data = getelementptr inbounds %struct.alps_data, %struct.alps_data* %22, i32 0, i32 27, !dbg !7615
  %arraydecay8 = getelementptr inbounds [6 x i8], [6 x i8]* %multi_data, i64 0, i64 0, !dbg !7614
  %23 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !7616
  %call9 = call i32 %20(%struct.alps_fields* %21, i8* %arraydecay8, %struct.psmouse* %23) #10, !dbg !7611
  %24 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !7617
  %25 = load %struct.alps_fields*, %struct.alps_fields** %f, align 8, !dbg !7619
  %call10 = call i32 @alps_process_bitmap(%struct.alps_data* %24, %struct.alps_fields* %25) #10, !dbg !7620
  %cmp = icmp eq i32 %call10, 0, !dbg !7621
  br i1 %cmp, label %if.then11, label %if.end, !dbg !7622

if.then11:                                        ; preds = %if.then5
  store i32 0, i32* %fingers, align 4, !dbg !7623
  br label %if.end, !dbg !7624

if.end:                                           ; preds = %if.then11, %if.then5
  br label %if.end13, !dbg !7625

if.else:                                          ; preds = %if.then
  %26 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !7626
  %multi_packet12 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %26, i32 0, i32 25, !dbg !7628
  store i32 0, i32* %multi_packet12, align 4, !dbg !7629
  br label %if.end13

if.end13:                                         ; preds = %if.else, %if.end
  br label %if.end14, !dbg !7630

if.end14:                                         ; preds = %if.end13, %entry
  %27 = load %struct.alps_fields*, %struct.alps_fields** %f, align 8, !dbg !7631
  %is_mp15 = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %27, i32 0, i32 6, !dbg !7633
  %bf.load16 = load i8, i8* %is_mp15, align 4, !dbg !7633
  %bf.lshr17 = lshr i8 %bf.load16, 1, !dbg !7633
  %bf.clear18 = and i8 %bf.lshr17, 1, !dbg !7633
  %bf.cast19 = zext i8 %bf.clear18 to i32, !dbg !7633
  %tobool20 = icmp ne i32 %bf.cast19, 0, !dbg !7631
  br i1 %tobool20, label %if.then21, label %if.end22, !dbg !7634

if.then21:                                        ; preds = %if.end14
  br label %if.end61, !dbg !7635

if.end22:                                         ; preds = %if.end14
  %28 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !7636
  %multi_packet23 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %28, i32 0, i32 25, !dbg !7638
  %29 = load i32, i32* %multi_packet23, align 4, !dbg !7638
  %tobool24 = icmp ne i32 %29, 0, !dbg !7636
  br i1 %tobool24, label %if.end33, label %land.lhs.true, !dbg !7639

land.lhs.true:                                    ; preds = %if.end22
  %30 = load %struct.alps_fields*, %struct.alps_fields** %f, align 8, !dbg !7640
  %first_mp = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %30, i32 0, i32 6, !dbg !7641
  %bf.load25 = load i8, i8* %first_mp, align 4, !dbg !7641
  %bf.clear26 = and i8 %bf.load25, 1, !dbg !7641
  %bf.cast27 = zext i8 %bf.clear26 to i32, !dbg !7641
  %tobool28 = icmp ne i32 %bf.cast27, 0, !dbg !7640
  br i1 %tobool28, label %if.then29, label %if.end33, !dbg !7642

if.then29:                                        ; preds = %land.lhs.true
  %31 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !7643
  %multi_packet30 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %31, i32 0, i32 25, !dbg !7645
  store i32 1, i32* %multi_packet30, align 4, !dbg !7646
  %32 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !7647
  %multi_data31 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %32, i32 0, i32 27, !dbg !7648
  %arraydecay32 = getelementptr inbounds [6 x i8], [6 x i8]* %multi_data31, i64 0, i64 0, !dbg !7649
  %33 = load i8*, i8** %packet, align 8, !dbg !7650
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %arraydecay32, i8* align 1 %33, i64 6, i1 false), !dbg !7649
  br label %if.end61, !dbg !7651

if.end33:                                         ; preds = %land.lhs.true, %if.end22
  %34 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !7652
  %multi_packet34 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %34, i32 0, i32 25, !dbg !7653
  store i32 0, i32* %multi_packet34, align 4, !dbg !7654
  %35 = load %struct.alps_fields*, %struct.alps_fields** %f, align 8, !dbg !7655
  %st = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %35, i32 0, i32 4, !dbg !7657
  %x = getelementptr inbounds %struct.input_mt_pos, %struct.input_mt_pos* %st, i32 0, i32 0, !dbg !7658
  %36 = load i16, i16* %x, align 4, !dbg !7658
  %conv = sext i16 %36 to i32, !dbg !7655
  %tobool35 = icmp ne i32 %conv, 0, !dbg !7655
  br i1 %tobool35, label %land.lhs.true36, label %if.end43, !dbg !7659

land.lhs.true36:                                  ; preds = %if.end33
  %37 = load %struct.alps_fields*, %struct.alps_fields** %f, align 8, !dbg !7660
  %st37 = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %37, i32 0, i32 4, !dbg !7661
  %y = getelementptr inbounds %struct.input_mt_pos, %struct.input_mt_pos* %st37, i32 0, i32 1, !dbg !7662
  %38 = load i16, i16* %y, align 2, !dbg !7662
  %conv38 = sext i16 %38 to i32, !dbg !7660
  %tobool39 = icmp ne i32 %conv38, 0, !dbg !7660
  br i1 %tobool39, label %land.lhs.true40, label %if.end43, !dbg !7663

land.lhs.true40:                                  ; preds = %land.lhs.true36
  %39 = load %struct.alps_fields*, %struct.alps_fields** %f, align 8, !dbg !7664
  %pressure = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %39, i32 0, i32 3, !dbg !7665
  %40 = load i32, i32* %pressure, align 4, !dbg !7665
  %tobool41 = icmp ne i32 %40, 0, !dbg !7664
  br i1 %tobool41, label %if.end43, label %if.then42, !dbg !7666

if.then42:                                        ; preds = %land.lhs.true40
  br label %if.end61, !dbg !7667

if.end43:                                         ; preds = %land.lhs.true40, %land.lhs.true36, %if.end33
  %41 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !7668
  %42 = load i32, i32* %fingers, align 4, !dbg !7669
  call void @alps_report_semi_mt_data(%struct.psmouse* %41, i32 %42) #10, !dbg !7670
  %43 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !7671
  %flags = getelementptr inbounds %struct.alps_data, %struct.alps_data* %43, i32 0, i32 13, !dbg !7673
  %44 = load i32, i32* %flags, align 8, !dbg !7673
  %and = and i32 %44, 2, !dbg !7674
  %tobool44 = icmp ne i32 %and, 0, !dbg !7674
  br i1 %tobool44, label %land.lhs.true45, label %if.end61, !dbg !7675

land.lhs.true45:                                  ; preds = %if.end43
  %45 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !7676
  %quirks = getelementptr inbounds %struct.alps_data, %struct.alps_data* %45, i32 0, i32 29, !dbg !7677
  %46 = load i8, i8* %quirks, align 4, !dbg !7677
  %conv46 = zext i8 %46 to i32, !dbg !7676
  %and47 = and i32 %conv46, 1, !dbg !7678
  %tobool48 = icmp ne i32 %and47, 0, !dbg !7678
  br i1 %tobool48, label %if.end61, label %if.then49, !dbg !7679

if.then49:                                        ; preds = %land.lhs.true45
  %47 = load %struct.input_dev*, %struct.input_dev** %dev2, align 8, !dbg !7680
  %48 = load %struct.alps_fields*, %struct.alps_fields** %f, align 8, !dbg !7682
  %ts_left = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %48, i32 0, i32 6, !dbg !7683
  %bf.load50 = load i8, i8* %ts_left, align 4, !dbg !7683
  %bf.lshr51 = lshr i8 %bf.load50, 5, !dbg !7683
  %bf.clear52 = and i8 %bf.lshr51, 1, !dbg !7683
  %bf.cast53 = zext i8 %bf.clear52 to i32, !dbg !7683
  call void @input_report_key(%struct.input_dev* %47, i32 272, i32 %bf.cast53) #10, !dbg !7684
  %49 = load %struct.input_dev*, %struct.input_dev** %dev2, align 8, !dbg !7685
  %50 = load %struct.alps_fields*, %struct.alps_fields** %f, align 8, !dbg !7686
  %ts_right = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %50, i32 0, i32 6, !dbg !7687
  %bf.load54 = load i8, i8* %ts_right, align 4, !dbg !7687
  %bf.lshr55 = lshr i8 %bf.load54, 6, !dbg !7687
  %bf.clear56 = and i8 %bf.lshr55, 1, !dbg !7687
  %bf.cast57 = zext i8 %bf.clear56 to i32, !dbg !7687
  call void @input_report_key(%struct.input_dev* %49, i32 273, i32 %bf.cast57) #10, !dbg !7688
  %51 = load %struct.input_dev*, %struct.input_dev** %dev2, align 8, !dbg !7689
  %52 = load %struct.alps_fields*, %struct.alps_fields** %f, align 8, !dbg !7690
  %ts_middle = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %52, i32 0, i32 6, !dbg !7691
  %bf.load58 = load i8, i8* %ts_middle, align 4, !dbg !7691
  %bf.lshr59 = lshr i8 %bf.load58, 7, !dbg !7691
  %bf.cast60 = zext i8 %bf.lshr59 to i32, !dbg !7691
  call void @input_report_key(%struct.input_dev* %51, i32 274, i32 %bf.cast60) #10, !dbg !7692
  %53 = load %struct.input_dev*, %struct.input_dev** %dev2, align 8, !dbg !7693
  call void @input_sync(%struct.input_dev* %53) #10, !dbg !7694
  br label %if.end61, !dbg !7695

if.end61:                                         ; preds = %if.then21, %if.then29, %if.then42, %if.then49, %land.lhs.true45, %if.end43
  ret void, !dbg !7696
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @alps_decode_dolphin(%struct.alps_fields* %f, i8* %p, %struct.psmouse* %psmouse) #0 !dbg !7697 {
entry:
  %f.addr = alloca %struct.alps_fields*, align 8
  %p.addr = alloca i8*, align 8
  %psmouse.addr = alloca %struct.psmouse*, align 8
  %palm_data = alloca i64, align 8
  %priv = alloca %struct.alps_data*, align 8
  store %struct.alps_fields* %f, %struct.alps_fields** %f.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.alps_fields** %f.addr, metadata !7698, metadata !DIExpression()), !dbg !7699
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !7700, metadata !DIExpression()), !dbg !7701
  store %struct.psmouse* %psmouse, %struct.psmouse** %psmouse.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.psmouse** %psmouse.addr, metadata !7702, metadata !DIExpression()), !dbg !7703
  call void @llvm.dbg.declare(metadata i64* %palm_data, metadata !7704, metadata !DIExpression()), !dbg !7705
  store i64 0, i64* %palm_data, align 8, !dbg !7705
  call void @llvm.dbg.declare(metadata %struct.alps_data** %priv, metadata !7706, metadata !DIExpression()), !dbg !7707
  %0 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !7708
  %private = getelementptr inbounds %struct.psmouse, %struct.psmouse* %0, i32 0, i32 0, !dbg !7709
  %1 = load i8*, i8** %private, align 8, !dbg !7709
  %2 = bitcast i8* %1 to %struct.alps_data*, !dbg !7708
  store %struct.alps_data* %2, %struct.alps_data** %priv, align 8, !dbg !7707
  %3 = load i8*, i8** %p.addr, align 8, !dbg !7710
  %arrayidx = getelementptr i8, i8* %3, i64 0, !dbg !7710
  %4 = load i8, i8* %arrayidx, align 1, !dbg !7710
  %conv = zext i8 %4 to i32, !dbg !7710
  %and = and i32 %conv, 2, !dbg !7711
  %tobool = icmp ne i32 %and, 0, !dbg !7712
  %lnot = xor i1 %tobool, true, !dbg !7712
  %lnot1 = xor i1 %lnot, true, !dbg !7713
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !7713
  %5 = load %struct.alps_fields*, %struct.alps_fields** %f.addr, align 8, !dbg !7714
  %first_mp = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %5, i32 0, i32 6, !dbg !7715
  %6 = trunc i32 %lnot.ext to i8, !dbg !7716
  %bf.load = load i8, i8* %first_mp, align 4, !dbg !7716
  %bf.value = and i8 %6, 1, !dbg !7716
  %bf.clear = and i8 %bf.load, -2, !dbg !7716
  %bf.set = or i8 %bf.clear, %bf.value, !dbg !7716
  store i8 %bf.set, i8* %first_mp, align 4, !dbg !7716
  %bf.result.cast = zext i8 %bf.value to i32, !dbg !7716
  %7 = load i8*, i8** %p.addr, align 8, !dbg !7717
  %arrayidx2 = getelementptr i8, i8* %7, i64 0, !dbg !7717
  %8 = load i8, i8* %arrayidx2, align 1, !dbg !7717
  %conv3 = zext i8 %8 to i32, !dbg !7717
  %and4 = and i32 %conv3, 32, !dbg !7718
  %tobool5 = icmp ne i32 %and4, 0, !dbg !7719
  %lnot6 = xor i1 %tobool5, true, !dbg !7719
  %lnot8 = xor i1 %lnot6, true, !dbg !7720
  %lnot.ext9 = zext i1 %lnot8 to i32, !dbg !7720
  %9 = load %struct.alps_fields*, %struct.alps_fields** %f.addr, align 8, !dbg !7721
  %is_mp = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %9, i32 0, i32 6, !dbg !7722
  %10 = trunc i32 %lnot.ext9 to i8, !dbg !7723
  %bf.load10 = load i8, i8* %is_mp, align 4, !dbg !7723
  %bf.value11 = and i8 %10, 1, !dbg !7723
  %bf.shl = shl i8 %bf.value11, 1, !dbg !7723
  %bf.clear12 = and i8 %bf.load10, -3, !dbg !7723
  %bf.set13 = or i8 %bf.clear12, %bf.shl, !dbg !7723
  store i8 %bf.set13, i8* %is_mp, align 4, !dbg !7723
  %bf.result.cast14 = zext i8 %bf.value11 to i32, !dbg !7723
  %11 = load %struct.alps_fields*, %struct.alps_fields** %f.addr, align 8, !dbg !7724
  %is_mp15 = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %11, i32 0, i32 6, !dbg !7726
  %bf.load16 = load i8, i8* %is_mp15, align 4, !dbg !7726
  %bf.lshr = lshr i8 %bf.load16, 1, !dbg !7726
  %bf.clear17 = and i8 %bf.lshr, 1, !dbg !7726
  %bf.cast = zext i8 %bf.clear17 to i32, !dbg !7726
  %tobool18 = icmp ne i32 %bf.cast, 0, !dbg !7724
  br i1 %tobool18, label %if.else, label %if.then, !dbg !7727

if.then:                                          ; preds = %entry
  %12 = load i8*, i8** %p.addr, align 8, !dbg !7728
  %arrayidx19 = getelementptr i8, i8* %12, i64 1, !dbg !7728
  %13 = load i8, i8* %arrayidx19, align 1, !dbg !7728
  %conv20 = zext i8 %13 to i32, !dbg !7728
  %and21 = and i32 %conv20, 127, !dbg !7730
  %14 = load i8*, i8** %p.addr, align 8, !dbg !7731
  %arrayidx22 = getelementptr i8, i8* %14, i64 4, !dbg !7731
  %15 = load i8, i8* %arrayidx22, align 1, !dbg !7731
  %conv23 = zext i8 %15 to i32, !dbg !7731
  %and24 = and i32 %conv23, 15, !dbg !7732
  %shl = shl i32 %and24, 7, !dbg !7733
  %or = or i32 %and21, %shl, !dbg !7734
  %conv25 = trunc i32 %or to i16, !dbg !7735
  %16 = load %struct.alps_fields*, %struct.alps_fields** %f.addr, align 8, !dbg !7736
  %st = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %16, i32 0, i32 4, !dbg !7737
  %x = getelementptr inbounds %struct.input_mt_pos, %struct.input_mt_pos* %st, i32 0, i32 0, !dbg !7738
  store i16 %conv25, i16* %x, align 4, !dbg !7739
  %17 = load i8*, i8** %p.addr, align 8, !dbg !7740
  %arrayidx26 = getelementptr i8, i8* %17, i64 2, !dbg !7740
  %18 = load i8, i8* %arrayidx26, align 1, !dbg !7740
  %conv27 = zext i8 %18 to i32, !dbg !7740
  %and28 = and i32 %conv27, 127, !dbg !7741
  %19 = load i8*, i8** %p.addr, align 8, !dbg !7742
  %arrayidx29 = getelementptr i8, i8* %19, i64 4, !dbg !7742
  %20 = load i8, i8* %arrayidx29, align 1, !dbg !7742
  %conv30 = zext i8 %20 to i32, !dbg !7742
  %and31 = and i32 %conv30, 240, !dbg !7743
  %shl32 = shl i32 %and31, 3, !dbg !7744
  %or33 = or i32 %and28, %shl32, !dbg !7745
  %conv34 = trunc i32 %or33 to i16, !dbg !7746
  %21 = load %struct.alps_fields*, %struct.alps_fields** %f.addr, align 8, !dbg !7747
  %st35 = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %21, i32 0, i32 4, !dbg !7748
  %y = getelementptr inbounds %struct.input_mt_pos, %struct.input_mt_pos* %st35, i32 0, i32 1, !dbg !7749
  store i16 %conv34, i16* %y, align 2, !dbg !7750
  %22 = load i8*, i8** %p.addr, align 8, !dbg !7751
  %arrayidx36 = getelementptr i8, i8* %22, i64 0, !dbg !7751
  %23 = load i8, i8* %arrayidx36, align 1, !dbg !7751
  %conv37 = zext i8 %23 to i32, !dbg !7751
  %and38 = and i32 %conv37, 4, !dbg !7752
  %tobool39 = icmp ne i32 %and38, 0, !dbg !7752
  br i1 %tobool39, label %cond.true, label %cond.false, !dbg !7753

cond.true:                                        ; preds = %if.then
  br label %cond.end, !dbg !7753

cond.false:                                       ; preds = %if.then
  %24 = load i8*, i8** %p.addr, align 8, !dbg !7754
  %arrayidx40 = getelementptr i8, i8* %24, i64 5, !dbg !7754
  %25 = load i8, i8* %arrayidx40, align 1, !dbg !7754
  %conv41 = zext i8 %25 to i32, !dbg !7754
  %and42 = and i32 %conv41, 127, !dbg !7755
  br label %cond.end, !dbg !7753

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %and42, %cond.false ], !dbg !7753
  %26 = load %struct.alps_fields*, %struct.alps_fields** %f.addr, align 8, !dbg !7756
  %pressure = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %26, i32 0, i32 3, !dbg !7757
  store i32 %cond, i32* %pressure, align 4, !dbg !7758
  %27 = load %struct.alps_fields*, %struct.alps_fields** %f.addr, align 8, !dbg !7759
  %28 = load i8*, i8** %p.addr, align 8, !dbg !7760
  call void @alps_decode_buttons_v3(%struct.alps_fields* %27, i8* %28) #10, !dbg !7761
  br label %if.end, !dbg !7762

if.else:                                          ; preds = %entry
  %29 = load i8*, i8** %p.addr, align 8, !dbg !7763
  %arrayidx43 = getelementptr i8, i8* %29, i64 0, !dbg !7763
  %30 = load i8, i8* %arrayidx43, align 1, !dbg !7763
  %conv44 = zext i8 %30 to i32, !dbg !7763
  %and45 = and i32 %conv44, 6, !dbg !7765
  %shr = ashr i32 %and45, 1, !dbg !7766
  %31 = load i8*, i8** %p.addr, align 8, !dbg !7767
  %arrayidx46 = getelementptr i8, i8* %31, i64 0, !dbg !7767
  %32 = load i8, i8* %arrayidx46, align 1, !dbg !7767
  %conv47 = zext i8 %32 to i32, !dbg !7767
  %and48 = and i32 %conv47, 16, !dbg !7768
  %shr49 = ashr i32 %and48, 2, !dbg !7769
  %or50 = or i32 %shr, %shr49, !dbg !7770
  %33 = load %struct.alps_fields*, %struct.alps_fields** %f.addr, align 8, !dbg !7771
  %fingers = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %33, i32 0, i32 2, !dbg !7772
  store i32 %or50, i32* %fingers, align 4, !dbg !7773
  %34 = load i8*, i8** %p.addr, align 8, !dbg !7774
  %arrayidx51 = getelementptr i8, i8* %34, i64 1, !dbg !7774
  %35 = load i8, i8* %arrayidx51, align 1, !dbg !7774
  %conv52 = zext i8 %35 to i32, !dbg !7774
  %and53 = and i32 %conv52, 127, !dbg !7775
  %36 = load i8*, i8** %p.addr, align 8, !dbg !7776
  %arrayidx54 = getelementptr i8, i8* %36, i64 2, !dbg !7776
  %37 = load i8, i8* %arrayidx54, align 1, !dbg !7776
  %conv55 = zext i8 %37 to i32, !dbg !7776
  %and56 = and i32 %conv55, 127, !dbg !7777
  %shl57 = shl i32 %and56, 7, !dbg !7778
  %or58 = or i32 %and53, %shl57, !dbg !7779
  %38 = load i8*, i8** %p.addr, align 8, !dbg !7780
  %arrayidx59 = getelementptr i8, i8* %38, i64 4, !dbg !7780
  %39 = load i8, i8* %arrayidx59, align 1, !dbg !7780
  %conv60 = zext i8 %39 to i32, !dbg !7780
  %and61 = and i32 %conv60, 127, !dbg !7781
  %shl62 = shl i32 %and61, 14, !dbg !7782
  %or63 = or i32 %or58, %shl62, !dbg !7783
  %40 = load i8*, i8** %p.addr, align 8, !dbg !7784
  %arrayidx64 = getelementptr i8, i8* %40, i64 5, !dbg !7784
  %41 = load i8, i8* %arrayidx64, align 1, !dbg !7784
  %conv65 = zext i8 %41 to i32, !dbg !7784
  %and66 = and i32 %conv65, 127, !dbg !7785
  %shl67 = shl i32 %and66, 21, !dbg !7786
  %or68 = or i32 %or63, %shl67, !dbg !7787
  %42 = load i8*, i8** %p.addr, align 8, !dbg !7788
  %arrayidx69 = getelementptr i8, i8* %42, i64 3, !dbg !7788
  %43 = load i8, i8* %arrayidx69, align 1, !dbg !7788
  %conv70 = zext i8 %43 to i32, !dbg !7788
  %and71 = and i32 %conv70, 7, !dbg !7789
  %shl72 = shl i32 %and71, 28, !dbg !7790
  %or73 = or i32 %or68, %shl72, !dbg !7791
  %conv74 = sext i32 %or73 to i64, !dbg !7792
  %44 = load i8*, i8** %p.addr, align 8, !dbg !7793
  %arrayidx75 = getelementptr i8, i8* %44, i64 3, !dbg !7793
  %45 = load i8, i8* %arrayidx75, align 1, !dbg !7793
  %conv76 = zext i8 %45 to i64, !dbg !7794
  %and77 = and i64 %conv76, 112, !dbg !7795
  %shl78 = shl i64 %and77, 27, !dbg !7796
  %or79 = or i64 %conv74, %shl78, !dbg !7797
  %46 = load i8*, i8** %p.addr, align 8, !dbg !7798
  %arrayidx80 = getelementptr i8, i8* %46, i64 0, !dbg !7798
  %47 = load i8, i8* %arrayidx80, align 1, !dbg !7798
  %conv81 = zext i8 %47 to i64, !dbg !7799
  %and82 = and i64 %conv81, 1, !dbg !7800
  %shl83 = shl i64 %and82, 34, !dbg !7801
  %or84 = or i64 %or79, %shl83, !dbg !7802
  store i64 %or84, i64* %palm_data, align 8, !dbg !7803
  %48 = load i64, i64* %palm_data, align 8, !dbg !7804
  %49 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !7805
  %y_bits = getelementptr inbounds %struct.alps_data, %struct.alps_data* %49, i32 0, i32 17, !dbg !7805
  %50 = load i32, i32* %y_bits, align 8, !dbg !7805
  %sh_prom = zext i32 %50 to i64, !dbg !7805
  %shl85 = shl i64 1, %sh_prom, !dbg !7805
  %sub = sub i64 %shl85, 1, !dbg !7806
  %and86 = and i64 %48, %sub, !dbg !7807
  %conv87 = trunc i64 %and86 to i32, !dbg !7804
  %51 = load %struct.alps_fields*, %struct.alps_fields** %f.addr, align 8, !dbg !7808
  %y_map = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %51, i32 0, i32 1, !dbg !7809
  store i32 %conv87, i32* %y_map, align 4, !dbg !7810
  %52 = load i64, i64* %palm_data, align 8, !dbg !7811
  %53 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !7812
  %y_bits88 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %53, i32 0, i32 17, !dbg !7813
  %54 = load i32, i32* %y_bits88, align 8, !dbg !7813
  %sh_prom89 = zext i32 %54 to i64, !dbg !7814
  %shr90 = lshr i64 %52, %sh_prom89, !dbg !7814
  %55 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !7815
  %x_bits = getelementptr inbounds %struct.alps_data, %struct.alps_data* %55, i32 0, i32 16, !dbg !7815
  %56 = load i32, i32* %x_bits, align 4, !dbg !7815
  %sh_prom91 = zext i32 %56 to i64, !dbg !7815
  %shl92 = shl i64 1, %sh_prom91, !dbg !7815
  %sub93 = sub i64 %shl92, 1, !dbg !7816
  %and94 = and i64 %shr90, %sub93, !dbg !7817
  %conv95 = trunc i64 %and94 to i32, !dbg !7818
  %57 = load %struct.alps_fields*, %struct.alps_fields** %f.addr, align 8, !dbg !7819
  %x_map = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %57, i32 0, i32 0, !dbg !7820
  store i32 %conv95, i32* %x_map, align 4, !dbg !7821
  br label %if.end

if.end:                                           ; preds = %if.else, %cond.end
  ret i32 0, !dbg !7822
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @alps_dolphin_get_device_area(%struct.psmouse* %psmouse, %struct.alps_data* %priv) #0 !dbg !7823 {
entry:
  %retval = alloca i32, align 4
  %psmouse.addr = alloca %struct.psmouse*, align 8
  %priv.addr = alloca %struct.alps_data*, align 8
  %ps2dev = alloca %struct.ps2dev*, align 8
  %param = alloca [4 x i8], align 1
  %num_x_electrode = alloca i32, align 4
  %num_y_electrode = alloca i32, align 4
  store %struct.psmouse* %psmouse, %struct.psmouse** %psmouse.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.psmouse** %psmouse.addr, metadata !7824, metadata !DIExpression()), !dbg !7825
  store %struct.alps_data* %priv, %struct.alps_data** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.alps_data** %priv.addr, metadata !7826, metadata !DIExpression()), !dbg !7827
  call void @llvm.dbg.declare(metadata %struct.ps2dev** %ps2dev, metadata !7828, metadata !DIExpression()), !dbg !7829
  %0 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !7830
  %ps2dev1 = getelementptr inbounds %struct.psmouse, %struct.psmouse* %0, i32 0, i32 2, !dbg !7831
  store %struct.ps2dev* %ps2dev1, %struct.ps2dev** %ps2dev, align 8, !dbg !7829
  call void @llvm.dbg.declare(metadata [4 x i8]* %param, metadata !7832, metadata !DIExpression()), !dbg !7833
  %1 = bitcast [4 x i8]* %param to i8*, !dbg !7833
  call void @llvm.memset.p0i8.i64(i8* align 1 %1, i8 0, i64 4, i1 false), !dbg !7833
  call void @llvm.dbg.declare(metadata i32* %num_x_electrode, metadata !7834, metadata !DIExpression()), !dbg !7835
  call void @llvm.dbg.declare(metadata i32* %num_y_electrode, metadata !7836, metadata !DIExpression()), !dbg !7837
  %2 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !7838
  %call = call i32 @alps_enter_command_mode(%struct.psmouse* %2) #10, !dbg !7840
  %tobool = icmp ne i32 %call, 0, !dbg !7840
  br i1 %tobool, label %if.then, label %if.end, !dbg !7841

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !7842
  br label %return, !dbg !7842

if.end:                                           ; preds = %entry
  %arrayidx = getelementptr [4 x i8], [4 x i8]* %param, i64 0, i64 0, !dbg !7843
  store i8 10, i8* %arrayidx, align 1, !dbg !7844
  %3 = load %struct.ps2dev*, %struct.ps2dev** %ps2dev, align 8, !dbg !7845
  %call2 = call i32 @ps2_command(%struct.ps2dev* %3, i8* null, i32 236) #10, !dbg !7847
  %tobool3 = icmp ne i32 %call2, 0, !dbg !7847
  br i1 %tobool3, label %if.then17, label %lor.lhs.false, !dbg !7848

lor.lhs.false:                                    ; preds = %if.end
  %4 = load %struct.ps2dev*, %struct.ps2dev** %ps2dev, align 8, !dbg !7849
  %call4 = call i32 @ps2_command(%struct.ps2dev* %4, i8* null, i32 240) #10, !dbg !7850
  %tobool5 = icmp ne i32 %call4, 0, !dbg !7850
  br i1 %tobool5, label %if.then17, label %lor.lhs.false6, !dbg !7851

lor.lhs.false6:                                   ; preds = %lor.lhs.false
  %5 = load %struct.ps2dev*, %struct.ps2dev** %ps2dev, align 8, !dbg !7852
  %call7 = call i32 @ps2_command(%struct.ps2dev* %5, i8* null, i32 240) #10, !dbg !7853
  %tobool8 = icmp ne i32 %call7, 0, !dbg !7853
  br i1 %tobool8, label %if.then17, label %lor.lhs.false9, !dbg !7854

lor.lhs.false9:                                   ; preds = %lor.lhs.false6
  %6 = load %struct.ps2dev*, %struct.ps2dev** %ps2dev, align 8, !dbg !7855
  %arrayidx10 = getelementptr [4 x i8], [4 x i8]* %param, i64 0, i64 0, !dbg !7856
  %call11 = call i32 @ps2_command(%struct.ps2dev* %6, i8* %arrayidx10, i32 4339) #10, !dbg !7857
  %tobool12 = icmp ne i32 %call11, 0, !dbg !7857
  br i1 %tobool12, label %if.then17, label %lor.lhs.false13, !dbg !7858

lor.lhs.false13:                                  ; preds = %lor.lhs.false9
  %7 = load %struct.ps2dev*, %struct.ps2dev** %ps2dev, align 8, !dbg !7859
  %arrayidx14 = getelementptr [4 x i8], [4 x i8]* %param, i64 0, i64 0, !dbg !7860
  %call15 = call i32 @ps2_command(%struct.ps2dev* %7, i8* %arrayidx14, i32 4339) #10, !dbg !7861
  %tobool16 = icmp ne i32 %call15, 0, !dbg !7861
  br i1 %tobool16, label %if.then17, label %if.end18, !dbg !7862

if.then17:                                        ; preds = %lor.lhs.false13, %lor.lhs.false9, %lor.lhs.false6, %lor.lhs.false, %if.end
  store i32 -1, i32* %retval, align 4, !dbg !7863
  br label %return, !dbg !7863

if.end18:                                         ; preds = %lor.lhs.false13
  %8 = load %struct.ps2dev*, %struct.ps2dev** %ps2dev, align 8, !dbg !7864
  %arraydecay = getelementptr inbounds [4 x i8], [4 x i8]* %param, i64 0, i64 0, !dbg !7866
  %call19 = call i32 @ps2_command(%struct.ps2dev* %8, i8* %arraydecay, i32 1001) #10, !dbg !7867
  %tobool20 = icmp ne i32 %call19, 0, !dbg !7867
  br i1 %tobool20, label %if.then21, label %if.end22, !dbg !7868

if.then21:                                        ; preds = %if.end18
  store i32 -1, i32* %retval, align 4, !dbg !7869
  br label %return, !dbg !7869

if.end22:                                         ; preds = %if.end18
  %arrayidx23 = getelementptr [4 x i8], [4 x i8]* %param, i64 0, i64 2, !dbg !7870
  %9 = load i8, i8* %arrayidx23, align 1, !dbg !7870
  %conv = zext i8 %9 to i32, !dbg !7870
  %and = and i32 %conv, 15, !dbg !7871
  %add = add i32 8, %and, !dbg !7872
  store i32 %add, i32* %num_x_electrode, align 4, !dbg !7873
  %arrayidx24 = getelementptr [4 x i8], [4 x i8]* %param, i64 0, i64 2, !dbg !7874
  %10 = load i8, i8* %arrayidx24, align 1, !dbg !7874
  %conv25 = zext i8 %10 to i32, !dbg !7874
  %shr = ashr i32 %conv25, 4, !dbg !7875
  %and26 = and i32 %shr, 15, !dbg !7876
  %add27 = add i32 1, %and26, !dbg !7877
  store i32 %add27, i32* %num_y_electrode, align 4, !dbg !7878
  %11 = load i32, i32* %num_x_electrode, align 4, !dbg !7879
  %12 = load %struct.alps_data*, %struct.alps_data** %priv.addr, align 8, !dbg !7880
  %x_bits = getelementptr inbounds %struct.alps_data, %struct.alps_data* %12, i32 0, i32 16, !dbg !7881
  store i32 %11, i32* %x_bits, align 4, !dbg !7882
  %13 = load i32, i32* %num_y_electrode, align 4, !dbg !7883
  %14 = load %struct.alps_data*, %struct.alps_data** %priv.addr, align 8, !dbg !7884
  %y_bits = getelementptr inbounds %struct.alps_data, %struct.alps_data* %14, i32 0, i32 17, !dbg !7885
  store i32 %13, i32* %y_bits, align 8, !dbg !7886
  %15 = load i32, i32* %num_x_electrode, align 4, !dbg !7887
  %sub = sub i32 %15, 1, !dbg !7888
  %mul = mul i32 %sub, 64, !dbg !7889
  %16 = load %struct.alps_data*, %struct.alps_data** %priv.addr, align 8, !dbg !7890
  %x_max = getelementptr inbounds %struct.alps_data, %struct.alps_data* %16, i32 0, i32 14, !dbg !7891
  store i32 %mul, i32* %x_max, align 4, !dbg !7892
  %17 = load i32, i32* %num_y_electrode, align 4, !dbg !7893
  %sub28 = sub i32 %17, 1, !dbg !7894
  %mul29 = mul i32 %sub28, 64, !dbg !7895
  %18 = load %struct.alps_data*, %struct.alps_data** %priv.addr, align 8, !dbg !7896
  %y_max = getelementptr inbounds %struct.alps_data, %struct.alps_data* %18, i32 0, i32 15, !dbg !7897
  store i32 %mul29, i32* %y_max, align 8, !dbg !7898
  %19 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !7899
  %call30 = call i32 @alps_exit_command_mode(%struct.psmouse* %19) #10, !dbg !7901
  %tobool31 = icmp ne i32 %call30, 0, !dbg !7901
  br i1 %tobool31, label %if.then32, label %if.end33, !dbg !7902

if.then32:                                        ; preds = %if.end22
  store i32 -1, i32* %retval, align 4, !dbg !7903
  br label %return, !dbg !7903

if.end33:                                         ; preds = %if.end22
  store i32 0, i32* %retval, align 4, !dbg !7904
  br label %return, !dbg !7904

return:                                           ; preds = %if.end33, %if.then32, %if.then21, %if.then17, %if.then
  %20 = load i32, i32* %retval, align 4, !dbg !7905
  ret i32 %20, !dbg !7905
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @alps_hw_init_v6(%struct.psmouse* %psmouse) #0 !dbg !7906 {
entry:
  %retval = alloca i32, align 4
  %psmouse.addr = alloca %struct.psmouse*, align 8
  %ret = alloca i32, align 4
  store %struct.psmouse* %psmouse, %struct.psmouse** %psmouse.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.psmouse** %psmouse.addr, metadata !7907, metadata !DIExpression()), !dbg !7908
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7909, metadata !DIExpression()), !dbg !7910
  %0 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !7911
  %call = call i32 @alps_passthrough_mode_v2(%struct.psmouse* %0, i1 zeroext true) #10, !dbg !7913
  %tobool = icmp ne i32 %call, 0, !dbg !7913
  br i1 %tobool, label %if.then, label %if.end, !dbg !7914

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !7915
  br label %return, !dbg !7915

if.end:                                           ; preds = %entry
  %1 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !7916
  %call1 = call i32 @alps_trackstick_enter_extended_mode_v3_v6(%struct.psmouse* %1) #10, !dbg !7917
  store i32 %call1, i32* %ret, align 4, !dbg !7918
  %2 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !7919
  %call2 = call i32 @alps_passthrough_mode_v2(%struct.psmouse* %2, i1 zeroext false) #10, !dbg !7921
  %tobool3 = icmp ne i32 %call2, 0, !dbg !7921
  br i1 %tobool3, label %if.then4, label %if.end5, !dbg !7922

if.then4:                                         ; preds = %if.end
  store i32 -1, i32* %retval, align 4, !dbg !7923
  br label %return, !dbg !7923

if.end5:                                          ; preds = %if.end
  %3 = load i32, i32* %ret, align 4, !dbg !7924
  %tobool6 = icmp ne i32 %3, 0, !dbg !7924
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !7926

if.then7:                                         ; preds = %if.end5
  %4 = load i32, i32* %ret, align 4, !dbg !7927
  store i32 %4, i32* %retval, align 4, !dbg !7928
  br label %return, !dbg !7928

if.end8:                                          ; preds = %if.end5
  %5 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !7929
  %call9 = call i32 @alps_absolute_mode_v6(%struct.psmouse* %5) #10, !dbg !7931
  %tobool10 = icmp ne i32 %call9, 0, !dbg !7931
  br i1 %tobool10, label %if.then11, label %if.end12, !dbg !7932

if.then11:                                        ; preds = %if.end8
  %6 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !7933
  %ps2dev = getelementptr inbounds %struct.psmouse, %struct.psmouse* %6, i32 0, i32 2, !dbg !7933
  %serio = getelementptr inbounds %struct.ps2dev, %struct.ps2dev* %ps2dev, i32 0, i32 0, !dbg !7933
  %7 = load %struct.serio*, %struct.serio** %serio, align 8, !dbg !7933
  %dev = getelementptr inbounds %struct.serio, %struct.serio* %7, i32 0, i32 18, !dbg !7933
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15, i64 0, i64 0)) #11, !dbg !7933
  store i32 -1, i32* %retval, align 4, !dbg !7935
  br label %return, !dbg !7935

if.end12:                                         ; preds = %if.end8
  store i32 0, i32* %retval, align 4, !dbg !7936
  br label %return, !dbg !7936

return:                                           ; preds = %if.end12, %if.then11, %if.then7, %if.then4, %if.then
  %8 = load i32, i32* %retval, align 4, !dbg !7937
  ret i32 %8, !dbg !7937
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @alps_process_packet_v6(%struct.psmouse* %psmouse) #0 !dbg !7938 {
entry:
  %psmouse.addr = alloca %struct.psmouse*, align 8
  %priv = alloca %struct.alps_data*, align 8
  %packet = alloca i8*, align 8
  %dev = alloca %struct.input_dev*, align 8
  %dev23 = alloca %struct.input_dev*, align 8
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %z = alloca i32, align 4
  store %struct.psmouse* %psmouse, %struct.psmouse** %psmouse.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.psmouse** %psmouse.addr, metadata !7939, metadata !DIExpression()), !dbg !7940
  call void @llvm.dbg.declare(metadata %struct.alps_data** %priv, metadata !7941, metadata !DIExpression()), !dbg !7942
  %0 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !7943
  %private = getelementptr inbounds %struct.psmouse, %struct.psmouse* %0, i32 0, i32 0, !dbg !7944
  %1 = load i8*, i8** %private, align 8, !dbg !7944
  %2 = bitcast i8* %1 to %struct.alps_data*, !dbg !7943
  store %struct.alps_data* %2, %struct.alps_data** %priv, align 8, !dbg !7942
  call void @llvm.dbg.declare(metadata i8** %packet, metadata !7945, metadata !DIExpression()), !dbg !7946
  %3 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !7947
  %packet1 = getelementptr inbounds %struct.psmouse, %struct.psmouse* %3, i32 0, i32 7, !dbg !7948
  %arraydecay = getelementptr inbounds [8 x i8], [8 x i8]* %packet1, i64 0, i64 0, !dbg !7947
  store i8* %arraydecay, i8** %packet, align 8, !dbg !7946
  call void @llvm.dbg.declare(metadata %struct.input_dev** %dev, metadata !7949, metadata !DIExpression()), !dbg !7950
  %4 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !7951
  %dev2 = getelementptr inbounds %struct.psmouse, %struct.psmouse* %4, i32 0, i32 1, !dbg !7952
  %5 = load %struct.input_dev*, %struct.input_dev** %dev2, align 8, !dbg !7952
  store %struct.input_dev* %5, %struct.input_dev** %dev, align 8, !dbg !7950
  call void @llvm.dbg.declare(metadata %struct.input_dev** %dev23, metadata !7953, metadata !DIExpression()), !dbg !7954
  %6 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !7955
  %dev24 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %6, i32 0, i32 1, !dbg !7956
  %7 = load %struct.input_dev*, %struct.input_dev** %dev24, align 8, !dbg !7956
  store %struct.input_dev* %7, %struct.input_dev** %dev23, align 8, !dbg !7954
  call void @llvm.dbg.declare(metadata i32* %x, metadata !7957, metadata !DIExpression()), !dbg !7958
  call void @llvm.dbg.declare(metadata i32* %y, metadata !7959, metadata !DIExpression()), !dbg !7960
  call void @llvm.dbg.declare(metadata i32* %z, metadata !7961, metadata !DIExpression()), !dbg !7962
  %8 = load i8*, i8** %packet, align 8, !dbg !7963
  %arrayidx = getelementptr i8, i8* %8, i64 5, !dbg !7963
  %9 = load i8, i8* %arrayidx, align 1, !dbg !7963
  %conv = zext i8 %9 to i32, !dbg !7963
  %cmp = icmp eq i32 %conv, 127, !dbg !7965
  br i1 %cmp, label %if.then, label %if.end37, !dbg !7966

if.then:                                          ; preds = %entry
  %10 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !7967
  %flags = getelementptr inbounds %struct.alps_data, %struct.alps_data* %10, i32 0, i32 13, !dbg !7970
  %11 = load i32, i32* %flags, align 8, !dbg !7970
  %and = and i32 %11, 2, !dbg !7971
  %tobool = icmp ne i32 %and, 0, !dbg !7971
  br i1 %tobool, label %if.end, label %if.then6, !dbg !7972

if.then6:                                         ; preds = %if.then
  %12 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !7973
  %ps2dev = getelementptr inbounds %struct.psmouse, %struct.psmouse* %12, i32 0, i32 2, !dbg !7973
  %serio = getelementptr inbounds %struct.ps2dev, %struct.ps2dev* %ps2dev, i32 0, i32 0, !dbg !7973
  %13 = load %struct.serio*, %struct.serio** %serio, align 8, !dbg !7973
  %dev7 = getelementptr inbounds %struct.serio, %struct.serio* %13, i32 0, i32 18, !dbg !7973
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev7, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.24, i64 0, i64 0)) #11, !dbg !7973
  br label %return, !dbg !7975

if.end:                                           ; preds = %if.then
  %14 = load i8*, i8** %packet, align 8, !dbg !7976
  %arrayidx8 = getelementptr i8, i8* %14, i64 1, !dbg !7976
  %15 = load i8, i8* %arrayidx8, align 1, !dbg !7976
  %conv9 = zext i8 %15 to i32, !dbg !7976
  %16 = load i8*, i8** %packet, align 8, !dbg !7977
  %arrayidx10 = getelementptr i8, i8* %16, i64 3, !dbg !7977
  %17 = load i8, i8* %arrayidx10, align 1, !dbg !7977
  %conv11 = zext i8 %17 to i32, !dbg !7977
  %and12 = and i32 %conv11, 32, !dbg !7978
  %shl = shl i32 %and12, 2, !dbg !7979
  %or = or i32 %conv9, %shl, !dbg !7980
  store i32 %or, i32* %x, align 4, !dbg !7981
  %18 = load i8*, i8** %packet, align 8, !dbg !7982
  %arrayidx13 = getelementptr i8, i8* %18, i64 2, !dbg !7982
  %19 = load i8, i8* %arrayidx13, align 1, !dbg !7982
  %conv14 = zext i8 %19 to i32, !dbg !7982
  %20 = load i8*, i8** %packet, align 8, !dbg !7983
  %arrayidx15 = getelementptr i8, i8* %20, i64 3, !dbg !7983
  %21 = load i8, i8* %arrayidx15, align 1, !dbg !7983
  %conv16 = zext i8 %21 to i32, !dbg !7983
  %and17 = and i32 %conv16, 64, !dbg !7984
  %shl18 = shl i32 %and17, 1, !dbg !7985
  %or19 = or i32 %conv14, %shl18, !dbg !7986
  store i32 %or19, i32* %y, align 4, !dbg !7987
  %22 = load i8*, i8** %packet, align 8, !dbg !7988
  %arrayidx20 = getelementptr i8, i8* %22, i64 4, !dbg !7988
  %23 = load i8, i8* %arrayidx20, align 1, !dbg !7988
  %conv21 = zext i8 %23 to i32, !dbg !7988
  store i32 %conv21, i32* %z, align 4, !dbg !7989
  %24 = load i32, i32* %x, align 4, !dbg !7990
  %cmp22 = icmp eq i32 %24, 127, !dbg !7992
  br i1 %cmp22, label %land.lhs.true, label %if.end30, !dbg !7993

land.lhs.true:                                    ; preds = %if.end
  %25 = load i32, i32* %y, align 4, !dbg !7994
  %cmp24 = icmp eq i32 %25, 127, !dbg !7995
  br i1 %cmp24, label %land.lhs.true26, label %if.end30, !dbg !7996

land.lhs.true26:                                  ; preds = %land.lhs.true
  %26 = load i32, i32* %z, align 4, !dbg !7997
  %cmp27 = icmp eq i32 %26, 127, !dbg !7998
  br i1 %cmp27, label %if.then29, label %if.end30, !dbg !7999

if.then29:                                        ; preds = %land.lhs.true26
  store i32 0, i32* %z, align 4, !dbg !8000
  store i32 0, i32* %y, align 4, !dbg !8001
  store i32 0, i32* %x, align 4, !dbg !8002
  br label %if.end30, !dbg !8003

if.end30:                                         ; preds = %if.then29, %land.lhs.true26, %land.lhs.true, %if.end
  %27 = load %struct.input_dev*, %struct.input_dev** %dev23, align 8, !dbg !8004
  %28 = load i32, i32* %x, align 4, !dbg !8005
  %conv31 = trunc i32 %28 to i8, !dbg !8006
  %conv32 = sext i8 %conv31 to i32, !dbg !8006
  %div = sdiv i32 %conv32, 4, !dbg !8007
  call void @input_report_rel(%struct.input_dev* %27, i32 0, i32 %div) #10, !dbg !8008
  %29 = load %struct.input_dev*, %struct.input_dev** %dev23, align 8, !dbg !8009
  %30 = load i32, i32* %y, align 4, !dbg !8010
  %conv33 = trunc i32 %30 to i8, !dbg !8011
  %conv34 = sext i8 %conv33 to i32, !dbg !8011
  %div35 = sdiv i32 %conv34, 4, !dbg !8012
  %sub = sub i32 0, %div35, !dbg !8013
  call void @input_report_rel(%struct.input_dev* %29, i32 1, i32 %sub) #10, !dbg !8014
  %31 = load %struct.input_dev*, %struct.input_dev** %dev23, align 8, !dbg !8015
  %32 = load i8*, i8** %packet, align 8, !dbg !8016
  %arrayidx36 = getelementptr i8, i8* %32, i64 3, !dbg !8016
  %33 = load i8, i8* %arrayidx36, align 1, !dbg !8016
  call void @psmouse_report_standard_buttons(%struct.input_dev* %31, i8 zeroext %33) #10, !dbg !8017
  %34 = load %struct.input_dev*, %struct.input_dev** %dev23, align 8, !dbg !8018
  call void @input_sync(%struct.input_dev* %34) #10, !dbg !8019
  br label %return, !dbg !8020

if.end37:                                         ; preds = %entry
  %35 = load i8*, i8** %packet, align 8, !dbg !8021
  %arrayidx38 = getelementptr i8, i8* %35, i64 1, !dbg !8021
  %36 = load i8, i8* %arrayidx38, align 1, !dbg !8021
  %conv39 = zext i8 %36 to i32, !dbg !8021
  %37 = load i8*, i8** %packet, align 8, !dbg !8022
  %arrayidx40 = getelementptr i8, i8* %37, i64 3, !dbg !8022
  %38 = load i8, i8* %arrayidx40, align 1, !dbg !8022
  %conv41 = zext i8 %38 to i32, !dbg !8022
  %and42 = and i32 %conv41, 120, !dbg !8023
  %shl43 = shl i32 %and42, 4, !dbg !8024
  %or44 = or i32 %conv39, %shl43, !dbg !8025
  store i32 %or44, i32* %x, align 4, !dbg !8026
  %39 = load i8*, i8** %packet, align 8, !dbg !8027
  %arrayidx45 = getelementptr i8, i8* %39, i64 2, !dbg !8027
  %40 = load i8, i8* %arrayidx45, align 1, !dbg !8027
  %conv46 = zext i8 %40 to i32, !dbg !8027
  %41 = load i8*, i8** %packet, align 8, !dbg !8028
  %arrayidx47 = getelementptr i8, i8* %41, i64 4, !dbg !8028
  %42 = load i8, i8* %arrayidx47, align 1, !dbg !8028
  %conv48 = zext i8 %42 to i32, !dbg !8028
  %and49 = and i32 %conv48, 120, !dbg !8029
  %shl50 = shl i32 %and49, 4, !dbg !8030
  %or51 = or i32 %conv46, %shl50, !dbg !8031
  store i32 %or51, i32* %y, align 4, !dbg !8032
  %43 = load i8*, i8** %packet, align 8, !dbg !8033
  %arrayidx52 = getelementptr i8, i8* %43, i64 5, !dbg !8033
  %44 = load i8, i8* %arrayidx52, align 1, !dbg !8033
  %conv53 = zext i8 %44 to i32, !dbg !8033
  store i32 %conv53, i32* %z, align 4, !dbg !8034
  %45 = load i32, i32* %z, align 4, !dbg !8035
  %cmp54 = icmp sgt i32 %45, 30, !dbg !8037
  br i1 %cmp54, label %if.then56, label %if.end57, !dbg !8038

if.then56:                                        ; preds = %if.end37
  %46 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !8039
  call void @input_report_key(%struct.input_dev* %46, i32 330, i32 1) #10, !dbg !8040
  br label %if.end57, !dbg !8040

if.end57:                                         ; preds = %if.then56, %if.end37
  %47 = load i32, i32* %z, align 4, !dbg !8041
  %cmp58 = icmp slt i32 %47, 25, !dbg !8043
  br i1 %cmp58, label %if.then60, label %if.end61, !dbg !8044

if.then60:                                        ; preds = %if.end57
  %48 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !8045
  call void @input_report_key(%struct.input_dev* %48, i32 330, i32 0) #10, !dbg !8046
  br label %if.end61, !dbg !8046

if.end61:                                         ; preds = %if.then60, %if.end57
  %49 = load i32, i32* %z, align 4, !dbg !8047
  %cmp62 = icmp sgt i32 %49, 0, !dbg !8049
  br i1 %cmp62, label %if.then64, label %if.end65, !dbg !8050

if.then64:                                        ; preds = %if.end61
  %50 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !8051
  %51 = load i32, i32* %x, align 4, !dbg !8053
  call void @input_report_abs(%struct.input_dev* %50, i32 0, i32 %51) #10, !dbg !8054
  %52 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !8055
  %53 = load i32, i32* %y, align 4, !dbg !8056
  call void @input_report_abs(%struct.input_dev* %52, i32 1, i32 %53) #10, !dbg !8057
  br label %if.end65, !dbg !8058

if.end65:                                         ; preds = %if.then64, %if.end61
  %54 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !8059
  %55 = load i32, i32* %z, align 4, !dbg !8060
  call void @input_report_abs(%struct.input_dev* %54, i32 24, i32 %55) #10, !dbg !8061
  %56 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !8062
  %57 = load i32, i32* %z, align 4, !dbg !8063
  %cmp66 = icmp sgt i32 %57, 0, !dbg !8064
  %conv67 = zext i1 %cmp66 to i32, !dbg !8064
  call void @input_report_key(%struct.input_dev* %56, i32 325, i32 %conv67) #10, !dbg !8065
  %58 = load i8*, i8** %packet, align 8, !dbg !8066
  %arrayidx68 = getelementptr i8, i8* %58, i64 3, !dbg !8066
  %59 = load i8, i8* %arrayidx68, align 1, !dbg !8067
  %conv69 = zext i8 %59 to i64, !dbg !8067
  %and70 = and i64 %conv69, -5, !dbg !8067
  %conv71 = trunc i64 %and70 to i8, !dbg !8067
  store i8 %conv71, i8* %arrayidx68, align 1, !dbg !8067
  %60 = load %struct.input_dev*, %struct.input_dev** %dev23, align 8, !dbg !8068
  %61 = load i8*, i8** %packet, align 8, !dbg !8069
  %arrayidx72 = getelementptr i8, i8* %61, i64 3, !dbg !8069
  %62 = load i8, i8* %arrayidx72, align 1, !dbg !8069
  call void @psmouse_report_standard_buttons(%struct.input_dev* %60, i8 zeroext %62) #10, !dbg !8070
  %63 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !8071
  call void @input_sync(%struct.input_dev* %63) #10, !dbg !8072
  br label %return, !dbg !8073

return:                                           ; preds = %if.end65, %if.end30, %if.then6
  ret void, !dbg !8073
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @alps_hw_init_v7(%struct.psmouse* %psmouse) #0 !dbg !8074 {
entry:
  %retval = alloca i32, align 4
  %psmouse.addr = alloca %struct.psmouse*, align 8
  %ps2dev = alloca %struct.ps2dev*, align 8
  %reg_val = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.psmouse* %psmouse, %struct.psmouse** %psmouse.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.psmouse** %psmouse.addr, metadata !8075, metadata !DIExpression()), !dbg !8076
  call void @llvm.dbg.declare(metadata %struct.ps2dev** %ps2dev, metadata !8077, metadata !DIExpression()), !dbg !8078
  %0 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !8079
  %ps2dev1 = getelementptr inbounds %struct.psmouse, %struct.psmouse* %0, i32 0, i32 2, !dbg !8080
  store %struct.ps2dev* %ps2dev1, %struct.ps2dev** %ps2dev, align 8, !dbg !8078
  call void @llvm.dbg.declare(metadata i32* %reg_val, metadata !8081, metadata !DIExpression()), !dbg !8082
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8083, metadata !DIExpression()), !dbg !8084
  store i32 -1, i32* %ret, align 4, !dbg !8084
  %1 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !8085
  %call = call i32 @alps_enter_command_mode(%struct.psmouse* %1) #10, !dbg !8087
  %tobool = icmp ne i32 %call, 0, !dbg !8087
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !8088

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !8089
  %call2 = call i32 @alps_command_mode_read_reg(%struct.psmouse* %2, i32 49881) #10, !dbg !8090
  %cmp = icmp eq i32 %call2, -1, !dbg !8091
  br i1 %cmp, label %if.then, label %if.end, !dbg !8092

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %error, !dbg !8093

if.end:                                           ; preds = %lor.lhs.false
  %3 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !8094
  %call3 = call i32 @alps_get_v3_v7_resolution(%struct.psmouse* %3, i32 50071) #10, !dbg !8096
  %tobool4 = icmp ne i32 %call3, 0, !dbg !8096
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !8097

if.then5:                                         ; preds = %if.end
  br label %error, !dbg !8098

if.end6:                                          ; preds = %if.end
  %4 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !8099
  %call7 = call i32 @alps_command_mode_write_reg(%struct.psmouse* %4, i32 49865, i8 zeroext 100) #10, !dbg !8101
  %tobool8 = icmp ne i32 %call7, 0, !dbg !8101
  br i1 %tobool8, label %if.then9, label %if.end10, !dbg !8102

if.then9:                                         ; preds = %if.end6
  br label %error, !dbg !8103

if.end10:                                         ; preds = %if.end6
  %5 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !8104
  %call11 = call i32 @alps_command_mode_read_reg(%struct.psmouse* %5, i32 49860) #10, !dbg !8105
  store i32 %call11, i32* %reg_val, align 4, !dbg !8106
  %6 = load i32, i32* %reg_val, align 4, !dbg !8107
  %cmp12 = icmp eq i32 %6, -1, !dbg !8109
  br i1 %cmp12, label %if.then13, label %if.end14, !dbg !8110

if.then13:                                        ; preds = %if.end10
  br label %error, !dbg !8111

if.end14:                                         ; preds = %if.end10
  %7 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !8112
  %8 = load i32, i32* %reg_val, align 4, !dbg !8114
  %or = or i32 %8, 2, !dbg !8115
  %conv = trunc i32 %or to i8, !dbg !8114
  %call15 = call i32 @__alps_command_mode_write_reg(%struct.psmouse* %7, i8 zeroext %conv) #10, !dbg !8116
  %tobool16 = icmp ne i32 %call15, 0, !dbg !8116
  br i1 %tobool16, label %if.then17, label %if.end18, !dbg !8117

if.then17:                                        ; preds = %if.end14
  br label %error, !dbg !8118

if.end18:                                         ; preds = %if.end14
  %9 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !8119
  %call19 = call i32 @alps_exit_command_mode(%struct.psmouse* %9) #10, !dbg !8120
  %10 = load %struct.ps2dev*, %struct.ps2dev** %ps2dev, align 8, !dbg !8121
  %call20 = call i32 @ps2_command(%struct.ps2dev* %10, i8* null, i32 244) #10, !dbg !8122
  store i32 %call20, i32* %retval, align 4, !dbg !8123
  br label %return, !dbg !8123

error:                                            ; preds = %if.then17, %if.then13, %if.then9, %if.then5, %if.then
  call void @llvm.dbg.label(metadata !8124), !dbg !8125
  %11 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !8126
  %call21 = call i32 @alps_exit_command_mode(%struct.psmouse* %11) #10, !dbg !8127
  %12 = load i32, i32* %ret, align 4, !dbg !8128
  store i32 %12, i32* %retval, align 4, !dbg !8129
  br label %return, !dbg !8129

return:                                           ; preds = %error, %if.end18
  %13 = load i32, i32* %retval, align 4, !dbg !8130
  ret i32 %13, !dbg !8130
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @alps_process_packet_v7(%struct.psmouse* %psmouse) #0 !dbg !8131 {
entry:
  %psmouse.addr = alloca %struct.psmouse*, align 8
  %packet = alloca i8*, align 8
  store %struct.psmouse* %psmouse, %struct.psmouse** %psmouse.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.psmouse** %psmouse.addr, metadata !8132, metadata !DIExpression()), !dbg !8133
  call void @llvm.dbg.declare(metadata i8** %packet, metadata !8134, metadata !DIExpression()), !dbg !8135
  %0 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !8136
  %packet1 = getelementptr inbounds %struct.psmouse, %struct.psmouse* %0, i32 0, i32 7, !dbg !8137
  %arraydecay = getelementptr inbounds [8 x i8], [8 x i8]* %packet1, i64 0, i64 0, !dbg !8136
  store i8* %arraydecay, i8** %packet, align 8, !dbg !8135
  %1 = load i8*, i8** %packet, align 8, !dbg !8138
  %arrayidx = getelementptr i8, i8* %1, i64 0, !dbg !8138
  %2 = load i8, i8* %arrayidx, align 1, !dbg !8138
  %conv = zext i8 %2 to i32, !dbg !8138
  %cmp = icmp eq i32 %conv, 72, !dbg !8140
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !8141

land.lhs.true:                                    ; preds = %entry
  %3 = load i8*, i8** %packet, align 8, !dbg !8142
  %arrayidx3 = getelementptr i8, i8* %3, i64 4, !dbg !8142
  %4 = load i8, i8* %arrayidx3, align 1, !dbg !8142
  %conv4 = zext i8 %4 to i32, !dbg !8142
  %and = and i32 %conv4, 71, !dbg !8143
  %cmp5 = icmp eq i32 %and, 6, !dbg !8144
  br i1 %cmp5, label %if.then, label %if.else, !dbg !8145

if.then:                                          ; preds = %land.lhs.true
  %5 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !8146
  call void @alps_process_trackstick_packet_v7(%struct.psmouse* %5) #10, !dbg !8147
  br label %if.end, !dbg !8147

if.else:                                          ; preds = %land.lhs.true, %entry
  %6 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !8148
  call void @alps_process_touchpad_packet_v7(%struct.psmouse* %6) #10, !dbg !8149
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !8150
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @alps_decode_packet_v7(%struct.alps_fields* %f, i8* %p, %struct.psmouse* %psmouse) #0 !dbg !8151 {
entry:
  %retval = alloca i32, align 4
  %f.addr = alloca %struct.alps_fields*, align 8
  %p.addr = alloca i8*, align 8
  %psmouse.addr = alloca %struct.psmouse*, align 8
  %priv = alloca %struct.alps_data*, align 8
  %pkt_id = alloca i8, align 1
  store %struct.alps_fields* %f, %struct.alps_fields** %f.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.alps_fields** %f.addr, metadata !8152, metadata !DIExpression()), !dbg !8153
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !8154, metadata !DIExpression()), !dbg !8155
  store %struct.psmouse* %psmouse, %struct.psmouse** %psmouse.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.psmouse** %psmouse.addr, metadata !8156, metadata !DIExpression()), !dbg !8157
  call void @llvm.dbg.declare(metadata %struct.alps_data** %priv, metadata !8158, metadata !DIExpression()), !dbg !8159
  %0 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !8160
  %private = getelementptr inbounds %struct.psmouse, %struct.psmouse* %0, i32 0, i32 0, !dbg !8161
  %1 = load i8*, i8** %private, align 8, !dbg !8161
  %2 = bitcast i8* %1 to %struct.alps_data*, !dbg !8160
  store %struct.alps_data* %2, %struct.alps_data** %priv, align 8, !dbg !8159
  call void @llvm.dbg.declare(metadata i8* %pkt_id, metadata !8162, metadata !DIExpression()), !dbg !8163
  %3 = load i8*, i8** %p.addr, align 8, !dbg !8164
  %call = call zeroext i8 @alps_get_packet_id_v7(i8* %3) #10, !dbg !8165
  store i8 %call, i8* %pkt_id, align 1, !dbg !8166
  %4 = load i8, i8* %pkt_id, align 1, !dbg !8167
  %conv = zext i8 %4 to i32, !dbg !8167
  %cmp = icmp eq i32 %conv, 0, !dbg !8169
  br i1 %cmp, label %if.then, label %if.end, !dbg !8170

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !8171
  br label %return, !dbg !8171

if.end:                                           ; preds = %entry
  %5 = load i8, i8* %pkt_id, align 1, !dbg !8172
  %conv2 = zext i8 %5 to i32, !dbg !8172
  %cmp3 = icmp eq i32 %conv2, 4, !dbg !8174
  br i1 %cmp3, label %if.then5, label %if.end6, !dbg !8175

if.then5:                                         ; preds = %if.end
  store i32 -1, i32* %retval, align 4, !dbg !8176
  br label %return, !dbg !8176

if.end6:                                          ; preds = %if.end
  %6 = load i8, i8* %pkt_id, align 1, !dbg !8177
  %conv7 = zext i8 %6 to i32, !dbg !8177
  %cmp8 = icmp eq i32 %conv7, 3, !dbg !8179
  br i1 %cmp8, label %if.then10, label %if.end11, !dbg !8180

if.then10:                                        ; preds = %if.end6
  store i32 1, i32* %retval, align 4, !dbg !8181
  br label %return, !dbg !8181

if.end11:                                         ; preds = %if.end6
  %7 = load %struct.alps_fields*, %struct.alps_fields** %f.addr, align 8, !dbg !8182
  %mt = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %7, i32 0, i32 5, !dbg !8183
  %arraydecay = getelementptr inbounds [4 x %struct.input_mt_pos], [4 x %struct.input_mt_pos]* %mt, i64 0, i64 0, !dbg !8182
  %8 = load i8*, i8** %p.addr, align 8, !dbg !8184
  %9 = load i8, i8* %pkt_id, align 1, !dbg !8185
  call void @alps_get_finger_coordinate_v7(%struct.input_mt_pos* %arraydecay, i8* %8, i8 zeroext %9) #10, !dbg !8186
  %10 = load i8, i8* %pkt_id, align 1, !dbg !8187
  %conv12 = zext i8 %10 to i32, !dbg !8187
  %cmp13 = icmp eq i32 %conv12, 1, !dbg !8189
  br i1 %cmp13, label %if.then15, label %if.else, !dbg !8190

if.then15:                                        ; preds = %if.end11
  %11 = load %struct.alps_fields*, %struct.alps_fields** %f.addr, align 8, !dbg !8191
  %mt16 = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %11, i32 0, i32 5, !dbg !8192
  %arraydecay17 = getelementptr inbounds [4 x %struct.input_mt_pos], [4 x %struct.input_mt_pos]* %mt16, i64 0, i64 0, !dbg !8191
  %call18 = call i32 @alps_get_mt_count(%struct.input_mt_pos* %arraydecay17) #10, !dbg !8193
  %12 = load %struct.alps_fields*, %struct.alps_fields** %f.addr, align 8, !dbg !8194
  %fingers = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %12, i32 0, i32 2, !dbg !8195
  store i32 %call18, i32* %fingers, align 4, !dbg !8196
  br label %if.end21, !dbg !8194

if.else:                                          ; preds = %if.end11
  %13 = load i8*, i8** %p.addr, align 8, !dbg !8197
  %arrayidx = getelementptr i8, i8* %13, i64 5, !dbg !8197
  %14 = load i8, i8* %arrayidx, align 1, !dbg !8197
  %conv19 = zext i8 %14 to i32, !dbg !8197
  %and = and i32 %conv19, 3, !dbg !8198
  %add = add i32 3, %and, !dbg !8199
  %15 = load %struct.alps_fields*, %struct.alps_fields** %f.addr, align 8, !dbg !8200
  %fingers20 = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %15, i32 0, i32 2, !dbg !8201
  store i32 %add, i32* %fingers20, align 4, !dbg !8202
  br label %if.end21

if.end21:                                         ; preds = %if.else, %if.then15
  %16 = load i8*, i8** %p.addr, align 8, !dbg !8203
  %arrayidx22 = getelementptr i8, i8* %16, i64 0, !dbg !8203
  %17 = load i8, i8* %arrayidx22, align 1, !dbg !8203
  %conv23 = zext i8 %17 to i32, !dbg !8203
  %and24 = and i32 %conv23, 128, !dbg !8204
  %shr = ashr i32 %and24, 7, !dbg !8205
  %18 = load %struct.alps_fields*, %struct.alps_fields** %f.addr, align 8, !dbg !8206
  %left = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %18, i32 0, i32 6, !dbg !8207
  %19 = trunc i32 %shr to i8, !dbg !8208
  %bf.load = load i8, i8* %left, align 4, !dbg !8208
  %bf.value = and i8 %19, 1, !dbg !8208
  %bf.shl = shl i8 %bf.value, 2, !dbg !8208
  %bf.clear = and i8 %bf.load, -5, !dbg !8208
  %bf.set = or i8 %bf.clear, %bf.shl, !dbg !8208
  store i8 %bf.set, i8* %left, align 4, !dbg !8208
  %bf.result.cast = zext i8 %bf.value to i32, !dbg !8208
  %20 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !8209
  %flags = getelementptr inbounds %struct.alps_data, %struct.alps_data* %20, i32 0, i32 13, !dbg !8211
  %21 = load i32, i32* %flags, align 8, !dbg !8211
  %and25 = and i32 %21, 512, !dbg !8212
  %tobool = icmp ne i32 %and25, 0, !dbg !8212
  br i1 %tobool, label %if.then26, label %if.else42, !dbg !8213

if.then26:                                        ; preds = %if.end21
  %22 = load i8*, i8** %p.addr, align 8, !dbg !8214
  %arrayidx27 = getelementptr i8, i8* %22, i64 0, !dbg !8214
  %23 = load i8, i8* %arrayidx27, align 1, !dbg !8214
  %conv28 = zext i8 %23 to i32, !dbg !8214
  %and29 = and i32 %conv28, 32, !dbg !8217
  %tobool30 = icmp ne i32 %and29, 0, !dbg !8217
  br i1 %tobool30, label %if.then31, label %if.end33, !dbg !8218

if.then31:                                        ; preds = %if.then26
  %24 = load %struct.alps_fields*, %struct.alps_fields** %f.addr, align 8, !dbg !8219
  %fingers32 = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %24, i32 0, i32 2, !dbg !8220
  %25 = load i32, i32* %fingers32, align 4, !dbg !8221
  %inc = add i32 %25, 1, !dbg !8221
  store i32 %inc, i32* %fingers32, align 4, !dbg !8221
  br label %if.end33, !dbg !8219

if.end33:                                         ; preds = %if.then31, %if.then26
  %26 = load i8*, i8** %p.addr, align 8, !dbg !8222
  %arrayidx34 = getelementptr i8, i8* %26, i64 0, !dbg !8222
  %27 = load i8, i8* %arrayidx34, align 1, !dbg !8222
  %conv35 = zext i8 %27 to i32, !dbg !8222
  %and36 = and i32 %conv35, 16, !dbg !8224
  %tobool37 = icmp ne i32 %and36, 0, !dbg !8224
  br i1 %tobool37, label %if.then38, label %if.end41, !dbg !8225

if.then38:                                        ; preds = %if.end33
  %28 = load %struct.alps_fields*, %struct.alps_fields** %f.addr, align 8, !dbg !8226
  %fingers39 = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %28, i32 0, i32 2, !dbg !8227
  %29 = load i32, i32* %fingers39, align 4, !dbg !8228
  %inc40 = add i32 %29, 1, !dbg !8228
  store i32 %inc40, i32* %fingers39, align 4, !dbg !8228
  br label %if.end41, !dbg !8226

if.end41:                                         ; preds = %if.then38, %if.end33
  br label %if.end63, !dbg !8229

if.else42:                                        ; preds = %if.end21
  %30 = load i8*, i8** %p.addr, align 8, !dbg !8230
  %arrayidx43 = getelementptr i8, i8* %30, i64 0, !dbg !8230
  %31 = load i8, i8* %arrayidx43, align 1, !dbg !8230
  %conv44 = zext i8 %31 to i32, !dbg !8230
  %and45 = and i32 %conv44, 32, !dbg !8232
  %shr46 = ashr i32 %and45, 5, !dbg !8233
  %32 = load %struct.alps_fields*, %struct.alps_fields** %f.addr, align 8, !dbg !8234
  %right = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %32, i32 0, i32 6, !dbg !8235
  %33 = trunc i32 %shr46 to i8, !dbg !8236
  %bf.load47 = load i8, i8* %right, align 4, !dbg !8236
  %bf.value48 = and i8 %33, 1, !dbg !8236
  %bf.shl49 = shl i8 %bf.value48, 3, !dbg !8236
  %bf.clear50 = and i8 %bf.load47, -9, !dbg !8236
  %bf.set51 = or i8 %bf.clear50, %bf.shl49, !dbg !8236
  store i8 %bf.set51, i8* %right, align 4, !dbg !8236
  %bf.result.cast52 = zext i8 %bf.value48 to i32, !dbg !8236
  %34 = load i8*, i8** %p.addr, align 8, !dbg !8237
  %arrayidx53 = getelementptr i8, i8* %34, i64 0, !dbg !8237
  %35 = load i8, i8* %arrayidx53, align 1, !dbg !8237
  %conv54 = zext i8 %35 to i32, !dbg !8237
  %and55 = and i32 %conv54, 16, !dbg !8238
  %shr56 = ashr i32 %and55, 4, !dbg !8239
  %36 = load %struct.alps_fields*, %struct.alps_fields** %f.addr, align 8, !dbg !8240
  %middle = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %36, i32 0, i32 6, !dbg !8241
  %37 = trunc i32 %shr56 to i8, !dbg !8242
  %bf.load57 = load i8, i8* %middle, align 4, !dbg !8242
  %bf.value58 = and i8 %37, 1, !dbg !8242
  %bf.shl59 = shl i8 %bf.value58, 4, !dbg !8242
  %bf.clear60 = and i8 %bf.load57, -17, !dbg !8242
  %bf.set61 = or i8 %bf.clear60, %bf.shl59, !dbg !8242
  store i8 %bf.set61, i8* %middle, align 4, !dbg !8242
  %bf.result.cast62 = zext i8 %bf.value58 to i32, !dbg !8242
  br label %if.end63

if.end63:                                         ; preds = %if.else42, %if.end41
  %38 = load %struct.alps_fields*, %struct.alps_fields** %f.addr, align 8, !dbg !8243
  %fingers64 = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %38, i32 0, i32 2, !dbg !8245
  %39 = load i32, i32* %fingers64, align 4, !dbg !8245
  %cmp65 = icmp eq i32 %39, 1, !dbg !8246
  br i1 %cmp65, label %land.lhs.true, label %if.end97, !dbg !8247

land.lhs.true:                                    ; preds = %if.end63
  %40 = load %struct.alps_fields*, %struct.alps_fields** %f.addr, align 8, !dbg !8248
  %mt67 = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %40, i32 0, i32 5, !dbg !8249
  %arrayidx68 = getelementptr [4 x %struct.input_mt_pos], [4 x %struct.input_mt_pos]* %mt67, i64 0, i64 0, !dbg !8248
  %x = getelementptr inbounds %struct.input_mt_pos, %struct.input_mt_pos* %arrayidx68, i32 0, i32 0, !dbg !8250
  %41 = load i16, i16* %x, align 4, !dbg !8250
  %conv69 = sext i16 %41 to i32, !dbg !8248
  %cmp70 = icmp eq i32 %conv69, 0, !dbg !8251
  br i1 %cmp70, label %land.lhs.true72, label %if.end97, !dbg !8252

land.lhs.true72:                                  ; preds = %land.lhs.true
  %42 = load %struct.alps_fields*, %struct.alps_fields** %f.addr, align 8, !dbg !8253
  %mt73 = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %42, i32 0, i32 5, !dbg !8254
  %arrayidx74 = getelementptr [4 x %struct.input_mt_pos], [4 x %struct.input_mt_pos]* %mt73, i64 0, i64 0, !dbg !8253
  %y = getelementptr inbounds %struct.input_mt_pos, %struct.input_mt_pos* %arrayidx74, i32 0, i32 1, !dbg !8255
  %43 = load i16, i16* %y, align 2, !dbg !8255
  %conv75 = sext i16 %43 to i32, !dbg !8253
  %cmp76 = icmp eq i32 %conv75, 0, !dbg !8256
  br i1 %cmp76, label %if.then78, label %if.end97, !dbg !8257

if.then78:                                        ; preds = %land.lhs.true72
  %44 = load %struct.alps_fields*, %struct.alps_fields** %f.addr, align 8, !dbg !8258
  %mt79 = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %44, i32 0, i32 5, !dbg !8260
  %arrayidx80 = getelementptr [4 x %struct.input_mt_pos], [4 x %struct.input_mt_pos]* %mt79, i64 0, i64 1, !dbg !8258
  %x81 = getelementptr inbounds %struct.input_mt_pos, %struct.input_mt_pos* %arrayidx80, i32 0, i32 0, !dbg !8261
  %45 = load i16, i16* %x81, align 4, !dbg !8261
  %46 = load %struct.alps_fields*, %struct.alps_fields** %f.addr, align 8, !dbg !8262
  %mt82 = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %46, i32 0, i32 5, !dbg !8263
  %arrayidx83 = getelementptr [4 x %struct.input_mt_pos], [4 x %struct.input_mt_pos]* %mt82, i64 0, i64 0, !dbg !8262
  %x84 = getelementptr inbounds %struct.input_mt_pos, %struct.input_mt_pos* %arrayidx83, i32 0, i32 0, !dbg !8264
  store i16 %45, i16* %x84, align 4, !dbg !8265
  %47 = load %struct.alps_fields*, %struct.alps_fields** %f.addr, align 8, !dbg !8266
  %mt85 = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %47, i32 0, i32 5, !dbg !8267
  %arrayidx86 = getelementptr [4 x %struct.input_mt_pos], [4 x %struct.input_mt_pos]* %mt85, i64 0, i64 1, !dbg !8266
  %y87 = getelementptr inbounds %struct.input_mt_pos, %struct.input_mt_pos* %arrayidx86, i32 0, i32 1, !dbg !8268
  %48 = load i16, i16* %y87, align 2, !dbg !8268
  %49 = load %struct.alps_fields*, %struct.alps_fields** %f.addr, align 8, !dbg !8269
  %mt88 = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %49, i32 0, i32 5, !dbg !8270
  %arrayidx89 = getelementptr [4 x %struct.input_mt_pos], [4 x %struct.input_mt_pos]* %mt88, i64 0, i64 0, !dbg !8269
  %y90 = getelementptr inbounds %struct.input_mt_pos, %struct.input_mt_pos* %arrayidx89, i32 0, i32 1, !dbg !8271
  store i16 %48, i16* %y90, align 2, !dbg !8272
  %50 = load %struct.alps_fields*, %struct.alps_fields** %f.addr, align 8, !dbg !8273
  %mt91 = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %50, i32 0, i32 5, !dbg !8274
  %arrayidx92 = getelementptr [4 x %struct.input_mt_pos], [4 x %struct.input_mt_pos]* %mt91, i64 0, i64 1, !dbg !8273
  %x93 = getelementptr inbounds %struct.input_mt_pos, %struct.input_mt_pos* %arrayidx92, i32 0, i32 0, !dbg !8275
  store i16 0, i16* %x93, align 4, !dbg !8276
  %51 = load %struct.alps_fields*, %struct.alps_fields** %f.addr, align 8, !dbg !8277
  %mt94 = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %51, i32 0, i32 5, !dbg !8278
  %arrayidx95 = getelementptr [4 x %struct.input_mt_pos], [4 x %struct.input_mt_pos]* %mt94, i64 0, i64 1, !dbg !8277
  %y96 = getelementptr inbounds %struct.input_mt_pos, %struct.input_mt_pos* %arrayidx95, i32 0, i32 1, !dbg !8279
  store i16 0, i16* %y96, align 2, !dbg !8280
  br label %if.end97, !dbg !8281

if.end97:                                         ; preds = %if.then78, %land.lhs.true72, %land.lhs.true, %if.end63
  store i32 0, i32* %retval, align 4, !dbg !8282
  br label %return, !dbg !8282

return:                                           ; preds = %if.end97, %if.then10, %if.then5, %if.then
  %52 = load i32, i32* %retval, align 4, !dbg !8283
  ret i32 %52, !dbg !8283
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @alps_set_abs_params_v7(%struct.alps_data* %priv, %struct.input_dev* %dev1) #0 !dbg !8284 {
entry:
  %priv.addr = alloca %struct.alps_data*, align 8
  %dev1.addr = alloca %struct.input_dev*, align 8
  store %struct.alps_data* %priv, %struct.alps_data** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.alps_data** %priv.addr, metadata !8285, metadata !DIExpression()), !dbg !8286
  store %struct.input_dev* %dev1, %struct.input_dev** %dev1.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.input_dev** %dev1.addr, metadata !8287, metadata !DIExpression()), !dbg !8288
  %0 = load %struct.alps_data*, %struct.alps_data** %priv.addr, align 8, !dbg !8289
  %1 = load %struct.input_dev*, %struct.input_dev** %dev1.addr, align 8, !dbg !8290
  call void @alps_set_abs_params_mt_common(%struct.alps_data* %0, %struct.input_dev* %1) #10, !dbg !8291
  %2 = load %struct.input_dev*, %struct.input_dev** %dev1.addr, align 8, !dbg !8292
  %keybit = getelementptr inbounds %struct.input_dev, %struct.input_dev* %2, i32 0, i32 6, !dbg !8293
  %arraydecay = getelementptr inbounds [12 x i64], [12 x i64]* %keybit, i64 0, i64 0, !dbg !8292
  call void @set_bit(i64 328, i64* %arraydecay) #10, !dbg !8294
  %3 = load %struct.input_dev*, %struct.input_dev** %dev1.addr, align 8, !dbg !8295
  %call = call i32 @input_mt_init_slots(%struct.input_dev* %3, i32 4, i32 13) #10, !dbg !8296
  %4 = load %struct.input_dev*, %struct.input_dev** %dev1.addr, align 8, !dbg !8297
  %keybit1 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %4, i32 0, i32 6, !dbg !8298
  %arraydecay2 = getelementptr inbounds [12 x i64], [12 x i64]* %keybit1, i64 0, i64 0, !dbg !8297
  call void @set_bit(i64 328, i64* %arraydecay2) #10, !dbg !8299
  ret void, !dbg !8300
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @alps_hw_init_ss4_v2(%struct.psmouse* %psmouse) #0 !dbg !8301 {
entry:
  %retval = alloca i32, align 4
  %psmouse.addr = alloca %struct.psmouse*, align 8
  %ps2dev = alloca %struct.ps2dev*, align 8
  %param = alloca [2 x i8], align 1
  %ret = alloca i32, align 4
  store %struct.psmouse* %psmouse, %struct.psmouse** %psmouse.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.psmouse** %psmouse.addr, metadata !8302, metadata !DIExpression()), !dbg !8303
  call void @llvm.dbg.declare(metadata %struct.ps2dev** %ps2dev, metadata !8304, metadata !DIExpression()), !dbg !8305
  %0 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !8306
  %ps2dev1 = getelementptr inbounds %struct.psmouse, %struct.psmouse* %0, i32 0, i32 2, !dbg !8307
  store %struct.ps2dev* %ps2dev1, %struct.ps2dev** %ps2dev, align 8, !dbg !8305
  call void @llvm.dbg.declare(metadata [2 x i8]* %param, metadata !8308, metadata !DIExpression()), !dbg !8310
  %1 = bitcast [2 x i8]* %param to i8*, !dbg !8310
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 getelementptr inbounds ([2 x i8], [2 x i8]* @__const.alps_hw_init_ss4_v2.param, i32 0, i32 0), i64 2, i1 false), !dbg !8310
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8311, metadata !DIExpression()), !dbg !8312
  store i32 -1, i32* %ret, align 4, !dbg !8312
  %2 = load %struct.ps2dev*, %struct.ps2dev** %ps2dev, align 8, !dbg !8313
  %call = call i32 @ps2_command(%struct.ps2dev* %2, i8* null, i32 234) #10, !dbg !8315
  %tobool = icmp ne i32 %call, 0, !dbg !8315
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !8316

lor.lhs.false:                                    ; preds = %entry
  %3 = load %struct.ps2dev*, %struct.ps2dev** %ps2dev, align 8, !dbg !8317
  %call2 = call i32 @ps2_command(%struct.ps2dev* %3, i8* null, i32 234) #10, !dbg !8318
  %tobool3 = icmp ne i32 %call2, 0, !dbg !8318
  br i1 %tobool3, label %if.then, label %lor.lhs.false4, !dbg !8319

lor.lhs.false4:                                   ; preds = %lor.lhs.false
  %4 = load %struct.ps2dev*, %struct.ps2dev** %ps2dev, align 8, !dbg !8320
  %arrayidx = getelementptr [2 x i8], [2 x i8]* %param, i64 0, i64 0, !dbg !8321
  %call5 = call i32 @ps2_command(%struct.ps2dev* %4, i8* %arrayidx, i32 4339) #10, !dbg !8322
  %tobool6 = icmp ne i32 %call5, 0, !dbg !8322
  br i1 %tobool6, label %if.then, label %lor.lhs.false7, !dbg !8323

lor.lhs.false7:                                   ; preds = %lor.lhs.false4
  %5 = load %struct.ps2dev*, %struct.ps2dev** %ps2dev, align 8, !dbg !8324
  %arrayidx8 = getelementptr [2 x i8], [2 x i8]* %param, i64 0, i64 1, !dbg !8325
  %call9 = call i32 @ps2_command(%struct.ps2dev* %5, i8* %arrayidx8, i32 4339) #10, !dbg !8326
  %tobool10 = icmp ne i32 %call9, 0, !dbg !8326
  br i1 %tobool10, label %if.then, label %if.end, !dbg !8327

if.then:                                          ; preds = %lor.lhs.false7, %lor.lhs.false4, %lor.lhs.false, %entry
  br label %error, !dbg !8328

if.end:                                           ; preds = %lor.lhs.false7
  %6 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !8330
  %call11 = call i32 @alps_exit_command_mode(%struct.psmouse* %6) #10, !dbg !8332
  %tobool12 = icmp ne i32 %call11, 0, !dbg !8332
  br i1 %tobool12, label %if.then19, label %lor.lhs.false13, !dbg !8333

lor.lhs.false13:                                  ; preds = %if.end
  %7 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !8334
  %call14 = call i32 @alps_enter_command_mode(%struct.psmouse* %7) #10, !dbg !8335
  %tobool15 = icmp ne i32 %call14, 0, !dbg !8335
  br i1 %tobool15, label %if.then19, label %lor.lhs.false16, !dbg !8336

lor.lhs.false16:                                  ; preds = %lor.lhs.false13
  %8 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !8337
  %call17 = call i32 @alps_command_mode_write_reg(%struct.psmouse* %8, i32 29, i8 zeroext 32) #10, !dbg !8338
  %tobool18 = icmp ne i32 %call17, 0, !dbg !8338
  br i1 %tobool18, label %if.then19, label %if.end20, !dbg !8339

if.then19:                                        ; preds = %lor.lhs.false16, %lor.lhs.false13, %if.end
  br label %error, !dbg !8340

if.end20:                                         ; preds = %lor.lhs.false16
  %9 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !8342
  %call21 = call i32 @alps_exit_command_mode(%struct.psmouse* %9) #10, !dbg !8343
  %10 = load %struct.ps2dev*, %struct.ps2dev** %ps2dev, align 8, !dbg !8344
  %call22 = call i32 @ps2_command(%struct.ps2dev* %10, i8* null, i32 244) #10, !dbg !8345
  store i32 %call22, i32* %retval, align 4, !dbg !8346
  br label %return, !dbg !8346

error:                                            ; preds = %if.then19, %if.then
  call void @llvm.dbg.label(metadata !8347), !dbg !8348
  %11 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !8349
  %call23 = call i32 @alps_exit_command_mode(%struct.psmouse* %11) #10, !dbg !8350
  %12 = load i32, i32* %ret, align 4, !dbg !8351
  store i32 %12, i32* %retval, align 4, !dbg !8352
  br label %return, !dbg !8352

return:                                           ; preds = %error, %if.end20
  %13 = load i32, i32* %retval, align 4, !dbg !8353
  ret i32 %13, !dbg !8353
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @alps_process_packet_ss4_v2(%struct.psmouse* %psmouse) #0 !dbg !8354 {
entry:
  %psmouse.addr = alloca %struct.psmouse*, align 8
  %priv = alloca %struct.alps_data*, align 8
  %packet = alloca i8*, align 8
  %dev = alloca %struct.input_dev*, align 8
  %dev23 = alloca %struct.input_dev*, align 8
  %f = alloca %struct.alps_fields*, align 8
  store %struct.psmouse* %psmouse, %struct.psmouse** %psmouse.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.psmouse** %psmouse.addr, metadata !8355, metadata !DIExpression()), !dbg !8356
  call void @llvm.dbg.declare(metadata %struct.alps_data** %priv, metadata !8357, metadata !DIExpression()), !dbg !8358
  %0 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !8359
  %private = getelementptr inbounds %struct.psmouse, %struct.psmouse* %0, i32 0, i32 0, !dbg !8360
  %1 = load i8*, i8** %private, align 8, !dbg !8360
  %2 = bitcast i8* %1 to %struct.alps_data*, !dbg !8359
  store %struct.alps_data* %2, %struct.alps_data** %priv, align 8, !dbg !8358
  call void @llvm.dbg.declare(metadata i8** %packet, metadata !8361, metadata !DIExpression()), !dbg !8362
  %3 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !8363
  %packet1 = getelementptr inbounds %struct.psmouse, %struct.psmouse* %3, i32 0, i32 7, !dbg !8364
  %arraydecay = getelementptr inbounds [8 x i8], [8 x i8]* %packet1, i64 0, i64 0, !dbg !8363
  store i8* %arraydecay, i8** %packet, align 8, !dbg !8362
  call void @llvm.dbg.declare(metadata %struct.input_dev** %dev, metadata !8365, metadata !DIExpression()), !dbg !8366
  %4 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !8367
  %dev2 = getelementptr inbounds %struct.psmouse, %struct.psmouse* %4, i32 0, i32 1, !dbg !8368
  %5 = load %struct.input_dev*, %struct.input_dev** %dev2, align 8, !dbg !8368
  store %struct.input_dev* %5, %struct.input_dev** %dev, align 8, !dbg !8366
  call void @llvm.dbg.declare(metadata %struct.input_dev** %dev23, metadata !8369, metadata !DIExpression()), !dbg !8370
  %6 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !8371
  %dev24 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %6, i32 0, i32 1, !dbg !8372
  %7 = load %struct.input_dev*, %struct.input_dev** %dev24, align 8, !dbg !8372
  store %struct.input_dev* %7, %struct.input_dev** %dev23, align 8, !dbg !8370
  call void @llvm.dbg.declare(metadata %struct.alps_fields** %f, metadata !8373, metadata !DIExpression()), !dbg !8374
  %8 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !8375
  %f5 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %8, i32 0, i32 28, !dbg !8376
  store %struct.alps_fields* %f5, %struct.alps_fields** %f, align 8, !dbg !8374
  %9 = load %struct.alps_fields*, %struct.alps_fields** %f, align 8, !dbg !8377
  %10 = bitcast %struct.alps_fields* %9 to i8*, !dbg !8378
  call void @llvm.memset.p0i8.i64(i8* align 4 %10, i8 0, i64 40, i1 false), !dbg !8378
  %11 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !8379
  %decode_fields = getelementptr inbounds %struct.alps_data, %struct.alps_data* %11, i32 0, i32 22, !dbg !8380
  %12 = load i32 (%struct.alps_fields*, i8*, %struct.psmouse*)*, i32 (%struct.alps_fields*, i8*, %struct.psmouse*)** %decode_fields, align 8, !dbg !8380
  %13 = load %struct.alps_fields*, %struct.alps_fields** %f, align 8, !dbg !8381
  %14 = load i8*, i8** %packet, align 8, !dbg !8382
  %15 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !8383
  %call = call i32 %12(%struct.alps_fields* %13, i8* %14, %struct.psmouse* %15) #10, !dbg !8379
  %16 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !8384
  %multi_packet = getelementptr inbounds %struct.alps_data, %struct.alps_data* %16, i32 0, i32 25, !dbg !8386
  %17 = load i32, i32* %multi_packet, align 4, !dbg !8386
  %tobool = icmp ne i32 %17, 0, !dbg !8384
  br i1 %tobool, label %if.then, label %if.end12, !dbg !8387

if.then:                                          ; preds = %entry
  %18 = load %struct.alps_fields*, %struct.alps_fields** %f, align 8, !dbg !8388
  %is_mp = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %18, i32 0, i32 6, !dbg !8391
  %bf.load = load i8, i8* %is_mp, align 4, !dbg !8391
  %bf.lshr = lshr i8 %bf.load, 1, !dbg !8391
  %bf.clear = and i8 %bf.lshr, 1, !dbg !8391
  %bf.cast = zext i8 %bf.clear to i32, !dbg !8391
  %tobool6 = icmp ne i32 %bf.cast, 0, !dbg !8388
  br i1 %tobool6, label %if.then7, label %if.else, !dbg !8392

if.then7:                                         ; preds = %if.then
  %19 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !8393
  %decode_fields8 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %19, i32 0, i32 22, !dbg !8395
  %20 = load i32 (%struct.alps_fields*, i8*, %struct.psmouse*)*, i32 (%struct.alps_fields*, i8*, %struct.psmouse*)** %decode_fields8, align 8, !dbg !8395
  %21 = load %struct.alps_fields*, %struct.alps_fields** %f, align 8, !dbg !8396
  %22 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !8397
  %multi_data = getelementptr inbounds %struct.alps_data, %struct.alps_data* %22, i32 0, i32 27, !dbg !8398
  %arraydecay9 = getelementptr inbounds [6 x i8], [6 x i8]* %multi_data, i64 0, i64 0, !dbg !8397
  %23 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !8399
  %call10 = call i32 %20(%struct.alps_fields* %21, i8* %arraydecay9, %struct.psmouse* %23) #10, !dbg !8393
  br label %if.end, !dbg !8400

if.else:                                          ; preds = %if.then
  %24 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !8401
  %multi_packet11 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %24, i32 0, i32 25, !dbg !8403
  store i32 0, i32* %multi_packet11, align 4, !dbg !8404
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then7
  br label %if.end12, !dbg !8405

if.end12:                                         ; preds = %if.end, %entry
  %25 = load %struct.alps_fields*, %struct.alps_fields** %f, align 8, !dbg !8406
  %is_mp13 = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %25, i32 0, i32 6, !dbg !8408
  %bf.load14 = load i8, i8* %is_mp13, align 4, !dbg !8408
  %bf.lshr15 = lshr i8 %bf.load14, 1, !dbg !8408
  %bf.clear16 = and i8 %bf.lshr15, 1, !dbg !8408
  %bf.cast17 = zext i8 %bf.clear16 to i32, !dbg !8408
  %tobool18 = icmp ne i32 %bf.cast17, 0, !dbg !8406
  br i1 %tobool18, label %if.then19, label %if.end20, !dbg !8409

if.then19:                                        ; preds = %if.end12
  br label %return, !dbg !8410

if.end20:                                         ; preds = %if.end12
  %26 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !8411
  %multi_packet21 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %26, i32 0, i32 25, !dbg !8413
  %27 = load i32, i32* %multi_packet21, align 4, !dbg !8413
  %tobool22 = icmp ne i32 %27, 0, !dbg !8411
  br i1 %tobool22, label %if.end31, label %land.lhs.true, !dbg !8414

land.lhs.true:                                    ; preds = %if.end20
  %28 = load %struct.alps_fields*, %struct.alps_fields** %f, align 8, !dbg !8415
  %first_mp = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %28, i32 0, i32 6, !dbg !8416
  %bf.load23 = load i8, i8* %first_mp, align 4, !dbg !8416
  %bf.clear24 = and i8 %bf.load23, 1, !dbg !8416
  %bf.cast25 = zext i8 %bf.clear24 to i32, !dbg !8416
  %tobool26 = icmp ne i32 %bf.cast25, 0, !dbg !8415
  br i1 %tobool26, label %if.then27, label %if.end31, !dbg !8417

if.then27:                                        ; preds = %land.lhs.true
  %29 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !8418
  %multi_packet28 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %29, i32 0, i32 25, !dbg !8420
  store i32 1, i32* %multi_packet28, align 4, !dbg !8421
  %30 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !8422
  %multi_data29 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %30, i32 0, i32 27, !dbg !8423
  %arraydecay30 = getelementptr inbounds [6 x i8], [6 x i8]* %multi_data29, i64 0, i64 0, !dbg !8424
  %31 = load i8*, i8** %packet, align 8, !dbg !8425
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %arraydecay30, i8* align 1 %31, i64 6, i1 false), !dbg !8424
  br label %return, !dbg !8426

if.end31:                                         ; preds = %land.lhs.true, %if.end20
  %32 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !8427
  %multi_packet32 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %32, i32 0, i32 25, !dbg !8428
  store i32 0, i32* %multi_packet32, align 4, !dbg !8429
  %33 = load i8*, i8** %packet, align 8, !dbg !8430
  %call33 = call i32 @alps_get_pkt_id_ss4_v2(i8* %33) #10, !dbg !8432
  %cmp = icmp eq i32 %call33, 4, !dbg !8433
  br i1 %cmp, label %if.then34, label %if.end71, !dbg !8434

if.then34:                                        ; preds = %if.end31
  %34 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !8435
  %flags = getelementptr inbounds %struct.alps_data, %struct.alps_data* %34, i32 0, i32 13, !dbg !8438
  %35 = load i32, i32* %flags, align 8, !dbg !8438
  %and = and i32 %35, 2, !dbg !8439
  %tobool35 = icmp ne i32 %and, 0, !dbg !8439
  br i1 %tobool35, label %if.end38, label %if.then36, !dbg !8440

if.then36:                                        ; preds = %if.then34
  %36 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !8441
  %ps2dev = getelementptr inbounds %struct.psmouse, %struct.psmouse* %36, i32 0, i32 2, !dbg !8441
  %serio = getelementptr inbounds %struct.ps2dev, %struct.ps2dev* %ps2dev, i32 0, i32 0, !dbg !8441
  %37 = load %struct.serio*, %struct.serio** %serio, align 8, !dbg !8441
  %dev37 = getelementptr inbounds %struct.serio, %struct.serio* %37, i32 0, i32 18, !dbg !8441
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev37, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.24, i64 0, i64 0)) #11, !dbg !8441
  br label %return, !dbg !8443

if.end38:                                         ; preds = %if.then34
  %38 = load %struct.input_dev*, %struct.input_dev** %dev23, align 8, !dbg !8444
  %39 = load i8*, i8** %packet, align 8, !dbg !8445
  %arrayidx = getelementptr i8, i8* %39, i64 0, !dbg !8445
  %40 = load i8, i8* %arrayidx, align 1, !dbg !8445
  %conv = zext i8 %40 to i32, !dbg !8445
  %and39 = and i32 %conv, 1, !dbg !8445
  %shl = shl i32 %and39, 7, !dbg !8445
  %41 = load i8*, i8** %packet, align 8, !dbg !8445
  %arrayidx40 = getelementptr i8, i8* %41, i64 1, !dbg !8445
  %42 = load i8, i8* %arrayidx40, align 1, !dbg !8445
  %conv41 = zext i8 %42 to i32, !dbg !8445
  %and42 = and i32 %conv41, 127, !dbg !8445
  %or = or i32 %shl, %and42, !dbg !8445
  %conv43 = trunc i32 %or to i8, !dbg !8445
  %conv44 = sext i8 %conv43 to i32, !dbg !8445
  call void @input_report_rel(%struct.input_dev* %38, i32 0, i32 %conv44) #10, !dbg !8446
  %43 = load %struct.input_dev*, %struct.input_dev** %dev23, align 8, !dbg !8447
  %44 = load i8*, i8** %packet, align 8, !dbg !8448
  %arrayidx45 = getelementptr i8, i8* %44, i64 3, !dbg !8448
  %45 = load i8, i8* %arrayidx45, align 1, !dbg !8448
  %conv46 = zext i8 %45 to i32, !dbg !8448
  %and47 = and i32 %conv46, 1, !dbg !8448
  %shl48 = shl i32 %and47, 7, !dbg !8448
  %46 = load i8*, i8** %packet, align 8, !dbg !8448
  %arrayidx49 = getelementptr i8, i8* %46, i64 2, !dbg !8448
  %47 = load i8, i8* %arrayidx49, align 1, !dbg !8448
  %conv50 = zext i8 %47 to i32, !dbg !8448
  %and51 = and i32 %conv50, 127, !dbg !8448
  %or52 = or i32 %shl48, %and51, !dbg !8448
  %conv53 = trunc i32 %or52 to i8, !dbg !8448
  %conv54 = sext i8 %conv53 to i32, !dbg !8448
  %sub = sub i32 0, %conv54, !dbg !8448
  call void @input_report_rel(%struct.input_dev* %43, i32 1, i32 %sub) #10, !dbg !8449
  %48 = load %struct.input_dev*, %struct.input_dev** %dev23, align 8, !dbg !8450
  %49 = load i8*, i8** %packet, align 8, !dbg !8451
  %arrayidx55 = getelementptr i8, i8* %49, i64 4, !dbg !8451
  %50 = load i8, i8* %arrayidx55, align 1, !dbg !8451
  %conv56 = zext i8 %50 to i32, !dbg !8451
  %and57 = and i32 %conv56, 127, !dbg !8451
  %conv58 = trunc i32 %and57 to i8, !dbg !8451
  %conv59 = sext i8 %conv58 to i32, !dbg !8451
  call void @input_report_abs(%struct.input_dev* %48, i32 24, i32 %conv59) #10, !dbg !8452
  %51 = load %struct.input_dev*, %struct.input_dev** %dev23, align 8, !dbg !8453
  %52 = load %struct.alps_fields*, %struct.alps_fields** %f, align 8, !dbg !8454
  %ts_left = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %52, i32 0, i32 6, !dbg !8455
  %bf.load60 = load i8, i8* %ts_left, align 4, !dbg !8455
  %bf.lshr61 = lshr i8 %bf.load60, 5, !dbg !8455
  %bf.clear62 = and i8 %bf.lshr61, 1, !dbg !8455
  %bf.cast63 = zext i8 %bf.clear62 to i32, !dbg !8455
  call void @input_report_key(%struct.input_dev* %51, i32 272, i32 %bf.cast63) #10, !dbg !8456
  %53 = load %struct.input_dev*, %struct.input_dev** %dev23, align 8, !dbg !8457
  %54 = load %struct.alps_fields*, %struct.alps_fields** %f, align 8, !dbg !8458
  %ts_right = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %54, i32 0, i32 6, !dbg !8459
  %bf.load64 = load i8, i8* %ts_right, align 4, !dbg !8459
  %bf.lshr65 = lshr i8 %bf.load64, 6, !dbg !8459
  %bf.clear66 = and i8 %bf.lshr65, 1, !dbg !8459
  %bf.cast67 = zext i8 %bf.clear66 to i32, !dbg !8459
  call void @input_report_key(%struct.input_dev* %53, i32 273, i32 %bf.cast67) #10, !dbg !8460
  %55 = load %struct.input_dev*, %struct.input_dev** %dev23, align 8, !dbg !8461
  %56 = load %struct.alps_fields*, %struct.alps_fields** %f, align 8, !dbg !8462
  %ts_middle = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %56, i32 0, i32 6, !dbg !8463
  %bf.load68 = load i8, i8* %ts_middle, align 4, !dbg !8463
  %bf.lshr69 = lshr i8 %bf.load68, 7, !dbg !8463
  %bf.cast70 = zext i8 %bf.lshr69 to i32, !dbg !8463
  call void @input_report_key(%struct.input_dev* %55, i32 274, i32 %bf.cast70) #10, !dbg !8464
  %57 = load %struct.input_dev*, %struct.input_dev** %dev23, align 8, !dbg !8465
  call void @input_sync(%struct.input_dev* %57) #10, !dbg !8466
  br label %return, !dbg !8467

if.end71:                                         ; preds = %if.end31
  %58 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !8468
  %59 = load %struct.alps_fields*, %struct.alps_fields** %f, align 8, !dbg !8469
  %fingers = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %59, i32 0, i32 2, !dbg !8470
  %60 = load i32, i32* %fingers, align 4, !dbg !8470
  %cmp72 = icmp ule i32 %60, 4, !dbg !8471
  br i1 %cmp72, label %cond.true, label %cond.false, !dbg !8472

cond.true:                                        ; preds = %if.end71
  %61 = load %struct.alps_fields*, %struct.alps_fields** %f, align 8, !dbg !8473
  %fingers74 = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %61, i32 0, i32 2, !dbg !8474
  %62 = load i32, i32* %fingers74, align 4, !dbg !8474
  br label %cond.end, !dbg !8472

cond.false:                                       ; preds = %if.end71
  br label %cond.end, !dbg !8472

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %62, %cond.true ], [ 4, %cond.false ], !dbg !8472
  call void @alps_report_mt_data(%struct.psmouse* %58, i32 %cond) #10, !dbg !8475
  %63 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !8476
  %64 = load %struct.alps_fields*, %struct.alps_fields** %f, align 8, !dbg !8477
  %fingers75 = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %64, i32 0, i32 2, !dbg !8478
  %65 = load i32, i32* %fingers75, align 4, !dbg !8478
  call void @input_mt_report_finger_count(%struct.input_dev* %63, i32 %65) #10, !dbg !8479
  %66 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !8480
  %67 = load %struct.alps_fields*, %struct.alps_fields** %f, align 8, !dbg !8481
  %left = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %67, i32 0, i32 6, !dbg !8482
  %bf.load76 = load i8, i8* %left, align 4, !dbg !8482
  %bf.lshr77 = lshr i8 %bf.load76, 2, !dbg !8482
  %bf.clear78 = and i8 %bf.lshr77, 1, !dbg !8482
  %bf.cast79 = zext i8 %bf.clear78 to i32, !dbg !8482
  call void @input_report_key(%struct.input_dev* %66, i32 272, i32 %bf.cast79) #10, !dbg !8483
  %68 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !8484
  %69 = load %struct.alps_fields*, %struct.alps_fields** %f, align 8, !dbg !8485
  %right = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %69, i32 0, i32 6, !dbg !8486
  %bf.load80 = load i8, i8* %right, align 4, !dbg !8486
  %bf.lshr81 = lshr i8 %bf.load80, 3, !dbg !8486
  %bf.clear82 = and i8 %bf.lshr81, 1, !dbg !8486
  %bf.cast83 = zext i8 %bf.clear82 to i32, !dbg !8486
  call void @input_report_key(%struct.input_dev* %68, i32 273, i32 %bf.cast83) #10, !dbg !8487
  %70 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !8488
  %71 = load %struct.alps_fields*, %struct.alps_fields** %f, align 8, !dbg !8489
  %middle = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %71, i32 0, i32 6, !dbg !8490
  %bf.load84 = load i8, i8* %middle, align 4, !dbg !8490
  %bf.lshr85 = lshr i8 %bf.load84, 4, !dbg !8490
  %bf.clear86 = and i8 %bf.lshr85, 1, !dbg !8490
  %bf.cast87 = zext i8 %bf.clear86 to i32, !dbg !8490
  call void @input_report_key(%struct.input_dev* %70, i32 274, i32 %bf.cast87) #10, !dbg !8491
  %72 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !8492
  %73 = load %struct.alps_fields*, %struct.alps_fields** %f, align 8, !dbg !8493
  %pressure = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %73, i32 0, i32 3, !dbg !8494
  %74 = load i32, i32* %pressure, align 4, !dbg !8494
  call void @input_report_abs(%struct.input_dev* %72, i32 24, i32 %74) #10, !dbg !8495
  %75 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !8496
  call void @input_sync(%struct.input_dev* %75) #10, !dbg !8497
  br label %return, !dbg !8498

return:                                           ; preds = %cond.end, %if.end38, %if.then36, %if.then27, %if.then19
  ret void, !dbg !8498
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @alps_decode_ss4_v2(%struct.alps_fields* %f, i8* %p, %struct.psmouse* %psmouse) #0 !dbg !8499 {
entry:
  %f.addr = alloca %struct.alps_fields*, align 8
  %p.addr = alloca i8*, align 8
  %psmouse.addr = alloca %struct.psmouse*, align 8
  %priv = alloca %struct.alps_data*, align 8
  %pkt_id = alloca i32, align 4
  %no_data_x = alloca i32, align 4
  %no_data_y = alloca i32, align 4
  store %struct.alps_fields* %f, %struct.alps_fields** %f.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.alps_fields** %f.addr, metadata !8500, metadata !DIExpression()), !dbg !8501
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !8502, metadata !DIExpression()), !dbg !8503
  store %struct.psmouse* %psmouse, %struct.psmouse** %psmouse.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.psmouse** %psmouse.addr, metadata !8504, metadata !DIExpression()), !dbg !8505
  call void @llvm.dbg.declare(metadata %struct.alps_data** %priv, metadata !8506, metadata !DIExpression()), !dbg !8507
  %0 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !8508
  %private = getelementptr inbounds %struct.psmouse, %struct.psmouse* %0, i32 0, i32 0, !dbg !8509
  %1 = load i8*, i8** %private, align 8, !dbg !8509
  %2 = bitcast i8* %1 to %struct.alps_data*, !dbg !8508
  store %struct.alps_data* %2, %struct.alps_data** %priv, align 8, !dbg !8507
  call void @llvm.dbg.declare(metadata i32* %pkt_id, metadata !8510, metadata !DIExpression()), !dbg !8511
  call void @llvm.dbg.declare(metadata i32* %no_data_x, metadata !8512, metadata !DIExpression()), !dbg !8513
  call void @llvm.dbg.declare(metadata i32* %no_data_y, metadata !8514, metadata !DIExpression()), !dbg !8515
  %3 = load i8*, i8** %p.addr, align 8, !dbg !8516
  %call = call i32 @alps_get_pkt_id_ss4_v2(i8* %3) #10, !dbg !8517
  store i32 %call, i32* %pkt_id, align 4, !dbg !8518
  %4 = load i32, i32* %pkt_id, align 4, !dbg !8519
  switch i32 %4, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb53
    i32 3, label %sw.bb328
    i32 4, label %sw.bb621
    i32 0, label %sw.bb628
  ], !dbg !8520

sw.bb:                                            ; preds = %entry
  %5 = load i8*, i8** %p.addr, align 8, !dbg !8521
  %arrayidx = getelementptr i8, i8* %5, i64 0, !dbg !8521
  %6 = load i8, i8* %arrayidx, align 1, !dbg !8521
  %conv = zext i8 %6 to i32, !dbg !8521
  %and = and i32 %conv, 7, !dbg !8521
  %7 = load i8*, i8** %p.addr, align 8, !dbg !8521
  %arrayidx1 = getelementptr i8, i8* %7, i64 1, !dbg !8521
  %8 = load i8, i8* %arrayidx1, align 1, !dbg !8521
  %conv2 = zext i8 %8 to i32, !dbg !8521
  %shl = shl i32 %conv2, 3, !dbg !8521
  %and3 = and i32 %shl, 120, !dbg !8521
  %or = or i32 %and, %and3, !dbg !8521
  %9 = load i8*, i8** %p.addr, align 8, !dbg !8521
  %arrayidx4 = getelementptr i8, i8* %9, i64 1, !dbg !8521
  %10 = load i8, i8* %arrayidx4, align 1, !dbg !8521
  %conv5 = zext i8 %10 to i32, !dbg !8521
  %shl6 = shl i32 %conv5, 2, !dbg !8521
  %and7 = and i32 %shl6, 896, !dbg !8521
  %or8 = or i32 %or, %and7, !dbg !8521
  %11 = load i8*, i8** %p.addr, align 8, !dbg !8521
  %arrayidx9 = getelementptr i8, i8* %11, i64 2, !dbg !8521
  %12 = load i8, i8* %arrayidx9, align 1, !dbg !8521
  %conv10 = zext i8 %12 to i32, !dbg !8521
  %shl11 = shl i32 %conv10, 5, !dbg !8521
  %and12 = and i32 %shl11, 7168, !dbg !8521
  %or13 = or i32 %or8, %and12, !dbg !8521
  %conv14 = trunc i32 %or13 to i16, !dbg !8521
  %13 = load %struct.alps_fields*, %struct.alps_fields** %f.addr, align 8, !dbg !8523
  %mt = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %13, i32 0, i32 5, !dbg !8524
  %arrayidx15 = getelementptr [4 x %struct.input_mt_pos], [4 x %struct.input_mt_pos]* %mt, i64 0, i64 0, !dbg !8523
  %x = getelementptr inbounds %struct.input_mt_pos, %struct.input_mt_pos* %arrayidx15, i32 0, i32 0, !dbg !8525
  store i16 %conv14, i16* %x, align 4, !dbg !8526
  %14 = load i8*, i8** %p.addr, align 8, !dbg !8527
  %arrayidx16 = getelementptr i8, i8* %14, i64 2, !dbg !8527
  %15 = load i8, i8* %arrayidx16, align 1, !dbg !8527
  %conv17 = zext i8 %15 to i32, !dbg !8527
  %and18 = and i32 %conv17, 15, !dbg !8527
  %16 = load i8*, i8** %p.addr, align 8, !dbg !8527
  %arrayidx19 = getelementptr i8, i8* %16, i64 3, !dbg !8527
  %17 = load i8, i8* %arrayidx19, align 1, !dbg !8527
  %conv20 = zext i8 %17 to i32, !dbg !8527
  %shr = ashr i32 %conv20, 2, !dbg !8527
  %and21 = and i32 %shr, 48, !dbg !8527
  %or22 = or i32 %and18, %and21, !dbg !8527
  %18 = load i8*, i8** %p.addr, align 8, !dbg !8527
  %arrayidx23 = getelementptr i8, i8* %18, i64 4, !dbg !8527
  %19 = load i8, i8* %arrayidx23, align 1, !dbg !8527
  %conv24 = zext i8 %19 to i32, !dbg !8527
  %shl25 = shl i32 %conv24, 6, !dbg !8527
  %and26 = and i32 %shl25, 960, !dbg !8527
  %or27 = or i32 %or22, %and26, !dbg !8527
  %20 = load i8*, i8** %p.addr, align 8, !dbg !8527
  %arrayidx28 = getelementptr i8, i8* %20, i64 4, !dbg !8527
  %21 = load i8, i8* %arrayidx28, align 1, !dbg !8527
  %conv29 = zext i8 %21 to i32, !dbg !8527
  %shl30 = shl i32 %conv29, 5, !dbg !8527
  %and31 = and i32 %shl30, 3072, !dbg !8527
  %or32 = or i32 %or27, %and31, !dbg !8527
  %conv33 = trunc i32 %or32 to i16, !dbg !8527
  %22 = load %struct.alps_fields*, %struct.alps_fields** %f.addr, align 8, !dbg !8528
  %mt34 = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %22, i32 0, i32 5, !dbg !8529
  %arrayidx35 = getelementptr [4 x %struct.input_mt_pos], [4 x %struct.input_mt_pos]* %mt34, i64 0, i64 0, !dbg !8528
  %y = getelementptr inbounds %struct.input_mt_pos, %struct.input_mt_pos* %arrayidx35, i32 0, i32 1, !dbg !8530
  store i16 %conv33, i16* %y, align 2, !dbg !8531
  %23 = load i8*, i8** %p.addr, align 8, !dbg !8532
  %arrayidx36 = getelementptr i8, i8* %23, i64 5, !dbg !8532
  %24 = load i8, i8* %arrayidx36, align 1, !dbg !8532
  %conv37 = zext i8 %24 to i32, !dbg !8532
  %and38 = and i32 %conv37, 15, !dbg !8532
  %25 = load i8*, i8** %p.addr, align 8, !dbg !8532
  %arrayidx39 = getelementptr i8, i8* %25, i64 5, !dbg !8532
  %26 = load i8, i8* %arrayidx39, align 1, !dbg !8532
  %conv40 = zext i8 %26 to i32, !dbg !8532
  %shr41 = ashr i32 %conv40, 1, !dbg !8532
  %and42 = and i32 %shr41, 112, !dbg !8532
  %or43 = or i32 %and38, %and42, !dbg !8532
  %27 = load i8*, i8** %p.addr, align 8, !dbg !8532
  %arrayidx44 = getelementptr i8, i8* %27, i64 4, !dbg !8532
  %28 = load i8, i8* %arrayidx44, align 1, !dbg !8532
  %conv45 = zext i8 %28 to i32, !dbg !8532
  %and46 = and i32 %conv45, 128, !dbg !8532
  %or47 = or i32 %or43, %and46, !dbg !8532
  %mul = mul i32 %or47, 2, !dbg !8533
  %and48 = and i32 %mul, 127, !dbg !8534
  %29 = load %struct.alps_fields*, %struct.alps_fields** %f.addr, align 8, !dbg !8535
  %pressure = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %29, i32 0, i32 3, !dbg !8536
  store i32 %and48, i32* %pressure, align 4, !dbg !8537
  %30 = load %struct.alps_fields*, %struct.alps_fields** %f.addr, align 8, !dbg !8538
  %pressure49 = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %30, i32 0, i32 3, !dbg !8539
  %31 = load i32, i32* %pressure49, align 4, !dbg !8539
  %cmp = icmp sgt i32 %31, 0, !dbg !8540
  %32 = zext i1 %cmp to i64, !dbg !8538
  %cond = select i1 %cmp, i32 1, i32 0, !dbg !8538
  %33 = load %struct.alps_fields*, %struct.alps_fields** %f.addr, align 8, !dbg !8541
  %fingers = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %33, i32 0, i32 2, !dbg !8542
  store i32 %cond, i32* %fingers, align 4, !dbg !8543
  %34 = load %struct.alps_fields*, %struct.alps_fields** %f.addr, align 8, !dbg !8544
  %first_mp = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %34, i32 0, i32 6, !dbg !8545
  %bf.load = load i8, i8* %first_mp, align 4, !dbg !8546
  %bf.clear = and i8 %bf.load, -2, !dbg !8546
  store i8 %bf.clear, i8* %first_mp, align 4, !dbg !8546
  %35 = load %struct.alps_fields*, %struct.alps_fields** %f.addr, align 8, !dbg !8547
  %is_mp = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %35, i32 0, i32 6, !dbg !8548
  %bf.load51 = load i8, i8* %is_mp, align 4, !dbg !8549
  %bf.clear52 = and i8 %bf.load51, -3, !dbg !8549
  store i8 %bf.clear52, i8* %is_mp, align 4, !dbg !8549
  br label %sw.epilog, !dbg !8550

sw.bb53:                                          ; preds = %entry
  %36 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !8551
  %flags = getelementptr inbounds %struct.alps_data, %struct.alps_data* %36, i32 0, i32 13, !dbg !8553
  %37 = load i32, i32* %flags, align 8, !dbg !8553
  %and54 = and i32 %37, 512, !dbg !8554
  %tobool = icmp ne i32 %and54, 0, !dbg !8554
  br i1 %tobool, label %if.then, label %if.else189, !dbg !8555

if.then:                                          ; preds = %sw.bb53
  %38 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !8556
  %dev_id = getelementptr inbounds %struct.alps_data, %struct.alps_data* %38, i32 0, i32 11, !dbg !8556
  %arrayidx55 = getelementptr [3 x i8], [3 x i8]* %dev_id, i64 0, i64 0, !dbg !8556
  %39 = load i8, i8* %arrayidx55, align 8, !dbg !8556
  %conv56 = zext i8 %39 to i32, !dbg !8556
  %cmp57 = icmp eq i32 %conv56, 115, !dbg !8556
  br i1 %cmp57, label %land.lhs.true, label %if.else, !dbg !8556

land.lhs.true:                                    ; preds = %if.then
  %40 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !8556
  %dev_id59 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %40, i32 0, i32 11, !dbg !8556
  %arrayidx60 = getelementptr [3 x i8], [3 x i8]* %dev_id59, i64 0, i64 1, !dbg !8556
  %41 = load i8, i8* %arrayidx60, align 1, !dbg !8556
  %conv61 = zext i8 %41 to i32, !dbg !8556
  %cmp62 = icmp eq i32 %conv61, 3, !dbg !8556
  br i1 %cmp62, label %land.lhs.true64, label %if.else, !dbg !8556

land.lhs.true64:                                  ; preds = %land.lhs.true
  %42 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !8556
  %dev_id65 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %42, i32 0, i32 11, !dbg !8556
  %arrayidx66 = getelementptr [3 x i8], [3 x i8]* %dev_id65, i64 0, i64 2, !dbg !8556
  %43 = load i8, i8* %arrayidx66, align 2, !dbg !8556
  %conv67 = zext i8 %43 to i32, !dbg !8556
  %cmp68 = icmp eq i32 %conv67, 40, !dbg !8556
  br i1 %cmp68, label %if.then70, label %if.else, !dbg !8559

if.then70:                                        ; preds = %land.lhs.true64
  %44 = load i8*, i8** %p.addr, align 8, !dbg !8560
  %arrayidx71 = getelementptr i8, i8* %44, i64 0, !dbg !8560
  %45 = load i8, i8* %arrayidx71, align 1, !dbg !8560
  %conv72 = zext i8 %45 to i32, !dbg !8560
  %shl73 = shl i32 %conv72, 4, !dbg !8560
  %and74 = and i32 %shl73, 112, !dbg !8560
  %46 = load i8*, i8** %p.addr, align 8, !dbg !8560
  %arrayidx75 = getelementptr i8, i8* %46, i64 1, !dbg !8560
  %47 = load i8, i8* %arrayidx75, align 1, !dbg !8560
  %conv76 = zext i8 %47 to i32, !dbg !8560
  %shl77 = shl i32 %conv76, 4, !dbg !8560
  %and78 = and i32 %shl77, 3968, !dbg !8560
  %or79 = or i32 %and74, %and78, !dbg !8560
  %48 = load i8*, i8** %p.addr, align 8, !dbg !8560
  %arrayidx80 = getelementptr i8, i8* %48, i64 0, !dbg !8560
  %49 = load i8, i8* %arrayidx80, align 1, !dbg !8560
  %conv81 = zext i8 %49 to i32, !dbg !8560
  %shr82 = ashr i32 %conv81, 4, !dbg !8560
  %and83 = and i32 %shr82, 8, !dbg !8560
  %or84 = or i32 %or79, %and83, !dbg !8560
  %conv85 = trunc i32 %or84 to i16, !dbg !8560
  %50 = load %struct.alps_fields*, %struct.alps_fields** %f.addr, align 8, !dbg !8562
  %mt86 = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %50, i32 0, i32 5, !dbg !8563
  %arrayidx87 = getelementptr [4 x %struct.input_mt_pos], [4 x %struct.input_mt_pos]* %mt86, i64 0, i64 0, !dbg !8562
  %x88 = getelementptr inbounds %struct.input_mt_pos, %struct.input_mt_pos* %arrayidx87, i32 0, i32 0, !dbg !8564
  store i16 %conv85, i16* %x88, align 4, !dbg !8565
  %51 = load i8*, i8** %p.addr, align 8, !dbg !8566
  %arrayidx89 = getelementptr i8, i8* %51, i64 3, !dbg !8566
  %52 = load i8, i8* %arrayidx89, align 1, !dbg !8566
  %conv90 = zext i8 %52 to i32, !dbg !8566
  %shl91 = shl i32 %conv90, 4, !dbg !8566
  %and92 = and i32 %shl91, 112, !dbg !8566
  %53 = load i8*, i8** %p.addr, align 8, !dbg !8566
  %arrayidx93 = getelementptr i8, i8* %53, i64 4, !dbg !8566
  %54 = load i8, i8* %arrayidx93, align 1, !dbg !8566
  %conv94 = zext i8 %54 to i32, !dbg !8566
  %shl95 = shl i32 %conv94, 4, !dbg !8566
  %and96 = and i32 %shl95, 3968, !dbg !8566
  %or97 = or i32 %and92, %and96, !dbg !8566
  %55 = load i8*, i8** %p.addr, align 8, !dbg !8566
  %arrayidx98 = getelementptr i8, i8* %55, i64 3, !dbg !8566
  %56 = load i8, i8* %arrayidx98, align 1, !dbg !8566
  %conv99 = zext i8 %56 to i32, !dbg !8566
  %shr100 = ashr i32 %conv99, 4, !dbg !8566
  %and101 = and i32 %shr100, 8, !dbg !8566
  %or102 = or i32 %or97, %and101, !dbg !8566
  %conv103 = trunc i32 %or102 to i16, !dbg !8566
  %57 = load %struct.alps_fields*, %struct.alps_fields** %f.addr, align 8, !dbg !8567
  %mt104 = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %57, i32 0, i32 5, !dbg !8568
  %arrayidx105 = getelementptr [4 x %struct.input_mt_pos], [4 x %struct.input_mt_pos]* %mt104, i64 0, i64 1, !dbg !8567
  %x106 = getelementptr inbounds %struct.input_mt_pos, %struct.input_mt_pos* %arrayidx105, i32 0, i32 0, !dbg !8569
  store i16 %conv103, i16* %x106, align 4, !dbg !8570
  br label %if.end, !dbg !8571

if.else:                                          ; preds = %land.lhs.true64, %land.lhs.true, %if.then
  %58 = load i8*, i8** %p.addr, align 8, !dbg !8572
  %arrayidx107 = getelementptr i8, i8* %58, i64 0, !dbg !8572
  %59 = load i8, i8* %arrayidx107, align 1, !dbg !8572
  %conv108 = zext i8 %59 to i32, !dbg !8572
  %shl109 = shl i32 %conv108, 5, !dbg !8572
  %and110 = and i32 %shl109, 224, !dbg !8572
  %60 = load i8*, i8** %p.addr, align 8, !dbg !8572
  %arrayidx111 = getelementptr i8, i8* %60, i64 1, !dbg !8572
  %61 = load i8, i8* %arrayidx111, align 1, !dbg !8572
  %conv112 = zext i8 %61 to i32, !dbg !8572
  %shl113 = shl i32 %conv112, 5, !dbg !8572
  %and114 = and i32 %shl113, 7936, !dbg !8572
  %or115 = or i32 %and110, %and114, !dbg !8572
  %62 = load i8*, i8** %p.addr, align 8, !dbg !8572
  %arrayidx116 = getelementptr i8, i8* %62, i64 0, !dbg !8572
  %63 = load i8, i8* %arrayidx116, align 1, !dbg !8572
  %conv117 = zext i8 %63 to i32, !dbg !8572
  %shr118 = ashr i32 %conv117, 3, !dbg !8572
  %and119 = and i32 %shr118, 16, !dbg !8572
  %or120 = or i32 %or115, %and119, !dbg !8572
  %conv121 = trunc i32 %or120 to i16, !dbg !8572
  %64 = load %struct.alps_fields*, %struct.alps_fields** %f.addr, align 8, !dbg !8574
  %mt122 = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %64, i32 0, i32 5, !dbg !8575
  %arrayidx123 = getelementptr [4 x %struct.input_mt_pos], [4 x %struct.input_mt_pos]* %mt122, i64 0, i64 0, !dbg !8574
  %x124 = getelementptr inbounds %struct.input_mt_pos, %struct.input_mt_pos* %arrayidx123, i32 0, i32 0, !dbg !8576
  store i16 %conv121, i16* %x124, align 4, !dbg !8577
  %65 = load i8*, i8** %p.addr, align 8, !dbg !8578
  %arrayidx125 = getelementptr i8, i8* %65, i64 3, !dbg !8578
  %66 = load i8, i8* %arrayidx125, align 1, !dbg !8578
  %conv126 = zext i8 %66 to i32, !dbg !8578
  %shl127 = shl i32 %conv126, 5, !dbg !8578
  %and128 = and i32 %shl127, 224, !dbg !8578
  %67 = load i8*, i8** %p.addr, align 8, !dbg !8578
  %arrayidx129 = getelementptr i8, i8* %67, i64 4, !dbg !8578
  %68 = load i8, i8* %arrayidx129, align 1, !dbg !8578
  %conv130 = zext i8 %68 to i32, !dbg !8578
  %shl131 = shl i32 %conv130, 5, !dbg !8578
  %and132 = and i32 %shl131, 7936, !dbg !8578
  %or133 = or i32 %and128, %and132, !dbg !8578
  %69 = load i8*, i8** %p.addr, align 8, !dbg !8578
  %arrayidx134 = getelementptr i8, i8* %69, i64 3, !dbg !8578
  %70 = load i8, i8* %arrayidx134, align 1, !dbg !8578
  %conv135 = zext i8 %70 to i32, !dbg !8578
  %shr136 = ashr i32 %conv135, 3, !dbg !8578
  %and137 = and i32 %shr136, 16, !dbg !8578
  %or138 = or i32 %or133, %and137, !dbg !8578
  %conv139 = trunc i32 %or138 to i16, !dbg !8578
  %71 = load %struct.alps_fields*, %struct.alps_fields** %f.addr, align 8, !dbg !8579
  %mt140 = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %71, i32 0, i32 5, !dbg !8580
  %arrayidx141 = getelementptr [4 x %struct.input_mt_pos], [4 x %struct.input_mt_pos]* %mt140, i64 0, i64 1, !dbg !8579
  %x142 = getelementptr inbounds %struct.input_mt_pos, %struct.input_mt_pos* %arrayidx141, i32 0, i32 0, !dbg !8581
  store i16 %conv139, i16* %x142, align 4, !dbg !8582
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then70
  %72 = load i8*, i8** %p.addr, align 8, !dbg !8583
  %arrayidx143 = getelementptr i8, i8* %72, i64 1, !dbg !8583
  %73 = load i8, i8* %arrayidx143, align 1, !dbg !8583
  %conv144 = zext i8 %73 to i32, !dbg !8583
  %shl145 = shl i32 %conv144, 3, !dbg !8583
  %and146 = and i32 %shl145, 16, !dbg !8583
  %74 = load i8*, i8** %p.addr, align 8, !dbg !8583
  %arrayidx147 = getelementptr i8, i8* %74, i64 2, !dbg !8583
  %75 = load i8, i8* %arrayidx147, align 1, !dbg !8583
  %conv148 = zext i8 %75 to i32, !dbg !8583
  %shl149 = shl i32 %conv148, 5, !dbg !8583
  %and150 = and i32 %shl149, 480, !dbg !8583
  %or151 = or i32 %and146, %and150, !dbg !8583
  %76 = load i8*, i8** %p.addr, align 8, !dbg !8583
  %arrayidx152 = getelementptr i8, i8* %76, i64 2, !dbg !8583
  %77 = load i8, i8* %arrayidx152, align 1, !dbg !8583
  %conv153 = zext i8 %77 to i32, !dbg !8583
  %shl154 = shl i32 %conv153, 4, !dbg !8583
  %and155 = and i32 %shl154, 3584, !dbg !8583
  %or156 = or i32 %or151, %and155, !dbg !8583
  %78 = load i8*, i8** %p.addr, align 8, !dbg !8583
  %arrayidx157 = getelementptr i8, i8* %78, i64 0, !dbg !8583
  %79 = load i8, i8* %arrayidx157, align 1, !dbg !8583
  %conv158 = zext i8 %79 to i32, !dbg !8583
  %shr159 = ashr i32 %conv158, 3, !dbg !8583
  %and160 = and i32 %shr159, 8, !dbg !8583
  %or161 = or i32 %or156, %and160, !dbg !8583
  %conv162 = trunc i32 %or161 to i16, !dbg !8583
  %80 = load %struct.alps_fields*, %struct.alps_fields** %f.addr, align 8, !dbg !8584
  %mt163 = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %80, i32 0, i32 5, !dbg !8585
  %arrayidx164 = getelementptr [4 x %struct.input_mt_pos], [4 x %struct.input_mt_pos]* %mt163, i64 0, i64 0, !dbg !8584
  %y165 = getelementptr inbounds %struct.input_mt_pos, %struct.input_mt_pos* %arrayidx164, i32 0, i32 1, !dbg !8586
  store i16 %conv162, i16* %y165, align 2, !dbg !8587
  %81 = load i8*, i8** %p.addr, align 8, !dbg !8588
  %arrayidx166 = getelementptr i8, i8* %81, i64 4, !dbg !8588
  %82 = load i8, i8* %arrayidx166, align 1, !dbg !8588
  %conv167 = zext i8 %82 to i32, !dbg !8588
  %shl168 = shl i32 %conv167, 3, !dbg !8588
  %and169 = and i32 %shl168, 16, !dbg !8588
  %83 = load i8*, i8** %p.addr, align 8, !dbg !8588
  %arrayidx170 = getelementptr i8, i8* %83, i64 5, !dbg !8588
  %84 = load i8, i8* %arrayidx170, align 1, !dbg !8588
  %conv171 = zext i8 %84 to i32, !dbg !8588
  %shl172 = shl i32 %conv171, 5, !dbg !8588
  %and173 = and i32 %shl172, 480, !dbg !8588
  %or174 = or i32 %and169, %and173, !dbg !8588
  %85 = load i8*, i8** %p.addr, align 8, !dbg !8588
  %arrayidx175 = getelementptr i8, i8* %85, i64 5, !dbg !8588
  %86 = load i8, i8* %arrayidx175, align 1, !dbg !8588
  %conv176 = zext i8 %86 to i32, !dbg !8588
  %shl177 = shl i32 %conv176, 4, !dbg !8588
  %and178 = and i32 %shl177, 3584, !dbg !8588
  %or179 = or i32 %or174, %and178, !dbg !8588
  %87 = load i8*, i8** %p.addr, align 8, !dbg !8588
  %arrayidx180 = getelementptr i8, i8* %87, i64 3, !dbg !8588
  %88 = load i8, i8* %arrayidx180, align 1, !dbg !8588
  %conv181 = zext i8 %88 to i32, !dbg !8588
  %shr182 = ashr i32 %conv181, 3, !dbg !8588
  %and183 = and i32 %shr182, 8, !dbg !8588
  %or184 = or i32 %or179, %and183, !dbg !8588
  %conv185 = trunc i32 %or184 to i16, !dbg !8588
  %89 = load %struct.alps_fields*, %struct.alps_fields** %f.addr, align 8, !dbg !8589
  %mt186 = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %89, i32 0, i32 5, !dbg !8590
  %arrayidx187 = getelementptr [4 x %struct.input_mt_pos], [4 x %struct.input_mt_pos]* %mt186, i64 0, i64 1, !dbg !8589
  %y188 = getelementptr inbounds %struct.input_mt_pos, %struct.input_mt_pos* %arrayidx187, i32 0, i32 1, !dbg !8591
  store i16 %conv185, i16* %y188, align 2, !dbg !8592
  br label %if.end298, !dbg !8593

if.else189:                                       ; preds = %sw.bb53
  %90 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !8594
  %dev_id190 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %90, i32 0, i32 11, !dbg !8594
  %arrayidx191 = getelementptr [3 x i8], [3 x i8]* %dev_id190, i64 0, i64 0, !dbg !8594
  %91 = load i8, i8* %arrayidx191, align 8, !dbg !8594
  %conv192 = zext i8 %91 to i32, !dbg !8594
  %cmp193 = icmp eq i32 %conv192, 115, !dbg !8594
  br i1 %cmp193, label %land.lhs.true195, label %if.else234, !dbg !8594

land.lhs.true195:                                 ; preds = %if.else189
  %92 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !8594
  %dev_id196 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %92, i32 0, i32 11, !dbg !8594
  %arrayidx197 = getelementptr [3 x i8], [3 x i8]* %dev_id196, i64 0, i64 1, !dbg !8594
  %93 = load i8, i8* %arrayidx197, align 1, !dbg !8594
  %conv198 = zext i8 %93 to i32, !dbg !8594
  %cmp199 = icmp eq i32 %conv198, 3, !dbg !8594
  br i1 %cmp199, label %land.lhs.true201, label %if.else234, !dbg !8594

land.lhs.true201:                                 ; preds = %land.lhs.true195
  %94 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !8594
  %dev_id202 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %94, i32 0, i32 11, !dbg !8594
  %arrayidx203 = getelementptr [3 x i8], [3 x i8]* %dev_id202, i64 0, i64 2, !dbg !8594
  %95 = load i8, i8* %arrayidx203, align 2, !dbg !8594
  %conv204 = zext i8 %95 to i32, !dbg !8594
  %cmp205 = icmp eq i32 %conv204, 40, !dbg !8594
  br i1 %cmp205, label %if.then207, label %if.else234, !dbg !8597

if.then207:                                       ; preds = %land.lhs.true201
  %96 = load i8*, i8** %p.addr, align 8, !dbg !8598
  %arrayidx208 = getelementptr i8, i8* %96, i64 0, !dbg !8598
  %97 = load i8, i8* %arrayidx208, align 1, !dbg !8598
  %conv209 = zext i8 %97 to i32, !dbg !8598
  %shl210 = shl i32 %conv209, 4, !dbg !8598
  %and211 = and i32 %shl210, 112, !dbg !8598
  %98 = load i8*, i8** %p.addr, align 8, !dbg !8598
  %arrayidx212 = getelementptr i8, i8* %98, i64 1, !dbg !8598
  %99 = load i8, i8* %arrayidx212, align 1, !dbg !8598
  %conv213 = zext i8 %99 to i32, !dbg !8598
  %shl214 = shl i32 %conv213, 4, !dbg !8598
  %and215 = and i32 %shl214, 3968, !dbg !8598
  %or216 = or i32 %and211, %and215, !dbg !8598
  %conv217 = trunc i32 %or216 to i16, !dbg !8598
  %100 = load %struct.alps_fields*, %struct.alps_fields** %f.addr, align 8, !dbg !8600
  %mt218 = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %100, i32 0, i32 5, !dbg !8601
  %arrayidx219 = getelementptr [4 x %struct.input_mt_pos], [4 x %struct.input_mt_pos]* %mt218, i64 0, i64 0, !dbg !8600
  %x220 = getelementptr inbounds %struct.input_mt_pos, %struct.input_mt_pos* %arrayidx219, i32 0, i32 0, !dbg !8602
  store i16 %conv217, i16* %x220, align 4, !dbg !8603
  %101 = load i8*, i8** %p.addr, align 8, !dbg !8604
  %arrayidx221 = getelementptr i8, i8* %101, i64 3, !dbg !8604
  %102 = load i8, i8* %arrayidx221, align 1, !dbg !8604
  %conv222 = zext i8 %102 to i32, !dbg !8604
  %shl223 = shl i32 %conv222, 4, !dbg !8604
  %and224 = and i32 %shl223, 112, !dbg !8604
  %103 = load i8*, i8** %p.addr, align 8, !dbg !8604
  %arrayidx225 = getelementptr i8, i8* %103, i64 4, !dbg !8604
  %104 = load i8, i8* %arrayidx225, align 1, !dbg !8604
  %conv226 = zext i8 %104 to i32, !dbg !8604
  %shl227 = shl i32 %conv226, 4, !dbg !8604
  %and228 = and i32 %shl227, 3968, !dbg !8604
  %or229 = or i32 %and224, %and228, !dbg !8604
  %conv230 = trunc i32 %or229 to i16, !dbg !8604
  %105 = load %struct.alps_fields*, %struct.alps_fields** %f.addr, align 8, !dbg !8605
  %mt231 = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %105, i32 0, i32 5, !dbg !8606
  %arrayidx232 = getelementptr [4 x %struct.input_mt_pos], [4 x %struct.input_mt_pos]* %mt231, i64 0, i64 1, !dbg !8605
  %x233 = getelementptr inbounds %struct.input_mt_pos, %struct.input_mt_pos* %arrayidx232, i32 0, i32 0, !dbg !8607
  store i16 %conv230, i16* %x233, align 4, !dbg !8608
  br label %if.end261, !dbg !8609

if.else234:                                       ; preds = %land.lhs.true201, %land.lhs.true195, %if.else189
  %106 = load i8*, i8** %p.addr, align 8, !dbg !8610
  %arrayidx235 = getelementptr i8, i8* %106, i64 0, !dbg !8610
  %107 = load i8, i8* %arrayidx235, align 1, !dbg !8610
  %conv236 = zext i8 %107 to i32, !dbg !8610
  %shl237 = shl i32 %conv236, 5, !dbg !8610
  %and238 = and i32 %shl237, 224, !dbg !8610
  %108 = load i8*, i8** %p.addr, align 8, !dbg !8610
  %arrayidx239 = getelementptr i8, i8* %108, i64 1, !dbg !8610
  %109 = load i8, i8* %arrayidx239, align 1, !dbg !8610
  %conv240 = zext i8 %109 to i32, !dbg !8610
  %shl241 = shl i32 %conv240, 5, !dbg !8610
  %and242 = and i32 %shl241, 7936, !dbg !8610
  %or243 = or i32 %and238, %and242, !dbg !8610
  %conv244 = trunc i32 %or243 to i16, !dbg !8610
  %110 = load %struct.alps_fields*, %struct.alps_fields** %f.addr, align 8, !dbg !8612
  %mt245 = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %110, i32 0, i32 5, !dbg !8613
  %arrayidx246 = getelementptr [4 x %struct.input_mt_pos], [4 x %struct.input_mt_pos]* %mt245, i64 0, i64 0, !dbg !8612
  %x247 = getelementptr inbounds %struct.input_mt_pos, %struct.input_mt_pos* %arrayidx246, i32 0, i32 0, !dbg !8614
  store i16 %conv244, i16* %x247, align 4, !dbg !8615
  %111 = load i8*, i8** %p.addr, align 8, !dbg !8616
  %arrayidx248 = getelementptr i8, i8* %111, i64 3, !dbg !8616
  %112 = load i8, i8* %arrayidx248, align 1, !dbg !8616
  %conv249 = zext i8 %112 to i32, !dbg !8616
  %shl250 = shl i32 %conv249, 5, !dbg !8616
  %and251 = and i32 %shl250, 224, !dbg !8616
  %113 = load i8*, i8** %p.addr, align 8, !dbg !8616
  %arrayidx252 = getelementptr i8, i8* %113, i64 4, !dbg !8616
  %114 = load i8, i8* %arrayidx252, align 1, !dbg !8616
  %conv253 = zext i8 %114 to i32, !dbg !8616
  %shl254 = shl i32 %conv253, 5, !dbg !8616
  %and255 = and i32 %shl254, 7936, !dbg !8616
  %or256 = or i32 %and251, %and255, !dbg !8616
  %conv257 = trunc i32 %or256 to i16, !dbg !8616
  %115 = load %struct.alps_fields*, %struct.alps_fields** %f.addr, align 8, !dbg !8617
  %mt258 = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %115, i32 0, i32 5, !dbg !8618
  %arrayidx259 = getelementptr [4 x %struct.input_mt_pos], [4 x %struct.input_mt_pos]* %mt258, i64 0, i64 1, !dbg !8617
  %x260 = getelementptr inbounds %struct.input_mt_pos, %struct.input_mt_pos* %arrayidx259, i32 0, i32 0, !dbg !8619
  store i16 %conv257, i16* %x260, align 4, !dbg !8620
  br label %if.end261

if.end261:                                        ; preds = %if.else234, %if.then207
  %116 = load i8*, i8** %p.addr, align 8, !dbg !8621
  %arrayidx262 = getelementptr i8, i8* %116, i64 1, !dbg !8621
  %117 = load i8, i8* %arrayidx262, align 1, !dbg !8621
  %conv263 = zext i8 %117 to i32, !dbg !8621
  %shl264 = shl i32 %conv263, 3, !dbg !8621
  %and265 = and i32 %shl264, 16, !dbg !8621
  %118 = load i8*, i8** %p.addr, align 8, !dbg !8621
  %arrayidx266 = getelementptr i8, i8* %118, i64 2, !dbg !8621
  %119 = load i8, i8* %arrayidx266, align 1, !dbg !8621
  %conv267 = zext i8 %119 to i32, !dbg !8621
  %shl268 = shl i32 %conv267, 5, !dbg !8621
  %and269 = and i32 %shl268, 480, !dbg !8621
  %or270 = or i32 %and265, %and269, !dbg !8621
  %120 = load i8*, i8** %p.addr, align 8, !dbg !8621
  %arrayidx271 = getelementptr i8, i8* %120, i64 2, !dbg !8621
  %121 = load i8, i8* %arrayidx271, align 1, !dbg !8621
  %conv272 = zext i8 %121 to i32, !dbg !8621
  %shl273 = shl i32 %conv272, 4, !dbg !8621
  %and274 = and i32 %shl273, 3584, !dbg !8621
  %or275 = or i32 %or270, %and274, !dbg !8621
  %conv276 = trunc i32 %or275 to i16, !dbg !8621
  %122 = load %struct.alps_fields*, %struct.alps_fields** %f.addr, align 8, !dbg !8622
  %mt277 = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %122, i32 0, i32 5, !dbg !8623
  %arrayidx278 = getelementptr [4 x %struct.input_mt_pos], [4 x %struct.input_mt_pos]* %mt277, i64 0, i64 0, !dbg !8622
  %y279 = getelementptr inbounds %struct.input_mt_pos, %struct.input_mt_pos* %arrayidx278, i32 0, i32 1, !dbg !8624
  store i16 %conv276, i16* %y279, align 2, !dbg !8625
  %123 = load i8*, i8** %p.addr, align 8, !dbg !8626
  %arrayidx280 = getelementptr i8, i8* %123, i64 4, !dbg !8626
  %124 = load i8, i8* %arrayidx280, align 1, !dbg !8626
  %conv281 = zext i8 %124 to i32, !dbg !8626
  %shl282 = shl i32 %conv281, 3, !dbg !8626
  %and283 = and i32 %shl282, 16, !dbg !8626
  %125 = load i8*, i8** %p.addr, align 8, !dbg !8626
  %arrayidx284 = getelementptr i8, i8* %125, i64 5, !dbg !8626
  %126 = load i8, i8* %arrayidx284, align 1, !dbg !8626
  %conv285 = zext i8 %126 to i32, !dbg !8626
  %shl286 = shl i32 %conv285, 5, !dbg !8626
  %and287 = and i32 %shl286, 480, !dbg !8626
  %or288 = or i32 %and283, %and287, !dbg !8626
  %127 = load i8*, i8** %p.addr, align 8, !dbg !8626
  %arrayidx289 = getelementptr i8, i8* %127, i64 5, !dbg !8626
  %128 = load i8, i8* %arrayidx289, align 1, !dbg !8626
  %conv290 = zext i8 %128 to i32, !dbg !8626
  %shl291 = shl i32 %conv290, 4, !dbg !8626
  %and292 = and i32 %shl291, 3584, !dbg !8626
  %or293 = or i32 %or288, %and292, !dbg !8626
  %conv294 = trunc i32 %or293 to i16, !dbg !8626
  %129 = load %struct.alps_fields*, %struct.alps_fields** %f.addr, align 8, !dbg !8627
  %mt295 = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %129, i32 0, i32 5, !dbg !8628
  %arrayidx296 = getelementptr [4 x %struct.input_mt_pos], [4 x %struct.input_mt_pos]* %mt295, i64 0, i64 1, !dbg !8627
  %y297 = getelementptr inbounds %struct.input_mt_pos, %struct.input_mt_pos* %arrayidx296, i32 0, i32 1, !dbg !8629
  store i16 %conv294, i16* %y297, align 2, !dbg !8630
  br label %if.end298

if.end298:                                        ; preds = %if.end261, %if.end
  %130 = load i8*, i8** %p.addr, align 8, !dbg !8631
  %arrayidx299 = getelementptr i8, i8* %130, i64 1, !dbg !8631
  %131 = load i8, i8* %arrayidx299, align 1, !dbg !8631
  %conv300 = zext i8 %131 to i32, !dbg !8631
  %and301 = and i32 %conv300, 1, !dbg !8631
  %132 = load i8*, i8** %p.addr, align 8, !dbg !8631
  %arrayidx302 = getelementptr i8, i8* %132, i64 1, !dbg !8631
  %133 = load i8, i8* %arrayidx302, align 1, !dbg !8631
  %conv303 = zext i8 %133 to i32, !dbg !8631
  %shr304 = ashr i32 %conv303, 1, !dbg !8631
  %and305 = and i32 %shr304, 2, !dbg !8631
  %or306 = or i32 %and301, %and305, !dbg !8631
  %tobool307 = icmp ne i32 %or306, 0, !dbg !8631
  %134 = zext i1 %tobool307 to i64, !dbg !8631
  %cond308 = select i1 %tobool307, i32 48, i32 0, !dbg !8631
  %135 = load %struct.alps_fields*, %struct.alps_fields** %f.addr, align 8, !dbg !8632
  %pressure309 = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %135, i32 0, i32 3, !dbg !8633
  store i32 %cond308, i32* %pressure309, align 4, !dbg !8634
  %136 = load i8*, i8** %p.addr, align 8, !dbg !8635
  %arrayidx310 = getelementptr i8, i8* %136, i64 2, !dbg !8635
  %137 = load i8, i8* %arrayidx310, align 1, !dbg !8635
  %conv311 = zext i8 %137 to i32, !dbg !8635
  %and312 = and i32 %conv311, 16, !dbg !8635
  %cmp313 = icmp eq i32 %and312, 16, !dbg !8635
  br i1 %cmp313, label %if.then315, label %if.else319, !dbg !8637

if.then315:                                       ; preds = %if.end298
  %138 = load %struct.alps_fields*, %struct.alps_fields** %f.addr, align 8, !dbg !8638
  %first_mp316 = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %138, i32 0, i32 6, !dbg !8640
  %bf.load317 = load i8, i8* %first_mp316, align 4, !dbg !8641
  %bf.clear318 = and i8 %bf.load317, -2, !dbg !8641
  %bf.set = or i8 %bf.clear318, 1, !dbg !8641
  store i8 %bf.set, i8* %first_mp316, align 4, !dbg !8641
  br label %if.end324, !dbg !8642

if.else319:                                       ; preds = %if.end298
  %139 = load %struct.alps_fields*, %struct.alps_fields** %f.addr, align 8, !dbg !8643
  %fingers320 = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %139, i32 0, i32 2, !dbg !8645
  store i32 2, i32* %fingers320, align 4, !dbg !8646
  %140 = load %struct.alps_fields*, %struct.alps_fields** %f.addr, align 8, !dbg !8647
  %first_mp321 = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %140, i32 0, i32 6, !dbg !8648
  %bf.load322 = load i8, i8* %first_mp321, align 4, !dbg !8649
  %bf.clear323 = and i8 %bf.load322, -2, !dbg !8649
  store i8 %bf.clear323, i8* %first_mp321, align 4, !dbg !8649
  br label %if.end324

if.end324:                                        ; preds = %if.else319, %if.then315
  %141 = load %struct.alps_fields*, %struct.alps_fields** %f.addr, align 8, !dbg !8650
  %is_mp325 = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %141, i32 0, i32 6, !dbg !8651
  %bf.load326 = load i8, i8* %is_mp325, align 4, !dbg !8652
  %bf.clear327 = and i8 %bf.load326, -3, !dbg !8652
  store i8 %bf.clear327, i8* %is_mp325, align 4, !dbg !8652
  br label %sw.epilog, !dbg !8653

sw.bb328:                                         ; preds = %entry
  %142 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !8654
  %flags329 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %142, i32 0, i32 13, !dbg !8656
  %143 = load i32, i32* %flags329, align 8, !dbg !8656
  %and330 = and i32 %143, 512, !dbg !8657
  %tobool331 = icmp ne i32 %and330, 0, !dbg !8657
  br i1 %tobool331, label %if.then332, label %if.else471, !dbg !8658

if.then332:                                       ; preds = %sw.bb328
  %144 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !8659
  %dev_id333 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %144, i32 0, i32 11, !dbg !8659
  %arrayidx334 = getelementptr [3 x i8], [3 x i8]* %dev_id333, i64 0, i64 0, !dbg !8659
  %145 = load i8, i8* %arrayidx334, align 8, !dbg !8659
  %conv335 = zext i8 %145 to i32, !dbg !8659
  %cmp336 = icmp eq i32 %conv335, 115, !dbg !8659
  br i1 %cmp336, label %land.lhs.true338, label %if.else387, !dbg !8659

land.lhs.true338:                                 ; preds = %if.then332
  %146 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !8659
  %dev_id339 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %146, i32 0, i32 11, !dbg !8659
  %arrayidx340 = getelementptr [3 x i8], [3 x i8]* %dev_id339, i64 0, i64 1, !dbg !8659
  %147 = load i8, i8* %arrayidx340, align 1, !dbg !8659
  %conv341 = zext i8 %147 to i32, !dbg !8659
  %cmp342 = icmp eq i32 %conv341, 3, !dbg !8659
  br i1 %cmp342, label %land.lhs.true344, label %if.else387, !dbg !8659

land.lhs.true344:                                 ; preds = %land.lhs.true338
  %148 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !8659
  %dev_id345 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %148, i32 0, i32 11, !dbg !8659
  %arrayidx346 = getelementptr [3 x i8], [3 x i8]* %dev_id345, i64 0, i64 2, !dbg !8659
  %149 = load i8, i8* %arrayidx346, align 2, !dbg !8659
  %conv347 = zext i8 %149 to i32, !dbg !8659
  %cmp348 = icmp eq i32 %conv347, 40, !dbg !8659
  br i1 %cmp348, label %if.then350, label %if.else387, !dbg !8662

if.then350:                                       ; preds = %land.lhs.true344
  %150 = load i8*, i8** %p.addr, align 8, !dbg !8663
  %arrayidx351 = getelementptr i8, i8* %150, i64 0, !dbg !8663
  %151 = load i8, i8* %arrayidx351, align 1, !dbg !8663
  %conv352 = zext i8 %151 to i32, !dbg !8663
  %shl353 = shl i32 %conv352, 4, !dbg !8663
  %and354 = and i32 %shl353, 112, !dbg !8663
  %152 = load i8*, i8** %p.addr, align 8, !dbg !8663
  %arrayidx355 = getelementptr i8, i8* %152, i64 1, !dbg !8663
  %153 = load i8, i8* %arrayidx355, align 1, !dbg !8663
  %conv356 = zext i8 %153 to i32, !dbg !8663
  %shl357 = shl i32 %conv356, 4, !dbg !8663
  %and358 = and i32 %shl357, 3968, !dbg !8663
  %or359 = or i32 %and354, %and358, !dbg !8663
  %154 = load i8*, i8** %p.addr, align 8, !dbg !8663
  %arrayidx360 = getelementptr i8, i8* %154, i64 0, !dbg !8663
  %155 = load i8, i8* %arrayidx360, align 1, !dbg !8663
  %conv361 = zext i8 %155 to i32, !dbg !8663
  %shr362 = ashr i32 %conv361, 4, !dbg !8663
  %and363 = and i32 %shr362, 8, !dbg !8663
  %or364 = or i32 %or359, %and363, !dbg !8663
  %conv365 = trunc i32 %or364 to i16, !dbg !8663
  %156 = load %struct.alps_fields*, %struct.alps_fields** %f.addr, align 8, !dbg !8665
  %mt366 = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %156, i32 0, i32 5, !dbg !8666
  %arrayidx367 = getelementptr [4 x %struct.input_mt_pos], [4 x %struct.input_mt_pos]* %mt366, i64 0, i64 2, !dbg !8665
  %x368 = getelementptr inbounds %struct.input_mt_pos, %struct.input_mt_pos* %arrayidx367, i32 0, i32 0, !dbg !8667
  store i16 %conv365, i16* %x368, align 4, !dbg !8668
  %157 = load i8*, i8** %p.addr, align 8, !dbg !8669
  %arrayidx369 = getelementptr i8, i8* %157, i64 3, !dbg !8669
  %158 = load i8, i8* %arrayidx369, align 1, !dbg !8669
  %conv370 = zext i8 %158 to i32, !dbg !8669
  %shl371 = shl i32 %conv370, 4, !dbg !8669
  %and372 = and i32 %shl371, 112, !dbg !8669
  %159 = load i8*, i8** %p.addr, align 8, !dbg !8669
  %arrayidx373 = getelementptr i8, i8* %159, i64 4, !dbg !8669
  %160 = load i8, i8* %arrayidx373, align 1, !dbg !8669
  %conv374 = zext i8 %160 to i32, !dbg !8669
  %shl375 = shl i32 %conv374, 4, !dbg !8669
  %and376 = and i32 %shl375, 3968, !dbg !8669
  %or377 = or i32 %and372, %and376, !dbg !8669
  %161 = load i8*, i8** %p.addr, align 8, !dbg !8669
  %arrayidx378 = getelementptr i8, i8* %161, i64 3, !dbg !8669
  %162 = load i8, i8* %arrayidx378, align 1, !dbg !8669
  %conv379 = zext i8 %162 to i32, !dbg !8669
  %shr380 = ashr i32 %conv379, 4, !dbg !8669
  %and381 = and i32 %shr380, 8, !dbg !8669
  %or382 = or i32 %or377, %and381, !dbg !8669
  %conv383 = trunc i32 %or382 to i16, !dbg !8669
  %163 = load %struct.alps_fields*, %struct.alps_fields** %f.addr, align 8, !dbg !8670
  %mt384 = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %163, i32 0, i32 5, !dbg !8671
  %arrayidx385 = getelementptr [4 x %struct.input_mt_pos], [4 x %struct.input_mt_pos]* %mt384, i64 0, i64 3, !dbg !8670
  %x386 = getelementptr inbounds %struct.input_mt_pos, %struct.input_mt_pos* %arrayidx385, i32 0, i32 0, !dbg !8672
  store i16 %conv383, i16* %x386, align 4, !dbg !8673
  store i32 4088, i32* %no_data_x, align 4, !dbg !8674
  br label %if.end424, !dbg !8675

if.else387:                                       ; preds = %land.lhs.true344, %land.lhs.true338, %if.then332
  %164 = load i8*, i8** %p.addr, align 8, !dbg !8676
  %arrayidx388 = getelementptr i8, i8* %164, i64 0, !dbg !8676
  %165 = load i8, i8* %arrayidx388, align 1, !dbg !8676
  %conv389 = zext i8 %165 to i32, !dbg !8676
  %shl390 = shl i32 %conv389, 5, !dbg !8676
  %and391 = and i32 %shl390, 224, !dbg !8676
  %166 = load i8*, i8** %p.addr, align 8, !dbg !8676
  %arrayidx392 = getelementptr i8, i8* %166, i64 1, !dbg !8676
  %167 = load i8, i8* %arrayidx392, align 1, !dbg !8676
  %conv393 = zext i8 %167 to i32, !dbg !8676
  %shl394 = shl i32 %conv393, 5, !dbg !8676
  %and395 = and i32 %shl394, 7936, !dbg !8676
  %or396 = or i32 %and391, %and395, !dbg !8676
  %168 = load i8*, i8** %p.addr, align 8, !dbg !8676
  %arrayidx397 = getelementptr i8, i8* %168, i64 0, !dbg !8676
  %169 = load i8, i8* %arrayidx397, align 1, !dbg !8676
  %conv398 = zext i8 %169 to i32, !dbg !8676
  %shr399 = ashr i32 %conv398, 3, !dbg !8676
  %and400 = and i32 %shr399, 16, !dbg !8676
  %or401 = or i32 %or396, %and400, !dbg !8676
  %conv402 = trunc i32 %or401 to i16, !dbg !8676
  %170 = load %struct.alps_fields*, %struct.alps_fields** %f.addr, align 8, !dbg !8678
  %mt403 = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %170, i32 0, i32 5, !dbg !8679
  %arrayidx404 = getelementptr [4 x %struct.input_mt_pos], [4 x %struct.input_mt_pos]* %mt403, i64 0, i64 2, !dbg !8678
  %x405 = getelementptr inbounds %struct.input_mt_pos, %struct.input_mt_pos* %arrayidx404, i32 0, i32 0, !dbg !8680
  store i16 %conv402, i16* %x405, align 4, !dbg !8681
  %171 = load i8*, i8** %p.addr, align 8, !dbg !8682
  %arrayidx406 = getelementptr i8, i8* %171, i64 3, !dbg !8682
  %172 = load i8, i8* %arrayidx406, align 1, !dbg !8682
  %conv407 = zext i8 %172 to i32, !dbg !8682
  %shl408 = shl i32 %conv407, 5, !dbg !8682
  %and409 = and i32 %shl408, 224, !dbg !8682
  %173 = load i8*, i8** %p.addr, align 8, !dbg !8682
  %arrayidx410 = getelementptr i8, i8* %173, i64 4, !dbg !8682
  %174 = load i8, i8* %arrayidx410, align 1, !dbg !8682
  %conv411 = zext i8 %174 to i32, !dbg !8682
  %shl412 = shl i32 %conv411, 5, !dbg !8682
  %and413 = and i32 %shl412, 7936, !dbg !8682
  %or414 = or i32 %and409, %and413, !dbg !8682
  %175 = load i8*, i8** %p.addr, align 8, !dbg !8682
  %arrayidx415 = getelementptr i8, i8* %175, i64 3, !dbg !8682
  %176 = load i8, i8* %arrayidx415, align 1, !dbg !8682
  %conv416 = zext i8 %176 to i32, !dbg !8682
  %shr417 = ashr i32 %conv416, 3, !dbg !8682
  %and418 = and i32 %shr417, 16, !dbg !8682
  %or419 = or i32 %or414, %and418, !dbg !8682
  %conv420 = trunc i32 %or419 to i16, !dbg !8682
  %177 = load %struct.alps_fields*, %struct.alps_fields** %f.addr, align 8, !dbg !8683
  %mt421 = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %177, i32 0, i32 5, !dbg !8684
  %arrayidx422 = getelementptr [4 x %struct.input_mt_pos], [4 x %struct.input_mt_pos]* %mt421, i64 0, i64 3, !dbg !8683
  %x423 = getelementptr inbounds %struct.input_mt_pos, %struct.input_mt_pos* %arrayidx422, i32 0, i32 0, !dbg !8685
  store i16 %conv420, i16* %x423, align 4, !dbg !8686
  store i32 8176, i32* %no_data_x, align 4, !dbg !8687
  br label %if.end424

if.end424:                                        ; preds = %if.else387, %if.then350
  store i32 4088, i32* %no_data_y, align 4, !dbg !8688
  %178 = load i8*, i8** %p.addr, align 8, !dbg !8689
  %arrayidx425 = getelementptr i8, i8* %178, i64 1, !dbg !8689
  %179 = load i8, i8* %arrayidx425, align 1, !dbg !8689
  %conv426 = zext i8 %179 to i32, !dbg !8689
  %shl427 = shl i32 %conv426, 3, !dbg !8689
  %and428 = and i32 %shl427, 16, !dbg !8689
  %180 = load i8*, i8** %p.addr, align 8, !dbg !8689
  %arrayidx429 = getelementptr i8, i8* %180, i64 2, !dbg !8689
  %181 = load i8, i8* %arrayidx429, align 1, !dbg !8689
  %conv430 = zext i8 %181 to i32, !dbg !8689
  %shl431 = shl i32 %conv430, 5, !dbg !8689
  %and432 = and i32 %shl431, 480, !dbg !8689
  %or433 = or i32 %and428, %and432, !dbg !8689
  %182 = load i8*, i8** %p.addr, align 8, !dbg !8689
  %arrayidx434 = getelementptr i8, i8* %182, i64 2, !dbg !8689
  %183 = load i8, i8* %arrayidx434, align 1, !dbg !8689
  %conv435 = zext i8 %183 to i32, !dbg !8689
  %shl436 = shl i32 %conv435, 4, !dbg !8689
  %and437 = and i32 %shl436, 3584, !dbg !8689
  %or438 = or i32 %or433, %and437, !dbg !8689
  %184 = load i8*, i8** %p.addr, align 8, !dbg !8689
  %arrayidx439 = getelementptr i8, i8* %184, i64 0, !dbg !8689
  %185 = load i8, i8* %arrayidx439, align 1, !dbg !8689
  %conv440 = zext i8 %185 to i32, !dbg !8689
  %shr441 = ashr i32 %conv440, 3, !dbg !8689
  %and442 = and i32 %shr441, 8, !dbg !8689
  %or443 = or i32 %or438, %and442, !dbg !8689
  %conv444 = trunc i32 %or443 to i16, !dbg !8689
  %186 = load %struct.alps_fields*, %struct.alps_fields** %f.addr, align 8, !dbg !8690
  %mt445 = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %186, i32 0, i32 5, !dbg !8691
  %arrayidx446 = getelementptr [4 x %struct.input_mt_pos], [4 x %struct.input_mt_pos]* %mt445, i64 0, i64 2, !dbg !8690
  %y447 = getelementptr inbounds %struct.input_mt_pos, %struct.input_mt_pos* %arrayidx446, i32 0, i32 1, !dbg !8692
  store i16 %conv444, i16* %y447, align 2, !dbg !8693
  %187 = load i8*, i8** %p.addr, align 8, !dbg !8694
  %arrayidx448 = getelementptr i8, i8* %187, i64 4, !dbg !8694
  %188 = load i8, i8* %arrayidx448, align 1, !dbg !8694
  %conv449 = zext i8 %188 to i32, !dbg !8694
  %shl450 = shl i32 %conv449, 3, !dbg !8694
  %and451 = and i32 %shl450, 16, !dbg !8694
  %189 = load i8*, i8** %p.addr, align 8, !dbg !8694
  %arrayidx452 = getelementptr i8, i8* %189, i64 5, !dbg !8694
  %190 = load i8, i8* %arrayidx452, align 1, !dbg !8694
  %conv453 = zext i8 %190 to i32, !dbg !8694
  %shl454 = shl i32 %conv453, 5, !dbg !8694
  %and455 = and i32 %shl454, 480, !dbg !8694
  %or456 = or i32 %and451, %and455, !dbg !8694
  %191 = load i8*, i8** %p.addr, align 8, !dbg !8694
  %arrayidx457 = getelementptr i8, i8* %191, i64 5, !dbg !8694
  %192 = load i8, i8* %arrayidx457, align 1, !dbg !8694
  %conv458 = zext i8 %192 to i32, !dbg !8694
  %shl459 = shl i32 %conv458, 4, !dbg !8694
  %and460 = and i32 %shl459, 3584, !dbg !8694
  %or461 = or i32 %or456, %and460, !dbg !8694
  %193 = load i8*, i8** %p.addr, align 8, !dbg !8694
  %arrayidx462 = getelementptr i8, i8* %193, i64 3, !dbg !8694
  %194 = load i8, i8* %arrayidx462, align 1, !dbg !8694
  %conv463 = zext i8 %194 to i32, !dbg !8694
  %shr464 = ashr i32 %conv463, 3, !dbg !8694
  %and465 = and i32 %shr464, 8, !dbg !8694
  %or466 = or i32 %or461, %and465, !dbg !8694
  %conv467 = trunc i32 %or466 to i16, !dbg !8694
  %195 = load %struct.alps_fields*, %struct.alps_fields** %f.addr, align 8, !dbg !8695
  %mt468 = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %195, i32 0, i32 5, !dbg !8696
  %arrayidx469 = getelementptr [4 x %struct.input_mt_pos], [4 x %struct.input_mt_pos]* %mt468, i64 0, i64 3, !dbg !8695
  %y470 = getelementptr inbounds %struct.input_mt_pos, %struct.input_mt_pos* %arrayidx469, i32 0, i32 1, !dbg !8697
  store i16 %conv467, i16* %y470, align 2, !dbg !8698
  br label %if.end580, !dbg !8699

if.else471:                                       ; preds = %sw.bb328
  %196 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !8700
  %dev_id472 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %196, i32 0, i32 11, !dbg !8700
  %arrayidx473 = getelementptr [3 x i8], [3 x i8]* %dev_id472, i64 0, i64 0, !dbg !8700
  %197 = load i8, i8* %arrayidx473, align 8, !dbg !8700
  %conv474 = zext i8 %197 to i32, !dbg !8700
  %cmp475 = icmp eq i32 %conv474, 115, !dbg !8700
  br i1 %cmp475, label %land.lhs.true477, label %if.else516, !dbg !8700

land.lhs.true477:                                 ; preds = %if.else471
  %198 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !8700
  %dev_id478 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %198, i32 0, i32 11, !dbg !8700
  %arrayidx479 = getelementptr [3 x i8], [3 x i8]* %dev_id478, i64 0, i64 1, !dbg !8700
  %199 = load i8, i8* %arrayidx479, align 1, !dbg !8700
  %conv480 = zext i8 %199 to i32, !dbg !8700
  %cmp481 = icmp eq i32 %conv480, 3, !dbg !8700
  br i1 %cmp481, label %land.lhs.true483, label %if.else516, !dbg !8700

land.lhs.true483:                                 ; preds = %land.lhs.true477
  %200 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !8700
  %dev_id484 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %200, i32 0, i32 11, !dbg !8700
  %arrayidx485 = getelementptr [3 x i8], [3 x i8]* %dev_id484, i64 0, i64 2, !dbg !8700
  %201 = load i8, i8* %arrayidx485, align 2, !dbg !8700
  %conv486 = zext i8 %201 to i32, !dbg !8700
  %cmp487 = icmp eq i32 %conv486, 40, !dbg !8700
  br i1 %cmp487, label %if.then489, label %if.else516, !dbg !8703

if.then489:                                       ; preds = %land.lhs.true483
  %202 = load i8*, i8** %p.addr, align 8, !dbg !8704
  %arrayidx490 = getelementptr i8, i8* %202, i64 0, !dbg !8704
  %203 = load i8, i8* %arrayidx490, align 1, !dbg !8704
  %conv491 = zext i8 %203 to i32, !dbg !8704
  %shl492 = shl i32 %conv491, 4, !dbg !8704
  %and493 = and i32 %shl492, 112, !dbg !8704
  %204 = load i8*, i8** %p.addr, align 8, !dbg !8704
  %arrayidx494 = getelementptr i8, i8* %204, i64 1, !dbg !8704
  %205 = load i8, i8* %arrayidx494, align 1, !dbg !8704
  %conv495 = zext i8 %205 to i32, !dbg !8704
  %shl496 = shl i32 %conv495, 4, !dbg !8704
  %and497 = and i32 %shl496, 3968, !dbg !8704
  %or498 = or i32 %and493, %and497, !dbg !8704
  %conv499 = trunc i32 %or498 to i16, !dbg !8704
  %206 = load %struct.alps_fields*, %struct.alps_fields** %f.addr, align 8, !dbg !8706
  %mt500 = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %206, i32 0, i32 5, !dbg !8707
  %arrayidx501 = getelementptr [4 x %struct.input_mt_pos], [4 x %struct.input_mt_pos]* %mt500, i64 0, i64 2, !dbg !8706
  %x502 = getelementptr inbounds %struct.input_mt_pos, %struct.input_mt_pos* %arrayidx501, i32 0, i32 0, !dbg !8708
  store i16 %conv499, i16* %x502, align 4, !dbg !8709
  %207 = load i8*, i8** %p.addr, align 8, !dbg !8710
  %arrayidx503 = getelementptr i8, i8* %207, i64 3, !dbg !8710
  %208 = load i8, i8* %arrayidx503, align 1, !dbg !8710
  %conv504 = zext i8 %208 to i32, !dbg !8710
  %shl505 = shl i32 %conv504, 4, !dbg !8710
  %and506 = and i32 %shl505, 112, !dbg !8710
  %209 = load i8*, i8** %p.addr, align 8, !dbg !8710
  %arrayidx507 = getelementptr i8, i8* %209, i64 4, !dbg !8710
  %210 = load i8, i8* %arrayidx507, align 1, !dbg !8710
  %conv508 = zext i8 %210 to i32, !dbg !8710
  %shl509 = shl i32 %conv508, 4, !dbg !8710
  %and510 = and i32 %shl509, 3968, !dbg !8710
  %or511 = or i32 %and506, %and510, !dbg !8710
  %conv512 = trunc i32 %or511 to i16, !dbg !8710
  %211 = load %struct.alps_fields*, %struct.alps_fields** %f.addr, align 8, !dbg !8711
  %mt513 = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %211, i32 0, i32 5, !dbg !8712
  %arrayidx514 = getelementptr [4 x %struct.input_mt_pos], [4 x %struct.input_mt_pos]* %mt513, i64 0, i64 3, !dbg !8711
  %x515 = getelementptr inbounds %struct.input_mt_pos, %struct.input_mt_pos* %arrayidx514, i32 0, i32 0, !dbg !8713
  store i16 %conv512, i16* %x515, align 4, !dbg !8714
  store i32 4080, i32* %no_data_x, align 4, !dbg !8715
  br label %if.end543, !dbg !8716

if.else516:                                       ; preds = %land.lhs.true483, %land.lhs.true477, %if.else471
  %212 = load i8*, i8** %p.addr, align 8, !dbg !8717
  %arrayidx517 = getelementptr i8, i8* %212, i64 0, !dbg !8717
  %213 = load i8, i8* %arrayidx517, align 1, !dbg !8717
  %conv518 = zext i8 %213 to i32, !dbg !8717
  %shl519 = shl i32 %conv518, 5, !dbg !8717
  %and520 = and i32 %shl519, 224, !dbg !8717
  %214 = load i8*, i8** %p.addr, align 8, !dbg !8717
  %arrayidx521 = getelementptr i8, i8* %214, i64 1, !dbg !8717
  %215 = load i8, i8* %arrayidx521, align 1, !dbg !8717
  %conv522 = zext i8 %215 to i32, !dbg !8717
  %shl523 = shl i32 %conv522, 5, !dbg !8717
  %and524 = and i32 %shl523, 7936, !dbg !8717
  %or525 = or i32 %and520, %and524, !dbg !8717
  %conv526 = trunc i32 %or525 to i16, !dbg !8717
  %216 = load %struct.alps_fields*, %struct.alps_fields** %f.addr, align 8, !dbg !8719
  %mt527 = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %216, i32 0, i32 5, !dbg !8720
  %arrayidx528 = getelementptr [4 x %struct.input_mt_pos], [4 x %struct.input_mt_pos]* %mt527, i64 0, i64 2, !dbg !8719
  %x529 = getelementptr inbounds %struct.input_mt_pos, %struct.input_mt_pos* %arrayidx528, i32 0, i32 0, !dbg !8721
  store i16 %conv526, i16* %x529, align 4, !dbg !8722
  %217 = load i8*, i8** %p.addr, align 8, !dbg !8723
  %arrayidx530 = getelementptr i8, i8* %217, i64 3, !dbg !8723
  %218 = load i8, i8* %arrayidx530, align 1, !dbg !8723
  %conv531 = zext i8 %218 to i32, !dbg !8723
  %shl532 = shl i32 %conv531, 5, !dbg !8723
  %and533 = and i32 %shl532, 224, !dbg !8723
  %219 = load i8*, i8** %p.addr, align 8, !dbg !8723
  %arrayidx534 = getelementptr i8, i8* %219, i64 4, !dbg !8723
  %220 = load i8, i8* %arrayidx534, align 1, !dbg !8723
  %conv535 = zext i8 %220 to i32, !dbg !8723
  %shl536 = shl i32 %conv535, 5, !dbg !8723
  %and537 = and i32 %shl536, 7936, !dbg !8723
  %or538 = or i32 %and533, %and537, !dbg !8723
  %conv539 = trunc i32 %or538 to i16, !dbg !8723
  %221 = load %struct.alps_fields*, %struct.alps_fields** %f.addr, align 8, !dbg !8724
  %mt540 = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %221, i32 0, i32 5, !dbg !8725
  %arrayidx541 = getelementptr [4 x %struct.input_mt_pos], [4 x %struct.input_mt_pos]* %mt540, i64 0, i64 3, !dbg !8724
  %x542 = getelementptr inbounds %struct.input_mt_pos, %struct.input_mt_pos* %arrayidx541, i32 0, i32 0, !dbg !8726
  store i16 %conv539, i16* %x542, align 4, !dbg !8727
  store i32 8160, i32* %no_data_x, align 4, !dbg !8728
  br label %if.end543

if.end543:                                        ; preds = %if.else516, %if.then489
  store i32 4080, i32* %no_data_y, align 4, !dbg !8729
  %222 = load i8*, i8** %p.addr, align 8, !dbg !8730
  %arrayidx544 = getelementptr i8, i8* %222, i64 1, !dbg !8730
  %223 = load i8, i8* %arrayidx544, align 1, !dbg !8730
  %conv545 = zext i8 %223 to i32, !dbg !8730
  %shl546 = shl i32 %conv545, 3, !dbg !8730
  %and547 = and i32 %shl546, 16, !dbg !8730
  %224 = load i8*, i8** %p.addr, align 8, !dbg !8730
  %arrayidx548 = getelementptr i8, i8* %224, i64 2, !dbg !8730
  %225 = load i8, i8* %arrayidx548, align 1, !dbg !8730
  %conv549 = zext i8 %225 to i32, !dbg !8730
  %shl550 = shl i32 %conv549, 5, !dbg !8730
  %and551 = and i32 %shl550, 480, !dbg !8730
  %or552 = or i32 %and547, %and551, !dbg !8730
  %226 = load i8*, i8** %p.addr, align 8, !dbg !8730
  %arrayidx553 = getelementptr i8, i8* %226, i64 2, !dbg !8730
  %227 = load i8, i8* %arrayidx553, align 1, !dbg !8730
  %conv554 = zext i8 %227 to i32, !dbg !8730
  %shl555 = shl i32 %conv554, 4, !dbg !8730
  %and556 = and i32 %shl555, 3584, !dbg !8730
  %or557 = or i32 %or552, %and556, !dbg !8730
  %conv558 = trunc i32 %or557 to i16, !dbg !8730
  %228 = load %struct.alps_fields*, %struct.alps_fields** %f.addr, align 8, !dbg !8731
  %mt559 = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %228, i32 0, i32 5, !dbg !8732
  %arrayidx560 = getelementptr [4 x %struct.input_mt_pos], [4 x %struct.input_mt_pos]* %mt559, i64 0, i64 2, !dbg !8731
  %y561 = getelementptr inbounds %struct.input_mt_pos, %struct.input_mt_pos* %arrayidx560, i32 0, i32 1, !dbg !8733
  store i16 %conv558, i16* %y561, align 2, !dbg !8734
  %229 = load i8*, i8** %p.addr, align 8, !dbg !8735
  %arrayidx562 = getelementptr i8, i8* %229, i64 4, !dbg !8735
  %230 = load i8, i8* %arrayidx562, align 1, !dbg !8735
  %conv563 = zext i8 %230 to i32, !dbg !8735
  %shl564 = shl i32 %conv563, 3, !dbg !8735
  %and565 = and i32 %shl564, 16, !dbg !8735
  %231 = load i8*, i8** %p.addr, align 8, !dbg !8735
  %arrayidx566 = getelementptr i8, i8* %231, i64 5, !dbg !8735
  %232 = load i8, i8* %arrayidx566, align 1, !dbg !8735
  %conv567 = zext i8 %232 to i32, !dbg !8735
  %shl568 = shl i32 %conv567, 5, !dbg !8735
  %and569 = and i32 %shl568, 480, !dbg !8735
  %or570 = or i32 %and565, %and569, !dbg !8735
  %233 = load i8*, i8** %p.addr, align 8, !dbg !8735
  %arrayidx571 = getelementptr i8, i8* %233, i64 5, !dbg !8735
  %234 = load i8, i8* %arrayidx571, align 1, !dbg !8735
  %conv572 = zext i8 %234 to i32, !dbg !8735
  %shl573 = shl i32 %conv572, 4, !dbg !8735
  %and574 = and i32 %shl573, 3584, !dbg !8735
  %or575 = or i32 %or570, %and574, !dbg !8735
  %conv576 = trunc i32 %or575 to i16, !dbg !8735
  %235 = load %struct.alps_fields*, %struct.alps_fields** %f.addr, align 8, !dbg !8736
  %mt577 = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %235, i32 0, i32 5, !dbg !8737
  %arrayidx578 = getelementptr [4 x %struct.input_mt_pos], [4 x %struct.input_mt_pos]* %mt577, i64 0, i64 3, !dbg !8736
  %y579 = getelementptr inbounds %struct.input_mt_pos, %struct.input_mt_pos* %arrayidx578, i32 0, i32 1, !dbg !8738
  store i16 %conv576, i16* %y579, align 2, !dbg !8739
  br label %if.end580

if.end580:                                        ; preds = %if.end543, %if.end424
  %236 = load %struct.alps_fields*, %struct.alps_fields** %f.addr, align 8, !dbg !8740
  %first_mp581 = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %236, i32 0, i32 6, !dbg !8741
  %bf.load582 = load i8, i8* %first_mp581, align 4, !dbg !8742
  %bf.clear583 = and i8 %bf.load582, -2, !dbg !8742
  store i8 %bf.clear583, i8* %first_mp581, align 4, !dbg !8742
  %237 = load %struct.alps_fields*, %struct.alps_fields** %f.addr, align 8, !dbg !8743
  %is_mp584 = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %237, i32 0, i32 6, !dbg !8744
  %bf.load585 = load i8, i8* %is_mp584, align 4, !dbg !8745
  %bf.clear586 = and i8 %bf.load585, -3, !dbg !8745
  %bf.set587 = or i8 %bf.clear586, 2, !dbg !8745
  store i8 %bf.set587, i8* %is_mp584, align 4, !dbg !8745
  %238 = load i8*, i8** %p.addr, align 8, !dbg !8746
  %arrayidx588 = getelementptr i8, i8* %238, i64 2, !dbg !8746
  %239 = load i8, i8* %arrayidx588, align 1, !dbg !8746
  %conv589 = zext i8 %239 to i32, !dbg !8746
  %and590 = and i32 %conv589, 16, !dbg !8746
  %cmp591 = icmp eq i32 %and590, 16, !dbg !8746
  br i1 %cmp591, label %if.then593, label %if.else595, !dbg !8748

if.then593:                                       ; preds = %if.end580
  %240 = load %struct.alps_fields*, %struct.alps_fields** %f.addr, align 8, !dbg !8749
  %fingers594 = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %240, i32 0, i32 2, !dbg !8751
  store i32 5, i32* %fingers594, align 4, !dbg !8752
  br label %if.end620, !dbg !8753

if.else595:                                       ; preds = %if.end580
  %241 = load %struct.alps_fields*, %struct.alps_fields** %f.addr, align 8, !dbg !8754
  %mt596 = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %241, i32 0, i32 5, !dbg !8756
  %arrayidx597 = getelementptr [4 x %struct.input_mt_pos], [4 x %struct.input_mt_pos]* %mt596, i64 0, i64 3, !dbg !8754
  %x598 = getelementptr inbounds %struct.input_mt_pos, %struct.input_mt_pos* %arrayidx597, i32 0, i32 0, !dbg !8757
  %242 = load i16, i16* %x598, align 4, !dbg !8757
  %conv599 = sext i16 %242 to i32, !dbg !8754
  %243 = load i32, i32* %no_data_x, align 4, !dbg !8758
  %cmp600 = icmp eq i32 %conv599, %243, !dbg !8759
  br i1 %cmp600, label %land.lhs.true602, label %if.else617, !dbg !8760

land.lhs.true602:                                 ; preds = %if.else595
  %244 = load %struct.alps_fields*, %struct.alps_fields** %f.addr, align 8, !dbg !8761
  %mt603 = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %244, i32 0, i32 5, !dbg !8762
  %arrayidx604 = getelementptr [4 x %struct.input_mt_pos], [4 x %struct.input_mt_pos]* %mt603, i64 0, i64 3, !dbg !8761
  %y605 = getelementptr inbounds %struct.input_mt_pos, %struct.input_mt_pos* %arrayidx604, i32 0, i32 1, !dbg !8763
  %245 = load i16, i16* %y605, align 2, !dbg !8763
  %conv606 = sext i16 %245 to i32, !dbg !8761
  %246 = load i32, i32* %no_data_y, align 4, !dbg !8764
  %cmp607 = icmp eq i32 %conv606, %246, !dbg !8765
  br i1 %cmp607, label %if.then609, label %if.else617, !dbg !8766

if.then609:                                       ; preds = %land.lhs.true602
  %247 = load %struct.alps_fields*, %struct.alps_fields** %f.addr, align 8, !dbg !8767
  %mt610 = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %247, i32 0, i32 5, !dbg !8769
  %arrayidx611 = getelementptr [4 x %struct.input_mt_pos], [4 x %struct.input_mt_pos]* %mt610, i64 0, i64 3, !dbg !8767
  %x612 = getelementptr inbounds %struct.input_mt_pos, %struct.input_mt_pos* %arrayidx611, i32 0, i32 0, !dbg !8770
  store i16 0, i16* %x612, align 4, !dbg !8771
  %248 = load %struct.alps_fields*, %struct.alps_fields** %f.addr, align 8, !dbg !8772
  %mt613 = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %248, i32 0, i32 5, !dbg !8773
  %arrayidx614 = getelementptr [4 x %struct.input_mt_pos], [4 x %struct.input_mt_pos]* %mt613, i64 0, i64 3, !dbg !8772
  %y615 = getelementptr inbounds %struct.input_mt_pos, %struct.input_mt_pos* %arrayidx614, i32 0, i32 1, !dbg !8774
  store i16 0, i16* %y615, align 2, !dbg !8775
  %249 = load %struct.alps_fields*, %struct.alps_fields** %f.addr, align 8, !dbg !8776
  %fingers616 = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %249, i32 0, i32 2, !dbg !8777
  store i32 3, i32* %fingers616, align 4, !dbg !8778
  br label %if.end619, !dbg !8779

if.else617:                                       ; preds = %land.lhs.true602, %if.else595
  %250 = load %struct.alps_fields*, %struct.alps_fields** %f.addr, align 8, !dbg !8780
  %fingers618 = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %250, i32 0, i32 2, !dbg !8782
  store i32 4, i32* %fingers618, align 4, !dbg !8783
  br label %if.end619

if.end619:                                        ; preds = %if.else617, %if.then609
  br label %if.end620

if.end620:                                        ; preds = %if.end619, %if.then593
  br label %sw.epilog, !dbg !8784

sw.bb621:                                         ; preds = %entry
  %251 = load %struct.alps_fields*, %struct.alps_fields** %f.addr, align 8, !dbg !8785
  %first_mp622 = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %251, i32 0, i32 6, !dbg !8786
  %bf.load623 = load i8, i8* %first_mp622, align 4, !dbg !8787
  %bf.clear624 = and i8 %bf.load623, -2, !dbg !8787
  store i8 %bf.clear624, i8* %first_mp622, align 4, !dbg !8787
  %252 = load %struct.alps_fields*, %struct.alps_fields** %f.addr, align 8, !dbg !8788
  %is_mp625 = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %252, i32 0, i32 6, !dbg !8789
  %bf.load626 = load i8, i8* %is_mp625, align 4, !dbg !8790
  %bf.clear627 = and i8 %bf.load626, -3, !dbg !8790
  store i8 %bf.clear627, i8* %is_mp625, align 4, !dbg !8790
  br label %sw.epilog, !dbg !8791

sw.bb628:                                         ; preds = %entry
  br label %sw.default, !dbg !8791

sw.default:                                       ; preds = %entry, %sw.bb628
  %253 = load %struct.alps_fields*, %struct.alps_fields** %f.addr, align 8, !dbg !8792
  %254 = bitcast %struct.alps_fields* %253 to i8*, !dbg !8793
  call void @llvm.memset.p0i8.i64(i8* align 4 %254, i8 0, i64 40, i1 false), !dbg !8793
  br label %sw.epilog, !dbg !8794

sw.epilog:                                        ; preds = %sw.default, %sw.bb621, %if.end620, %if.end324, %sw.bb
  %255 = load i32, i32* %pkt_id, align 4, !dbg !8795
  %cmp629 = icmp eq i32 %255, 4, !dbg !8797
  br i1 %cmp629, label %if.then631, label %if.else674, !dbg !8798

if.then631:                                       ; preds = %sw.epilog
  %256 = load i8*, i8** %p.addr, align 8, !dbg !8799
  %arrayidx632 = getelementptr i8, i8* %256, i64 0, !dbg !8799
  %257 = load i8, i8* %arrayidx632, align 1, !dbg !8799
  %conv633 = zext i8 %257 to i32, !dbg !8799
  %shr634 = ashr i32 %conv633, 5, !dbg !8799
  %and635 = and i32 %shr634, 7, !dbg !8799
  %and636 = and i32 %and635, 1, !dbg !8801
  %tobool637 = icmp ne i32 %and636, 0, !dbg !8802
  %lnot = xor i1 %tobool637, true, !dbg !8802
  %lnot638 = xor i1 %lnot, true, !dbg !8803
  %lnot.ext = zext i1 %lnot638 to i32, !dbg !8803
  %258 = load %struct.alps_fields*, %struct.alps_fields** %f.addr, align 8, !dbg !8804
  %ts_left = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %258, i32 0, i32 6, !dbg !8805
  %259 = trunc i32 %lnot.ext to i8, !dbg !8806
  %bf.load639 = load i8, i8* %ts_left, align 4, !dbg !8806
  %bf.value = and i8 %259, 1, !dbg !8806
  %bf.shl = shl i8 %bf.value, 5, !dbg !8806
  %bf.clear640 = and i8 %bf.load639, -33, !dbg !8806
  %bf.set641 = or i8 %bf.clear640, %bf.shl, !dbg !8806
  store i8 %bf.set641, i8* %ts_left, align 4, !dbg !8806
  %bf.result.cast = zext i8 %bf.value to i32, !dbg !8806
  %260 = load i8*, i8** %p.addr, align 8, !dbg !8807
  %arrayidx642 = getelementptr i8, i8* %260, i64 0, !dbg !8807
  %261 = load i8, i8* %arrayidx642, align 1, !dbg !8807
  %conv643 = zext i8 %261 to i32, !dbg !8807
  %shr644 = ashr i32 %conv643, 5, !dbg !8807
  %and645 = and i32 %shr644, 7, !dbg !8807
  %and646 = and i32 %and645, 2, !dbg !8808
  %tobool647 = icmp ne i32 %and646, 0, !dbg !8809
  %lnot648 = xor i1 %tobool647, true, !dbg !8809
  %lnot650 = xor i1 %lnot648, true, !dbg !8810
  %lnot.ext651 = zext i1 %lnot650 to i32, !dbg !8810
  %262 = load %struct.alps_fields*, %struct.alps_fields** %f.addr, align 8, !dbg !8811
  %ts_right = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %262, i32 0, i32 6, !dbg !8812
  %263 = trunc i32 %lnot.ext651 to i8, !dbg !8813
  %bf.load652 = load i8, i8* %ts_right, align 4, !dbg !8813
  %bf.value653 = and i8 %263, 1, !dbg !8813
  %bf.shl654 = shl i8 %bf.value653, 6, !dbg !8813
  %bf.clear655 = and i8 %bf.load652, -65, !dbg !8813
  %bf.set656 = or i8 %bf.clear655, %bf.shl654, !dbg !8813
  store i8 %bf.set656, i8* %ts_right, align 4, !dbg !8813
  %bf.result.cast657 = zext i8 %bf.value653 to i32, !dbg !8813
  %264 = load i8*, i8** %p.addr, align 8, !dbg !8814
  %arrayidx658 = getelementptr i8, i8* %264, i64 0, !dbg !8814
  %265 = load i8, i8* %arrayidx658, align 1, !dbg !8814
  %conv659 = zext i8 %265 to i32, !dbg !8814
  %shr660 = ashr i32 %conv659, 5, !dbg !8814
  %and661 = and i32 %shr660, 7, !dbg !8814
  %and662 = and i32 %and661, 4, !dbg !8815
  %tobool663 = icmp ne i32 %and662, 0, !dbg !8816
  %lnot664 = xor i1 %tobool663, true, !dbg !8816
  %lnot666 = xor i1 %lnot664, true, !dbg !8817
  %lnot.ext667 = zext i1 %lnot666 to i32, !dbg !8817
  %266 = load %struct.alps_fields*, %struct.alps_fields** %f.addr, align 8, !dbg !8818
  %ts_middle = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %266, i32 0, i32 6, !dbg !8819
  %267 = trunc i32 %lnot.ext667 to i8, !dbg !8820
  %bf.load668 = load i8, i8* %ts_middle, align 4, !dbg !8820
  %bf.value669 = and i8 %267, 1, !dbg !8820
  %bf.shl670 = shl i8 %bf.value669, 7, !dbg !8820
  %bf.clear671 = and i8 %bf.load668, 127, !dbg !8820
  %bf.set672 = or i8 %bf.clear671, %bf.shl670, !dbg !8820
  store i8 %bf.set672, i8* %ts_middle, align 4, !dbg !8820
  %bf.result.cast673 = zext i8 %bf.value669 to i32, !dbg !8820
  br label %if.end728, !dbg !8821

if.else674:                                       ; preds = %sw.epilog
  %268 = load i8*, i8** %p.addr, align 8, !dbg !8822
  %arrayidx675 = getelementptr i8, i8* %268, i64 0, !dbg !8822
  %269 = load i8, i8* %arrayidx675, align 1, !dbg !8822
  %conv676 = zext i8 %269 to i32, !dbg !8822
  %shr677 = ashr i32 %conv676, 5, !dbg !8822
  %and678 = and i32 %shr677, 7, !dbg !8822
  %and679 = and i32 %and678, 1, !dbg !8824
  %tobool680 = icmp ne i32 %and679, 0, !dbg !8825
  %lnot681 = xor i1 %tobool680, true, !dbg !8825
  %lnot683 = xor i1 %lnot681, true, !dbg !8826
  %lnot.ext684 = zext i1 %lnot683 to i32, !dbg !8826
  %270 = load %struct.alps_fields*, %struct.alps_fields** %f.addr, align 8, !dbg !8827
  %left = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %270, i32 0, i32 6, !dbg !8828
  %271 = trunc i32 %lnot.ext684 to i8, !dbg !8829
  %bf.load685 = load i8, i8* %left, align 4, !dbg !8829
  %bf.value686 = and i8 %271, 1, !dbg !8829
  %bf.shl687 = shl i8 %bf.value686, 2, !dbg !8829
  %bf.clear688 = and i8 %bf.load685, -5, !dbg !8829
  %bf.set689 = or i8 %bf.clear688, %bf.shl687, !dbg !8829
  store i8 %bf.set689, i8* %left, align 4, !dbg !8829
  %bf.result.cast690 = zext i8 %bf.value686 to i32, !dbg !8829
  %272 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !8830
  %flags691 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %272, i32 0, i32 13, !dbg !8832
  %273 = load i32, i32* %flags691, align 8, !dbg !8832
  %and692 = and i32 %273, 512, !dbg !8833
  %tobool693 = icmp ne i32 %and692, 0, !dbg !8833
  br i1 %tobool693, label %if.end727, label %if.then694, !dbg !8834

if.then694:                                       ; preds = %if.else674
  %274 = load i8*, i8** %p.addr, align 8, !dbg !8835
  %arrayidx695 = getelementptr i8, i8* %274, i64 0, !dbg !8835
  %275 = load i8, i8* %arrayidx695, align 1, !dbg !8835
  %conv696 = zext i8 %275 to i32, !dbg !8835
  %shr697 = ashr i32 %conv696, 5, !dbg !8835
  %and698 = and i32 %shr697, 7, !dbg !8835
  %and699 = and i32 %and698, 2, !dbg !8837
  %tobool700 = icmp ne i32 %and699, 0, !dbg !8838
  %lnot701 = xor i1 %tobool700, true, !dbg !8838
  %lnot703 = xor i1 %lnot701, true, !dbg !8839
  %lnot.ext704 = zext i1 %lnot703 to i32, !dbg !8839
  %276 = load %struct.alps_fields*, %struct.alps_fields** %f.addr, align 8, !dbg !8840
  %right = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %276, i32 0, i32 6, !dbg !8841
  %277 = trunc i32 %lnot.ext704 to i8, !dbg !8842
  %bf.load705 = load i8, i8* %right, align 4, !dbg !8842
  %bf.value706 = and i8 %277, 1, !dbg !8842
  %bf.shl707 = shl i8 %bf.value706, 3, !dbg !8842
  %bf.clear708 = and i8 %bf.load705, -9, !dbg !8842
  %bf.set709 = or i8 %bf.clear708, %bf.shl707, !dbg !8842
  store i8 %bf.set709, i8* %right, align 4, !dbg !8842
  %bf.result.cast710 = zext i8 %bf.value706 to i32, !dbg !8842
  %278 = load i8*, i8** %p.addr, align 8, !dbg !8843
  %arrayidx711 = getelementptr i8, i8* %278, i64 0, !dbg !8843
  %279 = load i8, i8* %arrayidx711, align 1, !dbg !8843
  %conv712 = zext i8 %279 to i32, !dbg !8843
  %shr713 = ashr i32 %conv712, 5, !dbg !8843
  %and714 = and i32 %shr713, 7, !dbg !8843
  %and715 = and i32 %and714, 4, !dbg !8844
  %tobool716 = icmp ne i32 %and715, 0, !dbg !8845
  %lnot717 = xor i1 %tobool716, true, !dbg !8845
  %lnot719 = xor i1 %lnot717, true, !dbg !8846
  %lnot.ext720 = zext i1 %lnot719 to i32, !dbg !8846
  %280 = load %struct.alps_fields*, %struct.alps_fields** %f.addr, align 8, !dbg !8847
  %middle = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %280, i32 0, i32 6, !dbg !8848
  %281 = trunc i32 %lnot.ext720 to i8, !dbg !8849
  %bf.load721 = load i8, i8* %middle, align 4, !dbg !8849
  %bf.value722 = and i8 %281, 1, !dbg !8849
  %bf.shl723 = shl i8 %bf.value722, 4, !dbg !8849
  %bf.clear724 = and i8 %bf.load721, -17, !dbg !8849
  %bf.set725 = or i8 %bf.clear724, %bf.shl723, !dbg !8849
  store i8 %bf.set725, i8* %middle, align 4, !dbg !8849
  %bf.result.cast726 = zext i8 %bf.value722 to i32, !dbg !8849
  br label %if.end727, !dbg !8850

if.end727:                                        ; preds = %if.then694, %if.else674
  br label %if.end728

if.end728:                                        ; preds = %if.end727, %if.then631
  ret i32 0, !dbg !8851
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @alps_set_abs_params_ss4_v2(%struct.alps_data* %priv, %struct.input_dev* %dev1) #0 !dbg !8852 {
entry:
  %priv.addr = alloca %struct.alps_data*, align 8
  %dev1.addr = alloca %struct.input_dev*, align 8
  store %struct.alps_data* %priv, %struct.alps_data** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.alps_data** %priv.addr, metadata !8853, metadata !DIExpression()), !dbg !8854
  store %struct.input_dev* %dev1, %struct.input_dev** %dev1.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.input_dev** %dev1.addr, metadata !8855, metadata !DIExpression()), !dbg !8856
  %0 = load %struct.alps_data*, %struct.alps_data** %priv.addr, align 8, !dbg !8857
  %1 = load %struct.input_dev*, %struct.input_dev** %dev1.addr, align 8, !dbg !8858
  call void @alps_set_abs_params_mt_common(%struct.alps_data* %0, %struct.input_dev* %1) #10, !dbg !8859
  %2 = load %struct.input_dev*, %struct.input_dev** %dev1.addr, align 8, !dbg !8860
  call void @input_set_abs_params(%struct.input_dev* %2, i32 24, i32 0, i32 127, i32 0, i32 0) #10, !dbg !8861
  %3 = load %struct.input_dev*, %struct.input_dev** %dev1.addr, align 8, !dbg !8862
  %keybit = getelementptr inbounds %struct.input_dev, %struct.input_dev* %3, i32 0, i32 6, !dbg !8863
  %arraydecay = getelementptr inbounds [12 x i64], [12 x i64]* %keybit, i64 0, i64 0, !dbg !8862
  call void @set_bit(i64 328, i64* %arraydecay) #10, !dbg !8864
  %4 = load %struct.input_dev*, %struct.input_dev** %dev1.addr, align 8, !dbg !8865
  %call = call i32 @input_mt_init_slots(%struct.input_dev* %4, i32 4, i32 13) #10, !dbg !8866
  ret void, !dbg !8867
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @alps_set_defaults_ss4_v2(%struct.psmouse* %psmouse, %struct.alps_data* %priv) #0 !dbg !8868 {
entry:
  %retval = alloca i32, align 4
  %psmouse.addr = alloca %struct.psmouse*, align 8
  %priv.addr = alloca %struct.alps_data*, align 8
  %otp = alloca [2 x [4 x i8]], align 1
  store %struct.psmouse* %psmouse, %struct.psmouse** %psmouse.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.psmouse** %psmouse.addr, metadata !8869, metadata !DIExpression()), !dbg !8870
  store %struct.alps_data* %priv, %struct.alps_data** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.alps_data** %priv.addr, metadata !8871, metadata !DIExpression()), !dbg !8872
  call void @llvm.dbg.declare(metadata [2 x [4 x i8]]* %otp, metadata !8873, metadata !DIExpression()), !dbg !8876
  %arraydecay = getelementptr inbounds [2 x [4 x i8]], [2 x [4 x i8]]* %otp, i64 0, i64 0, !dbg !8877
  %0 = bitcast [4 x i8]* %arraydecay to i8*, !dbg !8877
  call void @llvm.memset.p0i8.i64(i8* align 1 %0, i8 0, i64 8, i1 false), !dbg !8877
  %1 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !8878
  %arrayidx = getelementptr [2 x [4 x i8]], [2 x [4 x i8]]* %otp, i64 0, i64 1, !dbg !8880
  %arrayidx1 = getelementptr [4 x i8], [4 x i8]* %arrayidx, i64 0, i64 0, !dbg !8880
  %call = call i32 @alps_get_otp_values_ss4_v2(%struct.psmouse* %1, i8 zeroext 1, i8* %arrayidx1) #10, !dbg !8881
  %tobool = icmp ne i32 %call, 0, !dbg !8881
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !8882

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !8883
  %arrayidx2 = getelementptr [2 x [4 x i8]], [2 x [4 x i8]]* %otp, i64 0, i64 0, !dbg !8884
  %arrayidx3 = getelementptr [4 x i8], [4 x i8]* %arrayidx2, i64 0, i64 0, !dbg !8884
  %call4 = call i32 @alps_get_otp_values_ss4_v2(%struct.psmouse* %2, i8 zeroext 0, i8* %arrayidx3) #10, !dbg !8885
  %tobool5 = icmp ne i32 %call4, 0, !dbg !8885
  br i1 %tobool5, label %if.then, label %if.end, !dbg !8886

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 -1, i32* %retval, align 4, !dbg !8887
  br label %return, !dbg !8887

if.end:                                           ; preds = %lor.lhs.false
  %arraydecay6 = getelementptr inbounds [2 x [4 x i8]], [2 x [4 x i8]]* %otp, i64 0, i64 0, !dbg !8888
  %3 = load %struct.alps_data*, %struct.alps_data** %priv.addr, align 8, !dbg !8889
  %call7 = call i32 @alps_update_device_area_ss4_v2([4 x i8]* %arraydecay6, %struct.alps_data* %3) #10, !dbg !8890
  %arraydecay8 = getelementptr inbounds [2 x [4 x i8]], [2 x [4 x i8]]* %otp, i64 0, i64 0, !dbg !8891
  %4 = load %struct.alps_data*, %struct.alps_data** %priv.addr, align 8, !dbg !8892
  %call9 = call i32 @alps_update_btn_info_ss4_v2([4 x i8]* %arraydecay8, %struct.alps_data* %4) #10, !dbg !8893
  %arraydecay10 = getelementptr inbounds [2 x [4 x i8]], [2 x [4 x i8]]* %otp, i64 0, i64 0, !dbg !8894
  %5 = load %struct.alps_data*, %struct.alps_data** %priv.addr, align 8, !dbg !8895
  %6 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !8896
  %call11 = call i32 @alps_update_dual_info_ss4_v2([4 x i8]* %arraydecay10, %struct.alps_data* %5, %struct.psmouse* %6) #10, !dbg !8897
  store i32 0, i32* %retval, align 4, !dbg !8898
  br label %return, !dbg !8898

return:                                           ; preds = %if.end, %if.then
  %7 = load i32, i32* %retval, align 4, !dbg !8899
  ret i32 %7, !dbg !8899
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @serio_pause_rx(%struct.serio* %serio) #0 !dbg !8900 {
entry:
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8901, metadata !DIExpression()), !dbg !8907
  %serio.addr = alloca %struct.serio*, align 8
  store %struct.serio* %serio, %struct.serio** %serio.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.serio** %serio.addr, metadata !8909, metadata !DIExpression()), !dbg !8910
  %0 = load %struct.serio*, %struct.serio** %serio.addr, align 8, !dbg !8911
  %lock = getelementptr inbounds %struct.serio, %struct.serio* %0, i32 0, i32 6, !dbg !8912
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  call void @arch_local_irq_disable() #12, !dbg !8913
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !8916, !srcloc !8918
  %1 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !8919
  %2 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %1, i32 0, i32 0, !dbg !8919
  %rlock.i = bitcast %union.anon.0* %2 to %struct.raw_spinlock*, !dbg !8919
  ret void, !dbg !8921
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @serio_continue_rx(%struct.serio* %serio) #0 !dbg !8922 {
entry:
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8923, metadata !DIExpression()), !dbg !8925
  %serio.addr = alloca %struct.serio*, align 8
  store %struct.serio* %serio, %struct.serio** %serio.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.serio** %serio.addr, metadata !8927, metadata !DIExpression()), !dbg !8928
  %0 = load %struct.serio*, %struct.serio** %serio.addr, align 8, !dbg !8929
  %lock = getelementptr inbounds %struct.serio, %struct.serio* %0, i32 0, i32 6, !dbg !8930
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  call void @arch_local_irq_enable() #12, !dbg !8931
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !8934, !srcloc !8936
  %1 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !8937
  %2 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %1, i32 0, i32 0, !dbg !8937
  %rlock.i = bitcast %union.anon.0* %2 to %struct.raw_spinlock*, !dbg !8937
  ret void, !dbg !8939
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_disable() #0 !dbg !8940 {
entry:
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !8942, metadata !DIExpression()), !dbg !8944
  %0 = load i64, i64* %__edi, align 8, !dbg !8944
  store i64 %0, i64* %__edi, align 8, !dbg !8944
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !8945, metadata !DIExpression()), !dbg !8944
  %1 = load i64, i64* %__esi, align 8, !dbg !8944
  store i64 %1, i64* %__esi, align 8, !dbg !8944
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !8946, metadata !DIExpression()), !dbg !8944
  %2 = load i64, i64* %__edx, align 8, !dbg !8944
  store i64 %2, i64* %__edx, align 8, !dbg !8944
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !8947, metadata !DIExpression()), !dbg !8944
  %3 = load i64, i64* %__ecx, align 8, !dbg !8944
  store i64 %3, i64* %__ecx, align 8, !dbg !8944
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !8948, metadata !DIExpression()), !dbg !8944
  %4 = load i64, i64* %__eax, align 8, !dbg !8944
  store i64 %4, i64* %__eax, align 8, !dbg !8944
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 2, i32 0), align 8, !dbg !8944
  %6 = call i64 @llvm.read_register.i64(metadata !4144), !dbg !8944
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 38, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 2, i32 0), i32 1, i64 %6) #7, !dbg !8944, !srcloc !8949
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !8944
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !8944
  store i64 %asmresult, i64* %__eax, align 8, !dbg !8944
  call void @llvm.write_register.i64(metadata !4144, i64 %asmresult1), !dbg !8944
  ret void, !dbg !8950
}

; Function Attrs: nounwind readonly
declare i64 @llvm.read_register.i64(metadata) #6

; Function Attrs: nounwind
declare void @llvm.write_register.i64(metadata, i64) #7

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_enable() #0 !dbg !8951 {
entry:
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !8952, metadata !DIExpression()), !dbg !8954
  %0 = load i64, i64* %__edi, align 8, !dbg !8954
  store i64 %0, i64* %__edi, align 8, !dbg !8954
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !8955, metadata !DIExpression()), !dbg !8954
  %1 = load i64, i64* %__esi, align 8, !dbg !8954
  store i64 %1, i64* %__esi, align 8, !dbg !8954
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !8956, metadata !DIExpression()), !dbg !8954
  %2 = load i64, i64* %__edx, align 8, !dbg !8954
  store i64 %2, i64* %__edx, align 8, !dbg !8954
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !8957, metadata !DIExpression()), !dbg !8954
  %3 = load i64, i64* %__ecx, align 8, !dbg !8954
  store i64 %3, i64* %__ecx, align 8, !dbg !8954
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !8958, metadata !DIExpression()), !dbg !8954
  %4 = load i64, i64* %__eax, align 8, !dbg !8954
  store i64 %4, i64* %__eax, align 8, !dbg !8954
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 3, i32 0), align 8, !dbg !8954
  %6 = call i64 @llvm.read_register.i64(metadata !4144), !dbg !8954
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 39, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 3, i32 0), i32 1, i64 %6) #7, !dbg !8954, !srcloc !8959
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !8954
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !8954
  store i64 %asmresult, i64* %__eax, align 8, !dbg !8954
  call void @llvm.write_register.i64(metadata !4144, i64 %asmresult1), !dbg !8954
  ret void, !dbg !8960
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @alps_tap_mode(%struct.psmouse* %psmouse, i32 %enable) #0 !dbg !8961 {
entry:
  %retval = alloca i32, align 4
  %psmouse.addr = alloca %struct.psmouse*, align 8
  %enable.addr = alloca i32, align 4
  %ps2dev = alloca %struct.ps2dev*, align 8
  %cmd = alloca i32, align 4
  %tap_arg = alloca i8, align 1
  %param = alloca [4 x i8], align 1
  store %struct.psmouse* %psmouse, %struct.psmouse** %psmouse.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.psmouse** %psmouse.addr, metadata !8962, metadata !DIExpression()), !dbg !8963
  store i32 %enable, i32* %enable.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %enable.addr, metadata !8964, metadata !DIExpression()), !dbg !8965
  call void @llvm.dbg.declare(metadata %struct.ps2dev** %ps2dev, metadata !8966, metadata !DIExpression()), !dbg !8967
  %0 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !8968
  %ps2dev1 = getelementptr inbounds %struct.psmouse, %struct.psmouse* %0, i32 0, i32 2, !dbg !8969
  store %struct.ps2dev* %ps2dev1, %struct.ps2dev** %ps2dev, align 8, !dbg !8967
  call void @llvm.dbg.declare(metadata i32* %cmd, metadata !8970, metadata !DIExpression()), !dbg !8971
  %1 = load i32, i32* %enable.addr, align 4, !dbg !8972
  %tobool = icmp ne i32 %1, 0, !dbg !8972
  %2 = zext i1 %tobool to i64, !dbg !8972
  %cond = select i1 %tobool, i32 4339, i32 4328, !dbg !8972
  store i32 %cond, i32* %cmd, align 4, !dbg !8971
  call void @llvm.dbg.declare(metadata i8* %tap_arg, metadata !8973, metadata !DIExpression()), !dbg !8974
  %3 = load i32, i32* %enable.addr, align 4, !dbg !8975
  %tobool2 = icmp ne i32 %3, 0, !dbg !8975
  %4 = zext i1 %tobool2 to i64, !dbg !8975
  %cond3 = select i1 %tobool2, i32 10, i32 0, !dbg !8975
  %conv = trunc i32 %cond3 to i8, !dbg !8975
  store i8 %conv, i8* %tap_arg, align 1, !dbg !8974
  call void @llvm.dbg.declare(metadata [4 x i8]* %param, metadata !8976, metadata !DIExpression()), !dbg !8977
  %5 = load %struct.ps2dev*, %struct.ps2dev** %ps2dev, align 8, !dbg !8978
  %arraydecay = getelementptr inbounds [4 x i8], [4 x i8]* %param, i64 0, i64 0, !dbg !8980
  %call = call i32 @ps2_command(%struct.ps2dev* %5, i8* %arraydecay, i32 1001) #10, !dbg !8981
  %tobool4 = icmp ne i32 %call, 0, !dbg !8981
  br i1 %tobool4, label %if.then, label %lor.lhs.false, !dbg !8982

lor.lhs.false:                                    ; preds = %entry
  %6 = load %struct.ps2dev*, %struct.ps2dev** %ps2dev, align 8, !dbg !8983
  %call5 = call i32 @ps2_command(%struct.ps2dev* %6, i8* null, i32 245) #10, !dbg !8984
  %tobool6 = icmp ne i32 %call5, 0, !dbg !8984
  br i1 %tobool6, label %if.then, label %lor.lhs.false7, !dbg !8985

lor.lhs.false7:                                   ; preds = %lor.lhs.false
  %7 = load %struct.ps2dev*, %struct.ps2dev** %ps2dev, align 8, !dbg !8986
  %call8 = call i32 @ps2_command(%struct.ps2dev* %7, i8* null, i32 245) #10, !dbg !8987
  %tobool9 = icmp ne i32 %call8, 0, !dbg !8987
  br i1 %tobool9, label %if.then, label %lor.lhs.false10, !dbg !8988

lor.lhs.false10:                                  ; preds = %lor.lhs.false7
  %8 = load %struct.ps2dev*, %struct.ps2dev** %ps2dev, align 8, !dbg !8989
  %9 = load i32, i32* %cmd, align 4, !dbg !8990
  %call11 = call i32 @ps2_command(%struct.ps2dev* %8, i8* %tap_arg, i32 %9) #10, !dbg !8991
  %tobool12 = icmp ne i32 %call11, 0, !dbg !8991
  br i1 %tobool12, label %if.then, label %if.end, !dbg !8992

if.then:                                          ; preds = %lor.lhs.false10, %lor.lhs.false7, %lor.lhs.false, %entry
  store i32 -1, i32* %retval, align 4, !dbg !8993
  br label %return, !dbg !8993

if.end:                                           ; preds = %lor.lhs.false10
  %10 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !8994
  %arraydecay13 = getelementptr inbounds [4 x i8], [4 x i8]* %param, i64 0, i64 0, !dbg !8996
  %call14 = call i32 @alps_get_status(%struct.psmouse* %10, i8* %arraydecay13) #10, !dbg !8997
  %tobool15 = icmp ne i32 %call14, 0, !dbg !8997
  br i1 %tobool15, label %if.then16, label %if.end17, !dbg !8998

if.then16:                                        ; preds = %if.end
  store i32 -1, i32* %retval, align 4, !dbg !8999
  br label %return, !dbg !8999

if.end17:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !9000
  br label %return, !dbg !9000

return:                                           ; preds = %if.end17, %if.then16, %if.then
  %11 = load i32, i32* %retval, align 4, !dbg !9001
  ret i32 %11, !dbg !9001
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @alps_absolute_mode_v1_v2(%struct.psmouse* %psmouse) #0 !dbg !9002 {
entry:
  %retval = alloca i32, align 4
  %psmouse.addr = alloca %struct.psmouse*, align 8
  %ps2dev = alloca %struct.ps2dev*, align 8
  store %struct.psmouse* %psmouse, %struct.psmouse** %psmouse.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.psmouse** %psmouse.addr, metadata !9003, metadata !DIExpression()), !dbg !9004
  call void @llvm.dbg.declare(metadata %struct.ps2dev** %ps2dev, metadata !9005, metadata !DIExpression()), !dbg !9006
  %0 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !9007
  %ps2dev1 = getelementptr inbounds %struct.psmouse, %struct.psmouse* %0, i32 0, i32 2, !dbg !9008
  store %struct.ps2dev* %ps2dev1, %struct.ps2dev** %ps2dev, align 8, !dbg !9006
  %1 = load %struct.ps2dev*, %struct.ps2dev** %ps2dev, align 8, !dbg !9009
  %call = call i32 @ps2_command(%struct.ps2dev* %1, i8* null, i32 245) #10, !dbg !9011
  %tobool = icmp ne i32 %call, 0, !dbg !9011
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !9012

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.ps2dev*, %struct.ps2dev** %ps2dev, align 8, !dbg !9013
  %call2 = call i32 @ps2_command(%struct.ps2dev* %2, i8* null, i32 245) #10, !dbg !9014
  %tobool3 = icmp ne i32 %call2, 0, !dbg !9014
  br i1 %tobool3, label %if.then, label %lor.lhs.false4, !dbg !9015

lor.lhs.false4:                                   ; preds = %lor.lhs.false
  %3 = load %struct.ps2dev*, %struct.ps2dev** %ps2dev, align 8, !dbg !9016
  %call5 = call i32 @ps2_command(%struct.ps2dev* %3, i8* null, i32 245) #10, !dbg !9017
  %tobool6 = icmp ne i32 %call5, 0, !dbg !9017
  br i1 %tobool6, label %if.then, label %lor.lhs.false7, !dbg !9018

lor.lhs.false7:                                   ; preds = %lor.lhs.false4
  %4 = load %struct.ps2dev*, %struct.ps2dev** %ps2dev, align 8, !dbg !9019
  %call8 = call i32 @ps2_command(%struct.ps2dev* %4, i8* null, i32 245) #10, !dbg !9020
  %tobool9 = icmp ne i32 %call8, 0, !dbg !9020
  br i1 %tobool9, label %if.then, label %lor.lhs.false10, !dbg !9021

lor.lhs.false10:                                  ; preds = %lor.lhs.false7
  %5 = load %struct.ps2dev*, %struct.ps2dev** %ps2dev, align 8, !dbg !9022
  %call11 = call i32 @ps2_command(%struct.ps2dev* %5, i8* null, i32 244) #10, !dbg !9023
  %tobool12 = icmp ne i32 %call11, 0, !dbg !9023
  br i1 %tobool12, label %if.then, label %if.end, !dbg !9024

if.then:                                          ; preds = %lor.lhs.false10, %lor.lhs.false7, %lor.lhs.false4, %lor.lhs.false, %entry
  store i32 -1, i32* %retval, align 4, !dbg !9025
  br label %return, !dbg !9025

if.end:                                           ; preds = %lor.lhs.false10
  %6 = load %struct.ps2dev*, %struct.ps2dev** %ps2dev, align 8, !dbg !9026
  %call13 = call i32 @ps2_command(%struct.ps2dev* %6, i8* null, i32 240) #10, !dbg !9027
  store i32 %call13, i32* %retval, align 4, !dbg !9028
  br label %return, !dbg !9028

return:                                           ; preds = %if.end, %if.then
  %7 = load i32, i32* %retval, align 4, !dbg !9029
  ret i32 %7, !dbg !9029
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @alps_get_status(%struct.psmouse* %psmouse, i8* %param) #0 !dbg !9030 {
entry:
  %retval = alloca i32, align 4
  %psmouse.addr = alloca %struct.psmouse*, align 8
  %param.addr = alloca i8*, align 8
  store %struct.psmouse* %psmouse, %struct.psmouse** %psmouse.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.psmouse** %psmouse.addr, metadata !9033, metadata !DIExpression()), !dbg !9034
  store i8* %param, i8** %param.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %param.addr, metadata !9035, metadata !DIExpression()), !dbg !9036
  %0 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !9037
  %1 = load i8*, i8** %param.addr, align 8, !dbg !9039
  %call = call i32 @alps_rpt_cmd(%struct.psmouse* %0, i32 0, i32 245, i8* %1) #10, !dbg !9040
  %tobool = icmp ne i32 %call, 0, !dbg !9040
  br i1 %tobool, label %if.then, label %if.end, !dbg !9041

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !9042
  br label %return, !dbg !9042

if.end:                                           ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !9043
  br label %return, !dbg !9043

return:                                           ; preds = %if.end, %if.then
  %2 = load i32, i32* %retval, align 4, !dbg !9044
  ret i32 %2, !dbg !9044
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @input_report_rel(%struct.input_dev* %dev, i32 %code, i32 %value) #0 !dbg !9045 {
entry:
  %dev.addr = alloca %struct.input_dev*, align 8
  %code.addr = alloca i32, align 4
  %value.addr = alloca i32, align 4
  store %struct.input_dev* %dev, %struct.input_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.input_dev** %dev.addr, metadata !9046, metadata !DIExpression()), !dbg !9047
  store i32 %code, i32* %code.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %code.addr, metadata !9048, metadata !DIExpression()), !dbg !9049
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !9050, metadata !DIExpression()), !dbg !9051
  %0 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !9052
  %1 = load i32, i32* %code.addr, align 4, !dbg !9053
  %2 = load i32, i32* %value.addr, align 4, !dbg !9054
  call void @input_event(%struct.input_dev* %0, i32 2, i32 %1, i32 %2) #10, !dbg !9055
  ret void, !dbg !9056
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @input_report_abs(%struct.input_dev* %dev, i32 %code, i32 %value) #0 !dbg !9057 {
entry:
  %dev.addr = alloca %struct.input_dev*, align 8
  %code.addr = alloca i32, align 4
  %value.addr = alloca i32, align 4
  store %struct.input_dev* %dev, %struct.input_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.input_dev** %dev.addr, metadata !9058, metadata !DIExpression()), !dbg !9059
  store i32 %code, i32* %code.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %code.addr, metadata !9060, metadata !DIExpression()), !dbg !9061
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !9062, metadata !DIExpression()), !dbg !9063
  %0 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !9064
  %1 = load i32, i32* %code.addr, align 4, !dbg !9065
  %2 = load i32, i32* %value.addr, align 4, !dbg !9066
  call void @input_event(%struct.input_dev* %0, i32 3, i32 %1, i32 %2) #10, !dbg !9067
  ret void, !dbg !9068
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @alps_setup_trackstick_v3(%struct.psmouse* %psmouse, i32 %reg_base) #0 !dbg !9069 {
entry:
  %retval = alloca i32, align 4
  %psmouse.addr = alloca %struct.psmouse*, align 8
  %reg_base.addr = alloca i32, align 4
  %ret = alloca i32, align 4
  %reg_val = alloca i32, align 4
  %param = alloca [4 x i8], align 1
  store %struct.psmouse* %psmouse, %struct.psmouse** %psmouse.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.psmouse** %psmouse.addr, metadata !9070, metadata !DIExpression()), !dbg !9071
  store i32 %reg_base, i32* %reg_base.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %reg_base.addr, metadata !9072, metadata !DIExpression()), !dbg !9073
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9074, metadata !DIExpression()), !dbg !9075
  store i32 0, i32* %ret, align 4, !dbg !9075
  call void @llvm.dbg.declare(metadata i32* %reg_val, metadata !9076, metadata !DIExpression()), !dbg !9077
  call void @llvm.dbg.declare(metadata [4 x i8]* %param, metadata !9078, metadata !DIExpression()), !dbg !9079
  %0 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !9080
  %1 = load i32, i32* %reg_base.addr, align 4, !dbg !9082
  %call = call i32 @alps_passthrough_mode_v3(%struct.psmouse* %0, i32 %1, i1 zeroext true) #10, !dbg !9083
  %tobool = icmp ne i32 %call, 0, !dbg !9083
  br i1 %tobool, label %if.then, label %if.end, !dbg !9084

if.then:                                          ; preds = %entry
  store i32 -5, i32* %retval, align 4, !dbg !9085
  br label %return, !dbg !9085

if.end:                                           ; preds = %entry
  %2 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !9086
  %arraydecay = getelementptr inbounds [4 x i8], [4 x i8]* %param, i64 0, i64 0, !dbg !9088
  %call1 = call i32 @alps_rpt_cmd(%struct.psmouse* %2, i32 0, i32 231, i8* %arraydecay) #10, !dbg !9089
  %tobool2 = icmp ne i32 %call1, 0, !dbg !9089
  br i1 %tobool2, label %if.then3, label %if.else, !dbg !9090

if.then3:                                         ; preds = %if.end
  %3 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !9091
  %ps2dev = getelementptr inbounds %struct.psmouse, %struct.psmouse* %3, i32 0, i32 2, !dbg !9091
  %serio = getelementptr inbounds %struct.ps2dev, %struct.ps2dev* %ps2dev, i32 0, i32 0, !dbg !9091
  %4 = load %struct.serio*, %struct.serio** %serio, align 8, !dbg !9091
  %dev = getelementptr inbounds %struct.serio, %struct.serio* %4, i32 0, i32 18, !dbg !9091
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.20, i64 0, i64 0)) #11, !dbg !9091
  store i32 -19, i32* %ret, align 4, !dbg !9093
  br label %if.end11, !dbg !9094

if.else:                                          ; preds = %if.end
  %5 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !9095
  %call4 = call i32 @alps_trackstick_enter_extended_mode_v3_v6(%struct.psmouse* %5) #10, !dbg !9098
  %tobool5 = icmp ne i32 %call4, 0, !dbg !9098
  br i1 %tobool5, label %if.then6, label %if.end10, !dbg !9099

if.then6:                                         ; preds = %if.else
  %6 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !9100
  %ps2dev7 = getelementptr inbounds %struct.psmouse, %struct.psmouse* %6, i32 0, i32 2, !dbg !9100
  %serio8 = getelementptr inbounds %struct.ps2dev, %struct.ps2dev* %ps2dev7, i32 0, i32 0, !dbg !9100
  %7 = load %struct.serio*, %struct.serio** %serio8, align 8, !dbg !9100
  %dev9 = getelementptr inbounds %struct.serio, %struct.serio* %7, i32 0, i32 18, !dbg !9100
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev9, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.21, i64 0, i64 0)) #11, !dbg !9100
  store i32 -5, i32* %ret, align 4, !dbg !9102
  br label %if.end10, !dbg !9103

if.end10:                                         ; preds = %if.then6, %if.else
  br label %if.end11

if.end11:                                         ; preds = %if.end10, %if.then3
  %8 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !9104
  %9 = load i32, i32* %reg_base.addr, align 4, !dbg !9106
  %call12 = call i32 @alps_passthrough_mode_v3(%struct.psmouse* %8, i32 %9, i1 zeroext false) #10, !dbg !9107
  %tobool13 = icmp ne i32 %call12, 0, !dbg !9107
  br i1 %tobool13, label %if.then14, label %if.end15, !dbg !9108

if.then14:                                        ; preds = %if.end11
  store i32 -5, i32* %retval, align 4, !dbg !9109
  br label %return, !dbg !9109

if.end15:                                         ; preds = %if.end11
  %10 = load i32, i32* %ret, align 4, !dbg !9110
  %tobool16 = icmp ne i32 %10, 0, !dbg !9110
  br i1 %tobool16, label %if.then17, label %if.end18, !dbg !9112

if.then17:                                        ; preds = %if.end15
  %11 = load i32, i32* %ret, align 4, !dbg !9113
  store i32 %11, i32* %retval, align 4, !dbg !9114
  br label %return, !dbg !9114

if.end18:                                         ; preds = %if.end15
  %12 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !9115
  %call19 = call i32 @alps_enter_command_mode(%struct.psmouse* %12) #10, !dbg !9117
  %tobool20 = icmp ne i32 %call19, 0, !dbg !9117
  br i1 %tobool20, label %if.then21, label %if.end22, !dbg !9118

if.then21:                                        ; preds = %if.end18
  store i32 -5, i32* %retval, align 4, !dbg !9119
  br label %return, !dbg !9119

if.end22:                                         ; preds = %if.end18
  %13 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !9120
  %14 = load i32, i32* %reg_base.addr, align 4, !dbg !9121
  %add = add i32 %14, 8, !dbg !9122
  %call23 = call i32 @alps_command_mode_read_reg(%struct.psmouse* %13, i32 %add) #10, !dbg !9123
  store i32 %call23, i32* %reg_val, align 4, !dbg !9124
  %15 = load i32, i32* %reg_val, align 4, !dbg !9125
  %cmp = icmp eq i32 %15, -1, !dbg !9127
  br i1 %cmp, label %if.then24, label %if.else25, !dbg !9128

if.then24:                                        ; preds = %if.end22
  store i32 -5, i32* %ret, align 4, !dbg !9129
  br label %if.end32, !dbg !9131

if.else25:                                        ; preds = %if.end22
  %16 = load i32, i32* %reg_val, align 4, !dbg !9132
  %conv = sext i32 %16 to i64, !dbg !9132
  %or = or i64 %conv, 2, !dbg !9132
  %conv26 = trunc i64 %or to i32, !dbg !9132
  store i32 %conv26, i32* %reg_val, align 4, !dbg !9132
  %17 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !9134
  %18 = load i32, i32* %reg_val, align 4, !dbg !9136
  %conv27 = trunc i32 %18 to i8, !dbg !9136
  %call28 = call i32 @__alps_command_mode_write_reg(%struct.psmouse* %17, i8 zeroext %conv27) #10, !dbg !9137
  %tobool29 = icmp ne i32 %call28, 0, !dbg !9137
  br i1 %tobool29, label %if.then30, label %if.end31, !dbg !9138

if.then30:                                        ; preds = %if.else25
  store i32 -5, i32* %ret, align 4, !dbg !9139
  br label %if.end31, !dbg !9140

if.end31:                                         ; preds = %if.then30, %if.else25
  br label %if.end32

if.end32:                                         ; preds = %if.end31, %if.then24
  %19 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !9141
  %call33 = call i32 @alps_exit_command_mode(%struct.psmouse* %19) #10, !dbg !9143
  %tobool34 = icmp ne i32 %call33, 0, !dbg !9143
  br i1 %tobool34, label %if.then35, label %if.end36, !dbg !9144

if.then35:                                        ; preds = %if.end32
  store i32 -5, i32* %retval, align 4, !dbg !9145
  br label %return, !dbg !9145

if.end36:                                         ; preds = %if.end32
  %20 = load i32, i32* %ret, align 4, !dbg !9146
  store i32 %20, i32* %retval, align 4, !dbg !9147
  br label %return, !dbg !9147

return:                                           ; preds = %if.end36, %if.then35, %if.then21, %if.then17, %if.then14, %if.then
  %21 = load i32, i32* %retval, align 4, !dbg !9148
  ret i32 %21, !dbg !9148
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @alps_enter_command_mode(%struct.psmouse* %psmouse) #0 !dbg !9149 {
entry:
  %retval = alloca i32, align 4
  %psmouse.addr = alloca %struct.psmouse*, align 8
  %param = alloca [4 x i8], align 1
  store %struct.psmouse* %psmouse, %struct.psmouse** %psmouse.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.psmouse** %psmouse.addr, metadata !9150, metadata !DIExpression()), !dbg !9151
  call void @llvm.dbg.declare(metadata [4 x i8]* %param, metadata !9152, metadata !DIExpression()), !dbg !9153
  %0 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !9154
  %arraydecay = getelementptr inbounds [4 x i8], [4 x i8]* %param, i64 0, i64 0, !dbg !9156
  %call = call i32 @alps_rpt_cmd(%struct.psmouse* %0, i32 0, i32 236, i8* %arraydecay) #10, !dbg !9157
  %tobool = icmp ne i32 %call, 0, !dbg !9157
  br i1 %tobool, label %if.then, label %if.end, !dbg !9158

if.then:                                          ; preds = %entry
  %1 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !9159
  %ps2dev = getelementptr inbounds %struct.psmouse, %struct.psmouse* %1, i32 0, i32 2, !dbg !9159
  %serio = getelementptr inbounds %struct.ps2dev, %struct.ps2dev* %ps2dev, i32 0, i32 0, !dbg !9159
  %2 = load %struct.serio*, %struct.serio** %serio, align 8, !dbg !9159
  %dev = getelementptr inbounds %struct.serio, %struct.serio* %2, i32 0, i32 18, !dbg !9159
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.22, i64 0, i64 0)) #11, !dbg !9159
  store i32 -1, i32* %retval, align 4, !dbg !9161
  br label %return, !dbg !9161

if.end:                                           ; preds = %entry
  %arraydecay1 = getelementptr inbounds [4 x i8], [4 x i8]* %param, i64 0, i64 0, !dbg !9162
  %call2 = call zeroext i1 @alps_check_valid_firmware_id(i8* %arraydecay1) #10, !dbg !9164
  br i1 %call2, label %if.end4, label %if.then3, !dbg !9165

if.then3:                                         ; preds = %if.end
  store i32 -1, i32* %retval, align 4, !dbg !9166
  br label %return, !dbg !9166

if.end4:                                          ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !9168
  br label %return, !dbg !9168

return:                                           ; preds = %if.end4, %if.then3, %if.then
  %3 = load i32, i32* %retval, align 4, !dbg !9169
  ret i32 %3, !dbg !9169
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @alps_absolute_mode_v3(%struct.psmouse* %psmouse) #0 !dbg !9170 {
entry:
  %retval = alloca i32, align 4
  %psmouse.addr = alloca %struct.psmouse*, align 8
  %reg_val = alloca i32, align 4
  store %struct.psmouse* %psmouse, %struct.psmouse** %psmouse.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.psmouse** %psmouse.addr, metadata !9171, metadata !DIExpression()), !dbg !9172
  call void @llvm.dbg.declare(metadata i32* %reg_val, metadata !9173, metadata !DIExpression()), !dbg !9174
  %0 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !9175
  %call = call i32 @alps_command_mode_read_reg(%struct.psmouse* %0, i32 4) #10, !dbg !9176
  store i32 %call, i32* %reg_val, align 4, !dbg !9177
  %1 = load i32, i32* %reg_val, align 4, !dbg !9178
  %cmp = icmp eq i32 %1, -1, !dbg !9180
  br i1 %cmp, label %if.then, label %if.end, !dbg !9181

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !9182
  br label %return, !dbg !9182

if.end:                                           ; preds = %entry
  %2 = load i32, i32* %reg_val, align 4, !dbg !9183
  %or = or i32 %2, 6, !dbg !9183
  store i32 %or, i32* %reg_val, align 4, !dbg !9183
  %3 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !9184
  %4 = load i32, i32* %reg_val, align 4, !dbg !9186
  %conv = trunc i32 %4 to i8, !dbg !9186
  %call1 = call i32 @__alps_command_mode_write_reg(%struct.psmouse* %3, i8 zeroext %conv) #10, !dbg !9187
  %tobool = icmp ne i32 %call1, 0, !dbg !9187
  br i1 %tobool, label %if.then2, label %if.end3, !dbg !9188

if.then2:                                         ; preds = %if.end
  store i32 -1, i32* %retval, align 4, !dbg !9189
  br label %return, !dbg !9189

if.end3:                                          ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !9190
  br label %return, !dbg !9190

return:                                           ; preds = %if.end3, %if.then2, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !9191
  ret i32 %5, !dbg !9191
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @alps_command_mode_read_reg(%struct.psmouse* %psmouse, i32 %addr) #0 !dbg !9192 {
entry:
  %retval = alloca i32, align 4
  %psmouse.addr = alloca %struct.psmouse*, align 8
  %addr.addr = alloca i32, align 4
  store %struct.psmouse* %psmouse, %struct.psmouse** %psmouse.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.psmouse** %psmouse.addr, metadata !9193, metadata !DIExpression()), !dbg !9194
  store i32 %addr, i32* %addr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %addr.addr, metadata !9195, metadata !DIExpression()), !dbg !9196
  %0 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !9197
  %1 = load i32, i32* %addr.addr, align 4, !dbg !9199
  %call = call i32 @alps_command_mode_set_addr(%struct.psmouse* %0, i32 %1) #10, !dbg !9200
  %tobool = icmp ne i32 %call, 0, !dbg !9200
  br i1 %tobool, label %if.then, label %if.end, !dbg !9201

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !9202
  br label %return, !dbg !9202

if.end:                                           ; preds = %entry
  %2 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !9203
  %3 = load i32, i32* %addr.addr, align 4, !dbg !9204
  %call1 = call i32 @__alps_command_mode_read_reg(%struct.psmouse* %2, i32 %3) #10, !dbg !9205
  store i32 %call1, i32* %retval, align 4, !dbg !9206
  br label %return, !dbg !9206

return:                                           ; preds = %if.end, %if.then
  %4 = load i32, i32* %retval, align 4, !dbg !9207
  ret i32 %4, !dbg !9207
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__alps_command_mode_write_reg(%struct.psmouse* %psmouse, i8 zeroext %value) #0 !dbg !9208 {
entry:
  %retval = alloca i32, align 4
  %psmouse.addr = alloca %struct.psmouse*, align 8
  %value.addr = alloca i8, align 1
  store %struct.psmouse* %psmouse, %struct.psmouse** %psmouse.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.psmouse** %psmouse.addr, metadata !9211, metadata !DIExpression()), !dbg !9212
  store i8 %value, i8* %value.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %value.addr, metadata !9213, metadata !DIExpression()), !dbg !9214
  %0 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !9215
  %1 = load i8, i8* %value.addr, align 1, !dbg !9217
  %conv = zext i8 %1 to i32, !dbg !9217
  %shr = ashr i32 %conv, 4, !dbg !9218
  %and = and i32 %shr, 15, !dbg !9219
  %call = call i32 @alps_command_mode_send_nibble(%struct.psmouse* %0, i32 %and) #10, !dbg !9220
  %tobool = icmp ne i32 %call, 0, !dbg !9220
  br i1 %tobool, label %if.then, label %if.end, !dbg !9221

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !9222
  br label %return, !dbg !9222

if.end:                                           ; preds = %entry
  %2 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !9223
  %3 = load i8, i8* %value.addr, align 1, !dbg !9225
  %conv1 = zext i8 %3 to i32, !dbg !9225
  %and2 = and i32 %conv1, 15, !dbg !9226
  %call3 = call i32 @alps_command_mode_send_nibble(%struct.psmouse* %2, i32 %and2) #10, !dbg !9227
  %tobool4 = icmp ne i32 %call3, 0, !dbg !9227
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !9228

if.then5:                                         ; preds = %if.end
  store i32 -1, i32* %retval, align 4, !dbg !9229
  br label %return, !dbg !9229

if.end6:                                          ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !9230
  br label %return, !dbg !9230

return:                                           ; preds = %if.end6, %if.then5, %if.then
  %4 = load i32, i32* %retval, align 4, !dbg !9231
  ret i32 %4, !dbg !9231
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @alps_command_mode_write_reg(%struct.psmouse* %psmouse, i32 %addr, i8 zeroext %value) #0 !dbg !9232 {
entry:
  %retval = alloca i32, align 4
  %psmouse.addr = alloca %struct.psmouse*, align 8
  %addr.addr = alloca i32, align 4
  %value.addr = alloca i8, align 1
  store %struct.psmouse* %psmouse, %struct.psmouse** %psmouse.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.psmouse** %psmouse.addr, metadata !9235, metadata !DIExpression()), !dbg !9236
  store i32 %addr, i32* %addr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %addr.addr, metadata !9237, metadata !DIExpression()), !dbg !9238
  store i8 %value, i8* %value.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %value.addr, metadata !9239, metadata !DIExpression()), !dbg !9240
  %0 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !9241
  %1 = load i32, i32* %addr.addr, align 4, !dbg !9243
  %call = call i32 @alps_command_mode_set_addr(%struct.psmouse* %0, i32 %1) #10, !dbg !9244
  %tobool = icmp ne i32 %call, 0, !dbg !9244
  br i1 %tobool, label %if.then, label %if.end, !dbg !9245

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !9246
  br label %return, !dbg !9246

if.end:                                           ; preds = %entry
  %2 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !9247
  %3 = load i8, i8* %value.addr, align 1, !dbg !9248
  %call1 = call i32 @__alps_command_mode_write_reg(%struct.psmouse* %2, i8 zeroext %3) #10, !dbg !9249
  store i32 %call1, i32* %retval, align 4, !dbg !9250
  br label %return, !dbg !9250

return:                                           ; preds = %if.end, %if.then
  %4 = load i32, i32* %retval, align 4, !dbg !9251
  ret i32 %4, !dbg !9251
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @alps_passthrough_mode_v3(%struct.psmouse* %psmouse, i32 %reg_base, i1 zeroext %enable) #0 !dbg !9252 {
entry:
  %retval = alloca i32, align 4
  %psmouse.addr = alloca %struct.psmouse*, align 8
  %reg_base.addr = alloca i32, align 4
  %enable.addr = alloca i8, align 1
  %reg_val = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.psmouse* %psmouse, %struct.psmouse** %psmouse.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.psmouse** %psmouse.addr, metadata !9255, metadata !DIExpression()), !dbg !9256
  store i32 %reg_base, i32* %reg_base.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %reg_base.addr, metadata !9257, metadata !DIExpression()), !dbg !9258
  %frombool = zext i1 %enable to i8
  store i8 %frombool, i8* %enable.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %enable.addr, metadata !9259, metadata !DIExpression()), !dbg !9260
  call void @llvm.dbg.declare(metadata i32* %reg_val, metadata !9261, metadata !DIExpression()), !dbg !9262
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9263, metadata !DIExpression()), !dbg !9264
  store i32 -1, i32* %ret, align 4, !dbg !9264
  %0 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !9265
  %call = call i32 @alps_enter_command_mode(%struct.psmouse* %0) #10, !dbg !9267
  %tobool = icmp ne i32 %call, 0, !dbg !9267
  br i1 %tobool, label %if.then, label %if.end, !dbg !9268

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !9269
  br label %return, !dbg !9269

if.end:                                           ; preds = %entry
  %1 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !9270
  %2 = load i32, i32* %reg_base.addr, align 4, !dbg !9271
  %add = add i32 %2, 8, !dbg !9272
  %call1 = call i32 @alps_command_mode_read_reg(%struct.psmouse* %1, i32 %add) #10, !dbg !9273
  store i32 %call1, i32* %reg_val, align 4, !dbg !9274
  %3 = load i32, i32* %reg_val, align 4, !dbg !9275
  %cmp = icmp eq i32 %3, -1, !dbg !9277
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !9278

if.then2:                                         ; preds = %if.end
  br label %error, !dbg !9279

if.end3:                                          ; preds = %if.end
  %4 = load i8, i8* %enable.addr, align 1, !dbg !9280
  %tobool4 = trunc i8 %4 to i1, !dbg !9280
  br i1 %tobool4, label %if.then5, label %if.else, !dbg !9282

if.then5:                                         ; preds = %if.end3
  %5 = load i32, i32* %reg_val, align 4, !dbg !9283
  %or = or i32 %5, 1, !dbg !9283
  store i32 %or, i32* %reg_val, align 4, !dbg !9283
  br label %if.end6, !dbg !9284

if.else:                                          ; preds = %if.end3
  %6 = load i32, i32* %reg_val, align 4, !dbg !9285
  %and = and i32 %6, -2, !dbg !9285
  store i32 %and, i32* %reg_val, align 4, !dbg !9285
  br label %if.end6

if.end6:                                          ; preds = %if.else, %if.then5
  %7 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !9286
  %8 = load i32, i32* %reg_val, align 4, !dbg !9287
  %conv = trunc i32 %8 to i8, !dbg !9287
  %call7 = call i32 @__alps_command_mode_write_reg(%struct.psmouse* %7, i8 zeroext %conv) #10, !dbg !9288
  store i32 %call7, i32* %ret, align 4, !dbg !9289
  br label %error, !dbg !9290

error:                                            ; preds = %if.end6, %if.then2
  call void @llvm.dbg.label(metadata !9291), !dbg !9292
  %9 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !9293
  %call8 = call i32 @alps_exit_command_mode(%struct.psmouse* %9) #10, !dbg !9295
  %tobool9 = icmp ne i32 %call8, 0, !dbg !9295
  br i1 %tobool9, label %if.then10, label %if.end11, !dbg !9296

if.then10:                                        ; preds = %error
  store i32 -1, i32* %ret, align 4, !dbg !9297
  br label %if.end11, !dbg !9298

if.end11:                                         ; preds = %if.then10, %error
  %10 = load i32, i32* %ret, align 4, !dbg !9299
  store i32 %10, i32* %retval, align 4, !dbg !9300
  br label %return, !dbg !9300

return:                                           ; preds = %if.end11, %if.then
  %11 = load i32, i32* %retval, align 4, !dbg !9301
  ret i32 %11, !dbg !9301
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @alps_trackstick_enter_extended_mode_v3_v6(%struct.psmouse* %psmouse) #0 !dbg !9302 {
entry:
  %retval = alloca i32, align 4
  %psmouse.addr = alloca %struct.psmouse*, align 8
  %param = alloca [2 x i8], align 1
  store %struct.psmouse* %psmouse, %struct.psmouse** %psmouse.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.psmouse** %psmouse.addr, metadata !9303, metadata !DIExpression()), !dbg !9304
  call void @llvm.dbg.declare(metadata [2 x i8]* %param, metadata !9305, metadata !DIExpression()), !dbg !9306
  %0 = bitcast [2 x i8]* %param to i8*, !dbg !9306
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %0, i8* align 1 getelementptr inbounds ([2 x i8], [2 x i8]* @__const.alps_trackstick_enter_extended_mode_v3_v6.param, i32 0, i32 0), i64 2, i1 false), !dbg !9306
  %1 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !9307
  %ps2dev = getelementptr inbounds %struct.psmouse, %struct.psmouse* %1, i32 0, i32 2, !dbg !9309
  %call = call i32 @ps2_command(%struct.ps2dev* %ps2dev, i8* null, i32 230) #10, !dbg !9310
  %tobool = icmp ne i32 %call, 0, !dbg !9310
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !9311

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !9312
  %ps2dev1 = getelementptr inbounds %struct.psmouse, %struct.psmouse* %2, i32 0, i32 2, !dbg !9313
  %call2 = call i32 @ps2_command(%struct.ps2dev* %ps2dev1, i8* null, i32 230) #10, !dbg !9314
  %tobool3 = icmp ne i32 %call2, 0, !dbg !9314
  br i1 %tobool3, label %if.then, label %lor.lhs.false4, !dbg !9315

lor.lhs.false4:                                   ; preds = %lor.lhs.false
  %3 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !9316
  %ps2dev5 = getelementptr inbounds %struct.psmouse, %struct.psmouse* %3, i32 0, i32 2, !dbg !9317
  %call6 = call i32 @ps2_command(%struct.ps2dev* %ps2dev5, i8* null, i32 230) #10, !dbg !9318
  %tobool7 = icmp ne i32 %call6, 0, !dbg !9318
  br i1 %tobool7, label %if.then, label %lor.lhs.false8, !dbg !9319

lor.lhs.false8:                                   ; preds = %lor.lhs.false4
  %4 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !9320
  %ps2dev9 = getelementptr inbounds %struct.psmouse, %struct.psmouse* %4, i32 0, i32 2, !dbg !9321
  %arrayidx = getelementptr [2 x i8], [2 x i8]* %param, i64 0, i64 0, !dbg !9322
  %call10 = call i32 @ps2_command(%struct.ps2dev* %ps2dev9, i8* %arrayidx, i32 4339) #10, !dbg !9323
  %tobool11 = icmp ne i32 %call10, 0, !dbg !9323
  br i1 %tobool11, label %if.then, label %lor.lhs.false12, !dbg !9324

lor.lhs.false12:                                  ; preds = %lor.lhs.false8
  %5 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !9325
  %ps2dev13 = getelementptr inbounds %struct.psmouse, %struct.psmouse* %5, i32 0, i32 2, !dbg !9326
  %arrayidx14 = getelementptr [2 x i8], [2 x i8]* %param, i64 0, i64 1, !dbg !9327
  %call15 = call i32 @ps2_command(%struct.ps2dev* %ps2dev13, i8* %arrayidx14, i32 4339) #10, !dbg !9328
  %tobool16 = icmp ne i32 %call15, 0, !dbg !9328
  br i1 %tobool16, label %if.then, label %if.end, !dbg !9329

if.then:                                          ; preds = %lor.lhs.false12, %lor.lhs.false8, %lor.lhs.false4, %lor.lhs.false, %entry
  store i32 -1, i32* %retval, align 4, !dbg !9330
  br label %return, !dbg !9330

if.end:                                           ; preds = %lor.lhs.false12
  store i32 0, i32* %retval, align 4, !dbg !9331
  br label %return, !dbg !9331

return:                                           ; preds = %if.end, %if.then
  %6 = load i32, i32* %retval, align 4, !dbg !9332
  ret i32 %6, !dbg !9332
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @alps_check_valid_firmware_id(i8* %id) #0 !dbg !9333 {
entry:
  %retval = alloca i1, align 1
  %id.addr = alloca i8*, align 8
  store i8* %id, i8** %id.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %id.addr, metadata !9336, metadata !DIExpression()), !dbg !9337
  %0 = load i8*, i8** %id.addr, align 8, !dbg !9338
  %arrayidx = getelementptr i8, i8* %0, i64 0, !dbg !9338
  %1 = load i8, i8* %arrayidx, align 1, !dbg !9338
  %conv = zext i8 %1 to i32, !dbg !9338
  %cmp = icmp eq i32 %conv, 115, !dbg !9340
  br i1 %cmp, label %if.then, label %if.end, !dbg !9341

if.then:                                          ; preds = %entry
  store i1 true, i1* %retval, align 1, !dbg !9342
  br label %return, !dbg !9342

if.end:                                           ; preds = %entry
  %2 = load i8*, i8** %id.addr, align 8, !dbg !9343
  %arrayidx2 = getelementptr i8, i8* %2, i64 0, !dbg !9343
  %3 = load i8, i8* %arrayidx2, align 1, !dbg !9343
  %conv3 = zext i8 %3 to i32, !dbg !9343
  %cmp4 = icmp eq i32 %conv3, 136, !dbg !9345
  br i1 %cmp4, label %land.lhs.true, label %if.end26, !dbg !9346

land.lhs.true:                                    ; preds = %if.end
  %4 = load i8*, i8** %id.addr, align 8, !dbg !9347
  %arrayidx6 = getelementptr i8, i8* %4, i64 1, !dbg !9347
  %5 = load i8, i8* %arrayidx6, align 1, !dbg !9347
  %conv7 = zext i8 %5 to i32, !dbg !9347
  %cmp8 = icmp eq i32 %conv7, 7, !dbg !9348
  br i1 %cmp8, label %if.then25, label %lor.lhs.false, !dbg !9349

lor.lhs.false:                                    ; preds = %land.lhs.true
  %6 = load i8*, i8** %id.addr, align 8, !dbg !9350
  %arrayidx10 = getelementptr i8, i8* %6, i64 1, !dbg !9350
  %7 = load i8, i8* %arrayidx10, align 1, !dbg !9350
  %conv11 = zext i8 %7 to i32, !dbg !9350
  %cmp12 = icmp eq i32 %conv11, 8, !dbg !9351
  br i1 %cmp12, label %if.then25, label %lor.lhs.false14, !dbg !9352

lor.lhs.false14:                                  ; preds = %lor.lhs.false
  %8 = load i8*, i8** %id.addr, align 8, !dbg !9353
  %arrayidx15 = getelementptr i8, i8* %8, i64 1, !dbg !9353
  %9 = load i8, i8* %arrayidx15, align 1, !dbg !9353
  %conv16 = zext i8 %9 to i32, !dbg !9353
  %and = and i32 %conv16, 240, !dbg !9354
  %cmp17 = icmp eq i32 %and, 176, !dbg !9355
  br i1 %cmp17, label %if.then25, label %lor.lhs.false19, !dbg !9356

lor.lhs.false19:                                  ; preds = %lor.lhs.false14
  %10 = load i8*, i8** %id.addr, align 8, !dbg !9357
  %arrayidx20 = getelementptr i8, i8* %10, i64 1, !dbg !9357
  %11 = load i8, i8* %arrayidx20, align 1, !dbg !9357
  %conv21 = zext i8 %11 to i32, !dbg !9357
  %and22 = and i32 %conv21, 240, !dbg !9358
  %cmp23 = icmp eq i32 %and22, 192, !dbg !9359
  br i1 %cmp23, label %if.then25, label %if.end26, !dbg !9360

if.then25:                                        ; preds = %lor.lhs.false19, %lor.lhs.false14, %lor.lhs.false, %land.lhs.true
  store i1 true, i1* %retval, align 1, !dbg !9361
  br label %return, !dbg !9361

if.end26:                                         ; preds = %lor.lhs.false19, %if.end
  store i1 false, i1* %retval, align 1, !dbg !9363
  br label %return, !dbg !9363

return:                                           ; preds = %if.end26, %if.then25, %if.then
  %12 = load i1, i1* %retval, align 1, !dbg !9364
  ret i1 %12, !dbg !9364
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @alps_command_mode_set_addr(%struct.psmouse* %psmouse, i32 %addr) #0 !dbg !9365 {
entry:
  %retval = alloca i32, align 4
  %psmouse.addr = alloca %struct.psmouse*, align 8
  %addr.addr = alloca i32, align 4
  %ps2dev = alloca %struct.ps2dev*, align 8
  %priv = alloca %struct.alps_data*, align 8
  %i = alloca i32, align 4
  %nibble = alloca i32, align 4
  store %struct.psmouse* %psmouse, %struct.psmouse** %psmouse.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.psmouse** %psmouse.addr, metadata !9366, metadata !DIExpression()), !dbg !9367
  store i32 %addr, i32* %addr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %addr.addr, metadata !9368, metadata !DIExpression()), !dbg !9369
  call void @llvm.dbg.declare(metadata %struct.ps2dev** %ps2dev, metadata !9370, metadata !DIExpression()), !dbg !9371
  %0 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !9372
  %ps2dev1 = getelementptr inbounds %struct.psmouse, %struct.psmouse* %0, i32 0, i32 2, !dbg !9373
  store %struct.ps2dev* %ps2dev1, %struct.ps2dev** %ps2dev, align 8, !dbg !9371
  call void @llvm.dbg.declare(metadata %struct.alps_data** %priv, metadata !9374, metadata !DIExpression()), !dbg !9375
  %1 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !9376
  %private = getelementptr inbounds %struct.psmouse, %struct.psmouse* %1, i32 0, i32 0, !dbg !9377
  %2 = load i8*, i8** %private, align 8, !dbg !9377
  %3 = bitcast i8* %2 to %struct.alps_data*, !dbg !9376
  store %struct.alps_data* %3, %struct.alps_data** %priv, align 8, !dbg !9375
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9378, metadata !DIExpression()), !dbg !9379
  call void @llvm.dbg.declare(metadata i32* %nibble, metadata !9380, metadata !DIExpression()), !dbg !9381
  %4 = load %struct.ps2dev*, %struct.ps2dev** %ps2dev, align 8, !dbg !9382
  %5 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !9384
  %addr_command = getelementptr inbounds %struct.alps_data, %struct.alps_data* %5, i32 0, i32 7, !dbg !9385
  %6 = load i32, i32* %addr_command, align 8, !dbg !9385
  %call = call i32 @ps2_command(%struct.ps2dev* %4, i8* null, i32 %6) #10, !dbg !9386
  %tobool = icmp ne i32 %call, 0, !dbg !9386
  br i1 %tobool, label %if.then, label %if.end, !dbg !9387

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !9388
  br label %return, !dbg !9388

if.end:                                           ; preds = %entry
  store i32 12, i32* %i, align 4, !dbg !9389
  br label %for.cond, !dbg !9391

for.cond:                                         ; preds = %for.inc, %if.end
  %7 = load i32, i32* %i, align 4, !dbg !9392
  %cmp = icmp sge i32 %7, 0, !dbg !9394
  br i1 %cmp, label %for.body, label %for.end, !dbg !9395

for.body:                                         ; preds = %for.cond
  %8 = load i32, i32* %addr.addr, align 4, !dbg !9396
  %9 = load i32, i32* %i, align 4, !dbg !9398
  %shr = ashr i32 %8, %9, !dbg !9399
  %and = and i32 %shr, 15, !dbg !9400
  store i32 %and, i32* %nibble, align 4, !dbg !9401
  %10 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !9402
  %11 = load i32, i32* %nibble, align 4, !dbg !9404
  %call2 = call i32 @alps_command_mode_send_nibble(%struct.psmouse* %10, i32 %11) #10, !dbg !9405
  %tobool3 = icmp ne i32 %call2, 0, !dbg !9405
  br i1 %tobool3, label %if.then4, label %if.end5, !dbg !9406

if.then4:                                         ; preds = %for.body
  store i32 -1, i32* %retval, align 4, !dbg !9407
  br label %return, !dbg !9407

if.end5:                                          ; preds = %for.body
  br label %for.inc, !dbg !9408

for.inc:                                          ; preds = %if.end5
  %12 = load i32, i32* %i, align 4, !dbg !9409
  %sub = sub i32 %12, 4, !dbg !9409
  store i32 %sub, i32* %i, align 4, !dbg !9409
  br label %for.cond, !dbg !9410, !llvm.loop !9411

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !9413
  br label %return, !dbg !9413

return:                                           ; preds = %for.end, %if.then4, %if.then
  %13 = load i32, i32* %retval, align 4, !dbg !9414
  ret i32 %13, !dbg !9414
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__alps_command_mode_read_reg(%struct.psmouse* %psmouse, i32 %addr) #0 !dbg !9415 {
entry:
  %retval = alloca i32, align 4
  %psmouse.addr = alloca %struct.psmouse*, align 8
  %addr.addr = alloca i32, align 4
  %ps2dev = alloca %struct.ps2dev*, align 8
  %param = alloca [4 x i8], align 1
  store %struct.psmouse* %psmouse, %struct.psmouse** %psmouse.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.psmouse** %psmouse.addr, metadata !9416, metadata !DIExpression()), !dbg !9417
  store i32 %addr, i32* %addr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %addr.addr, metadata !9418, metadata !DIExpression()), !dbg !9419
  call void @llvm.dbg.declare(metadata %struct.ps2dev** %ps2dev, metadata !9420, metadata !DIExpression()), !dbg !9421
  %0 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !9422
  %ps2dev1 = getelementptr inbounds %struct.psmouse, %struct.psmouse* %0, i32 0, i32 2, !dbg !9423
  store %struct.ps2dev* %ps2dev1, %struct.ps2dev** %ps2dev, align 8, !dbg !9421
  call void @llvm.dbg.declare(metadata [4 x i8]* %param, metadata !9424, metadata !DIExpression()), !dbg !9425
  %1 = load %struct.ps2dev*, %struct.ps2dev** %ps2dev, align 8, !dbg !9426
  %arraydecay = getelementptr inbounds [4 x i8], [4 x i8]* %param, i64 0, i64 0, !dbg !9428
  %call = call i32 @ps2_command(%struct.ps2dev* %1, i8* %arraydecay, i32 1001) #10, !dbg !9429
  %tobool = icmp ne i32 %call, 0, !dbg !9429
  br i1 %tobool, label %if.then, label %if.end, !dbg !9430

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !9431
  br label %return, !dbg !9431

if.end:                                           ; preds = %entry
  %2 = load i32, i32* %addr.addr, align 4, !dbg !9432
  %arrayidx = getelementptr [4 x i8], [4 x i8]* %param, i64 0, i64 0, !dbg !9434
  %3 = load i8, i8* %arrayidx, align 1, !dbg !9434
  %conv = zext i8 %3 to i32, !dbg !9434
  %shl = shl i32 %conv, 8, !dbg !9435
  %arrayidx2 = getelementptr [4 x i8], [4 x i8]* %param, i64 0, i64 1, !dbg !9436
  %4 = load i8, i8* %arrayidx2, align 1, !dbg !9436
  %conv3 = zext i8 %4 to i32, !dbg !9436
  %or = or i32 %shl, %conv3, !dbg !9437
  %cmp = icmp ne i32 %2, %or, !dbg !9438
  br i1 %cmp, label %if.then5, label %if.end6, !dbg !9439

if.then5:                                         ; preds = %if.end
  store i32 -1, i32* %retval, align 4, !dbg !9440
  br label %return, !dbg !9440

if.end6:                                          ; preds = %if.end
  %arrayidx7 = getelementptr [4 x i8], [4 x i8]* %param, i64 0, i64 2, !dbg !9441
  %5 = load i8, i8* %arrayidx7, align 1, !dbg !9441
  %conv8 = zext i8 %5 to i32, !dbg !9441
  store i32 %conv8, i32* %retval, align 4, !dbg !9442
  br label %return, !dbg !9442

return:                                           ; preds = %if.end6, %if.then5, %if.then
  %6 = load i32, i32* %retval, align 4, !dbg !9443
  ret i32 %6, !dbg !9443
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @alps_command_mode_send_nibble(%struct.psmouse* %psmouse, i32 %nibble) #0 !dbg !9444 {
entry:
  %retval = alloca i32, align 4
  %psmouse.addr = alloca %struct.psmouse*, align 8
  %nibble.addr = alloca i32, align 4
  %ps2dev = alloca %struct.ps2dev*, align 8
  %priv = alloca %struct.alps_data*, align 8
  %command = alloca i32, align 4
  %param = alloca i8*, align 8
  %dummy = alloca [4 x i8], align 1
  store %struct.psmouse* %psmouse, %struct.psmouse** %psmouse.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.psmouse** %psmouse.addr, metadata !9445, metadata !DIExpression()), !dbg !9446
  store i32 %nibble, i32* %nibble.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nibble.addr, metadata !9447, metadata !DIExpression()), !dbg !9448
  call void @llvm.dbg.declare(metadata %struct.ps2dev** %ps2dev, metadata !9449, metadata !DIExpression()), !dbg !9450
  %0 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !9451
  %ps2dev1 = getelementptr inbounds %struct.psmouse, %struct.psmouse* %0, i32 0, i32 2, !dbg !9452
  store %struct.ps2dev* %ps2dev1, %struct.ps2dev** %ps2dev, align 8, !dbg !9450
  call void @llvm.dbg.declare(metadata %struct.alps_data** %priv, metadata !9453, metadata !DIExpression()), !dbg !9454
  %1 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !9455
  %private = getelementptr inbounds %struct.psmouse, %struct.psmouse* %1, i32 0, i32 0, !dbg !9456
  %2 = load i8*, i8** %private, align 8, !dbg !9456
  %3 = bitcast i8* %2 to %struct.alps_data*, !dbg !9455
  store %struct.alps_data* %3, %struct.alps_data** %priv, align 8, !dbg !9454
  call void @llvm.dbg.declare(metadata i32* %command, metadata !9457, metadata !DIExpression()), !dbg !9458
  call void @llvm.dbg.declare(metadata i8** %param, metadata !9459, metadata !DIExpression()), !dbg !9460
  call void @llvm.dbg.declare(metadata [4 x i8]* %dummy, metadata !9461, metadata !DIExpression()), !dbg !9462
  br label %do.body, !dbg !9463

do.body:                                          ; preds = %entry
  %4 = load i32, i32* %nibble.addr, align 4, !dbg !9464
  %cmp = icmp sgt i32 %4, 15, !dbg !9464
  %lnot = xor i1 %cmp, true, !dbg !9464
  %lnot2 = xor i1 %lnot, true, !dbg !9464
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !9464
  %conv = sext i32 %lnot.ext to i64, !dbg !9464
  %tobool = icmp ne i64 %conv, 0, !dbg !9464
  br i1 %tobool, label %if.then, label %if.end, !dbg !9467

if.then:                                          ; preds = %do.body
  br label %do.body3, !dbg !9464

do.body3:                                         ; preds = %if.then
  br label %do.body4, !dbg !9468

do.body4:                                         ; preds = %do.body3
  br label %do.end, !dbg !9470

do.end:                                           ; preds = %do.body4
  br label %do.body5, !dbg !9468

do.body5:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.23, i64 0, i64 0), i32 1694, i32 0, i64 12) #7, !dbg !9472, !srcloc !9474
  br label %do.end6, !dbg !9472

do.end6:                                          ; preds = %do.body5
  br label %do.body7, !dbg !9468

do.body7:                                         ; preds = %do.end6
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 211) #7, !dbg !9475, !srcloc !9478
  unreachable, !dbg !9479

do.end8:                                          ; No predecessors!
  br label %do.end9, !dbg !9468

do.end9:                                          ; preds = %do.end8
  br label %if.end, !dbg !9468

if.end:                                           ; preds = %do.end9, %do.body
  br label %do.end10, !dbg !9467

do.end10:                                         ; preds = %if.end
  %5 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !9480
  %nibble_commands = getelementptr inbounds %struct.alps_data, %struct.alps_data* %5, i32 0, i32 6, !dbg !9481
  %6 = load %struct.alps_nibble_commands*, %struct.alps_nibble_commands** %nibble_commands, align 8, !dbg !9481
  %7 = load i32, i32* %nibble.addr, align 4, !dbg !9482
  %idxprom = sext i32 %7 to i64, !dbg !9480
  %arrayidx = getelementptr %struct.alps_nibble_commands, %struct.alps_nibble_commands* %6, i64 %idxprom, !dbg !9480
  %command11 = getelementptr inbounds %struct.alps_nibble_commands, %struct.alps_nibble_commands* %arrayidx, i32 0, i32 0, !dbg !9483
  %8 = load i32, i32* %command11, align 4, !dbg !9483
  store i32 %8, i32* %command, align 4, !dbg !9484
  %9 = load i32, i32* %command, align 4, !dbg !9485
  %and = and i32 %9, 3840, !dbg !9486
  %tobool12 = icmp ne i32 %and, 0, !dbg !9486
  br i1 %tobool12, label %cond.true, label %cond.false, !dbg !9487

cond.true:                                        ; preds = %do.end10
  %arraydecay = getelementptr inbounds [4 x i8], [4 x i8]* %dummy, i64 0, i64 0, !dbg !9488
  br label %cond.end, !dbg !9487

cond.false:                                       ; preds = %do.end10
  %10 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !9489
  %nibble_commands13 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %10, i32 0, i32 6, !dbg !9490
  %11 = load %struct.alps_nibble_commands*, %struct.alps_nibble_commands** %nibble_commands13, align 8, !dbg !9490
  %12 = load i32, i32* %nibble.addr, align 4, !dbg !9491
  %idxprom14 = sext i32 %12 to i64, !dbg !9489
  %arrayidx15 = getelementptr %struct.alps_nibble_commands, %struct.alps_nibble_commands* %11, i64 %idxprom14, !dbg !9489
  %data = getelementptr inbounds %struct.alps_nibble_commands, %struct.alps_nibble_commands* %arrayidx15, i32 0, i32 1, !dbg !9492
  br label %cond.end, !dbg !9487

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %arraydecay, %cond.true ], [ %data, %cond.false ], !dbg !9487
  store i8* %cond, i8** %param, align 8, !dbg !9493
  %13 = load %struct.ps2dev*, %struct.ps2dev** %ps2dev, align 8, !dbg !9494
  %14 = load i8*, i8** %param, align 8, !dbg !9496
  %15 = load i32, i32* %command, align 4, !dbg !9497
  %call = call i32 @ps2_command(%struct.ps2dev* %13, i8* %14, i32 %15) #10, !dbg !9498
  %tobool16 = icmp ne i32 %call, 0, !dbg !9498
  br i1 %tobool16, label %if.then17, label %if.end18, !dbg !9499

if.then17:                                        ; preds = %cond.end
  store i32 -1, i32* %retval, align 4, !dbg !9500
  br label %return, !dbg !9500

if.end18:                                         ; preds = %cond.end
  store i32 0, i32* %retval, align 4, !dbg !9501
  br label %return, !dbg !9501

return:                                           ; preds = %if.end18, %if.then17
  %16 = load i32, i32* %retval, align 4, !dbg !9502
  ret i32 %16, !dbg !9502
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @alps_process_trackstick_packet_v3(%struct.psmouse* %psmouse) #0 !dbg !9503 {
entry:
  %psmouse.addr = alloca %struct.psmouse*, align 8
  %priv = alloca %struct.alps_data*, align 8
  %packet = alloca i8*, align 8
  %dev = alloca %struct.input_dev*, align 8
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %z = alloca i32, align 4
  %left = alloca i32, align 4
  %right = alloca i32, align 4
  %middle = alloca i32, align 4
  store %struct.psmouse* %psmouse, %struct.psmouse** %psmouse.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.psmouse** %psmouse.addr, metadata !9504, metadata !DIExpression()), !dbg !9505
  call void @llvm.dbg.declare(metadata %struct.alps_data** %priv, metadata !9506, metadata !DIExpression()), !dbg !9507
  %0 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !9508
  %private = getelementptr inbounds %struct.psmouse, %struct.psmouse* %0, i32 0, i32 0, !dbg !9509
  %1 = load i8*, i8** %private, align 8, !dbg !9509
  %2 = bitcast i8* %1 to %struct.alps_data*, !dbg !9508
  store %struct.alps_data* %2, %struct.alps_data** %priv, align 8, !dbg !9507
  call void @llvm.dbg.declare(metadata i8** %packet, metadata !9510, metadata !DIExpression()), !dbg !9511
  %3 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !9512
  %packet1 = getelementptr inbounds %struct.psmouse, %struct.psmouse* %3, i32 0, i32 7, !dbg !9513
  %arraydecay = getelementptr inbounds [8 x i8], [8 x i8]* %packet1, i64 0, i64 0, !dbg !9512
  store i8* %arraydecay, i8** %packet, align 8, !dbg !9511
  call void @llvm.dbg.declare(metadata %struct.input_dev** %dev, metadata !9514, metadata !DIExpression()), !dbg !9515
  %4 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !9516
  %dev2 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %4, i32 0, i32 1, !dbg !9517
  %5 = load %struct.input_dev*, %struct.input_dev** %dev2, align 8, !dbg !9517
  store %struct.input_dev* %5, %struct.input_dev** %dev, align 8, !dbg !9515
  call void @llvm.dbg.declare(metadata i32* %x, metadata !9518, metadata !DIExpression()), !dbg !9519
  call void @llvm.dbg.declare(metadata i32* %y, metadata !9520, metadata !DIExpression()), !dbg !9521
  call void @llvm.dbg.declare(metadata i32* %z, metadata !9522, metadata !DIExpression()), !dbg !9523
  call void @llvm.dbg.declare(metadata i32* %left, metadata !9524, metadata !DIExpression()), !dbg !9525
  call void @llvm.dbg.declare(metadata i32* %right, metadata !9526, metadata !DIExpression()), !dbg !9527
  call void @llvm.dbg.declare(metadata i32* %middle, metadata !9528, metadata !DIExpression()), !dbg !9529
  %6 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !9530
  %flags = getelementptr inbounds %struct.alps_data, %struct.alps_data* %6, i32 0, i32 13, !dbg !9532
  %7 = load i32, i32* %flags, align 8, !dbg !9532
  %and = and i32 %7, 2, !dbg !9533
  %tobool = icmp ne i32 %and, 0, !dbg !9533
  br i1 %tobool, label %if.end, label %if.then, !dbg !9534

if.then:                                          ; preds = %entry
  %8 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !9535
  %ps2dev = getelementptr inbounds %struct.psmouse, %struct.psmouse* %8, i32 0, i32 2, !dbg !9535
  %serio = getelementptr inbounds %struct.ps2dev, %struct.ps2dev* %ps2dev, i32 0, i32 0, !dbg !9535
  %9 = load %struct.serio*, %struct.serio** %serio, align 8, !dbg !9535
  %dev3 = getelementptr inbounds %struct.serio, %struct.serio* %9, i32 0, i32 18, !dbg !9535
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev3, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.24, i64 0, i64 0)) #11, !dbg !9535
  br label %return, !dbg !9537

if.end:                                           ; preds = %entry
  %10 = load i8*, i8** %packet, align 8, !dbg !9538
  %arrayidx = getelementptr i8, i8* %10, i64 0, !dbg !9538
  %11 = load i8, i8* %arrayidx, align 1, !dbg !9538
  %conv = zext i8 %11 to i32, !dbg !9538
  %and4 = and i32 %conv, 64, !dbg !9540
  %tobool5 = icmp ne i32 %and4, 0, !dbg !9540
  br i1 %tobool5, label %if.end7, label %if.then6, !dbg !9541

if.then6:                                         ; preds = %if.end
  br label %return, !dbg !9542

if.end7:                                          ; preds = %if.end
  %12 = load i8*, i8** %packet, align 8, !dbg !9544
  %arrayidx8 = getelementptr i8, i8* %12, i64 1, !dbg !9544
  %13 = load i8, i8* %arrayidx8, align 1, !dbg !9544
  %conv9 = zext i8 %13 to i32, !dbg !9544
  %cmp = icmp eq i32 %conv9, 127, !dbg !9546
  br i1 %cmp, label %land.lhs.true, label %if.end21, !dbg !9547

land.lhs.true:                                    ; preds = %if.end7
  %14 = load i8*, i8** %packet, align 8, !dbg !9548
  %arrayidx11 = getelementptr i8, i8* %14, i64 2, !dbg !9548
  %15 = load i8, i8* %arrayidx11, align 1, !dbg !9548
  %conv12 = zext i8 %15 to i32, !dbg !9548
  %cmp13 = icmp eq i32 %conv12, 127, !dbg !9549
  br i1 %cmp13, label %land.lhs.true15, label %if.end21, !dbg !9550

land.lhs.true15:                                  ; preds = %land.lhs.true
  %16 = load i8*, i8** %packet, align 8, !dbg !9551
  %arrayidx16 = getelementptr i8, i8* %16, i64 4, !dbg !9551
  %17 = load i8, i8* %arrayidx16, align 1, !dbg !9551
  %conv17 = zext i8 %17 to i32, !dbg !9551
  %cmp18 = icmp eq i32 %conv17, 127, !dbg !9552
  br i1 %cmp18, label %if.then20, label %if.end21, !dbg !9553

if.then20:                                        ; preds = %land.lhs.true15
  br label %return, !dbg !9554

if.end21:                                         ; preds = %land.lhs.true15, %land.lhs.true, %if.end7
  %18 = load i8*, i8** %packet, align 8, !dbg !9555
  %arrayidx22 = getelementptr i8, i8* %18, i64 0, !dbg !9555
  %19 = load i8, i8* %arrayidx22, align 1, !dbg !9555
  %conv23 = zext i8 %19 to i32, !dbg !9555
  %and24 = and i32 %conv23, 32, !dbg !9556
  %shl = shl i32 %and24, 2, !dbg !9557
  %20 = load i8*, i8** %packet, align 8, !dbg !9558
  %arrayidx25 = getelementptr i8, i8* %20, i64 1, !dbg !9558
  %21 = load i8, i8* %arrayidx25, align 1, !dbg !9558
  %conv26 = zext i8 %21 to i32, !dbg !9558
  %and27 = and i32 %conv26, 127, !dbg !9559
  %or = or i32 %shl, %and27, !dbg !9560
  %conv28 = trunc i32 %or to i8, !dbg !9561
  %conv29 = sext i8 %conv28 to i32, !dbg !9561
  store i32 %conv29, i32* %x, align 4, !dbg !9562
  %22 = load i8*, i8** %packet, align 8, !dbg !9563
  %arrayidx30 = getelementptr i8, i8* %22, i64 0, !dbg !9563
  %23 = load i8, i8* %arrayidx30, align 1, !dbg !9563
  %conv31 = zext i8 %23 to i32, !dbg !9563
  %and32 = and i32 %conv31, 16, !dbg !9564
  %shl33 = shl i32 %and32, 3, !dbg !9565
  %24 = load i8*, i8** %packet, align 8, !dbg !9566
  %arrayidx34 = getelementptr i8, i8* %24, i64 2, !dbg !9566
  %25 = load i8, i8* %arrayidx34, align 1, !dbg !9566
  %conv35 = zext i8 %25 to i32, !dbg !9566
  %and36 = and i32 %conv35, 127, !dbg !9567
  %or37 = or i32 %shl33, %and36, !dbg !9568
  %conv38 = trunc i32 %or37 to i8, !dbg !9569
  %conv39 = sext i8 %conv38 to i32, !dbg !9569
  store i32 %conv39, i32* %y, align 4, !dbg !9570
  %26 = load i8*, i8** %packet, align 8, !dbg !9571
  %arrayidx40 = getelementptr i8, i8* %26, i64 4, !dbg !9571
  %27 = load i8, i8* %arrayidx40, align 1, !dbg !9571
  %conv41 = zext i8 %27 to i32, !dbg !9571
  %and42 = and i32 %conv41, 127, !dbg !9572
  store i32 %and42, i32* %z, align 4, !dbg !9573
  %28 = load i32, i32* %x, align 4, !dbg !9574
  %div = sdiv i32 %28, 8, !dbg !9574
  store i32 %div, i32* %x, align 4, !dbg !9574
  %29 = load i32, i32* %y, align 4, !dbg !9575
  %div43 = sdiv i32 %29, 8, !dbg !9575
  store i32 %div43, i32* %y, align 4, !dbg !9575
  %30 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !9576
  %31 = load i32, i32* %x, align 4, !dbg !9577
  call void @input_report_rel(%struct.input_dev* %30, i32 0, i32 %31) #10, !dbg !9578
  %32 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !9579
  %33 = load i32, i32* %y, align 4, !dbg !9580
  %sub = sub i32 0, %33, !dbg !9581
  call void @input_report_rel(%struct.input_dev* %32, i32 1, i32 %sub) #10, !dbg !9582
  %34 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !9583
  %35 = load i32, i32* %z, align 4, !dbg !9584
  call void @input_report_abs(%struct.input_dev* %34, i32 24, i32 %35) #10, !dbg !9585
  %36 = load i8*, i8** %packet, align 8, !dbg !9586
  %arrayidx44 = getelementptr i8, i8* %36, i64 3, !dbg !9586
  %37 = load i8, i8* %arrayidx44, align 1, !dbg !9586
  %conv45 = zext i8 %37 to i32, !dbg !9586
  %and46 = and i32 %conv45, 1, !dbg !9587
  store i32 %and46, i32* %left, align 4, !dbg !9588
  %38 = load i8*, i8** %packet, align 8, !dbg !9589
  %arrayidx47 = getelementptr i8, i8* %38, i64 3, !dbg !9589
  %39 = load i8, i8* %arrayidx47, align 1, !dbg !9589
  %conv48 = zext i8 %39 to i32, !dbg !9589
  %and49 = and i32 %conv48, 2, !dbg !9590
  store i32 %and49, i32* %right, align 4, !dbg !9591
  %40 = load i8*, i8** %packet, align 8, !dbg !9592
  %arrayidx50 = getelementptr i8, i8* %40, i64 3, !dbg !9592
  %41 = load i8, i8* %arrayidx50, align 1, !dbg !9592
  %conv51 = zext i8 %41 to i32, !dbg !9592
  %and52 = and i32 %conv51, 4, !dbg !9593
  store i32 %and52, i32* %middle, align 4, !dbg !9594
  %42 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !9595
  %quirks = getelementptr inbounds %struct.alps_data, %struct.alps_data* %42, i32 0, i32 29, !dbg !9597
  %43 = load i8, i8* %quirks, align 4, !dbg !9597
  %conv53 = zext i8 %43 to i32, !dbg !9595
  %and54 = and i32 %conv53, 1, !dbg !9598
  %tobool55 = icmp ne i32 %and54, 0, !dbg !9598
  br i1 %tobool55, label %if.end66, label %land.lhs.true56, !dbg !9599

land.lhs.true56:                                  ; preds = %if.end21
  %44 = load i32, i32* %left, align 4, !dbg !9600
  %tobool57 = icmp ne i32 %44, 0, !dbg !9600
  br i1 %tobool57, label %if.then61, label %lor.lhs.false, !dbg !9601

lor.lhs.false:                                    ; preds = %land.lhs.true56
  %45 = load i32, i32* %right, align 4, !dbg !9602
  %tobool58 = icmp ne i32 %45, 0, !dbg !9602
  br i1 %tobool58, label %if.then61, label %lor.lhs.false59, !dbg !9603

lor.lhs.false59:                                  ; preds = %lor.lhs.false
  %46 = load i32, i32* %middle, align 4, !dbg !9604
  %tobool60 = icmp ne i32 %46, 0, !dbg !9604
  br i1 %tobool60, label %if.then61, label %if.end66, !dbg !9605

if.then61:                                        ; preds = %lor.lhs.false59, %lor.lhs.false, %land.lhs.true56
  %47 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !9606
  %quirks62 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %47, i32 0, i32 29, !dbg !9607
  %48 = load i8, i8* %quirks62, align 4, !dbg !9608
  %conv63 = zext i8 %48 to i32, !dbg !9608
  %or64 = or i32 %conv63, 1, !dbg !9608
  %conv65 = trunc i32 %or64 to i8, !dbg !9608
  store i8 %conv65, i8* %quirks62, align 4, !dbg !9608
  br label %if.end66, !dbg !9606

if.end66:                                         ; preds = %if.then61, %lor.lhs.false59, %if.end21
  %49 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !9609
  %quirks67 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %49, i32 0, i32 29, !dbg !9611
  %50 = load i8, i8* %quirks67, align 4, !dbg !9611
  %conv68 = zext i8 %50 to i32, !dbg !9609
  %and69 = and i32 %conv68, 1, !dbg !9612
  %tobool70 = icmp ne i32 %and69, 0, !dbg !9612
  br i1 %tobool70, label %if.then71, label %if.end72, !dbg !9613

if.then71:                                        ; preds = %if.end66
  %51 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !9614
  %52 = load i32, i32* %left, align 4, !dbg !9616
  call void @input_report_key(%struct.input_dev* %51, i32 272, i32 %52) #10, !dbg !9617
  %53 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !9618
  %54 = load i32, i32* %right, align 4, !dbg !9619
  call void @input_report_key(%struct.input_dev* %53, i32 273, i32 %54) #10, !dbg !9620
  %55 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !9621
  %56 = load i32, i32* %middle, align 4, !dbg !9622
  call void @input_report_key(%struct.input_dev* %55, i32 274, i32 %56) #10, !dbg !9623
  br label %if.end72, !dbg !9624

if.end72:                                         ; preds = %if.then71, %if.end66
  %57 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !9625
  call void @input_sync(%struct.input_dev* %57) #10, !dbg !9626
  br label %return, !dbg !9627

return:                                           ; preds = %if.end72, %if.then20, %if.then6, %if.then
  ret void, !dbg !9628
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @alps_set_abs_params_mt_common(%struct.alps_data* %priv, %struct.input_dev* %dev1) #0 !dbg !9629 {
entry:
  %priv.addr = alloca %struct.alps_data*, align 8
  %dev1.addr = alloca %struct.input_dev*, align 8
  store %struct.alps_data* %priv, %struct.alps_data** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.alps_data** %priv.addr, metadata !9630, metadata !DIExpression()), !dbg !9631
  store %struct.input_dev* %dev1, %struct.input_dev** %dev1.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.input_dev** %dev1.addr, metadata !9632, metadata !DIExpression()), !dbg !9633
  %0 = load %struct.input_dev*, %struct.input_dev** %dev1.addr, align 8, !dbg !9634
  %1 = load %struct.alps_data*, %struct.alps_data** %priv.addr, align 8, !dbg !9635
  %x_max = getelementptr inbounds %struct.alps_data, %struct.alps_data* %1, i32 0, i32 14, !dbg !9636
  %2 = load i32, i32* %x_max, align 4, !dbg !9636
  call void @input_set_abs_params(%struct.input_dev* %0, i32 53, i32 0, i32 %2, i32 0, i32 0) #10, !dbg !9637
  %3 = load %struct.input_dev*, %struct.input_dev** %dev1.addr, align 8, !dbg !9638
  %4 = load %struct.alps_data*, %struct.alps_data** %priv.addr, align 8, !dbg !9639
  %y_max = getelementptr inbounds %struct.alps_data, %struct.alps_data* %4, i32 0, i32 15, !dbg !9640
  %5 = load i32, i32* %y_max, align 8, !dbg !9640
  call void @input_set_abs_params(%struct.input_dev* %3, i32 54, i32 0, i32 %5, i32 0, i32 0) #10, !dbg !9641
  %6 = load %struct.input_dev*, %struct.input_dev** %dev1.addr, align 8, !dbg !9642
  %7 = load %struct.alps_data*, %struct.alps_data** %priv.addr, align 8, !dbg !9643
  %x_res = getelementptr inbounds %struct.alps_data, %struct.alps_data* %7, i32 0, i32 18, !dbg !9644
  %8 = load i32, i32* %x_res, align 4, !dbg !9644
  call void @input_abs_set_res(%struct.input_dev* %6, i32 53, i32 %8) #10, !dbg !9645
  %9 = load %struct.input_dev*, %struct.input_dev** %dev1.addr, align 8, !dbg !9646
  %10 = load %struct.alps_data*, %struct.alps_data** %priv.addr, align 8, !dbg !9647
  %y_res = getelementptr inbounds %struct.alps_data, %struct.alps_data* %10, i32 0, i32 19, !dbg !9648
  %11 = load i32, i32* %y_res, align 8, !dbg !9648
  call void @input_abs_set_res(%struct.input_dev* %9, i32 54, i32 %11) #10, !dbg !9649
  %12 = load %struct.input_dev*, %struct.input_dev** %dev1.addr, align 8, !dbg !9650
  %keybit = getelementptr inbounds %struct.input_dev, %struct.input_dev* %12, i32 0, i32 6, !dbg !9651
  %arraydecay = getelementptr inbounds [12 x i64], [12 x i64]* %keybit, i64 0, i64 0, !dbg !9650
  call void @set_bit(i64 334, i64* %arraydecay) #10, !dbg !9652
  %13 = load %struct.input_dev*, %struct.input_dev** %dev1.addr, align 8, !dbg !9653
  %keybit1 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %13, i32 0, i32 6, !dbg !9654
  %arraydecay2 = getelementptr inbounds [12 x i64], [12 x i64]* %keybit1, i64 0, i64 0, !dbg !9653
  call void @set_bit(i64 335, i64* %arraydecay2) #10, !dbg !9655
  ret void, !dbg !9656
}

; Function Attrs: noredzone
declare dso_local i32 @input_mt_init_slots(%struct.input_dev*, i32, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @input_abs_set_res(%struct.input_dev* %dev, i32 %axis, i32 %val) #0 !dbg !9657 {
entry:
  %dev.addr = alloca %struct.input_dev*, align 8
  %axis.addr = alloca i32, align 4
  %val.addr = alloca i32, align 4
  store %struct.input_dev* %dev, %struct.input_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.input_dev** %dev.addr, metadata !9658, metadata !DIExpression()), !dbg !9659
  store i32 %axis, i32* %axis.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %axis.addr, metadata !9660, metadata !DIExpression()), !dbg !9659
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !9661, metadata !DIExpression()), !dbg !9659
  %0 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !9659
  call void @input_alloc_absinfo(%struct.input_dev* %0) #10, !dbg !9659
  %1 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !9662
  %absinfo = getelementptr inbounds %struct.input_dev, %struct.input_dev* %1, i32 0, i32 26, !dbg !9662
  %2 = load %struct.input_absinfo*, %struct.input_absinfo** %absinfo, align 8, !dbg !9662
  %tobool = icmp ne %struct.input_absinfo* %2, null, !dbg !9662
  br i1 %tobool, label %if.then, label %if.end, !dbg !9659

if.then:                                          ; preds = %entry
  %3 = load i32, i32* %val.addr, align 4, !dbg !9662
  %4 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !9662
  %absinfo1 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %4, i32 0, i32 26, !dbg !9662
  %5 = load %struct.input_absinfo*, %struct.input_absinfo** %absinfo1, align 8, !dbg !9662
  %6 = load i32, i32* %axis.addr, align 4, !dbg !9662
  %idxprom = zext i32 %6 to i64, !dbg !9662
  %arrayidx = getelementptr %struct.input_absinfo, %struct.input_absinfo* %5, i64 %idxprom, !dbg !9662
  %resolution = getelementptr inbounds %struct.input_absinfo, %struct.input_absinfo* %arrayidx, i32 0, i32 5, !dbg !9662
  store i32 %3, i32* %resolution, align 4, !dbg !9662
  br label %if.end, !dbg !9662

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !9659
}

; Function Attrs: noredzone
declare dso_local void @input_alloc_absinfo(%struct.input_dev*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @alps_decode_buttons_v3(%struct.alps_fields* %f, i8* %p) #0 !dbg !9664 {
entry:
  %f.addr = alloca %struct.alps_fields*, align 8
  %p.addr = alloca i8*, align 8
  store %struct.alps_fields* %f, %struct.alps_fields** %f.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.alps_fields** %f.addr, metadata !9667, metadata !DIExpression()), !dbg !9668
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !9669, metadata !DIExpression()), !dbg !9670
  %0 = load i8*, i8** %p.addr, align 8, !dbg !9671
  %arrayidx = getelementptr i8, i8* %0, i64 3, !dbg !9671
  %1 = load i8, i8* %arrayidx, align 1, !dbg !9671
  %conv = zext i8 %1 to i32, !dbg !9671
  %and = and i32 %conv, 1, !dbg !9672
  %tobool = icmp ne i32 %and, 0, !dbg !9673
  %lnot = xor i1 %tobool, true, !dbg !9673
  %lnot1 = xor i1 %lnot, true, !dbg !9674
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !9674
  %2 = load %struct.alps_fields*, %struct.alps_fields** %f.addr, align 8, !dbg !9675
  %left = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %2, i32 0, i32 6, !dbg !9676
  %3 = trunc i32 %lnot.ext to i8, !dbg !9677
  %bf.load = load i8, i8* %left, align 4, !dbg !9677
  %bf.value = and i8 %3, 1, !dbg !9677
  %bf.shl = shl i8 %bf.value, 2, !dbg !9677
  %bf.clear = and i8 %bf.load, -5, !dbg !9677
  %bf.set = or i8 %bf.clear, %bf.shl, !dbg !9677
  store i8 %bf.set, i8* %left, align 4, !dbg !9677
  %bf.result.cast = zext i8 %bf.value to i32, !dbg !9677
  %4 = load i8*, i8** %p.addr, align 8, !dbg !9678
  %arrayidx2 = getelementptr i8, i8* %4, i64 3, !dbg !9678
  %5 = load i8, i8* %arrayidx2, align 1, !dbg !9678
  %conv3 = zext i8 %5 to i32, !dbg !9678
  %and4 = and i32 %conv3, 2, !dbg !9679
  %tobool5 = icmp ne i32 %and4, 0, !dbg !9680
  %lnot6 = xor i1 %tobool5, true, !dbg !9680
  %lnot8 = xor i1 %lnot6, true, !dbg !9681
  %lnot.ext9 = zext i1 %lnot8 to i32, !dbg !9681
  %6 = load %struct.alps_fields*, %struct.alps_fields** %f.addr, align 8, !dbg !9682
  %right = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %6, i32 0, i32 6, !dbg !9683
  %7 = trunc i32 %lnot.ext9 to i8, !dbg !9684
  %bf.load10 = load i8, i8* %right, align 4, !dbg !9684
  %bf.value11 = and i8 %7, 1, !dbg !9684
  %bf.shl12 = shl i8 %bf.value11, 3, !dbg !9684
  %bf.clear13 = and i8 %bf.load10, -9, !dbg !9684
  %bf.set14 = or i8 %bf.clear13, %bf.shl12, !dbg !9684
  store i8 %bf.set14, i8* %right, align 4, !dbg !9684
  %bf.result.cast15 = zext i8 %bf.value11 to i32, !dbg !9684
  %8 = load i8*, i8** %p.addr, align 8, !dbg !9685
  %arrayidx16 = getelementptr i8, i8* %8, i64 3, !dbg !9685
  %9 = load i8, i8* %arrayidx16, align 1, !dbg !9685
  %conv17 = zext i8 %9 to i32, !dbg !9685
  %and18 = and i32 %conv17, 4, !dbg !9686
  %tobool19 = icmp ne i32 %and18, 0, !dbg !9687
  %lnot20 = xor i1 %tobool19, true, !dbg !9687
  %lnot22 = xor i1 %lnot20, true, !dbg !9688
  %lnot.ext23 = zext i1 %lnot22 to i32, !dbg !9688
  %10 = load %struct.alps_fields*, %struct.alps_fields** %f.addr, align 8, !dbg !9689
  %middle = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %10, i32 0, i32 6, !dbg !9690
  %11 = trunc i32 %lnot.ext23 to i8, !dbg !9691
  %bf.load24 = load i8, i8* %middle, align 4, !dbg !9691
  %bf.value25 = and i8 %11, 1, !dbg !9691
  %bf.shl26 = shl i8 %bf.value25, 4, !dbg !9691
  %bf.clear27 = and i8 %bf.load24, -17, !dbg !9691
  %bf.set28 = or i8 %bf.clear27, %bf.shl26, !dbg !9691
  store i8 %bf.set28, i8* %middle, align 4, !dbg !9691
  %bf.result.cast29 = zext i8 %bf.value25 to i32, !dbg !9691
  %12 = load i8*, i8** %p.addr, align 8, !dbg !9692
  %arrayidx30 = getelementptr i8, i8* %12, i64 3, !dbg !9692
  %13 = load i8, i8* %arrayidx30, align 1, !dbg !9692
  %conv31 = zext i8 %13 to i32, !dbg !9692
  %and32 = and i32 %conv31, 16, !dbg !9693
  %tobool33 = icmp ne i32 %and32, 0, !dbg !9694
  %lnot34 = xor i1 %tobool33, true, !dbg !9694
  %lnot36 = xor i1 %lnot34, true, !dbg !9695
  %lnot.ext37 = zext i1 %lnot36 to i32, !dbg !9695
  %14 = load %struct.alps_fields*, %struct.alps_fields** %f.addr, align 8, !dbg !9696
  %ts_left = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %14, i32 0, i32 6, !dbg !9697
  %15 = trunc i32 %lnot.ext37 to i8, !dbg !9698
  %bf.load38 = load i8, i8* %ts_left, align 4, !dbg !9698
  %bf.value39 = and i8 %15, 1, !dbg !9698
  %bf.shl40 = shl i8 %bf.value39, 5, !dbg !9698
  %bf.clear41 = and i8 %bf.load38, -33, !dbg !9698
  %bf.set42 = or i8 %bf.clear41, %bf.shl40, !dbg !9698
  store i8 %bf.set42, i8* %ts_left, align 4, !dbg !9698
  %bf.result.cast43 = zext i8 %bf.value39 to i32, !dbg !9698
  %16 = load i8*, i8** %p.addr, align 8, !dbg !9699
  %arrayidx44 = getelementptr i8, i8* %16, i64 3, !dbg !9699
  %17 = load i8, i8* %arrayidx44, align 1, !dbg !9699
  %conv45 = zext i8 %17 to i32, !dbg !9699
  %and46 = and i32 %conv45, 32, !dbg !9700
  %tobool47 = icmp ne i32 %and46, 0, !dbg !9701
  %lnot48 = xor i1 %tobool47, true, !dbg !9701
  %lnot50 = xor i1 %lnot48, true, !dbg !9702
  %lnot.ext51 = zext i1 %lnot50 to i32, !dbg !9702
  %18 = load %struct.alps_fields*, %struct.alps_fields** %f.addr, align 8, !dbg !9703
  %ts_right = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %18, i32 0, i32 6, !dbg !9704
  %19 = trunc i32 %lnot.ext51 to i8, !dbg !9705
  %bf.load52 = load i8, i8* %ts_right, align 4, !dbg !9705
  %bf.value53 = and i8 %19, 1, !dbg !9705
  %bf.shl54 = shl i8 %bf.value53, 6, !dbg !9705
  %bf.clear55 = and i8 %bf.load52, -65, !dbg !9705
  %bf.set56 = or i8 %bf.clear55, %bf.shl54, !dbg !9705
  store i8 %bf.set56, i8* %ts_right, align 4, !dbg !9705
  %bf.result.cast57 = zext i8 %bf.value53 to i32, !dbg !9705
  %20 = load i8*, i8** %p.addr, align 8, !dbg !9706
  %arrayidx58 = getelementptr i8, i8* %20, i64 3, !dbg !9706
  %21 = load i8, i8* %arrayidx58, align 1, !dbg !9706
  %conv59 = zext i8 %21 to i32, !dbg !9706
  %and60 = and i32 %conv59, 64, !dbg !9707
  %tobool61 = icmp ne i32 %and60, 0, !dbg !9708
  %lnot62 = xor i1 %tobool61, true, !dbg !9708
  %lnot64 = xor i1 %lnot62, true, !dbg !9709
  %lnot.ext65 = zext i1 %lnot64 to i32, !dbg !9709
  %22 = load %struct.alps_fields*, %struct.alps_fields** %f.addr, align 8, !dbg !9710
  %ts_middle = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %22, i32 0, i32 6, !dbg !9711
  %23 = trunc i32 %lnot.ext65 to i8, !dbg !9712
  %bf.load66 = load i8, i8* %ts_middle, align 4, !dbg !9712
  %bf.value67 = and i8 %23, 1, !dbg !9712
  %bf.shl68 = shl i8 %bf.value67, 7, !dbg !9712
  %bf.clear69 = and i8 %bf.load66, 127, !dbg !9712
  %bf.set70 = or i8 %bf.clear69, %bf.shl68, !dbg !9712
  store i8 %bf.set70, i8* %ts_middle, align 4, !dbg !9712
  %bf.result.cast71 = zext i8 %bf.value67 to i32, !dbg !9712
  ret void, !dbg !9713
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @alps_get_v3_v7_resolution(%struct.psmouse* %psmouse, i32 %reg_pitch) #0 !dbg !9714 {
entry:
  %retval = alloca i32, align 4
  %psmouse.addr = alloca %struct.psmouse*, align 8
  %reg_pitch.addr = alloca i32, align 4
  %reg = alloca i32, align 4
  %x_pitch = alloca i32, align 4
  %y_pitch = alloca i32, align 4
  %x_electrode = alloca i32, align 4
  %y_electrode = alloca i32, align 4
  %x_phys = alloca i32, align 4
  %y_phys = alloca i32, align 4
  %priv = alloca %struct.alps_data*, align 8
  store %struct.psmouse* %psmouse, %struct.psmouse** %psmouse.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.psmouse** %psmouse.addr, metadata !9715, metadata !DIExpression()), !dbg !9716
  store i32 %reg_pitch, i32* %reg_pitch.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %reg_pitch.addr, metadata !9717, metadata !DIExpression()), !dbg !9718
  call void @llvm.dbg.declare(metadata i32* %reg, metadata !9719, metadata !DIExpression()), !dbg !9720
  call void @llvm.dbg.declare(metadata i32* %x_pitch, metadata !9721, metadata !DIExpression()), !dbg !9722
  call void @llvm.dbg.declare(metadata i32* %y_pitch, metadata !9723, metadata !DIExpression()), !dbg !9724
  call void @llvm.dbg.declare(metadata i32* %x_electrode, metadata !9725, metadata !DIExpression()), !dbg !9726
  call void @llvm.dbg.declare(metadata i32* %y_electrode, metadata !9727, metadata !DIExpression()), !dbg !9728
  call void @llvm.dbg.declare(metadata i32* %x_phys, metadata !9729, metadata !DIExpression()), !dbg !9730
  call void @llvm.dbg.declare(metadata i32* %y_phys, metadata !9731, metadata !DIExpression()), !dbg !9732
  call void @llvm.dbg.declare(metadata %struct.alps_data** %priv, metadata !9733, metadata !DIExpression()), !dbg !9734
  %0 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !9735
  %private = getelementptr inbounds %struct.psmouse, %struct.psmouse* %0, i32 0, i32 0, !dbg !9736
  %1 = load i8*, i8** %private, align 8, !dbg !9736
  %2 = bitcast i8* %1 to %struct.alps_data*, !dbg !9735
  store %struct.alps_data* %2, %struct.alps_data** %priv, align 8, !dbg !9734
  %3 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !9737
  %4 = load i32, i32* %reg_pitch.addr, align 4, !dbg !9738
  %call = call i32 @alps_command_mode_read_reg(%struct.psmouse* %3, i32 %4) #10, !dbg !9739
  store i32 %call, i32* %reg, align 4, !dbg !9740
  %5 = load i32, i32* %reg, align 4, !dbg !9741
  %cmp = icmp slt i32 %5, 0, !dbg !9743
  br i1 %cmp, label %if.then, label %if.end, !dbg !9744

if.then:                                          ; preds = %entry
  %6 = load i32, i32* %reg, align 4, !dbg !9745
  store i32 %6, i32* %retval, align 4, !dbg !9746
  br label %return, !dbg !9746

if.end:                                           ; preds = %entry
  %7 = load i32, i32* %reg, align 4, !dbg !9747
  %shl = shl i32 %7, 4, !dbg !9748
  %conv = trunc i32 %shl to i8, !dbg !9749
  %conv1 = sext i8 %conv to i32, !dbg !9749
  %shr = ashr i32 %conv1, 4, !dbg !9750
  store i32 %shr, i32* %x_pitch, align 4, !dbg !9751
  %8 = load i32, i32* %x_pitch, align 4, !dbg !9752
  %mul = mul i32 2, %8, !dbg !9753
  %add = add i32 50, %mul, !dbg !9754
  store i32 %add, i32* %x_pitch, align 4, !dbg !9755
  %9 = load i32, i32* %reg, align 4, !dbg !9756
  %conv2 = trunc i32 %9 to i8, !dbg !9757
  %conv3 = sext i8 %conv2 to i32, !dbg !9757
  %shr4 = ashr i32 %conv3, 4, !dbg !9758
  store i32 %shr4, i32* %y_pitch, align 4, !dbg !9759
  %10 = load i32, i32* %y_pitch, align 4, !dbg !9760
  %mul5 = mul i32 2, %10, !dbg !9761
  %add6 = add i32 36, %mul5, !dbg !9762
  store i32 %add6, i32* %y_pitch, align 4, !dbg !9763
  %11 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !9764
  %12 = load i32, i32* %reg_pitch.addr, align 4, !dbg !9765
  %add7 = add i32 %12, 1, !dbg !9766
  %call8 = call i32 @alps_command_mode_read_reg(%struct.psmouse* %11, i32 %add7) #10, !dbg !9767
  store i32 %call8, i32* %reg, align 4, !dbg !9768
  %13 = load i32, i32* %reg, align 4, !dbg !9769
  %cmp9 = icmp slt i32 %13, 0, !dbg !9771
  br i1 %cmp9, label %if.then11, label %if.end12, !dbg !9772

if.then11:                                        ; preds = %if.end
  %14 = load i32, i32* %reg, align 4, !dbg !9773
  store i32 %14, i32* %retval, align 4, !dbg !9774
  br label %return, !dbg !9774

if.end12:                                         ; preds = %if.end
  %15 = load i32, i32* %reg, align 4, !dbg !9775
  %shl13 = shl i32 %15, 4, !dbg !9776
  %conv14 = trunc i32 %shl13 to i8, !dbg !9777
  %conv15 = sext i8 %conv14 to i32, !dbg !9777
  %shr16 = ashr i32 %conv15, 4, !dbg !9778
  store i32 %shr16, i32* %x_electrode, align 4, !dbg !9779
  %16 = load i32, i32* %x_electrode, align 4, !dbg !9780
  %add17 = add i32 17, %16, !dbg !9781
  store i32 %add17, i32* %x_electrode, align 4, !dbg !9782
  %17 = load i32, i32* %reg, align 4, !dbg !9783
  %conv18 = trunc i32 %17 to i8, !dbg !9784
  %conv19 = sext i8 %conv18 to i32, !dbg !9784
  %shr20 = ashr i32 %conv19, 4, !dbg !9785
  store i32 %shr20, i32* %y_electrode, align 4, !dbg !9786
  %18 = load i32, i32* %y_electrode, align 4, !dbg !9787
  %add21 = add i32 13, %18, !dbg !9788
  store i32 %add21, i32* %y_electrode, align 4, !dbg !9789
  %19 = load i32, i32* %x_pitch, align 4, !dbg !9790
  %20 = load i32, i32* %x_electrode, align 4, !dbg !9791
  %sub = sub i32 %20, 1, !dbg !9792
  %mul22 = mul i32 %19, %sub, !dbg !9793
  store i32 %mul22, i32* %x_phys, align 4, !dbg !9794
  %21 = load i32, i32* %y_pitch, align 4, !dbg !9795
  %22 = load i32, i32* %y_electrode, align 4, !dbg !9796
  %sub23 = sub i32 %22, 1, !dbg !9797
  %mul24 = mul i32 %21, %sub23, !dbg !9798
  store i32 %mul24, i32* %y_phys, align 4, !dbg !9799
  %23 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !9800
  %x_max = getelementptr inbounds %struct.alps_data, %struct.alps_data* %23, i32 0, i32 14, !dbg !9801
  %24 = load i32, i32* %x_max, align 4, !dbg !9801
  %mul25 = mul i32 %24, 10, !dbg !9802
  %25 = load i32, i32* %x_phys, align 4, !dbg !9803
  %div = sdiv i32 %mul25, %25, !dbg !9804
  %26 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !9805
  %x_res = getelementptr inbounds %struct.alps_data, %struct.alps_data* %26, i32 0, i32 18, !dbg !9806
  store i32 %div, i32* %x_res, align 4, !dbg !9807
  %27 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !9808
  %y_max = getelementptr inbounds %struct.alps_data, %struct.alps_data* %27, i32 0, i32 15, !dbg !9809
  %28 = load i32, i32* %y_max, align 8, !dbg !9809
  %mul26 = mul i32 %28, 10, !dbg !9810
  %29 = load i32, i32* %y_phys, align 4, !dbg !9811
  %div27 = sdiv i32 %mul26, %29, !dbg !9812
  %30 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !9813
  %y_res = getelementptr inbounds %struct.alps_data, %struct.alps_data* %30, i32 0, i32 19, !dbg !9814
  store i32 %div27, i32* %y_res, align 8, !dbg !9815
  store i32 0, i32* %retval, align 4, !dbg !9816
  br label %return, !dbg !9816

return:                                           ; preds = %if.end12, %if.then11, %if.then
  %31 = load i32, i32* %retval, align 4, !dbg !9817
  ret i32 %31, !dbg !9817
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @alps_absolute_mode_v4(%struct.psmouse* %psmouse) #0 !dbg !9818 {
entry:
  %retval = alloca i32, align 4
  %psmouse.addr = alloca %struct.psmouse*, align 8
  %reg_val = alloca i32, align 4
  store %struct.psmouse* %psmouse, %struct.psmouse** %psmouse.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.psmouse** %psmouse.addr, metadata !9819, metadata !DIExpression()), !dbg !9820
  call void @llvm.dbg.declare(metadata i32* %reg_val, metadata !9821, metadata !DIExpression()), !dbg !9822
  %0 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !9823
  %call = call i32 @alps_command_mode_read_reg(%struct.psmouse* %0, i32 4) #10, !dbg !9824
  store i32 %call, i32* %reg_val, align 4, !dbg !9825
  %1 = load i32, i32* %reg_val, align 4, !dbg !9826
  %cmp = icmp eq i32 %1, -1, !dbg !9828
  br i1 %cmp, label %if.then, label %if.end, !dbg !9829

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !9830
  br label %return, !dbg !9830

if.end:                                           ; preds = %entry
  %2 = load i32, i32* %reg_val, align 4, !dbg !9831
  %or = or i32 %2, 2, !dbg !9831
  store i32 %or, i32* %reg_val, align 4, !dbg !9831
  %3 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !9832
  %4 = load i32, i32* %reg_val, align 4, !dbg !9834
  %conv = trunc i32 %4 to i8, !dbg !9834
  %call1 = call i32 @__alps_command_mode_write_reg(%struct.psmouse* %3, i8 zeroext %conv) #10, !dbg !9835
  %tobool = icmp ne i32 %call1, 0, !dbg !9835
  br i1 %tobool, label %if.then2, label %if.end3, !dbg !9836

if.then2:                                         ; preds = %if.end
  store i32 -1, i32* %retval, align 4, !dbg !9837
  br label %return, !dbg !9837

if.end3:                                          ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !9838
  br label %return, !dbg !9838

return:                                           ; preds = %if.end3, %if.then2, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !9839
  ret i32 %5, !dbg !9839
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @alps_process_bitmap(%struct.alps_data* %priv, %struct.alps_fields* %fields) #0 !dbg !9840 {
entry:
  %retval = alloca i32, align 4
  %priv.addr = alloca %struct.alps_data*, align 8
  %fields.addr = alloca %struct.alps_fields*, align 8
  %i = alloca i32, align 4
  %fingers_x = alloca i32, align 4
  %fingers_y = alloca i32, align 4
  %fingers = alloca i32, align 4
  %closest = alloca i32, align 4
  %x_low = alloca %struct.alps_bitmap_point, align 4
  %x_high = alloca %struct.alps_bitmap_point, align 4
  %y_low = alloca %struct.alps_bitmap_point, align 4
  %y_high = alloca %struct.alps_bitmap_point, align 4
  %corner = alloca [4 x %struct.input_mt_pos], align 16
  %__UNIQUE_ID___x200 = alloca i32, align 4
  %__UNIQUE_ID___y201 = alloca i32, align 4
  %tmp = alloca i32, align 4
  %__UNIQUE_ID___x202 = alloca i32, align 4
  %__UNIQUE_ID___y203 = alloca i32, align 4
  %tmp10 = alloca i32, align 4
  %__UNIQUE_ID___x204 = alloca i32, align 4
  %__UNIQUE_ID___y205 = alloca i32, align 4
  %tmp29 = alloca i32, align 4
  %dx = alloca i32, align 4
  %dy = alloca i32, align 4
  %distance = alloca i32, align 4
  store %struct.alps_data* %priv, %struct.alps_data** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.alps_data** %priv.addr, metadata !9843, metadata !DIExpression()), !dbg !9844
  store %struct.alps_fields* %fields, %struct.alps_fields** %fields.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.alps_fields** %fields.addr, metadata !9845, metadata !DIExpression()), !dbg !9846
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9847, metadata !DIExpression()), !dbg !9848
  call void @llvm.dbg.declare(metadata i32* %fingers_x, metadata !9849, metadata !DIExpression()), !dbg !9850
  store i32 0, i32* %fingers_x, align 4, !dbg !9850
  call void @llvm.dbg.declare(metadata i32* %fingers_y, metadata !9851, metadata !DIExpression()), !dbg !9852
  store i32 0, i32* %fingers_y, align 4, !dbg !9852
  call void @llvm.dbg.declare(metadata i32* %fingers, metadata !9853, metadata !DIExpression()), !dbg !9854
  call void @llvm.dbg.declare(metadata i32* %closest, metadata !9855, metadata !DIExpression()), !dbg !9856
  call void @llvm.dbg.declare(metadata %struct.alps_bitmap_point* %x_low, metadata !9857, metadata !DIExpression()), !dbg !9862
  %0 = bitcast %struct.alps_bitmap_point* %x_low to i8*, !dbg !9862
  call void @llvm.memset.p0i8.i64(i8* align 4 %0, i8 0, i64 8, i1 false), !dbg !9862
  call void @llvm.dbg.declare(metadata %struct.alps_bitmap_point* %x_high, metadata !9863, metadata !DIExpression()), !dbg !9864
  %1 = bitcast %struct.alps_bitmap_point* %x_high to i8*, !dbg !9864
  call void @llvm.memset.p0i8.i64(i8* align 4 %1, i8 0, i64 8, i1 false), !dbg !9864
  call void @llvm.dbg.declare(metadata %struct.alps_bitmap_point* %y_low, metadata !9865, metadata !DIExpression()), !dbg !9866
  %2 = bitcast %struct.alps_bitmap_point* %y_low to i8*, !dbg !9866
  call void @llvm.memset.p0i8.i64(i8* align 4 %2, i8 0, i64 8, i1 false), !dbg !9866
  call void @llvm.dbg.declare(metadata %struct.alps_bitmap_point* %y_high, metadata !9867, metadata !DIExpression()), !dbg !9868
  %3 = bitcast %struct.alps_bitmap_point* %y_high to i8*, !dbg !9868
  call void @llvm.memset.p0i8.i64(i8* align 4 %3, i8 0, i64 8, i1 false), !dbg !9868
  call void @llvm.dbg.declare(metadata [4 x %struct.input_mt_pos]* %corner, metadata !9869, metadata !DIExpression()), !dbg !9870
  %4 = load %struct.alps_fields*, %struct.alps_fields** %fields.addr, align 8, !dbg !9871
  %x_map = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %4, i32 0, i32 0, !dbg !9873
  %5 = load i32, i32* %x_map, align 4, !dbg !9873
  %tobool = icmp ne i32 %5, 0, !dbg !9871
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !9874

lor.lhs.false:                                    ; preds = %entry
  %6 = load %struct.alps_fields*, %struct.alps_fields** %fields.addr, align 8, !dbg !9875
  %y_map = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %6, i32 0, i32 1, !dbg !9876
  %7 = load i32, i32* %y_map, align 4, !dbg !9876
  %tobool1 = icmp ne i32 %7, 0, !dbg !9875
  br i1 %tobool1, label %if.end, label %if.then, !dbg !9877

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 0, i32* %retval, align 4, !dbg !9878
  br label %return, !dbg !9878

if.end:                                           ; preds = %lor.lhs.false
  %8 = load %struct.alps_fields*, %struct.alps_fields** %fields.addr, align 8, !dbg !9879
  %x_map2 = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %8, i32 0, i32 0, !dbg !9880
  %9 = load i32, i32* %x_map2, align 4, !dbg !9880
  call void @alps_get_bitmap_points(i32 %9, %struct.alps_bitmap_point* %x_low, %struct.alps_bitmap_point* %x_high, i32* %fingers_x) #10, !dbg !9881
  %10 = load %struct.alps_fields*, %struct.alps_fields** %fields.addr, align 8, !dbg !9882
  %y_map3 = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %10, i32 0, i32 1, !dbg !9883
  %11 = load i32, i32* %y_map3, align 4, !dbg !9883
  call void @alps_get_bitmap_points(i32 %11, %struct.alps_bitmap_point* %y_low, %struct.alps_bitmap_point* %y_high, i32* %fingers_y) #10, !dbg !9884
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x200, metadata !9885, metadata !DIExpression()), !dbg !9887
  %12 = load i32, i32* %fingers_x, align 4, !dbg !9887
  store i32 %12, i32* %__UNIQUE_ID___x200, align 4, !dbg !9887
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y201, metadata !9888, metadata !DIExpression()), !dbg !9887
  %13 = load i32, i32* %fingers_y, align 4, !dbg !9887
  store i32 %13, i32* %__UNIQUE_ID___y201, align 4, !dbg !9887
  %14 = load i32, i32* %__UNIQUE_ID___x200, align 4, !dbg !9887
  %15 = load i32, i32* %__UNIQUE_ID___y201, align 4, !dbg !9887
  %cmp = icmp sgt i32 %14, %15, !dbg !9887
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !9887

cond.true:                                        ; preds = %if.end
  %16 = load i32, i32* %__UNIQUE_ID___x200, align 4, !dbg !9887
  br label %cond.end, !dbg !9887

cond.false:                                       ; preds = %if.end
  %17 = load i32, i32* %__UNIQUE_ID___y201, align 4, !dbg !9887
  br label %cond.end, !dbg !9887

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %16, %cond.true ], [ %17, %cond.false ], !dbg !9887
  store i32 %cond, i32* %tmp, align 4, !dbg !9887
  %18 = load i32, i32* %tmp, align 4, !dbg !9887
  store i32 %18, i32* %fingers, align 4, !dbg !9889
  %19 = load i32, i32* %fingers_x, align 4, !dbg !9890
  %cmp4 = icmp eq i32 %19, 1, !dbg !9892
  br i1 %cmp4, label %if.then5, label %if.end17, !dbg !9893

if.then5:                                         ; preds = %cond.end
  %num_bits = getelementptr inbounds %struct.alps_bitmap_point, %struct.alps_bitmap_point* %x_low, i32 0, i32 1, !dbg !9894
  %20 = load i32, i32* %num_bits, align 4, !dbg !9894
  %sub = sub i32 %20, 1, !dbg !9896
  %div = sdiv i32 %sub, 2, !dbg !9897
  store i32 %div, i32* %i, align 4, !dbg !9898
  %num_bits6 = getelementptr inbounds %struct.alps_bitmap_point, %struct.alps_bitmap_point* %x_low, i32 0, i32 1, !dbg !9899
  %21 = load i32, i32* %num_bits6, align 4, !dbg !9899
  %22 = load i32, i32* %i, align 4, !dbg !9900
  %sub7 = sub i32 %21, %22, !dbg !9901
  %num_bits8 = getelementptr inbounds %struct.alps_bitmap_point, %struct.alps_bitmap_point* %x_low, i32 0, i32 1, !dbg !9902
  store i32 %sub7, i32* %num_bits8, align 4, !dbg !9903
  %start_bit = getelementptr inbounds %struct.alps_bitmap_point, %struct.alps_bitmap_point* %x_low, i32 0, i32 0, !dbg !9904
  %23 = load i32, i32* %start_bit, align 4, !dbg !9904
  %24 = load i32, i32* %i, align 4, !dbg !9905
  %add = add i32 %23, %24, !dbg !9906
  %start_bit9 = getelementptr inbounds %struct.alps_bitmap_point, %struct.alps_bitmap_point* %x_high, i32 0, i32 0, !dbg !9907
  store i32 %add, i32* %start_bit9, align 4, !dbg !9908
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x202, metadata !9909, metadata !DIExpression()), !dbg !9911
  %25 = load i32, i32* %i, align 4, !dbg !9911
  store i32 %25, i32* %__UNIQUE_ID___x202, align 4, !dbg !9911
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y203, metadata !9912, metadata !DIExpression()), !dbg !9911
  store i32 1, i32* %__UNIQUE_ID___y203, align 4, !dbg !9911
  %26 = load i32, i32* %__UNIQUE_ID___x202, align 4, !dbg !9911
  %27 = load i32, i32* %__UNIQUE_ID___y203, align 4, !dbg !9911
  %cmp11 = icmp sgt i32 %26, %27, !dbg !9911
  br i1 %cmp11, label %cond.true12, label %cond.false13, !dbg !9911

cond.true12:                                      ; preds = %if.then5
  %28 = load i32, i32* %__UNIQUE_ID___x202, align 4, !dbg !9911
  br label %cond.end14, !dbg !9911

cond.false13:                                     ; preds = %if.then5
  %29 = load i32, i32* %__UNIQUE_ID___y203, align 4, !dbg !9911
  br label %cond.end14, !dbg !9911

cond.end14:                                       ; preds = %cond.false13, %cond.true12
  %cond15 = phi i32 [ %28, %cond.true12 ], [ %29, %cond.false13 ], !dbg !9911
  store i32 %cond15, i32* %tmp10, align 4, !dbg !9911
  %30 = load i32, i32* %tmp10, align 4, !dbg !9911
  %num_bits16 = getelementptr inbounds %struct.alps_bitmap_point, %struct.alps_bitmap_point* %x_high, i32 0, i32 1, !dbg !9913
  store i32 %30, i32* %num_bits16, align 4, !dbg !9914
  br label %if.end17, !dbg !9915

if.end17:                                         ; preds = %cond.end14, %cond.end
  %31 = load i32, i32* %fingers_y, align 4, !dbg !9916
  %cmp18 = icmp eq i32 %31, 1, !dbg !9918
  br i1 %cmp18, label %if.then19, label %if.end36, !dbg !9919

if.then19:                                        ; preds = %if.end17
  %num_bits20 = getelementptr inbounds %struct.alps_bitmap_point, %struct.alps_bitmap_point* %y_low, i32 0, i32 1, !dbg !9920
  %32 = load i32, i32* %num_bits20, align 4, !dbg !9920
  %sub21 = sub i32 %32, 1, !dbg !9922
  %div22 = sdiv i32 %sub21, 2, !dbg !9923
  store i32 %div22, i32* %i, align 4, !dbg !9924
  %num_bits23 = getelementptr inbounds %struct.alps_bitmap_point, %struct.alps_bitmap_point* %y_low, i32 0, i32 1, !dbg !9925
  %33 = load i32, i32* %num_bits23, align 4, !dbg !9925
  %34 = load i32, i32* %i, align 4, !dbg !9926
  %sub24 = sub i32 %33, %34, !dbg !9927
  %num_bits25 = getelementptr inbounds %struct.alps_bitmap_point, %struct.alps_bitmap_point* %y_low, i32 0, i32 1, !dbg !9928
  store i32 %sub24, i32* %num_bits25, align 4, !dbg !9929
  %start_bit26 = getelementptr inbounds %struct.alps_bitmap_point, %struct.alps_bitmap_point* %y_low, i32 0, i32 0, !dbg !9930
  %35 = load i32, i32* %start_bit26, align 4, !dbg !9930
  %36 = load i32, i32* %i, align 4, !dbg !9931
  %add27 = add i32 %35, %36, !dbg !9932
  %start_bit28 = getelementptr inbounds %struct.alps_bitmap_point, %struct.alps_bitmap_point* %y_high, i32 0, i32 0, !dbg !9933
  store i32 %add27, i32* %start_bit28, align 4, !dbg !9934
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x204, metadata !9935, metadata !DIExpression()), !dbg !9937
  %37 = load i32, i32* %i, align 4, !dbg !9937
  store i32 %37, i32* %__UNIQUE_ID___x204, align 4, !dbg !9937
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y205, metadata !9938, metadata !DIExpression()), !dbg !9937
  store i32 1, i32* %__UNIQUE_ID___y205, align 4, !dbg !9937
  %38 = load i32, i32* %__UNIQUE_ID___x204, align 4, !dbg !9937
  %39 = load i32, i32* %__UNIQUE_ID___y205, align 4, !dbg !9937
  %cmp30 = icmp sgt i32 %38, %39, !dbg !9937
  br i1 %cmp30, label %cond.true31, label %cond.false32, !dbg !9937

cond.true31:                                      ; preds = %if.then19
  %40 = load i32, i32* %__UNIQUE_ID___x204, align 4, !dbg !9937
  br label %cond.end33, !dbg !9937

cond.false32:                                     ; preds = %if.then19
  %41 = load i32, i32* %__UNIQUE_ID___y205, align 4, !dbg !9937
  br label %cond.end33, !dbg !9937

cond.end33:                                       ; preds = %cond.false32, %cond.true31
  %cond34 = phi i32 [ %40, %cond.true31 ], [ %41, %cond.false32 ], !dbg !9937
  store i32 %cond34, i32* %tmp29, align 4, !dbg !9937
  %42 = load i32, i32* %tmp29, align 4, !dbg !9937
  %num_bits35 = getelementptr inbounds %struct.alps_bitmap_point, %struct.alps_bitmap_point* %y_high, i32 0, i32 1, !dbg !9939
  store i32 %42, i32* %num_bits35, align 4, !dbg !9940
  br label %if.end36, !dbg !9941

if.end36:                                         ; preds = %cond.end33, %if.end17
  %43 = load %struct.alps_data*, %struct.alps_data** %priv.addr, align 8, !dbg !9942
  %x_max = getelementptr inbounds %struct.alps_data, %struct.alps_data* %43, i32 0, i32 14, !dbg !9943
  %44 = load i32, i32* %x_max, align 4, !dbg !9943
  %start_bit37 = getelementptr inbounds %struct.alps_bitmap_point, %struct.alps_bitmap_point* %x_low, i32 0, i32 0, !dbg !9944
  %45 = load i32, i32* %start_bit37, align 4, !dbg !9944
  %mul = mul i32 2, %45, !dbg !9945
  %num_bits38 = getelementptr inbounds %struct.alps_bitmap_point, %struct.alps_bitmap_point* %x_low, i32 0, i32 1, !dbg !9946
  %46 = load i32, i32* %num_bits38, align 4, !dbg !9946
  %add39 = add i32 %mul, %46, !dbg !9947
  %sub40 = sub i32 %add39, 1, !dbg !9948
  %mul41 = mul i32 %44, %sub40, !dbg !9949
  %47 = load %struct.alps_data*, %struct.alps_data** %priv.addr, align 8, !dbg !9950
  %x_bits = getelementptr inbounds %struct.alps_data, %struct.alps_data* %47, i32 0, i32 16, !dbg !9951
  %48 = load i32, i32* %x_bits, align 4, !dbg !9951
  %sub42 = sub i32 %48, 1, !dbg !9952
  %mul43 = mul i32 2, %sub42, !dbg !9953
  %div44 = sdiv i32 %mul41, %mul43, !dbg !9954
  %conv = trunc i32 %div44 to i16, !dbg !9955
  %arrayidx = getelementptr [4 x %struct.input_mt_pos], [4 x %struct.input_mt_pos]* %corner, i64 0, i64 0, !dbg !9956
  %x = getelementptr inbounds %struct.input_mt_pos, %struct.input_mt_pos* %arrayidx, i32 0, i32 0, !dbg !9957
  store i16 %conv, i16* %x, align 16, !dbg !9958
  %49 = load %struct.alps_data*, %struct.alps_data** %priv.addr, align 8, !dbg !9959
  %y_max = getelementptr inbounds %struct.alps_data, %struct.alps_data* %49, i32 0, i32 15, !dbg !9960
  %50 = load i32, i32* %y_max, align 8, !dbg !9960
  %start_bit45 = getelementptr inbounds %struct.alps_bitmap_point, %struct.alps_bitmap_point* %y_low, i32 0, i32 0, !dbg !9961
  %51 = load i32, i32* %start_bit45, align 4, !dbg !9961
  %mul46 = mul i32 2, %51, !dbg !9962
  %num_bits47 = getelementptr inbounds %struct.alps_bitmap_point, %struct.alps_bitmap_point* %y_low, i32 0, i32 1, !dbg !9963
  %52 = load i32, i32* %num_bits47, align 4, !dbg !9963
  %add48 = add i32 %mul46, %52, !dbg !9964
  %sub49 = sub i32 %add48, 1, !dbg !9965
  %mul50 = mul i32 %50, %sub49, !dbg !9966
  %53 = load %struct.alps_data*, %struct.alps_data** %priv.addr, align 8, !dbg !9967
  %y_bits = getelementptr inbounds %struct.alps_data, %struct.alps_data* %53, i32 0, i32 17, !dbg !9968
  %54 = load i32, i32* %y_bits, align 8, !dbg !9968
  %sub51 = sub i32 %54, 1, !dbg !9969
  %mul52 = mul i32 2, %sub51, !dbg !9970
  %div53 = sdiv i32 %mul50, %mul52, !dbg !9971
  %conv54 = trunc i32 %div53 to i16, !dbg !9972
  %arrayidx55 = getelementptr [4 x %struct.input_mt_pos], [4 x %struct.input_mt_pos]* %corner, i64 0, i64 0, !dbg !9973
  %y = getelementptr inbounds %struct.input_mt_pos, %struct.input_mt_pos* %arrayidx55, i32 0, i32 1, !dbg !9974
  store i16 %conv54, i16* %y, align 2, !dbg !9975
  %55 = load %struct.alps_data*, %struct.alps_data** %priv.addr, align 8, !dbg !9976
  %x_max56 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %55, i32 0, i32 14, !dbg !9977
  %56 = load i32, i32* %x_max56, align 4, !dbg !9977
  %start_bit57 = getelementptr inbounds %struct.alps_bitmap_point, %struct.alps_bitmap_point* %x_high, i32 0, i32 0, !dbg !9978
  %57 = load i32, i32* %start_bit57, align 4, !dbg !9978
  %mul58 = mul i32 2, %57, !dbg !9979
  %num_bits59 = getelementptr inbounds %struct.alps_bitmap_point, %struct.alps_bitmap_point* %x_high, i32 0, i32 1, !dbg !9980
  %58 = load i32, i32* %num_bits59, align 4, !dbg !9980
  %add60 = add i32 %mul58, %58, !dbg !9981
  %sub61 = sub i32 %add60, 1, !dbg !9982
  %mul62 = mul i32 %56, %sub61, !dbg !9983
  %59 = load %struct.alps_data*, %struct.alps_data** %priv.addr, align 8, !dbg !9984
  %x_bits63 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %59, i32 0, i32 16, !dbg !9985
  %60 = load i32, i32* %x_bits63, align 4, !dbg !9985
  %sub64 = sub i32 %60, 1, !dbg !9986
  %mul65 = mul i32 2, %sub64, !dbg !9987
  %div66 = sdiv i32 %mul62, %mul65, !dbg !9988
  %conv67 = trunc i32 %div66 to i16, !dbg !9989
  %arrayidx68 = getelementptr [4 x %struct.input_mt_pos], [4 x %struct.input_mt_pos]* %corner, i64 0, i64 1, !dbg !9990
  %x69 = getelementptr inbounds %struct.input_mt_pos, %struct.input_mt_pos* %arrayidx68, i32 0, i32 0, !dbg !9991
  store i16 %conv67, i16* %x69, align 4, !dbg !9992
  %61 = load %struct.alps_data*, %struct.alps_data** %priv.addr, align 8, !dbg !9993
  %y_max70 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %61, i32 0, i32 15, !dbg !9994
  %62 = load i32, i32* %y_max70, align 8, !dbg !9994
  %start_bit71 = getelementptr inbounds %struct.alps_bitmap_point, %struct.alps_bitmap_point* %y_low, i32 0, i32 0, !dbg !9995
  %63 = load i32, i32* %start_bit71, align 4, !dbg !9995
  %mul72 = mul i32 2, %63, !dbg !9996
  %num_bits73 = getelementptr inbounds %struct.alps_bitmap_point, %struct.alps_bitmap_point* %y_low, i32 0, i32 1, !dbg !9997
  %64 = load i32, i32* %num_bits73, align 4, !dbg !9997
  %add74 = add i32 %mul72, %64, !dbg !9998
  %sub75 = sub i32 %add74, 1, !dbg !9999
  %mul76 = mul i32 %62, %sub75, !dbg !10000
  %65 = load %struct.alps_data*, %struct.alps_data** %priv.addr, align 8, !dbg !10001
  %y_bits77 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %65, i32 0, i32 17, !dbg !10002
  %66 = load i32, i32* %y_bits77, align 8, !dbg !10002
  %sub78 = sub i32 %66, 1, !dbg !10003
  %mul79 = mul i32 2, %sub78, !dbg !10004
  %div80 = sdiv i32 %mul76, %mul79, !dbg !10005
  %conv81 = trunc i32 %div80 to i16, !dbg !10006
  %arrayidx82 = getelementptr [4 x %struct.input_mt_pos], [4 x %struct.input_mt_pos]* %corner, i64 0, i64 1, !dbg !10007
  %y83 = getelementptr inbounds %struct.input_mt_pos, %struct.input_mt_pos* %arrayidx82, i32 0, i32 1, !dbg !10008
  store i16 %conv81, i16* %y83, align 2, !dbg !10009
  %67 = load %struct.alps_data*, %struct.alps_data** %priv.addr, align 8, !dbg !10010
  %x_max84 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %67, i32 0, i32 14, !dbg !10011
  %68 = load i32, i32* %x_max84, align 4, !dbg !10011
  %start_bit85 = getelementptr inbounds %struct.alps_bitmap_point, %struct.alps_bitmap_point* %x_high, i32 0, i32 0, !dbg !10012
  %69 = load i32, i32* %start_bit85, align 4, !dbg !10012
  %mul86 = mul i32 2, %69, !dbg !10013
  %num_bits87 = getelementptr inbounds %struct.alps_bitmap_point, %struct.alps_bitmap_point* %x_high, i32 0, i32 1, !dbg !10014
  %70 = load i32, i32* %num_bits87, align 4, !dbg !10014
  %add88 = add i32 %mul86, %70, !dbg !10015
  %sub89 = sub i32 %add88, 1, !dbg !10016
  %mul90 = mul i32 %68, %sub89, !dbg !10017
  %71 = load %struct.alps_data*, %struct.alps_data** %priv.addr, align 8, !dbg !10018
  %x_bits91 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %71, i32 0, i32 16, !dbg !10019
  %72 = load i32, i32* %x_bits91, align 4, !dbg !10019
  %sub92 = sub i32 %72, 1, !dbg !10020
  %mul93 = mul i32 2, %sub92, !dbg !10021
  %div94 = sdiv i32 %mul90, %mul93, !dbg !10022
  %conv95 = trunc i32 %div94 to i16, !dbg !10023
  %arrayidx96 = getelementptr [4 x %struct.input_mt_pos], [4 x %struct.input_mt_pos]* %corner, i64 0, i64 2, !dbg !10024
  %x97 = getelementptr inbounds %struct.input_mt_pos, %struct.input_mt_pos* %arrayidx96, i32 0, i32 0, !dbg !10025
  store i16 %conv95, i16* %x97, align 8, !dbg !10026
  %73 = load %struct.alps_data*, %struct.alps_data** %priv.addr, align 8, !dbg !10027
  %y_max98 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %73, i32 0, i32 15, !dbg !10028
  %74 = load i32, i32* %y_max98, align 8, !dbg !10028
  %start_bit99 = getelementptr inbounds %struct.alps_bitmap_point, %struct.alps_bitmap_point* %y_high, i32 0, i32 0, !dbg !10029
  %75 = load i32, i32* %start_bit99, align 4, !dbg !10029
  %mul100 = mul i32 2, %75, !dbg !10030
  %num_bits101 = getelementptr inbounds %struct.alps_bitmap_point, %struct.alps_bitmap_point* %y_high, i32 0, i32 1, !dbg !10031
  %76 = load i32, i32* %num_bits101, align 4, !dbg !10031
  %add102 = add i32 %mul100, %76, !dbg !10032
  %sub103 = sub i32 %add102, 1, !dbg !10033
  %mul104 = mul i32 %74, %sub103, !dbg !10034
  %77 = load %struct.alps_data*, %struct.alps_data** %priv.addr, align 8, !dbg !10035
  %y_bits105 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %77, i32 0, i32 17, !dbg !10036
  %78 = load i32, i32* %y_bits105, align 8, !dbg !10036
  %sub106 = sub i32 %78, 1, !dbg !10037
  %mul107 = mul i32 2, %sub106, !dbg !10038
  %div108 = sdiv i32 %mul104, %mul107, !dbg !10039
  %conv109 = trunc i32 %div108 to i16, !dbg !10040
  %arrayidx110 = getelementptr [4 x %struct.input_mt_pos], [4 x %struct.input_mt_pos]* %corner, i64 0, i64 2, !dbg !10041
  %y111 = getelementptr inbounds %struct.input_mt_pos, %struct.input_mt_pos* %arrayidx110, i32 0, i32 1, !dbg !10042
  store i16 %conv109, i16* %y111, align 2, !dbg !10043
  %79 = load %struct.alps_data*, %struct.alps_data** %priv.addr, align 8, !dbg !10044
  %x_max112 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %79, i32 0, i32 14, !dbg !10045
  %80 = load i32, i32* %x_max112, align 4, !dbg !10045
  %start_bit113 = getelementptr inbounds %struct.alps_bitmap_point, %struct.alps_bitmap_point* %x_low, i32 0, i32 0, !dbg !10046
  %81 = load i32, i32* %start_bit113, align 4, !dbg !10046
  %mul114 = mul i32 2, %81, !dbg !10047
  %num_bits115 = getelementptr inbounds %struct.alps_bitmap_point, %struct.alps_bitmap_point* %x_low, i32 0, i32 1, !dbg !10048
  %82 = load i32, i32* %num_bits115, align 4, !dbg !10048
  %add116 = add i32 %mul114, %82, !dbg !10049
  %sub117 = sub i32 %add116, 1, !dbg !10050
  %mul118 = mul i32 %80, %sub117, !dbg !10051
  %83 = load %struct.alps_data*, %struct.alps_data** %priv.addr, align 8, !dbg !10052
  %x_bits119 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %83, i32 0, i32 16, !dbg !10053
  %84 = load i32, i32* %x_bits119, align 4, !dbg !10053
  %sub120 = sub i32 %84, 1, !dbg !10054
  %mul121 = mul i32 2, %sub120, !dbg !10055
  %div122 = sdiv i32 %mul118, %mul121, !dbg !10056
  %conv123 = trunc i32 %div122 to i16, !dbg !10057
  %arrayidx124 = getelementptr [4 x %struct.input_mt_pos], [4 x %struct.input_mt_pos]* %corner, i64 0, i64 3, !dbg !10058
  %x125 = getelementptr inbounds %struct.input_mt_pos, %struct.input_mt_pos* %arrayidx124, i32 0, i32 0, !dbg !10059
  store i16 %conv123, i16* %x125, align 4, !dbg !10060
  %85 = load %struct.alps_data*, %struct.alps_data** %priv.addr, align 8, !dbg !10061
  %y_max126 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %85, i32 0, i32 15, !dbg !10062
  %86 = load i32, i32* %y_max126, align 8, !dbg !10062
  %start_bit127 = getelementptr inbounds %struct.alps_bitmap_point, %struct.alps_bitmap_point* %y_high, i32 0, i32 0, !dbg !10063
  %87 = load i32, i32* %start_bit127, align 4, !dbg !10063
  %mul128 = mul i32 2, %87, !dbg !10064
  %num_bits129 = getelementptr inbounds %struct.alps_bitmap_point, %struct.alps_bitmap_point* %y_high, i32 0, i32 1, !dbg !10065
  %88 = load i32, i32* %num_bits129, align 4, !dbg !10065
  %add130 = add i32 %mul128, %88, !dbg !10066
  %sub131 = sub i32 %add130, 1, !dbg !10067
  %mul132 = mul i32 %86, %sub131, !dbg !10068
  %89 = load %struct.alps_data*, %struct.alps_data** %priv.addr, align 8, !dbg !10069
  %y_bits133 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %89, i32 0, i32 17, !dbg !10070
  %90 = load i32, i32* %y_bits133, align 8, !dbg !10070
  %sub134 = sub i32 %90, 1, !dbg !10071
  %mul135 = mul i32 2, %sub134, !dbg !10072
  %div136 = sdiv i32 %mul132, %mul135, !dbg !10073
  %conv137 = trunc i32 %div136 to i16, !dbg !10074
  %arrayidx138 = getelementptr [4 x %struct.input_mt_pos], [4 x %struct.input_mt_pos]* %corner, i64 0, i64 3, !dbg !10075
  %y139 = getelementptr inbounds %struct.input_mt_pos, %struct.input_mt_pos* %arrayidx138, i32 0, i32 1, !dbg !10076
  store i16 %conv137, i16* %y139, align 2, !dbg !10077
  %91 = load %struct.alps_data*, %struct.alps_data** %priv.addr, align 8, !dbg !10078
  %proto_version = getelementptr inbounds %struct.alps_data, %struct.alps_data* %91, i32 0, i32 8, !dbg !10080
  %92 = load i16, i16* %proto_version, align 4, !dbg !10080
  %conv140 = zext i16 %92 to i32, !dbg !10078
  %cmp141 = icmp eq i32 %conv140, 1280, !dbg !10081
  br i1 %cmp141, label %if.then143, label %if.end155, !dbg !10082

if.then143:                                       ; preds = %if.end36
  store i32 0, i32* %i, align 4, !dbg !10083
  br label %for.cond, !dbg !10086

for.cond:                                         ; preds = %for.inc, %if.then143
  %93 = load i32, i32* %i, align 4, !dbg !10087
  %cmp144 = icmp slt i32 %93, 4, !dbg !10089
  br i1 %cmp144, label %for.body, label %for.end, !dbg !10090

for.body:                                         ; preds = %for.cond
  %94 = load %struct.alps_data*, %struct.alps_data** %priv.addr, align 8, !dbg !10091
  %x_max146 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %94, i32 0, i32 14, !dbg !10092
  %95 = load i32, i32* %x_max146, align 4, !dbg !10092
  %96 = load i32, i32* %i, align 4, !dbg !10093
  %idxprom = sext i32 %96 to i64, !dbg !10094
  %arrayidx147 = getelementptr [4 x %struct.input_mt_pos], [4 x %struct.input_mt_pos]* %corner, i64 0, i64 %idxprom, !dbg !10094
  %x148 = getelementptr inbounds %struct.input_mt_pos, %struct.input_mt_pos* %arrayidx147, i32 0, i32 0, !dbg !10095
  %97 = load i16, i16* %x148, align 4, !dbg !10095
  %conv149 = sext i16 %97 to i32, !dbg !10094
  %sub150 = sub i32 %95, %conv149, !dbg !10096
  %conv151 = trunc i32 %sub150 to i16, !dbg !10091
  %98 = load i32, i32* %i, align 4, !dbg !10097
  %idxprom152 = sext i32 %98 to i64, !dbg !10098
  %arrayidx153 = getelementptr [4 x %struct.input_mt_pos], [4 x %struct.input_mt_pos]* %corner, i64 0, i64 %idxprom152, !dbg !10098
  %x154 = getelementptr inbounds %struct.input_mt_pos, %struct.input_mt_pos* %arrayidx153, i32 0, i32 0, !dbg !10099
  store i16 %conv151, i16* %x154, align 4, !dbg !10100
  br label %for.inc, !dbg !10098

for.inc:                                          ; preds = %for.body
  %99 = load i32, i32* %i, align 4, !dbg !10101
  %inc = add i32 %99, 1, !dbg !10101
  store i32 %inc, i32* %i, align 4, !dbg !10101
  br label %for.cond, !dbg !10102, !llvm.loop !10103

for.end:                                          ; preds = %for.cond
  br label %if.end155, !dbg !10105

if.end155:                                        ; preds = %for.end, %if.end36
  %100 = load %struct.alps_data*, %struct.alps_data** %priv.addr, align 8, !dbg !10106
  %proto_version156 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %100, i32 0, i32 8, !dbg !10108
  %101 = load i16, i16* %proto_version156, align 4, !dbg !10108
  %conv157 = zext i16 %101 to i32, !dbg !10106
  %cmp158 = icmp eq i32 %conv157, 768, !dbg !10109
  br i1 %cmp158, label %if.then165, label %lor.lhs.false160, !dbg !10110

lor.lhs.false160:                                 ; preds = %if.end155
  %102 = load %struct.alps_data*, %struct.alps_data** %priv.addr, align 8, !dbg !10111
  %proto_version161 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %102, i32 0, i32 8, !dbg !10112
  %103 = load i16, i16* %proto_version161, align 4, !dbg !10112
  %conv162 = zext i16 %103 to i32, !dbg !10111
  %cmp163 = icmp eq i32 %conv162, 1024, !dbg !10113
  br i1 %cmp163, label %if.then165, label %if.end183, !dbg !10114

if.then165:                                       ; preds = %lor.lhs.false160, %if.end155
  store i32 0, i32* %i, align 4, !dbg !10115
  br label %for.cond166, !dbg !10118

for.cond166:                                      ; preds = %for.inc180, %if.then165
  %104 = load i32, i32* %i, align 4, !dbg !10119
  %cmp167 = icmp slt i32 %104, 4, !dbg !10121
  br i1 %cmp167, label %for.body169, label %for.end182, !dbg !10122

for.body169:                                      ; preds = %for.cond166
  %105 = load %struct.alps_data*, %struct.alps_data** %priv.addr, align 8, !dbg !10123
  %y_max170 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %105, i32 0, i32 15, !dbg !10124
  %106 = load i32, i32* %y_max170, align 8, !dbg !10124
  %107 = load i32, i32* %i, align 4, !dbg !10125
  %idxprom171 = sext i32 %107 to i64, !dbg !10126
  %arrayidx172 = getelementptr [4 x %struct.input_mt_pos], [4 x %struct.input_mt_pos]* %corner, i64 0, i64 %idxprom171, !dbg !10126
  %y173 = getelementptr inbounds %struct.input_mt_pos, %struct.input_mt_pos* %arrayidx172, i32 0, i32 1, !dbg !10127
  %108 = load i16, i16* %y173, align 2, !dbg !10127
  %conv174 = sext i16 %108 to i32, !dbg !10126
  %sub175 = sub i32 %106, %conv174, !dbg !10128
  %conv176 = trunc i32 %sub175 to i16, !dbg !10123
  %109 = load i32, i32* %i, align 4, !dbg !10129
  %idxprom177 = sext i32 %109 to i64, !dbg !10130
  %arrayidx178 = getelementptr [4 x %struct.input_mt_pos], [4 x %struct.input_mt_pos]* %corner, i64 0, i64 %idxprom177, !dbg !10130
  %y179 = getelementptr inbounds %struct.input_mt_pos, %struct.input_mt_pos* %arrayidx178, i32 0, i32 1, !dbg !10131
  store i16 %conv176, i16* %y179, align 2, !dbg !10132
  br label %for.inc180, !dbg !10130

for.inc180:                                       ; preds = %for.body169
  %110 = load i32, i32* %i, align 4, !dbg !10133
  %inc181 = add i32 %110, 1, !dbg !10133
  store i32 %inc181, i32* %i, align 4, !dbg !10133
  br label %for.cond166, !dbg !10134, !llvm.loop !10135

for.end182:                                       ; preds = %for.cond166
  br label %if.end183, !dbg !10137

if.end183:                                        ; preds = %for.end182, %lor.lhs.false160
  %111 = load %struct.alps_data*, %struct.alps_data** %priv.addr, align 8, !dbg !10138
  %second_touch = getelementptr inbounds %struct.alps_data, %struct.alps_data* %111, i32 0, i32 26, !dbg !10140
  %112 = load i32, i32* %second_touch, align 8, !dbg !10140
  %cmp184 = icmp eq i32 %112, -1, !dbg !10141
  br i1 %cmp184, label %if.then186, label %if.end220, !dbg !10142

if.then186:                                       ; preds = %if.end183
  store i32 2147483647, i32* %closest, align 4, !dbg !10143
  store i32 0, i32* %i, align 4, !dbg !10145
  br label %for.cond187, !dbg !10147

for.cond187:                                      ; preds = %for.inc214, %if.then186
  %113 = load i32, i32* %i, align 4, !dbg !10148
  %cmp188 = icmp slt i32 %113, 4, !dbg !10150
  br i1 %cmp188, label %for.body190, label %for.end216, !dbg !10151

for.body190:                                      ; preds = %for.cond187
  call void @llvm.dbg.declare(metadata i32* %dx, metadata !10152, metadata !DIExpression()), !dbg !10154
  %114 = load %struct.alps_fields*, %struct.alps_fields** %fields.addr, align 8, !dbg !10155
  %st = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %114, i32 0, i32 4, !dbg !10156
  %x191 = getelementptr inbounds %struct.input_mt_pos, %struct.input_mt_pos* %st, i32 0, i32 0, !dbg !10157
  %115 = load i16, i16* %x191, align 4, !dbg !10157
  %conv192 = sext i16 %115 to i32, !dbg !10155
  %116 = load i32, i32* %i, align 4, !dbg !10158
  %idxprom193 = sext i32 %116 to i64, !dbg !10159
  %arrayidx194 = getelementptr [4 x %struct.input_mt_pos], [4 x %struct.input_mt_pos]* %corner, i64 0, i64 %idxprom193, !dbg !10159
  %x195 = getelementptr inbounds %struct.input_mt_pos, %struct.input_mt_pos* %arrayidx194, i32 0, i32 0, !dbg !10160
  %117 = load i16, i16* %x195, align 4, !dbg !10160
  %conv196 = sext i16 %117 to i32, !dbg !10159
  %sub197 = sub i32 %conv192, %conv196, !dbg !10161
  store i32 %sub197, i32* %dx, align 4, !dbg !10154
  call void @llvm.dbg.declare(metadata i32* %dy, metadata !10162, metadata !DIExpression()), !dbg !10163
  %118 = load %struct.alps_fields*, %struct.alps_fields** %fields.addr, align 8, !dbg !10164
  %st198 = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %118, i32 0, i32 4, !dbg !10165
  %y199 = getelementptr inbounds %struct.input_mt_pos, %struct.input_mt_pos* %st198, i32 0, i32 1, !dbg !10166
  %119 = load i16, i16* %y199, align 2, !dbg !10166
  %conv200 = sext i16 %119 to i32, !dbg !10164
  %120 = load i32, i32* %i, align 4, !dbg !10167
  %idxprom201 = sext i32 %120 to i64, !dbg !10168
  %arrayidx202 = getelementptr [4 x %struct.input_mt_pos], [4 x %struct.input_mt_pos]* %corner, i64 0, i64 %idxprom201, !dbg !10168
  %y203 = getelementptr inbounds %struct.input_mt_pos, %struct.input_mt_pos* %arrayidx202, i32 0, i32 1, !dbg !10169
  %121 = load i16, i16* %y203, align 2, !dbg !10169
  %conv204 = sext i16 %121 to i32, !dbg !10168
  %sub205 = sub i32 %conv200, %conv204, !dbg !10170
  store i32 %sub205, i32* %dy, align 4, !dbg !10163
  call void @llvm.dbg.declare(metadata i32* %distance, metadata !10171, metadata !DIExpression()), !dbg !10172
  %122 = load i32, i32* %dx, align 4, !dbg !10173
  %123 = load i32, i32* %dx, align 4, !dbg !10174
  %mul206 = mul i32 %122, %123, !dbg !10175
  %124 = load i32, i32* %dy, align 4, !dbg !10176
  %125 = load i32, i32* %dy, align 4, !dbg !10177
  %mul207 = mul i32 %124, %125, !dbg !10178
  %add208 = add i32 %mul206, %mul207, !dbg !10179
  store i32 %add208, i32* %distance, align 4, !dbg !10172
  %126 = load i32, i32* %distance, align 4, !dbg !10180
  %127 = load i32, i32* %closest, align 4, !dbg !10182
  %cmp209 = icmp slt i32 %126, %127, !dbg !10183
  br i1 %cmp209, label %if.then211, label %if.end213, !dbg !10184

if.then211:                                       ; preds = %for.body190
  %128 = load i32, i32* %i, align 4, !dbg !10185
  %129 = load %struct.alps_data*, %struct.alps_data** %priv.addr, align 8, !dbg !10187
  %second_touch212 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %129, i32 0, i32 26, !dbg !10188
  store i32 %128, i32* %second_touch212, align 8, !dbg !10189
  %130 = load i32, i32* %distance, align 4, !dbg !10190
  store i32 %130, i32* %closest, align 4, !dbg !10191
  br label %if.end213, !dbg !10192

if.end213:                                        ; preds = %if.then211, %for.body190
  br label %for.inc214, !dbg !10193

for.inc214:                                       ; preds = %if.end213
  %131 = load i32, i32* %i, align 4, !dbg !10194
  %inc215 = add i32 %131, 1, !dbg !10194
  store i32 %inc215, i32* %i, align 4, !dbg !10194
  br label %for.cond187, !dbg !10195, !llvm.loop !10196

for.end216:                                       ; preds = %for.cond187
  %132 = load %struct.alps_data*, %struct.alps_data** %priv.addr, align 8, !dbg !10198
  %second_touch217 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %132, i32 0, i32 26, !dbg !10199
  %133 = load i32, i32* %second_touch217, align 8, !dbg !10199
  %add218 = add i32 %133, 2, !dbg !10200
  %rem = srem i32 %add218, 4, !dbg !10201
  %134 = load %struct.alps_data*, %struct.alps_data** %priv.addr, align 8, !dbg !10202
  %second_touch219 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %134, i32 0, i32 26, !dbg !10203
  store i32 %rem, i32* %second_touch219, align 8, !dbg !10204
  br label %if.end220, !dbg !10205

if.end220:                                        ; preds = %for.end216, %if.end183
  %135 = load %struct.alps_fields*, %struct.alps_fields** %fields.addr, align 8, !dbg !10206
  %mt = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %135, i32 0, i32 5, !dbg !10207
  %arrayidx221 = getelementptr [4 x %struct.input_mt_pos], [4 x %struct.input_mt_pos]* %mt, i64 0, i64 0, !dbg !10206
  %136 = load %struct.alps_fields*, %struct.alps_fields** %fields.addr, align 8, !dbg !10208
  %st222 = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %136, i32 0, i32 4, !dbg !10209
  %137 = bitcast %struct.input_mt_pos* %arrayidx221 to i8*, !dbg !10209
  %138 = bitcast %struct.input_mt_pos* %st222 to i8*, !dbg !10209
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %137, i8* align 4 %138, i64 4, i1 false), !dbg !10209
  %139 = load %struct.alps_fields*, %struct.alps_fields** %fields.addr, align 8, !dbg !10210
  %mt223 = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %139, i32 0, i32 5, !dbg !10211
  %arrayidx224 = getelementptr [4 x %struct.input_mt_pos], [4 x %struct.input_mt_pos]* %mt223, i64 0, i64 1, !dbg !10210
  %140 = load %struct.alps_data*, %struct.alps_data** %priv.addr, align 8, !dbg !10212
  %second_touch225 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %140, i32 0, i32 26, !dbg !10213
  %141 = load i32, i32* %second_touch225, align 8, !dbg !10213
  %idxprom226 = sext i32 %141 to i64, !dbg !10214
  %arrayidx227 = getelementptr [4 x %struct.input_mt_pos], [4 x %struct.input_mt_pos]* %corner, i64 0, i64 %idxprom226, !dbg !10214
  %142 = bitcast %struct.input_mt_pos* %arrayidx224 to i8*, !dbg !10214
  %143 = bitcast %struct.input_mt_pos* %arrayidx227 to i8*, !dbg !10214
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %142, i8* align 4 %143, i64 4, i1 false), !dbg !10214
  %144 = load i32, i32* %fingers, align 4, !dbg !10215
  store i32 %144, i32* %retval, align 4, !dbg !10216
  br label %return, !dbg !10216

return:                                           ; preds = %if.end220, %if.then
  %145 = load i32, i32* %retval, align 4, !dbg !10217
  ret i32 %145, !dbg !10217
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @alps_report_semi_mt_data(%struct.psmouse* %psmouse, i32 %fingers) #0 !dbg !10218 {
entry:
  %psmouse.addr = alloca %struct.psmouse*, align 8
  %fingers.addr = alloca i32, align 4
  %priv = alloca %struct.alps_data*, align 8
  %dev = alloca %struct.input_dev*, align 8
  %f = alloca %struct.alps_fields*, align 8
  store %struct.psmouse* %psmouse, %struct.psmouse** %psmouse.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.psmouse** %psmouse.addr, metadata !10221, metadata !DIExpression()), !dbg !10222
  store i32 %fingers, i32* %fingers.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fingers.addr, metadata !10223, metadata !DIExpression()), !dbg !10224
  call void @llvm.dbg.declare(metadata %struct.alps_data** %priv, metadata !10225, metadata !DIExpression()), !dbg !10226
  %0 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !10227
  %private = getelementptr inbounds %struct.psmouse, %struct.psmouse* %0, i32 0, i32 0, !dbg !10228
  %1 = load i8*, i8** %private, align 8, !dbg !10228
  %2 = bitcast i8* %1 to %struct.alps_data*, !dbg !10227
  store %struct.alps_data* %2, %struct.alps_data** %priv, align 8, !dbg !10226
  call void @llvm.dbg.declare(metadata %struct.input_dev** %dev, metadata !10229, metadata !DIExpression()), !dbg !10230
  %3 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !10231
  %dev1 = getelementptr inbounds %struct.psmouse, %struct.psmouse* %3, i32 0, i32 1, !dbg !10232
  %4 = load %struct.input_dev*, %struct.input_dev** %dev1, align 8, !dbg !10232
  store %struct.input_dev* %4, %struct.input_dev** %dev, align 8, !dbg !10230
  call void @llvm.dbg.declare(metadata %struct.alps_fields** %f, metadata !10233, metadata !DIExpression()), !dbg !10234
  %5 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !10235
  %f2 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %5, i32 0, i32 28, !dbg !10236
  store %struct.alps_fields* %f2, %struct.alps_fields** %f, align 8, !dbg !10234
  %6 = load i32, i32* %fingers.addr, align 4, !dbg !10237
  %cmp = icmp slt i32 %6, 2, !dbg !10239
  br i1 %cmp, label %if.then, label %if.end, !dbg !10240

if.then:                                          ; preds = %entry
  %7 = load %struct.alps_fields*, %struct.alps_fields** %f, align 8, !dbg !10241
  %st = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %7, i32 0, i32 4, !dbg !10243
  %x = getelementptr inbounds %struct.input_mt_pos, %struct.input_mt_pos* %st, i32 0, i32 0, !dbg !10244
  %8 = load i16, i16* %x, align 4, !dbg !10244
  %9 = load %struct.alps_fields*, %struct.alps_fields** %f, align 8, !dbg !10245
  %mt = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %9, i32 0, i32 5, !dbg !10246
  %arrayidx = getelementptr [4 x %struct.input_mt_pos], [4 x %struct.input_mt_pos]* %mt, i64 0, i64 0, !dbg !10245
  %x3 = getelementptr inbounds %struct.input_mt_pos, %struct.input_mt_pos* %arrayidx, i32 0, i32 0, !dbg !10247
  store i16 %8, i16* %x3, align 4, !dbg !10248
  %10 = load %struct.alps_fields*, %struct.alps_fields** %f, align 8, !dbg !10249
  %st4 = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %10, i32 0, i32 4, !dbg !10250
  %y = getelementptr inbounds %struct.input_mt_pos, %struct.input_mt_pos* %st4, i32 0, i32 1, !dbg !10251
  %11 = load i16, i16* %y, align 2, !dbg !10251
  %12 = load %struct.alps_fields*, %struct.alps_fields** %f, align 8, !dbg !10252
  %mt5 = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %12, i32 0, i32 5, !dbg !10253
  %arrayidx6 = getelementptr [4 x %struct.input_mt_pos], [4 x %struct.input_mt_pos]* %mt5, i64 0, i64 0, !dbg !10252
  %y7 = getelementptr inbounds %struct.input_mt_pos, %struct.input_mt_pos* %arrayidx6, i32 0, i32 1, !dbg !10254
  store i16 %11, i16* %y7, align 2, !dbg !10255
  %13 = load %struct.alps_fields*, %struct.alps_fields** %f, align 8, !dbg !10256
  %pressure = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %13, i32 0, i32 3, !dbg !10257
  %14 = load i32, i32* %pressure, align 4, !dbg !10257
  %cmp8 = icmp sgt i32 %14, 0, !dbg !10258
  %15 = zext i1 %cmp8 to i64, !dbg !10256
  %cond = select i1 %cmp8, i32 1, i32 0, !dbg !10256
  store i32 %cond, i32* %fingers.addr, align 4, !dbg !10259
  %16 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !10260
  %second_touch = getelementptr inbounds %struct.alps_data, %struct.alps_data* %16, i32 0, i32 26, !dbg !10261
  store i32 -1, i32* %second_touch, align 8, !dbg !10262
  br label %if.end, !dbg !10263

if.end:                                           ; preds = %if.then, %entry
  %17 = load i32, i32* %fingers.addr, align 4, !dbg !10264
  %cmp9 = icmp sge i32 %17, 1, !dbg !10266
  br i1 %cmp9, label %if.then10, label %if.end18, !dbg !10267

if.then10:                                        ; preds = %if.end
  %18 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !10268
  %19 = load %struct.alps_fields*, %struct.alps_fields** %f, align 8, !dbg !10269
  %mt11 = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %19, i32 0, i32 5, !dbg !10270
  %arrayidx12 = getelementptr [4 x %struct.input_mt_pos], [4 x %struct.input_mt_pos]* %mt11, i64 0, i64 0, !dbg !10269
  %x13 = getelementptr inbounds %struct.input_mt_pos, %struct.input_mt_pos* %arrayidx12, i32 0, i32 0, !dbg !10271
  %20 = load i16, i16* %x13, align 4, !dbg !10271
  %conv = sext i16 %20 to i32, !dbg !10269
  %21 = load %struct.alps_fields*, %struct.alps_fields** %f, align 8, !dbg !10272
  %mt14 = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %21, i32 0, i32 5, !dbg !10273
  %arrayidx15 = getelementptr [4 x %struct.input_mt_pos], [4 x %struct.input_mt_pos]* %mt14, i64 0, i64 0, !dbg !10272
  %y16 = getelementptr inbounds %struct.input_mt_pos, %struct.input_mt_pos* %arrayidx15, i32 0, i32 1, !dbg !10274
  %22 = load i16, i16* %y16, align 2, !dbg !10274
  %conv17 = sext i16 %22 to i32, !dbg !10272
  call void @alps_set_slot(%struct.input_dev* %18, i32 0, i32 %conv, i32 %conv17) #10, !dbg !10275
  br label %if.end18, !dbg !10275

if.end18:                                         ; preds = %if.then10, %if.end
  %23 = load i32, i32* %fingers.addr, align 4, !dbg !10276
  %cmp19 = icmp sge i32 %23, 2, !dbg !10278
  br i1 %cmp19, label %if.then21, label %if.end30, !dbg !10279

if.then21:                                        ; preds = %if.end18
  %24 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !10280
  %25 = load %struct.alps_fields*, %struct.alps_fields** %f, align 8, !dbg !10281
  %mt22 = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %25, i32 0, i32 5, !dbg !10282
  %arrayidx23 = getelementptr [4 x %struct.input_mt_pos], [4 x %struct.input_mt_pos]* %mt22, i64 0, i64 1, !dbg !10281
  %x24 = getelementptr inbounds %struct.input_mt_pos, %struct.input_mt_pos* %arrayidx23, i32 0, i32 0, !dbg !10283
  %26 = load i16, i16* %x24, align 4, !dbg !10283
  %conv25 = sext i16 %26 to i32, !dbg !10281
  %27 = load %struct.alps_fields*, %struct.alps_fields** %f, align 8, !dbg !10284
  %mt26 = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %27, i32 0, i32 5, !dbg !10285
  %arrayidx27 = getelementptr [4 x %struct.input_mt_pos], [4 x %struct.input_mt_pos]* %mt26, i64 0, i64 1, !dbg !10284
  %y28 = getelementptr inbounds %struct.input_mt_pos, %struct.input_mt_pos* %arrayidx27, i32 0, i32 1, !dbg !10286
  %28 = load i16, i16* %y28, align 2, !dbg !10286
  %conv29 = sext i16 %28 to i32, !dbg !10284
  call void @alps_set_slot(%struct.input_dev* %24, i32 1, i32 %conv25, i32 %conv29) #10, !dbg !10287
  br label %if.end30, !dbg !10287

if.end30:                                         ; preds = %if.then21, %if.end18
  %29 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !10288
  call void @input_mt_sync_frame(%struct.input_dev* %29) #10, !dbg !10289
  %30 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !10290
  %31 = load i32, i32* %fingers.addr, align 4, !dbg !10291
  call void @input_mt_report_finger_count(%struct.input_dev* %30, i32 %31) #10, !dbg !10292
  %32 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !10293
  %33 = load %struct.alps_fields*, %struct.alps_fields** %f, align 8, !dbg !10294
  %left = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %33, i32 0, i32 6, !dbg !10295
  %bf.load = load i8, i8* %left, align 4, !dbg !10295
  %bf.lshr = lshr i8 %bf.load, 2, !dbg !10295
  %bf.clear = and i8 %bf.lshr, 1, !dbg !10295
  %bf.cast = zext i8 %bf.clear to i32, !dbg !10295
  call void @input_report_key(%struct.input_dev* %32, i32 272, i32 %bf.cast) #10, !dbg !10296
  %34 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !10297
  %35 = load %struct.alps_fields*, %struct.alps_fields** %f, align 8, !dbg !10298
  %right = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %35, i32 0, i32 6, !dbg !10299
  %bf.load31 = load i8, i8* %right, align 4, !dbg !10299
  %bf.lshr32 = lshr i8 %bf.load31, 3, !dbg !10299
  %bf.clear33 = and i8 %bf.lshr32, 1, !dbg !10299
  %bf.cast34 = zext i8 %bf.clear33 to i32, !dbg !10299
  call void @input_report_key(%struct.input_dev* %34, i32 273, i32 %bf.cast34) #10, !dbg !10300
  %36 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !10301
  %37 = load %struct.alps_fields*, %struct.alps_fields** %f, align 8, !dbg !10302
  %middle = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %37, i32 0, i32 6, !dbg !10303
  %bf.load35 = load i8, i8* %middle, align 4, !dbg !10303
  %bf.lshr36 = lshr i8 %bf.load35, 4, !dbg !10303
  %bf.clear37 = and i8 %bf.lshr36, 1, !dbg !10303
  %bf.cast38 = zext i8 %bf.clear37 to i32, !dbg !10303
  call void @input_report_key(%struct.input_dev* %36, i32 274, i32 %bf.cast38) #10, !dbg !10304
  %38 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !10305
  %39 = load %struct.alps_fields*, %struct.alps_fields** %f, align 8, !dbg !10306
  %pressure39 = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %39, i32 0, i32 3, !dbg !10307
  %40 = load i32, i32* %pressure39, align 4, !dbg !10307
  call void @input_report_abs(%struct.input_dev* %38, i32 24, i32 %40) #10, !dbg !10308
  %41 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !10309
  call void @input_sync(%struct.input_dev* %41) #10, !dbg !10310
  ret void, !dbg !10311
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @alps_get_bitmap_points(i32 %map, %struct.alps_bitmap_point* %low, %struct.alps_bitmap_point* %high, i32* %fingers) #0 !dbg !10312 {
entry:
  %map.addr = alloca i32, align 4
  %low.addr = alloca %struct.alps_bitmap_point*, align 8
  %high.addr = alloca %struct.alps_bitmap_point*, align 8
  %fingers.addr = alloca i32*, align 8
  %point = alloca %struct.alps_bitmap_point*, align 8
  %i = alloca i32, align 4
  %bit = alloca i32, align 4
  %prev_bit = alloca i32, align 4
  store i32 %map, i32* %map.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %map.addr, metadata !10316, metadata !DIExpression()), !dbg !10317
  store %struct.alps_bitmap_point* %low, %struct.alps_bitmap_point** %low.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.alps_bitmap_point** %low.addr, metadata !10318, metadata !DIExpression()), !dbg !10319
  store %struct.alps_bitmap_point* %high, %struct.alps_bitmap_point** %high.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.alps_bitmap_point** %high.addr, metadata !10320, metadata !DIExpression()), !dbg !10321
  store i32* %fingers, i32** %fingers.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %fingers.addr, metadata !10322, metadata !DIExpression()), !dbg !10323
  call void @llvm.dbg.declare(metadata %struct.alps_bitmap_point** %point, metadata !10324, metadata !DIExpression()), !dbg !10325
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10326, metadata !DIExpression()), !dbg !10327
  call void @llvm.dbg.declare(metadata i32* %bit, metadata !10328, metadata !DIExpression()), !dbg !10329
  call void @llvm.dbg.declare(metadata i32* %prev_bit, metadata !10330, metadata !DIExpression()), !dbg !10331
  store i32 0, i32* %prev_bit, align 4, !dbg !10331
  %0 = load %struct.alps_bitmap_point*, %struct.alps_bitmap_point** %low.addr, align 8, !dbg !10332
  store %struct.alps_bitmap_point* %0, %struct.alps_bitmap_point** %point, align 8, !dbg !10333
  store i32 0, i32* %i, align 4, !dbg !10334
  br label %for.cond, !dbg !10336

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %map.addr, align 4, !dbg !10337
  %cmp = icmp ne i32 %1, 0, !dbg !10339
  br i1 %cmp, label %for.body, label %for.end, !dbg !10340

for.body:                                         ; preds = %for.cond
  %2 = load i32, i32* %map.addr, align 4, !dbg !10341
  %and = and i32 %2, 1, !dbg !10343
  store i32 %and, i32* %bit, align 4, !dbg !10344
  %3 = load i32, i32* %bit, align 4, !dbg !10345
  %tobool = icmp ne i32 %3, 0, !dbg !10345
  br i1 %tobool, label %if.then, label %if.else, !dbg !10347

if.then:                                          ; preds = %for.body
  %4 = load i32, i32* %prev_bit, align 4, !dbg !10348
  %tobool1 = icmp ne i32 %4, 0, !dbg !10348
  br i1 %tobool1, label %if.end, label %if.then2, !dbg !10351

if.then2:                                         ; preds = %if.then
  %5 = load i32, i32* %i, align 4, !dbg !10352
  %6 = load %struct.alps_bitmap_point*, %struct.alps_bitmap_point** %point, align 8, !dbg !10354
  %start_bit = getelementptr inbounds %struct.alps_bitmap_point, %struct.alps_bitmap_point* %6, i32 0, i32 0, !dbg !10355
  store i32 %5, i32* %start_bit, align 4, !dbg !10356
  %7 = load %struct.alps_bitmap_point*, %struct.alps_bitmap_point** %point, align 8, !dbg !10357
  %num_bits = getelementptr inbounds %struct.alps_bitmap_point, %struct.alps_bitmap_point* %7, i32 0, i32 1, !dbg !10358
  store i32 0, i32* %num_bits, align 4, !dbg !10359
  %8 = load i32*, i32** %fingers.addr, align 8, !dbg !10360
  %9 = load i32, i32* %8, align 4, !dbg !10361
  %inc = add i32 %9, 1, !dbg !10361
  store i32 %inc, i32* %8, align 4, !dbg !10361
  br label %if.end, !dbg !10362

if.end:                                           ; preds = %if.then2, %if.then
  %10 = load %struct.alps_bitmap_point*, %struct.alps_bitmap_point** %point, align 8, !dbg !10363
  %num_bits3 = getelementptr inbounds %struct.alps_bitmap_point, %struct.alps_bitmap_point* %10, i32 0, i32 1, !dbg !10364
  %11 = load i32, i32* %num_bits3, align 4, !dbg !10365
  %inc4 = add i32 %11, 1, !dbg !10365
  store i32 %inc4, i32* %num_bits3, align 4, !dbg !10365
  br label %if.end8, !dbg !10366

if.else:                                          ; preds = %for.body
  %12 = load i32, i32* %prev_bit, align 4, !dbg !10367
  %tobool5 = icmp ne i32 %12, 0, !dbg !10367
  br i1 %tobool5, label %if.then6, label %if.end7, !dbg !10370

if.then6:                                         ; preds = %if.else
  %13 = load %struct.alps_bitmap_point*, %struct.alps_bitmap_point** %high.addr, align 8, !dbg !10371
  store %struct.alps_bitmap_point* %13, %struct.alps_bitmap_point** %point, align 8, !dbg !10372
  br label %if.end7, !dbg !10373

if.end7:                                          ; preds = %if.then6, %if.else
  br label %if.end8

if.end8:                                          ; preds = %if.end7, %if.end
  %14 = load i32, i32* %bit, align 4, !dbg !10374
  store i32 %14, i32* %prev_bit, align 4, !dbg !10375
  br label %for.inc, !dbg !10376

for.inc:                                          ; preds = %if.end8
  %15 = load i32, i32* %i, align 4, !dbg !10377
  %inc9 = add i32 %15, 1, !dbg !10377
  store i32 %inc9, i32* %i, align 4, !dbg !10377
  %16 = load i32, i32* %map.addr, align 4, !dbg !10378
  %shr = lshr i32 %16, 1, !dbg !10378
  store i32 %shr, i32* %map.addr, align 4, !dbg !10378
  br label %for.cond, !dbg !10379, !llvm.loop !10380

for.end:                                          ; preds = %for.cond
  ret void, !dbg !10382
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @alps_set_slot(%struct.input_dev* %dev, i32 %slot, i32 %x, i32 %y) #0 !dbg !10383 {
entry:
  %dev.addr = alloca %struct.input_dev*, align 8
  %slot.addr = alloca i32, align 4
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  store %struct.input_dev* %dev, %struct.input_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.input_dev** %dev.addr, metadata !10386, metadata !DIExpression()), !dbg !10387
  store i32 %slot, i32* %slot.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %slot.addr, metadata !10388, metadata !DIExpression()), !dbg !10389
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !10390, metadata !DIExpression()), !dbg !10391
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !10392, metadata !DIExpression()), !dbg !10393
  %0 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !10394
  %1 = load i32, i32* %slot.addr, align 4, !dbg !10395
  call void @input_mt_slot(%struct.input_dev* %0, i32 %1) #10, !dbg !10396
  %2 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !10397
  %call = call zeroext i1 @input_mt_report_slot_state(%struct.input_dev* %2, i32 0, i1 zeroext true) #10, !dbg !10398
  %3 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !10399
  %4 = load i32, i32* %x.addr, align 4, !dbg !10400
  call void @input_report_abs(%struct.input_dev* %3, i32 53, i32 %4) #10, !dbg !10401
  %5 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !10402
  %6 = load i32, i32* %y.addr, align 4, !dbg !10403
  call void @input_report_abs(%struct.input_dev* %5, i32 54, i32 %6) #10, !dbg !10404
  ret void, !dbg !10405
}

; Function Attrs: noredzone
declare dso_local void @input_mt_sync_frame(%struct.input_dev*) #2

; Function Attrs: noredzone
declare dso_local void @input_mt_report_finger_count(%struct.input_dev*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @input_mt_slot(%struct.input_dev* %dev, i32 %slot) #0 !dbg !10406 {
entry:
  %dev.addr = alloca %struct.input_dev*, align 8
  %slot.addr = alloca i32, align 4
  store %struct.input_dev* %dev, %struct.input_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.input_dev** %dev.addr, metadata !10409, metadata !DIExpression()), !dbg !10410
  store i32 %slot, i32* %slot.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %slot.addr, metadata !10411, metadata !DIExpression()), !dbg !10412
  %0 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !10413
  %1 = load i32, i32* %slot.addr, align 4, !dbg !10414
  call void @input_event(%struct.input_dev* %0, i32 3, i32 47, i32 %1) #10, !dbg !10415
  ret void, !dbg !10416
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @input_mt_report_slot_state(%struct.input_dev*, i32, i1 zeroext) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @alps_absolute_mode_v6(%struct.psmouse* %psmouse) #0 !dbg !10417 {
entry:
  %retval = alloca i32, align 4
  %psmouse.addr = alloca %struct.psmouse*, align 8
  %reg_val = alloca i16, align 2
  %ret = alloca i32, align 4
  store %struct.psmouse* %psmouse, %struct.psmouse** %psmouse.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.psmouse** %psmouse.addr, metadata !10418, metadata !DIExpression()), !dbg !10419
  call void @llvm.dbg.declare(metadata i16* %reg_val, metadata !10420, metadata !DIExpression()), !dbg !10421
  store i16 385, i16* %reg_val, align 2, !dbg !10421
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !10422, metadata !DIExpression()), !dbg !10423
  %0 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !10424
  %call = call i32 @alps_monitor_mode(%struct.psmouse* %0, i1 zeroext true) #10, !dbg !10426
  %tobool = icmp ne i32 %call, 0, !dbg !10426
  br i1 %tobool, label %if.then, label %if.end, !dbg !10427

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !10428
  br label %return, !dbg !10428

if.end:                                           ; preds = %entry
  %1 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !10429
  %2 = load i16, i16* %reg_val, align 2, !dbg !10430
  %call1 = call i32 @alps_monitor_mode_write_reg(%struct.psmouse* %1, i16 zeroext 0, i16 zeroext %2) #10, !dbg !10431
  store i32 %call1, i32* %ret, align 4, !dbg !10432
  %3 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !10433
  %call2 = call i32 @alps_monitor_mode(%struct.psmouse* %3, i1 zeroext false) #10, !dbg !10435
  %tobool3 = icmp ne i32 %call2, 0, !dbg !10435
  br i1 %tobool3, label %if.then4, label %if.end5, !dbg !10436

if.then4:                                         ; preds = %if.end
  store i32 -1, i32* %ret, align 4, !dbg !10437
  br label %if.end5, !dbg !10438

if.end5:                                          ; preds = %if.then4, %if.end
  %4 = load i32, i32* %ret, align 4, !dbg !10439
  store i32 %4, i32* %retval, align 4, !dbg !10440
  br label %return, !dbg !10440

return:                                           ; preds = %if.end5, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !10441
  ret i32 %5, !dbg !10441
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @alps_monitor_mode(%struct.psmouse* %psmouse, i1 zeroext %enable) #0 !dbg !10442 {
entry:
  %retval = alloca i32, align 4
  %psmouse.addr = alloca %struct.psmouse*, align 8
  %enable.addr = alloca i8, align 1
  %ps2dev = alloca %struct.ps2dev*, align 8
  store %struct.psmouse* %psmouse, %struct.psmouse** %psmouse.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.psmouse** %psmouse.addr, metadata !10443, metadata !DIExpression()), !dbg !10444
  %frombool = zext i1 %enable to i8
  store i8 %frombool, i8* %enable.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %enable.addr, metadata !10445, metadata !DIExpression()), !dbg !10446
  call void @llvm.dbg.declare(metadata %struct.ps2dev** %ps2dev, metadata !10447, metadata !DIExpression()), !dbg !10448
  %0 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !10449
  %ps2dev1 = getelementptr inbounds %struct.psmouse, %struct.psmouse* %0, i32 0, i32 2, !dbg !10450
  store %struct.ps2dev* %ps2dev1, %struct.ps2dev** %ps2dev, align 8, !dbg !10448
  %1 = load i8, i8* %enable.addr, align 1, !dbg !10451
  %tobool = trunc i8 %1 to i1, !dbg !10451
  br i1 %tobool, label %if.then, label %if.else, !dbg !10453

if.then:                                          ; preds = %entry
  %2 = load %struct.ps2dev*, %struct.ps2dev** %ps2dev, align 8, !dbg !10454
  %call = call i32 @ps2_command(%struct.ps2dev* %2, i8* null, i32 236) #10, !dbg !10457
  %tobool2 = icmp ne i32 %call, 0, !dbg !10457
  br i1 %tobool2, label %if.then23, label %lor.lhs.false, !dbg !10458

lor.lhs.false:                                    ; preds = %if.then
  %3 = load %struct.ps2dev*, %struct.ps2dev** %ps2dev, align 8, !dbg !10459
  %call3 = call i32 @ps2_command(%struct.ps2dev* %3, i8* null, i32 1001) #10, !dbg !10460
  %tobool4 = icmp ne i32 %call3, 0, !dbg !10460
  br i1 %tobool4, label %if.then23, label %lor.lhs.false5, !dbg !10461

lor.lhs.false5:                                   ; preds = %lor.lhs.false
  %4 = load %struct.ps2dev*, %struct.ps2dev** %ps2dev, align 8, !dbg !10462
  %call6 = call i32 @ps2_command(%struct.ps2dev* %4, i8* null, i32 245) #10, !dbg !10463
  %tobool7 = icmp ne i32 %call6, 0, !dbg !10463
  br i1 %tobool7, label %if.then23, label %lor.lhs.false8, !dbg !10464

lor.lhs.false8:                                   ; preds = %lor.lhs.false5
  %5 = load %struct.ps2dev*, %struct.ps2dev** %ps2dev, align 8, !dbg !10465
  %call9 = call i32 @ps2_command(%struct.ps2dev* %5, i8* null, i32 245) #10, !dbg !10466
  %tobool10 = icmp ne i32 %call9, 0, !dbg !10466
  br i1 %tobool10, label %if.then23, label %lor.lhs.false11, !dbg !10467

lor.lhs.false11:                                  ; preds = %lor.lhs.false8
  %6 = load %struct.ps2dev*, %struct.ps2dev** %ps2dev, align 8, !dbg !10468
  %call12 = call i32 @ps2_command(%struct.ps2dev* %6, i8* null, i32 231) #10, !dbg !10469
  %tobool13 = icmp ne i32 %call12, 0, !dbg !10469
  br i1 %tobool13, label %if.then23, label %lor.lhs.false14, !dbg !10470

lor.lhs.false14:                                  ; preds = %lor.lhs.false11
  %7 = load %struct.ps2dev*, %struct.ps2dev** %ps2dev, align 8, !dbg !10471
  %call15 = call i32 @ps2_command(%struct.ps2dev* %7, i8* null, i32 230) #10, !dbg !10472
  %tobool16 = icmp ne i32 %call15, 0, !dbg !10472
  br i1 %tobool16, label %if.then23, label %lor.lhs.false17, !dbg !10473

lor.lhs.false17:                                  ; preds = %lor.lhs.false14
  %8 = load %struct.ps2dev*, %struct.ps2dev** %ps2dev, align 8, !dbg !10474
  %call18 = call i32 @ps2_command(%struct.ps2dev* %8, i8* null, i32 231) #10, !dbg !10475
  %tobool19 = icmp ne i32 %call18, 0, !dbg !10475
  br i1 %tobool19, label %if.then23, label %lor.lhs.false20, !dbg !10476

lor.lhs.false20:                                  ; preds = %lor.lhs.false17
  %9 = load %struct.ps2dev*, %struct.ps2dev** %ps2dev, align 8, !dbg !10477
  %call21 = call i32 @ps2_command(%struct.ps2dev* %9, i8* null, i32 1001) #10, !dbg !10478
  %tobool22 = icmp ne i32 %call21, 0, !dbg !10478
  br i1 %tobool22, label %if.then23, label %if.end, !dbg !10479

if.then23:                                        ; preds = %lor.lhs.false20, %lor.lhs.false17, %lor.lhs.false14, %lor.lhs.false11, %lor.lhs.false8, %lor.lhs.false5, %lor.lhs.false, %if.then
  store i32 -1, i32* %retval, align 4, !dbg !10480
  br label %return, !dbg !10480

if.end:                                           ; preds = %lor.lhs.false20
  br label %if.end28, !dbg !10481

if.else:                                          ; preds = %entry
  %10 = load %struct.ps2dev*, %struct.ps2dev** %ps2dev, align 8, !dbg !10482
  %call24 = call i32 @ps2_command(%struct.ps2dev* %10, i8* null, i32 236) #10, !dbg !10485
  %tobool25 = icmp ne i32 %call24, 0, !dbg !10485
  br i1 %tobool25, label %if.then26, label %if.end27, !dbg !10486

if.then26:                                        ; preds = %if.else
  store i32 -1, i32* %retval, align 4, !dbg !10487
  br label %return, !dbg !10487

if.end27:                                         ; preds = %if.else
  br label %if.end28

if.end28:                                         ; preds = %if.end27, %if.end
  store i32 0, i32* %retval, align 4, !dbg !10488
  br label %return, !dbg !10488

return:                                           ; preds = %if.end28, %if.then26, %if.then23
  %11 = load i32, i32* %retval, align 4, !dbg !10489
  ret i32 %11, !dbg !10489
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @alps_monitor_mode_write_reg(%struct.psmouse* %psmouse, i16 zeroext %addr, i16 zeroext %value) #0 !dbg !10490 {
entry:
  %retval = alloca i32, align 4
  %psmouse.addr = alloca %struct.psmouse*, align 8
  %addr.addr = alloca i16, align 2
  %value.addr = alloca i16, align 2
  %ps2dev = alloca %struct.ps2dev*, align 8
  store %struct.psmouse* %psmouse, %struct.psmouse** %psmouse.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.psmouse** %psmouse.addr, metadata !10493, metadata !DIExpression()), !dbg !10494
  store i16 %addr, i16* %addr.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %addr.addr, metadata !10495, metadata !DIExpression()), !dbg !10496
  store i16 %value, i16* %value.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %value.addr, metadata !10497, metadata !DIExpression()), !dbg !10498
  call void @llvm.dbg.declare(metadata %struct.ps2dev** %ps2dev, metadata !10499, metadata !DIExpression()), !dbg !10500
  %0 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !10501
  %ps2dev1 = getelementptr inbounds %struct.psmouse, %struct.psmouse* %0, i32 0, i32 2, !dbg !10502
  store %struct.ps2dev* %ps2dev1, %struct.ps2dev** %ps2dev, align 8, !dbg !10500
  %1 = load %struct.ps2dev*, %struct.ps2dev** %ps2dev, align 8, !dbg !10503
  %call = call i32 @ps2_command(%struct.ps2dev* %1, i8* null, i32 244) #10, !dbg !10505
  %tobool = icmp ne i32 %call, 0, !dbg !10505
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !10506

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !10507
  %call2 = call i32 @alps_monitor_mode_send_word(%struct.psmouse* %2, i16 zeroext 160) #10, !dbg !10508
  %tobool3 = icmp ne i32 %call2, 0, !dbg !10508
  br i1 %tobool3, label %if.then, label %lor.lhs.false4, !dbg !10509

lor.lhs.false4:                                   ; preds = %lor.lhs.false
  %3 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !10510
  %4 = load i16, i16* %addr.addr, align 2, !dbg !10511
  %call5 = call i32 @alps_monitor_mode_send_word(%struct.psmouse* %3, i16 zeroext %4) #10, !dbg !10512
  %tobool6 = icmp ne i32 %call5, 0, !dbg !10512
  br i1 %tobool6, label %if.then, label %lor.lhs.false7, !dbg !10513

lor.lhs.false7:                                   ; preds = %lor.lhs.false4
  %5 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !10514
  %6 = load i16, i16* %value.addr, align 2, !dbg !10515
  %call8 = call i32 @alps_monitor_mode_send_word(%struct.psmouse* %5, i16 zeroext %6) #10, !dbg !10516
  %tobool9 = icmp ne i32 %call8, 0, !dbg !10516
  br i1 %tobool9, label %if.then, label %lor.lhs.false10, !dbg !10517

lor.lhs.false10:                                  ; preds = %lor.lhs.false7
  %7 = load %struct.ps2dev*, %struct.ps2dev** %ps2dev, align 8, !dbg !10518
  %call11 = call i32 @ps2_command(%struct.ps2dev* %7, i8* null, i32 245) #10, !dbg !10519
  %tobool12 = icmp ne i32 %call11, 0, !dbg !10519
  br i1 %tobool12, label %if.then, label %if.end, !dbg !10520

if.then:                                          ; preds = %lor.lhs.false10, %lor.lhs.false7, %lor.lhs.false4, %lor.lhs.false, %entry
  store i32 -1, i32* %retval, align 4, !dbg !10521
  br label %return, !dbg !10521

if.end:                                           ; preds = %lor.lhs.false10
  store i32 0, i32* %retval, align 4, !dbg !10522
  br label %return, !dbg !10522

return:                                           ; preds = %if.end, %if.then
  %8 = load i32, i32* %retval, align 4, !dbg !10523
  ret i32 %8, !dbg !10523
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @alps_monitor_mode_send_word(%struct.psmouse* %psmouse, i16 zeroext %word) #0 !dbg !10524 {
entry:
  %retval = alloca i32, align 4
  %psmouse.addr = alloca %struct.psmouse*, align 8
  %word.addr = alloca i16, align 2
  %i = alloca i32, align 4
  %nibble = alloca i32, align 4
  store %struct.psmouse* %psmouse, %struct.psmouse** %psmouse.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.psmouse** %psmouse.addr, metadata !10527, metadata !DIExpression()), !dbg !10528
  store i16 %word, i16* %word.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %word.addr, metadata !10529, metadata !DIExpression()), !dbg !10530
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10531, metadata !DIExpression()), !dbg !10532
  call void @llvm.dbg.declare(metadata i32* %nibble, metadata !10533, metadata !DIExpression()), !dbg !10534
  store i32 0, i32* %i, align 4, !dbg !10535
  br label %for.cond, !dbg !10537

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !10538
  %cmp = icmp sle i32 %0, 8, !dbg !10540
  br i1 %cmp, label %for.body, label %for.end, !dbg !10541

for.body:                                         ; preds = %for.cond
  %1 = load i16, i16* %word.addr, align 2, !dbg !10542
  %conv = zext i16 %1 to i32, !dbg !10542
  %2 = load i32, i32* %i, align 4, !dbg !10544
  %shr = ashr i32 %conv, %2, !dbg !10545
  %and = and i32 %shr, 15, !dbg !10546
  store i32 %and, i32* %nibble, align 4, !dbg !10547
  %3 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !10548
  %4 = load i32, i32* %nibble, align 4, !dbg !10550
  %call = call i32 @alps_command_mode_send_nibble(%struct.psmouse* %3, i32 %4) #10, !dbg !10551
  %tobool = icmp ne i32 %call, 0, !dbg !10551
  br i1 %tobool, label %if.then, label %if.end, !dbg !10552

if.then:                                          ; preds = %for.body
  store i32 -1, i32* %retval, align 4, !dbg !10553
  br label %return, !dbg !10553

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !10554

for.inc:                                          ; preds = %if.end
  %5 = load i32, i32* %i, align 4, !dbg !10555
  %add = add i32 %5, 4, !dbg !10555
  store i32 %add, i32* %i, align 4, !dbg !10555
  br label %for.cond, !dbg !10556, !llvm.loop !10557

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !10559
  br label %return, !dbg !10559

return:                                           ; preds = %for.end, %if.then
  %6 = load i32, i32* %retval, align 4, !dbg !10560
  ret i32 %6, !dbg !10560
}

; Function Attrs: noredzone
declare dso_local void @psmouse_report_standard_buttons(%struct.input_dev*, i8 zeroext) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @alps_process_trackstick_packet_v7(%struct.psmouse* %psmouse) #0 !dbg !10561 {
entry:
  %psmouse.addr = alloca %struct.psmouse*, align 8
  %priv = alloca %struct.alps_data*, align 8
  %packet = alloca i8*, align 8
  %dev2 = alloca %struct.input_dev*, align 8
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %z = alloca i32, align 4
  store %struct.psmouse* %psmouse, %struct.psmouse** %psmouse.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.psmouse** %psmouse.addr, metadata !10562, metadata !DIExpression()), !dbg !10563
  call void @llvm.dbg.declare(metadata %struct.alps_data** %priv, metadata !10564, metadata !DIExpression()), !dbg !10565
  %0 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !10566
  %private = getelementptr inbounds %struct.psmouse, %struct.psmouse* %0, i32 0, i32 0, !dbg !10567
  %1 = load i8*, i8** %private, align 8, !dbg !10567
  %2 = bitcast i8* %1 to %struct.alps_data*, !dbg !10566
  store %struct.alps_data* %2, %struct.alps_data** %priv, align 8, !dbg !10565
  call void @llvm.dbg.declare(metadata i8** %packet, metadata !10568, metadata !DIExpression()), !dbg !10569
  %3 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !10570
  %packet1 = getelementptr inbounds %struct.psmouse, %struct.psmouse* %3, i32 0, i32 7, !dbg !10571
  %arraydecay = getelementptr inbounds [8 x i8], [8 x i8]* %packet1, i64 0, i64 0, !dbg !10570
  store i8* %arraydecay, i8** %packet, align 8, !dbg !10569
  call void @llvm.dbg.declare(metadata %struct.input_dev** %dev2, metadata !10572, metadata !DIExpression()), !dbg !10573
  %4 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !10574
  %dev22 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %4, i32 0, i32 1, !dbg !10575
  %5 = load %struct.input_dev*, %struct.input_dev** %dev22, align 8, !dbg !10575
  store %struct.input_dev* %5, %struct.input_dev** %dev2, align 8, !dbg !10573
  call void @llvm.dbg.declare(metadata i32* %x, metadata !10576, metadata !DIExpression()), !dbg !10577
  call void @llvm.dbg.declare(metadata i32* %y, metadata !10578, metadata !DIExpression()), !dbg !10579
  call void @llvm.dbg.declare(metadata i32* %z, metadata !10580, metadata !DIExpression()), !dbg !10581
  %6 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !10582
  %flags = getelementptr inbounds %struct.alps_data, %struct.alps_data* %6, i32 0, i32 13, !dbg !10584
  %7 = load i32, i32* %flags, align 8, !dbg !10584
  %and = and i32 %7, 2, !dbg !10585
  %tobool = icmp ne i32 %and, 0, !dbg !10585
  br i1 %tobool, label %if.end, label %if.then, !dbg !10586

if.then:                                          ; preds = %entry
  %8 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !10587
  %ps2dev = getelementptr inbounds %struct.psmouse, %struct.psmouse* %8, i32 0, i32 2, !dbg !10587
  %serio = getelementptr inbounds %struct.ps2dev, %struct.ps2dev* %ps2dev, i32 0, i32 0, !dbg !10587
  %9 = load %struct.serio*, %struct.serio** %serio, align 8, !dbg !10587
  %dev = getelementptr inbounds %struct.serio, %struct.serio* %9, i32 0, i32 18, !dbg !10587
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.24, i64 0, i64 0)) #11, !dbg !10587
  br label %return, !dbg !10589

if.end:                                           ; preds = %entry
  %10 = load i8*, i8** %packet, align 8, !dbg !10590
  %arrayidx = getelementptr i8, i8* %10, i64 2, !dbg !10590
  %11 = load i8, i8* %arrayidx, align 1, !dbg !10590
  %conv = zext i8 %11 to i32, !dbg !10590
  %and3 = and i32 %conv, 191, !dbg !10591
  %12 = load i8*, i8** %packet, align 8, !dbg !10592
  %arrayidx4 = getelementptr i8, i8* %12, i64 3, !dbg !10592
  %13 = load i8, i8* %arrayidx4, align 1, !dbg !10592
  %conv5 = zext i8 %13 to i32, !dbg !10592
  %and6 = and i32 %conv5, 16, !dbg !10593
  %shl = shl i32 %and6, 2, !dbg !10594
  %or = or i32 %and3, %shl, !dbg !10595
  store i32 %or, i32* %x, align 4, !dbg !10596
  %14 = load i8*, i8** %packet, align 8, !dbg !10597
  %arrayidx7 = getelementptr i8, i8* %14, i64 3, !dbg !10597
  %15 = load i8, i8* %arrayidx7, align 1, !dbg !10597
  %conv8 = zext i8 %15 to i32, !dbg !10597
  %and9 = and i32 %conv8, 7, !dbg !10598
  %16 = load i8*, i8** %packet, align 8, !dbg !10599
  %arrayidx10 = getelementptr i8, i8* %16, i64 4, !dbg !10599
  %17 = load i8, i8* %arrayidx10, align 1, !dbg !10599
  %conv11 = zext i8 %17 to i32, !dbg !10599
  %and12 = and i32 %conv11, 184, !dbg !10600
  %or13 = or i32 %and9, %and12, !dbg !10601
  %18 = load i8*, i8** %packet, align 8, !dbg !10602
  %arrayidx14 = getelementptr i8, i8* %18, i64 3, !dbg !10602
  %19 = load i8, i8* %arrayidx14, align 1, !dbg !10602
  %conv15 = zext i8 %19 to i32, !dbg !10602
  %and16 = and i32 %conv15, 32, !dbg !10603
  %shl17 = shl i32 %and16, 1, !dbg !10604
  %or18 = or i32 %or13, %shl17, !dbg !10605
  store i32 %or18, i32* %y, align 4, !dbg !10606
  %20 = load i8*, i8** %packet, align 8, !dbg !10607
  %arrayidx19 = getelementptr i8, i8* %20, i64 5, !dbg !10607
  %21 = load i8, i8* %arrayidx19, align 1, !dbg !10607
  %conv20 = zext i8 %21 to i32, !dbg !10607
  %and21 = and i32 %conv20, 63, !dbg !10608
  %22 = load i8*, i8** %packet, align 8, !dbg !10609
  %arrayidx22 = getelementptr i8, i8* %22, i64 3, !dbg !10609
  %23 = load i8, i8* %arrayidx22, align 1, !dbg !10609
  %conv23 = zext i8 %23 to i32, !dbg !10609
  %and24 = and i32 %conv23, 128, !dbg !10610
  %shr = ashr i32 %and24, 1, !dbg !10611
  %or25 = or i32 %and21, %shr, !dbg !10612
  store i32 %or25, i32* %z, align 4, !dbg !10613
  %24 = load %struct.input_dev*, %struct.input_dev** %dev2, align 8, !dbg !10614
  %25 = load i32, i32* %x, align 4, !dbg !10615
  %conv26 = trunc i32 %25 to i8, !dbg !10616
  %conv27 = sext i8 %conv26 to i32, !dbg !10616
  call void @input_report_rel(%struct.input_dev* %24, i32 0, i32 %conv27) #10, !dbg !10617
  %26 = load %struct.input_dev*, %struct.input_dev** %dev2, align 8, !dbg !10618
  %27 = load i32, i32* %y, align 4, !dbg !10619
  %conv28 = trunc i32 %27 to i8, !dbg !10620
  %conv29 = sext i8 %conv28 to i32, !dbg !10621
  %sub = sub i32 0, %conv29, !dbg !10622
  call void @input_report_rel(%struct.input_dev* %26, i32 1, i32 %sub) #10, !dbg !10623
  %28 = load %struct.input_dev*, %struct.input_dev** %dev2, align 8, !dbg !10624
  %29 = load i32, i32* %z, align 4, !dbg !10625
  call void @input_report_abs(%struct.input_dev* %28, i32 24, i32 %29) #10, !dbg !10626
  %30 = load %struct.input_dev*, %struct.input_dev** %dev2, align 8, !dbg !10627
  %31 = load i8*, i8** %packet, align 8, !dbg !10628
  %arrayidx30 = getelementptr i8, i8* %31, i64 1, !dbg !10628
  %32 = load i8, i8* %arrayidx30, align 1, !dbg !10628
  call void @psmouse_report_standard_buttons(%struct.input_dev* %30, i8 zeroext %32) #10, !dbg !10629
  %33 = load %struct.input_dev*, %struct.input_dev** %dev2, align 8, !dbg !10630
  call void @input_sync(%struct.input_dev* %33) #10, !dbg !10631
  br label %return, !dbg !10632

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !10632
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @alps_process_touchpad_packet_v7(%struct.psmouse* %psmouse) #0 !dbg !10633 {
entry:
  %psmouse.addr = alloca %struct.psmouse*, align 8
  %priv = alloca %struct.alps_data*, align 8
  %dev = alloca %struct.input_dev*, align 8
  %f = alloca %struct.alps_fields*, align 8
  store %struct.psmouse* %psmouse, %struct.psmouse** %psmouse.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.psmouse** %psmouse.addr, metadata !10634, metadata !DIExpression()), !dbg !10635
  call void @llvm.dbg.declare(metadata %struct.alps_data** %priv, metadata !10636, metadata !DIExpression()), !dbg !10637
  %0 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !10638
  %private = getelementptr inbounds %struct.psmouse, %struct.psmouse* %0, i32 0, i32 0, !dbg !10639
  %1 = load i8*, i8** %private, align 8, !dbg !10639
  %2 = bitcast i8* %1 to %struct.alps_data*, !dbg !10638
  store %struct.alps_data* %2, %struct.alps_data** %priv, align 8, !dbg !10637
  call void @llvm.dbg.declare(metadata %struct.input_dev** %dev, metadata !10640, metadata !DIExpression()), !dbg !10641
  %3 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !10642
  %dev1 = getelementptr inbounds %struct.psmouse, %struct.psmouse* %3, i32 0, i32 1, !dbg !10643
  %4 = load %struct.input_dev*, %struct.input_dev** %dev1, align 8, !dbg !10643
  store %struct.input_dev* %4, %struct.input_dev** %dev, align 8, !dbg !10641
  call void @llvm.dbg.declare(metadata %struct.alps_fields** %f, metadata !10644, metadata !DIExpression()), !dbg !10645
  %5 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !10646
  %f2 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %5, i32 0, i32 28, !dbg !10647
  store %struct.alps_fields* %f2, %struct.alps_fields** %f, align 8, !dbg !10645
  %6 = load %struct.alps_fields*, %struct.alps_fields** %f, align 8, !dbg !10648
  %7 = bitcast %struct.alps_fields* %6 to i8*, !dbg !10649
  call void @llvm.memset.p0i8.i64(i8* align 4 %7, i8 0, i64 40, i1 false), !dbg !10649
  %8 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !10650
  %decode_fields = getelementptr inbounds %struct.alps_data, %struct.alps_data* %8, i32 0, i32 22, !dbg !10652
  %9 = load i32 (%struct.alps_fields*, i8*, %struct.psmouse*)*, i32 (%struct.alps_fields*, i8*, %struct.psmouse*)** %decode_fields, align 8, !dbg !10652
  %10 = load %struct.alps_fields*, %struct.alps_fields** %f, align 8, !dbg !10653
  %11 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !10654
  %packet = getelementptr inbounds %struct.psmouse, %struct.psmouse* %11, i32 0, i32 7, !dbg !10655
  %arraydecay = getelementptr inbounds [8 x i8], [8 x i8]* %packet, i64 0, i64 0, !dbg !10654
  %12 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !10656
  %call = call i32 %9(%struct.alps_fields* %10, i8* %arraydecay, %struct.psmouse* %12) #10, !dbg !10650
  %tobool = icmp ne i32 %call, 0, !dbg !10650
  br i1 %tobool, label %if.then, label %if.end, !dbg !10657

if.then:                                          ; preds = %entry
  br label %return, !dbg !10658

if.end:                                           ; preds = %entry
  %13 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !10659
  %14 = load %struct.alps_fields*, %struct.alps_fields** %f, align 8, !dbg !10660
  %mt = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %14, i32 0, i32 5, !dbg !10661
  %arraydecay3 = getelementptr inbounds [4 x %struct.input_mt_pos], [4 x %struct.input_mt_pos]* %mt, i64 0, i64 0, !dbg !10660
  %call4 = call i32 @alps_get_mt_count(%struct.input_mt_pos* %arraydecay3) #10, !dbg !10662
  call void @alps_report_mt_data(%struct.psmouse* %13, i32 %call4) #10, !dbg !10663
  %15 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !10664
  %16 = load %struct.alps_fields*, %struct.alps_fields** %f, align 8, !dbg !10665
  %fingers = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %16, i32 0, i32 2, !dbg !10666
  %17 = load i32, i32* %fingers, align 4, !dbg !10666
  call void @input_mt_report_finger_count(%struct.input_dev* %15, i32 %17) #10, !dbg !10667
  %18 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !10668
  %19 = load %struct.alps_fields*, %struct.alps_fields** %f, align 8, !dbg !10669
  %left = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %19, i32 0, i32 6, !dbg !10670
  %bf.load = load i8, i8* %left, align 4, !dbg !10670
  %bf.lshr = lshr i8 %bf.load, 2, !dbg !10670
  %bf.clear = and i8 %bf.lshr, 1, !dbg !10670
  %bf.cast = zext i8 %bf.clear to i32, !dbg !10670
  call void @input_report_key(%struct.input_dev* %18, i32 272, i32 %bf.cast) #10, !dbg !10671
  %20 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !10672
  %21 = load %struct.alps_fields*, %struct.alps_fields** %f, align 8, !dbg !10673
  %right = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %21, i32 0, i32 6, !dbg !10674
  %bf.load5 = load i8, i8* %right, align 4, !dbg !10674
  %bf.lshr6 = lshr i8 %bf.load5, 3, !dbg !10674
  %bf.clear7 = and i8 %bf.lshr6, 1, !dbg !10674
  %bf.cast8 = zext i8 %bf.clear7 to i32, !dbg !10674
  call void @input_report_key(%struct.input_dev* %20, i32 273, i32 %bf.cast8) #10, !dbg !10675
  %22 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !10676
  %23 = load %struct.alps_fields*, %struct.alps_fields** %f, align 8, !dbg !10677
  %middle = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %23, i32 0, i32 6, !dbg !10678
  %bf.load9 = load i8, i8* %middle, align 4, !dbg !10678
  %bf.lshr10 = lshr i8 %bf.load9, 4, !dbg !10678
  %bf.clear11 = and i8 %bf.lshr10, 1, !dbg !10678
  %bf.cast12 = zext i8 %bf.clear11 to i32, !dbg !10678
  call void @input_report_key(%struct.input_dev* %22, i32 274, i32 %bf.cast12) #10, !dbg !10679
  %24 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !10680
  call void @input_sync(%struct.input_dev* %24) #10, !dbg !10681
  br label %return, !dbg !10682

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !10682
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @alps_report_mt_data(%struct.psmouse* %psmouse, i32 %n) #0 !dbg !10683 {
entry:
  %psmouse.addr = alloca %struct.psmouse*, align 8
  %n.addr = alloca i32, align 4
  %priv = alloca %struct.alps_data*, align 8
  %dev = alloca %struct.input_dev*, align 8
  %f = alloca %struct.alps_fields*, align 8
  %i = alloca i32, align 4
  %slot = alloca [4 x i32], align 16
  store %struct.psmouse* %psmouse, %struct.psmouse** %psmouse.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.psmouse** %psmouse.addr, metadata !10684, metadata !DIExpression()), !dbg !10685
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !10686, metadata !DIExpression()), !dbg !10687
  call void @llvm.dbg.declare(metadata %struct.alps_data** %priv, metadata !10688, metadata !DIExpression()), !dbg !10689
  %0 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !10690
  %private = getelementptr inbounds %struct.psmouse, %struct.psmouse* %0, i32 0, i32 0, !dbg !10691
  %1 = load i8*, i8** %private, align 8, !dbg !10691
  %2 = bitcast i8* %1 to %struct.alps_data*, !dbg !10690
  store %struct.alps_data* %2, %struct.alps_data** %priv, align 8, !dbg !10689
  call void @llvm.dbg.declare(metadata %struct.input_dev** %dev, metadata !10692, metadata !DIExpression()), !dbg !10693
  %3 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !10694
  %dev1 = getelementptr inbounds %struct.psmouse, %struct.psmouse* %3, i32 0, i32 1, !dbg !10695
  %4 = load %struct.input_dev*, %struct.input_dev** %dev1, align 8, !dbg !10695
  store %struct.input_dev* %4, %struct.input_dev** %dev, align 8, !dbg !10693
  call void @llvm.dbg.declare(metadata %struct.alps_fields** %f, metadata !10696, metadata !DIExpression()), !dbg !10697
  %5 = load %struct.alps_data*, %struct.alps_data** %priv, align 8, !dbg !10698
  %f2 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %5, i32 0, i32 28, !dbg !10699
  store %struct.alps_fields* %f2, %struct.alps_fields** %f, align 8, !dbg !10697
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10700, metadata !DIExpression()), !dbg !10701
  call void @llvm.dbg.declare(metadata [4 x i32]* %slot, metadata !10702, metadata !DIExpression()), !dbg !10704
  %6 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !10705
  %arraydecay = getelementptr inbounds [4 x i32], [4 x i32]* %slot, i64 0, i64 0, !dbg !10706
  %7 = load %struct.alps_fields*, %struct.alps_fields** %f, align 8, !dbg !10707
  %mt = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %7, i32 0, i32 5, !dbg !10708
  %arraydecay3 = getelementptr inbounds [4 x %struct.input_mt_pos], [4 x %struct.input_mt_pos]* %mt, i64 0, i64 0, !dbg !10707
  %8 = load i32, i32* %n.addr, align 4, !dbg !10709
  %call = call i32 @input_mt_assign_slots(%struct.input_dev* %6, i32* %arraydecay, %struct.input_mt_pos* %arraydecay3, i32 %8, i32 0) #10, !dbg !10710
  store i32 0, i32* %i, align 4, !dbg !10711
  br label %for.cond, !dbg !10713

for.cond:                                         ; preds = %for.inc, %entry
  %9 = load i32, i32* %i, align 4, !dbg !10714
  %10 = load i32, i32* %n.addr, align 4, !dbg !10716
  %cmp = icmp slt i32 %9, %10, !dbg !10717
  br i1 %cmp, label %for.body, label %for.end, !dbg !10718

for.body:                                         ; preds = %for.cond
  %11 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !10719
  %12 = load i32, i32* %i, align 4, !dbg !10720
  %idxprom = sext i32 %12 to i64, !dbg !10721
  %arrayidx = getelementptr [4 x i32], [4 x i32]* %slot, i64 0, i64 %idxprom, !dbg !10721
  %13 = load i32, i32* %arrayidx, align 4, !dbg !10721
  %14 = load %struct.alps_fields*, %struct.alps_fields** %f, align 8, !dbg !10722
  %mt4 = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %14, i32 0, i32 5, !dbg !10723
  %15 = load i32, i32* %i, align 4, !dbg !10724
  %idxprom5 = sext i32 %15 to i64, !dbg !10722
  %arrayidx6 = getelementptr [4 x %struct.input_mt_pos], [4 x %struct.input_mt_pos]* %mt4, i64 0, i64 %idxprom5, !dbg !10722
  %x = getelementptr inbounds %struct.input_mt_pos, %struct.input_mt_pos* %arrayidx6, i32 0, i32 0, !dbg !10725
  %16 = load i16, i16* %x, align 4, !dbg !10725
  %conv = sext i16 %16 to i32, !dbg !10722
  %17 = load %struct.alps_fields*, %struct.alps_fields** %f, align 8, !dbg !10726
  %mt7 = getelementptr inbounds %struct.alps_fields, %struct.alps_fields* %17, i32 0, i32 5, !dbg !10727
  %18 = load i32, i32* %i, align 4, !dbg !10728
  %idxprom8 = sext i32 %18 to i64, !dbg !10726
  %arrayidx9 = getelementptr [4 x %struct.input_mt_pos], [4 x %struct.input_mt_pos]* %mt7, i64 0, i64 %idxprom8, !dbg !10726
  %y = getelementptr inbounds %struct.input_mt_pos, %struct.input_mt_pos* %arrayidx9, i32 0, i32 1, !dbg !10729
  %19 = load i16, i16* %y, align 2, !dbg !10729
  %conv10 = sext i16 %19 to i32, !dbg !10726
  call void @alps_set_slot(%struct.input_dev* %11, i32 %13, i32 %conv, i32 %conv10) #10, !dbg !10730
  br label %for.inc, !dbg !10730

for.inc:                                          ; preds = %for.body
  %20 = load i32, i32* %i, align 4, !dbg !10731
  %inc = add i32 %20, 1, !dbg !10731
  store i32 %inc, i32* %i, align 4, !dbg !10731
  br label %for.cond, !dbg !10732, !llvm.loop !10733

for.end:                                          ; preds = %for.cond
  %21 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !10735
  call void @input_mt_sync_frame(%struct.input_dev* %21) #10, !dbg !10736
  ret void, !dbg !10737
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @alps_get_mt_count(%struct.input_mt_pos* %mt) #0 !dbg !10738 {
entry:
  %mt.addr = alloca %struct.input_mt_pos*, align 8
  %i = alloca i32, align 4
  %fingers = alloca i32, align 4
  store %struct.input_mt_pos* %mt, %struct.input_mt_pos** %mt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.input_mt_pos** %mt.addr, metadata !10742, metadata !DIExpression()), !dbg !10743
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10744, metadata !DIExpression()), !dbg !10745
  call void @llvm.dbg.declare(metadata i32* %fingers, metadata !10746, metadata !DIExpression()), !dbg !10747
  store i32 0, i32* %fingers, align 4, !dbg !10747
  store i32 0, i32* %i, align 4, !dbg !10748
  br label %for.cond, !dbg !10750

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !10751
  %cmp = icmp slt i32 %0, 4, !dbg !10753
  br i1 %cmp, label %for.body, label %for.end, !dbg !10754

for.body:                                         ; preds = %for.cond
  %1 = load %struct.input_mt_pos*, %struct.input_mt_pos** %mt.addr, align 8, !dbg !10755
  %2 = load i32, i32* %i, align 4, !dbg !10758
  %idxprom = sext i32 %2 to i64, !dbg !10755
  %arrayidx = getelementptr %struct.input_mt_pos, %struct.input_mt_pos* %1, i64 %idxprom, !dbg !10755
  %x = getelementptr inbounds %struct.input_mt_pos, %struct.input_mt_pos* %arrayidx, i32 0, i32 0, !dbg !10759
  %3 = load i16, i16* %x, align 2, !dbg !10759
  %conv = sext i16 %3 to i32, !dbg !10755
  %cmp1 = icmp ne i32 %conv, 0, !dbg !10760
  br i1 %cmp1, label %if.then, label %lor.lhs.false, !dbg !10761

lor.lhs.false:                                    ; preds = %for.body
  %4 = load %struct.input_mt_pos*, %struct.input_mt_pos** %mt.addr, align 8, !dbg !10762
  %5 = load i32, i32* %i, align 4, !dbg !10763
  %idxprom3 = sext i32 %5 to i64, !dbg !10762
  %arrayidx4 = getelementptr %struct.input_mt_pos, %struct.input_mt_pos* %4, i64 %idxprom3, !dbg !10762
  %y = getelementptr inbounds %struct.input_mt_pos, %struct.input_mt_pos* %arrayidx4, i32 0, i32 1, !dbg !10764
  %6 = load i16, i16* %y, align 2, !dbg !10764
  %conv5 = sext i16 %6 to i32, !dbg !10762
  %cmp6 = icmp ne i32 %conv5, 0, !dbg !10765
  br i1 %cmp6, label %if.then, label %if.end, !dbg !10766

if.then:                                          ; preds = %lor.lhs.false, %for.body
  %7 = load i32, i32* %fingers, align 4, !dbg !10767
  %inc = add i32 %7, 1, !dbg !10767
  store i32 %inc, i32* %fingers, align 4, !dbg !10767
  br label %if.end, !dbg !10768

if.end:                                           ; preds = %if.then, %lor.lhs.false
  br label %for.inc, !dbg !10769

for.inc:                                          ; preds = %if.end
  %8 = load i32, i32* %i, align 4, !dbg !10770
  %inc8 = add i32 %8, 1, !dbg !10770
  store i32 %inc8, i32* %i, align 4, !dbg !10770
  br label %for.cond, !dbg !10771, !llvm.loop !10772

for.end:                                          ; preds = %for.cond
  %9 = load i32, i32* %fingers, align 4, !dbg !10774
  ret i32 %9, !dbg !10775
}

; Function Attrs: noredzone
declare dso_local i32 @input_mt_assign_slots(%struct.input_dev*, i32*, %struct.input_mt_pos*, i32, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i8 @alps_get_packet_id_v7(i8* %byte) #0 !dbg !10776 {
entry:
  %byte.addr = alloca i8*, align 8
  %packet_id = alloca i8, align 1
  store i8* %byte, i8** %byte.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %byte.addr, metadata !10779, metadata !DIExpression()), !dbg !10780
  call void @llvm.dbg.declare(metadata i8* %packet_id, metadata !10781, metadata !DIExpression()), !dbg !10782
  %0 = load i8*, i8** %byte.addr, align 8, !dbg !10783
  %arrayidx = getelementptr i8, i8* %0, i64 4, !dbg !10783
  %1 = load i8, i8* %arrayidx, align 1, !dbg !10783
  %conv = sext i8 %1 to i32, !dbg !10783
  %and = and i32 %conv, 64, !dbg !10785
  %tobool = icmp ne i32 %and, 0, !dbg !10785
  br i1 %tobool, label %if.then, label %if.else, !dbg !10786

if.then:                                          ; preds = %entry
  store i8 1, i8* %packet_id, align 1, !dbg !10787
  br label %if.end29, !dbg !10788

if.else:                                          ; preds = %entry
  %2 = load i8*, i8** %byte.addr, align 8, !dbg !10789
  %arrayidx1 = getelementptr i8, i8* %2, i64 4, !dbg !10789
  %3 = load i8, i8* %arrayidx1, align 1, !dbg !10789
  %conv2 = sext i8 %3 to i32, !dbg !10789
  %and3 = and i32 %conv2, 1, !dbg !10791
  %tobool4 = icmp ne i32 %and3, 0, !dbg !10791
  br i1 %tobool4, label %if.then5, label %if.else6, !dbg !10792

if.then5:                                         ; preds = %if.else
  store i8 2, i8* %packet_id, align 1, !dbg !10793
  br label %if.end28, !dbg !10794

if.else6:                                         ; preds = %if.else
  %4 = load i8*, i8** %byte.addr, align 8, !dbg !10795
  %arrayidx7 = getelementptr i8, i8* %4, i64 0, !dbg !10795
  %5 = load i8, i8* %arrayidx7, align 1, !dbg !10795
  %conv8 = sext i8 %5 to i32, !dbg !10795
  %and9 = and i32 %conv8, 16, !dbg !10797
  %tobool10 = icmp ne i32 %and9, 0, !dbg !10797
  br i1 %tobool10, label %land.lhs.true, label %if.else16, !dbg !10798

land.lhs.true:                                    ; preds = %if.else6
  %6 = load i8*, i8** %byte.addr, align 8, !dbg !10799
  %arrayidx11 = getelementptr i8, i8* %6, i64 4, !dbg !10799
  %7 = load i8, i8* %arrayidx11, align 1, !dbg !10799
  %conv12 = sext i8 %7 to i32, !dbg !10799
  %and13 = and i32 %conv12, 67, !dbg !10800
  %tobool14 = icmp ne i32 %and13, 0, !dbg !10800
  br i1 %tobool14, label %if.else16, label %if.then15, !dbg !10801

if.then15:                                        ; preds = %land.lhs.true
  store i8 3, i8* %packet_id, align 1, !dbg !10802
  br label %if.end27, !dbg !10803

if.else16:                                        ; preds = %land.lhs.true, %if.else6
  %8 = load i8*, i8** %byte.addr, align 8, !dbg !10804
  %arrayidx17 = getelementptr i8, i8* %8, i64 1, !dbg !10804
  %9 = load i8, i8* %arrayidx17, align 1, !dbg !10804
  %conv18 = sext i8 %9 to i32, !dbg !10804
  %cmp = icmp eq i32 %conv18, 0, !dbg !10806
  br i1 %cmp, label %land.lhs.true20, label %if.else26, !dbg !10807

land.lhs.true20:                                  ; preds = %if.else16
  %10 = load i8*, i8** %byte.addr, align 8, !dbg !10808
  %arrayidx21 = getelementptr i8, i8* %10, i64 4, !dbg !10808
  %11 = load i8, i8* %arrayidx21, align 1, !dbg !10808
  %conv22 = sext i8 %11 to i32, !dbg !10808
  %cmp23 = icmp eq i32 %conv22, 0, !dbg !10809
  br i1 %cmp23, label %if.then25, label %if.else26, !dbg !10810

if.then25:                                        ; preds = %land.lhs.true20
  store i8 0, i8* %packet_id, align 1, !dbg !10811
  br label %if.end, !dbg !10812

if.else26:                                        ; preds = %land.lhs.true20, %if.else16
  store i8 4, i8* %packet_id, align 1, !dbg !10813
  br label %if.end

if.end:                                           ; preds = %if.else26, %if.then25
  br label %if.end27

if.end27:                                         ; preds = %if.end, %if.then15
  br label %if.end28

if.end28:                                         ; preds = %if.end27, %if.then5
  br label %if.end29

if.end29:                                         ; preds = %if.end28, %if.then
  %12 = load i8, i8* %packet_id, align 1, !dbg !10814
  ret i8 %12, !dbg !10815
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @alps_get_finger_coordinate_v7(%struct.input_mt_pos* %mt, i8* %pkt, i8 zeroext %pkt_id) #0 !dbg !10816 {
entry:
  %mt.addr = alloca %struct.input_mt_pos*, align 8
  %pkt.addr = alloca i8*, align 8
  %pkt_id.addr = alloca i8, align 1
  store %struct.input_mt_pos* %mt, %struct.input_mt_pos** %mt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.input_mt_pos** %mt.addr, metadata !10819, metadata !DIExpression()), !dbg !10820
  store i8* %pkt, i8** %pkt.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %pkt.addr, metadata !10821, metadata !DIExpression()), !dbg !10822
  store i8 %pkt_id, i8* %pkt_id.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %pkt_id.addr, metadata !10823, metadata !DIExpression()), !dbg !10824
  %0 = load i8*, i8** %pkt.addr, align 8, !dbg !10825
  %arrayidx = getelementptr i8, i8* %0, i64 2, !dbg !10825
  %1 = load i8, i8* %arrayidx, align 1, !dbg !10825
  %conv = zext i8 %1 to i32, !dbg !10825
  %and = and i32 %conv, 128, !dbg !10826
  %shl = shl i32 %and, 4, !dbg !10827
  %conv1 = trunc i32 %shl to i16, !dbg !10828
  %2 = load %struct.input_mt_pos*, %struct.input_mt_pos** %mt.addr, align 8, !dbg !10829
  %arrayidx2 = getelementptr %struct.input_mt_pos, %struct.input_mt_pos* %2, i64 0, !dbg !10829
  %x = getelementptr inbounds %struct.input_mt_pos, %struct.input_mt_pos* %arrayidx2, i32 0, i32 0, !dbg !10830
  store i16 %conv1, i16* %x, align 2, !dbg !10831
  %3 = load i8*, i8** %pkt.addr, align 8, !dbg !10832
  %arrayidx3 = getelementptr i8, i8* %3, i64 2, !dbg !10832
  %4 = load i8, i8* %arrayidx3, align 1, !dbg !10832
  %conv4 = zext i8 %4 to i32, !dbg !10832
  %and5 = and i32 %conv4, 63, !dbg !10833
  %shl6 = shl i32 %and5, 5, !dbg !10834
  %5 = load %struct.input_mt_pos*, %struct.input_mt_pos** %mt.addr, align 8, !dbg !10835
  %arrayidx7 = getelementptr %struct.input_mt_pos, %struct.input_mt_pos* %5, i64 0, !dbg !10835
  %x8 = getelementptr inbounds %struct.input_mt_pos, %struct.input_mt_pos* %arrayidx7, i32 0, i32 0, !dbg !10836
  %6 = load i16, i16* %x8, align 2, !dbg !10837
  %conv9 = sext i16 %6 to i32, !dbg !10837
  %or = or i32 %conv9, %shl6, !dbg !10837
  %conv10 = trunc i32 %or to i16, !dbg !10837
  store i16 %conv10, i16* %x8, align 2, !dbg !10837
  %7 = load i8*, i8** %pkt.addr, align 8, !dbg !10838
  %arrayidx11 = getelementptr i8, i8* %7, i64 3, !dbg !10838
  %8 = load i8, i8* %arrayidx11, align 1, !dbg !10838
  %conv12 = zext i8 %8 to i32, !dbg !10838
  %and13 = and i32 %conv12, 48, !dbg !10839
  %shr = ashr i32 %and13, 1, !dbg !10840
  %9 = load %struct.input_mt_pos*, %struct.input_mt_pos** %mt.addr, align 8, !dbg !10841
  %arrayidx14 = getelementptr %struct.input_mt_pos, %struct.input_mt_pos* %9, i64 0, !dbg !10841
  %x15 = getelementptr inbounds %struct.input_mt_pos, %struct.input_mt_pos* %arrayidx14, i32 0, i32 0, !dbg !10842
  %10 = load i16, i16* %x15, align 2, !dbg !10843
  %conv16 = sext i16 %10 to i32, !dbg !10843
  %or17 = or i32 %conv16, %shr, !dbg !10843
  %conv18 = trunc i32 %or17 to i16, !dbg !10843
  store i16 %conv18, i16* %x15, align 2, !dbg !10843
  %11 = load i8*, i8** %pkt.addr, align 8, !dbg !10844
  %arrayidx19 = getelementptr i8, i8* %11, i64 3, !dbg !10844
  %12 = load i8, i8* %arrayidx19, align 1, !dbg !10844
  %conv20 = zext i8 %12 to i32, !dbg !10844
  %and21 = and i32 %conv20, 7, !dbg !10845
  %13 = load %struct.input_mt_pos*, %struct.input_mt_pos** %mt.addr, align 8, !dbg !10846
  %arrayidx22 = getelementptr %struct.input_mt_pos, %struct.input_mt_pos* %13, i64 0, !dbg !10846
  %x23 = getelementptr inbounds %struct.input_mt_pos, %struct.input_mt_pos* %arrayidx22, i32 0, i32 0, !dbg !10847
  %14 = load i16, i16* %x23, align 2, !dbg !10848
  %conv24 = sext i16 %14 to i32, !dbg !10848
  %or25 = or i32 %conv24, %and21, !dbg !10848
  %conv26 = trunc i32 %or25 to i16, !dbg !10848
  store i16 %conv26, i16* %x23, align 2, !dbg !10848
  %15 = load i8*, i8** %pkt.addr, align 8, !dbg !10849
  %arrayidx27 = getelementptr i8, i8* %15, i64 1, !dbg !10849
  %16 = load i8, i8* %arrayidx27, align 1, !dbg !10849
  %conv28 = zext i8 %16 to i32, !dbg !10849
  %shl29 = shl i32 %conv28, 3, !dbg !10850
  %17 = load i8*, i8** %pkt.addr, align 8, !dbg !10851
  %arrayidx30 = getelementptr i8, i8* %17, i64 0, !dbg !10851
  %18 = load i8, i8* %arrayidx30, align 1, !dbg !10851
  %conv31 = zext i8 %18 to i32, !dbg !10851
  %and32 = and i32 %conv31, 7, !dbg !10852
  %or33 = or i32 %shl29, %and32, !dbg !10853
  %conv34 = trunc i32 %or33 to i16, !dbg !10854
  %19 = load %struct.input_mt_pos*, %struct.input_mt_pos** %mt.addr, align 8, !dbg !10855
  %arrayidx35 = getelementptr %struct.input_mt_pos, %struct.input_mt_pos* %19, i64 0, !dbg !10855
  %y = getelementptr inbounds %struct.input_mt_pos, %struct.input_mt_pos* %arrayidx35, i32 0, i32 1, !dbg !10856
  store i16 %conv34, i16* %y, align 2, !dbg !10857
  %20 = load i8*, i8** %pkt.addr, align 8, !dbg !10858
  %arrayidx36 = getelementptr i8, i8* %20, i64 3, !dbg !10858
  %21 = load i8, i8* %arrayidx36, align 1, !dbg !10858
  %conv37 = zext i8 %21 to i32, !dbg !10858
  %and38 = and i32 %conv37, 128, !dbg !10859
  %shl39 = shl i32 %and38, 4, !dbg !10860
  %conv40 = trunc i32 %shl39 to i16, !dbg !10861
  %22 = load %struct.input_mt_pos*, %struct.input_mt_pos** %mt.addr, align 8, !dbg !10862
  %arrayidx41 = getelementptr %struct.input_mt_pos, %struct.input_mt_pos* %22, i64 1, !dbg !10862
  %x42 = getelementptr inbounds %struct.input_mt_pos, %struct.input_mt_pos* %arrayidx41, i32 0, i32 0, !dbg !10863
  store i16 %conv40, i16* %x42, align 2, !dbg !10864
  %23 = load i8*, i8** %pkt.addr, align 8, !dbg !10865
  %arrayidx43 = getelementptr i8, i8* %23, i64 4, !dbg !10865
  %24 = load i8, i8* %arrayidx43, align 1, !dbg !10865
  %conv44 = zext i8 %24 to i32, !dbg !10865
  %and45 = and i32 %conv44, 128, !dbg !10866
  %shl46 = shl i32 %and45, 3, !dbg !10867
  %25 = load %struct.input_mt_pos*, %struct.input_mt_pos** %mt.addr, align 8, !dbg !10868
  %arrayidx47 = getelementptr %struct.input_mt_pos, %struct.input_mt_pos* %25, i64 1, !dbg !10868
  %x48 = getelementptr inbounds %struct.input_mt_pos, %struct.input_mt_pos* %arrayidx47, i32 0, i32 0, !dbg !10869
  %26 = load i16, i16* %x48, align 2, !dbg !10870
  %conv49 = sext i16 %26 to i32, !dbg !10870
  %or50 = or i32 %conv49, %shl46, !dbg !10870
  %conv51 = trunc i32 %or50 to i16, !dbg !10870
  store i16 %conv51, i16* %x48, align 2, !dbg !10870
  %27 = load i8*, i8** %pkt.addr, align 8, !dbg !10871
  %arrayidx52 = getelementptr i8, i8* %27, i64 4, !dbg !10871
  %28 = load i8, i8* %arrayidx52, align 1, !dbg !10871
  %conv53 = zext i8 %28 to i32, !dbg !10871
  %and54 = and i32 %conv53, 63, !dbg !10872
  %shl55 = shl i32 %and54, 4, !dbg !10873
  %29 = load %struct.input_mt_pos*, %struct.input_mt_pos** %mt.addr, align 8, !dbg !10874
  %arrayidx56 = getelementptr %struct.input_mt_pos, %struct.input_mt_pos* %29, i64 1, !dbg !10874
  %x57 = getelementptr inbounds %struct.input_mt_pos, %struct.input_mt_pos* %arrayidx56, i32 0, i32 0, !dbg !10875
  %30 = load i16, i16* %x57, align 2, !dbg !10876
  %conv58 = sext i16 %30 to i32, !dbg !10876
  %or59 = or i32 %conv58, %shl55, !dbg !10876
  %conv60 = trunc i32 %or59 to i16, !dbg !10876
  store i16 %conv60, i16* %x57, align 2, !dbg !10876
  %31 = load i8*, i8** %pkt.addr, align 8, !dbg !10877
  %arrayidx61 = getelementptr i8, i8* %31, i64 5, !dbg !10877
  %32 = load i8, i8* %arrayidx61, align 1, !dbg !10877
  %conv62 = zext i8 %32 to i32, !dbg !10877
  %and63 = and i32 %conv62, 128, !dbg !10878
  %shl64 = shl i32 %and63, 3, !dbg !10879
  %conv65 = trunc i32 %shl64 to i16, !dbg !10880
  %33 = load %struct.input_mt_pos*, %struct.input_mt_pos** %mt.addr, align 8, !dbg !10881
  %arrayidx66 = getelementptr %struct.input_mt_pos, %struct.input_mt_pos* %33, i64 1, !dbg !10881
  %y67 = getelementptr inbounds %struct.input_mt_pos, %struct.input_mt_pos* %arrayidx66, i32 0, i32 1, !dbg !10882
  store i16 %conv65, i16* %y67, align 2, !dbg !10883
  %34 = load i8*, i8** %pkt.addr, align 8, !dbg !10884
  %arrayidx68 = getelementptr i8, i8* %34, i64 5, !dbg !10884
  %35 = load i8, i8* %arrayidx68, align 1, !dbg !10884
  %conv69 = zext i8 %35 to i32, !dbg !10884
  %and70 = and i32 %conv69, 63, !dbg !10885
  %shl71 = shl i32 %and70, 4, !dbg !10886
  %36 = load %struct.input_mt_pos*, %struct.input_mt_pos** %mt.addr, align 8, !dbg !10887
  %arrayidx72 = getelementptr %struct.input_mt_pos, %struct.input_mt_pos* %36, i64 1, !dbg !10887
  %y73 = getelementptr inbounds %struct.input_mt_pos, %struct.input_mt_pos* %arrayidx72, i32 0, i32 1, !dbg !10888
  %37 = load i16, i16* %y73, align 2, !dbg !10889
  %conv74 = sext i16 %37 to i32, !dbg !10889
  %or75 = or i32 %conv74, %shl71, !dbg !10889
  %conv76 = trunc i32 %or75 to i16, !dbg !10889
  store i16 %conv76, i16* %y73, align 2, !dbg !10889
  %38 = load i8, i8* %pkt_id.addr, align 1, !dbg !10890
  %conv77 = zext i8 %38 to i32, !dbg !10890
  switch i32 %conv77, label %sw.epilog [
    i32 1, label %sw.bb
    i32 2, label %sw.bb99
    i32 3, label %sw.bb124
  ], !dbg !10891

sw.bb:                                            ; preds = %entry
  %39 = load %struct.input_mt_pos*, %struct.input_mt_pos** %mt.addr, align 8, !dbg !10892
  %arrayidx78 = getelementptr %struct.input_mt_pos, %struct.input_mt_pos* %39, i64 1, !dbg !10892
  %x79 = getelementptr inbounds %struct.input_mt_pos, %struct.input_mt_pos* %arrayidx78, i32 0, i32 0, !dbg !10894
  %40 = load i16, i16* %x79, align 2, !dbg !10895
  %conv80 = sext i16 %40 to i32, !dbg !10895
  %and81 = and i32 %conv80, -16, !dbg !10895
  %conv82 = trunc i32 %and81 to i16, !dbg !10895
  store i16 %conv82, i16* %x79, align 2, !dbg !10895
  %41 = load %struct.input_mt_pos*, %struct.input_mt_pos** %mt.addr, align 8, !dbg !10896
  %arrayidx83 = getelementptr %struct.input_mt_pos, %struct.input_mt_pos* %41, i64 1, !dbg !10896
  %y84 = getelementptr inbounds %struct.input_mt_pos, %struct.input_mt_pos* %arrayidx83, i32 0, i32 1, !dbg !10897
  %42 = load i16, i16* %y84, align 2, !dbg !10898
  %conv85 = sext i16 %42 to i32, !dbg !10898
  %or86 = or i32 %conv85, 15, !dbg !10898
  %conv87 = trunc i32 %or86 to i16, !dbg !10898
  store i16 %conv87, i16* %y84, align 2, !dbg !10898
  %43 = load %struct.input_mt_pos*, %struct.input_mt_pos** %mt.addr, align 8, !dbg !10899
  %arrayidx88 = getelementptr %struct.input_mt_pos, %struct.input_mt_pos* %43, i64 1, !dbg !10899
  %y89 = getelementptr inbounds %struct.input_mt_pos, %struct.input_mt_pos* %arrayidx88, i32 0, i32 1, !dbg !10901
  %44 = load i16, i16* %y89, align 2, !dbg !10901
  %conv90 = sext i16 %44 to i32, !dbg !10899
  %cmp = icmp eq i32 %conv90, 2047, !dbg !10902
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !10903

land.lhs.true:                                    ; preds = %sw.bb
  %45 = load %struct.input_mt_pos*, %struct.input_mt_pos** %mt.addr, align 8, !dbg !10904
  %arrayidx92 = getelementptr %struct.input_mt_pos, %struct.input_mt_pos* %45, i64 1, !dbg !10904
  %x93 = getelementptr inbounds %struct.input_mt_pos, %struct.input_mt_pos* %arrayidx92, i32 0, i32 0, !dbg !10905
  %46 = load i16, i16* %x93, align 2, !dbg !10905
  %conv94 = sext i16 %46 to i32, !dbg !10904
  %cmp95 = icmp eq i32 %conv94, 4080, !dbg !10906
  br i1 %cmp95, label %if.then, label %if.end, !dbg !10907

if.then:                                          ; preds = %land.lhs.true
  %47 = load %struct.input_mt_pos*, %struct.input_mt_pos** %mt.addr, align 8, !dbg !10908
  %arrayidx97 = getelementptr %struct.input_mt_pos, %struct.input_mt_pos* %47, i64 1, !dbg !10908
  %x98 = getelementptr inbounds %struct.input_mt_pos, %struct.input_mt_pos* %arrayidx97, i32 0, i32 0, !dbg !10910
  store i16 0, i16* %x98, align 2, !dbg !10911
  br label %if.end, !dbg !10912

if.end:                                           ; preds = %if.then, %land.lhs.true, %sw.bb
  br label %sw.epilog, !dbg !10913

sw.bb99:                                          ; preds = %entry
  %48 = load %struct.input_mt_pos*, %struct.input_mt_pos** %mt.addr, align 8, !dbg !10914
  %arrayidx100 = getelementptr %struct.input_mt_pos, %struct.input_mt_pos* %48, i64 1, !dbg !10914
  %x101 = getelementptr inbounds %struct.input_mt_pos, %struct.input_mt_pos* %arrayidx100, i32 0, i32 0, !dbg !10915
  %49 = load i16, i16* %x101, align 2, !dbg !10916
  %conv102 = sext i16 %49 to i32, !dbg !10916
  %and103 = and i32 %conv102, -64, !dbg !10916
  %conv104 = trunc i32 %and103 to i16, !dbg !10916
  store i16 %conv104, i16* %x101, align 2, !dbg !10916
  %50 = load %struct.input_mt_pos*, %struct.input_mt_pos** %mt.addr, align 8, !dbg !10917
  %arrayidx105 = getelementptr %struct.input_mt_pos, %struct.input_mt_pos* %50, i64 1, !dbg !10917
  %y106 = getelementptr inbounds %struct.input_mt_pos, %struct.input_mt_pos* %arrayidx105, i32 0, i32 1, !dbg !10918
  %51 = load i16, i16* %y106, align 2, !dbg !10919
  %conv107 = sext i16 %51 to i32, !dbg !10919
  %and108 = and i32 %conv107, -33, !dbg !10919
  %conv109 = trunc i32 %and108 to i16, !dbg !10919
  store i16 %conv109, i16* %y106, align 2, !dbg !10919
  %52 = load i8*, i8** %pkt.addr, align 8, !dbg !10920
  %arrayidx110 = getelementptr i8, i8* %52, i64 4, !dbg !10920
  %53 = load i8, i8* %arrayidx110, align 1, !dbg !10920
  %conv111 = zext i8 %53 to i32, !dbg !10920
  %and112 = and i32 %conv111, 2, !dbg !10921
  %shl113 = shl i32 %and112, 4, !dbg !10922
  %54 = load %struct.input_mt_pos*, %struct.input_mt_pos** %mt.addr, align 8, !dbg !10923
  %arrayidx114 = getelementptr %struct.input_mt_pos, %struct.input_mt_pos* %54, i64 1, !dbg !10923
  %y115 = getelementptr inbounds %struct.input_mt_pos, %struct.input_mt_pos* %arrayidx114, i32 0, i32 1, !dbg !10924
  %55 = load i16, i16* %y115, align 2, !dbg !10925
  %conv116 = sext i16 %55 to i32, !dbg !10925
  %or117 = or i32 %conv116, %shl113, !dbg !10925
  %conv118 = trunc i32 %or117 to i16, !dbg !10925
  store i16 %conv118, i16* %y115, align 2, !dbg !10925
  %56 = load %struct.input_mt_pos*, %struct.input_mt_pos** %mt.addr, align 8, !dbg !10926
  %arrayidx119 = getelementptr %struct.input_mt_pos, %struct.input_mt_pos* %56, i64 1, !dbg !10926
  %y120 = getelementptr inbounds %struct.input_mt_pos, %struct.input_mt_pos* %arrayidx119, i32 0, i32 1, !dbg !10927
  %57 = load i16, i16* %y120, align 2, !dbg !10928
  %conv121 = sext i16 %57 to i32, !dbg !10928
  %or122 = or i32 %conv121, 31, !dbg !10928
  %conv123 = trunc i32 %or122 to i16, !dbg !10928
  store i16 %conv123, i16* %y120, align 2, !dbg !10928
  br label %sw.epilog, !dbg !10929

sw.bb124:                                         ; preds = %entry
  %58 = load %struct.input_mt_pos*, %struct.input_mt_pos** %mt.addr, align 8, !dbg !10930
  %arrayidx125 = getelementptr %struct.input_mt_pos, %struct.input_mt_pos* %58, i64 1, !dbg !10930
  %x126 = getelementptr inbounds %struct.input_mt_pos, %struct.input_mt_pos* %arrayidx125, i32 0, i32 0, !dbg !10931
  %59 = load i16, i16* %x126, align 2, !dbg !10932
  %conv127 = sext i16 %59 to i32, !dbg !10932
  %and128 = and i32 %conv127, -64, !dbg !10932
  %conv129 = trunc i32 %and128 to i16, !dbg !10932
  store i16 %conv129, i16* %x126, align 2, !dbg !10932
  %60 = load i8*, i8** %pkt.addr, align 8, !dbg !10933
  %arrayidx130 = getelementptr i8, i8* %60, i64 0, !dbg !10933
  %61 = load i8, i8* %arrayidx130, align 1, !dbg !10933
  %conv131 = zext i8 %61 to i32, !dbg !10933
  %and132 = and i32 %conv131, 32, !dbg !10934
  %62 = load %struct.input_mt_pos*, %struct.input_mt_pos** %mt.addr, align 8, !dbg !10935
  %arrayidx133 = getelementptr %struct.input_mt_pos, %struct.input_mt_pos* %62, i64 1, !dbg !10935
  %x134 = getelementptr inbounds %struct.input_mt_pos, %struct.input_mt_pos* %arrayidx133, i32 0, i32 0, !dbg !10936
  %63 = load i16, i16* %x134, align 2, !dbg !10937
  %conv135 = sext i16 %63 to i32, !dbg !10937
  %or136 = or i32 %conv135, %and132, !dbg !10937
  %conv137 = trunc i32 %or136 to i16, !dbg !10937
  store i16 %conv137, i16* %x134, align 2, !dbg !10937
  %64 = load %struct.input_mt_pos*, %struct.input_mt_pos** %mt.addr, align 8, !dbg !10938
  %arrayidx138 = getelementptr %struct.input_mt_pos, %struct.input_mt_pos* %64, i64 1, !dbg !10938
  %y139 = getelementptr inbounds %struct.input_mt_pos, %struct.input_mt_pos* %arrayidx138, i32 0, i32 1, !dbg !10939
  %65 = load i16, i16* %y139, align 2, !dbg !10940
  %conv140 = sext i16 %65 to i32, !dbg !10940
  %or141 = or i32 %conv140, 15, !dbg !10940
  %conv142 = trunc i32 %or141 to i16, !dbg !10940
  store i16 %conv142, i16* %y139, align 2, !dbg !10940
  br label %sw.epilog, !dbg !10941

sw.epilog:                                        ; preds = %entry, %sw.bb124, %sw.bb99, %if.end
  %66 = load %struct.input_mt_pos*, %struct.input_mt_pos** %mt.addr, align 8, !dbg !10942
  %arrayidx143 = getelementptr %struct.input_mt_pos, %struct.input_mt_pos* %66, i64 0, !dbg !10942
  %y144 = getelementptr inbounds %struct.input_mt_pos, %struct.input_mt_pos* %arrayidx143, i32 0, i32 1, !dbg !10943
  %67 = load i16, i16* %y144, align 2, !dbg !10943
  %conv145 = sext i16 %67 to i32, !dbg !10942
  %sub = sub i32 2047, %conv145, !dbg !10944
  %conv146 = trunc i32 %sub to i16, !dbg !10945
  %68 = load %struct.input_mt_pos*, %struct.input_mt_pos** %mt.addr, align 8, !dbg !10946
  %arrayidx147 = getelementptr %struct.input_mt_pos, %struct.input_mt_pos* %68, i64 0, !dbg !10946
  %y148 = getelementptr inbounds %struct.input_mt_pos, %struct.input_mt_pos* %arrayidx147, i32 0, i32 1, !dbg !10947
  store i16 %conv146, i16* %y148, align 2, !dbg !10948
  %69 = load %struct.input_mt_pos*, %struct.input_mt_pos** %mt.addr, align 8, !dbg !10949
  %arrayidx149 = getelementptr %struct.input_mt_pos, %struct.input_mt_pos* %69, i64 1, !dbg !10949
  %y150 = getelementptr inbounds %struct.input_mt_pos, %struct.input_mt_pos* %arrayidx149, i32 0, i32 1, !dbg !10950
  %70 = load i16, i16* %y150, align 2, !dbg !10950
  %conv151 = sext i16 %70 to i32, !dbg !10949
  %sub152 = sub i32 2047, %conv151, !dbg !10951
  %conv153 = trunc i32 %sub152 to i16, !dbg !10952
  %71 = load %struct.input_mt_pos*, %struct.input_mt_pos** %mt.addr, align 8, !dbg !10953
  %arrayidx154 = getelementptr %struct.input_mt_pos, %struct.input_mt_pos* %71, i64 1, !dbg !10953
  %y155 = getelementptr inbounds %struct.input_mt_pos, %struct.input_mt_pos* %arrayidx154, i32 0, i32 1, !dbg !10954
  store i16 %conv153, i16* %y155, align 2, !dbg !10955
  ret void, !dbg !10956
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @alps_get_pkt_id_ss4_v2(i8* %byte) #0 !dbg !10957 {
entry:
  %byte.addr = alloca i8*, align 8
  %pkt_id = alloca i32, align 4
  store i8* %byte, i8** %byte.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %byte.addr, metadata !10960, metadata !DIExpression()), !dbg !10961
  call void @llvm.dbg.declare(metadata i32* %pkt_id, metadata !10962, metadata !DIExpression()), !dbg !10963
  store i32 0, i32* %pkt_id, align 4, !dbg !10963
  %0 = load i8*, i8** %byte.addr, align 8, !dbg !10964
  %arrayidx = getelementptr i8, i8* %0, i64 3, !dbg !10964
  %1 = load i8, i8* %arrayidx, align 1, !dbg !10964
  %conv = zext i8 %1 to i32, !dbg !10964
  %and = and i32 %conv, 48, !dbg !10965
  switch i32 %and, label %sw.epilog [
    i32 0, label %sw.bb
    i32 16, label %sw.bb29
    i32 32, label %sw.bb30
    i32 48, label %sw.bb31
  ], !dbg !10966

sw.bb:                                            ; preds = %entry
  %2 = load i8*, i8** %byte.addr, align 8, !dbg !10967
  %arrayidx1 = getelementptr i8, i8* %2, i64 0, !dbg !10967
  %3 = load i8, i8* %arrayidx1, align 1, !dbg !10967
  %conv2 = zext i8 %3 to i32, !dbg !10967
  %cmp = icmp eq i32 %conv2, 24, !dbg !10967
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !10967

land.lhs.true:                                    ; preds = %sw.bb
  %4 = load i8*, i8** %byte.addr, align 8, !dbg !10967
  %arrayidx4 = getelementptr i8, i8* %4, i64 1, !dbg !10967
  %5 = load i8, i8* %arrayidx4, align 1, !dbg !10967
  %conv5 = zext i8 %5 to i32, !dbg !10967
  %cmp6 = icmp eq i32 %conv5, 16, !dbg !10967
  br i1 %cmp6, label %land.lhs.true8, label %if.else, !dbg !10967

land.lhs.true8:                                   ; preds = %land.lhs.true
  %6 = load i8*, i8** %byte.addr, align 8, !dbg !10967
  %arrayidx9 = getelementptr i8, i8* %6, i64 2, !dbg !10967
  %7 = load i8, i8* %arrayidx9, align 1, !dbg !10967
  %conv10 = zext i8 %7 to i32, !dbg !10967
  %cmp11 = icmp eq i32 %conv10, 0, !dbg !10967
  br i1 %cmp11, label %land.lhs.true13, label %if.else, !dbg !10967

land.lhs.true13:                                  ; preds = %land.lhs.true8
  %8 = load i8*, i8** %byte.addr, align 8, !dbg !10967
  %arrayidx14 = getelementptr i8, i8* %8, i64 3, !dbg !10967
  %9 = load i8, i8* %arrayidx14, align 1, !dbg !10967
  %conv15 = zext i8 %9 to i32, !dbg !10967
  %and16 = and i32 %conv15, 136, !dbg !10967
  %cmp17 = icmp eq i32 %and16, 8, !dbg !10967
  br i1 %cmp17, label %land.lhs.true19, label %if.else, !dbg !10967

land.lhs.true19:                                  ; preds = %land.lhs.true13
  %10 = load i8*, i8** %byte.addr, align 8, !dbg !10967
  %arrayidx20 = getelementptr i8, i8* %10, i64 4, !dbg !10967
  %11 = load i8, i8* %arrayidx20, align 1, !dbg !10967
  %conv21 = zext i8 %11 to i32, !dbg !10967
  %cmp22 = icmp eq i32 %conv21, 16, !dbg !10967
  br i1 %cmp22, label %land.lhs.true24, label %if.else, !dbg !10967

land.lhs.true24:                                  ; preds = %land.lhs.true19
  %12 = load i8*, i8** %byte.addr, align 8, !dbg !10967
  %arrayidx25 = getelementptr i8, i8* %12, i64 5, !dbg !10967
  %13 = load i8, i8* %arrayidx25, align 1, !dbg !10967
  %conv26 = zext i8 %13 to i32, !dbg !10967
  %cmp27 = icmp eq i32 %conv26, 0, !dbg !10967
  br i1 %cmp27, label %if.then, label %if.else, !dbg !10970

if.then:                                          ; preds = %land.lhs.true24
  store i32 0, i32* %pkt_id, align 4, !dbg !10971
  br label %if.end, !dbg !10973

if.else:                                          ; preds = %land.lhs.true24, %land.lhs.true19, %land.lhs.true13, %land.lhs.true8, %land.lhs.true, %sw.bb
  store i32 1, i32* %pkt_id, align 4, !dbg !10974
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %sw.epilog, !dbg !10976

sw.bb29:                                          ; preds = %entry
  store i32 2, i32* %pkt_id, align 4, !dbg !10977
  br label %sw.epilog, !dbg !10978

sw.bb30:                                          ; preds = %entry
  store i32 4, i32* %pkt_id, align 4, !dbg !10979
  br label %sw.epilog, !dbg !10980

sw.bb31:                                          ; preds = %entry
  store i32 3, i32* %pkt_id, align 4, !dbg !10981
  br label %sw.epilog, !dbg !10982

sw.epilog:                                        ; preds = %entry, %sw.bb31, %sw.bb30, %sw.bb29, %if.end
  %14 = load i32, i32* %pkt_id, align 4, !dbg !10983
  ret i32 %14, !dbg !10984
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @alps_get_otp_values_ss4_v2(%struct.psmouse* %psmouse, i8 zeroext %index, i8* %otp) #0 !dbg !10985 {
entry:
  %retval = alloca i32, align 4
  %psmouse.addr = alloca %struct.psmouse*, align 8
  %index.addr = alloca i8, align 1
  %otp.addr = alloca i8*, align 8
  %ps2dev = alloca %struct.ps2dev*, align 8
  store %struct.psmouse* %psmouse, %struct.psmouse** %psmouse.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.psmouse** %psmouse.addr, metadata !10988, metadata !DIExpression()), !dbg !10989
  store i8 %index, i8* %index.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %index.addr, metadata !10990, metadata !DIExpression()), !dbg !10991
  store i8* %otp, i8** %otp.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %otp.addr, metadata !10992, metadata !DIExpression()), !dbg !10993
  call void @llvm.dbg.declare(metadata %struct.ps2dev** %ps2dev, metadata !10994, metadata !DIExpression()), !dbg !10995
  %0 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !10996
  %ps2dev1 = getelementptr inbounds %struct.psmouse, %struct.psmouse* %0, i32 0, i32 2, !dbg !10997
  store %struct.ps2dev* %ps2dev1, %struct.ps2dev** %ps2dev, align 8, !dbg !10995
  %1 = load i8, i8* %index.addr, align 1, !dbg !10998
  %conv = zext i8 %1 to i32, !dbg !10998
  switch i32 %conv, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb7
  ], !dbg !10999

sw.bb:                                            ; preds = %entry
  %2 = load %struct.ps2dev*, %struct.ps2dev** %ps2dev, align 8, !dbg !11000
  %call = call i32 @ps2_command(%struct.ps2dev* %2, i8* null, i32 234) #10, !dbg !11003
  %tobool = icmp ne i32 %call, 0, !dbg !11003
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !11004

lor.lhs.false:                                    ; preds = %sw.bb
  %3 = load %struct.ps2dev*, %struct.ps2dev** %ps2dev, align 8, !dbg !11005
  %call2 = call i32 @ps2_command(%struct.ps2dev* %3, i8* null, i32 234) #10, !dbg !11006
  %tobool3 = icmp ne i32 %call2, 0, !dbg !11006
  br i1 %tobool3, label %if.then, label %lor.lhs.false4, !dbg !11007

lor.lhs.false4:                                   ; preds = %lor.lhs.false
  %4 = load %struct.ps2dev*, %struct.ps2dev** %ps2dev, align 8, !dbg !11008
  %5 = load i8*, i8** %otp.addr, align 8, !dbg !11009
  %call5 = call i32 @ps2_command(%struct.ps2dev* %4, i8* %5, i32 1001) #10, !dbg !11010
  %tobool6 = icmp ne i32 %call5, 0, !dbg !11010
  br i1 %tobool6, label %if.then, label %if.end, !dbg !11011

if.then:                                          ; preds = %lor.lhs.false4, %lor.lhs.false, %sw.bb
  store i32 -1, i32* %retval, align 4, !dbg !11012
  br label %return, !dbg !11012

if.end:                                           ; preds = %lor.lhs.false4
  br label %sw.epilog, !dbg !11013

sw.bb7:                                           ; preds = %entry
  %6 = load %struct.ps2dev*, %struct.ps2dev** %ps2dev, align 8, !dbg !11014
  %call8 = call i32 @ps2_command(%struct.ps2dev* %6, i8* null, i32 240) #10, !dbg !11016
  %tobool9 = icmp ne i32 %call8, 0, !dbg !11016
  br i1 %tobool9, label %if.then16, label %lor.lhs.false10, !dbg !11017

lor.lhs.false10:                                  ; preds = %sw.bb7
  %7 = load %struct.ps2dev*, %struct.ps2dev** %ps2dev, align 8, !dbg !11018
  %call11 = call i32 @ps2_command(%struct.ps2dev* %7, i8* null, i32 240) #10, !dbg !11019
  %tobool12 = icmp ne i32 %call11, 0, !dbg !11019
  br i1 %tobool12, label %if.then16, label %lor.lhs.false13, !dbg !11020

lor.lhs.false13:                                  ; preds = %lor.lhs.false10
  %8 = load %struct.ps2dev*, %struct.ps2dev** %ps2dev, align 8, !dbg !11021
  %9 = load i8*, i8** %otp.addr, align 8, !dbg !11022
  %call14 = call i32 @ps2_command(%struct.ps2dev* %8, i8* %9, i32 1001) #10, !dbg !11023
  %tobool15 = icmp ne i32 %call14, 0, !dbg !11023
  br i1 %tobool15, label %if.then16, label %if.end17, !dbg !11024

if.then16:                                        ; preds = %lor.lhs.false13, %lor.lhs.false10, %sw.bb7
  store i32 -1, i32* %retval, align 4, !dbg !11025
  br label %return, !dbg !11025

if.end17:                                         ; preds = %lor.lhs.false13
  br label %sw.epilog, !dbg !11026

sw.epilog:                                        ; preds = %entry, %if.end17, %if.end
  store i32 0, i32* %retval, align 4, !dbg !11027
  br label %return, !dbg !11027

return:                                           ; preds = %sw.epilog, %if.then16, %if.then
  %10 = load i32, i32* %retval, align 4, !dbg !11028
  ret i32 %10, !dbg !11028
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @alps_update_device_area_ss4_v2([4 x i8]* %otp, %struct.alps_data* %priv) #0 !dbg !11029 {
entry:
  %otp.addr = alloca [4 x i8]*, align 8
  %priv.addr = alloca %struct.alps_data*, align 8
  %num_x_electrode = alloca i32, align 4
  %num_y_electrode = alloca i32, align 4
  %x_pitch = alloca i32, align 4
  %y_pitch = alloca i32, align 4
  %x_phys = alloca i32, align 4
  %y_phys = alloca i32, align 4
  store [4 x i8]* %otp, [4 x i8]** %otp.addr, align 8
  call void @llvm.dbg.declare(metadata [4 x i8]** %otp.addr, metadata !11033, metadata !DIExpression()), !dbg !11034
  store %struct.alps_data* %priv, %struct.alps_data** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.alps_data** %priv.addr, metadata !11035, metadata !DIExpression()), !dbg !11036
  call void @llvm.dbg.declare(metadata i32* %num_x_electrode, metadata !11037, metadata !DIExpression()), !dbg !11038
  call void @llvm.dbg.declare(metadata i32* %num_y_electrode, metadata !11039, metadata !DIExpression()), !dbg !11040
  call void @llvm.dbg.declare(metadata i32* %x_pitch, metadata !11041, metadata !DIExpression()), !dbg !11042
  call void @llvm.dbg.declare(metadata i32* %y_pitch, metadata !11043, metadata !DIExpression()), !dbg !11044
  call void @llvm.dbg.declare(metadata i32* %x_phys, metadata !11045, metadata !DIExpression()), !dbg !11046
  call void @llvm.dbg.declare(metadata i32* %y_phys, metadata !11047, metadata !DIExpression()), !dbg !11048
  %0 = load %struct.alps_data*, %struct.alps_data** %priv.addr, align 8, !dbg !11049
  %dev_id = getelementptr inbounds %struct.alps_data, %struct.alps_data* %0, i32 0, i32 11, !dbg !11049
  %arrayidx = getelementptr [3 x i8], [3 x i8]* %dev_id, i64 0, i64 0, !dbg !11049
  %1 = load i8, i8* %arrayidx, align 8, !dbg !11049
  %conv = zext i8 %1 to i32, !dbg !11049
  %cmp = icmp eq i32 %conv, 115, !dbg !11049
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !11049

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.alps_data*, %struct.alps_data** %priv.addr, align 8, !dbg !11049
  %dev_id2 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %2, i32 0, i32 11, !dbg !11049
  %arrayidx3 = getelementptr [3 x i8], [3 x i8]* %dev_id2, i64 0, i64 1, !dbg !11049
  %3 = load i8, i8* %arrayidx3, align 1, !dbg !11049
  %conv4 = zext i8 %3 to i32, !dbg !11049
  %cmp5 = icmp eq i32 %conv4, 3, !dbg !11049
  br i1 %cmp5, label %land.lhs.true7, label %if.else, !dbg !11049

land.lhs.true7:                                   ; preds = %land.lhs.true
  %4 = load %struct.alps_data*, %struct.alps_data** %priv.addr, align 8, !dbg !11049
  %dev_id8 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %4, i32 0, i32 11, !dbg !11049
  %arrayidx9 = getelementptr [3 x i8], [3 x i8]* %dev_id8, i64 0, i64 2, !dbg !11049
  %5 = load i8, i8* %arrayidx9, align 2, !dbg !11049
  %conv10 = zext i8 %5 to i32, !dbg !11049
  %cmp11 = icmp eq i32 %conv10, 40, !dbg !11049
  br i1 %cmp11, label %if.then, label %if.else, !dbg !11051

if.then:                                          ; preds = %land.lhs.true7
  %6 = load [4 x i8]*, [4 x i8]** %otp.addr, align 8, !dbg !11052
  %arrayidx13 = getelementptr [4 x i8], [4 x i8]* %6, i64 0, !dbg !11052
  %arrayidx14 = getelementptr [4 x i8], [4 x i8]* %arrayidx13, i64 0, i64 2, !dbg !11052
  %7 = load i8, i8* %arrayidx14, align 1, !dbg !11052
  %conv15 = zext i8 %7 to i32, !dbg !11052
  %and = and i32 %conv15, 15, !dbg !11054
  %add = add i32 16, %and, !dbg !11055
  store i32 %add, i32* %num_x_electrode, align 4, !dbg !11056
  %8 = load [4 x i8]*, [4 x i8]** %otp.addr, align 8, !dbg !11057
  %arrayidx16 = getelementptr [4 x i8], [4 x i8]* %8, i64 0, !dbg !11057
  %arrayidx17 = getelementptr [4 x i8], [4 x i8]* %arrayidx16, i64 0, i64 2, !dbg !11057
  %9 = load i8, i8* %arrayidx17, align 1, !dbg !11057
  %conv18 = zext i8 %9 to i32, !dbg !11057
  %shr = ashr i32 %conv18, 4, !dbg !11058
  %and19 = and i32 %shr, 15, !dbg !11059
  %add20 = add i32 5, %and19, !dbg !11060
  store i32 %add20, i32* %num_y_electrode, align 4, !dbg !11061
  %10 = load i32, i32* %num_x_electrode, align 4, !dbg !11062
  %sub = sub i32 %10, 1, !dbg !11063
  %mul = mul i32 %sub, 128, !dbg !11064
  %11 = load %struct.alps_data*, %struct.alps_data** %priv.addr, align 8, !dbg !11065
  %x_max = getelementptr inbounds %struct.alps_data, %struct.alps_data* %11, i32 0, i32 14, !dbg !11066
  store i32 %mul, i32* %x_max, align 4, !dbg !11067
  %12 = load i32, i32* %num_y_electrode, align 4, !dbg !11068
  %sub21 = sub i32 %12, 1, !dbg !11069
  %mul22 = mul i32 %sub21, 128, !dbg !11070
  %13 = load %struct.alps_data*, %struct.alps_data** %priv.addr, align 8, !dbg !11071
  %y_max = getelementptr inbounds %struct.alps_data, %struct.alps_data* %13, i32 0, i32 15, !dbg !11072
  store i32 %mul22, i32* %y_max, align 8, !dbg !11073
  %14 = load [4 x i8]*, [4 x i8]** %otp.addr, align 8, !dbg !11074
  %arrayidx23 = getelementptr [4 x i8], [4 x i8]* %14, i64 0, !dbg !11074
  %arrayidx24 = getelementptr [4 x i8], [4 x i8]* %arrayidx23, i64 0, i64 1, !dbg !11074
  %15 = load i8, i8* %arrayidx24, align 1, !dbg !11074
  %conv25 = zext i8 %15 to i32, !dbg !11074
  %and26 = and i32 %conv25, 15, !dbg !11075
  %add27 = add i32 %and26, 37, !dbg !11076
  store i32 %add27, i32* %x_pitch, align 4, !dbg !11077
  %16 = load [4 x i8]*, [4 x i8]** %otp.addr, align 8, !dbg !11078
  %arrayidx28 = getelementptr [4 x i8], [4 x i8]* %16, i64 0, !dbg !11078
  %arrayidx29 = getelementptr [4 x i8], [4 x i8]* %arrayidx28, i64 0, i64 1, !dbg !11078
  %17 = load i8, i8* %arrayidx29, align 1, !dbg !11078
  %conv30 = zext i8 %17 to i32, !dbg !11078
  %shr31 = ashr i32 %conv30, 4, !dbg !11079
  %and32 = and i32 %shr31, 15, !dbg !11080
  %add33 = add i32 %and32, 37, !dbg !11081
  store i32 %add33, i32* %y_pitch, align 4, !dbg !11082
  br label %if.end, !dbg !11083

if.else:                                          ; preds = %land.lhs.true7, %land.lhs.true, %entry
  %18 = load [4 x i8]*, [4 x i8]** %otp.addr, align 8, !dbg !11084
  %arrayidx34 = getelementptr [4 x i8], [4 x i8]* %18, i64 1, !dbg !11084
  %arrayidx35 = getelementptr [4 x i8], [4 x i8]* %arrayidx34, i64 0, i64 0, !dbg !11084
  %19 = load i8, i8* %arrayidx35, align 1, !dbg !11084
  %conv36 = zext i8 %19 to i32, !dbg !11084
  %and37 = and i32 %conv36, 15, !dbg !11086
  %add38 = add i32 7, %and37, !dbg !11087
  store i32 %add38, i32* %num_x_electrode, align 4, !dbg !11088
  %20 = load [4 x i8]*, [4 x i8]** %otp.addr, align 8, !dbg !11089
  %arrayidx39 = getelementptr [4 x i8], [4 x i8]* %20, i64 1, !dbg !11089
  %arrayidx40 = getelementptr [4 x i8], [4 x i8]* %arrayidx39, i64 0, i64 0, !dbg !11089
  %21 = load i8, i8* %arrayidx40, align 1, !dbg !11089
  %conv41 = zext i8 %21 to i32, !dbg !11089
  %shr42 = ashr i32 %conv41, 4, !dbg !11090
  %and43 = and i32 %shr42, 15, !dbg !11091
  %add44 = add i32 7, %and43, !dbg !11092
  store i32 %add44, i32* %num_y_electrode, align 4, !dbg !11093
  %22 = load i32, i32* %num_x_electrode, align 4, !dbg !11094
  %sub45 = sub i32 %22, 1, !dbg !11095
  %mul46 = mul i32 %sub45, 256, !dbg !11096
  %23 = load %struct.alps_data*, %struct.alps_data** %priv.addr, align 8, !dbg !11097
  %x_max47 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %23, i32 0, i32 14, !dbg !11098
  store i32 %mul46, i32* %x_max47, align 4, !dbg !11099
  %24 = load i32, i32* %num_y_electrode, align 4, !dbg !11100
  %sub48 = sub i32 %24, 1, !dbg !11101
  %mul49 = mul i32 %sub48, 256, !dbg !11102
  %25 = load %struct.alps_data*, %struct.alps_data** %priv.addr, align 8, !dbg !11103
  %y_max50 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %25, i32 0, i32 15, !dbg !11104
  store i32 %mul49, i32* %y_max50, align 8, !dbg !11105
  %26 = load [4 x i8]*, [4 x i8]** %otp.addr, align 8, !dbg !11106
  %arrayidx51 = getelementptr [4 x i8], [4 x i8]* %26, i64 1, !dbg !11106
  %arrayidx52 = getelementptr [4 x i8], [4 x i8]* %arrayidx51, i64 0, i64 2, !dbg !11106
  %27 = load i8, i8* %arrayidx52, align 1, !dbg !11106
  %conv53 = zext i8 %27 to i32, !dbg !11106
  %shr54 = ashr i32 %conv53, 2, !dbg !11107
  %and55 = and i32 %shr54, 7, !dbg !11108
  %add56 = add i32 %and55, 50, !dbg !11109
  store i32 %add56, i32* %x_pitch, align 4, !dbg !11110
  %28 = load [4 x i8]*, [4 x i8]** %otp.addr, align 8, !dbg !11111
  %arrayidx57 = getelementptr [4 x i8], [4 x i8]* %28, i64 1, !dbg !11111
  %arrayidx58 = getelementptr [4 x i8], [4 x i8]* %arrayidx57, i64 0, i64 2, !dbg !11111
  %29 = load i8, i8* %arrayidx58, align 1, !dbg !11111
  %conv59 = zext i8 %29 to i32, !dbg !11111
  %shr60 = ashr i32 %conv59, 5, !dbg !11112
  %and61 = and i32 %shr60, 7, !dbg !11113
  %add62 = add i32 %and61, 50, !dbg !11114
  store i32 %add62, i32* %y_pitch, align 4, !dbg !11115
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %30 = load i32, i32* %x_pitch, align 4, !dbg !11116
  %31 = load i32, i32* %num_x_electrode, align 4, !dbg !11117
  %sub63 = sub i32 %31, 1, !dbg !11118
  %mul64 = mul i32 %30, %sub63, !dbg !11119
  store i32 %mul64, i32* %x_phys, align 4, !dbg !11120
  %32 = load i32, i32* %y_pitch, align 4, !dbg !11121
  %33 = load i32, i32* %num_y_electrode, align 4, !dbg !11122
  %sub65 = sub i32 %33, 1, !dbg !11123
  %mul66 = mul i32 %32, %sub65, !dbg !11124
  store i32 %mul66, i32* %y_phys, align 4, !dbg !11125
  %34 = load %struct.alps_data*, %struct.alps_data** %priv.addr, align 8, !dbg !11126
  %x_max67 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %34, i32 0, i32 14, !dbg !11127
  %35 = load i32, i32* %x_max67, align 4, !dbg !11127
  %mul68 = mul i32 %35, 10, !dbg !11128
  %36 = load i32, i32* %x_phys, align 4, !dbg !11129
  %div = sdiv i32 %mul68, %36, !dbg !11130
  %37 = load %struct.alps_data*, %struct.alps_data** %priv.addr, align 8, !dbg !11131
  %x_res = getelementptr inbounds %struct.alps_data, %struct.alps_data* %37, i32 0, i32 18, !dbg !11132
  store i32 %div, i32* %x_res, align 4, !dbg !11133
  %38 = load %struct.alps_data*, %struct.alps_data** %priv.addr, align 8, !dbg !11134
  %y_max69 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %38, i32 0, i32 15, !dbg !11135
  %39 = load i32, i32* %y_max69, align 8, !dbg !11135
  %mul70 = mul i32 %39, 10, !dbg !11136
  %40 = load i32, i32* %y_phys, align 4, !dbg !11137
  %div71 = sdiv i32 %mul70, %40, !dbg !11138
  %41 = load %struct.alps_data*, %struct.alps_data** %priv.addr, align 8, !dbg !11139
  %y_res = getelementptr inbounds %struct.alps_data, %struct.alps_data* %41, i32 0, i32 19, !dbg !11140
  store i32 %div71, i32* %y_res, align 8, !dbg !11141
  ret i32 0, !dbg !11142
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @alps_update_btn_info_ss4_v2([4 x i8]* %otp, %struct.alps_data* %priv) #0 !dbg !11143 {
entry:
  %otp.addr = alloca [4 x i8]*, align 8
  %priv.addr = alloca %struct.alps_data*, align 8
  %is_btnless = alloca i8, align 1
  store [4 x i8]* %otp, [4 x i8]** %otp.addr, align 8
  call void @llvm.dbg.declare(metadata [4 x i8]** %otp.addr, metadata !11144, metadata !DIExpression()), !dbg !11145
  store %struct.alps_data* %priv, %struct.alps_data** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.alps_data** %priv.addr, metadata !11146, metadata !DIExpression()), !dbg !11147
  call void @llvm.dbg.declare(metadata i8* %is_btnless, metadata !11148, metadata !DIExpression()), !dbg !11149
  %0 = load %struct.alps_data*, %struct.alps_data** %priv.addr, align 8, !dbg !11150
  %dev_id = getelementptr inbounds %struct.alps_data, %struct.alps_data* %0, i32 0, i32 11, !dbg !11150
  %arrayidx = getelementptr [3 x i8], [3 x i8]* %dev_id, i64 0, i64 0, !dbg !11150
  %1 = load i8, i8* %arrayidx, align 8, !dbg !11150
  %conv = zext i8 %1 to i32, !dbg !11150
  %cmp = icmp eq i32 %conv, 115, !dbg !11150
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !11150

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.alps_data*, %struct.alps_data** %priv.addr, align 8, !dbg !11150
  %dev_id2 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %2, i32 0, i32 11, !dbg !11150
  %arrayidx3 = getelementptr [3 x i8], [3 x i8]* %dev_id2, i64 0, i64 1, !dbg !11150
  %3 = load i8, i8* %arrayidx3, align 1, !dbg !11150
  %conv4 = zext i8 %3 to i32, !dbg !11150
  %cmp5 = icmp eq i32 %conv4, 3, !dbg !11150
  br i1 %cmp5, label %land.lhs.true7, label %if.else, !dbg !11150

land.lhs.true7:                                   ; preds = %land.lhs.true
  %4 = load %struct.alps_data*, %struct.alps_data** %priv.addr, align 8, !dbg !11150
  %dev_id8 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %4, i32 0, i32 11, !dbg !11150
  %arrayidx9 = getelementptr [3 x i8], [3 x i8]* %dev_id8, i64 0, i64 2, !dbg !11150
  %5 = load i8, i8* %arrayidx9, align 2, !dbg !11150
  %conv10 = zext i8 %5 to i32, !dbg !11150
  %cmp11 = icmp eq i32 %conv10, 40, !dbg !11150
  br i1 %cmp11, label %if.then, label %if.else, !dbg !11152

if.then:                                          ; preds = %land.lhs.true7
  %6 = load [4 x i8]*, [4 x i8]** %otp.addr, align 8, !dbg !11153
  %arrayidx13 = getelementptr [4 x i8], [4 x i8]* %6, i64 1, !dbg !11153
  %arrayidx14 = getelementptr [4 x i8], [4 x i8]* %arrayidx13, i64 0, i64 0, !dbg !11153
  %7 = load i8, i8* %arrayidx14, align 1, !dbg !11153
  %conv15 = zext i8 %7 to i32, !dbg !11153
  %shr = ashr i32 %conv15, 1, !dbg !11154
  %and = and i32 %shr, 1, !dbg !11155
  %conv16 = trunc i32 %and to i8, !dbg !11156
  store i8 %conv16, i8* %is_btnless, align 1, !dbg !11157
  br label %if.end, !dbg !11158

if.else:                                          ; preds = %land.lhs.true7, %land.lhs.true, %entry
  %8 = load [4 x i8]*, [4 x i8]** %otp.addr, align 8, !dbg !11159
  %arrayidx17 = getelementptr [4 x i8], [4 x i8]* %8, i64 1, !dbg !11159
  %arrayidx18 = getelementptr [4 x i8], [4 x i8]* %arrayidx17, i64 0, i64 1, !dbg !11159
  %9 = load i8, i8* %arrayidx18, align 1, !dbg !11159
  %conv19 = zext i8 %9 to i32, !dbg !11159
  %shr20 = ashr i32 %conv19, 3, !dbg !11160
  %and21 = and i32 %shr20, 1, !dbg !11161
  %conv22 = trunc i32 %and21 to i8, !dbg !11162
  store i8 %conv22, i8* %is_btnless, align 1, !dbg !11163
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %10 = load i8, i8* %is_btnless, align 1, !dbg !11164
  %tobool = icmp ne i8 %10, 0, !dbg !11164
  br i1 %tobool, label %if.then23, label %if.end24, !dbg !11166

if.then23:                                        ; preds = %if.end
  %11 = load %struct.alps_data*, %struct.alps_data** %priv.addr, align 8, !dbg !11167
  %flags = getelementptr inbounds %struct.alps_data, %struct.alps_data* %11, i32 0, i32 13, !dbg !11168
  %12 = load i32, i32* %flags, align 8, !dbg !11169
  %or = or i32 %12, 512, !dbg !11169
  store i32 %or, i32* %flags, align 8, !dbg !11169
  br label %if.end24, !dbg !11167

if.end24:                                         ; preds = %if.then23, %if.end
  ret i32 0, !dbg !11170
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @alps_update_dual_info_ss4_v2([4 x i8]* %otp, %struct.alps_data* %priv, %struct.psmouse* %psmouse) #0 !dbg !11171 {
entry:
  %otp.addr = alloca [4 x i8]*, align 8
  %priv.addr = alloca %struct.alps_data*, align 8
  %psmouse.addr = alloca %struct.psmouse*, align 8
  %is_dual = alloca i8, align 1
  %reg_val = alloca i32, align 4
  %ps2dev = alloca %struct.ps2dev*, align 8
  store [4 x i8]* %otp, [4 x i8]** %otp.addr, align 8
  call void @llvm.dbg.declare(metadata [4 x i8]** %otp.addr, metadata !11174, metadata !DIExpression()), !dbg !11175
  store %struct.alps_data* %priv, %struct.alps_data** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.alps_data** %priv.addr, metadata !11176, metadata !DIExpression()), !dbg !11177
  store %struct.psmouse* %psmouse, %struct.psmouse** %psmouse.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.psmouse** %psmouse.addr, metadata !11178, metadata !DIExpression()), !dbg !11179
  call void @llvm.dbg.declare(metadata i8* %is_dual, metadata !11180, metadata !DIExpression()), !dbg !11181
  store i8 0, i8* %is_dual, align 1, !dbg !11181
  call void @llvm.dbg.declare(metadata i32* %reg_val, metadata !11182, metadata !DIExpression()), !dbg !11183
  store i32 0, i32* %reg_val, align 4, !dbg !11183
  call void @llvm.dbg.declare(metadata %struct.ps2dev** %ps2dev, metadata !11184, metadata !DIExpression()), !dbg !11185
  %0 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !11186
  %ps2dev1 = getelementptr inbounds %struct.psmouse, %struct.psmouse* %0, i32 0, i32 2, !dbg !11187
  store %struct.ps2dev* %ps2dev1, %struct.ps2dev** %ps2dev, align 8, !dbg !11185
  %1 = load %struct.alps_data*, %struct.alps_data** %priv.addr, align 8, !dbg !11188
  %dev_id = getelementptr inbounds %struct.alps_data, %struct.alps_data* %1, i32 0, i32 11, !dbg !11188
  %arrayidx = getelementptr [3 x i8], [3 x i8]* %dev_id, i64 0, i64 0, !dbg !11188
  %2 = load i8, i8* %arrayidx, align 8, !dbg !11188
  %conv = zext i8 %2 to i32, !dbg !11188
  %cmp = icmp eq i32 %conv, 115, !dbg !11188
  br i1 %cmp, label %land.lhs.true, label %if.end36, !dbg !11188

land.lhs.true:                                    ; preds = %entry
  %3 = load %struct.alps_data*, %struct.alps_data** %priv.addr, align 8, !dbg !11188
  %dev_id3 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %3, i32 0, i32 11, !dbg !11188
  %arrayidx4 = getelementptr [3 x i8], [3 x i8]* %dev_id3, i64 0, i64 1, !dbg !11188
  %4 = load i8, i8* %arrayidx4, align 1, !dbg !11188
  %conv5 = zext i8 %4 to i32, !dbg !11188
  %cmp6 = icmp eq i32 %conv5, 3, !dbg !11188
  br i1 %cmp6, label %land.lhs.true8, label %if.end36, !dbg !11188

land.lhs.true8:                                   ; preds = %land.lhs.true
  %5 = load %struct.alps_data*, %struct.alps_data** %priv.addr, align 8, !dbg !11188
  %dev_id9 = getelementptr inbounds %struct.alps_data, %struct.alps_data* %5, i32 0, i32 11, !dbg !11188
  %arrayidx10 = getelementptr [3 x i8], [3 x i8]* %dev_id9, i64 0, i64 2, !dbg !11188
  %6 = load i8, i8* %arrayidx10, align 2, !dbg !11188
  %conv11 = zext i8 %6 to i32, !dbg !11188
  %cmp12 = icmp eq i32 %conv11, 40, !dbg !11188
  br i1 %cmp12, label %if.then, label %if.end36, !dbg !11190

if.then:                                          ; preds = %land.lhs.true8
  %7 = load [4 x i8]*, [4 x i8]** %otp.addr, align 8, !dbg !11191
  %arrayidx14 = getelementptr [4 x i8], [4 x i8]* %7, i64 0, !dbg !11191
  %arrayidx15 = getelementptr [4 x i8], [4 x i8]* %arrayidx14, i64 0, i64 0, !dbg !11191
  %8 = load i8, i8* %arrayidx15, align 1, !dbg !11191
  %conv16 = zext i8 %8 to i32, !dbg !11191
  %shr = ashr i32 %conv16, 4, !dbg !11193
  %and = and i32 %shr, 1, !dbg !11194
  %tobool = icmp ne i32 %and, 0, !dbg !11195
  %frombool = zext i1 %tobool to i8, !dbg !11196
  store i8 %frombool, i8* %is_dual, align 1, !dbg !11196
  %9 = load i8, i8* %is_dual, align 1, !dbg !11197
  %tobool17 = trunc i8 %9 to i1, !dbg !11197
  br i1 %tobool17, label %if.end35, label %if.then18, !dbg !11199

if.then18:                                        ; preds = %if.then
  %10 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !11200
  %call = call i32 @alps_exit_command_mode(%struct.psmouse* %10) #10, !dbg !11203
  %cmp19 = icmp eq i32 %call, 0, !dbg !11204
  br i1 %cmp19, label %land.lhs.true21, label %if.end, !dbg !11205

land.lhs.true21:                                  ; preds = %if.then18
  %11 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !11206
  %call22 = call i32 @alps_enter_command_mode(%struct.psmouse* %11) #10, !dbg !11207
  %cmp23 = icmp eq i32 %call22, 0, !dbg !11208
  br i1 %cmp23, label %if.then25, label %if.end, !dbg !11209

if.then25:                                        ; preds = %land.lhs.true21
  %12 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !11210
  %call26 = call i32 @alps_command_mode_read_reg(%struct.psmouse* %12, i32 215) #10, !dbg !11212
  store i32 %call26, i32* %reg_val, align 4, !dbg !11213
  br label %if.end, !dbg !11214

if.end:                                           ; preds = %if.then25, %land.lhs.true21, %if.then18
  %13 = load %struct.psmouse*, %struct.psmouse** %psmouse.addr, align 8, !dbg !11215
  %call27 = call i32 @alps_exit_command_mode(%struct.psmouse* %13) #10, !dbg !11216
  %14 = load %struct.ps2dev*, %struct.ps2dev** %ps2dev, align 8, !dbg !11217
  %call28 = call i32 @ps2_command(%struct.ps2dev* %14, i8* null, i32 244) #10, !dbg !11218
  %15 = load i32, i32* %reg_val, align 4, !dbg !11219
  %cmp29 = icmp eq i32 %15, 12, !dbg !11221
  br i1 %cmp29, label %if.then33, label %lor.lhs.false, !dbg !11222

lor.lhs.false:                                    ; preds = %if.end
  %16 = load i32, i32* %reg_val, align 4, !dbg !11223
  %cmp31 = icmp eq i32 %16, 29, !dbg !11224
  br i1 %cmp31, label %if.then33, label %if.end34, !dbg !11225

if.then33:                                        ; preds = %lor.lhs.false, %if.end
  store i8 1, i8* %is_dual, align 1, !dbg !11226
  br label %if.end34, !dbg !11227

if.end34:                                         ; preds = %if.then33, %lor.lhs.false
  br label %if.end35, !dbg !11228

if.end35:                                         ; preds = %if.end34, %if.then
  br label %if.end36, !dbg !11229

if.end36:                                         ; preds = %if.end35, %land.lhs.true8, %land.lhs.true, %entry
  %17 = load i8, i8* %is_dual, align 1, !dbg !11230
  %tobool37 = trunc i8 %17 to i1, !dbg !11230
  br i1 %tobool37, label %if.then38, label %if.end39, !dbg !11232

if.then38:                                        ; preds = %if.end36
  %18 = load %struct.alps_data*, %struct.alps_data** %priv.addr, align 8, !dbg !11233
  %flags = getelementptr inbounds %struct.alps_data, %struct.alps_data* %18, i32 0, i32 13, !dbg !11234
  %19 = load i32, i32* %flags, align 8, !dbg !11235
  %or = or i32 %19, 1026, !dbg !11235
  store i32 %or, i32* %flags, align 8, !dbg !11235
  br label %if.end39, !dbg !11233

if.end39:                                         ; preds = %if.then38, %if.end36
  ret i32 0, !dbg !11236
}

; Function Attrs: noredzone
declare dso_local noalias i8* @__kmalloc(i64, i32) #2

; Function Attrs: nounwind willreturn
declare void @llvm.assume(i1) #8

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @get_order(i64 %size) #9 !dbg !11237 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !11241, metadata !DIExpression()), !dbg !11245
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !11247, metadata !DIExpression()), !dbg !11248
  %retval = alloca i32, align 4
  %size.addr = alloca i64, align 8
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !11249, metadata !DIExpression()), !dbg !11250
  %0 = load i64, i64* %size.addr, align 8, !dbg !11251
  %1 = call i1 @llvm.is.constant.i64(i64 %0), !dbg !11253
  br i1 %1, label %if.then, label %if.end447, !dbg !11254

if.then:                                          ; preds = %entry
  %2 = load i64, i64* %size.addr, align 8, !dbg !11255
  %tobool = icmp ne i64 %2, 0, !dbg !11255
  br i1 %tobool, label %if.end, label %if.then1, !dbg !11258

if.then1:                                         ; preds = %if.then
  store i32 52, i32* %retval, align 4, !dbg !11259
  br label %return, !dbg !11259

if.end:                                           ; preds = %if.then
  %3 = load i64, i64* %size.addr, align 8, !dbg !11260
  %cmp = icmp ult i64 %3, 4096, !dbg !11262
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !11263

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !11264
  br label %return, !dbg !11264

if.end3:                                          ; preds = %if.end
  %4 = load i64, i64* %size.addr, align 8, !dbg !11265
  %sub = sub i64 %4, 1, !dbg !11265
  %5 = call i1 @llvm.is.constant.i64(i64 %sub), !dbg !11265
  br i1 %5, label %cond.true, label %cond.false442, !dbg !11265

cond.true:                                        ; preds = %if.end3
  %6 = load i64, i64* %size.addr, align 8, !dbg !11265
  %sub4 = sub i64 %6, 1, !dbg !11265
  %7 = call i1 @llvm.is.constant.i64(i64 %sub4), !dbg !11265
  br i1 %7, label %cond.true5, label %cond.false439, !dbg !11265

cond.true5:                                       ; preds = %cond.true
  %8 = load i64, i64* %size.addr, align 8, !dbg !11265
  %sub6 = sub i64 %8, 1, !dbg !11265
  %cmp7 = icmp ult i64 %sub6, 2, !dbg !11265
  br i1 %cmp7, label %cond.true8, label %cond.false, !dbg !11265

cond.true8:                                       ; preds = %cond.true5
  br label %cond.end437, !dbg !11265

cond.false:                                       ; preds = %cond.true5
  %9 = load i64, i64* %size.addr, align 8, !dbg !11265
  %sub9 = sub i64 %9, 1, !dbg !11265
  %and = and i64 %sub9, -9223372036854775808, !dbg !11265
  %tobool10 = icmp ne i64 %and, 0, !dbg !11265
  br i1 %tobool10, label %cond.true11, label %cond.false12, !dbg !11265

cond.true11:                                      ; preds = %cond.false
  br label %cond.end435, !dbg !11265

cond.false12:                                     ; preds = %cond.false
  %10 = load i64, i64* %size.addr, align 8, !dbg !11265
  %sub13 = sub i64 %10, 1, !dbg !11265
  %and14 = and i64 %sub13, 4611686018427387904, !dbg !11265
  %tobool15 = icmp ne i64 %and14, 0, !dbg !11265
  br i1 %tobool15, label %cond.true16, label %cond.false17, !dbg !11265

cond.true16:                                      ; preds = %cond.false12
  br label %cond.end433, !dbg !11265

cond.false17:                                     ; preds = %cond.false12
  %11 = load i64, i64* %size.addr, align 8, !dbg !11265
  %sub18 = sub i64 %11, 1, !dbg !11265
  %and19 = and i64 %sub18, 2305843009213693952, !dbg !11265
  %tobool20 = icmp ne i64 %and19, 0, !dbg !11265
  br i1 %tobool20, label %cond.true21, label %cond.false22, !dbg !11265

cond.true21:                                      ; preds = %cond.false17
  br label %cond.end431, !dbg !11265

cond.false22:                                     ; preds = %cond.false17
  %12 = load i64, i64* %size.addr, align 8, !dbg !11265
  %sub23 = sub i64 %12, 1, !dbg !11265
  %and24 = and i64 %sub23, 1152921504606846976, !dbg !11265
  %tobool25 = icmp ne i64 %and24, 0, !dbg !11265
  br i1 %tobool25, label %cond.true26, label %cond.false27, !dbg !11265

cond.true26:                                      ; preds = %cond.false22
  br label %cond.end429, !dbg !11265

cond.false27:                                     ; preds = %cond.false22
  %13 = load i64, i64* %size.addr, align 8, !dbg !11265
  %sub28 = sub i64 %13, 1, !dbg !11265
  %and29 = and i64 %sub28, 576460752303423488, !dbg !11265
  %tobool30 = icmp ne i64 %and29, 0, !dbg !11265
  br i1 %tobool30, label %cond.true31, label %cond.false32, !dbg !11265

cond.true31:                                      ; preds = %cond.false27
  br label %cond.end427, !dbg !11265

cond.false32:                                     ; preds = %cond.false27
  %14 = load i64, i64* %size.addr, align 8, !dbg !11265
  %sub33 = sub i64 %14, 1, !dbg !11265
  %and34 = and i64 %sub33, 288230376151711744, !dbg !11265
  %tobool35 = icmp ne i64 %and34, 0, !dbg !11265
  br i1 %tobool35, label %cond.true36, label %cond.false37, !dbg !11265

cond.true36:                                      ; preds = %cond.false32
  br label %cond.end425, !dbg !11265

cond.false37:                                     ; preds = %cond.false32
  %15 = load i64, i64* %size.addr, align 8, !dbg !11265
  %sub38 = sub i64 %15, 1, !dbg !11265
  %and39 = and i64 %sub38, 144115188075855872, !dbg !11265
  %tobool40 = icmp ne i64 %and39, 0, !dbg !11265
  br i1 %tobool40, label %cond.true41, label %cond.false42, !dbg !11265

cond.true41:                                      ; preds = %cond.false37
  br label %cond.end423, !dbg !11265

cond.false42:                                     ; preds = %cond.false37
  %16 = load i64, i64* %size.addr, align 8, !dbg !11265
  %sub43 = sub i64 %16, 1, !dbg !11265
  %and44 = and i64 %sub43, 72057594037927936, !dbg !11265
  %tobool45 = icmp ne i64 %and44, 0, !dbg !11265
  br i1 %tobool45, label %cond.true46, label %cond.false47, !dbg !11265

cond.true46:                                      ; preds = %cond.false42
  br label %cond.end421, !dbg !11265

cond.false47:                                     ; preds = %cond.false42
  %17 = load i64, i64* %size.addr, align 8, !dbg !11265
  %sub48 = sub i64 %17, 1, !dbg !11265
  %and49 = and i64 %sub48, 36028797018963968, !dbg !11265
  %tobool50 = icmp ne i64 %and49, 0, !dbg !11265
  br i1 %tobool50, label %cond.true51, label %cond.false52, !dbg !11265

cond.true51:                                      ; preds = %cond.false47
  br label %cond.end419, !dbg !11265

cond.false52:                                     ; preds = %cond.false47
  %18 = load i64, i64* %size.addr, align 8, !dbg !11265
  %sub53 = sub i64 %18, 1, !dbg !11265
  %and54 = and i64 %sub53, 18014398509481984, !dbg !11265
  %tobool55 = icmp ne i64 %and54, 0, !dbg !11265
  br i1 %tobool55, label %cond.true56, label %cond.false57, !dbg !11265

cond.true56:                                      ; preds = %cond.false52
  br label %cond.end417, !dbg !11265

cond.false57:                                     ; preds = %cond.false52
  %19 = load i64, i64* %size.addr, align 8, !dbg !11265
  %sub58 = sub i64 %19, 1, !dbg !11265
  %and59 = and i64 %sub58, 9007199254740992, !dbg !11265
  %tobool60 = icmp ne i64 %and59, 0, !dbg !11265
  br i1 %tobool60, label %cond.true61, label %cond.false62, !dbg !11265

cond.true61:                                      ; preds = %cond.false57
  br label %cond.end415, !dbg !11265

cond.false62:                                     ; preds = %cond.false57
  %20 = load i64, i64* %size.addr, align 8, !dbg !11265
  %sub63 = sub i64 %20, 1, !dbg !11265
  %and64 = and i64 %sub63, 4503599627370496, !dbg !11265
  %tobool65 = icmp ne i64 %and64, 0, !dbg !11265
  br i1 %tobool65, label %cond.true66, label %cond.false67, !dbg !11265

cond.true66:                                      ; preds = %cond.false62
  br label %cond.end413, !dbg !11265

cond.false67:                                     ; preds = %cond.false62
  %21 = load i64, i64* %size.addr, align 8, !dbg !11265
  %sub68 = sub i64 %21, 1, !dbg !11265
  %and69 = and i64 %sub68, 2251799813685248, !dbg !11265
  %tobool70 = icmp ne i64 %and69, 0, !dbg !11265
  br i1 %tobool70, label %cond.true71, label %cond.false72, !dbg !11265

cond.true71:                                      ; preds = %cond.false67
  br label %cond.end411, !dbg !11265

cond.false72:                                     ; preds = %cond.false67
  %22 = load i64, i64* %size.addr, align 8, !dbg !11265
  %sub73 = sub i64 %22, 1, !dbg !11265
  %and74 = and i64 %sub73, 1125899906842624, !dbg !11265
  %tobool75 = icmp ne i64 %and74, 0, !dbg !11265
  br i1 %tobool75, label %cond.true76, label %cond.false77, !dbg !11265

cond.true76:                                      ; preds = %cond.false72
  br label %cond.end409, !dbg !11265

cond.false77:                                     ; preds = %cond.false72
  %23 = load i64, i64* %size.addr, align 8, !dbg !11265
  %sub78 = sub i64 %23, 1, !dbg !11265
  %and79 = and i64 %sub78, 562949953421312, !dbg !11265
  %tobool80 = icmp ne i64 %and79, 0, !dbg !11265
  br i1 %tobool80, label %cond.true81, label %cond.false82, !dbg !11265

cond.true81:                                      ; preds = %cond.false77
  br label %cond.end407, !dbg !11265

cond.false82:                                     ; preds = %cond.false77
  %24 = load i64, i64* %size.addr, align 8, !dbg !11265
  %sub83 = sub i64 %24, 1, !dbg !11265
  %and84 = and i64 %sub83, 281474976710656, !dbg !11265
  %tobool85 = icmp ne i64 %and84, 0, !dbg !11265
  br i1 %tobool85, label %cond.true86, label %cond.false87, !dbg !11265

cond.true86:                                      ; preds = %cond.false82
  br label %cond.end405, !dbg !11265

cond.false87:                                     ; preds = %cond.false82
  %25 = load i64, i64* %size.addr, align 8, !dbg !11265
  %sub88 = sub i64 %25, 1, !dbg !11265
  %and89 = and i64 %sub88, 140737488355328, !dbg !11265
  %tobool90 = icmp ne i64 %and89, 0, !dbg !11265
  br i1 %tobool90, label %cond.true91, label %cond.false92, !dbg !11265

cond.true91:                                      ; preds = %cond.false87
  br label %cond.end403, !dbg !11265

cond.false92:                                     ; preds = %cond.false87
  %26 = load i64, i64* %size.addr, align 8, !dbg !11265
  %sub93 = sub i64 %26, 1, !dbg !11265
  %and94 = and i64 %sub93, 70368744177664, !dbg !11265
  %tobool95 = icmp ne i64 %and94, 0, !dbg !11265
  br i1 %tobool95, label %cond.true96, label %cond.false97, !dbg !11265

cond.true96:                                      ; preds = %cond.false92
  br label %cond.end401, !dbg !11265

cond.false97:                                     ; preds = %cond.false92
  %27 = load i64, i64* %size.addr, align 8, !dbg !11265
  %sub98 = sub i64 %27, 1, !dbg !11265
  %and99 = and i64 %sub98, 35184372088832, !dbg !11265
  %tobool100 = icmp ne i64 %and99, 0, !dbg !11265
  br i1 %tobool100, label %cond.true101, label %cond.false102, !dbg !11265

cond.true101:                                     ; preds = %cond.false97
  br label %cond.end399, !dbg !11265

cond.false102:                                    ; preds = %cond.false97
  %28 = load i64, i64* %size.addr, align 8, !dbg !11265
  %sub103 = sub i64 %28, 1, !dbg !11265
  %and104 = and i64 %sub103, 17592186044416, !dbg !11265
  %tobool105 = icmp ne i64 %and104, 0, !dbg !11265
  br i1 %tobool105, label %cond.true106, label %cond.false107, !dbg !11265

cond.true106:                                     ; preds = %cond.false102
  br label %cond.end397, !dbg !11265

cond.false107:                                    ; preds = %cond.false102
  %29 = load i64, i64* %size.addr, align 8, !dbg !11265
  %sub108 = sub i64 %29, 1, !dbg !11265
  %and109 = and i64 %sub108, 8796093022208, !dbg !11265
  %tobool110 = icmp ne i64 %and109, 0, !dbg !11265
  br i1 %tobool110, label %cond.true111, label %cond.false112, !dbg !11265

cond.true111:                                     ; preds = %cond.false107
  br label %cond.end395, !dbg !11265

cond.false112:                                    ; preds = %cond.false107
  %30 = load i64, i64* %size.addr, align 8, !dbg !11265
  %sub113 = sub i64 %30, 1, !dbg !11265
  %and114 = and i64 %sub113, 4398046511104, !dbg !11265
  %tobool115 = icmp ne i64 %and114, 0, !dbg !11265
  br i1 %tobool115, label %cond.true116, label %cond.false117, !dbg !11265

cond.true116:                                     ; preds = %cond.false112
  br label %cond.end393, !dbg !11265

cond.false117:                                    ; preds = %cond.false112
  %31 = load i64, i64* %size.addr, align 8, !dbg !11265
  %sub118 = sub i64 %31, 1, !dbg !11265
  %and119 = and i64 %sub118, 2199023255552, !dbg !11265
  %tobool120 = icmp ne i64 %and119, 0, !dbg !11265
  br i1 %tobool120, label %cond.true121, label %cond.false122, !dbg !11265

cond.true121:                                     ; preds = %cond.false117
  br label %cond.end391, !dbg !11265

cond.false122:                                    ; preds = %cond.false117
  %32 = load i64, i64* %size.addr, align 8, !dbg !11265
  %sub123 = sub i64 %32, 1, !dbg !11265
  %and124 = and i64 %sub123, 1099511627776, !dbg !11265
  %tobool125 = icmp ne i64 %and124, 0, !dbg !11265
  br i1 %tobool125, label %cond.true126, label %cond.false127, !dbg !11265

cond.true126:                                     ; preds = %cond.false122
  br label %cond.end389, !dbg !11265

cond.false127:                                    ; preds = %cond.false122
  %33 = load i64, i64* %size.addr, align 8, !dbg !11265
  %sub128 = sub i64 %33, 1, !dbg !11265
  %and129 = and i64 %sub128, 549755813888, !dbg !11265
  %tobool130 = icmp ne i64 %and129, 0, !dbg !11265
  br i1 %tobool130, label %cond.true131, label %cond.false132, !dbg !11265

cond.true131:                                     ; preds = %cond.false127
  br label %cond.end387, !dbg !11265

cond.false132:                                    ; preds = %cond.false127
  %34 = load i64, i64* %size.addr, align 8, !dbg !11265
  %sub133 = sub i64 %34, 1, !dbg !11265
  %and134 = and i64 %sub133, 274877906944, !dbg !11265
  %tobool135 = icmp ne i64 %and134, 0, !dbg !11265
  br i1 %tobool135, label %cond.true136, label %cond.false137, !dbg !11265

cond.true136:                                     ; preds = %cond.false132
  br label %cond.end385, !dbg !11265

cond.false137:                                    ; preds = %cond.false132
  %35 = load i64, i64* %size.addr, align 8, !dbg !11265
  %sub138 = sub i64 %35, 1, !dbg !11265
  %and139 = and i64 %sub138, 137438953472, !dbg !11265
  %tobool140 = icmp ne i64 %and139, 0, !dbg !11265
  br i1 %tobool140, label %cond.true141, label %cond.false142, !dbg !11265

cond.true141:                                     ; preds = %cond.false137
  br label %cond.end383, !dbg !11265

cond.false142:                                    ; preds = %cond.false137
  %36 = load i64, i64* %size.addr, align 8, !dbg !11265
  %sub143 = sub i64 %36, 1, !dbg !11265
  %and144 = and i64 %sub143, 68719476736, !dbg !11265
  %tobool145 = icmp ne i64 %and144, 0, !dbg !11265
  br i1 %tobool145, label %cond.true146, label %cond.false147, !dbg !11265

cond.true146:                                     ; preds = %cond.false142
  br label %cond.end381, !dbg !11265

cond.false147:                                    ; preds = %cond.false142
  %37 = load i64, i64* %size.addr, align 8, !dbg !11265
  %sub148 = sub i64 %37, 1, !dbg !11265
  %and149 = and i64 %sub148, 34359738368, !dbg !11265
  %tobool150 = icmp ne i64 %and149, 0, !dbg !11265
  br i1 %tobool150, label %cond.true151, label %cond.false152, !dbg !11265

cond.true151:                                     ; preds = %cond.false147
  br label %cond.end379, !dbg !11265

cond.false152:                                    ; preds = %cond.false147
  %38 = load i64, i64* %size.addr, align 8, !dbg !11265
  %sub153 = sub i64 %38, 1, !dbg !11265
  %and154 = and i64 %sub153, 17179869184, !dbg !11265
  %tobool155 = icmp ne i64 %and154, 0, !dbg !11265
  br i1 %tobool155, label %cond.true156, label %cond.false157, !dbg !11265

cond.true156:                                     ; preds = %cond.false152
  br label %cond.end377, !dbg !11265

cond.false157:                                    ; preds = %cond.false152
  %39 = load i64, i64* %size.addr, align 8, !dbg !11265
  %sub158 = sub i64 %39, 1, !dbg !11265
  %and159 = and i64 %sub158, 8589934592, !dbg !11265
  %tobool160 = icmp ne i64 %and159, 0, !dbg !11265
  br i1 %tobool160, label %cond.true161, label %cond.false162, !dbg !11265

cond.true161:                                     ; preds = %cond.false157
  br label %cond.end375, !dbg !11265

cond.false162:                                    ; preds = %cond.false157
  %40 = load i64, i64* %size.addr, align 8, !dbg !11265
  %sub163 = sub i64 %40, 1, !dbg !11265
  %and164 = and i64 %sub163, 4294967296, !dbg !11265
  %tobool165 = icmp ne i64 %and164, 0, !dbg !11265
  br i1 %tobool165, label %cond.true166, label %cond.false167, !dbg !11265

cond.true166:                                     ; preds = %cond.false162
  br label %cond.end373, !dbg !11265

cond.false167:                                    ; preds = %cond.false162
  %41 = load i64, i64* %size.addr, align 8, !dbg !11265
  %sub168 = sub i64 %41, 1, !dbg !11265
  %and169 = and i64 %sub168, 2147483648, !dbg !11265
  %tobool170 = icmp ne i64 %and169, 0, !dbg !11265
  br i1 %tobool170, label %cond.true171, label %cond.false172, !dbg !11265

cond.true171:                                     ; preds = %cond.false167
  br label %cond.end371, !dbg !11265

cond.false172:                                    ; preds = %cond.false167
  %42 = load i64, i64* %size.addr, align 8, !dbg !11265
  %sub173 = sub i64 %42, 1, !dbg !11265
  %and174 = and i64 %sub173, 1073741824, !dbg !11265
  %tobool175 = icmp ne i64 %and174, 0, !dbg !11265
  br i1 %tobool175, label %cond.true176, label %cond.false177, !dbg !11265

cond.true176:                                     ; preds = %cond.false172
  br label %cond.end369, !dbg !11265

cond.false177:                                    ; preds = %cond.false172
  %43 = load i64, i64* %size.addr, align 8, !dbg !11265
  %sub178 = sub i64 %43, 1, !dbg !11265
  %and179 = and i64 %sub178, 536870912, !dbg !11265
  %tobool180 = icmp ne i64 %and179, 0, !dbg !11265
  br i1 %tobool180, label %cond.true181, label %cond.false182, !dbg !11265

cond.true181:                                     ; preds = %cond.false177
  br label %cond.end367, !dbg !11265

cond.false182:                                    ; preds = %cond.false177
  %44 = load i64, i64* %size.addr, align 8, !dbg !11265
  %sub183 = sub i64 %44, 1, !dbg !11265
  %and184 = and i64 %sub183, 268435456, !dbg !11265
  %tobool185 = icmp ne i64 %and184, 0, !dbg !11265
  br i1 %tobool185, label %cond.true186, label %cond.false187, !dbg !11265

cond.true186:                                     ; preds = %cond.false182
  br label %cond.end365, !dbg !11265

cond.false187:                                    ; preds = %cond.false182
  %45 = load i64, i64* %size.addr, align 8, !dbg !11265
  %sub188 = sub i64 %45, 1, !dbg !11265
  %and189 = and i64 %sub188, 134217728, !dbg !11265
  %tobool190 = icmp ne i64 %and189, 0, !dbg !11265
  br i1 %tobool190, label %cond.true191, label %cond.false192, !dbg !11265

cond.true191:                                     ; preds = %cond.false187
  br label %cond.end363, !dbg !11265

cond.false192:                                    ; preds = %cond.false187
  %46 = load i64, i64* %size.addr, align 8, !dbg !11265
  %sub193 = sub i64 %46, 1, !dbg !11265
  %and194 = and i64 %sub193, 67108864, !dbg !11265
  %tobool195 = icmp ne i64 %and194, 0, !dbg !11265
  br i1 %tobool195, label %cond.true196, label %cond.false197, !dbg !11265

cond.true196:                                     ; preds = %cond.false192
  br label %cond.end361, !dbg !11265

cond.false197:                                    ; preds = %cond.false192
  %47 = load i64, i64* %size.addr, align 8, !dbg !11265
  %sub198 = sub i64 %47, 1, !dbg !11265
  %and199 = and i64 %sub198, 33554432, !dbg !11265
  %tobool200 = icmp ne i64 %and199, 0, !dbg !11265
  br i1 %tobool200, label %cond.true201, label %cond.false202, !dbg !11265

cond.true201:                                     ; preds = %cond.false197
  br label %cond.end359, !dbg !11265

cond.false202:                                    ; preds = %cond.false197
  %48 = load i64, i64* %size.addr, align 8, !dbg !11265
  %sub203 = sub i64 %48, 1, !dbg !11265
  %and204 = and i64 %sub203, 16777216, !dbg !11265
  %tobool205 = icmp ne i64 %and204, 0, !dbg !11265
  br i1 %tobool205, label %cond.true206, label %cond.false207, !dbg !11265

cond.true206:                                     ; preds = %cond.false202
  br label %cond.end357, !dbg !11265

cond.false207:                                    ; preds = %cond.false202
  %49 = load i64, i64* %size.addr, align 8, !dbg !11265
  %sub208 = sub i64 %49, 1, !dbg !11265
  %and209 = and i64 %sub208, 8388608, !dbg !11265
  %tobool210 = icmp ne i64 %and209, 0, !dbg !11265
  br i1 %tobool210, label %cond.true211, label %cond.false212, !dbg !11265

cond.true211:                                     ; preds = %cond.false207
  br label %cond.end355, !dbg !11265

cond.false212:                                    ; preds = %cond.false207
  %50 = load i64, i64* %size.addr, align 8, !dbg !11265
  %sub213 = sub i64 %50, 1, !dbg !11265
  %and214 = and i64 %sub213, 4194304, !dbg !11265
  %tobool215 = icmp ne i64 %and214, 0, !dbg !11265
  br i1 %tobool215, label %cond.true216, label %cond.false217, !dbg !11265

cond.true216:                                     ; preds = %cond.false212
  br label %cond.end353, !dbg !11265

cond.false217:                                    ; preds = %cond.false212
  %51 = load i64, i64* %size.addr, align 8, !dbg !11265
  %sub218 = sub i64 %51, 1, !dbg !11265
  %and219 = and i64 %sub218, 2097152, !dbg !11265
  %tobool220 = icmp ne i64 %and219, 0, !dbg !11265
  br i1 %tobool220, label %cond.true221, label %cond.false222, !dbg !11265

cond.true221:                                     ; preds = %cond.false217
  br label %cond.end351, !dbg !11265

cond.false222:                                    ; preds = %cond.false217
  %52 = load i64, i64* %size.addr, align 8, !dbg !11265
  %sub223 = sub i64 %52, 1, !dbg !11265
  %and224 = and i64 %sub223, 1048576, !dbg !11265
  %tobool225 = icmp ne i64 %and224, 0, !dbg !11265
  br i1 %tobool225, label %cond.true226, label %cond.false227, !dbg !11265

cond.true226:                                     ; preds = %cond.false222
  br label %cond.end349, !dbg !11265

cond.false227:                                    ; preds = %cond.false222
  %53 = load i64, i64* %size.addr, align 8, !dbg !11265
  %sub228 = sub i64 %53, 1, !dbg !11265
  %and229 = and i64 %sub228, 524288, !dbg !11265
  %tobool230 = icmp ne i64 %and229, 0, !dbg !11265
  br i1 %tobool230, label %cond.true231, label %cond.false232, !dbg !11265

cond.true231:                                     ; preds = %cond.false227
  br label %cond.end347, !dbg !11265

cond.false232:                                    ; preds = %cond.false227
  %54 = load i64, i64* %size.addr, align 8, !dbg !11265
  %sub233 = sub i64 %54, 1, !dbg !11265
  %and234 = and i64 %sub233, 262144, !dbg !11265
  %tobool235 = icmp ne i64 %and234, 0, !dbg !11265
  br i1 %tobool235, label %cond.true236, label %cond.false237, !dbg !11265

cond.true236:                                     ; preds = %cond.false232
  br label %cond.end345, !dbg !11265

cond.false237:                                    ; preds = %cond.false232
  %55 = load i64, i64* %size.addr, align 8, !dbg !11265
  %sub238 = sub i64 %55, 1, !dbg !11265
  %and239 = and i64 %sub238, 131072, !dbg !11265
  %tobool240 = icmp ne i64 %and239, 0, !dbg !11265
  br i1 %tobool240, label %cond.true241, label %cond.false242, !dbg !11265

cond.true241:                                     ; preds = %cond.false237
  br label %cond.end343, !dbg !11265

cond.false242:                                    ; preds = %cond.false237
  %56 = load i64, i64* %size.addr, align 8, !dbg !11265
  %sub243 = sub i64 %56, 1, !dbg !11265
  %and244 = and i64 %sub243, 65536, !dbg !11265
  %tobool245 = icmp ne i64 %and244, 0, !dbg !11265
  br i1 %tobool245, label %cond.true246, label %cond.false247, !dbg !11265

cond.true246:                                     ; preds = %cond.false242
  br label %cond.end341, !dbg !11265

cond.false247:                                    ; preds = %cond.false242
  %57 = load i64, i64* %size.addr, align 8, !dbg !11265
  %sub248 = sub i64 %57, 1, !dbg !11265
  %and249 = and i64 %sub248, 32768, !dbg !11265
  %tobool250 = icmp ne i64 %and249, 0, !dbg !11265
  br i1 %tobool250, label %cond.true251, label %cond.false252, !dbg !11265

cond.true251:                                     ; preds = %cond.false247
  br label %cond.end339, !dbg !11265

cond.false252:                                    ; preds = %cond.false247
  %58 = load i64, i64* %size.addr, align 8, !dbg !11265
  %sub253 = sub i64 %58, 1, !dbg !11265
  %and254 = and i64 %sub253, 16384, !dbg !11265
  %tobool255 = icmp ne i64 %and254, 0, !dbg !11265
  br i1 %tobool255, label %cond.true256, label %cond.false257, !dbg !11265

cond.true256:                                     ; preds = %cond.false252
  br label %cond.end337, !dbg !11265

cond.false257:                                    ; preds = %cond.false252
  %59 = load i64, i64* %size.addr, align 8, !dbg !11265
  %sub258 = sub i64 %59, 1, !dbg !11265
  %and259 = and i64 %sub258, 8192, !dbg !11265
  %tobool260 = icmp ne i64 %and259, 0, !dbg !11265
  br i1 %tobool260, label %cond.true261, label %cond.false262, !dbg !11265

cond.true261:                                     ; preds = %cond.false257
  br label %cond.end335, !dbg !11265

cond.false262:                                    ; preds = %cond.false257
  %60 = load i64, i64* %size.addr, align 8, !dbg !11265
  %sub263 = sub i64 %60, 1, !dbg !11265
  %and264 = and i64 %sub263, 4096, !dbg !11265
  %tobool265 = icmp ne i64 %and264, 0, !dbg !11265
  br i1 %tobool265, label %cond.true266, label %cond.false267, !dbg !11265

cond.true266:                                     ; preds = %cond.false262
  br label %cond.end333, !dbg !11265

cond.false267:                                    ; preds = %cond.false262
  %61 = load i64, i64* %size.addr, align 8, !dbg !11265
  %sub268 = sub i64 %61, 1, !dbg !11265
  %and269 = and i64 %sub268, 2048, !dbg !11265
  %tobool270 = icmp ne i64 %and269, 0, !dbg !11265
  br i1 %tobool270, label %cond.true271, label %cond.false272, !dbg !11265

cond.true271:                                     ; preds = %cond.false267
  br label %cond.end331, !dbg !11265

cond.false272:                                    ; preds = %cond.false267
  %62 = load i64, i64* %size.addr, align 8, !dbg !11265
  %sub273 = sub i64 %62, 1, !dbg !11265
  %and274 = and i64 %sub273, 1024, !dbg !11265
  %tobool275 = icmp ne i64 %and274, 0, !dbg !11265
  br i1 %tobool275, label %cond.true276, label %cond.false277, !dbg !11265

cond.true276:                                     ; preds = %cond.false272
  br label %cond.end329, !dbg !11265

cond.false277:                                    ; preds = %cond.false272
  %63 = load i64, i64* %size.addr, align 8, !dbg !11265
  %sub278 = sub i64 %63, 1, !dbg !11265
  %and279 = and i64 %sub278, 512, !dbg !11265
  %tobool280 = icmp ne i64 %and279, 0, !dbg !11265
  br i1 %tobool280, label %cond.true281, label %cond.false282, !dbg !11265

cond.true281:                                     ; preds = %cond.false277
  br label %cond.end327, !dbg !11265

cond.false282:                                    ; preds = %cond.false277
  %64 = load i64, i64* %size.addr, align 8, !dbg !11265
  %sub283 = sub i64 %64, 1, !dbg !11265
  %and284 = and i64 %sub283, 256, !dbg !11265
  %tobool285 = icmp ne i64 %and284, 0, !dbg !11265
  br i1 %tobool285, label %cond.true286, label %cond.false287, !dbg !11265

cond.true286:                                     ; preds = %cond.false282
  br label %cond.end325, !dbg !11265

cond.false287:                                    ; preds = %cond.false282
  %65 = load i64, i64* %size.addr, align 8, !dbg !11265
  %sub288 = sub i64 %65, 1, !dbg !11265
  %and289 = and i64 %sub288, 128, !dbg !11265
  %tobool290 = icmp ne i64 %and289, 0, !dbg !11265
  br i1 %tobool290, label %cond.true291, label %cond.false292, !dbg !11265

cond.true291:                                     ; preds = %cond.false287
  br label %cond.end323, !dbg !11265

cond.false292:                                    ; preds = %cond.false287
  %66 = load i64, i64* %size.addr, align 8, !dbg !11265
  %sub293 = sub i64 %66, 1, !dbg !11265
  %and294 = and i64 %sub293, 64, !dbg !11265
  %tobool295 = icmp ne i64 %and294, 0, !dbg !11265
  br i1 %tobool295, label %cond.true296, label %cond.false297, !dbg !11265

cond.true296:                                     ; preds = %cond.false292
  br label %cond.end321, !dbg !11265

cond.false297:                                    ; preds = %cond.false292
  %67 = load i64, i64* %size.addr, align 8, !dbg !11265
  %sub298 = sub i64 %67, 1, !dbg !11265
  %and299 = and i64 %sub298, 32, !dbg !11265
  %tobool300 = icmp ne i64 %and299, 0, !dbg !11265
  br i1 %tobool300, label %cond.true301, label %cond.false302, !dbg !11265

cond.true301:                                     ; preds = %cond.false297
  br label %cond.end319, !dbg !11265

cond.false302:                                    ; preds = %cond.false297
  %68 = load i64, i64* %size.addr, align 8, !dbg !11265
  %sub303 = sub i64 %68, 1, !dbg !11265
  %and304 = and i64 %sub303, 16, !dbg !11265
  %tobool305 = icmp ne i64 %and304, 0, !dbg !11265
  br i1 %tobool305, label %cond.true306, label %cond.false307, !dbg !11265

cond.true306:                                     ; preds = %cond.false302
  br label %cond.end317, !dbg !11265

cond.false307:                                    ; preds = %cond.false302
  %69 = load i64, i64* %size.addr, align 8, !dbg !11265
  %sub308 = sub i64 %69, 1, !dbg !11265
  %and309 = and i64 %sub308, 8, !dbg !11265
  %tobool310 = icmp ne i64 %and309, 0, !dbg !11265
  br i1 %tobool310, label %cond.true311, label %cond.false312, !dbg !11265

cond.true311:                                     ; preds = %cond.false307
  br label %cond.end, !dbg !11265

cond.false312:                                    ; preds = %cond.false307
  %70 = load i64, i64* %size.addr, align 8, !dbg !11265
  %sub313 = sub i64 %70, 1, !dbg !11265
  %and314 = and i64 %sub313, 4, !dbg !11265
  %tobool315 = icmp ne i64 %and314, 0, !dbg !11265
  %71 = zext i1 %tobool315 to i64, !dbg !11265
  %cond = select i1 %tobool315, i32 2, i32 1, !dbg !11265
  br label %cond.end, !dbg !11265

cond.end:                                         ; preds = %cond.false312, %cond.true311
  %cond316 = phi i32 [ 3, %cond.true311 ], [ %cond, %cond.false312 ], !dbg !11265
  br label %cond.end317, !dbg !11265

cond.end317:                                      ; preds = %cond.end, %cond.true306
  %cond318 = phi i32 [ 4, %cond.true306 ], [ %cond316, %cond.end ], !dbg !11265
  br label %cond.end319, !dbg !11265

cond.end319:                                      ; preds = %cond.end317, %cond.true301
  %cond320 = phi i32 [ 5, %cond.true301 ], [ %cond318, %cond.end317 ], !dbg !11265
  br label %cond.end321, !dbg !11265

cond.end321:                                      ; preds = %cond.end319, %cond.true296
  %cond322 = phi i32 [ 6, %cond.true296 ], [ %cond320, %cond.end319 ], !dbg !11265
  br label %cond.end323, !dbg !11265

cond.end323:                                      ; preds = %cond.end321, %cond.true291
  %cond324 = phi i32 [ 7, %cond.true291 ], [ %cond322, %cond.end321 ], !dbg !11265
  br label %cond.end325, !dbg !11265

cond.end325:                                      ; preds = %cond.end323, %cond.true286
  %cond326 = phi i32 [ 8, %cond.true286 ], [ %cond324, %cond.end323 ], !dbg !11265
  br label %cond.end327, !dbg !11265

cond.end327:                                      ; preds = %cond.end325, %cond.true281
  %cond328 = phi i32 [ 9, %cond.true281 ], [ %cond326, %cond.end325 ], !dbg !11265
  br label %cond.end329, !dbg !11265

cond.end329:                                      ; preds = %cond.end327, %cond.true276
  %cond330 = phi i32 [ 10, %cond.true276 ], [ %cond328, %cond.end327 ], !dbg !11265
  br label %cond.end331, !dbg !11265

cond.end331:                                      ; preds = %cond.end329, %cond.true271
  %cond332 = phi i32 [ 11, %cond.true271 ], [ %cond330, %cond.end329 ], !dbg !11265
  br label %cond.end333, !dbg !11265

cond.end333:                                      ; preds = %cond.end331, %cond.true266
  %cond334 = phi i32 [ 12, %cond.true266 ], [ %cond332, %cond.end331 ], !dbg !11265
  br label %cond.end335, !dbg !11265

cond.end335:                                      ; preds = %cond.end333, %cond.true261
  %cond336 = phi i32 [ 13, %cond.true261 ], [ %cond334, %cond.end333 ], !dbg !11265
  br label %cond.end337, !dbg !11265

cond.end337:                                      ; preds = %cond.end335, %cond.true256
  %cond338 = phi i32 [ 14, %cond.true256 ], [ %cond336, %cond.end335 ], !dbg !11265
  br label %cond.end339, !dbg !11265

cond.end339:                                      ; preds = %cond.end337, %cond.true251
  %cond340 = phi i32 [ 15, %cond.true251 ], [ %cond338, %cond.end337 ], !dbg !11265
  br label %cond.end341, !dbg !11265

cond.end341:                                      ; preds = %cond.end339, %cond.true246
  %cond342 = phi i32 [ 16, %cond.true246 ], [ %cond340, %cond.end339 ], !dbg !11265
  br label %cond.end343, !dbg !11265

cond.end343:                                      ; preds = %cond.end341, %cond.true241
  %cond344 = phi i32 [ 17, %cond.true241 ], [ %cond342, %cond.end341 ], !dbg !11265
  br label %cond.end345, !dbg !11265

cond.end345:                                      ; preds = %cond.end343, %cond.true236
  %cond346 = phi i32 [ 18, %cond.true236 ], [ %cond344, %cond.end343 ], !dbg !11265
  br label %cond.end347, !dbg !11265

cond.end347:                                      ; preds = %cond.end345, %cond.true231
  %cond348 = phi i32 [ 19, %cond.true231 ], [ %cond346, %cond.end345 ], !dbg !11265
  br label %cond.end349, !dbg !11265

cond.end349:                                      ; preds = %cond.end347, %cond.true226
  %cond350 = phi i32 [ 20, %cond.true226 ], [ %cond348, %cond.end347 ], !dbg !11265
  br label %cond.end351, !dbg !11265

cond.end351:                                      ; preds = %cond.end349, %cond.true221
  %cond352 = phi i32 [ 21, %cond.true221 ], [ %cond350, %cond.end349 ], !dbg !11265
  br label %cond.end353, !dbg !11265

cond.end353:                                      ; preds = %cond.end351, %cond.true216
  %cond354 = phi i32 [ 22, %cond.true216 ], [ %cond352, %cond.end351 ], !dbg !11265
  br label %cond.end355, !dbg !11265

cond.end355:                                      ; preds = %cond.end353, %cond.true211
  %cond356 = phi i32 [ 23, %cond.true211 ], [ %cond354, %cond.end353 ], !dbg !11265
  br label %cond.end357, !dbg !11265

cond.end357:                                      ; preds = %cond.end355, %cond.true206
  %cond358 = phi i32 [ 24, %cond.true206 ], [ %cond356, %cond.end355 ], !dbg !11265
  br label %cond.end359, !dbg !11265

cond.end359:                                      ; preds = %cond.end357, %cond.true201
  %cond360 = phi i32 [ 25, %cond.true201 ], [ %cond358, %cond.end357 ], !dbg !11265
  br label %cond.end361, !dbg !11265

cond.end361:                                      ; preds = %cond.end359, %cond.true196
  %cond362 = phi i32 [ 26, %cond.true196 ], [ %cond360, %cond.end359 ], !dbg !11265
  br label %cond.end363, !dbg !11265

cond.end363:                                      ; preds = %cond.end361, %cond.true191
  %cond364 = phi i32 [ 27, %cond.true191 ], [ %cond362, %cond.end361 ], !dbg !11265
  br label %cond.end365, !dbg !11265

cond.end365:                                      ; preds = %cond.end363, %cond.true186
  %cond366 = phi i32 [ 28, %cond.true186 ], [ %cond364, %cond.end363 ], !dbg !11265
  br label %cond.end367, !dbg !11265

cond.end367:                                      ; preds = %cond.end365, %cond.true181
  %cond368 = phi i32 [ 29, %cond.true181 ], [ %cond366, %cond.end365 ], !dbg !11265
  br label %cond.end369, !dbg !11265

cond.end369:                                      ; preds = %cond.end367, %cond.true176
  %cond370 = phi i32 [ 30, %cond.true176 ], [ %cond368, %cond.end367 ], !dbg !11265
  br label %cond.end371, !dbg !11265

cond.end371:                                      ; preds = %cond.end369, %cond.true171
  %cond372 = phi i32 [ 31, %cond.true171 ], [ %cond370, %cond.end369 ], !dbg !11265
  br label %cond.end373, !dbg !11265

cond.end373:                                      ; preds = %cond.end371, %cond.true166
  %cond374 = phi i32 [ 32, %cond.true166 ], [ %cond372, %cond.end371 ], !dbg !11265
  br label %cond.end375, !dbg !11265

cond.end375:                                      ; preds = %cond.end373, %cond.true161
  %cond376 = phi i32 [ 33, %cond.true161 ], [ %cond374, %cond.end373 ], !dbg !11265
  br label %cond.end377, !dbg !11265

cond.end377:                                      ; preds = %cond.end375, %cond.true156
  %cond378 = phi i32 [ 34, %cond.true156 ], [ %cond376, %cond.end375 ], !dbg !11265
  br label %cond.end379, !dbg !11265

cond.end379:                                      ; preds = %cond.end377, %cond.true151
  %cond380 = phi i32 [ 35, %cond.true151 ], [ %cond378, %cond.end377 ], !dbg !11265
  br label %cond.end381, !dbg !11265

cond.end381:                                      ; preds = %cond.end379, %cond.true146
  %cond382 = phi i32 [ 36, %cond.true146 ], [ %cond380, %cond.end379 ], !dbg !11265
  br label %cond.end383, !dbg !11265

cond.end383:                                      ; preds = %cond.end381, %cond.true141
  %cond384 = phi i32 [ 37, %cond.true141 ], [ %cond382, %cond.end381 ], !dbg !11265
  br label %cond.end385, !dbg !11265

cond.end385:                                      ; preds = %cond.end383, %cond.true136
  %cond386 = phi i32 [ 38, %cond.true136 ], [ %cond384, %cond.end383 ], !dbg !11265
  br label %cond.end387, !dbg !11265

cond.end387:                                      ; preds = %cond.end385, %cond.true131
  %cond388 = phi i32 [ 39, %cond.true131 ], [ %cond386, %cond.end385 ], !dbg !11265
  br label %cond.end389, !dbg !11265

cond.end389:                                      ; preds = %cond.end387, %cond.true126
  %cond390 = phi i32 [ 40, %cond.true126 ], [ %cond388, %cond.end387 ], !dbg !11265
  br label %cond.end391, !dbg !11265

cond.end391:                                      ; preds = %cond.end389, %cond.true121
  %cond392 = phi i32 [ 41, %cond.true121 ], [ %cond390, %cond.end389 ], !dbg !11265
  br label %cond.end393, !dbg !11265

cond.end393:                                      ; preds = %cond.end391, %cond.true116
  %cond394 = phi i32 [ 42, %cond.true116 ], [ %cond392, %cond.end391 ], !dbg !11265
  br label %cond.end395, !dbg !11265

cond.end395:                                      ; preds = %cond.end393, %cond.true111
  %cond396 = phi i32 [ 43, %cond.true111 ], [ %cond394, %cond.end393 ], !dbg !11265
  br label %cond.end397, !dbg !11265

cond.end397:                                      ; preds = %cond.end395, %cond.true106
  %cond398 = phi i32 [ 44, %cond.true106 ], [ %cond396, %cond.end395 ], !dbg !11265
  br label %cond.end399, !dbg !11265

cond.end399:                                      ; preds = %cond.end397, %cond.true101
  %cond400 = phi i32 [ 45, %cond.true101 ], [ %cond398, %cond.end397 ], !dbg !11265
  br label %cond.end401, !dbg !11265

cond.end401:                                      ; preds = %cond.end399, %cond.true96
  %cond402 = phi i32 [ 46, %cond.true96 ], [ %cond400, %cond.end399 ], !dbg !11265
  br label %cond.end403, !dbg !11265

cond.end403:                                      ; preds = %cond.end401, %cond.true91
  %cond404 = phi i32 [ 47, %cond.true91 ], [ %cond402, %cond.end401 ], !dbg !11265
  br label %cond.end405, !dbg !11265

cond.end405:                                      ; preds = %cond.end403, %cond.true86
  %cond406 = phi i32 [ 48, %cond.true86 ], [ %cond404, %cond.end403 ], !dbg !11265
  br label %cond.end407, !dbg !11265

cond.end407:                                      ; preds = %cond.end405, %cond.true81
  %cond408 = phi i32 [ 49, %cond.true81 ], [ %cond406, %cond.end405 ], !dbg !11265
  br label %cond.end409, !dbg !11265

cond.end409:                                      ; preds = %cond.end407, %cond.true76
  %cond410 = phi i32 [ 50, %cond.true76 ], [ %cond408, %cond.end407 ], !dbg !11265
  br label %cond.end411, !dbg !11265

cond.end411:                                      ; preds = %cond.end409, %cond.true71
  %cond412 = phi i32 [ 51, %cond.true71 ], [ %cond410, %cond.end409 ], !dbg !11265
  br label %cond.end413, !dbg !11265

cond.end413:                                      ; preds = %cond.end411, %cond.true66
  %cond414 = phi i32 [ 52, %cond.true66 ], [ %cond412, %cond.end411 ], !dbg !11265
  br label %cond.end415, !dbg !11265

cond.end415:                                      ; preds = %cond.end413, %cond.true61
  %cond416 = phi i32 [ 53, %cond.true61 ], [ %cond414, %cond.end413 ], !dbg !11265
  br label %cond.end417, !dbg !11265

cond.end417:                                      ; preds = %cond.end415, %cond.true56
  %cond418 = phi i32 [ 54, %cond.true56 ], [ %cond416, %cond.end415 ], !dbg !11265
  br label %cond.end419, !dbg !11265

cond.end419:                                      ; preds = %cond.end417, %cond.true51
  %cond420 = phi i32 [ 55, %cond.true51 ], [ %cond418, %cond.end417 ], !dbg !11265
  br label %cond.end421, !dbg !11265

cond.end421:                                      ; preds = %cond.end419, %cond.true46
  %cond422 = phi i32 [ 56, %cond.true46 ], [ %cond420, %cond.end419 ], !dbg !11265
  br label %cond.end423, !dbg !11265

cond.end423:                                      ; preds = %cond.end421, %cond.true41
  %cond424 = phi i32 [ 57, %cond.true41 ], [ %cond422, %cond.end421 ], !dbg !11265
  br label %cond.end425, !dbg !11265

cond.end425:                                      ; preds = %cond.end423, %cond.true36
  %cond426 = phi i32 [ 58, %cond.true36 ], [ %cond424, %cond.end423 ], !dbg !11265
  br label %cond.end427, !dbg !11265

cond.end427:                                      ; preds = %cond.end425, %cond.true31
  %cond428 = phi i32 [ 59, %cond.true31 ], [ %cond426, %cond.end425 ], !dbg !11265
  br label %cond.end429, !dbg !11265

cond.end429:                                      ; preds = %cond.end427, %cond.true26
  %cond430 = phi i32 [ 60, %cond.true26 ], [ %cond428, %cond.end427 ], !dbg !11265
  br label %cond.end431, !dbg !11265

cond.end431:                                      ; preds = %cond.end429, %cond.true21
  %cond432 = phi i32 [ 61, %cond.true21 ], [ %cond430, %cond.end429 ], !dbg !11265
  br label %cond.end433, !dbg !11265

cond.end433:                                      ; preds = %cond.end431, %cond.true16
  %cond434 = phi i32 [ 62, %cond.true16 ], [ %cond432, %cond.end431 ], !dbg !11265
  br label %cond.end435, !dbg !11265

cond.end435:                                      ; preds = %cond.end433, %cond.true11
  %cond436 = phi i32 [ 63, %cond.true11 ], [ %cond434, %cond.end433 ], !dbg !11265
  br label %cond.end437, !dbg !11265

cond.end437:                                      ; preds = %cond.end435, %cond.true8
  %cond438 = phi i32 [ 0, %cond.true8 ], [ %cond436, %cond.end435 ], !dbg !11265
  br label %cond.end440, !dbg !11265

cond.false439:                                    ; preds = %cond.true
  br label %cond.end440, !dbg !11265

cond.end440:                                      ; preds = %cond.false439, %cond.end437
  %cond441 = phi i32 [ %cond438, %cond.end437 ], [ -1, %cond.false439 ], !dbg !11265
  br label %cond.end444, !dbg !11265

cond.false442:                                    ; preds = %if.end3
  %72 = load i64, i64* %size.addr, align 8, !dbg !11265
  %sub443 = sub i64 %72, 1, !dbg !11265
  %call = call i32 @__ilog2_u64(i64 %sub443) #13, !dbg !11265
  br label %cond.end444, !dbg !11265

cond.end444:                                      ; preds = %cond.false442, %cond.end440
  %cond445 = phi i32 [ %cond441, %cond.end440 ], [ %call, %cond.false442 ], !dbg !11265
  %sub446 = sub i32 %cond445, 12, !dbg !11266
  %add = add i32 %sub446, 1, !dbg !11267
  store i32 %add, i32* %retval, align 4, !dbg !11268
  br label %return, !dbg !11268

if.end447:                                        ; preds = %entry
  %73 = load i64, i64* %size.addr, align 8, !dbg !11269
  %dec = add i64 %73, -1, !dbg !11269
  store i64 %dec, i64* %size.addr, align 8, !dbg !11269
  %74 = load i64, i64* %size.addr, align 8, !dbg !11270
  %shr = lshr i64 %74, 12, !dbg !11270
  store i64 %shr, i64* %size.addr, align 8, !dbg !11270
  %75 = load i64, i64* %size.addr, align 8, !dbg !11271
  store i64 %75, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !11248
  %76 = load i32, i32* %bitpos.i, align 4, !dbg !11272
  %77 = load i64, i64* %x.addr.i, align 8, !dbg !11273
  %78 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %77, i32 %76) #6, !dbg !11272, !srcloc !11274
  store i32 %78, i32* %bitpos.i, align 4, !dbg !11272
  %79 = load i32, i32* %bitpos.i, align 4, !dbg !11275
  %add.i = add i32 %79, 1, !dbg !11276
  store i32 %add.i, i32* %retval, align 4, !dbg !11277
  br label %return, !dbg !11277

return:                                           ; preds = %if.end447, %cond.end444, %if.then2, %if.then1
  %80 = load i32, i32* %retval, align 4, !dbg !11278
  ret i32 %80, !dbg !11278
}

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @__ilog2_u64(i64 %n) #9 !dbg !11279 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !11241, metadata !DIExpression()), !dbg !11283
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !11247, metadata !DIExpression()), !dbg !11285
  %n.addr = alloca i64, align 8
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !11286, metadata !DIExpression()), !dbg !11287
  %0 = load i64, i64* %n.addr, align 8, !dbg !11288
  store i64 %0, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !11285
  %1 = load i32, i32* %bitpos.i, align 4, !dbg !11289
  %2 = load i64, i64* %x.addr.i, align 8, !dbg !11290
  %3 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %2, i32 %1) #6, !dbg !11289, !srcloc !11274
  store i32 %3, i32* %bitpos.i, align 4, !dbg !11289
  %4 = load i32, i32* %bitpos.i, align 4, !dbg !11291
  %add.i = add i32 %4, 1, !dbg !11292
  %sub = sub i32 %add.i, 1, !dbg !11293
  ret i32 %sub, !dbg !11294
}

; Function Attrs: noredzone
declare dso_local noalias i8* @kmalloc_order(i64, i32, i32) #2

; Function Attrs: noredzone
declare dso_local noalias i8* @kmem_cache_alloc(%struct.kmem_cache*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kasan_kmalloc(%struct.kmem_cache* %s, i8* %object, i64 %size, i32 %flags) #0 !dbg !11295 {
entry:
  %s.addr = alloca %struct.kmem_cache*, align 8
  %object.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store %struct.kmem_cache* %s, %struct.kmem_cache** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr, metadata !11298, metadata !DIExpression()), !dbg !11299
  store i8* %object, i8** %object.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %object.addr, metadata !11300, metadata !DIExpression()), !dbg !11301
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !11302, metadata !DIExpression()), !dbg !11303
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !11304, metadata !DIExpression()), !dbg !11305
  %0 = load i8*, i8** %object.addr, align 8, !dbg !11306
  ret i8* %0, !dbg !11307
}

attributes #0 = { noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { cold noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind willreturn }
attributes #5 = { nounwind readnone willreturn }
attributes #6 = { nounwind readonly }
attributes #7 = { nounwind }
attributes #8 = { nounwind willreturn }
attributes #9 = { noinline noredzone nounwind optnone readnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noredzone }
attributes #11 = { cold noredzone }
attributes #12 = { noredzone nounwind }
attributes #13 = { noredzone nounwind readnone }

!llvm.dbg.cu = !{!2}
!llvm.named.register.rsp = !{!4144}
!llvm.module.flags = !{!4145, !4146, !4147, !4148}
!llvm.ident = !{!4149}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "alps_mutex", scope: !2, file: !3, line: 1397, type: !379, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C89, file: !3, producer: "clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !189, globals: !4080, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "drivers/input/mouse/alps.c", directory: "/home/lizy2001/genbc/linux")
!4 = !{!5, !13, !18, !24, !30, !39, !47, !53, !59, !66, !74, !80, !86, !113, !120, !125, !129, !162, !167, !175, !182}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "migrate_mode", file: !6, line: 15, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./include/linux/migrate_mode.h", directory: "/home/lizy2001/genbc/linux")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12}
!9 = !DIEnumerator(name: "MIGRATE_ASYNC", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "MIGRATE_SYNC_LIGHT", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "MIGRATE_SYNC", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "MIGRATE_SYNC_NO_COPY", value: 3, isUnsigned: true)
!13 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "hrtimer_restart", file: !14, line: 65, baseType: !7, size: 32, elements: !15)
!14 = !DIFile(filename: "./include/linux/hrtimer.h", directory: "/home/lizy2001/genbc/linux")
!15 = !{!16, !17}
!16 = !DIEnumerator(name: "HRTIMER_NORESTART", value: 0, isUnsigned: true)
!17 = !DIEnumerator(name: "HRTIMER_RESTART", value: 1, isUnsigned: true)
!18 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "timespec_type", file: !19, line: 16, baseType: !7, size: 32, elements: !20)
!19 = !DIFile(filename: "./include/linux/restart_block.h", directory: "/home/lizy2001/genbc/linux")
!20 = !{!21, !22, !23}
!21 = !DIEnumerator(name: "TT_NONE", value: 0, isUnsigned: true)
!22 = !DIEnumerator(name: "TT_NATIVE", value: 1, isUnsigned: true)
!23 = !DIEnumerator(name: "TT_COMPAT", value: 2, isUnsigned: true)
!24 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "quota_type", file: !25, line: 54, baseType: !7, size: 32, elements: !26)
!25 = !DIFile(filename: "./include/linux/quota.h", directory: "/home/lizy2001/genbc/linux")
!26 = !{!27, !28, !29}
!27 = !DIEnumerator(name: "USRQUOTA", value: 0, isUnsigned: true)
!28 = !DIEnumerator(name: "GRPQUOTA", value: 1, isUnsigned: true)
!29 = !DIEnumerator(name: "PRJQUOTA", value: 2, isUnsigned: true)
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rw_hint", file: !31, line: 296, baseType: !7, size: 32, elements: !32)
!31 = !DIFile(filename: "./include/linux/fs.h", directory: "/home/lizy2001/genbc/linux")
!32 = !{!33, !34, !35, !36, !37, !38}
!33 = !DIEnumerator(name: "WRITE_LIFE_NOT_SET", value: 0, isUnsigned: true)
!34 = !DIEnumerator(name: "WRITE_LIFE_NONE", value: 1, isUnsigned: true)
!35 = !DIEnumerator(name: "WRITE_LIFE_SHORT", value: 2, isUnsigned: true)
!36 = !DIEnumerator(name: "WRITE_LIFE_MEDIUM", value: 3, isUnsigned: true)
!37 = !DIEnumerator(name: "WRITE_LIFE_LONG", value: 4, isUnsigned: true)
!38 = !DIEnumerator(name: "WRITE_LIFE_EXTREME", value: 5, isUnsigned: true)
!39 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pid_type", file: !40, line: 9, baseType: !7, size: 32, elements: !41)
!40 = !DIFile(filename: "./include/linux/pid.h", directory: "/home/lizy2001/genbc/linux")
!41 = !{!42, !43, !44, !45, !46}
!42 = !DIEnumerator(name: "PIDTYPE_PID", value: 0, isUnsigned: true)
!43 = !DIEnumerator(name: "PIDTYPE_TGID", value: 1, isUnsigned: true)
!44 = !DIEnumerator(name: "PIDTYPE_PGID", value: 2, isUnsigned: true)
!45 = !DIEnumerator(name: "PIDTYPE_SID", value: 3, isUnsigned: true)
!46 = !DIEnumerator(name: "PIDTYPE_MAX", value: 4, isUnsigned: true)
!47 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kobj_ns_type", file: !48, line: 26, baseType: !7, size: 32, elements: !49)
!48 = !DIFile(filename: "./include/linux/kobject_ns.h", directory: "/home/lizy2001/genbc/linux")
!49 = !{!50, !51, !52}
!50 = !DIEnumerator(name: "KOBJ_NS_TYPE_NONE", value: 0, isUnsigned: true)
!51 = !DIEnumerator(name: "KOBJ_NS_TYPE_NET", value: 1, isUnsigned: true)
!52 = !DIEnumerator(name: "KOBJ_NS_TYPES", value: 2, isUnsigned: true)
!53 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "probe_type", file: !54, line: 44, baseType: !7, size: 32, elements: !55)
!54 = !DIFile(filename: "./include/linux/device/driver.h", directory: "/home/lizy2001/genbc/linux")
!55 = !{!56, !57, !58}
!56 = !DIEnumerator(name: "PROBE_DEFAULT_STRATEGY", value: 0, isUnsigned: true)
!57 = !DIEnumerator(name: "PROBE_PREFER_ASYNCHRONOUS", value: 1, isUnsigned: true)
!58 = !DIEnumerator(name: "PROBE_FORCE_SYNCHRONOUS", value: 2, isUnsigned: true)
!59 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dl_dev_state", file: !60, line: 343, baseType: !7, size: 32, elements: !61)
!60 = !DIFile(filename: "./include/linux/device.h", directory: "/home/lizy2001/genbc/linux")
!61 = !{!62, !63, !64, !65}
!62 = !DIEnumerator(name: "DL_DEV_NO_DRIVER", value: 0, isUnsigned: true)
!63 = !DIEnumerator(name: "DL_DEV_PROBING", value: 1, isUnsigned: true)
!64 = !DIEnumerator(name: "DL_DEV_DRIVER_BOUND", value: 2, isUnsigned: true)
!65 = !DIEnumerator(name: "DL_DEV_UNBINDING", value: 3, isUnsigned: true)
!66 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_request", file: !67, line: 524, baseType: !7, size: 32, elements: !68)
!67 = !DIFile(filename: "./include/linux/pm.h", directory: "/home/lizy2001/genbc/linux")
!68 = !{!69, !70, !71, !72, !73}
!69 = !DIEnumerator(name: "RPM_REQ_NONE", value: 0, isUnsigned: true)
!70 = !DIEnumerator(name: "RPM_REQ_IDLE", value: 1, isUnsigned: true)
!71 = !DIEnumerator(name: "RPM_REQ_SUSPEND", value: 2, isUnsigned: true)
!72 = !DIEnumerator(name: "RPM_REQ_AUTOSUSPEND", value: 3, isUnsigned: true)
!73 = !DIEnumerator(name: "RPM_REQ_RESUME", value: 4, isUnsigned: true)
!74 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_status", file: !67, line: 502, baseType: !7, size: 32, elements: !75)
!75 = !{!76, !77, !78, !79}
!76 = !DIEnumerator(name: "RPM_ACTIVE", value: 0, isUnsigned: true)
!77 = !DIEnumerator(name: "RPM_RESUMING", value: 1, isUnsigned: true)
!78 = !DIEnumerator(name: "RPM_SUSPENDED", value: 2, isUnsigned: true)
!79 = !DIEnumerator(name: "RPM_SUSPENDING", value: 3, isUnsigned: true)
!80 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "irqreturn", file: !81, line: 11, baseType: !7, size: 32, elements: !82)
!81 = !DIFile(filename: "./include/linux/irqreturn.h", directory: "/home/lizy2001/genbc/linux")
!82 = !{!83, !84, !85}
!83 = !DIEnumerator(name: "IRQ_NONE", value: 0, isUnsigned: true)
!84 = !DIEnumerator(name: "IRQ_HANDLED", value: 1, isUnsigned: true)
!85 = !DIEnumerator(name: "IRQ_WAKE_THREAD", value: 2, isUnsigned: true)
!86 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "psmouse_type", file: !87, line: 48, baseType: !7, size: 32, elements: !88)
!87 = !DIFile(filename: "drivers/input/mouse/psmouse.h", directory: "/home/lizy2001/genbc/linux")
!88 = !{!89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112}
!89 = !DIEnumerator(name: "PSMOUSE_NONE", value: 0, isUnsigned: true)
!90 = !DIEnumerator(name: "PSMOUSE_PS2", value: 1, isUnsigned: true)
!91 = !DIEnumerator(name: "PSMOUSE_PS2PP", value: 2, isUnsigned: true)
!92 = !DIEnumerator(name: "PSMOUSE_THINKPS", value: 3, isUnsigned: true)
!93 = !DIEnumerator(name: "PSMOUSE_GENPS", value: 4, isUnsigned: true)
!94 = !DIEnumerator(name: "PSMOUSE_IMPS", value: 5, isUnsigned: true)
!95 = !DIEnumerator(name: "PSMOUSE_IMEX", value: 6, isUnsigned: true)
!96 = !DIEnumerator(name: "PSMOUSE_SYNAPTICS", value: 7, isUnsigned: true)
!97 = !DIEnumerator(name: "PSMOUSE_ALPS", value: 8, isUnsigned: true)
!98 = !DIEnumerator(name: "PSMOUSE_LIFEBOOK", value: 9, isUnsigned: true)
!99 = !DIEnumerator(name: "PSMOUSE_TRACKPOINT", value: 10, isUnsigned: true)
!100 = !DIEnumerator(name: "PSMOUSE_TOUCHKIT_PS2", value: 11, isUnsigned: true)
!101 = !DIEnumerator(name: "PSMOUSE_CORTRON", value: 12, isUnsigned: true)
!102 = !DIEnumerator(name: "PSMOUSE_HGPK", value: 13, isUnsigned: true)
!103 = !DIEnumerator(name: "PSMOUSE_ELANTECH", value: 14, isUnsigned: true)
!104 = !DIEnumerator(name: "PSMOUSE_FSP", value: 15, isUnsigned: true)
!105 = !DIEnumerator(name: "PSMOUSE_SYNAPTICS_RELATIVE", value: 16, isUnsigned: true)
!106 = !DIEnumerator(name: "PSMOUSE_CYPRESS", value: 17, isUnsigned: true)
!107 = !DIEnumerator(name: "PSMOUSE_FOCALTECH", value: 18, isUnsigned: true)
!108 = !DIEnumerator(name: "PSMOUSE_VMMOUSE", value: 19, isUnsigned: true)
!109 = !DIEnumerator(name: "PSMOUSE_BYD", value: 20, isUnsigned: true)
!110 = !DIEnumerator(name: "PSMOUSE_SYNAPTICS_SMBUS", value: 21, isUnsigned: true)
!111 = !DIEnumerator(name: "PSMOUSE_ELANTECH_SMBUS", value: 22, isUnsigned: true)
!112 = !DIEnumerator(name: "PSMOUSE_AUTO", value: 23, isUnsigned: true)
!113 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "psmouse_state", file: !87, line: 28, baseType: !7, size: 32, elements: !114)
!114 = !{!115, !116, !117, !118, !119}
!115 = !DIEnumerator(name: "PSMOUSE_IGNORE", value: 0, isUnsigned: true)
!116 = !DIEnumerator(name: "PSMOUSE_INITIALIZING", value: 1, isUnsigned: true)
!117 = !DIEnumerator(name: "PSMOUSE_RESYNCING", value: 2, isUnsigned: true)
!118 = !DIEnumerator(name: "PSMOUSE_CMD_MODE", value: 3, isUnsigned: true)
!119 = !DIEnumerator(name: "PSMOUSE_ACTIVATED", value: 4, isUnsigned: true)
!120 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !87, line: 37, baseType: !7, size: 32, elements: !121)
!121 = !{!122, !123, !124}
!122 = !DIEnumerator(name: "PSMOUSE_BAD_DATA", value: 0, isUnsigned: true)
!123 = !DIEnumerator(name: "PSMOUSE_GOOD_DATA", value: 1, isUnsigned: true)
!124 = !DIEnumerator(name: "PSMOUSE_FULL_PACKET", value: 2, isUnsigned: true)
!125 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "psmouse_scale", file: !87, line: 43, baseType: !7, size: 32, elements: !126)
!126 = !{!127, !128}
!127 = !DIEnumerator(name: "PSMOUSE_SCALE11", value: 0, isUnsigned: true)
!128 = !DIEnumerator(name: "PSMOUSE_SCALE21", value: 1, isUnsigned: true)
!129 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !130, line: 30, baseType: !131, size: 64, elements: !132)
!130 = !DIFile(filename: "./include/linux/workqueue.h", directory: "/home/lizy2001/genbc/linux")
!131 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!132 = !{!133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161}
!133 = !DIEnumerator(name: "WORK_STRUCT_PENDING_BIT", value: 0)
!134 = !DIEnumerator(name: "WORK_STRUCT_DELAYED_BIT", value: 1)
!135 = !DIEnumerator(name: "WORK_STRUCT_PWQ_BIT", value: 2)
!136 = !DIEnumerator(name: "WORK_STRUCT_LINKED_BIT", value: 3)
!137 = !DIEnumerator(name: "WORK_STRUCT_COLOR_SHIFT", value: 4)
!138 = !DIEnumerator(name: "WORK_STRUCT_COLOR_BITS", value: 4)
!139 = !DIEnumerator(name: "WORK_STRUCT_PENDING", value: 1)
!140 = !DIEnumerator(name: "WORK_STRUCT_DELAYED", value: 2)
!141 = !DIEnumerator(name: "WORK_STRUCT_PWQ", value: 4)
!142 = !DIEnumerator(name: "WORK_STRUCT_LINKED", value: 8)
!143 = !DIEnumerator(name: "WORK_STRUCT_STATIC", value: 0)
!144 = !DIEnumerator(name: "WORK_NR_COLORS", value: 15)
!145 = !DIEnumerator(name: "WORK_NO_COLOR", value: 15)
!146 = !DIEnumerator(name: "WORK_CPU_UNBOUND", value: 1)
!147 = !DIEnumerator(name: "WORK_STRUCT_FLAG_BITS", value: 8)
!148 = !DIEnumerator(name: "WORK_OFFQ_FLAG_BASE", value: 4)
!149 = !DIEnumerator(name: "__WORK_OFFQ_CANCELING", value: 4)
!150 = !DIEnumerator(name: "WORK_OFFQ_CANCELING", value: 16)
!151 = !DIEnumerator(name: "WORK_OFFQ_FLAG_BITS", value: 1)
!152 = !DIEnumerator(name: "WORK_OFFQ_POOL_SHIFT", value: 5)
!153 = !DIEnumerator(name: "WORK_OFFQ_LEFT", value: 59)
!154 = !DIEnumerator(name: "WORK_OFFQ_POOL_BITS", value: 31)
!155 = !DIEnumerator(name: "WORK_OFFQ_POOL_NONE", value: 2147483647)
!156 = !DIEnumerator(name: "WORK_STRUCT_FLAG_MASK", value: 255)
!157 = !DIEnumerator(name: "WORK_STRUCT_WQ_DATA_MASK", value: -256)
!158 = !DIEnumerator(name: "WORK_STRUCT_NO_POOL", value: 68719476704)
!159 = !DIEnumerator(name: "WORK_BUSY_PENDING", value: 1)
!160 = !DIEnumerator(name: "WORK_BUSY_RUNNING", value: 2)
!161 = !DIEnumerator(name: "WORKER_DESC_LEN", value: 24)
!162 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !163, line: 10, baseType: !7, size: 32, elements: !164)
!163 = !DIFile(filename: "./include/linux/stddef.h", directory: "/home/lizy2001/genbc/linux")
!164 = !{!165, !166}
!165 = !DIEnumerator(name: "false", value: 0, isUnsigned: true)
!166 = !DIEnumerator(name: "true", value: 1, isUnsigned: true)
!167 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "V7_PACKET_ID", file: !168, line: 157, baseType: !7, size: 32, elements: !169)
!168 = !DIFile(filename: "drivers/input/mouse/alps.h", directory: "/home/lizy2001/genbc/linux")
!169 = !{!170, !171, !172, !173, !174}
!170 = !DIEnumerator(name: "V7_PACKET_ID_IDLE", value: 0, isUnsigned: true)
!171 = !DIEnumerator(name: "V7_PACKET_ID_TWO", value: 1, isUnsigned: true)
!172 = !DIEnumerator(name: "V7_PACKET_ID_MULTI", value: 2, isUnsigned: true)
!173 = !DIEnumerator(name: "V7_PACKET_ID_NEW", value: 3, isUnsigned: true)
!174 = !DIEnumerator(name: "V7_PACKET_ID_UNKNOWN", value: 4, isUnsigned: true)
!175 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "SS4_PACKET_ID", file: !168, line: 40, baseType: !7, size: 32, elements: !176)
!176 = !{!177, !178, !179, !180, !181}
!177 = !DIEnumerator(name: "SS4_PACKET_ID_IDLE", value: 0, isUnsigned: true)
!178 = !DIEnumerator(name: "SS4_PACKET_ID_ONE", value: 1, isUnsigned: true)
!179 = !DIEnumerator(name: "SS4_PACKET_ID_TWO", value: 2, isUnsigned: true)
!180 = !DIEnumerator(name: "SS4_PACKET_ID_MULTI", value: 3, isUnsigned: true)
!181 = !DIEnumerator(name: "SS4_PACKET_ID_STICK", value: 4, isUnsigned: true)
!182 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kmalloc_cache_type", file: !183, line: 305, baseType: !7, size: 32, elements: !184)
!183 = !DIFile(filename: "./include/linux/slab.h", directory: "/home/lizy2001/genbc/linux")
!184 = !{!185, !186, !187, !188}
!185 = !DIEnumerator(name: "KMALLOC_NORMAL", value: 0, isUnsigned: true)
!186 = !DIEnumerator(name: "KMALLOC_RECLAIM", value: 1, isUnsigned: true)
!187 = !DIEnumerator(name: "KMALLOC_DMA", value: 2, isUnsigned: true)
!188 = !DIEnumerator(name: "NR_KMALLOC_TYPES", value: 3, isUnsigned: true)
!189 = !{!190, !191, !192, !194, !196, !199, !206, !4076, !262, !131, !4063, !4077, !198, !479}
!190 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!192 = !DIDerivedType(tag: DW_TAG_typedef, name: "gfp_t", file: !193, line: 148, baseType: !7)
!193 = !DIFile(filename: "./include/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !195, size: 64)
!195 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !131)
!196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !197, size: 64)
!197 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !198)
!198 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !200, size: 64)
!200 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !201)
!201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !202, size: 64)
!202 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_head", file: !193, line: 178, size: 128, elements: !203)
!203 = !{!204, !205}
!204 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !202, file: !193, line: 179, baseType: !201, size: 64)
!205 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !202, file: !193, line: 179, baseType: !201, size: 64, offset: 64)
!206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !207, size: 64)
!207 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "alps_data", file: !168, line: 286, size: 2944, elements: !208)
!208 = !{!209, !4009, !4010, !4011, !4012, !4013, !4014, !4021, !4022, !4023, !4024, !4025, !4027, !4028, !4029, !4030, !4031, !4032, !4033, !4034, !4035, !4036, !4037, !4064, !4068, !4069, !4070, !4071, !4073, !4074, !4075}
!209 = !DIDerivedType(tag: DW_TAG_member, name: "psmouse", scope: !207, file: !168, line: 287, baseType: !210, size: 64)
!210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !211, size: 64)
!211 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "psmouse", file: !87, line: 89, size: 3648, elements: !212)
!212 = !{!213, !214, !3859, !3935, !3942, !3943, !3944, !3964, !3966, !3967, !3968, !3969, !3970, !3971, !3972, !3973, !3974, !3975, !3976, !3977, !3979, !3980, !3981, !3982, !3983, !3984, !3985, !3990, !3994, !3995, !3999, !4000, !4001, !4005, !4006, !4007, !4008}
!213 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !211, file: !87, line: 90, baseType: !191, size: 64)
!214 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !211, file: !87, line: 91, baseType: !215, size: 64, offset: 64)
!215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !216, size: 64)
!216 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "input_dev", file: !217, line: 131, size: 10432, elements: !218)
!217 = !DIFile(filename: "./include/linux/input.h", directory: "/home/lizy2001/genbc/linux")
!218 = !{!219, !222, !223, !224, !235, !239, !240, !244, !245, !246, !247, !248, !249, !253, !254, !255, !256, !257, !258, !279, !284, !3050, !3053, !3054, !3066, !3068, !3089, !3099, !3100, !3101, !3102, !3103, !3107, !3111, !3115, !3119, !3197, !3198, !3199, !3200, !3201, !3850, !3851, !3852, !3853, !3854, !3856, !3857}
!219 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !216, file: !217, line: 132, baseType: !220, size: 64)
!220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !221, size: 64)
!221 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !198)
!222 = !DIDerivedType(tag: DW_TAG_member, name: "phys", scope: !216, file: !217, line: 133, baseType: !220, size: 64, offset: 64)
!223 = !DIDerivedType(tag: DW_TAG_member, name: "uniq", scope: !216, file: !217, line: 134, baseType: !220, size: 64, offset: 128)
!224 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !216, file: !217, line: 135, baseType: !225, size: 64, offset: 192)
!225 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "input_id", file: !226, line: 59, size: 64, elements: !227)
!226 = !DIFile(filename: "./include/uapi/linux/input.h", directory: "/home/lizy2001/genbc/linux")
!227 = !{!228, !232, !233, !234}
!228 = !DIDerivedType(tag: DW_TAG_member, name: "bustype", scope: !225, file: !226, line: 60, baseType: !229, size: 16)
!229 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u16", file: !230, line: 24, baseType: !231)
!230 = !DIFile(filename: "./include/uapi/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!231 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!232 = !DIDerivedType(tag: DW_TAG_member, name: "vendor", scope: !225, file: !226, line: 61, baseType: !229, size: 16, offset: 16)
!233 = !DIDerivedType(tag: DW_TAG_member, name: "product", scope: !225, file: !226, line: 62, baseType: !229, size: 16, offset: 32)
!234 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !225, file: !226, line: 63, baseType: !229, size: 16, offset: 48)
!235 = !DIDerivedType(tag: DW_TAG_member, name: "propbit", scope: !216, file: !217, line: 137, baseType: !236, size: 64, offset: 256)
!236 = !DICompositeType(tag: DW_TAG_array_type, baseType: !190, size: 64, elements: !237)
!237 = !{!238}
!238 = !DISubrange(count: 1)
!239 = !DIDerivedType(tag: DW_TAG_member, name: "evbit", scope: !216, file: !217, line: 139, baseType: !236, size: 64, offset: 320)
!240 = !DIDerivedType(tag: DW_TAG_member, name: "keybit", scope: !216, file: !217, line: 140, baseType: !241, size: 768, offset: 384)
!241 = !DICompositeType(tag: DW_TAG_array_type, baseType: !190, size: 768, elements: !242)
!242 = !{!243}
!243 = !DISubrange(count: 12)
!244 = !DIDerivedType(tag: DW_TAG_member, name: "relbit", scope: !216, file: !217, line: 141, baseType: !236, size: 64, offset: 1152)
!245 = !DIDerivedType(tag: DW_TAG_member, name: "absbit", scope: !216, file: !217, line: 142, baseType: !236, size: 64, offset: 1216)
!246 = !DIDerivedType(tag: DW_TAG_member, name: "mscbit", scope: !216, file: !217, line: 143, baseType: !236, size: 64, offset: 1280)
!247 = !DIDerivedType(tag: DW_TAG_member, name: "ledbit", scope: !216, file: !217, line: 144, baseType: !236, size: 64, offset: 1344)
!248 = !DIDerivedType(tag: DW_TAG_member, name: "sndbit", scope: !216, file: !217, line: 145, baseType: !236, size: 64, offset: 1408)
!249 = !DIDerivedType(tag: DW_TAG_member, name: "ffbit", scope: !216, file: !217, line: 146, baseType: !250, size: 128, offset: 1472)
!250 = !DICompositeType(tag: DW_TAG_array_type, baseType: !190, size: 128, elements: !251)
!251 = !{!252}
!252 = !DISubrange(count: 2)
!253 = !DIDerivedType(tag: DW_TAG_member, name: "swbit", scope: !216, file: !217, line: 147, baseType: !236, size: 64, offset: 1600)
!254 = !DIDerivedType(tag: DW_TAG_member, name: "hint_events_per_packet", scope: !216, file: !217, line: 149, baseType: !7, size: 32, offset: 1664)
!255 = !DIDerivedType(tag: DW_TAG_member, name: "keycodemax", scope: !216, file: !217, line: 151, baseType: !7, size: 32, offset: 1696)
!256 = !DIDerivedType(tag: DW_TAG_member, name: "keycodesize", scope: !216, file: !217, line: 152, baseType: !7, size: 32, offset: 1728)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "keycode", scope: !216, file: !217, line: 153, baseType: !191, size: 64, offset: 1792)
!258 = !DIDerivedType(tag: DW_TAG_member, name: "setkeycode", scope: !216, file: !217, line: 155, baseType: !259, size: 64, offset: 1856)
!259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !260, size: 64)
!260 = !DISubroutineType(types: !261)
!261 = !{!262, !215, !263, !278}
!262 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !264, size: 64)
!264 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !265)
!265 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "input_keymap_entry", file: !226, line: 114, size: 320, elements: !266)
!266 = !{!267, !270, !271, !272, !274}
!267 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !265, file: !226, line: 116, baseType: !268, size: 8)
!268 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u8", file: !230, line: 21, baseType: !269)
!269 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!270 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !265, file: !226, line: 117, baseType: !268, size: 8, offset: 8)
!271 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !265, file: !226, line: 118, baseType: !229, size: 16, offset: 16)
!272 = !DIDerivedType(tag: DW_TAG_member, name: "keycode", scope: !265, file: !226, line: 119, baseType: !273, size: 32, offset: 32)
!273 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u32", file: !230, line: 27, baseType: !7)
!274 = !DIDerivedType(tag: DW_TAG_member, name: "scancode", scope: !265, file: !226, line: 120, baseType: !275, size: 256, offset: 64)
!275 = !DICompositeType(tag: DW_TAG_array_type, baseType: !268, size: 256, elements: !276)
!276 = !{!277}
!277 = !DISubrange(count: 32)
!278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!279 = !DIDerivedType(tag: DW_TAG_member, name: "getkeycode", scope: !216, file: !217, line: 158, baseType: !280, size: 64, offset: 1920)
!280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !281, size: 64)
!281 = !DISubroutineType(types: !282)
!282 = !{!262, !215, !283}
!283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !265, size: 64)
!284 = !DIDerivedType(tag: DW_TAG_member, name: "ff", scope: !216, file: !217, line: 161, baseType: !285, size: 64, offset: 1984)
!285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !286, size: 64)
!286 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ff_device", file: !217, line: 534, size: 896, elements: !287)
!287 = !{!288, !357, !361, !365, !371, !372, !376, !377, !378, !409, !410, !411}
!288 = !DIDerivedType(tag: DW_TAG_member, name: "upload", scope: !286, file: !217, line: 535, baseType: !289, size: 64)
!289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !290, size: 64)
!290 = !DISubroutineType(types: !291)
!291 = !{!262, !215, !292, !292}
!292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !293, size: 64)
!293 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ff_effect", file: !226, line: 450, size: 384, elements: !294)
!294 = !{!295, !296, !299, !300, !305, !310}
!295 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !293, file: !226, line: 451, baseType: !229, size: 16)
!296 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !293, file: !226, line: 452, baseType: !297, size: 16, offset: 16)
!297 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s16", file: !230, line: 23, baseType: !298)
!298 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!299 = !DIDerivedType(tag: DW_TAG_member, name: "direction", scope: !293, file: !226, line: 453, baseType: !229, size: 16, offset: 32)
!300 = !DIDerivedType(tag: DW_TAG_member, name: "trigger", scope: !293, file: !226, line: 454, baseType: !301, size: 32, offset: 48)
!301 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ff_trigger", file: !226, line: 316, size: 32, elements: !302)
!302 = !{!303, !304}
!303 = !DIDerivedType(tag: DW_TAG_member, name: "button", scope: !301, file: !226, line: 317, baseType: !229, size: 16)
!304 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !301, file: !226, line: 318, baseType: !229, size: 16, offset: 16)
!305 = !DIDerivedType(tag: DW_TAG_member, name: "replay", scope: !293, file: !226, line: 455, baseType: !306, size: 32, offset: 80)
!306 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ff_replay", file: !226, line: 306, size: 32, elements: !307)
!307 = !{!308, !309}
!308 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !306, file: !226, line: 307, baseType: !229, size: 16)
!309 = !DIDerivedType(tag: DW_TAG_member, name: "delay", scope: !306, file: !226, line: 308, baseType: !229, size: 16, offset: 16)
!310 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !293, file: !226, line: 463, baseType: !311, size: 256, offset: 128)
!311 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !293, file: !226, line: 457, size: 256, elements: !312)
!312 = !{!313, !324, !330, !342, !352}
!313 = !DIDerivedType(tag: DW_TAG_member, name: "constant", scope: !311, file: !226, line: 458, baseType: !314, size: 80)
!314 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ff_constant_effect", file: !226, line: 345, size: 80, elements: !315)
!315 = !{!316, !317}
!316 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !314, file: !226, line: 346, baseType: !297, size: 16)
!317 = !DIDerivedType(tag: DW_TAG_member, name: "envelope", scope: !314, file: !226, line: 347, baseType: !318, size: 64, offset: 16)
!318 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ff_envelope", file: !226, line: 333, size: 64, elements: !319)
!319 = !{!320, !321, !322, !323}
!320 = !DIDerivedType(tag: DW_TAG_member, name: "attack_length", scope: !318, file: !226, line: 334, baseType: !229, size: 16)
!321 = !DIDerivedType(tag: DW_TAG_member, name: "attack_level", scope: !318, file: !226, line: 335, baseType: !229, size: 16, offset: 16)
!322 = !DIDerivedType(tag: DW_TAG_member, name: "fade_length", scope: !318, file: !226, line: 336, baseType: !229, size: 16, offset: 32)
!323 = !DIDerivedType(tag: DW_TAG_member, name: "fade_level", scope: !318, file: !226, line: 337, baseType: !229, size: 16, offset: 48)
!324 = !DIDerivedType(tag: DW_TAG_member, name: "ramp", scope: !311, file: !226, line: 459, baseType: !325, size: 96)
!325 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ff_ramp_effect", file: !226, line: 356, size: 96, elements: !326)
!326 = !{!327, !328, !329}
!327 = !DIDerivedType(tag: DW_TAG_member, name: "start_level", scope: !325, file: !226, line: 357, baseType: !297, size: 16)
!328 = !DIDerivedType(tag: DW_TAG_member, name: "end_level", scope: !325, file: !226, line: 358, baseType: !297, size: 16, offset: 16)
!329 = !DIDerivedType(tag: DW_TAG_member, name: "envelope", scope: !325, file: !226, line: 359, baseType: !318, size: 64, offset: 32)
!330 = !DIDerivedType(tag: DW_TAG_member, name: "periodic", scope: !311, file: !226, line: 460, baseType: !331, size: 256)
!331 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ff_periodic_effect", file: !226, line: 401, size: 256, elements: !332)
!332 = !{!333, !334, !335, !336, !337, !338, !339, !340}
!333 = !DIDerivedType(tag: DW_TAG_member, name: "waveform", scope: !331, file: !226, line: 402, baseType: !229, size: 16)
!334 = !DIDerivedType(tag: DW_TAG_member, name: "period", scope: !331, file: !226, line: 403, baseType: !229, size: 16, offset: 16)
!335 = !DIDerivedType(tag: DW_TAG_member, name: "magnitude", scope: !331, file: !226, line: 404, baseType: !297, size: 16, offset: 32)
!336 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !331, file: !226, line: 405, baseType: !297, size: 16, offset: 48)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "phase", scope: !331, file: !226, line: 406, baseType: !229, size: 16, offset: 64)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "envelope", scope: !331, file: !226, line: 408, baseType: !318, size: 64, offset: 80)
!339 = !DIDerivedType(tag: DW_TAG_member, name: "custom_len", scope: !331, file: !226, line: 410, baseType: !273, size: 32, offset: 160)
!340 = !DIDerivedType(tag: DW_TAG_member, name: "custom_data", scope: !331, file: !226, line: 411, baseType: !341, size: 64, offset: 192)
!341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !297, size: 64)
!342 = !DIDerivedType(tag: DW_TAG_member, name: "condition", scope: !311, file: !226, line: 461, baseType: !343, size: 192)
!343 = !DICompositeType(tag: DW_TAG_array_type, baseType: !344, size: 192, elements: !251)
!344 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ff_condition_effect", file: !226, line: 372, size: 96, elements: !345)
!345 = !{!346, !347, !348, !349, !350, !351}
!346 = !DIDerivedType(tag: DW_TAG_member, name: "right_saturation", scope: !344, file: !226, line: 373, baseType: !229, size: 16)
!347 = !DIDerivedType(tag: DW_TAG_member, name: "left_saturation", scope: !344, file: !226, line: 374, baseType: !229, size: 16, offset: 16)
!348 = !DIDerivedType(tag: DW_TAG_member, name: "right_coeff", scope: !344, file: !226, line: 376, baseType: !297, size: 16, offset: 32)
!349 = !DIDerivedType(tag: DW_TAG_member, name: "left_coeff", scope: !344, file: !226, line: 377, baseType: !297, size: 16, offset: 48)
!350 = !DIDerivedType(tag: DW_TAG_member, name: "deadband", scope: !344, file: !226, line: 379, baseType: !229, size: 16, offset: 64)
!351 = !DIDerivedType(tag: DW_TAG_member, name: "center", scope: !344, file: !226, line: 380, baseType: !297, size: 16, offset: 80)
!352 = !DIDerivedType(tag: DW_TAG_member, name: "rumble", scope: !311, file: !226, line: 462, baseType: !353, size: 32)
!353 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ff_rumble_effect", file: !226, line: 422, size: 32, elements: !354)
!354 = !{!355, !356}
!355 = !DIDerivedType(tag: DW_TAG_member, name: "strong_magnitude", scope: !353, file: !226, line: 423, baseType: !229, size: 16)
!356 = !DIDerivedType(tag: DW_TAG_member, name: "weak_magnitude", scope: !353, file: !226, line: 424, baseType: !229, size: 16, offset: 16)
!357 = !DIDerivedType(tag: DW_TAG_member, name: "erase", scope: !286, file: !217, line: 537, baseType: !358, size: 64, offset: 64)
!358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !359, size: 64)
!359 = !DISubroutineType(types: !360)
!360 = !{!262, !215, !262}
!361 = !DIDerivedType(tag: DW_TAG_member, name: "playback", scope: !286, file: !217, line: 539, baseType: !362, size: 64, offset: 128)
!362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !363, size: 64)
!363 = !DISubroutineType(types: !364)
!364 = !{!262, !215, !262, !262}
!365 = !DIDerivedType(tag: DW_TAG_member, name: "set_gain", scope: !286, file: !217, line: 540, baseType: !366, size: 64, offset: 192)
!366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !367, size: 64)
!367 = !DISubroutineType(types: !368)
!368 = !{null, !215, !369}
!369 = !DIDerivedType(tag: DW_TAG_typedef, name: "u16", file: !370, line: 19, baseType: !229)
!370 = !DIFile(filename: "./include/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!371 = !DIDerivedType(tag: DW_TAG_member, name: "set_autocenter", scope: !286, file: !217, line: 541, baseType: !366, size: 64, offset: 256)
!372 = !DIDerivedType(tag: DW_TAG_member, name: "destroy", scope: !286, file: !217, line: 543, baseType: !373, size: 64, offset: 320)
!373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !374, size: 64)
!374 = !DISubroutineType(types: !375)
!375 = !{null, !285}
!376 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !286, file: !217, line: 545, baseType: !191, size: 64, offset: 384)
!377 = !DIDerivedType(tag: DW_TAG_member, name: "ffbit", scope: !286, file: !217, line: 547, baseType: !250, size: 128, offset: 448)
!378 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !286, file: !217, line: 549, baseType: !379, size: 192, offset: 576)
!379 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mutex", file: !380, line: 53, size: 192, elements: !381)
!380 = !DIFile(filename: "./include/linux/mutex.h", directory: "/home/lizy2001/genbc/linux")
!381 = !{!382, !392, !408}
!382 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !379, file: !380, line: 54, baseType: !383, size: 64)
!383 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_long_t", file: !384, line: 13, baseType: !385)
!384 = !DIFile(filename: "./include/asm-generic/atomic-long.h", directory: "/home/lizy2001/genbc/linux")
!385 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic64_t", file: !193, line: 175, baseType: !386)
!386 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !193, line: 173, size: 64, elements: !387)
!387 = !{!388}
!388 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !386, file: !193, line: 174, baseType: !389, size: 64)
!389 = !DIDerivedType(tag: DW_TAG_typedef, name: "s64", file: !370, line: 22, baseType: !390)
!390 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s64", file: !230, line: 30, baseType: !391)
!391 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!392 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !379, file: !380, line: 55, baseType: !393, offset: 64)
!393 = !DIDerivedType(tag: DW_TAG_typedef, name: "spinlock_t", file: !394, line: 83, baseType: !395)
!394 = !DIFile(filename: "./include/linux/spinlock_types.h", directory: "/home/lizy2001/genbc/linux")
!395 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spinlock", file: !394, line: 71, elements: !396)
!396 = !{!397}
!397 = !DIDerivedType(tag: DW_TAG_member, scope: !395, file: !394, line: 72, baseType: !398)
!398 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !395, file: !394, line: 72, elements: !399)
!399 = !{!400}
!400 = !DIDerivedType(tag: DW_TAG_member, name: "rlock", scope: !398, file: !394, line: 73, baseType: !401)
!401 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raw_spinlock", file: !394, line: 20, elements: !402)
!402 = !{!403}
!403 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !401, file: !394, line: 21, baseType: !404)
!404 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_spinlock_t", file: !405, line: 25, baseType: !406)
!405 = !DIFile(filename: "./include/linux/spinlock_types_up.h", directory: "/home/lizy2001/genbc/linux")
!406 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !405, line: 25, elements: !407)
!407 = !{}
!408 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !379, file: !380, line: 59, baseType: !202, size: 128, offset: 64)
!409 = !DIDerivedType(tag: DW_TAG_member, name: "max_effects", scope: !286, file: !217, line: 551, baseType: !262, size: 32, offset: 768)
!410 = !DIDerivedType(tag: DW_TAG_member, name: "effects", scope: !286, file: !217, line: 552, baseType: !292, size: 64, offset: 832)
!411 = !DIDerivedType(tag: DW_TAG_member, name: "effect_owners", scope: !286, file: !217, line: 553, baseType: !412, offset: 896)
!412 = !DICompositeType(tag: DW_TAG_array_type, baseType: !413, elements: !2266)
!413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !414, size: 64)
!414 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file", file: !31, line: 916, size: 1856, align: 32, elements: !415)
!415 = !{!416, !434, !3015, !3016, !3017, !3018, !3019, !3020, !3021, !3022, !3023, !3024, !3033, !3034, !3043, !3044, !3045, !3046, !3047, !3048, !3049}
!416 = !DIDerivedType(tag: DW_TAG_member, name: "f_u", scope: !414, file: !31, line: 920, baseType: !417, size: 128)
!417 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !414, file: !31, line: 917, size: 128, elements: !418)
!418 = !{!419, !425}
!419 = !DIDerivedType(tag: DW_TAG_member, name: "fu_llist", scope: !417, file: !31, line: 918, baseType: !420, size: 64)
!420 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "llist_node", file: !421, line: 58, size: 64, elements: !422)
!421 = !DIFile(filename: "./include/linux/llist.h", directory: "/home/lizy2001/genbc/linux")
!422 = !{!423}
!423 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !420, file: !421, line: 59, baseType: !424, size: 64)
!424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !420, size: 64)
!425 = !DIDerivedType(tag: DW_TAG_member, name: "fu_rcuhead", scope: !417, file: !31, line: 919, baseType: !426, size: 128, align: 64)
!426 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "callback_head", file: !193, line: 216, size: 128, align: 64, elements: !427)
!427 = !{!428, !430}
!428 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !426, file: !193, line: 217, baseType: !429, size: 64)
!429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !426, size: 64)
!430 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !426, file: !193, line: 218, baseType: !431, size: 64, offset: 64)
!431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !432, size: 64)
!432 = !DISubroutineType(types: !433)
!433 = !{null, !429}
!434 = !DIDerivedType(tag: DW_TAG_member, name: "f_path", scope: !414, file: !31, line: 921, baseType: !435, size: 128, offset: 128)
!435 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "path", file: !436, line: 8, size: 128, elements: !437)
!436 = !DIFile(filename: "./include/linux/path.h", directory: "/home/lizy2001/genbc/linux")
!437 = !{!438, !442}
!438 = !DIDerivedType(tag: DW_TAG_member, name: "mnt", scope: !435, file: !436, line: 9, baseType: !439, size: 64)
!439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !440, size: 64)
!440 = !DICompositeType(tag: DW_TAG_structure_type, name: "vfsmount", file: !441, line: 18, flags: DIFlagFwdDecl)
!441 = !DIFile(filename: "./include/linux/dcache.h", directory: "/home/lizy2001/genbc/linux")
!442 = !DIDerivedType(tag: DW_TAG_member, name: "dentry", scope: !435, file: !436, line: 10, baseType: !443, size: 64, offset: 64)
!443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !444, size: 64)
!444 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry", file: !441, line: 89, size: 1536, elements: !445)
!445 = !{!446, !447, !457, !465, !466, !485, !2983, !2985, !2997, !2998, !2999, !3000, !3001, !3007, !3008, !3009}
!446 = !DIDerivedType(tag: DW_TAG_member, name: "d_flags", scope: !444, file: !441, line: 91, baseType: !7, size: 32)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "d_seq", scope: !444, file: !441, line: 92, baseType: !448, size: 32, offset: 32)
!448 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_spinlock_t", file: !449, line: 277, baseType: !450)
!449 = !DIFile(filename: "./include/linux/seqlock.h", directory: "/home/lizy2001/genbc/linux")
!450 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_spinlock", file: !449, line: 277, size: 32, elements: !451)
!451 = !{!452}
!452 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !450, file: !449, line: 277, baseType: !453, size: 32)
!453 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_t", file: !449, line: 70, baseType: !454)
!454 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount", file: !449, line: 65, size: 32, elements: !455)
!455 = !{!456}
!456 = !DIDerivedType(tag: DW_TAG_member, name: "sequence", scope: !454, file: !449, line: 66, baseType: !7, size: 32)
!457 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !444, file: !441, line: 93, baseType: !458, size: 128, offset: 64)
!458 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_node", file: !459, line: 38, size: 128, elements: !460)
!459 = !DIFile(filename: "./include/linux/list_bl.h", directory: "/home/lizy2001/genbc/linux")
!460 = !{!461, !463}
!461 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !458, file: !459, line: 39, baseType: !462, size: 64)
!462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !458, size: 64)
!463 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !458, file: !459, line: 39, baseType: !464, size: 64, offset: 64)
!464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !462, size: 64)
!465 = !DIDerivedType(tag: DW_TAG_member, name: "d_parent", scope: !444, file: !441, line: 94, baseType: !443, size: 64, offset: 192)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !444, file: !441, line: 95, baseType: !467, size: 128, offset: 256)
!467 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qstr", file: !441, line: 47, size: 128, elements: !468)
!468 = !{!469, !482}
!469 = !DIDerivedType(tag: DW_TAG_member, scope: !467, file: !441, line: 48, baseType: !470, size: 64)
!470 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !467, file: !441, line: 48, size: 64, elements: !471)
!471 = !{!472, !478}
!472 = !DIDerivedType(tag: DW_TAG_member, scope: !470, file: !441, line: 49, baseType: !473, size: 64)
!473 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !470, file: !441, line: 49, size: 64, elements: !474)
!474 = !{!475, !477}
!475 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !473, file: !441, line: 50, baseType: !476, size: 32)
!476 = !DIDerivedType(tag: DW_TAG_typedef, name: "u32", file: !370, line: 21, baseType: !273)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !473, file: !441, line: 50, baseType: !476, size: 32, offset: 32)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "hash_len", scope: !470, file: !441, line: 52, baseType: !479, size: 64)
!479 = !DIDerivedType(tag: DW_TAG_typedef, name: "u64", file: !370, line: 23, baseType: !480)
!480 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u64", file: !230, line: 31, baseType: !481)
!481 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!482 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !467, file: !441, line: 54, baseType: !483, size: 64, offset: 64)
!483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !484, size: 64)
!484 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !269)
!485 = !DIDerivedType(tag: DW_TAG_member, name: "d_inode", scope: !444, file: !441, line: 96, baseType: !486, size: 64, offset: 384)
!486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !487, size: 64)
!487 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode", file: !31, line: 610, size: 4224, elements: !488)
!488 = !{!489, !491, !492, !501, !508, !509, !662, !2694, !2695, !2696, !2702, !2703, !2704, !2705, !2706, !2707, !2708, !2709, !2710, !2711, !2712, !2713, !2714, !2715, !2716, !2717, !2718, !2719, !2720, !2721, !2726, !2727, !2728, !2729, !2730, !2731, !2732, !2959, !2967, !2968, !2969, !2979, !2980, !2981, !2982}
!489 = !DIDerivedType(tag: DW_TAG_member, name: "i_mode", scope: !487, file: !31, line: 611, baseType: !490, size: 16)
!490 = !DIDerivedType(tag: DW_TAG_typedef, name: "umode_t", file: !193, line: 19, baseType: !231)
!491 = !DIDerivedType(tag: DW_TAG_member, name: "i_opflags", scope: !487, file: !31, line: 612, baseType: !231, size: 16, offset: 16)
!492 = !DIDerivedType(tag: DW_TAG_member, name: "i_uid", scope: !487, file: !31, line: 613, baseType: !493, size: 32, offset: 32)
!493 = !DIDerivedType(tag: DW_TAG_typedef, name: "kuid_t", file: !494, line: 23, baseType: !495)
!494 = !DIFile(filename: "./include/linux/uidgid.h", directory: "/home/lizy2001/genbc/linux")
!495 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !494, line: 21, size: 32, elements: !496)
!496 = !{!497}
!497 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !495, file: !494, line: 22, baseType: !498, size: 32)
!498 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !193, line: 32, baseType: !499)
!499 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_uid32_t", file: !500, line: 49, baseType: !7)
!500 = !DIFile(filename: "./include/uapi/asm-generic/posix_types.h", directory: "/home/lizy2001/genbc/linux")
!501 = !DIDerivedType(tag: DW_TAG_member, name: "i_gid", scope: !487, file: !31, line: 614, baseType: !502, size: 32, offset: 64)
!502 = !DIDerivedType(tag: DW_TAG_typedef, name: "kgid_t", file: !494, line: 28, baseType: !503)
!503 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !494, line: 26, size: 32, elements: !504)
!504 = !{!505}
!505 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !503, file: !494, line: 27, baseType: !506, size: 32)
!506 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !193, line: 33, baseType: !507)
!507 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_gid32_t", file: !500, line: 50, baseType: !7)
!508 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !487, file: !31, line: 615, baseType: !7, size: 32, offset: 96)
!509 = !DIDerivedType(tag: DW_TAG_member, name: "i_op", scope: !487, file: !31, line: 622, baseType: !510, size: 64, offset: 128)
!510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !511, size: 64)
!511 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !512)
!512 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode_operations", file: !31, line: 1864, size: 1536, align: 512, elements: !513)
!513 = !{!514, !518, !531, !535, !541, !546, !552, !556, !560, !564, !568, !569, !575, !579, !603, !632, !642, !648, !653, !657, !658}
!514 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !512, file: !31, line: 1865, baseType: !515, size: 64)
!515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !516, size: 64)
!516 = !DISubroutineType(types: !517)
!517 = !{!443, !486, !443, !7}
!518 = !DIDerivedType(tag: DW_TAG_member, name: "get_link", scope: !512, file: !31, line: 1866, baseType: !519, size: 64, offset: 64)
!519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !520, size: 64)
!520 = !DISubroutineType(types: !521)
!521 = !{!220, !443, !486, !522}
!522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !523, size: 64)
!523 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_call", file: !524, line: 10, size: 128, elements: !525)
!524 = !DIFile(filename: "./include/linux/delayed_call.h", directory: "/home/lizy2001/genbc/linux")
!525 = !{!526, !530}
!526 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !523, file: !524, line: 11, baseType: !527, size: 64)
!527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !528, size: 64)
!528 = !DISubroutineType(types: !529)
!529 = !{null, !191}
!530 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !523, file: !524, line: 12, baseType: !191, size: 64, offset: 64)
!531 = !DIDerivedType(tag: DW_TAG_member, name: "permission", scope: !512, file: !31, line: 1867, baseType: !532, size: 64, offset: 128)
!532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !533, size: 64)
!533 = !DISubroutineType(types: !534)
!534 = !{!262, !486, !262}
!535 = !DIDerivedType(tag: DW_TAG_member, name: "get_acl", scope: !512, file: !31, line: 1868, baseType: !536, size: 64, offset: 192)
!536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !537, size: 64)
!537 = !DISubroutineType(types: !538)
!538 = !{!539, !486, !262}
!539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !540, size: 64)
!540 = !DICompositeType(tag: DW_TAG_structure_type, name: "posix_acl", file: !31, line: 581, flags: DIFlagFwdDecl)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "readlink", scope: !512, file: !31, line: 1870, baseType: !542, size: 64, offset: 256)
!542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !543, size: 64)
!543 = !DISubroutineType(types: !544)
!544 = !{!262, !443, !545, !262}
!545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !198, size: 64)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "create", scope: !512, file: !31, line: 1872, baseType: !547, size: 64, offset: 320)
!547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !548, size: 64)
!548 = !DISubroutineType(types: !549)
!549 = !{!262, !486, !443, !490, !550}
!550 = !DIDerivedType(tag: DW_TAG_typedef, name: "bool", file: !193, line: 30, baseType: !551)
!551 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!552 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !512, file: !31, line: 1873, baseType: !553, size: 64, offset: 384)
!553 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !554, size: 64)
!554 = !DISubroutineType(types: !555)
!555 = !{!262, !443, !486, !443}
!556 = !DIDerivedType(tag: DW_TAG_member, name: "unlink", scope: !512, file: !31, line: 1874, baseType: !557, size: 64, offset: 448)
!557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !558, size: 64)
!558 = !DISubroutineType(types: !559)
!559 = !{!262, !486, !443}
!560 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !512, file: !31, line: 1875, baseType: !561, size: 64, offset: 512)
!561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !562, size: 64)
!562 = !DISubroutineType(types: !563)
!563 = !{!262, !486, !443, !220}
!564 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !512, file: !31, line: 1876, baseType: !565, size: 64, offset: 576)
!565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !566, size: 64)
!566 = !DISubroutineType(types: !567)
!567 = !{!262, !486, !443, !490}
!568 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !512, file: !31, line: 1877, baseType: !557, size: 64, offset: 640)
!569 = !DIDerivedType(tag: DW_TAG_member, name: "mknod", scope: !512, file: !31, line: 1878, baseType: !570, size: 64, offset: 704)
!570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !571, size: 64)
!571 = !DISubroutineType(types: !572)
!572 = !{!262, !486, !443, !490, !573}
!573 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !193, line: 16, baseType: !574)
!574 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_dev_t", file: !193, line: 13, baseType: !476)
!575 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !512, file: !31, line: 1879, baseType: !576, size: 64, offset: 768)
!576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !577, size: 64)
!577 = !DISubroutineType(types: !578)
!578 = !{!262, !486, !443, !486, !443, !7}
!579 = !DIDerivedType(tag: DW_TAG_member, name: "setattr", scope: !512, file: !31, line: 1881, baseType: !580, size: 64, offset: 832)
!580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !581, size: 64)
!581 = !DISubroutineType(types: !582)
!582 = !{!262, !443, !583}
!583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !584, size: 64)
!584 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iattr", file: !31, line: 219, size: 640, elements: !585)
!585 = !{!586, !587, !588, !589, !590, !593, !600, !601, !602}
!586 = !DIDerivedType(tag: DW_TAG_member, name: "ia_valid", scope: !584, file: !31, line: 220, baseType: !7, size: 32)
!587 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mode", scope: !584, file: !31, line: 221, baseType: !490, size: 16, offset: 32)
!588 = !DIDerivedType(tag: DW_TAG_member, name: "ia_uid", scope: !584, file: !31, line: 222, baseType: !493, size: 32, offset: 64)
!589 = !DIDerivedType(tag: DW_TAG_member, name: "ia_gid", scope: !584, file: !31, line: 223, baseType: !502, size: 32, offset: 96)
!590 = !DIDerivedType(tag: DW_TAG_member, name: "ia_size", scope: !584, file: !31, line: 224, baseType: !591, size: 64, offset: 128)
!591 = !DIDerivedType(tag: DW_TAG_typedef, name: "loff_t", file: !193, line: 46, baseType: !592)
!592 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_loff_t", file: !500, line: 88, baseType: !391)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "ia_atime", scope: !584, file: !31, line: 225, baseType: !594, size: 128, offset: 192)
!594 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec64", file: !595, line: 13, size: 128, elements: !596)
!595 = !DIFile(filename: "./include/linux/time64.h", directory: "/home/lizy2001/genbc/linux")
!596 = !{!597, !599}
!597 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !594, file: !595, line: 14, baseType: !598, size: 64)
!598 = !DIDerivedType(tag: DW_TAG_typedef, name: "time64_t", file: !595, line: 8, baseType: !390)
!599 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !594, file: !595, line: 15, baseType: !131, size: 64, offset: 64)
!600 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mtime", scope: !584, file: !31, line: 226, baseType: !594, size: 128, offset: 320)
!601 = !DIDerivedType(tag: DW_TAG_member, name: "ia_ctime", scope: !584, file: !31, line: 227, baseType: !594, size: 128, offset: 448)
!602 = !DIDerivedType(tag: DW_TAG_member, name: "ia_file", scope: !584, file: !31, line: 234, baseType: !413, size: 64, offset: 576)
!603 = !DIDerivedType(tag: DW_TAG_member, name: "getattr", scope: !512, file: !31, line: 1882, baseType: !604, size: 64, offset: 896)
!604 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !605, size: 64)
!605 = !DISubroutineType(types: !606)
!606 = !{!262, !607, !609, !476, !7}
!607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !608, size: 64)
!608 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !435)
!609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !610, size: 64)
!610 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kstat", file: !611, line: 22, size: 1152, elements: !612)
!611 = !DIFile(filename: "./include/linux/stat.h", directory: "/home/lizy2001/genbc/linux")
!612 = !{!613, !614, !615, !616, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631}
!613 = !DIDerivedType(tag: DW_TAG_member, name: "result_mask", scope: !610, file: !611, line: 23, baseType: !476, size: 32)
!614 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !610, file: !611, line: 24, baseType: !490, size: 16, offset: 32)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "nlink", scope: !610, file: !611, line: 25, baseType: !7, size: 32, offset: 64)
!616 = !DIDerivedType(tag: DW_TAG_member, name: "blksize", scope: !610, file: !611, line: 26, baseType: !617, size: 32, offset: 96)
!617 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !193, line: 104, baseType: !476)
!618 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !610, file: !611, line: 27, baseType: !479, size: 64, offset: 128)
!619 = !DIDerivedType(tag: DW_TAG_member, name: "attributes_mask", scope: !610, file: !611, line: 28, baseType: !479, size: 64, offset: 192)
!620 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !610, file: !611, line: 37, baseType: !479, size: 64, offset: 256)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !610, file: !611, line: 38, baseType: !573, size: 32, offset: 320)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "rdev", scope: !610, file: !611, line: 39, baseType: !573, size: 32, offset: 352)
!623 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !610, file: !611, line: 40, baseType: !493, size: 32, offset: 384)
!624 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !610, file: !611, line: 41, baseType: !502, size: 32, offset: 416)
!625 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !610, file: !611, line: 42, baseType: !591, size: 64, offset: 448)
!626 = !DIDerivedType(tag: DW_TAG_member, name: "atime", scope: !610, file: !611, line: 43, baseType: !594, size: 128, offset: 512)
!627 = !DIDerivedType(tag: DW_TAG_member, name: "mtime", scope: !610, file: !611, line: 44, baseType: !594, size: 128, offset: 640)
!628 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !610, file: !611, line: 45, baseType: !594, size: 128, offset: 768)
!629 = !DIDerivedType(tag: DW_TAG_member, name: "btime", scope: !610, file: !611, line: 46, baseType: !594, size: 128, offset: 896)
!630 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !610, file: !611, line: 47, baseType: !479, size: 64, offset: 1024)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_id", scope: !610, file: !611, line: 48, baseType: !479, size: 64, offset: 1088)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "listxattr", scope: !512, file: !31, line: 1883, baseType: !633, size: 64, offset: 960)
!633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !634, size: 64)
!634 = !DISubroutineType(types: !635)
!635 = !{!636, !443, !545, !639}
!636 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !193, line: 60, baseType: !637)
!637 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ssize_t", file: !500, line: 73, baseType: !638)
!638 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_long_t", file: !500, line: 15, baseType: !131)
!639 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !193, line: 55, baseType: !640)
!640 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_size_t", file: !500, line: 72, baseType: !641)
!641 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ulong_t", file: !500, line: 16, baseType: !190)
!642 = !DIDerivedType(tag: DW_TAG_member, name: "fiemap", scope: !512, file: !31, line: 1884, baseType: !643, size: 64, offset: 1024)
!643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !644, size: 64)
!644 = !DISubroutineType(types: !645)
!645 = !{!262, !486, !646, !479, !479}
!646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !647, size: 64)
!647 = !DICompositeType(tag: DW_TAG_structure_type, name: "fiemap_extent_info", file: !31, line: 50, flags: DIFlagFwdDecl)
!648 = !DIDerivedType(tag: DW_TAG_member, name: "update_time", scope: !512, file: !31, line: 1886, baseType: !649, size: 64, offset: 1088)
!649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !650, size: 64)
!650 = !DISubroutineType(types: !651)
!651 = !{!262, !486, !652, !262}
!652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !594, size: 64)
!653 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_open", scope: !512, file: !31, line: 1887, baseType: !654, size: 64, offset: 1152)
!654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !655, size: 64)
!655 = !DISubroutineType(types: !656)
!656 = !{!262, !486, !443, !413, !7, !490}
!657 = !DIDerivedType(tag: DW_TAG_member, name: "tmpfile", scope: !512, file: !31, line: 1890, baseType: !565, size: 64, offset: 1216)
!658 = !DIDerivedType(tag: DW_TAG_member, name: "set_acl", scope: !512, file: !31, line: 1891, baseType: !659, size: 64, offset: 1280)
!659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !660, size: 64)
!660 = !DISubroutineType(types: !661)
!661 = !{!262, !486, !539, !262}
!662 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb", scope: !487, file: !31, line: 623, baseType: !663, size: 64, offset: 192)
!663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !664, size: 64)
!664 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_block", file: !31, line: 1416, size: 9472, elements: !665)
!665 = !{!666, !667, !668, !669, !670, !671, !723, !2302, !2384, !2467, !2471, !2472, !2473, !2474, !2475, !2476, !2477, !2478, !2483, !2487, !2488, !2491, !2492, !2495, !2496, !2497, !2538, !2564, !2565, !2566, !2567, !2568, !2569, !2572, !2574, !2581, !2582, !2584, !2585, !2586, !2645, !2646, !2661, !2662, !2663, !2664, !2665, !2668, !2669, !2670, !2685, !2686, !2687, !2688, !2689, !2690, !2691, !2692, !2693}
!666 = !DIDerivedType(tag: DW_TAG_member, name: "s_list", scope: !664, file: !31, line: 1417, baseType: !202, size: 128)
!667 = !DIDerivedType(tag: DW_TAG_member, name: "s_dev", scope: !664, file: !31, line: 1418, baseType: !573, size: 32, offset: 128)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize_bits", scope: !664, file: !31, line: 1419, baseType: !269, size: 8, offset: 160)
!669 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize", scope: !664, file: !31, line: 1420, baseType: !190, size: 64, offset: 192)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "s_maxbytes", scope: !664, file: !31, line: 1421, baseType: !591, size: 64, offset: 256)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "s_type", scope: !664, file: !31, line: 1422, baseType: !672, size: 64, offset: 320)
!672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !673, size: 64)
!673 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_system_type", file: !31, line: 2228, size: 576, elements: !674)
!674 = !{!675, !676, !677, !684, !688, !692, !696, !700, !701, !711, !714, !715, !716, !720, !721, !722}
!675 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !673, file: !31, line: 2229, baseType: !220, size: 64)
!676 = !DIDerivedType(tag: DW_TAG_member, name: "fs_flags", scope: !673, file: !31, line: 2230, baseType: !262, size: 32, offset: 64)
!677 = !DIDerivedType(tag: DW_TAG_member, name: "init_fs_context", scope: !673, file: !31, line: 2238, baseType: !678, size: 64, offset: 128)
!678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !679, size: 64)
!679 = !DISubroutineType(types: !680)
!680 = !{!262, !681}
!681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !682, size: 64)
!682 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_context", file: !683, line: 28, flags: DIFlagFwdDecl)
!683 = !DIFile(filename: "./include/linux/kernfs.h", directory: "/home/lizy2001/genbc/linux")
!684 = !DIDerivedType(tag: DW_TAG_member, name: "parameters", scope: !673, file: !31, line: 2239, baseType: !685, size: 64, offset: 192)
!685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !686, size: 64)
!686 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !687)
!687 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_parameter_spec", file: !31, line: 70, flags: DIFlagFwdDecl)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "mount", scope: !673, file: !31, line: 2240, baseType: !689, size: 64, offset: 256)
!689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !690, size: 64)
!690 = !DISubroutineType(types: !691)
!691 = !{!443, !672, !262, !220, !191}
!692 = !DIDerivedType(tag: DW_TAG_member, name: "kill_sb", scope: !673, file: !31, line: 2242, baseType: !693, size: 64, offset: 320)
!693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !694, size: 64)
!694 = !DISubroutineType(types: !695)
!695 = !{null, !663}
!696 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !673, file: !31, line: 2243, baseType: !697, size: 64, offset: 384)
!697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !698, size: 64)
!698 = !DICompositeType(tag: DW_TAG_structure_type, name: "module", file: !699, line: 76, flags: DIFlagFwdDecl)
!699 = !DIFile(filename: "./arch/x86/include/asm/alternative.h", directory: "/home/lizy2001/genbc/linux")
!700 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !673, file: !31, line: 2244, baseType: !672, size: 64, offset: 448)
!701 = !DIDerivedType(tag: DW_TAG_member, name: "fs_supers", scope: !673, file: !31, line: 2245, baseType: !702, size: 64, offset: 512)
!702 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_head", file: !193, line: 182, size: 64, elements: !703)
!703 = !{!704}
!704 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !702, file: !193, line: 183, baseType: !705, size: 64)
!705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !706, size: 64)
!706 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_node", file: !193, line: 186, size: 128, elements: !707)
!707 = !{!708, !709}
!708 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !706, file: !193, line: 187, baseType: !705, size: 64)
!709 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !706, file: !193, line: 187, baseType: !710, size: 64, offset: 64)
!710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !705, size: 64)
!711 = !DIDerivedType(tag: DW_TAG_member, name: "s_lock_key", scope: !673, file: !31, line: 2247, baseType: !712, offset: 576)
!712 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_class_key", file: !713, line: 187, elements: !407)
!713 = !DIFile(filename: "./include/linux/lockdep_types.h", directory: "/home/lizy2001/genbc/linux")
!714 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount_key", scope: !673, file: !31, line: 2248, baseType: !712, offset: 576)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_key", scope: !673, file: !31, line: 2249, baseType: !712, offset: 576)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers_key", scope: !673, file: !31, line: 2250, baseType: !717, offset: 576)
!717 = !DICompositeType(tag: DW_TAG_array_type, baseType: !712, elements: !718)
!718 = !{!719}
!719 = !DISubrange(count: 3)
!720 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock_key", scope: !673, file: !31, line: 2252, baseType: !712, offset: 576)
!721 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_key", scope: !673, file: !31, line: 2253, baseType: !712, offset: 576)
!722 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_dir_key", scope: !673, file: !31, line: 2254, baseType: !712, offset: 576)
!723 = !DIDerivedType(tag: DW_TAG_member, name: "s_op", scope: !664, file: !31, line: 1423, baseType: !724, size: 64, offset: 384)
!724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !725, size: 64)
!725 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !726)
!726 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_operations", file: !31, line: 1935, size: 1472, elements: !727)
!727 = !{!728, !732, !736, !737, !741, !747, !751, !752, !753, !757, !761, !762, !763, !764, !770, !775, !776, !783, !784, !785, !786, !2286, !2301}
!728 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_inode", scope: !726, file: !31, line: 1936, baseType: !729, size: 64)
!729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !730, size: 64)
!730 = !DISubroutineType(types: !731)
!731 = !{!486, !663}
!732 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_inode", scope: !726, file: !31, line: 1937, baseType: !733, size: 64, offset: 64)
!733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !734, size: 64)
!734 = !DISubroutineType(types: !735)
!735 = !{null, !486}
!736 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !726, file: !31, line: 1938, baseType: !733, size: 64, offset: 128)
!737 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_inode", scope: !726, file: !31, line: 1940, baseType: !738, size: 64, offset: 192)
!738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !739, size: 64)
!739 = !DISubroutineType(types: !740)
!740 = !{null, !486, !262}
!741 = !DIDerivedType(tag: DW_TAG_member, name: "write_inode", scope: !726, file: !31, line: 1941, baseType: !742, size: 64, offset: 256)
!742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !743, size: 64)
!743 = !DISubroutineType(types: !744)
!744 = !{!262, !486, !745}
!745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !746, size: 64)
!746 = !DICompositeType(tag: DW_TAG_structure_type, name: "writeback_control", file: !31, line: 289, flags: DIFlagFwdDecl)
!747 = !DIDerivedType(tag: DW_TAG_member, name: "drop_inode", scope: !726, file: !31, line: 1942, baseType: !748, size: 64, offset: 320)
!748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !749, size: 64)
!749 = !DISubroutineType(types: !750)
!750 = !{!262, !486}
!751 = !DIDerivedType(tag: DW_TAG_member, name: "evict_inode", scope: !726, file: !31, line: 1943, baseType: !733, size: 64, offset: 384)
!752 = !DIDerivedType(tag: DW_TAG_member, name: "put_super", scope: !726, file: !31, line: 1944, baseType: !693, size: 64, offset: 448)
!753 = !DIDerivedType(tag: DW_TAG_member, name: "sync_fs", scope: !726, file: !31, line: 1945, baseType: !754, size: 64, offset: 512)
!754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !755, size: 64)
!755 = !DISubroutineType(types: !756)
!756 = !{!262, !663, !262}
!757 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_super", scope: !726, file: !31, line: 1946, baseType: !758, size: 64, offset: 576)
!758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !759, size: 64)
!759 = !DISubroutineType(types: !760)
!760 = !{!262, !663}
!761 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_fs", scope: !726, file: !31, line: 1947, baseType: !758, size: 64, offset: 640)
!762 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_super", scope: !726, file: !31, line: 1948, baseType: !758, size: 64, offset: 704)
!763 = !DIDerivedType(tag: DW_TAG_member, name: "unfreeze_fs", scope: !726, file: !31, line: 1949, baseType: !758, size: 64, offset: 768)
!764 = !DIDerivedType(tag: DW_TAG_member, name: "statfs", scope: !726, file: !31, line: 1950, baseType: !765, size: 64, offset: 832)
!765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !766, size: 64)
!766 = !DISubroutineType(types: !767)
!767 = !{!262, !443, !768}
!768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !769, size: 64)
!769 = !DICompositeType(tag: DW_TAG_structure_type, name: "kstatfs", file: !31, line: 57, flags: DIFlagFwdDecl)
!770 = !DIDerivedType(tag: DW_TAG_member, name: "remount_fs", scope: !726, file: !31, line: 1951, baseType: !771, size: 64, offset: 896)
!771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !772, size: 64)
!772 = !DISubroutineType(types: !773)
!773 = !{!262, !663, !774, !545}
!774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !262, size: 64)
!775 = !DIDerivedType(tag: DW_TAG_member, name: "umount_begin", scope: !726, file: !31, line: 1952, baseType: !693, size: 64, offset: 960)
!776 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !726, file: !31, line: 1954, baseType: !777, size: 64, offset: 1024)
!777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !778, size: 64)
!778 = !DISubroutineType(types: !779)
!779 = !{!262, !780, !443}
!780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !781, size: 64)
!781 = !DICompositeType(tag: DW_TAG_structure_type, name: "seq_file", file: !782, line: 539, flags: DIFlagFwdDecl)
!782 = !DIFile(filename: "./arch/x86/include/asm/pgtable_types.h", directory: "/home/lizy2001/genbc/linux")
!783 = !DIDerivedType(tag: DW_TAG_member, name: "show_devname", scope: !726, file: !31, line: 1955, baseType: !777, size: 64, offset: 1088)
!784 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !726, file: !31, line: 1956, baseType: !777, size: 64, offset: 1152)
!785 = !DIDerivedType(tag: DW_TAG_member, name: "show_stats", scope: !726, file: !31, line: 1957, baseType: !777, size: 64, offset: 1216)
!786 = !DIDerivedType(tag: DW_TAG_member, name: "bdev_try_to_free_page", scope: !726, file: !31, line: 1963, baseType: !787, size: 64, offset: 1280)
!787 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !788, size: 64)
!788 = !DISubroutineType(types: !789)
!789 = !{!262, !663, !790, !192}
!790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !791, size: 64)
!791 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page", file: !792, line: 68, size: 512, align: 128, elements: !793)
!792 = !DIFile(filename: "./include/linux/mm_types.h", directory: "/home/lizy2001/genbc/linux")
!793 = !{!794, !795, !2278, !2285}
!794 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !791, file: !792, line: 69, baseType: !190, size: 64)
!795 = !DIDerivedType(tag: DW_TAG_member, scope: !791, file: !792, line: 77, baseType: !796, size: 320, offset: 64)
!796 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !791, file: !792, line: 77, size: 320, elements: !797)
!797 = !{!798, !976, !981, !1009, !1017, !1023, !2270, !2277}
!798 = !DIDerivedType(tag: DW_TAG_member, scope: !796, file: !792, line: 78, baseType: !799, size: 320)
!799 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !796, file: !792, line: 78, size: 320, elements: !800)
!800 = !{!801, !802, !974, !975}
!801 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !799, file: !792, line: 84, baseType: !202, size: 128)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !799, file: !792, line: 86, baseType: !803, size: 64, offset: 128)
!803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !804, size: 64)
!804 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space", file: !31, line: 451, size: 1216, align: 64, elements: !805)
!805 = !{!806, !807, !814, !815, !820, !835, !844, !845, !846, !847, !967, !968, !971, !972, !973}
!806 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !804, file: !31, line: 452, baseType: !486, size: 64)
!807 = !DIDerivedType(tag: DW_TAG_member, name: "i_pages", scope: !804, file: !31, line: 453, baseType: !808, size: 128, offset: 64)
!808 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xarray", file: !809, line: 292, size: 128, elements: !810)
!809 = !DIFile(filename: "./include/linux/xarray.h", directory: "/home/lizy2001/genbc/linux")
!810 = !{!811, !812, !813}
!811 = !DIDerivedType(tag: DW_TAG_member, name: "xa_lock", scope: !808, file: !809, line: 293, baseType: !393)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "xa_flags", scope: !808, file: !809, line: 295, baseType: !192, size: 32)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "xa_head", scope: !808, file: !809, line: 296, baseType: !191, size: 64, offset: 64)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !804, file: !31, line: 454, baseType: !192, size: 32, offset: 192)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_writable", scope: !804, file: !31, line: 455, baseType: !816, size: 32, offset: 224)
!816 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !193, line: 168, baseType: !817)
!817 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !193, line: 166, size: 32, elements: !818)
!818 = !{!819}
!819 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !817, file: !193, line: 167, baseType: !262, size: 32)
!820 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap", scope: !804, file: !31, line: 460, baseType: !821, size: 128, offset: 256)
!821 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root_cached", file: !822, line: 125, size: 128, elements: !823)
!822 = !DIFile(filename: "./include/linux/rbtree.h", directory: "/home/lizy2001/genbc/linux")
!823 = !{!824, !834}
!824 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !821, file: !822, line: 126, baseType: !825, size: 64)
!825 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root", file: !822, line: 31, size: 64, elements: !826)
!826 = !{!827}
!827 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !825, file: !822, line: 32, baseType: !828, size: 64)
!828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !829, size: 64)
!829 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_node", file: !822, line: 24, size: 192, align: 64, elements: !830)
!830 = !{!831, !832, !833}
!831 = !DIDerivedType(tag: DW_TAG_member, name: "__rb_parent_color", scope: !829, file: !822, line: 25, baseType: !190, size: 64)
!832 = !DIDerivedType(tag: DW_TAG_member, name: "rb_right", scope: !829, file: !822, line: 26, baseType: !828, size: 64, offset: 64)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "rb_left", scope: !829, file: !822, line: 27, baseType: !828, size: 64, offset: 128)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "rb_leftmost", scope: !821, file: !822, line: 127, baseType: !828, size: 64, offset: 64)
!835 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_rwsem", scope: !804, file: !31, line: 461, baseType: !836, size: 256, offset: 384)
!836 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rw_semaphore", file: !837, line: 35, size: 256, elements: !838)
!837 = !DIFile(filename: "./include/linux/rwsem.h", directory: "/home/lizy2001/genbc/linux")
!838 = !{!839, !840, !841, !843}
!839 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !836, file: !837, line: 36, baseType: !383, size: 64)
!840 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !836, file: !837, line: 42, baseType: !383, size: 64, offset: 64)
!841 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !836, file: !837, line: 46, baseType: !842, offset: 128)
!842 = !DIDerivedType(tag: DW_TAG_typedef, name: "raw_spinlock_t", file: !394, line: 29, baseType: !401)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !836, file: !837, line: 47, baseType: !202, size: 128, offset: 128)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "nrpages", scope: !804, file: !31, line: 462, baseType: !190, size: 64, offset: 640)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "nrexceptional", scope: !804, file: !31, line: 463, baseType: !190, size: 64, offset: 704)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "writeback_index", scope: !804, file: !31, line: 464, baseType: !190, size: 64, offset: 768)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "a_ops", scope: !804, file: !31, line: 465, baseType: !848, size: 64, offset: 832)
!848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !849, size: 64)
!849 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !850)
!850 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space_operations", file: !31, line: 367, size: 1408, elements: !851)
!851 = !{!852, !856, !860, !864, !868, !872, !878, !884, !888, !893, !897, !901, !905, !931, !935, !941, !942, !943, !947, !952, !956, !963}
!852 = !DIDerivedType(tag: DW_TAG_member, name: "writepage", scope: !850, file: !31, line: 368, baseType: !853, size: 64)
!853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !854, size: 64)
!854 = !DISubroutineType(types: !855)
!855 = !{!262, !790, !745}
!856 = !DIDerivedType(tag: DW_TAG_member, name: "readpage", scope: !850, file: !31, line: 369, baseType: !857, size: 64, offset: 64)
!857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !858, size: 64)
!858 = !DISubroutineType(types: !859)
!859 = !{!262, !413, !790}
!860 = !DIDerivedType(tag: DW_TAG_member, name: "writepages", scope: !850, file: !31, line: 372, baseType: !861, size: 64, offset: 128)
!861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !862, size: 64)
!862 = !DISubroutineType(types: !863)
!863 = !{!262, !803, !745}
!864 = !DIDerivedType(tag: DW_TAG_member, name: "set_page_dirty", scope: !850, file: !31, line: 375, baseType: !865, size: 64, offset: 192)
!865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !866, size: 64)
!866 = !DISubroutineType(types: !867)
!867 = !{!262, !790}
!868 = !DIDerivedType(tag: DW_TAG_member, name: "readpages", scope: !850, file: !31, line: 381, baseType: !869, size: 64, offset: 256)
!869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !870, size: 64)
!870 = !DISubroutineType(types: !871)
!871 = !{!262, !413, !803, !201, !7}
!872 = !DIDerivedType(tag: DW_TAG_member, name: "readahead", scope: !850, file: !31, line: 383, baseType: !873, size: 64, offset: 320)
!873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !874, size: 64)
!874 = !DISubroutineType(types: !875)
!875 = !{null, !876}
!876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !877, size: 64)
!877 = !DICompositeType(tag: DW_TAG_structure_type, name: "readahead_control", file: !31, line: 290, flags: DIFlagFwdDecl)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "write_begin", scope: !850, file: !31, line: 385, baseType: !879, size: 64, offset: 384)
!879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !880, size: 64)
!880 = !DISubroutineType(types: !881)
!881 = !{!262, !413, !803, !591, !7, !7, !882, !883}
!882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !790, size: 64)
!883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !191, size: 64)
!884 = !DIDerivedType(tag: DW_TAG_member, name: "write_end", scope: !850, file: !31, line: 388, baseType: !885, size: 64, offset: 448)
!885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !886, size: 64)
!886 = !DISubroutineType(types: !887)
!887 = !{!262, !413, !803, !591, !7, !7, !790, !191}
!888 = !DIDerivedType(tag: DW_TAG_member, name: "bmap", scope: !850, file: !31, line: 393, baseType: !889, size: 64, offset: 512)
!889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !890, size: 64)
!890 = !DISubroutineType(types: !891)
!891 = !{!892, !803, !892}
!892 = !DIDerivedType(tag: DW_TAG_typedef, name: "sector_t", file: !193, line: 125, baseType: !479)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "invalidatepage", scope: !850, file: !31, line: 394, baseType: !894, size: 64, offset: 576)
!894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !895, size: 64)
!895 = !DISubroutineType(types: !896)
!896 = !{null, !790, !7, !7}
!897 = !DIDerivedType(tag: DW_TAG_member, name: "releasepage", scope: !850, file: !31, line: 395, baseType: !898, size: 64, offset: 640)
!898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !899, size: 64)
!899 = !DISubroutineType(types: !900)
!900 = !{!262, !790, !192}
!901 = !DIDerivedType(tag: DW_TAG_member, name: "freepage", scope: !850, file: !31, line: 396, baseType: !902, size: 64, offset: 704)
!902 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !903, size: 64)
!903 = !DISubroutineType(types: !904)
!904 = !{null, !790}
!905 = !DIDerivedType(tag: DW_TAG_member, name: "direct_IO", scope: !850, file: !31, line: 397, baseType: !906, size: 64, offset: 768)
!906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !907, size: 64)
!907 = !DISubroutineType(types: !908)
!908 = !{!636, !909, !929}
!909 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !910, size: 64)
!910 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kiocb", file: !31, line: 320, size: 384, elements: !911)
!911 = !{!912, !913, !914, !918, !919, !920, !921, !922}
!912 = !DIDerivedType(tag: DW_TAG_member, name: "ki_filp", scope: !910, file: !31, line: 321, baseType: !413, size: 64)
!913 = !DIDerivedType(tag: DW_TAG_member, name: "ki_pos", scope: !910, file: !31, line: 326, baseType: !591, size: 64, offset: 64)
!914 = !DIDerivedType(tag: DW_TAG_member, name: "ki_complete", scope: !910, file: !31, line: 327, baseType: !915, size: 64, offset: 128)
!915 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !916, size: 64)
!916 = !DISubroutineType(types: !917)
!917 = !{null, !909, !131, !131}
!918 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !910, file: !31, line: 328, baseType: !191, size: 64, offset: 192)
!919 = !DIDerivedType(tag: DW_TAG_member, name: "ki_flags", scope: !910, file: !31, line: 329, baseType: !262, size: 32, offset: 256)
!920 = !DIDerivedType(tag: DW_TAG_member, name: "ki_hint", scope: !910, file: !31, line: 330, baseType: !369, size: 16, offset: 288)
!921 = !DIDerivedType(tag: DW_TAG_member, name: "ki_ioprio", scope: !910, file: !31, line: 331, baseType: !369, size: 16, offset: 304)
!922 = !DIDerivedType(tag: DW_TAG_member, scope: !910, file: !31, line: 332, baseType: !923, size: 64, offset: 320)
!923 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !910, file: !31, line: 332, size: 64, elements: !924)
!924 = !{!925, !926}
!925 = !DIDerivedType(tag: DW_TAG_member, name: "ki_cookie", scope: !923, file: !31, line: 333, baseType: !7, size: 32)
!926 = !DIDerivedType(tag: DW_TAG_member, name: "ki_waitq", scope: !923, file: !31, line: 334, baseType: !927, size: 64)
!927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !928, size: 64)
!928 = !DICompositeType(tag: DW_TAG_structure_type, name: "wait_page_queue", file: !31, line: 334, flags: DIFlagFwdDecl)
!929 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !930, size: 64)
!930 = !DICompositeType(tag: DW_TAG_structure_type, name: "iov_iter", file: !31, line: 64, flags: DIFlagFwdDecl)
!931 = !DIDerivedType(tag: DW_TAG_member, name: "migratepage", scope: !850, file: !31, line: 402, baseType: !932, size: 64, offset: 832)
!932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !933, size: 64)
!933 = !DISubroutineType(types: !934)
!934 = !{!262, !803, !790, !790, !5}
!935 = !DIDerivedType(tag: DW_TAG_member, name: "isolate_page", scope: !850, file: !31, line: 404, baseType: !936, size: 64, offset: 896)
!936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !937, size: 64)
!937 = !DISubroutineType(types: !938)
!938 = !{!550, !790, !939}
!939 = !DIDerivedType(tag: DW_TAG_typedef, name: "isolate_mode_t", file: !940, line: 305, baseType: !7)
!940 = !DIFile(filename: "./include/linux/mmzone.h", directory: "/home/lizy2001/genbc/linux")
!941 = !DIDerivedType(tag: DW_TAG_member, name: "putback_page", scope: !850, file: !31, line: 405, baseType: !902, size: 64, offset: 960)
!942 = !DIDerivedType(tag: DW_TAG_member, name: "launder_page", scope: !850, file: !31, line: 406, baseType: !865, size: 64, offset: 1024)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "is_partially_uptodate", scope: !850, file: !31, line: 407, baseType: !944, size: 64, offset: 1088)
!944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !945, size: 64)
!945 = !DISubroutineType(types: !946)
!946 = !{!262, !790, !190, !190}
!947 = !DIDerivedType(tag: DW_TAG_member, name: "is_dirty_writeback", scope: !850, file: !31, line: 409, baseType: !948, size: 64, offset: 1152)
!948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !949, size: 64)
!949 = !DISubroutineType(types: !950)
!950 = !{null, !790, !951, !951}
!951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !550, size: 64)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "error_remove_page", scope: !850, file: !31, line: 410, baseType: !953, size: 64, offset: 1216)
!953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !954, size: 64)
!954 = !DISubroutineType(types: !955)
!955 = !{!262, !803, !790}
!956 = !DIDerivedType(tag: DW_TAG_member, name: "swap_activate", scope: !850, file: !31, line: 413, baseType: !957, size: 64, offset: 1280)
!957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !958, size: 64)
!958 = !DISubroutineType(types: !959)
!959 = !{!262, !960, !413, !962}
!960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !961, size: 64)
!961 = !DICompositeType(tag: DW_TAG_structure_type, name: "swap_info_struct", file: !31, line: 61, flags: DIFlagFwdDecl)
!962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !892, size: 64)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "swap_deactivate", scope: !850, file: !31, line: 415, baseType: !964, size: 64, offset: 1344)
!964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !965, size: 64)
!965 = !DISubroutineType(types: !966)
!966 = !{null, !413}
!967 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !804, file: !31, line: 466, baseType: !190, size: 64, offset: 896)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "wb_err", scope: !804, file: !31, line: 467, baseType: !969, size: 32, offset: 960)
!969 = !DIDerivedType(tag: DW_TAG_typedef, name: "errseq_t", file: !970, line: 8, baseType: !476)
!970 = !DIFile(filename: "./include/linux/errseq.h", directory: "/home/lizy2001/genbc/linux")
!971 = !DIDerivedType(tag: DW_TAG_member, name: "private_lock", scope: !804, file: !31, line: 468, baseType: !393, offset: 992)
!972 = !DIDerivedType(tag: DW_TAG_member, name: "private_list", scope: !804, file: !31, line: 469, baseType: !202, size: 128, offset: 1024)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !804, file: !31, line: 470, baseType: !191, size: 64, offset: 1152)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !799, file: !792, line: 87, baseType: !190, size: 64, offset: 192)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !799, file: !792, line: 94, baseType: !190, size: 64, offset: 256)
!976 = !DIDerivedType(tag: DW_TAG_member, scope: !796, file: !792, line: 96, baseType: !977, size: 64)
!977 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !796, file: !792, line: 96, size: 64, elements: !978)
!978 = !{!979}
!979 = !DIDerivedType(tag: DW_TAG_member, name: "dma_addr", scope: !977, file: !792, line: 101, baseType: !980, size: 64)
!980 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_addr_t", file: !193, line: 143, baseType: !479)
!981 = !DIDerivedType(tag: DW_TAG_member, scope: !796, file: !792, line: 103, baseType: !982, size: 320)
!982 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !796, file: !792, line: 103, size: 320, elements: !983)
!983 = !{!984, !994, !997, !998}
!984 = !DIDerivedType(tag: DW_TAG_member, scope: !982, file: !792, line: 104, baseType: !985, size: 128)
!985 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !982, file: !792, line: 104, size: 128, elements: !986)
!986 = !{!987, !988}
!987 = !DIDerivedType(tag: DW_TAG_member, name: "slab_list", scope: !985, file: !792, line: 105, baseType: !202, size: 128)
!988 = !DIDerivedType(tag: DW_TAG_member, scope: !985, file: !792, line: 106, baseType: !989, size: 128)
!989 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !985, file: !792, line: 106, size: 128, elements: !990)
!990 = !{!991, !992, !993}
!991 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !989, file: !792, line: 107, baseType: !790, size: 64)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !989, file: !792, line: 109, baseType: !262, size: 32, offset: 64)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "pobjects", scope: !989, file: !792, line: 110, baseType: !262, size: 32, offset: 96)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "slab_cache", scope: !982, file: !792, line: 117, baseType: !995, size: 64, offset: 128)
!995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !996, size: 64)
!996 = !DICompositeType(tag: DW_TAG_structure_type, name: "kmem_cache", file: !792, line: 117, flags: DIFlagFwdDecl)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "freelist", scope: !982, file: !792, line: 119, baseType: !191, size: 64, offset: 192)
!998 = !DIDerivedType(tag: DW_TAG_member, scope: !982, file: !792, line: 120, baseType: !999, size: 64, offset: 256)
!999 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !982, file: !792, line: 120, size: 64, elements: !1000)
!1000 = !{!1001, !1002, !1003}
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "s_mem", scope: !999, file: !792, line: 121, baseType: !191, size: 64)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "counters", scope: !999, file: !792, line: 122, baseType: !190, size: 64)
!1003 = !DIDerivedType(tag: DW_TAG_member, scope: !999, file: !792, line: 123, baseType: !1004, size: 32)
!1004 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !999, file: !792, line: 123, size: 32, elements: !1005)
!1005 = !{!1006, !1007, !1008}
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "inuse", scope: !1004, file: !792, line: 124, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !1004, file: !792, line: 125, baseType: !7, size: 15, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !1004, file: !792, line: 126, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!1009 = !DIDerivedType(tag: DW_TAG_member, scope: !796, file: !792, line: 130, baseType: !1010, size: 192)
!1010 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !796, file: !792, line: 130, size: 192, elements: !1011)
!1011 = !{!1012, !1013, !1014, !1015, !1016}
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "compound_head", scope: !1010, file: !792, line: 131, baseType: !190, size: 64)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "compound_dtor", scope: !1010, file: !792, line: 134, baseType: !269, size: 8, offset: 64)
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "compound_order", scope: !1010, file: !792, line: 135, baseType: !269, size: 8, offset: 72)
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "compound_mapcount", scope: !1010, file: !792, line: 136, baseType: !816, size: 32, offset: 96)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "compound_nr", scope: !1010, file: !792, line: 137, baseType: !7, size: 32, offset: 128)
!1017 = !DIDerivedType(tag: DW_TAG_member, scope: !796, file: !792, line: 139, baseType: !1018, size: 256)
!1018 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !796, file: !792, line: 139, size: 256, elements: !1019)
!1019 = !{!1020, !1021, !1022}
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "_compound_pad_1", scope: !1018, file: !792, line: 140, baseType: !190, size: 64)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "hpage_pinned_refcount", scope: !1018, file: !792, line: 141, baseType: !816, size: 32, offset: 64)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_list", scope: !1018, file: !792, line: 143, baseType: !202, size: 128, offset: 128)
!1023 = !DIDerivedType(tag: DW_TAG_member, scope: !796, file: !792, line: 145, baseType: !1024, size: 256)
!1024 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !796, file: !792, line: 145, size: 256, elements: !1025)
!1025 = !{!1026, !1027, !1029, !1030, !2269}
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_1", scope: !1024, file: !792, line: 146, baseType: !190, size: 64)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "pmd_huge_pte", scope: !1024, file: !792, line: 147, baseType: !1028, size: 64, offset: 64)
!1028 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgtable_t", file: !782, line: 509, baseType: !790)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_2", scope: !1024, file: !792, line: 148, baseType: !190, size: 64, offset: 128)
!1030 = !DIDerivedType(tag: DW_TAG_member, scope: !1024, file: !792, line: 149, baseType: !1031, size: 64, offset: 192)
!1031 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1024, file: !792, line: 149, size: 64, elements: !1032)
!1032 = !{!1033, !2268}
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "pt_mm", scope: !1031, file: !792, line: 150, baseType: !1034, size: 64)
!1034 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1035, size: 64)
!1035 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_struct", file: !792, line: 388, size: 7296, elements: !1036)
!1036 = !{!1037, !2264}
!1037 = !DIDerivedType(tag: DW_TAG_member, scope: !1035, file: !792, line: 389, baseType: !1038, size: 7296)
!1038 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1035, file: !792, line: 389, size: 7296, elements: !1039)
!1039 = !{!1040, !1078, !1079, !1080, !1084, !1085, !1086, !1087, !1088, !1095, !1096, !1097, !1098, !1099, !1100, !1101, !1102, !1103, !1104, !1105, !1106, !1107, !1108, !1109, !1110, !1111, !1112, !1113, !1114, !1115, !1116, !1117, !1118, !1119, !1120, !1121, !1122, !1123, !1124, !1125, !1129, !1137, !1140, !1162, !1163, !2248, !2249, !2252, !2253, !2254, !2257, !2258, !2259, !2262, !2263}
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !1038, file: !792, line: 390, baseType: !1041, size: 64)
!1041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1042, size: 64)
!1042 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_area_struct", file: !792, line: 305, size: 1472, elements: !1043)
!1043 = !{!1044, !1045, !1046, !1047, !1048, !1049, !1050, !1051, !1058, !1059, !1064, !1065, !1068, !1072, !1073, !1074, !1075, !1076}
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "vm_start", scope: !1042, file: !792, line: 308, baseType: !190, size: 64)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "vm_end", scope: !1042, file: !792, line: 309, baseType: !190, size: 64, offset: 64)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "vm_next", scope: !1042, file: !792, line: 313, baseType: !1041, size: 64, offset: 128)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "vm_prev", scope: !1042, file: !792, line: 313, baseType: !1041, size: 64, offset: 192)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "vm_rb", scope: !1042, file: !792, line: 315, baseType: !829, size: 192, align: 64, offset: 256)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_gap", scope: !1042, file: !792, line: 323, baseType: !190, size: 64, offset: 448)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "vm_mm", scope: !1042, file: !792, line: 327, baseType: !1034, size: 64, offset: 512)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "vm_page_prot", scope: !1042, file: !792, line: 333, baseType: !1052, size: 64, offset: 576)
!1052 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprot_t", file: !782, line: 284, baseType: !1053)
!1053 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pgprot", file: !782, line: 284, size: 64, elements: !1054)
!1054 = !{!1055}
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "pgprot", scope: !1053, file: !782, line: 284, baseType: !1056, size: 64)
!1056 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprotval_t", file: !1057, line: 19, baseType: !190)
!1057 = !DIFile(filename: "./arch/x86/include/asm/pgtable_64_types.h", directory: "/home/lizy2001/genbc/linux")
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "vm_flags", scope: !1042, file: !792, line: 334, baseType: !190, size: 64, offset: 640)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "shared", scope: !1042, file: !792, line: 343, baseType: !1060, size: 256, offset: 704)
!1060 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1042, file: !792, line: 340, size: 256, elements: !1061)
!1061 = !{!1062, !1063}
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !1060, file: !792, line: 341, baseType: !829, size: 192, align: 64)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_last", scope: !1060, file: !792, line: 342, baseType: !190, size: 64, offset: 192)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma_chain", scope: !1042, file: !792, line: 351, baseType: !202, size: 128, offset: 960)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma", scope: !1042, file: !792, line: 353, baseType: !1066, size: 64, offset: 1088)
!1066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1067, size: 64)
!1067 = !DICompositeType(tag: DW_TAG_structure_type, name: "anon_vma", file: !792, line: 353, flags: DIFlagFwdDecl)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !1042, file: !792, line: 356, baseType: !1069, size: 64, offset: 1152)
!1069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1070, size: 64)
!1070 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1071)
!1071 = !DICompositeType(tag: DW_TAG_structure_type, name: "vm_operations_struct", file: !792, line: 356, flags: DIFlagFwdDecl)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "vm_pgoff", scope: !1042, file: !792, line: 359, baseType: !190, size: 64, offset: 1216)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "vm_file", scope: !1042, file: !792, line: 361, baseType: !413, size: 64, offset: 1280)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "vm_private_data", scope: !1042, file: !792, line: 362, baseType: !191, size: 64, offset: 1344)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "swap_readahead_info", scope: !1042, file: !792, line: 365, baseType: !383, size: 64, offset: 1408)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "vm_userfaultfd_ctx", scope: !1042, file: !792, line: 373, baseType: !1077, offset: 1472)
!1077 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_userfaultfd_ctx", file: !792, line: 296, elements: !407)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "mm_rb", scope: !1038, file: !792, line: 391, baseType: !825, size: 64, offset: 64)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache_seqnum", scope: !1038, file: !792, line: 392, baseType: !479, size: 64, offset: 128)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !1038, file: !792, line: 394, baseType: !1081, size: 64, offset: 192)
!1081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1082, size: 64)
!1082 = !DISubroutineType(types: !1083)
!1083 = !{!190, !413, !190, !190, !190, !190}
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_base", scope: !1038, file: !792, line: 398, baseType: !190, size: 64, offset: 256)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_legacy_base", scope: !1038, file: !792, line: 399, baseType: !190, size: 64, offset: 320)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "task_size", scope: !1038, file: !792, line: 405, baseType: !190, size: 64, offset: 384)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "highest_vm_end", scope: !1038, file: !792, line: 406, baseType: !190, size: 64, offset: 448)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !1038, file: !792, line: 407, baseType: !1089, size: 64, offset: 512)
!1089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1090, size: 64)
!1090 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgd_t", file: !782, line: 286, baseType: !1091)
!1091 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !782, line: 286, size: 64, elements: !1092)
!1092 = !{!1093}
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !1091, file: !782, line: 286, baseType: !1094, size: 64)
!1094 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgdval_t", file: !1057, line: 18, baseType: !190)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "membarrier_state", scope: !1038, file: !792, line: 416, baseType: !816, size: 32, offset: 576)
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "mm_users", scope: !1038, file: !792, line: 428, baseType: !816, size: 32, offset: 608)
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "mm_count", scope: !1038, file: !792, line: 437, baseType: !816, size: 32, offset: 640)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "has_pinned", scope: !1038, file: !792, line: 447, baseType: !816, size: 32, offset: 672)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "pgtables_bytes", scope: !1038, file: !792, line: 450, baseType: !383, size: 64, offset: 704)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "map_count", scope: !1038, file: !792, line: 452, baseType: !262, size: 32, offset: 768)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "page_table_lock", scope: !1038, file: !792, line: 454, baseType: !393, offset: 800)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_lock", scope: !1038, file: !792, line: 457, baseType: !836, size: 256, offset: 832)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "mmlist", scope: !1038, file: !792, line: 459, baseType: !202, size: 128, offset: 1088)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_rss", scope: !1038, file: !792, line: 466, baseType: !190, size: 64, offset: 1216)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_vm", scope: !1038, file: !792, line: 467, baseType: !190, size: 64, offset: 1280)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "total_vm", scope: !1038, file: !792, line: 469, baseType: !190, size: 64, offset: 1344)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !1038, file: !792, line: 470, baseType: !190, size: 64, offset: 1408)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "pinned_vm", scope: !1038, file: !792, line: 471, baseType: !385, size: 64, offset: 1472)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "data_vm", scope: !1038, file: !792, line: 472, baseType: !190, size: 64, offset: 1536)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "exec_vm", scope: !1038, file: !792, line: 473, baseType: !190, size: 64, offset: 1600)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm", scope: !1038, file: !792, line: 474, baseType: !190, size: 64, offset: 1664)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "def_flags", scope: !1038, file: !792, line: 475, baseType: !190, size: 64, offset: 1728)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "arg_lock", scope: !1038, file: !792, line: 477, baseType: !393, offset: 1792)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "start_code", scope: !1038, file: !792, line: 478, baseType: !190, size: 64, offset: 1792)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "end_code", scope: !1038, file: !792, line: 478, baseType: !190, size: 64, offset: 1856)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "start_data", scope: !1038, file: !792, line: 478, baseType: !190, size: 64, offset: 1920)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "end_data", scope: !1038, file: !792, line: 478, baseType: !190, size: 64, offset: 1984)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "start_brk", scope: !1038, file: !792, line: 479, baseType: !190, size: 64, offset: 2048)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "brk", scope: !1038, file: !792, line: 479, baseType: !190, size: 64, offset: 2112)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "start_stack", scope: !1038, file: !792, line: 479, baseType: !190, size: 64, offset: 2176)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "arg_start", scope: !1038, file: !792, line: 480, baseType: !190, size: 64, offset: 2240)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "arg_end", scope: !1038, file: !792, line: 480, baseType: !190, size: 64, offset: 2304)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "env_start", scope: !1038, file: !792, line: 480, baseType: !190, size: 64, offset: 2368)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "env_end", scope: !1038, file: !792, line: 480, baseType: !190, size: 64, offset: 2432)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "saved_auxv", scope: !1038, file: !792, line: 482, baseType: !1126, size: 2816, offset: 2496)
!1126 = !DICompositeType(tag: DW_TAG_array_type, baseType: !190, size: 2816, elements: !1127)
!1127 = !{!1128}
!1128 = !DISubrange(count: 44)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "rss_stat", scope: !1038, file: !792, line: 488, baseType: !1130, size: 256, offset: 5312)
!1130 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_rss_stat", file: !1131, line: 60, size: 256, elements: !1132)
!1131 = !DIFile(filename: "./include/linux/mm_types_task.h", directory: "/home/lizy2001/genbc/linux")
!1132 = !{!1133}
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1130, file: !1131, line: 61, baseType: !1134, size: 256)
!1134 = !DICompositeType(tag: DW_TAG_array_type, baseType: !383, size: 256, elements: !1135)
!1135 = !{!1136}
!1136 = !DISubrange(count: 4)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "binfmt", scope: !1038, file: !792, line: 490, baseType: !1138, size: 64, offset: 5568)
!1138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1139, size: 64)
!1139 = !DICompositeType(tag: DW_TAG_structure_type, name: "linux_binfmt", file: !792, line: 490, flags: DIFlagFwdDecl)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1038, file: !792, line: 493, baseType: !1141, size: 896, offset: 5632)
!1141 = !DIDerivedType(tag: DW_TAG_typedef, name: "mm_context_t", file: !1142, line: 53, baseType: !1143)
!1142 = !DIFile(filename: "./arch/x86/include/asm/mmu.h", directory: "/home/lizy2001/genbc/linux")
!1143 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1142, line: 13, size: 896, elements: !1144)
!1144 = !{!1145, !1146, !1147, !1148, !1151, !1152, !1153, !1154, !1158, !1159, !1160}
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_id", scope: !1143, file: !1142, line: 18, baseType: !479, size: 64)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_gen", scope: !1143, file: !1142, line: 28, baseType: !385, size: 64, offset: 64)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "ldt_usr_sem", scope: !1143, file: !1142, line: 31, baseType: !836, size: 256, offset: 128)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "ldt", scope: !1143, file: !1142, line: 32, baseType: !1149, size: 64, offset: 384)
!1149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1150, size: 64)
!1150 = !DICompositeType(tag: DW_TAG_structure_type, name: "ldt_struct", file: !1142, line: 32, flags: DIFlagFwdDecl)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "ia32_compat", scope: !1143, file: !1142, line: 37, baseType: !231, size: 16, offset: 448)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1143, file: !1142, line: 40, baseType: !379, size: 192, offset: 512)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "vdso", scope: !1143, file: !1142, line: 41, baseType: !191, size: 64, offset: 704)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "vdso_image", scope: !1143, file: !1142, line: 42, baseType: !1155, size: 64, offset: 768)
!1155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1156, size: 64)
!1156 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1157)
!1157 = !DICompositeType(tag: DW_TAG_structure_type, name: "vdso_image", file: !1142, line: 42, flags: DIFlagFwdDecl)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "perf_rdpmc_allowed", scope: !1143, file: !1142, line: 44, baseType: !816, size: 32, offset: 832)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "pkey_allocation_map", scope: !1143, file: !1142, line: 50, baseType: !369, size: 16, offset: 864)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "execute_only_pkey", scope: !1143, file: !1142, line: 51, baseType: !1161, size: 16, offset: 880)
!1161 = !DIDerivedType(tag: DW_TAG_typedef, name: "s16", file: !370, line: 18, baseType: !297)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1038, file: !792, line: 495, baseType: !190, size: 64, offset: 6528)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "core_state", scope: !1038, file: !792, line: 497, baseType: !1164, size: 64, offset: 6592)
!1164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1165, size: 64)
!1165 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_state", file: !792, line: 381, size: 384, elements: !1166)
!1166 = !{!1167, !1168, !2247}
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !1165, file: !792, line: 382, baseType: !816, size: 32)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "dumper", scope: !1165, file: !792, line: 383, baseType: !1169, size: 128, offset: 64)
!1169 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_thread", file: !792, line: 376, size: 128, elements: !1170)
!1170 = !{!1171, !2245}
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !1169, file: !792, line: 377, baseType: !1172, size: 64)
!1172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1173, size: 64)
!1173 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_struct", file: !1174, line: 640, size: 48640, elements: !1175)
!1174 = !DIFile(filename: "./include/linux/sched.h", directory: "/home/lizy2001/genbc/linux")
!1175 = !{!1176, !1182, !1183, !1184, !1190, !1191, !1192, !1193, !1194, !1195, !1196, !1197, !1201, !1219, !1230, !1314, !1315, !1316, !1324, !1325, !1327, !1328, !1329, !1330, !1336, !1337, !1338, !1339, !1340, !1341, !1342, !1343, !1344, !1345, !1346, !1347, !1348, !1349, !1350, !1351, !1409, !1412, !1413, !1414, !1415, !1416, !1417, !1418, !1419, !1420, !1421, !1447, !1449, !1450, !1451, !1463, !1464, !1465, !1466, !1467, !1468, !1474, !1475, !1476, !1477, !1478, !1479, !1480, !1492, !1497, !1679, !1680, !1681, !1682, !1686, !1689, !1692, !1695, !1698, !1701, !1802, !1833, !1834, !1835, !1836, !1837, !1838, !1839, !1840, !1841, !1850, !1851, !1852, !1853, !1854, !1859, !1860, !1861, !1864, !1865, !1868, !1871, !1874, !1877, !1919, !1922, !1923, !2002, !2003, !2006, !2007, !2010, !2011, !2012, !2016, !2017, !2018, !2031, !2032, !2033, !2043, !2048, !2051, !2057, !2058, !2059, !2060, !2061, !2062, !2063, !2064, !2068, !2069, !2070, !2071, !2072, !2073, !2074, !2075, !2076}
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "thread_info", scope: !1173, file: !1174, line: 646, baseType: !1177, size: 128)
!1177 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_info", file: !1178, line: 56, size: 128, elements: !1179)
!1178 = !DIFile(filename: "./arch/x86/include/asm/thread_info.h", directory: "/home/lizy2001/genbc/linux")
!1179 = !{!1180, !1181}
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1177, file: !1178, line: 57, baseType: !190, size: 64)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !1177, file: !1178, line: 58, baseType: !476, size: 32, offset: 64)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1173, file: !1174, line: 649, baseType: !195, size: 64, offset: 128)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !1173, file: !1174, line: 657, baseType: !191, size: 64, offset: 192)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1173, file: !1174, line: 658, baseType: !1185, size: 32, offset: 256)
!1185 = !DIDerivedType(tag: DW_TAG_typedef, name: "refcount_t", file: !1186, line: 113, baseType: !1187)
!1186 = !DIFile(filename: "./include/linux/refcount.h", directory: "/home/lizy2001/genbc/linux")
!1187 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "refcount_struct", file: !1186, line: 111, size: 32, elements: !1188)
!1188 = !{!1189}
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !1187, file: !1186, line: 112, baseType: !816, size: 32)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1173, file: !1174, line: 660, baseType: !7, size: 32, offset: 288)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace", scope: !1173, file: !1174, line: 661, baseType: !7, size: 32, offset: 320)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1173, file: !1174, line: 684, baseType: !262, size: 32, offset: 352)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1173, file: !1174, line: 686, baseType: !262, size: 32, offset: 384)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "static_prio", scope: !1173, file: !1174, line: 687, baseType: !262, size: 32, offset: 416)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "normal_prio", scope: !1173, file: !1174, line: 688, baseType: !262, size: 32, offset: 448)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "rt_priority", scope: !1173, file: !1174, line: 689, baseType: !7, size: 32, offset: 480)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "sched_class", scope: !1173, file: !1174, line: 691, baseType: !1198, size: 64, offset: 512)
!1198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1199, size: 64)
!1199 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1200)
!1200 = !DICompositeType(tag: DW_TAG_structure_type, name: "sched_class", file: !1174, line: 691, flags: DIFlagFwdDecl)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "se", scope: !1173, file: !1174, line: 692, baseType: !1202, size: 832, offset: 576)
!1202 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_entity", file: !1174, line: 451, size: 832, elements: !1203)
!1203 = !{!1204, !1209, !1210, !1211, !1212, !1213, !1214, !1215, !1216, !1217}
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "load", scope: !1202, file: !1174, line: 453, baseType: !1205, size: 128)
!1205 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "load_weight", file: !1174, line: 325, size: 128, elements: !1206)
!1206 = !{!1207, !1208}
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1205, file: !1174, line: 326, baseType: !190, size: 64)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "inv_weight", scope: !1205, file: !1174, line: 327, baseType: !476, size: 32, offset: 64)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "run_node", scope: !1202, file: !1174, line: 454, baseType: !829, size: 192, align: 64, offset: 128)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "group_node", scope: !1202, file: !1174, line: 455, baseType: !202, size: 128, offset: 320)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1202, file: !1174, line: 456, baseType: !7, size: 32, offset: 448)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "exec_start", scope: !1202, file: !1174, line: 458, baseType: !479, size: 64, offset: 512)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !1202, file: !1174, line: 459, baseType: !479, size: 64, offset: 576)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "vruntime", scope: !1202, file: !1174, line: 460, baseType: !479, size: 64, offset: 640)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "prev_sum_exec_runtime", scope: !1202, file: !1174, line: 461, baseType: !479, size: 64, offset: 704)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "nr_migrations", scope: !1202, file: !1174, line: 463, baseType: !479, size: 64, offset: 768)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "statistics", scope: !1202, file: !1174, line: 465, baseType: !1218, offset: 832)
!1218 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_statistics", file: !1174, line: 415, elements: !407)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1173, file: !1174, line: 693, baseType: !1220, size: 384, offset: 1408)
!1220 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_rt_entity", file: !1174, line: 489, size: 384, elements: !1221)
!1221 = !{!1222, !1223, !1224, !1225, !1226, !1227, !1228}
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "run_list", scope: !1220, file: !1174, line: 490, baseType: !202, size: 128)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1220, file: !1174, line: 491, baseType: !190, size: 64, offset: 128)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_stamp", scope: !1220, file: !1174, line: 492, baseType: !190, size: 64, offset: 192)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "time_slice", scope: !1220, file: !1174, line: 493, baseType: !7, size: 32, offset: 256)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1220, file: !1174, line: 494, baseType: !231, size: 16, offset: 288)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "on_list", scope: !1220, file: !1174, line: 495, baseType: !231, size: 16, offset: 304)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !1220, file: !1174, line: 497, baseType: !1229, size: 64, offset: 320)
!1229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1220, size: 64)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "dl", scope: !1173, file: !1174, line: 697, baseType: !1231, size: 1792, offset: 1792)
!1231 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_dl_entity", file: !1174, line: 507, size: 1792, elements: !1232)
!1232 = !{!1233, !1234, !1235, !1236, !1237, !1238, !1239, !1240, !1241, !1242, !1243, !1244, !1245, !1246, !1311, !1312}
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !1231, file: !1174, line: 508, baseType: !829, size: 192, align: 64)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "dl_runtime", scope: !1231, file: !1174, line: 515, baseType: !479, size: 64, offset: 192)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "dl_deadline", scope: !1231, file: !1174, line: 516, baseType: !479, size: 64, offset: 256)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "dl_period", scope: !1231, file: !1174, line: 517, baseType: !479, size: 64, offset: 320)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "dl_bw", scope: !1231, file: !1174, line: 518, baseType: !479, size: 64, offset: 384)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "dl_density", scope: !1231, file: !1174, line: 519, baseType: !479, size: 64, offset: 448)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "runtime", scope: !1231, file: !1174, line: 526, baseType: !389, size: 64, offset: 512)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", scope: !1231, file: !1174, line: 527, baseType: !479, size: 64, offset: 576)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1231, file: !1174, line: 528, baseType: !7, size: 32, offset: 640)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "dl_throttled", scope: !1231, file: !1174, line: 554, baseType: !7, size: 1, offset: 672, flags: DIFlagBitField, extraData: i64 672)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "dl_yielded", scope: !1231, file: !1174, line: 555, baseType: !7, size: 1, offset: 673, flags: DIFlagBitField, extraData: i64 672)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "dl_non_contending", scope: !1231, file: !1174, line: 556, baseType: !7, size: 1, offset: 674, flags: DIFlagBitField, extraData: i64 672)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "dl_overrun", scope: !1231, file: !1174, line: 557, baseType: !7, size: 1, offset: 675, flags: DIFlagBitField, extraData: i64 672)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "dl_timer", scope: !1231, file: !1174, line: 563, baseType: !1247, size: 512, offset: 704)
!1247 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer", file: !14, line: 118, size: 512, elements: !1248)
!1248 = !{!1249, !1257, !1258, !1263, !1306, !1308, !1309, !1310}
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1247, file: !14, line: 119, baseType: !1250, size: 256)
!1250 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_node", file: !1251, line: 9, size: 256, elements: !1252)
!1251 = !DIFile(filename: "./include/linux/timerqueue.h", directory: "/home/lizy2001/genbc/linux")
!1252 = !{!1253, !1254}
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1250, file: !1251, line: 10, baseType: !829, size: 192, align: 64)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1250, file: !1251, line: 11, baseType: !1255, size: 64, offset: 192)
!1255 = !DIDerivedType(tag: DW_TAG_typedef, name: "ktime_t", file: !1256, line: 29, baseType: !389)
!1256 = !DIFile(filename: "./include/linux/ktime.h", directory: "/home/lizy2001/genbc/linux")
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "_softexpires", scope: !1247, file: !14, line: 120, baseType: !1255, size: 64, offset: 256)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !1247, file: !14, line: 121, baseType: !1259, size: 64, offset: 320)
!1259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1260, size: 64)
!1260 = !DISubroutineType(types: !1261)
!1261 = !{!13, !1262}
!1262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1247, size: 64)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1247, file: !14, line: 122, baseType: !1264, size: 64, offset: 384)
!1264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1265, size: 64)
!1265 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_clock_base", file: !14, line: 159, size: 512, align: 512, elements: !1266)
!1266 = !{!1267, !1287, !1288, !1291, !1296, !1297, !1301, !1305}
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_base", scope: !1265, file: !14, line: 160, baseType: !1268, size: 64)
!1268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1269, size: 64)
!1269 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_cpu_base", file: !14, line: 214, size: 4608, align: 512, elements: !1270)
!1270 = !{!1271, !1272, !1273, !1274, !1275, !1276, !1277, !1278, !1279, !1280, !1281, !1282, !1283}
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1269, file: !14, line: 215, baseType: !842)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !1269, file: !14, line: 216, baseType: !7, size: 32)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "active_bases", scope: !1269, file: !14, line: 217, baseType: !7, size: 32, offset: 32)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "clock_was_set_seq", scope: !1269, file: !14, line: 218, baseType: !7, size: 32, offset: 64)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "hres_active", scope: !1269, file: !14, line: 219, baseType: !7, size: 1, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "in_hrtirq", scope: !1269, file: !14, line: 220, baseType: !7, size: 1, offset: 97, flags: DIFlagBitField, extraData: i64 96)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "hang_detected", scope: !1269, file: !14, line: 221, baseType: !7, size: 1, offset: 98, flags: DIFlagBitField, extraData: i64 96)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_activated", scope: !1269, file: !14, line: 222, baseType: !7, size: 1, offset: 99, flags: DIFlagBitField, extraData: i64 96)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "expires_next", scope: !1269, file: !14, line: 233, baseType: !1255, size: 64, offset: 128)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "next_timer", scope: !1269, file: !14, line: 234, baseType: !1262, size: 64, offset: 192)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_expires_next", scope: !1269, file: !14, line: 235, baseType: !1255, size: 64, offset: 256)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_next_timer", scope: !1269, file: !14, line: 236, baseType: !1262, size: 64, offset: 320)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "clock_base", scope: !1269, file: !14, line: 237, baseType: !1284, size: 4096, offset: 512)
!1284 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1265, size: 4096, elements: !1285)
!1285 = !{!1286}
!1286 = !DISubrange(count: 8)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1265, file: !14, line: 161, baseType: !7, size: 32, offset: 64)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !1265, file: !14, line: 162, baseType: !1289, size: 32, offset: 96)
!1289 = !DIDerivedType(tag: DW_TAG_typedef, name: "clockid_t", file: !193, line: 27, baseType: !1290)
!1290 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clockid_t", file: !500, line: 96, baseType: !262)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !1265, file: !14, line: 163, baseType: !1292, size: 32, offset: 128)
!1292 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_raw_spinlock_t", file: !449, line: 276, baseType: !1293)
!1293 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_raw_spinlock", file: !449, line: 276, size: 32, elements: !1294)
!1294 = !{!1295}
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !1293, file: !449, line: 276, baseType: !453, size: 32)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "running", scope: !1265, file: !14, line: 164, baseType: !1262, size: 64, offset: 192)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !1265, file: !14, line: 165, baseType: !1298, size: 128, offset: 256)
!1298 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_head", file: !1251, line: 14, size: 128, elements: !1299)
!1299 = !{!1300}
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !1298, file: !1251, line: 15, baseType: !821, size: 128)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "get_time", scope: !1265, file: !14, line: 166, baseType: !1302, size: 64, offset: 384)
!1302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1303, size: 64)
!1303 = !DISubroutineType(types: !1304)
!1304 = !{!1255}
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1265, file: !14, line: 167, baseType: !1255, size: 64, offset: 448)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1247, file: !14, line: 123, baseType: !1307, size: 8, offset: 448)
!1307 = !DIDerivedType(tag: DW_TAG_typedef, name: "u8", file: !370, line: 17, baseType: !268)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "is_rel", scope: !1247, file: !14, line: 124, baseType: !1307, size: 8, offset: 456)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "is_soft", scope: !1247, file: !14, line: 125, baseType: !1307, size: 8, offset: 464)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "is_hard", scope: !1247, file: !14, line: 126, baseType: !1307, size: 8, offset: 472)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "inactive_timer", scope: !1231, file: !1174, line: 572, baseType: !1247, size: 512, offset: 1216)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "pi_se", scope: !1231, file: !1174, line: 580, baseType: !1313, size: 64, offset: 1728)
!1313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1231, size: 64)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !1173, file: !1174, line: 721, baseType: !7, size: 32, offset: 3584)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cpus_allowed", scope: !1173, file: !1174, line: 722, baseType: !262, size: 32, offset: 3616)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_ptr", scope: !1173, file: !1174, line: 723, baseType: !1317, size: 64, offset: 3648)
!1317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1318, size: 64)
!1318 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1319)
!1319 = !DIDerivedType(tag: DW_TAG_typedef, name: "cpumask_t", file: !1320, line: 17, baseType: !1321)
!1320 = !DIFile(filename: "./include/linux/cpumask.h", directory: "/home/lizy2001/genbc/linux")
!1321 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpumask", file: !1320, line: 17, size: 64, elements: !1322)
!1322 = !{!1323}
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !1321, file: !1320, line: 17, baseType: !236, size: 64)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_mask", scope: !1173, file: !1174, line: 724, baseType: !1319, size: 64, offset: 3712)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "sched_info", scope: !1173, file: !1174, line: 749, baseType: !1326, offset: 3776)
!1326 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_info", file: !1174, line: 290, elements: !407)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !1173, file: !1174, line: 751, baseType: !202, size: 128, offset: 3776)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "mm", scope: !1173, file: !1174, line: 757, baseType: !1034, size: 64, offset: 3904)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "active_mm", scope: !1173, file: !1174, line: 758, baseType: !1034, size: 64, offset: 3968)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache", scope: !1173, file: !1174, line: 761, baseType: !1331, size: 320, offset: 4032)
!1331 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmacache", file: !1131, line: 34, size: 320, elements: !1332)
!1332 = !{!1333, !1334}
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "seqnum", scope: !1331, file: !1131, line: 35, baseType: !479, size: 64)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "vmas", scope: !1331, file: !1131, line: 36, baseType: !1335, size: 256, offset: 64)
!1335 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1041, size: 256, elements: !1135)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "exit_state", scope: !1173, file: !1174, line: 766, baseType: !262, size: 32, offset: 4352)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "exit_code", scope: !1173, file: !1174, line: 767, baseType: !262, size: 32, offset: 4384)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "exit_signal", scope: !1173, file: !1174, line: 768, baseType: !262, size: 32, offset: 4416)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "pdeath_signal", scope: !1173, file: !1174, line: 770, baseType: !262, size: 32, offset: 4448)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "jobctl", scope: !1173, file: !1174, line: 772, baseType: !190, size: 64, offset: 4480)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !1173, file: !1174, line: 775, baseType: !7, size: 32, offset: 4544)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "sched_reset_on_fork", scope: !1173, file: !1174, line: 778, baseType: !7, size: 1, offset: 4576, flags: DIFlagBitField, extraData: i64 4576)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "sched_contributes_to_load", scope: !1173, file: !1174, line: 779, baseType: !7, size: 1, offset: 4577, flags: DIFlagBitField, extraData: i64 4576)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "sched_migrated", scope: !1173, file: !1174, line: 780, baseType: !7, size: 1, offset: 4578, flags: DIFlagBitField, extraData: i64 4576)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "sched_remote_wakeup", scope: !1173, file: !1174, line: 803, baseType: !7, size: 1, offset: 4608, flags: DIFlagBitField, extraData: i64 4608)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "in_execve", scope: !1173, file: !1174, line: 806, baseType: !7, size: 1, offset: 4609, flags: DIFlagBitField, extraData: i64 4608)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "in_iowait", scope: !1173, file: !1174, line: 807, baseType: !7, size: 1, offset: 4610, flags: DIFlagBitField, extraData: i64 4608)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "restore_sigmask", scope: !1173, file: !1174, line: 809, baseType: !7, size: 1, offset: 4611, flags: DIFlagBitField, extraData: i64 4608)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "brk_randomized", scope: !1173, file: !1174, line: 815, baseType: !7, size: 1, offset: 4612, flags: DIFlagBitField, extraData: i64 4608)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_flags", scope: !1173, file: !1174, line: 831, baseType: !190, size: 64, offset: 4672)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "restart_block", scope: !1173, file: !1174, line: 833, baseType: !1352, size: 384, offset: 4736)
!1352 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "restart_block", file: !19, line: 25, size: 384, elements: !1353)
!1353 = !{!1354, !1359}
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1352, file: !19, line: 26, baseType: !1355, size: 64)
!1355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1356, size: 64)
!1356 = !DISubroutineType(types: !1357)
!1357 = !{!131, !1358}
!1358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1352, size: 64)
!1359 = !DIDerivedType(tag: DW_TAG_member, scope: !1352, file: !19, line: 27, baseType: !1360, size: 320, offset: 64)
!1360 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1352, file: !19, line: 27, size: 320, elements: !1361)
!1361 = !{!1362, !1372, !1399}
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "futex", scope: !1360, file: !19, line: 36, baseType: !1363, size: 320)
!1363 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1360, file: !19, line: 29, size: 320, elements: !1364)
!1364 = !{!1365, !1367, !1368, !1369, !1370, !1371}
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr", scope: !1363, file: !19, line: 30, baseType: !1366, size: 64)
!1366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !476, size: 64)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1363, file: !19, line: 31, baseType: !476, size: 32, offset: 64)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1363, file: !19, line: 32, baseType: !476, size: 32, offset: 96)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "bitset", scope: !1363, file: !19, line: 33, baseType: !476, size: 32, offset: 128)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !1363, file: !19, line: 34, baseType: !479, size: 64, offset: 192)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr2", scope: !1363, file: !19, line: 35, baseType: !1366, size: 64, offset: 256)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "nanosleep", scope: !1360, file: !19, line: 46, baseType: !1373, size: 192)
!1373 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1360, file: !19, line: 38, size: 192, elements: !1374)
!1374 = !{!1375, !1376, !1377, !1398}
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !1373, file: !19, line: 39, baseType: !1289, size: 32)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1373, file: !19, line: 40, baseType: !18, size: 32, offset: 32)
!1377 = !DIDerivedType(tag: DW_TAG_member, scope: !1373, file: !19, line: 41, baseType: !1378, size: 64, offset: 64)
!1378 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1373, file: !19, line: 41, size: 64, elements: !1379)
!1379 = !{!1380, !1388}
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "rmtp", scope: !1378, file: !19, line: 42, baseType: !1381, size: 64)
!1381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1382, size: 64)
!1382 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__kernel_timespec", file: !1383, line: 7, size: 128, elements: !1384)
!1383 = !DIFile(filename: "./include/uapi/linux/time_types.h", directory: "/home/lizy2001/genbc/linux")
!1384 = !{!1385, !1387}
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1382, file: !1383, line: 8, baseType: !1386, size: 64)
!1386 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_time64_t", file: !500, line: 93, baseType: !391)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1382, file: !1383, line: 9, baseType: !391, size: 64, offset: 64)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "compat_rmtp", scope: !1378, file: !19, line: 43, baseType: !1389, size: 64)
!1389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1390, size: 64)
!1390 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "old_timespec32", file: !1391, line: 7, size: 64, elements: !1392)
!1391 = !DIFile(filename: "./include/vdso/time32.h", directory: "/home/lizy2001/genbc/linux")
!1392 = !{!1393, !1397}
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1390, file: !1391, line: 8, baseType: !1394, size: 32)
!1394 = !DIDerivedType(tag: DW_TAG_typedef, name: "old_time32_t", file: !1391, line: 5, baseType: !1395)
!1395 = !DIDerivedType(tag: DW_TAG_typedef, name: "s32", file: !370, line: 20, baseType: !1396)
!1396 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s32", file: !230, line: 26, baseType: !262)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1390, file: !1391, line: 9, baseType: !1395, size: 32, offset: 32)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1373, file: !19, line: 45, baseType: !479, size: 64, offset: 128)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !1360, file: !19, line: 54, baseType: !1400, size: 256)
!1400 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1360, file: !19, line: 48, size: 256, elements: !1401)
!1401 = !{!1402, !1405, !1406, !1407, !1408}
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "ufds", scope: !1400, file: !19, line: 49, baseType: !1403, size: 64)
!1403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1404, size: 64)
!1404 = !DICompositeType(tag: DW_TAG_structure_type, name: "pollfd", file: !19, line: 14, flags: DIFlagFwdDecl)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "nfds", scope: !1400, file: !19, line: 50, baseType: !262, size: 32, offset: 64)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "has_timeout", scope: !1400, file: !19, line: 51, baseType: !262, size: 32, offset: 96)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1400, file: !19, line: 52, baseType: !190, size: 64, offset: 128)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1400, file: !19, line: 53, baseType: !190, size: 64, offset: 192)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !1173, file: !1174, line: 835, baseType: !1410, size: 32, offset: 5120)
!1410 = !DIDerivedType(tag: DW_TAG_typedef, name: "pid_t", file: !193, line: 22, baseType: !1411)
!1411 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_pid_t", file: !500, line: 28, baseType: !262)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "tgid", scope: !1173, file: !1174, line: 836, baseType: !1410, size: 32, offset: 5152)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "stack_canary", scope: !1173, file: !1174, line: 840, baseType: !190, size: 64, offset: 5184)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "real_parent", scope: !1173, file: !1174, line: 849, baseType: !1172, size: 64, offset: 5248)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1173, file: !1174, line: 852, baseType: !1172, size: 64, offset: 5312)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1173, file: !1174, line: 857, baseType: !202, size: 128, offset: 5376)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !1173, file: !1174, line: 858, baseType: !202, size: 128, offset: 5504)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "group_leader", scope: !1173, file: !1174, line: 859, baseType: !1172, size: 64, offset: 5632)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "ptraced", scope: !1173, file: !1174, line: 867, baseType: !202, size: 128, offset: 5696)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_entry", scope: !1173, file: !1174, line: 868, baseType: !202, size: 128, offset: 5824)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "thread_pid", scope: !1173, file: !1174, line: 871, baseType: !1422, size: 64, offset: 5952)
!1422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1423, size: 64)
!1423 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pid", file: !40, line: 59, size: 768, elements: !1424)
!1424 = !{!1425, !1426, !1427, !1428, !1430, !1431, !1438, !1439}
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1423, file: !40, line: 61, baseType: !1185, size: 32)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1423, file: !40, line: 62, baseType: !7, size: 32, offset: 32)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1423, file: !40, line: 63, baseType: !393, offset: 64)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !1423, file: !40, line: 65, baseType: !1429, size: 256, offset: 64)
!1429 = !DICompositeType(tag: DW_TAG_array_type, baseType: !702, size: 256, elements: !1135)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "inodes", scope: !1423, file: !40, line: 66, baseType: !702, size: 64, offset: 320)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "wait_pidfd", scope: !1423, file: !40, line: 68, baseType: !1432, size: 128, offset: 384)
!1432 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_head_t", file: !1433, line: 40, baseType: !1434)
!1433 = !DIFile(filename: "./include/linux/wait.h", directory: "/home/lizy2001/genbc/linux")
!1434 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_head", file: !1433, line: 36, size: 128, elements: !1435)
!1435 = !{!1436, !1437}
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1434, file: !1433, line: 37, baseType: !393)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1434, file: !1433, line: 38, baseType: !202, size: 128)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1423, file: !40, line: 69, baseType: !426, size: 128, align: 64, offset: 512)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "numbers", scope: !1423, file: !40, line: 70, baseType: !1440, size: 128, offset: 640)
!1440 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1441, size: 128, elements: !237)
!1441 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "upid", file: !40, line: 54, size: 128, elements: !1442)
!1442 = !{!1443, !1444}
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !1441, file: !40, line: 55, baseType: !262, size: 32)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !1441, file: !40, line: 56, baseType: !1445, size: 64, offset: 64)
!1445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1446, size: 64)
!1446 = !DICompositeType(tag: DW_TAG_structure_type, name: "pid_namespace", file: !40, line: 56, flags: DIFlagFwdDecl)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "pid_links", scope: !1173, file: !1174, line: 872, baseType: !1448, size: 512, offset: 6016)
!1448 = !DICompositeType(tag: DW_TAG_array_type, baseType: !706, size: 512, elements: !1135)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "thread_group", scope: !1173, file: !1174, line: 873, baseType: !202, size: 128, offset: 6528)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "thread_node", scope: !1173, file: !1174, line: 874, baseType: !202, size: 128, offset: 6656)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "vfork_done", scope: !1173, file: !1174, line: 876, baseType: !1452, size: 64, offset: 6784)
!1452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1453, size: 64)
!1453 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "completion", file: !1454, line: 26, size: 192, elements: !1455)
!1454 = !DIFile(filename: "./include/linux/completion.h", directory: "/home/lizy2001/genbc/linux")
!1455 = !{!1456, !1457}
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !1453, file: !1454, line: 27, baseType: !7, size: 32)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !1453, file: !1454, line: 28, baseType: !1458, size: 128, offset: 64)
!1458 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swait_queue_head", file: !1459, line: 43, size: 128, elements: !1460)
!1459 = !DIFile(filename: "./include/linux/swait.h", directory: "/home/lizy2001/genbc/linux")
!1460 = !{!1461, !1462}
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1458, file: !1459, line: 44, baseType: !842)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "task_list", scope: !1458, file: !1459, line: 45, baseType: !202, size: 128)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "set_child_tid", scope: !1173, file: !1174, line: 879, baseType: !774, size: 64, offset: 6848)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "clear_child_tid", scope: !1173, file: !1174, line: 882, baseType: !774, size: 64, offset: 6912)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1173, file: !1174, line: 884, baseType: !479, size: 64, offset: 6976)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1173, file: !1174, line: 885, baseType: !479, size: 64, offset: 7040)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !1173, file: !1174, line: 890, baseType: !479, size: 64, offset: 7104)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !1173, file: !1174, line: 891, baseType: !1469, size: 128, offset: 7168)
!1469 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "prev_cputime", file: !1174, line: 242, size: 128, elements: !1470)
!1470 = !{!1471, !1472, !1473}
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1469, file: !1174, line: 244, baseType: !479, size: 64)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1469, file: !1174, line: 245, baseType: !479, size: 64, offset: 64)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1469, file: !1174, line: 246, baseType: !842, offset: 128)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !1173, file: !1174, line: 900, baseType: !190, size: 64, offset: 7296)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !1173, file: !1174, line: 901, baseType: !190, size: 64, offset: 7360)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "start_time", scope: !1173, file: !1174, line: 904, baseType: !479, size: 64, offset: 7424)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "start_boottime", scope: !1173, file: !1174, line: 907, baseType: !479, size: 64, offset: 7488)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !1173, file: !1174, line: 910, baseType: !190, size: 64, offset: 7552)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !1173, file: !1174, line: 911, baseType: !190, size: 64, offset: 7616)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !1173, file: !1174, line: 914, baseType: !1481, size: 640, offset: 7680)
!1481 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers", file: !1482, line: 123, size: 640, elements: !1483)
!1482 = !DIFile(filename: "./include/linux/posix-timers.h", directory: "/home/lizy2001/genbc/linux")
!1483 = !{!1484, !1490, !1491}
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "bases", scope: !1481, file: !1482, line: 124, baseType: !1485, size: 576)
!1485 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1486, size: 576, elements: !718)
!1486 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimer_base", file: !1482, line: 108, size: 192, elements: !1487)
!1487 = !{!1488, !1489}
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "nextevt", scope: !1486, file: !1482, line: 109, baseType: !479, size: 64)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "tqhead", scope: !1486, file: !1482, line: 110, baseType: !1298, size: 128, offset: 64)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "timers_active", scope: !1481, file: !1482, line: 125, baseType: !7, size: 32, offset: 576)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "expiry_active", scope: !1481, file: !1482, line: 126, baseType: !7, size: 32, offset: 608)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers_work", scope: !1173, file: !1174, line: 917, baseType: !1493, size: 192, offset: 8320)
!1493 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers_work", file: !1482, line: 134, size: 192, elements: !1494)
!1494 = !{!1495, !1496}
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !1493, file: !1482, line: 135, baseType: !426, size: 128, align: 64)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "scheduled", scope: !1493, file: !1482, line: 136, baseType: !7, size: 32, offset: 128)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "ptracer_cred", scope: !1173, file: !1174, line: 923, baseType: !1498, size: 64, offset: 8512)
!1498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1499, size: 64)
!1499 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1500)
!1500 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cred", file: !1501, line: 111, size: 1280, elements: !1502)
!1501 = !DIFile(filename: "./include/linux/cred.h", directory: "/home/lizy2001/genbc/linux")
!1502 = !{!1503, !1504, !1505, !1506, !1507, !1508, !1509, !1510, !1511, !1512, !1513, !1520, !1521, !1522, !1523, !1524, !1525, !1632, !1633, !1634, !1635, !1661, !1664, !1674}
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1500, file: !1501, line: 112, baseType: !816, size: 32)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1500, file: !1501, line: 120, baseType: !493, size: 32, offset: 32)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1500, file: !1501, line: 121, baseType: !502, size: 32, offset: 64)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "suid", scope: !1500, file: !1501, line: 122, baseType: !493, size: 32, offset: 96)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "sgid", scope: !1500, file: !1501, line: 123, baseType: !502, size: 32, offset: 128)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !1500, file: !1501, line: 124, baseType: !493, size: 32, offset: 160)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "egid", scope: !1500, file: !1501, line: 125, baseType: !502, size: 32, offset: 192)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "fsuid", scope: !1500, file: !1501, line: 126, baseType: !493, size: 32, offset: 224)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "fsgid", scope: !1500, file: !1501, line: 127, baseType: !502, size: 32, offset: 256)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "securebits", scope: !1500, file: !1501, line: 128, baseType: !7, size: 32, offset: 288)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "cap_inheritable", scope: !1500, file: !1501, line: 129, baseType: !1514, size: 64, offset: 320)
!1514 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_cap_t", file: !1515, line: 26, baseType: !1516)
!1515 = !DIFile(filename: "./include/linux/capability.h", directory: "/home/lizy2001/genbc/linux")
!1516 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_cap_struct", file: !1515, line: 24, size: 64, elements: !1517)
!1517 = !{!1518}
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !1516, file: !1515, line: 25, baseType: !1519, size: 64)
!1519 = !DICompositeType(tag: DW_TAG_array_type, baseType: !273, size: 64, elements: !251)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "cap_permitted", scope: !1500, file: !1501, line: 130, baseType: !1514, size: 64, offset: 384)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "cap_effective", scope: !1500, file: !1501, line: 131, baseType: !1514, size: 64, offset: 448)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "cap_bset", scope: !1500, file: !1501, line: 132, baseType: !1514, size: 64, offset: 512)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "cap_ambient", scope: !1500, file: !1501, line: 133, baseType: !1514, size: 64, offset: 576)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "jit_keyring", scope: !1500, file: !1501, line: 135, baseType: !269, size: 8, offset: 640)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "session_keyring", scope: !1500, file: !1501, line: 137, baseType: !1526, size: 64, offset: 704)
!1526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1527, size: 64)
!1527 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key", file: !1528, line: 189, size: 1664, elements: !1529)
!1528 = !DIFile(filename: "./include/linux/key.h", directory: "/home/lizy2001/genbc/linux")
!1529 = !{!1530, !1531, !1534, !1539, !1540, !1543, !1544, !1549, !1550, !1551, !1552, !1554, !1555, !1556, !1557, !1558, !1596, !1617}
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1527, file: !1528, line: 190, baseType: !1185, size: 32)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !1527, file: !1528, line: 191, baseType: !1532, size: 32, offset: 32)
!1532 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_serial_t", file: !1528, line: 28, baseType: !1533)
!1533 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !193, line: 98, baseType: !1395)
!1534 = !DIDerivedType(tag: DW_TAG_member, scope: !1527, file: !1528, line: 192, baseType: !1535, size: 192, offset: 64)
!1535 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1527, file: !1528, line: 192, size: 192, elements: !1536)
!1536 = !{!1537, !1538}
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "graveyard_link", scope: !1535, file: !1528, line: 193, baseType: !202, size: 128)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "serial_node", scope: !1535, file: !1528, line: 194, baseType: !829, size: 192, align: 64)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "sem", scope: !1527, file: !1528, line: 199, baseType: !836, size: 256, offset: 256)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1527, file: !1528, line: 200, baseType: !1541, size: 64, offset: 512)
!1541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1542, size: 64)
!1542 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_user", file: !1528, line: 200, flags: DIFlagFwdDecl)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "security", scope: !1527, file: !1528, line: 201, baseType: !191, size: 64, offset: 576)
!1544 = !DIDerivedType(tag: DW_TAG_member, scope: !1527, file: !1528, line: 202, baseType: !1545, size: 64, offset: 640)
!1545 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1527, file: !1528, line: 202, size: 64, elements: !1546)
!1546 = !{!1547, !1548}
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "expiry", scope: !1545, file: !1528, line: 203, baseType: !598, size: 64)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "revoked_at", scope: !1545, file: !1528, line: 204, baseType: !598, size: 64)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "last_used_at", scope: !1527, file: !1528, line: 206, baseType: !598, size: 64, offset: 704)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1527, file: !1528, line: 207, baseType: !493, size: 32, offset: 768)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1527, file: !1528, line: 208, baseType: !502, size: 32, offset: 800)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !1527, file: !1528, line: 209, baseType: !1553, size: 32, offset: 832)
!1553 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_perm_t", file: !1528, line: 31, baseType: !617)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "quotalen", scope: !1527, file: !1528, line: 210, baseType: !231, size: 16, offset: 864)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "datalen", scope: !1527, file: !1528, line: 211, baseType: !231, size: 16, offset: 880)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1527, file: !1528, line: 215, baseType: !298, size: 16, offset: 896)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1527, file: !1528, line: 222, baseType: !190, size: 64, offset: 960)
!1558 = !DIDerivedType(tag: DW_TAG_member, scope: !1527, file: !1528, line: 239, baseType: !1559, size: 320, offset: 1024)
!1559 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1527, file: !1528, line: 239, size: 320, elements: !1560)
!1560 = !{!1561, !1588}
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "index_key", scope: !1559, file: !1528, line: 240, baseType: !1562, size: 320)
!1562 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "keyring_index_key", file: !1528, line: 108, size: 320, elements: !1563)
!1563 = !{!1564, !1565, !1577, !1580, !1587}
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1562, file: !1528, line: 110, baseType: !190, size: 64)
!1565 = !DIDerivedType(tag: DW_TAG_member, scope: !1562, file: !1528, line: 111, baseType: !1566, size: 64, offset: 64)
!1566 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1562, file: !1528, line: 111, size: 64, elements: !1567)
!1567 = !{!1568, !1576}
!1568 = !DIDerivedType(tag: DW_TAG_member, scope: !1566, file: !1528, line: 112, baseType: !1569, size: 64)
!1569 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1566, file: !1528, line: 112, size: 64, elements: !1570)
!1570 = !{!1571, !1572}
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "desc_len", scope: !1569, file: !1528, line: 114, baseType: !369, size: 16)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !1569, file: !1528, line: 115, baseType: !1573, size: 48, offset: 16)
!1573 = !DICompositeType(tag: DW_TAG_array_type, baseType: !198, size: 48, elements: !1574)
!1574 = !{!1575}
!1575 = !DISubrange(count: 6)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1566, file: !1528, line: 121, baseType: !190, size: 64)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1562, file: !1528, line: 123, baseType: !1578, size: 64, offset: 128)
!1578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1579, size: 64)
!1579 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_type", file: !1528, line: 96, flags: DIFlagFwdDecl)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !1562, file: !1528, line: 124, baseType: !1581, size: 64, offset: 192)
!1581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1582, size: 64)
!1582 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_tag", file: !1528, line: 102, size: 192, elements: !1583)
!1583 = !{!1584, !1585, !1586}
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1582, file: !1528, line: 103, baseType: !426, size: 128, align: 64)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1582, file: !1528, line: 104, baseType: !1185, size: 32, offset: 128)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "removed", scope: !1582, file: !1528, line: 105, baseType: !550, size: 8, offset: 160)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1562, file: !1528, line: 125, baseType: !220, size: 64, offset: 256)
!1588 = !DIDerivedType(tag: DW_TAG_member, scope: !1559, file: !1528, line: 241, baseType: !1589, size: 320)
!1589 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1559, file: !1528, line: 241, size: 320, elements: !1590)
!1590 = !{!1591, !1592, !1593, !1594, !1595}
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1589, file: !1528, line: 242, baseType: !190, size: 64)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "len_desc", scope: !1589, file: !1528, line: 243, baseType: !190, size: 64, offset: 64)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1589, file: !1528, line: 244, baseType: !1578, size: 64, offset: 128)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !1589, file: !1528, line: 245, baseType: !1581, size: 64, offset: 192)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1589, file: !1528, line: 246, baseType: !545, size: 64, offset: 256)
!1596 = !DIDerivedType(tag: DW_TAG_member, scope: !1527, file: !1528, line: 254, baseType: !1597, size: 256, offset: 1344)
!1597 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1527, file: !1528, line: 254, size: 256, elements: !1598)
!1598 = !{!1599, !1605}
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "payload", scope: !1597, file: !1528, line: 255, baseType: !1600, size: 256)
!1600 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "key_payload", file: !1528, line: 128, size: 256, elements: !1601)
!1601 = !{!1602, !1603}
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_data0", scope: !1600, file: !1528, line: 129, baseType: !191, size: 64)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1600, file: !1528, line: 130, baseType: !1604, size: 256)
!1604 = !DICompositeType(tag: DW_TAG_array_type, baseType: !191, size: 256, elements: !1135)
!1605 = !DIDerivedType(tag: DW_TAG_member, scope: !1597, file: !1528, line: 256, baseType: !1606, size: 256)
!1606 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1597, file: !1528, line: 256, size: 256, elements: !1607)
!1607 = !{!1608, !1609}
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "name_link", scope: !1606, file: !1528, line: 258, baseType: !202, size: 128)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !1606, file: !1528, line: 259, baseType: !1610, size: 128, offset: 128)
!1610 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array", file: !1611, line: 22, size: 128, elements: !1612)
!1611 = !DIFile(filename: "./include/linux/assoc_array.h", directory: "/home/lizy2001/genbc/linux")
!1612 = !{!1613, !1616}
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !1610, file: !1611, line: 23, baseType: !1614, size: 64)
!1614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1615, size: 64)
!1615 = !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array_ptr", file: !1611, line: 23, flags: DIFlagFwdDecl)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "nr_leaves_on_tree", scope: !1610, file: !1611, line: 24, baseType: !190, size: 64, offset: 64)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_link", scope: !1527, file: !1528, line: 274, baseType: !1618, size: 64, offset: 1600)
!1618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1619, size: 64)
!1619 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_restriction", file: !1528, line: 170, size: 192, elements: !1620)
!1620 = !{!1621, !1630, !1631}
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !1619, file: !1528, line: 171, baseType: !1622, size: 64)
!1622 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_restrict_link_func_t", file: !1528, line: 165, baseType: !1623)
!1623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1624, size: 64)
!1624 = !DISubroutineType(types: !1625)
!1625 = !{!262, !1526, !1626, !1628, !1526}
!1626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1627, size: 64)
!1627 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1579)
!1628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1629, size: 64)
!1629 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1600)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1619, file: !1528, line: 172, baseType: !1526, size: 64, offset: 64)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "keytype", scope: !1619, file: !1528, line: 173, baseType: !1578, size: 64, offset: 128)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "process_keyring", scope: !1500, file: !1501, line: 138, baseType: !1526, size: 64, offset: 768)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "thread_keyring", scope: !1500, file: !1501, line: 139, baseType: !1526, size: 64, offset: 832)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "request_key_auth", scope: !1500, file: !1501, line: 140, baseType: !1526, size: 64, offset: 896)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1500, file: !1501, line: 145, baseType: !1636, size: 64, offset: 960)
!1636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1637, size: 64)
!1637 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "user_struct", file: !1638, line: 13, size: 896, elements: !1639)
!1638 = !DIFile(filename: "./include/linux/sched/user.h", directory: "/home/lizy2001/genbc/linux")
!1639 = !{!1640, !1641, !1642, !1643, !1644, !1645, !1646, !1647, !1648, !1649, !1650}
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !1637, file: !1638, line: 14, baseType: !1185, size: 32)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "processes", scope: !1637, file: !1638, line: 15, baseType: !816, size: 32, offset: 32)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "sigpending", scope: !1637, file: !1638, line: 16, baseType: !816, size: 32, offset: 64)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "epoll_watches", scope: !1637, file: !1638, line: 21, baseType: !383, size: 64, offset: 128)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "locked_shm", scope: !1637, file: !1638, line: 27, baseType: !190, size: 64, offset: 192)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "unix_inflight", scope: !1637, file: !1638, line: 28, baseType: !190, size: 64, offset: 256)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "pipe_bufs", scope: !1637, file: !1638, line: 29, baseType: !383, size: 64, offset: 320)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "uidhash_node", scope: !1637, file: !1638, line: 32, baseType: !706, size: 128, offset: 384)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1637, file: !1638, line: 33, baseType: !493, size: 32, offset: 512)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !1637, file: !1638, line: 37, baseType: !383, size: 64, offset: 576)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "ratelimit", scope: !1637, file: !1638, line: 44, baseType: !1651, size: 256, offset: 640)
!1651 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ratelimit_state", file: !1652, line: 15, size: 256, elements: !1653)
!1652 = !DIFile(filename: "./include/linux/ratelimit_types.h", directory: "/home/lizy2001/genbc/linux")
!1653 = !{!1654, !1655, !1656, !1657, !1658, !1659, !1660}
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1651, file: !1652, line: 16, baseType: !842)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !1651, file: !1652, line: 18, baseType: !262, size: 32)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "burst", scope: !1651, file: !1652, line: 19, baseType: !262, size: 32, offset: 32)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "printed", scope: !1651, file: !1652, line: 20, baseType: !262, size: 32, offset: 64)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "missed", scope: !1651, file: !1652, line: 21, baseType: !262, size: 32, offset: 96)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !1651, file: !1652, line: 22, baseType: !190, size: 64, offset: 128)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1651, file: !1652, line: 23, baseType: !190, size: 64, offset: 192)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1500, file: !1501, line: 146, baseType: !1662, size: 64, offset: 1024)
!1662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1663, size: 64)
!1663 = !DICompositeType(tag: DW_TAG_structure_type, name: "user_namespace", file: !792, line: 516, flags: DIFlagFwdDecl)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "group_info", scope: !1500, file: !1501, line: 147, baseType: !1665, size: 64, offset: 1088)
!1665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1666, size: 64)
!1666 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group_info", file: !1501, line: 25, size: 64, elements: !1667)
!1667 = !{!1668, !1669, !1670}
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1666, file: !1501, line: 26, baseType: !816, size: 32)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "ngroups", scope: !1666, file: !1501, line: 27, baseType: !262, size: 32, offset: 32)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1666, file: !1501, line: 28, baseType: !1671, offset: 64)
!1671 = !DICompositeType(tag: DW_TAG_array_type, baseType: !502, elements: !1672)
!1672 = !{!1673}
!1673 = !DISubrange(count: 0)
!1674 = !DIDerivedType(tag: DW_TAG_member, scope: !1500, file: !1501, line: 149, baseType: !1675, size: 128, offset: 1152)
!1675 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1500, file: !1501, line: 149, size: 128, elements: !1676)
!1676 = !{!1677, !1678}
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "non_rcu", scope: !1675, file: !1501, line: 150, baseType: !262, size: 32)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1675, file: !1501, line: 151, baseType: !426, size: 128, align: 64)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "real_cred", scope: !1173, file: !1174, line: 926, baseType: !1498, size: 64, offset: 8576)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "cred", scope: !1173, file: !1174, line: 929, baseType: !1498, size: 64, offset: 8640)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "cached_requested_key", scope: !1173, file: !1174, line: 933, baseType: !1526, size: 64, offset: 8704)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "comm", scope: !1173, file: !1174, line: 943, baseType: !1683, size: 128, offset: 8768)
!1683 = !DICompositeType(tag: DW_TAG_array_type, baseType: !198, size: 128, elements: !1684)
!1684 = !{!1685}
!1685 = !DISubrange(count: 16)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "nameidata", scope: !1173, file: !1174, line: 945, baseType: !1687, size: 64, offset: 8896)
!1687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1688, size: 64)
!1688 = !DICompositeType(tag: DW_TAG_structure_type, name: "nameidata", file: !1174, line: 49, flags: DIFlagFwdDecl)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !1173, file: !1174, line: 956, baseType: !1690, size: 64, offset: 8960)
!1690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1691, size: 64)
!1691 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_struct", file: !1174, line: 45, flags: DIFlagFwdDecl)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !1173, file: !1174, line: 959, baseType: !1693, size: 64, offset: 9024)
!1693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1694, size: 64)
!1694 = !DICompositeType(tag: DW_TAG_structure_type, name: "files_struct", file: !1174, line: 959, flags: DIFlagFwdDecl)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "io_uring", scope: !1173, file: !1174, line: 962, baseType: !1696, size: 64, offset: 9088)
!1696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1697, size: 64)
!1697 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_uring_task", file: !1174, line: 66, flags: DIFlagFwdDecl)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "nsproxy", scope: !1173, file: !1174, line: 966, baseType: !1699, size: 64, offset: 9152)
!1699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1700, size: 64)
!1700 = !DICompositeType(tag: DW_TAG_structure_type, name: "nsproxy", file: !1174, line: 50, flags: DIFlagFwdDecl)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !1173, file: !1174, line: 969, baseType: !1702, size: 64, offset: 9216)
!1702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1703, size: 64)
!1703 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "signal_struct", file: !1704, line: 82, size: 7296, elements: !1705)
!1704 = !DIFile(filename: "./include/linux/sched/signal.h", directory: "/home/lizy2001/genbc/linux")
!1705 = !{!1706, !1707, !1708, !1709, !1710, !1711, !1712, !1723, !1724, !1725, !1726, !1727, !1728, !1729, !1730, !1731, !1732, !1733, !1734, !1735, !1741, !1750, !1751, !1753, !1754, !1755, !1758, !1764, !1765, !1766, !1767, !1768, !1769, !1770, !1771, !1772, !1773, !1774, !1775, !1776, !1777, !1778, !1779, !1780, !1781, !1782, !1783, !1784, !1785, !1788, !1789, !1796, !1797, !1798, !1799, !1800, !1801}
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "sigcnt", scope: !1703, file: !1704, line: 83, baseType: !1185, size: 32)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "live", scope: !1703, file: !1704, line: 84, baseType: !816, size: 32, offset: 32)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !1703, file: !1704, line: 85, baseType: !262, size: 32, offset: 64)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "thread_head", scope: !1703, file: !1704, line: 86, baseType: !202, size: 128, offset: 128)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "wait_chldexit", scope: !1703, file: !1704, line: 88, baseType: !1432, size: 128, offset: 256)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "curr_target", scope: !1703, file: !1704, line: 91, baseType: !1172, size: 64, offset: 384)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "shared_pending", scope: !1703, file: !1704, line: 94, baseType: !1713, size: 192, offset: 448)
!1713 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigpending", file: !1714, line: 30, size: 192, elements: !1715)
!1714 = !DIFile(filename: "./include/linux/signal_types.h", directory: "/home/lizy2001/genbc/linux")
!1715 = !{!1716, !1717}
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !1713, file: !1714, line: 31, baseType: !202, size: 128)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !1713, file: !1714, line: 32, baseType: !1718, size: 64, offset: 128)
!1718 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigset_t", file: !1719, line: 25, baseType: !1720)
!1719 = !DIFile(filename: "./arch/x86/include/asm/signal.h", directory: "/home/lizy2001/genbc/linux")
!1720 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1719, line: 23, size: 64, elements: !1721)
!1721 = !{!1722}
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !1720, file: !1719, line: 24, baseType: !236, size: 64)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "multiprocess", scope: !1703, file: !1704, line: 97, baseType: !702, size: 64, offset: 640)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_code", scope: !1703, file: !1704, line: 100, baseType: !262, size: 32, offset: 704)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "notify_count", scope: !1703, file: !1704, line: 106, baseType: !262, size: 32, offset: 736)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_task", scope: !1703, file: !1704, line: 107, baseType: !1172, size: 64, offset: 768)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "group_stop_count", scope: !1703, file: !1704, line: 110, baseType: !262, size: 32, offset: 832)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1703, file: !1704, line: 111, baseType: !7, size: 32, offset: 864)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "is_child_subreaper", scope: !1703, file: !1704, line: 122, baseType: !7, size: 1, offset: 896, flags: DIFlagBitField, extraData: i64 896)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "has_child_subreaper", scope: !1703, file: !1704, line: 123, baseType: !7, size: 1, offset: 897, flags: DIFlagBitField, extraData: i64 896)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timer_id", scope: !1703, file: !1704, line: 128, baseType: !262, size: 32, offset: 928)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timers", scope: !1703, file: !1704, line: 129, baseType: !202, size: 128, offset: 960)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "real_timer", scope: !1703, file: !1704, line: 132, baseType: !1247, size: 512, offset: 1088)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "it_real_incr", scope: !1703, file: !1704, line: 133, baseType: !1255, size: 64, offset: 1600)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "it", scope: !1703, file: !1704, line: 140, baseType: !1736, size: 256, offset: 1664)
!1736 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1737, size: 256, elements: !251)
!1737 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpu_itimer", file: !1704, line: 38, size: 128, elements: !1738)
!1738 = !{!1739, !1740}
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1737, file: !1704, line: 39, baseType: !479, size: 64)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "incr", scope: !1737, file: !1704, line: 40, baseType: !479, size: 64, offset: 64)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "cputimer", scope: !1703, file: !1704, line: 146, baseType: !1742, size: 192, offset: 1920)
!1742 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_group_cputimer", file: !1704, line: 66, size: 192, elements: !1743)
!1743 = !{!1744}
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "cputime_atomic", scope: !1742, file: !1704, line: 67, baseType: !1745, size: 192)
!1745 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_cputime_atomic", file: !1704, line: 47, size: 192, elements: !1746)
!1746 = !{!1747, !1748, !1749}
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1745, file: !1704, line: 48, baseType: !385, size: 64)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1745, file: !1704, line: 49, baseType: !385, size: 64, offset: 64)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !1745, file: !1704, line: 50, baseType: !385, size: 64, offset: 128)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !1703, file: !1704, line: 150, baseType: !1481, size: 640, offset: 2112)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "pids", scope: !1703, file: !1704, line: 153, baseType: !1752, size: 256, offset: 2752)
!1752 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1422, size: 256, elements: !1135)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "tty_old_pgrp", scope: !1703, file: !1704, line: 159, baseType: !1422, size: 64, offset: 3008)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "leader", scope: !1703, file: !1704, line: 162, baseType: !262, size: 32, offset: 3072)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "tty", scope: !1703, file: !1704, line: 164, baseType: !1756, size: 64, offset: 3136)
!1756 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1757, size: 64)
!1757 = !DICompositeType(tag: DW_TAG_structure_type, name: "tty_struct", file: !1704, line: 164, flags: DIFlagFwdDecl)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "stats_lock", scope: !1703, file: !1704, line: 175, baseType: !1759, size: 32, offset: 3200)
!1759 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqlock_t", file: !449, line: 805, baseType: !1760)
!1760 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !449, line: 798, size: 32, elements: !1761)
!1761 = !{!1762, !1763}
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !1760, file: !449, line: 803, baseType: !448, size: 32)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1760, file: !449, line: 804, baseType: !393, offset: 32)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1703, file: !1704, line: 176, baseType: !479, size: 64, offset: 3264)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1703, file: !1704, line: 176, baseType: !479, size: 64, offset: 3328)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "cutime", scope: !1703, file: !1704, line: 176, baseType: !479, size: 64, offset: 3392)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "cstime", scope: !1703, file: !1704, line: 176, baseType: !479, size: 64, offset: 3456)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !1703, file: !1704, line: 177, baseType: !479, size: 64, offset: 3520)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "cgtime", scope: !1703, file: !1704, line: 178, baseType: !479, size: 64, offset: 3584)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !1703, file: !1704, line: 179, baseType: !1469, size: 128, offset: 3648)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !1703, file: !1704, line: 180, baseType: !190, size: 64, offset: 3776)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !1703, file: !1704, line: 180, baseType: !190, size: 64, offset: 3840)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "cnvcsw", scope: !1703, file: !1704, line: 180, baseType: !190, size: 64, offset: 3904)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "cnivcsw", scope: !1703, file: !1704, line: 180, baseType: !190, size: 64, offset: 3968)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !1703, file: !1704, line: 181, baseType: !190, size: 64, offset: 4032)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !1703, file: !1704, line: 181, baseType: !190, size: 64, offset: 4096)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "cmin_flt", scope: !1703, file: !1704, line: 181, baseType: !190, size: 64, offset: 4160)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "cmaj_flt", scope: !1703, file: !1704, line: 181, baseType: !190, size: 64, offset: 4224)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "inblock", scope: !1703, file: !1704, line: 182, baseType: !190, size: 64, offset: 4288)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "oublock", scope: !1703, file: !1704, line: 182, baseType: !190, size: 64, offset: 4352)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "cinblock", scope: !1703, file: !1704, line: 182, baseType: !190, size: 64, offset: 4416)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "coublock", scope: !1703, file: !1704, line: 182, baseType: !190, size: 64, offset: 4480)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "maxrss", scope: !1703, file: !1704, line: 183, baseType: !190, size: 64, offset: 4544)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "cmaxrss", scope: !1703, file: !1704, line: 183, baseType: !190, size: 64, offset: 4608)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !1703, file: !1704, line: 184, baseType: !1786, offset: 4672)
!1786 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_io_accounting", file: !1787, line: 12, elements: !407)
!1787 = !DIFile(filename: "./include/linux/task_io_accounting.h", directory: "/home/lizy2001/genbc/linux")
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "sum_sched_runtime", scope: !1703, file: !1704, line: 192, baseType: !481, size: 64, offset: 4672)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "rlim", scope: !1703, file: !1704, line: 203, baseType: !1790, size: 2048, offset: 4736)
!1790 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1791, size: 2048, elements: !1684)
!1791 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rlimit", file: !1792, line: 43, size: 128, elements: !1793)
!1792 = !DIFile(filename: "./include/uapi/linux/resource.h", directory: "/home/lizy2001/genbc/linux")
!1793 = !{!1794, !1795}
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_cur", scope: !1791, file: !1792, line: 44, baseType: !641, size: 64)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_max", scope: !1791, file: !1792, line: 45, baseType: !641, size: 64, offset: 64)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "oom_flag_origin", scope: !1703, file: !1704, line: 220, baseType: !550, size: 8, offset: 6784)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj", scope: !1703, file: !1704, line: 221, baseType: !298, size: 16, offset: 6800)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj_min", scope: !1703, file: !1704, line: 222, baseType: !298, size: 16, offset: 6816)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "oom_mm", scope: !1703, file: !1704, line: 224, baseType: !1034, size: 64, offset: 6848)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "cred_guard_mutex", scope: !1703, file: !1704, line: 227, baseType: !379, size: 192, offset: 6912)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "exec_update_mutex", scope: !1703, file: !1704, line: 233, baseType: !379, size: 192, offset: 7104)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "sighand", scope: !1173, file: !1174, line: 970, baseType: !1803, size: 64, offset: 9280)
!1803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1804, size: 64)
!1804 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sighand_struct", file: !1704, line: 20, size: 16576, elements: !1805)
!1805 = !{!1806, !1807, !1808, !1809}
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "siglock", scope: !1804, file: !1704, line: 21, baseType: !393)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1804, file: !1704, line: 22, baseType: !1185, size: 32)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "signalfd_wqh", scope: !1804, file: !1704, line: 23, baseType: !1432, size: 128, offset: 64)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !1804, file: !1704, line: 24, baseType: !1810, size: 16384, offset: 192)
!1810 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1811, size: 16384, elements: !1831)
!1811 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sigaction", file: !1714, line: 49, size: 256, elements: !1812)
!1812 = !{!1813}
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "sa", scope: !1811, file: !1714, line: 50, baseType: !1814, size: 256)
!1814 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigaction", file: !1714, line: 35, size: 256, elements: !1815)
!1815 = !{!1816, !1823, !1824, !1830}
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "sa_handler", scope: !1814, file: !1714, line: 37, baseType: !1817, size: 64)
!1817 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sighandler_t", file: !1818, line: 19, baseType: !1819)
!1818 = !DIFile(filename: "./include/uapi/asm-generic/signal-defs.h", directory: "/home/lizy2001/genbc/linux")
!1819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1820, size: 64)
!1820 = !DIDerivedType(tag: DW_TAG_typedef, name: "__signalfn_t", file: !1818, line: 18, baseType: !1821)
!1821 = !DISubroutineType(types: !1822)
!1822 = !{null, !262}
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "sa_flags", scope: !1814, file: !1714, line: 38, baseType: !190, size: 64, offset: 64)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "sa_restorer", scope: !1814, file: !1714, line: 44, baseType: !1825, size: 64, offset: 128)
!1825 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sigrestore_t", file: !1818, line: 22, baseType: !1826)
!1826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1827, size: 64)
!1827 = !DIDerivedType(tag: DW_TAG_typedef, name: "__restorefn_t", file: !1818, line: 21, baseType: !1828)
!1828 = !DISubroutineType(types: !1829)
!1829 = !{null}
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "sa_mask", scope: !1814, file: !1714, line: 46, baseType: !1718, size: 64, offset: 192)
!1831 = !{!1832}
!1832 = !DISubrange(count: 64)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "blocked", scope: !1173, file: !1174, line: 971, baseType: !1718, size: 64, offset: 9344)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "real_blocked", scope: !1173, file: !1174, line: 972, baseType: !1718, size: 64, offset: 9408)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "saved_sigmask", scope: !1173, file: !1174, line: 974, baseType: !1718, size: 64, offset: 9472)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "pending", scope: !1173, file: !1174, line: 975, baseType: !1713, size: 192, offset: 9536)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_sp", scope: !1173, file: !1174, line: 976, baseType: !190, size: 64, offset: 9728)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_size", scope: !1173, file: !1174, line: 977, baseType: !639, size: 64, offset: 9792)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_flags", scope: !1173, file: !1174, line: 978, baseType: !7, size: 32, offset: 9856)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "task_works", scope: !1173, file: !1174, line: 980, baseType: !429, size: 64, offset: 9920)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "seccomp", scope: !1173, file: !1174, line: 989, baseType: !1842, size: 128, offset: 9984)
!1842 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp", file: !1843, line: 35, size: 128, elements: !1844)
!1843 = !DIFile(filename: "./include/linux/seccomp.h", directory: "/home/lizy2001/genbc/linux")
!1844 = !{!1845, !1846, !1847}
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1842, file: !1843, line: 36, baseType: !262, size: 32)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "filter_count", scope: !1842, file: !1843, line: 37, baseType: !816, size: 32, offset: 32)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1842, file: !1843, line: 38, baseType: !1848, size: 64, offset: 64)
!1848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1849, size: 64)
!1849 = !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp_filter", file: !1843, line: 23, flags: DIFlagFwdDecl)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "parent_exec_id", scope: !1173, file: !1174, line: 992, baseType: !479, size: 64, offset: 10112)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "self_exec_id", scope: !1173, file: !1174, line: 993, baseType: !479, size: 64, offset: 10176)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_lock", scope: !1173, file: !1174, line: 996, baseType: !393, offset: 10240)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "pi_lock", scope: !1173, file: !1174, line: 999, baseType: !842, offset: 10240)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "wake_q", scope: !1173, file: !1174, line: 1001, baseType: !1855, size: 64, offset: 10240)
!1855 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wake_q_node", file: !1174, line: 636, size: 64, elements: !1856)
!1856 = !{!1857}
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1855, file: !1174, line: 637, baseType: !1858, size: 64)
!1858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1855, size: 64)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "pi_waiters", scope: !1173, file: !1174, line: 1005, baseType: !821, size: 128, offset: 10304)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "pi_top_task", scope: !1173, file: !1174, line: 1007, baseType: !1172, size: 64, offset: 10432)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "pi_blocked_on", scope: !1173, file: !1174, line: 1009, baseType: !1862, size: 64, offset: 10496)
!1862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1863, size: 64)
!1863 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt_mutex_waiter", file: !1174, line: 1009, flags: DIFlagFwdDecl)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "journal_info", scope: !1173, file: !1174, line: 1043, baseType: !191, size: 64, offset: 10560)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "bio_list", scope: !1173, file: !1174, line: 1046, baseType: !1866, size: 64, offset: 10624)
!1866 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1867, size: 64)
!1867 = !DICompositeType(tag: DW_TAG_structure_type, name: "bio_list", file: !1174, line: 41, flags: DIFlagFwdDecl)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "plug", scope: !1173, file: !1174, line: 1050, baseType: !1869, size: 64, offset: 10688)
!1869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1870, size: 64)
!1870 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_plug", file: !1174, line: 42, flags: DIFlagFwdDecl)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "reclaim_state", scope: !1173, file: !1174, line: 1054, baseType: !1872, size: 64, offset: 10752)
!1872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1873, size: 64)
!1873 = !DICompositeType(tag: DW_TAG_structure_type, name: "reclaim_state", file: !1174, line: 55, flags: DIFlagFwdDecl)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "backing_dev_info", scope: !1173, file: !1174, line: 1056, baseType: !1875, size: 64, offset: 10816)
!1875 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1876, size: 64)
!1876 = !DICompositeType(tag: DW_TAG_structure_type, name: "backing_dev_info", file: !1174, line: 40, flags: DIFlagFwdDecl)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "io_context", scope: !1173, file: !1174, line: 1058, baseType: !1878, size: 64, offset: 10880)
!1878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1879, size: 64)
!1879 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_context", file: !1880, line: 99, size: 704, elements: !1881)
!1880 = !DIFile(filename: "./include/linux/iocontext.h", directory: "/home/lizy2001/genbc/linux")
!1881 = !{!1882, !1883, !1884, !1885, !1886, !1887, !1888, !1907, !1908}
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !1879, file: !1880, line: 100, baseType: !383, size: 64)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "active_ref", scope: !1879, file: !1880, line: 101, baseType: !816, size: 32, offset: 64)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "nr_tasks", scope: !1879, file: !1880, line: 102, baseType: !816, size: 32, offset: 96)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1879, file: !1880, line: 105, baseType: !393, offset: 128)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "ioprio", scope: !1879, file: !1880, line: 107, baseType: !231, size: 16, offset: 128)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "icq_tree", scope: !1879, file: !1880, line: 109, baseType: !808, size: 128, offset: 192)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "icq_hint", scope: !1879, file: !1880, line: 110, baseType: !1889, size: 64, offset: 320)
!1889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1890, size: 64)
!1890 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_cq", file: !1880, line: 73, size: 448, elements: !1891)
!1891 = !{!1892, !1895, !1896, !1901, !1906}
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !1890, file: !1880, line: 74, baseType: !1893, size: 64)
!1893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1894, size: 64)
!1894 = !DICompositeType(tag: DW_TAG_structure_type, name: "request_queue", file: !1880, line: 74, flags: DIFlagFwdDecl)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "ioc", scope: !1890, file: !1880, line: 75, baseType: !1878, size: 64, offset: 64)
!1896 = !DIDerivedType(tag: DW_TAG_member, scope: !1890, file: !1880, line: 83, baseType: !1897, size: 128, offset: 128)
!1897 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1890, file: !1880, line: 83, size: 128, elements: !1898)
!1898 = !{!1899, !1900}
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "q_node", scope: !1897, file: !1880, line: 84, baseType: !202, size: 128)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_icq_cache", scope: !1897, file: !1880, line: 85, baseType: !995, size: 64)
!1901 = !DIDerivedType(tag: DW_TAG_member, scope: !1890, file: !1880, line: 87, baseType: !1902, size: 128, offset: 256)
!1902 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1890, file: !1880, line: 87, size: 128, elements: !1903)
!1903 = !{!1904, !1905}
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "ioc_node", scope: !1902, file: !1880, line: 88, baseType: !706, size: 128)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_head", scope: !1902, file: !1880, line: 89, baseType: !426, size: 128, align: 64)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1890, file: !1880, line: 92, baseType: !7, size: 32, offset: 384)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "icq_list", scope: !1879, file: !1880, line: 111, baseType: !702, size: 64, offset: 384)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "release_work", scope: !1879, file: !1880, line: 113, baseType: !1909, size: 256, offset: 448)
!1909 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "work_struct", file: !130, line: 102, size: 256, elements: !1910)
!1910 = !{!1911, !1912, !1913}
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1909, file: !130, line: 103, baseType: !383, size: 64)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !1909, file: !130, line: 104, baseType: !202, size: 128, offset: 64)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1909, file: !130, line: 105, baseType: !1914, size: 64, offset: 192)
!1914 = !DIDerivedType(tag: DW_TAG_typedef, name: "work_func_t", file: !130, line: 21, baseType: !1915)
!1915 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1916, size: 64)
!1916 = !DISubroutineType(types: !1917)
!1917 = !{null, !1918}
!1918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1909, size: 64)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "capture_control", scope: !1173, file: !1174, line: 1061, baseType: !1920, size: 64, offset: 10944)
!1920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1921, size: 64)
!1921 = !DICompositeType(tag: DW_TAG_structure_type, name: "capture_control", file: !1174, line: 43, flags: DIFlagFwdDecl)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_message", scope: !1173, file: !1174, line: 1064, baseType: !190, size: 64, offset: 11008)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "last_siginfo", scope: !1173, file: !1174, line: 1065, baseType: !1924, size: 64, offset: 11072)
!1924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1925, size: 64)
!1925 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_siginfo_t", file: !1714, line: 14, baseType: !1926)
!1926 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_siginfo", file: !1714, line: 12, size: 384, elements: !1927)
!1927 = !{!1928}
!1928 = !DIDerivedType(tag: DW_TAG_member, scope: !1926, file: !1714, line: 13, baseType: !1929, size: 384)
!1929 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1926, file: !1714, line: 13, size: 384, elements: !1930)
!1930 = !{!1931, !1932, !1933, !1934}
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "si_signo", scope: !1929, file: !1714, line: 13, baseType: !262, size: 32)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "si_errno", scope: !1929, file: !1714, line: 13, baseType: !262, size: 32, offset: 32)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "si_code", scope: !1929, file: !1714, line: 13, baseType: !262, size: 32, offset: 64)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "_sifields", scope: !1929, file: !1714, line: 13, baseType: !1935, size: 256, offset: 128)
!1935 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "__sifields", file: !1936, line: 32, size: 256, elements: !1937)
!1936 = !DIFile(filename: "./include/uapi/asm-generic/siginfo.h", directory: "/home/lizy2001/genbc/linux")
!1937 = !{!1938, !1943, !1956, !1962, !1971, !1991, !1996}
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "_kill", scope: !1935, file: !1936, line: 37, baseType: !1939, size: 64)
!1939 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1935, file: !1936, line: 34, size: 64, elements: !1940)
!1940 = !{!1941, !1942}
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !1939, file: !1936, line: 35, baseType: !1411, size: 32)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !1939, file: !1936, line: 36, baseType: !499, size: 32, offset: 32)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "_timer", scope: !1935, file: !1936, line: 45, baseType: !1944, size: 192)
!1944 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1935, file: !1936, line: 40, size: 192, elements: !1945)
!1945 = !{!1946, !1948, !1949, !1955}
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "_tid", scope: !1944, file: !1936, line: 41, baseType: !1947, size: 32)
!1947 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_timer_t", file: !500, line: 95, baseType: !262)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "_overrun", scope: !1944, file: !1936, line: 42, baseType: !262, size: 32, offset: 32)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !1944, file: !1936, line: 43, baseType: !1950, size: 64, offset: 64)
!1950 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigval_t", file: !1936, line: 11, baseType: !1951)
!1951 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "sigval", file: !1936, line: 8, size: 64, elements: !1952)
!1952 = !{!1953, !1954}
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "sival_int", scope: !1951, file: !1936, line: 9, baseType: !262, size: 32)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "sival_ptr", scope: !1951, file: !1936, line: 10, baseType: !191, size: 64)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "_sys_private", scope: !1944, file: !1936, line: 44, baseType: !262, size: 32, offset: 128)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "_rt", scope: !1935, file: !1936, line: 52, baseType: !1957, size: 128)
!1957 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1935, file: !1936, line: 48, size: 128, elements: !1958)
!1958 = !{!1959, !1960, !1961}
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !1957, file: !1936, line: 49, baseType: !1411, size: 32)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !1957, file: !1936, line: 50, baseType: !499, size: 32, offset: 32)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !1957, file: !1936, line: 51, baseType: !1950, size: 64, offset: 64)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "_sigchld", scope: !1935, file: !1936, line: 61, baseType: !1963, size: 256)
!1963 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1935, file: !1936, line: 55, size: 256, elements: !1964)
!1964 = !{!1965, !1966, !1967, !1968, !1970}
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !1963, file: !1936, line: 56, baseType: !1411, size: 32)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !1963, file: !1936, line: 57, baseType: !499, size: 32, offset: 32)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "_status", scope: !1963, file: !1936, line: 58, baseType: !262, size: 32, offset: 64)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "_utime", scope: !1963, file: !1936, line: 59, baseType: !1969, size: 64, offset: 128)
!1969 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clock_t", file: !500, line: 94, baseType: !638)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "_stime", scope: !1963, file: !1936, line: 60, baseType: !1969, size: 64, offset: 192)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "_sigfault", scope: !1935, file: !1936, line: 95, baseType: !1972, size: 256)
!1972 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1935, file: !1936, line: 64, size: 256, elements: !1973)
!1973 = !{!1974, !1975}
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "_addr", scope: !1972, file: !1936, line: 65, baseType: !191, size: 64)
!1975 = !DIDerivedType(tag: DW_TAG_member, scope: !1972, file: !1936, line: 77, baseType: !1976, size: 192, offset: 64)
!1976 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1972, file: !1936, line: 77, size: 192, elements: !1977)
!1977 = !{!1978, !1979, !1986}
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_lsb", scope: !1976, file: !1936, line: 82, baseType: !298, size: 16)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_bnd", scope: !1976, file: !1936, line: 88, baseType: !1980, size: 192)
!1980 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1976, file: !1936, line: 84, size: 192, elements: !1981)
!1981 = !{!1982, !1984, !1985}
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_bnd", scope: !1980, file: !1936, line: 85, baseType: !1983, size: 64)
!1983 = !DICompositeType(tag: DW_TAG_array_type, baseType: !198, size: 64, elements: !1285)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "_lower", scope: !1980, file: !1936, line: 86, baseType: !191, size: 64, offset: 64)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "_upper", scope: !1980, file: !1936, line: 87, baseType: !191, size: 64, offset: 128)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_pkey", scope: !1976, file: !1936, line: 93, baseType: !1987, size: 96)
!1987 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1976, file: !1936, line: 90, size: 96, elements: !1988)
!1988 = !{!1989, !1990}
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_pkey", scope: !1987, file: !1936, line: 91, baseType: !1983, size: 64)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "_pkey", scope: !1987, file: !1936, line: 92, baseType: !273, size: 32, offset: 64)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "_sigpoll", scope: !1935, file: !1936, line: 101, baseType: !1992, size: 128)
!1992 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1935, file: !1936, line: 98, size: 128, elements: !1993)
!1993 = !{!1994, !1995}
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "_band", scope: !1992, file: !1936, line: 99, baseType: !131, size: 64)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "_fd", scope: !1992, file: !1936, line: 100, baseType: !262, size: 32, offset: 64)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "_sigsys", scope: !1935, file: !1936, line: 108, baseType: !1997, size: 128)
!1997 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1935, file: !1936, line: 104, size: 128, elements: !1998)
!1998 = !{!1999, !2000, !2001}
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "_call_addr", scope: !1997, file: !1936, line: 105, baseType: !191, size: 64)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "_syscall", scope: !1997, file: !1936, line: 106, baseType: !262, size: 32, offset: 64)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "_arch", scope: !1997, file: !1936, line: 107, baseType: !7, size: 32, offset: 96)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !1173, file: !1174, line: 1067, baseType: !1786, offset: 11136)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "robust_list", scope: !1173, file: !1174, line: 1099, baseType: !2004, size: 64, offset: 11136)
!2004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2005, size: 64)
!2005 = !DICompositeType(tag: DW_TAG_structure_type, name: "robust_list_head", file: !1174, line: 56, flags: DIFlagFwdDecl)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_list", scope: !1173, file: !1174, line: 1103, baseType: !202, size: 128, offset: 11200)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_cache", scope: !1173, file: !1174, line: 1104, baseType: !2008, size: 64, offset: 11328)
!2008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2009, size: 64)
!2009 = !DICompositeType(tag: DW_TAG_structure_type, name: "futex_pi_state", file: !1174, line: 46, flags: DIFlagFwdDecl)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "futex_exit_mutex", scope: !1173, file: !1174, line: 1105, baseType: !379, size: 192, offset: 11392)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "futex_state", scope: !1173, file: !1174, line: 1106, baseType: !7, size: 32, offset: 11584)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_ctxp", scope: !1173, file: !1174, line: 1109, baseType: !2013, size: 128, offset: 11648)
!2013 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2014, size: 128, elements: !251)
!2014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2015, size: 64)
!2015 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event_context", file: !1174, line: 51, flags: DIFlagFwdDecl)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_mutex", scope: !1173, file: !1174, line: 1110, baseType: !379, size: 192, offset: 11776)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_list", scope: !1173, file: !1174, line: 1111, baseType: !202, size: 128, offset: 11968)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "rseq", scope: !1173, file: !1174, line: 1173, baseType: !2019, size: 64, offset: 12096)
!2019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2020, size: 64)
!2020 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rseq", file: !2021, line: 62, size: 256, align: 256, elements: !2022)
!2021 = !DIFile(filename: "./include/uapi/linux/rseq.h", directory: "/home/lizy2001/genbc/linux")
!2022 = !{!2023, !2024, !2025, !2030}
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id_start", scope: !2020, file: !2021, line: 75, baseType: !273, size: 32)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id", scope: !2020, file: !2021, line: 90, baseType: !273, size: 32, offset: 32)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_cs", scope: !2020, file: !2021, line: 124, baseType: !2026, size: 64, offset: 64)
!2026 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2020, file: !2021, line: 109, size: 64, elements: !2027)
!2027 = !{!2028, !2029}
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "ptr64", scope: !2026, file: !2021, line: 110, baseType: !480, size: 64)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !2026, file: !2021, line: 112, baseType: !480, size: 64)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2020, file: !2021, line: 144, baseType: !273, size: 32, offset: 128)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_sig", scope: !1173, file: !1174, line: 1174, baseType: !476, size: 32, offset: 12160)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_event_mask", scope: !1173, file: !1174, line: 1179, baseType: !190, size: 64, offset: 12224)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_ubc", scope: !1173, file: !1174, line: 1182, baseType: !2034, size: 128, offset: 12288)
!2034 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tlbflush_unmap_batch", file: !1131, line: 76, size: 128, elements: !2035)
!2035 = !{!2036, !2041, !2042}
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2034, file: !1131, line: 85, baseType: !2037, size: 64)
!2037 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arch_tlbflush_unmap_batch", file: !2038, line: 7, size: 64, elements: !2039)
!2038 = !DIFile(filename: "./arch/x86/include/asm/tlbbatch.h", directory: "/home/lizy2001/genbc/linux")
!2039 = !{!2040}
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "cpumask", scope: !2037, file: !2038, line: 12, baseType: !1321, size: 64)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "flush_required", scope: !2034, file: !1131, line: 88, baseType: !550, size: 8, offset: 64)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "writable", scope: !2034, file: !1131, line: 95, baseType: !550, size: 8, offset: 72)
!2043 = !DIDerivedType(tag: DW_TAG_member, scope: !1173, file: !1174, line: 1184, baseType: !2044, size: 128, offset: 12416)
!2044 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1173, file: !1174, line: 1184, size: 128, elements: !2045)
!2045 = !{!2046, !2047}
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_users", scope: !2044, file: !1174, line: 1185, baseType: !1185, size: 32)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2044, file: !1174, line: 1186, baseType: !426, size: 128, align: 64)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "splice_pipe", scope: !1173, file: !1174, line: 1190, baseType: !2049, size: 64, offset: 12544)
!2049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2050, size: 64)
!2050 = !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_inode_info", file: !1174, line: 53, flags: DIFlagFwdDecl)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "task_frag", scope: !1173, file: !1174, line: 1192, baseType: !2052, size: 128, offset: 12608)
!2052 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page_frag", file: !1131, line: 64, size: 128, elements: !2053)
!2053 = !{!2054, !2055, !2056}
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !2052, file: !1131, line: 65, baseType: !790, size: 64)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2052, file: !1131, line: 67, baseType: !273, size: 32, offset: 64)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2052, file: !1131, line: 68, baseType: !273, size: 32, offset: 96)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied", scope: !1173, file: !1174, line: 1206, baseType: !262, size: 32, offset: 12736)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied_pause", scope: !1173, file: !1174, line: 1207, baseType: !262, size: 32, offset: 12768)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_paused_when", scope: !1173, file: !1174, line: 1209, baseType: !190, size: 64, offset: 12800)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "timer_slack_ns", scope: !1173, file: !1174, line: 1219, baseType: !479, size: 64, offset: 12864)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "default_timer_slack_ns", scope: !1173, file: !1174, line: 1220, baseType: !479, size: 64, offset: 12928)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "pagefault_disabled", scope: !1173, file: !1174, line: 1317, baseType: !262, size: 32, offset: 12992)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "oom_reaper_list", scope: !1173, file: !1174, line: 1319, baseType: !1172, size: 64, offset: 13056)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm_area", scope: !1173, file: !1174, line: 1322, baseType: !2065, size: 64, offset: 13120)
!2065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2066, size: 64)
!2066 = !DICompositeType(tag: DW_TAG_structure_type, name: "vm_struct", file: !2067, line: 9, flags: DIFlagFwdDecl)
!2067 = !DIFile(filename: "./include/linux/kasan.h", directory: "/home/lizy2001/genbc/linux")
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "stack_refcount", scope: !1173, file: !1174, line: 1326, baseType: !1185, size: 32, offset: 13184)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "mce_vaddr", scope: !1173, file: !1174, line: 1342, baseType: !191, size: 64, offset: 13248)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kflags", scope: !1173, file: !1174, line: 1343, baseType: !480, size: 64, offset: 13312)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "mce_addr", scope: !1173, file: !1174, line: 1344, baseType: !479, size: 64, offset: 13376)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "mce_ripv", scope: !1173, file: !1174, line: 1345, baseType: !480, size: 1, offset: 13440, flags: DIFlagBitField, extraData: i64 13440)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "mce_whole_page", scope: !1173, file: !1174, line: 1346, baseType: !480, size: 1, offset: 13441, flags: DIFlagBitField, extraData: i64 13440)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "__mce_reserved", scope: !1173, file: !1174, line: 1347, baseType: !480, size: 62, offset: 13442, flags: DIFlagBitField, extraData: i64 13440)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kill_me", scope: !1173, file: !1174, line: 1348, baseType: !426, size: 128, align: 64, offset: 13504)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !1173, file: !1174, line: 1358, baseType: !2077, size: 34816, offset: 13824)
!2077 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_struct", file: !2078, line: 485, size: 34816, elements: !2079)
!2078 = !DIFile(filename: "./arch/x86/include/asm/processor.h", directory: "/home/lizy2001/genbc/linux")
!2079 = !{!2080, !2098, !2099, !2100, !2101, !2102, !2103, !2104, !2105, !2109, !2110, !2111, !2112, !2113, !2114, !2117, !2118, !2119}
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "tls_array", scope: !2077, file: !2078, line: 487, baseType: !2081, size: 192)
!2081 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2082, size: 192, elements: !718)
!2082 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "desc_struct", file: !2083, line: 16, size: 64, elements: !2084)
!2083 = !DIFile(filename: "./arch/x86/include/asm/desc_defs.h", directory: "/home/lizy2001/genbc/linux")
!2084 = !{!2085, !2086, !2087, !2088, !2089, !2090, !2091, !2092, !2093, !2094, !2095, !2096, !2097}
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "limit0", scope: !2082, file: !2083, line: 17, baseType: !369, size: 16)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "base0", scope: !2082, file: !2083, line: 18, baseType: !369, size: 16, offset: 16)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "base1", scope: !2082, file: !2083, line: 19, baseType: !369, size: 8, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2082, file: !2083, line: 19, baseType: !369, size: 4, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !2082, file: !2083, line: 19, baseType: !369, size: 1, offset: 44, flags: DIFlagBitField, extraData: i64 32)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "dpl", scope: !2082, file: !2083, line: 19, baseType: !369, size: 2, offset: 45, flags: DIFlagBitField, extraData: i64 32)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !2082, file: !2083, line: 19, baseType: !369, size: 1, offset: 47, flags: DIFlagBitField, extraData: i64 32)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "limit1", scope: !2082, file: !2083, line: 20, baseType: !369, size: 4, offset: 48, flags: DIFlagBitField, extraData: i64 32)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "avl", scope: !2082, file: !2083, line: 20, baseType: !369, size: 1, offset: 52, flags: DIFlagBitField, extraData: i64 32)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !2082, file: !2083, line: 20, baseType: !369, size: 1, offset: 53, flags: DIFlagBitField, extraData: i64 32)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !2082, file: !2083, line: 20, baseType: !369, size: 1, offset: 54, flags: DIFlagBitField, extraData: i64 32)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !2082, file: !2083, line: 20, baseType: !369, size: 1, offset: 55, flags: DIFlagBitField, extraData: i64 32)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "base2", scope: !2082, file: !2083, line: 20, baseType: !369, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 32)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !2077, file: !2078, line: 491, baseType: !190, size: 64, offset: 192)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "es", scope: !2077, file: !2078, line: 495, baseType: !231, size: 16, offset: 256)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !2077, file: !2078, line: 496, baseType: !231, size: 16, offset: 272)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "fsindex", scope: !2077, file: !2078, line: 497, baseType: !231, size: 16, offset: 288)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "gsindex", scope: !2077, file: !2078, line: 498, baseType: !231, size: 16, offset: 304)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "fsbase", scope: !2077, file: !2078, line: 502, baseType: !190, size: 64, offset: 320)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !2077, file: !2078, line: 503, baseType: !190, size: 64, offset: 384)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_bps", scope: !2077, file: !2078, line: 514, baseType: !2106, size: 256, offset: 448)
!2106 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2107, size: 256, elements: !1135)
!2107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2108, size: 64)
!2108 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event", file: !2078, line: 483, flags: DIFlagFwdDecl)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_dr6", scope: !2077, file: !2078, line: 516, baseType: !190, size: 64, offset: 704)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_dr7", scope: !2077, file: !2078, line: 518, baseType: !190, size: 64, offset: 768)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "cr2", scope: !2077, file: !2078, line: 520, baseType: !190, size: 64, offset: 832)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "trap_nr", scope: !2077, file: !2078, line: 521, baseType: !190, size: 64, offset: 896)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "error_code", scope: !2077, file: !2078, line: 522, baseType: !190, size: 64, offset: 960)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "io_bitmap", scope: !2077, file: !2078, line: 528, baseType: !2115, size: 64, offset: 1024)
!2115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2116, size: 64)
!2116 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_bitmap", file: !2078, line: 10, flags: DIFlagFwdDecl)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "iopl_emul", scope: !2077, file: !2078, line: 535, baseType: !190, size: 64, offset: 1088)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "sig_on_uaccess_err", scope: !2077, file: !2078, line: 537, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "fpu", scope: !2077, file: !2078, line: 540, baseType: !2120, size: 33280, offset: 1536)
!2120 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fpu", file: !2121, line: 317, size: 33280, elements: !2122)
!2121 = !DIFile(filename: "./arch/x86/include/asm/fpu/types.h", directory: "/home/lizy2001/genbc/linux")
!2122 = !{!2123, !2124, !2125}
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "last_cpu", scope: !2120, file: !2121, line: 330, baseType: !7, size: 32)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "avx512_timestamp", scope: !2120, file: !2121, line: 337, baseType: !190, size: 64, offset: 64)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2120, file: !2121, line: 348, baseType: !2126, size: 32768, offset: 512)
!2126 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "fpregs_state", file: !2121, line: 304, size: 32768, elements: !2127)
!2127 = !{!2128, !2143, !2178, !2228, !2241}
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "fsave", scope: !2126, file: !2121, line: 305, baseType: !2129, size: 896)
!2129 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fregs_state", file: !2121, line: 12, size: 896, elements: !2130)
!2130 = !{!2131, !2132, !2133, !2134, !2135, !2136, !2137, !2138, !2142}
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !2129, file: !2121, line: 13, baseType: !476, size: 32)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !2129, file: !2121, line: 14, baseType: !476, size: 32, offset: 32)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !2129, file: !2121, line: 15, baseType: !476, size: 32, offset: 64)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !2129, file: !2121, line: 16, baseType: !476, size: 32, offset: 96)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !2129, file: !2121, line: 17, baseType: !476, size: 32, offset: 128)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !2129, file: !2121, line: 18, baseType: !476, size: 32, offset: 160)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !2129, file: !2121, line: 19, baseType: !476, size: 32, offset: 192)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !2129, file: !2121, line: 22, baseType: !2139, size: 640, offset: 224)
!2139 = !DICompositeType(tag: DW_TAG_array_type, baseType: !476, size: 640, elements: !2140)
!2140 = !{!2141}
!2141 = !DISubrange(count: 20)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !2129, file: !2121, line: 25, baseType: !476, size: 32, offset: 864)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "fxsave", scope: !2126, file: !2121, line: 306, baseType: !2144, size: 4096, align: 128)
!2144 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fxregs_state", file: !2121, line: 34, size: 4096, align: 128, elements: !2145)
!2145 = !{!2146, !2147, !2148, !2149, !2150, !2165, !2166, !2167, !2169, !2171, !2173}
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !2144, file: !2121, line: 35, baseType: !369, size: 16)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !2144, file: !2121, line: 36, baseType: !369, size: 16, offset: 16)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !2144, file: !2121, line: 37, baseType: !369, size: 16, offset: 32)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "fop", scope: !2144, file: !2121, line: 38, baseType: !369, size: 16, offset: 48)
!2150 = !DIDerivedType(tag: DW_TAG_member, scope: !2144, file: !2121, line: 39, baseType: !2151, size: 128, offset: 64)
!2151 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2144, file: !2121, line: 39, size: 128, elements: !2152)
!2152 = !{!2153, !2158}
!2153 = !DIDerivedType(tag: DW_TAG_member, scope: !2151, file: !2121, line: 40, baseType: !2154, size: 128)
!2154 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2151, file: !2121, line: 40, size: 128, elements: !2155)
!2155 = !{!2156, !2157}
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "rip", scope: !2154, file: !2121, line: 41, baseType: !479, size: 64)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "rdp", scope: !2154, file: !2121, line: 42, baseType: !479, size: 64, offset: 64)
!2158 = !DIDerivedType(tag: DW_TAG_member, scope: !2151, file: !2121, line: 44, baseType: !2159, size: 128)
!2159 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2151, file: !2121, line: 44, size: 128, elements: !2160)
!2160 = !{!2161, !2162, !2163, !2164}
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !2159, file: !2121, line: 45, baseType: !476, size: 32)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !2159, file: !2121, line: 46, baseType: !476, size: 32, offset: 32)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !2159, file: !2121, line: 47, baseType: !476, size: 32, offset: 64)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !2159, file: !2121, line: 48, baseType: !476, size: 32, offset: 96)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr", scope: !2144, file: !2121, line: 51, baseType: !476, size: 32, offset: 192)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr_mask", scope: !2144, file: !2121, line: 52, baseType: !476, size: 32, offset: 224)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !2144, file: !2121, line: 55, baseType: !2168, size: 1024, offset: 256)
!2168 = !DICompositeType(tag: DW_TAG_array_type, baseType: !476, size: 1024, elements: !276)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "xmm_space", scope: !2144, file: !2121, line: 58, baseType: !2170, size: 2048, offset: 1280)
!2170 = !DICompositeType(tag: DW_TAG_array_type, baseType: !476, size: 2048, elements: !1831)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !2144, file: !2121, line: 60, baseType: !2172, size: 384, offset: 3328)
!2172 = !DICompositeType(tag: DW_TAG_array_type, baseType: !476, size: 384, elements: !242)
!2173 = !DIDerivedType(tag: DW_TAG_member, scope: !2144, file: !2121, line: 62, baseType: !2174, size: 384, offset: 3712)
!2174 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2144, file: !2121, line: 62, size: 384, elements: !2175)
!2175 = !{!2176, !2177}
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "padding1", scope: !2174, file: !2121, line: 63, baseType: !2172, size: 384)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "sw_reserved", scope: !2174, file: !2121, line: 64, baseType: !2172, size: 384)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !2126, file: !2121, line: 307, baseType: !2179, size: 1088)
!2179 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swregs_state", file: !2121, line: 79, size: 1088, elements: !2180)
!2180 = !{!2181, !2182, !2183, !2184, !2185, !2186, !2187, !2188, !2189, !2190, !2191, !2192, !2193, !2194, !2195, !2227}
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !2179, file: !2121, line: 80, baseType: !476, size: 32)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !2179, file: !2121, line: 81, baseType: !476, size: 32, offset: 32)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !2179, file: !2121, line: 82, baseType: !476, size: 32, offset: 64)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !2179, file: !2121, line: 83, baseType: !476, size: 32, offset: 96)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !2179, file: !2121, line: 84, baseType: !476, size: 32, offset: 128)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !2179, file: !2121, line: 85, baseType: !476, size: 32, offset: 160)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !2179, file: !2121, line: 86, baseType: !476, size: 32, offset: 192)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !2179, file: !2121, line: 88, baseType: !2139, size: 640, offset: 224)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "ftop", scope: !2179, file: !2121, line: 89, baseType: !1307, size: 8, offset: 864)
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !2179, file: !2121, line: 90, baseType: !1307, size: 8, offset: 872)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "lookahead", scope: !2179, file: !2121, line: 91, baseType: !1307, size: 8, offset: 880)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "no_update", scope: !2179, file: !2121, line: 92, baseType: !1307, size: 8, offset: 888)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "rm", scope: !2179, file: !2121, line: 93, baseType: !1307, size: 8, offset: 896)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "alimit", scope: !2179, file: !2121, line: 94, baseType: !1307, size: 8, offset: 904)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !2179, file: !2121, line: 95, baseType: !2196, size: 64, offset: 960)
!2196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2197, size: 64)
!2197 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "math_emu_info", file: !2198, line: 11, size: 128, elements: !2199)
!2198 = !DIFile(filename: "./arch/x86/include/asm/math_emu.h", directory: "/home/lizy2001/genbc/linux")
!2199 = !{!2200, !2201}
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "___orig_eip", scope: !2197, file: !2198, line: 12, baseType: !131, size: 64)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !2197, file: !2198, line: 13, baseType: !2202, size: 64, offset: 64)
!2202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2203, size: 64)
!2203 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pt_regs", file: !2204, line: 56, size: 1344, elements: !2205)
!2204 = !DIFile(filename: "./arch/x86/include/asm/ptrace.h", directory: "/home/lizy2001/genbc/linux")
!2205 = !{!2206, !2207, !2208, !2209, !2210, !2211, !2212, !2213, !2214, !2215, !2216, !2217, !2218, !2219, !2220, !2221, !2222, !2223, !2224, !2225, !2226}
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2203, file: !2204, line: 61, baseType: !190, size: 64)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2203, file: !2204, line: 62, baseType: !190, size: 64, offset: 64)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "r13", scope: !2203, file: !2204, line: 63, baseType: !190, size: 64, offset: 128)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2203, file: !2204, line: 64, baseType: !190, size: 64, offset: 192)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "bp", scope: !2203, file: !2204, line: 65, baseType: !190, size: 64, offset: 256)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "bx", scope: !2203, file: !2204, line: 66, baseType: !190, size: 64, offset: 320)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "r11", scope: !2203, file: !2204, line: 68, baseType: !190, size: 64, offset: 384)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "r10", scope: !2203, file: !2204, line: 69, baseType: !190, size: 64, offset: 448)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "r9", scope: !2203, file: !2204, line: 70, baseType: !190, size: 64, offset: 512)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "r8", scope: !2203, file: !2204, line: 71, baseType: !190, size: 64, offset: 576)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "ax", scope: !2203, file: !2204, line: 72, baseType: !190, size: 64, offset: 640)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "cx", scope: !2203, file: !2204, line: 73, baseType: !190, size: 64, offset: 704)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "dx", scope: !2203, file: !2204, line: 74, baseType: !190, size: 64, offset: 768)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "si", scope: !2203, file: !2204, line: 75, baseType: !190, size: 64, offset: 832)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "di", scope: !2203, file: !2204, line: 76, baseType: !190, size: 64, offset: 896)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "orig_ax", scope: !2203, file: !2204, line: 81, baseType: !190, size: 64, offset: 960)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2203, file: !2204, line: 83, baseType: !190, size: 64, offset: 1024)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !2203, file: !2204, line: 84, baseType: !190, size: 64, offset: 1088)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2203, file: !2204, line: 85, baseType: !190, size: 64, offset: 1152)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !2203, file: !2204, line: 86, baseType: !190, size: 64, offset: 1216)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "ss", scope: !2203, file: !2204, line: 87, baseType: !190, size: 64, offset: 1280)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "entry_eip", scope: !2179, file: !2121, line: 96, baseType: !476, size: 32, offset: 1024)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "xsave", scope: !2126, file: !2121, line: 308, baseType: !2229, size: 4608, align: 512)
!2229 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xregs_state", file: !2121, line: 289, size: 4608, align: 512, elements: !2230)
!2230 = !{!2231, !2232, !2239}
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "i387", scope: !2229, file: !2121, line: 290, baseType: !2144, size: 4096, align: 128)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !2229, file: !2121, line: 291, baseType: !2233, size: 512, offset: 4096)
!2233 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xstate_header", file: !2121, line: 268, size: 512, elements: !2234)
!2234 = !{!2235, !2236, !2237}
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "xfeatures", scope: !2233, file: !2121, line: 269, baseType: !479, size: 64)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "xcomp_bv", scope: !2233, file: !2121, line: 270, baseType: !479, size: 64, offset: 64)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !2233, file: !2121, line: 271, baseType: !2238, size: 384, offset: 128)
!2238 = !DICompositeType(tag: DW_TAG_array_type, baseType: !479, size: 384, elements: !1574)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "extended_state_area", scope: !2229, file: !2121, line: 292, baseType: !2240, offset: 4608)
!2240 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1307, elements: !1672)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "__padding", scope: !2126, file: !2121, line: 309, baseType: !2242, size: 32768)
!2242 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1307, size: 32768, elements: !2243)
!2243 = !{!2244}
!2244 = !DISubrange(count: 4096)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1169, file: !792, line: 378, baseType: !2246, size: 64, offset: 64)
!2246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1169, size: 64)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "startup", scope: !1165, file: !792, line: 384, baseType: !1453, size: 192, offset: 192)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_lock", scope: !1038, file: !792, line: 500, baseType: !393, offset: 6656)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_table", scope: !1038, file: !792, line: 501, baseType: !2250, size: 64, offset: 6656)
!2250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2251, size: 64)
!2251 = !DICompositeType(tag: DW_TAG_structure_type, name: "kioctx_table", file: !792, line: 387, flags: DIFlagFwdDecl)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1038, file: !792, line: 516, baseType: !1662, size: 64, offset: 6720)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "exe_file", scope: !1038, file: !792, line: 519, baseType: !413, size: 64, offset: 6784)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_subscriptions", scope: !1038, file: !792, line: 521, baseType: !2255, size: 64, offset: 6848)
!2255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2256, size: 64)
!2256 = !DICompositeType(tag: DW_TAG_structure_type, name: "mmu_notifier_subscriptions", file: !792, line: 521, flags: DIFlagFwdDecl)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_pending", scope: !1038, file: !792, line: 545, baseType: !816, size: 32, offset: 6912)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_batched", scope: !1038, file: !792, line: 548, baseType: !550, size: 8, offset: 6944)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "uprobes_state", scope: !1038, file: !792, line: 550, baseType: !2260, offset: 6952)
!2260 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uprobes_state", file: !2261, line: 142, elements: !407)
!2261 = !DIFile(filename: "./include/linux/uprobes.h", directory: "/home/lizy2001/genbc/linux")
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "async_put_work", scope: !1038, file: !792, line: 554, baseType: !1909, size: 256, offset: 6976)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "pasid", scope: !1038, file: !792, line: 557, baseType: !476, size: 32, offset: 7232)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_bitmap", scope: !1035, file: !792, line: 565, baseType: !2265, offset: 7296)
!2265 = !DICompositeType(tag: DW_TAG_array_type, baseType: !190, elements: !2266)
!2266 = !{!2267}
!2267 = !DISubrange(count: -1)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "pt_frag_refcount", scope: !1031, file: !792, line: 151, baseType: !816, size: 32)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !1024, file: !792, line: 156, baseType: !393, offset: 256)
!2270 = !DIDerivedType(tag: DW_TAG_member, scope: !796, file: !792, line: 159, baseType: !2271, size: 128)
!2271 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !796, file: !792, line: 159, size: 128, elements: !2272)
!2272 = !{!2273, !2276}
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "pgmap", scope: !2271, file: !792, line: 161, baseType: !2274, size: 64)
!2274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2275, size: 64)
!2275 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap", file: !792, line: 161, flags: DIFlagFwdDecl)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "zone_device_data", scope: !2271, file: !792, line: 162, baseType: !191, size: 64, offset: 64)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !796, file: !792, line: 176, baseType: !426, size: 128, align: 64)
!2278 = !DIDerivedType(tag: DW_TAG_member, scope: !791, file: !792, line: 179, baseType: !2279, size: 32, offset: 384)
!2279 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !791, file: !792, line: 179, size: 32, elements: !2280)
!2280 = !{!2281, !2282, !2283, !2284}
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "_mapcount", scope: !2279, file: !792, line: 184, baseType: !816, size: 32)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "page_type", scope: !2279, file: !792, line: 192, baseType: !7, size: 32)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !2279, file: !792, line: 194, baseType: !7, size: 32)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !2279, file: !792, line: 195, baseType: !262, size: 32)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "_refcount", scope: !791, file: !792, line: 199, baseType: !816, size: 32, offset: 416)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cached_objects", scope: !726, file: !31, line: 1964, baseType: !2287, size: 64, offset: 1344)
!2287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2288, size: 64)
!2288 = !DISubroutineType(types: !2289)
!2289 = !{!131, !663, !2290}
!2290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2291, size: 64)
!2291 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrink_control", file: !2292, line: 12, size: 256, elements: !2293)
!2292 = !DIFile(filename: "./include/linux/shrinker.h", directory: "/home/lizy2001/genbc/linux")
!2293 = !{!2294, !2295, !2296, !2297, !2298}
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !2291, file: !2292, line: 13, baseType: !192, size: 32)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "nid", scope: !2291, file: !2292, line: 16, baseType: !262, size: 32, offset: 32)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "nr_to_scan", scope: !2291, file: !2292, line: 23, baseType: !190, size: 64, offset: 64)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "nr_scanned", scope: !2291, file: !2292, line: 30, baseType: !190, size: 64, offset: 128)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "memcg", scope: !2291, file: !2292, line: 33, baseType: !2299, size: 64, offset: 192)
!2299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2300, size: 64)
!2300 = !DICompositeType(tag: DW_TAG_structure_type, name: "mem_cgroup", file: !792, line: 27, flags: DIFlagFwdDecl)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "free_cached_objects", scope: !726, file: !31, line: 1966, baseType: !2287, size: 64, offset: 1408)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "dq_op", scope: !664, file: !31, line: 1424, baseType: !2303, size: 64, offset: 448)
!2303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2304, size: 64)
!2304 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2305)
!2305 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot_operations", file: !25, line: 322, size: 704, elements: !2306)
!2306 = !{!2307, !2353, !2357, !2361, !2362, !2363, !2364, !2365, !2370, !2375, !2379}
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "write_dquot", scope: !2305, file: !25, line: 323, baseType: !2308, size: 64)
!2308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2309, size: 64)
!2309 = !DISubroutineType(types: !2310)
!2310 = !{!262, !2311}
!2311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2312, size: 64)
!2312 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot", file: !25, line: 294, size: 1600, elements: !2313)
!2313 = !{!2314, !2315, !2316, !2317, !2318, !2319, !2320, !2321, !2322, !2338, !2339, !2340}
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "dq_hash", scope: !2312, file: !25, line: 295, baseType: !706, size: 128)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "dq_inuse", scope: !2312, file: !25, line: 296, baseType: !202, size: 128, offset: 128)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "dq_free", scope: !2312, file: !25, line: 297, baseType: !202, size: 128, offset: 256)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dirty", scope: !2312, file: !25, line: 298, baseType: !202, size: 128, offset: 384)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "dq_lock", scope: !2312, file: !25, line: 299, baseType: !379, size: 192, offset: 512)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb_lock", scope: !2312, file: !25, line: 300, baseType: !393, offset: 704)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "dq_count", scope: !2312, file: !25, line: 301, baseType: !816, size: 32, offset: 704)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "dq_sb", scope: !2312, file: !25, line: 302, baseType: !663, size: 64, offset: 768)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "dq_id", scope: !2312, file: !25, line: 303, baseType: !2323, size: 64, offset: 832)
!2323 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kqid", file: !25, line: 68, size: 64, elements: !2324)
!2324 = !{!2325, !2337}
!2325 = !DIDerivedType(tag: DW_TAG_member, scope: !2323, file: !25, line: 69, baseType: !2326, size: 32)
!2326 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2323, file: !25, line: 69, size: 32, elements: !2327)
!2327 = !{!2328, !2329, !2330}
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2326, file: !25, line: 70, baseType: !493, size: 32)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !2326, file: !25, line: 71, baseType: !502, size: 32)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "projid", scope: !2326, file: !25, line: 72, baseType: !2331, size: 32)
!2331 = !DIDerivedType(tag: DW_TAG_typedef, name: "kprojid_t", file: !2332, line: 24, baseType: !2333)
!2332 = !DIFile(filename: "./include/linux/projid.h", directory: "/home/lizy2001/genbc/linux")
!2333 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2332, line: 22, size: 32, elements: !2334)
!2334 = !{!2335}
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2333, file: !2332, line: 23, baseType: !2336, size: 32)
!2336 = !DIDerivedType(tag: DW_TAG_typedef, name: "projid_t", file: !2332, line: 20, baseType: !499)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2323, file: !25, line: 74, baseType: !24, size: 32, offset: 32)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "dq_off", scope: !2312, file: !25, line: 304, baseType: !591, size: 64, offset: 896)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "dq_flags", scope: !2312, file: !25, line: 305, baseType: !190, size: 64, offset: 960)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb", scope: !2312, file: !25, line: 306, baseType: !2341, size: 576, offset: 1024)
!2341 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqblk", file: !25, line: 205, size: 576, elements: !2342)
!2342 = !{!2343, !2345, !2346, !2347, !2348, !2349, !2350, !2351, !2352}
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bhardlimit", scope: !2341, file: !25, line: 206, baseType: !2344, size: 64)
!2344 = !DIDerivedType(tag: DW_TAG_typedef, name: "qsize_t", file: !25, line: 66, baseType: !391)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bsoftlimit", scope: !2341, file: !25, line: 207, baseType: !2344, size: 64, offset: 64)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curspace", scope: !2341, file: !25, line: 208, baseType: !2344, size: 64, offset: 128)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_rsvspace", scope: !2341, file: !25, line: 209, baseType: !2344, size: 64, offset: 192)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_ihardlimit", scope: !2341, file: !25, line: 210, baseType: !2344, size: 64, offset: 256)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_isoftlimit", scope: !2341, file: !25, line: 211, baseType: !2344, size: 64, offset: 320)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curinodes", scope: !2341, file: !25, line: 212, baseType: !2344, size: 64, offset: 384)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_btime", scope: !2341, file: !25, line: 213, baseType: !598, size: 64, offset: 448)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_itime", scope: !2341, file: !25, line: 214, baseType: !598, size: 64, offset: 512)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_dquot", scope: !2305, file: !25, line: 324, baseType: !2354, size: 64, offset: 64)
!2354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2355, size: 64)
!2355 = !DISubroutineType(types: !2356)
!2356 = !{!2311, !663, !262}
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_dquot", scope: !2305, file: !25, line: 325, baseType: !2358, size: 64, offset: 128)
!2358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2359, size: 64)
!2359 = !DISubroutineType(types: !2360)
!2360 = !{null, !2311}
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "acquire_dquot", scope: !2305, file: !25, line: 326, baseType: !2308, size: 64, offset: 192)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "release_dquot", scope: !2305, file: !25, line: 327, baseType: !2308, size: 64, offset: 256)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "mark_dirty", scope: !2305, file: !25, line: 328, baseType: !2308, size: 64, offset: 320)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "write_info", scope: !2305, file: !25, line: 329, baseType: !754, size: 64, offset: 384)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "get_reserved_space", scope: !2305, file: !25, line: 332, baseType: !2366, size: 64, offset: 448)
!2366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2367, size: 64)
!2367 = !DISubroutineType(types: !2368)
!2368 = !{!2369, !486}
!2369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2344, size: 64)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "get_projid", scope: !2305, file: !25, line: 333, baseType: !2371, size: 64, offset: 512)
!2371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2372, size: 64)
!2372 = !DISubroutineType(types: !2373)
!2373 = !{!262, !486, !2374}
!2374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2331, size: 64)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "get_inode_usage", scope: !2305, file: !25, line: 335, baseType: !2376, size: 64, offset: 576)
!2376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2377, size: 64)
!2377 = !DISubroutineType(types: !2378)
!2378 = !{!262, !486, !2369}
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !2305, file: !25, line: 337, baseType: !2380, size: 64, offset: 640)
!2380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2381, size: 64)
!2381 = !DISubroutineType(types: !2382)
!2382 = !{!262, !663, !2383}
!2383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2323, size: 64)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "s_qcop", scope: !664, file: !31, line: 1425, baseType: !2385, size: 64, offset: 512)
!2385 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2386, size: 64)
!2386 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2387)
!2387 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quotactl_ops", file: !25, line: 428, size: 704, elements: !2388)
!2388 = !{!2389, !2393, !2394, !2398, !2399, !2400, !2415, !2438, !2442, !2443, !2466}
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "quota_on", scope: !2387, file: !25, line: 429, baseType: !2390, size: 64)
!2390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2391, size: 64)
!2391 = !DISubroutineType(types: !2392)
!2392 = !{!262, !663, !262, !262, !607}
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "quota_off", scope: !2387, file: !25, line: 430, baseType: !754, size: 64, offset: 64)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "quota_enable", scope: !2387, file: !25, line: 431, baseType: !2395, size: 64, offset: 128)
!2395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2396, size: 64)
!2396 = !DISubroutineType(types: !2397)
!2397 = !{!262, !663, !7}
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "quota_disable", scope: !2387, file: !25, line: 432, baseType: !2395, size: 64, offset: 192)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "quota_sync", scope: !2387, file: !25, line: 433, baseType: !754, size: 64, offset: 256)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "set_info", scope: !2387, file: !25, line: 434, baseType: !2401, size: 64, offset: 320)
!2401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2402, size: 64)
!2402 = !DISubroutineType(types: !2403)
!2403 = !{!262, !663, !262, !2404}
!2404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2405, size: 64)
!2405 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_info", file: !25, line: 415, size: 256, elements: !2406)
!2406 = !{!2407, !2408, !2409, !2410, !2411, !2412, !2413, !2414}
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "i_fieldmask", scope: !2405, file: !25, line: 416, baseType: !262, size: 32)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !2405, file: !25, line: 417, baseType: !7, size: 32, offset: 32)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_timelimit", scope: !2405, file: !25, line: 418, baseType: !7, size: 32, offset: 64)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_timelimit", scope: !2405, file: !25, line: 420, baseType: !7, size: 32, offset: 96)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_timelimit", scope: !2405, file: !25, line: 421, baseType: !7, size: 32, offset: 128)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_warnlimit", scope: !2405, file: !25, line: 422, baseType: !7, size: 32, offset: 160)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_warnlimit", scope: !2405, file: !25, line: 423, baseType: !7, size: 32, offset: 192)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_warnlimit", scope: !2405, file: !25, line: 424, baseType: !7, size: 32, offset: 224)
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "get_dqblk", scope: !2387, file: !25, line: 435, baseType: !2416, size: 64, offset: 384)
!2416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2417, size: 64)
!2417 = !DISubroutineType(types: !2418)
!2418 = !{!262, !663, !2323, !2419}
!2419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2420, size: 64)
!2420 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_dqblk", file: !25, line: 343, size: 960, elements: !2421)
!2421 = !{!2422, !2423, !2424, !2425, !2426, !2427, !2428, !2429, !2430, !2431, !2432, !2433, !2434, !2435, !2436, !2437}
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "d_fieldmask", scope: !2420, file: !25, line: 344, baseType: !262, size: 32)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_hardlimit", scope: !2420, file: !25, line: 345, baseType: !479, size: 64, offset: 64)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_softlimit", scope: !2420, file: !25, line: 346, baseType: !479, size: 64, offset: 128)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_hardlimit", scope: !2420, file: !25, line: 347, baseType: !479, size: 64, offset: 192)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_softlimit", scope: !2420, file: !25, line: 348, baseType: !479, size: 64, offset: 256)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "d_space", scope: !2420, file: !25, line: 349, baseType: !479, size: 64, offset: 320)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_count", scope: !2420, file: !25, line: 350, baseType: !479, size: 64, offset: 384)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_timer", scope: !2420, file: !25, line: 351, baseType: !389, size: 64, offset: 448)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_timer", scope: !2420, file: !25, line: 353, baseType: !389, size: 64, offset: 512)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_warns", scope: !2420, file: !25, line: 354, baseType: !262, size: 32, offset: 576)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_warns", scope: !2420, file: !25, line: 355, baseType: !262, size: 32, offset: 608)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_hardlimit", scope: !2420, file: !25, line: 356, baseType: !479, size: 64, offset: 640)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_softlimit", scope: !2420, file: !25, line: 357, baseType: !479, size: 64, offset: 704)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_space", scope: !2420, file: !25, line: 358, baseType: !479, size: 64, offset: 768)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_timer", scope: !2420, file: !25, line: 359, baseType: !389, size: 64, offset: 832)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_warns", scope: !2420, file: !25, line: 360, baseType: !262, size: 32, offset: 896)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "get_nextdqblk", scope: !2387, file: !25, line: 436, baseType: !2439, size: 64, offset: 448)
!2439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2440, size: 64)
!2440 = !DISubroutineType(types: !2441)
!2441 = !{!262, !663, !2383, !2419}
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "set_dqblk", scope: !2387, file: !25, line: 438, baseType: !2416, size: 64, offset: 512)
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "get_state", scope: !2387, file: !25, line: 439, baseType: !2444, size: 64, offset: 576)
!2444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2445, size: 64)
!2445 = !DISubroutineType(types: !2446)
!2446 = !{!262, !663, !2447}
!2447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2448, size: 64)
!2448 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_state", file: !25, line: 409, size: 1408, elements: !2449)
!2449 = !{!2450, !2451}
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "s_incoredqs", scope: !2448, file: !25, line: 410, baseType: !7, size: 32)
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "s_state", scope: !2448, file: !25, line: 411, baseType: !2452, size: 1344, offset: 64)
!2452 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2453, size: 1344, elements: !718)
!2453 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_type_state", file: !25, line: 395, size: 448, elements: !2454)
!2454 = !{!2455, !2456, !2457, !2458, !2459, !2460, !2461, !2462, !2463, !2465}
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2453, file: !25, line: 396, baseType: !7, size: 32)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "spc_timelimit", scope: !2453, file: !25, line: 397, baseType: !7, size: 32, offset: 32)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "ino_timelimit", scope: !2453, file: !25, line: 399, baseType: !7, size: 32, offset: 64)
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_timelimit", scope: !2453, file: !25, line: 400, baseType: !7, size: 32, offset: 96)
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "spc_warnlimit", scope: !2453, file: !25, line: 401, baseType: !7, size: 32, offset: 128)
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "ino_warnlimit", scope: !2453, file: !25, line: 402, baseType: !7, size: 32, offset: 160)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_warnlimit", scope: !2453, file: !25, line: 403, baseType: !7, size: 32, offset: 192)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !2453, file: !25, line: 404, baseType: !481, size: 64, offset: 256)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !2453, file: !25, line: 405, baseType: !2464, size: 64, offset: 320)
!2464 = !DIDerivedType(tag: DW_TAG_typedef, name: "blkcnt_t", file: !193, line: 126, baseType: !479)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "nextents", scope: !2453, file: !25, line: 406, baseType: !2464, size: 64, offset: 384)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "rm_xquota", scope: !2387, file: !25, line: 440, baseType: !2395, size: 64, offset: 640)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "s_export_op", scope: !664, file: !31, line: 1426, baseType: !2468, size: 64, offset: 576)
!2468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2469, size: 64)
!2469 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2470)
!2470 = !DICompositeType(tag: DW_TAG_structure_type, name: "export_operations", file: !31, line: 49, flags: DIFlagFwdDecl)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "s_flags", scope: !664, file: !31, line: 1427, baseType: !190, size: 64, offset: 640)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "s_iflags", scope: !664, file: !31, line: 1428, baseType: !190, size: 64, offset: 704)
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "s_magic", scope: !664, file: !31, line: 1429, baseType: !190, size: 64, offset: 768)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "s_root", scope: !664, file: !31, line: 1430, baseType: !443, size: 64, offset: 832)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount", scope: !664, file: !31, line: 1431, baseType: !836, size: 256, offset: 896)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "s_count", scope: !664, file: !31, line: 1432, baseType: !262, size: 32, offset: 1152)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "s_active", scope: !664, file: !31, line: 1433, baseType: !816, size: 32, offset: 1184)
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "s_xattr", scope: !664, file: !31, line: 1437, baseType: !2479, size: 64, offset: 1216)
!2479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2480, size: 64)
!2480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2481, size: 64)
!2481 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2482)
!2482 = !DICompositeType(tag: DW_TAG_structure_type, name: "xattr_handler", file: !31, line: 1437, flags: DIFlagFwdDecl)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "s_roots", scope: !664, file: !31, line: 1449, baseType: !2484, size: 64, offset: 1280)
!2484 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_head", file: !459, line: 34, size: 64, elements: !2485)
!2485 = !{!2486}
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !2484, file: !459, line: 35, baseType: !462, size: 64)
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "s_mounts", scope: !664, file: !31, line: 1450, baseType: !202, size: 128, offset: 1344)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdev", scope: !664, file: !31, line: 1451, baseType: !2489, size: 64, offset: 1472)
!2489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2490, size: 64)
!2490 = !DICompositeType(tag: DW_TAG_structure_type, name: "block_device", file: !31, line: 699, flags: DIFlagFwdDecl)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdi", scope: !664, file: !31, line: 1452, baseType: !1875, size: 64, offset: 1536)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "s_mtd", scope: !664, file: !31, line: 1453, baseType: !2493, size: 64, offset: 1600)
!2493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2494, size: 64)
!2494 = !DICompositeType(tag: DW_TAG_structure_type, name: "mtd_info", file: !31, line: 1453, flags: DIFlagFwdDecl)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "s_instances", scope: !664, file: !31, line: 1454, baseType: !706, size: 128, offset: 1664)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "s_quota_types", scope: !664, file: !31, line: 1455, baseType: !7, size: 32, offset: 1792)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "s_dquot", scope: !664, file: !31, line: 1456, baseType: !2498, size: 2432, offset: 1856)
!2498 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_info", file: !25, line: 518, size: 2432, elements: !2499)
!2499 = !{!2500, !2501, !2502, !2504, !2536}
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2498, file: !25, line: 519, baseType: !7, size: 32)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "dqio_sem", scope: !2498, file: !25, line: 520, baseType: !836, size: 256, offset: 64)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !2498, file: !25, line: 521, baseType: !2503, size: 192, offset: 320)
!2503 = !DICompositeType(tag: DW_TAG_array_type, baseType: !486, size: 192, elements: !718)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !2498, file: !25, line: 522, baseType: !2505, size: 1728, offset: 512)
!2505 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2506, size: 1728, elements: !718)
!2506 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqinfo", file: !25, line: 222, size: 576, elements: !2507)
!2507 = !{!2508, !2528, !2529, !2530, !2531, !2532, !2533, !2534, !2535}
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_format", scope: !2506, file: !25, line: 223, baseType: !2509, size: 64)
!2509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2510, size: 64)
!2510 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_type", file: !25, line: 443, size: 256, elements: !2511)
!2511 = !{!2512, !2513, !2526, !2527}
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "qf_fmt_id", scope: !2510, file: !25, line: 444, baseType: !262, size: 32)
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "qf_ops", scope: !2510, file: !25, line: 445, baseType: !2514, size: 64, offset: 64)
!2514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2515, size: 64)
!2515 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2516)
!2516 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_ops", file: !25, line: 310, size: 512, elements: !2517)
!2517 = !{!2518, !2519, !2520, !2521, !2522, !2523, !2524, !2525}
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "check_quota_file", scope: !2516, file: !25, line: 311, baseType: !754, size: 64)
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "read_file_info", scope: !2516, file: !25, line: 312, baseType: !754, size: 64, offset: 64)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "write_file_info", scope: !2516, file: !25, line: 313, baseType: !754, size: 64, offset: 128)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "free_file_info", scope: !2516, file: !25, line: 314, baseType: !754, size: 64, offset: 192)
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "read_dqblk", scope: !2516, file: !25, line: 315, baseType: !2308, size: 64, offset: 256)
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "commit_dqblk", scope: !2516, file: !25, line: 316, baseType: !2308, size: 64, offset: 320)
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "release_dqblk", scope: !2516, file: !25, line: 317, baseType: !2308, size: 64, offset: 384)
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !2516, file: !25, line: 318, baseType: !2380, size: 64, offset: 448)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "qf_owner", scope: !2510, file: !25, line: 446, baseType: !697, size: 64, offset: 128)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "qf_next", scope: !2510, file: !25, line: 447, baseType: !2509, size: 64, offset: 192)
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_fmt_id", scope: !2506, file: !25, line: 224, baseType: !262, size: 32, offset: 64)
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_dirty_list", scope: !2506, file: !25, line: 226, baseType: !202, size: 128, offset: 128)
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_flags", scope: !2506, file: !25, line: 227, baseType: !190, size: 64, offset: 256)
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_bgrace", scope: !2506, file: !25, line: 228, baseType: !7, size: 32, offset: 320)
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_igrace", scope: !2506, file: !25, line: 229, baseType: !7, size: 32, offset: 352)
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_spc_limit", scope: !2506, file: !25, line: 230, baseType: !2344, size: 64, offset: 384)
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_ino_limit", scope: !2506, file: !25, line: 231, baseType: !2344, size: 64, offset: 448)
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_priv", scope: !2506, file: !25, line: 232, baseType: !191, size: 64, offset: 512)
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2498, file: !25, line: 523, baseType: !2537, size: 192, offset: 2240)
!2537 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2514, size: 192, elements: !718)
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers", scope: !664, file: !31, line: 1458, baseType: !2539, size: 2112, offset: 4288)
!2539 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sb_writers", file: !31, line: 1410, size: 2112, elements: !2540)
!2540 = !{!2541, !2542, !2543}
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !2539, file: !31, line: 1411, baseType: !262, size: 32)
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "wait_unfrozen", scope: !2539, file: !31, line: 1412, baseType: !1432, size: 128, offset: 64)
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "rw_sem", scope: !2539, file: !31, line: 1413, baseType: !2544, size: 1920, offset: 192)
!2544 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2545, size: 1920, elements: !718)
!2545 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_rw_semaphore", file: !2546, line: 12, size: 640, elements: !2547)
!2546 = !DIFile(filename: "./include/linux/percpu-rwsem.h", directory: "/home/lizy2001/genbc/linux")
!2547 = !{!2548, !2556, !2557, !2562, !2563}
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "rss", scope: !2545, file: !2546, line: 13, baseType: !2549, size: 320)
!2549 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcu_sync", file: !2550, line: 17, size: 320, elements: !2551)
!2550 = !DIFile(filename: "./include/linux/rcu_sync.h", directory: "/home/lizy2001/genbc/linux")
!2551 = !{!2552, !2553, !2554, !2555}
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "gp_state", scope: !2549, file: !2550, line: 18, baseType: !262, size: 32)
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "gp_count", scope: !2549, file: !2550, line: 19, baseType: !262, size: 32, offset: 32)
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "gp_wait", scope: !2549, file: !2550, line: 20, baseType: !1432, size: 128, offset: 64)
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "cb_head", scope: !2549, file: !2550, line: 22, baseType: !426, size: 128, align: 64, offset: 192)
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "read_count", scope: !2545, file: !2546, line: 14, baseType: !278, size: 64, offset: 320)
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "writer", scope: !2545, file: !2546, line: 15, baseType: !2558, size: 64, offset: 384)
!2558 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcuwait", file: !2559, line: 16, size: 64, elements: !2560)
!2559 = !DIFile(filename: "./include/linux/rcuwait.h", directory: "/home/lizy2001/genbc/linux")
!2560 = !{!2561}
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !2558, file: !2559, line: 17, baseType: !1172, size: 64)
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "waiters", scope: !2545, file: !2546, line: 16, baseType: !1432, size: 128, offset: 448)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !2545, file: !2546, line: 17, baseType: !816, size: 32, offset: 576)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "s_fs_info", scope: !664, file: !31, line: 1465, baseType: !191, size: 64, offset: 6400)
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_gran", scope: !664, file: !31, line: 1468, baseType: !476, size: 32, offset: 6464)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_min", scope: !664, file: !31, line: 1470, baseType: !598, size: 64, offset: 6528)
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_max", scope: !664, file: !31, line: 1471, baseType: !598, size: 64, offset: 6592)
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_mask", scope: !664, file: !31, line: 1473, baseType: !273, size: 32, offset: 6656)
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_marks", scope: !664, file: !31, line: 1474, baseType: !2570, size: 64, offset: 6720)
!2570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2571, size: 64)
!2571 = !DICompositeType(tag: DW_TAG_structure_type, name: "fsnotify_mark_connector", file: !31, line: 603, flags: DIFlagFwdDecl)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "s_id", scope: !664, file: !31, line: 1477, baseType: !2573, size: 256, offset: 6784)
!2573 = !DICompositeType(tag: DW_TAG_array_type, baseType: !198, size: 256, elements: !276)
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "s_uuid", scope: !664, file: !31, line: 1478, baseType: !2575, size: 128, offset: 7040)
!2575 = !DIDerivedType(tag: DW_TAG_typedef, name: "uuid_t", file: !2576, line: 18, baseType: !2577)
!2576 = !DIFile(filename: "./include/linux/uuid.h", directory: "/home/lizy2001/genbc/linux")
!2577 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2576, line: 16, size: 128, elements: !2578)
!2578 = !{!2579}
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !2577, file: !2576, line: 17, baseType: !2580, size: 128)
!2580 = !DICompositeType(tag: DW_TAG_array_type, baseType: !268, size: 128, elements: !1684)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "s_max_links", scope: !664, file: !31, line: 1480, baseType: !7, size: 32, offset: 7168)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "s_mode", scope: !664, file: !31, line: 1481, baseType: !2583, size: 32, offset: 7200)
!2583 = !DIDerivedType(tag: DW_TAG_typedef, name: "fmode_t", file: !193, line: 150, baseType: !7)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_mutex", scope: !664, file: !31, line: 1487, baseType: !379, size: 192, offset: 7232)
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "s_subtype", scope: !664, file: !31, line: 1493, baseType: !220, size: 64, offset: 7424)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "s_d_op", scope: !664, file: !31, line: 1495, baseType: !2587, size: 64, offset: 7488)
!2587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2588, size: 64)
!2588 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2589)
!2589 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry_operations", file: !441, line: 135, size: 1024, align: 512, elements: !2590)
!2590 = !{!2591, !2595, !2596, !2603, !2609, !2613, !2617, !2621, !2622, !2626, !2630, !2635, !2639}
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "d_revalidate", scope: !2589, file: !441, line: 136, baseType: !2592, size: 64)
!2592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2593, size: 64)
!2593 = !DISubroutineType(types: !2594)
!2594 = !{!262, !443, !7}
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "d_weak_revalidate", scope: !2589, file: !441, line: 137, baseType: !2592, size: 64, offset: 64)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !2589, file: !441, line: 138, baseType: !2597, size: 64, offset: 128)
!2597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2598, size: 64)
!2598 = !DISubroutineType(types: !2599)
!2599 = !{!262, !2600, !2602}
!2600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2601, size: 64)
!2601 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !444)
!2602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !467, size: 64)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "d_compare", scope: !2589, file: !441, line: 139, baseType: !2604, size: 64, offset: 192)
!2604 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2605, size: 64)
!2605 = !DISubroutineType(types: !2606)
!2606 = !{!262, !2600, !7, !220, !2607}
!2607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2608, size: 64)
!2608 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !467)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "d_delete", scope: !2589, file: !441, line: 141, baseType: !2610, size: 64, offset: 256)
!2610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2611, size: 64)
!2611 = !DISubroutineType(types: !2612)
!2612 = !{!262, !2600}
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "d_init", scope: !2589, file: !441, line: 142, baseType: !2614, size: 64, offset: 320)
!2614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2615, size: 64)
!2615 = !DISubroutineType(types: !2616)
!2616 = !{!262, !443}
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "d_release", scope: !2589, file: !441, line: 143, baseType: !2618, size: 64, offset: 384)
!2618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2619, size: 64)
!2619 = !DISubroutineType(types: !2620)
!2620 = !{null, !443}
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "d_prune", scope: !2589, file: !441, line: 144, baseType: !2618, size: 64, offset: 448)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "d_iput", scope: !2589, file: !441, line: 145, baseType: !2623, size: 64, offset: 512)
!2623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2624, size: 64)
!2624 = !DISubroutineType(types: !2625)
!2625 = !{null, !443, !486}
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "d_dname", scope: !2589, file: !441, line: 146, baseType: !2627, size: 64, offset: 576)
!2627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2628, size: 64)
!2628 = !DISubroutineType(types: !2629)
!2629 = !{!545, !443, !545, !262}
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "d_automount", scope: !2589, file: !441, line: 147, baseType: !2631, size: 64, offset: 640)
!2631 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2632, size: 64)
!2632 = !DISubroutineType(types: !2633)
!2633 = !{!439, !2634}
!2634 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !435, size: 64)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "d_manage", scope: !2589, file: !441, line: 148, baseType: !2636, size: 64, offset: 704)
!2636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2637, size: 64)
!2637 = !DISubroutineType(types: !2638)
!2638 = !{!262, !607, !550}
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "d_real", scope: !2589, file: !441, line: 149, baseType: !2640, size: 64, offset: 768)
!2640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2641, size: 64)
!2641 = !DISubroutineType(types: !2642)
!2642 = !{!443, !443, !2643}
!2643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2644, size: 64)
!2644 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !487)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "cleancache_poolid", scope: !664, file: !31, line: 1500, baseType: !262, size: 32, offset: 7552)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "s_shrink", scope: !664, file: !31, line: 1502, baseType: !2647, size: 448, offset: 7616)
!2647 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrinker", file: !2292, line: 60, size: 448, elements: !2648)
!2648 = !{!2649, !2654, !2655, !2656, !2657, !2658, !2659}
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "count_objects", scope: !2647, file: !2292, line: 61, baseType: !2650, size: 64)
!2650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2651, size: 64)
!2651 = !DISubroutineType(types: !2652)
!2652 = !{!190, !2653, !2290}
!2653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2647, size: 64)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "scan_objects", scope: !2647, file: !2292, line: 63, baseType: !2650, size: 64, offset: 64)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !2647, file: !2292, line: 66, baseType: !131, size: 64, offset: 128)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "seeks", scope: !2647, file: !2292, line: 67, baseType: !262, size: 32, offset: 192)
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2647, file: !2292, line: 68, baseType: !7, size: 32, offset: 224)
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2647, file: !2292, line: 71, baseType: !202, size: 128, offset: 256)
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "nr_deferred", scope: !2647, file: !2292, line: 77, baseType: !2660, size: 64, offset: 384)
!2660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !383, size: 64)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "s_remove_count", scope: !664, file: !31, line: 1505, baseType: !383, size: 64, offset: 8064)
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_inode_refs", scope: !664, file: !31, line: 1508, baseType: !383, size: 64, offset: 8128)
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "s_readonly_remount", scope: !664, file: !31, line: 1511, baseType: !262, size: 32, offset: 8192)
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "s_wb_err", scope: !664, file: !31, line: 1514, baseType: !969, size: 32, offset: 8224)
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "s_dio_done_wq", scope: !664, file: !31, line: 1517, baseType: !2666, size: 64, offset: 8256)
!2666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2667, size: 64)
!2667 = !DICompositeType(tag: DW_TAG_structure_type, name: "workqueue_struct", file: !130, line: 18, flags: DIFlagFwdDecl)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "s_pins", scope: !664, file: !31, line: 1518, baseType: !702, size: 64, offset: 8320)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "s_user_ns", scope: !664, file: !31, line: 1525, baseType: !1662, size: 64, offset: 8384)
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "s_dentry_lru", scope: !664, file: !31, line: 1532, baseType: !2671, size: 64, offset: 8448)
!2671 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru", file: !2672, line: 52, size: 64, elements: !2673)
!2672 = !DIFile(filename: "./include/linux/list_lru.h", directory: "/home/lizy2001/genbc/linux")
!2673 = !{!2674}
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2671, file: !2672, line: 53, baseType: !2675, size: 64)
!2675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2676, size: 64)
!2676 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_node", file: !2672, line: 40, size: 256, elements: !2677)
!2677 = !{!2678, !2679, !2684}
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2676, file: !2672, line: 42, baseType: !393)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !2676, file: !2672, line: 44, baseType: !2680, size: 192)
!2680 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_one", file: !2672, line: 28, size: 192, elements: !2681)
!2681 = !{!2682, !2683}
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2680, file: !2672, line: 29, baseType: !202, size: 128)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !2680, file: !2672, line: 31, baseType: !131, size: 64, offset: 128)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !2676, file: !2672, line: 49, baseType: !131, size: 64, offset: 192)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_lru", scope: !664, file: !31, line: 1533, baseType: !2671, size: 64, offset: 8512)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !664, file: !31, line: 1534, baseType: !426, size: 128, align: 64, offset: 8576)
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_work", scope: !664, file: !31, line: 1535, baseType: !1909, size: 256, offset: 8704)
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "s_sync_lock", scope: !664, file: !31, line: 1537, baseType: !379, size: 192, offset: 8960)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "s_stack_depth", scope: !664, file: !31, line: 1542, baseType: !262, size: 32, offset: 9152)
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_list_lock", scope: !664, file: !31, line: 1545, baseType: !393, offset: 9184)
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes", scope: !664, file: !31, line: 1546, baseType: !202, size: 128, offset: 9216)
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_wblist_lock", scope: !664, file: !31, line: 1548, baseType: !393, offset: 9344)
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes_wb", scope: !664, file: !31, line: 1549, baseType: !202, size: 128, offset: 9344)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "i_mapping", scope: !487, file: !31, line: 624, baseType: !803, size: 64, offset: 256)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino", scope: !487, file: !31, line: 631, baseType: !190, size: 64, offset: 320)
!2696 = !DIDerivedType(tag: DW_TAG_member, scope: !487, file: !31, line: 639, baseType: !2697, size: 32, offset: 384)
!2697 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !487, file: !31, line: 639, size: 32, elements: !2698)
!2698 = !{!2699, !2701}
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "i_nlink", scope: !2697, file: !31, line: 640, baseType: !2700, size: 32)
!2700 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "__i_nlink", scope: !2697, file: !31, line: 641, baseType: !7, size: 32)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "i_rdev", scope: !487, file: !31, line: 643, baseType: !573, size: 32, offset: 416)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "i_size", scope: !487, file: !31, line: 644, baseType: !591, size: 64, offset: 448)
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "i_atime", scope: !487, file: !31, line: 645, baseType: !594, size: 128, offset: 512)
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "i_mtime", scope: !487, file: !31, line: 646, baseType: !594, size: 128, offset: 640)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "i_ctime", scope: !487, file: !31, line: 647, baseType: !594, size: 128, offset: 768)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock", scope: !487, file: !31, line: 648, baseType: !393, offset: 896)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "i_bytes", scope: !487, file: !31, line: 649, baseType: !231, size: 16, offset: 896)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "i_blkbits", scope: !487, file: !31, line: 650, baseType: !1307, size: 8, offset: 912)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "i_write_hint", scope: !487, file: !31, line: 651, baseType: !1307, size: 8, offset: 920)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "i_blocks", scope: !487, file: !31, line: 652, baseType: !2464, size: 64, offset: 960)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "i_state", scope: !487, file: !31, line: 659, baseType: !190, size: 64, offset: 1024)
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "i_rwsem", scope: !487, file: !31, line: 660, baseType: !836, size: 256, offset: 1088)
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_when", scope: !487, file: !31, line: 662, baseType: !190, size: 64, offset: 1344)
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_time_when", scope: !487, file: !31, line: 663, baseType: !190, size: 64, offset: 1408)
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "i_hash", scope: !487, file: !31, line: 665, baseType: !706, size: 128, offset: 1472)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "i_io_list", scope: !487, file: !31, line: 666, baseType: !202, size: 128, offset: 1600)
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "i_lru", scope: !487, file: !31, line: 675, baseType: !202, size: 128, offset: 1728)
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb_list", scope: !487, file: !31, line: 676, baseType: !202, size: 128, offset: 1856)
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "i_wb_list", scope: !487, file: !31, line: 677, baseType: !202, size: 128, offset: 1984)
!2721 = !DIDerivedType(tag: DW_TAG_member, scope: !487, file: !31, line: 678, baseType: !2722, size: 128, offset: 2112)
!2722 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !487, file: !31, line: 678, size: 128, elements: !2723)
!2723 = !{!2724, !2725}
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "i_dentry", scope: !2722, file: !31, line: 679, baseType: !702, size: 64)
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "i_rcu", scope: !2722, file: !31, line: 680, baseType: !426, size: 128, align: 64)
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "i_version", scope: !487, file: !31, line: 682, baseType: !385, size: 64, offset: 2240)
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "i_sequence", scope: !487, file: !31, line: 683, baseType: !385, size: 64, offset: 2304)
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !487, file: !31, line: 684, baseType: !816, size: 32, offset: 2368)
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "i_dio_count", scope: !487, file: !31, line: 685, baseType: !816, size: 32, offset: 2400)
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "i_writecount", scope: !487, file: !31, line: 686, baseType: !816, size: 32, offset: 2432)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "i_readcount", scope: !487, file: !31, line: 688, baseType: !816, size: 32, offset: 2464)
!2732 = !DIDerivedType(tag: DW_TAG_member, scope: !487, file: !31, line: 690, baseType: !2733, size: 64, offset: 2496)
!2733 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !487, file: !31, line: 690, size: 64, elements: !2734)
!2734 = !{!2735, !2958}
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "i_fop", scope: !2733, file: !31, line: 691, baseType: !2736, size: 64)
!2736 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2737, size: 64)
!2737 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2738)
!2738 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_operations", file: !31, line: 1822, size: 2048, elements: !2739)
!2739 = !{!2740, !2741, !2745, !2750, !2754, !2755, !2756, !2760, !2773, !2774, !2782, !2786, !2787, !2791, !2792, !2796, !2801, !2802, !2806, !2810, !2918, !2922, !2923, !2927, !2928, !2932, !2936, !2941, !2945, !2949, !2953, !2957}
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2738, file: !31, line: 1823, baseType: !697, size: 64)
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "llseek", scope: !2738, file: !31, line: 1824, baseType: !2742, size: 64, offset: 64)
!2742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2743, size: 64)
!2743 = !DISubroutineType(types: !2744)
!2744 = !{!591, !413, !591, !262}
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !2738, file: !31, line: 1825, baseType: !2746, size: 64, offset: 128)
!2746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2747, size: 64)
!2747 = !DISubroutineType(types: !2748)
!2748 = !{!636, !413, !545, !639, !2749}
!2749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !591, size: 64)
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !2738, file: !31, line: 1826, baseType: !2751, size: 64, offset: 192)
!2751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2752, size: 64)
!2752 = !DISubroutineType(types: !2753)
!2753 = !{!636, !413, !220, !639, !2749}
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "read_iter", scope: !2738, file: !31, line: 1827, baseType: !906, size: 64, offset: 256)
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "write_iter", scope: !2738, file: !31, line: 1828, baseType: !906, size: 64, offset: 320)
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "iopoll", scope: !2738, file: !31, line: 1829, baseType: !2757, size: 64, offset: 384)
!2757 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2758, size: 64)
!2758 = !DISubroutineType(types: !2759)
!2759 = !{!262, !909, !550}
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "iterate", scope: !2738, file: !31, line: 1830, baseType: !2761, size: 64, offset: 448)
!2761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2762, size: 64)
!2762 = !DISubroutineType(types: !2763)
!2763 = !{!262, !413, !2764}
!2764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2765, size: 64)
!2765 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dir_context", file: !31, line: 1776, size: 128, elements: !2766)
!2766 = !{!2767, !2772}
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "actor", scope: !2765, file: !31, line: 1777, baseType: !2768, size: 64)
!2768 = !DIDerivedType(tag: DW_TAG_typedef, name: "filldir_t", file: !31, line: 1773, baseType: !2769)
!2769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2770, size: 64)
!2770 = !DISubroutineType(types: !2771)
!2771 = !{!262, !2764, !220, !262, !591, !479, !7}
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !2765, file: !31, line: 1778, baseType: !591, size: 64, offset: 64)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "iterate_shared", scope: !2738, file: !31, line: 1831, baseType: !2761, size: 64, offset: 512)
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !2738, file: !31, line: 1832, baseType: !2775, size: 64, offset: 576)
!2775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2776, size: 64)
!2776 = !DISubroutineType(types: !2777)
!2777 = !{!2778, !413, !2780}
!2778 = !DIDerivedType(tag: DW_TAG_typedef, name: "__poll_t", file: !2779, line: 52, baseType: !7)
!2779 = !DIFile(filename: "./include/uapi/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!2780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2781, size: 64)
!2781 = !DICompositeType(tag: DW_TAG_structure_type, name: "poll_table_struct", file: !683, line: 27, flags: DIFlagFwdDecl)
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "unlocked_ioctl", scope: !2738, file: !31, line: 1833, baseType: !2783, size: 64, offset: 640)
!2783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2784, size: 64)
!2784 = !DISubroutineType(types: !2785)
!2785 = !{!131, !413, !7, !190}
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !2738, file: !31, line: 1834, baseType: !2783, size: 64, offset: 704)
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !2738, file: !31, line: 1835, baseType: !2788, size: 64, offset: 768)
!2788 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2789, size: 64)
!2789 = !DISubroutineType(types: !2790)
!2790 = !{!262, !413, !1041}
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_supported_flags", scope: !2738, file: !31, line: 1836, baseType: !190, size: 64, offset: 832)
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !2738, file: !31, line: 1837, baseType: !2793, size: 64, offset: 896)
!2793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2794, size: 64)
!2794 = !DISubroutineType(types: !2795)
!2795 = !{!262, !486, !413}
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !2738, file: !31, line: 1838, baseType: !2797, size: 64, offset: 960)
!2797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2798, size: 64)
!2798 = !DISubroutineType(types: !2799)
!2799 = !{!262, !413, !2800}
!2800 = !DIDerivedType(tag: DW_TAG_typedef, name: "fl_owner_t", file: !31, line: 1007, baseType: !191)
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !2738, file: !31, line: 1839, baseType: !2793, size: 64, offset: 1024)
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "fsync", scope: !2738, file: !31, line: 1840, baseType: !2803, size: 64, offset: 1088)
!2803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2804, size: 64)
!2804 = !DISubroutineType(types: !2805)
!2805 = !{!262, !413, !591, !591, !262}
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "fasync", scope: !2738, file: !31, line: 1841, baseType: !2807, size: 64, offset: 1152)
!2807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2808, size: 64)
!2808 = !DISubroutineType(types: !2809)
!2809 = !{!262, !262, !413, !262}
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2738, file: !31, line: 1842, baseType: !2811, size: 64, offset: 1216)
!2811 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2812, size: 64)
!2812 = !DISubroutineType(types: !2813)
!2813 = !{!262, !413, !262, !2814}
!2814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2815, size: 64)
!2815 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock", file: !31, line: 1062, size: 1664, elements: !2816)
!2816 = !{!2817, !2818, !2819, !2820, !2821, !2822, !2823, !2824, !2825, !2826, !2827, !2828, !2829, !2830, !2831, !2848, !2849, !2850, !2863, !2894}
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocker", scope: !2815, file: !31, line: 1063, baseType: !2814, size: 64)
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "fl_list", scope: !2815, file: !31, line: 1064, baseType: !202, size: 128, offset: 64)
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link", scope: !2815, file: !31, line: 1065, baseType: !706, size: 128, offset: 192)
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_requests", scope: !2815, file: !31, line: 1066, baseType: !202, size: 128, offset: 320)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_member", scope: !2815, file: !31, line: 1069, baseType: !202, size: 128, offset: 448)
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "fl_owner", scope: !2815, file: !31, line: 1072, baseType: !2800, size: 64, offset: 576)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "fl_flags", scope: !2815, file: !31, line: 1073, baseType: !7, size: 32, offset: 640)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "fl_type", scope: !2815, file: !31, line: 1074, baseType: !269, size: 8, offset: 672)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "fl_pid", scope: !2815, file: !31, line: 1075, baseType: !7, size: 32, offset: 704)
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link_cpu", scope: !2815, file: !31, line: 1076, baseType: !262, size: 32, offset: 736)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "fl_wait", scope: !2815, file: !31, line: 1077, baseType: !1432, size: 128, offset: 768)
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "fl_file", scope: !2815, file: !31, line: 1078, baseType: !413, size: 64, offset: 896)
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "fl_start", scope: !2815, file: !31, line: 1079, baseType: !591, size: 64, offset: 960)
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "fl_end", scope: !2815, file: !31, line: 1080, baseType: !591, size: 64, offset: 1024)
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "fl_fasync", scope: !2815, file: !31, line: 1082, baseType: !2832, size: 64, offset: 1088)
!2832 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2833, size: 64)
!2833 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fasync_struct", file: !31, line: 1314, size: 320, elements: !2834)
!2834 = !{!2835, !2843, !2844, !2845, !2846, !2847}
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "fa_lock", scope: !2833, file: !31, line: 1315, baseType: !2836)
!2836 = !DIDerivedType(tag: DW_TAG_typedef, name: "rwlock_t", file: !2837, line: 20, baseType: !2838)
!2837 = !DIFile(filename: "./include/linux/rwlock_types.h", directory: "/home/lizy2001/genbc/linux")
!2838 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2837, line: 11, elements: !2839)
!2839 = !{!2840}
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !2838, file: !2837, line: 12, baseType: !2841)
!2841 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_rwlock_t", file: !405, line: 33, baseType: !2842)
!2842 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !405, line: 31, elements: !407)
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !2833, file: !31, line: 1316, baseType: !262, size: 32)
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "fa_fd", scope: !2833, file: !31, line: 1317, baseType: !262, size: 32, offset: 32)
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "fa_next", scope: !2833, file: !31, line: 1318, baseType: !2832, size: 64, offset: 64)
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "fa_file", scope: !2833, file: !31, line: 1319, baseType: !413, size: 64, offset: 128)
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "fa_rcu", scope: !2833, file: !31, line: 1320, baseType: !426, size: 128, align: 64, offset: 192)
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "fl_break_time", scope: !2815, file: !31, line: 1084, baseType: !190, size: 64, offset: 1152)
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "fl_downgrade_time", scope: !2815, file: !31, line: 1085, baseType: !190, size: 64, offset: 1216)
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "fl_ops", scope: !2815, file: !31, line: 1087, baseType: !2851, size: 64, offset: 1280)
!2851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2852, size: 64)
!2852 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2853)
!2853 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_operations", file: !31, line: 1011, size: 128, elements: !2854)
!2854 = !{!2855, !2859}
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "fl_copy_lock", scope: !2853, file: !31, line: 1012, baseType: !2856, size: 64)
!2856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2857, size: 64)
!2857 = !DISubroutineType(types: !2858)
!2858 = !{null, !2814, !2814}
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "fl_release_private", scope: !2853, file: !31, line: 1013, baseType: !2860, size: 64, offset: 64)
!2860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2861, size: 64)
!2861 = !DISubroutineType(types: !2862)
!2862 = !{null, !2814}
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "fl_lmops", scope: !2815, file: !31, line: 1088, baseType: !2864, size: 64, offset: 1344)
!2864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2865, size: 64)
!2865 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2866)
!2866 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_manager_operations", file: !31, line: 1016, size: 512, elements: !2867)
!2867 = !{!2868, !2872, !2876, !2877, !2881, !2885, !2889, !2893}
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "lm_get_owner", scope: !2866, file: !31, line: 1017, baseType: !2869, size: 64)
!2869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2870, size: 64)
!2870 = !DISubroutineType(types: !2871)
!2871 = !{!2800, !2800}
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "lm_put_owner", scope: !2866, file: !31, line: 1018, baseType: !2873, size: 64, offset: 64)
!2873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2874, size: 64)
!2874 = !DISubroutineType(types: !2875)
!2875 = !{null, !2800}
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "lm_notify", scope: !2866, file: !31, line: 1019, baseType: !2860, size: 64, offset: 128)
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "lm_grant", scope: !2866, file: !31, line: 1020, baseType: !2878, size: 64, offset: 192)
!2878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2879, size: 64)
!2879 = !DISubroutineType(types: !2880)
!2880 = !{!262, !2814, !262}
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "lm_break", scope: !2866, file: !31, line: 1021, baseType: !2882, size: 64, offset: 256)
!2882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2883, size: 64)
!2883 = !DISubroutineType(types: !2884)
!2884 = !{!550, !2814}
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "lm_change", scope: !2866, file: !31, line: 1022, baseType: !2886, size: 64, offset: 320)
!2886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2887, size: 64)
!2887 = !DISubroutineType(types: !2888)
!2888 = !{!262, !2814, !262, !201}
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "lm_setup", scope: !2866, file: !31, line: 1023, baseType: !2890, size: 64, offset: 384)
!2890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2891, size: 64)
!2891 = !DISubroutineType(types: !2892)
!2892 = !{null, !2814, !883}
!2893 = !DIDerivedType(tag: DW_TAG_member, name: "lm_breaker_owns_lease", scope: !2866, file: !31, line: 1024, baseType: !2882, size: 64, offset: 448)
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "fl_u", scope: !2815, file: !31, line: 1097, baseType: !2895, size: 256, offset: 1408)
!2895 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2815, file: !31, line: 1089, size: 256, elements: !2896)
!2896 = !{!2897, !2906, !2912}
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "nfs_fl", scope: !2895, file: !31, line: 1090, baseType: !2898, size: 256)
!2898 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs_lock_info", file: !2899, line: 10, size: 256, elements: !2900)
!2899 = !DIFile(filename: "./include/linux/nfs_fs_i.h", directory: "/home/lizy2001/genbc/linux")
!2900 = !{!2901, !2902, !2905}
!2901 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2898, file: !2899, line: 11, baseType: !476, size: 32)
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2898, file: !2899, line: 12, baseType: !2903, size: 64, offset: 64)
!2903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2904, size: 64)
!2904 = !DICompositeType(tag: DW_TAG_structure_type, name: "nlm_lockowner", file: !2899, line: 5, flags: DIFlagFwdDecl)
!2905 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2898, file: !2899, line: 13, baseType: !202, size: 128, offset: 128)
!2906 = !DIDerivedType(tag: DW_TAG_member, name: "nfs4_fl", scope: !2895, file: !31, line: 1091, baseType: !2907, size: 64)
!2907 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_info", file: !2899, line: 17, size: 64, elements: !2908)
!2908 = !{!2909}
!2909 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2907, file: !2899, line: 18, baseType: !2910, size: 64)
!2910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2911, size: 64)
!2911 = !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_state", file: !2899, line: 16, flags: DIFlagFwdDecl)
!2912 = !DIDerivedType(tag: DW_TAG_member, name: "afs", scope: !2895, file: !31, line: 1096, baseType: !2913, size: 192)
!2913 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2895, file: !31, line: 1092, size: 192, elements: !2914)
!2914 = !{!2915, !2916, !2917}
!2915 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !2913, file: !31, line: 1093, baseType: !202, size: 128)
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2913, file: !31, line: 1094, baseType: !262, size: 32, offset: 128)
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "debug_id", scope: !2913, file: !31, line: 1095, baseType: !7, size: 32, offset: 160)
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "sendpage", scope: !2738, file: !31, line: 1843, baseType: !2919, size: 64, offset: 1280)
!2919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2920, size: 64)
!2920 = !DISubroutineType(types: !2921)
!2921 = !{!636, !413, !790, !262, !639, !2749, !262}
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !2738, file: !31, line: 1844, baseType: !1081, size: 64, offset: 1344)
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "check_flags", scope: !2738, file: !31, line: 1845, baseType: !2924, size: 64, offset: 1408)
!2924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2925, size: 64)
!2925 = !DISubroutineType(types: !2926)
!2926 = !{!262, !262}
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "flock", scope: !2738, file: !31, line: 1846, baseType: !2811, size: 64, offset: 1472)
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "splice_write", scope: !2738, file: !31, line: 1847, baseType: !2929, size: 64, offset: 1536)
!2929 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2930, size: 64)
!2930 = !DISubroutineType(types: !2931)
!2931 = !{!636, !2049, !413, !2749, !639, !7}
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "splice_read", scope: !2738, file: !31, line: 1848, baseType: !2933, size: 64, offset: 1600)
!2933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2934, size: 64)
!2934 = !DISubroutineType(types: !2935)
!2935 = !{!636, !413, !2749, !2049, !639, !7}
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "setlease", scope: !2738, file: !31, line: 1849, baseType: !2937, size: 64, offset: 1664)
!2937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2938, size: 64)
!2938 = !DISubroutineType(types: !2939)
!2939 = !{!262, !413, !131, !2940, !883}
!2940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2814, size: 64)
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "fallocate", scope: !2738, file: !31, line: 1850, baseType: !2942, size: 64, offset: 1728)
!2942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2943, size: 64)
!2943 = !DISubroutineType(types: !2944)
!2944 = !{!131, !413, !262, !591, !591}
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "show_fdinfo", scope: !2738, file: !31, line: 1852, baseType: !2946, size: 64, offset: 1792)
!2946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2947, size: 64)
!2947 = !DISubroutineType(types: !2948)
!2948 = !{null, !780, !413}
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "copy_file_range", scope: !2738, file: !31, line: 1856, baseType: !2950, size: 64, offset: 1856)
!2950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2951, size: 64)
!2951 = !DISubroutineType(types: !2952)
!2952 = !{!636, !413, !591, !413, !591, !639, !7}
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "remap_file_range", scope: !2738, file: !31, line: 1858, baseType: !2954, size: 64, offset: 1920)
!2954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2955, size: 64)
!2955 = !DISubroutineType(types: !2956)
!2956 = !{!591, !413, !591, !413, !591, !591, !7}
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "fadvise", scope: !2738, file: !31, line: 1861, baseType: !2803, size: 64, offset: 1984)
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !2733, file: !31, line: 692, baseType: !733, size: 64)
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "i_flctx", scope: !487, file: !31, line: 694, baseType: !2960, size: 64, offset: 2560)
!2960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2961, size: 64)
!2961 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_context", file: !31, line: 1100, size: 384, elements: !2962)
!2962 = !{!2963, !2964, !2965, !2966}
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lock", scope: !2961, file: !31, line: 1101, baseType: !393)
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "flc_flock", scope: !2961, file: !31, line: 1102, baseType: !202, size: 128)
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "flc_posix", scope: !2961, file: !31, line: 1103, baseType: !202, size: 128, offset: 128)
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lease", scope: !2961, file: !31, line: 1104, baseType: !202, size: 128, offset: 256)
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "i_data", scope: !487, file: !31, line: 695, baseType: !804, size: 1216, align: 64, offset: 2624)
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "i_devices", scope: !487, file: !31, line: 696, baseType: !202, size: 128, offset: 3840)
!2969 = !DIDerivedType(tag: DW_TAG_member, scope: !487, file: !31, line: 697, baseType: !2970, size: 64, offset: 3968)
!2970 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !487, file: !31, line: 697, size: 64, elements: !2971)
!2971 = !{!2972, !2973, !2974, !2977, !2978}
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "i_pipe", scope: !2970, file: !31, line: 698, baseType: !2049, size: 64)
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "i_bdev", scope: !2970, file: !31, line: 699, baseType: !2489, size: 64)
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "i_cdev", scope: !2970, file: !31, line: 700, baseType: !2975, size: 64)
!2975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2976, size: 64)
!2976 = !DICompositeType(tag: DW_TAG_structure_type, name: "cdev", file: !31, line: 700, flags: DIFlagFwdDecl)
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "i_link", scope: !2970, file: !31, line: 701, baseType: !545, size: 64)
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "i_dir_seq", scope: !2970, file: !31, line: 702, baseType: !7, size: 32)
!2979 = !DIDerivedType(tag: DW_TAG_member, name: "i_generation", scope: !487, file: !31, line: 705, baseType: !273, size: 32, offset: 4032)
!2980 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_mask", scope: !487, file: !31, line: 708, baseType: !273, size: 32, offset: 4064)
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_marks", scope: !487, file: !31, line: 709, baseType: !2570, size: 64, offset: 4096)
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "i_private", scope: !487, file: !31, line: 720, baseType: !191, size: 64, offset: 4160)
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "d_iname", scope: !444, file: !441, line: 98, baseType: !2984, size: 256, offset: 448)
!2984 = !DICompositeType(tag: DW_TAG_array_type, baseType: !269, size: 256, elements: !276)
!2985 = !DIDerivedType(tag: DW_TAG_member, name: "d_lockref", scope: !444, file: !441, line: 101, baseType: !2986, size: 32, offset: 704)
!2986 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lockref", file: !2987, line: 25, size: 32, elements: !2988)
!2987 = !DIFile(filename: "./include/linux/lockref.h", directory: "/home/lizy2001/genbc/linux")
!2988 = !{!2989}
!2989 = !DIDerivedType(tag: DW_TAG_member, scope: !2986, file: !2987, line: 26, baseType: !2990, size: 32)
!2990 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2986, file: !2987, line: 26, size: 32, elements: !2991)
!2991 = !{!2992}
!2992 = !DIDerivedType(tag: DW_TAG_member, scope: !2990, file: !2987, line: 30, baseType: !2993, size: 32)
!2993 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2990, file: !2987, line: 30, size: 32, elements: !2994)
!2994 = !{!2995, !2996}
!2995 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2993, file: !2987, line: 31, baseType: !393)
!2996 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2993, file: !2987, line: 32, baseType: !262, size: 32)
!2997 = !DIDerivedType(tag: DW_TAG_member, name: "d_op", scope: !444, file: !441, line: 102, baseType: !2587, size: 64, offset: 768)
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "d_sb", scope: !444, file: !441, line: 103, baseType: !663, size: 64, offset: 832)
!2999 = !DIDerivedType(tag: DW_TAG_member, name: "d_time", scope: !444, file: !441, line: 104, baseType: !190, size: 64, offset: 896)
!3000 = !DIDerivedType(tag: DW_TAG_member, name: "d_fsdata", scope: !444, file: !441, line: 105, baseType: !191, size: 64, offset: 960)
!3001 = !DIDerivedType(tag: DW_TAG_member, scope: !444, file: !441, line: 107, baseType: !3002, size: 128, offset: 1024)
!3002 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !444, file: !441, line: 107, size: 128, elements: !3003)
!3003 = !{!3004, !3005}
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "d_lru", scope: !3002, file: !441, line: 108, baseType: !202, size: 128)
!3005 = !DIDerivedType(tag: DW_TAG_member, name: "d_wait", scope: !3002, file: !441, line: 109, baseType: !3006, size: 64)
!3006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1432, size: 64)
!3007 = !DIDerivedType(tag: DW_TAG_member, name: "d_child", scope: !444, file: !441, line: 111, baseType: !202, size: 128, offset: 1152)
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "d_subdirs", scope: !444, file: !441, line: 112, baseType: !202, size: 128, offset: 1280)
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "d_u", scope: !444, file: !441, line: 120, baseType: !3010, size: 128, offset: 1408)
!3010 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !444, file: !441, line: 116, size: 128, elements: !3011)
!3011 = !{!3012, !3013, !3014}
!3012 = !DIDerivedType(tag: DW_TAG_member, name: "d_alias", scope: !3010, file: !441, line: 117, baseType: !706, size: 128)
!3013 = !DIDerivedType(tag: DW_TAG_member, name: "d_in_lookup_hash", scope: !3010, file: !441, line: 118, baseType: !458, size: 128)
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "d_rcu", scope: !3010, file: !441, line: 119, baseType: !426, size: 128, align: 64)
!3015 = !DIDerivedType(tag: DW_TAG_member, name: "f_inode", scope: !414, file: !31, line: 922, baseType: !486, size: 64, offset: 256)
!3016 = !DIDerivedType(tag: DW_TAG_member, name: "f_op", scope: !414, file: !31, line: 923, baseType: !2736, size: 64, offset: 320)
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "f_lock", scope: !414, file: !31, line: 929, baseType: !393, offset: 384)
!3018 = !DIDerivedType(tag: DW_TAG_member, name: "f_write_hint", scope: !414, file: !31, line: 930, baseType: !30, size: 32, offset: 384)
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "f_count", scope: !414, file: !31, line: 931, baseType: !383, size: 64, offset: 448)
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "f_flags", scope: !414, file: !31, line: 932, baseType: !7, size: 32, offset: 512)
!3021 = !DIDerivedType(tag: DW_TAG_member, name: "f_mode", scope: !414, file: !31, line: 933, baseType: !2583, size: 32, offset: 544)
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos_lock", scope: !414, file: !31, line: 934, baseType: !379, size: 192, offset: 576)
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos", scope: !414, file: !31, line: 935, baseType: !591, size: 64, offset: 768)
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "f_owner", scope: !414, file: !31, line: 936, baseType: !3025, size: 192, offset: 832)
!3025 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fown_struct", file: !31, line: 885, size: 192, elements: !3026)
!3026 = !{!3027, !3028, !3029, !3030, !3031, !3032}
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3025, file: !31, line: 886, baseType: !2836)
!3028 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !3025, file: !31, line: 887, baseType: !1422, size: 64)
!3029 = !DIDerivedType(tag: DW_TAG_member, name: "pid_type", scope: !3025, file: !31, line: 888, baseType: !39, size: 32, offset: 64)
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !3025, file: !31, line: 889, baseType: !493, size: 32, offset: 96)
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !3025, file: !31, line: 889, baseType: !493, size: 32, offset: 128)
!3032 = !DIDerivedType(tag: DW_TAG_member, name: "signum", scope: !3025, file: !31, line: 890, baseType: !262, size: 32, offset: 160)
!3033 = !DIDerivedType(tag: DW_TAG_member, name: "f_cred", scope: !414, file: !31, line: 937, baseType: !1498, size: 64, offset: 1024)
!3034 = !DIDerivedType(tag: DW_TAG_member, name: "f_ra", scope: !414, file: !31, line: 938, baseType: !3035, size: 256, offset: 1088)
!3035 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_ra_state", file: !31, line: 896, size: 256, elements: !3036)
!3036 = !{!3037, !3038, !3039, !3040, !3041, !3042}
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3035, file: !31, line: 897, baseType: !190, size: 64)
!3038 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3035, file: !31, line: 898, baseType: !7, size: 32, offset: 64)
!3039 = !DIDerivedType(tag: DW_TAG_member, name: "async_size", scope: !3035, file: !31, line: 899, baseType: !7, size: 32, offset: 96)
!3040 = !DIDerivedType(tag: DW_TAG_member, name: "ra_pages", scope: !3035, file: !31, line: 902, baseType: !7, size: 32, offset: 128)
!3041 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_miss", scope: !3035, file: !31, line: 903, baseType: !7, size: 32, offset: 160)
!3042 = !DIDerivedType(tag: DW_TAG_member, name: "prev_pos", scope: !3035, file: !31, line: 904, baseType: !591, size: 64, offset: 192)
!3043 = !DIDerivedType(tag: DW_TAG_member, name: "f_version", scope: !414, file: !31, line: 940, baseType: !479, size: 64, offset: 1344)
!3044 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !414, file: !31, line: 945, baseType: !191, size: 64, offset: 1408)
!3045 = !DIDerivedType(tag: DW_TAG_member, name: "f_ep_links", scope: !414, file: !31, line: 949, baseType: !202, size: 128, offset: 1472)
!3046 = !DIDerivedType(tag: DW_TAG_member, name: "f_tfile_llink", scope: !414, file: !31, line: 950, baseType: !202, size: 128, offset: 1600)
!3047 = !DIDerivedType(tag: DW_TAG_member, name: "f_mapping", scope: !414, file: !31, line: 952, baseType: !803, size: 64, offset: 1728)
!3048 = !DIDerivedType(tag: DW_TAG_member, name: "f_wb_err", scope: !414, file: !31, line: 953, baseType: !969, size: 32, offset: 1792)
!3049 = !DIDerivedType(tag: DW_TAG_member, name: "f_sb_err", scope: !414, file: !31, line: 954, baseType: !969, size: 32, offset: 1824)
!3050 = !DIDerivedType(tag: DW_TAG_member, name: "poller", scope: !216, file: !217, line: 163, baseType: !3051, size: 64, offset: 2048)
!3051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3052, size: 64)
!3052 = !DICompositeType(tag: DW_TAG_structure_type, name: "input_dev_poller", file: !217, line: 24, flags: DIFlagFwdDecl)
!3053 = !DIDerivedType(tag: DW_TAG_member, name: "repeat_key", scope: !216, file: !217, line: 165, baseType: !7, size: 32, offset: 2112)
!3054 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !216, file: !217, line: 166, baseType: !3055, size: 320, offset: 2176)
!3055 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timer_list", file: !3056, line: 11, size: 320, elements: !3057)
!3056 = !DIFile(filename: "./include/linux/timer.h", directory: "/home/lizy2001/genbc/linux")
!3057 = !{!3058, !3059, !3060, !3065}
!3058 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3055, file: !3056, line: 16, baseType: !706, size: 128)
!3059 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !3055, file: !3056, line: 17, baseType: !190, size: 64, offset: 128)
!3060 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !3055, file: !3056, line: 18, baseType: !3061, size: 64, offset: 192)
!3061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3062, size: 64)
!3062 = !DISubroutineType(types: !3063)
!3063 = !{null, !3064}
!3064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3055, size: 64)
!3065 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3055, file: !3056, line: 19, baseType: !476, size: 32, offset: 256)
!3066 = !DIDerivedType(tag: DW_TAG_member, name: "rep", scope: !216, file: !217, line: 168, baseType: !3067, size: 64, offset: 2496)
!3067 = !DICompositeType(tag: DW_TAG_array_type, baseType: !262, size: 64, elements: !251)
!3068 = !DIDerivedType(tag: DW_TAG_member, name: "mt", scope: !216, file: !217, line: 170, baseType: !3069, size: 64, offset: 2560)
!3069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3070, size: 64)
!3070 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "input_mt", file: !3071, line: 43, size: 256, elements: !3072)
!3071 = !DIFile(filename: "./include/linux/input/mt.h", directory: "/home/lizy2001/genbc/linux")
!3072 = !{!3073, !3074, !3075, !3076, !3077, !3078, !3079}
!3073 = !DIDerivedType(tag: DW_TAG_member, name: "trkid", scope: !3070, file: !3071, line: 44, baseType: !262, size: 32)
!3074 = !DIDerivedType(tag: DW_TAG_member, name: "num_slots", scope: !3070, file: !3071, line: 45, baseType: !262, size: 32, offset: 32)
!3075 = !DIDerivedType(tag: DW_TAG_member, name: "slot", scope: !3070, file: !3071, line: 46, baseType: !262, size: 32, offset: 64)
!3076 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3070, file: !3071, line: 47, baseType: !7, size: 32, offset: 96)
!3077 = !DIDerivedType(tag: DW_TAG_member, name: "frame", scope: !3070, file: !3071, line: 48, baseType: !7, size: 32, offset: 128)
!3078 = !DIDerivedType(tag: DW_TAG_member, name: "red", scope: !3070, file: !3071, line: 49, baseType: !774, size: 64, offset: 192)
!3079 = !DIDerivedType(tag: DW_TAG_member, name: "slots", scope: !3070, file: !3071, line: 50, baseType: !3080, offset: 256)
!3080 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3081, elements: !2266)
!3081 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "input_mt_slot", file: !3071, line: 27, size: 512, elements: !3082)
!3082 = !{!3083, !3087, !3088}
!3083 = !DIDerivedType(tag: DW_TAG_member, name: "abs", scope: !3081, file: !3071, line: 28, baseType: !3084, size: 448)
!3084 = !DICompositeType(tag: DW_TAG_array_type, baseType: !262, size: 448, elements: !3085)
!3085 = !{!3086}
!3086 = !DISubrange(count: 14)
!3087 = !DIDerivedType(tag: DW_TAG_member, name: "frame", scope: !3081, file: !3071, line: 29, baseType: !7, size: 32, offset: 448)
!3088 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !3081, file: !3071, line: 30, baseType: !7, size: 32, offset: 480)
!3089 = !DIDerivedType(tag: DW_TAG_member, name: "absinfo", scope: !216, file: !217, line: 172, baseType: !3090, size: 64, offset: 2624)
!3090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3091, size: 64)
!3091 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "input_absinfo", file: !226, line: 90, size: 192, elements: !3092)
!3092 = !{!3093, !3094, !3095, !3096, !3097, !3098}
!3093 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !3091, file: !226, line: 91, baseType: !1396, size: 32)
!3094 = !DIDerivedType(tag: DW_TAG_member, name: "minimum", scope: !3091, file: !226, line: 92, baseType: !1396, size: 32, offset: 32)
!3095 = !DIDerivedType(tag: DW_TAG_member, name: "maximum", scope: !3091, file: !226, line: 93, baseType: !1396, size: 32, offset: 64)
!3096 = !DIDerivedType(tag: DW_TAG_member, name: "fuzz", scope: !3091, file: !226, line: 94, baseType: !1396, size: 32, offset: 96)
!3097 = !DIDerivedType(tag: DW_TAG_member, name: "flat", scope: !3091, file: !226, line: 95, baseType: !1396, size: 32, offset: 128)
!3098 = !DIDerivedType(tag: DW_TAG_member, name: "resolution", scope: !3091, file: !226, line: 96, baseType: !1396, size: 32, offset: 160)
!3099 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !216, file: !217, line: 174, baseType: !241, size: 768, offset: 2688)
!3100 = !DIDerivedType(tag: DW_TAG_member, name: "led", scope: !216, file: !217, line: 175, baseType: !236, size: 64, offset: 3456)
!3101 = !DIDerivedType(tag: DW_TAG_member, name: "snd", scope: !216, file: !217, line: 176, baseType: !236, size: 64, offset: 3520)
!3102 = !DIDerivedType(tag: DW_TAG_member, name: "sw", scope: !216, file: !217, line: 177, baseType: !236, size: 64, offset: 3584)
!3103 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !216, file: !217, line: 179, baseType: !3104, size: 64, offset: 3648)
!3104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3105, size: 64)
!3105 = !DISubroutineType(types: !3106)
!3106 = !{!262, !215}
!3107 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !216, file: !217, line: 180, baseType: !3108, size: 64, offset: 3712)
!3108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3109, size: 64)
!3109 = !DISubroutineType(types: !3110)
!3110 = !{null, !215}
!3111 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !216, file: !217, line: 181, baseType: !3112, size: 64, offset: 3776)
!3112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3113, size: 64)
!3113 = !DISubroutineType(types: !3114)
!3114 = !{!262, !215, !413}
!3115 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !216, file: !217, line: 182, baseType: !3116, size: 64, offset: 3840)
!3116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3117, size: 64)
!3117 = !DISubroutineType(types: !3118)
!3118 = !{!262, !215, !7, !7, !262}
!3119 = !DIDerivedType(tag: DW_TAG_member, name: "grab", scope: !216, file: !217, line: 184, baseType: !3120, size: 64, offset: 3904)
!3120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3121, size: 64)
!3121 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "input_handle", file: !217, line: 337, size: 576, elements: !3122)
!3122 = !{!3123, !3124, !3125, !3126, !3127, !3195, !3196}
!3123 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !3121, file: !217, line: 339, baseType: !191, size: 64)
!3124 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !3121, file: !217, line: 341, baseType: !262, size: 32, offset: 64)
!3125 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3121, file: !217, line: 342, baseType: !220, size: 64, offset: 128)
!3126 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3121, file: !217, line: 344, baseType: !215, size: 64, offset: 192)
!3127 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !3121, file: !217, line: 345, baseType: !3128, size: 64, offset: 256)
!3128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3129, size: 64)
!3129 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "input_handler", file: !217, line: 302, size: 960, elements: !3130)
!3130 = !{!3131, !3132, !3136, !3147, !3151, !3155, !3184, !3188, !3189, !3190, !3191, !3192, !3193, !3194}
!3131 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !3129, file: !217, line: 304, baseType: !191, size: 64)
!3132 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !3129, file: !217, line: 306, baseType: !3133, size: 64, offset: 64)
!3133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3134, size: 64)
!3134 = !DISubroutineType(types: !3135)
!3135 = !{null, !3120, !7, !7, !262}
!3136 = !DIDerivedType(tag: DW_TAG_member, name: "events", scope: !3129, file: !217, line: 307, baseType: !3137, size: 64, offset: 128)
!3137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3138, size: 64)
!3138 = !DISubroutineType(types: !3139)
!3139 = !{null, !3120, !3140, !7}
!3140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3141, size: 64)
!3141 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3142)
!3142 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "input_value", file: !217, line: 32, size: 64, elements: !3143)
!3143 = !{!3144, !3145, !3146}
!3144 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3142, file: !217, line: 33, baseType: !229, size: 16)
!3145 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !3142, file: !217, line: 34, baseType: !229, size: 16, offset: 16)
!3146 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !3142, file: !217, line: 35, baseType: !1396, size: 32, offset: 32)
!3147 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !3129, file: !217, line: 309, baseType: !3148, size: 64, offset: 192)
!3148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3149, size: 64)
!3149 = !DISubroutineType(types: !3150)
!3150 = !{!550, !3120, !7, !7, !262}
!3151 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !3129, file: !217, line: 310, baseType: !3152, size: 64, offset: 256)
!3152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3153, size: 64)
!3153 = !DISubroutineType(types: !3154)
!3154 = !{!550, !3128, !215}
!3155 = !DIDerivedType(tag: DW_TAG_member, name: "connect", scope: !3129, file: !217, line: 311, baseType: !3156, size: 64, offset: 320)
!3156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3157, size: 64)
!3157 = !DISubroutineType(types: !3158)
!3158 = !{!262, !3128, !215, !3159}
!3159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3160, size: 64)
!3160 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3161)
!3161 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "input_device_id", file: !3162, line: 342, size: 1600, elements: !3163)
!3162 = !DIFile(filename: "./include/linux/mod_devicetable.h", directory: "/home/lizy2001/genbc/linux")
!3163 = !{!3164, !3166, !3167, !3168, !3169, !3170, !3172, !3174, !3175, !3176, !3177, !3178, !3179, !3181, !3182, !3183}
!3164 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3161, file: !3162, line: 344, baseType: !3165, size: 64)
!3165 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_ulong_t", file: !3162, line: 14, baseType: !190)
!3166 = !DIDerivedType(tag: DW_TAG_member, name: "bustype", scope: !3161, file: !3162, line: 346, baseType: !229, size: 16, offset: 64)
!3167 = !DIDerivedType(tag: DW_TAG_member, name: "vendor", scope: !3161, file: !3162, line: 347, baseType: !229, size: 16, offset: 80)
!3168 = !DIDerivedType(tag: DW_TAG_member, name: "product", scope: !3161, file: !3162, line: 348, baseType: !229, size: 16, offset: 96)
!3169 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !3161, file: !3162, line: 349, baseType: !229, size: 16, offset: 112)
!3170 = !DIDerivedType(tag: DW_TAG_member, name: "evbit", scope: !3161, file: !3162, line: 351, baseType: !3171, size: 64, offset: 128)
!3171 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3165, size: 64, elements: !237)
!3172 = !DIDerivedType(tag: DW_TAG_member, name: "keybit", scope: !3161, file: !3162, line: 352, baseType: !3173, size: 768, offset: 192)
!3173 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3165, size: 768, elements: !242)
!3174 = !DIDerivedType(tag: DW_TAG_member, name: "relbit", scope: !3161, file: !3162, line: 353, baseType: !3171, size: 64, offset: 960)
!3175 = !DIDerivedType(tag: DW_TAG_member, name: "absbit", scope: !3161, file: !3162, line: 354, baseType: !3171, size: 64, offset: 1024)
!3176 = !DIDerivedType(tag: DW_TAG_member, name: "mscbit", scope: !3161, file: !3162, line: 355, baseType: !3171, size: 64, offset: 1088)
!3177 = !DIDerivedType(tag: DW_TAG_member, name: "ledbit", scope: !3161, file: !3162, line: 356, baseType: !3171, size: 64, offset: 1152)
!3178 = !DIDerivedType(tag: DW_TAG_member, name: "sndbit", scope: !3161, file: !3162, line: 357, baseType: !3171, size: 64, offset: 1216)
!3179 = !DIDerivedType(tag: DW_TAG_member, name: "ffbit", scope: !3161, file: !3162, line: 358, baseType: !3180, size: 128, offset: 1280)
!3180 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3165, size: 128, elements: !251)
!3181 = !DIDerivedType(tag: DW_TAG_member, name: "swbit", scope: !3161, file: !3162, line: 359, baseType: !3171, size: 64, offset: 1408)
!3182 = !DIDerivedType(tag: DW_TAG_member, name: "propbit", scope: !3161, file: !3162, line: 360, baseType: !3171, size: 64, offset: 1472)
!3183 = !DIDerivedType(tag: DW_TAG_member, name: "driver_info", scope: !3161, file: !3162, line: 362, baseType: !3165, size: 64, offset: 1536)
!3184 = !DIDerivedType(tag: DW_TAG_member, name: "disconnect", scope: !3129, file: !217, line: 312, baseType: !3185, size: 64, offset: 384)
!3185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3186, size: 64)
!3186 = !DISubroutineType(types: !3187)
!3187 = !{null, !3120}
!3188 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3129, file: !217, line: 313, baseType: !3185, size: 64, offset: 448)
!3189 = !DIDerivedType(tag: DW_TAG_member, name: "legacy_minors", scope: !3129, file: !217, line: 315, baseType: !550, size: 8, offset: 512)
!3190 = !DIDerivedType(tag: DW_TAG_member, name: "minor", scope: !3129, file: !217, line: 316, baseType: !262, size: 32, offset: 544)
!3191 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3129, file: !217, line: 317, baseType: !220, size: 64, offset: 576)
!3192 = !DIDerivedType(tag: DW_TAG_member, name: "id_table", scope: !3129, file: !217, line: 319, baseType: !3159, size: 64, offset: 640)
!3193 = !DIDerivedType(tag: DW_TAG_member, name: "h_list", scope: !3129, file: !217, line: 321, baseType: !202, size: 128, offset: 704)
!3194 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3129, file: !217, line: 322, baseType: !202, size: 128, offset: 832)
!3195 = !DIDerivedType(tag: DW_TAG_member, name: "d_node", scope: !3121, file: !217, line: 347, baseType: !202, size: 128, offset: 320)
!3196 = !DIDerivedType(tag: DW_TAG_member, name: "h_node", scope: !3121, file: !217, line: 348, baseType: !202, size: 128, offset: 448)
!3197 = !DIDerivedType(tag: DW_TAG_member, name: "event_lock", scope: !216, file: !217, line: 186, baseType: !393, offset: 3968)
!3198 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !216, file: !217, line: 187, baseType: !379, size: 192, offset: 3968)
!3199 = !DIDerivedType(tag: DW_TAG_member, name: "users", scope: !216, file: !217, line: 189, baseType: !7, size: 32, offset: 4160)
!3200 = !DIDerivedType(tag: DW_TAG_member, name: "going_away", scope: !216, file: !217, line: 190, baseType: !550, size: 8, offset: 4192)
!3201 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !216, file: !217, line: 192, baseType: !3202, size: 5568, offset: 4224)
!3202 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !60, line: 461, size: 5568, elements: !3203)
!3203 = !{!3204, !3503, !3505, !3508, !3509, !3560, !3649, !3650, !3651, !3652, !3653, !3662, !3756, !3769, !3772, !3773, !3777, !3779, !3780, !3781, !3785, !3791, !3792, !3795, !3799, !3802, !3803, !3804, !3805, !3806, !3838, !3839, !3840, !3843, !3846, !3847, !3848, !3849}
!3204 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !3202, file: !60, line: 462, baseType: !3205, size: 512)
!3205 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobject", file: !3206, line: 64, size: 512, elements: !3207)
!3206 = !DIFile(filename: "./include/linux/kobject.h", directory: "/home/lizy2001/genbc/linux")
!3207 = !{!3208, !3209, !3210, !3212, !3252, !3354, !3493, !3498, !3499, !3500, !3501, !3502}
!3208 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3205, file: !3206, line: 65, baseType: !220, size: 64)
!3209 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3205, file: !3206, line: 66, baseType: !202, size: 128, offset: 64)
!3210 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3205, file: !3206, line: 67, baseType: !3211, size: 64, offset: 192)
!3211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3205, size: 64)
!3212 = !DIDerivedType(tag: DW_TAG_member, name: "kset", scope: !3205, file: !3206, line: 68, baseType: !3213, size: 64, offset: 256)
!3213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3214, size: 64)
!3214 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset", file: !3206, line: 192, size: 704, elements: !3215)
!3215 = !{!3216, !3217, !3218, !3219}
!3216 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3214, file: !3206, line: 193, baseType: !202, size: 128)
!3217 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !3214, file: !3206, line: 194, baseType: !393, offset: 128)
!3218 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !3214, file: !3206, line: 195, baseType: !3205, size: 512, offset: 128)
!3219 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_ops", scope: !3214, file: !3206, line: 196, baseType: !3220, size: 64, offset: 640)
!3220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3221, size: 64)
!3221 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3222)
!3222 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset_uevent_ops", file: !3206, line: 156, size: 192, elements: !3223)
!3223 = !{!3224, !3229, !3234}
!3224 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !3222, file: !3206, line: 157, baseType: !3225, size: 64)
!3225 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3226)
!3226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3227, size: 64)
!3227 = !DISubroutineType(types: !3228)
!3228 = !{!262, !3213, !3211}
!3229 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3222, file: !3206, line: 158, baseType: !3230, size: 64, offset: 64)
!3230 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3231)
!3231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3232, size: 64)
!3232 = !DISubroutineType(types: !3233)
!3233 = !{!220, !3213, !3211}
!3234 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !3222, file: !3206, line: 159, baseType: !3235, size: 64, offset: 128)
!3235 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3236)
!3236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3237, size: 64)
!3237 = !DISubroutineType(types: !3238)
!3238 = !{!262, !3213, !3211, !3239}
!3239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3240, size: 64)
!3240 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_uevent_env", file: !3206, line: 148, size: 20736, elements: !3241)
!3241 = !{!3242, !3244, !3246, !3247, !3251}
!3242 = !DIDerivedType(tag: DW_TAG_member, name: "argv", scope: !3240, file: !3206, line: 149, baseType: !3243, size: 192)
!3243 = !DICompositeType(tag: DW_TAG_array_type, baseType: !545, size: 192, elements: !718)
!3244 = !DIDerivedType(tag: DW_TAG_member, name: "envp", scope: !3240, file: !3206, line: 150, baseType: !3245, size: 4096, offset: 192)
!3245 = !DICompositeType(tag: DW_TAG_array_type, baseType: !545, size: 4096, elements: !1831)
!3246 = !DIDerivedType(tag: DW_TAG_member, name: "envp_idx", scope: !3240, file: !3206, line: 151, baseType: !262, size: 32, offset: 4288)
!3247 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !3240, file: !3206, line: 152, baseType: !3248, size: 16384, offset: 4320)
!3248 = !DICompositeType(tag: DW_TAG_array_type, baseType: !198, size: 16384, elements: !3249)
!3249 = !{!3250}
!3250 = !DISubrange(count: 2048)
!3251 = !DIDerivedType(tag: DW_TAG_member, name: "buflen", scope: !3240, file: !3206, line: 153, baseType: !262, size: 32, offset: 20704)
!3252 = !DIDerivedType(tag: DW_TAG_member, name: "ktype", scope: !3205, file: !3206, line: 69, baseType: !3253, size: 64, offset: 320)
!3253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3254, size: 64)
!3254 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_type", file: !3206, line: 138, size: 448, elements: !3255)
!3255 = !{!3256, !3260, !3279, !3281, !3314, !3344, !3348}
!3256 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3254, file: !3206, line: 139, baseType: !3257, size: 64)
!3257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3258, size: 64)
!3258 = !DISubroutineType(types: !3259)
!3259 = !{null, !3211}
!3260 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_ops", scope: !3254, file: !3206, line: 140, baseType: !3261, size: 64, offset: 64)
!3261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3262, size: 64)
!3262 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3263)
!3263 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sysfs_ops", file: !3264, line: 230, size: 128, elements: !3265)
!3264 = !DIFile(filename: "./include/linux/sysfs.h", directory: "/home/lizy2001/genbc/linux")
!3265 = !{!3266, !3275}
!3266 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !3263, file: !3264, line: 231, baseType: !3267, size: 64)
!3267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3268, size: 64)
!3268 = !DISubroutineType(types: !3269)
!3269 = !{!636, !3211, !3270, !545}
!3270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3271, size: 64)
!3271 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute", file: !3264, line: 30, size: 128, elements: !3272)
!3272 = !{!3273, !3274}
!3273 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3271, file: !3264, line: 31, baseType: !220, size: 64)
!3274 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3271, file: !3264, line: 32, baseType: !490, size: 16, offset: 64)
!3275 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !3263, file: !3264, line: 232, baseType: !3276, size: 64, offset: 64)
!3276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3277, size: 64)
!3277 = !DISubroutineType(types: !3278)
!3278 = !{!636, !3211, !3270, !220, !639}
!3279 = !DIDerivedType(tag: DW_TAG_member, name: "default_attrs", scope: !3254, file: !3206, line: 141, baseType: !3280, size: 64, offset: 128)
!3280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3270, size: 64)
!3281 = !DIDerivedType(tag: DW_TAG_member, name: "default_groups", scope: !3254, file: !3206, line: 142, baseType: !3282, size: 64, offset: 192)
!3282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3283, size: 64)
!3283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3284, size: 64)
!3284 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3285)
!3285 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute_group", file: !3264, line: 84, size: 320, elements: !3286)
!3286 = !{!3287, !3288, !3292, !3311, !3312}
!3287 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3285, file: !3264, line: 85, baseType: !220, size: 64)
!3288 = !DIDerivedType(tag: DW_TAG_member, name: "is_visible", scope: !3285, file: !3264, line: 86, baseType: !3289, size: 64, offset: 64)
!3289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3290, size: 64)
!3290 = !DISubroutineType(types: !3291)
!3291 = !{!490, !3211, !3270, !262}
!3292 = !DIDerivedType(tag: DW_TAG_member, name: "is_bin_visible", scope: !3285, file: !3264, line: 88, baseType: !3293, size: 64, offset: 128)
!3293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3294, size: 64)
!3294 = !DISubroutineType(types: !3295)
!3295 = !{!490, !3211, !3296, !262}
!3296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3297, size: 64)
!3297 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bin_attribute", file: !3264, line: 168, size: 448, elements: !3298)
!3298 = !{!3299, !3300, !3301, !3302, !3306, !3307}
!3299 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !3297, file: !3264, line: 169, baseType: !3271, size: 128)
!3300 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3297, file: !3264, line: 170, baseType: !639, size: 64, offset: 128)
!3301 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !3297, file: !3264, line: 171, baseType: !191, size: 64, offset: 192)
!3302 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !3297, file: !3264, line: 172, baseType: !3303, size: 64, offset: 256)
!3303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3304, size: 64)
!3304 = !DISubroutineType(types: !3305)
!3305 = !{!636, !413, !3211, !3296, !545, !591, !639}
!3306 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !3297, file: !3264, line: 174, baseType: !3303, size: 64, offset: 320)
!3307 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !3297, file: !3264, line: 176, baseType: !3308, size: 64, offset: 384)
!3308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3309, size: 64)
!3309 = !DISubroutineType(types: !3310)
!3310 = !{!262, !413, !3211, !3296, !1041}
!3311 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", scope: !3285, file: !3264, line: 90, baseType: !3280, size: 64, offset: 192)
!3312 = !DIDerivedType(tag: DW_TAG_member, name: "bin_attrs", scope: !3285, file: !3264, line: 91, baseType: !3313, size: 64, offset: 256)
!3313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3296, size: 64)
!3314 = !DIDerivedType(tag: DW_TAG_member, name: "child_ns_type", scope: !3254, file: !3206, line: 143, baseType: !3315, size: 64, offset: 256)
!3315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3316, size: 64)
!3316 = !DISubroutineType(types: !3317)
!3317 = !{!3318, !3211}
!3318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3319, size: 64)
!3319 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3320)
!3320 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_ns_type_operations", file: !48, line: 39, size: 384, elements: !3321)
!3321 = !{!3322, !3323, !3327, !3331, !3339, !3343}
!3322 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3320, file: !48, line: 40, baseType: !47, size: 32)
!3323 = !DIDerivedType(tag: DW_TAG_member, name: "current_may_mount", scope: !3320, file: !48, line: 41, baseType: !3324, size: 64, offset: 64)
!3324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3325, size: 64)
!3325 = !DISubroutineType(types: !3326)
!3326 = !{!550}
!3327 = !DIDerivedType(tag: DW_TAG_member, name: "grab_current_ns", scope: !3320, file: !48, line: 42, baseType: !3328, size: 64, offset: 128)
!3328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3329, size: 64)
!3329 = !DISubroutineType(types: !3330)
!3330 = !{!191}
!3331 = !DIDerivedType(tag: DW_TAG_member, name: "netlink_ns", scope: !3320, file: !48, line: 43, baseType: !3332, size: 64, offset: 192)
!3332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3333, size: 64)
!3333 = !DISubroutineType(types: !3334)
!3334 = !{!3335, !3337}
!3335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3336, size: 64)
!3336 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!3337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3338, size: 64)
!3338 = !DICompositeType(tag: DW_TAG_structure_type, name: "sock", file: !48, line: 19, flags: DIFlagFwdDecl)
!3339 = !DIDerivedType(tag: DW_TAG_member, name: "initial_ns", scope: !3320, file: !48, line: 44, baseType: !3340, size: 64, offset: 256)
!3340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3341, size: 64)
!3341 = !DISubroutineType(types: !3342)
!3342 = !{!3335}
!3343 = !DIDerivedType(tag: DW_TAG_member, name: "drop_ns", scope: !3320, file: !48, line: 45, baseType: !527, size: 64, offset: 320)
!3344 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !3254, file: !3206, line: 144, baseType: !3345, size: 64, offset: 320)
!3345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3346, size: 64)
!3346 = !DISubroutineType(types: !3347)
!3347 = !{!3335, !3211}
!3348 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !3254, file: !3206, line: 145, baseType: !3349, size: 64, offset: 384)
!3349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3350, size: 64)
!3350 = !DISubroutineType(types: !3351)
!3351 = !{null, !3211, !3352, !3353}
!3352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !493, size: 64)
!3353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !502, size: 64)
!3354 = !DIDerivedType(tag: DW_TAG_member, name: "sd", scope: !3205, file: !3206, line: 70, baseType: !3355, size: 64, offset: 384)
!3355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3356, size: 64)
!3356 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_node", file: !683, line: 123, size: 1024, elements: !3357)
!3357 = !{!3358, !3359, !3360, !3361, !3362, !3363, !3364, !3365, !3486, !3487, !3488, !3489, !3490}
!3358 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3356, file: !683, line: 124, baseType: !816, size: 32)
!3359 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !3356, file: !683, line: 125, baseType: !816, size: 32, offset: 32)
!3360 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3356, file: !683, line: 135, baseType: !3355, size: 64, offset: 64)
!3361 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3356, file: !683, line: 136, baseType: !220, size: 64, offset: 128)
!3362 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !3356, file: !683, line: 138, baseType: !829, size: 192, align: 64, offset: 192)
!3363 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !3356, file: !683, line: 140, baseType: !3335, size: 64, offset: 384)
!3364 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !3356, file: !683, line: 141, baseType: !7, size: 32, offset: 448)
!3365 = !DIDerivedType(tag: DW_TAG_member, scope: !3356, file: !683, line: 142, baseType: !3366, size: 256, offset: 512)
!3366 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3356, file: !683, line: 142, size: 256, elements: !3367)
!3367 = !{!3368, !3414, !3418}
!3368 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !3366, file: !683, line: 143, baseType: !3369, size: 192)
!3369 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_dir", file: !683, line: 91, size: 192, elements: !3370)
!3370 = !{!3371, !3372, !3373}
!3371 = !DIDerivedType(tag: DW_TAG_member, name: "subdirs", scope: !3369, file: !683, line: 92, baseType: !190, size: 64)
!3372 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3369, file: !683, line: 94, baseType: !825, size: 64, offset: 64)
!3373 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !3369, file: !683, line: 100, baseType: !3374, size: 64, offset: 128)
!3374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3375, size: 64)
!3375 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_root", file: !683, line: 180, size: 704, elements: !3376)
!3376 = !{!3377, !3378, !3379, !3386, !3387, !3388, !3412, !3413}
!3377 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !3375, file: !683, line: 182, baseType: !3355, size: 64)
!3378 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3375, file: !683, line: 183, baseType: !7, size: 32, offset: 64)
!3379 = !DIDerivedType(tag: DW_TAG_member, name: "ino_idr", scope: !3375, file: !683, line: 186, baseType: !3380, size: 192, offset: 128)
!3380 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "idr", file: !3381, line: 19, size: 192, elements: !3382)
!3381 = !DIFile(filename: "./include/linux/idr.h", directory: "/home/lizy2001/genbc/linux")
!3382 = !{!3383, !3384, !3385}
!3383 = !DIDerivedType(tag: DW_TAG_member, name: "idr_rt", scope: !3380, file: !3381, line: 20, baseType: !808, size: 128)
!3384 = !DIDerivedType(tag: DW_TAG_member, name: "idr_base", scope: !3380, file: !3381, line: 21, baseType: !7, size: 32, offset: 128)
!3385 = !DIDerivedType(tag: DW_TAG_member, name: "idr_next", scope: !3380, file: !3381, line: 22, baseType: !7, size: 32, offset: 160)
!3386 = !DIDerivedType(tag: DW_TAG_member, name: "last_id_lowbits", scope: !3375, file: !683, line: 187, baseType: !476, size: 32, offset: 320)
!3387 = !DIDerivedType(tag: DW_TAG_member, name: "id_highbits", scope: !3375, file: !683, line: 188, baseType: !476, size: 32, offset: 352)
!3388 = !DIDerivedType(tag: DW_TAG_member, name: "syscall_ops", scope: !3375, file: !683, line: 189, baseType: !3389, size: 64, offset: 384)
!3389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3390, size: 64)
!3390 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_syscall_ops", file: !683, line: 168, size: 320, elements: !3391)
!3391 = !{!3392, !3396, !3400, !3404, !3408}
!3392 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !3390, file: !683, line: 169, baseType: !3393, size: 64)
!3393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3394, size: 64)
!3394 = !DISubroutineType(types: !3395)
!3395 = !{!262, !780, !3374}
!3396 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !3390, file: !683, line: 171, baseType: !3397, size: 64, offset: 64)
!3397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3398, size: 64)
!3398 = !DISubroutineType(types: !3399)
!3399 = !{!262, !3355, !220, !490}
!3400 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !3390, file: !683, line: 173, baseType: !3401, size: 64, offset: 128)
!3401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3402, size: 64)
!3402 = !DISubroutineType(types: !3403)
!3403 = !{!262, !3355}
!3404 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !3390, file: !683, line: 174, baseType: !3405, size: 64, offset: 192)
!3405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3406, size: 64)
!3406 = !DISubroutineType(types: !3407)
!3407 = !{!262, !3355, !3355, !220}
!3408 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !3390, file: !683, line: 176, baseType: !3409, size: 64, offset: 256)
!3409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3410, size: 64)
!3410 = !DISubroutineType(types: !3411)
!3411 = !{!262, !780, !3355, !3374}
!3412 = !DIDerivedType(tag: DW_TAG_member, name: "supers", scope: !3375, file: !683, line: 192, baseType: !202, size: 128, offset: 448)
!3413 = !DIDerivedType(tag: DW_TAG_member, name: "deactivate_waitq", scope: !3375, file: !683, line: 194, baseType: !1432, size: 128, offset: 576)
!3414 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !3366, file: !683, line: 144, baseType: !3415, size: 64)
!3415 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_symlink", file: !683, line: 103, size: 64, elements: !3416)
!3416 = !{!3417}
!3417 = !DIDerivedType(tag: DW_TAG_member, name: "target_kn", scope: !3415, file: !683, line: 104, baseType: !3355, size: 64)
!3418 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !3366, file: !683, line: 145, baseType: !3419, size: 256)
!3419 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_attr", file: !683, line: 107, size: 256, elements: !3420)
!3420 = !{!3421, !3481, !3484, !3485}
!3421 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3419, file: !683, line: 108, baseType: !3422, size: 64)
!3422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3423, size: 64)
!3423 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3424)
!3424 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_ops", file: !683, line: 217, size: 768, elements: !3425)
!3425 = !{!3426, !3446, !3450, !3454, !3458, !3462, !3466, !3470, !3471, !3472, !3473, !3477}
!3426 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !3424, file: !683, line: 222, baseType: !3427, size: 64)
!3427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3428, size: 64)
!3428 = !DISubroutineType(types: !3429)
!3429 = !{!262, !3430}
!3430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3431, size: 64)
!3431 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_file", file: !683, line: 197, size: 1088, elements: !3432)
!3432 = !{!3433, !3434, !3435, !3436, !3437, !3438, !3439, !3440, !3441, !3442, !3443, !3444, !3445}
!3433 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !3431, file: !683, line: 199, baseType: !3355, size: 64)
!3434 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !3431, file: !683, line: 200, baseType: !413, size: 64, offset: 64)
!3435 = !DIDerivedType(tag: DW_TAG_member, name: "seq_file", scope: !3431, file: !683, line: 201, baseType: !780, size: 64, offset: 128)
!3436 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !3431, file: !683, line: 202, baseType: !191, size: 64, offset: 192)
!3437 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !3431, file: !683, line: 205, baseType: !379, size: 192, offset: 256)
!3438 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_mutex", scope: !3431, file: !683, line: 206, baseType: !379, size: 192, offset: 448)
!3439 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !3431, file: !683, line: 207, baseType: !262, size: 32, offset: 640)
!3440 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3431, file: !683, line: 208, baseType: !202, size: 128, offset: 704)
!3441 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_buf", scope: !3431, file: !683, line: 209, baseType: !545, size: 64, offset: 832)
!3442 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !3431, file: !683, line: 211, baseType: !639, size: 64, offset: 896)
!3443 = !DIDerivedType(tag: DW_TAG_member, name: "mmapped", scope: !3431, file: !683, line: 212, baseType: !550, size: 1, offset: 960, flags: DIFlagBitField, extraData: i64 960)
!3444 = !DIDerivedType(tag: DW_TAG_member, name: "released", scope: !3431, file: !683, line: 213, baseType: !550, size: 1, offset: 961, flags: DIFlagBitField, extraData: i64 960)
!3445 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !3431, file: !683, line: 214, baseType: !1069, size: 64, offset: 1024)
!3446 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3424, file: !683, line: 223, baseType: !3447, size: 64, offset: 64)
!3447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3448, size: 64)
!3448 = !DISubroutineType(types: !3449)
!3449 = !{null, !3430}
!3450 = !DIDerivedType(tag: DW_TAG_member, name: "seq_show", scope: !3424, file: !683, line: 236, baseType: !3451, size: 64, offset: 128)
!3451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3452, size: 64)
!3452 = !DISubroutineType(types: !3453)
!3453 = !{!262, !780, !191}
!3454 = !DIDerivedType(tag: DW_TAG_member, name: "seq_start", scope: !3424, file: !683, line: 238, baseType: !3455, size: 64, offset: 192)
!3455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3456, size: 64)
!3456 = !DISubroutineType(types: !3457)
!3457 = !{!191, !780, !2749}
!3458 = !DIDerivedType(tag: DW_TAG_member, name: "seq_next", scope: !3424, file: !683, line: 239, baseType: !3459, size: 64, offset: 256)
!3459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3460, size: 64)
!3460 = !DISubroutineType(types: !3461)
!3461 = !{!191, !780, !191, !2749}
!3462 = !DIDerivedType(tag: DW_TAG_member, name: "seq_stop", scope: !3424, file: !683, line: 240, baseType: !3463, size: 64, offset: 320)
!3463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3464, size: 64)
!3464 = !DISubroutineType(types: !3465)
!3465 = !{null, !780, !191}
!3466 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !3424, file: !683, line: 242, baseType: !3467, size: 64, offset: 384)
!3467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3468, size: 64)
!3468 = !DISubroutineType(types: !3469)
!3469 = !{!636, !3430, !545, !639, !591}
!3470 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !3424, file: !683, line: 252, baseType: !639, size: 64, offset: 448)
!3471 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc", scope: !3424, file: !683, line: 259, baseType: !550, size: 8, offset: 512)
!3472 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !3424, file: !683, line: 260, baseType: !3467, size: 64, offset: 576)
!3473 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !3424, file: !683, line: 263, baseType: !3474, size: 64, offset: 640)
!3474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3475, size: 64)
!3475 = !DISubroutineType(types: !3476)
!3476 = !{!2778, !3430, !2780}
!3477 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !3424, file: !683, line: 266, baseType: !3478, size: 64, offset: 704)
!3478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3479, size: 64)
!3479 = !DISubroutineType(types: !3480)
!3480 = !{!262, !3430, !1041}
!3481 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !3419, file: !683, line: 109, baseType: !3482, size: 64, offset: 64)
!3482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3483, size: 64)
!3483 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_node", file: !683, line: 31, flags: DIFlagFwdDecl)
!3484 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3419, file: !683, line: 110, baseType: !591, size: 64, offset: 128)
!3485 = !DIDerivedType(tag: DW_TAG_member, name: "notify_next", scope: !3419, file: !683, line: 111, baseType: !3355, size: 64, offset: 192)
!3486 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !3356, file: !683, line: 148, baseType: !191, size: 64, offset: 768)
!3487 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3356, file: !683, line: 154, baseType: !479, size: 64, offset: 832)
!3488 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3356, file: !683, line: 156, baseType: !231, size: 16, offset: 896)
!3489 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3356, file: !683, line: 157, baseType: !490, size: 16, offset: 912)
!3490 = !DIDerivedType(tag: DW_TAG_member, name: "iattr", scope: !3356, file: !683, line: 158, baseType: !3491, size: 64, offset: 960)
!3491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3492, size: 64)
!3492 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_iattrs", file: !683, line: 32, flags: DIFlagFwdDecl)
!3493 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !3205, file: !3206, line: 71, baseType: !3494, size: 32, offset: 448)
!3494 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kref", file: !3495, line: 19, size: 32, elements: !3496)
!3495 = !DIFile(filename: "./include/linux/kref.h", directory: "/home/lizy2001/genbc/linux")
!3496 = !{!3497}
!3497 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !3494, file: !3495, line: 20, baseType: !1185, size: 32)
!3498 = !DIDerivedType(tag: DW_TAG_member, name: "state_initialized", scope: !3205, file: !3206, line: 75, baseType: !7, size: 1, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!3499 = !DIDerivedType(tag: DW_TAG_member, name: "state_in_sysfs", scope: !3205, file: !3206, line: 76, baseType: !7, size: 1, offset: 481, flags: DIFlagBitField, extraData: i64 480)
!3500 = !DIDerivedType(tag: DW_TAG_member, name: "state_add_uevent_sent", scope: !3205, file: !3206, line: 77, baseType: !7, size: 1, offset: 482, flags: DIFlagBitField, extraData: i64 480)
!3501 = !DIDerivedType(tag: DW_TAG_member, name: "state_remove_uevent_sent", scope: !3205, file: !3206, line: 78, baseType: !7, size: 1, offset: 483, flags: DIFlagBitField, extraData: i64 480)
!3502 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_suppress", scope: !3205, file: !3206, line: 79, baseType: !7, size: 1, offset: 484, flags: DIFlagBitField, extraData: i64 480)
!3503 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3202, file: !60, line: 463, baseType: !3504, size: 64, offset: 512)
!3504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3202, size: 64)
!3505 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3202, file: !60, line: 465, baseType: !3506, size: 64, offset: 576)
!3506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3507, size: 64)
!3507 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_private", file: !60, line: 36, flags: DIFlagFwdDecl)
!3508 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !3202, file: !60, line: 467, baseType: !220, size: 64, offset: 640)
!3509 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3202, file: !60, line: 468, baseType: !3510, size: 64, offset: 704)
!3510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3511, size: 64)
!3511 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3512)
!3512 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_type", file: !60, line: 87, size: 384, elements: !3513)
!3513 = !{!3514, !3515, !3516, !3520, !3525, !3529}
!3514 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3512, file: !60, line: 88, baseType: !220, size: 64)
!3515 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !3512, file: !60, line: 89, baseType: !3282, size: 64, offset: 64)
!3516 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !3512, file: !60, line: 90, baseType: !3517, size: 64, offset: 128)
!3517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3518, size: 64)
!3518 = !DISubroutineType(types: !3519)
!3519 = !{!262, !3504, !3239}
!3520 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !3512, file: !60, line: 91, baseType: !3521, size: 64, offset: 192)
!3521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3522, size: 64)
!3522 = !DISubroutineType(types: !3523)
!3523 = !{!545, !3504, !3524, !3352, !3353}
!3524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !490, size: 64)
!3525 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3512, file: !60, line: 93, baseType: !3526, size: 64, offset: 256)
!3526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3527, size: 64)
!3527 = !DISubroutineType(types: !3528)
!3528 = !{null, !3504}
!3529 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3512, file: !60, line: 95, baseType: !3530, size: 64, offset: 320)
!3530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3531, size: 64)
!3531 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3532)
!3532 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_ops", file: !67, line: 278, size: 1472, elements: !3533)
!3533 = !{!3534, !3538, !3539, !3540, !3541, !3542, !3543, !3544, !3545, !3546, !3547, !3548, !3549, !3550, !3551, !3552, !3553, !3554, !3555, !3556, !3557, !3558, !3559}
!3534 = !DIDerivedType(tag: DW_TAG_member, name: "prepare", scope: !3532, file: !67, line: 279, baseType: !3535, size: 64)
!3535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3536, size: 64)
!3536 = !DISubroutineType(types: !3537)
!3537 = !{!262, !3504}
!3538 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !3532, file: !67, line: 280, baseType: !3526, size: 64, offset: 64)
!3539 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3532, file: !67, line: 281, baseType: !3535, size: 64, offset: 128)
!3540 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3532, file: !67, line: 282, baseType: !3535, size: 64, offset: 192)
!3541 = !DIDerivedType(tag: DW_TAG_member, name: "freeze", scope: !3532, file: !67, line: 283, baseType: !3535, size: 64, offset: 256)
!3542 = !DIDerivedType(tag: DW_TAG_member, name: "thaw", scope: !3532, file: !67, line: 284, baseType: !3535, size: 64, offset: 320)
!3543 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff", scope: !3532, file: !67, line: 285, baseType: !3535, size: 64, offset: 384)
!3544 = !DIDerivedType(tag: DW_TAG_member, name: "restore", scope: !3532, file: !67, line: 286, baseType: !3535, size: 64, offset: 448)
!3545 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_late", scope: !3532, file: !67, line: 287, baseType: !3535, size: 64, offset: 512)
!3546 = !DIDerivedType(tag: DW_TAG_member, name: "resume_early", scope: !3532, file: !67, line: 288, baseType: !3535, size: 64, offset: 576)
!3547 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_late", scope: !3532, file: !67, line: 289, baseType: !3535, size: 64, offset: 640)
!3548 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_early", scope: !3532, file: !67, line: 290, baseType: !3535, size: 64, offset: 704)
!3549 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_late", scope: !3532, file: !67, line: 291, baseType: !3535, size: 64, offset: 768)
!3550 = !DIDerivedType(tag: DW_TAG_member, name: "restore_early", scope: !3532, file: !67, line: 292, baseType: !3535, size: 64, offset: 832)
!3551 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_noirq", scope: !3532, file: !67, line: 293, baseType: !3535, size: 64, offset: 896)
!3552 = !DIDerivedType(tag: DW_TAG_member, name: "resume_noirq", scope: !3532, file: !67, line: 294, baseType: !3535, size: 64, offset: 960)
!3553 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_noirq", scope: !3532, file: !67, line: 295, baseType: !3535, size: 64, offset: 1024)
!3554 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_noirq", scope: !3532, file: !67, line: 296, baseType: !3535, size: 64, offset: 1088)
!3555 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_noirq", scope: !3532, file: !67, line: 297, baseType: !3535, size: 64, offset: 1152)
!3556 = !DIDerivedType(tag: DW_TAG_member, name: "restore_noirq", scope: !3532, file: !67, line: 298, baseType: !3535, size: 64, offset: 1216)
!3557 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_suspend", scope: !3532, file: !67, line: 299, baseType: !3535, size: 64, offset: 1280)
!3558 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_resume", scope: !3532, file: !67, line: 300, baseType: !3535, size: 64, offset: 1344)
!3559 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_idle", scope: !3532, file: !67, line: 301, baseType: !3535, size: 64, offset: 1408)
!3560 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !3202, file: !60, line: 470, baseType: !3561, size: 64, offset: 768)
!3561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3562, size: 64)
!3562 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bus_type", file: !3563, line: 82, size: 1408, elements: !3564)
!3563 = !DIFile(filename: "./include/linux/device/bus.h", directory: "/home/lizy2001/genbc/linux")
!3564 = !{!3565, !3566, !3567, !3568, !3569, !3570, !3571, !3628, !3629, !3630, !3631, !3632, !3633, !3634, !3635, !3636, !3637, !3638, !3639, !3640, !3644, !3647, !3648}
!3565 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3562, file: !3563, line: 83, baseType: !220, size: 64)
!3566 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name", scope: !3562, file: !3563, line: 84, baseType: !220, size: 64, offset: 64)
!3567 = !DIDerivedType(tag: DW_TAG_member, name: "dev_root", scope: !3562, file: !3563, line: 85, baseType: !3504, size: 64, offset: 128)
!3568 = !DIDerivedType(tag: DW_TAG_member, name: "bus_groups", scope: !3562, file: !3563, line: 86, baseType: !3282, size: 64, offset: 192)
!3569 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !3562, file: !3563, line: 87, baseType: !3282, size: 64, offset: 256)
!3570 = !DIDerivedType(tag: DW_TAG_member, name: "drv_groups", scope: !3562, file: !3563, line: 88, baseType: !3282, size: 64, offset: 320)
!3571 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !3562, file: !3563, line: 90, baseType: !3572, size: 64, offset: 384)
!3572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3573, size: 64)
!3573 = !DISubroutineType(types: !3574)
!3574 = !{!262, !3504, !3575}
!3575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3576, size: 64)
!3576 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_driver", file: !54, line: 95, size: 1152, elements: !3577)
!3577 = !{!3578, !3579, !3580, !3581, !3582, !3583, !3584, !3596, !3608, !3609, !3610, !3611, !3612, !3620, !3621, !3622, !3623, !3624, !3625}
!3578 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3576, file: !54, line: 96, baseType: !220, size: 64)
!3579 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !3576, file: !54, line: 97, baseType: !3561, size: 64, offset: 64)
!3580 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3576, file: !54, line: 99, baseType: !697, size: 64, offset: 128)
!3581 = !DIDerivedType(tag: DW_TAG_member, name: "mod_name", scope: !3576, file: !54, line: 100, baseType: !220, size: 64, offset: 192)
!3582 = !DIDerivedType(tag: DW_TAG_member, name: "suppress_bind_attrs", scope: !3576, file: !54, line: 102, baseType: !550, size: 8, offset: 256)
!3583 = !DIDerivedType(tag: DW_TAG_member, name: "probe_type", scope: !3576, file: !54, line: 103, baseType: !53, size: 32, offset: 288)
!3584 = !DIDerivedType(tag: DW_TAG_member, name: "of_match_table", scope: !3576, file: !54, line: 105, baseType: !3585, size: 64, offset: 320)
!3585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3586, size: 64)
!3586 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3587)
!3587 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "of_device_id", file: !3162, line: 262, size: 1600, elements: !3588)
!3588 = !{!3589, !3590, !3591, !3595}
!3589 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3587, file: !3162, line: 263, baseType: !2573, size: 256)
!3590 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3587, file: !3162, line: 264, baseType: !2573, size: 256, offset: 256)
!3591 = !DIDerivedType(tag: DW_TAG_member, name: "compatible", scope: !3587, file: !3162, line: 265, baseType: !3592, size: 1024, offset: 512)
!3592 = !DICompositeType(tag: DW_TAG_array_type, baseType: !198, size: 1024, elements: !3593)
!3593 = !{!3594}
!3594 = !DISubrange(count: 128)
!3595 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3587, file: !3162, line: 266, baseType: !3335, size: 64, offset: 1536)
!3596 = !DIDerivedType(tag: DW_TAG_member, name: "acpi_match_table", scope: !3576, file: !54, line: 106, baseType: !3597, size: 64, offset: 384)
!3597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3598, size: 64)
!3598 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3599)
!3599 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_id", file: !3162, line: 210, size: 256, elements: !3600)
!3600 = !{!3601, !3605, !3606, !3607}
!3601 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3599, file: !3162, line: 211, baseType: !3602, size: 72)
!3602 = !DICompositeType(tag: DW_TAG_array_type, baseType: !268, size: 72, elements: !3603)
!3603 = !{!3604}
!3604 = !DISubrange(count: 9)
!3605 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !3599, file: !3162, line: 212, baseType: !3165, size: 64, offset: 128)
!3606 = !DIDerivedType(tag: DW_TAG_member, name: "cls", scope: !3599, file: !3162, line: 213, baseType: !273, size: 32, offset: 192)
!3607 = !DIDerivedType(tag: DW_TAG_member, name: "cls_msk", scope: !3599, file: !3162, line: 214, baseType: !273, size: 32, offset: 224)
!3608 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !3576, file: !54, line: 108, baseType: !3535, size: 64, offset: 448)
!3609 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !3576, file: !54, line: 109, baseType: !3526, size: 64, offset: 512)
!3610 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !3576, file: !54, line: 110, baseType: !3535, size: 64, offset: 576)
!3611 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !3576, file: !54, line: 111, baseType: !3526, size: 64, offset: 640)
!3612 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3576, file: !54, line: 112, baseType: !3613, size: 64, offset: 704)
!3613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3614, size: 64)
!3614 = !DISubroutineType(types: !3615)
!3615 = !{!262, !3504, !3616}
!3616 = !DIDerivedType(tag: DW_TAG_typedef, name: "pm_message_t", file: !67, line: 52, baseType: !3617)
!3617 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_message", file: !67, line: 50, size: 32, elements: !3618)
!3618 = !{!3619}
!3619 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !3617, file: !67, line: 51, baseType: !262, size: 32)
!3620 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3576, file: !54, line: 113, baseType: !3535, size: 64, offset: 768)
!3621 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !3576, file: !54, line: 114, baseType: !3282, size: 64, offset: 832)
!3622 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !3576, file: !54, line: 115, baseType: !3282, size: 64, offset: 896)
!3623 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3576, file: !54, line: 117, baseType: !3530, size: 64, offset: 960)
!3624 = !DIDerivedType(tag: DW_TAG_member, name: "coredump", scope: !3576, file: !54, line: 118, baseType: !3526, size: 64, offset: 1024)
!3625 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3576, file: !54, line: 120, baseType: !3626, size: 64, offset: 1088)
!3626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3627, size: 64)
!3627 = !DICompositeType(tag: DW_TAG_structure_type, name: "driver_private", file: !54, line: 120, flags: DIFlagFwdDecl)
!3628 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !3562, file: !3563, line: 91, baseType: !3517, size: 64, offset: 448)
!3629 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !3562, file: !3563, line: 92, baseType: !3535, size: 64, offset: 512)
!3630 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !3562, file: !3563, line: 93, baseType: !3526, size: 64, offset: 576)
!3631 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !3562, file: !3563, line: 94, baseType: !3535, size: 64, offset: 640)
!3632 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !3562, file: !3563, line: 95, baseType: !3526, size: 64, offset: 704)
!3633 = !DIDerivedType(tag: DW_TAG_member, name: "online", scope: !3562, file: !3563, line: 97, baseType: !3535, size: 64, offset: 768)
!3634 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !3562, file: !3563, line: 98, baseType: !3535, size: 64, offset: 832)
!3635 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3562, file: !3563, line: 100, baseType: !3613, size: 64, offset: 896)
!3636 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3562, file: !3563, line: 101, baseType: !3535, size: 64, offset: 960)
!3637 = !DIDerivedType(tag: DW_TAG_member, name: "num_vf", scope: !3562, file: !3563, line: 103, baseType: !3535, size: 64, offset: 1024)
!3638 = !DIDerivedType(tag: DW_TAG_member, name: "dma_configure", scope: !3562, file: !3563, line: 105, baseType: !3535, size: 64, offset: 1088)
!3639 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3562, file: !3563, line: 107, baseType: !3530, size: 64, offset: 1152)
!3640 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_ops", scope: !3562, file: !3563, line: 109, baseType: !3641, size: 64, offset: 1216)
!3641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3642, size: 64)
!3642 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3643)
!3643 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_ops", file: !3563, line: 109, flags: DIFlagFwdDecl)
!3644 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3562, file: !3563, line: 111, baseType: !3645, size: 64, offset: 1280)
!3645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3646, size: 64)
!3646 = !DICompositeType(tag: DW_TAG_structure_type, name: "subsys_private", file: !3563, line: 111, flags: DIFlagFwdDecl)
!3647 = !DIDerivedType(tag: DW_TAG_member, name: "lock_key", scope: !3562, file: !3563, line: 112, baseType: !712, offset: 1344)
!3648 = !DIDerivedType(tag: DW_TAG_member, name: "need_parent_lock", scope: !3562, file: !3563, line: 114, baseType: !550, size: 8, offset: 1344)
!3649 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !3202, file: !60, line: 471, baseType: !3575, size: 64, offset: 832)
!3650 = !DIDerivedType(tag: DW_TAG_member, name: "platform_data", scope: !3202, file: !60, line: 473, baseType: !191, size: 64, offset: 896)
!3651 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !3202, file: !60, line: 475, baseType: !191, size: 64, offset: 960)
!3652 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !3202, file: !60, line: 480, baseType: !379, size: 192, offset: 1024)
!3653 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !3202, file: !60, line: 484, baseType: !3654, size: 576, offset: 1216)
!3654 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_links_info", file: !60, line: 361, size: 576, elements: !3655)
!3655 = !{!3656, !3657, !3658, !3659, !3660, !3661}
!3656 = !DIDerivedType(tag: DW_TAG_member, name: "suppliers", scope: !3654, file: !60, line: 362, baseType: !202, size: 128)
!3657 = !DIDerivedType(tag: DW_TAG_member, name: "consumers", scope: !3654, file: !60, line: 363, baseType: !202, size: 128, offset: 128)
!3658 = !DIDerivedType(tag: DW_TAG_member, name: "needs_suppliers", scope: !3654, file: !60, line: 364, baseType: !202, size: 128, offset: 256)
!3659 = !DIDerivedType(tag: DW_TAG_member, name: "defer_hook", scope: !3654, file: !60, line: 365, baseType: !202, size: 128, offset: 384)
!3660 = !DIDerivedType(tag: DW_TAG_member, name: "need_for_probe", scope: !3654, file: !60, line: 366, baseType: !550, size: 8, offset: 512)
!3661 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !3654, file: !60, line: 367, baseType: !59, size: 32, offset: 544)
!3662 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !3202, file: !60, line: 485, baseType: !3663, size: 2304, offset: 1792)
!3663 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_info", file: !67, line: 565, size: 2304, elements: !3664)
!3664 = !{!3665, !3666, !3667, !3668, !3669, !3670, !3671, !3672, !3673, !3674, !3675, !3676, !3677, !3678, !3679, !3680, !3707, !3708, !3709, !3710, !3711, !3712, !3713, !3714, !3715, !3716, !3717, !3718, !3719, !3720, !3721, !3722, !3723, !3724, !3725, !3726, !3727, !3728, !3729, !3730, !3731, !3732, !3733, !3734, !3735, !3736, !3737, !3738, !3739, !3749, !3753}
!3665 = !DIDerivedType(tag: DW_TAG_member, name: "power_state", scope: !3663, file: !67, line: 566, baseType: !3616, size: 32)
!3666 = !DIDerivedType(tag: DW_TAG_member, name: "can_wakeup", scope: !3663, file: !67, line: 567, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!3667 = !DIDerivedType(tag: DW_TAG_member, name: "async_suspend", scope: !3663, file: !67, line: 568, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 32)
!3668 = !DIDerivedType(tag: DW_TAG_member, name: "in_dpm_list", scope: !3663, file: !67, line: 569, baseType: !550, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 32)
!3669 = !DIDerivedType(tag: DW_TAG_member, name: "is_prepared", scope: !3663, file: !67, line: 570, baseType: !550, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 32)
!3670 = !DIDerivedType(tag: DW_TAG_member, name: "is_suspended", scope: !3663, file: !67, line: 571, baseType: !550, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 32)
!3671 = !DIDerivedType(tag: DW_TAG_member, name: "is_noirq_suspended", scope: !3663, file: !67, line: 572, baseType: !550, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 32)
!3672 = !DIDerivedType(tag: DW_TAG_member, name: "is_late_suspended", scope: !3663, file: !67, line: 573, baseType: !550, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 32)
!3673 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm", scope: !3663, file: !67, line: 574, baseType: !550, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 32)
!3674 = !DIDerivedType(tag: DW_TAG_member, name: "early_init", scope: !3663, file: !67, line: 575, baseType: !550, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!3675 = !DIDerivedType(tag: DW_TAG_member, name: "direct_complete", scope: !3663, file: !67, line: 576, baseType: !550, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 32)
!3676 = !DIDerivedType(tag: DW_TAG_member, name: "driver_flags", scope: !3663, file: !67, line: 577, baseType: !476, size: 32, offset: 64)
!3677 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3663, file: !67, line: 578, baseType: !393, offset: 96)
!3678 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3663, file: !67, line: 580, baseType: !202, size: 128, offset: 128)
!3679 = !DIDerivedType(tag: DW_TAG_member, name: "completion", scope: !3663, file: !67, line: 581, baseType: !1453, size: 192, offset: 256)
!3680 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup", scope: !3663, file: !67, line: 582, baseType: !3681, size: 64, offset: 448)
!3681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3682, size: 64)
!3682 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wakeup_source", file: !3683, line: 43, size: 1472, elements: !3684)
!3683 = !DIFile(filename: "./include/linux/pm_wakeup.h", directory: "/home/lizy2001/genbc/linux")
!3684 = !{!3685, !3686, !3687, !3688, !3689, !3692, !3693, !3694, !3695, !3696, !3697, !3698, !3699, !3700, !3701, !3702, !3703, !3704, !3705, !3706}
!3685 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3682, file: !3683, line: 44, baseType: !220, size: 64)
!3686 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3682, file: !3683, line: 45, baseType: !262, size: 32, offset: 64)
!3687 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3682, file: !3683, line: 46, baseType: !202, size: 128, offset: 128)
!3688 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3682, file: !3683, line: 47, baseType: !393, offset: 256)
!3689 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !3682, file: !3683, line: 48, baseType: !3690, size: 64, offset: 256)
!3690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3691, size: 64)
!3691 = !DICompositeType(tag: DW_TAG_structure_type, name: "wake_irq", file: !67, line: 533, flags: DIFlagFwdDecl)
!3692 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !3682, file: !3683, line: 49, baseType: !3055, size: 320, offset: 320)
!3693 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !3682, file: !3683, line: 50, baseType: !190, size: 64, offset: 640)
!3694 = !DIDerivedType(tag: DW_TAG_member, name: "total_time", scope: !3682, file: !3683, line: 51, baseType: !1255, size: 64, offset: 704)
!3695 = !DIDerivedType(tag: DW_TAG_member, name: "max_time", scope: !3682, file: !3683, line: 52, baseType: !1255, size: 64, offset: 768)
!3696 = !DIDerivedType(tag: DW_TAG_member, name: "last_time", scope: !3682, file: !3683, line: 53, baseType: !1255, size: 64, offset: 832)
!3697 = !DIDerivedType(tag: DW_TAG_member, name: "start_prevent_time", scope: !3682, file: !3683, line: 54, baseType: !1255, size: 64, offset: 896)
!3698 = !DIDerivedType(tag: DW_TAG_member, name: "prevent_sleep_time", scope: !3682, file: !3683, line: 55, baseType: !1255, size: 64, offset: 960)
!3699 = !DIDerivedType(tag: DW_TAG_member, name: "event_count", scope: !3682, file: !3683, line: 56, baseType: !190, size: 64, offset: 1024)
!3700 = !DIDerivedType(tag: DW_TAG_member, name: "active_count", scope: !3682, file: !3683, line: 57, baseType: !190, size: 64, offset: 1088)
!3701 = !DIDerivedType(tag: DW_TAG_member, name: "relax_count", scope: !3682, file: !3683, line: 58, baseType: !190, size: 64, offset: 1152)
!3702 = !DIDerivedType(tag: DW_TAG_member, name: "expire_count", scope: !3682, file: !3683, line: 59, baseType: !190, size: 64, offset: 1216)
!3703 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_count", scope: !3682, file: !3683, line: 60, baseType: !190, size: 64, offset: 1280)
!3704 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3682, file: !3683, line: 61, baseType: !3504, size: 64, offset: 1344)
!3705 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !3682, file: !3683, line: 62, baseType: !550, size: 1, offset: 1408, flags: DIFlagBitField, extraData: i64 1408)
!3706 = !DIDerivedType(tag: DW_TAG_member, name: "autosleep_enabled", scope: !3682, file: !3683, line: 63, baseType: !550, size: 1, offset: 1409, flags: DIFlagBitField, extraData: i64 1408)
!3707 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_path", scope: !3663, file: !67, line: 583, baseType: !550, size: 1, offset: 512, flags: DIFlagBitField, extraData: i64 512)
!3708 = !DIDerivedType(tag: DW_TAG_member, name: "syscore", scope: !3663, file: !67, line: 584, baseType: !550, size: 1, offset: 513, flags: DIFlagBitField, extraData: i64 512)
!3709 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm_callbacks", scope: !3663, file: !67, line: 585, baseType: !550, size: 1, offset: 514, flags: DIFlagBitField, extraData: i64 512)
!3710 = !DIDerivedType(tag: DW_TAG_member, name: "must_resume", scope: !3663, file: !67, line: 586, baseType: !7, size: 1, offset: 515, flags: DIFlagBitField, extraData: i64 512)
!3711 = !DIDerivedType(tag: DW_TAG_member, name: "may_skip_resume", scope: !3663, file: !67, line: 587, baseType: !7, size: 1, offset: 516, flags: DIFlagBitField, extraData: i64 512)
!3712 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_timer", scope: !3663, file: !67, line: 592, baseType: !1247, size: 512, offset: 576)
!3713 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !3663, file: !67, line: 593, baseType: !479, size: 64, offset: 1088)
!3714 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !3663, file: !67, line: 594, baseType: !1909, size: 256, offset: 1152)
!3715 = !DIDerivedType(tag: DW_TAG_member, name: "wait_queue", scope: !3663, file: !67, line: 595, baseType: !1432, size: 128, offset: 1408)
!3716 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !3663, file: !67, line: 596, baseType: !3690, size: 64, offset: 1536)
!3717 = !DIDerivedType(tag: DW_TAG_member, name: "usage_count", scope: !3663, file: !67, line: 597, baseType: !816, size: 32, offset: 1600)
!3718 = !DIDerivedType(tag: DW_TAG_member, name: "child_count", scope: !3663, file: !67, line: 598, baseType: !816, size: 32, offset: 1632)
!3719 = !DIDerivedType(tag: DW_TAG_member, name: "disable_depth", scope: !3663, file: !67, line: 599, baseType: !7, size: 3, offset: 1664, flags: DIFlagBitField, extraData: i64 1664)
!3720 = !DIDerivedType(tag: DW_TAG_member, name: "idle_notification", scope: !3663, file: !67, line: 600, baseType: !7, size: 1, offset: 1667, flags: DIFlagBitField, extraData: i64 1664)
!3721 = !DIDerivedType(tag: DW_TAG_member, name: "request_pending", scope: !3663, file: !67, line: 601, baseType: !7, size: 1, offset: 1668, flags: DIFlagBitField, extraData: i64 1664)
!3722 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_resume", scope: !3663, file: !67, line: 602, baseType: !7, size: 1, offset: 1669, flags: DIFlagBitField, extraData: i64 1664)
!3723 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_auto", scope: !3663, file: !67, line: 603, baseType: !7, size: 1, offset: 1670, flags: DIFlagBitField, extraData: i64 1664)
!3724 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_children", scope: !3663, file: !67, line: 604, baseType: !550, size: 1, offset: 1671, flags: DIFlagBitField, extraData: i64 1664)
!3725 = !DIDerivedType(tag: DW_TAG_member, name: "no_callbacks", scope: !3663, file: !67, line: 605, baseType: !7, size: 1, offset: 1672, flags: DIFlagBitField, extraData: i64 1664)
!3726 = !DIDerivedType(tag: DW_TAG_member, name: "irq_safe", scope: !3663, file: !67, line: 606, baseType: !7, size: 1, offset: 1673, flags: DIFlagBitField, extraData: i64 1664)
!3727 = !DIDerivedType(tag: DW_TAG_member, name: "use_autosuspend", scope: !3663, file: !67, line: 607, baseType: !7, size: 1, offset: 1674, flags: DIFlagBitField, extraData: i64 1664)
!3728 = !DIDerivedType(tag: DW_TAG_member, name: "timer_autosuspends", scope: !3663, file: !67, line: 608, baseType: !7, size: 1, offset: 1675, flags: DIFlagBitField, extraData: i64 1664)
!3729 = !DIDerivedType(tag: DW_TAG_member, name: "memalloc_noio", scope: !3663, file: !67, line: 609, baseType: !7, size: 1, offset: 1676, flags: DIFlagBitField, extraData: i64 1664)
!3730 = !DIDerivedType(tag: DW_TAG_member, name: "links_count", scope: !3663, file: !67, line: 610, baseType: !7, size: 32, offset: 1696)
!3731 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !3663, file: !67, line: 611, baseType: !66, size: 32, offset: 1728)
!3732 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_status", scope: !3663, file: !67, line: 612, baseType: !74, size: 32, offset: 1760)
!3733 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_error", scope: !3663, file: !67, line: 613, baseType: !262, size: 32, offset: 1792)
!3734 = !DIDerivedType(tag: DW_TAG_member, name: "autosuspend_delay", scope: !3663, file: !67, line: 614, baseType: !262, size: 32, offset: 1824)
!3735 = !DIDerivedType(tag: DW_TAG_member, name: "last_busy", scope: !3663, file: !67, line: 615, baseType: !479, size: 64, offset: 1856)
!3736 = !DIDerivedType(tag: DW_TAG_member, name: "active_time", scope: !3663, file: !67, line: 616, baseType: !479, size: 64, offset: 1920)
!3737 = !DIDerivedType(tag: DW_TAG_member, name: "suspended_time", scope: !3663, file: !67, line: 617, baseType: !479, size: 64, offset: 1984)
!3738 = !DIDerivedType(tag: DW_TAG_member, name: "accounting_timestamp", scope: !3663, file: !67, line: 618, baseType: !479, size: 64, offset: 2048)
!3739 = !DIDerivedType(tag: DW_TAG_member, name: "subsys_data", scope: !3663, file: !67, line: 620, baseType: !3740, size: 64, offset: 2112)
!3740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3741, size: 64)
!3741 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_subsys_data", file: !67, line: 536, size: 256, elements: !3742)
!3742 = !{!3743, !3744, !3745, !3746}
!3743 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3741, file: !67, line: 537, baseType: !393)
!3744 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !3741, file: !67, line: 538, baseType: !7, size: 32)
!3745 = !DIDerivedType(tag: DW_TAG_member, name: "clock_list", scope: !3741, file: !67, line: 540, baseType: !202, size: 128, offset: 64)
!3746 = !DIDerivedType(tag: DW_TAG_member, name: "domain_data", scope: !3741, file: !67, line: 543, baseType: !3747, size: 64, offset: 192)
!3747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3748, size: 64)
!3748 = !DICompositeType(tag: DW_TAG_structure_type, name: "pm_domain_data", file: !67, line: 534, flags: DIFlagFwdDecl)
!3749 = !DIDerivedType(tag: DW_TAG_member, name: "set_latency_tolerance", scope: !3663, file: !67, line: 621, baseType: !3750, size: 64, offset: 2176)
!3750 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3751, size: 64)
!3751 = !DISubroutineType(types: !3752)
!3752 = !{null, !3504, !1395}
!3753 = !DIDerivedType(tag: DW_TAG_member, name: "qos", scope: !3663, file: !67, line: 622, baseType: !3754, size: 64, offset: 2240)
!3754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3755, size: 64)
!3755 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_qos", file: !67, line: 622, flags: DIFlagFwdDecl)
!3756 = !DIDerivedType(tag: DW_TAG_member, name: "pm_domain", scope: !3202, file: !60, line: 486, baseType: !3757, size: 64, offset: 4096)
!3757 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3758, size: 64)
!3758 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_domain", file: !67, line: 642, size: 1792, elements: !3759)
!3759 = !{!3760, !3761, !3762, !3766, !3767, !3768}
!3760 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3758, file: !67, line: 643, baseType: !3532, size: 1472)
!3761 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3758, file: !67, line: 644, baseType: !3535, size: 64, offset: 1472)
!3762 = !DIDerivedType(tag: DW_TAG_member, name: "detach", scope: !3758, file: !67, line: 645, baseType: !3763, size: 64, offset: 1536)
!3763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3764, size: 64)
!3764 = !DISubroutineType(types: !3765)
!3765 = !{null, !3504, !550}
!3766 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !3758, file: !67, line: 646, baseType: !3535, size: 64, offset: 1600)
!3767 = !DIDerivedType(tag: DW_TAG_member, name: "sync", scope: !3758, file: !67, line: 647, baseType: !3526, size: 64, offset: 1664)
!3768 = !DIDerivedType(tag: DW_TAG_member, name: "dismiss", scope: !3758, file: !67, line: 648, baseType: !3526, size: 64, offset: 1728)
!3769 = !DIDerivedType(tag: DW_TAG_member, name: "msi_domain", scope: !3202, file: !60, line: 493, baseType: !3770, size: 64, offset: 4160)
!3770 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3771, size: 64)
!3771 = !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain", file: !60, line: 493, flags: DIFlagFwdDecl)
!3772 = !DIDerivedType(tag: DW_TAG_member, name: "msi_list", scope: !3202, file: !60, line: 499, baseType: !202, size: 128, offset: 4224)
!3773 = !DIDerivedType(tag: DW_TAG_member, name: "dma_ops", scope: !3202, file: !60, line: 502, baseType: !3774, size: 64, offset: 4352)
!3774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3775, size: 64)
!3775 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3776)
!3776 = !DICompositeType(tag: DW_TAG_structure_type, name: "dma_map_ops", file: !60, line: 502, flags: DIFlagFwdDecl)
!3777 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !3202, file: !60, line: 504, baseType: !3778, size: 64, offset: 4416)
!3778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !479, size: 64)
!3779 = !DIDerivedType(tag: DW_TAG_member, name: "coherent_dma_mask", scope: !3202, file: !60, line: 505, baseType: !479, size: 64, offset: 4480)
!3780 = !DIDerivedType(tag: DW_TAG_member, name: "bus_dma_limit", scope: !3202, file: !60, line: 510, baseType: !479, size: 64, offset: 4544)
!3781 = !DIDerivedType(tag: DW_TAG_member, name: "dma_range_map", scope: !3202, file: !60, line: 511, baseType: !3782, size: 64, offset: 4608)
!3782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3783, size: 64)
!3783 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3784)
!3784 = !DICompositeType(tag: DW_TAG_structure_type, name: "bus_dma_region", file: !60, line: 511, flags: DIFlagFwdDecl)
!3785 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !3202, file: !60, line: 513, baseType: !3786, size: 64, offset: 4672)
!3786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3787, size: 64)
!3787 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_dma_parameters", file: !60, line: 288, size: 128, elements: !3788)
!3788 = !{!3789, !3790}
!3789 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !3787, file: !60, line: 293, baseType: !7, size: 32)
!3790 = !DIDerivedType(tag: DW_TAG_member, name: "segment_boundary_mask", scope: !3787, file: !60, line: 294, baseType: !190, size: 64, offset: 64)
!3791 = !DIDerivedType(tag: DW_TAG_member, name: "dma_pools", scope: !3202, file: !60, line: 515, baseType: !202, size: 128, offset: 4736)
!3792 = !DIDerivedType(tag: DW_TAG_member, name: "archdata", scope: !3202, file: !60, line: 526, baseType: !3793, offset: 4864)
!3793 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_archdata", file: !3794, line: 5, elements: !407)
!3794 = !DIFile(filename: "./arch/x86/include/asm/device.h", directory: "/home/lizy2001/genbc/linux")
!3795 = !DIDerivedType(tag: DW_TAG_member, name: "of_node", scope: !3202, file: !60, line: 528, baseType: !3796, size: 64, offset: 4864)
!3796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3797, size: 64)
!3797 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_node", file: !3798, line: 14, flags: DIFlagFwdDecl)
!3798 = !DIFile(filename: "./include/linux/arch_topology.h", directory: "/home/lizy2001/genbc/linux")
!3799 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !3202, file: !60, line: 529, baseType: !3800, size: 64, offset: 4928)
!3800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3801, size: 64)
!3801 = !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_handle", file: !3563, line: 22, flags: DIFlagFwdDecl)
!3802 = !DIDerivedType(tag: DW_TAG_member, name: "devt", scope: !3202, file: !60, line: 534, baseType: !573, size: 32, offset: 4992)
!3803 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3202, file: !60, line: 535, baseType: !476, size: 32, offset: 5024)
!3804 = !DIDerivedType(tag: DW_TAG_member, name: "devres_lock", scope: !3202, file: !60, line: 537, baseType: !393, offset: 5056)
!3805 = !DIDerivedType(tag: DW_TAG_member, name: "devres_head", scope: !3202, file: !60, line: 538, baseType: !202, size: 128, offset: 5056)
!3806 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !3202, file: !60, line: 540, baseType: !3807, size: 64, offset: 5184)
!3807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3808, size: 64)
!3808 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "class", file: !3809, line: 54, size: 960, elements: !3810)
!3809 = !DIFile(filename: "./include/linux/device/class.h", directory: "/home/lizy2001/genbc/linux")
!3810 = !{!3811, !3812, !3813, !3814, !3815, !3816, !3817, !3821, !3825, !3826, !3827, !3828, !3832, !3836, !3837}
!3811 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3808, file: !3809, line: 55, baseType: !220, size: 64)
!3812 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3808, file: !3809, line: 56, baseType: !697, size: 64, offset: 64)
!3813 = !DIDerivedType(tag: DW_TAG_member, name: "class_groups", scope: !3808, file: !3809, line: 58, baseType: !3282, size: 64, offset: 128)
!3814 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !3808, file: !3809, line: 59, baseType: !3282, size: 64, offset: 192)
!3815 = !DIDerivedType(tag: DW_TAG_member, name: "dev_kobj", scope: !3808, file: !3809, line: 60, baseType: !3211, size: 64, offset: 256)
!3816 = !DIDerivedType(tag: DW_TAG_member, name: "dev_uevent", scope: !3808, file: !3809, line: 62, baseType: !3517, size: 64, offset: 320)
!3817 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !3808, file: !3809, line: 63, baseType: !3818, size: 64, offset: 384)
!3818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3819, size: 64)
!3819 = !DISubroutineType(types: !3820)
!3820 = !{!545, !3504, !3524}
!3821 = !DIDerivedType(tag: DW_TAG_member, name: "class_release", scope: !3808, file: !3809, line: 65, baseType: !3822, size: 64, offset: 448)
!3822 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3823, size: 64)
!3823 = !DISubroutineType(types: !3824)
!3824 = !{null, !3807}
!3825 = !DIDerivedType(tag: DW_TAG_member, name: "dev_release", scope: !3808, file: !3809, line: 66, baseType: !3526, size: 64, offset: 512)
!3826 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown_pre", scope: !3808, file: !3809, line: 68, baseType: !3535, size: 64, offset: 576)
!3827 = !DIDerivedType(tag: DW_TAG_member, name: "ns_type", scope: !3808, file: !3809, line: 70, baseType: !3318, size: 64, offset: 640)
!3828 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !3808, file: !3809, line: 71, baseType: !3829, size: 64, offset: 704)
!3829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3830, size: 64)
!3830 = !DISubroutineType(types: !3831)
!3831 = !{!3335, !3504}
!3832 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !3808, file: !3809, line: 73, baseType: !3833, size: 64, offset: 768)
!3833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3834, size: 64)
!3834 = !DISubroutineType(types: !3835)
!3835 = !{null, !3504, !3352, !3353}
!3836 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3808, file: !3809, line: 75, baseType: !3530, size: 64, offset: 832)
!3837 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3808, file: !3809, line: 77, baseType: !3645, size: 64, offset: 896)
!3838 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !3202, file: !60, line: 541, baseType: !3282, size: 64, offset: 5248)
!3839 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3202, file: !60, line: 543, baseType: !3526, size: 64, offset: 5312)
!3840 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_group", scope: !3202, file: !60, line: 544, baseType: !3841, size: 64, offset: 5376)
!3841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3842, size: 64)
!3842 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_group", file: !60, line: 45, flags: DIFlagFwdDecl)
!3843 = !DIDerivedType(tag: DW_TAG_member, name: "iommu", scope: !3202, file: !60, line: 545, baseType: !3844, size: 64, offset: 5440)
!3844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3845, size: 64)
!3845 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_iommu", file: !60, line: 47, flags: DIFlagFwdDecl)
!3846 = !DIDerivedType(tag: DW_TAG_member, name: "offline_disabled", scope: !3202, file: !60, line: 547, baseType: !550, size: 1, offset: 5504, flags: DIFlagBitField, extraData: i64 5504)
!3847 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !3202, file: !60, line: 548, baseType: !550, size: 1, offset: 5505, flags: DIFlagBitField, extraData: i64 5504)
!3848 = !DIDerivedType(tag: DW_TAG_member, name: "of_node_reused", scope: !3202, file: !60, line: 549, baseType: !550, size: 1, offset: 5506, flags: DIFlagBitField, extraData: i64 5504)
!3849 = !DIDerivedType(tag: DW_TAG_member, name: "state_synced", scope: !3202, file: !60, line: 550, baseType: !550, size: 1, offset: 5507, flags: DIFlagBitField, extraData: i64 5504)
!3850 = !DIDerivedType(tag: DW_TAG_member, name: "h_list", scope: !216, file: !217, line: 194, baseType: !202, size: 128, offset: 9792)
!3851 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !216, file: !217, line: 195, baseType: !202, size: 128, offset: 9920)
!3852 = !DIDerivedType(tag: DW_TAG_member, name: "num_vals", scope: !216, file: !217, line: 197, baseType: !7, size: 32, offset: 10048)
!3853 = !DIDerivedType(tag: DW_TAG_member, name: "max_vals", scope: !216, file: !217, line: 198, baseType: !7, size: 32, offset: 10080)
!3854 = !DIDerivedType(tag: DW_TAG_member, name: "vals", scope: !216, file: !217, line: 199, baseType: !3855, size: 64, offset: 10112)
!3855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3142, size: 64)
!3856 = !DIDerivedType(tag: DW_TAG_member, name: "devres_managed", scope: !216, file: !217, line: 201, baseType: !550, size: 8, offset: 10176)
!3857 = !DIDerivedType(tag: DW_TAG_member, name: "timestamp", scope: !216, file: !217, line: 203, baseType: !3858, size: 192, offset: 10240)
!3858 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1255, size: 192, elements: !718)
!3859 = !DIDerivedType(tag: DW_TAG_member, name: "ps2dev", scope: !211, file: !87, line: 92, baseType: !3860, size: 576, offset: 128)
!3860 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ps2dev", file: !3861, line: 33, size: 576, elements: !3862)
!3861 = !DIFile(filename: "./include/linux/libps2.h", directory: "/home/lizy2001/genbc/linux")
!3862 = !{!3863, !3928, !3929, !3930, !3931, !3933, !3934}
!3863 = !DIDerivedType(tag: DW_TAG_member, name: "serio", scope: !3860, file: !3861, line: 34, baseType: !3864, size: 64)
!3864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3865, size: 64)
!3865 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "serio", file: !3866, line: 20, size: 8384, elements: !3867)
!3866 = !DIFile(filename: "./include/linux/serio.h", directory: "/home/lizy2001/genbc/linux")
!3867 = !{!3868, !3869, !3870, !3871, !3872, !3873, !3880, !3881, !3885, !3889, !3893, !3894, !3895, !3896, !3897, !3898, !3899, !3923, !3924, !3925, !3926}
!3868 = !DIDerivedType(tag: DW_TAG_member, name: "port_data", scope: !3865, file: !3866, line: 21, baseType: !191, size: 64)
!3869 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3865, file: !3866, line: 23, baseType: !2573, size: 256, offset: 64)
!3870 = !DIDerivedType(tag: DW_TAG_member, name: "phys", scope: !3865, file: !3866, line: 24, baseType: !2573, size: 256, offset: 320)
!3871 = !DIDerivedType(tag: DW_TAG_member, name: "firmware_id", scope: !3865, file: !3866, line: 25, baseType: !3592, size: 1024, offset: 576)
!3872 = !DIDerivedType(tag: DW_TAG_member, name: "manual_bind", scope: !3865, file: !3866, line: 27, baseType: !550, size: 8, offset: 1600)
!3873 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3865, file: !3866, line: 29, baseType: !3874, size: 32, offset: 1608)
!3874 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "serio_device_id", file: !3162, line: 236, size: 32, elements: !3875)
!3875 = !{!3876, !3877, !3878, !3879}
!3876 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3874, file: !3162, line: 237, baseType: !268, size: 8)
!3877 = !DIDerivedType(tag: DW_TAG_member, name: "extra", scope: !3874, file: !3162, line: 238, baseType: !268, size: 8, offset: 8)
!3878 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3874, file: !3162, line: 239, baseType: !268, size: 8, offset: 16)
!3879 = !DIDerivedType(tag: DW_TAG_member, name: "proto", scope: !3874, file: !3162, line: 240, baseType: !268, size: 8, offset: 24)
!3880 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3865, file: !3866, line: 32, baseType: !393, offset: 1640)
!3881 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !3865, file: !3866, line: 34, baseType: !3882, size: 64, offset: 1664)
!3882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3883, size: 64)
!3883 = !DISubroutineType(types: !3884)
!3884 = !{!262, !3864, !269}
!3885 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !3865, file: !3866, line: 35, baseType: !3886, size: 64, offset: 1728)
!3886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3887, size: 64)
!3887 = !DISubroutineType(types: !3888)
!3888 = !{!262, !3864}
!3889 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !3865, file: !3866, line: 36, baseType: !3890, size: 64, offset: 1792)
!3890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3891, size: 64)
!3891 = !DISubroutineType(types: !3892)
!3892 = !{null, !3864}
!3893 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3865, file: !3866, line: 37, baseType: !3886, size: 64, offset: 1856)
!3894 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !3865, file: !3866, line: 38, baseType: !3890, size: 64, offset: 1920)
!3895 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3865, file: !3866, line: 40, baseType: !3864, size: 64, offset: 1984)
!3896 = !DIDerivedType(tag: DW_TAG_member, name: "child_node", scope: !3865, file: !3866, line: 42, baseType: !202, size: 128, offset: 2048)
!3897 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3865, file: !3866, line: 43, baseType: !202, size: 128, offset: 2176)
!3898 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !3865, file: !3866, line: 45, baseType: !7, size: 32, offset: 2304)
!3899 = !DIDerivedType(tag: DW_TAG_member, name: "drv", scope: !3865, file: !3866, line: 51, baseType: !3900, size: 64, offset: 2368)
!3900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3901, size: 64)
!3901 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "serio_driver", file: !3866, line: 67, size: 1792, elements: !3902)
!3902 = !{!3903, !3904, !3907, !3908, !3909, !3914, !3918, !3919, !3920, !3921, !3922}
!3903 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !3901, file: !3866, line: 68, baseType: !220, size: 64)
!3904 = !DIDerivedType(tag: DW_TAG_member, name: "id_table", scope: !3901, file: !3866, line: 70, baseType: !3905, size: 64, offset: 64)
!3905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3906, size: 64)
!3906 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3874)
!3907 = !DIDerivedType(tag: DW_TAG_member, name: "manual_bind", scope: !3901, file: !3866, line: 71, baseType: !550, size: 8, offset: 128)
!3908 = !DIDerivedType(tag: DW_TAG_member, name: "write_wakeup", scope: !3901, file: !3866, line: 73, baseType: !3890, size: 64, offset: 192)
!3909 = !DIDerivedType(tag: DW_TAG_member, name: "interrupt", scope: !3901, file: !3866, line: 74, baseType: !3910, size: 64, offset: 256)
!3910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3911, size: 64)
!3911 = !DISubroutineType(types: !3912)
!3912 = !{!3913, !3864, !269, !7}
!3913 = !DIDerivedType(tag: DW_TAG_typedef, name: "irqreturn_t", file: !81, line: 17, baseType: !80)
!3914 = !DIDerivedType(tag: DW_TAG_member, name: "connect", scope: !3901, file: !3866, line: 75, baseType: !3915, size: 64, offset: 320)
!3915 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3916, size: 64)
!3916 = !DISubroutineType(types: !3917)
!3917 = !{!262, !3864, !3900}
!3918 = !DIDerivedType(tag: DW_TAG_member, name: "reconnect", scope: !3901, file: !3866, line: 76, baseType: !3886, size: 64, offset: 384)
!3919 = !DIDerivedType(tag: DW_TAG_member, name: "fast_reconnect", scope: !3901, file: !3866, line: 77, baseType: !3886, size: 64, offset: 448)
!3920 = !DIDerivedType(tag: DW_TAG_member, name: "disconnect", scope: !3901, file: !3866, line: 78, baseType: !3890, size: 64, offset: 512)
!3921 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !3901, file: !3866, line: 79, baseType: !3890, size: 64, offset: 576)
!3922 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !3901, file: !3866, line: 81, baseType: !3576, size: 1152, offset: 640)
!3923 = !DIDerivedType(tag: DW_TAG_member, name: "drv_mutex", scope: !3865, file: !3866, line: 53, baseType: !379, size: 192, offset: 2432)
!3924 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3865, file: !3866, line: 55, baseType: !3202, size: 5568, offset: 2624)
!3925 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3865, file: !3866, line: 57, baseType: !202, size: 128, offset: 8192)
!3926 = !DIDerivedType(tag: DW_TAG_member, name: "ps2_cmd_mutex", scope: !3865, file: !3866, line: 63, baseType: !3927, size: 64, offset: 8320)
!3927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !379, size: 64)
!3928 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_mutex", scope: !3860, file: !3861, line: 37, baseType: !379, size: 192, offset: 64)
!3929 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !3860, file: !3861, line: 40, baseType: !1432, size: 128, offset: 256)
!3930 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3860, file: !3861, line: 42, baseType: !190, size: 64, offset: 384)
!3931 = !DIDerivedType(tag: DW_TAG_member, name: "cmdbuf", scope: !3860, file: !3861, line: 43, baseType: !3932, size: 64, offset: 448)
!3932 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1307, size: 64, elements: !1285)
!3933 = !DIDerivedType(tag: DW_TAG_member, name: "cmdcnt", scope: !3860, file: !3861, line: 44, baseType: !1307, size: 8, offset: 512)
!3934 = !DIDerivedType(tag: DW_TAG_member, name: "nak", scope: !3860, file: !3861, line: 45, baseType: !1307, size: 8, offset: 520)
!3935 = !DIDerivedType(tag: DW_TAG_member, name: "resync_work", scope: !211, file: !87, line: 93, baseType: !3936, size: 704, offset: 704)
!3936 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_work", file: !130, line: 115, size: 704, elements: !3937)
!3937 = !{!3938, !3939, !3940, !3941}
!3938 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !3936, file: !130, line: 116, baseType: !1909, size: 256)
!3939 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !3936, file: !130, line: 117, baseType: !3055, size: 320, offset: 256)
!3940 = !DIDerivedType(tag: DW_TAG_member, name: "wq", scope: !3936, file: !130, line: 120, baseType: !2666, size: 64, offset: 576)
!3941 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !3936, file: !130, line: 121, baseType: !262, size: 32, offset: 640)
!3942 = !DIDerivedType(tag: DW_TAG_member, name: "vendor", scope: !211, file: !87, line: 94, baseType: !220, size: 64, offset: 1408)
!3943 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !211, file: !87, line: 95, baseType: !220, size: 64, offset: 1472)
!3944 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !211, file: !87, line: 96, baseType: !3945, size: 64, offset: 1536)
!3945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3946, size: 64)
!3946 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3947)
!3947 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "psmouse_protocol", file: !87, line: 77, size: 320, elements: !3948)
!3948 = !{!3949, !3950, !3951, !3952, !3953, !3954, !3955, !3956, !3960}
!3949 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3947, file: !87, line: 78, baseType: !86, size: 32)
!3950 = !DIDerivedType(tag: DW_TAG_member, name: "maxproto", scope: !3947, file: !87, line: 79, baseType: !550, size: 8, offset: 32)
!3951 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_parity", scope: !3947, file: !87, line: 80, baseType: !550, size: 8, offset: 40)
!3952 = !DIDerivedType(tag: DW_TAG_member, name: "try_passthru", scope: !3947, file: !87, line: 81, baseType: !550, size: 8, offset: 48)
!3953 = !DIDerivedType(tag: DW_TAG_member, name: "smbus_companion", scope: !3947, file: !87, line: 82, baseType: !550, size: 8, offset: 56)
!3954 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3947, file: !87, line: 83, baseType: !220, size: 64, offset: 64)
!3955 = !DIDerivedType(tag: DW_TAG_member, name: "alias", scope: !3947, file: !87, line: 84, baseType: !220, size: 64, offset: 128)
!3956 = !DIDerivedType(tag: DW_TAG_member, name: "detect", scope: !3947, file: !87, line: 85, baseType: !3957, size: 64, offset: 192)
!3957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3958, size: 64)
!3958 = !DISubroutineType(types: !3959)
!3959 = !{!262, !210, !550}
!3960 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !3947, file: !87, line: 86, baseType: !3961, size: 64, offset: 256)
!3961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3962, size: 64)
!3962 = !DISubroutineType(types: !3963)
!3963 = !{!262, !210}
!3964 = !DIDerivedType(tag: DW_TAG_member, name: "packet", scope: !211, file: !87, line: 97, baseType: !3965, size: 64, offset: 1600)
!3965 = !DICompositeType(tag: DW_TAG_array_type, baseType: !269, size: 64, elements: !1285)
!3966 = !DIDerivedType(tag: DW_TAG_member, name: "badbyte", scope: !211, file: !87, line: 98, baseType: !269, size: 8, offset: 1664)
!3967 = !DIDerivedType(tag: DW_TAG_member, name: "pktcnt", scope: !211, file: !87, line: 99, baseType: !269, size: 8, offset: 1672)
!3968 = !DIDerivedType(tag: DW_TAG_member, name: "pktsize", scope: !211, file: !87, line: 100, baseType: !269, size: 8, offset: 1680)
!3969 = !DIDerivedType(tag: DW_TAG_member, name: "oob_data_type", scope: !211, file: !87, line: 101, baseType: !269, size: 8, offset: 1688)
!3970 = !DIDerivedType(tag: DW_TAG_member, name: "extra_buttons", scope: !211, file: !87, line: 102, baseType: !269, size: 8, offset: 1696)
!3971 = !DIDerivedType(tag: DW_TAG_member, name: "acks_disable_command", scope: !211, file: !87, line: 103, baseType: !550, size: 8, offset: 1704)
!3972 = !DIDerivedType(tag: DW_TAG_member, name: "model", scope: !211, file: !87, line: 104, baseType: !7, size: 32, offset: 1728)
!3973 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !211, file: !87, line: 105, baseType: !190, size: 64, offset: 1792)
!3974 = !DIDerivedType(tag: DW_TAG_member, name: "out_of_sync_cnt", scope: !211, file: !87, line: 106, baseType: !190, size: 64, offset: 1856)
!3975 = !DIDerivedType(tag: DW_TAG_member, name: "num_resyncs", scope: !211, file: !87, line: 107, baseType: !190, size: 64, offset: 1920)
!3976 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !211, file: !87, line: 108, baseType: !113, size: 32, offset: 1984)
!3977 = !DIDerivedType(tag: DW_TAG_member, name: "devname", scope: !211, file: !87, line: 109, baseType: !3978, size: 512, offset: 2016)
!3978 = !DICompositeType(tag: DW_TAG_array_type, baseType: !198, size: 512, elements: !1831)
!3979 = !DIDerivedType(tag: DW_TAG_member, name: "phys", scope: !211, file: !87, line: 110, baseType: !2573, size: 256, offset: 2528)
!3980 = !DIDerivedType(tag: DW_TAG_member, name: "rate", scope: !211, file: !87, line: 112, baseType: !7, size: 32, offset: 2784)
!3981 = !DIDerivedType(tag: DW_TAG_member, name: "resolution", scope: !211, file: !87, line: 113, baseType: !7, size: 32, offset: 2816)
!3982 = !DIDerivedType(tag: DW_TAG_member, name: "resetafter", scope: !211, file: !87, line: 114, baseType: !7, size: 32, offset: 2848)
!3983 = !DIDerivedType(tag: DW_TAG_member, name: "resync_time", scope: !211, file: !87, line: 115, baseType: !7, size: 32, offset: 2880)
!3984 = !DIDerivedType(tag: DW_TAG_member, name: "smartscroll", scope: !211, file: !87, line: 116, baseType: !550, size: 8, offset: 2912)
!3985 = !DIDerivedType(tag: DW_TAG_member, name: "protocol_handler", scope: !211, file: !87, line: 118, baseType: !3986, size: 64, offset: 2944)
!3986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3987, size: 64)
!3987 = !DISubroutineType(types: !3988)
!3988 = !{!3989, !210}
!3989 = !DIDerivedType(tag: DW_TAG_typedef, name: "psmouse_ret_t", file: !87, line: 41, baseType: !120)
!3990 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !211, file: !87, line: 119, baseType: !3991, size: 64, offset: 3008)
!3991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3992, size: 64)
!3992 = !DISubroutineType(types: !3993)
!3993 = !{null, !210, !7}
!3994 = !DIDerivedType(tag: DW_TAG_member, name: "set_resolution", scope: !211, file: !87, line: 120, baseType: !3991, size: 64, offset: 3072)
!3995 = !DIDerivedType(tag: DW_TAG_member, name: "set_scale", scope: !211, file: !87, line: 121, baseType: !3996, size: 64, offset: 3136)
!3996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3997, size: 64)
!3997 = !DISubroutineType(types: !3998)
!3998 = !{null, !210, !125}
!3999 = !DIDerivedType(tag: DW_TAG_member, name: "reconnect", scope: !211, file: !87, line: 123, baseType: !3961, size: 64, offset: 3200)
!4000 = !DIDerivedType(tag: DW_TAG_member, name: "fast_reconnect", scope: !211, file: !87, line: 124, baseType: !3961, size: 64, offset: 3264)
!4001 = !DIDerivedType(tag: DW_TAG_member, name: "disconnect", scope: !211, file: !87, line: 125, baseType: !4002, size: 64, offset: 3328)
!4002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4003, size: 64)
!4003 = !DISubroutineType(types: !4004)
!4004 = !{null, !210}
!4005 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !211, file: !87, line: 126, baseType: !4002, size: 64, offset: 3392)
!4006 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !211, file: !87, line: 127, baseType: !3961, size: 64, offset: 3456)
!4007 = !DIDerivedType(tag: DW_TAG_member, name: "pt_activate", scope: !211, file: !87, line: 129, baseType: !4002, size: 64, offset: 3520)
!4008 = !DIDerivedType(tag: DW_TAG_member, name: "pt_deactivate", scope: !211, file: !87, line: 130, baseType: !4002, size: 64, offset: 3584)
!4009 = !DIDerivedType(tag: DW_TAG_member, name: "dev2", scope: !207, file: !168, line: 288, baseType: !215, size: 64, offset: 64)
!4010 = !DIDerivedType(tag: DW_TAG_member, name: "dev3", scope: !207, file: !168, line: 289, baseType: !215, size: 64, offset: 128)
!4011 = !DIDerivedType(tag: DW_TAG_member, name: "phys2", scope: !207, file: !168, line: 290, baseType: !2573, size: 256, offset: 192)
!4012 = !DIDerivedType(tag: DW_TAG_member, name: "phys3", scope: !207, file: !168, line: 291, baseType: !2573, size: 256, offset: 448)
!4013 = !DIDerivedType(tag: DW_TAG_member, name: "dev3_register_work", scope: !207, file: !168, line: 292, baseType: !3936, size: 704, offset: 704)
!4014 = !DIDerivedType(tag: DW_TAG_member, name: "nibble_commands", scope: !207, file: !168, line: 295, baseType: !4015, size: 64, offset: 1408)
!4015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4016, size: 64)
!4016 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4017)
!4017 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "alps_nibble_commands", file: !168, line: 205, size: 64, elements: !4018)
!4018 = !{!4019, !4020}
!4019 = !DIDerivedType(tag: DW_TAG_member, name: "command", scope: !4017, file: !168, line: 206, baseType: !262, size: 32)
!4020 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4017, file: !168, line: 207, baseType: !269, size: 8, offset: 32)
!4021 = !DIDerivedType(tag: DW_TAG_member, name: "addr_command", scope: !207, file: !168, line: 296, baseType: !262, size: 32, offset: 1472)
!4022 = !DIDerivedType(tag: DW_TAG_member, name: "proto_version", scope: !207, file: !168, line: 297, baseType: !369, size: 16, offset: 1504)
!4023 = !DIDerivedType(tag: DW_TAG_member, name: "byte0", scope: !207, file: !168, line: 298, baseType: !1307, size: 8, offset: 1520)
!4024 = !DIDerivedType(tag: DW_TAG_member, name: "mask0", scope: !207, file: !168, line: 298, baseType: !1307, size: 8, offset: 1528)
!4025 = !DIDerivedType(tag: DW_TAG_member, name: "dev_id", scope: !207, file: !168, line: 299, baseType: !4026, size: 24, offset: 1536)
!4026 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1307, size: 24, elements: !718)
!4027 = !DIDerivedType(tag: DW_TAG_member, name: "fw_ver", scope: !207, file: !168, line: 300, baseType: !4026, size: 24, offset: 1560)
!4028 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !207, file: !168, line: 301, baseType: !262, size: 32, offset: 1600)
!4029 = !DIDerivedType(tag: DW_TAG_member, name: "x_max", scope: !207, file: !168, line: 302, baseType: !262, size: 32, offset: 1632)
!4030 = !DIDerivedType(tag: DW_TAG_member, name: "y_max", scope: !207, file: !168, line: 303, baseType: !262, size: 32, offset: 1664)
!4031 = !DIDerivedType(tag: DW_TAG_member, name: "x_bits", scope: !207, file: !168, line: 304, baseType: !262, size: 32, offset: 1696)
!4032 = !DIDerivedType(tag: DW_TAG_member, name: "y_bits", scope: !207, file: !168, line: 305, baseType: !262, size: 32, offset: 1728)
!4033 = !DIDerivedType(tag: DW_TAG_member, name: "x_res", scope: !207, file: !168, line: 306, baseType: !7, size: 32, offset: 1760)
!4034 = !DIDerivedType(tag: DW_TAG_member, name: "y_res", scope: !207, file: !168, line: 307, baseType: !7, size: 32, offset: 1792)
!4035 = !DIDerivedType(tag: DW_TAG_member, name: "hw_init", scope: !207, file: !168, line: 309, baseType: !3961, size: 64, offset: 1856)
!4036 = !DIDerivedType(tag: DW_TAG_member, name: "process_packet", scope: !207, file: !168, line: 310, baseType: !4002, size: 64, offset: 1920)
!4037 = !DIDerivedType(tag: DW_TAG_member, name: "decode_fields", scope: !207, file: !168, line: 311, baseType: !4038, size: 64, offset: 1984)
!4038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4039, size: 64)
!4039 = !DISubroutineType(types: !4040)
!4040 = !{!262, !4041, !4063, !210}
!4041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4042, size: 64)
!4042 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "alps_fields", file: !168, line: 232, size: 320, elements: !4043)
!4043 = !{!4044, !4045, !4046, !4047, !4048, !4053, !4055, !4056, !4057, !4058, !4059, !4060, !4061, !4062}
!4044 = !DIDerivedType(tag: DW_TAG_member, name: "x_map", scope: !4042, file: !168, line: 233, baseType: !7, size: 32)
!4045 = !DIDerivedType(tag: DW_TAG_member, name: "y_map", scope: !4042, file: !168, line: 234, baseType: !7, size: 32, offset: 32)
!4046 = !DIDerivedType(tag: DW_TAG_member, name: "fingers", scope: !4042, file: !168, line: 235, baseType: !7, size: 32, offset: 64)
!4047 = !DIDerivedType(tag: DW_TAG_member, name: "pressure", scope: !4042, file: !168, line: 237, baseType: !262, size: 32, offset: 96)
!4048 = !DIDerivedType(tag: DW_TAG_member, name: "st", scope: !4042, file: !168, line: 238, baseType: !4049, size: 32, offset: 128)
!4049 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "input_mt_pos", file: !3071, line: 119, size: 32, elements: !4050)
!4050 = !{!4051, !4052}
!4051 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !4049, file: !3071, line: 120, baseType: !1161, size: 16)
!4052 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !4049, file: !3071, line: 120, baseType: !1161, size: 16, offset: 16)
!4053 = !DIDerivedType(tag: DW_TAG_member, name: "mt", scope: !4042, file: !168, line: 239, baseType: !4054, size: 128, offset: 160)
!4054 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4049, size: 128, elements: !1135)
!4055 = !DIDerivedType(tag: DW_TAG_member, name: "first_mp", scope: !4042, file: !168, line: 241, baseType: !7, size: 1, offset: 288, flags: DIFlagBitField, extraData: i64 288)
!4056 = !DIDerivedType(tag: DW_TAG_member, name: "is_mp", scope: !4042, file: !168, line: 242, baseType: !7, size: 1, offset: 289, flags: DIFlagBitField, extraData: i64 288)
!4057 = !DIDerivedType(tag: DW_TAG_member, name: "left", scope: !4042, file: !168, line: 244, baseType: !7, size: 1, offset: 290, flags: DIFlagBitField, extraData: i64 288)
!4058 = !DIDerivedType(tag: DW_TAG_member, name: "right", scope: !4042, file: !168, line: 245, baseType: !7, size: 1, offset: 291, flags: DIFlagBitField, extraData: i64 288)
!4059 = !DIDerivedType(tag: DW_TAG_member, name: "middle", scope: !4042, file: !168, line: 246, baseType: !7, size: 1, offset: 292, flags: DIFlagBitField, extraData: i64 288)
!4060 = !DIDerivedType(tag: DW_TAG_member, name: "ts_left", scope: !4042, file: !168, line: 248, baseType: !7, size: 1, offset: 293, flags: DIFlagBitField, extraData: i64 288)
!4061 = !DIDerivedType(tag: DW_TAG_member, name: "ts_right", scope: !4042, file: !168, line: 249, baseType: !7, size: 1, offset: 294, flags: DIFlagBitField, extraData: i64 288)
!4062 = !DIDerivedType(tag: DW_TAG_member, name: "ts_middle", scope: !4042, file: !168, line: 250, baseType: !7, size: 1, offset: 295, flags: DIFlagBitField, extraData: i64 288)
!4063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !269, size: 64)
!4064 = !DIDerivedType(tag: DW_TAG_member, name: "set_abs_params", scope: !207, file: !168, line: 313, baseType: !4065, size: 64, offset: 2048)
!4065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4066, size: 64)
!4066 = !DISubroutineType(types: !4067)
!4067 = !{null, !206, !215}
!4068 = !DIDerivedType(tag: DW_TAG_member, name: "prev_fin", scope: !207, file: !168, line: 315, baseType: !262, size: 32, offset: 2112)
!4069 = !DIDerivedType(tag: DW_TAG_member, name: "multi_packet", scope: !207, file: !168, line: 316, baseType: !262, size: 32, offset: 2144)
!4070 = !DIDerivedType(tag: DW_TAG_member, name: "second_touch", scope: !207, file: !168, line: 317, baseType: !262, size: 32, offset: 2176)
!4071 = !DIDerivedType(tag: DW_TAG_member, name: "multi_data", scope: !207, file: !168, line: 318, baseType: !4072, size: 48, offset: 2208)
!4072 = !DICompositeType(tag: DW_TAG_array_type, baseType: !269, size: 48, elements: !1574)
!4073 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !207, file: !168, line: 319, baseType: !4042, size: 320, offset: 2272)
!4074 = !DIDerivedType(tag: DW_TAG_member, name: "quirks", scope: !207, file: !168, line: 320, baseType: !1307, size: 8, offset: 2592)
!4075 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !207, file: !168, line: 321, baseType: !3055, size: 320, offset: 2624)
!4076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !190, size: 64)
!4077 = !DIDerivedType(tag: DW_TAG_typedef, name: "s8", file: !370, line: 16, baseType: !4078)
!4078 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s8", file: !230, line: 20, baseType: !4079)
!4079 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!4080 = !{!0, !4081, !4097, !4100, !4102, !4104, !4106, !4108, !4110, !4112, !4137, !4140, !4142}
!4081 = !DIGlobalVariableExpression(var: !4082, expr: !DIExpression())
!4082 = distinct !DIGlobalVariable(name: "alps_model_data", scope: !2, file: !3, line: 106, type: !4083, isLocal: true, isDefinition: true)
!4083 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4084, size: 2112, elements: !4095)
!4084 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4085)
!4085 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "alps_model_info", file: !168, line: 189, size: 96, elements: !4086)
!4086 = !{!4087, !4088}
!4087 = !DIDerivedType(tag: DW_TAG_member, name: "signature", scope: !4085, file: !168, line: 190, baseType: !4026, size: 24)
!4088 = !DIDerivedType(tag: DW_TAG_member, name: "protocol_info", scope: !4085, file: !168, line: 191, baseType: !4089, size: 64, offset: 32)
!4089 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "alps_protocol_info", file: !168, line: 174, size: 64, elements: !4090)
!4090 = !{!4091, !4092, !4093, !4094}
!4091 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !4089, file: !168, line: 175, baseType: !369, size: 16)
!4092 = !DIDerivedType(tag: DW_TAG_member, name: "byte0", scope: !4089, file: !168, line: 176, baseType: !1307, size: 8, offset: 16)
!4093 = !DIDerivedType(tag: DW_TAG_member, name: "mask0", scope: !4089, file: !168, line: 176, baseType: !1307, size: 8, offset: 24)
!4094 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4089, file: !168, line: 177, baseType: !7, size: 32, offset: 32)
!4095 = !{!4096}
!4096 = !DISubrange(count: 22)
!4097 = !DIGlobalVariableExpression(var: !4098, expr: !DIExpression())
!4098 = distinct !DIGlobalVariable(name: "alps_v4_protocol_data", scope: !2, file: !3, line: 147, type: !4099, isLocal: true, isDefinition: true)
!4099 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4089)
!4100 = !DIGlobalVariableExpression(var: !4101, expr: !DIExpression())
!4101 = distinct !DIGlobalVariable(name: "alps_v5_protocol_data", scope: !2, file: !3, line: 151, type: !4099, isLocal: true, isDefinition: true)
!4102 = !DIGlobalVariableExpression(var: !4103, expr: !DIExpression())
!4103 = distinct !DIGlobalVariable(name: "alps_v7_protocol_data", scope: !2, file: !3, line: 155, type: !4099, isLocal: true, isDefinition: true)
!4104 = !DIGlobalVariableExpression(var: !4105, expr: !DIExpression())
!4105 = distinct !DIGlobalVariable(name: "alps_v3_rushmore_data", scope: !2, file: !3, line: 143, type: !4099, isLocal: true, isDefinition: true)
!4106 = !DIGlobalVariableExpression(var: !4107, expr: !DIExpression())
!4107 = distinct !DIGlobalVariable(name: "alps_v3_protocol_data", scope: !2, file: !3, line: 139, type: !4099, isLocal: true, isDefinition: true)
!4108 = !DIGlobalVariableExpression(var: !4109, expr: !DIExpression())
!4109 = distinct !DIGlobalVariable(name: "alps_v8_protocol_data", scope: !2, file: !3, line: 159, type: !4099, isLocal: true, isDefinition: true)
!4110 = !DIGlobalVariableExpression(var: !4111, expr: !DIExpression())
!4111 = distinct !DIGlobalVariable(name: "alps_v9_protocol_data", scope: !2, file: !3, line: 163, type: !4099, isLocal: true, isDefinition: true)
!4112 = !DIGlobalVariableExpression(var: !4113, expr: !DIExpression())
!4113 = distinct !DIGlobalVariable(name: "alps_dmi_has_separate_stick_buttons", scope: !2, file: !3, line: 170, type: !4114, isLocal: true, isDefinition: true)
!4114 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4115, size: 13760, elements: !4135)
!4115 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4116)
!4116 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dmi_system_id", file: !3162, line: 566, size: 2752, elements: !4117)
!4117 = !{!4118, !4123, !4124, !4134}
!4118 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !4116, file: !3162, line: 567, baseType: !4119, size: 64)
!4119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4120, size: 64)
!4120 = !DISubroutineType(types: !4121)
!4121 = !{!262, !4122}
!4122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4115, size: 64)
!4123 = !DIDerivedType(tag: DW_TAG_member, name: "ident", scope: !4116, file: !3162, line: 568, baseType: !220, size: 64, offset: 64)
!4124 = !DIDerivedType(tag: DW_TAG_member, name: "matches", scope: !4116, file: !3162, line: 569, baseType: !4125, size: 2560, offset: 128)
!4125 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4126, size: 2560, elements: !1135)
!4126 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dmi_strmatch", file: !3162, line: 560, size: 640, elements: !4127)
!4127 = !{!4128, !4129, !4130}
!4128 = !DIDerivedType(tag: DW_TAG_member, name: "slot", scope: !4126, file: !3162, line: 561, baseType: !269, size: 7, flags: DIFlagBitField, extraData: i64 0)
!4129 = !DIDerivedType(tag: DW_TAG_member, name: "exact_match", scope: !4126, file: !3162, line: 562, baseType: !269, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!4130 = !DIDerivedType(tag: DW_TAG_member, name: "substr", scope: !4126, file: !3162, line: 563, baseType: !4131, size: 632, offset: 8)
!4131 = !DICompositeType(tag: DW_TAG_array_type, baseType: !198, size: 632, elements: !4132)
!4132 = !{!4133}
!4133 = !DISubrange(count: 79)
!4134 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !4116, file: !3162, line: 570, baseType: !191, size: 64, offset: 2688)
!4135 = !{!4136}
!4136 = !DISubrange(count: 5)
!4137 = !DIGlobalVariableExpression(var: !4138, expr: !DIExpression())
!4138 = distinct !DIGlobalVariable(name: "alps_v3_nibble_commands", scope: !2, file: !3, line: 35, type: !4139, isLocal: true, isDefinition: true)
!4139 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4016, size: 1024, elements: !1684)
!4140 = !DIGlobalVariableExpression(var: !4141, expr: !DIExpression())
!4141 = distinct !DIGlobalVariable(name: "alps_v4_nibble_commands", scope: !2, file: !3, line: 54, type: !4139, isLocal: true, isDefinition: true)
!4142 = !DIGlobalVariableExpression(var: !4143, expr: !DIExpression())
!4143 = distinct !DIGlobalVariable(name: "alps_v6_nibble_commands", scope: !2, file: !3, line: 73, type: !4139, isLocal: true, isDefinition: true)
!4144 = !{!"rsp"}
!4145 = !{i32 7, !"Dwarf Version", i32 4}
!4146 = !{i32 2, !"Debug Info Version", i32 3}
!4147 = !{i32 1, !"wchar_size", i32 2}
!4148 = !{i32 1, !"Code Model", i32 2}
!4149 = !{!"clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)"}
!4150 = distinct !DISubprogram(name: "alps_init", scope: !3, file: !3, line: 3038, type: !3962, scopeLine: 3039, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !407)
!4151 = !DILocalVariable(name: "psmouse", arg: 1, scope: !4150, file: !3, line: 3038, type: !210)
!4152 = !DILocation(line: 3038, column: 31, scope: !4150)
!4153 = !DILocalVariable(name: "priv", scope: !4150, file: !3, line: 3040, type: !206)
!4154 = !DILocation(line: 3040, column: 20, scope: !4150)
!4155 = !DILocation(line: 3040, column: 27, scope: !4150)
!4156 = !DILocation(line: 3040, column: 36, scope: !4150)
!4157 = !DILocalVariable(name: "dev1", scope: !4150, file: !3, line: 3041, type: !215)
!4158 = !DILocation(line: 3041, column: 20, scope: !4150)
!4159 = !DILocation(line: 3041, column: 27, scope: !4150)
!4160 = !DILocation(line: 3041, column: 36, scope: !4150)
!4161 = !DILocalVariable(name: "error", scope: !4150, file: !3, line: 3042, type: !262)
!4162 = !DILocation(line: 3042, column: 6, scope: !4150)
!4163 = !DILocation(line: 3044, column: 10, scope: !4150)
!4164 = !DILocation(line: 3044, column: 16, scope: !4150)
!4165 = !DILocation(line: 3044, column: 24, scope: !4150)
!4166 = !DILocation(line: 3044, column: 8, scope: !4150)
!4167 = !DILocation(line: 3045, column: 6, scope: !4168)
!4168 = distinct !DILexicalBlock(scope: !4150, file: !3, line: 3045, column: 6)
!4169 = !DILocation(line: 3045, column: 6, scope: !4150)
!4170 = !DILocation(line: 3046, column: 3, scope: !4168)
!4171 = !DILocation(line: 3052, column: 22, scope: !4150)
!4172 = !DILocation(line: 3052, column: 28, scope: !4150)
!4173 = !DILocation(line: 3052, column: 2, scope: !4150)
!4174 = !DILocation(line: 3053, column: 21, scope: !4150)
!4175 = !DILocation(line: 3053, column: 27, scope: !4150)
!4176 = !DILocation(line: 3053, column: 2, scope: !4150)
!4177 = !DILocation(line: 3054, column: 21, scope: !4150)
!4178 = !DILocation(line: 3054, column: 27, scope: !4150)
!4179 = !DILocation(line: 3054, column: 2, scope: !4150)
!4180 = !DILocation(line: 3059, column: 2, scope: !4150)
!4181 = !DILocation(line: 3059, column: 8, scope: !4150)
!4182 = !DILocation(line: 3059, column: 32, scope: !4150)
!4183 = !DILocation(line: 3060, column: 2, scope: !4150)
!4184 = !DILocation(line: 3060, column: 8, scope: !4150)
!4185 = !DILocation(line: 3060, column: 36, scope: !4150)
!4186 = !DILocation(line: 3061, column: 2, scope: !4150)
!4187 = !DILocation(line: 3061, column: 8, scope: !4150)
!4188 = !DILocation(line: 3061, column: 42, scope: !4150)
!4189 = !DILocation(line: 3062, column: 2, scope: !4150)
!4190 = !DILocation(line: 3062, column: 8, scope: !4150)
!4191 = !DILocation(line: 3062, column: 35, scope: !4150)
!4192 = !DILocation(line: 3065, column: 2, scope: !4150)
!4193 = !DILocation(line: 3065, column: 8, scope: !4150)
!4194 = !DILocation(line: 3065, column: 32, scope: !4150)
!4195 = !DILocation(line: 3067, column: 2, scope: !4150)
!4196 = !DILocation(line: 3067, column: 8, scope: !4150)
!4197 = !DILocation(line: 3067, column: 23, scope: !4150)
!4198 = !DILocation(line: 3067, column: 29, scope: !4150)
!4199 = !DILocation(line: 3069, column: 6, scope: !4200)
!4200 = distinct !DILexicalBlock(scope: !4150, file: !3, line: 3069, column: 6)
!4201 = !DILocation(line: 3069, column: 12, scope: !4200)
!4202 = !DILocation(line: 3069, column: 18, scope: !4200)
!4203 = !DILocation(line: 3069, column: 6, scope: !4150)
!4204 = !DILocation(line: 3070, column: 3, scope: !4205)
!4205 = distinct !DILexicalBlock(scope: !4200, file: !3, line: 3069, column: 32)
!4206 = !DILocation(line: 3070, column: 9, scope: !4205)
!4207 = !DILocation(line: 3070, column: 33, scope: !4205)
!4208 = !DILocation(line: 3071, column: 3, scope: !4205)
!4209 = !DILocation(line: 3071, column: 9, scope: !4205)
!4210 = !DILocation(line: 3071, column: 37, scope: !4205)
!4211 = !DILocation(line: 3072, column: 2, scope: !4205)
!4212 = !DILocation(line: 3074, column: 6, scope: !4213)
!4213 = distinct !DILexicalBlock(scope: !4150, file: !3, line: 3074, column: 6)
!4214 = !DILocation(line: 3074, column: 12, scope: !4213)
!4215 = !DILocation(line: 3074, column: 18, scope: !4213)
!4216 = !DILocation(line: 3074, column: 6, scope: !4150)
!4217 = !DILocation(line: 3075, column: 3, scope: !4218)
!4218 = distinct !DILexicalBlock(scope: !4213, file: !3, line: 3074, column: 51)
!4219 = !DILocation(line: 3075, column: 9, scope: !4218)
!4220 = !DILocation(line: 3075, column: 39, scope: !4218)
!4221 = !DILocation(line: 3076, column: 3, scope: !4218)
!4222 = !DILocation(line: 3076, column: 9, scope: !4218)
!4223 = !DILocation(line: 3076, column: 36, scope: !4218)
!4224 = !DILocation(line: 3077, column: 2, scope: !4218)
!4225 = !DILocation(line: 3079, column: 6, scope: !4226)
!4226 = distinct !DILexicalBlock(scope: !4150, file: !3, line: 3079, column: 6)
!4227 = !DILocation(line: 3079, column: 12, scope: !4226)
!4228 = !DILocation(line: 3079, column: 18, scope: !4226)
!4229 = !DILocation(line: 3079, column: 6, scope: !4150)
!4230 = !DILocation(line: 3080, column: 3, scope: !4231)
!4231 = distinct !DILexicalBlock(scope: !4226, file: !3, line: 3079, column: 39)
!4232 = !DILocation(line: 3080, column: 9, scope: !4231)
!4233 = !DILocation(line: 3080, column: 33, scope: !4231)
!4234 = !DILocation(line: 3081, column: 3, scope: !4231)
!4235 = !DILocation(line: 3081, column: 9, scope: !4231)
!4236 = !DILocation(line: 3081, column: 33, scope: !4231)
!4237 = !DILocation(line: 3082, column: 3, scope: !4231)
!4238 = !DILocation(line: 3082, column: 9, scope: !4231)
!4239 = !DILocation(line: 3082, column: 33, scope: !4231)
!4240 = !DILocation(line: 3083, column: 3, scope: !4231)
!4241 = !DILocation(line: 3083, column: 9, scope: !4231)
!4242 = !DILocation(line: 3083, column: 33, scope: !4231)
!4243 = !DILocation(line: 3084, column: 2, scope: !4231)
!4244 = !DILocation(line: 3084, column: 13, scope: !4245)
!4245 = distinct !DILexicalBlock(scope: !4226, file: !3, line: 3084, column: 13)
!4246 = !DILocation(line: 3084, column: 19, scope: !4245)
!4247 = !DILocation(line: 3084, column: 25, scope: !4245)
!4248 = !DILocation(line: 3084, column: 13, scope: !4226)
!4249 = !DILocation(line: 3085, column: 33, scope: !4250)
!4250 = distinct !DILexicalBlock(scope: !4245, file: !3, line: 3084, column: 43)
!4251 = !DILocation(line: 3085, column: 39, scope: !4250)
!4252 = !DILocation(line: 3085, column: 3, scope: !4250)
!4253 = !DILocation(line: 3086, column: 24, scope: !4250)
!4254 = !DILocation(line: 3086, column: 30, scope: !4250)
!4255 = !DILocation(line: 3086, column: 3, scope: !4250)
!4256 = !DILocation(line: 3087, column: 2, scope: !4250)
!4257 = !DILocation(line: 3088, column: 3, scope: !4258)
!4258 = distinct !DILexicalBlock(scope: !4245, file: !3, line: 3087, column: 9)
!4259 = !DILocation(line: 3088, column: 9, scope: !4258)
!4260 = !DILocation(line: 3088, column: 38, scope: !4258)
!4261 = !DILocation(line: 3091, column: 6, scope: !4262)
!4262 = distinct !DILexicalBlock(scope: !4150, file: !3, line: 3091, column: 6)
!4263 = !DILocation(line: 3091, column: 12, scope: !4262)
!4264 = !DILocation(line: 3091, column: 18, scope: !4262)
!4265 = !DILocation(line: 3091, column: 6, scope: !4150)
!4266 = !DILocalVariable(name: "dev2", scope: !4267, file: !3, line: 3092, type: !215)
!4267 = distinct !DILexicalBlock(scope: !4262, file: !3, line: 3091, column: 36)
!4268 = !DILocation(line: 3092, column: 21, scope: !4267)
!4269 = !DILocation(line: 3094, column: 10, scope: !4267)
!4270 = !DILocation(line: 3094, column: 8, scope: !4267)
!4271 = !DILocation(line: 3095, column: 8, scope: !4272)
!4272 = distinct !DILexicalBlock(scope: !4267, file: !3, line: 3095, column: 7)
!4273 = !DILocation(line: 3095, column: 7, scope: !4267)
!4274 = !DILocation(line: 3096, column: 4, scope: !4275)
!4275 = distinct !DILexicalBlock(scope: !4272, file: !3, line: 3095, column: 14)
!4276 = !DILocation(line: 3098, column: 10, scope: !4275)
!4277 = !DILocation(line: 3099, column: 4, scope: !4275)
!4278 = !DILocation(line: 3102, column: 12, scope: !4267)
!4279 = !DILocation(line: 3102, column: 18, scope: !4267)
!4280 = !DILocation(line: 3103, column: 5, scope: !4267)
!4281 = !DILocation(line: 3103, column: 14, scope: !4267)
!4282 = !DILocation(line: 3103, column: 21, scope: !4267)
!4283 = !DILocation(line: 3103, column: 28, scope: !4267)
!4284 = !DILocation(line: 3102, column: 3, scope: !4267)
!4285 = !DILocation(line: 3104, column: 16, scope: !4267)
!4286 = !DILocation(line: 3104, column: 22, scope: !4267)
!4287 = !DILocation(line: 3104, column: 3, scope: !4267)
!4288 = !DILocation(line: 3104, column: 9, scope: !4267)
!4289 = !DILocation(line: 3104, column: 14, scope: !4267)
!4290 = !DILocation(line: 3110, column: 3, scope: !4267)
!4291 = !DILocation(line: 3110, column: 9, scope: !4267)
!4292 = !DILocation(line: 3110, column: 14, scope: !4267)
!4293 = !DILocation(line: 3112, column: 3, scope: !4267)
!4294 = !DILocation(line: 3112, column: 9, scope: !4267)
!4295 = !DILocation(line: 3112, column: 12, scope: !4267)
!4296 = !DILocation(line: 3112, column: 20, scope: !4267)
!4297 = !DILocation(line: 3113, column: 3, scope: !4267)
!4298 = !DILocation(line: 3113, column: 9, scope: !4267)
!4299 = !DILocation(line: 3113, column: 12, scope: !4267)
!4300 = !DILocation(line: 3113, column: 20, scope: !4267)
!4301 = !DILocation(line: 3114, column: 3, scope: !4267)
!4302 = !DILocation(line: 3114, column: 9, scope: !4267)
!4303 = !DILocation(line: 3114, column: 12, scope: !4267)
!4304 = !DILocation(line: 3114, column: 20, scope: !4267)
!4305 = !DILocation(line: 3115, column: 22, scope: !4267)
!4306 = !DILocation(line: 3115, column: 28, scope: !4267)
!4307 = !DILocation(line: 3115, column: 3, scope: !4267)
!4308 = !DILocation(line: 3115, column: 9, scope: !4267)
!4309 = !DILocation(line: 3115, column: 12, scope: !4267)
!4310 = !DILocation(line: 3115, column: 20, scope: !4267)
!4311 = !DILocation(line: 3116, column: 23, scope: !4267)
!4312 = !DILocation(line: 3116, column: 32, scope: !4267)
!4313 = !DILocation(line: 3116, column: 39, scope: !4267)
!4314 = !DILocation(line: 3116, column: 46, scope: !4267)
!4315 = !DILocation(line: 3116, column: 3, scope: !4267)
!4316 = !DILocation(line: 3116, column: 9, scope: !4267)
!4317 = !DILocation(line: 3116, column: 13, scope: !4267)
!4318 = !DILocation(line: 3116, column: 20, scope: !4267)
!4319 = !DILocation(line: 3118, column: 24, scope: !4267)
!4320 = !DILocation(line: 3118, column: 3, scope: !4267)
!4321 = !DILocation(line: 3119, column: 24, scope: !4267)
!4322 = !DILocation(line: 3119, column: 3, scope: !4267)
!4323 = !DILocation(line: 3120, column: 7, scope: !4324)
!4324 = distinct !DILexicalBlock(scope: !4267, file: !3, line: 3120, column: 7)
!4325 = !DILocation(line: 3120, column: 13, scope: !4324)
!4326 = !DILocation(line: 3120, column: 19, scope: !4324)
!4327 = !DILocation(line: 3120, column: 7, scope: !4267)
!4328 = !DILocation(line: 3121, column: 25, scope: !4329)
!4329 = distinct !DILexicalBlock(scope: !4324, file: !3, line: 3120, column: 51)
!4330 = !DILocation(line: 3121, column: 4, scope: !4329)
!4331 = !DILocation(line: 3122, column: 25, scope: !4329)
!4332 = !DILocation(line: 3122, column: 4, scope: !4329)
!4333 = !DILocation(line: 3123, column: 3, scope: !4329)
!4334 = !DILocation(line: 3124, column: 24, scope: !4267)
!4335 = !DILocation(line: 3124, column: 3, scope: !4267)
!4336 = !DILocation(line: 3125, column: 24, scope: !4267)
!4337 = !DILocation(line: 3125, column: 3, scope: !4267)
!4338 = !DILocation(line: 3126, column: 24, scope: !4267)
!4339 = !DILocation(line: 3126, column: 3, scope: !4267)
!4340 = !DILocation(line: 3128, column: 33, scope: !4267)
!4341 = !DILocation(line: 3128, column: 39, scope: !4267)
!4342 = !DILocation(line: 3128, column: 3, scope: !4267)
!4343 = !DILocation(line: 3129, column: 40, scope: !4267)
!4344 = !DILocation(line: 3129, column: 46, scope: !4267)
!4345 = !DILocation(line: 3129, column: 3, scope: !4267)
!4346 = !DILocation(line: 3131, column: 33, scope: !4267)
!4347 = !DILocation(line: 3131, column: 11, scope: !4267)
!4348 = !DILocation(line: 3131, column: 9, scope: !4267)
!4349 = !DILocation(line: 3132, column: 7, scope: !4350)
!4350 = distinct !DILexicalBlock(scope: !4267, file: !3, line: 3132, column: 7)
!4351 = !DILocation(line: 3132, column: 7, scope: !4267)
!4352 = !DILocation(line: 3133, column: 4, scope: !4353)
!4353 = distinct !DILexicalBlock(scope: !4350, file: !3, line: 3132, column: 14)
!4354 = !DILocation(line: 3136, column: 22, scope: !4353)
!4355 = !DILocation(line: 3136, column: 4, scope: !4353)
!4356 = !DILocation(line: 3137, column: 4, scope: !4353)
!4357 = !DILocation(line: 3140, column: 16, scope: !4267)
!4358 = !DILocation(line: 3140, column: 3, scope: !4267)
!4359 = !DILocation(line: 3140, column: 9, scope: !4267)
!4360 = !DILocation(line: 3140, column: 14, scope: !4267)
!4361 = !DILocation(line: 3141, column: 2, scope: !4267)
!4362 = !DILocation(line: 3143, column: 18, scope: !4150)
!4363 = !DILocation(line: 3143, column: 2, scope: !4150)
!4364 = !DILocation(line: 3143, column: 8, scope: !4150)
!4365 = !DILocation(line: 3143, column: 16, scope: !4150)
!4366 = !DILocation(line: 3145, column: 2, scope: !4150)
!4367 = !DILocation(line: 3145, column: 2, scope: !4368)
!4368 = distinct !DILexicalBlock(scope: !4150, file: !3, line: 3145, column: 2)
!4369 = !DILocation(line: 3145, column: 2, scope: !4370)
!4370 = distinct !DILexicalBlock(scope: !4368, file: !3, line: 3145, column: 2)
!4371 = !DILocation(line: 3148, column: 2, scope: !4150)
!4372 = !DILocation(line: 3148, column: 11, scope: !4150)
!4373 = !DILocation(line: 3148, column: 28, scope: !4150)
!4374 = !DILocation(line: 3149, column: 2, scope: !4150)
!4375 = !DILocation(line: 3149, column: 11, scope: !4150)
!4376 = !DILocation(line: 3149, column: 16, scope: !4150)
!4377 = !DILocation(line: 3150, column: 2, scope: !4150)
!4378 = !DILocation(line: 3150, column: 11, scope: !4150)
!4379 = !DILocation(line: 3150, column: 22, scope: !4150)
!4380 = !DILocation(line: 3151, column: 2, scope: !4150)
!4381 = !DILocation(line: 3151, column: 11, scope: !4150)
!4382 = !DILocation(line: 3151, column: 21, scope: !4150)
!4383 = !DILocation(line: 3152, column: 21, scope: !4150)
!4384 = !DILocation(line: 3152, column: 27, scope: !4150)
!4385 = !DILocation(line: 3152, column: 41, scope: !4150)
!4386 = !DILocation(line: 3152, column: 2, scope: !4150)
!4387 = !DILocation(line: 3152, column: 11, scope: !4150)
!4388 = !DILocation(line: 3152, column: 19, scope: !4150)
!4389 = !DILocation(line: 3155, column: 2, scope: !4150)
!4390 = !DILocation(line: 3155, column: 11, scope: !4150)
!4391 = !DILocation(line: 3155, column: 23, scope: !4150)
!4392 = !DILocation(line: 3158, column: 24, scope: !4150)
!4393 = !DILocation(line: 3158, column: 33, scope: !4150)
!4394 = !DILocation(line: 3158, column: 41, scope: !4150)
!4395 = !DILocation(line: 3158, column: 2, scope: !4150)
!4396 = !DILocation(line: 3158, column: 11, scope: !4150)
!4397 = !DILocation(line: 3158, column: 22, scope: !4150)
!4398 = !DILocation(line: 3160, column: 2, scope: !4150)
!4399 = !DILabel(scope: !4150, name: "init_fail", file: !3, line: 3162)
!4400 = !DILocation(line: 3162, column: 1, scope: !4150)
!4401 = !DILocation(line: 3163, column: 16, scope: !4150)
!4402 = !DILocation(line: 3163, column: 2, scope: !4150)
!4403 = !DILocation(line: 3168, column: 8, scope: !4150)
!4404 = !DILocation(line: 3168, column: 17, scope: !4150)
!4405 = !DILocation(line: 3168, column: 2, scope: !4150)
!4406 = !DILocation(line: 3169, column: 2, scope: !4150)
!4407 = !DILocation(line: 3169, column: 11, scope: !4150)
!4408 = !DILocation(line: 3169, column: 19, scope: !4150)
!4409 = !DILocation(line: 3170, column: 9, scope: !4150)
!4410 = !DILocation(line: 3170, column: 2, scope: !4150)
!4411 = !DILocation(line: 3171, column: 1, scope: !4150)
!4412 = distinct !DISubprogram(name: "__clear_bit", scope: !4413, file: !4413, line: 40, type: !4414, scopeLine: 41, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !407)
!4413 = !DIFile(filename: "./include/asm-generic/bitops/instrumented-non-atomic.h", directory: "/home/lizy2001/genbc/linux")
!4414 = !DISubroutineType(types: !4415)
!4415 = !{null, !131, !4416}
!4416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4417, size: 64)
!4417 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !190)
!4418 = !DILocalVariable(name: "nr", arg: 1, scope: !4419, file: !4420, line: 92, type: !131)
!4419 = distinct !DISubprogram(name: "arch___clear_bit", scope: !4420, file: !4420, line: 92, type: !4414, scopeLine: 93, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !407)
!4420 = !DIFile(filename: "./arch/x86/include/asm/bitops.h", directory: "/home/lizy2001/genbc/linux")
!4421 = !DILocation(line: 92, column: 23, scope: !4419, inlinedAt: !4422)
!4422 = distinct !DILocation(line: 43, column: 2, scope: !4412)
!4423 = !DILocalVariable(name: "addr", arg: 2, scope: !4419, file: !4420, line: 92, type: !4416)
!4424 = !DILocation(line: 92, column: 51, scope: !4419, inlinedAt: !4422)
!4425 = !DILocalVariable(name: "v", arg: 1, scope: !4426, file: !4427, line: 39, type: !4430)
!4426 = distinct !DISubprogram(name: "instrument_write", scope: !4427, file: !4427, line: 39, type: !4428, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !407)
!4427 = !DIFile(filename: "./include/linux/instrumented.h", directory: "/home/lizy2001/genbc/linux")
!4428 = !DISubroutineType(types: !4429)
!4429 = !{null, !4430, !639}
!4430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4431, size: 64)
!4431 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4432)
!4432 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: null)
!4433 = !DILocation(line: 39, column: 67, scope: !4426, inlinedAt: !4434)
!4434 = distinct !DILocation(line: 42, column: 2, scope: !4412)
!4435 = !DILocalVariable(name: "size", arg: 2, scope: !4426, file: !4427, line: 39, type: !639)
!4436 = !DILocation(line: 39, column: 77, scope: !4426, inlinedAt: !4434)
!4437 = !DILocalVariable(name: "nr", arg: 1, scope: !4412, file: !4413, line: 40, type: !131)
!4438 = !DILocation(line: 40, column: 37, scope: !4412)
!4439 = !DILocalVariable(name: "addr", arg: 2, scope: !4412, file: !4413, line: 40, type: !4416)
!4440 = !DILocation(line: 40, column: 65, scope: !4412)
!4441 = !DILocation(line: 42, column: 19, scope: !4412)
!4442 = !DILocation(line: 42, column: 26, scope: !4412)
!4443 = !DILocation(line: 42, column: 24, scope: !4412)
!4444 = !DILocation(line: 41, column: 20, scope: !4426, inlinedAt: !4434)
!4445 = !DILocation(line: 41, column: 23, scope: !4426, inlinedAt: !4434)
!4446 = !DILocation(line: 41, column: 2, scope: !4426, inlinedAt: !4434)
!4447 = !DILocation(line: 42, column: 2, scope: !4426, inlinedAt: !4434)
!4448 = !DILocation(line: 43, column: 19, scope: !4412)
!4449 = !DILocation(line: 43, column: 23, scope: !4412)
!4450 = !DILocation(line: 94, column: 44, scope: !4419, inlinedAt: !4422)
!4451 = !DILocation(line: 94, column: 56, scope: !4419, inlinedAt: !4422)
!4452 = !DILocation(line: 94, column: 2, scope: !4419, inlinedAt: !4422)
!4453 = !{i32 -2147061475}
!4454 = !DILocation(line: 44, column: 1, scope: !4412)
!4455 = distinct !DISubprogram(name: "set_bit", scope: !4456, file: !4456, line: 26, type: !4414, scopeLine: 27, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !407)
!4456 = !DIFile(filename: "./include/asm-generic/bitops/instrumented-atomic.h", directory: "/home/lizy2001/genbc/linux")
!4457 = !DILocalVariable(name: "nr", arg: 1, scope: !4458, file: !4420, line: 52, type: !131)
!4458 = distinct !DISubprogram(name: "arch_set_bit", scope: !4420, file: !4420, line: 52, type: !4414, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !407)
!4459 = !DILocation(line: 52, column: 19, scope: !4458, inlinedAt: !4460)
!4460 = distinct !DILocation(line: 29, column: 2, scope: !4455)
!4461 = !DILocalVariable(name: "addr", arg: 2, scope: !4458, file: !4420, line: 52, type: !4416)
!4462 = !DILocation(line: 52, column: 47, scope: !4458, inlinedAt: !4460)
!4463 = !DILocalVariable(name: "v", arg: 1, scope: !4464, file: !4427, line: 84, type: !4430)
!4464 = distinct !DISubprogram(name: "instrument_atomic_write", scope: !4427, file: !4427, line: 84, type: !4428, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !407)
!4465 = !DILocation(line: 84, column: 74, scope: !4464, inlinedAt: !4466)
!4466 = distinct !DILocation(line: 28, column: 2, scope: !4455)
!4467 = !DILocalVariable(name: "size", arg: 2, scope: !4464, file: !4427, line: 84, type: !639)
!4468 = !DILocation(line: 84, column: 84, scope: !4464, inlinedAt: !4466)
!4469 = !DILocalVariable(name: "nr", arg: 1, scope: !4455, file: !4456, line: 26, type: !131)
!4470 = !DILocation(line: 26, column: 33, scope: !4455)
!4471 = !DILocalVariable(name: "addr", arg: 2, scope: !4455, file: !4456, line: 26, type: !4416)
!4472 = !DILocation(line: 26, column: 61, scope: !4455)
!4473 = !DILocation(line: 28, column: 26, scope: !4455)
!4474 = !DILocation(line: 28, column: 33, scope: !4455)
!4475 = !DILocation(line: 28, column: 31, scope: !4455)
!4476 = !DILocation(line: 86, column: 20, scope: !4464, inlinedAt: !4466)
!4477 = !DILocation(line: 86, column: 23, scope: !4464, inlinedAt: !4466)
!4478 = !DILocation(line: 86, column: 2, scope: !4464, inlinedAt: !4466)
!4479 = !DILocation(line: 87, column: 2, scope: !4464, inlinedAt: !4466)
!4480 = !DILocation(line: 29, column: 15, scope: !4455)
!4481 = !DILocation(line: 29, column: 19, scope: !4455)
!4482 = !DILocation(line: 54, column: 27, scope: !4483, inlinedAt: !4460)
!4483 = distinct !DILexicalBlock(scope: !4458, file: !4420, line: 54, column: 6)
!4484 = !DILocation(line: 54, column: 6, scope: !4483, inlinedAt: !4460)
!4485 = !DILocation(line: 54, column: 6, scope: !4458, inlinedAt: !4460)
!4486 = !DILocation(line: 56, column: 6, scope: !4487, inlinedAt: !4460)
!4487 = distinct !DILexicalBlock(scope: !4483, file: !4420, line: 54, column: 32)
!4488 = !DILocation(line: 57, column: 12, scope: !4487, inlinedAt: !4460)
!4489 = !DILocation(line: 55, column: 3, scope: !4487, inlinedAt: !4460)
!4490 = !{i32 -2147063310}
!4491 = !DILocation(line: 59, column: 2, scope: !4487, inlinedAt: !4460)
!4492 = !DILocation(line: 61, column: 8, scope: !4493, inlinedAt: !4460)
!4493 = distinct !DILexicalBlock(scope: !4483, file: !4420, line: 59, column: 9)
!4494 = !DILocation(line: 61, column: 32, scope: !4493, inlinedAt: !4460)
!4495 = !DILocation(line: 60, column: 3, scope: !4493, inlinedAt: !4460)
!4496 = !{i32 -2147063178}
!4497 = !DILocation(line: 30, column: 1, scope: !4455)
!4498 = distinct !DISubprogram(name: "clear_bit", scope: !4456, file: !4456, line: 39, type: !4414, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !407)
!4499 = !DILocalVariable(name: "nr", arg: 1, scope: !4500, file: !4420, line: 72, type: !131)
!4500 = distinct !DISubprogram(name: "arch_clear_bit", scope: !4420, file: !4420, line: 72, type: !4414, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !407)
!4501 = !DILocation(line: 72, column: 21, scope: !4500, inlinedAt: !4502)
!4502 = distinct !DILocation(line: 42, column: 2, scope: !4498)
!4503 = !DILocalVariable(name: "addr", arg: 2, scope: !4500, file: !4420, line: 72, type: !4416)
!4504 = !DILocation(line: 72, column: 49, scope: !4500, inlinedAt: !4502)
!4505 = !DILocation(line: 84, column: 74, scope: !4464, inlinedAt: !4506)
!4506 = distinct !DILocation(line: 41, column: 2, scope: !4498)
!4507 = !DILocation(line: 84, column: 84, scope: !4464, inlinedAt: !4506)
!4508 = !DILocalVariable(name: "nr", arg: 1, scope: !4498, file: !4456, line: 39, type: !131)
!4509 = !DILocation(line: 39, column: 35, scope: !4498)
!4510 = !DILocalVariable(name: "addr", arg: 2, scope: !4498, file: !4456, line: 39, type: !4416)
!4511 = !DILocation(line: 39, column: 63, scope: !4498)
!4512 = !DILocation(line: 41, column: 26, scope: !4498)
!4513 = !DILocation(line: 41, column: 33, scope: !4498)
!4514 = !DILocation(line: 41, column: 31, scope: !4498)
!4515 = !DILocation(line: 86, column: 20, scope: !4464, inlinedAt: !4506)
!4516 = !DILocation(line: 86, column: 23, scope: !4464, inlinedAt: !4506)
!4517 = !DILocation(line: 86, column: 2, scope: !4464, inlinedAt: !4506)
!4518 = !DILocation(line: 87, column: 2, scope: !4464, inlinedAt: !4506)
!4519 = !DILocation(line: 42, column: 17, scope: !4498)
!4520 = !DILocation(line: 42, column: 21, scope: !4498)
!4521 = !DILocation(line: 74, column: 27, scope: !4522, inlinedAt: !4502)
!4522 = distinct !DILexicalBlock(scope: !4500, file: !4420, line: 74, column: 6)
!4523 = !DILocation(line: 74, column: 6, scope: !4522, inlinedAt: !4502)
!4524 = !DILocation(line: 74, column: 6, scope: !4500, inlinedAt: !4502)
!4525 = !DILocation(line: 76, column: 6, scope: !4526, inlinedAt: !4502)
!4526 = distinct !DILexicalBlock(scope: !4522, file: !4420, line: 74, column: 32)
!4527 = !DILocation(line: 77, column: 13, scope: !4526, inlinedAt: !4502)
!4528 = !DILocation(line: 77, column: 12, scope: !4526, inlinedAt: !4502)
!4529 = !DILocation(line: 75, column: 3, scope: !4526, inlinedAt: !4502)
!4530 = !{i32 -2147062356}
!4531 = !DILocation(line: 78, column: 2, scope: !4526, inlinedAt: !4502)
!4532 = !DILocation(line: 80, column: 8, scope: !4533, inlinedAt: !4502)
!4533 = distinct !DILexicalBlock(scope: !4522, file: !4420, line: 78, column: 9)
!4534 = !DILocation(line: 80, column: 32, scope: !4533, inlinedAt: !4502)
!4535 = !DILocation(line: 79, column: 3, scope: !4533, inlinedAt: !4502)
!4536 = !{i32 -2147062224}
!4537 = !DILocation(line: 43, column: 1, scope: !4498)
!4538 = distinct !DISubprogram(name: "__set_bit", scope: !4413, file: !4413, line: 25, type: !4414, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !407)
!4539 = !DILocalVariable(name: "nr", arg: 1, scope: !4540, file: !4420, line: 66, type: !131)
!4540 = distinct !DISubprogram(name: "arch___set_bit", scope: !4420, file: !4420, line: 66, type: !4414, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !407)
!4541 = !DILocation(line: 66, column: 21, scope: !4540, inlinedAt: !4542)
!4542 = distinct !DILocation(line: 28, column: 2, scope: !4538)
!4543 = !DILocalVariable(name: "addr", arg: 2, scope: !4540, file: !4420, line: 66, type: !4416)
!4544 = !DILocation(line: 66, column: 49, scope: !4540, inlinedAt: !4542)
!4545 = !DILocation(line: 39, column: 67, scope: !4426, inlinedAt: !4546)
!4546 = distinct !DILocation(line: 27, column: 2, scope: !4538)
!4547 = !DILocation(line: 39, column: 77, scope: !4426, inlinedAt: !4546)
!4548 = !DILocalVariable(name: "nr", arg: 1, scope: !4538, file: !4413, line: 25, type: !131)
!4549 = !DILocation(line: 25, column: 35, scope: !4538)
!4550 = !DILocalVariable(name: "addr", arg: 2, scope: !4538, file: !4413, line: 25, type: !4416)
!4551 = !DILocation(line: 25, column: 63, scope: !4538)
!4552 = !DILocation(line: 27, column: 19, scope: !4538)
!4553 = !DILocation(line: 27, column: 26, scope: !4538)
!4554 = !DILocation(line: 27, column: 24, scope: !4538)
!4555 = !DILocation(line: 41, column: 20, scope: !4426, inlinedAt: !4546)
!4556 = !DILocation(line: 41, column: 23, scope: !4426, inlinedAt: !4546)
!4557 = !DILocation(line: 41, column: 2, scope: !4426, inlinedAt: !4546)
!4558 = !DILocation(line: 42, column: 2, scope: !4426, inlinedAt: !4546)
!4559 = !DILocation(line: 28, column: 17, scope: !4538)
!4560 = !DILocation(line: 28, column: 21, scope: !4538)
!4561 = !DILocation(line: 68, column: 44, scope: !4540, inlinedAt: !4542)
!4562 = !DILocation(line: 68, column: 56, scope: !4540, inlinedAt: !4542)
!4563 = !DILocation(line: 68, column: 2, scope: !4540, inlinedAt: !4542)
!4564 = !{i32 -2147062674}
!4565 = !DILocation(line: 29, column: 1, scope: !4538)
!4566 = distinct !DISubprogram(name: "__init_work", scope: !130, file: !130, line: 215, type: !4567, scopeLine: 215, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !407)
!4567 = !DISubroutineType(types: !4568)
!4568 = !{null, !1918, !262}
!4569 = !DILocalVariable(name: "work", arg: 1, scope: !4566, file: !130, line: 215, type: !1918)
!4570 = !DILocation(line: 215, column: 52, scope: !4566)
!4571 = !DILocalVariable(name: "onstack", arg: 2, scope: !4566, file: !130, line: 215, type: !262)
!4572 = !DILocation(line: 215, column: 62, scope: !4566)
!4573 = !DILocation(line: 215, column: 73, scope: !4566)
!4574 = distinct !DISubprogram(name: "INIT_LIST_HEAD", scope: !4575, file: !4575, line: 33, type: !4576, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !407)
!4575 = !DIFile(filename: "./include/linux/list.h", directory: "/home/lizy2001/genbc/linux")
!4576 = !DISubroutineType(types: !4577)
!4577 = !{null, !201}
!4578 = !DILocalVariable(name: "list", arg: 1, scope: !4574, file: !4575, line: 33, type: !201)
!4579 = !DILocation(line: 33, column: 53, scope: !4574)
!4580 = !DILocation(line: 35, column: 2, scope: !4574)
!4581 = !DILocation(line: 35, column: 2, scope: !4582)
!4582 = distinct !DILexicalBlock(scope: !4574, file: !4575, line: 35, column: 2)
!4583 = !DILocation(line: 35, column: 2, scope: !4584)
!4584 = distinct !DILexicalBlock(scope: !4582, file: !4575, line: 35, column: 2)
!4585 = !DILocation(line: 35, column: 2, scope: !4586)
!4586 = distinct !DILexicalBlock(scope: !4582, file: !4575, line: 35, column: 2)
!4587 = !DILocation(line: 36, column: 15, scope: !4574)
!4588 = !DILocation(line: 36, column: 2, scope: !4574)
!4589 = !DILocation(line: 36, column: 8, scope: !4574)
!4590 = !DILocation(line: 36, column: 13, scope: !4574)
!4591 = !DILocation(line: 37, column: 1, scope: !4574)
!4592 = distinct !DISubprogram(name: "alps_register_bare_ps2_mouse", scope: !3, file: !3, line: 1399, type: !1916, scopeLine: 1400, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !407)
!4593 = !DILocalVariable(name: "work", arg: 1, scope: !4592, file: !3, line: 1399, type: !1918)
!4594 = !DILocation(line: 1399, column: 62, scope: !4592)
!4595 = !DILocalVariable(name: "priv", scope: !4592, file: !3, line: 1401, type: !206)
!4596 = !DILocation(line: 1401, column: 20, scope: !4592)
!4597 = !DILocalVariable(name: "__mptr", scope: !4598, file: !3, line: 1402, type: !191)
!4598 = distinct !DILexicalBlock(scope: !4592, file: !3, line: 1402, column: 3)
!4599 = !DILocation(line: 1402, column: 3, scope: !4598)
!4600 = !DILocation(line: 1402, column: 3, scope: !4601)
!4601 = distinct !DILexicalBlock(scope: !4598, file: !3, line: 1402, column: 3)
!4602 = !DILocalVariable(name: "psmouse", scope: !4592, file: !3, line: 1403, type: !210)
!4603 = !DILocation(line: 1403, column: 18, scope: !4592)
!4604 = !DILocation(line: 1403, column: 28, scope: !4592)
!4605 = !DILocation(line: 1403, column: 34, scope: !4592)
!4606 = !DILocalVariable(name: "dev3", scope: !4592, file: !3, line: 1404, type: !215)
!4607 = !DILocation(line: 1404, column: 20, scope: !4592)
!4608 = !DILocalVariable(name: "error", scope: !4592, file: !3, line: 1405, type: !262)
!4609 = !DILocation(line: 1405, column: 6, scope: !4592)
!4610 = !DILocation(line: 1407, column: 2, scope: !4592)
!4611 = !DILocation(line: 1409, column: 6, scope: !4612)
!4612 = distinct !DILexicalBlock(scope: !4592, file: !3, line: 1409, column: 6)
!4613 = !DILocation(line: 1409, column: 12, scope: !4612)
!4614 = !DILocation(line: 1409, column: 6, scope: !4592)
!4615 = !DILocation(line: 1410, column: 3, scope: !4612)
!4616 = !DILocation(line: 1412, column: 9, scope: !4592)
!4617 = !DILocation(line: 1412, column: 7, scope: !4592)
!4618 = !DILocation(line: 1413, column: 7, scope: !4619)
!4619 = distinct !DILexicalBlock(scope: !4592, file: !3, line: 1413, column: 6)
!4620 = !DILocation(line: 1413, column: 6, scope: !4592)
!4621 = !DILocation(line: 1414, column: 3, scope: !4622)
!4622 = distinct !DILexicalBlock(scope: !4619, file: !3, line: 1413, column: 13)
!4623 = !DILocation(line: 1415, column: 9, scope: !4622)
!4624 = !DILocation(line: 1416, column: 3, scope: !4622)
!4625 = !DILocation(line: 1419, column: 11, scope: !4592)
!4626 = !DILocation(line: 1419, column: 17, scope: !4592)
!4627 = !DILocation(line: 1420, column: 4, scope: !4592)
!4628 = !DILocation(line: 1420, column: 13, scope: !4592)
!4629 = !DILocation(line: 1420, column: 20, scope: !4592)
!4630 = !DILocation(line: 1420, column: 27, scope: !4592)
!4631 = !DILocation(line: 1421, column: 5, scope: !4592)
!4632 = !DILocation(line: 1421, column: 11, scope: !4592)
!4633 = !DILocation(line: 1419, column: 2, scope: !4592)
!4634 = !DILocation(line: 1422, column: 15, scope: !4592)
!4635 = !DILocation(line: 1422, column: 21, scope: !4592)
!4636 = !DILocation(line: 1422, column: 2, scope: !4592)
!4637 = !DILocation(line: 1422, column: 8, scope: !4592)
!4638 = !DILocation(line: 1422, column: 13, scope: !4592)
!4639 = !DILocation(line: 1428, column: 2, scope: !4592)
!4640 = !DILocation(line: 1428, column: 8, scope: !4592)
!4641 = !DILocation(line: 1428, column: 13, scope: !4592)
!4642 = !DILocation(line: 1430, column: 2, scope: !4592)
!4643 = !DILocation(line: 1430, column: 8, scope: !4592)
!4644 = !DILocation(line: 1430, column: 11, scope: !4592)
!4645 = !DILocation(line: 1430, column: 19, scope: !4592)
!4646 = !DILocation(line: 1431, column: 2, scope: !4592)
!4647 = !DILocation(line: 1431, column: 8, scope: !4592)
!4648 = !DILocation(line: 1431, column: 11, scope: !4592)
!4649 = !DILocation(line: 1431, column: 19, scope: !4592)
!4650 = !DILocation(line: 1432, column: 2, scope: !4592)
!4651 = !DILocation(line: 1432, column: 8, scope: !4592)
!4652 = !DILocation(line: 1432, column: 11, scope: !4592)
!4653 = !DILocation(line: 1432, column: 19, scope: !4592)
!4654 = !DILocation(line: 1433, column: 2, scope: !4592)
!4655 = !DILocation(line: 1433, column: 8, scope: !4592)
!4656 = !DILocation(line: 1433, column: 11, scope: !4592)
!4657 = !DILocation(line: 1433, column: 19, scope: !4592)
!4658 = !DILocation(line: 1434, column: 22, scope: !4592)
!4659 = !DILocation(line: 1434, column: 31, scope: !4592)
!4660 = !DILocation(line: 1434, column: 38, scope: !4592)
!4661 = !DILocation(line: 1434, column: 45, scope: !4592)
!4662 = !DILocation(line: 1434, column: 2, scope: !4592)
!4663 = !DILocation(line: 1434, column: 8, scope: !4592)
!4664 = !DILocation(line: 1434, column: 12, scope: !4592)
!4665 = !DILocation(line: 1434, column: 19, scope: !4592)
!4666 = !DILocation(line: 1436, column: 23, scope: !4592)
!4667 = !DILocation(line: 1436, column: 2, scope: !4592)
!4668 = !DILocation(line: 1437, column: 23, scope: !4592)
!4669 = !DILocation(line: 1437, column: 2, scope: !4592)
!4670 = !DILocation(line: 1438, column: 23, scope: !4592)
!4671 = !DILocation(line: 1438, column: 2, scope: !4592)
!4672 = !DILocation(line: 1439, column: 23, scope: !4592)
!4673 = !DILocation(line: 1439, column: 2, scope: !4592)
!4674 = !DILocation(line: 1440, column: 23, scope: !4592)
!4675 = !DILocation(line: 1440, column: 2, scope: !4592)
!4676 = !DILocation(line: 1442, column: 32, scope: !4592)
!4677 = !DILocation(line: 1442, column: 38, scope: !4592)
!4678 = !DILocation(line: 1442, column: 2, scope: !4592)
!4679 = !DILocation(line: 1444, column: 32, scope: !4592)
!4680 = !DILocation(line: 1444, column: 10, scope: !4592)
!4681 = !DILocation(line: 1444, column: 8, scope: !4592)
!4682 = !DILocation(line: 1445, column: 6, scope: !4683)
!4683 = distinct !DILexicalBlock(scope: !4592, file: !3, line: 1445, column: 6)
!4684 = !DILocation(line: 1445, column: 6, scope: !4592)
!4685 = !DILocation(line: 1446, column: 3, scope: !4686)
!4686 = distinct !DILexicalBlock(scope: !4683, file: !3, line: 1445, column: 13)
!4687 = !DILocation(line: 1449, column: 21, scope: !4686)
!4688 = !DILocation(line: 1449, column: 3, scope: !4686)
!4689 = !DILocation(line: 1450, column: 3, scope: !4686)
!4690 = !DILocation(line: 1453, column: 15, scope: !4592)
!4691 = !DILocation(line: 1453, column: 2, scope: !4592)
!4692 = !DILocation(line: 1453, column: 8, scope: !4592)
!4693 = !DILocation(line: 1453, column: 13, scope: !4592)
!4694 = !DILabel(scope: !4592, name: "out", file: !3, line: 1455)
!4695 = !DILocation(line: 1455, column: 1, scope: !4592)
!4696 = !DILocation(line: 1460, column: 6, scope: !4697)
!4697 = distinct !DILexicalBlock(scope: !4592, file: !3, line: 1460, column: 6)
!4698 = !DILocation(line: 1460, column: 6, scope: !4592)
!4699 = !DILocation(line: 1461, column: 24, scope: !4697)
!4700 = !DILocation(line: 1461, column: 16, scope: !4697)
!4701 = !DILocation(line: 1461, column: 3, scope: !4697)
!4702 = !DILocation(line: 1461, column: 9, scope: !4697)
!4703 = !DILocation(line: 1461, column: 14, scope: !4697)
!4704 = !DILocation(line: 1463, column: 2, scope: !4592)
!4705 = !DILocation(line: 1464, column: 1, scope: !4592)
!4706 = distinct !DISubprogram(name: "alps_process_byte", scope: !3, file: !3, line: 1606, type: !3987, scopeLine: 1607, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !407)
!4707 = !DILocalVariable(name: "psmouse", arg: 1, scope: !4706, file: !3, line: 1606, type: !210)
!4708 = !DILocation(line: 1606, column: 56, scope: !4706)
!4709 = !DILocalVariable(name: "priv", scope: !4706, file: !3, line: 1608, type: !206)
!4710 = !DILocation(line: 1608, column: 20, scope: !4706)
!4711 = !DILocation(line: 1608, column: 27, scope: !4706)
!4712 = !DILocation(line: 1608, column: 36, scope: !4706)
!4713 = !DILocation(line: 1617, column: 6, scope: !4714)
!4714 = distinct !DILexicalBlock(scope: !4706, file: !3, line: 1617, column: 6)
!4715 = !DILocation(line: 1617, column: 12, scope: !4714)
!4716 = !DILocation(line: 1617, column: 26, scope: !4714)
!4717 = !DILocation(line: 1617, column: 43, scope: !4714)
!4718 = !DILocation(line: 1618, column: 7, scope: !4714)
!4719 = !DILocation(line: 1618, column: 16, scope: !4714)
!4720 = !DILocation(line: 1618, column: 32, scope: !4714)
!4721 = !DILocation(line: 1619, column: 7, scope: !4714)
!4722 = !DILocation(line: 1619, column: 16, scope: !4714)
!4723 = !DILocation(line: 1619, column: 26, scope: !4714)
!4724 = !DILocation(line: 1619, column: 34, scope: !4714)
!4725 = !DILocation(line: 1617, column: 6, scope: !4706)
!4726 = !DILocation(line: 1621, column: 7, scope: !4727)
!4727 = distinct !DILexicalBlock(scope: !4728, file: !3, line: 1621, column: 7)
!4728 = distinct !DILexicalBlock(scope: !4714, file: !3, line: 1619, column: 43)
!4729 = !DILocation(line: 1621, column: 16, scope: !4727)
!4730 = !DILocation(line: 1621, column: 23, scope: !4727)
!4731 = !DILocation(line: 1621, column: 7, scope: !4728)
!4732 = !DILocation(line: 1622, column: 32, scope: !4733)
!4733 = distinct !DILexicalBlock(scope: !4727, file: !3, line: 1621, column: 29)
!4734 = !DILocation(line: 1622, column: 41, scope: !4733)
!4735 = !DILocation(line: 1622, column: 50, scope: !4733)
!4736 = !DILocation(line: 1622, column: 4, scope: !4733)
!4737 = !DILocation(line: 1624, column: 4, scope: !4733)
!4738 = !DILocation(line: 1626, column: 3, scope: !4728)
!4739 = !DILocation(line: 1631, column: 7, scope: !4740)
!4740 = distinct !DILexicalBlock(scope: !4706, file: !3, line: 1631, column: 6)
!4741 = !DILocation(line: 1631, column: 13, scope: !4740)
!4742 = !DILocation(line: 1631, column: 19, scope: !4740)
!4743 = !DILocation(line: 1631, column: 43, scope: !4740)
!4744 = !DILocation(line: 1632, column: 6, scope: !4740)
!4745 = !DILocation(line: 1632, column: 15, scope: !4740)
!4746 = !DILocation(line: 1632, column: 22, scope: !4740)
!4747 = !DILocation(line: 1632, column: 27, scope: !4740)
!4748 = !DILocation(line: 1632, column: 31, scope: !4740)
!4749 = !DILocation(line: 1632, column: 40, scope: !4740)
!4750 = !DILocation(line: 1632, column: 50, scope: !4740)
!4751 = !DILocation(line: 1632, column: 58, scope: !4740)
!4752 = !DILocation(line: 1631, column: 6, scope: !4706)
!4753 = !DILocation(line: 1633, column: 38, scope: !4754)
!4754 = distinct !DILexicalBlock(scope: !4740, file: !3, line: 1632, column: 67)
!4755 = !DILocation(line: 1633, column: 10, scope: !4754)
!4756 = !DILocation(line: 1633, column: 3, scope: !4754)
!4757 = !DILocation(line: 1636, column: 32, scope: !4758)
!4758 = distinct !DILexicalBlock(scope: !4706, file: !3, line: 1636, column: 6)
!4759 = !DILocation(line: 1636, column: 38, scope: !4758)
!4760 = !DILocation(line: 1636, column: 47, scope: !4758)
!4761 = !DILocation(line: 1636, column: 7, scope: !4758)
!4762 = !DILocation(line: 1636, column: 6, scope: !4706)
!4763 = !DILocation(line: 1640, column: 3, scope: !4764)
!4764 = distinct !DILexicalBlock(scope: !4758, file: !3, line: 1636, column: 59)
!4765 = !DILocation(line: 1644, column: 6, scope: !4766)
!4766 = distinct !DILexicalBlock(scope: !4706, file: !3, line: 1644, column: 6)
!4767 = !DILocation(line: 1644, column: 12, scope: !4766)
!4768 = !DILocation(line: 1644, column: 26, scope: !4766)
!4769 = !DILocation(line: 1644, column: 42, scope: !4766)
!4770 = !DILocation(line: 1645, column: 6, scope: !4766)
!4771 = !DILocation(line: 1645, column: 15, scope: !4766)
!4772 = !DILocation(line: 1645, column: 22, scope: !4766)
!4773 = !DILocation(line: 1645, column: 27, scope: !4766)
!4774 = !DILocation(line: 1645, column: 30, scope: !4766)
!4775 = !DILocation(line: 1645, column: 39, scope: !4766)
!4776 = !DILocation(line: 1645, column: 49, scope: !4766)
!4777 = !DILocation(line: 1645, column: 58, scope: !4766)
!4778 = !DILocation(line: 1645, column: 46, scope: !4766)
!4779 = !DILocation(line: 1645, column: 66, scope: !4766)
!4780 = !DILocation(line: 1646, column: 7, scope: !4766)
!4781 = !DILocation(line: 1646, column: 16, scope: !4766)
!4782 = !DILocation(line: 1646, column: 23, scope: !4766)
!4783 = !DILocation(line: 1646, column: 32, scope: !4766)
!4784 = !DILocation(line: 1646, column: 39, scope: !4766)
!4785 = !DILocation(line: 1646, column: 44, scope: !4766)
!4786 = !DILocation(line: 1644, column: 6, scope: !4706)
!4787 = !DILocation(line: 1651, column: 7, scope: !4788)
!4788 = distinct !DILexicalBlock(scope: !4789, file: !3, line: 1651, column: 7)
!4789 = distinct !DILexicalBlock(scope: !4766, file: !3, line: 1646, column: 53)
!4790 = !DILocation(line: 1651, column: 13, scope: !4788)
!4791 = !DILocation(line: 1651, column: 27, scope: !4788)
!4792 = !DILocation(line: 1651, column: 53, scope: !4788)
!4793 = !DILocation(line: 1652, column: 7, scope: !4788)
!4794 = !DILocation(line: 1652, column: 16, scope: !4788)
!4795 = !DILocation(line: 1652, column: 26, scope: !4788)
!4796 = !DILocation(line: 1652, column: 35, scope: !4788)
!4797 = !DILocation(line: 1652, column: 23, scope: !4788)
!4798 = !DILocation(line: 1651, column: 7, scope: !4789)
!4799 = !DILocation(line: 1662, column: 4, scope: !4800)
!4800 = distinct !DILexicalBlock(scope: !4788, file: !3, line: 1652, column: 44)
!4801 = !DILocation(line: 1665, column: 3, scope: !4789)
!4802 = !DILocation(line: 1668, column: 7, scope: !4803)
!4803 = distinct !DILexicalBlock(scope: !4706, file: !3, line: 1668, column: 6)
!4804 = !DILocation(line: 1668, column: 13, scope: !4803)
!4805 = !DILocation(line: 1668, column: 27, scope: !4803)
!4806 = !DILocation(line: 1668, column: 44, scope: !4803)
!4807 = !DILocation(line: 1669, column: 30, scope: !4803)
!4808 = !DILocation(line: 1669, column: 5, scope: !4803)
!4809 = !DILocation(line: 1669, column: 40, scope: !4803)
!4810 = !DILocation(line: 1670, column: 7, scope: !4803)
!4811 = !DILocation(line: 1670, column: 13, scope: !4803)
!4812 = !DILocation(line: 1670, column: 27, scope: !4803)
!4813 = !DILocation(line: 1670, column: 44, scope: !4803)
!4814 = !DILocation(line: 1671, column: 34, scope: !4803)
!4815 = !DILocation(line: 1671, column: 5, scope: !4803)
!4816 = !DILocation(line: 1668, column: 6, scope: !4706)
!4817 = !DILocation(line: 1675, column: 3, scope: !4818)
!4818 = distinct !DILexicalBlock(scope: !4803, file: !3, line: 1671, column: 45)
!4819 = !DILocation(line: 1678, column: 6, scope: !4820)
!4820 = distinct !DILexicalBlock(scope: !4706, file: !3, line: 1678, column: 6)
!4821 = !DILocation(line: 1678, column: 15, scope: !4820)
!4822 = !DILocation(line: 1678, column: 25, scope: !4820)
!4823 = !DILocation(line: 1678, column: 34, scope: !4820)
!4824 = !DILocation(line: 1678, column: 22, scope: !4820)
!4825 = !DILocation(line: 1678, column: 6, scope: !4706)
!4826 = !DILocation(line: 1679, column: 3, scope: !4827)
!4827 = distinct !DILexicalBlock(scope: !4820, file: !3, line: 1678, column: 43)
!4828 = !DILocation(line: 1679, column: 9, scope: !4827)
!4829 = !DILocation(line: 1679, column: 24, scope: !4827)
!4830 = !DILocation(line: 1680, column: 3, scope: !4827)
!4831 = !DILocation(line: 1683, column: 2, scope: !4706)
!4832 = !DILocation(line: 1684, column: 1, scope: !4706)
!4833 = distinct !DISubprogram(name: "alps_poll", scope: !3, file: !3, line: 1987, type: !3962, scopeLine: 1988, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !407)
!4834 = !DILocalVariable(name: "psmouse", arg: 1, scope: !4833, file: !3, line: 1987, type: !210)
!4835 = !DILocation(line: 1987, column: 38, scope: !4833)
!4836 = !DILocalVariable(name: "priv", scope: !4833, file: !3, line: 1989, type: !206)
!4837 = !DILocation(line: 1989, column: 20, scope: !4833)
!4838 = !DILocation(line: 1989, column: 27, scope: !4833)
!4839 = !DILocation(line: 1989, column: 36, scope: !4833)
!4840 = !DILocalVariable(name: "buf", scope: !4833, file: !3, line: 1990, type: !3965)
!4841 = !DILocation(line: 1990, column: 16, scope: !4833)
!4842 = !DILocalVariable(name: "poll_failed", scope: !4833, file: !3, line: 1991, type: !550)
!4843 = !DILocation(line: 1991, column: 7, scope: !4833)
!4844 = !DILocation(line: 1993, column: 6, scope: !4845)
!4845 = distinct !DILexicalBlock(scope: !4833, file: !3, line: 1993, column: 6)
!4846 = !DILocation(line: 1993, column: 12, scope: !4845)
!4847 = !DILocation(line: 1993, column: 18, scope: !4845)
!4848 = !DILocation(line: 1993, column: 6, scope: !4833)
!4849 = !DILocation(line: 1994, column: 28, scope: !4845)
!4850 = !DILocation(line: 1994, column: 3, scope: !4845)
!4851 = !DILocation(line: 1996, column: 29, scope: !4833)
!4852 = !DILocation(line: 1996, column: 38, scope: !4833)
!4853 = !DILocation(line: 1996, column: 46, scope: !4833)
!4854 = !DILocation(line: 1997, column: 27, scope: !4833)
!4855 = !DILocation(line: 1997, column: 36, scope: !4833)
!4856 = !DILocation(line: 1997, column: 44, scope: !4833)
!4857 = !DILocation(line: 1997, column: 24, scope: !4833)
!4858 = !DILocation(line: 1996, column: 16, scope: !4833)
!4859 = !DILocation(line: 1997, column: 51, scope: !4833)
!4860 = !DILocation(line: 1996, column: 14, scope: !4833)
!4861 = !DILocation(line: 1999, column: 6, scope: !4862)
!4862 = distinct !DILexicalBlock(scope: !4833, file: !3, line: 1999, column: 6)
!4863 = !DILocation(line: 1999, column: 12, scope: !4862)
!4864 = !DILocation(line: 1999, column: 18, scope: !4862)
!4865 = !DILocation(line: 1999, column: 6, scope: !4833)
!4866 = !DILocation(line: 2000, column: 28, scope: !4862)
!4867 = !DILocation(line: 2000, column: 3, scope: !4862)
!4868 = !DILocation(line: 2002, column: 6, scope: !4869)
!4869 = distinct !DILexicalBlock(scope: !4833, file: !3, line: 2002, column: 6)
!4870 = !DILocation(line: 2002, column: 18, scope: !4869)
!4871 = !DILocation(line: 2002, column: 22, scope: !4869)
!4872 = !DILocation(line: 2002, column: 31, scope: !4869)
!4873 = !DILocation(line: 2002, column: 37, scope: !4869)
!4874 = !DILocation(line: 2002, column: 29, scope: !4869)
!4875 = !DILocation(line: 2002, column: 47, scope: !4869)
!4876 = !DILocation(line: 2002, column: 53, scope: !4869)
!4877 = !DILocation(line: 2002, column: 44, scope: !4869)
!4878 = !DILocation(line: 2002, column: 6, scope: !4833)
!4879 = !DILocation(line: 2003, column: 3, scope: !4869)
!4880 = !DILocation(line: 2005, column: 7, scope: !4881)
!4881 = distinct !DILexicalBlock(scope: !4833, file: !3, line: 2005, column: 6)
!4882 = !DILocation(line: 2005, column: 16, scope: !4881)
!4883 = !DILocation(line: 2005, column: 24, scope: !4881)
!4884 = !DILocation(line: 2005, column: 32, scope: !4881)
!4885 = !DILocation(line: 2005, column: 6, scope: !4833)
!4886 = !DILocation(line: 2009, column: 20, scope: !4887)
!4887 = distinct !DILexicalBlock(scope: !4888, file: !3, line: 2009, column: 7)
!4888 = distinct !DILexicalBlock(scope: !4881, file: !3, line: 2005, column: 41)
!4889 = !DILocation(line: 2009, column: 29, scope: !4887)
!4890 = !DILocation(line: 2009, column: 37, scope: !4887)
!4891 = !DILocation(line: 2009, column: 7, scope: !4887)
!4892 = !DILocation(line: 2009, column: 7, scope: !4888)
!4893 = !DILocation(line: 2010, column: 4, scope: !4887)
!4894 = !DILocation(line: 2011, column: 2, scope: !4888)
!4895 = !DILocation(line: 2013, column: 9, scope: !4833)
!4896 = !DILocation(line: 2013, column: 18, scope: !4833)
!4897 = !DILocation(line: 2013, column: 2, scope: !4833)
!4898 = !DILocation(line: 2014, column: 2, scope: !4833)
!4899 = !DILocation(line: 2015, column: 1, scope: !4833)
!4900 = distinct !DISubprogram(name: "alps_disconnect", scope: !3, file: !3, line: 2968, type: !4003, scopeLine: 2969, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !407)
!4901 = !DILocalVariable(name: "psmouse", arg: 1, scope: !4900, file: !3, line: 2968, type: !210)
!4902 = !DILocation(line: 2968, column: 45, scope: !4900)
!4903 = !DILocalVariable(name: "priv", scope: !4900, file: !3, line: 2970, type: !206)
!4904 = !DILocation(line: 2970, column: 20, scope: !4900)
!4905 = !DILocation(line: 2970, column: 27, scope: !4900)
!4906 = !DILocation(line: 2970, column: 36, scope: !4900)
!4907 = !DILocation(line: 2972, column: 16, scope: !4900)
!4908 = !DILocation(line: 2972, column: 2, scope: !4900)
!4909 = !DILocation(line: 2973, column: 2, scope: !4900)
!4910 = !DILocation(line: 2974, column: 6, scope: !4911)
!4911 = distinct !DILexicalBlock(scope: !4900, file: !3, line: 2974, column: 6)
!4912 = !DILocation(line: 2974, column: 12, scope: !4911)
!4913 = !DILocation(line: 2974, column: 6, scope: !4900)
!4914 = !DILocation(line: 2975, column: 27, scope: !4911)
!4915 = !DILocation(line: 2975, column: 33, scope: !4911)
!4916 = !DILocation(line: 2975, column: 3, scope: !4911)
!4917 = !DILocation(line: 2976, column: 22, scope: !4918)
!4918 = distinct !DILexicalBlock(scope: !4900, file: !3, line: 2976, column: 6)
!4919 = !DILocation(line: 2976, column: 28, scope: !4918)
!4920 = !DILocation(line: 2976, column: 7, scope: !4918)
!4921 = !DILocation(line: 2976, column: 6, scope: !4900)
!4922 = !DILocation(line: 2977, column: 27, scope: !4918)
!4923 = !DILocation(line: 2977, column: 33, scope: !4918)
!4924 = !DILocation(line: 2977, column: 3, scope: !4918)
!4925 = !DILocation(line: 2978, column: 8, scope: !4900)
!4926 = !DILocation(line: 2978, column: 2, scope: !4900)
!4927 = !DILocation(line: 2979, column: 1, scope: !4900)
!4928 = distinct !DISubprogram(name: "alps_reconnect", scope: !3, file: !3, line: 2956, type: !3962, scopeLine: 2957, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !407)
!4929 = !DILocalVariable(name: "psmouse", arg: 1, scope: !4928, file: !3, line: 2956, type: !210)
!4930 = !DILocation(line: 2956, column: 43, scope: !4928)
!4931 = !DILocalVariable(name: "priv", scope: !4928, file: !3, line: 2958, type: !206)
!4932 = !DILocation(line: 2958, column: 20, scope: !4928)
!4933 = !DILocation(line: 2958, column: 27, scope: !4928)
!4934 = !DILocation(line: 2958, column: 36, scope: !4928)
!4935 = !DILocation(line: 2960, column: 16, scope: !4928)
!4936 = !DILocation(line: 2960, column: 2, scope: !4928)
!4937 = !DILocation(line: 2962, column: 20, scope: !4938)
!4938 = distinct !DILexicalBlock(scope: !4928, file: !3, line: 2962, column: 6)
!4939 = !DILocation(line: 2962, column: 29, scope: !4938)
!4940 = !DILocation(line: 2962, column: 6, scope: !4938)
!4941 = !DILocation(line: 2962, column: 35, scope: !4938)
!4942 = !DILocation(line: 2962, column: 6, scope: !4928)
!4943 = !DILocation(line: 2963, column: 3, scope: !4938)
!4944 = !DILocation(line: 2965, column: 9, scope: !4928)
!4945 = !DILocation(line: 2965, column: 15, scope: !4928)
!4946 = !DILocation(line: 2965, column: 23, scope: !4928)
!4947 = !DILocation(line: 2965, column: 2, scope: !4928)
!4948 = !DILocation(line: 2966, column: 1, scope: !4928)
!4949 = distinct !DISubprogram(name: "alps_detect", scope: !3, file: !3, line: 3173, type: !3958, scopeLine: 3174, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !407)
!4950 = !DILocalVariable(name: "psmouse", arg: 1, scope: !4949, file: !3, line: 3173, type: !210)
!4951 = !DILocation(line: 3173, column: 33, scope: !4949)
!4952 = !DILocalVariable(name: "set_properties", arg: 2, scope: !4949, file: !3, line: 3173, type: !550)
!4953 = !DILocation(line: 3173, column: 47, scope: !4949)
!4954 = !DILocalVariable(name: "priv", scope: !4949, file: !3, line: 3175, type: !206)
!4955 = !DILocation(line: 3175, column: 20, scope: !4949)
!4956 = !DILocalVariable(name: "error", scope: !4949, file: !3, line: 3176, type: !262)
!4957 = !DILocation(line: 3176, column: 6, scope: !4949)
!4958 = !DILocation(line: 3178, column: 24, scope: !4949)
!4959 = !DILocation(line: 3178, column: 10, scope: !4949)
!4960 = !DILocation(line: 3178, column: 8, scope: !4949)
!4961 = !DILocation(line: 3179, column: 6, scope: !4962)
!4962 = distinct !DILexicalBlock(scope: !4949, file: !3, line: 3179, column: 6)
!4963 = !DILocation(line: 3179, column: 6, scope: !4949)
!4964 = !DILocation(line: 3180, column: 10, scope: !4962)
!4965 = !DILocation(line: 3180, column: 3, scope: !4962)
!4966 = !DILocation(line: 3190, column: 30, scope: !4967)
!4967 = distinct !DILexicalBlock(scope: !4949, file: !3, line: 3190, column: 6)
!4968 = !DILocation(line: 3190, column: 6, scope: !4967)
!4969 = !DILocation(line: 3190, column: 6, scope: !4949)
!4970 = !DILocation(line: 3193, column: 3, scope: !4971)
!4971 = distinct !DILexicalBlock(scope: !4967, file: !3, line: 3190, column: 40)
!4972 = !DILocation(line: 3202, column: 16, scope: !4949)
!4973 = !DILocation(line: 3202, column: 2, scope: !4949)
!4974 = !DILocation(line: 3204, column: 9, scope: !4949)
!4975 = !DILocation(line: 3204, column: 7, scope: !4949)
!4976 = !DILocation(line: 3205, column: 7, scope: !4977)
!4977 = distinct !DILexicalBlock(scope: !4949, file: !3, line: 3205, column: 6)
!4978 = !DILocation(line: 3205, column: 6, scope: !4949)
!4979 = !DILocation(line: 3206, column: 3, scope: !4977)
!4980 = !DILocation(line: 3208, column: 24, scope: !4949)
!4981 = !DILocation(line: 3208, column: 33, scope: !4949)
!4982 = !DILocation(line: 3208, column: 10, scope: !4949)
!4983 = !DILocation(line: 3208, column: 8, scope: !4949)
!4984 = !DILocation(line: 3209, column: 6, scope: !4985)
!4985 = distinct !DILexicalBlock(scope: !4949, file: !3, line: 3209, column: 6)
!4986 = !DILocation(line: 3209, column: 6, scope: !4949)
!4987 = !DILocation(line: 3210, column: 9, scope: !4988)
!4988 = distinct !DILexicalBlock(scope: !4985, file: !3, line: 3209, column: 13)
!4989 = !DILocation(line: 3210, column: 3, scope: !4988)
!4990 = !DILocation(line: 3211, column: 10, scope: !4988)
!4991 = !DILocation(line: 3211, column: 3, scope: !4988)
!4992 = !DILocation(line: 3214, column: 6, scope: !4993)
!4993 = distinct !DILexicalBlock(scope: !4949, file: !3, line: 3214, column: 6)
!4994 = !DILocation(line: 3214, column: 6, scope: !4949)
!4995 = !DILocation(line: 3215, column: 3, scope: !4996)
!4996 = distinct !DILexicalBlock(scope: !4993, file: !3, line: 3214, column: 22)
!4997 = !DILocation(line: 3215, column: 12, scope: !4996)
!4998 = !DILocation(line: 3215, column: 19, scope: !4996)
!4999 = !DILocation(line: 3216, column: 19, scope: !4996)
!5000 = !DILocation(line: 3216, column: 25, scope: !4996)
!5001 = !DILocation(line: 3216, column: 31, scope: !4996)
!5002 = !DILocation(line: 3216, column: 3, scope: !4996)
!5003 = !DILocation(line: 3216, column: 12, scope: !4996)
!5004 = !DILocation(line: 3216, column: 17, scope: !4996)
!5005 = !DILocation(line: 3218, column: 20, scope: !4996)
!5006 = !DILocation(line: 3218, column: 26, scope: !4996)
!5007 = !DILocation(line: 3218, column: 3, scope: !4996)
!5008 = !DILocation(line: 3218, column: 12, scope: !4996)
!5009 = !DILocation(line: 3218, column: 18, scope: !4996)
!5010 = !DILocation(line: 3219, column: 2, scope: !4996)
!5011 = !DILocation(line: 3226, column: 9, scope: !5012)
!5012 = distinct !DILexicalBlock(scope: !4993, file: !3, line: 3219, column: 9)
!5013 = !DILocation(line: 3226, column: 3, scope: !5012)
!5014 = !DILocation(line: 3227, column: 3, scope: !5012)
!5015 = !DILocation(line: 3227, column: 12, scope: !5012)
!5016 = !DILocation(line: 3227, column: 20, scope: !5012)
!5017 = !DILocation(line: 3230, column: 2, scope: !4949)
!5018 = !DILocation(line: 3231, column: 1, scope: !4949)
!5019 = distinct !DISubprogram(name: "alps_identify", scope: !3, file: !3, line: 2882, type: !5020, scopeLine: 2883, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !407)
!5020 = !DISubroutineType(types: !5021)
!5021 = !{!262, !210, !206}
!5022 = !DILocalVariable(name: "psmouse", arg: 1, scope: !5019, file: !3, line: 2882, type: !210)
!5023 = !DILocation(line: 2882, column: 42, scope: !5019)
!5024 = !DILocalVariable(name: "priv", arg: 2, scope: !5019, file: !3, line: 2882, type: !206)
!5025 = !DILocation(line: 2882, column: 69, scope: !5019)
!5026 = !DILocalVariable(name: "protocol", scope: !5019, file: !3, line: 2884, type: !5027)
!5027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4099, size: 64)
!5028 = !DILocation(line: 2884, column: 35, scope: !5019)
!5029 = !DILocalVariable(name: "e6", scope: !5019, file: !3, line: 2885, type: !5030)
!5030 = !DICompositeType(tag: DW_TAG_array_type, baseType: !269, size: 32, elements: !1135)
!5031 = !DILocation(line: 2885, column: 16, scope: !5019)
!5032 = !DILocalVariable(name: "e7", scope: !5019, file: !3, line: 2885, type: !5030)
!5033 = !DILocation(line: 2885, column: 23, scope: !5019)
!5034 = !DILocalVariable(name: "ec", scope: !5019, file: !3, line: 2885, type: !5030)
!5035 = !DILocation(line: 2885, column: 30, scope: !5019)
!5036 = !DILocalVariable(name: "error", scope: !5019, file: !3, line: 2886, type: !262)
!5037 = !DILocation(line: 2886, column: 6, scope: !5019)
!5038 = !DILocation(line: 2894, column: 19, scope: !5039)
!5039 = distinct !DILexicalBlock(scope: !5019, file: !3, line: 2894, column: 6)
!5040 = !DILocation(line: 2895, column: 29, scope: !5039)
!5041 = !DILocation(line: 2894, column: 6, scope: !5039)
!5042 = !DILocation(line: 2894, column: 6, scope: !5019)
!5043 = !DILocation(line: 2896, column: 3, scope: !5039)
!5044 = !DILocation(line: 2898, column: 7, scope: !5045)
!5045 = distinct !DILexicalBlock(scope: !5019, file: !3, line: 2898, column: 6)
!5046 = !DILocation(line: 2898, column: 13, scope: !5045)
!5047 = !DILocation(line: 2898, column: 21, scope: !5045)
!5048 = !DILocation(line: 2898, column: 26, scope: !5045)
!5049 = !DILocation(line: 2898, column: 29, scope: !5045)
!5050 = !DILocation(line: 2898, column: 35, scope: !5045)
!5051 = !DILocation(line: 2898, column: 40, scope: !5045)
!5052 = !DILocation(line: 2898, column: 44, scope: !5045)
!5053 = !DILocation(line: 2898, column: 50, scope: !5045)
!5054 = !DILocation(line: 2898, column: 56, scope: !5045)
!5055 = !DILocation(line: 2898, column: 59, scope: !5045)
!5056 = !DILocation(line: 2898, column: 65, scope: !5045)
!5057 = !DILocation(line: 2898, column: 6, scope: !5019)
!5058 = !DILocation(line: 2899, column: 3, scope: !5045)
!5059 = !DILocation(line: 2905, column: 19, scope: !5060)
!5060 = distinct !DILexicalBlock(scope: !5019, file: !3, line: 2905, column: 6)
!5061 = !DILocation(line: 2906, column: 29, scope: !5060)
!5062 = !DILocation(line: 2905, column: 6, scope: !5060)
!5063 = !DILocation(line: 2906, column: 33, scope: !5060)
!5064 = !DILocation(line: 2907, column: 19, scope: !5060)
!5065 = !DILocation(line: 2908, column: 29, scope: !5060)
!5066 = !DILocation(line: 2907, column: 6, scope: !5060)
!5067 = !DILocation(line: 2908, column: 33, scope: !5060)
!5068 = !DILocation(line: 2909, column: 29, scope: !5060)
!5069 = !DILocation(line: 2909, column: 6, scope: !5060)
!5070 = !DILocation(line: 2905, column: 6, scope: !5019)
!5071 = !DILocation(line: 2910, column: 3, scope: !5060)
!5072 = !DILocation(line: 2912, column: 30, scope: !5019)
!5073 = !DILocation(line: 2912, column: 34, scope: !5019)
!5074 = !DILocation(line: 2912, column: 13, scope: !5019)
!5075 = !DILocation(line: 2912, column: 11, scope: !5019)
!5076 = !DILocation(line: 2913, column: 7, scope: !5077)
!5077 = distinct !DILexicalBlock(scope: !5019, file: !3, line: 2913, column: 6)
!5078 = !DILocation(line: 2913, column: 6, scope: !5019)
!5079 = !DILocation(line: 2914, column: 7, scope: !5080)
!5080 = distinct !DILexicalBlock(scope: !5081, file: !3, line: 2914, column: 7)
!5081 = distinct !DILexicalBlock(scope: !5077, file: !3, line: 2913, column: 17)
!5082 = !DILocation(line: 2914, column: 13, scope: !5080)
!5083 = !DILocation(line: 2914, column: 21, scope: !5080)
!5084 = !DILocation(line: 2914, column: 24, scope: !5080)
!5085 = !DILocation(line: 2914, column: 30, scope: !5080)
!5086 = !DILocation(line: 2914, column: 38, scope: !5080)
!5087 = !DILocation(line: 2914, column: 41, scope: !5080)
!5088 = !DILocation(line: 2914, column: 47, scope: !5080)
!5089 = !DILocation(line: 2914, column: 55, scope: !5080)
!5090 = !DILocation(line: 2915, column: 7, scope: !5080)
!5091 = !DILocation(line: 2915, column: 13, scope: !5080)
!5092 = !DILocation(line: 2914, column: 7, scope: !5081)
!5093 = !DILocation(line: 2916, column: 13, scope: !5094)
!5094 = distinct !DILexicalBlock(scope: !5080, file: !3, line: 2915, column: 22)
!5095 = !DILocation(line: 2917, column: 3, scope: !5094)
!5096 = !DILocation(line: 2917, column: 14, scope: !5097)
!5097 = distinct !DILexicalBlock(scope: !5080, file: !3, line: 2917, column: 14)
!5098 = !DILocation(line: 2917, column: 20, scope: !5097)
!5099 = !DILocation(line: 2917, column: 28, scope: !5097)
!5100 = !DILocation(line: 2917, column: 31, scope: !5097)
!5101 = !DILocation(line: 2917, column: 37, scope: !5097)
!5102 = !DILocation(line: 2917, column: 45, scope: !5097)
!5103 = !DILocation(line: 2917, column: 48, scope: !5097)
!5104 = !DILocation(line: 2917, column: 54, scope: !5097)
!5105 = !DILocation(line: 2917, column: 62, scope: !5097)
!5106 = !DILocation(line: 2918, column: 7, scope: !5097)
!5107 = !DILocation(line: 2918, column: 13, scope: !5097)
!5108 = !DILocation(line: 2918, column: 21, scope: !5097)
!5109 = !DILocation(line: 2918, column: 25, scope: !5097)
!5110 = !DILocation(line: 2918, column: 31, scope: !5097)
!5111 = !DILocation(line: 2918, column: 39, scope: !5097)
!5112 = !DILocation(line: 2918, column: 42, scope: !5097)
!5113 = !DILocation(line: 2918, column: 48, scope: !5097)
!5114 = !DILocation(line: 2917, column: 14, scope: !5080)
!5115 = !DILocation(line: 2919, column: 13, scope: !5116)
!5116 = distinct !DILexicalBlock(scope: !5097, file: !3, line: 2918, column: 58)
!5117 = !DILocation(line: 2920, column: 3, scope: !5116)
!5118 = !DILocation(line: 2920, column: 14, scope: !5119)
!5119 = distinct !DILexicalBlock(scope: !5097, file: !3, line: 2920, column: 14)
!5120 = !DILocation(line: 2920, column: 20, scope: !5119)
!5121 = !DILocation(line: 2920, column: 28, scope: !5119)
!5122 = !DILocation(line: 2921, column: 9, scope: !5119)
!5123 = !DILocation(line: 2921, column: 15, scope: !5119)
!5124 = !DILocation(line: 2921, column: 23, scope: !5119)
!5125 = !DILocation(line: 2921, column: 31, scope: !5119)
!5126 = !DILocation(line: 2921, column: 35, scope: !5119)
!5127 = !DILocation(line: 2921, column: 41, scope: !5119)
!5128 = !DILocation(line: 2921, column: 49, scope: !5119)
!5129 = !DILocation(line: 2920, column: 14, scope: !5097)
!5130 = !DILocation(line: 2922, column: 13, scope: !5131)
!5131 = distinct !DILexicalBlock(scope: !5119, file: !3, line: 2921, column: 59)
!5132 = !DILocation(line: 2923, column: 3, scope: !5131)
!5133 = !DILocation(line: 2923, column: 14, scope: !5134)
!5134 = distinct !DILexicalBlock(scope: !5119, file: !3, line: 2923, column: 14)
!5135 = !DILocation(line: 2923, column: 20, scope: !5134)
!5136 = !DILocation(line: 2923, column: 28, scope: !5134)
!5137 = !DILocation(line: 2923, column: 31, scope: !5134)
!5138 = !DILocation(line: 2923, column: 37, scope: !5134)
!5139 = !DILocation(line: 2923, column: 14, scope: !5119)
!5140 = !DILocation(line: 2924, column: 13, scope: !5141)
!5141 = distinct !DILexicalBlock(scope: !5134, file: !3, line: 2923, column: 46)
!5142 = !DILocation(line: 2925, column: 3, scope: !5141)
!5143 = !DILocation(line: 2925, column: 14, scope: !5144)
!5144 = distinct !DILexicalBlock(scope: !5134, file: !3, line: 2925, column: 14)
!5145 = !DILocation(line: 2925, column: 20, scope: !5144)
!5146 = !DILocation(line: 2925, column: 28, scope: !5144)
!5147 = !DILocation(line: 2925, column: 31, scope: !5144)
!5148 = !DILocation(line: 2925, column: 37, scope: !5144)
!5149 = !DILocation(line: 2925, column: 45, scope: !5144)
!5150 = !DILocation(line: 2926, column: 7, scope: !5144)
!5151 = !DILocation(line: 2926, column: 13, scope: !5144)
!5152 = !DILocation(line: 2926, column: 21, scope: !5144)
!5153 = !DILocation(line: 2926, column: 24, scope: !5144)
!5154 = !DILocation(line: 2926, column: 30, scope: !5144)
!5155 = !DILocation(line: 2925, column: 14, scope: !5134)
!5156 = !DILocation(line: 2927, column: 13, scope: !5157)
!5157 = distinct !DILexicalBlock(scope: !5144, file: !3, line: 2926, column: 39)
!5158 = !DILocation(line: 2928, column: 3, scope: !5157)
!5159 = !DILocation(line: 2928, column: 14, scope: !5160)
!5160 = distinct !DILexicalBlock(scope: !5144, file: !3, line: 2928, column: 14)
!5161 = !DILocation(line: 2928, column: 20, scope: !5160)
!5162 = !DILocation(line: 2928, column: 28, scope: !5160)
!5163 = !DILocation(line: 2928, column: 31, scope: !5160)
!5164 = !DILocation(line: 2928, column: 37, scope: !5160)
!5165 = !DILocation(line: 2928, column: 45, scope: !5160)
!5166 = !DILocation(line: 2929, column: 8, scope: !5160)
!5167 = !DILocation(line: 2929, column: 14, scope: !5160)
!5168 = !DILocation(line: 2929, column: 22, scope: !5160)
!5169 = !DILocation(line: 2929, column: 25, scope: !5160)
!5170 = !DILocation(line: 2929, column: 31, scope: !5160)
!5171 = !DILocation(line: 2928, column: 14, scope: !5144)
!5172 = !DILocation(line: 2930, column: 13, scope: !5173)
!5173 = distinct !DILexicalBlock(scope: !5160, file: !3, line: 2929, column: 41)
!5174 = !DILocation(line: 2931, column: 3, scope: !5173)
!5175 = !DILocation(line: 2931, column: 14, scope: !5176)
!5176 = distinct !DILexicalBlock(scope: !5160, file: !3, line: 2931, column: 14)
!5177 = !DILocation(line: 2931, column: 20, scope: !5176)
!5178 = !DILocation(line: 2931, column: 28, scope: !5176)
!5179 = !DILocation(line: 2931, column: 31, scope: !5176)
!5180 = !DILocation(line: 2931, column: 37, scope: !5176)
!5181 = !DILocation(line: 2931, column: 45, scope: !5176)
!5182 = !DILocation(line: 2931, column: 48, scope: !5176)
!5183 = !DILocation(line: 2931, column: 54, scope: !5176)
!5184 = !DILocation(line: 2931, column: 14, scope: !5160)
!5185 = !DILocation(line: 2932, column: 13, scope: !5186)
!5186 = distinct !DILexicalBlock(scope: !5176, file: !3, line: 2931, column: 63)
!5187 = !DILocation(line: 2933, column: 4, scope: !5186)
!5188 = !DILocation(line: 2936, column: 4, scope: !5186)
!5189 = !DILocation(line: 2940, column: 4, scope: !5190)
!5190 = distinct !DILexicalBlock(scope: !5176, file: !3, line: 2937, column: 10)
!5191 = !DILocation(line: 2942, column: 2, scope: !5081)
!5192 = !DILocation(line: 2944, column: 6, scope: !5193)
!5193 = distinct !DILexicalBlock(scope: !5019, file: !3, line: 2944, column: 6)
!5194 = !DILocation(line: 2944, column: 6, scope: !5019)
!5195 = !DILocation(line: 2946, column: 10, scope: !5196)
!5196 = distinct !DILexicalBlock(scope: !5193, file: !3, line: 2944, column: 12)
!5197 = !DILocation(line: 2946, column: 16, scope: !5196)
!5198 = !DILocation(line: 2946, column: 3, scope: !5196)
!5199 = !DILocation(line: 2947, column: 10, scope: !5196)
!5200 = !DILocation(line: 2947, column: 16, scope: !5196)
!5201 = !DILocation(line: 2947, column: 3, scope: !5196)
!5202 = !DILocation(line: 2948, column: 29, scope: !5196)
!5203 = !DILocation(line: 2948, column: 38, scope: !5196)
!5204 = !DILocation(line: 2948, column: 44, scope: !5196)
!5205 = !DILocation(line: 2948, column: 11, scope: !5196)
!5206 = !DILocation(line: 2948, column: 9, scope: !5196)
!5207 = !DILocation(line: 2949, column: 7, scope: !5208)
!5208 = distinct !DILexicalBlock(scope: !5196, file: !3, line: 2949, column: 7)
!5209 = !DILocation(line: 2949, column: 7, scope: !5196)
!5210 = !DILocation(line: 2950, column: 11, scope: !5208)
!5211 = !DILocation(line: 2950, column: 4, scope: !5208)
!5212 = !DILocation(line: 2951, column: 2, scope: !5196)
!5213 = !DILocation(line: 2953, column: 2, scope: !5019)
!5214 = !DILocation(line: 2954, column: 1, scope: !5019)
!5215 = distinct !DISubprogram(name: "alps_is_cs19_trackpoint", scope: !3, file: !3, line: 2865, type: !5216, scopeLine: 2866, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !407)
!5216 = !DISubroutineType(types: !5217)
!5217 = !{!550, !210}
!5218 = !DILocalVariable(name: "psmouse", arg: 1, scope: !5215, file: !3, line: 2865, type: !210)
!5219 = !DILocation(line: 2865, column: 53, scope: !5215)
!5220 = !DILocalVariable(name: "param", scope: !5215, file: !3, line: 2867, type: !5221)
!5221 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1307, size: 16, elements: !251)
!5222 = !DILocation(line: 2867, column: 5, scope: !5215)
!5223 = !DILocation(line: 2869, column: 19, scope: !5224)
!5224 = distinct !DILexicalBlock(scope: !5215, file: !3, line: 2869, column: 6)
!5225 = !DILocation(line: 2869, column: 28, scope: !5224)
!5226 = !DILocation(line: 2870, column: 4, scope: !5224)
!5227 = !DILocation(line: 2869, column: 6, scope: !5224)
!5228 = !DILocation(line: 2869, column: 6, scope: !5215)
!5229 = !DILocation(line: 2871, column: 3, scope: !5224)
!5230 = !DILocation(line: 2879, column: 9, scope: !5215)
!5231 = !DILocation(line: 2879, column: 18, scope: !5215)
!5232 = !DILocation(line: 2879, column: 37, scope: !5215)
!5233 = !DILocation(line: 2879, column: 42, scope: !5215)
!5234 = !DILocation(line: 2879, column: 51, scope: !5215)
!5235 = !DILocation(line: 2879, column: 59, scope: !5215)
!5236 = !DILocation(line: 0, scope: !5215)
!5237 = !DILocation(line: 2879, column: 2, scope: !5215)
!5238 = !DILocation(line: 2880, column: 1, scope: !5215)
!5239 = distinct !DISubprogram(name: "kzalloc", scope: !183, file: !183, line: 662, type: !5240, scopeLine: 663, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !407)
!5240 = !DISubroutineType(types: !5241)
!5241 = !{!191, !639, !192}
!5242 = !DILocalVariable(name: "s", arg: 1, scope: !5243, file: !183, line: 445, type: !995)
!5243 = distinct !DISubprogram(name: "kmem_cache_alloc_trace", scope: !183, file: !183, line: 445, type: !5244, scopeLine: 447, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !407)
!5244 = !DISubroutineType(types: !5245)
!5245 = !{!191, !995, !192, !639}
!5246 = !DILocation(line: 445, column: 72, scope: !5243, inlinedAt: !5247)
!5247 = distinct !DILocation(line: 552, column: 10, scope: !5248, inlinedAt: !5251)
!5248 = distinct !DILexicalBlock(scope: !5249, file: !183, line: 540, column: 34)
!5249 = distinct !DILexicalBlock(scope: !5250, file: !183, line: 540, column: 6)
!5250 = distinct !DISubprogram(name: "kmalloc", scope: !183, file: !183, line: 538, type: !5240, scopeLine: 539, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !407)
!5251 = distinct !DILocation(line: 664, column: 9, scope: !5239)
!5252 = !DILocalVariable(name: "flags", arg: 2, scope: !5243, file: !183, line: 446, type: !192)
!5253 = !DILocation(line: 446, column: 9, scope: !5243, inlinedAt: !5247)
!5254 = !DILocalVariable(name: "size", arg: 3, scope: !5243, file: !183, line: 446, type: !639)
!5255 = !DILocation(line: 446, column: 23, scope: !5243, inlinedAt: !5247)
!5256 = !DILocalVariable(name: "ret", scope: !5243, file: !183, line: 448, type: !191)
!5257 = !DILocation(line: 448, column: 8, scope: !5243, inlinedAt: !5247)
!5258 = !DILocalVariable(name: "flags", arg: 1, scope: !5259, file: !183, line: 318, type: !192)
!5259 = distinct !DISubprogram(name: "kmalloc_type", scope: !183, file: !183, line: 318, type: !5260, scopeLine: 319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !407)
!5260 = !DISubroutineType(types: !5261)
!5261 = !{!182, !192}
!5262 = !DILocation(line: 318, column: 67, scope: !5259, inlinedAt: !5263)
!5263 = distinct !DILocation(line: 553, column: 20, scope: !5248, inlinedAt: !5251)
!5264 = !DILocalVariable(name: "size", arg: 1, scope: !5265, file: !183, line: 346, type: !639)
!5265 = distinct !DISubprogram(name: "kmalloc_index", scope: !183, file: !183, line: 346, type: !5266, scopeLine: 347, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !407)
!5266 = !DISubroutineType(types: !5267)
!5267 = !{!7, !639}
!5268 = !DILocation(line: 346, column: 58, scope: !5265, inlinedAt: !5269)
!5269 = distinct !DILocation(line: 547, column: 11, scope: !5248, inlinedAt: !5251)
!5270 = !DILocalVariable(name: "size", arg: 1, scope: !5271, file: !183, line: 472, type: !639)
!5271 = distinct !DISubprogram(name: "kmalloc_order_trace", scope: !183, file: !183, line: 472, type: !5272, scopeLine: 473, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !407)
!5272 = !DISubroutineType(types: !5273)
!5273 = !{!191, !639, !192, !7}
!5274 = !DILocation(line: 472, column: 28, scope: !5271, inlinedAt: !5275)
!5275 = distinct !DILocation(line: 481, column: 9, scope: !5276, inlinedAt: !5277)
!5276 = distinct !DISubprogram(name: "kmalloc_large", scope: !183, file: !183, line: 478, type: !5240, scopeLine: 479, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !407)
!5277 = distinct !DILocation(line: 545, column: 11, scope: !5278, inlinedAt: !5251)
!5278 = distinct !DILexicalBlock(scope: !5248, file: !183, line: 544, column: 7)
!5279 = !DILocalVariable(name: "flags", arg: 2, scope: !5271, file: !183, line: 472, type: !192)
!5280 = !DILocation(line: 472, column: 40, scope: !5271, inlinedAt: !5275)
!5281 = !DILocalVariable(name: "order", arg: 3, scope: !5271, file: !183, line: 472, type: !7)
!5282 = !DILocation(line: 472, column: 60, scope: !5271, inlinedAt: !5275)
!5283 = !DILocalVariable(name: "size", arg: 1, scope: !5276, file: !183, line: 478, type: !639)
!5284 = !DILocation(line: 478, column: 51, scope: !5276, inlinedAt: !5277)
!5285 = !DILocalVariable(name: "flags", arg: 2, scope: !5276, file: !183, line: 478, type: !192)
!5286 = !DILocation(line: 478, column: 63, scope: !5276, inlinedAt: !5277)
!5287 = !DILocalVariable(name: "order", scope: !5276, file: !183, line: 480, type: !7)
!5288 = !DILocation(line: 480, column: 15, scope: !5276, inlinedAt: !5277)
!5289 = !DILocalVariable(name: "size", arg: 1, scope: !5250, file: !183, line: 538, type: !639)
!5290 = !DILocation(line: 538, column: 45, scope: !5250, inlinedAt: !5251)
!5291 = !DILocalVariable(name: "flags", arg: 2, scope: !5250, file: !183, line: 538, type: !192)
!5292 = !DILocation(line: 538, column: 57, scope: !5250, inlinedAt: !5251)
!5293 = !DILocalVariable(name: "index", scope: !5248, file: !183, line: 542, type: !7)
!5294 = !DILocation(line: 542, column: 16, scope: !5248, inlinedAt: !5251)
!5295 = !DILocalVariable(name: "size", arg: 1, scope: !5239, file: !183, line: 662, type: !639)
!5296 = !DILocation(line: 662, column: 36, scope: !5239)
!5297 = !DILocalVariable(name: "flags", arg: 2, scope: !5239, file: !183, line: 662, type: !192)
!5298 = !DILocation(line: 662, column: 48, scope: !5239)
!5299 = !DILocation(line: 664, column: 17, scope: !5239)
!5300 = !DILocation(line: 664, column: 23, scope: !5239)
!5301 = !DILocation(line: 664, column: 29, scope: !5239)
!5302 = !DILocation(line: 540, column: 27, scope: !5249, inlinedAt: !5251)
!5303 = !DILocation(line: 540, column: 6, scope: !5249, inlinedAt: !5251)
!5304 = !DILocation(line: 540, column: 6, scope: !5250, inlinedAt: !5251)
!5305 = !DILocation(line: 544, column: 7, scope: !5278, inlinedAt: !5251)
!5306 = !DILocation(line: 544, column: 12, scope: !5278, inlinedAt: !5251)
!5307 = !DILocation(line: 544, column: 7, scope: !5248, inlinedAt: !5251)
!5308 = !DILocation(line: 545, column: 25, scope: !5278, inlinedAt: !5251)
!5309 = !DILocation(line: 545, column: 31, scope: !5278, inlinedAt: !5251)
!5310 = !DILocation(line: 480, column: 33, scope: !5276, inlinedAt: !5277)
!5311 = !DILocation(line: 480, column: 23, scope: !5276, inlinedAt: !5277)
!5312 = !DILocation(line: 481, column: 29, scope: !5276, inlinedAt: !5277)
!5313 = !DILocation(line: 481, column: 35, scope: !5276, inlinedAt: !5277)
!5314 = !DILocation(line: 481, column: 42, scope: !5276, inlinedAt: !5277)
!5315 = !DILocation(line: 474, column: 23, scope: !5271, inlinedAt: !5275)
!5316 = !DILocation(line: 474, column: 29, scope: !5271, inlinedAt: !5275)
!5317 = !DILocation(line: 474, column: 36, scope: !5271, inlinedAt: !5275)
!5318 = !DILocation(line: 474, column: 9, scope: !5271, inlinedAt: !5275)
!5319 = !DILocation(line: 545, column: 4, scope: !5278, inlinedAt: !5251)
!5320 = !DILocation(line: 547, column: 25, scope: !5248, inlinedAt: !5251)
!5321 = !DILocation(line: 348, column: 7, scope: !5322, inlinedAt: !5269)
!5322 = distinct !DILexicalBlock(scope: !5265, file: !183, line: 348, column: 6)
!5323 = !DILocation(line: 348, column: 6, scope: !5265, inlinedAt: !5269)
!5324 = !DILocation(line: 349, column: 3, scope: !5322, inlinedAt: !5269)
!5325 = !DILocation(line: 351, column: 6, scope: !5326, inlinedAt: !5269)
!5326 = distinct !DILexicalBlock(scope: !5265, file: !183, line: 351, column: 6)
!5327 = !DILocation(line: 351, column: 11, scope: !5326, inlinedAt: !5269)
!5328 = !DILocation(line: 351, column: 6, scope: !5265, inlinedAt: !5269)
!5329 = !DILocation(line: 352, column: 3, scope: !5326, inlinedAt: !5269)
!5330 = !DILocation(line: 354, column: 32, scope: !5331, inlinedAt: !5269)
!5331 = distinct !DILexicalBlock(scope: !5265, file: !183, line: 354, column: 6)
!5332 = !DILocation(line: 354, column: 37, scope: !5331, inlinedAt: !5269)
!5333 = !DILocation(line: 354, column: 42, scope: !5331, inlinedAt: !5269)
!5334 = !DILocation(line: 354, column: 45, scope: !5331, inlinedAt: !5269)
!5335 = !DILocation(line: 354, column: 50, scope: !5331, inlinedAt: !5269)
!5336 = !DILocation(line: 354, column: 6, scope: !5265, inlinedAt: !5269)
!5337 = !DILocation(line: 355, column: 3, scope: !5331, inlinedAt: !5269)
!5338 = !DILocation(line: 356, column: 32, scope: !5339, inlinedAt: !5269)
!5339 = distinct !DILexicalBlock(scope: !5265, file: !183, line: 356, column: 6)
!5340 = !DILocation(line: 356, column: 37, scope: !5339, inlinedAt: !5269)
!5341 = !DILocation(line: 356, column: 43, scope: !5339, inlinedAt: !5269)
!5342 = !DILocation(line: 356, column: 46, scope: !5339, inlinedAt: !5269)
!5343 = !DILocation(line: 356, column: 51, scope: !5339, inlinedAt: !5269)
!5344 = !DILocation(line: 356, column: 6, scope: !5265, inlinedAt: !5269)
!5345 = !DILocation(line: 357, column: 3, scope: !5339, inlinedAt: !5269)
!5346 = !DILocation(line: 358, column: 6, scope: !5347, inlinedAt: !5269)
!5347 = distinct !DILexicalBlock(scope: !5265, file: !183, line: 358, column: 6)
!5348 = !DILocation(line: 358, column: 11, scope: !5347, inlinedAt: !5269)
!5349 = !DILocation(line: 358, column: 6, scope: !5265, inlinedAt: !5269)
!5350 = !DILocation(line: 358, column: 26, scope: !5347, inlinedAt: !5269)
!5351 = !DILocation(line: 359, column: 6, scope: !5352, inlinedAt: !5269)
!5352 = distinct !DILexicalBlock(scope: !5265, file: !183, line: 359, column: 6)
!5353 = !DILocation(line: 359, column: 11, scope: !5352, inlinedAt: !5269)
!5354 = !DILocation(line: 359, column: 6, scope: !5265, inlinedAt: !5269)
!5355 = !DILocation(line: 359, column: 26, scope: !5352, inlinedAt: !5269)
!5356 = !DILocation(line: 360, column: 6, scope: !5357, inlinedAt: !5269)
!5357 = distinct !DILexicalBlock(scope: !5265, file: !183, line: 360, column: 6)
!5358 = !DILocation(line: 360, column: 11, scope: !5357, inlinedAt: !5269)
!5359 = !DILocation(line: 360, column: 6, scope: !5265, inlinedAt: !5269)
!5360 = !DILocation(line: 360, column: 26, scope: !5357, inlinedAt: !5269)
!5361 = !DILocation(line: 361, column: 6, scope: !5362, inlinedAt: !5269)
!5362 = distinct !DILexicalBlock(scope: !5265, file: !183, line: 361, column: 6)
!5363 = !DILocation(line: 361, column: 11, scope: !5362, inlinedAt: !5269)
!5364 = !DILocation(line: 361, column: 6, scope: !5265, inlinedAt: !5269)
!5365 = !DILocation(line: 361, column: 26, scope: !5362, inlinedAt: !5269)
!5366 = !DILocation(line: 362, column: 6, scope: !5367, inlinedAt: !5269)
!5367 = distinct !DILexicalBlock(scope: !5265, file: !183, line: 362, column: 6)
!5368 = !DILocation(line: 362, column: 11, scope: !5367, inlinedAt: !5269)
!5369 = !DILocation(line: 362, column: 6, scope: !5265, inlinedAt: !5269)
!5370 = !DILocation(line: 362, column: 26, scope: !5367, inlinedAt: !5269)
!5371 = !DILocation(line: 363, column: 6, scope: !5372, inlinedAt: !5269)
!5372 = distinct !DILexicalBlock(scope: !5265, file: !183, line: 363, column: 6)
!5373 = !DILocation(line: 363, column: 11, scope: !5372, inlinedAt: !5269)
!5374 = !DILocation(line: 363, column: 6, scope: !5265, inlinedAt: !5269)
!5375 = !DILocation(line: 363, column: 26, scope: !5372, inlinedAt: !5269)
!5376 = !DILocation(line: 364, column: 6, scope: !5377, inlinedAt: !5269)
!5377 = distinct !DILexicalBlock(scope: !5265, file: !183, line: 364, column: 6)
!5378 = !DILocation(line: 364, column: 11, scope: !5377, inlinedAt: !5269)
!5379 = !DILocation(line: 364, column: 6, scope: !5265, inlinedAt: !5269)
!5380 = !DILocation(line: 364, column: 26, scope: !5377, inlinedAt: !5269)
!5381 = !DILocation(line: 365, column: 6, scope: !5382, inlinedAt: !5269)
!5382 = distinct !DILexicalBlock(scope: !5265, file: !183, line: 365, column: 6)
!5383 = !DILocation(line: 365, column: 11, scope: !5382, inlinedAt: !5269)
!5384 = !DILocation(line: 365, column: 6, scope: !5265, inlinedAt: !5269)
!5385 = !DILocation(line: 365, column: 26, scope: !5382, inlinedAt: !5269)
!5386 = !DILocation(line: 366, column: 6, scope: !5387, inlinedAt: !5269)
!5387 = distinct !DILexicalBlock(scope: !5265, file: !183, line: 366, column: 6)
!5388 = !DILocation(line: 366, column: 11, scope: !5387, inlinedAt: !5269)
!5389 = !DILocation(line: 366, column: 6, scope: !5265, inlinedAt: !5269)
!5390 = !DILocation(line: 366, column: 26, scope: !5387, inlinedAt: !5269)
!5391 = !DILocation(line: 367, column: 6, scope: !5392, inlinedAt: !5269)
!5392 = distinct !DILexicalBlock(scope: !5265, file: !183, line: 367, column: 6)
!5393 = !DILocation(line: 367, column: 11, scope: !5392, inlinedAt: !5269)
!5394 = !DILocation(line: 367, column: 6, scope: !5265, inlinedAt: !5269)
!5395 = !DILocation(line: 367, column: 26, scope: !5392, inlinedAt: !5269)
!5396 = !DILocation(line: 368, column: 6, scope: !5397, inlinedAt: !5269)
!5397 = distinct !DILexicalBlock(scope: !5265, file: !183, line: 368, column: 6)
!5398 = !DILocation(line: 368, column: 11, scope: !5397, inlinedAt: !5269)
!5399 = !DILocation(line: 368, column: 6, scope: !5265, inlinedAt: !5269)
!5400 = !DILocation(line: 368, column: 26, scope: !5397, inlinedAt: !5269)
!5401 = !DILocation(line: 369, column: 6, scope: !5402, inlinedAt: !5269)
!5402 = distinct !DILexicalBlock(scope: !5265, file: !183, line: 369, column: 6)
!5403 = !DILocation(line: 369, column: 11, scope: !5402, inlinedAt: !5269)
!5404 = !DILocation(line: 369, column: 6, scope: !5265, inlinedAt: !5269)
!5405 = !DILocation(line: 369, column: 26, scope: !5402, inlinedAt: !5269)
!5406 = !DILocation(line: 370, column: 6, scope: !5407, inlinedAt: !5269)
!5407 = distinct !DILexicalBlock(scope: !5265, file: !183, line: 370, column: 6)
!5408 = !DILocation(line: 370, column: 11, scope: !5407, inlinedAt: !5269)
!5409 = !DILocation(line: 370, column: 6, scope: !5265, inlinedAt: !5269)
!5410 = !DILocation(line: 370, column: 26, scope: !5407, inlinedAt: !5269)
!5411 = !DILocation(line: 371, column: 6, scope: !5412, inlinedAt: !5269)
!5412 = distinct !DILexicalBlock(scope: !5265, file: !183, line: 371, column: 6)
!5413 = !DILocation(line: 371, column: 11, scope: !5412, inlinedAt: !5269)
!5414 = !DILocation(line: 371, column: 6, scope: !5265, inlinedAt: !5269)
!5415 = !DILocation(line: 371, column: 26, scope: !5412, inlinedAt: !5269)
!5416 = !DILocation(line: 372, column: 6, scope: !5417, inlinedAt: !5269)
!5417 = distinct !DILexicalBlock(scope: !5265, file: !183, line: 372, column: 6)
!5418 = !DILocation(line: 372, column: 11, scope: !5417, inlinedAt: !5269)
!5419 = !DILocation(line: 372, column: 6, scope: !5265, inlinedAt: !5269)
!5420 = !DILocation(line: 372, column: 26, scope: !5417, inlinedAt: !5269)
!5421 = !DILocation(line: 373, column: 6, scope: !5422, inlinedAt: !5269)
!5422 = distinct !DILexicalBlock(scope: !5265, file: !183, line: 373, column: 6)
!5423 = !DILocation(line: 373, column: 11, scope: !5422, inlinedAt: !5269)
!5424 = !DILocation(line: 373, column: 6, scope: !5265, inlinedAt: !5269)
!5425 = !DILocation(line: 373, column: 26, scope: !5422, inlinedAt: !5269)
!5426 = !DILocation(line: 374, column: 6, scope: !5427, inlinedAt: !5269)
!5427 = distinct !DILexicalBlock(scope: !5265, file: !183, line: 374, column: 6)
!5428 = !DILocation(line: 374, column: 11, scope: !5427, inlinedAt: !5269)
!5429 = !DILocation(line: 374, column: 6, scope: !5265, inlinedAt: !5269)
!5430 = !DILocation(line: 374, column: 26, scope: !5427, inlinedAt: !5269)
!5431 = !DILocation(line: 375, column: 6, scope: !5432, inlinedAt: !5269)
!5432 = distinct !DILexicalBlock(scope: !5265, file: !183, line: 375, column: 6)
!5433 = !DILocation(line: 375, column: 11, scope: !5432, inlinedAt: !5269)
!5434 = !DILocation(line: 375, column: 6, scope: !5265, inlinedAt: !5269)
!5435 = !DILocation(line: 375, column: 27, scope: !5432, inlinedAt: !5269)
!5436 = !DILocation(line: 376, column: 6, scope: !5437, inlinedAt: !5269)
!5437 = distinct !DILexicalBlock(scope: !5265, file: !183, line: 376, column: 6)
!5438 = !DILocation(line: 376, column: 11, scope: !5437, inlinedAt: !5269)
!5439 = !DILocation(line: 376, column: 6, scope: !5265, inlinedAt: !5269)
!5440 = !DILocation(line: 376, column: 32, scope: !5437, inlinedAt: !5269)
!5441 = !DILocation(line: 377, column: 6, scope: !5442, inlinedAt: !5269)
!5442 = distinct !DILexicalBlock(scope: !5265, file: !183, line: 377, column: 6)
!5443 = !DILocation(line: 377, column: 11, scope: !5442, inlinedAt: !5269)
!5444 = !DILocation(line: 377, column: 6, scope: !5265, inlinedAt: !5269)
!5445 = !DILocation(line: 377, column: 32, scope: !5442, inlinedAt: !5269)
!5446 = !DILocation(line: 378, column: 6, scope: !5447, inlinedAt: !5269)
!5447 = distinct !DILexicalBlock(scope: !5265, file: !183, line: 378, column: 6)
!5448 = !DILocation(line: 378, column: 11, scope: !5447, inlinedAt: !5269)
!5449 = !DILocation(line: 378, column: 6, scope: !5265, inlinedAt: !5269)
!5450 = !DILocation(line: 378, column: 32, scope: !5447, inlinedAt: !5269)
!5451 = !DILocation(line: 379, column: 6, scope: !5452, inlinedAt: !5269)
!5452 = distinct !DILexicalBlock(scope: !5265, file: !183, line: 379, column: 6)
!5453 = !DILocation(line: 379, column: 11, scope: !5452, inlinedAt: !5269)
!5454 = !DILocation(line: 379, column: 6, scope: !5265, inlinedAt: !5269)
!5455 = !DILocation(line: 379, column: 33, scope: !5452, inlinedAt: !5269)
!5456 = !DILocation(line: 380, column: 6, scope: !5457, inlinedAt: !5269)
!5457 = distinct !DILexicalBlock(scope: !5265, file: !183, line: 380, column: 6)
!5458 = !DILocation(line: 380, column: 11, scope: !5457, inlinedAt: !5269)
!5459 = !DILocation(line: 380, column: 6, scope: !5265, inlinedAt: !5269)
!5460 = !DILocation(line: 380, column: 33, scope: !5457, inlinedAt: !5269)
!5461 = !DILocation(line: 381, column: 6, scope: !5462, inlinedAt: !5269)
!5462 = distinct !DILexicalBlock(scope: !5265, file: !183, line: 381, column: 6)
!5463 = !DILocation(line: 381, column: 11, scope: !5462, inlinedAt: !5269)
!5464 = !DILocation(line: 381, column: 6, scope: !5265, inlinedAt: !5269)
!5465 = !DILocation(line: 381, column: 33, scope: !5462, inlinedAt: !5269)
!5466 = !DILocation(line: 382, column: 2, scope: !5467, inlinedAt: !5269)
!5467 = distinct !DILexicalBlock(scope: !5468, file: !183, line: 382, column: 2)
!5468 = distinct !DILexicalBlock(scope: !5265, file: !183, line: 382, column: 2)
!5469 = !{i32 -2144566401, i32 -2144566372, i32 -2144566326, i32 -2144566268, i32 -2144566214, i32 -2144566160, i32 -2144566105, i32 -2144566074}
!5470 = !DILocation(line: 382, column: 2, scope: !5471, inlinedAt: !5269)
!5471 = distinct !DILexicalBlock(scope: !5472, file: !183, line: 382, column: 2)
!5472 = distinct !DILexicalBlock(scope: !5468, file: !183, line: 382, column: 2)
!5473 = !{i32 -2144565631, i32 -2144565624, i32 -2144565570, i32 -2144565539, i32 -2144565509}
!5474 = !DILocation(line: 382, column: 2, scope: !5472, inlinedAt: !5269)
!5475 = !DILocation(line: 386, column: 1, scope: !5265, inlinedAt: !5269)
!5476 = !DILocation(line: 547, column: 9, scope: !5248, inlinedAt: !5251)
!5477 = !DILocation(line: 549, column: 8, scope: !5478, inlinedAt: !5251)
!5478 = distinct !DILexicalBlock(scope: !5248, file: !183, line: 549, column: 7)
!5479 = !DILocation(line: 549, column: 7, scope: !5248, inlinedAt: !5251)
!5480 = !DILocation(line: 550, column: 4, scope: !5478, inlinedAt: !5251)
!5481 = !DILocation(line: 553, column: 33, scope: !5248, inlinedAt: !5251)
!5482 = !DILocation(line: 325, column: 6, scope: !5483, inlinedAt: !5263)
!5483 = distinct !DILexicalBlock(scope: !5259, file: !183, line: 325, column: 6)
!5484 = !DILocation(line: 325, column: 6, scope: !5259, inlinedAt: !5263)
!5485 = !DILocation(line: 326, column: 3, scope: !5483, inlinedAt: !5263)
!5486 = !DILocation(line: 332, column: 9, scope: !5259, inlinedAt: !5263)
!5487 = !DILocation(line: 332, column: 15, scope: !5259, inlinedAt: !5263)
!5488 = !DILocation(line: 332, column: 2, scope: !5259, inlinedAt: !5263)
!5489 = !DILocation(line: 336, column: 1, scope: !5259, inlinedAt: !5263)
!5490 = !DILocation(line: 553, column: 5, scope: !5248, inlinedAt: !5251)
!5491 = !DILocation(line: 553, column: 41, scope: !5248, inlinedAt: !5251)
!5492 = !DILocation(line: 554, column: 5, scope: !5248, inlinedAt: !5251)
!5493 = !DILocation(line: 554, column: 12, scope: !5248, inlinedAt: !5251)
!5494 = !DILocation(line: 448, column: 31, scope: !5243, inlinedAt: !5247)
!5495 = !DILocation(line: 448, column: 34, scope: !5243, inlinedAt: !5247)
!5496 = !DILocation(line: 448, column: 14, scope: !5243, inlinedAt: !5247)
!5497 = !DILocation(line: 450, column: 22, scope: !5243, inlinedAt: !5247)
!5498 = !DILocation(line: 450, column: 25, scope: !5243, inlinedAt: !5247)
!5499 = !DILocation(line: 450, column: 30, scope: !5243, inlinedAt: !5247)
!5500 = !DILocation(line: 450, column: 36, scope: !5243, inlinedAt: !5247)
!5501 = !DILocation(line: 450, column: 8, scope: !5243, inlinedAt: !5247)
!5502 = !DILocation(line: 450, column: 6, scope: !5243, inlinedAt: !5247)
!5503 = !DILocation(line: 451, column: 9, scope: !5243, inlinedAt: !5247)
!5504 = !DILocation(line: 552, column: 3, scope: !5248, inlinedAt: !5251)
!5505 = !DILocation(line: 557, column: 19, scope: !5250, inlinedAt: !5251)
!5506 = !DILocation(line: 557, column: 25, scope: !5250, inlinedAt: !5251)
!5507 = !DILocation(line: 557, column: 9, scope: !5250, inlinedAt: !5251)
!5508 = !DILocation(line: 557, column: 2, scope: !5250, inlinedAt: !5251)
!5509 = !DILocation(line: 558, column: 1, scope: !5250, inlinedAt: !5251)
!5510 = !DILocation(line: 664, column: 2, scope: !5239)
!5511 = distinct !DISubprogram(name: "kasan_check_write", scope: !5512, file: !5512, line: 38, type: !5513, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !407)
!5512 = !DIFile(filename: "./include/linux/kasan-checks.h", directory: "/home/lizy2001/genbc/linux")
!5513 = !DISubroutineType(types: !5514)
!5514 = !{!550, !4430, !7}
!5515 = !DILocalVariable(name: "p", arg: 1, scope: !5511, file: !5512, line: 38, type: !4430)
!5516 = !DILocation(line: 38, column: 59, scope: !5511)
!5517 = !DILocalVariable(name: "size", arg: 2, scope: !5511, file: !5512, line: 38, type: !7)
!5518 = !DILocation(line: 38, column: 75, scope: !5511)
!5519 = !DILocation(line: 40, column: 2, scope: !5511)
!5520 = distinct !DISubprogram(name: "kcsan_check_access", scope: !5521, file: !5521, line: 178, type: !5522, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !407)
!5521 = !DIFile(filename: "./include/linux/kcsan-checks.h", directory: "/home/lizy2001/genbc/linux")
!5522 = !DISubroutineType(types: !5523)
!5523 = !{null, !4430, !639, !262}
!5524 = !DILocalVariable(name: "ptr", arg: 1, scope: !5520, file: !5521, line: 178, type: !4430)
!5525 = !DILocation(line: 178, column: 60, scope: !5520)
!5526 = !DILocalVariable(name: "size", arg: 2, scope: !5520, file: !5521, line: 178, type: !639)
!5527 = !DILocation(line: 178, column: 72, scope: !5520)
!5528 = !DILocalVariable(name: "type", arg: 3, scope: !5520, file: !5521, line: 179, type: !262)
!5529 = !DILocation(line: 179, column: 15, scope: !5520)
!5530 = !DILocation(line: 179, column: 23, scope: !5520)
!5531 = distinct !DISubprogram(name: "ERR_PTR", scope: !5532, file: !5532, line: 24, type: !5533, scopeLine: 25, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !407)
!5532 = !DIFile(filename: "./include/linux/err.h", directory: "/home/lizy2001/genbc/linux")
!5533 = !DISubroutineType(types: !5534)
!5534 = !{!191, !131}
!5535 = !DILocalVariable(name: "error", arg: 1, scope: !5531, file: !5532, line: 24, type: !131)
!5536 = !DILocation(line: 24, column: 48, scope: !5531)
!5537 = !DILocation(line: 26, column: 18, scope: !5531)
!5538 = !DILocation(line: 26, column: 9, scope: !5531)
!5539 = !DILocation(line: 26, column: 2, scope: !5531)
!5540 = distinct !DISubprogram(name: "alps_report_bare_ps2_packet", scope: !3, file: !3, line: 1466, type: !5541, scopeLine: 1469, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !407)
!5541 = !DISubroutineType(types: !5542)
!5542 = !{null, !210, !4063, !550}
!5543 = !DILocalVariable(name: "psmouse", arg: 1, scope: !5540, file: !3, line: 1466, type: !210)
!5544 = !DILocation(line: 1466, column: 57, scope: !5540)
!5545 = !DILocalVariable(name: "packet", arg: 2, scope: !5540, file: !3, line: 1467, type: !4063)
!5546 = !DILocation(line: 1467, column: 20, scope: !5540)
!5547 = !DILocalVariable(name: "report_buttons", arg: 3, scope: !5540, file: !3, line: 1468, type: !550)
!5548 = !DILocation(line: 1468, column: 11, scope: !5540)
!5549 = !DILocalVariable(name: "priv", scope: !5540, file: !3, line: 1470, type: !206)
!5550 = !DILocation(line: 1470, column: 20, scope: !5540)
!5551 = !DILocation(line: 1470, column: 27, scope: !5540)
!5552 = !DILocation(line: 1470, column: 36, scope: !5540)
!5553 = !DILocalVariable(name: "dev", scope: !5540, file: !3, line: 1471, type: !215)
!5554 = !DILocation(line: 1471, column: 20, scope: !5540)
!5555 = !DILocalVariable(name: "dev2", scope: !5540, file: !3, line: 1471, type: !215)
!5556 = !DILocation(line: 1471, column: 26, scope: !5540)
!5557 = !DILocation(line: 1474, column: 6, scope: !5558)
!5558 = distinct !DILexicalBlock(scope: !5540, file: !3, line: 1474, column: 6)
!5559 = !DILocation(line: 1474, column: 12, scope: !5558)
!5560 = !DILocation(line: 1474, column: 26, scope: !5558)
!5561 = !DILocation(line: 1474, column: 43, scope: !5558)
!5562 = !DILocation(line: 1475, column: 7, scope: !5558)
!5563 = !DILocation(line: 1475, column: 13, scope: !5558)
!5564 = !DILocation(line: 1475, column: 19, scope: !5558)
!5565 = !DILocation(line: 1474, column: 6, scope: !5540)
!5566 = !DILocation(line: 1477, column: 9, scope: !5567)
!5567 = distinct !DILexicalBlock(scope: !5558, file: !3, line: 1475, column: 38)
!5568 = !DILocation(line: 1477, column: 15, scope: !5567)
!5569 = !DILocation(line: 1477, column: 7, scope: !5567)
!5570 = !DILocation(line: 1478, column: 10, scope: !5567)
!5571 = !DILocation(line: 1478, column: 19, scope: !5567)
!5572 = !DILocation(line: 1478, column: 8, scope: !5567)
!5573 = !DILocation(line: 1479, column: 2, scope: !5567)
!5574 = !DILocation(line: 1479, column: 13, scope: !5575)
!5575 = distinct !DILexicalBlock(scope: !5558, file: !3, line: 1479, column: 13)
!5576 = !DILocation(line: 1479, column: 13, scope: !5558)
!5577 = !DILocation(line: 1481, column: 15, scope: !5578)
!5578 = distinct !DILexicalBlock(scope: !5579, file: !3, line: 1481, column: 7)
!5579 = distinct !DILexicalBlock(scope: !5575, file: !3, line: 1479, column: 51)
!5580 = !DILocation(line: 1481, column: 21, scope: !5578)
!5581 = !DILocation(line: 1481, column: 8, scope: !5578)
!5582 = !DILocation(line: 1481, column: 7, scope: !5579)
!5583 = !DILocation(line: 1482, column: 23, scope: !5578)
!5584 = !DILocation(line: 1482, column: 33, scope: !5578)
!5585 = !DILocation(line: 1482, column: 39, scope: !5578)
!5586 = !DILocation(line: 1482, column: 4, scope: !5578)
!5587 = !DILocation(line: 1484, column: 3, scope: !5579)
!5588 = !DILocation(line: 1486, column: 9, scope: !5589)
!5589 = distinct !DILexicalBlock(scope: !5575, file: !3, line: 1485, column: 9)
!5590 = !DILocation(line: 1486, column: 15, scope: !5589)
!5591 = !DILocation(line: 1486, column: 7, scope: !5589)
!5592 = !DILocation(line: 1489, column: 6, scope: !5593)
!5593 = distinct !DILexicalBlock(scope: !5540, file: !3, line: 1489, column: 6)
!5594 = !DILocation(line: 1489, column: 6, scope: !5540)
!5595 = !DILocation(line: 1490, column: 23, scope: !5593)
!5596 = !DILocation(line: 1490, column: 28, scope: !5593)
!5597 = !DILocation(line: 1491, column: 5, scope: !5593)
!5598 = !DILocation(line: 1491, column: 15, scope: !5593)
!5599 = !DILocation(line: 1491, column: 20, scope: !5593)
!5600 = !DILocation(line: 1491, column: 30, scope: !5593)
!5601 = !DILocation(line: 1491, column: 35, scope: !5593)
!5602 = !DILocation(line: 1491, column: 45, scope: !5593)
!5603 = !DILocation(line: 1490, column: 3, scope: !5593)
!5604 = !DILocation(line: 1493, column: 33, scope: !5540)
!5605 = !DILocation(line: 1493, column: 38, scope: !5540)
!5606 = !DILocation(line: 1493, column: 2, scope: !5540)
!5607 = !DILocation(line: 1495, column: 13, scope: !5540)
!5608 = !DILocation(line: 1495, column: 2, scope: !5540)
!5609 = !DILocation(line: 1496, column: 1, scope: !5540)
!5610 = distinct !DISubprogram(name: "alps_handle_interleaved_ps2", scope: !3, file: !3, line: 1498, type: !3987, scopeLine: 1499, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !407)
!5611 = !DILocalVariable(name: "m", arg: 1, scope: !5612, file: !5613, line: 363, type: !2700)
!5612 = distinct !DISubprogram(name: "msecs_to_jiffies", scope: !5613, file: !5613, line: 363, type: !5614, scopeLine: 364, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !407)
!5613 = !DIFile(filename: "./include/linux/jiffies.h", directory: "/home/lizy2001/genbc/linux")
!5614 = !DISubroutineType(types: !5615)
!5615 = !{!190, !2700}
!5616 = !DILocation(line: 363, column: 74, scope: !5612, inlinedAt: !5617)
!5617 = distinct !DILocation(line: 1512, column: 37, scope: !5618)
!5618 = distinct !DILexicalBlock(scope: !5619, file: !3, line: 1505, column: 28)
!5619 = distinct !DILexicalBlock(scope: !5610, file: !3, line: 1505, column: 6)
!5620 = !DILocalVariable(name: "psmouse", arg: 1, scope: !5610, file: !3, line: 1498, type: !210)
!5621 = !DILocation(line: 1498, column: 66, scope: !5610)
!5622 = !DILocalVariable(name: "priv", scope: !5610, file: !3, line: 1500, type: !206)
!5623 = !DILocation(line: 1500, column: 20, scope: !5610)
!5624 = !DILocation(line: 1500, column: 27, scope: !5610)
!5625 = !DILocation(line: 1500, column: 36, scope: !5610)
!5626 = !DILocation(line: 1502, column: 6, scope: !5627)
!5627 = distinct !DILexicalBlock(scope: !5610, file: !3, line: 1502, column: 6)
!5628 = !DILocation(line: 1502, column: 15, scope: !5627)
!5629 = !DILocation(line: 1502, column: 22, scope: !5627)
!5630 = !DILocation(line: 1502, column: 6, scope: !5610)
!5631 = !DILocation(line: 1503, column: 3, scope: !5627)
!5632 = !DILocation(line: 1505, column: 6, scope: !5619)
!5633 = !DILocation(line: 1505, column: 15, scope: !5619)
!5634 = !DILocation(line: 1505, column: 22, scope: !5619)
!5635 = !DILocation(line: 1505, column: 6, scope: !5610)
!5636 = !DILocation(line: 1512, column: 14, scope: !5618)
!5637 = !DILocation(line: 1512, column: 20, scope: !5618)
!5638 = !DILocation(line: 1512, column: 27, scope: !5618)
!5639 = !DILocation(line: 365, column: 27, scope: !5640, inlinedAt: !5617)
!5640 = distinct !DILexicalBlock(scope: !5612, file: !5613, line: 365, column: 6)
!5641 = !DILocation(line: 365, column: 6, scope: !5640, inlinedAt: !5617)
!5642 = !DILocation(line: 365, column: 6, scope: !5612, inlinedAt: !5617)
!5643 = !DILocation(line: 366, column: 12, scope: !5644, inlinedAt: !5617)
!5644 = distinct !DILexicalBlock(scope: !5645, file: !5613, line: 366, column: 7)
!5645 = distinct !DILexicalBlock(scope: !5640, file: !5613, line: 365, column: 31)
!5646 = !DILocation(line: 366, column: 14, scope: !5644, inlinedAt: !5617)
!5647 = !DILocation(line: 366, column: 7, scope: !5645, inlinedAt: !5617)
!5648 = !DILocation(line: 367, column: 4, scope: !5644, inlinedAt: !5617)
!5649 = !DILocation(line: 368, column: 28, scope: !5645, inlinedAt: !5617)
!5650 = !DILocation(line: 368, column: 10, scope: !5645, inlinedAt: !5617)
!5651 = !DILocation(line: 368, column: 3, scope: !5645, inlinedAt: !5617)
!5652 = !DILocation(line: 370, column: 29, scope: !5653, inlinedAt: !5617)
!5653 = distinct !DILexicalBlock(scope: !5640, file: !5613, line: 369, column: 9)
!5654 = !DILocation(line: 370, column: 10, scope: !5653, inlinedAt: !5617)
!5655 = !DILocation(line: 370, column: 3, scope: !5653, inlinedAt: !5617)
!5656 = !DILocation(line: 372, column: 1, scope: !5612, inlinedAt: !5617)
!5657 = !DILocation(line: 1512, column: 35, scope: !5618)
!5658 = !DILocation(line: 1512, column: 3, scope: !5618)
!5659 = !DILocation(line: 1513, column: 3, scope: !5618)
!5660 = !DILocation(line: 1516, column: 13, scope: !5610)
!5661 = !DILocation(line: 1516, column: 19, scope: !5610)
!5662 = !DILocation(line: 1516, column: 2, scope: !5610)
!5663 = !DILocation(line: 1518, column: 6, scope: !5664)
!5664 = distinct !DILexicalBlock(scope: !5610, file: !3, line: 1518, column: 6)
!5665 = !DILocation(line: 1518, column: 15, scope: !5664)
!5666 = !DILocation(line: 1518, column: 25, scope: !5664)
!5667 = !DILocation(line: 1518, column: 6, scope: !5610)
!5668 = !DILocation(line: 1526, column: 9, scope: !5669)
!5669 = distinct !DILexicalBlock(scope: !5670, file: !3, line: 1526, column: 7)
!5670 = distinct !DILexicalBlock(scope: !5664, file: !3, line: 1518, column: 33)
!5671 = !DILocation(line: 1526, column: 18, scope: !5669)
!5672 = !DILocation(line: 1527, column: 9, scope: !5669)
!5673 = !DILocation(line: 1527, column: 18, scope: !5669)
!5674 = !DILocation(line: 1526, column: 28, scope: !5669)
!5675 = !DILocation(line: 1528, column: 9, scope: !5669)
!5676 = !DILocation(line: 1528, column: 18, scope: !5669)
!5677 = !DILocation(line: 1527, column: 28, scope: !5669)
!5678 = !DILocation(line: 1528, column: 29, scope: !5669)
!5679 = !DILocation(line: 1528, column: 37, scope: !5669)
!5680 = !DILocation(line: 1529, column: 34, scope: !5669)
!5681 = !DILocation(line: 1529, column: 40, scope: !5669)
!5682 = !DILocation(line: 1529, column: 49, scope: !5669)
!5683 = !DILocation(line: 1529, column: 9, scope: !5669)
!5684 = !DILocation(line: 1526, column: 7, scope: !5670)
!5685 = !DILocation(line: 1533, column: 4, scope: !5686)
!5686 = distinct !DILexicalBlock(scope: !5669, file: !3, line: 1529, column: 62)
!5687 = !DILocation(line: 1536, column: 3, scope: !5670)
!5688 = !DILocation(line: 1536, column: 9, scope: !5670)
!5689 = !DILocation(line: 1536, column: 24, scope: !5670)
!5690 = !DILocation(line: 1539, column: 24, scope: !5670)
!5691 = !DILocation(line: 1539, column: 33, scope: !5670)
!5692 = !DILocation(line: 1539, column: 3, scope: !5670)
!5693 = !DILocation(line: 1539, column: 12, scope: !5670)
!5694 = !DILocation(line: 1539, column: 22, scope: !5670)
!5695 = !DILocation(line: 1540, column: 3, scope: !5670)
!5696 = !DILocation(line: 1540, column: 12, scope: !5670)
!5697 = !DILocation(line: 1540, column: 19, scope: !5670)
!5698 = !DILocation(line: 1542, column: 2, scope: !5670)
!5699 = !DILocation(line: 1560, column: 31, scope: !5700)
!5700 = distinct !DILexicalBlock(scope: !5664, file: !3, line: 1542, column: 9)
!5701 = !DILocation(line: 1560, column: 41, scope: !5700)
!5702 = !DILocation(line: 1560, column: 50, scope: !5700)
!5703 = !DILocation(line: 1560, column: 3, scope: !5700)
!5704 = !DILocation(line: 1570, column: 24, scope: !5700)
!5705 = !DILocation(line: 1570, column: 33, scope: !5700)
!5706 = !DILocation(line: 1570, column: 43, scope: !5700)
!5707 = !DILocation(line: 1570, column: 3, scope: !5700)
!5708 = !DILocation(line: 1570, column: 12, scope: !5700)
!5709 = !DILocation(line: 1570, column: 22, scope: !5700)
!5710 = !DILocation(line: 1571, column: 3, scope: !5700)
!5711 = !DILocation(line: 1571, column: 12, scope: !5700)
!5712 = !DILocation(line: 1571, column: 19, scope: !5700)
!5713 = !DILocation(line: 1574, column: 2, scope: !5610)
!5714 = !DILocation(line: 1575, column: 1, scope: !5610)
!5715 = distinct !DISubprogram(name: "alps_is_valid_first_byte", scope: !3, file: !3, line: 215, type: !5716, scopeLine: 217, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !407)
!5716 = !DISubroutineType(types: !5717)
!5717 = !{!550, !206, !269}
!5718 = !DILocalVariable(name: "priv", arg: 1, scope: !5715, file: !3, line: 215, type: !206)
!5719 = !DILocation(line: 215, column: 56, scope: !5715)
!5720 = !DILocalVariable(name: "data", arg: 2, scope: !5715, file: !3, line: 216, type: !269)
!5721 = !DILocation(line: 216, column: 24, scope: !5715)
!5722 = !DILocation(line: 218, column: 10, scope: !5715)
!5723 = !DILocation(line: 218, column: 17, scope: !5715)
!5724 = !DILocation(line: 218, column: 23, scope: !5715)
!5725 = !DILocation(line: 218, column: 15, scope: !5715)
!5726 = !DILocation(line: 218, column: 33, scope: !5715)
!5727 = !DILocation(line: 218, column: 39, scope: !5715)
!5728 = !DILocation(line: 218, column: 30, scope: !5715)
!5729 = !DILocation(line: 218, column: 2, scope: !5715)
!5730 = distinct !DISubprogram(name: "alps_is_valid_package_v7", scope: !3, file: !3, line: 938, type: !5216, scopeLine: 939, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !407)
!5731 = !DILocalVariable(name: "psmouse", arg: 1, scope: !5730, file: !3, line: 938, type: !210)
!5732 = !DILocation(line: 938, column: 54, scope: !5730)
!5733 = !DILocation(line: 940, column: 10, scope: !5730)
!5734 = !DILocation(line: 940, column: 19, scope: !5730)
!5735 = !DILocation(line: 940, column: 2, scope: !5730)
!5736 = !DILocation(line: 942, column: 11, scope: !5737)
!5737 = distinct !DILexicalBlock(scope: !5730, file: !3, line: 940, column: 27)
!5738 = !DILocation(line: 942, column: 20, scope: !5737)
!5739 = !DILocation(line: 942, column: 30, scope: !5737)
!5740 = !DILocation(line: 942, column: 38, scope: !5737)
!5741 = !DILocation(line: 942, column: 3, scope: !5737)
!5742 = !DILocation(line: 944, column: 11, scope: !5737)
!5743 = !DILocation(line: 944, column: 20, scope: !5737)
!5744 = !DILocation(line: 944, column: 30, scope: !5737)
!5745 = !DILocation(line: 944, column: 38, scope: !5737)
!5746 = !DILocation(line: 944, column: 3, scope: !5737)
!5747 = !DILocation(line: 946, column: 11, scope: !5737)
!5748 = !DILocation(line: 946, column: 20, scope: !5737)
!5749 = !DILocation(line: 946, column: 30, scope: !5737)
!5750 = !DILocation(line: 946, column: 38, scope: !5737)
!5751 = !DILocation(line: 946, column: 3, scope: !5737)
!5752 = !DILocation(line: 948, column: 2, scope: !5730)
!5753 = !DILocation(line: 949, column: 1, scope: !5730)
!5754 = distinct !DISubprogram(name: "alps_is_valid_package_ss4_v2", scope: !3, file: !3, line: 1388, type: !5216, scopeLine: 1389, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !407)
!5755 = !DILocalVariable(name: "psmouse", arg: 1, scope: !5754, file: !3, line: 1388, type: !210)
!5756 = !DILocation(line: 1388, column: 58, scope: !5754)
!5757 = !DILocation(line: 1390, column: 6, scope: !5758)
!5758 = distinct !DILexicalBlock(scope: !5754, file: !3, line: 1390, column: 6)
!5759 = !DILocation(line: 1390, column: 15, scope: !5758)
!5760 = !DILocation(line: 1390, column: 22, scope: !5758)
!5761 = !DILocation(line: 1390, column: 27, scope: !5758)
!5762 = !DILocation(line: 1390, column: 32, scope: !5758)
!5763 = !DILocation(line: 1390, column: 41, scope: !5758)
!5764 = !DILocation(line: 1390, column: 51, scope: !5758)
!5765 = !DILocation(line: 1390, column: 59, scope: !5758)
!5766 = !DILocation(line: 1390, column: 6, scope: !5754)
!5767 = !DILocation(line: 1391, column: 3, scope: !5758)
!5768 = !DILocation(line: 1392, column: 6, scope: !5769)
!5769 = distinct !DILexicalBlock(scope: !5754, file: !3, line: 1392, column: 6)
!5770 = !DILocation(line: 1392, column: 15, scope: !5769)
!5771 = !DILocation(line: 1392, column: 22, scope: !5769)
!5772 = !DILocation(line: 1392, column: 27, scope: !5769)
!5773 = !DILocation(line: 1392, column: 32, scope: !5769)
!5774 = !DILocation(line: 1392, column: 41, scope: !5769)
!5775 = !DILocation(line: 1392, column: 51, scope: !5769)
!5776 = !DILocation(line: 1392, column: 59, scope: !5769)
!5777 = !DILocation(line: 1392, column: 6, scope: !5754)
!5778 = !DILocation(line: 1393, column: 3, scope: !5769)
!5779 = !DILocation(line: 1394, column: 2, scope: !5754)
!5780 = !DILocation(line: 1395, column: 1, scope: !5754)
!5781 = distinct !DISubprogram(name: "IS_ERR_OR_NULL", scope: !5532, file: !5532, line: 39, type: !5782, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !407)
!5782 = !DISubroutineType(types: !5783)
!5783 = !{!550, !3335}
!5784 = !DILocalVariable(name: "ptr", arg: 1, scope: !5781, file: !5532, line: 39, type: !3335)
!5785 = !DILocation(line: 39, column: 68, scope: !5781)
!5786 = !DILocation(line: 41, column: 9, scope: !5781)
!5787 = !DILocation(line: 41, column: 24, scope: !5781)
!5788 = !DILocation(line: 41, column: 27, scope: !5781)
!5789 = !DILocation(line: 41, column: 2, scope: !5781)
!5790 = distinct !DISubprogram(name: "IS_ERR", scope: !5532, file: !5532, line: 34, type: !5782, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !407)
!5791 = !DILocalVariable(name: "ptr", arg: 1, scope: !5790, file: !5532, line: 34, type: !3335)
!5792 = !DILocation(line: 34, column: 60, scope: !5790)
!5793 = !DILocation(line: 36, column: 9, scope: !5790)
!5794 = !DILocation(line: 36, column: 2, scope: !5790)
!5795 = distinct !DISubprogram(name: "alps_report_buttons", scope: !3, file: !3, line: 221, type: !5796, scopeLine: 223, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !407)
!5796 = !DISubroutineType(types: !5797)
!5797 = !{null, !215, !215, !262, !262, !262}
!5798 = !DILocalVariable(name: "dev1", arg: 1, scope: !5795, file: !3, line: 221, type: !215)
!5799 = !DILocation(line: 221, column: 51, scope: !5795)
!5800 = !DILocalVariable(name: "dev2", arg: 2, scope: !5795, file: !3, line: 221, type: !215)
!5801 = !DILocation(line: 221, column: 75, scope: !5795)
!5802 = !DILocalVariable(name: "left", arg: 3, scope: !5795, file: !3, line: 222, type: !262)
!5803 = !DILocation(line: 222, column: 9, scope: !5795)
!5804 = !DILocalVariable(name: "right", arg: 4, scope: !5795, file: !3, line: 222, type: !262)
!5805 = !DILocation(line: 222, column: 19, scope: !5795)
!5806 = !DILocalVariable(name: "middle", arg: 5, scope: !5795, file: !3, line: 222, type: !262)
!5807 = !DILocation(line: 222, column: 30, scope: !5795)
!5808 = !DILocalVariable(name: "dev", scope: !5795, file: !3, line: 224, type: !215)
!5809 = !DILocation(line: 224, column: 20, scope: !5795)
!5810 = !DILocation(line: 231, column: 9, scope: !5795)
!5811 = !DILocation(line: 231, column: 14, scope: !5795)
!5812 = !DILocation(line: 231, column: 36, scope: !5795)
!5813 = !DILocation(line: 231, column: 42, scope: !5795)
!5814 = !DILocation(line: 231, column: 17, scope: !5795)
!5815 = !DILocation(line: 231, column: 8, scope: !5795)
!5816 = !DILocation(line: 231, column: 50, scope: !5795)
!5817 = !DILocation(line: 231, column: 57, scope: !5795)
!5818 = !DILocation(line: 231, column: 6, scope: !5795)
!5819 = !DILocation(line: 232, column: 19, scope: !5795)
!5820 = !DILocation(line: 232, column: 34, scope: !5795)
!5821 = !DILocation(line: 232, column: 2, scope: !5795)
!5822 = !DILocation(line: 234, column: 9, scope: !5795)
!5823 = !DILocation(line: 234, column: 14, scope: !5795)
!5824 = !DILocation(line: 234, column: 37, scope: !5795)
!5825 = !DILocation(line: 234, column: 43, scope: !5795)
!5826 = !DILocation(line: 234, column: 17, scope: !5795)
!5827 = !DILocation(line: 234, column: 8, scope: !5795)
!5828 = !DILocation(line: 234, column: 51, scope: !5795)
!5829 = !DILocation(line: 234, column: 58, scope: !5795)
!5830 = !DILocation(line: 234, column: 6, scope: !5795)
!5831 = !DILocation(line: 235, column: 19, scope: !5795)
!5832 = !DILocation(line: 235, column: 35, scope: !5795)
!5833 = !DILocation(line: 235, column: 2, scope: !5795)
!5834 = !DILocation(line: 237, column: 9, scope: !5795)
!5835 = !DILocation(line: 237, column: 14, scope: !5795)
!5836 = !DILocation(line: 237, column: 38, scope: !5795)
!5837 = !DILocation(line: 237, column: 44, scope: !5795)
!5838 = !DILocation(line: 237, column: 17, scope: !5795)
!5839 = !DILocation(line: 237, column: 8, scope: !5795)
!5840 = !DILocation(line: 237, column: 52, scope: !5795)
!5841 = !DILocation(line: 237, column: 59, scope: !5795)
!5842 = !DILocation(line: 237, column: 6, scope: !5795)
!5843 = !DILocation(line: 238, column: 19, scope: !5795)
!5844 = !DILocation(line: 238, column: 36, scope: !5795)
!5845 = !DILocation(line: 238, column: 2, scope: !5795)
!5846 = !DILocation(line: 244, column: 6, scope: !5847)
!5847 = distinct !DILexicalBlock(scope: !5795, file: !3, line: 244, column: 6)
!5848 = !DILocation(line: 244, column: 6, scope: !5795)
!5849 = !DILocation(line: 245, column: 14, scope: !5847)
!5850 = !DILocation(line: 245, column: 3, scope: !5847)
!5851 = !DILocation(line: 246, column: 1, scope: !5795)
!5852 = distinct !DISubprogram(name: "input_sync", scope: !217, file: !217, line: 440, type: !3109, scopeLine: 441, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !407)
!5853 = !DILocalVariable(name: "dev", arg: 1, scope: !5852, file: !217, line: 440, type: !215)
!5854 = !DILocation(line: 440, column: 49, scope: !5852)
!5855 = !DILocation(line: 442, column: 14, scope: !5852)
!5856 = !DILocation(line: 442, column: 2, scope: !5852)
!5857 = !DILocation(line: 443, column: 1, scope: !5852)
!5858 = distinct !DISubprogram(name: "test_bit", scope: !4413, file: !4413, line: 132, type: !5859, scopeLine: 133, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !407)
!5859 = !DISubroutineType(types: !5860)
!5860 = !{!550, !131, !5861}
!5861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5862, size: 64)
!5862 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4417)
!5863 = !DILocalVariable(name: "nr", arg: 1, scope: !5864, file: !4420, line: 210, type: !131)
!5864 = distinct !DISubprogram(name: "variable_test_bit", scope: !4420, file: !4420, line: 210, type: !5859, scopeLine: 211, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !407)
!5865 = !DILocation(line: 210, column: 52, scope: !5864, inlinedAt: !5866)
!5866 = distinct !DILocation(line: 135, column: 9, scope: !5858)
!5867 = !DILocalVariable(name: "addr", arg: 2, scope: !5864, file: !4420, line: 210, type: !5861)
!5868 = !DILocation(line: 210, column: 86, scope: !5864, inlinedAt: !5866)
!5869 = !DILocalVariable(name: "oldbit", scope: !5864, file: !4420, line: 212, type: !550)
!5870 = !DILocation(line: 212, column: 7, scope: !5864, inlinedAt: !5866)
!5871 = !DILocalVariable(name: "nr", arg: 1, scope: !5872, file: !4420, line: 204, type: !131)
!5872 = distinct !DISubprogram(name: "constant_test_bit", scope: !4420, file: !4420, line: 204, type: !5859, scopeLine: 205, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !407)
!5873 = !DILocation(line: 204, column: 52, scope: !5872, inlinedAt: !5874)
!5874 = distinct !DILocation(line: 135, column: 9, scope: !5858)
!5875 = !DILocalVariable(name: "addr", arg: 2, scope: !5872, file: !4420, line: 204, type: !5861)
!5876 = !DILocation(line: 204, column: 86, scope: !5872, inlinedAt: !5874)
!5877 = !DILocalVariable(name: "v", arg: 1, scope: !5878, file: !4427, line: 69, type: !4430)
!5878 = distinct !DISubprogram(name: "instrument_atomic_read", scope: !4427, file: !4427, line: 69, type: !4428, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !407)
!5879 = !DILocation(line: 69, column: 73, scope: !5878, inlinedAt: !5880)
!5880 = distinct !DILocation(line: 134, column: 2, scope: !5858)
!5881 = !DILocalVariable(name: "size", arg: 2, scope: !5878, file: !4427, line: 69, type: !639)
!5882 = !DILocation(line: 69, column: 83, scope: !5878, inlinedAt: !5880)
!5883 = !DILocalVariable(name: "nr", arg: 1, scope: !5858, file: !4413, line: 132, type: !131)
!5884 = !DILocation(line: 132, column: 34, scope: !5858)
!5885 = !DILocalVariable(name: "addr", arg: 2, scope: !5858, file: !4413, line: 132, type: !5861)
!5886 = !DILocation(line: 132, column: 68, scope: !5858)
!5887 = !DILocation(line: 134, column: 25, scope: !5858)
!5888 = !DILocation(line: 134, column: 32, scope: !5858)
!5889 = !DILocation(line: 134, column: 30, scope: !5858)
!5890 = !DILocation(line: 71, column: 19, scope: !5878, inlinedAt: !5880)
!5891 = !DILocation(line: 71, column: 22, scope: !5878, inlinedAt: !5880)
!5892 = !DILocation(line: 71, column: 2, scope: !5878, inlinedAt: !5880)
!5893 = !DILocation(line: 72, column: 2, scope: !5878, inlinedAt: !5880)
!5894 = !DILocation(line: 135, column: 9, scope: !5858)
!5895 = !DILocation(line: 206, column: 19, scope: !5872, inlinedAt: !5874)
!5896 = !DILocation(line: 206, column: 22, scope: !5872, inlinedAt: !5874)
!5897 = !DILocation(line: 206, column: 15, scope: !5872, inlinedAt: !5874)
!5898 = !DILocation(line: 207, column: 4, scope: !5872, inlinedAt: !5874)
!5899 = !DILocation(line: 207, column: 9, scope: !5872, inlinedAt: !5874)
!5900 = !DILocation(line: 207, column: 12, scope: !5872, inlinedAt: !5874)
!5901 = !DILocation(line: 206, column: 44, scope: !5872, inlinedAt: !5874)
!5902 = !DILocation(line: 207, column: 37, scope: !5872, inlinedAt: !5874)
!5903 = !DILocation(line: 217, column: 33, scope: !5864, inlinedAt: !5866)
!5904 = !DILocation(line: 217, column: 46, scope: !5864, inlinedAt: !5866)
!5905 = !DILocation(line: 214, column: 2, scope: !5864, inlinedAt: !5866)
!5906 = !{i32 -2147054062, i32 -2147054002}
!5907 = !DILocation(line: 219, column: 9, scope: !5864, inlinedAt: !5866)
!5908 = !DILocation(line: 135, column: 2, scope: !5858)
!5909 = distinct !DISubprogram(name: "input_report_key", scope: !217, file: !217, line: 415, type: !5910, scopeLine: 416, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !407)
!5910 = !DISubroutineType(types: !5911)
!5911 = !{null, !215, !7, !262}
!5912 = !DILocalVariable(name: "dev", arg: 1, scope: !5909, file: !217, line: 415, type: !215)
!5913 = !DILocation(line: 415, column: 55, scope: !5909)
!5914 = !DILocalVariable(name: "code", arg: 2, scope: !5909, file: !217, line: 415, type: !7)
!5915 = !DILocation(line: 415, column: 73, scope: !5909)
!5916 = !DILocalVariable(name: "value", arg: 3, scope: !5909, file: !217, line: 415, type: !262)
!5917 = !DILocation(line: 415, column: 83, scope: !5909)
!5918 = !DILocation(line: 417, column: 14, scope: !5909)
!5919 = !DILocation(line: 417, column: 27, scope: !5909)
!5920 = !DILocation(line: 417, column: 35, scope: !5909)
!5921 = !DILocation(line: 417, column: 34, scope: !5909)
!5922 = !DILocation(line: 417, column: 33, scope: !5909)
!5923 = !DILocation(line: 417, column: 2, scope: !5909)
!5924 = !DILocation(line: 418, column: 1, scope: !5909)
!5925 = distinct !DISubprogram(name: "kasan_check_read", scope: !5512, file: !5512, line: 34, type: !5513, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !407)
!5926 = !DILocalVariable(name: "p", arg: 1, scope: !5925, file: !5512, line: 34, type: !4430)
!5927 = !DILocation(line: 34, column: 58, scope: !5925)
!5928 = !DILocalVariable(name: "size", arg: 2, scope: !5925, file: !5512, line: 34, type: !7)
!5929 = !DILocation(line: 34, column: 74, scope: !5925)
!5930 = !DILocation(line: 36, column: 2, scope: !5925)
!5931 = distinct !DISubprogram(name: "_msecs_to_jiffies", scope: !5613, file: !5613, line: 308, type: !5614, scopeLine: 309, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !407)
!5932 = !DILocalVariable(name: "m", arg: 1, scope: !5931, file: !5613, line: 308, type: !2700)
!5933 = !DILocation(line: 308, column: 66, scope: !5931)
!5934 = !DILocation(line: 310, column: 10, scope: !5931)
!5935 = !DILocation(line: 310, column: 12, scope: !5931)
!5936 = !DILocation(line: 310, column: 34, scope: !5931)
!5937 = !DILocation(line: 310, column: 39, scope: !5931)
!5938 = !DILocation(line: 310, column: 2, scope: !5931)
!5939 = distinct !DISubprogram(name: "alps_passthrough_mode_v2", scope: !3, file: !3, line: 1836, type: !3958, scopeLine: 1837, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !407)
!5940 = !DILocalVariable(name: "psmouse", arg: 1, scope: !5939, file: !3, line: 1836, type: !210)
!5941 = !DILocation(line: 1836, column: 53, scope: !5939)
!5942 = !DILocalVariable(name: "enable", arg: 2, scope: !5939, file: !3, line: 1836, type: !550)
!5943 = !DILocation(line: 1836, column: 67, scope: !5939)
!5944 = !DILocalVariable(name: "ps2dev", scope: !5939, file: !3, line: 1838, type: !5945)
!5945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3860, size: 64)
!5946 = !DILocation(line: 1838, column: 17, scope: !5939)
!5947 = !DILocation(line: 1838, column: 27, scope: !5939)
!5948 = !DILocation(line: 1838, column: 36, scope: !5939)
!5949 = !DILocalVariable(name: "cmd", scope: !5939, file: !3, line: 1839, type: !262)
!5950 = !DILocation(line: 1839, column: 6, scope: !5939)
!5951 = !DILocation(line: 1839, column: 12, scope: !5939)
!5952 = !DILocation(line: 1841, column: 18, scope: !5953)
!5953 = distinct !DILexicalBlock(scope: !5939, file: !3, line: 1841, column: 6)
!5954 = !DILocation(line: 1841, column: 32, scope: !5953)
!5955 = !DILocation(line: 1841, column: 6, scope: !5953)
!5956 = !DILocation(line: 1841, column: 37, scope: !5953)
!5957 = !DILocation(line: 1842, column: 18, scope: !5953)
!5958 = !DILocation(line: 1842, column: 32, scope: !5953)
!5959 = !DILocation(line: 1842, column: 6, scope: !5953)
!5960 = !DILocation(line: 1842, column: 37, scope: !5953)
!5961 = !DILocation(line: 1843, column: 18, scope: !5953)
!5962 = !DILocation(line: 1843, column: 32, scope: !5953)
!5963 = !DILocation(line: 1843, column: 6, scope: !5953)
!5964 = !DILocation(line: 1843, column: 37, scope: !5953)
!5965 = !DILocation(line: 1844, column: 18, scope: !5953)
!5966 = !DILocation(line: 1844, column: 6, scope: !5953)
!5967 = !DILocation(line: 1841, column: 6, scope: !5939)
!5968 = !DILocation(line: 1845, column: 3, scope: !5953)
!5969 = !DILocation(line: 1848, column: 12, scope: !5939)
!5970 = !DILocation(line: 1848, column: 2, scope: !5939)
!5971 = !DILocation(line: 1850, column: 2, scope: !5939)
!5972 = !DILocation(line: 1851, column: 1, scope: !5939)
!5973 = distinct !DISubprogram(name: "alps_rpt_cmd", scope: !3, file: !3, line: 1767, type: !5974, scopeLine: 1769, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !407)
!5974 = !DISubroutineType(types: !5975)
!5975 = !{!262, !210, !262, !262, !4063}
!5976 = !DILocalVariable(name: "psmouse", arg: 1, scope: !5973, file: !3, line: 1767, type: !210)
!5977 = !DILocation(line: 1767, column: 41, scope: !5973)
!5978 = !DILocalVariable(name: "init_command", arg: 2, scope: !5973, file: !3, line: 1767, type: !262)
!5979 = !DILocation(line: 1767, column: 54, scope: !5973)
!5980 = !DILocalVariable(name: "repeated_command", arg: 3, scope: !5973, file: !3, line: 1768, type: !262)
!5981 = !DILocation(line: 1768, column: 8, scope: !5973)
!5982 = !DILocalVariable(name: "param", arg: 4, scope: !5973, file: !3, line: 1768, type: !4063)
!5983 = !DILocation(line: 1768, column: 41, scope: !5973)
!5984 = !DILocalVariable(name: "ps2dev", scope: !5973, file: !3, line: 1770, type: !5945)
!5985 = !DILocation(line: 1770, column: 17, scope: !5973)
!5986 = !DILocation(line: 1770, column: 27, scope: !5973)
!5987 = !DILocation(line: 1770, column: 36, scope: !5973)
!5988 = !DILocation(line: 1772, column: 2, scope: !5973)
!5989 = !DILocation(line: 1772, column: 11, scope: !5973)
!5990 = !DILocation(line: 1773, column: 6, scope: !5991)
!5991 = distinct !DILexicalBlock(scope: !5973, file: !3, line: 1773, column: 6)
!5992 = !DILocation(line: 1773, column: 19, scope: !5991)
!5993 = !DILocation(line: 1773, column: 34, scope: !5991)
!5994 = !DILocation(line: 1773, column: 42, scope: !5991)
!5995 = !DILocation(line: 1773, column: 49, scope: !5991)
!5996 = !DILocation(line: 1773, column: 22, scope: !5991)
!5997 = !DILocation(line: 1773, column: 6, scope: !5973)
!5998 = !DILocation(line: 1774, column: 3, scope: !5991)
!5999 = !DILocation(line: 1776, column: 18, scope: !6000)
!6000 = distinct !DILexicalBlock(scope: !5973, file: !3, line: 1776, column: 6)
!6001 = !DILocation(line: 1776, column: 33, scope: !6000)
!6002 = !DILocation(line: 1776, column: 6, scope: !6000)
!6003 = !DILocation(line: 1776, column: 51, scope: !6000)
!6004 = !DILocation(line: 1777, column: 18, scope: !6000)
!6005 = !DILocation(line: 1777, column: 33, scope: !6000)
!6006 = !DILocation(line: 1777, column: 6, scope: !6000)
!6007 = !DILocation(line: 1777, column: 51, scope: !6000)
!6008 = !DILocation(line: 1778, column: 18, scope: !6000)
!6009 = !DILocation(line: 1778, column: 33, scope: !6000)
!6010 = !DILocation(line: 1778, column: 6, scope: !6000)
!6011 = !DILocation(line: 1776, column: 6, scope: !5973)
!6012 = !DILocation(line: 1779, column: 3, scope: !6000)
!6013 = !DILocation(line: 1781, column: 24, scope: !5973)
!6014 = !DILocation(line: 1781, column: 33, scope: !5973)
!6015 = !DILocation(line: 1781, column: 13, scope: !5973)
!6016 = !DILocation(line: 1781, column: 22, scope: !5973)
!6017 = !DILocation(line: 1781, column: 2, scope: !5973)
!6018 = !DILocation(line: 1781, column: 11, scope: !5973)
!6019 = !DILocation(line: 1782, column: 18, scope: !6020)
!6020 = distinct !DILexicalBlock(scope: !5973, file: !3, line: 1782, column: 6)
!6021 = !DILocation(line: 1782, column: 26, scope: !6020)
!6022 = !DILocation(line: 1782, column: 6, scope: !6020)
!6023 = !DILocation(line: 1782, column: 6, scope: !5973)
!6024 = !DILocation(line: 1783, column: 3, scope: !6020)
!6025 = !DILocation(line: 1787, column: 2, scope: !5973)
!6026 = !DILocation(line: 1788, column: 1, scope: !5973)
!6027 = distinct !DISubprogram(name: "alps_exit_command_mode", scope: !3, file: !3, line: 1823, type: !3962, scopeLine: 1824, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !407)
!6028 = !DILocalVariable(name: "psmouse", arg: 1, scope: !6027, file: !3, line: 1823, type: !210)
!6029 = !DILocation(line: 1823, column: 58, scope: !6027)
!6030 = !DILocalVariable(name: "ps2dev", scope: !6027, file: !3, line: 1825, type: !5945)
!6031 = !DILocation(line: 1825, column: 17, scope: !6027)
!6032 = !DILocation(line: 1825, column: 27, scope: !6027)
!6033 = !DILocation(line: 1825, column: 36, scope: !6027)
!6034 = !DILocation(line: 1826, column: 18, scope: !6035)
!6035 = distinct !DILexicalBlock(scope: !6027, file: !3, line: 1826, column: 6)
!6036 = !DILocation(line: 1826, column: 6, scope: !6035)
!6037 = !DILocation(line: 1826, column: 6, scope: !6027)
!6038 = !DILocation(line: 1827, column: 3, scope: !6035)
!6039 = !DILocation(line: 1828, column: 2, scope: !6027)
!6040 = !DILocation(line: 1829, column: 1, scope: !6027)
!6041 = distinct !DISubprogram(name: "alps_match_table", scope: !3, file: !3, line: 2849, type: !6042, scopeLine: 2851, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !407)
!6042 = !DISubroutineType(types: !6043)
!6043 = !{!5027, !4063, !4063}
!6044 = !DILocalVariable(name: "e7", arg: 1, scope: !6041, file: !3, line: 2849, type: !4063)
!6045 = !DILocation(line: 2849, column: 73, scope: !6041)
!6046 = !DILocalVariable(name: "ec", arg: 2, scope: !6041, file: !3, line: 2850, type: !4063)
!6047 = !DILocation(line: 2850, column: 24, scope: !6041)
!6048 = !DILocalVariable(name: "model", scope: !6041, file: !3, line: 2852, type: !6049)
!6049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4084, size: 64)
!6050 = !DILocation(line: 2852, column: 32, scope: !6041)
!6051 = !DILocalVariable(name: "i", scope: !6041, file: !3, line: 2853, type: !262)
!6052 = !DILocation(line: 2853, column: 6, scope: !6041)
!6053 = !DILocation(line: 2855, column: 9, scope: !6054)
!6054 = distinct !DILexicalBlock(scope: !6041, file: !3, line: 2855, column: 2)
!6055 = !DILocation(line: 2855, column: 7, scope: !6054)
!6056 = !DILocation(line: 2855, column: 14, scope: !6057)
!6057 = distinct !DILexicalBlock(scope: !6054, file: !3, line: 2855, column: 2)
!6058 = !DILocation(line: 2855, column: 16, scope: !6057)
!6059 = !DILocation(line: 2855, column: 2, scope: !6054)
!6060 = !DILocation(line: 2856, column: 28, scope: !6061)
!6061 = distinct !DILexicalBlock(scope: !6057, file: !3, line: 2855, column: 52)
!6062 = !DILocation(line: 2856, column: 12, scope: !6061)
!6063 = !DILocation(line: 2856, column: 9, scope: !6061)
!6064 = !DILocation(line: 2858, column: 15, scope: !6065)
!6065 = distinct !DILexicalBlock(scope: !6061, file: !3, line: 2858, column: 7)
!6066 = !DILocation(line: 2858, column: 19, scope: !6065)
!6067 = !DILocation(line: 2858, column: 26, scope: !6065)
!6068 = !DILocation(line: 2858, column: 8, scope: !6065)
!6069 = !DILocation(line: 2858, column: 7, scope: !6061)
!6070 = !DILocation(line: 2859, column: 12, scope: !6065)
!6071 = !DILocation(line: 2859, column: 19, scope: !6065)
!6072 = !DILocation(line: 2859, column: 4, scope: !6065)
!6073 = !DILocation(line: 2860, column: 2, scope: !6061)
!6074 = !DILocation(line: 2855, column: 48, scope: !6057)
!6075 = !DILocation(line: 2855, column: 2, scope: !6057)
!6076 = distinct !{!6076, !6059, !6077}
!6077 = !DILocation(line: 2860, column: 2, scope: !6054)
!6078 = !DILocation(line: 2862, column: 2, scope: !6041)
!6079 = !DILocation(line: 2863, column: 1, scope: !6041)
!6080 = distinct !DISubprogram(name: "alps_set_protocol", scope: !3, file: !3, line: 2722, type: !6081, scopeLine: 2725, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !407)
!6081 = !DISubroutineType(types: !6082)
!6082 = !{!262, !210, !206, !5027}
!6083 = !DILocalVariable(name: "psmouse", arg: 1, scope: !6080, file: !3, line: 2722, type: !210)
!6084 = !DILocation(line: 2722, column: 46, scope: !6080)
!6085 = !DILocalVariable(name: "priv", arg: 2, scope: !6080, file: !3, line: 2723, type: !206)
!6086 = !DILocation(line: 2723, column: 27, scope: !6080)
!6087 = !DILocalVariable(name: "protocol", arg: 3, scope: !6080, file: !3, line: 2724, type: !5027)
!6088 = !DILocation(line: 2724, column: 42, scope: !6080)
!6089 = !DILocation(line: 2726, column: 21, scope: !6080)
!6090 = !DILocation(line: 2726, column: 2, scope: !6080)
!6091 = !DILocation(line: 2726, column: 11, scope: !6080)
!6092 = !DILocation(line: 2726, column: 19, scope: !6080)
!6093 = !DILocation(line: 2728, column: 2, scope: !6080)
!6094 = !DILocation(line: 2730, column: 24, scope: !6080)
!6095 = !DILocation(line: 2730, column: 34, scope: !6080)
!6096 = !DILocation(line: 2730, column: 2, scope: !6080)
!6097 = !DILocation(line: 2730, column: 8, scope: !6080)
!6098 = !DILocation(line: 2730, column: 22, scope: !6080)
!6099 = !DILocation(line: 2731, column: 16, scope: !6080)
!6100 = !DILocation(line: 2731, column: 26, scope: !6080)
!6101 = !DILocation(line: 2731, column: 2, scope: !6080)
!6102 = !DILocation(line: 2731, column: 8, scope: !6080)
!6103 = !DILocation(line: 2731, column: 14, scope: !6080)
!6104 = !DILocation(line: 2732, column: 16, scope: !6080)
!6105 = !DILocation(line: 2732, column: 26, scope: !6080)
!6106 = !DILocation(line: 2732, column: 2, scope: !6080)
!6107 = !DILocation(line: 2732, column: 8, scope: !6080)
!6108 = !DILocation(line: 2732, column: 14, scope: !6080)
!6109 = !DILocation(line: 2733, column: 16, scope: !6080)
!6110 = !DILocation(line: 2733, column: 26, scope: !6080)
!6111 = !DILocation(line: 2733, column: 2, scope: !6080)
!6112 = !DILocation(line: 2733, column: 8, scope: !6080)
!6113 = !DILocation(line: 2733, column: 14, scope: !6080)
!6114 = !DILocation(line: 2735, column: 2, scope: !6080)
!6115 = !DILocation(line: 2735, column: 8, scope: !6080)
!6116 = !DILocation(line: 2735, column: 14, scope: !6080)
!6117 = !DILocation(line: 2736, column: 2, scope: !6080)
!6118 = !DILocation(line: 2736, column: 8, scope: !6080)
!6119 = !DILocation(line: 2736, column: 14, scope: !6080)
!6120 = !DILocation(line: 2737, column: 2, scope: !6080)
!6121 = !DILocation(line: 2737, column: 8, scope: !6080)
!6122 = !DILocation(line: 2737, column: 15, scope: !6080)
!6123 = !DILocation(line: 2738, column: 2, scope: !6080)
!6124 = !DILocation(line: 2738, column: 8, scope: !6080)
!6125 = !DILocation(line: 2738, column: 15, scope: !6080)
!6126 = !DILocation(line: 2740, column: 10, scope: !6080)
!6127 = !DILocation(line: 2740, column: 16, scope: !6080)
!6128 = !DILocation(line: 2740, column: 2, scope: !6080)
!6129 = !DILocation(line: 2743, column: 3, scope: !6130)
!6130 = distinct !DILexicalBlock(scope: !6080, file: !3, line: 2740, column: 31)
!6131 = !DILocation(line: 2743, column: 9, scope: !6130)
!6132 = !DILocation(line: 2743, column: 17, scope: !6130)
!6133 = !DILocation(line: 2744, column: 3, scope: !6130)
!6134 = !DILocation(line: 2744, column: 9, scope: !6130)
!6135 = !DILocation(line: 2744, column: 24, scope: !6130)
!6136 = !DILocation(line: 2745, column: 3, scope: !6130)
!6137 = !DILocation(line: 2745, column: 9, scope: !6130)
!6138 = !DILocation(line: 2745, column: 24, scope: !6130)
!6139 = !DILocation(line: 2746, column: 3, scope: !6130)
!6140 = !DILocation(line: 2746, column: 9, scope: !6130)
!6141 = !DILocation(line: 2746, column: 15, scope: !6130)
!6142 = !DILocation(line: 2747, column: 3, scope: !6130)
!6143 = !DILocation(line: 2747, column: 9, scope: !6130)
!6144 = !DILocation(line: 2747, column: 15, scope: !6130)
!6145 = !DILocation(line: 2748, column: 7, scope: !6146)
!6146 = distinct !DILexicalBlock(scope: !6130, file: !3, line: 2748, column: 7)
!6147 = !DILocation(line: 2748, column: 7, scope: !6130)
!6148 = !DILocation(line: 2749, column: 4, scope: !6146)
!6149 = !DILocation(line: 2749, column: 10, scope: !6146)
!6150 = !DILocation(line: 2749, column: 16, scope: !6146)
!6151 = !DILocation(line: 2750, column: 3, scope: !6130)
!6152 = !DILocation(line: 2753, column: 3, scope: !6130)
!6153 = !DILocation(line: 2753, column: 9, scope: !6130)
!6154 = !DILocation(line: 2753, column: 17, scope: !6130)
!6155 = !DILocation(line: 2754, column: 3, scope: !6130)
!6156 = !DILocation(line: 2754, column: 9, scope: !6130)
!6157 = !DILocation(line: 2754, column: 24, scope: !6130)
!6158 = !DILocation(line: 2755, column: 3, scope: !6130)
!6159 = !DILocation(line: 2755, column: 9, scope: !6130)
!6160 = !DILocation(line: 2755, column: 24, scope: !6130)
!6161 = !DILocation(line: 2756, column: 3, scope: !6130)
!6162 = !DILocation(line: 2756, column: 9, scope: !6130)
!6163 = !DILocation(line: 2756, column: 23, scope: !6130)
!6164 = !DILocation(line: 2757, column: 3, scope: !6130)
!6165 = !DILocation(line: 2757, column: 9, scope: !6130)
!6166 = !DILocation(line: 2757, column: 25, scope: !6130)
!6167 = !DILocation(line: 2758, column: 3, scope: !6130)
!6168 = !DILocation(line: 2758, column: 9, scope: !6130)
!6169 = !DILocation(line: 2758, column: 22, scope: !6130)
!6170 = !DILocation(line: 2760, column: 35, scope: !6171)
!6171 = distinct !DILexicalBlock(scope: !6130, file: !3, line: 2760, column: 7)
!6172 = !DILocation(line: 2760, column: 7, scope: !6171)
!6173 = !DILocation(line: 2761, column: 31, scope: !6171)
!6174 = !DILocation(line: 2760, column: 7, scope: !6130)
!6175 = !DILocation(line: 2762, column: 4, scope: !6171)
!6176 = !DILocation(line: 2762, column: 10, scope: !6171)
!6177 = !DILocation(line: 2762, column: 16, scope: !6171)
!6178 = !DILocation(line: 2764, column: 3, scope: !6130)
!6179 = !DILocation(line: 2767, column: 3, scope: !6130)
!6180 = !DILocation(line: 2767, column: 9, scope: !6130)
!6181 = !DILocation(line: 2767, column: 17, scope: !6130)
!6182 = !DILocation(line: 2768, column: 3, scope: !6130)
!6183 = !DILocation(line: 2768, column: 9, scope: !6130)
!6184 = !DILocation(line: 2768, column: 24, scope: !6130)
!6185 = !DILocation(line: 2769, column: 3, scope: !6130)
!6186 = !DILocation(line: 2769, column: 9, scope: !6130)
!6187 = !DILocation(line: 2769, column: 24, scope: !6130)
!6188 = !DILocation(line: 2770, column: 3, scope: !6130)
!6189 = !DILocation(line: 2770, column: 9, scope: !6130)
!6190 = !DILocation(line: 2770, column: 23, scope: !6130)
!6191 = !DILocation(line: 2771, column: 3, scope: !6130)
!6192 = !DILocation(line: 2771, column: 9, scope: !6130)
!6193 = !DILocation(line: 2771, column: 25, scope: !6130)
!6194 = !DILocation(line: 2772, column: 3, scope: !6130)
!6195 = !DILocation(line: 2772, column: 9, scope: !6130)
!6196 = !DILocation(line: 2772, column: 22, scope: !6130)
!6197 = !DILocation(line: 2773, column: 3, scope: !6130)
!6198 = !DILocation(line: 2773, column: 9, scope: !6130)
!6199 = !DILocation(line: 2773, column: 16, scope: !6130)
!6200 = !DILocation(line: 2774, column: 3, scope: !6130)
!6201 = !DILocation(line: 2774, column: 9, scope: !6130)
!6202 = !DILocation(line: 2774, column: 16, scope: !6130)
!6203 = !DILocation(line: 2776, column: 35, scope: !6204)
!6204 = distinct !DILexicalBlock(scope: !6130, file: !3, line: 2776, column: 7)
!6205 = !DILocation(line: 2776, column: 7, scope: !6204)
!6206 = !DILocation(line: 2777, column: 31, scope: !6204)
!6207 = !DILocation(line: 2776, column: 7, scope: !6130)
!6208 = !DILocation(line: 2778, column: 4, scope: !6204)
!6209 = !DILocation(line: 2778, column: 10, scope: !6204)
!6210 = !DILocation(line: 2778, column: 16, scope: !6204)
!6211 = !DILocation(line: 2780, column: 3, scope: !6130)
!6212 = !DILocation(line: 2783, column: 3, scope: !6130)
!6213 = !DILocation(line: 2783, column: 9, scope: !6130)
!6214 = !DILocation(line: 2783, column: 17, scope: !6130)
!6215 = !DILocation(line: 2784, column: 3, scope: !6130)
!6216 = !DILocation(line: 2784, column: 9, scope: !6130)
!6217 = !DILocation(line: 2784, column: 24, scope: !6130)
!6218 = !DILocation(line: 2785, column: 3, scope: !6130)
!6219 = !DILocation(line: 2785, column: 9, scope: !6130)
!6220 = !DILocation(line: 2785, column: 24, scope: !6130)
!6221 = !DILocation(line: 2786, column: 3, scope: !6130)
!6222 = !DILocation(line: 2786, column: 9, scope: !6130)
!6223 = !DILocation(line: 2786, column: 25, scope: !6130)
!6224 = !DILocation(line: 2787, column: 3, scope: !6130)
!6225 = !DILocation(line: 2787, column: 9, scope: !6130)
!6226 = !DILocation(line: 2787, column: 22, scope: !6130)
!6227 = !DILocation(line: 2788, column: 3, scope: !6130)
!6228 = !DILocation(line: 2791, column: 3, scope: !6130)
!6229 = !DILocation(line: 2791, column: 9, scope: !6130)
!6230 = !DILocation(line: 2791, column: 17, scope: !6130)
!6231 = !DILocation(line: 2792, column: 3, scope: !6130)
!6232 = !DILocation(line: 2792, column: 9, scope: !6130)
!6233 = !DILocation(line: 2792, column: 24, scope: !6130)
!6234 = !DILocation(line: 2793, column: 3, scope: !6130)
!6235 = !DILocation(line: 2793, column: 9, scope: !6130)
!6236 = !DILocation(line: 2793, column: 23, scope: !6130)
!6237 = !DILocation(line: 2794, column: 3, scope: !6130)
!6238 = !DILocation(line: 2794, column: 9, scope: !6130)
!6239 = !DILocation(line: 2794, column: 24, scope: !6130)
!6240 = !DILocation(line: 2795, column: 3, scope: !6130)
!6241 = !DILocation(line: 2795, column: 9, scope: !6130)
!6242 = !DILocation(line: 2795, column: 25, scope: !6130)
!6243 = !DILocation(line: 2796, column: 3, scope: !6130)
!6244 = !DILocation(line: 2796, column: 9, scope: !6130)
!6245 = !DILocation(line: 2796, column: 22, scope: !6130)
!6246 = !DILocation(line: 2797, column: 3, scope: !6130)
!6247 = !DILocation(line: 2797, column: 9, scope: !6130)
!6248 = !DILocation(line: 2797, column: 16, scope: !6130)
!6249 = !DILocation(line: 2798, column: 3, scope: !6130)
!6250 = !DILocation(line: 2798, column: 9, scope: !6130)
!6251 = !DILocation(line: 2798, column: 16, scope: !6130)
!6252 = !DILocation(line: 2800, column: 36, scope: !6253)
!6253 = distinct !DILexicalBlock(scope: !6130, file: !3, line: 2800, column: 7)
!6254 = !DILocation(line: 2800, column: 45, scope: !6253)
!6255 = !DILocation(line: 2800, column: 7, scope: !6253)
!6256 = !DILocation(line: 2800, column: 7, scope: !6130)
!6257 = !DILocation(line: 2801, column: 4, scope: !6253)
!6258 = !DILocation(line: 2803, column: 3, scope: !6130)
!6259 = !DILocation(line: 2806, column: 3, scope: !6130)
!6260 = !DILocation(line: 2806, column: 9, scope: !6130)
!6261 = !DILocation(line: 2806, column: 17, scope: !6130)
!6262 = !DILocation(line: 2807, column: 3, scope: !6130)
!6263 = !DILocation(line: 2807, column: 9, scope: !6130)
!6264 = !DILocation(line: 2807, column: 24, scope: !6130)
!6265 = !DILocation(line: 2808, column: 3, scope: !6130)
!6266 = !DILocation(line: 2808, column: 9, scope: !6130)
!6267 = !DILocation(line: 2808, column: 24, scope: !6130)
!6268 = !DILocation(line: 2809, column: 3, scope: !6130)
!6269 = !DILocation(line: 2809, column: 9, scope: !6130)
!6270 = !DILocation(line: 2809, column: 25, scope: !6130)
!6271 = !DILocation(line: 2810, column: 3, scope: !6130)
!6272 = !DILocation(line: 2810, column: 9, scope: !6130)
!6273 = !DILocation(line: 2810, column: 15, scope: !6130)
!6274 = !DILocation(line: 2811, column: 3, scope: !6130)
!6275 = !DILocation(line: 2811, column: 9, scope: !6130)
!6276 = !DILocation(line: 2811, column: 15, scope: !6130)
!6277 = !DILocation(line: 2812, column: 3, scope: !6130)
!6278 = !DILocation(line: 2815, column: 3, scope: !6130)
!6279 = !DILocation(line: 2815, column: 9, scope: !6130)
!6280 = !DILocation(line: 2815, column: 17, scope: !6130)
!6281 = !DILocation(line: 2816, column: 3, scope: !6130)
!6282 = !DILocation(line: 2816, column: 9, scope: !6130)
!6283 = !DILocation(line: 2816, column: 24, scope: !6130)
!6284 = !DILocation(line: 2817, column: 3, scope: !6130)
!6285 = !DILocation(line: 2817, column: 9, scope: !6130)
!6286 = !DILocation(line: 2817, column: 23, scope: !6130)
!6287 = !DILocation(line: 2818, column: 3, scope: !6130)
!6288 = !DILocation(line: 2818, column: 9, scope: !6130)
!6289 = !DILocation(line: 2818, column: 24, scope: !6130)
!6290 = !DILocation(line: 2819, column: 3, scope: !6130)
!6291 = !DILocation(line: 2819, column: 9, scope: !6130)
!6292 = !DILocation(line: 2819, column: 25, scope: !6130)
!6293 = !DILocation(line: 2820, column: 3, scope: !6130)
!6294 = !DILocation(line: 2820, column: 9, scope: !6130)
!6295 = !DILocation(line: 2820, column: 22, scope: !6130)
!6296 = !DILocation(line: 2821, column: 3, scope: !6130)
!6297 = !DILocation(line: 2821, column: 9, scope: !6130)
!6298 = !DILocation(line: 2821, column: 15, scope: !6130)
!6299 = !DILocation(line: 2822, column: 3, scope: !6130)
!6300 = !DILocation(line: 2822, column: 9, scope: !6130)
!6301 = !DILocation(line: 2822, column: 15, scope: !6130)
!6302 = !DILocation(line: 2824, column: 7, scope: !6303)
!6303 = distinct !DILexicalBlock(scope: !6130, file: !3, line: 2824, column: 7)
!6304 = !DILocation(line: 2824, column: 13, scope: !6303)
!6305 = !DILocation(line: 2824, column: 23, scope: !6303)
!6306 = !DILocation(line: 2824, column: 7, scope: !6130)
!6307 = !DILocation(line: 2825, column: 4, scope: !6303)
!6308 = !DILocation(line: 2825, column: 10, scope: !6303)
!6309 = !DILocation(line: 2825, column: 16, scope: !6303)
!6310 = !DILocation(line: 2827, column: 35, scope: !6311)
!6311 = distinct !DILexicalBlock(scope: !6130, file: !3, line: 2827, column: 7)
!6312 = !DILocation(line: 2827, column: 7, scope: !6311)
!6313 = !DILocation(line: 2827, column: 62, scope: !6311)
!6314 = !DILocation(line: 2827, column: 7, scope: !6130)
!6315 = !DILocation(line: 2828, column: 4, scope: !6311)
!6316 = !DILocation(line: 2828, column: 10, scope: !6311)
!6317 = !DILocation(line: 2828, column: 16, scope: !6311)
!6318 = !DILocation(line: 2830, column: 3, scope: !6130)
!6319 = !DILocation(line: 2833, column: 3, scope: !6130)
!6320 = !DILocation(line: 2833, column: 9, scope: !6130)
!6321 = !DILocation(line: 2833, column: 17, scope: !6130)
!6322 = !DILocation(line: 2834, column: 3, scope: !6130)
!6323 = !DILocation(line: 2834, column: 9, scope: !6130)
!6324 = !DILocation(line: 2834, column: 24, scope: !6130)
!6325 = !DILocation(line: 2835, column: 3, scope: !6130)
!6326 = !DILocation(line: 2835, column: 9, scope: !6130)
!6327 = !DILocation(line: 2835, column: 23, scope: !6130)
!6328 = !DILocation(line: 2836, column: 3, scope: !6130)
!6329 = !DILocation(line: 2836, column: 9, scope: !6130)
!6330 = !DILocation(line: 2836, column: 24, scope: !6130)
!6331 = !DILocation(line: 2837, column: 3, scope: !6130)
!6332 = !DILocation(line: 2837, column: 9, scope: !6130)
!6333 = !DILocation(line: 2837, column: 25, scope: !6130)
!6334 = !DILocation(line: 2838, column: 3, scope: !6130)
!6335 = !DILocation(line: 2838, column: 9, scope: !6130)
!6336 = !DILocation(line: 2838, column: 22, scope: !6130)
!6337 = !DILocation(line: 2840, column: 32, scope: !6338)
!6338 = distinct !DILexicalBlock(scope: !6130, file: !3, line: 2840, column: 7)
!6339 = !DILocation(line: 2840, column: 41, scope: !6338)
!6340 = !DILocation(line: 2840, column: 7, scope: !6338)
!6341 = !DILocation(line: 2840, column: 7, scope: !6130)
!6342 = !DILocation(line: 2841, column: 4, scope: !6338)
!6343 = !DILocation(line: 2843, column: 3, scope: !6130)
!6344 = !DILocation(line: 2846, column: 2, scope: !6080)
!6345 = !DILocation(line: 2847, column: 1, scope: !6080)
!6346 = distinct !DISubprogram(name: "alps_flush_packet", scope: !3, file: !3, line: 1577, type: !3062, scopeLine: 1578, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !407)
!6347 = !DILocalVariable(name: "t", arg: 1, scope: !6346, file: !3, line: 1577, type: !3064)
!6348 = !DILocation(line: 1577, column: 50, scope: !6346)
!6349 = !DILocalVariable(name: "priv", scope: !6346, file: !3, line: 1579, type: !206)
!6350 = !DILocation(line: 1579, column: 20, scope: !6346)
!6351 = !DILocalVariable(name: "__mptr", scope: !6352, file: !3, line: 1579, type: !191)
!6352 = distinct !DILexicalBlock(scope: !6346, file: !3, line: 1579, column: 27)
!6353 = !DILocation(line: 1579, column: 27, scope: !6352)
!6354 = !DILocation(line: 1579, column: 27, scope: !6355)
!6355 = distinct !DILexicalBlock(scope: !6352, file: !3, line: 1579, column: 27)
!6356 = !DILocalVariable(name: "psmouse", scope: !6346, file: !3, line: 1580, type: !210)
!6357 = !DILocation(line: 1580, column: 18, scope: !6346)
!6358 = !DILocation(line: 1580, column: 28, scope: !6346)
!6359 = !DILocation(line: 1580, column: 34, scope: !6346)
!6360 = !DILocation(line: 1582, column: 17, scope: !6346)
!6361 = !DILocation(line: 1582, column: 26, scope: !6346)
!6362 = !DILocation(line: 1582, column: 33, scope: !6346)
!6363 = !DILocation(line: 1582, column: 2, scope: !6346)
!6364 = !DILocation(line: 1584, column: 6, scope: !6365)
!6365 = distinct !DILexicalBlock(scope: !6346, file: !3, line: 1584, column: 6)
!6366 = !DILocation(line: 1584, column: 15, scope: !6365)
!6367 = !DILocation(line: 1584, column: 25, scope: !6365)
!6368 = !DILocation(line: 1584, column: 34, scope: !6365)
!6369 = !DILocation(line: 1584, column: 22, scope: !6365)
!6370 = !DILocation(line: 1584, column: 6, scope: !6346)
!6371 = !DILocation(line: 1591, column: 8, scope: !6372)
!6372 = distinct !DILexicalBlock(scope: !6373, file: !3, line: 1591, column: 7)
!6373 = distinct !DILexicalBlock(scope: !6365, file: !3, line: 1584, column: 43)
!6374 = !DILocation(line: 1591, column: 17, scope: !6372)
!6375 = !DILocation(line: 1592, column: 8, scope: !6372)
!6376 = !DILocation(line: 1592, column: 17, scope: !6372)
!6377 = !DILocation(line: 1591, column: 27, scope: !6372)
!6378 = !DILocation(line: 1593, column: 8, scope: !6372)
!6379 = !DILocation(line: 1593, column: 17, scope: !6372)
!6380 = !DILocation(line: 1592, column: 27, scope: !6372)
!6381 = !DILocation(line: 1593, column: 28, scope: !6372)
!6382 = !DILocation(line: 1591, column: 7, scope: !6373)
!6383 = !DILocation(line: 1597, column: 3, scope: !6384)
!6384 = distinct !DILexicalBlock(scope: !6372, file: !3, line: 1593, column: 36)
!6385 = !DILocation(line: 1598, column: 4, scope: !6386)
!6386 = distinct !DILexicalBlock(scope: !6372, file: !3, line: 1597, column: 10)
!6387 = !DILocation(line: 1598, column: 10, scope: !6386)
!6388 = !DILocation(line: 1598, column: 25, scope: !6386)
!6389 = !DILocation(line: 1600, column: 3, scope: !6373)
!6390 = !DILocation(line: 1600, column: 12, scope: !6373)
!6391 = !DILocation(line: 1600, column: 19, scope: !6373)
!6392 = !DILocation(line: 1601, column: 2, scope: !6373)
!6393 = !DILocation(line: 1603, column: 20, scope: !6346)
!6394 = !DILocation(line: 1603, column: 29, scope: !6346)
!6395 = !DILocation(line: 1603, column: 36, scope: !6346)
!6396 = !DILocation(line: 1603, column: 2, scope: !6346)
!6397 = !DILocation(line: 1604, column: 1, scope: !6346)
!6398 = distinct !DISubprogram(name: "alps_hw_init_v1_v2", scope: !3, file: !3, line: 2017, type: !3962, scopeLine: 2018, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !407)
!6399 = !DILocalVariable(name: "psmouse", arg: 1, scope: !6398, file: !3, line: 2017, type: !210)
!6400 = !DILocation(line: 2017, column: 47, scope: !6398)
!6401 = !DILocalVariable(name: "priv", scope: !6398, file: !3, line: 2019, type: !206)
!6402 = !DILocation(line: 2019, column: 20, scope: !6398)
!6403 = !DILocation(line: 2019, column: 27, scope: !6398)
!6404 = !DILocation(line: 2019, column: 36, scope: !6398)
!6405 = !DILocation(line: 2021, column: 7, scope: !6406)
!6406 = distinct !DILexicalBlock(scope: !6398, file: !3, line: 2021, column: 6)
!6407 = !DILocation(line: 2021, column: 13, scope: !6406)
!6408 = !DILocation(line: 2021, column: 19, scope: !6406)
!6409 = !DILocation(line: 2021, column: 32, scope: !6406)
!6410 = !DILocation(line: 2022, column: 31, scope: !6406)
!6411 = !DILocation(line: 2022, column: 6, scope: !6406)
!6412 = !DILocation(line: 2021, column: 6, scope: !6398)
!6413 = !DILocation(line: 2023, column: 3, scope: !6414)
!6414 = distinct !DILexicalBlock(scope: !6406, file: !3, line: 2022, column: 47)
!6415 = !DILocation(line: 2026, column: 20, scope: !6416)
!6416 = distinct !DILexicalBlock(scope: !6398, file: !3, line: 2026, column: 6)
!6417 = !DILocation(line: 2026, column: 6, scope: !6416)
!6418 = !DILocation(line: 2026, column: 6, scope: !6398)
!6419 = !DILocation(line: 2027, column: 3, scope: !6420)
!6420 = distinct !DILexicalBlock(scope: !6416, file: !3, line: 2026, column: 36)
!6421 = !DILocation(line: 2028, column: 3, scope: !6420)
!6422 = !DILocation(line: 2031, column: 31, scope: !6423)
!6423 = distinct !DILexicalBlock(scope: !6398, file: !3, line: 2031, column: 6)
!6424 = !DILocation(line: 2031, column: 6, scope: !6423)
!6425 = !DILocation(line: 2031, column: 6, scope: !6398)
!6426 = !DILocation(line: 2032, column: 3, scope: !6427)
!6427 = distinct !DILexicalBlock(scope: !6423, file: !3, line: 2031, column: 41)
!6428 = !DILocation(line: 2033, column: 3, scope: !6427)
!6429 = !DILocation(line: 2036, column: 7, scope: !6430)
!6430 = distinct !DILexicalBlock(scope: !6398, file: !3, line: 2036, column: 6)
!6431 = !DILocation(line: 2036, column: 13, scope: !6430)
!6432 = !DILocation(line: 2036, column: 19, scope: !6430)
!6433 = !DILocation(line: 2036, column: 32, scope: !6430)
!6434 = !DILocation(line: 2037, column: 31, scope: !6430)
!6435 = !DILocation(line: 2037, column: 6, scope: !6430)
!6436 = !DILocation(line: 2036, column: 6, scope: !6398)
!6437 = !DILocation(line: 2038, column: 3, scope: !6438)
!6438 = distinct !DILexicalBlock(scope: !6430, file: !3, line: 2037, column: 48)
!6439 = !DILocation(line: 2042, column: 19, scope: !6440)
!6440 = distinct !DILexicalBlock(scope: !6398, file: !3, line: 2042, column: 6)
!6441 = !DILocation(line: 2042, column: 28, scope: !6440)
!6442 = !DILocation(line: 2042, column: 6, scope: !6440)
!6443 = !DILocation(line: 2042, column: 6, scope: !6398)
!6444 = !DILocation(line: 2043, column: 3, scope: !6445)
!6445 = distinct !DILexicalBlock(scope: !6440, file: !3, line: 2042, column: 66)
!6446 = !DILocation(line: 2044, column: 3, scope: !6445)
!6447 = !DILocation(line: 2047, column: 2, scope: !6398)
!6448 = !DILocation(line: 2048, column: 1, scope: !6398)
!6449 = distinct !DISubprogram(name: "alps_process_packet_v1_v2", scope: !3, file: !3, line: 248, type: !4003, scopeLine: 249, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !407)
!6450 = !DILocalVariable(name: "psmouse", arg: 1, scope: !6449, file: !3, line: 248, type: !210)
!6451 = !DILocation(line: 248, column: 55, scope: !6449)
!6452 = !DILocalVariable(name: "priv", scope: !6449, file: !3, line: 250, type: !206)
!6453 = !DILocation(line: 250, column: 20, scope: !6449)
!6454 = !DILocation(line: 250, column: 27, scope: !6449)
!6455 = !DILocation(line: 250, column: 36, scope: !6449)
!6456 = !DILocalVariable(name: "packet", scope: !6449, file: !3, line: 251, type: !4063)
!6457 = !DILocation(line: 251, column: 17, scope: !6449)
!6458 = !DILocation(line: 251, column: 26, scope: !6449)
!6459 = !DILocation(line: 251, column: 35, scope: !6449)
!6460 = !DILocalVariable(name: "dev", scope: !6449, file: !3, line: 252, type: !215)
!6461 = !DILocation(line: 252, column: 20, scope: !6449)
!6462 = !DILocation(line: 252, column: 26, scope: !6449)
!6463 = !DILocation(line: 252, column: 35, scope: !6449)
!6464 = !DILocalVariable(name: "dev2", scope: !6449, file: !3, line: 253, type: !215)
!6465 = !DILocation(line: 253, column: 20, scope: !6449)
!6466 = !DILocation(line: 253, column: 27, scope: !6449)
!6467 = !DILocation(line: 253, column: 33, scope: !6449)
!6468 = !DILocalVariable(name: "x", scope: !6449, file: !3, line: 254, type: !262)
!6469 = !DILocation(line: 254, column: 6, scope: !6449)
!6470 = !DILocalVariable(name: "y", scope: !6449, file: !3, line: 254, type: !262)
!6471 = !DILocation(line: 254, column: 9, scope: !6449)
!6472 = !DILocalVariable(name: "z", scope: !6449, file: !3, line: 254, type: !262)
!6473 = !DILocation(line: 254, column: 12, scope: !6449)
!6474 = !DILocalVariable(name: "ges", scope: !6449, file: !3, line: 254, type: !262)
!6475 = !DILocation(line: 254, column: 15, scope: !6449)
!6476 = !DILocalVariable(name: "fin", scope: !6449, file: !3, line: 254, type: !262)
!6477 = !DILocation(line: 254, column: 20, scope: !6449)
!6478 = !DILocalVariable(name: "left", scope: !6449, file: !3, line: 254, type: !262)
!6479 = !DILocation(line: 254, column: 25, scope: !6449)
!6480 = !DILocalVariable(name: "right", scope: !6449, file: !3, line: 254, type: !262)
!6481 = !DILocation(line: 254, column: 31, scope: !6449)
!6482 = !DILocalVariable(name: "middle", scope: !6449, file: !3, line: 254, type: !262)
!6483 = !DILocation(line: 254, column: 38, scope: !6449)
!6484 = !DILocalVariable(name: "back", scope: !6449, file: !3, line: 255, type: !262)
!6485 = !DILocation(line: 255, column: 6, scope: !6449)
!6486 = !DILocalVariable(name: "forward", scope: !6449, file: !3, line: 255, type: !262)
!6487 = !DILocation(line: 255, column: 16, scope: !6449)
!6488 = !DILocation(line: 257, column: 6, scope: !6489)
!6489 = distinct !DILexicalBlock(scope: !6449, file: !3, line: 257, column: 6)
!6490 = !DILocation(line: 257, column: 12, scope: !6489)
!6491 = !DILocation(line: 257, column: 26, scope: !6489)
!6492 = !DILocation(line: 257, column: 6, scope: !6449)
!6493 = !DILocation(line: 258, column: 10, scope: !6494)
!6494 = distinct !DILexicalBlock(scope: !6489, file: !3, line: 257, column: 44)
!6495 = !DILocation(line: 258, column: 20, scope: !6494)
!6496 = !DILocation(line: 258, column: 8, scope: !6494)
!6497 = !DILocation(line: 259, column: 11, scope: !6494)
!6498 = !DILocation(line: 259, column: 21, scope: !6494)
!6499 = !DILocation(line: 259, column: 9, scope: !6494)
!6500 = !DILocation(line: 260, column: 10, scope: !6494)
!6501 = !DILocation(line: 261, column: 7, scope: !6494)
!6502 = !DILocation(line: 261, column: 21, scope: !6494)
!6503 = !DILocation(line: 261, column: 31, scope: !6494)
!6504 = !DILocation(line: 261, column: 39, scope: !6494)
!6505 = !DILocation(line: 261, column: 17, scope: !6494)
!6506 = !DILocation(line: 261, column: 5, scope: !6494)
!6507 = !DILocation(line: 262, column: 7, scope: !6494)
!6508 = !DILocation(line: 262, column: 21, scope: !6494)
!6509 = !DILocation(line: 262, column: 31, scope: !6494)
!6510 = !DILocation(line: 262, column: 39, scope: !6494)
!6511 = !DILocation(line: 262, column: 17, scope: !6494)
!6512 = !DILocation(line: 262, column: 5, scope: !6494)
!6513 = !DILocation(line: 263, column: 7, scope: !6494)
!6514 = !DILocation(line: 263, column: 5, scope: !6494)
!6515 = !DILocation(line: 264, column: 2, scope: !6494)
!6516 = !DILocation(line: 265, column: 10, scope: !6517)
!6517 = distinct !DILexicalBlock(scope: !6489, file: !3, line: 264, column: 9)
!6518 = !DILocation(line: 265, column: 20, scope: !6517)
!6519 = !DILocation(line: 265, column: 8, scope: !6517)
!6520 = !DILocation(line: 266, column: 11, scope: !6517)
!6521 = !DILocation(line: 266, column: 21, scope: !6517)
!6522 = !DILocation(line: 266, column: 9, scope: !6517)
!6523 = !DILocation(line: 267, column: 12, scope: !6517)
!6524 = !DILocation(line: 267, column: 22, scope: !6517)
!6525 = !DILocation(line: 267, column: 10, scope: !6517)
!6526 = !DILocation(line: 268, column: 7, scope: !6517)
!6527 = !DILocation(line: 268, column: 21, scope: !6517)
!6528 = !DILocation(line: 268, column: 31, scope: !6517)
!6529 = !DILocation(line: 268, column: 39, scope: !6517)
!6530 = !DILocation(line: 268, column: 17, scope: !6517)
!6531 = !DILocation(line: 268, column: 5, scope: !6517)
!6532 = !DILocation(line: 269, column: 7, scope: !6517)
!6533 = !DILocation(line: 269, column: 21, scope: !6517)
!6534 = !DILocation(line: 269, column: 31, scope: !6517)
!6535 = !DILocation(line: 269, column: 39, scope: !6517)
!6536 = !DILocation(line: 269, column: 17, scope: !6517)
!6537 = !DILocation(line: 269, column: 5, scope: !6517)
!6538 = !DILocation(line: 270, column: 7, scope: !6517)
!6539 = !DILocation(line: 270, column: 5, scope: !6517)
!6540 = !DILocation(line: 273, column: 6, scope: !6541)
!6541 = distinct !DILexicalBlock(scope: !6449, file: !3, line: 273, column: 6)
!6542 = !DILocation(line: 273, column: 12, scope: !6541)
!6543 = !DILocation(line: 273, column: 18, scope: !6541)
!6544 = !DILocation(line: 273, column: 6, scope: !6449)
!6545 = !DILocation(line: 274, column: 10, scope: !6546)
!6546 = distinct !DILexicalBlock(scope: !6541, file: !3, line: 273, column: 34)
!6547 = !DILocation(line: 274, column: 20, scope: !6546)
!6548 = !DILocation(line: 274, column: 8, scope: !6546)
!6549 = !DILocation(line: 275, column: 13, scope: !6546)
!6550 = !DILocation(line: 275, column: 23, scope: !6546)
!6551 = !DILocation(line: 275, column: 11, scope: !6546)
!6552 = !DILocation(line: 276, column: 2, scope: !6546)
!6553 = !DILocation(line: 278, column: 6, scope: !6554)
!6554 = distinct !DILexicalBlock(scope: !6449, file: !3, line: 278, column: 6)
!6555 = !DILocation(line: 278, column: 12, scope: !6554)
!6556 = !DILocation(line: 278, column: 18, scope: !6554)
!6557 = !DILocation(line: 278, column: 6, scope: !6449)
!6558 = !DILocation(line: 279, column: 10, scope: !6559)
!6559 = distinct !DILexicalBlock(scope: !6554, file: !3, line: 278, column: 34)
!6560 = !DILocation(line: 279, column: 20, scope: !6559)
!6561 = !DILocation(line: 279, column: 8, scope: !6559)
!6562 = !DILocation(line: 280, column: 13, scope: !6559)
!6563 = !DILocation(line: 280, column: 23, scope: !6559)
!6564 = !DILocation(line: 280, column: 11, scope: !6559)
!6565 = !DILocation(line: 281, column: 17, scope: !6566)
!6566 = distinct !DILexicalBlock(scope: !6559, file: !3, line: 281, column: 7)
!6567 = !DILocation(line: 281, column: 25, scope: !6566)
!6568 = !DILocation(line: 281, column: 28, scope: !6566)
!6569 = !DILocation(line: 0, scope: !6566)
!6570 = !DILocation(line: 281, column: 15, scope: !6566)
!6571 = !DILocation(line: 281, column: 7, scope: !6559)
!6572 = !DILocation(line: 282, column: 19, scope: !6566)
!6573 = !DILocation(line: 282, column: 12, scope: !6566)
!6574 = !DILocation(line: 282, column: 4, scope: !6566)
!6575 = !DILocation(line: 283, column: 2, scope: !6559)
!6576 = !DILocation(line: 285, column: 8, scope: !6449)
!6577 = !DILocation(line: 285, column: 18, scope: !6449)
!6578 = !DILocation(line: 285, column: 6, scope: !6449)
!6579 = !DILocation(line: 286, column: 8, scope: !6449)
!6580 = !DILocation(line: 286, column: 18, scope: !6449)
!6581 = !DILocation(line: 286, column: 6, scope: !6449)
!6582 = !DILocation(line: 288, column: 7, scope: !6583)
!6583 = distinct !DILexicalBlock(scope: !6449, file: !3, line: 288, column: 6)
!6584 = !DILocation(line: 288, column: 13, scope: !6583)
!6585 = !DILocation(line: 288, column: 19, scope: !6583)
!6586 = !DILocation(line: 288, column: 37, scope: !6583)
!6587 = !DILocation(line: 288, column: 40, scope: !6583)
!6588 = !DILocation(line: 288, column: 42, scope: !6583)
!6589 = !DILocation(line: 288, column: 6, scope: !6449)
!6590 = !DILocation(line: 289, column: 20, scope: !6591)
!6591 = distinct !DILexicalBlock(scope: !6583, file: !3, line: 288, column: 50)
!6592 = !DILocation(line: 289, column: 35, scope: !6591)
!6593 = !DILocation(line: 289, column: 37, scope: !6591)
!6594 = !DILocation(line: 289, column: 46, scope: !6591)
!6595 = !DILocation(line: 289, column: 48, scope: !6591)
!6596 = !DILocation(line: 289, column: 57, scope: !6591)
!6597 = !DILocation(line: 289, column: 3, scope: !6591)
!6598 = !DILocation(line: 290, column: 20, scope: !6591)
!6599 = !DILocation(line: 290, column: 35, scope: !6591)
!6600 = !DILocation(line: 290, column: 37, scope: !6591)
!6601 = !DILocation(line: 290, column: 46, scope: !6591)
!6602 = !DILocation(line: 290, column: 48, scope: !6591)
!6603 = !DILocation(line: 290, column: 57, scope: !6591)
!6604 = !DILocation(line: 290, column: 33, scope: !6591)
!6605 = !DILocation(line: 290, column: 3, scope: !6591)
!6606 = !DILocation(line: 292, column: 23, scope: !6591)
!6607 = !DILocation(line: 292, column: 29, scope: !6591)
!6608 = !DILocation(line: 292, column: 34, scope: !6591)
!6609 = !DILocation(line: 292, column: 40, scope: !6591)
!6610 = !DILocation(line: 292, column: 47, scope: !6591)
!6611 = !DILocation(line: 292, column: 3, scope: !6591)
!6612 = !DILocation(line: 294, column: 14, scope: !6591)
!6613 = !DILocation(line: 294, column: 3, scope: !6591)
!6614 = !DILocation(line: 295, column: 3, scope: !6591)
!6615 = !DILocation(line: 299, column: 6, scope: !6616)
!6616 = distinct !DILexicalBlock(scope: !6449, file: !3, line: 299, column: 6)
!6617 = !DILocation(line: 299, column: 12, scope: !6616)
!6618 = !DILocation(line: 299, column: 18, scope: !6616)
!6619 = !DILocation(line: 299, column: 6, scope: !6449)
!6620 = !DILocation(line: 300, column: 11, scope: !6621)
!6621 = distinct !DILexicalBlock(scope: !6616, file: !3, line: 299, column: 37)
!6622 = !DILocation(line: 300, column: 21, scope: !6621)
!6623 = !DILocation(line: 300, column: 8, scope: !6621)
!6624 = !DILocation(line: 301, column: 12, scope: !6621)
!6625 = !DILocation(line: 301, column: 22, scope: !6621)
!6626 = !DILocation(line: 301, column: 9, scope: !6621)
!6627 = !DILocation(line: 302, column: 13, scope: !6621)
!6628 = !DILocation(line: 302, column: 23, scope: !6621)
!6629 = !DILocation(line: 302, column: 10, scope: !6621)
!6630 = !DILocation(line: 303, column: 2, scope: !6621)
!6631 = !DILocation(line: 305, column: 22, scope: !6449)
!6632 = !DILocation(line: 305, column: 27, scope: !6449)
!6633 = !DILocation(line: 305, column: 33, scope: !6449)
!6634 = !DILocation(line: 305, column: 39, scope: !6449)
!6635 = !DILocation(line: 305, column: 46, scope: !6449)
!6636 = !DILocation(line: 305, column: 2, scope: !6449)
!6637 = !DILocation(line: 308, column: 6, scope: !6638)
!6638 = distinct !DILexicalBlock(scope: !6449, file: !3, line: 308, column: 6)
!6639 = !DILocation(line: 308, column: 10, scope: !6638)
!6640 = !DILocation(line: 308, column: 14, scope: !6638)
!6641 = !DILocation(line: 308, column: 6, scope: !6449)
!6642 = !DILocation(line: 309, column: 5, scope: !6638)
!6643 = !DILocation(line: 309, column: 3, scope: !6638)
!6644 = !DILocation(line: 316, column: 6, scope: !6645)
!6645 = distinct !DILexicalBlock(scope: !6449, file: !3, line: 316, column: 6)
!6646 = !DILocation(line: 316, column: 10, scope: !6645)
!6647 = !DILocation(line: 316, column: 13, scope: !6645)
!6648 = !DILocation(line: 316, column: 17, scope: !6645)
!6649 = !DILocation(line: 316, column: 21, scope: !6645)
!6650 = !DILocation(line: 316, column: 27, scope: !6645)
!6651 = !DILocation(line: 316, column: 6, scope: !6449)
!6652 = !DILocation(line: 317, column: 20, scope: !6653)
!6653 = distinct !DILexicalBlock(scope: !6645, file: !3, line: 316, column: 37)
!6654 = !DILocation(line: 317, column: 32, scope: !6653)
!6655 = !DILocation(line: 317, column: 3, scope: !6653)
!6656 = !DILocation(line: 318, column: 20, scope: !6653)
!6657 = !DILocation(line: 318, column: 32, scope: !6653)
!6658 = !DILocation(line: 318, column: 3, scope: !6653)
!6659 = !DILocation(line: 319, column: 20, scope: !6653)
!6660 = !DILocation(line: 319, column: 3, scope: !6653)
!6661 = !DILocation(line: 320, column: 20, scope: !6653)
!6662 = !DILocation(line: 320, column: 3, scope: !6653)
!6663 = !DILocation(line: 321, column: 14, scope: !6653)
!6664 = !DILocation(line: 321, column: 3, scope: !6653)
!6665 = !DILocation(line: 322, column: 2, scope: !6653)
!6666 = !DILocation(line: 323, column: 19, scope: !6449)
!6667 = !DILocation(line: 323, column: 2, scope: !6449)
!6668 = !DILocation(line: 323, column: 8, scope: !6449)
!6669 = !DILocation(line: 323, column: 17, scope: !6449)
!6670 = !DILocation(line: 325, column: 6, scope: !6671)
!6671 = distinct !DILexicalBlock(scope: !6449, file: !3, line: 325, column: 6)
!6672 = !DILocation(line: 325, column: 8, scope: !6671)
!6673 = !DILocation(line: 325, column: 6, scope: !6449)
!6674 = !DILocation(line: 326, column: 20, scope: !6671)
!6675 = !DILocation(line: 326, column: 3, scope: !6671)
!6676 = !DILocation(line: 327, column: 6, scope: !6677)
!6677 = distinct !DILexicalBlock(scope: !6449, file: !3, line: 327, column: 6)
!6678 = !DILocation(line: 327, column: 8, scope: !6677)
!6679 = !DILocation(line: 327, column: 6, scope: !6449)
!6680 = !DILocation(line: 328, column: 20, scope: !6677)
!6681 = !DILocation(line: 328, column: 3, scope: !6677)
!6682 = !DILocation(line: 330, column: 6, scope: !6683)
!6683 = distinct !DILexicalBlock(scope: !6449, file: !3, line: 330, column: 6)
!6684 = !DILocation(line: 330, column: 8, scope: !6683)
!6685 = !DILocation(line: 330, column: 6, scope: !6449)
!6686 = !DILocation(line: 331, column: 20, scope: !6687)
!6687 = distinct !DILexicalBlock(scope: !6683, file: !3, line: 330, column: 13)
!6688 = !DILocation(line: 331, column: 32, scope: !6687)
!6689 = !DILocation(line: 331, column: 3, scope: !6687)
!6690 = !DILocation(line: 332, column: 20, scope: !6687)
!6691 = !DILocation(line: 332, column: 32, scope: !6687)
!6692 = !DILocation(line: 332, column: 3, scope: !6687)
!6693 = !DILocation(line: 333, column: 2, scope: !6687)
!6694 = !DILocation(line: 335, column: 19, scope: !6449)
!6695 = !DILocation(line: 335, column: 38, scope: !6449)
!6696 = !DILocation(line: 335, column: 2, scope: !6449)
!6697 = !DILocation(line: 336, column: 19, scope: !6449)
!6698 = !DILocation(line: 336, column: 41, scope: !6449)
!6699 = !DILocation(line: 336, column: 43, scope: !6449)
!6700 = !DILocation(line: 336, column: 2, scope: !6449)
!6701 = !DILocation(line: 338, column: 6, scope: !6702)
!6702 = distinct !DILexicalBlock(scope: !6449, file: !3, line: 338, column: 6)
!6703 = !DILocation(line: 338, column: 12, scope: !6702)
!6704 = !DILocation(line: 338, column: 18, scope: !6702)
!6705 = !DILocation(line: 338, column: 6, scope: !6449)
!6706 = !DILocation(line: 339, column: 20, scope: !6702)
!6707 = !DILocation(line: 339, column: 38, scope: !6702)
!6708 = !DILocation(line: 339, column: 48, scope: !6702)
!6709 = !DILocation(line: 339, column: 54, scope: !6702)
!6710 = !DILocation(line: 339, column: 66, scope: !6702)
!6711 = !DILocation(line: 339, column: 76, scope: !6702)
!6712 = !DILocation(line: 339, column: 82, scope: !6702)
!6713 = !DILocation(line: 339, column: 62, scope: !6702)
!6714 = !DILocation(line: 339, column: 3, scope: !6702)
!6715 = !DILocation(line: 341, column: 6, scope: !6716)
!6716 = distinct !DILexicalBlock(scope: !6449, file: !3, line: 341, column: 6)
!6717 = !DILocation(line: 341, column: 12, scope: !6716)
!6718 = !DILocation(line: 341, column: 18, scope: !6716)
!6719 = !DILocation(line: 341, column: 6, scope: !6449)
!6720 = !DILocation(line: 342, column: 20, scope: !6721)
!6721 = distinct !DILexicalBlock(scope: !6716, file: !3, line: 341, column: 51)
!6722 = !DILocation(line: 342, column: 38, scope: !6721)
!6723 = !DILocation(line: 342, column: 3, scope: !6721)
!6724 = !DILocation(line: 343, column: 20, scope: !6721)
!6725 = !DILocation(line: 343, column: 35, scope: !6721)
!6726 = !DILocation(line: 343, column: 3, scope: !6721)
!6727 = !DILocation(line: 344, column: 2, scope: !6721)
!6728 = !DILocation(line: 346, column: 6, scope: !6729)
!6729 = distinct !DILexicalBlock(scope: !6449, file: !3, line: 346, column: 6)
!6730 = !DILocation(line: 346, column: 12, scope: !6729)
!6731 = !DILocation(line: 346, column: 18, scope: !6729)
!6732 = !DILocation(line: 346, column: 6, scope: !6449)
!6733 = !DILocation(line: 347, column: 20, scope: !6734)
!6734 = distinct !DILexicalBlock(scope: !6729, file: !3, line: 346, column: 39)
!6735 = !DILocation(line: 347, column: 32, scope: !6734)
!6736 = !DILocation(line: 347, column: 42, scope: !6734)
!6737 = !DILocation(line: 347, column: 3, scope: !6734)
!6738 = !DILocation(line: 348, column: 20, scope: !6734)
!6739 = !DILocation(line: 348, column: 32, scope: !6734)
!6740 = !DILocation(line: 348, column: 42, scope: !6734)
!6741 = !DILocation(line: 348, column: 3, scope: !6734)
!6742 = !DILocation(line: 349, column: 20, scope: !6734)
!6743 = !DILocation(line: 349, column: 32, scope: !6734)
!6744 = !DILocation(line: 349, column: 42, scope: !6734)
!6745 = !DILocation(line: 349, column: 3, scope: !6734)
!6746 = !DILocation(line: 350, column: 20, scope: !6734)
!6747 = !DILocation(line: 350, column: 32, scope: !6734)
!6748 = !DILocation(line: 350, column: 42, scope: !6734)
!6749 = !DILocation(line: 350, column: 3, scope: !6734)
!6750 = !DILocation(line: 351, column: 2, scope: !6734)
!6751 = !DILocation(line: 353, column: 13, scope: !6449)
!6752 = !DILocation(line: 353, column: 2, scope: !6449)
!6753 = !DILocation(line: 354, column: 1, scope: !6449)
!6754 = distinct !DISubprogram(name: "alps_set_abs_params_st", scope: !3, file: !3, line: 2981, type: !4066, scopeLine: 2983, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !407)
!6755 = !DILocalVariable(name: "priv", arg: 1, scope: !6754, file: !3, line: 2981, type: !206)
!6756 = !DILocation(line: 2981, column: 54, scope: !6754)
!6757 = !DILocalVariable(name: "dev1", arg: 2, scope: !6754, file: !3, line: 2982, type: !215)
!6758 = !DILocation(line: 2982, column: 26, scope: !6754)
!6759 = !DILocation(line: 2984, column: 23, scope: !6754)
!6760 = !DILocation(line: 2984, column: 39, scope: !6754)
!6761 = !DILocation(line: 2984, column: 45, scope: !6754)
!6762 = !DILocation(line: 2984, column: 2, scope: !6754)
!6763 = !DILocation(line: 2985, column: 23, scope: !6754)
!6764 = !DILocation(line: 2985, column: 39, scope: !6754)
!6765 = !DILocation(line: 2985, column: 45, scope: !6754)
!6766 = !DILocation(line: 2985, column: 2, scope: !6754)
!6767 = !DILocation(line: 2986, column: 23, scope: !6754)
!6768 = !DILocation(line: 2986, column: 2, scope: !6754)
!6769 = !DILocation(line: 2987, column: 1, scope: !6754)
!6770 = distinct !DISubprogram(name: "alps_hw_init_v3", scope: !3, file: !3, line: 2217, type: !3962, scopeLine: 2218, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !407)
!6771 = !DILocalVariable(name: "psmouse", arg: 1, scope: !6770, file: !3, line: 2217, type: !210)
!6772 = !DILocation(line: 2217, column: 44, scope: !6770)
!6773 = !DILocalVariable(name: "priv", scope: !6770, file: !3, line: 2219, type: !206)
!6774 = !DILocation(line: 2219, column: 20, scope: !6770)
!6775 = !DILocation(line: 2219, column: 27, scope: !6770)
!6776 = !DILocation(line: 2219, column: 36, scope: !6770)
!6777 = !DILocalVariable(name: "ps2dev", scope: !6770, file: !3, line: 2220, type: !5945)
!6778 = !DILocation(line: 2220, column: 17, scope: !6770)
!6779 = !DILocation(line: 2220, column: 27, scope: !6770)
!6780 = !DILocation(line: 2220, column: 36, scope: !6770)
!6781 = !DILocalVariable(name: "reg_val", scope: !6770, file: !3, line: 2221, type: !262)
!6782 = !DILocation(line: 2221, column: 6, scope: !6770)
!6783 = !DILocalVariable(name: "param", scope: !6770, file: !3, line: 2222, type: !5030)
!6784 = !DILocation(line: 2222, column: 16, scope: !6770)
!6785 = !DILocation(line: 2224, column: 7, scope: !6786)
!6786 = distinct !DILexicalBlock(scope: !6770, file: !3, line: 2224, column: 6)
!6787 = !DILocation(line: 2224, column: 13, scope: !6786)
!6788 = !DILocation(line: 2224, column: 19, scope: !6786)
!6789 = !DILocation(line: 2224, column: 37, scope: !6786)
!6790 = !DILocation(line: 2225, column: 31, scope: !6786)
!6791 = !DILocation(line: 2225, column: 6, scope: !6786)
!6792 = !DILocation(line: 2225, column: 64, scope: !6786)
!6793 = !DILocation(line: 2224, column: 6, scope: !6770)
!6794 = !DILocation(line: 2226, column: 3, scope: !6786)
!6795 = !DILocation(line: 2228, column: 30, scope: !6796)
!6796 = distinct !DILexicalBlock(scope: !6770, file: !3, line: 2228, column: 6)
!6797 = !DILocation(line: 2228, column: 6, scope: !6796)
!6798 = !DILocation(line: 2228, column: 39, scope: !6796)
!6799 = !DILocation(line: 2229, column: 28, scope: !6796)
!6800 = !DILocation(line: 2229, column: 6, scope: !6796)
!6801 = !DILocation(line: 2228, column: 6, scope: !6770)
!6802 = !DILocation(line: 2230, column: 3, scope: !6803)
!6803 = distinct !DILexicalBlock(scope: !6796, file: !3, line: 2229, column: 38)
!6804 = !DILocation(line: 2231, column: 3, scope: !6803)
!6805 = !DILocation(line: 2234, column: 39, scope: !6770)
!6806 = !DILocation(line: 2234, column: 12, scope: !6770)
!6807 = !DILocation(line: 2234, column: 10, scope: !6770)
!6808 = !DILocation(line: 2235, column: 6, scope: !6809)
!6809 = distinct !DILexicalBlock(scope: !6770, file: !3, line: 2235, column: 6)
!6810 = !DILocation(line: 2235, column: 14, scope: !6809)
!6811 = !DILocation(line: 2235, column: 6, scope: !6770)
!6812 = !DILocation(line: 2236, column: 3, scope: !6809)
!6813 = !DILocation(line: 2237, column: 36, scope: !6814)
!6814 = distinct !DILexicalBlock(scope: !6770, file: !3, line: 2237, column: 6)
!6815 = !DILocation(line: 2237, column: 45, scope: !6814)
!6816 = !DILocation(line: 2237, column: 53, scope: !6814)
!6817 = !DILocation(line: 2237, column: 6, scope: !6814)
!6818 = !DILocation(line: 2237, column: 6, scope: !6770)
!6819 = !DILocation(line: 2238, column: 3, scope: !6814)
!6820 = !DILocation(line: 2240, column: 39, scope: !6770)
!6821 = !DILocation(line: 2240, column: 12, scope: !6770)
!6822 = !DILocation(line: 2240, column: 10, scope: !6770)
!6823 = !DILocation(line: 2241, column: 6, scope: !6824)
!6824 = distinct !DILexicalBlock(scope: !6770, file: !3, line: 2241, column: 6)
!6825 = !DILocation(line: 2241, column: 14, scope: !6824)
!6826 = !DILocation(line: 2241, column: 6, scope: !6770)
!6827 = !DILocation(line: 2242, column: 3, scope: !6824)
!6828 = !DILocation(line: 2243, column: 36, scope: !6829)
!6829 = distinct !DILexicalBlock(scope: !6770, file: !3, line: 2243, column: 6)
!6830 = !DILocation(line: 2243, column: 45, scope: !6829)
!6831 = !DILocation(line: 2243, column: 53, scope: !6829)
!6832 = !DILocation(line: 2243, column: 6, scope: !6829)
!6833 = !DILocation(line: 2243, column: 6, scope: !6770)
!6834 = !DILocation(line: 2244, column: 3, scope: !6829)
!6835 = !DILocation(line: 2246, column: 33, scope: !6836)
!6836 = distinct !DILexicalBlock(scope: !6770, file: !3, line: 2246, column: 6)
!6837 = !DILocation(line: 2246, column: 6, scope: !6836)
!6838 = !DILocation(line: 2246, column: 50, scope: !6836)
!6839 = !DILocation(line: 2246, column: 6, scope: !6770)
!6840 = !DILocation(line: 2247, column: 3, scope: !6836)
!6841 = !DILocation(line: 2248, column: 36, scope: !6842)
!6842 = distinct !DILexicalBlock(scope: !6770, file: !3, line: 2248, column: 6)
!6843 = !DILocation(line: 2248, column: 6, scope: !6842)
!6844 = !DILocation(line: 2248, column: 6, scope: !6770)
!6845 = !DILocation(line: 2249, column: 3, scope: !6842)
!6846 = !DILocation(line: 2251, column: 33, scope: !6847)
!6847 = distinct !DILexicalBlock(scope: !6770, file: !3, line: 2251, column: 6)
!6848 = !DILocation(line: 2251, column: 6, scope: !6847)
!6849 = !DILocation(line: 2251, column: 50, scope: !6847)
!6850 = !DILocation(line: 2251, column: 6, scope: !6770)
!6851 = !DILocation(line: 2252, column: 3, scope: !6847)
!6852 = !DILocation(line: 2253, column: 36, scope: !6853)
!6853 = distinct !DILexicalBlock(scope: !6770, file: !3, line: 2253, column: 6)
!6854 = !DILocation(line: 2253, column: 6, scope: !6853)
!6855 = !DILocation(line: 2253, column: 6, scope: !6770)
!6856 = !DILocation(line: 2254, column: 3, scope: !6853)
!6857 = !DILocation(line: 2256, column: 33, scope: !6858)
!6858 = distinct !DILexicalBlock(scope: !6770, file: !3, line: 2256, column: 6)
!6859 = !DILocation(line: 2256, column: 6, scope: !6858)
!6860 = !DILocation(line: 2256, column: 50, scope: !6858)
!6861 = !DILocation(line: 2256, column: 6, scope: !6770)
!6862 = !DILocation(line: 2257, column: 3, scope: !6858)
!6863 = !DILocation(line: 2258, column: 34, scope: !6864)
!6864 = distinct !DILexicalBlock(scope: !6770, file: !3, line: 2258, column: 6)
!6865 = !DILocation(line: 2258, column: 6, scope: !6864)
!6866 = !DILocation(line: 2258, column: 6, scope: !6770)
!6867 = !DILocation(line: 2259, column: 3, scope: !6864)
!6868 = !DILocation(line: 2261, column: 33, scope: !6869)
!6869 = distinct !DILexicalBlock(scope: !6770, file: !3, line: 2261, column: 6)
!6870 = !DILocation(line: 2261, column: 6, scope: !6869)
!6871 = !DILocation(line: 2261, column: 50, scope: !6869)
!6872 = !DILocation(line: 2261, column: 6, scope: !6770)
!6873 = !DILocation(line: 2262, column: 3, scope: !6869)
!6874 = !DILocation(line: 2263, column: 34, scope: !6875)
!6875 = distinct !DILexicalBlock(scope: !6770, file: !3, line: 2263, column: 6)
!6876 = !DILocation(line: 2263, column: 6, scope: !6875)
!6877 = !DILocation(line: 2263, column: 6, scope: !6770)
!6878 = !DILocation(line: 2264, column: 3, scope: !6875)
!6879 = !DILocation(line: 2266, column: 25, scope: !6770)
!6880 = !DILocation(line: 2266, column: 2, scope: !6770)
!6881 = !DILocation(line: 2269, column: 2, scope: !6770)
!6882 = !DILocation(line: 2269, column: 11, scope: !6770)
!6883 = !DILocation(line: 2270, column: 18, scope: !6884)
!6884 = distinct !DILexicalBlock(scope: !6770, file: !3, line: 2270, column: 6)
!6885 = !DILocation(line: 2270, column: 26, scope: !6884)
!6886 = !DILocation(line: 2270, column: 6, scope: !6884)
!6887 = !DILocation(line: 2270, column: 54, scope: !6884)
!6888 = !DILocation(line: 2271, column: 18, scope: !6884)
!6889 = !DILocation(line: 2271, column: 6, scope: !6884)
!6890 = !DILocation(line: 2270, column: 6, scope: !6770)
!6891 = !DILocation(line: 2272, column: 3, scope: !6892)
!6892 = distinct !DILexicalBlock(scope: !6884, file: !3, line: 2271, column: 53)
!6893 = !DILocation(line: 2273, column: 3, scope: !6892)
!6894 = !DILocation(line: 2276, column: 2, scope: !6770)
!6895 = !DILabel(scope: !6770, name: "error", file: !3, line: 2278)
!6896 = !DILocation(line: 2278, column: 1, scope: !6770)
!6897 = !DILocation(line: 2284, column: 25, scope: !6770)
!6898 = !DILocation(line: 2284, column: 2, scope: !6770)
!6899 = !DILocation(line: 2285, column: 2, scope: !6770)
!6900 = !DILocation(line: 2286, column: 1, scope: !6770)
!6901 = distinct !DISubprogram(name: "alps_process_packet_v3", scope: !3, file: !3, line: 803, type: !4003, scopeLine: 804, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !407)
!6902 = !DILocalVariable(name: "psmouse", arg: 1, scope: !6901, file: !3, line: 803, type: !210)
!6903 = !DILocation(line: 803, column: 52, scope: !6901)
!6904 = !DILocalVariable(name: "packet", scope: !6901, file: !3, line: 805, type: !4063)
!6905 = !DILocation(line: 805, column: 17, scope: !6901)
!6906 = !DILocation(line: 805, column: 26, scope: !6901)
!6907 = !DILocation(line: 805, column: 35, scope: !6901)
!6908 = !DILocation(line: 815, column: 6, scope: !6909)
!6909 = distinct !DILexicalBlock(scope: !6901, file: !3, line: 815, column: 6)
!6910 = !DILocation(line: 815, column: 16, scope: !6909)
!6911 = !DILocation(line: 815, column: 6, scope: !6901)
!6912 = !DILocation(line: 816, column: 37, scope: !6913)
!6913 = distinct !DILexicalBlock(scope: !6909, file: !3, line: 815, column: 25)
!6914 = !DILocation(line: 816, column: 3, scope: !6913)
!6915 = !DILocation(line: 817, column: 3, scope: !6913)
!6916 = !DILocation(line: 820, column: 37, scope: !6901)
!6917 = !DILocation(line: 820, column: 2, scope: !6901)
!6918 = !DILocation(line: 821, column: 1, scope: !6901)
!6919 = distinct !DISubprogram(name: "alps_set_abs_params_semi_mt", scope: !3, file: !3, line: 3002, type: !4066, scopeLine: 3004, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !407)
!6920 = !DILocalVariable(name: "priv", arg: 1, scope: !6919, file: !3, line: 3002, type: !206)
!6921 = !DILocation(line: 3002, column: 59, scope: !6919)
!6922 = !DILocalVariable(name: "dev1", arg: 2, scope: !6919, file: !3, line: 3003, type: !215)
!6923 = !DILocation(line: 3003, column: 24, scope: !6919)
!6924 = !DILocation(line: 3005, column: 32, scope: !6919)
!6925 = !DILocation(line: 3005, column: 38, scope: !6919)
!6926 = !DILocation(line: 3005, column: 2, scope: !6919)
!6927 = !DILocation(line: 3006, column: 23, scope: !6919)
!6928 = !DILocation(line: 3006, column: 2, scope: !6919)
!6929 = !DILocation(line: 3008, column: 22, scope: !6919)
!6930 = !DILocation(line: 3008, column: 2, scope: !6919)
!6931 = !DILocation(line: 3011, column: 1, scope: !6919)
!6932 = distinct !DISubprogram(name: "alps_decode_pinnacle", scope: !3, file: !3, line: 634, type: !4039, scopeLine: 636, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !407)
!6933 = !DILocalVariable(name: "f", arg: 1, scope: !6932, file: !3, line: 634, type: !4041)
!6934 = !DILocation(line: 634, column: 53, scope: !6932)
!6935 = !DILocalVariable(name: "p", arg: 2, scope: !6932, file: !3, line: 634, type: !4063)
!6936 = !DILocation(line: 634, column: 71, scope: !6932)
!6937 = !DILocalVariable(name: "psmouse", arg: 3, scope: !6932, file: !3, line: 635, type: !210)
!6938 = !DILocation(line: 635, column: 22, scope: !6932)
!6939 = !DILocation(line: 637, column: 19, scope: !6932)
!6940 = !DILocation(line: 637, column: 24, scope: !6932)
!6941 = !DILocation(line: 637, column: 17, scope: !6932)
!6942 = !DILocation(line: 637, column: 16, scope: !6932)
!6943 = !DILocation(line: 637, column: 2, scope: !6932)
!6944 = !DILocation(line: 637, column: 5, scope: !6932)
!6945 = !DILocation(line: 637, column: 14, scope: !6932)
!6946 = !DILocation(line: 638, column: 16, scope: !6932)
!6947 = !DILocation(line: 638, column: 21, scope: !6932)
!6948 = !DILocation(line: 638, column: 14, scope: !6932)
!6949 = !DILocation(line: 638, column: 13, scope: !6932)
!6950 = !DILocation(line: 638, column: 2, scope: !6932)
!6951 = !DILocation(line: 638, column: 5, scope: !6932)
!6952 = !DILocation(line: 638, column: 11, scope: !6932)
!6953 = !DILocation(line: 640, column: 6, scope: !6954)
!6954 = distinct !DILexicalBlock(scope: !6932, file: !3, line: 640, column: 6)
!6955 = !DILocation(line: 640, column: 9, scope: !6954)
!6956 = !DILocation(line: 640, column: 6, scope: !6932)
!6957 = !DILocation(line: 641, column: 17, scope: !6958)
!6958 = distinct !DILexicalBlock(scope: !6954, file: !3, line: 640, column: 16)
!6959 = !DILocation(line: 641, column: 22, scope: !6958)
!6960 = !DILocation(line: 641, column: 29, scope: !6958)
!6961 = !DILocation(line: 641, column: 3, scope: !6958)
!6962 = !DILocation(line: 641, column: 6, scope: !6958)
!6963 = !DILocation(line: 641, column: 14, scope: !6958)
!6964 = !DILocation(line: 642, column: 16, scope: !6958)
!6965 = !DILocation(line: 642, column: 21, scope: !6958)
!6966 = !DILocation(line: 642, column: 29, scope: !6958)
!6967 = !DILocation(line: 643, column: 9, scope: !6958)
!6968 = !DILocation(line: 643, column: 14, scope: !6958)
!6969 = !DILocation(line: 643, column: 22, scope: !6958)
!6970 = !DILocation(line: 642, column: 35, scope: !6958)
!6971 = !DILocation(line: 644, column: 9, scope: !6958)
!6972 = !DILocation(line: 644, column: 14, scope: !6958)
!6973 = !DILocation(line: 644, column: 22, scope: !6958)
!6974 = !DILocation(line: 643, column: 28, scope: !6958)
!6975 = !DILocation(line: 642, column: 3, scope: !6958)
!6976 = !DILocation(line: 642, column: 6, scope: !6958)
!6977 = !DILocation(line: 642, column: 12, scope: !6958)
!6978 = !DILocation(line: 645, column: 16, scope: !6958)
!6979 = !DILocation(line: 645, column: 21, scope: !6958)
!6980 = !DILocation(line: 645, column: 29, scope: !6958)
!6981 = !DILocation(line: 646, column: 9, scope: !6958)
!6982 = !DILocation(line: 646, column: 14, scope: !6958)
!6983 = !DILocation(line: 646, column: 22, scope: !6958)
!6984 = !DILocation(line: 645, column: 35, scope: !6958)
!6985 = !DILocation(line: 647, column: 8, scope: !6958)
!6986 = !DILocation(line: 647, column: 13, scope: !6958)
!6987 = !DILocation(line: 646, column: 28, scope: !6958)
!6988 = !DILocation(line: 645, column: 3, scope: !6958)
!6989 = !DILocation(line: 645, column: 6, scope: !6958)
!6990 = !DILocation(line: 645, column: 12, scope: !6958)
!6991 = !DILocation(line: 648, column: 2, scope: !6958)
!6992 = !DILocation(line: 649, column: 15, scope: !6993)
!6993 = distinct !DILexicalBlock(scope: !6954, file: !3, line: 648, column: 9)
!6994 = !DILocation(line: 649, column: 20, scope: !6993)
!6995 = !DILocation(line: 649, column: 28, scope: !6993)
!6996 = !DILocation(line: 649, column: 38, scope: !6993)
!6997 = !DILocation(line: 649, column: 43, scope: !6993)
!6998 = !DILocation(line: 649, column: 51, scope: !6993)
!6999 = !DILocation(line: 649, column: 34, scope: !6993)
!7000 = !DILocation(line: 650, column: 12, scope: !6993)
!7001 = !DILocation(line: 650, column: 17, scope: !6993)
!7002 = !DILocation(line: 650, column: 25, scope: !6993)
!7003 = !DILocation(line: 649, column: 57, scope: !6993)
!7004 = !DILocation(line: 649, column: 13, scope: !6993)
!7005 = !DILocation(line: 649, column: 3, scope: !6993)
!7006 = !DILocation(line: 649, column: 6, scope: !6993)
!7007 = !DILocation(line: 649, column: 9, scope: !6993)
!7008 = !DILocation(line: 649, column: 11, scope: !6993)
!7009 = !DILocation(line: 651, column: 15, scope: !6993)
!7010 = !DILocation(line: 651, column: 20, scope: !6993)
!7011 = !DILocation(line: 651, column: 28, scope: !6993)
!7012 = !DILocation(line: 651, column: 37, scope: !6993)
!7013 = !DILocation(line: 651, column: 42, scope: !6993)
!7014 = !DILocation(line: 651, column: 34, scope: !6993)
!7015 = !DILocation(line: 651, column: 13, scope: !6993)
!7016 = !DILocation(line: 651, column: 3, scope: !6993)
!7017 = !DILocation(line: 651, column: 6, scope: !6993)
!7018 = !DILocation(line: 651, column: 9, scope: !6993)
!7019 = !DILocation(line: 651, column: 11, scope: !6993)
!7020 = !DILocation(line: 652, column: 17, scope: !6993)
!7021 = !DILocation(line: 652, column: 22, scope: !6993)
!7022 = !DILocation(line: 652, column: 3, scope: !6993)
!7023 = !DILocation(line: 652, column: 6, scope: !6993)
!7024 = !DILocation(line: 652, column: 15, scope: !6993)
!7025 = !DILocation(line: 654, column: 26, scope: !6993)
!7026 = !DILocation(line: 654, column: 29, scope: !6993)
!7027 = !DILocation(line: 654, column: 3, scope: !6993)
!7028 = !DILocation(line: 657, column: 2, scope: !6932)
!7029 = distinct !DISubprogram(name: "alps_probe_trackstick_v3_v7", scope: !3, file: !3, line: 2133, type: !7030, scopeLine: 2134, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !407)
!7030 = !DISubroutineType(types: !7031)
!7031 = !{!262, !210, !262}
!7032 = !DILocalVariable(name: "psmouse", arg: 1, scope: !7029, file: !3, line: 2133, type: !210)
!7033 = !DILocation(line: 2133, column: 56, scope: !7029)
!7034 = !DILocalVariable(name: "reg_base", arg: 2, scope: !7029, file: !3, line: 2133, type: !262)
!7035 = !DILocation(line: 2133, column: 69, scope: !7029)
!7036 = !DILocalVariable(name: "ret", scope: !7029, file: !3, line: 2135, type: !262)
!7037 = !DILocation(line: 2135, column: 6, scope: !7029)
!7038 = !DILocalVariable(name: "reg_val", scope: !7029, file: !3, line: 2135, type: !262)
!7039 = !DILocation(line: 2135, column: 18, scope: !7029)
!7040 = !DILocation(line: 2137, column: 30, scope: !7041)
!7041 = distinct !DILexicalBlock(scope: !7029, file: !3, line: 2137, column: 6)
!7042 = !DILocation(line: 2137, column: 6, scope: !7041)
!7043 = !DILocation(line: 2137, column: 6, scope: !7029)
!7044 = !DILocation(line: 2138, column: 3, scope: !7041)
!7045 = !DILocation(line: 2140, column: 39, scope: !7029)
!7046 = !DILocation(line: 2140, column: 48, scope: !7029)
!7047 = !DILocation(line: 2140, column: 57, scope: !7029)
!7048 = !DILocation(line: 2140, column: 12, scope: !7029)
!7049 = !DILocation(line: 2140, column: 10, scope: !7029)
!7050 = !DILocation(line: 2141, column: 6, scope: !7051)
!7051 = distinct !DILexicalBlock(scope: !7029, file: !3, line: 2141, column: 6)
!7052 = !DILocation(line: 2141, column: 14, scope: !7051)
!7053 = !DILocation(line: 2141, column: 6, scope: !7029)
!7054 = !DILocation(line: 2142, column: 3, scope: !7051)
!7055 = !DILocation(line: 2145, column: 8, scope: !7029)
!7056 = !DILocation(line: 2145, column: 16, scope: !7029)
!7057 = !DILocation(line: 2145, column: 6, scope: !7029)
!7058 = !DILocation(line: 2145, column: 2, scope: !7029)
!7059 = !DILabel(scope: !7029, name: "error", file: !3, line: 2147)
!7060 = !DILocation(line: 2147, column: 1, scope: !7029)
!7061 = !DILocation(line: 2148, column: 25, scope: !7029)
!7062 = !DILocation(line: 2148, column: 2, scope: !7029)
!7063 = !DILocation(line: 2149, column: 9, scope: !7029)
!7064 = !DILocation(line: 2149, column: 2, scope: !7029)
!7065 = distinct !DISubprogram(name: "alps_hw_init_rushmore_v3", scope: !3, file: !3, line: 2327, type: !3962, scopeLine: 2328, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !407)
!7066 = !DILocalVariable(name: "psmouse", arg: 1, scope: !7065, file: !3, line: 2327, type: !210)
!7067 = !DILocation(line: 2327, column: 53, scope: !7065)
!7068 = !DILocalVariable(name: "priv", scope: !7065, file: !3, line: 2329, type: !206)
!7069 = !DILocation(line: 2329, column: 20, scope: !7065)
!7070 = !DILocation(line: 2329, column: 27, scope: !7065)
!7071 = !DILocation(line: 2329, column: 36, scope: !7065)
!7072 = !DILocalVariable(name: "ps2dev", scope: !7065, file: !3, line: 2330, type: !5945)
!7073 = !DILocation(line: 2330, column: 17, scope: !7065)
!7074 = !DILocation(line: 2330, column: 27, scope: !7065)
!7075 = !DILocation(line: 2330, column: 36, scope: !7065)
!7076 = !DILocalVariable(name: "reg_val", scope: !7065, file: !3, line: 2331, type: !262)
!7077 = !DILocation(line: 2331, column: 6, scope: !7065)
!7078 = !DILocalVariable(name: "ret", scope: !7065, file: !3, line: 2331, type: !262)
!7079 = !DILocation(line: 2331, column: 15, scope: !7065)
!7080 = !DILocation(line: 2333, column: 6, scope: !7081)
!7081 = distinct !DILexicalBlock(scope: !7065, file: !3, line: 2333, column: 6)
!7082 = !DILocation(line: 2333, column: 12, scope: !7081)
!7083 = !DILocation(line: 2333, column: 18, scope: !7081)
!7084 = !DILocation(line: 2333, column: 6, scope: !7065)
!7085 = !DILocation(line: 2334, column: 38, scope: !7086)
!7086 = distinct !DILexicalBlock(scope: !7081, file: !3, line: 2333, column: 36)
!7087 = !DILocation(line: 2334, column: 13, scope: !7086)
!7088 = !DILocation(line: 2334, column: 11, scope: !7086)
!7089 = !DILocation(line: 2336, column: 7, scope: !7090)
!7090 = distinct !DILexicalBlock(scope: !7086, file: !3, line: 2336, column: 7)
!7091 = !DILocation(line: 2336, column: 15, scope: !7090)
!7092 = !DILocation(line: 2336, column: 7, scope: !7086)
!7093 = !DILocation(line: 2337, column: 4, scope: !7090)
!7094 = !DILocation(line: 2338, column: 2, scope: !7086)
!7095 = !DILocation(line: 2340, column: 30, scope: !7096)
!7096 = distinct !DILexicalBlock(scope: !7065, file: !3, line: 2340, column: 6)
!7097 = !DILocation(line: 2340, column: 6, scope: !7096)
!7098 = !DILocation(line: 2340, column: 39, scope: !7096)
!7099 = !DILocation(line: 2341, column: 33, scope: !7096)
!7100 = !DILocation(line: 2341, column: 6, scope: !7096)
!7101 = !DILocation(line: 2341, column: 50, scope: !7096)
!7102 = !DILocation(line: 2341, column: 56, scope: !7096)
!7103 = !DILocation(line: 2342, column: 34, scope: !7096)
!7104 = !DILocation(line: 2342, column: 6, scope: !7096)
!7105 = !DILocation(line: 2340, column: 6, scope: !7065)
!7106 = !DILocation(line: 2343, column: 3, scope: !7096)
!7107 = !DILocation(line: 2345, column: 32, scope: !7108)
!7108 = distinct !DILexicalBlock(scope: !7065, file: !3, line: 2345, column: 6)
!7109 = !DILocation(line: 2345, column: 6, scope: !7108)
!7110 = !DILocation(line: 2345, column: 6, scope: !7065)
!7111 = !DILocation(line: 2346, column: 3, scope: !7108)
!7112 = !DILocation(line: 2348, column: 39, scope: !7065)
!7113 = !DILocation(line: 2348, column: 12, scope: !7065)
!7114 = !DILocation(line: 2348, column: 10, scope: !7065)
!7115 = !DILocation(line: 2349, column: 6, scope: !7116)
!7116 = distinct !DILexicalBlock(scope: !7065, file: !3, line: 2349, column: 6)
!7117 = !DILocation(line: 2349, column: 14, scope: !7116)
!7118 = !DILocation(line: 2349, column: 6, scope: !7065)
!7119 = !DILocation(line: 2350, column: 3, scope: !7116)
!7120 = !DILocation(line: 2351, column: 36, scope: !7121)
!7121 = distinct !DILexicalBlock(scope: !7065, file: !3, line: 2351, column: 6)
!7122 = !DILocation(line: 2351, column: 45, scope: !7121)
!7123 = !DILocation(line: 2351, column: 53, scope: !7121)
!7124 = !DILocation(line: 2351, column: 6, scope: !7121)
!7125 = !DILocation(line: 2351, column: 6, scope: !7065)
!7126 = !DILocation(line: 2352, column: 3, scope: !7121)
!7127 = !DILocation(line: 2354, column: 34, scope: !7128)
!7128 = distinct !DILexicalBlock(scope: !7065, file: !3, line: 2354, column: 6)
!7129 = !DILocation(line: 2354, column: 6, scope: !7128)
!7130 = !DILocation(line: 2354, column: 6, scope: !7065)
!7131 = !DILocation(line: 2355, column: 3, scope: !7128)
!7132 = !DILocation(line: 2358, column: 39, scope: !7065)
!7133 = !DILocation(line: 2358, column: 12, scope: !7065)
!7134 = !DILocation(line: 2358, column: 10, scope: !7065)
!7135 = !DILocation(line: 2359, column: 6, scope: !7136)
!7136 = distinct !DILexicalBlock(scope: !7065, file: !3, line: 2359, column: 6)
!7137 = !DILocation(line: 2359, column: 14, scope: !7136)
!7138 = !DILocation(line: 2359, column: 6, scope: !7065)
!7139 = !DILocation(line: 2360, column: 3, scope: !7136)
!7140 = !DILocation(line: 2361, column: 36, scope: !7141)
!7141 = distinct !DILexicalBlock(scope: !7065, file: !3, line: 2361, column: 6)
!7142 = !DILocation(line: 2361, column: 45, scope: !7141)
!7143 = !DILocation(line: 2361, column: 53, scope: !7141)
!7144 = !DILocation(line: 2361, column: 6, scope: !7141)
!7145 = !DILocation(line: 2361, column: 6, scope: !7065)
!7146 = !DILocation(line: 2362, column: 3, scope: !7141)
!7147 = !DILocation(line: 2364, column: 25, scope: !7065)
!7148 = !DILocation(line: 2364, column: 2, scope: !7065)
!7149 = !DILocation(line: 2365, column: 21, scope: !7065)
!7150 = !DILocation(line: 2365, column: 9, scope: !7065)
!7151 = !DILocation(line: 2365, column: 2, scope: !7065)
!7152 = !DILabel(scope: !7065, name: "error", file: !3, line: 2367)
!7153 = !DILocation(line: 2367, column: 1, scope: !7065)
!7154 = !DILocation(line: 2368, column: 25, scope: !7065)
!7155 = !DILocation(line: 2368, column: 2, scope: !7065)
!7156 = !DILocation(line: 2369, column: 9, scope: !7065)
!7157 = !DILocation(line: 2369, column: 2, scope: !7065)
!7158 = !DILocation(line: 2370, column: 1, scope: !7065)
!7159 = distinct !DISubprogram(name: "alps_decode_rushmore", scope: !3, file: !3, line: 660, type: !4039, scopeLine: 662, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !407)
!7160 = !DILocalVariable(name: "f", arg: 1, scope: !7159, file: !3, line: 660, type: !4041)
!7161 = !DILocation(line: 660, column: 53, scope: !7159)
!7162 = !DILocalVariable(name: "p", arg: 2, scope: !7159, file: !3, line: 660, type: !4063)
!7163 = !DILocation(line: 660, column: 71, scope: !7159)
!7164 = !DILocalVariable(name: "psmouse", arg: 3, scope: !7159, file: !3, line: 661, type: !210)
!7165 = !DILocation(line: 661, column: 22, scope: !7159)
!7166 = !DILocation(line: 663, column: 19, scope: !7159)
!7167 = !DILocation(line: 663, column: 24, scope: !7159)
!7168 = !DILocation(line: 663, column: 17, scope: !7159)
!7169 = !DILocation(line: 663, column: 16, scope: !7159)
!7170 = !DILocation(line: 663, column: 2, scope: !7159)
!7171 = !DILocation(line: 663, column: 5, scope: !7159)
!7172 = !DILocation(line: 663, column: 14, scope: !7159)
!7173 = !DILocation(line: 664, column: 16, scope: !7159)
!7174 = !DILocation(line: 664, column: 21, scope: !7159)
!7175 = !DILocation(line: 664, column: 14, scope: !7159)
!7176 = !DILocation(line: 664, column: 13, scope: !7159)
!7177 = !DILocation(line: 664, column: 2, scope: !7159)
!7178 = !DILocation(line: 664, column: 5, scope: !7159)
!7179 = !DILocation(line: 664, column: 11, scope: !7159)
!7180 = !DILocation(line: 666, column: 6, scope: !7181)
!7181 = distinct !DILexicalBlock(scope: !7159, file: !3, line: 666, column: 6)
!7182 = !DILocation(line: 666, column: 9, scope: !7181)
!7183 = !DILocation(line: 666, column: 6, scope: !7159)
!7184 = !DILocalVariable(name: "__UNIQUE_ID___x206", scope: !7185, file: !3, line: 667, type: !262)
!7185 = distinct !DILexicalBlock(scope: !7186, file: !3, line: 667, column: 16)
!7186 = distinct !DILexicalBlock(scope: !7181, file: !3, line: 666, column: 16)
!7187 = !DILocation(line: 667, column: 16, scope: !7185)
!7188 = !DILocalVariable(name: "__UNIQUE_ID___y207", scope: !7185, file: !3, line: 667, type: !262)
!7189 = !DILocation(line: 667, column: 55, scope: !7186)
!7190 = !DILocation(line: 667, column: 3, scope: !7186)
!7191 = !DILocation(line: 667, column: 6, scope: !7186)
!7192 = !DILocation(line: 667, column: 14, scope: !7186)
!7193 = !DILocation(line: 668, column: 16, scope: !7186)
!7194 = !DILocation(line: 668, column: 21, scope: !7186)
!7195 = !DILocation(line: 668, column: 29, scope: !7186)
!7196 = !DILocation(line: 669, column: 9, scope: !7186)
!7197 = !DILocation(line: 669, column: 14, scope: !7186)
!7198 = !DILocation(line: 669, column: 22, scope: !7186)
!7199 = !DILocation(line: 668, column: 36, scope: !7186)
!7200 = !DILocation(line: 670, column: 9, scope: !7186)
!7201 = !DILocation(line: 670, column: 14, scope: !7186)
!7202 = !DILocation(line: 670, column: 22, scope: !7186)
!7203 = !DILocation(line: 669, column: 28, scope: !7186)
!7204 = !DILocation(line: 671, column: 9, scope: !7186)
!7205 = !DILocation(line: 671, column: 14, scope: !7186)
!7206 = !DILocation(line: 671, column: 22, scope: !7186)
!7207 = !DILocation(line: 670, column: 28, scope: !7186)
!7208 = !DILocation(line: 668, column: 3, scope: !7186)
!7209 = !DILocation(line: 668, column: 6, scope: !7186)
!7210 = !DILocation(line: 668, column: 12, scope: !7186)
!7211 = !DILocation(line: 672, column: 16, scope: !7186)
!7212 = !DILocation(line: 672, column: 21, scope: !7186)
!7213 = !DILocation(line: 672, column: 29, scope: !7186)
!7214 = !DILocation(line: 673, column: 9, scope: !7186)
!7215 = !DILocation(line: 673, column: 14, scope: !7186)
!7216 = !DILocation(line: 673, column: 22, scope: !7186)
!7217 = !DILocation(line: 672, column: 35, scope: !7186)
!7218 = !DILocation(line: 674, column: 9, scope: !7186)
!7219 = !DILocation(line: 674, column: 14, scope: !7186)
!7220 = !DILocation(line: 674, column: 22, scope: !7186)
!7221 = !DILocation(line: 673, column: 28, scope: !7186)
!7222 = !DILocation(line: 675, column: 8, scope: !7186)
!7223 = !DILocation(line: 675, column: 13, scope: !7186)
!7224 = !DILocation(line: 674, column: 28, scope: !7186)
!7225 = !DILocation(line: 672, column: 3, scope: !7186)
!7226 = !DILocation(line: 672, column: 6, scope: !7186)
!7227 = !DILocation(line: 672, column: 12, scope: !7186)
!7228 = !DILocation(line: 676, column: 2, scope: !7186)
!7229 = !DILocation(line: 677, column: 15, scope: !7230)
!7230 = distinct !DILexicalBlock(scope: !7181, file: !3, line: 676, column: 9)
!7231 = !DILocation(line: 677, column: 20, scope: !7230)
!7232 = !DILocation(line: 677, column: 28, scope: !7230)
!7233 = !DILocation(line: 677, column: 38, scope: !7230)
!7234 = !DILocation(line: 677, column: 43, scope: !7230)
!7235 = !DILocation(line: 677, column: 51, scope: !7230)
!7236 = !DILocation(line: 677, column: 34, scope: !7230)
!7237 = !DILocation(line: 678, column: 12, scope: !7230)
!7238 = !DILocation(line: 678, column: 17, scope: !7230)
!7239 = !DILocation(line: 678, column: 25, scope: !7230)
!7240 = !DILocation(line: 677, column: 57, scope: !7230)
!7241 = !DILocation(line: 677, column: 13, scope: !7230)
!7242 = !DILocation(line: 677, column: 3, scope: !7230)
!7243 = !DILocation(line: 677, column: 6, scope: !7230)
!7244 = !DILocation(line: 677, column: 9, scope: !7230)
!7245 = !DILocation(line: 677, column: 11, scope: !7230)
!7246 = !DILocation(line: 679, column: 15, scope: !7230)
!7247 = !DILocation(line: 679, column: 20, scope: !7230)
!7248 = !DILocation(line: 679, column: 28, scope: !7230)
!7249 = !DILocation(line: 679, column: 37, scope: !7230)
!7250 = !DILocation(line: 679, column: 42, scope: !7230)
!7251 = !DILocation(line: 679, column: 34, scope: !7230)
!7252 = !DILocation(line: 679, column: 13, scope: !7230)
!7253 = !DILocation(line: 679, column: 3, scope: !7230)
!7254 = !DILocation(line: 679, column: 6, scope: !7230)
!7255 = !DILocation(line: 679, column: 9, scope: !7230)
!7256 = !DILocation(line: 679, column: 11, scope: !7230)
!7257 = !DILocation(line: 680, column: 17, scope: !7230)
!7258 = !DILocation(line: 680, column: 22, scope: !7230)
!7259 = !DILocation(line: 680, column: 3, scope: !7230)
!7260 = !DILocation(line: 680, column: 6, scope: !7230)
!7261 = !DILocation(line: 680, column: 15, scope: !7230)
!7262 = !DILocation(line: 682, column: 26, scope: !7230)
!7263 = !DILocation(line: 682, column: 29, scope: !7230)
!7264 = !DILocation(line: 682, column: 3, scope: !7230)
!7265 = !DILocation(line: 685, column: 2, scope: !7159)
!7266 = distinct !DISubprogram(name: "alps_hw_init_v4", scope: !3, file: !3, line: 2388, type: !3962, scopeLine: 2389, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !407)
!7267 = !DILocalVariable(name: "psmouse", arg: 1, scope: !7266, file: !3, line: 2388, type: !210)
!7268 = !DILocation(line: 2388, column: 44, scope: !7266)
!7269 = !DILocalVariable(name: "ps2dev", scope: !7266, file: !3, line: 2390, type: !5945)
!7270 = !DILocation(line: 2390, column: 17, scope: !7266)
!7271 = !DILocation(line: 2390, column: 27, scope: !7266)
!7272 = !DILocation(line: 2390, column: 36, scope: !7266)
!7273 = !DILocalVariable(name: "param", scope: !7266, file: !3, line: 2391, type: !5030)
!7274 = !DILocation(line: 2391, column: 16, scope: !7266)
!7275 = !DILocation(line: 2393, column: 30, scope: !7276)
!7276 = distinct !DILexicalBlock(scope: !7266, file: !3, line: 2393, column: 6)
!7277 = !DILocation(line: 2393, column: 6, scope: !7276)
!7278 = !DILocation(line: 2393, column: 6, scope: !7266)
!7279 = !DILocation(line: 2394, column: 3, scope: !7276)
!7280 = !DILocation(line: 2396, column: 28, scope: !7281)
!7281 = distinct !DILexicalBlock(scope: !7266, file: !3, line: 2396, column: 6)
!7282 = !DILocation(line: 2396, column: 6, scope: !7281)
!7283 = !DILocation(line: 2396, column: 6, scope: !7266)
!7284 = !DILocation(line: 2397, column: 3, scope: !7285)
!7285 = distinct !DILexicalBlock(scope: !7281, file: !3, line: 2396, column: 38)
!7286 = !DILocation(line: 2398, column: 3, scope: !7285)
!7287 = !DILocation(line: 2401, column: 34, scope: !7288)
!7288 = distinct !DILexicalBlock(scope: !7266, file: !3, line: 2401, column: 6)
!7289 = !DILocation(line: 2401, column: 6, scope: !7288)
!7290 = !DILocation(line: 2401, column: 6, scope: !7266)
!7291 = !DILocation(line: 2402, column: 3, scope: !7288)
!7292 = !DILocation(line: 2404, column: 34, scope: !7293)
!7293 = distinct !DILexicalBlock(scope: !7266, file: !3, line: 2404, column: 6)
!7294 = !DILocation(line: 2404, column: 6, scope: !7293)
!7295 = !DILocation(line: 2404, column: 6, scope: !7266)
!7296 = !DILocation(line: 2405, column: 3, scope: !7293)
!7297 = !DILocation(line: 2407, column: 34, scope: !7298)
!7298 = distinct !DILexicalBlock(scope: !7266, file: !3, line: 2407, column: 6)
!7299 = !DILocation(line: 2407, column: 6, scope: !7298)
!7300 = !DILocation(line: 2407, column: 6, scope: !7266)
!7301 = !DILocation(line: 2408, column: 3, scope: !7298)
!7302 = !DILocation(line: 2410, column: 34, scope: !7303)
!7303 = distinct !DILexicalBlock(scope: !7266, file: !3, line: 2410, column: 6)
!7304 = !DILocation(line: 2410, column: 6, scope: !7303)
!7305 = !DILocation(line: 2410, column: 6, scope: !7266)
!7306 = !DILocation(line: 2411, column: 3, scope: !7303)
!7307 = !DILocation(line: 2413, column: 34, scope: !7308)
!7308 = distinct !DILexicalBlock(scope: !7266, file: !3, line: 2413, column: 6)
!7309 = !DILocation(line: 2413, column: 6, scope: !7308)
!7310 = !DILocation(line: 2413, column: 6, scope: !7266)
!7311 = !DILocation(line: 2414, column: 3, scope: !7308)
!7312 = !DILocation(line: 2416, column: 34, scope: !7313)
!7313 = distinct !DILexicalBlock(scope: !7266, file: !3, line: 2416, column: 6)
!7314 = !DILocation(line: 2416, column: 6, scope: !7313)
!7315 = !DILocation(line: 2416, column: 6, scope: !7266)
!7316 = !DILocation(line: 2417, column: 3, scope: !7313)
!7317 = !DILocation(line: 2419, column: 34, scope: !7318)
!7318 = distinct !DILexicalBlock(scope: !7266, file: !3, line: 2419, column: 6)
!7319 = !DILocation(line: 2419, column: 6, scope: !7318)
!7320 = !DILocation(line: 2419, column: 6, scope: !7266)
!7321 = !DILocation(line: 2420, column: 3, scope: !7318)
!7322 = !DILocation(line: 2422, column: 34, scope: !7323)
!7323 = distinct !DILexicalBlock(scope: !7266, file: !3, line: 2422, column: 6)
!7324 = !DILocation(line: 2422, column: 6, scope: !7323)
!7325 = !DILocation(line: 2422, column: 6, scope: !7266)
!7326 = !DILocation(line: 2423, column: 3, scope: !7323)
!7327 = !DILocation(line: 2425, column: 25, scope: !7266)
!7328 = !DILocation(line: 2425, column: 2, scope: !7266)
!7329 = !DILocation(line: 2432, column: 2, scope: !7266)
!7330 = !DILocation(line: 2432, column: 11, scope: !7266)
!7331 = !DILocation(line: 2433, column: 2, scope: !7266)
!7332 = !DILocation(line: 2433, column: 11, scope: !7266)
!7333 = !DILocation(line: 2434, column: 2, scope: !7266)
!7334 = !DILocation(line: 2434, column: 11, scope: !7266)
!7335 = !DILocation(line: 2435, column: 18, scope: !7336)
!7336 = distinct !DILexicalBlock(scope: !7266, file: !3, line: 2435, column: 6)
!7337 = !DILocation(line: 2435, column: 27, scope: !7336)
!7338 = !DILocation(line: 2435, column: 6, scope: !7336)
!7339 = !DILocation(line: 2435, column: 58, scope: !7336)
!7340 = !DILocation(line: 2436, column: 18, scope: !7336)
!7341 = !DILocation(line: 2436, column: 27, scope: !7336)
!7342 = !DILocation(line: 2436, column: 6, scope: !7336)
!7343 = !DILocation(line: 2436, column: 58, scope: !7336)
!7344 = !DILocation(line: 2437, column: 18, scope: !7336)
!7345 = !DILocation(line: 2437, column: 27, scope: !7336)
!7346 = !DILocation(line: 2437, column: 6, scope: !7336)
!7347 = !DILocation(line: 2437, column: 58, scope: !7336)
!7348 = !DILocation(line: 2438, column: 18, scope: !7336)
!7349 = !DILocation(line: 2438, column: 26, scope: !7336)
!7350 = !DILocation(line: 2438, column: 6, scope: !7336)
!7351 = !DILocation(line: 2435, column: 6, scope: !7266)
!7352 = !DILocation(line: 2439, column: 3, scope: !7336)
!7353 = !DILocation(line: 2442, column: 2, scope: !7266)
!7354 = !DILocation(line: 2442, column: 11, scope: !7266)
!7355 = !DILocation(line: 2443, column: 18, scope: !7356)
!7356 = distinct !DILexicalBlock(scope: !7266, file: !3, line: 2443, column: 6)
!7357 = !DILocation(line: 2443, column: 26, scope: !7356)
!7358 = !DILocation(line: 2443, column: 6, scope: !7356)
!7359 = !DILocation(line: 2443, column: 54, scope: !7356)
!7360 = !DILocation(line: 2444, column: 18, scope: !7356)
!7361 = !DILocation(line: 2444, column: 6, scope: !7356)
!7362 = !DILocation(line: 2443, column: 6, scope: !7266)
!7363 = !DILocation(line: 2445, column: 3, scope: !7364)
!7364 = distinct !DILexicalBlock(scope: !7356, file: !3, line: 2444, column: 53)
!7365 = !DILocation(line: 2446, column: 3, scope: !7364)
!7366 = !DILocation(line: 2449, column: 2, scope: !7266)
!7367 = !DILabel(scope: !7266, name: "error", file: !3, line: 2451)
!7368 = !DILocation(line: 2451, column: 1, scope: !7266)
!7369 = !DILocation(line: 2457, column: 25, scope: !7266)
!7370 = !DILocation(line: 2457, column: 2, scope: !7266)
!7371 = !DILocation(line: 2458, column: 2, scope: !7266)
!7372 = !DILocation(line: 2459, column: 1, scope: !7266)
!7373 = distinct !DISubprogram(name: "alps_process_packet_v4", scope: !3, file: !3, line: 889, type: !4003, scopeLine: 890, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !407)
!7374 = !DILocalVariable(name: "psmouse", arg: 1, scope: !7373, file: !3, line: 889, type: !210)
!7375 = !DILocation(line: 889, column: 52, scope: !7373)
!7376 = !DILocalVariable(name: "priv", scope: !7373, file: !3, line: 891, type: !206)
!7377 = !DILocation(line: 891, column: 20, scope: !7373)
!7378 = !DILocation(line: 891, column: 27, scope: !7373)
!7379 = !DILocation(line: 891, column: 36, scope: !7373)
!7380 = !DILocalVariable(name: "packet", scope: !7373, file: !3, line: 892, type: !4063)
!7381 = !DILocation(line: 892, column: 17, scope: !7373)
!7382 = !DILocation(line: 892, column: 26, scope: !7373)
!7383 = !DILocation(line: 892, column: 35, scope: !7373)
!7384 = !DILocalVariable(name: "f", scope: !7373, file: !3, line: 893, type: !4041)
!7385 = !DILocation(line: 893, column: 22, scope: !7373)
!7386 = !DILocation(line: 893, column: 27, scope: !7373)
!7387 = !DILocation(line: 893, column: 33, scope: !7373)
!7388 = !DILocalVariable(name: "offset", scope: !7373, file: !3, line: 894, type: !262)
!7389 = !DILocation(line: 894, column: 6, scope: !7373)
!7390 = !DILocation(line: 901, column: 6, scope: !7391)
!7391 = distinct !DILexicalBlock(scope: !7373, file: !3, line: 901, column: 6)
!7392 = !DILocation(line: 901, column: 16, scope: !7391)
!7393 = !DILocation(line: 901, column: 6, scope: !7373)
!7394 = !DILocation(line: 903, column: 3, scope: !7395)
!7395 = distinct !DILexicalBlock(scope: !7391, file: !3, line: 901, column: 24)
!7396 = !DILocation(line: 903, column: 9, scope: !7395)
!7397 = !DILocation(line: 903, column: 22, scope: !7395)
!7398 = !DILocation(line: 904, column: 2, scope: !7395)
!7399 = !DILocalVariable(name: "__ret_warn_on", scope: !7400, file: !3, line: 906, type: !262)
!7400 = distinct !DILexicalBlock(scope: !7401, file: !3, line: 906, column: 6)
!7401 = distinct !DILexicalBlock(scope: !7373, file: !3, line: 906, column: 6)
!7402 = !DILocation(line: 906, column: 6, scope: !7400)
!7403 = !DILocation(line: 906, column: 6, scope: !7404)
!7404 = distinct !DILexicalBlock(scope: !7400, file: !3, line: 906, column: 6)
!7405 = !DILocation(line: 906, column: 6, scope: !7406)
!7406 = distinct !DILexicalBlock(scope: !7404, file: !3, line: 906, column: 6)
!7407 = !DILocation(line: 906, column: 6, scope: !7408)
!7408 = distinct !DILexicalBlock(scope: !7406, file: !3, line: 906, column: 6)
!7409 = !DILocation(line: 906, column: 6, scope: !7410)
!7410 = distinct !DILexicalBlock(scope: !7406, file: !3, line: 906, column: 6)
!7411 = !{i32 -2142727746, i32 -2142727717, i32 -2142727671, i32 -2142727613, i32 -2142727559, i32 -2142727505, i32 -2142727450, i32 -2142727419}
!7412 = !DILocation(line: 906, column: 6, scope: !7413)
!7413 = distinct !DILexicalBlock(scope: !7406, file: !3, line: 906, column: 6)
!7414 = !{i32 -2142727000, i32 -2142726993, i32 -2142726941, i32 -2142726910, i32 -2142726880}
!7415 = !DILocation(line: 906, column: 6, scope: !7416)
!7416 = distinct !DILexicalBlock(scope: !7406, file: !3, line: 906, column: 6)
!7417 = !DILocation(line: 906, column: 6, scope: !7401)
!7418 = !DILocation(line: 906, column: 6, scope: !7373)
!7419 = !DILocation(line: 907, column: 3, scope: !7401)
!7420 = !DILocation(line: 909, column: 15, scope: !7373)
!7421 = !DILocation(line: 909, column: 21, scope: !7373)
!7422 = !DILocation(line: 909, column: 13, scope: !7373)
!7423 = !DILocation(line: 909, column: 9, scope: !7373)
!7424 = !DILocation(line: 910, column: 29, scope: !7373)
!7425 = !DILocation(line: 910, column: 2, scope: !7373)
!7426 = !DILocation(line: 910, column: 8, scope: !7373)
!7427 = !DILocation(line: 910, column: 19, scope: !7373)
!7428 = !DILocation(line: 910, column: 27, scope: !7373)
!7429 = !DILocation(line: 911, column: 33, scope: !7373)
!7430 = !DILocation(line: 911, column: 2, scope: !7373)
!7431 = !DILocation(line: 911, column: 8, scope: !7373)
!7432 = !DILocation(line: 911, column: 19, scope: !7373)
!7433 = !DILocation(line: 911, column: 26, scope: !7373)
!7434 = !DILocation(line: 911, column: 31, scope: !7373)
!7435 = !DILocation(line: 913, column: 15, scope: !7373)
!7436 = !DILocation(line: 913, column: 25, scope: !7373)
!7437 = !DILocation(line: 913, column: 13, scope: !7373)
!7438 = !DILocation(line: 913, column: 12, scope: !7373)
!7439 = !DILocation(line: 913, column: 2, scope: !7373)
!7440 = !DILocation(line: 913, column: 5, scope: !7373)
!7441 = !DILocation(line: 913, column: 10, scope: !7373)
!7442 = !DILocation(line: 914, column: 16, scope: !7373)
!7443 = !DILocation(line: 914, column: 26, scope: !7373)
!7444 = !DILocation(line: 914, column: 14, scope: !7373)
!7445 = !DILocation(line: 914, column: 13, scope: !7373)
!7446 = !DILocation(line: 914, column: 2, scope: !7373)
!7447 = !DILocation(line: 914, column: 5, scope: !7373)
!7448 = !DILocation(line: 914, column: 11, scope: !7373)
!7449 = !DILocation(line: 916, column: 14, scope: !7373)
!7450 = !DILocation(line: 916, column: 24, scope: !7373)
!7451 = !DILocation(line: 916, column: 32, scope: !7373)
!7452 = !DILocation(line: 916, column: 42, scope: !7373)
!7453 = !DILocation(line: 916, column: 52, scope: !7373)
!7454 = !DILocation(line: 916, column: 60, scope: !7373)
!7455 = !DILocation(line: 916, column: 38, scope: !7373)
!7456 = !DILocation(line: 917, column: 7, scope: !7373)
!7457 = !DILocation(line: 917, column: 17, scope: !7373)
!7458 = !DILocation(line: 917, column: 25, scope: !7373)
!7459 = !DILocation(line: 916, column: 66, scope: !7373)
!7460 = !DILocation(line: 916, column: 12, scope: !7373)
!7461 = !DILocation(line: 916, column: 2, scope: !7373)
!7462 = !DILocation(line: 916, column: 5, scope: !7373)
!7463 = !DILocation(line: 916, column: 8, scope: !7373)
!7464 = !DILocation(line: 916, column: 10, scope: !7373)
!7465 = !DILocation(line: 918, column: 14, scope: !7373)
!7466 = !DILocation(line: 918, column: 24, scope: !7373)
!7467 = !DILocation(line: 918, column: 32, scope: !7373)
!7468 = !DILocation(line: 918, column: 41, scope: !7373)
!7469 = !DILocation(line: 918, column: 51, scope: !7373)
!7470 = !DILocation(line: 918, column: 38, scope: !7373)
!7471 = !DILocation(line: 918, column: 12, scope: !7373)
!7472 = !DILocation(line: 918, column: 2, scope: !7373)
!7473 = !DILocation(line: 918, column: 5, scope: !7373)
!7474 = !DILocation(line: 918, column: 8, scope: !7373)
!7475 = !DILocation(line: 918, column: 10, scope: !7373)
!7476 = !DILocation(line: 919, column: 16, scope: !7373)
!7477 = !DILocation(line: 919, column: 26, scope: !7373)
!7478 = !DILocation(line: 919, column: 2, scope: !7373)
!7479 = !DILocation(line: 919, column: 5, scope: !7373)
!7480 = !DILocation(line: 919, column: 14, scope: !7373)
!7481 = !DILocation(line: 921, column: 8, scope: !7482)
!7482 = distinct !DILexicalBlock(scope: !7373, file: !3, line: 921, column: 6)
!7483 = !DILocation(line: 921, column: 14, scope: !7482)
!7484 = !DILocation(line: 921, column: 6, scope: !7482)
!7485 = !DILocation(line: 921, column: 27, scope: !7482)
!7486 = !DILocation(line: 921, column: 6, scope: !7373)
!7487 = !DILocation(line: 922, column: 3, scope: !7488)
!7488 = distinct !DILexicalBlock(scope: !7482, file: !3, line: 921, column: 32)
!7489 = !DILocation(line: 922, column: 9, scope: !7488)
!7490 = !DILocation(line: 922, column: 22, scope: !7488)
!7491 = !DILocation(line: 924, column: 16, scope: !7488)
!7492 = !DILocation(line: 924, column: 22, scope: !7488)
!7493 = !DILocation(line: 924, column: 36, scope: !7488)
!7494 = !DILocation(line: 924, column: 44, scope: !7488)
!7495 = !DILocation(line: 925, column: 9, scope: !7488)
!7496 = !DILocation(line: 925, column: 15, scope: !7488)
!7497 = !DILocation(line: 925, column: 29, scope: !7488)
!7498 = !DILocation(line: 925, column: 37, scope: !7488)
!7499 = !DILocation(line: 924, column: 51, scope: !7488)
!7500 = !DILocation(line: 926, column: 9, scope: !7488)
!7501 = !DILocation(line: 926, column: 15, scope: !7488)
!7502 = !DILocation(line: 926, column: 29, scope: !7488)
!7503 = !DILocation(line: 926, column: 37, scope: !7488)
!7504 = !DILocation(line: 925, column: 43, scope: !7488)
!7505 = !DILocation(line: 927, column: 9, scope: !7488)
!7506 = !DILocation(line: 927, column: 15, scope: !7488)
!7507 = !DILocation(line: 927, column: 29, scope: !7488)
!7508 = !DILocation(line: 927, column: 37, scope: !7488)
!7509 = !DILocation(line: 926, column: 43, scope: !7488)
!7510 = !DILocation(line: 924, column: 3, scope: !7488)
!7511 = !DILocation(line: 924, column: 6, scope: !7488)
!7512 = !DILocation(line: 924, column: 12, scope: !7488)
!7513 = !DILocation(line: 928, column: 16, scope: !7488)
!7514 = !DILocation(line: 928, column: 22, scope: !7488)
!7515 = !DILocation(line: 928, column: 36, scope: !7488)
!7516 = !DILocation(line: 928, column: 44, scope: !7488)
!7517 = !DILocation(line: 929, column: 9, scope: !7488)
!7518 = !DILocation(line: 929, column: 15, scope: !7488)
!7519 = !DILocation(line: 929, column: 29, scope: !7488)
!7520 = !DILocation(line: 929, column: 37, scope: !7488)
!7521 = !DILocation(line: 928, column: 51, scope: !7488)
!7522 = !DILocation(line: 930, column: 9, scope: !7488)
!7523 = !DILocation(line: 930, column: 15, scope: !7488)
!7524 = !DILocation(line: 930, column: 29, scope: !7488)
!7525 = !DILocation(line: 929, column: 43, scope: !7488)
!7526 = !DILocation(line: 928, column: 3, scope: !7488)
!7527 = !DILocation(line: 928, column: 6, scope: !7488)
!7528 = !DILocation(line: 928, column: 12, scope: !7488)
!7529 = !DILocation(line: 932, column: 36, scope: !7488)
!7530 = !DILocation(line: 932, column: 42, scope: !7488)
!7531 = !DILocation(line: 932, column: 16, scope: !7488)
!7532 = !DILocation(line: 932, column: 3, scope: !7488)
!7533 = !DILocation(line: 932, column: 6, scope: !7488)
!7534 = !DILocation(line: 932, column: 14, scope: !7488)
!7535 = !DILocation(line: 933, column: 2, scope: !7488)
!7536 = !DILocation(line: 935, column: 27, scope: !7373)
!7537 = !DILocation(line: 935, column: 36, scope: !7373)
!7538 = !DILocation(line: 935, column: 39, scope: !7373)
!7539 = !DILocation(line: 935, column: 2, scope: !7373)
!7540 = !DILocation(line: 936, column: 1, scope: !7373)
!7541 = distinct !DISubprogram(name: "alps_hw_init_dolphin_v1", scope: !3, file: !3, line: 2647, type: !3962, scopeLine: 2648, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !407)
!7542 = !DILocalVariable(name: "psmouse", arg: 1, scope: !7541, file: !3, line: 2647, type: !210)
!7543 = !DILocation(line: 2647, column: 52, scope: !7541)
!7544 = !DILocalVariable(name: "ps2dev", scope: !7541, file: !3, line: 2649, type: !5945)
!7545 = !DILocation(line: 2649, column: 17, scope: !7541)
!7546 = !DILocation(line: 2649, column: 27, scope: !7541)
!7547 = !DILocation(line: 2649, column: 36, scope: !7541)
!7548 = !DILocalVariable(name: "param", scope: !7541, file: !3, line: 2650, type: !7549)
!7549 = !DICompositeType(tag: DW_TAG_array_type, baseType: !269, size: 16, elements: !251)
!7550 = !DILocation(line: 2650, column: 16, scope: !7541)
!7551 = !DILocation(line: 2653, column: 2, scope: !7541)
!7552 = !DILocation(line: 2653, column: 11, scope: !7541)
!7553 = !DILocation(line: 2654, column: 2, scope: !7541)
!7554 = !DILocation(line: 2654, column: 11, scope: !7541)
!7555 = !DILocation(line: 2656, column: 18, scope: !7556)
!7556 = distinct !DILexicalBlock(scope: !7541, file: !3, line: 2656, column: 6)
!7557 = !DILocation(line: 2656, column: 6, scope: !7556)
!7558 = !DILocation(line: 2656, column: 55, scope: !7556)
!7559 = !DILocation(line: 2657, column: 18, scope: !7556)
!7560 = !DILocation(line: 2657, column: 27, scope: !7556)
!7561 = !DILocation(line: 2657, column: 6, scope: !7556)
!7562 = !DILocation(line: 2657, column: 58, scope: !7556)
!7563 = !DILocation(line: 2658, column: 18, scope: !7556)
!7564 = !DILocation(line: 2658, column: 27, scope: !7556)
!7565 = !DILocation(line: 2658, column: 6, scope: !7556)
!7566 = !DILocation(line: 2656, column: 6, scope: !7541)
!7567 = !DILocation(line: 2659, column: 3, scope: !7556)
!7568 = !DILocation(line: 2661, column: 2, scope: !7541)
!7569 = !DILocation(line: 2662, column: 1, scope: !7541)
!7570 = distinct !DISubprogram(name: "alps_process_touchpad_packet_v3_v5", scope: !3, file: !3, line: 725, type: !4003, scopeLine: 726, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !407)
!7571 = !DILocalVariable(name: "psmouse", arg: 1, scope: !7570, file: !3, line: 725, type: !210)
!7572 = !DILocation(line: 725, column: 64, scope: !7570)
!7573 = !DILocalVariable(name: "priv", scope: !7570, file: !3, line: 727, type: !206)
!7574 = !DILocation(line: 727, column: 20, scope: !7570)
!7575 = !DILocation(line: 727, column: 27, scope: !7570)
!7576 = !DILocation(line: 727, column: 36, scope: !7570)
!7577 = !DILocalVariable(name: "packet", scope: !7570, file: !3, line: 728, type: !4063)
!7578 = !DILocation(line: 728, column: 17, scope: !7570)
!7579 = !DILocation(line: 728, column: 26, scope: !7570)
!7580 = !DILocation(line: 728, column: 35, scope: !7570)
!7581 = !DILocalVariable(name: "dev2", scope: !7570, file: !3, line: 729, type: !215)
!7582 = !DILocation(line: 729, column: 20, scope: !7570)
!7583 = !DILocation(line: 729, column: 27, scope: !7570)
!7584 = !DILocation(line: 729, column: 33, scope: !7570)
!7585 = !DILocalVariable(name: "f", scope: !7570, file: !3, line: 730, type: !4041)
!7586 = !DILocation(line: 730, column: 22, scope: !7570)
!7587 = !DILocation(line: 730, column: 27, scope: !7570)
!7588 = !DILocation(line: 730, column: 33, scope: !7570)
!7589 = !DILocalVariable(name: "fingers", scope: !7570, file: !3, line: 731, type: !262)
!7590 = !DILocation(line: 731, column: 6, scope: !7570)
!7591 = !DILocation(line: 733, column: 9, scope: !7570)
!7592 = !DILocation(line: 733, column: 2, scope: !7570)
!7593 = !DILocation(line: 735, column: 2, scope: !7570)
!7594 = !DILocation(line: 735, column: 8, scope: !7570)
!7595 = !DILocation(line: 735, column: 22, scope: !7570)
!7596 = !DILocation(line: 735, column: 25, scope: !7570)
!7597 = !DILocation(line: 735, column: 33, scope: !7570)
!7598 = !DILocation(line: 743, column: 6, scope: !7599)
!7599 = distinct !DILexicalBlock(scope: !7570, file: !3, line: 743, column: 6)
!7600 = !DILocation(line: 743, column: 12, scope: !7599)
!7601 = !DILocation(line: 743, column: 6, scope: !7570)
!7602 = !DILocation(line: 750, column: 7, scope: !7603)
!7603 = distinct !DILexicalBlock(scope: !7604, file: !3, line: 750, column: 7)
!7604 = distinct !DILexicalBlock(scope: !7599, file: !3, line: 743, column: 26)
!7605 = !DILocation(line: 750, column: 10, scope: !7603)
!7606 = !DILocation(line: 750, column: 7, scope: !7604)
!7607 = !DILocation(line: 751, column: 14, scope: !7608)
!7608 = distinct !DILexicalBlock(scope: !7603, file: !3, line: 750, column: 17)
!7609 = !DILocation(line: 751, column: 17, scope: !7608)
!7610 = !DILocation(line: 751, column: 12, scope: !7608)
!7611 = !DILocation(line: 756, column: 4, scope: !7608)
!7612 = !DILocation(line: 756, column: 10, scope: !7608)
!7613 = !DILocation(line: 756, column: 24, scope: !7608)
!7614 = !DILocation(line: 756, column: 27, scope: !7608)
!7615 = !DILocation(line: 756, column: 33, scope: !7608)
!7616 = !DILocation(line: 756, column: 45, scope: !7608)
!7617 = !DILocation(line: 757, column: 28, scope: !7618)
!7618 = distinct !DILexicalBlock(scope: !7608, file: !3, line: 757, column: 8)
!7619 = !DILocation(line: 757, column: 34, scope: !7618)
!7620 = !DILocation(line: 757, column: 8, scope: !7618)
!7621 = !DILocation(line: 757, column: 37, scope: !7618)
!7622 = !DILocation(line: 757, column: 8, scope: !7608)
!7623 = !DILocation(line: 758, column: 13, scope: !7618)
!7624 = !DILocation(line: 758, column: 5, scope: !7618)
!7625 = !DILocation(line: 759, column: 3, scope: !7608)
!7626 = !DILocation(line: 760, column: 4, scope: !7627)
!7627 = distinct !DILexicalBlock(scope: !7603, file: !3, line: 759, column: 10)
!7628 = !DILocation(line: 760, column: 10, scope: !7627)
!7629 = !DILocation(line: 760, column: 23, scope: !7627)
!7630 = !DILocation(line: 762, column: 2, scope: !7604)
!7631 = !DILocation(line: 772, column: 6, scope: !7632)
!7632 = distinct !DILexicalBlock(scope: !7570, file: !3, line: 772, column: 6)
!7633 = !DILocation(line: 772, column: 9, scope: !7632)
!7634 = !DILocation(line: 772, column: 6, scope: !7570)
!7635 = !DILocation(line: 773, column: 3, scope: !7632)
!7636 = !DILocation(line: 775, column: 7, scope: !7637)
!7637 = distinct !DILexicalBlock(scope: !7570, file: !3, line: 775, column: 6)
!7638 = !DILocation(line: 775, column: 13, scope: !7637)
!7639 = !DILocation(line: 775, column: 26, scope: !7637)
!7640 = !DILocation(line: 775, column: 29, scope: !7637)
!7641 = !DILocation(line: 775, column: 32, scope: !7637)
!7642 = !DILocation(line: 775, column: 6, scope: !7570)
!7643 = !DILocation(line: 776, column: 3, scope: !7644)
!7644 = distinct !DILexicalBlock(scope: !7637, file: !3, line: 775, column: 42)
!7645 = !DILocation(line: 776, column: 9, scope: !7644)
!7646 = !DILocation(line: 776, column: 22, scope: !7644)
!7647 = !DILocation(line: 777, column: 10, scope: !7644)
!7648 = !DILocation(line: 777, column: 16, scope: !7644)
!7649 = !DILocation(line: 777, column: 3, scope: !7644)
!7650 = !DILocation(line: 777, column: 28, scope: !7644)
!7651 = !DILocation(line: 778, column: 3, scope: !7644)
!7652 = !DILocation(line: 781, column: 2, scope: !7570)
!7653 = !DILocation(line: 781, column: 8, scope: !7570)
!7654 = !DILocation(line: 781, column: 21, scope: !7570)
!7655 = !DILocation(line: 789, column: 6, scope: !7656)
!7656 = distinct !DILexicalBlock(scope: !7570, file: !3, line: 789, column: 6)
!7657 = !DILocation(line: 789, column: 9, scope: !7656)
!7658 = !DILocation(line: 789, column: 12, scope: !7656)
!7659 = !DILocation(line: 789, column: 14, scope: !7656)
!7660 = !DILocation(line: 789, column: 17, scope: !7656)
!7661 = !DILocation(line: 789, column: 20, scope: !7656)
!7662 = !DILocation(line: 789, column: 23, scope: !7656)
!7663 = !DILocation(line: 789, column: 25, scope: !7656)
!7664 = !DILocation(line: 789, column: 29, scope: !7656)
!7665 = !DILocation(line: 789, column: 32, scope: !7656)
!7666 = !DILocation(line: 789, column: 6, scope: !7570)
!7667 = !DILocation(line: 790, column: 3, scope: !7656)
!7668 = !DILocation(line: 792, column: 27, scope: !7570)
!7669 = !DILocation(line: 792, column: 36, scope: !7570)
!7670 = !DILocation(line: 792, column: 2, scope: !7570)
!7671 = !DILocation(line: 794, column: 7, scope: !7672)
!7672 = distinct !DILexicalBlock(scope: !7570, file: !3, line: 794, column: 6)
!7673 = !DILocation(line: 794, column: 13, scope: !7672)
!7674 = !DILocation(line: 794, column: 19, scope: !7672)
!7675 = !DILocation(line: 794, column: 37, scope: !7672)
!7676 = !DILocation(line: 795, column: 8, scope: !7672)
!7677 = !DILocation(line: 795, column: 14, scope: !7672)
!7678 = !DILocation(line: 795, column: 21, scope: !7672)
!7679 = !DILocation(line: 794, column: 6, scope: !7570)
!7680 = !DILocation(line: 796, column: 20, scope: !7681)
!7681 = distinct !DILexicalBlock(scope: !7672, file: !3, line: 795, column: 55)
!7682 = !DILocation(line: 796, column: 36, scope: !7681)
!7683 = !DILocation(line: 796, column: 39, scope: !7681)
!7684 = !DILocation(line: 796, column: 3, scope: !7681)
!7685 = !DILocation(line: 797, column: 20, scope: !7681)
!7686 = !DILocation(line: 797, column: 37, scope: !7681)
!7687 = !DILocation(line: 797, column: 40, scope: !7681)
!7688 = !DILocation(line: 797, column: 3, scope: !7681)
!7689 = !DILocation(line: 798, column: 20, scope: !7681)
!7690 = !DILocation(line: 798, column: 38, scope: !7681)
!7691 = !DILocation(line: 798, column: 41, scope: !7681)
!7692 = !DILocation(line: 798, column: 3, scope: !7681)
!7693 = !DILocation(line: 799, column: 14, scope: !7681)
!7694 = !DILocation(line: 799, column: 3, scope: !7681)
!7695 = !DILocation(line: 800, column: 2, scope: !7681)
!7696 = !DILocation(line: 801, column: 1, scope: !7570)
!7697 = distinct !DISubprogram(name: "alps_decode_dolphin", scope: !3, file: !3, line: 688, type: !4039, scopeLine: 690, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !407)
!7698 = !DILocalVariable(name: "f", arg: 1, scope: !7697, file: !3, line: 688, type: !4041)
!7699 = !DILocation(line: 688, column: 52, scope: !7697)
!7700 = !DILocalVariable(name: "p", arg: 2, scope: !7697, file: !3, line: 688, type: !4063)
!7701 = !DILocation(line: 688, column: 70, scope: !7697)
!7702 = !DILocalVariable(name: "psmouse", arg: 3, scope: !7697, file: !3, line: 689, type: !210)
!7703 = !DILocation(line: 689, column: 21, scope: !7697)
!7704 = !DILocalVariable(name: "palm_data", scope: !7697, file: !3, line: 691, type: !479)
!7705 = !DILocation(line: 691, column: 6, scope: !7697)
!7706 = !DILocalVariable(name: "priv", scope: !7697, file: !3, line: 692, type: !206)
!7707 = !DILocation(line: 692, column: 20, scope: !7697)
!7708 = !DILocation(line: 692, column: 27, scope: !7697)
!7709 = !DILocation(line: 692, column: 36, scope: !7697)
!7710 = !DILocation(line: 694, column: 19, scope: !7697)
!7711 = !DILocation(line: 694, column: 24, scope: !7697)
!7712 = !DILocation(line: 694, column: 17, scope: !7697)
!7713 = !DILocation(line: 694, column: 16, scope: !7697)
!7714 = !DILocation(line: 694, column: 2, scope: !7697)
!7715 = !DILocation(line: 694, column: 5, scope: !7697)
!7716 = !DILocation(line: 694, column: 14, scope: !7697)
!7717 = !DILocation(line: 695, column: 16, scope: !7697)
!7718 = !DILocation(line: 695, column: 21, scope: !7697)
!7719 = !DILocation(line: 695, column: 14, scope: !7697)
!7720 = !DILocation(line: 695, column: 13, scope: !7697)
!7721 = !DILocation(line: 695, column: 2, scope: !7697)
!7722 = !DILocation(line: 695, column: 5, scope: !7697)
!7723 = !DILocation(line: 695, column: 11, scope: !7697)
!7724 = !DILocation(line: 697, column: 7, scope: !7725)
!7725 = distinct !DILexicalBlock(scope: !7697, file: !3, line: 697, column: 6)
!7726 = !DILocation(line: 697, column: 10, scope: !7725)
!7727 = !DILocation(line: 697, column: 6, scope: !7697)
!7728 = !DILocation(line: 698, column: 15, scope: !7729)
!7729 = distinct !DILexicalBlock(scope: !7725, file: !3, line: 697, column: 17)
!7730 = !DILocation(line: 698, column: 20, scope: !7729)
!7731 = !DILocation(line: 698, column: 32, scope: !7729)
!7732 = !DILocation(line: 698, column: 37, scope: !7729)
!7733 = !DILocation(line: 698, column: 45, scope: !7729)
!7734 = !DILocation(line: 698, column: 28, scope: !7729)
!7735 = !DILocation(line: 698, column: 13, scope: !7729)
!7736 = !DILocation(line: 698, column: 3, scope: !7729)
!7737 = !DILocation(line: 698, column: 6, scope: !7729)
!7738 = !DILocation(line: 698, column: 9, scope: !7729)
!7739 = !DILocation(line: 698, column: 11, scope: !7729)
!7740 = !DILocation(line: 699, column: 15, scope: !7729)
!7741 = !DILocation(line: 699, column: 20, scope: !7729)
!7742 = !DILocation(line: 699, column: 32, scope: !7729)
!7743 = !DILocation(line: 699, column: 37, scope: !7729)
!7744 = !DILocation(line: 699, column: 45, scope: !7729)
!7745 = !DILocation(line: 699, column: 28, scope: !7729)
!7746 = !DILocation(line: 699, column: 13, scope: !7729)
!7747 = !DILocation(line: 699, column: 3, scope: !7729)
!7748 = !DILocation(line: 699, column: 6, scope: !7729)
!7749 = !DILocation(line: 699, column: 9, scope: !7729)
!7750 = !DILocation(line: 699, column: 11, scope: !7729)
!7751 = !DILocation(line: 700, column: 18, scope: !7729)
!7752 = !DILocation(line: 700, column: 23, scope: !7729)
!7753 = !DILocation(line: 700, column: 17, scope: !7729)
!7754 = !DILocation(line: 700, column: 34, scope: !7729)
!7755 = !DILocation(line: 700, column: 39, scope: !7729)
!7756 = !DILocation(line: 700, column: 3, scope: !7729)
!7757 = !DILocation(line: 700, column: 6, scope: !7729)
!7758 = !DILocation(line: 700, column: 15, scope: !7729)
!7759 = !DILocation(line: 701, column: 26, scope: !7729)
!7760 = !DILocation(line: 701, column: 29, scope: !7729)
!7761 = !DILocation(line: 701, column: 3, scope: !7729)
!7762 = !DILocation(line: 702, column: 2, scope: !7729)
!7763 = !DILocation(line: 703, column: 18, scope: !7764)
!7764 = distinct !DILexicalBlock(scope: !7725, file: !3, line: 702, column: 9)
!7765 = !DILocation(line: 703, column: 23, scope: !7764)
!7766 = !DILocation(line: 703, column: 30, scope: !7764)
!7767 = !DILocation(line: 704, column: 9, scope: !7764)
!7768 = !DILocation(line: 704, column: 14, scope: !7764)
!7769 = !DILocation(line: 704, column: 22, scope: !7764)
!7770 = !DILocation(line: 703, column: 35, scope: !7764)
!7771 = !DILocation(line: 703, column: 3, scope: !7764)
!7772 = !DILocation(line: 703, column: 6, scope: !7764)
!7773 = !DILocation(line: 703, column: 14, scope: !7764)
!7774 = !DILocation(line: 706, column: 16, scope: !7764)
!7775 = !DILocation(line: 706, column: 21, scope: !7764)
!7776 = !DILocation(line: 707, column: 10, scope: !7764)
!7777 = !DILocation(line: 707, column: 15, scope: !7764)
!7778 = !DILocation(line: 707, column: 23, scope: !7764)
!7779 = !DILocation(line: 706, column: 29, scope: !7764)
!7780 = !DILocation(line: 708, column: 10, scope: !7764)
!7781 = !DILocation(line: 708, column: 15, scope: !7764)
!7782 = !DILocation(line: 708, column: 23, scope: !7764)
!7783 = !DILocation(line: 707, column: 29, scope: !7764)
!7784 = !DILocation(line: 709, column: 10, scope: !7764)
!7785 = !DILocation(line: 709, column: 15, scope: !7764)
!7786 = !DILocation(line: 709, column: 23, scope: !7764)
!7787 = !DILocation(line: 708, column: 30, scope: !7764)
!7788 = !DILocation(line: 710, column: 10, scope: !7764)
!7789 = !DILocation(line: 710, column: 15, scope: !7764)
!7790 = !DILocation(line: 710, column: 23, scope: !7764)
!7791 = !DILocation(line: 709, column: 30, scope: !7764)
!7792 = !DILocation(line: 706, column: 15, scope: !7764)
!7793 = !DILocation(line: 711, column: 15, scope: !7764)
!7794 = !DILocation(line: 711, column: 10, scope: !7764)
!7795 = !DILocation(line: 711, column: 20, scope: !7764)
!7796 = !DILocation(line: 711, column: 28, scope: !7764)
!7797 = !DILocation(line: 710, column: 30, scope: !7764)
!7798 = !DILocation(line: 712, column: 15, scope: !7764)
!7799 = !DILocation(line: 712, column: 10, scope: !7764)
!7800 = !DILocation(line: 712, column: 20, scope: !7764)
!7801 = !DILocation(line: 712, column: 28, scope: !7764)
!7802 = !DILocation(line: 711, column: 35, scope: !7764)
!7803 = !DILocation(line: 706, column: 13, scope: !7764)
!7804 = !DILocation(line: 715, column: 14, scope: !7764)
!7805 = !DILocation(line: 715, column: 27, scope: !7764)
!7806 = !DILocation(line: 715, column: 45, scope: !7764)
!7807 = !DILocation(line: 715, column: 24, scope: !7764)
!7808 = !DILocation(line: 715, column: 3, scope: !7764)
!7809 = !DILocation(line: 715, column: 6, scope: !7764)
!7810 = !DILocation(line: 715, column: 12, scope: !7764)
!7811 = !DILocation(line: 718, column: 15, scope: !7764)
!7812 = !DILocation(line: 718, column: 28, scope: !7764)
!7813 = !DILocation(line: 718, column: 34, scope: !7764)
!7814 = !DILocation(line: 718, column: 25, scope: !7764)
!7815 = !DILocation(line: 719, column: 8, scope: !7764)
!7816 = !DILocation(line: 719, column: 26, scope: !7764)
!7817 = !DILocation(line: 718, column: 42, scope: !7764)
!7818 = !DILocation(line: 718, column: 14, scope: !7764)
!7819 = !DILocation(line: 718, column: 3, scope: !7764)
!7820 = !DILocation(line: 718, column: 6, scope: !7764)
!7821 = !DILocation(line: 718, column: 12, scope: !7764)
!7822 = !DILocation(line: 722, column: 2, scope: !7697)
!7823 = distinct !DISubprogram(name: "alps_dolphin_get_device_area", scope: !3, file: !3, line: 2601, type: !5020, scopeLine: 2603, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !407)
!7824 = !DILocalVariable(name: "psmouse", arg: 1, scope: !7823, file: !3, line: 2601, type: !210)
!7825 = !DILocation(line: 2601, column: 57, scope: !7823)
!7826 = !DILocalVariable(name: "priv", arg: 2, scope: !7823, file: !3, line: 2602, type: !206)
!7827 = !DILocation(line: 2602, column: 24, scope: !7823)
!7828 = !DILocalVariable(name: "ps2dev", scope: !7823, file: !3, line: 2604, type: !5945)
!7829 = !DILocation(line: 2604, column: 17, scope: !7823)
!7830 = !DILocation(line: 2604, column: 27, scope: !7823)
!7831 = !DILocation(line: 2604, column: 36, scope: !7823)
!7832 = !DILocalVariable(name: "param", scope: !7823, file: !3, line: 2605, type: !5030)
!7833 = !DILocation(line: 2605, column: 16, scope: !7823)
!7834 = !DILocalVariable(name: "num_x_electrode", scope: !7823, file: !3, line: 2606, type: !262)
!7835 = !DILocation(line: 2606, column: 6, scope: !7823)
!7836 = !DILocalVariable(name: "num_y_electrode", scope: !7823, file: !3, line: 2606, type: !262)
!7837 = !DILocation(line: 2606, column: 23, scope: !7823)
!7838 = !DILocation(line: 2608, column: 30, scope: !7839)
!7839 = distinct !DILexicalBlock(scope: !7823, file: !3, line: 2608, column: 6)
!7840 = !DILocation(line: 2608, column: 6, scope: !7839)
!7841 = !DILocation(line: 2608, column: 6, scope: !7823)
!7842 = !DILocation(line: 2609, column: 3, scope: !7839)
!7843 = !DILocation(line: 2611, column: 2, scope: !7823)
!7844 = !DILocation(line: 2611, column: 11, scope: !7823)
!7845 = !DILocation(line: 2612, column: 18, scope: !7846)
!7846 = distinct !DILexicalBlock(scope: !7823, file: !3, line: 2612, column: 6)
!7847 = !DILocation(line: 2612, column: 6, scope: !7846)
!7848 = !DILocation(line: 2612, column: 56, scope: !7846)
!7849 = !DILocation(line: 2613, column: 18, scope: !7846)
!7850 = !DILocation(line: 2613, column: 6, scope: !7846)
!7851 = !DILocation(line: 2613, column: 53, scope: !7846)
!7852 = !DILocation(line: 2614, column: 18, scope: !7846)
!7853 = !DILocation(line: 2614, column: 6, scope: !7846)
!7854 = !DILocation(line: 2614, column: 53, scope: !7846)
!7855 = !DILocation(line: 2615, column: 18, scope: !7846)
!7856 = !DILocation(line: 2615, column: 27, scope: !7846)
!7857 = !DILocation(line: 2615, column: 6, scope: !7846)
!7858 = !DILocation(line: 2615, column: 58, scope: !7846)
!7859 = !DILocation(line: 2616, column: 18, scope: !7846)
!7860 = !DILocation(line: 2616, column: 27, scope: !7846)
!7861 = !DILocation(line: 2616, column: 6, scope: !7846)
!7862 = !DILocation(line: 2612, column: 6, scope: !7823)
!7863 = !DILocation(line: 2617, column: 3, scope: !7846)
!7864 = !DILocation(line: 2619, column: 18, scope: !7865)
!7865 = distinct !DILexicalBlock(scope: !7823, file: !3, line: 2619, column: 6)
!7866 = !DILocation(line: 2619, column: 26, scope: !7865)
!7867 = !DILocation(line: 2619, column: 6, scope: !7865)
!7868 = !DILocation(line: 2619, column: 6, scope: !7823)
!7869 = !DILocation(line: 2620, column: 3, scope: !7865)
!7870 = !DILocation(line: 2634, column: 47, scope: !7823)
!7871 = !DILocation(line: 2634, column: 56, scope: !7823)
!7872 = !DILocation(line: 2634, column: 44, scope: !7823)
!7873 = !DILocation(line: 2634, column: 18, scope: !7823)
!7874 = !DILocation(line: 2635, column: 48, scope: !7823)
!7875 = !DILocation(line: 2635, column: 57, scope: !7823)
!7876 = !DILocation(line: 2635, column: 63, scope: !7823)
!7877 = !DILocation(line: 2635, column: 44, scope: !7823)
!7878 = !DILocation(line: 2635, column: 18, scope: !7823)
!7879 = !DILocation(line: 2636, column: 17, scope: !7823)
!7880 = !DILocation(line: 2636, column: 2, scope: !7823)
!7881 = !DILocation(line: 2636, column: 8, scope: !7823)
!7882 = !DILocation(line: 2636, column: 15, scope: !7823)
!7883 = !DILocation(line: 2637, column: 17, scope: !7823)
!7884 = !DILocation(line: 2637, column: 2, scope: !7823)
!7885 = !DILocation(line: 2637, column: 8, scope: !7823)
!7886 = !DILocation(line: 2637, column: 15, scope: !7823)
!7887 = !DILocation(line: 2638, column: 17, scope: !7823)
!7888 = !DILocation(line: 2638, column: 33, scope: !7823)
!7889 = !DILocation(line: 2638, column: 38, scope: !7823)
!7890 = !DILocation(line: 2638, column: 2, scope: !7823)
!7891 = !DILocation(line: 2638, column: 8, scope: !7823)
!7892 = !DILocation(line: 2638, column: 14, scope: !7823)
!7893 = !DILocation(line: 2639, column: 17, scope: !7823)
!7894 = !DILocation(line: 2639, column: 33, scope: !7823)
!7895 = !DILocation(line: 2639, column: 38, scope: !7823)
!7896 = !DILocation(line: 2639, column: 2, scope: !7823)
!7897 = !DILocation(line: 2639, column: 8, scope: !7823)
!7898 = !DILocation(line: 2639, column: 14, scope: !7823)
!7899 = !DILocation(line: 2641, column: 29, scope: !7900)
!7900 = distinct !DILexicalBlock(scope: !7823, file: !3, line: 2641, column: 6)
!7901 = !DILocation(line: 2641, column: 6, scope: !7900)
!7902 = !DILocation(line: 2641, column: 6, scope: !7823)
!7903 = !DILocation(line: 2642, column: 3, scope: !7900)
!7904 = !DILocation(line: 2644, column: 2, scope: !7823)
!7905 = !DILocation(line: 2645, column: 1, scope: !7823)
!7906 = distinct !DISubprogram(name: "alps_hw_init_v6", scope: !3, file: !3, line: 2065, type: !3962, scopeLine: 2066, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !407)
!7907 = !DILocalVariable(name: "psmouse", arg: 1, scope: !7906, file: !3, line: 2065, type: !210)
!7908 = !DILocation(line: 2065, column: 44, scope: !7906)
!7909 = !DILocalVariable(name: "ret", scope: !7906, file: !3, line: 2067, type: !262)
!7910 = !DILocation(line: 2067, column: 6, scope: !7906)
!7911 = !DILocation(line: 2070, column: 31, scope: !7912)
!7912 = distinct !DILexicalBlock(scope: !7906, file: !3, line: 2070, column: 6)
!7913 = !DILocation(line: 2070, column: 6, scope: !7912)
!7914 = !DILocation(line: 2070, column: 6, scope: !7906)
!7915 = !DILocation(line: 2071, column: 3, scope: !7912)
!7916 = !DILocation(line: 2073, column: 50, scope: !7906)
!7917 = !DILocation(line: 2073, column: 8, scope: !7906)
!7918 = !DILocation(line: 2073, column: 6, scope: !7906)
!7919 = !DILocation(line: 2075, column: 31, scope: !7920)
!7920 = distinct !DILexicalBlock(scope: !7906, file: !3, line: 2075, column: 6)
!7921 = !DILocation(line: 2075, column: 6, scope: !7920)
!7922 = !DILocation(line: 2075, column: 6, scope: !7906)
!7923 = !DILocation(line: 2076, column: 3, scope: !7920)
!7924 = !DILocation(line: 2078, column: 6, scope: !7925)
!7925 = distinct !DILexicalBlock(scope: !7906, file: !3, line: 2078, column: 6)
!7926 = !DILocation(line: 2078, column: 6, scope: !7906)
!7927 = !DILocation(line: 2079, column: 10, scope: !7925)
!7928 = !DILocation(line: 2079, column: 3, scope: !7925)
!7929 = !DILocation(line: 2081, column: 28, scope: !7930)
!7930 = distinct !DILexicalBlock(scope: !7906, file: !3, line: 2081, column: 6)
!7931 = !DILocation(line: 2081, column: 6, scope: !7930)
!7932 = !DILocation(line: 2081, column: 6, scope: !7906)
!7933 = !DILocation(line: 2082, column: 3, scope: !7934)
!7934 = distinct !DILexicalBlock(scope: !7930, file: !3, line: 2081, column: 38)
!7935 = !DILocation(line: 2083, column: 3, scope: !7934)
!7936 = !DILocation(line: 2086, column: 2, scope: !7906)
!7937 = !DILocation(line: 2087, column: 1, scope: !7906)
!7938 = distinct !DISubprogram(name: "alps_process_packet_v6", scope: !3, file: !3, line: 823, type: !4003, scopeLine: 824, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !407)
!7939 = !DILocalVariable(name: "psmouse", arg: 1, scope: !7938, file: !3, line: 823, type: !210)
!7940 = !DILocation(line: 823, column: 52, scope: !7938)
!7941 = !DILocalVariable(name: "priv", scope: !7938, file: !3, line: 825, type: !206)
!7942 = !DILocation(line: 825, column: 20, scope: !7938)
!7943 = !DILocation(line: 825, column: 27, scope: !7938)
!7944 = !DILocation(line: 825, column: 36, scope: !7938)
!7945 = !DILocalVariable(name: "packet", scope: !7938, file: !3, line: 826, type: !4063)
!7946 = !DILocation(line: 826, column: 17, scope: !7938)
!7947 = !DILocation(line: 826, column: 26, scope: !7938)
!7948 = !DILocation(line: 826, column: 35, scope: !7938)
!7949 = !DILocalVariable(name: "dev", scope: !7938, file: !3, line: 827, type: !215)
!7950 = !DILocation(line: 827, column: 20, scope: !7938)
!7951 = !DILocation(line: 827, column: 26, scope: !7938)
!7952 = !DILocation(line: 827, column: 35, scope: !7938)
!7953 = !DILocalVariable(name: "dev2", scope: !7938, file: !3, line: 828, type: !215)
!7954 = !DILocation(line: 828, column: 20, scope: !7938)
!7955 = !DILocation(line: 828, column: 27, scope: !7938)
!7956 = !DILocation(line: 828, column: 33, scope: !7938)
!7957 = !DILocalVariable(name: "x", scope: !7938, file: !3, line: 829, type: !262)
!7958 = !DILocation(line: 829, column: 6, scope: !7938)
!7959 = !DILocalVariable(name: "y", scope: !7938, file: !3, line: 829, type: !262)
!7960 = !DILocation(line: 829, column: 9, scope: !7938)
!7961 = !DILocalVariable(name: "z", scope: !7938, file: !3, line: 829, type: !262)
!7962 = !DILocation(line: 829, column: 12, scope: !7938)
!7963 = !DILocation(line: 837, column: 6, scope: !7964)
!7964 = distinct !DILexicalBlock(scope: !7938, file: !3, line: 837, column: 6)
!7965 = !DILocation(line: 837, column: 16, scope: !7964)
!7966 = !DILocation(line: 837, column: 6, scope: !7938)
!7967 = !DILocation(line: 839, column: 9, scope: !7968)
!7968 = distinct !DILexicalBlock(scope: !7969, file: !3, line: 839, column: 7)
!7969 = distinct !DILexicalBlock(scope: !7964, file: !3, line: 837, column: 25)
!7970 = !DILocation(line: 839, column: 15, scope: !7968)
!7971 = !DILocation(line: 839, column: 21, scope: !7968)
!7972 = !DILocation(line: 839, column: 7, scope: !7969)
!7973 = !DILocation(line: 840, column: 4, scope: !7974)
!7974 = distinct !DILexicalBlock(scope: !7968, file: !3, line: 839, column: 40)
!7975 = !DILocation(line: 842, column: 4, scope: !7974)
!7976 = !DILocation(line: 846, column: 7, scope: !7969)
!7977 = !DILocation(line: 846, column: 21, scope: !7969)
!7978 = !DILocation(line: 846, column: 31, scope: !7969)
!7979 = !DILocation(line: 846, column: 39, scope: !7969)
!7980 = !DILocation(line: 846, column: 17, scope: !7969)
!7981 = !DILocation(line: 846, column: 5, scope: !7969)
!7982 = !DILocation(line: 847, column: 7, scope: !7969)
!7983 = !DILocation(line: 847, column: 21, scope: !7969)
!7984 = !DILocation(line: 847, column: 31, scope: !7969)
!7985 = !DILocation(line: 847, column: 39, scope: !7969)
!7986 = !DILocation(line: 847, column: 17, scope: !7969)
!7987 = !DILocation(line: 847, column: 5, scope: !7969)
!7988 = !DILocation(line: 848, column: 7, scope: !7969)
!7989 = !DILocation(line: 848, column: 5, scope: !7969)
!7990 = !DILocation(line: 851, column: 7, scope: !7991)
!7991 = distinct !DILexicalBlock(scope: !7969, file: !3, line: 851, column: 7)
!7992 = !DILocation(line: 851, column: 9, scope: !7991)
!7993 = !DILocation(line: 851, column: 17, scope: !7991)
!7994 = !DILocation(line: 851, column: 20, scope: !7991)
!7995 = !DILocation(line: 851, column: 22, scope: !7991)
!7996 = !DILocation(line: 851, column: 30, scope: !7991)
!7997 = !DILocation(line: 851, column: 33, scope: !7991)
!7998 = !DILocation(line: 851, column: 35, scope: !7991)
!7999 = !DILocation(line: 851, column: 7, scope: !7969)
!8000 = !DILocation(line: 852, column: 14, scope: !7991)
!8001 = !DILocation(line: 852, column: 10, scope: !7991)
!8002 = !DILocation(line: 852, column: 6, scope: !7991)
!8003 = !DILocation(line: 852, column: 4, scope: !7991)
!8004 = !DILocation(line: 855, column: 20, scope: !7969)
!8005 = !DILocation(line: 855, column: 39, scope: !7969)
!8006 = !DILocation(line: 855, column: 33, scope: !7969)
!8007 = !DILocation(line: 855, column: 41, scope: !7969)
!8008 = !DILocation(line: 855, column: 3, scope: !7969)
!8009 = !DILocation(line: 856, column: 20, scope: !7969)
!8010 = !DILocation(line: 856, column: 41, scope: !7969)
!8011 = !DILocation(line: 856, column: 35, scope: !7969)
!8012 = !DILocation(line: 856, column: 43, scope: !7969)
!8013 = !DILocation(line: 856, column: 33, scope: !7969)
!8014 = !DILocation(line: 856, column: 3, scope: !7969)
!8015 = !DILocation(line: 858, column: 35, scope: !7969)
!8016 = !DILocation(line: 858, column: 41, scope: !7969)
!8017 = !DILocation(line: 858, column: 3, scope: !7969)
!8018 = !DILocation(line: 860, column: 14, scope: !7969)
!8019 = !DILocation(line: 860, column: 3, scope: !7969)
!8020 = !DILocation(line: 861, column: 3, scope: !7969)
!8021 = !DILocation(line: 865, column: 6, scope: !7938)
!8022 = !DILocation(line: 865, column: 20, scope: !7938)
!8023 = !DILocation(line: 865, column: 30, scope: !7938)
!8024 = !DILocation(line: 865, column: 38, scope: !7938)
!8025 = !DILocation(line: 865, column: 16, scope: !7938)
!8026 = !DILocation(line: 865, column: 4, scope: !7938)
!8027 = !DILocation(line: 866, column: 6, scope: !7938)
!8028 = !DILocation(line: 866, column: 20, scope: !7938)
!8029 = !DILocation(line: 866, column: 30, scope: !7938)
!8030 = !DILocation(line: 866, column: 38, scope: !7938)
!8031 = !DILocation(line: 866, column: 16, scope: !7938)
!8032 = !DILocation(line: 866, column: 4, scope: !7938)
!8033 = !DILocation(line: 867, column: 6, scope: !7938)
!8034 = !DILocation(line: 867, column: 4, scope: !7938)
!8035 = !DILocation(line: 869, column: 6, scope: !8036)
!8036 = distinct !DILexicalBlock(scope: !7938, file: !3, line: 869, column: 6)
!8037 = !DILocation(line: 869, column: 8, scope: !8036)
!8038 = !DILocation(line: 869, column: 6, scope: !7938)
!8039 = !DILocation(line: 870, column: 20, scope: !8036)
!8040 = !DILocation(line: 870, column: 3, scope: !8036)
!8041 = !DILocation(line: 871, column: 6, scope: !8042)
!8042 = distinct !DILexicalBlock(scope: !7938, file: !3, line: 871, column: 6)
!8043 = !DILocation(line: 871, column: 8, scope: !8042)
!8044 = !DILocation(line: 871, column: 6, scope: !7938)
!8045 = !DILocation(line: 872, column: 20, scope: !8042)
!8046 = !DILocation(line: 872, column: 3, scope: !8042)
!8047 = !DILocation(line: 874, column: 6, scope: !8048)
!8048 = distinct !DILexicalBlock(scope: !7938, file: !3, line: 874, column: 6)
!8049 = !DILocation(line: 874, column: 8, scope: !8048)
!8050 = !DILocation(line: 874, column: 6, scope: !7938)
!8051 = !DILocation(line: 875, column: 20, scope: !8052)
!8052 = distinct !DILexicalBlock(scope: !8048, file: !3, line: 874, column: 13)
!8053 = !DILocation(line: 875, column: 32, scope: !8052)
!8054 = !DILocation(line: 875, column: 3, scope: !8052)
!8055 = !DILocation(line: 876, column: 20, scope: !8052)
!8056 = !DILocation(line: 876, column: 32, scope: !8052)
!8057 = !DILocation(line: 876, column: 3, scope: !8052)
!8058 = !DILocation(line: 877, column: 2, scope: !8052)
!8059 = !DILocation(line: 879, column: 19, scope: !7938)
!8060 = !DILocation(line: 879, column: 38, scope: !7938)
!8061 = !DILocation(line: 879, column: 2, scope: !7938)
!8062 = !DILocation(line: 880, column: 19, scope: !7938)
!8063 = !DILocation(line: 880, column: 41, scope: !7938)
!8064 = !DILocation(line: 880, column: 43, scope: !7938)
!8065 = !DILocation(line: 880, column: 2, scope: !7938)
!8066 = !DILocation(line: 883, column: 2, scope: !7938)
!8067 = !DILocation(line: 883, column: 12, scope: !7938)
!8068 = !DILocation(line: 884, column: 34, scope: !7938)
!8069 = !DILocation(line: 884, column: 40, scope: !7938)
!8070 = !DILocation(line: 884, column: 2, scope: !7938)
!8071 = !DILocation(line: 886, column: 13, scope: !7938)
!8072 = !DILocation(line: 886, column: 2, scope: !7938)
!8073 = !DILocation(line: 887, column: 1, scope: !7938)
!8074 = distinct !DISubprogram(name: "alps_hw_init_v7", scope: !3, file: !3, line: 2664, type: !3962, scopeLine: 2665, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !407)
!8075 = !DILocalVariable(name: "psmouse", arg: 1, scope: !8074, file: !3, line: 2664, type: !210)
!8076 = !DILocation(line: 2664, column: 44, scope: !8074)
!8077 = !DILocalVariable(name: "ps2dev", scope: !8074, file: !3, line: 2666, type: !5945)
!8078 = !DILocation(line: 2666, column: 17, scope: !8074)
!8079 = !DILocation(line: 2666, column: 27, scope: !8074)
!8080 = !DILocation(line: 2666, column: 36, scope: !8074)
!8081 = !DILocalVariable(name: "reg_val", scope: !8074, file: !3, line: 2667, type: !262)
!8082 = !DILocation(line: 2667, column: 6, scope: !8074)
!8083 = !DILocalVariable(name: "ret", scope: !8074, file: !3, line: 2667, type: !262)
!8084 = !DILocation(line: 2667, column: 15, scope: !8074)
!8085 = !DILocation(line: 2669, column: 30, scope: !8086)
!8086 = distinct !DILexicalBlock(scope: !8074, file: !3, line: 2669, column: 6)
!8087 = !DILocation(line: 2669, column: 6, scope: !8086)
!8088 = !DILocation(line: 2669, column: 39, scope: !8086)
!8089 = !DILocation(line: 2670, column: 33, scope: !8086)
!8090 = !DILocation(line: 2670, column: 6, scope: !8086)
!8091 = !DILocation(line: 2670, column: 50, scope: !8086)
!8092 = !DILocation(line: 2669, column: 6, scope: !8074)
!8093 = !DILocation(line: 2671, column: 3, scope: !8086)
!8094 = !DILocation(line: 2673, column: 32, scope: !8095)
!8095 = distinct !DILexicalBlock(scope: !8074, file: !3, line: 2673, column: 6)
!8096 = !DILocation(line: 2673, column: 6, scope: !8095)
!8097 = !DILocation(line: 2673, column: 6, scope: !8074)
!8098 = !DILocation(line: 2674, column: 3, scope: !8095)
!8099 = !DILocation(line: 2676, column: 34, scope: !8100)
!8100 = distinct !DILexicalBlock(scope: !8074, file: !3, line: 2676, column: 6)
!8101 = !DILocation(line: 2676, column: 6, scope: !8100)
!8102 = !DILocation(line: 2676, column: 6, scope: !8074)
!8103 = !DILocation(line: 2677, column: 3, scope: !8100)
!8104 = !DILocation(line: 2679, column: 39, scope: !8074)
!8105 = !DILocation(line: 2679, column: 12, scope: !8074)
!8106 = !DILocation(line: 2679, column: 10, scope: !8074)
!8107 = !DILocation(line: 2680, column: 6, scope: !8108)
!8108 = distinct !DILexicalBlock(scope: !8074, file: !3, line: 2680, column: 6)
!8109 = !DILocation(line: 2680, column: 14, scope: !8108)
!8110 = !DILocation(line: 2680, column: 6, scope: !8074)
!8111 = !DILocation(line: 2681, column: 3, scope: !8108)
!8112 = !DILocation(line: 2682, column: 36, scope: !8113)
!8113 = distinct !DILexicalBlock(scope: !8074, file: !3, line: 2682, column: 6)
!8114 = !DILocation(line: 2682, column: 45, scope: !8113)
!8115 = !DILocation(line: 2682, column: 53, scope: !8113)
!8116 = !DILocation(line: 2682, column: 6, scope: !8113)
!8117 = !DILocation(line: 2682, column: 6, scope: !8074)
!8118 = !DILocation(line: 2683, column: 3, scope: !8113)
!8119 = !DILocation(line: 2685, column: 25, scope: !8074)
!8120 = !DILocation(line: 2685, column: 2, scope: !8074)
!8121 = !DILocation(line: 2686, column: 21, scope: !8074)
!8122 = !DILocation(line: 2686, column: 9, scope: !8074)
!8123 = !DILocation(line: 2686, column: 2, scope: !8074)
!8124 = !DILabel(scope: !8074, name: "error", file: !3, line: 2688)
!8125 = !DILocation(line: 2688, column: 1, scope: !8074)
!8126 = !DILocation(line: 2689, column: 25, scope: !8074)
!8127 = !DILocation(line: 2689, column: 2, scope: !8074)
!8128 = !DILocation(line: 2690, column: 9, scope: !8074)
!8129 = !DILocation(line: 2690, column: 2, scope: !8074)
!8130 = !DILocation(line: 2691, column: 1, scope: !8074)
!8131 = distinct !DISubprogram(name: "alps_process_packet_v7", scope: !3, file: !3, line: 1138, type: !4003, scopeLine: 1139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !407)
!8132 = !DILocalVariable(name: "psmouse", arg: 1, scope: !8131, file: !3, line: 1138, type: !210)
!8133 = !DILocation(line: 1138, column: 52, scope: !8131)
!8134 = !DILocalVariable(name: "packet", scope: !8131, file: !3, line: 1140, type: !4063)
!8135 = !DILocation(line: 1140, column: 17, scope: !8131)
!8136 = !DILocation(line: 1140, column: 26, scope: !8131)
!8137 = !DILocation(line: 1140, column: 35, scope: !8131)
!8138 = !DILocation(line: 1142, column: 6, scope: !8139)
!8139 = distinct !DILexicalBlock(scope: !8131, file: !3, line: 1142, column: 6)
!8140 = !DILocation(line: 1142, column: 16, scope: !8139)
!8141 = !DILocation(line: 1142, column: 24, scope: !8139)
!8142 = !DILocation(line: 1142, column: 28, scope: !8139)
!8143 = !DILocation(line: 1142, column: 38, scope: !8139)
!8144 = !DILocation(line: 1142, column: 46, scope: !8139)
!8145 = !DILocation(line: 1142, column: 6, scope: !8131)
!8146 = !DILocation(line: 1143, column: 37, scope: !8139)
!8147 = !DILocation(line: 1143, column: 3, scope: !8139)
!8148 = !DILocation(line: 1145, column: 35, scope: !8139)
!8149 = !DILocation(line: 1145, column: 3, scope: !8139)
!8150 = !DILocation(line: 1146, column: 1, scope: !8131)
!8151 = distinct !DISubprogram(name: "alps_decode_packet_v7", scope: !3, file: !3, line: 1026, type: !4039, scopeLine: 1029, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !407)
!8152 = !DILocalVariable(name: "f", arg: 1, scope: !8151, file: !3, line: 1026, type: !4041)
!8153 = !DILocation(line: 1026, column: 54, scope: !8151)
!8154 = !DILocalVariable(name: "p", arg: 2, scope: !8151, file: !3, line: 1027, type: !4063)
!8155 = !DILocation(line: 1027, column: 22, scope: !8151)
!8156 = !DILocalVariable(name: "psmouse", arg: 3, scope: !8151, file: !3, line: 1028, type: !210)
!8157 = !DILocation(line: 1028, column: 23, scope: !8151)
!8158 = !DILocalVariable(name: "priv", scope: !8151, file: !3, line: 1030, type: !206)
!8159 = !DILocation(line: 1030, column: 20, scope: !8151)
!8160 = !DILocation(line: 1030, column: 27, scope: !8151)
!8161 = !DILocation(line: 1030, column: 36, scope: !8151)
!8162 = !DILocalVariable(name: "pkt_id", scope: !8151, file: !3, line: 1031, type: !269)
!8163 = !DILocation(line: 1031, column: 16, scope: !8151)
!8164 = !DILocation(line: 1033, column: 33, scope: !8151)
!8165 = !DILocation(line: 1033, column: 11, scope: !8151)
!8166 = !DILocation(line: 1033, column: 9, scope: !8151)
!8167 = !DILocation(line: 1034, column: 6, scope: !8168)
!8168 = distinct !DILexicalBlock(scope: !8151, file: !3, line: 1034, column: 6)
!8169 = !DILocation(line: 1034, column: 13, scope: !8168)
!8170 = !DILocation(line: 1034, column: 6, scope: !8151)
!8171 = !DILocation(line: 1035, column: 3, scope: !8168)
!8172 = !DILocation(line: 1036, column: 6, scope: !8173)
!8173 = distinct !DILexicalBlock(scope: !8151, file: !3, line: 1036, column: 6)
!8174 = !DILocation(line: 1036, column: 13, scope: !8173)
!8175 = !DILocation(line: 1036, column: 6, scope: !8151)
!8176 = !DILocation(line: 1037, column: 3, scope: !8173)
!8177 = !DILocation(line: 1056, column: 6, scope: !8178)
!8178 = distinct !DILexicalBlock(scope: !8151, file: !3, line: 1056, column: 6)
!8179 = !DILocation(line: 1056, column: 13, scope: !8178)
!8180 = !DILocation(line: 1056, column: 6, scope: !8151)
!8181 = !DILocation(line: 1057, column: 3, scope: !8178)
!8182 = !DILocation(line: 1059, column: 32, scope: !8151)
!8183 = !DILocation(line: 1059, column: 35, scope: !8151)
!8184 = !DILocation(line: 1059, column: 39, scope: !8151)
!8185 = !DILocation(line: 1059, column: 42, scope: !8151)
!8186 = !DILocation(line: 1059, column: 2, scope: !8151)
!8187 = !DILocation(line: 1061, column: 6, scope: !8188)
!8188 = distinct !DILexicalBlock(scope: !8151, file: !3, line: 1061, column: 6)
!8189 = !DILocation(line: 1061, column: 13, scope: !8188)
!8190 = !DILocation(line: 1061, column: 6, scope: !8151)
!8191 = !DILocation(line: 1062, column: 34, scope: !8188)
!8192 = !DILocation(line: 1062, column: 37, scope: !8188)
!8193 = !DILocation(line: 1062, column: 16, scope: !8188)
!8194 = !DILocation(line: 1062, column: 3, scope: !8188)
!8195 = !DILocation(line: 1062, column: 6, scope: !8188)
!8196 = !DILocation(line: 1062, column: 14, scope: !8188)
!8197 = !DILocation(line: 1064, column: 21, scope: !8188)
!8198 = !DILocation(line: 1064, column: 26, scope: !8188)
!8199 = !DILocation(line: 1064, column: 18, scope: !8188)
!8200 = !DILocation(line: 1064, column: 3, scope: !8188)
!8201 = !DILocation(line: 1064, column: 6, scope: !8188)
!8202 = !DILocation(line: 1064, column: 14, scope: !8188)
!8203 = !DILocation(line: 1066, column: 13, scope: !8151)
!8204 = !DILocation(line: 1066, column: 18, scope: !8151)
!8205 = !DILocation(line: 1066, column: 26, scope: !8151)
!8206 = !DILocation(line: 1066, column: 2, scope: !8151)
!8207 = !DILocation(line: 1066, column: 5, scope: !8151)
!8208 = !DILocation(line: 1066, column: 10, scope: !8151)
!8209 = !DILocation(line: 1067, column: 6, scope: !8210)
!8210 = distinct !DILexicalBlock(scope: !8151, file: !3, line: 1067, column: 6)
!8211 = !DILocation(line: 1067, column: 12, scope: !8210)
!8212 = !DILocation(line: 1067, column: 18, scope: !8210)
!8213 = !DILocation(line: 1067, column: 6, scope: !8151)
!8214 = !DILocation(line: 1068, column: 7, scope: !8215)
!8215 = distinct !DILexicalBlock(scope: !8216, file: !3, line: 1068, column: 7)
!8216 = distinct !DILexicalBlock(scope: !8210, file: !3, line: 1067, column: 36)
!8217 = !DILocation(line: 1068, column: 12, scope: !8215)
!8218 = !DILocation(line: 1068, column: 7, scope: !8216)
!8219 = !DILocation(line: 1069, column: 4, scope: !8215)
!8220 = !DILocation(line: 1069, column: 7, scope: !8215)
!8221 = !DILocation(line: 1069, column: 14, scope: !8215)
!8222 = !DILocation(line: 1070, column: 7, scope: !8223)
!8223 = distinct !DILexicalBlock(scope: !8216, file: !3, line: 1070, column: 7)
!8224 = !DILocation(line: 1070, column: 12, scope: !8223)
!8225 = !DILocation(line: 1070, column: 7, scope: !8216)
!8226 = !DILocation(line: 1071, column: 4, scope: !8223)
!8227 = !DILocation(line: 1071, column: 7, scope: !8223)
!8228 = !DILocation(line: 1071, column: 14, scope: !8223)
!8229 = !DILocation(line: 1072, column: 2, scope: !8216)
!8230 = !DILocation(line: 1073, column: 15, scope: !8231)
!8231 = distinct !DILexicalBlock(scope: !8210, file: !3, line: 1072, column: 9)
!8232 = !DILocation(line: 1073, column: 20, scope: !8231)
!8233 = !DILocation(line: 1073, column: 28, scope: !8231)
!8234 = !DILocation(line: 1073, column: 3, scope: !8231)
!8235 = !DILocation(line: 1073, column: 6, scope: !8231)
!8236 = !DILocation(line: 1073, column: 12, scope: !8231)
!8237 = !DILocation(line: 1074, column: 16, scope: !8231)
!8238 = !DILocation(line: 1074, column: 21, scope: !8231)
!8239 = !DILocation(line: 1074, column: 29, scope: !8231)
!8240 = !DILocation(line: 1074, column: 3, scope: !8231)
!8241 = !DILocation(line: 1074, column: 6, scope: !8231)
!8242 = !DILocation(line: 1074, column: 13, scope: !8231)
!8243 = !DILocation(line: 1078, column: 6, scope: !8244)
!8244 = distinct !DILexicalBlock(scope: !8151, file: !3, line: 1078, column: 6)
!8245 = !DILocation(line: 1078, column: 9, scope: !8244)
!8246 = !DILocation(line: 1078, column: 17, scope: !8244)
!8247 = !DILocation(line: 1078, column: 22, scope: !8244)
!8248 = !DILocation(line: 1078, column: 25, scope: !8244)
!8249 = !DILocation(line: 1078, column: 28, scope: !8244)
!8250 = !DILocation(line: 1078, column: 34, scope: !8244)
!8251 = !DILocation(line: 1078, column: 36, scope: !8244)
!8252 = !DILocation(line: 1078, column: 41, scope: !8244)
!8253 = !DILocation(line: 1078, column: 44, scope: !8244)
!8254 = !DILocation(line: 1078, column: 47, scope: !8244)
!8255 = !DILocation(line: 1078, column: 53, scope: !8244)
!8256 = !DILocation(line: 1078, column: 55, scope: !8244)
!8257 = !DILocation(line: 1078, column: 6, scope: !8151)
!8258 = !DILocation(line: 1079, column: 16, scope: !8259)
!8259 = distinct !DILexicalBlock(scope: !8244, file: !3, line: 1078, column: 61)
!8260 = !DILocation(line: 1079, column: 19, scope: !8259)
!8261 = !DILocation(line: 1079, column: 25, scope: !8259)
!8262 = !DILocation(line: 1079, column: 3, scope: !8259)
!8263 = !DILocation(line: 1079, column: 6, scope: !8259)
!8264 = !DILocation(line: 1079, column: 12, scope: !8259)
!8265 = !DILocation(line: 1079, column: 14, scope: !8259)
!8266 = !DILocation(line: 1080, column: 16, scope: !8259)
!8267 = !DILocation(line: 1080, column: 19, scope: !8259)
!8268 = !DILocation(line: 1080, column: 25, scope: !8259)
!8269 = !DILocation(line: 1080, column: 3, scope: !8259)
!8270 = !DILocation(line: 1080, column: 6, scope: !8259)
!8271 = !DILocation(line: 1080, column: 12, scope: !8259)
!8272 = !DILocation(line: 1080, column: 14, scope: !8259)
!8273 = !DILocation(line: 1081, column: 3, scope: !8259)
!8274 = !DILocation(line: 1081, column: 6, scope: !8259)
!8275 = !DILocation(line: 1081, column: 12, scope: !8259)
!8276 = !DILocation(line: 1081, column: 14, scope: !8259)
!8277 = !DILocation(line: 1082, column: 3, scope: !8259)
!8278 = !DILocation(line: 1082, column: 6, scope: !8259)
!8279 = !DILocation(line: 1082, column: 12, scope: !8259)
!8280 = !DILocation(line: 1082, column: 14, scope: !8259)
!8281 = !DILocation(line: 1083, column: 2, scope: !8259)
!8282 = !DILocation(line: 1085, column: 2, scope: !8151)
!8283 = !DILocation(line: 1086, column: 1, scope: !8151)
!8284 = distinct !DISubprogram(name: "alps_set_abs_params_v7", scope: !3, file: !3, line: 3013, type: !4066, scopeLine: 3015, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !407)
!8285 = !DILocalVariable(name: "priv", arg: 1, scope: !8284, file: !3, line: 3013, type: !206)
!8286 = !DILocation(line: 3013, column: 54, scope: !8284)
!8287 = !DILocalVariable(name: "dev1", arg: 2, scope: !8284, file: !3, line: 3014, type: !215)
!8288 = !DILocation(line: 3014, column: 26, scope: !8284)
!8289 = !DILocation(line: 3016, column: 32, scope: !8284)
!8290 = !DILocation(line: 3016, column: 38, scope: !8284)
!8291 = !DILocation(line: 3016, column: 2, scope: !8284)
!8292 = !DILocation(line: 3017, column: 29, scope: !8284)
!8293 = !DILocation(line: 3017, column: 35, scope: !8284)
!8294 = !DILocation(line: 3017, column: 2, scope: !8284)
!8295 = !DILocation(line: 3019, column: 22, scope: !8284)
!8296 = !DILocation(line: 3019, column: 2, scope: !8284)
!8297 = !DILocation(line: 3023, column: 29, scope: !8284)
!8298 = !DILocation(line: 3023, column: 35, scope: !8284)
!8299 = !DILocation(line: 3023, column: 2, scope: !8284)
!8300 = !DILocation(line: 3024, column: 1, scope: !8284)
!8301 = distinct !DISubprogram(name: "alps_hw_init_ss4_v2", scope: !3, file: !3, line: 2693, type: !3962, scopeLine: 2694, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !407)
!8302 = !DILocalVariable(name: "psmouse", arg: 1, scope: !8301, file: !3, line: 2693, type: !210)
!8303 = !DILocation(line: 2693, column: 48, scope: !8301)
!8304 = !DILocalVariable(name: "ps2dev", scope: !8301, file: !3, line: 2695, type: !5945)
!8305 = !DILocation(line: 2695, column: 17, scope: !8301)
!8306 = !DILocation(line: 2695, column: 27, scope: !8301)
!8307 = !DILocation(line: 2695, column: 36, scope: !8301)
!8308 = !DILocalVariable(name: "param", scope: !8301, file: !3, line: 2696, type: !8309)
!8309 = !DICompositeType(tag: DW_TAG_array_type, baseType: !198, size: 16, elements: !251)
!8310 = !DILocation(line: 2696, column: 7, scope: !8301)
!8311 = !DILocalVariable(name: "ret", scope: !8301, file: !3, line: 2697, type: !262)
!8312 = !DILocation(line: 2697, column: 6, scope: !8301)
!8313 = !DILocation(line: 2700, column: 18, scope: !8314)
!8314 = distinct !DILexicalBlock(scope: !8301, file: !3, line: 2700, column: 6)
!8315 = !DILocation(line: 2700, column: 6, scope: !8314)
!8316 = !DILocation(line: 2700, column: 55, scope: !8314)
!8317 = !DILocation(line: 2701, column: 18, scope: !8314)
!8318 = !DILocation(line: 2701, column: 6, scope: !8314)
!8319 = !DILocation(line: 2701, column: 55, scope: !8314)
!8320 = !DILocation(line: 2702, column: 18, scope: !8314)
!8321 = !DILocation(line: 2702, column: 27, scope: !8314)
!8322 = !DILocation(line: 2702, column: 6, scope: !8314)
!8323 = !DILocation(line: 2702, column: 58, scope: !8314)
!8324 = !DILocation(line: 2703, column: 18, scope: !8314)
!8325 = !DILocation(line: 2703, column: 27, scope: !8314)
!8326 = !DILocation(line: 2703, column: 6, scope: !8314)
!8327 = !DILocation(line: 2700, column: 6, scope: !8301)
!8328 = !DILocation(line: 2704, column: 3, scope: !8329)
!8329 = distinct !DILexicalBlock(scope: !8314, file: !3, line: 2703, column: 59)
!8330 = !DILocation(line: 2708, column: 29, scope: !8331)
!8331 = distinct !DILexicalBlock(scope: !8301, file: !3, line: 2708, column: 6)
!8332 = !DILocation(line: 2708, column: 6, scope: !8331)
!8333 = !DILocation(line: 2708, column: 38, scope: !8331)
!8334 = !DILocation(line: 2709, column: 30, scope: !8331)
!8335 = !DILocation(line: 2709, column: 6, scope: !8331)
!8336 = !DILocation(line: 2709, column: 39, scope: !8331)
!8337 = !DILocation(line: 2710, column: 34, scope: !8331)
!8338 = !DILocation(line: 2710, column: 6, scope: !8331)
!8339 = !DILocation(line: 2708, column: 6, scope: !8301)
!8340 = !DILocation(line: 2711, column: 3, scope: !8341)
!8341 = distinct !DILexicalBlock(scope: !8331, file: !3, line: 2710, column: 58)
!8342 = !DILocation(line: 2713, column: 25, scope: !8301)
!8343 = !DILocation(line: 2713, column: 2, scope: !8301)
!8344 = !DILocation(line: 2715, column: 21, scope: !8301)
!8345 = !DILocation(line: 2715, column: 9, scope: !8301)
!8346 = !DILocation(line: 2715, column: 2, scope: !8301)
!8347 = !DILabel(scope: !8301, name: "error", file: !3, line: 2717)
!8348 = !DILocation(line: 2717, column: 1, scope: !8301)
!8349 = !DILocation(line: 2718, column: 25, scope: !8301)
!8350 = !DILocation(line: 2718, column: 2, scope: !8301)
!8351 = !DILocation(line: 2719, column: 9, scope: !8301)
!8352 = !DILocation(line: 2719, column: 2, scope: !8301)
!8353 = !DILocation(line: 2720, column: 1, scope: !8301)
!8354 = distinct !DISubprogram(name: "alps_process_packet_ss4_v2", scope: !3, file: !3, line: 1314, type: !4003, scopeLine: 1315, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !407)
!8355 = !DILocalVariable(name: "psmouse", arg: 1, scope: !8354, file: !3, line: 1314, type: !210)
!8356 = !DILocation(line: 1314, column: 56, scope: !8354)
!8357 = !DILocalVariable(name: "priv", scope: !8354, file: !3, line: 1316, type: !206)
!8358 = !DILocation(line: 1316, column: 20, scope: !8354)
!8359 = !DILocation(line: 1316, column: 27, scope: !8354)
!8360 = !DILocation(line: 1316, column: 36, scope: !8354)
!8361 = !DILocalVariable(name: "packet", scope: !8354, file: !3, line: 1317, type: !4063)
!8362 = !DILocation(line: 1317, column: 17, scope: !8354)
!8363 = !DILocation(line: 1317, column: 26, scope: !8354)
!8364 = !DILocation(line: 1317, column: 35, scope: !8354)
!8365 = !DILocalVariable(name: "dev", scope: !8354, file: !3, line: 1318, type: !215)
!8366 = !DILocation(line: 1318, column: 20, scope: !8354)
!8367 = !DILocation(line: 1318, column: 26, scope: !8354)
!8368 = !DILocation(line: 1318, column: 35, scope: !8354)
!8369 = !DILocalVariable(name: "dev2", scope: !8354, file: !3, line: 1319, type: !215)
!8370 = !DILocation(line: 1319, column: 20, scope: !8354)
!8371 = !DILocation(line: 1319, column: 27, scope: !8354)
!8372 = !DILocation(line: 1319, column: 33, scope: !8354)
!8373 = !DILocalVariable(name: "f", scope: !8354, file: !3, line: 1320, type: !4041)
!8374 = !DILocation(line: 1320, column: 22, scope: !8354)
!8375 = !DILocation(line: 1320, column: 27, scope: !8354)
!8376 = !DILocation(line: 1320, column: 33, scope: !8354)
!8377 = !DILocation(line: 1322, column: 9, scope: !8354)
!8378 = !DILocation(line: 1322, column: 2, scope: !8354)
!8379 = !DILocation(line: 1323, column: 2, scope: !8354)
!8380 = !DILocation(line: 1323, column: 8, scope: !8354)
!8381 = !DILocation(line: 1323, column: 22, scope: !8354)
!8382 = !DILocation(line: 1323, column: 25, scope: !8354)
!8383 = !DILocation(line: 1323, column: 33, scope: !8354)
!8384 = !DILocation(line: 1324, column: 6, scope: !8385)
!8385 = distinct !DILexicalBlock(scope: !8354, file: !3, line: 1324, column: 6)
!8386 = !DILocation(line: 1324, column: 12, scope: !8385)
!8387 = !DILocation(line: 1324, column: 6, scope: !8354)
!8388 = !DILocation(line: 1331, column: 7, scope: !8389)
!8389 = distinct !DILexicalBlock(scope: !8390, file: !3, line: 1331, column: 7)
!8390 = distinct !DILexicalBlock(scope: !8385, file: !3, line: 1324, column: 26)
!8391 = !DILocation(line: 1331, column: 10, scope: !8389)
!8392 = !DILocation(line: 1331, column: 7, scope: !8390)
!8393 = !DILocation(line: 1333, column: 4, scope: !8394)
!8394 = distinct !DILexicalBlock(scope: !8389, file: !3, line: 1331, column: 17)
!8395 = !DILocation(line: 1333, column: 10, scope: !8394)
!8396 = !DILocation(line: 1333, column: 24, scope: !8394)
!8397 = !DILocation(line: 1333, column: 27, scope: !8394)
!8398 = !DILocation(line: 1333, column: 33, scope: !8394)
!8399 = !DILocation(line: 1333, column: 45, scope: !8394)
!8400 = !DILocation(line: 1334, column: 3, scope: !8394)
!8401 = !DILocation(line: 1335, column: 4, scope: !8402)
!8402 = distinct !DILexicalBlock(scope: !8389, file: !3, line: 1334, column: 10)
!8403 = !DILocation(line: 1335, column: 10, scope: !8402)
!8404 = !DILocation(line: 1335, column: 23, scope: !8402)
!8405 = !DILocation(line: 1337, column: 2, scope: !8390)
!8406 = !DILocation(line: 1343, column: 6, scope: !8407)
!8407 = distinct !DILexicalBlock(scope: !8354, file: !3, line: 1343, column: 6)
!8408 = !DILocation(line: 1343, column: 9, scope: !8407)
!8409 = !DILocation(line: 1343, column: 6, scope: !8354)
!8410 = !DILocation(line: 1344, column: 3, scope: !8407)
!8411 = !DILocation(line: 1347, column: 7, scope: !8412)
!8412 = distinct !DILexicalBlock(scope: !8354, file: !3, line: 1347, column: 6)
!8413 = !DILocation(line: 1347, column: 13, scope: !8412)
!8414 = !DILocation(line: 1347, column: 26, scope: !8412)
!8415 = !DILocation(line: 1347, column: 29, scope: !8412)
!8416 = !DILocation(line: 1347, column: 32, scope: !8412)
!8417 = !DILocation(line: 1347, column: 6, scope: !8354)
!8418 = !DILocation(line: 1348, column: 3, scope: !8419)
!8419 = distinct !DILexicalBlock(scope: !8412, file: !3, line: 1347, column: 42)
!8420 = !DILocation(line: 1348, column: 9, scope: !8419)
!8421 = !DILocation(line: 1348, column: 22, scope: !8419)
!8422 = !DILocation(line: 1349, column: 10, scope: !8419)
!8423 = !DILocation(line: 1349, column: 16, scope: !8419)
!8424 = !DILocation(line: 1349, column: 3, scope: !8419)
!8425 = !DILocation(line: 1349, column: 28, scope: !8419)
!8426 = !DILocation(line: 1350, column: 3, scope: !8419)
!8427 = !DILocation(line: 1353, column: 2, scope: !8354)
!8428 = !DILocation(line: 1353, column: 8, scope: !8354)
!8429 = !DILocation(line: 1353, column: 21, scope: !8354)
!8430 = !DILocation(line: 1356, column: 29, scope: !8431)
!8431 = distinct !DILexicalBlock(scope: !8354, file: !3, line: 1356, column: 6)
!8432 = !DILocation(line: 1356, column: 6, scope: !8431)
!8433 = !DILocation(line: 1356, column: 37, scope: !8431)
!8434 = !DILocation(line: 1356, column: 6, scope: !8354)
!8435 = !DILocation(line: 1357, column: 9, scope: !8436)
!8436 = distinct !DILexicalBlock(scope: !8437, file: !3, line: 1357, column: 7)
!8437 = distinct !DILexicalBlock(scope: !8431, file: !3, line: 1356, column: 61)
!8438 = !DILocation(line: 1357, column: 15, scope: !8436)
!8439 = !DILocation(line: 1357, column: 21, scope: !8436)
!8440 = !DILocation(line: 1357, column: 7, scope: !8437)
!8441 = !DILocation(line: 1358, column: 4, scope: !8442)
!8442 = distinct !DILexicalBlock(scope: !8436, file: !3, line: 1357, column: 40)
!8443 = !DILocation(line: 1360, column: 4, scope: !8442)
!8444 = !DILocation(line: 1363, column: 20, scope: !8437)
!8445 = !DILocation(line: 1363, column: 33, scope: !8437)
!8446 = !DILocation(line: 1363, column: 3, scope: !8437)
!8447 = !DILocation(line: 1364, column: 20, scope: !8437)
!8448 = !DILocation(line: 1364, column: 33, scope: !8437)
!8449 = !DILocation(line: 1364, column: 3, scope: !8437)
!8450 = !DILocation(line: 1365, column: 20, scope: !8437)
!8451 = !DILocation(line: 1365, column: 40, scope: !8437)
!8452 = !DILocation(line: 1365, column: 3, scope: !8437)
!8453 = !DILocation(line: 1367, column: 20, scope: !8437)
!8454 = !DILocation(line: 1367, column: 36, scope: !8437)
!8455 = !DILocation(line: 1367, column: 39, scope: !8437)
!8456 = !DILocation(line: 1367, column: 3, scope: !8437)
!8457 = !DILocation(line: 1368, column: 20, scope: !8437)
!8458 = !DILocation(line: 1368, column: 37, scope: !8437)
!8459 = !DILocation(line: 1368, column: 40, scope: !8437)
!8460 = !DILocation(line: 1368, column: 3, scope: !8437)
!8461 = !DILocation(line: 1369, column: 20, scope: !8437)
!8462 = !DILocation(line: 1369, column: 38, scope: !8437)
!8463 = !DILocation(line: 1369, column: 41, scope: !8437)
!8464 = !DILocation(line: 1369, column: 3, scope: !8437)
!8465 = !DILocation(line: 1371, column: 14, scope: !8437)
!8466 = !DILocation(line: 1371, column: 3, scope: !8437)
!8467 = !DILocation(line: 1372, column: 3, scope: !8437)
!8468 = !DILocation(line: 1376, column: 22, scope: !8354)
!8469 = !DILocation(line: 1376, column: 32, scope: !8354)
!8470 = !DILocation(line: 1376, column: 35, scope: !8354)
!8471 = !DILocation(line: 1376, column: 43, scope: !8354)
!8472 = !DILocation(line: 1376, column: 31, scope: !8354)
!8473 = !DILocation(line: 1376, column: 51, scope: !8354)
!8474 = !DILocation(line: 1376, column: 54, scope: !8354)
!8475 = !DILocation(line: 1376, column: 2, scope: !8354)
!8476 = !DILocation(line: 1378, column: 31, scope: !8354)
!8477 = !DILocation(line: 1378, column: 36, scope: !8354)
!8478 = !DILocation(line: 1378, column: 39, scope: !8354)
!8479 = !DILocation(line: 1378, column: 2, scope: !8354)
!8480 = !DILocation(line: 1380, column: 19, scope: !8354)
!8481 = !DILocation(line: 1380, column: 34, scope: !8354)
!8482 = !DILocation(line: 1380, column: 37, scope: !8354)
!8483 = !DILocation(line: 1380, column: 2, scope: !8354)
!8484 = !DILocation(line: 1381, column: 19, scope: !8354)
!8485 = !DILocation(line: 1381, column: 35, scope: !8354)
!8486 = !DILocation(line: 1381, column: 38, scope: !8354)
!8487 = !DILocation(line: 1381, column: 2, scope: !8354)
!8488 = !DILocation(line: 1382, column: 19, scope: !8354)
!8489 = !DILocation(line: 1382, column: 36, scope: !8354)
!8490 = !DILocation(line: 1382, column: 39, scope: !8354)
!8491 = !DILocation(line: 1382, column: 2, scope: !8354)
!8492 = !DILocation(line: 1384, column: 19, scope: !8354)
!8493 = !DILocation(line: 1384, column: 38, scope: !8354)
!8494 = !DILocation(line: 1384, column: 41, scope: !8354)
!8495 = !DILocation(line: 1384, column: 2, scope: !8354)
!8496 = !DILocation(line: 1385, column: 13, scope: !8354)
!8497 = !DILocation(line: 1385, column: 2, scope: !8354)
!8498 = !DILocation(line: 1386, column: 1, scope: !8354)
!8499 = distinct !DISubprogram(name: "alps_decode_ss4_v2", scope: !3, file: !3, line: 1177, type: !4039, scopeLine: 1179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !407)
!8500 = !DILocalVariable(name: "f", arg: 1, scope: !8499, file: !3, line: 1177, type: !4041)
!8501 = !DILocation(line: 1177, column: 51, scope: !8499)
!8502 = !DILocalVariable(name: "p", arg: 2, scope: !8499, file: !3, line: 1178, type: !4063)
!8503 = !DILocation(line: 1178, column: 25, scope: !8499)
!8504 = !DILocalVariable(name: "psmouse", arg: 3, scope: !8499, file: !3, line: 1178, type: !210)
!8505 = !DILocation(line: 1178, column: 44, scope: !8499)
!8506 = !DILocalVariable(name: "priv", scope: !8499, file: !3, line: 1180, type: !206)
!8507 = !DILocation(line: 1180, column: 20, scope: !8499)
!8508 = !DILocation(line: 1180, column: 27, scope: !8499)
!8509 = !DILocation(line: 1180, column: 36, scope: !8499)
!8510 = !DILocalVariable(name: "pkt_id", scope: !8499, file: !3, line: 1181, type: !175)
!8511 = !DILocation(line: 1181, column: 21, scope: !8499)
!8512 = !DILocalVariable(name: "no_data_x", scope: !8499, file: !3, line: 1182, type: !7)
!8513 = !DILocation(line: 1182, column: 15, scope: !8499)
!8514 = !DILocalVariable(name: "no_data_y", scope: !8499, file: !3, line: 1182, type: !7)
!8515 = !DILocation(line: 1182, column: 26, scope: !8499)
!8516 = !DILocation(line: 1184, column: 34, scope: !8499)
!8517 = !DILocation(line: 1184, column: 11, scope: !8499)
!8518 = !DILocation(line: 1184, column: 9, scope: !8499)
!8519 = !DILocation(line: 1187, column: 10, scope: !8499)
!8520 = !DILocation(line: 1187, column: 2, scope: !8499)
!8521 = !DILocation(line: 1189, column: 16, scope: !8522)
!8522 = distinct !DILexicalBlock(scope: !8499, file: !3, line: 1187, column: 18)
!8523 = !DILocation(line: 1189, column: 3, scope: !8522)
!8524 = !DILocation(line: 1189, column: 6, scope: !8522)
!8525 = !DILocation(line: 1189, column: 12, scope: !8522)
!8526 = !DILocation(line: 1189, column: 14, scope: !8522)
!8527 = !DILocation(line: 1190, column: 16, scope: !8522)
!8528 = !DILocation(line: 1190, column: 3, scope: !8522)
!8529 = !DILocation(line: 1190, column: 6, scope: !8522)
!8530 = !DILocation(line: 1190, column: 12, scope: !8522)
!8531 = !DILocation(line: 1190, column: 14, scope: !8522)
!8532 = !DILocation(line: 1191, column: 19, scope: !8522)
!8533 = !DILocation(line: 1191, column: 35, scope: !8522)
!8534 = !DILocation(line: 1191, column: 40, scope: !8522)
!8535 = !DILocation(line: 1191, column: 3, scope: !8522)
!8536 = !DILocation(line: 1191, column: 6, scope: !8522)
!8537 = !DILocation(line: 1191, column: 15, scope: !8522)
!8538 = !DILocation(line: 1198, column: 16, scope: !8522)
!8539 = !DILocation(line: 1198, column: 19, scope: !8522)
!8540 = !DILocation(line: 1198, column: 28, scope: !8522)
!8541 = !DILocation(line: 1198, column: 3, scope: !8522)
!8542 = !DILocation(line: 1198, column: 6, scope: !8522)
!8543 = !DILocation(line: 1198, column: 14, scope: !8522)
!8544 = !DILocation(line: 1199, column: 3, scope: !8522)
!8545 = !DILocation(line: 1199, column: 6, scope: !8522)
!8546 = !DILocation(line: 1199, column: 15, scope: !8522)
!8547 = !DILocation(line: 1200, column: 3, scope: !8522)
!8548 = !DILocation(line: 1200, column: 6, scope: !8522)
!8549 = !DILocation(line: 1200, column: 12, scope: !8522)
!8550 = !DILocation(line: 1201, column: 3, scope: !8522)
!8551 = !DILocation(line: 1204, column: 7, scope: !8552)
!8552 = distinct !DILexicalBlock(scope: !8522, file: !3, line: 1204, column: 7)
!8553 = !DILocation(line: 1204, column: 13, scope: !8552)
!8554 = !DILocation(line: 1204, column: 19, scope: !8552)
!8555 = !DILocation(line: 1204, column: 7, scope: !8522)
!8556 = !DILocation(line: 1205, column: 8, scope: !8557)
!8557 = distinct !DILexicalBlock(scope: !8558, file: !3, line: 1205, column: 8)
!8558 = distinct !DILexicalBlock(scope: !8552, file: !3, line: 1204, column: 37)
!8559 = !DILocation(line: 1205, column: 8, scope: !8558)
!8560 = !DILocation(line: 1206, column: 18, scope: !8561)
!8561 = distinct !DILexicalBlock(scope: !8557, file: !3, line: 1205, column: 38)
!8562 = !DILocation(line: 1206, column: 5, scope: !8561)
!8563 = !DILocation(line: 1206, column: 8, scope: !8561)
!8564 = !DILocation(line: 1206, column: 14, scope: !8561)
!8565 = !DILocation(line: 1206, column: 16, scope: !8561)
!8566 = !DILocation(line: 1207, column: 18, scope: !8561)
!8567 = !DILocation(line: 1207, column: 5, scope: !8561)
!8568 = !DILocation(line: 1207, column: 8, scope: !8561)
!8569 = !DILocation(line: 1207, column: 14, scope: !8561)
!8570 = !DILocation(line: 1207, column: 16, scope: !8561)
!8571 = !DILocation(line: 1208, column: 4, scope: !8561)
!8572 = !DILocation(line: 1209, column: 18, scope: !8573)
!8573 = distinct !DILexicalBlock(scope: !8557, file: !3, line: 1208, column: 11)
!8574 = !DILocation(line: 1209, column: 5, scope: !8573)
!8575 = !DILocation(line: 1209, column: 8, scope: !8573)
!8576 = !DILocation(line: 1209, column: 14, scope: !8573)
!8577 = !DILocation(line: 1209, column: 16, scope: !8573)
!8578 = !DILocation(line: 1210, column: 18, scope: !8573)
!8579 = !DILocation(line: 1210, column: 5, scope: !8573)
!8580 = !DILocation(line: 1210, column: 8, scope: !8573)
!8581 = !DILocation(line: 1210, column: 14, scope: !8573)
!8582 = !DILocation(line: 1210, column: 16, scope: !8573)
!8583 = !DILocation(line: 1212, column: 17, scope: !8558)
!8584 = !DILocation(line: 1212, column: 4, scope: !8558)
!8585 = !DILocation(line: 1212, column: 7, scope: !8558)
!8586 = !DILocation(line: 1212, column: 13, scope: !8558)
!8587 = !DILocation(line: 1212, column: 15, scope: !8558)
!8588 = !DILocation(line: 1213, column: 17, scope: !8558)
!8589 = !DILocation(line: 1213, column: 4, scope: !8558)
!8590 = !DILocation(line: 1213, column: 7, scope: !8558)
!8591 = !DILocation(line: 1213, column: 13, scope: !8558)
!8592 = !DILocation(line: 1213, column: 15, scope: !8558)
!8593 = !DILocation(line: 1214, column: 3, scope: !8558)
!8594 = !DILocation(line: 1215, column: 8, scope: !8595)
!8595 = distinct !DILexicalBlock(scope: !8596, file: !3, line: 1215, column: 8)
!8596 = distinct !DILexicalBlock(scope: !8552, file: !3, line: 1214, column: 10)
!8597 = !DILocation(line: 1215, column: 8, scope: !8596)
!8598 = !DILocation(line: 1216, column: 18, scope: !8599)
!8599 = distinct !DILexicalBlock(scope: !8595, file: !3, line: 1215, column: 38)
!8600 = !DILocation(line: 1216, column: 5, scope: !8599)
!8601 = !DILocation(line: 1216, column: 8, scope: !8599)
!8602 = !DILocation(line: 1216, column: 14, scope: !8599)
!8603 = !DILocation(line: 1216, column: 16, scope: !8599)
!8604 = !DILocation(line: 1217, column: 18, scope: !8599)
!8605 = !DILocation(line: 1217, column: 5, scope: !8599)
!8606 = !DILocation(line: 1217, column: 8, scope: !8599)
!8607 = !DILocation(line: 1217, column: 14, scope: !8599)
!8608 = !DILocation(line: 1217, column: 16, scope: !8599)
!8609 = !DILocation(line: 1218, column: 4, scope: !8599)
!8610 = !DILocation(line: 1219, column: 18, scope: !8611)
!8611 = distinct !DILexicalBlock(scope: !8595, file: !3, line: 1218, column: 11)
!8612 = !DILocation(line: 1219, column: 5, scope: !8611)
!8613 = !DILocation(line: 1219, column: 8, scope: !8611)
!8614 = !DILocation(line: 1219, column: 14, scope: !8611)
!8615 = !DILocation(line: 1219, column: 16, scope: !8611)
!8616 = !DILocation(line: 1220, column: 18, scope: !8611)
!8617 = !DILocation(line: 1220, column: 5, scope: !8611)
!8618 = !DILocation(line: 1220, column: 8, scope: !8611)
!8619 = !DILocation(line: 1220, column: 14, scope: !8611)
!8620 = !DILocation(line: 1220, column: 16, scope: !8611)
!8621 = !DILocation(line: 1222, column: 17, scope: !8596)
!8622 = !DILocation(line: 1222, column: 4, scope: !8596)
!8623 = !DILocation(line: 1222, column: 7, scope: !8596)
!8624 = !DILocation(line: 1222, column: 13, scope: !8596)
!8625 = !DILocation(line: 1222, column: 15, scope: !8596)
!8626 = !DILocation(line: 1223, column: 17, scope: !8596)
!8627 = !DILocation(line: 1223, column: 4, scope: !8596)
!8628 = !DILocation(line: 1223, column: 7, scope: !8596)
!8629 = !DILocation(line: 1223, column: 13, scope: !8596)
!8630 = !DILocation(line: 1223, column: 15, scope: !8596)
!8631 = !DILocation(line: 1225, column: 17, scope: !8522)
!8632 = !DILocation(line: 1225, column: 3, scope: !8522)
!8633 = !DILocation(line: 1225, column: 6, scope: !8522)
!8634 = !DILocation(line: 1225, column: 15, scope: !8522)
!8635 = !DILocation(line: 1227, column: 7, scope: !8636)
!8636 = distinct !DILexicalBlock(scope: !8522, file: !3, line: 1227, column: 7)
!8637 = !DILocation(line: 1227, column: 7, scope: !8522)
!8638 = !DILocation(line: 1228, column: 4, scope: !8639)
!8639 = distinct !DILexicalBlock(scope: !8636, file: !3, line: 1227, column: 30)
!8640 = !DILocation(line: 1228, column: 7, scope: !8639)
!8641 = !DILocation(line: 1228, column: 16, scope: !8639)
!8642 = !DILocation(line: 1229, column: 3, scope: !8639)
!8643 = !DILocation(line: 1230, column: 4, scope: !8644)
!8644 = distinct !DILexicalBlock(scope: !8636, file: !3, line: 1229, column: 10)
!8645 = !DILocation(line: 1230, column: 7, scope: !8644)
!8646 = !DILocation(line: 1230, column: 15, scope: !8644)
!8647 = !DILocation(line: 1231, column: 4, scope: !8644)
!8648 = !DILocation(line: 1231, column: 7, scope: !8644)
!8649 = !DILocation(line: 1231, column: 16, scope: !8644)
!8650 = !DILocation(line: 1233, column: 3, scope: !8522)
!8651 = !DILocation(line: 1233, column: 6, scope: !8522)
!8652 = !DILocation(line: 1233, column: 12, scope: !8522)
!8653 = !DILocation(line: 1235, column: 3, scope: !8522)
!8654 = !DILocation(line: 1238, column: 7, scope: !8655)
!8655 = distinct !DILexicalBlock(scope: !8522, file: !3, line: 1238, column: 7)
!8656 = !DILocation(line: 1238, column: 13, scope: !8655)
!8657 = !DILocation(line: 1238, column: 19, scope: !8655)
!8658 = !DILocation(line: 1238, column: 7, scope: !8522)
!8659 = !DILocation(line: 1239, column: 8, scope: !8660)
!8660 = distinct !DILexicalBlock(scope: !8661, file: !3, line: 1239, column: 8)
!8661 = distinct !DILexicalBlock(scope: !8655, file: !3, line: 1238, column: 37)
!8662 = !DILocation(line: 1239, column: 8, scope: !8661)
!8663 = !DILocation(line: 1240, column: 18, scope: !8664)
!8664 = distinct !DILexicalBlock(scope: !8660, file: !3, line: 1239, column: 38)
!8665 = !DILocation(line: 1240, column: 5, scope: !8664)
!8666 = !DILocation(line: 1240, column: 8, scope: !8664)
!8667 = !DILocation(line: 1240, column: 14, scope: !8664)
!8668 = !DILocation(line: 1240, column: 16, scope: !8664)
!8669 = !DILocation(line: 1241, column: 18, scope: !8664)
!8670 = !DILocation(line: 1241, column: 5, scope: !8664)
!8671 = !DILocation(line: 1241, column: 8, scope: !8664)
!8672 = !DILocation(line: 1241, column: 14, scope: !8664)
!8673 = !DILocation(line: 1241, column: 16, scope: !8664)
!8674 = !DILocation(line: 1242, column: 15, scope: !8664)
!8675 = !DILocation(line: 1243, column: 4, scope: !8664)
!8676 = !DILocation(line: 1244, column: 18, scope: !8677)
!8677 = distinct !DILexicalBlock(scope: !8660, file: !3, line: 1243, column: 11)
!8678 = !DILocation(line: 1244, column: 5, scope: !8677)
!8679 = !DILocation(line: 1244, column: 8, scope: !8677)
!8680 = !DILocation(line: 1244, column: 14, scope: !8677)
!8681 = !DILocation(line: 1244, column: 16, scope: !8677)
!8682 = !DILocation(line: 1245, column: 18, scope: !8677)
!8683 = !DILocation(line: 1245, column: 5, scope: !8677)
!8684 = !DILocation(line: 1245, column: 8, scope: !8677)
!8685 = !DILocation(line: 1245, column: 14, scope: !8677)
!8686 = !DILocation(line: 1245, column: 16, scope: !8677)
!8687 = !DILocation(line: 1246, column: 15, scope: !8677)
!8688 = !DILocation(line: 1248, column: 14, scope: !8661)
!8689 = !DILocation(line: 1250, column: 17, scope: !8661)
!8690 = !DILocation(line: 1250, column: 4, scope: !8661)
!8691 = !DILocation(line: 1250, column: 7, scope: !8661)
!8692 = !DILocation(line: 1250, column: 13, scope: !8661)
!8693 = !DILocation(line: 1250, column: 15, scope: !8661)
!8694 = !DILocation(line: 1251, column: 17, scope: !8661)
!8695 = !DILocation(line: 1251, column: 4, scope: !8661)
!8696 = !DILocation(line: 1251, column: 7, scope: !8661)
!8697 = !DILocation(line: 1251, column: 13, scope: !8661)
!8698 = !DILocation(line: 1251, column: 15, scope: !8661)
!8699 = !DILocation(line: 1252, column: 3, scope: !8661)
!8700 = !DILocation(line: 1253, column: 8, scope: !8701)
!8701 = distinct !DILexicalBlock(scope: !8702, file: !3, line: 1253, column: 8)
!8702 = distinct !DILexicalBlock(scope: !8655, file: !3, line: 1252, column: 10)
!8703 = !DILocation(line: 1253, column: 8, scope: !8702)
!8704 = !DILocation(line: 1254, column: 18, scope: !8705)
!8705 = distinct !DILexicalBlock(scope: !8701, file: !3, line: 1253, column: 38)
!8706 = !DILocation(line: 1254, column: 5, scope: !8705)
!8707 = !DILocation(line: 1254, column: 8, scope: !8705)
!8708 = !DILocation(line: 1254, column: 14, scope: !8705)
!8709 = !DILocation(line: 1254, column: 16, scope: !8705)
!8710 = !DILocation(line: 1255, column: 18, scope: !8705)
!8711 = !DILocation(line: 1255, column: 5, scope: !8705)
!8712 = !DILocation(line: 1255, column: 8, scope: !8705)
!8713 = !DILocation(line: 1255, column: 14, scope: !8705)
!8714 = !DILocation(line: 1255, column: 16, scope: !8705)
!8715 = !DILocation(line: 1256, column: 15, scope: !8705)
!8716 = !DILocation(line: 1257, column: 4, scope: !8705)
!8717 = !DILocation(line: 1258, column: 18, scope: !8718)
!8718 = distinct !DILexicalBlock(scope: !8701, file: !3, line: 1257, column: 11)
!8719 = !DILocation(line: 1258, column: 5, scope: !8718)
!8720 = !DILocation(line: 1258, column: 8, scope: !8718)
!8721 = !DILocation(line: 1258, column: 14, scope: !8718)
!8722 = !DILocation(line: 1258, column: 16, scope: !8718)
!8723 = !DILocation(line: 1259, column: 18, scope: !8718)
!8724 = !DILocation(line: 1259, column: 5, scope: !8718)
!8725 = !DILocation(line: 1259, column: 8, scope: !8718)
!8726 = !DILocation(line: 1259, column: 14, scope: !8718)
!8727 = !DILocation(line: 1259, column: 16, scope: !8718)
!8728 = !DILocation(line: 1260, column: 15, scope: !8718)
!8729 = !DILocation(line: 1262, column: 14, scope: !8702)
!8730 = !DILocation(line: 1264, column: 17, scope: !8702)
!8731 = !DILocation(line: 1264, column: 4, scope: !8702)
!8732 = !DILocation(line: 1264, column: 7, scope: !8702)
!8733 = !DILocation(line: 1264, column: 13, scope: !8702)
!8734 = !DILocation(line: 1264, column: 15, scope: !8702)
!8735 = !DILocation(line: 1265, column: 17, scope: !8702)
!8736 = !DILocation(line: 1265, column: 4, scope: !8702)
!8737 = !DILocation(line: 1265, column: 7, scope: !8702)
!8738 = !DILocation(line: 1265, column: 13, scope: !8702)
!8739 = !DILocation(line: 1265, column: 15, scope: !8702)
!8740 = !DILocation(line: 1268, column: 3, scope: !8522)
!8741 = !DILocation(line: 1268, column: 6, scope: !8522)
!8742 = !DILocation(line: 1268, column: 15, scope: !8522)
!8743 = !DILocation(line: 1269, column: 3, scope: !8522)
!8744 = !DILocation(line: 1269, column: 6, scope: !8522)
!8745 = !DILocation(line: 1269, column: 12, scope: !8522)
!8746 = !DILocation(line: 1271, column: 7, scope: !8747)
!8747 = distinct !DILexicalBlock(scope: !8522, file: !3, line: 1271, column: 7)
!8748 = !DILocation(line: 1271, column: 7, scope: !8522)
!8749 = !DILocation(line: 1272, column: 4, scope: !8750)
!8750 = distinct !DILexicalBlock(scope: !8747, file: !3, line: 1271, column: 30)
!8751 = !DILocation(line: 1272, column: 7, scope: !8750)
!8752 = !DILocation(line: 1272, column: 15, scope: !8750)
!8753 = !DILocation(line: 1273, column: 3, scope: !8750)
!8754 = !DILocation(line: 1273, column: 14, scope: !8755)
!8755 = distinct !DILexicalBlock(scope: !8747, file: !3, line: 1273, column: 14)
!8756 = !DILocation(line: 1273, column: 17, scope: !8755)
!8757 = !DILocation(line: 1273, column: 23, scope: !8755)
!8758 = !DILocation(line: 1273, column: 28, scope: !8755)
!8759 = !DILocation(line: 1273, column: 25, scope: !8755)
!8760 = !DILocation(line: 1273, column: 38, scope: !8755)
!8761 = !DILocation(line: 1274, column: 9, scope: !8755)
!8762 = !DILocation(line: 1274, column: 12, scope: !8755)
!8763 = !DILocation(line: 1274, column: 18, scope: !8755)
!8764 = !DILocation(line: 1274, column: 23, scope: !8755)
!8765 = !DILocation(line: 1274, column: 20, scope: !8755)
!8766 = !DILocation(line: 1273, column: 14, scope: !8747)
!8767 = !DILocation(line: 1275, column: 4, scope: !8768)
!8768 = distinct !DILexicalBlock(scope: !8755, file: !3, line: 1274, column: 34)
!8769 = !DILocation(line: 1275, column: 7, scope: !8768)
!8770 = !DILocation(line: 1275, column: 13, scope: !8768)
!8771 = !DILocation(line: 1275, column: 15, scope: !8768)
!8772 = !DILocation(line: 1276, column: 4, scope: !8768)
!8773 = !DILocation(line: 1276, column: 7, scope: !8768)
!8774 = !DILocation(line: 1276, column: 13, scope: !8768)
!8775 = !DILocation(line: 1276, column: 15, scope: !8768)
!8776 = !DILocation(line: 1277, column: 4, scope: !8768)
!8777 = !DILocation(line: 1277, column: 7, scope: !8768)
!8778 = !DILocation(line: 1277, column: 15, scope: !8768)
!8779 = !DILocation(line: 1278, column: 3, scope: !8768)
!8780 = !DILocation(line: 1279, column: 4, scope: !8781)
!8781 = distinct !DILexicalBlock(scope: !8755, file: !3, line: 1278, column: 10)
!8782 = !DILocation(line: 1279, column: 7, scope: !8781)
!8783 = !DILocation(line: 1279, column: 15, scope: !8781)
!8784 = !DILocation(line: 1281, column: 3, scope: !8522)
!8785 = !DILocation(line: 1288, column: 3, scope: !8522)
!8786 = !DILocation(line: 1288, column: 6, scope: !8522)
!8787 = !DILocation(line: 1288, column: 15, scope: !8522)
!8788 = !DILocation(line: 1289, column: 3, scope: !8522)
!8789 = !DILocation(line: 1289, column: 6, scope: !8522)
!8790 = !DILocation(line: 1289, column: 12, scope: !8522)
!8791 = !DILocation(line: 1290, column: 3, scope: !8522)
!8792 = !DILocation(line: 1294, column: 10, scope: !8522)
!8793 = !DILocation(line: 1294, column: 3, scope: !8522)
!8794 = !DILocation(line: 1295, column: 3, scope: !8522)
!8795 = !DILocation(line: 1299, column: 6, scope: !8796)
!8796 = distinct !DILexicalBlock(scope: !8499, file: !3, line: 1299, column: 6)
!8797 = !DILocation(line: 1299, column: 13, scope: !8796)
!8798 = !DILocation(line: 1299, column: 6, scope: !8499)
!8799 = !DILocation(line: 1300, column: 19, scope: !8800)
!8800 = distinct !DILexicalBlock(scope: !8796, file: !3, line: 1299, column: 37)
!8801 = !DILocation(line: 1300, column: 33, scope: !8800)
!8802 = !DILocation(line: 1300, column: 17, scope: !8800)
!8803 = !DILocation(line: 1300, column: 16, scope: !8800)
!8804 = !DILocation(line: 1300, column: 3, scope: !8800)
!8805 = !DILocation(line: 1300, column: 6, scope: !8800)
!8806 = !DILocation(line: 1300, column: 14, scope: !8800)
!8807 = !DILocation(line: 1301, column: 20, scope: !8800)
!8808 = !DILocation(line: 1301, column: 34, scope: !8800)
!8809 = !DILocation(line: 1301, column: 18, scope: !8800)
!8810 = !DILocation(line: 1301, column: 17, scope: !8800)
!8811 = !DILocation(line: 1301, column: 3, scope: !8800)
!8812 = !DILocation(line: 1301, column: 6, scope: !8800)
!8813 = !DILocation(line: 1301, column: 15, scope: !8800)
!8814 = !DILocation(line: 1302, column: 21, scope: !8800)
!8815 = !DILocation(line: 1302, column: 35, scope: !8800)
!8816 = !DILocation(line: 1302, column: 19, scope: !8800)
!8817 = !DILocation(line: 1302, column: 18, scope: !8800)
!8818 = !DILocation(line: 1302, column: 3, scope: !8800)
!8819 = !DILocation(line: 1302, column: 6, scope: !8800)
!8820 = !DILocation(line: 1302, column: 16, scope: !8800)
!8821 = !DILocation(line: 1303, column: 2, scope: !8800)
!8822 = !DILocation(line: 1304, column: 16, scope: !8823)
!8823 = distinct !DILexicalBlock(scope: !8796, file: !3, line: 1303, column: 9)
!8824 = !DILocation(line: 1304, column: 30, scope: !8823)
!8825 = !DILocation(line: 1304, column: 14, scope: !8823)
!8826 = !DILocation(line: 1304, column: 13, scope: !8823)
!8827 = !DILocation(line: 1304, column: 3, scope: !8823)
!8828 = !DILocation(line: 1304, column: 6, scope: !8823)
!8829 = !DILocation(line: 1304, column: 11, scope: !8823)
!8830 = !DILocation(line: 1305, column: 9, scope: !8831)
!8831 = distinct !DILexicalBlock(scope: !8823, file: !3, line: 1305, column: 7)
!8832 = !DILocation(line: 1305, column: 15, scope: !8831)
!8833 = !DILocation(line: 1305, column: 21, scope: !8831)
!8834 = !DILocation(line: 1305, column: 7, scope: !8823)
!8835 = !DILocation(line: 1306, column: 18, scope: !8836)
!8836 = distinct !DILexicalBlock(scope: !8831, file: !3, line: 1305, column: 40)
!8837 = !DILocation(line: 1306, column: 32, scope: !8836)
!8838 = !DILocation(line: 1306, column: 16, scope: !8836)
!8839 = !DILocation(line: 1306, column: 15, scope: !8836)
!8840 = !DILocation(line: 1306, column: 4, scope: !8836)
!8841 = !DILocation(line: 1306, column: 7, scope: !8836)
!8842 = !DILocation(line: 1306, column: 13, scope: !8836)
!8843 = !DILocation(line: 1307, column: 19, scope: !8836)
!8844 = !DILocation(line: 1307, column: 33, scope: !8836)
!8845 = !DILocation(line: 1307, column: 17, scope: !8836)
!8846 = !DILocation(line: 1307, column: 16, scope: !8836)
!8847 = !DILocation(line: 1307, column: 4, scope: !8836)
!8848 = !DILocation(line: 1307, column: 7, scope: !8836)
!8849 = !DILocation(line: 1307, column: 14, scope: !8836)
!8850 = !DILocation(line: 1308, column: 3, scope: !8836)
!8851 = !DILocation(line: 1311, column: 2, scope: !8499)
!8852 = distinct !DISubprogram(name: "alps_set_abs_params_ss4_v2", scope: !3, file: !3, line: 3026, type: !4066, scopeLine: 3028, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !407)
!8853 = !DILocalVariable(name: "priv", arg: 1, scope: !8852, file: !3, line: 3026, type: !206)
!8854 = !DILocation(line: 3026, column: 58, scope: !8852)
!8855 = !DILocalVariable(name: "dev1", arg: 2, scope: !8852, file: !3, line: 3027, type: !215)
!8856 = !DILocation(line: 3027, column: 30, scope: !8852)
!8857 = !DILocation(line: 3029, column: 32, scope: !8852)
!8858 = !DILocation(line: 3029, column: 38, scope: !8852)
!8859 = !DILocation(line: 3029, column: 2, scope: !8852)
!8860 = !DILocation(line: 3030, column: 23, scope: !8852)
!8861 = !DILocation(line: 3030, column: 2, scope: !8852)
!8862 = !DILocation(line: 3031, column: 29, scope: !8852)
!8863 = !DILocation(line: 3031, column: 35, scope: !8852)
!8864 = !DILocation(line: 3031, column: 2, scope: !8852)
!8865 = !DILocation(line: 3033, column: 22, scope: !8852)
!8866 = !DILocation(line: 3033, column: 2, scope: !8852)
!8867 = !DILocation(line: 3036, column: 1, scope: !8852)
!8868 = distinct !DISubprogram(name: "alps_set_defaults_ss4_v2", scope: !3, file: !3, line: 2581, type: !5020, scopeLine: 2583, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !407)
!8869 = !DILocalVariable(name: "psmouse", arg: 1, scope: !8868, file: !3, line: 2581, type: !210)
!8870 = !DILocation(line: 2581, column: 53, scope: !8868)
!8871 = !DILocalVariable(name: "priv", arg: 2, scope: !8868, file: !3, line: 2582, type: !206)
!8872 = !DILocation(line: 2582, column: 27, scope: !8868)
!8873 = !DILocalVariable(name: "otp", scope: !8868, file: !3, line: 2584, type: !8874)
!8874 = !DICompositeType(tag: DW_TAG_array_type, baseType: !269, size: 64, elements: !8875)
!8875 = !{!252, !1136}
!8876 = !DILocation(line: 2584, column: 16, scope: !8868)
!8877 = !DILocation(line: 2586, column: 2, scope: !8868)
!8878 = !DILocation(line: 2588, column: 33, scope: !8879)
!8879 = distinct !DILexicalBlock(scope: !8868, file: !3, line: 2588, column: 6)
!8880 = !DILocation(line: 2588, column: 46, scope: !8879)
!8881 = !DILocation(line: 2588, column: 6, scope: !8879)
!8882 = !DILocation(line: 2588, column: 57, scope: !8879)
!8883 = !DILocation(line: 2589, column: 33, scope: !8879)
!8884 = !DILocation(line: 2589, column: 46, scope: !8879)
!8885 = !DILocation(line: 2589, column: 6, scope: !8879)
!8886 = !DILocation(line: 2588, column: 6, scope: !8868)
!8887 = !DILocation(line: 2590, column: 3, scope: !8879)
!8888 = !DILocation(line: 2592, column: 33, scope: !8868)
!8889 = !DILocation(line: 2592, column: 38, scope: !8868)
!8890 = !DILocation(line: 2592, column: 2, scope: !8868)
!8891 = !DILocation(line: 2594, column: 30, scope: !8868)
!8892 = !DILocation(line: 2594, column: 35, scope: !8868)
!8893 = !DILocation(line: 2594, column: 2, scope: !8868)
!8894 = !DILocation(line: 2596, column: 31, scope: !8868)
!8895 = !DILocation(line: 2596, column: 36, scope: !8868)
!8896 = !DILocation(line: 2596, column: 42, scope: !8868)
!8897 = !DILocation(line: 2596, column: 2, scope: !8868)
!8898 = !DILocation(line: 2598, column: 2, scope: !8868)
!8899 = !DILocation(line: 2599, column: 1, scope: !8868)
!8900 = distinct !DISubprogram(name: "serio_pause_rx", scope: !3866, file: !3866, line: 154, type: !3891, scopeLine: 155, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !407)
!8901 = !DILocalVariable(name: "lock", arg: 1, scope: !8902, file: !8903, line: 377, type: !8906)
!8902 = distinct !DISubprogram(name: "spin_lock_irq", scope: !8903, file: !8903, line: 377, type: !8904, scopeLine: 378, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !407)
!8903 = !DIFile(filename: "./include/linux/spinlock.h", directory: "/home/lizy2001/genbc/linux")
!8904 = !DISubroutineType(types: !8905)
!8905 = !{null, !8906}
!8906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !393, size: 64)
!8907 = !DILocation(line: 377, column: 55, scope: !8902, inlinedAt: !8908)
!8908 = distinct !DILocation(line: 156, column: 2, scope: !8900)
!8909 = !DILocalVariable(name: "serio", arg: 1, scope: !8900, file: !3866, line: 154, type: !3864)
!8910 = !DILocation(line: 154, column: 49, scope: !8900)
!8911 = !DILocation(line: 156, column: 17, scope: !8900)
!8912 = !DILocation(line: 156, column: 24, scope: !8900)
!8913 = !DILocation(line: 379, column: 2, scope: !8914, inlinedAt: !8908)
!8914 = distinct !DILexicalBlock(scope: !8915, file: !8903, line: 379, column: 2)
!8915 = distinct !DILexicalBlock(scope: !8902, file: !8903, line: 379, column: 2)
!8916 = !DILocation(line: 379, column: 2, scope: !8917, inlinedAt: !8908)
!8917 = distinct !DILexicalBlock(scope: !8915, file: !8903, line: 379, column: 2)
!8918 = !{i32 -2145447440}
!8919 = !DILocation(line: 379, column: 2, scope: !8920, inlinedAt: !8908)
!8920 = distinct !DILexicalBlock(scope: !8917, file: !8903, line: 379, column: 2)
!8921 = !DILocation(line: 157, column: 1, scope: !8900)
!8922 = distinct !DISubprogram(name: "serio_continue_rx", scope: !3866, file: !3866, line: 159, type: !3891, scopeLine: 160, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !407)
!8923 = !DILocalVariable(name: "lock", arg: 1, scope: !8924, file: !8903, line: 402, type: !8906)
!8924 = distinct !DISubprogram(name: "spin_unlock_irq", scope: !8903, file: !8903, line: 402, type: !8904, scopeLine: 403, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !407)
!8925 = !DILocation(line: 402, column: 57, scope: !8924, inlinedAt: !8926)
!8926 = distinct !DILocation(line: 161, column: 2, scope: !8922)
!8927 = !DILocalVariable(name: "serio", arg: 1, scope: !8922, file: !3866, line: 159, type: !3864)
!8928 = !DILocation(line: 159, column: 52, scope: !8922)
!8929 = !DILocation(line: 161, column: 19, scope: !8922)
!8930 = !DILocation(line: 161, column: 26, scope: !8922)
!8931 = !DILocation(line: 404, column: 2, scope: !8932, inlinedAt: !8926)
!8932 = distinct !DILexicalBlock(scope: !8933, file: !8903, line: 404, column: 2)
!8933 = distinct !DILexicalBlock(scope: !8924, file: !8903, line: 404, column: 2)
!8934 = !DILocation(line: 404, column: 2, scope: !8935, inlinedAt: !8926)
!8935 = distinct !DILexicalBlock(scope: !8933, file: !8903, line: 404, column: 2)
!8936 = !{i32 -2145445692}
!8937 = !DILocation(line: 404, column: 2, scope: !8938, inlinedAt: !8926)
!8938 = distinct !DILexicalBlock(scope: !8935, file: !8903, line: 404, column: 2)
!8939 = !DILocation(line: 162, column: 1, scope: !8922)
!8940 = distinct !DISubprogram(name: "arch_local_irq_disable", scope: !8941, file: !8941, line: 656, type: !1828, scopeLine: 657, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !407)
!8941 = !DIFile(filename: "./arch/x86/include/asm/paravirt.h", directory: "/home/lizy2001/genbc/linux")
!8942 = !DILocalVariable(name: "__edi", scope: !8943, file: !8941, line: 658, type: !190)
!8943 = distinct !DILexicalBlock(scope: !8940, file: !8941, line: 658, column: 2)
!8944 = !DILocation(line: 658, column: 2, scope: !8943)
!8945 = !DILocalVariable(name: "__esi", scope: !8943, file: !8941, line: 658, type: !190)
!8946 = !DILocalVariable(name: "__edx", scope: !8943, file: !8941, line: 658, type: !190)
!8947 = !DILocalVariable(name: "__ecx", scope: !8943, file: !8941, line: 658, type: !190)
!8948 = !DILocalVariable(name: "__eax", scope: !8943, file: !8941, line: 658, type: !190)
!8949 = !{i32 -2145611412, i32 -2145610680, i32 -2145610446, i32 -2145610395, i32 -2145610367, i32 -2145610342, i32 -2145610658, i32 -2145610645, i32 -2145610207, i32 -2145610088, i32 -2145610553, i32 -2145610526, i32 -2145610498, i32 -2145610468}
!8950 = !DILocation(line: 659, column: 1, scope: !8940)
!8951 = distinct !DISubprogram(name: "arch_local_irq_enable", scope: !8941, file: !8941, line: 661, type: !1828, scopeLine: 662, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !407)
!8952 = !DILocalVariable(name: "__edi", scope: !8953, file: !8941, line: 663, type: !190)
!8953 = distinct !DILexicalBlock(scope: !8951, file: !8941, line: 663, column: 2)
!8954 = !DILocation(line: 663, column: 2, scope: !8953)
!8955 = !DILocalVariable(name: "__esi", scope: !8953, file: !8941, line: 663, type: !190)
!8956 = !DILocalVariable(name: "__edx", scope: !8953, file: !8941, line: 663, type: !190)
!8957 = !DILocalVariable(name: "__ecx", scope: !8953, file: !8941, line: 663, type: !190)
!8958 = !DILocalVariable(name: "__eax", scope: !8953, file: !8941, line: 663, type: !190)
!8959 = !{i32 -2145608828, i32 -2145608098, i32 -2145607864, i32 -2145607813, i32 -2145607785, i32 -2145607760, i32 -2145608076, i32 -2145608063, i32 -2145607625, i32 -2145607506, i32 -2145607971, i32 -2145607944, i32 -2145607916, i32 -2145607886}
!8960 = !DILocation(line: 664, column: 1, scope: !8951)
!8961 = distinct !DISubprogram(name: "alps_tap_mode", scope: !3, file: !3, line: 1964, type: !7030, scopeLine: 1965, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !407)
!8962 = !DILocalVariable(name: "psmouse", arg: 1, scope: !8961, file: !3, line: 1964, type: !210)
!8963 = !DILocation(line: 1964, column: 42, scope: !8961)
!8964 = !DILocalVariable(name: "enable", arg: 2, scope: !8961, file: !3, line: 1964, type: !262)
!8965 = !DILocation(line: 1964, column: 55, scope: !8961)
!8966 = !DILocalVariable(name: "ps2dev", scope: !8961, file: !3, line: 1966, type: !5945)
!8967 = !DILocation(line: 1966, column: 17, scope: !8961)
!8968 = !DILocation(line: 1966, column: 27, scope: !8961)
!8969 = !DILocation(line: 1966, column: 36, scope: !8961)
!8970 = !DILocalVariable(name: "cmd", scope: !8961, file: !3, line: 1967, type: !262)
!8971 = !DILocation(line: 1967, column: 6, scope: !8961)
!8972 = !DILocation(line: 1967, column: 12, scope: !8961)
!8973 = !DILocalVariable(name: "tap_arg", scope: !8961, file: !3, line: 1968, type: !269)
!8974 = !DILocation(line: 1968, column: 16, scope: !8961)
!8975 = !DILocation(line: 1968, column: 26, scope: !8961)
!8976 = !DILocalVariable(name: "param", scope: !8961, file: !3, line: 1969, type: !5030)
!8977 = !DILocation(line: 1969, column: 16, scope: !8961)
!8978 = !DILocation(line: 1971, column: 18, scope: !8979)
!8979 = distinct !DILexicalBlock(scope: !8961, file: !3, line: 1971, column: 6)
!8980 = !DILocation(line: 1971, column: 26, scope: !8979)
!8981 = !DILocation(line: 1971, column: 6, scope: !8979)
!8982 = !DILocation(line: 1971, column: 54, scope: !8979)
!8983 = !DILocation(line: 1972, column: 18, scope: !8979)
!8984 = !DILocation(line: 1972, column: 6, scope: !8979)
!8985 = !DILocation(line: 1972, column: 53, scope: !8979)
!8986 = !DILocation(line: 1973, column: 18, scope: !8979)
!8987 = !DILocation(line: 1973, column: 6, scope: !8979)
!8988 = !DILocation(line: 1973, column: 53, scope: !8979)
!8989 = !DILocation(line: 1974, column: 18, scope: !8979)
!8990 = !DILocation(line: 1974, column: 36, scope: !8979)
!8991 = !DILocation(line: 1974, column: 6, scope: !8979)
!8992 = !DILocation(line: 1971, column: 6, scope: !8961)
!8993 = !DILocation(line: 1975, column: 3, scope: !8979)
!8994 = !DILocation(line: 1977, column: 22, scope: !8995)
!8995 = distinct !DILexicalBlock(scope: !8961, file: !3, line: 1977, column: 6)
!8996 = !DILocation(line: 1977, column: 31, scope: !8995)
!8997 = !DILocation(line: 1977, column: 6, scope: !8995)
!8998 = !DILocation(line: 1977, column: 6, scope: !8961)
!8999 = !DILocation(line: 1978, column: 3, scope: !8995)
!9000 = !DILocation(line: 1980, column: 2, scope: !8961)
!9001 = !DILocation(line: 1981, column: 1, scope: !8961)
!9002 = distinct !DISubprogram(name: "alps_absolute_mode_v1_v2", scope: !3, file: !3, line: 1853, type: !3962, scopeLine: 1854, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !407)
!9003 = !DILocalVariable(name: "psmouse", arg: 1, scope: !9002, file: !3, line: 1853, type: !210)
!9004 = !DILocation(line: 1853, column: 53, scope: !9002)
!9005 = !DILocalVariable(name: "ps2dev", scope: !9002, file: !3, line: 1855, type: !5945)
!9006 = !DILocation(line: 1855, column: 17, scope: !9002)
!9007 = !DILocation(line: 1855, column: 27, scope: !9002)
!9008 = !DILocation(line: 1855, column: 36, scope: !9002)
!9009 = !DILocation(line: 1858, column: 18, scope: !9010)
!9010 = distinct !DILexicalBlock(scope: !9002, file: !3, line: 1858, column: 6)
!9011 = !DILocation(line: 1858, column: 6, scope: !9010)
!9012 = !DILocation(line: 1858, column: 53, scope: !9010)
!9013 = !DILocation(line: 1859, column: 18, scope: !9010)
!9014 = !DILocation(line: 1859, column: 6, scope: !9010)
!9015 = !DILocation(line: 1859, column: 53, scope: !9010)
!9016 = !DILocation(line: 1860, column: 18, scope: !9010)
!9017 = !DILocation(line: 1860, column: 6, scope: !9010)
!9018 = !DILocation(line: 1860, column: 53, scope: !9010)
!9019 = !DILocation(line: 1861, column: 18, scope: !9010)
!9020 = !DILocation(line: 1861, column: 6, scope: !9010)
!9021 = !DILocation(line: 1861, column: 53, scope: !9010)
!9022 = !DILocation(line: 1862, column: 18, scope: !9010)
!9023 = !DILocation(line: 1862, column: 6, scope: !9010)
!9024 = !DILocation(line: 1858, column: 6, scope: !9002)
!9025 = !DILocation(line: 1863, column: 3, scope: !9010)
!9026 = !DILocation(line: 1869, column: 21, scope: !9002)
!9027 = !DILocation(line: 1869, column: 9, scope: !9002)
!9028 = !DILocation(line: 1869, column: 2, scope: !9002)
!9029 = !DILocation(line: 1870, column: 1, scope: !9002)
!9030 = distinct !DISubprogram(name: "alps_get_status", scope: !3, file: !3, line: 1946, type: !9031, scopeLine: 1947, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !407)
!9031 = !DISubroutineType(types: !9032)
!9032 = !{!262, !210, !545}
!9033 = !DILocalVariable(name: "psmouse", arg: 1, scope: !9030, file: !3, line: 1946, type: !210)
!9034 = !DILocation(line: 1946, column: 44, scope: !9030)
!9035 = !DILocalVariable(name: "param", arg: 2, scope: !9030, file: !3, line: 1946, type: !545)
!9036 = !DILocation(line: 1946, column: 59, scope: !9030)
!9037 = !DILocation(line: 1949, column: 19, scope: !9038)
!9038 = distinct !DILexicalBlock(scope: !9030, file: !3, line: 1949, column: 6)
!9039 = !DILocation(line: 1949, column: 52, scope: !9038)
!9040 = !DILocation(line: 1949, column: 6, scope: !9038)
!9041 = !DILocation(line: 1949, column: 6, scope: !9030)
!9042 = !DILocation(line: 1950, column: 3, scope: !9038)
!9043 = !DILocation(line: 1952, column: 2, scope: !9030)
!9044 = !DILocation(line: 1953, column: 1, scope: !9030)
!9045 = distinct !DISubprogram(name: "input_report_rel", scope: !217, file: !217, line: 420, type: !5910, scopeLine: 421, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !407)
!9046 = !DILocalVariable(name: "dev", arg: 1, scope: !9045, file: !217, line: 420, type: !215)
!9047 = !DILocation(line: 420, column: 55, scope: !9045)
!9048 = !DILocalVariable(name: "code", arg: 2, scope: !9045, file: !217, line: 420, type: !7)
!9049 = !DILocation(line: 420, column: 73, scope: !9045)
!9050 = !DILocalVariable(name: "value", arg: 3, scope: !9045, file: !217, line: 420, type: !262)
!9051 = !DILocation(line: 420, column: 83, scope: !9045)
!9052 = !DILocation(line: 422, column: 14, scope: !9045)
!9053 = !DILocation(line: 422, column: 27, scope: !9045)
!9054 = !DILocation(line: 422, column: 33, scope: !9045)
!9055 = !DILocation(line: 422, column: 2, scope: !9045)
!9056 = !DILocation(line: 423, column: 1, scope: !9045)
!9057 = distinct !DISubprogram(name: "input_report_abs", scope: !217, file: !217, line: 425, type: !5910, scopeLine: 426, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !407)
!9058 = !DILocalVariable(name: "dev", arg: 1, scope: !9057, file: !217, line: 425, type: !215)
!9059 = !DILocation(line: 425, column: 55, scope: !9057)
!9060 = !DILocalVariable(name: "code", arg: 2, scope: !9057, file: !217, line: 425, type: !7)
!9061 = !DILocation(line: 425, column: 73, scope: !9057)
!9062 = !DILocalVariable(name: "value", arg: 3, scope: !9057, file: !217, line: 425, type: !262)
!9063 = !DILocation(line: 425, column: 83, scope: !9057)
!9064 = !DILocation(line: 427, column: 14, scope: !9057)
!9065 = !DILocation(line: 427, column: 27, scope: !9057)
!9066 = !DILocation(line: 427, column: 33, scope: !9057)
!9067 = !DILocation(line: 427, column: 2, scope: !9057)
!9068 = !DILocation(line: 428, column: 1, scope: !9057)
!9069 = distinct !DISubprogram(name: "alps_setup_trackstick_v3", scope: !3, file: !3, line: 2152, type: !7030, scopeLine: 2153, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !407)
!9070 = !DILocalVariable(name: "psmouse", arg: 1, scope: !9069, file: !3, line: 2152, type: !210)
!9071 = !DILocation(line: 2152, column: 53, scope: !9069)
!9072 = !DILocalVariable(name: "reg_base", arg: 2, scope: !9069, file: !3, line: 2152, type: !262)
!9073 = !DILocation(line: 2152, column: 66, scope: !9069)
!9074 = !DILocalVariable(name: "ret", scope: !9069, file: !3, line: 2154, type: !262)
!9075 = !DILocation(line: 2154, column: 6, scope: !9069)
!9076 = !DILocalVariable(name: "reg_val", scope: !9069, file: !3, line: 2155, type: !262)
!9077 = !DILocation(line: 2155, column: 6, scope: !9069)
!9078 = !DILocalVariable(name: "param", scope: !9069, file: !3, line: 2156, type: !5030)
!9079 = !DILocation(line: 2156, column: 16, scope: !9069)
!9080 = !DILocation(line: 2166, column: 31, scope: !9081)
!9081 = distinct !DILexicalBlock(scope: !9069, file: !3, line: 2166, column: 6)
!9082 = !DILocation(line: 2166, column: 40, scope: !9081)
!9083 = !DILocation(line: 2166, column: 6, scope: !9081)
!9084 = !DILocation(line: 2166, column: 6, scope: !9069)
!9085 = !DILocation(line: 2167, column: 3, scope: !9081)
!9086 = !DILocation(line: 2178, column: 19, scope: !9087)
!9087 = distinct !DILexicalBlock(scope: !9069, file: !3, line: 2178, column: 6)
!9088 = !DILocation(line: 2178, column: 55, scope: !9087)
!9089 = !DILocation(line: 2178, column: 6, scope: !9087)
!9090 = !DILocation(line: 2178, column: 6, scope: !9069)
!9091 = !DILocation(line: 2179, column: 3, scope: !9092)
!9092 = distinct !DILexicalBlock(scope: !9087, file: !3, line: 2178, column: 63)
!9093 = !DILocation(line: 2180, column: 7, scope: !9092)
!9094 = !DILocation(line: 2181, column: 2, scope: !9092)
!9095 = !DILocation(line: 2183, column: 49, scope: !9096)
!9096 = distinct !DILexicalBlock(scope: !9097, file: !3, line: 2183, column: 7)
!9097 = distinct !DILexicalBlock(scope: !9087, file: !3, line: 2181, column: 9)
!9098 = !DILocation(line: 2183, column: 7, scope: !9096)
!9099 = !DILocation(line: 2183, column: 7, scope: !9097)
!9100 = !DILocation(line: 2184, column: 4, scope: !9101)
!9101 = distinct !DILexicalBlock(scope: !9096, file: !3, line: 2183, column: 59)
!9102 = !DILocation(line: 2185, column: 8, scope: !9101)
!9103 = !DILocation(line: 2186, column: 3, scope: !9101)
!9104 = !DILocation(line: 2189, column: 31, scope: !9105)
!9105 = distinct !DILexicalBlock(scope: !9069, file: !3, line: 2189, column: 6)
!9106 = !DILocation(line: 2189, column: 40, scope: !9105)
!9107 = !DILocation(line: 2189, column: 6, scope: !9105)
!9108 = !DILocation(line: 2189, column: 6, scope: !9069)
!9109 = !DILocation(line: 2190, column: 3, scope: !9105)
!9110 = !DILocation(line: 2192, column: 6, scope: !9111)
!9111 = distinct !DILexicalBlock(scope: !9069, file: !3, line: 2192, column: 6)
!9112 = !DILocation(line: 2192, column: 6, scope: !9069)
!9113 = !DILocation(line: 2193, column: 10, scope: !9111)
!9114 = !DILocation(line: 2193, column: 3, scope: !9111)
!9115 = !DILocation(line: 2195, column: 30, scope: !9116)
!9116 = distinct !DILexicalBlock(scope: !9069, file: !3, line: 2195, column: 6)
!9117 = !DILocation(line: 2195, column: 6, scope: !9116)
!9118 = !DILocation(line: 2195, column: 6, scope: !9069)
!9119 = !DILocation(line: 2196, column: 3, scope: !9116)
!9120 = !DILocation(line: 2198, column: 39, scope: !9069)
!9121 = !DILocation(line: 2198, column: 48, scope: !9069)
!9122 = !DILocation(line: 2198, column: 57, scope: !9069)
!9123 = !DILocation(line: 2198, column: 12, scope: !9069)
!9124 = !DILocation(line: 2198, column: 10, scope: !9069)
!9125 = !DILocation(line: 2199, column: 6, scope: !9126)
!9126 = distinct !DILexicalBlock(scope: !9069, file: !3, line: 2199, column: 6)
!9127 = !DILocation(line: 2199, column: 14, scope: !9126)
!9128 = !DILocation(line: 2199, column: 6, scope: !9069)
!9129 = !DILocation(line: 2200, column: 7, scope: !9130)
!9130 = distinct !DILexicalBlock(scope: !9126, file: !3, line: 2199, column: 21)
!9131 = !DILocation(line: 2201, column: 2, scope: !9130)
!9132 = !DILocation(line: 2206, column: 11, scope: !9133)
!9133 = distinct !DILexicalBlock(scope: !9126, file: !3, line: 2201, column: 9)
!9134 = !DILocation(line: 2207, column: 37, scope: !9135)
!9135 = distinct !DILexicalBlock(scope: !9133, file: !3, line: 2207, column: 7)
!9136 = !DILocation(line: 2207, column: 46, scope: !9135)
!9137 = !DILocation(line: 2207, column: 7, scope: !9135)
!9138 = !DILocation(line: 2207, column: 7, scope: !9133)
!9139 = !DILocation(line: 2208, column: 8, scope: !9135)
!9140 = !DILocation(line: 2208, column: 4, scope: !9135)
!9141 = !DILocation(line: 2211, column: 29, scope: !9142)
!9142 = distinct !DILexicalBlock(scope: !9069, file: !3, line: 2211, column: 6)
!9143 = !DILocation(line: 2211, column: 6, scope: !9142)
!9144 = !DILocation(line: 2211, column: 6, scope: !9069)
!9145 = !DILocation(line: 2212, column: 3, scope: !9142)
!9146 = !DILocation(line: 2214, column: 9, scope: !9069)
!9147 = !DILocation(line: 2214, column: 2, scope: !9069)
!9148 = !DILocation(line: 2215, column: 1, scope: !9069)
!9149 = distinct !DISubprogram(name: "alps_enter_command_mode", scope: !3, file: !3, line: 1806, type: !3962, scopeLine: 1807, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !407)
!9150 = !DILocalVariable(name: "psmouse", arg: 1, scope: !9149, file: !3, line: 1806, type: !210)
!9151 = !DILocation(line: 1806, column: 52, scope: !9149)
!9152 = !DILocalVariable(name: "param", scope: !9149, file: !3, line: 1808, type: !5030)
!9153 = !DILocation(line: 1808, column: 16, scope: !9149)
!9154 = !DILocation(line: 1810, column: 19, scope: !9155)
!9155 = distinct !DILexicalBlock(scope: !9149, file: !3, line: 1810, column: 6)
!9156 = !DILocation(line: 1810, column: 55, scope: !9155)
!9157 = !DILocation(line: 1810, column: 6, scope: !9155)
!9158 = !DILocation(line: 1810, column: 6, scope: !9149)
!9159 = !DILocation(line: 1811, column: 3, scope: !9160)
!9160 = distinct !DILexicalBlock(scope: !9155, file: !3, line: 1810, column: 63)
!9161 = !DILocation(line: 1812, column: 3, scope: !9160)
!9162 = !DILocation(line: 1815, column: 36, scope: !9163)
!9163 = distinct !DILexicalBlock(scope: !9149, file: !3, line: 1815, column: 6)
!9164 = !DILocation(line: 1815, column: 7, scope: !9163)
!9165 = !DILocation(line: 1815, column: 6, scope: !9149)
!9166 = !DILocation(line: 1818, column: 3, scope: !9167)
!9167 = distinct !DILexicalBlock(scope: !9163, file: !3, line: 1815, column: 44)
!9168 = !DILocation(line: 1820, column: 2, scope: !9149)
!9169 = !DILocation(line: 1821, column: 1, scope: !9149)
!9170 = distinct !DISubprogram(name: "alps_absolute_mode_v3", scope: !3, file: !3, line: 2118, type: !3962, scopeLine: 2119, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !407)
!9171 = !DILocalVariable(name: "psmouse", arg: 1, scope: !9170, file: !3, line: 2118, type: !210)
!9172 = !DILocation(line: 2118, column: 50, scope: !9170)
!9173 = !DILocalVariable(name: "reg_val", scope: !9170, file: !3, line: 2120, type: !262)
!9174 = !DILocation(line: 2120, column: 6, scope: !9170)
!9175 = !DILocation(line: 2122, column: 39, scope: !9170)
!9176 = !DILocation(line: 2122, column: 12, scope: !9170)
!9177 = !DILocation(line: 2122, column: 10, scope: !9170)
!9178 = !DILocation(line: 2123, column: 6, scope: !9179)
!9179 = distinct !DILexicalBlock(scope: !9170, file: !3, line: 2123, column: 6)
!9180 = !DILocation(line: 2123, column: 14, scope: !9179)
!9181 = !DILocation(line: 2123, column: 6, scope: !9170)
!9182 = !DILocation(line: 2124, column: 3, scope: !9179)
!9183 = !DILocation(line: 2126, column: 10, scope: !9170)
!9184 = !DILocation(line: 2127, column: 36, scope: !9185)
!9185 = distinct !DILexicalBlock(scope: !9170, file: !3, line: 2127, column: 6)
!9186 = !DILocation(line: 2127, column: 45, scope: !9185)
!9187 = !DILocation(line: 2127, column: 6, scope: !9185)
!9188 = !DILocation(line: 2127, column: 6, scope: !9170)
!9189 = !DILocation(line: 2128, column: 3, scope: !9185)
!9190 = !DILocation(line: 2130, column: 2, scope: !9170)
!9191 = !DILocation(line: 2131, column: 1, scope: !9170)
!9192 = distinct !DISubprogram(name: "alps_command_mode_read_reg", scope: !3, file: !3, line: 1743, type: !7030, scopeLine: 1744, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !407)
!9193 = !DILocalVariable(name: "psmouse", arg: 1, scope: !9192, file: !3, line: 1743, type: !210)
!9194 = !DILocation(line: 1743, column: 55, scope: !9192)
!9195 = !DILocalVariable(name: "addr", arg: 2, scope: !9192, file: !3, line: 1743, type: !262)
!9196 = !DILocation(line: 1743, column: 68, scope: !9192)
!9197 = !DILocation(line: 1745, column: 33, scope: !9198)
!9198 = distinct !DILexicalBlock(scope: !9192, file: !3, line: 1745, column: 6)
!9199 = !DILocation(line: 1745, column: 42, scope: !9198)
!9200 = !DILocation(line: 1745, column: 6, scope: !9198)
!9201 = !DILocation(line: 1745, column: 6, scope: !9192)
!9202 = !DILocation(line: 1746, column: 3, scope: !9198)
!9203 = !DILocation(line: 1747, column: 38, scope: !9192)
!9204 = !DILocation(line: 1747, column: 47, scope: !9192)
!9205 = !DILocation(line: 1747, column: 9, scope: !9192)
!9206 = !DILocation(line: 1747, column: 2, scope: !9192)
!9207 = !DILocation(line: 1748, column: 1, scope: !9192)
!9208 = distinct !DISubprogram(name: "__alps_command_mode_write_reg", scope: !3, file: !3, line: 1750, type: !9209, scopeLine: 1751, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !407)
!9209 = !DISubroutineType(types: !9210)
!9210 = !{!262, !210, !1307}
!9211 = !DILocalVariable(name: "psmouse", arg: 1, scope: !9208, file: !3, line: 1750, type: !210)
!9212 = !DILocation(line: 1750, column: 58, scope: !9208)
!9213 = !DILocalVariable(name: "value", arg: 2, scope: !9208, file: !3, line: 1750, type: !1307)
!9214 = !DILocation(line: 1750, column: 70, scope: !9208)
!9215 = !DILocation(line: 1752, column: 36, scope: !9216)
!9216 = distinct !DILexicalBlock(scope: !9208, file: !3, line: 1752, column: 6)
!9217 = !DILocation(line: 1752, column: 46, scope: !9216)
!9218 = !DILocation(line: 1752, column: 52, scope: !9216)
!9219 = !DILocation(line: 1752, column: 58, scope: !9216)
!9220 = !DILocation(line: 1752, column: 6, scope: !9216)
!9221 = !DILocation(line: 1752, column: 6, scope: !9208)
!9222 = !DILocation(line: 1753, column: 3, scope: !9216)
!9223 = !DILocation(line: 1754, column: 36, scope: !9224)
!9224 = distinct !DILexicalBlock(scope: !9208, file: !3, line: 1754, column: 6)
!9225 = !DILocation(line: 1754, column: 45, scope: !9224)
!9226 = !DILocation(line: 1754, column: 51, scope: !9224)
!9227 = !DILocation(line: 1754, column: 6, scope: !9224)
!9228 = !DILocation(line: 1754, column: 6, scope: !9208)
!9229 = !DILocation(line: 1755, column: 3, scope: !9224)
!9230 = !DILocation(line: 1756, column: 2, scope: !9208)
!9231 = !DILocation(line: 1757, column: 1, scope: !9208)
!9232 = distinct !DISubprogram(name: "alps_command_mode_write_reg", scope: !3, file: !3, line: 1759, type: !9233, scopeLine: 1761, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !407)
!9233 = !DISubroutineType(types: !9234)
!9234 = !{!262, !210, !262, !1307}
!9235 = !DILocalVariable(name: "psmouse", arg: 1, scope: !9232, file: !3, line: 1759, type: !210)
!9236 = !DILocation(line: 1759, column: 56, scope: !9232)
!9237 = !DILocalVariable(name: "addr", arg: 2, scope: !9232, file: !3, line: 1759, type: !262)
!9238 = !DILocation(line: 1759, column: 69, scope: !9232)
!9239 = !DILocalVariable(name: "value", arg: 3, scope: !9232, file: !3, line: 1760, type: !1307)
!9240 = !DILocation(line: 1760, column: 15, scope: !9232)
!9241 = !DILocation(line: 1762, column: 33, scope: !9242)
!9242 = distinct !DILexicalBlock(scope: !9232, file: !3, line: 1762, column: 6)
!9243 = !DILocation(line: 1762, column: 42, scope: !9242)
!9244 = !DILocation(line: 1762, column: 6, scope: !9242)
!9245 = !DILocation(line: 1762, column: 6, scope: !9232)
!9246 = !DILocation(line: 1763, column: 3, scope: !9242)
!9247 = !DILocation(line: 1764, column: 39, scope: !9232)
!9248 = !DILocation(line: 1764, column: 48, scope: !9232)
!9249 = !DILocation(line: 1764, column: 9, scope: !9232)
!9250 = !DILocation(line: 1764, column: 2, scope: !9232)
!9251 = !DILocation(line: 1765, column: 1, scope: !9232)
!9252 = distinct !DISubprogram(name: "alps_passthrough_mode_v3", scope: !3, file: !3, line: 2092, type: !9253, scopeLine: 2094, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !407)
!9253 = !DISubroutineType(types: !9254)
!9254 = !{!262, !210, !262, !550}
!9255 = !DILocalVariable(name: "psmouse", arg: 1, scope: !9252, file: !3, line: 2092, type: !210)
!9256 = !DILocation(line: 2092, column: 53, scope: !9252)
!9257 = !DILocalVariable(name: "reg_base", arg: 2, scope: !9252, file: !3, line: 2093, type: !262)
!9258 = !DILocation(line: 2093, column: 13, scope: !9252)
!9259 = !DILocalVariable(name: "enable", arg: 3, scope: !9252, file: !3, line: 2093, type: !550)
!9260 = !DILocation(line: 2093, column: 28, scope: !9252)
!9261 = !DILocalVariable(name: "reg_val", scope: !9252, file: !3, line: 2095, type: !262)
!9262 = !DILocation(line: 2095, column: 6, scope: !9252)
!9263 = !DILocalVariable(name: "ret", scope: !9252, file: !3, line: 2095, type: !262)
!9264 = !DILocation(line: 2095, column: 15, scope: !9252)
!9265 = !DILocation(line: 2097, column: 30, scope: !9266)
!9266 = distinct !DILexicalBlock(scope: !9252, file: !3, line: 2097, column: 6)
!9267 = !DILocation(line: 2097, column: 6, scope: !9266)
!9268 = !DILocation(line: 2097, column: 6, scope: !9252)
!9269 = !DILocation(line: 2098, column: 3, scope: !9266)
!9270 = !DILocation(line: 2100, column: 39, scope: !9252)
!9271 = !DILocation(line: 2100, column: 48, scope: !9252)
!9272 = !DILocation(line: 2100, column: 57, scope: !9252)
!9273 = !DILocation(line: 2100, column: 12, scope: !9252)
!9274 = !DILocation(line: 2100, column: 10, scope: !9252)
!9275 = !DILocation(line: 2101, column: 6, scope: !9276)
!9276 = distinct !DILexicalBlock(scope: !9252, file: !3, line: 2101, column: 6)
!9277 = !DILocation(line: 2101, column: 14, scope: !9276)
!9278 = !DILocation(line: 2101, column: 6, scope: !9252)
!9279 = !DILocation(line: 2102, column: 3, scope: !9276)
!9280 = !DILocation(line: 2104, column: 6, scope: !9281)
!9281 = distinct !DILexicalBlock(scope: !9252, file: !3, line: 2104, column: 6)
!9282 = !DILocation(line: 2104, column: 6, scope: !9252)
!9283 = !DILocation(line: 2105, column: 11, scope: !9281)
!9284 = !DILocation(line: 2105, column: 3, scope: !9281)
!9285 = !DILocation(line: 2107, column: 11, scope: !9281)
!9286 = !DILocation(line: 2109, column: 38, scope: !9252)
!9287 = !DILocation(line: 2109, column: 47, scope: !9252)
!9288 = !DILocation(line: 2109, column: 8, scope: !9252)
!9289 = !DILocation(line: 2109, column: 6, scope: !9252)
!9290 = !DILocation(line: 2109, column: 2, scope: !9252)
!9291 = !DILabel(scope: !9252, name: "error", file: !3, line: 2111)
!9292 = !DILocation(line: 2111, column: 1, scope: !9252)
!9293 = !DILocation(line: 2112, column: 29, scope: !9294)
!9294 = distinct !DILexicalBlock(scope: !9252, file: !3, line: 2112, column: 6)
!9295 = !DILocation(line: 2112, column: 6, scope: !9294)
!9296 = !DILocation(line: 2112, column: 6, scope: !9252)
!9297 = !DILocation(line: 2113, column: 7, scope: !9294)
!9298 = !DILocation(line: 2113, column: 3, scope: !9294)
!9299 = !DILocation(line: 2114, column: 9, scope: !9252)
!9300 = !DILocation(line: 2114, column: 2, scope: !9252)
!9301 = !DILocation(line: 2115, column: 1, scope: !9252)
!9302 = distinct !DISubprogram(name: "alps_trackstick_enter_extended_mode_v3_v6", scope: !3, file: !3, line: 2051, type: !3962, scopeLine: 2052, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !407)
!9303 = !DILocalVariable(name: "psmouse", arg: 1, scope: !9302, file: !3, line: 2051, type: !210)
!9304 = !DILocation(line: 2051, column: 70, scope: !9302)
!9305 = !DILocalVariable(name: "param", scope: !9302, file: !3, line: 2053, type: !7549)
!9306 = !DILocation(line: 2053, column: 16, scope: !9302)
!9307 = !DILocation(line: 2055, column: 19, scope: !9308)
!9308 = distinct !DILexicalBlock(scope: !9302, file: !3, line: 2055, column: 6)
!9309 = !DILocation(line: 2055, column: 28, scope: !9308)
!9310 = !DILocation(line: 2055, column: 6, scope: !9308)
!9311 = !DILocation(line: 2055, column: 66, scope: !9308)
!9312 = !DILocation(line: 2056, column: 19, scope: !9308)
!9313 = !DILocation(line: 2056, column: 28, scope: !9308)
!9314 = !DILocation(line: 2056, column: 6, scope: !9308)
!9315 = !DILocation(line: 2056, column: 66, scope: !9308)
!9316 = !DILocation(line: 2057, column: 19, scope: !9308)
!9317 = !DILocation(line: 2057, column: 28, scope: !9308)
!9318 = !DILocation(line: 2057, column: 6, scope: !9308)
!9319 = !DILocation(line: 2057, column: 66, scope: !9308)
!9320 = !DILocation(line: 2058, column: 19, scope: !9308)
!9321 = !DILocation(line: 2058, column: 28, scope: !9308)
!9322 = !DILocation(line: 2058, column: 37, scope: !9308)
!9323 = !DILocation(line: 2058, column: 6, scope: !9308)
!9324 = !DILocation(line: 2058, column: 68, scope: !9308)
!9325 = !DILocation(line: 2059, column: 19, scope: !9308)
!9326 = !DILocation(line: 2059, column: 28, scope: !9308)
!9327 = !DILocation(line: 2059, column: 37, scope: !9308)
!9328 = !DILocation(line: 2059, column: 6, scope: !9308)
!9329 = !DILocation(line: 2055, column: 6, scope: !9302)
!9330 = !DILocation(line: 2060, column: 3, scope: !9308)
!9331 = !DILocation(line: 2062, column: 2, scope: !9302)
!9332 = !DILocation(line: 2063, column: 1, scope: !9302)
!9333 = distinct !DISubprogram(name: "alps_check_valid_firmware_id", scope: !3, file: !3, line: 1790, type: !9334, scopeLine: 1791, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !407)
!9334 = !DISubroutineType(types: !9335)
!9335 = !{!550, !4063}
!9336 = !DILocalVariable(name: "id", arg: 1, scope: !9333, file: !3, line: 1790, type: !4063)
!9337 = !DILocation(line: 1790, column: 56, scope: !9333)
!9338 = !DILocation(line: 1792, column: 6, scope: !9339)
!9339 = distinct !DILexicalBlock(scope: !9333, file: !3, line: 1792, column: 6)
!9340 = !DILocation(line: 1792, column: 12, scope: !9339)
!9341 = !DILocation(line: 1792, column: 6, scope: !9333)
!9342 = !DILocation(line: 1793, column: 3, scope: !9339)
!9343 = !DILocation(line: 1795, column: 6, scope: !9344)
!9344 = distinct !DILexicalBlock(scope: !9333, file: !3, line: 1795, column: 6)
!9345 = !DILocation(line: 1795, column: 12, scope: !9344)
!9346 = !DILocation(line: 1795, column: 20, scope: !9344)
!9347 = !DILocation(line: 1796, column: 7, scope: !9344)
!9348 = !DILocation(line: 1796, column: 13, scope: !9344)
!9349 = !DILocation(line: 1796, column: 21, scope: !9344)
!9350 = !DILocation(line: 1797, column: 7, scope: !9344)
!9351 = !DILocation(line: 1797, column: 13, scope: !9344)
!9352 = !DILocation(line: 1797, column: 21, scope: !9344)
!9353 = !DILocation(line: 1798, column: 8, scope: !9344)
!9354 = !DILocation(line: 1798, column: 14, scope: !9344)
!9355 = !DILocation(line: 1798, column: 22, scope: !9344)
!9356 = !DILocation(line: 1798, column: 30, scope: !9344)
!9357 = !DILocation(line: 1799, column: 8, scope: !9344)
!9358 = !DILocation(line: 1799, column: 14, scope: !9344)
!9359 = !DILocation(line: 1799, column: 22, scope: !9344)
!9360 = !DILocation(line: 1795, column: 6, scope: !9333)
!9361 = !DILocation(line: 1800, column: 3, scope: !9362)
!9362 = distinct !DILexicalBlock(scope: !9344, file: !3, line: 1799, column: 32)
!9363 = !DILocation(line: 1803, column: 2, scope: !9333)
!9364 = !DILocation(line: 1804, column: 1, scope: !9333)
!9365 = distinct !DISubprogram(name: "alps_command_mode_set_addr", scope: !3, file: !3, line: 1706, type: !7030, scopeLine: 1707, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !407)
!9366 = !DILocalVariable(name: "psmouse", arg: 1, scope: !9365, file: !3, line: 1706, type: !210)
!9367 = !DILocation(line: 1706, column: 55, scope: !9365)
!9368 = !DILocalVariable(name: "addr", arg: 2, scope: !9365, file: !3, line: 1706, type: !262)
!9369 = !DILocation(line: 1706, column: 68, scope: !9365)
!9370 = !DILocalVariable(name: "ps2dev", scope: !9365, file: !3, line: 1708, type: !5945)
!9371 = !DILocation(line: 1708, column: 17, scope: !9365)
!9372 = !DILocation(line: 1708, column: 27, scope: !9365)
!9373 = !DILocation(line: 1708, column: 36, scope: !9365)
!9374 = !DILocalVariable(name: "priv", scope: !9365, file: !3, line: 1709, type: !206)
!9375 = !DILocation(line: 1709, column: 20, scope: !9365)
!9376 = !DILocation(line: 1709, column: 27, scope: !9365)
!9377 = !DILocation(line: 1709, column: 36, scope: !9365)
!9378 = !DILocalVariable(name: "i", scope: !9365, file: !3, line: 1710, type: !262)
!9379 = !DILocation(line: 1710, column: 6, scope: !9365)
!9380 = !DILocalVariable(name: "nibble", scope: !9365, file: !3, line: 1710, type: !262)
!9381 = !DILocation(line: 1710, column: 9, scope: !9365)
!9382 = !DILocation(line: 1712, column: 18, scope: !9383)
!9383 = distinct !DILexicalBlock(scope: !9365, file: !3, line: 1712, column: 6)
!9384 = !DILocation(line: 1712, column: 32, scope: !9383)
!9385 = !DILocation(line: 1712, column: 38, scope: !9383)
!9386 = !DILocation(line: 1712, column: 6, scope: !9383)
!9387 = !DILocation(line: 1712, column: 6, scope: !9365)
!9388 = !DILocation(line: 1713, column: 3, scope: !9383)
!9389 = !DILocation(line: 1715, column: 9, scope: !9390)
!9390 = distinct !DILexicalBlock(scope: !9365, file: !3, line: 1715, column: 2)
!9391 = !DILocation(line: 1715, column: 7, scope: !9390)
!9392 = !DILocation(line: 1715, column: 15, scope: !9393)
!9393 = distinct !DILexicalBlock(scope: !9390, file: !3, line: 1715, column: 2)
!9394 = !DILocation(line: 1715, column: 17, scope: !9393)
!9395 = !DILocation(line: 1715, column: 2, scope: !9390)
!9396 = !DILocation(line: 1716, column: 13, scope: !9397)
!9397 = distinct !DILexicalBlock(scope: !9393, file: !3, line: 1715, column: 31)
!9398 = !DILocation(line: 1716, column: 21, scope: !9397)
!9399 = !DILocation(line: 1716, column: 18, scope: !9397)
!9400 = !DILocation(line: 1716, column: 24, scope: !9397)
!9401 = !DILocation(line: 1716, column: 10, scope: !9397)
!9402 = !DILocation(line: 1717, column: 37, scope: !9403)
!9403 = distinct !DILexicalBlock(scope: !9397, file: !3, line: 1717, column: 7)
!9404 = !DILocation(line: 1717, column: 46, scope: !9403)
!9405 = !DILocation(line: 1717, column: 7, scope: !9403)
!9406 = !DILocation(line: 1717, column: 7, scope: !9397)
!9407 = !DILocation(line: 1718, column: 4, scope: !9403)
!9408 = !DILocation(line: 1719, column: 2, scope: !9397)
!9409 = !DILocation(line: 1715, column: 25, scope: !9393)
!9410 = !DILocation(line: 1715, column: 2, scope: !9393)
!9411 = distinct !{!9411, !9395, !9412}
!9412 = !DILocation(line: 1719, column: 2, scope: !9390)
!9413 = !DILocation(line: 1721, column: 2, scope: !9365)
!9414 = !DILocation(line: 1722, column: 1, scope: !9365)
!9415 = distinct !DISubprogram(name: "__alps_command_mode_read_reg", scope: !3, file: !3, line: 1724, type: !7030, scopeLine: 1725, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !407)
!9416 = !DILocalVariable(name: "psmouse", arg: 1, scope: !9415, file: !3, line: 1724, type: !210)
!9417 = !DILocation(line: 1724, column: 57, scope: !9415)
!9418 = !DILocalVariable(name: "addr", arg: 2, scope: !9415, file: !3, line: 1724, type: !262)
!9419 = !DILocation(line: 1724, column: 70, scope: !9415)
!9420 = !DILocalVariable(name: "ps2dev", scope: !9415, file: !3, line: 1726, type: !5945)
!9421 = !DILocation(line: 1726, column: 17, scope: !9415)
!9422 = !DILocation(line: 1726, column: 27, scope: !9415)
!9423 = !DILocation(line: 1726, column: 36, scope: !9415)
!9424 = !DILocalVariable(name: "param", scope: !9415, file: !3, line: 1727, type: !5030)
!9425 = !DILocation(line: 1727, column: 16, scope: !9415)
!9426 = !DILocation(line: 1729, column: 18, scope: !9427)
!9427 = distinct !DILexicalBlock(scope: !9415, file: !3, line: 1729, column: 6)
!9428 = !DILocation(line: 1729, column: 26, scope: !9427)
!9429 = !DILocation(line: 1729, column: 6, scope: !9427)
!9430 = !DILocation(line: 1729, column: 6, scope: !9415)
!9431 = !DILocation(line: 1730, column: 3, scope: !9427)
!9432 = !DILocation(line: 1737, column: 6, scope: !9433)
!9433 = distinct !DILexicalBlock(scope: !9415, file: !3, line: 1737, column: 6)
!9434 = !DILocation(line: 1737, column: 16, scope: !9433)
!9435 = !DILocation(line: 1737, column: 25, scope: !9433)
!9436 = !DILocation(line: 1737, column: 33, scope: !9433)
!9437 = !DILocation(line: 1737, column: 31, scope: !9433)
!9438 = !DILocation(line: 1737, column: 11, scope: !9433)
!9439 = !DILocation(line: 1737, column: 6, scope: !9415)
!9440 = !DILocation(line: 1738, column: 3, scope: !9433)
!9441 = !DILocation(line: 1740, column: 9, scope: !9415)
!9442 = !DILocation(line: 1740, column: 2, scope: !9415)
!9443 = !DILocation(line: 1741, column: 1, scope: !9415)
!9444 = distinct !DISubprogram(name: "alps_command_mode_send_nibble", scope: !3, file: !3, line: 1686, type: !7030, scopeLine: 1687, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !407)
!9445 = !DILocalVariable(name: "psmouse", arg: 1, scope: !9444, file: !3, line: 1686, type: !210)
!9446 = !DILocation(line: 1686, column: 58, scope: !9444)
!9447 = !DILocalVariable(name: "nibble", arg: 2, scope: !9444, file: !3, line: 1686, type: !262)
!9448 = !DILocation(line: 1686, column: 71, scope: !9444)
!9449 = !DILocalVariable(name: "ps2dev", scope: !9444, file: !3, line: 1688, type: !5945)
!9450 = !DILocation(line: 1688, column: 17, scope: !9444)
!9451 = !DILocation(line: 1688, column: 27, scope: !9444)
!9452 = !DILocation(line: 1688, column: 36, scope: !9444)
!9453 = !DILocalVariable(name: "priv", scope: !9444, file: !3, line: 1689, type: !206)
!9454 = !DILocation(line: 1689, column: 20, scope: !9444)
!9455 = !DILocation(line: 1689, column: 27, scope: !9444)
!9456 = !DILocation(line: 1689, column: 36, scope: !9444)
!9457 = !DILocalVariable(name: "command", scope: !9444, file: !3, line: 1690, type: !262)
!9458 = !DILocation(line: 1690, column: 6, scope: !9444)
!9459 = !DILocalVariable(name: "param", scope: !9444, file: !3, line: 1691, type: !4063)
!9460 = !DILocation(line: 1691, column: 17, scope: !9444)
!9461 = !DILocalVariable(name: "dummy", scope: !9444, file: !3, line: 1692, type: !5030)
!9462 = !DILocation(line: 1692, column: 16, scope: !9444)
!9463 = !DILocation(line: 1694, column: 2, scope: !9444)
!9464 = !DILocation(line: 1694, column: 2, scope: !9465)
!9465 = distinct !DILexicalBlock(scope: !9466, file: !3, line: 1694, column: 2)
!9466 = distinct !DILexicalBlock(scope: !9444, file: !3, line: 1694, column: 2)
!9467 = !DILocation(line: 1694, column: 2, scope: !9466)
!9468 = !DILocation(line: 1694, column: 2, scope: !9469)
!9469 = distinct !DILexicalBlock(scope: !9465, file: !3, line: 1694, column: 2)
!9470 = !DILocation(line: 1694, column: 2, scope: !9471)
!9471 = distinct !DILexicalBlock(scope: !9469, file: !3, line: 1694, column: 2)
!9472 = !DILocation(line: 1694, column: 2, scope: !9473)
!9473 = distinct !DILexicalBlock(scope: !9469, file: !3, line: 1694, column: 2)
!9474 = !{i32 -2142712462, i32 -2142712433, i32 -2142712387, i32 -2142712329, i32 -2142712275, i32 -2142712221, i32 -2142712166, i32 -2142712135}
!9475 = !DILocation(line: 1694, column: 2, scope: !9476)
!9476 = distinct !DILexicalBlock(scope: !9477, file: !3, line: 1694, column: 2)
!9477 = distinct !DILexicalBlock(scope: !9469, file: !3, line: 1694, column: 2)
!9478 = !{i32 -2142711685, i32 -2142711678, i32 -2142711624, i32 -2142711593, i32 -2142711563}
!9479 = !DILocation(line: 1694, column: 2, scope: !9477)
!9480 = !DILocation(line: 1696, column: 12, scope: !9444)
!9481 = !DILocation(line: 1696, column: 18, scope: !9444)
!9482 = !DILocation(line: 1696, column: 34, scope: !9444)
!9483 = !DILocation(line: 1696, column: 42, scope: !9444)
!9484 = !DILocation(line: 1696, column: 10, scope: !9444)
!9485 = !DILocation(line: 1697, column: 11, scope: !9444)
!9486 = !DILocation(line: 1697, column: 19, scope: !9444)
!9487 = !DILocation(line: 1697, column: 10, scope: !9444)
!9488 = !DILocation(line: 1698, column: 3, scope: !9444)
!9489 = !DILocation(line: 1698, column: 29, scope: !9444)
!9490 = !DILocation(line: 1698, column: 35, scope: !9444)
!9491 = !DILocation(line: 1698, column: 51, scope: !9444)
!9492 = !DILocation(line: 1698, column: 59, scope: !9444)
!9493 = !DILocation(line: 1697, column: 8, scope: !9444)
!9494 = !DILocation(line: 1700, column: 18, scope: !9495)
!9495 = distinct !DILexicalBlock(scope: !9444, file: !3, line: 1700, column: 6)
!9496 = !DILocation(line: 1700, column: 26, scope: !9495)
!9497 = !DILocation(line: 1700, column: 33, scope: !9495)
!9498 = !DILocation(line: 1700, column: 6, scope: !9495)
!9499 = !DILocation(line: 1700, column: 6, scope: !9444)
!9500 = !DILocation(line: 1701, column: 3, scope: !9495)
!9501 = !DILocation(line: 1703, column: 2, scope: !9444)
!9502 = !DILocation(line: 1704, column: 1, scope: !9444)
!9503 = distinct !DISubprogram(name: "alps_process_trackstick_packet_v3", scope: !3, file: !3, line: 555, type: !4003, scopeLine: 556, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !407)
!9504 = !DILocalVariable(name: "psmouse", arg: 1, scope: !9503, file: !3, line: 555, type: !210)
!9505 = !DILocation(line: 555, column: 63, scope: !9503)
!9506 = !DILocalVariable(name: "priv", scope: !9503, file: !3, line: 557, type: !206)
!9507 = !DILocation(line: 557, column: 20, scope: !9503)
!9508 = !DILocation(line: 557, column: 27, scope: !9503)
!9509 = !DILocation(line: 557, column: 36, scope: !9503)
!9510 = !DILocalVariable(name: "packet", scope: !9503, file: !3, line: 558, type: !4063)
!9511 = !DILocation(line: 558, column: 17, scope: !9503)
!9512 = !DILocation(line: 558, column: 26, scope: !9503)
!9513 = !DILocation(line: 558, column: 35, scope: !9503)
!9514 = !DILocalVariable(name: "dev", scope: !9503, file: !3, line: 559, type: !215)
!9515 = !DILocation(line: 559, column: 20, scope: !9503)
!9516 = !DILocation(line: 559, column: 26, scope: !9503)
!9517 = !DILocation(line: 559, column: 32, scope: !9503)
!9518 = !DILocalVariable(name: "x", scope: !9503, file: !3, line: 560, type: !262)
!9519 = !DILocation(line: 560, column: 6, scope: !9503)
!9520 = !DILocalVariable(name: "y", scope: !9503, file: !3, line: 560, type: !262)
!9521 = !DILocation(line: 560, column: 9, scope: !9503)
!9522 = !DILocalVariable(name: "z", scope: !9503, file: !3, line: 560, type: !262)
!9523 = !DILocation(line: 560, column: 12, scope: !9503)
!9524 = !DILocalVariable(name: "left", scope: !9503, file: !3, line: 560, type: !262)
!9525 = !DILocation(line: 560, column: 15, scope: !9503)
!9526 = !DILocalVariable(name: "right", scope: !9503, file: !3, line: 560, type: !262)
!9527 = !DILocation(line: 560, column: 21, scope: !9503)
!9528 = !DILocalVariable(name: "middle", scope: !9503, file: !3, line: 560, type: !262)
!9529 = !DILocation(line: 560, column: 28, scope: !9503)
!9530 = !DILocation(line: 563, column: 8, scope: !9531)
!9531 = distinct !DILexicalBlock(scope: !9503, file: !3, line: 563, column: 6)
!9532 = !DILocation(line: 563, column: 14, scope: !9531)
!9533 = !DILocation(line: 563, column: 20, scope: !9531)
!9534 = !DILocation(line: 563, column: 6, scope: !9503)
!9535 = !DILocation(line: 564, column: 3, scope: !9536)
!9536 = distinct !DILexicalBlock(scope: !9531, file: !3, line: 563, column: 39)
!9537 = !DILocation(line: 566, column: 3, scope: !9536)
!9538 = !DILocation(line: 570, column: 8, scope: !9539)
!9539 = distinct !DILexicalBlock(scope: !9503, file: !3, line: 570, column: 6)
!9540 = !DILocation(line: 570, column: 18, scope: !9539)
!9541 = !DILocation(line: 570, column: 6, scope: !9503)
!9542 = !DILocation(line: 572, column: 3, scope: !9543)
!9543 = distinct !DILexicalBlock(scope: !9539, file: !3, line: 570, column: 27)
!9544 = !DILocation(line: 579, column: 6, scope: !9545)
!9545 = distinct !DILexicalBlock(scope: !9503, file: !3, line: 579, column: 6)
!9546 = !DILocation(line: 579, column: 16, scope: !9545)
!9547 = !DILocation(line: 579, column: 24, scope: !9545)
!9548 = !DILocation(line: 579, column: 27, scope: !9545)
!9549 = !DILocation(line: 579, column: 37, scope: !9545)
!9550 = !DILocation(line: 579, column: 45, scope: !9545)
!9551 = !DILocation(line: 579, column: 48, scope: !9545)
!9552 = !DILocation(line: 579, column: 58, scope: !9545)
!9553 = !DILocation(line: 579, column: 6, scope: !9503)
!9554 = !DILocation(line: 580, column: 3, scope: !9545)
!9555 = !DILocation(line: 582, column: 13, scope: !9503)
!9556 = !DILocation(line: 582, column: 23, scope: !9503)
!9557 = !DILocation(line: 582, column: 31, scope: !9503)
!9558 = !DILocation(line: 582, column: 40, scope: !9503)
!9559 = !DILocation(line: 582, column: 50, scope: !9503)
!9560 = !DILocation(line: 582, column: 37, scope: !9503)
!9561 = !DILocation(line: 582, column: 6, scope: !9503)
!9562 = !DILocation(line: 582, column: 4, scope: !9503)
!9563 = !DILocation(line: 583, column: 13, scope: !9503)
!9564 = !DILocation(line: 583, column: 23, scope: !9503)
!9565 = !DILocation(line: 583, column: 31, scope: !9503)
!9566 = !DILocation(line: 583, column: 40, scope: !9503)
!9567 = !DILocation(line: 583, column: 50, scope: !9503)
!9568 = !DILocation(line: 583, column: 37, scope: !9503)
!9569 = !DILocation(line: 583, column: 6, scope: !9503)
!9570 = !DILocation(line: 583, column: 4, scope: !9503)
!9571 = !DILocation(line: 584, column: 6, scope: !9503)
!9572 = !DILocation(line: 584, column: 16, scope: !9503)
!9573 = !DILocation(line: 584, column: 4, scope: !9503)
!9574 = !DILocation(line: 591, column: 4, scope: !9503)
!9575 = !DILocation(line: 592, column: 4, scope: !9503)
!9576 = !DILocation(line: 594, column: 19, scope: !9503)
!9577 = !DILocation(line: 594, column: 31, scope: !9503)
!9578 = !DILocation(line: 594, column: 2, scope: !9503)
!9579 = !DILocation(line: 595, column: 19, scope: !9503)
!9580 = !DILocation(line: 595, column: 32, scope: !9503)
!9581 = !DILocation(line: 595, column: 31, scope: !9503)
!9582 = !DILocation(line: 595, column: 2, scope: !9503)
!9583 = !DILocation(line: 596, column: 19, scope: !9503)
!9584 = !DILocation(line: 596, column: 38, scope: !9503)
!9585 = !DILocation(line: 596, column: 2, scope: !9503)
!9586 = !DILocation(line: 605, column: 9, scope: !9503)
!9587 = !DILocation(line: 605, column: 19, scope: !9503)
!9588 = !DILocation(line: 605, column: 7, scope: !9503)
!9589 = !DILocation(line: 606, column: 10, scope: !9503)
!9590 = !DILocation(line: 606, column: 20, scope: !9503)
!9591 = !DILocation(line: 606, column: 8, scope: !9503)
!9592 = !DILocation(line: 607, column: 11, scope: !9503)
!9593 = !DILocation(line: 607, column: 21, scope: !9503)
!9594 = !DILocation(line: 607, column: 9, scope: !9503)
!9595 = !DILocation(line: 609, column: 8, scope: !9596)
!9596 = distinct !DILexicalBlock(scope: !9503, file: !3, line: 609, column: 6)
!9597 = !DILocation(line: 609, column: 14, scope: !9596)
!9598 = !DILocation(line: 609, column: 21, scope: !9596)
!9599 = !DILocation(line: 609, column: 54, scope: !9596)
!9600 = !DILocation(line: 610, column: 7, scope: !9596)
!9601 = !DILocation(line: 610, column: 12, scope: !9596)
!9602 = !DILocation(line: 610, column: 15, scope: !9596)
!9603 = !DILocation(line: 610, column: 21, scope: !9596)
!9604 = !DILocation(line: 610, column: 24, scope: !9596)
!9605 = !DILocation(line: 609, column: 6, scope: !9503)
!9606 = !DILocation(line: 611, column: 3, scope: !9596)
!9607 = !DILocation(line: 611, column: 9, scope: !9596)
!9608 = !DILocation(line: 611, column: 16, scope: !9596)
!9609 = !DILocation(line: 613, column: 6, scope: !9610)
!9610 = distinct !DILexicalBlock(scope: !9503, file: !3, line: 613, column: 6)
!9611 = !DILocation(line: 613, column: 12, scope: !9610)
!9612 = !DILocation(line: 613, column: 19, scope: !9610)
!9613 = !DILocation(line: 613, column: 6, scope: !9503)
!9614 = !DILocation(line: 614, column: 20, scope: !9615)
!9615 = distinct !DILexicalBlock(scope: !9610, file: !3, line: 613, column: 52)
!9616 = !DILocation(line: 614, column: 35, scope: !9615)
!9617 = !DILocation(line: 614, column: 3, scope: !9615)
!9618 = !DILocation(line: 615, column: 20, scope: !9615)
!9619 = !DILocation(line: 615, column: 36, scope: !9615)
!9620 = !DILocation(line: 615, column: 3, scope: !9615)
!9621 = !DILocation(line: 616, column: 20, scope: !9615)
!9622 = !DILocation(line: 616, column: 37, scope: !9615)
!9623 = !DILocation(line: 616, column: 3, scope: !9615)
!9624 = !DILocation(line: 617, column: 2, scope: !9615)
!9625 = !DILocation(line: 619, column: 13, scope: !9503)
!9626 = !DILocation(line: 619, column: 2, scope: !9503)
!9627 = !DILocation(line: 620, column: 2, scope: !9503)
!9628 = !DILocation(line: 621, column: 1, scope: !9503)
!9629 = distinct !DISubprogram(name: "alps_set_abs_params_mt_common", scope: !3, file: !3, line: 2989, type: !4066, scopeLine: 2991, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !407)
!9630 = !DILocalVariable(name: "priv", arg: 1, scope: !9629, file: !3, line: 2989, type: !206)
!9631 = !DILocation(line: 2989, column: 61, scope: !9629)
!9632 = !DILocalVariable(name: "dev1", arg: 2, scope: !9629, file: !3, line: 2990, type: !215)
!9633 = !DILocation(line: 2990, column: 26, scope: !9629)
!9634 = !DILocation(line: 2992, column: 23, scope: !9629)
!9635 = !DILocation(line: 2992, column: 51, scope: !9629)
!9636 = !DILocation(line: 2992, column: 57, scope: !9629)
!9637 = !DILocation(line: 2992, column: 2, scope: !9629)
!9638 = !DILocation(line: 2993, column: 23, scope: !9629)
!9639 = !DILocation(line: 2993, column: 51, scope: !9629)
!9640 = !DILocation(line: 2993, column: 57, scope: !9629)
!9641 = !DILocation(line: 2993, column: 2, scope: !9629)
!9642 = !DILocation(line: 2995, column: 20, scope: !9629)
!9643 = !DILocation(line: 2995, column: 45, scope: !9629)
!9644 = !DILocation(line: 2995, column: 51, scope: !9629)
!9645 = !DILocation(line: 2995, column: 2, scope: !9629)
!9646 = !DILocation(line: 2996, column: 20, scope: !9629)
!9647 = !DILocation(line: 2996, column: 45, scope: !9629)
!9648 = !DILocation(line: 2996, column: 51, scope: !9629)
!9649 = !DILocation(line: 2996, column: 2, scope: !9629)
!9650 = !DILocation(line: 2998, column: 30, scope: !9629)
!9651 = !DILocation(line: 2998, column: 36, scope: !9629)
!9652 = !DILocation(line: 2998, column: 2, scope: !9629)
!9653 = !DILocation(line: 2999, column: 28, scope: !9629)
!9654 = !DILocation(line: 2999, column: 34, scope: !9629)
!9655 = !DILocation(line: 2999, column: 2, scope: !9629)
!9656 = !DILocation(line: 3000, column: 1, scope: !9629)
!9657 = distinct !DISubprogram(name: "input_abs_set_res", scope: !217, file: !217, line: 491, type: !5910, scopeLine: 491, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !407)
!9658 = !DILocalVariable(name: "dev", arg: 1, scope: !9657, file: !217, line: 491, type: !215)
!9659 = !DILocation(line: 491, column: 1, scope: !9657)
!9660 = !DILocalVariable(name: "axis", arg: 2, scope: !9657, file: !217, line: 491, type: !7)
!9661 = !DILocalVariable(name: "val", arg: 3, scope: !9657, file: !217, line: 491, type: !262)
!9662 = !DILocation(line: 491, column: 1, scope: !9663)
!9663 = distinct !DILexicalBlock(scope: !9657, file: !217, line: 491, column: 1)
!9664 = distinct !DISubprogram(name: "alps_decode_buttons_v3", scope: !3, file: !3, line: 623, type: !9665, scopeLine: 624, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !407)
!9665 = !DISubroutineType(types: !9666)
!9666 = !{null, !4041, !4063}
!9667 = !DILocalVariable(name: "f", arg: 1, scope: !9664, file: !3, line: 623, type: !4041)
!9668 = !DILocation(line: 623, column: 56, scope: !9664)
!9669 = !DILocalVariable(name: "p", arg: 2, scope: !9664, file: !3, line: 623, type: !4063)
!9670 = !DILocation(line: 623, column: 74, scope: !9664)
!9671 = !DILocation(line: 625, column: 15, scope: !9664)
!9672 = !DILocation(line: 625, column: 20, scope: !9664)
!9673 = !DILocation(line: 625, column: 13, scope: !9664)
!9674 = !DILocation(line: 625, column: 12, scope: !9664)
!9675 = !DILocation(line: 625, column: 2, scope: !9664)
!9676 = !DILocation(line: 625, column: 5, scope: !9664)
!9677 = !DILocation(line: 625, column: 10, scope: !9664)
!9678 = !DILocation(line: 626, column: 16, scope: !9664)
!9679 = !DILocation(line: 626, column: 21, scope: !9664)
!9680 = !DILocation(line: 626, column: 14, scope: !9664)
!9681 = !DILocation(line: 626, column: 13, scope: !9664)
!9682 = !DILocation(line: 626, column: 2, scope: !9664)
!9683 = !DILocation(line: 626, column: 5, scope: !9664)
!9684 = !DILocation(line: 626, column: 11, scope: !9664)
!9685 = !DILocation(line: 627, column: 17, scope: !9664)
!9686 = !DILocation(line: 627, column: 22, scope: !9664)
!9687 = !DILocation(line: 627, column: 15, scope: !9664)
!9688 = !DILocation(line: 627, column: 14, scope: !9664)
!9689 = !DILocation(line: 627, column: 2, scope: !9664)
!9690 = !DILocation(line: 627, column: 5, scope: !9664)
!9691 = !DILocation(line: 627, column: 12, scope: !9664)
!9692 = !DILocation(line: 629, column: 18, scope: !9664)
!9693 = !DILocation(line: 629, column: 23, scope: !9664)
!9694 = !DILocation(line: 629, column: 16, scope: !9664)
!9695 = !DILocation(line: 629, column: 15, scope: !9664)
!9696 = !DILocation(line: 629, column: 2, scope: !9664)
!9697 = !DILocation(line: 629, column: 5, scope: !9664)
!9698 = !DILocation(line: 629, column: 13, scope: !9664)
!9699 = !DILocation(line: 630, column: 19, scope: !9664)
!9700 = !DILocation(line: 630, column: 24, scope: !9664)
!9701 = !DILocation(line: 630, column: 17, scope: !9664)
!9702 = !DILocation(line: 630, column: 16, scope: !9664)
!9703 = !DILocation(line: 630, column: 2, scope: !9664)
!9704 = !DILocation(line: 630, column: 5, scope: !9664)
!9705 = !DILocation(line: 630, column: 14, scope: !9664)
!9706 = !DILocation(line: 631, column: 20, scope: !9664)
!9707 = !DILocation(line: 631, column: 25, scope: !9664)
!9708 = !DILocation(line: 631, column: 18, scope: !9664)
!9709 = !DILocation(line: 631, column: 17, scope: !9664)
!9710 = !DILocation(line: 631, column: 2, scope: !9664)
!9711 = !DILocation(line: 631, column: 5, scope: !9664)
!9712 = !DILocation(line: 631, column: 15, scope: !9664)
!9713 = !DILocation(line: 632, column: 1, scope: !9664)
!9714 = distinct !DISubprogram(name: "alps_get_v3_v7_resolution", scope: !3, file: !3, line: 2288, type: !7030, scopeLine: 2289, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !407)
!9715 = !DILocalVariable(name: "psmouse", arg: 1, scope: !9714, file: !3, line: 2288, type: !210)
!9716 = !DILocation(line: 2288, column: 54, scope: !9714)
!9717 = !DILocalVariable(name: "reg_pitch", arg: 2, scope: !9714, file: !3, line: 2288, type: !262)
!9718 = !DILocation(line: 2288, column: 67, scope: !9714)
!9719 = !DILocalVariable(name: "reg", scope: !9714, file: !3, line: 2290, type: !262)
!9720 = !DILocation(line: 2290, column: 6, scope: !9714)
!9721 = !DILocalVariable(name: "x_pitch", scope: !9714, file: !3, line: 2290, type: !262)
!9722 = !DILocation(line: 2290, column: 11, scope: !9714)
!9723 = !DILocalVariable(name: "y_pitch", scope: !9714, file: !3, line: 2290, type: !262)
!9724 = !DILocation(line: 2290, column: 20, scope: !9714)
!9725 = !DILocalVariable(name: "x_electrode", scope: !9714, file: !3, line: 2290, type: !262)
!9726 = !DILocation(line: 2290, column: 29, scope: !9714)
!9727 = !DILocalVariable(name: "y_electrode", scope: !9714, file: !3, line: 2290, type: !262)
!9728 = !DILocation(line: 2290, column: 42, scope: !9714)
!9729 = !DILocalVariable(name: "x_phys", scope: !9714, file: !3, line: 2290, type: !262)
!9730 = !DILocation(line: 2290, column: 55, scope: !9714)
!9731 = !DILocalVariable(name: "y_phys", scope: !9714, file: !3, line: 2290, type: !262)
!9732 = !DILocation(line: 2290, column: 63, scope: !9714)
!9733 = !DILocalVariable(name: "priv", scope: !9714, file: !3, line: 2291, type: !206)
!9734 = !DILocation(line: 2291, column: 20, scope: !9714)
!9735 = !DILocation(line: 2291, column: 27, scope: !9714)
!9736 = !DILocation(line: 2291, column: 36, scope: !9714)
!9737 = !DILocation(line: 2293, column: 35, scope: !9714)
!9738 = !DILocation(line: 2293, column: 44, scope: !9714)
!9739 = !DILocation(line: 2293, column: 8, scope: !9714)
!9740 = !DILocation(line: 2293, column: 6, scope: !9714)
!9741 = !DILocation(line: 2294, column: 6, scope: !9742)
!9742 = distinct !DILexicalBlock(scope: !9714, file: !3, line: 2294, column: 6)
!9743 = !DILocation(line: 2294, column: 10, scope: !9742)
!9744 = !DILocation(line: 2294, column: 6, scope: !9714)
!9745 = !DILocation(line: 2295, column: 10, scope: !9742)
!9746 = !DILocation(line: 2295, column: 3, scope: !9742)
!9747 = !DILocation(line: 2297, column: 19, scope: !9714)
!9748 = !DILocation(line: 2297, column: 23, scope: !9714)
!9749 = !DILocation(line: 2297, column: 12, scope: !9714)
!9750 = !DILocation(line: 2297, column: 29, scope: !9714)
!9751 = !DILocation(line: 2297, column: 10, scope: !9714)
!9752 = !DILocation(line: 2298, column: 21, scope: !9714)
!9753 = !DILocation(line: 2298, column: 19, scope: !9714)
!9754 = !DILocation(line: 2298, column: 15, scope: !9714)
!9755 = !DILocation(line: 2298, column: 10, scope: !9714)
!9756 = !DILocation(line: 2300, column: 18, scope: !9714)
!9757 = !DILocation(line: 2300, column: 12, scope: !9714)
!9758 = !DILocation(line: 2300, column: 22, scope: !9714)
!9759 = !DILocation(line: 2300, column: 10, scope: !9714)
!9760 = !DILocation(line: 2301, column: 21, scope: !9714)
!9761 = !DILocation(line: 2301, column: 19, scope: !9714)
!9762 = !DILocation(line: 2301, column: 15, scope: !9714)
!9763 = !DILocation(line: 2301, column: 10, scope: !9714)
!9764 = !DILocation(line: 2303, column: 35, scope: !9714)
!9765 = !DILocation(line: 2303, column: 44, scope: !9714)
!9766 = !DILocation(line: 2303, column: 54, scope: !9714)
!9767 = !DILocation(line: 2303, column: 8, scope: !9714)
!9768 = !DILocation(line: 2303, column: 6, scope: !9714)
!9769 = !DILocation(line: 2304, column: 6, scope: !9770)
!9770 = distinct !DILexicalBlock(scope: !9714, file: !3, line: 2304, column: 6)
!9771 = !DILocation(line: 2304, column: 10, scope: !9770)
!9772 = !DILocation(line: 2304, column: 6, scope: !9714)
!9773 = !DILocation(line: 2305, column: 10, scope: !9770)
!9774 = !DILocation(line: 2305, column: 3, scope: !9770)
!9775 = !DILocation(line: 2307, column: 23, scope: !9714)
!9776 = !DILocation(line: 2307, column: 27, scope: !9714)
!9777 = !DILocation(line: 2307, column: 16, scope: !9714)
!9778 = !DILocation(line: 2307, column: 33, scope: !9714)
!9779 = !DILocation(line: 2307, column: 14, scope: !9714)
!9780 = !DILocation(line: 2308, column: 21, scope: !9714)
!9781 = !DILocation(line: 2308, column: 19, scope: !9714)
!9782 = !DILocation(line: 2308, column: 14, scope: !9714)
!9783 = !DILocation(line: 2310, column: 22, scope: !9714)
!9784 = !DILocation(line: 2310, column: 16, scope: !9714)
!9785 = !DILocation(line: 2310, column: 26, scope: !9714)
!9786 = !DILocation(line: 2310, column: 14, scope: !9714)
!9787 = !DILocation(line: 2311, column: 21, scope: !9714)
!9788 = !DILocation(line: 2311, column: 19, scope: !9714)
!9789 = !DILocation(line: 2311, column: 14, scope: !9714)
!9790 = !DILocation(line: 2313, column: 11, scope: !9714)
!9791 = !DILocation(line: 2313, column: 22, scope: !9714)
!9792 = !DILocation(line: 2313, column: 34, scope: !9714)
!9793 = !DILocation(line: 2313, column: 19, scope: !9714)
!9794 = !DILocation(line: 2313, column: 9, scope: !9714)
!9795 = !DILocation(line: 2314, column: 11, scope: !9714)
!9796 = !DILocation(line: 2314, column: 22, scope: !9714)
!9797 = !DILocation(line: 2314, column: 34, scope: !9714)
!9798 = !DILocation(line: 2314, column: 19, scope: !9714)
!9799 = !DILocation(line: 2314, column: 9, scope: !9714)
!9800 = !DILocation(line: 2316, column: 16, scope: !9714)
!9801 = !DILocation(line: 2316, column: 22, scope: !9714)
!9802 = !DILocation(line: 2316, column: 28, scope: !9714)
!9803 = !DILocation(line: 2316, column: 35, scope: !9714)
!9804 = !DILocation(line: 2316, column: 33, scope: !9714)
!9805 = !DILocation(line: 2316, column: 2, scope: !9714)
!9806 = !DILocation(line: 2316, column: 8, scope: !9714)
!9807 = !DILocation(line: 2316, column: 14, scope: !9714)
!9808 = !DILocation(line: 2317, column: 16, scope: !9714)
!9809 = !DILocation(line: 2317, column: 22, scope: !9714)
!9810 = !DILocation(line: 2317, column: 28, scope: !9714)
!9811 = !DILocation(line: 2317, column: 35, scope: !9714)
!9812 = !DILocation(line: 2317, column: 33, scope: !9714)
!9813 = !DILocation(line: 2317, column: 2, scope: !9714)
!9814 = !DILocation(line: 2317, column: 8, scope: !9714)
!9815 = !DILocation(line: 2317, column: 14, scope: !9714)
!9816 = !DILocation(line: 2324, column: 2, scope: !9714)
!9817 = !DILocation(line: 2325, column: 1, scope: !9714)
!9818 = distinct !DISubprogram(name: "alps_absolute_mode_v4", scope: !3, file: !3, line: 2373, type: !3962, scopeLine: 2374, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !407)
!9819 = !DILocalVariable(name: "psmouse", arg: 1, scope: !9818, file: !3, line: 2373, type: !210)
!9820 = !DILocation(line: 2373, column: 50, scope: !9818)
!9821 = !DILocalVariable(name: "reg_val", scope: !9818, file: !3, line: 2375, type: !262)
!9822 = !DILocation(line: 2375, column: 6, scope: !9818)
!9823 = !DILocation(line: 2377, column: 39, scope: !9818)
!9824 = !DILocation(line: 2377, column: 12, scope: !9818)
!9825 = !DILocation(line: 2377, column: 10, scope: !9818)
!9826 = !DILocation(line: 2378, column: 6, scope: !9827)
!9827 = distinct !DILexicalBlock(scope: !9818, file: !3, line: 2378, column: 6)
!9828 = !DILocation(line: 2378, column: 14, scope: !9827)
!9829 = !DILocation(line: 2378, column: 6, scope: !9818)
!9830 = !DILocation(line: 2379, column: 3, scope: !9827)
!9831 = !DILocation(line: 2381, column: 10, scope: !9818)
!9832 = !DILocation(line: 2382, column: 36, scope: !9833)
!9833 = distinct !DILexicalBlock(scope: !9818, file: !3, line: 2382, column: 6)
!9834 = !DILocation(line: 2382, column: 45, scope: !9833)
!9835 = !DILocation(line: 2382, column: 6, scope: !9833)
!9836 = !DILocation(line: 2382, column: 6, scope: !9818)
!9837 = !DILocation(line: 2383, column: 3, scope: !9833)
!9838 = !DILocation(line: 2385, column: 2, scope: !9818)
!9839 = !DILocation(line: 2386, column: 1, scope: !9818)
!9840 = distinct !DISubprogram(name: "alps_process_bitmap", scope: !3, file: !3, line: 392, type: !9841, scopeLine: 394, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !407)
!9841 = !DISubroutineType(types: !9842)
!9842 = !{!262, !206, !4041}
!9843 = !DILocalVariable(name: "priv", arg: 1, scope: !9840, file: !3, line: 392, type: !206)
!9844 = !DILocation(line: 392, column: 50, scope: !9840)
!9845 = !DILocalVariable(name: "fields", arg: 2, scope: !9840, file: !3, line: 393, type: !4041)
!9846 = !DILocation(line: 393, column: 31, scope: !9840)
!9847 = !DILocalVariable(name: "i", scope: !9840, file: !3, line: 395, type: !262)
!9848 = !DILocation(line: 395, column: 6, scope: !9840)
!9849 = !DILocalVariable(name: "fingers_x", scope: !9840, file: !3, line: 395, type: !262)
!9850 = !DILocation(line: 395, column: 9, scope: !9840)
!9851 = !DILocalVariable(name: "fingers_y", scope: !9840, file: !3, line: 395, type: !262)
!9852 = !DILocation(line: 395, column: 24, scope: !9840)
!9853 = !DILocalVariable(name: "fingers", scope: !9840, file: !3, line: 395, type: !262)
!9854 = !DILocation(line: 395, column: 39, scope: !9840)
!9855 = !DILocalVariable(name: "closest", scope: !9840, file: !3, line: 395, type: !262)
!9856 = !DILocation(line: 395, column: 48, scope: !9840)
!9857 = !DILocalVariable(name: "x_low", scope: !9840, file: !3, line: 396, type: !9858)
!9858 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "alps_bitmap_point", file: !168, line: 210, size: 64, elements: !9859)
!9859 = !{!9860, !9861}
!9860 = !DIDerivedType(tag: DW_TAG_member, name: "start_bit", scope: !9858, file: !168, line: 211, baseType: !262, size: 32)
!9861 = !DIDerivedType(tag: DW_TAG_member, name: "num_bits", scope: !9858, file: !168, line: 212, baseType: !262, size: 32, offset: 32)
!9862 = !DILocation(line: 396, column: 27, scope: !9840)
!9863 = !DILocalVariable(name: "x_high", scope: !9840, file: !3, line: 396, type: !9858)
!9864 = !DILocation(line: 396, column: 41, scope: !9840)
!9865 = !DILocalVariable(name: "y_low", scope: !9840, file: !3, line: 397, type: !9858)
!9866 = !DILocation(line: 397, column: 27, scope: !9840)
!9867 = !DILocalVariable(name: "y_high", scope: !9840, file: !3, line: 397, type: !9858)
!9868 = !DILocation(line: 397, column: 41, scope: !9840)
!9869 = !DILocalVariable(name: "corner", scope: !9840, file: !3, line: 398, type: !4054)
!9870 = !DILocation(line: 398, column: 22, scope: !9840)
!9871 = !DILocation(line: 400, column: 7, scope: !9872)
!9872 = distinct !DILexicalBlock(scope: !9840, file: !3, line: 400, column: 6)
!9873 = !DILocation(line: 400, column: 15, scope: !9872)
!9874 = !DILocation(line: 400, column: 21, scope: !9872)
!9875 = !DILocation(line: 400, column: 25, scope: !9872)
!9876 = !DILocation(line: 400, column: 33, scope: !9872)
!9877 = !DILocation(line: 400, column: 6, scope: !9840)
!9878 = !DILocation(line: 401, column: 3, scope: !9872)
!9879 = !DILocation(line: 403, column: 25, scope: !9840)
!9880 = !DILocation(line: 403, column: 33, scope: !9840)
!9881 = !DILocation(line: 403, column: 2, scope: !9840)
!9882 = !DILocation(line: 404, column: 25, scope: !9840)
!9883 = !DILocation(line: 404, column: 33, scope: !9840)
!9884 = !DILocation(line: 404, column: 2, scope: !9840)
!9885 = !DILocalVariable(name: "__UNIQUE_ID___x200", scope: !9886, file: !3, line: 410, type: !262)
!9886 = distinct !DILexicalBlock(scope: !9840, file: !3, line: 410, column: 12)
!9887 = !DILocation(line: 410, column: 12, scope: !9886)
!9888 = !DILocalVariable(name: "__UNIQUE_ID___y201", scope: !9886, file: !3, line: 410, type: !262)
!9889 = !DILocation(line: 410, column: 10, scope: !9840)
!9890 = !DILocation(line: 416, column: 6, scope: !9891)
!9891 = distinct !DILexicalBlock(scope: !9840, file: !3, line: 416, column: 6)
!9892 = !DILocation(line: 416, column: 16, scope: !9891)
!9893 = !DILocation(line: 416, column: 6, scope: !9840)
!9894 = !DILocation(line: 417, column: 14, scope: !9895)
!9895 = distinct !DILexicalBlock(scope: !9891, file: !3, line: 416, column: 22)
!9896 = !DILocation(line: 417, column: 23, scope: !9895)
!9897 = !DILocation(line: 417, column: 28, scope: !9895)
!9898 = !DILocation(line: 417, column: 5, scope: !9895)
!9899 = !DILocation(line: 418, column: 26, scope: !9895)
!9900 = !DILocation(line: 418, column: 37, scope: !9895)
!9901 = !DILocation(line: 418, column: 35, scope: !9895)
!9902 = !DILocation(line: 418, column: 9, scope: !9895)
!9903 = !DILocation(line: 418, column: 18, scope: !9895)
!9904 = !DILocation(line: 419, column: 28, scope: !9895)
!9905 = !DILocation(line: 419, column: 40, scope: !9895)
!9906 = !DILocation(line: 419, column: 38, scope: !9895)
!9907 = !DILocation(line: 419, column: 10, scope: !9895)
!9908 = !DILocation(line: 419, column: 20, scope: !9895)
!9909 = !DILocalVariable(name: "__UNIQUE_ID___x202", scope: !9910, file: !3, line: 420, type: !262)
!9910 = distinct !DILexicalBlock(scope: !9895, file: !3, line: 420, column: 21)
!9911 = !DILocation(line: 420, column: 21, scope: !9910)
!9912 = !DILocalVariable(name: "__UNIQUE_ID___y203", scope: !9910, file: !3, line: 420, type: !262)
!9913 = !DILocation(line: 420, column: 10, scope: !9895)
!9914 = !DILocation(line: 420, column: 19, scope: !9895)
!9915 = !DILocation(line: 421, column: 2, scope: !9895)
!9916 = !DILocation(line: 422, column: 6, scope: !9917)
!9917 = distinct !DILexicalBlock(scope: !9840, file: !3, line: 422, column: 6)
!9918 = !DILocation(line: 422, column: 16, scope: !9917)
!9919 = !DILocation(line: 422, column: 6, scope: !9840)
!9920 = !DILocation(line: 423, column: 14, scope: !9921)
!9921 = distinct !DILexicalBlock(scope: !9917, file: !3, line: 422, column: 22)
!9922 = !DILocation(line: 423, column: 23, scope: !9921)
!9923 = !DILocation(line: 423, column: 28, scope: !9921)
!9924 = !DILocation(line: 423, column: 5, scope: !9921)
!9925 = !DILocation(line: 424, column: 26, scope: !9921)
!9926 = !DILocation(line: 424, column: 37, scope: !9921)
!9927 = !DILocation(line: 424, column: 35, scope: !9921)
!9928 = !DILocation(line: 424, column: 9, scope: !9921)
!9929 = !DILocation(line: 424, column: 18, scope: !9921)
!9930 = !DILocation(line: 425, column: 28, scope: !9921)
!9931 = !DILocation(line: 425, column: 40, scope: !9921)
!9932 = !DILocation(line: 425, column: 38, scope: !9921)
!9933 = !DILocation(line: 425, column: 10, scope: !9921)
!9934 = !DILocation(line: 425, column: 20, scope: !9921)
!9935 = !DILocalVariable(name: "__UNIQUE_ID___x204", scope: !9936, file: !3, line: 426, type: !262)
!9936 = distinct !DILexicalBlock(scope: !9921, file: !3, line: 426, column: 21)
!9937 = !DILocation(line: 426, column: 21, scope: !9936)
!9938 = !DILocalVariable(name: "__UNIQUE_ID___y205", scope: !9936, file: !3, line: 426, type: !262)
!9939 = !DILocation(line: 426, column: 10, scope: !9921)
!9940 = !DILocation(line: 426, column: 19, scope: !9921)
!9941 = !DILocation(line: 427, column: 2, scope: !9921)
!9942 = !DILocation(line: 431, column: 4, scope: !9840)
!9943 = !DILocation(line: 431, column: 10, scope: !9840)
!9944 = !DILocation(line: 431, column: 29, scope: !9840)
!9945 = !DILocation(line: 431, column: 21, scope: !9840)
!9946 = !DILocation(line: 431, column: 47, scope: !9840)
!9947 = !DILocation(line: 431, column: 39, scope: !9840)
!9948 = !DILocation(line: 431, column: 56, scope: !9840)
!9949 = !DILocation(line: 431, column: 16, scope: !9840)
!9950 = !DILocation(line: 432, column: 9, scope: !9840)
!9951 = !DILocation(line: 432, column: 15, scope: !9840)
!9952 = !DILocation(line: 432, column: 22, scope: !9840)
!9953 = !DILocation(line: 432, column: 6, scope: !9840)
!9954 = !DILocation(line: 431, column: 62, scope: !9840)
!9955 = !DILocation(line: 431, column: 3, scope: !9840)
!9956 = !DILocation(line: 430, column: 2, scope: !9840)
!9957 = !DILocation(line: 430, column: 12, scope: !9840)
!9958 = !DILocation(line: 430, column: 14, scope: !9840)
!9959 = !DILocation(line: 434, column: 4, scope: !9840)
!9960 = !DILocation(line: 434, column: 10, scope: !9840)
!9961 = !DILocation(line: 434, column: 29, scope: !9840)
!9962 = !DILocation(line: 434, column: 21, scope: !9840)
!9963 = !DILocation(line: 434, column: 47, scope: !9840)
!9964 = !DILocation(line: 434, column: 39, scope: !9840)
!9965 = !DILocation(line: 434, column: 56, scope: !9840)
!9966 = !DILocation(line: 434, column: 16, scope: !9840)
!9967 = !DILocation(line: 435, column: 9, scope: !9840)
!9968 = !DILocation(line: 435, column: 15, scope: !9840)
!9969 = !DILocation(line: 435, column: 22, scope: !9840)
!9970 = !DILocation(line: 435, column: 6, scope: !9840)
!9971 = !DILocation(line: 434, column: 62, scope: !9840)
!9972 = !DILocation(line: 434, column: 3, scope: !9840)
!9973 = !DILocation(line: 433, column: 2, scope: !9840)
!9974 = !DILocation(line: 433, column: 12, scope: !9840)
!9975 = !DILocation(line: 433, column: 14, scope: !9840)
!9976 = !DILocation(line: 439, column: 4, scope: !9840)
!9977 = !DILocation(line: 439, column: 10, scope: !9840)
!9978 = !DILocation(line: 439, column: 30, scope: !9840)
!9979 = !DILocation(line: 439, column: 21, scope: !9840)
!9980 = !DILocation(line: 439, column: 49, scope: !9840)
!9981 = !DILocation(line: 439, column: 40, scope: !9840)
!9982 = !DILocation(line: 439, column: 58, scope: !9840)
!9983 = !DILocation(line: 439, column: 16, scope: !9840)
!9984 = !DILocation(line: 440, column: 9, scope: !9840)
!9985 = !DILocation(line: 440, column: 15, scope: !9840)
!9986 = !DILocation(line: 440, column: 22, scope: !9840)
!9987 = !DILocation(line: 440, column: 6, scope: !9840)
!9988 = !DILocation(line: 439, column: 64, scope: !9840)
!9989 = !DILocation(line: 439, column: 3, scope: !9840)
!9990 = !DILocation(line: 438, column: 2, scope: !9840)
!9991 = !DILocation(line: 438, column: 12, scope: !9840)
!9992 = !DILocation(line: 438, column: 14, scope: !9840)
!9993 = !DILocation(line: 442, column: 4, scope: !9840)
!9994 = !DILocation(line: 442, column: 10, scope: !9840)
!9995 = !DILocation(line: 442, column: 29, scope: !9840)
!9996 = !DILocation(line: 442, column: 21, scope: !9840)
!9997 = !DILocation(line: 442, column: 47, scope: !9840)
!9998 = !DILocation(line: 442, column: 39, scope: !9840)
!9999 = !DILocation(line: 442, column: 56, scope: !9840)
!10000 = !DILocation(line: 442, column: 16, scope: !9840)
!10001 = !DILocation(line: 443, column: 9, scope: !9840)
!10002 = !DILocation(line: 443, column: 15, scope: !9840)
!10003 = !DILocation(line: 443, column: 22, scope: !9840)
!10004 = !DILocation(line: 443, column: 6, scope: !9840)
!10005 = !DILocation(line: 442, column: 62, scope: !9840)
!10006 = !DILocation(line: 442, column: 3, scope: !9840)
!10007 = !DILocation(line: 441, column: 2, scope: !9840)
!10008 = !DILocation(line: 441, column: 12, scope: !9840)
!10009 = !DILocation(line: 441, column: 14, scope: !9840)
!10010 = !DILocation(line: 447, column: 4, scope: !9840)
!10011 = !DILocation(line: 447, column: 10, scope: !9840)
!10012 = !DILocation(line: 447, column: 30, scope: !9840)
!10013 = !DILocation(line: 447, column: 21, scope: !9840)
!10014 = !DILocation(line: 447, column: 49, scope: !9840)
!10015 = !DILocation(line: 447, column: 40, scope: !9840)
!10016 = !DILocation(line: 447, column: 58, scope: !9840)
!10017 = !DILocation(line: 447, column: 16, scope: !9840)
!10018 = !DILocation(line: 448, column: 9, scope: !9840)
!10019 = !DILocation(line: 448, column: 15, scope: !9840)
!10020 = !DILocation(line: 448, column: 22, scope: !9840)
!10021 = !DILocation(line: 448, column: 6, scope: !9840)
!10022 = !DILocation(line: 447, column: 64, scope: !9840)
!10023 = !DILocation(line: 447, column: 3, scope: !9840)
!10024 = !DILocation(line: 446, column: 2, scope: !9840)
!10025 = !DILocation(line: 446, column: 12, scope: !9840)
!10026 = !DILocation(line: 446, column: 14, scope: !9840)
!10027 = !DILocation(line: 450, column: 4, scope: !9840)
!10028 = !DILocation(line: 450, column: 10, scope: !9840)
!10029 = !DILocation(line: 450, column: 30, scope: !9840)
!10030 = !DILocation(line: 450, column: 21, scope: !9840)
!10031 = !DILocation(line: 450, column: 49, scope: !9840)
!10032 = !DILocation(line: 450, column: 40, scope: !9840)
!10033 = !DILocation(line: 450, column: 58, scope: !9840)
!10034 = !DILocation(line: 450, column: 16, scope: !9840)
!10035 = !DILocation(line: 451, column: 9, scope: !9840)
!10036 = !DILocation(line: 451, column: 15, scope: !9840)
!10037 = !DILocation(line: 451, column: 22, scope: !9840)
!10038 = !DILocation(line: 451, column: 6, scope: !9840)
!10039 = !DILocation(line: 450, column: 64, scope: !9840)
!10040 = !DILocation(line: 450, column: 3, scope: !9840)
!10041 = !DILocation(line: 449, column: 2, scope: !9840)
!10042 = !DILocation(line: 449, column: 12, scope: !9840)
!10043 = !DILocation(line: 449, column: 14, scope: !9840)
!10044 = !DILocation(line: 455, column: 4, scope: !9840)
!10045 = !DILocation(line: 455, column: 10, scope: !9840)
!10046 = !DILocation(line: 455, column: 29, scope: !9840)
!10047 = !DILocation(line: 455, column: 21, scope: !9840)
!10048 = !DILocation(line: 455, column: 47, scope: !9840)
!10049 = !DILocation(line: 455, column: 39, scope: !9840)
!10050 = !DILocation(line: 455, column: 56, scope: !9840)
!10051 = !DILocation(line: 455, column: 16, scope: !9840)
!10052 = !DILocation(line: 456, column: 9, scope: !9840)
!10053 = !DILocation(line: 456, column: 15, scope: !9840)
!10054 = !DILocation(line: 456, column: 22, scope: !9840)
!10055 = !DILocation(line: 456, column: 6, scope: !9840)
!10056 = !DILocation(line: 455, column: 62, scope: !9840)
!10057 = !DILocation(line: 455, column: 3, scope: !9840)
!10058 = !DILocation(line: 454, column: 2, scope: !9840)
!10059 = !DILocation(line: 454, column: 12, scope: !9840)
!10060 = !DILocation(line: 454, column: 14, scope: !9840)
!10061 = !DILocation(line: 458, column: 4, scope: !9840)
!10062 = !DILocation(line: 458, column: 10, scope: !9840)
!10063 = !DILocation(line: 458, column: 30, scope: !9840)
!10064 = !DILocation(line: 458, column: 21, scope: !9840)
!10065 = !DILocation(line: 458, column: 49, scope: !9840)
!10066 = !DILocation(line: 458, column: 40, scope: !9840)
!10067 = !DILocation(line: 458, column: 58, scope: !9840)
!10068 = !DILocation(line: 458, column: 16, scope: !9840)
!10069 = !DILocation(line: 459, column: 9, scope: !9840)
!10070 = !DILocation(line: 459, column: 15, scope: !9840)
!10071 = !DILocation(line: 459, column: 22, scope: !9840)
!10072 = !DILocation(line: 459, column: 6, scope: !9840)
!10073 = !DILocation(line: 458, column: 64, scope: !9840)
!10074 = !DILocation(line: 458, column: 3, scope: !9840)
!10075 = !DILocation(line: 457, column: 2, scope: !9840)
!10076 = !DILocation(line: 457, column: 12, scope: !9840)
!10077 = !DILocation(line: 457, column: 14, scope: !9840)
!10078 = !DILocation(line: 462, column: 6, scope: !10079)
!10079 = distinct !DILexicalBlock(scope: !9840, file: !3, line: 462, column: 6)
!10080 = !DILocation(line: 462, column: 12, scope: !10079)
!10081 = !DILocation(line: 462, column: 26, scope: !10079)
!10082 = !DILocation(line: 462, column: 6, scope: !9840)
!10083 = !DILocation(line: 463, column: 10, scope: !10084)
!10084 = distinct !DILexicalBlock(scope: !10085, file: !3, line: 463, column: 3)
!10085 = distinct !DILexicalBlock(scope: !10079, file: !3, line: 462, column: 44)
!10086 = !DILocation(line: 463, column: 8, scope: !10084)
!10087 = !DILocation(line: 463, column: 15, scope: !10088)
!10088 = distinct !DILexicalBlock(scope: !10084, file: !3, line: 463, column: 3)
!10089 = !DILocation(line: 463, column: 17, scope: !10088)
!10090 = !DILocation(line: 463, column: 3, scope: !10084)
!10091 = !DILocation(line: 464, column: 18, scope: !10088)
!10092 = !DILocation(line: 464, column: 24, scope: !10088)
!10093 = !DILocation(line: 464, column: 39, scope: !10088)
!10094 = !DILocation(line: 464, column: 32, scope: !10088)
!10095 = !DILocation(line: 464, column: 42, scope: !10088)
!10096 = !DILocation(line: 464, column: 30, scope: !10088)
!10097 = !DILocation(line: 464, column: 11, scope: !10088)
!10098 = !DILocation(line: 464, column: 4, scope: !10088)
!10099 = !DILocation(line: 464, column: 14, scope: !10088)
!10100 = !DILocation(line: 464, column: 16, scope: !10088)
!10101 = !DILocation(line: 463, column: 23, scope: !10088)
!10102 = !DILocation(line: 463, column: 3, scope: !10088)
!10103 = distinct !{!10103, !10090, !10104}
!10104 = !DILocation(line: 464, column: 42, scope: !10084)
!10105 = !DILocation(line: 465, column: 2, scope: !10085)
!10106 = !DILocation(line: 468, column: 6, scope: !10107)
!10107 = distinct !DILexicalBlock(scope: !9840, file: !3, line: 468, column: 6)
!10108 = !DILocation(line: 468, column: 12, scope: !10107)
!10109 = !DILocation(line: 468, column: 26, scope: !10107)
!10110 = !DILocation(line: 468, column: 43, scope: !10107)
!10111 = !DILocation(line: 469, column: 6, scope: !10107)
!10112 = !DILocation(line: 469, column: 12, scope: !10107)
!10113 = !DILocation(line: 469, column: 26, scope: !10107)
!10114 = !DILocation(line: 468, column: 6, scope: !9840)
!10115 = !DILocation(line: 470, column: 10, scope: !10116)
!10116 = distinct !DILexicalBlock(scope: !10117, file: !3, line: 470, column: 3)
!10117 = distinct !DILexicalBlock(scope: !10107, file: !3, line: 469, column: 44)
!10118 = !DILocation(line: 470, column: 8, scope: !10116)
!10119 = !DILocation(line: 470, column: 15, scope: !10120)
!10120 = distinct !DILexicalBlock(scope: !10116, file: !3, line: 470, column: 3)
!10121 = !DILocation(line: 470, column: 17, scope: !10120)
!10122 = !DILocation(line: 470, column: 3, scope: !10116)
!10123 = !DILocation(line: 471, column: 18, scope: !10120)
!10124 = !DILocation(line: 471, column: 24, scope: !10120)
!10125 = !DILocation(line: 471, column: 39, scope: !10120)
!10126 = !DILocation(line: 471, column: 32, scope: !10120)
!10127 = !DILocation(line: 471, column: 42, scope: !10120)
!10128 = !DILocation(line: 471, column: 30, scope: !10120)
!10129 = !DILocation(line: 471, column: 11, scope: !10120)
!10130 = !DILocation(line: 471, column: 4, scope: !10120)
!10131 = !DILocation(line: 471, column: 14, scope: !10120)
!10132 = !DILocation(line: 471, column: 16, scope: !10120)
!10133 = !DILocation(line: 470, column: 23, scope: !10120)
!10134 = !DILocation(line: 470, column: 3, scope: !10120)
!10135 = distinct !{!10135, !10122, !10136}
!10136 = !DILocation(line: 471, column: 42, scope: !10116)
!10137 = !DILocation(line: 472, column: 2, scope: !10117)
!10138 = !DILocation(line: 479, column: 6, scope: !10139)
!10139 = distinct !DILexicalBlock(scope: !9840, file: !3, line: 479, column: 6)
!10140 = !DILocation(line: 479, column: 12, scope: !10139)
!10141 = !DILocation(line: 479, column: 25, scope: !10139)
!10142 = !DILocation(line: 479, column: 6, scope: !9840)
!10143 = !DILocation(line: 481, column: 11, scope: !10144)
!10144 = distinct !DILexicalBlock(scope: !10139, file: !3, line: 479, column: 32)
!10145 = !DILocation(line: 482, column: 10, scope: !10146)
!10146 = distinct !DILexicalBlock(scope: !10144, file: !3, line: 482, column: 3)
!10147 = !DILocation(line: 482, column: 8, scope: !10146)
!10148 = !DILocation(line: 482, column: 15, scope: !10149)
!10149 = distinct !DILexicalBlock(scope: !10146, file: !3, line: 482, column: 3)
!10150 = !DILocation(line: 482, column: 17, scope: !10149)
!10151 = !DILocation(line: 482, column: 3, scope: !10146)
!10152 = !DILocalVariable(name: "dx", scope: !10153, file: !3, line: 483, type: !262)
!10153 = distinct !DILexicalBlock(scope: !10149, file: !3, line: 482, column: 27)
!10154 = !DILocation(line: 483, column: 8, scope: !10153)
!10155 = !DILocation(line: 483, column: 13, scope: !10153)
!10156 = !DILocation(line: 483, column: 21, scope: !10153)
!10157 = !DILocation(line: 483, column: 24, scope: !10153)
!10158 = !DILocation(line: 483, column: 35, scope: !10153)
!10159 = !DILocation(line: 483, column: 28, scope: !10153)
!10160 = !DILocation(line: 483, column: 38, scope: !10153)
!10161 = !DILocation(line: 483, column: 26, scope: !10153)
!10162 = !DILocalVariable(name: "dy", scope: !10153, file: !3, line: 484, type: !262)
!10163 = !DILocation(line: 484, column: 8, scope: !10153)
!10164 = !DILocation(line: 484, column: 13, scope: !10153)
!10165 = !DILocation(line: 484, column: 21, scope: !10153)
!10166 = !DILocation(line: 484, column: 24, scope: !10153)
!10167 = !DILocation(line: 484, column: 35, scope: !10153)
!10168 = !DILocation(line: 484, column: 28, scope: !10153)
!10169 = !DILocation(line: 484, column: 38, scope: !10153)
!10170 = !DILocation(line: 484, column: 26, scope: !10153)
!10171 = !DILocalVariable(name: "distance", scope: !10153, file: !3, line: 485, type: !262)
!10172 = !DILocation(line: 485, column: 8, scope: !10153)
!10173 = !DILocation(line: 485, column: 19, scope: !10153)
!10174 = !DILocation(line: 485, column: 24, scope: !10153)
!10175 = !DILocation(line: 485, column: 22, scope: !10153)
!10176 = !DILocation(line: 485, column: 29, scope: !10153)
!10177 = !DILocation(line: 485, column: 34, scope: !10153)
!10178 = !DILocation(line: 485, column: 32, scope: !10153)
!10179 = !DILocation(line: 485, column: 27, scope: !10153)
!10180 = !DILocation(line: 487, column: 8, scope: !10181)
!10181 = distinct !DILexicalBlock(scope: !10153, file: !3, line: 487, column: 8)
!10182 = !DILocation(line: 487, column: 19, scope: !10181)
!10183 = !DILocation(line: 487, column: 17, scope: !10181)
!10184 = !DILocation(line: 487, column: 8, scope: !10153)
!10185 = !DILocation(line: 488, column: 26, scope: !10186)
!10186 = distinct !DILexicalBlock(scope: !10181, file: !3, line: 487, column: 28)
!10187 = !DILocation(line: 488, column: 5, scope: !10186)
!10188 = !DILocation(line: 488, column: 11, scope: !10186)
!10189 = !DILocation(line: 488, column: 24, scope: !10186)
!10190 = !DILocation(line: 489, column: 15, scope: !10186)
!10191 = !DILocation(line: 489, column: 13, scope: !10186)
!10192 = !DILocation(line: 490, column: 4, scope: !10186)
!10193 = !DILocation(line: 491, column: 3, scope: !10153)
!10194 = !DILocation(line: 482, column: 23, scope: !10149)
!10195 = !DILocation(line: 482, column: 3, scope: !10149)
!10196 = distinct !{!10196, !10151, !10197}
!10197 = !DILocation(line: 491, column: 3, scope: !10146)
!10198 = !DILocation(line: 493, column: 25, scope: !10144)
!10199 = !DILocation(line: 493, column: 31, scope: !10144)
!10200 = !DILocation(line: 493, column: 44, scope: !10144)
!10201 = !DILocation(line: 493, column: 49, scope: !10144)
!10202 = !DILocation(line: 493, column: 3, scope: !10144)
!10203 = !DILocation(line: 493, column: 9, scope: !10144)
!10204 = !DILocation(line: 493, column: 22, scope: !10144)
!10205 = !DILocation(line: 494, column: 2, scope: !10144)
!10206 = !DILocation(line: 496, column: 2, scope: !9840)
!10207 = !DILocation(line: 496, column: 10, scope: !9840)
!10208 = !DILocation(line: 496, column: 18, scope: !9840)
!10209 = !DILocation(line: 496, column: 26, scope: !9840)
!10210 = !DILocation(line: 497, column: 2, scope: !9840)
!10211 = !DILocation(line: 497, column: 10, scope: !9840)
!10212 = !DILocation(line: 497, column: 25, scope: !9840)
!10213 = !DILocation(line: 497, column: 31, scope: !9840)
!10214 = !DILocation(line: 497, column: 18, scope: !9840)
!10215 = !DILocation(line: 499, column: 9, scope: !9840)
!10216 = !DILocation(line: 499, column: 2, scope: !9840)
!10217 = !DILocation(line: 500, column: 1, scope: !9840)
!10218 = distinct !DISubprogram(name: "alps_report_semi_mt_data", scope: !3, file: !3, line: 524, type: !10219, scopeLine: 525, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !407)
!10219 = !DISubroutineType(types: !10220)
!10220 = !{null, !210, !262}
!10221 = !DILocalVariable(name: "psmouse", arg: 1, scope: !10218, file: !3, line: 524, type: !210)
!10222 = !DILocation(line: 524, column: 54, scope: !10218)
!10223 = !DILocalVariable(name: "fingers", arg: 2, scope: !10218, file: !3, line: 524, type: !262)
!10224 = !DILocation(line: 524, column: 67, scope: !10218)
!10225 = !DILocalVariable(name: "priv", scope: !10218, file: !3, line: 526, type: !206)
!10226 = !DILocation(line: 526, column: 20, scope: !10218)
!10227 = !DILocation(line: 526, column: 27, scope: !10218)
!10228 = !DILocation(line: 526, column: 36, scope: !10218)
!10229 = !DILocalVariable(name: "dev", scope: !10218, file: !3, line: 527, type: !215)
!10230 = !DILocation(line: 527, column: 20, scope: !10218)
!10231 = !DILocation(line: 527, column: 26, scope: !10218)
!10232 = !DILocation(line: 527, column: 35, scope: !10218)
!10233 = !DILocalVariable(name: "f", scope: !10218, file: !3, line: 528, type: !4041)
!10234 = !DILocation(line: 528, column: 22, scope: !10218)
!10235 = !DILocation(line: 528, column: 27, scope: !10218)
!10236 = !DILocation(line: 528, column: 33, scope: !10218)
!10237 = !DILocation(line: 531, column: 6, scope: !10238)
!10238 = distinct !DILexicalBlock(scope: !10218, file: !3, line: 531, column: 6)
!10239 = !DILocation(line: 531, column: 14, scope: !10238)
!10240 = !DILocation(line: 531, column: 6, scope: !10218)
!10241 = !DILocation(line: 532, column: 16, scope: !10242)
!10242 = distinct !DILexicalBlock(scope: !10238, file: !3, line: 531, column: 19)
!10243 = !DILocation(line: 532, column: 19, scope: !10242)
!10244 = !DILocation(line: 532, column: 22, scope: !10242)
!10245 = !DILocation(line: 532, column: 3, scope: !10242)
!10246 = !DILocation(line: 532, column: 6, scope: !10242)
!10247 = !DILocation(line: 532, column: 12, scope: !10242)
!10248 = !DILocation(line: 532, column: 14, scope: !10242)
!10249 = !DILocation(line: 533, column: 16, scope: !10242)
!10250 = !DILocation(line: 533, column: 19, scope: !10242)
!10251 = !DILocation(line: 533, column: 22, scope: !10242)
!10252 = !DILocation(line: 533, column: 3, scope: !10242)
!10253 = !DILocation(line: 533, column: 6, scope: !10242)
!10254 = !DILocation(line: 533, column: 12, scope: !10242)
!10255 = !DILocation(line: 533, column: 14, scope: !10242)
!10256 = !DILocation(line: 534, column: 13, scope: !10242)
!10257 = !DILocation(line: 534, column: 16, scope: !10242)
!10258 = !DILocation(line: 534, column: 25, scope: !10242)
!10259 = !DILocation(line: 534, column: 11, scope: !10242)
!10260 = !DILocation(line: 535, column: 3, scope: !10242)
!10261 = !DILocation(line: 535, column: 9, scope: !10242)
!10262 = !DILocation(line: 535, column: 22, scope: !10242)
!10263 = !DILocation(line: 536, column: 2, scope: !10242)
!10264 = !DILocation(line: 538, column: 6, scope: !10265)
!10265 = distinct !DILexicalBlock(scope: !10218, file: !3, line: 538, column: 6)
!10266 = !DILocation(line: 538, column: 14, scope: !10265)
!10267 = !DILocation(line: 538, column: 6, scope: !10218)
!10268 = !DILocation(line: 539, column: 17, scope: !10265)
!10269 = !DILocation(line: 539, column: 25, scope: !10265)
!10270 = !DILocation(line: 539, column: 28, scope: !10265)
!10271 = !DILocation(line: 539, column: 34, scope: !10265)
!10272 = !DILocation(line: 539, column: 37, scope: !10265)
!10273 = !DILocation(line: 539, column: 40, scope: !10265)
!10274 = !DILocation(line: 539, column: 46, scope: !10265)
!10275 = !DILocation(line: 539, column: 3, scope: !10265)
!10276 = !DILocation(line: 540, column: 6, scope: !10277)
!10277 = distinct !DILexicalBlock(scope: !10218, file: !3, line: 540, column: 6)
!10278 = !DILocation(line: 540, column: 14, scope: !10277)
!10279 = !DILocation(line: 540, column: 6, scope: !10218)
!10280 = !DILocation(line: 541, column: 17, scope: !10277)
!10281 = !DILocation(line: 541, column: 25, scope: !10277)
!10282 = !DILocation(line: 541, column: 28, scope: !10277)
!10283 = !DILocation(line: 541, column: 34, scope: !10277)
!10284 = !DILocation(line: 541, column: 37, scope: !10277)
!10285 = !DILocation(line: 541, column: 40, scope: !10277)
!10286 = !DILocation(line: 541, column: 46, scope: !10277)
!10287 = !DILocation(line: 541, column: 3, scope: !10277)
!10288 = !DILocation(line: 542, column: 22, scope: !10218)
!10289 = !DILocation(line: 542, column: 2, scope: !10218)
!10290 = !DILocation(line: 544, column: 31, scope: !10218)
!10291 = !DILocation(line: 544, column: 36, scope: !10218)
!10292 = !DILocation(line: 544, column: 2, scope: !10218)
!10293 = !DILocation(line: 546, column: 19, scope: !10218)
!10294 = !DILocation(line: 546, column: 34, scope: !10218)
!10295 = !DILocation(line: 546, column: 37, scope: !10218)
!10296 = !DILocation(line: 546, column: 2, scope: !10218)
!10297 = !DILocation(line: 547, column: 19, scope: !10218)
!10298 = !DILocation(line: 547, column: 35, scope: !10218)
!10299 = !DILocation(line: 547, column: 38, scope: !10218)
!10300 = !DILocation(line: 547, column: 2, scope: !10218)
!10301 = !DILocation(line: 548, column: 19, scope: !10218)
!10302 = !DILocation(line: 548, column: 36, scope: !10218)
!10303 = !DILocation(line: 548, column: 39, scope: !10218)
!10304 = !DILocation(line: 548, column: 2, scope: !10218)
!10305 = !DILocation(line: 550, column: 19, scope: !10218)
!10306 = !DILocation(line: 550, column: 38, scope: !10218)
!10307 = !DILocation(line: 550, column: 41, scope: !10218)
!10308 = !DILocation(line: 550, column: 2, scope: !10218)
!10309 = !DILocation(line: 552, column: 13, scope: !10218)
!10310 = !DILocation(line: 552, column: 2, scope: !10218)
!10311 = !DILocation(line: 553, column: 1, scope: !10218)
!10312 = distinct !DISubprogram(name: "alps_get_bitmap_points", scope: !3, file: !3, line: 356, type: !10313, scopeLine: 360, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !407)
!10313 = !DISubroutineType(types: !10314)
!10314 = !{null, !7, !10315, !10315, !774}
!10315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9858, size: 64)
!10316 = !DILocalVariable(name: "map", arg: 1, scope: !10312, file: !3, line: 356, type: !7)
!10317 = !DILocation(line: 356, column: 49, scope: !10312)
!10318 = !DILocalVariable(name: "low", arg: 2, scope: !10312, file: !3, line: 357, type: !10315)
!10319 = !DILocation(line: 357, column: 34, scope: !10312)
!10320 = !DILocalVariable(name: "high", arg: 3, scope: !10312, file: !3, line: 358, type: !10315)
!10321 = !DILocation(line: 358, column: 34, scope: !10312)
!10322 = !DILocalVariable(name: "fingers", arg: 4, scope: !10312, file: !3, line: 359, type: !774)
!10323 = !DILocation(line: 359, column: 13, scope: !10312)
!10324 = !DILocalVariable(name: "point", scope: !10312, file: !3, line: 361, type: !10315)
!10325 = !DILocation(line: 361, column: 28, scope: !10312)
!10326 = !DILocalVariable(name: "i", scope: !10312, file: !3, line: 362, type: !262)
!10327 = !DILocation(line: 362, column: 6, scope: !10312)
!10328 = !DILocalVariable(name: "bit", scope: !10312, file: !3, line: 362, type: !262)
!10329 = !DILocation(line: 362, column: 9, scope: !10312)
!10330 = !DILocalVariable(name: "prev_bit", scope: !10312, file: !3, line: 362, type: !262)
!10331 = !DILocation(line: 362, column: 14, scope: !10312)
!10332 = !DILocation(line: 364, column: 10, scope: !10312)
!10333 = !DILocation(line: 364, column: 8, scope: !10312)
!10334 = !DILocation(line: 365, column: 9, scope: !10335)
!10335 = distinct !DILexicalBlock(scope: !10312, file: !3, line: 365, column: 2)
!10336 = !DILocation(line: 365, column: 7, scope: !10335)
!10337 = !DILocation(line: 365, column: 14, scope: !10338)
!10338 = distinct !DILexicalBlock(scope: !10335, file: !3, line: 365, column: 2)
!10339 = !DILocation(line: 365, column: 18, scope: !10338)
!10340 = !DILocation(line: 365, column: 2, scope: !10335)
!10341 = !DILocation(line: 366, column: 9, scope: !10342)
!10342 = distinct !DILexicalBlock(scope: !10338, file: !3, line: 365, column: 40)
!10343 = !DILocation(line: 366, column: 13, scope: !10342)
!10344 = !DILocation(line: 366, column: 7, scope: !10342)
!10345 = !DILocation(line: 367, column: 7, scope: !10346)
!10346 = distinct !DILexicalBlock(scope: !10342, file: !3, line: 367, column: 7)
!10347 = !DILocation(line: 367, column: 7, scope: !10342)
!10348 = !DILocation(line: 368, column: 9, scope: !10349)
!10349 = distinct !DILexicalBlock(scope: !10350, file: !3, line: 368, column: 8)
!10350 = distinct !DILexicalBlock(scope: !10346, file: !3, line: 367, column: 12)
!10351 = !DILocation(line: 368, column: 8, scope: !10350)
!10352 = !DILocation(line: 369, column: 24, scope: !10353)
!10353 = distinct !DILexicalBlock(scope: !10349, file: !3, line: 368, column: 19)
!10354 = !DILocation(line: 369, column: 5, scope: !10353)
!10355 = !DILocation(line: 369, column: 12, scope: !10353)
!10356 = !DILocation(line: 369, column: 22, scope: !10353)
!10357 = !DILocation(line: 370, column: 5, scope: !10353)
!10358 = !DILocation(line: 370, column: 12, scope: !10353)
!10359 = !DILocation(line: 370, column: 21, scope: !10353)
!10360 = !DILocation(line: 371, column: 7, scope: !10353)
!10361 = !DILocation(line: 371, column: 15, scope: !10353)
!10362 = !DILocation(line: 372, column: 4, scope: !10353)
!10363 = !DILocation(line: 373, column: 4, scope: !10350)
!10364 = !DILocation(line: 373, column: 11, scope: !10350)
!10365 = !DILocation(line: 373, column: 19, scope: !10350)
!10366 = !DILocation(line: 374, column: 3, scope: !10350)
!10367 = !DILocation(line: 375, column: 8, scope: !10368)
!10368 = distinct !DILexicalBlock(scope: !10369, file: !3, line: 375, column: 8)
!10369 = distinct !DILexicalBlock(scope: !10346, file: !3, line: 374, column: 10)
!10370 = !DILocation(line: 375, column: 8, scope: !10369)
!10371 = !DILocation(line: 376, column: 13, scope: !10368)
!10372 = !DILocation(line: 376, column: 11, scope: !10368)
!10373 = !DILocation(line: 376, column: 5, scope: !10368)
!10374 = !DILocation(line: 378, column: 14, scope: !10342)
!10375 = !DILocation(line: 378, column: 12, scope: !10342)
!10376 = !DILocation(line: 379, column: 2, scope: !10342)
!10377 = !DILocation(line: 365, column: 25, scope: !10338)
!10378 = !DILocation(line: 365, column: 33, scope: !10338)
!10379 = !DILocation(line: 365, column: 2, scope: !10338)
!10380 = distinct !{!10380, !10340, !10381}
!10381 = !DILocation(line: 379, column: 2, scope: !10335)
!10382 = !DILocation(line: 380, column: 1, scope: !10312)
!10383 = distinct !DISubprogram(name: "alps_set_slot", scope: !3, file: !3, line: 502, type: !10384, scopeLine: 503, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !407)
!10384 = !DISubroutineType(types: !10385)
!10385 = !{null, !215, !262, !262, !262}
!10386 = !DILocalVariable(name: "dev", arg: 1, scope: !10383, file: !3, line: 502, type: !215)
!10387 = !DILocation(line: 502, column: 45, scope: !10383)
!10388 = !DILocalVariable(name: "slot", arg: 2, scope: !10383, file: !3, line: 502, type: !262)
!10389 = !DILocation(line: 502, column: 54, scope: !10383)
!10390 = !DILocalVariable(name: "x", arg: 3, scope: !10383, file: !3, line: 502, type: !262)
!10391 = !DILocation(line: 502, column: 64, scope: !10383)
!10392 = !DILocalVariable(name: "y", arg: 4, scope: !10383, file: !3, line: 502, type: !262)
!10393 = !DILocation(line: 502, column: 71, scope: !10383)
!10394 = !DILocation(line: 504, column: 16, scope: !10383)
!10395 = !DILocation(line: 504, column: 21, scope: !10383)
!10396 = !DILocation(line: 504, column: 2, scope: !10383)
!10397 = !DILocation(line: 505, column: 29, scope: !10383)
!10398 = !DILocation(line: 505, column: 2, scope: !10383)
!10399 = !DILocation(line: 506, column: 19, scope: !10383)
!10400 = !DILocation(line: 506, column: 43, scope: !10383)
!10401 = !DILocation(line: 506, column: 2, scope: !10383)
!10402 = !DILocation(line: 507, column: 19, scope: !10383)
!10403 = !DILocation(line: 507, column: 43, scope: !10383)
!10404 = !DILocation(line: 507, column: 2, scope: !10383)
!10405 = !DILocation(line: 508, column: 1, scope: !10383)
!10406 = distinct !DISubprogram(name: "input_mt_slot", scope: !3071, file: !3071, line: 85, type: !10407, scopeLine: 86, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !407)
!10407 = !DISubroutineType(types: !10408)
!10408 = !{null, !215, !262}
!10409 = !DILocalVariable(name: "dev", arg: 1, scope: !10406, file: !3071, line: 85, type: !215)
!10410 = !DILocation(line: 85, column: 52, scope: !10406)
!10411 = !DILocalVariable(name: "slot", arg: 2, scope: !10406, file: !3071, line: 85, type: !262)
!10412 = !DILocation(line: 85, column: 61, scope: !10406)
!10413 = !DILocation(line: 87, column: 14, scope: !10406)
!10414 = !DILocation(line: 87, column: 40, scope: !10406)
!10415 = !DILocation(line: 87, column: 2, scope: !10406)
!10416 = !DILocation(line: 88, column: 1, scope: !10406)
!10417 = distinct !DISubprogram(name: "alps_absolute_mode_v6", scope: !3, file: !3, line: 1929, type: !3962, scopeLine: 1930, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !407)
!10418 = !DILocalVariable(name: "psmouse", arg: 1, scope: !10417, file: !3, line: 1929, type: !210)
!10419 = !DILocation(line: 1929, column: 50, scope: !10417)
!10420 = !DILocalVariable(name: "reg_val", scope: !10417, file: !3, line: 1931, type: !369)
!10421 = !DILocation(line: 1931, column: 6, scope: !10417)
!10422 = !DILocalVariable(name: "ret", scope: !10417, file: !3, line: 1932, type: !262)
!10423 = !DILocation(line: 1932, column: 6, scope: !10417)
!10424 = !DILocation(line: 1935, column: 24, scope: !10425)
!10425 = distinct !DILexicalBlock(scope: !10417, file: !3, line: 1935, column: 6)
!10426 = !DILocation(line: 1935, column: 6, scope: !10425)
!10427 = !DILocation(line: 1935, column: 6, scope: !10417)
!10428 = !DILocation(line: 1936, column: 3, scope: !10425)
!10429 = !DILocation(line: 1938, column: 36, scope: !10417)
!10430 = !DILocation(line: 1938, column: 52, scope: !10417)
!10431 = !DILocation(line: 1938, column: 8, scope: !10417)
!10432 = !DILocation(line: 1938, column: 6, scope: !10417)
!10433 = !DILocation(line: 1940, column: 24, scope: !10434)
!10434 = distinct !DILexicalBlock(scope: !10417, file: !3, line: 1940, column: 6)
!10435 = !DILocation(line: 1940, column: 6, scope: !10434)
!10436 = !DILocation(line: 1940, column: 6, scope: !10417)
!10437 = !DILocation(line: 1941, column: 7, scope: !10434)
!10438 = !DILocation(line: 1941, column: 3, scope: !10434)
!10439 = !DILocation(line: 1943, column: 9, scope: !10417)
!10440 = !DILocation(line: 1943, column: 2, scope: !10417)
!10441 = !DILocation(line: 1944, column: 1, scope: !10417)
!10442 = distinct !DISubprogram(name: "alps_monitor_mode", scope: !3, file: !3, line: 1905, type: !3958, scopeLine: 1906, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !407)
!10443 = !DILocalVariable(name: "psmouse", arg: 1, scope: !10442, file: !3, line: 1905, type: !210)
!10444 = !DILocation(line: 1905, column: 46, scope: !10442)
!10445 = !DILocalVariable(name: "enable", arg: 2, scope: !10442, file: !3, line: 1905, type: !550)
!10446 = !DILocation(line: 1905, column: 60, scope: !10442)
!10447 = !DILocalVariable(name: "ps2dev", scope: !10442, file: !3, line: 1907, type: !5945)
!10448 = !DILocation(line: 1907, column: 17, scope: !10442)
!10449 = !DILocation(line: 1907, column: 27, scope: !10442)
!10450 = !DILocation(line: 1907, column: 36, scope: !10442)
!10451 = !DILocation(line: 1909, column: 6, scope: !10452)
!10452 = distinct !DILexicalBlock(scope: !10442, file: !3, line: 1909, column: 6)
!10453 = !DILocation(line: 1909, column: 6, scope: !10442)
!10454 = !DILocation(line: 1911, column: 19, scope: !10455)
!10455 = distinct !DILexicalBlock(scope: !10456, file: !3, line: 1911, column: 7)
!10456 = distinct !DILexicalBlock(scope: !10452, file: !3, line: 1909, column: 14)
!10457 = !DILocation(line: 1911, column: 7, scope: !10455)
!10458 = !DILocation(line: 1911, column: 57, scope: !10455)
!10459 = !DILocation(line: 1912, column: 19, scope: !10455)
!10460 = !DILocation(line: 1912, column: 7, scope: !10455)
!10461 = !DILocation(line: 1912, column: 54, scope: !10455)
!10462 = !DILocation(line: 1913, column: 19, scope: !10455)
!10463 = !DILocation(line: 1913, column: 7, scope: !10455)
!10464 = !DILocation(line: 1913, column: 54, scope: !10455)
!10465 = !DILocation(line: 1914, column: 19, scope: !10455)
!10466 = !DILocation(line: 1914, column: 7, scope: !10455)
!10467 = !DILocation(line: 1914, column: 54, scope: !10455)
!10468 = !DILocation(line: 1915, column: 19, scope: !10455)
!10469 = !DILocation(line: 1915, column: 7, scope: !10455)
!10470 = !DILocation(line: 1915, column: 57, scope: !10455)
!10471 = !DILocation(line: 1916, column: 19, scope: !10455)
!10472 = !DILocation(line: 1916, column: 7, scope: !10455)
!10473 = !DILocation(line: 1916, column: 57, scope: !10455)
!10474 = !DILocation(line: 1917, column: 19, scope: !10455)
!10475 = !DILocation(line: 1917, column: 7, scope: !10455)
!10476 = !DILocation(line: 1917, column: 57, scope: !10455)
!10477 = !DILocation(line: 1918, column: 19, scope: !10455)
!10478 = !DILocation(line: 1918, column: 7, scope: !10455)
!10479 = !DILocation(line: 1911, column: 7, scope: !10456)
!10480 = !DILocation(line: 1919, column: 4, scope: !10455)
!10481 = !DILocation(line: 1920, column: 2, scope: !10456)
!10482 = !DILocation(line: 1922, column: 19, scope: !10483)
!10483 = distinct !DILexicalBlock(scope: !10484, file: !3, line: 1922, column: 7)
!10484 = distinct !DILexicalBlock(scope: !10452, file: !3, line: 1920, column: 9)
!10485 = !DILocation(line: 1922, column: 7, scope: !10483)
!10486 = !DILocation(line: 1922, column: 7, scope: !10484)
!10487 = !DILocation(line: 1923, column: 4, scope: !10483)
!10488 = !DILocation(line: 1926, column: 2, scope: !10442)
!10489 = !DILocation(line: 1927, column: 1, scope: !10442)
!10490 = distinct !DISubprogram(name: "alps_monitor_mode_write_reg", scope: !3, file: !3, line: 1889, type: !10491, scopeLine: 1891, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !407)
!10491 = !DISubroutineType(types: !10492)
!10492 = !{!262, !210, !369, !369}
!10493 = !DILocalVariable(name: "psmouse", arg: 1, scope: !10490, file: !3, line: 1889, type: !210)
!10494 = !DILocation(line: 1889, column: 56, scope: !10490)
!10495 = !DILocalVariable(name: "addr", arg: 2, scope: !10490, file: !3, line: 1890, type: !369)
!10496 = !DILocation(line: 1890, column: 16, scope: !10490)
!10497 = !DILocalVariable(name: "value", arg: 3, scope: !10490, file: !3, line: 1890, type: !369)
!10498 = !DILocation(line: 1890, column: 26, scope: !10490)
!10499 = !DILocalVariable(name: "ps2dev", scope: !10490, file: !3, line: 1892, type: !5945)
!10500 = !DILocation(line: 1892, column: 17, scope: !10490)
!10501 = !DILocation(line: 1892, column: 27, scope: !10490)
!10502 = !DILocation(line: 1892, column: 36, scope: !10490)
!10503 = !DILocation(line: 1895, column: 18, scope: !10504)
!10504 = distinct !DILexicalBlock(scope: !10490, file: !3, line: 1895, column: 6)
!10505 = !DILocation(line: 1895, column: 6, scope: !10504)
!10506 = !DILocation(line: 1895, column: 52, scope: !10504)
!10507 = !DILocation(line: 1896, column: 34, scope: !10504)
!10508 = !DILocation(line: 1896, column: 6, scope: !10504)
!10509 = !DILocation(line: 1896, column: 50, scope: !10504)
!10510 = !DILocation(line: 1897, column: 34, scope: !10504)
!10511 = !DILocation(line: 1897, column: 43, scope: !10504)
!10512 = !DILocation(line: 1897, column: 6, scope: !10504)
!10513 = !DILocation(line: 1897, column: 49, scope: !10504)
!10514 = !DILocation(line: 1898, column: 34, scope: !10504)
!10515 = !DILocation(line: 1898, column: 43, scope: !10504)
!10516 = !DILocation(line: 1898, column: 6, scope: !10504)
!10517 = !DILocation(line: 1898, column: 50, scope: !10504)
!10518 = !DILocation(line: 1899, column: 18, scope: !10504)
!10519 = !DILocation(line: 1899, column: 6, scope: !10504)
!10520 = !DILocation(line: 1895, column: 6, scope: !10490)
!10521 = !DILocation(line: 1900, column: 3, scope: !10504)
!10522 = !DILocation(line: 1902, column: 2, scope: !10490)
!10523 = !DILocation(line: 1903, column: 1, scope: !10490)
!10524 = distinct !DISubprogram(name: "alps_monitor_mode_send_word", scope: !3, file: !3, line: 1872, type: !10525, scopeLine: 1873, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !407)
!10525 = !DISubroutineType(types: !10526)
!10526 = !{!262, !210, !369}
!10527 = !DILocalVariable(name: "psmouse", arg: 1, scope: !10524, file: !3, line: 1872, type: !210)
!10528 = !DILocation(line: 1872, column: 56, scope: !10524)
!10529 = !DILocalVariable(name: "word", arg: 2, scope: !10524, file: !3, line: 1872, type: !369)
!10530 = !DILocation(line: 1872, column: 69, scope: !10524)
!10531 = !DILocalVariable(name: "i", scope: !10524, file: !3, line: 1874, type: !262)
!10532 = !DILocation(line: 1874, column: 6, scope: !10524)
!10533 = !DILocalVariable(name: "nibble", scope: !10524, file: !3, line: 1874, type: !262)
!10534 = !DILocation(line: 1874, column: 9, scope: !10524)
!10535 = !DILocation(line: 1880, column: 9, scope: !10536)
!10536 = distinct !DILexicalBlock(scope: !10524, file: !3, line: 1880, column: 2)
!10537 = !DILocation(line: 1880, column: 7, scope: !10536)
!10538 = !DILocation(line: 1880, column: 14, scope: !10539)
!10539 = distinct !DILexicalBlock(scope: !10536, file: !3, line: 1880, column: 2)
!10540 = !DILocation(line: 1880, column: 16, scope: !10539)
!10541 = !DILocation(line: 1880, column: 2, scope: !10536)
!10542 = !DILocation(line: 1881, column: 13, scope: !10543)
!10543 = distinct !DILexicalBlock(scope: !10539, file: !3, line: 1880, column: 30)
!10544 = !DILocation(line: 1881, column: 21, scope: !10543)
!10545 = !DILocation(line: 1881, column: 18, scope: !10543)
!10546 = !DILocation(line: 1881, column: 24, scope: !10543)
!10547 = !DILocation(line: 1881, column: 10, scope: !10543)
!10548 = !DILocation(line: 1882, column: 37, scope: !10549)
!10549 = distinct !DILexicalBlock(scope: !10543, file: !3, line: 1882, column: 7)
!10550 = !DILocation(line: 1882, column: 46, scope: !10549)
!10551 = !DILocation(line: 1882, column: 7, scope: !10549)
!10552 = !DILocation(line: 1882, column: 7, scope: !10543)
!10553 = !DILocation(line: 1883, column: 4, scope: !10549)
!10554 = !DILocation(line: 1884, column: 2, scope: !10543)
!10555 = !DILocation(line: 1880, column: 24, scope: !10539)
!10556 = !DILocation(line: 1880, column: 2, scope: !10539)
!10557 = distinct !{!10557, !10541, !10558}
!10558 = !DILocation(line: 1884, column: 2, scope: !10536)
!10559 = !DILocation(line: 1886, column: 2, scope: !10524)
!10560 = !DILocation(line: 1887, column: 1, scope: !10524)
!10561 = distinct !DISubprogram(name: "alps_process_trackstick_packet_v7", scope: !3, file: !3, line: 1088, type: !4003, scopeLine: 1089, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !407)
!10562 = !DILocalVariable(name: "psmouse", arg: 1, scope: !10561, file: !3, line: 1088, type: !210)
!10563 = !DILocation(line: 1088, column: 63, scope: !10561)
!10564 = !DILocalVariable(name: "priv", scope: !10561, file: !3, line: 1090, type: !206)
!10565 = !DILocation(line: 1090, column: 20, scope: !10561)
!10566 = !DILocation(line: 1090, column: 27, scope: !10561)
!10567 = !DILocation(line: 1090, column: 36, scope: !10561)
!10568 = !DILocalVariable(name: "packet", scope: !10561, file: !3, line: 1091, type: !4063)
!10569 = !DILocation(line: 1091, column: 17, scope: !10561)
!10570 = !DILocation(line: 1091, column: 26, scope: !10561)
!10571 = !DILocation(line: 1091, column: 35, scope: !10561)
!10572 = !DILocalVariable(name: "dev2", scope: !10561, file: !3, line: 1092, type: !215)
!10573 = !DILocation(line: 1092, column: 20, scope: !10561)
!10574 = !DILocation(line: 1092, column: 27, scope: !10561)
!10575 = !DILocation(line: 1092, column: 33, scope: !10561)
!10576 = !DILocalVariable(name: "x", scope: !10561, file: !3, line: 1093, type: !262)
!10577 = !DILocation(line: 1093, column: 6, scope: !10561)
!10578 = !DILocalVariable(name: "y", scope: !10561, file: !3, line: 1093, type: !262)
!10579 = !DILocation(line: 1093, column: 9, scope: !10561)
!10580 = !DILocalVariable(name: "z", scope: !10561, file: !3, line: 1093, type: !262)
!10581 = !DILocation(line: 1093, column: 12, scope: !10561)
!10582 = !DILocation(line: 1096, column: 8, scope: !10583)
!10583 = distinct !DILexicalBlock(scope: !10561, file: !3, line: 1096, column: 6)
!10584 = !DILocation(line: 1096, column: 14, scope: !10583)
!10585 = !DILocation(line: 1096, column: 20, scope: !10583)
!10586 = !DILocation(line: 1096, column: 6, scope: !10561)
!10587 = !DILocation(line: 1097, column: 3, scope: !10588)
!10588 = distinct !DILexicalBlock(scope: !10583, file: !3, line: 1096, column: 39)
!10589 = !DILocation(line: 1099, column: 3, scope: !10588)
!10590 = !DILocation(line: 1102, column: 8, scope: !10561)
!10591 = !DILocation(line: 1102, column: 18, scope: !10561)
!10592 = !DILocation(line: 1102, column: 31, scope: !10561)
!10593 = !DILocation(line: 1102, column: 41, scope: !10561)
!10594 = !DILocation(line: 1102, column: 49, scope: !10561)
!10595 = !DILocation(line: 1102, column: 27, scope: !10561)
!10596 = !DILocation(line: 1102, column: 4, scope: !10561)
!10597 = !DILocation(line: 1103, column: 7, scope: !10561)
!10598 = !DILocation(line: 1103, column: 17, scope: !10561)
!10599 = !DILocation(line: 1103, column: 28, scope: !10561)
!10600 = !DILocation(line: 1103, column: 38, scope: !10561)
!10601 = !DILocation(line: 1103, column: 25, scope: !10561)
!10602 = !DILocation(line: 1104, column: 8, scope: !10561)
!10603 = !DILocation(line: 1104, column: 18, scope: !10561)
!10604 = !DILocation(line: 1104, column: 26, scope: !10561)
!10605 = !DILocation(line: 1103, column: 46, scope: !10561)
!10606 = !DILocation(line: 1103, column: 4, scope: !10561)
!10607 = !DILocation(line: 1105, column: 7, scope: !10561)
!10608 = !DILocation(line: 1105, column: 17, scope: !10561)
!10609 = !DILocation(line: 1105, column: 29, scope: !10561)
!10610 = !DILocation(line: 1105, column: 39, scope: !10561)
!10611 = !DILocation(line: 1105, column: 47, scope: !10561)
!10612 = !DILocation(line: 1105, column: 25, scope: !10561)
!10613 = !DILocation(line: 1105, column: 4, scope: !10561)
!10614 = !DILocation(line: 1107, column: 19, scope: !10561)
!10615 = !DILocation(line: 1107, column: 38, scope: !10561)
!10616 = !DILocation(line: 1107, column: 32, scope: !10561)
!10617 = !DILocation(line: 1107, column: 2, scope: !10561)
!10618 = !DILocation(line: 1108, column: 19, scope: !10561)
!10619 = !DILocation(line: 1108, column: 40, scope: !10561)
!10620 = !DILocation(line: 1108, column: 34, scope: !10561)
!10621 = !DILocation(line: 1108, column: 33, scope: !10561)
!10622 = !DILocation(line: 1108, column: 32, scope: !10561)
!10623 = !DILocation(line: 1108, column: 2, scope: !10561)
!10624 = !DILocation(line: 1109, column: 19, scope: !10561)
!10625 = !DILocation(line: 1109, column: 39, scope: !10561)
!10626 = !DILocation(line: 1109, column: 2, scope: !10561)
!10627 = !DILocation(line: 1111, column: 34, scope: !10561)
!10628 = !DILocation(line: 1111, column: 40, scope: !10561)
!10629 = !DILocation(line: 1111, column: 2, scope: !10561)
!10630 = !DILocation(line: 1113, column: 13, scope: !10561)
!10631 = !DILocation(line: 1113, column: 2, scope: !10561)
!10632 = !DILocation(line: 1114, column: 1, scope: !10561)
!10633 = distinct !DISubprogram(name: "alps_process_touchpad_packet_v7", scope: !3, file: !3, line: 1116, type: !4003, scopeLine: 1117, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !407)
!10634 = !DILocalVariable(name: "psmouse", arg: 1, scope: !10633, file: !3, line: 1116, type: !210)
!10635 = !DILocation(line: 1116, column: 61, scope: !10633)
!10636 = !DILocalVariable(name: "priv", scope: !10633, file: !3, line: 1118, type: !206)
!10637 = !DILocation(line: 1118, column: 20, scope: !10633)
!10638 = !DILocation(line: 1118, column: 27, scope: !10633)
!10639 = !DILocation(line: 1118, column: 36, scope: !10633)
!10640 = !DILocalVariable(name: "dev", scope: !10633, file: !3, line: 1119, type: !215)
!10641 = !DILocation(line: 1119, column: 20, scope: !10633)
!10642 = !DILocation(line: 1119, column: 26, scope: !10633)
!10643 = !DILocation(line: 1119, column: 35, scope: !10633)
!10644 = !DILocalVariable(name: "f", scope: !10633, file: !3, line: 1120, type: !4041)
!10645 = !DILocation(line: 1120, column: 22, scope: !10633)
!10646 = !DILocation(line: 1120, column: 27, scope: !10633)
!10647 = !DILocation(line: 1120, column: 33, scope: !10633)
!10648 = !DILocation(line: 1122, column: 9, scope: !10633)
!10649 = !DILocation(line: 1122, column: 2, scope: !10633)
!10650 = !DILocation(line: 1124, column: 6, scope: !10651)
!10651 = distinct !DILexicalBlock(scope: !10633, file: !3, line: 1124, column: 6)
!10652 = !DILocation(line: 1124, column: 12, scope: !10651)
!10653 = !DILocation(line: 1124, column: 26, scope: !10651)
!10654 = !DILocation(line: 1124, column: 29, scope: !10651)
!10655 = !DILocation(line: 1124, column: 38, scope: !10651)
!10656 = !DILocation(line: 1124, column: 46, scope: !10651)
!10657 = !DILocation(line: 1124, column: 6, scope: !10633)
!10658 = !DILocation(line: 1125, column: 3, scope: !10651)
!10659 = !DILocation(line: 1127, column: 22, scope: !10633)
!10660 = !DILocation(line: 1127, column: 49, scope: !10633)
!10661 = !DILocation(line: 1127, column: 52, scope: !10633)
!10662 = !DILocation(line: 1127, column: 31, scope: !10633)
!10663 = !DILocation(line: 1127, column: 2, scope: !10633)
!10664 = !DILocation(line: 1129, column: 31, scope: !10633)
!10665 = !DILocation(line: 1129, column: 36, scope: !10633)
!10666 = !DILocation(line: 1129, column: 39, scope: !10633)
!10667 = !DILocation(line: 1129, column: 2, scope: !10633)
!10668 = !DILocation(line: 1131, column: 19, scope: !10633)
!10669 = !DILocation(line: 1131, column: 34, scope: !10633)
!10670 = !DILocation(line: 1131, column: 37, scope: !10633)
!10671 = !DILocation(line: 1131, column: 2, scope: !10633)
!10672 = !DILocation(line: 1132, column: 19, scope: !10633)
!10673 = !DILocation(line: 1132, column: 35, scope: !10633)
!10674 = !DILocation(line: 1132, column: 38, scope: !10633)
!10675 = !DILocation(line: 1132, column: 2, scope: !10633)
!10676 = !DILocation(line: 1133, column: 19, scope: !10633)
!10677 = !DILocation(line: 1133, column: 36, scope: !10633)
!10678 = !DILocation(line: 1133, column: 39, scope: !10633)
!10679 = !DILocation(line: 1133, column: 2, scope: !10633)
!10680 = !DILocation(line: 1135, column: 13, scope: !10633)
!10681 = !DILocation(line: 1135, column: 2, scope: !10633)
!10682 = !DILocation(line: 1136, column: 1, scope: !10633)
!10683 = distinct !DISubprogram(name: "alps_report_mt_data", scope: !3, file: !3, line: 510, type: !10219, scopeLine: 511, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !407)
!10684 = !DILocalVariable(name: "psmouse", arg: 1, scope: !10683, file: !3, line: 510, type: !210)
!10685 = !DILocation(line: 510, column: 49, scope: !10683)
!10686 = !DILocalVariable(name: "n", arg: 2, scope: !10683, file: !3, line: 510, type: !262)
!10687 = !DILocation(line: 510, column: 62, scope: !10683)
!10688 = !DILocalVariable(name: "priv", scope: !10683, file: !3, line: 512, type: !206)
!10689 = !DILocation(line: 512, column: 20, scope: !10683)
!10690 = !DILocation(line: 512, column: 27, scope: !10683)
!10691 = !DILocation(line: 512, column: 36, scope: !10683)
!10692 = !DILocalVariable(name: "dev", scope: !10683, file: !3, line: 513, type: !215)
!10693 = !DILocation(line: 513, column: 20, scope: !10683)
!10694 = !DILocation(line: 513, column: 26, scope: !10683)
!10695 = !DILocation(line: 513, column: 35, scope: !10683)
!10696 = !DILocalVariable(name: "f", scope: !10683, file: !3, line: 514, type: !4041)
!10697 = !DILocation(line: 514, column: 22, scope: !10683)
!10698 = !DILocation(line: 514, column: 27, scope: !10683)
!10699 = !DILocation(line: 514, column: 33, scope: !10683)
!10700 = !DILocalVariable(name: "i", scope: !10683, file: !3, line: 515, type: !262)
!10701 = !DILocation(line: 515, column: 6, scope: !10683)
!10702 = !DILocalVariable(name: "slot", scope: !10683, file: !3, line: 515, type: !10703)
!10703 = !DICompositeType(tag: DW_TAG_array_type, baseType: !262, size: 128, elements: !1135)
!10704 = !DILocation(line: 515, column: 9, scope: !10683)
!10705 = !DILocation(line: 517, column: 24, scope: !10683)
!10706 = !DILocation(line: 517, column: 29, scope: !10683)
!10707 = !DILocation(line: 517, column: 35, scope: !10683)
!10708 = !DILocation(line: 517, column: 38, scope: !10683)
!10709 = !DILocation(line: 517, column: 42, scope: !10683)
!10710 = !DILocation(line: 517, column: 2, scope: !10683)
!10711 = !DILocation(line: 518, column: 9, scope: !10712)
!10712 = distinct !DILexicalBlock(scope: !10683, file: !3, line: 518, column: 2)
!10713 = !DILocation(line: 518, column: 7, scope: !10712)
!10714 = !DILocation(line: 518, column: 14, scope: !10715)
!10715 = distinct !DILexicalBlock(scope: !10712, file: !3, line: 518, column: 2)
!10716 = !DILocation(line: 518, column: 18, scope: !10715)
!10717 = !DILocation(line: 518, column: 16, scope: !10715)
!10718 = !DILocation(line: 518, column: 2, scope: !10712)
!10719 = !DILocation(line: 519, column: 17, scope: !10715)
!10720 = !DILocation(line: 519, column: 27, scope: !10715)
!10721 = !DILocation(line: 519, column: 22, scope: !10715)
!10722 = !DILocation(line: 519, column: 31, scope: !10715)
!10723 = !DILocation(line: 519, column: 34, scope: !10715)
!10724 = !DILocation(line: 519, column: 37, scope: !10715)
!10725 = !DILocation(line: 519, column: 40, scope: !10715)
!10726 = !DILocation(line: 519, column: 43, scope: !10715)
!10727 = !DILocation(line: 519, column: 46, scope: !10715)
!10728 = !DILocation(line: 519, column: 49, scope: !10715)
!10729 = !DILocation(line: 519, column: 52, scope: !10715)
!10730 = !DILocation(line: 519, column: 3, scope: !10715)
!10731 = !DILocation(line: 518, column: 22, scope: !10715)
!10732 = !DILocation(line: 518, column: 2, scope: !10715)
!10733 = distinct !{!10733, !10718, !10734}
!10734 = !DILocation(line: 519, column: 53, scope: !10712)
!10735 = !DILocation(line: 521, column: 22, scope: !10683)
!10736 = !DILocation(line: 521, column: 2, scope: !10683)
!10737 = !DILocation(line: 522, column: 1, scope: !10683)
!10738 = distinct !DISubprogram(name: "alps_get_mt_count", scope: !3, file: !3, line: 1014, type: !10739, scopeLine: 1015, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !407)
!10739 = !DISubroutineType(types: !10740)
!10740 = !{!262, !10741}
!10741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4049, size: 64)
!10742 = !DILocalVariable(name: "mt", arg: 1, scope: !10738, file: !3, line: 1014, type: !10741)
!10743 = !DILocation(line: 1014, column: 51, scope: !10738)
!10744 = !DILocalVariable(name: "i", scope: !10738, file: !3, line: 1016, type: !262)
!10745 = !DILocation(line: 1016, column: 6, scope: !10738)
!10746 = !DILocalVariable(name: "fingers", scope: !10738, file: !3, line: 1016, type: !262)
!10747 = !DILocation(line: 1016, column: 9, scope: !10738)
!10748 = !DILocation(line: 1018, column: 9, scope: !10749)
!10749 = distinct !DILexicalBlock(scope: !10738, file: !3, line: 1018, column: 2)
!10750 = !DILocation(line: 1018, column: 7, scope: !10749)
!10751 = !DILocation(line: 1018, column: 14, scope: !10752)
!10752 = distinct !DILexicalBlock(scope: !10749, file: !3, line: 1018, column: 2)
!10753 = !DILocation(line: 1018, column: 16, scope: !10752)
!10754 = !DILocation(line: 1018, column: 2, scope: !10749)
!10755 = !DILocation(line: 1019, column: 7, scope: !10756)
!10756 = distinct !DILexicalBlock(scope: !10757, file: !3, line: 1019, column: 7)
!10757 = distinct !DILexicalBlock(scope: !10752, file: !3, line: 1018, column: 36)
!10758 = !DILocation(line: 1019, column: 10, scope: !10756)
!10759 = !DILocation(line: 1019, column: 13, scope: !10756)
!10760 = !DILocation(line: 1019, column: 15, scope: !10756)
!10761 = !DILocation(line: 1019, column: 20, scope: !10756)
!10762 = !DILocation(line: 1019, column: 23, scope: !10756)
!10763 = !DILocation(line: 1019, column: 26, scope: !10756)
!10764 = !DILocation(line: 1019, column: 29, scope: !10756)
!10765 = !DILocation(line: 1019, column: 31, scope: !10756)
!10766 = !DILocation(line: 1019, column: 7, scope: !10757)
!10767 = !DILocation(line: 1020, column: 11, scope: !10756)
!10768 = !DILocation(line: 1020, column: 4, scope: !10756)
!10769 = !DILocation(line: 1021, column: 2, scope: !10757)
!10770 = !DILocation(line: 1018, column: 32, scope: !10752)
!10771 = !DILocation(line: 1018, column: 2, scope: !10752)
!10772 = distinct !{!10772, !10754, !10773}
!10773 = !DILocation(line: 1021, column: 2, scope: !10749)
!10774 = !DILocation(line: 1023, column: 9, scope: !10738)
!10775 = !DILocation(line: 1023, column: 2, scope: !10738)
!10776 = distinct !DISubprogram(name: "alps_get_packet_id_v7", scope: !3, file: !3, line: 951, type: !10777, scopeLine: 952, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !407)
!10777 = !DISubroutineType(types: !10778)
!10778 = !{!269, !545}
!10779 = !DILocalVariable(name: "byte", arg: 1, scope: !10776, file: !3, line: 951, type: !545)
!10780 = !DILocation(line: 951, column: 50, scope: !10776)
!10781 = !DILocalVariable(name: "packet_id", scope: !10776, file: !3, line: 953, type: !269)
!10782 = !DILocation(line: 953, column: 16, scope: !10776)
!10783 = !DILocation(line: 955, column: 6, scope: !10784)
!10784 = distinct !DILexicalBlock(scope: !10776, file: !3, line: 955, column: 6)
!10785 = !DILocation(line: 955, column: 14, scope: !10784)
!10786 = !DILocation(line: 955, column: 6, scope: !10776)
!10787 = !DILocation(line: 956, column: 13, scope: !10784)
!10788 = !DILocation(line: 956, column: 3, scope: !10784)
!10789 = !DILocation(line: 957, column: 11, scope: !10790)
!10790 = distinct !DILexicalBlock(scope: !10784, file: !3, line: 957, column: 11)
!10791 = !DILocation(line: 957, column: 19, scope: !10790)
!10792 = !DILocation(line: 957, column: 11, scope: !10784)
!10793 = !DILocation(line: 958, column: 13, scope: !10790)
!10794 = !DILocation(line: 958, column: 3, scope: !10790)
!10795 = !DILocation(line: 959, column: 12, scope: !10796)
!10796 = distinct !DILexicalBlock(scope: !10790, file: !3, line: 959, column: 11)
!10797 = !DILocation(line: 959, column: 20, scope: !10796)
!10798 = !DILocation(line: 959, column: 28, scope: !10796)
!10799 = !DILocation(line: 959, column: 33, scope: !10796)
!10800 = !DILocation(line: 959, column: 41, scope: !10796)
!10801 = !DILocation(line: 959, column: 11, scope: !10790)
!10802 = !DILocation(line: 960, column: 13, scope: !10796)
!10803 = !DILocation(line: 960, column: 3, scope: !10796)
!10804 = !DILocation(line: 961, column: 11, scope: !10805)
!10805 = distinct !DILexicalBlock(scope: !10796, file: !3, line: 961, column: 11)
!10806 = !DILocation(line: 961, column: 19, scope: !10805)
!10807 = !DILocation(line: 961, column: 27, scope: !10805)
!10808 = !DILocation(line: 961, column: 30, scope: !10805)
!10809 = !DILocation(line: 961, column: 38, scope: !10805)
!10810 = !DILocation(line: 961, column: 11, scope: !10796)
!10811 = !DILocation(line: 962, column: 13, scope: !10805)
!10812 = !DILocation(line: 962, column: 3, scope: !10805)
!10813 = !DILocation(line: 964, column: 13, scope: !10805)
!10814 = !DILocation(line: 966, column: 9, scope: !10776)
!10815 = !DILocation(line: 966, column: 2, scope: !10776)
!10816 = distinct !DISubprogram(name: "alps_get_finger_coordinate_v7", scope: !3, file: !3, line: 969, type: !10817, scopeLine: 972, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !407)
!10817 = !DISubroutineType(types: !10818)
!10818 = !{null, !10741, !4063, !269}
!10819 = !DILocalVariable(name: "mt", arg: 1, scope: !10816, file: !3, line: 969, type: !10741)
!10820 = !DILocation(line: 969, column: 64, scope: !10816)
!10821 = !DILocalVariable(name: "pkt", arg: 2, scope: !10816, file: !3, line: 970, type: !4063)
!10822 = !DILocation(line: 970, column: 23, scope: !10816)
!10823 = !DILocalVariable(name: "pkt_id", arg: 3, scope: !10816, file: !3, line: 971, type: !269)
!10824 = !DILocation(line: 971, column: 22, scope: !10816)
!10825 = !DILocation(line: 973, column: 14, scope: !10816)
!10826 = !DILocation(line: 973, column: 21, scope: !10816)
!10827 = !DILocation(line: 973, column: 29, scope: !10816)
!10828 = !DILocation(line: 973, column: 12, scope: !10816)
!10829 = !DILocation(line: 973, column: 2, scope: !10816)
!10830 = !DILocation(line: 973, column: 8, scope: !10816)
!10831 = !DILocation(line: 973, column: 10, scope: !10816)
!10832 = !DILocation(line: 974, column: 15, scope: !10816)
!10833 = !DILocation(line: 974, column: 22, scope: !10816)
!10834 = !DILocation(line: 974, column: 30, scope: !10816)
!10835 = !DILocation(line: 974, column: 2, scope: !10816)
!10836 = !DILocation(line: 974, column: 8, scope: !10816)
!10837 = !DILocation(line: 974, column: 10, scope: !10816)
!10838 = !DILocation(line: 975, column: 15, scope: !10816)
!10839 = !DILocation(line: 975, column: 22, scope: !10816)
!10840 = !DILocation(line: 975, column: 30, scope: !10816)
!10841 = !DILocation(line: 975, column: 2, scope: !10816)
!10842 = !DILocation(line: 975, column: 8, scope: !10816)
!10843 = !DILocation(line: 975, column: 10, scope: !10816)
!10844 = !DILocation(line: 976, column: 14, scope: !10816)
!10845 = !DILocation(line: 976, column: 21, scope: !10816)
!10846 = !DILocation(line: 976, column: 2, scope: !10816)
!10847 = !DILocation(line: 976, column: 8, scope: !10816)
!10848 = !DILocation(line: 976, column: 10, scope: !10816)
!10849 = !DILocation(line: 977, column: 13, scope: !10816)
!10850 = !DILocation(line: 977, column: 20, scope: !10816)
!10851 = !DILocation(line: 977, column: 29, scope: !10816)
!10852 = !DILocation(line: 977, column: 36, scope: !10816)
!10853 = !DILocation(line: 977, column: 26, scope: !10816)
!10854 = !DILocation(line: 977, column: 12, scope: !10816)
!10855 = !DILocation(line: 977, column: 2, scope: !10816)
!10856 = !DILocation(line: 977, column: 8, scope: !10816)
!10857 = !DILocation(line: 977, column: 10, scope: !10816)
!10858 = !DILocation(line: 979, column: 14, scope: !10816)
!10859 = !DILocation(line: 979, column: 21, scope: !10816)
!10860 = !DILocation(line: 979, column: 29, scope: !10816)
!10861 = !DILocation(line: 979, column: 12, scope: !10816)
!10862 = !DILocation(line: 979, column: 2, scope: !10816)
!10863 = !DILocation(line: 979, column: 8, scope: !10816)
!10864 = !DILocation(line: 979, column: 10, scope: !10816)
!10865 = !DILocation(line: 980, column: 15, scope: !10816)
!10866 = !DILocation(line: 980, column: 22, scope: !10816)
!10867 = !DILocation(line: 980, column: 30, scope: !10816)
!10868 = !DILocation(line: 980, column: 2, scope: !10816)
!10869 = !DILocation(line: 980, column: 8, scope: !10816)
!10870 = !DILocation(line: 980, column: 10, scope: !10816)
!10871 = !DILocation(line: 981, column: 15, scope: !10816)
!10872 = !DILocation(line: 981, column: 22, scope: !10816)
!10873 = !DILocation(line: 981, column: 30, scope: !10816)
!10874 = !DILocation(line: 981, column: 2, scope: !10816)
!10875 = !DILocation(line: 981, column: 8, scope: !10816)
!10876 = !DILocation(line: 981, column: 10, scope: !10816)
!10877 = !DILocation(line: 982, column: 14, scope: !10816)
!10878 = !DILocation(line: 982, column: 21, scope: !10816)
!10879 = !DILocation(line: 982, column: 29, scope: !10816)
!10880 = !DILocation(line: 982, column: 12, scope: !10816)
!10881 = !DILocation(line: 982, column: 2, scope: !10816)
!10882 = !DILocation(line: 982, column: 8, scope: !10816)
!10883 = !DILocation(line: 982, column: 10, scope: !10816)
!10884 = !DILocation(line: 983, column: 15, scope: !10816)
!10885 = !DILocation(line: 983, column: 22, scope: !10816)
!10886 = !DILocation(line: 983, column: 30, scope: !10816)
!10887 = !DILocation(line: 983, column: 2, scope: !10816)
!10888 = !DILocation(line: 983, column: 8, scope: !10816)
!10889 = !DILocation(line: 983, column: 10, scope: !10816)
!10890 = !DILocation(line: 985, column: 10, scope: !10816)
!10891 = !DILocation(line: 985, column: 2, scope: !10816)
!10892 = !DILocation(line: 987, column: 3, scope: !10893)
!10893 = distinct !DILexicalBlock(scope: !10816, file: !3, line: 985, column: 18)
!10894 = !DILocation(line: 987, column: 9, scope: !10893)
!10895 = !DILocation(line: 987, column: 11, scope: !10893)
!10896 = !DILocation(line: 988, column: 3, scope: !10893)
!10897 = !DILocation(line: 988, column: 9, scope: !10893)
!10898 = !DILocation(line: 988, column: 11, scope: !10893)
!10899 = !DILocation(line: 990, column: 7, scope: !10900)
!10900 = distinct !DILexicalBlock(scope: !10893, file: !3, line: 990, column: 7)
!10901 = !DILocation(line: 990, column: 13, scope: !10900)
!10902 = !DILocation(line: 990, column: 15, scope: !10900)
!10903 = !DILocation(line: 990, column: 24, scope: !10900)
!10904 = !DILocation(line: 990, column: 27, scope: !10900)
!10905 = !DILocation(line: 990, column: 33, scope: !10900)
!10906 = !DILocation(line: 990, column: 35, scope: !10900)
!10907 = !DILocation(line: 990, column: 7, scope: !10893)
!10908 = !DILocation(line: 991, column: 4, scope: !10909)
!10909 = distinct !DILexicalBlock(scope: !10900, file: !3, line: 990, column: 45)
!10910 = !DILocation(line: 991, column: 10, scope: !10909)
!10911 = !DILocation(line: 991, column: 12, scope: !10909)
!10912 = !DILocation(line: 993, column: 3, scope: !10909)
!10913 = !DILocation(line: 994, column: 3, scope: !10893)
!10914 = !DILocation(line: 997, column: 3, scope: !10893)
!10915 = !DILocation(line: 997, column: 9, scope: !10893)
!10916 = !DILocation(line: 997, column: 11, scope: !10893)
!10917 = !DILocation(line: 998, column: 3, scope: !10893)
!10918 = !DILocation(line: 998, column: 9, scope: !10893)
!10919 = !DILocation(line: 998, column: 11, scope: !10893)
!10920 = !DILocation(line: 999, column: 16, scope: !10893)
!10921 = !DILocation(line: 999, column: 23, scope: !10893)
!10922 = !DILocation(line: 999, column: 31, scope: !10893)
!10923 = !DILocation(line: 999, column: 3, scope: !10893)
!10924 = !DILocation(line: 999, column: 9, scope: !10893)
!10925 = !DILocation(line: 999, column: 11, scope: !10893)
!10926 = !DILocation(line: 1000, column: 3, scope: !10893)
!10927 = !DILocation(line: 1000, column: 9, scope: !10893)
!10928 = !DILocation(line: 1000, column: 11, scope: !10893)
!10929 = !DILocation(line: 1001, column: 3, scope: !10893)
!10930 = !DILocation(line: 1004, column: 3, scope: !10893)
!10931 = !DILocation(line: 1004, column: 9, scope: !10893)
!10932 = !DILocation(line: 1004, column: 11, scope: !10893)
!10933 = !DILocation(line: 1005, column: 15, scope: !10893)
!10934 = !DILocation(line: 1005, column: 22, scope: !10893)
!10935 = !DILocation(line: 1005, column: 3, scope: !10893)
!10936 = !DILocation(line: 1005, column: 9, scope: !10893)
!10937 = !DILocation(line: 1005, column: 11, scope: !10893)
!10938 = !DILocation(line: 1006, column: 3, scope: !10893)
!10939 = !DILocation(line: 1006, column: 9, scope: !10893)
!10940 = !DILocation(line: 1006, column: 11, scope: !10893)
!10941 = !DILocation(line: 1007, column: 3, scope: !10893)
!10942 = !DILocation(line: 1010, column: 20, scope: !10816)
!10943 = !DILocation(line: 1010, column: 26, scope: !10816)
!10944 = !DILocation(line: 1010, column: 18, scope: !10816)
!10945 = !DILocation(line: 1010, column: 12, scope: !10816)
!10946 = !DILocation(line: 1010, column: 2, scope: !10816)
!10947 = !DILocation(line: 1010, column: 8, scope: !10816)
!10948 = !DILocation(line: 1010, column: 10, scope: !10816)
!10949 = !DILocation(line: 1011, column: 20, scope: !10816)
!10950 = !DILocation(line: 1011, column: 26, scope: !10816)
!10951 = !DILocation(line: 1011, column: 18, scope: !10816)
!10952 = !DILocation(line: 1011, column: 12, scope: !10816)
!10953 = !DILocation(line: 1011, column: 2, scope: !10816)
!10954 = !DILocation(line: 1011, column: 8, scope: !10816)
!10955 = !DILocation(line: 1011, column: 10, scope: !10816)
!10956 = !DILocation(line: 1012, column: 1, scope: !10816)
!10957 = distinct !DISubprogram(name: "alps_get_pkt_id_ss4_v2", scope: !3, file: !3, line: 1148, type: !10958, scopeLine: 1149, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !407)
!10958 = !DISubroutineType(types: !10959)
!10959 = !{!175, !4063}
!10960 = !DILocalVariable(name: "byte", arg: 1, scope: !10957, file: !3, line: 1148, type: !4063)
!10961 = !DILocation(line: 1148, column: 65, scope: !10957)
!10962 = !DILocalVariable(name: "pkt_id", scope: !10957, file: !3, line: 1150, type: !175)
!10963 = !DILocation(line: 1150, column: 21, scope: !10957)
!10964 = !DILocation(line: 1152, column: 10, scope: !10957)
!10965 = !DILocation(line: 1152, column: 18, scope: !10957)
!10966 = !DILocation(line: 1152, column: 2, scope: !10957)
!10967 = !DILocation(line: 1154, column: 7, scope: !10968)
!10968 = distinct !DILexicalBlock(scope: !10969, file: !3, line: 1154, column: 7)
!10969 = distinct !DILexicalBlock(scope: !10957, file: !3, line: 1152, column: 26)
!10970 = !DILocation(line: 1154, column: 7, scope: !10969)
!10971 = !DILocation(line: 1155, column: 11, scope: !10972)
!10972 = distinct !DILexicalBlock(scope: !10968, file: !3, line: 1154, column: 29)
!10973 = !DILocation(line: 1156, column: 3, scope: !10972)
!10974 = !DILocation(line: 1157, column: 11, scope: !10975)
!10975 = distinct !DILexicalBlock(scope: !10968, file: !3, line: 1156, column: 10)
!10976 = !DILocation(line: 1159, column: 3, scope: !10969)
!10977 = !DILocation(line: 1162, column: 10, scope: !10969)
!10978 = !DILocation(line: 1163, column: 3, scope: !10969)
!10979 = !DILocation(line: 1166, column: 10, scope: !10969)
!10980 = !DILocation(line: 1167, column: 3, scope: !10969)
!10981 = !DILocation(line: 1170, column: 10, scope: !10969)
!10982 = !DILocation(line: 1171, column: 3, scope: !10969)
!10983 = !DILocation(line: 1174, column: 9, scope: !10957)
!10984 = !DILocation(line: 1174, column: 2, scope: !10957)
!10985 = distinct !DISubprogram(name: "alps_get_otp_values_ss4_v2", scope: !3, file: !3, line: 2461, type: !10986, scopeLine: 2463, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !407)
!10986 = !DISubroutineType(types: !10987)
!10987 = !{!262, !210, !269, !4063}
!10988 = !DILocalVariable(name: "psmouse", arg: 1, scope: !10985, file: !3, line: 2461, type: !210)
!10989 = !DILocation(line: 2461, column: 55, scope: !10985)
!10990 = !DILocalVariable(name: "index", arg: 2, scope: !10985, file: !3, line: 2462, type: !269)
!10991 = !DILocation(line: 2462, column: 25, scope: !10985)
!10992 = !DILocalVariable(name: "otp", arg: 3, scope: !10985, file: !3, line: 2462, type: !4063)
!10993 = !DILocation(line: 2462, column: 46, scope: !10985)
!10994 = !DILocalVariable(name: "ps2dev", scope: !10985, file: !3, line: 2464, type: !5945)
!10995 = !DILocation(line: 2464, column: 17, scope: !10985)
!10996 = !DILocation(line: 2464, column: 27, scope: !10985)
!10997 = !DILocation(line: 2464, column: 36, scope: !10985)
!10998 = !DILocation(line: 2466, column: 10, scope: !10985)
!10999 = !DILocation(line: 2466, column: 2, scope: !10985)
!11000 = !DILocation(line: 2468, column: 19, scope: !11001)
!11001 = distinct !DILexicalBlock(scope: !11002, file: !3, line: 2468, column: 7)
!11002 = distinct !DILexicalBlock(scope: !10985, file: !3, line: 2466, column: 17)
!11003 = !DILocation(line: 2468, column: 7, scope: !11001)
!11004 = !DILocation(line: 2468, column: 57, scope: !11001)
!11005 = !DILocation(line: 2469, column: 19, scope: !11001)
!11006 = !DILocation(line: 2469, column: 7, scope: !11001)
!11007 = !DILocation(line: 2469, column: 57, scope: !11001)
!11008 = !DILocation(line: 2470, column: 19, scope: !11001)
!11009 = !DILocation(line: 2470, column: 27, scope: !11001)
!11010 = !DILocation(line: 2470, column: 7, scope: !11001)
!11011 = !DILocation(line: 2468, column: 7, scope: !11002)
!11012 = !DILocation(line: 2471, column: 4, scope: !11001)
!11013 = !DILocation(line: 2473, column: 3, scope: !11002)
!11014 = !DILocation(line: 2476, column: 19, scope: !11015)
!11015 = distinct !DILexicalBlock(scope: !11002, file: !3, line: 2476, column: 7)
!11016 = !DILocation(line: 2476, column: 7, scope: !11015)
!11017 = !DILocation(line: 2476, column: 55, scope: !11015)
!11018 = !DILocation(line: 2477, column: 19, scope: !11015)
!11019 = !DILocation(line: 2477, column: 7, scope: !11015)
!11020 = !DILocation(line: 2477, column: 55, scope: !11015)
!11021 = !DILocation(line: 2478, column: 19, scope: !11015)
!11022 = !DILocation(line: 2478, column: 27, scope: !11015)
!11023 = !DILocation(line: 2478, column: 7, scope: !11015)
!11024 = !DILocation(line: 2476, column: 7, scope: !11002)
!11025 = !DILocation(line: 2479, column: 4, scope: !11015)
!11026 = !DILocation(line: 2481, column: 3, scope: !11002)
!11027 = !DILocation(line: 2484, column: 2, scope: !10985)
!11028 = !DILocation(line: 2485, column: 1, scope: !10985)
!11029 = distinct !DISubprogram(name: "alps_update_device_area_ss4_v2", scope: !3, file: !3, line: 2487, type: !11030, scopeLine: 2489, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !407)
!11030 = !DISubroutineType(types: !11031)
!11031 = !{!262, !11032, !206}
!11032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5030, size: 64)
!11033 = !DILocalVariable(name: "otp", arg: 1, scope: !11029, file: !3, line: 2487, type: !11032)
!11034 = !DILocation(line: 2487, column: 57, scope: !11029)
!11035 = !DILocalVariable(name: "priv", arg: 2, scope: !11029, file: !3, line: 2488, type: !206)
!11036 = !DILocation(line: 2488, column: 26, scope: !11029)
!11037 = !DILocalVariable(name: "num_x_electrode", scope: !11029, file: !3, line: 2490, type: !262)
!11038 = !DILocation(line: 2490, column: 6, scope: !11029)
!11039 = !DILocalVariable(name: "num_y_electrode", scope: !11029, file: !3, line: 2491, type: !262)
!11040 = !DILocation(line: 2491, column: 6, scope: !11029)
!11041 = !DILocalVariable(name: "x_pitch", scope: !11029, file: !3, line: 2492, type: !262)
!11042 = !DILocation(line: 2492, column: 6, scope: !11029)
!11043 = !DILocalVariable(name: "y_pitch", scope: !11029, file: !3, line: 2492, type: !262)
!11044 = !DILocation(line: 2492, column: 15, scope: !11029)
!11045 = !DILocalVariable(name: "x_phys", scope: !11029, file: !3, line: 2492, type: !262)
!11046 = !DILocation(line: 2492, column: 24, scope: !11029)
!11047 = !DILocalVariable(name: "y_phys", scope: !11029, file: !3, line: 2492, type: !262)
!11048 = !DILocation(line: 2492, column: 32, scope: !11029)
!11049 = !DILocation(line: 2494, column: 6, scope: !11050)
!11050 = distinct !DILexicalBlock(scope: !11029, file: !3, line: 2494, column: 6)
!11051 = !DILocation(line: 2494, column: 6, scope: !11029)
!11052 = !DILocation(line: 2496, column: 33, scope: !11053)
!11053 = distinct !DILexicalBlock(scope: !11050, file: !3, line: 2494, column: 36)
!11054 = !DILocation(line: 2496, column: 43, scope: !11053)
!11055 = !DILocation(line: 2496, column: 30, scope: !11053)
!11056 = !DILocation(line: 2495, column: 19, scope: !11053)
!11057 = !DILocation(line: 2498, column: 34, scope: !11053)
!11058 = !DILocation(line: 2498, column: 44, scope: !11053)
!11059 = !DILocation(line: 2498, column: 50, scope: !11053)
!11060 = !DILocation(line: 2498, column: 30, scope: !11053)
!11061 = !DILocation(line: 2497, column: 19, scope: !11053)
!11062 = !DILocation(line: 2501, column: 5, scope: !11053)
!11063 = !DILocation(line: 2501, column: 21, scope: !11053)
!11064 = !DILocation(line: 2501, column: 26, scope: !11053)
!11065 = !DILocation(line: 2500, column: 3, scope: !11053)
!11066 = !DILocation(line: 2500, column: 9, scope: !11053)
!11067 = !DILocation(line: 2500, column: 15, scope: !11053)
!11068 = !DILocation(line: 2503, column: 5, scope: !11053)
!11069 = !DILocation(line: 2503, column: 21, scope: !11053)
!11070 = !DILocation(line: 2503, column: 26, scope: !11053)
!11071 = !DILocation(line: 2502, column: 3, scope: !11053)
!11072 = !DILocation(line: 2502, column: 9, scope: !11053)
!11073 = !DILocation(line: 2502, column: 15, scope: !11053)
!11074 = !DILocation(line: 2505, column: 14, scope: !11053)
!11075 = !DILocation(line: 2505, column: 24, scope: !11053)
!11076 = !DILocation(line: 2505, column: 32, scope: !11053)
!11077 = !DILocation(line: 2505, column: 11, scope: !11053)
!11078 = !DILocation(line: 2506, column: 15, scope: !11053)
!11079 = !DILocation(line: 2506, column: 25, scope: !11053)
!11080 = !DILocation(line: 2506, column: 31, scope: !11053)
!11081 = !DILocation(line: 2506, column: 39, scope: !11053)
!11082 = !DILocation(line: 2506, column: 11, scope: !11053)
!11083 = !DILocation(line: 2508, column: 2, scope: !11053)
!11084 = !DILocation(line: 2510, column: 29, scope: !11085)
!11085 = distinct !DILexicalBlock(scope: !11050, file: !3, line: 2508, column: 9)
!11086 = !DILocation(line: 2510, column: 39, scope: !11085)
!11087 = !DILocation(line: 2510, column: 26, scope: !11085)
!11088 = !DILocation(line: 2509, column: 19, scope: !11085)
!11089 = !DILocation(line: 2512, column: 30, scope: !11085)
!11090 = !DILocation(line: 2512, column: 40, scope: !11085)
!11091 = !DILocation(line: 2512, column: 46, scope: !11085)
!11092 = !DILocation(line: 2512, column: 26, scope: !11085)
!11093 = !DILocation(line: 2511, column: 19, scope: !11085)
!11094 = !DILocation(line: 2515, column: 5, scope: !11085)
!11095 = !DILocation(line: 2515, column: 21, scope: !11085)
!11096 = !DILocation(line: 2515, column: 26, scope: !11085)
!11097 = !DILocation(line: 2514, column: 3, scope: !11085)
!11098 = !DILocation(line: 2514, column: 9, scope: !11085)
!11099 = !DILocation(line: 2514, column: 15, scope: !11085)
!11100 = !DILocation(line: 2517, column: 5, scope: !11085)
!11101 = !DILocation(line: 2517, column: 21, scope: !11085)
!11102 = !DILocation(line: 2517, column: 26, scope: !11085)
!11103 = !DILocation(line: 2516, column: 3, scope: !11085)
!11104 = !DILocation(line: 2516, column: 9, scope: !11085)
!11105 = !DILocation(line: 2516, column: 15, scope: !11085)
!11106 = !DILocation(line: 2519, column: 15, scope: !11085)
!11107 = !DILocation(line: 2519, column: 25, scope: !11085)
!11108 = !DILocation(line: 2519, column: 31, scope: !11085)
!11109 = !DILocation(line: 2519, column: 39, scope: !11085)
!11110 = !DILocation(line: 2519, column: 11, scope: !11085)
!11111 = !DILocation(line: 2520, column: 15, scope: !11085)
!11112 = !DILocation(line: 2520, column: 25, scope: !11085)
!11113 = !DILocation(line: 2520, column: 31, scope: !11085)
!11114 = !DILocation(line: 2520, column: 39, scope: !11085)
!11115 = !DILocation(line: 2520, column: 11, scope: !11085)
!11116 = !DILocation(line: 2523, column: 11, scope: !11029)
!11117 = !DILocation(line: 2523, column: 22, scope: !11029)
!11118 = !DILocation(line: 2523, column: 38, scope: !11029)
!11119 = !DILocation(line: 2523, column: 19, scope: !11029)
!11120 = !DILocation(line: 2523, column: 9, scope: !11029)
!11121 = !DILocation(line: 2524, column: 11, scope: !11029)
!11122 = !DILocation(line: 2524, column: 22, scope: !11029)
!11123 = !DILocation(line: 2524, column: 38, scope: !11029)
!11124 = !DILocation(line: 2524, column: 19, scope: !11029)
!11125 = !DILocation(line: 2524, column: 9, scope: !11029)
!11126 = !DILocation(line: 2526, column: 16, scope: !11029)
!11127 = !DILocation(line: 2526, column: 22, scope: !11029)
!11128 = !DILocation(line: 2526, column: 28, scope: !11029)
!11129 = !DILocation(line: 2526, column: 35, scope: !11029)
!11130 = !DILocation(line: 2526, column: 33, scope: !11029)
!11131 = !DILocation(line: 2526, column: 2, scope: !11029)
!11132 = !DILocation(line: 2526, column: 8, scope: !11029)
!11133 = !DILocation(line: 2526, column: 14, scope: !11029)
!11134 = !DILocation(line: 2527, column: 16, scope: !11029)
!11135 = !DILocation(line: 2527, column: 22, scope: !11029)
!11136 = !DILocation(line: 2527, column: 28, scope: !11029)
!11137 = !DILocation(line: 2527, column: 35, scope: !11029)
!11138 = !DILocation(line: 2527, column: 33, scope: !11029)
!11139 = !DILocation(line: 2527, column: 2, scope: !11029)
!11140 = !DILocation(line: 2527, column: 8, scope: !11029)
!11141 = !DILocation(line: 2527, column: 14, scope: !11029)
!11142 = !DILocation(line: 2529, column: 2, scope: !11029)
!11143 = distinct !DISubprogram(name: "alps_update_btn_info_ss4_v2", scope: !3, file: !3, line: 2532, type: !11030, scopeLine: 2534, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !407)
!11144 = !DILocalVariable(name: "otp", arg: 1, scope: !11143, file: !3, line: 2532, type: !11032)
!11145 = !DILocation(line: 2532, column: 54, scope: !11143)
!11146 = !DILocalVariable(name: "priv", arg: 2, scope: !11143, file: !3, line: 2533, type: !206)
!11147 = !DILocation(line: 2533, column: 30, scope: !11143)
!11148 = !DILocalVariable(name: "is_btnless", scope: !11143, file: !3, line: 2535, type: !269)
!11149 = !DILocation(line: 2535, column: 16, scope: !11143)
!11150 = !DILocation(line: 2537, column: 6, scope: !11151)
!11151 = distinct !DILexicalBlock(scope: !11143, file: !3, line: 2537, column: 6)
!11152 = !DILocation(line: 2537, column: 6, scope: !11143)
!11153 = !DILocation(line: 2538, column: 17, scope: !11151)
!11154 = !DILocation(line: 2538, column: 27, scope: !11151)
!11155 = !DILocation(line: 2538, column: 33, scope: !11151)
!11156 = !DILocation(line: 2538, column: 16, scope: !11151)
!11157 = !DILocation(line: 2538, column: 14, scope: !11151)
!11158 = !DILocation(line: 2538, column: 3, scope: !11151)
!11159 = !DILocation(line: 2540, column: 17, scope: !11151)
!11160 = !DILocation(line: 2540, column: 27, scope: !11151)
!11161 = !DILocation(line: 2540, column: 33, scope: !11151)
!11162 = !DILocation(line: 2540, column: 16, scope: !11151)
!11163 = !DILocation(line: 2540, column: 14, scope: !11151)
!11164 = !DILocation(line: 2542, column: 6, scope: !11165)
!11165 = distinct !DILexicalBlock(scope: !11143, file: !3, line: 2542, column: 6)
!11166 = !DILocation(line: 2542, column: 6, scope: !11143)
!11167 = !DILocation(line: 2543, column: 3, scope: !11165)
!11168 = !DILocation(line: 2543, column: 9, scope: !11165)
!11169 = !DILocation(line: 2543, column: 15, scope: !11165)
!11170 = !DILocation(line: 2545, column: 2, scope: !11143)
!11171 = distinct !DISubprogram(name: "alps_update_dual_info_ss4_v2", scope: !3, file: !3, line: 2548, type: !11172, scopeLine: 2551, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !407)
!11172 = !DISubroutineType(types: !11173)
!11173 = !{!262, !11032, !206, !210}
!11174 = !DILocalVariable(name: "otp", arg: 1, scope: !11171, file: !3, line: 2548, type: !11032)
!11175 = !DILocation(line: 2548, column: 55, scope: !11171)
!11176 = !DILocalVariable(name: "priv", arg: 2, scope: !11171, file: !3, line: 2549, type: !206)
!11177 = !DILocation(line: 2549, column: 24, scope: !11171)
!11178 = !DILocalVariable(name: "psmouse", arg: 3, scope: !11171, file: !3, line: 2550, type: !210)
!11179 = !DILocation(line: 2550, column: 22, scope: !11171)
!11180 = !DILocalVariable(name: "is_dual", scope: !11171, file: !3, line: 2552, type: !550)
!11181 = !DILocation(line: 2552, column: 7, scope: !11171)
!11182 = !DILocalVariable(name: "reg_val", scope: !11171, file: !3, line: 2553, type: !262)
!11183 = !DILocation(line: 2553, column: 6, scope: !11171)
!11184 = !DILocalVariable(name: "ps2dev", scope: !11171, file: !3, line: 2554, type: !5945)
!11185 = !DILocation(line: 2554, column: 17, scope: !11171)
!11186 = !DILocation(line: 2554, column: 27, scope: !11171)
!11187 = !DILocation(line: 2554, column: 36, scope: !11171)
!11188 = !DILocation(line: 2556, column: 6, scope: !11189)
!11189 = distinct !DILexicalBlock(scope: !11171, file: !3, line: 2556, column: 6)
!11190 = !DILocation(line: 2556, column: 6, scope: !11171)
!11191 = !DILocation(line: 2557, column: 14, scope: !11192)
!11192 = distinct !DILexicalBlock(scope: !11189, file: !3, line: 2556, column: 36)
!11193 = !DILocation(line: 2557, column: 24, scope: !11192)
!11194 = !DILocation(line: 2557, column: 30, scope: !11192)
!11195 = !DILocation(line: 2557, column: 13, scope: !11192)
!11196 = !DILocation(line: 2557, column: 11, scope: !11192)
!11197 = !DILocation(line: 2559, column: 8, scope: !11198)
!11198 = distinct !DILexicalBlock(scope: !11192, file: !3, line: 2559, column: 7)
!11199 = !DILocation(line: 2559, column: 7, scope: !11192)
!11200 = !DILocation(line: 2561, column: 31, scope: !11201)
!11201 = distinct !DILexicalBlock(scope: !11202, file: !3, line: 2561, column: 8)
!11202 = distinct !DILexicalBlock(scope: !11198, file: !3, line: 2559, column: 17)
!11203 = !DILocation(line: 2561, column: 8, scope: !11201)
!11204 = !DILocation(line: 2561, column: 40, scope: !11201)
!11205 = !DILocation(line: 2561, column: 45, scope: !11201)
!11206 = !DILocation(line: 2562, column: 29, scope: !11201)
!11207 = !DILocation(line: 2562, column: 5, scope: !11201)
!11208 = !DILocation(line: 2562, column: 38, scope: !11201)
!11209 = !DILocation(line: 2561, column: 8, scope: !11202)
!11210 = !DILocation(line: 2563, column: 42, scope: !11211)
!11211 = distinct !DILexicalBlock(scope: !11201, file: !3, line: 2562, column: 44)
!11212 = !DILocation(line: 2563, column: 15, scope: !11211)
!11213 = !DILocation(line: 2563, column: 13, scope: !11211)
!11214 = !DILocation(line: 2565, column: 4, scope: !11211)
!11215 = !DILocation(line: 2566, column: 27, scope: !11202)
!11216 = !DILocation(line: 2566, column: 4, scope: !11202)
!11217 = !DILocation(line: 2567, column: 16, scope: !11202)
!11218 = !DILocation(line: 2567, column: 4, scope: !11202)
!11219 = !DILocation(line: 2569, column: 8, scope: !11220)
!11220 = distinct !DILexicalBlock(scope: !11202, file: !3, line: 2569, column: 8)
!11221 = !DILocation(line: 2569, column: 16, scope: !11220)
!11222 = !DILocation(line: 2569, column: 24, scope: !11220)
!11223 = !DILocation(line: 2569, column: 27, scope: !11220)
!11224 = !DILocation(line: 2569, column: 35, scope: !11220)
!11225 = !DILocation(line: 2569, column: 8, scope: !11202)
!11226 = !DILocation(line: 2570, column: 13, scope: !11220)
!11227 = !DILocation(line: 2570, column: 5, scope: !11220)
!11228 = !DILocation(line: 2571, column: 3, scope: !11202)
!11229 = !DILocation(line: 2572, column: 2, scope: !11192)
!11230 = !DILocation(line: 2574, column: 6, scope: !11231)
!11231 = distinct !DILexicalBlock(scope: !11171, file: !3, line: 2574, column: 6)
!11232 = !DILocation(line: 2574, column: 6, scope: !11171)
!11233 = !DILocation(line: 2575, column: 3, scope: !11231)
!11234 = !DILocation(line: 2575, column: 9, scope: !11231)
!11235 = !DILocation(line: 2575, column: 15, scope: !11231)
!11236 = !DILocation(line: 2578, column: 2, scope: !11171)
!11237 = distinct !DISubprogram(name: "get_order", scope: !11238, file: !11238, line: 29, type: !11239, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !407)
!11238 = !DIFile(filename: "./include/asm-generic/getorder.h", directory: "/home/lizy2001/genbc/linux")
!11239 = !DISubroutineType(types: !11240)
!11240 = !{!262, !190}
!11241 = !DILocalVariable(name: "x", arg: 1, scope: !11242, file: !4420, line: 366, type: !480)
!11242 = distinct !DISubprogram(name: "fls64", scope: !4420, file: !4420, line: 366, type: !11243, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !407)
!11243 = !DISubroutineType(types: !11244)
!11244 = !{!262, !480}
!11245 = !DILocation(line: 366, column: 40, scope: !11242, inlinedAt: !11246)
!11246 = distinct !DILocation(line: 46, column: 9, scope: !11237)
!11247 = !DILocalVariable(name: "bitpos", scope: !11242, file: !4420, line: 368, type: !262)
!11248 = !DILocation(line: 368, column: 6, scope: !11242, inlinedAt: !11246)
!11249 = !DILocalVariable(name: "size", arg: 1, scope: !11237, file: !11238, line: 29, type: !190)
!11250 = !DILocation(line: 29, column: 63, scope: !11237)
!11251 = !DILocation(line: 31, column: 27, scope: !11252)
!11252 = distinct !DILexicalBlock(scope: !11237, file: !11238, line: 31, column: 6)
!11253 = !DILocation(line: 31, column: 6, scope: !11252)
!11254 = !DILocation(line: 31, column: 6, scope: !11237)
!11255 = !DILocation(line: 32, column: 8, scope: !11256)
!11256 = distinct !DILexicalBlock(scope: !11257, file: !11238, line: 32, column: 7)
!11257 = distinct !DILexicalBlock(scope: !11252, file: !11238, line: 31, column: 34)
!11258 = !DILocation(line: 32, column: 7, scope: !11257)
!11259 = !DILocation(line: 33, column: 4, scope: !11256)
!11260 = !DILocation(line: 35, column: 7, scope: !11261)
!11261 = distinct !DILexicalBlock(scope: !11257, file: !11238, line: 35, column: 7)
!11262 = !DILocation(line: 35, column: 12, scope: !11261)
!11263 = !DILocation(line: 35, column: 7, scope: !11257)
!11264 = !DILocation(line: 36, column: 4, scope: !11261)
!11265 = !DILocation(line: 38, column: 10, scope: !11257)
!11266 = !DILocation(line: 38, column: 28, scope: !11257)
!11267 = !DILocation(line: 38, column: 41, scope: !11257)
!11268 = !DILocation(line: 38, column: 3, scope: !11257)
!11269 = !DILocation(line: 41, column: 6, scope: !11237)
!11270 = !DILocation(line: 42, column: 7, scope: !11237)
!11271 = !DILocation(line: 46, column: 15, scope: !11237)
!11272 = !DILocation(line: 374, column: 2, scope: !11242, inlinedAt: !11246)
!11273 = !DILocation(line: 376, column: 14, scope: !11242, inlinedAt: !11246)
!11274 = !{i32 388911}
!11275 = !DILocation(line: 377, column: 9, scope: !11242, inlinedAt: !11246)
!11276 = !DILocation(line: 377, column: 16, scope: !11242, inlinedAt: !11246)
!11277 = !DILocation(line: 46, column: 2, scope: !11237)
!11278 = !DILocation(line: 48, column: 1, scope: !11237)
!11279 = distinct !DISubprogram(name: "__ilog2_u64", scope: !11280, file: !11280, line: 30, type: !11281, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !407)
!11280 = !DIFile(filename: "./include/linux/log2.h", directory: "/home/lizy2001/genbc/linux")
!11281 = !DISubroutineType(types: !11282)
!11282 = !{!262, !479}
!11283 = !DILocation(line: 366, column: 40, scope: !11242, inlinedAt: !11284)
!11284 = distinct !DILocation(line: 32, column: 9, scope: !11279)
!11285 = !DILocation(line: 368, column: 6, scope: !11242, inlinedAt: !11284)
!11286 = !DILocalVariable(name: "n", arg: 1, scope: !11279, file: !11280, line: 30, type: !479)
!11287 = !DILocation(line: 30, column: 21, scope: !11279)
!11288 = !DILocation(line: 32, column: 15, scope: !11279)
!11289 = !DILocation(line: 374, column: 2, scope: !11242, inlinedAt: !11284)
!11290 = !DILocation(line: 376, column: 14, scope: !11242, inlinedAt: !11284)
!11291 = !DILocation(line: 377, column: 9, scope: !11242, inlinedAt: !11284)
!11292 = !DILocation(line: 377, column: 16, scope: !11242, inlinedAt: !11284)
!11293 = !DILocation(line: 32, column: 18, scope: !11279)
!11294 = !DILocation(line: 32, column: 2, scope: !11279)
!11295 = distinct !DISubprogram(name: "kasan_kmalloc", scope: !2067, file: !2067, line: 137, type: !11296, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !407)
!11296 = !DISubroutineType(types: !11297)
!11297 = !{!191, !995, !3335, !639, !192}
!11298 = !DILocalVariable(name: "s", arg: 1, scope: !11295, file: !2067, line: 137, type: !995)
!11299 = !DILocation(line: 137, column: 54, scope: !11295)
!11300 = !DILocalVariable(name: "object", arg: 2, scope: !11295, file: !2067, line: 137, type: !3335)
!11301 = !DILocation(line: 137, column: 69, scope: !11295)
!11302 = !DILocalVariable(name: "size", arg: 3, scope: !11295, file: !2067, line: 138, type: !639)
!11303 = !DILocation(line: 138, column: 12, scope: !11295)
!11304 = !DILocalVariable(name: "flags", arg: 4, scope: !11295, file: !2067, line: 138, type: !192)
!11305 = !DILocation(line: 138, column: 24, scope: !11295)
!11306 = !DILocation(line: 140, column: 17, scope: !11295)
!11307 = !DILocation(line: 140, column: 2, scope: !11295)
