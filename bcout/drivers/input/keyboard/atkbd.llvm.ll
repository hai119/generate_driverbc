; ModuleID = '../bcout/drivers/input/keyboard/atkbd.llvm.bc'
source_filename = "drivers/input/keyboard/atkbd.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64"

module asm ".section\09\22.initcall6.init\22, \22a\22\09"
module asm "__initcall_atkbd_init6:\09\09\09"
module asm ".long\09atkbd_init - .\09\09\09"
module asm ".previous\09\09\09\09\09"

%struct.kernel_param_ops = type { i32, i32 (i8*, %struct.kernel_param*)*, i32 (i8*, %struct.kernel_param*)*, void (i8*)* }
%struct.kernel_param = type { i8*, %struct.module*, %struct.kernel_param_ops*, i16, i8, i8, %union.anon }
%struct.module = type opaque
%union.anon = type { i8* }
%struct.serio_driver = type { i8*, %struct.serio_device_id*, i8, void (%struct.serio*)*, i32 (%struct.serio*, i8, i32)*, i32 (%struct.serio*, %struct.serio_driver*)*, i32 (%struct.serio*)*, i32 (%struct.serio*)*, void (%struct.serio*)*, void (%struct.serio*)*, %struct.device_driver }
%struct.serio_device_id = type { i8, i8, i8, i8 }
%struct.serio = type { i8*, [32 x i8], [32 x i8], [128 x i8], i8, %struct.serio_device_id, %struct.spinlock, i32 (%struct.serio*, i8)*, i32 (%struct.serio*)*, {}*, i32 (%struct.serio*)*, {}*, %struct.serio*, %struct.list_head, %struct.list_head, i32, %struct.serio_driver*, %struct.mutex, %struct.device, %struct.list_head, %struct.mutex* }
%struct.spinlock = type { %union.anon.0 }
%union.anon.0 = type { %struct.raw_spinlock }
%struct.raw_spinlock = type { %struct.arch_spinlock_t }
%struct.arch_spinlock_t = type {}
%struct.mutex = type { %struct.atomic64_t, %struct.spinlock, %struct.list_head }
%struct.atomic64_t = type { i64 }
%struct.device = type { %struct.kobject, %struct.device*, %struct.device_private*, i8*, %struct.device_type*, %struct.bus_type*, %struct.device_driver*, i8*, i8*, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, %struct.dev_pm_domain*, %struct.irq_domain*, %struct.list_head, %struct.dma_map_ops*, i64*, i64, i64, %struct.bus_dma_region*, %struct.device_dma_parameters*, %struct.list_head, %struct.dev_archdata, %struct.device_node*, %struct.fwnode_handle*, i32, i32, %struct.spinlock, %struct.list_head, %struct.class*, %struct.attribute_group**, void (%struct.device*)*, %struct.iommu_group*, %struct.dev_iommu*, i8 }
%struct.kobject = type { i8*, %struct.list_head, %struct.kobject*, %struct.kset*, %struct.kobj_type*, %struct.kernfs_node*, %struct.kref, i8 }
%struct.kset = type { %struct.list_head, %struct.spinlock, %struct.kobject, %struct.kset_uevent_ops* }
%struct.kset_uevent_ops = type { i32 (%struct.kset*, %struct.kobject*)*, i8* (%struct.kset*, %struct.kobject*)*, i32 (%struct.kset*, %struct.kobject*, %struct.kobj_uevent_env*)* }
%struct.kobj_uevent_env = type { [3 x i8*], [64 x i8*], i32, [2048 x i8], i32 }
%struct.kobj_type = type { void (%struct.kobject*)*, %struct.sysfs_ops*, %struct.attribute**, %struct.attribute_group**, %struct.kobj_ns_type_operations* (%struct.kobject*)*, i8* (%struct.kobject*)*, void (%struct.kobject*, %struct.kuid_t*, %struct.kgid_t*)* }
%struct.sysfs_ops = type { i64 (%struct.kobject*, %struct.attribute*, i8*)*, i64 (%struct.kobject*, %struct.attribute*, i8*, i64)* }
%struct.attribute = type { i8*, i16 }
%struct.kobj_ns_type_operations = type { i32, i1 ()*, i8* ()*, i8* (%struct.sock*)*, i8* ()*, void (i8*)* }
%struct.sock = type opaque
%struct.kuid_t = type { i32 }
%struct.kgid_t = type { i32 }
%struct.kernfs_node = type { %struct.atomic_t, %struct.atomic_t, %struct.kernfs_node*, i8*, %struct.rb_node, i8*, i32, %union.anon.64, i8*, i64, i16, i16, %struct.kernfs_iattrs* }
%struct.atomic_t = type { i32 }
%struct.rb_node = type { i64, %struct.rb_node*, %struct.rb_node* }
%union.anon.64 = type { %struct.kernfs_elem_attr }
%struct.kernfs_elem_attr = type { %struct.kernfs_ops*, %struct.kernfs_open_node*, i64, %struct.kernfs_node* }
%struct.kernfs_ops = type { i32 (%struct.kernfs_open_file*)*, void (%struct.kernfs_open_file*)*, i32 (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i64*)*, i8* (%struct.seq_file*, i8*, i64*)*, void (%struct.seq_file*, i8*)*, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i64, i8, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i32 (%struct.kernfs_open_file*, %struct.poll_table_struct*)*, i32 (%struct.kernfs_open_file*, %struct.vm_area_struct*)* }
%struct.kernfs_open_file = type { %struct.kernfs_node*, %struct.file*, %struct.seq_file*, i8*, %struct.mutex, %struct.mutex, i32, %struct.list_head, i8*, i64, i8, %struct.vm_operations_struct* }
%struct.file = type { %union.anon.1, %struct.path, %struct.inode*, %struct.file_operations*, %struct.spinlock, i32, %struct.atomic64_t, i32, i32, %struct.mutex, i64, %struct.fown_struct, %struct.cred*, %struct.file_ra_state, i64, i8*, %struct.list_head, %struct.list_head, %struct.address_space*, i32, i32 }
%union.anon.1 = type { %struct.callback_head }
%struct.callback_head = type { %struct.callback_head*, void (%struct.callback_head*)* }
%struct.path = type { %struct.vfsmount*, %struct.dentry* }
%struct.vfsmount = type opaque
%struct.dentry = type { i32, %struct.seqcount_spinlock, %struct.hlist_bl_node, %struct.dentry*, %struct.qstr, %struct.inode*, [32 x i8], %struct.lockref, %struct.dentry_operations*, %struct.super_block*, i64, i8*, %union.anon.62, %struct.list_head, %struct.list_head, %union.anon.63 }
%struct.seqcount_spinlock = type { %struct.seqcount }
%struct.seqcount = type { i32 }
%struct.hlist_bl_node = type { %struct.hlist_bl_node*, %struct.hlist_bl_node** }
%struct.qstr = type { %union.anon.2, i8* }
%union.anon.2 = type { i64 }
%struct.lockref = type { %union.anon.60 }
%union.anon.60 = type { %struct.anon.61 }
%struct.anon.61 = type { %struct.spinlock, i32 }
%struct.dentry_operations = type { i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.qstr*)*, i32 (%struct.dentry*, i32, i8*, %struct.qstr*)*, i32 (%struct.dentry*)*, i32 (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*, %struct.inode*)*, i8* (%struct.dentry*, i8*, i32)*, %struct.vfsmount* (%struct.path*)*, i32 (%struct.path*, i1)*, %struct.dentry* (%struct.dentry*, %struct.inode*)*, [24 x i8] }
%struct.super_block = type { %struct.list_head, i32, i8, i64, i64, %struct.file_system_type*, %struct.super_operations*, %struct.dquot_operations*, %struct.quotactl_ops*, %struct.export_operations*, i64, i64, i64, %struct.dentry*, %struct.rw_semaphore, i32, %struct.atomic_t, %struct.xattr_handler**, %struct.hlist_bl_head, %struct.list_head, %struct.block_device*, %struct.backing_dev_info*, %struct.mtd_info*, %struct.hlist_node, i32, %struct.quota_info, %struct.sb_writers, i8*, i32, i64, i64, i32, %struct.fsnotify_mark_connector*, [32 x i8], %struct.uuid_t, i32, i32, %struct.mutex, i8*, %struct.dentry_operations*, i32, %struct.shrinker, %struct.atomic64_t, %struct.atomic64_t, i32, i32, %struct.workqueue_struct*, %struct.hlist_head, %struct.user_namespace*, %struct.list_lru, %struct.list_lru, %struct.callback_head, %struct.work_struct, %struct.mutex, i32, %struct.spinlock, %struct.list_head, %struct.spinlock, %struct.list_head }
%struct.file_system_type = type { i8*, i32, i32 (%struct.fs_context*)*, %struct.fs_parameter_spec*, %struct.dentry* (%struct.file_system_type*, i32, i8*, i8*)*, void (%struct.super_block*)*, %struct.module*, %struct.file_system_type*, %struct.hlist_head, %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key, [3 x %struct.lock_class_key], %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key }
%struct.fs_context = type opaque
%struct.fs_parameter_spec = type opaque
%struct.lock_class_key = type {}
%struct.super_operations = type { %struct.inode* (%struct.super_block*)*, void (%struct.inode*)*, void (%struct.inode*)*, void (%struct.inode*, i32)*, i32 (%struct.inode*, %struct.writeback_control*)*, i32 (%struct.inode*)*, void (%struct.inode*)*, void (%struct.super_block*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.dentry*, %struct.kstatfs*)*, i32 (%struct.super_block*, i32*, i8*)*, void (%struct.super_block*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.super_block*, %struct.page*, i32)*, i64 (%struct.super_block*, %struct.shrink_control*)*, i64 (%struct.super_block*, %struct.shrink_control*)* }
%struct.writeback_control = type opaque
%struct.kstatfs = type opaque
%struct.page = type { i64, %union.anon.3, %union.anon.52, %struct.atomic_t, [8 x i8] }
%union.anon.3 = type { %struct.anon.4 }
%struct.anon.4 = type { %struct.list_head, %struct.address_space*, i64, i64 }
%union.anon.52 = type { %struct.atomic_t }
%struct.shrink_control = type { i32, i32, i64, i64, %struct.mem_cgroup* }
%struct.mem_cgroup = type opaque
%struct.dquot_operations = type { i32 (%struct.dquot*)*, %struct.dquot* (%struct.super_block*, i32)*, void (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, i32)*, i64* (%struct.inode*)*, i32 (%struct.inode*, %struct.kprojid_t*)*, i32 (%struct.inode*, i64*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.dquot = type { %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.mutex, %struct.spinlock, %struct.atomic_t, %struct.super_block*, %struct.kqid, i64, i64, %struct.mem_dqblk }
%struct.kqid = type { %union.anon.53, i32 }
%union.anon.53 = type { %struct.kuid_t }
%struct.mem_dqblk = type { i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.kprojid_t = type { i32 }
%struct.quotactl_ops = type { i32 (%struct.super_block*, i32, i32, %struct.path*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32, %struct.qc_info*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.kqid*, %struct.qc_dqblk*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.qc_state*)*, i32 (%struct.super_block*, i32)* }
%struct.qc_info = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.qc_dqblk = type { i32, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, i64, i64, i64, i64, i32 }
%struct.qc_state = type { i32, [3 x %struct.qc_type_state] }
%struct.qc_type_state = type { i32, i32, i32, i32, i32, i32, i32, i64, i64, i64 }
%struct.export_operations = type opaque
%struct.rw_semaphore = type { %struct.atomic64_t, %struct.atomic64_t, %struct.raw_spinlock, %struct.list_head }
%struct.xattr_handler = type opaque
%struct.hlist_bl_head = type { %struct.hlist_bl_node* }
%struct.block_device = type opaque
%struct.backing_dev_info = type opaque
%struct.mtd_info = type opaque
%struct.hlist_node = type { %struct.hlist_node*, %struct.hlist_node** }
%struct.quota_info = type { i32, %struct.rw_semaphore, [3 x %struct.inode*], [3 x %struct.mem_dqinfo], [3 x %struct.quota_format_ops*] }
%struct.mem_dqinfo = type { %struct.quota_format_type*, i32, %struct.list_head, i64, i32, i32, i64, i64, i8* }
%struct.quota_format_type = type { i32, %struct.quota_format_ops*, %struct.module*, %struct.quota_format_type* }
%struct.quota_format_ops = type { i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.sb_writers = type { i32, %struct.wait_queue_head, [3 x %struct.percpu_rw_semaphore] }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.percpu_rw_semaphore = type { %struct.rcu_sync, i32*, %struct.rcuwait, %struct.wait_queue_head, %struct.atomic_t }
%struct.rcu_sync = type { i32, i32, %struct.wait_queue_head, %struct.callback_head }
%struct.rcuwait = type { %struct.task_struct* }
%struct.task_struct = type { %struct.thread_info, i64, i8*, %struct.refcount_struct, i32, i32, i32, i32, i32, i32, i32, %struct.sched_class*, %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, i32, i32, %struct.cpumask*, %struct.cpumask, %struct.sched_info, %struct.list_head, %struct.mm_struct*, %struct.mm_struct*, %struct.vmacache, i32, i32, i32, i32, i64, i32, i8, [3 x i8], i8, i64, %struct.restart_block, i32, i32, i64, %struct.task_struct*, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.pid*, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, %struct.completion*, i32*, i32*, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, %struct.posix_cputimers, %struct.posix_cputimers_work, %struct.cred*, %struct.cred*, %struct.cred*, %struct.key*, [16 x i8], %struct.nameidata*, %struct.fs_struct*, %struct.files_struct*, %struct.io_uring_task*, %struct.nsproxy*, %struct.signal_struct*, %struct.sighand_struct*, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i64, i64, i32, %struct.callback_head*, %struct.seccomp, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, %struct.task_struct*, %struct.rt_mutex_waiter*, i8*, %struct.bio_list*, %struct.blk_plug*, %struct.reclaim_state*, %struct.backing_dev_info*, %struct.io_context*, %struct.capture_control*, i64, %struct.kernel_siginfo*, %struct.task_io_accounting, %struct.robust_list_head*, %struct.list_head, %struct.futex_pi_state*, %struct.mutex, i32, [2 x %struct.perf_event_context*], %struct.mutex, %struct.list_head, %struct.rseq*, i32, i64, %struct.tlbflush_unmap_batch, %union.anon.46, %struct.pipe_inode_info*, %struct.page_frag, i32, i32, i64, i64, i64, i32, %struct.task_struct*, %struct.vm_struct*, %struct.refcount_struct, i8*, i64, i64, i64, %struct.callback_head, [24 x i8], %struct.thread_struct }
%struct.thread_info = type { i64, i32 }
%struct.sched_class = type opaque
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, %struct.sched_statistics }
%struct.load_weight = type { i64, i32 }
%struct.sched_statistics = type {}
%struct.sched_rt_entity = type { %struct.list_head, i64, i64, i32, i16, i16, %struct.sched_rt_entity* }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, %struct.sched_dl_entity* }
%struct.hrtimer = type { %struct.timerqueue_node, i64, i32 (%struct.hrtimer*)*, %struct.hrtimer_clock_base*, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.hrtimer_clock_base = type { %struct.hrtimer_cpu_base*, i32, i32, %struct.seqcount_raw_spinlock, %struct.hrtimer*, %struct.timerqueue_head, i64 ()*, i64 }
%struct.hrtimer_cpu_base = type { %struct.raw_spinlock, i32, i32, i32, i8, i64, %struct.hrtimer*, i64, %struct.hrtimer*, [16 x i8], [8 x %struct.hrtimer_clock_base] }
%struct.seqcount_raw_spinlock = type { %struct.seqcount }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.cpumask = type { [1 x i64] }
%struct.sched_info = type {}
%struct.mm_struct = type { %struct.anon.16, [0 x i64] }
%struct.anon.16 = type { %struct.vm_area_struct*, %struct.rb_root, i64, i64 (%struct.file*, i64, i64, i64, i64)*, i64, i64, i64, i64, %struct.pgd_t*, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i32, %struct.spinlock, %struct.rw_semaphore, %struct.list_head, i64, i64, i64, i64, %struct.atomic64_t, i64, i64, i64, i64, %struct.spinlock, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [44 x i64], %struct.mm_rss_stat, %struct.linux_binfmt*, %struct.mm_context_t, i64, %struct.core_state*, %struct.spinlock, %struct.kioctx_table*, %struct.user_namespace*, %struct.file*, %struct.mmu_notifier_subscriptions*, %struct.atomic_t, i8, %struct.uprobes_state, %struct.work_struct, i32 }
%struct.vm_area_struct = type { i64, i64, %struct.vm_area_struct*, %struct.vm_area_struct*, %struct.rb_node, i64, %struct.mm_struct*, %struct.pgprot, i64, %struct.anon.17, %struct.list_head, %struct.anon_vma*, %struct.vm_operations_struct*, i64, %struct.file*, i8*, %struct.atomic64_t, %struct.vm_userfaultfd_ctx }
%struct.pgprot = type { i64 }
%struct.anon.17 = type { %struct.rb_node, i64 }
%struct.anon_vma = type opaque
%struct.vm_userfaultfd_ctx = type {}
%struct.rb_root = type { %struct.rb_node* }
%struct.pgd_t = type { i64 }
%struct.mm_rss_stat = type { [4 x %struct.atomic64_t] }
%struct.linux_binfmt = type opaque
%struct.mm_context_t = type { i64, %struct.atomic64_t, %struct.rw_semaphore, %struct.ldt_struct*, i16, %struct.mutex, i8*, %struct.vdso_image*, %struct.atomic_t, i16, i16 }
%struct.ldt_struct = type opaque
%struct.vdso_image = type { i8*, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.core_state = type { %struct.atomic_t, %struct.core_thread, %struct.completion }
%struct.core_thread = type { %struct.task_struct*, %struct.core_thread* }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.kioctx_table = type opaque
%struct.mmu_notifier_subscriptions = type opaque
%struct.uprobes_state = type {}
%struct.vmacache = type { i64, [4 x %struct.vm_area_struct*] }
%struct.restart_block = type { i64 (%struct.restart_block*)*, %union.anon.18 }
%union.anon.18 = type { %struct.anon.19 }
%struct.anon.19 = type { i32*, i32, i32, i32, i64, i32* }
%struct.pid = type { %struct.refcount_struct, i32, %struct.spinlock, [4 x %struct.hlist_head], %struct.hlist_head, %struct.wait_queue_head, %struct.callback_head, [1 x %struct.upid] }
%struct.upid = type { i32, %struct.pid_namespace* }
%struct.pid_namespace = type opaque
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.posix_cputimers_work = type { %struct.callback_head, i32 }
%struct.key = type { %struct.refcount_struct, i32, %union.anon.23, %struct.rw_semaphore, %struct.key_user*, i8*, %union.anon.24, i64, %struct.kuid_t, %struct.kgid_t, i32, i16, i16, i16, i64, %union.anon.25, %union.anon.29, %struct.key_restriction* }
%union.anon.23 = type { %struct.rb_node }
%struct.key_user = type opaque
%union.anon.24 = type { i64 }
%union.anon.25 = type { %struct.keyring_index_key }
%struct.keyring_index_key = type { i64, %union.anon.26, %struct.key_type*, %struct.key_tag*, i8* }
%union.anon.26 = type { i64 }
%struct.key_type = type opaque
%struct.key_tag = type { %struct.callback_head, %struct.refcount_struct, i8 }
%union.anon.29 = type { %union.key_payload }
%union.key_payload = type { [4 x i8*] }
%struct.key_restriction = type { i32 (%struct.key*, %struct.key_type*, %union.key_payload*, %struct.key*)*, %struct.key*, %struct.key_type* }
%struct.nameidata = type opaque
%struct.fs_struct = type opaque
%struct.files_struct = type opaque
%struct.io_uring_task = type opaque
%struct.nsproxy = type opaque
%struct.signal_struct = type { %struct.refcount_struct, %struct.atomic_t, i32, %struct.list_head, %struct.wait_queue_head, %struct.task_struct*, %struct.sigpending, %struct.hlist_head, i32, i32, %struct.task_struct*, i32, i32, i8, i32, %struct.list_head, %struct.hrtimer, i64, [2 x %struct.cpu_itimer], %struct.thread_group_cputimer, %struct.posix_cputimers, [4 x %struct.pid*], %struct.pid*, i32, %struct.tty_struct*, %struct.seqlock_t, i64, i64, i64, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.task_io_accounting, i64, [16 x %struct.rlimit], i8, i16, i16, %struct.mm_struct*, %struct.mutex, %struct.mutex }
%struct.cpu_itimer = type { i64, i64 }
%struct.thread_group_cputimer = type { %struct.task_cputime_atomic }
%struct.task_cputime_atomic = type { %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t }
%struct.tty_struct = type opaque
%struct.seqlock_t = type { %struct.seqcount_spinlock, %struct.spinlock }
%struct.rlimit = type { i64, i64 }
%struct.sighand_struct = type { %struct.spinlock, %struct.refcount_struct, %struct.wait_queue_head, [64 x %struct.k_sigaction] }
%struct.k_sigaction = type { %struct.sigaction }
%struct.sigaction = type { void (i32)*, i64, void ()*, %struct.sigset_t }
%struct.sigset_t = type { [1 x i64] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.seccomp = type { i32, %struct.atomic_t, %struct.seccomp_filter* }
%struct.seccomp_filter = type opaque
%struct.wake_q_node = type { %struct.wake_q_node* }
%struct.rb_root_cached = type { %struct.rb_root, %struct.rb_node* }
%struct.rt_mutex_waiter = type opaque
%struct.bio_list = type opaque
%struct.blk_plug = type opaque
%struct.reclaim_state = type opaque
%struct.io_context = type { %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.spinlock, i16, %struct.xarray, %struct.io_cq*, %struct.hlist_head, %struct.work_struct }
%struct.xarray = type { %struct.spinlock, i32, i8* }
%struct.io_cq = type { %struct.request_queue*, %struct.io_context*, %union.anon.32, %union.anon.33, i32 }
%struct.request_queue = type opaque
%union.anon.32 = type { %struct.list_head }
%union.anon.33 = type { %struct.hlist_node }
%struct.capture_control = type opaque
%struct.kernel_siginfo = type { %struct.anon.34 }
%struct.anon.34 = type { i32, i32, i32, %union.__sifields }
%union.__sifields = type { %struct.anon.38 }
%struct.anon.38 = type { i32, i32, i32, i64, i64 }
%struct.task_io_accounting = type {}
%struct.robust_list_head = type opaque
%struct.futex_pi_state = type opaque
%struct.perf_event_context = type opaque
%struct.rseq = type { i32, i32, %union.anon.45, i32, [12 x i8] }
%union.anon.45 = type { i64 }
%struct.tlbflush_unmap_batch = type { %struct.arch_tlbflush_unmap_batch, i8, i8 }
%struct.arch_tlbflush_unmap_batch = type { %struct.cpumask }
%union.anon.46 = type { %struct.callback_head }
%struct.pipe_inode_info = type opaque
%struct.page_frag = type { %struct.page*, i32, i32 }
%struct.vm_struct = type opaque
%struct.refcount_struct = type { %struct.atomic_t }
%struct.thread_struct = type { [3 x %struct.desc_struct], i64, i16, i16, i16, i16, i64, i64, [4 x %struct.perf_event*], i64, i64, i64, i64, i64, %struct.io_bitmap*, i64, i8, [47 x i8], %struct.fpu }
%struct.desc_struct = type { i16, i16, i32 }
%struct.perf_event = type opaque
%struct.io_bitmap = type opaque
%struct.fpu = type { i32, i64, [48 x i8], %union.fpregs_state }
%union.fpregs_state = type { %struct.xregs_state, [3520 x i8] }
%struct.xregs_state = type { %struct.fxregs_state, %struct.xstate_header, [0 x i8] }
%struct.fxregs_state = type { i16, i16, i16, i16, %union.anon.47, i32, i32, [32 x i32], [64 x i32], [12 x i32], %union.anon.50 }
%union.anon.47 = type { %struct.anon.48 }
%struct.anon.48 = type { i64, i64 }
%union.anon.50 = type { [12 x i32] }
%struct.xstate_header = type { i64, i64, [6 x i64] }
%struct.fsnotify_mark_connector = type opaque
%struct.uuid_t = type { [16 x i8] }
%struct.shrinker = type { i64 (%struct.shrinker*, %struct.shrink_control*)*, i64 (%struct.shrinker*, %struct.shrink_control*)*, i64, i32, i32, %struct.list_head, %struct.atomic64_t* }
%struct.workqueue_struct = type opaque
%struct.hlist_head = type { %struct.hlist_node* }
%struct.user_namespace = type opaque
%struct.list_lru = type { %struct.list_lru_node* }
%struct.list_lru_node = type { %struct.spinlock, %struct.list_lru_one, i64 }
%struct.list_lru_one = type { %struct.list_head, i64 }
%struct.work_struct = type { %struct.atomic64_t, %struct.list_head, void (%struct.work_struct*)* }
%union.anon.62 = type { %struct.list_head }
%union.anon.63 = type { %struct.hlist_node }
%struct.inode = type { i16, i16, %struct.kuid_t, %struct.kgid_t, i32, %struct.inode_operations*, %struct.super_block*, %struct.address_space*, i64, %union.anon.54, i32, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.spinlock, i16, i8, i8, i64, i64, %struct.rw_semaphore, i64, i64, %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %union.anon.55, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %union.anon.56, %struct.file_lock_context*, %struct.address_space, %struct.list_head, %union.anon.59, i32, i32, %struct.fsnotify_mark_connector*, i8* }
%struct.inode_operations = type { %struct.dentry* (%struct.inode*, %struct.dentry*, i32)*, i8* (%struct.dentry*, %struct.inode*, %struct.delayed_call*)*, i32 (%struct.inode*, i32)*, %struct.posix_acl* (%struct.inode*, i32)*, i32 (%struct.dentry*, i8*, i32)*, i32 (%struct.inode*, %struct.dentry*, i16, i1)*, i32 (%struct.dentry*, %struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i8*)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i16, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.inode*, %struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.iattr*)*, i32 (%struct.path*, %struct.kstat*, i32, i32)*, i64 (%struct.dentry*, i8*, i64)*, i32 (%struct.inode*, %struct.fiemap_extent_info*, i64, i64)*, i32 (%struct.inode*, %struct.timespec64*, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.file*, i32, i16)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.posix_acl*, i32)*, [24 x i8] }
%struct.delayed_call = type { void (i8*)*, i8* }
%struct.posix_acl = type opaque
%struct.iattr = type { i32, i16, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.file* }
%struct.kstat = type { i32, i16, i32, i32, i64, i64, i64, i32, i32, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.timespec64, i64, i64 }
%struct.fiemap_extent_info = type opaque
%union.anon.54 = type { i32 }
%struct.timespec64 = type { i64, i64 }
%union.anon.55 = type { %struct.callback_head }
%union.anon.56 = type { %struct.file_operations* }
%struct.file_lock_context = type { %struct.spinlock, %struct.list_head, %struct.list_head, %struct.list_head }
%struct.address_space = type { %struct.inode*, %struct.xarray, i32, %struct.atomic_t, %struct.rb_root_cached, %struct.rw_semaphore, i64, i64, i64, %struct.address_space_operations*, i64, i32, %struct.spinlock, %struct.list_head, i8* }
%struct.address_space_operations = type { i32 (%struct.page*, %struct.writeback_control*)*, i32 (%struct.file*, %struct.page*)*, i32 (%struct.address_space*, %struct.writeback_control*)*, i32 (%struct.page*)*, i32 (%struct.file*, %struct.address_space*, %struct.list_head*, i32)*, void (%struct.readahead_control*)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page**, i8**)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page*, i8*)*, i64 (%struct.address_space*, i64)*, void (%struct.page*, i32, i32)*, i32 (%struct.page*, i32)*, void (%struct.page*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.address_space*, %struct.page*, %struct.page*, i32)*, i1 (%struct.page*, i32)*, void (%struct.page*)*, i32 (%struct.page*)*, i32 (%struct.page*, i64, i64)*, void (%struct.page*, i8*, i8*)*, i32 (%struct.address_space*, %struct.page*)*, i32 (%struct.swap_info_struct*, %struct.file*, i64*)*, void (%struct.file*)* }
%struct.readahead_control = type opaque
%struct.kiocb = type { %struct.file*, i64, void (%struct.kiocb*, i64, i64)*, i8*, i32, i16, i16, %union.anon.5 }
%union.anon.5 = type { %struct.wait_page_queue* }
%struct.wait_page_queue = type opaque
%struct.iov_iter = type opaque
%struct.swap_info_struct = type opaque
%union.anon.59 = type { %struct.pipe_inode_info* }
%struct.file_operations = type { %struct.module*, i64 (%struct.file*, i64, i32)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.kiocb*, i1)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.poll_table_struct*)*, i64 (%struct.file*, i32, i64)*, i64 (%struct.file*, i32, i64)*, i32 (%struct.file*, %struct.vm_area_struct*)*, i64, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i8*)*, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i64, i64, i32)*, i32 (i32, %struct.file*, i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.file*, %struct.page*, i32, i64, i64*, i32)*, i64 (%struct.file*, i64, i64, i64, i64)*, i32 (i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.pipe_inode_info*, %struct.file*, i64*, i64, i32)*, i64 (%struct.file*, i64*, %struct.pipe_inode_info*, i64, i32)*, i32 (%struct.file*, i64, %struct.file_lock**, i8**)*, i64 (%struct.file*, i32, i64, i64)*, void (%struct.seq_file*, %struct.file*)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i32 (%struct.file*, i64, i64, i32)* }
%struct.dir_context = type { i32 (%struct.dir_context*, i8*, i32, i64, i64, i32)*, i64 }
%struct.poll_table_struct = type opaque
%struct.file_lock = type { %struct.file_lock*, %struct.list_head, %struct.hlist_node, %struct.list_head, %struct.list_head, i8*, i32, i8, i32, i32, %struct.wait_queue_head, %struct.file*, i64, i64, %struct.fasync_struct*, i64, i64, %struct.file_lock_operations*, %struct.lock_manager_operations*, %union.anon.57 }
%struct.fasync_struct = type { %struct.rwlock_t, i32, i32, %struct.fasync_struct*, %struct.file*, %struct.callback_head }
%struct.rwlock_t = type { %struct.arch_rwlock_t }
%struct.arch_rwlock_t = type {}
%struct.file_lock_operations = type { void (%struct.file_lock*, %struct.file_lock*)*, void (%struct.file_lock*)* }
%struct.lock_manager_operations = type { i8* (i8*)*, void (i8*)*, void (%struct.file_lock*)*, i32 (%struct.file_lock*, i32)*, i1 (%struct.file_lock*)*, i32 (%struct.file_lock*, i32, %struct.list_head*)*, void (%struct.file_lock*, i8**)*, i1 (%struct.file_lock*)* }
%union.anon.57 = type { %struct.nfs_lock_info }
%struct.nfs_lock_info = type { i32, %struct.nlm_lockowner*, %struct.list_head }
%struct.nlm_lockowner = type opaque
%struct.fown_struct = type { %struct.rwlock_t, %struct.pid*, i32, %struct.kuid_t, %struct.kuid_t, i32 }
%struct.cred = type { %struct.atomic_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, i32, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, i8, %struct.key*, %struct.key*, %struct.key*, %struct.key*, %struct.user_struct*, %struct.user_namespace*, %struct.group_info*, %union.anon.31 }
%struct.kernel_cap_struct = type { [2 x i32] }
%struct.user_struct = type { %struct.refcount_struct, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i64, i64, %struct.atomic64_t, %struct.hlist_node, %struct.kuid_t, %struct.atomic64_t, %struct.ratelimit_state }
%struct.ratelimit_state = type { %struct.raw_spinlock, i32, i32, i32, i32, i64, i64 }
%struct.group_info = type { %struct.atomic_t, i32, [0 x %struct.kgid_t] }
%union.anon.31 = type { %struct.callback_head }
%struct.file_ra_state = type { i64, i32, i32, i32, i32, i64 }
%struct.seq_file = type opaque
%struct.vm_operations_struct = type opaque
%struct.kernfs_open_node = type opaque
%struct.kernfs_iattrs = type opaque
%struct.kref = type { %struct.refcount_struct }
%struct.device_private = type opaque
%struct.device_type = type { i8*, %struct.attribute_group**, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*, %struct.kuid_t*, %struct.kgid_t*)*, void (%struct.device*)*, %struct.dev_pm_ops* }
%struct.dev_pm_ops = type { i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)* }
%struct.bus_type = type { i8*, i8*, %struct.device*, %struct.attribute_group**, %struct.attribute_group**, %struct.attribute_group**, i32 (%struct.device*, %struct.device_driver*)*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, %struct.dev_pm_ops*, %struct.iommu_ops*, %struct.subsys_private*, %struct.lock_class_key, i8 }
%struct.iommu_ops = type opaque
%struct.subsys_private = type opaque
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, i8, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, %struct.wakeup_source*, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, %struct.wake_irq*, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i64, i64, i64, i64, %struct.pm_subsys_data*, void (%struct.device*, i32)*, %struct.dev_pm_qos* }
%struct.pm_message = type { i32 }
%struct.wakeup_source = type { i8*, i32, %struct.list_head, %struct.spinlock, %struct.wake_irq*, %struct.timer_list, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.device*, i8 }
%struct.timer_list = type { %struct.hlist_node, i64, void (%struct.timer_list*)*, i32 }
%struct.wake_irq = type opaque
%struct.pm_subsys_data = type { %struct.spinlock, i32, %struct.list_head, %struct.pm_domain_data* }
%struct.pm_domain_data = type opaque
%struct.dev_pm_qos = type opaque
%struct.dev_pm_domain = type { %struct.dev_pm_ops, i32 (%struct.device*)*, void (%struct.device*, i1)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)* }
%struct.irq_domain = type opaque
%struct.dma_map_ops = type opaque
%struct.bus_dma_region = type opaque
%struct.device_dma_parameters = type { i32, i64 }
%struct.dev_archdata = type {}
%struct.device_node = type opaque
%struct.fwnode_handle = type { %struct.fwnode_handle*, %struct.fwnode_operations*, %struct.device* }
%struct.fwnode_operations = type { %struct.fwnode_handle* (%struct.fwnode_handle*)*, void (%struct.fwnode_handle*)*, i1 (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*, %struct.device*)*, i1 (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i32, i8*, i64)*, i32 (%struct.fwnode_handle*, i8*, i8**, i64)*, i8* (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i8*, i32, i32, %struct.fwnode_reference_args*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, i32 (%struct.fwnode_handle*, %struct.fwnode_endpoint*)*, i32 (%struct.fwnode_handle*, %struct.device*)* }
%struct.fwnode_reference_args = type { %struct.fwnode_handle*, i32, [8 x i64] }
%struct.fwnode_endpoint = type { i32, i32, %struct.fwnode_handle* }
%struct.class = type { i8*, %struct.module*, %struct.attribute_group**, %struct.attribute_group**, %struct.kobject*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*)*, void (%struct.class*)*, void (%struct.device*)*, i32 (%struct.device*)*, %struct.kobj_ns_type_operations*, i8* (%struct.device*)*, void (%struct.device*, %struct.kuid_t*, %struct.kgid_t*)*, %struct.dev_pm_ops*, %struct.subsys_private* }
%struct.attribute_group = type { i8*, i16 (%struct.kobject*, %struct.attribute*, i32)*, i16 (%struct.kobject*, %struct.bin_attribute*, i32)*, %struct.attribute**, %struct.bin_attribute** }
%struct.bin_attribute = type { %struct.attribute, i64, i8*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i32 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, %struct.vm_area_struct*)* }
%struct.iommu_group = type opaque
%struct.dev_iommu = type opaque
%struct.list_head = type { %struct.list_head*, %struct.list_head* }
%struct.device_driver = type { i8*, %struct.bus_type*, %struct.module*, i8*, i8, i32, %struct.of_device_id*, %struct.acpi_device_id*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, %struct.attribute_group**, %struct.attribute_group**, %struct.dev_pm_ops*, void (%struct.device*)*, %struct.driver_private* }
%struct.of_device_id = type { [32 x i8], [32 x i8], [128 x i8], i8* }
%struct.acpi_device_id = type { [9 x i8], i64, i32, i32 }
%struct.driver_private = type opaque
%struct.atkbd = type { %struct.ps2dev, %struct.input_dev*, [64 x i8], [32 x i8], i16, [512 x i16], [8 x i64], i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i64, i32, i64, i64, %struct.delayed_work, i64, i64, %struct.mutex, [24 x i32], i32 }
%struct.ps2dev = type { %struct.serio*, %struct.mutex, %struct.wait_queue_head, i64, [8 x i8], i8, i8 }
%struct.input_dev = type { i8*, i8*, i8*, %struct.input_id, [1 x i64], [1 x i64], [12 x i64], [1 x i64], [1 x i64], [1 x i64], [1 x i64], [1 x i64], [2 x i64], [1 x i64], i32, i32, i32, i8*, i32 (%struct.input_dev*, %struct.input_keymap_entry*, i32*)*, i32 (%struct.input_dev*, %struct.input_keymap_entry*)*, %struct.ff_device*, %struct.input_dev_poller*, i32, %struct.timer_list, [2 x i32], %struct.input_mt*, %struct.input_absinfo*, [12 x i64], [1 x i64], [1 x i64], [1 x i64], i32 (%struct.input_dev*)*, void (%struct.input_dev*)*, i32 (%struct.input_dev*, %struct.file*)*, i32 (%struct.input_dev*, i32, i32, i32)*, %struct.input_handle*, %struct.spinlock, %struct.mutex, i32, i8, %struct.device, %struct.list_head, %struct.list_head, i32, i32, %struct.input_value*, i8, [3 x i64] }
%struct.input_id = type { i16, i16, i16, i16 }
%struct.input_keymap_entry = type { i8, i8, i16, i32, [32 x i8] }
%struct.ff_device = type { i32 (%struct.input_dev*, %struct.ff_effect*, %struct.ff_effect*)*, i32 (%struct.input_dev*, i32)*, i32 (%struct.input_dev*, i32, i32)*, void (%struct.input_dev*, i16)*, void (%struct.input_dev*, i16)*, void (%struct.ff_device*)*, i8*, [2 x i64], %struct.mutex, i32, %struct.ff_effect*, [0 x %struct.file*] }
%struct.ff_effect = type { i16, i16, i16, %struct.ff_trigger, %struct.ff_replay, %union.anon.65 }
%struct.ff_trigger = type { i16, i16 }
%struct.ff_replay = type { i16, i16 }
%union.anon.65 = type { %struct.ff_periodic_effect }
%struct.ff_periodic_effect = type { i16, i16, i16, i16, i16, %struct.ff_envelope, i32, i16* }
%struct.ff_envelope = type { i16, i16, i16, i16 }
%struct.input_dev_poller = type opaque
%struct.input_mt = type opaque
%struct.input_absinfo = type { i32, i32, i32, i32, i32, i32 }
%struct.input_handle = type { i8*, i32, i8*, %struct.input_dev*, %struct.input_handler*, %struct.list_head, %struct.list_head }
%struct.input_handler = type { i8*, void (%struct.input_handle*, i32, i32, i32)*, void (%struct.input_handle*, %struct.input_value*, i32)*, i1 (%struct.input_handle*, i32, i32, i32)*, i1 (%struct.input_handler*, %struct.input_dev*)*, i32 (%struct.input_handler*, %struct.input_dev*, %struct.input_device_id*)*, void (%struct.input_handle*)*, void (%struct.input_handle*)*, i8, i32, i8*, %struct.input_device_id*, %struct.list_head, %struct.list_head }
%struct.input_device_id = type { i64, i16, i16, i16, i16, [1 x i64], [12 x i64], [1 x i64], [1 x i64], [1 x i64], [1 x i64], [1 x i64], [2 x i64], [1 x i64], [1 x i64], i64 }
%struct.input_value = type { i16, i16, i32 }
%struct.delayed_work = type { %struct.work_struct, %struct.timer_list, %struct.workqueue_struct*, i32 }
%struct.kmem_cache = type opaque
%struct.anon.66 = type { i16, i8 }
%struct.device_attribute = type { %struct.attribute, i64 (%struct.device*, %struct.device_attribute*, i8*)*, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* }
%struct.paravirt_patch_template = type { %struct.pv_init_ops, %struct.pv_time_ops, %struct.pv_cpu_ops, %struct.pv_irq_ops, %struct.pv_mmu_ops, %struct.pv_lock_ops }
%struct.pv_init_ops = type { i32 (i8, i8*, i64, i32)* }
%struct.pv_time_ops = type { i64 ()*, i64 (i32)* }
%struct.pv_cpu_ops = type { void ()*, i64 (i32)*, void (i32, i64)*, i64 ()*, void (i64)*, void (i64)*, void ()*, void (%struct.desc_ptr*)*, void (%struct.desc_ptr*)*, void (i8*, i32)*, i64 ()*, void (%struct.thread_struct*, i32)*, void (i32)*, void (%struct.desc_struct*, i32, i8*)*, void (%struct.desc_struct*, i32, i8*, i32)*, void (%struct.gate_struct*, i32, %struct.gate_struct*)*, void (%struct.desc_struct*, i32)*, void (%struct.desc_struct*, i32)*, void (i64)*, void ()*, void ()*, void ()*, void (i32*, i32*, i32*, i32*)*, i64 (i32)*, void (i32, i32, i32)*, i64 (i32, i32*)*, i32 (i32, i32, i32)*, i64 (i32)*, void ()*, void ()*, void ()*, void (%struct.task_struct*)*, void (%struct.task_struct*)* }
%struct.desc_ptr = type <{ i16, i64 }>
%struct.gate_struct = type { i16, i16, %struct.idt_bits, i16, i32, i32 }
%struct.idt_bits = type { i16 }
%struct.pv_irq_ops = type { %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void ()*, void ()* }
%struct.paravirt_callee_save = type { i8* }
%struct.pv_mmu_ops = type { void ()*, void ()*, void (i64)*, void (%struct.cpumask*, %struct.flush_tlb_info*)*, void (%struct.mmu_gather*, i8*)*, void (%struct.mm_struct*)*, %struct.paravirt_callee_save, void (i64)*, i64 ()*, void (i64)*, void (%struct.mm_struct*, %struct.mm_struct*)*, void (%struct.mm_struct*, %struct.mm_struct*)*, i32 (%struct.mm_struct*)*, void (%struct.mm_struct*, %struct.pgd_t*)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (i64)*, void (i64)*, void (i64)*, void (i64)*, void (%struct.pte_t*, i64)*, void (%struct.pmd_t*, i64)*, i64 (%struct.vm_area_struct*, i64, %struct.pte_t*)*, void (%struct.vm_area_struct*, i64, %struct.pte_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.pud_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.p4d_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.pgd_t*, i64)*, %struct.pv_lazy_ops, void (i32, i64, i64)* }
%struct.flush_tlb_info = type opaque
%struct.mmu_gather = type opaque
%struct.pte_t = type { i64 }
%struct.pmd_t = type { i64 }
%struct.pud_t = type { i64 }
%struct.p4d_t = type { i64 }
%struct.pv_lazy_ops = type { void ()*, void ()*, void ()* }
%struct.pv_lock_ops = type { void (%struct.qspinlock*, i32)*, %struct.paravirt_callee_save, void (i8*, i8)*, void (i32)*, %struct.paravirt_callee_save }
%struct.qspinlock = type opaque
%struct.dmi_system_id = type { {}*, i8*, [4 x %struct.dmi_strmatch], i8* }
%struct.dmi_strmatch = type { i8, [79 x i8] }

@__UNIQUE_ID_author204 = internal constant [46 x i8] c"atkbd.author=Vojtech Pavlik <vojtech@suse.cz>\00", section ".modinfo", align 1, !dbg !0
@__UNIQUE_ID_description205 = internal constant [46 x i8] c"atkbd.description=AT and PS/2 keyboard driver\00", section ".modinfo", align 1, !dbg !4000
@__UNIQUE_ID_file206 = internal constant [40 x i8] c"atkbd.file=drivers/input/keyboard/atkbd\00", section ".modinfo", align 1, !dbg !4005
@__UNIQUE_ID_license207 = internal constant [18 x i8] c"atkbd.license=GPL\00", section ".modinfo", align 1, !dbg !4010
@__param_str_set = internal constant [10 x i8] c"atkbd.set\00", align 1, !dbg !4163
@param_ops_int = external dso_local constant %struct.kernel_param_ops, align 8
@atkbd_set = internal global i32 2, align 4, !dbg !4168
@__param_set = internal constant %struct.kernel_param { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__param_str_set, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_int, i16 0, i8 -1, i8 0, %union.anon { i8* bitcast (i32* @atkbd_set to i8*) } }, section "__param", align 8, !dbg !4015
@__UNIQUE_ID_settype208 = internal constant [23 x i8] c"atkbd.parmtype=set:int\00", section ".modinfo", align 1, !dbg !4067
@__UNIQUE_ID_set209 = internal constant [71 x i8] c"atkbd.parm=set:Select keyboard code set (2 = default, 3 = PS/2 native)\00", section ".modinfo", align 1, !dbg !4072
@__param_str_reset = internal constant [12 x i8] c"atkbd.reset\00", align 1, !dbg !4170
@param_ops_bool = external dso_local constant %struct.kernel_param_ops, align 8
@atkbd_reset = internal global i8 0, align 1, !dbg !4153
@__param_reset = internal constant %struct.kernel_param { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__param_str_reset, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_bool, i16 0, i8 -1, i8 0, %union.anon { i8* @atkbd_reset } }, section "__param", align 8, !dbg !4077
@__UNIQUE_ID_resettype210 = internal constant [26 x i8] c"atkbd.parmtype=reset:bool\00", section ".modinfo", align 1, !dbg !4079
@__UNIQUE_ID_reset211 = internal constant [54 x i8] c"atkbd.parm=reset:Reset keyboard during initialization\00", section ".modinfo", align 1, !dbg !4084
@__param_str_softrepeat = internal constant [17 x i8] c"atkbd.softrepeat\00", align 16, !dbg !4173
@atkbd_softrepeat = internal global i8 0, align 1, !dbg !4155
@__param_softrepeat = internal constant %struct.kernel_param { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__param_str_softrepeat, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_bool, i16 0, i8 -1, i8 0, %union.anon { i8* @atkbd_softrepeat } }, section "__param", align 8, !dbg !4089
@__UNIQUE_ID_softrepeattype212 = internal constant [31 x i8] c"atkbd.parmtype=softrepeat:bool\00", section ".modinfo", align 1, !dbg !4091
@__UNIQUE_ID_softrepeat213 = internal constant [51 x i8] c"atkbd.parm=softrepeat:Use software keyboard repeat\00", section ".modinfo", align 1, !dbg !4096
@__param_str_softraw = internal constant [14 x i8] c"atkbd.softraw\00", align 1, !dbg !4178
@atkbd_softraw = internal global i8 1, align 1, !dbg !4183
@__param_softraw = internal constant %struct.kernel_param { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__param_str_softraw, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_bool, i16 0, i8 -1, i8 0, %union.anon { i8* @atkbd_softraw } }, section "__param", align 8, !dbg !4101
@__UNIQUE_ID_softrawtype214 = internal constant [28 x i8] c"atkbd.parmtype=softraw:bool\00", section ".modinfo", align 1, !dbg !4103
@__UNIQUE_ID_softraw215 = internal constant [50 x i8] c"atkbd.parm=softraw:Use software generated rawmode\00", section ".modinfo", align 1, !dbg !4108
@__param_str_scroll = internal constant [13 x i8] c"atkbd.scroll\00", align 1, !dbg !4185
@atkbd_scroll = internal global i8 0, align 1, !dbg !4157
@__param_scroll = internal constant %struct.kernel_param { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__param_str_scroll, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_bool, i16 0, i8 -1, i8 0, %union.anon { i8* @atkbd_scroll } }, section "__param", align 8, !dbg !4113
@__UNIQUE_ID_scrolltype216 = internal constant [27 x i8] c"atkbd.parmtype=scroll:bool\00", section ".modinfo", align 1, !dbg !4115
@__UNIQUE_ID_scroll217 = internal constant [73 x i8] c"atkbd.parm=scroll:Enable scroll-wheel on MS Office and similar keyboards\00", section ".modinfo", align 1, !dbg !4120
@__param_str_extra = internal constant [12 x i8] c"atkbd.extra\00", align 1, !dbg !4190
@atkbd_extra = internal global i8 0, align 1, !dbg !4159
@__param_extra = internal constant %struct.kernel_param { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__param_str_extra, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_bool, i16 0, i8 -1, i8 0, %union.anon { i8* @atkbd_extra } }, section "__param", align 8, !dbg !4125
@__UNIQUE_ID_extratype218 = internal constant [26 x i8] c"atkbd.parmtype=extra:bool\00", section ".modinfo", align 1, !dbg !4127
@__UNIQUE_ID_extra219 = internal constant [91 x i8] c"atkbd.parm=extra:Enable extra LEDs and keys on IBM RapidAcces, EzKey and similar keyboards\00", section ".modinfo", align 1, !dbg !4129
@__param_str_terminal = internal constant [15 x i8] c"atkbd.terminal\00", align 1, !dbg !4192
@atkbd_terminal = internal global i8 0, align 1, !dbg !4161
@__param_terminal = internal constant %struct.kernel_param { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__param_str_terminal, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_bool, i16 0, i8 -1, i8 0, %union.anon { i8* @atkbd_terminal } }, section "__param", align 8, !dbg !4134
@__UNIQUE_ID_terminaltype220 = internal constant [29 x i8] c"atkbd.parmtype=terminal:bool\00", section ".modinfo", align 1, !dbg !4136
@__UNIQUE_ID_terminal221 = internal constant [88 x i8] c"atkbd.parm=terminal:Enable break codes on an IBM Terminal keyboard connected via AT/PS2\00", section ".modinfo", align 1, !dbg !4141
@atkbd_drv = internal global %struct.serio_driver { i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str, i32 0, i32 0), %struct.serio_device_id* getelementptr inbounds ([4 x %struct.serio_device_id], [4 x %struct.serio_device_id]* @atkbd_serio_ids, i32 0, i32 0), i8 0, void (%struct.serio*)* null, i32 (%struct.serio*, i8, i32)* @atkbd_interrupt, i32 (%struct.serio*, %struct.serio_driver*)* @atkbd_connect, i32 (%struct.serio*)* @atkbd_reconnect, i32 (%struct.serio*)* null, void (%struct.serio*)* @atkbd_disconnect, void (%struct.serio*)* @atkbd_cleanup, %struct.device_driver { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1, i32 0, i32 0), %struct.bus_type* null, %struct.module* null, i8* null, i8 0, i32 0, %struct.of_device_id* null, %struct.acpi_device_id* null, i32 (%struct.device*)* null, void (%struct.device*)* null, i32 (%struct.device*)* null, void (%struct.device*)* null, i32 (%struct.device*, i32)* null, i32 (%struct.device*)* null, %struct.attribute_group** null, %struct.attribute_group** null, %struct.dev_pm_ops* null, void (%struct.device*)* null, %struct.driver_private* null } }, align 8, !dbg !4197
@__UNIQUE_ID___addressable_atkbd_init227 = internal global i8* bitcast (i32 ()* @atkbd_init to i8*), section ".discard.addressable", align 8, !dbg !4146
@__exitcall_atkbd_exit = internal global void ()* @atkbd_exit, section ".exitcall.exit", align 8, !dbg !4148
@.str = private unnamed_addr constant [28 x i8] c"AT and PS/2 keyboard driver\00", align 1
@atkbd_serio_ids = internal constant [4 x %struct.serio_device_id] [%struct.serio_device_id { i8 1, i8 -1, i8 -1, i8 -1 }, %struct.serio_device_id { i8 6, i8 -1, i8 -1, i8 -1 }, %struct.serio_device_id { i8 2, i8 -1, i8 -1, i8 34 }, %struct.serio_device_id zeroinitializer], align 16, !dbg !4199
@.str.1 = private unnamed_addr constant [6 x i8] c"atkbd\00", align 1
@atkbd_platform_scancode_fixup = internal global i32 (%struct.atkbd*, i32)* null, align 8, !dbg !4202
@__func__.atkbd_interrupt = private unnamed_addr constant [16 x i8] c"atkbd_interrupt\00", align 1
@.str.2 = private unnamed_addr constant [78 x i8] c"Spurious %s on %s. Some program might be trying to access hardware directly.\0A\00", align 1
@.str.3 = private unnamed_addr constant [4 x i8] c"ACK\00", align 1
@.str.4 = private unnamed_addr constant [4 x i8] c"NAK\00", align 1
@.str.5 = private unnamed_addr constant [45 x i8] c"Unknown key %s (%s set %d, code %#x on %s).\0A\00", align 1
@.str.6 = private unnamed_addr constant [9 x i8] c"released\00", align 1
@.str.7 = private unnamed_addr constant [8 x i8] c"pressed\00", align 1
@.str.8 = private unnamed_addr constant [11 x i8] c"translated\00", align 1
@.str.9 = private unnamed_addr constant [4 x i8] c"raw\00", align 1
@.str.10 = private unnamed_addr constant [54 x i8] c"Use 'setkeycodes %s%02x <keycode>' to make it known.\0A\00", align 1
@.str.11 = private unnamed_addr constant [3 x i8] c"e0\00", align 1
@.str.12 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@jiffies = external dso_local global i64, align 8
@xl_table = internal constant [6 x i32] [i32 170, i32 255, i32 250, i32 254, i32 241, i32 242], align 16, !dbg !4207
@atkbd_connect.__key = internal global %struct.lock_class_key zeroinitializer, align 1, !dbg !4210
@.str.13 = private unnamed_addr constant [14 x i8] c"&atkbd->mutex\00", align 1
@atkbd_attribute_group = internal global %struct.attribute_group { i8* null, i16 (%struct.kobject*, %struct.attribute*, i32)* @atkbd_attr_is_visible, i16 (%struct.kobject*, %struct.bin_attribute*, i32)* null, %struct.attribute** getelementptr inbounds ([9 x %struct.attribute*], [9 x %struct.attribute*]* @atkbd_attributes, i32 0, i32 0), %struct.bin_attribute** null }, align 8, !dbg !4241
@kmalloc_caches = external dso_local global [3 x [14 x %struct.kmem_cache*]], align 16
@.str.14 = private unnamed_addr constant [21 x i8] c"include/linux/slab.h\00", align 1
@system_wq = external dso_local global %struct.workqueue_struct*, align 8
@__const.atkbd_set_repeat_rate.period = private unnamed_addr constant [32 x i16] [i16 33, i16 37, i16 42, i16 46, i16 50, i16 54, i16 58, i16 63, i16 67, i16 75, i16 83, i16 92, i16 100, i16 109, i16 116, i16 125, i16 133, i16 149, i16 167, i16 182, i16 200, i16 217, i16 232, i16 250, i16 270, i16 303, i16 333, i16 370, i16 400, i16 435, i16 470, i16 500], align 16
@__const.atkbd_set_repeat_rate.delay = private unnamed_addr constant [4 x i16] [i16 250, i16 500, i16 750, i16 1000], align 2
@.str.15 = private unnamed_addr constant [29 x i8] c"keyboard reset failed on %s\0A\00", align 1
@.str.16 = private unnamed_addr constant [118 x i8] c"NCD terminal keyboards are only supported on non-translating controllers. Use i8042.direct=1 to disable translation.\0A\00", align 1
@atkbd_skip_deactivate = internal global i8 0, align 1, !dbg !4213
@.str.17 = private unnamed_addr constant [37 x i8] c"Failed to deactivate keyboard on %s\0A\00", align 1
@.str.18 = private unnamed_addr constant [21 x i8] c"function-row-physmap\00", align 1
@atkbd_unxlate_table = internal constant [128 x i16] [i16 0, i16 118, i16 22, i16 30, i16 38, i16 37, i16 46, i16 54, i16 61, i16 62, i16 70, i16 69, i16 78, i16 85, i16 102, i16 13, i16 21, i16 29, i16 36, i16 45, i16 44, i16 53, i16 60, i16 67, i16 68, i16 77, i16 84, i16 91, i16 90, i16 20, i16 28, i16 27, i16 35, i16 43, i16 52, i16 51, i16 59, i16 66, i16 75, i16 76, i16 82, i16 14, i16 18, i16 93, i16 26, i16 34, i16 33, i16 42, i16 50, i16 49, i16 58, i16 65, i16 73, i16 74, i16 89, i16 124, i16 17, i16 41, i16 88, i16 5, i16 6, i16 4, i16 12, i16 3, i16 11, i16 2, i16 10, i16 1, i16 9, i16 119, i16 126, i16 108, i16 117, i16 125, i16 123, i16 107, i16 115, i16 116, i16 121, i16 105, i16 114, i16 122, i16 112, i16 113, i16 127, i16 96, i16 97, i16 120, i16 7, i16 15, i16 23, i16 31, i16 39, i16 47, i16 55, i16 63, i16 71, i16 79, i16 86, i16 94, i16 8, i16 16, i16 24, i16 32, i16 40, i16 48, i16 56, i16 64, i16 72, i16 80, i16 87, i16 111, i16 19, i16 25, i16 57, i16 81, i16 83, i16 92, i16 95, i16 98, i16 99, i16 100, i16 101, i16 103, i16 104, i16 106, i16 109, i16 110], align 16, !dbg !4215
@atkbd_scroll_keys = internal constant [7 x %struct.anon.66] [%struct.anon.66 { i16 -2, i8 -59 }, %struct.anon.66 { i16 -3, i8 -99 }, %struct.anon.66 { i16 -4, i8 -92 }, %struct.anon.66 { i16 -5, i8 -101 }, %struct.anon.66 { i16 -6, i8 -32 }, %struct.anon.66 { i16 -7, i8 -53 }, %struct.anon.66 { i16 -8, i8 -46 }], align 16, !dbg !4222
@atkbd_platform_fixup = internal global void (%struct.atkbd*, i8*)* null, align 8, !dbg !4234
@atkbd_platform_fixup_data = internal global i8* null, align 8, !dbg !4239
@.str.19 = private unnamed_addr constant [13 x i8] c"linux,keymap\00", align 1
@.str.20 = private unnamed_addr constant [36 x i8] c"problem parsing FW keymap property\0A\00", align 1
@atkbd_set2_keycode = internal constant <{ [261 x i16], [251 x i16] }> <{ [261 x i16] [i16 0, i16 67, i16 65, i16 63, i16 61, i16 59, i16 60, i16 88, i16 0, i16 68, i16 66, i16 64, i16 62, i16 15, i16 41, i16 117, i16 0, i16 56, i16 42, i16 93, i16 29, i16 16, i16 2, i16 0, i16 0, i16 0, i16 44, i16 31, i16 30, i16 17, i16 3, i16 0, i16 0, i16 46, i16 45, i16 32, i16 18, i16 5, i16 4, i16 95, i16 0, i16 57, i16 47, i16 33, i16 20, i16 19, i16 6, i16 183, i16 0, i16 49, i16 48, i16 35, i16 34, i16 21, i16 7, i16 184, i16 0, i16 0, i16 50, i16 36, i16 22, i16 8, i16 9, i16 185, i16 0, i16 51, i16 37, i16 23, i16 24, i16 11, i16 10, i16 0, i16 0, i16 52, i16 53, i16 38, i16 39, i16 25, i16 12, i16 0, i16 0, i16 89, i16 40, i16 0, i16 26, i16 13, i16 0, i16 0, i16 58, i16 54, i16 28, i16 27, i16 0, i16 43, i16 0, i16 85, i16 0, i16 86, i16 91, i16 90, i16 92, i16 0, i16 14, i16 94, i16 0, i16 79, i16 124, i16 75, i16 71, i16 121, i16 0, i16 0, i16 82, i16 83, i16 80, i16 76, i16 77, i16 72, i16 1, i16 69, i16 87, i16 78, i16 81, i16 74, i16 55, i16 73, i16 70, i16 99, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 217, i16 100, i16 255, i16 0, i16 97, i16 165, i16 0, i16 0, i16 156, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 125, i16 173, i16 114, i16 0, i16 113, i16 0, i16 0, i16 0, i16 126, i16 128, i16 0, i16 0, i16 140, i16 0, i16 0, i16 0, i16 127, i16 159, i16 0, i16 115, i16 0, i16 164, i16 0, i16 0, i16 116, i16 158, i16 0, i16 172, i16 166, i16 0, i16 0, i16 0, i16 142, i16 157, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 155, i16 0, i16 98, i16 0, i16 0, i16 163, i16 0, i16 0, i16 226, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 255, i16 96, i16 0, i16 0, i16 0, i16 143, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 107, i16 0, i16 105, i16 102, i16 0, i16 0, i16 112, i16 110, i16 111, i16 108, i16 112, i16 106, i16 103, i16 0, i16 119, i16 0, i16 118, i16 109, i16 0, i16 99, i16 104, i16 119, i16 0, i16 0, i16 0, i16 0, i16 65, i16 99], [251 x i16] zeroinitializer }>, align 16, !dbg !4219
@atkbd_set3_keycode = internal constant <{ [164 x i16], [348 x i16] }> <{ [164 x i16] [i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 59, i16 1, i16 138, i16 128, i16 129, i16 130, i16 15, i16 41, i16 60, i16 131, i16 29, i16 42, i16 86, i16 58, i16 16, i16 2, i16 61, i16 133, i16 56, i16 44, i16 31, i16 30, i16 17, i16 3, i16 62, i16 134, i16 46, i16 45, i16 32, i16 18, i16 5, i16 4, i16 63, i16 135, i16 57, i16 47, i16 33, i16 20, i16 19, i16 6, i16 64, i16 136, i16 49, i16 48, i16 35, i16 34, i16 21, i16 7, i16 65, i16 137, i16 100, i16 50, i16 36, i16 22, i16 8, i16 9, i16 66, i16 125, i16 51, i16 37, i16 23, i16 24, i16 11, i16 10, i16 67, i16 126, i16 52, i16 53, i16 38, i16 39, i16 25, i16 12, i16 68, i16 113, i16 114, i16 40, i16 43, i16 26, i16 13, i16 87, i16 99, i16 97, i16 54, i16 28, i16 27, i16 43, i16 43, i16 88, i16 70, i16 108, i16 105, i16 119, i16 103, i16 111, i16 107, i16 14, i16 110, i16 0, i16 79, i16 106, i16 75, i16 71, i16 109, i16 102, i16 104, i16 82, i16 83, i16 80, i16 76, i16 77, i16 72, i16 69, i16 98, i16 0, i16 96, i16 81, i16 0, i16 78, i16 73, i16 55, i16 183, i16 184, i16 185, i16 186, i16 187, i16 74, i16 94, i16 92, i16 93, i16 0, i16 0, i16 0, i16 125, i16 126, i16 127, i16 112, i16 0, i16 0, i16 139, i16 172, i16 163, i16 165, i16 115, i16 152, i16 172, i16 166, i16 140, i16 160, i16 154, i16 113, i16 114, i16 167, i16 168, i16 148, i16 149, i16 147, i16 140], [348 x i16] zeroinitializer }>, align 16, !dbg !4232
@.str.23 = private unnamed_addr constant [24 x i8] c"AT Set 2 Extra keyboard\00", align 1
@.str.24 = private unnamed_addr constant [22 x i8] c"AT %s Set %d keyboard\00", align 1
@.str.25 = private unnamed_addr constant [11 x i8] c"Translated\00", align 1
@.str.26 = private unnamed_addr constant [4 x i8] c"Raw\00", align 1
@.str.27 = private unnamed_addr constant [10 x i8] c"%s/input0\00", align 1
@atkbd_attributes = internal global [9 x %struct.attribute*] [%struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @atkbd_attr_extra, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @atkbd_attr_force_release, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @atkbd_attr_scroll, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @atkbd_attr_set, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @atkbd_attr_softrepeat, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @atkbd_attr_softraw, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @atkbd_attr_err_count, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @atkbd_attr_function_row_physmap, i32 0, i32 0), %struct.attribute* null], align 16, !dbg !4257
@atkbd_attr_function_row_physmap = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.28, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @atkbd_do_show_function_row_physmap, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !4243
@.str.28 = private unnamed_addr constant [21 x i8] c"function_row_physmap\00", align 1
@.str.29 = private unnamed_addr constant [6 x i8] c"%02X \00", align 1
@.str.30 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@atkbd_attr_extra = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.31, i32 0, i32 0), i16 420 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @atkbd_do_show_extra, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* @atkbd_do_set_extra }, align 8, !dbg !4260
@atkbd_attr_force_release = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.33, i32 0, i32 0), i16 420 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @atkbd_do_show_force_release, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* @atkbd_do_set_force_release }, align 8, !dbg !4262
@atkbd_attr_scroll = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.35, i32 0, i32 0), i16 420 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @atkbd_do_show_scroll, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* @atkbd_do_set_scroll }, align 8, !dbg !4264
@atkbd_attr_set = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.36, i32 0, i32 0), i16 420 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @atkbd_do_show_set, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* @atkbd_do_set_set }, align 8, !dbg !4266
@atkbd_attr_softrepeat = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.37, i32 0, i32 0), i16 420 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @atkbd_do_show_softrepeat, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* @atkbd_do_set_softrepeat }, align 8, !dbg !4268
@atkbd_attr_softraw = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.38, i32 0, i32 0), i16 420 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @atkbd_do_show_softraw, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* @atkbd_do_set_softraw }, align 8, !dbg !4270
@atkbd_attr_err_count = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.39, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @atkbd_do_show_err_count, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !4272
@.str.31 = private unnamed_addr constant [6 x i8] c"extra\00", align 1
@.str.32 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@pv_ops = external dso_local global %struct.paravirt_patch_template, align 8
@.str.33 = private unnamed_addr constant [14 x i8] c"force_release\00", align 1
@.str.34 = private unnamed_addr constant [6 x i8] c"%*pbl\00", align 1
@.str.35 = private unnamed_addr constant [7 x i8] c"scroll\00", align 1
@.str.36 = private unnamed_addr constant [4 x i8] c"set\00", align 1
@.str.37 = private unnamed_addr constant [11 x i8] c"softrepeat\00", align 1
@.str.38 = private unnamed_addr constant [8 x i8] c"softraw\00", align 1
@.str.39 = private unnamed_addr constant [10 x i8] c"err_count\00", align 1
@.str.40 = private unnamed_addr constant [5 x i8] c"%lu\0A\00", align 1
@.str.41 = private unnamed_addr constant [33 x i8] c"Failed to enable keyboard on %s\0A\00", align 1
@atkbd_dell_laptop_forced_release_keys = internal global [10 x i32] [i32 133, i32 134, i32 135, i32 136, i32 137, i32 138, i32 139, i32 143, i32 147, i32 -1], align 16, !dbg !4297
@atkbd_hp_forced_release_keys = internal global [2 x i32] [i32 148, i32 -1], align 4, !dbg !4300
@atkbd_volume_forced_release_keys = internal global [3 x i32] [i32 174, i32 176, i32 -1], align 4, !dbg !4303
@atkbd_samsung_forced_release_keys = internal global [10 x i32] [i32 130, i32 131, i32 132, i32 134, i32 136, i32 137, i32 179, i32 247, i32 249, i32 -1], align 16, !dbg !4306
@atkbd_amilo_pi3525_forced_release_keys = internal global [7 x i32] [i32 32, i32 160, i32 46, i32 174, i32 48, i32 176, i32 -1], align 16, !dbg !4308
@atkbd_amilo_xi3650_forced_release_keys = internal global [9 x i32] [i32 103, i32 237, i32 144, i32 162, i32 153, i32 164, i32 174, i32 176, i32 -1], align 16, !dbg !4311
@atkdb_soltech_ta12_forced_release_keys = internal global [4 x i32] [i32 160, i32 174, i32 176, i32 -1], align 16, !dbg !4314
@atkbd_dmi_quirk_table = internal constant [18 x { i32 (%struct.dmi_system_id*)*, i8*, [4 x %struct.dmi_strmatch], i8* }] [{ i32 (%struct.dmi_system_id*)*, i8*, [4 x %struct.dmi_strmatch], i8* } { i32 (%struct.dmi_system_id*)* @atkbd_setup_forced_release, i8* null, [4 x %struct.dmi_strmatch] [%struct.dmi_strmatch { i8 6, [79 x i8] c"Dell Inc.\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.dmi_strmatch { i8 19, [79 x i8] c"8\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.dmi_strmatch zeroinitializer, %struct.dmi_strmatch zeroinitializer], i8* bitcast ([10 x i32]* @atkbd_dell_laptop_forced_release_keys to i8*) }, { i32 (%struct.dmi_system_id*)*, i8*, [4 x %struct.dmi_strmatch], i8* } { i32 (%struct.dmi_system_id*)* @atkbd_setup_forced_release, i8* null, [4 x %struct.dmi_strmatch] [%struct.dmi_strmatch { i8 6, [79 x i8] c"Dell Computer Corporation\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.dmi_strmatch { i8 19, [79 x i8] c"8\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.dmi_strmatch zeroinitializer, %struct.dmi_strmatch zeroinitializer], i8* bitcast ([10 x i32]* @atkbd_dell_laptop_forced_release_keys to i8*) }, { i32 (%struct.dmi_system_id*)*, i8*, [4 x %struct.dmi_strmatch], i8* } { i32 (%struct.dmi_system_id*)* @atkbd_setup_forced_release, i8* null, [4 x %struct.dmi_strmatch] [%struct.dmi_strmatch { i8 6, [79 x i8] c"Hewlett-Packard\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.dmi_strmatch { i8 7, [79 x i8] c"HP 2133\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.dmi_strmatch zeroinitializer, %struct.dmi_strmatch zeroinitializer], i8* bitcast ([2 x i32]* @atkbd_hp_forced_release_keys to i8*) }, { i32 (%struct.dmi_system_id*)*, i8*, [4 x %struct.dmi_strmatch], i8* } { i32 (%struct.dmi_system_id*)* @atkbd_setup_forced_release, i8* null, [4 x %struct.dmi_strmatch] [%struct.dmi_strmatch { i8 6, [79 x i8] c"Hewlett-Packard\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.dmi_strmatch { i8 7, [79 x i8] c"Pavilion ZV6100\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.dmi_strmatch zeroinitializer, %struct.dmi_strmatch zeroinitializer], i8* bitcast ([3 x i32]* @atkbd_volume_forced_release_keys to i8*) }, { i32 (%struct.dmi_system_id*)*, i8*, [4 x %struct.dmi_strmatch], i8* } { i32 (%struct.dmi_system_id*)* @atkbd_setup_forced_release, i8* null, [4 x %struct.dmi_strmatch] [%struct.dmi_strmatch { i8 6, [79 x i8] c"Hewlett-Packard\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.dmi_strmatch { i8 7, [79 x i8] c"Presario R4000\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.dmi_strmatch zeroinitializer, %struct.dmi_strmatch zeroinitializer], i8* bitcast ([3 x i32]* @atkbd_volume_forced_release_keys to i8*) }, { i32 (%struct.dmi_system_id*)*, i8*, [4 x %struct.dmi_strmatch], i8* } { i32 (%struct.dmi_system_id*)* @atkbd_setup_forced_release, i8* null, [4 x %struct.dmi_strmatch] [%struct.dmi_strmatch { i8 6, [79 x i8] c"Hewlett-Packard\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.dmi_strmatch { i8 7, [79 x i8] c"Presario R4100\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.dmi_strmatch zeroinitializer, %struct.dmi_strmatch zeroinitializer], i8* bitcast ([3 x i32]* @atkbd_volume_forced_release_keys to i8*) }, { i32 (%struct.dmi_system_id*)*, i8*, [4 x %struct.dmi_strmatch], i8* } { i32 (%struct.dmi_system_id*)* @atkbd_setup_forced_release, i8* null, [4 x %struct.dmi_strmatch] [%struct.dmi_strmatch { i8 6, [79 x i8] c"Hewlett-Packard\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.dmi_strmatch { i8 7, [79 x i8] c"Presario R4200\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.dmi_strmatch zeroinitializer, %struct.dmi_strmatch zeroinitializer], i8* bitcast ([3 x i32]* @atkbd_volume_forced_release_keys to i8*) }, { i32 (%struct.dmi_system_id*)*, i8*, [4 x %struct.dmi_strmatch], i8* } { i32 (%struct.dmi_system_id*)* @atkbd_setup_forced_release, i8* null, [4 x %struct.dmi_strmatch] [%struct.dmi_strmatch { i8 6, [79 x i8] c"INVENTEC\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.dmi_strmatch { i8 7, [79 x i8] c"SYMPHONY 6.0/7.0\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.dmi_strmatch zeroinitializer, %struct.dmi_strmatch zeroinitializer], i8* bitcast ([3 x i32]* @atkbd_volume_forced_release_keys to i8*) }, { i32 (%struct.dmi_system_id*)*, i8*, [4 x %struct.dmi_strmatch], i8* } { i32 (%struct.dmi_system_id*)* @atkbd_setup_forced_release, i8* null, [4 x %struct.dmi_strmatch] [%struct.dmi_strmatch { i8 6, [79 x i8] c"SAMSUNG ELECTRONICS CO., LTD.\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.dmi_strmatch { i8 7, [79 x i8] c"NC10\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.dmi_strmatch zeroinitializer, %struct.dmi_strmatch zeroinitializer], i8* bitcast ([10 x i32]* @atkbd_samsung_forced_release_keys to i8*) }, { i32 (%struct.dmi_system_id*)*, i8*, [4 x %struct.dmi_strmatch], i8* } { i32 (%struct.dmi_system_id*)* @atkbd_setup_forced_release, i8* null, [4 x %struct.dmi_strmatch] [%struct.dmi_strmatch { i8 6, [79 x i8] c"SAMSUNG ELECTRONICS CO., LTD.\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.dmi_strmatch { i8 7, [79 x i8] c"NC20\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.dmi_strmatch zeroinitializer, %struct.dmi_strmatch zeroinitializer], i8* bitcast ([10 x i32]* @atkbd_samsung_forced_release_keys to i8*) }, { i32 (%struct.dmi_system_id*)*, i8*, [4 x %struct.dmi_strmatch], i8* } { i32 (%struct.dmi_system_id*)* @atkbd_setup_forced_release, i8* null, [4 x %struct.dmi_strmatch] [%struct.dmi_strmatch { i8 6, [79 x i8] c"SAMSUNG ELECTRONICS CO., LTD.\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.dmi_strmatch { i8 7, [79 x i8] c"SQ45S70S\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.dmi_strmatch zeroinitializer, %struct.dmi_strmatch zeroinitializer], i8* bitcast ([10 x i32]* @atkbd_samsung_forced_release_keys to i8*) }, { i32 (%struct.dmi_system_id*)*, i8*, [4 x %struct.dmi_strmatch], i8* } { i32 (%struct.dmi_system_id*)* @atkbd_setup_forced_release, i8* null, [4 x %struct.dmi_strmatch] [%struct.dmi_strmatch { i8 6, [79 x i8] c"FUJITSU SIEMENS\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.dmi_strmatch { i8 7, [79 x i8] c"AMILO Pa 1510\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.dmi_strmatch zeroinitializer, %struct.dmi_strmatch zeroinitializer], i8* bitcast ([3 x i32]* @atkbd_volume_forced_release_keys to i8*) }, { i32 (%struct.dmi_system_id*)*, i8*, [4 x %struct.dmi_strmatch], i8* } { i32 (%struct.dmi_system_id*)* @atkbd_setup_forced_release, i8* null, [4 x %struct.dmi_strmatch] [%struct.dmi_strmatch { i8 6, [79 x i8] c"FUJITSU SIEMENS\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.dmi_strmatch { i8 7, [79 x i8] c"AMILO Pi 3525\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.dmi_strmatch zeroinitializer, %struct.dmi_strmatch zeroinitializer], i8* bitcast ([7 x i32]* @atkbd_amilo_pi3525_forced_release_keys to i8*) }, { i32 (%struct.dmi_system_id*)*, i8*, [4 x %struct.dmi_strmatch], i8* } { i32 (%struct.dmi_system_id*)* @atkbd_setup_forced_release, i8* null, [4 x %struct.dmi_strmatch] [%struct.dmi_strmatch { i8 6, [79 x i8] c"FUJITSU SIEMENS\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.dmi_strmatch { i8 7, [79 x i8] c"AMILO Xi 3650\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.dmi_strmatch zeroinitializer, %struct.dmi_strmatch zeroinitializer], i8* bitcast ([9 x i32]* @atkbd_amilo_xi3650_forced_release_keys to i8*) }, { i32 (%struct.dmi_system_id*)*, i8*, [4 x %struct.dmi_strmatch], i8* } { i32 (%struct.dmi_system_id*)* @atkbd_setup_forced_release, i8* null, [4 x %struct.dmi_strmatch] [%struct.dmi_strmatch { i8 6, [79 x i8] c"Soltech Corporation\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.dmi_strmatch { i8 7, [79 x i8] c"TA12\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.dmi_strmatch zeroinitializer, %struct.dmi_strmatch zeroinitializer], i8* bitcast ([4 x i32]* @atkdb_soltech_ta12_forced_release_keys to i8*) }, { i32 (%struct.dmi_system_id*)*, i8*, [4 x %struct.dmi_strmatch], i8* } { i32 (%struct.dmi_system_id*)* @atkbd_setup_scancode_fixup, i8* null, [4 x %struct.dmi_strmatch] [%struct.dmi_strmatch { i8 6, [79 x i8] c"OQO\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.dmi_strmatch { i8 7, [79 x i8] c"ZEPTO\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.dmi_strmatch zeroinitializer, %struct.dmi_strmatch zeroinitializer], i8* bitcast (i32 (%struct.atkbd*, i32)* @atkbd_oqo_01plus_scancode_fixup to i8*) }, { i32 (%struct.dmi_system_id*)*, i8*, [4 x %struct.dmi_strmatch], i8* } { i32 (%struct.dmi_system_id*)* @atkbd_deactivate_fixup, i8* null, [4 x %struct.dmi_strmatch] [%struct.dmi_strmatch { i8 6, [79 x i8] c"LG Electronics\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.dmi_strmatch zeroinitializer, %struct.dmi_strmatch zeroinitializer, %struct.dmi_strmatch zeroinitializer], i8* null }, { i32 (%struct.dmi_system_id*)*, i8*, [4 x %struct.dmi_strmatch], i8* } zeroinitializer], section ".init.rodata", align 16, !dbg !4274
@llvm.used = appending global [28 x i8*] [i8* getelementptr inbounds ([46 x i8], [46 x i8]* @__UNIQUE_ID_author204, i32 0, i32 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @__UNIQUE_ID_description205, i32 0, i32 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @__UNIQUE_ID_file206, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__UNIQUE_ID_license207, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_set to i8*), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__UNIQUE_ID_settype208, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @__UNIQUE_ID_set209, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_reset to i8*), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @__UNIQUE_ID_resettype210, i32 0, i32 0), i8* getelementptr inbounds ([54 x i8], [54 x i8]* @__UNIQUE_ID_reset211, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_softrepeat to i8*), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @__UNIQUE_ID_softrepeattype212, i32 0, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @__UNIQUE_ID_softrepeat213, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_softraw to i8*), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__UNIQUE_ID_softrawtype214, i32 0, i32 0), i8* getelementptr inbounds ([50 x i8], [50 x i8]* @__UNIQUE_ID_softraw215, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_scroll to i8*), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @__UNIQUE_ID_scrolltype216, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @__UNIQUE_ID_scroll217, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_extra to i8*), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @__UNIQUE_ID_extratype218, i32 0, i32 0), i8* getelementptr inbounds ([91 x i8], [91 x i8]* @__UNIQUE_ID_extra219, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_terminal to i8*), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__UNIQUE_ID_terminaltype220, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @__UNIQUE_ID_terminal221, i32 0, i32 0), i8* bitcast (void ()* @atkbd_exit to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_atkbd_init227 to i8*), i8* bitcast (void ()** @__exitcall_atkbd_exit to i8*)], section "llvm.metadata"

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal void @atkbd_exit() #0 section ".exit.text" !dbg !4323 {
entry:
  call void @serio_unregister_driver(%struct.serio_driver* @atkbd_drv) #11, !dbg !4324
  ret void, !dbg !4325
}

; Function Attrs: noredzone
declare dso_local void @serio_unregister_driver(%struct.serio_driver*) #1

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal i32 @atkbd_init() #0 section ".init.text" !dbg !4326 {
entry:
  %call = call i32 @dmi_check_system(%struct.dmi_system_id* getelementptr inbounds ([18 x %struct.dmi_system_id], [18 x %struct.dmi_system_id]* bitcast ([18 x { i32 (%struct.dmi_system_id*)*, i8*, [4 x %struct.dmi_strmatch], i8* }]* @atkbd_dmi_quirk_table to [18 x %struct.dmi_system_id]*), i64 0, i64 0)) #11, !dbg !4329
  %call1 = call i32 @__serio_register_driver(%struct.serio_driver* @atkbd_drv, %struct.module* null, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1, i64 0, i64 0)) #11, !dbg !4330
  ret i32 %call1, !dbg !4331
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @atkbd_interrupt(%struct.serio* %serio, i8 zeroext %data, i32 %flags) #2 !dbg !4332 {
entry:
  %retval.i = alloca i64, align 8
  %m.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m.addr.i, metadata !4333, metadata !DIExpression()), !dbg !4338
  %serio.addr = alloca %struct.serio*, align 8
  %data.addr = alloca i8, align 1
  %flags.addr = alloca i32, align 4
  %atkbd = alloca %struct.atkbd*, align 8
  %dev = alloca %struct.input_dev*, align 8
  %code = alloca i32, align 4
  %scroll = alloca i32, align 4
  %hscroll = alloca i32, align 4
  %click = alloca i32, align 4
  %value = alloca i32, align 4
  %keycode = alloca i16, align 2
  store %struct.serio* %serio, %struct.serio** %serio.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.serio** %serio.addr, metadata !4344, metadata !DIExpression()), !dbg !4345
  store i8 %data, i8* %data.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %data.addr, metadata !4346, metadata !DIExpression()), !dbg !4347
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !4348, metadata !DIExpression()), !dbg !4349
  call void @llvm.dbg.declare(metadata %struct.atkbd** %atkbd, metadata !4350, metadata !DIExpression()), !dbg !4351
  %0 = load %struct.serio*, %struct.serio** %serio.addr, align 8, !dbg !4352
  %call = call i8* @serio_get_drvdata(%struct.serio* %0) #11, !dbg !4353
  %1 = bitcast i8* %call to %struct.atkbd*, !dbg !4353
  store %struct.atkbd* %1, %struct.atkbd** %atkbd, align 8, !dbg !4351
  call void @llvm.dbg.declare(metadata %struct.input_dev** %dev, metadata !4354, metadata !DIExpression()), !dbg !4355
  %2 = load %struct.atkbd*, %struct.atkbd** %atkbd, align 8, !dbg !4356
  %dev1 = getelementptr inbounds %struct.atkbd, %struct.atkbd* %2, i32 0, i32 1, !dbg !4357
  %3 = load %struct.input_dev*, %struct.input_dev** %dev1, align 8, !dbg !4357
  store %struct.input_dev* %3, %struct.input_dev** %dev, align 8, !dbg !4355
  call void @llvm.dbg.declare(metadata i32* %code, metadata !4358, metadata !DIExpression()), !dbg !4359
  %4 = load i8, i8* %data.addr, align 1, !dbg !4360
  %conv = zext i8 %4 to i32, !dbg !4360
  store i32 %conv, i32* %code, align 4, !dbg !4359
  call void @llvm.dbg.declare(metadata i32* %scroll, metadata !4361, metadata !DIExpression()), !dbg !4362
  store i32 0, i32* %scroll, align 4, !dbg !4362
  call void @llvm.dbg.declare(metadata i32* %hscroll, metadata !4363, metadata !DIExpression()), !dbg !4364
  store i32 0, i32* %hscroll, align 4, !dbg !4364
  call void @llvm.dbg.declare(metadata i32* %click, metadata !4365, metadata !DIExpression()), !dbg !4366
  store i32 -1, i32* %click, align 4, !dbg !4366
  call void @llvm.dbg.declare(metadata i32* %value, metadata !4367, metadata !DIExpression()), !dbg !4368
  call void @llvm.dbg.declare(metadata i16* %keycode, metadata !4369, metadata !DIExpression()), !dbg !4370
  %5 = load %struct.atkbd*, %struct.atkbd** %atkbd, align 8, !dbg !4371
  %ps2dev = getelementptr inbounds %struct.atkbd, %struct.atkbd* %5, i32 0, i32 0, !dbg !4371
  %flags2 = getelementptr inbounds %struct.ps2dev, %struct.ps2dev* %ps2dev, i32 0, i32 3, !dbg !4371
  %6 = load i64, i64* %flags2, align 8, !dbg !4371
  %and = and i64 %6, 1, !dbg !4371
  %tobool = icmp ne i64 %and, 0, !dbg !4371
  %lnot = xor i1 %tobool, true, !dbg !4371
  %lnot3 = xor i1 %lnot, true, !dbg !4371
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !4371
  %conv4 = sext i32 %lnot.ext to i64, !dbg !4371
  %tobool5 = icmp ne i64 %conv4, 0, !dbg !4371
  br i1 %tobool5, label %if.then, label %if.end9, !dbg !4373

if.then:                                          ; preds = %entry
  %7 = load %struct.atkbd*, %struct.atkbd** %atkbd, align 8, !dbg !4374
  %ps2dev6 = getelementptr inbounds %struct.atkbd, %struct.atkbd* %7, i32 0, i32 0, !dbg !4376
  %8 = load i8, i8* %data.addr, align 1, !dbg !4377
  %call7 = call zeroext i1 @ps2_handle_ack(%struct.ps2dev* %ps2dev6, i8 zeroext %8) #11, !dbg !4378
  br i1 %call7, label %if.then8, label %if.end, !dbg !4379

if.then8:                                         ; preds = %if.then
  br label %out, !dbg !4380

if.end:                                           ; preds = %if.then
  br label %if.end9, !dbg !4381

if.end9:                                          ; preds = %if.end, %entry
  %9 = load %struct.atkbd*, %struct.atkbd** %atkbd, align 8, !dbg !4382
  %ps2dev10 = getelementptr inbounds %struct.atkbd, %struct.atkbd* %9, i32 0, i32 0, !dbg !4382
  %flags11 = getelementptr inbounds %struct.ps2dev, %struct.ps2dev* %ps2dev10, i32 0, i32 3, !dbg !4382
  %10 = load i64, i64* %flags11, align 8, !dbg !4382
  %and12 = and i64 %10, 2, !dbg !4382
  %tobool13 = icmp ne i64 %and12, 0, !dbg !4382
  %lnot14 = xor i1 %tobool13, true, !dbg !4382
  %lnot16 = xor i1 %lnot14, true, !dbg !4382
  %lnot.ext17 = zext i1 %lnot16 to i32, !dbg !4382
  %conv18 = sext i32 %lnot.ext17 to i64, !dbg !4382
  %tobool19 = icmp ne i64 %conv18, 0, !dbg !4382
  br i1 %tobool19, label %if.then20, label %if.end25, !dbg !4384

if.then20:                                        ; preds = %if.end9
  %11 = load %struct.atkbd*, %struct.atkbd** %atkbd, align 8, !dbg !4385
  %ps2dev21 = getelementptr inbounds %struct.atkbd, %struct.atkbd* %11, i32 0, i32 0, !dbg !4387
  %12 = load i8, i8* %data.addr, align 1, !dbg !4388
  %call22 = call zeroext i1 @ps2_handle_response(%struct.ps2dev* %ps2dev21, i8 zeroext %12) #11, !dbg !4389
  br i1 %call22, label %if.then23, label %if.end24, !dbg !4390

if.then23:                                        ; preds = %if.then20
  br label %out, !dbg !4391

if.end24:                                         ; preds = %if.then20
  br label %if.end25, !dbg !4392

if.end25:                                         ; preds = %if.end24, %if.end9
  %13 = load %struct.serio*, %struct.serio** %serio.addr, align 8, !dbg !4393
  %dev26 = getelementptr inbounds %struct.serio, %struct.serio* %13, i32 0, i32 18, !dbg !4394
  call void @pm_wakeup_event(%struct.device* %dev26, i32 0) #11, !dbg !4395
  %14 = load %struct.atkbd*, %struct.atkbd** %atkbd, align 8, !dbg !4396
  %enabled = getelementptr inbounds %struct.atkbd, %struct.atkbd* %14, i32 0, i32 14, !dbg !4398
  %15 = load i8, i8* %enabled, align 1, !dbg !4398
  %tobool27 = trunc i8 %15 to i1, !dbg !4398
  br i1 %tobool27, label %if.end29, label %if.then28, !dbg !4399

if.then28:                                        ; preds = %if.end25
  br label %out, !dbg !4400

if.end29:                                         ; preds = %if.end25
  %16 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !4401
  %17 = load i32, i32* %code, align 4, !dbg !4402
  call void @input_event(%struct.input_dev* %16, i32 4, i32 3, i32 %17) #11, !dbg !4403
  %18 = load i32 (%struct.atkbd*, i32)*, i32 (%struct.atkbd*, i32)** @atkbd_platform_scancode_fixup, align 8, !dbg !4404
  %tobool30 = icmp ne i32 (%struct.atkbd*, i32)* %18, null, !dbg !4404
  br i1 %tobool30, label %if.then31, label %if.end33, !dbg !4406

if.then31:                                        ; preds = %if.end29
  %19 = load i32 (%struct.atkbd*, i32)*, i32 (%struct.atkbd*, i32)** @atkbd_platform_scancode_fixup, align 8, !dbg !4407
  %20 = load %struct.atkbd*, %struct.atkbd** %atkbd, align 8, !dbg !4408
  %21 = load i32, i32* %code, align 4, !dbg !4409
  %call32 = call i32 %19(%struct.atkbd* %20, i32 %21) #11, !dbg !4407
  store i32 %call32, i32* %code, align 4, !dbg !4410
  br label %if.end33, !dbg !4411

if.end33:                                         ; preds = %if.then31, %if.end29
  %22 = load %struct.atkbd*, %struct.atkbd** %atkbd, align 8, !dbg !4412
  %translated = getelementptr inbounds %struct.atkbd, %struct.atkbd* %22, i32 0, i32 8, !dbg !4414
  %23 = load i8, i8* %translated, align 1, !dbg !4414
  %tobool34 = trunc i8 %23 to i1, !dbg !4414
  br i1 %tobool34, label %if.then35, label %if.end49, !dbg !4415

if.then35:                                        ; preds = %if.end33
  %24 = load %struct.atkbd*, %struct.atkbd** %atkbd, align 8, !dbg !4416
  %emul = getelementptr inbounds %struct.atkbd, %struct.atkbd* %24, i32 0, i32 15, !dbg !4419
  %25 = load i8, i8* %emul, align 8, !dbg !4419
  %conv36 = zext i8 %25 to i32, !dbg !4416
  %tobool37 = icmp ne i32 %conv36, 0, !dbg !4416
  br i1 %tobool37, label %if.then41, label %lor.lhs.false, !dbg !4420

lor.lhs.false:                                    ; preds = %if.then35
  %26 = load %struct.atkbd*, %struct.atkbd** %atkbd, align 8, !dbg !4421
  %xl_bit = getelementptr inbounds %struct.atkbd, %struct.atkbd* %26, i32 0, i32 18, !dbg !4422
  %27 = load i64, i64* %xl_bit, align 8, !dbg !4422
  %28 = load i32, i32* %code, align 4, !dbg !4423
  %conv38 = trunc i32 %28 to i8, !dbg !4423
  %call39 = call zeroext i1 @atkbd_need_xlate(i64 %27, i8 zeroext %conv38) #11, !dbg !4424
  br i1 %call39, label %if.then41, label %if.end44, !dbg !4425

if.then41:                                        ; preds = %lor.lhs.false, %if.then35
  %29 = load i32, i32* %code, align 4, !dbg !4426
  %shr = lshr i32 %29, 7, !dbg !4428
  %tobool42 = icmp ne i32 %shr, 0, !dbg !4426
  %30 = load %struct.atkbd*, %struct.atkbd** %atkbd, align 8, !dbg !4429
  %release = getelementptr inbounds %struct.atkbd, %struct.atkbd* %30, i32 0, i32 17, !dbg !4430
  %frombool = zext i1 %tobool42 to i8, !dbg !4431
  store i8 %frombool, i8* %release, align 2, !dbg !4431
  %31 = load i32, i32* %code, align 4, !dbg !4432
  %and43 = and i32 %31, 127, !dbg !4432
  store i32 %and43, i32* %code, align 4, !dbg !4432
  br label %if.end44, !dbg !4433

if.end44:                                         ; preds = %if.then41, %lor.lhs.false
  %32 = load %struct.atkbd*, %struct.atkbd** %atkbd, align 8, !dbg !4434
  %emul45 = getelementptr inbounds %struct.atkbd, %struct.atkbd* %32, i32 0, i32 15, !dbg !4436
  %33 = load i8, i8* %emul45, align 8, !dbg !4436
  %tobool46 = icmp ne i8 %33, 0, !dbg !4434
  br i1 %tobool46, label %if.end48, label %if.then47, !dbg !4437

if.then47:                                        ; preds = %if.end44
  %34 = load %struct.atkbd*, %struct.atkbd** %atkbd, align 8, !dbg !4438
  %35 = load i8, i8* %data.addr, align 1, !dbg !4439
  call void @atkbd_calculate_xl_bit(%struct.atkbd* %34, i8 zeroext %35) #11, !dbg !4440
  br label %if.end48, !dbg !4440

if.end48:                                         ; preds = %if.then47, %if.end44
  br label %if.end49, !dbg !4441

if.end49:                                         ; preds = %if.end48, %if.end33
  %36 = load i32, i32* %code, align 4, !dbg !4442
  switch i32 %36, label %sw.epilog [
    i32 170, label %sw.bb
    i32 224, label %sw.bb53
    i32 225, label %sw.bb55
    i32 240, label %sw.bb57
    i32 250, label %sw.bb59
    i32 254, label %sw.bb59
    i32 255, label %sw.bb67
  ], !dbg !4443

sw.bb:                                            ; preds = %if.end49
  %37 = load %struct.atkbd*, %struct.atkbd** %atkbd, align 8, !dbg !4444
  %enabled50 = getelementptr inbounds %struct.atkbd, %struct.atkbd* %37, i32 0, i32 14, !dbg !4446
  store i8 0, i8* %enabled50, align 1, !dbg !4447
  %38 = load %struct.atkbd*, %struct.atkbd** %atkbd, align 8, !dbg !4448
  %ps2dev51 = getelementptr inbounds %struct.atkbd, %struct.atkbd* %38, i32 0, i32 0, !dbg !4449
  %serio52 = getelementptr inbounds %struct.ps2dev, %struct.ps2dev* %ps2dev51, i32 0, i32 0, !dbg !4450
  %39 = load %struct.serio*, %struct.serio** %serio52, align 8, !dbg !4450
  call void @serio_reconnect(%struct.serio* %39) #11, !dbg !4451
  br label %out, !dbg !4452

sw.bb53:                                          ; preds = %if.end49
  %40 = load %struct.atkbd*, %struct.atkbd** %atkbd, align 8, !dbg !4453
  %emul54 = getelementptr inbounds %struct.atkbd, %struct.atkbd* %40, i32 0, i32 15, !dbg !4454
  store i8 1, i8* %emul54, align 8, !dbg !4455
  br label %out, !dbg !4456

sw.bb55:                                          ; preds = %if.end49
  %41 = load %struct.atkbd*, %struct.atkbd** %atkbd, align 8, !dbg !4457
  %emul56 = getelementptr inbounds %struct.atkbd, %struct.atkbd* %41, i32 0, i32 15, !dbg !4458
  store i8 2, i8* %emul56, align 8, !dbg !4459
  br label %out, !dbg !4460

sw.bb57:                                          ; preds = %if.end49
  %42 = load %struct.atkbd*, %struct.atkbd** %atkbd, align 8, !dbg !4461
  %release58 = getelementptr inbounds %struct.atkbd, %struct.atkbd* %42, i32 0, i32 17, !dbg !4462
  store i8 1, i8* %release58, align 2, !dbg !4463
  br label %out, !dbg !4464

sw.bb59:                                          ; preds = %if.end49, %if.end49
  %call60 = call i32 @__printk_ratelimit(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.atkbd_interrupt, i64 0, i64 0)) #11, !dbg !4465
  %tobool61 = icmp ne i32 %call60, 0, !dbg !4465
  br i1 %tobool61, label %if.then62, label %if.end66, !dbg !4467

if.then62:                                        ; preds = %sw.bb59
  %43 = load %struct.serio*, %struct.serio** %serio.addr, align 8, !dbg !4468
  %dev63 = getelementptr inbounds %struct.serio, %struct.serio* %43, i32 0, i32 18, !dbg !4468
  %44 = load i8, i8* %data.addr, align 1, !dbg !4468
  %conv64 = zext i8 %44 to i32, !dbg !4468
  %cmp = icmp eq i32 %conv64, 250, !dbg !4468
  %45 = zext i1 %cmp to i64, !dbg !4468
  %cond = select i1 %cmp, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.4, i64 0, i64 0), !dbg !4468
  %46 = load %struct.serio*, %struct.serio** %serio.addr, align 8, !dbg !4468
  %phys = getelementptr inbounds %struct.serio, %struct.serio* %46, i32 0, i32 2, !dbg !4468
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %phys, i64 0, i64 0, !dbg !4468
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev63, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.2, i64 0, i64 0), i8* %cond, i8* %arraydecay) #12, !dbg !4468
  br label %if.end66, !dbg !4468

if.end66:                                         ; preds = %if.then62, %sw.bb59
  br label %out, !dbg !4469

sw.bb67:                                          ; preds = %if.end49
  %47 = load %struct.atkbd*, %struct.atkbd** %atkbd, align 8, !dbg !4470
  %err_count = getelementptr inbounds %struct.atkbd, %struct.atkbd* %47, i32 0, i32 21, !dbg !4471
  %48 = load i64, i64* %err_count, align 8, !dbg !4472
  %inc = add i64 %48, 1, !dbg !4472
  store i64 %inc, i64* %err_count, align 8, !dbg !4472
  br label %out, !dbg !4473

sw.epilog:                                        ; preds = %if.end49
  %49 = load %struct.atkbd*, %struct.atkbd** %atkbd, align 8, !dbg !4474
  %50 = load i32, i32* %code, align 4, !dbg !4475
  %call68 = call i32 @atkbd_compat_scancode(%struct.atkbd* %49, i32 %50) #11, !dbg !4476
  store i32 %call68, i32* %code, align 4, !dbg !4477
  %51 = load %struct.atkbd*, %struct.atkbd** %atkbd, align 8, !dbg !4478
  %emul69 = getelementptr inbounds %struct.atkbd, %struct.atkbd* %51, i32 0, i32 15, !dbg !4480
  %52 = load i8, i8* %emul69, align 8, !dbg !4480
  %conv70 = zext i8 %52 to i32, !dbg !4478
  %tobool71 = icmp ne i32 %conv70, 0, !dbg !4478
  br i1 %tobool71, label %land.lhs.true, label %if.end76, !dbg !4481

land.lhs.true:                                    ; preds = %sw.epilog
  %53 = load %struct.atkbd*, %struct.atkbd** %atkbd, align 8, !dbg !4482
  %emul72 = getelementptr inbounds %struct.atkbd, %struct.atkbd* %53, i32 0, i32 15, !dbg !4483
  %54 = load i8, i8* %emul72, align 8, !dbg !4484
  %dec = add i8 %54, -1, !dbg !4484
  store i8 %dec, i8* %emul72, align 8, !dbg !4484
  %conv73 = zext i8 %dec to i32, !dbg !4484
  %tobool74 = icmp ne i32 %conv73, 0, !dbg !4484
  br i1 %tobool74, label %if.then75, label %if.end76, !dbg !4485

if.then75:                                        ; preds = %land.lhs.true
  br label %out, !dbg !4486

if.end76:                                         ; preds = %land.lhs.true, %sw.epilog
  %55 = load %struct.atkbd*, %struct.atkbd** %atkbd, align 8, !dbg !4487
  %keycode77 = getelementptr inbounds %struct.atkbd, %struct.atkbd* %55, i32 0, i32 5, !dbg !4488
  %56 = load i32, i32* %code, align 4, !dbg !4489
  %idxprom = zext i32 %56 to i64, !dbg !4487
  %arrayidx = getelementptr [512 x i16], [512 x i16]* %keycode77, i64 0, i64 %idxprom, !dbg !4487
  %57 = load i16, i16* %arrayidx, align 2, !dbg !4487
  store i16 %57, i16* %keycode, align 2, !dbg !4490
  %58 = load %struct.atkbd*, %struct.atkbd** %atkbd, align 8, !dbg !4491
  %release78 = getelementptr inbounds %struct.atkbd, %struct.atkbd* %58, i32 0, i32 17, !dbg !4493
  %59 = load i8, i8* %release78, align 2, !dbg !4493
  %tobool79 = trunc i8 %59 to i1, !dbg !4493
  br i1 %tobool79, label %land.lhs.true81, label %if.then86, !dbg !4494

land.lhs.true81:                                  ; preds = %if.end76
  %60 = load i32, i32* %code, align 4, !dbg !4495
  %conv82 = zext i32 %60 to i64, !dbg !4495
  %61 = load %struct.atkbd*, %struct.atkbd** %atkbd, align 8, !dbg !4496
  %force_release_mask = getelementptr inbounds %struct.atkbd, %struct.atkbd* %61, i32 0, i32 6, !dbg !4497
  %arraydecay83 = getelementptr inbounds [8 x i64], [8 x i64]* %force_release_mask, i64 0, i64 0, !dbg !4496
  %call84 = call zeroext i1 @test_bit(i64 %conv82, i64* %arraydecay83) #11, !dbg !4498
  br i1 %call84, label %if.end92, label %if.then86, !dbg !4499

if.then86:                                        ; preds = %land.lhs.true81, %if.end76
  %62 = load i16, i16* %keycode, align 2, !dbg !4500
  %conv87 = zext i16 %62 to i32, !dbg !4500
  %cmp88 = icmp ne i32 %conv87, 255, !dbg !4502
  br i1 %cmp88, label %if.then90, label %if.end91, !dbg !4503

if.then90:                                        ; preds = %if.then86
  %63 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !4504
  %64 = load i32, i32* %code, align 4, !dbg !4505
  call void @input_event(%struct.input_dev* %63, i32 4, i32 4, i32 %64) #11, !dbg !4506
  br label %if.end91, !dbg !4506

if.end91:                                         ; preds = %if.then90, %if.then86
  br label %if.end92, !dbg !4507

if.end92:                                         ; preds = %if.end91, %land.lhs.true81
  %65 = load i16, i16* %keycode, align 2, !dbg !4508
  %conv93 = zext i16 %65 to i32, !dbg !4508
  switch i32 %conv93, label %sw.default [
    i32 255, label %sw.bb94
    i32 0, label %sw.bb95
    i32 65534, label %sw.bb113
    i32 65533, label %sw.bb114
    i32 65532, label %sw.bb115
    i32 65531, label %sw.bb116
    i32 65530, label %sw.bb117
    i32 65529, label %sw.bb122
    i32 65528, label %sw.bb123
  ], !dbg !4509

sw.bb94:                                          ; preds = %if.end92
  br label %sw.epilog158, !dbg !4510

sw.bb95:                                          ; preds = %if.end92
  %66 = load %struct.serio*, %struct.serio** %serio.addr, align 8, !dbg !4511
  %dev96 = getelementptr inbounds %struct.serio, %struct.serio* %66, i32 0, i32 18, !dbg !4511
  %67 = load %struct.atkbd*, %struct.atkbd** %atkbd, align 8, !dbg !4511
  %release97 = getelementptr inbounds %struct.atkbd, %struct.atkbd* %67, i32 0, i32 17, !dbg !4511
  %68 = load i8, i8* %release97, align 2, !dbg !4511
  %tobool98 = trunc i8 %68 to i1, !dbg !4511
  %69 = zext i1 %tobool98 to i64, !dbg !4511
  %cond100 = select i1 %tobool98, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.7, i64 0, i64 0), !dbg !4511
  %70 = load %struct.atkbd*, %struct.atkbd** %atkbd, align 8, !dbg !4511
  %translated101 = getelementptr inbounds %struct.atkbd, %struct.atkbd* %70, i32 0, i32 8, !dbg !4511
  %71 = load i8, i8* %translated101, align 1, !dbg !4511
  %tobool102 = trunc i8 %71 to i1, !dbg !4511
  %72 = zext i1 %tobool102 to i64, !dbg !4511
  %cond104 = select i1 %tobool102, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i64 0, i64 0), !dbg !4511
  %73 = load %struct.atkbd*, %struct.atkbd** %atkbd, align 8, !dbg !4511
  %set = getelementptr inbounds %struct.atkbd, %struct.atkbd* %73, i32 0, i32 7, !dbg !4511
  %74 = load i8, i8* %set, align 8, !dbg !4511
  %conv105 = zext i8 %74 to i32, !dbg !4511
  %75 = load i32, i32* %code, align 4, !dbg !4511
  %76 = load %struct.serio*, %struct.serio** %serio.addr, align 8, !dbg !4511
  %phys106 = getelementptr inbounds %struct.serio, %struct.serio* %76, i32 0, i32 2, !dbg !4511
  %arraydecay107 = getelementptr inbounds [32 x i8], [32 x i8]* %phys106, i64 0, i64 0, !dbg !4511
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev96, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.5, i64 0, i64 0), i8* %cond100, i8* %cond104, i32 %conv105, i32 %75, i8* %arraydecay107) #12, !dbg !4511
  %77 = load %struct.serio*, %struct.serio** %serio.addr, align 8, !dbg !4512
  %dev108 = getelementptr inbounds %struct.serio, %struct.serio* %77, i32 0, i32 18, !dbg !4512
  %78 = load i32, i32* %code, align 4, !dbg !4512
  %and109 = and i32 %78, 128, !dbg !4512
  %tobool110 = icmp ne i32 %and109, 0, !dbg !4512
  %79 = zext i1 %tobool110 to i64, !dbg !4512
  %cond111 = select i1 %tobool110, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.12, i64 0, i64 0), !dbg !4512
  %80 = load i32, i32* %code, align 4, !dbg !4512
  %and112 = and i32 %80, 127, !dbg !4512
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev108, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.10, i64 0, i64 0), i8* %cond111, i32 %and112) #12, !dbg !4512
  %81 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !4513
  call void @input_sync(%struct.input_dev* %81) #11, !dbg !4514
  br label %sw.epilog158, !dbg !4515

sw.bb113:                                         ; preds = %if.end92
  store i32 1, i32* %scroll, align 4, !dbg !4516
  br label %sw.epilog158, !dbg !4517

sw.bb114:                                         ; preds = %if.end92
  store i32 2, i32* %scroll, align 4, !dbg !4518
  br label %sw.epilog158, !dbg !4519

sw.bb115:                                         ; preds = %if.end92
  store i32 4, i32* %scroll, align 4, !dbg !4520
  br label %sw.epilog158, !dbg !4521

sw.bb116:                                         ; preds = %if.end92
  store i32 8, i32* %scroll, align 4, !dbg !4522
  br label %sw.epilog158, !dbg !4523

sw.bb117:                                         ; preds = %if.end92
  %82 = load %struct.atkbd*, %struct.atkbd** %atkbd, align 8, !dbg !4524
  %release118 = getelementptr inbounds %struct.atkbd, %struct.atkbd* %82, i32 0, i32 17, !dbg !4525
  %83 = load i8, i8* %release118, align 2, !dbg !4525
  %tobool119 = trunc i8 %83 to i1, !dbg !4525
  %lnot120 = xor i1 %tobool119, true, !dbg !4526
  %lnot.ext121 = zext i1 %lnot120 to i32, !dbg !4526
  store i32 %lnot.ext121, i32* %click, align 4, !dbg !4527
  br label %sw.epilog158, !dbg !4528

sw.bb122:                                         ; preds = %if.end92
  store i32 -1, i32* %hscroll, align 4, !dbg !4529
  br label %sw.epilog158, !dbg !4530

sw.bb123:                                         ; preds = %if.end92
  store i32 1, i32* %hscroll, align 4, !dbg !4531
  br label %sw.epilog158, !dbg !4532

sw.default:                                       ; preds = %if.end92
  %84 = load %struct.atkbd*, %struct.atkbd** %atkbd, align 8, !dbg !4533
  %release124 = getelementptr inbounds %struct.atkbd, %struct.atkbd* %84, i32 0, i32 17, !dbg !4534
  %85 = load i8, i8* %release124, align 2, !dbg !4534
  %tobool125 = trunc i8 %85 to i1, !dbg !4534
  br i1 %tobool125, label %if.then126, label %if.else, !dbg !4535

if.then126:                                       ; preds = %sw.default
  store i32 0, i32* %value, align 4, !dbg !4536
  %86 = load %struct.atkbd*, %struct.atkbd** %atkbd, align 8, !dbg !4538
  %last = getelementptr inbounds %struct.atkbd, %struct.atkbd* %86, i32 0, i32 19, !dbg !4539
  store i32 0, i32* %last, align 8, !dbg !4540
  br label %if.end146, !dbg !4541

if.else:                                          ; preds = %sw.default
  %87 = load %struct.atkbd*, %struct.atkbd** %atkbd, align 8, !dbg !4542
  %softrepeat = getelementptr inbounds %struct.atkbd, %struct.atkbd* %87, i32 0, i32 11, !dbg !4543
  %88 = load i8, i8* %softrepeat, align 4, !dbg !4543
  %tobool127 = trunc i8 %88 to i1, !dbg !4543
  br i1 %tobool127, label %if.else140, label %land.lhs.true128, !dbg !4544

land.lhs.true128:                                 ; preds = %if.else
  %89 = load i16, i16* %keycode, align 2, !dbg !4545
  %conv129 = zext i16 %89 to i64, !dbg !4545
  %90 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !4546
  %key = getelementptr inbounds %struct.input_dev, %struct.input_dev* %90, i32 0, i32 27, !dbg !4547
  %arraydecay130 = getelementptr inbounds [12 x i64], [12 x i64]* %key, i64 0, i64 0, !dbg !4546
  %call131 = call zeroext i1 @test_bit(i64 %conv129, i64* %arraydecay130) #11, !dbg !4548
  br i1 %call131, label %if.then133, label %if.else140, !dbg !4549

if.then133:                                       ; preds = %land.lhs.true128
  %91 = load volatile i64, i64* @jiffies, align 8, !dbg !4550
  %92 = load %struct.atkbd*, %struct.atkbd** %atkbd, align 8, !dbg !4550
  %time = getelementptr inbounds %struct.atkbd, %struct.atkbd* %92, i32 0, i32 20, !dbg !4550
  %93 = load i64, i64* %time, align 8, !dbg !4550
  %sub = sub i64 %91, %93, !dbg !4550
  %cmp134 = icmp slt i64 %sub, 0, !dbg !4550
  br i1 %cmp134, label %land.rhs, label %land.end, !dbg !4552

land.rhs:                                         ; preds = %if.then133
  %94 = load %struct.atkbd*, %struct.atkbd** %atkbd, align 8, !dbg !4553
  %last136 = getelementptr inbounds %struct.atkbd, %struct.atkbd* %94, i32 0, i32 19, !dbg !4554
  %95 = load i32, i32* %last136, align 8, !dbg !4554
  %96 = load i32, i32* %code, align 4, !dbg !4555
  %cmp137 = icmp eq i32 %95, %96, !dbg !4556
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.then133
  %97 = phi i1 [ false, %if.then133 ], [ %cmp137, %land.rhs ], !dbg !4557
  %98 = zext i1 %97 to i64, !dbg !4550
  %cond139 = select i1 %97, i32 1, i32 2, !dbg !4550
  store i32 %cond139, i32* %value, align 4, !dbg !4558
  br label %if.end145, !dbg !4559

if.else140:                                       ; preds = %land.lhs.true128, %if.else
  store i32 1, i32* %value, align 4, !dbg !4560
  %99 = load i32, i32* %code, align 4, !dbg !4561
  %100 = load %struct.atkbd*, %struct.atkbd** %atkbd, align 8, !dbg !4562
  %last141 = getelementptr inbounds %struct.atkbd, %struct.atkbd* %100, i32 0, i32 19, !dbg !4563
  store i32 %99, i32* %last141, align 8, !dbg !4564
  %101 = load volatile i64, i64* @jiffies, align 8, !dbg !4565
  %102 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !4566
  %rep = getelementptr inbounds %struct.input_dev, %struct.input_dev* %102, i32 0, i32 24, !dbg !4567
  %arrayidx142 = getelementptr [2 x i32], [2 x i32]* %rep, i64 0, i64 0, !dbg !4566
  %103 = load i32, i32* %arrayidx142, align 8, !dbg !4566
  store i32 %103, i32* %m.addr.i, align 4
  %104 = load i32, i32* %m.addr.i, align 4, !dbg !4568
  %105 = call i1 @llvm.is.constant.i32(i32 %104) #10, !dbg !4570
  br i1 %105, label %if.then.i, label %if.else.i, !dbg !4571

if.then.i:                                        ; preds = %if.else140
  %106 = load i32, i32* %m.addr.i, align 4, !dbg !4572
  %cmp.i = icmp slt i32 %106, 0, !dbg !4575
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !4576

if.then1.i:                                       ; preds = %if.then.i
  store i64 4611686018427387902, i64* %retval.i, align 8, !dbg !4577
  br label %msecs_to_jiffies.exit, !dbg !4577

if.end.i:                                         ; preds = %if.then.i
  %107 = load i32, i32* %m.addr.i, align 4, !dbg !4578
  %call.i = call i64 @_msecs_to_jiffies(i32 %107) #13, !dbg !4579
  store i64 %call.i, i64* %retval.i, align 8, !dbg !4580
  br label %msecs_to_jiffies.exit, !dbg !4580

if.else.i:                                        ; preds = %if.else140
  %108 = load i32, i32* %m.addr.i, align 4, !dbg !4581
  %call2.i = call i64 @__msecs_to_jiffies(i32 %108) #13, !dbg !4583
  store i64 %call2.i, i64* %retval.i, align 8, !dbg !4584
  br label %msecs_to_jiffies.exit, !dbg !4584

msecs_to_jiffies.exit:                            ; preds = %if.then1.i, %if.end.i, %if.else.i
  %109 = load i64, i64* %retval.i, align 8, !dbg !4585
  %div = udiv i64 %109, 2, !dbg !4586
  %add = add i64 %101, %div, !dbg !4587
  %110 = load %struct.atkbd*, %struct.atkbd** %atkbd, align 8, !dbg !4588
  %time144 = getelementptr inbounds %struct.atkbd, %struct.atkbd* %110, i32 0, i32 20, !dbg !4589
  store i64 %add, i64* %time144, align 8, !dbg !4590
  br label %if.end145

if.end145:                                        ; preds = %msecs_to_jiffies.exit, %land.end
  br label %if.end146

if.end146:                                        ; preds = %if.end145, %if.then126
  %111 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !4591
  %112 = load i16, i16* %keycode, align 2, !dbg !4592
  %conv147 = zext i16 %112 to i32, !dbg !4592
  %113 = load i32, i32* %value, align 4, !dbg !4593
  call void @input_event(%struct.input_dev* %111, i32 1, i32 %conv147, i32 %113) #11, !dbg !4594
  %114 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !4595
  call void @input_sync(%struct.input_dev* %114) #11, !dbg !4596
  %115 = load i32, i32* %value, align 4, !dbg !4597
  %tobool148 = icmp ne i32 %115, 0, !dbg !4597
  br i1 %tobool148, label %land.lhs.true149, label %if.end157, !dbg !4599

land.lhs.true149:                                 ; preds = %if.end146
  %116 = load i32, i32* %code, align 4, !dbg !4600
  %conv150 = zext i32 %116 to i64, !dbg !4600
  %117 = load %struct.atkbd*, %struct.atkbd** %atkbd, align 8, !dbg !4601
  %force_release_mask151 = getelementptr inbounds %struct.atkbd, %struct.atkbd* %117, i32 0, i32 6, !dbg !4602
  %arraydecay152 = getelementptr inbounds [8 x i64], [8 x i64]* %force_release_mask151, i64 0, i64 0, !dbg !4601
  %call153 = call zeroext i1 @test_bit(i64 %conv150, i64* %arraydecay152) #11, !dbg !4603
  br i1 %call153, label %if.then155, label %if.end157, !dbg !4604

if.then155:                                       ; preds = %land.lhs.true149
  %118 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !4605
  %119 = load i32, i32* %code, align 4, !dbg !4607
  call void @input_event(%struct.input_dev* %118, i32 4, i32 4, i32 %119) #11, !dbg !4608
  %120 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !4609
  %121 = load i16, i16* %keycode, align 2, !dbg !4610
  %conv156 = zext i16 %121 to i32, !dbg !4610
  call void @input_report_key(%struct.input_dev* %120, i32 %conv156, i32 0) #11, !dbg !4611
  %122 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !4612
  call void @input_sync(%struct.input_dev* %122) #11, !dbg !4613
  br label %if.end157, !dbg !4614

if.end157:                                        ; preds = %if.then155, %land.lhs.true149, %if.end146
  br label %sw.epilog158, !dbg !4615

sw.epilog158:                                     ; preds = %if.end157, %sw.bb123, %sw.bb122, %sw.bb117, %sw.bb116, %sw.bb115, %sw.bb114, %sw.bb113, %sw.bb95, %sw.bb94
  %123 = load %struct.atkbd*, %struct.atkbd** %atkbd, align 8, !dbg !4616
  %scroll159 = getelementptr inbounds %struct.atkbd, %struct.atkbd* %123, i32 0, i32 13, !dbg !4618
  %124 = load i8, i8* %scroll159, align 2, !dbg !4618
  %tobool160 = trunc i8 %124 to i1, !dbg !4618
  br i1 %tobool160, label %if.then161, label %if.end171, !dbg !4619

if.then161:                                       ; preds = %sw.epilog158
  %125 = load i32, i32* %click, align 4, !dbg !4620
  %cmp162 = icmp ne i32 %125, -1, !dbg !4623
  br i1 %cmp162, label %if.then164, label %if.end165, !dbg !4624

if.then164:                                       ; preds = %if.then161
  %126 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !4625
  %127 = load i32, i32* %click, align 4, !dbg !4626
  call void @input_report_key(%struct.input_dev* %126, i32 274, i32 %127) #11, !dbg !4627
  br label %if.end165, !dbg !4627

if.end165:                                        ; preds = %if.then164, %if.then161
  %128 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !4628
  %129 = load %struct.atkbd*, %struct.atkbd** %atkbd, align 8, !dbg !4629
  %release166 = getelementptr inbounds %struct.atkbd, %struct.atkbd* %129, i32 0, i32 17, !dbg !4630
  %130 = load i8, i8* %release166, align 2, !dbg !4630
  %tobool167 = trunc i8 %130 to i1, !dbg !4630
  br i1 %tobool167, label %cond.true, label %cond.false, !dbg !4629

cond.true:                                        ; preds = %if.end165
  %131 = load i32, i32* %scroll, align 4, !dbg !4631
  %sub169 = sub i32 0, %131, !dbg !4632
  br label %cond.end, !dbg !4629

cond.false:                                       ; preds = %if.end165
  %132 = load i32, i32* %scroll, align 4, !dbg !4633
  br label %cond.end, !dbg !4629

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond170 = phi i32 [ %sub169, %cond.true ], [ %132, %cond.false ], !dbg !4629
  call void @input_report_rel(%struct.input_dev* %128, i32 8, i32 %cond170) #11, !dbg !4634
  %133 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !4635
  %134 = load i32, i32* %hscroll, align 4, !dbg !4636
  call void @input_report_rel(%struct.input_dev* %133, i32 6, i32 %134) #11, !dbg !4637
  %135 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !4638
  call void @input_sync(%struct.input_dev* %135) #11, !dbg !4639
  br label %if.end171, !dbg !4640

if.end171:                                        ; preds = %cond.end, %sw.epilog158
  %136 = load %struct.atkbd*, %struct.atkbd** %atkbd, align 8, !dbg !4641
  %release172 = getelementptr inbounds %struct.atkbd, %struct.atkbd* %136, i32 0, i32 17, !dbg !4642
  store i8 0, i8* %release172, align 2, !dbg !4643
  br label %out, !dbg !4641

out:                                              ; preds = %if.end171, %if.then75, %sw.bb67, %if.end66, %sw.bb57, %sw.bb55, %sw.bb53, %sw.bb, %if.then28, %if.then23, %if.then8
  call void @llvm.dbg.label(metadata !4644), !dbg !4645
  ret i32 1, !dbg !4646
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @atkbd_connect(%struct.serio* %serio, %struct.serio_driver* %drv) #2 !dbg !4212 {
entry:
  %retval = alloca i32, align 4
  %serio.addr = alloca %struct.serio*, align 8
  %drv.addr = alloca %struct.serio_driver*, align 8
  %atkbd = alloca %struct.atkbd*, align 8
  %dev = alloca %struct.input_dev*, align 8
  %err = alloca i32, align 4
  %.compoundliteral = alloca %struct.atomic64_t, align 8
  store %struct.serio* %serio, %struct.serio** %serio.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.serio** %serio.addr, metadata !4647, metadata !DIExpression()), !dbg !4648
  store %struct.serio_driver* %drv, %struct.serio_driver** %drv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.serio_driver** %drv.addr, metadata !4649, metadata !DIExpression()), !dbg !4650
  call void @llvm.dbg.declare(metadata %struct.atkbd** %atkbd, metadata !4651, metadata !DIExpression()), !dbg !4652
  call void @llvm.dbg.declare(metadata %struct.input_dev** %dev, metadata !4653, metadata !DIExpression()), !dbg !4654
  call void @llvm.dbg.declare(metadata i32* %err, metadata !4655, metadata !DIExpression()), !dbg !4656
  store i32 -12, i32* %err, align 4, !dbg !4656
  %call = call i8* @kzalloc(i64 1552, i32 3264) #11, !dbg !4657
  %0 = bitcast i8* %call to %struct.atkbd*, !dbg !4657
  store %struct.atkbd* %0, %struct.atkbd** %atkbd, align 8, !dbg !4658
  %call1 = call %struct.input_dev* @input_allocate_device() #11, !dbg !4659
  store %struct.input_dev* %call1, %struct.input_dev** %dev, align 8, !dbg !4660
  %1 = load %struct.atkbd*, %struct.atkbd** %atkbd, align 8, !dbg !4661
  %tobool = icmp ne %struct.atkbd* %1, null, !dbg !4661
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !4663

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !4664
  %tobool2 = icmp ne %struct.input_dev* %2, null, !dbg !4664
  br i1 %tobool2, label %if.end, label %if.then, !dbg !4665

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %fail1, !dbg !4666

if.end:                                           ; preds = %lor.lhs.false
  %3 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !4667
  %4 = load %struct.atkbd*, %struct.atkbd** %atkbd, align 8, !dbg !4668
  %dev3 = getelementptr inbounds %struct.atkbd, %struct.atkbd* %4, i32 0, i32 1, !dbg !4669
  store %struct.input_dev* %3, %struct.input_dev** %dev3, align 8, !dbg !4670
  %5 = load %struct.atkbd*, %struct.atkbd** %atkbd, align 8, !dbg !4671
  %ps2dev = getelementptr inbounds %struct.atkbd, %struct.atkbd* %5, i32 0, i32 0, !dbg !4672
  %6 = load %struct.serio*, %struct.serio** %serio.addr, align 8, !dbg !4673
  call void @ps2_init(%struct.ps2dev* %ps2dev, %struct.serio* %6) #11, !dbg !4674
  br label %do.body, !dbg !4675

do.body:                                          ; preds = %if.end
  br label %do.body4, !dbg !4676

do.body4:                                         ; preds = %do.body
  %7 = load %struct.atkbd*, %struct.atkbd** %atkbd, align 8, !dbg !4678
  %event_work = getelementptr inbounds %struct.atkbd, %struct.atkbd* %7, i32 0, i32 22, !dbg !4678
  %work = getelementptr inbounds %struct.delayed_work, %struct.delayed_work* %event_work, i32 0, i32 0, !dbg !4678
  call void @__init_work(%struct.work_struct* %work, i32 0) #11, !dbg !4678
  %8 = load %struct.atkbd*, %struct.atkbd** %atkbd, align 8, !dbg !4678
  %event_work5 = getelementptr inbounds %struct.atkbd, %struct.atkbd* %8, i32 0, i32 22, !dbg !4678
  %work6 = getelementptr inbounds %struct.delayed_work, %struct.delayed_work* %event_work5, i32 0, i32 0, !dbg !4678
  %data = getelementptr inbounds %struct.work_struct, %struct.work_struct* %work6, i32 0, i32 0, !dbg !4678
  %counter = getelementptr inbounds %struct.atomic64_t, %struct.atomic64_t* %.compoundliteral, i32 0, i32 0, !dbg !4678
  store i64 68719476704, i64* %counter, align 8, !dbg !4678
  %9 = bitcast %struct.atomic64_t* %data to i8*, !dbg !4678
  %10 = bitcast %struct.atomic64_t* %.compoundliteral to i8*, !dbg !4678
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 8, i1 false), !dbg !4678
  %11 = load %struct.atkbd*, %struct.atkbd** %atkbd, align 8, !dbg !4678
  %event_work7 = getelementptr inbounds %struct.atkbd, %struct.atkbd* %11, i32 0, i32 22, !dbg !4678
  %work8 = getelementptr inbounds %struct.delayed_work, %struct.delayed_work* %event_work7, i32 0, i32 0, !dbg !4678
  %entry9 = getelementptr inbounds %struct.work_struct, %struct.work_struct* %work8, i32 0, i32 1, !dbg !4678
  call void @INIT_LIST_HEAD(%struct.list_head* %entry9) #11, !dbg !4678
  %12 = load %struct.atkbd*, %struct.atkbd** %atkbd, align 8, !dbg !4678
  %event_work10 = getelementptr inbounds %struct.atkbd, %struct.atkbd* %12, i32 0, i32 22, !dbg !4678
  %work11 = getelementptr inbounds %struct.delayed_work, %struct.delayed_work* %event_work10, i32 0, i32 0, !dbg !4678
  %func = getelementptr inbounds %struct.work_struct, %struct.work_struct* %work11, i32 0, i32 2, !dbg !4678
  store void (%struct.work_struct*)* @atkbd_event_work, void (%struct.work_struct*)** %func, align 8, !dbg !4678
  br label %do.end, !dbg !4678

do.end:                                           ; preds = %do.body4
  %13 = load %struct.atkbd*, %struct.atkbd** %atkbd, align 8, !dbg !4676
  %event_work12 = getelementptr inbounds %struct.atkbd, %struct.atkbd* %13, i32 0, i32 22, !dbg !4676
  %timer = getelementptr inbounds %struct.delayed_work, %struct.delayed_work* %event_work12, i32 0, i32 1, !dbg !4676
  call void @init_timer_key(%struct.timer_list* %timer, void (%struct.timer_list*)* @delayed_work_timer_fn, i32 2097152, i8* null, %struct.lock_class_key* null) #11, !dbg !4676
  br label %do.end13, !dbg !4676

do.end13:                                         ; preds = %do.end
  br label %do.body14, !dbg !4680

do.body14:                                        ; preds = %do.end13
  %14 = load %struct.atkbd*, %struct.atkbd** %atkbd, align 8, !dbg !4681
  %mutex = getelementptr inbounds %struct.atkbd, %struct.atkbd* %14, i32 0, i32 25, !dbg !4681
  call void @__mutex_init(%struct.mutex* %mutex, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.13, i64 0, i64 0), %struct.lock_class_key* @atkbd_connect.__key) #11, !dbg !4681
  br label %do.end15, !dbg !4681

do.end15:                                         ; preds = %do.body14
  %15 = load %struct.serio*, %struct.serio** %serio.addr, align 8, !dbg !4683
  %id = getelementptr inbounds %struct.serio, %struct.serio* %15, i32 0, i32 5, !dbg !4684
  %type = getelementptr inbounds %struct.serio_device_id, %struct.serio_device_id* %id, i32 0, i32 0, !dbg !4685
  %16 = load i8, i8* %type, align 1, !dbg !4685
  %conv = zext i8 %16 to i32, !dbg !4683
  switch i32 %conv, label %sw.epilog [
    i32 6, label %sw.bb
    i32 1, label %sw.bb16
  ], !dbg !4686

sw.bb:                                            ; preds = %do.end15
  %17 = load %struct.atkbd*, %struct.atkbd** %atkbd, align 8, !dbg !4687
  %translated = getelementptr inbounds %struct.atkbd, %struct.atkbd* %17, i32 0, i32 8, !dbg !4689
  store i8 1, i8* %translated, align 1, !dbg !4690
  br label %sw.bb16, !dbg !4687

sw.bb16:                                          ; preds = %do.end15, %sw.bb
  %18 = load %struct.serio*, %struct.serio** %serio.addr, align 8, !dbg !4691
  %write = getelementptr inbounds %struct.serio, %struct.serio* %18, i32 0, i32 7, !dbg !4693
  %19 = load i32 (%struct.serio*, i8)*, i32 (%struct.serio*, i8)** %write, align 8, !dbg !4693
  %tobool17 = icmp ne i32 (%struct.serio*, i8)* %19, null, !dbg !4691
  br i1 %tobool17, label %if.then18, label %if.end20, !dbg !4694

if.then18:                                        ; preds = %sw.bb16
  %20 = load %struct.atkbd*, %struct.atkbd** %atkbd, align 8, !dbg !4695
  %write19 = getelementptr inbounds %struct.atkbd, %struct.atkbd* %20, i32 0, i32 10, !dbg !4696
  store i8 1, i8* %write19, align 1, !dbg !4697
  br label %if.end20, !dbg !4695

if.end20:                                         ; preds = %if.then18, %sw.bb16
  br label %sw.epilog, !dbg !4698

sw.epilog:                                        ; preds = %do.end15, %if.end20
  %21 = load i8, i8* @atkbd_softraw, align 1, !dbg !4699
  %tobool21 = trunc i8 %21 to i1, !dbg !4699
  %22 = load %struct.atkbd*, %struct.atkbd** %atkbd, align 8, !dbg !4700
  %softraw = getelementptr inbounds %struct.atkbd, %struct.atkbd* %22, i32 0, i32 12, !dbg !4701
  %frombool = zext i1 %tobool21 to i8, !dbg !4702
  store i8 %frombool, i8* %softraw, align 1, !dbg !4702
  %23 = load i8, i8* @atkbd_softrepeat, align 1, !dbg !4703
  %tobool22 = trunc i8 %23 to i1, !dbg !4703
  %24 = load %struct.atkbd*, %struct.atkbd** %atkbd, align 8, !dbg !4704
  %softrepeat = getelementptr inbounds %struct.atkbd, %struct.atkbd* %24, i32 0, i32 11, !dbg !4705
  %frombool23 = zext i1 %tobool22 to i8, !dbg !4706
  store i8 %frombool23, i8* %softrepeat, align 4, !dbg !4706
  %25 = load i8, i8* @atkbd_scroll, align 1, !dbg !4707
  %tobool24 = trunc i8 %25 to i1, !dbg !4707
  %26 = load %struct.atkbd*, %struct.atkbd** %atkbd, align 8, !dbg !4708
  %scroll = getelementptr inbounds %struct.atkbd, %struct.atkbd* %26, i32 0, i32 13, !dbg !4709
  %frombool25 = zext i1 %tobool24 to i8, !dbg !4710
  store i8 %frombool25, i8* %scroll, align 2, !dbg !4710
  %27 = load %struct.atkbd*, %struct.atkbd** %atkbd, align 8, !dbg !4711
  %softrepeat26 = getelementptr inbounds %struct.atkbd, %struct.atkbd* %27, i32 0, i32 11, !dbg !4713
  %28 = load i8, i8* %softrepeat26, align 4, !dbg !4713
  %tobool27 = trunc i8 %28 to i1, !dbg !4713
  br i1 %tobool27, label %if.then28, label %if.end30, !dbg !4714

if.then28:                                        ; preds = %sw.epilog
  %29 = load %struct.atkbd*, %struct.atkbd** %atkbd, align 8, !dbg !4715
  %softraw29 = getelementptr inbounds %struct.atkbd, %struct.atkbd* %29, i32 0, i32 12, !dbg !4716
  store i8 1, i8* %softraw29, align 1, !dbg !4717
  br label %if.end30, !dbg !4715

if.end30:                                         ; preds = %if.then28, %sw.epilog
  %30 = load %struct.serio*, %struct.serio** %serio.addr, align 8, !dbg !4718
  %31 = load %struct.atkbd*, %struct.atkbd** %atkbd, align 8, !dbg !4719
  %32 = bitcast %struct.atkbd* %31 to i8*, !dbg !4719
  call void @serio_set_drvdata(%struct.serio* %30, i8* %32) #11, !dbg !4720
  %33 = load %struct.serio*, %struct.serio** %serio.addr, align 8, !dbg !4721
  %34 = load %struct.serio_driver*, %struct.serio_driver** %drv.addr, align 8, !dbg !4722
  %call31 = call i32 @serio_open(%struct.serio* %33, %struct.serio_driver* %34) #11, !dbg !4723
  store i32 %call31, i32* %err, align 4, !dbg !4724
  %35 = load i32, i32* %err, align 4, !dbg !4725
  %tobool32 = icmp ne i32 %35, 0, !dbg !4725
  br i1 %tobool32, label %if.then33, label %if.end34, !dbg !4727

if.then33:                                        ; preds = %if.end30
  br label %fail2, !dbg !4728

if.end34:                                         ; preds = %if.end30
  %36 = load %struct.atkbd*, %struct.atkbd** %atkbd, align 8, !dbg !4729
  %write35 = getelementptr inbounds %struct.atkbd, %struct.atkbd* %36, i32 0, i32 10, !dbg !4731
  %37 = load i8, i8* %write35, align 1, !dbg !4731
  %tobool36 = trunc i8 %37 to i1, !dbg !4731
  br i1 %tobool36, label %if.then37, label %if.else, !dbg !4732

if.then37:                                        ; preds = %if.end34
  %38 = load %struct.atkbd*, %struct.atkbd** %atkbd, align 8, !dbg !4733
  %call38 = call i32 @atkbd_probe(%struct.atkbd* %38) #11, !dbg !4736
  %tobool39 = icmp ne i32 %call38, 0, !dbg !4736
  br i1 %tobool39, label %if.then40, label %if.end41, !dbg !4737

if.then40:                                        ; preds = %if.then37
  store i32 -19, i32* %err, align 4, !dbg !4738
  br label %fail3, !dbg !4740

if.end41:                                         ; preds = %if.then37
  %39 = load %struct.atkbd*, %struct.atkbd** %atkbd, align 8, !dbg !4741
  %40 = load i32, i32* @atkbd_set, align 4, !dbg !4742
  %41 = load i8, i8* @atkbd_extra, align 1, !dbg !4743
  %tobool42 = trunc i8 %41 to i1, !dbg !4743
  %conv43 = zext i1 %tobool42 to i32, !dbg !4743
  %call44 = call i32 @atkbd_select_set(%struct.atkbd* %39, i32 %40, i32 %conv43) #11, !dbg !4744
  %conv45 = trunc i32 %call44 to i8, !dbg !4744
  %42 = load %struct.atkbd*, %struct.atkbd** %atkbd, align 8, !dbg !4745
  %set = getelementptr inbounds %struct.atkbd, %struct.atkbd* %42, i32 0, i32 7, !dbg !4746
  store i8 %conv45, i8* %set, align 8, !dbg !4747
  %43 = load %struct.atkbd*, %struct.atkbd** %atkbd, align 8, !dbg !4748
  %call46 = call i32 @atkbd_reset_state(%struct.atkbd* %43) #11, !dbg !4749
  br label %if.end49, !dbg !4750

if.else:                                          ; preds = %if.end34
  %44 = load %struct.atkbd*, %struct.atkbd** %atkbd, align 8, !dbg !4751
  %set47 = getelementptr inbounds %struct.atkbd, %struct.atkbd* %44, i32 0, i32 7, !dbg !4753
  store i8 2, i8* %set47, align 8, !dbg !4754
  %45 = load %struct.atkbd*, %struct.atkbd** %atkbd, align 8, !dbg !4755
  %id48 = getelementptr inbounds %struct.atkbd, %struct.atkbd* %45, i32 0, i32 4, !dbg !4756
  store i16 -21760, i16* %id48, align 8, !dbg !4757
  br label %if.end49

if.end49:                                         ; preds = %if.else, %if.end41
  %46 = load %struct.serio*, %struct.serio** %serio.addr, align 8, !dbg !4758
  call void @atkbd_parse_fwnode_data(%struct.serio* %46) #11, !dbg !4759
  %47 = load %struct.atkbd*, %struct.atkbd** %atkbd, align 8, !dbg !4760
  call void @atkbd_set_keycode_table(%struct.atkbd* %47) #11, !dbg !4761
  %48 = load %struct.atkbd*, %struct.atkbd** %atkbd, align 8, !dbg !4762
  call void @atkbd_set_device_attrs(%struct.atkbd* %48) #11, !dbg !4763
  %49 = load %struct.serio*, %struct.serio** %serio.addr, align 8, !dbg !4764
  %dev50 = getelementptr inbounds %struct.serio, %struct.serio* %49, i32 0, i32 18, !dbg !4765
  %kobj = getelementptr inbounds %struct.device, %struct.device* %dev50, i32 0, i32 0, !dbg !4766
  %call51 = call i32 @sysfs_create_group(%struct.kobject* %kobj, %struct.attribute_group* @atkbd_attribute_group) #11, !dbg !4767
  store i32 %call51, i32* %err, align 4, !dbg !4768
  %50 = load i32, i32* %err, align 4, !dbg !4769
  %tobool52 = icmp ne i32 %50, 0, !dbg !4769
  br i1 %tobool52, label %if.then53, label %if.end54, !dbg !4771

if.then53:                                        ; preds = %if.end49
  br label %fail3, !dbg !4772

if.end54:                                         ; preds = %if.end49
  %51 = load %struct.atkbd*, %struct.atkbd** %atkbd, align 8, !dbg !4773
  call void @atkbd_enable(%struct.atkbd* %51) #11, !dbg !4774
  %52 = load %struct.serio*, %struct.serio** %serio.addr, align 8, !dbg !4775
  %write55 = getelementptr inbounds %struct.serio, %struct.serio* %52, i32 0, i32 7, !dbg !4777
  %53 = load i32 (%struct.serio*, i8)*, i32 (%struct.serio*, i8)** %write55, align 8, !dbg !4777
  %tobool56 = icmp ne i32 (%struct.serio*, i8)* %53, null, !dbg !4775
  br i1 %tobool56, label %if.then57, label %if.end59, !dbg !4778

if.then57:                                        ; preds = %if.end54
  %54 = load %struct.atkbd*, %struct.atkbd** %atkbd, align 8, !dbg !4779
  %call58 = call i32 @atkbd_activate(%struct.atkbd* %54) #11, !dbg !4780
  br label %if.end59, !dbg !4780

if.end59:                                         ; preds = %if.then57, %if.end54
  %55 = load %struct.atkbd*, %struct.atkbd** %atkbd, align 8, !dbg !4781
  %dev60 = getelementptr inbounds %struct.atkbd, %struct.atkbd* %55, i32 0, i32 1, !dbg !4782
  %56 = load %struct.input_dev*, %struct.input_dev** %dev60, align 8, !dbg !4782
  %call61 = call i32 @input_register_device(%struct.input_dev* %56) #11, !dbg !4783
  store i32 %call61, i32* %err, align 4, !dbg !4784
  %57 = load i32, i32* %err, align 4, !dbg !4785
  %tobool62 = icmp ne i32 %57, 0, !dbg !4785
  br i1 %tobool62, label %if.then63, label %if.end64, !dbg !4787

if.then63:                                        ; preds = %if.end59
  br label %fail4, !dbg !4788

if.end64:                                         ; preds = %if.end59
  store i32 0, i32* %retval, align 4, !dbg !4789
  br label %return, !dbg !4789

fail4:                                            ; preds = %if.then63
  call void @llvm.dbg.label(metadata !4790), !dbg !4791
  %58 = load %struct.serio*, %struct.serio** %serio.addr, align 8, !dbg !4792
  %dev65 = getelementptr inbounds %struct.serio, %struct.serio* %58, i32 0, i32 18, !dbg !4793
  %kobj66 = getelementptr inbounds %struct.device, %struct.device* %dev65, i32 0, i32 0, !dbg !4794
  call void @sysfs_remove_group(%struct.kobject* %kobj66, %struct.attribute_group* @atkbd_attribute_group) #11, !dbg !4795
  br label %fail3, !dbg !4795

fail3:                                            ; preds = %fail4, %if.then53, %if.then40
  call void @llvm.dbg.label(metadata !4796), !dbg !4797
  %59 = load %struct.serio*, %struct.serio** %serio.addr, align 8, !dbg !4798
  call void @serio_close(%struct.serio* %59) #11, !dbg !4799
  br label %fail2, !dbg !4799

fail2:                                            ; preds = %fail3, %if.then33
  call void @llvm.dbg.label(metadata !4800), !dbg !4801
  %60 = load %struct.serio*, %struct.serio** %serio.addr, align 8, !dbg !4802
  call void @serio_set_drvdata(%struct.serio* %60, i8* null) #11, !dbg !4803
  br label %fail1, !dbg !4803

fail1:                                            ; preds = %fail2, %if.then
  call void @llvm.dbg.label(metadata !4804), !dbg !4805
  %61 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !4806
  call void @input_free_device(%struct.input_dev* %61) #11, !dbg !4807
  %62 = load %struct.atkbd*, %struct.atkbd** %atkbd, align 8, !dbg !4808
  %63 = bitcast %struct.atkbd* %62 to i8*, !dbg !4808
  call void @kfree(i8* %63) #11, !dbg !4809
  %64 = load i32, i32* %err, align 4, !dbg !4810
  store i32 %64, i32* %retval, align 4, !dbg !4811
  br label %return, !dbg !4811

return:                                           ; preds = %fail1, %if.end64
  %65 = load i32, i32* %retval, align 4, !dbg !4812
  ret i32 %65, !dbg !4812
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @atkbd_reconnect(%struct.serio* %serio) #2 !dbg !4813 {
entry:
  %retval = alloca i32, align 4
  %serio.addr = alloca %struct.serio*, align 8
  %atkbd = alloca %struct.atkbd*, align 8
  %drv = alloca %struct.serio_driver*, align 8
  %retval2 = alloca i32, align 4
  store %struct.serio* %serio, %struct.serio** %serio.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.serio** %serio.addr, metadata !4814, metadata !DIExpression()), !dbg !4815
  call void @llvm.dbg.declare(metadata %struct.atkbd** %atkbd, metadata !4816, metadata !DIExpression()), !dbg !4817
  %0 = load %struct.serio*, %struct.serio** %serio.addr, align 8, !dbg !4818
  %call = call i8* @serio_get_drvdata(%struct.serio* %0) #11, !dbg !4819
  %1 = bitcast i8* %call to %struct.atkbd*, !dbg !4819
  store %struct.atkbd* %1, %struct.atkbd** %atkbd, align 8, !dbg !4817
  call void @llvm.dbg.declare(metadata %struct.serio_driver** %drv, metadata !4820, metadata !DIExpression()), !dbg !4821
  %2 = load %struct.serio*, %struct.serio** %serio.addr, align 8, !dbg !4822
  %drv1 = getelementptr inbounds %struct.serio, %struct.serio* %2, i32 0, i32 16, !dbg !4823
  %3 = load %struct.serio_driver*, %struct.serio_driver** %drv1, align 8, !dbg !4823
  store %struct.serio_driver* %3, %struct.serio_driver** %drv, align 8, !dbg !4821
  call void @llvm.dbg.declare(metadata i32* %retval2, metadata !4824, metadata !DIExpression()), !dbg !4825
  store i32 -1, i32* %retval2, align 4, !dbg !4825
  %4 = load %struct.atkbd*, %struct.atkbd** %atkbd, align 8, !dbg !4826
  %tobool = icmp ne %struct.atkbd* %4, null, !dbg !4826
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !4828

lor.lhs.false:                                    ; preds = %entry
  %5 = load %struct.serio_driver*, %struct.serio_driver** %drv, align 8, !dbg !4829
  %tobool3 = icmp ne %struct.serio_driver* %5, null, !dbg !4829
  br i1 %tobool3, label %if.end, label %if.then, !dbg !4830

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 -1, i32* %retval, align 4, !dbg !4831
  br label %return, !dbg !4831

if.end:                                           ; preds = %lor.lhs.false
  %6 = load %struct.atkbd*, %struct.atkbd** %atkbd, align 8, !dbg !4833
  %mutex = getelementptr inbounds %struct.atkbd, %struct.atkbd* %6, i32 0, i32 25, !dbg !4834
  call void @mutex_lock(%struct.mutex* %mutex) #11, !dbg !4835
  %7 = load %struct.atkbd*, %struct.atkbd** %atkbd, align 8, !dbg !4836
  call void @atkbd_disable(%struct.atkbd* %7) #11, !dbg !4837
  %8 = load %struct.atkbd*, %struct.atkbd** %atkbd, align 8, !dbg !4838
  %write = getelementptr inbounds %struct.atkbd, %struct.atkbd* %8, i32 0, i32 10, !dbg !4840
  %9 = load i8, i8* %write, align 1, !dbg !4840
  %tobool4 = trunc i8 %9 to i1, !dbg !4840
  br i1 %tobool4, label %if.then5, label %if.end23, !dbg !4841

if.then5:                                         ; preds = %if.end
  %10 = load %struct.atkbd*, %struct.atkbd** %atkbd, align 8, !dbg !4842
  %call6 = call i32 @atkbd_probe(%struct.atkbd* %10) #11, !dbg !4845
  %tobool7 = icmp ne i32 %call6, 0, !dbg !4845
  br i1 %tobool7, label %if.then8, label %if.end9, !dbg !4846

if.then8:                                         ; preds = %if.then5
  br label %out, !dbg !4847

if.end9:                                          ; preds = %if.then5
  %11 = load %struct.atkbd*, %struct.atkbd** %atkbd, align 8, !dbg !4848
  %set = getelementptr inbounds %struct.atkbd, %struct.atkbd* %11, i32 0, i32 7, !dbg !4850
  %12 = load i8, i8* %set, align 8, !dbg !4850
  %conv = zext i8 %12 to i32, !dbg !4848
  %13 = load %struct.atkbd*, %struct.atkbd** %atkbd, align 8, !dbg !4851
  %14 = load %struct.atkbd*, %struct.atkbd** %atkbd, align 8, !dbg !4852
  %set10 = getelementptr inbounds %struct.atkbd, %struct.atkbd* %14, i32 0, i32 7, !dbg !4853
  %15 = load i8, i8* %set10, align 8, !dbg !4853
  %conv11 = zext i8 %15 to i32, !dbg !4852
  %16 = load %struct.atkbd*, %struct.atkbd** %atkbd, align 8, !dbg !4854
  %extra = getelementptr inbounds %struct.atkbd, %struct.atkbd* %16, i32 0, i32 9, !dbg !4855
  %17 = load i8, i8* %extra, align 2, !dbg !4855
  %tobool12 = trunc i8 %17 to i1, !dbg !4855
  %conv13 = zext i1 %tobool12 to i32, !dbg !4854
  %call14 = call i32 @atkbd_select_set(%struct.atkbd* %13, i32 %conv11, i32 %conv13) #11, !dbg !4856
  %cmp = icmp ne i32 %conv, %call14, !dbg !4857
  br i1 %cmp, label %if.then16, label %if.end17, !dbg !4858

if.then16:                                        ; preds = %if.end9
  br label %out, !dbg !4859

if.end17:                                         ; preds = %if.end9
  %18 = load %struct.atkbd*, %struct.atkbd** %atkbd, align 8, !dbg !4860
  %call18 = call i32 @atkbd_set_leds(%struct.atkbd* %18) #11, !dbg !4861
  %19 = load %struct.atkbd*, %struct.atkbd** %atkbd, align 8, !dbg !4862
  %softrepeat = getelementptr inbounds %struct.atkbd, %struct.atkbd* %19, i32 0, i32 11, !dbg !4864
  %20 = load i8, i8* %softrepeat, align 4, !dbg !4864
  %tobool19 = trunc i8 %20 to i1, !dbg !4864
  br i1 %tobool19, label %if.end22, label %if.then20, !dbg !4865

if.then20:                                        ; preds = %if.end17
  %21 = load %struct.atkbd*, %struct.atkbd** %atkbd, align 8, !dbg !4866
  %call21 = call i32 @atkbd_set_repeat_rate(%struct.atkbd* %21) #11, !dbg !4867
  br label %if.end22, !dbg !4867

if.end22:                                         ; preds = %if.then20, %if.end17
  br label %if.end23, !dbg !4868

if.end23:                                         ; preds = %if.end22, %if.end
  %22 = load %struct.atkbd*, %struct.atkbd** %atkbd, align 8, !dbg !4869
  %xl_bit = getelementptr inbounds %struct.atkbd, %struct.atkbd* %22, i32 0, i32 18, !dbg !4870
  store i64 0, i64* %xl_bit, align 8, !dbg !4871
  %23 = load %struct.atkbd*, %struct.atkbd** %atkbd, align 8, !dbg !4872
  %emul = getelementptr inbounds %struct.atkbd, %struct.atkbd* %23, i32 0, i32 15, !dbg !4873
  store i8 0, i8* %emul, align 8, !dbg !4874
  %24 = load %struct.atkbd*, %struct.atkbd** %atkbd, align 8, !dbg !4875
  call void @atkbd_enable(%struct.atkbd* %24) #11, !dbg !4876
  %25 = load %struct.atkbd*, %struct.atkbd** %atkbd, align 8, !dbg !4877
  %write24 = getelementptr inbounds %struct.atkbd, %struct.atkbd* %25, i32 0, i32 10, !dbg !4879
  %26 = load i8, i8* %write24, align 1, !dbg !4879
  %tobool25 = trunc i8 %26 to i1, !dbg !4879
  br i1 %tobool25, label %if.then26, label %if.end28, !dbg !4880

if.then26:                                        ; preds = %if.end23
  %27 = load %struct.atkbd*, %struct.atkbd** %atkbd, align 8, !dbg !4881
  %call27 = call i32 @atkbd_activate(%struct.atkbd* %27) #11, !dbg !4882
  br label %if.end28, !dbg !4882

if.end28:                                         ; preds = %if.then26, %if.end23
  store i32 0, i32* %retval2, align 4, !dbg !4883
  br label %out, !dbg !4884

out:                                              ; preds = %if.end28, %if.then16, %if.then8
  call void @llvm.dbg.label(metadata !4885), !dbg !4886
  %28 = load %struct.atkbd*, %struct.atkbd** %atkbd, align 8, !dbg !4887
  %mutex29 = getelementptr inbounds %struct.atkbd, %struct.atkbd* %28, i32 0, i32 25, !dbg !4888
  call void @mutex_unlock(%struct.mutex* %mutex29) #11, !dbg !4889
  %29 = load i32, i32* %retval2, align 4, !dbg !4890
  store i32 %29, i32* %retval, align 4, !dbg !4891
  br label %return, !dbg !4891

return:                                           ; preds = %out, %if.then
  %30 = load i32, i32* %retval, align 4, !dbg !4892
  ret i32 %30, !dbg !4892
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @atkbd_disconnect(%struct.serio* %serio) #2 !dbg !4893 {
entry:
  %serio.addr = alloca %struct.serio*, align 8
  %atkbd = alloca %struct.atkbd*, align 8
  store %struct.serio* %serio, %struct.serio** %serio.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.serio** %serio.addr, metadata !4894, metadata !DIExpression()), !dbg !4895
  call void @llvm.dbg.declare(metadata %struct.atkbd** %atkbd, metadata !4896, metadata !DIExpression()), !dbg !4897
  %0 = load %struct.serio*, %struct.serio** %serio.addr, align 8, !dbg !4898
  %call = call i8* @serio_get_drvdata(%struct.serio* %0) #11, !dbg !4899
  %1 = bitcast i8* %call to %struct.atkbd*, !dbg !4899
  store %struct.atkbd* %1, %struct.atkbd** %atkbd, align 8, !dbg !4897
  %2 = load %struct.serio*, %struct.serio** %serio.addr, align 8, !dbg !4900
  %dev = getelementptr inbounds %struct.serio, %struct.serio* %2, i32 0, i32 18, !dbg !4901
  %kobj = getelementptr inbounds %struct.device, %struct.device* %dev, i32 0, i32 0, !dbg !4902
  call void @sysfs_remove_group(%struct.kobject* %kobj, %struct.attribute_group* @atkbd_attribute_group) #11, !dbg !4903
  %3 = load %struct.atkbd*, %struct.atkbd** %atkbd, align 8, !dbg !4904
  call void @atkbd_disable(%struct.atkbd* %3) #11, !dbg !4905
  %4 = load %struct.atkbd*, %struct.atkbd** %atkbd, align 8, !dbg !4906
  %dev1 = getelementptr inbounds %struct.atkbd, %struct.atkbd* %4, i32 0, i32 1, !dbg !4907
  %5 = load %struct.input_dev*, %struct.input_dev** %dev1, align 8, !dbg !4907
  call void @input_unregister_device(%struct.input_dev* %5) #11, !dbg !4908
  %6 = load %struct.atkbd*, %struct.atkbd** %atkbd, align 8, !dbg !4909
  %event_work = getelementptr inbounds %struct.atkbd, %struct.atkbd* %6, i32 0, i32 22, !dbg !4910
  %call2 = call zeroext i1 @cancel_delayed_work_sync(%struct.delayed_work* %event_work) #11, !dbg !4911
  %7 = load %struct.serio*, %struct.serio** %serio.addr, align 8, !dbg !4912
  call void @serio_close(%struct.serio* %7) #11, !dbg !4913
  %8 = load %struct.serio*, %struct.serio** %serio.addr, align 8, !dbg !4914
  call void @serio_set_drvdata(%struct.serio* %8, i8* null) #11, !dbg !4915
  %9 = load %struct.atkbd*, %struct.atkbd** %atkbd, align 8, !dbg !4916
  %10 = bitcast %struct.atkbd* %9 to i8*, !dbg !4916
  call void @kfree(i8* %10) #11, !dbg !4917
  ret void, !dbg !4918
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @atkbd_cleanup(%struct.serio* %serio) #2 !dbg !4919 {
entry:
  %serio.addr = alloca %struct.serio*, align 8
  %atkbd = alloca %struct.atkbd*, align 8
  store %struct.serio* %serio, %struct.serio** %serio.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.serio** %serio.addr, metadata !4920, metadata !DIExpression()), !dbg !4921
  call void @llvm.dbg.declare(metadata %struct.atkbd** %atkbd, metadata !4922, metadata !DIExpression()), !dbg !4923
  %0 = load %struct.serio*, %struct.serio** %serio.addr, align 8, !dbg !4924
  %call = call i8* @serio_get_drvdata(%struct.serio* %0) #11, !dbg !4925
  %1 = bitcast i8* %call to %struct.atkbd*, !dbg !4925
  store %struct.atkbd* %1, %struct.atkbd** %atkbd, align 8, !dbg !4923
  %2 = load %struct.atkbd*, %struct.atkbd** %atkbd, align 8, !dbg !4926
  call void @atkbd_disable(%struct.atkbd* %2) #11, !dbg !4927
  %3 = load %struct.atkbd*, %struct.atkbd** %atkbd, align 8, !dbg !4928
  %ps2dev = getelementptr inbounds %struct.atkbd, %struct.atkbd* %3, i32 0, i32 0, !dbg !4929
  %call1 = call i32 @ps2_command(%struct.ps2dev* %ps2dev, i8* null, i32 246) #11, !dbg !4930
  ret void, !dbg !4931
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @serio_get_drvdata(%struct.serio* %serio) #2 !dbg !4932 {
entry:
  %serio.addr = alloca %struct.serio*, align 8
  store %struct.serio* %serio, %struct.serio** %serio.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.serio** %serio.addr, metadata !4935, metadata !DIExpression()), !dbg !4936
  %0 = load %struct.serio*, %struct.serio** %serio.addr, align 8, !dbg !4937
  %dev = getelementptr inbounds %struct.serio, %struct.serio* %0, i32 0, i32 18, !dbg !4938
  %call = call i8* @dev_get_drvdata(%struct.device* %dev) #11, !dbg !4939
  ret i8* %call, !dbg !4940
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @ps2_handle_ack(%struct.ps2dev*, i8 zeroext) #1

; Function Attrs: noredzone
declare dso_local zeroext i1 @ps2_handle_response(%struct.ps2dev*, i8 zeroext) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pm_wakeup_event(%struct.device* %dev, i32 %msec) #2 !dbg !4941 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %msec.addr = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !4944, metadata !DIExpression()), !dbg !4945
  store i32 %msec, i32* %msec.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %msec.addr, metadata !4946, metadata !DIExpression()), !dbg !4947
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !4948
  %1 = load i32, i32* %msec.addr, align 4, !dbg !4949
  call void @pm_wakeup_dev_event(%struct.device* %0, i32 %1, i1 zeroext false) #11, !dbg !4950
  ret void, !dbg !4951
}

; Function Attrs: noredzone
declare dso_local void @input_event(%struct.input_dev*, i32, i32, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @atkbd_need_xlate(i64 %xl_bit, i8 zeroext %code) #2 !dbg !4952 {
entry:
  %retval = alloca i1, align 1
  %xl_bit.addr = alloca i64, align 8
  %code.addr = alloca i8, align 1
  %i = alloca i32, align 4
  store i64 %xl_bit, i64* %xl_bit.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %xl_bit.addr, metadata !4955, metadata !DIExpression()), !dbg !4956
  store i8 %code, i8* %code.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %code.addr, metadata !4957, metadata !DIExpression()), !dbg !4958
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4959, metadata !DIExpression()), !dbg !4960
  %0 = load i8, i8* %code.addr, align 1, !dbg !4961
  %conv = zext i8 %0 to i32, !dbg !4961
  %cmp = icmp eq i32 %conv, 224, !dbg !4963
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !4964

lor.lhs.false:                                    ; preds = %entry
  %1 = load i8, i8* %code.addr, align 1, !dbg !4965
  %conv2 = zext i8 %1 to i32, !dbg !4965
  %cmp3 = icmp eq i32 %conv2, 225, !dbg !4966
  br i1 %cmp3, label %if.then, label %if.end, !dbg !4967

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i1 false, i1* %retval, align 1, !dbg !4968
  br label %return, !dbg !4968

if.end:                                           ; preds = %lor.lhs.false
  store i32 0, i32* %i, align 4, !dbg !4969
  br label %for.cond, !dbg !4971

for.cond:                                         ; preds = %for.inc, %if.end
  %2 = load i32, i32* %i, align 4, !dbg !4972
  %conv5 = sext i32 %2 to i64, !dbg !4972
  %cmp6 = icmp ult i64 %conv5, 6, !dbg !4974
  br i1 %cmp6, label %for.body, label %for.end, !dbg !4975

for.body:                                         ; preds = %for.cond
  %3 = load i8, i8* %code.addr, align 1, !dbg !4976
  %conv8 = zext i8 %3 to i32, !dbg !4976
  %4 = load i32, i32* %i, align 4, !dbg !4978
  %idxprom = sext i32 %4 to i64, !dbg !4979
  %arrayidx = getelementptr [6 x i32], [6 x i32]* @xl_table, i64 0, i64 %idxprom, !dbg !4979
  %5 = load i32, i32* %arrayidx, align 4, !dbg !4979
  %cmp9 = icmp eq i32 %conv8, %5, !dbg !4980
  br i1 %cmp9, label %if.then11, label %if.end13, !dbg !4981

if.then11:                                        ; preds = %for.body
  %6 = load i32, i32* %i, align 4, !dbg !4982
  %conv12 = sext i32 %6 to i64, !dbg !4982
  %call = call zeroext i1 @test_bit(i64 %conv12, i64* %xl_bit.addr) #11, !dbg !4983
  store i1 %call, i1* %retval, align 1, !dbg !4984
  br label %return, !dbg !4984

if.end13:                                         ; preds = %for.body
  br label %for.inc, !dbg !4985

for.inc:                                          ; preds = %if.end13
  %7 = load i32, i32* %i, align 4, !dbg !4986
  %inc = add i32 %7, 1, !dbg !4986
  store i32 %inc, i32* %i, align 4, !dbg !4986
  br label %for.cond, !dbg !4987, !llvm.loop !4988

for.end:                                          ; preds = %for.cond
  store i1 true, i1* %retval, align 1, !dbg !4990
  br label %return, !dbg !4990

return:                                           ; preds = %for.end, %if.then11, %if.then
  %8 = load i1, i1* %retval, align 1, !dbg !4991
  ret i1 %8, !dbg !4991
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @atkbd_calculate_xl_bit(%struct.atkbd* %atkbd, i8 zeroext %code) #2 !dbg !4992 {
entry:
  %atkbd.addr = alloca %struct.atkbd*, align 8
  %code.addr = alloca i8, align 1
  %i = alloca i32, align 4
  store %struct.atkbd* %atkbd, %struct.atkbd** %atkbd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.atkbd** %atkbd.addr, metadata !4995, metadata !DIExpression()), !dbg !4996
  store i8 %code, i8* %code.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %code.addr, metadata !4997, metadata !DIExpression()), !dbg !4998
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4999, metadata !DIExpression()), !dbg !5000
  store i32 0, i32* %i, align 4, !dbg !5001
  br label %for.cond, !dbg !5003

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !5004
  %conv = sext i32 %0 to i64, !dbg !5004
  %cmp = icmp ult i64 %conv, 6, !dbg !5006
  br i1 %cmp, label %for.body, label %for.end, !dbg !5007

for.body:                                         ; preds = %for.cond
  %1 = load i8, i8* %code.addr, align 1, !dbg !5008
  %conv2 = zext i8 %1 to i32, !dbg !5008
  %2 = load i32, i32* %i, align 4, !dbg !5011
  %idxprom = sext i32 %2 to i64, !dbg !5012
  %arrayidx = getelementptr [6 x i32], [6 x i32]* @xl_table, i64 0, i64 %idxprom, !dbg !5012
  %3 = load i32, i32* %arrayidx, align 4, !dbg !5012
  %xor = xor i32 %conv2, %3, !dbg !5013
  %and = and i32 %xor, 127, !dbg !5014
  %tobool = icmp ne i32 %and, 0, !dbg !5014
  br i1 %tobool, label %if.end10, label %if.then, !dbg !5015

if.then:                                          ; preds = %for.body
  %4 = load i8, i8* %code.addr, align 1, !dbg !5016
  %conv3 = zext i8 %4 to i32, !dbg !5016
  %and4 = and i32 %conv3, 128, !dbg !5019
  %tobool5 = icmp ne i32 %and4, 0, !dbg !5019
  br i1 %tobool5, label %if.then6, label %if.else, !dbg !5020

if.then6:                                         ; preds = %if.then
  %5 = load i32, i32* %i, align 4, !dbg !5021
  %conv7 = sext i32 %5 to i64, !dbg !5021
  %6 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !5022
  %xl_bit = getelementptr inbounds %struct.atkbd, %struct.atkbd* %6, i32 0, i32 18, !dbg !5023
  call void @__clear_bit(i64 %conv7, i64* %xl_bit) #11, !dbg !5024
  br label %if.end, !dbg !5024

if.else:                                          ; preds = %if.then
  %7 = load i32, i32* %i, align 4, !dbg !5025
  %conv8 = sext i32 %7 to i64, !dbg !5025
  %8 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !5026
  %xl_bit9 = getelementptr inbounds %struct.atkbd, %struct.atkbd* %8, i32 0, i32 18, !dbg !5027
  call void @__set_bit(i64 %conv8, i64* %xl_bit9) #11, !dbg !5028
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then6
  br label %for.end, !dbg !5029

if.end10:                                         ; preds = %for.body
  br label %for.inc, !dbg !5030

for.inc:                                          ; preds = %if.end10
  %9 = load i32, i32* %i, align 4, !dbg !5031
  %inc = add i32 %9, 1, !dbg !5031
  store i32 %inc, i32* %i, align 4, !dbg !5031
  br label %for.cond, !dbg !5032, !llvm.loop !5033

for.end:                                          ; preds = %if.end, %for.cond
  ret void, !dbg !5035
}

; Function Attrs: noredzone
declare dso_local void @serio_reconnect(%struct.serio*) #1

; Function Attrs: noredzone
declare dso_local i32 @__printk_ratelimit(i8*) #1

; Function Attrs: cold noredzone
declare dso_local void @_dev_warn(%struct.device*, i8*, ...) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @atkbd_compat_scancode(%struct.atkbd* %atkbd, i32 %code) #2 !dbg !5036 {
entry:
  %atkbd.addr = alloca %struct.atkbd*, align 8
  %code.addr = alloca i32, align 4
  store %struct.atkbd* %atkbd, %struct.atkbd** %atkbd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.atkbd** %atkbd.addr, metadata !5037, metadata !DIExpression()), !dbg !5038
  store i32 %code, i32* %code.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %code.addr, metadata !5039, metadata !DIExpression()), !dbg !5040
  %0 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !5041
  %set = getelementptr inbounds %struct.atkbd, %struct.atkbd* %0, i32 0, i32 7, !dbg !5043
  %1 = load i8, i8* %set, align 8, !dbg !5043
  %conv = zext i8 %1 to i32, !dbg !5041
  %cmp = icmp eq i32 %conv, 3, !dbg !5044
  br i1 %cmp, label %if.then, label %if.else, !dbg !5045

if.then:                                          ; preds = %entry
  %2 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !5046
  %emul = getelementptr inbounds %struct.atkbd, %struct.atkbd* %2, i32 0, i32 15, !dbg !5049
  %3 = load i8, i8* %emul, align 8, !dbg !5049
  %conv2 = zext i8 %3 to i32, !dbg !5046
  %cmp3 = icmp eq i32 %conv2, 1, !dbg !5050
  br i1 %cmp3, label %if.then5, label %if.end, !dbg !5051

if.then5:                                         ; preds = %if.then
  %4 = load i32, i32* %code.addr, align 4, !dbg !5052
  %or = or i32 %4, 256, !dbg !5052
  store i32 %or, i32* %code.addr, align 4, !dbg !5052
  br label %if.end, !dbg !5053

if.end:                                           ; preds = %if.then5, %if.then
  br label %if.end15, !dbg !5054

if.else:                                          ; preds = %entry
  %5 = load i32, i32* %code.addr, align 4, !dbg !5055
  %and = and i32 %5, 127, !dbg !5057
  %6 = load i32, i32* %code.addr, align 4, !dbg !5058
  %and6 = and i32 %6, 128, !dbg !5059
  %shl = shl i32 %and6, 1, !dbg !5060
  %or7 = or i32 %and, %shl, !dbg !5061
  store i32 %or7, i32* %code.addr, align 4, !dbg !5062
  %7 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !5063
  %emul8 = getelementptr inbounds %struct.atkbd, %struct.atkbd* %7, i32 0, i32 15, !dbg !5065
  %8 = load i8, i8* %emul8, align 8, !dbg !5065
  %conv9 = zext i8 %8 to i32, !dbg !5063
  %cmp10 = icmp eq i32 %conv9, 1, !dbg !5066
  br i1 %cmp10, label %if.then12, label %if.end14, !dbg !5067

if.then12:                                        ; preds = %if.else
  %9 = load i32, i32* %code.addr, align 4, !dbg !5068
  %or13 = or i32 %9, 128, !dbg !5068
  store i32 %or13, i32* %code.addr, align 4, !dbg !5068
  br label %if.end14, !dbg !5069

if.end14:                                         ; preds = %if.then12, %if.else
  br label %if.end15

if.end15:                                         ; preds = %if.end14, %if.end
  %10 = load i32, i32* %code.addr, align 4, !dbg !5070
  ret i32 %10, !dbg !5071
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @test_bit(i64 %nr, i64* %addr) #2 !dbg !5072 {
entry:
  %nr.addr.i3 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i3, metadata !5079, metadata !DIExpression()), !dbg !5082
  %addr.addr.i4 = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i4, metadata !5084, metadata !DIExpression()), !dbg !5085
  %oldbit.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %oldbit.i, metadata !5086, metadata !DIExpression()), !dbg !5087
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !5088, metadata !DIExpression()), !dbg !5090
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !5092, metadata !DIExpression()), !dbg !5093
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !5094, metadata !DIExpression()), !dbg !5102
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !5104, metadata !DIExpression()), !dbg !5105
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !5106, metadata !DIExpression()), !dbg !5107
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !5108, metadata !DIExpression()), !dbg !5109
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !5110
  %1 = load i64, i64* %nr.addr, align 8, !dbg !5111
  %div = sdiv i64 %1, 64, !dbg !5111
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !5112
  %2 = bitcast i64* %add.ptr to i8*, !dbg !5110
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !5113
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !5114
  %conv.i = trunc i64 %4 to i32, !dbg !5114
  %call.i = call zeroext i1 @kasan_check_read(i8* %3, i32 %conv.i) #13, !dbg !5115
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !5116
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !5116
  call void @kcsan_check_access(i8* %5, i64 %6, i32 4) #13, !dbg !5116
  %7 = load i64, i64* %nr.addr, align 8, !dbg !5117
  %8 = call i1 @llvm.is.constant.i64(i64 %7), !dbg !5117
  br i1 %8, label %cond.true, label %cond.false, !dbg !5117

cond.true:                                        ; preds = %entry
  %9 = load i64, i64* %nr.addr, align 8, !dbg !5117
  %10 = load i64*, i64** %addr.addr, align 8, !dbg !5117
  store i64 %9, i64* %nr.addr.i, align 8
  store i64* %10, i64** %addr.addr.i, align 8
  %11 = load i64, i64* %nr.addr.i, align 8, !dbg !5118
  %and.i = and i64 %11, 63, !dbg !5119
  %shl.i = shl i64 1, %and.i, !dbg !5120
  %12 = load i64*, i64** %addr.addr.i, align 8, !dbg !5121
  %13 = load i64, i64* %nr.addr.i, align 8, !dbg !5122
  %shr.i = ashr i64 %13, 6, !dbg !5123
  %arrayidx.i = getelementptr i64, i64* %12, i64 %shr.i, !dbg !5121
  %14 = load volatile i64, i64* %arrayidx.i, align 8, !dbg !5121
  %and1.i = and i64 %shl.i, %14, !dbg !5124
  %cmp.i = icmp ne i64 %and1.i, 0, !dbg !5125
  %conv = zext i1 %cmp.i to i32, !dbg !5117
  br label %cond.end, !dbg !5117

cond.false:                                       ; preds = %entry
  %15 = load i64, i64* %nr.addr, align 8, !dbg !5117
  %16 = load i64*, i64** %addr.addr, align 8, !dbg !5117
  store i64 %15, i64* %nr.addr.i3, align 8
  store i64* %16, i64** %addr.addr.i4, align 8
  %17 = load i64*, i64** %addr.addr.i4, align 8, !dbg !5126
  %18 = load i64, i64* %nr.addr.i3, align 8, !dbg !5127
  %19 = call i8 asm sideeffect " btq  $2,$1\0A\09/* output condition code c*/\0A", "={@ccc},*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %17, i64 %18) #10, !dbg !5128, !srcloc !5129
  store i8 %19, i8* %oldbit.i, align 1, !dbg !5128
  %20 = load i8, i8* %oldbit.i, align 1, !dbg !5130
  %tobool.i = trunc i8 %20 to i1, !dbg !5130
  %conv2 = zext i1 %tobool.i to i32, !dbg !5117
  br label %cond.end, !dbg !5117

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv, %cond.true ], [ %conv2, %cond.false ], !dbg !5117
  %tobool = icmp ne i32 %cond, 0, !dbg !5117
  ret i1 %tobool, !dbg !5131
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @input_sync(%struct.input_dev* %dev) #2 !dbg !5132 {
entry:
  %dev.addr = alloca %struct.input_dev*, align 8
  store %struct.input_dev* %dev, %struct.input_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.input_dev** %dev.addr, metadata !5133, metadata !DIExpression()), !dbg !5134
  %0 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !5135
  call void @input_event(%struct.input_dev* %0, i32 0, i32 0, i32 0) #11, !dbg !5136
  ret void, !dbg !5137
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @input_report_key(%struct.input_dev* %dev, i32 %code, i32 %value) #2 !dbg !5138 {
entry:
  %dev.addr = alloca %struct.input_dev*, align 8
  %code.addr = alloca i32, align 4
  %value.addr = alloca i32, align 4
  store %struct.input_dev* %dev, %struct.input_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.input_dev** %dev.addr, metadata !5141, metadata !DIExpression()), !dbg !5142
  store i32 %code, i32* %code.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %code.addr, metadata !5143, metadata !DIExpression()), !dbg !5144
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !5145, metadata !DIExpression()), !dbg !5146
  %0 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !5147
  %1 = load i32, i32* %code.addr, align 4, !dbg !5148
  %2 = load i32, i32* %value.addr, align 4, !dbg !5149
  %tobool = icmp ne i32 %2, 0, !dbg !5150
  %lnot = xor i1 %tobool, true, !dbg !5150
  %lnot1 = xor i1 %lnot, true, !dbg !5151
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !5151
  call void @input_event(%struct.input_dev* %0, i32 1, i32 %1, i32 %lnot.ext) #11, !dbg !5152
  ret void, !dbg !5153
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @input_report_rel(%struct.input_dev* %dev, i32 %code, i32 %value) #2 !dbg !5154 {
entry:
  %dev.addr = alloca %struct.input_dev*, align 8
  %code.addr = alloca i32, align 4
  %value.addr = alloca i32, align 4
  store %struct.input_dev* %dev, %struct.input_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.input_dev** %dev.addr, metadata !5155, metadata !DIExpression()), !dbg !5156
  store i32 %code, i32* %code.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %code.addr, metadata !5157, metadata !DIExpression()), !dbg !5158
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !5159, metadata !DIExpression()), !dbg !5160
  %0 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !5161
  %1 = load i32, i32* %code.addr, align 4, !dbg !5162
  %2 = load i32, i32* %value.addr, align 4, !dbg !5163
  call void @input_event(%struct.input_dev* %0, i32 2, i32 %1, i32 %2) #11, !dbg !5164
  ret void, !dbg !5165
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @dev_get_drvdata(%struct.device* %dev) #2 !dbg !5166 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5169, metadata !DIExpression()), !dbg !5170
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5171
  %driver_data = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 8, !dbg !5172
  %1 = load i8*, i8** %driver_data, align 8, !dbg !5172
  ret i8* %1, !dbg !5173
}

; Function Attrs: noredzone
declare dso_local void @pm_wakeup_dev_event(%struct.device*, i32, i1 zeroext) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__clear_bit(i64 %nr, i64* %addr) #2 !dbg !5174 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !5178, metadata !DIExpression()), !dbg !5180
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !5182, metadata !DIExpression()), !dbg !5183
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !5184, metadata !DIExpression()), !dbg !5186
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !5188, metadata !DIExpression()), !dbg !5189
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !5190, metadata !DIExpression()), !dbg !5191
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !5192, metadata !DIExpression()), !dbg !5193
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !5194
  %1 = load i64, i64* %nr.addr, align 8, !dbg !5195
  %div = sdiv i64 %1, 64, !dbg !5195
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !5196
  %2 = bitcast i64* %add.ptr to i8*, !dbg !5194
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !5197
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !5198
  %conv.i = trunc i64 %4 to i32, !dbg !5198
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #13, !dbg !5199
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !5200
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !5200
  call void @kcsan_check_access(i8* %5, i64 %6, i32 1) #13, !dbg !5200
  %7 = load i64, i64* %nr.addr, align 8, !dbg !5201
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !5202
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64*, i64** %addr.addr.i, align 8, !dbg !5203
  %10 = load i64, i64* %nr.addr.i, align 8, !dbg !5204
  call void asm sideeffect " btrq  $1,$0", "*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %9, i64 %10) #10, !dbg !5205, !srcloc !5206
  ret void, !dbg !5207
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__set_bit(i64 %nr, i64* %addr) #2 !dbg !5208 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !5209, metadata !DIExpression()), !dbg !5211
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !5213, metadata !DIExpression()), !dbg !5214
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !5184, metadata !DIExpression()), !dbg !5215
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !5188, metadata !DIExpression()), !dbg !5217
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !5218, metadata !DIExpression()), !dbg !5219
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !5220, metadata !DIExpression()), !dbg !5221
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !5222
  %1 = load i64, i64* %nr.addr, align 8, !dbg !5223
  %div = sdiv i64 %1, 64, !dbg !5223
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !5224
  %2 = bitcast i64* %add.ptr to i8*, !dbg !5222
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !5225
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !5226
  %conv.i = trunc i64 %4 to i32, !dbg !5226
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #13, !dbg !5227
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !5228
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !5228
  call void @kcsan_check_access(i8* %5, i64 %6, i32 1) #13, !dbg !5228
  %7 = load i64, i64* %nr.addr, align 8, !dbg !5229
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !5230
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64*, i64** %addr.addr.i, align 8, !dbg !5231
  %10 = load i64, i64* %nr.addr.i, align 8, !dbg !5232
  call void asm sideeffect " btsq  $1,$0", "*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %9, i64 %10) #10, !dbg !5233, !srcloc !5234
  ret void, !dbg !5235
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @kasan_check_write(i8* %p, i32 %size) #2 !dbg !5236 {
entry:
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !5240, metadata !DIExpression()), !dbg !5241
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !5242, metadata !DIExpression()), !dbg !5243
  ret i1 true, !dbg !5244
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @kcsan_check_access(i8* %ptr, i64 %size, i32 %type) #2 !dbg !5245 {
entry:
  %ptr.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %type.addr = alloca i32, align 4
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !5249, metadata !DIExpression()), !dbg !5250
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !5251, metadata !DIExpression()), !dbg !5252
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !5253, metadata !DIExpression()), !dbg !5254
  ret void, !dbg !5255
}

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i64(i64) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @kasan_check_read(i8* %p, i32 %size) #2 !dbg !5256 {
entry:
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !5257, metadata !DIExpression()), !dbg !5258
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !5259, metadata !DIExpression()), !dbg !5260
  ret i1 true, !dbg !5261
}

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i32(i32) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @_msecs_to_jiffies(i32 %m) #2 !dbg !5262 {
entry:
  %m.addr = alloca i32, align 4
  store i32 %m, i32* %m.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %m.addr, metadata !5263, metadata !DIExpression()), !dbg !5264
  %0 = load i32, i32* %m.addr, align 4, !dbg !5265
  %conv = zext i32 %0 to i64, !dbg !5265
  %add = add i64 %conv, 4, !dbg !5266
  %sub = sub i64 %add, 1, !dbg !5267
  %div = sdiv i64 %sub, 4, !dbg !5268
  ret i64 %div, !dbg !5269
}

; Function Attrs: noredzone
declare dso_local i64 @__msecs_to_jiffies(i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kzalloc(i64 %size, i32 %flags) #2 !dbg !5270 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !5273, metadata !DIExpression()), !dbg !5277
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !5283, metadata !DIExpression()), !dbg !5284
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !5285, metadata !DIExpression()), !dbg !5286
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !5287, metadata !DIExpression()), !dbg !5288
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !5289, metadata !DIExpression()), !dbg !5293
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !5295, metadata !DIExpression()), !dbg !5299
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !5301, metadata !DIExpression()), !dbg !5305
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !5310, metadata !DIExpression()), !dbg !5311
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !5312, metadata !DIExpression()), !dbg !5313
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !5314, metadata !DIExpression()), !dbg !5315
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !5316, metadata !DIExpression()), !dbg !5317
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !5318, metadata !DIExpression()), !dbg !5319
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !5320, metadata !DIExpression()), !dbg !5321
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !5322, metadata !DIExpression()), !dbg !5323
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !5324, metadata !DIExpression()), !dbg !5325
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !5326, metadata !DIExpression()), !dbg !5327
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !5328, metadata !DIExpression()), !dbg !5329
  %0 = load i64, i64* %size.addr, align 8, !dbg !5330
  %1 = load i32, i32* %flags.addr, align 4, !dbg !5331
  %or = or i32 %1, 256, !dbg !5332
  store i64 %0, i64* %size.addr.i, align 8
  store i32 %or, i32* %flags.addr.i, align 4
  %2 = load i64, i64* %size.addr.i, align 8, !dbg !5333
  %3 = call i1 @llvm.is.constant.i64(i64 %2) #10, !dbg !5334
  br i1 %3, label %if.then.i, label %if.end9.i, !dbg !5335

if.then.i:                                        ; preds = %entry
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !5336
  %cmp.i = icmp ugt i64 %4, 8192, !dbg !5337
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !5338

if.then1.i:                                       ; preds = %if.then.i
  %5 = load i64, i64* %size.addr.i, align 8, !dbg !5339
  %6 = load i32, i32* %flags.addr.i, align 4, !dbg !5340
  store i64 %5, i64* %size.addr.i.i, align 8
  store i32 %6, i32* %flags.addr.i.i, align 4
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !5341
  %call.i.i = call i32 @get_order(i64 %7) #14, !dbg !5342
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !5319
  %8 = load i64, i64* %size.addr.i.i, align 8, !dbg !5343
  %9 = load i32, i32* %flags.addr.i.i, align 4, !dbg !5344
  %10 = load i32, i32* %order.i.i, align 4, !dbg !5345
  store i64 %8, i64* %size.addr.i.i.i, align 8
  store i32 %9, i32* %flags.addr.i.i.i, align 4
  store i32 %10, i32* %order.addr.i.i.i, align 4
  %11 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !5346
  %12 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !5347
  %13 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !5348
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %11, i32 %12, i32 %13) #13, !dbg !5349
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !5349
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !5349
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !5349
  call void @llvm.assume(i1 %maskcond.i.i.i) #10, !dbg !5349
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !5350
  br label %kmalloc.exit, !dbg !5350

if.end.i:                                         ; preds = %if.then.i
  %14 = load i64, i64* %size.addr.i, align 8, !dbg !5351
  store i64 %14, i64* %size.addr.i11.i, align 8
  %15 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5352
  %tobool.i.i = icmp ne i64 %15, 0, !dbg !5352
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !5354

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !5355
  br label %kmalloc_index.exit.i, !dbg !5355

if.end.i.i:                                       ; preds = %if.end.i
  %16 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5356
  %cmp.i.i = icmp ule i64 %16, 8, !dbg !5358
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !5359

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !5360
  br label %kmalloc_index.exit.i, !dbg !5360

if.end2.i.i:                                      ; preds = %if.end.i.i
  %17 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5361
  %cmp3.i.i = icmp ugt i64 %17, 64, !dbg !5363
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !5364

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %18 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5365
  %cmp4.i.i = icmp ule i64 %18, 96, !dbg !5366
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !5367

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !5368
  br label %kmalloc_index.exit.i, !dbg !5368

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %19 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5369
  %cmp7.i.i = icmp ugt i64 %19, 128, !dbg !5371
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !5372

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %20 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5373
  %cmp9.i.i = icmp ule i64 %20, 192, !dbg !5374
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !5375

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !5376
  br label %kmalloc_index.exit.i, !dbg !5376

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %21 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5377
  %cmp12.i.i = icmp ule i64 %21, 8, !dbg !5379
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !5380

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !5381
  br label %kmalloc_index.exit.i, !dbg !5381

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %22 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5382
  %cmp15.i.i = icmp ule i64 %22, 16, !dbg !5384
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !5385

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !5386
  br label %kmalloc_index.exit.i, !dbg !5386

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %23 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5387
  %cmp18.i.i = icmp ule i64 %23, 32, !dbg !5389
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !5390

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !5391
  br label %kmalloc_index.exit.i, !dbg !5391

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %24 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5392
  %cmp21.i.i = icmp ule i64 %24, 64, !dbg !5394
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !5395

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !5396
  br label %kmalloc_index.exit.i, !dbg !5396

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %25 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5397
  %cmp24.i.i = icmp ule i64 %25, 128, !dbg !5399
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !5400

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !5401
  br label %kmalloc_index.exit.i, !dbg !5401

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %26 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5402
  %cmp27.i.i = icmp ule i64 %26, 256, !dbg !5404
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !5405

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !5406
  br label %kmalloc_index.exit.i, !dbg !5406

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %27 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5407
  %cmp30.i.i = icmp ule i64 %27, 512, !dbg !5409
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !5410

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !5411
  br label %kmalloc_index.exit.i, !dbg !5411

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %28 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5412
  %cmp33.i.i = icmp ule i64 %28, 1024, !dbg !5414
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !5415

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !5416
  br label %kmalloc_index.exit.i, !dbg !5416

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5417
  %cmp36.i.i = icmp ule i64 %29, 2048, !dbg !5419
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !5420

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !5421
  br label %kmalloc_index.exit.i, !dbg !5421

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5422
  %cmp39.i.i = icmp ule i64 %30, 4096, !dbg !5424
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !5425

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !5426
  br label %kmalloc_index.exit.i, !dbg !5426

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5427
  %cmp42.i.i = icmp ule i64 %31, 8192, !dbg !5429
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !5430

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !5431
  br label %kmalloc_index.exit.i, !dbg !5431

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5432
  %cmp45.i.i = icmp ule i64 %32, 16384, !dbg !5434
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !5435

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !5436
  br label %kmalloc_index.exit.i, !dbg !5436

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5437
  %cmp48.i.i = icmp ule i64 %33, 32768, !dbg !5439
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !5440

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !5441
  br label %kmalloc_index.exit.i, !dbg !5441

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5442
  %cmp51.i.i = icmp ule i64 %34, 65536, !dbg !5444
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !5445

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !5446
  br label %kmalloc_index.exit.i, !dbg !5446

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5447
  %cmp54.i.i = icmp ule i64 %35, 131072, !dbg !5449
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !5450

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !5451
  br label %kmalloc_index.exit.i, !dbg !5451

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5452
  %cmp57.i.i = icmp ule i64 %36, 262144, !dbg !5454
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !5455

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !5456
  br label %kmalloc_index.exit.i, !dbg !5456

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5457
  %cmp60.i.i = icmp ule i64 %37, 524288, !dbg !5459
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !5460

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !5461
  br label %kmalloc_index.exit.i, !dbg !5461

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5462
  %cmp63.i.i = icmp ule i64 %38, 1048576, !dbg !5464
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !5465

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !5466
  br label %kmalloc_index.exit.i, !dbg !5466

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5467
  %cmp66.i.i = icmp ule i64 %39, 2097152, !dbg !5469
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !5470

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !5471
  br label %kmalloc_index.exit.i, !dbg !5471

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5472
  %cmp69.i.i = icmp ule i64 %40, 4194304, !dbg !5474
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !5475

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !5476
  br label %kmalloc_index.exit.i, !dbg !5476

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5477
  %cmp72.i.i = icmp ule i64 %41, 8388608, !dbg !5479
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !5480

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !5481
  br label %kmalloc_index.exit.i, !dbg !5481

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5482
  %cmp75.i.i = icmp ule i64 %42, 16777216, !dbg !5484
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !5485

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !5486
  br label %kmalloc_index.exit.i, !dbg !5486

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5487
  %cmp78.i.i = icmp ule i64 %43, 33554432, !dbg !5489
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !5490

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !5491
  br label %kmalloc_index.exit.i, !dbg !5491

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5492
  %cmp81.i.i = icmp ule i64 %44, 67108864, !dbg !5494
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !5495

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !5496
  br label %kmalloc_index.exit.i, !dbg !5496

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14, i64 0, i64 0), i32 382, i32 0, i64 12) #10, !dbg !5497, !srcloc !5500
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 105) #10, !dbg !5501, !srcloc !5504
  unreachable, !dbg !5505

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %45 = load i32, i32* %retval.i.i, align 4, !dbg !5506
  store i32 %45, i32* %index.i, align 4, !dbg !5507
  %46 = load i32, i32* %index.i, align 4, !dbg !5508
  %tobool.i = icmp ne i32 %46, 0, !dbg !5508
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !5510

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !5511
  br label %kmalloc.exit, !dbg !5511

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %47 = load i32, i32* %flags.addr.i, align 4, !dbg !5512
  store i32 %47, i32* %flags.addr.i13.i, align 4
  %48 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !5513
  %and.i.i = and i32 %48, 17, !dbg !5513
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !5513
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !5513
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !5513
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !5513
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !5515

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !5516
  br label %kmalloc_type.exit.i, !dbg !5516

if.end.i16.i:                                     ; preds = %if.end4.i
  %49 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !5517
  %and2.i.i = and i32 %49, 1, !dbg !5518
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !5517
  %50 = zext i1 %tobool3.i.i to i64, !dbg !5517
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !5517
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !5519
  br label %kmalloc_type.exit.i, !dbg !5519

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %51 = load i32, i32* %retval.i12.i, align 4, !dbg !5520
  %idxprom.i = zext i32 %51 to i64, !dbg !5521
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !5521
  %52 = load i32, i32* %index.i, align 4, !dbg !5522
  %idxprom6.i = zext i32 %52 to i64, !dbg !5521
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !5521
  %53 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !5521
  %54 = load i32, i32* %flags.addr.i, align 4, !dbg !5523
  %55 = load i64, i64* %size.addr.i, align 8, !dbg !5524
  store %struct.kmem_cache* %53, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %54, i32* %flags.addr.i17.i, align 4
  store i64 %55, i64* %size.addr.i18.i, align 8
  %56 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !5525
  %57 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !5526
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %56, i32 %57) #13, !dbg !5527
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !5527
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !5527
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !5527
  call void @llvm.assume(i1 %maskcond.i.i) #10, !dbg !5527
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !5288
  %58 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !5528
  %59 = load i8*, i8** %ret.i.i, align 8, !dbg !5529
  %60 = load i64, i64* %size.addr.i18.i, align 8, !dbg !5530
  %61 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !5531
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %58, i8* %59, i64 %60, i32 %61) #13, !dbg !5532
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !5533
  %62 = load i8*, i8** %ret.i.i, align 8, !dbg !5534
  store i8* %62, i8** %retval.i, align 8, !dbg !5535
  br label %kmalloc.exit, !dbg !5535

if.end9.i:                                        ; preds = %entry
  %63 = load i64, i64* %size.addr.i, align 8, !dbg !5536
  %64 = load i32, i32* %flags.addr.i, align 4, !dbg !5537
  %call10.i = call noalias i8* @__kmalloc(i64 %63, i32 %64) #13, !dbg !5538
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !5538
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !5538
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !5538
  call void @llvm.assume(i1 %maskcond.i) #10, !dbg !5538
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !5539
  br label %kmalloc.exit, !dbg !5539

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %65 = load i8*, i8** %retval.i, align 8, !dbg !5540
  ret i8* %65, !dbg !5541
}

; Function Attrs: noredzone
declare dso_local %struct.input_dev* @input_allocate_device() #1

; Function Attrs: noredzone
declare dso_local void @ps2_init(%struct.ps2dev*, %struct.serio*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__init_work(%struct.work_struct* %work, i32 %onstack) #2 !dbg !5542 {
entry:
  %work.addr = alloca %struct.work_struct*, align 8
  %onstack.addr = alloca i32, align 4
  store %struct.work_struct* %work, %struct.work_struct** %work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.work_struct** %work.addr, metadata !5545, metadata !DIExpression()), !dbg !5546
  store i32 %onstack, i32* %onstack.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %onstack.addr, metadata !5547, metadata !DIExpression()), !dbg !5548
  ret void, !dbg !5549
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #6

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @INIT_LIST_HEAD(%struct.list_head* %list) #2 !dbg !5550 {
entry:
  %list.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %list, %struct.list_head** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %list.addr, metadata !5554, metadata !DIExpression()), !dbg !5555
  br label %do.body, !dbg !5556

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !5557

do.body1:                                         ; preds = %do.body
  br label %do.end, !dbg !5559

do.end:                                           ; preds = %do.body1
  br label %do.body2, !dbg !5557

do.body2:                                         ; preds = %do.end
  %0 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !5561
  %1 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !5561
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 0, !dbg !5561
  store volatile %struct.list_head* %0, %struct.list_head** %next, align 8, !dbg !5561
  br label %do.end3, !dbg !5561

do.end3:                                          ; preds = %do.body2
  br label %do.end4, !dbg !5557

do.end4:                                          ; preds = %do.end3
  %2 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !5563
  %3 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !5564
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 1, !dbg !5565
  store %struct.list_head* %2, %struct.list_head** %prev, align 8, !dbg !5566
  ret void, !dbg !5567
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @atkbd_event_work(%struct.work_struct* %work) #2 !dbg !5568 {
entry:
  %retval.i = alloca i64, align 8
  %m.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m.addr.i, metadata !4333, metadata !DIExpression()), !dbg !5569
  %work.addr = alloca %struct.work_struct*, align 8
  %atkbd = alloca %struct.atkbd*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.atkbd*, align 8
  store %struct.work_struct* %work, %struct.work_struct** %work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.work_struct** %work.addr, metadata !5573, metadata !DIExpression()), !dbg !5574
  call void @llvm.dbg.declare(metadata %struct.atkbd** %atkbd, metadata !5575, metadata !DIExpression()), !dbg !5576
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !5577, metadata !DIExpression()), !dbg !5579
  %0 = load %struct.work_struct*, %struct.work_struct** %work.addr, align 8, !dbg !5579
  %1 = bitcast %struct.work_struct* %0 to i8*, !dbg !5579
  store i8* %1, i8** %__mptr, align 8, !dbg !5579
  br label %do.body, !dbg !5579

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !5580

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !5579
  %add.ptr = getelementptr i8, i8* %2, i64 -1320, !dbg !5579
  %3 = bitcast i8* %add.ptr to %struct.atkbd*, !dbg !5579
  store %struct.atkbd* %3, %struct.atkbd** %tmp, align 8, !dbg !5580
  %4 = load %struct.atkbd*, %struct.atkbd** %tmp, align 8, !dbg !5579
  store %struct.atkbd* %4, %struct.atkbd** %atkbd, align 8, !dbg !5576
  %5 = load %struct.atkbd*, %struct.atkbd** %atkbd, align 8, !dbg !5582
  %mutex = getelementptr inbounds %struct.atkbd, %struct.atkbd* %5, i32 0, i32 25, !dbg !5583
  call void @mutex_lock(%struct.mutex* %mutex) #11, !dbg !5584
  %6 = load %struct.atkbd*, %struct.atkbd** %atkbd, align 8, !dbg !5585
  %enabled = getelementptr inbounds %struct.atkbd, %struct.atkbd* %6, i32 0, i32 14, !dbg !5586
  %7 = load i8, i8* %enabled, align 1, !dbg !5586
  %tobool = trunc i8 %7 to i1, !dbg !5586
  br i1 %tobool, label %if.else, label %if.then, !dbg !5587

if.then:                                          ; preds = %do.end
  %8 = load %struct.atkbd*, %struct.atkbd** %atkbd, align 8, !dbg !5588
  %event_work = getelementptr inbounds %struct.atkbd, %struct.atkbd* %8, i32 0, i32 22, !dbg !5589
  store i32 100, i32* %m.addr.i, align 4
  %9 = load i32, i32* %m.addr.i, align 4, !dbg !5590
  %10 = call i1 @llvm.is.constant.i32(i32 %9) #10, !dbg !5591
  br i1 %10, label %if.then.i, label %if.else.i, !dbg !5592

if.then.i:                                        ; preds = %if.then
  %11 = load i32, i32* %m.addr.i, align 4, !dbg !5593
  %cmp.i = icmp slt i32 %11, 0, !dbg !5594
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !5595

if.then1.i:                                       ; preds = %if.then.i
  store i64 4611686018427387902, i64* %retval.i, align 8, !dbg !5596
  br label %msecs_to_jiffies.exit, !dbg !5596

if.end.i:                                         ; preds = %if.then.i
  %12 = load i32, i32* %m.addr.i, align 4, !dbg !5597
  %call.i = call i64 @_msecs_to_jiffies(i32 %12) #13, !dbg !5598
  store i64 %call.i, i64* %retval.i, align 8, !dbg !5599
  br label %msecs_to_jiffies.exit, !dbg !5599

if.else.i:                                        ; preds = %if.then
  %13 = load i32, i32* %m.addr.i, align 4, !dbg !5600
  %call2.i = call i64 @__msecs_to_jiffies(i32 %13) #13, !dbg !5601
  store i64 %call2.i, i64* %retval.i, align 8, !dbg !5602
  br label %msecs_to_jiffies.exit, !dbg !5602

msecs_to_jiffies.exit:                            ; preds = %if.then1.i, %if.end.i, %if.else.i
  %14 = load i64, i64* %retval.i, align 8, !dbg !5603
  %call1 = call zeroext i1 @schedule_delayed_work(%struct.delayed_work* %event_work, i64 %14) #11, !dbg !5604
  br label %if.end10, !dbg !5605

if.else:                                          ; preds = %do.end
  %15 = load %struct.atkbd*, %struct.atkbd** %atkbd, align 8, !dbg !5606
  %event_mask = getelementptr inbounds %struct.atkbd, %struct.atkbd* %15, i32 0, i32 24, !dbg !5609
  %call2 = call zeroext i1 @test_and_clear_bit(i64 0, i64* %event_mask) #11, !dbg !5610
  br i1 %call2, label %if.then3, label %if.end, !dbg !5611

if.then3:                                         ; preds = %if.else
  %16 = load %struct.atkbd*, %struct.atkbd** %atkbd, align 8, !dbg !5612
  %call4 = call i32 @atkbd_set_leds(%struct.atkbd* %16) #11, !dbg !5613
  br label %if.end, !dbg !5613

if.end:                                           ; preds = %if.then3, %if.else
  %17 = load %struct.atkbd*, %struct.atkbd** %atkbd, align 8, !dbg !5614
  %event_mask5 = getelementptr inbounds %struct.atkbd, %struct.atkbd* %17, i32 0, i32 24, !dbg !5616
  %call6 = call zeroext i1 @test_and_clear_bit(i64 1, i64* %event_mask5) #11, !dbg !5617
  br i1 %call6, label %if.then7, label %if.end9, !dbg !5618

if.then7:                                         ; preds = %if.end
  %18 = load %struct.atkbd*, %struct.atkbd** %atkbd, align 8, !dbg !5619
  %call8 = call i32 @atkbd_set_repeat_rate(%struct.atkbd* %18) #11, !dbg !5620
  br label %if.end9, !dbg !5620

if.end9:                                          ; preds = %if.then7, %if.end
  br label %if.end10

if.end10:                                         ; preds = %if.end9, %msecs_to_jiffies.exit
  %19 = load %struct.atkbd*, %struct.atkbd** %atkbd, align 8, !dbg !5621
  %mutex11 = getelementptr inbounds %struct.atkbd, %struct.atkbd* %19, i32 0, i32 25, !dbg !5622
  call void @mutex_unlock(%struct.mutex* %mutex11) #11, !dbg !5623
  ret void, !dbg !5624
}

; Function Attrs: noredzone
declare dso_local void @init_timer_key(%struct.timer_list*, void (%struct.timer_list*)*, i32, i8*, %struct.lock_class_key*) #1

; Function Attrs: noredzone
declare dso_local void @delayed_work_timer_fn(%struct.timer_list*) #1

; Function Attrs: noredzone
declare dso_local void @__mutex_init(%struct.mutex*, i8*, %struct.lock_class_key*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @serio_set_drvdata(%struct.serio* %serio, i8* %data) #2 !dbg !5625 {
entry:
  %serio.addr = alloca %struct.serio*, align 8
  %data.addr = alloca i8*, align 8
  store %struct.serio* %serio, %struct.serio** %serio.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.serio** %serio.addr, metadata !5628, metadata !DIExpression()), !dbg !5629
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !5630, metadata !DIExpression()), !dbg !5631
  %0 = load %struct.serio*, %struct.serio** %serio.addr, align 8, !dbg !5632
  %dev = getelementptr inbounds %struct.serio, %struct.serio* %0, i32 0, i32 18, !dbg !5633
  %1 = load i8*, i8** %data.addr, align 8, !dbg !5634
  call void @dev_set_drvdata(%struct.device* %dev, i8* %1) #11, !dbg !5635
  ret void, !dbg !5636
}

; Function Attrs: noredzone
declare dso_local i32 @serio_open(%struct.serio*, %struct.serio_driver*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @atkbd_probe(%struct.atkbd* %atkbd) #2 !dbg !5637 {
entry:
  %retval = alloca i32, align 4
  %atkbd.addr = alloca %struct.atkbd*, align 8
  %ps2dev = alloca %struct.ps2dev*, align 8
  %param = alloca [2 x i8], align 1
  store %struct.atkbd* %atkbd, %struct.atkbd** %atkbd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.atkbd** %atkbd.addr, metadata !5640, metadata !DIExpression()), !dbg !5641
  call void @llvm.dbg.declare(metadata %struct.ps2dev** %ps2dev, metadata !5642, metadata !DIExpression()), !dbg !5644
  %0 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !5645
  %ps2dev1 = getelementptr inbounds %struct.atkbd, %struct.atkbd* %0, i32 0, i32 0, !dbg !5646
  store %struct.ps2dev* %ps2dev1, %struct.ps2dev** %ps2dev, align 8, !dbg !5644
  call void @llvm.dbg.declare(metadata [2 x i8]* %param, metadata !5647, metadata !DIExpression()), !dbg !5649
  %1 = load i8, i8* @atkbd_reset, align 1, !dbg !5650
  %tobool = trunc i8 %1 to i1, !dbg !5650
  br i1 %tobool, label %if.then, label %if.end5, !dbg !5652

if.then:                                          ; preds = %entry
  %2 = load %struct.ps2dev*, %struct.ps2dev** %ps2dev, align 8, !dbg !5653
  %call = call i32 @ps2_command(%struct.ps2dev* %2, i8* null, i32 767) #11, !dbg !5655
  %tobool2 = icmp ne i32 %call, 0, !dbg !5655
  br i1 %tobool2, label %if.then3, label %if.end, !dbg !5656

if.then3:                                         ; preds = %if.then
  %3 = load %struct.ps2dev*, %struct.ps2dev** %ps2dev, align 8, !dbg !5657
  %serio = getelementptr inbounds %struct.ps2dev, %struct.ps2dev* %3, i32 0, i32 0, !dbg !5657
  %4 = load %struct.serio*, %struct.serio** %serio, align 8, !dbg !5657
  %dev = getelementptr inbounds %struct.serio, %struct.serio* %4, i32 0, i32 18, !dbg !5657
  %5 = load %struct.ps2dev*, %struct.ps2dev** %ps2dev, align 8, !dbg !5657
  %serio4 = getelementptr inbounds %struct.ps2dev, %struct.ps2dev* %5, i32 0, i32 0, !dbg !5657
  %6 = load %struct.serio*, %struct.serio** %serio4, align 8, !dbg !5657
  %phys = getelementptr inbounds %struct.serio, %struct.serio* %6, i32 0, i32 2, !dbg !5657
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %phys, i64 0, i64 0, !dbg !5657
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.15, i64 0, i64 0), i8* %arraydecay) #12, !dbg !5657
  br label %if.end, !dbg !5657

if.end:                                           ; preds = %if.then3, %if.then
  br label %if.end5, !dbg !5658

if.end5:                                          ; preds = %if.end, %entry
  %arrayidx = getelementptr [2 x i8], [2 x i8]* %param, i64 0, i64 1, !dbg !5659
  store i8 -91, i8* %arrayidx, align 1, !dbg !5660
  %arrayidx6 = getelementptr [2 x i8], [2 x i8]* %param, i64 0, i64 0, !dbg !5661
  store i8 -91, i8* %arrayidx6, align 1, !dbg !5662
  %7 = load %struct.ps2dev*, %struct.ps2dev** %ps2dev, align 8, !dbg !5663
  %arraydecay7 = getelementptr inbounds [2 x i8], [2 x i8]* %param, i64 0, i64 0, !dbg !5665
  %call8 = call i32 @ps2_command(%struct.ps2dev* %7, i8* %arraydecay7, i32 754) #11, !dbg !5666
  %tobool9 = icmp ne i32 %call8, 0, !dbg !5666
  br i1 %tobool9, label %if.then10, label %if.end17, !dbg !5667

if.then10:                                        ; preds = %if.end5
  %arrayidx11 = getelementptr [2 x i8], [2 x i8]* %param, i64 0, i64 0, !dbg !5668
  store i8 0, i8* %arrayidx11, align 1, !dbg !5670
  %8 = load %struct.ps2dev*, %struct.ps2dev** %ps2dev, align 8, !dbg !5671
  %arraydecay12 = getelementptr inbounds [2 x i8], [2 x i8]* %param, i64 0, i64 0, !dbg !5673
  %call13 = call i32 @ps2_command(%struct.ps2dev* %8, i8* %arraydecay12, i32 4333) #11, !dbg !5674
  %tobool14 = icmp ne i32 %call13, 0, !dbg !5674
  br i1 %tobool14, label %if.then15, label %if.end16, !dbg !5675

if.then15:                                        ; preds = %if.then10
  store i32 -1, i32* %retval, align 4, !dbg !5676
  br label %return, !dbg !5676

if.end16:                                         ; preds = %if.then10
  %9 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !5677
  %id = getelementptr inbounds %struct.atkbd, %struct.atkbd* %9, i32 0, i32 4, !dbg !5678
  store i16 -21574, i16* %id, align 8, !dbg !5679
  store i32 0, i32* %retval, align 4, !dbg !5680
  br label %return, !dbg !5680

if.end17:                                         ; preds = %if.end5
  %arrayidx18 = getelementptr [2 x i8], [2 x i8]* %param, i64 0, i64 0, !dbg !5681
  %10 = load i8, i8* %arrayidx18, align 1, !dbg !5681
  %call19 = call zeroext i1 @ps2_is_keyboard_id(i8 zeroext %10) #11, !dbg !5683
  br i1 %call19, label %if.end21, label %if.then20, !dbg !5684

if.then20:                                        ; preds = %if.end17
  store i32 -1, i32* %retval, align 4, !dbg !5685
  br label %return, !dbg !5685

if.end21:                                         ; preds = %if.end17
  %arrayidx22 = getelementptr [2 x i8], [2 x i8]* %param, i64 0, i64 0, !dbg !5686
  %11 = load i8, i8* %arrayidx22, align 1, !dbg !5686
  %conv = zext i8 %11 to i32, !dbg !5686
  %shl = shl i32 %conv, 8, !dbg !5687
  %arrayidx23 = getelementptr [2 x i8], [2 x i8]* %param, i64 0, i64 1, !dbg !5688
  %12 = load i8, i8* %arrayidx23, align 1, !dbg !5688
  %conv24 = zext i8 %12 to i32, !dbg !5688
  %or = or i32 %shl, %conv24, !dbg !5689
  %conv25 = trunc i32 %or to i16, !dbg !5690
  %13 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !5691
  %id26 = getelementptr inbounds %struct.atkbd, %struct.atkbd* %13, i32 0, i32 4, !dbg !5692
  store i16 %conv25, i16* %id26, align 8, !dbg !5693
  %14 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !5694
  %id27 = getelementptr inbounds %struct.atkbd, %struct.atkbd* %14, i32 0, i32 4, !dbg !5696
  %15 = load i16, i16* %id27, align 8, !dbg !5696
  %conv28 = zext i16 %15 to i32, !dbg !5694
  %cmp = icmp eq i32 %conv28, 44193, !dbg !5697
  br i1 %cmp, label %land.lhs.true, label %if.end35, !dbg !5698

land.lhs.true:                                    ; preds = %if.end21
  %16 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !5699
  %translated = getelementptr inbounds %struct.atkbd, %struct.atkbd* %16, i32 0, i32 8, !dbg !5700
  %17 = load i8, i8* %translated, align 1, !dbg !5700
  %tobool30 = trunc i8 %17 to i1, !dbg !5700
  br i1 %tobool30, label %if.then32, label %if.end35, !dbg !5701

if.then32:                                        ; preds = %land.lhs.true
  %18 = load %struct.ps2dev*, %struct.ps2dev** %ps2dev, align 8, !dbg !5702
  %serio33 = getelementptr inbounds %struct.ps2dev, %struct.ps2dev* %18, i32 0, i32 0, !dbg !5702
  %19 = load %struct.serio*, %struct.serio** %serio33, align 8, !dbg !5702
  %dev34 = getelementptr inbounds %struct.serio, %struct.serio* %19, i32 0, i32 18, !dbg !5702
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev34, i8* getelementptr inbounds ([118 x i8], [118 x i8]* @.str.16, i64 0, i64 0)) #12, !dbg !5702
  store i32 -1, i32* %retval, align 4, !dbg !5704
  br label %return, !dbg !5704

if.end35:                                         ; preds = %land.lhs.true, %if.end21
  %20 = load i8, i8* @atkbd_skip_deactivate, align 1, !dbg !5705
  %tobool36 = trunc i8 %20 to i1, !dbg !5705
  br i1 %tobool36, label %if.end38, label %if.then37, !dbg !5707

if.then37:                                        ; preds = %if.end35
  %21 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !5708
  call void @atkbd_deactivate(%struct.atkbd* %21) #11, !dbg !5709
  br label %if.end38, !dbg !5709

if.end38:                                         ; preds = %if.then37, %if.end35
  store i32 0, i32* %retval, align 4, !dbg !5710
  br label %return, !dbg !5710

return:                                           ; preds = %if.end38, %if.then32, %if.then20, %if.end16, %if.then15
  %22 = load i32, i32* %retval, align 4, !dbg !5711
  ret i32 %22, !dbg !5711
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @atkbd_select_set(%struct.atkbd* %atkbd, i32 %target_set, i32 %allow_extra) #2 !dbg !5712 {
entry:
  %retval = alloca i32, align 4
  %atkbd.addr = alloca %struct.atkbd*, align 8
  %target_set.addr = alloca i32, align 4
  %allow_extra.addr = alloca i32, align 4
  %ps2dev = alloca %struct.ps2dev*, align 8
  %param = alloca [2 x i8], align 1
  store %struct.atkbd* %atkbd, %struct.atkbd** %atkbd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.atkbd** %atkbd.addr, metadata !5715, metadata !DIExpression()), !dbg !5716
  store i32 %target_set, i32* %target_set.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %target_set.addr, metadata !5717, metadata !DIExpression()), !dbg !5718
  store i32 %allow_extra, i32* %allow_extra.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %allow_extra.addr, metadata !5719, metadata !DIExpression()), !dbg !5720
  call void @llvm.dbg.declare(metadata %struct.ps2dev** %ps2dev, metadata !5721, metadata !DIExpression()), !dbg !5722
  %0 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !5723
  %ps2dev1 = getelementptr inbounds %struct.atkbd, %struct.atkbd* %0, i32 0, i32 0, !dbg !5724
  store %struct.ps2dev* %ps2dev1, %struct.ps2dev** %ps2dev, align 8, !dbg !5722
  call void @llvm.dbg.declare(metadata [2 x i8]* %param, metadata !5725, metadata !DIExpression()), !dbg !5726
  %1 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !5727
  %extra = getelementptr inbounds %struct.atkbd, %struct.atkbd* %1, i32 0, i32 9, !dbg !5728
  store i8 0, i8* %extra, align 2, !dbg !5729
  %2 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !5730
  %translated = getelementptr inbounds %struct.atkbd, %struct.atkbd* %2, i32 0, i32 8, !dbg !5732
  %3 = load i8, i8* %translated, align 1, !dbg !5732
  %tobool = trunc i8 %3 to i1, !dbg !5732
  br i1 %tobool, label %if.then, label %if.end, !dbg !5733

if.then:                                          ; preds = %entry
  store i32 2, i32* %retval, align 4, !dbg !5734
  br label %return, !dbg !5734

if.end:                                           ; preds = %entry
  %4 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !5735
  %id = getelementptr inbounds %struct.atkbd, %struct.atkbd* %4, i32 0, i32 4, !dbg !5737
  %5 = load i16, i16* %id, align 8, !dbg !5737
  %conv = zext i16 %5 to i32, !dbg !5735
  %cmp = icmp eq i32 %conv, 44193, !dbg !5738
  br i1 %cmp, label %if.then3, label %if.end4, !dbg !5739

if.then3:                                         ; preds = %if.end
  %arrayidx = getelementptr [2 x i8], [2 x i8]* %param, i64 0, i64 0, !dbg !5740
  store i8 3, i8* %arrayidx, align 1, !dbg !5742
  %6 = load %struct.ps2dev*, %struct.ps2dev** %ps2dev, align 8, !dbg !5743
  %arraydecay = getelementptr inbounds [2 x i8], [2 x i8]* %param, i64 0, i64 0, !dbg !5744
  %call = call i32 @ps2_command(%struct.ps2dev* %6, i8* %arraydecay, i32 4336) #11, !dbg !5745
  store i32 3, i32* %retval, align 4, !dbg !5746
  br label %return, !dbg !5746

if.end4:                                          ; preds = %if.end
  %7 = load i32, i32* %allow_extra.addr, align 4, !dbg !5747
  %tobool5 = icmp ne i32 %7, 0, !dbg !5747
  br i1 %tobool5, label %if.then6, label %if.end14, !dbg !5749

if.then6:                                         ; preds = %if.end4
  %arrayidx7 = getelementptr [2 x i8], [2 x i8]* %param, i64 0, i64 0, !dbg !5750
  store i8 113, i8* %arrayidx7, align 1, !dbg !5752
  %8 = load %struct.ps2dev*, %struct.ps2dev** %ps2dev, align 8, !dbg !5753
  %arraydecay8 = getelementptr inbounds [2 x i8], [2 x i8]* %param, i64 0, i64 0, !dbg !5755
  %call9 = call i32 @ps2_command(%struct.ps2dev* %8, i8* %arraydecay8, i32 4330) #11, !dbg !5756
  %tobool10 = icmp ne i32 %call9, 0, !dbg !5756
  br i1 %tobool10, label %if.end13, label %if.then11, !dbg !5757

if.then11:                                        ; preds = %if.then6
  %9 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !5758
  %extra12 = getelementptr inbounds %struct.atkbd, %struct.atkbd* %9, i32 0, i32 9, !dbg !5760
  store i8 1, i8* %extra12, align 2, !dbg !5761
  store i32 2, i32* %retval, align 4, !dbg !5762
  br label %return, !dbg !5762

if.end13:                                         ; preds = %if.then6
  br label %if.end14, !dbg !5763

if.end14:                                         ; preds = %if.end13, %if.end4
  %10 = load i8, i8* @atkbd_terminal, align 1, !dbg !5764
  %tobool15 = trunc i8 %10 to i1, !dbg !5764
  br i1 %tobool15, label %if.then16, label %if.end19, !dbg !5766

if.then16:                                        ; preds = %if.end14
  %11 = load %struct.ps2dev*, %struct.ps2dev** %ps2dev, align 8, !dbg !5767
  %arraydecay17 = getelementptr inbounds [2 x i8], [2 x i8]* %param, i64 0, i64 0, !dbg !5769
  %call18 = call i32 @ps2_command(%struct.ps2dev* %11, i8* %arraydecay17, i32 248) #11, !dbg !5770
  store i32 3, i32* %retval, align 4, !dbg !5771
  br label %return, !dbg !5771

if.end19:                                         ; preds = %if.end14
  %12 = load i32, i32* %target_set.addr, align 4, !dbg !5772
  %cmp20 = icmp ne i32 %12, 3, !dbg !5774
  br i1 %cmp20, label %if.then22, label %if.end23, !dbg !5775

if.then22:                                        ; preds = %if.end19
  store i32 2, i32* %retval, align 4, !dbg !5776
  br label %return, !dbg !5776

if.end23:                                         ; preds = %if.end19
  %13 = load %struct.ps2dev*, %struct.ps2dev** %ps2dev, align 8, !dbg !5777
  %arraydecay24 = getelementptr inbounds [2 x i8], [2 x i8]* %param, i64 0, i64 0, !dbg !5779
  %call25 = call i32 @ps2_command(%struct.ps2dev* %13, i8* %arraydecay24, i32 744) #11, !dbg !5780
  %tobool26 = icmp ne i32 %call25, 0, !dbg !5780
  br i1 %tobool26, label %if.end34, label %if.then27, !dbg !5781

if.then27:                                        ; preds = %if.end23
  %arrayidx28 = getelementptr [2 x i8], [2 x i8]* %param, i64 0, i64 0, !dbg !5782
  %14 = load i8, i8* %arrayidx28, align 1, !dbg !5782
  %conv29 = zext i8 %14 to i32, !dbg !5782
  %shl = shl i32 %conv29, 8, !dbg !5784
  %arrayidx30 = getelementptr [2 x i8], [2 x i8]* %param, i64 0, i64 1, !dbg !5785
  %15 = load i8, i8* %arrayidx30, align 1, !dbg !5785
  %conv31 = zext i8 %15 to i32, !dbg !5785
  %or = or i32 %shl, %conv31, !dbg !5786
  %conv32 = trunc i32 %or to i16, !dbg !5782
  %16 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !5787
  %id33 = getelementptr inbounds %struct.atkbd, %struct.atkbd* %16, i32 0, i32 4, !dbg !5788
  store i16 %conv32, i16* %id33, align 8, !dbg !5789
  store i32 2, i32* %retval, align 4, !dbg !5790
  br label %return, !dbg !5790

if.end34:                                         ; preds = %if.end23
  %arrayidx35 = getelementptr [2 x i8], [2 x i8]* %param, i64 0, i64 0, !dbg !5791
  store i8 3, i8* %arrayidx35, align 1, !dbg !5792
  %17 = load %struct.ps2dev*, %struct.ps2dev** %ps2dev, align 8, !dbg !5793
  %arraydecay36 = getelementptr inbounds [2 x i8], [2 x i8]* %param, i64 0, i64 0, !dbg !5795
  %call37 = call i32 @ps2_command(%struct.ps2dev* %17, i8* %arraydecay36, i32 4336) #11, !dbg !5796
  %tobool38 = icmp ne i32 %call37, 0, !dbg !5796
  br i1 %tobool38, label %if.then39, label %if.end40, !dbg !5797

if.then39:                                        ; preds = %if.end34
  store i32 2, i32* %retval, align 4, !dbg !5798
  br label %return, !dbg !5798

if.end40:                                         ; preds = %if.end34
  %arrayidx41 = getelementptr [2 x i8], [2 x i8]* %param, i64 0, i64 0, !dbg !5799
  store i8 0, i8* %arrayidx41, align 1, !dbg !5800
  %18 = load %struct.ps2dev*, %struct.ps2dev** %ps2dev, align 8, !dbg !5801
  %arraydecay42 = getelementptr inbounds [2 x i8], [2 x i8]* %param, i64 0, i64 0, !dbg !5803
  %call43 = call i32 @ps2_command(%struct.ps2dev* %18, i8* %arraydecay42, i32 4592) #11, !dbg !5804
  %tobool44 = icmp ne i32 %call43, 0, !dbg !5804
  br i1 %tobool44, label %if.then45, label %if.end46, !dbg !5805

if.then45:                                        ; preds = %if.end40
  store i32 2, i32* %retval, align 4, !dbg !5806
  br label %return, !dbg !5806

if.end46:                                         ; preds = %if.end40
  %arrayidx47 = getelementptr [2 x i8], [2 x i8]* %param, i64 0, i64 0, !dbg !5807
  %19 = load i8, i8* %arrayidx47, align 1, !dbg !5807
  %conv48 = zext i8 %19 to i32, !dbg !5807
  %cmp49 = icmp ne i32 %conv48, 3, !dbg !5809
  br i1 %cmp49, label %if.then51, label %if.end58, !dbg !5810

if.then51:                                        ; preds = %if.end46
  %arrayidx52 = getelementptr [2 x i8], [2 x i8]* %param, i64 0, i64 0, !dbg !5811
  store i8 2, i8* %arrayidx52, align 1, !dbg !5813
  %20 = load %struct.ps2dev*, %struct.ps2dev** %ps2dev, align 8, !dbg !5814
  %arraydecay53 = getelementptr inbounds [2 x i8], [2 x i8]* %param, i64 0, i64 0, !dbg !5816
  %call54 = call i32 @ps2_command(%struct.ps2dev* %20, i8* %arraydecay53, i32 4336) #11, !dbg !5817
  %tobool55 = icmp ne i32 %call54, 0, !dbg !5817
  br i1 %tobool55, label %if.then56, label %if.end57, !dbg !5818

if.then56:                                        ; preds = %if.then51
  store i32 2, i32* %retval, align 4, !dbg !5819
  br label %return, !dbg !5819

if.end57:                                         ; preds = %if.then51
  br label %if.end58, !dbg !5820

if.end58:                                         ; preds = %if.end57, %if.end46
  %21 = load %struct.ps2dev*, %struct.ps2dev** %ps2dev, align 8, !dbg !5821
  %arraydecay59 = getelementptr inbounds [2 x i8], [2 x i8]* %param, i64 0, i64 0, !dbg !5822
  %call60 = call i32 @ps2_command(%struct.ps2dev* %21, i8* %arraydecay59, i32 250) #11, !dbg !5823
  store i32 3, i32* %retval, align 4, !dbg !5824
  br label %return, !dbg !5824

return:                                           ; preds = %if.end58, %if.then56, %if.then45, %if.then39, %if.then27, %if.then22, %if.then16, %if.then11, %if.then3, %if.then
  %22 = load i32, i32* %retval, align 4, !dbg !5825
  ret i32 %22, !dbg !5825
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @atkbd_reset_state(%struct.atkbd* %atkbd) #2 !dbg !5826 {
entry:
  %retval = alloca i32, align 4
  %atkbd.addr = alloca %struct.atkbd*, align 8
  %ps2dev = alloca %struct.ps2dev*, align 8
  %param = alloca [1 x i8], align 1
  store %struct.atkbd* %atkbd, %struct.atkbd** %atkbd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.atkbd** %atkbd.addr, metadata !5827, metadata !DIExpression()), !dbg !5828
  call void @llvm.dbg.declare(metadata %struct.ps2dev** %ps2dev, metadata !5829, metadata !DIExpression()), !dbg !5830
  %0 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !5831
  %ps2dev1 = getelementptr inbounds %struct.atkbd, %struct.atkbd* %0, i32 0, i32 0, !dbg !5832
  store %struct.ps2dev* %ps2dev1, %struct.ps2dev** %ps2dev, align 8, !dbg !5830
  call void @llvm.dbg.declare(metadata [1 x i8]* %param, metadata !5833, metadata !DIExpression()), !dbg !5835
  %arrayidx = getelementptr [1 x i8], [1 x i8]* %param, i64 0, i64 0, !dbg !5836
  store i8 0, i8* %arrayidx, align 1, !dbg !5837
  %1 = load %struct.ps2dev*, %struct.ps2dev** %ps2dev, align 8, !dbg !5838
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %param, i64 0, i64 0, !dbg !5840
  %call = call i32 @ps2_command(%struct.ps2dev* %1, i8* %arraydecay, i32 4333) #11, !dbg !5841
  %tobool = icmp ne i32 %call, 0, !dbg !5841
  br i1 %tobool, label %if.then, label %if.end, !dbg !5842

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !5843
  br label %return, !dbg !5843

if.end:                                           ; preds = %entry
  %arrayidx2 = getelementptr [1 x i8], [1 x i8]* %param, i64 0, i64 0, !dbg !5844
  store i8 0, i8* %arrayidx2, align 1, !dbg !5845
  %2 = load %struct.ps2dev*, %struct.ps2dev** %ps2dev, align 8, !dbg !5846
  %arraydecay3 = getelementptr inbounds [1 x i8], [1 x i8]* %param, i64 0, i64 0, !dbg !5848
  %call4 = call i32 @ps2_command(%struct.ps2dev* %2, i8* %arraydecay3, i32 4339) #11, !dbg !5849
  %tobool5 = icmp ne i32 %call4, 0, !dbg !5849
  br i1 %tobool5, label %if.then6, label %if.end7, !dbg !5850

if.then6:                                         ; preds = %if.end
  store i32 -1, i32* %retval, align 4, !dbg !5851
  br label %return, !dbg !5851

if.end7:                                          ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !5852
  br label %return, !dbg !5852

return:                                           ; preds = %if.end7, %if.then6, %if.then
  %3 = load i32, i32* %retval, align 4, !dbg !5853
  ret i32 %3, !dbg !5853
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @atkbd_parse_fwnode_data(%struct.serio* %serio) #2 !dbg !5854 {
entry:
  %serio.addr = alloca %struct.serio*, align 8
  %atkbd = alloca %struct.atkbd*, align 8
  %dev = alloca %struct.device*, align 8
  %n = alloca i32, align 4
  store %struct.serio* %serio, %struct.serio** %serio.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.serio** %serio.addr, metadata !5855, metadata !DIExpression()), !dbg !5856
  call void @llvm.dbg.declare(metadata %struct.atkbd** %atkbd, metadata !5857, metadata !DIExpression()), !dbg !5858
  %0 = load %struct.serio*, %struct.serio** %serio.addr, align 8, !dbg !5859
  %call = call i8* @serio_get_drvdata(%struct.serio* %0) #11, !dbg !5860
  %1 = bitcast i8* %call to %struct.atkbd*, !dbg !5860
  store %struct.atkbd* %1, %struct.atkbd** %atkbd, align 8, !dbg !5858
  call void @llvm.dbg.declare(metadata %struct.device** %dev, metadata !5861, metadata !DIExpression()), !dbg !5862
  %2 = load %struct.serio*, %struct.serio** %serio.addr, align 8, !dbg !5863
  %dev1 = getelementptr inbounds %struct.serio, %struct.serio* %2, i32 0, i32 18, !dbg !5864
  store %struct.device* %dev1, %struct.device** %dev, align 8, !dbg !5862
  call void @llvm.dbg.declare(metadata i32* %n, metadata !5865, metadata !DIExpression()), !dbg !5866
  %3 = load %struct.device*, %struct.device** %dev, align 8, !dbg !5867
  %call2 = call i32 @device_property_count_u32(%struct.device* %3, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18, i64 0, i64 0)) #11, !dbg !5868
  store i32 %call2, i32* %n, align 4, !dbg !5869
  %4 = load i32, i32* %n, align 4, !dbg !5870
  %cmp = icmp sgt i32 %4, 0, !dbg !5872
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !5873

land.lhs.true:                                    ; preds = %entry
  %5 = load i32, i32* %n, align 4, !dbg !5874
  %cmp3 = icmp sle i32 %5, 24, !dbg !5875
  br i1 %cmp3, label %land.lhs.true4, label %if.end, !dbg !5876

land.lhs.true4:                                   ; preds = %land.lhs.true
  %6 = load %struct.device*, %struct.device** %dev, align 8, !dbg !5877
  %7 = load %struct.atkbd*, %struct.atkbd** %atkbd, align 8, !dbg !5878
  %function_row_physmap = getelementptr inbounds %struct.atkbd, %struct.atkbd* %7, i32 0, i32 26, !dbg !5879
  %arraydecay = getelementptr inbounds [24 x i32], [24 x i32]* %function_row_physmap, i64 0, i64 0, !dbg !5878
  %8 = load i32, i32* %n, align 4, !dbg !5880
  %conv = sext i32 %8 to i64, !dbg !5880
  %call5 = call i32 @device_property_read_u32_array(%struct.device* %6, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18, i64 0, i64 0), i32* %arraydecay, i64 %conv) #11, !dbg !5881
  %tobool = icmp ne i32 %call5, 0, !dbg !5881
  br i1 %tobool, label %if.end, label %if.then, !dbg !5882

if.then:                                          ; preds = %land.lhs.true4
  %9 = load i32, i32* %n, align 4, !dbg !5883
  %10 = load %struct.atkbd*, %struct.atkbd** %atkbd, align 8, !dbg !5885
  %num_function_row_keys = getelementptr inbounds %struct.atkbd, %struct.atkbd* %10, i32 0, i32 27, !dbg !5886
  store i32 %9, i32* %num_function_row_keys, align 8, !dbg !5887
  br label %if.end, !dbg !5888

if.end:                                           ; preds = %if.then, %land.lhs.true4, %land.lhs.true, %entry
  ret void, !dbg !5889
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @atkbd_set_keycode_table(%struct.atkbd* %atkbd) #2 !dbg !5890 {
entry:
  %atkbd.addr = alloca %struct.atkbd*, align 8
  %dev = alloca %struct.device*, align 8
  %scancode = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store %struct.atkbd* %atkbd, %struct.atkbd** %atkbd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.atkbd** %atkbd.addr, metadata !5893, metadata !DIExpression()), !dbg !5894
  call void @llvm.dbg.declare(metadata %struct.device** %dev, metadata !5895, metadata !DIExpression()), !dbg !5896
  %0 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !5897
  %ps2dev = getelementptr inbounds %struct.atkbd, %struct.atkbd* %0, i32 0, i32 0, !dbg !5898
  %serio = getelementptr inbounds %struct.ps2dev, %struct.ps2dev* %ps2dev, i32 0, i32 0, !dbg !5899
  %1 = load %struct.serio*, %struct.serio** %serio, align 8, !dbg !5899
  %dev1 = getelementptr inbounds %struct.serio, %struct.serio* %1, i32 0, i32 18, !dbg !5900
  store %struct.device* %dev1, %struct.device** %dev, align 8, !dbg !5896
  call void @llvm.dbg.declare(metadata i32* %scancode, metadata !5901, metadata !DIExpression()), !dbg !5902
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5903, metadata !DIExpression()), !dbg !5904
  call void @llvm.dbg.declare(metadata i32* %j, metadata !5905, metadata !DIExpression()), !dbg !5906
  %2 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !5907
  %keycode = getelementptr inbounds %struct.atkbd, %struct.atkbd* %2, i32 0, i32 5, !dbg !5908
  %arraydecay = getelementptr inbounds [512 x i16], [512 x i16]* %keycode, i64 0, i64 0, !dbg !5909
  %3 = bitcast i16* %arraydecay to i8*, !dbg !5909
  call void @llvm.memset.p0i8.i64(i8* align 2 %3, i8 0, i64 1024, i1 false), !dbg !5909
  %4 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !5910
  %force_release_mask = getelementptr inbounds %struct.atkbd, %struct.atkbd* %4, i32 0, i32 6, !dbg !5911
  %arraydecay2 = getelementptr inbounds [8 x i64], [8 x i64]* %force_release_mask, i64 0, i64 0, !dbg !5910
  call void @bitmap_zero(i64* %arraydecay2, i32 512) #11, !dbg !5912
  %5 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !5913
  %call = call i32 @atkbd_get_keymap_from_fwnode(%struct.atkbd* %5) #11, !dbg !5915
  %tobool = icmp ne i32 %call, 0, !dbg !5915
  br i1 %tobool, label %if.else, label %if.then, !dbg !5916

if.then:                                          ; preds = %entry
  br label %if.end75, !dbg !5917

if.else:                                          ; preds = %entry
  %6 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !5919
  %translated = getelementptr inbounds %struct.atkbd, %struct.atkbd* %6, i32 0, i32 8, !dbg !5921
  %7 = load i8, i8* %translated, align 1, !dbg !5921
  %tobool3 = trunc i8 %7 to i1, !dbg !5921
  br i1 %tobool3, label %if.then4, label %if.else41, !dbg !5922

if.then4:                                         ; preds = %if.else
  store i32 0, i32* %i, align 4, !dbg !5923
  br label %for.cond, !dbg !5926

for.cond:                                         ; preds = %for.inc38, %if.then4
  %8 = load i32, i32* %i, align 4, !dbg !5927
  %cmp = icmp slt i32 %8, 128, !dbg !5929
  br i1 %cmp, label %for.body, label %for.end40, !dbg !5930

for.body:                                         ; preds = %for.cond
  %9 = load i32, i32* %i, align 4, !dbg !5931
  %idxprom = sext i32 %9 to i64, !dbg !5933
  %arrayidx = getelementptr [128 x i16], [128 x i16]* @atkbd_unxlate_table, i64 0, i64 %idxprom, !dbg !5933
  %10 = load i16, i16* %arrayidx, align 2, !dbg !5933
  %conv = zext i16 %10 to i32, !dbg !5933
  store i32 %conv, i32* %scancode, align 4, !dbg !5934
  %11 = load i32, i32* %scancode, align 4, !dbg !5935
  %idxprom5 = zext i32 %11 to i64, !dbg !5936
  %arrayidx6 = getelementptr [512 x i16], [512 x i16]* bitcast (<{ [261 x i16], [251 x i16] }>* @atkbd_set2_keycode to [512 x i16]*), i64 0, i64 %idxprom5, !dbg !5936
  %12 = load i16, i16* %arrayidx6, align 2, !dbg !5936
  %13 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !5937
  %keycode7 = getelementptr inbounds %struct.atkbd, %struct.atkbd* %13, i32 0, i32 5, !dbg !5938
  %14 = load i32, i32* %i, align 4, !dbg !5939
  %idxprom8 = sext i32 %14 to i64, !dbg !5937
  %arrayidx9 = getelementptr [512 x i16], [512 x i16]* %keycode7, i64 0, i64 %idxprom8, !dbg !5937
  store i16 %12, i16* %arrayidx9, align 2, !dbg !5940
  %15 = load i32, i32* %scancode, align 4, !dbg !5941
  %or = or i32 %15, 128, !dbg !5942
  %idxprom10 = zext i32 %or to i64, !dbg !5943
  %arrayidx11 = getelementptr [512 x i16], [512 x i16]* bitcast (<{ [261 x i16], [251 x i16] }>* @atkbd_set2_keycode to [512 x i16]*), i64 0, i64 %idxprom10, !dbg !5943
  %16 = load i16, i16* %arrayidx11, align 2, !dbg !5943
  %17 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !5944
  %keycode12 = getelementptr inbounds %struct.atkbd, %struct.atkbd* %17, i32 0, i32 5, !dbg !5945
  %18 = load i32, i32* %i, align 4, !dbg !5946
  %or13 = or i32 %18, 128, !dbg !5947
  %idxprom14 = sext i32 %or13 to i64, !dbg !5944
  %arrayidx15 = getelementptr [512 x i16], [512 x i16]* %keycode12, i64 0, i64 %idxprom14, !dbg !5944
  store i16 %16, i16* %arrayidx15, align 2, !dbg !5948
  %19 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !5949
  %scroll = getelementptr inbounds %struct.atkbd, %struct.atkbd* %19, i32 0, i32 13, !dbg !5951
  %20 = load i8, i8* %scroll, align 2, !dbg !5951
  %tobool16 = trunc i8 %20 to i1, !dbg !5951
  br i1 %tobool16, label %if.then17, label %if.end37, !dbg !5952

if.then17:                                        ; preds = %for.body
  store i32 0, i32* %j, align 4, !dbg !5953
  br label %for.cond18, !dbg !5955

for.cond18:                                       ; preds = %for.inc, %if.then17
  %21 = load i32, i32* %j, align 4, !dbg !5956
  %conv19 = sext i32 %21 to i64, !dbg !5956
  %cmp20 = icmp ult i64 %conv19, 7, !dbg !5958
  br i1 %cmp20, label %for.body22, label %for.end, !dbg !5959

for.body22:                                       ; preds = %for.cond18
  %22 = load i32, i32* %scancode, align 4, !dbg !5960
  %or23 = or i32 %22, 128, !dbg !5962
  %23 = load i32, i32* %j, align 4, !dbg !5963
  %idxprom24 = sext i32 %23 to i64, !dbg !5964
  %arrayidx25 = getelementptr [7 x %struct.anon.66], [7 x %struct.anon.66]* @atkbd_scroll_keys, i64 0, i64 %idxprom24, !dbg !5964
  %set2 = getelementptr inbounds %struct.anon.66, %struct.anon.66* %arrayidx25, i32 0, i32 1, !dbg !5965
  %24 = load i8, i8* %set2, align 2, !dbg !5965
  %conv26 = zext i8 %24 to i32, !dbg !5964
  %cmp27 = icmp eq i32 %or23, %conv26, !dbg !5966
  br i1 %cmp27, label %if.then29, label %if.end, !dbg !5967

if.then29:                                        ; preds = %for.body22
  %25 = load i32, i32* %j, align 4, !dbg !5968
  %idxprom30 = sext i32 %25 to i64, !dbg !5969
  %arrayidx31 = getelementptr [7 x %struct.anon.66], [7 x %struct.anon.66]* @atkbd_scroll_keys, i64 0, i64 %idxprom30, !dbg !5969
  %keycode32 = getelementptr inbounds %struct.anon.66, %struct.anon.66* %arrayidx31, i32 0, i32 0, !dbg !5970
  %26 = load i16, i16* %keycode32, align 4, !dbg !5970
  %27 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !5971
  %keycode33 = getelementptr inbounds %struct.atkbd, %struct.atkbd* %27, i32 0, i32 5, !dbg !5972
  %28 = load i32, i32* %i, align 4, !dbg !5973
  %or34 = or i32 %28, 128, !dbg !5974
  %idxprom35 = sext i32 %or34 to i64, !dbg !5971
  %arrayidx36 = getelementptr [512 x i16], [512 x i16]* %keycode33, i64 0, i64 %idxprom35, !dbg !5971
  store i16 %26, i16* %arrayidx36, align 2, !dbg !5975
  br label %if.end, !dbg !5971

if.end:                                           ; preds = %if.then29, %for.body22
  br label %for.inc, !dbg !5965

for.inc:                                          ; preds = %if.end
  %29 = load i32, i32* %j, align 4, !dbg !5976
  %inc = add i32 %29, 1, !dbg !5976
  store i32 %inc, i32* %j, align 4, !dbg !5976
  br label %for.cond18, !dbg !5977, !llvm.loop !5978

for.end:                                          ; preds = %for.cond18
  br label %if.end37, !dbg !5979

if.end37:                                         ; preds = %for.end, %for.body
  br label %for.inc38, !dbg !5980

for.inc38:                                        ; preds = %if.end37
  %30 = load i32, i32* %i, align 4, !dbg !5981
  %inc39 = add i32 %30, 1, !dbg !5981
  store i32 %inc39, i32* %i, align 4, !dbg !5981
  br label %for.cond, !dbg !5982, !llvm.loop !5983

for.end40:                                        ; preds = %for.cond
  br label %if.end74, !dbg !5985

if.else41:                                        ; preds = %if.else
  %31 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !5986
  %set = getelementptr inbounds %struct.atkbd, %struct.atkbd* %31, i32 0, i32 7, !dbg !5988
  %32 = load i8, i8* %set, align 8, !dbg !5988
  %conv42 = zext i8 %32 to i32, !dbg !5986
  %cmp43 = icmp eq i32 %conv42, 3, !dbg !5989
  br i1 %cmp43, label %if.then45, label %if.else48, !dbg !5990

if.then45:                                        ; preds = %if.else41
  %33 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !5991
  %keycode46 = getelementptr inbounds %struct.atkbd, %struct.atkbd* %33, i32 0, i32 5, !dbg !5993
  %arraydecay47 = getelementptr inbounds [512 x i16], [512 x i16]* %keycode46, i64 0, i64 0, !dbg !5994
  %34 = bitcast i16* %arraydecay47 to i8*, !dbg !5994
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %34, i8* align 16 bitcast (<{ [164 x i16], [348 x i16] }>* @atkbd_set3_keycode to i8*), i64 1024, i1 false), !dbg !5994
  br label %if.end73, !dbg !5995

if.else48:                                        ; preds = %if.else41
  %35 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !5996
  %keycode49 = getelementptr inbounds %struct.atkbd, %struct.atkbd* %35, i32 0, i32 5, !dbg !5998
  %arraydecay50 = getelementptr inbounds [512 x i16], [512 x i16]* %keycode49, i64 0, i64 0, !dbg !5999
  %36 = bitcast i16* %arraydecay50 to i8*, !dbg !5999
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %36, i8* align 16 bitcast (<{ [261 x i16], [251 x i16] }>* @atkbd_set2_keycode to i8*), i64 1024, i1 false), !dbg !5999
  %37 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !6000
  %scroll51 = getelementptr inbounds %struct.atkbd, %struct.atkbd* %37, i32 0, i32 13, !dbg !6002
  %38 = load i8, i8* %scroll51, align 2, !dbg !6002
  %tobool52 = trunc i8 %38 to i1, !dbg !6002
  br i1 %tobool52, label %if.then53, label %if.end72, !dbg !6003

if.then53:                                        ; preds = %if.else48
  store i32 0, i32* %i, align 4, !dbg !6004
  br label %for.cond54, !dbg !6006

for.cond54:                                       ; preds = %for.inc69, %if.then53
  %39 = load i32, i32* %i, align 4, !dbg !6007
  %conv55 = sext i32 %39 to i64, !dbg !6007
  %cmp56 = icmp ult i64 %conv55, 7, !dbg !6009
  br i1 %cmp56, label %for.body58, label %for.end71, !dbg !6010

for.body58:                                       ; preds = %for.cond54
  %40 = load i32, i32* %i, align 4, !dbg !6011
  %idxprom59 = sext i32 %40 to i64, !dbg !6013
  %arrayidx60 = getelementptr [7 x %struct.anon.66], [7 x %struct.anon.66]* @atkbd_scroll_keys, i64 0, i64 %idxprom59, !dbg !6013
  %set261 = getelementptr inbounds %struct.anon.66, %struct.anon.66* %arrayidx60, i32 0, i32 1, !dbg !6014
  %41 = load i8, i8* %set261, align 2, !dbg !6014
  %conv62 = zext i8 %41 to i32, !dbg !6013
  store i32 %conv62, i32* %scancode, align 4, !dbg !6015
  %42 = load i32, i32* %i, align 4, !dbg !6016
  %idxprom63 = sext i32 %42 to i64, !dbg !6017
  %arrayidx64 = getelementptr [7 x %struct.anon.66], [7 x %struct.anon.66]* @atkbd_scroll_keys, i64 0, i64 %idxprom63, !dbg !6017
  %keycode65 = getelementptr inbounds %struct.anon.66, %struct.anon.66* %arrayidx64, i32 0, i32 0, !dbg !6018
  %43 = load i16, i16* %keycode65, align 4, !dbg !6018
  %44 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !6019
  %keycode66 = getelementptr inbounds %struct.atkbd, %struct.atkbd* %44, i32 0, i32 5, !dbg !6020
  %45 = load i32, i32* %scancode, align 4, !dbg !6021
  %idxprom67 = zext i32 %45 to i64, !dbg !6019
  %arrayidx68 = getelementptr [512 x i16], [512 x i16]* %keycode66, i64 0, i64 %idxprom67, !dbg !6019
  store i16 %43, i16* %arrayidx68, align 2, !dbg !6022
  br label %for.inc69, !dbg !6023

for.inc69:                                        ; preds = %for.body58
  %46 = load i32, i32* %i, align 4, !dbg !6024
  %inc70 = add i32 %46, 1, !dbg !6024
  store i32 %inc70, i32* %i, align 4, !dbg !6024
  br label %for.cond54, !dbg !6025, !llvm.loop !6026

for.end71:                                        ; preds = %for.cond54
  br label %if.end72, !dbg !6027

if.end72:                                         ; preds = %for.end71, %if.else48
  br label %if.end73

if.end73:                                         ; preds = %if.end72, %if.then45
  br label %if.end74

if.end74:                                         ; preds = %if.end73, %for.end40
  br label %if.end75

if.end75:                                         ; preds = %if.end74, %if.then
  %47 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !6028
  %call76 = call i32 @atkbd_compat_scancode(%struct.atkbd* %47, i32 242) #11, !dbg !6029
  store i32 %call76, i32* %scancode, align 4, !dbg !6030
  %48 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !6031
  %keycode77 = getelementptr inbounds %struct.atkbd, %struct.atkbd* %48, i32 0, i32 5, !dbg !6032
  %49 = load i32, i32* %scancode, align 4, !dbg !6033
  %idxprom78 = zext i32 %49 to i64, !dbg !6031
  %arrayidx79 = getelementptr [512 x i16], [512 x i16]* %keycode77, i64 0, i64 %idxprom78, !dbg !6031
  store i16 122, i16* %arrayidx79, align 2, !dbg !6034
  %50 = load i32, i32* %scancode, align 4, !dbg !6035
  %conv80 = zext i32 %50 to i64, !dbg !6035
  %51 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !6036
  %force_release_mask81 = getelementptr inbounds %struct.atkbd, %struct.atkbd* %51, i32 0, i32 6, !dbg !6037
  %arraydecay82 = getelementptr inbounds [8 x i64], [8 x i64]* %force_release_mask81, i64 0, i64 0, !dbg !6036
  call void @__set_bit(i64 %conv80, i64* %arraydecay82) #11, !dbg !6038
  %52 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !6039
  %call83 = call i32 @atkbd_compat_scancode(%struct.atkbd* %52, i32 241) #11, !dbg !6040
  store i32 %call83, i32* %scancode, align 4, !dbg !6041
  %53 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !6042
  %keycode84 = getelementptr inbounds %struct.atkbd, %struct.atkbd* %53, i32 0, i32 5, !dbg !6043
  %54 = load i32, i32* %scancode, align 4, !dbg !6044
  %idxprom85 = zext i32 %54 to i64, !dbg !6042
  %arrayidx86 = getelementptr [512 x i16], [512 x i16]* %keycode84, i64 0, i64 %idxprom85, !dbg !6042
  store i16 123, i16* %arrayidx86, align 2, !dbg !6045
  %55 = load i32, i32* %scancode, align 4, !dbg !6046
  %conv87 = zext i32 %55 to i64, !dbg !6046
  %56 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !6047
  %force_release_mask88 = getelementptr inbounds %struct.atkbd, %struct.atkbd* %56, i32 0, i32 6, !dbg !6048
  %arraydecay89 = getelementptr inbounds [8 x i64], [8 x i64]* %force_release_mask88, i64 0, i64 0, !dbg !6047
  call void @__set_bit(i64 %conv87, i64* %arraydecay89) #11, !dbg !6049
  %57 = load void (%struct.atkbd*, i8*)*, void (%struct.atkbd*, i8*)** @atkbd_platform_fixup, align 8, !dbg !6050
  %tobool90 = icmp ne void (%struct.atkbd*, i8*)* %57, null, !dbg !6050
  br i1 %tobool90, label %if.then91, label %if.end92, !dbg !6052

if.then91:                                        ; preds = %if.end75
  %58 = load void (%struct.atkbd*, i8*)*, void (%struct.atkbd*, i8*)** @atkbd_platform_fixup, align 8, !dbg !6053
  %59 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !6054
  %60 = load i8*, i8** @atkbd_platform_fixup_data, align 8, !dbg !6055
  call void %58(%struct.atkbd* %59, i8* %60) #11, !dbg !6053
  br label %if.end92, !dbg !6053

if.end92:                                         ; preds = %if.then91, %if.end75
  ret void, !dbg !6056
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @atkbd_set_device_attrs(%struct.atkbd* %atkbd) #2 !dbg !6057 {
entry:
  %atkbd.addr = alloca %struct.atkbd*, align 8
  %input_dev = alloca %struct.input_dev*, align 8
  %i = alloca i32, align 4
  store %struct.atkbd* %atkbd, %struct.atkbd** %atkbd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.atkbd** %atkbd.addr, metadata !6058, metadata !DIExpression()), !dbg !6059
  call void @llvm.dbg.declare(metadata %struct.input_dev** %input_dev, metadata !6060, metadata !DIExpression()), !dbg !6061
  %0 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !6062
  %dev = getelementptr inbounds %struct.atkbd, %struct.atkbd* %0, i32 0, i32 1, !dbg !6063
  %1 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !6063
  store %struct.input_dev* %1, %struct.input_dev** %input_dev, align 8, !dbg !6061
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6064, metadata !DIExpression()), !dbg !6065
  %2 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !6066
  %extra = getelementptr inbounds %struct.atkbd, %struct.atkbd* %2, i32 0, i32 9, !dbg !6068
  %3 = load i8, i8* %extra, align 2, !dbg !6068
  %tobool = trunc i8 %3 to i1, !dbg !6068
  br i1 %tobool, label %if.then, label %if.else, !dbg !6069

if.then:                                          ; preds = %entry
  %4 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !6070
  %name = getelementptr inbounds %struct.atkbd, %struct.atkbd* %4, i32 0, i32 2, !dbg !6071
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %name, i64 0, i64 0, !dbg !6070
  %call = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %arraydecay, i64 64, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.23, i64 0, i64 0)) #11, !dbg !6072
  br label %if.end, !dbg !6072

if.else:                                          ; preds = %entry
  %5 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !6073
  %name1 = getelementptr inbounds %struct.atkbd, %struct.atkbd* %5, i32 0, i32 2, !dbg !6074
  %arraydecay2 = getelementptr inbounds [64 x i8], [64 x i8]* %name1, i64 0, i64 0, !dbg !6073
  %6 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !6075
  %translated = getelementptr inbounds %struct.atkbd, %struct.atkbd* %6, i32 0, i32 8, !dbg !6076
  %7 = load i8, i8* %translated, align 1, !dbg !6076
  %tobool3 = trunc i8 %7 to i1, !dbg !6076
  %8 = zext i1 %tobool3 to i64, !dbg !6075
  %cond = select i1 %tobool3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.25, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.26, i64 0, i64 0), !dbg !6075
  %9 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !6077
  %set = getelementptr inbounds %struct.atkbd, %struct.atkbd* %9, i32 0, i32 7, !dbg !6078
  %10 = load i8, i8* %set, align 8, !dbg !6078
  %conv = zext i8 %10 to i32, !dbg !6077
  %call4 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %arraydecay2, i64 64, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.24, i64 0, i64 0), i8* %cond, i32 %conv) #11, !dbg !6079
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %11 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !6080
  %phys = getelementptr inbounds %struct.atkbd, %struct.atkbd* %11, i32 0, i32 3, !dbg !6081
  %arraydecay5 = getelementptr inbounds [32 x i8], [32 x i8]* %phys, i64 0, i64 0, !dbg !6080
  %12 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !6082
  %ps2dev = getelementptr inbounds %struct.atkbd, %struct.atkbd* %12, i32 0, i32 0, !dbg !6083
  %serio = getelementptr inbounds %struct.ps2dev, %struct.ps2dev* %ps2dev, i32 0, i32 0, !dbg !6084
  %13 = load %struct.serio*, %struct.serio** %serio, align 8, !dbg !6084
  %phys6 = getelementptr inbounds %struct.serio, %struct.serio* %13, i32 0, i32 2, !dbg !6085
  %arraydecay7 = getelementptr inbounds [32 x i8], [32 x i8]* %phys6, i64 0, i64 0, !dbg !6082
  %call8 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %arraydecay5, i64 32, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.27, i64 0, i64 0), i8* %arraydecay7) #11, !dbg !6086
  %14 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !6087
  %name9 = getelementptr inbounds %struct.atkbd, %struct.atkbd* %14, i32 0, i32 2, !dbg !6088
  %arraydecay10 = getelementptr inbounds [64 x i8], [64 x i8]* %name9, i64 0, i64 0, !dbg !6087
  %15 = load %struct.input_dev*, %struct.input_dev** %input_dev, align 8, !dbg !6089
  %name11 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %15, i32 0, i32 0, !dbg !6090
  store i8* %arraydecay10, i8** %name11, align 8, !dbg !6091
  %16 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !6092
  %phys12 = getelementptr inbounds %struct.atkbd, %struct.atkbd* %16, i32 0, i32 3, !dbg !6093
  %arraydecay13 = getelementptr inbounds [32 x i8], [32 x i8]* %phys12, i64 0, i64 0, !dbg !6092
  %17 = load %struct.input_dev*, %struct.input_dev** %input_dev, align 8, !dbg !6094
  %phys14 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %17, i32 0, i32 1, !dbg !6095
  store i8* %arraydecay13, i8** %phys14, align 8, !dbg !6096
  %18 = load %struct.input_dev*, %struct.input_dev** %input_dev, align 8, !dbg !6097
  %id = getelementptr inbounds %struct.input_dev, %struct.input_dev* %18, i32 0, i32 3, !dbg !6098
  %bustype = getelementptr inbounds %struct.input_id, %struct.input_id* %id, i32 0, i32 0, !dbg !6099
  store i16 17, i16* %bustype, align 8, !dbg !6100
  %19 = load %struct.input_dev*, %struct.input_dev** %input_dev, align 8, !dbg !6101
  %id15 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %19, i32 0, i32 3, !dbg !6102
  %vendor = getelementptr inbounds %struct.input_id, %struct.input_id* %id15, i32 0, i32 1, !dbg !6103
  store i16 1, i16* %vendor, align 2, !dbg !6104
  %20 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !6105
  %translated16 = getelementptr inbounds %struct.atkbd, %struct.atkbd* %20, i32 0, i32 8, !dbg !6106
  %21 = load i8, i8* %translated16, align 1, !dbg !6106
  %tobool17 = trunc i8 %21 to i1, !dbg !6106
  br i1 %tobool17, label %cond.true, label %cond.false, !dbg !6105

cond.true:                                        ; preds = %if.end
  br label %cond.end, !dbg !6105

cond.false:                                       ; preds = %if.end
  %22 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !6107
  %set19 = getelementptr inbounds %struct.atkbd, %struct.atkbd* %22, i32 0, i32 7, !dbg !6108
  %23 = load i8, i8* %set19, align 8, !dbg !6108
  %conv20 = zext i8 %23 to i32, !dbg !6107
  br label %cond.end, !dbg !6105

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond21 = phi i32 [ 1, %cond.true ], [ %conv20, %cond.false ], !dbg !6105
  %conv22 = trunc i32 %cond21 to i16, !dbg !6105
  %24 = load %struct.input_dev*, %struct.input_dev** %input_dev, align 8, !dbg !6109
  %id23 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %24, i32 0, i32 3, !dbg !6110
  %product = getelementptr inbounds %struct.input_id, %struct.input_id* %id23, i32 0, i32 2, !dbg !6111
  store i16 %conv22, i16* %product, align 4, !dbg !6112
  %25 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !6113
  %id24 = getelementptr inbounds %struct.atkbd, %struct.atkbd* %25, i32 0, i32 4, !dbg !6114
  %26 = load i16, i16* %id24, align 8, !dbg !6114
  %27 = load %struct.input_dev*, %struct.input_dev** %input_dev, align 8, !dbg !6115
  %id25 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %27, i32 0, i32 3, !dbg !6116
  %version = getelementptr inbounds %struct.input_id, %struct.input_id* %id25, i32 0, i32 3, !dbg !6117
  store i16 %26, i16* %version, align 2, !dbg !6118
  %28 = load %struct.input_dev*, %struct.input_dev** %input_dev, align 8, !dbg !6119
  %event = getelementptr inbounds %struct.input_dev, %struct.input_dev* %28, i32 0, i32 34, !dbg !6120
  store i32 (%struct.input_dev*, i32, i32, i32)* @atkbd_event, i32 (%struct.input_dev*, i32, i32, i32)** %event, align 8, !dbg !6121
  %29 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !6122
  %ps2dev26 = getelementptr inbounds %struct.atkbd, %struct.atkbd* %29, i32 0, i32 0, !dbg !6123
  %serio27 = getelementptr inbounds %struct.ps2dev, %struct.ps2dev* %ps2dev26, i32 0, i32 0, !dbg !6124
  %30 = load %struct.serio*, %struct.serio** %serio27, align 8, !dbg !6124
  %dev28 = getelementptr inbounds %struct.serio, %struct.serio* %30, i32 0, i32 18, !dbg !6125
  %31 = load %struct.input_dev*, %struct.input_dev** %input_dev, align 8, !dbg !6126
  %dev29 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %31, i32 0, i32 40, !dbg !6127
  %parent = getelementptr inbounds %struct.device, %struct.device* %dev29, i32 0, i32 1, !dbg !6128
  store %struct.device* %dev28, %struct.device** %parent, align 8, !dbg !6129
  %32 = load %struct.input_dev*, %struct.input_dev** %input_dev, align 8, !dbg !6130
  %33 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !6131
  %34 = bitcast %struct.atkbd* %33 to i8*, !dbg !6131
  call void @input_set_drvdata(%struct.input_dev* %32, i8* %34) #11, !dbg !6132
  %35 = load %struct.input_dev*, %struct.input_dev** %input_dev, align 8, !dbg !6133
  %evbit = getelementptr inbounds %struct.input_dev, %struct.input_dev* %35, i32 0, i32 5, !dbg !6134
  %arrayidx = getelementptr [1 x i64], [1 x i64]* %evbit, i64 0, i64 0, !dbg !6133
  store i64 1048594, i64* %arrayidx, align 8, !dbg !6135
  %36 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !6136
  %write = getelementptr inbounds %struct.atkbd, %struct.atkbd* %36, i32 0, i32 10, !dbg !6138
  %37 = load i8, i8* %write, align 1, !dbg !6138
  %tobool30 = trunc i8 %37 to i1, !dbg !6138
  br i1 %tobool30, label %if.then31, label %if.end35, !dbg !6139

if.then31:                                        ; preds = %cond.end
  %38 = load %struct.input_dev*, %struct.input_dev** %input_dev, align 8, !dbg !6140
  %evbit32 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %38, i32 0, i32 5, !dbg !6142
  %arrayidx33 = getelementptr [1 x i64], [1 x i64]* %evbit32, i64 0, i64 0, !dbg !6140
  %39 = load i64, i64* %arrayidx33, align 8, !dbg !6143
  %or = or i64 %39, 131072, !dbg !6143
  store i64 %or, i64* %arrayidx33, align 8, !dbg !6143
  %40 = load %struct.input_dev*, %struct.input_dev** %input_dev, align 8, !dbg !6144
  %ledbit = getelementptr inbounds %struct.input_dev, %struct.input_dev* %40, i32 0, i32 10, !dbg !6145
  %arrayidx34 = getelementptr [1 x i64], [1 x i64]* %ledbit, i64 0, i64 0, !dbg !6144
  store i64 7, i64* %arrayidx34, align 8, !dbg !6146
  br label %if.end35, !dbg !6147

if.end35:                                         ; preds = %if.then31, %cond.end
  %41 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !6148
  %extra36 = getelementptr inbounds %struct.atkbd, %struct.atkbd* %41, i32 0, i32 9, !dbg !6150
  %42 = load i8, i8* %extra36, align 2, !dbg !6150
  %tobool37 = trunc i8 %42 to i1, !dbg !6150
  br i1 %tobool37, label %if.then38, label %if.end42, !dbg !6151

if.then38:                                        ; preds = %if.end35
  %43 = load %struct.input_dev*, %struct.input_dev** %input_dev, align 8, !dbg !6152
  %ledbit39 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %43, i32 0, i32 10, !dbg !6153
  %arrayidx40 = getelementptr [1 x i64], [1 x i64]* %ledbit39, i64 0, i64 0, !dbg !6152
  %44 = load i64, i64* %arrayidx40, align 8, !dbg !6154
  %or41 = or i64 %44, 488, !dbg !6154
  store i64 %or41, i64* %arrayidx40, align 8, !dbg !6154
  br label %if.end42, !dbg !6152

if.end42:                                         ; preds = %if.then38, %if.end35
  %45 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !6155
  %softrepeat = getelementptr inbounds %struct.atkbd, %struct.atkbd* %45, i32 0, i32 11, !dbg !6157
  %46 = load i8, i8* %softrepeat, align 4, !dbg !6157
  %tobool43 = trunc i8 %46 to i1, !dbg !6157
  br i1 %tobool43, label %if.end48, label %if.then44, !dbg !6158

if.then44:                                        ; preds = %if.end42
  %47 = load %struct.input_dev*, %struct.input_dev** %input_dev, align 8, !dbg !6159
  %rep = getelementptr inbounds %struct.input_dev, %struct.input_dev* %47, i32 0, i32 24, !dbg !6161
  %arrayidx45 = getelementptr [2 x i32], [2 x i32]* %rep, i64 0, i64 0, !dbg !6159
  store i32 250, i32* %arrayidx45, align 8, !dbg !6162
  %48 = load %struct.input_dev*, %struct.input_dev** %input_dev, align 8, !dbg !6163
  %rep46 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %48, i32 0, i32 24, !dbg !6164
  %arrayidx47 = getelementptr [2 x i32], [2 x i32]* %rep46, i64 0, i64 1, !dbg !6163
  store i32 33, i32* %arrayidx47, align 4, !dbg !6165
  br label %if.end48, !dbg !6166

if.end48:                                         ; preds = %if.then44, %if.end42
  %49 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !6167
  %softraw = getelementptr inbounds %struct.atkbd, %struct.atkbd* %49, i32 0, i32 12, !dbg !6168
  %50 = load i8, i8* %softraw, align 1, !dbg !6168
  %tobool49 = trunc i8 %50 to i1, !dbg !6168
  %51 = zext i1 %tobool49 to i64, !dbg !6167
  %cond51 = select i1 %tobool49, i64 16, i64 24, !dbg !6167
  %52 = load %struct.input_dev*, %struct.input_dev** %input_dev, align 8, !dbg !6169
  %mscbit = getelementptr inbounds %struct.input_dev, %struct.input_dev* %52, i32 0, i32 9, !dbg !6170
  %arrayidx52 = getelementptr [1 x i64], [1 x i64]* %mscbit, i64 0, i64 0, !dbg !6169
  store i64 %cond51, i64* %arrayidx52, align 8, !dbg !6171
  %53 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !6172
  %scroll = getelementptr inbounds %struct.atkbd, %struct.atkbd* %53, i32 0, i32 13, !dbg !6174
  %54 = load i8, i8* %scroll, align 2, !dbg !6174
  %tobool53 = trunc i8 %54 to i1, !dbg !6174
  br i1 %tobool53, label %if.then54, label %if.end60, !dbg !6175

if.then54:                                        ; preds = %if.end48
  %55 = load %struct.input_dev*, %struct.input_dev** %input_dev, align 8, !dbg !6176
  %evbit55 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %55, i32 0, i32 5, !dbg !6178
  %arrayidx56 = getelementptr [1 x i64], [1 x i64]* %evbit55, i64 0, i64 0, !dbg !6176
  %56 = load i64, i64* %arrayidx56, align 8, !dbg !6179
  %or57 = or i64 %56, 4, !dbg !6179
  store i64 %or57, i64* %arrayidx56, align 8, !dbg !6179
  %57 = load %struct.input_dev*, %struct.input_dev** %input_dev, align 8, !dbg !6180
  %relbit = getelementptr inbounds %struct.input_dev, %struct.input_dev* %57, i32 0, i32 7, !dbg !6181
  %arrayidx58 = getelementptr [1 x i64], [1 x i64]* %relbit, i64 0, i64 0, !dbg !6180
  store i64 320, i64* %arrayidx58, align 8, !dbg !6182
  %58 = load %struct.input_dev*, %struct.input_dev** %input_dev, align 8, !dbg !6183
  %keybit = getelementptr inbounds %struct.input_dev, %struct.input_dev* %58, i32 0, i32 6, !dbg !6184
  %arraydecay59 = getelementptr inbounds [12 x i64], [12 x i64]* %keybit, i64 0, i64 0, !dbg !6183
  call void @__set_bit(i64 274, i64* %arraydecay59) #11, !dbg !6185
  br label %if.end60, !dbg !6186

if.end60:                                         ; preds = %if.then54, %if.end48
  %59 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !6187
  %keycode = getelementptr inbounds %struct.atkbd, %struct.atkbd* %59, i32 0, i32 5, !dbg !6188
  %arraydecay61 = getelementptr inbounds [512 x i16], [512 x i16]* %keycode, i64 0, i64 0, !dbg !6187
  %60 = bitcast i16* %arraydecay61 to i8*, !dbg !6187
  %61 = load %struct.input_dev*, %struct.input_dev** %input_dev, align 8, !dbg !6189
  %keycode62 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %61, i32 0, i32 17, !dbg !6190
  store i8* %60, i8** %keycode62, align 8, !dbg !6191
  %62 = load %struct.input_dev*, %struct.input_dev** %input_dev, align 8, !dbg !6192
  %keycodesize = getelementptr inbounds %struct.input_dev, %struct.input_dev* %62, i32 0, i32 16, !dbg !6193
  store i32 2, i32* %keycodesize, align 8, !dbg !6194
  %63 = load %struct.input_dev*, %struct.input_dev** %input_dev, align 8, !dbg !6195
  %keycodemax = getelementptr inbounds %struct.input_dev, %struct.input_dev* %63, i32 0, i32 15, !dbg !6196
  store i32 512, i32* %keycodemax, align 4, !dbg !6197
  store i32 0, i32* %i, align 4, !dbg !6198
  br label %for.cond, !dbg !6200

for.cond:                                         ; preds = %for.inc, %if.end60
  %64 = load i32, i32* %i, align 4, !dbg !6201
  %cmp = icmp slt i32 %64, 512, !dbg !6203
  br i1 %cmp, label %for.body, label %for.end, !dbg !6204

for.body:                                         ; preds = %for.cond
  %65 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !6205
  %keycode64 = getelementptr inbounds %struct.atkbd, %struct.atkbd* %65, i32 0, i32 5, !dbg !6208
  %66 = load i32, i32* %i, align 4, !dbg !6209
  %idxprom = sext i32 %66 to i64, !dbg !6205
  %arrayidx65 = getelementptr [512 x i16], [512 x i16]* %keycode64, i64 0, i64 %idxprom, !dbg !6205
  %67 = load i16, i16* %arrayidx65, align 2, !dbg !6205
  %conv66 = zext i16 %67 to i32, !dbg !6205
  %cmp67 = icmp ne i32 %conv66, 0, !dbg !6210
  br i1 %cmp67, label %land.lhs.true, label %if.end89, !dbg !6211

land.lhs.true:                                    ; preds = %for.body
  %68 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !6212
  %keycode69 = getelementptr inbounds %struct.atkbd, %struct.atkbd* %68, i32 0, i32 5, !dbg !6213
  %69 = load i32, i32* %i, align 4, !dbg !6214
  %idxprom70 = sext i32 %69 to i64, !dbg !6212
  %arrayidx71 = getelementptr [512 x i16], [512 x i16]* %keycode69, i64 0, i64 %idxprom70, !dbg !6212
  %70 = load i16, i16* %arrayidx71, align 2, !dbg !6212
  %conv72 = zext i16 %70 to i32, !dbg !6212
  %cmp73 = icmp ne i32 %conv72, 255, !dbg !6215
  br i1 %cmp73, label %land.lhs.true75, label %if.end89, !dbg !6216

land.lhs.true75:                                  ; preds = %land.lhs.true
  %71 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !6217
  %keycode76 = getelementptr inbounds %struct.atkbd, %struct.atkbd* %71, i32 0, i32 5, !dbg !6218
  %72 = load i32, i32* %i, align 4, !dbg !6219
  %idxprom77 = sext i32 %72 to i64, !dbg !6217
  %arrayidx78 = getelementptr [512 x i16], [512 x i16]* %keycode76, i64 0, i64 %idxprom77, !dbg !6217
  %73 = load i16, i16* %arrayidx78, align 2, !dbg !6217
  %conv79 = zext i16 %73 to i32, !dbg !6217
  %cmp80 = icmp slt i32 %conv79, 65528, !dbg !6220
  br i1 %cmp80, label %if.then82, label %if.end89, !dbg !6221

if.then82:                                        ; preds = %land.lhs.true75
  %74 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !6222
  %keycode83 = getelementptr inbounds %struct.atkbd, %struct.atkbd* %74, i32 0, i32 5, !dbg !6224
  %75 = load i32, i32* %i, align 4, !dbg !6225
  %idxprom84 = sext i32 %75 to i64, !dbg !6222
  %arrayidx85 = getelementptr [512 x i16], [512 x i16]* %keycode83, i64 0, i64 %idxprom84, !dbg !6222
  %76 = load i16, i16* %arrayidx85, align 2, !dbg !6222
  %conv86 = zext i16 %76 to i64, !dbg !6222
  %77 = load %struct.input_dev*, %struct.input_dev** %input_dev, align 8, !dbg !6226
  %keybit87 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %77, i32 0, i32 6, !dbg !6227
  %arraydecay88 = getelementptr inbounds [12 x i64], [12 x i64]* %keybit87, i64 0, i64 0, !dbg !6226
  call void @__set_bit(i64 %conv86, i64* %arraydecay88) #11, !dbg !6228
  br label %if.end89, !dbg !6229

if.end89:                                         ; preds = %if.then82, %land.lhs.true75, %land.lhs.true, %for.body
  br label %for.inc, !dbg !6230

for.inc:                                          ; preds = %if.end89
  %78 = load i32, i32* %i, align 4, !dbg !6231
  %inc = add i32 %78, 1, !dbg !6231
  store i32 %inc, i32* %i, align 4, !dbg !6231
  br label %for.cond, !dbg !6232, !llvm.loop !6233

for.end:                                          ; preds = %for.cond
  ret void, !dbg !6235
}

; Function Attrs: noredzone
declare dso_local i32 @sysfs_create_group(%struct.kobject*, %struct.attribute_group*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @atkbd_enable(%struct.atkbd* %atkbd) #2 !dbg !6236 {
entry:
  %atkbd.addr = alloca %struct.atkbd*, align 8
  store %struct.atkbd* %atkbd, %struct.atkbd** %atkbd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.atkbd** %atkbd.addr, metadata !6237, metadata !DIExpression()), !dbg !6238
  %0 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !6239
  %ps2dev = getelementptr inbounds %struct.atkbd, %struct.atkbd* %0, i32 0, i32 0, !dbg !6240
  %serio = getelementptr inbounds %struct.ps2dev, %struct.ps2dev* %ps2dev, i32 0, i32 0, !dbg !6241
  %1 = load %struct.serio*, %struct.serio** %serio, align 8, !dbg !6241
  call void @serio_pause_rx(%struct.serio* %1) #11, !dbg !6242
  %2 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !6243
  %enabled = getelementptr inbounds %struct.atkbd, %struct.atkbd* %2, i32 0, i32 14, !dbg !6244
  store i8 1, i8* %enabled, align 1, !dbg !6245
  %3 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !6246
  %ps2dev1 = getelementptr inbounds %struct.atkbd, %struct.atkbd* %3, i32 0, i32 0, !dbg !6247
  %serio2 = getelementptr inbounds %struct.ps2dev, %struct.ps2dev* %ps2dev1, i32 0, i32 0, !dbg !6248
  %4 = load %struct.serio*, %struct.serio** %serio2, align 8, !dbg !6248
  call void @serio_continue_rx(%struct.serio* %4) #11, !dbg !6249
  ret void, !dbg !6250
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @atkbd_activate(%struct.atkbd* %atkbd) #2 !dbg !6251 {
entry:
  %retval = alloca i32, align 4
  %atkbd.addr = alloca %struct.atkbd*, align 8
  %ps2dev = alloca %struct.ps2dev*, align 8
  store %struct.atkbd* %atkbd, %struct.atkbd** %atkbd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.atkbd** %atkbd.addr, metadata !6252, metadata !DIExpression()), !dbg !6253
  call void @llvm.dbg.declare(metadata %struct.ps2dev** %ps2dev, metadata !6254, metadata !DIExpression()), !dbg !6255
  %0 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !6256
  %ps2dev1 = getelementptr inbounds %struct.atkbd, %struct.atkbd* %0, i32 0, i32 0, !dbg !6257
  store %struct.ps2dev* %ps2dev1, %struct.ps2dev** %ps2dev, align 8, !dbg !6255
  %1 = load %struct.ps2dev*, %struct.ps2dev** %ps2dev, align 8, !dbg !6258
  %call = call i32 @ps2_command(%struct.ps2dev* %1, i8* null, i32 244) #11, !dbg !6260
  %tobool = icmp ne i32 %call, 0, !dbg !6260
  br i1 %tobool, label %if.then, label %if.end, !dbg !6261

if.then:                                          ; preds = %entry
  %2 = load %struct.ps2dev*, %struct.ps2dev** %ps2dev, align 8, !dbg !6262
  %serio = getelementptr inbounds %struct.ps2dev, %struct.ps2dev* %2, i32 0, i32 0, !dbg !6262
  %3 = load %struct.serio*, %struct.serio** %serio, align 8, !dbg !6262
  %dev = getelementptr inbounds %struct.serio, %struct.serio* %3, i32 0, i32 18, !dbg !6262
  %4 = load %struct.ps2dev*, %struct.ps2dev** %ps2dev, align 8, !dbg !6262
  %serio2 = getelementptr inbounds %struct.ps2dev, %struct.ps2dev* %4, i32 0, i32 0, !dbg !6262
  %5 = load %struct.serio*, %struct.serio** %serio2, align 8, !dbg !6262
  %phys = getelementptr inbounds %struct.serio, %struct.serio* %5, i32 0, i32 2, !dbg !6262
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %phys, i64 0, i64 0, !dbg !6262
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.41, i64 0, i64 0), i8* %arraydecay) #12, !dbg !6262
  store i32 -1, i32* %retval, align 4, !dbg !6264
  br label %return, !dbg !6264

if.end:                                           ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !6265
  br label %return, !dbg !6265

return:                                           ; preds = %if.end, %if.then
  %6 = load i32, i32* %retval, align 4, !dbg !6266
  ret i32 %6, !dbg !6266
}

; Function Attrs: noredzone
declare dso_local i32 @input_register_device(%struct.input_dev*) #1

; Function Attrs: noredzone
declare dso_local void @sysfs_remove_group(%struct.kobject*, %struct.attribute_group*) #1

; Function Attrs: noredzone
declare dso_local void @serio_close(%struct.serio*) #1

; Function Attrs: noredzone
declare dso_local void @input_free_device(%struct.input_dev*) #1

; Function Attrs: noredzone
declare dso_local void @kfree(i8*) #1

; Function Attrs: noredzone
declare dso_local noalias i8* @__kmalloc(i64, i32) #1

; Function Attrs: nounwind willreturn
declare void @llvm.assume(i1) #7

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @get_order(i64 %size) #8 !dbg !6267 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !6271, metadata !DIExpression()), !dbg !6275
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !6277, metadata !DIExpression()), !dbg !6278
  %retval = alloca i32, align 4
  %size.addr = alloca i64, align 8
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !6279, metadata !DIExpression()), !dbg !6280
  %0 = load i64, i64* %size.addr, align 8, !dbg !6281
  %1 = call i1 @llvm.is.constant.i64(i64 %0), !dbg !6283
  br i1 %1, label %if.then, label %if.end447, !dbg !6284

if.then:                                          ; preds = %entry
  %2 = load i64, i64* %size.addr, align 8, !dbg !6285
  %tobool = icmp ne i64 %2, 0, !dbg !6285
  br i1 %tobool, label %if.end, label %if.then1, !dbg !6288

if.then1:                                         ; preds = %if.then
  store i32 52, i32* %retval, align 4, !dbg !6289
  br label %return, !dbg !6289

if.end:                                           ; preds = %if.then
  %3 = load i64, i64* %size.addr, align 8, !dbg !6290
  %cmp = icmp ult i64 %3, 4096, !dbg !6292
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !6293

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !6294
  br label %return, !dbg !6294

if.end3:                                          ; preds = %if.end
  %4 = load i64, i64* %size.addr, align 8, !dbg !6295
  %sub = sub i64 %4, 1, !dbg !6295
  %5 = call i1 @llvm.is.constant.i64(i64 %sub), !dbg !6295
  br i1 %5, label %cond.true, label %cond.false442, !dbg !6295

cond.true:                                        ; preds = %if.end3
  %6 = load i64, i64* %size.addr, align 8, !dbg !6295
  %sub4 = sub i64 %6, 1, !dbg !6295
  %7 = call i1 @llvm.is.constant.i64(i64 %sub4), !dbg !6295
  br i1 %7, label %cond.true5, label %cond.false439, !dbg !6295

cond.true5:                                       ; preds = %cond.true
  %8 = load i64, i64* %size.addr, align 8, !dbg !6295
  %sub6 = sub i64 %8, 1, !dbg !6295
  %cmp7 = icmp ult i64 %sub6, 2, !dbg !6295
  br i1 %cmp7, label %cond.true8, label %cond.false, !dbg !6295

cond.true8:                                       ; preds = %cond.true5
  br label %cond.end437, !dbg !6295

cond.false:                                       ; preds = %cond.true5
  %9 = load i64, i64* %size.addr, align 8, !dbg !6295
  %sub9 = sub i64 %9, 1, !dbg !6295
  %and = and i64 %sub9, -9223372036854775808, !dbg !6295
  %tobool10 = icmp ne i64 %and, 0, !dbg !6295
  br i1 %tobool10, label %cond.true11, label %cond.false12, !dbg !6295

cond.true11:                                      ; preds = %cond.false
  br label %cond.end435, !dbg !6295

cond.false12:                                     ; preds = %cond.false
  %10 = load i64, i64* %size.addr, align 8, !dbg !6295
  %sub13 = sub i64 %10, 1, !dbg !6295
  %and14 = and i64 %sub13, 4611686018427387904, !dbg !6295
  %tobool15 = icmp ne i64 %and14, 0, !dbg !6295
  br i1 %tobool15, label %cond.true16, label %cond.false17, !dbg !6295

cond.true16:                                      ; preds = %cond.false12
  br label %cond.end433, !dbg !6295

cond.false17:                                     ; preds = %cond.false12
  %11 = load i64, i64* %size.addr, align 8, !dbg !6295
  %sub18 = sub i64 %11, 1, !dbg !6295
  %and19 = and i64 %sub18, 2305843009213693952, !dbg !6295
  %tobool20 = icmp ne i64 %and19, 0, !dbg !6295
  br i1 %tobool20, label %cond.true21, label %cond.false22, !dbg !6295

cond.true21:                                      ; preds = %cond.false17
  br label %cond.end431, !dbg !6295

cond.false22:                                     ; preds = %cond.false17
  %12 = load i64, i64* %size.addr, align 8, !dbg !6295
  %sub23 = sub i64 %12, 1, !dbg !6295
  %and24 = and i64 %sub23, 1152921504606846976, !dbg !6295
  %tobool25 = icmp ne i64 %and24, 0, !dbg !6295
  br i1 %tobool25, label %cond.true26, label %cond.false27, !dbg !6295

cond.true26:                                      ; preds = %cond.false22
  br label %cond.end429, !dbg !6295

cond.false27:                                     ; preds = %cond.false22
  %13 = load i64, i64* %size.addr, align 8, !dbg !6295
  %sub28 = sub i64 %13, 1, !dbg !6295
  %and29 = and i64 %sub28, 576460752303423488, !dbg !6295
  %tobool30 = icmp ne i64 %and29, 0, !dbg !6295
  br i1 %tobool30, label %cond.true31, label %cond.false32, !dbg !6295

cond.true31:                                      ; preds = %cond.false27
  br label %cond.end427, !dbg !6295

cond.false32:                                     ; preds = %cond.false27
  %14 = load i64, i64* %size.addr, align 8, !dbg !6295
  %sub33 = sub i64 %14, 1, !dbg !6295
  %and34 = and i64 %sub33, 288230376151711744, !dbg !6295
  %tobool35 = icmp ne i64 %and34, 0, !dbg !6295
  br i1 %tobool35, label %cond.true36, label %cond.false37, !dbg !6295

cond.true36:                                      ; preds = %cond.false32
  br label %cond.end425, !dbg !6295

cond.false37:                                     ; preds = %cond.false32
  %15 = load i64, i64* %size.addr, align 8, !dbg !6295
  %sub38 = sub i64 %15, 1, !dbg !6295
  %and39 = and i64 %sub38, 144115188075855872, !dbg !6295
  %tobool40 = icmp ne i64 %and39, 0, !dbg !6295
  br i1 %tobool40, label %cond.true41, label %cond.false42, !dbg !6295

cond.true41:                                      ; preds = %cond.false37
  br label %cond.end423, !dbg !6295

cond.false42:                                     ; preds = %cond.false37
  %16 = load i64, i64* %size.addr, align 8, !dbg !6295
  %sub43 = sub i64 %16, 1, !dbg !6295
  %and44 = and i64 %sub43, 72057594037927936, !dbg !6295
  %tobool45 = icmp ne i64 %and44, 0, !dbg !6295
  br i1 %tobool45, label %cond.true46, label %cond.false47, !dbg !6295

cond.true46:                                      ; preds = %cond.false42
  br label %cond.end421, !dbg !6295

cond.false47:                                     ; preds = %cond.false42
  %17 = load i64, i64* %size.addr, align 8, !dbg !6295
  %sub48 = sub i64 %17, 1, !dbg !6295
  %and49 = and i64 %sub48, 36028797018963968, !dbg !6295
  %tobool50 = icmp ne i64 %and49, 0, !dbg !6295
  br i1 %tobool50, label %cond.true51, label %cond.false52, !dbg !6295

cond.true51:                                      ; preds = %cond.false47
  br label %cond.end419, !dbg !6295

cond.false52:                                     ; preds = %cond.false47
  %18 = load i64, i64* %size.addr, align 8, !dbg !6295
  %sub53 = sub i64 %18, 1, !dbg !6295
  %and54 = and i64 %sub53, 18014398509481984, !dbg !6295
  %tobool55 = icmp ne i64 %and54, 0, !dbg !6295
  br i1 %tobool55, label %cond.true56, label %cond.false57, !dbg !6295

cond.true56:                                      ; preds = %cond.false52
  br label %cond.end417, !dbg !6295

cond.false57:                                     ; preds = %cond.false52
  %19 = load i64, i64* %size.addr, align 8, !dbg !6295
  %sub58 = sub i64 %19, 1, !dbg !6295
  %and59 = and i64 %sub58, 9007199254740992, !dbg !6295
  %tobool60 = icmp ne i64 %and59, 0, !dbg !6295
  br i1 %tobool60, label %cond.true61, label %cond.false62, !dbg !6295

cond.true61:                                      ; preds = %cond.false57
  br label %cond.end415, !dbg !6295

cond.false62:                                     ; preds = %cond.false57
  %20 = load i64, i64* %size.addr, align 8, !dbg !6295
  %sub63 = sub i64 %20, 1, !dbg !6295
  %and64 = and i64 %sub63, 4503599627370496, !dbg !6295
  %tobool65 = icmp ne i64 %and64, 0, !dbg !6295
  br i1 %tobool65, label %cond.true66, label %cond.false67, !dbg !6295

cond.true66:                                      ; preds = %cond.false62
  br label %cond.end413, !dbg !6295

cond.false67:                                     ; preds = %cond.false62
  %21 = load i64, i64* %size.addr, align 8, !dbg !6295
  %sub68 = sub i64 %21, 1, !dbg !6295
  %and69 = and i64 %sub68, 2251799813685248, !dbg !6295
  %tobool70 = icmp ne i64 %and69, 0, !dbg !6295
  br i1 %tobool70, label %cond.true71, label %cond.false72, !dbg !6295

cond.true71:                                      ; preds = %cond.false67
  br label %cond.end411, !dbg !6295

cond.false72:                                     ; preds = %cond.false67
  %22 = load i64, i64* %size.addr, align 8, !dbg !6295
  %sub73 = sub i64 %22, 1, !dbg !6295
  %and74 = and i64 %sub73, 1125899906842624, !dbg !6295
  %tobool75 = icmp ne i64 %and74, 0, !dbg !6295
  br i1 %tobool75, label %cond.true76, label %cond.false77, !dbg !6295

cond.true76:                                      ; preds = %cond.false72
  br label %cond.end409, !dbg !6295

cond.false77:                                     ; preds = %cond.false72
  %23 = load i64, i64* %size.addr, align 8, !dbg !6295
  %sub78 = sub i64 %23, 1, !dbg !6295
  %and79 = and i64 %sub78, 562949953421312, !dbg !6295
  %tobool80 = icmp ne i64 %and79, 0, !dbg !6295
  br i1 %tobool80, label %cond.true81, label %cond.false82, !dbg !6295

cond.true81:                                      ; preds = %cond.false77
  br label %cond.end407, !dbg !6295

cond.false82:                                     ; preds = %cond.false77
  %24 = load i64, i64* %size.addr, align 8, !dbg !6295
  %sub83 = sub i64 %24, 1, !dbg !6295
  %and84 = and i64 %sub83, 281474976710656, !dbg !6295
  %tobool85 = icmp ne i64 %and84, 0, !dbg !6295
  br i1 %tobool85, label %cond.true86, label %cond.false87, !dbg !6295

cond.true86:                                      ; preds = %cond.false82
  br label %cond.end405, !dbg !6295

cond.false87:                                     ; preds = %cond.false82
  %25 = load i64, i64* %size.addr, align 8, !dbg !6295
  %sub88 = sub i64 %25, 1, !dbg !6295
  %and89 = and i64 %sub88, 140737488355328, !dbg !6295
  %tobool90 = icmp ne i64 %and89, 0, !dbg !6295
  br i1 %tobool90, label %cond.true91, label %cond.false92, !dbg !6295

cond.true91:                                      ; preds = %cond.false87
  br label %cond.end403, !dbg !6295

cond.false92:                                     ; preds = %cond.false87
  %26 = load i64, i64* %size.addr, align 8, !dbg !6295
  %sub93 = sub i64 %26, 1, !dbg !6295
  %and94 = and i64 %sub93, 70368744177664, !dbg !6295
  %tobool95 = icmp ne i64 %and94, 0, !dbg !6295
  br i1 %tobool95, label %cond.true96, label %cond.false97, !dbg !6295

cond.true96:                                      ; preds = %cond.false92
  br label %cond.end401, !dbg !6295

cond.false97:                                     ; preds = %cond.false92
  %27 = load i64, i64* %size.addr, align 8, !dbg !6295
  %sub98 = sub i64 %27, 1, !dbg !6295
  %and99 = and i64 %sub98, 35184372088832, !dbg !6295
  %tobool100 = icmp ne i64 %and99, 0, !dbg !6295
  br i1 %tobool100, label %cond.true101, label %cond.false102, !dbg !6295

cond.true101:                                     ; preds = %cond.false97
  br label %cond.end399, !dbg !6295

cond.false102:                                    ; preds = %cond.false97
  %28 = load i64, i64* %size.addr, align 8, !dbg !6295
  %sub103 = sub i64 %28, 1, !dbg !6295
  %and104 = and i64 %sub103, 17592186044416, !dbg !6295
  %tobool105 = icmp ne i64 %and104, 0, !dbg !6295
  br i1 %tobool105, label %cond.true106, label %cond.false107, !dbg !6295

cond.true106:                                     ; preds = %cond.false102
  br label %cond.end397, !dbg !6295

cond.false107:                                    ; preds = %cond.false102
  %29 = load i64, i64* %size.addr, align 8, !dbg !6295
  %sub108 = sub i64 %29, 1, !dbg !6295
  %and109 = and i64 %sub108, 8796093022208, !dbg !6295
  %tobool110 = icmp ne i64 %and109, 0, !dbg !6295
  br i1 %tobool110, label %cond.true111, label %cond.false112, !dbg !6295

cond.true111:                                     ; preds = %cond.false107
  br label %cond.end395, !dbg !6295

cond.false112:                                    ; preds = %cond.false107
  %30 = load i64, i64* %size.addr, align 8, !dbg !6295
  %sub113 = sub i64 %30, 1, !dbg !6295
  %and114 = and i64 %sub113, 4398046511104, !dbg !6295
  %tobool115 = icmp ne i64 %and114, 0, !dbg !6295
  br i1 %tobool115, label %cond.true116, label %cond.false117, !dbg !6295

cond.true116:                                     ; preds = %cond.false112
  br label %cond.end393, !dbg !6295

cond.false117:                                    ; preds = %cond.false112
  %31 = load i64, i64* %size.addr, align 8, !dbg !6295
  %sub118 = sub i64 %31, 1, !dbg !6295
  %and119 = and i64 %sub118, 2199023255552, !dbg !6295
  %tobool120 = icmp ne i64 %and119, 0, !dbg !6295
  br i1 %tobool120, label %cond.true121, label %cond.false122, !dbg !6295

cond.true121:                                     ; preds = %cond.false117
  br label %cond.end391, !dbg !6295

cond.false122:                                    ; preds = %cond.false117
  %32 = load i64, i64* %size.addr, align 8, !dbg !6295
  %sub123 = sub i64 %32, 1, !dbg !6295
  %and124 = and i64 %sub123, 1099511627776, !dbg !6295
  %tobool125 = icmp ne i64 %and124, 0, !dbg !6295
  br i1 %tobool125, label %cond.true126, label %cond.false127, !dbg !6295

cond.true126:                                     ; preds = %cond.false122
  br label %cond.end389, !dbg !6295

cond.false127:                                    ; preds = %cond.false122
  %33 = load i64, i64* %size.addr, align 8, !dbg !6295
  %sub128 = sub i64 %33, 1, !dbg !6295
  %and129 = and i64 %sub128, 549755813888, !dbg !6295
  %tobool130 = icmp ne i64 %and129, 0, !dbg !6295
  br i1 %tobool130, label %cond.true131, label %cond.false132, !dbg !6295

cond.true131:                                     ; preds = %cond.false127
  br label %cond.end387, !dbg !6295

cond.false132:                                    ; preds = %cond.false127
  %34 = load i64, i64* %size.addr, align 8, !dbg !6295
  %sub133 = sub i64 %34, 1, !dbg !6295
  %and134 = and i64 %sub133, 274877906944, !dbg !6295
  %tobool135 = icmp ne i64 %and134, 0, !dbg !6295
  br i1 %tobool135, label %cond.true136, label %cond.false137, !dbg !6295

cond.true136:                                     ; preds = %cond.false132
  br label %cond.end385, !dbg !6295

cond.false137:                                    ; preds = %cond.false132
  %35 = load i64, i64* %size.addr, align 8, !dbg !6295
  %sub138 = sub i64 %35, 1, !dbg !6295
  %and139 = and i64 %sub138, 137438953472, !dbg !6295
  %tobool140 = icmp ne i64 %and139, 0, !dbg !6295
  br i1 %tobool140, label %cond.true141, label %cond.false142, !dbg !6295

cond.true141:                                     ; preds = %cond.false137
  br label %cond.end383, !dbg !6295

cond.false142:                                    ; preds = %cond.false137
  %36 = load i64, i64* %size.addr, align 8, !dbg !6295
  %sub143 = sub i64 %36, 1, !dbg !6295
  %and144 = and i64 %sub143, 68719476736, !dbg !6295
  %tobool145 = icmp ne i64 %and144, 0, !dbg !6295
  br i1 %tobool145, label %cond.true146, label %cond.false147, !dbg !6295

cond.true146:                                     ; preds = %cond.false142
  br label %cond.end381, !dbg !6295

cond.false147:                                    ; preds = %cond.false142
  %37 = load i64, i64* %size.addr, align 8, !dbg !6295
  %sub148 = sub i64 %37, 1, !dbg !6295
  %and149 = and i64 %sub148, 34359738368, !dbg !6295
  %tobool150 = icmp ne i64 %and149, 0, !dbg !6295
  br i1 %tobool150, label %cond.true151, label %cond.false152, !dbg !6295

cond.true151:                                     ; preds = %cond.false147
  br label %cond.end379, !dbg !6295

cond.false152:                                    ; preds = %cond.false147
  %38 = load i64, i64* %size.addr, align 8, !dbg !6295
  %sub153 = sub i64 %38, 1, !dbg !6295
  %and154 = and i64 %sub153, 17179869184, !dbg !6295
  %tobool155 = icmp ne i64 %and154, 0, !dbg !6295
  br i1 %tobool155, label %cond.true156, label %cond.false157, !dbg !6295

cond.true156:                                     ; preds = %cond.false152
  br label %cond.end377, !dbg !6295

cond.false157:                                    ; preds = %cond.false152
  %39 = load i64, i64* %size.addr, align 8, !dbg !6295
  %sub158 = sub i64 %39, 1, !dbg !6295
  %and159 = and i64 %sub158, 8589934592, !dbg !6295
  %tobool160 = icmp ne i64 %and159, 0, !dbg !6295
  br i1 %tobool160, label %cond.true161, label %cond.false162, !dbg !6295

cond.true161:                                     ; preds = %cond.false157
  br label %cond.end375, !dbg !6295

cond.false162:                                    ; preds = %cond.false157
  %40 = load i64, i64* %size.addr, align 8, !dbg !6295
  %sub163 = sub i64 %40, 1, !dbg !6295
  %and164 = and i64 %sub163, 4294967296, !dbg !6295
  %tobool165 = icmp ne i64 %and164, 0, !dbg !6295
  br i1 %tobool165, label %cond.true166, label %cond.false167, !dbg !6295

cond.true166:                                     ; preds = %cond.false162
  br label %cond.end373, !dbg !6295

cond.false167:                                    ; preds = %cond.false162
  %41 = load i64, i64* %size.addr, align 8, !dbg !6295
  %sub168 = sub i64 %41, 1, !dbg !6295
  %and169 = and i64 %sub168, 2147483648, !dbg !6295
  %tobool170 = icmp ne i64 %and169, 0, !dbg !6295
  br i1 %tobool170, label %cond.true171, label %cond.false172, !dbg !6295

cond.true171:                                     ; preds = %cond.false167
  br label %cond.end371, !dbg !6295

cond.false172:                                    ; preds = %cond.false167
  %42 = load i64, i64* %size.addr, align 8, !dbg !6295
  %sub173 = sub i64 %42, 1, !dbg !6295
  %and174 = and i64 %sub173, 1073741824, !dbg !6295
  %tobool175 = icmp ne i64 %and174, 0, !dbg !6295
  br i1 %tobool175, label %cond.true176, label %cond.false177, !dbg !6295

cond.true176:                                     ; preds = %cond.false172
  br label %cond.end369, !dbg !6295

cond.false177:                                    ; preds = %cond.false172
  %43 = load i64, i64* %size.addr, align 8, !dbg !6295
  %sub178 = sub i64 %43, 1, !dbg !6295
  %and179 = and i64 %sub178, 536870912, !dbg !6295
  %tobool180 = icmp ne i64 %and179, 0, !dbg !6295
  br i1 %tobool180, label %cond.true181, label %cond.false182, !dbg !6295

cond.true181:                                     ; preds = %cond.false177
  br label %cond.end367, !dbg !6295

cond.false182:                                    ; preds = %cond.false177
  %44 = load i64, i64* %size.addr, align 8, !dbg !6295
  %sub183 = sub i64 %44, 1, !dbg !6295
  %and184 = and i64 %sub183, 268435456, !dbg !6295
  %tobool185 = icmp ne i64 %and184, 0, !dbg !6295
  br i1 %tobool185, label %cond.true186, label %cond.false187, !dbg !6295

cond.true186:                                     ; preds = %cond.false182
  br label %cond.end365, !dbg !6295

cond.false187:                                    ; preds = %cond.false182
  %45 = load i64, i64* %size.addr, align 8, !dbg !6295
  %sub188 = sub i64 %45, 1, !dbg !6295
  %and189 = and i64 %sub188, 134217728, !dbg !6295
  %tobool190 = icmp ne i64 %and189, 0, !dbg !6295
  br i1 %tobool190, label %cond.true191, label %cond.false192, !dbg !6295

cond.true191:                                     ; preds = %cond.false187
  br label %cond.end363, !dbg !6295

cond.false192:                                    ; preds = %cond.false187
  %46 = load i64, i64* %size.addr, align 8, !dbg !6295
  %sub193 = sub i64 %46, 1, !dbg !6295
  %and194 = and i64 %sub193, 67108864, !dbg !6295
  %tobool195 = icmp ne i64 %and194, 0, !dbg !6295
  br i1 %tobool195, label %cond.true196, label %cond.false197, !dbg !6295

cond.true196:                                     ; preds = %cond.false192
  br label %cond.end361, !dbg !6295

cond.false197:                                    ; preds = %cond.false192
  %47 = load i64, i64* %size.addr, align 8, !dbg !6295
  %sub198 = sub i64 %47, 1, !dbg !6295
  %and199 = and i64 %sub198, 33554432, !dbg !6295
  %tobool200 = icmp ne i64 %and199, 0, !dbg !6295
  br i1 %tobool200, label %cond.true201, label %cond.false202, !dbg !6295

cond.true201:                                     ; preds = %cond.false197
  br label %cond.end359, !dbg !6295

cond.false202:                                    ; preds = %cond.false197
  %48 = load i64, i64* %size.addr, align 8, !dbg !6295
  %sub203 = sub i64 %48, 1, !dbg !6295
  %and204 = and i64 %sub203, 16777216, !dbg !6295
  %tobool205 = icmp ne i64 %and204, 0, !dbg !6295
  br i1 %tobool205, label %cond.true206, label %cond.false207, !dbg !6295

cond.true206:                                     ; preds = %cond.false202
  br label %cond.end357, !dbg !6295

cond.false207:                                    ; preds = %cond.false202
  %49 = load i64, i64* %size.addr, align 8, !dbg !6295
  %sub208 = sub i64 %49, 1, !dbg !6295
  %and209 = and i64 %sub208, 8388608, !dbg !6295
  %tobool210 = icmp ne i64 %and209, 0, !dbg !6295
  br i1 %tobool210, label %cond.true211, label %cond.false212, !dbg !6295

cond.true211:                                     ; preds = %cond.false207
  br label %cond.end355, !dbg !6295

cond.false212:                                    ; preds = %cond.false207
  %50 = load i64, i64* %size.addr, align 8, !dbg !6295
  %sub213 = sub i64 %50, 1, !dbg !6295
  %and214 = and i64 %sub213, 4194304, !dbg !6295
  %tobool215 = icmp ne i64 %and214, 0, !dbg !6295
  br i1 %tobool215, label %cond.true216, label %cond.false217, !dbg !6295

cond.true216:                                     ; preds = %cond.false212
  br label %cond.end353, !dbg !6295

cond.false217:                                    ; preds = %cond.false212
  %51 = load i64, i64* %size.addr, align 8, !dbg !6295
  %sub218 = sub i64 %51, 1, !dbg !6295
  %and219 = and i64 %sub218, 2097152, !dbg !6295
  %tobool220 = icmp ne i64 %and219, 0, !dbg !6295
  br i1 %tobool220, label %cond.true221, label %cond.false222, !dbg !6295

cond.true221:                                     ; preds = %cond.false217
  br label %cond.end351, !dbg !6295

cond.false222:                                    ; preds = %cond.false217
  %52 = load i64, i64* %size.addr, align 8, !dbg !6295
  %sub223 = sub i64 %52, 1, !dbg !6295
  %and224 = and i64 %sub223, 1048576, !dbg !6295
  %tobool225 = icmp ne i64 %and224, 0, !dbg !6295
  br i1 %tobool225, label %cond.true226, label %cond.false227, !dbg !6295

cond.true226:                                     ; preds = %cond.false222
  br label %cond.end349, !dbg !6295

cond.false227:                                    ; preds = %cond.false222
  %53 = load i64, i64* %size.addr, align 8, !dbg !6295
  %sub228 = sub i64 %53, 1, !dbg !6295
  %and229 = and i64 %sub228, 524288, !dbg !6295
  %tobool230 = icmp ne i64 %and229, 0, !dbg !6295
  br i1 %tobool230, label %cond.true231, label %cond.false232, !dbg !6295

cond.true231:                                     ; preds = %cond.false227
  br label %cond.end347, !dbg !6295

cond.false232:                                    ; preds = %cond.false227
  %54 = load i64, i64* %size.addr, align 8, !dbg !6295
  %sub233 = sub i64 %54, 1, !dbg !6295
  %and234 = and i64 %sub233, 262144, !dbg !6295
  %tobool235 = icmp ne i64 %and234, 0, !dbg !6295
  br i1 %tobool235, label %cond.true236, label %cond.false237, !dbg !6295

cond.true236:                                     ; preds = %cond.false232
  br label %cond.end345, !dbg !6295

cond.false237:                                    ; preds = %cond.false232
  %55 = load i64, i64* %size.addr, align 8, !dbg !6295
  %sub238 = sub i64 %55, 1, !dbg !6295
  %and239 = and i64 %sub238, 131072, !dbg !6295
  %tobool240 = icmp ne i64 %and239, 0, !dbg !6295
  br i1 %tobool240, label %cond.true241, label %cond.false242, !dbg !6295

cond.true241:                                     ; preds = %cond.false237
  br label %cond.end343, !dbg !6295

cond.false242:                                    ; preds = %cond.false237
  %56 = load i64, i64* %size.addr, align 8, !dbg !6295
  %sub243 = sub i64 %56, 1, !dbg !6295
  %and244 = and i64 %sub243, 65536, !dbg !6295
  %tobool245 = icmp ne i64 %and244, 0, !dbg !6295
  br i1 %tobool245, label %cond.true246, label %cond.false247, !dbg !6295

cond.true246:                                     ; preds = %cond.false242
  br label %cond.end341, !dbg !6295

cond.false247:                                    ; preds = %cond.false242
  %57 = load i64, i64* %size.addr, align 8, !dbg !6295
  %sub248 = sub i64 %57, 1, !dbg !6295
  %and249 = and i64 %sub248, 32768, !dbg !6295
  %tobool250 = icmp ne i64 %and249, 0, !dbg !6295
  br i1 %tobool250, label %cond.true251, label %cond.false252, !dbg !6295

cond.true251:                                     ; preds = %cond.false247
  br label %cond.end339, !dbg !6295

cond.false252:                                    ; preds = %cond.false247
  %58 = load i64, i64* %size.addr, align 8, !dbg !6295
  %sub253 = sub i64 %58, 1, !dbg !6295
  %and254 = and i64 %sub253, 16384, !dbg !6295
  %tobool255 = icmp ne i64 %and254, 0, !dbg !6295
  br i1 %tobool255, label %cond.true256, label %cond.false257, !dbg !6295

cond.true256:                                     ; preds = %cond.false252
  br label %cond.end337, !dbg !6295

cond.false257:                                    ; preds = %cond.false252
  %59 = load i64, i64* %size.addr, align 8, !dbg !6295
  %sub258 = sub i64 %59, 1, !dbg !6295
  %and259 = and i64 %sub258, 8192, !dbg !6295
  %tobool260 = icmp ne i64 %and259, 0, !dbg !6295
  br i1 %tobool260, label %cond.true261, label %cond.false262, !dbg !6295

cond.true261:                                     ; preds = %cond.false257
  br label %cond.end335, !dbg !6295

cond.false262:                                    ; preds = %cond.false257
  %60 = load i64, i64* %size.addr, align 8, !dbg !6295
  %sub263 = sub i64 %60, 1, !dbg !6295
  %and264 = and i64 %sub263, 4096, !dbg !6295
  %tobool265 = icmp ne i64 %and264, 0, !dbg !6295
  br i1 %tobool265, label %cond.true266, label %cond.false267, !dbg !6295

cond.true266:                                     ; preds = %cond.false262
  br label %cond.end333, !dbg !6295

cond.false267:                                    ; preds = %cond.false262
  %61 = load i64, i64* %size.addr, align 8, !dbg !6295
  %sub268 = sub i64 %61, 1, !dbg !6295
  %and269 = and i64 %sub268, 2048, !dbg !6295
  %tobool270 = icmp ne i64 %and269, 0, !dbg !6295
  br i1 %tobool270, label %cond.true271, label %cond.false272, !dbg !6295

cond.true271:                                     ; preds = %cond.false267
  br label %cond.end331, !dbg !6295

cond.false272:                                    ; preds = %cond.false267
  %62 = load i64, i64* %size.addr, align 8, !dbg !6295
  %sub273 = sub i64 %62, 1, !dbg !6295
  %and274 = and i64 %sub273, 1024, !dbg !6295
  %tobool275 = icmp ne i64 %and274, 0, !dbg !6295
  br i1 %tobool275, label %cond.true276, label %cond.false277, !dbg !6295

cond.true276:                                     ; preds = %cond.false272
  br label %cond.end329, !dbg !6295

cond.false277:                                    ; preds = %cond.false272
  %63 = load i64, i64* %size.addr, align 8, !dbg !6295
  %sub278 = sub i64 %63, 1, !dbg !6295
  %and279 = and i64 %sub278, 512, !dbg !6295
  %tobool280 = icmp ne i64 %and279, 0, !dbg !6295
  br i1 %tobool280, label %cond.true281, label %cond.false282, !dbg !6295

cond.true281:                                     ; preds = %cond.false277
  br label %cond.end327, !dbg !6295

cond.false282:                                    ; preds = %cond.false277
  %64 = load i64, i64* %size.addr, align 8, !dbg !6295
  %sub283 = sub i64 %64, 1, !dbg !6295
  %and284 = and i64 %sub283, 256, !dbg !6295
  %tobool285 = icmp ne i64 %and284, 0, !dbg !6295
  br i1 %tobool285, label %cond.true286, label %cond.false287, !dbg !6295

cond.true286:                                     ; preds = %cond.false282
  br label %cond.end325, !dbg !6295

cond.false287:                                    ; preds = %cond.false282
  %65 = load i64, i64* %size.addr, align 8, !dbg !6295
  %sub288 = sub i64 %65, 1, !dbg !6295
  %and289 = and i64 %sub288, 128, !dbg !6295
  %tobool290 = icmp ne i64 %and289, 0, !dbg !6295
  br i1 %tobool290, label %cond.true291, label %cond.false292, !dbg !6295

cond.true291:                                     ; preds = %cond.false287
  br label %cond.end323, !dbg !6295

cond.false292:                                    ; preds = %cond.false287
  %66 = load i64, i64* %size.addr, align 8, !dbg !6295
  %sub293 = sub i64 %66, 1, !dbg !6295
  %and294 = and i64 %sub293, 64, !dbg !6295
  %tobool295 = icmp ne i64 %and294, 0, !dbg !6295
  br i1 %tobool295, label %cond.true296, label %cond.false297, !dbg !6295

cond.true296:                                     ; preds = %cond.false292
  br label %cond.end321, !dbg !6295

cond.false297:                                    ; preds = %cond.false292
  %67 = load i64, i64* %size.addr, align 8, !dbg !6295
  %sub298 = sub i64 %67, 1, !dbg !6295
  %and299 = and i64 %sub298, 32, !dbg !6295
  %tobool300 = icmp ne i64 %and299, 0, !dbg !6295
  br i1 %tobool300, label %cond.true301, label %cond.false302, !dbg !6295

cond.true301:                                     ; preds = %cond.false297
  br label %cond.end319, !dbg !6295

cond.false302:                                    ; preds = %cond.false297
  %68 = load i64, i64* %size.addr, align 8, !dbg !6295
  %sub303 = sub i64 %68, 1, !dbg !6295
  %and304 = and i64 %sub303, 16, !dbg !6295
  %tobool305 = icmp ne i64 %and304, 0, !dbg !6295
  br i1 %tobool305, label %cond.true306, label %cond.false307, !dbg !6295

cond.true306:                                     ; preds = %cond.false302
  br label %cond.end317, !dbg !6295

cond.false307:                                    ; preds = %cond.false302
  %69 = load i64, i64* %size.addr, align 8, !dbg !6295
  %sub308 = sub i64 %69, 1, !dbg !6295
  %and309 = and i64 %sub308, 8, !dbg !6295
  %tobool310 = icmp ne i64 %and309, 0, !dbg !6295
  br i1 %tobool310, label %cond.true311, label %cond.false312, !dbg !6295

cond.true311:                                     ; preds = %cond.false307
  br label %cond.end, !dbg !6295

cond.false312:                                    ; preds = %cond.false307
  %70 = load i64, i64* %size.addr, align 8, !dbg !6295
  %sub313 = sub i64 %70, 1, !dbg !6295
  %and314 = and i64 %sub313, 4, !dbg !6295
  %tobool315 = icmp ne i64 %and314, 0, !dbg !6295
  %71 = zext i1 %tobool315 to i64, !dbg !6295
  %cond = select i1 %tobool315, i32 2, i32 1, !dbg !6295
  br label %cond.end, !dbg !6295

cond.end:                                         ; preds = %cond.false312, %cond.true311
  %cond316 = phi i32 [ 3, %cond.true311 ], [ %cond, %cond.false312 ], !dbg !6295
  br label %cond.end317, !dbg !6295

cond.end317:                                      ; preds = %cond.end, %cond.true306
  %cond318 = phi i32 [ 4, %cond.true306 ], [ %cond316, %cond.end ], !dbg !6295
  br label %cond.end319, !dbg !6295

cond.end319:                                      ; preds = %cond.end317, %cond.true301
  %cond320 = phi i32 [ 5, %cond.true301 ], [ %cond318, %cond.end317 ], !dbg !6295
  br label %cond.end321, !dbg !6295

cond.end321:                                      ; preds = %cond.end319, %cond.true296
  %cond322 = phi i32 [ 6, %cond.true296 ], [ %cond320, %cond.end319 ], !dbg !6295
  br label %cond.end323, !dbg !6295

cond.end323:                                      ; preds = %cond.end321, %cond.true291
  %cond324 = phi i32 [ 7, %cond.true291 ], [ %cond322, %cond.end321 ], !dbg !6295
  br label %cond.end325, !dbg !6295

cond.end325:                                      ; preds = %cond.end323, %cond.true286
  %cond326 = phi i32 [ 8, %cond.true286 ], [ %cond324, %cond.end323 ], !dbg !6295
  br label %cond.end327, !dbg !6295

cond.end327:                                      ; preds = %cond.end325, %cond.true281
  %cond328 = phi i32 [ 9, %cond.true281 ], [ %cond326, %cond.end325 ], !dbg !6295
  br label %cond.end329, !dbg !6295

cond.end329:                                      ; preds = %cond.end327, %cond.true276
  %cond330 = phi i32 [ 10, %cond.true276 ], [ %cond328, %cond.end327 ], !dbg !6295
  br label %cond.end331, !dbg !6295

cond.end331:                                      ; preds = %cond.end329, %cond.true271
  %cond332 = phi i32 [ 11, %cond.true271 ], [ %cond330, %cond.end329 ], !dbg !6295
  br label %cond.end333, !dbg !6295

cond.end333:                                      ; preds = %cond.end331, %cond.true266
  %cond334 = phi i32 [ 12, %cond.true266 ], [ %cond332, %cond.end331 ], !dbg !6295
  br label %cond.end335, !dbg !6295

cond.end335:                                      ; preds = %cond.end333, %cond.true261
  %cond336 = phi i32 [ 13, %cond.true261 ], [ %cond334, %cond.end333 ], !dbg !6295
  br label %cond.end337, !dbg !6295

cond.end337:                                      ; preds = %cond.end335, %cond.true256
  %cond338 = phi i32 [ 14, %cond.true256 ], [ %cond336, %cond.end335 ], !dbg !6295
  br label %cond.end339, !dbg !6295

cond.end339:                                      ; preds = %cond.end337, %cond.true251
  %cond340 = phi i32 [ 15, %cond.true251 ], [ %cond338, %cond.end337 ], !dbg !6295
  br label %cond.end341, !dbg !6295

cond.end341:                                      ; preds = %cond.end339, %cond.true246
  %cond342 = phi i32 [ 16, %cond.true246 ], [ %cond340, %cond.end339 ], !dbg !6295
  br label %cond.end343, !dbg !6295

cond.end343:                                      ; preds = %cond.end341, %cond.true241
  %cond344 = phi i32 [ 17, %cond.true241 ], [ %cond342, %cond.end341 ], !dbg !6295
  br label %cond.end345, !dbg !6295

cond.end345:                                      ; preds = %cond.end343, %cond.true236
  %cond346 = phi i32 [ 18, %cond.true236 ], [ %cond344, %cond.end343 ], !dbg !6295
  br label %cond.end347, !dbg !6295

cond.end347:                                      ; preds = %cond.end345, %cond.true231
  %cond348 = phi i32 [ 19, %cond.true231 ], [ %cond346, %cond.end345 ], !dbg !6295
  br label %cond.end349, !dbg !6295

cond.end349:                                      ; preds = %cond.end347, %cond.true226
  %cond350 = phi i32 [ 20, %cond.true226 ], [ %cond348, %cond.end347 ], !dbg !6295
  br label %cond.end351, !dbg !6295

cond.end351:                                      ; preds = %cond.end349, %cond.true221
  %cond352 = phi i32 [ 21, %cond.true221 ], [ %cond350, %cond.end349 ], !dbg !6295
  br label %cond.end353, !dbg !6295

cond.end353:                                      ; preds = %cond.end351, %cond.true216
  %cond354 = phi i32 [ 22, %cond.true216 ], [ %cond352, %cond.end351 ], !dbg !6295
  br label %cond.end355, !dbg !6295

cond.end355:                                      ; preds = %cond.end353, %cond.true211
  %cond356 = phi i32 [ 23, %cond.true211 ], [ %cond354, %cond.end353 ], !dbg !6295
  br label %cond.end357, !dbg !6295

cond.end357:                                      ; preds = %cond.end355, %cond.true206
  %cond358 = phi i32 [ 24, %cond.true206 ], [ %cond356, %cond.end355 ], !dbg !6295
  br label %cond.end359, !dbg !6295

cond.end359:                                      ; preds = %cond.end357, %cond.true201
  %cond360 = phi i32 [ 25, %cond.true201 ], [ %cond358, %cond.end357 ], !dbg !6295
  br label %cond.end361, !dbg !6295

cond.end361:                                      ; preds = %cond.end359, %cond.true196
  %cond362 = phi i32 [ 26, %cond.true196 ], [ %cond360, %cond.end359 ], !dbg !6295
  br label %cond.end363, !dbg !6295

cond.end363:                                      ; preds = %cond.end361, %cond.true191
  %cond364 = phi i32 [ 27, %cond.true191 ], [ %cond362, %cond.end361 ], !dbg !6295
  br label %cond.end365, !dbg !6295

cond.end365:                                      ; preds = %cond.end363, %cond.true186
  %cond366 = phi i32 [ 28, %cond.true186 ], [ %cond364, %cond.end363 ], !dbg !6295
  br label %cond.end367, !dbg !6295

cond.end367:                                      ; preds = %cond.end365, %cond.true181
  %cond368 = phi i32 [ 29, %cond.true181 ], [ %cond366, %cond.end365 ], !dbg !6295
  br label %cond.end369, !dbg !6295

cond.end369:                                      ; preds = %cond.end367, %cond.true176
  %cond370 = phi i32 [ 30, %cond.true176 ], [ %cond368, %cond.end367 ], !dbg !6295
  br label %cond.end371, !dbg !6295

cond.end371:                                      ; preds = %cond.end369, %cond.true171
  %cond372 = phi i32 [ 31, %cond.true171 ], [ %cond370, %cond.end369 ], !dbg !6295
  br label %cond.end373, !dbg !6295

cond.end373:                                      ; preds = %cond.end371, %cond.true166
  %cond374 = phi i32 [ 32, %cond.true166 ], [ %cond372, %cond.end371 ], !dbg !6295
  br label %cond.end375, !dbg !6295

cond.end375:                                      ; preds = %cond.end373, %cond.true161
  %cond376 = phi i32 [ 33, %cond.true161 ], [ %cond374, %cond.end373 ], !dbg !6295
  br label %cond.end377, !dbg !6295

cond.end377:                                      ; preds = %cond.end375, %cond.true156
  %cond378 = phi i32 [ 34, %cond.true156 ], [ %cond376, %cond.end375 ], !dbg !6295
  br label %cond.end379, !dbg !6295

cond.end379:                                      ; preds = %cond.end377, %cond.true151
  %cond380 = phi i32 [ 35, %cond.true151 ], [ %cond378, %cond.end377 ], !dbg !6295
  br label %cond.end381, !dbg !6295

cond.end381:                                      ; preds = %cond.end379, %cond.true146
  %cond382 = phi i32 [ 36, %cond.true146 ], [ %cond380, %cond.end379 ], !dbg !6295
  br label %cond.end383, !dbg !6295

cond.end383:                                      ; preds = %cond.end381, %cond.true141
  %cond384 = phi i32 [ 37, %cond.true141 ], [ %cond382, %cond.end381 ], !dbg !6295
  br label %cond.end385, !dbg !6295

cond.end385:                                      ; preds = %cond.end383, %cond.true136
  %cond386 = phi i32 [ 38, %cond.true136 ], [ %cond384, %cond.end383 ], !dbg !6295
  br label %cond.end387, !dbg !6295

cond.end387:                                      ; preds = %cond.end385, %cond.true131
  %cond388 = phi i32 [ 39, %cond.true131 ], [ %cond386, %cond.end385 ], !dbg !6295
  br label %cond.end389, !dbg !6295

cond.end389:                                      ; preds = %cond.end387, %cond.true126
  %cond390 = phi i32 [ 40, %cond.true126 ], [ %cond388, %cond.end387 ], !dbg !6295
  br label %cond.end391, !dbg !6295

cond.end391:                                      ; preds = %cond.end389, %cond.true121
  %cond392 = phi i32 [ 41, %cond.true121 ], [ %cond390, %cond.end389 ], !dbg !6295
  br label %cond.end393, !dbg !6295

cond.end393:                                      ; preds = %cond.end391, %cond.true116
  %cond394 = phi i32 [ 42, %cond.true116 ], [ %cond392, %cond.end391 ], !dbg !6295
  br label %cond.end395, !dbg !6295

cond.end395:                                      ; preds = %cond.end393, %cond.true111
  %cond396 = phi i32 [ 43, %cond.true111 ], [ %cond394, %cond.end393 ], !dbg !6295
  br label %cond.end397, !dbg !6295

cond.end397:                                      ; preds = %cond.end395, %cond.true106
  %cond398 = phi i32 [ 44, %cond.true106 ], [ %cond396, %cond.end395 ], !dbg !6295
  br label %cond.end399, !dbg !6295

cond.end399:                                      ; preds = %cond.end397, %cond.true101
  %cond400 = phi i32 [ 45, %cond.true101 ], [ %cond398, %cond.end397 ], !dbg !6295
  br label %cond.end401, !dbg !6295

cond.end401:                                      ; preds = %cond.end399, %cond.true96
  %cond402 = phi i32 [ 46, %cond.true96 ], [ %cond400, %cond.end399 ], !dbg !6295
  br label %cond.end403, !dbg !6295

cond.end403:                                      ; preds = %cond.end401, %cond.true91
  %cond404 = phi i32 [ 47, %cond.true91 ], [ %cond402, %cond.end401 ], !dbg !6295
  br label %cond.end405, !dbg !6295

cond.end405:                                      ; preds = %cond.end403, %cond.true86
  %cond406 = phi i32 [ 48, %cond.true86 ], [ %cond404, %cond.end403 ], !dbg !6295
  br label %cond.end407, !dbg !6295

cond.end407:                                      ; preds = %cond.end405, %cond.true81
  %cond408 = phi i32 [ 49, %cond.true81 ], [ %cond406, %cond.end405 ], !dbg !6295
  br label %cond.end409, !dbg !6295

cond.end409:                                      ; preds = %cond.end407, %cond.true76
  %cond410 = phi i32 [ 50, %cond.true76 ], [ %cond408, %cond.end407 ], !dbg !6295
  br label %cond.end411, !dbg !6295

cond.end411:                                      ; preds = %cond.end409, %cond.true71
  %cond412 = phi i32 [ 51, %cond.true71 ], [ %cond410, %cond.end409 ], !dbg !6295
  br label %cond.end413, !dbg !6295

cond.end413:                                      ; preds = %cond.end411, %cond.true66
  %cond414 = phi i32 [ 52, %cond.true66 ], [ %cond412, %cond.end411 ], !dbg !6295
  br label %cond.end415, !dbg !6295

cond.end415:                                      ; preds = %cond.end413, %cond.true61
  %cond416 = phi i32 [ 53, %cond.true61 ], [ %cond414, %cond.end413 ], !dbg !6295
  br label %cond.end417, !dbg !6295

cond.end417:                                      ; preds = %cond.end415, %cond.true56
  %cond418 = phi i32 [ 54, %cond.true56 ], [ %cond416, %cond.end415 ], !dbg !6295
  br label %cond.end419, !dbg !6295

cond.end419:                                      ; preds = %cond.end417, %cond.true51
  %cond420 = phi i32 [ 55, %cond.true51 ], [ %cond418, %cond.end417 ], !dbg !6295
  br label %cond.end421, !dbg !6295

cond.end421:                                      ; preds = %cond.end419, %cond.true46
  %cond422 = phi i32 [ 56, %cond.true46 ], [ %cond420, %cond.end419 ], !dbg !6295
  br label %cond.end423, !dbg !6295

cond.end423:                                      ; preds = %cond.end421, %cond.true41
  %cond424 = phi i32 [ 57, %cond.true41 ], [ %cond422, %cond.end421 ], !dbg !6295
  br label %cond.end425, !dbg !6295

cond.end425:                                      ; preds = %cond.end423, %cond.true36
  %cond426 = phi i32 [ 58, %cond.true36 ], [ %cond424, %cond.end423 ], !dbg !6295
  br label %cond.end427, !dbg !6295

cond.end427:                                      ; preds = %cond.end425, %cond.true31
  %cond428 = phi i32 [ 59, %cond.true31 ], [ %cond426, %cond.end425 ], !dbg !6295
  br label %cond.end429, !dbg !6295

cond.end429:                                      ; preds = %cond.end427, %cond.true26
  %cond430 = phi i32 [ 60, %cond.true26 ], [ %cond428, %cond.end427 ], !dbg !6295
  br label %cond.end431, !dbg !6295

cond.end431:                                      ; preds = %cond.end429, %cond.true21
  %cond432 = phi i32 [ 61, %cond.true21 ], [ %cond430, %cond.end429 ], !dbg !6295
  br label %cond.end433, !dbg !6295

cond.end433:                                      ; preds = %cond.end431, %cond.true16
  %cond434 = phi i32 [ 62, %cond.true16 ], [ %cond432, %cond.end431 ], !dbg !6295
  br label %cond.end435, !dbg !6295

cond.end435:                                      ; preds = %cond.end433, %cond.true11
  %cond436 = phi i32 [ 63, %cond.true11 ], [ %cond434, %cond.end433 ], !dbg !6295
  br label %cond.end437, !dbg !6295

cond.end437:                                      ; preds = %cond.end435, %cond.true8
  %cond438 = phi i32 [ 0, %cond.true8 ], [ %cond436, %cond.end435 ], !dbg !6295
  br label %cond.end440, !dbg !6295

cond.false439:                                    ; preds = %cond.true
  br label %cond.end440, !dbg !6295

cond.end440:                                      ; preds = %cond.false439, %cond.end437
  %cond441 = phi i32 [ %cond438, %cond.end437 ], [ -1, %cond.false439 ], !dbg !6295
  br label %cond.end444, !dbg !6295

cond.false442:                                    ; preds = %if.end3
  %72 = load i64, i64* %size.addr, align 8, !dbg !6295
  %sub443 = sub i64 %72, 1, !dbg !6295
  %call = call i32 @__ilog2_u64(i64 %sub443) #14, !dbg !6295
  br label %cond.end444, !dbg !6295

cond.end444:                                      ; preds = %cond.false442, %cond.end440
  %cond445 = phi i32 [ %cond441, %cond.end440 ], [ %call, %cond.false442 ], !dbg !6295
  %sub446 = sub i32 %cond445, 12, !dbg !6296
  %add = add i32 %sub446, 1, !dbg !6297
  store i32 %add, i32* %retval, align 4, !dbg !6298
  br label %return, !dbg !6298

if.end447:                                        ; preds = %entry
  %73 = load i64, i64* %size.addr, align 8, !dbg !6299
  %dec = add i64 %73, -1, !dbg !6299
  store i64 %dec, i64* %size.addr, align 8, !dbg !6299
  %74 = load i64, i64* %size.addr, align 8, !dbg !6300
  %shr = lshr i64 %74, 12, !dbg !6300
  store i64 %shr, i64* %size.addr, align 8, !dbg !6300
  %75 = load i64, i64* %size.addr, align 8, !dbg !6301
  store i64 %75, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !6278
  %76 = load i32, i32* %bitpos.i, align 4, !dbg !6302
  %77 = load i64, i64* %x.addr.i, align 8, !dbg !6303
  %78 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %77, i32 %76) #9, !dbg !6302, !srcloc !6304
  store i32 %78, i32* %bitpos.i, align 4, !dbg !6302
  %79 = load i32, i32* %bitpos.i, align 4, !dbg !6305
  %add.i = add i32 %79, 1, !dbg !6306
  store i32 %add.i, i32* %retval, align 4, !dbg !6307
  br label %return, !dbg !6307

return:                                           ; preds = %if.end447, %cond.end444, %if.then2, %if.then1
  %80 = load i32, i32* %retval, align 4, !dbg !6308
  ret i32 %80, !dbg !6308
}

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @__ilog2_u64(i64 %n) #8 !dbg !6309 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !6271, metadata !DIExpression()), !dbg !6313
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !6277, metadata !DIExpression()), !dbg !6315
  %n.addr = alloca i64, align 8
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !6316, metadata !DIExpression()), !dbg !6317
  %0 = load i64, i64* %n.addr, align 8, !dbg !6318
  store i64 %0, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !6315
  %1 = load i32, i32* %bitpos.i, align 4, !dbg !6319
  %2 = load i64, i64* %x.addr.i, align 8, !dbg !6320
  %3 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %2, i32 %1) #9, !dbg !6319, !srcloc !6304
  store i32 %3, i32* %bitpos.i, align 4, !dbg !6319
  %4 = load i32, i32* %bitpos.i, align 4, !dbg !6321
  %add.i = add i32 %4, 1, !dbg !6322
  %sub = sub i32 %add.i, 1, !dbg !6323
  ret i32 %sub, !dbg !6324
}

; Function Attrs: noredzone
declare dso_local noalias i8* @kmalloc_order(i64, i32, i32) #1

; Function Attrs: noredzone
declare dso_local noalias i8* @kmem_cache_alloc(%struct.kmem_cache*, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kasan_kmalloc(%struct.kmem_cache* %s, i8* %object, i64 %size, i32 %flags) #2 !dbg !6325 {
entry:
  %s.addr = alloca %struct.kmem_cache*, align 8
  %object.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store %struct.kmem_cache* %s, %struct.kmem_cache** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr, metadata !6328, metadata !DIExpression()), !dbg !6329
  store i8* %object, i8** %object.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %object.addr, metadata !6330, metadata !DIExpression()), !dbg !6331
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !6332, metadata !DIExpression()), !dbg !6333
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !6334, metadata !DIExpression()), !dbg !6335
  %0 = load i8*, i8** %object.addr, align 8, !dbg !6336
  ret i8* %0, !dbg !6337
}

; Function Attrs: noredzone
declare dso_local void @mutex_lock(%struct.mutex*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @schedule_delayed_work(%struct.delayed_work* %dwork, i64 %delay) #2 !dbg !6338 {
entry:
  %dwork.addr = alloca %struct.delayed_work*, align 8
  %delay.addr = alloca i64, align 8
  store %struct.delayed_work* %dwork, %struct.delayed_work** %dwork.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.delayed_work** %dwork.addr, metadata !6342, metadata !DIExpression()), !dbg !6343
  store i64 %delay, i64* %delay.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %delay.addr, metadata !6344, metadata !DIExpression()), !dbg !6345
  %0 = load %struct.workqueue_struct*, %struct.workqueue_struct** @system_wq, align 8, !dbg !6346
  %1 = load %struct.delayed_work*, %struct.delayed_work** %dwork.addr, align 8, !dbg !6347
  %2 = load i64, i64* %delay.addr, align 8, !dbg !6348
  %call = call zeroext i1 @queue_delayed_work(%struct.workqueue_struct* %0, %struct.delayed_work* %1, i64 %2) #11, !dbg !6349
  ret i1 %call, !dbg !6350
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @test_and_clear_bit(i64 %nr, i64* %addr) #2 !dbg !6351 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !6355, metadata !DIExpression()), !dbg !6357
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !6359, metadata !DIExpression()), !dbg !6360
  %c.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %c.i, metadata !6361, metadata !DIExpression()), !dbg !6363
  %tmp.i = alloca i8, align 1
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !6364, metadata !DIExpression()), !dbg !6366
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !6368, metadata !DIExpression()), !dbg !6369
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !6370, metadata !DIExpression()), !dbg !6371
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !6372, metadata !DIExpression()), !dbg !6373
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !6374
  %1 = load i64, i64* %nr.addr, align 8, !dbg !6375
  %div = sdiv i64 %1, 64, !dbg !6375
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !6376
  %2 = bitcast i64* %add.ptr to i8*, !dbg !6374
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !6377
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !6378
  %conv.i = trunc i64 %4 to i32, !dbg !6378
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #13, !dbg !6379
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !6380
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !6380
  call void @kcsan_check_access(i8* %5, i64 %6, i32 7) #13, !dbg !6380
  %7 = load i64, i64* %nr.addr, align 8, !dbg !6381
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !6382
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64*, i64** %addr.addr.i, align 8, !dbg !6363
  %10 = load i64, i64* %nr.addr.i, align 8, !dbg !6363
  %11 = call i8 asm sideeffect " btrq  $2, $0\0A\09/* output condition code c*/\0A", "=*m,={@ccc},Ir,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %9, i64 %10, i64* %9) #10, !dbg !6363, !srcloc !6383
  store i8 %11, i8* %c.i, align 1, !dbg !6363
  %12 = load i8, i8* %c.i, align 1, !dbg !6363
  %tobool.i = trunc i8 %12 to i1, !dbg !6363
  %frombool.i = zext i1 %tobool.i to i8, !dbg !6363
  store i8 %frombool.i, i8* %tmp.i, align 1, !dbg !6363
  %13 = load i8, i8* %tmp.i, align 1, !dbg !6363
  %tobool1.i = trunc i8 %13 to i1, !dbg !6363
  ret i1 %tobool1.i, !dbg !6384
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @atkbd_set_leds(%struct.atkbd* %atkbd) #2 !dbg !6385 {
entry:
  %retval = alloca i32, align 4
  %atkbd.addr = alloca %struct.atkbd*, align 8
  %dev = alloca %struct.input_dev*, align 8
  %param = alloca [2 x i8], align 1
  store %struct.atkbd* %atkbd, %struct.atkbd** %atkbd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.atkbd** %atkbd.addr, metadata !6386, metadata !DIExpression()), !dbg !6387
  call void @llvm.dbg.declare(metadata %struct.input_dev** %dev, metadata !6388, metadata !DIExpression()), !dbg !6389
  %0 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !6390
  %dev1 = getelementptr inbounds %struct.atkbd, %struct.atkbd* %0, i32 0, i32 1, !dbg !6391
  %1 = load %struct.input_dev*, %struct.input_dev** %dev1, align 8, !dbg !6391
  store %struct.input_dev* %1, %struct.input_dev** %dev, align 8, !dbg !6389
  call void @llvm.dbg.declare(metadata [2 x i8]* %param, metadata !6392, metadata !DIExpression()), !dbg !6393
  %2 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !6394
  %led = getelementptr inbounds %struct.input_dev, %struct.input_dev* %2, i32 0, i32 28, !dbg !6395
  %arraydecay = getelementptr inbounds [1 x i64], [1 x i64]* %led, i64 0, i64 0, !dbg !6394
  %call = call zeroext i1 @test_bit(i64 2, i64* %arraydecay) #11, !dbg !6396
  %3 = zext i1 %call to i64, !dbg !6396
  %cond = select i1 %call, i32 1, i32 0, !dbg !6396
  %4 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !6397
  %led2 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %4, i32 0, i32 28, !dbg !6398
  %arraydecay3 = getelementptr inbounds [1 x i64], [1 x i64]* %led2, i64 0, i64 0, !dbg !6397
  %call4 = call zeroext i1 @test_bit(i64 0, i64* %arraydecay3) #11, !dbg !6399
  %5 = zext i1 %call4 to i64, !dbg !6399
  %cond5 = select i1 %call4, i32 2, i32 0, !dbg !6399
  %or = or i32 %cond, %cond5, !dbg !6400
  %6 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !6401
  %led6 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %6, i32 0, i32 28, !dbg !6402
  %arraydecay7 = getelementptr inbounds [1 x i64], [1 x i64]* %led6, i64 0, i64 0, !dbg !6401
  %call8 = call zeroext i1 @test_bit(i64 1, i64* %arraydecay7) #11, !dbg !6403
  %7 = zext i1 %call8 to i64, !dbg !6403
  %cond9 = select i1 %call8, i32 4, i32 0, !dbg !6403
  %or10 = or i32 %or, %cond9, !dbg !6404
  %conv = trunc i32 %or10 to i8, !dbg !6405
  %arrayidx = getelementptr [2 x i8], [2 x i8]* %param, i64 0, i64 0, !dbg !6406
  store i8 %conv, i8* %arrayidx, align 1, !dbg !6407
  %8 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !6408
  %ps2dev = getelementptr inbounds %struct.atkbd, %struct.atkbd* %8, i32 0, i32 0, !dbg !6410
  %arraydecay11 = getelementptr inbounds [2 x i8], [2 x i8]* %param, i64 0, i64 0, !dbg !6411
  %call12 = call i32 @ps2_command(%struct.ps2dev* %ps2dev, i8* %arraydecay11, i32 4333) #11, !dbg !6412
  %tobool = icmp ne i32 %call12, 0, !dbg !6412
  br i1 %tobool, label %if.then, label %if.end, !dbg !6413

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !6414
  br label %return, !dbg !6414

if.end:                                           ; preds = %entry
  %9 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !6415
  %extra = getelementptr inbounds %struct.atkbd, %struct.atkbd* %9, i32 0, i32 9, !dbg !6417
  %10 = load i8, i8* %extra, align 2, !dbg !6417
  %tobool13 = trunc i8 %10 to i1, !dbg !6417
  br i1 %tobool13, label %if.then14, label %if.end53, !dbg !6418

if.then14:                                        ; preds = %if.end
  %arrayidx15 = getelementptr [2 x i8], [2 x i8]* %param, i64 0, i64 0, !dbg !6419
  store i8 0, i8* %arrayidx15, align 1, !dbg !6421
  %11 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !6422
  %led16 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %11, i32 0, i32 28, !dbg !6423
  %arraydecay17 = getelementptr inbounds [1 x i64], [1 x i64]* %led16, i64 0, i64 0, !dbg !6422
  %call18 = call zeroext i1 @test_bit(i64 3, i64* %arraydecay17) #11, !dbg !6424
  %12 = zext i1 %call18 to i64, !dbg !6424
  %cond20 = select i1 %call18, i32 1, i32 0, !dbg !6424
  %13 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !6425
  %led21 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %13, i32 0, i32 28, !dbg !6426
  %arraydecay22 = getelementptr inbounds [1 x i64], [1 x i64]* %led21, i64 0, i64 0, !dbg !6425
  %call23 = call zeroext i1 @test_bit(i64 5, i64* %arraydecay22) #11, !dbg !6427
  %14 = zext i1 %call23 to i64, !dbg !6427
  %cond25 = select i1 %call23, i32 2, i32 0, !dbg !6427
  %or26 = or i32 %cond20, %cond25, !dbg !6428
  %15 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !6429
  %led27 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %15, i32 0, i32 28, !dbg !6430
  %arraydecay28 = getelementptr inbounds [1 x i64], [1 x i64]* %led27, i64 0, i64 0, !dbg !6429
  %call29 = call zeroext i1 @test_bit(i64 6, i64* %arraydecay28) #11, !dbg !6431
  %16 = zext i1 %call29 to i64, !dbg !6431
  %cond31 = select i1 %call29, i32 4, i32 0, !dbg !6431
  %or32 = or i32 %or26, %cond31, !dbg !6432
  %17 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !6433
  %led33 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %17, i32 0, i32 28, !dbg !6434
  %arraydecay34 = getelementptr inbounds [1 x i64], [1 x i64]* %led33, i64 0, i64 0, !dbg !6433
  %call35 = call zeroext i1 @test_bit(i64 8, i64* %arraydecay34) #11, !dbg !6435
  %18 = zext i1 %call35 to i64, !dbg !6435
  %cond37 = select i1 %call35, i32 16, i32 0, !dbg !6435
  %or38 = or i32 %or32, %cond37, !dbg !6436
  %19 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !6437
  %led39 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %19, i32 0, i32 28, !dbg !6438
  %arraydecay40 = getelementptr inbounds [1 x i64], [1 x i64]* %led39, i64 0, i64 0, !dbg !6437
  %call41 = call zeroext i1 @test_bit(i64 7, i64* %arraydecay40) #11, !dbg !6439
  %20 = zext i1 %call41 to i64, !dbg !6439
  %cond43 = select i1 %call41, i32 32, i32 0, !dbg !6439
  %or44 = or i32 %or38, %cond43, !dbg !6440
  %conv45 = trunc i32 %or44 to i8, !dbg !6441
  %arrayidx46 = getelementptr [2 x i8], [2 x i8]* %param, i64 0, i64 1, !dbg !6442
  store i8 %conv45, i8* %arrayidx46, align 1, !dbg !6443
  %21 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !6444
  %ps2dev47 = getelementptr inbounds %struct.atkbd, %struct.atkbd* %21, i32 0, i32 0, !dbg !6446
  %arraydecay48 = getelementptr inbounds [2 x i8], [2 x i8]* %param, i64 0, i64 0, !dbg !6447
  %call49 = call i32 @ps2_command(%struct.ps2dev* %ps2dev47, i8* %arraydecay48, i32 8427) #11, !dbg !6448
  %tobool50 = icmp ne i32 %call49, 0, !dbg !6448
  br i1 %tobool50, label %if.then51, label %if.end52, !dbg !6449

if.then51:                                        ; preds = %if.then14
  store i32 -1, i32* %retval, align 4, !dbg !6450
  br label %return, !dbg !6450

if.end52:                                         ; preds = %if.then14
  br label %if.end53, !dbg !6451

if.end53:                                         ; preds = %if.end52, %if.end
  store i32 0, i32* %retval, align 4, !dbg !6452
  br label %return, !dbg !6452

return:                                           ; preds = %if.end53, %if.then51, %if.then
  %22 = load i32, i32* %retval, align 4, !dbg !6453
  ret i32 %22, !dbg !6453
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @atkbd_set_repeat_rate(%struct.atkbd* %atkbd) #2 !dbg !6454 {
entry:
  %atkbd.addr = alloca %struct.atkbd*, align 8
  %period = alloca [32 x i16], align 16
  %delay = alloca [4 x i16], align 2
  %dev = alloca %struct.input_dev*, align 8
  %param = alloca i8, align 1
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store %struct.atkbd* %atkbd, %struct.atkbd** %atkbd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.atkbd** %atkbd.addr, metadata !6455, metadata !DIExpression()), !dbg !6456
  call void @llvm.dbg.declare(metadata [32 x i16]* %period, metadata !6457, metadata !DIExpression()), !dbg !6460
  %0 = bitcast [32 x i16]* %period to i8*, !dbg !6460
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %0, i8* align 16 bitcast ([32 x i16]* @__const.atkbd_set_repeat_rate.period to i8*), i64 64, i1 false), !dbg !6460
  call void @llvm.dbg.declare(metadata [4 x i16]* %delay, metadata !6461, metadata !DIExpression()), !dbg !6463
  %1 = bitcast [4 x i16]* %delay to i8*, !dbg !6463
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %1, i8* align 2 bitcast ([4 x i16]* @__const.atkbd_set_repeat_rate.delay to i8*), i64 8, i1 false), !dbg !6463
  call void @llvm.dbg.declare(metadata %struct.input_dev** %dev, metadata !6464, metadata !DIExpression()), !dbg !6465
  %2 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !6466
  %dev1 = getelementptr inbounds %struct.atkbd, %struct.atkbd* %2, i32 0, i32 1, !dbg !6467
  %3 = load %struct.input_dev*, %struct.input_dev** %dev1, align 8, !dbg !6467
  store %struct.input_dev* %3, %struct.input_dev** %dev, align 8, !dbg !6465
  call void @llvm.dbg.declare(metadata i8* %param, metadata !6468, metadata !DIExpression()), !dbg !6469
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6470, metadata !DIExpression()), !dbg !6471
  store i32 0, i32* %i, align 4, !dbg !6471
  call void @llvm.dbg.declare(metadata i32* %j, metadata !6472, metadata !DIExpression()), !dbg !6473
  store i32 0, i32* %j, align 4, !dbg !6473
  br label %while.cond, !dbg !6474

while.cond:                                       ; preds = %while.body, %entry
  %4 = load i32, i32* %i, align 4, !dbg !6475
  %conv = sext i32 %4 to i64, !dbg !6475
  %cmp = icmp ult i64 %conv, 31, !dbg !6476
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !6477

land.rhs:                                         ; preds = %while.cond
  %5 = load i32, i32* %i, align 4, !dbg !6478
  %idxprom = sext i32 %5 to i64, !dbg !6479
  %arrayidx = getelementptr [32 x i16], [32 x i16]* %period, i64 0, i64 %idxprom, !dbg !6479
  %6 = load i16, i16* %arrayidx, align 2, !dbg !6479
  %conv3 = sext i16 %6 to i32, !dbg !6479
  %7 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !6480
  %rep = getelementptr inbounds %struct.input_dev, %struct.input_dev* %7, i32 0, i32 24, !dbg !6481
  %arrayidx4 = getelementptr [2 x i32], [2 x i32]* %rep, i64 0, i64 1, !dbg !6480
  %8 = load i32, i32* %arrayidx4, align 4, !dbg !6480
  %cmp5 = icmp slt i32 %conv3, %8, !dbg !6482
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %9 = phi i1 [ false, %while.cond ], [ %cmp5, %land.rhs ], !dbg !6483
  br i1 %9, label %while.body, label %while.end, !dbg !6474

while.body:                                       ; preds = %land.end
  %10 = load i32, i32* %i, align 4, !dbg !6484
  %inc = add i32 %10, 1, !dbg !6484
  store i32 %inc, i32* %i, align 4, !dbg !6484
  br label %while.cond, !dbg !6474, !llvm.loop !6485

while.end:                                        ; preds = %land.end
  %11 = load i32, i32* %i, align 4, !dbg !6486
  %idxprom7 = sext i32 %11 to i64, !dbg !6487
  %arrayidx8 = getelementptr [32 x i16], [32 x i16]* %period, i64 0, i64 %idxprom7, !dbg !6487
  %12 = load i16, i16* %arrayidx8, align 2, !dbg !6487
  %conv9 = sext i16 %12 to i32, !dbg !6487
  %13 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !6488
  %rep10 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %13, i32 0, i32 24, !dbg !6489
  %arrayidx11 = getelementptr [2 x i32], [2 x i32]* %rep10, i64 0, i64 1, !dbg !6488
  store i32 %conv9, i32* %arrayidx11, align 4, !dbg !6490
  br label %while.cond12, !dbg !6491

while.cond12:                                     ; preds = %while.body25, %while.end
  %14 = load i32, i32* %j, align 4, !dbg !6492
  %conv13 = sext i32 %14 to i64, !dbg !6492
  %cmp14 = icmp ult i64 %conv13, 3, !dbg !6493
  br i1 %cmp14, label %land.rhs16, label %land.end24, !dbg !6494

land.rhs16:                                       ; preds = %while.cond12
  %15 = load i32, i32* %j, align 4, !dbg !6495
  %idxprom17 = sext i32 %15 to i64, !dbg !6496
  %arrayidx18 = getelementptr [4 x i16], [4 x i16]* %delay, i64 0, i64 %idxprom17, !dbg !6496
  %16 = load i16, i16* %arrayidx18, align 2, !dbg !6496
  %conv19 = sext i16 %16 to i32, !dbg !6496
  %17 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !6497
  %rep20 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %17, i32 0, i32 24, !dbg !6498
  %arrayidx21 = getelementptr [2 x i32], [2 x i32]* %rep20, i64 0, i64 0, !dbg !6497
  %18 = load i32, i32* %arrayidx21, align 8, !dbg !6497
  %cmp22 = icmp slt i32 %conv19, %18, !dbg !6499
  br label %land.end24

land.end24:                                       ; preds = %land.rhs16, %while.cond12
  %19 = phi i1 [ false, %while.cond12 ], [ %cmp22, %land.rhs16 ], !dbg !6483
  br i1 %19, label %while.body25, label %while.end27, !dbg !6491

while.body25:                                     ; preds = %land.end24
  %20 = load i32, i32* %j, align 4, !dbg !6500
  %inc26 = add i32 %20, 1, !dbg !6500
  store i32 %inc26, i32* %j, align 4, !dbg !6500
  br label %while.cond12, !dbg !6491, !llvm.loop !6501

while.end27:                                      ; preds = %land.end24
  %21 = load i32, i32* %j, align 4, !dbg !6502
  %idxprom28 = sext i32 %21 to i64, !dbg !6503
  %arrayidx29 = getelementptr [4 x i16], [4 x i16]* %delay, i64 0, i64 %idxprom28, !dbg !6503
  %22 = load i16, i16* %arrayidx29, align 2, !dbg !6503
  %conv30 = sext i16 %22 to i32, !dbg !6503
  %23 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !6504
  %rep31 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %23, i32 0, i32 24, !dbg !6505
  %arrayidx32 = getelementptr [2 x i32], [2 x i32]* %rep31, i64 0, i64 0, !dbg !6504
  store i32 %conv30, i32* %arrayidx32, align 8, !dbg !6506
  %24 = load i32, i32* %i, align 4, !dbg !6507
  %25 = load i32, i32* %j, align 4, !dbg !6508
  %shl = shl i32 %25, 5, !dbg !6509
  %or = or i32 %24, %shl, !dbg !6510
  %conv33 = trunc i32 %or to i8, !dbg !6507
  store i8 %conv33, i8* %param, align 1, !dbg !6511
  %26 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !6512
  %ps2dev = getelementptr inbounds %struct.atkbd, %struct.atkbd* %26, i32 0, i32 0, !dbg !6513
  %call = call i32 @ps2_command(%struct.ps2dev* %ps2dev, i8* %param, i32 4339) #11, !dbg !6514
  ret i32 %call, !dbg !6515
}

; Function Attrs: noredzone
declare dso_local void @mutex_unlock(%struct.mutex*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @queue_delayed_work(%struct.workqueue_struct* %wq, %struct.delayed_work* %dwork, i64 %delay) #2 !dbg !6516 {
entry:
  %wq.addr = alloca %struct.workqueue_struct*, align 8
  %dwork.addr = alloca %struct.delayed_work*, align 8
  %delay.addr = alloca i64, align 8
  store %struct.workqueue_struct* %wq, %struct.workqueue_struct** %wq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.workqueue_struct** %wq.addr, metadata !6519, metadata !DIExpression()), !dbg !6520
  store %struct.delayed_work* %dwork, %struct.delayed_work** %dwork.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.delayed_work** %dwork.addr, metadata !6521, metadata !DIExpression()), !dbg !6522
  store i64 %delay, i64* %delay.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %delay.addr, metadata !6523, metadata !DIExpression()), !dbg !6524
  %0 = load %struct.workqueue_struct*, %struct.workqueue_struct** %wq.addr, align 8, !dbg !6525
  %1 = load %struct.delayed_work*, %struct.delayed_work** %dwork.addr, align 8, !dbg !6526
  %2 = load i64, i64* %delay.addr, align 8, !dbg !6527
  %call = call zeroext i1 @queue_delayed_work_on(i32 1, %struct.workqueue_struct* %0, %struct.delayed_work* %1, i64 %2) #11, !dbg !6528
  ret i1 %call, !dbg !6529
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @queue_delayed_work_on(i32, %struct.workqueue_struct*, %struct.delayed_work*, i64) #1

; Function Attrs: noredzone
declare dso_local i32 @ps2_command(%struct.ps2dev*, i8*, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dev_set_drvdata(%struct.device* %dev, i8* %data) #2 !dbg !6530 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %data.addr = alloca i8*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !6533, metadata !DIExpression()), !dbg !6534
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !6535, metadata !DIExpression()), !dbg !6536
  %0 = load i8*, i8** %data.addr, align 8, !dbg !6537
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6538
  %driver_data = getelementptr inbounds %struct.device, %struct.device* %1, i32 0, i32 8, !dbg !6539
  store i8* %0, i8** %driver_data, align 8, !dbg !6540
  ret void, !dbg !6541
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @ps2_is_keyboard_id(i8 zeroext) #1

; Function Attrs: cold noredzone
declare dso_local void @_dev_err(%struct.device*, i8*, ...) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @atkbd_deactivate(%struct.atkbd* %atkbd) #2 !dbg !6542 {
entry:
  %atkbd.addr = alloca %struct.atkbd*, align 8
  %ps2dev = alloca %struct.ps2dev*, align 8
  store %struct.atkbd* %atkbd, %struct.atkbd** %atkbd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.atkbd** %atkbd.addr, metadata !6543, metadata !DIExpression()), !dbg !6544
  call void @llvm.dbg.declare(metadata %struct.ps2dev** %ps2dev, metadata !6545, metadata !DIExpression()), !dbg !6546
  %0 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !6547
  %ps2dev1 = getelementptr inbounds %struct.atkbd, %struct.atkbd* %0, i32 0, i32 0, !dbg !6548
  store %struct.ps2dev* %ps2dev1, %struct.ps2dev** %ps2dev, align 8, !dbg !6546
  %1 = load %struct.ps2dev*, %struct.ps2dev** %ps2dev, align 8, !dbg !6549
  %call = call i32 @ps2_command(%struct.ps2dev* %1, i8* null, i32 245) #11, !dbg !6551
  %tobool = icmp ne i32 %call, 0, !dbg !6551
  br i1 %tobool, label %if.then, label %if.end, !dbg !6552

if.then:                                          ; preds = %entry
  %2 = load %struct.ps2dev*, %struct.ps2dev** %ps2dev, align 8, !dbg !6553
  %serio = getelementptr inbounds %struct.ps2dev, %struct.ps2dev* %2, i32 0, i32 0, !dbg !6553
  %3 = load %struct.serio*, %struct.serio** %serio, align 8, !dbg !6553
  %dev = getelementptr inbounds %struct.serio, %struct.serio* %3, i32 0, i32 18, !dbg !6553
  %4 = load %struct.ps2dev*, %struct.ps2dev** %ps2dev, align 8, !dbg !6553
  %serio2 = getelementptr inbounds %struct.ps2dev, %struct.ps2dev* %4, i32 0, i32 0, !dbg !6553
  %5 = load %struct.serio*, %struct.serio** %serio2, align 8, !dbg !6553
  %phys = getelementptr inbounds %struct.serio, %struct.serio* %5, i32 0, i32 2, !dbg !6553
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %phys, i64 0, i64 0, !dbg !6553
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.17, i64 0, i64 0), i8* %arraydecay) #12, !dbg !6553
  br label %if.end, !dbg !6553

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !6554
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @device_property_count_u32(%struct.device* %dev, i8* %propname) #2 !dbg !6555 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %propname.addr = alloca i8*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !6559, metadata !DIExpression()), !dbg !6560
  store i8* %propname, i8** %propname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %propname.addr, metadata !6561, metadata !DIExpression()), !dbg !6562
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6563
  %1 = load i8*, i8** %propname.addr, align 8, !dbg !6564
  %call = call i32 @device_property_read_u32_array(%struct.device* %0, i8* %1, i32* null, i64 0) #11, !dbg !6565
  ret i32 %call, !dbg !6566
}

; Function Attrs: noredzone
declare dso_local i32 @device_property_read_u32_array(%struct.device*, i8*, i32*, i64) #1

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #6

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @bitmap_zero(i64* %dst, i32 %nbits) #2 !dbg !6567 {
entry:
  %dst.addr = alloca i64*, align 8
  %nbits.addr = alloca i32, align 4
  %len = alloca i32, align 4
  store i64* %dst, i64** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %dst.addr, metadata !6571, metadata !DIExpression()), !dbg !6572
  store i32 %nbits, i32* %nbits.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nbits.addr, metadata !6573, metadata !DIExpression()), !dbg !6574
  call void @llvm.dbg.declare(metadata i32* %len, metadata !6575, metadata !DIExpression()), !dbg !6576
  %0 = load i32, i32* %nbits.addr, align 4, !dbg !6577
  %conv = zext i32 %0 to i64, !dbg !6577
  %add = add i64 %conv, 64, !dbg !6577
  %sub = sub i64 %add, 1, !dbg !6577
  %div = udiv i64 %sub, 64, !dbg !6577
  %mul = mul i64 %div, 8, !dbg !6578
  %conv1 = trunc i64 %mul to i32, !dbg !6577
  store i32 %conv1, i32* %len, align 4, !dbg !6576
  %1 = load i64*, i64** %dst.addr, align 8, !dbg !6579
  %2 = bitcast i64* %1 to i8*, !dbg !6580
  %3 = load i32, i32* %len, align 4, !dbg !6581
  %conv2 = zext i32 %3 to i64, !dbg !6581
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 %conv2, i1 false), !dbg !6580
  ret void, !dbg !6582
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @atkbd_get_keymap_from_fwnode(%struct.atkbd* %atkbd) #2 !dbg !6583 {
entry:
  %retval = alloca i32, align 4
  %atkbd.addr = alloca %struct.atkbd*, align 8
  %dev = alloca %struct.device*, align 8
  %i = alloca i32, align 4
  %n = alloca i32, align 4
  %ptr = alloca i32*, align 8
  %scancode = alloca i16, align 2
  %keycode = alloca i16, align 2
  store %struct.atkbd* %atkbd, %struct.atkbd** %atkbd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.atkbd** %atkbd.addr, metadata !6584, metadata !DIExpression()), !dbg !6585
  call void @llvm.dbg.declare(metadata %struct.device** %dev, metadata !6586, metadata !DIExpression()), !dbg !6587
  %0 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !6588
  %ps2dev = getelementptr inbounds %struct.atkbd, %struct.atkbd* %0, i32 0, i32 0, !dbg !6589
  %serio = getelementptr inbounds %struct.ps2dev, %struct.ps2dev* %ps2dev, i32 0, i32 0, !dbg !6590
  %1 = load %struct.serio*, %struct.serio** %serio, align 8, !dbg !6590
  %dev1 = getelementptr inbounds %struct.serio, %struct.serio* %1, i32 0, i32 18, !dbg !6591
  store %struct.device* %dev1, %struct.device** %dev, align 8, !dbg !6587
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6592, metadata !DIExpression()), !dbg !6593
  call void @llvm.dbg.declare(metadata i32* %n, metadata !6594, metadata !DIExpression()), !dbg !6595
  call void @llvm.dbg.declare(metadata i32** %ptr, metadata !6596, metadata !DIExpression()), !dbg !6597
  call void @llvm.dbg.declare(metadata i16* %scancode, metadata !6598, metadata !DIExpression()), !dbg !6599
  call void @llvm.dbg.declare(metadata i16* %keycode, metadata !6600, metadata !DIExpression()), !dbg !6601
  %2 = load %struct.device*, %struct.device** %dev, align 8, !dbg !6602
  %call = call i32 @device_property_count_u32(%struct.device* %2, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.19, i64 0, i64 0)) #11, !dbg !6603
  store i32 %call, i32* %n, align 4, !dbg !6604
  %3 = load i32, i32* %n, align 4, !dbg !6605
  %cmp = icmp sle i32 %3, 0, !dbg !6607
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !6608

lor.lhs.false:                                    ; preds = %entry
  %4 = load i32, i32* %n, align 4, !dbg !6609
  %cmp2 = icmp sgt i32 %4, 512, !dbg !6610
  br i1 %cmp2, label %if.then, label %if.end, !dbg !6611

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 -6, i32* %retval, align 4, !dbg !6612
  br label %return, !dbg !6612

if.end:                                           ; preds = %lor.lhs.false
  %5 = load i32, i32* %n, align 4, !dbg !6613
  %conv = sext i32 %5 to i64, !dbg !6613
  %call3 = call i8* @kcalloc(i64 %conv, i64 4, i32 3264) #11, !dbg !6614
  %6 = bitcast i8* %call3 to i32*, !dbg !6614
  store i32* %6, i32** %ptr, align 8, !dbg !6615
  %7 = load i32*, i32** %ptr, align 8, !dbg !6616
  %tobool = icmp ne i32* %7, null, !dbg !6616
  br i1 %tobool, label %if.end5, label %if.then4, !dbg !6618

if.then4:                                         ; preds = %if.end
  store i32 -12, i32* %retval, align 4, !dbg !6619
  br label %return, !dbg !6619

if.end5:                                          ; preds = %if.end
  %8 = load %struct.device*, %struct.device** %dev, align 8, !dbg !6620
  %9 = load i32*, i32** %ptr, align 8, !dbg !6622
  %10 = load i32, i32* %n, align 4, !dbg !6623
  %conv6 = sext i32 %10 to i64, !dbg !6623
  %call7 = call i32 @device_property_read_u32_array(%struct.device* %8, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.19, i64 0, i64 0), i32* %9, i64 %conv6) #11, !dbg !6624
  %tobool8 = icmp ne i32 %call7, 0, !dbg !6624
  br i1 %tobool8, label %if.then9, label %if.end10, !dbg !6625

if.then9:                                         ; preds = %if.end5
  %11 = load %struct.device*, %struct.device** %dev, align 8, !dbg !6626
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %11, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.20, i64 0, i64 0)) #12, !dbg !6626
  %12 = load i32*, i32** %ptr, align 8, !dbg !6628
  %13 = bitcast i32* %12 to i8*, !dbg !6628
  call void @kfree(i8* %13) #11, !dbg !6629
  store i32 -22, i32* %retval, align 4, !dbg !6630
  br label %return, !dbg !6630

if.end10:                                         ; preds = %if.end5
  %14 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !6631
  %keycode11 = getelementptr inbounds %struct.atkbd, %struct.atkbd* %14, i32 0, i32 5, !dbg !6632
  %arraydecay = getelementptr inbounds [512 x i16], [512 x i16]* %keycode11, i64 0, i64 0, !dbg !6633
  %15 = bitcast i16* %arraydecay to i8*, !dbg !6633
  call void @llvm.memset.p0i8.i64(i8* align 2 %15, i8 0, i64 1024, i1 false), !dbg !6633
  store i32 0, i32* %i, align 4, !dbg !6634
  br label %for.cond, !dbg !6636

for.cond:                                         ; preds = %for.inc, %if.end10
  %16 = load i32, i32* %i, align 4, !dbg !6637
  %17 = load i32, i32* %n, align 4, !dbg !6639
  %cmp12 = icmp slt i32 %16, %17, !dbg !6640
  br i1 %cmp12, label %for.body, label %for.end, !dbg !6641

for.body:                                         ; preds = %for.cond
  %18 = load i32*, i32** %ptr, align 8, !dbg !6642
  %19 = load i32, i32* %i, align 4, !dbg !6642
  %idxprom = sext i32 %19 to i64, !dbg !6642
  %arrayidx = getelementptr i32, i32* %18, i64 %idxprom, !dbg !6642
  %20 = load i32, i32* %arrayidx, align 4, !dbg !6642
  %shr = lshr i32 %20, 16, !dbg !6642
  %and = and i32 %shr, 65535, !dbg !6642
  %conv14 = trunc i32 %and to i16, !dbg !6642
  store i16 %conv14, i16* %scancode, align 2, !dbg !6644
  %21 = load i32*, i32** %ptr, align 8, !dbg !6645
  %22 = load i32, i32* %i, align 4, !dbg !6645
  %idxprom15 = sext i32 %22 to i64, !dbg !6645
  %arrayidx16 = getelementptr i32, i32* %21, i64 %idxprom15, !dbg !6645
  %23 = load i32, i32* %arrayidx16, align 4, !dbg !6645
  %and17 = and i32 %23, 65535, !dbg !6645
  %conv18 = trunc i32 %and17 to i16, !dbg !6645
  store i16 %conv18, i16* %keycode, align 2, !dbg !6646
  %24 = load i16, i16* %keycode, align 2, !dbg !6647
  %25 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !6648
  %keycode19 = getelementptr inbounds %struct.atkbd, %struct.atkbd* %25, i32 0, i32 5, !dbg !6649
  %26 = load i16, i16* %scancode, align 2, !dbg !6650
  %idxprom20 = zext i16 %26 to i64, !dbg !6648
  %arrayidx21 = getelementptr [512 x i16], [512 x i16]* %keycode19, i64 0, i64 %idxprom20, !dbg !6648
  store i16 %24, i16* %arrayidx21, align 2, !dbg !6651
  br label %for.inc, !dbg !6652

for.inc:                                          ; preds = %for.body
  %27 = load i32, i32* %i, align 4, !dbg !6653
  %inc = add i32 %27, 1, !dbg !6653
  store i32 %inc, i32* %i, align 4, !dbg !6653
  br label %for.cond, !dbg !6654, !llvm.loop !6655

for.end:                                          ; preds = %for.cond
  %28 = load i32*, i32** %ptr, align 8, !dbg !6657
  %29 = bitcast i32* %28 to i8*, !dbg !6657
  call void @kfree(i8* %29) #11, !dbg !6658
  store i32 0, i32* %retval, align 4, !dbg !6659
  br label %return, !dbg !6659

return:                                           ; preds = %for.end, %if.then9, %if.then4, %if.then
  %30 = load i32, i32* %retval, align 4, !dbg !6660
  ret i32 %30, !dbg !6660
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kcalloc(i64 %n, i64 %size, i32 %flags) #2 !dbg !6661 {
entry:
  %n.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !6664, metadata !DIExpression()), !dbg !6665
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !6666, metadata !DIExpression()), !dbg !6667
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !6668, metadata !DIExpression()), !dbg !6669
  %0 = load i64, i64* %n.addr, align 8, !dbg !6670
  %1 = load i64, i64* %size.addr, align 8, !dbg !6671
  %2 = load i32, i32* %flags.addr, align 4, !dbg !6672
  %or = or i32 %2, 256, !dbg !6673
  %call = call i8* @kmalloc_array(i64 %0, i64 %1, i32 %or) #11, !dbg !6674
  ret i8* %call, !dbg !6675
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kmalloc_array(i64 %n, i64 %size, i32 %flags) #2 !dbg !6676 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !5273, metadata !DIExpression()), !dbg !6677
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !5283, metadata !DIExpression()), !dbg !6681
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !5285, metadata !DIExpression()), !dbg !6682
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !5287, metadata !DIExpression()), !dbg !6683
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !5289, metadata !DIExpression()), !dbg !6684
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !5295, metadata !DIExpression()), !dbg !6686
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !5301, metadata !DIExpression()), !dbg !6688
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !5310, metadata !DIExpression()), !dbg !6691
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !5312, metadata !DIExpression()), !dbg !6692
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !5314, metadata !DIExpression()), !dbg !6693
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !5316, metadata !DIExpression()), !dbg !6694
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !5318, metadata !DIExpression()), !dbg !6695
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !5320, metadata !DIExpression()), !dbg !6696
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !5322, metadata !DIExpression()), !dbg !6697
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !5324, metadata !DIExpression()), !dbg !6698
  %retval = alloca i8*, align 8
  %n.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  %bytes = alloca i64, align 8
  %__a = alloca i64, align 8
  %__b = alloca i64, align 8
  %__d = alloca i64*, align 8
  %tmp = alloca i8, align 1
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !6699, metadata !DIExpression()), !dbg !6700
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !6701, metadata !DIExpression()), !dbg !6702
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !6703, metadata !DIExpression()), !dbg !6704
  call void @llvm.dbg.declare(metadata i64* %bytes, metadata !6705, metadata !DIExpression()), !dbg !6706
  call void @llvm.dbg.declare(metadata i64* %__a, metadata !6707, metadata !DIExpression()), !dbg !6710
  %0 = load i64, i64* %n.addr, align 8, !dbg !6710
  store i64 %0, i64* %__a, align 8, !dbg !6710
  call void @llvm.dbg.declare(metadata i64* %__b, metadata !6711, metadata !DIExpression()), !dbg !6710
  %1 = load i64, i64* %size.addr, align 8, !dbg !6710
  store i64 %1, i64* %__b, align 8, !dbg !6710
  call void @llvm.dbg.declare(metadata i64** %__d, metadata !6712, metadata !DIExpression()), !dbg !6710
  store i64* %bytes, i64** %__d, align 8, !dbg !6710
  %cmp = icmp eq i64* %__a, %__b, !dbg !6710
  %conv = zext i1 %cmp to i32, !dbg !6710
  %2 = load i64*, i64** %__d, align 8, !dbg !6710
  %cmp1 = icmp eq i64* %__a, %2, !dbg !6710
  %conv2 = zext i1 %cmp1 to i32, !dbg !6710
  %3 = load i64, i64* %__a, align 8, !dbg !6710
  %4 = load i64, i64* %__b, align 8, !dbg !6710
  %5 = load i64*, i64** %__d, align 8, !dbg !6710
  %6 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %3, i64 %4), !dbg !6710
  %7 = extractvalue { i64, i1 } %6, 1, !dbg !6710
  %8 = extractvalue { i64, i1 } %6, 0, !dbg !6710
  store i64 %8, i64* %5, align 8, !dbg !6710
  %frombool = zext i1 %7 to i8, !dbg !6710
  store i8 %frombool, i8* %tmp, align 1, !dbg !6710
  %9 = load i8, i8* %tmp, align 1, !dbg !6710
  %tobool = trunc i8 %9 to i1, !dbg !6710
  %call = call zeroext i1 @__must_check_overflow(i1 zeroext %tobool) #11, !dbg !6714
  %lnot = xor i1 %call, true, !dbg !6714
  %lnot3 = xor i1 %lnot, true, !dbg !6714
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !6714
  %conv4 = sext i32 %lnot.ext to i64, !dbg !6714
  %tobool5 = icmp ne i64 %conv4, 0, !dbg !6714
  br i1 %tobool5, label %if.then, label %if.end, !dbg !6715

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !6716
  br label %return, !dbg !6716

if.end:                                           ; preds = %entry
  %10 = load i64, i64* %n.addr, align 8, !dbg !6717
  %11 = call i1 @llvm.is.constant.i64(i64 %10), !dbg !6718
  br i1 %11, label %land.lhs.true, label %if.end8, !dbg !6719

land.lhs.true:                                    ; preds = %if.end
  %12 = load i64, i64* %size.addr, align 8, !dbg !6720
  %13 = call i1 @llvm.is.constant.i64(i64 %12), !dbg !6721
  br i1 %13, label %if.then6, label %if.end8, !dbg !6722

if.then6:                                         ; preds = %land.lhs.true
  %14 = load i64, i64* %bytes, align 8, !dbg !6723
  %15 = load i32, i32* %flags.addr, align 4, !dbg !6724
  store i64 %14, i64* %size.addr.i, align 8
  store i32 %15, i32* %flags.addr.i, align 4
  %16 = load i64, i64* %size.addr.i, align 8, !dbg !6725
  %17 = call i1 @llvm.is.constant.i64(i64 %16) #10, !dbg !6726
  br i1 %17, label %if.then.i, label %if.end9.i, !dbg !6727

if.then.i:                                        ; preds = %if.then6
  %18 = load i64, i64* %size.addr.i, align 8, !dbg !6728
  %cmp.i = icmp ugt i64 %18, 8192, !dbg !6729
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !6730

if.then1.i:                                       ; preds = %if.then.i
  %19 = load i64, i64* %size.addr.i, align 8, !dbg !6731
  %20 = load i32, i32* %flags.addr.i, align 4, !dbg !6732
  store i64 %19, i64* %size.addr.i.i, align 8
  store i32 %20, i32* %flags.addr.i.i, align 4
  %21 = load i64, i64* %size.addr.i.i, align 8, !dbg !6733
  %call.i.i = call i32 @get_order(i64 %21) #14, !dbg !6734
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !6695
  %22 = load i64, i64* %size.addr.i.i, align 8, !dbg !6735
  %23 = load i32, i32* %flags.addr.i.i, align 4, !dbg !6736
  %24 = load i32, i32* %order.i.i, align 4, !dbg !6737
  store i64 %22, i64* %size.addr.i.i.i, align 8
  store i32 %23, i32* %flags.addr.i.i.i, align 4
  store i32 %24, i32* %order.addr.i.i.i, align 4
  %25 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !6738
  %26 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !6739
  %27 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !6740
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %25, i32 %26, i32 %27) #13, !dbg !6741
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !6741
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !6741
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !6741
  call void @llvm.assume(i1 %maskcond.i.i.i) #10, !dbg !6741
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !6742
  br label %kmalloc.exit, !dbg !6742

if.end.i:                                         ; preds = %if.then.i
  %28 = load i64, i64* %size.addr.i, align 8, !dbg !6743
  store i64 %28, i64* %size.addr.i11.i, align 8
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6744
  %tobool.i.i = icmp ne i64 %29, 0, !dbg !6744
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !6745

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !6746
  br label %kmalloc_index.exit.i, !dbg !6746

if.end.i.i:                                       ; preds = %if.end.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6747
  %cmp.i.i = icmp ule i64 %30, 8, !dbg !6748
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !6749

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !6750
  br label %kmalloc_index.exit.i, !dbg !6750

if.end2.i.i:                                      ; preds = %if.end.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6751
  %cmp3.i.i = icmp ugt i64 %31, 64, !dbg !6752
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !6753

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6754
  %cmp4.i.i = icmp ule i64 %32, 96, !dbg !6755
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !6756

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !6757
  br label %kmalloc_index.exit.i, !dbg !6757

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6758
  %cmp7.i.i = icmp ugt i64 %33, 128, !dbg !6759
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !6760

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6761
  %cmp9.i.i = icmp ule i64 %34, 192, !dbg !6762
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !6763

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !6764
  br label %kmalloc_index.exit.i, !dbg !6764

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6765
  %cmp12.i.i = icmp ule i64 %35, 8, !dbg !6766
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !6767

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !6768
  br label %kmalloc_index.exit.i, !dbg !6768

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6769
  %cmp15.i.i = icmp ule i64 %36, 16, !dbg !6770
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !6771

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !6772
  br label %kmalloc_index.exit.i, !dbg !6772

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6773
  %cmp18.i.i = icmp ule i64 %37, 32, !dbg !6774
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !6775

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !6776
  br label %kmalloc_index.exit.i, !dbg !6776

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6777
  %cmp21.i.i = icmp ule i64 %38, 64, !dbg !6778
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !6779

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !6780
  br label %kmalloc_index.exit.i, !dbg !6780

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6781
  %cmp24.i.i = icmp ule i64 %39, 128, !dbg !6782
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !6783

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !6784
  br label %kmalloc_index.exit.i, !dbg !6784

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6785
  %cmp27.i.i = icmp ule i64 %40, 256, !dbg !6786
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !6787

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !6788
  br label %kmalloc_index.exit.i, !dbg !6788

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6789
  %cmp30.i.i = icmp ule i64 %41, 512, !dbg !6790
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !6791

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !6792
  br label %kmalloc_index.exit.i, !dbg !6792

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6793
  %cmp33.i.i = icmp ule i64 %42, 1024, !dbg !6794
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !6795

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !6796
  br label %kmalloc_index.exit.i, !dbg !6796

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6797
  %cmp36.i.i = icmp ule i64 %43, 2048, !dbg !6798
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !6799

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !6800
  br label %kmalloc_index.exit.i, !dbg !6800

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6801
  %cmp39.i.i = icmp ule i64 %44, 4096, !dbg !6802
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !6803

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !6804
  br label %kmalloc_index.exit.i, !dbg !6804

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %45 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6805
  %cmp42.i.i = icmp ule i64 %45, 8192, !dbg !6806
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !6807

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !6808
  br label %kmalloc_index.exit.i, !dbg !6808

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %46 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6809
  %cmp45.i.i = icmp ule i64 %46, 16384, !dbg !6810
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !6811

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !6812
  br label %kmalloc_index.exit.i, !dbg !6812

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %47 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6813
  %cmp48.i.i = icmp ule i64 %47, 32768, !dbg !6814
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !6815

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !6816
  br label %kmalloc_index.exit.i, !dbg !6816

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %48 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6817
  %cmp51.i.i = icmp ule i64 %48, 65536, !dbg !6818
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !6819

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !6820
  br label %kmalloc_index.exit.i, !dbg !6820

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %49 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6821
  %cmp54.i.i = icmp ule i64 %49, 131072, !dbg !6822
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !6823

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !6824
  br label %kmalloc_index.exit.i, !dbg !6824

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %50 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6825
  %cmp57.i.i = icmp ule i64 %50, 262144, !dbg !6826
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !6827

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !6828
  br label %kmalloc_index.exit.i, !dbg !6828

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %51 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6829
  %cmp60.i.i = icmp ule i64 %51, 524288, !dbg !6830
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !6831

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !6832
  br label %kmalloc_index.exit.i, !dbg !6832

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %52 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6833
  %cmp63.i.i = icmp ule i64 %52, 1048576, !dbg !6834
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !6835

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !6836
  br label %kmalloc_index.exit.i, !dbg !6836

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %53 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6837
  %cmp66.i.i = icmp ule i64 %53, 2097152, !dbg !6838
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !6839

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !6840
  br label %kmalloc_index.exit.i, !dbg !6840

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %54 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6841
  %cmp69.i.i = icmp ule i64 %54, 4194304, !dbg !6842
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !6843

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !6844
  br label %kmalloc_index.exit.i, !dbg !6844

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %55 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6845
  %cmp72.i.i = icmp ule i64 %55, 8388608, !dbg !6846
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !6847

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !6848
  br label %kmalloc_index.exit.i, !dbg !6848

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %56 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6849
  %cmp75.i.i = icmp ule i64 %56, 16777216, !dbg !6850
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !6851

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !6852
  br label %kmalloc_index.exit.i, !dbg !6852

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %57 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6853
  %cmp78.i.i = icmp ule i64 %57, 33554432, !dbg !6854
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !6855

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !6856
  br label %kmalloc_index.exit.i, !dbg !6856

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %58 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6857
  %cmp81.i.i = icmp ule i64 %58, 67108864, !dbg !6858
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !6859

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !6860
  br label %kmalloc_index.exit.i, !dbg !6860

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14, i64 0, i64 0), i32 382, i32 0, i64 12) #10, !dbg !6861, !srcloc !5500
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 105) #10, !dbg !6862, !srcloc !5504
  unreachable, !dbg !6863

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %59 = load i32, i32* %retval.i.i, align 4, !dbg !6864
  store i32 %59, i32* %index.i, align 4, !dbg !6865
  %60 = load i32, i32* %index.i, align 4, !dbg !6866
  %tobool.i = icmp ne i32 %60, 0, !dbg !6866
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !6867

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !6868
  br label %kmalloc.exit, !dbg !6868

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %61 = load i32, i32* %flags.addr.i, align 4, !dbg !6869
  store i32 %61, i32* %flags.addr.i13.i, align 4
  %62 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !6870
  %and.i.i = and i32 %62, 17, !dbg !6870
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !6870
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !6870
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !6870
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !6870
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !6871

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !6872
  br label %kmalloc_type.exit.i, !dbg !6872

if.end.i16.i:                                     ; preds = %if.end4.i
  %63 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !6873
  %and2.i.i = and i32 %63, 1, !dbg !6874
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !6873
  %64 = zext i1 %tobool3.i.i to i64, !dbg !6873
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !6873
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !6875
  br label %kmalloc_type.exit.i, !dbg !6875

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %65 = load i32, i32* %retval.i12.i, align 4, !dbg !6876
  %idxprom.i = zext i32 %65 to i64, !dbg !6877
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !6877
  %66 = load i32, i32* %index.i, align 4, !dbg !6878
  %idxprom6.i = zext i32 %66 to i64, !dbg !6877
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !6877
  %67 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !6877
  %68 = load i32, i32* %flags.addr.i, align 4, !dbg !6879
  %69 = load i64, i64* %size.addr.i, align 8, !dbg !6880
  store %struct.kmem_cache* %67, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %68, i32* %flags.addr.i17.i, align 4
  store i64 %69, i64* %size.addr.i18.i, align 8
  %70 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !6881
  %71 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !6882
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %70, i32 %71) #13, !dbg !6883
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !6883
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !6883
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !6883
  call void @llvm.assume(i1 %maskcond.i.i) #10, !dbg !6883
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !6683
  %72 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !6884
  %73 = load i8*, i8** %ret.i.i, align 8, !dbg !6885
  %74 = load i64, i64* %size.addr.i18.i, align 8, !dbg !6886
  %75 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !6887
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %72, i8* %73, i64 %74, i32 %75) #13, !dbg !6888
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !6889
  %76 = load i8*, i8** %ret.i.i, align 8, !dbg !6890
  store i8* %76, i8** %retval.i, align 8, !dbg !6891
  br label %kmalloc.exit, !dbg !6891

if.end9.i:                                        ; preds = %if.then6
  %77 = load i64, i64* %size.addr.i, align 8, !dbg !6892
  %78 = load i32, i32* %flags.addr.i, align 4, !dbg !6893
  %call10.i = call noalias i8* @__kmalloc(i64 %77, i32 %78) #13, !dbg !6894
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !6894
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !6894
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !6894
  call void @llvm.assume(i1 %maskcond.i) #10, !dbg !6894
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !6895
  br label %kmalloc.exit, !dbg !6895

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %79 = load i8*, i8** %retval.i, align 8, !dbg !6896
  store i8* %79, i8** %retval, align 8, !dbg !6897
  br label %return, !dbg !6897

if.end8:                                          ; preds = %land.lhs.true, %if.end
  %80 = load i64, i64* %bytes, align 8, !dbg !6898
  %81 = load i32, i32* %flags.addr, align 4, !dbg !6899
  %call9 = call noalias i8* @__kmalloc(i64 %80, i32 %81) #11, !dbg !6900
  %ptrint = ptrtoint i8* %call9 to i64, !dbg !6900
  %maskedptr = and i64 %ptrint, 7, !dbg !6900
  %maskcond = icmp eq i64 %maskedptr, 0, !dbg !6900
  call void @llvm.assume(i1 %maskcond), !dbg !6900
  store i8* %call9, i8** %retval, align 8, !dbg !6901
  br label %return, !dbg !6901

return:                                           ; preds = %if.end8, %kmalloc.exit, %if.then
  %82 = load i8*, i8** %retval, align 8, !dbg !6902
  ret i8* %82, !dbg !6902
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__must_check_overflow(i1 zeroext %overflow) #2 !dbg !6903 {
entry:
  %overflow.addr = alloca i8, align 1
  %frombool = zext i1 %overflow to i8
  store i8 %frombool, i8* %overflow.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %overflow.addr, metadata !6907, metadata !DIExpression()), !dbg !6908
  %0 = load i8, i8* %overflow.addr, align 1, !dbg !6909
  %tobool = trunc i8 %0 to i1, !dbg !6909
  %lnot = xor i1 %tobool, true, !dbg !6909
  %lnot1 = xor i1 %lnot, true, !dbg !6909
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !6909
  %conv = sext i32 %lnot.ext to i64, !dbg !6909
  %tobool2 = icmp ne i64 %conv, 0, !dbg !6909
  ret i1 %tobool2, !dbg !6910
}

; Function Attrs: nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #3

; Function Attrs: noredzone
declare dso_local i32 @snprintf(i8*, i64, i8*, ...) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @atkbd_event(%struct.input_dev* %dev, i32 %type, i32 %code, i32 %value) #2 !dbg !6911 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.input_dev*, align 8
  %type.addr = alloca i32, align 4
  %code.addr = alloca i32, align 4
  %value.addr = alloca i32, align 4
  %atkbd = alloca %struct.atkbd*, align 8
  store %struct.input_dev* %dev, %struct.input_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.input_dev** %dev.addr, metadata !6912, metadata !DIExpression()), !dbg !6913
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !6914, metadata !DIExpression()), !dbg !6915
  store i32 %code, i32* %code.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %code.addr, metadata !6916, metadata !DIExpression()), !dbg !6917
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !6918, metadata !DIExpression()), !dbg !6919
  call void @llvm.dbg.declare(metadata %struct.atkbd** %atkbd, metadata !6920, metadata !DIExpression()), !dbg !6921
  %0 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !6922
  %call = call i8* @input_get_drvdata(%struct.input_dev* %0) #11, !dbg !6923
  %1 = bitcast i8* %call to %struct.atkbd*, !dbg !6923
  store %struct.atkbd* %1, %struct.atkbd** %atkbd, align 8, !dbg !6921
  %2 = load %struct.atkbd*, %struct.atkbd** %atkbd, align 8, !dbg !6924
  %write = getelementptr inbounds %struct.atkbd, %struct.atkbd* %2, i32 0, i32 10, !dbg !6926
  %3 = load i8, i8* %write, align 1, !dbg !6926
  %tobool = trunc i8 %3 to i1, !dbg !6926
  br i1 %tobool, label %if.end, label %if.then, !dbg !6927

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !6928
  br label %return, !dbg !6928

if.end:                                           ; preds = %entry
  %4 = load i32, i32* %type.addr, align 4, !dbg !6929
  switch i32 %4, label %sw.default [
    i32 17, label %sw.bb
    i32 20, label %sw.bb1
  ], !dbg !6930

sw.bb:                                            ; preds = %if.end
  %5 = load %struct.atkbd*, %struct.atkbd** %atkbd, align 8, !dbg !6931
  call void @atkbd_schedule_event_work(%struct.atkbd* %5, i32 0) #11, !dbg !6933
  store i32 0, i32* %retval, align 4, !dbg !6934
  br label %return, !dbg !6934

sw.bb1:                                           ; preds = %if.end
  %6 = load %struct.atkbd*, %struct.atkbd** %atkbd, align 8, !dbg !6935
  %softrepeat = getelementptr inbounds %struct.atkbd, %struct.atkbd* %6, i32 0, i32 11, !dbg !6937
  %7 = load i8, i8* %softrepeat, align 4, !dbg !6937
  %tobool2 = trunc i8 %7 to i1, !dbg !6937
  br i1 %tobool2, label %if.end4, label %if.then3, !dbg !6938

if.then3:                                         ; preds = %sw.bb1
  %8 = load %struct.atkbd*, %struct.atkbd** %atkbd, align 8, !dbg !6939
  call void @atkbd_schedule_event_work(%struct.atkbd* %8, i32 1) #11, !dbg !6940
  br label %if.end4, !dbg !6940

if.end4:                                          ; preds = %if.then3, %sw.bb1
  store i32 0, i32* %retval, align 4, !dbg !6941
  br label %return, !dbg !6941

sw.default:                                       ; preds = %if.end
  store i32 -1, i32* %retval, align 4, !dbg !6942
  br label %return, !dbg !6942

return:                                           ; preds = %sw.default, %if.end4, %sw.bb, %if.then
  %9 = load i32, i32* %retval, align 4, !dbg !6943
  ret i32 %9, !dbg !6943
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @input_set_drvdata(%struct.input_dev* %dev, i8* %data) #2 !dbg !6944 {
entry:
  %dev.addr = alloca %struct.input_dev*, align 8
  %data.addr = alloca i8*, align 8
  store %struct.input_dev* %dev, %struct.input_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.input_dev** %dev.addr, metadata !6947, metadata !DIExpression()), !dbg !6948
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !6949, metadata !DIExpression()), !dbg !6950
  %0 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !6951
  %dev1 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %0, i32 0, i32 40, !dbg !6952
  %1 = load i8*, i8** %data.addr, align 8, !dbg !6953
  call void @dev_set_drvdata(%struct.device* %dev1, i8* %1) #11, !dbg !6954
  ret void, !dbg !6955
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @input_get_drvdata(%struct.input_dev* %dev) #2 !dbg !6956 {
entry:
  %dev.addr = alloca %struct.input_dev*, align 8
  store %struct.input_dev* %dev, %struct.input_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.input_dev** %dev.addr, metadata !6959, metadata !DIExpression()), !dbg !6960
  %0 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !6961
  %dev1 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %0, i32 0, i32 40, !dbg !6962
  %call = call i8* @dev_get_drvdata(%struct.device* %dev1) #11, !dbg !6963
  ret i8* %call, !dbg !6964
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @atkbd_schedule_event_work(%struct.atkbd* %atkbd, i32 %event_bit) #2 !dbg !6965 {
entry:
  %retval.i = alloca i64, align 8
  %m.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m.addr.i, metadata !4333, metadata !DIExpression()), !dbg !6968
  %atkbd.addr = alloca %struct.atkbd*, align 8
  %event_bit.addr = alloca i32, align 4
  %delay = alloca i64, align 8
  store %struct.atkbd* %atkbd, %struct.atkbd** %atkbd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.atkbd** %atkbd.addr, metadata !6970, metadata !DIExpression()), !dbg !6971
  store i32 %event_bit, i32* %event_bit.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %event_bit.addr, metadata !6972, metadata !DIExpression()), !dbg !6973
  call void @llvm.dbg.declare(metadata i64* %delay, metadata !6974, metadata !DIExpression()), !dbg !6975
  store i32 50, i32* %m.addr.i, align 4
  %0 = load i32, i32* %m.addr.i, align 4, !dbg !6976
  %1 = call i1 @llvm.is.constant.i32(i32 %0) #10, !dbg !6977
  br i1 %1, label %if.then.i, label %if.else.i, !dbg !6978

if.then.i:                                        ; preds = %entry
  %2 = load i32, i32* %m.addr.i, align 4, !dbg !6979
  %cmp.i = icmp slt i32 %2, 0, !dbg !6980
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !6981

if.then1.i:                                       ; preds = %if.then.i
  store i64 4611686018427387902, i64* %retval.i, align 8, !dbg !6982
  br label %msecs_to_jiffies.exit, !dbg !6982

if.end.i:                                         ; preds = %if.then.i
  %3 = load i32, i32* %m.addr.i, align 4, !dbg !6983
  %call.i = call i64 @_msecs_to_jiffies(i32 %3) #13, !dbg !6984
  store i64 %call.i, i64* %retval.i, align 8, !dbg !6985
  br label %msecs_to_jiffies.exit, !dbg !6985

if.else.i:                                        ; preds = %entry
  %4 = load i32, i32* %m.addr.i, align 4, !dbg !6986
  %call2.i = call i64 @__msecs_to_jiffies(i32 %4) #13, !dbg !6987
  store i64 %call2.i, i64* %retval.i, align 8, !dbg !6988
  br label %msecs_to_jiffies.exit, !dbg !6988

msecs_to_jiffies.exit:                            ; preds = %if.then1.i, %if.end.i, %if.else.i
  %5 = load i64, i64* %retval.i, align 8, !dbg !6989
  store i64 %5, i64* %delay, align 8, !dbg !6975
  %6 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !6990
  %event_jiffies = getelementptr inbounds %struct.atkbd, %struct.atkbd* %6, i32 0, i32 23, !dbg !6990
  %7 = load i64, i64* %event_jiffies, align 8, !dbg !6990
  %8 = load i64, i64* %delay, align 8, !dbg !6990
  %add = add i64 %7, %8, !dbg !6990
  %9 = load volatile i64, i64* @jiffies, align 8, !dbg !6990
  %sub = sub i64 %add, %9, !dbg !6990
  %cmp = icmp slt i64 %sub, 0, !dbg !6990
  br i1 %cmp, label %if.then, label %if.end, !dbg !6992

if.then:                                          ; preds = %msecs_to_jiffies.exit
  store i64 0, i64* %delay, align 8, !dbg !6993
  br label %if.end, !dbg !6994

if.end:                                           ; preds = %if.then, %msecs_to_jiffies.exit
  %10 = load volatile i64, i64* @jiffies, align 8, !dbg !6995
  %11 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !6996
  %event_jiffies1 = getelementptr inbounds %struct.atkbd, %struct.atkbd* %11, i32 0, i32 23, !dbg !6997
  store i64 %10, i64* %event_jiffies1, align 8, !dbg !6998
  %12 = load i32, i32* %event_bit.addr, align 4, !dbg !6999
  %conv = sext i32 %12 to i64, !dbg !6999
  %13 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !7000
  %event_mask = getelementptr inbounds %struct.atkbd, %struct.atkbd* %13, i32 0, i32 24, !dbg !7001
  call void @set_bit(i64 %conv, i64* %event_mask) #11, !dbg !7002
  call void asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !7003, !srcloc !7004
  %14 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !7005
  %event_work = getelementptr inbounds %struct.atkbd, %struct.atkbd* %14, i32 0, i32 22, !dbg !7006
  %15 = load i64, i64* %delay, align 8, !dbg !7007
  %call2 = call zeroext i1 @schedule_delayed_work(%struct.delayed_work* %event_work, i64 %15) #11, !dbg !7008
  ret void, !dbg !7009
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @set_bit(i64 %nr, i64* %addr) #2 !dbg !7010 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !7011, metadata !DIExpression()), !dbg !7013
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !7015, metadata !DIExpression()), !dbg !7016
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !7017, metadata !DIExpression()), !dbg !7019
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !7021, metadata !DIExpression()), !dbg !7022
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !7023, metadata !DIExpression()), !dbg !7024
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !7025, metadata !DIExpression()), !dbg !7026
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !7027
  %1 = load i64, i64* %nr.addr, align 8, !dbg !7028
  %div = sdiv i64 %1, 64, !dbg !7028
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !7029
  %2 = bitcast i64* %add.ptr to i8*, !dbg !7027
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !7030
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !7031
  %conv.i = trunc i64 %4 to i32, !dbg !7031
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #13, !dbg !7032
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !7033
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !7033
  call void @kcsan_check_access(i8* %5, i64 %6, i32 5) #13, !dbg !7033
  %7 = load i64, i64* %nr.addr, align 8, !dbg !7034
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !7035
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64, i64* %nr.addr.i, align 8, !dbg !7036
  %10 = call i1 @llvm.is.constant.i64(i64 %9) #10, !dbg !7038
  br i1 %10, label %if.then.i, label %if.else.i, !dbg !7039

if.then.i:                                        ; preds = %entry
  %11 = load i64*, i64** %addr.addr.i, align 8, !dbg !7040
  %12 = bitcast i64* %11 to i8*, !dbg !7040
  %13 = load i64, i64* %nr.addr.i, align 8, !dbg !7040
  %shr.i = ashr i64 %13, 3, !dbg !7040
  %add.ptr.i = getelementptr i8, i8* %12, i64 %shr.i, !dbg !7040
  %14 = load i64, i64* %nr.addr.i, align 8, !dbg !7042
  %and.i = and i64 %14, 7, !dbg !7042
  %sh_prom.i = trunc i64 %and.i to i32, !dbg !7042
  %shl.i = shl i32 1, %sh_prom.i, !dbg !7042
  call void asm sideeffect "orb ${1:b},$0", "=*m,iq,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i8* %add.ptr.i, i32 %shl.i, i8* %add.ptr.i) #10, !dbg !7043, !srcloc !7044
  br label %arch_set_bit.exit, !dbg !7045

if.else.i:                                        ; preds = %entry
  %15 = load i64*, i64** %addr.addr.i, align 8, !dbg !7046
  %16 = load i64, i64* %nr.addr.i, align 8, !dbg !7048
  call void asm sideeffect " btsq  $1,$0", "*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %15, i64 %16) #10, !dbg !7049, !srcloc !7050
  br label %arch_set_bit.exit

arch_set_bit.exit:                                ; preds = %if.then.i, %if.else.i
  ret void, !dbg !7051
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @atkbd_attr_is_visible(%struct.kobject* %kobj, %struct.attribute* %attr, i32 %i) #2 !dbg !7052 {
entry:
  %retval = alloca i16, align 2
  %kobj.addr = alloca %struct.kobject*, align 8
  %attr.addr = alloca %struct.attribute*, align 8
  %i.addr = alloca i32, align 4
  %dev = alloca %struct.device*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.device*, align 8
  %serio = alloca %struct.serio*, align 8
  %__mptr1 = alloca i8*, align 8
  %tmp4 = alloca %struct.serio*, align 8
  %atkbd = alloca %struct.atkbd*, align 8
  store %struct.kobject* %kobj, %struct.kobject** %kobj.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kobject** %kobj.addr, metadata !7053, metadata !DIExpression()), !dbg !7054
  store %struct.attribute* %attr, %struct.attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.attribute** %attr.addr, metadata !7055, metadata !DIExpression()), !dbg !7056
  store i32 %i, i32* %i.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr, metadata !7057, metadata !DIExpression()), !dbg !7058
  call void @llvm.dbg.declare(metadata %struct.device** %dev, metadata !7059, metadata !DIExpression()), !dbg !7060
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !7061, metadata !DIExpression()), !dbg !7063
  %0 = load %struct.kobject*, %struct.kobject** %kobj.addr, align 8, !dbg !7063
  %1 = bitcast %struct.kobject* %0 to i8*, !dbg !7063
  store i8* %1, i8** %__mptr, align 8, !dbg !7063
  br label %do.body, !dbg !7063

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !7064

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !7063
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !7063
  %3 = bitcast i8* %add.ptr to %struct.device*, !dbg !7063
  store %struct.device* %3, %struct.device** %tmp, align 8, !dbg !7064
  %4 = load %struct.device*, %struct.device** %tmp, align 8, !dbg !7063
  store %struct.device* %4, %struct.device** %dev, align 8, !dbg !7060
  call void @llvm.dbg.declare(metadata %struct.serio** %serio, metadata !7066, metadata !DIExpression()), !dbg !7067
  call void @llvm.dbg.declare(metadata i8** %__mptr1, metadata !7068, metadata !DIExpression()), !dbg !7070
  %5 = load %struct.device*, %struct.device** %dev, align 8, !dbg !7070
  %6 = bitcast %struct.device* %5 to i8*, !dbg !7070
  store i8* %6, i8** %__mptr1, align 8, !dbg !7070
  br label %do.body2, !dbg !7070

do.body2:                                         ; preds = %do.end
  br label %do.end3, !dbg !7071

do.end3:                                          ; preds = %do.body2
  %7 = load i8*, i8** %__mptr1, align 8, !dbg !7070
  %add.ptr5 = getelementptr i8, i8* %7, i64 -328, !dbg !7070
  %8 = bitcast i8* %add.ptr5 to %struct.serio*, !dbg !7070
  store %struct.serio* %8, %struct.serio** %tmp4, align 8, !dbg !7071
  %9 = load %struct.serio*, %struct.serio** %tmp4, align 8, !dbg !7070
  store %struct.serio* %9, %struct.serio** %serio, align 8, !dbg !7067
  call void @llvm.dbg.declare(metadata %struct.atkbd** %atkbd, metadata !7073, metadata !DIExpression()), !dbg !7074
  %10 = load %struct.serio*, %struct.serio** %serio, align 8, !dbg !7075
  %call = call i8* @serio_get_drvdata(%struct.serio* %10) #11, !dbg !7076
  %11 = bitcast i8* %call to %struct.atkbd*, !dbg !7076
  store %struct.atkbd* %11, %struct.atkbd** %atkbd, align 8, !dbg !7074
  %12 = load %struct.attribute*, %struct.attribute** %attr.addr, align 8, !dbg !7077
  %cmp = icmp eq %struct.attribute* %12, getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @atkbd_attr_function_row_physmap, i32 0, i32 0), !dbg !7079
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !7080

land.lhs.true:                                    ; preds = %do.end3
  %13 = load %struct.atkbd*, %struct.atkbd** %atkbd, align 8, !dbg !7081
  %num_function_row_keys = getelementptr inbounds %struct.atkbd, %struct.atkbd* %13, i32 0, i32 27, !dbg !7082
  %14 = load i32, i32* %num_function_row_keys, align 8, !dbg !7082
  %tobool = icmp ne i32 %14, 0, !dbg !7081
  br i1 %tobool, label %if.end, label %if.then, !dbg !7083

if.then:                                          ; preds = %land.lhs.true
  store i16 0, i16* %retval, align 2, !dbg !7084
  br label %return, !dbg !7084

if.end:                                           ; preds = %land.lhs.true, %do.end3
  %15 = load %struct.attribute*, %struct.attribute** %attr.addr, align 8, !dbg !7085
  %mode = getelementptr inbounds %struct.attribute, %struct.attribute* %15, i32 0, i32 1, !dbg !7086
  %16 = load i16, i16* %mode, align 8, !dbg !7086
  store i16 %16, i16* %retval, align 2, !dbg !7087
  br label %return, !dbg !7087

return:                                           ; preds = %if.end, %if.then
  %17 = load i16, i16* %retval, align 2, !dbg !7088
  ret i16 %17, !dbg !7088
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @atkbd_do_show_function_row_physmap(%struct.device* %d, %struct.device_attribute* %attr, i8* %b) #2 !dbg !7089 {
entry:
  %d.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %b.addr = alloca i8*, align 8
  store %struct.device* %d, %struct.device** %d.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %d.addr, metadata !7090, metadata !DIExpression()), !dbg !7091
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !7092, metadata !DIExpression()), !dbg !7091
  store i8* %b, i8** %b.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !7093, metadata !DIExpression()), !dbg !7091
  %0 = load %struct.device*, %struct.device** %d.addr, align 8, !dbg !7091
  %1 = load i8*, i8** %b.addr, align 8, !dbg !7091
  %call = call i64 @atkbd_attr_show_helper(%struct.device* %0, i8* %1, i64 (%struct.atkbd*, i8*)* @atkbd_show_function_row_physmap) #11, !dbg !7091
  ret i64 %call, !dbg !7091
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @atkbd_attr_show_helper(%struct.device* %dev, i8* %buf, i64 (%struct.atkbd*, i8*)* %handler) #2 !dbg !7094 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %buf.addr = alloca i8*, align 8
  %handler.addr = alloca i64 (%struct.atkbd*, i8*)*, align 8
  %serio = alloca %struct.serio*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.serio*, align 8
  %atkbd = alloca %struct.atkbd*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !7100, metadata !DIExpression()), !dbg !7101
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !7102, metadata !DIExpression()), !dbg !7103
  store i64 (%struct.atkbd*, i8*)* %handler, i64 (%struct.atkbd*, i8*)** %handler.addr, align 8
  call void @llvm.dbg.declare(metadata i64 (%struct.atkbd*, i8*)** %handler.addr, metadata !7104, metadata !DIExpression()), !dbg !7105
  call void @llvm.dbg.declare(metadata %struct.serio** %serio, metadata !7106, metadata !DIExpression()), !dbg !7107
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !7108, metadata !DIExpression()), !dbg !7110
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !7110
  %1 = bitcast %struct.device* %0 to i8*, !dbg !7110
  store i8* %1, i8** %__mptr, align 8, !dbg !7110
  br label %do.body, !dbg !7110

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !7111

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !7110
  %add.ptr = getelementptr i8, i8* %2, i64 -328, !dbg !7110
  %3 = bitcast i8* %add.ptr to %struct.serio*, !dbg !7110
  store %struct.serio* %3, %struct.serio** %tmp, align 8, !dbg !7111
  %4 = load %struct.serio*, %struct.serio** %tmp, align 8, !dbg !7110
  store %struct.serio* %4, %struct.serio** %serio, align 8, !dbg !7107
  call void @llvm.dbg.declare(metadata %struct.atkbd** %atkbd, metadata !7113, metadata !DIExpression()), !dbg !7114
  %5 = load %struct.serio*, %struct.serio** %serio, align 8, !dbg !7115
  %call = call i8* @serio_get_drvdata(%struct.serio* %5) #11, !dbg !7116
  %6 = bitcast i8* %call to %struct.atkbd*, !dbg !7116
  store %struct.atkbd* %6, %struct.atkbd** %atkbd, align 8, !dbg !7114
  %7 = load i64 (%struct.atkbd*, i8*)*, i64 (%struct.atkbd*, i8*)** %handler.addr, align 8, !dbg !7117
  %8 = load %struct.atkbd*, %struct.atkbd** %atkbd, align 8, !dbg !7118
  %9 = load i8*, i8** %buf.addr, align 8, !dbg !7119
  %call1 = call i64 %7(%struct.atkbd* %8, i8* %9) #11, !dbg !7117
  ret i64 %call1, !dbg !7120
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @atkbd_show_function_row_physmap(%struct.atkbd* %atkbd, i8* %buf) #2 !dbg !7121 {
entry:
  %retval = alloca i64, align 8
  %atkbd.addr = alloca %struct.atkbd*, align 8
  %buf.addr = alloca i8*, align 8
  %size = alloca i64, align 8
  %i = alloca i32, align 4
  store %struct.atkbd* %atkbd, %struct.atkbd** %atkbd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.atkbd** %atkbd.addr, metadata !7122, metadata !DIExpression()), !dbg !7123
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !7124, metadata !DIExpression()), !dbg !7125
  call void @llvm.dbg.declare(metadata i64* %size, metadata !7126, metadata !DIExpression()), !dbg !7127
  store i64 0, i64* %size, align 8, !dbg !7127
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7128, metadata !DIExpression()), !dbg !7129
  %0 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !7130
  %num_function_row_keys = getelementptr inbounds %struct.atkbd, %struct.atkbd* %0, i32 0, i32 27, !dbg !7132
  %1 = load i32, i32* %num_function_row_keys, align 8, !dbg !7132
  %tobool = icmp ne i32 %1, 0, !dbg !7130
  br i1 %tobool, label %if.end, label %if.then, !dbg !7133

if.then:                                          ; preds = %entry
  store i64 0, i64* %retval, align 8, !dbg !7134
  br label %return, !dbg !7134

if.end:                                           ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !7135
  br label %for.cond, !dbg !7137

for.cond:                                         ; preds = %for.inc, %if.end
  %2 = load i32, i32* %i, align 4, !dbg !7138
  %3 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !7140
  %num_function_row_keys1 = getelementptr inbounds %struct.atkbd, %struct.atkbd* %3, i32 0, i32 27, !dbg !7141
  %4 = load i32, i32* %num_function_row_keys1, align 8, !dbg !7141
  %cmp = icmp slt i32 %2, %4, !dbg !7142
  br i1 %cmp, label %for.body, label %for.end, !dbg !7143

for.body:                                         ; preds = %for.cond
  %5 = load i8*, i8** %buf.addr, align 8, !dbg !7144
  %6 = load i64, i64* %size, align 8, !dbg !7145
  %add.ptr = getelementptr i8, i8* %5, i64 %6, !dbg !7146
  %7 = load i64, i64* %size, align 8, !dbg !7147
  %sub = sub i64 4096, %7, !dbg !7148
  %8 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !7149
  %function_row_physmap = getelementptr inbounds %struct.atkbd, %struct.atkbd* %8, i32 0, i32 26, !dbg !7150
  %9 = load i32, i32* %i, align 4, !dbg !7151
  %idxprom = sext i32 %9 to i64, !dbg !7149
  %arrayidx = getelementptr [24 x i32], [24 x i32]* %function_row_physmap, i64 0, i64 %idxprom, !dbg !7149
  %10 = load i32, i32* %arrayidx, align 4, !dbg !7149
  %call = call i32 (i8*, i64, i8*, ...) @scnprintf(i8* %add.ptr, i64 %sub, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.29, i64 0, i64 0), i32 %10) #11, !dbg !7152
  %conv = sext i32 %call to i64, !dbg !7152
  %11 = load i64, i64* %size, align 8, !dbg !7153
  %add = add i64 %11, %conv, !dbg !7153
  store i64 %add, i64* %size, align 8, !dbg !7153
  br label %for.inc, !dbg !7154

for.inc:                                          ; preds = %for.body
  %12 = load i32, i32* %i, align 4, !dbg !7155
  %inc = add i32 %12, 1, !dbg !7155
  store i32 %inc, i32* %i, align 4, !dbg !7155
  br label %for.cond, !dbg !7156, !llvm.loop !7157

for.end:                                          ; preds = %for.cond
  %13 = load i8*, i8** %buf.addr, align 8, !dbg !7159
  %14 = load i64, i64* %size, align 8, !dbg !7160
  %add.ptr2 = getelementptr i8, i8* %13, i64 %14, !dbg !7161
  %15 = load i64, i64* %size, align 8, !dbg !7162
  %sub3 = sub i64 4096, %15, !dbg !7163
  %call4 = call i32 (i8*, i64, i8*, ...) @scnprintf(i8* %add.ptr2, i64 %sub3, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.30, i64 0, i64 0)) #11, !dbg !7164
  %conv5 = sext i32 %call4 to i64, !dbg !7164
  %16 = load i64, i64* %size, align 8, !dbg !7165
  %add6 = add i64 %16, %conv5, !dbg !7165
  store i64 %add6, i64* %size, align 8, !dbg !7165
  %17 = load i64, i64* %size, align 8, !dbg !7166
  store i64 %17, i64* %retval, align 8, !dbg !7167
  br label %return, !dbg !7167

return:                                           ; preds = %for.end, %if.then
  %18 = load i64, i64* %retval, align 8, !dbg !7168
  ret i64 %18, !dbg !7168
}

; Function Attrs: noredzone
declare dso_local i32 @scnprintf(i8*, i64, i8*, ...) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @atkbd_do_show_extra(%struct.device* %d, %struct.device_attribute* %attr, i8* %b) #2 !dbg !7169 {
entry:
  %d.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %b.addr = alloca i8*, align 8
  store %struct.device* %d, %struct.device** %d.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %d.addr, metadata !7170, metadata !DIExpression()), !dbg !7171
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !7172, metadata !DIExpression()), !dbg !7171
  store i8* %b, i8** %b.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !7173, metadata !DIExpression()), !dbg !7171
  %0 = load %struct.device*, %struct.device** %d.addr, align 8, !dbg !7171
  %1 = load i8*, i8** %b.addr, align 8, !dbg !7171
  %call = call i64 @atkbd_attr_show_helper(%struct.device* %0, i8* %1, i64 (%struct.atkbd*, i8*)* @atkbd_show_extra) #11, !dbg !7171
  ret i64 %call, !dbg !7171
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @atkbd_do_set_extra(%struct.device* %d, %struct.device_attribute* %attr, i8* %b, i64 %s) #2 !dbg !7174 {
entry:
  %d.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %b.addr = alloca i8*, align 8
  %s.addr = alloca i64, align 8
  store %struct.device* %d, %struct.device** %d.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %d.addr, metadata !7175, metadata !DIExpression()), !dbg !7176
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !7177, metadata !DIExpression()), !dbg !7176
  store i8* %b, i8** %b.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !7178, metadata !DIExpression()), !dbg !7176
  store i64 %s, i64* %s.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %s.addr, metadata !7179, metadata !DIExpression()), !dbg !7176
  %0 = load %struct.device*, %struct.device** %d.addr, align 8, !dbg !7176
  %1 = load i8*, i8** %b.addr, align 8, !dbg !7176
  %2 = load i64, i64* %s.addr, align 8, !dbg !7176
  %call = call i64 @atkbd_attr_set_helper(%struct.device* %0, i8* %1, i64 %2, i64 (%struct.atkbd*, i8*, i64)* @atkbd_set_extra) #11, !dbg !7176
  ret i64 %call, !dbg !7176
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @atkbd_show_extra(%struct.atkbd* %atkbd, i8* %buf) #2 !dbg !7180 {
entry:
  %atkbd.addr = alloca %struct.atkbd*, align 8
  %buf.addr = alloca i8*, align 8
  store %struct.atkbd* %atkbd, %struct.atkbd** %atkbd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.atkbd** %atkbd.addr, metadata !7181, metadata !DIExpression()), !dbg !7182
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !7183, metadata !DIExpression()), !dbg !7184
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !7185
  %1 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !7186
  %extra = getelementptr inbounds %struct.atkbd, %struct.atkbd* %1, i32 0, i32 9, !dbg !7187
  %2 = load i8, i8* %extra, align 2, !dbg !7187
  %tobool = trunc i8 %2 to i1, !dbg !7187
  %3 = zext i1 %tobool to i64, !dbg !7186
  %cond = select i1 %tobool, i32 1, i32 0, !dbg !7186
  %call = call i32 (i8*, i8*, ...) @sprintf(i8* %0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.32, i64 0, i64 0), i32 %cond) #11, !dbg !7188
  %conv = sext i32 %call to i64, !dbg !7188
  ret i64 %conv, !dbg !7189
}

; Function Attrs: noredzone
declare dso_local i32 @sprintf(i8*, i8*, ...) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @atkbd_attr_set_helper(%struct.device* %dev, i8* %buf, i64 %count, i64 (%struct.atkbd*, i8*, i64)* %handler) #2 !dbg !7190 {
entry:
  %retval = alloca i64, align 8
  %dev.addr = alloca %struct.device*, align 8
  %buf.addr = alloca i8*, align 8
  %count.addr = alloca i64, align 8
  %handler.addr = alloca i64 (%struct.atkbd*, i8*, i64)*, align 8
  %serio = alloca %struct.serio*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.serio*, align 8
  %atkbd = alloca %struct.atkbd*, align 8
  %retval1 = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !7196, metadata !DIExpression()), !dbg !7197
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !7198, metadata !DIExpression()), !dbg !7199
  store i64 %count, i64* %count.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !7200, metadata !DIExpression()), !dbg !7201
  store i64 (%struct.atkbd*, i8*, i64)* %handler, i64 (%struct.atkbd*, i8*, i64)** %handler.addr, align 8
  call void @llvm.dbg.declare(metadata i64 (%struct.atkbd*, i8*, i64)** %handler.addr, metadata !7202, metadata !DIExpression()), !dbg !7203
  call void @llvm.dbg.declare(metadata %struct.serio** %serio, metadata !7204, metadata !DIExpression()), !dbg !7205
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !7206, metadata !DIExpression()), !dbg !7208
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !7208
  %1 = bitcast %struct.device* %0 to i8*, !dbg !7208
  store i8* %1, i8** %__mptr, align 8, !dbg !7208
  br label %do.body, !dbg !7208

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !7209

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !7208
  %add.ptr = getelementptr i8, i8* %2, i64 -328, !dbg !7208
  %3 = bitcast i8* %add.ptr to %struct.serio*, !dbg !7208
  store %struct.serio* %3, %struct.serio** %tmp, align 8, !dbg !7209
  %4 = load %struct.serio*, %struct.serio** %tmp, align 8, !dbg !7208
  store %struct.serio* %4, %struct.serio** %serio, align 8, !dbg !7205
  call void @llvm.dbg.declare(metadata %struct.atkbd** %atkbd, metadata !7211, metadata !DIExpression()), !dbg !7212
  %5 = load %struct.serio*, %struct.serio** %serio, align 8, !dbg !7213
  %call = call i8* @serio_get_drvdata(%struct.serio* %5) #11, !dbg !7214
  %6 = bitcast i8* %call to %struct.atkbd*, !dbg !7214
  store %struct.atkbd* %6, %struct.atkbd** %atkbd, align 8, !dbg !7212
  call void @llvm.dbg.declare(metadata i32* %retval1, metadata !7215, metadata !DIExpression()), !dbg !7216
  %7 = load %struct.atkbd*, %struct.atkbd** %atkbd, align 8, !dbg !7217
  %mutex = getelementptr inbounds %struct.atkbd, %struct.atkbd* %7, i32 0, i32 25, !dbg !7218
  %call2 = call i32 @mutex_lock_interruptible(%struct.mutex* %mutex) #11, !dbg !7219
  store i32 %call2, i32* %retval1, align 4, !dbg !7220
  %8 = load i32, i32* %retval1, align 4, !dbg !7221
  %tobool = icmp ne i32 %8, 0, !dbg !7221
  br i1 %tobool, label %if.then, label %if.end, !dbg !7223

if.then:                                          ; preds = %do.end
  %9 = load i32, i32* %retval1, align 4, !dbg !7224
  %conv = sext i32 %9 to i64, !dbg !7224
  store i64 %conv, i64* %retval, align 8, !dbg !7225
  br label %return, !dbg !7225

if.end:                                           ; preds = %do.end
  %10 = load %struct.atkbd*, %struct.atkbd** %atkbd, align 8, !dbg !7226
  call void @atkbd_disable(%struct.atkbd* %10) #11, !dbg !7227
  %11 = load i64 (%struct.atkbd*, i8*, i64)*, i64 (%struct.atkbd*, i8*, i64)** %handler.addr, align 8, !dbg !7228
  %12 = load %struct.atkbd*, %struct.atkbd** %atkbd, align 8, !dbg !7229
  %13 = load i8*, i8** %buf.addr, align 8, !dbg !7230
  %14 = load i64, i64* %count.addr, align 8, !dbg !7231
  %call3 = call i64 %11(%struct.atkbd* %12, i8* %13, i64 %14) #11, !dbg !7228
  %conv4 = trunc i64 %call3 to i32, !dbg !7228
  store i32 %conv4, i32* %retval1, align 4, !dbg !7232
  %15 = load %struct.atkbd*, %struct.atkbd** %atkbd, align 8, !dbg !7233
  call void @atkbd_enable(%struct.atkbd* %15) #11, !dbg !7234
  %16 = load %struct.atkbd*, %struct.atkbd** %atkbd, align 8, !dbg !7235
  %mutex5 = getelementptr inbounds %struct.atkbd, %struct.atkbd* %16, i32 0, i32 25, !dbg !7236
  call void @mutex_unlock(%struct.mutex* %mutex5) #11, !dbg !7237
  %17 = load i32, i32* %retval1, align 4, !dbg !7238
  %conv6 = sext i32 %17 to i64, !dbg !7238
  store i64 %conv6, i64* %retval, align 8, !dbg !7239
  br label %return, !dbg !7239

return:                                           ; preds = %if.end, %if.then
  %18 = load i64, i64* %retval, align 8, !dbg !7240
  ret i64 %18, !dbg !7240
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @atkbd_set_extra(%struct.atkbd* %atkbd, i8* %buf, i64 %count) #2 !dbg !7241 {
entry:
  %retval = alloca i64, align 8
  %atkbd.addr = alloca %struct.atkbd*, align 8
  %buf.addr = alloca i8*, align 8
  %count.addr = alloca i64, align 8
  %old_dev = alloca %struct.input_dev*, align 8
  %new_dev = alloca %struct.input_dev*, align 8
  %value = alloca i32, align 4
  %err = alloca i32, align 4
  %old_extra = alloca i8, align 1
  %old_set = alloca i8, align 1
  store %struct.atkbd* %atkbd, %struct.atkbd** %atkbd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.atkbd** %atkbd.addr, metadata !7242, metadata !DIExpression()), !dbg !7243
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !7244, metadata !DIExpression()), !dbg !7245
  store i64 %count, i64* %count.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !7246, metadata !DIExpression()), !dbg !7247
  call void @llvm.dbg.declare(metadata %struct.input_dev** %old_dev, metadata !7248, metadata !DIExpression()), !dbg !7249
  call void @llvm.dbg.declare(metadata %struct.input_dev** %new_dev, metadata !7250, metadata !DIExpression()), !dbg !7251
  call void @llvm.dbg.declare(metadata i32* %value, metadata !7252, metadata !DIExpression()), !dbg !7253
  call void @llvm.dbg.declare(metadata i32* %err, metadata !7254, metadata !DIExpression()), !dbg !7255
  call void @llvm.dbg.declare(metadata i8* %old_extra, metadata !7256, metadata !DIExpression()), !dbg !7257
  call void @llvm.dbg.declare(metadata i8* %old_set, metadata !7258, metadata !DIExpression()), !dbg !7259
  %0 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !7260
  %write = getelementptr inbounds %struct.atkbd, %struct.atkbd* %0, i32 0, i32 10, !dbg !7262
  %1 = load i8, i8* %write, align 1, !dbg !7262
  %tobool = trunc i8 %1 to i1, !dbg !7262
  br i1 %tobool, label %if.end, label %if.then, !dbg !7263

if.then:                                          ; preds = %entry
  store i64 -5, i64* %retval, align 8, !dbg !7264
  br label %return, !dbg !7264

if.end:                                           ; preds = %entry
  %2 = load i8*, i8** %buf.addr, align 8, !dbg !7265
  %call = call i32 @kstrtouint(i8* %2, i32 10, i32* %value) #11, !dbg !7266
  store i32 %call, i32* %err, align 4, !dbg !7267
  %3 = load i32, i32* %err, align 4, !dbg !7268
  %tobool1 = icmp ne i32 %3, 0, !dbg !7268
  br i1 %tobool1, label %if.then2, label %if.end3, !dbg !7270

if.then2:                                         ; preds = %if.end
  %4 = load i32, i32* %err, align 4, !dbg !7271
  %conv = sext i32 %4 to i64, !dbg !7271
  store i64 %conv, i64* %retval, align 8, !dbg !7272
  br label %return, !dbg !7272

if.end3:                                          ; preds = %if.end
  %5 = load i32, i32* %value, align 4, !dbg !7273
  %cmp = icmp ugt i32 %5, 1, !dbg !7275
  br i1 %cmp, label %if.then5, label %if.end6, !dbg !7276

if.then5:                                         ; preds = %if.end3
  store i64 -22, i64* %retval, align 8, !dbg !7277
  br label %return, !dbg !7277

if.end6:                                          ; preds = %if.end3
  %6 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !7278
  %extra = getelementptr inbounds %struct.atkbd, %struct.atkbd* %6, i32 0, i32 9, !dbg !7280
  %7 = load i8, i8* %extra, align 2, !dbg !7280
  %tobool7 = trunc i8 %7 to i1, !dbg !7280
  %conv8 = zext i1 %tobool7 to i32, !dbg !7278
  %8 = load i32, i32* %value, align 4, !dbg !7281
  %cmp9 = icmp ne i32 %conv8, %8, !dbg !7282
  br i1 %cmp9, label %if.then11, label %if.end39, !dbg !7283

if.then11:                                        ; preds = %if.end6
  %9 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !7284
  %dev = getelementptr inbounds %struct.atkbd, %struct.atkbd* %9, i32 0, i32 1, !dbg !7286
  %10 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !7286
  store %struct.input_dev* %10, %struct.input_dev** %old_dev, align 8, !dbg !7287
  %11 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !7288
  %extra12 = getelementptr inbounds %struct.atkbd, %struct.atkbd* %11, i32 0, i32 9, !dbg !7289
  %12 = load i8, i8* %extra12, align 2, !dbg !7289
  %tobool13 = trunc i8 %12 to i1, !dbg !7289
  %frombool = zext i1 %tobool13 to i8, !dbg !7290
  store i8 %frombool, i8* %old_extra, align 1, !dbg !7290
  %13 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !7291
  %set = getelementptr inbounds %struct.atkbd, %struct.atkbd* %13, i32 0, i32 7, !dbg !7292
  %14 = load i8, i8* %set, align 8, !dbg !7292
  store i8 %14, i8* %old_set, align 1, !dbg !7293
  %call14 = call %struct.input_dev* @input_allocate_device() #11, !dbg !7294
  store %struct.input_dev* %call14, %struct.input_dev** %new_dev, align 8, !dbg !7295
  %15 = load %struct.input_dev*, %struct.input_dev** %new_dev, align 8, !dbg !7296
  %tobool15 = icmp ne %struct.input_dev* %15, null, !dbg !7296
  br i1 %tobool15, label %if.end17, label %if.then16, !dbg !7298

if.then16:                                        ; preds = %if.then11
  store i64 -12, i64* %retval, align 8, !dbg !7299
  br label %return, !dbg !7299

if.end17:                                         ; preds = %if.then11
  %16 = load %struct.input_dev*, %struct.input_dev** %new_dev, align 8, !dbg !7300
  %17 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !7301
  %dev18 = getelementptr inbounds %struct.atkbd, %struct.atkbd* %17, i32 0, i32 1, !dbg !7302
  store %struct.input_dev* %16, %struct.input_dev** %dev18, align 8, !dbg !7303
  %18 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !7304
  %19 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !7305
  %set19 = getelementptr inbounds %struct.atkbd, %struct.atkbd* %19, i32 0, i32 7, !dbg !7306
  %20 = load i8, i8* %set19, align 8, !dbg !7306
  %conv20 = zext i8 %20 to i32, !dbg !7305
  %21 = load i32, i32* %value, align 4, !dbg !7307
  %call21 = call i32 @atkbd_select_set(%struct.atkbd* %18, i32 %conv20, i32 %21) #11, !dbg !7308
  %conv22 = trunc i32 %call21 to i8, !dbg !7308
  %22 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !7309
  %set23 = getelementptr inbounds %struct.atkbd, %struct.atkbd* %22, i32 0, i32 7, !dbg !7310
  store i8 %conv22, i8* %set23, align 8, !dbg !7311
  %23 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !7312
  %call24 = call i32 @atkbd_reset_state(%struct.atkbd* %23) #11, !dbg !7313
  %24 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !7314
  %call25 = call i32 @atkbd_activate(%struct.atkbd* %24) #11, !dbg !7315
  %25 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !7316
  call void @atkbd_set_keycode_table(%struct.atkbd* %25) #11, !dbg !7317
  %26 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !7318
  call void @atkbd_set_device_attrs(%struct.atkbd* %26) #11, !dbg !7319
  %27 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !7320
  %dev26 = getelementptr inbounds %struct.atkbd, %struct.atkbd* %27, i32 0, i32 1, !dbg !7321
  %28 = load %struct.input_dev*, %struct.input_dev** %dev26, align 8, !dbg !7321
  %call27 = call i32 @input_register_device(%struct.input_dev* %28) #11, !dbg !7322
  store i32 %call27, i32* %err, align 4, !dbg !7323
  %29 = load i32, i32* %err, align 4, !dbg !7324
  %tobool28 = icmp ne i32 %29, 0, !dbg !7324
  br i1 %tobool28, label %if.then29, label %if.end38, !dbg !7326

if.then29:                                        ; preds = %if.end17
  %30 = load %struct.input_dev*, %struct.input_dev** %new_dev, align 8, !dbg !7327
  call void @input_free_device(%struct.input_dev* %30) #11, !dbg !7329
  %31 = load %struct.input_dev*, %struct.input_dev** %old_dev, align 8, !dbg !7330
  %32 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !7331
  %dev30 = getelementptr inbounds %struct.atkbd, %struct.atkbd* %32, i32 0, i32 1, !dbg !7332
  store %struct.input_dev* %31, %struct.input_dev** %dev30, align 8, !dbg !7333
  %33 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !7334
  %34 = load i8, i8* %old_set, align 1, !dbg !7335
  %conv31 = zext i8 %34 to i32, !dbg !7335
  %35 = load i8, i8* %old_extra, align 1, !dbg !7336
  %tobool32 = trunc i8 %35 to i1, !dbg !7336
  %conv33 = zext i1 %tobool32 to i32, !dbg !7336
  %call34 = call i32 @atkbd_select_set(%struct.atkbd* %33, i32 %conv31, i32 %conv33) #11, !dbg !7337
  %conv35 = trunc i32 %call34 to i8, !dbg !7337
  %36 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !7338
  %set36 = getelementptr inbounds %struct.atkbd, %struct.atkbd* %36, i32 0, i32 7, !dbg !7339
  store i8 %conv35, i8* %set36, align 8, !dbg !7340
  %37 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !7341
  call void @atkbd_set_keycode_table(%struct.atkbd* %37) #11, !dbg !7342
  %38 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !7343
  call void @atkbd_set_device_attrs(%struct.atkbd* %38) #11, !dbg !7344
  %39 = load i32, i32* %err, align 4, !dbg !7345
  %conv37 = sext i32 %39 to i64, !dbg !7345
  store i64 %conv37, i64* %retval, align 8, !dbg !7346
  br label %return, !dbg !7346

if.end38:                                         ; preds = %if.end17
  %40 = load %struct.input_dev*, %struct.input_dev** %old_dev, align 8, !dbg !7347
  call void @input_unregister_device(%struct.input_dev* %40) #11, !dbg !7348
  br label %if.end39, !dbg !7349

if.end39:                                         ; preds = %if.end38, %if.end6
  %41 = load i64, i64* %count.addr, align 8, !dbg !7350
  store i64 %41, i64* %retval, align 8, !dbg !7351
  br label %return, !dbg !7351

return:                                           ; preds = %if.end39, %if.then29, %if.then16, %if.then5, %if.then2, %if.then
  %42 = load i64, i64* %retval, align 8, !dbg !7352
  ret i64 %42, !dbg !7352
}

; Function Attrs: noredzone
declare dso_local i32 @mutex_lock_interruptible(%struct.mutex*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @atkbd_disable(%struct.atkbd* %atkbd) #2 !dbg !7353 {
entry:
  %atkbd.addr = alloca %struct.atkbd*, align 8
  store %struct.atkbd* %atkbd, %struct.atkbd** %atkbd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.atkbd** %atkbd.addr, metadata !7354, metadata !DIExpression()), !dbg !7355
  %0 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !7356
  %ps2dev = getelementptr inbounds %struct.atkbd, %struct.atkbd* %0, i32 0, i32 0, !dbg !7357
  %serio = getelementptr inbounds %struct.ps2dev, %struct.ps2dev* %ps2dev, i32 0, i32 0, !dbg !7358
  %1 = load %struct.serio*, %struct.serio** %serio, align 8, !dbg !7358
  call void @serio_pause_rx(%struct.serio* %1) #11, !dbg !7359
  %2 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !7360
  %enabled = getelementptr inbounds %struct.atkbd, %struct.atkbd* %2, i32 0, i32 14, !dbg !7361
  store i8 0, i8* %enabled, align 1, !dbg !7362
  %3 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !7363
  %ps2dev1 = getelementptr inbounds %struct.atkbd, %struct.atkbd* %3, i32 0, i32 0, !dbg !7364
  %serio2 = getelementptr inbounds %struct.ps2dev, %struct.ps2dev* %ps2dev1, i32 0, i32 0, !dbg !7365
  %4 = load %struct.serio*, %struct.serio** %serio2, align 8, !dbg !7365
  call void @serio_continue_rx(%struct.serio* %4) #11, !dbg !7366
  ret void, !dbg !7367
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @serio_pause_rx(%struct.serio* %serio) #2 !dbg !7368 {
entry:
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !7369, metadata !DIExpression()), !dbg !7375
  %serio.addr = alloca %struct.serio*, align 8
  store %struct.serio* %serio, %struct.serio** %serio.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.serio** %serio.addr, metadata !7377, metadata !DIExpression()), !dbg !7378
  %0 = load %struct.serio*, %struct.serio** %serio.addr, align 8, !dbg !7379
  %lock = getelementptr inbounds %struct.serio, %struct.serio* %0, i32 0, i32 6, !dbg !7380
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  call void @arch_local_irq_disable() #13, !dbg !7381
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !7384, !srcloc !7386
  %1 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !7387
  %2 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %1, i32 0, i32 0, !dbg !7387
  %rlock.i = bitcast %union.anon.0* %2 to %struct.raw_spinlock*, !dbg !7387
  ret void, !dbg !7389
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @serio_continue_rx(%struct.serio* %serio) #2 !dbg !7390 {
entry:
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !7391, metadata !DIExpression()), !dbg !7393
  %serio.addr = alloca %struct.serio*, align 8
  store %struct.serio* %serio, %struct.serio** %serio.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.serio** %serio.addr, metadata !7395, metadata !DIExpression()), !dbg !7396
  %0 = load %struct.serio*, %struct.serio** %serio.addr, align 8, !dbg !7397
  %lock = getelementptr inbounds %struct.serio, %struct.serio* %0, i32 0, i32 6, !dbg !7398
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  call void @arch_local_irq_enable() #13, !dbg !7399
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !7402, !srcloc !7404
  %1 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !7405
  %2 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %1, i32 0, i32 0, !dbg !7405
  %rlock.i = bitcast %union.anon.0* %2 to %struct.raw_spinlock*, !dbg !7405
  ret void, !dbg !7407
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_disable() #2 !dbg !7408 {
entry:
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !7410, metadata !DIExpression()), !dbg !7412
  %0 = load i64, i64* %__edi, align 8, !dbg !7412
  store i64 %0, i64* %__edi, align 8, !dbg !7412
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !7413, metadata !DIExpression()), !dbg !7412
  %1 = load i64, i64* %__esi, align 8, !dbg !7412
  store i64 %1, i64* %__esi, align 8, !dbg !7412
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !7414, metadata !DIExpression()), !dbg !7412
  %2 = load i64, i64* %__edx, align 8, !dbg !7412
  store i64 %2, i64* %__edx, align 8, !dbg !7412
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !7415, metadata !DIExpression()), !dbg !7412
  %3 = load i64, i64* %__ecx, align 8, !dbg !7412
  store i64 %3, i64* %__ecx, align 8, !dbg !7412
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !7416, metadata !DIExpression()), !dbg !7412
  %4 = load i64, i64* %__eax, align 8, !dbg !7412
  store i64 %4, i64* %__eax, align 8, !dbg !7412
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 2, i32 0), align 8, !dbg !7412
  %6 = call i64 @llvm.read_register.i64(metadata !4317), !dbg !7412
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 38, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 2, i32 0), i32 1, i64 %6) #10, !dbg !7412, !srcloc !7417
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !7412
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !7412
  store i64 %asmresult, i64* %__eax, align 8, !dbg !7412
  call void @llvm.write_register.i64(metadata !4317, i64 %asmresult1), !dbg !7412
  ret void, !dbg !7418
}

; Function Attrs: nounwind readonly
declare i64 @llvm.read_register.i64(metadata) #9

; Function Attrs: nounwind
declare void @llvm.write_register.i64(metadata, i64) #10

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_enable() #2 !dbg !7419 {
entry:
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !7420, metadata !DIExpression()), !dbg !7422
  %0 = load i64, i64* %__edi, align 8, !dbg !7422
  store i64 %0, i64* %__edi, align 8, !dbg !7422
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !7423, metadata !DIExpression()), !dbg !7422
  %1 = load i64, i64* %__esi, align 8, !dbg !7422
  store i64 %1, i64* %__esi, align 8, !dbg !7422
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !7424, metadata !DIExpression()), !dbg !7422
  %2 = load i64, i64* %__edx, align 8, !dbg !7422
  store i64 %2, i64* %__edx, align 8, !dbg !7422
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !7425, metadata !DIExpression()), !dbg !7422
  %3 = load i64, i64* %__ecx, align 8, !dbg !7422
  store i64 %3, i64* %__ecx, align 8, !dbg !7422
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !7426, metadata !DIExpression()), !dbg !7422
  %4 = load i64, i64* %__eax, align 8, !dbg !7422
  store i64 %4, i64* %__eax, align 8, !dbg !7422
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 3, i32 0), align 8, !dbg !7422
  %6 = call i64 @llvm.read_register.i64(metadata !4317), !dbg !7422
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 39, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 3, i32 0), i32 1, i64 %6) #10, !dbg !7422, !srcloc !7427
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !7422
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !7422
  store i64 %asmresult, i64* %__eax, align 8, !dbg !7422
  call void @llvm.write_register.i64(metadata !4317, i64 %asmresult1), !dbg !7422
  ret void, !dbg !7428
}

; Function Attrs: noredzone
declare dso_local i32 @kstrtouint(i8*, i32, i32*) #1

; Function Attrs: noredzone
declare dso_local void @input_unregister_device(%struct.input_dev*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @atkbd_do_show_force_release(%struct.device* %d, %struct.device_attribute* %attr, i8* %b) #2 !dbg !7429 {
entry:
  %d.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %b.addr = alloca i8*, align 8
  store %struct.device* %d, %struct.device** %d.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %d.addr, metadata !7430, metadata !DIExpression()), !dbg !7431
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !7432, metadata !DIExpression()), !dbg !7431
  store i8* %b, i8** %b.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !7433, metadata !DIExpression()), !dbg !7431
  %0 = load %struct.device*, %struct.device** %d.addr, align 8, !dbg !7431
  %1 = load i8*, i8** %b.addr, align 8, !dbg !7431
  %call = call i64 @atkbd_attr_show_helper(%struct.device* %0, i8* %1, i64 (%struct.atkbd*, i8*)* @atkbd_show_force_release) #11, !dbg !7431
  ret i64 %call, !dbg !7431
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @atkbd_do_set_force_release(%struct.device* %d, %struct.device_attribute* %attr, i8* %b, i64 %s) #2 !dbg !7434 {
entry:
  %d.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %b.addr = alloca i8*, align 8
  %s.addr = alloca i64, align 8
  store %struct.device* %d, %struct.device** %d.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %d.addr, metadata !7435, metadata !DIExpression()), !dbg !7436
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !7437, metadata !DIExpression()), !dbg !7436
  store i8* %b, i8** %b.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !7438, metadata !DIExpression()), !dbg !7436
  store i64 %s, i64* %s.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %s.addr, metadata !7439, metadata !DIExpression()), !dbg !7436
  %0 = load %struct.device*, %struct.device** %d.addr, align 8, !dbg !7436
  %1 = load i8*, i8** %b.addr, align 8, !dbg !7436
  %2 = load i64, i64* %s.addr, align 8, !dbg !7436
  %call = call i64 @atkbd_attr_set_helper(%struct.device* %0, i8* %1, i64 %2, i64 (%struct.atkbd*, i8*, i64)* @atkbd_set_force_release) #11, !dbg !7436
  ret i64 %call, !dbg !7436
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @atkbd_show_force_release(%struct.atkbd* %atkbd, i8* %buf) #2 !dbg !7440 {
entry:
  %atkbd.addr = alloca %struct.atkbd*, align 8
  %buf.addr = alloca i8*, align 8
  %len = alloca i64, align 8
  store %struct.atkbd* %atkbd, %struct.atkbd** %atkbd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.atkbd** %atkbd.addr, metadata !7441, metadata !DIExpression()), !dbg !7442
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !7443, metadata !DIExpression()), !dbg !7444
  call void @llvm.dbg.declare(metadata i64* %len, metadata !7445, metadata !DIExpression()), !dbg !7446
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !7447
  %1 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !7448
  %force_release_mask = getelementptr inbounds %struct.atkbd, %struct.atkbd* %1, i32 0, i32 6, !dbg !7449
  %arraydecay = getelementptr inbounds [8 x i64], [8 x i64]* %force_release_mask, i64 0, i64 0, !dbg !7448
  %call = call i32 (i8*, i64, i8*, ...) @scnprintf(i8* %0, i64 4095, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.34, i64 0, i64 0), i32 512, i64* %arraydecay) #11, !dbg !7450
  %conv = sext i32 %call to i64, !dbg !7450
  store i64 %conv, i64* %len, align 8, !dbg !7446
  %2 = load i8*, i8** %buf.addr, align 8, !dbg !7451
  %3 = load i64, i64* %len, align 8, !dbg !7452
  %inc = add i64 %3, 1, !dbg !7452
  store i64 %inc, i64* %len, align 8, !dbg !7452
  %arrayidx = getelementptr i8, i8* %2, i64 %3, !dbg !7451
  store i8 10, i8* %arrayidx, align 1, !dbg !7453
  %4 = load i8*, i8** %buf.addr, align 8, !dbg !7454
  %5 = load i64, i64* %len, align 8, !dbg !7455
  %arrayidx1 = getelementptr i8, i8* %4, i64 %5, !dbg !7454
  store i8 0, i8* %arrayidx1, align 1, !dbg !7456
  %6 = load i64, i64* %len, align 8, !dbg !7457
  ret i64 %6, !dbg !7458
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @atkbd_set_force_release(%struct.atkbd* %atkbd, i8* %buf, i64 %count) #2 !dbg !7459 {
entry:
  %retval = alloca i64, align 8
  %atkbd.addr = alloca %struct.atkbd*, align 8
  %buf.addr = alloca i8*, align 8
  %count.addr = alloca i64, align 8
  %new_mask = alloca [8 x i64], align 16
  %err = alloca i32, align 4
  store %struct.atkbd* %atkbd, %struct.atkbd** %atkbd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.atkbd** %atkbd.addr, metadata !7460, metadata !DIExpression()), !dbg !7461
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !7462, metadata !DIExpression()), !dbg !7463
  store i64 %count, i64* %count.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !7464, metadata !DIExpression()), !dbg !7465
  call void @llvm.dbg.declare(metadata [8 x i64]* %new_mask, metadata !7466, metadata !DIExpression()), !dbg !7467
  call void @llvm.dbg.declare(metadata i32* %err, metadata !7468, metadata !DIExpression()), !dbg !7469
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !7470
  %arraydecay = getelementptr inbounds [8 x i64], [8 x i64]* %new_mask, i64 0, i64 0, !dbg !7471
  %call = call i32 @bitmap_parselist(i8* %0, i64* %arraydecay, i32 512) #11, !dbg !7472
  store i32 %call, i32* %err, align 4, !dbg !7473
  %1 = load i32, i32* %err, align 4, !dbg !7474
  %tobool = icmp ne i32 %1, 0, !dbg !7474
  br i1 %tobool, label %if.then, label %if.end, !dbg !7476

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %err, align 4, !dbg !7477
  %conv = sext i32 %2 to i64, !dbg !7477
  store i64 %conv, i64* %retval, align 8, !dbg !7478
  br label %return, !dbg !7478

if.end:                                           ; preds = %entry
  %3 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !7479
  %force_release_mask = getelementptr inbounds %struct.atkbd, %struct.atkbd* %3, i32 0, i32 6, !dbg !7480
  %arraydecay1 = getelementptr inbounds [8 x i64], [8 x i64]* %force_release_mask, i64 0, i64 0, !dbg !7481
  %4 = bitcast i64* %arraydecay1 to i8*, !dbg !7481
  %arraydecay2 = getelementptr inbounds [8 x i64], [8 x i64]* %new_mask, i64 0, i64 0, !dbg !7481
  %5 = bitcast i64* %arraydecay2 to i8*, !dbg !7481
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 16 %5, i64 64, i1 false), !dbg !7481
  %6 = load i64, i64* %count.addr, align 8, !dbg !7482
  store i64 %6, i64* %retval, align 8, !dbg !7483
  br label %return, !dbg !7483

return:                                           ; preds = %if.end, %if.then
  %7 = load i64, i64* %retval, align 8, !dbg !7484
  ret i64 %7, !dbg !7484
}

; Function Attrs: noredzone
declare dso_local i32 @bitmap_parselist(i8*, i64*, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @atkbd_do_show_scroll(%struct.device* %d, %struct.device_attribute* %attr, i8* %b) #2 !dbg !7485 {
entry:
  %d.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %b.addr = alloca i8*, align 8
  store %struct.device* %d, %struct.device** %d.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %d.addr, metadata !7486, metadata !DIExpression()), !dbg !7487
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !7488, metadata !DIExpression()), !dbg !7487
  store i8* %b, i8** %b.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !7489, metadata !DIExpression()), !dbg !7487
  %0 = load %struct.device*, %struct.device** %d.addr, align 8, !dbg !7487
  %1 = load i8*, i8** %b.addr, align 8, !dbg !7487
  %call = call i64 @atkbd_attr_show_helper(%struct.device* %0, i8* %1, i64 (%struct.atkbd*, i8*)* @atkbd_show_scroll) #11, !dbg !7487
  ret i64 %call, !dbg !7487
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @atkbd_do_set_scroll(%struct.device* %d, %struct.device_attribute* %attr, i8* %b, i64 %s) #2 !dbg !7490 {
entry:
  %d.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %b.addr = alloca i8*, align 8
  %s.addr = alloca i64, align 8
  store %struct.device* %d, %struct.device** %d.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %d.addr, metadata !7491, metadata !DIExpression()), !dbg !7492
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !7493, metadata !DIExpression()), !dbg !7492
  store i8* %b, i8** %b.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !7494, metadata !DIExpression()), !dbg !7492
  store i64 %s, i64* %s.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %s.addr, metadata !7495, metadata !DIExpression()), !dbg !7492
  %0 = load %struct.device*, %struct.device** %d.addr, align 8, !dbg !7492
  %1 = load i8*, i8** %b.addr, align 8, !dbg !7492
  %2 = load i64, i64* %s.addr, align 8, !dbg !7492
  %call = call i64 @atkbd_attr_set_helper(%struct.device* %0, i8* %1, i64 %2, i64 (%struct.atkbd*, i8*, i64)* @atkbd_set_scroll) #11, !dbg !7492
  ret i64 %call, !dbg !7492
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @atkbd_show_scroll(%struct.atkbd* %atkbd, i8* %buf) #2 !dbg !7496 {
entry:
  %atkbd.addr = alloca %struct.atkbd*, align 8
  %buf.addr = alloca i8*, align 8
  store %struct.atkbd* %atkbd, %struct.atkbd** %atkbd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.atkbd** %atkbd.addr, metadata !7497, metadata !DIExpression()), !dbg !7498
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !7499, metadata !DIExpression()), !dbg !7500
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !7501
  %1 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !7502
  %scroll = getelementptr inbounds %struct.atkbd, %struct.atkbd* %1, i32 0, i32 13, !dbg !7503
  %2 = load i8, i8* %scroll, align 2, !dbg !7503
  %tobool = trunc i8 %2 to i1, !dbg !7503
  %3 = zext i1 %tobool to i64, !dbg !7502
  %cond = select i1 %tobool, i32 1, i32 0, !dbg !7502
  %call = call i32 (i8*, i8*, ...) @sprintf(i8* %0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.32, i64 0, i64 0), i32 %cond) #11, !dbg !7504
  %conv = sext i32 %call to i64, !dbg !7504
  ret i64 %conv, !dbg !7505
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @atkbd_set_scroll(%struct.atkbd* %atkbd, i8* %buf, i64 %count) #2 !dbg !7506 {
entry:
  %retval = alloca i64, align 8
  %atkbd.addr = alloca %struct.atkbd*, align 8
  %buf.addr = alloca i8*, align 8
  %count.addr = alloca i64, align 8
  %old_dev = alloca %struct.input_dev*, align 8
  %new_dev = alloca %struct.input_dev*, align 8
  %value = alloca i32, align 4
  %err = alloca i32, align 4
  %old_scroll = alloca i8, align 1
  store %struct.atkbd* %atkbd, %struct.atkbd** %atkbd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.atkbd** %atkbd.addr, metadata !7507, metadata !DIExpression()), !dbg !7508
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !7509, metadata !DIExpression()), !dbg !7510
  store i64 %count, i64* %count.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !7511, metadata !DIExpression()), !dbg !7512
  call void @llvm.dbg.declare(metadata %struct.input_dev** %old_dev, metadata !7513, metadata !DIExpression()), !dbg !7514
  call void @llvm.dbg.declare(metadata %struct.input_dev** %new_dev, metadata !7515, metadata !DIExpression()), !dbg !7516
  call void @llvm.dbg.declare(metadata i32* %value, metadata !7517, metadata !DIExpression()), !dbg !7518
  call void @llvm.dbg.declare(metadata i32* %err, metadata !7519, metadata !DIExpression()), !dbg !7520
  call void @llvm.dbg.declare(metadata i8* %old_scroll, metadata !7521, metadata !DIExpression()), !dbg !7522
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !7523
  %call = call i32 @kstrtouint(i8* %0, i32 10, i32* %value) #11, !dbg !7524
  store i32 %call, i32* %err, align 4, !dbg !7525
  %1 = load i32, i32* %err, align 4, !dbg !7526
  %tobool = icmp ne i32 %1, 0, !dbg !7526
  br i1 %tobool, label %if.then, label %if.end, !dbg !7528

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %err, align 4, !dbg !7529
  %conv = sext i32 %2 to i64, !dbg !7529
  store i64 %conv, i64* %retval, align 8, !dbg !7530
  br label %return, !dbg !7530

if.end:                                           ; preds = %entry
  %3 = load i32, i32* %value, align 4, !dbg !7531
  %cmp = icmp ugt i32 %3, 1, !dbg !7533
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !7534

if.then2:                                         ; preds = %if.end
  store i64 -22, i64* %retval, align 8, !dbg !7535
  br label %return, !dbg !7535

if.end3:                                          ; preds = %if.end
  %4 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !7536
  %scroll = getelementptr inbounds %struct.atkbd, %struct.atkbd* %4, i32 0, i32 13, !dbg !7538
  %5 = load i8, i8* %scroll, align 2, !dbg !7538
  %tobool4 = trunc i8 %5 to i1, !dbg !7538
  %conv5 = zext i1 %tobool4 to i32, !dbg !7536
  %6 = load i32, i32* %value, align 4, !dbg !7539
  %cmp6 = icmp ne i32 %conv5, %6, !dbg !7540
  br i1 %cmp6, label %if.then8, label %if.end29, !dbg !7541

if.then8:                                         ; preds = %if.end3
  %7 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !7542
  %dev = getelementptr inbounds %struct.atkbd, %struct.atkbd* %7, i32 0, i32 1, !dbg !7544
  %8 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !7544
  store %struct.input_dev* %8, %struct.input_dev** %old_dev, align 8, !dbg !7545
  %9 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !7546
  %scroll9 = getelementptr inbounds %struct.atkbd, %struct.atkbd* %9, i32 0, i32 13, !dbg !7547
  %10 = load i8, i8* %scroll9, align 2, !dbg !7547
  %tobool10 = trunc i8 %10 to i1, !dbg !7547
  %frombool = zext i1 %tobool10 to i8, !dbg !7548
  store i8 %frombool, i8* %old_scroll, align 1, !dbg !7548
  %call11 = call %struct.input_dev* @input_allocate_device() #11, !dbg !7549
  store %struct.input_dev* %call11, %struct.input_dev** %new_dev, align 8, !dbg !7550
  %11 = load %struct.input_dev*, %struct.input_dev** %new_dev, align 8, !dbg !7551
  %tobool12 = icmp ne %struct.input_dev* %11, null, !dbg !7551
  br i1 %tobool12, label %if.end14, label %if.then13, !dbg !7553

if.then13:                                        ; preds = %if.then8
  store i64 -12, i64* %retval, align 8, !dbg !7554
  br label %return, !dbg !7554

if.end14:                                         ; preds = %if.then8
  %12 = load %struct.input_dev*, %struct.input_dev** %new_dev, align 8, !dbg !7555
  %13 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !7556
  %dev15 = getelementptr inbounds %struct.atkbd, %struct.atkbd* %13, i32 0, i32 1, !dbg !7557
  store %struct.input_dev* %12, %struct.input_dev** %dev15, align 8, !dbg !7558
  %14 = load i32, i32* %value, align 4, !dbg !7559
  %tobool16 = icmp ne i32 %14, 0, !dbg !7559
  %15 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !7560
  %scroll17 = getelementptr inbounds %struct.atkbd, %struct.atkbd* %15, i32 0, i32 13, !dbg !7561
  %frombool18 = zext i1 %tobool16 to i8, !dbg !7562
  store i8 %frombool18, i8* %scroll17, align 2, !dbg !7562
  %16 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !7563
  call void @atkbd_set_keycode_table(%struct.atkbd* %16) #11, !dbg !7564
  %17 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !7565
  call void @atkbd_set_device_attrs(%struct.atkbd* %17) #11, !dbg !7566
  %18 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !7567
  %dev19 = getelementptr inbounds %struct.atkbd, %struct.atkbd* %18, i32 0, i32 1, !dbg !7568
  %19 = load %struct.input_dev*, %struct.input_dev** %dev19, align 8, !dbg !7568
  %call20 = call i32 @input_register_device(%struct.input_dev* %19) #11, !dbg !7569
  store i32 %call20, i32* %err, align 4, !dbg !7570
  %20 = load i32, i32* %err, align 4, !dbg !7571
  %tobool21 = icmp ne i32 %20, 0, !dbg !7571
  br i1 %tobool21, label %if.then22, label %if.end28, !dbg !7573

if.then22:                                        ; preds = %if.end14
  %21 = load %struct.input_dev*, %struct.input_dev** %new_dev, align 8, !dbg !7574
  call void @input_free_device(%struct.input_dev* %21) #11, !dbg !7576
  %22 = load i8, i8* %old_scroll, align 1, !dbg !7577
  %tobool23 = trunc i8 %22 to i1, !dbg !7577
  %23 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !7578
  %scroll24 = getelementptr inbounds %struct.atkbd, %struct.atkbd* %23, i32 0, i32 13, !dbg !7579
  %frombool25 = zext i1 %tobool23 to i8, !dbg !7580
  store i8 %frombool25, i8* %scroll24, align 2, !dbg !7580
  %24 = load %struct.input_dev*, %struct.input_dev** %old_dev, align 8, !dbg !7581
  %25 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !7582
  %dev26 = getelementptr inbounds %struct.atkbd, %struct.atkbd* %25, i32 0, i32 1, !dbg !7583
  store %struct.input_dev* %24, %struct.input_dev** %dev26, align 8, !dbg !7584
  %26 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !7585
  call void @atkbd_set_keycode_table(%struct.atkbd* %26) #11, !dbg !7586
  %27 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !7587
  call void @atkbd_set_device_attrs(%struct.atkbd* %27) #11, !dbg !7588
  %28 = load i32, i32* %err, align 4, !dbg !7589
  %conv27 = sext i32 %28 to i64, !dbg !7589
  store i64 %conv27, i64* %retval, align 8, !dbg !7590
  br label %return, !dbg !7590

if.end28:                                         ; preds = %if.end14
  %29 = load %struct.input_dev*, %struct.input_dev** %old_dev, align 8, !dbg !7591
  call void @input_unregister_device(%struct.input_dev* %29) #11, !dbg !7592
  br label %if.end29, !dbg !7593

if.end29:                                         ; preds = %if.end28, %if.end3
  %30 = load i64, i64* %count.addr, align 8, !dbg !7594
  store i64 %30, i64* %retval, align 8, !dbg !7595
  br label %return, !dbg !7595

return:                                           ; preds = %if.end29, %if.then22, %if.then13, %if.then2, %if.then
  %31 = load i64, i64* %retval, align 8, !dbg !7596
  ret i64 %31, !dbg !7596
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @atkbd_do_show_set(%struct.device* %d, %struct.device_attribute* %attr, i8* %b) #2 !dbg !7597 {
entry:
  %d.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %b.addr = alloca i8*, align 8
  store %struct.device* %d, %struct.device** %d.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %d.addr, metadata !7598, metadata !DIExpression()), !dbg !7599
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !7600, metadata !DIExpression()), !dbg !7599
  store i8* %b, i8** %b.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !7601, metadata !DIExpression()), !dbg !7599
  %0 = load %struct.device*, %struct.device** %d.addr, align 8, !dbg !7599
  %1 = load i8*, i8** %b.addr, align 8, !dbg !7599
  %call = call i64 @atkbd_attr_show_helper(%struct.device* %0, i8* %1, i64 (%struct.atkbd*, i8*)* @atkbd_show_set) #11, !dbg !7599
  ret i64 %call, !dbg !7599
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @atkbd_do_set_set(%struct.device* %d, %struct.device_attribute* %attr, i8* %b, i64 %s) #2 !dbg !7602 {
entry:
  %d.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %b.addr = alloca i8*, align 8
  %s.addr = alloca i64, align 8
  store %struct.device* %d, %struct.device** %d.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %d.addr, metadata !7603, metadata !DIExpression()), !dbg !7604
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !7605, metadata !DIExpression()), !dbg !7604
  store i8* %b, i8** %b.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !7606, metadata !DIExpression()), !dbg !7604
  store i64 %s, i64* %s.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %s.addr, metadata !7607, metadata !DIExpression()), !dbg !7604
  %0 = load %struct.device*, %struct.device** %d.addr, align 8, !dbg !7604
  %1 = load i8*, i8** %b.addr, align 8, !dbg !7604
  %2 = load i64, i64* %s.addr, align 8, !dbg !7604
  %call = call i64 @atkbd_attr_set_helper(%struct.device* %0, i8* %1, i64 %2, i64 (%struct.atkbd*, i8*, i64)* @atkbd_set_set) #11, !dbg !7604
  ret i64 %call, !dbg !7604
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @atkbd_show_set(%struct.atkbd* %atkbd, i8* %buf) #2 !dbg !7608 {
entry:
  %atkbd.addr = alloca %struct.atkbd*, align 8
  %buf.addr = alloca i8*, align 8
  store %struct.atkbd* %atkbd, %struct.atkbd** %atkbd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.atkbd** %atkbd.addr, metadata !7609, metadata !DIExpression()), !dbg !7610
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !7611, metadata !DIExpression()), !dbg !7612
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !7613
  %1 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !7614
  %set = getelementptr inbounds %struct.atkbd, %struct.atkbd* %1, i32 0, i32 7, !dbg !7615
  %2 = load i8, i8* %set, align 8, !dbg !7615
  %conv = zext i8 %2 to i32, !dbg !7614
  %call = call i32 (i8*, i8*, ...) @sprintf(i8* %0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.32, i64 0, i64 0), i32 %conv) #11, !dbg !7616
  %conv1 = sext i32 %call to i64, !dbg !7616
  ret i64 %conv1, !dbg !7617
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @atkbd_set_set(%struct.atkbd* %atkbd, i8* %buf, i64 %count) #2 !dbg !7618 {
entry:
  %retval = alloca i64, align 8
  %atkbd.addr = alloca %struct.atkbd*, align 8
  %buf.addr = alloca i8*, align 8
  %count.addr = alloca i64, align 8
  %old_dev = alloca %struct.input_dev*, align 8
  %new_dev = alloca %struct.input_dev*, align 8
  %value = alloca i32, align 4
  %err = alloca i32, align 4
  %old_set = alloca i8, align 1
  %old_extra = alloca i8, align 1
  store %struct.atkbd* %atkbd, %struct.atkbd** %atkbd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.atkbd** %atkbd.addr, metadata !7619, metadata !DIExpression()), !dbg !7620
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !7621, metadata !DIExpression()), !dbg !7622
  store i64 %count, i64* %count.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !7623, metadata !DIExpression()), !dbg !7624
  call void @llvm.dbg.declare(metadata %struct.input_dev** %old_dev, metadata !7625, metadata !DIExpression()), !dbg !7626
  call void @llvm.dbg.declare(metadata %struct.input_dev** %new_dev, metadata !7627, metadata !DIExpression()), !dbg !7628
  call void @llvm.dbg.declare(metadata i32* %value, metadata !7629, metadata !DIExpression()), !dbg !7630
  call void @llvm.dbg.declare(metadata i32* %err, metadata !7631, metadata !DIExpression()), !dbg !7632
  call void @llvm.dbg.declare(metadata i8* %old_set, metadata !7633, metadata !DIExpression()), !dbg !7634
  call void @llvm.dbg.declare(metadata i8* %old_extra, metadata !7635, metadata !DIExpression()), !dbg !7636
  %0 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !7637
  %write = getelementptr inbounds %struct.atkbd, %struct.atkbd* %0, i32 0, i32 10, !dbg !7639
  %1 = load i8, i8* %write, align 1, !dbg !7639
  %tobool = trunc i8 %1 to i1, !dbg !7639
  br i1 %tobool, label %if.end, label %if.then, !dbg !7640

if.then:                                          ; preds = %entry
  store i64 -5, i64* %retval, align 8, !dbg !7641
  br label %return, !dbg !7641

if.end:                                           ; preds = %entry
  %2 = load i8*, i8** %buf.addr, align 8, !dbg !7642
  %call = call i32 @kstrtouint(i8* %2, i32 10, i32* %value) #11, !dbg !7643
  store i32 %call, i32* %err, align 4, !dbg !7644
  %3 = load i32, i32* %err, align 4, !dbg !7645
  %tobool1 = icmp ne i32 %3, 0, !dbg !7645
  br i1 %tobool1, label %if.then2, label %if.end3, !dbg !7647

if.then2:                                         ; preds = %if.end
  %4 = load i32, i32* %err, align 4, !dbg !7648
  %conv = sext i32 %4 to i64, !dbg !7648
  store i64 %conv, i64* %retval, align 8, !dbg !7649
  br label %return, !dbg !7649

if.end3:                                          ; preds = %if.end
  %5 = load i32, i32* %value, align 4, !dbg !7650
  %cmp = icmp ne i32 %5, 2, !dbg !7652
  br i1 %cmp, label %land.lhs.true, label %if.end8, !dbg !7653

land.lhs.true:                                    ; preds = %if.end3
  %6 = load i32, i32* %value, align 4, !dbg !7654
  %cmp5 = icmp ne i32 %6, 3, !dbg !7655
  br i1 %cmp5, label %if.then7, label %if.end8, !dbg !7656

if.then7:                                         ; preds = %land.lhs.true
  store i64 -22, i64* %retval, align 8, !dbg !7657
  br label %return, !dbg !7657

if.end8:                                          ; preds = %land.lhs.true, %if.end3
  %7 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !7658
  %set = getelementptr inbounds %struct.atkbd, %struct.atkbd* %7, i32 0, i32 7, !dbg !7660
  %8 = load i8, i8* %set, align 8, !dbg !7660
  %conv9 = zext i8 %8 to i32, !dbg !7658
  %9 = load i32, i32* %value, align 4, !dbg !7661
  %cmp10 = icmp ne i32 %conv9, %9, !dbg !7662
  br i1 %cmp10, label %if.then12, label %if.end41, !dbg !7663

if.then12:                                        ; preds = %if.end8
  %10 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !7664
  %dev = getelementptr inbounds %struct.atkbd, %struct.atkbd* %10, i32 0, i32 1, !dbg !7666
  %11 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !7666
  store %struct.input_dev* %11, %struct.input_dev** %old_dev, align 8, !dbg !7667
  %12 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !7668
  %extra = getelementptr inbounds %struct.atkbd, %struct.atkbd* %12, i32 0, i32 9, !dbg !7669
  %13 = load i8, i8* %extra, align 2, !dbg !7669
  %tobool13 = trunc i8 %13 to i1, !dbg !7669
  %frombool = zext i1 %tobool13 to i8, !dbg !7670
  store i8 %frombool, i8* %old_extra, align 1, !dbg !7670
  %14 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !7671
  %set14 = getelementptr inbounds %struct.atkbd, %struct.atkbd* %14, i32 0, i32 7, !dbg !7672
  %15 = load i8, i8* %set14, align 8, !dbg !7672
  store i8 %15, i8* %old_set, align 1, !dbg !7673
  %call15 = call %struct.input_dev* @input_allocate_device() #11, !dbg !7674
  store %struct.input_dev* %call15, %struct.input_dev** %new_dev, align 8, !dbg !7675
  %16 = load %struct.input_dev*, %struct.input_dev** %new_dev, align 8, !dbg !7676
  %tobool16 = icmp ne %struct.input_dev* %16, null, !dbg !7676
  br i1 %tobool16, label %if.end18, label %if.then17, !dbg !7678

if.then17:                                        ; preds = %if.then12
  store i64 -12, i64* %retval, align 8, !dbg !7679
  br label %return, !dbg !7679

if.end18:                                         ; preds = %if.then12
  %17 = load %struct.input_dev*, %struct.input_dev** %new_dev, align 8, !dbg !7680
  %18 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !7681
  %dev19 = getelementptr inbounds %struct.atkbd, %struct.atkbd* %18, i32 0, i32 1, !dbg !7682
  store %struct.input_dev* %17, %struct.input_dev** %dev19, align 8, !dbg !7683
  %19 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !7684
  %20 = load i32, i32* %value, align 4, !dbg !7685
  %21 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !7686
  %extra20 = getelementptr inbounds %struct.atkbd, %struct.atkbd* %21, i32 0, i32 9, !dbg !7687
  %22 = load i8, i8* %extra20, align 2, !dbg !7687
  %tobool21 = trunc i8 %22 to i1, !dbg !7687
  %conv22 = zext i1 %tobool21 to i32, !dbg !7686
  %call23 = call i32 @atkbd_select_set(%struct.atkbd* %19, i32 %20, i32 %conv22) #11, !dbg !7688
  %conv24 = trunc i32 %call23 to i8, !dbg !7688
  %23 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !7689
  %set25 = getelementptr inbounds %struct.atkbd, %struct.atkbd* %23, i32 0, i32 7, !dbg !7690
  store i8 %conv24, i8* %set25, align 8, !dbg !7691
  %24 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !7692
  %call26 = call i32 @atkbd_reset_state(%struct.atkbd* %24) #11, !dbg !7693
  %25 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !7694
  %call27 = call i32 @atkbd_activate(%struct.atkbd* %25) #11, !dbg !7695
  %26 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !7696
  call void @atkbd_set_keycode_table(%struct.atkbd* %26) #11, !dbg !7697
  %27 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !7698
  call void @atkbd_set_device_attrs(%struct.atkbd* %27) #11, !dbg !7699
  %28 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !7700
  %dev28 = getelementptr inbounds %struct.atkbd, %struct.atkbd* %28, i32 0, i32 1, !dbg !7701
  %29 = load %struct.input_dev*, %struct.input_dev** %dev28, align 8, !dbg !7701
  %call29 = call i32 @input_register_device(%struct.input_dev* %29) #11, !dbg !7702
  store i32 %call29, i32* %err, align 4, !dbg !7703
  %30 = load i32, i32* %err, align 4, !dbg !7704
  %tobool30 = icmp ne i32 %30, 0, !dbg !7704
  br i1 %tobool30, label %if.then31, label %if.end40, !dbg !7706

if.then31:                                        ; preds = %if.end18
  %31 = load %struct.input_dev*, %struct.input_dev** %new_dev, align 8, !dbg !7707
  call void @input_free_device(%struct.input_dev* %31) #11, !dbg !7709
  %32 = load %struct.input_dev*, %struct.input_dev** %old_dev, align 8, !dbg !7710
  %33 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !7711
  %dev32 = getelementptr inbounds %struct.atkbd, %struct.atkbd* %33, i32 0, i32 1, !dbg !7712
  store %struct.input_dev* %32, %struct.input_dev** %dev32, align 8, !dbg !7713
  %34 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !7714
  %35 = load i8, i8* %old_set, align 1, !dbg !7715
  %conv33 = zext i8 %35 to i32, !dbg !7715
  %36 = load i8, i8* %old_extra, align 1, !dbg !7716
  %tobool34 = trunc i8 %36 to i1, !dbg !7716
  %conv35 = zext i1 %tobool34 to i32, !dbg !7716
  %call36 = call i32 @atkbd_select_set(%struct.atkbd* %34, i32 %conv33, i32 %conv35) #11, !dbg !7717
  %conv37 = trunc i32 %call36 to i8, !dbg !7717
  %37 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !7718
  %set38 = getelementptr inbounds %struct.atkbd, %struct.atkbd* %37, i32 0, i32 7, !dbg !7719
  store i8 %conv37, i8* %set38, align 8, !dbg !7720
  %38 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !7721
  call void @atkbd_set_keycode_table(%struct.atkbd* %38) #11, !dbg !7722
  %39 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !7723
  call void @atkbd_set_device_attrs(%struct.atkbd* %39) #11, !dbg !7724
  %40 = load i32, i32* %err, align 4, !dbg !7725
  %conv39 = sext i32 %40 to i64, !dbg !7725
  store i64 %conv39, i64* %retval, align 8, !dbg !7726
  br label %return, !dbg !7726

if.end40:                                         ; preds = %if.end18
  %41 = load %struct.input_dev*, %struct.input_dev** %old_dev, align 8, !dbg !7727
  call void @input_unregister_device(%struct.input_dev* %41) #11, !dbg !7728
  br label %if.end41, !dbg !7729

if.end41:                                         ; preds = %if.end40, %if.end8
  %42 = load i64, i64* %count.addr, align 8, !dbg !7730
  store i64 %42, i64* %retval, align 8, !dbg !7731
  br label %return, !dbg !7731

return:                                           ; preds = %if.end41, %if.then31, %if.then17, %if.then7, %if.then2, %if.then
  %43 = load i64, i64* %retval, align 8, !dbg !7732
  ret i64 %43, !dbg !7732
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @atkbd_do_show_softrepeat(%struct.device* %d, %struct.device_attribute* %attr, i8* %b) #2 !dbg !7733 {
entry:
  %d.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %b.addr = alloca i8*, align 8
  store %struct.device* %d, %struct.device** %d.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %d.addr, metadata !7734, metadata !DIExpression()), !dbg !7735
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !7736, metadata !DIExpression()), !dbg !7735
  store i8* %b, i8** %b.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !7737, metadata !DIExpression()), !dbg !7735
  %0 = load %struct.device*, %struct.device** %d.addr, align 8, !dbg !7735
  %1 = load i8*, i8** %b.addr, align 8, !dbg !7735
  %call = call i64 @atkbd_attr_show_helper(%struct.device* %0, i8* %1, i64 (%struct.atkbd*, i8*)* @atkbd_show_softrepeat) #11, !dbg !7735
  ret i64 %call, !dbg !7735
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @atkbd_do_set_softrepeat(%struct.device* %d, %struct.device_attribute* %attr, i8* %b, i64 %s) #2 !dbg !7738 {
entry:
  %d.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %b.addr = alloca i8*, align 8
  %s.addr = alloca i64, align 8
  store %struct.device* %d, %struct.device** %d.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %d.addr, metadata !7739, metadata !DIExpression()), !dbg !7740
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !7741, metadata !DIExpression()), !dbg !7740
  store i8* %b, i8** %b.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !7742, metadata !DIExpression()), !dbg !7740
  store i64 %s, i64* %s.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %s.addr, metadata !7743, metadata !DIExpression()), !dbg !7740
  %0 = load %struct.device*, %struct.device** %d.addr, align 8, !dbg !7740
  %1 = load i8*, i8** %b.addr, align 8, !dbg !7740
  %2 = load i64, i64* %s.addr, align 8, !dbg !7740
  %call = call i64 @atkbd_attr_set_helper(%struct.device* %0, i8* %1, i64 %2, i64 (%struct.atkbd*, i8*, i64)* @atkbd_set_softrepeat) #11, !dbg !7740
  ret i64 %call, !dbg !7740
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @atkbd_show_softrepeat(%struct.atkbd* %atkbd, i8* %buf) #2 !dbg !7744 {
entry:
  %atkbd.addr = alloca %struct.atkbd*, align 8
  %buf.addr = alloca i8*, align 8
  store %struct.atkbd* %atkbd, %struct.atkbd** %atkbd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.atkbd** %atkbd.addr, metadata !7745, metadata !DIExpression()), !dbg !7746
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !7747, metadata !DIExpression()), !dbg !7748
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !7749
  %1 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !7750
  %softrepeat = getelementptr inbounds %struct.atkbd, %struct.atkbd* %1, i32 0, i32 11, !dbg !7751
  %2 = load i8, i8* %softrepeat, align 4, !dbg !7751
  %tobool = trunc i8 %2 to i1, !dbg !7751
  %3 = zext i1 %tobool to i64, !dbg !7750
  %cond = select i1 %tobool, i32 1, i32 0, !dbg !7750
  %call = call i32 (i8*, i8*, ...) @sprintf(i8* %0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.32, i64 0, i64 0), i32 %cond) #11, !dbg !7752
  %conv = sext i32 %call to i64, !dbg !7752
  ret i64 %conv, !dbg !7753
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @atkbd_set_softrepeat(%struct.atkbd* %atkbd, i8* %buf, i64 %count) #2 !dbg !7754 {
entry:
  %retval = alloca i64, align 8
  %atkbd.addr = alloca %struct.atkbd*, align 8
  %buf.addr = alloca i8*, align 8
  %count.addr = alloca i64, align 8
  %old_dev = alloca %struct.input_dev*, align 8
  %new_dev = alloca %struct.input_dev*, align 8
  %value = alloca i32, align 4
  %err = alloca i32, align 4
  %old_softrepeat = alloca i8, align 1
  %old_softraw = alloca i8, align 1
  store %struct.atkbd* %atkbd, %struct.atkbd** %atkbd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.atkbd** %atkbd.addr, metadata !7755, metadata !DIExpression()), !dbg !7756
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !7757, metadata !DIExpression()), !dbg !7758
  store i64 %count, i64* %count.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !7759, metadata !DIExpression()), !dbg !7760
  call void @llvm.dbg.declare(metadata %struct.input_dev** %old_dev, metadata !7761, metadata !DIExpression()), !dbg !7762
  call void @llvm.dbg.declare(metadata %struct.input_dev** %new_dev, metadata !7763, metadata !DIExpression()), !dbg !7764
  call void @llvm.dbg.declare(metadata i32* %value, metadata !7765, metadata !DIExpression()), !dbg !7766
  call void @llvm.dbg.declare(metadata i32* %err, metadata !7767, metadata !DIExpression()), !dbg !7768
  call void @llvm.dbg.declare(metadata i8* %old_softrepeat, metadata !7769, metadata !DIExpression()), !dbg !7770
  call void @llvm.dbg.declare(metadata i8* %old_softraw, metadata !7771, metadata !DIExpression()), !dbg !7772
  %0 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !7773
  %write = getelementptr inbounds %struct.atkbd, %struct.atkbd* %0, i32 0, i32 10, !dbg !7775
  %1 = load i8, i8* %write, align 1, !dbg !7775
  %tobool = trunc i8 %1 to i1, !dbg !7775
  br i1 %tobool, label %if.end, label %if.then, !dbg !7776

if.then:                                          ; preds = %entry
  store i64 -5, i64* %retval, align 8, !dbg !7777
  br label %return, !dbg !7777

if.end:                                           ; preds = %entry
  %2 = load i8*, i8** %buf.addr, align 8, !dbg !7778
  %call = call i32 @kstrtouint(i8* %2, i32 10, i32* %value) #11, !dbg !7779
  store i32 %call, i32* %err, align 4, !dbg !7780
  %3 = load i32, i32* %err, align 4, !dbg !7781
  %tobool1 = icmp ne i32 %3, 0, !dbg !7781
  br i1 %tobool1, label %if.then2, label %if.end3, !dbg !7783

if.then2:                                         ; preds = %if.end
  %4 = load i32, i32* %err, align 4, !dbg !7784
  %conv = sext i32 %4 to i64, !dbg !7784
  store i64 %conv, i64* %retval, align 8, !dbg !7785
  br label %return, !dbg !7785

if.end3:                                          ; preds = %if.end
  %5 = load i32, i32* %value, align 4, !dbg !7786
  %cmp = icmp ugt i32 %5, 1, !dbg !7788
  br i1 %cmp, label %if.then5, label %if.end6, !dbg !7789

if.then5:                                         ; preds = %if.end3
  store i64 -22, i64* %retval, align 8, !dbg !7790
  br label %return, !dbg !7790

if.end6:                                          ; preds = %if.end3
  %6 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !7791
  %softrepeat = getelementptr inbounds %struct.atkbd, %struct.atkbd* %6, i32 0, i32 11, !dbg !7793
  %7 = load i8, i8* %softrepeat, align 4, !dbg !7793
  %tobool7 = trunc i8 %7 to i1, !dbg !7793
  %conv8 = zext i1 %tobool7 to i32, !dbg !7791
  %8 = load i32, i32* %value, align 4, !dbg !7794
  %cmp9 = icmp ne i32 %conv8, %8, !dbg !7795
  br i1 %cmp9, label %if.then11, label %if.end42, !dbg !7796

if.then11:                                        ; preds = %if.end6
  %9 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !7797
  %dev = getelementptr inbounds %struct.atkbd, %struct.atkbd* %9, i32 0, i32 1, !dbg !7799
  %10 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !7799
  store %struct.input_dev* %10, %struct.input_dev** %old_dev, align 8, !dbg !7800
  %11 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !7801
  %softrepeat12 = getelementptr inbounds %struct.atkbd, %struct.atkbd* %11, i32 0, i32 11, !dbg !7802
  %12 = load i8, i8* %softrepeat12, align 4, !dbg !7802
  %tobool13 = trunc i8 %12 to i1, !dbg !7802
  %frombool = zext i1 %tobool13 to i8, !dbg !7803
  store i8 %frombool, i8* %old_softrepeat, align 1, !dbg !7803
  %13 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !7804
  %softraw = getelementptr inbounds %struct.atkbd, %struct.atkbd* %13, i32 0, i32 12, !dbg !7805
  %14 = load i8, i8* %softraw, align 1, !dbg !7805
  %tobool14 = trunc i8 %14 to i1, !dbg !7805
  %frombool15 = zext i1 %tobool14 to i8, !dbg !7806
  store i8 %frombool15, i8* %old_softraw, align 1, !dbg !7806
  %call16 = call %struct.input_dev* @input_allocate_device() #11, !dbg !7807
  store %struct.input_dev* %call16, %struct.input_dev** %new_dev, align 8, !dbg !7808
  %15 = load %struct.input_dev*, %struct.input_dev** %new_dev, align 8, !dbg !7809
  %tobool17 = icmp ne %struct.input_dev* %15, null, !dbg !7809
  br i1 %tobool17, label %if.end19, label %if.then18, !dbg !7811

if.then18:                                        ; preds = %if.then11
  store i64 -12, i64* %retval, align 8, !dbg !7812
  br label %return, !dbg !7812

if.end19:                                         ; preds = %if.then11
  %16 = load %struct.input_dev*, %struct.input_dev** %new_dev, align 8, !dbg !7813
  %17 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !7814
  %dev20 = getelementptr inbounds %struct.atkbd, %struct.atkbd* %17, i32 0, i32 1, !dbg !7815
  store %struct.input_dev* %16, %struct.input_dev** %dev20, align 8, !dbg !7816
  %18 = load i32, i32* %value, align 4, !dbg !7817
  %tobool21 = icmp ne i32 %18, 0, !dbg !7817
  %19 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !7818
  %softrepeat22 = getelementptr inbounds %struct.atkbd, %struct.atkbd* %19, i32 0, i32 11, !dbg !7819
  %frombool23 = zext i1 %tobool21 to i8, !dbg !7820
  store i8 %frombool23, i8* %softrepeat22, align 4, !dbg !7820
  %20 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !7821
  %softrepeat24 = getelementptr inbounds %struct.atkbd, %struct.atkbd* %20, i32 0, i32 11, !dbg !7823
  %21 = load i8, i8* %softrepeat24, align 4, !dbg !7823
  %tobool25 = trunc i8 %21 to i1, !dbg !7823
  br i1 %tobool25, label %if.then26, label %if.end28, !dbg !7824

if.then26:                                        ; preds = %if.end19
  %22 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !7825
  %softraw27 = getelementptr inbounds %struct.atkbd, %struct.atkbd* %22, i32 0, i32 12, !dbg !7826
  store i8 1, i8* %softraw27, align 1, !dbg !7827
  br label %if.end28, !dbg !7825

if.end28:                                         ; preds = %if.then26, %if.end19
  %23 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !7828
  call void @atkbd_set_device_attrs(%struct.atkbd* %23) #11, !dbg !7829
  %24 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !7830
  %dev29 = getelementptr inbounds %struct.atkbd, %struct.atkbd* %24, i32 0, i32 1, !dbg !7831
  %25 = load %struct.input_dev*, %struct.input_dev** %dev29, align 8, !dbg !7831
  %call30 = call i32 @input_register_device(%struct.input_dev* %25) #11, !dbg !7832
  store i32 %call30, i32* %err, align 4, !dbg !7833
  %26 = load i32, i32* %err, align 4, !dbg !7834
  %tobool31 = icmp ne i32 %26, 0, !dbg !7834
  br i1 %tobool31, label %if.then32, label %if.end41, !dbg !7836

if.then32:                                        ; preds = %if.end28
  %27 = load %struct.input_dev*, %struct.input_dev** %new_dev, align 8, !dbg !7837
  call void @input_free_device(%struct.input_dev* %27) #11, !dbg !7839
  %28 = load %struct.input_dev*, %struct.input_dev** %old_dev, align 8, !dbg !7840
  %29 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !7841
  %dev33 = getelementptr inbounds %struct.atkbd, %struct.atkbd* %29, i32 0, i32 1, !dbg !7842
  store %struct.input_dev* %28, %struct.input_dev** %dev33, align 8, !dbg !7843
  %30 = load i8, i8* %old_softrepeat, align 1, !dbg !7844
  %tobool34 = trunc i8 %30 to i1, !dbg !7844
  %31 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !7845
  %softrepeat35 = getelementptr inbounds %struct.atkbd, %struct.atkbd* %31, i32 0, i32 11, !dbg !7846
  %frombool36 = zext i1 %tobool34 to i8, !dbg !7847
  store i8 %frombool36, i8* %softrepeat35, align 4, !dbg !7847
  %32 = load i8, i8* %old_softraw, align 1, !dbg !7848
  %tobool37 = trunc i8 %32 to i1, !dbg !7848
  %33 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !7849
  %softraw38 = getelementptr inbounds %struct.atkbd, %struct.atkbd* %33, i32 0, i32 12, !dbg !7850
  %frombool39 = zext i1 %tobool37 to i8, !dbg !7851
  store i8 %frombool39, i8* %softraw38, align 1, !dbg !7851
  %34 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !7852
  call void @atkbd_set_device_attrs(%struct.atkbd* %34) #11, !dbg !7853
  %35 = load i32, i32* %err, align 4, !dbg !7854
  %conv40 = sext i32 %35 to i64, !dbg !7854
  store i64 %conv40, i64* %retval, align 8, !dbg !7855
  br label %return, !dbg !7855

if.end41:                                         ; preds = %if.end28
  %36 = load %struct.input_dev*, %struct.input_dev** %old_dev, align 8, !dbg !7856
  call void @input_unregister_device(%struct.input_dev* %36) #11, !dbg !7857
  br label %if.end42, !dbg !7858

if.end42:                                         ; preds = %if.end41, %if.end6
  %37 = load i64, i64* %count.addr, align 8, !dbg !7859
  store i64 %37, i64* %retval, align 8, !dbg !7860
  br label %return, !dbg !7860

return:                                           ; preds = %if.end42, %if.then32, %if.then18, %if.then5, %if.then2, %if.then
  %38 = load i64, i64* %retval, align 8, !dbg !7861
  ret i64 %38, !dbg !7861
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @atkbd_do_show_softraw(%struct.device* %d, %struct.device_attribute* %attr, i8* %b) #2 !dbg !7862 {
entry:
  %d.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %b.addr = alloca i8*, align 8
  store %struct.device* %d, %struct.device** %d.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %d.addr, metadata !7863, metadata !DIExpression()), !dbg !7864
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !7865, metadata !DIExpression()), !dbg !7864
  store i8* %b, i8** %b.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !7866, metadata !DIExpression()), !dbg !7864
  %0 = load %struct.device*, %struct.device** %d.addr, align 8, !dbg !7864
  %1 = load i8*, i8** %b.addr, align 8, !dbg !7864
  %call = call i64 @atkbd_attr_show_helper(%struct.device* %0, i8* %1, i64 (%struct.atkbd*, i8*)* @atkbd_show_softraw) #11, !dbg !7864
  ret i64 %call, !dbg !7864
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @atkbd_do_set_softraw(%struct.device* %d, %struct.device_attribute* %attr, i8* %b, i64 %s) #2 !dbg !7867 {
entry:
  %d.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %b.addr = alloca i8*, align 8
  %s.addr = alloca i64, align 8
  store %struct.device* %d, %struct.device** %d.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %d.addr, metadata !7868, metadata !DIExpression()), !dbg !7869
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !7870, metadata !DIExpression()), !dbg !7869
  store i8* %b, i8** %b.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !7871, metadata !DIExpression()), !dbg !7869
  store i64 %s, i64* %s.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %s.addr, metadata !7872, metadata !DIExpression()), !dbg !7869
  %0 = load %struct.device*, %struct.device** %d.addr, align 8, !dbg !7869
  %1 = load i8*, i8** %b.addr, align 8, !dbg !7869
  %2 = load i64, i64* %s.addr, align 8, !dbg !7869
  %call = call i64 @atkbd_attr_set_helper(%struct.device* %0, i8* %1, i64 %2, i64 (%struct.atkbd*, i8*, i64)* @atkbd_set_softraw) #11, !dbg !7869
  ret i64 %call, !dbg !7869
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @atkbd_show_softraw(%struct.atkbd* %atkbd, i8* %buf) #2 !dbg !7873 {
entry:
  %atkbd.addr = alloca %struct.atkbd*, align 8
  %buf.addr = alloca i8*, align 8
  store %struct.atkbd* %atkbd, %struct.atkbd** %atkbd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.atkbd** %atkbd.addr, metadata !7874, metadata !DIExpression()), !dbg !7875
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !7876, metadata !DIExpression()), !dbg !7877
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !7878
  %1 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !7879
  %softraw = getelementptr inbounds %struct.atkbd, %struct.atkbd* %1, i32 0, i32 12, !dbg !7880
  %2 = load i8, i8* %softraw, align 1, !dbg !7880
  %tobool = trunc i8 %2 to i1, !dbg !7880
  %3 = zext i1 %tobool to i64, !dbg !7879
  %cond = select i1 %tobool, i32 1, i32 0, !dbg !7879
  %call = call i32 (i8*, i8*, ...) @sprintf(i8* %0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.32, i64 0, i64 0), i32 %cond) #11, !dbg !7881
  %conv = sext i32 %call to i64, !dbg !7881
  ret i64 %conv, !dbg !7882
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @atkbd_set_softraw(%struct.atkbd* %atkbd, i8* %buf, i64 %count) #2 !dbg !7883 {
entry:
  %retval = alloca i64, align 8
  %atkbd.addr = alloca %struct.atkbd*, align 8
  %buf.addr = alloca i8*, align 8
  %count.addr = alloca i64, align 8
  %old_dev = alloca %struct.input_dev*, align 8
  %new_dev = alloca %struct.input_dev*, align 8
  %value = alloca i32, align 4
  %err = alloca i32, align 4
  %old_softraw = alloca i8, align 1
  store %struct.atkbd* %atkbd, %struct.atkbd** %atkbd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.atkbd** %atkbd.addr, metadata !7884, metadata !DIExpression()), !dbg !7885
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !7886, metadata !DIExpression()), !dbg !7887
  store i64 %count, i64* %count.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !7888, metadata !DIExpression()), !dbg !7889
  call void @llvm.dbg.declare(metadata %struct.input_dev** %old_dev, metadata !7890, metadata !DIExpression()), !dbg !7891
  call void @llvm.dbg.declare(metadata %struct.input_dev** %new_dev, metadata !7892, metadata !DIExpression()), !dbg !7893
  call void @llvm.dbg.declare(metadata i32* %value, metadata !7894, metadata !DIExpression()), !dbg !7895
  call void @llvm.dbg.declare(metadata i32* %err, metadata !7896, metadata !DIExpression()), !dbg !7897
  call void @llvm.dbg.declare(metadata i8* %old_softraw, metadata !7898, metadata !DIExpression()), !dbg !7899
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !7900
  %call = call i32 @kstrtouint(i8* %0, i32 10, i32* %value) #11, !dbg !7901
  store i32 %call, i32* %err, align 4, !dbg !7902
  %1 = load i32, i32* %err, align 4, !dbg !7903
  %tobool = icmp ne i32 %1, 0, !dbg !7903
  br i1 %tobool, label %if.then, label %if.end, !dbg !7905

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %err, align 4, !dbg !7906
  %conv = sext i32 %2 to i64, !dbg !7906
  store i64 %conv, i64* %retval, align 8, !dbg !7907
  br label %return, !dbg !7907

if.end:                                           ; preds = %entry
  %3 = load i32, i32* %value, align 4, !dbg !7908
  %cmp = icmp ugt i32 %3, 1, !dbg !7910
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !7911

if.then2:                                         ; preds = %if.end
  store i64 -22, i64* %retval, align 8, !dbg !7912
  br label %return, !dbg !7912

if.end3:                                          ; preds = %if.end
  %4 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !7913
  %softraw = getelementptr inbounds %struct.atkbd, %struct.atkbd* %4, i32 0, i32 12, !dbg !7915
  %5 = load i8, i8* %softraw, align 1, !dbg !7915
  %tobool4 = trunc i8 %5 to i1, !dbg !7915
  %conv5 = zext i1 %tobool4 to i32, !dbg !7913
  %6 = load i32, i32* %value, align 4, !dbg !7916
  %cmp6 = icmp ne i32 %conv5, %6, !dbg !7917
  br i1 %cmp6, label %if.then8, label %if.end29, !dbg !7918

if.then8:                                         ; preds = %if.end3
  %7 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !7919
  %dev = getelementptr inbounds %struct.atkbd, %struct.atkbd* %7, i32 0, i32 1, !dbg !7921
  %8 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !7921
  store %struct.input_dev* %8, %struct.input_dev** %old_dev, align 8, !dbg !7922
  %9 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !7923
  %softraw9 = getelementptr inbounds %struct.atkbd, %struct.atkbd* %9, i32 0, i32 12, !dbg !7924
  %10 = load i8, i8* %softraw9, align 1, !dbg !7924
  %tobool10 = trunc i8 %10 to i1, !dbg !7924
  %frombool = zext i1 %tobool10 to i8, !dbg !7925
  store i8 %frombool, i8* %old_softraw, align 1, !dbg !7925
  %call11 = call %struct.input_dev* @input_allocate_device() #11, !dbg !7926
  store %struct.input_dev* %call11, %struct.input_dev** %new_dev, align 8, !dbg !7927
  %11 = load %struct.input_dev*, %struct.input_dev** %new_dev, align 8, !dbg !7928
  %tobool12 = icmp ne %struct.input_dev* %11, null, !dbg !7928
  br i1 %tobool12, label %if.end14, label %if.then13, !dbg !7930

if.then13:                                        ; preds = %if.then8
  store i64 -12, i64* %retval, align 8, !dbg !7931
  br label %return, !dbg !7931

if.end14:                                         ; preds = %if.then8
  %12 = load %struct.input_dev*, %struct.input_dev** %new_dev, align 8, !dbg !7932
  %13 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !7933
  %dev15 = getelementptr inbounds %struct.atkbd, %struct.atkbd* %13, i32 0, i32 1, !dbg !7934
  store %struct.input_dev* %12, %struct.input_dev** %dev15, align 8, !dbg !7935
  %14 = load i32, i32* %value, align 4, !dbg !7936
  %tobool16 = icmp ne i32 %14, 0, !dbg !7936
  %15 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !7937
  %softraw17 = getelementptr inbounds %struct.atkbd, %struct.atkbd* %15, i32 0, i32 12, !dbg !7938
  %frombool18 = zext i1 %tobool16 to i8, !dbg !7939
  store i8 %frombool18, i8* %softraw17, align 1, !dbg !7939
  %16 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !7940
  call void @atkbd_set_device_attrs(%struct.atkbd* %16) #11, !dbg !7941
  %17 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !7942
  %dev19 = getelementptr inbounds %struct.atkbd, %struct.atkbd* %17, i32 0, i32 1, !dbg !7943
  %18 = load %struct.input_dev*, %struct.input_dev** %dev19, align 8, !dbg !7943
  %call20 = call i32 @input_register_device(%struct.input_dev* %18) #11, !dbg !7944
  store i32 %call20, i32* %err, align 4, !dbg !7945
  %19 = load i32, i32* %err, align 4, !dbg !7946
  %tobool21 = icmp ne i32 %19, 0, !dbg !7946
  br i1 %tobool21, label %if.then22, label %if.end28, !dbg !7948

if.then22:                                        ; preds = %if.end14
  %20 = load %struct.input_dev*, %struct.input_dev** %new_dev, align 8, !dbg !7949
  call void @input_free_device(%struct.input_dev* %20) #11, !dbg !7951
  %21 = load %struct.input_dev*, %struct.input_dev** %old_dev, align 8, !dbg !7952
  %22 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !7953
  %dev23 = getelementptr inbounds %struct.atkbd, %struct.atkbd* %22, i32 0, i32 1, !dbg !7954
  store %struct.input_dev* %21, %struct.input_dev** %dev23, align 8, !dbg !7955
  %23 = load i8, i8* %old_softraw, align 1, !dbg !7956
  %tobool24 = trunc i8 %23 to i1, !dbg !7956
  %24 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !7957
  %softraw25 = getelementptr inbounds %struct.atkbd, %struct.atkbd* %24, i32 0, i32 12, !dbg !7958
  %frombool26 = zext i1 %tobool24 to i8, !dbg !7959
  store i8 %frombool26, i8* %softraw25, align 1, !dbg !7959
  %25 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !7960
  call void @atkbd_set_device_attrs(%struct.atkbd* %25) #11, !dbg !7961
  %26 = load i32, i32* %err, align 4, !dbg !7962
  %conv27 = sext i32 %26 to i64, !dbg !7962
  store i64 %conv27, i64* %retval, align 8, !dbg !7963
  br label %return, !dbg !7963

if.end28:                                         ; preds = %if.end14
  %27 = load %struct.input_dev*, %struct.input_dev** %old_dev, align 8, !dbg !7964
  call void @input_unregister_device(%struct.input_dev* %27) #11, !dbg !7965
  br label %if.end29, !dbg !7966

if.end29:                                         ; preds = %if.end28, %if.end3
  %28 = load i64, i64* %count.addr, align 8, !dbg !7967
  store i64 %28, i64* %retval, align 8, !dbg !7968
  br label %return, !dbg !7968

return:                                           ; preds = %if.end29, %if.then22, %if.then13, %if.then2, %if.then
  %29 = load i64, i64* %retval, align 8, !dbg !7969
  ret i64 %29, !dbg !7969
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @atkbd_do_show_err_count(%struct.device* %d, %struct.device_attribute* %attr, i8* %b) #2 !dbg !7970 {
entry:
  %d.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %b.addr = alloca i8*, align 8
  store %struct.device* %d, %struct.device** %d.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %d.addr, metadata !7971, metadata !DIExpression()), !dbg !7972
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !7973, metadata !DIExpression()), !dbg !7972
  store i8* %b, i8** %b.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !7974, metadata !DIExpression()), !dbg !7972
  %0 = load %struct.device*, %struct.device** %d.addr, align 8, !dbg !7972
  %1 = load i8*, i8** %b.addr, align 8, !dbg !7972
  %call = call i64 @atkbd_attr_show_helper(%struct.device* %0, i8* %1, i64 (%struct.atkbd*, i8*)* @atkbd_show_err_count) #11, !dbg !7972
  ret i64 %call, !dbg !7972
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @atkbd_show_err_count(%struct.atkbd* %atkbd, i8* %buf) #2 !dbg !7975 {
entry:
  %atkbd.addr = alloca %struct.atkbd*, align 8
  %buf.addr = alloca i8*, align 8
  store %struct.atkbd* %atkbd, %struct.atkbd** %atkbd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.atkbd** %atkbd.addr, metadata !7976, metadata !DIExpression()), !dbg !7977
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !7978, metadata !DIExpression()), !dbg !7979
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !7980
  %1 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !7981
  %err_count = getelementptr inbounds %struct.atkbd, %struct.atkbd* %1, i32 0, i32 21, !dbg !7982
  %2 = load i64, i64* %err_count, align 8, !dbg !7982
  %call = call i32 (i8*, i8*, ...) @sprintf(i8* %0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.40, i64 0, i64 0), i64 %2) #11, !dbg !7983
  %conv = sext i32 %call to i64, !dbg !7983
  ret i64 %conv, !dbg !7984
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @cancel_delayed_work_sync(%struct.delayed_work*) #1

; Function Attrs: noredzone
declare dso_local i32 @dmi_check_system(%struct.dmi_system_id*) #1

; Function Attrs: noredzone
declare dso_local i32 @__serio_register_driver(%struct.serio_driver*, %struct.module*, i8*) #1

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal i32 @atkbd_setup_forced_release(%struct.dmi_system_id* %id) #0 section ".init.text" !dbg !7985 {
entry:
  %id.addr = alloca %struct.dmi_system_id*, align 8
  store %struct.dmi_system_id* %id, %struct.dmi_system_id** %id.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dmi_system_id** %id.addr, metadata !7986, metadata !DIExpression()), !dbg !7987
  store void (%struct.atkbd*, i8*)* @atkbd_apply_forced_release_keylist, void (%struct.atkbd*, i8*)** @atkbd_platform_fixup, align 8, !dbg !7988
  %0 = load %struct.dmi_system_id*, %struct.dmi_system_id** %id.addr, align 8, !dbg !7989
  %driver_data = getelementptr inbounds %struct.dmi_system_id, %struct.dmi_system_id* %0, i32 0, i32 3, !dbg !7990
  %1 = load i8*, i8** %driver_data, align 8, !dbg !7990
  store i8* %1, i8** @atkbd_platform_fixup_data, align 8, !dbg !7991
  ret i32 1, !dbg !7992
}

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal i32 @atkbd_setup_scancode_fixup(%struct.dmi_system_id* %id) #0 section ".init.text" !dbg !7993 {
entry:
  %id.addr = alloca %struct.dmi_system_id*, align 8
  store %struct.dmi_system_id* %id, %struct.dmi_system_id** %id.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dmi_system_id** %id.addr, metadata !7994, metadata !DIExpression()), !dbg !7995
  %0 = load %struct.dmi_system_id*, %struct.dmi_system_id** %id.addr, align 8, !dbg !7996
  %driver_data = getelementptr inbounds %struct.dmi_system_id, %struct.dmi_system_id* %0, i32 0, i32 3, !dbg !7997
  %1 = load i8*, i8** %driver_data, align 8, !dbg !7997
  %2 = bitcast i8* %1 to i32 (%struct.atkbd*, i32)*, !dbg !7996
  store i32 (%struct.atkbd*, i32)* %2, i32 (%struct.atkbd*, i32)** @atkbd_platform_scancode_fixup, align 8, !dbg !7998
  ret i32 1, !dbg !7999
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @atkbd_oqo_01plus_scancode_fixup(%struct.atkbd* %atkbd, i32 %code) #2 !dbg !8000 {
entry:
  %atkbd.addr = alloca %struct.atkbd*, align 8
  %code.addr = alloca i32, align 4
  store %struct.atkbd* %atkbd, %struct.atkbd** %atkbd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.atkbd** %atkbd.addr, metadata !8001, metadata !DIExpression()), !dbg !8002
  store i32 %code, i32* %code.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %code.addr, metadata !8003, metadata !DIExpression()), !dbg !8004
  %0 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !8005
  %translated = getelementptr inbounds %struct.atkbd, %struct.atkbd* %0, i32 0, i32 8, !dbg !8007
  %1 = load i8, i8* %translated, align 1, !dbg !8007
  %tobool = trunc i8 %1 to i1, !dbg !8007
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !8008

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !8009
  %emul = getelementptr inbounds %struct.atkbd, %struct.atkbd* %2, i32 0, i32 15, !dbg !8010
  %3 = load i8, i8* %emul, align 8, !dbg !8010
  %conv = zext i8 %3 to i32, !dbg !8009
  %cmp = icmp eq i32 %conv, 1, !dbg !8011
  br i1 %cmp, label %land.lhs.true2, label %if.end, !dbg !8012

land.lhs.true2:                                   ; preds = %land.lhs.true
  %4 = load i32, i32* %code.addr, align 4, !dbg !8013
  %cmp3 = icmp eq i32 %4, 100, !dbg !8014
  br i1 %cmp3, label %if.then, label %lor.lhs.false, !dbg !8015

lor.lhs.false:                                    ; preds = %land.lhs.true2
  %5 = load i32, i32* %code.addr, align 4, !dbg !8016
  %cmp5 = icmp eq i32 %5, 101, !dbg !8017
  br i1 %cmp5, label %if.then, label %lor.lhs.false7, !dbg !8018

lor.lhs.false7:                                   ; preds = %lor.lhs.false
  %6 = load i32, i32* %code.addr, align 4, !dbg !8019
  %cmp8 = icmp eq i32 %6, 102, !dbg !8020
  br i1 %cmp8, label %if.then, label %if.end, !dbg !8021

if.then:                                          ; preds = %lor.lhs.false7, %lor.lhs.false, %land.lhs.true2
  %7 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !8022
  %emul10 = getelementptr inbounds %struct.atkbd, %struct.atkbd* %7, i32 0, i32 15, !dbg !8024
  store i8 0, i8* %emul10, align 8, !dbg !8025
  %8 = load i32, i32* %code.addr, align 4, !dbg !8026
  %or = or i32 %8, 128, !dbg !8026
  store i32 %or, i32* %code.addr, align 4, !dbg !8026
  br label %if.end, !dbg !8027

if.end:                                           ; preds = %if.then, %lor.lhs.false7, %land.lhs.true, %entry
  %9 = load i32, i32* %code.addr, align 4, !dbg !8028
  ret i32 %9, !dbg !8029
}

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal i32 @atkbd_deactivate_fixup(%struct.dmi_system_id* %id) #0 section ".init.text" !dbg !8030 {
entry:
  %id.addr = alloca %struct.dmi_system_id*, align 8
  store %struct.dmi_system_id* %id, %struct.dmi_system_id** %id.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dmi_system_id** %id.addr, metadata !8031, metadata !DIExpression()), !dbg !8032
  store i8 1, i8* @atkbd_skip_deactivate, align 1, !dbg !8033
  ret i32 1, !dbg !8034
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @atkbd_apply_forced_release_keylist(%struct.atkbd* %atkbd, i8* %data) #2 !dbg !8035 {
entry:
  %atkbd.addr = alloca %struct.atkbd*, align 8
  %data.addr = alloca i8*, align 8
  %keys = alloca i32*, align 8
  %i = alloca i32, align 4
  store %struct.atkbd* %atkbd, %struct.atkbd** %atkbd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.atkbd** %atkbd.addr, metadata !8036, metadata !DIExpression()), !dbg !8037
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !8038, metadata !DIExpression()), !dbg !8039
  call void @llvm.dbg.declare(metadata i32** %keys, metadata !8040, metadata !DIExpression()), !dbg !8042
  %0 = load i8*, i8** %data.addr, align 8, !dbg !8043
  %1 = bitcast i8* %0 to i32*, !dbg !8043
  store i32* %1, i32** %keys, align 8, !dbg !8042
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8044, metadata !DIExpression()), !dbg !8045
  %2 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !8046
  %set = getelementptr inbounds %struct.atkbd, %struct.atkbd* %2, i32 0, i32 7, !dbg !8048
  %3 = load i8, i8* %set, align 8, !dbg !8048
  %conv = zext i8 %3 to i32, !dbg !8046
  %cmp = icmp eq i32 %conv, 2, !dbg !8049
  br i1 %cmp, label %if.then, label %if.end, !dbg !8050

if.then:                                          ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !8051
  br label %for.cond, !dbg !8053

for.cond:                                         ; preds = %for.inc, %if.then
  %4 = load i32*, i32** %keys, align 8, !dbg !8054
  %5 = load i32, i32* %i, align 4, !dbg !8056
  %idxprom = zext i32 %5 to i64, !dbg !8054
  %arrayidx = getelementptr i32, i32* %4, i64 %idxprom, !dbg !8054
  %6 = load i32, i32* %arrayidx, align 4, !dbg !8054
  %cmp2 = icmp ne i32 %6, -1, !dbg !8057
  br i1 %cmp2, label %for.body, label %for.end, !dbg !8058

for.body:                                         ; preds = %for.cond
  %7 = load i32*, i32** %keys, align 8, !dbg !8059
  %8 = load i32, i32* %i, align 4, !dbg !8060
  %idxprom4 = zext i32 %8 to i64, !dbg !8059
  %arrayidx5 = getelementptr i32, i32* %7, i64 %idxprom4, !dbg !8059
  %9 = load i32, i32* %arrayidx5, align 4, !dbg !8059
  %conv6 = zext i32 %9 to i64, !dbg !8059
  %10 = load %struct.atkbd*, %struct.atkbd** %atkbd.addr, align 8, !dbg !8061
  %force_release_mask = getelementptr inbounds %struct.atkbd, %struct.atkbd* %10, i32 0, i32 6, !dbg !8062
  %arraydecay = getelementptr inbounds [8 x i64], [8 x i64]* %force_release_mask, i64 0, i64 0, !dbg !8061
  call void @__set_bit(i64 %conv6, i64* %arraydecay) #11, !dbg !8063
  br label %for.inc, !dbg !8063

for.inc:                                          ; preds = %for.body
  %11 = load i32, i32* %i, align 4, !dbg !8064
  %inc = add i32 %11, 1, !dbg !8064
  store i32 %inc, i32* %i, align 4, !dbg !8064
  br label %for.cond, !dbg !8065, !llvm.loop !8066

for.end:                                          ; preds = %for.cond
  br label %if.end, !dbg !8067

if.end:                                           ; preds = %for.end, %entry
  ret void, !dbg !8068
}

attributes #0 = { cold noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone speculatable willreturn }
attributes #4 = { cold noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone willreturn }
attributes #6 = { argmemonly nounwind willreturn }
attributes #7 = { nounwind willreturn }
attributes #8 = { noinline noredzone nounwind optnone readnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readonly }
attributes #10 = { nounwind }
attributes #11 = { noredzone }
attributes #12 = { cold noredzone }
attributes #13 = { noredzone nounwind }
attributes #14 = { noredzone nounwind readnone }

!llvm.dbg.cu = !{!2}
!llvm.named.register.rsp = !{!4317}
!llvm.module.flags = !{!4318, !4319, !4320, !4321}
!llvm.ident = !{!4322}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_author204", scope: !2, file: !3, line: 31, type: !4002, isLocal: true, isDefinition: true, align: 8)
!2 = distinct !DICompileUnit(language: DW_LANG_C89, file: !3, producer: "clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !131, globals: !3999, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "drivers/input/keyboard/atkbd.c", directory: "/home/lizy2001/genbc/linux")
!4 = !{!5, !13, !18, !24, !30, !39, !47, !53, !59, !66, !74, !80, !86, !91, !124}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "migrate_mode", file: !6, line: 15, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./include/linux/migrate_mode.h", directory: "/home/lizy2001/genbc/linux")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12}
!9 = !DIEnumerator(name: "MIGRATE_ASYNC", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "MIGRATE_SYNC_LIGHT", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "MIGRATE_SYNC", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "MIGRATE_SYNC_NO_COPY", value: 3, isUnsigned: true)
!13 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "hrtimer_restart", file: !14, line: 65, baseType: !7, size: 32, elements: !15)
!14 = !DIFile(filename: "./include/linux/hrtimer.h", directory: "/home/lizy2001/genbc/linux")
!15 = !{!16, !17}
!16 = !DIEnumerator(name: "HRTIMER_NORESTART", value: 0, isUnsigned: true)
!17 = !DIEnumerator(name: "HRTIMER_RESTART", value: 1, isUnsigned: true)
!18 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "timespec_type", file: !19, line: 16, baseType: !7, size: 32, elements: !20)
!19 = !DIFile(filename: "./include/linux/restart_block.h", directory: "/home/lizy2001/genbc/linux")
!20 = !{!21, !22, !23}
!21 = !DIEnumerator(name: "TT_NONE", value: 0, isUnsigned: true)
!22 = !DIEnumerator(name: "TT_NATIVE", value: 1, isUnsigned: true)
!23 = !DIEnumerator(name: "TT_COMPAT", value: 2, isUnsigned: true)
!24 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "quota_type", file: !25, line: 54, baseType: !7, size: 32, elements: !26)
!25 = !DIFile(filename: "./include/linux/quota.h", directory: "/home/lizy2001/genbc/linux")
!26 = !{!27, !28, !29}
!27 = !DIEnumerator(name: "USRQUOTA", value: 0, isUnsigned: true)
!28 = !DIEnumerator(name: "GRPQUOTA", value: 1, isUnsigned: true)
!29 = !DIEnumerator(name: "PRJQUOTA", value: 2, isUnsigned: true)
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rw_hint", file: !31, line: 296, baseType: !7, size: 32, elements: !32)
!31 = !DIFile(filename: "./include/linux/fs.h", directory: "/home/lizy2001/genbc/linux")
!32 = !{!33, !34, !35, !36, !37, !38}
!33 = !DIEnumerator(name: "WRITE_LIFE_NOT_SET", value: 0, isUnsigned: true)
!34 = !DIEnumerator(name: "WRITE_LIFE_NONE", value: 1, isUnsigned: true)
!35 = !DIEnumerator(name: "WRITE_LIFE_SHORT", value: 2, isUnsigned: true)
!36 = !DIEnumerator(name: "WRITE_LIFE_MEDIUM", value: 3, isUnsigned: true)
!37 = !DIEnumerator(name: "WRITE_LIFE_LONG", value: 4, isUnsigned: true)
!38 = !DIEnumerator(name: "WRITE_LIFE_EXTREME", value: 5, isUnsigned: true)
!39 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pid_type", file: !40, line: 9, baseType: !7, size: 32, elements: !41)
!40 = !DIFile(filename: "./include/linux/pid.h", directory: "/home/lizy2001/genbc/linux")
!41 = !{!42, !43, !44, !45, !46}
!42 = !DIEnumerator(name: "PIDTYPE_PID", value: 0, isUnsigned: true)
!43 = !DIEnumerator(name: "PIDTYPE_TGID", value: 1, isUnsigned: true)
!44 = !DIEnumerator(name: "PIDTYPE_PGID", value: 2, isUnsigned: true)
!45 = !DIEnumerator(name: "PIDTYPE_SID", value: 3, isUnsigned: true)
!46 = !DIEnumerator(name: "PIDTYPE_MAX", value: 4, isUnsigned: true)
!47 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kobj_ns_type", file: !48, line: 26, baseType: !7, size: 32, elements: !49)
!48 = !DIFile(filename: "./include/linux/kobject_ns.h", directory: "/home/lizy2001/genbc/linux")
!49 = !{!50, !51, !52}
!50 = !DIEnumerator(name: "KOBJ_NS_TYPE_NONE", value: 0, isUnsigned: true)
!51 = !DIEnumerator(name: "KOBJ_NS_TYPE_NET", value: 1, isUnsigned: true)
!52 = !DIEnumerator(name: "KOBJ_NS_TYPES", value: 2, isUnsigned: true)
!53 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "probe_type", file: !54, line: 44, baseType: !7, size: 32, elements: !55)
!54 = !DIFile(filename: "./include/linux/device/driver.h", directory: "/home/lizy2001/genbc/linux")
!55 = !{!56, !57, !58}
!56 = !DIEnumerator(name: "PROBE_DEFAULT_STRATEGY", value: 0, isUnsigned: true)
!57 = !DIEnumerator(name: "PROBE_PREFER_ASYNCHRONOUS", value: 1, isUnsigned: true)
!58 = !DIEnumerator(name: "PROBE_FORCE_SYNCHRONOUS", value: 2, isUnsigned: true)
!59 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dl_dev_state", file: !60, line: 343, baseType: !7, size: 32, elements: !61)
!60 = !DIFile(filename: "./include/linux/device.h", directory: "/home/lizy2001/genbc/linux")
!61 = !{!62, !63, !64, !65}
!62 = !DIEnumerator(name: "DL_DEV_NO_DRIVER", value: 0, isUnsigned: true)
!63 = !DIEnumerator(name: "DL_DEV_PROBING", value: 1, isUnsigned: true)
!64 = !DIEnumerator(name: "DL_DEV_DRIVER_BOUND", value: 2, isUnsigned: true)
!65 = !DIEnumerator(name: "DL_DEV_UNBINDING", value: 3, isUnsigned: true)
!66 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_request", file: !67, line: 524, baseType: !7, size: 32, elements: !68)
!67 = !DIFile(filename: "./include/linux/pm.h", directory: "/home/lizy2001/genbc/linux")
!68 = !{!69, !70, !71, !72, !73}
!69 = !DIEnumerator(name: "RPM_REQ_NONE", value: 0, isUnsigned: true)
!70 = !DIEnumerator(name: "RPM_REQ_IDLE", value: 1, isUnsigned: true)
!71 = !DIEnumerator(name: "RPM_REQ_SUSPEND", value: 2, isUnsigned: true)
!72 = !DIEnumerator(name: "RPM_REQ_AUTOSUSPEND", value: 3, isUnsigned: true)
!73 = !DIEnumerator(name: "RPM_REQ_RESUME", value: 4, isUnsigned: true)
!74 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_status", file: !67, line: 502, baseType: !7, size: 32, elements: !75)
!75 = !{!76, !77, !78, !79}
!76 = !DIEnumerator(name: "RPM_ACTIVE", value: 0, isUnsigned: true)
!77 = !DIEnumerator(name: "RPM_RESUMING", value: 1, isUnsigned: true)
!78 = !DIEnumerator(name: "RPM_SUSPENDED", value: 2, isUnsigned: true)
!79 = !DIEnumerator(name: "RPM_SUSPENDING", value: 3, isUnsigned: true)
!80 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "irqreturn", file: !81, line: 11, baseType: !7, size: 32, elements: !82)
!81 = !DIFile(filename: "./include/linux/irqreturn.h", directory: "/home/lizy2001/genbc/linux")
!82 = !{!83, !84, !85}
!83 = !DIEnumerator(name: "IRQ_NONE", value: 0, isUnsigned: true)
!84 = !DIEnumerator(name: "IRQ_HANDLED", value: 1, isUnsigned: true)
!85 = !DIEnumerator(name: "IRQ_WAKE_THREAD", value: 2, isUnsigned: true)
!86 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !87, line: 10, baseType: !7, size: 32, elements: !88)
!87 = !DIFile(filename: "./include/linux/stddef.h", directory: "/home/lizy2001/genbc/linux")
!88 = !{!89, !90}
!89 = !DIEnumerator(name: "false", value: 0, isUnsigned: true)
!90 = !DIEnumerator(name: "true", value: 1, isUnsigned: true)
!91 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !92, line: 30, baseType: !93, size: 64, elements: !94)
!92 = !DIFile(filename: "./include/linux/workqueue.h", directory: "/home/lizy2001/genbc/linux")
!93 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!94 = !{!95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123}
!95 = !DIEnumerator(name: "WORK_STRUCT_PENDING_BIT", value: 0)
!96 = !DIEnumerator(name: "WORK_STRUCT_DELAYED_BIT", value: 1)
!97 = !DIEnumerator(name: "WORK_STRUCT_PWQ_BIT", value: 2)
!98 = !DIEnumerator(name: "WORK_STRUCT_LINKED_BIT", value: 3)
!99 = !DIEnumerator(name: "WORK_STRUCT_COLOR_SHIFT", value: 4)
!100 = !DIEnumerator(name: "WORK_STRUCT_COLOR_BITS", value: 4)
!101 = !DIEnumerator(name: "WORK_STRUCT_PENDING", value: 1)
!102 = !DIEnumerator(name: "WORK_STRUCT_DELAYED", value: 2)
!103 = !DIEnumerator(name: "WORK_STRUCT_PWQ", value: 4)
!104 = !DIEnumerator(name: "WORK_STRUCT_LINKED", value: 8)
!105 = !DIEnumerator(name: "WORK_STRUCT_STATIC", value: 0)
!106 = !DIEnumerator(name: "WORK_NR_COLORS", value: 15)
!107 = !DIEnumerator(name: "WORK_NO_COLOR", value: 15)
!108 = !DIEnumerator(name: "WORK_CPU_UNBOUND", value: 1)
!109 = !DIEnumerator(name: "WORK_STRUCT_FLAG_BITS", value: 8)
!110 = !DIEnumerator(name: "WORK_OFFQ_FLAG_BASE", value: 4)
!111 = !DIEnumerator(name: "__WORK_OFFQ_CANCELING", value: 4)
!112 = !DIEnumerator(name: "WORK_OFFQ_CANCELING", value: 16)
!113 = !DIEnumerator(name: "WORK_OFFQ_FLAG_BITS", value: 1)
!114 = !DIEnumerator(name: "WORK_OFFQ_POOL_SHIFT", value: 5)
!115 = !DIEnumerator(name: "WORK_OFFQ_LEFT", value: 59)
!116 = !DIEnumerator(name: "WORK_OFFQ_POOL_BITS", value: 31)
!117 = !DIEnumerator(name: "WORK_OFFQ_POOL_NONE", value: 2147483647)
!118 = !DIEnumerator(name: "WORK_STRUCT_FLAG_MASK", value: 255)
!119 = !DIEnumerator(name: "WORK_STRUCT_WQ_DATA_MASK", value: -256)
!120 = !DIEnumerator(name: "WORK_STRUCT_NO_POOL", value: 68719476704)
!121 = !DIEnumerator(name: "WORK_BUSY_PENDING", value: 1)
!122 = !DIEnumerator(name: "WORK_BUSY_RUNNING", value: 2)
!123 = !DIEnumerator(name: "WORKER_DESC_LEN", value: 24)
!124 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kmalloc_cache_type", file: !125, line: 305, baseType: !7, size: 32, elements: !126)
!125 = !DIFile(filename: "./include/linux/slab.h", directory: "/home/lizy2001/genbc/linux")
!126 = !{!127, !128, !129, !130}
!127 = !DIEnumerator(name: "KMALLOC_NORMAL", value: 0, isUnsigned: true)
!128 = !DIEnumerator(name: "KMALLOC_RECLAIM", value: 1, isUnsigned: true)
!129 = !DIEnumerator(name: "KMALLOC_DMA", value: 2, isUnsigned: true)
!130 = !DIEnumerator(name: "NR_KMALLOC_TYPES", value: 3, isUnsigned: true)
!131 = !{!93, !132, !133, !135, !137, !136, !139, !140, !147, !3997, !255, !155, !651}
!132 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !134, size: 64)
!134 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !93)
!135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !136, size: 64)
!136 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!137 = !DIDerivedType(tag: DW_TAG_typedef, name: "gfp_t", file: !138, line: 148, baseType: !7)
!138 = !DIFile(filename: "./include/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !141, size: 64)
!141 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !142)
!142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !143, size: 64)
!143 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_head", file: !138, line: 178, size: 128, elements: !144)
!144 = !{!145, !146}
!145 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !143, file: !138, line: 179, baseType: !142, size: 64)
!146 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !143, file: !138, line: 179, baseType: !142, size: 64, offset: 64)
!147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !148, size: 64)
!148 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "atkbd", file: !3, line: 203, size: 12416, elements: !149)
!149 = !{!150, !3681, !3957, !3959, !3960, !3961, !3965, !3967, !3968, !3969, !3970, !3971, !3972, !3973, !3974, !3975, !3976, !3977, !3978, !3979, !3980, !3981, !3982, !3989, !3990, !3991, !3992, !3996}
!150 = !DIDerivedType(tag: DW_TAG_member, name: "ps2dev", scope: !148, file: !3, line: 205, baseType: !151, size: 576)
!151 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ps2dev", file: !152, line: 33, size: 576, elements: !153)
!152 = !DIFile(filename: "./include/linux/libps2.h", directory: "/home/lizy2001/genbc/linux")
!153 = !{!154, !3674, !3675, !3676, !3677, !3679, !3680}
!154 = !DIDerivedType(tag: DW_TAG_member, name: "serio", scope: !151, file: !152, line: 34, baseType: !155, size: 64)
!155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !156, size: 64)
!156 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "serio", file: !157, line: 20, size: 8384, elements: !158)
!157 = !DIFile(filename: "./include/linux/serio.h", directory: "/home/lizy2001/genbc/linux")
!158 = !{!159, !160, !165, !166, !170, !173, !184, !200, !204, !208, !212, !213, !214, !215, !216, !217, !218, !3669, !3670, !3671, !3672}
!159 = !DIDerivedType(tag: DW_TAG_member, name: "port_data", scope: !156, file: !157, line: 21, baseType: !139, size: 64)
!160 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !156, file: !157, line: 23, baseType: !161, size: 256, offset: 64)
!161 = !DICompositeType(tag: DW_TAG_array_type, baseType: !162, size: 256, elements: !163)
!162 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!163 = !{!164}
!164 = !DISubrange(count: 32)
!165 = !DIDerivedType(tag: DW_TAG_member, name: "phys", scope: !156, file: !157, line: 24, baseType: !161, size: 256, offset: 320)
!166 = !DIDerivedType(tag: DW_TAG_member, name: "firmware_id", scope: !156, file: !157, line: 25, baseType: !167, size: 1024, offset: 576)
!167 = !DICompositeType(tag: DW_TAG_array_type, baseType: !162, size: 1024, elements: !168)
!168 = !{!169}
!169 = !DISubrange(count: 128)
!170 = !DIDerivedType(tag: DW_TAG_member, name: "manual_bind", scope: !156, file: !157, line: 27, baseType: !171, size: 8, offset: 1600)
!171 = !DIDerivedType(tag: DW_TAG_typedef, name: "bool", file: !138, line: 30, baseType: !172)
!172 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!173 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !156, file: !157, line: 29, baseType: !174, size: 32, offset: 1608)
!174 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "serio_device_id", file: !175, line: 236, size: 32, elements: !176)
!175 = !DIFile(filename: "./include/linux/mod_devicetable.h", directory: "/home/lizy2001/genbc/linux")
!176 = !{!177, !181, !182, !183}
!177 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !174, file: !175, line: 237, baseType: !178, size: 8)
!178 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u8", file: !179, line: 21, baseType: !180)
!179 = !DIFile(filename: "./include/uapi/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!180 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!181 = !DIDerivedType(tag: DW_TAG_member, name: "extra", scope: !174, file: !175, line: 238, baseType: !178, size: 8, offset: 8)
!182 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !174, file: !175, line: 239, baseType: !178, size: 8, offset: 16)
!183 = !DIDerivedType(tag: DW_TAG_member, name: "proto", scope: !174, file: !175, line: 240, baseType: !178, size: 8, offset: 24)
!184 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !156, file: !157, line: 32, baseType: !185, offset: 1640)
!185 = !DIDerivedType(tag: DW_TAG_typedef, name: "spinlock_t", file: !186, line: 83, baseType: !187)
!186 = !DIFile(filename: "./include/linux/spinlock_types.h", directory: "/home/lizy2001/genbc/linux")
!187 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spinlock", file: !186, line: 71, elements: !188)
!188 = !{!189}
!189 = !DIDerivedType(tag: DW_TAG_member, scope: !187, file: !186, line: 72, baseType: !190)
!190 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !187, file: !186, line: 72, elements: !191)
!191 = !{!192}
!192 = !DIDerivedType(tag: DW_TAG_member, name: "rlock", scope: !190, file: !186, line: 73, baseType: !193)
!193 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raw_spinlock", file: !186, line: 20, elements: !194)
!194 = !{!195}
!195 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !193, file: !186, line: 21, baseType: !196)
!196 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_spinlock_t", file: !197, line: 25, baseType: !198)
!197 = !DIFile(filename: "./include/linux/spinlock_types_up.h", directory: "/home/lizy2001/genbc/linux")
!198 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !197, line: 25, elements: !199)
!199 = !{}
!200 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !156, file: !157, line: 34, baseType: !201, size: 64, offset: 1664)
!201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !202, size: 64)
!202 = !DISubroutineType(types: !203)
!203 = !{!132, !155, !180}
!204 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !156, file: !157, line: 35, baseType: !205, size: 64, offset: 1728)
!205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !206, size: 64)
!206 = !DISubroutineType(types: !207)
!207 = !{!132, !155}
!208 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !156, file: !157, line: 36, baseType: !209, size: 64, offset: 1792)
!209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !210, size: 64)
!210 = !DISubroutineType(types: !211)
!211 = !{null, !155}
!212 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !156, file: !157, line: 37, baseType: !205, size: 64, offset: 1856)
!213 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !156, file: !157, line: 38, baseType: !209, size: 64, offset: 1920)
!214 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !156, file: !157, line: 40, baseType: !155, size: 64, offset: 1984)
!215 = !DIDerivedType(tag: DW_TAG_member, name: "child_node", scope: !156, file: !157, line: 42, baseType: !143, size: 128, offset: 2048)
!216 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !156, file: !157, line: 43, baseType: !143, size: 128, offset: 2176)
!217 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !156, file: !157, line: 45, baseType: !7, size: 32, offset: 2304)
!218 = !DIDerivedType(tag: DW_TAG_member, name: "drv", scope: !156, file: !157, line: 51, baseType: !219, size: 64, offset: 2368)
!219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !220, size: 64)
!220 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "serio_driver", file: !157, line: 67, size: 1792, elements: !221)
!221 = !{!222, !225, !228, !229, !230, !235, !239, !240, !241, !242, !243}
!222 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !220, file: !157, line: 68, baseType: !223, size: 64)
!223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !224, size: 64)
!224 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !162)
!225 = !DIDerivedType(tag: DW_TAG_member, name: "id_table", scope: !220, file: !157, line: 70, baseType: !226, size: 64, offset: 64)
!226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !227, size: 64)
!227 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !174)
!228 = !DIDerivedType(tag: DW_TAG_member, name: "manual_bind", scope: !220, file: !157, line: 71, baseType: !171, size: 8, offset: 128)
!229 = !DIDerivedType(tag: DW_TAG_member, name: "write_wakeup", scope: !220, file: !157, line: 73, baseType: !209, size: 64, offset: 192)
!230 = !DIDerivedType(tag: DW_TAG_member, name: "interrupt", scope: !220, file: !157, line: 74, baseType: !231, size: 64, offset: 256)
!231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !232, size: 64)
!232 = !DISubroutineType(types: !233)
!233 = !{!234, !155, !180, !7}
!234 = !DIDerivedType(tag: DW_TAG_typedef, name: "irqreturn_t", file: !81, line: 17, baseType: !80)
!235 = !DIDerivedType(tag: DW_TAG_member, name: "connect", scope: !220, file: !157, line: 75, baseType: !236, size: 64, offset: 320)
!236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !237, size: 64)
!237 = !DISubroutineType(types: !238)
!238 = !{!132, !155, !219}
!239 = !DIDerivedType(tag: DW_TAG_member, name: "reconnect", scope: !220, file: !157, line: 76, baseType: !205, size: 64, offset: 384)
!240 = !DIDerivedType(tag: DW_TAG_member, name: "fast_reconnect", scope: !220, file: !157, line: 77, baseType: !205, size: 64, offset: 448)
!241 = !DIDerivedType(tag: DW_TAG_member, name: "disconnect", scope: !220, file: !157, line: 78, baseType: !209, size: 64, offset: 512)
!242 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !220, file: !157, line: 79, baseType: !209, size: 64, offset: 576)
!243 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !220, file: !157, line: 81, baseType: !244, size: 1152, offset: 640)
!244 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_driver", file: !54, line: 95, size: 1152, elements: !245)
!245 = !{!246, !247, !3630, !3631, !3632, !3633, !3634, !3643, !3656, !3657, !3658, !3659, !3660, !3661, !3662, !3663, !3664, !3665, !3666}
!246 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !244, file: !54, line: 96, baseType: !223, size: 64)
!247 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !244, file: !54, line: 97, baseType: !248, size: 64, offset: 64)
!248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !249, size: 64)
!249 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bus_type", file: !250, line: 82, size: 1408, elements: !251)
!250 = !DIFile(filename: "./include/linux/device/bus.h", directory: "/home/lizy2001/genbc/linux")
!251 = !{!252, !253, !254, !3601, !3602, !3603, !3604, !3608, !3609, !3610, !3611, !3612, !3613, !3614, !3615, !3619, !3620, !3621, !3622, !3623, !3627, !3628, !3629}
!252 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !249, file: !250, line: 83, baseType: !223, size: 64)
!253 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name", scope: !249, file: !250, line: 84, baseType: !223, size: 64, offset: 64)
!254 = !DIDerivedType(tag: DW_TAG_member, name: "dev_root", scope: !249, file: !250, line: 85, baseType: !255, size: 64, offset: 128)
!255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !256, size: 64)
!256 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !60, line: 461, size: 5568, elements: !257)
!257 = !{!258, !3238, !3239, !3242, !3243, !3294, !3295, !3297, !3298, !3299, !3300, !3309, !3418, !3431, !3434, !3435, !3439, !3441, !3442, !3443, !3447, !3453, !3454, !3457, !3461, !3551, !3552, !3553, !3554, !3555, !3589, !3590, !3591, !3594, !3597, !3598, !3599, !3600}
!258 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !256, file: !60, line: 462, baseType: !259, size: 512)
!259 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobject", file: !260, line: 64, size: 512, elements: !261)
!260 = !DIFile(filename: "./include/linux/kobject.h", directory: "/home/lizy2001/genbc/linux")
!261 = !{!262, !263, !264, !266, !311, !3089, !3228, !3233, !3234, !3235, !3236, !3237}
!262 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !259, file: !260, line: 65, baseType: !223, size: 64)
!263 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !259, file: !260, line: 66, baseType: !143, size: 128, offset: 64)
!264 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !259, file: !260, line: 67, baseType: !265, size: 64, offset: 192)
!265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !259, size: 64)
!266 = !DIDerivedType(tag: DW_TAG_member, name: "kset", scope: !259, file: !260, line: 68, baseType: !267, size: 64, offset: 256)
!267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !268, size: 64)
!268 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset", file: !260, line: 192, size: 704, elements: !269)
!269 = !{!270, !271, !272, !273}
!270 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !268, file: !260, line: 193, baseType: !143, size: 128)
!271 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !268, file: !260, line: 194, baseType: !185, offset: 128)
!272 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !268, file: !260, line: 195, baseType: !259, size: 512, offset: 128)
!273 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_ops", scope: !268, file: !260, line: 196, baseType: !274, size: 64, offset: 640)
!274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !275, size: 64)
!275 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !276)
!276 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset_uevent_ops", file: !260, line: 156, size: 192, elements: !277)
!277 = !{!278, !283, !288}
!278 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !276, file: !260, line: 157, baseType: !279, size: 64)
!279 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !280)
!280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !281, size: 64)
!281 = !DISubroutineType(types: !282)
!282 = !{!132, !267, !265}
!283 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !276, file: !260, line: 158, baseType: !284, size: 64, offset: 64)
!284 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !285)
!285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !286, size: 64)
!286 = !DISubroutineType(types: !287)
!287 = !{!223, !267, !265}
!288 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !276, file: !260, line: 159, baseType: !289, size: 64, offset: 128)
!289 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !290)
!290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !291, size: 64)
!291 = !DISubroutineType(types: !292)
!292 = !{!132, !267, !265, !293}
!293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !294, size: 64)
!294 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_uevent_env", file: !260, line: 148, size: 20736, elements: !295)
!295 = !{!296, !301, !305, !306, !310}
!296 = !DIDerivedType(tag: DW_TAG_member, name: "argv", scope: !294, file: !260, line: 149, baseType: !297, size: 192)
!297 = !DICompositeType(tag: DW_TAG_array_type, baseType: !298, size: 192, elements: !299)
!298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !162, size: 64)
!299 = !{!300}
!300 = !DISubrange(count: 3)
!301 = !DIDerivedType(tag: DW_TAG_member, name: "envp", scope: !294, file: !260, line: 150, baseType: !302, size: 4096, offset: 192)
!302 = !DICompositeType(tag: DW_TAG_array_type, baseType: !298, size: 4096, elements: !303)
!303 = !{!304}
!304 = !DISubrange(count: 64)
!305 = !DIDerivedType(tag: DW_TAG_member, name: "envp_idx", scope: !294, file: !260, line: 151, baseType: !132, size: 32, offset: 4288)
!306 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !294, file: !260, line: 152, baseType: !307, size: 16384, offset: 4320)
!307 = !DICompositeType(tag: DW_TAG_array_type, baseType: !162, size: 16384, elements: !308)
!308 = !{!309}
!309 = !DISubrange(count: 2048)
!310 = !DIDerivedType(tag: DW_TAG_member, name: "buflen", scope: !294, file: !260, line: 153, baseType: !132, size: 32, offset: 20704)
!311 = !DIDerivedType(tag: DW_TAG_member, name: "ktype", scope: !259, file: !260, line: 69, baseType: !312, size: 64, offset: 320)
!312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !313, size: 64)
!313 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_type", file: !260, line: 138, size: 448, elements: !314)
!314 = !{!315, !319, !347, !349, !3049, !3079, !3083}
!315 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !313, file: !260, line: 139, baseType: !316, size: 64)
!316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !317, size: 64)
!317 = !DISubroutineType(types: !318)
!318 = !{null, !265}
!319 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_ops", scope: !313, file: !260, line: 140, baseType: !320, size: 64, offset: 64)
!320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !321, size: 64)
!321 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !322)
!322 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sysfs_ops", file: !323, line: 230, size: 128, elements: !324)
!323 = !DIFile(filename: "./include/linux/sysfs.h", directory: "/home/lizy2001/genbc/linux")
!324 = !{!325, !340}
!325 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !322, file: !323, line: 231, baseType: !326, size: 64)
!326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !327, size: 64)
!327 = !DISubroutineType(types: !328)
!328 = !{!329, !265, !333, !298}
!329 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !138, line: 60, baseType: !330)
!330 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ssize_t", file: !331, line: 73, baseType: !332)
!331 = !DIFile(filename: "./include/uapi/asm-generic/posix_types.h", directory: "/home/lizy2001/genbc/linux")
!332 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_long_t", file: !331, line: 15, baseType: !93)
!333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !334, size: 64)
!334 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute", file: !323, line: 30, size: 128, elements: !335)
!335 = !{!336, !337}
!336 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !334, file: !323, line: 31, baseType: !223, size: 64)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !334, file: !323, line: 32, baseType: !338, size: 16, offset: 64)
!338 = !DIDerivedType(tag: DW_TAG_typedef, name: "umode_t", file: !138, line: 19, baseType: !339)
!339 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!340 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !322, file: !323, line: 232, baseType: !341, size: 64, offset: 64)
!341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !342, size: 64)
!342 = !DISubroutineType(types: !343)
!343 = !{!329, !265, !333, !223, !344}
!344 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !138, line: 55, baseType: !345)
!345 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_size_t", file: !331, line: 72, baseType: !346)
!346 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ulong_t", file: !331, line: 16, baseType: !136)
!347 = !DIDerivedType(tag: DW_TAG_member, name: "default_attrs", scope: !313, file: !260, line: 141, baseType: !348, size: 64, offset: 128)
!348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !333, size: 64)
!349 = !DIDerivedType(tag: DW_TAG_member, name: "default_groups", scope: !313, file: !260, line: 142, baseType: !350, size: 64, offset: 192)
!350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !351, size: 64)
!351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !352, size: 64)
!352 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !353)
!353 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute_group", file: !323, line: 84, size: 320, elements: !354)
!354 = !{!355, !356, !360, !3046, !3047}
!355 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !353, file: !323, line: 85, baseType: !223, size: 64)
!356 = !DIDerivedType(tag: DW_TAG_member, name: "is_visible", scope: !353, file: !323, line: 86, baseType: !357, size: 64, offset: 64)
!357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !358, size: 64)
!358 = !DISubroutineType(types: !359)
!359 = !{!338, !265, !333, !132}
!360 = !DIDerivedType(tag: DW_TAG_member, name: "is_bin_visible", scope: !353, file: !323, line: 88, baseType: !361, size: 64, offset: 128)
!361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !362, size: 64)
!362 = !DISubroutineType(types: !363)
!363 = !{!338, !265, !364, !132}
!364 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !365, size: 64)
!365 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bin_attribute", file: !323, line: 168, size: 448, elements: !366)
!366 = !{!367, !368, !369, !370, !3041, !3042}
!367 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !365, file: !323, line: 169, baseType: !334, size: 128)
!368 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !365, file: !323, line: 170, baseType: !344, size: 64, offset: 128)
!369 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !365, file: !323, line: 171, baseType: !139, size: 64, offset: 192)
!370 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !365, file: !323, line: 172, baseType: !371, size: 64, offset: 256)
!371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !372, size: 64)
!372 = !DISubroutineType(types: !373)
!373 = !{!329, !374, !265, !364, !298, !549, !344}
!374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !375, size: 64)
!375 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file", file: !31, line: 916, size: 1856, align: 32, elements: !376)
!376 = !{!377, !395, !3006, !3007, !3008, !3009, !3010, !3011, !3012, !3013, !3014, !3015, !3024, !3025, !3034, !3035, !3036, !3037, !3038, !3039, !3040}
!377 = !DIDerivedType(tag: DW_TAG_member, name: "f_u", scope: !375, file: !31, line: 920, baseType: !378, size: 128)
!378 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !375, file: !31, line: 917, size: 128, elements: !379)
!379 = !{!380, !386}
!380 = !DIDerivedType(tag: DW_TAG_member, name: "fu_llist", scope: !378, file: !31, line: 918, baseType: !381, size: 64)
!381 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "llist_node", file: !382, line: 58, size: 64, elements: !383)
!382 = !DIFile(filename: "./include/linux/llist.h", directory: "/home/lizy2001/genbc/linux")
!383 = !{!384}
!384 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !381, file: !382, line: 59, baseType: !385, size: 64)
!385 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !381, size: 64)
!386 = !DIDerivedType(tag: DW_TAG_member, name: "fu_rcuhead", scope: !378, file: !31, line: 919, baseType: !387, size: 128, align: 64)
!387 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "callback_head", file: !138, line: 216, size: 128, align: 64, elements: !388)
!388 = !{!389, !391}
!389 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !387, file: !138, line: 217, baseType: !390, size: 64)
!390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !387, size: 64)
!391 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !387, file: !138, line: 218, baseType: !392, size: 64, offset: 64)
!392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !393, size: 64)
!393 = !DISubroutineType(types: !394)
!394 = !{null, !390}
!395 = !DIDerivedType(tag: DW_TAG_member, name: "f_path", scope: !375, file: !31, line: 921, baseType: !396, size: 128, offset: 128)
!396 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "path", file: !397, line: 8, size: 128, elements: !398)
!397 = !DIFile(filename: "./include/linux/path.h", directory: "/home/lizy2001/genbc/linux")
!398 = !{!399, !403}
!399 = !DIDerivedType(tag: DW_TAG_member, name: "mnt", scope: !396, file: !397, line: 9, baseType: !400, size: 64)
!400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !401, size: 64)
!401 = !DICompositeType(tag: DW_TAG_structure_type, name: "vfsmount", file: !402, line: 18, flags: DIFlagFwdDecl)
!402 = !DIFile(filename: "./include/linux/dcache.h", directory: "/home/lizy2001/genbc/linux")
!403 = !DIDerivedType(tag: DW_TAG_member, name: "dentry", scope: !396, file: !397, line: 10, baseType: !404, size: 64, offset: 64)
!404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !405, size: 64)
!405 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry", file: !402, line: 89, size: 1536, elements: !406)
!406 = !{!407, !408, !418, !426, !427, !448, !2974, !2976, !2988, !2989, !2990, !2991, !2992, !2998, !2999, !3000}
!407 = !DIDerivedType(tag: DW_TAG_member, name: "d_flags", scope: !405, file: !402, line: 91, baseType: !7, size: 32)
!408 = !DIDerivedType(tag: DW_TAG_member, name: "d_seq", scope: !405, file: !402, line: 92, baseType: !409, size: 32, offset: 32)
!409 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_spinlock_t", file: !410, line: 277, baseType: !411)
!410 = !DIFile(filename: "./include/linux/seqlock.h", directory: "/home/lizy2001/genbc/linux")
!411 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_spinlock", file: !410, line: 277, size: 32, elements: !412)
!412 = !{!413}
!413 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !411, file: !410, line: 277, baseType: !414, size: 32)
!414 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_t", file: !410, line: 70, baseType: !415)
!415 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount", file: !410, line: 65, size: 32, elements: !416)
!416 = !{!417}
!417 = !DIDerivedType(tag: DW_TAG_member, name: "sequence", scope: !415, file: !410, line: 66, baseType: !7, size: 32)
!418 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !405, file: !402, line: 93, baseType: !419, size: 128, offset: 64)
!419 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_node", file: !420, line: 38, size: 128, elements: !421)
!420 = !DIFile(filename: "./include/linux/list_bl.h", directory: "/home/lizy2001/genbc/linux")
!421 = !{!422, !424}
!422 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !419, file: !420, line: 39, baseType: !423, size: 64)
!423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !419, size: 64)
!424 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !419, file: !420, line: 39, baseType: !425, size: 64, offset: 64)
!425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !423, size: 64)
!426 = !DIDerivedType(tag: DW_TAG_member, name: "d_parent", scope: !405, file: !402, line: 94, baseType: !404, size: 64, offset: 192)
!427 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !405, file: !402, line: 95, baseType: !428, size: 128, offset: 256)
!428 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qstr", file: !402, line: 47, size: 128, elements: !429)
!429 = !{!430, !445}
!430 = !DIDerivedType(tag: DW_TAG_member, scope: !428, file: !402, line: 48, baseType: !431, size: 64)
!431 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !428, file: !402, line: 48, size: 64, elements: !432)
!432 = !{!433, !441}
!433 = !DIDerivedType(tag: DW_TAG_member, scope: !431, file: !402, line: 49, baseType: !434, size: 64)
!434 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !431, file: !402, line: 49, size: 64, elements: !435)
!435 = !{!436, !440}
!436 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !434, file: !402, line: 50, baseType: !437, size: 32)
!437 = !DIDerivedType(tag: DW_TAG_typedef, name: "u32", file: !438, line: 21, baseType: !439)
!438 = !DIFile(filename: "./include/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!439 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u32", file: !179, line: 27, baseType: !7)
!440 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !434, file: !402, line: 50, baseType: !437, size: 32, offset: 32)
!441 = !DIDerivedType(tag: DW_TAG_member, name: "hash_len", scope: !431, file: !402, line: 52, baseType: !442, size: 64)
!442 = !DIDerivedType(tag: DW_TAG_typedef, name: "u64", file: !438, line: 23, baseType: !443)
!443 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u64", file: !179, line: 31, baseType: !444)
!444 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!445 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !428, file: !402, line: 54, baseType: !446, size: 64, offset: 64)
!446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !447, size: 64)
!447 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !180)
!448 = !DIDerivedType(tag: DW_TAG_member, name: "d_inode", scope: !405, file: !402, line: 96, baseType: !449, size: 64, offset: 384)
!449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !450, size: 64)
!450 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode", file: !31, line: 610, size: 4224, elements: !451)
!451 = !{!452, !453, !454, !462, !469, !470, !616, !2685, !2686, !2687, !2693, !2694, !2695, !2696, !2697, !2698, !2699, !2700, !2701, !2702, !2703, !2704, !2705, !2706, !2707, !2708, !2709, !2710, !2711, !2712, !2717, !2718, !2719, !2720, !2721, !2722, !2723, !2950, !2958, !2959, !2960, !2970, !2971, !2972, !2973}
!452 = !DIDerivedType(tag: DW_TAG_member, name: "i_mode", scope: !450, file: !31, line: 611, baseType: !338, size: 16)
!453 = !DIDerivedType(tag: DW_TAG_member, name: "i_opflags", scope: !450, file: !31, line: 612, baseType: !339, size: 16, offset: 16)
!454 = !DIDerivedType(tag: DW_TAG_member, name: "i_uid", scope: !450, file: !31, line: 613, baseType: !455, size: 32, offset: 32)
!455 = !DIDerivedType(tag: DW_TAG_typedef, name: "kuid_t", file: !456, line: 23, baseType: !457)
!456 = !DIFile(filename: "./include/linux/uidgid.h", directory: "/home/lizy2001/genbc/linux")
!457 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !456, line: 21, size: 32, elements: !458)
!458 = !{!459}
!459 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !457, file: !456, line: 22, baseType: !460, size: 32)
!460 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !138, line: 32, baseType: !461)
!461 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_uid32_t", file: !331, line: 49, baseType: !7)
!462 = !DIDerivedType(tag: DW_TAG_member, name: "i_gid", scope: !450, file: !31, line: 614, baseType: !463, size: 32, offset: 64)
!463 = !DIDerivedType(tag: DW_TAG_typedef, name: "kgid_t", file: !456, line: 28, baseType: !464)
!464 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !456, line: 26, size: 32, elements: !465)
!465 = !{!466}
!466 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !464, file: !456, line: 27, baseType: !467, size: 32)
!467 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !138, line: 33, baseType: !468)
!468 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_gid32_t", file: !331, line: 50, baseType: !7)
!469 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !450, file: !31, line: 615, baseType: !7, size: 32, offset: 96)
!470 = !DIDerivedType(tag: DW_TAG_member, name: "i_op", scope: !450, file: !31, line: 622, baseType: !471, size: 64, offset: 128)
!471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !472, size: 64)
!472 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !473)
!473 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode_operations", file: !31, line: 1864, size: 1536, align: 512, elements: !474)
!474 = !{!475, !479, !492, !496, !502, !506, !510, !514, !518, !522, !526, !527, !533, !537, !563, !592, !596, !602, !607, !611, !612}
!475 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !473, file: !31, line: 1865, baseType: !476, size: 64)
!476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !477, size: 64)
!477 = !DISubroutineType(types: !478)
!478 = !{!404, !449, !404, !7}
!479 = !DIDerivedType(tag: DW_TAG_member, name: "get_link", scope: !473, file: !31, line: 1866, baseType: !480, size: 64, offset: 64)
!480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !481, size: 64)
!481 = !DISubroutineType(types: !482)
!482 = !{!223, !404, !449, !483}
!483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !484, size: 64)
!484 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_call", file: !485, line: 10, size: 128, elements: !486)
!485 = !DIFile(filename: "./include/linux/delayed_call.h", directory: "/home/lizy2001/genbc/linux")
!486 = !{!487, !491}
!487 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !484, file: !485, line: 11, baseType: !488, size: 64)
!488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !489, size: 64)
!489 = !DISubroutineType(types: !490)
!490 = !{null, !139}
!491 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !484, file: !485, line: 12, baseType: !139, size: 64, offset: 64)
!492 = !DIDerivedType(tag: DW_TAG_member, name: "permission", scope: !473, file: !31, line: 1867, baseType: !493, size: 64, offset: 128)
!493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !494, size: 64)
!494 = !DISubroutineType(types: !495)
!495 = !{!132, !449, !132}
!496 = !DIDerivedType(tag: DW_TAG_member, name: "get_acl", scope: !473, file: !31, line: 1868, baseType: !497, size: 64, offset: 192)
!497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !498, size: 64)
!498 = !DISubroutineType(types: !499)
!499 = !{!500, !449, !132}
!500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !501, size: 64)
!501 = !DICompositeType(tag: DW_TAG_structure_type, name: "posix_acl", file: !31, line: 581, flags: DIFlagFwdDecl)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "readlink", scope: !473, file: !31, line: 1870, baseType: !503, size: 64, offset: 256)
!503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !504, size: 64)
!504 = !DISubroutineType(types: !505)
!505 = !{!132, !404, !298, !132}
!506 = !DIDerivedType(tag: DW_TAG_member, name: "create", scope: !473, file: !31, line: 1872, baseType: !507, size: 64, offset: 320)
!507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !508, size: 64)
!508 = !DISubroutineType(types: !509)
!509 = !{!132, !449, !404, !338, !171}
!510 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !473, file: !31, line: 1873, baseType: !511, size: 64, offset: 384)
!511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !512, size: 64)
!512 = !DISubroutineType(types: !513)
!513 = !{!132, !404, !449, !404}
!514 = !DIDerivedType(tag: DW_TAG_member, name: "unlink", scope: !473, file: !31, line: 1874, baseType: !515, size: 64, offset: 448)
!515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !516, size: 64)
!516 = !DISubroutineType(types: !517)
!517 = !{!132, !449, !404}
!518 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !473, file: !31, line: 1875, baseType: !519, size: 64, offset: 512)
!519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !520, size: 64)
!520 = !DISubroutineType(types: !521)
!521 = !{!132, !449, !404, !223}
!522 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !473, file: !31, line: 1876, baseType: !523, size: 64, offset: 576)
!523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !524, size: 64)
!524 = !DISubroutineType(types: !525)
!525 = !{!132, !449, !404, !338}
!526 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !473, file: !31, line: 1877, baseType: !515, size: 64, offset: 640)
!527 = !DIDerivedType(tag: DW_TAG_member, name: "mknod", scope: !473, file: !31, line: 1878, baseType: !528, size: 64, offset: 704)
!528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !529, size: 64)
!529 = !DISubroutineType(types: !530)
!530 = !{!132, !449, !404, !338, !531}
!531 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !138, line: 16, baseType: !532)
!532 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_dev_t", file: !138, line: 13, baseType: !437)
!533 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !473, file: !31, line: 1879, baseType: !534, size: 64, offset: 768)
!534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !535, size: 64)
!535 = !DISubroutineType(types: !536)
!536 = !{!132, !449, !404, !449, !404, !7}
!537 = !DIDerivedType(tag: DW_TAG_member, name: "setattr", scope: !473, file: !31, line: 1881, baseType: !538, size: 64, offset: 832)
!538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !539, size: 64)
!539 = !DISubroutineType(types: !540)
!540 = !{!132, !404, !541}
!541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !542, size: 64)
!542 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iattr", file: !31, line: 219, size: 640, elements: !543)
!543 = !{!544, !545, !546, !547, !548, !552, !560, !561, !562}
!544 = !DIDerivedType(tag: DW_TAG_member, name: "ia_valid", scope: !542, file: !31, line: 220, baseType: !7, size: 32)
!545 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mode", scope: !542, file: !31, line: 221, baseType: !338, size: 16, offset: 32)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "ia_uid", scope: !542, file: !31, line: 222, baseType: !455, size: 32, offset: 64)
!547 = !DIDerivedType(tag: DW_TAG_member, name: "ia_gid", scope: !542, file: !31, line: 223, baseType: !463, size: 32, offset: 96)
!548 = !DIDerivedType(tag: DW_TAG_member, name: "ia_size", scope: !542, file: !31, line: 224, baseType: !549, size: 64, offset: 128)
!549 = !DIDerivedType(tag: DW_TAG_typedef, name: "loff_t", file: !138, line: 46, baseType: !550)
!550 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_loff_t", file: !331, line: 88, baseType: !551)
!551 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!552 = !DIDerivedType(tag: DW_TAG_member, name: "ia_atime", scope: !542, file: !31, line: 225, baseType: !553, size: 128, offset: 192)
!553 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec64", file: !554, line: 13, size: 128, elements: !555)
!554 = !DIFile(filename: "./include/linux/time64.h", directory: "/home/lizy2001/genbc/linux")
!555 = !{!556, !559}
!556 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !553, file: !554, line: 14, baseType: !557, size: 64)
!557 = !DIDerivedType(tag: DW_TAG_typedef, name: "time64_t", file: !554, line: 8, baseType: !558)
!558 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s64", file: !179, line: 30, baseType: !551)
!559 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !553, file: !554, line: 15, baseType: !93, size: 64, offset: 64)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mtime", scope: !542, file: !31, line: 226, baseType: !553, size: 128, offset: 320)
!561 = !DIDerivedType(tag: DW_TAG_member, name: "ia_ctime", scope: !542, file: !31, line: 227, baseType: !553, size: 128, offset: 448)
!562 = !DIDerivedType(tag: DW_TAG_member, name: "ia_file", scope: !542, file: !31, line: 234, baseType: !374, size: 64, offset: 576)
!563 = !DIDerivedType(tag: DW_TAG_member, name: "getattr", scope: !473, file: !31, line: 1882, baseType: !564, size: 64, offset: 896)
!564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !565, size: 64)
!565 = !DISubroutineType(types: !566)
!566 = !{!132, !567, !569, !437, !7}
!567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !568, size: 64)
!568 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !396)
!569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !570, size: 64)
!570 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kstat", file: !571, line: 22, size: 1152, elements: !572)
!571 = !DIFile(filename: "./include/linux/stat.h", directory: "/home/lizy2001/genbc/linux")
!572 = !{!573, !574, !575, !576, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591}
!573 = !DIDerivedType(tag: DW_TAG_member, name: "result_mask", scope: !570, file: !571, line: 23, baseType: !437, size: 32)
!574 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !570, file: !571, line: 24, baseType: !338, size: 16, offset: 32)
!575 = !DIDerivedType(tag: DW_TAG_member, name: "nlink", scope: !570, file: !571, line: 25, baseType: !7, size: 32, offset: 64)
!576 = !DIDerivedType(tag: DW_TAG_member, name: "blksize", scope: !570, file: !571, line: 26, baseType: !577, size: 32, offset: 96)
!577 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !138, line: 104, baseType: !437)
!578 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !570, file: !571, line: 27, baseType: !442, size: 64, offset: 128)
!579 = !DIDerivedType(tag: DW_TAG_member, name: "attributes_mask", scope: !570, file: !571, line: 28, baseType: !442, size: 64, offset: 192)
!580 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !570, file: !571, line: 37, baseType: !442, size: 64, offset: 256)
!581 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !570, file: !571, line: 38, baseType: !531, size: 32, offset: 320)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "rdev", scope: !570, file: !571, line: 39, baseType: !531, size: 32, offset: 352)
!583 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !570, file: !571, line: 40, baseType: !455, size: 32, offset: 384)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !570, file: !571, line: 41, baseType: !463, size: 32, offset: 416)
!585 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !570, file: !571, line: 42, baseType: !549, size: 64, offset: 448)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "atime", scope: !570, file: !571, line: 43, baseType: !553, size: 128, offset: 512)
!587 = !DIDerivedType(tag: DW_TAG_member, name: "mtime", scope: !570, file: !571, line: 44, baseType: !553, size: 128, offset: 640)
!588 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !570, file: !571, line: 45, baseType: !553, size: 128, offset: 768)
!589 = !DIDerivedType(tag: DW_TAG_member, name: "btime", scope: !570, file: !571, line: 46, baseType: !553, size: 128, offset: 896)
!590 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !570, file: !571, line: 47, baseType: !442, size: 64, offset: 1024)
!591 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_id", scope: !570, file: !571, line: 48, baseType: !442, size: 64, offset: 1088)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "listxattr", scope: !473, file: !31, line: 1883, baseType: !593, size: 64, offset: 960)
!593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !594, size: 64)
!594 = !DISubroutineType(types: !595)
!595 = !{!329, !404, !298, !344}
!596 = !DIDerivedType(tag: DW_TAG_member, name: "fiemap", scope: !473, file: !31, line: 1884, baseType: !597, size: 64, offset: 1024)
!597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !598, size: 64)
!598 = !DISubroutineType(types: !599)
!599 = !{!132, !449, !600, !442, !442}
!600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !601, size: 64)
!601 = !DICompositeType(tag: DW_TAG_structure_type, name: "fiemap_extent_info", file: !31, line: 50, flags: DIFlagFwdDecl)
!602 = !DIDerivedType(tag: DW_TAG_member, name: "update_time", scope: !473, file: !31, line: 1886, baseType: !603, size: 64, offset: 1088)
!603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !604, size: 64)
!604 = !DISubroutineType(types: !605)
!605 = !{!132, !449, !606, !132}
!606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !553, size: 64)
!607 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_open", scope: !473, file: !31, line: 1887, baseType: !608, size: 64, offset: 1152)
!608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !609, size: 64)
!609 = !DISubroutineType(types: !610)
!610 = !{!132, !449, !404, !374, !7, !338}
!611 = !DIDerivedType(tag: DW_TAG_member, name: "tmpfile", scope: !473, file: !31, line: 1890, baseType: !523, size: 64, offset: 1216)
!612 = !DIDerivedType(tag: DW_TAG_member, name: "set_acl", scope: !473, file: !31, line: 1891, baseType: !613, size: 64, offset: 1280)
!613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !614, size: 64)
!614 = !DISubroutineType(types: !615)
!615 = !{!132, !449, !500, !132}
!616 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb", scope: !450, file: !31, line: 623, baseType: !617, size: 64, offset: 192)
!617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !618, size: 64)
!618 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_block", file: !31, line: 1416, size: 9472, elements: !619)
!619 = !{!620, !621, !622, !623, !624, !625, !675, !2293, !2375, !2458, !2462, !2463, !2464, !2465, !2466, !2467, !2468, !2469, !2474, !2478, !2479, !2482, !2483, !2486, !2487, !2488, !2529, !2556, !2557, !2558, !2559, !2560, !2561, !2564, !2565, !2572, !2573, !2575, !2576, !2577, !2636, !2637, !2652, !2653, !2654, !2655, !2656, !2659, !2660, !2661, !2676, !2677, !2678, !2679, !2680, !2681, !2682, !2683, !2684}
!620 = !DIDerivedType(tag: DW_TAG_member, name: "s_list", scope: !618, file: !31, line: 1417, baseType: !143, size: 128)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "s_dev", scope: !618, file: !31, line: 1418, baseType: !531, size: 32, offset: 128)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize_bits", scope: !618, file: !31, line: 1419, baseType: !180, size: 8, offset: 160)
!623 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize", scope: !618, file: !31, line: 1420, baseType: !136, size: 64, offset: 192)
!624 = !DIDerivedType(tag: DW_TAG_member, name: "s_maxbytes", scope: !618, file: !31, line: 1421, baseType: !549, size: 64, offset: 256)
!625 = !DIDerivedType(tag: DW_TAG_member, name: "s_type", scope: !618, file: !31, line: 1422, baseType: !626, size: 64, offset: 320)
!626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !627, size: 64)
!627 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_system_type", file: !31, line: 2228, size: 576, elements: !628)
!628 = !{!629, !630, !631, !638, !642, !646, !650, !654, !655, !665, !668, !669, !670, !672, !673, !674}
!629 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !627, file: !31, line: 2229, baseType: !223, size: 64)
!630 = !DIDerivedType(tag: DW_TAG_member, name: "fs_flags", scope: !627, file: !31, line: 2230, baseType: !132, size: 32, offset: 64)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "init_fs_context", scope: !627, file: !31, line: 2238, baseType: !632, size: 64, offset: 128)
!632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !633, size: 64)
!633 = !DISubroutineType(types: !634)
!634 = !{!132, !635}
!635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !636, size: 64)
!636 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_context", file: !637, line: 28, flags: DIFlagFwdDecl)
!637 = !DIFile(filename: "./include/linux/kernfs.h", directory: "/home/lizy2001/genbc/linux")
!638 = !DIDerivedType(tag: DW_TAG_member, name: "parameters", scope: !627, file: !31, line: 2239, baseType: !639, size: 64, offset: 192)
!639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !640, size: 64)
!640 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !641)
!641 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_parameter_spec", file: !31, line: 70, flags: DIFlagFwdDecl)
!642 = !DIDerivedType(tag: DW_TAG_member, name: "mount", scope: !627, file: !31, line: 2240, baseType: !643, size: 64, offset: 256)
!643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !644, size: 64)
!644 = !DISubroutineType(types: !645)
!645 = !{!404, !626, !132, !223, !139}
!646 = !DIDerivedType(tag: DW_TAG_member, name: "kill_sb", scope: !627, file: !31, line: 2242, baseType: !647, size: 64, offset: 320)
!647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !648, size: 64)
!648 = !DISubroutineType(types: !649)
!649 = !{null, !617}
!650 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !627, file: !31, line: 2243, baseType: !651, size: 64, offset: 384)
!651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !652, size: 64)
!652 = !DICompositeType(tag: DW_TAG_structure_type, name: "module", file: !653, line: 76, flags: DIFlagFwdDecl)
!653 = !DIFile(filename: "./arch/x86/include/asm/alternative.h", directory: "/home/lizy2001/genbc/linux")
!654 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !627, file: !31, line: 2244, baseType: !626, size: 64, offset: 448)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "fs_supers", scope: !627, file: !31, line: 2245, baseType: !656, size: 64, offset: 512)
!656 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_head", file: !138, line: 182, size: 64, elements: !657)
!657 = !{!658}
!658 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !656, file: !138, line: 183, baseType: !659, size: 64)
!659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !660, size: 64)
!660 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_node", file: !138, line: 186, size: 128, elements: !661)
!661 = !{!662, !663}
!662 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !660, file: !138, line: 187, baseType: !659, size: 64)
!663 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !660, file: !138, line: 187, baseType: !664, size: 64, offset: 64)
!664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !659, size: 64)
!665 = !DIDerivedType(tag: DW_TAG_member, name: "s_lock_key", scope: !627, file: !31, line: 2247, baseType: !666, offset: 576)
!666 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_class_key", file: !667, line: 187, elements: !199)
!667 = !DIFile(filename: "./include/linux/lockdep_types.h", directory: "/home/lizy2001/genbc/linux")
!668 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount_key", scope: !627, file: !31, line: 2248, baseType: !666, offset: 576)
!669 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_key", scope: !627, file: !31, line: 2249, baseType: !666, offset: 576)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers_key", scope: !627, file: !31, line: 2250, baseType: !671, offset: 576)
!671 = !DICompositeType(tag: DW_TAG_array_type, baseType: !666, elements: !299)
!672 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock_key", scope: !627, file: !31, line: 2252, baseType: !666, offset: 576)
!673 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_key", scope: !627, file: !31, line: 2253, baseType: !666, offset: 576)
!674 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_dir_key", scope: !627, file: !31, line: 2254, baseType: !666, offset: 576)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "s_op", scope: !618, file: !31, line: 1423, baseType: !676, size: 64, offset: 384)
!676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !677, size: 64)
!677 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !678)
!678 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_operations", file: !31, line: 1935, size: 1472, elements: !679)
!679 = !{!680, !684, !688, !689, !693, !699, !703, !704, !705, !709, !713, !714, !715, !716, !722, !727, !728, !735, !736, !737, !738, !2277, !2292}
!680 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_inode", scope: !678, file: !31, line: 1936, baseType: !681, size: 64)
!681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !682, size: 64)
!682 = !DISubroutineType(types: !683)
!683 = !{!449, !617}
!684 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_inode", scope: !678, file: !31, line: 1937, baseType: !685, size: 64, offset: 64)
!685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !686, size: 64)
!686 = !DISubroutineType(types: !687)
!687 = !{null, !449}
!688 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !678, file: !31, line: 1938, baseType: !685, size: 64, offset: 128)
!689 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_inode", scope: !678, file: !31, line: 1940, baseType: !690, size: 64, offset: 192)
!690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !691, size: 64)
!691 = !DISubroutineType(types: !692)
!692 = !{null, !449, !132}
!693 = !DIDerivedType(tag: DW_TAG_member, name: "write_inode", scope: !678, file: !31, line: 1941, baseType: !694, size: 64, offset: 256)
!694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !695, size: 64)
!695 = !DISubroutineType(types: !696)
!696 = !{!132, !449, !697}
!697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !698, size: 64)
!698 = !DICompositeType(tag: DW_TAG_structure_type, name: "writeback_control", file: !31, line: 289, flags: DIFlagFwdDecl)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "drop_inode", scope: !678, file: !31, line: 1942, baseType: !700, size: 64, offset: 320)
!700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !701, size: 64)
!701 = !DISubroutineType(types: !702)
!702 = !{!132, !449}
!703 = !DIDerivedType(tag: DW_TAG_member, name: "evict_inode", scope: !678, file: !31, line: 1943, baseType: !685, size: 64, offset: 384)
!704 = !DIDerivedType(tag: DW_TAG_member, name: "put_super", scope: !678, file: !31, line: 1944, baseType: !647, size: 64, offset: 448)
!705 = !DIDerivedType(tag: DW_TAG_member, name: "sync_fs", scope: !678, file: !31, line: 1945, baseType: !706, size: 64, offset: 512)
!706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !707, size: 64)
!707 = !DISubroutineType(types: !708)
!708 = !{!132, !617, !132}
!709 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_super", scope: !678, file: !31, line: 1946, baseType: !710, size: 64, offset: 576)
!710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !711, size: 64)
!711 = !DISubroutineType(types: !712)
!712 = !{!132, !617}
!713 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_fs", scope: !678, file: !31, line: 1947, baseType: !710, size: 64, offset: 640)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_super", scope: !678, file: !31, line: 1948, baseType: !710, size: 64, offset: 704)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "unfreeze_fs", scope: !678, file: !31, line: 1949, baseType: !710, size: 64, offset: 768)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "statfs", scope: !678, file: !31, line: 1950, baseType: !717, size: 64, offset: 832)
!717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !718, size: 64)
!718 = !DISubroutineType(types: !719)
!719 = !{!132, !404, !720}
!720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !721, size: 64)
!721 = !DICompositeType(tag: DW_TAG_structure_type, name: "kstatfs", file: !31, line: 57, flags: DIFlagFwdDecl)
!722 = !DIDerivedType(tag: DW_TAG_member, name: "remount_fs", scope: !678, file: !31, line: 1951, baseType: !723, size: 64, offset: 896)
!723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !724, size: 64)
!724 = !DISubroutineType(types: !725)
!725 = !{!132, !617, !726, !298}
!726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !132, size: 64)
!727 = !DIDerivedType(tag: DW_TAG_member, name: "umount_begin", scope: !678, file: !31, line: 1952, baseType: !647, size: 64, offset: 960)
!728 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !678, file: !31, line: 1954, baseType: !729, size: 64, offset: 1024)
!729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !730, size: 64)
!730 = !DISubroutineType(types: !731)
!731 = !{!132, !732, !404}
!732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !733, size: 64)
!733 = !DICompositeType(tag: DW_TAG_structure_type, name: "seq_file", file: !734, line: 539, flags: DIFlagFwdDecl)
!734 = !DIFile(filename: "./arch/x86/include/asm/pgtable_types.h", directory: "/home/lizy2001/genbc/linux")
!735 = !DIDerivedType(tag: DW_TAG_member, name: "show_devname", scope: !678, file: !31, line: 1955, baseType: !729, size: 64, offset: 1088)
!736 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !678, file: !31, line: 1956, baseType: !729, size: 64, offset: 1152)
!737 = !DIDerivedType(tag: DW_TAG_member, name: "show_stats", scope: !678, file: !31, line: 1957, baseType: !729, size: 64, offset: 1216)
!738 = !DIDerivedType(tag: DW_TAG_member, name: "bdev_try_to_free_page", scope: !678, file: !31, line: 1963, baseType: !739, size: 64, offset: 1280)
!739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !740, size: 64)
!740 = !DISubroutineType(types: !741)
!741 = !{!132, !617, !742, !137}
!742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !743, size: 64)
!743 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page", file: !744, line: 68, size: 512, align: 128, elements: !745)
!744 = !DIFile(filename: "./include/linux/mm_types.h", directory: "/home/lizy2001/genbc/linux")
!745 = !{!746, !747, !2269, !2276}
!746 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !743, file: !744, line: 69, baseType: !136, size: 64)
!747 = !DIDerivedType(tag: DW_TAG_member, scope: !743, file: !744, line: 77, baseType: !748, size: 320, offset: 64)
!748 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !743, file: !744, line: 77, size: 320, elements: !749)
!749 = !{!750, !937, !942, !970, !978, !984, !2261, !2268}
!750 = !DIDerivedType(tag: DW_TAG_member, scope: !748, file: !744, line: 78, baseType: !751, size: 320)
!751 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !748, file: !744, line: 78, size: 320, elements: !752)
!752 = !{!753, !754, !935, !936}
!753 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !751, file: !744, line: 84, baseType: !143, size: 128)
!754 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !751, file: !744, line: 86, baseType: !755, size: 64, offset: 128)
!755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !756, size: 64)
!756 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space", file: !31, line: 451, size: 1216, align: 64, elements: !757)
!757 = !{!758, !759, !766, !767, !772, !787, !803, !804, !805, !806, !928, !929, !932, !933, !934}
!758 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !756, file: !31, line: 452, baseType: !449, size: 64)
!759 = !DIDerivedType(tag: DW_TAG_member, name: "i_pages", scope: !756, file: !31, line: 453, baseType: !760, size: 128, offset: 64)
!760 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xarray", file: !761, line: 292, size: 128, elements: !762)
!761 = !DIFile(filename: "./include/linux/xarray.h", directory: "/home/lizy2001/genbc/linux")
!762 = !{!763, !764, !765}
!763 = !DIDerivedType(tag: DW_TAG_member, name: "xa_lock", scope: !760, file: !761, line: 293, baseType: !185)
!764 = !DIDerivedType(tag: DW_TAG_member, name: "xa_flags", scope: !760, file: !761, line: 295, baseType: !137, size: 32)
!765 = !DIDerivedType(tag: DW_TAG_member, name: "xa_head", scope: !760, file: !761, line: 296, baseType: !139, size: 64, offset: 64)
!766 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !756, file: !31, line: 454, baseType: !137, size: 32, offset: 192)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_writable", scope: !756, file: !31, line: 455, baseType: !768, size: 32, offset: 224)
!768 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !138, line: 168, baseType: !769)
!769 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !138, line: 166, size: 32, elements: !770)
!770 = !{!771}
!771 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !769, file: !138, line: 167, baseType: !132, size: 32)
!772 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap", scope: !756, file: !31, line: 460, baseType: !773, size: 128, offset: 256)
!773 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root_cached", file: !774, line: 125, size: 128, elements: !775)
!774 = !DIFile(filename: "./include/linux/rbtree.h", directory: "/home/lizy2001/genbc/linux")
!775 = !{!776, !786}
!776 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !773, file: !774, line: 126, baseType: !777, size: 64)
!777 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root", file: !774, line: 31, size: 64, elements: !778)
!778 = !{!779}
!779 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !777, file: !774, line: 32, baseType: !780, size: 64)
!780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !781, size: 64)
!781 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_node", file: !774, line: 24, size: 192, align: 64, elements: !782)
!782 = !{!783, !784, !785}
!783 = !DIDerivedType(tag: DW_TAG_member, name: "__rb_parent_color", scope: !781, file: !774, line: 25, baseType: !136, size: 64)
!784 = !DIDerivedType(tag: DW_TAG_member, name: "rb_right", scope: !781, file: !774, line: 26, baseType: !780, size: 64, offset: 64)
!785 = !DIDerivedType(tag: DW_TAG_member, name: "rb_left", scope: !781, file: !774, line: 27, baseType: !780, size: 64, offset: 128)
!786 = !DIDerivedType(tag: DW_TAG_member, name: "rb_leftmost", scope: !773, file: !774, line: 127, baseType: !780, size: 64, offset: 64)
!787 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_rwsem", scope: !756, file: !31, line: 461, baseType: !788, size: 256, offset: 384)
!788 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rw_semaphore", file: !789, line: 35, size: 256, elements: !790)
!789 = !DIFile(filename: "./include/linux/rwsem.h", directory: "/home/lizy2001/genbc/linux")
!790 = !{!791, !799, !800, !802}
!791 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !788, file: !789, line: 36, baseType: !792, size: 64)
!792 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_long_t", file: !793, line: 13, baseType: !794)
!793 = !DIFile(filename: "./include/asm-generic/atomic-long.h", directory: "/home/lizy2001/genbc/linux")
!794 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic64_t", file: !138, line: 175, baseType: !795)
!795 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !138, line: 173, size: 64, elements: !796)
!796 = !{!797}
!797 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !795, file: !138, line: 174, baseType: !798, size: 64)
!798 = !DIDerivedType(tag: DW_TAG_typedef, name: "s64", file: !438, line: 22, baseType: !558)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !788, file: !789, line: 42, baseType: !792, size: 64, offset: 64)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !788, file: !789, line: 46, baseType: !801, offset: 128)
!801 = !DIDerivedType(tag: DW_TAG_typedef, name: "raw_spinlock_t", file: !186, line: 29, baseType: !193)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !788, file: !789, line: 47, baseType: !143, size: 128, offset: 128)
!803 = !DIDerivedType(tag: DW_TAG_member, name: "nrpages", scope: !756, file: !31, line: 462, baseType: !136, size: 64, offset: 640)
!804 = !DIDerivedType(tag: DW_TAG_member, name: "nrexceptional", scope: !756, file: !31, line: 463, baseType: !136, size: 64, offset: 704)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "writeback_index", scope: !756, file: !31, line: 464, baseType: !136, size: 64, offset: 768)
!806 = !DIDerivedType(tag: DW_TAG_member, name: "a_ops", scope: !756, file: !31, line: 465, baseType: !807, size: 64, offset: 832)
!807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !808, size: 64)
!808 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !809)
!809 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space_operations", file: !31, line: 367, size: 1408, elements: !810)
!810 = !{!811, !815, !819, !823, !827, !831, !837, !843, !847, !852, !856, !860, !864, !892, !896, !902, !903, !904, !908, !913, !917, !924}
!811 = !DIDerivedType(tag: DW_TAG_member, name: "writepage", scope: !809, file: !31, line: 368, baseType: !812, size: 64)
!812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !813, size: 64)
!813 = !DISubroutineType(types: !814)
!814 = !{!132, !742, !697}
!815 = !DIDerivedType(tag: DW_TAG_member, name: "readpage", scope: !809, file: !31, line: 369, baseType: !816, size: 64, offset: 64)
!816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !817, size: 64)
!817 = !DISubroutineType(types: !818)
!818 = !{!132, !374, !742}
!819 = !DIDerivedType(tag: DW_TAG_member, name: "writepages", scope: !809, file: !31, line: 372, baseType: !820, size: 64, offset: 128)
!820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !821, size: 64)
!821 = !DISubroutineType(types: !822)
!822 = !{!132, !755, !697}
!823 = !DIDerivedType(tag: DW_TAG_member, name: "set_page_dirty", scope: !809, file: !31, line: 375, baseType: !824, size: 64, offset: 192)
!824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !825, size: 64)
!825 = !DISubroutineType(types: !826)
!826 = !{!132, !742}
!827 = !DIDerivedType(tag: DW_TAG_member, name: "readpages", scope: !809, file: !31, line: 381, baseType: !828, size: 64, offset: 256)
!828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !829, size: 64)
!829 = !DISubroutineType(types: !830)
!830 = !{!132, !374, !755, !142, !7}
!831 = !DIDerivedType(tag: DW_TAG_member, name: "readahead", scope: !809, file: !31, line: 383, baseType: !832, size: 64, offset: 320)
!832 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !833, size: 64)
!833 = !DISubroutineType(types: !834)
!834 = !{null, !835}
!835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !836, size: 64)
!836 = !DICompositeType(tag: DW_TAG_structure_type, name: "readahead_control", file: !31, line: 290, flags: DIFlagFwdDecl)
!837 = !DIDerivedType(tag: DW_TAG_member, name: "write_begin", scope: !809, file: !31, line: 385, baseType: !838, size: 64, offset: 384)
!838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !839, size: 64)
!839 = !DISubroutineType(types: !840)
!840 = !{!132, !374, !755, !549, !7, !7, !841, !842}
!841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !742, size: 64)
!842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !139, size: 64)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "write_end", scope: !809, file: !31, line: 388, baseType: !844, size: 64, offset: 448)
!844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !845, size: 64)
!845 = !DISubroutineType(types: !846)
!846 = !{!132, !374, !755, !549, !7, !7, !742, !139}
!847 = !DIDerivedType(tag: DW_TAG_member, name: "bmap", scope: !809, file: !31, line: 393, baseType: !848, size: 64, offset: 512)
!848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !849, size: 64)
!849 = !DISubroutineType(types: !850)
!850 = !{!851, !755, !851}
!851 = !DIDerivedType(tag: DW_TAG_typedef, name: "sector_t", file: !138, line: 125, baseType: !442)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "invalidatepage", scope: !809, file: !31, line: 394, baseType: !853, size: 64, offset: 576)
!853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !854, size: 64)
!854 = !DISubroutineType(types: !855)
!855 = !{null, !742, !7, !7}
!856 = !DIDerivedType(tag: DW_TAG_member, name: "releasepage", scope: !809, file: !31, line: 395, baseType: !857, size: 64, offset: 640)
!857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !858, size: 64)
!858 = !DISubroutineType(types: !859)
!859 = !{!132, !742, !137}
!860 = !DIDerivedType(tag: DW_TAG_member, name: "freepage", scope: !809, file: !31, line: 396, baseType: !861, size: 64, offset: 704)
!861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !862, size: 64)
!862 = !DISubroutineType(types: !863)
!863 = !{null, !742}
!864 = !DIDerivedType(tag: DW_TAG_member, name: "direct_IO", scope: !809, file: !31, line: 397, baseType: !865, size: 64, offset: 768)
!865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !866, size: 64)
!866 = !DISubroutineType(types: !867)
!867 = !{!329, !868, !890}
!868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !869, size: 64)
!869 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kiocb", file: !31, line: 320, size: 384, elements: !870)
!870 = !{!871, !872, !873, !877, !878, !879, !882, !883}
!871 = !DIDerivedType(tag: DW_TAG_member, name: "ki_filp", scope: !869, file: !31, line: 321, baseType: !374, size: 64)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "ki_pos", scope: !869, file: !31, line: 326, baseType: !549, size: 64, offset: 64)
!873 = !DIDerivedType(tag: DW_TAG_member, name: "ki_complete", scope: !869, file: !31, line: 327, baseType: !874, size: 64, offset: 128)
!874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !875, size: 64)
!875 = !DISubroutineType(types: !876)
!876 = !{null, !868, !93, !93}
!877 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !869, file: !31, line: 328, baseType: !139, size: 64, offset: 192)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "ki_flags", scope: !869, file: !31, line: 329, baseType: !132, size: 32, offset: 256)
!879 = !DIDerivedType(tag: DW_TAG_member, name: "ki_hint", scope: !869, file: !31, line: 330, baseType: !880, size: 16, offset: 288)
!880 = !DIDerivedType(tag: DW_TAG_typedef, name: "u16", file: !438, line: 19, baseType: !881)
!881 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u16", file: !179, line: 24, baseType: !339)
!882 = !DIDerivedType(tag: DW_TAG_member, name: "ki_ioprio", scope: !869, file: !31, line: 331, baseType: !880, size: 16, offset: 304)
!883 = !DIDerivedType(tag: DW_TAG_member, scope: !869, file: !31, line: 332, baseType: !884, size: 64, offset: 320)
!884 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !869, file: !31, line: 332, size: 64, elements: !885)
!885 = !{!886, !887}
!886 = !DIDerivedType(tag: DW_TAG_member, name: "ki_cookie", scope: !884, file: !31, line: 333, baseType: !7, size: 32)
!887 = !DIDerivedType(tag: DW_TAG_member, name: "ki_waitq", scope: !884, file: !31, line: 334, baseType: !888, size: 64)
!888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !889, size: 64)
!889 = !DICompositeType(tag: DW_TAG_structure_type, name: "wait_page_queue", file: !31, line: 334, flags: DIFlagFwdDecl)
!890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !891, size: 64)
!891 = !DICompositeType(tag: DW_TAG_structure_type, name: "iov_iter", file: !31, line: 64, flags: DIFlagFwdDecl)
!892 = !DIDerivedType(tag: DW_TAG_member, name: "migratepage", scope: !809, file: !31, line: 402, baseType: !893, size: 64, offset: 832)
!893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !894, size: 64)
!894 = !DISubroutineType(types: !895)
!895 = !{!132, !755, !742, !742, !5}
!896 = !DIDerivedType(tag: DW_TAG_member, name: "isolate_page", scope: !809, file: !31, line: 404, baseType: !897, size: 64, offset: 896)
!897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !898, size: 64)
!898 = !DISubroutineType(types: !899)
!899 = !{!171, !742, !900}
!900 = !DIDerivedType(tag: DW_TAG_typedef, name: "isolate_mode_t", file: !901, line: 305, baseType: !7)
!901 = !DIFile(filename: "./include/linux/mmzone.h", directory: "/home/lizy2001/genbc/linux")
!902 = !DIDerivedType(tag: DW_TAG_member, name: "putback_page", scope: !809, file: !31, line: 405, baseType: !861, size: 64, offset: 960)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "launder_page", scope: !809, file: !31, line: 406, baseType: !824, size: 64, offset: 1024)
!904 = !DIDerivedType(tag: DW_TAG_member, name: "is_partially_uptodate", scope: !809, file: !31, line: 407, baseType: !905, size: 64, offset: 1088)
!905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !906, size: 64)
!906 = !DISubroutineType(types: !907)
!907 = !{!132, !742, !136, !136}
!908 = !DIDerivedType(tag: DW_TAG_member, name: "is_dirty_writeback", scope: !809, file: !31, line: 409, baseType: !909, size: 64, offset: 1152)
!909 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !910, size: 64)
!910 = !DISubroutineType(types: !911)
!911 = !{null, !742, !912, !912}
!912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !171, size: 64)
!913 = !DIDerivedType(tag: DW_TAG_member, name: "error_remove_page", scope: !809, file: !31, line: 410, baseType: !914, size: 64, offset: 1216)
!914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !915, size: 64)
!915 = !DISubroutineType(types: !916)
!916 = !{!132, !755, !742}
!917 = !DIDerivedType(tag: DW_TAG_member, name: "swap_activate", scope: !809, file: !31, line: 413, baseType: !918, size: 64, offset: 1280)
!918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !919, size: 64)
!919 = !DISubroutineType(types: !920)
!920 = !{!132, !921, !374, !923}
!921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !922, size: 64)
!922 = !DICompositeType(tag: DW_TAG_structure_type, name: "swap_info_struct", file: !31, line: 61, flags: DIFlagFwdDecl)
!923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !851, size: 64)
!924 = !DIDerivedType(tag: DW_TAG_member, name: "swap_deactivate", scope: !809, file: !31, line: 415, baseType: !925, size: 64, offset: 1344)
!925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !926, size: 64)
!926 = !DISubroutineType(types: !927)
!927 = !{null, !374}
!928 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !756, file: !31, line: 466, baseType: !136, size: 64, offset: 896)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "wb_err", scope: !756, file: !31, line: 467, baseType: !930, size: 32, offset: 960)
!930 = !DIDerivedType(tag: DW_TAG_typedef, name: "errseq_t", file: !931, line: 8, baseType: !437)
!931 = !DIFile(filename: "./include/linux/errseq.h", directory: "/home/lizy2001/genbc/linux")
!932 = !DIDerivedType(tag: DW_TAG_member, name: "private_lock", scope: !756, file: !31, line: 468, baseType: !185, offset: 992)
!933 = !DIDerivedType(tag: DW_TAG_member, name: "private_list", scope: !756, file: !31, line: 469, baseType: !143, size: 128, offset: 1024)
!934 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !756, file: !31, line: 470, baseType: !139, size: 64, offset: 1152)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !751, file: !744, line: 87, baseType: !136, size: 64, offset: 192)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !751, file: !744, line: 94, baseType: !136, size: 64, offset: 256)
!937 = !DIDerivedType(tag: DW_TAG_member, scope: !748, file: !744, line: 96, baseType: !938, size: 64)
!938 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !748, file: !744, line: 96, size: 64, elements: !939)
!939 = !{!940}
!940 = !DIDerivedType(tag: DW_TAG_member, name: "dma_addr", scope: !938, file: !744, line: 101, baseType: !941, size: 64)
!941 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_addr_t", file: !138, line: 143, baseType: !442)
!942 = !DIDerivedType(tag: DW_TAG_member, scope: !748, file: !744, line: 103, baseType: !943, size: 320)
!943 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !748, file: !744, line: 103, size: 320, elements: !944)
!944 = !{!945, !955, !958, !959}
!945 = !DIDerivedType(tag: DW_TAG_member, scope: !943, file: !744, line: 104, baseType: !946, size: 128)
!946 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !943, file: !744, line: 104, size: 128, elements: !947)
!947 = !{!948, !949}
!948 = !DIDerivedType(tag: DW_TAG_member, name: "slab_list", scope: !946, file: !744, line: 105, baseType: !143, size: 128)
!949 = !DIDerivedType(tag: DW_TAG_member, scope: !946, file: !744, line: 106, baseType: !950, size: 128)
!950 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !946, file: !744, line: 106, size: 128, elements: !951)
!951 = !{!952, !953, !954}
!952 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !950, file: !744, line: 107, baseType: !742, size: 64)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !950, file: !744, line: 109, baseType: !132, size: 32, offset: 64)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "pobjects", scope: !950, file: !744, line: 110, baseType: !132, size: 32, offset: 96)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "slab_cache", scope: !943, file: !744, line: 117, baseType: !956, size: 64, offset: 128)
!956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !957, size: 64)
!957 = !DICompositeType(tag: DW_TAG_structure_type, name: "kmem_cache", file: !744, line: 117, flags: DIFlagFwdDecl)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "freelist", scope: !943, file: !744, line: 119, baseType: !139, size: 64, offset: 192)
!959 = !DIDerivedType(tag: DW_TAG_member, scope: !943, file: !744, line: 120, baseType: !960, size: 64, offset: 256)
!960 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !943, file: !744, line: 120, size: 64, elements: !961)
!961 = !{!962, !963, !964}
!962 = !DIDerivedType(tag: DW_TAG_member, name: "s_mem", scope: !960, file: !744, line: 121, baseType: !139, size: 64)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "counters", scope: !960, file: !744, line: 122, baseType: !136, size: 64)
!964 = !DIDerivedType(tag: DW_TAG_member, scope: !960, file: !744, line: 123, baseType: !965, size: 32)
!965 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !960, file: !744, line: 123, size: 32, elements: !966)
!966 = !{!967, !968, !969}
!967 = !DIDerivedType(tag: DW_TAG_member, name: "inuse", scope: !965, file: !744, line: 124, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !965, file: !744, line: 125, baseType: !7, size: 15, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !965, file: !744, line: 126, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!970 = !DIDerivedType(tag: DW_TAG_member, scope: !748, file: !744, line: 130, baseType: !971, size: 192)
!971 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !748, file: !744, line: 130, size: 192, elements: !972)
!972 = !{!973, !974, !975, !976, !977}
!973 = !DIDerivedType(tag: DW_TAG_member, name: "compound_head", scope: !971, file: !744, line: 131, baseType: !136, size: 64)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "compound_dtor", scope: !971, file: !744, line: 134, baseType: !180, size: 8, offset: 64)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "compound_order", scope: !971, file: !744, line: 135, baseType: !180, size: 8, offset: 72)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "compound_mapcount", scope: !971, file: !744, line: 136, baseType: !768, size: 32, offset: 96)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "compound_nr", scope: !971, file: !744, line: 137, baseType: !7, size: 32, offset: 128)
!978 = !DIDerivedType(tag: DW_TAG_member, scope: !748, file: !744, line: 139, baseType: !979, size: 256)
!979 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !748, file: !744, line: 139, size: 256, elements: !980)
!980 = !{!981, !982, !983}
!981 = !DIDerivedType(tag: DW_TAG_member, name: "_compound_pad_1", scope: !979, file: !744, line: 140, baseType: !136, size: 64)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "hpage_pinned_refcount", scope: !979, file: !744, line: 141, baseType: !768, size: 32, offset: 64)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_list", scope: !979, file: !744, line: 143, baseType: !143, size: 128, offset: 128)
!984 = !DIDerivedType(tag: DW_TAG_member, scope: !748, file: !744, line: 145, baseType: !985, size: 256)
!985 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !748, file: !744, line: 145, size: 256, elements: !986)
!986 = !{!987, !988, !990, !991, !2260}
!987 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_1", scope: !985, file: !744, line: 146, baseType: !136, size: 64)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "pmd_huge_pte", scope: !985, file: !744, line: 147, baseType: !989, size: 64, offset: 64)
!989 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgtable_t", file: !734, line: 509, baseType: !742)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_2", scope: !985, file: !744, line: 148, baseType: !136, size: 64, offset: 128)
!991 = !DIDerivedType(tag: DW_TAG_member, scope: !985, file: !744, line: 149, baseType: !992, size: 64, offset: 192)
!992 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !985, file: !744, line: 149, size: 64, elements: !993)
!993 = !{!994, !2259}
!994 = !DIDerivedType(tag: DW_TAG_member, name: "pt_mm", scope: !992, file: !744, line: 150, baseType: !995, size: 64)
!995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !996, size: 64)
!996 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_struct", file: !744, line: 388, size: 7296, elements: !997)
!997 = !{!998, !2255}
!998 = !DIDerivedType(tag: DW_TAG_member, scope: !996, file: !744, line: 389, baseType: !999, size: 7296)
!999 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !996, file: !744, line: 389, size: 7296, elements: !1000)
!1000 = !{!1001, !1039, !1040, !1041, !1045, !1046, !1047, !1048, !1049, !1056, !1057, !1058, !1059, !1060, !1061, !1062, !1063, !1064, !1065, !1066, !1067, !1068, !1069, !1070, !1071, !1072, !1073, !1074, !1075, !1076, !1077, !1078, !1079, !1080, !1081, !1082, !1083, !1084, !1085, !1086, !1090, !1098, !1101, !1147, !1148, !2239, !2240, !2243, !2244, !2245, !2248, !2249, !2250, !2253, !2254}
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !999, file: !744, line: 390, baseType: !1002, size: 64)
!1002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1003, size: 64)
!1003 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_area_struct", file: !744, line: 305, size: 1472, elements: !1004)
!1004 = !{!1005, !1006, !1007, !1008, !1009, !1010, !1011, !1012, !1019, !1020, !1025, !1026, !1029, !1033, !1034, !1035, !1036, !1037}
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "vm_start", scope: !1003, file: !744, line: 308, baseType: !136, size: 64)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "vm_end", scope: !1003, file: !744, line: 309, baseType: !136, size: 64, offset: 64)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "vm_next", scope: !1003, file: !744, line: 313, baseType: !1002, size: 64, offset: 128)
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "vm_prev", scope: !1003, file: !744, line: 313, baseType: !1002, size: 64, offset: 192)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "vm_rb", scope: !1003, file: !744, line: 315, baseType: !781, size: 192, align: 64, offset: 256)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_gap", scope: !1003, file: !744, line: 323, baseType: !136, size: 64, offset: 448)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "vm_mm", scope: !1003, file: !744, line: 327, baseType: !995, size: 64, offset: 512)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "vm_page_prot", scope: !1003, file: !744, line: 333, baseType: !1013, size: 64, offset: 576)
!1013 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprot_t", file: !734, line: 284, baseType: !1014)
!1014 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pgprot", file: !734, line: 284, size: 64, elements: !1015)
!1015 = !{!1016}
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "pgprot", scope: !1014, file: !734, line: 284, baseType: !1017, size: 64)
!1017 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprotval_t", file: !1018, line: 19, baseType: !136)
!1018 = !DIFile(filename: "./arch/x86/include/asm/pgtable_64_types.h", directory: "/home/lizy2001/genbc/linux")
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "vm_flags", scope: !1003, file: !744, line: 334, baseType: !136, size: 64, offset: 640)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "shared", scope: !1003, file: !744, line: 343, baseType: !1021, size: 256, offset: 704)
!1021 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1003, file: !744, line: 340, size: 256, elements: !1022)
!1022 = !{!1023, !1024}
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !1021, file: !744, line: 341, baseType: !781, size: 192, align: 64)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_last", scope: !1021, file: !744, line: 342, baseType: !136, size: 64, offset: 192)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma_chain", scope: !1003, file: !744, line: 351, baseType: !143, size: 128, offset: 960)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma", scope: !1003, file: !744, line: 353, baseType: !1027, size: 64, offset: 1088)
!1027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1028, size: 64)
!1028 = !DICompositeType(tag: DW_TAG_structure_type, name: "anon_vma", file: !744, line: 353, flags: DIFlagFwdDecl)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !1003, file: !744, line: 356, baseType: !1030, size: 64, offset: 1152)
!1030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1031, size: 64)
!1031 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1032)
!1032 = !DICompositeType(tag: DW_TAG_structure_type, name: "vm_operations_struct", file: !744, line: 356, flags: DIFlagFwdDecl)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "vm_pgoff", scope: !1003, file: !744, line: 359, baseType: !136, size: 64, offset: 1216)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "vm_file", scope: !1003, file: !744, line: 361, baseType: !374, size: 64, offset: 1280)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "vm_private_data", scope: !1003, file: !744, line: 362, baseType: !139, size: 64, offset: 1344)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "swap_readahead_info", scope: !1003, file: !744, line: 365, baseType: !792, size: 64, offset: 1408)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "vm_userfaultfd_ctx", scope: !1003, file: !744, line: 373, baseType: !1038, offset: 1472)
!1038 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_userfaultfd_ctx", file: !744, line: 296, elements: !199)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "mm_rb", scope: !999, file: !744, line: 391, baseType: !777, size: 64, offset: 64)
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache_seqnum", scope: !999, file: !744, line: 392, baseType: !442, size: 64, offset: 128)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !999, file: !744, line: 394, baseType: !1042, size: 64, offset: 192)
!1042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1043, size: 64)
!1043 = !DISubroutineType(types: !1044)
!1044 = !{!136, !374, !136, !136, !136, !136}
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_base", scope: !999, file: !744, line: 398, baseType: !136, size: 64, offset: 256)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_legacy_base", scope: !999, file: !744, line: 399, baseType: !136, size: 64, offset: 320)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "task_size", scope: !999, file: !744, line: 405, baseType: !136, size: 64, offset: 384)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "highest_vm_end", scope: !999, file: !744, line: 406, baseType: !136, size: 64, offset: 448)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !999, file: !744, line: 407, baseType: !1050, size: 64, offset: 512)
!1050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1051, size: 64)
!1051 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgd_t", file: !734, line: 286, baseType: !1052)
!1052 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !734, line: 286, size: 64, elements: !1053)
!1053 = !{!1054}
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !1052, file: !734, line: 286, baseType: !1055, size: 64)
!1055 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgdval_t", file: !1018, line: 18, baseType: !136)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "membarrier_state", scope: !999, file: !744, line: 416, baseType: !768, size: 32, offset: 576)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "mm_users", scope: !999, file: !744, line: 428, baseType: !768, size: 32, offset: 608)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "mm_count", scope: !999, file: !744, line: 437, baseType: !768, size: 32, offset: 640)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "has_pinned", scope: !999, file: !744, line: 447, baseType: !768, size: 32, offset: 672)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "pgtables_bytes", scope: !999, file: !744, line: 450, baseType: !792, size: 64, offset: 704)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "map_count", scope: !999, file: !744, line: 452, baseType: !132, size: 32, offset: 768)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "page_table_lock", scope: !999, file: !744, line: 454, baseType: !185, offset: 800)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_lock", scope: !999, file: !744, line: 457, baseType: !788, size: 256, offset: 832)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "mmlist", scope: !999, file: !744, line: 459, baseType: !143, size: 128, offset: 1088)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_rss", scope: !999, file: !744, line: 466, baseType: !136, size: 64, offset: 1216)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_vm", scope: !999, file: !744, line: 467, baseType: !136, size: 64, offset: 1280)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "total_vm", scope: !999, file: !744, line: 469, baseType: !136, size: 64, offset: 1344)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !999, file: !744, line: 470, baseType: !136, size: 64, offset: 1408)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "pinned_vm", scope: !999, file: !744, line: 471, baseType: !794, size: 64, offset: 1472)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "data_vm", scope: !999, file: !744, line: 472, baseType: !136, size: 64, offset: 1536)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "exec_vm", scope: !999, file: !744, line: 473, baseType: !136, size: 64, offset: 1600)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm", scope: !999, file: !744, line: 474, baseType: !136, size: 64, offset: 1664)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "def_flags", scope: !999, file: !744, line: 475, baseType: !136, size: 64, offset: 1728)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "arg_lock", scope: !999, file: !744, line: 477, baseType: !185, offset: 1792)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "start_code", scope: !999, file: !744, line: 478, baseType: !136, size: 64, offset: 1792)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "end_code", scope: !999, file: !744, line: 478, baseType: !136, size: 64, offset: 1856)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "start_data", scope: !999, file: !744, line: 478, baseType: !136, size: 64, offset: 1920)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "end_data", scope: !999, file: !744, line: 478, baseType: !136, size: 64, offset: 1984)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "start_brk", scope: !999, file: !744, line: 479, baseType: !136, size: 64, offset: 2048)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "brk", scope: !999, file: !744, line: 479, baseType: !136, size: 64, offset: 2112)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "start_stack", scope: !999, file: !744, line: 479, baseType: !136, size: 64, offset: 2176)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "arg_start", scope: !999, file: !744, line: 480, baseType: !136, size: 64, offset: 2240)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "arg_end", scope: !999, file: !744, line: 480, baseType: !136, size: 64, offset: 2304)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "env_start", scope: !999, file: !744, line: 480, baseType: !136, size: 64, offset: 2368)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "env_end", scope: !999, file: !744, line: 480, baseType: !136, size: 64, offset: 2432)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "saved_auxv", scope: !999, file: !744, line: 482, baseType: !1087, size: 2816, offset: 2496)
!1087 = !DICompositeType(tag: DW_TAG_array_type, baseType: !136, size: 2816, elements: !1088)
!1088 = !{!1089}
!1089 = !DISubrange(count: 44)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "rss_stat", scope: !999, file: !744, line: 488, baseType: !1091, size: 256, offset: 5312)
!1091 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_rss_stat", file: !1092, line: 60, size: 256, elements: !1093)
!1092 = !DIFile(filename: "./include/linux/mm_types_task.h", directory: "/home/lizy2001/genbc/linux")
!1093 = !{!1094}
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1091, file: !1092, line: 61, baseType: !1095, size: 256)
!1095 = !DICompositeType(tag: DW_TAG_array_type, baseType: !792, size: 256, elements: !1096)
!1096 = !{!1097}
!1097 = !DISubrange(count: 4)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "binfmt", scope: !999, file: !744, line: 490, baseType: !1099, size: 64, offset: 5568)
!1099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1100, size: 64)
!1100 = !DICompositeType(tag: DW_TAG_structure_type, name: "linux_binfmt", file: !744, line: 490, flags: DIFlagFwdDecl)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !999, file: !744, line: 493, baseType: !1102, size: 896, offset: 5632)
!1102 = !DIDerivedType(tag: DW_TAG_typedef, name: "mm_context_t", file: !1103, line: 53, baseType: !1104)
!1103 = !DIFile(filename: "./arch/x86/include/asm/mmu.h", directory: "/home/lizy2001/genbc/linux")
!1104 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1103, line: 13, size: 896, elements: !1105)
!1105 = !{!1106, !1107, !1108, !1109, !1112, !1113, !1120, !1121, !1141, !1142, !1143}
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_id", scope: !1104, file: !1103, line: 18, baseType: !442, size: 64)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_gen", scope: !1104, file: !1103, line: 28, baseType: !794, size: 64, offset: 64)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "ldt_usr_sem", scope: !1104, file: !1103, line: 31, baseType: !788, size: 256, offset: 128)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "ldt", scope: !1104, file: !1103, line: 32, baseType: !1110, size: 64, offset: 384)
!1110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1111, size: 64)
!1111 = !DICompositeType(tag: DW_TAG_structure_type, name: "ldt_struct", file: !1103, line: 32, flags: DIFlagFwdDecl)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "ia32_compat", scope: !1104, file: !1103, line: 37, baseType: !339, size: 16, offset: 448)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1104, file: !1103, line: 40, baseType: !1114, size: 192, offset: 512)
!1114 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mutex", file: !1115, line: 53, size: 192, elements: !1116)
!1115 = !DIFile(filename: "./include/linux/mutex.h", directory: "/home/lizy2001/genbc/linux")
!1116 = !{!1117, !1118, !1119}
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1114, file: !1115, line: 54, baseType: !792, size: 64)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !1114, file: !1115, line: 55, baseType: !185, offset: 64)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !1114, file: !1115, line: 59, baseType: !143, size: 128, offset: 64)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "vdso", scope: !1104, file: !1103, line: 41, baseType: !139, size: 64, offset: 704)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "vdso_image", scope: !1104, file: !1103, line: 42, baseType: !1122, size: 64, offset: 768)
!1122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1123, size: 64)
!1123 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1124)
!1124 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vdso_image", file: !1125, line: 13, size: 896, elements: !1126)
!1125 = !DIFile(filename: "./arch/x86/include/asm/vdso.h", directory: "/home/lizy2001/genbc/linux")
!1126 = !{!1127, !1128, !1129, !1130, !1131, !1132, !1133, !1134, !1135, !1136, !1137, !1138, !1139, !1140}
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1124, file: !1125, line: 14, baseType: !139, size: 64)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1124, file: !1125, line: 15, baseType: !136, size: 64, offset: 64)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "alt", scope: !1124, file: !1125, line: 17, baseType: !136, size: 64, offset: 128)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "alt_len", scope: !1124, file: !1125, line: 17, baseType: !136, size: 64, offset: 192)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_start", scope: !1124, file: !1125, line: 19, baseType: !93, size: 64, offset: 256)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_page", scope: !1124, file: !1125, line: 21, baseType: !93, size: 64, offset: 320)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "sym_pvclock_page", scope: !1124, file: !1125, line: 22, baseType: !93, size: 64, offset: 384)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "sym_hvclock_page", scope: !1124, file: !1125, line: 23, baseType: !93, size: 64, offset: 448)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "sym_timens_page", scope: !1124, file: !1125, line: 24, baseType: !93, size: 64, offset: 512)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "sym_VDSO32_NOTE_MASK", scope: !1124, file: !1125, line: 25, baseType: !93, size: 64, offset: 576)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_sigreturn", scope: !1124, file: !1125, line: 26, baseType: !93, size: 64, offset: 640)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_rt_sigreturn", scope: !1124, file: !1125, line: 27, baseType: !93, size: 64, offset: 704)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_vsyscall", scope: !1124, file: !1125, line: 28, baseType: !93, size: 64, offset: 768)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "sym_int80_landing_pad", scope: !1124, file: !1125, line: 29, baseType: !93, size: 64, offset: 832)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "perf_rdpmc_allowed", scope: !1104, file: !1103, line: 44, baseType: !768, size: 32, offset: 832)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "pkey_allocation_map", scope: !1104, file: !1103, line: 50, baseType: !880, size: 16, offset: 864)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "execute_only_pkey", scope: !1104, file: !1103, line: 51, baseType: !1144, size: 16, offset: 880)
!1144 = !DIDerivedType(tag: DW_TAG_typedef, name: "s16", file: !438, line: 18, baseType: !1145)
!1145 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s16", file: !179, line: 23, baseType: !1146)
!1146 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !999, file: !744, line: 495, baseType: !136, size: 64, offset: 6528)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "core_state", scope: !999, file: !744, line: 497, baseType: !1149, size: 64, offset: 6592)
!1149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1150, size: 64)
!1150 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_state", file: !744, line: 381, size: 384, elements: !1151)
!1151 = !{!1152, !1153, !2238}
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !1150, file: !744, line: 382, baseType: !768, size: 32)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "dumper", scope: !1150, file: !744, line: 383, baseType: !1154, size: 128, offset: 64)
!1154 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_thread", file: !744, line: 376, size: 128, elements: !1155)
!1155 = !{!1156, !2236}
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !1154, file: !744, line: 377, baseType: !1157, size: 64)
!1157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1158, size: 64)
!1158 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_struct", file: !1159, line: 640, size: 48640, elements: !1160)
!1159 = !DIFile(filename: "./include/linux/sched.h", directory: "/home/lizy2001/genbc/linux")
!1160 = !{!1161, !1167, !1168, !1169, !1175, !1176, !1177, !1178, !1179, !1180, !1181, !1182, !1186, !1204, !1215, !1299, !1300, !1301, !1312, !1313, !1315, !1316, !1317, !1318, !1324, !1325, !1326, !1327, !1328, !1329, !1330, !1331, !1332, !1333, !1334, !1335, !1336, !1337, !1338, !1339, !1397, !1400, !1401, !1402, !1403, !1404, !1405, !1406, !1407, !1408, !1409, !1435, !1437, !1438, !1439, !1451, !1452, !1453, !1454, !1455, !1456, !1462, !1463, !1464, !1465, !1466, !1467, !1468, !1480, !1485, !1669, !1670, !1671, !1672, !1676, !1679, !1682, !1685, !1688, !1692, !1793, !1822, !1823, !1824, !1825, !1826, !1827, !1828, !1829, !1830, !1839, !1840, !1841, !1842, !1843, !1848, !1849, !1850, !1853, !1854, !1857, !1860, !1863, !1866, !1908, !1911, !1912, !1991, !1992, !1995, !1996, !1999, !2000, !2001, !2005, !2006, !2007, !2020, !2021, !2022, !2032, !2037, !2040, !2046, !2047, !2048, !2049, !2050, !2051, !2052, !2053, !2057, !2058, !2059, !2060, !2061, !2062, !2063, !2064, !2065}
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "thread_info", scope: !1158, file: !1159, line: 646, baseType: !1162, size: 128)
!1162 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_info", file: !1163, line: 56, size: 128, elements: !1164)
!1163 = !DIFile(filename: "./arch/x86/include/asm/thread_info.h", directory: "/home/lizy2001/genbc/linux")
!1164 = !{!1165, !1166}
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1162, file: !1163, line: 57, baseType: !136, size: 64)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !1162, file: !1163, line: 58, baseType: !437, size: 32, offset: 64)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1158, file: !1159, line: 649, baseType: !134, size: 64, offset: 128)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !1158, file: !1159, line: 657, baseType: !139, size: 64, offset: 192)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1158, file: !1159, line: 658, baseType: !1170, size: 32, offset: 256)
!1170 = !DIDerivedType(tag: DW_TAG_typedef, name: "refcount_t", file: !1171, line: 113, baseType: !1172)
!1171 = !DIFile(filename: "./include/linux/refcount.h", directory: "/home/lizy2001/genbc/linux")
!1172 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "refcount_struct", file: !1171, line: 111, size: 32, elements: !1173)
!1173 = !{!1174}
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !1172, file: !1171, line: 112, baseType: !768, size: 32)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1158, file: !1159, line: 660, baseType: !7, size: 32, offset: 288)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace", scope: !1158, file: !1159, line: 661, baseType: !7, size: 32, offset: 320)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1158, file: !1159, line: 684, baseType: !132, size: 32, offset: 352)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1158, file: !1159, line: 686, baseType: !132, size: 32, offset: 384)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "static_prio", scope: !1158, file: !1159, line: 687, baseType: !132, size: 32, offset: 416)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "normal_prio", scope: !1158, file: !1159, line: 688, baseType: !132, size: 32, offset: 448)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "rt_priority", scope: !1158, file: !1159, line: 689, baseType: !7, size: 32, offset: 480)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "sched_class", scope: !1158, file: !1159, line: 691, baseType: !1183, size: 64, offset: 512)
!1183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1184, size: 64)
!1184 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1185)
!1185 = !DICompositeType(tag: DW_TAG_structure_type, name: "sched_class", file: !1159, line: 691, flags: DIFlagFwdDecl)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "se", scope: !1158, file: !1159, line: 692, baseType: !1187, size: 832, offset: 576)
!1187 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_entity", file: !1159, line: 451, size: 832, elements: !1188)
!1188 = !{!1189, !1194, !1195, !1196, !1197, !1198, !1199, !1200, !1201, !1202}
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "load", scope: !1187, file: !1159, line: 453, baseType: !1190, size: 128)
!1190 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "load_weight", file: !1159, line: 325, size: 128, elements: !1191)
!1191 = !{!1192, !1193}
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1190, file: !1159, line: 326, baseType: !136, size: 64)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "inv_weight", scope: !1190, file: !1159, line: 327, baseType: !437, size: 32, offset: 64)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "run_node", scope: !1187, file: !1159, line: 454, baseType: !781, size: 192, align: 64, offset: 128)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "group_node", scope: !1187, file: !1159, line: 455, baseType: !143, size: 128, offset: 320)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1187, file: !1159, line: 456, baseType: !7, size: 32, offset: 448)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "exec_start", scope: !1187, file: !1159, line: 458, baseType: !442, size: 64, offset: 512)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !1187, file: !1159, line: 459, baseType: !442, size: 64, offset: 576)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "vruntime", scope: !1187, file: !1159, line: 460, baseType: !442, size: 64, offset: 640)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "prev_sum_exec_runtime", scope: !1187, file: !1159, line: 461, baseType: !442, size: 64, offset: 704)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "nr_migrations", scope: !1187, file: !1159, line: 463, baseType: !442, size: 64, offset: 768)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "statistics", scope: !1187, file: !1159, line: 465, baseType: !1203, offset: 832)
!1203 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_statistics", file: !1159, line: 415, elements: !199)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1158, file: !1159, line: 693, baseType: !1205, size: 384, offset: 1408)
!1205 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_rt_entity", file: !1159, line: 489, size: 384, elements: !1206)
!1206 = !{!1207, !1208, !1209, !1210, !1211, !1212, !1213}
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "run_list", scope: !1205, file: !1159, line: 490, baseType: !143, size: 128)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1205, file: !1159, line: 491, baseType: !136, size: 64, offset: 128)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_stamp", scope: !1205, file: !1159, line: 492, baseType: !136, size: 64, offset: 192)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "time_slice", scope: !1205, file: !1159, line: 493, baseType: !7, size: 32, offset: 256)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1205, file: !1159, line: 494, baseType: !339, size: 16, offset: 288)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "on_list", scope: !1205, file: !1159, line: 495, baseType: !339, size: 16, offset: 304)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !1205, file: !1159, line: 497, baseType: !1214, size: 64, offset: 320)
!1214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1205, size: 64)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "dl", scope: !1158, file: !1159, line: 697, baseType: !1216, size: 1792, offset: 1792)
!1216 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_dl_entity", file: !1159, line: 507, size: 1792, elements: !1217)
!1217 = !{!1218, !1219, !1220, !1221, !1222, !1223, !1224, !1225, !1226, !1227, !1228, !1229, !1230, !1231, !1296, !1297}
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !1216, file: !1159, line: 508, baseType: !781, size: 192, align: 64)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "dl_runtime", scope: !1216, file: !1159, line: 515, baseType: !442, size: 64, offset: 192)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "dl_deadline", scope: !1216, file: !1159, line: 516, baseType: !442, size: 64, offset: 256)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "dl_period", scope: !1216, file: !1159, line: 517, baseType: !442, size: 64, offset: 320)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "dl_bw", scope: !1216, file: !1159, line: 518, baseType: !442, size: 64, offset: 384)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "dl_density", scope: !1216, file: !1159, line: 519, baseType: !442, size: 64, offset: 448)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "runtime", scope: !1216, file: !1159, line: 526, baseType: !798, size: 64, offset: 512)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", scope: !1216, file: !1159, line: 527, baseType: !442, size: 64, offset: 576)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1216, file: !1159, line: 528, baseType: !7, size: 32, offset: 640)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "dl_throttled", scope: !1216, file: !1159, line: 554, baseType: !7, size: 1, offset: 672, flags: DIFlagBitField, extraData: i64 672)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "dl_yielded", scope: !1216, file: !1159, line: 555, baseType: !7, size: 1, offset: 673, flags: DIFlagBitField, extraData: i64 672)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "dl_non_contending", scope: !1216, file: !1159, line: 556, baseType: !7, size: 1, offset: 674, flags: DIFlagBitField, extraData: i64 672)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "dl_overrun", scope: !1216, file: !1159, line: 557, baseType: !7, size: 1, offset: 675, flags: DIFlagBitField, extraData: i64 672)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "dl_timer", scope: !1216, file: !1159, line: 563, baseType: !1232, size: 512, offset: 704)
!1232 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer", file: !14, line: 118, size: 512, elements: !1233)
!1233 = !{!1234, !1242, !1243, !1248, !1291, !1293, !1294, !1295}
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1232, file: !14, line: 119, baseType: !1235, size: 256)
!1235 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_node", file: !1236, line: 9, size: 256, elements: !1237)
!1236 = !DIFile(filename: "./include/linux/timerqueue.h", directory: "/home/lizy2001/genbc/linux")
!1237 = !{!1238, !1239}
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1235, file: !1236, line: 10, baseType: !781, size: 192, align: 64)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1235, file: !1236, line: 11, baseType: !1240, size: 64, offset: 192)
!1240 = !DIDerivedType(tag: DW_TAG_typedef, name: "ktime_t", file: !1241, line: 29, baseType: !798)
!1241 = !DIFile(filename: "./include/linux/ktime.h", directory: "/home/lizy2001/genbc/linux")
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "_softexpires", scope: !1232, file: !14, line: 120, baseType: !1240, size: 64, offset: 256)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !1232, file: !14, line: 121, baseType: !1244, size: 64, offset: 320)
!1244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1245, size: 64)
!1245 = !DISubroutineType(types: !1246)
!1246 = !{!13, !1247}
!1247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1232, size: 64)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1232, file: !14, line: 122, baseType: !1249, size: 64, offset: 384)
!1249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1250, size: 64)
!1250 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_clock_base", file: !14, line: 159, size: 512, align: 512, elements: !1251)
!1251 = !{!1252, !1272, !1273, !1276, !1281, !1282, !1286, !1290}
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_base", scope: !1250, file: !14, line: 160, baseType: !1253, size: 64)
!1253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1254, size: 64)
!1254 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_cpu_base", file: !14, line: 214, size: 4608, align: 512, elements: !1255)
!1255 = !{!1256, !1257, !1258, !1259, !1260, !1261, !1262, !1263, !1264, !1265, !1266, !1267, !1268}
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1254, file: !14, line: 215, baseType: !801)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !1254, file: !14, line: 216, baseType: !7, size: 32)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "active_bases", scope: !1254, file: !14, line: 217, baseType: !7, size: 32, offset: 32)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "clock_was_set_seq", scope: !1254, file: !14, line: 218, baseType: !7, size: 32, offset: 64)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "hres_active", scope: !1254, file: !14, line: 219, baseType: !7, size: 1, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "in_hrtirq", scope: !1254, file: !14, line: 220, baseType: !7, size: 1, offset: 97, flags: DIFlagBitField, extraData: i64 96)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "hang_detected", scope: !1254, file: !14, line: 221, baseType: !7, size: 1, offset: 98, flags: DIFlagBitField, extraData: i64 96)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_activated", scope: !1254, file: !14, line: 222, baseType: !7, size: 1, offset: 99, flags: DIFlagBitField, extraData: i64 96)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "expires_next", scope: !1254, file: !14, line: 233, baseType: !1240, size: 64, offset: 128)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "next_timer", scope: !1254, file: !14, line: 234, baseType: !1247, size: 64, offset: 192)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_expires_next", scope: !1254, file: !14, line: 235, baseType: !1240, size: 64, offset: 256)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_next_timer", scope: !1254, file: !14, line: 236, baseType: !1247, size: 64, offset: 320)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "clock_base", scope: !1254, file: !14, line: 237, baseType: !1269, size: 4096, offset: 512)
!1269 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1250, size: 4096, elements: !1270)
!1270 = !{!1271}
!1271 = !DISubrange(count: 8)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1250, file: !14, line: 161, baseType: !7, size: 32, offset: 64)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !1250, file: !14, line: 162, baseType: !1274, size: 32, offset: 96)
!1274 = !DIDerivedType(tag: DW_TAG_typedef, name: "clockid_t", file: !138, line: 27, baseType: !1275)
!1275 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clockid_t", file: !331, line: 96, baseType: !132)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !1250, file: !14, line: 163, baseType: !1277, size: 32, offset: 128)
!1277 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_raw_spinlock_t", file: !410, line: 276, baseType: !1278)
!1278 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_raw_spinlock", file: !410, line: 276, size: 32, elements: !1279)
!1279 = !{!1280}
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !1278, file: !410, line: 276, baseType: !414, size: 32)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "running", scope: !1250, file: !14, line: 164, baseType: !1247, size: 64, offset: 192)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !1250, file: !14, line: 165, baseType: !1283, size: 128, offset: 256)
!1283 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_head", file: !1236, line: 14, size: 128, elements: !1284)
!1284 = !{!1285}
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !1283, file: !1236, line: 15, baseType: !773, size: 128)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "get_time", scope: !1250, file: !14, line: 166, baseType: !1287, size: 64, offset: 384)
!1287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1288, size: 64)
!1288 = !DISubroutineType(types: !1289)
!1289 = !{!1240}
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1250, file: !14, line: 167, baseType: !1240, size: 64, offset: 448)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1232, file: !14, line: 123, baseType: !1292, size: 8, offset: 448)
!1292 = !DIDerivedType(tag: DW_TAG_typedef, name: "u8", file: !438, line: 17, baseType: !178)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "is_rel", scope: !1232, file: !14, line: 124, baseType: !1292, size: 8, offset: 456)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "is_soft", scope: !1232, file: !14, line: 125, baseType: !1292, size: 8, offset: 464)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "is_hard", scope: !1232, file: !14, line: 126, baseType: !1292, size: 8, offset: 472)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "inactive_timer", scope: !1216, file: !1159, line: 572, baseType: !1232, size: 512, offset: 1216)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "pi_se", scope: !1216, file: !1159, line: 580, baseType: !1298, size: 64, offset: 1728)
!1298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1216, size: 64)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !1158, file: !1159, line: 721, baseType: !7, size: 32, offset: 3584)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cpus_allowed", scope: !1158, file: !1159, line: 722, baseType: !132, size: 32, offset: 3616)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_ptr", scope: !1158, file: !1159, line: 723, baseType: !1302, size: 64, offset: 3648)
!1302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1303, size: 64)
!1303 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1304)
!1304 = !DIDerivedType(tag: DW_TAG_typedef, name: "cpumask_t", file: !1305, line: 17, baseType: !1306)
!1305 = !DIFile(filename: "./include/linux/cpumask.h", directory: "/home/lizy2001/genbc/linux")
!1306 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpumask", file: !1305, line: 17, size: 64, elements: !1307)
!1307 = !{!1308}
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !1306, file: !1305, line: 17, baseType: !1309, size: 64)
!1309 = !DICompositeType(tag: DW_TAG_array_type, baseType: !136, size: 64, elements: !1310)
!1310 = !{!1311}
!1311 = !DISubrange(count: 1)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_mask", scope: !1158, file: !1159, line: 724, baseType: !1304, size: 64, offset: 3712)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "sched_info", scope: !1158, file: !1159, line: 749, baseType: !1314, offset: 3776)
!1314 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_info", file: !1159, line: 290, elements: !199)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !1158, file: !1159, line: 751, baseType: !143, size: 128, offset: 3776)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "mm", scope: !1158, file: !1159, line: 757, baseType: !995, size: 64, offset: 3904)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "active_mm", scope: !1158, file: !1159, line: 758, baseType: !995, size: 64, offset: 3968)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache", scope: !1158, file: !1159, line: 761, baseType: !1319, size: 320, offset: 4032)
!1319 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmacache", file: !1092, line: 34, size: 320, elements: !1320)
!1320 = !{!1321, !1322}
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "seqnum", scope: !1319, file: !1092, line: 35, baseType: !442, size: 64)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "vmas", scope: !1319, file: !1092, line: 36, baseType: !1323, size: 256, offset: 64)
!1323 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1002, size: 256, elements: !1096)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "exit_state", scope: !1158, file: !1159, line: 766, baseType: !132, size: 32, offset: 4352)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "exit_code", scope: !1158, file: !1159, line: 767, baseType: !132, size: 32, offset: 4384)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "exit_signal", scope: !1158, file: !1159, line: 768, baseType: !132, size: 32, offset: 4416)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "pdeath_signal", scope: !1158, file: !1159, line: 770, baseType: !132, size: 32, offset: 4448)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "jobctl", scope: !1158, file: !1159, line: 772, baseType: !136, size: 64, offset: 4480)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !1158, file: !1159, line: 775, baseType: !7, size: 32, offset: 4544)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "sched_reset_on_fork", scope: !1158, file: !1159, line: 778, baseType: !7, size: 1, offset: 4576, flags: DIFlagBitField, extraData: i64 4576)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "sched_contributes_to_load", scope: !1158, file: !1159, line: 779, baseType: !7, size: 1, offset: 4577, flags: DIFlagBitField, extraData: i64 4576)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "sched_migrated", scope: !1158, file: !1159, line: 780, baseType: !7, size: 1, offset: 4578, flags: DIFlagBitField, extraData: i64 4576)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "sched_remote_wakeup", scope: !1158, file: !1159, line: 803, baseType: !7, size: 1, offset: 4608, flags: DIFlagBitField, extraData: i64 4608)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "in_execve", scope: !1158, file: !1159, line: 806, baseType: !7, size: 1, offset: 4609, flags: DIFlagBitField, extraData: i64 4608)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "in_iowait", scope: !1158, file: !1159, line: 807, baseType: !7, size: 1, offset: 4610, flags: DIFlagBitField, extraData: i64 4608)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "restore_sigmask", scope: !1158, file: !1159, line: 809, baseType: !7, size: 1, offset: 4611, flags: DIFlagBitField, extraData: i64 4608)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "brk_randomized", scope: !1158, file: !1159, line: 815, baseType: !7, size: 1, offset: 4612, flags: DIFlagBitField, extraData: i64 4608)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_flags", scope: !1158, file: !1159, line: 831, baseType: !136, size: 64, offset: 4672)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "restart_block", scope: !1158, file: !1159, line: 833, baseType: !1340, size: 384, offset: 4736)
!1340 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "restart_block", file: !19, line: 25, size: 384, elements: !1341)
!1341 = !{!1342, !1347}
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1340, file: !19, line: 26, baseType: !1343, size: 64)
!1343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1344, size: 64)
!1344 = !DISubroutineType(types: !1345)
!1345 = !{!93, !1346}
!1346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1340, size: 64)
!1347 = !DIDerivedType(tag: DW_TAG_member, scope: !1340, file: !19, line: 27, baseType: !1348, size: 320, offset: 64)
!1348 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1340, file: !19, line: 27, size: 320, elements: !1349)
!1349 = !{!1350, !1360, !1387}
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "futex", scope: !1348, file: !19, line: 36, baseType: !1351, size: 320)
!1351 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1348, file: !19, line: 29, size: 320, elements: !1352)
!1352 = !{!1353, !1355, !1356, !1357, !1358, !1359}
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr", scope: !1351, file: !19, line: 30, baseType: !1354, size: 64)
!1354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !437, size: 64)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1351, file: !19, line: 31, baseType: !437, size: 32, offset: 64)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1351, file: !19, line: 32, baseType: !437, size: 32, offset: 96)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "bitset", scope: !1351, file: !19, line: 33, baseType: !437, size: 32, offset: 128)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !1351, file: !19, line: 34, baseType: !442, size: 64, offset: 192)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr2", scope: !1351, file: !19, line: 35, baseType: !1354, size: 64, offset: 256)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "nanosleep", scope: !1348, file: !19, line: 46, baseType: !1361, size: 192)
!1361 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1348, file: !19, line: 38, size: 192, elements: !1362)
!1362 = !{!1363, !1364, !1365, !1386}
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !1361, file: !19, line: 39, baseType: !1274, size: 32)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1361, file: !19, line: 40, baseType: !18, size: 32, offset: 32)
!1365 = !DIDerivedType(tag: DW_TAG_member, scope: !1361, file: !19, line: 41, baseType: !1366, size: 64, offset: 64)
!1366 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1361, file: !19, line: 41, size: 64, elements: !1367)
!1367 = !{!1368, !1376}
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "rmtp", scope: !1366, file: !19, line: 42, baseType: !1369, size: 64)
!1369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1370, size: 64)
!1370 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__kernel_timespec", file: !1371, line: 7, size: 128, elements: !1372)
!1371 = !DIFile(filename: "./include/uapi/linux/time_types.h", directory: "/home/lizy2001/genbc/linux")
!1372 = !{!1373, !1375}
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1370, file: !1371, line: 8, baseType: !1374, size: 64)
!1374 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_time64_t", file: !331, line: 93, baseType: !551)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1370, file: !1371, line: 9, baseType: !551, size: 64, offset: 64)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "compat_rmtp", scope: !1366, file: !19, line: 43, baseType: !1377, size: 64)
!1377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1378, size: 64)
!1378 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "old_timespec32", file: !1379, line: 7, size: 64, elements: !1380)
!1379 = !DIFile(filename: "./include/vdso/time32.h", directory: "/home/lizy2001/genbc/linux")
!1380 = !{!1381, !1385}
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1378, file: !1379, line: 8, baseType: !1382, size: 32)
!1382 = !DIDerivedType(tag: DW_TAG_typedef, name: "old_time32_t", file: !1379, line: 5, baseType: !1383)
!1383 = !DIDerivedType(tag: DW_TAG_typedef, name: "s32", file: !438, line: 20, baseType: !1384)
!1384 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s32", file: !179, line: 26, baseType: !132)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1378, file: !1379, line: 9, baseType: !1383, size: 32, offset: 32)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1361, file: !19, line: 45, baseType: !442, size: 64, offset: 128)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !1348, file: !19, line: 54, baseType: !1388, size: 256)
!1388 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1348, file: !19, line: 48, size: 256, elements: !1389)
!1389 = !{!1390, !1393, !1394, !1395, !1396}
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "ufds", scope: !1388, file: !19, line: 49, baseType: !1391, size: 64)
!1391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1392, size: 64)
!1392 = !DICompositeType(tag: DW_TAG_structure_type, name: "pollfd", file: !19, line: 14, flags: DIFlagFwdDecl)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "nfds", scope: !1388, file: !19, line: 50, baseType: !132, size: 32, offset: 64)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "has_timeout", scope: !1388, file: !19, line: 51, baseType: !132, size: 32, offset: 96)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1388, file: !19, line: 52, baseType: !136, size: 64, offset: 128)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1388, file: !19, line: 53, baseType: !136, size: 64, offset: 192)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !1158, file: !1159, line: 835, baseType: !1398, size: 32, offset: 5120)
!1398 = !DIDerivedType(tag: DW_TAG_typedef, name: "pid_t", file: !138, line: 22, baseType: !1399)
!1399 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_pid_t", file: !331, line: 28, baseType: !132)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "tgid", scope: !1158, file: !1159, line: 836, baseType: !1398, size: 32, offset: 5152)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "stack_canary", scope: !1158, file: !1159, line: 840, baseType: !136, size: 64, offset: 5184)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "real_parent", scope: !1158, file: !1159, line: 849, baseType: !1157, size: 64, offset: 5248)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1158, file: !1159, line: 852, baseType: !1157, size: 64, offset: 5312)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1158, file: !1159, line: 857, baseType: !143, size: 128, offset: 5376)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !1158, file: !1159, line: 858, baseType: !143, size: 128, offset: 5504)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "group_leader", scope: !1158, file: !1159, line: 859, baseType: !1157, size: 64, offset: 5632)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "ptraced", scope: !1158, file: !1159, line: 867, baseType: !143, size: 128, offset: 5696)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_entry", scope: !1158, file: !1159, line: 868, baseType: !143, size: 128, offset: 5824)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "thread_pid", scope: !1158, file: !1159, line: 871, baseType: !1410, size: 64, offset: 5952)
!1410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1411, size: 64)
!1411 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pid", file: !40, line: 59, size: 768, elements: !1412)
!1412 = !{!1413, !1414, !1415, !1416, !1418, !1419, !1426, !1427}
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1411, file: !40, line: 61, baseType: !1170, size: 32)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1411, file: !40, line: 62, baseType: !7, size: 32, offset: 32)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1411, file: !40, line: 63, baseType: !185, offset: 64)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !1411, file: !40, line: 65, baseType: !1417, size: 256, offset: 64)
!1417 = !DICompositeType(tag: DW_TAG_array_type, baseType: !656, size: 256, elements: !1096)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "inodes", scope: !1411, file: !40, line: 66, baseType: !656, size: 64, offset: 320)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "wait_pidfd", scope: !1411, file: !40, line: 68, baseType: !1420, size: 128, offset: 384)
!1420 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_head_t", file: !1421, line: 40, baseType: !1422)
!1421 = !DIFile(filename: "./include/linux/wait.h", directory: "/home/lizy2001/genbc/linux")
!1422 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_head", file: !1421, line: 36, size: 128, elements: !1423)
!1423 = !{!1424, !1425}
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1422, file: !1421, line: 37, baseType: !185)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1422, file: !1421, line: 38, baseType: !143, size: 128)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1411, file: !40, line: 69, baseType: !387, size: 128, align: 64, offset: 512)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "numbers", scope: !1411, file: !40, line: 70, baseType: !1428, size: 128, offset: 640)
!1428 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1429, size: 128, elements: !1310)
!1429 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "upid", file: !40, line: 54, size: 128, elements: !1430)
!1430 = !{!1431, !1432}
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !1429, file: !40, line: 55, baseType: !132, size: 32)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !1429, file: !40, line: 56, baseType: !1433, size: 64, offset: 64)
!1433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1434, size: 64)
!1434 = !DICompositeType(tag: DW_TAG_structure_type, name: "pid_namespace", file: !40, line: 56, flags: DIFlagFwdDecl)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "pid_links", scope: !1158, file: !1159, line: 872, baseType: !1436, size: 512, offset: 6016)
!1436 = !DICompositeType(tag: DW_TAG_array_type, baseType: !660, size: 512, elements: !1096)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "thread_group", scope: !1158, file: !1159, line: 873, baseType: !143, size: 128, offset: 6528)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "thread_node", scope: !1158, file: !1159, line: 874, baseType: !143, size: 128, offset: 6656)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "vfork_done", scope: !1158, file: !1159, line: 876, baseType: !1440, size: 64, offset: 6784)
!1440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1441, size: 64)
!1441 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "completion", file: !1442, line: 26, size: 192, elements: !1443)
!1442 = !DIFile(filename: "./include/linux/completion.h", directory: "/home/lizy2001/genbc/linux")
!1443 = !{!1444, !1445}
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !1441, file: !1442, line: 27, baseType: !7, size: 32)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !1441, file: !1442, line: 28, baseType: !1446, size: 128, offset: 64)
!1446 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swait_queue_head", file: !1447, line: 43, size: 128, elements: !1448)
!1447 = !DIFile(filename: "./include/linux/swait.h", directory: "/home/lizy2001/genbc/linux")
!1448 = !{!1449, !1450}
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1446, file: !1447, line: 44, baseType: !801)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "task_list", scope: !1446, file: !1447, line: 45, baseType: !143, size: 128)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "set_child_tid", scope: !1158, file: !1159, line: 879, baseType: !726, size: 64, offset: 6848)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "clear_child_tid", scope: !1158, file: !1159, line: 882, baseType: !726, size: 64, offset: 6912)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1158, file: !1159, line: 884, baseType: !442, size: 64, offset: 6976)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1158, file: !1159, line: 885, baseType: !442, size: 64, offset: 7040)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !1158, file: !1159, line: 890, baseType: !442, size: 64, offset: 7104)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !1158, file: !1159, line: 891, baseType: !1457, size: 128, offset: 7168)
!1457 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "prev_cputime", file: !1159, line: 242, size: 128, elements: !1458)
!1458 = !{!1459, !1460, !1461}
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1457, file: !1159, line: 244, baseType: !442, size: 64)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1457, file: !1159, line: 245, baseType: !442, size: 64, offset: 64)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1457, file: !1159, line: 246, baseType: !801, offset: 128)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !1158, file: !1159, line: 900, baseType: !136, size: 64, offset: 7296)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !1158, file: !1159, line: 901, baseType: !136, size: 64, offset: 7360)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "start_time", scope: !1158, file: !1159, line: 904, baseType: !442, size: 64, offset: 7424)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "start_boottime", scope: !1158, file: !1159, line: 907, baseType: !442, size: 64, offset: 7488)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !1158, file: !1159, line: 910, baseType: !136, size: 64, offset: 7552)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !1158, file: !1159, line: 911, baseType: !136, size: 64, offset: 7616)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !1158, file: !1159, line: 914, baseType: !1469, size: 640, offset: 7680)
!1469 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers", file: !1470, line: 123, size: 640, elements: !1471)
!1470 = !DIFile(filename: "./include/linux/posix-timers.h", directory: "/home/lizy2001/genbc/linux")
!1471 = !{!1472, !1478, !1479}
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "bases", scope: !1469, file: !1470, line: 124, baseType: !1473, size: 576)
!1473 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1474, size: 576, elements: !299)
!1474 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimer_base", file: !1470, line: 108, size: 192, elements: !1475)
!1475 = !{!1476, !1477}
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "nextevt", scope: !1474, file: !1470, line: 109, baseType: !442, size: 64)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "tqhead", scope: !1474, file: !1470, line: 110, baseType: !1283, size: 128, offset: 64)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "timers_active", scope: !1469, file: !1470, line: 125, baseType: !7, size: 32, offset: 576)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "expiry_active", scope: !1469, file: !1470, line: 126, baseType: !7, size: 32, offset: 608)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers_work", scope: !1158, file: !1159, line: 917, baseType: !1481, size: 192, offset: 8320)
!1481 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers_work", file: !1470, line: 134, size: 192, elements: !1482)
!1482 = !{!1483, !1484}
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !1481, file: !1470, line: 135, baseType: !387, size: 128, align: 64)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "scheduled", scope: !1481, file: !1470, line: 136, baseType: !7, size: 32, offset: 128)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "ptracer_cred", scope: !1158, file: !1159, line: 923, baseType: !1486, size: 64, offset: 8512)
!1486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1487, size: 64)
!1487 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1488)
!1488 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cred", file: !1489, line: 111, size: 1280, elements: !1490)
!1489 = !DIFile(filename: "./include/linux/cred.h", directory: "/home/lizy2001/genbc/linux")
!1490 = !{!1491, !1492, !1493, !1494, !1495, !1496, !1497, !1498, !1499, !1500, !1501, !1510, !1511, !1512, !1513, !1514, !1515, !1622, !1623, !1624, !1625, !1651, !1654, !1664}
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1488, file: !1489, line: 112, baseType: !768, size: 32)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1488, file: !1489, line: 120, baseType: !455, size: 32, offset: 32)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1488, file: !1489, line: 121, baseType: !463, size: 32, offset: 64)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "suid", scope: !1488, file: !1489, line: 122, baseType: !455, size: 32, offset: 96)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "sgid", scope: !1488, file: !1489, line: 123, baseType: !463, size: 32, offset: 128)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !1488, file: !1489, line: 124, baseType: !455, size: 32, offset: 160)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "egid", scope: !1488, file: !1489, line: 125, baseType: !463, size: 32, offset: 192)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "fsuid", scope: !1488, file: !1489, line: 126, baseType: !455, size: 32, offset: 224)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "fsgid", scope: !1488, file: !1489, line: 127, baseType: !463, size: 32, offset: 256)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "securebits", scope: !1488, file: !1489, line: 128, baseType: !7, size: 32, offset: 288)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "cap_inheritable", scope: !1488, file: !1489, line: 129, baseType: !1502, size: 64, offset: 320)
!1502 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_cap_t", file: !1503, line: 26, baseType: !1504)
!1503 = !DIFile(filename: "./include/linux/capability.h", directory: "/home/lizy2001/genbc/linux")
!1504 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_cap_struct", file: !1503, line: 24, size: 64, elements: !1505)
!1505 = !{!1506}
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !1504, file: !1503, line: 25, baseType: !1507, size: 64)
!1507 = !DICompositeType(tag: DW_TAG_array_type, baseType: !439, size: 64, elements: !1508)
!1508 = !{!1509}
!1509 = !DISubrange(count: 2)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "cap_permitted", scope: !1488, file: !1489, line: 130, baseType: !1502, size: 64, offset: 384)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "cap_effective", scope: !1488, file: !1489, line: 131, baseType: !1502, size: 64, offset: 448)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "cap_bset", scope: !1488, file: !1489, line: 132, baseType: !1502, size: 64, offset: 512)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "cap_ambient", scope: !1488, file: !1489, line: 133, baseType: !1502, size: 64, offset: 576)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "jit_keyring", scope: !1488, file: !1489, line: 135, baseType: !180, size: 8, offset: 640)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "session_keyring", scope: !1488, file: !1489, line: 137, baseType: !1516, size: 64, offset: 704)
!1516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1517, size: 64)
!1517 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key", file: !1518, line: 189, size: 1664, elements: !1519)
!1518 = !DIFile(filename: "./include/linux/key.h", directory: "/home/lizy2001/genbc/linux")
!1519 = !{!1520, !1521, !1524, !1529, !1530, !1533, !1534, !1539, !1540, !1541, !1542, !1544, !1545, !1546, !1547, !1548, !1586, !1607}
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1517, file: !1518, line: 190, baseType: !1170, size: 32)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !1517, file: !1518, line: 191, baseType: !1522, size: 32, offset: 32)
!1522 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_serial_t", file: !1518, line: 28, baseType: !1523)
!1523 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !138, line: 98, baseType: !1383)
!1524 = !DIDerivedType(tag: DW_TAG_member, scope: !1517, file: !1518, line: 192, baseType: !1525, size: 192, offset: 64)
!1525 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1517, file: !1518, line: 192, size: 192, elements: !1526)
!1526 = !{!1527, !1528}
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "graveyard_link", scope: !1525, file: !1518, line: 193, baseType: !143, size: 128)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "serial_node", scope: !1525, file: !1518, line: 194, baseType: !781, size: 192, align: 64)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "sem", scope: !1517, file: !1518, line: 199, baseType: !788, size: 256, offset: 256)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1517, file: !1518, line: 200, baseType: !1531, size: 64, offset: 512)
!1531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1532, size: 64)
!1532 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_user", file: !1518, line: 200, flags: DIFlagFwdDecl)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "security", scope: !1517, file: !1518, line: 201, baseType: !139, size: 64, offset: 576)
!1534 = !DIDerivedType(tag: DW_TAG_member, scope: !1517, file: !1518, line: 202, baseType: !1535, size: 64, offset: 640)
!1535 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1517, file: !1518, line: 202, size: 64, elements: !1536)
!1536 = !{!1537, !1538}
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "expiry", scope: !1535, file: !1518, line: 203, baseType: !557, size: 64)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "revoked_at", scope: !1535, file: !1518, line: 204, baseType: !557, size: 64)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "last_used_at", scope: !1517, file: !1518, line: 206, baseType: !557, size: 64, offset: 704)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1517, file: !1518, line: 207, baseType: !455, size: 32, offset: 768)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1517, file: !1518, line: 208, baseType: !463, size: 32, offset: 800)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !1517, file: !1518, line: 209, baseType: !1543, size: 32, offset: 832)
!1543 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_perm_t", file: !1518, line: 31, baseType: !577)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "quotalen", scope: !1517, file: !1518, line: 210, baseType: !339, size: 16, offset: 864)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "datalen", scope: !1517, file: !1518, line: 211, baseType: !339, size: 16, offset: 880)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1517, file: !1518, line: 215, baseType: !1146, size: 16, offset: 896)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1517, file: !1518, line: 222, baseType: !136, size: 64, offset: 960)
!1548 = !DIDerivedType(tag: DW_TAG_member, scope: !1517, file: !1518, line: 239, baseType: !1549, size: 320, offset: 1024)
!1549 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1517, file: !1518, line: 239, size: 320, elements: !1550)
!1550 = !{!1551, !1578}
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "index_key", scope: !1549, file: !1518, line: 240, baseType: !1552, size: 320)
!1552 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "keyring_index_key", file: !1518, line: 108, size: 320, elements: !1553)
!1553 = !{!1554, !1555, !1567, !1570, !1577}
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1552, file: !1518, line: 110, baseType: !136, size: 64)
!1555 = !DIDerivedType(tag: DW_TAG_member, scope: !1552, file: !1518, line: 111, baseType: !1556, size: 64, offset: 64)
!1556 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1552, file: !1518, line: 111, size: 64, elements: !1557)
!1557 = !{!1558, !1566}
!1558 = !DIDerivedType(tag: DW_TAG_member, scope: !1556, file: !1518, line: 112, baseType: !1559, size: 64)
!1559 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1556, file: !1518, line: 112, size: 64, elements: !1560)
!1560 = !{!1561, !1562}
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "desc_len", scope: !1559, file: !1518, line: 114, baseType: !880, size: 16)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !1559, file: !1518, line: 115, baseType: !1563, size: 48, offset: 16)
!1563 = !DICompositeType(tag: DW_TAG_array_type, baseType: !162, size: 48, elements: !1564)
!1564 = !{!1565}
!1565 = !DISubrange(count: 6)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1556, file: !1518, line: 121, baseType: !136, size: 64)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1552, file: !1518, line: 123, baseType: !1568, size: 64, offset: 128)
!1568 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1569, size: 64)
!1569 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_type", file: !1518, line: 96, flags: DIFlagFwdDecl)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !1552, file: !1518, line: 124, baseType: !1571, size: 64, offset: 192)
!1571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1572, size: 64)
!1572 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_tag", file: !1518, line: 102, size: 192, elements: !1573)
!1573 = !{!1574, !1575, !1576}
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1572, file: !1518, line: 103, baseType: !387, size: 128, align: 64)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1572, file: !1518, line: 104, baseType: !1170, size: 32, offset: 128)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "removed", scope: !1572, file: !1518, line: 105, baseType: !171, size: 8, offset: 160)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1552, file: !1518, line: 125, baseType: !223, size: 64, offset: 256)
!1578 = !DIDerivedType(tag: DW_TAG_member, scope: !1549, file: !1518, line: 241, baseType: !1579, size: 320)
!1579 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1549, file: !1518, line: 241, size: 320, elements: !1580)
!1580 = !{!1581, !1582, !1583, !1584, !1585}
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1579, file: !1518, line: 242, baseType: !136, size: 64)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "len_desc", scope: !1579, file: !1518, line: 243, baseType: !136, size: 64, offset: 64)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1579, file: !1518, line: 244, baseType: !1568, size: 64, offset: 128)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !1579, file: !1518, line: 245, baseType: !1571, size: 64, offset: 192)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1579, file: !1518, line: 246, baseType: !298, size: 64, offset: 256)
!1586 = !DIDerivedType(tag: DW_TAG_member, scope: !1517, file: !1518, line: 254, baseType: !1587, size: 256, offset: 1344)
!1587 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1517, file: !1518, line: 254, size: 256, elements: !1588)
!1588 = !{!1589, !1595}
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "payload", scope: !1587, file: !1518, line: 255, baseType: !1590, size: 256)
!1590 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "key_payload", file: !1518, line: 128, size: 256, elements: !1591)
!1591 = !{!1592, !1593}
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_data0", scope: !1590, file: !1518, line: 129, baseType: !139, size: 64)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1590, file: !1518, line: 130, baseType: !1594, size: 256)
!1594 = !DICompositeType(tag: DW_TAG_array_type, baseType: !139, size: 256, elements: !1096)
!1595 = !DIDerivedType(tag: DW_TAG_member, scope: !1587, file: !1518, line: 256, baseType: !1596, size: 256)
!1596 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1587, file: !1518, line: 256, size: 256, elements: !1597)
!1597 = !{!1598, !1599}
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "name_link", scope: !1596, file: !1518, line: 258, baseType: !143, size: 128)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !1596, file: !1518, line: 259, baseType: !1600, size: 128, offset: 128)
!1600 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array", file: !1601, line: 22, size: 128, elements: !1602)
!1601 = !DIFile(filename: "./include/linux/assoc_array.h", directory: "/home/lizy2001/genbc/linux")
!1602 = !{!1603, !1606}
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !1600, file: !1601, line: 23, baseType: !1604, size: 64)
!1604 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1605, size: 64)
!1605 = !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array_ptr", file: !1601, line: 23, flags: DIFlagFwdDecl)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "nr_leaves_on_tree", scope: !1600, file: !1601, line: 24, baseType: !136, size: 64, offset: 64)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_link", scope: !1517, file: !1518, line: 274, baseType: !1608, size: 64, offset: 1600)
!1608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1609, size: 64)
!1609 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_restriction", file: !1518, line: 170, size: 192, elements: !1610)
!1610 = !{!1611, !1620, !1621}
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !1609, file: !1518, line: 171, baseType: !1612, size: 64)
!1612 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_restrict_link_func_t", file: !1518, line: 165, baseType: !1613)
!1613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1614, size: 64)
!1614 = !DISubroutineType(types: !1615)
!1615 = !{!132, !1516, !1616, !1618, !1516}
!1616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1617, size: 64)
!1617 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1569)
!1618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1619, size: 64)
!1619 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1590)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1609, file: !1518, line: 172, baseType: !1516, size: 64, offset: 64)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "keytype", scope: !1609, file: !1518, line: 173, baseType: !1568, size: 64, offset: 128)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "process_keyring", scope: !1488, file: !1489, line: 138, baseType: !1516, size: 64, offset: 768)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "thread_keyring", scope: !1488, file: !1489, line: 139, baseType: !1516, size: 64, offset: 832)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "request_key_auth", scope: !1488, file: !1489, line: 140, baseType: !1516, size: 64, offset: 896)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1488, file: !1489, line: 145, baseType: !1626, size: 64, offset: 960)
!1626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1627, size: 64)
!1627 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "user_struct", file: !1628, line: 13, size: 896, elements: !1629)
!1628 = !DIFile(filename: "./include/linux/sched/user.h", directory: "/home/lizy2001/genbc/linux")
!1629 = !{!1630, !1631, !1632, !1633, !1634, !1635, !1636, !1637, !1638, !1639, !1640}
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !1627, file: !1628, line: 14, baseType: !1170, size: 32)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "processes", scope: !1627, file: !1628, line: 15, baseType: !768, size: 32, offset: 32)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "sigpending", scope: !1627, file: !1628, line: 16, baseType: !768, size: 32, offset: 64)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "epoll_watches", scope: !1627, file: !1628, line: 21, baseType: !792, size: 64, offset: 128)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "locked_shm", scope: !1627, file: !1628, line: 27, baseType: !136, size: 64, offset: 192)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "unix_inflight", scope: !1627, file: !1628, line: 28, baseType: !136, size: 64, offset: 256)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "pipe_bufs", scope: !1627, file: !1628, line: 29, baseType: !792, size: 64, offset: 320)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "uidhash_node", scope: !1627, file: !1628, line: 32, baseType: !660, size: 128, offset: 384)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1627, file: !1628, line: 33, baseType: !455, size: 32, offset: 512)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !1627, file: !1628, line: 37, baseType: !792, size: 64, offset: 576)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "ratelimit", scope: !1627, file: !1628, line: 44, baseType: !1641, size: 256, offset: 640)
!1641 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ratelimit_state", file: !1642, line: 15, size: 256, elements: !1643)
!1642 = !DIFile(filename: "./include/linux/ratelimit_types.h", directory: "/home/lizy2001/genbc/linux")
!1643 = !{!1644, !1645, !1646, !1647, !1648, !1649, !1650}
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1641, file: !1642, line: 16, baseType: !801)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !1641, file: !1642, line: 18, baseType: !132, size: 32)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "burst", scope: !1641, file: !1642, line: 19, baseType: !132, size: 32, offset: 32)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "printed", scope: !1641, file: !1642, line: 20, baseType: !132, size: 32, offset: 64)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "missed", scope: !1641, file: !1642, line: 21, baseType: !132, size: 32, offset: 96)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !1641, file: !1642, line: 22, baseType: !136, size: 64, offset: 128)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1641, file: !1642, line: 23, baseType: !136, size: 64, offset: 192)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1488, file: !1489, line: 146, baseType: !1652, size: 64, offset: 1024)
!1652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1653, size: 64)
!1653 = !DICompositeType(tag: DW_TAG_structure_type, name: "user_namespace", file: !456, line: 18, flags: DIFlagFwdDecl)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "group_info", scope: !1488, file: !1489, line: 147, baseType: !1655, size: 64, offset: 1088)
!1655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1656, size: 64)
!1656 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group_info", file: !1489, line: 25, size: 64, elements: !1657)
!1657 = !{!1658, !1659, !1660}
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1656, file: !1489, line: 26, baseType: !768, size: 32)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "ngroups", scope: !1656, file: !1489, line: 27, baseType: !132, size: 32, offset: 32)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1656, file: !1489, line: 28, baseType: !1661, offset: 64)
!1661 = !DICompositeType(tag: DW_TAG_array_type, baseType: !463, elements: !1662)
!1662 = !{!1663}
!1663 = !DISubrange(count: 0)
!1664 = !DIDerivedType(tag: DW_TAG_member, scope: !1488, file: !1489, line: 149, baseType: !1665, size: 128, offset: 1152)
!1665 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1488, file: !1489, line: 149, size: 128, elements: !1666)
!1666 = !{!1667, !1668}
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "non_rcu", scope: !1665, file: !1489, line: 150, baseType: !132, size: 32)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1665, file: !1489, line: 151, baseType: !387, size: 128, align: 64)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "real_cred", scope: !1158, file: !1159, line: 926, baseType: !1486, size: 64, offset: 8576)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "cred", scope: !1158, file: !1159, line: 929, baseType: !1486, size: 64, offset: 8640)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "cached_requested_key", scope: !1158, file: !1159, line: 933, baseType: !1516, size: 64, offset: 8704)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "comm", scope: !1158, file: !1159, line: 943, baseType: !1673, size: 128, offset: 8768)
!1673 = !DICompositeType(tag: DW_TAG_array_type, baseType: !162, size: 128, elements: !1674)
!1674 = !{!1675}
!1675 = !DISubrange(count: 16)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "nameidata", scope: !1158, file: !1159, line: 945, baseType: !1677, size: 64, offset: 8896)
!1677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1678, size: 64)
!1678 = !DICompositeType(tag: DW_TAG_structure_type, name: "nameidata", file: !1159, line: 49, flags: DIFlagFwdDecl)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !1158, file: !1159, line: 956, baseType: !1680, size: 64, offset: 8960)
!1680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1681, size: 64)
!1681 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_struct", file: !1159, line: 45, flags: DIFlagFwdDecl)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !1158, file: !1159, line: 959, baseType: !1683, size: 64, offset: 9024)
!1683 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1684, size: 64)
!1684 = !DICompositeType(tag: DW_TAG_structure_type, name: "files_struct", file: !1159, line: 959, flags: DIFlagFwdDecl)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "io_uring", scope: !1158, file: !1159, line: 962, baseType: !1686, size: 64, offset: 9088)
!1686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1687, size: 64)
!1687 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_uring_task", file: !1159, line: 66, flags: DIFlagFwdDecl)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "nsproxy", scope: !1158, file: !1159, line: 966, baseType: !1689, size: 64, offset: 9152)
!1689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1690, size: 64)
!1690 = !DICompositeType(tag: DW_TAG_structure_type, name: "nsproxy", file: !1691, line: 35, flags: DIFlagFwdDecl)
!1691 = !DIFile(filename: "./include/linux/sysctl.h", directory: "/home/lizy2001/genbc/linux")
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !1158, file: !1159, line: 969, baseType: !1693, size: 64, offset: 9216)
!1693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1694, size: 64)
!1694 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "signal_struct", file: !1695, line: 82, size: 7296, elements: !1696)
!1695 = !DIFile(filename: "./include/linux/sched/signal.h", directory: "/home/lizy2001/genbc/linux")
!1696 = !{!1697, !1698, !1699, !1700, !1701, !1702, !1703, !1714, !1715, !1716, !1717, !1718, !1719, !1720, !1721, !1722, !1723, !1724, !1725, !1726, !1732, !1741, !1742, !1744, !1745, !1746, !1749, !1755, !1756, !1757, !1758, !1759, !1760, !1761, !1762, !1763, !1764, !1765, !1766, !1767, !1768, !1769, !1770, !1771, !1772, !1773, !1774, !1775, !1776, !1779, !1780, !1787, !1788, !1789, !1790, !1791, !1792}
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "sigcnt", scope: !1694, file: !1695, line: 83, baseType: !1170, size: 32)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "live", scope: !1694, file: !1695, line: 84, baseType: !768, size: 32, offset: 32)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !1694, file: !1695, line: 85, baseType: !132, size: 32, offset: 64)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "thread_head", scope: !1694, file: !1695, line: 86, baseType: !143, size: 128, offset: 128)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "wait_chldexit", scope: !1694, file: !1695, line: 88, baseType: !1420, size: 128, offset: 256)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "curr_target", scope: !1694, file: !1695, line: 91, baseType: !1157, size: 64, offset: 384)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "shared_pending", scope: !1694, file: !1695, line: 94, baseType: !1704, size: 192, offset: 448)
!1704 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigpending", file: !1705, line: 30, size: 192, elements: !1706)
!1705 = !DIFile(filename: "./include/linux/signal_types.h", directory: "/home/lizy2001/genbc/linux")
!1706 = !{!1707, !1708}
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !1704, file: !1705, line: 31, baseType: !143, size: 128)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !1704, file: !1705, line: 32, baseType: !1709, size: 64, offset: 128)
!1709 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigset_t", file: !1710, line: 25, baseType: !1711)
!1710 = !DIFile(filename: "./arch/x86/include/asm/signal.h", directory: "/home/lizy2001/genbc/linux")
!1711 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1710, line: 23, size: 64, elements: !1712)
!1712 = !{!1713}
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !1711, file: !1710, line: 24, baseType: !1309, size: 64)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "multiprocess", scope: !1694, file: !1695, line: 97, baseType: !656, size: 64, offset: 640)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_code", scope: !1694, file: !1695, line: 100, baseType: !132, size: 32, offset: 704)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "notify_count", scope: !1694, file: !1695, line: 106, baseType: !132, size: 32, offset: 736)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_task", scope: !1694, file: !1695, line: 107, baseType: !1157, size: 64, offset: 768)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "group_stop_count", scope: !1694, file: !1695, line: 110, baseType: !132, size: 32, offset: 832)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1694, file: !1695, line: 111, baseType: !7, size: 32, offset: 864)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "is_child_subreaper", scope: !1694, file: !1695, line: 122, baseType: !7, size: 1, offset: 896, flags: DIFlagBitField, extraData: i64 896)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "has_child_subreaper", scope: !1694, file: !1695, line: 123, baseType: !7, size: 1, offset: 897, flags: DIFlagBitField, extraData: i64 896)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timer_id", scope: !1694, file: !1695, line: 128, baseType: !132, size: 32, offset: 928)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timers", scope: !1694, file: !1695, line: 129, baseType: !143, size: 128, offset: 960)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "real_timer", scope: !1694, file: !1695, line: 132, baseType: !1232, size: 512, offset: 1088)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "it_real_incr", scope: !1694, file: !1695, line: 133, baseType: !1240, size: 64, offset: 1600)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "it", scope: !1694, file: !1695, line: 140, baseType: !1727, size: 256, offset: 1664)
!1727 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1728, size: 256, elements: !1508)
!1728 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpu_itimer", file: !1695, line: 38, size: 128, elements: !1729)
!1729 = !{!1730, !1731}
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1728, file: !1695, line: 39, baseType: !442, size: 64)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "incr", scope: !1728, file: !1695, line: 40, baseType: !442, size: 64, offset: 64)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "cputimer", scope: !1694, file: !1695, line: 146, baseType: !1733, size: 192, offset: 1920)
!1733 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_group_cputimer", file: !1695, line: 66, size: 192, elements: !1734)
!1734 = !{!1735}
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "cputime_atomic", scope: !1733, file: !1695, line: 67, baseType: !1736, size: 192)
!1736 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_cputime_atomic", file: !1695, line: 47, size: 192, elements: !1737)
!1737 = !{!1738, !1739, !1740}
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1736, file: !1695, line: 48, baseType: !794, size: 64)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1736, file: !1695, line: 49, baseType: !794, size: 64, offset: 64)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !1736, file: !1695, line: 50, baseType: !794, size: 64, offset: 128)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !1694, file: !1695, line: 150, baseType: !1469, size: 640, offset: 2112)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "pids", scope: !1694, file: !1695, line: 153, baseType: !1743, size: 256, offset: 2752)
!1743 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1410, size: 256, elements: !1096)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "tty_old_pgrp", scope: !1694, file: !1695, line: 159, baseType: !1410, size: 64, offset: 3008)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "leader", scope: !1694, file: !1695, line: 162, baseType: !132, size: 32, offset: 3072)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "tty", scope: !1694, file: !1695, line: 164, baseType: !1747, size: 64, offset: 3136)
!1747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1748, size: 64)
!1748 = !DICompositeType(tag: DW_TAG_structure_type, name: "tty_struct", file: !1695, line: 164, flags: DIFlagFwdDecl)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "stats_lock", scope: !1694, file: !1695, line: 175, baseType: !1750, size: 32, offset: 3200)
!1750 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqlock_t", file: !410, line: 805, baseType: !1751)
!1751 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !410, line: 798, size: 32, elements: !1752)
!1752 = !{!1753, !1754}
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !1751, file: !410, line: 803, baseType: !409, size: 32)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1751, file: !410, line: 804, baseType: !185, offset: 32)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1694, file: !1695, line: 176, baseType: !442, size: 64, offset: 3264)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1694, file: !1695, line: 176, baseType: !442, size: 64, offset: 3328)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "cutime", scope: !1694, file: !1695, line: 176, baseType: !442, size: 64, offset: 3392)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "cstime", scope: !1694, file: !1695, line: 176, baseType: !442, size: 64, offset: 3456)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !1694, file: !1695, line: 177, baseType: !442, size: 64, offset: 3520)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "cgtime", scope: !1694, file: !1695, line: 178, baseType: !442, size: 64, offset: 3584)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !1694, file: !1695, line: 179, baseType: !1457, size: 128, offset: 3648)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !1694, file: !1695, line: 180, baseType: !136, size: 64, offset: 3776)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !1694, file: !1695, line: 180, baseType: !136, size: 64, offset: 3840)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "cnvcsw", scope: !1694, file: !1695, line: 180, baseType: !136, size: 64, offset: 3904)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "cnivcsw", scope: !1694, file: !1695, line: 180, baseType: !136, size: 64, offset: 3968)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !1694, file: !1695, line: 181, baseType: !136, size: 64, offset: 4032)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !1694, file: !1695, line: 181, baseType: !136, size: 64, offset: 4096)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "cmin_flt", scope: !1694, file: !1695, line: 181, baseType: !136, size: 64, offset: 4160)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "cmaj_flt", scope: !1694, file: !1695, line: 181, baseType: !136, size: 64, offset: 4224)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "inblock", scope: !1694, file: !1695, line: 182, baseType: !136, size: 64, offset: 4288)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "oublock", scope: !1694, file: !1695, line: 182, baseType: !136, size: 64, offset: 4352)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "cinblock", scope: !1694, file: !1695, line: 182, baseType: !136, size: 64, offset: 4416)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "coublock", scope: !1694, file: !1695, line: 182, baseType: !136, size: 64, offset: 4480)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "maxrss", scope: !1694, file: !1695, line: 183, baseType: !136, size: 64, offset: 4544)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "cmaxrss", scope: !1694, file: !1695, line: 183, baseType: !136, size: 64, offset: 4608)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !1694, file: !1695, line: 184, baseType: !1777, offset: 4672)
!1777 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_io_accounting", file: !1778, line: 12, elements: !199)
!1778 = !DIFile(filename: "./include/linux/task_io_accounting.h", directory: "/home/lizy2001/genbc/linux")
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "sum_sched_runtime", scope: !1694, file: !1695, line: 192, baseType: !444, size: 64, offset: 4672)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "rlim", scope: !1694, file: !1695, line: 203, baseType: !1781, size: 2048, offset: 4736)
!1781 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1782, size: 2048, elements: !1674)
!1782 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rlimit", file: !1783, line: 43, size: 128, elements: !1784)
!1783 = !DIFile(filename: "./include/uapi/linux/resource.h", directory: "/home/lizy2001/genbc/linux")
!1784 = !{!1785, !1786}
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_cur", scope: !1782, file: !1783, line: 44, baseType: !346, size: 64)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_max", scope: !1782, file: !1783, line: 45, baseType: !346, size: 64, offset: 64)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "oom_flag_origin", scope: !1694, file: !1695, line: 220, baseType: !171, size: 8, offset: 6784)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj", scope: !1694, file: !1695, line: 221, baseType: !1146, size: 16, offset: 6800)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj_min", scope: !1694, file: !1695, line: 222, baseType: !1146, size: 16, offset: 6816)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "oom_mm", scope: !1694, file: !1695, line: 224, baseType: !995, size: 64, offset: 6848)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "cred_guard_mutex", scope: !1694, file: !1695, line: 227, baseType: !1114, size: 192, offset: 6912)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "exec_update_mutex", scope: !1694, file: !1695, line: 233, baseType: !1114, size: 192, offset: 7104)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "sighand", scope: !1158, file: !1159, line: 970, baseType: !1794, size: 64, offset: 9280)
!1794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1795, size: 64)
!1795 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sighand_struct", file: !1695, line: 20, size: 16576, elements: !1796)
!1796 = !{!1797, !1798, !1799, !1800}
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "siglock", scope: !1795, file: !1695, line: 21, baseType: !185)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1795, file: !1695, line: 22, baseType: !1170, size: 32)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "signalfd_wqh", scope: !1795, file: !1695, line: 23, baseType: !1420, size: 128, offset: 64)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !1795, file: !1695, line: 24, baseType: !1801, size: 16384, offset: 192)
!1801 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1802, size: 16384, elements: !303)
!1802 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sigaction", file: !1705, line: 49, size: 256, elements: !1803)
!1803 = !{!1804}
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "sa", scope: !1802, file: !1705, line: 50, baseType: !1805, size: 256)
!1805 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigaction", file: !1705, line: 35, size: 256, elements: !1806)
!1806 = !{!1807, !1814, !1815, !1821}
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "sa_handler", scope: !1805, file: !1705, line: 37, baseType: !1808, size: 64)
!1808 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sighandler_t", file: !1809, line: 19, baseType: !1810)
!1809 = !DIFile(filename: "./include/uapi/asm-generic/signal-defs.h", directory: "/home/lizy2001/genbc/linux")
!1810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1811, size: 64)
!1811 = !DIDerivedType(tag: DW_TAG_typedef, name: "__signalfn_t", file: !1809, line: 18, baseType: !1812)
!1812 = !DISubroutineType(types: !1813)
!1813 = !{null, !132}
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "sa_flags", scope: !1805, file: !1705, line: 38, baseType: !136, size: 64, offset: 64)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "sa_restorer", scope: !1805, file: !1705, line: 44, baseType: !1816, size: 64, offset: 128)
!1816 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sigrestore_t", file: !1809, line: 22, baseType: !1817)
!1817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1818, size: 64)
!1818 = !DIDerivedType(tag: DW_TAG_typedef, name: "__restorefn_t", file: !1809, line: 21, baseType: !1819)
!1819 = !DISubroutineType(types: !1820)
!1820 = !{null}
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "sa_mask", scope: !1805, file: !1705, line: 46, baseType: !1709, size: 64, offset: 192)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "blocked", scope: !1158, file: !1159, line: 971, baseType: !1709, size: 64, offset: 9344)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "real_blocked", scope: !1158, file: !1159, line: 972, baseType: !1709, size: 64, offset: 9408)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "saved_sigmask", scope: !1158, file: !1159, line: 974, baseType: !1709, size: 64, offset: 9472)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "pending", scope: !1158, file: !1159, line: 975, baseType: !1704, size: 192, offset: 9536)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_sp", scope: !1158, file: !1159, line: 976, baseType: !136, size: 64, offset: 9728)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_size", scope: !1158, file: !1159, line: 977, baseType: !344, size: 64, offset: 9792)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_flags", scope: !1158, file: !1159, line: 978, baseType: !7, size: 32, offset: 9856)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "task_works", scope: !1158, file: !1159, line: 980, baseType: !390, size: 64, offset: 9920)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "seccomp", scope: !1158, file: !1159, line: 989, baseType: !1831, size: 128, offset: 9984)
!1831 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp", file: !1832, line: 35, size: 128, elements: !1833)
!1832 = !DIFile(filename: "./include/linux/seccomp.h", directory: "/home/lizy2001/genbc/linux")
!1833 = !{!1834, !1835, !1836}
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1831, file: !1832, line: 36, baseType: !132, size: 32)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "filter_count", scope: !1831, file: !1832, line: 37, baseType: !768, size: 32, offset: 32)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1831, file: !1832, line: 38, baseType: !1837, size: 64, offset: 64)
!1837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1838, size: 64)
!1838 = !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp_filter", file: !1832, line: 23, flags: DIFlagFwdDecl)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "parent_exec_id", scope: !1158, file: !1159, line: 992, baseType: !442, size: 64, offset: 10112)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "self_exec_id", scope: !1158, file: !1159, line: 993, baseType: !442, size: 64, offset: 10176)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_lock", scope: !1158, file: !1159, line: 996, baseType: !185, offset: 10240)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "pi_lock", scope: !1158, file: !1159, line: 999, baseType: !801, offset: 10240)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "wake_q", scope: !1158, file: !1159, line: 1001, baseType: !1844, size: 64, offset: 10240)
!1844 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wake_q_node", file: !1159, line: 636, size: 64, elements: !1845)
!1845 = !{!1846}
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1844, file: !1159, line: 637, baseType: !1847, size: 64)
!1847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1844, size: 64)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "pi_waiters", scope: !1158, file: !1159, line: 1005, baseType: !773, size: 128, offset: 10304)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "pi_top_task", scope: !1158, file: !1159, line: 1007, baseType: !1157, size: 64, offset: 10432)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "pi_blocked_on", scope: !1158, file: !1159, line: 1009, baseType: !1851, size: 64, offset: 10496)
!1851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1852, size: 64)
!1852 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt_mutex_waiter", file: !1159, line: 1009, flags: DIFlagFwdDecl)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "journal_info", scope: !1158, file: !1159, line: 1043, baseType: !139, size: 64, offset: 10560)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "bio_list", scope: !1158, file: !1159, line: 1046, baseType: !1855, size: 64, offset: 10624)
!1855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1856, size: 64)
!1856 = !DICompositeType(tag: DW_TAG_structure_type, name: "bio_list", file: !1159, line: 41, flags: DIFlagFwdDecl)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "plug", scope: !1158, file: !1159, line: 1050, baseType: !1858, size: 64, offset: 10688)
!1858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1859, size: 64)
!1859 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_plug", file: !1159, line: 42, flags: DIFlagFwdDecl)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "reclaim_state", scope: !1158, file: !1159, line: 1054, baseType: !1861, size: 64, offset: 10752)
!1861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1862, size: 64)
!1862 = !DICompositeType(tag: DW_TAG_structure_type, name: "reclaim_state", file: !1159, line: 55, flags: DIFlagFwdDecl)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "backing_dev_info", scope: !1158, file: !1159, line: 1056, baseType: !1864, size: 64, offset: 10816)
!1864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1865, size: 64)
!1865 = !DICompositeType(tag: DW_TAG_structure_type, name: "backing_dev_info", file: !1159, line: 40, flags: DIFlagFwdDecl)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "io_context", scope: !1158, file: !1159, line: 1058, baseType: !1867, size: 64, offset: 10880)
!1867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1868, size: 64)
!1868 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_context", file: !1869, line: 99, size: 704, elements: !1870)
!1869 = !DIFile(filename: "./include/linux/iocontext.h", directory: "/home/lizy2001/genbc/linux")
!1870 = !{!1871, !1872, !1873, !1874, !1875, !1876, !1877, !1896, !1897}
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !1868, file: !1869, line: 100, baseType: !792, size: 64)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "active_ref", scope: !1868, file: !1869, line: 101, baseType: !768, size: 32, offset: 64)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "nr_tasks", scope: !1868, file: !1869, line: 102, baseType: !768, size: 32, offset: 96)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1868, file: !1869, line: 105, baseType: !185, offset: 128)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "ioprio", scope: !1868, file: !1869, line: 107, baseType: !339, size: 16, offset: 128)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "icq_tree", scope: !1868, file: !1869, line: 109, baseType: !760, size: 128, offset: 192)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "icq_hint", scope: !1868, file: !1869, line: 110, baseType: !1878, size: 64, offset: 320)
!1878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1879, size: 64)
!1879 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_cq", file: !1869, line: 73, size: 448, elements: !1880)
!1880 = !{!1881, !1884, !1885, !1890, !1895}
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !1879, file: !1869, line: 74, baseType: !1882, size: 64)
!1882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1883, size: 64)
!1883 = !DICompositeType(tag: DW_TAG_structure_type, name: "request_queue", file: !1869, line: 74, flags: DIFlagFwdDecl)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "ioc", scope: !1879, file: !1869, line: 75, baseType: !1867, size: 64, offset: 64)
!1885 = !DIDerivedType(tag: DW_TAG_member, scope: !1879, file: !1869, line: 83, baseType: !1886, size: 128, offset: 128)
!1886 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1879, file: !1869, line: 83, size: 128, elements: !1887)
!1887 = !{!1888, !1889}
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "q_node", scope: !1886, file: !1869, line: 84, baseType: !143, size: 128)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_icq_cache", scope: !1886, file: !1869, line: 85, baseType: !956, size: 64)
!1890 = !DIDerivedType(tag: DW_TAG_member, scope: !1879, file: !1869, line: 87, baseType: !1891, size: 128, offset: 256)
!1891 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1879, file: !1869, line: 87, size: 128, elements: !1892)
!1892 = !{!1893, !1894}
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "ioc_node", scope: !1891, file: !1869, line: 88, baseType: !660, size: 128)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_head", scope: !1891, file: !1869, line: 89, baseType: !387, size: 128, align: 64)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1879, file: !1869, line: 92, baseType: !7, size: 32, offset: 384)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "icq_list", scope: !1868, file: !1869, line: 111, baseType: !656, size: 64, offset: 384)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "release_work", scope: !1868, file: !1869, line: 113, baseType: !1898, size: 256, offset: 448)
!1898 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "work_struct", file: !92, line: 102, size: 256, elements: !1899)
!1899 = !{!1900, !1901, !1902}
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1898, file: !92, line: 103, baseType: !792, size: 64)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !1898, file: !92, line: 104, baseType: !143, size: 128, offset: 64)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1898, file: !92, line: 105, baseType: !1903, size: 64, offset: 192)
!1903 = !DIDerivedType(tag: DW_TAG_typedef, name: "work_func_t", file: !92, line: 21, baseType: !1904)
!1904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1905, size: 64)
!1905 = !DISubroutineType(types: !1906)
!1906 = !{null, !1907}
!1907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1898, size: 64)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "capture_control", scope: !1158, file: !1159, line: 1061, baseType: !1909, size: 64, offset: 10944)
!1909 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1910, size: 64)
!1910 = !DICompositeType(tag: DW_TAG_structure_type, name: "capture_control", file: !1159, line: 43, flags: DIFlagFwdDecl)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_message", scope: !1158, file: !1159, line: 1064, baseType: !136, size: 64, offset: 11008)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "last_siginfo", scope: !1158, file: !1159, line: 1065, baseType: !1913, size: 64, offset: 11072)
!1913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1914, size: 64)
!1914 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_siginfo_t", file: !1705, line: 14, baseType: !1915)
!1915 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_siginfo", file: !1705, line: 12, size: 384, elements: !1916)
!1916 = !{!1917}
!1917 = !DIDerivedType(tag: DW_TAG_member, scope: !1915, file: !1705, line: 13, baseType: !1918, size: 384)
!1918 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1915, file: !1705, line: 13, size: 384, elements: !1919)
!1919 = !{!1920, !1921, !1922, !1923}
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "si_signo", scope: !1918, file: !1705, line: 13, baseType: !132, size: 32)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "si_errno", scope: !1918, file: !1705, line: 13, baseType: !132, size: 32, offset: 32)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "si_code", scope: !1918, file: !1705, line: 13, baseType: !132, size: 32, offset: 64)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "_sifields", scope: !1918, file: !1705, line: 13, baseType: !1924, size: 256, offset: 128)
!1924 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "__sifields", file: !1925, line: 32, size: 256, elements: !1926)
!1925 = !DIFile(filename: "./include/uapi/asm-generic/siginfo.h", directory: "/home/lizy2001/genbc/linux")
!1926 = !{!1927, !1932, !1945, !1951, !1960, !1980, !1985}
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "_kill", scope: !1924, file: !1925, line: 37, baseType: !1928, size: 64)
!1928 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1924, file: !1925, line: 34, size: 64, elements: !1929)
!1929 = !{!1930, !1931}
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !1928, file: !1925, line: 35, baseType: !1399, size: 32)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !1928, file: !1925, line: 36, baseType: !461, size: 32, offset: 32)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "_timer", scope: !1924, file: !1925, line: 45, baseType: !1933, size: 192)
!1933 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1924, file: !1925, line: 40, size: 192, elements: !1934)
!1934 = !{!1935, !1937, !1938, !1944}
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "_tid", scope: !1933, file: !1925, line: 41, baseType: !1936, size: 32)
!1936 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_timer_t", file: !331, line: 95, baseType: !132)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "_overrun", scope: !1933, file: !1925, line: 42, baseType: !132, size: 32, offset: 32)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !1933, file: !1925, line: 43, baseType: !1939, size: 64, offset: 64)
!1939 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigval_t", file: !1925, line: 11, baseType: !1940)
!1940 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "sigval", file: !1925, line: 8, size: 64, elements: !1941)
!1941 = !{!1942, !1943}
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "sival_int", scope: !1940, file: !1925, line: 9, baseType: !132, size: 32)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "sival_ptr", scope: !1940, file: !1925, line: 10, baseType: !139, size: 64)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "_sys_private", scope: !1933, file: !1925, line: 44, baseType: !132, size: 32, offset: 128)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "_rt", scope: !1924, file: !1925, line: 52, baseType: !1946, size: 128)
!1946 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1924, file: !1925, line: 48, size: 128, elements: !1947)
!1947 = !{!1948, !1949, !1950}
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !1946, file: !1925, line: 49, baseType: !1399, size: 32)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !1946, file: !1925, line: 50, baseType: !461, size: 32, offset: 32)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !1946, file: !1925, line: 51, baseType: !1939, size: 64, offset: 64)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "_sigchld", scope: !1924, file: !1925, line: 61, baseType: !1952, size: 256)
!1952 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1924, file: !1925, line: 55, size: 256, elements: !1953)
!1953 = !{!1954, !1955, !1956, !1957, !1959}
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !1952, file: !1925, line: 56, baseType: !1399, size: 32)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !1952, file: !1925, line: 57, baseType: !461, size: 32, offset: 32)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "_status", scope: !1952, file: !1925, line: 58, baseType: !132, size: 32, offset: 64)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "_utime", scope: !1952, file: !1925, line: 59, baseType: !1958, size: 64, offset: 128)
!1958 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clock_t", file: !331, line: 94, baseType: !332)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "_stime", scope: !1952, file: !1925, line: 60, baseType: !1958, size: 64, offset: 192)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "_sigfault", scope: !1924, file: !1925, line: 95, baseType: !1961, size: 256)
!1961 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1924, file: !1925, line: 64, size: 256, elements: !1962)
!1962 = !{!1963, !1964}
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "_addr", scope: !1961, file: !1925, line: 65, baseType: !139, size: 64)
!1964 = !DIDerivedType(tag: DW_TAG_member, scope: !1961, file: !1925, line: 77, baseType: !1965, size: 192, offset: 64)
!1965 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1961, file: !1925, line: 77, size: 192, elements: !1966)
!1966 = !{!1967, !1968, !1975}
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_lsb", scope: !1965, file: !1925, line: 82, baseType: !1146, size: 16)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_bnd", scope: !1965, file: !1925, line: 88, baseType: !1969, size: 192)
!1969 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1965, file: !1925, line: 84, size: 192, elements: !1970)
!1970 = !{!1971, !1973, !1974}
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_bnd", scope: !1969, file: !1925, line: 85, baseType: !1972, size: 64)
!1972 = !DICompositeType(tag: DW_TAG_array_type, baseType: !162, size: 64, elements: !1270)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "_lower", scope: !1969, file: !1925, line: 86, baseType: !139, size: 64, offset: 64)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "_upper", scope: !1969, file: !1925, line: 87, baseType: !139, size: 64, offset: 128)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_pkey", scope: !1965, file: !1925, line: 93, baseType: !1976, size: 96)
!1976 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1965, file: !1925, line: 90, size: 96, elements: !1977)
!1977 = !{!1978, !1979}
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_pkey", scope: !1976, file: !1925, line: 91, baseType: !1972, size: 64)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "_pkey", scope: !1976, file: !1925, line: 92, baseType: !439, size: 32, offset: 64)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "_sigpoll", scope: !1924, file: !1925, line: 101, baseType: !1981, size: 128)
!1981 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1924, file: !1925, line: 98, size: 128, elements: !1982)
!1982 = !{!1983, !1984}
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "_band", scope: !1981, file: !1925, line: 99, baseType: !93, size: 64)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "_fd", scope: !1981, file: !1925, line: 100, baseType: !132, size: 32, offset: 64)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "_sigsys", scope: !1924, file: !1925, line: 108, baseType: !1986, size: 128)
!1986 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1924, file: !1925, line: 104, size: 128, elements: !1987)
!1987 = !{!1988, !1989, !1990}
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "_call_addr", scope: !1986, file: !1925, line: 105, baseType: !139, size: 64)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "_syscall", scope: !1986, file: !1925, line: 106, baseType: !132, size: 32, offset: 64)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "_arch", scope: !1986, file: !1925, line: 107, baseType: !7, size: 32, offset: 96)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !1158, file: !1159, line: 1067, baseType: !1777, offset: 11136)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "robust_list", scope: !1158, file: !1159, line: 1099, baseType: !1993, size: 64, offset: 11136)
!1993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1994, size: 64)
!1994 = !DICompositeType(tag: DW_TAG_structure_type, name: "robust_list_head", file: !1159, line: 56, flags: DIFlagFwdDecl)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_list", scope: !1158, file: !1159, line: 1103, baseType: !143, size: 128, offset: 11200)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_cache", scope: !1158, file: !1159, line: 1104, baseType: !1997, size: 64, offset: 11328)
!1997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1998, size: 64)
!1998 = !DICompositeType(tag: DW_TAG_structure_type, name: "futex_pi_state", file: !1159, line: 46, flags: DIFlagFwdDecl)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "futex_exit_mutex", scope: !1158, file: !1159, line: 1105, baseType: !1114, size: 192, offset: 11392)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "futex_state", scope: !1158, file: !1159, line: 1106, baseType: !7, size: 32, offset: 11584)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_ctxp", scope: !1158, file: !1159, line: 1109, baseType: !2002, size: 128, offset: 11648)
!2002 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2003, size: 128, elements: !1508)
!2003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2004, size: 64)
!2004 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event_context", file: !1159, line: 51, flags: DIFlagFwdDecl)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_mutex", scope: !1158, file: !1159, line: 1110, baseType: !1114, size: 192, offset: 11776)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_list", scope: !1158, file: !1159, line: 1111, baseType: !143, size: 128, offset: 11968)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "rseq", scope: !1158, file: !1159, line: 1173, baseType: !2008, size: 64, offset: 12096)
!2008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2009, size: 64)
!2009 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rseq", file: !2010, line: 62, size: 256, align: 256, elements: !2011)
!2010 = !DIFile(filename: "./include/uapi/linux/rseq.h", directory: "/home/lizy2001/genbc/linux")
!2011 = !{!2012, !2013, !2014, !2019}
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id_start", scope: !2009, file: !2010, line: 75, baseType: !439, size: 32)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id", scope: !2009, file: !2010, line: 90, baseType: !439, size: 32, offset: 32)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_cs", scope: !2009, file: !2010, line: 124, baseType: !2015, size: 64, offset: 64)
!2015 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2009, file: !2010, line: 109, size: 64, elements: !2016)
!2016 = !{!2017, !2018}
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "ptr64", scope: !2015, file: !2010, line: 110, baseType: !443, size: 64)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !2015, file: !2010, line: 112, baseType: !443, size: 64)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2009, file: !2010, line: 144, baseType: !439, size: 32, offset: 128)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_sig", scope: !1158, file: !1159, line: 1174, baseType: !437, size: 32, offset: 12160)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_event_mask", scope: !1158, file: !1159, line: 1179, baseType: !136, size: 64, offset: 12224)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_ubc", scope: !1158, file: !1159, line: 1182, baseType: !2023, size: 128, offset: 12288)
!2023 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tlbflush_unmap_batch", file: !1092, line: 76, size: 128, elements: !2024)
!2024 = !{!2025, !2030, !2031}
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2023, file: !1092, line: 85, baseType: !2026, size: 64)
!2026 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arch_tlbflush_unmap_batch", file: !2027, line: 7, size: 64, elements: !2028)
!2027 = !DIFile(filename: "./arch/x86/include/asm/tlbbatch.h", directory: "/home/lizy2001/genbc/linux")
!2028 = !{!2029}
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "cpumask", scope: !2026, file: !2027, line: 12, baseType: !1306, size: 64)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "flush_required", scope: !2023, file: !1092, line: 88, baseType: !171, size: 8, offset: 64)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "writable", scope: !2023, file: !1092, line: 95, baseType: !171, size: 8, offset: 72)
!2032 = !DIDerivedType(tag: DW_TAG_member, scope: !1158, file: !1159, line: 1184, baseType: !2033, size: 128, offset: 12416)
!2033 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1158, file: !1159, line: 1184, size: 128, elements: !2034)
!2034 = !{!2035, !2036}
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_users", scope: !2033, file: !1159, line: 1185, baseType: !1170, size: 32)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2033, file: !1159, line: 1186, baseType: !387, size: 128, align: 64)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "splice_pipe", scope: !1158, file: !1159, line: 1190, baseType: !2038, size: 64, offset: 12544)
!2038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2039, size: 64)
!2039 = !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_inode_info", file: !1159, line: 53, flags: DIFlagFwdDecl)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "task_frag", scope: !1158, file: !1159, line: 1192, baseType: !2041, size: 128, offset: 12608)
!2041 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page_frag", file: !1092, line: 64, size: 128, elements: !2042)
!2042 = !{!2043, !2044, !2045}
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !2041, file: !1092, line: 65, baseType: !742, size: 64)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2041, file: !1092, line: 67, baseType: !439, size: 32, offset: 64)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2041, file: !1092, line: 68, baseType: !439, size: 32, offset: 96)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied", scope: !1158, file: !1159, line: 1206, baseType: !132, size: 32, offset: 12736)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied_pause", scope: !1158, file: !1159, line: 1207, baseType: !132, size: 32, offset: 12768)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_paused_when", scope: !1158, file: !1159, line: 1209, baseType: !136, size: 64, offset: 12800)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "timer_slack_ns", scope: !1158, file: !1159, line: 1219, baseType: !442, size: 64, offset: 12864)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "default_timer_slack_ns", scope: !1158, file: !1159, line: 1220, baseType: !442, size: 64, offset: 12928)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "pagefault_disabled", scope: !1158, file: !1159, line: 1317, baseType: !132, size: 32, offset: 12992)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "oom_reaper_list", scope: !1158, file: !1159, line: 1319, baseType: !1157, size: 64, offset: 13056)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm_area", scope: !1158, file: !1159, line: 1322, baseType: !2054, size: 64, offset: 13120)
!2054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2055, size: 64)
!2055 = !DICompositeType(tag: DW_TAG_structure_type, name: "vm_struct", file: !2056, line: 9, flags: DIFlagFwdDecl)
!2056 = !DIFile(filename: "./include/linux/kasan.h", directory: "/home/lizy2001/genbc/linux")
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "stack_refcount", scope: !1158, file: !1159, line: 1326, baseType: !1170, size: 32, offset: 13184)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "mce_vaddr", scope: !1158, file: !1159, line: 1342, baseType: !139, size: 64, offset: 13248)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kflags", scope: !1158, file: !1159, line: 1343, baseType: !443, size: 64, offset: 13312)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "mce_addr", scope: !1158, file: !1159, line: 1344, baseType: !442, size: 64, offset: 13376)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "mce_ripv", scope: !1158, file: !1159, line: 1345, baseType: !443, size: 1, offset: 13440, flags: DIFlagBitField, extraData: i64 13440)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "mce_whole_page", scope: !1158, file: !1159, line: 1346, baseType: !443, size: 1, offset: 13441, flags: DIFlagBitField, extraData: i64 13440)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "__mce_reserved", scope: !1158, file: !1159, line: 1347, baseType: !443, size: 62, offset: 13442, flags: DIFlagBitField, extraData: i64 13440)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kill_me", scope: !1158, file: !1159, line: 1348, baseType: !387, size: 128, align: 64, offset: 13504)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !1158, file: !1159, line: 1358, baseType: !2066, size: 34816, offset: 13824)
!2066 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_struct", file: !2067, line: 485, size: 34816, elements: !2068)
!2067 = !DIFile(filename: "./arch/x86/include/asm/processor.h", directory: "/home/lizy2001/genbc/linux")
!2068 = !{!2069, !2087, !2088, !2089, !2090, !2091, !2092, !2093, !2094, !2098, !2099, !2100, !2101, !2102, !2103, !2106, !2107, !2108}
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "tls_array", scope: !2066, file: !2067, line: 487, baseType: !2070, size: 192)
!2070 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2071, size: 192, elements: !299)
!2071 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "desc_struct", file: !2072, line: 16, size: 64, elements: !2073)
!2072 = !DIFile(filename: "./arch/x86/include/asm/desc_defs.h", directory: "/home/lizy2001/genbc/linux")
!2073 = !{!2074, !2075, !2076, !2077, !2078, !2079, !2080, !2081, !2082, !2083, !2084, !2085, !2086}
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "limit0", scope: !2071, file: !2072, line: 17, baseType: !880, size: 16)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "base0", scope: !2071, file: !2072, line: 18, baseType: !880, size: 16, offset: 16)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "base1", scope: !2071, file: !2072, line: 19, baseType: !880, size: 8, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2071, file: !2072, line: 19, baseType: !880, size: 4, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !2071, file: !2072, line: 19, baseType: !880, size: 1, offset: 44, flags: DIFlagBitField, extraData: i64 32)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "dpl", scope: !2071, file: !2072, line: 19, baseType: !880, size: 2, offset: 45, flags: DIFlagBitField, extraData: i64 32)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !2071, file: !2072, line: 19, baseType: !880, size: 1, offset: 47, flags: DIFlagBitField, extraData: i64 32)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "limit1", scope: !2071, file: !2072, line: 20, baseType: !880, size: 4, offset: 48, flags: DIFlagBitField, extraData: i64 32)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "avl", scope: !2071, file: !2072, line: 20, baseType: !880, size: 1, offset: 52, flags: DIFlagBitField, extraData: i64 32)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !2071, file: !2072, line: 20, baseType: !880, size: 1, offset: 53, flags: DIFlagBitField, extraData: i64 32)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !2071, file: !2072, line: 20, baseType: !880, size: 1, offset: 54, flags: DIFlagBitField, extraData: i64 32)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !2071, file: !2072, line: 20, baseType: !880, size: 1, offset: 55, flags: DIFlagBitField, extraData: i64 32)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "base2", scope: !2071, file: !2072, line: 20, baseType: !880, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 32)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !2066, file: !2067, line: 491, baseType: !136, size: 64, offset: 192)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "es", scope: !2066, file: !2067, line: 495, baseType: !339, size: 16, offset: 256)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !2066, file: !2067, line: 496, baseType: !339, size: 16, offset: 272)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "fsindex", scope: !2066, file: !2067, line: 497, baseType: !339, size: 16, offset: 288)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "gsindex", scope: !2066, file: !2067, line: 498, baseType: !339, size: 16, offset: 304)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "fsbase", scope: !2066, file: !2067, line: 502, baseType: !136, size: 64, offset: 320)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !2066, file: !2067, line: 503, baseType: !136, size: 64, offset: 384)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_bps", scope: !2066, file: !2067, line: 514, baseType: !2095, size: 256, offset: 448)
!2095 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2096, size: 256, elements: !1096)
!2096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2097, size: 64)
!2097 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event", file: !2067, line: 483, flags: DIFlagFwdDecl)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_dr6", scope: !2066, file: !2067, line: 516, baseType: !136, size: 64, offset: 704)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_dr7", scope: !2066, file: !2067, line: 518, baseType: !136, size: 64, offset: 768)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "cr2", scope: !2066, file: !2067, line: 520, baseType: !136, size: 64, offset: 832)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "trap_nr", scope: !2066, file: !2067, line: 521, baseType: !136, size: 64, offset: 896)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "error_code", scope: !2066, file: !2067, line: 522, baseType: !136, size: 64, offset: 960)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "io_bitmap", scope: !2066, file: !2067, line: 528, baseType: !2104, size: 64, offset: 1024)
!2104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2105, size: 64)
!2105 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_bitmap", file: !2067, line: 10, flags: DIFlagFwdDecl)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "iopl_emul", scope: !2066, file: !2067, line: 535, baseType: !136, size: 64, offset: 1088)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "sig_on_uaccess_err", scope: !2066, file: !2067, line: 537, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "fpu", scope: !2066, file: !2067, line: 540, baseType: !2109, size: 33280, offset: 1536)
!2109 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fpu", file: !2110, line: 317, size: 33280, elements: !2111)
!2110 = !DIFile(filename: "./arch/x86/include/asm/fpu/types.h", directory: "/home/lizy2001/genbc/linux")
!2111 = !{!2112, !2113, !2114}
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "last_cpu", scope: !2109, file: !2110, line: 330, baseType: !7, size: 32)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "avx512_timestamp", scope: !2109, file: !2110, line: 337, baseType: !136, size: 64, offset: 64)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2109, file: !2110, line: 348, baseType: !2115, size: 32768, offset: 512)
!2115 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "fpregs_state", file: !2110, line: 304, size: 32768, elements: !2116)
!2116 = !{!2117, !2132, !2169, !2219, !2232}
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "fsave", scope: !2115, file: !2110, line: 305, baseType: !2118, size: 896)
!2118 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fregs_state", file: !2110, line: 12, size: 896, elements: !2119)
!2119 = !{!2120, !2121, !2122, !2123, !2124, !2125, !2126, !2127, !2131}
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !2118, file: !2110, line: 13, baseType: !437, size: 32)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !2118, file: !2110, line: 14, baseType: !437, size: 32, offset: 32)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !2118, file: !2110, line: 15, baseType: !437, size: 32, offset: 64)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !2118, file: !2110, line: 16, baseType: !437, size: 32, offset: 96)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !2118, file: !2110, line: 17, baseType: !437, size: 32, offset: 128)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !2118, file: !2110, line: 18, baseType: !437, size: 32, offset: 160)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !2118, file: !2110, line: 19, baseType: !437, size: 32, offset: 192)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !2118, file: !2110, line: 22, baseType: !2128, size: 640, offset: 224)
!2128 = !DICompositeType(tag: DW_TAG_array_type, baseType: !437, size: 640, elements: !2129)
!2129 = !{!2130}
!2130 = !DISubrange(count: 20)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !2118, file: !2110, line: 25, baseType: !437, size: 32, offset: 864)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "fxsave", scope: !2115, file: !2110, line: 306, baseType: !2133, size: 4096, align: 128)
!2133 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fxregs_state", file: !2110, line: 34, size: 4096, align: 128, elements: !2134)
!2134 = !{!2135, !2136, !2137, !2138, !2139, !2154, !2155, !2156, !2158, !2160, !2164}
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !2133, file: !2110, line: 35, baseType: !880, size: 16)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !2133, file: !2110, line: 36, baseType: !880, size: 16, offset: 16)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !2133, file: !2110, line: 37, baseType: !880, size: 16, offset: 32)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "fop", scope: !2133, file: !2110, line: 38, baseType: !880, size: 16, offset: 48)
!2139 = !DIDerivedType(tag: DW_TAG_member, scope: !2133, file: !2110, line: 39, baseType: !2140, size: 128, offset: 64)
!2140 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2133, file: !2110, line: 39, size: 128, elements: !2141)
!2141 = !{!2142, !2147}
!2142 = !DIDerivedType(tag: DW_TAG_member, scope: !2140, file: !2110, line: 40, baseType: !2143, size: 128)
!2143 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2140, file: !2110, line: 40, size: 128, elements: !2144)
!2144 = !{!2145, !2146}
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "rip", scope: !2143, file: !2110, line: 41, baseType: !442, size: 64)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "rdp", scope: !2143, file: !2110, line: 42, baseType: !442, size: 64, offset: 64)
!2147 = !DIDerivedType(tag: DW_TAG_member, scope: !2140, file: !2110, line: 44, baseType: !2148, size: 128)
!2148 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2140, file: !2110, line: 44, size: 128, elements: !2149)
!2149 = !{!2150, !2151, !2152, !2153}
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !2148, file: !2110, line: 45, baseType: !437, size: 32)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !2148, file: !2110, line: 46, baseType: !437, size: 32, offset: 32)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !2148, file: !2110, line: 47, baseType: !437, size: 32, offset: 64)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !2148, file: !2110, line: 48, baseType: !437, size: 32, offset: 96)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr", scope: !2133, file: !2110, line: 51, baseType: !437, size: 32, offset: 192)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr_mask", scope: !2133, file: !2110, line: 52, baseType: !437, size: 32, offset: 224)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !2133, file: !2110, line: 55, baseType: !2157, size: 1024, offset: 256)
!2157 = !DICompositeType(tag: DW_TAG_array_type, baseType: !437, size: 1024, elements: !163)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "xmm_space", scope: !2133, file: !2110, line: 58, baseType: !2159, size: 2048, offset: 1280)
!2159 = !DICompositeType(tag: DW_TAG_array_type, baseType: !437, size: 2048, elements: !303)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !2133, file: !2110, line: 60, baseType: !2161, size: 384, offset: 3328)
!2161 = !DICompositeType(tag: DW_TAG_array_type, baseType: !437, size: 384, elements: !2162)
!2162 = !{!2163}
!2163 = !DISubrange(count: 12)
!2164 = !DIDerivedType(tag: DW_TAG_member, scope: !2133, file: !2110, line: 62, baseType: !2165, size: 384, offset: 3712)
!2165 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2133, file: !2110, line: 62, size: 384, elements: !2166)
!2166 = !{!2167, !2168}
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "padding1", scope: !2165, file: !2110, line: 63, baseType: !2161, size: 384)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "sw_reserved", scope: !2165, file: !2110, line: 64, baseType: !2161, size: 384)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !2115, file: !2110, line: 307, baseType: !2170, size: 1088)
!2170 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swregs_state", file: !2110, line: 79, size: 1088, elements: !2171)
!2171 = !{!2172, !2173, !2174, !2175, !2176, !2177, !2178, !2179, !2180, !2181, !2182, !2183, !2184, !2185, !2186, !2218}
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !2170, file: !2110, line: 80, baseType: !437, size: 32)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !2170, file: !2110, line: 81, baseType: !437, size: 32, offset: 32)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !2170, file: !2110, line: 82, baseType: !437, size: 32, offset: 64)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !2170, file: !2110, line: 83, baseType: !437, size: 32, offset: 96)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !2170, file: !2110, line: 84, baseType: !437, size: 32, offset: 128)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !2170, file: !2110, line: 85, baseType: !437, size: 32, offset: 160)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !2170, file: !2110, line: 86, baseType: !437, size: 32, offset: 192)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !2170, file: !2110, line: 88, baseType: !2128, size: 640, offset: 224)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "ftop", scope: !2170, file: !2110, line: 89, baseType: !1292, size: 8, offset: 864)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !2170, file: !2110, line: 90, baseType: !1292, size: 8, offset: 872)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "lookahead", scope: !2170, file: !2110, line: 91, baseType: !1292, size: 8, offset: 880)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "no_update", scope: !2170, file: !2110, line: 92, baseType: !1292, size: 8, offset: 888)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "rm", scope: !2170, file: !2110, line: 93, baseType: !1292, size: 8, offset: 896)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "alimit", scope: !2170, file: !2110, line: 94, baseType: !1292, size: 8, offset: 904)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !2170, file: !2110, line: 95, baseType: !2187, size: 64, offset: 960)
!2187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2188, size: 64)
!2188 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "math_emu_info", file: !2189, line: 11, size: 128, elements: !2190)
!2189 = !DIFile(filename: "./arch/x86/include/asm/math_emu.h", directory: "/home/lizy2001/genbc/linux")
!2190 = !{!2191, !2192}
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "___orig_eip", scope: !2188, file: !2189, line: 12, baseType: !93, size: 64)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !2188, file: !2189, line: 13, baseType: !2193, size: 64, offset: 64)
!2193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2194, size: 64)
!2194 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pt_regs", file: !2195, line: 56, size: 1344, elements: !2196)
!2195 = !DIFile(filename: "./arch/x86/include/asm/ptrace.h", directory: "/home/lizy2001/genbc/linux")
!2196 = !{!2197, !2198, !2199, !2200, !2201, !2202, !2203, !2204, !2205, !2206, !2207, !2208, !2209, !2210, !2211, !2212, !2213, !2214, !2215, !2216, !2217}
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2194, file: !2195, line: 61, baseType: !136, size: 64)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2194, file: !2195, line: 62, baseType: !136, size: 64, offset: 64)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "r13", scope: !2194, file: !2195, line: 63, baseType: !136, size: 64, offset: 128)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2194, file: !2195, line: 64, baseType: !136, size: 64, offset: 192)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "bp", scope: !2194, file: !2195, line: 65, baseType: !136, size: 64, offset: 256)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "bx", scope: !2194, file: !2195, line: 66, baseType: !136, size: 64, offset: 320)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "r11", scope: !2194, file: !2195, line: 68, baseType: !136, size: 64, offset: 384)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "r10", scope: !2194, file: !2195, line: 69, baseType: !136, size: 64, offset: 448)
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "r9", scope: !2194, file: !2195, line: 70, baseType: !136, size: 64, offset: 512)
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "r8", scope: !2194, file: !2195, line: 71, baseType: !136, size: 64, offset: 576)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "ax", scope: !2194, file: !2195, line: 72, baseType: !136, size: 64, offset: 640)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "cx", scope: !2194, file: !2195, line: 73, baseType: !136, size: 64, offset: 704)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "dx", scope: !2194, file: !2195, line: 74, baseType: !136, size: 64, offset: 768)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "si", scope: !2194, file: !2195, line: 75, baseType: !136, size: 64, offset: 832)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "di", scope: !2194, file: !2195, line: 76, baseType: !136, size: 64, offset: 896)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "orig_ax", scope: !2194, file: !2195, line: 81, baseType: !136, size: 64, offset: 960)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2194, file: !2195, line: 83, baseType: !136, size: 64, offset: 1024)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !2194, file: !2195, line: 84, baseType: !136, size: 64, offset: 1088)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2194, file: !2195, line: 85, baseType: !136, size: 64, offset: 1152)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !2194, file: !2195, line: 86, baseType: !136, size: 64, offset: 1216)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "ss", scope: !2194, file: !2195, line: 87, baseType: !136, size: 64, offset: 1280)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "entry_eip", scope: !2170, file: !2110, line: 96, baseType: !437, size: 32, offset: 1024)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "xsave", scope: !2115, file: !2110, line: 308, baseType: !2220, size: 4608, align: 512)
!2220 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xregs_state", file: !2110, line: 289, size: 4608, align: 512, elements: !2221)
!2221 = !{!2222, !2223, !2230}
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "i387", scope: !2220, file: !2110, line: 290, baseType: !2133, size: 4096, align: 128)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !2220, file: !2110, line: 291, baseType: !2224, size: 512, offset: 4096)
!2224 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xstate_header", file: !2110, line: 268, size: 512, elements: !2225)
!2225 = !{!2226, !2227, !2228}
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "xfeatures", scope: !2224, file: !2110, line: 269, baseType: !442, size: 64)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "xcomp_bv", scope: !2224, file: !2110, line: 270, baseType: !442, size: 64, offset: 64)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !2224, file: !2110, line: 271, baseType: !2229, size: 384, offset: 128)
!2229 = !DICompositeType(tag: DW_TAG_array_type, baseType: !442, size: 384, elements: !1564)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "extended_state_area", scope: !2220, file: !2110, line: 292, baseType: !2231, offset: 4608)
!2231 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1292, elements: !1662)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "__padding", scope: !2115, file: !2110, line: 309, baseType: !2233, size: 32768)
!2233 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1292, size: 32768, elements: !2234)
!2234 = !{!2235}
!2235 = !DISubrange(count: 4096)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1154, file: !744, line: 378, baseType: !2237, size: 64, offset: 64)
!2237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1154, size: 64)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "startup", scope: !1150, file: !744, line: 384, baseType: !1441, size: 192, offset: 192)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_lock", scope: !999, file: !744, line: 500, baseType: !185, offset: 6656)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_table", scope: !999, file: !744, line: 501, baseType: !2241, size: 64, offset: 6656)
!2241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2242, size: 64)
!2242 = !DICompositeType(tag: DW_TAG_structure_type, name: "kioctx_table", file: !744, line: 387, flags: DIFlagFwdDecl)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !999, file: !744, line: 516, baseType: !1652, size: 64, offset: 6720)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "exe_file", scope: !999, file: !744, line: 519, baseType: !374, size: 64, offset: 6784)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_subscriptions", scope: !999, file: !744, line: 521, baseType: !2246, size: 64, offset: 6848)
!2246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2247, size: 64)
!2247 = !DICompositeType(tag: DW_TAG_structure_type, name: "mmu_notifier_subscriptions", file: !744, line: 521, flags: DIFlagFwdDecl)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_pending", scope: !999, file: !744, line: 545, baseType: !768, size: 32, offset: 6912)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_batched", scope: !999, file: !744, line: 548, baseType: !171, size: 8, offset: 6944)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "uprobes_state", scope: !999, file: !744, line: 550, baseType: !2251, offset: 6952)
!2251 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uprobes_state", file: !2252, line: 142, elements: !199)
!2252 = !DIFile(filename: "./include/linux/uprobes.h", directory: "/home/lizy2001/genbc/linux")
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "async_put_work", scope: !999, file: !744, line: 554, baseType: !1898, size: 256, offset: 6976)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "pasid", scope: !999, file: !744, line: 557, baseType: !437, size: 32, offset: 7232)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_bitmap", scope: !996, file: !744, line: 565, baseType: !2256, offset: 7296)
!2256 = !DICompositeType(tag: DW_TAG_array_type, baseType: !136, elements: !2257)
!2257 = !{!2258}
!2258 = !DISubrange(count: -1)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "pt_frag_refcount", scope: !992, file: !744, line: 151, baseType: !768, size: 32)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !985, file: !744, line: 156, baseType: !185, offset: 256)
!2261 = !DIDerivedType(tag: DW_TAG_member, scope: !748, file: !744, line: 159, baseType: !2262, size: 128)
!2262 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !748, file: !744, line: 159, size: 128, elements: !2263)
!2263 = !{!2264, !2267}
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "pgmap", scope: !2262, file: !744, line: 161, baseType: !2265, size: 64)
!2265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2266, size: 64)
!2266 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap", file: !744, line: 161, flags: DIFlagFwdDecl)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "zone_device_data", scope: !2262, file: !744, line: 162, baseType: !139, size: 64, offset: 64)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !748, file: !744, line: 176, baseType: !387, size: 128, align: 64)
!2269 = !DIDerivedType(tag: DW_TAG_member, scope: !743, file: !744, line: 179, baseType: !2270, size: 32, offset: 384)
!2270 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !743, file: !744, line: 179, size: 32, elements: !2271)
!2271 = !{!2272, !2273, !2274, !2275}
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "_mapcount", scope: !2270, file: !744, line: 184, baseType: !768, size: 32)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "page_type", scope: !2270, file: !744, line: 192, baseType: !7, size: 32)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !2270, file: !744, line: 194, baseType: !7, size: 32)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !2270, file: !744, line: 195, baseType: !132, size: 32)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "_refcount", scope: !743, file: !744, line: 199, baseType: !768, size: 32, offset: 416)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cached_objects", scope: !678, file: !31, line: 1964, baseType: !2278, size: 64, offset: 1344)
!2278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2279, size: 64)
!2279 = !DISubroutineType(types: !2280)
!2280 = !{!93, !617, !2281}
!2281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2282, size: 64)
!2282 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrink_control", file: !2283, line: 12, size: 256, elements: !2284)
!2283 = !DIFile(filename: "./include/linux/shrinker.h", directory: "/home/lizy2001/genbc/linux")
!2284 = !{!2285, !2286, !2287, !2288, !2289}
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !2282, file: !2283, line: 13, baseType: !137, size: 32)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "nid", scope: !2282, file: !2283, line: 16, baseType: !132, size: 32, offset: 32)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "nr_to_scan", scope: !2282, file: !2283, line: 23, baseType: !136, size: 64, offset: 64)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "nr_scanned", scope: !2282, file: !2283, line: 30, baseType: !136, size: 64, offset: 128)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "memcg", scope: !2282, file: !2283, line: 33, baseType: !2290, size: 64, offset: 192)
!2290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2291, size: 64)
!2291 = !DICompositeType(tag: DW_TAG_structure_type, name: "mem_cgroup", file: !744, line: 27, flags: DIFlagFwdDecl)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "free_cached_objects", scope: !678, file: !31, line: 1966, baseType: !2278, size: 64, offset: 1408)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "dq_op", scope: !618, file: !31, line: 1424, baseType: !2294, size: 64, offset: 448)
!2294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2295, size: 64)
!2295 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2296)
!2296 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot_operations", file: !25, line: 322, size: 704, elements: !2297)
!2297 = !{!2298, !2344, !2348, !2352, !2353, !2354, !2355, !2356, !2361, !2366, !2370}
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "write_dquot", scope: !2296, file: !25, line: 323, baseType: !2299, size: 64)
!2299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2300, size: 64)
!2300 = !DISubroutineType(types: !2301)
!2301 = !{!132, !2302}
!2302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2303, size: 64)
!2303 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot", file: !25, line: 294, size: 1600, elements: !2304)
!2304 = !{!2305, !2306, !2307, !2308, !2309, !2310, !2311, !2312, !2313, !2329, !2330, !2331}
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "dq_hash", scope: !2303, file: !25, line: 295, baseType: !660, size: 128)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "dq_inuse", scope: !2303, file: !25, line: 296, baseType: !143, size: 128, offset: 128)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "dq_free", scope: !2303, file: !25, line: 297, baseType: !143, size: 128, offset: 256)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dirty", scope: !2303, file: !25, line: 298, baseType: !143, size: 128, offset: 384)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "dq_lock", scope: !2303, file: !25, line: 299, baseType: !1114, size: 192, offset: 512)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb_lock", scope: !2303, file: !25, line: 300, baseType: !185, offset: 704)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "dq_count", scope: !2303, file: !25, line: 301, baseType: !768, size: 32, offset: 704)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "dq_sb", scope: !2303, file: !25, line: 302, baseType: !617, size: 64, offset: 768)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "dq_id", scope: !2303, file: !25, line: 303, baseType: !2314, size: 64, offset: 832)
!2314 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kqid", file: !25, line: 68, size: 64, elements: !2315)
!2315 = !{!2316, !2328}
!2316 = !DIDerivedType(tag: DW_TAG_member, scope: !2314, file: !25, line: 69, baseType: !2317, size: 32)
!2317 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2314, file: !25, line: 69, size: 32, elements: !2318)
!2318 = !{!2319, !2320, !2321}
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2317, file: !25, line: 70, baseType: !455, size: 32)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !2317, file: !25, line: 71, baseType: !463, size: 32)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "projid", scope: !2317, file: !25, line: 72, baseType: !2322, size: 32)
!2322 = !DIDerivedType(tag: DW_TAG_typedef, name: "kprojid_t", file: !2323, line: 24, baseType: !2324)
!2323 = !DIFile(filename: "./include/linux/projid.h", directory: "/home/lizy2001/genbc/linux")
!2324 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2323, line: 22, size: 32, elements: !2325)
!2325 = !{!2326}
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2324, file: !2323, line: 23, baseType: !2327, size: 32)
!2327 = !DIDerivedType(tag: DW_TAG_typedef, name: "projid_t", file: !2323, line: 20, baseType: !461)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2314, file: !25, line: 74, baseType: !24, size: 32, offset: 32)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "dq_off", scope: !2303, file: !25, line: 304, baseType: !549, size: 64, offset: 896)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "dq_flags", scope: !2303, file: !25, line: 305, baseType: !136, size: 64, offset: 960)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb", scope: !2303, file: !25, line: 306, baseType: !2332, size: 576, offset: 1024)
!2332 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqblk", file: !25, line: 205, size: 576, elements: !2333)
!2333 = !{!2334, !2336, !2337, !2338, !2339, !2340, !2341, !2342, !2343}
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bhardlimit", scope: !2332, file: !25, line: 206, baseType: !2335, size: 64)
!2335 = !DIDerivedType(tag: DW_TAG_typedef, name: "qsize_t", file: !25, line: 66, baseType: !551)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bsoftlimit", scope: !2332, file: !25, line: 207, baseType: !2335, size: 64, offset: 64)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curspace", scope: !2332, file: !25, line: 208, baseType: !2335, size: 64, offset: 128)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_rsvspace", scope: !2332, file: !25, line: 209, baseType: !2335, size: 64, offset: 192)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_ihardlimit", scope: !2332, file: !25, line: 210, baseType: !2335, size: 64, offset: 256)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_isoftlimit", scope: !2332, file: !25, line: 211, baseType: !2335, size: 64, offset: 320)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curinodes", scope: !2332, file: !25, line: 212, baseType: !2335, size: 64, offset: 384)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_btime", scope: !2332, file: !25, line: 213, baseType: !557, size: 64, offset: 448)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_itime", scope: !2332, file: !25, line: 214, baseType: !557, size: 64, offset: 512)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_dquot", scope: !2296, file: !25, line: 324, baseType: !2345, size: 64, offset: 64)
!2345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2346, size: 64)
!2346 = !DISubroutineType(types: !2347)
!2347 = !{!2302, !617, !132}
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_dquot", scope: !2296, file: !25, line: 325, baseType: !2349, size: 64, offset: 128)
!2349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2350, size: 64)
!2350 = !DISubroutineType(types: !2351)
!2351 = !{null, !2302}
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "acquire_dquot", scope: !2296, file: !25, line: 326, baseType: !2299, size: 64, offset: 192)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "release_dquot", scope: !2296, file: !25, line: 327, baseType: !2299, size: 64, offset: 256)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "mark_dirty", scope: !2296, file: !25, line: 328, baseType: !2299, size: 64, offset: 320)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "write_info", scope: !2296, file: !25, line: 329, baseType: !706, size: 64, offset: 384)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "get_reserved_space", scope: !2296, file: !25, line: 332, baseType: !2357, size: 64, offset: 448)
!2357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2358, size: 64)
!2358 = !DISubroutineType(types: !2359)
!2359 = !{!2360, !449}
!2360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2335, size: 64)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "get_projid", scope: !2296, file: !25, line: 333, baseType: !2362, size: 64, offset: 512)
!2362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2363, size: 64)
!2363 = !DISubroutineType(types: !2364)
!2364 = !{!132, !449, !2365}
!2365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2322, size: 64)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "get_inode_usage", scope: !2296, file: !25, line: 335, baseType: !2367, size: 64, offset: 576)
!2367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2368, size: 64)
!2368 = !DISubroutineType(types: !2369)
!2369 = !{!132, !449, !2360}
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !2296, file: !25, line: 337, baseType: !2371, size: 64, offset: 640)
!2371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2372, size: 64)
!2372 = !DISubroutineType(types: !2373)
!2373 = !{!132, !617, !2374}
!2374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2314, size: 64)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "s_qcop", scope: !618, file: !31, line: 1425, baseType: !2376, size: 64, offset: 512)
!2376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2377, size: 64)
!2377 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2378)
!2378 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quotactl_ops", file: !25, line: 428, size: 704, elements: !2379)
!2379 = !{!2380, !2384, !2385, !2389, !2390, !2391, !2406, !2429, !2433, !2434, !2457}
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "quota_on", scope: !2378, file: !25, line: 429, baseType: !2381, size: 64)
!2381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2382, size: 64)
!2382 = !DISubroutineType(types: !2383)
!2383 = !{!132, !617, !132, !132, !567}
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "quota_off", scope: !2378, file: !25, line: 430, baseType: !706, size: 64, offset: 64)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "quota_enable", scope: !2378, file: !25, line: 431, baseType: !2386, size: 64, offset: 128)
!2386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2387, size: 64)
!2387 = !DISubroutineType(types: !2388)
!2388 = !{!132, !617, !7}
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "quota_disable", scope: !2378, file: !25, line: 432, baseType: !2386, size: 64, offset: 192)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "quota_sync", scope: !2378, file: !25, line: 433, baseType: !706, size: 64, offset: 256)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "set_info", scope: !2378, file: !25, line: 434, baseType: !2392, size: 64, offset: 320)
!2392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2393, size: 64)
!2393 = !DISubroutineType(types: !2394)
!2394 = !{!132, !617, !132, !2395}
!2395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2396, size: 64)
!2396 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_info", file: !25, line: 415, size: 256, elements: !2397)
!2397 = !{!2398, !2399, !2400, !2401, !2402, !2403, !2404, !2405}
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "i_fieldmask", scope: !2396, file: !25, line: 416, baseType: !132, size: 32)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !2396, file: !25, line: 417, baseType: !7, size: 32, offset: 32)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_timelimit", scope: !2396, file: !25, line: 418, baseType: !7, size: 32, offset: 64)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_timelimit", scope: !2396, file: !25, line: 420, baseType: !7, size: 32, offset: 96)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_timelimit", scope: !2396, file: !25, line: 421, baseType: !7, size: 32, offset: 128)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_warnlimit", scope: !2396, file: !25, line: 422, baseType: !7, size: 32, offset: 160)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_warnlimit", scope: !2396, file: !25, line: 423, baseType: !7, size: 32, offset: 192)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_warnlimit", scope: !2396, file: !25, line: 424, baseType: !7, size: 32, offset: 224)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "get_dqblk", scope: !2378, file: !25, line: 435, baseType: !2407, size: 64, offset: 384)
!2407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2408, size: 64)
!2408 = !DISubroutineType(types: !2409)
!2409 = !{!132, !617, !2314, !2410}
!2410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2411, size: 64)
!2411 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_dqblk", file: !25, line: 343, size: 960, elements: !2412)
!2412 = !{!2413, !2414, !2415, !2416, !2417, !2418, !2419, !2420, !2421, !2422, !2423, !2424, !2425, !2426, !2427, !2428}
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "d_fieldmask", scope: !2411, file: !25, line: 344, baseType: !132, size: 32)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_hardlimit", scope: !2411, file: !25, line: 345, baseType: !442, size: 64, offset: 64)
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_softlimit", scope: !2411, file: !25, line: 346, baseType: !442, size: 64, offset: 128)
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_hardlimit", scope: !2411, file: !25, line: 347, baseType: !442, size: 64, offset: 192)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_softlimit", scope: !2411, file: !25, line: 348, baseType: !442, size: 64, offset: 256)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "d_space", scope: !2411, file: !25, line: 349, baseType: !442, size: 64, offset: 320)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_count", scope: !2411, file: !25, line: 350, baseType: !442, size: 64, offset: 384)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_timer", scope: !2411, file: !25, line: 351, baseType: !798, size: 64, offset: 448)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_timer", scope: !2411, file: !25, line: 353, baseType: !798, size: 64, offset: 512)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_warns", scope: !2411, file: !25, line: 354, baseType: !132, size: 32, offset: 576)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_warns", scope: !2411, file: !25, line: 355, baseType: !132, size: 32, offset: 608)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_hardlimit", scope: !2411, file: !25, line: 356, baseType: !442, size: 64, offset: 640)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_softlimit", scope: !2411, file: !25, line: 357, baseType: !442, size: 64, offset: 704)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_space", scope: !2411, file: !25, line: 358, baseType: !442, size: 64, offset: 768)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_timer", scope: !2411, file: !25, line: 359, baseType: !798, size: 64, offset: 832)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_warns", scope: !2411, file: !25, line: 360, baseType: !132, size: 32, offset: 896)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "get_nextdqblk", scope: !2378, file: !25, line: 436, baseType: !2430, size: 64, offset: 448)
!2430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2431, size: 64)
!2431 = !DISubroutineType(types: !2432)
!2432 = !{!132, !617, !2374, !2410}
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "set_dqblk", scope: !2378, file: !25, line: 438, baseType: !2407, size: 64, offset: 512)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "get_state", scope: !2378, file: !25, line: 439, baseType: !2435, size: 64, offset: 576)
!2435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2436, size: 64)
!2436 = !DISubroutineType(types: !2437)
!2437 = !{!132, !617, !2438}
!2438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2439, size: 64)
!2439 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_state", file: !25, line: 409, size: 1408, elements: !2440)
!2440 = !{!2441, !2442}
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "s_incoredqs", scope: !2439, file: !25, line: 410, baseType: !7, size: 32)
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "s_state", scope: !2439, file: !25, line: 411, baseType: !2443, size: 1344, offset: 64)
!2443 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2444, size: 1344, elements: !299)
!2444 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_type_state", file: !25, line: 395, size: 448, elements: !2445)
!2445 = !{!2446, !2447, !2448, !2449, !2450, !2451, !2452, !2453, !2454, !2456}
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2444, file: !25, line: 396, baseType: !7, size: 32)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "spc_timelimit", scope: !2444, file: !25, line: 397, baseType: !7, size: 32, offset: 32)
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "ino_timelimit", scope: !2444, file: !25, line: 399, baseType: !7, size: 32, offset: 64)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_timelimit", scope: !2444, file: !25, line: 400, baseType: !7, size: 32, offset: 96)
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "spc_warnlimit", scope: !2444, file: !25, line: 401, baseType: !7, size: 32, offset: 128)
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "ino_warnlimit", scope: !2444, file: !25, line: 402, baseType: !7, size: 32, offset: 160)
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_warnlimit", scope: !2444, file: !25, line: 403, baseType: !7, size: 32, offset: 192)
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !2444, file: !25, line: 404, baseType: !444, size: 64, offset: 256)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !2444, file: !25, line: 405, baseType: !2455, size: 64, offset: 320)
!2455 = !DIDerivedType(tag: DW_TAG_typedef, name: "blkcnt_t", file: !138, line: 126, baseType: !442)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "nextents", scope: !2444, file: !25, line: 406, baseType: !2455, size: 64, offset: 384)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "rm_xquota", scope: !2378, file: !25, line: 440, baseType: !2386, size: 64, offset: 640)
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "s_export_op", scope: !618, file: !31, line: 1426, baseType: !2459, size: 64, offset: 576)
!2459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2460, size: 64)
!2460 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2461)
!2461 = !DICompositeType(tag: DW_TAG_structure_type, name: "export_operations", file: !31, line: 49, flags: DIFlagFwdDecl)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "s_flags", scope: !618, file: !31, line: 1427, baseType: !136, size: 64, offset: 640)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "s_iflags", scope: !618, file: !31, line: 1428, baseType: !136, size: 64, offset: 704)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "s_magic", scope: !618, file: !31, line: 1429, baseType: !136, size: 64, offset: 768)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "s_root", scope: !618, file: !31, line: 1430, baseType: !404, size: 64, offset: 832)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount", scope: !618, file: !31, line: 1431, baseType: !788, size: 256, offset: 896)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "s_count", scope: !618, file: !31, line: 1432, baseType: !132, size: 32, offset: 1152)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "s_active", scope: !618, file: !31, line: 1433, baseType: !768, size: 32, offset: 1184)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "s_xattr", scope: !618, file: !31, line: 1437, baseType: !2470, size: 64, offset: 1216)
!2470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2471, size: 64)
!2471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2472, size: 64)
!2472 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2473)
!2473 = !DICompositeType(tag: DW_TAG_structure_type, name: "xattr_handler", file: !31, line: 1437, flags: DIFlagFwdDecl)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "s_roots", scope: !618, file: !31, line: 1449, baseType: !2475, size: 64, offset: 1280)
!2475 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_head", file: !420, line: 34, size: 64, elements: !2476)
!2476 = !{!2477}
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !2475, file: !420, line: 35, baseType: !423, size: 64)
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "s_mounts", scope: !618, file: !31, line: 1450, baseType: !143, size: 128, offset: 1344)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdev", scope: !618, file: !31, line: 1451, baseType: !2480, size: 64, offset: 1472)
!2480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2481, size: 64)
!2481 = !DICompositeType(tag: DW_TAG_structure_type, name: "block_device", file: !31, line: 699, flags: DIFlagFwdDecl)
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdi", scope: !618, file: !31, line: 1452, baseType: !1864, size: 64, offset: 1536)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "s_mtd", scope: !618, file: !31, line: 1453, baseType: !2484, size: 64, offset: 1600)
!2484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2485, size: 64)
!2485 = !DICompositeType(tag: DW_TAG_structure_type, name: "mtd_info", file: !31, line: 1453, flags: DIFlagFwdDecl)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "s_instances", scope: !618, file: !31, line: 1454, baseType: !660, size: 128, offset: 1664)
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "s_quota_types", scope: !618, file: !31, line: 1455, baseType: !7, size: 32, offset: 1792)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "s_dquot", scope: !618, file: !31, line: 1456, baseType: !2489, size: 2432, offset: 1856)
!2489 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_info", file: !25, line: 518, size: 2432, elements: !2490)
!2490 = !{!2491, !2492, !2493, !2495, !2527}
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2489, file: !25, line: 519, baseType: !7, size: 32)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "dqio_sem", scope: !2489, file: !25, line: 520, baseType: !788, size: 256, offset: 64)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !2489, file: !25, line: 521, baseType: !2494, size: 192, offset: 320)
!2494 = !DICompositeType(tag: DW_TAG_array_type, baseType: !449, size: 192, elements: !299)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !2489, file: !25, line: 522, baseType: !2496, size: 1728, offset: 512)
!2496 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2497, size: 1728, elements: !299)
!2497 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqinfo", file: !25, line: 222, size: 576, elements: !2498)
!2498 = !{!2499, !2519, !2520, !2521, !2522, !2523, !2524, !2525, !2526}
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_format", scope: !2497, file: !25, line: 223, baseType: !2500, size: 64)
!2500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2501, size: 64)
!2501 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_type", file: !25, line: 443, size: 256, elements: !2502)
!2502 = !{!2503, !2504, !2517, !2518}
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "qf_fmt_id", scope: !2501, file: !25, line: 444, baseType: !132, size: 32)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "qf_ops", scope: !2501, file: !25, line: 445, baseType: !2505, size: 64, offset: 64)
!2505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2506, size: 64)
!2506 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2507)
!2507 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_ops", file: !25, line: 310, size: 512, elements: !2508)
!2508 = !{!2509, !2510, !2511, !2512, !2513, !2514, !2515, !2516}
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "check_quota_file", scope: !2507, file: !25, line: 311, baseType: !706, size: 64)
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "read_file_info", scope: !2507, file: !25, line: 312, baseType: !706, size: 64, offset: 64)
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "write_file_info", scope: !2507, file: !25, line: 313, baseType: !706, size: 64, offset: 128)
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "free_file_info", scope: !2507, file: !25, line: 314, baseType: !706, size: 64, offset: 192)
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "read_dqblk", scope: !2507, file: !25, line: 315, baseType: !2299, size: 64, offset: 256)
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "commit_dqblk", scope: !2507, file: !25, line: 316, baseType: !2299, size: 64, offset: 320)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "release_dqblk", scope: !2507, file: !25, line: 317, baseType: !2299, size: 64, offset: 384)
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !2507, file: !25, line: 318, baseType: !2371, size: 64, offset: 448)
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "qf_owner", scope: !2501, file: !25, line: 446, baseType: !651, size: 64, offset: 128)
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "qf_next", scope: !2501, file: !25, line: 447, baseType: !2500, size: 64, offset: 192)
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_fmt_id", scope: !2497, file: !25, line: 224, baseType: !132, size: 32, offset: 64)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_dirty_list", scope: !2497, file: !25, line: 226, baseType: !143, size: 128, offset: 128)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_flags", scope: !2497, file: !25, line: 227, baseType: !136, size: 64, offset: 256)
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_bgrace", scope: !2497, file: !25, line: 228, baseType: !7, size: 32, offset: 320)
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_igrace", scope: !2497, file: !25, line: 229, baseType: !7, size: 32, offset: 352)
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_spc_limit", scope: !2497, file: !25, line: 230, baseType: !2335, size: 64, offset: 384)
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_ino_limit", scope: !2497, file: !25, line: 231, baseType: !2335, size: 64, offset: 448)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_priv", scope: !2497, file: !25, line: 232, baseType: !139, size: 64, offset: 512)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2489, file: !25, line: 523, baseType: !2528, size: 192, offset: 2240)
!2528 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2505, size: 192, elements: !299)
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers", scope: !618, file: !31, line: 1458, baseType: !2530, size: 2112, offset: 4288)
!2530 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sb_writers", file: !31, line: 1410, size: 2112, elements: !2531)
!2531 = !{!2532, !2533, !2534}
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !2530, file: !31, line: 1411, baseType: !132, size: 32)
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "wait_unfrozen", scope: !2530, file: !31, line: 1412, baseType: !1420, size: 128, offset: 64)
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "rw_sem", scope: !2530, file: !31, line: 1413, baseType: !2535, size: 1920, offset: 192)
!2535 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2536, size: 1920, elements: !299)
!2536 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_rw_semaphore", file: !2537, line: 12, size: 640, elements: !2538)
!2537 = !DIFile(filename: "./include/linux/percpu-rwsem.h", directory: "/home/lizy2001/genbc/linux")
!2538 = !{!2539, !2547, !2549, !2554, !2555}
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "rss", scope: !2536, file: !2537, line: 13, baseType: !2540, size: 320)
!2540 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcu_sync", file: !2541, line: 17, size: 320, elements: !2542)
!2541 = !DIFile(filename: "./include/linux/rcu_sync.h", directory: "/home/lizy2001/genbc/linux")
!2542 = !{!2543, !2544, !2545, !2546}
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "gp_state", scope: !2540, file: !2541, line: 18, baseType: !132, size: 32)
!2544 = !DIDerivedType(tag: DW_TAG_member, name: "gp_count", scope: !2540, file: !2541, line: 19, baseType: !132, size: 32, offset: 32)
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "gp_wait", scope: !2540, file: !2541, line: 20, baseType: !1420, size: 128, offset: 64)
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "cb_head", scope: !2540, file: !2541, line: 22, baseType: !387, size: 128, align: 64, offset: 192)
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "read_count", scope: !2536, file: !2537, line: 14, baseType: !2548, size: 64, offset: 320)
!2548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "writer", scope: !2536, file: !2537, line: 15, baseType: !2550, size: 64, offset: 384)
!2550 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcuwait", file: !2551, line: 16, size: 64, elements: !2552)
!2551 = !DIFile(filename: "./include/linux/rcuwait.h", directory: "/home/lizy2001/genbc/linux")
!2552 = !{!2553}
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !2550, file: !2551, line: 17, baseType: !1157, size: 64)
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "waiters", scope: !2536, file: !2537, line: 16, baseType: !1420, size: 128, offset: 448)
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !2536, file: !2537, line: 17, baseType: !768, size: 32, offset: 576)
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "s_fs_info", scope: !618, file: !31, line: 1465, baseType: !139, size: 64, offset: 6400)
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_gran", scope: !618, file: !31, line: 1468, baseType: !437, size: 32, offset: 6464)
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_min", scope: !618, file: !31, line: 1470, baseType: !557, size: 64, offset: 6528)
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_max", scope: !618, file: !31, line: 1471, baseType: !557, size: 64, offset: 6592)
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_mask", scope: !618, file: !31, line: 1473, baseType: !439, size: 32, offset: 6656)
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_marks", scope: !618, file: !31, line: 1474, baseType: !2562, size: 64, offset: 6720)
!2562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2563, size: 64)
!2563 = !DICompositeType(tag: DW_TAG_structure_type, name: "fsnotify_mark_connector", file: !31, line: 603, flags: DIFlagFwdDecl)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "s_id", scope: !618, file: !31, line: 1477, baseType: !161, size: 256, offset: 6784)
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "s_uuid", scope: !618, file: !31, line: 1478, baseType: !2566, size: 128, offset: 7040)
!2566 = !DIDerivedType(tag: DW_TAG_typedef, name: "uuid_t", file: !2567, line: 18, baseType: !2568)
!2567 = !DIFile(filename: "./include/linux/uuid.h", directory: "/home/lizy2001/genbc/linux")
!2568 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2567, line: 16, size: 128, elements: !2569)
!2569 = !{!2570}
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !2568, file: !2567, line: 17, baseType: !2571, size: 128)
!2571 = !DICompositeType(tag: DW_TAG_array_type, baseType: !178, size: 128, elements: !1674)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "s_max_links", scope: !618, file: !31, line: 1480, baseType: !7, size: 32, offset: 7168)
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "s_mode", scope: !618, file: !31, line: 1481, baseType: !2574, size: 32, offset: 7200)
!2574 = !DIDerivedType(tag: DW_TAG_typedef, name: "fmode_t", file: !138, line: 150, baseType: !7)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_mutex", scope: !618, file: !31, line: 1487, baseType: !1114, size: 192, offset: 7232)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "s_subtype", scope: !618, file: !31, line: 1493, baseType: !223, size: 64, offset: 7424)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "s_d_op", scope: !618, file: !31, line: 1495, baseType: !2578, size: 64, offset: 7488)
!2578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2579, size: 64)
!2579 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2580)
!2580 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry_operations", file: !402, line: 135, size: 1024, align: 512, elements: !2581)
!2581 = !{!2582, !2586, !2587, !2594, !2600, !2604, !2608, !2612, !2613, !2617, !2621, !2626, !2630}
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "d_revalidate", scope: !2580, file: !402, line: 136, baseType: !2583, size: 64)
!2583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2584, size: 64)
!2584 = !DISubroutineType(types: !2585)
!2585 = !{!132, !404, !7}
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "d_weak_revalidate", scope: !2580, file: !402, line: 137, baseType: !2583, size: 64, offset: 64)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !2580, file: !402, line: 138, baseType: !2588, size: 64, offset: 128)
!2588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2589, size: 64)
!2589 = !DISubroutineType(types: !2590)
!2590 = !{!132, !2591, !2593}
!2591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2592, size: 64)
!2592 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !405)
!2593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !428, size: 64)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "d_compare", scope: !2580, file: !402, line: 139, baseType: !2595, size: 64, offset: 192)
!2595 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2596, size: 64)
!2596 = !DISubroutineType(types: !2597)
!2597 = !{!132, !2591, !7, !223, !2598}
!2598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2599, size: 64)
!2599 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !428)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "d_delete", scope: !2580, file: !402, line: 141, baseType: !2601, size: 64, offset: 256)
!2601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2602, size: 64)
!2602 = !DISubroutineType(types: !2603)
!2603 = !{!132, !2591}
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "d_init", scope: !2580, file: !402, line: 142, baseType: !2605, size: 64, offset: 320)
!2605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2606, size: 64)
!2606 = !DISubroutineType(types: !2607)
!2607 = !{!132, !404}
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "d_release", scope: !2580, file: !402, line: 143, baseType: !2609, size: 64, offset: 384)
!2609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2610, size: 64)
!2610 = !DISubroutineType(types: !2611)
!2611 = !{null, !404}
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "d_prune", scope: !2580, file: !402, line: 144, baseType: !2609, size: 64, offset: 448)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "d_iput", scope: !2580, file: !402, line: 145, baseType: !2614, size: 64, offset: 512)
!2614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2615, size: 64)
!2615 = !DISubroutineType(types: !2616)
!2616 = !{null, !404, !449}
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "d_dname", scope: !2580, file: !402, line: 146, baseType: !2618, size: 64, offset: 576)
!2618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2619, size: 64)
!2619 = !DISubroutineType(types: !2620)
!2620 = !{!298, !404, !298, !132}
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "d_automount", scope: !2580, file: !402, line: 147, baseType: !2622, size: 64, offset: 640)
!2622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2623, size: 64)
!2623 = !DISubroutineType(types: !2624)
!2624 = !{!400, !2625}
!2625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !396, size: 64)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "d_manage", scope: !2580, file: !402, line: 148, baseType: !2627, size: 64, offset: 704)
!2627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2628, size: 64)
!2628 = !DISubroutineType(types: !2629)
!2629 = !{!132, !567, !171}
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "d_real", scope: !2580, file: !402, line: 149, baseType: !2631, size: 64, offset: 768)
!2631 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2632, size: 64)
!2632 = !DISubroutineType(types: !2633)
!2633 = !{!404, !404, !2634}
!2634 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2635, size: 64)
!2635 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !450)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "cleancache_poolid", scope: !618, file: !31, line: 1500, baseType: !132, size: 32, offset: 7552)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "s_shrink", scope: !618, file: !31, line: 1502, baseType: !2638, size: 448, offset: 7616)
!2638 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrinker", file: !2283, line: 60, size: 448, elements: !2639)
!2639 = !{!2640, !2645, !2646, !2647, !2648, !2649, !2650}
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "count_objects", scope: !2638, file: !2283, line: 61, baseType: !2641, size: 64)
!2641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2642, size: 64)
!2642 = !DISubroutineType(types: !2643)
!2643 = !{!136, !2644, !2281}
!2644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2638, size: 64)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "scan_objects", scope: !2638, file: !2283, line: 63, baseType: !2641, size: 64, offset: 64)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !2638, file: !2283, line: 66, baseType: !93, size: 64, offset: 128)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "seeks", scope: !2638, file: !2283, line: 67, baseType: !132, size: 32, offset: 192)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2638, file: !2283, line: 68, baseType: !7, size: 32, offset: 224)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2638, file: !2283, line: 71, baseType: !143, size: 128, offset: 256)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "nr_deferred", scope: !2638, file: !2283, line: 77, baseType: !2651, size: 64, offset: 384)
!2651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !792, size: 64)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "s_remove_count", scope: !618, file: !31, line: 1505, baseType: !792, size: 64, offset: 8064)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_inode_refs", scope: !618, file: !31, line: 1508, baseType: !792, size: 64, offset: 8128)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "s_readonly_remount", scope: !618, file: !31, line: 1511, baseType: !132, size: 32, offset: 8192)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "s_wb_err", scope: !618, file: !31, line: 1514, baseType: !930, size: 32, offset: 8224)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "s_dio_done_wq", scope: !618, file: !31, line: 1517, baseType: !2657, size: 64, offset: 8256)
!2657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2658, size: 64)
!2658 = !DICompositeType(tag: DW_TAG_structure_type, name: "workqueue_struct", file: !92, line: 18, flags: DIFlagFwdDecl)
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "s_pins", scope: !618, file: !31, line: 1518, baseType: !656, size: 64, offset: 8320)
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "s_user_ns", scope: !618, file: !31, line: 1525, baseType: !1652, size: 64, offset: 8384)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "s_dentry_lru", scope: !618, file: !31, line: 1532, baseType: !2662, size: 64, offset: 8448)
!2662 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru", file: !2663, line: 52, size: 64, elements: !2664)
!2663 = !DIFile(filename: "./include/linux/list_lru.h", directory: "/home/lizy2001/genbc/linux")
!2664 = !{!2665}
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2662, file: !2663, line: 53, baseType: !2666, size: 64)
!2666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2667, size: 64)
!2667 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_node", file: !2663, line: 40, size: 256, elements: !2668)
!2668 = !{!2669, !2670, !2675}
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2667, file: !2663, line: 42, baseType: !185)
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !2667, file: !2663, line: 44, baseType: !2671, size: 192)
!2671 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_one", file: !2663, line: 28, size: 192, elements: !2672)
!2672 = !{!2673, !2674}
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2671, file: !2663, line: 29, baseType: !143, size: 128)
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !2671, file: !2663, line: 31, baseType: !93, size: 64, offset: 128)
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !2667, file: !2663, line: 49, baseType: !93, size: 64, offset: 192)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_lru", scope: !618, file: !31, line: 1533, baseType: !2662, size: 64, offset: 8512)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !618, file: !31, line: 1534, baseType: !387, size: 128, align: 64, offset: 8576)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_work", scope: !618, file: !31, line: 1535, baseType: !1898, size: 256, offset: 8704)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "s_sync_lock", scope: !618, file: !31, line: 1537, baseType: !1114, size: 192, offset: 8960)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "s_stack_depth", scope: !618, file: !31, line: 1542, baseType: !132, size: 32, offset: 9152)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_list_lock", scope: !618, file: !31, line: 1545, baseType: !185, offset: 9184)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes", scope: !618, file: !31, line: 1546, baseType: !143, size: 128, offset: 9216)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_wblist_lock", scope: !618, file: !31, line: 1548, baseType: !185, offset: 9344)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes_wb", scope: !618, file: !31, line: 1549, baseType: !143, size: 128, offset: 9344)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "i_mapping", scope: !450, file: !31, line: 624, baseType: !755, size: 64, offset: 256)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino", scope: !450, file: !31, line: 631, baseType: !136, size: 64, offset: 320)
!2687 = !DIDerivedType(tag: DW_TAG_member, scope: !450, file: !31, line: 639, baseType: !2688, size: 32, offset: 384)
!2688 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !450, file: !31, line: 639, size: 32, elements: !2689)
!2689 = !{!2690, !2692}
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "i_nlink", scope: !2688, file: !31, line: 640, baseType: !2691, size: 32)
!2691 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "__i_nlink", scope: !2688, file: !31, line: 641, baseType: !7, size: 32)
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "i_rdev", scope: !450, file: !31, line: 643, baseType: !531, size: 32, offset: 416)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "i_size", scope: !450, file: !31, line: 644, baseType: !549, size: 64, offset: 448)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "i_atime", scope: !450, file: !31, line: 645, baseType: !553, size: 128, offset: 512)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "i_mtime", scope: !450, file: !31, line: 646, baseType: !553, size: 128, offset: 640)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "i_ctime", scope: !450, file: !31, line: 647, baseType: !553, size: 128, offset: 768)
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock", scope: !450, file: !31, line: 648, baseType: !185, offset: 896)
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "i_bytes", scope: !450, file: !31, line: 649, baseType: !339, size: 16, offset: 896)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "i_blkbits", scope: !450, file: !31, line: 650, baseType: !1292, size: 8, offset: 912)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "i_write_hint", scope: !450, file: !31, line: 651, baseType: !1292, size: 8, offset: 920)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "i_blocks", scope: !450, file: !31, line: 652, baseType: !2455, size: 64, offset: 960)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "i_state", scope: !450, file: !31, line: 659, baseType: !136, size: 64, offset: 1024)
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "i_rwsem", scope: !450, file: !31, line: 660, baseType: !788, size: 256, offset: 1088)
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_when", scope: !450, file: !31, line: 662, baseType: !136, size: 64, offset: 1344)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_time_when", scope: !450, file: !31, line: 663, baseType: !136, size: 64, offset: 1408)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "i_hash", scope: !450, file: !31, line: 665, baseType: !660, size: 128, offset: 1472)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "i_io_list", scope: !450, file: !31, line: 666, baseType: !143, size: 128, offset: 1600)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "i_lru", scope: !450, file: !31, line: 675, baseType: !143, size: 128, offset: 1728)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb_list", scope: !450, file: !31, line: 676, baseType: !143, size: 128, offset: 1856)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "i_wb_list", scope: !450, file: !31, line: 677, baseType: !143, size: 128, offset: 1984)
!2712 = !DIDerivedType(tag: DW_TAG_member, scope: !450, file: !31, line: 678, baseType: !2713, size: 128, offset: 2112)
!2713 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !450, file: !31, line: 678, size: 128, elements: !2714)
!2714 = !{!2715, !2716}
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "i_dentry", scope: !2713, file: !31, line: 679, baseType: !656, size: 64)
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "i_rcu", scope: !2713, file: !31, line: 680, baseType: !387, size: 128, align: 64)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "i_version", scope: !450, file: !31, line: 682, baseType: !794, size: 64, offset: 2240)
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "i_sequence", scope: !450, file: !31, line: 683, baseType: !794, size: 64, offset: 2304)
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !450, file: !31, line: 684, baseType: !768, size: 32, offset: 2368)
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "i_dio_count", scope: !450, file: !31, line: 685, baseType: !768, size: 32, offset: 2400)
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "i_writecount", scope: !450, file: !31, line: 686, baseType: !768, size: 32, offset: 2432)
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "i_readcount", scope: !450, file: !31, line: 688, baseType: !768, size: 32, offset: 2464)
!2723 = !DIDerivedType(tag: DW_TAG_member, scope: !450, file: !31, line: 690, baseType: !2724, size: 64, offset: 2496)
!2724 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !450, file: !31, line: 690, size: 64, elements: !2725)
!2725 = !{!2726, !2949}
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "i_fop", scope: !2724, file: !31, line: 691, baseType: !2727, size: 64)
!2727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2728, size: 64)
!2728 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2729)
!2729 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_operations", file: !31, line: 1822, size: 2048, elements: !2730)
!2730 = !{!2731, !2732, !2736, !2741, !2745, !2746, !2747, !2751, !2764, !2765, !2773, !2777, !2778, !2782, !2783, !2787, !2792, !2793, !2797, !2801, !2909, !2913, !2914, !2918, !2919, !2923, !2927, !2932, !2936, !2940, !2944, !2948}
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2729, file: !31, line: 1823, baseType: !651, size: 64)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "llseek", scope: !2729, file: !31, line: 1824, baseType: !2733, size: 64, offset: 64)
!2733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2734, size: 64)
!2734 = !DISubroutineType(types: !2735)
!2735 = !{!549, !374, !549, !132}
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !2729, file: !31, line: 1825, baseType: !2737, size: 64, offset: 128)
!2737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2738, size: 64)
!2738 = !DISubroutineType(types: !2739)
!2739 = !{!329, !374, !298, !344, !2740}
!2740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !549, size: 64)
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !2729, file: !31, line: 1826, baseType: !2742, size: 64, offset: 192)
!2742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2743, size: 64)
!2743 = !DISubroutineType(types: !2744)
!2744 = !{!329, !374, !223, !344, !2740}
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "read_iter", scope: !2729, file: !31, line: 1827, baseType: !865, size: 64, offset: 256)
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "write_iter", scope: !2729, file: !31, line: 1828, baseType: !865, size: 64, offset: 320)
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "iopoll", scope: !2729, file: !31, line: 1829, baseType: !2748, size: 64, offset: 384)
!2748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2749, size: 64)
!2749 = !DISubroutineType(types: !2750)
!2750 = !{!132, !868, !171}
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "iterate", scope: !2729, file: !31, line: 1830, baseType: !2752, size: 64, offset: 448)
!2752 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2753, size: 64)
!2753 = !DISubroutineType(types: !2754)
!2754 = !{!132, !374, !2755}
!2755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2756, size: 64)
!2756 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dir_context", file: !31, line: 1776, size: 128, elements: !2757)
!2757 = !{!2758, !2763}
!2758 = !DIDerivedType(tag: DW_TAG_member, name: "actor", scope: !2756, file: !31, line: 1777, baseType: !2759, size: 64)
!2759 = !DIDerivedType(tag: DW_TAG_typedef, name: "filldir_t", file: !31, line: 1773, baseType: !2760)
!2760 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2761, size: 64)
!2761 = !DISubroutineType(types: !2762)
!2762 = !{!132, !2755, !223, !132, !549, !442, !7}
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !2756, file: !31, line: 1778, baseType: !549, size: 64, offset: 64)
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "iterate_shared", scope: !2729, file: !31, line: 1831, baseType: !2752, size: 64, offset: 512)
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !2729, file: !31, line: 1832, baseType: !2766, size: 64, offset: 576)
!2766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2767, size: 64)
!2767 = !DISubroutineType(types: !2768)
!2768 = !{!2769, !374, !2771}
!2769 = !DIDerivedType(tag: DW_TAG_typedef, name: "__poll_t", file: !2770, line: 52, baseType: !7)
!2770 = !DIFile(filename: "./include/uapi/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!2771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2772, size: 64)
!2772 = !DICompositeType(tag: DW_TAG_structure_type, name: "poll_table_struct", file: !637, line: 27, flags: DIFlagFwdDecl)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "unlocked_ioctl", scope: !2729, file: !31, line: 1833, baseType: !2774, size: 64, offset: 640)
!2774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2775, size: 64)
!2775 = !DISubroutineType(types: !2776)
!2776 = !{!93, !374, !7, !136}
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !2729, file: !31, line: 1834, baseType: !2774, size: 64, offset: 704)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !2729, file: !31, line: 1835, baseType: !2779, size: 64, offset: 768)
!2779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2780, size: 64)
!2780 = !DISubroutineType(types: !2781)
!2781 = !{!132, !374, !1002}
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_supported_flags", scope: !2729, file: !31, line: 1836, baseType: !136, size: 64, offset: 832)
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !2729, file: !31, line: 1837, baseType: !2784, size: 64, offset: 896)
!2784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2785, size: 64)
!2785 = !DISubroutineType(types: !2786)
!2786 = !{!132, !449, !374}
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !2729, file: !31, line: 1838, baseType: !2788, size: 64, offset: 960)
!2788 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2789, size: 64)
!2789 = !DISubroutineType(types: !2790)
!2790 = !{!132, !374, !2791}
!2791 = !DIDerivedType(tag: DW_TAG_typedef, name: "fl_owner_t", file: !31, line: 1007, baseType: !139)
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !2729, file: !31, line: 1839, baseType: !2784, size: 64, offset: 1024)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "fsync", scope: !2729, file: !31, line: 1840, baseType: !2794, size: 64, offset: 1088)
!2794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2795, size: 64)
!2795 = !DISubroutineType(types: !2796)
!2796 = !{!132, !374, !549, !549, !132}
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "fasync", scope: !2729, file: !31, line: 1841, baseType: !2798, size: 64, offset: 1152)
!2798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2799, size: 64)
!2799 = !DISubroutineType(types: !2800)
!2800 = !{!132, !132, !374, !132}
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2729, file: !31, line: 1842, baseType: !2802, size: 64, offset: 1216)
!2802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2803, size: 64)
!2803 = !DISubroutineType(types: !2804)
!2804 = !{!132, !374, !132, !2805}
!2805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2806, size: 64)
!2806 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock", file: !31, line: 1062, size: 1664, elements: !2807)
!2807 = !{!2808, !2809, !2810, !2811, !2812, !2813, !2814, !2815, !2816, !2817, !2818, !2819, !2820, !2821, !2822, !2839, !2840, !2841, !2854, !2885}
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocker", scope: !2806, file: !31, line: 1063, baseType: !2805, size: 64)
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "fl_list", scope: !2806, file: !31, line: 1064, baseType: !143, size: 128, offset: 64)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link", scope: !2806, file: !31, line: 1065, baseType: !660, size: 128, offset: 192)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_requests", scope: !2806, file: !31, line: 1066, baseType: !143, size: 128, offset: 320)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_member", scope: !2806, file: !31, line: 1069, baseType: !143, size: 128, offset: 448)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "fl_owner", scope: !2806, file: !31, line: 1072, baseType: !2791, size: 64, offset: 576)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "fl_flags", scope: !2806, file: !31, line: 1073, baseType: !7, size: 32, offset: 640)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "fl_type", scope: !2806, file: !31, line: 1074, baseType: !180, size: 8, offset: 672)
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "fl_pid", scope: !2806, file: !31, line: 1075, baseType: !7, size: 32, offset: 704)
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link_cpu", scope: !2806, file: !31, line: 1076, baseType: !132, size: 32, offset: 736)
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "fl_wait", scope: !2806, file: !31, line: 1077, baseType: !1420, size: 128, offset: 768)
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "fl_file", scope: !2806, file: !31, line: 1078, baseType: !374, size: 64, offset: 896)
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "fl_start", scope: !2806, file: !31, line: 1079, baseType: !549, size: 64, offset: 960)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "fl_end", scope: !2806, file: !31, line: 1080, baseType: !549, size: 64, offset: 1024)
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "fl_fasync", scope: !2806, file: !31, line: 1082, baseType: !2823, size: 64, offset: 1088)
!2823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2824, size: 64)
!2824 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fasync_struct", file: !31, line: 1314, size: 320, elements: !2825)
!2825 = !{!2826, !2834, !2835, !2836, !2837, !2838}
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "fa_lock", scope: !2824, file: !31, line: 1315, baseType: !2827)
!2827 = !DIDerivedType(tag: DW_TAG_typedef, name: "rwlock_t", file: !2828, line: 20, baseType: !2829)
!2828 = !DIFile(filename: "./include/linux/rwlock_types.h", directory: "/home/lizy2001/genbc/linux")
!2829 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2828, line: 11, elements: !2830)
!2830 = !{!2831}
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !2829, file: !2828, line: 12, baseType: !2832)
!2832 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_rwlock_t", file: !197, line: 33, baseType: !2833)
!2833 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !197, line: 31, elements: !199)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !2824, file: !31, line: 1316, baseType: !132, size: 32)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "fa_fd", scope: !2824, file: !31, line: 1317, baseType: !132, size: 32, offset: 32)
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "fa_next", scope: !2824, file: !31, line: 1318, baseType: !2823, size: 64, offset: 64)
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "fa_file", scope: !2824, file: !31, line: 1319, baseType: !374, size: 64, offset: 128)
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "fa_rcu", scope: !2824, file: !31, line: 1320, baseType: !387, size: 128, align: 64, offset: 192)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "fl_break_time", scope: !2806, file: !31, line: 1084, baseType: !136, size: 64, offset: 1152)
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "fl_downgrade_time", scope: !2806, file: !31, line: 1085, baseType: !136, size: 64, offset: 1216)
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "fl_ops", scope: !2806, file: !31, line: 1087, baseType: !2842, size: 64, offset: 1280)
!2842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2843, size: 64)
!2843 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2844)
!2844 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_operations", file: !31, line: 1011, size: 128, elements: !2845)
!2845 = !{!2846, !2850}
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "fl_copy_lock", scope: !2844, file: !31, line: 1012, baseType: !2847, size: 64)
!2847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2848, size: 64)
!2848 = !DISubroutineType(types: !2849)
!2849 = !{null, !2805, !2805}
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "fl_release_private", scope: !2844, file: !31, line: 1013, baseType: !2851, size: 64, offset: 64)
!2851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2852, size: 64)
!2852 = !DISubroutineType(types: !2853)
!2853 = !{null, !2805}
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "fl_lmops", scope: !2806, file: !31, line: 1088, baseType: !2855, size: 64, offset: 1344)
!2855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2856, size: 64)
!2856 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2857)
!2857 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_manager_operations", file: !31, line: 1016, size: 512, elements: !2858)
!2858 = !{!2859, !2863, !2867, !2868, !2872, !2876, !2880, !2884}
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "lm_get_owner", scope: !2857, file: !31, line: 1017, baseType: !2860, size: 64)
!2860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2861, size: 64)
!2861 = !DISubroutineType(types: !2862)
!2862 = !{!2791, !2791}
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "lm_put_owner", scope: !2857, file: !31, line: 1018, baseType: !2864, size: 64, offset: 64)
!2864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2865, size: 64)
!2865 = !DISubroutineType(types: !2866)
!2866 = !{null, !2791}
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "lm_notify", scope: !2857, file: !31, line: 1019, baseType: !2851, size: 64, offset: 128)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "lm_grant", scope: !2857, file: !31, line: 1020, baseType: !2869, size: 64, offset: 192)
!2869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2870, size: 64)
!2870 = !DISubroutineType(types: !2871)
!2871 = !{!132, !2805, !132}
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "lm_break", scope: !2857, file: !31, line: 1021, baseType: !2873, size: 64, offset: 256)
!2873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2874, size: 64)
!2874 = !DISubroutineType(types: !2875)
!2875 = !{!171, !2805}
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "lm_change", scope: !2857, file: !31, line: 1022, baseType: !2877, size: 64, offset: 320)
!2877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2878, size: 64)
!2878 = !DISubroutineType(types: !2879)
!2879 = !{!132, !2805, !132, !142}
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "lm_setup", scope: !2857, file: !31, line: 1023, baseType: !2881, size: 64, offset: 384)
!2881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2882, size: 64)
!2882 = !DISubroutineType(types: !2883)
!2883 = !{null, !2805, !842}
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "lm_breaker_owns_lease", scope: !2857, file: !31, line: 1024, baseType: !2873, size: 64, offset: 448)
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "fl_u", scope: !2806, file: !31, line: 1097, baseType: !2886, size: 256, offset: 1408)
!2886 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2806, file: !31, line: 1089, size: 256, elements: !2887)
!2887 = !{!2888, !2897, !2903}
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "nfs_fl", scope: !2886, file: !31, line: 1090, baseType: !2889, size: 256)
!2889 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs_lock_info", file: !2890, line: 10, size: 256, elements: !2891)
!2890 = !DIFile(filename: "./include/linux/nfs_fs_i.h", directory: "/home/lizy2001/genbc/linux")
!2891 = !{!2892, !2893, !2896}
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2889, file: !2890, line: 11, baseType: !437, size: 32)
!2893 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2889, file: !2890, line: 12, baseType: !2894, size: 64, offset: 64)
!2894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2895, size: 64)
!2895 = !DICompositeType(tag: DW_TAG_structure_type, name: "nlm_lockowner", file: !2890, line: 5, flags: DIFlagFwdDecl)
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2889, file: !2890, line: 13, baseType: !143, size: 128, offset: 128)
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "nfs4_fl", scope: !2886, file: !31, line: 1091, baseType: !2898, size: 64)
!2898 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_info", file: !2890, line: 17, size: 64, elements: !2899)
!2899 = !{!2900}
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2898, file: !2890, line: 18, baseType: !2901, size: 64)
!2901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2902, size: 64)
!2902 = !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_state", file: !2890, line: 16, flags: DIFlagFwdDecl)
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "afs", scope: !2886, file: !31, line: 1096, baseType: !2904, size: 192)
!2904 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2886, file: !31, line: 1092, size: 192, elements: !2905)
!2905 = !{!2906, !2907, !2908}
!2906 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !2904, file: !31, line: 1093, baseType: !143, size: 128)
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2904, file: !31, line: 1094, baseType: !132, size: 32, offset: 128)
!2908 = !DIDerivedType(tag: DW_TAG_member, name: "debug_id", scope: !2904, file: !31, line: 1095, baseType: !7, size: 32, offset: 160)
!2909 = !DIDerivedType(tag: DW_TAG_member, name: "sendpage", scope: !2729, file: !31, line: 1843, baseType: !2910, size: 64, offset: 1280)
!2910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2911, size: 64)
!2911 = !DISubroutineType(types: !2912)
!2912 = !{!329, !374, !742, !132, !344, !2740, !132}
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !2729, file: !31, line: 1844, baseType: !1042, size: 64, offset: 1344)
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "check_flags", scope: !2729, file: !31, line: 1845, baseType: !2915, size: 64, offset: 1408)
!2915 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2916, size: 64)
!2916 = !DISubroutineType(types: !2917)
!2917 = !{!132, !132}
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "flock", scope: !2729, file: !31, line: 1846, baseType: !2802, size: 64, offset: 1472)
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "splice_write", scope: !2729, file: !31, line: 1847, baseType: !2920, size: 64, offset: 1536)
!2920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2921, size: 64)
!2921 = !DISubroutineType(types: !2922)
!2922 = !{!329, !2038, !374, !2740, !344, !7}
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "splice_read", scope: !2729, file: !31, line: 1848, baseType: !2924, size: 64, offset: 1600)
!2924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2925, size: 64)
!2925 = !DISubroutineType(types: !2926)
!2926 = !{!329, !374, !2740, !2038, !344, !7}
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "setlease", scope: !2729, file: !31, line: 1849, baseType: !2928, size: 64, offset: 1664)
!2928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2929, size: 64)
!2929 = !DISubroutineType(types: !2930)
!2930 = !{!132, !374, !93, !2931, !842}
!2931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2805, size: 64)
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "fallocate", scope: !2729, file: !31, line: 1850, baseType: !2933, size: 64, offset: 1728)
!2933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2934, size: 64)
!2934 = !DISubroutineType(types: !2935)
!2935 = !{!93, !374, !132, !549, !549}
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "show_fdinfo", scope: !2729, file: !31, line: 1852, baseType: !2937, size: 64, offset: 1792)
!2937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2938, size: 64)
!2938 = !DISubroutineType(types: !2939)
!2939 = !{null, !732, !374}
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "copy_file_range", scope: !2729, file: !31, line: 1856, baseType: !2941, size: 64, offset: 1856)
!2941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2942, size: 64)
!2942 = !DISubroutineType(types: !2943)
!2943 = !{!329, !374, !549, !374, !549, !344, !7}
!2944 = !DIDerivedType(tag: DW_TAG_member, name: "remap_file_range", scope: !2729, file: !31, line: 1858, baseType: !2945, size: 64, offset: 1920)
!2945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2946, size: 64)
!2946 = !DISubroutineType(types: !2947)
!2947 = !{!549, !374, !549, !374, !549, !549, !7}
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "fadvise", scope: !2729, file: !31, line: 1861, baseType: !2794, size: 64, offset: 1984)
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !2724, file: !31, line: 692, baseType: !685, size: 64)
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "i_flctx", scope: !450, file: !31, line: 694, baseType: !2951, size: 64, offset: 2560)
!2951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2952, size: 64)
!2952 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_context", file: !31, line: 1100, size: 384, elements: !2953)
!2953 = !{!2954, !2955, !2956, !2957}
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lock", scope: !2952, file: !31, line: 1101, baseType: !185)
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "flc_flock", scope: !2952, file: !31, line: 1102, baseType: !143, size: 128)
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "flc_posix", scope: !2952, file: !31, line: 1103, baseType: !143, size: 128, offset: 128)
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lease", scope: !2952, file: !31, line: 1104, baseType: !143, size: 128, offset: 256)
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "i_data", scope: !450, file: !31, line: 695, baseType: !756, size: 1216, align: 64, offset: 2624)
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "i_devices", scope: !450, file: !31, line: 696, baseType: !143, size: 128, offset: 3840)
!2960 = !DIDerivedType(tag: DW_TAG_member, scope: !450, file: !31, line: 697, baseType: !2961, size: 64, offset: 3968)
!2961 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !450, file: !31, line: 697, size: 64, elements: !2962)
!2962 = !{!2963, !2964, !2965, !2968, !2969}
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "i_pipe", scope: !2961, file: !31, line: 698, baseType: !2038, size: 64)
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "i_bdev", scope: !2961, file: !31, line: 699, baseType: !2480, size: 64)
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "i_cdev", scope: !2961, file: !31, line: 700, baseType: !2966, size: 64)
!2966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2967, size: 64)
!2967 = !DICompositeType(tag: DW_TAG_structure_type, name: "cdev", file: !31, line: 700, flags: DIFlagFwdDecl)
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "i_link", scope: !2961, file: !31, line: 701, baseType: !298, size: 64)
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "i_dir_seq", scope: !2961, file: !31, line: 702, baseType: !7, size: 32)
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "i_generation", scope: !450, file: !31, line: 705, baseType: !439, size: 32, offset: 4032)
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_mask", scope: !450, file: !31, line: 708, baseType: !439, size: 32, offset: 4064)
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_marks", scope: !450, file: !31, line: 709, baseType: !2562, size: 64, offset: 4096)
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "i_private", scope: !450, file: !31, line: 720, baseType: !139, size: 64, offset: 4160)
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "d_iname", scope: !405, file: !402, line: 98, baseType: !2975, size: 256, offset: 448)
!2975 = !DICompositeType(tag: DW_TAG_array_type, baseType: !180, size: 256, elements: !163)
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "d_lockref", scope: !405, file: !402, line: 101, baseType: !2977, size: 32, offset: 704)
!2977 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lockref", file: !2978, line: 25, size: 32, elements: !2979)
!2978 = !DIFile(filename: "./include/linux/lockref.h", directory: "/home/lizy2001/genbc/linux")
!2979 = !{!2980}
!2980 = !DIDerivedType(tag: DW_TAG_member, scope: !2977, file: !2978, line: 26, baseType: !2981, size: 32)
!2981 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2977, file: !2978, line: 26, size: 32, elements: !2982)
!2982 = !{!2983}
!2983 = !DIDerivedType(tag: DW_TAG_member, scope: !2981, file: !2978, line: 30, baseType: !2984, size: 32)
!2984 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2981, file: !2978, line: 30, size: 32, elements: !2985)
!2985 = !{!2986, !2987}
!2986 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2984, file: !2978, line: 31, baseType: !185)
!2987 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2984, file: !2978, line: 32, baseType: !132, size: 32)
!2988 = !DIDerivedType(tag: DW_TAG_member, name: "d_op", scope: !405, file: !402, line: 102, baseType: !2578, size: 64, offset: 768)
!2989 = !DIDerivedType(tag: DW_TAG_member, name: "d_sb", scope: !405, file: !402, line: 103, baseType: !617, size: 64, offset: 832)
!2990 = !DIDerivedType(tag: DW_TAG_member, name: "d_time", scope: !405, file: !402, line: 104, baseType: !136, size: 64, offset: 896)
!2991 = !DIDerivedType(tag: DW_TAG_member, name: "d_fsdata", scope: !405, file: !402, line: 105, baseType: !139, size: 64, offset: 960)
!2992 = !DIDerivedType(tag: DW_TAG_member, scope: !405, file: !402, line: 107, baseType: !2993, size: 128, offset: 1024)
!2993 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !405, file: !402, line: 107, size: 128, elements: !2994)
!2994 = !{!2995, !2996}
!2995 = !DIDerivedType(tag: DW_TAG_member, name: "d_lru", scope: !2993, file: !402, line: 108, baseType: !143, size: 128)
!2996 = !DIDerivedType(tag: DW_TAG_member, name: "d_wait", scope: !2993, file: !402, line: 109, baseType: !2997, size: 64)
!2997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1420, size: 64)
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "d_child", scope: !405, file: !402, line: 111, baseType: !143, size: 128, offset: 1152)
!2999 = !DIDerivedType(tag: DW_TAG_member, name: "d_subdirs", scope: !405, file: !402, line: 112, baseType: !143, size: 128, offset: 1280)
!3000 = !DIDerivedType(tag: DW_TAG_member, name: "d_u", scope: !405, file: !402, line: 120, baseType: !3001, size: 128, offset: 1408)
!3001 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !405, file: !402, line: 116, size: 128, elements: !3002)
!3002 = !{!3003, !3004, !3005}
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "d_alias", scope: !3001, file: !402, line: 117, baseType: !660, size: 128)
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "d_in_lookup_hash", scope: !3001, file: !402, line: 118, baseType: !419, size: 128)
!3005 = !DIDerivedType(tag: DW_TAG_member, name: "d_rcu", scope: !3001, file: !402, line: 119, baseType: !387, size: 128, align: 64)
!3006 = !DIDerivedType(tag: DW_TAG_member, name: "f_inode", scope: !375, file: !31, line: 922, baseType: !449, size: 64, offset: 256)
!3007 = !DIDerivedType(tag: DW_TAG_member, name: "f_op", scope: !375, file: !31, line: 923, baseType: !2727, size: 64, offset: 320)
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "f_lock", scope: !375, file: !31, line: 929, baseType: !185, offset: 384)
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "f_write_hint", scope: !375, file: !31, line: 930, baseType: !30, size: 32, offset: 384)
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "f_count", scope: !375, file: !31, line: 931, baseType: !792, size: 64, offset: 448)
!3011 = !DIDerivedType(tag: DW_TAG_member, name: "f_flags", scope: !375, file: !31, line: 932, baseType: !7, size: 32, offset: 512)
!3012 = !DIDerivedType(tag: DW_TAG_member, name: "f_mode", scope: !375, file: !31, line: 933, baseType: !2574, size: 32, offset: 544)
!3013 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos_lock", scope: !375, file: !31, line: 934, baseType: !1114, size: 192, offset: 576)
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos", scope: !375, file: !31, line: 935, baseType: !549, size: 64, offset: 768)
!3015 = !DIDerivedType(tag: DW_TAG_member, name: "f_owner", scope: !375, file: !31, line: 936, baseType: !3016, size: 192, offset: 832)
!3016 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fown_struct", file: !31, line: 885, size: 192, elements: !3017)
!3017 = !{!3018, !3019, !3020, !3021, !3022, !3023}
!3018 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3016, file: !31, line: 886, baseType: !2827)
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !3016, file: !31, line: 887, baseType: !1410, size: 64)
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "pid_type", scope: !3016, file: !31, line: 888, baseType: !39, size: 32, offset: 64)
!3021 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !3016, file: !31, line: 889, baseType: !455, size: 32, offset: 96)
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !3016, file: !31, line: 889, baseType: !455, size: 32, offset: 128)
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "signum", scope: !3016, file: !31, line: 890, baseType: !132, size: 32, offset: 160)
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "f_cred", scope: !375, file: !31, line: 937, baseType: !1486, size: 64, offset: 1024)
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "f_ra", scope: !375, file: !31, line: 938, baseType: !3026, size: 256, offset: 1088)
!3026 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_ra_state", file: !31, line: 896, size: 256, elements: !3027)
!3027 = !{!3028, !3029, !3030, !3031, !3032, !3033}
!3028 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3026, file: !31, line: 897, baseType: !136, size: 64)
!3029 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3026, file: !31, line: 898, baseType: !7, size: 32, offset: 64)
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "async_size", scope: !3026, file: !31, line: 899, baseType: !7, size: 32, offset: 96)
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "ra_pages", scope: !3026, file: !31, line: 902, baseType: !7, size: 32, offset: 128)
!3032 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_miss", scope: !3026, file: !31, line: 903, baseType: !7, size: 32, offset: 160)
!3033 = !DIDerivedType(tag: DW_TAG_member, name: "prev_pos", scope: !3026, file: !31, line: 904, baseType: !549, size: 64, offset: 192)
!3034 = !DIDerivedType(tag: DW_TAG_member, name: "f_version", scope: !375, file: !31, line: 940, baseType: !442, size: 64, offset: 1344)
!3035 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !375, file: !31, line: 945, baseType: !139, size: 64, offset: 1408)
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "f_ep_links", scope: !375, file: !31, line: 949, baseType: !143, size: 128, offset: 1472)
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "f_tfile_llink", scope: !375, file: !31, line: 950, baseType: !143, size: 128, offset: 1600)
!3038 = !DIDerivedType(tag: DW_TAG_member, name: "f_mapping", scope: !375, file: !31, line: 952, baseType: !755, size: 64, offset: 1728)
!3039 = !DIDerivedType(tag: DW_TAG_member, name: "f_wb_err", scope: !375, file: !31, line: 953, baseType: !930, size: 32, offset: 1792)
!3040 = !DIDerivedType(tag: DW_TAG_member, name: "f_sb_err", scope: !375, file: !31, line: 954, baseType: !930, size: 32, offset: 1824)
!3041 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !365, file: !323, line: 174, baseType: !371, size: 64, offset: 320)
!3042 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !365, file: !323, line: 176, baseType: !3043, size: 64, offset: 384)
!3043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3044, size: 64)
!3044 = !DISubroutineType(types: !3045)
!3045 = !{!132, !374, !265, !364, !1002}
!3046 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", scope: !353, file: !323, line: 90, baseType: !348, size: 64, offset: 192)
!3047 = !DIDerivedType(tag: DW_TAG_member, name: "bin_attrs", scope: !353, file: !323, line: 91, baseType: !3048, size: 64, offset: 256)
!3048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !364, size: 64)
!3049 = !DIDerivedType(tag: DW_TAG_member, name: "child_ns_type", scope: !313, file: !260, line: 143, baseType: !3050, size: 64, offset: 256)
!3050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3051, size: 64)
!3051 = !DISubroutineType(types: !3052)
!3052 = !{!3053, !265}
!3053 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3054, size: 64)
!3054 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3055)
!3055 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_ns_type_operations", file: !48, line: 39, size: 384, elements: !3056)
!3056 = !{!3057, !3058, !3062, !3066, !3074, !3078}
!3057 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3055, file: !48, line: 40, baseType: !47, size: 32)
!3058 = !DIDerivedType(tag: DW_TAG_member, name: "current_may_mount", scope: !3055, file: !48, line: 41, baseType: !3059, size: 64, offset: 64)
!3059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3060, size: 64)
!3060 = !DISubroutineType(types: !3061)
!3061 = !{!171}
!3062 = !DIDerivedType(tag: DW_TAG_member, name: "grab_current_ns", scope: !3055, file: !48, line: 42, baseType: !3063, size: 64, offset: 128)
!3063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3064, size: 64)
!3064 = !DISubroutineType(types: !3065)
!3065 = !{!139}
!3066 = !DIDerivedType(tag: DW_TAG_member, name: "netlink_ns", scope: !3055, file: !48, line: 43, baseType: !3067, size: 64, offset: 192)
!3067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3068, size: 64)
!3068 = !DISubroutineType(types: !3069)
!3069 = !{!3070, !3072}
!3070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3071, size: 64)
!3071 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!3072 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3073, size: 64)
!3073 = !DICompositeType(tag: DW_TAG_structure_type, name: "sock", file: !48, line: 19, flags: DIFlagFwdDecl)
!3074 = !DIDerivedType(tag: DW_TAG_member, name: "initial_ns", scope: !3055, file: !48, line: 44, baseType: !3075, size: 64, offset: 256)
!3075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3076, size: 64)
!3076 = !DISubroutineType(types: !3077)
!3077 = !{!3070}
!3078 = !DIDerivedType(tag: DW_TAG_member, name: "drop_ns", scope: !3055, file: !48, line: 45, baseType: !488, size: 64, offset: 320)
!3079 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !313, file: !260, line: 144, baseType: !3080, size: 64, offset: 320)
!3080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3081, size: 64)
!3081 = !DISubroutineType(types: !3082)
!3082 = !{!3070, !265}
!3083 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !313, file: !260, line: 145, baseType: !3084, size: 64, offset: 384)
!3084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3085, size: 64)
!3085 = !DISubroutineType(types: !3086)
!3086 = !{null, !265, !3087, !3088}
!3087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !455, size: 64)
!3088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !463, size: 64)
!3089 = !DIDerivedType(tag: DW_TAG_member, name: "sd", scope: !259, file: !260, line: 70, baseType: !3090, size: 64, offset: 384)
!3090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3091, size: 64)
!3091 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_node", file: !637, line: 123, size: 1024, elements: !3092)
!3092 = !{!3093, !3094, !3095, !3096, !3097, !3098, !3099, !3100, !3221, !3222, !3223, !3224, !3225}
!3093 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3091, file: !637, line: 124, baseType: !768, size: 32)
!3094 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !3091, file: !637, line: 125, baseType: !768, size: 32, offset: 32)
!3095 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3091, file: !637, line: 135, baseType: !3090, size: 64, offset: 64)
!3096 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3091, file: !637, line: 136, baseType: !223, size: 64, offset: 128)
!3097 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !3091, file: !637, line: 138, baseType: !781, size: 192, align: 64, offset: 192)
!3098 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !3091, file: !637, line: 140, baseType: !3070, size: 64, offset: 384)
!3099 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !3091, file: !637, line: 141, baseType: !7, size: 32, offset: 448)
!3100 = !DIDerivedType(tag: DW_TAG_member, scope: !3091, file: !637, line: 142, baseType: !3101, size: 256, offset: 512)
!3101 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3091, file: !637, line: 142, size: 256, elements: !3102)
!3102 = !{!3103, !3149, !3153}
!3103 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !3101, file: !637, line: 143, baseType: !3104, size: 192)
!3104 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_dir", file: !637, line: 91, size: 192, elements: !3105)
!3105 = !{!3106, !3107, !3108}
!3106 = !DIDerivedType(tag: DW_TAG_member, name: "subdirs", scope: !3104, file: !637, line: 92, baseType: !136, size: 64)
!3107 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3104, file: !637, line: 94, baseType: !777, size: 64, offset: 64)
!3108 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !3104, file: !637, line: 100, baseType: !3109, size: 64, offset: 128)
!3109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3110, size: 64)
!3110 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_root", file: !637, line: 180, size: 704, elements: !3111)
!3111 = !{!3112, !3113, !3114, !3121, !3122, !3123, !3147, !3148}
!3112 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !3110, file: !637, line: 182, baseType: !3090, size: 64)
!3113 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3110, file: !637, line: 183, baseType: !7, size: 32, offset: 64)
!3114 = !DIDerivedType(tag: DW_TAG_member, name: "ino_idr", scope: !3110, file: !637, line: 186, baseType: !3115, size: 192, offset: 128)
!3115 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "idr", file: !3116, line: 19, size: 192, elements: !3117)
!3116 = !DIFile(filename: "./include/linux/idr.h", directory: "/home/lizy2001/genbc/linux")
!3117 = !{!3118, !3119, !3120}
!3118 = !DIDerivedType(tag: DW_TAG_member, name: "idr_rt", scope: !3115, file: !3116, line: 20, baseType: !760, size: 128)
!3119 = !DIDerivedType(tag: DW_TAG_member, name: "idr_base", scope: !3115, file: !3116, line: 21, baseType: !7, size: 32, offset: 128)
!3120 = !DIDerivedType(tag: DW_TAG_member, name: "idr_next", scope: !3115, file: !3116, line: 22, baseType: !7, size: 32, offset: 160)
!3121 = !DIDerivedType(tag: DW_TAG_member, name: "last_id_lowbits", scope: !3110, file: !637, line: 187, baseType: !437, size: 32, offset: 320)
!3122 = !DIDerivedType(tag: DW_TAG_member, name: "id_highbits", scope: !3110, file: !637, line: 188, baseType: !437, size: 32, offset: 352)
!3123 = !DIDerivedType(tag: DW_TAG_member, name: "syscall_ops", scope: !3110, file: !637, line: 189, baseType: !3124, size: 64, offset: 384)
!3124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3125, size: 64)
!3125 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_syscall_ops", file: !637, line: 168, size: 320, elements: !3126)
!3126 = !{!3127, !3131, !3135, !3139, !3143}
!3127 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !3125, file: !637, line: 169, baseType: !3128, size: 64)
!3128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3129, size: 64)
!3129 = !DISubroutineType(types: !3130)
!3130 = !{!132, !732, !3109}
!3131 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !3125, file: !637, line: 171, baseType: !3132, size: 64, offset: 64)
!3132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3133, size: 64)
!3133 = !DISubroutineType(types: !3134)
!3134 = !{!132, !3090, !223, !338}
!3135 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !3125, file: !637, line: 173, baseType: !3136, size: 64, offset: 128)
!3136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3137, size: 64)
!3137 = !DISubroutineType(types: !3138)
!3138 = !{!132, !3090}
!3139 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !3125, file: !637, line: 174, baseType: !3140, size: 64, offset: 192)
!3140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3141, size: 64)
!3141 = !DISubroutineType(types: !3142)
!3142 = !{!132, !3090, !3090, !223}
!3143 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !3125, file: !637, line: 176, baseType: !3144, size: 64, offset: 256)
!3144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3145, size: 64)
!3145 = !DISubroutineType(types: !3146)
!3146 = !{!132, !732, !3090, !3109}
!3147 = !DIDerivedType(tag: DW_TAG_member, name: "supers", scope: !3110, file: !637, line: 192, baseType: !143, size: 128, offset: 448)
!3148 = !DIDerivedType(tag: DW_TAG_member, name: "deactivate_waitq", scope: !3110, file: !637, line: 194, baseType: !1420, size: 128, offset: 576)
!3149 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !3101, file: !637, line: 144, baseType: !3150, size: 64)
!3150 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_symlink", file: !637, line: 103, size: 64, elements: !3151)
!3151 = !{!3152}
!3152 = !DIDerivedType(tag: DW_TAG_member, name: "target_kn", scope: !3150, file: !637, line: 104, baseType: !3090, size: 64)
!3153 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !3101, file: !637, line: 145, baseType: !3154, size: 256)
!3154 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_attr", file: !637, line: 107, size: 256, elements: !3155)
!3155 = !{!3156, !3216, !3219, !3220}
!3156 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3154, file: !637, line: 108, baseType: !3157, size: 64)
!3157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3158, size: 64)
!3158 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3159)
!3159 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_ops", file: !637, line: 217, size: 768, elements: !3160)
!3160 = !{!3161, !3181, !3185, !3189, !3193, !3197, !3201, !3205, !3206, !3207, !3208, !3212}
!3161 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !3159, file: !637, line: 222, baseType: !3162, size: 64)
!3162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3163, size: 64)
!3163 = !DISubroutineType(types: !3164)
!3164 = !{!132, !3165}
!3165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3166, size: 64)
!3166 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_file", file: !637, line: 197, size: 1088, elements: !3167)
!3167 = !{!3168, !3169, !3170, !3171, !3172, !3173, !3174, !3175, !3176, !3177, !3178, !3179, !3180}
!3168 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !3166, file: !637, line: 199, baseType: !3090, size: 64)
!3169 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !3166, file: !637, line: 200, baseType: !374, size: 64, offset: 64)
!3170 = !DIDerivedType(tag: DW_TAG_member, name: "seq_file", scope: !3166, file: !637, line: 201, baseType: !732, size: 64, offset: 128)
!3171 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !3166, file: !637, line: 202, baseType: !139, size: 64, offset: 192)
!3172 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !3166, file: !637, line: 205, baseType: !1114, size: 192, offset: 256)
!3173 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_mutex", scope: !3166, file: !637, line: 206, baseType: !1114, size: 192, offset: 448)
!3174 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !3166, file: !637, line: 207, baseType: !132, size: 32, offset: 640)
!3175 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3166, file: !637, line: 208, baseType: !143, size: 128, offset: 704)
!3176 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_buf", scope: !3166, file: !637, line: 209, baseType: !298, size: 64, offset: 832)
!3177 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !3166, file: !637, line: 211, baseType: !344, size: 64, offset: 896)
!3178 = !DIDerivedType(tag: DW_TAG_member, name: "mmapped", scope: !3166, file: !637, line: 212, baseType: !171, size: 1, offset: 960, flags: DIFlagBitField, extraData: i64 960)
!3179 = !DIDerivedType(tag: DW_TAG_member, name: "released", scope: !3166, file: !637, line: 213, baseType: !171, size: 1, offset: 961, flags: DIFlagBitField, extraData: i64 960)
!3180 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !3166, file: !637, line: 214, baseType: !1030, size: 64, offset: 1024)
!3181 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3159, file: !637, line: 223, baseType: !3182, size: 64, offset: 64)
!3182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3183, size: 64)
!3183 = !DISubroutineType(types: !3184)
!3184 = !{null, !3165}
!3185 = !DIDerivedType(tag: DW_TAG_member, name: "seq_show", scope: !3159, file: !637, line: 236, baseType: !3186, size: 64, offset: 128)
!3186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3187, size: 64)
!3187 = !DISubroutineType(types: !3188)
!3188 = !{!132, !732, !139}
!3189 = !DIDerivedType(tag: DW_TAG_member, name: "seq_start", scope: !3159, file: !637, line: 238, baseType: !3190, size: 64, offset: 192)
!3190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3191, size: 64)
!3191 = !DISubroutineType(types: !3192)
!3192 = !{!139, !732, !2740}
!3193 = !DIDerivedType(tag: DW_TAG_member, name: "seq_next", scope: !3159, file: !637, line: 239, baseType: !3194, size: 64, offset: 256)
!3194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3195, size: 64)
!3195 = !DISubroutineType(types: !3196)
!3196 = !{!139, !732, !139, !2740}
!3197 = !DIDerivedType(tag: DW_TAG_member, name: "seq_stop", scope: !3159, file: !637, line: 240, baseType: !3198, size: 64, offset: 320)
!3198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3199, size: 64)
!3199 = !DISubroutineType(types: !3200)
!3200 = !{null, !732, !139}
!3201 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !3159, file: !637, line: 242, baseType: !3202, size: 64, offset: 384)
!3202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3203, size: 64)
!3203 = !DISubroutineType(types: !3204)
!3204 = !{!329, !3165, !298, !344, !549}
!3205 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !3159, file: !637, line: 252, baseType: !344, size: 64, offset: 448)
!3206 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc", scope: !3159, file: !637, line: 259, baseType: !171, size: 8, offset: 512)
!3207 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !3159, file: !637, line: 260, baseType: !3202, size: 64, offset: 576)
!3208 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !3159, file: !637, line: 263, baseType: !3209, size: 64, offset: 640)
!3209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3210, size: 64)
!3210 = !DISubroutineType(types: !3211)
!3211 = !{!2769, !3165, !2771}
!3212 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !3159, file: !637, line: 266, baseType: !3213, size: 64, offset: 704)
!3213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3214, size: 64)
!3214 = !DISubroutineType(types: !3215)
!3215 = !{!132, !3165, !1002}
!3216 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !3154, file: !637, line: 109, baseType: !3217, size: 64, offset: 64)
!3217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3218, size: 64)
!3218 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_node", file: !637, line: 31, flags: DIFlagFwdDecl)
!3219 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3154, file: !637, line: 110, baseType: !549, size: 64, offset: 128)
!3220 = !DIDerivedType(tag: DW_TAG_member, name: "notify_next", scope: !3154, file: !637, line: 111, baseType: !3090, size: 64, offset: 192)
!3221 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !3091, file: !637, line: 148, baseType: !139, size: 64, offset: 768)
!3222 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3091, file: !637, line: 154, baseType: !442, size: 64, offset: 832)
!3223 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3091, file: !637, line: 156, baseType: !339, size: 16, offset: 896)
!3224 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3091, file: !637, line: 157, baseType: !338, size: 16, offset: 912)
!3225 = !DIDerivedType(tag: DW_TAG_member, name: "iattr", scope: !3091, file: !637, line: 158, baseType: !3226, size: 64, offset: 960)
!3226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3227, size: 64)
!3227 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_iattrs", file: !637, line: 32, flags: DIFlagFwdDecl)
!3228 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !259, file: !260, line: 71, baseType: !3229, size: 32, offset: 448)
!3229 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kref", file: !3230, line: 19, size: 32, elements: !3231)
!3230 = !DIFile(filename: "./include/linux/kref.h", directory: "/home/lizy2001/genbc/linux")
!3231 = !{!3232}
!3232 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !3229, file: !3230, line: 20, baseType: !1170, size: 32)
!3233 = !DIDerivedType(tag: DW_TAG_member, name: "state_initialized", scope: !259, file: !260, line: 75, baseType: !7, size: 1, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!3234 = !DIDerivedType(tag: DW_TAG_member, name: "state_in_sysfs", scope: !259, file: !260, line: 76, baseType: !7, size: 1, offset: 481, flags: DIFlagBitField, extraData: i64 480)
!3235 = !DIDerivedType(tag: DW_TAG_member, name: "state_add_uevent_sent", scope: !259, file: !260, line: 77, baseType: !7, size: 1, offset: 482, flags: DIFlagBitField, extraData: i64 480)
!3236 = !DIDerivedType(tag: DW_TAG_member, name: "state_remove_uevent_sent", scope: !259, file: !260, line: 78, baseType: !7, size: 1, offset: 483, flags: DIFlagBitField, extraData: i64 480)
!3237 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_suppress", scope: !259, file: !260, line: 79, baseType: !7, size: 1, offset: 484, flags: DIFlagBitField, extraData: i64 480)
!3238 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !256, file: !60, line: 463, baseType: !255, size: 64, offset: 512)
!3239 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !256, file: !60, line: 465, baseType: !3240, size: 64, offset: 576)
!3240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3241, size: 64)
!3241 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_private", file: !60, line: 36, flags: DIFlagFwdDecl)
!3242 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !256, file: !60, line: 467, baseType: !223, size: 64, offset: 640)
!3243 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !256, file: !60, line: 468, baseType: !3244, size: 64, offset: 704)
!3244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3245, size: 64)
!3245 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3246)
!3246 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_type", file: !60, line: 87, size: 384, elements: !3247)
!3247 = !{!3248, !3249, !3250, !3254, !3259, !3263}
!3248 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3246, file: !60, line: 88, baseType: !223, size: 64)
!3249 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !3246, file: !60, line: 89, baseType: !350, size: 64, offset: 64)
!3250 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !3246, file: !60, line: 90, baseType: !3251, size: 64, offset: 128)
!3251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3252, size: 64)
!3252 = !DISubroutineType(types: !3253)
!3253 = !{!132, !255, !293}
!3254 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !3246, file: !60, line: 91, baseType: !3255, size: 64, offset: 192)
!3255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3256, size: 64)
!3256 = !DISubroutineType(types: !3257)
!3257 = !{!298, !255, !3258, !3087, !3088}
!3258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !338, size: 64)
!3259 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3246, file: !60, line: 93, baseType: !3260, size: 64, offset: 256)
!3260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3261, size: 64)
!3261 = !DISubroutineType(types: !3262)
!3262 = !{null, !255}
!3263 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3246, file: !60, line: 95, baseType: !3264, size: 64, offset: 320)
!3264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3265, size: 64)
!3265 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3266)
!3266 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_ops", file: !67, line: 278, size: 1472, elements: !3267)
!3267 = !{!3268, !3272, !3273, !3274, !3275, !3276, !3277, !3278, !3279, !3280, !3281, !3282, !3283, !3284, !3285, !3286, !3287, !3288, !3289, !3290, !3291, !3292, !3293}
!3268 = !DIDerivedType(tag: DW_TAG_member, name: "prepare", scope: !3266, file: !67, line: 279, baseType: !3269, size: 64)
!3269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3270, size: 64)
!3270 = !DISubroutineType(types: !3271)
!3271 = !{!132, !255}
!3272 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !3266, file: !67, line: 280, baseType: !3260, size: 64, offset: 64)
!3273 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3266, file: !67, line: 281, baseType: !3269, size: 64, offset: 128)
!3274 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3266, file: !67, line: 282, baseType: !3269, size: 64, offset: 192)
!3275 = !DIDerivedType(tag: DW_TAG_member, name: "freeze", scope: !3266, file: !67, line: 283, baseType: !3269, size: 64, offset: 256)
!3276 = !DIDerivedType(tag: DW_TAG_member, name: "thaw", scope: !3266, file: !67, line: 284, baseType: !3269, size: 64, offset: 320)
!3277 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff", scope: !3266, file: !67, line: 285, baseType: !3269, size: 64, offset: 384)
!3278 = !DIDerivedType(tag: DW_TAG_member, name: "restore", scope: !3266, file: !67, line: 286, baseType: !3269, size: 64, offset: 448)
!3279 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_late", scope: !3266, file: !67, line: 287, baseType: !3269, size: 64, offset: 512)
!3280 = !DIDerivedType(tag: DW_TAG_member, name: "resume_early", scope: !3266, file: !67, line: 288, baseType: !3269, size: 64, offset: 576)
!3281 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_late", scope: !3266, file: !67, line: 289, baseType: !3269, size: 64, offset: 640)
!3282 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_early", scope: !3266, file: !67, line: 290, baseType: !3269, size: 64, offset: 704)
!3283 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_late", scope: !3266, file: !67, line: 291, baseType: !3269, size: 64, offset: 768)
!3284 = !DIDerivedType(tag: DW_TAG_member, name: "restore_early", scope: !3266, file: !67, line: 292, baseType: !3269, size: 64, offset: 832)
!3285 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_noirq", scope: !3266, file: !67, line: 293, baseType: !3269, size: 64, offset: 896)
!3286 = !DIDerivedType(tag: DW_TAG_member, name: "resume_noirq", scope: !3266, file: !67, line: 294, baseType: !3269, size: 64, offset: 960)
!3287 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_noirq", scope: !3266, file: !67, line: 295, baseType: !3269, size: 64, offset: 1024)
!3288 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_noirq", scope: !3266, file: !67, line: 296, baseType: !3269, size: 64, offset: 1088)
!3289 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_noirq", scope: !3266, file: !67, line: 297, baseType: !3269, size: 64, offset: 1152)
!3290 = !DIDerivedType(tag: DW_TAG_member, name: "restore_noirq", scope: !3266, file: !67, line: 298, baseType: !3269, size: 64, offset: 1216)
!3291 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_suspend", scope: !3266, file: !67, line: 299, baseType: !3269, size: 64, offset: 1280)
!3292 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_resume", scope: !3266, file: !67, line: 300, baseType: !3269, size: 64, offset: 1344)
!3293 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_idle", scope: !3266, file: !67, line: 301, baseType: !3269, size: 64, offset: 1408)
!3294 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !256, file: !60, line: 470, baseType: !248, size: 64, offset: 768)
!3295 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !256, file: !60, line: 471, baseType: !3296, size: 64, offset: 832)
!3296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !244, size: 64)
!3297 = !DIDerivedType(tag: DW_TAG_member, name: "platform_data", scope: !256, file: !60, line: 473, baseType: !139, size: 64, offset: 896)
!3298 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !256, file: !60, line: 475, baseType: !139, size: 64, offset: 960)
!3299 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !256, file: !60, line: 480, baseType: !1114, size: 192, offset: 1024)
!3300 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !256, file: !60, line: 484, baseType: !3301, size: 576, offset: 1216)
!3301 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_links_info", file: !60, line: 361, size: 576, elements: !3302)
!3302 = !{!3303, !3304, !3305, !3306, !3307, !3308}
!3303 = !DIDerivedType(tag: DW_TAG_member, name: "suppliers", scope: !3301, file: !60, line: 362, baseType: !143, size: 128)
!3304 = !DIDerivedType(tag: DW_TAG_member, name: "consumers", scope: !3301, file: !60, line: 363, baseType: !143, size: 128, offset: 128)
!3305 = !DIDerivedType(tag: DW_TAG_member, name: "needs_suppliers", scope: !3301, file: !60, line: 364, baseType: !143, size: 128, offset: 256)
!3306 = !DIDerivedType(tag: DW_TAG_member, name: "defer_hook", scope: !3301, file: !60, line: 365, baseType: !143, size: 128, offset: 384)
!3307 = !DIDerivedType(tag: DW_TAG_member, name: "need_for_probe", scope: !3301, file: !60, line: 366, baseType: !171, size: 8, offset: 512)
!3308 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !3301, file: !60, line: 367, baseType: !59, size: 32, offset: 544)
!3309 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !256, file: !60, line: 485, baseType: !3310, size: 2304, offset: 1792)
!3310 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_info", file: !67, line: 565, size: 2304, elements: !3311)
!3311 = !{!3312, !3317, !3318, !3319, !3320, !3321, !3322, !3323, !3324, !3325, !3326, !3327, !3328, !3329, !3330, !3331, !3369, !3370, !3371, !3372, !3373, !3374, !3375, !3376, !3377, !3378, !3379, !3380, !3381, !3382, !3383, !3384, !3385, !3386, !3387, !3388, !3389, !3390, !3391, !3392, !3393, !3394, !3395, !3396, !3397, !3398, !3399, !3400, !3401, !3411, !3415}
!3312 = !DIDerivedType(tag: DW_TAG_member, name: "power_state", scope: !3310, file: !67, line: 566, baseType: !3313, size: 32)
!3313 = !DIDerivedType(tag: DW_TAG_typedef, name: "pm_message_t", file: !67, line: 52, baseType: !3314)
!3314 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_message", file: !67, line: 50, size: 32, elements: !3315)
!3315 = !{!3316}
!3316 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !3314, file: !67, line: 51, baseType: !132, size: 32)
!3317 = !DIDerivedType(tag: DW_TAG_member, name: "can_wakeup", scope: !3310, file: !67, line: 567, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!3318 = !DIDerivedType(tag: DW_TAG_member, name: "async_suspend", scope: !3310, file: !67, line: 568, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 32)
!3319 = !DIDerivedType(tag: DW_TAG_member, name: "in_dpm_list", scope: !3310, file: !67, line: 569, baseType: !171, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 32)
!3320 = !DIDerivedType(tag: DW_TAG_member, name: "is_prepared", scope: !3310, file: !67, line: 570, baseType: !171, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 32)
!3321 = !DIDerivedType(tag: DW_TAG_member, name: "is_suspended", scope: !3310, file: !67, line: 571, baseType: !171, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 32)
!3322 = !DIDerivedType(tag: DW_TAG_member, name: "is_noirq_suspended", scope: !3310, file: !67, line: 572, baseType: !171, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 32)
!3323 = !DIDerivedType(tag: DW_TAG_member, name: "is_late_suspended", scope: !3310, file: !67, line: 573, baseType: !171, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 32)
!3324 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm", scope: !3310, file: !67, line: 574, baseType: !171, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 32)
!3325 = !DIDerivedType(tag: DW_TAG_member, name: "early_init", scope: !3310, file: !67, line: 575, baseType: !171, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!3326 = !DIDerivedType(tag: DW_TAG_member, name: "direct_complete", scope: !3310, file: !67, line: 576, baseType: !171, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 32)
!3327 = !DIDerivedType(tag: DW_TAG_member, name: "driver_flags", scope: !3310, file: !67, line: 577, baseType: !437, size: 32, offset: 64)
!3328 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3310, file: !67, line: 578, baseType: !185, offset: 96)
!3329 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3310, file: !67, line: 580, baseType: !143, size: 128, offset: 128)
!3330 = !DIDerivedType(tag: DW_TAG_member, name: "completion", scope: !3310, file: !67, line: 581, baseType: !1441, size: 192, offset: 256)
!3331 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup", scope: !3310, file: !67, line: 582, baseType: !3332, size: 64, offset: 448)
!3332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3333, size: 64)
!3333 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wakeup_source", file: !3334, line: 43, size: 1472, elements: !3335)
!3334 = !DIFile(filename: "./include/linux/pm_wakeup.h", directory: "/home/lizy2001/genbc/linux")
!3335 = !{!3336, !3337, !3338, !3339, !3340, !3343, !3355, !3356, !3357, !3358, !3359, !3360, !3361, !3362, !3363, !3364, !3365, !3366, !3367, !3368}
!3336 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3333, file: !3334, line: 44, baseType: !223, size: 64)
!3337 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3333, file: !3334, line: 45, baseType: !132, size: 32, offset: 64)
!3338 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3333, file: !3334, line: 46, baseType: !143, size: 128, offset: 128)
!3339 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3333, file: !3334, line: 47, baseType: !185, offset: 256)
!3340 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !3333, file: !3334, line: 48, baseType: !3341, size: 64, offset: 256)
!3341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3342, size: 64)
!3342 = !DICompositeType(tag: DW_TAG_structure_type, name: "wake_irq", file: !67, line: 533, flags: DIFlagFwdDecl)
!3343 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !3333, file: !3334, line: 49, baseType: !3344, size: 320, offset: 320)
!3344 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timer_list", file: !3345, line: 11, size: 320, elements: !3346)
!3345 = !DIFile(filename: "./include/linux/timer.h", directory: "/home/lizy2001/genbc/linux")
!3346 = !{!3347, !3348, !3349, !3354}
!3347 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3344, file: !3345, line: 16, baseType: !660, size: 128)
!3348 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !3344, file: !3345, line: 17, baseType: !136, size: 64, offset: 128)
!3349 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !3344, file: !3345, line: 18, baseType: !3350, size: 64, offset: 192)
!3350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3351, size: 64)
!3351 = !DISubroutineType(types: !3352)
!3352 = !{null, !3353}
!3353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3344, size: 64)
!3354 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3344, file: !3345, line: 19, baseType: !437, size: 32, offset: 256)
!3355 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !3333, file: !3334, line: 50, baseType: !136, size: 64, offset: 640)
!3356 = !DIDerivedType(tag: DW_TAG_member, name: "total_time", scope: !3333, file: !3334, line: 51, baseType: !1240, size: 64, offset: 704)
!3357 = !DIDerivedType(tag: DW_TAG_member, name: "max_time", scope: !3333, file: !3334, line: 52, baseType: !1240, size: 64, offset: 768)
!3358 = !DIDerivedType(tag: DW_TAG_member, name: "last_time", scope: !3333, file: !3334, line: 53, baseType: !1240, size: 64, offset: 832)
!3359 = !DIDerivedType(tag: DW_TAG_member, name: "start_prevent_time", scope: !3333, file: !3334, line: 54, baseType: !1240, size: 64, offset: 896)
!3360 = !DIDerivedType(tag: DW_TAG_member, name: "prevent_sleep_time", scope: !3333, file: !3334, line: 55, baseType: !1240, size: 64, offset: 960)
!3361 = !DIDerivedType(tag: DW_TAG_member, name: "event_count", scope: !3333, file: !3334, line: 56, baseType: !136, size: 64, offset: 1024)
!3362 = !DIDerivedType(tag: DW_TAG_member, name: "active_count", scope: !3333, file: !3334, line: 57, baseType: !136, size: 64, offset: 1088)
!3363 = !DIDerivedType(tag: DW_TAG_member, name: "relax_count", scope: !3333, file: !3334, line: 58, baseType: !136, size: 64, offset: 1152)
!3364 = !DIDerivedType(tag: DW_TAG_member, name: "expire_count", scope: !3333, file: !3334, line: 59, baseType: !136, size: 64, offset: 1216)
!3365 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_count", scope: !3333, file: !3334, line: 60, baseType: !136, size: 64, offset: 1280)
!3366 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3333, file: !3334, line: 61, baseType: !255, size: 64, offset: 1344)
!3367 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !3333, file: !3334, line: 62, baseType: !171, size: 1, offset: 1408, flags: DIFlagBitField, extraData: i64 1408)
!3368 = !DIDerivedType(tag: DW_TAG_member, name: "autosleep_enabled", scope: !3333, file: !3334, line: 63, baseType: !171, size: 1, offset: 1409, flags: DIFlagBitField, extraData: i64 1408)
!3369 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_path", scope: !3310, file: !67, line: 583, baseType: !171, size: 1, offset: 512, flags: DIFlagBitField, extraData: i64 512)
!3370 = !DIDerivedType(tag: DW_TAG_member, name: "syscore", scope: !3310, file: !67, line: 584, baseType: !171, size: 1, offset: 513, flags: DIFlagBitField, extraData: i64 512)
!3371 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm_callbacks", scope: !3310, file: !67, line: 585, baseType: !171, size: 1, offset: 514, flags: DIFlagBitField, extraData: i64 512)
!3372 = !DIDerivedType(tag: DW_TAG_member, name: "must_resume", scope: !3310, file: !67, line: 586, baseType: !7, size: 1, offset: 515, flags: DIFlagBitField, extraData: i64 512)
!3373 = !DIDerivedType(tag: DW_TAG_member, name: "may_skip_resume", scope: !3310, file: !67, line: 587, baseType: !7, size: 1, offset: 516, flags: DIFlagBitField, extraData: i64 512)
!3374 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_timer", scope: !3310, file: !67, line: 592, baseType: !1232, size: 512, offset: 576)
!3375 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !3310, file: !67, line: 593, baseType: !442, size: 64, offset: 1088)
!3376 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !3310, file: !67, line: 594, baseType: !1898, size: 256, offset: 1152)
!3377 = !DIDerivedType(tag: DW_TAG_member, name: "wait_queue", scope: !3310, file: !67, line: 595, baseType: !1420, size: 128, offset: 1408)
!3378 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !3310, file: !67, line: 596, baseType: !3341, size: 64, offset: 1536)
!3379 = !DIDerivedType(tag: DW_TAG_member, name: "usage_count", scope: !3310, file: !67, line: 597, baseType: !768, size: 32, offset: 1600)
!3380 = !DIDerivedType(tag: DW_TAG_member, name: "child_count", scope: !3310, file: !67, line: 598, baseType: !768, size: 32, offset: 1632)
!3381 = !DIDerivedType(tag: DW_TAG_member, name: "disable_depth", scope: !3310, file: !67, line: 599, baseType: !7, size: 3, offset: 1664, flags: DIFlagBitField, extraData: i64 1664)
!3382 = !DIDerivedType(tag: DW_TAG_member, name: "idle_notification", scope: !3310, file: !67, line: 600, baseType: !7, size: 1, offset: 1667, flags: DIFlagBitField, extraData: i64 1664)
!3383 = !DIDerivedType(tag: DW_TAG_member, name: "request_pending", scope: !3310, file: !67, line: 601, baseType: !7, size: 1, offset: 1668, flags: DIFlagBitField, extraData: i64 1664)
!3384 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_resume", scope: !3310, file: !67, line: 602, baseType: !7, size: 1, offset: 1669, flags: DIFlagBitField, extraData: i64 1664)
!3385 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_auto", scope: !3310, file: !67, line: 603, baseType: !7, size: 1, offset: 1670, flags: DIFlagBitField, extraData: i64 1664)
!3386 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_children", scope: !3310, file: !67, line: 604, baseType: !171, size: 1, offset: 1671, flags: DIFlagBitField, extraData: i64 1664)
!3387 = !DIDerivedType(tag: DW_TAG_member, name: "no_callbacks", scope: !3310, file: !67, line: 605, baseType: !7, size: 1, offset: 1672, flags: DIFlagBitField, extraData: i64 1664)
!3388 = !DIDerivedType(tag: DW_TAG_member, name: "irq_safe", scope: !3310, file: !67, line: 606, baseType: !7, size: 1, offset: 1673, flags: DIFlagBitField, extraData: i64 1664)
!3389 = !DIDerivedType(tag: DW_TAG_member, name: "use_autosuspend", scope: !3310, file: !67, line: 607, baseType: !7, size: 1, offset: 1674, flags: DIFlagBitField, extraData: i64 1664)
!3390 = !DIDerivedType(tag: DW_TAG_member, name: "timer_autosuspends", scope: !3310, file: !67, line: 608, baseType: !7, size: 1, offset: 1675, flags: DIFlagBitField, extraData: i64 1664)
!3391 = !DIDerivedType(tag: DW_TAG_member, name: "memalloc_noio", scope: !3310, file: !67, line: 609, baseType: !7, size: 1, offset: 1676, flags: DIFlagBitField, extraData: i64 1664)
!3392 = !DIDerivedType(tag: DW_TAG_member, name: "links_count", scope: !3310, file: !67, line: 610, baseType: !7, size: 32, offset: 1696)
!3393 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !3310, file: !67, line: 611, baseType: !66, size: 32, offset: 1728)
!3394 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_status", scope: !3310, file: !67, line: 612, baseType: !74, size: 32, offset: 1760)
!3395 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_error", scope: !3310, file: !67, line: 613, baseType: !132, size: 32, offset: 1792)
!3396 = !DIDerivedType(tag: DW_TAG_member, name: "autosuspend_delay", scope: !3310, file: !67, line: 614, baseType: !132, size: 32, offset: 1824)
!3397 = !DIDerivedType(tag: DW_TAG_member, name: "last_busy", scope: !3310, file: !67, line: 615, baseType: !442, size: 64, offset: 1856)
!3398 = !DIDerivedType(tag: DW_TAG_member, name: "active_time", scope: !3310, file: !67, line: 616, baseType: !442, size: 64, offset: 1920)
!3399 = !DIDerivedType(tag: DW_TAG_member, name: "suspended_time", scope: !3310, file: !67, line: 617, baseType: !442, size: 64, offset: 1984)
!3400 = !DIDerivedType(tag: DW_TAG_member, name: "accounting_timestamp", scope: !3310, file: !67, line: 618, baseType: !442, size: 64, offset: 2048)
!3401 = !DIDerivedType(tag: DW_TAG_member, name: "subsys_data", scope: !3310, file: !67, line: 620, baseType: !3402, size: 64, offset: 2112)
!3402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3403, size: 64)
!3403 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_subsys_data", file: !67, line: 536, size: 256, elements: !3404)
!3404 = !{!3405, !3406, !3407, !3408}
!3405 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3403, file: !67, line: 537, baseType: !185)
!3406 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !3403, file: !67, line: 538, baseType: !7, size: 32)
!3407 = !DIDerivedType(tag: DW_TAG_member, name: "clock_list", scope: !3403, file: !67, line: 540, baseType: !143, size: 128, offset: 64)
!3408 = !DIDerivedType(tag: DW_TAG_member, name: "domain_data", scope: !3403, file: !67, line: 543, baseType: !3409, size: 64, offset: 192)
!3409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3410, size: 64)
!3410 = !DICompositeType(tag: DW_TAG_structure_type, name: "pm_domain_data", file: !67, line: 534, flags: DIFlagFwdDecl)
!3411 = !DIDerivedType(tag: DW_TAG_member, name: "set_latency_tolerance", scope: !3310, file: !67, line: 621, baseType: !3412, size: 64, offset: 2176)
!3412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3413, size: 64)
!3413 = !DISubroutineType(types: !3414)
!3414 = !{null, !255, !1383}
!3415 = !DIDerivedType(tag: DW_TAG_member, name: "qos", scope: !3310, file: !67, line: 622, baseType: !3416, size: 64, offset: 2240)
!3416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3417, size: 64)
!3417 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_qos", file: !67, line: 622, flags: DIFlagFwdDecl)
!3418 = !DIDerivedType(tag: DW_TAG_member, name: "pm_domain", scope: !256, file: !60, line: 486, baseType: !3419, size: 64, offset: 4096)
!3419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3420, size: 64)
!3420 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_domain", file: !67, line: 642, size: 1792, elements: !3421)
!3421 = !{!3422, !3423, !3424, !3428, !3429, !3430}
!3422 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3420, file: !67, line: 643, baseType: !3266, size: 1472)
!3423 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3420, file: !67, line: 644, baseType: !3269, size: 64, offset: 1472)
!3424 = !DIDerivedType(tag: DW_TAG_member, name: "detach", scope: !3420, file: !67, line: 645, baseType: !3425, size: 64, offset: 1536)
!3425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3426, size: 64)
!3426 = !DISubroutineType(types: !3427)
!3427 = !{null, !255, !171}
!3428 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !3420, file: !67, line: 646, baseType: !3269, size: 64, offset: 1600)
!3429 = !DIDerivedType(tag: DW_TAG_member, name: "sync", scope: !3420, file: !67, line: 647, baseType: !3260, size: 64, offset: 1664)
!3430 = !DIDerivedType(tag: DW_TAG_member, name: "dismiss", scope: !3420, file: !67, line: 648, baseType: !3260, size: 64, offset: 1728)
!3431 = !DIDerivedType(tag: DW_TAG_member, name: "msi_domain", scope: !256, file: !60, line: 493, baseType: !3432, size: 64, offset: 4160)
!3432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3433, size: 64)
!3433 = !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain", file: !60, line: 493, flags: DIFlagFwdDecl)
!3434 = !DIDerivedType(tag: DW_TAG_member, name: "msi_list", scope: !256, file: !60, line: 499, baseType: !143, size: 128, offset: 4224)
!3435 = !DIDerivedType(tag: DW_TAG_member, name: "dma_ops", scope: !256, file: !60, line: 502, baseType: !3436, size: 64, offset: 4352)
!3436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3437, size: 64)
!3437 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3438)
!3438 = !DICompositeType(tag: DW_TAG_structure_type, name: "dma_map_ops", file: !60, line: 502, flags: DIFlagFwdDecl)
!3439 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !256, file: !60, line: 504, baseType: !3440, size: 64, offset: 4416)
!3440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !442, size: 64)
!3441 = !DIDerivedType(tag: DW_TAG_member, name: "coherent_dma_mask", scope: !256, file: !60, line: 505, baseType: !442, size: 64, offset: 4480)
!3442 = !DIDerivedType(tag: DW_TAG_member, name: "bus_dma_limit", scope: !256, file: !60, line: 510, baseType: !442, size: 64, offset: 4544)
!3443 = !DIDerivedType(tag: DW_TAG_member, name: "dma_range_map", scope: !256, file: !60, line: 511, baseType: !3444, size: 64, offset: 4608)
!3444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3445, size: 64)
!3445 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3446)
!3446 = !DICompositeType(tag: DW_TAG_structure_type, name: "bus_dma_region", file: !60, line: 511, flags: DIFlagFwdDecl)
!3447 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !256, file: !60, line: 513, baseType: !3448, size: 64, offset: 4672)
!3448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3449, size: 64)
!3449 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_dma_parameters", file: !60, line: 288, size: 128, elements: !3450)
!3450 = !{!3451, !3452}
!3451 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !3449, file: !60, line: 293, baseType: !7, size: 32)
!3452 = !DIDerivedType(tag: DW_TAG_member, name: "segment_boundary_mask", scope: !3449, file: !60, line: 294, baseType: !136, size: 64, offset: 64)
!3453 = !DIDerivedType(tag: DW_TAG_member, name: "dma_pools", scope: !256, file: !60, line: 515, baseType: !143, size: 128, offset: 4736)
!3454 = !DIDerivedType(tag: DW_TAG_member, name: "archdata", scope: !256, file: !60, line: 526, baseType: !3455, offset: 4864)
!3455 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_archdata", file: !3456, line: 5, elements: !199)
!3456 = !DIFile(filename: "./arch/x86/include/asm/device.h", directory: "/home/lizy2001/genbc/linux")
!3457 = !DIDerivedType(tag: DW_TAG_member, name: "of_node", scope: !256, file: !60, line: 528, baseType: !3458, size: 64, offset: 4864)
!3458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3459, size: 64)
!3459 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_node", file: !3460, line: 14, flags: DIFlagFwdDecl)
!3460 = !DIFile(filename: "./include/linux/arch_topology.h", directory: "/home/lizy2001/genbc/linux")
!3461 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !256, file: !60, line: 529, baseType: !3462, size: 64, offset: 4928)
!3462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3463, size: 64)
!3463 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_handle", file: !3464, line: 17, size: 192, elements: !3465)
!3464 = !DIFile(filename: "./include/linux/fwnode.h", directory: "/home/lizy2001/genbc/linux")
!3465 = !{!3466, !3467, !3550}
!3466 = !DIDerivedType(tag: DW_TAG_member, name: "secondary", scope: !3463, file: !3464, line: 18, baseType: !3462, size: 64)
!3467 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3463, file: !3464, line: 19, baseType: !3468, size: 64, offset: 64)
!3468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3469, size: 64)
!3469 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3470)
!3470 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_operations", file: !3464, line: 110, size: 1152, elements: !3471)
!3471 = !{!3472, !3476, !3480, !3486, !3492, !3496, !3500, !3505, !3509, !3510, !3514, !3518, !3522, !3533, !3534, !3535, !3536, !3546}
!3472 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !3470, file: !3464, line: 111, baseType: !3473, size: 64)
!3473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3474, size: 64)
!3474 = !DISubroutineType(types: !3475)
!3475 = !{!3462, !3462}
!3476 = !DIDerivedType(tag: DW_TAG_member, name: "put", scope: !3470, file: !3464, line: 112, baseType: !3477, size: 64, offset: 64)
!3477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3478, size: 64)
!3478 = !DISubroutineType(types: !3479)
!3479 = !{null, !3462}
!3480 = !DIDerivedType(tag: DW_TAG_member, name: "device_is_available", scope: !3470, file: !3464, line: 113, baseType: !3481, size: 64, offset: 128)
!3481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3482, size: 64)
!3482 = !DISubroutineType(types: !3483)
!3483 = !{!171, !3484}
!3484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3485, size: 64)
!3485 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3463)
!3486 = !DIDerivedType(tag: DW_TAG_member, name: "device_get_match_data", scope: !3470, file: !3464, line: 114, baseType: !3487, size: 64, offset: 192)
!3487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3488, size: 64)
!3488 = !DISubroutineType(types: !3489)
!3489 = !{!3070, !3484, !3490}
!3490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3491, size: 64)
!3491 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !256)
!3492 = !DIDerivedType(tag: DW_TAG_member, name: "property_present", scope: !3470, file: !3464, line: 116, baseType: !3493, size: 64, offset: 256)
!3493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3494, size: 64)
!3494 = !DISubroutineType(types: !3495)
!3495 = !{!171, !3484, !223}
!3496 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_int_array", scope: !3470, file: !3464, line: 118, baseType: !3497, size: 64, offset: 320)
!3497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3498, size: 64)
!3498 = !DISubroutineType(types: !3499)
!3499 = !{!132, !3484, !223, !7, !139, !344}
!3500 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_string_array", scope: !3470, file: !3464, line: 123, baseType: !3501, size: 64, offset: 384)
!3501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3502, size: 64)
!3502 = !DISubroutineType(types: !3503)
!3503 = !{!132, !3484, !223, !3504, !344}
!3504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !223, size: 64)
!3505 = !DIDerivedType(tag: DW_TAG_member, name: "get_name", scope: !3470, file: !3464, line: 126, baseType: !3506, size: 64, offset: 448)
!3506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3507, size: 64)
!3507 = !DISubroutineType(types: !3508)
!3508 = !{!223, !3484}
!3509 = !DIDerivedType(tag: DW_TAG_member, name: "get_name_prefix", scope: !3470, file: !3464, line: 127, baseType: !3506, size: 64, offset: 512)
!3510 = !DIDerivedType(tag: DW_TAG_member, name: "get_parent", scope: !3470, file: !3464, line: 128, baseType: !3511, size: 64, offset: 576)
!3511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3512, size: 64)
!3512 = !DISubroutineType(types: !3513)
!3513 = !{!3462, !3484}
!3514 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_child_node", scope: !3470, file: !3464, line: 130, baseType: !3515, size: 64, offset: 640)
!3515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3516, size: 64)
!3516 = !DISubroutineType(types: !3517)
!3517 = !{!3462, !3484, !3462}
!3518 = !DIDerivedType(tag: DW_TAG_member, name: "get_named_child_node", scope: !3470, file: !3464, line: 133, baseType: !3519, size: 64, offset: 704)
!3519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3520, size: 64)
!3520 = !DISubroutineType(types: !3521)
!3521 = !{!3462, !3484, !223}
!3522 = !DIDerivedType(tag: DW_TAG_member, name: "get_reference_args", scope: !3470, file: !3464, line: 135, baseType: !3523, size: 64, offset: 768)
!3523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3524, size: 64)
!3524 = !DISubroutineType(types: !3525)
!3525 = !{!132, !3484, !223, !223, !7, !7, !3526}
!3526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3527, size: 64)
!3527 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_reference_args", file: !3464, line: 43, size: 640, elements: !3528)
!3528 = !{!3529, !3530, !3531}
!3529 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !3527, file: !3464, line: 44, baseType: !3462, size: 64)
!3530 = !DIDerivedType(tag: DW_TAG_member, name: "nargs", scope: !3527, file: !3464, line: 45, baseType: !7, size: 32, offset: 64)
!3531 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !3527, file: !3464, line: 46, baseType: !3532, size: 512, offset: 128)
!3532 = !DICompositeType(tag: DW_TAG_array_type, baseType: !442, size: 512, elements: !1270)
!3533 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_next_endpoint", scope: !3470, file: !3464, line: 140, baseType: !3515, size: 64, offset: 832)
!3534 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_remote_endpoint", scope: !3470, file: !3464, line: 143, baseType: !3511, size: 64, offset: 896)
!3535 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_port_parent", scope: !3470, file: !3464, line: 145, baseType: !3473, size: 64, offset: 960)
!3536 = !DIDerivedType(tag: DW_TAG_member, name: "graph_parse_endpoint", scope: !3470, file: !3464, line: 146, baseType: !3537, size: 64, offset: 1024)
!3537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3538, size: 64)
!3538 = !DISubroutineType(types: !3539)
!3539 = !{!132, !3484, !3540}
!3540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3541, size: 64)
!3541 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_endpoint", file: !3464, line: 29, size: 128, elements: !3542)
!3542 = !{!3543, !3544, !3545}
!3543 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !3541, file: !3464, line: 30, baseType: !7, size: 32)
!3544 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3541, file: !3464, line: 31, baseType: !7, size: 32, offset: 32)
!3545 = !DIDerivedType(tag: DW_TAG_member, name: "local_fwnode", scope: !3541, file: !3464, line: 32, baseType: !3484, size: 64, offset: 64)
!3546 = !DIDerivedType(tag: DW_TAG_member, name: "add_links", scope: !3470, file: !3464, line: 148, baseType: !3547, size: 64, offset: 1088)
!3547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3548, size: 64)
!3548 = !DISubroutineType(types: !3549)
!3549 = !{!132, !3484, !255}
!3550 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3463, file: !3464, line: 20, baseType: !255, size: 64, offset: 128)
!3551 = !DIDerivedType(tag: DW_TAG_member, name: "devt", scope: !256, file: !60, line: 534, baseType: !531, size: 32, offset: 4992)
!3552 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !256, file: !60, line: 535, baseType: !437, size: 32, offset: 5024)
!3553 = !DIDerivedType(tag: DW_TAG_member, name: "devres_lock", scope: !256, file: !60, line: 537, baseType: !185, offset: 5056)
!3554 = !DIDerivedType(tag: DW_TAG_member, name: "devres_head", scope: !256, file: !60, line: 538, baseType: !143, size: 128, offset: 5056)
!3555 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !256, file: !60, line: 540, baseType: !3556, size: 64, offset: 5184)
!3556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3557, size: 64)
!3557 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "class", file: !3558, line: 54, size: 960, elements: !3559)
!3558 = !DIFile(filename: "./include/linux/device/class.h", directory: "/home/lizy2001/genbc/linux")
!3559 = !{!3560, !3561, !3562, !3563, !3564, !3565, !3566, !3570, !3574, !3575, !3576, !3577, !3581, !3585, !3586}
!3560 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3557, file: !3558, line: 55, baseType: !223, size: 64)
!3561 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3557, file: !3558, line: 56, baseType: !651, size: 64, offset: 64)
!3562 = !DIDerivedType(tag: DW_TAG_member, name: "class_groups", scope: !3557, file: !3558, line: 58, baseType: !350, size: 64, offset: 128)
!3563 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !3557, file: !3558, line: 59, baseType: !350, size: 64, offset: 192)
!3564 = !DIDerivedType(tag: DW_TAG_member, name: "dev_kobj", scope: !3557, file: !3558, line: 60, baseType: !265, size: 64, offset: 256)
!3565 = !DIDerivedType(tag: DW_TAG_member, name: "dev_uevent", scope: !3557, file: !3558, line: 62, baseType: !3251, size: 64, offset: 320)
!3566 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !3557, file: !3558, line: 63, baseType: !3567, size: 64, offset: 384)
!3567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3568, size: 64)
!3568 = !DISubroutineType(types: !3569)
!3569 = !{!298, !255, !3258}
!3570 = !DIDerivedType(tag: DW_TAG_member, name: "class_release", scope: !3557, file: !3558, line: 65, baseType: !3571, size: 64, offset: 448)
!3571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3572, size: 64)
!3572 = !DISubroutineType(types: !3573)
!3573 = !{null, !3556}
!3574 = !DIDerivedType(tag: DW_TAG_member, name: "dev_release", scope: !3557, file: !3558, line: 66, baseType: !3260, size: 64, offset: 512)
!3575 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown_pre", scope: !3557, file: !3558, line: 68, baseType: !3269, size: 64, offset: 576)
!3576 = !DIDerivedType(tag: DW_TAG_member, name: "ns_type", scope: !3557, file: !3558, line: 70, baseType: !3053, size: 64, offset: 640)
!3577 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !3557, file: !3558, line: 71, baseType: !3578, size: 64, offset: 704)
!3578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3579, size: 64)
!3579 = !DISubroutineType(types: !3580)
!3580 = !{!3070, !255}
!3581 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !3557, file: !3558, line: 73, baseType: !3582, size: 64, offset: 768)
!3582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3583, size: 64)
!3583 = !DISubroutineType(types: !3584)
!3584 = !{null, !255, !3087, !3088}
!3585 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3557, file: !3558, line: 75, baseType: !3264, size: 64, offset: 832)
!3586 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3557, file: !3558, line: 77, baseType: !3587, size: 64, offset: 896)
!3587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3588, size: 64)
!3588 = !DICompositeType(tag: DW_TAG_structure_type, name: "subsys_private", file: !250, line: 111, flags: DIFlagFwdDecl)
!3589 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !256, file: !60, line: 541, baseType: !350, size: 64, offset: 5248)
!3590 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !256, file: !60, line: 543, baseType: !3260, size: 64, offset: 5312)
!3591 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_group", scope: !256, file: !60, line: 544, baseType: !3592, size: 64, offset: 5376)
!3592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3593, size: 64)
!3593 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_group", file: !60, line: 45, flags: DIFlagFwdDecl)
!3594 = !DIDerivedType(tag: DW_TAG_member, name: "iommu", scope: !256, file: !60, line: 545, baseType: !3595, size: 64, offset: 5440)
!3595 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3596, size: 64)
!3596 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_iommu", file: !60, line: 47, flags: DIFlagFwdDecl)
!3597 = !DIDerivedType(tag: DW_TAG_member, name: "offline_disabled", scope: !256, file: !60, line: 547, baseType: !171, size: 1, offset: 5504, flags: DIFlagBitField, extraData: i64 5504)
!3598 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !256, file: !60, line: 548, baseType: !171, size: 1, offset: 5505, flags: DIFlagBitField, extraData: i64 5504)
!3599 = !DIDerivedType(tag: DW_TAG_member, name: "of_node_reused", scope: !256, file: !60, line: 549, baseType: !171, size: 1, offset: 5506, flags: DIFlagBitField, extraData: i64 5504)
!3600 = !DIDerivedType(tag: DW_TAG_member, name: "state_synced", scope: !256, file: !60, line: 550, baseType: !171, size: 1, offset: 5507, flags: DIFlagBitField, extraData: i64 5504)
!3601 = !DIDerivedType(tag: DW_TAG_member, name: "bus_groups", scope: !249, file: !250, line: 86, baseType: !350, size: 64, offset: 192)
!3602 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !249, file: !250, line: 87, baseType: !350, size: 64, offset: 256)
!3603 = !DIDerivedType(tag: DW_TAG_member, name: "drv_groups", scope: !249, file: !250, line: 88, baseType: !350, size: 64, offset: 320)
!3604 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !249, file: !250, line: 90, baseType: !3605, size: 64, offset: 384)
!3605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3606, size: 64)
!3606 = !DISubroutineType(types: !3607)
!3607 = !{!132, !255, !3296}
!3608 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !249, file: !250, line: 91, baseType: !3251, size: 64, offset: 448)
!3609 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !249, file: !250, line: 92, baseType: !3269, size: 64, offset: 512)
!3610 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !249, file: !250, line: 93, baseType: !3260, size: 64, offset: 576)
!3611 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !249, file: !250, line: 94, baseType: !3269, size: 64, offset: 640)
!3612 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !249, file: !250, line: 95, baseType: !3260, size: 64, offset: 704)
!3613 = !DIDerivedType(tag: DW_TAG_member, name: "online", scope: !249, file: !250, line: 97, baseType: !3269, size: 64, offset: 768)
!3614 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !249, file: !250, line: 98, baseType: !3269, size: 64, offset: 832)
!3615 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !249, file: !250, line: 100, baseType: !3616, size: 64, offset: 896)
!3616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3617, size: 64)
!3617 = !DISubroutineType(types: !3618)
!3618 = !{!132, !255, !3313}
!3619 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !249, file: !250, line: 101, baseType: !3269, size: 64, offset: 960)
!3620 = !DIDerivedType(tag: DW_TAG_member, name: "num_vf", scope: !249, file: !250, line: 103, baseType: !3269, size: 64, offset: 1024)
!3621 = !DIDerivedType(tag: DW_TAG_member, name: "dma_configure", scope: !249, file: !250, line: 105, baseType: !3269, size: 64, offset: 1088)
!3622 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !249, file: !250, line: 107, baseType: !3264, size: 64, offset: 1152)
!3623 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_ops", scope: !249, file: !250, line: 109, baseType: !3624, size: 64, offset: 1216)
!3624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3625, size: 64)
!3625 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3626)
!3626 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_ops", file: !250, line: 109, flags: DIFlagFwdDecl)
!3627 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !249, file: !250, line: 111, baseType: !3587, size: 64, offset: 1280)
!3628 = !DIDerivedType(tag: DW_TAG_member, name: "lock_key", scope: !249, file: !250, line: 112, baseType: !666, offset: 1344)
!3629 = !DIDerivedType(tag: DW_TAG_member, name: "need_parent_lock", scope: !249, file: !250, line: 114, baseType: !171, size: 8, offset: 1344)
!3630 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !244, file: !54, line: 99, baseType: !651, size: 64, offset: 128)
!3631 = !DIDerivedType(tag: DW_TAG_member, name: "mod_name", scope: !244, file: !54, line: 100, baseType: !223, size: 64, offset: 192)
!3632 = !DIDerivedType(tag: DW_TAG_member, name: "suppress_bind_attrs", scope: !244, file: !54, line: 102, baseType: !171, size: 8, offset: 256)
!3633 = !DIDerivedType(tag: DW_TAG_member, name: "probe_type", scope: !244, file: !54, line: 103, baseType: !53, size: 32, offset: 288)
!3634 = !DIDerivedType(tag: DW_TAG_member, name: "of_match_table", scope: !244, file: !54, line: 105, baseType: !3635, size: 64, offset: 320)
!3635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3636, size: 64)
!3636 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3637)
!3637 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "of_device_id", file: !175, line: 262, size: 1600, elements: !3638)
!3638 = !{!3639, !3640, !3641, !3642}
!3639 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3637, file: !175, line: 263, baseType: !161, size: 256)
!3640 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3637, file: !175, line: 264, baseType: !161, size: 256, offset: 256)
!3641 = !DIDerivedType(tag: DW_TAG_member, name: "compatible", scope: !3637, file: !175, line: 265, baseType: !167, size: 1024, offset: 512)
!3642 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3637, file: !175, line: 266, baseType: !3070, size: 64, offset: 1536)
!3643 = !DIDerivedType(tag: DW_TAG_member, name: "acpi_match_table", scope: !244, file: !54, line: 106, baseType: !3644, size: 64, offset: 384)
!3644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3645, size: 64)
!3645 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3646)
!3646 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_id", file: !175, line: 210, size: 256, elements: !3647)
!3647 = !{!3648, !3652, !3654, !3655}
!3648 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3646, file: !175, line: 211, baseType: !3649, size: 72)
!3649 = !DICompositeType(tag: DW_TAG_array_type, baseType: !178, size: 72, elements: !3650)
!3650 = !{!3651}
!3651 = !DISubrange(count: 9)
!3652 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !3646, file: !175, line: 212, baseType: !3653, size: 64, offset: 128)
!3653 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_ulong_t", file: !175, line: 14, baseType: !136)
!3654 = !DIDerivedType(tag: DW_TAG_member, name: "cls", scope: !3646, file: !175, line: 213, baseType: !439, size: 32, offset: 192)
!3655 = !DIDerivedType(tag: DW_TAG_member, name: "cls_msk", scope: !3646, file: !175, line: 214, baseType: !439, size: 32, offset: 224)
!3656 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !244, file: !54, line: 108, baseType: !3269, size: 64, offset: 448)
!3657 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !244, file: !54, line: 109, baseType: !3260, size: 64, offset: 512)
!3658 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !244, file: !54, line: 110, baseType: !3269, size: 64, offset: 576)
!3659 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !244, file: !54, line: 111, baseType: !3260, size: 64, offset: 640)
!3660 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !244, file: !54, line: 112, baseType: !3616, size: 64, offset: 704)
!3661 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !244, file: !54, line: 113, baseType: !3269, size: 64, offset: 768)
!3662 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !244, file: !54, line: 114, baseType: !350, size: 64, offset: 832)
!3663 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !244, file: !54, line: 115, baseType: !350, size: 64, offset: 896)
!3664 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !244, file: !54, line: 117, baseType: !3264, size: 64, offset: 960)
!3665 = !DIDerivedType(tag: DW_TAG_member, name: "coredump", scope: !244, file: !54, line: 118, baseType: !3260, size: 64, offset: 1024)
!3666 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !244, file: !54, line: 120, baseType: !3667, size: 64, offset: 1088)
!3667 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3668, size: 64)
!3668 = !DICompositeType(tag: DW_TAG_structure_type, name: "driver_private", file: !54, line: 120, flags: DIFlagFwdDecl)
!3669 = !DIDerivedType(tag: DW_TAG_member, name: "drv_mutex", scope: !156, file: !157, line: 53, baseType: !1114, size: 192, offset: 2432)
!3670 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !156, file: !157, line: 55, baseType: !256, size: 5568, offset: 2624)
!3671 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !156, file: !157, line: 57, baseType: !143, size: 128, offset: 8192)
!3672 = !DIDerivedType(tag: DW_TAG_member, name: "ps2_cmd_mutex", scope: !156, file: !157, line: 63, baseType: !3673, size: 64, offset: 8320)
!3673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1114, size: 64)
!3674 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_mutex", scope: !151, file: !152, line: 37, baseType: !1114, size: 192, offset: 64)
!3675 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !151, file: !152, line: 40, baseType: !1420, size: 128, offset: 256)
!3676 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !151, file: !152, line: 42, baseType: !136, size: 64, offset: 384)
!3677 = !DIDerivedType(tag: DW_TAG_member, name: "cmdbuf", scope: !151, file: !152, line: 43, baseType: !3678, size: 64, offset: 448)
!3678 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1292, size: 64, elements: !1270)
!3679 = !DIDerivedType(tag: DW_TAG_member, name: "cmdcnt", scope: !151, file: !152, line: 44, baseType: !1292, size: 8, offset: 512)
!3680 = !DIDerivedType(tag: DW_TAG_member, name: "nak", scope: !151, file: !152, line: 45, baseType: !1292, size: 8, offset: 520)
!3681 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !148, file: !3, line: 206, baseType: !3682, size: 64, offset: 576)
!3682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3683, size: 64)
!3683 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "input_dev", file: !3684, line: 131, size: 10432, elements: !3685)
!3684 = !DIFile(filename: "./include/linux/input.h", directory: "/home/lizy2001/genbc/linux")
!3685 = !{!3686, !3687, !3688, !3689, !3697, !3698, !3699, !3701, !3702, !3703, !3704, !3705, !3706, !3708, !3709, !3710, !3711, !3712, !3713, !3727, !3732, !3827, !3830, !3831, !3832, !3834, !3837, !3847, !3848, !3849, !3850, !3851, !3855, !3859, !3863, !3867, !3943, !3944, !3945, !3946, !3947, !3948, !3949, !3950, !3951, !3952, !3954, !3955}
!3686 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3683, file: !3684, line: 132, baseType: !223, size: 64)
!3687 = !DIDerivedType(tag: DW_TAG_member, name: "phys", scope: !3683, file: !3684, line: 133, baseType: !223, size: 64, offset: 64)
!3688 = !DIDerivedType(tag: DW_TAG_member, name: "uniq", scope: !3683, file: !3684, line: 134, baseType: !223, size: 64, offset: 128)
!3689 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3683, file: !3684, line: 135, baseType: !3690, size: 64, offset: 192)
!3690 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "input_id", file: !3691, line: 59, size: 64, elements: !3692)
!3691 = !DIFile(filename: "./include/uapi/linux/input.h", directory: "/home/lizy2001/genbc/linux")
!3692 = !{!3693, !3694, !3695, !3696}
!3693 = !DIDerivedType(tag: DW_TAG_member, name: "bustype", scope: !3690, file: !3691, line: 60, baseType: !881, size: 16)
!3694 = !DIDerivedType(tag: DW_TAG_member, name: "vendor", scope: !3690, file: !3691, line: 61, baseType: !881, size: 16, offset: 16)
!3695 = !DIDerivedType(tag: DW_TAG_member, name: "product", scope: !3690, file: !3691, line: 62, baseType: !881, size: 16, offset: 32)
!3696 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !3690, file: !3691, line: 63, baseType: !881, size: 16, offset: 48)
!3697 = !DIDerivedType(tag: DW_TAG_member, name: "propbit", scope: !3683, file: !3684, line: 137, baseType: !1309, size: 64, offset: 256)
!3698 = !DIDerivedType(tag: DW_TAG_member, name: "evbit", scope: !3683, file: !3684, line: 139, baseType: !1309, size: 64, offset: 320)
!3699 = !DIDerivedType(tag: DW_TAG_member, name: "keybit", scope: !3683, file: !3684, line: 140, baseType: !3700, size: 768, offset: 384)
!3700 = !DICompositeType(tag: DW_TAG_array_type, baseType: !136, size: 768, elements: !2162)
!3701 = !DIDerivedType(tag: DW_TAG_member, name: "relbit", scope: !3683, file: !3684, line: 141, baseType: !1309, size: 64, offset: 1152)
!3702 = !DIDerivedType(tag: DW_TAG_member, name: "absbit", scope: !3683, file: !3684, line: 142, baseType: !1309, size: 64, offset: 1216)
!3703 = !DIDerivedType(tag: DW_TAG_member, name: "mscbit", scope: !3683, file: !3684, line: 143, baseType: !1309, size: 64, offset: 1280)
!3704 = !DIDerivedType(tag: DW_TAG_member, name: "ledbit", scope: !3683, file: !3684, line: 144, baseType: !1309, size: 64, offset: 1344)
!3705 = !DIDerivedType(tag: DW_TAG_member, name: "sndbit", scope: !3683, file: !3684, line: 145, baseType: !1309, size: 64, offset: 1408)
!3706 = !DIDerivedType(tag: DW_TAG_member, name: "ffbit", scope: !3683, file: !3684, line: 146, baseType: !3707, size: 128, offset: 1472)
!3707 = !DICompositeType(tag: DW_TAG_array_type, baseType: !136, size: 128, elements: !1508)
!3708 = !DIDerivedType(tag: DW_TAG_member, name: "swbit", scope: !3683, file: !3684, line: 147, baseType: !1309, size: 64, offset: 1600)
!3709 = !DIDerivedType(tag: DW_TAG_member, name: "hint_events_per_packet", scope: !3683, file: !3684, line: 149, baseType: !7, size: 32, offset: 1664)
!3710 = !DIDerivedType(tag: DW_TAG_member, name: "keycodemax", scope: !3683, file: !3684, line: 151, baseType: !7, size: 32, offset: 1696)
!3711 = !DIDerivedType(tag: DW_TAG_member, name: "keycodesize", scope: !3683, file: !3684, line: 152, baseType: !7, size: 32, offset: 1728)
!3712 = !DIDerivedType(tag: DW_TAG_member, name: "keycode", scope: !3683, file: !3684, line: 153, baseType: !139, size: 64, offset: 1792)
!3713 = !DIDerivedType(tag: DW_TAG_member, name: "setkeycode", scope: !3683, file: !3684, line: 155, baseType: !3714, size: 64, offset: 1856)
!3714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3715, size: 64)
!3715 = !DISubroutineType(types: !3716)
!3716 = !{!132, !3682, !3717, !2548}
!3717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3718, size: 64)
!3718 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3719)
!3719 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "input_keymap_entry", file: !3691, line: 114, size: 320, elements: !3720)
!3720 = !{!3721, !3722, !3723, !3724, !3725}
!3721 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3719, file: !3691, line: 116, baseType: !178, size: 8)
!3722 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !3719, file: !3691, line: 117, baseType: !178, size: 8, offset: 8)
!3723 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !3719, file: !3691, line: 118, baseType: !881, size: 16, offset: 16)
!3724 = !DIDerivedType(tag: DW_TAG_member, name: "keycode", scope: !3719, file: !3691, line: 119, baseType: !439, size: 32, offset: 32)
!3725 = !DIDerivedType(tag: DW_TAG_member, name: "scancode", scope: !3719, file: !3691, line: 120, baseType: !3726, size: 256, offset: 64)
!3726 = !DICompositeType(tag: DW_TAG_array_type, baseType: !178, size: 256, elements: !163)
!3727 = !DIDerivedType(tag: DW_TAG_member, name: "getkeycode", scope: !3683, file: !3684, line: 158, baseType: !3728, size: 64, offset: 1920)
!3728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3729, size: 64)
!3729 = !DISubroutineType(types: !3730)
!3730 = !{!132, !3682, !3731}
!3731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3719, size: 64)
!3732 = !DIDerivedType(tag: DW_TAG_member, name: "ff", scope: !3683, file: !3684, line: 161, baseType: !3733, size: 64, offset: 1984)
!3733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3734, size: 64)
!3734 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ff_device", file: !3684, line: 534, size: 896, elements: !3735)
!3735 = !{!3736, !3803, !3807, !3811, !3815, !3816, !3820, !3821, !3822, !3823, !3824, !3825}
!3736 = !DIDerivedType(tag: DW_TAG_member, name: "upload", scope: !3734, file: !3684, line: 535, baseType: !3737, size: 64)
!3737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3738, size: 64)
!3738 = !DISubroutineType(types: !3739)
!3739 = !{!132, !3682, !3740, !3740}
!3740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3741, size: 64)
!3741 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ff_effect", file: !3691, line: 450, size: 384, elements: !3742)
!3742 = !{!3743, !3744, !3745, !3746, !3751, !3756}
!3743 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3741, file: !3691, line: 451, baseType: !881, size: 16)
!3744 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3741, file: !3691, line: 452, baseType: !1145, size: 16, offset: 16)
!3745 = !DIDerivedType(tag: DW_TAG_member, name: "direction", scope: !3741, file: !3691, line: 453, baseType: !881, size: 16, offset: 32)
!3746 = !DIDerivedType(tag: DW_TAG_member, name: "trigger", scope: !3741, file: !3691, line: 454, baseType: !3747, size: 32, offset: 48)
!3747 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ff_trigger", file: !3691, line: 316, size: 32, elements: !3748)
!3748 = !{!3749, !3750}
!3749 = !DIDerivedType(tag: DW_TAG_member, name: "button", scope: !3747, file: !3691, line: 317, baseType: !881, size: 16)
!3750 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !3747, file: !3691, line: 318, baseType: !881, size: 16, offset: 16)
!3751 = !DIDerivedType(tag: DW_TAG_member, name: "replay", scope: !3741, file: !3691, line: 455, baseType: !3752, size: 32, offset: 80)
!3752 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ff_replay", file: !3691, line: 306, size: 32, elements: !3753)
!3753 = !{!3754, !3755}
!3754 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !3752, file: !3691, line: 307, baseType: !881, size: 16)
!3755 = !DIDerivedType(tag: DW_TAG_member, name: "delay", scope: !3752, file: !3691, line: 308, baseType: !881, size: 16, offset: 16)
!3756 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !3741, file: !3691, line: 463, baseType: !3757, size: 256, offset: 128)
!3757 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3741, file: !3691, line: 457, size: 256, elements: !3758)
!3758 = !{!3759, !3770, !3776, !3788, !3798}
!3759 = !DIDerivedType(tag: DW_TAG_member, name: "constant", scope: !3757, file: !3691, line: 458, baseType: !3760, size: 80)
!3760 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ff_constant_effect", file: !3691, line: 345, size: 80, elements: !3761)
!3761 = !{!3762, !3763}
!3762 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !3760, file: !3691, line: 346, baseType: !1145, size: 16)
!3763 = !DIDerivedType(tag: DW_TAG_member, name: "envelope", scope: !3760, file: !3691, line: 347, baseType: !3764, size: 64, offset: 16)
!3764 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ff_envelope", file: !3691, line: 333, size: 64, elements: !3765)
!3765 = !{!3766, !3767, !3768, !3769}
!3766 = !DIDerivedType(tag: DW_TAG_member, name: "attack_length", scope: !3764, file: !3691, line: 334, baseType: !881, size: 16)
!3767 = !DIDerivedType(tag: DW_TAG_member, name: "attack_level", scope: !3764, file: !3691, line: 335, baseType: !881, size: 16, offset: 16)
!3768 = !DIDerivedType(tag: DW_TAG_member, name: "fade_length", scope: !3764, file: !3691, line: 336, baseType: !881, size: 16, offset: 32)
!3769 = !DIDerivedType(tag: DW_TAG_member, name: "fade_level", scope: !3764, file: !3691, line: 337, baseType: !881, size: 16, offset: 48)
!3770 = !DIDerivedType(tag: DW_TAG_member, name: "ramp", scope: !3757, file: !3691, line: 459, baseType: !3771, size: 96)
!3771 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ff_ramp_effect", file: !3691, line: 356, size: 96, elements: !3772)
!3772 = !{!3773, !3774, !3775}
!3773 = !DIDerivedType(tag: DW_TAG_member, name: "start_level", scope: !3771, file: !3691, line: 357, baseType: !1145, size: 16)
!3774 = !DIDerivedType(tag: DW_TAG_member, name: "end_level", scope: !3771, file: !3691, line: 358, baseType: !1145, size: 16, offset: 16)
!3775 = !DIDerivedType(tag: DW_TAG_member, name: "envelope", scope: !3771, file: !3691, line: 359, baseType: !3764, size: 64, offset: 32)
!3776 = !DIDerivedType(tag: DW_TAG_member, name: "periodic", scope: !3757, file: !3691, line: 460, baseType: !3777, size: 256)
!3777 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ff_periodic_effect", file: !3691, line: 401, size: 256, elements: !3778)
!3778 = !{!3779, !3780, !3781, !3782, !3783, !3784, !3785, !3786}
!3779 = !DIDerivedType(tag: DW_TAG_member, name: "waveform", scope: !3777, file: !3691, line: 402, baseType: !881, size: 16)
!3780 = !DIDerivedType(tag: DW_TAG_member, name: "period", scope: !3777, file: !3691, line: 403, baseType: !881, size: 16, offset: 16)
!3781 = !DIDerivedType(tag: DW_TAG_member, name: "magnitude", scope: !3777, file: !3691, line: 404, baseType: !1145, size: 16, offset: 32)
!3782 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !3777, file: !3691, line: 405, baseType: !1145, size: 16, offset: 48)
!3783 = !DIDerivedType(tag: DW_TAG_member, name: "phase", scope: !3777, file: !3691, line: 406, baseType: !881, size: 16, offset: 64)
!3784 = !DIDerivedType(tag: DW_TAG_member, name: "envelope", scope: !3777, file: !3691, line: 408, baseType: !3764, size: 64, offset: 80)
!3785 = !DIDerivedType(tag: DW_TAG_member, name: "custom_len", scope: !3777, file: !3691, line: 410, baseType: !439, size: 32, offset: 160)
!3786 = !DIDerivedType(tag: DW_TAG_member, name: "custom_data", scope: !3777, file: !3691, line: 411, baseType: !3787, size: 64, offset: 192)
!3787 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1145, size: 64)
!3788 = !DIDerivedType(tag: DW_TAG_member, name: "condition", scope: !3757, file: !3691, line: 461, baseType: !3789, size: 192)
!3789 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3790, size: 192, elements: !1508)
!3790 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ff_condition_effect", file: !3691, line: 372, size: 96, elements: !3791)
!3791 = !{!3792, !3793, !3794, !3795, !3796, !3797}
!3792 = !DIDerivedType(tag: DW_TAG_member, name: "right_saturation", scope: !3790, file: !3691, line: 373, baseType: !881, size: 16)
!3793 = !DIDerivedType(tag: DW_TAG_member, name: "left_saturation", scope: !3790, file: !3691, line: 374, baseType: !881, size: 16, offset: 16)
!3794 = !DIDerivedType(tag: DW_TAG_member, name: "right_coeff", scope: !3790, file: !3691, line: 376, baseType: !1145, size: 16, offset: 32)
!3795 = !DIDerivedType(tag: DW_TAG_member, name: "left_coeff", scope: !3790, file: !3691, line: 377, baseType: !1145, size: 16, offset: 48)
!3796 = !DIDerivedType(tag: DW_TAG_member, name: "deadband", scope: !3790, file: !3691, line: 379, baseType: !881, size: 16, offset: 64)
!3797 = !DIDerivedType(tag: DW_TAG_member, name: "center", scope: !3790, file: !3691, line: 380, baseType: !1145, size: 16, offset: 80)
!3798 = !DIDerivedType(tag: DW_TAG_member, name: "rumble", scope: !3757, file: !3691, line: 462, baseType: !3799, size: 32)
!3799 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ff_rumble_effect", file: !3691, line: 422, size: 32, elements: !3800)
!3800 = !{!3801, !3802}
!3801 = !DIDerivedType(tag: DW_TAG_member, name: "strong_magnitude", scope: !3799, file: !3691, line: 423, baseType: !881, size: 16)
!3802 = !DIDerivedType(tag: DW_TAG_member, name: "weak_magnitude", scope: !3799, file: !3691, line: 424, baseType: !881, size: 16, offset: 16)
!3803 = !DIDerivedType(tag: DW_TAG_member, name: "erase", scope: !3734, file: !3684, line: 537, baseType: !3804, size: 64, offset: 64)
!3804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3805, size: 64)
!3805 = !DISubroutineType(types: !3806)
!3806 = !{!132, !3682, !132}
!3807 = !DIDerivedType(tag: DW_TAG_member, name: "playback", scope: !3734, file: !3684, line: 539, baseType: !3808, size: 64, offset: 128)
!3808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3809, size: 64)
!3809 = !DISubroutineType(types: !3810)
!3810 = !{!132, !3682, !132, !132}
!3811 = !DIDerivedType(tag: DW_TAG_member, name: "set_gain", scope: !3734, file: !3684, line: 540, baseType: !3812, size: 64, offset: 192)
!3812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3813, size: 64)
!3813 = !DISubroutineType(types: !3814)
!3814 = !{null, !3682, !880}
!3815 = !DIDerivedType(tag: DW_TAG_member, name: "set_autocenter", scope: !3734, file: !3684, line: 541, baseType: !3812, size: 64, offset: 256)
!3816 = !DIDerivedType(tag: DW_TAG_member, name: "destroy", scope: !3734, file: !3684, line: 543, baseType: !3817, size: 64, offset: 320)
!3817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3818, size: 64)
!3818 = !DISubroutineType(types: !3819)
!3819 = !{null, !3733}
!3820 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !3734, file: !3684, line: 545, baseType: !139, size: 64, offset: 384)
!3821 = !DIDerivedType(tag: DW_TAG_member, name: "ffbit", scope: !3734, file: !3684, line: 547, baseType: !3707, size: 128, offset: 448)
!3822 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !3734, file: !3684, line: 549, baseType: !1114, size: 192, offset: 576)
!3823 = !DIDerivedType(tag: DW_TAG_member, name: "max_effects", scope: !3734, file: !3684, line: 551, baseType: !132, size: 32, offset: 768)
!3824 = !DIDerivedType(tag: DW_TAG_member, name: "effects", scope: !3734, file: !3684, line: 552, baseType: !3740, size: 64, offset: 832)
!3825 = !DIDerivedType(tag: DW_TAG_member, name: "effect_owners", scope: !3734, file: !3684, line: 553, baseType: !3826, offset: 896)
!3826 = !DICompositeType(tag: DW_TAG_array_type, baseType: !374, elements: !2257)
!3827 = !DIDerivedType(tag: DW_TAG_member, name: "poller", scope: !3683, file: !3684, line: 163, baseType: !3828, size: 64, offset: 2048)
!3828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3829, size: 64)
!3829 = !DICompositeType(tag: DW_TAG_structure_type, name: "input_dev_poller", file: !3684, line: 24, flags: DIFlagFwdDecl)
!3830 = !DIDerivedType(tag: DW_TAG_member, name: "repeat_key", scope: !3683, file: !3684, line: 165, baseType: !7, size: 32, offset: 2112)
!3831 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !3683, file: !3684, line: 166, baseType: !3344, size: 320, offset: 2176)
!3832 = !DIDerivedType(tag: DW_TAG_member, name: "rep", scope: !3683, file: !3684, line: 168, baseType: !3833, size: 64, offset: 2496)
!3833 = !DICompositeType(tag: DW_TAG_array_type, baseType: !132, size: 64, elements: !1508)
!3834 = !DIDerivedType(tag: DW_TAG_member, name: "mt", scope: !3683, file: !3684, line: 170, baseType: !3835, size: 64, offset: 2560)
!3835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3836, size: 64)
!3836 = !DICompositeType(tag: DW_TAG_structure_type, name: "input_mt", file: !3684, line: 170, flags: DIFlagFwdDecl)
!3837 = !DIDerivedType(tag: DW_TAG_member, name: "absinfo", scope: !3683, file: !3684, line: 172, baseType: !3838, size: 64, offset: 2624)
!3838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3839, size: 64)
!3839 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "input_absinfo", file: !3691, line: 90, size: 192, elements: !3840)
!3840 = !{!3841, !3842, !3843, !3844, !3845, !3846}
!3841 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !3839, file: !3691, line: 91, baseType: !1384, size: 32)
!3842 = !DIDerivedType(tag: DW_TAG_member, name: "minimum", scope: !3839, file: !3691, line: 92, baseType: !1384, size: 32, offset: 32)
!3843 = !DIDerivedType(tag: DW_TAG_member, name: "maximum", scope: !3839, file: !3691, line: 93, baseType: !1384, size: 32, offset: 64)
!3844 = !DIDerivedType(tag: DW_TAG_member, name: "fuzz", scope: !3839, file: !3691, line: 94, baseType: !1384, size: 32, offset: 96)
!3845 = !DIDerivedType(tag: DW_TAG_member, name: "flat", scope: !3839, file: !3691, line: 95, baseType: !1384, size: 32, offset: 128)
!3846 = !DIDerivedType(tag: DW_TAG_member, name: "resolution", scope: !3839, file: !3691, line: 96, baseType: !1384, size: 32, offset: 160)
!3847 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !3683, file: !3684, line: 174, baseType: !3700, size: 768, offset: 2688)
!3848 = !DIDerivedType(tag: DW_TAG_member, name: "led", scope: !3683, file: !3684, line: 175, baseType: !1309, size: 64, offset: 3456)
!3849 = !DIDerivedType(tag: DW_TAG_member, name: "snd", scope: !3683, file: !3684, line: 176, baseType: !1309, size: 64, offset: 3520)
!3850 = !DIDerivedType(tag: DW_TAG_member, name: "sw", scope: !3683, file: !3684, line: 177, baseType: !1309, size: 64, offset: 3584)
!3851 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !3683, file: !3684, line: 179, baseType: !3852, size: 64, offset: 3648)
!3852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3853, size: 64)
!3853 = !DISubroutineType(types: !3854)
!3854 = !{!132, !3682}
!3855 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !3683, file: !3684, line: 180, baseType: !3856, size: 64, offset: 3712)
!3856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3857, size: 64)
!3857 = !DISubroutineType(types: !3858)
!3858 = !{null, !3682}
!3859 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !3683, file: !3684, line: 181, baseType: !3860, size: 64, offset: 3776)
!3860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3861, size: 64)
!3861 = !DISubroutineType(types: !3862)
!3862 = !{!132, !3682, !374}
!3863 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !3683, file: !3684, line: 182, baseType: !3864, size: 64, offset: 3840)
!3864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3865, size: 64)
!3865 = !DISubroutineType(types: !3866)
!3866 = !{!132, !3682, !7, !7, !132}
!3867 = !DIDerivedType(tag: DW_TAG_member, name: "grab", scope: !3683, file: !3684, line: 184, baseType: !3868, size: 64, offset: 3904)
!3868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3869, size: 64)
!3869 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "input_handle", file: !3684, line: 337, size: 576, elements: !3870)
!3870 = !{!3871, !3872, !3873, !3874, !3875, !3941, !3942}
!3871 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !3869, file: !3684, line: 339, baseType: !139, size: 64)
!3872 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !3869, file: !3684, line: 341, baseType: !132, size: 32, offset: 64)
!3873 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3869, file: !3684, line: 342, baseType: !223, size: 64, offset: 128)
!3874 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3869, file: !3684, line: 344, baseType: !3682, size: 64, offset: 192)
!3875 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !3869, file: !3684, line: 345, baseType: !3876, size: 64, offset: 256)
!3876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3877, size: 64)
!3877 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "input_handler", file: !3684, line: 302, size: 960, elements: !3878)
!3878 = !{!3879, !3880, !3884, !3895, !3899, !3903, !3930, !3934, !3935, !3936, !3937, !3938, !3939, !3940}
!3879 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !3877, file: !3684, line: 304, baseType: !139, size: 64)
!3880 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !3877, file: !3684, line: 306, baseType: !3881, size: 64, offset: 64)
!3881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3882, size: 64)
!3882 = !DISubroutineType(types: !3883)
!3883 = !{null, !3868, !7, !7, !132}
!3884 = !DIDerivedType(tag: DW_TAG_member, name: "events", scope: !3877, file: !3684, line: 307, baseType: !3885, size: 64, offset: 128)
!3885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3886, size: 64)
!3886 = !DISubroutineType(types: !3887)
!3887 = !{null, !3868, !3888, !7}
!3888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3889, size: 64)
!3889 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3890)
!3890 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "input_value", file: !3684, line: 32, size: 64, elements: !3891)
!3891 = !{!3892, !3893, !3894}
!3892 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3890, file: !3684, line: 33, baseType: !881, size: 16)
!3893 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !3890, file: !3684, line: 34, baseType: !881, size: 16, offset: 16)
!3894 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !3890, file: !3684, line: 35, baseType: !1384, size: 32, offset: 32)
!3895 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !3877, file: !3684, line: 309, baseType: !3896, size: 64, offset: 192)
!3896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3897, size: 64)
!3897 = !DISubroutineType(types: !3898)
!3898 = !{!171, !3868, !7, !7, !132}
!3899 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !3877, file: !3684, line: 310, baseType: !3900, size: 64, offset: 256)
!3900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3901, size: 64)
!3901 = !DISubroutineType(types: !3902)
!3902 = !{!171, !3876, !3682}
!3903 = !DIDerivedType(tag: DW_TAG_member, name: "connect", scope: !3877, file: !3684, line: 311, baseType: !3904, size: 64, offset: 320)
!3904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3905, size: 64)
!3905 = !DISubroutineType(types: !3906)
!3906 = !{!132, !3876, !3682, !3907}
!3907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3908, size: 64)
!3908 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3909)
!3909 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "input_device_id", file: !175, line: 342, size: 1600, elements: !3910)
!3910 = !{!3911, !3912, !3913, !3914, !3915, !3916, !3918, !3920, !3921, !3922, !3923, !3924, !3925, !3927, !3928, !3929}
!3911 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3909, file: !175, line: 344, baseType: !3653, size: 64)
!3912 = !DIDerivedType(tag: DW_TAG_member, name: "bustype", scope: !3909, file: !175, line: 346, baseType: !881, size: 16, offset: 64)
!3913 = !DIDerivedType(tag: DW_TAG_member, name: "vendor", scope: !3909, file: !175, line: 347, baseType: !881, size: 16, offset: 80)
!3914 = !DIDerivedType(tag: DW_TAG_member, name: "product", scope: !3909, file: !175, line: 348, baseType: !881, size: 16, offset: 96)
!3915 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !3909, file: !175, line: 349, baseType: !881, size: 16, offset: 112)
!3916 = !DIDerivedType(tag: DW_TAG_member, name: "evbit", scope: !3909, file: !175, line: 351, baseType: !3917, size: 64, offset: 128)
!3917 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3653, size: 64, elements: !1310)
!3918 = !DIDerivedType(tag: DW_TAG_member, name: "keybit", scope: !3909, file: !175, line: 352, baseType: !3919, size: 768, offset: 192)
!3919 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3653, size: 768, elements: !2162)
!3920 = !DIDerivedType(tag: DW_TAG_member, name: "relbit", scope: !3909, file: !175, line: 353, baseType: !3917, size: 64, offset: 960)
!3921 = !DIDerivedType(tag: DW_TAG_member, name: "absbit", scope: !3909, file: !175, line: 354, baseType: !3917, size: 64, offset: 1024)
!3922 = !DIDerivedType(tag: DW_TAG_member, name: "mscbit", scope: !3909, file: !175, line: 355, baseType: !3917, size: 64, offset: 1088)
!3923 = !DIDerivedType(tag: DW_TAG_member, name: "ledbit", scope: !3909, file: !175, line: 356, baseType: !3917, size: 64, offset: 1152)
!3924 = !DIDerivedType(tag: DW_TAG_member, name: "sndbit", scope: !3909, file: !175, line: 357, baseType: !3917, size: 64, offset: 1216)
!3925 = !DIDerivedType(tag: DW_TAG_member, name: "ffbit", scope: !3909, file: !175, line: 358, baseType: !3926, size: 128, offset: 1280)
!3926 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3653, size: 128, elements: !1508)
!3927 = !DIDerivedType(tag: DW_TAG_member, name: "swbit", scope: !3909, file: !175, line: 359, baseType: !3917, size: 64, offset: 1408)
!3928 = !DIDerivedType(tag: DW_TAG_member, name: "propbit", scope: !3909, file: !175, line: 360, baseType: !3917, size: 64, offset: 1472)
!3929 = !DIDerivedType(tag: DW_TAG_member, name: "driver_info", scope: !3909, file: !175, line: 362, baseType: !3653, size: 64, offset: 1536)
!3930 = !DIDerivedType(tag: DW_TAG_member, name: "disconnect", scope: !3877, file: !3684, line: 312, baseType: !3931, size: 64, offset: 384)
!3931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3932, size: 64)
!3932 = !DISubroutineType(types: !3933)
!3933 = !{null, !3868}
!3934 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3877, file: !3684, line: 313, baseType: !3931, size: 64, offset: 448)
!3935 = !DIDerivedType(tag: DW_TAG_member, name: "legacy_minors", scope: !3877, file: !3684, line: 315, baseType: !171, size: 8, offset: 512)
!3936 = !DIDerivedType(tag: DW_TAG_member, name: "minor", scope: !3877, file: !3684, line: 316, baseType: !132, size: 32, offset: 544)
!3937 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3877, file: !3684, line: 317, baseType: !223, size: 64, offset: 576)
!3938 = !DIDerivedType(tag: DW_TAG_member, name: "id_table", scope: !3877, file: !3684, line: 319, baseType: !3907, size: 64, offset: 640)
!3939 = !DIDerivedType(tag: DW_TAG_member, name: "h_list", scope: !3877, file: !3684, line: 321, baseType: !143, size: 128, offset: 704)
!3940 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3877, file: !3684, line: 322, baseType: !143, size: 128, offset: 832)
!3941 = !DIDerivedType(tag: DW_TAG_member, name: "d_node", scope: !3869, file: !3684, line: 347, baseType: !143, size: 128, offset: 320)
!3942 = !DIDerivedType(tag: DW_TAG_member, name: "h_node", scope: !3869, file: !3684, line: 348, baseType: !143, size: 128, offset: 448)
!3943 = !DIDerivedType(tag: DW_TAG_member, name: "event_lock", scope: !3683, file: !3684, line: 186, baseType: !185, offset: 3968)
!3944 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !3683, file: !3684, line: 187, baseType: !1114, size: 192, offset: 3968)
!3945 = !DIDerivedType(tag: DW_TAG_member, name: "users", scope: !3683, file: !3684, line: 189, baseType: !7, size: 32, offset: 4160)
!3946 = !DIDerivedType(tag: DW_TAG_member, name: "going_away", scope: !3683, file: !3684, line: 190, baseType: !171, size: 8, offset: 4192)
!3947 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3683, file: !3684, line: 192, baseType: !256, size: 5568, offset: 4224)
!3948 = !DIDerivedType(tag: DW_TAG_member, name: "h_list", scope: !3683, file: !3684, line: 194, baseType: !143, size: 128, offset: 9792)
!3949 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3683, file: !3684, line: 195, baseType: !143, size: 128, offset: 9920)
!3950 = !DIDerivedType(tag: DW_TAG_member, name: "num_vals", scope: !3683, file: !3684, line: 197, baseType: !7, size: 32, offset: 10048)
!3951 = !DIDerivedType(tag: DW_TAG_member, name: "max_vals", scope: !3683, file: !3684, line: 198, baseType: !7, size: 32, offset: 10080)
!3952 = !DIDerivedType(tag: DW_TAG_member, name: "vals", scope: !3683, file: !3684, line: 199, baseType: !3953, size: 64, offset: 10112)
!3953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3890, size: 64)
!3954 = !DIDerivedType(tag: DW_TAG_member, name: "devres_managed", scope: !3683, file: !3684, line: 201, baseType: !171, size: 8, offset: 10176)
!3955 = !DIDerivedType(tag: DW_TAG_member, name: "timestamp", scope: !3683, file: !3684, line: 203, baseType: !3956, size: 192, offset: 10240)
!3956 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1240, size: 192, elements: !299)
!3957 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !148, file: !3, line: 209, baseType: !3958, size: 512, offset: 640)
!3958 = !DICompositeType(tag: DW_TAG_array_type, baseType: !162, size: 512, elements: !303)
!3959 = !DIDerivedType(tag: DW_TAG_member, name: "phys", scope: !148, file: !3, line: 210, baseType: !161, size: 256, offset: 1152)
!3960 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !148, file: !3, line: 212, baseType: !339, size: 16, offset: 1408)
!3961 = !DIDerivedType(tag: DW_TAG_member, name: "keycode", scope: !148, file: !3, line: 213, baseType: !3962, size: 8192, offset: 1424)
!3962 = !DICompositeType(tag: DW_TAG_array_type, baseType: !339, size: 8192, elements: !3963)
!3963 = !{!3964}
!3964 = !DISubrange(count: 512)
!3965 = !DIDerivedType(tag: DW_TAG_member, name: "force_release_mask", scope: !148, file: !3, line: 214, baseType: !3966, size: 512, offset: 9664)
!3966 = !DICompositeType(tag: DW_TAG_array_type, baseType: !136, size: 512, elements: !1270)
!3967 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !148, file: !3, line: 215, baseType: !180, size: 8, offset: 10176)
!3968 = !DIDerivedType(tag: DW_TAG_member, name: "translated", scope: !148, file: !3, line: 216, baseType: !171, size: 8, offset: 10184)
!3969 = !DIDerivedType(tag: DW_TAG_member, name: "extra", scope: !148, file: !3, line: 217, baseType: !171, size: 8, offset: 10192)
!3970 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !148, file: !3, line: 218, baseType: !171, size: 8, offset: 10200)
!3971 = !DIDerivedType(tag: DW_TAG_member, name: "softrepeat", scope: !148, file: !3, line: 219, baseType: !171, size: 8, offset: 10208)
!3972 = !DIDerivedType(tag: DW_TAG_member, name: "softraw", scope: !148, file: !3, line: 220, baseType: !171, size: 8, offset: 10216)
!3973 = !DIDerivedType(tag: DW_TAG_member, name: "scroll", scope: !148, file: !3, line: 221, baseType: !171, size: 8, offset: 10224)
!3974 = !DIDerivedType(tag: DW_TAG_member, name: "enabled", scope: !148, file: !3, line: 222, baseType: !171, size: 8, offset: 10232)
!3975 = !DIDerivedType(tag: DW_TAG_member, name: "emul", scope: !148, file: !3, line: 225, baseType: !180, size: 8, offset: 10240)
!3976 = !DIDerivedType(tag: DW_TAG_member, name: "resend", scope: !148, file: !3, line: 226, baseType: !171, size: 8, offset: 10248)
!3977 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !148, file: !3, line: 227, baseType: !171, size: 8, offset: 10256)
!3978 = !DIDerivedType(tag: DW_TAG_member, name: "xl_bit", scope: !148, file: !3, line: 228, baseType: !136, size: 64, offset: 10304)
!3979 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !148, file: !3, line: 229, baseType: !7, size: 32, offset: 10368)
!3980 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !148, file: !3, line: 230, baseType: !136, size: 64, offset: 10432)
!3981 = !DIDerivedType(tag: DW_TAG_member, name: "err_count", scope: !148, file: !3, line: 231, baseType: !136, size: 64, offset: 10496)
!3982 = !DIDerivedType(tag: DW_TAG_member, name: "event_work", scope: !148, file: !3, line: 233, baseType: !3983, size: 704, offset: 10560)
!3983 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_work", file: !92, line: 115, size: 704, elements: !3984)
!3984 = !{!3985, !3986, !3987, !3988}
!3985 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !3983, file: !92, line: 116, baseType: !1898, size: 256)
!3986 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !3983, file: !92, line: 117, baseType: !3344, size: 320, offset: 256)
!3987 = !DIDerivedType(tag: DW_TAG_member, name: "wq", scope: !3983, file: !92, line: 120, baseType: !2657, size: 64, offset: 576)
!3988 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !3983, file: !92, line: 121, baseType: !132, size: 32, offset: 640)
!3989 = !DIDerivedType(tag: DW_TAG_member, name: "event_jiffies", scope: !148, file: !3, line: 234, baseType: !136, size: 64, offset: 11264)
!3990 = !DIDerivedType(tag: DW_TAG_member, name: "event_mask", scope: !148, file: !3, line: 235, baseType: !136, size: 64, offset: 11328)
!3991 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !148, file: !3, line: 238, baseType: !1114, size: 192, offset: 11392)
!3992 = !DIDerivedType(tag: DW_TAG_member, name: "function_row_physmap", scope: !148, file: !3, line: 240, baseType: !3993, size: 768, offset: 11584)
!3993 = !DICompositeType(tag: DW_TAG_array_type, baseType: !437, size: 768, elements: !3994)
!3994 = !{!3995}
!3995 = !DISubrange(count: 24)
!3996 = !DIDerivedType(tag: DW_TAG_member, name: "num_function_row_keys", scope: !148, file: !3, line: 241, baseType: !132, size: 32, offset: 12352)
!3997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3998, size: 64)
!3998 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !162)
!3999 = !{!0, !4000, !4005, !4010, !4015, !4067, !4072, !4077, !4079, !4084, !4089, !4091, !4096, !4101, !4103, !4108, !4113, !4115, !4120, !4125, !4127, !4129, !4134, !4136, !4141, !4146, !4148, !4153, !4155, !4157, !4159, !4161, !4163, !4168, !4170, !4173, !4178, !4183, !4185, !4190, !4192, !4197, !4199, !4202, !4207, !4210, !4213, !4215, !4219, !4222, !4232, !4234, !4239, !4241, !4243, !4257, !4260, !4262, !4264, !4266, !4268, !4270, !4272, !4274, !4297, !4300, !4303, !4306, !4308, !4311, !4314}
!4000 = !DIGlobalVariableExpression(var: !4001, expr: !DIExpression())
!4001 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_description205", scope: !2, file: !3, line: 32, type: !4002, isLocal: true, isDefinition: true, align: 8)
!4002 = !DICompositeType(tag: DW_TAG_array_type, baseType: !224, size: 368, elements: !4003)
!4003 = !{!4004}
!4004 = !DISubrange(count: 46)
!4005 = !DIGlobalVariableExpression(var: !4006, expr: !DIExpression())
!4006 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_file206", scope: !2, file: !3, line: 33, type: !4007, isLocal: true, isDefinition: true, align: 8)
!4007 = !DICompositeType(tag: DW_TAG_array_type, baseType: !224, size: 320, elements: !4008)
!4008 = !{!4009}
!4009 = !DISubrange(count: 40)
!4010 = !DIGlobalVariableExpression(var: !4011, expr: !DIExpression())
!4011 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_license207", scope: !2, file: !3, line: 33, type: !4012, isLocal: true, isDefinition: true, align: 8)
!4012 = !DICompositeType(tag: DW_TAG_array_type, baseType: !224, size: 144, elements: !4013)
!4013 = !{!4014}
!4014 = !DISubrange(count: 18)
!4015 = !DIGlobalVariableExpression(var: !4016, expr: !DIExpression())
!4016 = distinct !DIGlobalVariable(name: "__param_set", scope: !2, file: !3, line: 36, type: !4017, isLocal: true, isDefinition: true, align: 64)
!4017 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4018)
!4018 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_param", file: !4019, line: 69, size: 320, elements: !4020)
!4019 = !DIFile(filename: "./include/linux/moduleparam.h", directory: "/home/lizy2001/genbc/linux")
!4020 = !{!4021, !4022, !4023, !4039, !4041, !4045, !4046}
!4021 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4018, file: !4019, line: 70, baseType: !223, size: 64)
!4022 = !DIDerivedType(tag: DW_TAG_member, name: "mod", scope: !4018, file: !4019, line: 71, baseType: !651, size: 64, offset: 64)
!4023 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4018, file: !4019, line: 72, baseType: !4024, size: 64, offset: 128)
!4024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4025, size: 64)
!4025 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4026)
!4026 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_param_ops", file: !4019, line: 47, size: 256, elements: !4027)
!4027 = !{!4028, !4029, !4034, !4038}
!4028 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4026, file: !4019, line: 49, baseType: !7, size: 32)
!4029 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !4026, file: !4019, line: 51, baseType: !4030, size: 64, offset: 64)
!4030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4031, size: 64)
!4031 = !DISubroutineType(types: !4032)
!4032 = !{!132, !223, !4033}
!4033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4017, size: 64)
!4034 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !4026, file: !4019, line: 53, baseType: !4035, size: 64, offset: 128)
!4035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4036, size: 64)
!4036 = !DISubroutineType(types: !4037)
!4037 = !{!132, !298, !4033}
!4038 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !4026, file: !4019, line: 55, baseType: !488, size: 64, offset: 192)
!4039 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !4018, file: !4019, line: 73, baseType: !4040, size: 16, offset: 192)
!4040 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !880)
!4041 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !4018, file: !4019, line: 74, baseType: !4042, size: 8, offset: 208)
!4042 = !DIDerivedType(tag: DW_TAG_typedef, name: "s8", file: !438, line: 16, baseType: !4043)
!4043 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s8", file: !179, line: 20, baseType: !4044)
!4044 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!4045 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4018, file: !4019, line: 75, baseType: !1292, size: 8, offset: 216)
!4046 = !DIDerivedType(tag: DW_TAG_member, scope: !4018, file: !4019, line: 76, baseType: !4047, size: 64, offset: 256)
!4047 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4018, file: !4019, line: 76, size: 64, elements: !4048)
!4048 = !{!4049, !4050, !4057}
!4049 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !4047, file: !4019, line: 77, baseType: !139, size: 64)
!4050 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !4047, file: !4019, line: 78, baseType: !4051, size: 64)
!4051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4052, size: 64)
!4052 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4053)
!4053 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kparam_string", file: !4019, line: 86, size: 128, elements: !4054)
!4054 = !{!4055, !4056}
!4055 = !DIDerivedType(tag: DW_TAG_member, name: "maxlen", scope: !4053, file: !4019, line: 87, baseType: !7, size: 32)
!4056 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !4053, file: !4019, line: 88, baseType: !298, size: 64, offset: 64)
!4057 = !DIDerivedType(tag: DW_TAG_member, name: "arr", scope: !4047, file: !4019, line: 79, baseType: !4058, size: 64)
!4058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4059, size: 64)
!4059 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4060)
!4060 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kparam_array", file: !4019, line: 92, size: 256, elements: !4061)
!4061 = !{!4062, !4063, !4064, !4065, !4066}
!4062 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !4060, file: !4019, line: 94, baseType: !7, size: 32)
!4063 = !DIDerivedType(tag: DW_TAG_member, name: "elemsize", scope: !4060, file: !4019, line: 95, baseType: !7, size: 32, offset: 32)
!4064 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !4060, file: !4019, line: 96, baseType: !2548, size: 64, offset: 64)
!4065 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4060, file: !4019, line: 97, baseType: !4024, size: 64, offset: 128)
!4066 = !DIDerivedType(tag: DW_TAG_member, name: "elem", scope: !4060, file: !4019, line: 98, baseType: !139, size: 64, offset: 192)
!4067 = !DIGlobalVariableExpression(var: !4068, expr: !DIExpression())
!4068 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_settype208", scope: !2, file: !3, line: 36, type: !4069, isLocal: true, isDefinition: true, align: 8)
!4069 = !DICompositeType(tag: DW_TAG_array_type, baseType: !224, size: 184, elements: !4070)
!4070 = !{!4071}
!4071 = !DISubrange(count: 23)
!4072 = !DIGlobalVariableExpression(var: !4073, expr: !DIExpression())
!4073 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_set209", scope: !2, file: !3, line: 37, type: !4074, isLocal: true, isDefinition: true, align: 8)
!4074 = !DICompositeType(tag: DW_TAG_array_type, baseType: !224, size: 568, elements: !4075)
!4075 = !{!4076}
!4076 = !DISubrange(count: 71)
!4077 = !DIGlobalVariableExpression(var: !4078, expr: !DIExpression())
!4078 = distinct !DIGlobalVariable(name: "__param_reset", scope: !2, file: !3, line: 44, type: !4017, isLocal: true, isDefinition: true, align: 64)
!4079 = !DIGlobalVariableExpression(var: !4080, expr: !DIExpression())
!4080 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_resettype210", scope: !2, file: !3, line: 44, type: !4081, isLocal: true, isDefinition: true, align: 8)
!4081 = !DICompositeType(tag: DW_TAG_array_type, baseType: !224, size: 208, elements: !4082)
!4082 = !{!4083}
!4083 = !DISubrange(count: 26)
!4084 = !DIGlobalVariableExpression(var: !4085, expr: !DIExpression())
!4085 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_reset211", scope: !2, file: !3, line: 45, type: !4086, isLocal: true, isDefinition: true, align: 8)
!4086 = !DICompositeType(tag: DW_TAG_array_type, baseType: !224, size: 432, elements: !4087)
!4087 = !{!4088}
!4088 = !DISubrange(count: 54)
!4089 = !DIGlobalVariableExpression(var: !4090, expr: !DIExpression())
!4090 = distinct !DIGlobalVariable(name: "__param_softrepeat", scope: !2, file: !3, line: 48, type: !4017, isLocal: true, isDefinition: true, align: 64)
!4091 = !DIGlobalVariableExpression(var: !4092, expr: !DIExpression())
!4092 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_softrepeattype212", scope: !2, file: !3, line: 48, type: !4093, isLocal: true, isDefinition: true, align: 8)
!4093 = !DICompositeType(tag: DW_TAG_array_type, baseType: !224, size: 248, elements: !4094)
!4094 = !{!4095}
!4095 = !DISubrange(count: 31)
!4096 = !DIGlobalVariableExpression(var: !4097, expr: !DIExpression())
!4097 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_softrepeat213", scope: !2, file: !3, line: 49, type: !4098, isLocal: true, isDefinition: true, align: 8)
!4098 = !DICompositeType(tag: DW_TAG_array_type, baseType: !224, size: 408, elements: !4099)
!4099 = !{!4100}
!4100 = !DISubrange(count: 51)
!4101 = !DIGlobalVariableExpression(var: !4102, expr: !DIExpression())
!4102 = distinct !DIGlobalVariable(name: "__param_softraw", scope: !2, file: !3, line: 52, type: !4017, isLocal: true, isDefinition: true, align: 64)
!4103 = !DIGlobalVariableExpression(var: !4104, expr: !DIExpression())
!4104 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_softrawtype214", scope: !2, file: !3, line: 52, type: !4105, isLocal: true, isDefinition: true, align: 8)
!4105 = !DICompositeType(tag: DW_TAG_array_type, baseType: !224, size: 224, elements: !4106)
!4106 = !{!4107}
!4107 = !DISubrange(count: 28)
!4108 = !DIGlobalVariableExpression(var: !4109, expr: !DIExpression())
!4109 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_softraw215", scope: !2, file: !3, line: 53, type: !4110, isLocal: true, isDefinition: true, align: 8)
!4110 = !DICompositeType(tag: DW_TAG_array_type, baseType: !224, size: 400, elements: !4111)
!4111 = !{!4112}
!4112 = !DISubrange(count: 50)
!4113 = !DIGlobalVariableExpression(var: !4114, expr: !DIExpression())
!4114 = distinct !DIGlobalVariable(name: "__param_scroll", scope: !2, file: !3, line: 56, type: !4017, isLocal: true, isDefinition: true, align: 64)
!4115 = !DIGlobalVariableExpression(var: !4116, expr: !DIExpression())
!4116 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_scrolltype216", scope: !2, file: !3, line: 56, type: !4117, isLocal: true, isDefinition: true, align: 8)
!4117 = !DICompositeType(tag: DW_TAG_array_type, baseType: !224, size: 216, elements: !4118)
!4118 = !{!4119}
!4119 = !DISubrange(count: 27)
!4120 = !DIGlobalVariableExpression(var: !4121, expr: !DIExpression())
!4121 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_scroll217", scope: !2, file: !3, line: 57, type: !4122, isLocal: true, isDefinition: true, align: 8)
!4122 = !DICompositeType(tag: DW_TAG_array_type, baseType: !224, size: 584, elements: !4123)
!4123 = !{!4124}
!4124 = !DISubrange(count: 73)
!4125 = !DIGlobalVariableExpression(var: !4126, expr: !DIExpression())
!4126 = distinct !DIGlobalVariable(name: "__param_extra", scope: !2, file: !3, line: 60, type: !4017, isLocal: true, isDefinition: true, align: 64)
!4127 = !DIGlobalVariableExpression(var: !4128, expr: !DIExpression())
!4128 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_extratype218", scope: !2, file: !3, line: 60, type: !4081, isLocal: true, isDefinition: true, align: 8)
!4129 = !DIGlobalVariableExpression(var: !4130, expr: !DIExpression())
!4130 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_extra219", scope: !2, file: !3, line: 61, type: !4131, isLocal: true, isDefinition: true, align: 8)
!4131 = !DICompositeType(tag: DW_TAG_array_type, baseType: !224, size: 728, elements: !4132)
!4132 = !{!4133}
!4133 = !DISubrange(count: 91)
!4134 = !DIGlobalVariableExpression(var: !4135, expr: !DIExpression())
!4135 = distinct !DIGlobalVariable(name: "__param_terminal", scope: !2, file: !3, line: 64, type: !4017, isLocal: true, isDefinition: true, align: 64)
!4136 = !DIGlobalVariableExpression(var: !4137, expr: !DIExpression())
!4137 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_terminaltype220", scope: !2, file: !3, line: 64, type: !4138, isLocal: true, isDefinition: true, align: 8)
!4138 = !DICompositeType(tag: DW_TAG_array_type, baseType: !224, size: 232, elements: !4139)
!4139 = !{!4140}
!4140 = !DISubrange(count: 29)
!4141 = !DIGlobalVariableExpression(var: !4142, expr: !DIExpression())
!4142 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_terminal221", scope: !2, file: !3, line: 65, type: !4143, isLocal: true, isDefinition: true, align: 8)
!4143 = !DICompositeType(tag: DW_TAG_array_type, baseType: !224, size: 704, elements: !4144)
!4144 = !{!4145}
!4145 = !DISubrange(count: 88)
!4146 = !DIGlobalVariableExpression(var: !4147, expr: !DIExpression())
!4147 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_atkbd_init227", scope: !2, file: !3, line: 1913, type: !139, isLocal: true, isDefinition: true)
!4148 = !DIGlobalVariableExpression(var: !4149, expr: !DIExpression())
!4149 = distinct !DIGlobalVariable(name: "__exitcall_atkbd_exit", scope: !2, file: !3, line: 1914, type: !4150, isLocal: true, isDefinition: true)
!4150 = !DIDerivedType(tag: DW_TAG_typedef, name: "exitcall_t", file: !4151, line: 117, baseType: !4152)
!4151 = !DIFile(filename: "./include/linux/init.h", directory: "/home/lizy2001/genbc/linux")
!4152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1819, size: 64)
!4153 = !DIGlobalVariableExpression(var: !4154, expr: !DIExpression())
!4154 = distinct !DIGlobalVariable(name: "atkbd_reset", scope: !2, file: !3, line: 40, type: !171, isLocal: true, isDefinition: true)
!4155 = !DIGlobalVariableExpression(var: !4156, expr: !DIExpression())
!4156 = distinct !DIGlobalVariable(name: "atkbd_softrepeat", scope: !2, file: !3, line: 47, type: !171, isLocal: true, isDefinition: true)
!4157 = !DIGlobalVariableExpression(var: !4158, expr: !DIExpression())
!4158 = distinct !DIGlobalVariable(name: "atkbd_scroll", scope: !2, file: !3, line: 55, type: !171, isLocal: true, isDefinition: true)
!4159 = !DIGlobalVariableExpression(var: !4160, expr: !DIExpression())
!4160 = distinct !DIGlobalVariable(name: "atkbd_extra", scope: !2, file: !3, line: 59, type: !171, isLocal: true, isDefinition: true)
!4161 = !DIGlobalVariableExpression(var: !4162, expr: !DIExpression())
!4162 = distinct !DIGlobalVariable(name: "atkbd_terminal", scope: !2, file: !3, line: 63, type: !171, isLocal: true, isDefinition: true)
!4163 = !DIGlobalVariableExpression(var: !4164, expr: !DIExpression())
!4164 = distinct !DIGlobalVariable(name: "__param_str_set", scope: !2, file: !3, line: 36, type: !4165, isLocal: true, isDefinition: true)
!4165 = !DICompositeType(tag: DW_TAG_array_type, baseType: !224, size: 80, elements: !4166)
!4166 = !{!4167}
!4167 = !DISubrange(count: 10)
!4168 = !DIGlobalVariableExpression(var: !4169, expr: !DIExpression())
!4169 = distinct !DIGlobalVariable(name: "atkbd_set", scope: !2, file: !3, line: 35, type: !132, isLocal: true, isDefinition: true)
!4170 = !DIGlobalVariableExpression(var: !4171, expr: !DIExpression())
!4171 = distinct !DIGlobalVariable(name: "__param_str_reset", scope: !2, file: !3, line: 44, type: !4172, isLocal: true, isDefinition: true)
!4172 = !DICompositeType(tag: DW_TAG_array_type, baseType: !224, size: 96, elements: !2162)
!4173 = !DIGlobalVariableExpression(var: !4174, expr: !DIExpression())
!4174 = distinct !DIGlobalVariable(name: "__param_str_softrepeat", scope: !2, file: !3, line: 48, type: !4175, isLocal: true, isDefinition: true)
!4175 = !DICompositeType(tag: DW_TAG_array_type, baseType: !224, size: 136, elements: !4176)
!4176 = !{!4177}
!4177 = !DISubrange(count: 17)
!4178 = !DIGlobalVariableExpression(var: !4179, expr: !DIExpression())
!4179 = distinct !DIGlobalVariable(name: "__param_str_softraw", scope: !2, file: !3, line: 52, type: !4180, isLocal: true, isDefinition: true)
!4180 = !DICompositeType(tag: DW_TAG_array_type, baseType: !224, size: 112, elements: !4181)
!4181 = !{!4182}
!4182 = !DISubrange(count: 14)
!4183 = !DIGlobalVariableExpression(var: !4184, expr: !DIExpression())
!4184 = distinct !DIGlobalVariable(name: "atkbd_softraw", scope: !2, file: !3, line: 51, type: !171, isLocal: true, isDefinition: true)
!4185 = !DIGlobalVariableExpression(var: !4186, expr: !DIExpression())
!4186 = distinct !DIGlobalVariable(name: "__param_str_scroll", scope: !2, file: !3, line: 56, type: !4187, isLocal: true, isDefinition: true)
!4187 = !DICompositeType(tag: DW_TAG_array_type, baseType: !224, size: 104, elements: !4188)
!4188 = !{!4189}
!4189 = !DISubrange(count: 13)
!4190 = !DIGlobalVariableExpression(var: !4191, expr: !DIExpression())
!4191 = distinct !DIGlobalVariable(name: "__param_str_extra", scope: !2, file: !3, line: 60, type: !4172, isLocal: true, isDefinition: true)
!4192 = !DIGlobalVariableExpression(var: !4193, expr: !DIExpression())
!4193 = distinct !DIGlobalVariable(name: "__param_str_terminal", scope: !2, file: !3, line: 64, type: !4194, isLocal: true, isDefinition: true)
!4194 = !DICompositeType(tag: DW_TAG_array_type, baseType: !224, size: 120, elements: !4195)
!4195 = !{!4196}
!4196 = !DISubrange(count: 15)
!4197 = !DIGlobalVariableExpression(var: !4198, expr: !DIExpression())
!4198 = distinct !DIGlobalVariable(name: "atkbd_drv", scope: !2, file: !3, line: 1390, type: !220, isLocal: true, isDefinition: true)
!4199 = !DIGlobalVariableExpression(var: !4200, expr: !DIExpression())
!4200 = distinct !DIGlobalVariable(name: "atkbd_serio_ids", scope: !2, file: !3, line: 1366, type: !4201, isLocal: true, isDefinition: true)
!4201 = !DICompositeType(tag: DW_TAG_array_type, baseType: !227, size: 128, elements: !1096)
!4202 = !DIGlobalVariableExpression(var: !4203, expr: !DIExpression())
!4203 = distinct !DIGlobalVariable(name: "atkbd_platform_scancode_fixup", scope: !2, file: !3, line: 249, type: !4204, isLocal: true, isDefinition: true)
!4204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4205, size: 64)
!4205 = !DISubroutineType(types: !4206)
!4206 = !{!7, !147, !7}
!4207 = !DIGlobalVariableExpression(var: !4208, expr: !DIExpression())
!4208 = distinct !DIGlobalVariable(name: "xl_table", scope: !2, file: !3, line: 343, type: !4209, isLocal: true, isDefinition: true)
!4209 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2691, size: 192, elements: !1564)
!4210 = !DIGlobalVariableExpression(var: !4211, expr: !DIExpression())
!4211 = distinct !DIGlobalVariable(name: "__key", scope: !4212, file: !3, line: 1238, type: !666, isLocal: true, isDefinition: true)
!4212 = distinct !DISubprogram(name: "atkbd_connect", scope: !3, file: !3, line: 1224, type: !237, scopeLine: 1225, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!4213 = !DIGlobalVariableExpression(var: !4214, expr: !DIExpression())
!4214 = distinct !DIGlobalVariable(name: "atkbd_skip_deactivate", scope: !2, file: !3, line: 255, type: !171, isLocal: true, isDefinition: true)
!4215 = !DIGlobalVariableExpression(var: !4216, expr: !DIExpression())
!4216 = distinct !DIGlobalVariable(name: "atkbd_unxlate_table", scope: !2, file: !3, line: 126, type: !4217, isLocal: true, isDefinition: true)
!4217 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4218, size: 2048, elements: !168)
!4218 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !339)
!4219 = !DIGlobalVariableExpression(var: !4220, expr: !DIExpression())
!4220 = distinct !DIGlobalVariable(name: "atkbd_set2_keycode", scope: !2, file: !3, line: 79, type: !4221, isLocal: true, isDefinition: true)
!4221 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4218, size: 8192, elements: !3963)
!4222 = !DIGlobalVariableExpression(var: !4223, expr: !DIExpression())
!4223 = distinct !DIGlobalVariable(name: "atkbd_scroll_keys", scope: !2, file: !3, line: 189, type: !4224, isLocal: true, isDefinition: true)
!4224 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4225, size: 224, elements: !4230)
!4225 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4226)
!4226 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3, line: 186, size: 32, elements: !4227)
!4227 = !{!4228, !4229}
!4228 = !DIDerivedType(tag: DW_TAG_member, name: "keycode", scope: !4226, file: !3, line: 187, baseType: !339, size: 16)
!4229 = !DIDerivedType(tag: DW_TAG_member, name: "set2", scope: !4226, file: !3, line: 188, baseType: !180, size: 8, offset: 16)
!4230 = !{!4231}
!4231 = !DISubrange(count: 7)
!4232 = !DIGlobalVariableExpression(var: !4233, expr: !DIExpression())
!4233 = distinct !DIGlobalVariable(name: "atkbd_set3_keycode", scope: !2, file: !3, line: 110, type: !4221, isLocal: true, isDefinition: true)
!4234 = !DIGlobalVariableExpression(var: !4235, expr: !DIExpression())
!4235 = distinct !DIGlobalVariable(name: "atkbd_platform_fixup", scope: !2, file: !3, line: 247, type: !4236, isLocal: true, isDefinition: true)
!4236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4237, size: 64)
!4237 = !DISubroutineType(types: !4238)
!4238 = !{null, !147, !3070}
!4239 = !DIGlobalVariableExpression(var: !4240, expr: !DIExpression())
!4240 = distinct !DIGlobalVariable(name: "atkbd_platform_fixup_data", scope: !2, file: !3, line: 248, type: !139, isLocal: true, isDefinition: true)
!4241 = !DIGlobalVariableExpression(var: !4242, expr: !DIExpression())
!4242 = distinct !DIGlobalVariable(name: "atkbd_attribute_group", scope: !2, file: !3, line: 338, type: !353, isLocal: true, isDefinition: true)
!4243 = !DIGlobalVariableExpression(var: !4244, expr: !DIExpression())
!4244 = distinct !DIGlobalVariable(name: "atkbd_attr_function_row_physmap", scope: !2, file: !3, line: 295, type: !4245, isLocal: true, isDefinition: true)
!4245 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_attribute", file: !60, line: 99, size: 256, elements: !4246)
!4246 = !{!4247, !4248, !4253}
!4247 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !4245, file: !60, line: 100, baseType: !334, size: 128)
!4248 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !4245, file: !60, line: 101, baseType: !4249, size: 64, offset: 128)
!4249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4250, size: 64)
!4250 = !DISubroutineType(types: !4251)
!4251 = !{!329, !255, !4252, !298}
!4252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4245, size: 64)
!4253 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !4245, file: !60, line: 103, baseType: !4254, size: 64, offset: 192)
!4254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4255, size: 64)
!4255 = !DISubroutineType(types: !4256)
!4256 = !{!329, !255, !4252, !223, !344}
!4257 = !DIGlobalVariableExpression(var: !4258, expr: !DIExpression())
!4258 = distinct !DIGlobalVariable(name: "atkbd_attributes", scope: !2, file: !3, line: 297, type: !4259, isLocal: true, isDefinition: true)
!4259 = !DICompositeType(tag: DW_TAG_array_type, baseType: !333, size: 576, elements: !3650)
!4260 = !DIGlobalVariableExpression(var: !4261, expr: !DIExpression())
!4261 = distinct !DIGlobalVariable(name: "atkbd_attr_extra", scope: !2, file: !3, line: 277, type: !4245, isLocal: true, isDefinition: true)
!4262 = !DIGlobalVariableExpression(var: !4263, expr: !DIExpression())
!4263 = distinct !DIGlobalVariable(name: "atkbd_attr_force_release", scope: !2, file: !3, line: 278, type: !4245, isLocal: true, isDefinition: true)
!4264 = !DIGlobalVariableExpression(var: !4265, expr: !DIExpression())
!4265 = distinct !DIGlobalVariable(name: "atkbd_attr_scroll", scope: !2, file: !3, line: 279, type: !4245, isLocal: true, isDefinition: true)
!4266 = !DIGlobalVariableExpression(var: !4267, expr: !DIExpression())
!4267 = distinct !DIGlobalVariable(name: "atkbd_attr_set", scope: !2, file: !3, line: 280, type: !4245, isLocal: true, isDefinition: true)
!4268 = !DIGlobalVariableExpression(var: !4269, expr: !DIExpression())
!4269 = distinct !DIGlobalVariable(name: "atkbd_attr_softrepeat", scope: !2, file: !3, line: 281, type: !4245, isLocal: true, isDefinition: true)
!4270 = !DIGlobalVariableExpression(var: !4271, expr: !DIExpression())
!4271 = distinct !DIGlobalVariable(name: "atkbd_attr_softraw", scope: !2, file: !3, line: 282, type: !4245, isLocal: true, isDefinition: true)
!4272 = !DIGlobalVariableExpression(var: !4273, expr: !DIExpression())
!4273 = distinct !DIGlobalVariable(name: "atkbd_attr_err_count", scope: !2, file: !3, line: 294, type: !4245, isLocal: true, isDefinition: true)
!4274 = !DIGlobalVariableExpression(var: !4275, expr: !DIExpression())
!4275 = distinct !DIGlobalVariable(name: "atkbd_dmi_quirk_table", scope: !2, file: !3, line: 1755, type: !4276, isLocal: true, isDefinition: true)
!4276 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4277, size: 49536, elements: !4013)
!4277 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4278)
!4278 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dmi_system_id", file: !175, line: 566, size: 2752, elements: !4279)
!4279 = !{!4280, !4285, !4286, !4296}
!4280 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !4278, file: !175, line: 567, baseType: !4281, size: 64)
!4281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4282, size: 64)
!4282 = !DISubroutineType(types: !4283)
!4283 = !{!132, !4284}
!4284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4277, size: 64)
!4285 = !DIDerivedType(tag: DW_TAG_member, name: "ident", scope: !4278, file: !175, line: 568, baseType: !223, size: 64, offset: 64)
!4286 = !DIDerivedType(tag: DW_TAG_member, name: "matches", scope: !4278, file: !175, line: 569, baseType: !4287, size: 2560, offset: 128)
!4287 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4288, size: 2560, elements: !1096)
!4288 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dmi_strmatch", file: !175, line: 560, size: 640, elements: !4289)
!4289 = !{!4290, !4291, !4292}
!4290 = !DIDerivedType(tag: DW_TAG_member, name: "slot", scope: !4288, file: !175, line: 561, baseType: !180, size: 7, flags: DIFlagBitField, extraData: i64 0)
!4291 = !DIDerivedType(tag: DW_TAG_member, name: "exact_match", scope: !4288, file: !175, line: 562, baseType: !180, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!4292 = !DIDerivedType(tag: DW_TAG_member, name: "substr", scope: !4288, file: !175, line: 563, baseType: !4293, size: 632, offset: 8)
!4293 = !DICompositeType(tag: DW_TAG_array_type, baseType: !162, size: 632, elements: !4294)
!4294 = !{!4295}
!4295 = !DISubrange(count: 79)
!4296 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !4278, file: !175, line: 570, baseType: !139, size: 64, offset: 2688)
!4297 = !DIGlobalVariableExpression(var: !4298, expr: !DIExpression())
!4298 = distinct !DIGlobalVariable(name: "atkbd_dell_laptop_forced_release_keys", scope: !2, file: !3, line: 974, type: !4299, isLocal: true, isDefinition: true)
!4299 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 320, elements: !4166)
!4300 = !DIGlobalVariableExpression(var: !4301, expr: !DIExpression())
!4301 = distinct !DIGlobalVariable(name: "atkbd_hp_forced_release_keys", scope: !2, file: !3, line: 982, type: !4302, isLocal: true, isDefinition: true)
!4302 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 64, elements: !1508)
!4303 = !DIGlobalVariableExpression(var: !4304, expr: !DIExpression())
!4304 = distinct !DIGlobalVariable(name: "atkbd_volume_forced_release_keys", scope: !2, file: !3, line: 1018, type: !4305, isLocal: true, isDefinition: true)
!4305 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 96, elements: !299)
!4306 = !DIGlobalVariableExpression(var: !4307, expr: !DIExpression())
!4307 = distinct !DIGlobalVariable(name: "atkbd_samsung_forced_release_keys", scope: !2, file: !3, line: 989, type: !4299, isLocal: true, isDefinition: true)
!4308 = !DIGlobalVariableExpression(var: !4309, expr: !DIExpression())
!4309 = distinct !DIGlobalVariable(name: "atkbd_amilo_pi3525_forced_release_keys", scope: !2, file: !3, line: 996, type: !4310, isLocal: true, isDefinition: true)
!4310 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 224, elements: !4230)
!4311 = !DIGlobalVariableExpression(var: !4312, expr: !DIExpression())
!4312 = distinct !DIGlobalVariable(name: "atkbd_amilo_xi3650_forced_release_keys", scope: !2, file: !3, line: 1003, type: !4313, isLocal: true, isDefinition: true)
!4313 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 288, elements: !3650)
!4314 = !DIGlobalVariableExpression(var: !4315, expr: !DIExpression())
!4315 = distinct !DIGlobalVariable(name: "atkdb_soltech_ta12_forced_release_keys", scope: !2, file: !3, line: 1010, type: !4316, isLocal: true, isDefinition: true)
!4316 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 128, elements: !1096)
!4317 = !{!"rsp"}
!4318 = !{i32 7, !"Dwarf Version", i32 4}
!4319 = !{i32 2, !"Debug Info Version", i32 3}
!4320 = !{i32 1, !"wchar_size", i32 2}
!4321 = !{i32 1, !"Code Model", i32 2}
!4322 = !{!"clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)"}
!4323 = distinct !DISubprogram(name: "atkbd_exit", scope: !3, file: !3, line: 1908, type: !1819, scopeLine: 1909, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!4324 = !DILocation(line: 1910, column: 2, scope: !4323)
!4325 = !DILocation(line: 1911, column: 1, scope: !4323)
!4326 = distinct !DISubprogram(name: "atkbd_init", scope: !3, file: !3, line: 1901, type: !4327, scopeLine: 1902, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!4327 = !DISubroutineType(types: !4328)
!4328 = !{!132}
!4329 = !DILocation(line: 1903, column: 2, scope: !4326)
!4330 = !DILocation(line: 1905, column: 9, scope: !4326)
!4331 = !DILocation(line: 1905, column: 2, scope: !4326)
!4332 = distinct !DISubprogram(name: "atkbd_interrupt", scope: !3, file: !3, line: 409, type: !232, scopeLine: 411, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!4333 = !DILocalVariable(name: "m", arg: 1, scope: !4334, file: !4335, line: 363, type: !2691)
!4334 = distinct !DISubprogram(name: "msecs_to_jiffies", scope: !4335, file: !4335, line: 363, type: !4336, scopeLine: 364, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!4335 = !DIFile(filename: "./include/linux/jiffies.h", directory: "/home/lizy2001/genbc/linux")
!4336 = !DISubroutineType(types: !4337)
!4337 = !{!136, !2691}
!4338 = !DILocation(line: 363, column: 74, scope: !4334, inlinedAt: !4339)
!4339 = distinct !DILocation(line: 547, column: 28, scope: !4340)
!4340 = distinct !DILexicalBlock(scope: !4341, file: !3, line: 544, column: 10)
!4341 = distinct !DILexicalBlock(scope: !4342, file: !3, line: 541, column: 14)
!4342 = distinct !DILexicalBlock(scope: !4343, file: !3, line: 538, column: 7)
!4343 = distinct !DILexicalBlock(scope: !4332, file: !3, line: 502, column: 19)
!4344 = !DILocalVariable(name: "serio", arg: 1, scope: !4332, file: !3, line: 409, type: !155)
!4345 = !DILocation(line: 409, column: 50, scope: !4332)
!4346 = !DILocalVariable(name: "data", arg: 2, scope: !4332, file: !3, line: 409, type: !180)
!4347 = !DILocation(line: 409, column: 71, scope: !4332)
!4348 = !DILocalVariable(name: "flags", arg: 3, scope: !4332, file: !3, line: 410, type: !7)
!4349 = !DILocation(line: 410, column: 21, scope: !4332)
!4350 = !DILocalVariable(name: "atkbd", scope: !4332, file: !3, line: 412, type: !147)
!4351 = !DILocation(line: 412, column: 16, scope: !4332)
!4352 = !DILocation(line: 412, column: 42, scope: !4332)
!4353 = !DILocation(line: 412, column: 24, scope: !4332)
!4354 = !DILocalVariable(name: "dev", scope: !4332, file: !3, line: 413, type: !3682)
!4355 = !DILocation(line: 413, column: 20, scope: !4332)
!4356 = !DILocation(line: 413, column: 26, scope: !4332)
!4357 = !DILocation(line: 413, column: 33, scope: !4332)
!4358 = !DILocalVariable(name: "code", scope: !4332, file: !3, line: 414, type: !7)
!4359 = !DILocation(line: 414, column: 15, scope: !4332)
!4360 = !DILocation(line: 414, column: 22, scope: !4332)
!4361 = !DILocalVariable(name: "scroll", scope: !4332, file: !3, line: 415, type: !132)
!4362 = !DILocation(line: 415, column: 6, scope: !4332)
!4363 = !DILocalVariable(name: "hscroll", scope: !4332, file: !3, line: 415, type: !132)
!4364 = !DILocation(line: 415, column: 18, scope: !4332)
!4365 = !DILocalVariable(name: "click", scope: !4332, file: !3, line: 415, type: !132)
!4366 = !DILocation(line: 415, column: 31, scope: !4332)
!4367 = !DILocalVariable(name: "value", scope: !4332, file: !3, line: 416, type: !132)
!4368 = !DILocation(line: 416, column: 6, scope: !4332)
!4369 = !DILocalVariable(name: "keycode", scope: !4332, file: !3, line: 417, type: !339)
!4370 = !DILocation(line: 417, column: 17, scope: !4332)
!4371 = !DILocation(line: 433, column: 6, scope: !4372)
!4372 = distinct !DILexicalBlock(scope: !4332, file: !3, line: 433, column: 6)
!4373 = !DILocation(line: 433, column: 6, scope: !4332)
!4374 = !DILocation(line: 434, column: 24, scope: !4375)
!4375 = distinct !DILexicalBlock(scope: !4372, file: !3, line: 434, column: 8)
!4376 = !DILocation(line: 434, column: 31, scope: !4375)
!4377 = !DILocation(line: 434, column: 39, scope: !4375)
!4378 = !DILocation(line: 434, column: 8, scope: !4375)
!4379 = !DILocation(line: 434, column: 8, scope: !4372)
!4380 = !DILocation(line: 435, column: 4, scope: !4375)
!4381 = !DILocation(line: 434, column: 43, scope: !4375)
!4382 = !DILocation(line: 437, column: 6, scope: !4383)
!4383 = distinct !DILexicalBlock(scope: !4332, file: !3, line: 437, column: 6)
!4384 = !DILocation(line: 437, column: 6, scope: !4332)
!4385 = !DILocation(line: 438, column: 29, scope: !4386)
!4386 = distinct !DILexicalBlock(scope: !4383, file: !3, line: 438, column: 8)
!4387 = !DILocation(line: 438, column: 36, scope: !4386)
!4388 = !DILocation(line: 438, column: 44, scope: !4386)
!4389 = !DILocation(line: 438, column: 8, scope: !4386)
!4390 = !DILocation(line: 438, column: 8, scope: !4383)
!4391 = !DILocation(line: 439, column: 4, scope: !4386)
!4392 = !DILocation(line: 438, column: 48, scope: !4386)
!4393 = !DILocation(line: 441, column: 19, scope: !4332)
!4394 = !DILocation(line: 441, column: 26, scope: !4332)
!4395 = !DILocation(line: 441, column: 2, scope: !4332)
!4396 = !DILocation(line: 443, column: 7, scope: !4397)
!4397 = distinct !DILexicalBlock(scope: !4332, file: !3, line: 443, column: 6)
!4398 = !DILocation(line: 443, column: 14, scope: !4397)
!4399 = !DILocation(line: 443, column: 6, scope: !4332)
!4400 = !DILocation(line: 444, column: 3, scope: !4397)
!4401 = !DILocation(line: 446, column: 14, scope: !4332)
!4402 = !DILocation(line: 446, column: 36, scope: !4332)
!4403 = !DILocation(line: 446, column: 2, scope: !4332)
!4404 = !DILocation(line: 448, column: 6, scope: !4405)
!4405 = distinct !DILexicalBlock(scope: !4332, file: !3, line: 448, column: 6)
!4406 = !DILocation(line: 448, column: 6, scope: !4332)
!4407 = !DILocation(line: 449, column: 10, scope: !4405)
!4408 = !DILocation(line: 449, column: 40, scope: !4405)
!4409 = !DILocation(line: 449, column: 47, scope: !4405)
!4410 = !DILocation(line: 449, column: 8, scope: !4405)
!4411 = !DILocation(line: 449, column: 3, scope: !4405)
!4412 = !DILocation(line: 451, column: 6, scope: !4413)
!4413 = distinct !DILexicalBlock(scope: !4332, file: !3, line: 451, column: 6)
!4414 = !DILocation(line: 451, column: 13, scope: !4413)
!4415 = !DILocation(line: 451, column: 6, scope: !4332)
!4416 = !DILocation(line: 453, column: 7, scope: !4417)
!4417 = distinct !DILexicalBlock(scope: !4418, file: !3, line: 453, column: 7)
!4418 = distinct !DILexicalBlock(scope: !4413, file: !3, line: 451, column: 25)
!4419 = !DILocation(line: 453, column: 14, scope: !4417)
!4420 = !DILocation(line: 453, column: 19, scope: !4417)
!4421 = !DILocation(line: 453, column: 39, scope: !4417)
!4422 = !DILocation(line: 453, column: 46, scope: !4417)
!4423 = !DILocation(line: 453, column: 54, scope: !4417)
!4424 = !DILocation(line: 453, column: 22, scope: !4417)
!4425 = !DILocation(line: 453, column: 7, scope: !4418)
!4426 = !DILocation(line: 454, column: 21, scope: !4427)
!4427 = distinct !DILexicalBlock(scope: !4417, file: !3, line: 453, column: 61)
!4428 = !DILocation(line: 454, column: 26, scope: !4427)
!4429 = !DILocation(line: 454, column: 4, scope: !4427)
!4430 = !DILocation(line: 454, column: 11, scope: !4427)
!4431 = !DILocation(line: 454, column: 19, scope: !4427)
!4432 = !DILocation(line: 455, column: 9, scope: !4427)
!4433 = !DILocation(line: 456, column: 3, scope: !4427)
!4434 = !DILocation(line: 458, column: 8, scope: !4435)
!4435 = distinct !DILexicalBlock(scope: !4418, file: !3, line: 458, column: 7)
!4436 = !DILocation(line: 458, column: 15, scope: !4435)
!4437 = !DILocation(line: 458, column: 7, scope: !4418)
!4438 = !DILocation(line: 459, column: 27, scope: !4435)
!4439 = !DILocation(line: 459, column: 34, scope: !4435)
!4440 = !DILocation(line: 459, column: 4, scope: !4435)
!4441 = !DILocation(line: 460, column: 2, scope: !4418)
!4442 = !DILocation(line: 462, column: 10, scope: !4332)
!4443 = !DILocation(line: 462, column: 2, scope: !4332)
!4444 = !DILocation(line: 464, column: 3, scope: !4445)
!4445 = distinct !DILexicalBlock(scope: !4332, file: !3, line: 462, column: 16)
!4446 = !DILocation(line: 464, column: 10, scope: !4445)
!4447 = !DILocation(line: 464, column: 18, scope: !4445)
!4448 = !DILocation(line: 465, column: 19, scope: !4445)
!4449 = !DILocation(line: 465, column: 26, scope: !4445)
!4450 = !DILocation(line: 465, column: 33, scope: !4445)
!4451 = !DILocation(line: 465, column: 3, scope: !4445)
!4452 = !DILocation(line: 466, column: 3, scope: !4445)
!4453 = !DILocation(line: 468, column: 3, scope: !4445)
!4454 = !DILocation(line: 468, column: 10, scope: !4445)
!4455 = !DILocation(line: 468, column: 15, scope: !4445)
!4456 = !DILocation(line: 469, column: 3, scope: !4445)
!4457 = !DILocation(line: 471, column: 3, scope: !4445)
!4458 = !DILocation(line: 471, column: 10, scope: !4445)
!4459 = !DILocation(line: 471, column: 15, scope: !4445)
!4460 = !DILocation(line: 472, column: 3, scope: !4445)
!4461 = !DILocation(line: 474, column: 3, scope: !4445)
!4462 = !DILocation(line: 474, column: 10, scope: !4445)
!4463 = !DILocation(line: 474, column: 18, scope: !4445)
!4464 = !DILocation(line: 475, column: 3, scope: !4445)
!4465 = !DILocation(line: 478, column: 7, scope: !4466)
!4466 = distinct !DILexicalBlock(scope: !4445, file: !3, line: 478, column: 7)
!4467 = !DILocation(line: 478, column: 7, scope: !4445)
!4468 = !DILocation(line: 479, column: 4, scope: !4466)
!4469 = !DILocation(line: 483, column: 3, scope: !4445)
!4470 = !DILocation(line: 485, column: 3, scope: !4445)
!4471 = !DILocation(line: 485, column: 10, scope: !4445)
!4472 = !DILocation(line: 485, column: 19, scope: !4445)
!4473 = !DILocation(line: 488, column: 3, scope: !4445)
!4474 = !DILocation(line: 491, column: 31, scope: !4332)
!4475 = !DILocation(line: 491, column: 38, scope: !4332)
!4476 = !DILocation(line: 491, column: 9, scope: !4332)
!4477 = !DILocation(line: 491, column: 7, scope: !4332)
!4478 = !DILocation(line: 493, column: 6, scope: !4479)
!4479 = distinct !DILexicalBlock(scope: !4332, file: !3, line: 493, column: 6)
!4480 = !DILocation(line: 493, column: 13, scope: !4479)
!4481 = !DILocation(line: 493, column: 18, scope: !4479)
!4482 = !DILocation(line: 493, column: 23, scope: !4479)
!4483 = !DILocation(line: 493, column: 30, scope: !4479)
!4484 = !DILocation(line: 493, column: 21, scope: !4479)
!4485 = !DILocation(line: 493, column: 6, scope: !4332)
!4486 = !DILocation(line: 494, column: 3, scope: !4479)
!4487 = !DILocation(line: 496, column: 12, scope: !4332)
!4488 = !DILocation(line: 496, column: 19, scope: !4332)
!4489 = !DILocation(line: 496, column: 27, scope: !4332)
!4490 = !DILocation(line: 496, column: 10, scope: !4332)
!4491 = !DILocation(line: 498, column: 8, scope: !4492)
!4492 = distinct !DILexicalBlock(scope: !4332, file: !3, line: 498, column: 6)
!4493 = !DILocation(line: 498, column: 15, scope: !4492)
!4494 = !DILocation(line: 498, column: 23, scope: !4492)
!4495 = !DILocation(line: 498, column: 35, scope: !4492)
!4496 = !DILocation(line: 498, column: 41, scope: !4492)
!4497 = !DILocation(line: 498, column: 48, scope: !4492)
!4498 = !DILocation(line: 498, column: 26, scope: !4492)
!4499 = !DILocation(line: 498, column: 6, scope: !4332)
!4500 = !DILocation(line: 499, column: 7, scope: !4501)
!4501 = distinct !DILexicalBlock(scope: !4492, file: !3, line: 499, column: 7)
!4502 = !DILocation(line: 499, column: 15, scope: !4501)
!4503 = !DILocation(line: 499, column: 7, scope: !4492)
!4504 = !DILocation(line: 500, column: 16, scope: !4501)
!4505 = !DILocation(line: 500, column: 39, scope: !4501)
!4506 = !DILocation(line: 500, column: 4, scope: !4501)
!4507 = !DILocation(line: 499, column: 18, scope: !4501)
!4508 = !DILocation(line: 502, column: 10, scope: !4332)
!4509 = !DILocation(line: 502, column: 2, scope: !4332)
!4510 = !DILocation(line: 504, column: 3, scope: !4343)
!4511 = !DILocation(line: 506, column: 3, scope: !4343)
!4512 = !DILocation(line: 511, column: 3, scope: !4343)
!4513 = !DILocation(line: 514, column: 14, scope: !4343)
!4514 = !DILocation(line: 514, column: 3, scope: !4343)
!4515 = !DILocation(line: 515, column: 3, scope: !4343)
!4516 = !DILocation(line: 517, column: 10, scope: !4343)
!4517 = !DILocation(line: 518, column: 3, scope: !4343)
!4518 = !DILocation(line: 520, column: 10, scope: !4343)
!4519 = !DILocation(line: 521, column: 3, scope: !4343)
!4520 = !DILocation(line: 523, column: 10, scope: !4343)
!4521 = !DILocation(line: 524, column: 3, scope: !4343)
!4522 = !DILocation(line: 526, column: 10, scope: !4343)
!4523 = !DILocation(line: 527, column: 3, scope: !4343)
!4524 = !DILocation(line: 529, column: 12, scope: !4343)
!4525 = !DILocation(line: 529, column: 19, scope: !4343)
!4526 = !DILocation(line: 529, column: 11, scope: !4343)
!4527 = !DILocation(line: 529, column: 9, scope: !4343)
!4528 = !DILocation(line: 530, column: 3, scope: !4343)
!4529 = !DILocation(line: 532, column: 11, scope: !4343)
!4530 = !DILocation(line: 533, column: 3, scope: !4343)
!4531 = !DILocation(line: 535, column: 11, scope: !4343)
!4532 = !DILocation(line: 536, column: 3, scope: !4343)
!4533 = !DILocation(line: 538, column: 7, scope: !4342)
!4534 = !DILocation(line: 538, column: 14, scope: !4342)
!4535 = !DILocation(line: 538, column: 7, scope: !4343)
!4536 = !DILocation(line: 539, column: 10, scope: !4537)
!4537 = distinct !DILexicalBlock(scope: !4342, file: !3, line: 538, column: 23)
!4538 = !DILocation(line: 540, column: 4, scope: !4537)
!4539 = !DILocation(line: 540, column: 11, scope: !4537)
!4540 = !DILocation(line: 540, column: 16, scope: !4537)
!4541 = !DILocation(line: 541, column: 3, scope: !4537)
!4542 = !DILocation(line: 541, column: 15, scope: !4341)
!4543 = !DILocation(line: 541, column: 22, scope: !4341)
!4544 = !DILocation(line: 541, column: 33, scope: !4341)
!4545 = !DILocation(line: 541, column: 45, scope: !4341)
!4546 = !DILocation(line: 541, column: 54, scope: !4341)
!4547 = !DILocation(line: 541, column: 59, scope: !4341)
!4548 = !DILocation(line: 541, column: 36, scope: !4341)
!4549 = !DILocation(line: 541, column: 14, scope: !4342)
!4550 = !DILocation(line: 543, column: 12, scope: !4551)
!4551 = distinct !DILexicalBlock(scope: !4341, file: !3, line: 541, column: 65)
!4552 = !DILocation(line: 543, column: 46, scope: !4551)
!4553 = !DILocation(line: 543, column: 49, scope: !4551)
!4554 = !DILocation(line: 543, column: 56, scope: !4551)
!4555 = !DILocation(line: 543, column: 64, scope: !4551)
!4556 = !DILocation(line: 543, column: 61, scope: !4551)
!4557 = !DILocation(line: 0, scope: !4551)
!4558 = !DILocation(line: 543, column: 10, scope: !4551)
!4559 = !DILocation(line: 544, column: 3, scope: !4551)
!4560 = !DILocation(line: 545, column: 10, scope: !4340)
!4561 = !DILocation(line: 546, column: 18, scope: !4340)
!4562 = !DILocation(line: 546, column: 4, scope: !4340)
!4563 = !DILocation(line: 546, column: 11, scope: !4340)
!4564 = !DILocation(line: 546, column: 16, scope: !4340)
!4565 = !DILocation(line: 547, column: 18, scope: !4340)
!4566 = !DILocation(line: 547, column: 45, scope: !4340)
!4567 = !DILocation(line: 547, column: 50, scope: !4340)
!4568 = !DILocation(line: 365, column: 27, scope: !4569, inlinedAt: !4339)
!4569 = distinct !DILexicalBlock(scope: !4334, file: !4335, line: 365, column: 6)
!4570 = !DILocation(line: 365, column: 6, scope: !4569, inlinedAt: !4339)
!4571 = !DILocation(line: 365, column: 6, scope: !4334, inlinedAt: !4339)
!4572 = !DILocation(line: 366, column: 12, scope: !4573, inlinedAt: !4339)
!4573 = distinct !DILexicalBlock(scope: !4574, file: !4335, line: 366, column: 7)
!4574 = distinct !DILexicalBlock(scope: !4569, file: !4335, line: 365, column: 31)
!4575 = !DILocation(line: 366, column: 14, scope: !4573, inlinedAt: !4339)
!4576 = !DILocation(line: 366, column: 7, scope: !4574, inlinedAt: !4339)
!4577 = !DILocation(line: 367, column: 4, scope: !4573, inlinedAt: !4339)
!4578 = !DILocation(line: 368, column: 28, scope: !4574, inlinedAt: !4339)
!4579 = !DILocation(line: 368, column: 10, scope: !4574, inlinedAt: !4339)
!4580 = !DILocation(line: 368, column: 3, scope: !4574, inlinedAt: !4339)
!4581 = !DILocation(line: 370, column: 29, scope: !4582, inlinedAt: !4339)
!4582 = distinct !DILexicalBlock(scope: !4569, file: !4335, line: 369, column: 9)
!4583 = !DILocation(line: 370, column: 10, scope: !4582, inlinedAt: !4339)
!4584 = !DILocation(line: 370, column: 3, scope: !4582, inlinedAt: !4339)
!4585 = !DILocation(line: 372, column: 1, scope: !4334, inlinedAt: !4339)
!4586 = !DILocation(line: 547, column: 66, scope: !4340)
!4587 = !DILocation(line: 547, column: 26, scope: !4340)
!4588 = !DILocation(line: 547, column: 4, scope: !4340)
!4589 = !DILocation(line: 547, column: 11, scope: !4340)
!4590 = !DILocation(line: 547, column: 16, scope: !4340)
!4591 = !DILocation(line: 550, column: 15, scope: !4343)
!4592 = !DILocation(line: 550, column: 28, scope: !4343)
!4593 = !DILocation(line: 550, column: 37, scope: !4343)
!4594 = !DILocation(line: 550, column: 3, scope: !4343)
!4595 = !DILocation(line: 551, column: 14, scope: !4343)
!4596 = !DILocation(line: 551, column: 3, scope: !4343)
!4597 = !DILocation(line: 553, column: 7, scope: !4598)
!4598 = distinct !DILexicalBlock(scope: !4343, file: !3, line: 553, column: 7)
!4599 = !DILocation(line: 553, column: 13, scope: !4598)
!4600 = !DILocation(line: 553, column: 25, scope: !4598)
!4601 = !DILocation(line: 553, column: 31, scope: !4598)
!4602 = !DILocation(line: 553, column: 38, scope: !4598)
!4603 = !DILocation(line: 553, column: 16, scope: !4598)
!4604 = !DILocation(line: 553, column: 7, scope: !4343)
!4605 = !DILocation(line: 554, column: 16, scope: !4606)
!4606 = distinct !DILexicalBlock(scope: !4598, file: !3, line: 553, column: 59)
!4607 = !DILocation(line: 554, column: 39, scope: !4606)
!4608 = !DILocation(line: 554, column: 4, scope: !4606)
!4609 = !DILocation(line: 555, column: 21, scope: !4606)
!4610 = !DILocation(line: 555, column: 26, scope: !4606)
!4611 = !DILocation(line: 555, column: 4, scope: !4606)
!4612 = !DILocation(line: 556, column: 15, scope: !4606)
!4613 = !DILocation(line: 556, column: 4, scope: !4606)
!4614 = !DILocation(line: 557, column: 3, scope: !4606)
!4615 = !DILocation(line: 558, column: 2, scope: !4343)
!4616 = !DILocation(line: 560, column: 6, scope: !4617)
!4617 = distinct !DILexicalBlock(scope: !4332, file: !3, line: 560, column: 6)
!4618 = !DILocation(line: 560, column: 13, scope: !4617)
!4619 = !DILocation(line: 560, column: 6, scope: !4332)
!4620 = !DILocation(line: 561, column: 7, scope: !4621)
!4621 = distinct !DILexicalBlock(scope: !4622, file: !3, line: 561, column: 7)
!4622 = distinct !DILexicalBlock(scope: !4617, file: !3, line: 560, column: 21)
!4623 = !DILocation(line: 561, column: 13, scope: !4621)
!4624 = !DILocation(line: 561, column: 7, scope: !4622)
!4625 = !DILocation(line: 562, column: 21, scope: !4621)
!4626 = !DILocation(line: 562, column: 38, scope: !4621)
!4627 = !DILocation(line: 562, column: 4, scope: !4621)
!4628 = !DILocation(line: 563, column: 20, scope: !4622)
!4629 = !DILocation(line: 564, column: 6, scope: !4622)
!4630 = !DILocation(line: 564, column: 13, scope: !4622)
!4631 = !DILocation(line: 564, column: 24, scope: !4622)
!4632 = !DILocation(line: 564, column: 23, scope: !4622)
!4633 = !DILocation(line: 564, column: 33, scope: !4622)
!4634 = !DILocation(line: 563, column: 3, scope: !4622)
!4635 = !DILocation(line: 565, column: 20, scope: !4622)
!4636 = !DILocation(line: 565, column: 37, scope: !4622)
!4637 = !DILocation(line: 565, column: 3, scope: !4622)
!4638 = !DILocation(line: 566, column: 14, scope: !4622)
!4639 = !DILocation(line: 566, column: 3, scope: !4622)
!4640 = !DILocation(line: 567, column: 2, scope: !4622)
!4641 = !DILocation(line: 569, column: 2, scope: !4332)
!4642 = !DILocation(line: 569, column: 9, scope: !4332)
!4643 = !DILocation(line: 569, column: 17, scope: !4332)
!4644 = !DILabel(scope: !4332, name: "out", file: !3, line: 570)
!4645 = !DILocation(line: 570, column: 1, scope: !4332)
!4646 = !DILocation(line: 571, column: 2, scope: !4332)
!4647 = !DILocalVariable(name: "serio", arg: 1, scope: !4212, file: !3, line: 1224, type: !155)
!4648 = !DILocation(line: 1224, column: 40, scope: !4212)
!4649 = !DILocalVariable(name: "drv", arg: 2, scope: !4212, file: !3, line: 1224, type: !219)
!4650 = !DILocation(line: 1224, column: 68, scope: !4212)
!4651 = !DILocalVariable(name: "atkbd", scope: !4212, file: !3, line: 1226, type: !147)
!4652 = !DILocation(line: 1226, column: 16, scope: !4212)
!4653 = !DILocalVariable(name: "dev", scope: !4212, file: !3, line: 1227, type: !3682)
!4654 = !DILocation(line: 1227, column: 20, scope: !4212)
!4655 = !DILocalVariable(name: "err", scope: !4212, file: !3, line: 1228, type: !132)
!4656 = !DILocation(line: 1228, column: 6, scope: !4212)
!4657 = !DILocation(line: 1230, column: 10, scope: !4212)
!4658 = !DILocation(line: 1230, column: 8, scope: !4212)
!4659 = !DILocation(line: 1231, column: 8, scope: !4212)
!4660 = !DILocation(line: 1231, column: 6, scope: !4212)
!4661 = !DILocation(line: 1232, column: 7, scope: !4662)
!4662 = distinct !DILexicalBlock(scope: !4212, file: !3, line: 1232, column: 6)
!4663 = !DILocation(line: 1232, column: 13, scope: !4662)
!4664 = !DILocation(line: 1232, column: 17, scope: !4662)
!4665 = !DILocation(line: 1232, column: 6, scope: !4212)
!4666 = !DILocation(line: 1233, column: 3, scope: !4662)
!4667 = !DILocation(line: 1235, column: 15, scope: !4212)
!4668 = !DILocation(line: 1235, column: 2, scope: !4212)
!4669 = !DILocation(line: 1235, column: 9, scope: !4212)
!4670 = !DILocation(line: 1235, column: 13, scope: !4212)
!4671 = !DILocation(line: 1236, column: 12, scope: !4212)
!4672 = !DILocation(line: 1236, column: 19, scope: !4212)
!4673 = !DILocation(line: 1236, column: 27, scope: !4212)
!4674 = !DILocation(line: 1236, column: 2, scope: !4212)
!4675 = !DILocation(line: 1237, column: 2, scope: !4212)
!4676 = !DILocation(line: 1237, column: 2, scope: !4677)
!4677 = distinct !DILexicalBlock(scope: !4212, file: !3, line: 1237, column: 2)
!4678 = !DILocation(line: 1237, column: 2, scope: !4679)
!4679 = distinct !DILexicalBlock(scope: !4677, file: !3, line: 1237, column: 2)
!4680 = !DILocation(line: 1238, column: 2, scope: !4212)
!4681 = !DILocation(line: 1238, column: 2, scope: !4682)
!4682 = distinct !DILexicalBlock(scope: !4212, file: !3, line: 1238, column: 2)
!4683 = !DILocation(line: 1240, column: 10, scope: !4212)
!4684 = !DILocation(line: 1240, column: 17, scope: !4212)
!4685 = !DILocation(line: 1240, column: 20, scope: !4212)
!4686 = !DILocation(line: 1240, column: 2, scope: !4212)
!4687 = !DILocation(line: 1243, column: 3, scope: !4688)
!4688 = distinct !DILexicalBlock(scope: !4212, file: !3, line: 1240, column: 26)
!4689 = !DILocation(line: 1243, column: 10, scope: !4688)
!4690 = !DILocation(line: 1243, column: 21, scope: !4688)
!4691 = !DILocation(line: 1247, column: 7, scope: !4692)
!4692 = distinct !DILexicalBlock(scope: !4688, file: !3, line: 1247, column: 7)
!4693 = !DILocation(line: 1247, column: 14, scope: !4692)
!4694 = !DILocation(line: 1247, column: 7, scope: !4688)
!4695 = !DILocation(line: 1248, column: 4, scope: !4692)
!4696 = !DILocation(line: 1248, column: 11, scope: !4692)
!4697 = !DILocation(line: 1248, column: 17, scope: !4692)
!4698 = !DILocation(line: 1249, column: 3, scope: !4688)
!4699 = !DILocation(line: 1252, column: 19, scope: !4212)
!4700 = !DILocation(line: 1252, column: 2, scope: !4212)
!4701 = !DILocation(line: 1252, column: 9, scope: !4212)
!4702 = !DILocation(line: 1252, column: 17, scope: !4212)
!4703 = !DILocation(line: 1253, column: 22, scope: !4212)
!4704 = !DILocation(line: 1253, column: 2, scope: !4212)
!4705 = !DILocation(line: 1253, column: 9, scope: !4212)
!4706 = !DILocation(line: 1253, column: 20, scope: !4212)
!4707 = !DILocation(line: 1254, column: 18, scope: !4212)
!4708 = !DILocation(line: 1254, column: 2, scope: !4212)
!4709 = !DILocation(line: 1254, column: 9, scope: !4212)
!4710 = !DILocation(line: 1254, column: 16, scope: !4212)
!4711 = !DILocation(line: 1256, column: 6, scope: !4712)
!4712 = distinct !DILexicalBlock(scope: !4212, file: !3, line: 1256, column: 6)
!4713 = !DILocation(line: 1256, column: 13, scope: !4712)
!4714 = !DILocation(line: 1256, column: 6, scope: !4212)
!4715 = !DILocation(line: 1257, column: 3, scope: !4712)
!4716 = !DILocation(line: 1257, column: 10, scope: !4712)
!4717 = !DILocation(line: 1257, column: 18, scope: !4712)
!4718 = !DILocation(line: 1259, column: 20, scope: !4212)
!4719 = !DILocation(line: 1259, column: 27, scope: !4212)
!4720 = !DILocation(line: 1259, column: 2, scope: !4212)
!4721 = !DILocation(line: 1261, column: 19, scope: !4212)
!4722 = !DILocation(line: 1261, column: 26, scope: !4212)
!4723 = !DILocation(line: 1261, column: 8, scope: !4212)
!4724 = !DILocation(line: 1261, column: 6, scope: !4212)
!4725 = !DILocation(line: 1262, column: 6, scope: !4726)
!4726 = distinct !DILexicalBlock(scope: !4212, file: !3, line: 1262, column: 6)
!4727 = !DILocation(line: 1262, column: 6, scope: !4212)
!4728 = !DILocation(line: 1263, column: 3, scope: !4726)
!4729 = !DILocation(line: 1265, column: 6, scope: !4730)
!4730 = distinct !DILexicalBlock(scope: !4212, file: !3, line: 1265, column: 6)
!4731 = !DILocation(line: 1265, column: 13, scope: !4730)
!4732 = !DILocation(line: 1265, column: 6, scope: !4212)
!4733 = !DILocation(line: 1267, column: 19, scope: !4734)
!4734 = distinct !DILexicalBlock(scope: !4735, file: !3, line: 1267, column: 7)
!4735 = distinct !DILexicalBlock(scope: !4730, file: !3, line: 1265, column: 20)
!4736 = !DILocation(line: 1267, column: 7, scope: !4734)
!4737 = !DILocation(line: 1267, column: 7, scope: !4735)
!4738 = !DILocation(line: 1268, column: 8, scope: !4739)
!4739 = distinct !DILexicalBlock(scope: !4734, file: !3, line: 1267, column: 27)
!4740 = !DILocation(line: 1269, column: 4, scope: !4739)
!4741 = !DILocation(line: 1272, column: 33, scope: !4735)
!4742 = !DILocation(line: 1272, column: 40, scope: !4735)
!4743 = !DILocation(line: 1272, column: 51, scope: !4735)
!4744 = !DILocation(line: 1272, column: 16, scope: !4735)
!4745 = !DILocation(line: 1272, column: 3, scope: !4735)
!4746 = !DILocation(line: 1272, column: 10, scope: !4735)
!4747 = !DILocation(line: 1272, column: 14, scope: !4735)
!4748 = !DILocation(line: 1273, column: 21, scope: !4735)
!4749 = !DILocation(line: 1273, column: 3, scope: !4735)
!4750 = !DILocation(line: 1275, column: 2, scope: !4735)
!4751 = !DILocation(line: 1276, column: 3, scope: !4752)
!4752 = distinct !DILexicalBlock(scope: !4730, file: !3, line: 1275, column: 9)
!4753 = !DILocation(line: 1276, column: 10, scope: !4752)
!4754 = !DILocation(line: 1276, column: 14, scope: !4752)
!4755 = !DILocation(line: 1277, column: 3, scope: !4752)
!4756 = !DILocation(line: 1277, column: 10, scope: !4752)
!4757 = !DILocation(line: 1277, column: 13, scope: !4752)
!4758 = !DILocation(line: 1280, column: 26, scope: !4212)
!4759 = !DILocation(line: 1280, column: 2, scope: !4212)
!4760 = !DILocation(line: 1282, column: 26, scope: !4212)
!4761 = !DILocation(line: 1282, column: 2, scope: !4212)
!4762 = !DILocation(line: 1283, column: 25, scope: !4212)
!4763 = !DILocation(line: 1283, column: 2, scope: !4212)
!4764 = !DILocation(line: 1285, column: 28, scope: !4212)
!4765 = !DILocation(line: 1285, column: 35, scope: !4212)
!4766 = !DILocation(line: 1285, column: 39, scope: !4212)
!4767 = !DILocation(line: 1285, column: 8, scope: !4212)
!4768 = !DILocation(line: 1285, column: 6, scope: !4212)
!4769 = !DILocation(line: 1286, column: 6, scope: !4770)
!4770 = distinct !DILexicalBlock(scope: !4212, file: !3, line: 1286, column: 6)
!4771 = !DILocation(line: 1286, column: 6, scope: !4212)
!4772 = !DILocation(line: 1287, column: 3, scope: !4770)
!4773 = !DILocation(line: 1289, column: 15, scope: !4212)
!4774 = !DILocation(line: 1289, column: 2, scope: !4212)
!4775 = !DILocation(line: 1290, column: 6, scope: !4776)
!4776 = distinct !DILexicalBlock(scope: !4212, file: !3, line: 1290, column: 6)
!4777 = !DILocation(line: 1290, column: 13, scope: !4776)
!4778 = !DILocation(line: 1290, column: 6, scope: !4212)
!4779 = !DILocation(line: 1291, column: 18, scope: !4776)
!4780 = !DILocation(line: 1291, column: 3, scope: !4776)
!4781 = !DILocation(line: 1293, column: 30, scope: !4212)
!4782 = !DILocation(line: 1293, column: 37, scope: !4212)
!4783 = !DILocation(line: 1293, column: 8, scope: !4212)
!4784 = !DILocation(line: 1293, column: 6, scope: !4212)
!4785 = !DILocation(line: 1294, column: 6, scope: !4786)
!4786 = distinct !DILexicalBlock(scope: !4212, file: !3, line: 1294, column: 6)
!4787 = !DILocation(line: 1294, column: 6, scope: !4212)
!4788 = !DILocation(line: 1295, column: 3, scope: !4786)
!4789 = !DILocation(line: 1297, column: 2, scope: !4212)
!4790 = !DILabel(scope: !4212, name: "fail4", file: !3, line: 1299)
!4791 = !DILocation(line: 1299, column: 2, scope: !4212)
!4792 = !DILocation(line: 1299, column: 29, scope: !4212)
!4793 = !DILocation(line: 1299, column: 36, scope: !4212)
!4794 = !DILocation(line: 1299, column: 40, scope: !4212)
!4795 = !DILocation(line: 1299, column: 9, scope: !4212)
!4796 = !DILabel(scope: !4212, name: "fail3", file: !3, line: 1300)
!4797 = !DILocation(line: 1300, column: 2, scope: !4212)
!4798 = !DILocation(line: 1300, column: 21, scope: !4212)
!4799 = !DILocation(line: 1300, column: 9, scope: !4212)
!4800 = !DILabel(scope: !4212, name: "fail2", file: !3, line: 1301)
!4801 = !DILocation(line: 1301, column: 2, scope: !4212)
!4802 = !DILocation(line: 1301, column: 27, scope: !4212)
!4803 = !DILocation(line: 1301, column: 9, scope: !4212)
!4804 = !DILabel(scope: !4212, name: "fail1", file: !3, line: 1302)
!4805 = !DILocation(line: 1302, column: 2, scope: !4212)
!4806 = !DILocation(line: 1302, column: 27, scope: !4212)
!4807 = !DILocation(line: 1302, column: 9, scope: !4212)
!4808 = !DILocation(line: 1303, column: 8, scope: !4212)
!4809 = !DILocation(line: 1303, column: 2, scope: !4212)
!4810 = !DILocation(line: 1304, column: 9, scope: !4212)
!4811 = !DILocation(line: 1304, column: 2, scope: !4212)
!4812 = !DILocation(line: 1305, column: 1, scope: !4212)
!4813 = distinct !DISubprogram(name: "atkbd_reconnect", scope: !3, file: !3, line: 1312, type: !206, scopeLine: 1313, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!4814 = !DILocalVariable(name: "serio", arg: 1, scope: !4813, file: !3, line: 1312, type: !155)
!4815 = !DILocation(line: 1312, column: 42, scope: !4813)
!4816 = !DILocalVariable(name: "atkbd", scope: !4813, file: !3, line: 1314, type: !147)
!4817 = !DILocation(line: 1314, column: 16, scope: !4813)
!4818 = !DILocation(line: 1314, column: 42, scope: !4813)
!4819 = !DILocation(line: 1314, column: 24, scope: !4813)
!4820 = !DILocalVariable(name: "drv", scope: !4813, file: !3, line: 1315, type: !219)
!4821 = !DILocation(line: 1315, column: 23, scope: !4813)
!4822 = !DILocation(line: 1315, column: 29, scope: !4813)
!4823 = !DILocation(line: 1315, column: 36, scope: !4813)
!4824 = !DILocalVariable(name: "retval", scope: !4813, file: !3, line: 1316, type: !132)
!4825 = !DILocation(line: 1316, column: 6, scope: !4813)
!4826 = !DILocation(line: 1318, column: 7, scope: !4827)
!4827 = distinct !DILexicalBlock(scope: !4813, file: !3, line: 1318, column: 6)
!4828 = !DILocation(line: 1318, column: 13, scope: !4827)
!4829 = !DILocation(line: 1318, column: 17, scope: !4827)
!4830 = !DILocation(line: 1318, column: 6, scope: !4813)
!4831 = !DILocation(line: 1321, column: 3, scope: !4832)
!4832 = distinct !DILexicalBlock(scope: !4827, file: !3, line: 1318, column: 22)
!4833 = !DILocation(line: 1324, column: 14, scope: !4813)
!4834 = !DILocation(line: 1324, column: 21, scope: !4813)
!4835 = !DILocation(line: 1324, column: 2, scope: !4813)
!4836 = !DILocation(line: 1326, column: 16, scope: !4813)
!4837 = !DILocation(line: 1326, column: 2, scope: !4813)
!4838 = !DILocation(line: 1328, column: 6, scope: !4839)
!4839 = distinct !DILexicalBlock(scope: !4813, file: !3, line: 1328, column: 6)
!4840 = !DILocation(line: 1328, column: 13, scope: !4839)
!4841 = !DILocation(line: 1328, column: 6, scope: !4813)
!4842 = !DILocation(line: 1329, column: 19, scope: !4843)
!4843 = distinct !DILexicalBlock(scope: !4844, file: !3, line: 1329, column: 7)
!4844 = distinct !DILexicalBlock(scope: !4839, file: !3, line: 1328, column: 20)
!4845 = !DILocation(line: 1329, column: 7, scope: !4843)
!4846 = !DILocation(line: 1329, column: 7, scope: !4844)
!4847 = !DILocation(line: 1330, column: 4, scope: !4843)
!4848 = !DILocation(line: 1332, column: 7, scope: !4849)
!4849 = distinct !DILexicalBlock(scope: !4844, file: !3, line: 1332, column: 7)
!4850 = !DILocation(line: 1332, column: 14, scope: !4849)
!4851 = !DILocation(line: 1332, column: 38, scope: !4849)
!4852 = !DILocation(line: 1332, column: 45, scope: !4849)
!4853 = !DILocation(line: 1332, column: 52, scope: !4849)
!4854 = !DILocation(line: 1332, column: 57, scope: !4849)
!4855 = !DILocation(line: 1332, column: 64, scope: !4849)
!4856 = !DILocation(line: 1332, column: 21, scope: !4849)
!4857 = !DILocation(line: 1332, column: 18, scope: !4849)
!4858 = !DILocation(line: 1332, column: 7, scope: !4844)
!4859 = !DILocation(line: 1333, column: 4, scope: !4849)
!4860 = !DILocation(line: 1342, column: 18, scope: !4844)
!4861 = !DILocation(line: 1342, column: 3, scope: !4844)
!4862 = !DILocation(line: 1343, column: 8, scope: !4863)
!4863 = distinct !DILexicalBlock(scope: !4844, file: !3, line: 1343, column: 7)
!4864 = !DILocation(line: 1343, column: 15, scope: !4863)
!4865 = !DILocation(line: 1343, column: 7, scope: !4844)
!4866 = !DILocation(line: 1344, column: 26, scope: !4863)
!4867 = !DILocation(line: 1344, column: 4, scope: !4863)
!4868 = !DILocation(line: 1346, column: 2, scope: !4844)
!4869 = !DILocation(line: 1352, column: 2, scope: !4813)
!4870 = !DILocation(line: 1352, column: 9, scope: !4813)
!4871 = !DILocation(line: 1352, column: 16, scope: !4813)
!4872 = !DILocation(line: 1353, column: 2, scope: !4813)
!4873 = !DILocation(line: 1353, column: 9, scope: !4813)
!4874 = !DILocation(line: 1353, column: 14, scope: !4813)
!4875 = !DILocation(line: 1355, column: 15, scope: !4813)
!4876 = !DILocation(line: 1355, column: 2, scope: !4813)
!4877 = !DILocation(line: 1356, column: 6, scope: !4878)
!4878 = distinct !DILexicalBlock(scope: !4813, file: !3, line: 1356, column: 6)
!4879 = !DILocation(line: 1356, column: 13, scope: !4878)
!4880 = !DILocation(line: 1356, column: 6, scope: !4813)
!4881 = !DILocation(line: 1357, column: 18, scope: !4878)
!4882 = !DILocation(line: 1357, column: 3, scope: !4878)
!4883 = !DILocation(line: 1359, column: 9, scope: !4813)
!4884 = !DILocation(line: 1359, column: 2, scope: !4813)
!4885 = !DILabel(scope: !4813, name: "out", file: !3, line: 1361)
!4886 = !DILocation(line: 1361, column: 2, scope: !4813)
!4887 = !DILocation(line: 1362, column: 16, scope: !4813)
!4888 = !DILocation(line: 1362, column: 23, scope: !4813)
!4889 = !DILocation(line: 1362, column: 2, scope: !4813)
!4890 = !DILocation(line: 1363, column: 9, scope: !4813)
!4891 = !DILocation(line: 1363, column: 2, scope: !4813)
!4892 = !DILocation(line: 1364, column: 1, scope: !4813)
!4893 = distinct !DISubprogram(name: "atkbd_disconnect", scope: !3, file: !3, line: 933, type: !210, scopeLine: 934, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!4894 = !DILocalVariable(name: "serio", arg: 1, scope: !4893, file: !3, line: 933, type: !155)
!4895 = !DILocation(line: 933, column: 44, scope: !4893)
!4896 = !DILocalVariable(name: "atkbd", scope: !4893, file: !3, line: 935, type: !147)
!4897 = !DILocation(line: 935, column: 16, scope: !4893)
!4898 = !DILocation(line: 935, column: 42, scope: !4893)
!4899 = !DILocation(line: 935, column: 24, scope: !4893)
!4900 = !DILocation(line: 937, column: 22, scope: !4893)
!4901 = !DILocation(line: 937, column: 29, scope: !4893)
!4902 = !DILocation(line: 937, column: 33, scope: !4893)
!4903 = !DILocation(line: 937, column: 2, scope: !4893)
!4904 = !DILocation(line: 939, column: 16, scope: !4893)
!4905 = !DILocation(line: 939, column: 2, scope: !4893)
!4906 = !DILocation(line: 941, column: 26, scope: !4893)
!4907 = !DILocation(line: 941, column: 33, scope: !4893)
!4908 = !DILocation(line: 941, column: 2, scope: !4893)
!4909 = !DILocation(line: 949, column: 28, scope: !4893)
!4910 = !DILocation(line: 949, column: 35, scope: !4893)
!4911 = !DILocation(line: 949, column: 2, scope: !4893)
!4912 = !DILocation(line: 951, column: 14, scope: !4893)
!4913 = !DILocation(line: 951, column: 2, scope: !4893)
!4914 = !DILocation(line: 952, column: 20, scope: !4893)
!4915 = !DILocation(line: 952, column: 2, scope: !4893)
!4916 = !DILocation(line: 953, column: 8, scope: !4893)
!4917 = !DILocation(line: 953, column: 2, scope: !4893)
!4918 = !DILocation(line: 954, column: 1, scope: !4893)
!4919 = distinct !DISubprogram(name: "atkbd_cleanup", scope: !3, file: !3, line: 920, type: !210, scopeLine: 921, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!4920 = !DILocalVariable(name: "serio", arg: 1, scope: !4919, file: !3, line: 920, type: !155)
!4921 = !DILocation(line: 920, column: 41, scope: !4919)
!4922 = !DILocalVariable(name: "atkbd", scope: !4919, file: !3, line: 922, type: !147)
!4923 = !DILocation(line: 922, column: 16, scope: !4919)
!4924 = !DILocation(line: 922, column: 42, scope: !4919)
!4925 = !DILocation(line: 922, column: 24, scope: !4919)
!4926 = !DILocation(line: 924, column: 16, scope: !4919)
!4927 = !DILocation(line: 924, column: 2, scope: !4919)
!4928 = !DILocation(line: 925, column: 15, scope: !4919)
!4929 = !DILocation(line: 925, column: 22, scope: !4919)
!4930 = !DILocation(line: 925, column: 2, scope: !4919)
!4931 = !DILocation(line: 926, column: 1, scope: !4919)
!4932 = distinct !DISubprogram(name: "serio_get_drvdata", scope: !157, file: !157, line: 140, type: !4933, scopeLine: 141, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!4933 = !DISubroutineType(types: !4934)
!4934 = !{!139, !155}
!4935 = !DILocalVariable(name: "serio", arg: 1, scope: !4932, file: !157, line: 140, type: !155)
!4936 = !DILocation(line: 140, column: 53, scope: !4932)
!4937 = !DILocation(line: 142, column: 26, scope: !4932)
!4938 = !DILocation(line: 142, column: 33, scope: !4932)
!4939 = !DILocation(line: 142, column: 9, scope: !4932)
!4940 = !DILocation(line: 142, column: 2, scope: !4932)
!4941 = distinct !DISubprogram(name: "pm_wakeup_event", scope: !3334, file: !3334, line: 200, type: !4942, scopeLine: 201, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!4942 = !DISubroutineType(types: !4943)
!4943 = !{null, !255, !7}
!4944 = !DILocalVariable(name: "dev", arg: 1, scope: !4941, file: !3334, line: 200, type: !255)
!4945 = !DILocation(line: 200, column: 51, scope: !4941)
!4946 = !DILocalVariable(name: "msec", arg: 2, scope: !4941, file: !3334, line: 200, type: !7)
!4947 = !DILocation(line: 200, column: 69, scope: !4941)
!4948 = !DILocation(line: 202, column: 29, scope: !4941)
!4949 = !DILocation(line: 202, column: 34, scope: !4941)
!4950 = !DILocation(line: 202, column: 9, scope: !4941)
!4951 = !DILocation(line: 202, column: 2, scope: !4941)
!4952 = distinct !DISubprogram(name: "atkbd_need_xlate", scope: !3, file: !3, line: 352, type: !4953, scopeLine: 353, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!4953 = !DISubroutineType(types: !4954)
!4954 = !{!171, !136, !180}
!4955 = !DILocalVariable(name: "xl_bit", arg: 1, scope: !4952, file: !3, line: 352, type: !136)
!4956 = !DILocation(line: 352, column: 44, scope: !4952)
!4957 = !DILocalVariable(name: "code", arg: 2, scope: !4952, file: !3, line: 352, type: !180)
!4958 = !DILocation(line: 352, column: 66, scope: !4952)
!4959 = !DILocalVariable(name: "i", scope: !4952, file: !3, line: 354, type: !132)
!4960 = !DILocation(line: 354, column: 6, scope: !4952)
!4961 = !DILocation(line: 356, column: 6, scope: !4962)
!4962 = distinct !DILexicalBlock(scope: !4952, file: !3, line: 356, column: 6)
!4963 = !DILocation(line: 356, column: 11, scope: !4962)
!4964 = !DILocation(line: 356, column: 30, scope: !4962)
!4965 = !DILocation(line: 356, column: 33, scope: !4962)
!4966 = !DILocation(line: 356, column: 38, scope: !4962)
!4967 = !DILocation(line: 356, column: 6, scope: !4952)
!4968 = !DILocation(line: 357, column: 3, scope: !4962)
!4969 = !DILocation(line: 359, column: 9, scope: !4970)
!4970 = distinct !DILexicalBlock(scope: !4952, file: !3, line: 359, column: 2)
!4971 = !DILocation(line: 359, column: 7, scope: !4970)
!4972 = !DILocation(line: 359, column: 14, scope: !4973)
!4973 = distinct !DILexicalBlock(scope: !4970, file: !3, line: 359, column: 2)
!4974 = !DILocation(line: 359, column: 16, scope: !4973)
!4975 = !DILocation(line: 359, column: 2, scope: !4970)
!4976 = !DILocation(line: 360, column: 7, scope: !4977)
!4977 = distinct !DILexicalBlock(scope: !4973, file: !3, line: 360, column: 7)
!4978 = !DILocation(line: 360, column: 24, scope: !4977)
!4979 = !DILocation(line: 360, column: 15, scope: !4977)
!4980 = !DILocation(line: 360, column: 12, scope: !4977)
!4981 = !DILocation(line: 360, column: 7, scope: !4973)
!4982 = !DILocation(line: 361, column: 20, scope: !4977)
!4983 = !DILocation(line: 361, column: 11, scope: !4977)
!4984 = !DILocation(line: 361, column: 4, scope: !4977)
!4985 = !DILocation(line: 360, column: 25, scope: !4977)
!4986 = !DILocation(line: 359, column: 41, scope: !4973)
!4987 = !DILocation(line: 359, column: 2, scope: !4973)
!4988 = distinct !{!4988, !4975, !4989}
!4989 = !DILocation(line: 361, column: 30, scope: !4970)
!4990 = !DILocation(line: 363, column: 2, scope: !4952)
!4991 = !DILocation(line: 364, column: 1, scope: !4952)
!4992 = distinct !DISubprogram(name: "atkbd_calculate_xl_bit", scope: !3, file: !3, line: 371, type: !4993, scopeLine: 372, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!4993 = !DISubroutineType(types: !4994)
!4994 = !{null, !147, !180}
!4995 = !DILocalVariable(name: "atkbd", arg: 1, scope: !4992, file: !3, line: 371, type: !147)
!4996 = !DILocation(line: 371, column: 50, scope: !4992)
!4997 = !DILocalVariable(name: "code", arg: 2, scope: !4992, file: !3, line: 371, type: !180)
!4998 = !DILocation(line: 371, column: 71, scope: !4992)
!4999 = !DILocalVariable(name: "i", scope: !4992, file: !3, line: 373, type: !132)
!5000 = !DILocation(line: 373, column: 6, scope: !4992)
!5001 = !DILocation(line: 375, column: 9, scope: !5002)
!5002 = distinct !DILexicalBlock(scope: !4992, file: !3, line: 375, column: 2)
!5003 = !DILocation(line: 375, column: 7, scope: !5002)
!5004 = !DILocation(line: 375, column: 14, scope: !5005)
!5005 = distinct !DILexicalBlock(scope: !5002, file: !3, line: 375, column: 2)
!5006 = !DILocation(line: 375, column: 16, scope: !5005)
!5007 = !DILocation(line: 375, column: 2, scope: !5002)
!5008 = !DILocation(line: 376, column: 10, scope: !5009)
!5009 = distinct !DILexicalBlock(scope: !5010, file: !3, line: 376, column: 7)
!5010 = distinct !DILexicalBlock(scope: !5005, file: !3, line: 375, column: 45)
!5011 = !DILocation(line: 376, column: 26, scope: !5009)
!5012 = !DILocation(line: 376, column: 17, scope: !5009)
!5013 = !DILocation(line: 376, column: 15, scope: !5009)
!5014 = !DILocation(line: 376, column: 30, scope: !5009)
!5015 = !DILocation(line: 376, column: 7, scope: !5010)
!5016 = !DILocation(line: 377, column: 8, scope: !5017)
!5017 = distinct !DILexicalBlock(scope: !5018, file: !3, line: 377, column: 8)
!5018 = distinct !DILexicalBlock(scope: !5009, file: !3, line: 376, column: 39)
!5019 = !DILocation(line: 377, column: 13, scope: !5017)
!5020 = !DILocation(line: 377, column: 8, scope: !5018)
!5021 = !DILocation(line: 378, column: 17, scope: !5017)
!5022 = !DILocation(line: 378, column: 21, scope: !5017)
!5023 = !DILocation(line: 378, column: 28, scope: !5017)
!5024 = !DILocation(line: 378, column: 5, scope: !5017)
!5025 = !DILocation(line: 380, column: 15, scope: !5017)
!5026 = !DILocation(line: 380, column: 19, scope: !5017)
!5027 = !DILocation(line: 380, column: 26, scope: !5017)
!5028 = !DILocation(line: 380, column: 5, scope: !5017)
!5029 = !DILocation(line: 381, column: 4, scope: !5018)
!5030 = !DILocation(line: 383, column: 2, scope: !5010)
!5031 = !DILocation(line: 375, column: 41, scope: !5005)
!5032 = !DILocation(line: 375, column: 2, scope: !5005)
!5033 = distinct !{!5033, !5007, !5034}
!5034 = !DILocation(line: 383, column: 2, scope: !5002)
!5035 = !DILocation(line: 384, column: 1, scope: !4992)
!5036 = distinct !DISubprogram(name: "atkbd_compat_scancode", scope: !3, file: !3, line: 390, type: !4205, scopeLine: 391, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!5037 = !DILocalVariable(name: "atkbd", arg: 1, scope: !5036, file: !3, line: 390, type: !147)
!5038 = !DILocation(line: 390, column: 57, scope: !5036)
!5039 = !DILocalVariable(name: "code", arg: 2, scope: !5036, file: !3, line: 390, type: !7)
!5040 = !DILocation(line: 390, column: 77, scope: !5036)
!5041 = !DILocation(line: 392, column: 6, scope: !5042)
!5042 = distinct !DILexicalBlock(scope: !5036, file: !3, line: 392, column: 6)
!5043 = !DILocation(line: 392, column: 13, scope: !5042)
!5044 = !DILocation(line: 392, column: 17, scope: !5042)
!5045 = !DILocation(line: 392, column: 6, scope: !5036)
!5046 = !DILocation(line: 393, column: 7, scope: !5047)
!5047 = distinct !DILexicalBlock(scope: !5048, file: !3, line: 393, column: 7)
!5048 = distinct !DILexicalBlock(scope: !5042, file: !3, line: 392, column: 23)
!5049 = !DILocation(line: 393, column: 14, scope: !5047)
!5050 = !DILocation(line: 393, column: 19, scope: !5047)
!5051 = !DILocation(line: 393, column: 7, scope: !5048)
!5052 = !DILocation(line: 394, column: 9, scope: !5047)
!5053 = !DILocation(line: 394, column: 4, scope: !5047)
!5054 = !DILocation(line: 395, column: 9, scope: !5048)
!5055 = !DILocation(line: 396, column: 11, scope: !5056)
!5056 = distinct !DILexicalBlock(scope: !5042, file: !3, line: 395, column: 16)
!5057 = !DILocation(line: 396, column: 16, scope: !5056)
!5058 = !DILocation(line: 396, column: 28, scope: !5056)
!5059 = !DILocation(line: 396, column: 33, scope: !5056)
!5060 = !DILocation(line: 396, column: 41, scope: !5056)
!5061 = !DILocation(line: 396, column: 24, scope: !5056)
!5062 = !DILocation(line: 396, column: 8, scope: !5056)
!5063 = !DILocation(line: 397, column: 7, scope: !5064)
!5064 = distinct !DILexicalBlock(scope: !5056, file: !3, line: 397, column: 7)
!5065 = !DILocation(line: 397, column: 14, scope: !5064)
!5066 = !DILocation(line: 397, column: 19, scope: !5064)
!5067 = !DILocation(line: 397, column: 7, scope: !5056)
!5068 = !DILocation(line: 398, column: 9, scope: !5064)
!5069 = !DILocation(line: 398, column: 4, scope: !5064)
!5070 = !DILocation(line: 401, column: 9, scope: !5036)
!5071 = !DILocation(line: 401, column: 2, scope: !5036)
!5072 = distinct !DISubprogram(name: "test_bit", scope: !5073, file: !5073, line: 132, type: !5074, scopeLine: 133, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!5073 = !DIFile(filename: "./include/asm-generic/bitops/instrumented-non-atomic.h", directory: "/home/lizy2001/genbc/linux")
!5074 = !DISubroutineType(types: !5075)
!5075 = !{!171, !93, !5076}
!5076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5077, size: 64)
!5077 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5078)
!5078 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !136)
!5079 = !DILocalVariable(name: "nr", arg: 1, scope: !5080, file: !5081, line: 210, type: !93)
!5080 = distinct !DISubprogram(name: "variable_test_bit", scope: !5081, file: !5081, line: 210, type: !5074, scopeLine: 211, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!5081 = !DIFile(filename: "./arch/x86/include/asm/bitops.h", directory: "/home/lizy2001/genbc/linux")
!5082 = !DILocation(line: 210, column: 52, scope: !5080, inlinedAt: !5083)
!5083 = distinct !DILocation(line: 135, column: 9, scope: !5072)
!5084 = !DILocalVariable(name: "addr", arg: 2, scope: !5080, file: !5081, line: 210, type: !5076)
!5085 = !DILocation(line: 210, column: 86, scope: !5080, inlinedAt: !5083)
!5086 = !DILocalVariable(name: "oldbit", scope: !5080, file: !5081, line: 212, type: !171)
!5087 = !DILocation(line: 212, column: 7, scope: !5080, inlinedAt: !5083)
!5088 = !DILocalVariable(name: "nr", arg: 1, scope: !5089, file: !5081, line: 204, type: !93)
!5089 = distinct !DISubprogram(name: "constant_test_bit", scope: !5081, file: !5081, line: 204, type: !5074, scopeLine: 205, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!5090 = !DILocation(line: 204, column: 52, scope: !5089, inlinedAt: !5091)
!5091 = distinct !DILocation(line: 135, column: 9, scope: !5072)
!5092 = !DILocalVariable(name: "addr", arg: 2, scope: !5089, file: !5081, line: 204, type: !5076)
!5093 = !DILocation(line: 204, column: 86, scope: !5089, inlinedAt: !5091)
!5094 = !DILocalVariable(name: "v", arg: 1, scope: !5095, file: !5096, line: 69, type: !5099)
!5095 = distinct !DISubprogram(name: "instrument_atomic_read", scope: !5096, file: !5096, line: 69, type: !5097, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!5096 = !DIFile(filename: "./include/linux/instrumented.h", directory: "/home/lizy2001/genbc/linux")
!5097 = !DISubroutineType(types: !5098)
!5098 = !{null, !5099, !344}
!5099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5100, size: 64)
!5100 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5101)
!5101 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: null)
!5102 = !DILocation(line: 69, column: 73, scope: !5095, inlinedAt: !5103)
!5103 = distinct !DILocation(line: 134, column: 2, scope: !5072)
!5104 = !DILocalVariable(name: "size", arg: 2, scope: !5095, file: !5096, line: 69, type: !344)
!5105 = !DILocation(line: 69, column: 83, scope: !5095, inlinedAt: !5103)
!5106 = !DILocalVariable(name: "nr", arg: 1, scope: !5072, file: !5073, line: 132, type: !93)
!5107 = !DILocation(line: 132, column: 34, scope: !5072)
!5108 = !DILocalVariable(name: "addr", arg: 2, scope: !5072, file: !5073, line: 132, type: !5076)
!5109 = !DILocation(line: 132, column: 68, scope: !5072)
!5110 = !DILocation(line: 134, column: 25, scope: !5072)
!5111 = !DILocation(line: 134, column: 32, scope: !5072)
!5112 = !DILocation(line: 134, column: 30, scope: !5072)
!5113 = !DILocation(line: 71, column: 19, scope: !5095, inlinedAt: !5103)
!5114 = !DILocation(line: 71, column: 22, scope: !5095, inlinedAt: !5103)
!5115 = !DILocation(line: 71, column: 2, scope: !5095, inlinedAt: !5103)
!5116 = !DILocation(line: 72, column: 2, scope: !5095, inlinedAt: !5103)
!5117 = !DILocation(line: 135, column: 9, scope: !5072)
!5118 = !DILocation(line: 206, column: 19, scope: !5089, inlinedAt: !5091)
!5119 = !DILocation(line: 206, column: 22, scope: !5089, inlinedAt: !5091)
!5120 = !DILocation(line: 206, column: 15, scope: !5089, inlinedAt: !5091)
!5121 = !DILocation(line: 207, column: 4, scope: !5089, inlinedAt: !5091)
!5122 = !DILocation(line: 207, column: 9, scope: !5089, inlinedAt: !5091)
!5123 = !DILocation(line: 207, column: 12, scope: !5089, inlinedAt: !5091)
!5124 = !DILocation(line: 206, column: 44, scope: !5089, inlinedAt: !5091)
!5125 = !DILocation(line: 207, column: 37, scope: !5089, inlinedAt: !5091)
!5126 = !DILocation(line: 217, column: 33, scope: !5080, inlinedAt: !5083)
!5127 = !DILocation(line: 217, column: 46, scope: !5080, inlinedAt: !5083)
!5128 = !DILocation(line: 214, column: 2, scope: !5080, inlinedAt: !5083)
!5129 = !{i32 -2147153537, i32 -2147153477}
!5130 = !DILocation(line: 219, column: 9, scope: !5080, inlinedAt: !5083)
!5131 = !DILocation(line: 135, column: 2, scope: !5072)
!5132 = distinct !DISubprogram(name: "input_sync", scope: !3684, file: !3684, line: 440, type: !3857, scopeLine: 441, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!5133 = !DILocalVariable(name: "dev", arg: 1, scope: !5132, file: !3684, line: 440, type: !3682)
!5134 = !DILocation(line: 440, column: 49, scope: !5132)
!5135 = !DILocation(line: 442, column: 14, scope: !5132)
!5136 = !DILocation(line: 442, column: 2, scope: !5132)
!5137 = !DILocation(line: 443, column: 1, scope: !5132)
!5138 = distinct !DISubprogram(name: "input_report_key", scope: !3684, file: !3684, line: 415, type: !5139, scopeLine: 416, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!5139 = !DISubroutineType(types: !5140)
!5140 = !{null, !3682, !7, !132}
!5141 = !DILocalVariable(name: "dev", arg: 1, scope: !5138, file: !3684, line: 415, type: !3682)
!5142 = !DILocation(line: 415, column: 55, scope: !5138)
!5143 = !DILocalVariable(name: "code", arg: 2, scope: !5138, file: !3684, line: 415, type: !7)
!5144 = !DILocation(line: 415, column: 73, scope: !5138)
!5145 = !DILocalVariable(name: "value", arg: 3, scope: !5138, file: !3684, line: 415, type: !132)
!5146 = !DILocation(line: 415, column: 83, scope: !5138)
!5147 = !DILocation(line: 417, column: 14, scope: !5138)
!5148 = !DILocation(line: 417, column: 27, scope: !5138)
!5149 = !DILocation(line: 417, column: 35, scope: !5138)
!5150 = !DILocation(line: 417, column: 34, scope: !5138)
!5151 = !DILocation(line: 417, column: 33, scope: !5138)
!5152 = !DILocation(line: 417, column: 2, scope: !5138)
!5153 = !DILocation(line: 418, column: 1, scope: !5138)
!5154 = distinct !DISubprogram(name: "input_report_rel", scope: !3684, file: !3684, line: 420, type: !5139, scopeLine: 421, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!5155 = !DILocalVariable(name: "dev", arg: 1, scope: !5154, file: !3684, line: 420, type: !3682)
!5156 = !DILocation(line: 420, column: 55, scope: !5154)
!5157 = !DILocalVariable(name: "code", arg: 2, scope: !5154, file: !3684, line: 420, type: !7)
!5158 = !DILocation(line: 420, column: 73, scope: !5154)
!5159 = !DILocalVariable(name: "value", arg: 3, scope: !5154, file: !3684, line: 420, type: !132)
!5160 = !DILocation(line: 420, column: 83, scope: !5154)
!5161 = !DILocation(line: 422, column: 14, scope: !5154)
!5162 = !DILocation(line: 422, column: 27, scope: !5154)
!5163 = !DILocation(line: 422, column: 33, scope: !5154)
!5164 = !DILocation(line: 422, column: 2, scope: !5154)
!5165 = !DILocation(line: 423, column: 1, scope: !5154)
!5166 = distinct !DISubprogram(name: "dev_get_drvdata", scope: !60, file: !60, line: 655, type: !5167, scopeLine: 656, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!5167 = !DISubroutineType(types: !5168)
!5168 = !{!139, !3490}
!5169 = !DILocalVariable(name: "dev", arg: 1, scope: !5166, file: !60, line: 655, type: !3490)
!5170 = !DILocation(line: 655, column: 58, scope: !5166)
!5171 = !DILocation(line: 657, column: 9, scope: !5166)
!5172 = !DILocation(line: 657, column: 14, scope: !5166)
!5173 = !DILocation(line: 657, column: 2, scope: !5166)
!5174 = distinct !DISubprogram(name: "__clear_bit", scope: !5073, file: !5073, line: 40, type: !5175, scopeLine: 41, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!5175 = !DISubroutineType(types: !5176)
!5176 = !{null, !93, !5177}
!5177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5078, size: 64)
!5178 = !DILocalVariable(name: "nr", arg: 1, scope: !5179, file: !5081, line: 92, type: !93)
!5179 = distinct !DISubprogram(name: "arch___clear_bit", scope: !5081, file: !5081, line: 92, type: !5175, scopeLine: 93, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!5180 = !DILocation(line: 92, column: 23, scope: !5179, inlinedAt: !5181)
!5181 = distinct !DILocation(line: 43, column: 2, scope: !5174)
!5182 = !DILocalVariable(name: "addr", arg: 2, scope: !5179, file: !5081, line: 92, type: !5177)
!5183 = !DILocation(line: 92, column: 51, scope: !5179, inlinedAt: !5181)
!5184 = !DILocalVariable(name: "v", arg: 1, scope: !5185, file: !5096, line: 39, type: !5099)
!5185 = distinct !DISubprogram(name: "instrument_write", scope: !5096, file: !5096, line: 39, type: !5097, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!5186 = !DILocation(line: 39, column: 67, scope: !5185, inlinedAt: !5187)
!5187 = distinct !DILocation(line: 42, column: 2, scope: !5174)
!5188 = !DILocalVariable(name: "size", arg: 2, scope: !5185, file: !5096, line: 39, type: !344)
!5189 = !DILocation(line: 39, column: 77, scope: !5185, inlinedAt: !5187)
!5190 = !DILocalVariable(name: "nr", arg: 1, scope: !5174, file: !5073, line: 40, type: !93)
!5191 = !DILocation(line: 40, column: 37, scope: !5174)
!5192 = !DILocalVariable(name: "addr", arg: 2, scope: !5174, file: !5073, line: 40, type: !5177)
!5193 = !DILocation(line: 40, column: 65, scope: !5174)
!5194 = !DILocation(line: 42, column: 19, scope: !5174)
!5195 = !DILocation(line: 42, column: 26, scope: !5174)
!5196 = !DILocation(line: 42, column: 24, scope: !5174)
!5197 = !DILocation(line: 41, column: 20, scope: !5185, inlinedAt: !5187)
!5198 = !DILocation(line: 41, column: 23, scope: !5185, inlinedAt: !5187)
!5199 = !DILocation(line: 41, column: 2, scope: !5185, inlinedAt: !5187)
!5200 = !DILocation(line: 42, column: 2, scope: !5185, inlinedAt: !5187)
!5201 = !DILocation(line: 43, column: 19, scope: !5174)
!5202 = !DILocation(line: 43, column: 23, scope: !5174)
!5203 = !DILocation(line: 94, column: 44, scope: !5179, inlinedAt: !5181)
!5204 = !DILocation(line: 94, column: 56, scope: !5179, inlinedAt: !5181)
!5205 = !DILocation(line: 94, column: 2, scope: !5179, inlinedAt: !5181)
!5206 = !{i32 -2147160950}
!5207 = !DILocation(line: 44, column: 1, scope: !5174)
!5208 = distinct !DISubprogram(name: "__set_bit", scope: !5073, file: !5073, line: 25, type: !5175, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!5209 = !DILocalVariable(name: "nr", arg: 1, scope: !5210, file: !5081, line: 66, type: !93)
!5210 = distinct !DISubprogram(name: "arch___set_bit", scope: !5081, file: !5081, line: 66, type: !5175, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!5211 = !DILocation(line: 66, column: 21, scope: !5210, inlinedAt: !5212)
!5212 = distinct !DILocation(line: 28, column: 2, scope: !5208)
!5213 = !DILocalVariable(name: "addr", arg: 2, scope: !5210, file: !5081, line: 66, type: !5177)
!5214 = !DILocation(line: 66, column: 49, scope: !5210, inlinedAt: !5212)
!5215 = !DILocation(line: 39, column: 67, scope: !5185, inlinedAt: !5216)
!5216 = distinct !DILocation(line: 27, column: 2, scope: !5208)
!5217 = !DILocation(line: 39, column: 77, scope: !5185, inlinedAt: !5216)
!5218 = !DILocalVariable(name: "nr", arg: 1, scope: !5208, file: !5073, line: 25, type: !93)
!5219 = !DILocation(line: 25, column: 35, scope: !5208)
!5220 = !DILocalVariable(name: "addr", arg: 2, scope: !5208, file: !5073, line: 25, type: !5177)
!5221 = !DILocation(line: 25, column: 63, scope: !5208)
!5222 = !DILocation(line: 27, column: 19, scope: !5208)
!5223 = !DILocation(line: 27, column: 26, scope: !5208)
!5224 = !DILocation(line: 27, column: 24, scope: !5208)
!5225 = !DILocation(line: 41, column: 20, scope: !5185, inlinedAt: !5216)
!5226 = !DILocation(line: 41, column: 23, scope: !5185, inlinedAt: !5216)
!5227 = !DILocation(line: 41, column: 2, scope: !5185, inlinedAt: !5216)
!5228 = !DILocation(line: 42, column: 2, scope: !5185, inlinedAt: !5216)
!5229 = !DILocation(line: 28, column: 17, scope: !5208)
!5230 = !DILocation(line: 28, column: 21, scope: !5208)
!5231 = !DILocation(line: 68, column: 44, scope: !5210, inlinedAt: !5212)
!5232 = !DILocation(line: 68, column: 56, scope: !5210, inlinedAt: !5212)
!5233 = !DILocation(line: 68, column: 2, scope: !5210, inlinedAt: !5212)
!5234 = !{i32 -2147162149}
!5235 = !DILocation(line: 29, column: 1, scope: !5208)
!5236 = distinct !DISubprogram(name: "kasan_check_write", scope: !5237, file: !5237, line: 38, type: !5238, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!5237 = !DIFile(filename: "./include/linux/kasan-checks.h", directory: "/home/lizy2001/genbc/linux")
!5238 = !DISubroutineType(types: !5239)
!5239 = !{!171, !5099, !7}
!5240 = !DILocalVariable(name: "p", arg: 1, scope: !5236, file: !5237, line: 38, type: !5099)
!5241 = !DILocation(line: 38, column: 59, scope: !5236)
!5242 = !DILocalVariable(name: "size", arg: 2, scope: !5236, file: !5237, line: 38, type: !7)
!5243 = !DILocation(line: 38, column: 75, scope: !5236)
!5244 = !DILocation(line: 40, column: 2, scope: !5236)
!5245 = distinct !DISubprogram(name: "kcsan_check_access", scope: !5246, file: !5246, line: 178, type: !5247, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!5246 = !DIFile(filename: "./include/linux/kcsan-checks.h", directory: "/home/lizy2001/genbc/linux")
!5247 = !DISubroutineType(types: !5248)
!5248 = !{null, !5099, !344, !132}
!5249 = !DILocalVariable(name: "ptr", arg: 1, scope: !5245, file: !5246, line: 178, type: !5099)
!5250 = !DILocation(line: 178, column: 60, scope: !5245)
!5251 = !DILocalVariable(name: "size", arg: 2, scope: !5245, file: !5246, line: 178, type: !344)
!5252 = !DILocation(line: 178, column: 72, scope: !5245)
!5253 = !DILocalVariable(name: "type", arg: 3, scope: !5245, file: !5246, line: 179, type: !132)
!5254 = !DILocation(line: 179, column: 15, scope: !5245)
!5255 = !DILocation(line: 179, column: 23, scope: !5245)
!5256 = distinct !DISubprogram(name: "kasan_check_read", scope: !5237, file: !5237, line: 34, type: !5238, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!5257 = !DILocalVariable(name: "p", arg: 1, scope: !5256, file: !5237, line: 34, type: !5099)
!5258 = !DILocation(line: 34, column: 58, scope: !5256)
!5259 = !DILocalVariable(name: "size", arg: 2, scope: !5256, file: !5237, line: 34, type: !7)
!5260 = !DILocation(line: 34, column: 74, scope: !5256)
!5261 = !DILocation(line: 36, column: 2, scope: !5256)
!5262 = distinct !DISubprogram(name: "_msecs_to_jiffies", scope: !4335, file: !4335, line: 308, type: !4336, scopeLine: 309, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!5263 = !DILocalVariable(name: "m", arg: 1, scope: !5262, file: !4335, line: 308, type: !2691)
!5264 = !DILocation(line: 308, column: 66, scope: !5262)
!5265 = !DILocation(line: 310, column: 10, scope: !5262)
!5266 = !DILocation(line: 310, column: 12, scope: !5262)
!5267 = !DILocation(line: 310, column: 34, scope: !5262)
!5268 = !DILocation(line: 310, column: 39, scope: !5262)
!5269 = !DILocation(line: 310, column: 2, scope: !5262)
!5270 = distinct !DISubprogram(name: "kzalloc", scope: !125, file: !125, line: 662, type: !5271, scopeLine: 663, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!5271 = !DISubroutineType(types: !5272)
!5272 = !{!139, !344, !137}
!5273 = !DILocalVariable(name: "s", arg: 1, scope: !5274, file: !125, line: 445, type: !956)
!5274 = distinct !DISubprogram(name: "kmem_cache_alloc_trace", scope: !125, file: !125, line: 445, type: !5275, scopeLine: 447, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!5275 = !DISubroutineType(types: !5276)
!5276 = !{!139, !956, !137, !344}
!5277 = !DILocation(line: 445, column: 72, scope: !5274, inlinedAt: !5278)
!5278 = distinct !DILocation(line: 552, column: 10, scope: !5279, inlinedAt: !5282)
!5279 = distinct !DILexicalBlock(scope: !5280, file: !125, line: 540, column: 34)
!5280 = distinct !DILexicalBlock(scope: !5281, file: !125, line: 540, column: 6)
!5281 = distinct !DISubprogram(name: "kmalloc", scope: !125, file: !125, line: 538, type: !5271, scopeLine: 539, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!5282 = distinct !DILocation(line: 664, column: 9, scope: !5270)
!5283 = !DILocalVariable(name: "flags", arg: 2, scope: !5274, file: !125, line: 446, type: !137)
!5284 = !DILocation(line: 446, column: 9, scope: !5274, inlinedAt: !5278)
!5285 = !DILocalVariable(name: "size", arg: 3, scope: !5274, file: !125, line: 446, type: !344)
!5286 = !DILocation(line: 446, column: 23, scope: !5274, inlinedAt: !5278)
!5287 = !DILocalVariable(name: "ret", scope: !5274, file: !125, line: 448, type: !139)
!5288 = !DILocation(line: 448, column: 8, scope: !5274, inlinedAt: !5278)
!5289 = !DILocalVariable(name: "flags", arg: 1, scope: !5290, file: !125, line: 318, type: !137)
!5290 = distinct !DISubprogram(name: "kmalloc_type", scope: !125, file: !125, line: 318, type: !5291, scopeLine: 319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!5291 = !DISubroutineType(types: !5292)
!5292 = !{!124, !137}
!5293 = !DILocation(line: 318, column: 67, scope: !5290, inlinedAt: !5294)
!5294 = distinct !DILocation(line: 553, column: 20, scope: !5279, inlinedAt: !5282)
!5295 = !DILocalVariable(name: "size", arg: 1, scope: !5296, file: !125, line: 346, type: !344)
!5296 = distinct !DISubprogram(name: "kmalloc_index", scope: !125, file: !125, line: 346, type: !5297, scopeLine: 347, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!5297 = !DISubroutineType(types: !5298)
!5298 = !{!7, !344}
!5299 = !DILocation(line: 346, column: 58, scope: !5296, inlinedAt: !5300)
!5300 = distinct !DILocation(line: 547, column: 11, scope: !5279, inlinedAt: !5282)
!5301 = !DILocalVariable(name: "size", arg: 1, scope: !5302, file: !125, line: 472, type: !344)
!5302 = distinct !DISubprogram(name: "kmalloc_order_trace", scope: !125, file: !125, line: 472, type: !5303, scopeLine: 473, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!5303 = !DISubroutineType(types: !5304)
!5304 = !{!139, !344, !137, !7}
!5305 = !DILocation(line: 472, column: 28, scope: !5302, inlinedAt: !5306)
!5306 = distinct !DILocation(line: 481, column: 9, scope: !5307, inlinedAt: !5308)
!5307 = distinct !DISubprogram(name: "kmalloc_large", scope: !125, file: !125, line: 478, type: !5271, scopeLine: 479, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!5308 = distinct !DILocation(line: 545, column: 11, scope: !5309, inlinedAt: !5282)
!5309 = distinct !DILexicalBlock(scope: !5279, file: !125, line: 544, column: 7)
!5310 = !DILocalVariable(name: "flags", arg: 2, scope: !5302, file: !125, line: 472, type: !137)
!5311 = !DILocation(line: 472, column: 40, scope: !5302, inlinedAt: !5306)
!5312 = !DILocalVariable(name: "order", arg: 3, scope: !5302, file: !125, line: 472, type: !7)
!5313 = !DILocation(line: 472, column: 60, scope: !5302, inlinedAt: !5306)
!5314 = !DILocalVariable(name: "size", arg: 1, scope: !5307, file: !125, line: 478, type: !344)
!5315 = !DILocation(line: 478, column: 51, scope: !5307, inlinedAt: !5308)
!5316 = !DILocalVariable(name: "flags", arg: 2, scope: !5307, file: !125, line: 478, type: !137)
!5317 = !DILocation(line: 478, column: 63, scope: !5307, inlinedAt: !5308)
!5318 = !DILocalVariable(name: "order", scope: !5307, file: !125, line: 480, type: !7)
!5319 = !DILocation(line: 480, column: 15, scope: !5307, inlinedAt: !5308)
!5320 = !DILocalVariable(name: "size", arg: 1, scope: !5281, file: !125, line: 538, type: !344)
!5321 = !DILocation(line: 538, column: 45, scope: !5281, inlinedAt: !5282)
!5322 = !DILocalVariable(name: "flags", arg: 2, scope: !5281, file: !125, line: 538, type: !137)
!5323 = !DILocation(line: 538, column: 57, scope: !5281, inlinedAt: !5282)
!5324 = !DILocalVariable(name: "index", scope: !5279, file: !125, line: 542, type: !7)
!5325 = !DILocation(line: 542, column: 16, scope: !5279, inlinedAt: !5282)
!5326 = !DILocalVariable(name: "size", arg: 1, scope: !5270, file: !125, line: 662, type: !344)
!5327 = !DILocation(line: 662, column: 36, scope: !5270)
!5328 = !DILocalVariable(name: "flags", arg: 2, scope: !5270, file: !125, line: 662, type: !137)
!5329 = !DILocation(line: 662, column: 48, scope: !5270)
!5330 = !DILocation(line: 664, column: 17, scope: !5270)
!5331 = !DILocation(line: 664, column: 23, scope: !5270)
!5332 = !DILocation(line: 664, column: 29, scope: !5270)
!5333 = !DILocation(line: 540, column: 27, scope: !5280, inlinedAt: !5282)
!5334 = !DILocation(line: 540, column: 6, scope: !5280, inlinedAt: !5282)
!5335 = !DILocation(line: 540, column: 6, scope: !5281, inlinedAt: !5282)
!5336 = !DILocation(line: 544, column: 7, scope: !5309, inlinedAt: !5282)
!5337 = !DILocation(line: 544, column: 12, scope: !5309, inlinedAt: !5282)
!5338 = !DILocation(line: 544, column: 7, scope: !5279, inlinedAt: !5282)
!5339 = !DILocation(line: 545, column: 25, scope: !5309, inlinedAt: !5282)
!5340 = !DILocation(line: 545, column: 31, scope: !5309, inlinedAt: !5282)
!5341 = !DILocation(line: 480, column: 33, scope: !5307, inlinedAt: !5308)
!5342 = !DILocation(line: 480, column: 23, scope: !5307, inlinedAt: !5308)
!5343 = !DILocation(line: 481, column: 29, scope: !5307, inlinedAt: !5308)
!5344 = !DILocation(line: 481, column: 35, scope: !5307, inlinedAt: !5308)
!5345 = !DILocation(line: 481, column: 42, scope: !5307, inlinedAt: !5308)
!5346 = !DILocation(line: 474, column: 23, scope: !5302, inlinedAt: !5306)
!5347 = !DILocation(line: 474, column: 29, scope: !5302, inlinedAt: !5306)
!5348 = !DILocation(line: 474, column: 36, scope: !5302, inlinedAt: !5306)
!5349 = !DILocation(line: 474, column: 9, scope: !5302, inlinedAt: !5306)
!5350 = !DILocation(line: 545, column: 4, scope: !5309, inlinedAt: !5282)
!5351 = !DILocation(line: 547, column: 25, scope: !5279, inlinedAt: !5282)
!5352 = !DILocation(line: 348, column: 7, scope: !5353, inlinedAt: !5300)
!5353 = distinct !DILexicalBlock(scope: !5296, file: !125, line: 348, column: 6)
!5354 = !DILocation(line: 348, column: 6, scope: !5296, inlinedAt: !5300)
!5355 = !DILocation(line: 349, column: 3, scope: !5353, inlinedAt: !5300)
!5356 = !DILocation(line: 351, column: 6, scope: !5357, inlinedAt: !5300)
!5357 = distinct !DILexicalBlock(scope: !5296, file: !125, line: 351, column: 6)
!5358 = !DILocation(line: 351, column: 11, scope: !5357, inlinedAt: !5300)
!5359 = !DILocation(line: 351, column: 6, scope: !5296, inlinedAt: !5300)
!5360 = !DILocation(line: 352, column: 3, scope: !5357, inlinedAt: !5300)
!5361 = !DILocation(line: 354, column: 32, scope: !5362, inlinedAt: !5300)
!5362 = distinct !DILexicalBlock(scope: !5296, file: !125, line: 354, column: 6)
!5363 = !DILocation(line: 354, column: 37, scope: !5362, inlinedAt: !5300)
!5364 = !DILocation(line: 354, column: 42, scope: !5362, inlinedAt: !5300)
!5365 = !DILocation(line: 354, column: 45, scope: !5362, inlinedAt: !5300)
!5366 = !DILocation(line: 354, column: 50, scope: !5362, inlinedAt: !5300)
!5367 = !DILocation(line: 354, column: 6, scope: !5296, inlinedAt: !5300)
!5368 = !DILocation(line: 355, column: 3, scope: !5362, inlinedAt: !5300)
!5369 = !DILocation(line: 356, column: 32, scope: !5370, inlinedAt: !5300)
!5370 = distinct !DILexicalBlock(scope: !5296, file: !125, line: 356, column: 6)
!5371 = !DILocation(line: 356, column: 37, scope: !5370, inlinedAt: !5300)
!5372 = !DILocation(line: 356, column: 43, scope: !5370, inlinedAt: !5300)
!5373 = !DILocation(line: 356, column: 46, scope: !5370, inlinedAt: !5300)
!5374 = !DILocation(line: 356, column: 51, scope: !5370, inlinedAt: !5300)
!5375 = !DILocation(line: 356, column: 6, scope: !5296, inlinedAt: !5300)
!5376 = !DILocation(line: 357, column: 3, scope: !5370, inlinedAt: !5300)
!5377 = !DILocation(line: 358, column: 6, scope: !5378, inlinedAt: !5300)
!5378 = distinct !DILexicalBlock(scope: !5296, file: !125, line: 358, column: 6)
!5379 = !DILocation(line: 358, column: 11, scope: !5378, inlinedAt: !5300)
!5380 = !DILocation(line: 358, column: 6, scope: !5296, inlinedAt: !5300)
!5381 = !DILocation(line: 358, column: 26, scope: !5378, inlinedAt: !5300)
!5382 = !DILocation(line: 359, column: 6, scope: !5383, inlinedAt: !5300)
!5383 = distinct !DILexicalBlock(scope: !5296, file: !125, line: 359, column: 6)
!5384 = !DILocation(line: 359, column: 11, scope: !5383, inlinedAt: !5300)
!5385 = !DILocation(line: 359, column: 6, scope: !5296, inlinedAt: !5300)
!5386 = !DILocation(line: 359, column: 26, scope: !5383, inlinedAt: !5300)
!5387 = !DILocation(line: 360, column: 6, scope: !5388, inlinedAt: !5300)
!5388 = distinct !DILexicalBlock(scope: !5296, file: !125, line: 360, column: 6)
!5389 = !DILocation(line: 360, column: 11, scope: !5388, inlinedAt: !5300)
!5390 = !DILocation(line: 360, column: 6, scope: !5296, inlinedAt: !5300)
!5391 = !DILocation(line: 360, column: 26, scope: !5388, inlinedAt: !5300)
!5392 = !DILocation(line: 361, column: 6, scope: !5393, inlinedAt: !5300)
!5393 = distinct !DILexicalBlock(scope: !5296, file: !125, line: 361, column: 6)
!5394 = !DILocation(line: 361, column: 11, scope: !5393, inlinedAt: !5300)
!5395 = !DILocation(line: 361, column: 6, scope: !5296, inlinedAt: !5300)
!5396 = !DILocation(line: 361, column: 26, scope: !5393, inlinedAt: !5300)
!5397 = !DILocation(line: 362, column: 6, scope: !5398, inlinedAt: !5300)
!5398 = distinct !DILexicalBlock(scope: !5296, file: !125, line: 362, column: 6)
!5399 = !DILocation(line: 362, column: 11, scope: !5398, inlinedAt: !5300)
!5400 = !DILocation(line: 362, column: 6, scope: !5296, inlinedAt: !5300)
!5401 = !DILocation(line: 362, column: 26, scope: !5398, inlinedAt: !5300)
!5402 = !DILocation(line: 363, column: 6, scope: !5403, inlinedAt: !5300)
!5403 = distinct !DILexicalBlock(scope: !5296, file: !125, line: 363, column: 6)
!5404 = !DILocation(line: 363, column: 11, scope: !5403, inlinedAt: !5300)
!5405 = !DILocation(line: 363, column: 6, scope: !5296, inlinedAt: !5300)
!5406 = !DILocation(line: 363, column: 26, scope: !5403, inlinedAt: !5300)
!5407 = !DILocation(line: 364, column: 6, scope: !5408, inlinedAt: !5300)
!5408 = distinct !DILexicalBlock(scope: !5296, file: !125, line: 364, column: 6)
!5409 = !DILocation(line: 364, column: 11, scope: !5408, inlinedAt: !5300)
!5410 = !DILocation(line: 364, column: 6, scope: !5296, inlinedAt: !5300)
!5411 = !DILocation(line: 364, column: 26, scope: !5408, inlinedAt: !5300)
!5412 = !DILocation(line: 365, column: 6, scope: !5413, inlinedAt: !5300)
!5413 = distinct !DILexicalBlock(scope: !5296, file: !125, line: 365, column: 6)
!5414 = !DILocation(line: 365, column: 11, scope: !5413, inlinedAt: !5300)
!5415 = !DILocation(line: 365, column: 6, scope: !5296, inlinedAt: !5300)
!5416 = !DILocation(line: 365, column: 26, scope: !5413, inlinedAt: !5300)
!5417 = !DILocation(line: 366, column: 6, scope: !5418, inlinedAt: !5300)
!5418 = distinct !DILexicalBlock(scope: !5296, file: !125, line: 366, column: 6)
!5419 = !DILocation(line: 366, column: 11, scope: !5418, inlinedAt: !5300)
!5420 = !DILocation(line: 366, column: 6, scope: !5296, inlinedAt: !5300)
!5421 = !DILocation(line: 366, column: 26, scope: !5418, inlinedAt: !5300)
!5422 = !DILocation(line: 367, column: 6, scope: !5423, inlinedAt: !5300)
!5423 = distinct !DILexicalBlock(scope: !5296, file: !125, line: 367, column: 6)
!5424 = !DILocation(line: 367, column: 11, scope: !5423, inlinedAt: !5300)
!5425 = !DILocation(line: 367, column: 6, scope: !5296, inlinedAt: !5300)
!5426 = !DILocation(line: 367, column: 26, scope: !5423, inlinedAt: !5300)
!5427 = !DILocation(line: 368, column: 6, scope: !5428, inlinedAt: !5300)
!5428 = distinct !DILexicalBlock(scope: !5296, file: !125, line: 368, column: 6)
!5429 = !DILocation(line: 368, column: 11, scope: !5428, inlinedAt: !5300)
!5430 = !DILocation(line: 368, column: 6, scope: !5296, inlinedAt: !5300)
!5431 = !DILocation(line: 368, column: 26, scope: !5428, inlinedAt: !5300)
!5432 = !DILocation(line: 369, column: 6, scope: !5433, inlinedAt: !5300)
!5433 = distinct !DILexicalBlock(scope: !5296, file: !125, line: 369, column: 6)
!5434 = !DILocation(line: 369, column: 11, scope: !5433, inlinedAt: !5300)
!5435 = !DILocation(line: 369, column: 6, scope: !5296, inlinedAt: !5300)
!5436 = !DILocation(line: 369, column: 26, scope: !5433, inlinedAt: !5300)
!5437 = !DILocation(line: 370, column: 6, scope: !5438, inlinedAt: !5300)
!5438 = distinct !DILexicalBlock(scope: !5296, file: !125, line: 370, column: 6)
!5439 = !DILocation(line: 370, column: 11, scope: !5438, inlinedAt: !5300)
!5440 = !DILocation(line: 370, column: 6, scope: !5296, inlinedAt: !5300)
!5441 = !DILocation(line: 370, column: 26, scope: !5438, inlinedAt: !5300)
!5442 = !DILocation(line: 371, column: 6, scope: !5443, inlinedAt: !5300)
!5443 = distinct !DILexicalBlock(scope: !5296, file: !125, line: 371, column: 6)
!5444 = !DILocation(line: 371, column: 11, scope: !5443, inlinedAt: !5300)
!5445 = !DILocation(line: 371, column: 6, scope: !5296, inlinedAt: !5300)
!5446 = !DILocation(line: 371, column: 26, scope: !5443, inlinedAt: !5300)
!5447 = !DILocation(line: 372, column: 6, scope: !5448, inlinedAt: !5300)
!5448 = distinct !DILexicalBlock(scope: !5296, file: !125, line: 372, column: 6)
!5449 = !DILocation(line: 372, column: 11, scope: !5448, inlinedAt: !5300)
!5450 = !DILocation(line: 372, column: 6, scope: !5296, inlinedAt: !5300)
!5451 = !DILocation(line: 372, column: 26, scope: !5448, inlinedAt: !5300)
!5452 = !DILocation(line: 373, column: 6, scope: !5453, inlinedAt: !5300)
!5453 = distinct !DILexicalBlock(scope: !5296, file: !125, line: 373, column: 6)
!5454 = !DILocation(line: 373, column: 11, scope: !5453, inlinedAt: !5300)
!5455 = !DILocation(line: 373, column: 6, scope: !5296, inlinedAt: !5300)
!5456 = !DILocation(line: 373, column: 26, scope: !5453, inlinedAt: !5300)
!5457 = !DILocation(line: 374, column: 6, scope: !5458, inlinedAt: !5300)
!5458 = distinct !DILexicalBlock(scope: !5296, file: !125, line: 374, column: 6)
!5459 = !DILocation(line: 374, column: 11, scope: !5458, inlinedAt: !5300)
!5460 = !DILocation(line: 374, column: 6, scope: !5296, inlinedAt: !5300)
!5461 = !DILocation(line: 374, column: 26, scope: !5458, inlinedAt: !5300)
!5462 = !DILocation(line: 375, column: 6, scope: !5463, inlinedAt: !5300)
!5463 = distinct !DILexicalBlock(scope: !5296, file: !125, line: 375, column: 6)
!5464 = !DILocation(line: 375, column: 11, scope: !5463, inlinedAt: !5300)
!5465 = !DILocation(line: 375, column: 6, scope: !5296, inlinedAt: !5300)
!5466 = !DILocation(line: 375, column: 27, scope: !5463, inlinedAt: !5300)
!5467 = !DILocation(line: 376, column: 6, scope: !5468, inlinedAt: !5300)
!5468 = distinct !DILexicalBlock(scope: !5296, file: !125, line: 376, column: 6)
!5469 = !DILocation(line: 376, column: 11, scope: !5468, inlinedAt: !5300)
!5470 = !DILocation(line: 376, column: 6, scope: !5296, inlinedAt: !5300)
!5471 = !DILocation(line: 376, column: 32, scope: !5468, inlinedAt: !5300)
!5472 = !DILocation(line: 377, column: 6, scope: !5473, inlinedAt: !5300)
!5473 = distinct !DILexicalBlock(scope: !5296, file: !125, line: 377, column: 6)
!5474 = !DILocation(line: 377, column: 11, scope: !5473, inlinedAt: !5300)
!5475 = !DILocation(line: 377, column: 6, scope: !5296, inlinedAt: !5300)
!5476 = !DILocation(line: 377, column: 32, scope: !5473, inlinedAt: !5300)
!5477 = !DILocation(line: 378, column: 6, scope: !5478, inlinedAt: !5300)
!5478 = distinct !DILexicalBlock(scope: !5296, file: !125, line: 378, column: 6)
!5479 = !DILocation(line: 378, column: 11, scope: !5478, inlinedAt: !5300)
!5480 = !DILocation(line: 378, column: 6, scope: !5296, inlinedAt: !5300)
!5481 = !DILocation(line: 378, column: 32, scope: !5478, inlinedAt: !5300)
!5482 = !DILocation(line: 379, column: 6, scope: !5483, inlinedAt: !5300)
!5483 = distinct !DILexicalBlock(scope: !5296, file: !125, line: 379, column: 6)
!5484 = !DILocation(line: 379, column: 11, scope: !5483, inlinedAt: !5300)
!5485 = !DILocation(line: 379, column: 6, scope: !5296, inlinedAt: !5300)
!5486 = !DILocation(line: 379, column: 33, scope: !5483, inlinedAt: !5300)
!5487 = !DILocation(line: 380, column: 6, scope: !5488, inlinedAt: !5300)
!5488 = distinct !DILexicalBlock(scope: !5296, file: !125, line: 380, column: 6)
!5489 = !DILocation(line: 380, column: 11, scope: !5488, inlinedAt: !5300)
!5490 = !DILocation(line: 380, column: 6, scope: !5296, inlinedAt: !5300)
!5491 = !DILocation(line: 380, column: 33, scope: !5488, inlinedAt: !5300)
!5492 = !DILocation(line: 381, column: 6, scope: !5493, inlinedAt: !5300)
!5493 = distinct !DILexicalBlock(scope: !5296, file: !125, line: 381, column: 6)
!5494 = !DILocation(line: 381, column: 11, scope: !5493, inlinedAt: !5300)
!5495 = !DILocation(line: 381, column: 6, scope: !5296, inlinedAt: !5300)
!5496 = !DILocation(line: 381, column: 33, scope: !5493, inlinedAt: !5300)
!5497 = !DILocation(line: 382, column: 2, scope: !5498, inlinedAt: !5300)
!5498 = distinct !DILexicalBlock(scope: !5499, file: !125, line: 382, column: 2)
!5499 = distinct !DILexicalBlock(scope: !5296, file: !125, line: 382, column: 2)
!5500 = !{i32 -2144194967, i32 -2144194938, i32 -2144194892, i32 -2144194834, i32 -2144194780, i32 -2144194726, i32 -2144194671, i32 -2144194640}
!5501 = !DILocation(line: 382, column: 2, scope: !5502, inlinedAt: !5300)
!5502 = distinct !DILexicalBlock(scope: !5503, file: !125, line: 382, column: 2)
!5503 = distinct !DILexicalBlock(scope: !5499, file: !125, line: 382, column: 2)
!5504 = !{i32 -2144194197, i32 -2144194190, i32 -2144194136, i32 -2144194105, i32 -2144194075}
!5505 = !DILocation(line: 382, column: 2, scope: !5503, inlinedAt: !5300)
!5506 = !DILocation(line: 386, column: 1, scope: !5296, inlinedAt: !5300)
!5507 = !DILocation(line: 547, column: 9, scope: !5279, inlinedAt: !5282)
!5508 = !DILocation(line: 549, column: 8, scope: !5509, inlinedAt: !5282)
!5509 = distinct !DILexicalBlock(scope: !5279, file: !125, line: 549, column: 7)
!5510 = !DILocation(line: 549, column: 7, scope: !5279, inlinedAt: !5282)
!5511 = !DILocation(line: 550, column: 4, scope: !5509, inlinedAt: !5282)
!5512 = !DILocation(line: 553, column: 33, scope: !5279, inlinedAt: !5282)
!5513 = !DILocation(line: 325, column: 6, scope: !5514, inlinedAt: !5294)
!5514 = distinct !DILexicalBlock(scope: !5290, file: !125, line: 325, column: 6)
!5515 = !DILocation(line: 325, column: 6, scope: !5290, inlinedAt: !5294)
!5516 = !DILocation(line: 326, column: 3, scope: !5514, inlinedAt: !5294)
!5517 = !DILocation(line: 332, column: 9, scope: !5290, inlinedAt: !5294)
!5518 = !DILocation(line: 332, column: 15, scope: !5290, inlinedAt: !5294)
!5519 = !DILocation(line: 332, column: 2, scope: !5290, inlinedAt: !5294)
!5520 = !DILocation(line: 336, column: 1, scope: !5290, inlinedAt: !5294)
!5521 = !DILocation(line: 553, column: 5, scope: !5279, inlinedAt: !5282)
!5522 = !DILocation(line: 553, column: 41, scope: !5279, inlinedAt: !5282)
!5523 = !DILocation(line: 554, column: 5, scope: !5279, inlinedAt: !5282)
!5524 = !DILocation(line: 554, column: 12, scope: !5279, inlinedAt: !5282)
!5525 = !DILocation(line: 448, column: 31, scope: !5274, inlinedAt: !5278)
!5526 = !DILocation(line: 448, column: 34, scope: !5274, inlinedAt: !5278)
!5527 = !DILocation(line: 448, column: 14, scope: !5274, inlinedAt: !5278)
!5528 = !DILocation(line: 450, column: 22, scope: !5274, inlinedAt: !5278)
!5529 = !DILocation(line: 450, column: 25, scope: !5274, inlinedAt: !5278)
!5530 = !DILocation(line: 450, column: 30, scope: !5274, inlinedAt: !5278)
!5531 = !DILocation(line: 450, column: 36, scope: !5274, inlinedAt: !5278)
!5532 = !DILocation(line: 450, column: 8, scope: !5274, inlinedAt: !5278)
!5533 = !DILocation(line: 450, column: 6, scope: !5274, inlinedAt: !5278)
!5534 = !DILocation(line: 451, column: 9, scope: !5274, inlinedAt: !5278)
!5535 = !DILocation(line: 552, column: 3, scope: !5279, inlinedAt: !5282)
!5536 = !DILocation(line: 557, column: 19, scope: !5281, inlinedAt: !5282)
!5537 = !DILocation(line: 557, column: 25, scope: !5281, inlinedAt: !5282)
!5538 = !DILocation(line: 557, column: 9, scope: !5281, inlinedAt: !5282)
!5539 = !DILocation(line: 557, column: 2, scope: !5281, inlinedAt: !5282)
!5540 = !DILocation(line: 558, column: 1, scope: !5281, inlinedAt: !5282)
!5541 = !DILocation(line: 664, column: 2, scope: !5270)
!5542 = distinct !DISubprogram(name: "__init_work", scope: !92, file: !92, line: 215, type: !5543, scopeLine: 215, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!5543 = !DISubroutineType(types: !5544)
!5544 = !{null, !1907, !132}
!5545 = !DILocalVariable(name: "work", arg: 1, scope: !5542, file: !92, line: 215, type: !1907)
!5546 = !DILocation(line: 215, column: 52, scope: !5542)
!5547 = !DILocalVariable(name: "onstack", arg: 2, scope: !5542, file: !92, line: 215, type: !132)
!5548 = !DILocation(line: 215, column: 62, scope: !5542)
!5549 = !DILocation(line: 215, column: 73, scope: !5542)
!5550 = distinct !DISubprogram(name: "INIT_LIST_HEAD", scope: !5551, file: !5551, line: 33, type: !5552, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!5551 = !DIFile(filename: "./include/linux/list.h", directory: "/home/lizy2001/genbc/linux")
!5552 = !DISubroutineType(types: !5553)
!5553 = !{null, !142}
!5554 = !DILocalVariable(name: "list", arg: 1, scope: !5550, file: !5551, line: 33, type: !142)
!5555 = !DILocation(line: 33, column: 53, scope: !5550)
!5556 = !DILocation(line: 35, column: 2, scope: !5550)
!5557 = !DILocation(line: 35, column: 2, scope: !5558)
!5558 = distinct !DILexicalBlock(scope: !5550, file: !5551, line: 35, column: 2)
!5559 = !DILocation(line: 35, column: 2, scope: !5560)
!5560 = distinct !DILexicalBlock(scope: !5558, file: !5551, line: 35, column: 2)
!5561 = !DILocation(line: 35, column: 2, scope: !5562)
!5562 = distinct !DILexicalBlock(scope: !5558, file: !5551, line: 35, column: 2)
!5563 = !DILocation(line: 36, column: 15, scope: !5550)
!5564 = !DILocation(line: 36, column: 2, scope: !5550)
!5565 = !DILocation(line: 36, column: 8, scope: !5550)
!5566 = !DILocation(line: 36, column: 13, scope: !5550)
!5567 = !DILocation(line: 37, column: 1, scope: !5550)
!5568 = distinct !DISubprogram(name: "atkbd_event_work", scope: !3, file: !3, line: 629, type: !1905, scopeLine: 630, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!5569 = !DILocation(line: 363, column: 74, scope: !4334, inlinedAt: !5570)
!5570 = distinct !DILocation(line: 643, column: 6, scope: !5571)
!5571 = distinct !DILexicalBlock(scope: !5572, file: !3, line: 635, column: 23)
!5572 = distinct !DILexicalBlock(scope: !5568, file: !3, line: 635, column: 6)
!5573 = !DILocalVariable(name: "work", arg: 1, scope: !5568, file: !3, line: 629, type: !1907)
!5574 = !DILocation(line: 629, column: 50, scope: !5568)
!5575 = !DILocalVariable(name: "atkbd", scope: !5568, file: !3, line: 631, type: !147)
!5576 = !DILocation(line: 631, column: 16, scope: !5568)
!5577 = !DILocalVariable(name: "__mptr", scope: !5578, file: !3, line: 631, type: !139)
!5578 = distinct !DILexicalBlock(scope: !5568, file: !3, line: 631, column: 24)
!5579 = !DILocation(line: 631, column: 24, scope: !5578)
!5580 = !DILocation(line: 631, column: 24, scope: !5581)
!5581 = distinct !DILexicalBlock(scope: !5578, file: !3, line: 631, column: 24)
!5582 = !DILocation(line: 633, column: 14, scope: !5568)
!5583 = !DILocation(line: 633, column: 21, scope: !5568)
!5584 = !DILocation(line: 633, column: 2, scope: !5568)
!5585 = !DILocation(line: 635, column: 7, scope: !5572)
!5586 = !DILocation(line: 635, column: 14, scope: !5572)
!5587 = !DILocation(line: 635, column: 6, scope: !5568)
!5588 = !DILocation(line: 642, column: 26, scope: !5571)
!5589 = !DILocation(line: 642, column: 33, scope: !5571)
!5590 = !DILocation(line: 365, column: 27, scope: !4569, inlinedAt: !5570)
!5591 = !DILocation(line: 365, column: 6, scope: !4569, inlinedAt: !5570)
!5592 = !DILocation(line: 365, column: 6, scope: !4334, inlinedAt: !5570)
!5593 = !DILocation(line: 366, column: 12, scope: !4573, inlinedAt: !5570)
!5594 = !DILocation(line: 366, column: 14, scope: !4573, inlinedAt: !5570)
!5595 = !DILocation(line: 366, column: 7, scope: !4574, inlinedAt: !5570)
!5596 = !DILocation(line: 367, column: 4, scope: !4573, inlinedAt: !5570)
!5597 = !DILocation(line: 368, column: 28, scope: !4574, inlinedAt: !5570)
!5598 = !DILocation(line: 368, column: 10, scope: !4574, inlinedAt: !5570)
!5599 = !DILocation(line: 368, column: 3, scope: !4574, inlinedAt: !5570)
!5600 = !DILocation(line: 370, column: 29, scope: !4582, inlinedAt: !5570)
!5601 = !DILocation(line: 370, column: 10, scope: !4582, inlinedAt: !5570)
!5602 = !DILocation(line: 370, column: 3, scope: !4582, inlinedAt: !5570)
!5603 = !DILocation(line: 372, column: 1, scope: !4334, inlinedAt: !5570)
!5604 = !DILocation(line: 642, column: 3, scope: !5571)
!5605 = !DILocation(line: 644, column: 2, scope: !5571)
!5606 = !DILocation(line: 645, column: 48, scope: !5607)
!5607 = distinct !DILexicalBlock(scope: !5608, file: !3, line: 645, column: 7)
!5608 = distinct !DILexicalBlock(scope: !5572, file: !3, line: 644, column: 9)
!5609 = !DILocation(line: 645, column: 55, scope: !5607)
!5610 = !DILocation(line: 645, column: 7, scope: !5607)
!5611 = !DILocation(line: 645, column: 7, scope: !5608)
!5612 = !DILocation(line: 646, column: 19, scope: !5607)
!5613 = !DILocation(line: 646, column: 4, scope: !5607)
!5614 = !DILocation(line: 648, column: 48, scope: !5615)
!5615 = distinct !DILexicalBlock(scope: !5608, file: !3, line: 648, column: 7)
!5616 = !DILocation(line: 648, column: 55, scope: !5615)
!5617 = !DILocation(line: 648, column: 7, scope: !5615)
!5618 = !DILocation(line: 648, column: 7, scope: !5608)
!5619 = !DILocation(line: 649, column: 26, scope: !5615)
!5620 = !DILocation(line: 649, column: 4, scope: !5615)
!5621 = !DILocation(line: 652, column: 16, scope: !5568)
!5622 = !DILocation(line: 652, column: 23, scope: !5568)
!5623 = !DILocation(line: 652, column: 2, scope: !5568)
!5624 = !DILocation(line: 653, column: 1, scope: !5568)
!5625 = distinct !DISubprogram(name: "serio_set_drvdata", scope: !157, file: !157, line: 145, type: !5626, scopeLine: 146, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!5626 = !DISubroutineType(types: !5627)
!5627 = !{null, !155, !139}
!5628 = !DILocalVariable(name: "serio", arg: 1, scope: !5625, file: !157, line: 145, type: !155)
!5629 = !DILocation(line: 145, column: 52, scope: !5625)
!5630 = !DILocalVariable(name: "data", arg: 2, scope: !5625, file: !157, line: 145, type: !139)
!5631 = !DILocation(line: 145, column: 65, scope: !5625)
!5632 = !DILocation(line: 147, column: 19, scope: !5625)
!5633 = !DILocation(line: 147, column: 26, scope: !5625)
!5634 = !DILocation(line: 147, column: 31, scope: !5625)
!5635 = !DILocation(line: 147, column: 2, scope: !5625)
!5636 = !DILocation(line: 148, column: 1, scope: !5625)
!5637 = distinct !DISubprogram(name: "atkbd_probe", scope: !3, file: !3, line: 763, type: !5638, scopeLine: 764, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!5638 = !DISubroutineType(types: !5639)
!5639 = !{!132, !147}
!5640 = !DILocalVariable(name: "atkbd", arg: 1, scope: !5637, file: !3, line: 763, type: !147)
!5641 = !DILocation(line: 763, column: 38, scope: !5637)
!5642 = !DILocalVariable(name: "ps2dev", scope: !5637, file: !3, line: 765, type: !5643)
!5643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !151, size: 64)
!5644 = !DILocation(line: 765, column: 17, scope: !5637)
!5645 = !DILocation(line: 765, column: 27, scope: !5637)
!5646 = !DILocation(line: 765, column: 34, scope: !5637)
!5647 = !DILocalVariable(name: "param", scope: !5637, file: !3, line: 766, type: !5648)
!5648 = !DICompositeType(tag: DW_TAG_array_type, baseType: !180, size: 16, elements: !1508)
!5649 = !DILocation(line: 766, column: 16, scope: !5637)
!5650 = !DILocation(line: 774, column: 6, scope: !5651)
!5651 = distinct !DILexicalBlock(scope: !5637, file: !3, line: 774, column: 6)
!5652 = !DILocation(line: 774, column: 6, scope: !5637)
!5653 = !DILocation(line: 775, column: 19, scope: !5654)
!5654 = distinct !DILexicalBlock(scope: !5651, file: !3, line: 775, column: 7)
!5655 = !DILocation(line: 775, column: 7, scope: !5654)
!5656 = !DILocation(line: 775, column: 7, scope: !5651)
!5657 = !DILocation(line: 776, column: 4, scope: !5654)
!5658 = !DILocation(line: 775, column: 52, scope: !5654)
!5659 = !DILocation(line: 787, column: 13, scope: !5637)
!5660 = !DILocation(line: 787, column: 22, scope: !5637)
!5661 = !DILocation(line: 787, column: 2, scope: !5637)
!5662 = !DILocation(line: 787, column: 11, scope: !5637)
!5663 = !DILocation(line: 788, column: 18, scope: !5664)
!5664 = distinct !DILexicalBlock(scope: !5637, file: !3, line: 788, column: 6)
!5665 = !DILocation(line: 788, column: 26, scope: !5664)
!5666 = !DILocation(line: 788, column: 6, scope: !5664)
!5667 = !DILocation(line: 788, column: 6, scope: !5637)
!5668 = !DILocation(line: 795, column: 3, scope: !5669)
!5669 = distinct !DILexicalBlock(scope: !5664, file: !3, line: 788, column: 51)
!5670 = !DILocation(line: 795, column: 12, scope: !5669)
!5671 = !DILocation(line: 796, column: 19, scope: !5672)
!5672 = distinct !DILexicalBlock(scope: !5669, file: !3, line: 796, column: 7)
!5673 = !DILocation(line: 796, column: 27, scope: !5672)
!5674 = !DILocation(line: 796, column: 7, scope: !5672)
!5675 = !DILocation(line: 796, column: 7, scope: !5669)
!5676 = !DILocation(line: 797, column: 4, scope: !5672)
!5677 = !DILocation(line: 798, column: 3, scope: !5669)
!5678 = !DILocation(line: 798, column: 10, scope: !5669)
!5679 = !DILocation(line: 798, column: 13, scope: !5669)
!5680 = !DILocation(line: 799, column: 3, scope: !5669)
!5681 = !DILocation(line: 802, column: 26, scope: !5682)
!5682 = distinct !DILexicalBlock(scope: !5637, file: !3, line: 802, column: 6)
!5683 = !DILocation(line: 802, column: 7, scope: !5682)
!5684 = !DILocation(line: 802, column: 6, scope: !5637)
!5685 = !DILocation(line: 803, column: 3, scope: !5682)
!5686 = !DILocation(line: 805, column: 15, scope: !5637)
!5687 = !DILocation(line: 805, column: 24, scope: !5637)
!5688 = !DILocation(line: 805, column: 32, scope: !5637)
!5689 = !DILocation(line: 805, column: 30, scope: !5637)
!5690 = !DILocation(line: 805, column: 14, scope: !5637)
!5691 = !DILocation(line: 805, column: 2, scope: !5637)
!5692 = !DILocation(line: 805, column: 9, scope: !5637)
!5693 = !DILocation(line: 805, column: 12, scope: !5637)
!5694 = !DILocation(line: 807, column: 6, scope: !5695)
!5695 = distinct !DILexicalBlock(scope: !5637, file: !3, line: 807, column: 6)
!5696 = !DILocation(line: 807, column: 13, scope: !5695)
!5697 = !DILocation(line: 807, column: 16, scope: !5695)
!5698 = !DILocation(line: 807, column: 26, scope: !5695)
!5699 = !DILocation(line: 807, column: 29, scope: !5695)
!5700 = !DILocation(line: 807, column: 36, scope: !5695)
!5701 = !DILocation(line: 807, column: 6, scope: !5637)
!5702 = !DILocation(line: 808, column: 3, scope: !5703)
!5703 = distinct !DILexicalBlock(scope: !5695, file: !3, line: 807, column: 48)
!5704 = !DILocation(line: 811, column: 3, scope: !5703)
!5705 = !DILocation(line: 818, column: 7, scope: !5706)
!5706 = distinct !DILexicalBlock(scope: !5637, file: !3, line: 818, column: 6)
!5707 = !DILocation(line: 818, column: 6, scope: !5637)
!5708 = !DILocation(line: 819, column: 20, scope: !5706)
!5709 = !DILocation(line: 819, column: 3, scope: !5706)
!5710 = !DILocation(line: 821, column: 2, scope: !5637)
!5711 = !DILocation(line: 822, column: 1, scope: !5637)
!5712 = distinct !DISubprogram(name: "atkbd_select_set", scope: !3, file: !3, line: 830, type: !5713, scopeLine: 831, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!5713 = !DISubroutineType(types: !5714)
!5714 = !{!132, !147, !132, !132}
!5715 = !DILocalVariable(name: "atkbd", arg: 1, scope: !5712, file: !3, line: 830, type: !147)
!5716 = !DILocation(line: 830, column: 43, scope: !5712)
!5717 = !DILocalVariable(name: "target_set", arg: 2, scope: !5712, file: !3, line: 830, type: !132)
!5718 = !DILocation(line: 830, column: 54, scope: !5712)
!5719 = !DILocalVariable(name: "allow_extra", arg: 3, scope: !5712, file: !3, line: 830, type: !132)
!5720 = !DILocation(line: 830, column: 70, scope: !5712)
!5721 = !DILocalVariable(name: "ps2dev", scope: !5712, file: !3, line: 832, type: !5643)
!5722 = !DILocation(line: 832, column: 17, scope: !5712)
!5723 = !DILocation(line: 832, column: 27, scope: !5712)
!5724 = !DILocation(line: 832, column: 34, scope: !5712)
!5725 = !DILocalVariable(name: "param", scope: !5712, file: !3, line: 833, type: !5648)
!5726 = !DILocation(line: 833, column: 16, scope: !5712)
!5727 = !DILocation(line: 835, column: 2, scope: !5712)
!5728 = !DILocation(line: 835, column: 9, scope: !5712)
!5729 = !DILocation(line: 835, column: 15, scope: !5712)
!5730 = !DILocation(line: 842, column: 6, scope: !5731)
!5731 = distinct !DILexicalBlock(scope: !5712, file: !3, line: 842, column: 6)
!5732 = !DILocation(line: 842, column: 13, scope: !5731)
!5733 = !DILocation(line: 842, column: 6, scope: !5712)
!5734 = !DILocation(line: 843, column: 3, scope: !5731)
!5735 = !DILocation(line: 845, column: 6, scope: !5736)
!5736 = distinct !DILexicalBlock(scope: !5712, file: !3, line: 845, column: 6)
!5737 = !DILocation(line: 845, column: 13, scope: !5736)
!5738 = !DILocation(line: 845, column: 16, scope: !5736)
!5739 = !DILocation(line: 845, column: 6, scope: !5712)
!5740 = !DILocation(line: 846, column: 3, scope: !5741)
!5741 = distinct !DILexicalBlock(scope: !5736, file: !3, line: 845, column: 27)
!5742 = !DILocation(line: 846, column: 12, scope: !5741)
!5743 = !DILocation(line: 847, column: 15, scope: !5741)
!5744 = !DILocation(line: 847, column: 23, scope: !5741)
!5745 = !DILocation(line: 847, column: 3, scope: !5741)
!5746 = !DILocation(line: 848, column: 3, scope: !5741)
!5747 = !DILocation(line: 851, column: 6, scope: !5748)
!5748 = distinct !DILexicalBlock(scope: !5712, file: !3, line: 851, column: 6)
!5749 = !DILocation(line: 851, column: 6, scope: !5712)
!5750 = !DILocation(line: 852, column: 3, scope: !5751)
!5751 = distinct !DILexicalBlock(scope: !5748, file: !3, line: 851, column: 19)
!5752 = !DILocation(line: 852, column: 12, scope: !5751)
!5753 = !DILocation(line: 853, column: 20, scope: !5754)
!5754 = distinct !DILexicalBlock(scope: !5751, file: !3, line: 853, column: 7)
!5755 = !DILocation(line: 853, column: 28, scope: !5754)
!5756 = !DILocation(line: 853, column: 8, scope: !5754)
!5757 = !DILocation(line: 853, column: 7, scope: !5751)
!5758 = !DILocation(line: 854, column: 4, scope: !5759)
!5759 = distinct !DILexicalBlock(scope: !5754, file: !3, line: 853, column: 57)
!5760 = !DILocation(line: 854, column: 11, scope: !5759)
!5761 = !DILocation(line: 854, column: 17, scope: !5759)
!5762 = !DILocation(line: 855, column: 4, scope: !5759)
!5763 = !DILocation(line: 857, column: 2, scope: !5751)
!5764 = !DILocation(line: 859, column: 6, scope: !5765)
!5765 = distinct !DILexicalBlock(scope: !5712, file: !3, line: 859, column: 6)
!5766 = !DILocation(line: 859, column: 6, scope: !5712)
!5767 = !DILocation(line: 860, column: 15, scope: !5768)
!5768 = distinct !DILexicalBlock(scope: !5765, file: !3, line: 859, column: 22)
!5769 = !DILocation(line: 860, column: 23, scope: !5768)
!5770 = !DILocation(line: 860, column: 3, scope: !5768)
!5771 = !DILocation(line: 861, column: 3, scope: !5768)
!5772 = !DILocation(line: 864, column: 6, scope: !5773)
!5773 = distinct !DILexicalBlock(scope: !5712, file: !3, line: 864, column: 6)
!5774 = !DILocation(line: 864, column: 17, scope: !5773)
!5775 = !DILocation(line: 864, column: 6, scope: !5712)
!5776 = !DILocation(line: 865, column: 3, scope: !5773)
!5777 = !DILocation(line: 867, column: 19, scope: !5778)
!5778 = distinct !DILexicalBlock(scope: !5712, file: !3, line: 867, column: 6)
!5779 = !DILocation(line: 867, column: 27, scope: !5778)
!5780 = !DILocation(line: 867, column: 7, scope: !5778)
!5781 = !DILocation(line: 867, column: 6, scope: !5712)
!5782 = !DILocation(line: 868, column: 15, scope: !5783)
!5783 = distinct !DILexicalBlock(scope: !5778, file: !3, line: 867, column: 55)
!5784 = !DILocation(line: 868, column: 24, scope: !5783)
!5785 = !DILocation(line: 868, column: 31, scope: !5783)
!5786 = !DILocation(line: 868, column: 29, scope: !5783)
!5787 = !DILocation(line: 868, column: 3, scope: !5783)
!5788 = !DILocation(line: 868, column: 10, scope: !5783)
!5789 = !DILocation(line: 868, column: 13, scope: !5783)
!5790 = !DILocation(line: 869, column: 3, scope: !5783)
!5791 = !DILocation(line: 872, column: 2, scope: !5712)
!5792 = !DILocation(line: 872, column: 11, scope: !5712)
!5793 = !DILocation(line: 873, column: 18, scope: !5794)
!5794 = distinct !DILexicalBlock(scope: !5712, file: !3, line: 873, column: 6)
!5795 = !DILocation(line: 873, column: 26, scope: !5794)
!5796 = !DILocation(line: 873, column: 6, scope: !5794)
!5797 = !DILocation(line: 873, column: 6, scope: !5712)
!5798 = !DILocation(line: 874, column: 3, scope: !5794)
!5799 = !DILocation(line: 876, column: 2, scope: !5712)
!5800 = !DILocation(line: 876, column: 11, scope: !5712)
!5801 = !DILocation(line: 877, column: 18, scope: !5802)
!5802 = distinct !DILexicalBlock(scope: !5712, file: !3, line: 877, column: 6)
!5803 = !DILocation(line: 877, column: 26, scope: !5802)
!5804 = !DILocation(line: 877, column: 6, scope: !5802)
!5805 = !DILocation(line: 877, column: 6, scope: !5712)
!5806 = !DILocation(line: 878, column: 3, scope: !5802)
!5807 = !DILocation(line: 880, column: 6, scope: !5808)
!5808 = distinct !DILexicalBlock(scope: !5712, file: !3, line: 880, column: 6)
!5809 = !DILocation(line: 880, column: 15, scope: !5808)
!5810 = !DILocation(line: 880, column: 6, scope: !5712)
!5811 = !DILocation(line: 881, column: 3, scope: !5812)
!5812 = distinct !DILexicalBlock(scope: !5808, file: !3, line: 880, column: 21)
!5813 = !DILocation(line: 881, column: 12, scope: !5812)
!5814 = !DILocation(line: 882, column: 19, scope: !5815)
!5815 = distinct !DILexicalBlock(scope: !5812, file: !3, line: 882, column: 7)
!5816 = !DILocation(line: 882, column: 27, scope: !5815)
!5817 = !DILocation(line: 882, column: 7, scope: !5815)
!5818 = !DILocation(line: 882, column: 7, scope: !5812)
!5819 = !DILocation(line: 883, column: 4, scope: !5815)
!5820 = !DILocation(line: 884, column: 2, scope: !5812)
!5821 = !DILocation(line: 886, column: 14, scope: !5712)
!5822 = !DILocation(line: 886, column: 22, scope: !5712)
!5823 = !DILocation(line: 886, column: 2, scope: !5712)
!5824 = !DILocation(line: 888, column: 2, scope: !5712)
!5825 = !DILocation(line: 889, column: 1, scope: !5712)
!5826 = distinct !DISubprogram(name: "atkbd_reset_state", scope: !3, file: !3, line: 891, type: !5638, scopeLine: 892, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!5827 = !DILocalVariable(name: "atkbd", arg: 1, scope: !5826, file: !3, line: 891, type: !147)
!5828 = !DILocation(line: 891, column: 44, scope: !5826)
!5829 = !DILocalVariable(name: "ps2dev", scope: !5826, file: !3, line: 893, type: !5643)
!5830 = !DILocation(line: 893, column: 24, scope: !5826)
!5831 = !DILocation(line: 893, column: 34, scope: !5826)
!5832 = !DILocation(line: 893, column: 41, scope: !5826)
!5833 = !DILocalVariable(name: "param", scope: !5826, file: !3, line: 894, type: !5834)
!5834 = !DICompositeType(tag: DW_TAG_array_type, baseType: !180, size: 8, elements: !1310)
!5835 = !DILocation(line: 894, column: 16, scope: !5826)
!5836 = !DILocation(line: 900, column: 2, scope: !5826)
!5837 = !DILocation(line: 900, column: 11, scope: !5826)
!5838 = !DILocation(line: 901, column: 18, scope: !5839)
!5839 = distinct !DILexicalBlock(scope: !5826, file: !3, line: 901, column: 6)
!5840 = !DILocation(line: 901, column: 26, scope: !5839)
!5841 = !DILocation(line: 901, column: 6, scope: !5839)
!5842 = !DILocation(line: 901, column: 6, scope: !5826)
!5843 = !DILocation(line: 902, column: 3, scope: !5839)
!5844 = !DILocation(line: 908, column: 2, scope: !5826)
!5845 = !DILocation(line: 908, column: 11, scope: !5826)
!5846 = !DILocation(line: 909, column: 18, scope: !5847)
!5847 = distinct !DILexicalBlock(scope: !5826, file: !3, line: 909, column: 6)
!5848 = !DILocation(line: 909, column: 26, scope: !5847)
!5849 = !DILocation(line: 909, column: 6, scope: !5847)
!5850 = !DILocation(line: 909, column: 6, scope: !5826)
!5851 = !DILocation(line: 910, column: 3, scope: !5847)
!5852 = !DILocation(line: 912, column: 2, scope: !5826)
!5853 = !DILocation(line: 913, column: 1, scope: !5826)
!5854 = distinct !DISubprogram(name: "atkbd_parse_fwnode_data", scope: !3, file: !3, line: 1201, type: !210, scopeLine: 1202, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!5855 = !DILocalVariable(name: "serio", arg: 1, scope: !5854, file: !3, line: 1201, type: !155)
!5856 = !DILocation(line: 1201, column: 51, scope: !5854)
!5857 = !DILocalVariable(name: "atkbd", scope: !5854, file: !3, line: 1203, type: !147)
!5858 = !DILocation(line: 1203, column: 16, scope: !5854)
!5859 = !DILocation(line: 1203, column: 42, scope: !5854)
!5860 = !DILocation(line: 1203, column: 24, scope: !5854)
!5861 = !DILocalVariable(name: "dev", scope: !5854, file: !3, line: 1204, type: !255)
!5862 = !DILocation(line: 1204, column: 17, scope: !5854)
!5863 = !DILocation(line: 1204, column: 24, scope: !5854)
!5864 = !DILocation(line: 1204, column: 31, scope: !5854)
!5865 = !DILocalVariable(name: "n", scope: !5854, file: !3, line: 1205, type: !132)
!5866 = !DILocation(line: 1205, column: 6, scope: !5854)
!5867 = !DILocation(line: 1208, column: 32, scope: !5854)
!5868 = !DILocation(line: 1208, column: 6, scope: !5854)
!5869 = !DILocation(line: 1208, column: 4, scope: !5854)
!5870 = !DILocation(line: 1209, column: 6, scope: !5871)
!5871 = distinct !DILexicalBlock(scope: !5854, file: !3, line: 1209, column: 6)
!5872 = !DILocation(line: 1209, column: 8, scope: !5871)
!5873 = !DILocation(line: 1209, column: 12, scope: !5871)
!5874 = !DILocation(line: 1209, column: 15, scope: !5871)
!5875 = !DILocation(line: 1209, column: 17, scope: !5871)
!5876 = !DILocation(line: 1209, column: 42, scope: !5871)
!5877 = !DILocation(line: 1210, column: 38, scope: !5871)
!5878 = !DILocation(line: 1211, column: 10, scope: !5871)
!5879 = !DILocation(line: 1211, column: 17, scope: !5871)
!5880 = !DILocation(line: 1211, column: 39, scope: !5871)
!5881 = !DILocation(line: 1210, column: 7, scope: !5871)
!5882 = !DILocation(line: 1209, column: 6, scope: !5854)
!5883 = !DILocation(line: 1212, column: 34, scope: !5884)
!5884 = distinct !DILexicalBlock(scope: !5871, file: !3, line: 1211, column: 43)
!5885 = !DILocation(line: 1212, column: 3, scope: !5884)
!5886 = !DILocation(line: 1212, column: 10, scope: !5884)
!5887 = !DILocation(line: 1212, column: 32, scope: !5884)
!5888 = !DILocation(line: 1214, column: 2, scope: !5884)
!5889 = !DILocation(line: 1215, column: 1, scope: !5854)
!5890 = distinct !DISubprogram(name: "atkbd_set_keycode_table", scope: !3, file: !3, line: 1076, type: !5891, scopeLine: 1077, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!5891 = !DISubroutineType(types: !5892)
!5892 = !{null, !147}
!5893 = !DILocalVariable(name: "atkbd", arg: 1, scope: !5890, file: !3, line: 1076, type: !147)
!5894 = !DILocation(line: 1076, column: 51, scope: !5890)
!5895 = !DILocalVariable(name: "dev", scope: !5890, file: !3, line: 1078, type: !255)
!5896 = !DILocation(line: 1078, column: 17, scope: !5890)
!5897 = !DILocation(line: 1078, column: 24, scope: !5890)
!5898 = !DILocation(line: 1078, column: 31, scope: !5890)
!5899 = !DILocation(line: 1078, column: 38, scope: !5890)
!5900 = !DILocation(line: 1078, column: 45, scope: !5890)
!5901 = !DILocalVariable(name: "scancode", scope: !5890, file: !3, line: 1079, type: !7)
!5902 = !DILocation(line: 1079, column: 15, scope: !5890)
!5903 = !DILocalVariable(name: "i", scope: !5890, file: !3, line: 1080, type: !132)
!5904 = !DILocation(line: 1080, column: 6, scope: !5890)
!5905 = !DILocalVariable(name: "j", scope: !5890, file: !3, line: 1080, type: !132)
!5906 = !DILocation(line: 1080, column: 9, scope: !5890)
!5907 = !DILocation(line: 1082, column: 9, scope: !5890)
!5908 = !DILocation(line: 1082, column: 16, scope: !5890)
!5909 = !DILocation(line: 1082, column: 2, scope: !5890)
!5910 = !DILocation(line: 1083, column: 14, scope: !5890)
!5911 = !DILocation(line: 1083, column: 21, scope: !5890)
!5912 = !DILocation(line: 1083, column: 2, scope: !5890)
!5913 = !DILocation(line: 1085, column: 36, scope: !5914)
!5914 = distinct !DILexicalBlock(scope: !5890, file: !3, line: 1085, column: 6)
!5915 = !DILocation(line: 1085, column: 7, scope: !5914)
!5916 = !DILocation(line: 1085, column: 6, scope: !5890)
!5917 = !DILocation(line: 1087, column: 2, scope: !5918)
!5918 = distinct !DILexicalBlock(scope: !5914, file: !3, line: 1085, column: 44)
!5919 = !DILocation(line: 1087, column: 13, scope: !5920)
!5920 = distinct !DILexicalBlock(scope: !5914, file: !3, line: 1087, column: 13)
!5921 = !DILocation(line: 1087, column: 20, scope: !5920)
!5922 = !DILocation(line: 1087, column: 13, scope: !5914)
!5923 = !DILocation(line: 1088, column: 10, scope: !5924)
!5924 = distinct !DILexicalBlock(scope: !5925, file: !3, line: 1088, column: 3)
!5925 = distinct !DILexicalBlock(scope: !5920, file: !3, line: 1087, column: 32)
!5926 = !DILocation(line: 1088, column: 8, scope: !5924)
!5927 = !DILocation(line: 1088, column: 15, scope: !5928)
!5928 = distinct !DILexicalBlock(scope: !5924, file: !3, line: 1088, column: 3)
!5929 = !DILocation(line: 1088, column: 17, scope: !5928)
!5930 = !DILocation(line: 1088, column: 3, scope: !5924)
!5931 = !DILocation(line: 1089, column: 35, scope: !5932)
!5932 = distinct !DILexicalBlock(scope: !5928, file: !3, line: 1088, column: 29)
!5933 = !DILocation(line: 1089, column: 15, scope: !5932)
!5934 = !DILocation(line: 1089, column: 13, scope: !5932)
!5935 = !DILocation(line: 1090, column: 43, scope: !5932)
!5936 = !DILocation(line: 1090, column: 24, scope: !5932)
!5937 = !DILocation(line: 1090, column: 4, scope: !5932)
!5938 = !DILocation(line: 1090, column: 11, scope: !5932)
!5939 = !DILocation(line: 1090, column: 19, scope: !5932)
!5940 = !DILocation(line: 1090, column: 22, scope: !5932)
!5941 = !DILocation(line: 1091, column: 50, scope: !5932)
!5942 = !DILocation(line: 1091, column: 59, scope: !5932)
!5943 = !DILocation(line: 1091, column: 31, scope: !5932)
!5944 = !DILocation(line: 1091, column: 4, scope: !5932)
!5945 = !DILocation(line: 1091, column: 11, scope: !5932)
!5946 = !DILocation(line: 1091, column: 19, scope: !5932)
!5947 = !DILocation(line: 1091, column: 21, scope: !5932)
!5948 = !DILocation(line: 1091, column: 29, scope: !5932)
!5949 = !DILocation(line: 1092, column: 8, scope: !5950)
!5950 = distinct !DILexicalBlock(scope: !5932, file: !3, line: 1092, column: 8)
!5951 = !DILocation(line: 1092, column: 15, scope: !5950)
!5952 = !DILocation(line: 1092, column: 8, scope: !5932)
!5953 = !DILocation(line: 1093, column: 12, scope: !5954)
!5954 = distinct !DILexicalBlock(scope: !5950, file: !3, line: 1093, column: 5)
!5955 = !DILocation(line: 1093, column: 10, scope: !5954)
!5956 = !DILocation(line: 1093, column: 17, scope: !5957)
!5957 = distinct !DILexicalBlock(scope: !5954, file: !3, line: 1093, column: 5)
!5958 = !DILocation(line: 1093, column: 19, scope: !5957)
!5959 = !DILocation(line: 1093, column: 5, scope: !5954)
!5960 = !DILocation(line: 1094, column: 11, scope: !5961)
!5961 = distinct !DILexicalBlock(scope: !5957, file: !3, line: 1094, column: 10)
!5962 = !DILocation(line: 1094, column: 20, scope: !5961)
!5963 = !DILocation(line: 1094, column: 49, scope: !5961)
!5964 = !DILocation(line: 1094, column: 31, scope: !5961)
!5965 = !DILocation(line: 1094, column: 52, scope: !5961)
!5966 = !DILocation(line: 1094, column: 28, scope: !5961)
!5967 = !DILocation(line: 1094, column: 10, scope: !5957)
!5968 = !DILocation(line: 1095, column: 52, scope: !5961)
!5969 = !DILocation(line: 1095, column: 34, scope: !5961)
!5970 = !DILocation(line: 1095, column: 55, scope: !5961)
!5971 = !DILocation(line: 1095, column: 7, scope: !5961)
!5972 = !DILocation(line: 1095, column: 14, scope: !5961)
!5973 = !DILocation(line: 1095, column: 22, scope: !5961)
!5974 = !DILocation(line: 1095, column: 24, scope: !5961)
!5975 = !DILocation(line: 1095, column: 32, scope: !5961)
!5976 = !DILocation(line: 1093, column: 53, scope: !5957)
!5977 = !DILocation(line: 1093, column: 5, scope: !5957)
!5978 = distinct !{!5978, !5959, !5979}
!5979 = !DILocation(line: 1095, column: 55, scope: !5954)
!5980 = !DILocation(line: 1096, column: 3, scope: !5932)
!5981 = !DILocation(line: 1088, column: 25, scope: !5928)
!5982 = !DILocation(line: 1088, column: 3, scope: !5928)
!5983 = distinct !{!5983, !5930, !5984}
!5984 = !DILocation(line: 1096, column: 3, scope: !5924)
!5985 = !DILocation(line: 1097, column: 2, scope: !5925)
!5986 = !DILocation(line: 1097, column: 13, scope: !5987)
!5987 = distinct !DILexicalBlock(scope: !5920, file: !3, line: 1097, column: 13)
!5988 = !DILocation(line: 1097, column: 20, scope: !5987)
!5989 = !DILocation(line: 1097, column: 24, scope: !5987)
!5990 = !DILocation(line: 1097, column: 13, scope: !5920)
!5991 = !DILocation(line: 1098, column: 10, scope: !5992)
!5992 = distinct !DILexicalBlock(scope: !5987, file: !3, line: 1097, column: 30)
!5993 = !DILocation(line: 1098, column: 17, scope: !5992)
!5994 = !DILocation(line: 1098, column: 3, scope: !5992)
!5995 = !DILocation(line: 1099, column: 2, scope: !5992)
!5996 = !DILocation(line: 1100, column: 10, scope: !5997)
!5997 = distinct !DILexicalBlock(scope: !5987, file: !3, line: 1099, column: 9)
!5998 = !DILocation(line: 1100, column: 17, scope: !5997)
!5999 = !DILocation(line: 1100, column: 3, scope: !5997)
!6000 = !DILocation(line: 1102, column: 7, scope: !6001)
!6001 = distinct !DILexicalBlock(scope: !5997, file: !3, line: 1102, column: 7)
!6002 = !DILocation(line: 1102, column: 14, scope: !6001)
!6003 = !DILocation(line: 1102, column: 7, scope: !5997)
!6004 = !DILocation(line: 1103, column: 11, scope: !6005)
!6005 = distinct !DILexicalBlock(scope: !6001, file: !3, line: 1103, column: 4)
!6006 = !DILocation(line: 1103, column: 9, scope: !6005)
!6007 = !DILocation(line: 1103, column: 16, scope: !6008)
!6008 = distinct !DILexicalBlock(scope: !6005, file: !3, line: 1103, column: 4)
!6009 = !DILocation(line: 1103, column: 18, scope: !6008)
!6010 = !DILocation(line: 1103, column: 4, scope: !6005)
!6011 = !DILocation(line: 1104, column: 34, scope: !6012)
!6012 = distinct !DILexicalBlock(scope: !6008, file: !3, line: 1103, column: 56)
!6013 = !DILocation(line: 1104, column: 16, scope: !6012)
!6014 = !DILocation(line: 1104, column: 37, scope: !6012)
!6015 = !DILocation(line: 1104, column: 14, scope: !6012)
!6016 = !DILocation(line: 1105, column: 50, scope: !6012)
!6017 = !DILocation(line: 1105, column: 32, scope: !6012)
!6018 = !DILocation(line: 1105, column: 53, scope: !6012)
!6019 = !DILocation(line: 1105, column: 5, scope: !6012)
!6020 = !DILocation(line: 1105, column: 12, scope: !6012)
!6021 = !DILocation(line: 1105, column: 20, scope: !6012)
!6022 = !DILocation(line: 1105, column: 30, scope: !6012)
!6023 = !DILocation(line: 1106, column: 3, scope: !6012)
!6024 = !DILocation(line: 1103, column: 52, scope: !6008)
!6025 = !DILocation(line: 1103, column: 4, scope: !6008)
!6026 = distinct !{!6026, !6010, !6027}
!6027 = !DILocation(line: 1106, column: 3, scope: !6005)
!6028 = !DILocation(line: 1113, column: 35, scope: !5890)
!6029 = !DILocation(line: 1113, column: 13, scope: !5890)
!6030 = !DILocation(line: 1113, column: 11, scope: !5890)
!6031 = !DILocation(line: 1114, column: 2, scope: !5890)
!6032 = !DILocation(line: 1114, column: 9, scope: !5890)
!6033 = !DILocation(line: 1114, column: 17, scope: !5890)
!6034 = !DILocation(line: 1114, column: 27, scope: !5890)
!6035 = !DILocation(line: 1115, column: 12, scope: !5890)
!6036 = !DILocation(line: 1115, column: 22, scope: !5890)
!6037 = !DILocation(line: 1115, column: 29, scope: !5890)
!6038 = !DILocation(line: 1115, column: 2, scope: !5890)
!6039 = !DILocation(line: 1117, column: 35, scope: !5890)
!6040 = !DILocation(line: 1117, column: 13, scope: !5890)
!6041 = !DILocation(line: 1117, column: 11, scope: !5890)
!6042 = !DILocation(line: 1118, column: 2, scope: !5890)
!6043 = !DILocation(line: 1118, column: 9, scope: !5890)
!6044 = !DILocation(line: 1118, column: 17, scope: !5890)
!6045 = !DILocation(line: 1118, column: 27, scope: !5890)
!6046 = !DILocation(line: 1119, column: 12, scope: !5890)
!6047 = !DILocation(line: 1119, column: 22, scope: !5890)
!6048 = !DILocation(line: 1119, column: 29, scope: !5890)
!6049 = !DILocation(line: 1119, column: 2, scope: !5890)
!6050 = !DILocation(line: 1124, column: 6, scope: !6051)
!6051 = distinct !DILexicalBlock(scope: !5890, file: !3, line: 1124, column: 6)
!6052 = !DILocation(line: 1124, column: 6, scope: !5890)
!6053 = !DILocation(line: 1125, column: 3, scope: !6051)
!6054 = !DILocation(line: 1125, column: 24, scope: !6051)
!6055 = !DILocation(line: 1125, column: 31, scope: !6051)
!6056 = !DILocation(line: 1126, column: 1, scope: !5890)
!6057 = distinct !DISubprogram(name: "atkbd_set_device_attrs", scope: !3, file: !3, line: 1132, type: !5891, scopeLine: 1133, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!6058 = !DILocalVariable(name: "atkbd", arg: 1, scope: !6057, file: !3, line: 1132, type: !147)
!6059 = !DILocation(line: 1132, column: 50, scope: !6057)
!6060 = !DILocalVariable(name: "input_dev", scope: !6057, file: !3, line: 1134, type: !3682)
!6061 = !DILocation(line: 1134, column: 20, scope: !6057)
!6062 = !DILocation(line: 1134, column: 32, scope: !6057)
!6063 = !DILocation(line: 1134, column: 39, scope: !6057)
!6064 = !DILocalVariable(name: "i", scope: !6057, file: !3, line: 1135, type: !132)
!6065 = !DILocation(line: 1135, column: 6, scope: !6057)
!6066 = !DILocation(line: 1137, column: 6, scope: !6067)
!6067 = distinct !DILexicalBlock(scope: !6057, file: !3, line: 1137, column: 6)
!6068 = !DILocation(line: 1137, column: 13, scope: !6067)
!6069 = !DILocation(line: 1137, column: 6, scope: !6057)
!6070 = !DILocation(line: 1138, column: 12, scope: !6067)
!6071 = !DILocation(line: 1138, column: 19, scope: !6067)
!6072 = !DILocation(line: 1138, column: 3, scope: !6067)
!6073 = !DILocation(line: 1141, column: 12, scope: !6067)
!6074 = !DILocation(line: 1141, column: 19, scope: !6067)
!6075 = !DILocation(line: 1143, column: 5, scope: !6067)
!6076 = !DILocation(line: 1143, column: 12, scope: !6067)
!6077 = !DILocation(line: 1143, column: 47, scope: !6067)
!6078 = !DILocation(line: 1143, column: 54, scope: !6067)
!6079 = !DILocation(line: 1141, column: 3, scope: !6067)
!6080 = !DILocation(line: 1145, column: 11, scope: !6057)
!6081 = !DILocation(line: 1145, column: 18, scope: !6057)
!6082 = !DILocation(line: 1146, column: 17, scope: !6057)
!6083 = !DILocation(line: 1146, column: 24, scope: !6057)
!6084 = !DILocation(line: 1146, column: 31, scope: !6057)
!6085 = !DILocation(line: 1146, column: 38, scope: !6057)
!6086 = !DILocation(line: 1145, column: 2, scope: !6057)
!6087 = !DILocation(line: 1148, column: 20, scope: !6057)
!6088 = !DILocation(line: 1148, column: 27, scope: !6057)
!6089 = !DILocation(line: 1148, column: 2, scope: !6057)
!6090 = !DILocation(line: 1148, column: 13, scope: !6057)
!6091 = !DILocation(line: 1148, column: 18, scope: !6057)
!6092 = !DILocation(line: 1149, column: 20, scope: !6057)
!6093 = !DILocation(line: 1149, column: 27, scope: !6057)
!6094 = !DILocation(line: 1149, column: 2, scope: !6057)
!6095 = !DILocation(line: 1149, column: 13, scope: !6057)
!6096 = !DILocation(line: 1149, column: 18, scope: !6057)
!6097 = !DILocation(line: 1150, column: 2, scope: !6057)
!6098 = !DILocation(line: 1150, column: 13, scope: !6057)
!6099 = !DILocation(line: 1150, column: 16, scope: !6057)
!6100 = !DILocation(line: 1150, column: 24, scope: !6057)
!6101 = !DILocation(line: 1151, column: 2, scope: !6057)
!6102 = !DILocation(line: 1151, column: 13, scope: !6057)
!6103 = !DILocation(line: 1151, column: 16, scope: !6057)
!6104 = !DILocation(line: 1151, column: 23, scope: !6057)
!6105 = !DILocation(line: 1152, column: 26, scope: !6057)
!6106 = !DILocation(line: 1152, column: 33, scope: !6057)
!6107 = !DILocation(line: 1152, column: 50, scope: !6057)
!6108 = !DILocation(line: 1152, column: 57, scope: !6057)
!6109 = !DILocation(line: 1152, column: 2, scope: !6057)
!6110 = !DILocation(line: 1152, column: 13, scope: !6057)
!6111 = !DILocation(line: 1152, column: 16, scope: !6057)
!6112 = !DILocation(line: 1152, column: 24, scope: !6057)
!6113 = !DILocation(line: 1153, column: 26, scope: !6057)
!6114 = !DILocation(line: 1153, column: 33, scope: !6057)
!6115 = !DILocation(line: 1153, column: 2, scope: !6057)
!6116 = !DILocation(line: 1153, column: 13, scope: !6057)
!6117 = !DILocation(line: 1153, column: 16, scope: !6057)
!6118 = !DILocation(line: 1153, column: 24, scope: !6057)
!6119 = !DILocation(line: 1154, column: 2, scope: !6057)
!6120 = !DILocation(line: 1154, column: 13, scope: !6057)
!6121 = !DILocation(line: 1154, column: 19, scope: !6057)
!6122 = !DILocation(line: 1155, column: 27, scope: !6057)
!6123 = !DILocation(line: 1155, column: 34, scope: !6057)
!6124 = !DILocation(line: 1155, column: 41, scope: !6057)
!6125 = !DILocation(line: 1155, column: 48, scope: !6057)
!6126 = !DILocation(line: 1155, column: 2, scope: !6057)
!6127 = !DILocation(line: 1155, column: 13, scope: !6057)
!6128 = !DILocation(line: 1155, column: 17, scope: !6057)
!6129 = !DILocation(line: 1155, column: 24, scope: !6057)
!6130 = !DILocation(line: 1157, column: 20, scope: !6057)
!6131 = !DILocation(line: 1157, column: 31, scope: !6057)
!6132 = !DILocation(line: 1157, column: 2, scope: !6057)
!6133 = !DILocation(line: 1159, column: 2, scope: !6057)
!6134 = !DILocation(line: 1159, column: 13, scope: !6057)
!6135 = !DILocation(line: 1159, column: 22, scope: !6057)
!6136 = !DILocation(line: 1162, column: 6, scope: !6137)
!6137 = distinct !DILexicalBlock(scope: !6057, file: !3, line: 1162, column: 6)
!6138 = !DILocation(line: 1162, column: 13, scope: !6137)
!6139 = !DILocation(line: 1162, column: 6, scope: !6057)
!6140 = !DILocation(line: 1163, column: 3, scope: !6141)
!6141 = distinct !DILexicalBlock(scope: !6137, file: !3, line: 1162, column: 20)
!6142 = !DILocation(line: 1163, column: 14, scope: !6141)
!6143 = !DILocation(line: 1163, column: 23, scope: !6141)
!6144 = !DILocation(line: 1164, column: 3, scope: !6141)
!6145 = !DILocation(line: 1164, column: 14, scope: !6141)
!6146 = !DILocation(line: 1164, column: 24, scope: !6141)
!6147 = !DILocation(line: 1166, column: 2, scope: !6141)
!6148 = !DILocation(line: 1168, column: 6, scope: !6149)
!6149 = distinct !DILexicalBlock(scope: !6057, file: !3, line: 1168, column: 6)
!6150 = !DILocation(line: 1168, column: 13, scope: !6149)
!6151 = !DILocation(line: 1168, column: 6, scope: !6057)
!6152 = !DILocation(line: 1169, column: 3, scope: !6149)
!6153 = !DILocation(line: 1169, column: 14, scope: !6149)
!6154 = !DILocation(line: 1169, column: 24, scope: !6149)
!6155 = !DILocation(line: 1173, column: 7, scope: !6156)
!6156 = distinct !DILexicalBlock(scope: !6057, file: !3, line: 1173, column: 6)
!6157 = !DILocation(line: 1173, column: 14, scope: !6156)
!6158 = !DILocation(line: 1173, column: 6, scope: !6057)
!6159 = !DILocation(line: 1174, column: 3, scope: !6160)
!6160 = distinct !DILexicalBlock(scope: !6156, file: !3, line: 1173, column: 26)
!6161 = !DILocation(line: 1174, column: 14, scope: !6160)
!6162 = !DILocation(line: 1174, column: 29, scope: !6160)
!6163 = !DILocation(line: 1175, column: 3, scope: !6160)
!6164 = !DILocation(line: 1175, column: 14, scope: !6160)
!6165 = !DILocation(line: 1175, column: 30, scope: !6160)
!6166 = !DILocation(line: 1176, column: 2, scope: !6160)
!6167 = !DILocation(line: 1178, column: 25, scope: !6057)
!6168 = !DILocation(line: 1178, column: 32, scope: !6057)
!6169 = !DILocation(line: 1178, column: 2, scope: !6057)
!6170 = !DILocation(line: 1178, column: 13, scope: !6057)
!6171 = !DILocation(line: 1178, column: 23, scope: !6057)
!6172 = !DILocation(line: 1181, column: 6, scope: !6173)
!6173 = distinct !DILexicalBlock(scope: !6057, file: !3, line: 1181, column: 6)
!6174 = !DILocation(line: 1181, column: 13, scope: !6173)
!6175 = !DILocation(line: 1181, column: 6, scope: !6057)
!6176 = !DILocation(line: 1182, column: 3, scope: !6177)
!6177 = distinct !DILexicalBlock(scope: !6173, file: !3, line: 1181, column: 21)
!6178 = !DILocation(line: 1182, column: 14, scope: !6177)
!6179 = !DILocation(line: 1182, column: 23, scope: !6177)
!6180 = !DILocation(line: 1183, column: 3, scope: !6177)
!6181 = !DILocation(line: 1183, column: 14, scope: !6177)
!6182 = !DILocation(line: 1183, column: 24, scope: !6177)
!6183 = !DILocation(line: 1185, column: 25, scope: !6177)
!6184 = !DILocation(line: 1185, column: 36, scope: !6177)
!6185 = !DILocation(line: 1185, column: 3, scope: !6177)
!6186 = !DILocation(line: 1186, column: 2, scope: !6177)
!6187 = !DILocation(line: 1188, column: 23, scope: !6057)
!6188 = !DILocation(line: 1188, column: 30, scope: !6057)
!6189 = !DILocation(line: 1188, column: 2, scope: !6057)
!6190 = !DILocation(line: 1188, column: 13, scope: !6057)
!6191 = !DILocation(line: 1188, column: 21, scope: !6057)
!6192 = !DILocation(line: 1189, column: 2, scope: !6057)
!6193 = !DILocation(line: 1189, column: 13, scope: !6057)
!6194 = !DILocation(line: 1189, column: 25, scope: !6057)
!6195 = !DILocation(line: 1190, column: 2, scope: !6057)
!6196 = !DILocation(line: 1190, column: 13, scope: !6057)
!6197 = !DILocation(line: 1190, column: 24, scope: !6057)
!6198 = !DILocation(line: 1192, column: 9, scope: !6199)
!6199 = distinct !DILexicalBlock(scope: !6057, file: !3, line: 1192, column: 2)
!6200 = !DILocation(line: 1192, column: 7, scope: !6199)
!6201 = !DILocation(line: 1192, column: 14, scope: !6202)
!6202 = distinct !DILexicalBlock(scope: !6199, file: !3, line: 1192, column: 2)
!6203 = !DILocation(line: 1192, column: 16, scope: !6202)
!6204 = !DILocation(line: 1192, column: 2, scope: !6199)
!6205 = !DILocation(line: 1193, column: 7, scope: !6206)
!6206 = distinct !DILexicalBlock(scope: !6207, file: !3, line: 1193, column: 7)
!6207 = distinct !DILexicalBlock(scope: !6202, file: !3, line: 1192, column: 42)
!6208 = !DILocation(line: 1193, column: 14, scope: !6206)
!6209 = !DILocation(line: 1193, column: 22, scope: !6206)
!6210 = !DILocation(line: 1193, column: 25, scope: !6206)
!6211 = !DILocation(line: 1193, column: 41, scope: !6206)
!6212 = !DILocation(line: 1194, column: 7, scope: !6206)
!6213 = !DILocation(line: 1194, column: 14, scope: !6206)
!6214 = !DILocation(line: 1194, column: 22, scope: !6206)
!6215 = !DILocation(line: 1194, column: 25, scope: !6206)
!6216 = !DILocation(line: 1194, column: 43, scope: !6206)
!6217 = !DILocation(line: 1195, column: 7, scope: !6206)
!6218 = !DILocation(line: 1195, column: 14, scope: !6206)
!6219 = !DILocation(line: 1195, column: 22, scope: !6206)
!6220 = !DILocation(line: 1195, column: 25, scope: !6206)
!6221 = !DILocation(line: 1193, column: 7, scope: !6207)
!6222 = !DILocation(line: 1196, column: 14, scope: !6223)
!6223 = distinct !DILexicalBlock(scope: !6206, file: !3, line: 1195, column: 42)
!6224 = !DILocation(line: 1196, column: 21, scope: !6223)
!6225 = !DILocation(line: 1196, column: 29, scope: !6223)
!6226 = !DILocation(line: 1196, column: 33, scope: !6223)
!6227 = !DILocation(line: 1196, column: 44, scope: !6223)
!6228 = !DILocation(line: 1196, column: 4, scope: !6223)
!6229 = !DILocation(line: 1197, column: 3, scope: !6223)
!6230 = !DILocation(line: 1198, column: 2, scope: !6207)
!6231 = !DILocation(line: 1192, column: 38, scope: !6202)
!6232 = !DILocation(line: 1192, column: 2, scope: !6202)
!6233 = distinct !{!6233, !6204, !6234}
!6234 = !DILocation(line: 1198, column: 2, scope: !6199)
!6235 = !DILocation(line: 1199, column: 1, scope: !6057)
!6236 = distinct !DISubprogram(name: "atkbd_enable", scope: !3, file: !3, line: 707, type: !5891, scopeLine: 708, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!6237 = !DILocalVariable(name: "atkbd", arg: 1, scope: !6236, file: !3, line: 707, type: !147)
!6238 = !DILocation(line: 707, column: 47, scope: !6236)
!6239 = !DILocation(line: 709, column: 17, scope: !6236)
!6240 = !DILocation(line: 709, column: 24, scope: !6236)
!6241 = !DILocation(line: 709, column: 31, scope: !6236)
!6242 = !DILocation(line: 709, column: 2, scope: !6236)
!6243 = !DILocation(line: 710, column: 2, scope: !6236)
!6244 = !DILocation(line: 710, column: 9, scope: !6236)
!6245 = !DILocation(line: 710, column: 17, scope: !6236)
!6246 = !DILocation(line: 711, column: 20, scope: !6236)
!6247 = !DILocation(line: 711, column: 27, scope: !6236)
!6248 = !DILocation(line: 711, column: 34, scope: !6236)
!6249 = !DILocation(line: 711, column: 2, scope: !6236)
!6250 = !DILocation(line: 712, column: 1, scope: !6236)
!6251 = distinct !DISubprogram(name: "atkbd_activate", scope: !3, file: !3, line: 726, type: !5638, scopeLine: 727, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!6252 = !DILocalVariable(name: "atkbd", arg: 1, scope: !6251, file: !3, line: 726, type: !147)
!6253 = !DILocation(line: 726, column: 41, scope: !6251)
!6254 = !DILocalVariable(name: "ps2dev", scope: !6251, file: !3, line: 728, type: !5643)
!6255 = !DILocation(line: 728, column: 17, scope: !6251)
!6256 = !DILocation(line: 728, column: 27, scope: !6251)
!6257 = !DILocation(line: 728, column: 34, scope: !6251)
!6258 = !DILocation(line: 734, column: 18, scope: !6259)
!6259 = distinct !DILexicalBlock(scope: !6251, file: !3, line: 734, column: 6)
!6260 = !DILocation(line: 734, column: 6, scope: !6259)
!6261 = !DILocation(line: 734, column: 6, scope: !6251)
!6262 = !DILocation(line: 735, column: 3, scope: !6263)
!6263 = distinct !DILexicalBlock(scope: !6259, file: !3, line: 734, column: 51)
!6264 = !DILocation(line: 738, column: 3, scope: !6263)
!6265 = !DILocation(line: 741, column: 2, scope: !6251)
!6266 = !DILocation(line: 742, column: 1, scope: !6251)
!6267 = distinct !DISubprogram(name: "get_order", scope: !6268, file: !6268, line: 29, type: !6269, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!6268 = !DIFile(filename: "./include/asm-generic/getorder.h", directory: "/home/lizy2001/genbc/linux")
!6269 = !DISubroutineType(types: !6270)
!6270 = !{!132, !136}
!6271 = !DILocalVariable(name: "x", arg: 1, scope: !6272, file: !5081, line: 366, type: !443)
!6272 = distinct !DISubprogram(name: "fls64", scope: !5081, file: !5081, line: 366, type: !6273, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!6273 = !DISubroutineType(types: !6274)
!6274 = !{!132, !443}
!6275 = !DILocation(line: 366, column: 40, scope: !6272, inlinedAt: !6276)
!6276 = distinct !DILocation(line: 46, column: 9, scope: !6267)
!6277 = !DILocalVariable(name: "bitpos", scope: !6272, file: !5081, line: 368, type: !132)
!6278 = !DILocation(line: 368, column: 6, scope: !6272, inlinedAt: !6276)
!6279 = !DILocalVariable(name: "size", arg: 1, scope: !6267, file: !6268, line: 29, type: !136)
!6280 = !DILocation(line: 29, column: 63, scope: !6267)
!6281 = !DILocation(line: 31, column: 27, scope: !6282)
!6282 = distinct !DILexicalBlock(scope: !6267, file: !6268, line: 31, column: 6)
!6283 = !DILocation(line: 31, column: 6, scope: !6282)
!6284 = !DILocation(line: 31, column: 6, scope: !6267)
!6285 = !DILocation(line: 32, column: 8, scope: !6286)
!6286 = distinct !DILexicalBlock(scope: !6287, file: !6268, line: 32, column: 7)
!6287 = distinct !DILexicalBlock(scope: !6282, file: !6268, line: 31, column: 34)
!6288 = !DILocation(line: 32, column: 7, scope: !6287)
!6289 = !DILocation(line: 33, column: 4, scope: !6286)
!6290 = !DILocation(line: 35, column: 7, scope: !6291)
!6291 = distinct !DILexicalBlock(scope: !6287, file: !6268, line: 35, column: 7)
!6292 = !DILocation(line: 35, column: 12, scope: !6291)
!6293 = !DILocation(line: 35, column: 7, scope: !6287)
!6294 = !DILocation(line: 36, column: 4, scope: !6291)
!6295 = !DILocation(line: 38, column: 10, scope: !6287)
!6296 = !DILocation(line: 38, column: 28, scope: !6287)
!6297 = !DILocation(line: 38, column: 41, scope: !6287)
!6298 = !DILocation(line: 38, column: 3, scope: !6287)
!6299 = !DILocation(line: 41, column: 6, scope: !6267)
!6300 = !DILocation(line: 42, column: 7, scope: !6267)
!6301 = !DILocation(line: 46, column: 15, scope: !6267)
!6302 = !DILocation(line: 374, column: 2, scope: !6272, inlinedAt: !6276)
!6303 = !DILocation(line: 376, column: 14, scope: !6272, inlinedAt: !6276)
!6304 = !{i32 289436}
!6305 = !DILocation(line: 377, column: 9, scope: !6272, inlinedAt: !6276)
!6306 = !DILocation(line: 377, column: 16, scope: !6272, inlinedAt: !6276)
!6307 = !DILocation(line: 46, column: 2, scope: !6267)
!6308 = !DILocation(line: 48, column: 1, scope: !6267)
!6309 = distinct !DISubprogram(name: "__ilog2_u64", scope: !6310, file: !6310, line: 30, type: !6311, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!6310 = !DIFile(filename: "./include/linux/log2.h", directory: "/home/lizy2001/genbc/linux")
!6311 = !DISubroutineType(types: !6312)
!6312 = !{!132, !442}
!6313 = !DILocation(line: 366, column: 40, scope: !6272, inlinedAt: !6314)
!6314 = distinct !DILocation(line: 32, column: 9, scope: !6309)
!6315 = !DILocation(line: 368, column: 6, scope: !6272, inlinedAt: !6314)
!6316 = !DILocalVariable(name: "n", arg: 1, scope: !6309, file: !6310, line: 30, type: !442)
!6317 = !DILocation(line: 30, column: 21, scope: !6309)
!6318 = !DILocation(line: 32, column: 15, scope: !6309)
!6319 = !DILocation(line: 374, column: 2, scope: !6272, inlinedAt: !6314)
!6320 = !DILocation(line: 376, column: 14, scope: !6272, inlinedAt: !6314)
!6321 = !DILocation(line: 377, column: 9, scope: !6272, inlinedAt: !6314)
!6322 = !DILocation(line: 377, column: 16, scope: !6272, inlinedAt: !6314)
!6323 = !DILocation(line: 32, column: 18, scope: !6309)
!6324 = !DILocation(line: 32, column: 2, scope: !6309)
!6325 = distinct !DISubprogram(name: "kasan_kmalloc", scope: !2056, file: !2056, line: 137, type: !6326, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!6326 = !DISubroutineType(types: !6327)
!6327 = !{!139, !956, !3070, !344, !137}
!6328 = !DILocalVariable(name: "s", arg: 1, scope: !6325, file: !2056, line: 137, type: !956)
!6329 = !DILocation(line: 137, column: 54, scope: !6325)
!6330 = !DILocalVariable(name: "object", arg: 2, scope: !6325, file: !2056, line: 137, type: !3070)
!6331 = !DILocation(line: 137, column: 69, scope: !6325)
!6332 = !DILocalVariable(name: "size", arg: 3, scope: !6325, file: !2056, line: 138, type: !344)
!6333 = !DILocation(line: 138, column: 12, scope: !6325)
!6334 = !DILocalVariable(name: "flags", arg: 4, scope: !6325, file: !2056, line: 138, type: !137)
!6335 = !DILocation(line: 138, column: 24, scope: !6325)
!6336 = !DILocation(line: 140, column: 17, scope: !6325)
!6337 = !DILocation(line: 140, column: 2, scope: !6325)
!6338 = distinct !DISubprogram(name: "schedule_delayed_work", scope: !92, file: !92, line: 623, type: !6339, scopeLine: 625, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!6339 = !DISubroutineType(types: !6340)
!6340 = !{!171, !6341, !136}
!6341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3983, size: 64)
!6342 = !DILocalVariable(name: "dwork", arg: 1, scope: !6338, file: !92, line: 623, type: !6341)
!6343 = !DILocation(line: 623, column: 63, scope: !6338)
!6344 = !DILocalVariable(name: "delay", arg: 2, scope: !6338, file: !92, line: 624, type: !136)
!6345 = !DILocation(line: 624, column: 21, scope: !6338)
!6346 = !DILocation(line: 626, column: 28, scope: !6338)
!6347 = !DILocation(line: 626, column: 39, scope: !6338)
!6348 = !DILocation(line: 626, column: 46, scope: !6338)
!6349 = !DILocation(line: 626, column: 9, scope: !6338)
!6350 = !DILocation(line: 626, column: 2, scope: !6338)
!6351 = distinct !DISubprogram(name: "test_and_clear_bit", scope: !6352, file: !6352, line: 81, type: !6353, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!6352 = !DIFile(filename: "./include/asm-generic/bitops/instrumented-atomic.h", directory: "/home/lizy2001/genbc/linux")
!6353 = !DISubroutineType(types: !6354)
!6354 = !{!171, !93, !5177}
!6355 = !DILocalVariable(name: "nr", arg: 1, scope: !6356, file: !5081, line: 160, type: !93)
!6356 = distinct !DISubprogram(name: "arch_test_and_clear_bit", scope: !5081, file: !5081, line: 160, type: !6353, scopeLine: 161, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!6357 = !DILocation(line: 160, column: 30, scope: !6356, inlinedAt: !6358)
!6358 = distinct !DILocation(line: 84, column: 9, scope: !6351)
!6359 = !DILocalVariable(name: "addr", arg: 2, scope: !6356, file: !5081, line: 160, type: !5177)
!6360 = !DILocation(line: 160, column: 58, scope: !6356, inlinedAt: !6358)
!6361 = !DILocalVariable(name: "c", scope: !6362, file: !5081, line: 162, type: !171)
!6362 = distinct !DILexicalBlock(scope: !6356, file: !5081, line: 162, column: 9)
!6363 = !DILocation(line: 162, column: 9, scope: !6362, inlinedAt: !6358)
!6364 = !DILocalVariable(name: "v", arg: 1, scope: !6365, file: !5096, line: 99, type: !5099)
!6365 = distinct !DISubprogram(name: "instrument_atomic_read_write", scope: !5096, file: !5096, line: 99, type: !5097, scopeLine: 100, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!6366 = !DILocation(line: 99, column: 79, scope: !6365, inlinedAt: !6367)
!6367 = distinct !DILocation(line: 83, column: 2, scope: !6351)
!6368 = !DILocalVariable(name: "size", arg: 2, scope: !6365, file: !5096, line: 99, type: !344)
!6369 = !DILocation(line: 99, column: 89, scope: !6365, inlinedAt: !6367)
!6370 = !DILocalVariable(name: "nr", arg: 1, scope: !6351, file: !6352, line: 81, type: !93)
!6371 = !DILocation(line: 81, column: 44, scope: !6351)
!6372 = !DILocalVariable(name: "addr", arg: 2, scope: !6351, file: !6352, line: 81, type: !5177)
!6373 = !DILocation(line: 81, column: 72, scope: !6351)
!6374 = !DILocation(line: 83, column: 31, scope: !6351)
!6375 = !DILocation(line: 83, column: 38, scope: !6351)
!6376 = !DILocation(line: 83, column: 36, scope: !6351)
!6377 = !DILocation(line: 101, column: 20, scope: !6365, inlinedAt: !6367)
!6378 = !DILocation(line: 101, column: 23, scope: !6365, inlinedAt: !6367)
!6379 = !DILocation(line: 101, column: 2, scope: !6365, inlinedAt: !6367)
!6380 = !DILocation(line: 102, column: 2, scope: !6365, inlinedAt: !6367)
!6381 = !DILocation(line: 84, column: 33, scope: !6351)
!6382 = !DILocation(line: 84, column: 37, scope: !6351)
!6383 = !{i32 -2147156387, i32 -2147156291}
!6384 = !DILocation(line: 84, column: 2, scope: !6351)
!6385 = distinct !DISubprogram(name: "atkbd_set_leds", scope: !3, file: !3, line: 598, type: !5638, scopeLine: 599, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!6386 = !DILocalVariable(name: "atkbd", arg: 1, scope: !6385, file: !3, line: 598, type: !147)
!6387 = !DILocation(line: 598, column: 41, scope: !6385)
!6388 = !DILocalVariable(name: "dev", scope: !6385, file: !3, line: 600, type: !3682)
!6389 = !DILocation(line: 600, column: 20, scope: !6385)
!6390 = !DILocation(line: 600, column: 26, scope: !6385)
!6391 = !DILocation(line: 600, column: 33, scope: !6385)
!6392 = !DILocalVariable(name: "param", scope: !6385, file: !3, line: 601, type: !5648)
!6393 = !DILocation(line: 601, column: 16, scope: !6385)
!6394 = !DILocation(line: 603, column: 36, scope: !6385)
!6395 = !DILocation(line: 603, column: 41, scope: !6385)
!6396 = !DILocation(line: 603, column: 14, scope: !6385)
!6397 = !DILocation(line: 604, column: 29, scope: !6385)
!6398 = !DILocation(line: 604, column: 34, scope: !6385)
!6399 = !DILocation(line: 604, column: 7, scope: !6385)
!6400 = !DILocation(line: 604, column: 4, scope: !6385)
!6401 = !DILocation(line: 605, column: 29, scope: !6385)
!6402 = !DILocation(line: 605, column: 34, scope: !6385)
!6403 = !DILocation(line: 605, column: 7, scope: !6385)
!6404 = !DILocation(line: 605, column: 4, scope: !6385)
!6405 = !DILocation(line: 603, column: 13, scope: !6385)
!6406 = !DILocation(line: 603, column: 2, scope: !6385)
!6407 = !DILocation(line: 603, column: 11, scope: !6385)
!6408 = !DILocation(line: 606, column: 19, scope: !6409)
!6409 = distinct !DILexicalBlock(scope: !6385, file: !3, line: 606, column: 6)
!6410 = !DILocation(line: 606, column: 26, scope: !6409)
!6411 = !DILocation(line: 606, column: 34, scope: !6409)
!6412 = !DILocation(line: 606, column: 6, scope: !6409)
!6413 = !DILocation(line: 606, column: 6, scope: !6385)
!6414 = !DILocation(line: 607, column: 3, scope: !6409)
!6415 = !DILocation(line: 609, column: 6, scope: !6416)
!6416 = distinct !DILexicalBlock(scope: !6385, file: !3, line: 609, column: 6)
!6417 = !DILocation(line: 609, column: 13, scope: !6416)
!6418 = !DILocation(line: 609, column: 6, scope: !6385)
!6419 = !DILocation(line: 610, column: 3, scope: !6420)
!6420 = distinct !DILexicalBlock(scope: !6416, file: !3, line: 609, column: 20)
!6421 = !DILocation(line: 610, column: 12, scope: !6420)
!6422 = !DILocation(line: 611, column: 37, scope: !6420)
!6423 = !DILocation(line: 611, column: 42, scope: !6420)
!6424 = !DILocation(line: 611, column: 15, scope: !6420)
!6425 = !DILocation(line: 612, column: 30, scope: !6420)
!6426 = !DILocation(line: 612, column: 35, scope: !6420)
!6427 = !DILocation(line: 612, column: 8, scope: !6420)
!6428 = !DILocation(line: 612, column: 5, scope: !6420)
!6429 = !DILocation(line: 613, column: 30, scope: !6420)
!6430 = !DILocation(line: 613, column: 35, scope: !6420)
!6431 = !DILocation(line: 613, column: 8, scope: !6420)
!6432 = !DILocation(line: 613, column: 5, scope: !6420)
!6433 = !DILocation(line: 614, column: 30, scope: !6420)
!6434 = !DILocation(line: 614, column: 35, scope: !6420)
!6435 = !DILocation(line: 614, column: 8, scope: !6420)
!6436 = !DILocation(line: 614, column: 5, scope: !6420)
!6437 = !DILocation(line: 615, column: 30, scope: !6420)
!6438 = !DILocation(line: 615, column: 35, scope: !6420)
!6439 = !DILocation(line: 615, column: 8, scope: !6420)
!6440 = !DILocation(line: 615, column: 5, scope: !6420)
!6441 = !DILocation(line: 611, column: 14, scope: !6420)
!6442 = !DILocation(line: 611, column: 3, scope: !6420)
!6443 = !DILocation(line: 611, column: 12, scope: !6420)
!6444 = !DILocation(line: 616, column: 20, scope: !6445)
!6445 = distinct !DILexicalBlock(scope: !6420, file: !3, line: 616, column: 7)
!6446 = !DILocation(line: 616, column: 27, scope: !6445)
!6447 = !DILocation(line: 616, column: 35, scope: !6445)
!6448 = !DILocation(line: 616, column: 7, scope: !6445)
!6449 = !DILocation(line: 616, column: 7, scope: !6420)
!6450 = !DILocation(line: 617, column: 4, scope: !6445)
!6451 = !DILocation(line: 618, column: 2, scope: !6420)
!6452 = !DILocation(line: 620, column: 2, scope: !6385)
!6453 = !DILocation(line: 621, column: 1, scope: !6385)
!6454 = distinct !DISubprogram(name: "atkbd_set_repeat_rate", scope: !3, file: !3, line: 574, type: !5638, scopeLine: 575, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!6455 = !DILocalVariable(name: "atkbd", arg: 1, scope: !6454, file: !3, line: 574, type: !147)
!6456 = !DILocation(line: 574, column: 48, scope: !6454)
!6457 = !DILocalVariable(name: "period", scope: !6454, file: !3, line: 576, type: !6458)
!6458 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6459, size: 512, elements: !163)
!6459 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1146)
!6460 = !DILocation(line: 576, column: 14, scope: !6454)
!6461 = !DILocalVariable(name: "delay", scope: !6454, file: !3, line: 579, type: !6462)
!6462 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6459, size: 64, elements: !1096)
!6463 = !DILocation(line: 579, column: 14, scope: !6454)
!6464 = !DILocalVariable(name: "dev", scope: !6454, file: !3, line: 582, type: !3682)
!6465 = !DILocation(line: 582, column: 20, scope: !6454)
!6466 = !DILocation(line: 582, column: 26, scope: !6454)
!6467 = !DILocation(line: 582, column: 33, scope: !6454)
!6468 = !DILocalVariable(name: "param", scope: !6454, file: !3, line: 583, type: !180)
!6469 = !DILocation(line: 583, column: 16, scope: !6454)
!6470 = !DILocalVariable(name: "i", scope: !6454, file: !3, line: 584, type: !132)
!6471 = !DILocation(line: 584, column: 6, scope: !6454)
!6472 = !DILocalVariable(name: "j", scope: !6454, file: !3, line: 584, type: !132)
!6473 = !DILocation(line: 584, column: 13, scope: !6454)
!6474 = !DILocation(line: 586, column: 2, scope: !6454)
!6475 = !DILocation(line: 586, column: 9, scope: !6454)
!6476 = !DILocation(line: 586, column: 11, scope: !6454)
!6477 = !DILocation(line: 586, column: 36, scope: !6454)
!6478 = !DILocation(line: 586, column: 46, scope: !6454)
!6479 = !DILocation(line: 586, column: 39, scope: !6454)
!6480 = !DILocation(line: 586, column: 51, scope: !6454)
!6481 = !DILocation(line: 586, column: 56, scope: !6454)
!6482 = !DILocation(line: 586, column: 49, scope: !6454)
!6483 = !DILocation(line: 0, scope: !6454)
!6484 = !DILocation(line: 587, column: 4, scope: !6454)
!6485 = distinct !{!6485, !6474, !6484}
!6486 = !DILocation(line: 588, column: 32, scope: !6454)
!6487 = !DILocation(line: 588, column: 25, scope: !6454)
!6488 = !DILocation(line: 588, column: 2, scope: !6454)
!6489 = !DILocation(line: 588, column: 7, scope: !6454)
!6490 = !DILocation(line: 588, column: 23, scope: !6454)
!6491 = !DILocation(line: 590, column: 2, scope: !6454)
!6492 = !DILocation(line: 590, column: 9, scope: !6454)
!6493 = !DILocation(line: 590, column: 11, scope: !6454)
!6494 = !DILocation(line: 590, column: 35, scope: !6454)
!6495 = !DILocation(line: 590, column: 44, scope: !6454)
!6496 = !DILocation(line: 590, column: 38, scope: !6454)
!6497 = !DILocation(line: 590, column: 49, scope: !6454)
!6498 = !DILocation(line: 590, column: 54, scope: !6454)
!6499 = !DILocation(line: 590, column: 47, scope: !6454)
!6500 = !DILocation(line: 591, column: 4, scope: !6454)
!6501 = distinct !{!6501, !6491, !6500}
!6502 = !DILocation(line: 592, column: 30, scope: !6454)
!6503 = !DILocation(line: 592, column: 24, scope: !6454)
!6504 = !DILocation(line: 592, column: 2, scope: !6454)
!6505 = !DILocation(line: 592, column: 7, scope: !6454)
!6506 = !DILocation(line: 592, column: 22, scope: !6454)
!6507 = !DILocation(line: 594, column: 10, scope: !6454)
!6508 = !DILocation(line: 594, column: 15, scope: !6454)
!6509 = !DILocation(line: 594, column: 17, scope: !6454)
!6510 = !DILocation(line: 594, column: 12, scope: !6454)
!6511 = !DILocation(line: 594, column: 8, scope: !6454)
!6512 = !DILocation(line: 595, column: 22, scope: !6454)
!6513 = !DILocation(line: 595, column: 29, scope: !6454)
!6514 = !DILocation(line: 595, column: 9, scope: !6454)
!6515 = !DILocation(line: 595, column: 2, scope: !6454)
!6516 = distinct !DISubprogram(name: "queue_delayed_work", scope: !92, file: !92, line: 518, type: !6517, scopeLine: 521, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!6517 = !DISubroutineType(types: !6518)
!6518 = !{!171, !2657, !6341, !136}
!6519 = !DILocalVariable(name: "wq", arg: 1, scope: !6516, file: !92, line: 518, type: !2657)
!6520 = !DILocation(line: 518, column: 64, scope: !6516)
!6521 = !DILocalVariable(name: "dwork", arg: 2, scope: !6516, file: !92, line: 519, type: !6341)
!6522 = !DILocation(line: 519, column: 32, scope: !6516)
!6523 = !DILocalVariable(name: "delay", arg: 3, scope: !6516, file: !92, line: 520, type: !136)
!6524 = !DILocation(line: 520, column: 25, scope: !6516)
!6525 = !DILocation(line: 522, column: 49, scope: !6516)
!6526 = !DILocation(line: 522, column: 53, scope: !6516)
!6527 = !DILocation(line: 522, column: 60, scope: !6516)
!6528 = !DILocation(line: 522, column: 9, scope: !6516)
!6529 = !DILocation(line: 522, column: 2, scope: !6516)
!6530 = distinct !DISubprogram(name: "dev_set_drvdata", scope: !60, file: !60, line: 660, type: !6531, scopeLine: 661, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!6531 = !DISubroutineType(types: !6532)
!6532 = !{null, !255, !139}
!6533 = !DILocalVariable(name: "dev", arg: 1, scope: !6530, file: !60, line: 660, type: !255)
!6534 = !DILocation(line: 660, column: 51, scope: !6530)
!6535 = !DILocalVariable(name: "data", arg: 2, scope: !6530, file: !60, line: 660, type: !139)
!6536 = !DILocation(line: 660, column: 62, scope: !6530)
!6537 = !DILocation(line: 662, column: 21, scope: !6530)
!6538 = !DILocation(line: 662, column: 2, scope: !6530)
!6539 = !DILocation(line: 662, column: 7, scope: !6530)
!6540 = !DILocation(line: 662, column: 19, scope: !6530)
!6541 = !DILocation(line: 663, column: 1, scope: !6530)
!6542 = distinct !DISubprogram(name: "atkbd_deactivate", scope: !3, file: !3, line: 749, type: !5891, scopeLine: 750, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!6543 = !DILocalVariable(name: "atkbd", arg: 1, scope: !6542, file: !3, line: 749, type: !147)
!6544 = !DILocation(line: 749, column: 44, scope: !6542)
!6545 = !DILocalVariable(name: "ps2dev", scope: !6542, file: !3, line: 751, type: !5643)
!6546 = !DILocation(line: 751, column: 17, scope: !6542)
!6547 = !DILocation(line: 751, column: 27, scope: !6542)
!6548 = !DILocation(line: 751, column: 34, scope: !6542)
!6549 = !DILocation(line: 753, column: 18, scope: !6550)
!6550 = distinct !DILexicalBlock(scope: !6542, file: !3, line: 753, column: 6)
!6551 = !DILocation(line: 753, column: 6, scope: !6550)
!6552 = !DILocation(line: 753, column: 6, scope: !6542)
!6553 = !DILocation(line: 754, column: 3, scope: !6550)
!6554 = !DILocation(line: 757, column: 1, scope: !6542)
!6555 = distinct !DISubprogram(name: "device_property_count_u32", scope: !6556, file: !6556, line: 163, type: !6557, scopeLine: 164, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!6556 = !DIFile(filename: "./include/linux/property.h", directory: "/home/lizy2001/genbc/linux")
!6557 = !DISubroutineType(types: !6558)
!6558 = !{!132, !255, !223}
!6559 = !DILocalVariable(name: "dev", arg: 1, scope: !6555, file: !6556, line: 163, type: !255)
!6560 = !DILocation(line: 163, column: 60, scope: !6555)
!6561 = !DILocalVariable(name: "propname", arg: 2, scope: !6555, file: !6556, line: 163, type: !223)
!6562 = !DILocation(line: 163, column: 77, scope: !6555)
!6563 = !DILocation(line: 165, column: 40, scope: !6555)
!6564 = !DILocation(line: 165, column: 45, scope: !6555)
!6565 = !DILocation(line: 165, column: 9, scope: !6555)
!6566 = !DILocation(line: 165, column: 2, scope: !6555)
!6567 = distinct !DISubprogram(name: "bitmap_zero", scope: !6568, file: !6568, line: 235, type: !6569, scopeLine: 236, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!6568 = !DIFile(filename: "./include/linux/bitmap.h", directory: "/home/lizy2001/genbc/linux")
!6569 = !DISubroutineType(types: !6570)
!6570 = !{null, !135, !7}
!6571 = !DILocalVariable(name: "dst", arg: 1, scope: !6567, file: !6568, line: 235, type: !135)
!6572 = !DILocation(line: 235, column: 47, scope: !6567)
!6573 = !DILocalVariable(name: "nbits", arg: 2, scope: !6567, file: !6568, line: 235, type: !7)
!6574 = !DILocation(line: 235, column: 65, scope: !6567)
!6575 = !DILocalVariable(name: "len", scope: !6567, file: !6568, line: 237, type: !7)
!6576 = !DILocation(line: 237, column: 15, scope: !6567)
!6577 = !DILocation(line: 237, column: 21, scope: !6567)
!6578 = !DILocation(line: 237, column: 42, scope: !6567)
!6579 = !DILocation(line: 238, column: 9, scope: !6567)
!6580 = !DILocation(line: 238, column: 2, scope: !6567)
!6581 = !DILocation(line: 238, column: 17, scope: !6567)
!6582 = !DILocation(line: 239, column: 1, scope: !6567)
!6583 = distinct !DISubprogram(name: "atkbd_get_keymap_from_fwnode", scope: !3, file: !3, line: 1038, type: !5638, scopeLine: 1039, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!6584 = !DILocalVariable(name: "atkbd", arg: 1, scope: !6583, file: !3, line: 1038, type: !147)
!6585 = !DILocation(line: 1038, column: 55, scope: !6583)
!6586 = !DILocalVariable(name: "dev", scope: !6583, file: !3, line: 1040, type: !255)
!6587 = !DILocation(line: 1040, column: 17, scope: !6583)
!6588 = !DILocation(line: 1040, column: 24, scope: !6583)
!6589 = !DILocation(line: 1040, column: 31, scope: !6583)
!6590 = !DILocation(line: 1040, column: 38, scope: !6583)
!6591 = !DILocation(line: 1040, column: 45, scope: !6583)
!6592 = !DILocalVariable(name: "i", scope: !6583, file: !3, line: 1041, type: !132)
!6593 = !DILocation(line: 1041, column: 6, scope: !6583)
!6594 = !DILocalVariable(name: "n", scope: !6583, file: !3, line: 1041, type: !132)
!6595 = !DILocation(line: 1041, column: 9, scope: !6583)
!6596 = !DILocalVariable(name: "ptr", scope: !6583, file: !3, line: 1042, type: !1354)
!6597 = !DILocation(line: 1042, column: 7, scope: !6583)
!6598 = !DILocalVariable(name: "scancode", scope: !6583, file: !3, line: 1043, type: !880)
!6599 = !DILocation(line: 1043, column: 6, scope: !6583)
!6600 = !DILocalVariable(name: "keycode", scope: !6583, file: !3, line: 1043, type: !880)
!6601 = !DILocation(line: 1043, column: 16, scope: !6583)
!6602 = !DILocation(line: 1046, column: 32, scope: !6583)
!6603 = !DILocation(line: 1046, column: 6, scope: !6583)
!6604 = !DILocation(line: 1046, column: 4, scope: !6583)
!6605 = !DILocation(line: 1047, column: 6, scope: !6606)
!6606 = distinct !DILexicalBlock(scope: !6583, file: !3, line: 1047, column: 6)
!6607 = !DILocation(line: 1047, column: 8, scope: !6606)
!6608 = !DILocation(line: 1047, column: 13, scope: !6606)
!6609 = !DILocation(line: 1047, column: 16, scope: !6606)
!6610 = !DILocation(line: 1047, column: 18, scope: !6606)
!6611 = !DILocation(line: 1047, column: 6, scope: !6583)
!6612 = !DILocation(line: 1048, column: 3, scope: !6606)
!6613 = !DILocation(line: 1050, column: 16, scope: !6583)
!6614 = !DILocation(line: 1050, column: 8, scope: !6583)
!6615 = !DILocation(line: 1050, column: 6, scope: !6583)
!6616 = !DILocation(line: 1051, column: 7, scope: !6617)
!6617 = distinct !DILexicalBlock(scope: !6583, file: !3, line: 1051, column: 6)
!6618 = !DILocation(line: 1051, column: 6, scope: !6583)
!6619 = !DILocation(line: 1052, column: 3, scope: !6617)
!6620 = !DILocation(line: 1054, column: 37, scope: !6621)
!6621 = distinct !DILexicalBlock(scope: !6583, file: !3, line: 1054, column: 6)
!6622 = !DILocation(line: 1054, column: 58, scope: !6621)
!6623 = !DILocation(line: 1054, column: 63, scope: !6621)
!6624 = !DILocation(line: 1054, column: 6, scope: !6621)
!6625 = !DILocation(line: 1054, column: 6, scope: !6583)
!6626 = !DILocation(line: 1055, column: 3, scope: !6627)
!6627 = distinct !DILexicalBlock(scope: !6621, file: !3, line: 1054, column: 67)
!6628 = !DILocation(line: 1056, column: 9, scope: !6627)
!6629 = !DILocation(line: 1056, column: 3, scope: !6627)
!6630 = !DILocation(line: 1057, column: 3, scope: !6627)
!6631 = !DILocation(line: 1060, column: 9, scope: !6583)
!6632 = !DILocation(line: 1060, column: 16, scope: !6583)
!6633 = !DILocation(line: 1060, column: 2, scope: !6583)
!6634 = !DILocation(line: 1061, column: 9, scope: !6635)
!6635 = distinct !DILexicalBlock(scope: !6583, file: !3, line: 1061, column: 2)
!6636 = !DILocation(line: 1061, column: 7, scope: !6635)
!6637 = !DILocation(line: 1061, column: 14, scope: !6638)
!6638 = distinct !DILexicalBlock(scope: !6635, file: !3, line: 1061, column: 2)
!6639 = !DILocation(line: 1061, column: 18, scope: !6638)
!6640 = !DILocation(line: 1061, column: 16, scope: !6638)
!6641 = !DILocation(line: 1061, column: 2, scope: !6635)
!6642 = !DILocation(line: 1062, column: 14, scope: !6643)
!6643 = distinct !DILexicalBlock(scope: !6638, file: !3, line: 1061, column: 26)
!6644 = !DILocation(line: 1062, column: 12, scope: !6643)
!6645 = !DILocation(line: 1063, column: 13, scope: !6643)
!6646 = !DILocation(line: 1063, column: 11, scope: !6643)
!6647 = !DILocation(line: 1064, column: 30, scope: !6643)
!6648 = !DILocation(line: 1064, column: 3, scope: !6643)
!6649 = !DILocation(line: 1064, column: 10, scope: !6643)
!6650 = !DILocation(line: 1064, column: 18, scope: !6643)
!6651 = !DILocation(line: 1064, column: 28, scope: !6643)
!6652 = !DILocation(line: 1065, column: 2, scope: !6643)
!6653 = !DILocation(line: 1061, column: 22, scope: !6638)
!6654 = !DILocation(line: 1061, column: 2, scope: !6638)
!6655 = distinct !{!6655, !6641, !6656}
!6656 = !DILocation(line: 1065, column: 2, scope: !6635)
!6657 = !DILocation(line: 1067, column: 8, scope: !6583)
!6658 = !DILocation(line: 1067, column: 2, scope: !6583)
!6659 = !DILocation(line: 1068, column: 2, scope: !6583)
!6660 = !DILocation(line: 1069, column: 1, scope: !6583)
!6661 = distinct !DISubprogram(name: "kcalloc", scope: !125, file: !125, line: 601, type: !6662, scopeLine: 602, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!6662 = !DISubroutineType(types: !6663)
!6663 = !{!139, !344, !344, !137}
!6664 = !DILocalVariable(name: "n", arg: 1, scope: !6661, file: !125, line: 601, type: !344)
!6665 = !DILocation(line: 601, column: 36, scope: !6661)
!6666 = !DILocalVariable(name: "size", arg: 2, scope: !6661, file: !125, line: 601, type: !344)
!6667 = !DILocation(line: 601, column: 46, scope: !6661)
!6668 = !DILocalVariable(name: "flags", arg: 3, scope: !6661, file: !125, line: 601, type: !137)
!6669 = !DILocation(line: 601, column: 58, scope: !6661)
!6670 = !DILocation(line: 603, column: 23, scope: !6661)
!6671 = !DILocation(line: 603, column: 26, scope: !6661)
!6672 = !DILocation(line: 603, column: 32, scope: !6661)
!6673 = !DILocation(line: 603, column: 38, scope: !6661)
!6674 = !DILocation(line: 603, column: 9, scope: !6661)
!6675 = !DILocation(line: 603, column: 2, scope: !6661)
!6676 = distinct !DISubprogram(name: "kmalloc_array", scope: !125, file: !125, line: 584, type: !6662, scopeLine: 585, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!6677 = !DILocation(line: 445, column: 72, scope: !5274, inlinedAt: !6678)
!6678 = distinct !DILocation(line: 552, column: 10, scope: !5279, inlinedAt: !6679)
!6679 = distinct !DILocation(line: 591, column: 10, scope: !6680)
!6680 = distinct !DILexicalBlock(scope: !6676, file: !125, line: 590, column: 6)
!6681 = !DILocation(line: 446, column: 9, scope: !5274, inlinedAt: !6678)
!6682 = !DILocation(line: 446, column: 23, scope: !5274, inlinedAt: !6678)
!6683 = !DILocation(line: 448, column: 8, scope: !5274, inlinedAt: !6678)
!6684 = !DILocation(line: 318, column: 67, scope: !5290, inlinedAt: !6685)
!6685 = distinct !DILocation(line: 553, column: 20, scope: !5279, inlinedAt: !6679)
!6686 = !DILocation(line: 346, column: 58, scope: !5296, inlinedAt: !6687)
!6687 = distinct !DILocation(line: 547, column: 11, scope: !5279, inlinedAt: !6679)
!6688 = !DILocation(line: 472, column: 28, scope: !5302, inlinedAt: !6689)
!6689 = distinct !DILocation(line: 481, column: 9, scope: !5307, inlinedAt: !6690)
!6690 = distinct !DILocation(line: 545, column: 11, scope: !5309, inlinedAt: !6679)
!6691 = !DILocation(line: 472, column: 40, scope: !5302, inlinedAt: !6689)
!6692 = !DILocation(line: 472, column: 60, scope: !5302, inlinedAt: !6689)
!6693 = !DILocation(line: 478, column: 51, scope: !5307, inlinedAt: !6690)
!6694 = !DILocation(line: 478, column: 63, scope: !5307, inlinedAt: !6690)
!6695 = !DILocation(line: 480, column: 15, scope: !5307, inlinedAt: !6690)
!6696 = !DILocation(line: 538, column: 45, scope: !5281, inlinedAt: !6679)
!6697 = !DILocation(line: 538, column: 57, scope: !5281, inlinedAt: !6679)
!6698 = !DILocation(line: 542, column: 16, scope: !5279, inlinedAt: !6679)
!6699 = !DILocalVariable(name: "n", arg: 1, scope: !6676, file: !125, line: 584, type: !344)
!6700 = !DILocation(line: 584, column: 42, scope: !6676)
!6701 = !DILocalVariable(name: "size", arg: 2, scope: !6676, file: !125, line: 584, type: !344)
!6702 = !DILocation(line: 584, column: 52, scope: !6676)
!6703 = !DILocalVariable(name: "flags", arg: 3, scope: !6676, file: !125, line: 584, type: !137)
!6704 = !DILocation(line: 584, column: 64, scope: !6676)
!6705 = !DILocalVariable(name: "bytes", scope: !6676, file: !125, line: 586, type: !344)
!6706 = !DILocation(line: 586, column: 9, scope: !6676)
!6707 = !DILocalVariable(name: "__a", scope: !6708, file: !125, line: 588, type: !344)
!6708 = distinct !DILexicalBlock(scope: !6709, file: !125, line: 588, column: 6)
!6709 = distinct !DILexicalBlock(scope: !6676, file: !125, line: 588, column: 6)
!6710 = !DILocation(line: 588, column: 6, scope: !6708)
!6711 = !DILocalVariable(name: "__b", scope: !6708, file: !125, line: 588, type: !344)
!6712 = !DILocalVariable(name: "__d", scope: !6708, file: !125, line: 588, type: !6713)
!6713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !344, size: 64)
!6714 = !DILocation(line: 588, column: 6, scope: !6709)
!6715 = !DILocation(line: 588, column: 6, scope: !6676)
!6716 = !DILocation(line: 589, column: 3, scope: !6709)
!6717 = !DILocation(line: 590, column: 27, scope: !6680)
!6718 = !DILocation(line: 590, column: 6, scope: !6680)
!6719 = !DILocation(line: 590, column: 30, scope: !6680)
!6720 = !DILocation(line: 590, column: 54, scope: !6680)
!6721 = !DILocation(line: 590, column: 33, scope: !6680)
!6722 = !DILocation(line: 590, column: 6, scope: !6676)
!6723 = !DILocation(line: 591, column: 18, scope: !6680)
!6724 = !DILocation(line: 591, column: 25, scope: !6680)
!6725 = !DILocation(line: 540, column: 27, scope: !5280, inlinedAt: !6679)
!6726 = !DILocation(line: 540, column: 6, scope: !5280, inlinedAt: !6679)
!6727 = !DILocation(line: 540, column: 6, scope: !5281, inlinedAt: !6679)
!6728 = !DILocation(line: 544, column: 7, scope: !5309, inlinedAt: !6679)
!6729 = !DILocation(line: 544, column: 12, scope: !5309, inlinedAt: !6679)
!6730 = !DILocation(line: 544, column: 7, scope: !5279, inlinedAt: !6679)
!6731 = !DILocation(line: 545, column: 25, scope: !5309, inlinedAt: !6679)
!6732 = !DILocation(line: 545, column: 31, scope: !5309, inlinedAt: !6679)
!6733 = !DILocation(line: 480, column: 33, scope: !5307, inlinedAt: !6690)
!6734 = !DILocation(line: 480, column: 23, scope: !5307, inlinedAt: !6690)
!6735 = !DILocation(line: 481, column: 29, scope: !5307, inlinedAt: !6690)
!6736 = !DILocation(line: 481, column: 35, scope: !5307, inlinedAt: !6690)
!6737 = !DILocation(line: 481, column: 42, scope: !5307, inlinedAt: !6690)
!6738 = !DILocation(line: 474, column: 23, scope: !5302, inlinedAt: !6689)
!6739 = !DILocation(line: 474, column: 29, scope: !5302, inlinedAt: !6689)
!6740 = !DILocation(line: 474, column: 36, scope: !5302, inlinedAt: !6689)
!6741 = !DILocation(line: 474, column: 9, scope: !5302, inlinedAt: !6689)
!6742 = !DILocation(line: 545, column: 4, scope: !5309, inlinedAt: !6679)
!6743 = !DILocation(line: 547, column: 25, scope: !5279, inlinedAt: !6679)
!6744 = !DILocation(line: 348, column: 7, scope: !5353, inlinedAt: !6687)
!6745 = !DILocation(line: 348, column: 6, scope: !5296, inlinedAt: !6687)
!6746 = !DILocation(line: 349, column: 3, scope: !5353, inlinedAt: !6687)
!6747 = !DILocation(line: 351, column: 6, scope: !5357, inlinedAt: !6687)
!6748 = !DILocation(line: 351, column: 11, scope: !5357, inlinedAt: !6687)
!6749 = !DILocation(line: 351, column: 6, scope: !5296, inlinedAt: !6687)
!6750 = !DILocation(line: 352, column: 3, scope: !5357, inlinedAt: !6687)
!6751 = !DILocation(line: 354, column: 32, scope: !5362, inlinedAt: !6687)
!6752 = !DILocation(line: 354, column: 37, scope: !5362, inlinedAt: !6687)
!6753 = !DILocation(line: 354, column: 42, scope: !5362, inlinedAt: !6687)
!6754 = !DILocation(line: 354, column: 45, scope: !5362, inlinedAt: !6687)
!6755 = !DILocation(line: 354, column: 50, scope: !5362, inlinedAt: !6687)
!6756 = !DILocation(line: 354, column: 6, scope: !5296, inlinedAt: !6687)
!6757 = !DILocation(line: 355, column: 3, scope: !5362, inlinedAt: !6687)
!6758 = !DILocation(line: 356, column: 32, scope: !5370, inlinedAt: !6687)
!6759 = !DILocation(line: 356, column: 37, scope: !5370, inlinedAt: !6687)
!6760 = !DILocation(line: 356, column: 43, scope: !5370, inlinedAt: !6687)
!6761 = !DILocation(line: 356, column: 46, scope: !5370, inlinedAt: !6687)
!6762 = !DILocation(line: 356, column: 51, scope: !5370, inlinedAt: !6687)
!6763 = !DILocation(line: 356, column: 6, scope: !5296, inlinedAt: !6687)
!6764 = !DILocation(line: 357, column: 3, scope: !5370, inlinedAt: !6687)
!6765 = !DILocation(line: 358, column: 6, scope: !5378, inlinedAt: !6687)
!6766 = !DILocation(line: 358, column: 11, scope: !5378, inlinedAt: !6687)
!6767 = !DILocation(line: 358, column: 6, scope: !5296, inlinedAt: !6687)
!6768 = !DILocation(line: 358, column: 26, scope: !5378, inlinedAt: !6687)
!6769 = !DILocation(line: 359, column: 6, scope: !5383, inlinedAt: !6687)
!6770 = !DILocation(line: 359, column: 11, scope: !5383, inlinedAt: !6687)
!6771 = !DILocation(line: 359, column: 6, scope: !5296, inlinedAt: !6687)
!6772 = !DILocation(line: 359, column: 26, scope: !5383, inlinedAt: !6687)
!6773 = !DILocation(line: 360, column: 6, scope: !5388, inlinedAt: !6687)
!6774 = !DILocation(line: 360, column: 11, scope: !5388, inlinedAt: !6687)
!6775 = !DILocation(line: 360, column: 6, scope: !5296, inlinedAt: !6687)
!6776 = !DILocation(line: 360, column: 26, scope: !5388, inlinedAt: !6687)
!6777 = !DILocation(line: 361, column: 6, scope: !5393, inlinedAt: !6687)
!6778 = !DILocation(line: 361, column: 11, scope: !5393, inlinedAt: !6687)
!6779 = !DILocation(line: 361, column: 6, scope: !5296, inlinedAt: !6687)
!6780 = !DILocation(line: 361, column: 26, scope: !5393, inlinedAt: !6687)
!6781 = !DILocation(line: 362, column: 6, scope: !5398, inlinedAt: !6687)
!6782 = !DILocation(line: 362, column: 11, scope: !5398, inlinedAt: !6687)
!6783 = !DILocation(line: 362, column: 6, scope: !5296, inlinedAt: !6687)
!6784 = !DILocation(line: 362, column: 26, scope: !5398, inlinedAt: !6687)
!6785 = !DILocation(line: 363, column: 6, scope: !5403, inlinedAt: !6687)
!6786 = !DILocation(line: 363, column: 11, scope: !5403, inlinedAt: !6687)
!6787 = !DILocation(line: 363, column: 6, scope: !5296, inlinedAt: !6687)
!6788 = !DILocation(line: 363, column: 26, scope: !5403, inlinedAt: !6687)
!6789 = !DILocation(line: 364, column: 6, scope: !5408, inlinedAt: !6687)
!6790 = !DILocation(line: 364, column: 11, scope: !5408, inlinedAt: !6687)
!6791 = !DILocation(line: 364, column: 6, scope: !5296, inlinedAt: !6687)
!6792 = !DILocation(line: 364, column: 26, scope: !5408, inlinedAt: !6687)
!6793 = !DILocation(line: 365, column: 6, scope: !5413, inlinedAt: !6687)
!6794 = !DILocation(line: 365, column: 11, scope: !5413, inlinedAt: !6687)
!6795 = !DILocation(line: 365, column: 6, scope: !5296, inlinedAt: !6687)
!6796 = !DILocation(line: 365, column: 26, scope: !5413, inlinedAt: !6687)
!6797 = !DILocation(line: 366, column: 6, scope: !5418, inlinedAt: !6687)
!6798 = !DILocation(line: 366, column: 11, scope: !5418, inlinedAt: !6687)
!6799 = !DILocation(line: 366, column: 6, scope: !5296, inlinedAt: !6687)
!6800 = !DILocation(line: 366, column: 26, scope: !5418, inlinedAt: !6687)
!6801 = !DILocation(line: 367, column: 6, scope: !5423, inlinedAt: !6687)
!6802 = !DILocation(line: 367, column: 11, scope: !5423, inlinedAt: !6687)
!6803 = !DILocation(line: 367, column: 6, scope: !5296, inlinedAt: !6687)
!6804 = !DILocation(line: 367, column: 26, scope: !5423, inlinedAt: !6687)
!6805 = !DILocation(line: 368, column: 6, scope: !5428, inlinedAt: !6687)
!6806 = !DILocation(line: 368, column: 11, scope: !5428, inlinedAt: !6687)
!6807 = !DILocation(line: 368, column: 6, scope: !5296, inlinedAt: !6687)
!6808 = !DILocation(line: 368, column: 26, scope: !5428, inlinedAt: !6687)
!6809 = !DILocation(line: 369, column: 6, scope: !5433, inlinedAt: !6687)
!6810 = !DILocation(line: 369, column: 11, scope: !5433, inlinedAt: !6687)
!6811 = !DILocation(line: 369, column: 6, scope: !5296, inlinedAt: !6687)
!6812 = !DILocation(line: 369, column: 26, scope: !5433, inlinedAt: !6687)
!6813 = !DILocation(line: 370, column: 6, scope: !5438, inlinedAt: !6687)
!6814 = !DILocation(line: 370, column: 11, scope: !5438, inlinedAt: !6687)
!6815 = !DILocation(line: 370, column: 6, scope: !5296, inlinedAt: !6687)
!6816 = !DILocation(line: 370, column: 26, scope: !5438, inlinedAt: !6687)
!6817 = !DILocation(line: 371, column: 6, scope: !5443, inlinedAt: !6687)
!6818 = !DILocation(line: 371, column: 11, scope: !5443, inlinedAt: !6687)
!6819 = !DILocation(line: 371, column: 6, scope: !5296, inlinedAt: !6687)
!6820 = !DILocation(line: 371, column: 26, scope: !5443, inlinedAt: !6687)
!6821 = !DILocation(line: 372, column: 6, scope: !5448, inlinedAt: !6687)
!6822 = !DILocation(line: 372, column: 11, scope: !5448, inlinedAt: !6687)
!6823 = !DILocation(line: 372, column: 6, scope: !5296, inlinedAt: !6687)
!6824 = !DILocation(line: 372, column: 26, scope: !5448, inlinedAt: !6687)
!6825 = !DILocation(line: 373, column: 6, scope: !5453, inlinedAt: !6687)
!6826 = !DILocation(line: 373, column: 11, scope: !5453, inlinedAt: !6687)
!6827 = !DILocation(line: 373, column: 6, scope: !5296, inlinedAt: !6687)
!6828 = !DILocation(line: 373, column: 26, scope: !5453, inlinedAt: !6687)
!6829 = !DILocation(line: 374, column: 6, scope: !5458, inlinedAt: !6687)
!6830 = !DILocation(line: 374, column: 11, scope: !5458, inlinedAt: !6687)
!6831 = !DILocation(line: 374, column: 6, scope: !5296, inlinedAt: !6687)
!6832 = !DILocation(line: 374, column: 26, scope: !5458, inlinedAt: !6687)
!6833 = !DILocation(line: 375, column: 6, scope: !5463, inlinedAt: !6687)
!6834 = !DILocation(line: 375, column: 11, scope: !5463, inlinedAt: !6687)
!6835 = !DILocation(line: 375, column: 6, scope: !5296, inlinedAt: !6687)
!6836 = !DILocation(line: 375, column: 27, scope: !5463, inlinedAt: !6687)
!6837 = !DILocation(line: 376, column: 6, scope: !5468, inlinedAt: !6687)
!6838 = !DILocation(line: 376, column: 11, scope: !5468, inlinedAt: !6687)
!6839 = !DILocation(line: 376, column: 6, scope: !5296, inlinedAt: !6687)
!6840 = !DILocation(line: 376, column: 32, scope: !5468, inlinedAt: !6687)
!6841 = !DILocation(line: 377, column: 6, scope: !5473, inlinedAt: !6687)
!6842 = !DILocation(line: 377, column: 11, scope: !5473, inlinedAt: !6687)
!6843 = !DILocation(line: 377, column: 6, scope: !5296, inlinedAt: !6687)
!6844 = !DILocation(line: 377, column: 32, scope: !5473, inlinedAt: !6687)
!6845 = !DILocation(line: 378, column: 6, scope: !5478, inlinedAt: !6687)
!6846 = !DILocation(line: 378, column: 11, scope: !5478, inlinedAt: !6687)
!6847 = !DILocation(line: 378, column: 6, scope: !5296, inlinedAt: !6687)
!6848 = !DILocation(line: 378, column: 32, scope: !5478, inlinedAt: !6687)
!6849 = !DILocation(line: 379, column: 6, scope: !5483, inlinedAt: !6687)
!6850 = !DILocation(line: 379, column: 11, scope: !5483, inlinedAt: !6687)
!6851 = !DILocation(line: 379, column: 6, scope: !5296, inlinedAt: !6687)
!6852 = !DILocation(line: 379, column: 33, scope: !5483, inlinedAt: !6687)
!6853 = !DILocation(line: 380, column: 6, scope: !5488, inlinedAt: !6687)
!6854 = !DILocation(line: 380, column: 11, scope: !5488, inlinedAt: !6687)
!6855 = !DILocation(line: 380, column: 6, scope: !5296, inlinedAt: !6687)
!6856 = !DILocation(line: 380, column: 33, scope: !5488, inlinedAt: !6687)
!6857 = !DILocation(line: 381, column: 6, scope: !5493, inlinedAt: !6687)
!6858 = !DILocation(line: 381, column: 11, scope: !5493, inlinedAt: !6687)
!6859 = !DILocation(line: 381, column: 6, scope: !5296, inlinedAt: !6687)
!6860 = !DILocation(line: 381, column: 33, scope: !5493, inlinedAt: !6687)
!6861 = !DILocation(line: 382, column: 2, scope: !5498, inlinedAt: !6687)
!6862 = !DILocation(line: 382, column: 2, scope: !5502, inlinedAt: !6687)
!6863 = !DILocation(line: 382, column: 2, scope: !5503, inlinedAt: !6687)
!6864 = !DILocation(line: 386, column: 1, scope: !5296, inlinedAt: !6687)
!6865 = !DILocation(line: 547, column: 9, scope: !5279, inlinedAt: !6679)
!6866 = !DILocation(line: 549, column: 8, scope: !5509, inlinedAt: !6679)
!6867 = !DILocation(line: 549, column: 7, scope: !5279, inlinedAt: !6679)
!6868 = !DILocation(line: 550, column: 4, scope: !5509, inlinedAt: !6679)
!6869 = !DILocation(line: 553, column: 33, scope: !5279, inlinedAt: !6679)
!6870 = !DILocation(line: 325, column: 6, scope: !5514, inlinedAt: !6685)
!6871 = !DILocation(line: 325, column: 6, scope: !5290, inlinedAt: !6685)
!6872 = !DILocation(line: 326, column: 3, scope: !5514, inlinedAt: !6685)
!6873 = !DILocation(line: 332, column: 9, scope: !5290, inlinedAt: !6685)
!6874 = !DILocation(line: 332, column: 15, scope: !5290, inlinedAt: !6685)
!6875 = !DILocation(line: 332, column: 2, scope: !5290, inlinedAt: !6685)
!6876 = !DILocation(line: 336, column: 1, scope: !5290, inlinedAt: !6685)
!6877 = !DILocation(line: 553, column: 5, scope: !5279, inlinedAt: !6679)
!6878 = !DILocation(line: 553, column: 41, scope: !5279, inlinedAt: !6679)
!6879 = !DILocation(line: 554, column: 5, scope: !5279, inlinedAt: !6679)
!6880 = !DILocation(line: 554, column: 12, scope: !5279, inlinedAt: !6679)
!6881 = !DILocation(line: 448, column: 31, scope: !5274, inlinedAt: !6678)
!6882 = !DILocation(line: 448, column: 34, scope: !5274, inlinedAt: !6678)
!6883 = !DILocation(line: 448, column: 14, scope: !5274, inlinedAt: !6678)
!6884 = !DILocation(line: 450, column: 22, scope: !5274, inlinedAt: !6678)
!6885 = !DILocation(line: 450, column: 25, scope: !5274, inlinedAt: !6678)
!6886 = !DILocation(line: 450, column: 30, scope: !5274, inlinedAt: !6678)
!6887 = !DILocation(line: 450, column: 36, scope: !5274, inlinedAt: !6678)
!6888 = !DILocation(line: 450, column: 8, scope: !5274, inlinedAt: !6678)
!6889 = !DILocation(line: 450, column: 6, scope: !5274, inlinedAt: !6678)
!6890 = !DILocation(line: 451, column: 9, scope: !5274, inlinedAt: !6678)
!6891 = !DILocation(line: 552, column: 3, scope: !5279, inlinedAt: !6679)
!6892 = !DILocation(line: 557, column: 19, scope: !5281, inlinedAt: !6679)
!6893 = !DILocation(line: 557, column: 25, scope: !5281, inlinedAt: !6679)
!6894 = !DILocation(line: 557, column: 9, scope: !5281, inlinedAt: !6679)
!6895 = !DILocation(line: 557, column: 2, scope: !5281, inlinedAt: !6679)
!6896 = !DILocation(line: 558, column: 1, scope: !5281, inlinedAt: !6679)
!6897 = !DILocation(line: 591, column: 3, scope: !6680)
!6898 = !DILocation(line: 592, column: 19, scope: !6676)
!6899 = !DILocation(line: 592, column: 26, scope: !6676)
!6900 = !DILocation(line: 592, column: 9, scope: !6676)
!6901 = !DILocation(line: 592, column: 2, scope: !6676)
!6902 = !DILocation(line: 593, column: 1, scope: !6676)
!6903 = distinct !DISubprogram(name: "__must_check_overflow", scope: !6904, file: !6904, line: 52, type: !6905, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!6904 = !DIFile(filename: "./include/linux/overflow.h", directory: "/home/lizy2001/genbc/linux")
!6905 = !DISubroutineType(types: !6906)
!6906 = !{!171, !171}
!6907 = !DILocalVariable(name: "overflow", arg: 1, scope: !6903, file: !6904, line: 52, type: !171)
!6908 = !DILocation(line: 52, column: 60, scope: !6903)
!6909 = !DILocation(line: 54, column: 9, scope: !6903)
!6910 = !DILocation(line: 54, column: 2, scope: !6903)
!6911 = distinct !DISubprogram(name: "atkbd_event", scope: !3, file: !3, line: 678, type: !3865, scopeLine: 680, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!6912 = !DILocalVariable(name: "dev", arg: 1, scope: !6911, file: !3, line: 678, type: !3682)
!6913 = !DILocation(line: 678, column: 42, scope: !6911)
!6914 = !DILocalVariable(name: "type", arg: 2, scope: !6911, file: !3, line: 679, type: !7)
!6915 = !DILocation(line: 679, column: 17, scope: !6911)
!6916 = !DILocalVariable(name: "code", arg: 3, scope: !6911, file: !3, line: 679, type: !7)
!6917 = !DILocation(line: 679, column: 36, scope: !6911)
!6918 = !DILocalVariable(name: "value", arg: 4, scope: !6911, file: !3, line: 679, type: !132)
!6919 = !DILocation(line: 679, column: 46, scope: !6911)
!6920 = !DILocalVariable(name: "atkbd", scope: !6911, file: !3, line: 681, type: !147)
!6921 = !DILocation(line: 681, column: 16, scope: !6911)
!6922 = !DILocation(line: 681, column: 42, scope: !6911)
!6923 = !DILocation(line: 681, column: 24, scope: !6911)
!6924 = !DILocation(line: 683, column: 7, scope: !6925)
!6925 = distinct !DILexicalBlock(scope: !6911, file: !3, line: 683, column: 6)
!6926 = !DILocation(line: 683, column: 14, scope: !6925)
!6927 = !DILocation(line: 683, column: 6, scope: !6911)
!6928 = !DILocation(line: 684, column: 3, scope: !6925)
!6929 = !DILocation(line: 686, column: 10, scope: !6911)
!6930 = !DILocation(line: 686, column: 2, scope: !6911)
!6931 = !DILocation(line: 689, column: 29, scope: !6932)
!6932 = distinct !DILexicalBlock(scope: !6911, file: !3, line: 686, column: 16)
!6933 = !DILocation(line: 689, column: 3, scope: !6932)
!6934 = !DILocation(line: 690, column: 3, scope: !6932)
!6935 = !DILocation(line: 693, column: 8, scope: !6936)
!6936 = distinct !DILexicalBlock(scope: !6932, file: !3, line: 693, column: 7)
!6937 = !DILocation(line: 693, column: 15, scope: !6936)
!6938 = !DILocation(line: 693, column: 7, scope: !6932)
!6939 = !DILocation(line: 694, column: 30, scope: !6936)
!6940 = !DILocation(line: 694, column: 4, scope: !6936)
!6941 = !DILocation(line: 695, column: 3, scope: !6932)
!6942 = !DILocation(line: 698, column: 3, scope: !6932)
!6943 = !DILocation(line: 700, column: 1, scope: !6911)
!6944 = distinct !DISubprogram(name: "input_set_drvdata", scope: !3684, file: !3684, line: 371, type: !6945, scopeLine: 372, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!6945 = !DISubroutineType(types: !6946)
!6946 = !{null, !3682, !139}
!6947 = !DILocalVariable(name: "dev", arg: 1, scope: !6944, file: !3684, line: 371, type: !3682)
!6948 = !DILocation(line: 371, column: 56, scope: !6944)
!6949 = !DILocalVariable(name: "data", arg: 2, scope: !6944, file: !3684, line: 371, type: !139)
!6950 = !DILocation(line: 371, column: 67, scope: !6944)
!6951 = !DILocation(line: 373, column: 19, scope: !6944)
!6952 = !DILocation(line: 373, column: 24, scope: !6944)
!6953 = !DILocation(line: 373, column: 29, scope: !6944)
!6954 = !DILocation(line: 373, column: 2, scope: !6944)
!6955 = !DILocation(line: 374, column: 1, scope: !6944)
!6956 = distinct !DISubprogram(name: "input_get_drvdata", scope: !3684, file: !3684, line: 366, type: !6957, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!6957 = !DISubroutineType(types: !6958)
!6958 = !{!139, !3682}
!6959 = !DILocalVariable(name: "dev", arg: 1, scope: !6956, file: !3684, line: 366, type: !3682)
!6960 = !DILocation(line: 366, column: 57, scope: !6956)
!6961 = !DILocation(line: 368, column: 26, scope: !6956)
!6962 = !DILocation(line: 368, column: 31, scope: !6956)
!6963 = !DILocation(line: 368, column: 9, scope: !6956)
!6964 = !DILocation(line: 368, column: 2, scope: !6956)
!6965 = distinct !DISubprogram(name: "atkbd_schedule_event_work", scope: !3, file: !3, line: 659, type: !6966, scopeLine: 660, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!6966 = !DISubroutineType(types: !6967)
!6967 = !{null, !147, !132}
!6968 = !DILocation(line: 363, column: 74, scope: !4334, inlinedAt: !6969)
!6969 = distinct !DILocation(line: 661, column: 24, scope: !6965)
!6970 = !DILocalVariable(name: "atkbd", arg: 1, scope: !6965, file: !3, line: 659, type: !147)
!6971 = !DILocation(line: 659, column: 53, scope: !6965)
!6972 = !DILocalVariable(name: "event_bit", arg: 2, scope: !6965, file: !3, line: 659, type: !132)
!6973 = !DILocation(line: 659, column: 64, scope: !6965)
!6974 = !DILocalVariable(name: "delay", scope: !6965, file: !3, line: 661, type: !136)
!6975 = !DILocation(line: 661, column: 16, scope: !6965)
!6976 = !DILocation(line: 365, column: 27, scope: !4569, inlinedAt: !6969)
!6977 = !DILocation(line: 365, column: 6, scope: !4569, inlinedAt: !6969)
!6978 = !DILocation(line: 365, column: 6, scope: !4334, inlinedAt: !6969)
!6979 = !DILocation(line: 366, column: 12, scope: !4573, inlinedAt: !6969)
!6980 = !DILocation(line: 366, column: 14, scope: !4573, inlinedAt: !6969)
!6981 = !DILocation(line: 366, column: 7, scope: !4574, inlinedAt: !6969)
!6982 = !DILocation(line: 367, column: 4, scope: !4573, inlinedAt: !6969)
!6983 = !DILocation(line: 368, column: 28, scope: !4574, inlinedAt: !6969)
!6984 = !DILocation(line: 368, column: 10, scope: !4574, inlinedAt: !6969)
!6985 = !DILocation(line: 368, column: 3, scope: !4574, inlinedAt: !6969)
!6986 = !DILocation(line: 370, column: 29, scope: !4582, inlinedAt: !6969)
!6987 = !DILocation(line: 370, column: 10, scope: !4582, inlinedAt: !6969)
!6988 = !DILocation(line: 370, column: 3, scope: !4582, inlinedAt: !6969)
!6989 = !DILocation(line: 372, column: 1, scope: !4334, inlinedAt: !6969)
!6990 = !DILocation(line: 663, column: 6, scope: !6991)
!6991 = distinct !DILexicalBlock(scope: !6965, file: !3, line: 663, column: 6)
!6992 = !DILocation(line: 663, column: 6, scope: !6965)
!6993 = !DILocation(line: 664, column: 9, scope: !6991)
!6994 = !DILocation(line: 664, column: 3, scope: !6991)
!6995 = !DILocation(line: 666, column: 25, scope: !6965)
!6996 = !DILocation(line: 666, column: 2, scope: !6965)
!6997 = !DILocation(line: 666, column: 9, scope: !6965)
!6998 = !DILocation(line: 666, column: 23, scope: !6965)
!6999 = !DILocation(line: 667, column: 10, scope: !6965)
!7000 = !DILocation(line: 667, column: 22, scope: !6965)
!7001 = !DILocation(line: 667, column: 29, scope: !6965)
!7002 = !DILocation(line: 667, column: 2, scope: !6965)
!7003 = !DILocation(line: 668, column: 2, scope: !6965)
!7004 = !{i32 -2142576180}
!7005 = !DILocation(line: 669, column: 25, scope: !6965)
!7006 = !DILocation(line: 669, column: 32, scope: !6965)
!7007 = !DILocation(line: 669, column: 44, scope: !6965)
!7008 = !DILocation(line: 669, column: 2, scope: !6965)
!7009 = !DILocation(line: 670, column: 1, scope: !6965)
!7010 = distinct !DISubprogram(name: "set_bit", scope: !6352, file: !6352, line: 26, type: !5175, scopeLine: 27, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!7011 = !DILocalVariable(name: "nr", arg: 1, scope: !7012, file: !5081, line: 52, type: !93)
!7012 = distinct !DISubprogram(name: "arch_set_bit", scope: !5081, file: !5081, line: 52, type: !5175, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!7013 = !DILocation(line: 52, column: 19, scope: !7012, inlinedAt: !7014)
!7014 = distinct !DILocation(line: 29, column: 2, scope: !7010)
!7015 = !DILocalVariable(name: "addr", arg: 2, scope: !7012, file: !5081, line: 52, type: !5177)
!7016 = !DILocation(line: 52, column: 47, scope: !7012, inlinedAt: !7014)
!7017 = !DILocalVariable(name: "v", arg: 1, scope: !7018, file: !5096, line: 84, type: !5099)
!7018 = distinct !DISubprogram(name: "instrument_atomic_write", scope: !5096, file: !5096, line: 84, type: !5097, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!7019 = !DILocation(line: 84, column: 74, scope: !7018, inlinedAt: !7020)
!7020 = distinct !DILocation(line: 28, column: 2, scope: !7010)
!7021 = !DILocalVariable(name: "size", arg: 2, scope: !7018, file: !5096, line: 84, type: !344)
!7022 = !DILocation(line: 84, column: 84, scope: !7018, inlinedAt: !7020)
!7023 = !DILocalVariable(name: "nr", arg: 1, scope: !7010, file: !6352, line: 26, type: !93)
!7024 = !DILocation(line: 26, column: 33, scope: !7010)
!7025 = !DILocalVariable(name: "addr", arg: 2, scope: !7010, file: !6352, line: 26, type: !5177)
!7026 = !DILocation(line: 26, column: 61, scope: !7010)
!7027 = !DILocation(line: 28, column: 26, scope: !7010)
!7028 = !DILocation(line: 28, column: 33, scope: !7010)
!7029 = !DILocation(line: 28, column: 31, scope: !7010)
!7030 = !DILocation(line: 86, column: 20, scope: !7018, inlinedAt: !7020)
!7031 = !DILocation(line: 86, column: 23, scope: !7018, inlinedAt: !7020)
!7032 = !DILocation(line: 86, column: 2, scope: !7018, inlinedAt: !7020)
!7033 = !DILocation(line: 87, column: 2, scope: !7018, inlinedAt: !7020)
!7034 = !DILocation(line: 29, column: 15, scope: !7010)
!7035 = !DILocation(line: 29, column: 19, scope: !7010)
!7036 = !DILocation(line: 54, column: 27, scope: !7037, inlinedAt: !7014)
!7037 = distinct !DILexicalBlock(scope: !7012, file: !5081, line: 54, column: 6)
!7038 = !DILocation(line: 54, column: 6, scope: !7037, inlinedAt: !7014)
!7039 = !DILocation(line: 54, column: 6, scope: !7012, inlinedAt: !7014)
!7040 = !DILocation(line: 56, column: 6, scope: !7041, inlinedAt: !7014)
!7041 = distinct !DILexicalBlock(scope: !7037, file: !5081, line: 54, column: 32)
!7042 = !DILocation(line: 57, column: 12, scope: !7041, inlinedAt: !7014)
!7043 = !DILocation(line: 55, column: 3, scope: !7041, inlinedAt: !7014)
!7044 = !{i32 -2147162785}
!7045 = !DILocation(line: 59, column: 2, scope: !7041, inlinedAt: !7014)
!7046 = !DILocation(line: 61, column: 8, scope: !7047, inlinedAt: !7014)
!7047 = distinct !DILexicalBlock(scope: !7037, file: !5081, line: 59, column: 9)
!7048 = !DILocation(line: 61, column: 32, scope: !7047, inlinedAt: !7014)
!7049 = !DILocation(line: 60, column: 3, scope: !7047, inlinedAt: !7014)
!7050 = !{i32 -2147162653}
!7051 = !DILocation(line: 30, column: 1, scope: !7010)
!7052 = distinct !DISubprogram(name: "atkbd_attr_is_visible", scope: !3, file: !3, line: 324, type: !358, scopeLine: 326, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!7053 = !DILocalVariable(name: "kobj", arg: 1, scope: !7052, file: !3, line: 324, type: !265)
!7054 = !DILocation(line: 324, column: 54, scope: !7052)
!7055 = !DILocalVariable(name: "attr", arg: 2, scope: !7052, file: !3, line: 325, type: !333)
!7056 = !DILocation(line: 325, column: 23, scope: !7052)
!7057 = !DILocalVariable(name: "i", arg: 3, scope: !7052, file: !3, line: 325, type: !132)
!7058 = !DILocation(line: 325, column: 33, scope: !7052)
!7059 = !DILocalVariable(name: "dev", scope: !7052, file: !3, line: 327, type: !255)
!7060 = !DILocation(line: 327, column: 17, scope: !7052)
!7061 = !DILocalVariable(name: "__mptr", scope: !7062, file: !3, line: 327, type: !139)
!7062 = distinct !DILexicalBlock(scope: !7052, file: !3, line: 327, column: 23)
!7063 = !DILocation(line: 327, column: 23, scope: !7062)
!7064 = !DILocation(line: 327, column: 23, scope: !7065)
!7065 = distinct !DILexicalBlock(scope: !7062, file: !3, line: 327, column: 23)
!7066 = !DILocalVariable(name: "serio", scope: !7052, file: !3, line: 328, type: !155)
!7067 = !DILocation(line: 328, column: 16, scope: !7052)
!7068 = !DILocalVariable(name: "__mptr", scope: !7069, file: !3, line: 328, type: !139)
!7069 = distinct !DILexicalBlock(scope: !7052, file: !3, line: 328, column: 24)
!7070 = !DILocation(line: 328, column: 24, scope: !7069)
!7071 = !DILocation(line: 328, column: 24, scope: !7072)
!7072 = distinct !DILexicalBlock(scope: !7069, file: !3, line: 328, column: 24)
!7073 = !DILocalVariable(name: "atkbd", scope: !7052, file: !3, line: 329, type: !147)
!7074 = !DILocation(line: 329, column: 16, scope: !7052)
!7075 = !DILocation(line: 329, column: 42, scope: !7052)
!7076 = !DILocation(line: 329, column: 24, scope: !7052)
!7077 = !DILocation(line: 331, column: 6, scope: !7078)
!7078 = distinct !DILexicalBlock(scope: !7052, file: !3, line: 331, column: 6)
!7079 = !DILocation(line: 331, column: 11, scope: !7078)
!7080 = !DILocation(line: 331, column: 52, scope: !7078)
!7081 = !DILocation(line: 332, column: 7, scope: !7078)
!7082 = !DILocation(line: 332, column: 14, scope: !7078)
!7083 = !DILocation(line: 331, column: 6, scope: !7052)
!7084 = !DILocation(line: 333, column: 3, scope: !7078)
!7085 = !DILocation(line: 335, column: 9, scope: !7052)
!7086 = !DILocation(line: 335, column: 15, scope: !7052)
!7087 = !DILocation(line: 335, column: 2, scope: !7052)
!7088 = !DILocation(line: 336, column: 1, scope: !7052)
!7089 = distinct !DISubprogram(name: "atkbd_do_show_function_row_physmap", scope: !3, file: !3, line: 295, type: !4250, scopeLine: 295, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!7090 = !DILocalVariable(name: "d", arg: 1, scope: !7089, file: !3, line: 295, type: !255)
!7091 = !DILocation(line: 295, column: 1, scope: !7089)
!7092 = !DILocalVariable(name: "attr", arg: 2, scope: !7089, file: !3, line: 295, type: !4252)
!7093 = !DILocalVariable(name: "b", arg: 3, scope: !7089, file: !3, line: 295, type: !298)
!7094 = distinct !DISubprogram(name: "atkbd_attr_show_helper", scope: !3, file: !3, line: 1403, type: !7095, scopeLine: 1405, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!7095 = !DISubroutineType(types: !7096)
!7096 = !{!329, !255, !298, !7097}
!7097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7098, size: 64)
!7098 = !DISubroutineType(types: !7099)
!7099 = !{!329, !147, !298}
!7100 = !DILocalVariable(name: "dev", arg: 1, scope: !7094, file: !3, line: 1403, type: !255)
!7101 = !DILocation(line: 1403, column: 54, scope: !7094)
!7102 = !DILocalVariable(name: "buf", arg: 2, scope: !7094, file: !3, line: 1403, type: !298)
!7103 = !DILocation(line: 1403, column: 65, scope: !7094)
!7104 = !DILocalVariable(name: "handler", arg: 3, scope: !7094, file: !3, line: 1404, type: !7097)
!7105 = !DILocation(line: 1404, column: 15, scope: !7094)
!7106 = !DILocalVariable(name: "serio", scope: !7094, file: !3, line: 1406, type: !155)
!7107 = !DILocation(line: 1406, column: 16, scope: !7094)
!7108 = !DILocalVariable(name: "__mptr", scope: !7109, file: !3, line: 1406, type: !139)
!7109 = distinct !DILexicalBlock(scope: !7094, file: !3, line: 1406, column: 24)
!7110 = !DILocation(line: 1406, column: 24, scope: !7109)
!7111 = !DILocation(line: 1406, column: 24, scope: !7112)
!7112 = distinct !DILexicalBlock(scope: !7109, file: !3, line: 1406, column: 24)
!7113 = !DILocalVariable(name: "atkbd", scope: !7094, file: !3, line: 1407, type: !147)
!7114 = !DILocation(line: 1407, column: 16, scope: !7094)
!7115 = !DILocation(line: 1407, column: 42, scope: !7094)
!7116 = !DILocation(line: 1407, column: 24, scope: !7094)
!7117 = !DILocation(line: 1409, column: 9, scope: !7094)
!7118 = !DILocation(line: 1409, column: 17, scope: !7094)
!7119 = !DILocation(line: 1409, column: 24, scope: !7094)
!7120 = !DILocation(line: 1409, column: 2, scope: !7094)
!7121 = distinct !DISubprogram(name: "atkbd_show_function_row_physmap", scope: !3, file: !3, line: 309, type: !7098, scopeLine: 310, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!7122 = !DILocalVariable(name: "atkbd", arg: 1, scope: !7121, file: !3, line: 309, type: !147)
!7123 = !DILocation(line: 309, column: 62, scope: !7121)
!7124 = !DILocalVariable(name: "buf", arg: 2, scope: !7121, file: !3, line: 309, type: !298)
!7125 = !DILocation(line: 309, column: 75, scope: !7121)
!7126 = !DILocalVariable(name: "size", scope: !7121, file: !3, line: 311, type: !329)
!7127 = !DILocation(line: 311, column: 10, scope: !7121)
!7128 = !DILocalVariable(name: "i", scope: !7121, file: !3, line: 312, type: !132)
!7129 = !DILocation(line: 312, column: 6, scope: !7121)
!7130 = !DILocation(line: 314, column: 7, scope: !7131)
!7131 = distinct !DILexicalBlock(scope: !7121, file: !3, line: 314, column: 6)
!7132 = !DILocation(line: 314, column: 14, scope: !7131)
!7133 = !DILocation(line: 314, column: 6, scope: !7121)
!7134 = !DILocation(line: 315, column: 3, scope: !7131)
!7135 = !DILocation(line: 317, column: 9, scope: !7136)
!7136 = distinct !DILexicalBlock(scope: !7121, file: !3, line: 317, column: 2)
!7137 = !DILocation(line: 317, column: 7, scope: !7136)
!7138 = !DILocation(line: 317, column: 14, scope: !7139)
!7139 = distinct !DILexicalBlock(scope: !7136, file: !3, line: 317, column: 2)
!7140 = !DILocation(line: 317, column: 18, scope: !7139)
!7141 = !DILocation(line: 317, column: 25, scope: !7139)
!7142 = !DILocation(line: 317, column: 16, scope: !7139)
!7143 = !DILocation(line: 317, column: 2, scope: !7136)
!7144 = !DILocation(line: 318, column: 21, scope: !7139)
!7145 = !DILocation(line: 318, column: 27, scope: !7139)
!7146 = !DILocation(line: 318, column: 25, scope: !7139)
!7147 = !DILocation(line: 318, column: 45, scope: !7139)
!7148 = !DILocation(line: 318, column: 43, scope: !7139)
!7149 = !DILocation(line: 319, column: 7, scope: !7139)
!7150 = !DILocation(line: 319, column: 14, scope: !7139)
!7151 = !DILocation(line: 319, column: 35, scope: !7139)
!7152 = !DILocation(line: 318, column: 11, scope: !7139)
!7153 = !DILocation(line: 318, column: 8, scope: !7139)
!7154 = !DILocation(line: 318, column: 3, scope: !7139)
!7155 = !DILocation(line: 317, column: 49, scope: !7139)
!7156 = !DILocation(line: 317, column: 2, scope: !7139)
!7157 = distinct !{!7157, !7143, !7158}
!7158 = !DILocation(line: 319, column: 37, scope: !7136)
!7159 = !DILocation(line: 320, column: 20, scope: !7121)
!7160 = !DILocation(line: 320, column: 26, scope: !7121)
!7161 = !DILocation(line: 320, column: 24, scope: !7121)
!7162 = !DILocation(line: 320, column: 44, scope: !7121)
!7163 = !DILocation(line: 320, column: 42, scope: !7121)
!7164 = !DILocation(line: 320, column: 10, scope: !7121)
!7165 = !DILocation(line: 320, column: 7, scope: !7121)
!7166 = !DILocation(line: 321, column: 9, scope: !7121)
!7167 = !DILocation(line: 321, column: 2, scope: !7121)
!7168 = !DILocation(line: 322, column: 1, scope: !7121)
!7169 = distinct !DISubprogram(name: "atkbd_do_show_extra", scope: !3, file: !3, line: 277, type: !4250, scopeLine: 277, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!7170 = !DILocalVariable(name: "d", arg: 1, scope: !7169, file: !3, line: 277, type: !255)
!7171 = !DILocation(line: 277, column: 1, scope: !7169)
!7172 = !DILocalVariable(name: "attr", arg: 2, scope: !7169, file: !3, line: 277, type: !4252)
!7173 = !DILocalVariable(name: "b", arg: 3, scope: !7169, file: !3, line: 277, type: !298)
!7174 = distinct !DISubprogram(name: "atkbd_do_set_extra", scope: !3, file: !3, line: 277, type: !4255, scopeLine: 277, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!7175 = !DILocalVariable(name: "d", arg: 1, scope: !7174, file: !3, line: 277, type: !255)
!7176 = !DILocation(line: 277, column: 1, scope: !7174)
!7177 = !DILocalVariable(name: "attr", arg: 2, scope: !7174, file: !3, line: 277, type: !4252)
!7178 = !DILocalVariable(name: "b", arg: 3, scope: !7174, file: !3, line: 277, type: !223)
!7179 = !DILocalVariable(name: "s", arg: 4, scope: !7174, file: !3, line: 277, type: !344)
!7180 = distinct !DISubprogram(name: "atkbd_show_extra", scope: !3, file: !3, line: 1432, type: !7098, scopeLine: 1433, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!7181 = !DILocalVariable(name: "atkbd", arg: 1, scope: !7180, file: !3, line: 1432, type: !147)
!7182 = !DILocation(line: 1432, column: 47, scope: !7180)
!7183 = !DILocalVariable(name: "buf", arg: 2, scope: !7180, file: !3, line: 1432, type: !298)
!7184 = !DILocation(line: 1432, column: 60, scope: !7180)
!7185 = !DILocation(line: 1434, column: 17, scope: !7180)
!7186 = !DILocation(line: 1434, column: 30, scope: !7180)
!7187 = !DILocation(line: 1434, column: 37, scope: !7180)
!7188 = !DILocation(line: 1434, column: 9, scope: !7180)
!7189 = !DILocation(line: 1434, column: 2, scope: !7180)
!7190 = distinct !DISubprogram(name: "atkbd_attr_set_helper", scope: !3, file: !3, line: 1412, type: !7191, scopeLine: 1414, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!7191 = !DISubroutineType(types: !7192)
!7192 = !{!329, !255, !223, !344, !7193}
!7193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7194, size: 64)
!7194 = !DISubroutineType(types: !7195)
!7195 = !{!329, !147, !223, !344}
!7196 = !DILocalVariable(name: "dev", arg: 1, scope: !7190, file: !3, line: 1412, type: !255)
!7197 = !DILocation(line: 1412, column: 53, scope: !7190)
!7198 = !DILocalVariable(name: "buf", arg: 2, scope: !7190, file: !3, line: 1412, type: !223)
!7199 = !DILocation(line: 1412, column: 70, scope: !7190)
!7200 = !DILocalVariable(name: "count", arg: 3, scope: !7190, file: !3, line: 1412, type: !344)
!7201 = !DILocation(line: 1412, column: 82, scope: !7190)
!7202 = !DILocalVariable(name: "handler", arg: 4, scope: !7190, file: !3, line: 1413, type: !7193)
!7203 = !DILocation(line: 1413, column: 15, scope: !7190)
!7204 = !DILocalVariable(name: "serio", scope: !7190, file: !3, line: 1415, type: !155)
!7205 = !DILocation(line: 1415, column: 16, scope: !7190)
!7206 = !DILocalVariable(name: "__mptr", scope: !7207, file: !3, line: 1415, type: !139)
!7207 = distinct !DILexicalBlock(scope: !7190, file: !3, line: 1415, column: 24)
!7208 = !DILocation(line: 1415, column: 24, scope: !7207)
!7209 = !DILocation(line: 1415, column: 24, scope: !7210)
!7210 = distinct !DILexicalBlock(scope: !7207, file: !3, line: 1415, column: 24)
!7211 = !DILocalVariable(name: "atkbd", scope: !7190, file: !3, line: 1416, type: !147)
!7212 = !DILocation(line: 1416, column: 16, scope: !7190)
!7213 = !DILocation(line: 1416, column: 42, scope: !7190)
!7214 = !DILocation(line: 1416, column: 24, scope: !7190)
!7215 = !DILocalVariable(name: "retval", scope: !7190, file: !3, line: 1417, type: !132)
!7216 = !DILocation(line: 1417, column: 6, scope: !7190)
!7217 = !DILocation(line: 1419, column: 37, scope: !7190)
!7218 = !DILocation(line: 1419, column: 44, scope: !7190)
!7219 = !DILocation(line: 1419, column: 11, scope: !7190)
!7220 = !DILocation(line: 1419, column: 9, scope: !7190)
!7221 = !DILocation(line: 1420, column: 6, scope: !7222)
!7222 = distinct !DILexicalBlock(scope: !7190, file: !3, line: 1420, column: 6)
!7223 = !DILocation(line: 1420, column: 6, scope: !7190)
!7224 = !DILocation(line: 1421, column: 10, scope: !7222)
!7225 = !DILocation(line: 1421, column: 3, scope: !7222)
!7226 = !DILocation(line: 1423, column: 16, scope: !7190)
!7227 = !DILocation(line: 1423, column: 2, scope: !7190)
!7228 = !DILocation(line: 1424, column: 11, scope: !7190)
!7229 = !DILocation(line: 1424, column: 19, scope: !7190)
!7230 = !DILocation(line: 1424, column: 26, scope: !7190)
!7231 = !DILocation(line: 1424, column: 31, scope: !7190)
!7232 = !DILocation(line: 1424, column: 9, scope: !7190)
!7233 = !DILocation(line: 1425, column: 15, scope: !7190)
!7234 = !DILocation(line: 1425, column: 2, scope: !7190)
!7235 = !DILocation(line: 1427, column: 16, scope: !7190)
!7236 = !DILocation(line: 1427, column: 23, scope: !7190)
!7237 = !DILocation(line: 1427, column: 2, scope: !7190)
!7238 = !DILocation(line: 1429, column: 9, scope: !7190)
!7239 = !DILocation(line: 1429, column: 2, scope: !7190)
!7240 = !DILocation(line: 1430, column: 1, scope: !7190)
!7241 = distinct !DISubprogram(name: "atkbd_set_extra", scope: !3, file: !3, line: 1437, type: !7194, scopeLine: 1438, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!7242 = !DILocalVariable(name: "atkbd", arg: 1, scope: !7241, file: !3, line: 1437, type: !147)
!7243 = !DILocation(line: 1437, column: 46, scope: !7241)
!7244 = !DILocalVariable(name: "buf", arg: 2, scope: !7241, file: !3, line: 1437, type: !223)
!7245 = !DILocation(line: 1437, column: 65, scope: !7241)
!7246 = !DILocalVariable(name: "count", arg: 3, scope: !7241, file: !3, line: 1437, type: !344)
!7247 = !DILocation(line: 1437, column: 77, scope: !7241)
!7248 = !DILocalVariable(name: "old_dev", scope: !7241, file: !3, line: 1439, type: !3682)
!7249 = !DILocation(line: 1439, column: 20, scope: !7241)
!7250 = !DILocalVariable(name: "new_dev", scope: !7241, file: !3, line: 1439, type: !3682)
!7251 = !DILocation(line: 1439, column: 30, scope: !7241)
!7252 = !DILocalVariable(name: "value", scope: !7241, file: !3, line: 1440, type: !7)
!7253 = !DILocation(line: 1440, column: 15, scope: !7241)
!7254 = !DILocalVariable(name: "err", scope: !7241, file: !3, line: 1441, type: !132)
!7255 = !DILocation(line: 1441, column: 6, scope: !7241)
!7256 = !DILocalVariable(name: "old_extra", scope: !7241, file: !3, line: 1442, type: !171)
!7257 = !DILocation(line: 1442, column: 7, scope: !7241)
!7258 = !DILocalVariable(name: "old_set", scope: !7241, file: !3, line: 1443, type: !180)
!7259 = !DILocation(line: 1443, column: 16, scope: !7241)
!7260 = !DILocation(line: 1445, column: 7, scope: !7261)
!7261 = distinct !DILexicalBlock(scope: !7241, file: !3, line: 1445, column: 6)
!7262 = !DILocation(line: 1445, column: 14, scope: !7261)
!7263 = !DILocation(line: 1445, column: 6, scope: !7241)
!7264 = !DILocation(line: 1446, column: 3, scope: !7261)
!7265 = !DILocation(line: 1448, column: 19, scope: !7241)
!7266 = !DILocation(line: 1448, column: 8, scope: !7241)
!7267 = !DILocation(line: 1448, column: 6, scope: !7241)
!7268 = !DILocation(line: 1449, column: 6, scope: !7269)
!7269 = distinct !DILexicalBlock(scope: !7241, file: !3, line: 1449, column: 6)
!7270 = !DILocation(line: 1449, column: 6, scope: !7241)
!7271 = !DILocation(line: 1450, column: 10, scope: !7269)
!7272 = !DILocation(line: 1450, column: 3, scope: !7269)
!7273 = !DILocation(line: 1452, column: 6, scope: !7274)
!7274 = distinct !DILexicalBlock(scope: !7241, file: !3, line: 1452, column: 6)
!7275 = !DILocation(line: 1452, column: 12, scope: !7274)
!7276 = !DILocation(line: 1452, column: 6, scope: !7241)
!7277 = !DILocation(line: 1453, column: 3, scope: !7274)
!7278 = !DILocation(line: 1455, column: 6, scope: !7279)
!7279 = distinct !DILexicalBlock(scope: !7241, file: !3, line: 1455, column: 6)
!7280 = !DILocation(line: 1455, column: 13, scope: !7279)
!7281 = !DILocation(line: 1455, column: 22, scope: !7279)
!7282 = !DILocation(line: 1455, column: 19, scope: !7279)
!7283 = !DILocation(line: 1455, column: 6, scope: !7241)
!7284 = !DILocation(line: 1461, column: 13, scope: !7285)
!7285 = distinct !DILexicalBlock(scope: !7279, file: !3, line: 1455, column: 29)
!7286 = !DILocation(line: 1461, column: 20, scope: !7285)
!7287 = !DILocation(line: 1461, column: 11, scope: !7285)
!7288 = !DILocation(line: 1462, column: 15, scope: !7285)
!7289 = !DILocation(line: 1462, column: 22, scope: !7285)
!7290 = !DILocation(line: 1462, column: 13, scope: !7285)
!7291 = !DILocation(line: 1463, column: 13, scope: !7285)
!7292 = !DILocation(line: 1463, column: 20, scope: !7285)
!7293 = !DILocation(line: 1463, column: 11, scope: !7285)
!7294 = !DILocation(line: 1465, column: 13, scope: !7285)
!7295 = !DILocation(line: 1465, column: 11, scope: !7285)
!7296 = !DILocation(line: 1466, column: 8, scope: !7297)
!7297 = distinct !DILexicalBlock(scope: !7285, file: !3, line: 1466, column: 7)
!7298 = !DILocation(line: 1466, column: 7, scope: !7285)
!7299 = !DILocation(line: 1467, column: 4, scope: !7297)
!7300 = !DILocation(line: 1469, column: 16, scope: !7285)
!7301 = !DILocation(line: 1469, column: 3, scope: !7285)
!7302 = !DILocation(line: 1469, column: 10, scope: !7285)
!7303 = !DILocation(line: 1469, column: 14, scope: !7285)
!7304 = !DILocation(line: 1470, column: 33, scope: !7285)
!7305 = !DILocation(line: 1470, column: 40, scope: !7285)
!7306 = !DILocation(line: 1470, column: 47, scope: !7285)
!7307 = !DILocation(line: 1470, column: 52, scope: !7285)
!7308 = !DILocation(line: 1470, column: 16, scope: !7285)
!7309 = !DILocation(line: 1470, column: 3, scope: !7285)
!7310 = !DILocation(line: 1470, column: 10, scope: !7285)
!7311 = !DILocation(line: 1470, column: 14, scope: !7285)
!7312 = !DILocation(line: 1471, column: 21, scope: !7285)
!7313 = !DILocation(line: 1471, column: 3, scope: !7285)
!7314 = !DILocation(line: 1472, column: 18, scope: !7285)
!7315 = !DILocation(line: 1472, column: 3, scope: !7285)
!7316 = !DILocation(line: 1473, column: 27, scope: !7285)
!7317 = !DILocation(line: 1473, column: 3, scope: !7285)
!7318 = !DILocation(line: 1474, column: 26, scope: !7285)
!7319 = !DILocation(line: 1474, column: 3, scope: !7285)
!7320 = !DILocation(line: 1476, column: 31, scope: !7285)
!7321 = !DILocation(line: 1476, column: 38, scope: !7285)
!7322 = !DILocation(line: 1476, column: 9, scope: !7285)
!7323 = !DILocation(line: 1476, column: 7, scope: !7285)
!7324 = !DILocation(line: 1477, column: 7, scope: !7325)
!7325 = distinct !DILexicalBlock(scope: !7285, file: !3, line: 1477, column: 7)
!7326 = !DILocation(line: 1477, column: 7, scope: !7285)
!7327 = !DILocation(line: 1478, column: 22, scope: !7328)
!7328 = distinct !DILexicalBlock(scope: !7325, file: !3, line: 1477, column: 12)
!7329 = !DILocation(line: 1478, column: 4, scope: !7328)
!7330 = !DILocation(line: 1480, column: 17, scope: !7328)
!7331 = !DILocation(line: 1480, column: 4, scope: !7328)
!7332 = !DILocation(line: 1480, column: 11, scope: !7328)
!7333 = !DILocation(line: 1480, column: 15, scope: !7328)
!7334 = !DILocation(line: 1481, column: 34, scope: !7328)
!7335 = !DILocation(line: 1481, column: 41, scope: !7328)
!7336 = !DILocation(line: 1481, column: 50, scope: !7328)
!7337 = !DILocation(line: 1481, column: 17, scope: !7328)
!7338 = !DILocation(line: 1481, column: 4, scope: !7328)
!7339 = !DILocation(line: 1481, column: 11, scope: !7328)
!7340 = !DILocation(line: 1481, column: 15, scope: !7328)
!7341 = !DILocation(line: 1482, column: 28, scope: !7328)
!7342 = !DILocation(line: 1482, column: 4, scope: !7328)
!7343 = !DILocation(line: 1483, column: 27, scope: !7328)
!7344 = !DILocation(line: 1483, column: 4, scope: !7328)
!7345 = !DILocation(line: 1485, column: 11, scope: !7328)
!7346 = !DILocation(line: 1485, column: 4, scope: !7328)
!7347 = !DILocation(line: 1487, column: 27, scope: !7285)
!7348 = !DILocation(line: 1487, column: 3, scope: !7285)
!7349 = !DILocation(line: 1489, column: 2, scope: !7285)
!7350 = !DILocation(line: 1490, column: 9, scope: !7241)
!7351 = !DILocation(line: 1490, column: 2, scope: !7241)
!7352 = !DILocation(line: 1491, column: 1, scope: !7241)
!7353 = distinct !DISubprogram(name: "atkbd_disable", scope: !3, file: !3, line: 719, type: !5891, scopeLine: 720, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!7354 = !DILocalVariable(name: "atkbd", arg: 1, scope: !7353, file: !3, line: 719, type: !147)
!7355 = !DILocation(line: 719, column: 48, scope: !7353)
!7356 = !DILocation(line: 721, column: 17, scope: !7353)
!7357 = !DILocation(line: 721, column: 24, scope: !7353)
!7358 = !DILocation(line: 721, column: 31, scope: !7353)
!7359 = !DILocation(line: 721, column: 2, scope: !7353)
!7360 = !DILocation(line: 722, column: 2, scope: !7353)
!7361 = !DILocation(line: 722, column: 9, scope: !7353)
!7362 = !DILocation(line: 722, column: 17, scope: !7353)
!7363 = !DILocation(line: 723, column: 20, scope: !7353)
!7364 = !DILocation(line: 723, column: 27, scope: !7353)
!7365 = !DILocation(line: 723, column: 34, scope: !7353)
!7366 = !DILocation(line: 723, column: 2, scope: !7353)
!7367 = !DILocation(line: 724, column: 1, scope: !7353)
!7368 = distinct !DISubprogram(name: "serio_pause_rx", scope: !157, file: !157, line: 154, type: !210, scopeLine: 155, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!7369 = !DILocalVariable(name: "lock", arg: 1, scope: !7370, file: !7371, line: 377, type: !7374)
!7370 = distinct !DISubprogram(name: "spin_lock_irq", scope: !7371, file: !7371, line: 377, type: !7372, scopeLine: 378, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!7371 = !DIFile(filename: "./include/linux/spinlock.h", directory: "/home/lizy2001/genbc/linux")
!7372 = !DISubroutineType(types: !7373)
!7373 = !{null, !7374}
!7374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !185, size: 64)
!7375 = !DILocation(line: 377, column: 55, scope: !7370, inlinedAt: !7376)
!7376 = distinct !DILocation(line: 156, column: 2, scope: !7368)
!7377 = !DILocalVariable(name: "serio", arg: 1, scope: !7368, file: !157, line: 154, type: !155)
!7378 = !DILocation(line: 154, column: 49, scope: !7368)
!7379 = !DILocation(line: 156, column: 17, scope: !7368)
!7380 = !DILocation(line: 156, column: 24, scope: !7368)
!7381 = !DILocation(line: 379, column: 2, scope: !7382, inlinedAt: !7376)
!7382 = distinct !DILexicalBlock(scope: !7383, file: !7371, line: 379, column: 2)
!7383 = distinct !DILexicalBlock(scope: !7370, file: !7371, line: 379, column: 2)
!7384 = !DILocation(line: 379, column: 2, scope: !7385, inlinedAt: !7376)
!7385 = distinct !DILexicalBlock(scope: !7383, file: !7371, line: 379, column: 2)
!7386 = !{i32 -2145427824}
!7387 = !DILocation(line: 379, column: 2, scope: !7388, inlinedAt: !7376)
!7388 = distinct !DILexicalBlock(scope: !7385, file: !7371, line: 379, column: 2)
!7389 = !DILocation(line: 157, column: 1, scope: !7368)
!7390 = distinct !DISubprogram(name: "serio_continue_rx", scope: !157, file: !157, line: 159, type: !210, scopeLine: 160, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!7391 = !DILocalVariable(name: "lock", arg: 1, scope: !7392, file: !7371, line: 402, type: !7374)
!7392 = distinct !DISubprogram(name: "spin_unlock_irq", scope: !7371, file: !7371, line: 402, type: !7372, scopeLine: 403, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!7393 = !DILocation(line: 402, column: 57, scope: !7392, inlinedAt: !7394)
!7394 = distinct !DILocation(line: 161, column: 2, scope: !7390)
!7395 = !DILocalVariable(name: "serio", arg: 1, scope: !7390, file: !157, line: 159, type: !155)
!7396 = !DILocation(line: 159, column: 52, scope: !7390)
!7397 = !DILocation(line: 161, column: 19, scope: !7390)
!7398 = !DILocation(line: 161, column: 26, scope: !7390)
!7399 = !DILocation(line: 404, column: 2, scope: !7400, inlinedAt: !7394)
!7400 = distinct !DILexicalBlock(scope: !7401, file: !7371, line: 404, column: 2)
!7401 = distinct !DILexicalBlock(scope: !7392, file: !7371, line: 404, column: 2)
!7402 = !DILocation(line: 404, column: 2, scope: !7403, inlinedAt: !7394)
!7403 = distinct !DILexicalBlock(scope: !7401, file: !7371, line: 404, column: 2)
!7404 = !{i32 -2145426076}
!7405 = !DILocation(line: 404, column: 2, scope: !7406, inlinedAt: !7394)
!7406 = distinct !DILexicalBlock(scope: !7403, file: !7371, line: 404, column: 2)
!7407 = !DILocation(line: 162, column: 1, scope: !7390)
!7408 = distinct !DISubprogram(name: "arch_local_irq_disable", scope: !7409, file: !7409, line: 656, type: !1819, scopeLine: 657, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!7409 = !DIFile(filename: "./arch/x86/include/asm/paravirt.h", directory: "/home/lizy2001/genbc/linux")
!7410 = !DILocalVariable(name: "__edi", scope: !7411, file: !7409, line: 658, type: !136)
!7411 = distinct !DILexicalBlock(scope: !7408, file: !7409, line: 658, column: 2)
!7412 = !DILocation(line: 658, column: 2, scope: !7411)
!7413 = !DILocalVariable(name: "__esi", scope: !7411, file: !7409, line: 658, type: !136)
!7414 = !DILocalVariable(name: "__edx", scope: !7411, file: !7409, line: 658, type: !136)
!7415 = !DILocalVariable(name: "__ecx", scope: !7411, file: !7409, line: 658, type: !136)
!7416 = !DILocalVariable(name: "__eax", scope: !7411, file: !7409, line: 658, type: !136)
!7417 = !{i32 -2145731507, i32 -2145730775, i32 -2145730541, i32 -2145730490, i32 -2145730462, i32 -2145730437, i32 -2145730753, i32 -2145730740, i32 -2145730302, i32 -2145730183, i32 -2145730648, i32 -2145730621, i32 -2145730593, i32 -2145730563}
!7418 = !DILocation(line: 659, column: 1, scope: !7408)
!7419 = distinct !DISubprogram(name: "arch_local_irq_enable", scope: !7409, file: !7409, line: 661, type: !1819, scopeLine: 662, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!7420 = !DILocalVariable(name: "__edi", scope: !7421, file: !7409, line: 663, type: !136)
!7421 = distinct !DILexicalBlock(scope: !7419, file: !7409, line: 663, column: 2)
!7422 = !DILocation(line: 663, column: 2, scope: !7421)
!7423 = !DILocalVariable(name: "__esi", scope: !7421, file: !7409, line: 663, type: !136)
!7424 = !DILocalVariable(name: "__edx", scope: !7421, file: !7409, line: 663, type: !136)
!7425 = !DILocalVariable(name: "__ecx", scope: !7421, file: !7409, line: 663, type: !136)
!7426 = !DILocalVariable(name: "__eax", scope: !7421, file: !7409, line: 663, type: !136)
!7427 = !{i32 -2145728923, i32 -2145728193, i32 -2145727959, i32 -2145727908, i32 -2145727880, i32 -2145727855, i32 -2145728171, i32 -2145728158, i32 -2145727720, i32 -2145727601, i32 -2145728066, i32 -2145728039, i32 -2145728011, i32 -2145727981}
!7428 = !DILocation(line: 664, column: 1, scope: !7419)
!7429 = distinct !DISubprogram(name: "atkbd_do_show_force_release", scope: !3, file: !3, line: 278, type: !4250, scopeLine: 278, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!7430 = !DILocalVariable(name: "d", arg: 1, scope: !7429, file: !3, line: 278, type: !255)
!7431 = !DILocation(line: 278, column: 1, scope: !7429)
!7432 = !DILocalVariable(name: "attr", arg: 2, scope: !7429, file: !3, line: 278, type: !4252)
!7433 = !DILocalVariable(name: "b", arg: 3, scope: !7429, file: !3, line: 278, type: !298)
!7434 = distinct !DISubprogram(name: "atkbd_do_set_force_release", scope: !3, file: !3, line: 278, type: !4255, scopeLine: 278, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!7435 = !DILocalVariable(name: "d", arg: 1, scope: !7434, file: !3, line: 278, type: !255)
!7436 = !DILocation(line: 278, column: 1, scope: !7434)
!7437 = !DILocalVariable(name: "attr", arg: 2, scope: !7434, file: !3, line: 278, type: !4252)
!7438 = !DILocalVariable(name: "b", arg: 3, scope: !7434, file: !3, line: 278, type: !223)
!7439 = !DILocalVariable(name: "s", arg: 4, scope: !7434, file: !3, line: 278, type: !344)
!7440 = distinct !DISubprogram(name: "atkbd_show_force_release", scope: !3, file: !3, line: 1493, type: !7098, scopeLine: 1494, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!7441 = !DILocalVariable(name: "atkbd", arg: 1, scope: !7440, file: !3, line: 1493, type: !147)
!7442 = !DILocation(line: 1493, column: 55, scope: !7440)
!7443 = !DILocalVariable(name: "buf", arg: 2, scope: !7440, file: !3, line: 1493, type: !298)
!7444 = !DILocation(line: 1493, column: 68, scope: !7440)
!7445 = !DILocalVariable(name: "len", scope: !7440, file: !3, line: 1495, type: !344)
!7446 = !DILocation(line: 1495, column: 9, scope: !7440)
!7447 = !DILocation(line: 1495, column: 25, scope: !7440)
!7448 = !DILocation(line: 1496, column: 30, scope: !7440)
!7449 = !DILocation(line: 1496, column: 37, scope: !7440)
!7450 = !DILocation(line: 1495, column: 15, scope: !7440)
!7451 = !DILocation(line: 1498, column: 2, scope: !7440)
!7452 = !DILocation(line: 1498, column: 9, scope: !7440)
!7453 = !DILocation(line: 1498, column: 13, scope: !7440)
!7454 = !DILocation(line: 1499, column: 2, scope: !7440)
!7455 = !DILocation(line: 1499, column: 6, scope: !7440)
!7456 = !DILocation(line: 1499, column: 11, scope: !7440)
!7457 = !DILocation(line: 1501, column: 9, scope: !7440)
!7458 = !DILocation(line: 1501, column: 2, scope: !7440)
!7459 = distinct !DISubprogram(name: "atkbd_set_force_release", scope: !3, file: !3, line: 1504, type: !7194, scopeLine: 1506, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!7460 = !DILocalVariable(name: "atkbd", arg: 1, scope: !7459, file: !3, line: 1504, type: !147)
!7461 = !DILocation(line: 1504, column: 54, scope: !7459)
!7462 = !DILocalVariable(name: "buf", arg: 2, scope: !7459, file: !3, line: 1505, type: !223)
!7463 = !DILocation(line: 1505, column: 18, scope: !7459)
!7464 = !DILocalVariable(name: "count", arg: 3, scope: !7459, file: !3, line: 1505, type: !344)
!7465 = !DILocation(line: 1505, column: 30, scope: !7459)
!7466 = !DILocalVariable(name: "new_mask", scope: !7459, file: !3, line: 1508, type: !3966)
!7467 = !DILocation(line: 1508, column: 2, scope: !7459)
!7468 = !DILocalVariable(name: "err", scope: !7459, file: !3, line: 1509, type: !132)
!7469 = !DILocation(line: 1509, column: 6, scope: !7459)
!7470 = !DILocation(line: 1511, column: 25, scope: !7459)
!7471 = !DILocation(line: 1511, column: 30, scope: !7459)
!7472 = !DILocation(line: 1511, column: 8, scope: !7459)
!7473 = !DILocation(line: 1511, column: 6, scope: !7459)
!7474 = !DILocation(line: 1512, column: 6, scope: !7475)
!7475 = distinct !DILexicalBlock(scope: !7459, file: !3, line: 1512, column: 6)
!7476 = !DILocation(line: 1512, column: 6, scope: !7459)
!7477 = !DILocation(line: 1513, column: 10, scope: !7475)
!7478 = !DILocation(line: 1513, column: 3, scope: !7475)
!7479 = !DILocation(line: 1515, column: 9, scope: !7459)
!7480 = !DILocation(line: 1515, column: 16, scope: !7459)
!7481 = !DILocation(line: 1515, column: 2, scope: !7459)
!7482 = !DILocation(line: 1516, column: 9, scope: !7459)
!7483 = !DILocation(line: 1516, column: 2, scope: !7459)
!7484 = !DILocation(line: 1517, column: 1, scope: !7459)
!7485 = distinct !DISubprogram(name: "atkbd_do_show_scroll", scope: !3, file: !3, line: 279, type: !4250, scopeLine: 279, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!7486 = !DILocalVariable(name: "d", arg: 1, scope: !7485, file: !3, line: 279, type: !255)
!7487 = !DILocation(line: 279, column: 1, scope: !7485)
!7488 = !DILocalVariable(name: "attr", arg: 2, scope: !7485, file: !3, line: 279, type: !4252)
!7489 = !DILocalVariable(name: "b", arg: 3, scope: !7485, file: !3, line: 279, type: !298)
!7490 = distinct !DISubprogram(name: "atkbd_do_set_scroll", scope: !3, file: !3, line: 279, type: !4255, scopeLine: 279, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!7491 = !DILocalVariable(name: "d", arg: 1, scope: !7490, file: !3, line: 279, type: !255)
!7492 = !DILocation(line: 279, column: 1, scope: !7490)
!7493 = !DILocalVariable(name: "attr", arg: 2, scope: !7490, file: !3, line: 279, type: !4252)
!7494 = !DILocalVariable(name: "b", arg: 3, scope: !7490, file: !3, line: 279, type: !223)
!7495 = !DILocalVariable(name: "s", arg: 4, scope: !7490, file: !3, line: 279, type: !344)
!7496 = distinct !DISubprogram(name: "atkbd_show_scroll", scope: !3, file: !3, line: 1520, type: !7098, scopeLine: 1521, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!7497 = !DILocalVariable(name: "atkbd", arg: 1, scope: !7496, file: !3, line: 1520, type: !147)
!7498 = !DILocation(line: 1520, column: 48, scope: !7496)
!7499 = !DILocalVariable(name: "buf", arg: 2, scope: !7496, file: !3, line: 1520, type: !298)
!7500 = !DILocation(line: 1520, column: 61, scope: !7496)
!7501 = !DILocation(line: 1522, column: 17, scope: !7496)
!7502 = !DILocation(line: 1522, column: 30, scope: !7496)
!7503 = !DILocation(line: 1522, column: 37, scope: !7496)
!7504 = !DILocation(line: 1522, column: 9, scope: !7496)
!7505 = !DILocation(line: 1522, column: 2, scope: !7496)
!7506 = distinct !DISubprogram(name: "atkbd_set_scroll", scope: !3, file: !3, line: 1525, type: !7194, scopeLine: 1526, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!7507 = !DILocalVariable(name: "atkbd", arg: 1, scope: !7506, file: !3, line: 1525, type: !147)
!7508 = !DILocation(line: 1525, column: 47, scope: !7506)
!7509 = !DILocalVariable(name: "buf", arg: 2, scope: !7506, file: !3, line: 1525, type: !223)
!7510 = !DILocation(line: 1525, column: 66, scope: !7506)
!7511 = !DILocalVariable(name: "count", arg: 3, scope: !7506, file: !3, line: 1525, type: !344)
!7512 = !DILocation(line: 1525, column: 78, scope: !7506)
!7513 = !DILocalVariable(name: "old_dev", scope: !7506, file: !3, line: 1527, type: !3682)
!7514 = !DILocation(line: 1527, column: 20, scope: !7506)
!7515 = !DILocalVariable(name: "new_dev", scope: !7506, file: !3, line: 1527, type: !3682)
!7516 = !DILocation(line: 1527, column: 30, scope: !7506)
!7517 = !DILocalVariable(name: "value", scope: !7506, file: !3, line: 1528, type: !7)
!7518 = !DILocation(line: 1528, column: 15, scope: !7506)
!7519 = !DILocalVariable(name: "err", scope: !7506, file: !3, line: 1529, type: !132)
!7520 = !DILocation(line: 1529, column: 6, scope: !7506)
!7521 = !DILocalVariable(name: "old_scroll", scope: !7506, file: !3, line: 1530, type: !171)
!7522 = !DILocation(line: 1530, column: 7, scope: !7506)
!7523 = !DILocation(line: 1532, column: 19, scope: !7506)
!7524 = !DILocation(line: 1532, column: 8, scope: !7506)
!7525 = !DILocation(line: 1532, column: 6, scope: !7506)
!7526 = !DILocation(line: 1533, column: 6, scope: !7527)
!7527 = distinct !DILexicalBlock(scope: !7506, file: !3, line: 1533, column: 6)
!7528 = !DILocation(line: 1533, column: 6, scope: !7506)
!7529 = !DILocation(line: 1534, column: 10, scope: !7527)
!7530 = !DILocation(line: 1534, column: 3, scope: !7527)
!7531 = !DILocation(line: 1536, column: 6, scope: !7532)
!7532 = distinct !DILexicalBlock(scope: !7506, file: !3, line: 1536, column: 6)
!7533 = !DILocation(line: 1536, column: 12, scope: !7532)
!7534 = !DILocation(line: 1536, column: 6, scope: !7506)
!7535 = !DILocation(line: 1537, column: 3, scope: !7532)
!7536 = !DILocation(line: 1539, column: 6, scope: !7537)
!7537 = distinct !DILexicalBlock(scope: !7506, file: !3, line: 1539, column: 6)
!7538 = !DILocation(line: 1539, column: 13, scope: !7537)
!7539 = !DILocation(line: 1539, column: 23, scope: !7537)
!7540 = !DILocation(line: 1539, column: 20, scope: !7537)
!7541 = !DILocation(line: 1539, column: 6, scope: !7506)
!7542 = !DILocation(line: 1540, column: 13, scope: !7543)
!7543 = distinct !DILexicalBlock(scope: !7537, file: !3, line: 1539, column: 30)
!7544 = !DILocation(line: 1540, column: 20, scope: !7543)
!7545 = !DILocation(line: 1540, column: 11, scope: !7543)
!7546 = !DILocation(line: 1541, column: 16, scope: !7543)
!7547 = !DILocation(line: 1541, column: 23, scope: !7543)
!7548 = !DILocation(line: 1541, column: 14, scope: !7543)
!7549 = !DILocation(line: 1543, column: 13, scope: !7543)
!7550 = !DILocation(line: 1543, column: 11, scope: !7543)
!7551 = !DILocation(line: 1544, column: 8, scope: !7552)
!7552 = distinct !DILexicalBlock(scope: !7543, file: !3, line: 1544, column: 7)
!7553 = !DILocation(line: 1544, column: 7, scope: !7543)
!7554 = !DILocation(line: 1545, column: 4, scope: !7552)
!7555 = !DILocation(line: 1547, column: 16, scope: !7543)
!7556 = !DILocation(line: 1547, column: 3, scope: !7543)
!7557 = !DILocation(line: 1547, column: 10, scope: !7543)
!7558 = !DILocation(line: 1547, column: 14, scope: !7543)
!7559 = !DILocation(line: 1548, column: 19, scope: !7543)
!7560 = !DILocation(line: 1548, column: 3, scope: !7543)
!7561 = !DILocation(line: 1548, column: 10, scope: !7543)
!7562 = !DILocation(line: 1548, column: 17, scope: !7543)
!7563 = !DILocation(line: 1549, column: 27, scope: !7543)
!7564 = !DILocation(line: 1549, column: 3, scope: !7543)
!7565 = !DILocation(line: 1550, column: 26, scope: !7543)
!7566 = !DILocation(line: 1550, column: 3, scope: !7543)
!7567 = !DILocation(line: 1552, column: 31, scope: !7543)
!7568 = !DILocation(line: 1552, column: 38, scope: !7543)
!7569 = !DILocation(line: 1552, column: 9, scope: !7543)
!7570 = !DILocation(line: 1552, column: 7, scope: !7543)
!7571 = !DILocation(line: 1553, column: 7, scope: !7572)
!7572 = distinct !DILexicalBlock(scope: !7543, file: !3, line: 1553, column: 7)
!7573 = !DILocation(line: 1553, column: 7, scope: !7543)
!7574 = !DILocation(line: 1554, column: 22, scope: !7575)
!7575 = distinct !DILexicalBlock(scope: !7572, file: !3, line: 1553, column: 12)
!7576 = !DILocation(line: 1554, column: 4, scope: !7575)
!7577 = !DILocation(line: 1556, column: 20, scope: !7575)
!7578 = !DILocation(line: 1556, column: 4, scope: !7575)
!7579 = !DILocation(line: 1556, column: 11, scope: !7575)
!7580 = !DILocation(line: 1556, column: 18, scope: !7575)
!7581 = !DILocation(line: 1557, column: 17, scope: !7575)
!7582 = !DILocation(line: 1557, column: 4, scope: !7575)
!7583 = !DILocation(line: 1557, column: 11, scope: !7575)
!7584 = !DILocation(line: 1557, column: 15, scope: !7575)
!7585 = !DILocation(line: 1558, column: 28, scope: !7575)
!7586 = !DILocation(line: 1558, column: 4, scope: !7575)
!7587 = !DILocation(line: 1559, column: 27, scope: !7575)
!7588 = !DILocation(line: 1559, column: 4, scope: !7575)
!7589 = !DILocation(line: 1561, column: 11, scope: !7575)
!7590 = !DILocation(line: 1561, column: 4, scope: !7575)
!7591 = !DILocation(line: 1563, column: 27, scope: !7543)
!7592 = !DILocation(line: 1563, column: 3, scope: !7543)
!7593 = !DILocation(line: 1564, column: 2, scope: !7543)
!7594 = !DILocation(line: 1565, column: 9, scope: !7506)
!7595 = !DILocation(line: 1565, column: 2, scope: !7506)
!7596 = !DILocation(line: 1566, column: 1, scope: !7506)
!7597 = distinct !DISubprogram(name: "atkbd_do_show_set", scope: !3, file: !3, line: 280, type: !4250, scopeLine: 280, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!7598 = !DILocalVariable(name: "d", arg: 1, scope: !7597, file: !3, line: 280, type: !255)
!7599 = !DILocation(line: 280, column: 1, scope: !7597)
!7600 = !DILocalVariable(name: "attr", arg: 2, scope: !7597, file: !3, line: 280, type: !4252)
!7601 = !DILocalVariable(name: "b", arg: 3, scope: !7597, file: !3, line: 280, type: !298)
!7602 = distinct !DISubprogram(name: "atkbd_do_set_set", scope: !3, file: !3, line: 280, type: !4255, scopeLine: 280, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!7603 = !DILocalVariable(name: "d", arg: 1, scope: !7602, file: !3, line: 280, type: !255)
!7604 = !DILocation(line: 280, column: 1, scope: !7602)
!7605 = !DILocalVariable(name: "attr", arg: 2, scope: !7602, file: !3, line: 280, type: !4252)
!7606 = !DILocalVariable(name: "b", arg: 3, scope: !7602, file: !3, line: 280, type: !223)
!7607 = !DILocalVariable(name: "s", arg: 4, scope: !7602, file: !3, line: 280, type: !344)
!7608 = distinct !DISubprogram(name: "atkbd_show_set", scope: !3, file: !3, line: 1568, type: !7098, scopeLine: 1569, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!7609 = !DILocalVariable(name: "atkbd", arg: 1, scope: !7608, file: !3, line: 1568, type: !147)
!7610 = !DILocation(line: 1568, column: 45, scope: !7608)
!7611 = !DILocalVariable(name: "buf", arg: 2, scope: !7608, file: !3, line: 1568, type: !298)
!7612 = !DILocation(line: 1568, column: 58, scope: !7608)
!7613 = !DILocation(line: 1570, column: 17, scope: !7608)
!7614 = !DILocation(line: 1570, column: 30, scope: !7608)
!7615 = !DILocation(line: 1570, column: 37, scope: !7608)
!7616 = !DILocation(line: 1570, column: 9, scope: !7608)
!7617 = !DILocation(line: 1570, column: 2, scope: !7608)
!7618 = distinct !DISubprogram(name: "atkbd_set_set", scope: !3, file: !3, line: 1573, type: !7194, scopeLine: 1574, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!7619 = !DILocalVariable(name: "atkbd", arg: 1, scope: !7618, file: !3, line: 1573, type: !147)
!7620 = !DILocation(line: 1573, column: 44, scope: !7618)
!7621 = !DILocalVariable(name: "buf", arg: 2, scope: !7618, file: !3, line: 1573, type: !223)
!7622 = !DILocation(line: 1573, column: 63, scope: !7618)
!7623 = !DILocalVariable(name: "count", arg: 3, scope: !7618, file: !3, line: 1573, type: !344)
!7624 = !DILocation(line: 1573, column: 75, scope: !7618)
!7625 = !DILocalVariable(name: "old_dev", scope: !7618, file: !3, line: 1575, type: !3682)
!7626 = !DILocation(line: 1575, column: 20, scope: !7618)
!7627 = !DILocalVariable(name: "new_dev", scope: !7618, file: !3, line: 1575, type: !3682)
!7628 = !DILocation(line: 1575, column: 30, scope: !7618)
!7629 = !DILocalVariable(name: "value", scope: !7618, file: !3, line: 1576, type: !7)
!7630 = !DILocation(line: 1576, column: 15, scope: !7618)
!7631 = !DILocalVariable(name: "err", scope: !7618, file: !3, line: 1577, type: !132)
!7632 = !DILocation(line: 1577, column: 6, scope: !7618)
!7633 = !DILocalVariable(name: "old_set", scope: !7618, file: !3, line: 1578, type: !180)
!7634 = !DILocation(line: 1578, column: 16, scope: !7618)
!7635 = !DILocalVariable(name: "old_extra", scope: !7618, file: !3, line: 1579, type: !171)
!7636 = !DILocation(line: 1579, column: 7, scope: !7618)
!7637 = !DILocation(line: 1581, column: 7, scope: !7638)
!7638 = distinct !DILexicalBlock(scope: !7618, file: !3, line: 1581, column: 6)
!7639 = !DILocation(line: 1581, column: 14, scope: !7638)
!7640 = !DILocation(line: 1581, column: 6, scope: !7618)
!7641 = !DILocation(line: 1582, column: 3, scope: !7638)
!7642 = !DILocation(line: 1584, column: 19, scope: !7618)
!7643 = !DILocation(line: 1584, column: 8, scope: !7618)
!7644 = !DILocation(line: 1584, column: 6, scope: !7618)
!7645 = !DILocation(line: 1585, column: 6, scope: !7646)
!7646 = distinct !DILexicalBlock(scope: !7618, file: !3, line: 1585, column: 6)
!7647 = !DILocation(line: 1585, column: 6, scope: !7618)
!7648 = !DILocation(line: 1586, column: 10, scope: !7646)
!7649 = !DILocation(line: 1586, column: 3, scope: !7646)
!7650 = !DILocation(line: 1588, column: 6, scope: !7651)
!7651 = distinct !DILexicalBlock(scope: !7618, file: !3, line: 1588, column: 6)
!7652 = !DILocation(line: 1588, column: 12, scope: !7651)
!7653 = !DILocation(line: 1588, column: 17, scope: !7651)
!7654 = !DILocation(line: 1588, column: 20, scope: !7651)
!7655 = !DILocation(line: 1588, column: 26, scope: !7651)
!7656 = !DILocation(line: 1588, column: 6, scope: !7618)
!7657 = !DILocation(line: 1589, column: 3, scope: !7651)
!7658 = !DILocation(line: 1591, column: 6, scope: !7659)
!7659 = distinct !DILexicalBlock(scope: !7618, file: !3, line: 1591, column: 6)
!7660 = !DILocation(line: 1591, column: 13, scope: !7659)
!7661 = !DILocation(line: 1591, column: 20, scope: !7659)
!7662 = !DILocation(line: 1591, column: 17, scope: !7659)
!7663 = !DILocation(line: 1591, column: 6, scope: !7618)
!7664 = !DILocation(line: 1592, column: 13, scope: !7665)
!7665 = distinct !DILexicalBlock(scope: !7659, file: !3, line: 1591, column: 27)
!7666 = !DILocation(line: 1592, column: 20, scope: !7665)
!7667 = !DILocation(line: 1592, column: 11, scope: !7665)
!7668 = !DILocation(line: 1593, column: 15, scope: !7665)
!7669 = !DILocation(line: 1593, column: 22, scope: !7665)
!7670 = !DILocation(line: 1593, column: 13, scope: !7665)
!7671 = !DILocation(line: 1594, column: 13, scope: !7665)
!7672 = !DILocation(line: 1594, column: 20, scope: !7665)
!7673 = !DILocation(line: 1594, column: 11, scope: !7665)
!7674 = !DILocation(line: 1596, column: 13, scope: !7665)
!7675 = !DILocation(line: 1596, column: 11, scope: !7665)
!7676 = !DILocation(line: 1597, column: 8, scope: !7677)
!7677 = distinct !DILexicalBlock(scope: !7665, file: !3, line: 1597, column: 7)
!7678 = !DILocation(line: 1597, column: 7, scope: !7665)
!7679 = !DILocation(line: 1598, column: 4, scope: !7677)
!7680 = !DILocation(line: 1600, column: 16, scope: !7665)
!7681 = !DILocation(line: 1600, column: 3, scope: !7665)
!7682 = !DILocation(line: 1600, column: 10, scope: !7665)
!7683 = !DILocation(line: 1600, column: 14, scope: !7665)
!7684 = !DILocation(line: 1601, column: 33, scope: !7665)
!7685 = !DILocation(line: 1601, column: 40, scope: !7665)
!7686 = !DILocation(line: 1601, column: 47, scope: !7665)
!7687 = !DILocation(line: 1601, column: 54, scope: !7665)
!7688 = !DILocation(line: 1601, column: 16, scope: !7665)
!7689 = !DILocation(line: 1601, column: 3, scope: !7665)
!7690 = !DILocation(line: 1601, column: 10, scope: !7665)
!7691 = !DILocation(line: 1601, column: 14, scope: !7665)
!7692 = !DILocation(line: 1602, column: 21, scope: !7665)
!7693 = !DILocation(line: 1602, column: 3, scope: !7665)
!7694 = !DILocation(line: 1603, column: 18, scope: !7665)
!7695 = !DILocation(line: 1603, column: 3, scope: !7665)
!7696 = !DILocation(line: 1604, column: 27, scope: !7665)
!7697 = !DILocation(line: 1604, column: 3, scope: !7665)
!7698 = !DILocation(line: 1605, column: 26, scope: !7665)
!7699 = !DILocation(line: 1605, column: 3, scope: !7665)
!7700 = !DILocation(line: 1607, column: 31, scope: !7665)
!7701 = !DILocation(line: 1607, column: 38, scope: !7665)
!7702 = !DILocation(line: 1607, column: 9, scope: !7665)
!7703 = !DILocation(line: 1607, column: 7, scope: !7665)
!7704 = !DILocation(line: 1608, column: 7, scope: !7705)
!7705 = distinct !DILexicalBlock(scope: !7665, file: !3, line: 1608, column: 7)
!7706 = !DILocation(line: 1608, column: 7, scope: !7665)
!7707 = !DILocation(line: 1609, column: 22, scope: !7708)
!7708 = distinct !DILexicalBlock(scope: !7705, file: !3, line: 1608, column: 12)
!7709 = !DILocation(line: 1609, column: 4, scope: !7708)
!7710 = !DILocation(line: 1611, column: 17, scope: !7708)
!7711 = !DILocation(line: 1611, column: 4, scope: !7708)
!7712 = !DILocation(line: 1611, column: 11, scope: !7708)
!7713 = !DILocation(line: 1611, column: 15, scope: !7708)
!7714 = !DILocation(line: 1612, column: 34, scope: !7708)
!7715 = !DILocation(line: 1612, column: 41, scope: !7708)
!7716 = !DILocation(line: 1612, column: 50, scope: !7708)
!7717 = !DILocation(line: 1612, column: 17, scope: !7708)
!7718 = !DILocation(line: 1612, column: 4, scope: !7708)
!7719 = !DILocation(line: 1612, column: 11, scope: !7708)
!7720 = !DILocation(line: 1612, column: 15, scope: !7708)
!7721 = !DILocation(line: 1613, column: 28, scope: !7708)
!7722 = !DILocation(line: 1613, column: 4, scope: !7708)
!7723 = !DILocation(line: 1614, column: 27, scope: !7708)
!7724 = !DILocation(line: 1614, column: 4, scope: !7708)
!7725 = !DILocation(line: 1616, column: 11, scope: !7708)
!7726 = !DILocation(line: 1616, column: 4, scope: !7708)
!7727 = !DILocation(line: 1618, column: 27, scope: !7665)
!7728 = !DILocation(line: 1618, column: 3, scope: !7665)
!7729 = !DILocation(line: 1619, column: 2, scope: !7665)
!7730 = !DILocation(line: 1620, column: 9, scope: !7618)
!7731 = !DILocation(line: 1620, column: 2, scope: !7618)
!7732 = !DILocation(line: 1621, column: 1, scope: !7618)
!7733 = distinct !DISubprogram(name: "atkbd_do_show_softrepeat", scope: !3, file: !3, line: 281, type: !4250, scopeLine: 281, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!7734 = !DILocalVariable(name: "d", arg: 1, scope: !7733, file: !3, line: 281, type: !255)
!7735 = !DILocation(line: 281, column: 1, scope: !7733)
!7736 = !DILocalVariable(name: "attr", arg: 2, scope: !7733, file: !3, line: 281, type: !4252)
!7737 = !DILocalVariable(name: "b", arg: 3, scope: !7733, file: !3, line: 281, type: !298)
!7738 = distinct !DISubprogram(name: "atkbd_do_set_softrepeat", scope: !3, file: !3, line: 281, type: !4255, scopeLine: 281, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!7739 = !DILocalVariable(name: "d", arg: 1, scope: !7738, file: !3, line: 281, type: !255)
!7740 = !DILocation(line: 281, column: 1, scope: !7738)
!7741 = !DILocalVariable(name: "attr", arg: 2, scope: !7738, file: !3, line: 281, type: !4252)
!7742 = !DILocalVariable(name: "b", arg: 3, scope: !7738, file: !3, line: 281, type: !223)
!7743 = !DILocalVariable(name: "s", arg: 4, scope: !7738, file: !3, line: 281, type: !344)
!7744 = distinct !DISubprogram(name: "atkbd_show_softrepeat", scope: !3, file: !3, line: 1623, type: !7098, scopeLine: 1624, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!7745 = !DILocalVariable(name: "atkbd", arg: 1, scope: !7744, file: !3, line: 1623, type: !147)
!7746 = !DILocation(line: 1623, column: 52, scope: !7744)
!7747 = !DILocalVariable(name: "buf", arg: 2, scope: !7744, file: !3, line: 1623, type: !298)
!7748 = !DILocation(line: 1623, column: 65, scope: !7744)
!7749 = !DILocation(line: 1625, column: 17, scope: !7744)
!7750 = !DILocation(line: 1625, column: 30, scope: !7744)
!7751 = !DILocation(line: 1625, column: 37, scope: !7744)
!7752 = !DILocation(line: 1625, column: 9, scope: !7744)
!7753 = !DILocation(line: 1625, column: 2, scope: !7744)
!7754 = distinct !DISubprogram(name: "atkbd_set_softrepeat", scope: !3, file: !3, line: 1628, type: !7194, scopeLine: 1629, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!7755 = !DILocalVariable(name: "atkbd", arg: 1, scope: !7754, file: !3, line: 1628, type: !147)
!7756 = !DILocation(line: 1628, column: 51, scope: !7754)
!7757 = !DILocalVariable(name: "buf", arg: 2, scope: !7754, file: !3, line: 1628, type: !223)
!7758 = !DILocation(line: 1628, column: 70, scope: !7754)
!7759 = !DILocalVariable(name: "count", arg: 3, scope: !7754, file: !3, line: 1628, type: !344)
!7760 = !DILocation(line: 1628, column: 82, scope: !7754)
!7761 = !DILocalVariable(name: "old_dev", scope: !7754, file: !3, line: 1630, type: !3682)
!7762 = !DILocation(line: 1630, column: 20, scope: !7754)
!7763 = !DILocalVariable(name: "new_dev", scope: !7754, file: !3, line: 1630, type: !3682)
!7764 = !DILocation(line: 1630, column: 30, scope: !7754)
!7765 = !DILocalVariable(name: "value", scope: !7754, file: !3, line: 1631, type: !7)
!7766 = !DILocation(line: 1631, column: 15, scope: !7754)
!7767 = !DILocalVariable(name: "err", scope: !7754, file: !3, line: 1632, type: !132)
!7768 = !DILocation(line: 1632, column: 6, scope: !7754)
!7769 = !DILocalVariable(name: "old_softrepeat", scope: !7754, file: !3, line: 1633, type: !171)
!7770 = !DILocation(line: 1633, column: 7, scope: !7754)
!7771 = !DILocalVariable(name: "old_softraw", scope: !7754, file: !3, line: 1633, type: !171)
!7772 = !DILocation(line: 1633, column: 23, scope: !7754)
!7773 = !DILocation(line: 1635, column: 7, scope: !7774)
!7774 = distinct !DILexicalBlock(scope: !7754, file: !3, line: 1635, column: 6)
!7775 = !DILocation(line: 1635, column: 14, scope: !7774)
!7776 = !DILocation(line: 1635, column: 6, scope: !7754)
!7777 = !DILocation(line: 1636, column: 3, scope: !7774)
!7778 = !DILocation(line: 1638, column: 19, scope: !7754)
!7779 = !DILocation(line: 1638, column: 8, scope: !7754)
!7780 = !DILocation(line: 1638, column: 6, scope: !7754)
!7781 = !DILocation(line: 1639, column: 6, scope: !7782)
!7782 = distinct !DILexicalBlock(scope: !7754, file: !3, line: 1639, column: 6)
!7783 = !DILocation(line: 1639, column: 6, scope: !7754)
!7784 = !DILocation(line: 1640, column: 10, scope: !7782)
!7785 = !DILocation(line: 1640, column: 3, scope: !7782)
!7786 = !DILocation(line: 1642, column: 6, scope: !7787)
!7787 = distinct !DILexicalBlock(scope: !7754, file: !3, line: 1642, column: 6)
!7788 = !DILocation(line: 1642, column: 12, scope: !7787)
!7789 = !DILocation(line: 1642, column: 6, scope: !7754)
!7790 = !DILocation(line: 1643, column: 3, scope: !7787)
!7791 = !DILocation(line: 1645, column: 6, scope: !7792)
!7792 = distinct !DILexicalBlock(scope: !7754, file: !3, line: 1645, column: 6)
!7793 = !DILocation(line: 1645, column: 13, scope: !7792)
!7794 = !DILocation(line: 1645, column: 27, scope: !7792)
!7795 = !DILocation(line: 1645, column: 24, scope: !7792)
!7796 = !DILocation(line: 1645, column: 6, scope: !7754)
!7797 = !DILocation(line: 1646, column: 13, scope: !7798)
!7798 = distinct !DILexicalBlock(scope: !7792, file: !3, line: 1645, column: 34)
!7799 = !DILocation(line: 1646, column: 20, scope: !7798)
!7800 = !DILocation(line: 1646, column: 11, scope: !7798)
!7801 = !DILocation(line: 1647, column: 20, scope: !7798)
!7802 = !DILocation(line: 1647, column: 27, scope: !7798)
!7803 = !DILocation(line: 1647, column: 18, scope: !7798)
!7804 = !DILocation(line: 1648, column: 17, scope: !7798)
!7805 = !DILocation(line: 1648, column: 24, scope: !7798)
!7806 = !DILocation(line: 1648, column: 15, scope: !7798)
!7807 = !DILocation(line: 1650, column: 13, scope: !7798)
!7808 = !DILocation(line: 1650, column: 11, scope: !7798)
!7809 = !DILocation(line: 1651, column: 8, scope: !7810)
!7810 = distinct !DILexicalBlock(scope: !7798, file: !3, line: 1651, column: 7)
!7811 = !DILocation(line: 1651, column: 7, scope: !7798)
!7812 = !DILocation(line: 1652, column: 4, scope: !7810)
!7813 = !DILocation(line: 1654, column: 16, scope: !7798)
!7814 = !DILocation(line: 1654, column: 3, scope: !7798)
!7815 = !DILocation(line: 1654, column: 10, scope: !7798)
!7816 = !DILocation(line: 1654, column: 14, scope: !7798)
!7817 = !DILocation(line: 1655, column: 23, scope: !7798)
!7818 = !DILocation(line: 1655, column: 3, scope: !7798)
!7819 = !DILocation(line: 1655, column: 10, scope: !7798)
!7820 = !DILocation(line: 1655, column: 21, scope: !7798)
!7821 = !DILocation(line: 1656, column: 7, scope: !7822)
!7822 = distinct !DILexicalBlock(scope: !7798, file: !3, line: 1656, column: 7)
!7823 = !DILocation(line: 1656, column: 14, scope: !7822)
!7824 = !DILocation(line: 1656, column: 7, scope: !7798)
!7825 = !DILocation(line: 1657, column: 4, scope: !7822)
!7826 = !DILocation(line: 1657, column: 11, scope: !7822)
!7827 = !DILocation(line: 1657, column: 19, scope: !7822)
!7828 = !DILocation(line: 1658, column: 26, scope: !7798)
!7829 = !DILocation(line: 1658, column: 3, scope: !7798)
!7830 = !DILocation(line: 1660, column: 31, scope: !7798)
!7831 = !DILocation(line: 1660, column: 38, scope: !7798)
!7832 = !DILocation(line: 1660, column: 9, scope: !7798)
!7833 = !DILocation(line: 1660, column: 7, scope: !7798)
!7834 = !DILocation(line: 1661, column: 7, scope: !7835)
!7835 = distinct !DILexicalBlock(scope: !7798, file: !3, line: 1661, column: 7)
!7836 = !DILocation(line: 1661, column: 7, scope: !7798)
!7837 = !DILocation(line: 1662, column: 22, scope: !7838)
!7838 = distinct !DILexicalBlock(scope: !7835, file: !3, line: 1661, column: 12)
!7839 = !DILocation(line: 1662, column: 4, scope: !7838)
!7840 = !DILocation(line: 1664, column: 17, scope: !7838)
!7841 = !DILocation(line: 1664, column: 4, scope: !7838)
!7842 = !DILocation(line: 1664, column: 11, scope: !7838)
!7843 = !DILocation(line: 1664, column: 15, scope: !7838)
!7844 = !DILocation(line: 1665, column: 24, scope: !7838)
!7845 = !DILocation(line: 1665, column: 4, scope: !7838)
!7846 = !DILocation(line: 1665, column: 11, scope: !7838)
!7847 = !DILocation(line: 1665, column: 22, scope: !7838)
!7848 = !DILocation(line: 1666, column: 21, scope: !7838)
!7849 = !DILocation(line: 1666, column: 4, scope: !7838)
!7850 = !DILocation(line: 1666, column: 11, scope: !7838)
!7851 = !DILocation(line: 1666, column: 19, scope: !7838)
!7852 = !DILocation(line: 1667, column: 27, scope: !7838)
!7853 = !DILocation(line: 1667, column: 4, scope: !7838)
!7854 = !DILocation(line: 1669, column: 11, scope: !7838)
!7855 = !DILocation(line: 1669, column: 4, scope: !7838)
!7856 = !DILocation(line: 1671, column: 27, scope: !7798)
!7857 = !DILocation(line: 1671, column: 3, scope: !7798)
!7858 = !DILocation(line: 1672, column: 2, scope: !7798)
!7859 = !DILocation(line: 1673, column: 9, scope: !7754)
!7860 = !DILocation(line: 1673, column: 2, scope: !7754)
!7861 = !DILocation(line: 1674, column: 1, scope: !7754)
!7862 = distinct !DISubprogram(name: "atkbd_do_show_softraw", scope: !3, file: !3, line: 282, type: !4250, scopeLine: 282, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!7863 = !DILocalVariable(name: "d", arg: 1, scope: !7862, file: !3, line: 282, type: !255)
!7864 = !DILocation(line: 282, column: 1, scope: !7862)
!7865 = !DILocalVariable(name: "attr", arg: 2, scope: !7862, file: !3, line: 282, type: !4252)
!7866 = !DILocalVariable(name: "b", arg: 3, scope: !7862, file: !3, line: 282, type: !298)
!7867 = distinct !DISubprogram(name: "atkbd_do_set_softraw", scope: !3, file: !3, line: 282, type: !4255, scopeLine: 282, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!7868 = !DILocalVariable(name: "d", arg: 1, scope: !7867, file: !3, line: 282, type: !255)
!7869 = !DILocation(line: 282, column: 1, scope: !7867)
!7870 = !DILocalVariable(name: "attr", arg: 2, scope: !7867, file: !3, line: 282, type: !4252)
!7871 = !DILocalVariable(name: "b", arg: 3, scope: !7867, file: !3, line: 282, type: !223)
!7872 = !DILocalVariable(name: "s", arg: 4, scope: !7867, file: !3, line: 282, type: !344)
!7873 = distinct !DISubprogram(name: "atkbd_show_softraw", scope: !3, file: !3, line: 1677, type: !7098, scopeLine: 1678, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!7874 = !DILocalVariable(name: "atkbd", arg: 1, scope: !7873, file: !3, line: 1677, type: !147)
!7875 = !DILocation(line: 1677, column: 49, scope: !7873)
!7876 = !DILocalVariable(name: "buf", arg: 2, scope: !7873, file: !3, line: 1677, type: !298)
!7877 = !DILocation(line: 1677, column: 62, scope: !7873)
!7878 = !DILocation(line: 1679, column: 17, scope: !7873)
!7879 = !DILocation(line: 1679, column: 30, scope: !7873)
!7880 = !DILocation(line: 1679, column: 37, scope: !7873)
!7881 = !DILocation(line: 1679, column: 9, scope: !7873)
!7882 = !DILocation(line: 1679, column: 2, scope: !7873)
!7883 = distinct !DISubprogram(name: "atkbd_set_softraw", scope: !3, file: !3, line: 1682, type: !7194, scopeLine: 1683, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!7884 = !DILocalVariable(name: "atkbd", arg: 1, scope: !7883, file: !3, line: 1682, type: !147)
!7885 = !DILocation(line: 1682, column: 48, scope: !7883)
!7886 = !DILocalVariable(name: "buf", arg: 2, scope: !7883, file: !3, line: 1682, type: !223)
!7887 = !DILocation(line: 1682, column: 67, scope: !7883)
!7888 = !DILocalVariable(name: "count", arg: 3, scope: !7883, file: !3, line: 1682, type: !344)
!7889 = !DILocation(line: 1682, column: 79, scope: !7883)
!7890 = !DILocalVariable(name: "old_dev", scope: !7883, file: !3, line: 1684, type: !3682)
!7891 = !DILocation(line: 1684, column: 20, scope: !7883)
!7892 = !DILocalVariable(name: "new_dev", scope: !7883, file: !3, line: 1684, type: !3682)
!7893 = !DILocation(line: 1684, column: 30, scope: !7883)
!7894 = !DILocalVariable(name: "value", scope: !7883, file: !3, line: 1685, type: !7)
!7895 = !DILocation(line: 1685, column: 15, scope: !7883)
!7896 = !DILocalVariable(name: "err", scope: !7883, file: !3, line: 1686, type: !132)
!7897 = !DILocation(line: 1686, column: 6, scope: !7883)
!7898 = !DILocalVariable(name: "old_softraw", scope: !7883, file: !3, line: 1687, type: !171)
!7899 = !DILocation(line: 1687, column: 7, scope: !7883)
!7900 = !DILocation(line: 1689, column: 19, scope: !7883)
!7901 = !DILocation(line: 1689, column: 8, scope: !7883)
!7902 = !DILocation(line: 1689, column: 6, scope: !7883)
!7903 = !DILocation(line: 1690, column: 6, scope: !7904)
!7904 = distinct !DILexicalBlock(scope: !7883, file: !3, line: 1690, column: 6)
!7905 = !DILocation(line: 1690, column: 6, scope: !7883)
!7906 = !DILocation(line: 1691, column: 10, scope: !7904)
!7907 = !DILocation(line: 1691, column: 3, scope: !7904)
!7908 = !DILocation(line: 1693, column: 6, scope: !7909)
!7909 = distinct !DILexicalBlock(scope: !7883, file: !3, line: 1693, column: 6)
!7910 = !DILocation(line: 1693, column: 12, scope: !7909)
!7911 = !DILocation(line: 1693, column: 6, scope: !7883)
!7912 = !DILocation(line: 1694, column: 3, scope: !7909)
!7913 = !DILocation(line: 1696, column: 6, scope: !7914)
!7914 = distinct !DILexicalBlock(scope: !7883, file: !3, line: 1696, column: 6)
!7915 = !DILocation(line: 1696, column: 13, scope: !7914)
!7916 = !DILocation(line: 1696, column: 24, scope: !7914)
!7917 = !DILocation(line: 1696, column: 21, scope: !7914)
!7918 = !DILocation(line: 1696, column: 6, scope: !7883)
!7919 = !DILocation(line: 1697, column: 13, scope: !7920)
!7920 = distinct !DILexicalBlock(scope: !7914, file: !3, line: 1696, column: 31)
!7921 = !DILocation(line: 1697, column: 20, scope: !7920)
!7922 = !DILocation(line: 1697, column: 11, scope: !7920)
!7923 = !DILocation(line: 1698, column: 17, scope: !7920)
!7924 = !DILocation(line: 1698, column: 24, scope: !7920)
!7925 = !DILocation(line: 1698, column: 15, scope: !7920)
!7926 = !DILocation(line: 1700, column: 13, scope: !7920)
!7927 = !DILocation(line: 1700, column: 11, scope: !7920)
!7928 = !DILocation(line: 1701, column: 8, scope: !7929)
!7929 = distinct !DILexicalBlock(scope: !7920, file: !3, line: 1701, column: 7)
!7930 = !DILocation(line: 1701, column: 7, scope: !7920)
!7931 = !DILocation(line: 1702, column: 4, scope: !7929)
!7932 = !DILocation(line: 1704, column: 16, scope: !7920)
!7933 = !DILocation(line: 1704, column: 3, scope: !7920)
!7934 = !DILocation(line: 1704, column: 10, scope: !7920)
!7935 = !DILocation(line: 1704, column: 14, scope: !7920)
!7936 = !DILocation(line: 1705, column: 20, scope: !7920)
!7937 = !DILocation(line: 1705, column: 3, scope: !7920)
!7938 = !DILocation(line: 1705, column: 10, scope: !7920)
!7939 = !DILocation(line: 1705, column: 18, scope: !7920)
!7940 = !DILocation(line: 1706, column: 26, scope: !7920)
!7941 = !DILocation(line: 1706, column: 3, scope: !7920)
!7942 = !DILocation(line: 1708, column: 31, scope: !7920)
!7943 = !DILocation(line: 1708, column: 38, scope: !7920)
!7944 = !DILocation(line: 1708, column: 9, scope: !7920)
!7945 = !DILocation(line: 1708, column: 7, scope: !7920)
!7946 = !DILocation(line: 1709, column: 7, scope: !7947)
!7947 = distinct !DILexicalBlock(scope: !7920, file: !3, line: 1709, column: 7)
!7948 = !DILocation(line: 1709, column: 7, scope: !7920)
!7949 = !DILocation(line: 1710, column: 22, scope: !7950)
!7950 = distinct !DILexicalBlock(scope: !7947, file: !3, line: 1709, column: 12)
!7951 = !DILocation(line: 1710, column: 4, scope: !7950)
!7952 = !DILocation(line: 1712, column: 17, scope: !7950)
!7953 = !DILocation(line: 1712, column: 4, scope: !7950)
!7954 = !DILocation(line: 1712, column: 11, scope: !7950)
!7955 = !DILocation(line: 1712, column: 15, scope: !7950)
!7956 = !DILocation(line: 1713, column: 21, scope: !7950)
!7957 = !DILocation(line: 1713, column: 4, scope: !7950)
!7958 = !DILocation(line: 1713, column: 11, scope: !7950)
!7959 = !DILocation(line: 1713, column: 19, scope: !7950)
!7960 = !DILocation(line: 1714, column: 27, scope: !7950)
!7961 = !DILocation(line: 1714, column: 4, scope: !7950)
!7962 = !DILocation(line: 1716, column: 11, scope: !7950)
!7963 = !DILocation(line: 1716, column: 4, scope: !7950)
!7964 = !DILocation(line: 1718, column: 27, scope: !7920)
!7965 = !DILocation(line: 1718, column: 3, scope: !7920)
!7966 = !DILocation(line: 1719, column: 2, scope: !7920)
!7967 = !DILocation(line: 1720, column: 9, scope: !7883)
!7968 = !DILocation(line: 1720, column: 2, scope: !7883)
!7969 = !DILocation(line: 1721, column: 1, scope: !7883)
!7970 = distinct !DISubprogram(name: "atkbd_do_show_err_count", scope: !3, file: !3, line: 294, type: !4250, scopeLine: 294, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!7971 = !DILocalVariable(name: "d", arg: 1, scope: !7970, file: !3, line: 294, type: !255)
!7972 = !DILocation(line: 294, column: 1, scope: !7970)
!7973 = !DILocalVariable(name: "attr", arg: 2, scope: !7970, file: !3, line: 294, type: !4252)
!7974 = !DILocalVariable(name: "b", arg: 3, scope: !7970, file: !3, line: 294, type: !298)
!7975 = distinct !DISubprogram(name: "atkbd_show_err_count", scope: !3, file: !3, line: 1723, type: !7098, scopeLine: 1724, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!7976 = !DILocalVariable(name: "atkbd", arg: 1, scope: !7975, file: !3, line: 1723, type: !147)
!7977 = !DILocation(line: 1723, column: 51, scope: !7975)
!7978 = !DILocalVariable(name: "buf", arg: 2, scope: !7975, file: !3, line: 1723, type: !298)
!7979 = !DILocation(line: 1723, column: 64, scope: !7975)
!7980 = !DILocation(line: 1725, column: 17, scope: !7975)
!7981 = !DILocation(line: 1725, column: 31, scope: !7975)
!7982 = !DILocation(line: 1725, column: 38, scope: !7975)
!7983 = !DILocation(line: 1725, column: 9, scope: !7975)
!7984 = !DILocation(line: 1725, column: 2, scope: !7975)
!7985 = distinct !DISubprogram(name: "atkbd_setup_forced_release", scope: !3, file: !3, line: 1728, type: !4282, scopeLine: 1729, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!7986 = !DILocalVariable(name: "id", arg: 1, scope: !7985, file: !3, line: 1728, type: !4284)
!7987 = !DILocation(line: 1728, column: 74, scope: !7985)
!7988 = !DILocation(line: 1730, column: 23, scope: !7985)
!7989 = !DILocation(line: 1731, column: 30, scope: !7985)
!7990 = !DILocation(line: 1731, column: 34, scope: !7985)
!7991 = !DILocation(line: 1731, column: 28, scope: !7985)
!7992 = !DILocation(line: 1733, column: 2, scope: !7985)
!7993 = distinct !DISubprogram(name: "atkbd_setup_scancode_fixup", scope: !3, file: !3, line: 1736, type: !4282, scopeLine: 1737, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!7994 = !DILocalVariable(name: "id", arg: 1, scope: !7993, file: !3, line: 1736, type: !4284)
!7995 = !DILocation(line: 1736, column: 74, scope: !7993)
!7996 = !DILocation(line: 1738, column: 34, scope: !7993)
!7997 = !DILocation(line: 1738, column: 38, scope: !7993)
!7998 = !DILocation(line: 1738, column: 32, scope: !7993)
!7999 = !DILocation(line: 1740, column: 2, scope: !7993)
!8000 = distinct !DISubprogram(name: "atkbd_oqo_01plus_scancode_fixup", scope: !3, file: !3, line: 1026, type: !4205, scopeLine: 1028, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!8001 = !DILocalVariable(name: "atkbd", arg: 1, scope: !8000, file: !3, line: 1026, type: !147)
!8002 = !DILocation(line: 1026, column: 67, scope: !8000)
!8003 = !DILocalVariable(name: "code", arg: 2, scope: !8000, file: !3, line: 1027, type: !7)
!8004 = !DILocation(line: 1027, column: 24, scope: !8000)
!8005 = !DILocation(line: 1029, column: 6, scope: !8006)
!8006 = distinct !DILexicalBlock(scope: !8000, file: !3, line: 1029, column: 6)
!8007 = !DILocation(line: 1029, column: 13, scope: !8006)
!8008 = !DILocation(line: 1029, column: 24, scope: !8006)
!8009 = !DILocation(line: 1029, column: 27, scope: !8006)
!8010 = !DILocation(line: 1029, column: 34, scope: !8006)
!8011 = !DILocation(line: 1029, column: 39, scope: !8006)
!8012 = !DILocation(line: 1029, column: 44, scope: !8006)
!8013 = !DILocation(line: 1030, column: 7, scope: !8006)
!8014 = !DILocation(line: 1030, column: 12, scope: !8006)
!8015 = !DILocation(line: 1030, column: 20, scope: !8006)
!8016 = !DILocation(line: 1030, column: 23, scope: !8006)
!8017 = !DILocation(line: 1030, column: 28, scope: !8006)
!8018 = !DILocation(line: 1030, column: 36, scope: !8006)
!8019 = !DILocation(line: 1030, column: 39, scope: !8006)
!8020 = !DILocation(line: 1030, column: 44, scope: !8006)
!8021 = !DILocation(line: 1029, column: 6, scope: !8000)
!8022 = !DILocation(line: 1031, column: 3, scope: !8023)
!8023 = distinct !DILexicalBlock(scope: !8006, file: !3, line: 1030, column: 54)
!8024 = !DILocation(line: 1031, column: 10, scope: !8023)
!8025 = !DILocation(line: 1031, column: 15, scope: !8023)
!8026 = !DILocation(line: 1032, column: 8, scope: !8023)
!8027 = !DILocation(line: 1033, column: 2, scope: !8023)
!8028 = !DILocation(line: 1035, column: 9, scope: !8000)
!8029 = !DILocation(line: 1035, column: 2, scope: !8000)
!8030 = distinct !DISubprogram(name: "atkbd_deactivate_fixup", scope: !3, file: !3, line: 1743, type: !4282, scopeLine: 1744, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!8031 = !DILocalVariable(name: "id", arg: 1, scope: !8030, file: !3, line: 1743, type: !4284)
!8032 = !DILocation(line: 1743, column: 70, scope: !8030)
!8033 = !DILocation(line: 1745, column: 24, scope: !8030)
!8034 = !DILocation(line: 1746, column: 2, scope: !8030)
!8035 = distinct !DISubprogram(name: "atkbd_apply_forced_release_keylist", scope: !3, file: !3, line: 959, type: !4237, scopeLine: 961, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!8036 = !DILocalVariable(name: "atkbd", arg: 1, scope: !8035, file: !3, line: 959, type: !147)
!8037 = !DILocation(line: 959, column: 62, scope: !8035)
!8038 = !DILocalVariable(name: "data", arg: 2, scope: !8035, file: !3, line: 960, type: !3070)
!8039 = !DILocation(line: 960, column: 19, scope: !8035)
!8040 = !DILocalVariable(name: "keys", scope: !8035, file: !3, line: 962, type: !8041)
!8041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2691, size: 64)
!8042 = !DILocation(line: 962, column: 22, scope: !8035)
!8043 = !DILocation(line: 962, column: 29, scope: !8035)
!8044 = !DILocalVariable(name: "i", scope: !8035, file: !3, line: 963, type: !7)
!8045 = !DILocation(line: 963, column: 15, scope: !8035)
!8046 = !DILocation(line: 965, column: 6, scope: !8047)
!8047 = distinct !DILexicalBlock(scope: !8035, file: !3, line: 965, column: 6)
!8048 = !DILocation(line: 965, column: 13, scope: !8047)
!8049 = !DILocation(line: 965, column: 17, scope: !8047)
!8050 = !DILocation(line: 965, column: 6, scope: !8035)
!8051 = !DILocation(line: 966, column: 10, scope: !8052)
!8052 = distinct !DILexicalBlock(scope: !8047, file: !3, line: 966, column: 3)
!8053 = !DILocation(line: 966, column: 8, scope: !8052)
!8054 = !DILocation(line: 966, column: 15, scope: !8055)
!8055 = distinct !DILexicalBlock(scope: !8052, file: !3, line: 966, column: 3)
!8056 = !DILocation(line: 966, column: 20, scope: !8055)
!8057 = !DILocation(line: 966, column: 23, scope: !8055)
!8058 = !DILocation(line: 966, column: 3, scope: !8052)
!8059 = !DILocation(line: 967, column: 14, scope: !8055)
!8060 = !DILocation(line: 967, column: 19, scope: !8055)
!8061 = !DILocation(line: 967, column: 23, scope: !8055)
!8062 = !DILocation(line: 967, column: 30, scope: !8055)
!8063 = !DILocation(line: 967, column: 4, scope: !8055)
!8064 = !DILocation(line: 966, column: 32, scope: !8055)
!8065 = !DILocation(line: 966, column: 3, scope: !8055)
!8066 = distinct !{!8066, !8058, !8067}
!8067 = !DILocation(line: 967, column: 48, scope: !8052)
!8068 = !DILocation(line: 968, column: 1, scope: !8035)
