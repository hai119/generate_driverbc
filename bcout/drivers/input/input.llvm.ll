; ModuleID = '../bcout/drivers/input/input.llvm.bc'
source_filename = "drivers/input/input.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64"

module asm ".section\09\22.initcall4.init\22, \22a\22\09"
module asm "__initcall_input_init4:\09\09\09"
module asm ".long\09input_init - .\09\09\09"
module asm ".previous\09\09\09\09\09"

%struct.input_value = type { i16, i16, i32 }
%struct.class = type { i8*, %struct.module*, %struct.attribute_group**, %struct.attribute_group**, %struct.kobject*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*)*, void (%struct.class*)*, void (%struct.device*)*, i32 (%struct.device*)*, %struct.kobj_ns_type_operations*, i8* (%struct.device*)*, void (%struct.device*, %struct.kuid_t*, %struct.kgid_t*)*, %struct.dev_pm_ops*, %struct.subsys_private* }
%struct.module = type opaque
%struct.attribute_group = type { i8*, i16 (%struct.kobject*, %struct.attribute*, i32)*, i16 (%struct.kobject*, %struct.bin_attribute*, i32)*, %struct.attribute**, %struct.bin_attribute** }
%struct.attribute = type { i8*, i16 }
%struct.bin_attribute = type { %struct.attribute, i64, i8*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i32 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, %struct.vm_area_struct*)* }
%struct.file = type { %union.anon.1, %struct.path, %struct.inode*, %struct.file_operations*, %struct.spinlock, i32, %struct.atomic64_t, i32, i32, %struct.mutex, i64, %struct.fown_struct, %struct.cred*, %struct.file_ra_state, i64, i8*, %struct.list_head, %struct.list_head, %struct.address_space*, i32, i32 }
%union.anon.1 = type { %struct.callback_head }
%struct.callback_head = type { %struct.callback_head*, void (%struct.callback_head*)* }
%struct.path = type { %struct.vfsmount*, %struct.dentry* }
%struct.vfsmount = type opaque
%struct.dentry = type { i32, %struct.seqcount_spinlock, %struct.hlist_bl_node, %struct.dentry*, %struct.qstr, %struct.inode*, [32 x i8], %struct.lockref, %struct.dentry_operations*, %struct.super_block*, i64, i8*, %union.anon.65, %struct.list_head, %struct.list_head, %union.anon.66 }
%struct.seqcount_spinlock = type { %struct.seqcount }
%struct.seqcount = type { i32 }
%struct.hlist_bl_node = type { %struct.hlist_bl_node*, %struct.hlist_bl_node** }
%struct.qstr = type { %union.anon.2, i8* }
%union.anon.2 = type { i64 }
%struct.lockref = type { %union.anon.63 }
%union.anon.63 = type { %struct.anon.64 }
%struct.anon.64 = type { %struct.spinlock, i32 }
%struct.dentry_operations = type { i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.qstr*)*, i32 (%struct.dentry*, i32, i8*, %struct.qstr*)*, i32 (%struct.dentry*)*, i32 (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*, %struct.inode*)*, i8* (%struct.dentry*, i8*, i32)*, %struct.vfsmount* (%struct.path*)*, i32 (%struct.path*, i1)*, %struct.dentry* (%struct.dentry*, %struct.inode*)*, [24 x i8] }
%struct.super_block = type { %struct.list_head, i32, i8, i64, i64, %struct.file_system_type*, %struct.super_operations*, %struct.dquot_operations*, %struct.quotactl_ops*, %struct.export_operations*, i64, i64, i64, %struct.dentry*, %struct.rw_semaphore, i32, %struct.atomic_t, %struct.xattr_handler**, %struct.hlist_bl_head, %struct.list_head, %struct.block_device*, %struct.backing_dev_info*, %struct.mtd_info*, %struct.hlist_node, i32, %struct.quota_info, %struct.sb_writers, i8*, i32, i64, i64, i32, %struct.fsnotify_mark_connector*, [32 x i8], %struct.uuid_t, i32, i32, %struct.mutex, i8*, %struct.dentry_operations*, i32, %struct.shrinker, %struct.atomic64_t, %struct.atomic64_t, i32, i32, %struct.workqueue_struct*, %struct.hlist_head, %struct.user_namespace*, %struct.list_lru, %struct.list_lru, %struct.callback_head, %struct.work_struct, %struct.mutex, i32, %struct.spinlock, %struct.list_head, %struct.spinlock, %struct.list_head }
%struct.file_system_type = type { i8*, i32, i32 (%struct.fs_context*)*, %struct.fs_parameter_spec*, %struct.dentry* (%struct.file_system_type*, i32, i8*, i8*)*, void (%struct.super_block*)*, %struct.module*, %struct.file_system_type*, %struct.hlist_head, %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key, [3 x %struct.lock_class_key], %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key }
%struct.fs_context = type opaque
%struct.fs_parameter_spec = type opaque
%struct.lock_class_key = type {}
%struct.super_operations = type { %struct.inode* (%struct.super_block*)*, void (%struct.inode*)*, void (%struct.inode*)*, void (%struct.inode*, i32)*, i32 (%struct.inode*, %struct.writeback_control*)*, i32 (%struct.inode*)*, void (%struct.inode*)*, void (%struct.super_block*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.dentry*, %struct.kstatfs*)*, i32 (%struct.super_block*, i32*, i8*)*, void (%struct.super_block*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.super_block*, %struct.page*, i32)*, i64 (%struct.super_block*, %struct.shrink_control*)*, i64 (%struct.super_block*, %struct.shrink_control*)* }
%struct.writeback_control = type opaque
%struct.kstatfs = type opaque
%struct.seq_file = type { i8*, i64, i64, i64, i64, i64, i64, %struct.mutex, %struct.seq_operations*, i32, %struct.file*, i8* }
%struct.seq_operations = type { i8* (%struct.seq_file*, i64*)*, void (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i8*, i64*)*, i32 (%struct.seq_file*, i8*)* }
%struct.page = type { i64, %union.anon.3, %union.anon.55, %struct.atomic_t, [8 x i8] }
%union.anon.3 = type { %struct.anon.4 }
%struct.anon.4 = type { %struct.list_head, %struct.address_space*, i64, i64 }
%union.anon.55 = type { %struct.atomic_t }
%struct.shrink_control = type { i32, i32, i64, i64, %struct.mem_cgroup* }
%struct.mem_cgroup = type opaque
%struct.dquot_operations = type { i32 (%struct.dquot*)*, %struct.dquot* (%struct.super_block*, i32)*, void (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, i32)*, i64* (%struct.inode*)*, i32 (%struct.inode*, %struct.kprojid_t*)*, i32 (%struct.inode*, i64*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.dquot = type { %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.mutex, %struct.spinlock, %struct.atomic_t, %struct.super_block*, %struct.kqid, i64, i64, %struct.mem_dqblk }
%struct.kqid = type { %union.anon.56, i32 }
%union.anon.56 = type { %struct.kuid_t }
%struct.kuid_t = type { i32 }
%struct.mem_dqblk = type { i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.kprojid_t = type { i32 }
%struct.quotactl_ops = type { i32 (%struct.super_block*, i32, i32, %struct.path*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32, %struct.qc_info*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.kqid*, %struct.qc_dqblk*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.qc_state*)*, i32 (%struct.super_block*, i32)* }
%struct.qc_info = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.qc_dqblk = type { i32, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, i64, i64, i64, i64, i32 }
%struct.qc_state = type { i32, [3 x %struct.qc_type_state] }
%struct.qc_type_state = type { i32, i32, i32, i32, i32, i32, i32, i64, i64, i64 }
%struct.export_operations = type opaque
%struct.rw_semaphore = type { %struct.atomic64_t, %struct.atomic64_t, %struct.raw_spinlock, %struct.list_head }
%struct.raw_spinlock = type { %struct.arch_spinlock_t }
%struct.arch_spinlock_t = type {}
%struct.atomic_t = type { i32 }
%struct.xattr_handler = type opaque
%struct.hlist_bl_head = type { %struct.hlist_bl_node* }
%struct.block_device = type opaque
%struct.backing_dev_info = type opaque
%struct.mtd_info = type opaque
%struct.hlist_node = type { %struct.hlist_node*, %struct.hlist_node** }
%struct.quota_info = type { i32, %struct.rw_semaphore, [3 x %struct.inode*], [3 x %struct.mem_dqinfo], [3 x %struct.quota_format_ops*] }
%struct.mem_dqinfo = type { %struct.quota_format_type*, i32, %struct.list_head, i64, i32, i32, i64, i64, i8* }
%struct.quota_format_type = type { i32, %struct.quota_format_ops*, %struct.module*, %struct.quota_format_type* }
%struct.quota_format_ops = type { i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.sb_writers = type { i32, %struct.wait_queue_head, [3 x %struct.percpu_rw_semaphore] }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.percpu_rw_semaphore = type { %struct.rcu_sync, i32*, %struct.rcuwait, %struct.wait_queue_head, %struct.atomic_t }
%struct.rcu_sync = type { i32, i32, %struct.wait_queue_head, %struct.callback_head }
%struct.rcuwait = type { %struct.task_struct* }
%struct.task_struct = type { %struct.thread_info, i64, i8*, %struct.refcount_struct, i32, i32, i32, i32, i32, i32, i32, %struct.sched_class*, %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, i32, i32, %struct.cpumask*, %struct.cpumask, %struct.sched_info, %struct.list_head, %struct.mm_struct*, %struct.mm_struct*, %struct.vmacache, i32, i32, i32, i32, i64, i32, i8, [3 x i8], i8, i64, %struct.restart_block, i32, i32, i64, %struct.task_struct*, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.pid*, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, %struct.completion*, i32*, i32*, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, %struct.posix_cputimers, %struct.posix_cputimers_work, %struct.cred*, %struct.cred*, %struct.cred*, %struct.key*, [16 x i8], %struct.nameidata*, %struct.fs_struct*, %struct.files_struct*, %struct.io_uring_task*, %struct.nsproxy*, %struct.signal_struct*, %struct.sighand_struct*, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i64, i64, i32, %struct.callback_head*, %struct.seccomp, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, %struct.task_struct*, %struct.rt_mutex_waiter*, i8*, %struct.bio_list*, %struct.blk_plug*, %struct.reclaim_state*, %struct.backing_dev_info*, %struct.io_context*, %struct.capture_control*, i64, %struct.kernel_siginfo*, %struct.task_io_accounting, %struct.robust_list_head*, %struct.list_head, %struct.futex_pi_state*, %struct.mutex, i32, [2 x %struct.perf_event_context*], %struct.mutex, %struct.list_head, %struct.rseq*, i32, i64, %struct.tlbflush_unmap_batch, %union.anon.49, %struct.pipe_inode_info*, %struct.page_frag, i32, i32, i64, i64, i64, i32, %struct.task_struct*, %struct.vm_struct*, %struct.refcount_struct, i8*, i64, i64, i64, %struct.callback_head, [24 x i8], %struct.thread_struct }
%struct.thread_info = type { i64, i32 }
%struct.sched_class = type opaque
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, %struct.sched_statistics }
%struct.load_weight = type { i64, i32 }
%struct.rb_node = type { i64, %struct.rb_node*, %struct.rb_node* }
%struct.sched_statistics = type {}
%struct.sched_rt_entity = type { %struct.list_head, i64, i64, i32, i16, i16, %struct.sched_rt_entity* }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, %struct.sched_dl_entity* }
%struct.hrtimer = type { %struct.timerqueue_node, i64, i32 (%struct.hrtimer*)*, %struct.hrtimer_clock_base*, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.hrtimer_clock_base = type { %struct.hrtimer_cpu_base*, i32, i32, %struct.seqcount_raw_spinlock, %struct.hrtimer*, %struct.timerqueue_head, i64 ()*, i64 }
%struct.hrtimer_cpu_base = type { %struct.raw_spinlock, i32, i32, i32, i8, i64, %struct.hrtimer*, i64, %struct.hrtimer*, [16 x i8], [8 x %struct.hrtimer_clock_base] }
%struct.seqcount_raw_spinlock = type { %struct.seqcount }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.cpumask = type { [1 x i64] }
%struct.sched_info = type {}
%struct.mm_struct = type { %struct.anon.19, [0 x i64] }
%struct.anon.19 = type { %struct.vm_area_struct*, %struct.rb_root, i64, i64 (%struct.file*, i64, i64, i64, i64)*, i64, i64, i64, i64, %struct.pgd_t*, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i32, %struct.spinlock, %struct.rw_semaphore, %struct.list_head, i64, i64, i64, i64, %struct.atomic64_t, i64, i64, i64, i64, %struct.spinlock, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [44 x i64], %struct.mm_rss_stat, %struct.linux_binfmt*, %struct.mm_context_t, i64, %struct.core_state*, %struct.spinlock, %struct.kioctx_table*, %struct.user_namespace*, %struct.file*, %struct.mmu_notifier_subscriptions*, %struct.atomic_t, i8, %struct.uprobes_state, %struct.work_struct, i32 }
%struct.vm_area_struct = type { i64, i64, %struct.vm_area_struct*, %struct.vm_area_struct*, %struct.rb_node, i64, %struct.mm_struct*, %struct.pgprot, i64, %struct.anon.20, %struct.list_head, %struct.anon_vma*, %struct.vm_operations_struct*, i64, %struct.file*, i8*, %struct.atomic64_t, %struct.vm_userfaultfd_ctx }
%struct.pgprot = type { i64 }
%struct.anon.20 = type { %struct.rb_node, i64 }
%struct.anon_vma = type opaque
%struct.vm_operations_struct = type opaque
%struct.vm_userfaultfd_ctx = type {}
%struct.rb_root = type { %struct.rb_node* }
%struct.pgd_t = type { i64 }
%struct.mm_rss_stat = type { [4 x %struct.atomic64_t] }
%struct.linux_binfmt = type opaque
%struct.mm_context_t = type { i64, %struct.atomic64_t, %struct.rw_semaphore, %struct.ldt_struct*, i16, %struct.mutex, i8*, %struct.vdso_image*, %struct.atomic_t, i16, i16 }
%struct.ldt_struct = type opaque
%struct.vdso_image = type { i8*, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.core_state = type { %struct.atomic_t, %struct.core_thread, %struct.completion }
%struct.core_thread = type { %struct.task_struct*, %struct.core_thread* }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.kioctx_table = type opaque
%struct.mmu_notifier_subscriptions = type opaque
%struct.uprobes_state = type {}
%struct.vmacache = type { i64, [4 x %struct.vm_area_struct*] }
%struct.restart_block = type { i64 (%struct.restart_block*)*, %union.anon.21 }
%union.anon.21 = type { %struct.anon.22 }
%struct.anon.22 = type { i32*, i32, i32, i32, i64, i32* }
%struct.pid = type { %struct.refcount_struct, i32, %struct.spinlock, [4 x %struct.hlist_head], %struct.hlist_head, %struct.wait_queue_head, %struct.callback_head, [1 x %struct.upid] }
%struct.upid = type { i32, %struct.pid_namespace* }
%struct.pid_namespace = type opaque
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.posix_cputimers_work = type { %struct.callback_head, i32 }
%struct.key = type { %struct.refcount_struct, i32, %union.anon.26, %struct.rw_semaphore, %struct.key_user*, i8*, %union.anon.27, i64, %struct.kuid_t, %struct.kgid_t, i32, i16, i16, i16, i64, %union.anon.28, %union.anon.32, %struct.key_restriction* }
%union.anon.26 = type { %struct.rb_node }
%struct.key_user = type opaque
%union.anon.27 = type { i64 }
%struct.kgid_t = type { i32 }
%union.anon.28 = type { %struct.keyring_index_key }
%struct.keyring_index_key = type { i64, %union.anon.29, %struct.key_type*, %struct.key_tag*, i8* }
%union.anon.29 = type { i64 }
%struct.key_type = type opaque
%struct.key_tag = type { %struct.callback_head, %struct.refcount_struct, i8 }
%union.anon.32 = type { %union.key_payload }
%union.key_payload = type { [4 x i8*] }
%struct.key_restriction = type { i32 (%struct.key*, %struct.key_type*, %union.key_payload*, %struct.key*)*, %struct.key*, %struct.key_type* }
%struct.nameidata = type opaque
%struct.fs_struct = type opaque
%struct.files_struct = type opaque
%struct.io_uring_task = type opaque
%struct.nsproxy = type opaque
%struct.signal_struct = type { %struct.refcount_struct, %struct.atomic_t, i32, %struct.list_head, %struct.wait_queue_head, %struct.task_struct*, %struct.sigpending, %struct.hlist_head, i32, i32, %struct.task_struct*, i32, i32, i8, i32, %struct.list_head, %struct.hrtimer, i64, [2 x %struct.cpu_itimer], %struct.thread_group_cputimer, %struct.posix_cputimers, [4 x %struct.pid*], %struct.pid*, i32, %struct.tty_struct*, %struct.seqlock_t, i64, i64, i64, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.task_io_accounting, i64, [16 x %struct.rlimit], i8, i16, i16, %struct.mm_struct*, %struct.mutex, %struct.mutex }
%struct.cpu_itimer = type { i64, i64 }
%struct.thread_group_cputimer = type { %struct.task_cputime_atomic }
%struct.task_cputime_atomic = type { %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t }
%struct.tty_struct = type opaque
%struct.seqlock_t = type { %struct.seqcount_spinlock, %struct.spinlock }
%struct.rlimit = type { i64, i64 }
%struct.sighand_struct = type { %struct.spinlock, %struct.refcount_struct, %struct.wait_queue_head, [64 x %struct.k_sigaction] }
%struct.k_sigaction = type { %struct.sigaction }
%struct.sigaction = type { void (i32)*, i64, void ()*, %struct.sigset_t }
%struct.sigset_t = type { [1 x i64] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.seccomp = type { i32, %struct.atomic_t, %struct.seccomp_filter* }
%struct.seccomp_filter = type opaque
%struct.wake_q_node = type { %struct.wake_q_node* }
%struct.rb_root_cached = type { %struct.rb_root, %struct.rb_node* }
%struct.rt_mutex_waiter = type opaque
%struct.bio_list = type opaque
%struct.blk_plug = type opaque
%struct.reclaim_state = type opaque
%struct.io_context = type { %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.spinlock, i16, %struct.xarray, %struct.io_cq*, %struct.hlist_head, %struct.work_struct }
%struct.xarray = type { %struct.spinlock, i32, i8* }
%struct.io_cq = type { %struct.request_queue*, %struct.io_context*, %union.anon.35, %union.anon.36, i32 }
%struct.request_queue = type opaque
%union.anon.35 = type { %struct.list_head }
%union.anon.36 = type { %struct.hlist_node }
%struct.capture_control = type opaque
%struct.kernel_siginfo = type { %struct.anon.37 }
%struct.anon.37 = type { i32, i32, i32, %union.__sifields }
%union.__sifields = type { %struct.anon.41 }
%struct.anon.41 = type { i32, i32, i32, i64, i64 }
%struct.task_io_accounting = type {}
%struct.robust_list_head = type opaque
%struct.futex_pi_state = type opaque
%struct.perf_event_context = type opaque
%struct.rseq = type { i32, i32, %union.anon.48, i32, [12 x i8] }
%union.anon.48 = type { i64 }
%struct.tlbflush_unmap_batch = type { %struct.arch_tlbflush_unmap_batch, i8, i8 }
%struct.arch_tlbflush_unmap_batch = type { %struct.cpumask }
%union.anon.49 = type { %struct.callback_head }
%struct.pipe_inode_info = type opaque
%struct.page_frag = type { %struct.page*, i32, i32 }
%struct.vm_struct = type opaque
%struct.refcount_struct = type { %struct.atomic_t }
%struct.thread_struct = type { [3 x %struct.desc_struct], i64, i16, i16, i16, i16, i64, i64, [4 x %struct.perf_event*], i64, i64, i64, i64, i64, %struct.io_bitmap*, i64, i8, [47 x i8], %struct.fpu }
%struct.desc_struct = type { i16, i16, i32 }
%struct.perf_event = type opaque
%struct.io_bitmap = type opaque
%struct.fpu = type { i32, i64, [48 x i8], %union.fpregs_state }
%union.fpregs_state = type { %struct.xregs_state, [3520 x i8] }
%struct.xregs_state = type { %struct.fxregs_state, %struct.xstate_header, [0 x i8] }
%struct.fxregs_state = type { i16, i16, i16, i16, %union.anon.50, i32, i32, [32 x i32], [64 x i32], [12 x i32], %union.anon.53 }
%union.anon.50 = type { %struct.anon.51 }
%struct.anon.51 = type { i64, i64 }
%union.anon.53 = type { [12 x i32] }
%struct.xstate_header = type { i64, i64, [6 x i64] }
%struct.fsnotify_mark_connector = type opaque
%struct.uuid_t = type { [16 x i8] }
%struct.shrinker = type { i64 (%struct.shrinker*, %struct.shrink_control*)*, i64 (%struct.shrinker*, %struct.shrink_control*)*, i64, i32, i32, %struct.list_head, %struct.atomic64_t* }
%struct.workqueue_struct = type opaque
%struct.hlist_head = type { %struct.hlist_node* }
%struct.user_namespace = type opaque
%struct.list_lru = type { %struct.list_lru_node* }
%struct.list_lru_node = type { %struct.spinlock, %struct.list_lru_one, i64 }
%struct.list_lru_one = type { %struct.list_head, i64 }
%struct.work_struct = type { %struct.atomic64_t, %struct.list_head, void (%struct.work_struct*)* }
%union.anon.65 = type { %struct.list_head }
%union.anon.66 = type { %struct.hlist_node }
%struct.inode = type { i16, i16, %struct.kuid_t, %struct.kgid_t, i32, %struct.inode_operations*, %struct.super_block*, %struct.address_space*, i64, %union.anon.57, i32, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.spinlock, i16, i8, i8, i64, i64, %struct.rw_semaphore, i64, i64, %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %union.anon.58, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %union.anon.59, %struct.file_lock_context*, %struct.address_space, %struct.list_head, %union.anon.62, i32, i32, %struct.fsnotify_mark_connector*, i8* }
%struct.inode_operations = type { %struct.dentry* (%struct.inode*, %struct.dentry*, i32)*, i8* (%struct.dentry*, %struct.inode*, %struct.delayed_call*)*, i32 (%struct.inode*, i32)*, %struct.posix_acl* (%struct.inode*, i32)*, i32 (%struct.dentry*, i8*, i32)*, i32 (%struct.inode*, %struct.dentry*, i16, i1)*, i32 (%struct.dentry*, %struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i8*)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i16, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.inode*, %struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.iattr*)*, i32 (%struct.path*, %struct.kstat*, i32, i32)*, i64 (%struct.dentry*, i8*, i64)*, i32 (%struct.inode*, %struct.fiemap_extent_info*, i64, i64)*, i32 (%struct.inode*, %struct.timespec64*, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.file*, i32, i16)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.posix_acl*, i32)*, [24 x i8] }
%struct.delayed_call = type { void (i8*)*, i8* }
%struct.posix_acl = type opaque
%struct.iattr = type { i32, i16, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.file* }
%struct.kstat = type { i32, i16, i32, i32, i64, i64, i64, i32, i32, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.timespec64, i64, i64 }
%struct.fiemap_extent_info = type opaque
%union.anon.57 = type { i32 }
%struct.timespec64 = type { i64, i64 }
%union.anon.58 = type { %struct.callback_head }
%union.anon.59 = type { %struct.file_operations* }
%struct.file_lock_context = type { %struct.spinlock, %struct.list_head, %struct.list_head, %struct.list_head }
%struct.address_space = type { %struct.inode*, %struct.xarray, i32, %struct.atomic_t, %struct.rb_root_cached, %struct.rw_semaphore, i64, i64, i64, %struct.address_space_operations*, i64, i32, %struct.spinlock, %struct.list_head, i8* }
%struct.address_space_operations = type { i32 (%struct.page*, %struct.writeback_control*)*, i32 (%struct.file*, %struct.page*)*, i32 (%struct.address_space*, %struct.writeback_control*)*, i32 (%struct.page*)*, i32 (%struct.file*, %struct.address_space*, %struct.list_head*, i32)*, void (%struct.readahead_control*)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page**, i8**)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page*, i8*)*, i64 (%struct.address_space*, i64)*, void (%struct.page*, i32, i32)*, i32 (%struct.page*, i32)*, void (%struct.page*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.address_space*, %struct.page*, %struct.page*, i32)*, i1 (%struct.page*, i32)*, void (%struct.page*)*, i32 (%struct.page*)*, i32 (%struct.page*, i64, i64)*, void (%struct.page*, i8*, i8*)*, i32 (%struct.address_space*, %struct.page*)*, i32 (%struct.swap_info_struct*, %struct.file*, i64*)*, void (%struct.file*)* }
%struct.readahead_control = type opaque
%struct.kiocb = type { %struct.file*, i64, void (%struct.kiocb*, i64, i64)*, i8*, i32, i16, i16, %union.anon.5 }
%union.anon.5 = type { %struct.wait_page_queue* }
%struct.wait_page_queue = type opaque
%struct.iov_iter = type { i32, i64, i64, %union.anon.6, %union.anon.7 }
%union.anon.6 = type { %struct.iovec* }
%struct.iovec = type { i8*, i64 }
%union.anon.7 = type { i64 }
%struct.swap_info_struct = type opaque
%union.anon.62 = type { %struct.pipe_inode_info* }
%struct.file_operations = type { %struct.module*, i64 (%struct.file*, i64, i32)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.kiocb*, i1)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.poll_table_struct*)*, i64 (%struct.file*, i32, i64)*, i64 (%struct.file*, i32, i64)*, i32 (%struct.file*, %struct.vm_area_struct*)*, i64, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i8*)*, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i64, i64, i32)*, i32 (i32, %struct.file*, i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.file*, %struct.page*, i32, i64, i64*, i32)*, i64 (%struct.file*, i64, i64, i64, i64)*, i32 (i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.pipe_inode_info*, %struct.file*, i64*, i64, i32)*, i64 (%struct.file*, i64*, %struct.pipe_inode_info*, i64, i32)*, i32 (%struct.file*, i64, %struct.file_lock**, i8**)*, i64 (%struct.file*, i32, i64, i64)*, void (%struct.seq_file*, %struct.file*)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i32 (%struct.file*, i64, i64, i32)* }
%struct.dir_context = type { i32 (%struct.dir_context*, i8*, i32, i64, i64, i32)*, i64 }
%struct.poll_table_struct = type { void (%struct.file*, %struct.wait_queue_head*, %struct.poll_table_struct*)*, i32 }
%struct.file_lock = type { %struct.file_lock*, %struct.list_head, %struct.hlist_node, %struct.list_head, %struct.list_head, i8*, i32, i8, i32, i32, %struct.wait_queue_head, %struct.file*, i64, i64, %struct.fasync_struct*, i64, i64, %struct.file_lock_operations*, %struct.lock_manager_operations*, %union.anon.60 }
%struct.fasync_struct = type { %struct.rwlock_t, i32, i32, %struct.fasync_struct*, %struct.file*, %struct.callback_head }
%struct.rwlock_t = type { %struct.arch_rwlock_t }
%struct.arch_rwlock_t = type {}
%struct.file_lock_operations = type { void (%struct.file_lock*, %struct.file_lock*)*, void (%struct.file_lock*)* }
%struct.lock_manager_operations = type { i8* (i8*)*, void (i8*)*, void (%struct.file_lock*)*, i32 (%struct.file_lock*, i32)*, i1 (%struct.file_lock*)*, i32 (%struct.file_lock*, i32, %struct.list_head*)*, void (%struct.file_lock*, i8**)*, i1 (%struct.file_lock*)* }
%union.anon.60 = type { %struct.nfs_lock_info }
%struct.nfs_lock_info = type { i32, %struct.nlm_lockowner*, %struct.list_head }
%struct.nlm_lockowner = type opaque
%struct.spinlock = type { %union.anon.0 }
%union.anon.0 = type { %struct.raw_spinlock }
%struct.atomic64_t = type { i64 }
%struct.mutex = type { %struct.atomic64_t, %struct.spinlock, %struct.list_head }
%struct.fown_struct = type { %struct.rwlock_t, %struct.pid*, i32, %struct.kuid_t, %struct.kuid_t, i32 }
%struct.cred = type { %struct.atomic_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, i32, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, i8, %struct.key*, %struct.key*, %struct.key*, %struct.key*, %struct.user_struct*, %struct.user_namespace*, %struct.group_info*, %union.anon.34 }
%struct.kernel_cap_struct = type { [2 x i32] }
%struct.user_struct = type { %struct.refcount_struct, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i64, i64, %struct.atomic64_t, %struct.hlist_node, %struct.kuid_t, %struct.atomic64_t, %struct.ratelimit_state }
%struct.ratelimit_state = type { %struct.raw_spinlock, i32, i32, i32, i32, i64, i64 }
%struct.group_info = type { %struct.atomic_t, i32, [0 x %struct.kgid_t] }
%union.anon.34 = type { %struct.callback_head }
%struct.file_ra_state = type { i64, i32, i32, i32, i32, i64 }
%struct.list_head = type { %struct.list_head*, %struct.list_head* }
%struct.kobject = type { i8*, %struct.list_head, %struct.kobject*, %struct.kset*, %struct.kobj_type*, %struct.kernfs_node*, %struct.kref, i8 }
%struct.kset = type { %struct.list_head, %struct.spinlock, %struct.kobject, %struct.kset_uevent_ops* }
%struct.kset_uevent_ops = type { i32 (%struct.kset*, %struct.kobject*)*, i8* (%struct.kset*, %struct.kobject*)*, i32 (%struct.kset*, %struct.kobject*, %struct.kobj_uevent_env*)* }
%struct.kobj_uevent_env = type { [3 x i8*], [64 x i8*], i32, [2048 x i8], i32 }
%struct.kobj_type = type { void (%struct.kobject*)*, %struct.sysfs_ops*, %struct.attribute**, %struct.attribute_group**, %struct.kobj_ns_type_operations* (%struct.kobject*)*, i8* (%struct.kobject*)*, void (%struct.kobject*, %struct.kuid_t*, %struct.kgid_t*)* }
%struct.sysfs_ops = type { i64 (%struct.kobject*, %struct.attribute*, i8*)*, i64 (%struct.kobject*, %struct.attribute*, i8*, i64)* }
%struct.kernfs_node = type { %struct.atomic_t, %struct.atomic_t, %struct.kernfs_node*, i8*, %struct.rb_node, i8*, i32, %union.anon.67, i8*, i64, i16, i16, %struct.kernfs_iattrs* }
%union.anon.67 = type { %struct.kernfs_elem_attr }
%struct.kernfs_elem_attr = type { %struct.kernfs_ops*, %struct.kernfs_open_node*, i64, %struct.kernfs_node* }
%struct.kernfs_ops = type { i32 (%struct.kernfs_open_file*)*, void (%struct.kernfs_open_file*)*, i32 (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i64*)*, i8* (%struct.seq_file*, i8*, i64*)*, void (%struct.seq_file*, i8*)*, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i64, i8, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i32 (%struct.kernfs_open_file*, %struct.poll_table_struct*)*, i32 (%struct.kernfs_open_file*, %struct.vm_area_struct*)* }
%struct.kernfs_open_file = type { %struct.kernfs_node*, %struct.file*, %struct.seq_file*, i8*, %struct.mutex, %struct.mutex, i32, %struct.list_head, i8*, i64, i8, %struct.vm_operations_struct* }
%struct.kernfs_open_node = type opaque
%struct.kernfs_iattrs = type opaque
%struct.kref = type { %struct.refcount_struct }
%struct.device = type { %struct.kobject, %struct.device*, %struct.device_private*, i8*, %struct.device_type*, %struct.bus_type*, %struct.device_driver*, i8*, i8*, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, %struct.dev_pm_domain*, %struct.irq_domain*, %struct.list_head, %struct.dma_map_ops*, i64*, i64, i64, %struct.bus_dma_region*, %struct.device_dma_parameters*, %struct.list_head, %struct.dev_archdata, %struct.device_node*, %struct.fwnode_handle*, i32, i32, %struct.spinlock, %struct.list_head, %struct.class*, %struct.attribute_group**, void (%struct.device*)*, %struct.iommu_group*, %struct.dev_iommu*, i8 }
%struct.device_private = type opaque
%struct.device_type = type { i8*, %struct.attribute_group**, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*, %struct.kuid_t*, %struct.kgid_t*)*, void (%struct.device*)*, %struct.dev_pm_ops* }
%struct.bus_type = type { i8*, i8*, %struct.device*, %struct.attribute_group**, %struct.attribute_group**, %struct.attribute_group**, i32 (%struct.device*, %struct.device_driver*)*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, %struct.dev_pm_ops*, %struct.iommu_ops*, %struct.subsys_private*, %struct.lock_class_key, i8 }
%struct.iommu_ops = type opaque
%struct.device_driver = type { i8*, %struct.bus_type*, %struct.module*, i8*, i8, i32, %struct.of_device_id*, %struct.acpi_device_id*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, %struct.attribute_group**, %struct.attribute_group**, %struct.dev_pm_ops*, void (%struct.device*)*, %struct.driver_private* }
%struct.of_device_id = type { [32 x i8], [32 x i8], [128 x i8], i8* }
%struct.acpi_device_id = type { [9 x i8], i64, i32, i32 }
%struct.driver_private = type opaque
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, i8, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, %struct.wakeup_source*, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, %struct.wake_irq*, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i64, i64, i64, i64, %struct.pm_subsys_data*, void (%struct.device*, i32)*, %struct.dev_pm_qos* }
%struct.pm_message = type { i32 }
%struct.wakeup_source = type { i8*, i32, %struct.list_head, %struct.spinlock, %struct.wake_irq*, %struct.timer_list, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.device*, i8 }
%struct.timer_list = type { %struct.hlist_node, i64, void (%struct.timer_list*)*, i32 }
%struct.wake_irq = type opaque
%struct.pm_subsys_data = type { %struct.spinlock, i32, %struct.list_head, %struct.pm_domain_data* }
%struct.pm_domain_data = type opaque
%struct.dev_pm_qos = type opaque
%struct.dev_pm_domain = type { %struct.dev_pm_ops, i32 (%struct.device*)*, void (%struct.device*, i1)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)* }
%struct.dev_pm_ops = type { i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)* }
%struct.irq_domain = type opaque
%struct.dma_map_ops = type opaque
%struct.bus_dma_region = type opaque
%struct.device_dma_parameters = type { i32, i64 }
%struct.dev_archdata = type {}
%struct.device_node = type opaque
%struct.fwnode_handle = type opaque
%struct.iommu_group = type opaque
%struct.dev_iommu = type opaque
%struct.kobj_ns_type_operations = type { i32, i1 ()*, i8* ()*, i8* (%struct.sock*)*, i8* ()*, void (i8*)* }
%struct.sock = type opaque
%struct.subsys_private = type opaque
%struct.ida = type { %struct.xarray }
%struct.paravirt_patch_template = type { %struct.pv_init_ops, %struct.pv_time_ops, %struct.pv_cpu_ops, %struct.pv_irq_ops, %struct.pv_mmu_ops, %struct.pv_lock_ops }
%struct.pv_init_ops = type { i32 (i8, i8*, i64, i32)* }
%struct.pv_time_ops = type { i64 ()*, i64 (i32)* }
%struct.pv_cpu_ops = type { void ()*, i64 (i32)*, void (i32, i64)*, i64 ()*, void (i64)*, void (i64)*, void ()*, void (%struct.desc_ptr*)*, void (%struct.desc_ptr*)*, void (i8*, i32)*, i64 ()*, void (%struct.thread_struct*, i32)*, void (i32)*, void (%struct.desc_struct*, i32, i8*)*, void (%struct.desc_struct*, i32, i8*, i32)*, void (%struct.gate_struct*, i32, %struct.gate_struct*)*, void (%struct.desc_struct*, i32)*, void (%struct.desc_struct*, i32)*, void (i64)*, void ()*, void ()*, void ()*, void (i32*, i32*, i32*, i32*)*, i64 (i32)*, void (i32, i32, i32)*, i64 (i32, i32*)*, i32 (i32, i32, i32)*, i64 (i32)*, void ()*, void ()*, void ()*, void (%struct.task_struct*)*, void (%struct.task_struct*)* }
%struct.desc_ptr = type <{ i16, i64 }>
%struct.gate_struct = type { i16, i16, %struct.idt_bits, i16, i32, i32 }
%struct.idt_bits = type { i16 }
%struct.pv_irq_ops = type { %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void ()*, void ()* }
%struct.paravirt_callee_save = type { i8* }
%struct.pv_mmu_ops = type { void ()*, void ()*, void (i64)*, void (%struct.cpumask*, %struct.flush_tlb_info*)*, void (%struct.mmu_gather*, i8*)*, void (%struct.mm_struct*)*, %struct.paravirt_callee_save, void (i64)*, i64 ()*, void (i64)*, void (%struct.mm_struct*, %struct.mm_struct*)*, void (%struct.mm_struct*, %struct.mm_struct*)*, i32 (%struct.mm_struct*)*, void (%struct.mm_struct*, %struct.pgd_t*)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (i64)*, void (i64)*, void (i64)*, void (i64)*, void (%struct.pte_t*, i64)*, void (%struct.pmd_t*, i64)*, i64 (%struct.vm_area_struct*, i64, %struct.pte_t*)*, void (%struct.vm_area_struct*, i64, %struct.pte_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.pud_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.p4d_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.pgd_t*, i64)*, %struct.pv_lazy_ops, void (i32, i64, i64)* }
%struct.flush_tlb_info = type opaque
%struct.mmu_gather = type opaque
%struct.pte_t = type { i64 }
%struct.pmd_t = type { i64 }
%struct.pud_t = type { i64 }
%struct.p4d_t = type { i64 }
%struct.pv_lazy_ops = type { void ()*, void ()*, void ()* }
%struct.pv_lock_ops = type { void (%struct.qspinlock*, i32)*, %struct.paravirt_callee_save, void (i8*, i8)*, void (i32)*, %struct.paravirt_callee_save }
%struct.qspinlock = type opaque
%struct.kmem_cache = type opaque
%struct.device_attribute = type { %struct.attribute, i64 (%struct.device*, %struct.device_attribute*, i8*)*, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* }
%struct.proc_dir_entry = type opaque
%struct.proc_ops = type { i32, i32 (%struct.inode*, %struct.file*)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.file*, i64, i32)*, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, %struct.poll_table_struct*)*, i64 (%struct.file*, i32, i64)*, i32 (%struct.file*, %struct.vm_area_struct*)*, i64 (%struct.file*, i64, i64, i64, i64)* }
%struct.input_dev = type { i8*, i8*, i8*, %struct.input_id, [1 x i64], [1 x i64], [12 x i64], [1 x i64], [1 x i64], [1 x i64], [1 x i64], [1 x i64], [2 x i64], [1 x i64], i32, i32, i32, i8*, i32 (%struct.input_dev*, %struct.input_keymap_entry*, i32*)*, i32 (%struct.input_dev*, %struct.input_keymap_entry*)*, %struct.ff_device*, %struct.input_dev_poller*, i32, %struct.timer_list, [2 x i32], %struct.input_mt*, %struct.input_absinfo*, [12 x i64], [1 x i64], [1 x i64], [1 x i64], i32 (%struct.input_dev*)*, void (%struct.input_dev*)*, i32 (%struct.input_dev*, %struct.file*)*, i32 (%struct.input_dev*, i32, i32, i32)*, %struct.input_handle*, %struct.spinlock, %struct.mutex, i32, i8, %struct.device, %struct.list_head, %struct.list_head, i32, i32, %struct.input_value*, i8, [3 x i64] }
%struct.input_id = type { i16, i16, i16, i16 }
%struct.input_keymap_entry = type { i8, i8, i16, i32, [32 x i8] }
%struct.ff_device = type { i32 (%struct.input_dev*, %struct.ff_effect*, %struct.ff_effect*)*, i32 (%struct.input_dev*, i32)*, i32 (%struct.input_dev*, i32, i32)*, void (%struct.input_dev*, i16)*, void (%struct.input_dev*, i16)*, void (%struct.ff_device*)*, i8*, [2 x i64], %struct.mutex, i32, %struct.ff_effect*, [0 x %struct.file*] }
%struct.ff_effect = type { i16, i16, i16, %struct.ff_trigger, %struct.ff_replay, %union.anon }
%struct.ff_trigger = type { i16, i16 }
%struct.ff_replay = type { i16, i16 }
%union.anon = type { %struct.ff_periodic_effect }
%struct.ff_periodic_effect = type { i16, i16, i16, i16, i16, %struct.ff_envelope, i32, i16* }
%struct.ff_envelope = type { i16, i16, i16, i16 }
%struct.input_dev_poller = type opaque
%struct.input_mt = type { i32, i32, i32, i32, i32, i32*, [0 x %struct.input_mt_slot] }
%struct.input_mt_slot = type { [14 x i32], i32, i32 }
%struct.input_absinfo = type { i32, i32, i32, i32, i32, i32 }
%struct.input_handle = type { i8*, i32, i8*, %struct.input_dev*, %struct.input_handler*, %struct.list_head, %struct.list_head }
%struct.input_handler = type { i8*, void (%struct.input_handle*, i32, i32, i32)*, void (%struct.input_handle*, %struct.input_value*, i32)*, i1 (%struct.input_handle*, i32, i32, i32)*, i1 (%struct.input_handler*, %struct.input_dev*)*, i32 (%struct.input_handler*, %struct.input_dev*, %struct.input_device_id*)*, void (%struct.input_handle*)*, void (%struct.input_handle*)*, i8, i32, i8*, %struct.input_device_id*, %struct.list_head, %struct.list_head }
%struct.input_device_id = type { i64, i16, i16, i16, i16, [1 x i64], [12 x i64], [1 x i64], [1 x i64], [1 x i64], [1 x i64], [1 x i64], [2 x i64], [1 x i64], [1 x i64], i64 }
%struct.input_devres = type { %struct.input_dev* }
%union.input_seq_state = type { i8* }
%struct.anon.68 = type { i16, i8 }

@__UNIQUE_ID_author210 = internal constant [51 x i8] c"input_core.author=Vojtech Pavlik <vojtech@suse.cz>\00", section ".modinfo", align 1, !dbg !0
@__UNIQUE_ID_description211 = internal constant [34 x i8] c"input_core.description=Input core\00", section ".modinfo", align 1, !dbg !3876
@__UNIQUE_ID_file212 = internal constant [41 x i8] c"input_core.file=drivers/input/input-core\00", section ".modinfo", align 1, !dbg !3881
@__UNIQUE_ID_license213 = internal constant [23 x i8] c"input_core.license=GPL\00", section ".modinfo", align 1, !dbg !3886
@.str = private unnamed_addr constant [31 x i8] c"%s: unable to allocate memory\0A\00", align 1
@__func__.input_alloc_absinfo = private unnamed_addr constant [20 x i8] c"input_alloc_absinfo\00", align 1
@.str.1 = private unnamed_addr constant [33 x i8] c"%s: got too big old keycode %#x\0A\00", align 1
@__func__.input_set_keycode = private unnamed_addr constant [18 x i8] c"input_set_keycode\00", align 1
@input_value_sync = internal constant %struct.input_value { i16 0, i16 0, i32 1 }, align 4, !dbg !3907
@.str.2 = private unnamed_addr constant [6 x i8] c"input\00", align 1
@input_class = dso_local global %struct.class { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i32 0, i32 0), %struct.module* null, %struct.attribute_group** null, %struct.attribute_group** null, %struct.kobject* null, i32 (%struct.device*, %struct.kobj_uevent_env*)* null, i8* (%struct.device*, i16*)* @input_devnode, void (%struct.class*)* null, void (%struct.device*)* null, i32 (%struct.device*)* null, %struct.kobj_ns_type_operations* null, i8* (%struct.device*)* null, void (%struct.device*, %struct.kuid_t*, %struct.kgid_t*)* null, %struct.dev_pm_ops* null, %struct.subsys_private* null }, align 8, !dbg !3891
@input_allocate_device.input_no = internal global %struct.atomic_t { i32 -1 }, align 4, !dbg !3893
@input_dev_type = internal constant %struct.device_type { i8* null, %struct.attribute_group** getelementptr inbounds ([5 x %struct.attribute_group*], [5 x %struct.attribute_group*]* @input_dev_attr_groups, i32 0, i32 0), i32 (%struct.device*, %struct.kobj_uevent_env*)* @input_dev_uevent, i8* (%struct.device*, i16*, %struct.kuid_t*, %struct.kgid_t*)* null, void (%struct.device*)* @input_dev_release, %struct.dev_pm_ops* @input_dev_pm_ops }, align 8, !dbg !3909
@input_allocate_device.__key = internal global %struct.lock_class_key zeroinitializer, align 1, !dbg !3898
@.str.3 = private unnamed_addr constant [12 x i8] c"&dev->mutex\00", align 1
@.str.4 = private unnamed_addr constant [9 x i8] c"input%lu\00", align 1
@.str.5 = private unnamed_addr constant [22 x i8] c"drivers/input/input.c\00", align 1
@.str.6 = private unnamed_addr constant [40 x i8] c"\013input: %s: unknown type %u (code %u)\0A\00", align 1
@__func__.input_set_capability = private unnamed_addr constant [21 x i8] c"input_set_capability\00", align 1
@.str.7 = private unnamed_addr constant [60 x i8] c"Absolute device without dev->absinfo, refusing to register\0A\00", align 1
@.str.8 = private unnamed_addr constant [19 x i8] c"\016input: %s as %s\0A\00", align 1
@.str.9 = private unnamed_addr constant [19 x i8] c"Unspecified device\00", align 1
@.str.10 = private unnamed_addr constant [4 x i8] c"N/A\00", align 1
@input_mutex = internal global %struct.mutex { %struct.atomic64_t zeroinitializer, %struct.spinlock undef, %struct.list_head { %struct.list_head* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.mutex* @input_mutex to i8*), i64 8) to %struct.list_head*), %struct.list_head* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.mutex* @input_mutex to i8*), i64 8) to %struct.list_head*) } }, align 8, !dbg !3983
@input_dev_list = internal global %struct.list_head { %struct.list_head* @input_dev_list, %struct.list_head* @input_dev_list }, align 8, !dbg !3985
@input_handler_list = internal global %struct.list_head { %struct.list_head* @input_handler_list, %struct.list_head* @input_handler_list }, align 8, !dbg !3987
@input_ida = internal global %struct.ida { %struct.xarray { %struct.spinlock undef, i32 8388613, i8* null } }, align 8, !dbg !3993
@__UNIQUE_ID___addressable_input_init319 = internal global i8* bitcast (i32 ()* @input_init to i8*), section ".discard.addressable", align 8, !dbg !3900
@__exitcall_input_exit = internal global void ()* @input_exit, section ".exitcall.exit", align 8, !dbg !3902
@pv_ops = external dso_local global %struct.paravirt_patch_template, align 8
@kmalloc_caches = external dso_local global [3 x [14 x %struct.kmem_cache*]], align 16
@.str.11 = private unnamed_addr constant [21 x i8] c"include/linux/slab.h\00", align 1
@jiffies = external dso_local global i64, align 8
@.str.12 = private unnamed_addr constant [9 x i8] c"input/%s\00", align 1
@input_dev_attr_groups = internal global [5 x %struct.attribute_group*] [%struct.attribute_group* @input_dev_attr_group, %struct.attribute_group* @input_dev_id_attr_group, %struct.attribute_group* @input_dev_caps_attr_group, %struct.attribute_group* @input_poller_attribute_group, %struct.attribute_group* null], align 16, !dbg !3911
@input_dev_pm_ops = internal constant %struct.dev_pm_ops { i32 (%struct.device*)* null, void (%struct.device*)* null, i32 (%struct.device*)* @input_dev_suspend, i32 (%struct.device*)* @input_dev_resume, i32 (%struct.device*)* @input_dev_freeze, i32 (%struct.device*)* null, i32 (%struct.device*)* @input_dev_poweroff, i32 (%struct.device*)* @input_dev_resume, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null }, align 8, !dbg !3981
@input_dev_attr_group = internal constant %struct.attribute_group { i8* null, i16 (%struct.kobject*, %struct.attribute*, i32)* null, i16 (%struct.kobject*, %struct.bin_attribute*, i32)* null, %struct.attribute** getelementptr inbounds ([6 x %struct.attribute*], [6 x %struct.attribute*]* @input_dev_attrs, i32 0, i32 0), %struct.bin_attribute** null }, align 8, !dbg !3916
@input_dev_id_attr_group = internal constant %struct.attribute_group { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.27, i32 0, i32 0), i16 (%struct.kobject*, %struct.attribute*, i32)* null, i16 (%struct.kobject*, %struct.bin_attribute*, i32)* null, %struct.attribute** getelementptr inbounds ([5 x %struct.attribute*], [5 x %struct.attribute*]* @input_dev_id_attrs, i32 0, i32 0), %struct.bin_attribute** null }, align 8, !dbg !3943
@input_dev_caps_attr_group = internal constant %struct.attribute_group { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.33, i32 0, i32 0), i16 (%struct.kobject*, %struct.attribute*, i32)* null, i16 (%struct.kobject*, %struct.bin_attribute*, i32)* null, %struct.attribute** getelementptr inbounds ([10 x %struct.attribute*], [10 x %struct.attribute*]* @input_dev_caps_attrs, i32 0, i32 0), %struct.bin_attribute** null }, align 8, !dbg !3956
@input_poller_attribute_group = external dso_local global %struct.attribute_group, align 8
@input_dev_attrs = internal global [6 x %struct.attribute*] [%struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_name, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_phys, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_uniq, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_modalias, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_properties, i32 0, i32 0), %struct.attribute* null], align 16, !dbg !3918
@dev_attr_name = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.13, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @input_dev_show_name, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !3921
@dev_attr_phys = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.16, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @input_dev_show_phys, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !3935
@dev_attr_uniq = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.17, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @input_dev_show_uniq, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !3937
@dev_attr_modalias = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.18, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @input_dev_show_modalias, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !3939
@dev_attr_properties = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.23, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @input_dev_show_properties, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !3941
@.str.13 = private unnamed_addr constant [5 x i8] c"name\00", align 1
@.str.14 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@.str.15 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.16 = private unnamed_addr constant [5 x i8] c"phys\00", align 1
@.str.17 = private unnamed_addr constant [5 x i8] c"uniq\00", align 1
@.str.18 = private unnamed_addr constant [9 x i8] c"modalias\00", align 1
@.str.19 = private unnamed_addr constant [28 x i8] c"input:b%04Xv%04Xp%04Xe%04X-\00", align 1
@.str.20 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.21 = private unnamed_addr constant [3 x i8] c"%c\00", align 1
@.str.22 = private unnamed_addr constant [4 x i8] c"%X,\00", align 1
@.str.23 = private unnamed_addr constant [11 x i8] c"properties\00", align 1
@.str.24 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.25 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.26 = private unnamed_addr constant [4 x i8] c"%lx\00", align 1
@.str.27 = private unnamed_addr constant [3 x i8] c"id\00", align 1
@input_dev_id_attrs = internal global [5 x %struct.attribute*] [%struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_bustype, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_vendor, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_product, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_version, i32 0, i32 0), %struct.attribute* null], align 16, !dbg !3945
@dev_attr_bustype = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.28, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @input_dev_show_id_bustype, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !3948
@dev_attr_vendor = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.30, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @input_dev_show_id_vendor, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !3950
@dev_attr_product = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.31, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @input_dev_show_id_product, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !3952
@dev_attr_version = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.32, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @input_dev_show_id_version, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !3954
@.str.28 = private unnamed_addr constant [8 x i8] c"bustype\00", align 1
@.str.29 = private unnamed_addr constant [6 x i8] c"%04x\0A\00", align 1
@.str.30 = private unnamed_addr constant [7 x i8] c"vendor\00", align 1
@.str.31 = private unnamed_addr constant [8 x i8] c"product\00", align 1
@.str.32 = private unnamed_addr constant [8 x i8] c"version\00", align 1
@.str.33 = private unnamed_addr constant [13 x i8] c"capabilities\00", align 1
@input_dev_caps_attrs = internal global [10 x %struct.attribute*] [%struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_ev, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_key, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_rel, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_abs, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_msc, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_led, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_snd, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_ff, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_sw, i32 0, i32 0), %struct.attribute* null], align 16, !dbg !3958
@dev_attr_ev = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.34, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @input_dev_show_cap_ev, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !3963
@dev_attr_key = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.35, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @input_dev_show_cap_key, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !3965
@dev_attr_rel = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.36, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @input_dev_show_cap_rel, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !3967
@dev_attr_abs = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.37, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @input_dev_show_cap_abs, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !3969
@dev_attr_msc = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.38, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @input_dev_show_cap_msc, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !3971
@dev_attr_led = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.39, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @input_dev_show_cap_led, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !3973
@dev_attr_snd = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.40, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @input_dev_show_cap_snd, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !3975
@dev_attr_ff = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.41, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @input_dev_show_cap_ff, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !3977
@dev_attr_sw = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.42, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @input_dev_show_cap_sw, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !3979
@.str.34 = private unnamed_addr constant [3 x i8] c"ev\00", align 1
@.str.35 = private unnamed_addr constant [4 x i8] c"key\00", align 1
@.str.36 = private unnamed_addr constant [4 x i8] c"rel\00", align 1
@.str.37 = private unnamed_addr constant [4 x i8] c"abs\00", align 1
@.str.38 = private unnamed_addr constant [4 x i8] c"msc\00", align 1
@.str.39 = private unnamed_addr constant [4 x i8] c"led\00", align 1
@.str.40 = private unnamed_addr constant [4 x i8] c"snd\00", align 1
@.str.41 = private unnamed_addr constant [3 x i8] c"ff\00", align 1
@.str.42 = private unnamed_addr constant [3 x i8] c"sw\00", align 1
@.str.43 = private unnamed_addr constant [20 x i8] c"PRODUCT=%x/%x/%x/%x\00", align 1
@.str.44 = private unnamed_addr constant [10 x i8] c"NAME=\22%s\22\00", align 1
@.str.45 = private unnamed_addr constant [10 x i8] c"PHYS=\22%s\22\00", align 1
@.str.46 = private unnamed_addr constant [10 x i8] c"UNIQ=\22%s\22\00", align 1
@.str.47 = private unnamed_addr constant [6 x i8] c"PROP=\00", align 1
@.str.48 = private unnamed_addr constant [4 x i8] c"EV=\00", align 1
@.str.49 = private unnamed_addr constant [5 x i8] c"KEY=\00", align 1
@.str.50 = private unnamed_addr constant [5 x i8] c"REL=\00", align 1
@.str.51 = private unnamed_addr constant [5 x i8] c"ABS=\00", align 1
@.str.52 = private unnamed_addr constant [5 x i8] c"MSC=\00", align 1
@.str.53 = private unnamed_addr constant [5 x i8] c"LED=\00", align 1
@.str.54 = private unnamed_addr constant [5 x i8] c"SND=\00", align 1
@.str.55 = private unnamed_addr constant [4 x i8] c"FF=\00", align 1
@.str.56 = private unnamed_addr constant [4 x i8] c"SW=\00", align 1
@.str.57 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.58 = private unnamed_addr constant [10 x i8] c"MODALIAS=\00", align 1
@.str.59 = private unnamed_addr constant [62 x i8] c"\013input: failed to attach handler %s to device %s, error: %d\0A\00", align 1
@input_devices_state = internal global i32 0, align 4, !dbg !3989
@input_devices_poll_wait = internal global %struct.wait_queue_head { %struct.spinlock undef, %struct.list_head { %struct.list_head* bitcast (%struct.wait_queue_head* @input_devices_poll_wait to %struct.list_head*), %struct.list_head* bitcast (%struct.wait_queue_head* @input_devices_poll_wait to %struct.list_head*) } }, align 8, !dbg !3991
@.str.60 = private unnamed_addr constant [8 x i8] c"devices\00", align 1
@proc_bus_input_dir = internal global %struct.proc_dir_entry* null, align 8, !dbg !3998
@.str.61 = private unnamed_addr constant [9 x i8] c"handlers\00", align 1
@.str.62 = private unnamed_addr constant [10 x i8] c"bus/input\00", align 1
@input_init.__key = internal global %struct.lock_class_key zeroinitializer, align 1, !dbg !4003
@.str.63 = private unnamed_addr constant [45 x i8] c"\013input: unable to register input_dev class\0A\00", align 1
@.str.64 = private unnamed_addr constant [42 x i8] c"\013input: unable to register char major %d\00", align 1
@input_devices_proc_ops = internal constant %struct.proc_ops { i32 0, i32 (%struct.inode*, %struct.file*)* @input_proc_devices_open, i64 (%struct.file*, i8*, i64, i64*)* @seq_read, i64 (%struct.kiocb*, %struct.iov_iter*)* null, i64 (%struct.file*, i8*, i64, i64*)* null, i64 (%struct.file*, i64, i32)* @seq_lseek, i32 (%struct.inode*, %struct.file*)* @seq_release, i32 (%struct.file*, %struct.poll_table_struct*)* @input_proc_devices_poll, i64 (%struct.file*, i32, i64)* null, i32 (%struct.file*, %struct.vm_area_struct*)* null, i64 (%struct.file*, i64, i64, i64, i64)* null }, align 8, !dbg !4008
@input_handlers_proc_ops = internal constant %struct.proc_ops { i32 0, i32 (%struct.inode*, %struct.file*)* @input_proc_handlers_open, i64 (%struct.file*, i8*, i64, i64*)* @seq_read, i64 (%struct.kiocb*, %struct.iov_iter*)* null, i64 (%struct.file*, i8*, i64, i64*)* null, i64 (%struct.file*, i64, i32)* @seq_lseek, i32 (%struct.inode*, %struct.file*)* @seq_release, i32 (%struct.file*, %struct.poll_table_struct*)* null, i64 (%struct.file*, i32, i64)* null, i32 (%struct.file*, %struct.vm_area_struct*)* null, i64 (%struct.file*, i64, i64, i64, i64)* null }, align 8, !dbg !4026
@input_devices_seq_ops = internal constant %struct.seq_operations { i8* (%struct.seq_file*, i64*)* @input_devices_seq_start, void (%struct.seq_file*, i8*)* @input_seq_stop, i8* (%struct.seq_file*, i8*, i64*)* @input_devices_seq_next, i32 (%struct.seq_file*, i8*)* @input_devices_seq_show }, align 8, !dbg !4024
@.str.65 = private unnamed_addr constant [51 x i8] c"I: Bus=%04x Vendor=%04x Product=%04x Version=%04x\0A\00", align 1
@.str.66 = private unnamed_addr constant [14 x i8] c"N: Name=\22%s\22\0A\00", align 1
@.str.67 = private unnamed_addr constant [12 x i8] c"P: Phys=%s\0A\00", align 1
@.str.68 = private unnamed_addr constant [13 x i8] c"S: Sysfs=%s\0A\00", align 1
@.str.69 = private unnamed_addr constant [12 x i8] c"U: Uniq=%s\0A\00", align 1
@.str.70 = private unnamed_addr constant [13 x i8] c"H: Handlers=\00", align 1
@.str.71 = private unnamed_addr constant [4 x i8] c"%s \00", align 1
@.str.72 = private unnamed_addr constant [5 x i8] c"PROP\00", align 1
@.str.73 = private unnamed_addr constant [3 x i8] c"EV\00", align 1
@.str.74 = private unnamed_addr constant [4 x i8] c"KEY\00", align 1
@.str.75 = private unnamed_addr constant [4 x i8] c"REL\00", align 1
@.str.76 = private unnamed_addr constant [4 x i8] c"ABS\00", align 1
@.str.77 = private unnamed_addr constant [4 x i8] c"MSC\00", align 1
@.str.78 = private unnamed_addr constant [4 x i8] c"LED\00", align 1
@.str.79 = private unnamed_addr constant [4 x i8] c"SND\00", align 1
@.str.80 = private unnamed_addr constant [3 x i8] c"FF\00", align 1
@.str.81 = private unnamed_addr constant [3 x i8] c"SW\00", align 1
@.str.82 = private unnamed_addr constant [7 x i8] c"B: %s=\00", align 1
@.str.83 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@input_handlers_seq_ops = internal constant %struct.seq_operations { i8* (%struct.seq_file*, i64*)* @input_handlers_seq_start, void (%struct.seq_file*, i8*)* @input_seq_stop, i8* (%struct.seq_file*, i8*, i64*)* @input_handlers_seq_next, i32 (%struct.seq_file*, i8*)* @input_handlers_seq_show }, align 8, !dbg !4028
@.str.84 = private unnamed_addr constant [21 x i8] c"N: Number=%u Name=%s\00", align 1
@.str.85 = private unnamed_addr constant [10 x i8] c" (filter)\00", align 1
@.str.86 = private unnamed_addr constant [10 x i8] c" Minor=%d\00", align 1
@llvm.used = appending global [7 x i8*] [i8* getelementptr inbounds ([51 x i8], [51 x i8]* @__UNIQUE_ID_author210, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @__UNIQUE_ID_description211, i32 0, i32 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @__UNIQUE_ID_file212, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__UNIQUE_ID_license213, i32 0, i32 0), i8* bitcast (void ()* @input_exit to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_input_init319 to i8*), i8* bitcast (void ()** @__exitcall_input_exit to i8*)], section "llvm.metadata"

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @input_event(%struct.input_dev* %dev, i32 %type, i32 %code, i32 %value) #0 !dbg !4039 {
entry:
  %lock.addr.i21 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i21, metadata !4042, metadata !DIExpression()), !dbg !4048
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !4052, metadata !DIExpression()), !dbg !4053
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !4054, metadata !DIExpression()), !dbg !4059
  %dev.addr = alloca %struct.input_dev*, align 8
  %type.addr = alloca i32, align 4
  %code.addr = alloca i32, align 4
  %value.addr = alloca i32, align 4
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.input_dev* %dev, %struct.input_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.input_dev** %dev.addr, metadata !4066, metadata !DIExpression()), !dbg !4067
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !4068, metadata !DIExpression()), !dbg !4069
  store i32 %code, i32* %code.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %code.addr, metadata !4070, metadata !DIExpression()), !dbg !4071
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !4072, metadata !DIExpression()), !dbg !4073
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !4074, metadata !DIExpression()), !dbg !4075
  %0 = load i32, i32* %type.addr, align 4, !dbg !4076
  %1 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !4077
  %evbit = getelementptr inbounds %struct.input_dev, %struct.input_dev* %1, i32 0, i32 5, !dbg !4078
  %arraydecay = getelementptr inbounds [1 x i64], [1 x i64]* %evbit, i64 0, i64 0, !dbg !4077
  %call = call i32 @is_event_supported(i32 %0, i64* %arraydecay, i32 31) #11, !dbg !4079
  %tobool = icmp ne i32 %call, 0, !dbg !4079
  br i1 %tobool, label %if.then, label %if.end, !dbg !4080

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !4081

do.body:                                          ; preds = %if.then
  br label %do.body1, !dbg !4082

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !4083, metadata !DIExpression()), !dbg !4085
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !4086, metadata !DIExpression()), !dbg !4085
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !4085
  %conv = zext i1 %cmp to i32, !dbg !4085
  store i32 1, i32* %tmp, align 4, !dbg !4085
  %2 = load i32, i32* %tmp, align 4, !dbg !4085
  br label %do.body2, !dbg !4087

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !4088

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !4089

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !4091, metadata !DIExpression()), !dbg !4094
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !4095, metadata !DIExpression()), !dbg !4094
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !4094
  %conv8 = zext i1 %cmp7 to i32, !dbg !4094
  store i32 1, i32* %tmp9, align 4, !dbg !4094
  %3 = load i32, i32* %tmp9, align 4, !dbg !4094
  %call10 = call i64 @arch_local_irq_save() #11, !dbg !4096
  store i64 %call10, i64* %flags, align 8, !dbg !4096
  br label %do.end, !dbg !4096

do.end:                                           ; preds = %do.body4
  br label %do.end11, !dbg !4089

do.end11:                                         ; preds = %do.end
  br label %do.body12, !dbg !4088

do.body12:                                        ; preds = %do.end11
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !4097, !srcloc !4098
  br label %do.body13, !dbg !4097

do.body13:                                        ; preds = %do.body12
  %4 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !4099
  %event_lock = getelementptr inbounds %struct.input_dev, %struct.input_dev* %4, i32 0, i32 36, !dbg !4099
  store %struct.spinlock* %event_lock, %struct.spinlock** %lock.addr.i, align 8
  %5 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !4100
  %6 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %5, i32 0, i32 0, !dbg !4101
  %rlock.i = bitcast %union.anon.0* %6 to %struct.raw_spinlock*, !dbg !4101
  br label %do.end15, !dbg !4099

do.end15:                                         ; preds = %do.body13
  br label %do.end16, !dbg !4097

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !4088

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !4087

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !4082

do.end19:                                         ; preds = %do.end18
  %7 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !4102
  %8 = load i32, i32* %type.addr, align 4, !dbg !4103
  %9 = load i32, i32* %code.addr, align 4, !dbg !4104
  %10 = load i32, i32* %value.addr, align 4, !dbg !4105
  call void @input_handle_event(%struct.input_dev* %7, i32 %8, i32 %9, i32 %10) #11, !dbg !4106
  %11 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !4107
  %event_lock20 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %11, i32 0, i32 36, !dbg !4108
  %12 = load i64, i64* %flags, align 8, !dbg !4109
  store %struct.spinlock* %event_lock20, %struct.spinlock** %lock.addr.i21, align 8
  store i64 %12, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !309, metadata !4110, metadata !DIExpression()) #7, !dbg !4113
  call void @llvm.dbg.declare(metadata !309, metadata !4114, metadata !DIExpression()) #7, !dbg !4113
  store i32 1, i32* %tmp.i, align 4, !dbg !4113
  %13 = load i32, i32* %tmp.i, align 4, !dbg !4113
  call void @llvm.dbg.declare(metadata !309, metadata !4115, metadata !DIExpression()) #7, !dbg !4120
  call void @llvm.dbg.declare(metadata !309, metadata !4121, metadata !DIExpression()) #7, !dbg !4120
  store i32 1, i32* %tmp8.i, align 4, !dbg !4120
  %14 = load i32, i32* %tmp8.i, align 4, !dbg !4120
  %15 = load i64, i64* %flags.addr.i, align 8, !dbg !4122
  call void @arch_local_irq_restore(i64 %15) #12, !dbg !4122
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !4123, !srcloc !4125
  %16 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i21, align 8, !dbg !4126
  %17 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %16, i32 0, i32 0, !dbg !4126
  %rlock.i22 = bitcast %union.anon.0* %17 to %struct.raw_spinlock*, !dbg !4126
  br label %if.end, !dbg !4128

if.end:                                           ; preds = %do.end19, %entry
  ret void, !dbg !4129
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @is_event_supported(i32 %code, i64* %bm, i32 %max) #0 !dbg !4130 {
entry:
  %code.addr = alloca i32, align 4
  %bm.addr = alloca i64*, align 8
  %max.addr = alloca i32, align 4
  store i32 %code, i32* %code.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %code.addr, metadata !4133, metadata !DIExpression()), !dbg !4134
  store i64* %bm, i64** %bm.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %bm.addr, metadata !4135, metadata !DIExpression()), !dbg !4136
  store i32 %max, i32* %max.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %max.addr, metadata !4137, metadata !DIExpression()), !dbg !4138
  %0 = load i32, i32* %code.addr, align 4, !dbg !4139
  %1 = load i32, i32* %max.addr, align 4, !dbg !4140
  %cmp = icmp ule i32 %0, %1, !dbg !4141
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !4142

land.rhs:                                         ; preds = %entry
  %2 = load i32, i32* %code.addr, align 4, !dbg !4143
  %conv = zext i32 %2 to i64, !dbg !4143
  %3 = load i64*, i64** %bm.addr, align 8, !dbg !4144
  %call = call zeroext i1 @test_bit(i64 %conv, i64* %3) #11, !dbg !4145
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %4 = phi i1 [ false, %entry ], [ %call, %land.rhs ], !dbg !4146
  %land.ext = zext i1 %4 to i32, !dbg !4142
  ret i32 %land.ext, !dbg !4147
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @arch_local_irq_save() #0 !dbg !4148 {
entry:
  %f = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %f, metadata !4152, metadata !DIExpression()), !dbg !4153
  %call = call i64 @arch_local_save_flags() #11, !dbg !4154
  store i64 %call, i64* %f, align 8, !dbg !4155
  call void @arch_local_irq_disable() #11, !dbg !4156
  %0 = load i64, i64* %f, align 8, !dbg !4157
  ret i64 %0, !dbg !4158
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @input_handle_event(%struct.input_dev* %dev, i32 %type, i32 %code, i32 %value) #0 !dbg !4159 {
entry:
  %dev.addr = alloca %struct.input_dev*, align 8
  %type.addr = alloca i32, align 4
  %code.addr = alloca i32, align 4
  %value.addr = alloca i32, align 4
  %disposition = alloca i32, align 4
  %v = alloca %struct.input_value*, align 8
  store %struct.input_dev* %dev, %struct.input_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.input_dev** %dev.addr, metadata !4160, metadata !DIExpression()), !dbg !4161
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !4162, metadata !DIExpression()), !dbg !4163
  store i32 %code, i32* %code.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %code.addr, metadata !4164, metadata !DIExpression()), !dbg !4165
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !4166, metadata !DIExpression()), !dbg !4167
  call void @llvm.dbg.declare(metadata i32* %disposition, metadata !4168, metadata !DIExpression()), !dbg !4169
  %0 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !4170
  %1 = load i32, i32* %type.addr, align 4, !dbg !4171
  %2 = load i32, i32* %code.addr, align 4, !dbg !4172
  %call = call i32 @input_get_disposition(%struct.input_dev* %0, i32 %1, i32 %2, i32* %value.addr) #11, !dbg !4173
  store i32 %call, i32* %disposition, align 4, !dbg !4169
  %3 = load i32, i32* %disposition, align 4, !dbg !4174
  %cmp = icmp ne i32 %3, 0, !dbg !4176
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !4177

land.lhs.true:                                    ; preds = %entry
  %4 = load i32, i32* %type.addr, align 4, !dbg !4178
  %cmp1 = icmp ne i32 %4, 0, !dbg !4179
  br i1 %cmp1, label %if.then, label %if.end, !dbg !4180

if.then:                                          ; preds = %land.lhs.true
  %5 = load i32, i32* %type.addr, align 4, !dbg !4181
  %6 = load i32, i32* %code.addr, align 4, !dbg !4182
  %7 = load i32, i32* %value.addr, align 4, !dbg !4183
  call void @add_input_randomness(i32 %5, i32 %6, i32 %7) #11, !dbg !4184
  br label %if.end, !dbg !4184

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %8 = load i32, i32* %disposition, align 4, !dbg !4185
  %and = and i32 %8, 2, !dbg !4187
  %tobool = icmp ne i32 %and, 0, !dbg !4187
  br i1 %tobool, label %land.lhs.true2, label %if.end7, !dbg !4188

land.lhs.true2:                                   ; preds = %if.end
  %9 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !4189
  %event = getelementptr inbounds %struct.input_dev, %struct.input_dev* %9, i32 0, i32 34, !dbg !4190
  %10 = load i32 (%struct.input_dev*, i32, i32, i32)*, i32 (%struct.input_dev*, i32, i32, i32)** %event, align 8, !dbg !4190
  %tobool3 = icmp ne i32 (%struct.input_dev*, i32, i32, i32)* %10, null, !dbg !4189
  br i1 %tobool3, label %if.then4, label %if.end7, !dbg !4191

if.then4:                                         ; preds = %land.lhs.true2
  %11 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !4192
  %event5 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %11, i32 0, i32 34, !dbg !4193
  %12 = load i32 (%struct.input_dev*, i32, i32, i32)*, i32 (%struct.input_dev*, i32, i32, i32)** %event5, align 8, !dbg !4193
  %13 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !4194
  %14 = load i32, i32* %type.addr, align 4, !dbg !4195
  %15 = load i32, i32* %code.addr, align 4, !dbg !4196
  %16 = load i32, i32* %value.addr, align 4, !dbg !4197
  %call6 = call i32 %12(%struct.input_dev* %13, i32 %14, i32 %15, i32 %16) #11, !dbg !4192
  br label %if.end7, !dbg !4192

if.end7:                                          ; preds = %if.then4, %land.lhs.true2, %if.end
  %17 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !4198
  %vals = getelementptr inbounds %struct.input_dev, %struct.input_dev* %17, i32 0, i32 45, !dbg !4200
  %18 = load %struct.input_value*, %struct.input_value** %vals, align 8, !dbg !4200
  %tobool8 = icmp ne %struct.input_value* %18, null, !dbg !4198
  br i1 %tobool8, label %if.end10, label %if.then9, !dbg !4201

if.then9:                                         ; preds = %if.end7
  br label %if.end58, !dbg !4202

if.end10:                                         ; preds = %if.end7
  %19 = load i32, i32* %disposition, align 4, !dbg !4203
  %and11 = and i32 %19, 1, !dbg !4205
  %tobool12 = icmp ne i32 %and11, 0, !dbg !4205
  br i1 %tobool12, label %if.then13, label %if.end31, !dbg !4206

if.then13:                                        ; preds = %if.end10
  call void @llvm.dbg.declare(metadata %struct.input_value** %v, metadata !4207, metadata !DIExpression()), !dbg !4209
  %20 = load i32, i32* %disposition, align 4, !dbg !4210
  %and14 = and i32 %20, 4, !dbg !4212
  %tobool15 = icmp ne i32 %and14, 0, !dbg !4212
  br i1 %tobool15, label %if.then16, label %if.end21, !dbg !4213

if.then16:                                        ; preds = %if.then13
  %21 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !4214
  %vals17 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %21, i32 0, i32 45, !dbg !4216
  %22 = load %struct.input_value*, %struct.input_value** %vals17, align 8, !dbg !4216
  %23 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !4217
  %num_vals = getelementptr inbounds %struct.input_dev, %struct.input_dev* %23, i32 0, i32 43, !dbg !4218
  %24 = load i32, i32* %num_vals, align 8, !dbg !4219
  %inc = add i32 %24, 1, !dbg !4219
  store i32 %inc, i32* %num_vals, align 8, !dbg !4219
  %idxprom = zext i32 %24 to i64, !dbg !4214
  %arrayidx = getelementptr %struct.input_value, %struct.input_value* %22, i64 %idxprom, !dbg !4214
  store %struct.input_value* %arrayidx, %struct.input_value** %v, align 8, !dbg !4220
  %25 = load %struct.input_value*, %struct.input_value** %v, align 8, !dbg !4221
  %type18 = getelementptr inbounds %struct.input_value, %struct.input_value* %25, i32 0, i32 0, !dbg !4222
  store i16 3, i16* %type18, align 4, !dbg !4223
  %26 = load %struct.input_value*, %struct.input_value** %v, align 8, !dbg !4224
  %code19 = getelementptr inbounds %struct.input_value, %struct.input_value* %26, i32 0, i32 1, !dbg !4225
  store i16 47, i16* %code19, align 2, !dbg !4226
  %27 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !4227
  %mt = getelementptr inbounds %struct.input_dev, %struct.input_dev* %27, i32 0, i32 25, !dbg !4228
  %28 = load %struct.input_mt*, %struct.input_mt** %mt, align 8, !dbg !4228
  %slot = getelementptr inbounds %struct.input_mt, %struct.input_mt* %28, i32 0, i32 2, !dbg !4229
  %29 = load i32, i32* %slot, align 8, !dbg !4229
  %30 = load %struct.input_value*, %struct.input_value** %v, align 8, !dbg !4230
  %value20 = getelementptr inbounds %struct.input_value, %struct.input_value* %30, i32 0, i32 2, !dbg !4231
  store i32 %29, i32* %value20, align 4, !dbg !4232
  br label %if.end21, !dbg !4233

if.end21:                                         ; preds = %if.then16, %if.then13
  %31 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !4234
  %vals22 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %31, i32 0, i32 45, !dbg !4235
  %32 = load %struct.input_value*, %struct.input_value** %vals22, align 8, !dbg !4235
  %33 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !4236
  %num_vals23 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %33, i32 0, i32 43, !dbg !4237
  %34 = load i32, i32* %num_vals23, align 8, !dbg !4238
  %inc24 = add i32 %34, 1, !dbg !4238
  store i32 %inc24, i32* %num_vals23, align 8, !dbg !4238
  %idxprom25 = zext i32 %34 to i64, !dbg !4234
  %arrayidx26 = getelementptr %struct.input_value, %struct.input_value* %32, i64 %idxprom25, !dbg !4234
  store %struct.input_value* %arrayidx26, %struct.input_value** %v, align 8, !dbg !4239
  %35 = load i32, i32* %type.addr, align 4, !dbg !4240
  %conv = trunc i32 %35 to i16, !dbg !4240
  %36 = load %struct.input_value*, %struct.input_value** %v, align 8, !dbg !4241
  %type27 = getelementptr inbounds %struct.input_value, %struct.input_value* %36, i32 0, i32 0, !dbg !4242
  store i16 %conv, i16* %type27, align 4, !dbg !4243
  %37 = load i32, i32* %code.addr, align 4, !dbg !4244
  %conv28 = trunc i32 %37 to i16, !dbg !4244
  %38 = load %struct.input_value*, %struct.input_value** %v, align 8, !dbg !4245
  %code29 = getelementptr inbounds %struct.input_value, %struct.input_value* %38, i32 0, i32 1, !dbg !4246
  store i16 %conv28, i16* %code29, align 2, !dbg !4247
  %39 = load i32, i32* %value.addr, align 4, !dbg !4248
  %40 = load %struct.input_value*, %struct.input_value** %v, align 8, !dbg !4249
  %value30 = getelementptr inbounds %struct.input_value, %struct.input_value* %40, i32 0, i32 2, !dbg !4250
  store i32 %39, i32* %value30, align 4, !dbg !4251
  br label %if.end31, !dbg !4252

if.end31:                                         ; preds = %if.end21, %if.end10
  %41 = load i32, i32* %disposition, align 4, !dbg !4253
  %and32 = and i32 %41, 8, !dbg !4255
  %tobool33 = icmp ne i32 %and32, 0, !dbg !4255
  br i1 %tobool33, label %if.then34, label %if.else, !dbg !4256

if.then34:                                        ; preds = %if.end31
  %42 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !4257
  %num_vals35 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %42, i32 0, i32 43, !dbg !4260
  %43 = load i32, i32* %num_vals35, align 8, !dbg !4260
  %cmp36 = icmp uge i32 %43, 2, !dbg !4261
  br i1 %cmp36, label %if.then38, label %if.end41, !dbg !4262

if.then38:                                        ; preds = %if.then34
  %44 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !4263
  %45 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !4264
  %vals39 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %45, i32 0, i32 45, !dbg !4265
  %46 = load %struct.input_value*, %struct.input_value** %vals39, align 8, !dbg !4265
  %47 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !4266
  %num_vals40 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %47, i32 0, i32 43, !dbg !4267
  %48 = load i32, i32* %num_vals40, align 8, !dbg !4267
  call void @input_pass_values(%struct.input_dev* %44, %struct.input_value* %46, i32 %48) #11, !dbg !4268
  br label %if.end41, !dbg !4268

if.end41:                                         ; preds = %if.then38, %if.then34
  %49 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !4269
  %num_vals42 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %49, i32 0, i32 43, !dbg !4270
  store i32 0, i32* %num_vals42, align 8, !dbg !4271
  %call43 = call i64 @ktime_set(i64 0, i64 0) #11, !dbg !4272
  %50 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !4273
  %timestamp = getelementptr inbounds %struct.input_dev, %struct.input_dev* %50, i32 0, i32 47, !dbg !4274
  %arrayidx44 = getelementptr [3 x i64], [3 x i64]* %timestamp, i64 0, i64 1, !dbg !4273
  store i64 %call43, i64* %arrayidx44, align 8, !dbg !4275
  br label %if.end58, !dbg !4276

if.else:                                          ; preds = %if.end31
  %51 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !4277
  %num_vals45 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %51, i32 0, i32 43, !dbg !4279
  %52 = load i32, i32* %num_vals45, align 8, !dbg !4279
  %53 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !4280
  %max_vals = getelementptr inbounds %struct.input_dev, %struct.input_dev* %53, i32 0, i32 44, !dbg !4281
  %54 = load i32, i32* %max_vals, align 4, !dbg !4281
  %sub = sub i32 %54, 2, !dbg !4282
  %cmp46 = icmp uge i32 %52, %sub, !dbg !4283
  br i1 %cmp46, label %if.then48, label %if.end57, !dbg !4284

if.then48:                                        ; preds = %if.else
  %55 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !4285
  %vals49 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %55, i32 0, i32 45, !dbg !4287
  %56 = load %struct.input_value*, %struct.input_value** %vals49, align 8, !dbg !4287
  %57 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !4288
  %num_vals50 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %57, i32 0, i32 43, !dbg !4289
  %58 = load i32, i32* %num_vals50, align 8, !dbg !4290
  %inc51 = add i32 %58, 1, !dbg !4290
  store i32 %inc51, i32* %num_vals50, align 8, !dbg !4290
  %idxprom52 = zext i32 %58 to i64, !dbg !4285
  %arrayidx53 = getelementptr %struct.input_value, %struct.input_value* %56, i64 %idxprom52, !dbg !4285
  %59 = bitcast %struct.input_value* %arrayidx53 to i8*, !dbg !4291
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %59, i8* align 4 bitcast (%struct.input_value* @input_value_sync to i8*), i64 8, i1 false), !dbg !4291
  %60 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !4292
  %61 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !4293
  %vals54 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %61, i32 0, i32 45, !dbg !4294
  %62 = load %struct.input_value*, %struct.input_value** %vals54, align 8, !dbg !4294
  %63 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !4295
  %num_vals55 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %63, i32 0, i32 43, !dbg !4296
  %64 = load i32, i32* %num_vals55, align 8, !dbg !4296
  call void @input_pass_values(%struct.input_dev* %60, %struct.input_value* %62, i32 %64) #11, !dbg !4297
  %65 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !4298
  %num_vals56 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %65, i32 0, i32 43, !dbg !4299
  store i32 0, i32* %num_vals56, align 8, !dbg !4300
  br label %if.end57, !dbg !4301

if.end57:                                         ; preds = %if.then48, %if.else
  br label %if.end58

if.end58:                                         ; preds = %if.then9, %if.end57, %if.end41
  ret void, !dbg !4302
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @input_inject_event(%struct.input_handle* %handle, i32 %type, i32 %code, i32 %value) #0 !dbg !4303 {
entry:
  %lock.addr.i34 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i34, metadata !4042, metadata !DIExpression()), !dbg !4304
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !4052, metadata !DIExpression()), !dbg !4308
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !4054, metadata !DIExpression()), !dbg !4309
  %handle.addr = alloca %struct.input_handle*, align 8
  %type.addr = alloca i32, align 4
  %code.addr = alloca i32, align 4
  %value.addr = alloca i32, align 4
  %dev = alloca %struct.input_dev*, align 8
  %grab = alloca %struct.input_handle*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy6 = alloca i64, align 8
  %__dummy27 = alloca i64, align 8
  %tmp10 = alloca i32, align 4
  %________p1 = alloca %struct.input_handle*, align 8
  %tmp23 = alloca %struct.input_handle*, align 8
  %tmp27 = alloca %struct.input_handle*, align 8
  store %struct.input_handle* %handle, %struct.input_handle** %handle.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.input_handle** %handle.addr, metadata !4316, metadata !DIExpression()), !dbg !4317
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !4318, metadata !DIExpression()), !dbg !4319
  store i32 %code, i32* %code.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %code.addr, metadata !4320, metadata !DIExpression()), !dbg !4321
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !4322, metadata !DIExpression()), !dbg !4323
  call void @llvm.dbg.declare(metadata %struct.input_dev** %dev, metadata !4324, metadata !DIExpression()), !dbg !4325
  %0 = load %struct.input_handle*, %struct.input_handle** %handle.addr, align 8, !dbg !4326
  %dev1 = getelementptr inbounds %struct.input_handle, %struct.input_handle* %0, i32 0, i32 3, !dbg !4327
  %1 = load %struct.input_dev*, %struct.input_dev** %dev1, align 8, !dbg !4327
  store %struct.input_dev* %1, %struct.input_dev** %dev, align 8, !dbg !4325
  call void @llvm.dbg.declare(metadata %struct.input_handle** %grab, metadata !4328, metadata !DIExpression()), !dbg !4329
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !4330, metadata !DIExpression()), !dbg !4331
  %2 = load i32, i32* %type.addr, align 4, !dbg !4332
  %3 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !4333
  %evbit = getelementptr inbounds %struct.input_dev, %struct.input_dev* %3, i32 0, i32 5, !dbg !4334
  %arraydecay = getelementptr inbounds [1 x i64], [1 x i64]* %evbit, i64 0, i64 0, !dbg !4333
  %call = call i32 @is_event_supported(i32 %2, i64* %arraydecay, i32 31) #11, !dbg !4335
  %tobool = icmp ne i32 %call, 0, !dbg !4335
  br i1 %tobool, label %if.then, label %if.end33, !dbg !4336

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !4337

do.body:                                          ; preds = %if.then
  br label %do.body2, !dbg !4338

do.body2:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !4339, metadata !DIExpression()), !dbg !4341
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !4342, metadata !DIExpression()), !dbg !4341
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !4341
  %conv = zext i1 %cmp to i32, !dbg !4341
  store i32 1, i32* %tmp, align 4, !dbg !4341
  %4 = load i32, i32* %tmp, align 4, !dbg !4341
  br label %do.body3, !dbg !4343

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !4344

do.body4:                                         ; preds = %do.body3
  br label %do.body5, !dbg !4345

do.body5:                                         ; preds = %do.body4
  call void @llvm.dbg.declare(metadata i64* %__dummy6, metadata !4347, metadata !DIExpression()), !dbg !4350
  call void @llvm.dbg.declare(metadata i64* %__dummy27, metadata !4351, metadata !DIExpression()), !dbg !4350
  %cmp8 = icmp eq i64* %__dummy6, %__dummy27, !dbg !4350
  %conv9 = zext i1 %cmp8 to i32, !dbg !4350
  store i32 1, i32* %tmp10, align 4, !dbg !4350
  %5 = load i32, i32* %tmp10, align 4, !dbg !4350
  %call11 = call i64 @arch_local_irq_save() #11, !dbg !4352
  store i64 %call11, i64* %flags, align 8, !dbg !4352
  br label %do.end, !dbg !4352

do.end:                                           ; preds = %do.body5
  br label %do.end12, !dbg !4345

do.end12:                                         ; preds = %do.end
  br label %do.body13, !dbg !4344

do.body13:                                        ; preds = %do.end12
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !4353, !srcloc !4354
  br label %do.body14, !dbg !4353

do.body14:                                        ; preds = %do.body13
  %6 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !4355
  %event_lock = getelementptr inbounds %struct.input_dev, %struct.input_dev* %6, i32 0, i32 36, !dbg !4355
  store %struct.spinlock* %event_lock, %struct.spinlock** %lock.addr.i, align 8
  %7 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !4356
  %8 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %7, i32 0, i32 0, !dbg !4357
  %rlock.i = bitcast %union.anon.0* %8 to %struct.raw_spinlock*, !dbg !4357
  br label %do.end16, !dbg !4355

do.end16:                                         ; preds = %do.body14
  br label %do.end17, !dbg !4353

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !4344

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !4343

do.end19:                                         ; preds = %do.end18
  br label %do.end20, !dbg !4338

do.end20:                                         ; preds = %do.end19
  call void @__rcu_read_lock() #12, !dbg !4358
  call void @llvm.dbg.declare(metadata %struct.input_handle** %________p1, metadata !4362, metadata !DIExpression()), !dbg !4364
  br label %do.body21, !dbg !4365

do.body21:                                        ; preds = %do.end20
  br label %do.end22, !dbg !4367

do.end22:                                         ; preds = %do.body21
  %9 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !4365
  %grab24 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %9, i32 0, i32 35, !dbg !4365
  %10 = load volatile %struct.input_handle*, %struct.input_handle** %grab24, align 8, !dbg !4365
  store %struct.input_handle* %10, %struct.input_handle** %tmp23, align 8, !dbg !4367
  %11 = load %struct.input_handle*, %struct.input_handle** %tmp23, align 8, !dbg !4365
  store %struct.input_handle* %11, %struct.input_handle** %________p1, align 8, !dbg !4364
  br label %do.body25, !dbg !4364

do.body25:                                        ; preds = %do.end22
  br label %do.end26, !dbg !4369

do.end26:                                         ; preds = %do.body25
  %12 = load %struct.input_handle*, %struct.input_handle** %________p1, align 8, !dbg !4364
  store %struct.input_handle* %12, %struct.input_handle** %tmp27, align 8, !dbg !4369
  %13 = load %struct.input_handle*, %struct.input_handle** %tmp27, align 8, !dbg !4364
  store %struct.input_handle* %13, %struct.input_handle** %grab, align 8, !dbg !4371
  %14 = load %struct.input_handle*, %struct.input_handle** %grab, align 8, !dbg !4372
  %tobool28 = icmp ne %struct.input_handle* %14, null, !dbg !4372
  br i1 %tobool28, label %lor.lhs.false, label %if.then31, !dbg !4374

lor.lhs.false:                                    ; preds = %do.end26
  %15 = load %struct.input_handle*, %struct.input_handle** %grab, align 8, !dbg !4375
  %16 = load %struct.input_handle*, %struct.input_handle** %handle.addr, align 8, !dbg !4376
  %cmp29 = icmp eq %struct.input_handle* %15, %16, !dbg !4377
  br i1 %cmp29, label %if.then31, label %if.end, !dbg !4378

if.then31:                                        ; preds = %lor.lhs.false, %do.end26
  %17 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !4379
  %18 = load i32, i32* %type.addr, align 4, !dbg !4380
  %19 = load i32, i32* %code.addr, align 4, !dbg !4381
  %20 = load i32, i32* %value.addr, align 4, !dbg !4382
  call void @input_handle_event(%struct.input_dev* %17, i32 %18, i32 %19, i32 %20) #11, !dbg !4383
  br label %if.end, !dbg !4383

if.end:                                           ; preds = %if.then31, %lor.lhs.false
  call void @rcu_read_unlock() #11, !dbg !4384
  %21 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !4385
  %event_lock32 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %21, i32 0, i32 36, !dbg !4386
  %22 = load i64, i64* %flags, align 8, !dbg !4387
  store %struct.spinlock* %event_lock32, %struct.spinlock** %lock.addr.i34, align 8
  store i64 %22, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !309, metadata !4110, metadata !DIExpression()) #7, !dbg !4388
  call void @llvm.dbg.declare(metadata !309, metadata !4114, metadata !DIExpression()) #7, !dbg !4388
  store i32 1, i32* %tmp.i, align 4, !dbg !4388
  %23 = load i32, i32* %tmp.i, align 4, !dbg !4388
  call void @llvm.dbg.declare(metadata !309, metadata !4115, metadata !DIExpression()) #7, !dbg !4389
  call void @llvm.dbg.declare(metadata !309, metadata !4121, metadata !DIExpression()) #7, !dbg !4389
  store i32 1, i32* %tmp8.i, align 4, !dbg !4389
  %24 = load i32, i32* %tmp8.i, align 4, !dbg !4389
  %25 = load i64, i64* %flags.addr.i, align 8, !dbg !4390
  call void @arch_local_irq_restore(i64 %25) #12, !dbg !4390
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !4391, !srcloc !4125
  %26 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i34, align 8, !dbg !4392
  %27 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %26, i32 0, i32 0, !dbg !4392
  %rlock.i35 = bitcast %union.anon.0* %27 to %struct.raw_spinlock*, !dbg !4392
  br label %if.end33, !dbg !4393

if.end33:                                         ; preds = %if.end, %entry
  ret void, !dbg !4394
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @rcu_read_unlock() #0 !dbg !4395 {
entry:
  br label %do.body, !dbg !4396

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !4397

do.end:                                           ; preds = %do.body
  call void @__rcu_read_unlock() #11, !dbg !4399
  br label %do.body1, !dbg !4400

do.body1:                                         ; preds = %do.end
  br label %do.end2, !dbg !4401

do.end2:                                          ; preds = %do.body1
  ret void, !dbg !4403
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @input_alloc_absinfo(%struct.input_dev* %dev) #0 !dbg !4404 {
entry:
  %dev.addr = alloca %struct.input_dev*, align 8
  store %struct.input_dev* %dev, %struct.input_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.input_dev** %dev.addr, metadata !4405, metadata !DIExpression()), !dbg !4406
  %0 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !4407
  %absinfo = getelementptr inbounds %struct.input_dev, %struct.input_dev* %0, i32 0, i32 26, !dbg !4409
  %1 = load %struct.input_absinfo*, %struct.input_absinfo** %absinfo, align 8, !dbg !4409
  %tobool = icmp ne %struct.input_absinfo* %1, null, !dbg !4407
  br i1 %tobool, label %if.then, label %if.end, !dbg !4410

if.then:                                          ; preds = %entry
  br label %if.end8, !dbg !4411

if.end:                                           ; preds = %entry
  %call = call i8* @kcalloc(i64 64, i64 24, i32 3264) #11, !dbg !4412
  %2 = bitcast i8* %call to %struct.input_absinfo*, !dbg !4412
  %3 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !4413
  %absinfo1 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %3, i32 0, i32 26, !dbg !4414
  store %struct.input_absinfo* %2, %struct.input_absinfo** %absinfo1, align 8, !dbg !4415
  %4 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !4416
  %absinfo2 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %4, i32 0, i32 26, !dbg !4418
  %5 = load %struct.input_absinfo*, %struct.input_absinfo** %absinfo2, align 8, !dbg !4418
  %tobool3 = icmp ne %struct.input_absinfo* %5, null, !dbg !4416
  br i1 %tobool3, label %if.end8, label %if.then4, !dbg !4419

if.then4:                                         ; preds = %if.end
  %6 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !4420
  %dev5 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %6, i32 0, i32 40, !dbg !4420
  %parent = getelementptr inbounds %struct.device, %struct.device* %dev5, i32 0, i32 1, !dbg !4420
  %7 = load %struct.device*, %struct.device** %parent, align 8, !dbg !4420
  %tobool6 = icmp ne %struct.device* %7, null, !dbg !4420
  br i1 %tobool6, label %cond.true, label %cond.false, !dbg !4420

cond.true:                                        ; preds = %if.then4
  br label %cond.end, !dbg !4420

cond.false:                                       ; preds = %if.then4
  %8 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !4420
  %dev7 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %8, i32 0, i32 40, !dbg !4420
  br label %cond.end, !dbg !4420

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.device* [ %7, %cond.true ], [ %dev7, %cond.false ], !dbg !4420
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %cond, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__.input_alloc_absinfo, i64 0, i64 0)) #13, !dbg !4420
  br label %if.end8, !dbg !4422

if.end8:                                          ; preds = %if.then, %cond.end, %if.end
  ret void, !dbg !4423
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kcalloc(i64 %n, i64 %size, i32 %flags) #0 !dbg !4424 {
entry:
  %n.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !4427, metadata !DIExpression()), !dbg !4428
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !4429, metadata !DIExpression()), !dbg !4430
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !4431, metadata !DIExpression()), !dbg !4432
  %0 = load i64, i64* %n.addr, align 8, !dbg !4433
  %1 = load i64, i64* %size.addr, align 8, !dbg !4434
  %2 = load i32, i32* %flags.addr, align 4, !dbg !4435
  %or = or i32 %2, 256, !dbg !4436
  %call = call i8* @kmalloc_array(i64 %0, i64 %1, i32 %or) #11, !dbg !4437
  ret i8* %call, !dbg !4438
}

; Function Attrs: cold noredzone
declare dso_local void @_dev_err(%struct.device*, i8*, ...) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @input_set_abs_params(%struct.input_dev* %dev, i32 %axis, i32 %min, i32 %max, i32 %fuzz, i32 %flat) #0 !dbg !4439 {
entry:
  %dev.addr = alloca %struct.input_dev*, align 8
  %axis.addr = alloca i32, align 4
  %min.addr = alloca i32, align 4
  %max.addr = alloca i32, align 4
  %fuzz.addr = alloca i32, align 4
  %flat.addr = alloca i32, align 4
  %absinfo = alloca %struct.input_absinfo*, align 8
  store %struct.input_dev* %dev, %struct.input_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.input_dev** %dev.addr, metadata !4442, metadata !DIExpression()), !dbg !4443
  store i32 %axis, i32* %axis.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %axis.addr, metadata !4444, metadata !DIExpression()), !dbg !4445
  store i32 %min, i32* %min.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %min.addr, metadata !4446, metadata !DIExpression()), !dbg !4447
  store i32 %max, i32* %max.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %max.addr, metadata !4448, metadata !DIExpression()), !dbg !4449
  store i32 %fuzz, i32* %fuzz.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fuzz.addr, metadata !4450, metadata !DIExpression()), !dbg !4451
  store i32 %flat, i32* %flat.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flat.addr, metadata !4452, metadata !DIExpression()), !dbg !4453
  call void @llvm.dbg.declare(metadata %struct.input_absinfo** %absinfo, metadata !4454, metadata !DIExpression()), !dbg !4455
  %0 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !4456
  call void @input_alloc_absinfo(%struct.input_dev* %0) #11, !dbg !4457
  %1 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !4458
  %absinfo1 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %1, i32 0, i32 26, !dbg !4460
  %2 = load %struct.input_absinfo*, %struct.input_absinfo** %absinfo1, align 8, !dbg !4460
  %tobool = icmp ne %struct.input_absinfo* %2, null, !dbg !4458
  br i1 %tobool, label %if.end, label %if.then, !dbg !4461

if.then:                                          ; preds = %entry
  br label %return, !dbg !4462

if.end:                                           ; preds = %entry
  %3 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !4463
  %absinfo2 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %3, i32 0, i32 26, !dbg !4464
  %4 = load %struct.input_absinfo*, %struct.input_absinfo** %absinfo2, align 8, !dbg !4464
  %5 = load i32, i32* %axis.addr, align 4, !dbg !4465
  %idxprom = zext i32 %5 to i64, !dbg !4463
  %arrayidx = getelementptr %struct.input_absinfo, %struct.input_absinfo* %4, i64 %idxprom, !dbg !4463
  store %struct.input_absinfo* %arrayidx, %struct.input_absinfo** %absinfo, align 8, !dbg !4466
  %6 = load i32, i32* %min.addr, align 4, !dbg !4467
  %7 = load %struct.input_absinfo*, %struct.input_absinfo** %absinfo, align 8, !dbg !4468
  %minimum = getelementptr inbounds %struct.input_absinfo, %struct.input_absinfo* %7, i32 0, i32 1, !dbg !4469
  store i32 %6, i32* %minimum, align 4, !dbg !4470
  %8 = load i32, i32* %max.addr, align 4, !dbg !4471
  %9 = load %struct.input_absinfo*, %struct.input_absinfo** %absinfo, align 8, !dbg !4472
  %maximum = getelementptr inbounds %struct.input_absinfo, %struct.input_absinfo* %9, i32 0, i32 2, !dbg !4473
  store i32 %8, i32* %maximum, align 4, !dbg !4474
  %10 = load i32, i32* %fuzz.addr, align 4, !dbg !4475
  %11 = load %struct.input_absinfo*, %struct.input_absinfo** %absinfo, align 8, !dbg !4476
  %fuzz3 = getelementptr inbounds %struct.input_absinfo, %struct.input_absinfo* %11, i32 0, i32 3, !dbg !4477
  store i32 %10, i32* %fuzz3, align 4, !dbg !4478
  %12 = load i32, i32* %flat.addr, align 4, !dbg !4479
  %13 = load %struct.input_absinfo*, %struct.input_absinfo** %absinfo, align 8, !dbg !4480
  %flat4 = getelementptr inbounds %struct.input_absinfo, %struct.input_absinfo* %13, i32 0, i32 4, !dbg !4481
  store i32 %12, i32* %flat4, align 4, !dbg !4482
  %14 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !4483
  %evbit = getelementptr inbounds %struct.input_dev, %struct.input_dev* %14, i32 0, i32 5, !dbg !4484
  %arraydecay = getelementptr inbounds [1 x i64], [1 x i64]* %evbit, i64 0, i64 0, !dbg !4483
  call void @__set_bit(i64 3, i64* %arraydecay) #11, !dbg !4485
  %15 = load i32, i32* %axis.addr, align 4, !dbg !4486
  %conv = zext i32 %15 to i64, !dbg !4486
  %16 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !4487
  %absbit = getelementptr inbounds %struct.input_dev, %struct.input_dev* %16, i32 0, i32 8, !dbg !4488
  %arraydecay5 = getelementptr inbounds [1 x i64], [1 x i64]* %absbit, i64 0, i64 0, !dbg !4487
  call void @__set_bit(i64 %conv, i64* %arraydecay5) #11, !dbg !4489
  br label %return, !dbg !4490

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !4490
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__set_bit(i64 %nr, i64* %addr) #0 !dbg !4491 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !4497, metadata !DIExpression()), !dbg !4500
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !4502, metadata !DIExpression()), !dbg !4503
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !4504, metadata !DIExpression()), !dbg !4512
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !4514, metadata !DIExpression()), !dbg !4515
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !4516, metadata !DIExpression()), !dbg !4517
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !4518, metadata !DIExpression()), !dbg !4519
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !4520
  %1 = load i64, i64* %nr.addr, align 8, !dbg !4521
  %div = sdiv i64 %1, 64, !dbg !4521
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !4522
  %2 = bitcast i64* %add.ptr to i8*, !dbg !4520
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !4523
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !4524
  %conv.i = trunc i64 %4 to i32, !dbg !4524
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #12, !dbg !4525
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !4526
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !4526
  call void @kcsan_check_access(i8* %5, i64 %6, i32 1) #12, !dbg !4526
  %7 = load i64, i64* %nr.addr, align 8, !dbg !4527
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !4528
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64*, i64** %addr.addr.i, align 8, !dbg !4529
  %10 = load i64, i64* %nr.addr.i, align 8, !dbg !4530
  call void asm sideeffect " btsq  $1,$0", "*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %9, i64 %10) #7, !dbg !4531, !srcloc !4532
  ret void, !dbg !4533
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @input_grab_device(%struct.input_handle* %handle) #0 !dbg !4534 {
entry:
  %retval = alloca i32, align 4
  %handle.addr = alloca %struct.input_handle*, align 8
  %dev = alloca %struct.input_dev*, align 8
  %retval2 = alloca i32, align 4
  %_r_a_p__v = alloca i64, align 8
  store %struct.input_handle* %handle, %struct.input_handle** %handle.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.input_handle** %handle.addr, metadata !4537, metadata !DIExpression()), !dbg !4538
  call void @llvm.dbg.declare(metadata %struct.input_dev** %dev, metadata !4539, metadata !DIExpression()), !dbg !4540
  %0 = load %struct.input_handle*, %struct.input_handle** %handle.addr, align 8, !dbg !4541
  %dev1 = getelementptr inbounds %struct.input_handle, %struct.input_handle* %0, i32 0, i32 3, !dbg !4542
  %1 = load %struct.input_dev*, %struct.input_dev** %dev1, align 8, !dbg !4542
  store %struct.input_dev* %1, %struct.input_dev** %dev, align 8, !dbg !4540
  call void @llvm.dbg.declare(metadata i32* %retval2, metadata !4543, metadata !DIExpression()), !dbg !4544
  %2 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !4545
  %mutex = getelementptr inbounds %struct.input_dev, %struct.input_dev* %2, i32 0, i32 37, !dbg !4546
  %call = call i32 @mutex_lock_interruptible(%struct.mutex* %mutex) #11, !dbg !4547
  store i32 %call, i32* %retval2, align 4, !dbg !4548
  %3 = load i32, i32* %retval2, align 4, !dbg !4549
  %tobool = icmp ne i32 %3, 0, !dbg !4549
  br i1 %tobool, label %if.then, label %if.end, !dbg !4551

if.then:                                          ; preds = %entry
  %4 = load i32, i32* %retval2, align 4, !dbg !4552
  store i32 %4, i32* %retval, align 4, !dbg !4553
  br label %return, !dbg !4553

if.end:                                           ; preds = %entry
  %5 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !4554
  %grab = getelementptr inbounds %struct.input_dev, %struct.input_dev* %5, i32 0, i32 35, !dbg !4556
  %6 = load %struct.input_handle*, %struct.input_handle** %grab, align 8, !dbg !4556
  %tobool3 = icmp ne %struct.input_handle* %6, null, !dbg !4554
  br i1 %tobool3, label %if.then4, label %if.end5, !dbg !4557

if.then4:                                         ; preds = %if.end
  store i32 -16, i32* %retval2, align 4, !dbg !4558
  br label %out, !dbg !4560

if.end5:                                          ; preds = %if.end
  br label %do.body, !dbg !4561

do.body:                                          ; preds = %if.end5
  call void @llvm.dbg.declare(metadata i64* %_r_a_p__v, metadata !4562, metadata !DIExpression()), !dbg !4564
  %7 = load %struct.input_handle*, %struct.input_handle** %handle.addr, align 8, !dbg !4564
  %8 = ptrtoint %struct.input_handle* %7 to i64, !dbg !4564
  store i64 %8, i64* %_r_a_p__v, align 8, !dbg !4564
  br i1 false, label %land.lhs.true, label %if.else, !dbg !4565

land.lhs.true:                                    ; preds = %do.body
  %9 = load i64, i64* %_r_a_p__v, align 8, !dbg !4565
  %cmp = icmp eq i64 %9, 0, !dbg !4565
  br i1 %cmp, label %if.then6, label %if.else, !dbg !4564

if.then6:                                         ; preds = %land.lhs.true
  br label %do.body7, !dbg !4565

do.body7:                                         ; preds = %if.then6
  br label %do.body8, !dbg !4567

do.body8:                                         ; preds = %do.body7
  br label %do.end, !dbg !4569

do.end:                                           ; preds = %do.body8
  br label %do.body9, !dbg !4567

do.body9:                                         ; preds = %do.end
  %10 = load i64, i64* %_r_a_p__v, align 8, !dbg !4571
  %11 = inttoptr i64 %10 to %struct.input_handle*, !dbg !4571
  %12 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !4571
  %grab10 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %12, i32 0, i32 35, !dbg !4571
  store volatile %struct.input_handle* %11, %struct.input_handle** %grab10, align 8, !dbg !4571
  br label %do.end11, !dbg !4571

do.end11:                                         ; preds = %do.body9
  br label %do.end12, !dbg !4567

do.end12:                                         ; preds = %do.end11
  br label %if.end24, !dbg !4567

if.else:                                          ; preds = %land.lhs.true, %do.body
  br label %do.body13, !dbg !4565

do.body13:                                        ; preds = %if.else
  br label %do.body14, !dbg !4573

do.body14:                                        ; preds = %do.body13
  br label %do.end15, !dbg !4575

do.end15:                                         ; preds = %do.body14
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !4573, !srcloc !4577
  br label %do.body16, !dbg !4573

do.body16:                                        ; preds = %do.end15
  br label %do.body17, !dbg !4578

do.body17:                                        ; preds = %do.body16
  br label %do.end18, !dbg !4580

do.end18:                                         ; preds = %do.body17
  br label %do.body19, !dbg !4578

do.body19:                                        ; preds = %do.end18
  %13 = load i64, i64* %_r_a_p__v, align 8, !dbg !4582
  %14 = inttoptr i64 %13 to %struct.input_handle*, !dbg !4582
  %15 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !4582
  %grab20 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %15, i32 0, i32 35, !dbg !4582
  store volatile %struct.input_handle* %14, %struct.input_handle** %grab20, align 8, !dbg !4582
  br label %do.end21, !dbg !4582

do.end21:                                         ; preds = %do.body19
  br label %do.end22, !dbg !4578

do.end22:                                         ; preds = %do.end21
  br label %do.end23, !dbg !4573

do.end23:                                         ; preds = %do.end22
  br label %if.end24

if.end24:                                         ; preds = %do.end23, %do.end12
  br label %do.end25, !dbg !4564

do.end25:                                         ; preds = %if.end24
  br label %out, !dbg !4564

out:                                              ; preds = %do.end25, %if.then4
  call void @llvm.dbg.label(metadata !4584), !dbg !4585
  %16 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !4586
  %mutex26 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %16, i32 0, i32 37, !dbg !4587
  call void @mutex_unlock(%struct.mutex* %mutex26) #11, !dbg !4588
  %17 = load i32, i32* %retval2, align 4, !dbg !4589
  store i32 %17, i32* %retval, align 4, !dbg !4590
  br label %return, !dbg !4590

return:                                           ; preds = %out, %if.then
  %18 = load i32, i32* %retval, align 4, !dbg !4591
  ret i32 %18, !dbg !4591
}

; Function Attrs: noredzone
declare dso_local i32 @mutex_lock_interruptible(%struct.mutex*) #3

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: noredzone
declare dso_local void @mutex_unlock(%struct.mutex*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @input_release_device(%struct.input_handle* %handle) #0 !dbg !4592 {
entry:
  %handle.addr = alloca %struct.input_handle*, align 8
  %dev = alloca %struct.input_dev*, align 8
  store %struct.input_handle* %handle, %struct.input_handle** %handle.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.input_handle** %handle.addr, metadata !4593, metadata !DIExpression()), !dbg !4594
  call void @llvm.dbg.declare(metadata %struct.input_dev** %dev, metadata !4595, metadata !DIExpression()), !dbg !4596
  %0 = load %struct.input_handle*, %struct.input_handle** %handle.addr, align 8, !dbg !4597
  %dev1 = getelementptr inbounds %struct.input_handle, %struct.input_handle* %0, i32 0, i32 3, !dbg !4598
  %1 = load %struct.input_dev*, %struct.input_dev** %dev1, align 8, !dbg !4598
  store %struct.input_dev* %1, %struct.input_dev** %dev, align 8, !dbg !4596
  %2 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !4599
  %mutex = getelementptr inbounds %struct.input_dev, %struct.input_dev* %2, i32 0, i32 37, !dbg !4600
  call void @mutex_lock(%struct.mutex* %mutex) #11, !dbg !4601
  %3 = load %struct.input_handle*, %struct.input_handle** %handle.addr, align 8, !dbg !4602
  call void @__input_release_device(%struct.input_handle* %3) #11, !dbg !4603
  %4 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !4604
  %mutex2 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %4, i32 0, i32 37, !dbg !4605
  call void @mutex_unlock(%struct.mutex* %mutex2) #11, !dbg !4606
  ret void, !dbg !4607
}

; Function Attrs: noredzone
declare dso_local void @mutex_lock(%struct.mutex*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__input_release_device(%struct.input_handle* %handle) #0 !dbg !4608 {
entry:
  %handle.addr = alloca %struct.input_handle*, align 8
  %dev = alloca %struct.input_dev*, align 8
  %grabber = alloca %struct.input_handle*, align 8
  %tmp = alloca %struct.input_handle*, align 8
  %_r_a_p__v = alloca i64, align 8
  %__mptr = alloca i8*, align 8
  %tmp26 = alloca %struct.input_handle*, align 8
  %__mptr34 = alloca i8*, align 8
  %tmp39 = alloca %struct.input_handle*, align 8
  store %struct.input_handle* %handle, %struct.input_handle** %handle.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.input_handle** %handle.addr, metadata !4609, metadata !DIExpression()), !dbg !4610
  call void @llvm.dbg.declare(metadata %struct.input_dev** %dev, metadata !4611, metadata !DIExpression()), !dbg !4612
  %0 = load %struct.input_handle*, %struct.input_handle** %handle.addr, align 8, !dbg !4613
  %dev1 = getelementptr inbounds %struct.input_handle, %struct.input_handle* %0, i32 0, i32 3, !dbg !4614
  %1 = load %struct.input_dev*, %struct.input_dev** %dev1, align 8, !dbg !4614
  store %struct.input_dev* %1, %struct.input_dev** %dev, align 8, !dbg !4612
  call void @llvm.dbg.declare(metadata %struct.input_handle** %grabber, metadata !4615, metadata !DIExpression()), !dbg !4616
  br label %do.body, !dbg !4617

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !4619

do.end:                                           ; preds = %do.body
  %2 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !4617
  %grab = getelementptr inbounds %struct.input_dev, %struct.input_dev* %2, i32 0, i32 35, !dbg !4617
  %3 = load %struct.input_handle*, %struct.input_handle** %grab, align 8, !dbg !4617
  store %struct.input_handle* %3, %struct.input_handle** %tmp, align 8, !dbg !4619
  %4 = load %struct.input_handle*, %struct.input_handle** %tmp, align 8, !dbg !4617
  store %struct.input_handle* %4, %struct.input_handle** %grabber, align 8, !dbg !4621
  %5 = load %struct.input_handle*, %struct.input_handle** %grabber, align 8, !dbg !4622
  %6 = load %struct.input_handle*, %struct.input_handle** %handle.addr, align 8, !dbg !4624
  %cmp = icmp eq %struct.input_handle* %5, %6, !dbg !4625
  br i1 %cmp, label %if.then, label %if.end41, !dbg !4626

if.then:                                          ; preds = %do.end
  br label %do.body2, !dbg !4627

do.body2:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata i64* %_r_a_p__v, metadata !4629, metadata !DIExpression()), !dbg !4631
  store i64 0, i64* %_r_a_p__v, align 8, !dbg !4631
  %7 = load i64, i64* %_r_a_p__v, align 8, !dbg !4632
  %cmp3 = icmp eq i64 %7, 0, !dbg !4632
  br i1 %cmp3, label %if.then4, label %if.else, !dbg !4631

if.then4:                                         ; preds = %do.body2
  br label %do.body5, !dbg !4632

do.body5:                                         ; preds = %if.then4
  br label %do.body6, !dbg !4634

do.body6:                                         ; preds = %do.body5
  br label %do.end7, !dbg !4636

do.end7:                                          ; preds = %do.body6
  br label %do.body8, !dbg !4634

do.body8:                                         ; preds = %do.end7
  %8 = load i64, i64* %_r_a_p__v, align 8, !dbg !4638
  %9 = inttoptr i64 %8 to %struct.input_handle*, !dbg !4638
  %10 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !4638
  %grab9 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %10, i32 0, i32 35, !dbg !4638
  store volatile %struct.input_handle* %9, %struct.input_handle** %grab9, align 8, !dbg !4638
  br label %do.end10, !dbg !4638

do.end10:                                         ; preds = %do.body8
  br label %do.end11, !dbg !4634

do.end11:                                         ; preds = %do.end10
  br label %if.end, !dbg !4634

if.else:                                          ; preds = %do.body2
  br label %do.body12, !dbg !4632

do.body12:                                        ; preds = %if.else
  br label %do.body13, !dbg !4640

do.body13:                                        ; preds = %do.body12
  br label %do.end14, !dbg !4642

do.end14:                                         ; preds = %do.body13
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !4640, !srcloc !4644
  br label %do.body15, !dbg !4640

do.body15:                                        ; preds = %do.end14
  br label %do.body16, !dbg !4645

do.body16:                                        ; preds = %do.body15
  br label %do.end17, !dbg !4647

do.end17:                                         ; preds = %do.body16
  br label %do.body18, !dbg !4645

do.body18:                                        ; preds = %do.end17
  %11 = load i64, i64* %_r_a_p__v, align 8, !dbg !4649
  %12 = inttoptr i64 %11 to %struct.input_handle*, !dbg !4649
  %13 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !4649
  %grab19 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %13, i32 0, i32 35, !dbg !4649
  store volatile %struct.input_handle* %12, %struct.input_handle** %grab19, align 8, !dbg !4649
  br label %do.end20, !dbg !4649

do.end20:                                         ; preds = %do.body18
  br label %do.end21, !dbg !4645

do.end21:                                         ; preds = %do.end20
  br label %do.end22, !dbg !4640

do.end22:                                         ; preds = %do.end21
  br label %if.end

if.end:                                           ; preds = %do.end22, %do.end11
  br label %do.end23, !dbg !4631

do.end23:                                         ; preds = %if.end
  call void @synchronize_rcu() #11, !dbg !4651
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !4652, metadata !DIExpression()), !dbg !4655
  %14 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !4655
  %h_list = getelementptr inbounds %struct.input_dev, %struct.input_dev* %14, i32 0, i32 41, !dbg !4655
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %h_list, i32 0, i32 0, !dbg !4655
  %15 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !4655
  %16 = bitcast %struct.list_head* %15 to i8*, !dbg !4655
  store i8* %16, i8** %__mptr, align 8, !dbg !4655
  br label %do.body24, !dbg !4655

do.body24:                                        ; preds = %do.end23
  br label %do.end25, !dbg !4656

do.end25:                                         ; preds = %do.body24
  %17 = load i8*, i8** %__mptr, align 8, !dbg !4655
  %add.ptr = getelementptr i8, i8* %17, i64 -40, !dbg !4655
  %18 = bitcast i8* %add.ptr to %struct.input_handle*, !dbg !4655
  store %struct.input_handle* %18, %struct.input_handle** %tmp26, align 8, !dbg !4656
  %19 = load %struct.input_handle*, %struct.input_handle** %tmp26, align 8, !dbg !4655
  store %struct.input_handle* %19, %struct.input_handle** %handle.addr, align 8, !dbg !4658
  br label %for.cond, !dbg !4658

for.cond:                                         ; preds = %do.end38, %do.end25
  %20 = load %struct.input_handle*, %struct.input_handle** %handle.addr, align 8, !dbg !4659
  %d_node = getelementptr inbounds %struct.input_handle, %struct.input_handle* %20, i32 0, i32 5, !dbg !4659
  %21 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !4659
  %h_list27 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %21, i32 0, i32 41, !dbg !4659
  %cmp28 = icmp eq %struct.list_head* %d_node, %h_list27, !dbg !4659
  %lnot = xor i1 %cmp28, true, !dbg !4659
  br i1 %lnot, label %for.body, label %for.end, !dbg !4658

for.body:                                         ; preds = %for.cond
  %22 = load %struct.input_handle*, %struct.input_handle** %handle.addr, align 8, !dbg !4661
  %open = getelementptr inbounds %struct.input_handle, %struct.input_handle* %22, i32 0, i32 1, !dbg !4663
  %23 = load i32, i32* %open, align 8, !dbg !4663
  %tobool = icmp ne i32 %23, 0, !dbg !4661
  br i1 %tobool, label %land.lhs.true, label %if.end33, !dbg !4664

land.lhs.true:                                    ; preds = %for.body
  %24 = load %struct.input_handle*, %struct.input_handle** %handle.addr, align 8, !dbg !4665
  %handler = getelementptr inbounds %struct.input_handle, %struct.input_handle* %24, i32 0, i32 4, !dbg !4666
  %25 = load %struct.input_handler*, %struct.input_handler** %handler, align 8, !dbg !4666
  %start = getelementptr inbounds %struct.input_handler, %struct.input_handler* %25, i32 0, i32 7, !dbg !4667
  %26 = load void (%struct.input_handle*)*, void (%struct.input_handle*)** %start, align 8, !dbg !4667
  %tobool29 = icmp ne void (%struct.input_handle*)* %26, null, !dbg !4665
  br i1 %tobool29, label %if.then30, label %if.end33, !dbg !4668

if.then30:                                        ; preds = %land.lhs.true
  %27 = load %struct.input_handle*, %struct.input_handle** %handle.addr, align 8, !dbg !4669
  %handler31 = getelementptr inbounds %struct.input_handle, %struct.input_handle* %27, i32 0, i32 4, !dbg !4670
  %28 = load %struct.input_handler*, %struct.input_handler** %handler31, align 8, !dbg !4670
  %start32 = getelementptr inbounds %struct.input_handler, %struct.input_handler* %28, i32 0, i32 7, !dbg !4671
  %29 = load void (%struct.input_handle*)*, void (%struct.input_handle*)** %start32, align 8, !dbg !4671
  %30 = load %struct.input_handle*, %struct.input_handle** %handle.addr, align 8, !dbg !4672
  call void %29(%struct.input_handle* %30) #11, !dbg !4669
  br label %if.end33, !dbg !4669

if.end33:                                         ; preds = %if.then30, %land.lhs.true, %for.body
  br label %for.inc, !dbg !4667

for.inc:                                          ; preds = %if.end33
  call void @llvm.dbg.declare(metadata i8** %__mptr34, metadata !4673, metadata !DIExpression()), !dbg !4675
  %31 = load %struct.input_handle*, %struct.input_handle** %handle.addr, align 8, !dbg !4675
  %d_node35 = getelementptr inbounds %struct.input_handle, %struct.input_handle* %31, i32 0, i32 5, !dbg !4675
  %next36 = getelementptr inbounds %struct.list_head, %struct.list_head* %d_node35, i32 0, i32 0, !dbg !4675
  %32 = load %struct.list_head*, %struct.list_head** %next36, align 8, !dbg !4675
  %33 = bitcast %struct.list_head* %32 to i8*, !dbg !4675
  store i8* %33, i8** %__mptr34, align 8, !dbg !4675
  br label %do.body37, !dbg !4675

do.body37:                                        ; preds = %for.inc
  br label %do.end38, !dbg !4676

do.end38:                                         ; preds = %do.body37
  %34 = load i8*, i8** %__mptr34, align 8, !dbg !4675
  %add.ptr40 = getelementptr i8, i8* %34, i64 -40, !dbg !4675
  %35 = bitcast i8* %add.ptr40 to %struct.input_handle*, !dbg !4675
  store %struct.input_handle* %35, %struct.input_handle** %tmp39, align 8, !dbg !4676
  %36 = load %struct.input_handle*, %struct.input_handle** %tmp39, align 8, !dbg !4675
  store %struct.input_handle* %36, %struct.input_handle** %handle.addr, align 8, !dbg !4659
  br label %for.cond, !dbg !4659, !llvm.loop !4678

for.end:                                          ; preds = %for.cond
  br label %if.end41, !dbg !4680

if.end41:                                         ; preds = %for.end, %do.end
  ret void, !dbg !4681
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @input_open_device(%struct.input_handle* %handle) #0 !dbg !4682 {
entry:
  %retval = alloca i32, align 4
  %handle.addr = alloca %struct.input_handle*, align 8
  %dev = alloca %struct.input_dev*, align 8
  %retval2 = alloca i32, align 4
  store %struct.input_handle* %handle, %struct.input_handle** %handle.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.input_handle** %handle.addr, metadata !4683, metadata !DIExpression()), !dbg !4684
  call void @llvm.dbg.declare(metadata %struct.input_dev** %dev, metadata !4685, metadata !DIExpression()), !dbg !4686
  %0 = load %struct.input_handle*, %struct.input_handle** %handle.addr, align 8, !dbg !4687
  %dev1 = getelementptr inbounds %struct.input_handle, %struct.input_handle* %0, i32 0, i32 3, !dbg !4688
  %1 = load %struct.input_dev*, %struct.input_dev** %dev1, align 8, !dbg !4688
  store %struct.input_dev* %1, %struct.input_dev** %dev, align 8, !dbg !4686
  call void @llvm.dbg.declare(metadata i32* %retval2, metadata !4689, metadata !DIExpression()), !dbg !4690
  %2 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !4691
  %mutex = getelementptr inbounds %struct.input_dev, %struct.input_dev* %2, i32 0, i32 37, !dbg !4692
  %call = call i32 @mutex_lock_interruptible(%struct.mutex* %mutex) #11, !dbg !4693
  store i32 %call, i32* %retval2, align 4, !dbg !4694
  %3 = load i32, i32* %retval2, align 4, !dbg !4695
  %tobool = icmp ne i32 %3, 0, !dbg !4695
  br i1 %tobool, label %if.then, label %if.end, !dbg !4697

if.then:                                          ; preds = %entry
  %4 = load i32, i32* %retval2, align 4, !dbg !4698
  store i32 %4, i32* %retval, align 4, !dbg !4699
  br label %return, !dbg !4699

if.end:                                           ; preds = %entry
  %5 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !4700
  %going_away = getelementptr inbounds %struct.input_dev, %struct.input_dev* %5, i32 0, i32 39, !dbg !4702
  %6 = load i8, i8* %going_away, align 4, !dbg !4702
  %tobool3 = trunc i8 %6 to i1, !dbg !4702
  br i1 %tobool3, label %if.then4, label %if.end5, !dbg !4703

if.then4:                                         ; preds = %if.end
  store i32 -19, i32* %retval2, align 4, !dbg !4704
  br label %out, !dbg !4706

if.end5:                                          ; preds = %if.end
  %7 = load %struct.input_handle*, %struct.input_handle** %handle.addr, align 8, !dbg !4707
  %open = getelementptr inbounds %struct.input_handle, %struct.input_handle* %7, i32 0, i32 1, !dbg !4708
  %8 = load i32, i32* %open, align 8, !dbg !4709
  %inc = add i32 %8, 1, !dbg !4709
  store i32 %inc, i32* %open, align 8, !dbg !4709
  %9 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !4710
  %users = getelementptr inbounds %struct.input_dev, %struct.input_dev* %9, i32 0, i32 38, !dbg !4712
  %10 = load i32, i32* %users, align 8, !dbg !4713
  %inc6 = add i32 %10, 1, !dbg !4713
  store i32 %inc6, i32* %users, align 8, !dbg !4713
  %tobool7 = icmp ne i32 %10, 0, !dbg !4713
  br i1 %tobool7, label %if.then8, label %if.end9, !dbg !4714

if.then8:                                         ; preds = %if.end5
  br label %out, !dbg !4715

if.end9:                                          ; preds = %if.end5
  %11 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !4717
  %open10 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %11, i32 0, i32 31, !dbg !4719
  %12 = load i32 (%struct.input_dev*)*, i32 (%struct.input_dev*)** %open10, align 8, !dbg !4719
  %tobool11 = icmp ne i32 (%struct.input_dev*)* %12, null, !dbg !4717
  br i1 %tobool11, label %if.then12, label %if.end21, !dbg !4720

if.then12:                                        ; preds = %if.end9
  %13 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !4721
  %open13 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %13, i32 0, i32 31, !dbg !4723
  %14 = load i32 (%struct.input_dev*)*, i32 (%struct.input_dev*)** %open13, align 8, !dbg !4723
  %15 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !4724
  %call14 = call i32 %14(%struct.input_dev* %15) #11, !dbg !4721
  store i32 %call14, i32* %retval2, align 4, !dbg !4725
  %16 = load i32, i32* %retval2, align 4, !dbg !4726
  %tobool15 = icmp ne i32 %16, 0, !dbg !4726
  br i1 %tobool15, label %if.then16, label %if.end20, !dbg !4728

if.then16:                                        ; preds = %if.then12
  %17 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !4729
  %users17 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %17, i32 0, i32 38, !dbg !4731
  %18 = load i32, i32* %users17, align 8, !dbg !4732
  %dec = add i32 %18, -1, !dbg !4732
  store i32 %dec, i32* %users17, align 8, !dbg !4732
  %19 = load %struct.input_handle*, %struct.input_handle** %handle.addr, align 8, !dbg !4733
  %open18 = getelementptr inbounds %struct.input_handle, %struct.input_handle* %19, i32 0, i32 1, !dbg !4734
  %20 = load i32, i32* %open18, align 8, !dbg !4735
  %dec19 = add i32 %20, -1, !dbg !4735
  store i32 %dec19, i32* %open18, align 8, !dbg !4735
  call void @synchronize_rcu() #11, !dbg !4736
  br label %out, !dbg !4737

if.end20:                                         ; preds = %if.then12
  br label %if.end21, !dbg !4738

if.end21:                                         ; preds = %if.end20, %if.end9
  %21 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !4739
  %poller = getelementptr inbounds %struct.input_dev, %struct.input_dev* %21, i32 0, i32 21, !dbg !4741
  %22 = load %struct.input_dev_poller*, %struct.input_dev_poller** %poller, align 8, !dbg !4741
  %tobool22 = icmp ne %struct.input_dev_poller* %22, null, !dbg !4739
  br i1 %tobool22, label %if.then23, label %if.end25, !dbg !4742

if.then23:                                        ; preds = %if.end21
  %23 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !4743
  %poller24 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %23, i32 0, i32 21, !dbg !4744
  %24 = load %struct.input_dev_poller*, %struct.input_dev_poller** %poller24, align 8, !dbg !4744
  call void @input_dev_poller_start(%struct.input_dev_poller* %24) #11, !dbg !4745
  br label %if.end25, !dbg !4745

if.end25:                                         ; preds = %if.then23, %if.end21
  br label %out, !dbg !4741

out:                                              ; preds = %if.end25, %if.then16, %if.then8, %if.then4
  call void @llvm.dbg.label(metadata !4746), !dbg !4747
  %25 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !4748
  %mutex26 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %25, i32 0, i32 37, !dbg !4749
  call void @mutex_unlock(%struct.mutex* %mutex26) #11, !dbg !4750
  %26 = load i32, i32* %retval2, align 4, !dbg !4751
  store i32 %26, i32* %retval, align 4, !dbg !4752
  br label %return, !dbg !4752

return:                                           ; preds = %out, %if.then
  %27 = load i32, i32* %retval, align 4, !dbg !4753
  ret i32 %27, !dbg !4753
}

; Function Attrs: noredzone
declare dso_local void @synchronize_rcu() #3

; Function Attrs: noredzone
declare dso_local void @input_dev_poller_start(%struct.input_dev_poller*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @input_flush_device(%struct.input_handle* %handle, %struct.file* %file) #0 !dbg !4754 {
entry:
  %retval = alloca i32, align 4
  %handle.addr = alloca %struct.input_handle*, align 8
  %file.addr = alloca %struct.file*, align 8
  %dev = alloca %struct.input_dev*, align 8
  %retval2 = alloca i32, align 4
  store %struct.input_handle* %handle, %struct.input_handle** %handle.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.input_handle** %handle.addr, metadata !4757, metadata !DIExpression()), !dbg !4758
  store %struct.file* %file, %struct.file** %file.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.file** %file.addr, metadata !4759, metadata !DIExpression()), !dbg !4760
  call void @llvm.dbg.declare(metadata %struct.input_dev** %dev, metadata !4761, metadata !DIExpression()), !dbg !4762
  %0 = load %struct.input_handle*, %struct.input_handle** %handle.addr, align 8, !dbg !4763
  %dev1 = getelementptr inbounds %struct.input_handle, %struct.input_handle* %0, i32 0, i32 3, !dbg !4764
  %1 = load %struct.input_dev*, %struct.input_dev** %dev1, align 8, !dbg !4764
  store %struct.input_dev* %1, %struct.input_dev** %dev, align 8, !dbg !4762
  call void @llvm.dbg.declare(metadata i32* %retval2, metadata !4765, metadata !DIExpression()), !dbg !4766
  %2 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !4767
  %mutex = getelementptr inbounds %struct.input_dev, %struct.input_dev* %2, i32 0, i32 37, !dbg !4768
  %call = call i32 @mutex_lock_interruptible(%struct.mutex* %mutex) #11, !dbg !4769
  store i32 %call, i32* %retval2, align 4, !dbg !4770
  %3 = load i32, i32* %retval2, align 4, !dbg !4771
  %tobool = icmp ne i32 %3, 0, !dbg !4771
  br i1 %tobool, label %if.then, label %if.end, !dbg !4773

if.then:                                          ; preds = %entry
  %4 = load i32, i32* %retval2, align 4, !dbg !4774
  store i32 %4, i32* %retval, align 4, !dbg !4775
  br label %return, !dbg !4775

if.end:                                           ; preds = %entry
  %5 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !4776
  %flush = getelementptr inbounds %struct.input_dev, %struct.input_dev* %5, i32 0, i32 33, !dbg !4778
  %6 = load i32 (%struct.input_dev*, %struct.file*)*, i32 (%struct.input_dev*, %struct.file*)** %flush, align 8, !dbg !4778
  %tobool3 = icmp ne i32 (%struct.input_dev*, %struct.file*)* %6, null, !dbg !4776
  br i1 %tobool3, label %if.then4, label %if.end7, !dbg !4779

if.then4:                                         ; preds = %if.end
  %7 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !4780
  %flush5 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %7, i32 0, i32 33, !dbg !4781
  %8 = load i32 (%struct.input_dev*, %struct.file*)*, i32 (%struct.input_dev*, %struct.file*)** %flush5, align 8, !dbg !4781
  %9 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !4782
  %10 = load %struct.file*, %struct.file** %file.addr, align 8, !dbg !4783
  %call6 = call i32 %8(%struct.input_dev* %9, %struct.file* %10) #11, !dbg !4780
  store i32 %call6, i32* %retval2, align 4, !dbg !4784
  br label %if.end7, !dbg !4785

if.end7:                                          ; preds = %if.then4, %if.end
  %11 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !4786
  %mutex8 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %11, i32 0, i32 37, !dbg !4787
  call void @mutex_unlock(%struct.mutex* %mutex8) #11, !dbg !4788
  %12 = load i32, i32* %retval2, align 4, !dbg !4789
  store i32 %12, i32* %retval, align 4, !dbg !4790
  br label %return, !dbg !4790

return:                                           ; preds = %if.end7, %if.then
  %13 = load i32, i32* %retval, align 4, !dbg !4791
  ret i32 %13, !dbg !4791
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @input_close_device(%struct.input_handle* %handle) #0 !dbg !4792 {
entry:
  %handle.addr = alloca %struct.input_handle*, align 8
  %dev = alloca %struct.input_dev*, align 8
  store %struct.input_handle* %handle, %struct.input_handle** %handle.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.input_handle** %handle.addr, metadata !4793, metadata !DIExpression()), !dbg !4794
  call void @llvm.dbg.declare(metadata %struct.input_dev** %dev, metadata !4795, metadata !DIExpression()), !dbg !4796
  %0 = load %struct.input_handle*, %struct.input_handle** %handle.addr, align 8, !dbg !4797
  %dev1 = getelementptr inbounds %struct.input_handle, %struct.input_handle* %0, i32 0, i32 3, !dbg !4798
  %1 = load %struct.input_dev*, %struct.input_dev** %dev1, align 8, !dbg !4798
  store %struct.input_dev* %1, %struct.input_dev** %dev, align 8, !dbg !4796
  %2 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !4799
  %mutex = getelementptr inbounds %struct.input_dev, %struct.input_dev* %2, i32 0, i32 37, !dbg !4800
  call void @mutex_lock(%struct.mutex* %mutex) #11, !dbg !4801
  %3 = load %struct.input_handle*, %struct.input_handle** %handle.addr, align 8, !dbg !4802
  call void @__input_release_device(%struct.input_handle* %3) #11, !dbg !4803
  %4 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !4804
  %users = getelementptr inbounds %struct.input_dev, %struct.input_dev* %4, i32 0, i32 38, !dbg !4806
  %5 = load i32, i32* %users, align 8, !dbg !4807
  %dec = add i32 %5, -1, !dbg !4807
  store i32 %dec, i32* %users, align 8, !dbg !4807
  %tobool = icmp ne i32 %dec, 0, !dbg !4807
  br i1 %tobool, label %if.end9, label %if.then, !dbg !4808

if.then:                                          ; preds = %entry
  %6 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !4809
  %poller = getelementptr inbounds %struct.input_dev, %struct.input_dev* %6, i32 0, i32 21, !dbg !4812
  %7 = load %struct.input_dev_poller*, %struct.input_dev_poller** %poller, align 8, !dbg !4812
  %tobool2 = icmp ne %struct.input_dev_poller* %7, null, !dbg !4809
  br i1 %tobool2, label %if.then3, label %if.end, !dbg !4813

if.then3:                                         ; preds = %if.then
  %8 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !4814
  %poller4 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %8, i32 0, i32 21, !dbg !4815
  %9 = load %struct.input_dev_poller*, %struct.input_dev_poller** %poller4, align 8, !dbg !4815
  call void @input_dev_poller_stop(%struct.input_dev_poller* %9) #11, !dbg !4816
  br label %if.end, !dbg !4816

if.end:                                           ; preds = %if.then3, %if.then
  %10 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !4817
  %close = getelementptr inbounds %struct.input_dev, %struct.input_dev* %10, i32 0, i32 32, !dbg !4819
  %11 = load void (%struct.input_dev*)*, void (%struct.input_dev*)** %close, align 8, !dbg !4819
  %tobool5 = icmp ne void (%struct.input_dev*)* %11, null, !dbg !4817
  br i1 %tobool5, label %if.then6, label %if.end8, !dbg !4820

if.then6:                                         ; preds = %if.end
  %12 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !4821
  %close7 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %12, i32 0, i32 32, !dbg !4822
  %13 = load void (%struct.input_dev*)*, void (%struct.input_dev*)** %close7, align 8, !dbg !4822
  %14 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !4823
  call void %13(%struct.input_dev* %14) #11, !dbg !4821
  br label %if.end8, !dbg !4821

if.end8:                                          ; preds = %if.then6, %if.end
  br label %if.end9, !dbg !4824

if.end9:                                          ; preds = %if.end8, %entry
  %15 = load %struct.input_handle*, %struct.input_handle** %handle.addr, align 8, !dbg !4825
  %open = getelementptr inbounds %struct.input_handle, %struct.input_handle* %15, i32 0, i32 1, !dbg !4827
  %16 = load i32, i32* %open, align 8, !dbg !4828
  %dec10 = add i32 %16, -1, !dbg !4828
  store i32 %dec10, i32* %open, align 8, !dbg !4828
  %tobool11 = icmp ne i32 %dec10, 0, !dbg !4828
  br i1 %tobool11, label %if.end13, label %if.then12, !dbg !4829

if.then12:                                        ; preds = %if.end9
  call void @synchronize_rcu() #11, !dbg !4830
  br label %if.end13, !dbg !4832

if.end13:                                         ; preds = %if.then12, %if.end9
  %17 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !4833
  %mutex14 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %17, i32 0, i32 37, !dbg !4834
  call void @mutex_unlock(%struct.mutex* %mutex14) #11, !dbg !4835
  ret void, !dbg !4836
}

; Function Attrs: noredzone
declare dso_local void @input_dev_poller_stop(%struct.input_dev_poller*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @input_scancode_to_scalar(%struct.input_keymap_entry* %ke, i32* %scancode) #0 !dbg !4837 {
entry:
  %retval = alloca i32, align 4
  %ke.addr = alloca %struct.input_keymap_entry*, align 8
  %scancode.addr = alloca i32*, align 8
  store %struct.input_keymap_entry* %ke, %struct.input_keymap_entry** %ke.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.input_keymap_entry** %ke.addr, metadata !4840, metadata !DIExpression()), !dbg !4841
  store i32* %scancode, i32** %scancode.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %scancode.addr, metadata !4842, metadata !DIExpression()), !dbg !4843
  %0 = load %struct.input_keymap_entry*, %struct.input_keymap_entry** %ke.addr, align 8, !dbg !4844
  %len = getelementptr inbounds %struct.input_keymap_entry, %struct.input_keymap_entry* %0, i32 0, i32 1, !dbg !4845
  %1 = load i8, i8* %len, align 1, !dbg !4845
  %conv = zext i8 %1 to i32, !dbg !4844
  switch i32 %conv, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb3
    i32 4, label %sw.bb7
  ], !dbg !4846

sw.bb:                                            ; preds = %entry
  %2 = load %struct.input_keymap_entry*, %struct.input_keymap_entry** %ke.addr, align 8, !dbg !4847
  %scancode1 = getelementptr inbounds %struct.input_keymap_entry, %struct.input_keymap_entry* %2, i32 0, i32 4, !dbg !4849
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %scancode1, i64 0, i64 0, !dbg !4850
  %3 = load i8, i8* %arraydecay, align 4, !dbg !4850
  %conv2 = zext i8 %3 to i32, !dbg !4850
  %4 = load i32*, i32** %scancode.addr, align 8, !dbg !4851
  store i32 %conv2, i32* %4, align 4, !dbg !4852
  br label %sw.epilog, !dbg !4853

sw.bb3:                                           ; preds = %entry
  %5 = load %struct.input_keymap_entry*, %struct.input_keymap_entry** %ke.addr, align 8, !dbg !4854
  %scancode4 = getelementptr inbounds %struct.input_keymap_entry, %struct.input_keymap_entry* %5, i32 0, i32 4, !dbg !4855
  %arraydecay5 = getelementptr inbounds [32 x i8], [32 x i8]* %scancode4, i64 0, i64 0, !dbg !4856
  %6 = bitcast i8* %arraydecay5 to i16*, !dbg !4856
  %7 = load i16, i16* %6, align 4, !dbg !4856
  %conv6 = zext i16 %7 to i32, !dbg !4856
  %8 = load i32*, i32** %scancode.addr, align 8, !dbg !4857
  store i32 %conv6, i32* %8, align 4, !dbg !4858
  br label %sw.epilog, !dbg !4859

sw.bb7:                                           ; preds = %entry
  %9 = load %struct.input_keymap_entry*, %struct.input_keymap_entry** %ke.addr, align 8, !dbg !4860
  %scancode8 = getelementptr inbounds %struct.input_keymap_entry, %struct.input_keymap_entry* %9, i32 0, i32 4, !dbg !4861
  %arraydecay9 = getelementptr inbounds [32 x i8], [32 x i8]* %scancode8, i64 0, i64 0, !dbg !4862
  %10 = bitcast i8* %arraydecay9 to i32*, !dbg !4862
  %11 = load i32, i32* %10, align 4, !dbg !4862
  %12 = load i32*, i32** %scancode.addr, align 8, !dbg !4863
  store i32 %11, i32* %12, align 4, !dbg !4864
  br label %sw.epilog, !dbg !4865

sw.default:                                       ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !4866
  br label %return, !dbg !4866

sw.epilog:                                        ; preds = %sw.bb7, %sw.bb3, %sw.bb
  store i32 0, i32* %retval, align 4, !dbg !4867
  br label %return, !dbg !4867

return:                                           ; preds = %sw.epilog, %sw.default
  %13 = load i32, i32* %retval, align 4, !dbg !4868
  ret i32 %13, !dbg !4868
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @input_get_keycode(%struct.input_dev* %dev, %struct.input_keymap_entry* %ke) #0 !dbg !4869 {
entry:
  %lock.addr.i22 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i22, metadata !4042, metadata !DIExpression()), !dbg !4870
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !4052, metadata !DIExpression()), !dbg !4872
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !4054, metadata !DIExpression()), !dbg !4873
  %dev.addr = alloca %struct.input_dev*, align 8
  %ke.addr = alloca %struct.input_keymap_entry*, align 8
  %flags = alloca i64, align 8
  %retval1 = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy6 = alloca i64, align 8
  %__dummy27 = alloca i64, align 8
  %tmp10 = alloca i32, align 4
  store %struct.input_dev* %dev, %struct.input_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.input_dev** %dev.addr, metadata !4880, metadata !DIExpression()), !dbg !4881
  store %struct.input_keymap_entry* %ke, %struct.input_keymap_entry** %ke.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.input_keymap_entry** %ke.addr, metadata !4882, metadata !DIExpression()), !dbg !4883
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !4884, metadata !DIExpression()), !dbg !4885
  call void @llvm.dbg.declare(metadata i32* %retval1, metadata !4886, metadata !DIExpression()), !dbg !4887
  br label %do.body, !dbg !4888

do.body:                                          ; preds = %entry
  br label %do.body2, !dbg !4889

do.body2:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !4890, metadata !DIExpression()), !dbg !4892
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !4893, metadata !DIExpression()), !dbg !4892
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !4892
  %conv = zext i1 %cmp to i32, !dbg !4892
  store i32 1, i32* %tmp, align 4, !dbg !4892
  %0 = load i32, i32* %tmp, align 4, !dbg !4892
  br label %do.body3, !dbg !4894

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !4895

do.body4:                                         ; preds = %do.body3
  br label %do.body5, !dbg !4896

do.body5:                                         ; preds = %do.body4
  call void @llvm.dbg.declare(metadata i64* %__dummy6, metadata !4898, metadata !DIExpression()), !dbg !4901
  call void @llvm.dbg.declare(metadata i64* %__dummy27, metadata !4902, metadata !DIExpression()), !dbg !4901
  %cmp8 = icmp eq i64* %__dummy6, %__dummy27, !dbg !4901
  %conv9 = zext i1 %cmp8 to i32, !dbg !4901
  store i32 1, i32* %tmp10, align 4, !dbg !4901
  %1 = load i32, i32* %tmp10, align 4, !dbg !4901
  %call = call i64 @arch_local_irq_save() #11, !dbg !4903
  store i64 %call, i64* %flags, align 8, !dbg !4903
  br label %do.end, !dbg !4903

do.end:                                           ; preds = %do.body5
  br label %do.end11, !dbg !4896

do.end11:                                         ; preds = %do.end
  br label %do.body12, !dbg !4895

do.body12:                                        ; preds = %do.end11
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !4904, !srcloc !4905
  br label %do.body13, !dbg !4904

do.body13:                                        ; preds = %do.body12
  %2 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !4906
  %event_lock = getelementptr inbounds %struct.input_dev, %struct.input_dev* %2, i32 0, i32 36, !dbg !4906
  store %struct.spinlock* %event_lock, %struct.spinlock** %lock.addr.i, align 8
  %3 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !4907
  %4 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %3, i32 0, i32 0, !dbg !4908
  %rlock.i = bitcast %union.anon.0* %4 to %struct.raw_spinlock*, !dbg !4908
  br label %do.end15, !dbg !4906

do.end15:                                         ; preds = %do.body13
  br label %do.end16, !dbg !4904

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !4895

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !4894

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !4889

do.end19:                                         ; preds = %do.end18
  %5 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !4909
  %getkeycode = getelementptr inbounds %struct.input_dev, %struct.input_dev* %5, i32 0, i32 19, !dbg !4910
  %6 = load i32 (%struct.input_dev*, %struct.input_keymap_entry*)*, i32 (%struct.input_dev*, %struct.input_keymap_entry*)** %getkeycode, align 8, !dbg !4910
  %7 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !4911
  %8 = load %struct.input_keymap_entry*, %struct.input_keymap_entry** %ke.addr, align 8, !dbg !4912
  %call20 = call i32 %6(%struct.input_dev* %7, %struct.input_keymap_entry* %8) #11, !dbg !4909
  store i32 %call20, i32* %retval1, align 4, !dbg !4913
  %9 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !4914
  %event_lock21 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %9, i32 0, i32 36, !dbg !4915
  %10 = load i64, i64* %flags, align 8, !dbg !4916
  store %struct.spinlock* %event_lock21, %struct.spinlock** %lock.addr.i22, align 8
  store i64 %10, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !309, metadata !4110, metadata !DIExpression()) #7, !dbg !4917
  call void @llvm.dbg.declare(metadata !309, metadata !4114, metadata !DIExpression()) #7, !dbg !4917
  store i32 1, i32* %tmp.i, align 4, !dbg !4917
  %11 = load i32, i32* %tmp.i, align 4, !dbg !4917
  call void @llvm.dbg.declare(metadata !309, metadata !4115, metadata !DIExpression()) #7, !dbg !4918
  call void @llvm.dbg.declare(metadata !309, metadata !4121, metadata !DIExpression()) #7, !dbg !4918
  store i32 1, i32* %tmp8.i, align 4, !dbg !4918
  %12 = load i32, i32* %tmp8.i, align 4, !dbg !4918
  %13 = load i64, i64* %flags.addr.i, align 8, !dbg !4919
  call void @arch_local_irq_restore(i64 %13) #12, !dbg !4919
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !4920, !srcloc !4125
  %14 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i22, align 8, !dbg !4921
  %15 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %14, i32 0, i32 0, !dbg !4921
  %rlock.i23 = bitcast %union.anon.0* %15 to %struct.raw_spinlock*, !dbg !4921
  %16 = load i32, i32* %retval1, align 4, !dbg !4922
  ret i32 %16, !dbg !4923
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @input_set_keycode(%struct.input_dev* %dev, %struct.input_keymap_entry* %ke) #0 !dbg !4924 {
entry:
  %lock.addr.i48 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i48, metadata !4042, metadata !DIExpression()), !dbg !4927
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !4052, metadata !DIExpression()), !dbg !4929
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !4054, metadata !DIExpression()), !dbg !4930
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.input_dev*, align 8
  %ke.addr = alloca %struct.input_keymap_entry*, align 8
  %flags = alloca i64, align 8
  %old_keycode = alloca i32, align 4
  %retval1 = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy7 = alloca i64, align 8
  %__dummy28 = alloca i64, align 8
  %tmp11 = alloca i32, align 4
  %vals = alloca [2 x %struct.input_value], align 16
  store %struct.input_dev* %dev, %struct.input_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.input_dev** %dev.addr, metadata !4937, metadata !DIExpression()), !dbg !4938
  store %struct.input_keymap_entry* %ke, %struct.input_keymap_entry** %ke.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.input_keymap_entry** %ke.addr, metadata !4939, metadata !DIExpression()), !dbg !4940
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !4941, metadata !DIExpression()), !dbg !4942
  call void @llvm.dbg.declare(metadata i32* %old_keycode, metadata !4943, metadata !DIExpression()), !dbg !4944
  call void @llvm.dbg.declare(metadata i32* %retval1, metadata !4945, metadata !DIExpression()), !dbg !4946
  %0 = load %struct.input_keymap_entry*, %struct.input_keymap_entry** %ke.addr, align 8, !dbg !4947
  %keycode = getelementptr inbounds %struct.input_keymap_entry, %struct.input_keymap_entry* %0, i32 0, i32 3, !dbg !4949
  %1 = load i32, i32* %keycode, align 4, !dbg !4949
  %cmp = icmp ugt i32 %1, 767, !dbg !4950
  br i1 %cmp, label %if.then, label %if.end, !dbg !4951

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !4952
  br label %return, !dbg !4952

if.end:                                           ; preds = %entry
  br label %do.body, !dbg !4953

do.body:                                          ; preds = %if.end
  br label %do.body2, !dbg !4954

do.body2:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !4955, metadata !DIExpression()), !dbg !4957
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !4958, metadata !DIExpression()), !dbg !4957
  %cmp3 = icmp eq i64* %__dummy, %__dummy2, !dbg !4957
  %conv = zext i1 %cmp3 to i32, !dbg !4957
  store i32 1, i32* %tmp, align 4, !dbg !4957
  %2 = load i32, i32* %tmp, align 4, !dbg !4957
  br label %do.body4, !dbg !4959

do.body4:                                         ; preds = %do.body2
  br label %do.body5, !dbg !4960

do.body5:                                         ; preds = %do.body4
  br label %do.body6, !dbg !4961

do.body6:                                         ; preds = %do.body5
  call void @llvm.dbg.declare(metadata i64* %__dummy7, metadata !4963, metadata !DIExpression()), !dbg !4966
  call void @llvm.dbg.declare(metadata i64* %__dummy28, metadata !4967, metadata !DIExpression()), !dbg !4966
  %cmp9 = icmp eq i64* %__dummy7, %__dummy28, !dbg !4966
  %conv10 = zext i1 %cmp9 to i32, !dbg !4966
  store i32 1, i32* %tmp11, align 4, !dbg !4966
  %3 = load i32, i32* %tmp11, align 4, !dbg !4966
  %call = call i64 @arch_local_irq_save() #11, !dbg !4968
  store i64 %call, i64* %flags, align 8, !dbg !4968
  br label %do.end, !dbg !4968

do.end:                                           ; preds = %do.body6
  br label %do.end12, !dbg !4961

do.end12:                                         ; preds = %do.end
  br label %do.body13, !dbg !4960

do.body13:                                        ; preds = %do.end12
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !4969, !srcloc !4970
  br label %do.body14, !dbg !4969

do.body14:                                        ; preds = %do.body13
  %4 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !4971
  %event_lock = getelementptr inbounds %struct.input_dev, %struct.input_dev* %4, i32 0, i32 36, !dbg !4971
  store %struct.spinlock* %event_lock, %struct.spinlock** %lock.addr.i, align 8
  %5 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !4972
  %6 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %5, i32 0, i32 0, !dbg !4973
  %rlock.i = bitcast %union.anon.0* %6 to %struct.raw_spinlock*, !dbg !4973
  br label %do.end16, !dbg !4971

do.end16:                                         ; preds = %do.body14
  br label %do.end17, !dbg !4969

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !4960

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !4959

do.end19:                                         ; preds = %do.end18
  br label %do.end20, !dbg !4954

do.end20:                                         ; preds = %do.end19
  %7 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !4974
  %setkeycode = getelementptr inbounds %struct.input_dev, %struct.input_dev* %7, i32 0, i32 18, !dbg !4975
  %8 = load i32 (%struct.input_dev*, %struct.input_keymap_entry*, i32*)*, i32 (%struct.input_dev*, %struct.input_keymap_entry*, i32*)** %setkeycode, align 8, !dbg !4975
  %9 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !4976
  %10 = load %struct.input_keymap_entry*, %struct.input_keymap_entry** %ke.addr, align 8, !dbg !4977
  %call21 = call i32 %8(%struct.input_dev* %9, %struct.input_keymap_entry* %10, i32* %old_keycode) #11, !dbg !4974
  store i32 %call21, i32* %retval1, align 4, !dbg !4978
  %11 = load i32, i32* %retval1, align 4, !dbg !4979
  %tobool = icmp ne i32 %11, 0, !dbg !4979
  br i1 %tobool, label %if.then22, label %if.end23, !dbg !4981

if.then22:                                        ; preds = %do.end20
  br label %out, !dbg !4982

if.end23:                                         ; preds = %do.end20
  %12 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !4983
  %keybit = getelementptr inbounds %struct.input_dev, %struct.input_dev* %12, i32 0, i32 6, !dbg !4984
  %arraydecay = getelementptr inbounds [12 x i64], [12 x i64]* %keybit, i64 0, i64 0, !dbg !4983
  call void @__clear_bit(i64 0, i64* %arraydecay) #11, !dbg !4985
  %13 = load i32, i32* %old_keycode, align 4, !dbg !4986
  %cmp24 = icmp ugt i32 %13, 767, !dbg !4988
  br i1 %cmp24, label %if.then26, label %if.else, !dbg !4989

if.then26:                                        ; preds = %if.end23
  %14 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !4990
  %dev27 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %14, i32 0, i32 40, !dbg !4990
  %parent = getelementptr inbounds %struct.device, %struct.device* %dev27, i32 0, i32 1, !dbg !4990
  %15 = load %struct.device*, %struct.device** %parent, align 8, !dbg !4990
  %tobool28 = icmp ne %struct.device* %15, null, !dbg !4990
  br i1 %tobool28, label %cond.true, label %cond.false, !dbg !4990

cond.true:                                        ; preds = %if.then26
  br label %cond.end, !dbg !4990

cond.false:                                       ; preds = %if.then26
  %16 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !4990
  %dev29 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %16, i32 0, i32 40, !dbg !4990
  br label %cond.end, !dbg !4990

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.device* [ %15, %cond.true ], [ %dev29, %cond.false ], !dbg !4990
  %17 = load i32, i32* %old_keycode, align 4, !dbg !4990
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %cond, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.input_set_keycode, i64 0, i64 0), i32 %17) #13, !dbg !4990
  br label %if.end46, !dbg !4992

if.else:                                          ; preds = %if.end23
  %18 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !4993
  %evbit = getelementptr inbounds %struct.input_dev, %struct.input_dev* %18, i32 0, i32 5, !dbg !4995
  %arraydecay30 = getelementptr inbounds [1 x i64], [1 x i64]* %evbit, i64 0, i64 0, !dbg !4993
  %call31 = call zeroext i1 @test_bit(i64 1, i64* %arraydecay30) #11, !dbg !4996
  br i1 %call31, label %land.lhs.true, label %if.end45, !dbg !4997

land.lhs.true:                                    ; preds = %if.else
  %19 = load i32, i32* %old_keycode, align 4, !dbg !4998
  %20 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !4999
  %keybit33 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %20, i32 0, i32 6, !dbg !5000
  %arraydecay34 = getelementptr inbounds [12 x i64], [12 x i64]* %keybit33, i64 0, i64 0, !dbg !4999
  %call35 = call i32 @is_event_supported(i32 %19, i64* %arraydecay34, i32 767) #11, !dbg !5001
  %tobool36 = icmp ne i32 %call35, 0, !dbg !5001
  br i1 %tobool36, label %if.end45, label %land.lhs.true37, !dbg !5002

land.lhs.true37:                                  ; preds = %land.lhs.true
  %21 = load i32, i32* %old_keycode, align 4, !dbg !5003
  %conv38 = zext i32 %21 to i64, !dbg !5003
  %22 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !5004
  %key = getelementptr inbounds %struct.input_dev, %struct.input_dev* %22, i32 0, i32 27, !dbg !5005
  %arraydecay39 = getelementptr inbounds [12 x i64], [12 x i64]* %key, i64 0, i64 0, !dbg !5004
  %call40 = call zeroext i1 @__test_and_clear_bit(i64 %conv38, i64* %arraydecay39) #11, !dbg !5006
  br i1 %call40, label %if.then42, label %if.end45, !dbg !5007

if.then42:                                        ; preds = %land.lhs.true37
  call void @llvm.dbg.declare(metadata [2 x %struct.input_value]* %vals, metadata !5008, metadata !DIExpression()), !dbg !5011
  %arrayinit.begin = getelementptr inbounds [2 x %struct.input_value], [2 x %struct.input_value]* %vals, i64 0, i64 0, !dbg !5012
  %type = getelementptr inbounds %struct.input_value, %struct.input_value* %arrayinit.begin, i32 0, i32 0, !dbg !5013
  store i16 1, i16* %type, align 8, !dbg !5013
  %code = getelementptr inbounds %struct.input_value, %struct.input_value* %arrayinit.begin, i32 0, i32 1, !dbg !5013
  %23 = load i32, i32* %old_keycode, align 4, !dbg !5014
  %conv43 = trunc i32 %23 to i16, !dbg !5014
  store i16 %conv43, i16* %code, align 2, !dbg !5013
  %value = getelementptr inbounds %struct.input_value, %struct.input_value* %arrayinit.begin, i32 0, i32 2, !dbg !5013
  store i32 0, i32* %value, align 4, !dbg !5013
  %arrayinit.element = getelementptr inbounds %struct.input_value, %struct.input_value* %arrayinit.begin, i64 1, !dbg !5012
  %24 = bitcast %struct.input_value* %arrayinit.element to i8*, !dbg !5015
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %24, i8* align 4 bitcast (%struct.input_value* @input_value_sync to i8*), i64 8, i1 false), !dbg !5015
  %25 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !5016
  %arraydecay44 = getelementptr inbounds [2 x %struct.input_value], [2 x %struct.input_value]* %vals, i64 0, i64 0, !dbg !5017
  call void @input_pass_values(%struct.input_dev* %25, %struct.input_value* %arraydecay44, i32 2) #11, !dbg !5018
  br label %if.end45, !dbg !5019

if.end45:                                         ; preds = %if.then42, %land.lhs.true37, %land.lhs.true, %if.else
  br label %if.end46

if.end46:                                         ; preds = %if.end45, %cond.end
  br label %out, !dbg !5020

out:                                              ; preds = %if.end46, %if.then22
  call void @llvm.dbg.label(metadata !5021), !dbg !5022
  %26 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !5023
  %event_lock47 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %26, i32 0, i32 36, !dbg !5024
  %27 = load i64, i64* %flags, align 8, !dbg !5025
  store %struct.spinlock* %event_lock47, %struct.spinlock** %lock.addr.i48, align 8
  store i64 %27, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !309, metadata !4110, metadata !DIExpression()) #7, !dbg !5026
  call void @llvm.dbg.declare(metadata !309, metadata !4114, metadata !DIExpression()) #7, !dbg !5026
  store i32 1, i32* %tmp.i, align 4, !dbg !5026
  %28 = load i32, i32* %tmp.i, align 4, !dbg !5026
  call void @llvm.dbg.declare(metadata !309, metadata !4115, metadata !DIExpression()) #7, !dbg !5027
  call void @llvm.dbg.declare(metadata !309, metadata !4121, metadata !DIExpression()) #7, !dbg !5027
  store i32 1, i32* %tmp8.i, align 4, !dbg !5027
  %29 = load i32, i32* %tmp8.i, align 4, !dbg !5027
  %30 = load i64, i64* %flags.addr.i, align 8, !dbg !5028
  call void @arch_local_irq_restore(i64 %30) #12, !dbg !5028
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !5029, !srcloc !4125
  %31 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i48, align 8, !dbg !5030
  %32 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %31, i32 0, i32 0, !dbg !5030
  %rlock.i49 = bitcast %union.anon.0* %32 to %struct.raw_spinlock*, !dbg !5030
  %33 = load i32, i32* %retval1, align 4, !dbg !5031
  store i32 %33, i32* %retval, align 4, !dbg !5032
  br label %return, !dbg !5032

return:                                           ; preds = %out, %if.then
  %34 = load i32, i32* %retval, align 4, !dbg !5033
  ret i32 %34, !dbg !5033
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__clear_bit(i64 %nr, i64* %addr) #0 !dbg !5034 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !5035, metadata !DIExpression()), !dbg !5037
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !5039, metadata !DIExpression()), !dbg !5040
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !4504, metadata !DIExpression()), !dbg !5041
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !4514, metadata !DIExpression()), !dbg !5043
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !5044, metadata !DIExpression()), !dbg !5045
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !5046, metadata !DIExpression()), !dbg !5047
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !5048
  %1 = load i64, i64* %nr.addr, align 8, !dbg !5049
  %div = sdiv i64 %1, 64, !dbg !5049
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !5050
  %2 = bitcast i64* %add.ptr to i8*, !dbg !5048
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !5051
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !5052
  %conv.i = trunc i64 %4 to i32, !dbg !5052
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #12, !dbg !5053
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !5054
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !5054
  call void @kcsan_check_access(i8* %5, i64 %6, i32 1) #12, !dbg !5054
  %7 = load i64, i64* %nr.addr, align 8, !dbg !5055
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !5056
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64*, i64** %addr.addr.i, align 8, !dbg !5057
  %10 = load i64, i64* %nr.addr.i, align 8, !dbg !5058
  call void asm sideeffect " btrq  $1,$0", "*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %9, i64 %10) #7, !dbg !5059, !srcloc !5060
  ret void, !dbg !5061
}

; Function Attrs: cold noredzone
declare dso_local void @_dev_warn(%struct.device*, i8*, ...) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @test_bit(i64 %nr, i64* %addr) #0 !dbg !5062 {
entry:
  %nr.addr.i3 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i3, metadata !5067, metadata !DIExpression()), !dbg !5069
  %addr.addr.i4 = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i4, metadata !5071, metadata !DIExpression()), !dbg !5072
  %oldbit.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %oldbit.i, metadata !5073, metadata !DIExpression()), !dbg !5074
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !5075, metadata !DIExpression()), !dbg !5077
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !5079, metadata !DIExpression()), !dbg !5080
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !5081, metadata !DIExpression()), !dbg !5083
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !5085, metadata !DIExpression()), !dbg !5086
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !5087, metadata !DIExpression()), !dbg !5088
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !5089, metadata !DIExpression()), !dbg !5090
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !5091
  %1 = load i64, i64* %nr.addr, align 8, !dbg !5092
  %div = sdiv i64 %1, 64, !dbg !5092
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !5093
  %2 = bitcast i64* %add.ptr to i8*, !dbg !5091
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !5094
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !5095
  %conv.i = trunc i64 %4 to i32, !dbg !5095
  %call.i = call zeroext i1 @kasan_check_read(i8* %3, i32 %conv.i) #12, !dbg !5096
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !5097
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !5097
  call void @kcsan_check_access(i8* %5, i64 %6, i32 4) #12, !dbg !5097
  %7 = load i64, i64* %nr.addr, align 8, !dbg !5098
  %8 = call i1 @llvm.is.constant.i64(i64 %7), !dbg !5098
  br i1 %8, label %cond.true, label %cond.false, !dbg !5098

cond.true:                                        ; preds = %entry
  %9 = load i64, i64* %nr.addr, align 8, !dbg !5098
  %10 = load i64*, i64** %addr.addr, align 8, !dbg !5098
  store i64 %9, i64* %nr.addr.i, align 8
  store i64* %10, i64** %addr.addr.i, align 8
  %11 = load i64, i64* %nr.addr.i, align 8, !dbg !5099
  %and.i = and i64 %11, 63, !dbg !5100
  %shl.i = shl i64 1, %and.i, !dbg !5101
  %12 = load i64*, i64** %addr.addr.i, align 8, !dbg !5102
  %13 = load i64, i64* %nr.addr.i, align 8, !dbg !5103
  %shr.i = ashr i64 %13, 6, !dbg !5104
  %arrayidx.i = getelementptr i64, i64* %12, i64 %shr.i, !dbg !5102
  %14 = load volatile i64, i64* %arrayidx.i, align 8, !dbg !5102
  %and1.i = and i64 %shl.i, %14, !dbg !5105
  %cmp.i = icmp ne i64 %and1.i, 0, !dbg !5106
  %conv = zext i1 %cmp.i to i32, !dbg !5098
  br label %cond.end, !dbg !5098

cond.false:                                       ; preds = %entry
  %15 = load i64, i64* %nr.addr, align 8, !dbg !5098
  %16 = load i64*, i64** %addr.addr, align 8, !dbg !5098
  store i64 %15, i64* %nr.addr.i3, align 8
  store i64* %16, i64** %addr.addr.i4, align 8
  %17 = load i64*, i64** %addr.addr.i4, align 8, !dbg !5107
  %18 = load i64, i64* %nr.addr.i3, align 8, !dbg !5108
  %19 = call i8 asm sideeffect " btq  $2,$1\0A\09/* output condition code c*/\0A", "={@ccc},*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %17, i64 %18) #7, !dbg !5109, !srcloc !5110
  store i8 %19, i8* %oldbit.i, align 1, !dbg !5109
  %20 = load i8, i8* %oldbit.i, align 1, !dbg !5111
  %tobool.i = trunc i8 %20 to i1, !dbg !5111
  %conv2 = zext i1 %tobool.i to i32, !dbg !5098
  br label %cond.end, !dbg !5098

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv, %cond.true ], [ %conv2, %cond.false ], !dbg !5098
  %tobool = icmp ne i32 %cond, 0, !dbg !5098
  ret i1 %tobool, !dbg !5112
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__test_and_clear_bit(i64 %nr, i64* %addr) #0 !dbg !5113 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !5116, metadata !DIExpression()), !dbg !5118
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !5120, metadata !DIExpression()), !dbg !5121
  %oldbit.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %oldbit.i, metadata !5122, metadata !DIExpression()), !dbg !5123
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !5124, metadata !DIExpression()), !dbg !5125
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !5126, metadata !DIExpression()), !dbg !5127
  %0 = load i64, i64* %nr.addr, align 8, !dbg !5128
  %1 = load i64*, i64** %addr.addr, align 8, !dbg !5129
  call void @__instrument_read_write_bitop(i64 %0, i64* %1) #11, !dbg !5130
  %2 = load i64, i64* %nr.addr, align 8, !dbg !5131
  %3 = load i64*, i64** %addr.addr, align 8, !dbg !5132
  store i64 %2, i64* %nr.addr.i, align 8
  store i64* %3, i64** %addr.addr.i, align 8
  %4 = load i64*, i64** %addr.addr.i, align 8, !dbg !5133
  %5 = load i64, i64* %nr.addr.i, align 8, !dbg !5134
  %6 = call i8 asm sideeffect " btrq  $2,$1\0A\09/* output condition code c*/\0A", "={@ccc},*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %4, i64 %5) #7, !dbg !5135, !srcloc !5136
  store i8 %6, i8* %oldbit.i, align 1, !dbg !5135
  %7 = load i8, i8* %oldbit.i, align 1, !dbg !5137
  %tobool.i = trunc i8 %7 to i1, !dbg !5137
  ret i1 %tobool.i, !dbg !5138
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @input_pass_values(%struct.input_dev* %dev, %struct.input_value* %vals, i32 %count) #0 !dbg !5139 {
entry:
  %dev.addr = alloca %struct.input_dev*, align 8
  %vals.addr = alloca %struct.input_value*, align 8
  %count.addr = alloca i32, align 4
  %handle = alloca %struct.input_handle*, align 8
  %v = alloca %struct.input_value*, align 8
  %________p1 = alloca %struct.input_handle*, align 8
  %tmp = alloca %struct.input_handle*, align 8
  %tmp3 = alloca %struct.input_handle*, align 8
  %__mptr = alloca i8*, align 8
  %tmp8 = alloca %struct.list_head*, align 8
  %tmp11 = alloca %struct.input_handle*, align 8
  %__mptr20 = alloca i8*, align 8
  %tmp23 = alloca %struct.list_head*, align 8
  %tmp28 = alloca %struct.input_handle*, align 8
  store %struct.input_dev* %dev, %struct.input_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.input_dev** %dev.addr, metadata !5142, metadata !DIExpression()), !dbg !5143
  store %struct.input_value* %vals, %struct.input_value** %vals.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.input_value** %vals.addr, metadata !5144, metadata !DIExpression()), !dbg !5145
  store i32 %count, i32* %count.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %count.addr, metadata !5146, metadata !DIExpression()), !dbg !5147
  call void @llvm.dbg.declare(metadata %struct.input_handle** %handle, metadata !5148, metadata !DIExpression()), !dbg !5149
  call void @llvm.dbg.declare(metadata %struct.input_value** %v, metadata !5150, metadata !DIExpression()), !dbg !5151
  %0 = load i32, i32* %count.addr, align 4, !dbg !5152
  %tobool = icmp ne i32 %0, 0, !dbg !5152
  br i1 %tobool, label %if.end, label %if.then, !dbg !5154

if.then:                                          ; preds = %entry
  br label %if.end55, !dbg !5155

if.end:                                           ; preds = %entry
  call void @__rcu_read_lock() #12, !dbg !5156
  call void @llvm.dbg.declare(metadata %struct.input_handle** %________p1, metadata !5158, metadata !DIExpression()), !dbg !5160
  br label %do.body, !dbg !5161

do.body:                                          ; preds = %if.end
  br label %do.end, !dbg !5163

do.end:                                           ; preds = %do.body
  %1 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !5161
  %grab = getelementptr inbounds %struct.input_dev, %struct.input_dev* %1, i32 0, i32 35, !dbg !5161
  %2 = load volatile %struct.input_handle*, %struct.input_handle** %grab, align 8, !dbg !5161
  store %struct.input_handle* %2, %struct.input_handle** %tmp, align 8, !dbg !5163
  %3 = load %struct.input_handle*, %struct.input_handle** %tmp, align 8, !dbg !5161
  store %struct.input_handle* %3, %struct.input_handle** %________p1, align 8, !dbg !5160
  br label %do.body1, !dbg !5160

do.body1:                                         ; preds = %do.end
  br label %do.end2, !dbg !5165

do.end2:                                          ; preds = %do.body1
  %4 = load %struct.input_handle*, %struct.input_handle** %________p1, align 8, !dbg !5160
  store %struct.input_handle* %4, %struct.input_handle** %tmp3, align 8, !dbg !5165
  %5 = load %struct.input_handle*, %struct.input_handle** %tmp3, align 8, !dbg !5160
  store %struct.input_handle* %5, %struct.input_handle** %handle, align 8, !dbg !5167
  %6 = load %struct.input_handle*, %struct.input_handle** %handle, align 8, !dbg !5168
  %tobool4 = icmp ne %struct.input_handle* %6, null, !dbg !5168
  br i1 %tobool4, label %if.then5, label %if.else, !dbg !5170

if.then5:                                         ; preds = %do.end2
  %7 = load %struct.input_handle*, %struct.input_handle** %handle, align 8, !dbg !5171
  %8 = load %struct.input_value*, %struct.input_value** %vals.addr, align 8, !dbg !5173
  %9 = load i32, i32* %count.addr, align 4, !dbg !5174
  %call = call i32 @input_to_handler(%struct.input_handle* %7, %struct.input_value* %8, i32 %9) #11, !dbg !5175
  store i32 %call, i32* %count.addr, align 4, !dbg !5176
  br label %if.end30, !dbg !5177

if.else:                                          ; preds = %do.end2
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !5178, metadata !DIExpression()), !dbg !5182
  br label %do.body6, !dbg !5183

do.body6:                                         ; preds = %if.else
  br label %do.end7, !dbg !5185

do.end7:                                          ; preds = %do.body6
  %10 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !5183
  %h_list = getelementptr inbounds %struct.input_dev, %struct.input_dev* %10, i32 0, i32 41, !dbg !5183
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %h_list, i32 0, i32 0, !dbg !5183
  %11 = load volatile %struct.list_head*, %struct.list_head** %next, align 8, !dbg !5183
  store %struct.list_head* %11, %struct.list_head** %tmp8, align 8, !dbg !5185
  %12 = load %struct.list_head*, %struct.list_head** %tmp8, align 8, !dbg !5183
  %13 = bitcast %struct.list_head* %12 to i8*, !dbg !5182
  store i8* %13, i8** %__mptr, align 8, !dbg !5182
  br label %do.body9, !dbg !5182

do.body9:                                         ; preds = %do.end7
  br label %do.end10, !dbg !5187

do.end10:                                         ; preds = %do.body9
  %14 = load i8*, i8** %__mptr, align 8, !dbg !5182
  %add.ptr = getelementptr i8, i8* %14, i64 -40, !dbg !5182
  %15 = bitcast i8* %add.ptr to %struct.input_handle*, !dbg !5182
  store %struct.input_handle* %15, %struct.input_handle** %tmp11, align 8, !dbg !5187
  %16 = load %struct.input_handle*, %struct.input_handle** %tmp11, align 8, !dbg !5182
  store %struct.input_handle* %16, %struct.input_handle** %handle, align 8, !dbg !5189
  br label %for.cond, !dbg !5189

for.cond:                                         ; preds = %do.end27, %do.end10
  %17 = load %struct.input_handle*, %struct.input_handle** %handle, align 8, !dbg !5190
  %d_node = getelementptr inbounds %struct.input_handle, %struct.input_handle* %17, i32 0, i32 5, !dbg !5190
  %18 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !5190
  %h_list12 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %18, i32 0, i32 41, !dbg !5190
  %cmp = icmp ne %struct.list_head* %d_node, %h_list12, !dbg !5190
  br i1 %cmp, label %for.body, label %for.end, !dbg !5189

for.body:                                         ; preds = %for.cond
  %19 = load %struct.input_handle*, %struct.input_handle** %handle, align 8, !dbg !5192
  %open = getelementptr inbounds %struct.input_handle, %struct.input_handle* %19, i32 0, i32 1, !dbg !5194
  %20 = load i32, i32* %open, align 8, !dbg !5194
  %tobool13 = icmp ne i32 %20, 0, !dbg !5192
  br i1 %tobool13, label %if.then14, label %if.end19, !dbg !5195

if.then14:                                        ; preds = %for.body
  %21 = load %struct.input_handle*, %struct.input_handle** %handle, align 8, !dbg !5196
  %22 = load %struct.input_value*, %struct.input_value** %vals.addr, align 8, !dbg !5198
  %23 = load i32, i32* %count.addr, align 4, !dbg !5199
  %call15 = call i32 @input_to_handler(%struct.input_handle* %21, %struct.input_value* %22, i32 %23) #11, !dbg !5200
  store i32 %call15, i32* %count.addr, align 4, !dbg !5201
  %24 = load i32, i32* %count.addr, align 4, !dbg !5202
  %tobool16 = icmp ne i32 %24, 0, !dbg !5202
  br i1 %tobool16, label %if.end18, label %if.then17, !dbg !5204

if.then17:                                        ; preds = %if.then14
  br label %for.end, !dbg !5205

if.end18:                                         ; preds = %if.then14
  br label %if.end19, !dbg !5206

if.end19:                                         ; preds = %if.end18, %for.body
  br label %for.inc, !dbg !5194

for.inc:                                          ; preds = %if.end19
  call void @llvm.dbg.declare(metadata i8** %__mptr20, metadata !5207, metadata !DIExpression()), !dbg !5209
  br label %do.body21, !dbg !5210

do.body21:                                        ; preds = %for.inc
  br label %do.end22, !dbg !5212

do.end22:                                         ; preds = %do.body21
  %25 = load %struct.input_handle*, %struct.input_handle** %handle, align 8, !dbg !5210
  %d_node24 = getelementptr inbounds %struct.input_handle, %struct.input_handle* %25, i32 0, i32 5, !dbg !5210
  %next25 = getelementptr inbounds %struct.list_head, %struct.list_head* %d_node24, i32 0, i32 0, !dbg !5210
  %26 = load volatile %struct.list_head*, %struct.list_head** %next25, align 8, !dbg !5210
  store %struct.list_head* %26, %struct.list_head** %tmp23, align 8, !dbg !5212
  %27 = load %struct.list_head*, %struct.list_head** %tmp23, align 8, !dbg !5210
  %28 = bitcast %struct.list_head* %27 to i8*, !dbg !5209
  store i8* %28, i8** %__mptr20, align 8, !dbg !5209
  br label %do.body26, !dbg !5209

do.body26:                                        ; preds = %do.end22
  br label %do.end27, !dbg !5214

do.end27:                                         ; preds = %do.body26
  %29 = load i8*, i8** %__mptr20, align 8, !dbg !5209
  %add.ptr29 = getelementptr i8, i8* %29, i64 -40, !dbg !5209
  %30 = bitcast i8* %add.ptr29 to %struct.input_handle*, !dbg !5209
  store %struct.input_handle* %30, %struct.input_handle** %tmp28, align 8, !dbg !5214
  %31 = load %struct.input_handle*, %struct.input_handle** %tmp28, align 8, !dbg !5209
  store %struct.input_handle* %31, %struct.input_handle** %handle, align 8, !dbg !5190
  br label %for.cond, !dbg !5190, !llvm.loop !5216

for.end:                                          ; preds = %if.then17, %for.cond
  br label %if.end30

if.end30:                                         ; preds = %for.end, %if.then5
  call void @rcu_read_unlock() #11, !dbg !5218
  %32 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !5219
  %evbit = getelementptr inbounds %struct.input_dev, %struct.input_dev* %32, i32 0, i32 5, !dbg !5221
  %arraydecay = getelementptr inbounds [1 x i64], [1 x i64]* %evbit, i64 0, i64 0, !dbg !5219
  %call31 = call zeroext i1 @test_bit(i64 20, i64* %arraydecay) #11, !dbg !5222
  br i1 %call31, label %land.lhs.true, label %if.end55, !dbg !5223

land.lhs.true:                                    ; preds = %if.end30
  %33 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !5224
  %evbit32 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %33, i32 0, i32 5, !dbg !5225
  %arraydecay33 = getelementptr inbounds [1 x i64], [1 x i64]* %evbit32, i64 0, i64 0, !dbg !5224
  %call34 = call zeroext i1 @test_bit(i64 1, i64* %arraydecay33) #11, !dbg !5226
  br i1 %call34, label %if.then35, label %if.end55, !dbg !5227

if.then35:                                        ; preds = %land.lhs.true
  %34 = load %struct.input_value*, %struct.input_value** %vals.addr, align 8, !dbg !5228
  store %struct.input_value* %34, %struct.input_value** %v, align 8, !dbg !5231
  br label %for.cond36, !dbg !5232

for.cond36:                                       ; preds = %for.inc53, %if.then35
  %35 = load %struct.input_value*, %struct.input_value** %v, align 8, !dbg !5233
  %36 = load %struct.input_value*, %struct.input_value** %vals.addr, align 8, !dbg !5235
  %37 = load i32, i32* %count.addr, align 4, !dbg !5236
  %idx.ext = zext i32 %37 to i64, !dbg !5237
  %add.ptr37 = getelementptr %struct.input_value, %struct.input_value* %36, i64 %idx.ext, !dbg !5237
  %cmp38 = icmp ne %struct.input_value* %35, %add.ptr37, !dbg !5238
  br i1 %cmp38, label %for.body39, label %for.end54, !dbg !5239

for.body39:                                       ; preds = %for.cond36
  %38 = load %struct.input_value*, %struct.input_value** %v, align 8, !dbg !5240
  %type = getelementptr inbounds %struct.input_value, %struct.input_value* %38, i32 0, i32 0, !dbg !5243
  %39 = load i16, i16* %type, align 4, !dbg !5243
  %conv = zext i16 %39 to i32, !dbg !5240
  %cmp40 = icmp eq i32 %conv, 1, !dbg !5244
  br i1 %cmp40, label %land.lhs.true42, label %if.end52, !dbg !5245

land.lhs.true42:                                  ; preds = %for.body39
  %40 = load %struct.input_value*, %struct.input_value** %v, align 8, !dbg !5246
  %value = getelementptr inbounds %struct.input_value, %struct.input_value* %40, i32 0, i32 2, !dbg !5247
  %41 = load i32, i32* %value, align 4, !dbg !5247
  %cmp43 = icmp ne i32 %41, 2, !dbg !5248
  br i1 %cmp43, label %if.then45, label %if.end52, !dbg !5249

if.then45:                                        ; preds = %land.lhs.true42
  %42 = load %struct.input_value*, %struct.input_value** %v, align 8, !dbg !5250
  %value46 = getelementptr inbounds %struct.input_value, %struct.input_value* %42, i32 0, i32 2, !dbg !5253
  %43 = load i32, i32* %value46, align 4, !dbg !5253
  %tobool47 = icmp ne i32 %43, 0, !dbg !5250
  br i1 %tobool47, label %if.then48, label %if.else50, !dbg !5254

if.then48:                                        ; preds = %if.then45
  %44 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !5255
  %45 = load %struct.input_value*, %struct.input_value** %v, align 8, !dbg !5256
  %code = getelementptr inbounds %struct.input_value, %struct.input_value* %45, i32 0, i32 1, !dbg !5257
  %46 = load i16, i16* %code, align 2, !dbg !5257
  %conv49 = zext i16 %46 to i32, !dbg !5256
  call void @input_start_autorepeat(%struct.input_dev* %44, i32 %conv49) #11, !dbg !5258
  br label %if.end51, !dbg !5258

if.else50:                                        ; preds = %if.then45
  %47 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !5259
  call void @input_stop_autorepeat(%struct.input_dev* %47) #11, !dbg !5260
  br label %if.end51

if.end51:                                         ; preds = %if.else50, %if.then48
  br label %if.end52, !dbg !5261

if.end52:                                         ; preds = %if.end51, %land.lhs.true42, %for.body39
  br label %for.inc53, !dbg !5262

for.inc53:                                        ; preds = %if.end52
  %48 = load %struct.input_value*, %struct.input_value** %v, align 8, !dbg !5263
  %incdec.ptr = getelementptr %struct.input_value, %struct.input_value* %48, i32 1, !dbg !5263
  store %struct.input_value* %incdec.ptr, %struct.input_value** %v, align 8, !dbg !5263
  br label %for.cond36, !dbg !5264, !llvm.loop !5265

for.end54:                                        ; preds = %for.cond36
  br label %if.end55, !dbg !5267

if.end55:                                         ; preds = %if.then, %for.end54, %land.lhs.true, %if.end30
  ret void, !dbg !5268
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local zeroext i1 @input_match_device_id(%struct.input_dev* %dev, %struct.input_device_id* %id) #0 !dbg !5269 {
entry:
  %retval = alloca i1, align 1
  %dev.addr = alloca %struct.input_dev*, align 8
  %id.addr = alloca %struct.input_device_id*, align 8
  store %struct.input_dev* %dev, %struct.input_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.input_dev** %dev.addr, metadata !5274, metadata !DIExpression()), !dbg !5275
  store %struct.input_device_id* %id, %struct.input_device_id** %id.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.input_device_id** %id.addr, metadata !5276, metadata !DIExpression()), !dbg !5277
  %0 = load %struct.input_device_id*, %struct.input_device_id** %id.addr, align 8, !dbg !5278
  %flags = getelementptr inbounds %struct.input_device_id, %struct.input_device_id* %0, i32 0, i32 0, !dbg !5280
  %1 = load i64, i64* %flags, align 8, !dbg !5280
  %and = and i64 %1, 1, !dbg !5281
  %tobool = icmp ne i64 %and, 0, !dbg !5281
  br i1 %tobool, label %if.then, label %if.end6, !dbg !5282

if.then:                                          ; preds = %entry
  %2 = load %struct.input_device_id*, %struct.input_device_id** %id.addr, align 8, !dbg !5283
  %bustype = getelementptr inbounds %struct.input_device_id, %struct.input_device_id* %2, i32 0, i32 1, !dbg !5285
  %3 = load i16, i16* %bustype, align 8, !dbg !5285
  %conv = zext i16 %3 to i32, !dbg !5283
  %4 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !5286
  %id1 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %4, i32 0, i32 3, !dbg !5287
  %bustype2 = getelementptr inbounds %struct.input_id, %struct.input_id* %id1, i32 0, i32 0, !dbg !5288
  %5 = load i16, i16* %bustype2, align 8, !dbg !5288
  %conv3 = zext i16 %5 to i32, !dbg !5286
  %cmp = icmp ne i32 %conv, %conv3, !dbg !5289
  br i1 %cmp, label %if.then5, label %if.end, !dbg !5290

if.then5:                                         ; preds = %if.then
  store i1 false, i1* %retval, align 1, !dbg !5291
  br label %return, !dbg !5291

if.end:                                           ; preds = %if.then
  br label %if.end6, !dbg !5288

if.end6:                                          ; preds = %if.end, %entry
  %6 = load %struct.input_device_id*, %struct.input_device_id** %id.addr, align 8, !dbg !5292
  %flags7 = getelementptr inbounds %struct.input_device_id, %struct.input_device_id* %6, i32 0, i32 0, !dbg !5294
  %7 = load i64, i64* %flags7, align 8, !dbg !5294
  %and8 = and i64 %7, 2, !dbg !5295
  %tobool9 = icmp ne i64 %and8, 0, !dbg !5295
  br i1 %tobool9, label %if.then10, label %if.end19, !dbg !5296

if.then10:                                        ; preds = %if.end6
  %8 = load %struct.input_device_id*, %struct.input_device_id** %id.addr, align 8, !dbg !5297
  %vendor = getelementptr inbounds %struct.input_device_id, %struct.input_device_id* %8, i32 0, i32 2, !dbg !5299
  %9 = load i16, i16* %vendor, align 2, !dbg !5299
  %conv11 = zext i16 %9 to i32, !dbg !5297
  %10 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !5300
  %id12 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %10, i32 0, i32 3, !dbg !5301
  %vendor13 = getelementptr inbounds %struct.input_id, %struct.input_id* %id12, i32 0, i32 1, !dbg !5302
  %11 = load i16, i16* %vendor13, align 2, !dbg !5302
  %conv14 = zext i16 %11 to i32, !dbg !5300
  %cmp15 = icmp ne i32 %conv11, %conv14, !dbg !5303
  br i1 %cmp15, label %if.then17, label %if.end18, !dbg !5304

if.then17:                                        ; preds = %if.then10
  store i1 false, i1* %retval, align 1, !dbg !5305
  br label %return, !dbg !5305

if.end18:                                         ; preds = %if.then10
  br label %if.end19, !dbg !5302

if.end19:                                         ; preds = %if.end18, %if.end6
  %12 = load %struct.input_device_id*, %struct.input_device_id** %id.addr, align 8, !dbg !5306
  %flags20 = getelementptr inbounds %struct.input_device_id, %struct.input_device_id* %12, i32 0, i32 0, !dbg !5308
  %13 = load i64, i64* %flags20, align 8, !dbg !5308
  %and21 = and i64 %13, 4, !dbg !5309
  %tobool22 = icmp ne i64 %and21, 0, !dbg !5309
  br i1 %tobool22, label %if.then23, label %if.end32, !dbg !5310

if.then23:                                        ; preds = %if.end19
  %14 = load %struct.input_device_id*, %struct.input_device_id** %id.addr, align 8, !dbg !5311
  %product = getelementptr inbounds %struct.input_device_id, %struct.input_device_id* %14, i32 0, i32 3, !dbg !5313
  %15 = load i16, i16* %product, align 4, !dbg !5313
  %conv24 = zext i16 %15 to i32, !dbg !5311
  %16 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !5314
  %id25 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %16, i32 0, i32 3, !dbg !5315
  %product26 = getelementptr inbounds %struct.input_id, %struct.input_id* %id25, i32 0, i32 2, !dbg !5316
  %17 = load i16, i16* %product26, align 4, !dbg !5316
  %conv27 = zext i16 %17 to i32, !dbg !5314
  %cmp28 = icmp ne i32 %conv24, %conv27, !dbg !5317
  br i1 %cmp28, label %if.then30, label %if.end31, !dbg !5318

if.then30:                                        ; preds = %if.then23
  store i1 false, i1* %retval, align 1, !dbg !5319
  br label %return, !dbg !5319

if.end31:                                         ; preds = %if.then23
  br label %if.end32, !dbg !5316

if.end32:                                         ; preds = %if.end31, %if.end19
  %18 = load %struct.input_device_id*, %struct.input_device_id** %id.addr, align 8, !dbg !5320
  %flags33 = getelementptr inbounds %struct.input_device_id, %struct.input_device_id* %18, i32 0, i32 0, !dbg !5322
  %19 = load i64, i64* %flags33, align 8, !dbg !5322
  %and34 = and i64 %19, 8, !dbg !5323
  %tobool35 = icmp ne i64 %and34, 0, !dbg !5323
  br i1 %tobool35, label %if.then36, label %if.end45, !dbg !5324

if.then36:                                        ; preds = %if.end32
  %20 = load %struct.input_device_id*, %struct.input_device_id** %id.addr, align 8, !dbg !5325
  %version = getelementptr inbounds %struct.input_device_id, %struct.input_device_id* %20, i32 0, i32 4, !dbg !5327
  %21 = load i16, i16* %version, align 2, !dbg !5327
  %conv37 = zext i16 %21 to i32, !dbg !5325
  %22 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !5328
  %id38 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %22, i32 0, i32 3, !dbg !5329
  %version39 = getelementptr inbounds %struct.input_id, %struct.input_id* %id38, i32 0, i32 3, !dbg !5330
  %23 = load i16, i16* %version39, align 2, !dbg !5330
  %conv40 = zext i16 %23 to i32, !dbg !5328
  %cmp41 = icmp ne i32 %conv37, %conv40, !dbg !5331
  br i1 %cmp41, label %if.then43, label %if.end44, !dbg !5332

if.then43:                                        ; preds = %if.then36
  store i1 false, i1* %retval, align 1, !dbg !5333
  br label %return, !dbg !5333

if.end44:                                         ; preds = %if.then36
  br label %if.end45, !dbg !5330

if.end45:                                         ; preds = %if.end44, %if.end32
  %24 = load %struct.input_device_id*, %struct.input_device_id** %id.addr, align 8, !dbg !5334
  %evbit = getelementptr inbounds %struct.input_device_id, %struct.input_device_id* %24, i32 0, i32 5, !dbg !5336
  %arraydecay = getelementptr inbounds [1 x i64], [1 x i64]* %evbit, i64 0, i64 0, !dbg !5334
  %25 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !5337
  %evbit46 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %25, i32 0, i32 5, !dbg !5338
  %arraydecay47 = getelementptr inbounds [1 x i64], [1 x i64]* %evbit46, i64 0, i64 0, !dbg !5337
  %call = call i32 @bitmap_subset(i64* %arraydecay, i64* %arraydecay47, i32 31) #11, !dbg !5339
  %tobool48 = icmp ne i32 %call, 0, !dbg !5339
  br i1 %tobool48, label %lor.lhs.false, label %if.then102, !dbg !5340

lor.lhs.false:                                    ; preds = %if.end45
  %26 = load %struct.input_device_id*, %struct.input_device_id** %id.addr, align 8, !dbg !5341
  %keybit = getelementptr inbounds %struct.input_device_id, %struct.input_device_id* %26, i32 0, i32 6, !dbg !5342
  %arraydecay49 = getelementptr inbounds [12 x i64], [12 x i64]* %keybit, i64 0, i64 0, !dbg !5341
  %27 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !5343
  %keybit50 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %27, i32 0, i32 6, !dbg !5344
  %arraydecay51 = getelementptr inbounds [12 x i64], [12 x i64]* %keybit50, i64 0, i64 0, !dbg !5343
  %call52 = call i32 @bitmap_subset(i64* %arraydecay49, i64* %arraydecay51, i32 767) #11, !dbg !5345
  %tobool53 = icmp ne i32 %call52, 0, !dbg !5345
  br i1 %tobool53, label %lor.lhs.false54, label %if.then102, !dbg !5346

lor.lhs.false54:                                  ; preds = %lor.lhs.false
  %28 = load %struct.input_device_id*, %struct.input_device_id** %id.addr, align 8, !dbg !5347
  %relbit = getelementptr inbounds %struct.input_device_id, %struct.input_device_id* %28, i32 0, i32 7, !dbg !5348
  %arraydecay55 = getelementptr inbounds [1 x i64], [1 x i64]* %relbit, i64 0, i64 0, !dbg !5347
  %29 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !5349
  %relbit56 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %29, i32 0, i32 7, !dbg !5350
  %arraydecay57 = getelementptr inbounds [1 x i64], [1 x i64]* %relbit56, i64 0, i64 0, !dbg !5349
  %call58 = call i32 @bitmap_subset(i64* %arraydecay55, i64* %arraydecay57, i32 15) #11, !dbg !5351
  %tobool59 = icmp ne i32 %call58, 0, !dbg !5351
  br i1 %tobool59, label %lor.lhs.false60, label %if.then102, !dbg !5352

lor.lhs.false60:                                  ; preds = %lor.lhs.false54
  %30 = load %struct.input_device_id*, %struct.input_device_id** %id.addr, align 8, !dbg !5353
  %absbit = getelementptr inbounds %struct.input_device_id, %struct.input_device_id* %30, i32 0, i32 8, !dbg !5354
  %arraydecay61 = getelementptr inbounds [1 x i64], [1 x i64]* %absbit, i64 0, i64 0, !dbg !5353
  %31 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !5355
  %absbit62 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %31, i32 0, i32 8, !dbg !5356
  %arraydecay63 = getelementptr inbounds [1 x i64], [1 x i64]* %absbit62, i64 0, i64 0, !dbg !5355
  %call64 = call i32 @bitmap_subset(i64* %arraydecay61, i64* %arraydecay63, i32 63) #11, !dbg !5357
  %tobool65 = icmp ne i32 %call64, 0, !dbg !5357
  br i1 %tobool65, label %lor.lhs.false66, label %if.then102, !dbg !5358

lor.lhs.false66:                                  ; preds = %lor.lhs.false60
  %32 = load %struct.input_device_id*, %struct.input_device_id** %id.addr, align 8, !dbg !5359
  %mscbit = getelementptr inbounds %struct.input_device_id, %struct.input_device_id* %32, i32 0, i32 9, !dbg !5360
  %arraydecay67 = getelementptr inbounds [1 x i64], [1 x i64]* %mscbit, i64 0, i64 0, !dbg !5359
  %33 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !5361
  %mscbit68 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %33, i32 0, i32 9, !dbg !5362
  %arraydecay69 = getelementptr inbounds [1 x i64], [1 x i64]* %mscbit68, i64 0, i64 0, !dbg !5361
  %call70 = call i32 @bitmap_subset(i64* %arraydecay67, i64* %arraydecay69, i32 7) #11, !dbg !5363
  %tobool71 = icmp ne i32 %call70, 0, !dbg !5363
  br i1 %tobool71, label %lor.lhs.false72, label %if.then102, !dbg !5364

lor.lhs.false72:                                  ; preds = %lor.lhs.false66
  %34 = load %struct.input_device_id*, %struct.input_device_id** %id.addr, align 8, !dbg !5365
  %ledbit = getelementptr inbounds %struct.input_device_id, %struct.input_device_id* %34, i32 0, i32 10, !dbg !5366
  %arraydecay73 = getelementptr inbounds [1 x i64], [1 x i64]* %ledbit, i64 0, i64 0, !dbg !5365
  %35 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !5367
  %ledbit74 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %35, i32 0, i32 10, !dbg !5368
  %arraydecay75 = getelementptr inbounds [1 x i64], [1 x i64]* %ledbit74, i64 0, i64 0, !dbg !5367
  %call76 = call i32 @bitmap_subset(i64* %arraydecay73, i64* %arraydecay75, i32 15) #11, !dbg !5369
  %tobool77 = icmp ne i32 %call76, 0, !dbg !5369
  br i1 %tobool77, label %lor.lhs.false78, label %if.then102, !dbg !5370

lor.lhs.false78:                                  ; preds = %lor.lhs.false72
  %36 = load %struct.input_device_id*, %struct.input_device_id** %id.addr, align 8, !dbg !5371
  %sndbit = getelementptr inbounds %struct.input_device_id, %struct.input_device_id* %36, i32 0, i32 11, !dbg !5372
  %arraydecay79 = getelementptr inbounds [1 x i64], [1 x i64]* %sndbit, i64 0, i64 0, !dbg !5371
  %37 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !5373
  %sndbit80 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %37, i32 0, i32 11, !dbg !5374
  %arraydecay81 = getelementptr inbounds [1 x i64], [1 x i64]* %sndbit80, i64 0, i64 0, !dbg !5373
  %call82 = call i32 @bitmap_subset(i64* %arraydecay79, i64* %arraydecay81, i32 7) #11, !dbg !5375
  %tobool83 = icmp ne i32 %call82, 0, !dbg !5375
  br i1 %tobool83, label %lor.lhs.false84, label %if.then102, !dbg !5376

lor.lhs.false84:                                  ; preds = %lor.lhs.false78
  %38 = load %struct.input_device_id*, %struct.input_device_id** %id.addr, align 8, !dbg !5377
  %ffbit = getelementptr inbounds %struct.input_device_id, %struct.input_device_id* %38, i32 0, i32 12, !dbg !5378
  %arraydecay85 = getelementptr inbounds [2 x i64], [2 x i64]* %ffbit, i64 0, i64 0, !dbg !5377
  %39 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !5379
  %ffbit86 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %39, i32 0, i32 12, !dbg !5380
  %arraydecay87 = getelementptr inbounds [2 x i64], [2 x i64]* %ffbit86, i64 0, i64 0, !dbg !5379
  %call88 = call i32 @bitmap_subset(i64* %arraydecay85, i64* %arraydecay87, i32 127) #11, !dbg !5381
  %tobool89 = icmp ne i32 %call88, 0, !dbg !5381
  br i1 %tobool89, label %lor.lhs.false90, label %if.then102, !dbg !5382

lor.lhs.false90:                                  ; preds = %lor.lhs.false84
  %40 = load %struct.input_device_id*, %struct.input_device_id** %id.addr, align 8, !dbg !5383
  %swbit = getelementptr inbounds %struct.input_device_id, %struct.input_device_id* %40, i32 0, i32 13, !dbg !5384
  %arraydecay91 = getelementptr inbounds [1 x i64], [1 x i64]* %swbit, i64 0, i64 0, !dbg !5383
  %41 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !5385
  %swbit92 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %41, i32 0, i32 13, !dbg !5386
  %arraydecay93 = getelementptr inbounds [1 x i64], [1 x i64]* %swbit92, i64 0, i64 0, !dbg !5385
  %call94 = call i32 @bitmap_subset(i64* %arraydecay91, i64* %arraydecay93, i32 16) #11, !dbg !5387
  %tobool95 = icmp ne i32 %call94, 0, !dbg !5387
  br i1 %tobool95, label %lor.lhs.false96, label %if.then102, !dbg !5388

lor.lhs.false96:                                  ; preds = %lor.lhs.false90
  %42 = load %struct.input_device_id*, %struct.input_device_id** %id.addr, align 8, !dbg !5389
  %propbit = getelementptr inbounds %struct.input_device_id, %struct.input_device_id* %42, i32 0, i32 14, !dbg !5390
  %arraydecay97 = getelementptr inbounds [1 x i64], [1 x i64]* %propbit, i64 0, i64 0, !dbg !5389
  %43 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !5391
  %propbit98 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %43, i32 0, i32 4, !dbg !5392
  %arraydecay99 = getelementptr inbounds [1 x i64], [1 x i64]* %propbit98, i64 0, i64 0, !dbg !5391
  %call100 = call i32 @bitmap_subset(i64* %arraydecay97, i64* %arraydecay99, i32 31) #11, !dbg !5393
  %tobool101 = icmp ne i32 %call100, 0, !dbg !5393
  br i1 %tobool101, label %if.end103, label %if.then102, !dbg !5394

if.then102:                                       ; preds = %lor.lhs.false96, %lor.lhs.false90, %lor.lhs.false84, %lor.lhs.false78, %lor.lhs.false72, %lor.lhs.false66, %lor.lhs.false60, %lor.lhs.false54, %lor.lhs.false, %if.end45
  store i1 false, i1* %retval, align 1, !dbg !5395
  br label %return, !dbg !5395

if.end103:                                        ; preds = %lor.lhs.false96
  store i1 true, i1* %retval, align 1, !dbg !5397
  br label %return, !dbg !5397

return:                                           ; preds = %if.end103, %if.then102, %if.then43, %if.then30, %if.then17, %if.then5
  %44 = load i1, i1* %retval, align 1, !dbg !5398
  ret i1 %44, !dbg !5398
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @bitmap_subset(i64* %src1, i64* %src2, i32 %nbits) #0 !dbg !5399 {
entry:
  %retval = alloca i32, align 4
  %src1.addr = alloca i64*, align 8
  %src2.addr = alloca i64*, align 8
  %nbits.addr = alloca i32, align 4
  store i64* %src1, i64** %src1.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %src1.addr, metadata !5405, metadata !DIExpression()), !dbg !5406
  store i64* %src2, i64** %src2.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %src2.addr, metadata !5407, metadata !DIExpression()), !dbg !5408
  store i32 %nbits, i32* %nbits.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nbits.addr, metadata !5409, metadata !DIExpression()), !dbg !5410
  %0 = load i32, i32* %nbits.addr, align 4, !dbg !5411
  %1 = call i1 @llvm.is.constant.i32(i32 %0), !dbg !5411
  br i1 %1, label %land.lhs.true, label %if.else, !dbg !5411

land.lhs.true:                                    ; preds = %entry
  %2 = load i32, i32* %nbits.addr, align 4, !dbg !5411
  %cmp = icmp ule i32 %2, 64, !dbg !5411
  br i1 %cmp, label %land.lhs.true1, label %if.else, !dbg !5411

land.lhs.true1:                                   ; preds = %land.lhs.true
  %3 = load i32, i32* %nbits.addr, align 4, !dbg !5411
  %cmp2 = icmp ugt i32 %3, 0, !dbg !5411
  br i1 %cmp2, label %if.then, label %if.else, !dbg !5413

if.then:                                          ; preds = %land.lhs.true1
  %4 = load i64*, i64** %src1.addr, align 8, !dbg !5414
  %5 = load i64, i64* %4, align 8, !dbg !5415
  %6 = load i64*, i64** %src2.addr, align 8, !dbg !5416
  %7 = load i64, i64* %6, align 8, !dbg !5417
  %neg = xor i64 %7, -1, !dbg !5418
  %and = and i64 %5, %neg, !dbg !5419
  %8 = load i32, i32* %nbits.addr, align 4, !dbg !5420
  %sub = sub i32 0, %8, !dbg !5420
  %and3 = and i32 %sub, 63, !dbg !5420
  %sh_prom = zext i32 %and3 to i64, !dbg !5420
  %shr = lshr i64 -1, %sh_prom, !dbg !5420
  %and4 = and i64 %and, %shr, !dbg !5421
  %tobool = icmp ne i64 %and4, 0, !dbg !5422
  %lnot = xor i1 %tobool, true, !dbg !5422
  %lnot.ext = zext i1 %lnot to i32, !dbg !5422
  store i32 %lnot.ext, i32* %retval, align 4, !dbg !5423
  br label %return, !dbg !5423

if.else:                                          ; preds = %land.lhs.true1, %land.lhs.true, %entry
  %9 = load i64*, i64** %src1.addr, align 8, !dbg !5424
  %10 = load i64*, i64** %src2.addr, align 8, !dbg !5425
  %11 = load i32, i32* %nbits.addr, align 4, !dbg !5426
  %call = call i32 @__bitmap_subset(i64* %9, i64* %10, i32 %11) #11, !dbg !5427
  store i32 %call, i32* %retval, align 4, !dbg !5428
  br label %return, !dbg !5428

return:                                           ; preds = %if.else, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !5429
  ret i32 %12, !dbg !5429
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @input_reset_device(%struct.input_dev* %dev) #0 !dbg !5430 {
entry:
  %lock.addr.i21 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i21, metadata !4042, metadata !DIExpression()), !dbg !5431
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !4052, metadata !DIExpression()), !dbg !5433
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !4054, metadata !DIExpression()), !dbg !5434
  %dev.addr = alloca %struct.input_dev*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.input_dev* %dev, %struct.input_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.input_dev** %dev.addr, metadata !5441, metadata !DIExpression()), !dbg !5442
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !5443, metadata !DIExpression()), !dbg !5444
  %0 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !5445
  %mutex = getelementptr inbounds %struct.input_dev, %struct.input_dev* %0, i32 0, i32 37, !dbg !5446
  call void @mutex_lock(%struct.mutex* %mutex) #11, !dbg !5447
  br label %do.body, !dbg !5448

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !5449

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !5450, metadata !DIExpression()), !dbg !5452
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !5453, metadata !DIExpression()), !dbg !5452
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !5452
  %conv = zext i1 %cmp to i32, !dbg !5452
  store i32 1, i32* %tmp, align 4, !dbg !5452
  %1 = load i32, i32* %tmp, align 4, !dbg !5452
  br label %do.body2, !dbg !5454

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !5455

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !5456

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !5458, metadata !DIExpression()), !dbg !5461
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !5462, metadata !DIExpression()), !dbg !5461
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !5461
  %conv8 = zext i1 %cmp7 to i32, !dbg !5461
  store i32 1, i32* %tmp9, align 4, !dbg !5461
  %2 = load i32, i32* %tmp9, align 4, !dbg !5461
  %call = call i64 @arch_local_irq_save() #11, !dbg !5463
  store i64 %call, i64* %flags, align 8, !dbg !5463
  br label %do.end, !dbg !5463

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !5456

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !5455

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !5464, !srcloc !5465
  br label %do.body12, !dbg !5464

do.body12:                                        ; preds = %do.body11
  %3 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !5466
  %event_lock = getelementptr inbounds %struct.input_dev, %struct.input_dev* %3, i32 0, i32 36, !dbg !5466
  store %struct.spinlock* %event_lock, %struct.spinlock** %lock.addr.i, align 8
  %4 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !5467
  %5 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %4, i32 0, i32 0, !dbg !5468
  %rlock.i = bitcast %union.anon.0* %5 to %struct.raw_spinlock*, !dbg !5468
  br label %do.end14, !dbg !5466

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !5464

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !5455

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !5454

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !5449

do.end18:                                         ; preds = %do.end17
  %6 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !5469
  call void @input_dev_toggle(%struct.input_dev* %6, i1 zeroext true) #11, !dbg !5470
  %7 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !5471
  call void @input_dev_release_keys(%struct.input_dev* %7) #11, !dbg !5472
  %8 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !5473
  %event_lock19 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %8, i32 0, i32 36, !dbg !5474
  %9 = load i64, i64* %flags, align 8, !dbg !5475
  store %struct.spinlock* %event_lock19, %struct.spinlock** %lock.addr.i21, align 8
  store i64 %9, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !309, metadata !4110, metadata !DIExpression()) #7, !dbg !5476
  call void @llvm.dbg.declare(metadata !309, metadata !4114, metadata !DIExpression()) #7, !dbg !5476
  store i32 1, i32* %tmp.i, align 4, !dbg !5476
  %10 = load i32, i32* %tmp.i, align 4, !dbg !5476
  call void @llvm.dbg.declare(metadata !309, metadata !4115, metadata !DIExpression()) #7, !dbg !5477
  call void @llvm.dbg.declare(metadata !309, metadata !4121, metadata !DIExpression()) #7, !dbg !5477
  store i32 1, i32* %tmp8.i, align 4, !dbg !5477
  %11 = load i32, i32* %tmp8.i, align 4, !dbg !5477
  %12 = load i64, i64* %flags.addr.i, align 8, !dbg !5478
  call void @arch_local_irq_restore(i64 %12) #12, !dbg !5478
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !5479, !srcloc !4125
  %13 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i21, align 8, !dbg !5480
  %14 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %13, i32 0, i32 0, !dbg !5480
  %rlock.i22 = bitcast %union.anon.0* %14 to %struct.raw_spinlock*, !dbg !5480
  %15 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !5481
  %mutex20 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %15, i32 0, i32 37, !dbg !5482
  call void @mutex_unlock(%struct.mutex* %mutex20) #11, !dbg !5483
  ret void, !dbg !5484
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @input_dev_toggle(%struct.input_dev* %dev, i1 zeroext %activate) #0 !dbg !5485 {
entry:
  %dev.addr = alloca %struct.input_dev*, align 8
  %activate.addr = alloca i8, align 1
  %i = alloca i32, align 4
  %active = alloca i8, align 1
  %i26 = alloca i32, align 4
  %active27 = alloca i8, align 1
  store %struct.input_dev* %dev, %struct.input_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.input_dev** %dev.addr, metadata !5488, metadata !DIExpression()), !dbg !5489
  %frombool = zext i1 %activate to i8
  store i8 %frombool, i8* %activate.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %activate.addr, metadata !5490, metadata !DIExpression()), !dbg !5491
  %0 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !5492
  %event = getelementptr inbounds %struct.input_dev, %struct.input_dev* %0, i32 0, i32 34, !dbg !5494
  %1 = load i32 (%struct.input_dev*, i32, i32, i32)*, i32 (%struct.input_dev*, i32, i32, i32)** %event, align 8, !dbg !5494
  %tobool = icmp ne i32 (%struct.input_dev*, i32, i32, i32)* %1, null, !dbg !5492
  br i1 %tobool, label %if.end, label %if.then, !dbg !5495

if.then:                                          ; preds = %entry
  br label %if.end82, !dbg !5496

if.end:                                           ; preds = %entry
  br label %do.body, !dbg !5497

do.body:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5498, metadata !DIExpression()), !dbg !5500
  call void @llvm.dbg.declare(metadata i8* %active, metadata !5501, metadata !DIExpression()), !dbg !5500
  %2 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !5502
  %evbit = getelementptr inbounds %struct.input_dev, %struct.input_dev* %2, i32 0, i32 5, !dbg !5502
  %arraydecay = getelementptr inbounds [1 x i64], [1 x i64]* %evbit, i64 0, i64 0, !dbg !5502
  %call = call zeroext i1 @test_bit(i64 17, i64* %arraydecay) #11, !dbg !5502
  br i1 %call, label %if.end2, label %if.then1, !dbg !5500

if.then1:                                         ; preds = %do.body
  br label %do.end, !dbg !5502

if.end2:                                          ; preds = %do.body
  %3 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !5504
  %ledbit = getelementptr inbounds %struct.input_dev, %struct.input_dev* %3, i32 0, i32 10, !dbg !5504
  %arraydecay3 = getelementptr inbounds [1 x i64], [1 x i64]* %ledbit, i64 0, i64 0, !dbg !5504
  %call4 = call i64 @find_first_bit(i64* %arraydecay3, i64 16) #11, !dbg !5504
  %conv = trunc i64 %call4 to i32, !dbg !5504
  store i32 %conv, i32* %i, align 4, !dbg !5504
  br label %for.cond, !dbg !5504

for.cond:                                         ; preds = %for.inc, %if.end2
  %4 = load i32, i32* %i, align 4, !dbg !5506
  %cmp = icmp slt i32 %4, 16, !dbg !5506
  br i1 %cmp, label %for.body, label %for.end, !dbg !5504

for.body:                                         ; preds = %for.cond
  %5 = load i32, i32* %i, align 4, !dbg !5508
  %conv6 = sext i32 %5 to i64, !dbg !5508
  %6 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !5508
  %led = getelementptr inbounds %struct.input_dev, %struct.input_dev* %6, i32 0, i32 28, !dbg !5508
  %arraydecay7 = getelementptr inbounds [1 x i64], [1 x i64]* %led, i64 0, i64 0, !dbg !5508
  %call8 = call zeroext i1 @test_bit(i64 %conv6, i64* %arraydecay7) #11, !dbg !5508
  %frombool9 = zext i1 %call8 to i8, !dbg !5508
  store i8 %frombool9, i8* %active, align 1, !dbg !5508
  %7 = load i8, i8* %active, align 1, !dbg !5510
  %tobool10 = trunc i8 %7 to i1, !dbg !5510
  br i1 %tobool10, label %if.end13, label %land.lhs.true, !dbg !5510

land.lhs.true:                                    ; preds = %for.body
  %8 = load i8, i8* %activate.addr, align 1, !dbg !5510
  %tobool11 = trunc i8 %8 to i1, !dbg !5510
  br i1 %tobool11, label %if.end13, label %if.then12, !dbg !5508

if.then12:                                        ; preds = %land.lhs.true
  br label %for.inc, !dbg !5510

if.end13:                                         ; preds = %land.lhs.true, %for.body
  %9 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !5508
  %event14 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %9, i32 0, i32 34, !dbg !5508
  %10 = load i32 (%struct.input_dev*, i32, i32, i32)*, i32 (%struct.input_dev*, i32, i32, i32)** %event14, align 8, !dbg !5508
  %11 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !5508
  %12 = load i32, i32* %i, align 4, !dbg !5508
  %13 = load i8, i8* %activate.addr, align 1, !dbg !5508
  %tobool15 = trunc i8 %13 to i1, !dbg !5508
  br i1 %tobool15, label %cond.true, label %cond.false, !dbg !5508

cond.true:                                        ; preds = %if.end13
  %14 = load i8, i8* %active, align 1, !dbg !5508
  %tobool17 = trunc i8 %14 to i1, !dbg !5508
  %conv18 = zext i1 %tobool17 to i32, !dbg !5508
  br label %cond.end, !dbg !5508

cond.false:                                       ; preds = %if.end13
  br label %cond.end, !dbg !5508

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv18, %cond.true ], [ 0, %cond.false ], !dbg !5508
  %call19 = call i32 %10(%struct.input_dev* %11, i32 17, i32 %12, i32 %cond) #11, !dbg !5508
  br label %for.inc, !dbg !5508

for.inc:                                          ; preds = %cond.end, %if.then12
  %15 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !5506
  %ledbit20 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %15, i32 0, i32 10, !dbg !5506
  %arraydecay21 = getelementptr inbounds [1 x i64], [1 x i64]* %ledbit20, i64 0, i64 0, !dbg !5506
  %16 = load i32, i32* %i, align 4, !dbg !5506
  %add = add i32 %16, 1, !dbg !5506
  %conv22 = sext i32 %add to i64, !dbg !5506
  %call23 = call i64 @find_next_bit(i64* %arraydecay21, i64 16, i64 %conv22) #11, !dbg !5506
  %conv24 = trunc i64 %call23 to i32, !dbg !5506
  store i32 %conv24, i32* %i, align 4, !dbg !5506
  br label %for.cond, !dbg !5506, !llvm.loop !5512

for.end:                                          ; preds = %for.cond
  br label %do.end, !dbg !5500

do.end:                                           ; preds = %for.end, %if.then1
  br label %do.body25, !dbg !5513

do.body25:                                        ; preds = %do.end
  call void @llvm.dbg.declare(metadata i32* %i26, metadata !5514, metadata !DIExpression()), !dbg !5516
  call void @llvm.dbg.declare(metadata i8* %active27, metadata !5517, metadata !DIExpression()), !dbg !5516
  %17 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !5518
  %evbit28 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %17, i32 0, i32 5, !dbg !5518
  %arraydecay29 = getelementptr inbounds [1 x i64], [1 x i64]* %evbit28, i64 0, i64 0, !dbg !5518
  %call30 = call zeroext i1 @test_bit(i64 18, i64* %arraydecay29) #11, !dbg !5518
  br i1 %call30, label %if.end32, label %if.then31, !dbg !5516

if.then31:                                        ; preds = %do.body25
  br label %do.end67, !dbg !5518

if.end32:                                         ; preds = %do.body25
  %18 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !5520
  %sndbit = getelementptr inbounds %struct.input_dev, %struct.input_dev* %18, i32 0, i32 11, !dbg !5520
  %arraydecay33 = getelementptr inbounds [1 x i64], [1 x i64]* %sndbit, i64 0, i64 0, !dbg !5520
  %call34 = call i64 @find_first_bit(i64* %arraydecay33, i64 8) #11, !dbg !5520
  %conv35 = trunc i64 %call34 to i32, !dbg !5520
  store i32 %conv35, i32* %i26, align 4, !dbg !5520
  br label %for.cond36, !dbg !5520

for.cond36:                                       ; preds = %for.inc59, %if.end32
  %19 = load i32, i32* %i26, align 4, !dbg !5522
  %cmp37 = icmp slt i32 %19, 8, !dbg !5522
  br i1 %cmp37, label %for.body39, label %for.end66, !dbg !5520

for.body39:                                       ; preds = %for.cond36
  %20 = load i32, i32* %i26, align 4, !dbg !5524
  %conv40 = sext i32 %20 to i64, !dbg !5524
  %21 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !5524
  %snd = getelementptr inbounds %struct.input_dev, %struct.input_dev* %21, i32 0, i32 29, !dbg !5524
  %arraydecay41 = getelementptr inbounds [1 x i64], [1 x i64]* %snd, i64 0, i64 0, !dbg !5524
  %call42 = call zeroext i1 @test_bit(i64 %conv40, i64* %arraydecay41) #11, !dbg !5524
  %frombool43 = zext i1 %call42 to i8, !dbg !5524
  store i8 %frombool43, i8* %active27, align 1, !dbg !5524
  %22 = load i8, i8* %active27, align 1, !dbg !5526
  %tobool44 = trunc i8 %22 to i1, !dbg !5526
  br i1 %tobool44, label %if.end48, label %land.lhs.true45, !dbg !5526

land.lhs.true45:                                  ; preds = %for.body39
  %23 = load i8, i8* %activate.addr, align 1, !dbg !5526
  %tobool46 = trunc i8 %23 to i1, !dbg !5526
  br i1 %tobool46, label %if.end48, label %if.then47, !dbg !5524

if.then47:                                        ; preds = %land.lhs.true45
  br label %for.inc59, !dbg !5526

if.end48:                                         ; preds = %land.lhs.true45, %for.body39
  %24 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !5524
  %event49 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %24, i32 0, i32 34, !dbg !5524
  %25 = load i32 (%struct.input_dev*, i32, i32, i32)*, i32 (%struct.input_dev*, i32, i32, i32)** %event49, align 8, !dbg !5524
  %26 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !5524
  %27 = load i32, i32* %i26, align 4, !dbg !5524
  %28 = load i8, i8* %activate.addr, align 1, !dbg !5524
  %tobool50 = trunc i8 %28 to i1, !dbg !5524
  br i1 %tobool50, label %cond.true52, label %cond.false55, !dbg !5524

cond.true52:                                      ; preds = %if.end48
  %29 = load i8, i8* %active27, align 1, !dbg !5524
  %tobool53 = trunc i8 %29 to i1, !dbg !5524
  %conv54 = zext i1 %tobool53 to i32, !dbg !5524
  br label %cond.end56, !dbg !5524

cond.false55:                                     ; preds = %if.end48
  br label %cond.end56, !dbg !5524

cond.end56:                                       ; preds = %cond.false55, %cond.true52
  %cond57 = phi i32 [ %conv54, %cond.true52 ], [ 0, %cond.false55 ], !dbg !5524
  %call58 = call i32 %25(%struct.input_dev* %26, i32 18, i32 %27, i32 %cond57) #11, !dbg !5524
  br label %for.inc59, !dbg !5524

for.inc59:                                        ; preds = %cond.end56, %if.then47
  %30 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !5522
  %sndbit60 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %30, i32 0, i32 11, !dbg !5522
  %arraydecay61 = getelementptr inbounds [1 x i64], [1 x i64]* %sndbit60, i64 0, i64 0, !dbg !5522
  %31 = load i32, i32* %i26, align 4, !dbg !5522
  %add62 = add i32 %31, 1, !dbg !5522
  %conv63 = sext i32 %add62 to i64, !dbg !5522
  %call64 = call i64 @find_next_bit(i64* %arraydecay61, i64 8, i64 %conv63) #11, !dbg !5522
  %conv65 = trunc i64 %call64 to i32, !dbg !5522
  store i32 %conv65, i32* %i26, align 4, !dbg !5522
  br label %for.cond36, !dbg !5522, !llvm.loop !5528

for.end66:                                        ; preds = %for.cond36
  br label %do.end67, !dbg !5516

do.end67:                                         ; preds = %for.end66, %if.then31
  %32 = load i8, i8* %activate.addr, align 1, !dbg !5529
  %tobool68 = trunc i8 %32 to i1, !dbg !5529
  br i1 %tobool68, label %land.lhs.true70, label %if.end82, !dbg !5531

land.lhs.true70:                                  ; preds = %do.end67
  %33 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !5532
  %evbit71 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %33, i32 0, i32 5, !dbg !5533
  %arraydecay72 = getelementptr inbounds [1 x i64], [1 x i64]* %evbit71, i64 0, i64 0, !dbg !5532
  %call73 = call zeroext i1 @test_bit(i64 20, i64* %arraydecay72) #11, !dbg !5534
  br i1 %call73, label %if.then75, label %if.end82, !dbg !5535

if.then75:                                        ; preds = %land.lhs.true70
  %34 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !5536
  %event76 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %34, i32 0, i32 34, !dbg !5538
  %35 = load i32 (%struct.input_dev*, i32, i32, i32)*, i32 (%struct.input_dev*, i32, i32, i32)** %event76, align 8, !dbg !5538
  %36 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !5539
  %37 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !5540
  %rep = getelementptr inbounds %struct.input_dev, %struct.input_dev* %37, i32 0, i32 24, !dbg !5541
  %arrayidx = getelementptr [2 x i32], [2 x i32]* %rep, i64 0, i64 1, !dbg !5540
  %38 = load i32, i32* %arrayidx, align 4, !dbg !5540
  %call77 = call i32 %35(%struct.input_dev* %36, i32 20, i32 1, i32 %38) #11, !dbg !5536
  %39 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !5542
  %event78 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %39, i32 0, i32 34, !dbg !5543
  %40 = load i32 (%struct.input_dev*, i32, i32, i32)*, i32 (%struct.input_dev*, i32, i32, i32)** %event78, align 8, !dbg !5543
  %41 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !5544
  %42 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !5545
  %rep79 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %42, i32 0, i32 24, !dbg !5546
  %arrayidx80 = getelementptr [2 x i32], [2 x i32]* %rep79, i64 0, i64 0, !dbg !5545
  %43 = load i32, i32* %arrayidx80, align 8, !dbg !5545
  %call81 = call i32 %40(%struct.input_dev* %41, i32 20, i32 0, i32 %43) #11, !dbg !5542
  br label %if.end82, !dbg !5547

if.end82:                                         ; preds = %if.then, %if.then75, %land.lhs.true70, %do.end67
  ret void, !dbg !5548
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @input_dev_release_keys(%struct.input_dev* %dev) #0 !dbg !5549 {
entry:
  %dev.addr = alloca %struct.input_dev*, align 8
  %need_sync = alloca i8, align 1
  %code = alloca i32, align 4
  store %struct.input_dev* %dev, %struct.input_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.input_dev** %dev.addr, metadata !5550, metadata !DIExpression()), !dbg !5551
  call void @llvm.dbg.declare(metadata i8* %need_sync, metadata !5552, metadata !DIExpression()), !dbg !5553
  store i8 0, i8* %need_sync, align 1, !dbg !5553
  call void @llvm.dbg.declare(metadata i32* %code, metadata !5554, metadata !DIExpression()), !dbg !5555
  %0 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !5556
  %evbit = getelementptr inbounds %struct.input_dev, %struct.input_dev* %0, i32 0, i32 5, !dbg !5558
  %arraydecay = getelementptr inbounds [1 x i64], [1 x i64]* %evbit, i64 0, i64 0, !dbg !5556
  %call = call i32 @is_event_supported(i32 1, i64* %arraydecay, i32 31) #11, !dbg !5559
  %tobool = icmp ne i32 %call, 0, !dbg !5559
  br i1 %tobool, label %if.then, label %if.end13, !dbg !5560

if.then:                                          ; preds = %entry
  %1 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !5561
  %key = getelementptr inbounds %struct.input_dev, %struct.input_dev* %1, i32 0, i32 27, !dbg !5561
  %arraydecay1 = getelementptr inbounds [12 x i64], [12 x i64]* %key, i64 0, i64 0, !dbg !5561
  %call2 = call i64 @find_first_bit(i64* %arraydecay1, i64 768) #11, !dbg !5561
  %conv = trunc i64 %call2 to i32, !dbg !5561
  store i32 %conv, i32* %code, align 4, !dbg !5561
  br label %for.cond, !dbg !5561

for.cond:                                         ; preds = %for.inc, %if.then
  %2 = load i32, i32* %code, align 4, !dbg !5564
  %cmp = icmp slt i32 %2, 768, !dbg !5564
  br i1 %cmp, label %for.body, label %for.end, !dbg !5561

for.body:                                         ; preds = %for.cond
  %3 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !5566
  %4 = load i32, i32* %code, align 4, !dbg !5568
  call void @input_pass_event(%struct.input_dev* %3, i32 1, i32 %4, i32 0) #11, !dbg !5569
  store i8 1, i8* %need_sync, align 1, !dbg !5570
  br label %for.inc, !dbg !5571

for.inc:                                          ; preds = %for.body
  %5 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !5564
  %key4 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %5, i32 0, i32 27, !dbg !5564
  %arraydecay5 = getelementptr inbounds [12 x i64], [12 x i64]* %key4, i64 0, i64 0, !dbg !5564
  %6 = load i32, i32* %code, align 4, !dbg !5564
  %add = add i32 %6, 1, !dbg !5564
  %conv6 = sext i32 %add to i64, !dbg !5564
  %call7 = call i64 @find_next_bit(i64* %arraydecay5, i64 768, i64 %conv6) #11, !dbg !5564
  %conv8 = trunc i64 %call7 to i32, !dbg !5564
  store i32 %conv8, i32* %code, align 4, !dbg !5564
  br label %for.cond, !dbg !5564, !llvm.loop !5572

for.end:                                          ; preds = %for.cond
  %7 = load i8, i8* %need_sync, align 1, !dbg !5574
  %tobool9 = trunc i8 %7 to i1, !dbg !5574
  br i1 %tobool9, label %if.then10, label %if.end, !dbg !5576

if.then10:                                        ; preds = %for.end
  %8 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !5577
  call void @input_pass_event(%struct.input_dev* %8, i32 0, i32 0, i32 1) #11, !dbg !5578
  br label %if.end, !dbg !5578

if.end:                                           ; preds = %if.then10, %for.end
  %9 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !5579
  %key11 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %9, i32 0, i32 27, !dbg !5580
  %arraydecay12 = getelementptr inbounds [12 x i64], [12 x i64]* %key11, i64 0, i64 0, !dbg !5581
  %10 = bitcast i64* %arraydecay12 to i8*, !dbg !5581
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 96, i1 false), !dbg !5581
  br label %if.end13, !dbg !5582

if.end13:                                         ; preds = %if.end, %entry
  ret void, !dbg !5583
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @input_devnode(%struct.device* %dev, i16* %mode) #0 !dbg !5584 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %mode.addr = alloca i16*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5585, metadata !DIExpression()), !dbg !5586
  store i16* %mode, i16** %mode.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %mode.addr, metadata !5587, metadata !DIExpression()), !dbg !5588
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5589
  %call = call i8* @dev_name(%struct.device* %0) #11, !dbg !5590
  %call1 = call noalias i8* (i32, i8*, ...) @kasprintf(i32 3264, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.12, i64 0, i64 0), i8* %call) #11, !dbg !5591
  ret i8* %call1, !dbg !5592
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.input_dev* @input_allocate_device() #0 !dbg !3895 {
entry:
  %i.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i.i.i, metadata !5593, metadata !DIExpression()), !dbg !5599
  %v.addr.i.i.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i.i.i, metadata !5611, metadata !DIExpression()), !dbg !5612
  %__ret.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret.i.i.i, metadata !5613, metadata !DIExpression()), !dbg !5615
  %tmp.i.i.i = alloca i32, align 4
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !5616, metadata !DIExpression()), !dbg !5617
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !5618, metadata !DIExpression()), !dbg !5620
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !5622, metadata !DIExpression()), !dbg !5623
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !5624, metadata !DIExpression()), !dbg !5625
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !4054, metadata !DIExpression()), !dbg !5626
  %dev = alloca %struct.input_dev*, align 8
  %.compoundliteral = alloca %struct.spinlock, align 1
  call void @llvm.dbg.declare(metadata %struct.input_dev** %dev, metadata !5629, metadata !DIExpression()), !dbg !5630
  %call = call i8* @kzalloc(i64 1304, i32 3264) #11, !dbg !5631
  %0 = bitcast i8* %call to %struct.input_dev*, !dbg !5631
  store %struct.input_dev* %0, %struct.input_dev** %dev, align 8, !dbg !5632
  %1 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !5633
  %tobool = icmp ne %struct.input_dev* %1, null, !dbg !5633
  br i1 %tobool, label %if.then, label %if.end, !dbg !5634

if.then:                                          ; preds = %entry
  %2 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !5635
  %dev1 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %2, i32 0, i32 40, !dbg !5636
  %type = getelementptr inbounds %struct.device, %struct.device* %dev1, i32 0, i32 4, !dbg !5637
  store %struct.device_type* @input_dev_type, %struct.device_type** %type, align 8, !dbg !5638
  %3 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !5639
  %dev2 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %3, i32 0, i32 40, !dbg !5640
  %class = getelementptr inbounds %struct.device, %struct.device* %dev2, i32 0, i32 29, !dbg !5641
  store %struct.class* @input_class, %struct.class** %class, align 8, !dbg !5642
  %4 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !5643
  %dev3 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %4, i32 0, i32 40, !dbg !5644
  call void @device_initialize(%struct.device* %dev3) #11, !dbg !5645
  br label %do.body, !dbg !5646

do.body:                                          ; preds = %if.then
  %5 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !5647
  %mutex = getelementptr inbounds %struct.input_dev, %struct.input_dev* %5, i32 0, i32 37, !dbg !5647
  call void @__mutex_init(%struct.mutex* %mutex, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i64 0, i64 0), %struct.lock_class_key* @input_allocate_device.__key) #11, !dbg !5647
  br label %do.end, !dbg !5647

do.end:                                           ; preds = %do.body
  br label %do.body4, !dbg !5649

do.body4:                                         ; preds = %do.end
  %6 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !5650
  %event_lock = getelementptr inbounds %struct.input_dev, %struct.input_dev* %6, i32 0, i32 36, !dbg !5650
  store %struct.spinlock* %event_lock, %struct.spinlock** %lock.addr.i, align 8
  %7 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !5651
  %8 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %7, i32 0, i32 0, !dbg !5652
  %rlock.i = bitcast %union.anon.0* %8 to %struct.raw_spinlock*, !dbg !5652
  %9 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !5650
  %event_lock6 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %9, i32 0, i32 36, !dbg !5650
  %10 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %.compoundliteral, i32 0, i32 0, !dbg !5650
  %rlock = bitcast %union.anon.0* %10 to %struct.raw_spinlock*, !dbg !5650
  %11 = bitcast %struct.spinlock* %event_lock6 to i8*, !dbg !5650
  %12 = bitcast %struct.spinlock* %.compoundliteral to i8*, !dbg !5650
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 1 %12, i64 0, i1 false), !dbg !5650
  br label %do.end7, !dbg !5650

do.end7:                                          ; preds = %do.body4
  %13 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !5653
  %timer = getelementptr inbounds %struct.input_dev, %struct.input_dev* %13, i32 0, i32 23, !dbg !5653
  call void @init_timer_key(%struct.timer_list* %timer, void (%struct.timer_list*)* null, i32 0, i8* null, %struct.lock_class_key* null) #11, !dbg !5653
  %14 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !5654
  %h_list = getelementptr inbounds %struct.input_dev, %struct.input_dev* %14, i32 0, i32 41, !dbg !5655
  call void @INIT_LIST_HEAD(%struct.list_head* %h_list) #11, !dbg !5656
  %15 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !5657
  %node = getelementptr inbounds %struct.input_dev, %struct.input_dev* %15, i32 0, i32 42, !dbg !5658
  call void @INIT_LIST_HEAD(%struct.list_head* %node) #11, !dbg !5659
  %16 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !5660
  %dev8 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %16, i32 0, i32 40, !dbg !5661
  store %struct.atomic_t* @input_allocate_device.input_no, %struct.atomic_t** %v.addr.i, align 8
  %17 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !5662
  %18 = bitcast %struct.atomic_t* %17 to i8*, !dbg !5662
  store i8* %18, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %19 = load i8*, i8** %v.addr.i.i, align 8, !dbg !5663
  %20 = load i64, i64* %size.addr.i.i, align 8, !dbg !5664
  %conv.i.i = trunc i64 %20 to i32, !dbg !5664
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %19, i32 %conv.i.i) #12, !dbg !5665
  %21 = load i8*, i8** %v.addr.i.i, align 8, !dbg !5666
  %22 = load i64, i64* %size.addr.i.i, align 8, !dbg !5666
  call void @kcsan_check_access(i8* %21, i64 %22, i32 7) #12, !dbg !5666
  %23 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !5667
  store %struct.atomic_t* %23, %struct.atomic_t** %v.addr.i1.i, align 8
  %24 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !5668
  store i32 1, i32* %i.addr.i.i.i, align 4
  store %struct.atomic_t* %24, %struct.atomic_t** %v.addr.i.i.i, align 8
  %25 = load i32, i32* %i.addr.i.i.i, align 4, !dbg !5669
  %26 = load i32, i32* %i.addr.i.i.i, align 4, !dbg !5615
  store i32 %26, i32* %__ret.i.i.i, align 4, !dbg !5615
  %27 = load i32, i32* %__ret.i.i.i, align 4, !dbg !5615
  %28 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i.i.i, align 8, !dbg !5615
  %counter.i.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %28, i32 0, i32 0, !dbg !5615
  %29 = call i32 asm sideeffect "xaddl $0, $1\0A", "=r,=*m,0,*m,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i32* %counter.i.i.i, i32 %27, i32* %counter.i.i.i) #7, !dbg !5615, !srcloc !5670
  store i32 %29, i32* %__ret.i.i.i, align 4, !dbg !5615
  %30 = load i32, i32* %__ret.i.i.i, align 4, !dbg !5615
  store i32 %30, i32* %tmp.i.i.i, align 4, !dbg !5615
  %31 = load i32, i32* %tmp.i.i.i, align 4, !dbg !5615
  %add.i.i.i = add i32 %25, %31, !dbg !5671
  %conv = sext i32 %add.i.i.i to i64, !dbg !5672
  %call10 = call i32 (%struct.device*, i8*, ...) @dev_set_name(%struct.device* %dev8, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i64 0, i64 0), i64 %conv) #11, !dbg !5673
  call void @__module_get(%struct.module* null) #11, !dbg !5674
  br label %if.end, !dbg !5675

if.end:                                           ; preds = %do.end7, %entry
  %32 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !5676
  ret %struct.input_dev* %32, !dbg !5677
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kzalloc(i64 %size, i32 %flags) #0 !dbg !5678 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !5681, metadata !DIExpression()), !dbg !5685
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !5691, metadata !DIExpression()), !dbg !5692
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !5693, metadata !DIExpression()), !dbg !5694
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !5695, metadata !DIExpression()), !dbg !5696
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !5697, metadata !DIExpression()), !dbg !5701
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !5703, metadata !DIExpression()), !dbg !5707
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !5709, metadata !DIExpression()), !dbg !5713
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !5718, metadata !DIExpression()), !dbg !5719
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !5720, metadata !DIExpression()), !dbg !5721
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !5722, metadata !DIExpression()), !dbg !5723
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !5724, metadata !DIExpression()), !dbg !5725
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !5726, metadata !DIExpression()), !dbg !5727
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !5728, metadata !DIExpression()), !dbg !5729
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !5730, metadata !DIExpression()), !dbg !5731
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !5732, metadata !DIExpression()), !dbg !5733
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !5734, metadata !DIExpression()), !dbg !5735
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !5736, metadata !DIExpression()), !dbg !5737
  %0 = load i64, i64* %size.addr, align 8, !dbg !5738
  %1 = load i32, i32* %flags.addr, align 4, !dbg !5739
  %or = or i32 %1, 256, !dbg !5740
  store i64 %0, i64* %size.addr.i, align 8
  store i32 %or, i32* %flags.addr.i, align 4
  %2 = load i64, i64* %size.addr.i, align 8, !dbg !5741
  %3 = call i1 @llvm.is.constant.i64(i64 %2) #7, !dbg !5742
  br i1 %3, label %if.then.i, label %if.end9.i, !dbg !5743

if.then.i:                                        ; preds = %entry
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !5744
  %cmp.i = icmp ugt i64 %4, 8192, !dbg !5745
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !5746

if.then1.i:                                       ; preds = %if.then.i
  %5 = load i64, i64* %size.addr.i, align 8, !dbg !5747
  %6 = load i32, i32* %flags.addr.i, align 4, !dbg !5748
  store i64 %5, i64* %size.addr.i.i, align 8
  store i32 %6, i32* %flags.addr.i.i, align 4
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !5749
  %call.i.i = call i32 @get_order(i64 %7) #14, !dbg !5750
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !5727
  %8 = load i64, i64* %size.addr.i.i, align 8, !dbg !5751
  %9 = load i32, i32* %flags.addr.i.i, align 4, !dbg !5752
  %10 = load i32, i32* %order.i.i, align 4, !dbg !5753
  store i64 %8, i64* %size.addr.i.i.i, align 8
  store i32 %9, i32* %flags.addr.i.i.i, align 4
  store i32 %10, i32* %order.addr.i.i.i, align 4
  %11 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !5754
  %12 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !5755
  %13 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !5756
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %11, i32 %12, i32 %13) #12, !dbg !5757
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !5757
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !5757
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !5757
  call void @llvm.assume(i1 %maskcond.i.i.i) #7, !dbg !5757
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !5758
  br label %kmalloc.exit, !dbg !5758

if.end.i:                                         ; preds = %if.then.i
  %14 = load i64, i64* %size.addr.i, align 8, !dbg !5759
  store i64 %14, i64* %size.addr.i11.i, align 8
  %15 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5760
  %tobool.i.i = icmp ne i64 %15, 0, !dbg !5760
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !5762

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !5763
  br label %kmalloc_index.exit.i, !dbg !5763

if.end.i.i:                                       ; preds = %if.end.i
  %16 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5764
  %cmp.i.i = icmp ule i64 %16, 8, !dbg !5766
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !5767

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !5768
  br label %kmalloc_index.exit.i, !dbg !5768

if.end2.i.i:                                      ; preds = %if.end.i.i
  %17 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5769
  %cmp3.i.i = icmp ugt i64 %17, 64, !dbg !5771
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !5772

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %18 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5773
  %cmp4.i.i = icmp ule i64 %18, 96, !dbg !5774
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !5775

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !5776
  br label %kmalloc_index.exit.i, !dbg !5776

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %19 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5777
  %cmp7.i.i = icmp ugt i64 %19, 128, !dbg !5779
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !5780

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %20 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5781
  %cmp9.i.i = icmp ule i64 %20, 192, !dbg !5782
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !5783

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !5784
  br label %kmalloc_index.exit.i, !dbg !5784

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %21 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5785
  %cmp12.i.i = icmp ule i64 %21, 8, !dbg !5787
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !5788

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !5789
  br label %kmalloc_index.exit.i, !dbg !5789

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %22 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5790
  %cmp15.i.i = icmp ule i64 %22, 16, !dbg !5792
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !5793

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !5794
  br label %kmalloc_index.exit.i, !dbg !5794

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %23 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5795
  %cmp18.i.i = icmp ule i64 %23, 32, !dbg !5797
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !5798

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !5799
  br label %kmalloc_index.exit.i, !dbg !5799

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %24 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5800
  %cmp21.i.i = icmp ule i64 %24, 64, !dbg !5802
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !5803

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !5804
  br label %kmalloc_index.exit.i, !dbg !5804

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %25 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5805
  %cmp24.i.i = icmp ule i64 %25, 128, !dbg !5807
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !5808

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !5809
  br label %kmalloc_index.exit.i, !dbg !5809

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %26 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5810
  %cmp27.i.i = icmp ule i64 %26, 256, !dbg !5812
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !5813

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !5814
  br label %kmalloc_index.exit.i, !dbg !5814

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %27 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5815
  %cmp30.i.i = icmp ule i64 %27, 512, !dbg !5817
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !5818

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !5819
  br label %kmalloc_index.exit.i, !dbg !5819

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %28 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5820
  %cmp33.i.i = icmp ule i64 %28, 1024, !dbg !5822
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !5823

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !5824
  br label %kmalloc_index.exit.i, !dbg !5824

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5825
  %cmp36.i.i = icmp ule i64 %29, 2048, !dbg !5827
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !5828

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !5829
  br label %kmalloc_index.exit.i, !dbg !5829

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5830
  %cmp39.i.i = icmp ule i64 %30, 4096, !dbg !5832
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !5833

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !5834
  br label %kmalloc_index.exit.i, !dbg !5834

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5835
  %cmp42.i.i = icmp ule i64 %31, 8192, !dbg !5837
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !5838

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !5839
  br label %kmalloc_index.exit.i, !dbg !5839

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5840
  %cmp45.i.i = icmp ule i64 %32, 16384, !dbg !5842
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !5843

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !5844
  br label %kmalloc_index.exit.i, !dbg !5844

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5845
  %cmp48.i.i = icmp ule i64 %33, 32768, !dbg !5847
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !5848

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !5849
  br label %kmalloc_index.exit.i, !dbg !5849

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5850
  %cmp51.i.i = icmp ule i64 %34, 65536, !dbg !5852
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !5853

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !5854
  br label %kmalloc_index.exit.i, !dbg !5854

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5855
  %cmp54.i.i = icmp ule i64 %35, 131072, !dbg !5857
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !5858

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !5859
  br label %kmalloc_index.exit.i, !dbg !5859

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5860
  %cmp57.i.i = icmp ule i64 %36, 262144, !dbg !5862
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !5863

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !5864
  br label %kmalloc_index.exit.i, !dbg !5864

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5865
  %cmp60.i.i = icmp ule i64 %37, 524288, !dbg !5867
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !5868

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !5869
  br label %kmalloc_index.exit.i, !dbg !5869

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5870
  %cmp63.i.i = icmp ule i64 %38, 1048576, !dbg !5872
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !5873

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !5874
  br label %kmalloc_index.exit.i, !dbg !5874

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5875
  %cmp66.i.i = icmp ule i64 %39, 2097152, !dbg !5877
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !5878

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !5879
  br label %kmalloc_index.exit.i, !dbg !5879

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5880
  %cmp69.i.i = icmp ule i64 %40, 4194304, !dbg !5882
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !5883

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !5884
  br label %kmalloc_index.exit.i, !dbg !5884

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5885
  %cmp72.i.i = icmp ule i64 %41, 8388608, !dbg !5887
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !5888

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !5889
  br label %kmalloc_index.exit.i, !dbg !5889

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5890
  %cmp75.i.i = icmp ule i64 %42, 16777216, !dbg !5892
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !5893

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !5894
  br label %kmalloc_index.exit.i, !dbg !5894

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5895
  %cmp78.i.i = icmp ule i64 %43, 33554432, !dbg !5897
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !5898

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !5899
  br label %kmalloc_index.exit.i, !dbg !5899

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5900
  %cmp81.i.i = icmp ule i64 %44, 67108864, !dbg !5902
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !5903

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !5904
  br label %kmalloc_index.exit.i, !dbg !5904

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.11, i64 0, i64 0), i32 382, i32 0, i64 12) #7, !dbg !5905, !srcloc !5908
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 203) #7, !dbg !5909, !srcloc !5912
  unreachable, !dbg !5913

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %45 = load i32, i32* %retval.i.i, align 4, !dbg !5914
  store i32 %45, i32* %index.i, align 4, !dbg !5915
  %46 = load i32, i32* %index.i, align 4, !dbg !5916
  %tobool.i = icmp ne i32 %46, 0, !dbg !5916
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !5918

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !5919
  br label %kmalloc.exit, !dbg !5919

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %47 = load i32, i32* %flags.addr.i, align 4, !dbg !5920
  store i32 %47, i32* %flags.addr.i13.i, align 4
  %48 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !5921
  %and.i.i = and i32 %48, 17, !dbg !5921
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !5921
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !5921
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !5921
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !5921
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !5923

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !5924
  br label %kmalloc_type.exit.i, !dbg !5924

if.end.i16.i:                                     ; preds = %if.end4.i
  %49 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !5925
  %and2.i.i = and i32 %49, 1, !dbg !5926
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !5925
  %50 = zext i1 %tobool3.i.i to i64, !dbg !5925
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !5925
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !5927
  br label %kmalloc_type.exit.i, !dbg !5927

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %51 = load i32, i32* %retval.i12.i, align 4, !dbg !5928
  %idxprom.i = zext i32 %51 to i64, !dbg !5929
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !5929
  %52 = load i32, i32* %index.i, align 4, !dbg !5930
  %idxprom6.i = zext i32 %52 to i64, !dbg !5929
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !5929
  %53 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !5929
  %54 = load i32, i32* %flags.addr.i, align 4, !dbg !5931
  %55 = load i64, i64* %size.addr.i, align 8, !dbg !5932
  store %struct.kmem_cache* %53, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %54, i32* %flags.addr.i17.i, align 4
  store i64 %55, i64* %size.addr.i18.i, align 8
  %56 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !5933
  %57 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !5934
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %56, i32 %57) #12, !dbg !5935
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !5935
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !5935
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !5935
  call void @llvm.assume(i1 %maskcond.i.i) #7, !dbg !5935
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !5696
  %58 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !5936
  %59 = load i8*, i8** %ret.i.i, align 8, !dbg !5937
  %60 = load i64, i64* %size.addr.i18.i, align 8, !dbg !5938
  %61 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !5939
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %58, i8* %59, i64 %60, i32 %61) #12, !dbg !5940
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !5941
  %62 = load i8*, i8** %ret.i.i, align 8, !dbg !5942
  store i8* %62, i8** %retval.i, align 8, !dbg !5943
  br label %kmalloc.exit, !dbg !5943

if.end9.i:                                        ; preds = %entry
  %63 = load i64, i64* %size.addr.i, align 8, !dbg !5944
  %64 = load i32, i32* %flags.addr.i, align 4, !dbg !5945
  %call10.i = call noalias i8* @__kmalloc(i64 %63, i32 %64) #12, !dbg !5946
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !5946
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !5946
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !5946
  call void @llvm.assume(i1 %maskcond.i) #7, !dbg !5946
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !5947
  br label %kmalloc.exit, !dbg !5947

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %65 = load i8*, i8** %retval.i, align 8, !dbg !5948
  ret i8* %65, !dbg !5949
}

; Function Attrs: noredzone
declare dso_local void @device_initialize(%struct.device*) #3

; Function Attrs: noredzone
declare dso_local void @__mutex_init(%struct.mutex*, i8*, %struct.lock_class_key*) #3

; Function Attrs: noredzone
declare dso_local void @init_timer_key(%struct.timer_list*, void (%struct.timer_list*)*, i32, i8*, %struct.lock_class_key*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @INIT_LIST_HEAD(%struct.list_head* %list) #0 !dbg !5950 {
entry:
  %list.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %list, %struct.list_head** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %list.addr, metadata !5954, metadata !DIExpression()), !dbg !5955
  br label %do.body, !dbg !5956

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !5957

do.body1:                                         ; preds = %do.body
  br label %do.end, !dbg !5959

do.end:                                           ; preds = %do.body1
  br label %do.body2, !dbg !5957

do.body2:                                         ; preds = %do.end
  %0 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !5961
  %1 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !5961
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 0, !dbg !5961
  store volatile %struct.list_head* %0, %struct.list_head** %next, align 8, !dbg !5961
  br label %do.end3, !dbg !5961

do.end3:                                          ; preds = %do.body2
  br label %do.end4, !dbg !5957

do.end4:                                          ; preds = %do.end3
  %2 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !5963
  %3 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !5964
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 1, !dbg !5965
  store %struct.list_head* %2, %struct.list_head** %prev, align 8, !dbg !5966
  ret void, !dbg !5967
}

; Function Attrs: noredzone
declare dso_local i32 @dev_set_name(%struct.device*, i8*, ...) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__module_get(%struct.module* %module) #0 !dbg !5968 {
entry:
  %module.addr = alloca %struct.module*, align 8
  store %struct.module* %module, %struct.module** %module.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.module** %module.addr, metadata !5972, metadata !DIExpression()), !dbg !5973
  ret void, !dbg !5974
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.input_dev* @devm_input_allocate_device(%struct.device* %dev) #0 !dbg !5975 {
entry:
  %retval = alloca %struct.input_dev*, align 8
  %dev.addr = alloca %struct.device*, align 8
  %input = alloca %struct.input_dev*, align 8
  %devres = alloca %struct.input_devres*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5978, metadata !DIExpression()), !dbg !5979
  call void @llvm.dbg.declare(metadata %struct.input_dev** %input, metadata !5980, metadata !DIExpression()), !dbg !5981
  call void @llvm.dbg.declare(metadata %struct.input_devres** %devres, metadata !5982, metadata !DIExpression()), !dbg !5987
  %call = call i8* @devres_alloc(void (%struct.device*, i8*)* @devm_input_device_release, i64 8, i32 3264) #11, !dbg !5988
  %0 = bitcast i8* %call to %struct.input_devres*, !dbg !5988
  store %struct.input_devres* %0, %struct.input_devres** %devres, align 8, !dbg !5989
  %1 = load %struct.input_devres*, %struct.input_devres** %devres, align 8, !dbg !5990
  %tobool = icmp ne %struct.input_devres* %1, null, !dbg !5990
  br i1 %tobool, label %if.end, label %if.then, !dbg !5992

if.then:                                          ; preds = %entry
  store %struct.input_dev* null, %struct.input_dev** %retval, align 8, !dbg !5993
  br label %return, !dbg !5993

if.end:                                           ; preds = %entry
  %call1 = call %struct.input_dev* @input_allocate_device() #11, !dbg !5994
  store %struct.input_dev* %call1, %struct.input_dev** %input, align 8, !dbg !5995
  %2 = load %struct.input_dev*, %struct.input_dev** %input, align 8, !dbg !5996
  %tobool2 = icmp ne %struct.input_dev* %2, null, !dbg !5996
  br i1 %tobool2, label %if.end4, label %if.then3, !dbg !5998

if.then3:                                         ; preds = %if.end
  %3 = load %struct.input_devres*, %struct.input_devres** %devres, align 8, !dbg !5999
  %4 = bitcast %struct.input_devres* %3 to i8*, !dbg !5999
  call void @devres_free(i8* %4) #11, !dbg !6001
  store %struct.input_dev* null, %struct.input_dev** %retval, align 8, !dbg !6002
  br label %return, !dbg !6002

if.end4:                                          ; preds = %if.end
  %5 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6003
  %6 = load %struct.input_dev*, %struct.input_dev** %input, align 8, !dbg !6004
  %dev5 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %6, i32 0, i32 40, !dbg !6005
  %parent = getelementptr inbounds %struct.device, %struct.device* %dev5, i32 0, i32 1, !dbg !6006
  store %struct.device* %5, %struct.device** %parent, align 8, !dbg !6007
  %7 = load %struct.input_dev*, %struct.input_dev** %input, align 8, !dbg !6008
  %devres_managed = getelementptr inbounds %struct.input_dev, %struct.input_dev* %7, i32 0, i32 46, !dbg !6009
  store i8 1, i8* %devres_managed, align 8, !dbg !6010
  %8 = load %struct.input_dev*, %struct.input_dev** %input, align 8, !dbg !6011
  %9 = load %struct.input_devres*, %struct.input_devres** %devres, align 8, !dbg !6012
  %input6 = getelementptr inbounds %struct.input_devres, %struct.input_devres* %9, i32 0, i32 0, !dbg !6013
  store %struct.input_dev* %8, %struct.input_dev** %input6, align 8, !dbg !6014
  %10 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6015
  %11 = load %struct.input_devres*, %struct.input_devres** %devres, align 8, !dbg !6016
  %12 = bitcast %struct.input_devres* %11 to i8*, !dbg !6016
  call void @devres_add(%struct.device* %10, i8* %12) #11, !dbg !6017
  %13 = load %struct.input_dev*, %struct.input_dev** %input, align 8, !dbg !6018
  store %struct.input_dev* %13, %struct.input_dev** %retval, align 8, !dbg !6019
  br label %return, !dbg !6019

return:                                           ; preds = %if.end4, %if.then3, %if.then
  %14 = load %struct.input_dev*, %struct.input_dev** %retval, align 8, !dbg !6020
  ret %struct.input_dev* %14, !dbg !6020
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @devres_alloc(void (%struct.device*, i8*)* %release, i64 %size, i32 %gfp) #0 !dbg !6021 {
entry:
  %release.addr = alloca void (%struct.device*, i8*)*, align 8
  %size.addr = alloca i64, align 8
  %gfp.addr = alloca i32, align 4
  store void (%struct.device*, i8*)* %release, void (%struct.device*, i8*)** %release.addr, align 8
  call void @llvm.dbg.declare(metadata void (%struct.device*, i8*)** %release.addr, metadata !6028, metadata !DIExpression()), !dbg !6029
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !6030, metadata !DIExpression()), !dbg !6031
  store i32 %gfp, i32* %gfp.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %gfp.addr, metadata !6032, metadata !DIExpression()), !dbg !6033
  %0 = load void (%struct.device*, i8*)*, void (%struct.device*, i8*)** %release.addr, align 8, !dbg !6034
  %1 = load i64, i64* %size.addr, align 8, !dbg !6035
  %2 = load i32, i32* %gfp.addr, align 4, !dbg !6036
  %call = call noalias i8* @devres_alloc_node(void (%struct.device*, i8*)* %0, i64 %1, i32 %2, i32 -1) #11, !dbg !6037
  ret i8* %call, !dbg !6038
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @devm_input_device_release(%struct.device* %dev, i8* %res) #0 !dbg !6039 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %res.addr = alloca i8*, align 8
  %devres = alloca %struct.input_devres*, align 8
  %input = alloca %struct.input_dev*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !6040, metadata !DIExpression()), !dbg !6041
  store i8* %res, i8** %res.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %res.addr, metadata !6042, metadata !DIExpression()), !dbg !6043
  call void @llvm.dbg.declare(metadata %struct.input_devres** %devres, metadata !6044, metadata !DIExpression()), !dbg !6045
  %0 = load i8*, i8** %res.addr, align 8, !dbg !6046
  %1 = bitcast i8* %0 to %struct.input_devres*, !dbg !6046
  store %struct.input_devres* %1, %struct.input_devres** %devres, align 8, !dbg !6045
  call void @llvm.dbg.declare(metadata %struct.input_dev** %input, metadata !6047, metadata !DIExpression()), !dbg !6048
  %2 = load %struct.input_devres*, %struct.input_devres** %devres, align 8, !dbg !6049
  %input1 = getelementptr inbounds %struct.input_devres, %struct.input_devres* %2, i32 0, i32 0, !dbg !6050
  %3 = load %struct.input_dev*, %struct.input_dev** %input1, align 8, !dbg !6050
  store %struct.input_dev* %3, %struct.input_dev** %input, align 8, !dbg !6048
  %4 = load %struct.input_dev*, %struct.input_dev** %input, align 8, !dbg !6051
  call void @input_put_device(%struct.input_dev* %4) #11, !dbg !6052
  ret void, !dbg !6053
}

; Function Attrs: noredzone
declare dso_local void @devres_free(i8*) #3

; Function Attrs: noredzone
declare dso_local void @devres_add(%struct.device*, i8*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @input_free_device(%struct.input_dev* %dev) #0 !dbg !6054 {
entry:
  %dev.addr = alloca %struct.input_dev*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.input_dev* %dev, %struct.input_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.input_dev** %dev.addr, metadata !6055, metadata !DIExpression()), !dbg !6056
  %0 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !6057
  %tobool = icmp ne %struct.input_dev* %0, null, !dbg !6057
  br i1 %tobool, label %if.then, label %if.end26, !dbg !6059

if.then:                                          ; preds = %entry
  %1 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !6060
  %devres_managed = getelementptr inbounds %struct.input_dev, %struct.input_dev* %1, i32 0, i32 46, !dbg !6063
  %2 = load i8, i8* %devres_managed, align 8, !dbg !6063
  %tobool1 = trunc i8 %2 to i1, !dbg !6063
  br i1 %tobool1, label %if.then2, label %if.end25, !dbg !6064

if.then2:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !6065, metadata !DIExpression()), !dbg !6067
  %3 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !6067
  %dev3 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %3, i32 0, i32 40, !dbg !6067
  %parent = getelementptr inbounds %struct.device, %struct.device* %dev3, i32 0, i32 1, !dbg !6067
  %4 = load %struct.device*, %struct.device** %parent, align 8, !dbg !6067
  %5 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !6067
  %6 = bitcast %struct.input_dev* %5 to i8*, !dbg !6067
  %call = call i32 @devres_destroy(%struct.device* %4, void (%struct.device*, i8*)* @devm_input_device_release, i32 (%struct.device*, i8*, i8*)* @devm_input_device_match, i8* %6) #11, !dbg !6067
  %tobool4 = icmp ne i32 %call, 0, !dbg !6067
  %lnot = xor i1 %tobool4, true, !dbg !6067
  %lnot5 = xor i1 %lnot, true, !dbg !6067
  %lnot.ext = zext i1 %lnot5 to i32, !dbg !6067
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !6067
  %7 = load i32, i32* %__ret_warn_on, align 4, !dbg !6068
  %tobool6 = icmp ne i32 %7, 0, !dbg !6068
  %lnot7 = xor i1 %tobool6, true, !dbg !6068
  %lnot9 = xor i1 %lnot7, true, !dbg !6068
  %lnot.ext10 = zext i1 %lnot9 to i32, !dbg !6068
  %conv = sext i32 %lnot.ext10 to i64, !dbg !6068
  %tobool11 = icmp ne i64 %conv, 0, !dbg !6068
  br i1 %tobool11, label %if.then12, label %if.end, !dbg !6067

if.then12:                                        ; preds = %if.then2
  br label %do.body, !dbg !6068

do.body:                                          ; preds = %if.then12
  br label %do.body13, !dbg !6070

do.body13:                                        ; preds = %do.body
  br label %do.end, !dbg !6072

do.end:                                           ; preds = %do.body13
  br label %do.body14, !dbg !6070

do.body14:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.5, i64 0, i64 0), i32 1922, i32 2305, i64 12) #7, !dbg !6074, !srcloc !6076
  br label %do.end15, !dbg !6074

do.end15:                                         ; preds = %do.body14
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 297) #7, !dbg !6077, !srcloc !6079
  br label %do.body16, !dbg !6070

do.body16:                                        ; preds = %do.end15
  br label %do.end17, !dbg !6080

do.end17:                                         ; preds = %do.body16
  br label %do.end18, !dbg !6070

do.end18:                                         ; preds = %do.end17
  br label %if.end, !dbg !6070

if.end:                                           ; preds = %do.end18, %if.then2
  %8 = load i32, i32* %__ret_warn_on, align 4, !dbg !6067
  %tobool19 = icmp ne i32 %8, 0, !dbg !6067
  %lnot20 = xor i1 %tobool19, true, !dbg !6067
  %lnot22 = xor i1 %lnot20, true, !dbg !6067
  %lnot.ext23 = zext i1 %lnot22 to i32, !dbg !6067
  %conv24 = sext i32 %lnot.ext23 to i64, !dbg !6067
  store i64 %conv24, i64* %tmp, align 8, !dbg !6068
  %9 = load i64, i64* %tmp, align 8, !dbg !6067
  br label %if.end25, !dbg !6082

if.end25:                                         ; preds = %if.end, %if.then
  %10 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !6083
  call void @input_put_device(%struct.input_dev* %10) #11, !dbg !6084
  br label %if.end26, !dbg !6085

if.end26:                                         ; preds = %if.end25, %entry
  ret void, !dbg !6086
}

; Function Attrs: noredzone
declare dso_local i32 @devres_destroy(%struct.device*, void (%struct.device*, i8*)*, i32 (%struct.device*, i8*, i8*)*, i8*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @devm_input_device_match(%struct.device* %dev, i8* %res, i8* %data) #0 !dbg !6087 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %res.addr = alloca i8*, align 8
  %data.addr = alloca i8*, align 8
  %devres = alloca %struct.input_devres*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !6090, metadata !DIExpression()), !dbg !6091
  store i8* %res, i8** %res.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %res.addr, metadata !6092, metadata !DIExpression()), !dbg !6093
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !6094, metadata !DIExpression()), !dbg !6095
  call void @llvm.dbg.declare(metadata %struct.input_devres** %devres, metadata !6096, metadata !DIExpression()), !dbg !6097
  %0 = load i8*, i8** %res.addr, align 8, !dbg !6098
  %1 = bitcast i8* %0 to %struct.input_devres*, !dbg !6098
  store %struct.input_devres* %1, %struct.input_devres** %devres, align 8, !dbg !6097
  %2 = load %struct.input_devres*, %struct.input_devres** %devres, align 8, !dbg !6099
  %input = getelementptr inbounds %struct.input_devres, %struct.input_devres* %2, i32 0, i32 0, !dbg !6100
  %3 = load %struct.input_dev*, %struct.input_dev** %input, align 8, !dbg !6100
  %4 = load i8*, i8** %data.addr, align 8, !dbg !6101
  %5 = bitcast i8* %4 to %struct.input_dev*, !dbg !6101
  %cmp = icmp eq %struct.input_dev* %3, %5, !dbg !6102
  %conv = zext i1 %cmp to i32, !dbg !6102
  ret i32 %conv, !dbg !6103
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @input_put_device(%struct.input_dev* %dev) #0 !dbg !6104 {
entry:
  %dev.addr = alloca %struct.input_dev*, align 8
  store %struct.input_dev* %dev, %struct.input_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.input_dev** %dev.addr, metadata !6105, metadata !DIExpression()), !dbg !6106
  %0 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !6107
  %tobool = icmp ne %struct.input_dev* %0, null, !dbg !6107
  br i1 %tobool, label %if.then, label %if.end, !dbg !6109

if.then:                                          ; preds = %entry
  %1 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !6110
  %dev1 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %1, i32 0, i32 40, !dbg !6111
  call void @put_device(%struct.device* %dev1) #11, !dbg !6112
  br label %if.end, !dbg !6112

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !6113
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @input_set_timestamp(%struct.input_dev* %dev, i64 %timestamp) #0 !dbg !6114 {
entry:
  %dev.addr = alloca %struct.input_dev*, align 8
  %timestamp.addr = alloca i64, align 8
  store %struct.input_dev* %dev, %struct.input_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.input_dev** %dev.addr, metadata !6117, metadata !DIExpression()), !dbg !6118
  store i64 %timestamp, i64* %timestamp.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %timestamp.addr, metadata !6119, metadata !DIExpression()), !dbg !6120
  %0 = load i64, i64* %timestamp.addr, align 8, !dbg !6121
  %1 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !6122
  %timestamp1 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %1, i32 0, i32 47, !dbg !6123
  %arrayidx = getelementptr [3 x i64], [3 x i64]* %timestamp1, i64 0, i64 1, !dbg !6122
  store i64 %0, i64* %arrayidx, align 8, !dbg !6124
  %2 = load i64, i64* %timestamp.addr, align 8, !dbg !6125
  %call = call i64 @ktime_mono_to_real(i64 %2) #11, !dbg !6126
  %3 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !6127
  %timestamp2 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %3, i32 0, i32 47, !dbg !6128
  %arrayidx3 = getelementptr [3 x i64], [3 x i64]* %timestamp2, i64 0, i64 0, !dbg !6127
  store i64 %call, i64* %arrayidx3, align 8, !dbg !6129
  %4 = load i64, i64* %timestamp.addr, align 8, !dbg !6130
  %call4 = call i64 @ktime_mono_to_any(i64 %4, i32 1) #11, !dbg !6131
  %5 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !6132
  %timestamp5 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %5, i32 0, i32 47, !dbg !6133
  %arrayidx6 = getelementptr [3 x i64], [3 x i64]* %timestamp5, i64 0, i64 2, !dbg !6132
  store i64 %call4, i64* %arrayidx6, align 8, !dbg !6134
  ret void, !dbg !6135
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @ktime_mono_to_real(i64 %mono) #0 !dbg !6136 {
entry:
  %mono.addr = alloca i64, align 8
  store i64 %mono, i64* %mono.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %mono.addr, metadata !6139, metadata !DIExpression()), !dbg !6140
  %0 = load i64, i64* %mono.addr, align 8, !dbg !6141
  %call = call i64 @ktime_mono_to_any(i64 %0, i32 0) #11, !dbg !6142
  ret i64 %call, !dbg !6143
}

; Function Attrs: noredzone
declare dso_local i64 @ktime_mono_to_any(i64, i32) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i64* @input_get_timestamp(%struct.input_dev* %dev) #0 !dbg !6144 {
entry:
  %dev.addr = alloca %struct.input_dev*, align 8
  %invalid_timestamp = alloca i64, align 8
  store %struct.input_dev* %dev, %struct.input_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.input_dev** %dev.addr, metadata !6148, metadata !DIExpression()), !dbg !6149
  call void @llvm.dbg.declare(metadata i64* %invalid_timestamp, metadata !6150, metadata !DIExpression()), !dbg !6152
  %call = call i64 @ktime_set(i64 0, i64 0) #11, !dbg !6153
  store i64 %call, i64* %invalid_timestamp, align 8, !dbg !6152
  %0 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !6154
  %timestamp = getelementptr inbounds %struct.input_dev, %struct.input_dev* %0, i32 0, i32 47, !dbg !6156
  %arrayidx = getelementptr [3 x i64], [3 x i64]* %timestamp, i64 0, i64 1, !dbg !6154
  %1 = load i64, i64* %arrayidx, align 8, !dbg !6154
  %2 = load i64, i64* %invalid_timestamp, align 8, !dbg !6157
  %call1 = call i32 @ktime_compare(i64 %1, i64 %2) #11, !dbg !6158
  %tobool = icmp ne i32 %call1, 0, !dbg !6158
  br i1 %tobool, label %if.end, label %if.then, !dbg !6159

if.then:                                          ; preds = %entry
  %3 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !6160
  %call2 = call i64 @ktime_get() #11, !dbg !6161
  call void @input_set_timestamp(%struct.input_dev* %3, i64 %call2) #11, !dbg !6162
  br label %if.end, !dbg !6162

if.end:                                           ; preds = %if.then, %entry
  %4 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !6163
  %timestamp3 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %4, i32 0, i32 47, !dbg !6164
  %arraydecay = getelementptr inbounds [3 x i64], [3 x i64]* %timestamp3, i64 0, i64 0, !dbg !6163
  ret i64* %arraydecay, !dbg !6165
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @ktime_set(i64 %secs, i64 %nsecs) #0 !dbg !6166 {
entry:
  %retval = alloca i64, align 8
  %secs.addr = alloca i64, align 8
  %nsecs.addr = alloca i64, align 8
  store i64 %secs, i64* %secs.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %secs.addr, metadata !6170, metadata !DIExpression()), !dbg !6171
  store i64 %nsecs, i64* %nsecs.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nsecs.addr, metadata !6172, metadata !DIExpression()), !dbg !6173
  %0 = load i64, i64* %secs.addr, align 8, !dbg !6174
  %cmp = icmp sge i64 %0, 9223372036, !dbg !6174
  %lnot = xor i1 %cmp, true, !dbg !6174
  %lnot1 = xor i1 %lnot, true, !dbg !6174
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !6174
  %conv = sext i32 %lnot.ext to i64, !dbg !6174
  %tobool = icmp ne i64 %conv, 0, !dbg !6174
  br i1 %tobool, label %if.then, label %if.end, !dbg !6176

if.then:                                          ; preds = %entry
  store i64 9223372036854775807, i64* %retval, align 8, !dbg !6177
  br label %return, !dbg !6177

if.end:                                           ; preds = %entry
  %1 = load i64, i64* %secs.addr, align 8, !dbg !6178
  %mul = mul i64 %1, 1000000000, !dbg !6179
  %2 = load i64, i64* %nsecs.addr, align 8, !dbg !6180
  %add = add i64 %mul, %2, !dbg !6181
  store i64 %add, i64* %retval, align 8, !dbg !6182
  br label %return, !dbg !6182

return:                                           ; preds = %if.end, %if.then
  %3 = load i64, i64* %retval, align 8, !dbg !6183
  ret i64 %3, !dbg !6183
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ktime_compare(i64 %cmp1, i64 %cmp2) #0 !dbg !6184 {
entry:
  %retval = alloca i32, align 4
  %cmp1.addr = alloca i64, align 8
  %cmp2.addr = alloca i64, align 8
  store i64 %cmp1, i64* %cmp1.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %cmp1.addr, metadata !6187, metadata !DIExpression()), !dbg !6188
  store i64 %cmp2, i64* %cmp2.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %cmp2.addr, metadata !6189, metadata !DIExpression()), !dbg !6190
  %0 = load i64, i64* %cmp1.addr, align 8, !dbg !6191
  %1 = load i64, i64* %cmp2.addr, align 8, !dbg !6193
  %cmp = icmp slt i64 %0, %1, !dbg !6194
  br i1 %cmp, label %if.then, label %if.end, !dbg !6195

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !6196
  br label %return, !dbg !6196

if.end:                                           ; preds = %entry
  %2 = load i64, i64* %cmp1.addr, align 8, !dbg !6197
  %3 = load i64, i64* %cmp2.addr, align 8, !dbg !6199
  %cmp3 = icmp sgt i64 %2, %3, !dbg !6200
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !6201

if.then4:                                         ; preds = %if.end
  store i32 1, i32* %retval, align 4, !dbg !6202
  br label %return, !dbg !6202

if.end5:                                          ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !6203
  br label %return, !dbg !6203

return:                                           ; preds = %if.end5, %if.then4, %if.then
  %4 = load i32, i32* %retval, align 4, !dbg !6204
  ret i32 %4, !dbg !6204
}

; Function Attrs: noredzone
declare dso_local i64 @ktime_get() #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @input_set_capability(%struct.input_dev* %dev, i32 %type, i32 %code) #0 !dbg !6205 {
entry:
  %dev.addr = alloca %struct.input_dev*, align 8
  %type.addr = alloca i32, align 4
  %code.addr = alloca i32, align 4
  store %struct.input_dev* %dev, %struct.input_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.input_dev** %dev.addr, metadata !6208, metadata !DIExpression()), !dbg !6209
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !6210, metadata !DIExpression()), !dbg !6211
  store i32 %code, i32* %code.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %code.addr, metadata !6212, metadata !DIExpression()), !dbg !6213
  %0 = load i32, i32* %type.addr, align 4, !dbg !6214
  switch i32 %0, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb1
    i32 3, label %sw.bb4
    i32 4, label %sw.bb7
    i32 5, label %sw.bb10
    i32 17, label %sw.bb13
    i32 18, label %sw.bb16
    i32 21, label %sw.bb19
    i32 22, label %sw.bb22
  ], !dbg !6215

sw.bb:                                            ; preds = %entry
  %1 = load i32, i32* %code.addr, align 4, !dbg !6216
  %conv = zext i32 %1 to i64, !dbg !6216
  %2 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !6218
  %keybit = getelementptr inbounds %struct.input_dev, %struct.input_dev* %2, i32 0, i32 6, !dbg !6219
  %arraydecay = getelementptr inbounds [12 x i64], [12 x i64]* %keybit, i64 0, i64 0, !dbg !6218
  call void @__set_bit(i64 %conv, i64* %arraydecay) #11, !dbg !6220
  br label %sw.epilog, !dbg !6221

sw.bb1:                                           ; preds = %entry
  %3 = load i32, i32* %code.addr, align 4, !dbg !6222
  %conv2 = zext i32 %3 to i64, !dbg !6222
  %4 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !6223
  %relbit = getelementptr inbounds %struct.input_dev, %struct.input_dev* %4, i32 0, i32 7, !dbg !6224
  %arraydecay3 = getelementptr inbounds [1 x i64], [1 x i64]* %relbit, i64 0, i64 0, !dbg !6223
  call void @__set_bit(i64 %conv2, i64* %arraydecay3) #11, !dbg !6225
  br label %sw.epilog, !dbg !6226

sw.bb4:                                           ; preds = %entry
  %5 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !6227
  call void @input_alloc_absinfo(%struct.input_dev* %5) #11, !dbg !6228
  %6 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !6229
  %absinfo = getelementptr inbounds %struct.input_dev, %struct.input_dev* %6, i32 0, i32 26, !dbg !6231
  %7 = load %struct.input_absinfo*, %struct.input_absinfo** %absinfo, align 8, !dbg !6231
  %tobool = icmp ne %struct.input_absinfo* %7, null, !dbg !6229
  br i1 %tobool, label %if.end, label %if.then, !dbg !6232

if.then:                                          ; preds = %sw.bb4
  br label %return, !dbg !6233

if.end:                                           ; preds = %sw.bb4
  %8 = load i32, i32* %code.addr, align 4, !dbg !6234
  %conv5 = zext i32 %8 to i64, !dbg !6234
  %9 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !6235
  %absbit = getelementptr inbounds %struct.input_dev, %struct.input_dev* %9, i32 0, i32 8, !dbg !6236
  %arraydecay6 = getelementptr inbounds [1 x i64], [1 x i64]* %absbit, i64 0, i64 0, !dbg !6235
  call void @__set_bit(i64 %conv5, i64* %arraydecay6) #11, !dbg !6237
  br label %sw.epilog, !dbg !6238

sw.bb7:                                           ; preds = %entry
  %10 = load i32, i32* %code.addr, align 4, !dbg !6239
  %conv8 = zext i32 %10 to i64, !dbg !6239
  %11 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !6240
  %mscbit = getelementptr inbounds %struct.input_dev, %struct.input_dev* %11, i32 0, i32 9, !dbg !6241
  %arraydecay9 = getelementptr inbounds [1 x i64], [1 x i64]* %mscbit, i64 0, i64 0, !dbg !6240
  call void @__set_bit(i64 %conv8, i64* %arraydecay9) #11, !dbg !6242
  br label %sw.epilog, !dbg !6243

sw.bb10:                                          ; preds = %entry
  %12 = load i32, i32* %code.addr, align 4, !dbg !6244
  %conv11 = zext i32 %12 to i64, !dbg !6244
  %13 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !6245
  %swbit = getelementptr inbounds %struct.input_dev, %struct.input_dev* %13, i32 0, i32 13, !dbg !6246
  %arraydecay12 = getelementptr inbounds [1 x i64], [1 x i64]* %swbit, i64 0, i64 0, !dbg !6245
  call void @__set_bit(i64 %conv11, i64* %arraydecay12) #11, !dbg !6247
  br label %sw.epilog, !dbg !6248

sw.bb13:                                          ; preds = %entry
  %14 = load i32, i32* %code.addr, align 4, !dbg !6249
  %conv14 = zext i32 %14 to i64, !dbg !6249
  %15 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !6250
  %ledbit = getelementptr inbounds %struct.input_dev, %struct.input_dev* %15, i32 0, i32 10, !dbg !6251
  %arraydecay15 = getelementptr inbounds [1 x i64], [1 x i64]* %ledbit, i64 0, i64 0, !dbg !6250
  call void @__set_bit(i64 %conv14, i64* %arraydecay15) #11, !dbg !6252
  br label %sw.epilog, !dbg !6253

sw.bb16:                                          ; preds = %entry
  %16 = load i32, i32* %code.addr, align 4, !dbg !6254
  %conv17 = zext i32 %16 to i64, !dbg !6254
  %17 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !6255
  %sndbit = getelementptr inbounds %struct.input_dev, %struct.input_dev* %17, i32 0, i32 11, !dbg !6256
  %arraydecay18 = getelementptr inbounds [1 x i64], [1 x i64]* %sndbit, i64 0, i64 0, !dbg !6255
  call void @__set_bit(i64 %conv17, i64* %arraydecay18) #11, !dbg !6257
  br label %sw.epilog, !dbg !6258

sw.bb19:                                          ; preds = %entry
  %18 = load i32, i32* %code.addr, align 4, !dbg !6259
  %conv20 = zext i32 %18 to i64, !dbg !6259
  %19 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !6260
  %ffbit = getelementptr inbounds %struct.input_dev, %struct.input_dev* %19, i32 0, i32 12, !dbg !6261
  %arraydecay21 = getelementptr inbounds [2 x i64], [2 x i64]* %ffbit, i64 0, i64 0, !dbg !6260
  call void @__set_bit(i64 %conv20, i64* %arraydecay21) #11, !dbg !6262
  br label %sw.epilog, !dbg !6263

sw.bb22:                                          ; preds = %entry
  br label %sw.epilog, !dbg !6264

sw.default:                                       ; preds = %entry
  %20 = load i32, i32* %type.addr, align 4, !dbg !6265
  %21 = load i32, i32* %code.addr, align 4, !dbg !6265
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.input_set_capability, i64 0, i64 0), i32 %20, i32 %21) #13, !dbg !6265
  call void @dump_stack() #13, !dbg !6266
  br label %return, !dbg !6267

sw.epilog:                                        ; preds = %sw.bb22, %sw.bb19, %sw.bb16, %sw.bb13, %sw.bb10, %sw.bb7, %if.end, %sw.bb1, %sw.bb
  %22 = load i32, i32* %type.addr, align 4, !dbg !6268
  %conv23 = zext i32 %22 to i64, !dbg !6268
  %23 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !6269
  %evbit = getelementptr inbounds %struct.input_dev, %struct.input_dev* %23, i32 0, i32 5, !dbg !6270
  %arraydecay24 = getelementptr inbounds [1 x i64], [1 x i64]* %evbit, i64 0, i64 0, !dbg !6269
  call void @__set_bit(i64 %conv23, i64* %arraydecay24) #11, !dbg !6271
  br label %return, !dbg !6272

return:                                           ; preds = %sw.epilog, %sw.default, %if.then
  ret void, !dbg !6272
}

; Function Attrs: cold noredzone
declare dso_local i32 @printk(i8*, ...) #2

; Function Attrs: cold noredzone
declare dso_local void @dump_stack() #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @input_enable_softrepeat(%struct.input_dev* %dev, i32 %delay, i32 %period) #0 !dbg !6273 {
entry:
  %dev.addr = alloca %struct.input_dev*, align 8
  %delay.addr = alloca i32, align 4
  %period.addr = alloca i32, align 4
  store %struct.input_dev* %dev, %struct.input_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.input_dev** %dev.addr, metadata !6276, metadata !DIExpression()), !dbg !6277
  store i32 %delay, i32* %delay.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %delay.addr, metadata !6278, metadata !DIExpression()), !dbg !6279
  store i32 %period, i32* %period.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %period.addr, metadata !6280, metadata !DIExpression()), !dbg !6281
  %0 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !6282
  %timer = getelementptr inbounds %struct.input_dev, %struct.input_dev* %0, i32 0, i32 23, !dbg !6283
  %function = getelementptr inbounds %struct.timer_list, %struct.timer_list* %timer, i32 0, i32 2, !dbg !6284
  store void (%struct.timer_list*)* @input_repeat_key, void (%struct.timer_list*)** %function, align 8, !dbg !6285
  %1 = load i32, i32* %delay.addr, align 4, !dbg !6286
  %2 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !6287
  %rep = getelementptr inbounds %struct.input_dev, %struct.input_dev* %2, i32 0, i32 24, !dbg !6288
  %arrayidx = getelementptr [2 x i32], [2 x i32]* %rep, i64 0, i64 0, !dbg !6287
  store i32 %1, i32* %arrayidx, align 8, !dbg !6289
  %3 = load i32, i32* %period.addr, align 4, !dbg !6290
  %4 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !6291
  %rep1 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %4, i32 0, i32 24, !dbg !6292
  %arrayidx2 = getelementptr [2 x i32], [2 x i32]* %rep1, i64 0, i64 1, !dbg !6291
  store i32 %3, i32* %arrayidx2, align 4, !dbg !6293
  ret void, !dbg !6294
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @input_repeat_key(%struct.timer_list* %t) #0 !dbg !6295 {
entry:
  %retval.i = alloca i64, align 8
  %m.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m.addr.i, metadata !6296, metadata !DIExpression()), !dbg !6301
  %lock.addr.i40 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i40, metadata !4042, metadata !DIExpression()), !dbg !6306
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !4052, metadata !DIExpression()), !dbg !6308
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !4054, metadata !DIExpression()), !dbg !6309
  %t.addr = alloca %struct.timer_list*, align 8
  %dev = alloca %struct.input_dev*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.input_dev*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp3 = alloca i32, align 4
  %__dummy7 = alloca i64, align 8
  %__dummy28 = alloca i64, align 8
  %tmp11 = alloca i32, align 4
  %vals = alloca [2 x %struct.input_value], align 16
  store %struct.timer_list* %t, %struct.timer_list** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.timer_list** %t.addr, metadata !6316, metadata !DIExpression()), !dbg !6317
  call void @llvm.dbg.declare(metadata %struct.input_dev** %dev, metadata !6318, metadata !DIExpression()), !dbg !6319
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !6320, metadata !DIExpression()), !dbg !6322
  %0 = load %struct.timer_list*, %struct.timer_list** %t.addr, align 8, !dbg !6322
  %1 = bitcast %struct.timer_list* %0 to i8*, !dbg !6322
  store i8* %1, i8** %__mptr, align 8, !dbg !6322
  br label %do.body, !dbg !6322

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !6323

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !6322
  %add.ptr = getelementptr i8, i8* %2, i64 -272, !dbg !6322
  %3 = bitcast i8* %add.ptr to %struct.input_dev*, !dbg !6322
  store %struct.input_dev* %3, %struct.input_dev** %tmp, align 8, !dbg !6323
  %4 = load %struct.input_dev*, %struct.input_dev** %tmp, align 8, !dbg !6322
  store %struct.input_dev* %4, %struct.input_dev** %dev, align 8, !dbg !6319
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !6325, metadata !DIExpression()), !dbg !6326
  br label %do.body1, !dbg !6327

do.body1:                                         ; preds = %do.end
  br label %do.body2, !dbg !6328

do.body2:                                         ; preds = %do.body1
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !6329, metadata !DIExpression()), !dbg !6331
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !6332, metadata !DIExpression()), !dbg !6331
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !6331
  %conv = zext i1 %cmp to i32, !dbg !6331
  store i32 1, i32* %tmp3, align 4, !dbg !6331
  %5 = load i32, i32* %tmp3, align 4, !dbg !6331
  br label %do.body4, !dbg !6333

do.body4:                                         ; preds = %do.body2
  br label %do.body5, !dbg !6334

do.body5:                                         ; preds = %do.body4
  br label %do.body6, !dbg !6335

do.body6:                                         ; preds = %do.body5
  call void @llvm.dbg.declare(metadata i64* %__dummy7, metadata !6337, metadata !DIExpression()), !dbg !6340
  call void @llvm.dbg.declare(metadata i64* %__dummy28, metadata !6341, metadata !DIExpression()), !dbg !6340
  %cmp9 = icmp eq i64* %__dummy7, %__dummy28, !dbg !6340
  %conv10 = zext i1 %cmp9 to i32, !dbg !6340
  store i32 1, i32* %tmp11, align 4, !dbg !6340
  %6 = load i32, i32* %tmp11, align 4, !dbg !6340
  %call = call i64 @arch_local_irq_save() #11, !dbg !6342
  store i64 %call, i64* %flags, align 8, !dbg !6342
  br label %do.end12, !dbg !6342

do.end12:                                         ; preds = %do.body6
  br label %do.end13, !dbg !6335

do.end13:                                         ; preds = %do.end12
  br label %do.body14, !dbg !6334

do.body14:                                        ; preds = %do.end13
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !6343, !srcloc !6344
  br label %do.body15, !dbg !6343

do.body15:                                        ; preds = %do.body14
  %7 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !6345
  %event_lock = getelementptr inbounds %struct.input_dev, %struct.input_dev* %7, i32 0, i32 36, !dbg !6345
  store %struct.spinlock* %event_lock, %struct.spinlock** %lock.addr.i, align 8
  %8 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !6346
  %9 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %8, i32 0, i32 0, !dbg !6347
  %rlock.i = bitcast %union.anon.0* %9 to %struct.raw_spinlock*, !dbg !6347
  br label %do.end17, !dbg !6345

do.end17:                                         ; preds = %do.body15
  br label %do.end18, !dbg !6343

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !6334

do.end19:                                         ; preds = %do.end18
  br label %do.end20, !dbg !6333

do.end20:                                         ; preds = %do.end19
  br label %do.end21, !dbg !6328

do.end21:                                         ; preds = %do.end20
  %10 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !6348
  %repeat_key = getelementptr inbounds %struct.input_dev, %struct.input_dev* %10, i32 0, i32 22, !dbg !6349
  %11 = load i32, i32* %repeat_key, align 8, !dbg !6349
  %conv22 = zext i32 %11 to i64, !dbg !6348
  %12 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !6350
  %key = getelementptr inbounds %struct.input_dev, %struct.input_dev* %12, i32 0, i32 27, !dbg !6351
  %arraydecay = getelementptr inbounds [12 x i64], [12 x i64]* %key, i64 0, i64 0, !dbg !6350
  %call23 = call zeroext i1 @test_bit(i64 %conv22, i64* %arraydecay) #11, !dbg !6352
  br i1 %call23, label %land.lhs.true, label %if.end38, !dbg !6353

land.lhs.true:                                    ; preds = %do.end21
  %13 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !6354
  %repeat_key25 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %13, i32 0, i32 22, !dbg !6355
  %14 = load i32, i32* %repeat_key25, align 8, !dbg !6355
  %15 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !6356
  %keybit = getelementptr inbounds %struct.input_dev, %struct.input_dev* %15, i32 0, i32 6, !dbg !6357
  %arraydecay26 = getelementptr inbounds [12 x i64], [12 x i64]* %keybit, i64 0, i64 0, !dbg !6356
  %call27 = call i32 @is_event_supported(i32 %14, i64* %arraydecay26, i32 767) #11, !dbg !6358
  %tobool = icmp ne i32 %call27, 0, !dbg !6358
  br i1 %tobool, label %if.then, label %if.end38, !dbg !6359

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata [2 x %struct.input_value]* %vals, metadata !6360, metadata !DIExpression()), !dbg !6361
  %arrayinit.begin = getelementptr inbounds [2 x %struct.input_value], [2 x %struct.input_value]* %vals, i64 0, i64 0, !dbg !6362
  %type = getelementptr inbounds %struct.input_value, %struct.input_value* %arrayinit.begin, i32 0, i32 0, !dbg !6363
  store i16 1, i16* %type, align 8, !dbg !6363
  %code = getelementptr inbounds %struct.input_value, %struct.input_value* %arrayinit.begin, i32 0, i32 1, !dbg !6363
  %16 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !6364
  %repeat_key28 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %16, i32 0, i32 22, !dbg !6365
  %17 = load i32, i32* %repeat_key28, align 8, !dbg !6365
  %conv29 = trunc i32 %17 to i16, !dbg !6364
  store i16 %conv29, i16* %code, align 2, !dbg !6363
  %value = getelementptr inbounds %struct.input_value, %struct.input_value* %arrayinit.begin, i32 0, i32 2, !dbg !6363
  store i32 2, i32* %value, align 4, !dbg !6363
  %arrayinit.element = getelementptr inbounds %struct.input_value, %struct.input_value* %arrayinit.begin, i64 1, !dbg !6362
  %18 = bitcast %struct.input_value* %arrayinit.element to i8*, !dbg !6366
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* align 4 bitcast (%struct.input_value* @input_value_sync to i8*), i64 8, i1 false), !dbg !6366
  %19 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !6367
  %call30 = call i64 @ktime_get() #11, !dbg !6368
  call void @input_set_timestamp(%struct.input_dev* %19, i64 %call30) #11, !dbg !6369
  %20 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !6370
  %arraydecay31 = getelementptr inbounds [2 x %struct.input_value], [2 x %struct.input_value]* %vals, i64 0, i64 0, !dbg !6371
  call void @input_pass_values(%struct.input_dev* %20, %struct.input_value* %arraydecay31, i32 2) #11, !dbg !6372
  %21 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !6373
  %rep = getelementptr inbounds %struct.input_dev, %struct.input_dev* %21, i32 0, i32 24, !dbg !6374
  %arrayidx = getelementptr [2 x i32], [2 x i32]* %rep, i64 0, i64 1, !dbg !6373
  %22 = load i32, i32* %arrayidx, align 4, !dbg !6373
  %tobool32 = icmp ne i32 %22, 0, !dbg !6373
  br i1 %tobool32, label %if.then33, label %if.end, !dbg !6375

if.then33:                                        ; preds = %if.then
  %23 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !6376
  %timer = getelementptr inbounds %struct.input_dev, %struct.input_dev* %23, i32 0, i32 23, !dbg !6377
  %24 = load volatile i64, i64* @jiffies, align 8, !dbg !6378
  %25 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !6379
  %rep34 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %25, i32 0, i32 24, !dbg !6380
  %arrayidx35 = getelementptr [2 x i32], [2 x i32]* %rep34, i64 0, i64 1, !dbg !6379
  %26 = load i32, i32* %arrayidx35, align 4, !dbg !6379
  store i32 %26, i32* %m.addr.i, align 4
  %27 = load i32, i32* %m.addr.i, align 4, !dbg !6381
  %28 = call i1 @llvm.is.constant.i32(i32 %27) #7, !dbg !6383
  br i1 %28, label %if.then.i, label %if.else.i, !dbg !6384

if.then.i:                                        ; preds = %if.then33
  %29 = load i32, i32* %m.addr.i, align 4, !dbg !6385
  %cmp.i = icmp slt i32 %29, 0, !dbg !6388
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !6389

if.then1.i:                                       ; preds = %if.then.i
  store i64 4611686018427387902, i64* %retval.i, align 8, !dbg !6390
  br label %msecs_to_jiffies.exit, !dbg !6390

if.end.i:                                         ; preds = %if.then.i
  %30 = load i32, i32* %m.addr.i, align 4, !dbg !6391
  %call.i = call i64 @_msecs_to_jiffies(i32 %30) #12, !dbg !6392
  store i64 %call.i, i64* %retval.i, align 8, !dbg !6393
  br label %msecs_to_jiffies.exit, !dbg !6393

if.else.i:                                        ; preds = %if.then33
  %31 = load i32, i32* %m.addr.i, align 4, !dbg !6394
  %call2.i = call i64 @__msecs_to_jiffies(i32 %31) #12, !dbg !6396
  store i64 %call2.i, i64* %retval.i, align 8, !dbg !6397
  br label %msecs_to_jiffies.exit, !dbg !6397

msecs_to_jiffies.exit:                            ; preds = %if.then1.i, %if.end.i, %if.else.i
  %32 = load i64, i64* %retval.i, align 8, !dbg !6398
  %add = add i64 %24, %32, !dbg !6399
  %call37 = call i32 @mod_timer(%struct.timer_list* %timer, i64 %add) #11, !dbg !6400
  br label %if.end, !dbg !6400

if.end:                                           ; preds = %msecs_to_jiffies.exit, %if.then
  br label %if.end38, !dbg !6401

if.end38:                                         ; preds = %if.end, %land.lhs.true, %do.end21
  %33 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !6402
  %event_lock39 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %33, i32 0, i32 36, !dbg !6403
  %34 = load i64, i64* %flags, align 8, !dbg !6404
  store %struct.spinlock* %event_lock39, %struct.spinlock** %lock.addr.i40, align 8
  store i64 %34, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !309, metadata !4110, metadata !DIExpression()) #7, !dbg !6405
  call void @llvm.dbg.declare(metadata !309, metadata !4114, metadata !DIExpression()) #7, !dbg !6405
  store i32 1, i32* %tmp.i, align 4, !dbg !6405
  %35 = load i32, i32* %tmp.i, align 4, !dbg !6405
  call void @llvm.dbg.declare(metadata !309, metadata !4115, metadata !DIExpression()) #7, !dbg !6406
  call void @llvm.dbg.declare(metadata !309, metadata !4121, metadata !DIExpression()) #7, !dbg !6406
  store i32 1, i32* %tmp8.i, align 4, !dbg !6406
  %36 = load i32, i32* %tmp8.i, align 4, !dbg !6406
  %37 = load i64, i64* %flags.addr.i, align 8, !dbg !6407
  call void @arch_local_irq_restore(i64 %37) #12, !dbg !6407
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !6408, !srcloc !4125
  %38 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i40, align 8, !dbg !6409
  %39 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %38, i32 0, i32 0, !dbg !6409
  %rlock.i41 = bitcast %union.anon.0* %39 to %struct.raw_spinlock*, !dbg !6409
  ret void, !dbg !6410
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @input_register_device(%struct.input_dev* %dev) #0 !dbg !6411 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.input_dev*, align 8
  %devres = alloca %struct.input_devres*, align 8
  %handler = alloca %struct.input_handler*, align 8
  %packet_size = alloca i32, align 4
  %path = alloca i8*, align 8
  %error = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.input_handler*, align 8
  %__mptr65 = alloca i8*, align 8
  %tmp69 = alloca %struct.input_handler*, align 8
  store %struct.input_dev* %dev, %struct.input_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.input_dev** %dev.addr, metadata !6412, metadata !DIExpression()), !dbg !6413
  call void @llvm.dbg.declare(metadata %struct.input_devres** %devres, metadata !6414, metadata !DIExpression()), !dbg !6415
  store %struct.input_devres* null, %struct.input_devres** %devres, align 8, !dbg !6415
  call void @llvm.dbg.declare(metadata %struct.input_handler** %handler, metadata !6416, metadata !DIExpression()), !dbg !6417
  call void @llvm.dbg.declare(metadata i32* %packet_size, metadata !6418, metadata !DIExpression()), !dbg !6419
  call void @llvm.dbg.declare(metadata i8** %path, metadata !6420, metadata !DIExpression()), !dbg !6421
  call void @llvm.dbg.declare(metadata i32* %error, metadata !6422, metadata !DIExpression()), !dbg !6423
  %0 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !6424
  %evbit = getelementptr inbounds %struct.input_dev, %struct.input_dev* %0, i32 0, i32 5, !dbg !6426
  %arraydecay = getelementptr inbounds [1 x i64], [1 x i64]* %evbit, i64 0, i64 0, !dbg !6424
  %call = call zeroext i1 @test_bit(i64 3, i64* %arraydecay) #11, !dbg !6427
  br i1 %call, label %land.lhs.true, label %if.end, !dbg !6428

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !6429
  %absinfo = getelementptr inbounds %struct.input_dev, %struct.input_dev* %1, i32 0, i32 26, !dbg !6430
  %2 = load %struct.input_absinfo*, %struct.input_absinfo** %absinfo, align 8, !dbg !6430
  %tobool = icmp ne %struct.input_absinfo* %2, null, !dbg !6429
  br i1 %tobool, label %if.end, label %if.then, !dbg !6431

if.then:                                          ; preds = %land.lhs.true
  %3 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !6432
  %dev1 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %3, i32 0, i32 40, !dbg !6432
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev1, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.7, i64 0, i64 0)) #13, !dbg !6432
  store i32 -22, i32* %retval, align 4, !dbg !6434
  br label %return, !dbg !6434

if.end:                                           ; preds = %land.lhs.true, %entry
  %4 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !6435
  %devres_managed = getelementptr inbounds %struct.input_dev, %struct.input_dev* %4, i32 0, i32 46, !dbg !6437
  %5 = load i8, i8* %devres_managed, align 8, !dbg !6437
  %tobool2 = trunc i8 %5 to i1, !dbg !6437
  br i1 %tobool2, label %if.then3, label %if.end8, !dbg !6438

if.then3:                                         ; preds = %if.end
  %call4 = call i8* @devres_alloc(void (%struct.device*, i8*)* @devm_input_device_unregister, i64 8, i32 3264) #11, !dbg !6439
  %6 = bitcast i8* %call4 to %struct.input_devres*, !dbg !6439
  store %struct.input_devres* %6, %struct.input_devres** %devres, align 8, !dbg !6441
  %7 = load %struct.input_devres*, %struct.input_devres** %devres, align 8, !dbg !6442
  %tobool5 = icmp ne %struct.input_devres* %7, null, !dbg !6442
  br i1 %tobool5, label %if.end7, label %if.then6, !dbg !6444

if.then6:                                         ; preds = %if.then3
  store i32 -12, i32* %retval, align 4, !dbg !6445
  br label %return, !dbg !6445

if.end7:                                          ; preds = %if.then3
  %8 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !6446
  %9 = load %struct.input_devres*, %struct.input_devres** %devres, align 8, !dbg !6447
  %input = getelementptr inbounds %struct.input_devres, %struct.input_devres* %9, i32 0, i32 0, !dbg !6448
  store %struct.input_dev* %8, %struct.input_dev** %input, align 8, !dbg !6449
  br label %if.end8, !dbg !6450

if.end8:                                          ; preds = %if.end7, %if.end
  %10 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !6451
  %evbit9 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %10, i32 0, i32 5, !dbg !6452
  %arraydecay10 = getelementptr inbounds [1 x i64], [1 x i64]* %evbit9, i64 0, i64 0, !dbg !6451
  call void @__set_bit(i64 0, i64* %arraydecay10) #11, !dbg !6453
  %11 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !6454
  %keybit = getelementptr inbounds %struct.input_dev, %struct.input_dev* %11, i32 0, i32 6, !dbg !6455
  %arraydecay11 = getelementptr inbounds [12 x i64], [12 x i64]* %keybit, i64 0, i64 0, !dbg !6454
  call void @__clear_bit(i64 0, i64* %arraydecay11) #11, !dbg !6456
  %12 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !6457
  call void @input_cleanse_bitmasks(%struct.input_dev* %12) #11, !dbg !6458
  %13 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !6459
  %call12 = call i32 @input_estimate_events_per_packet(%struct.input_dev* %13) #11, !dbg !6460
  store i32 %call12, i32* %packet_size, align 4, !dbg !6461
  %14 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !6462
  %hint_events_per_packet = getelementptr inbounds %struct.input_dev, %struct.input_dev* %14, i32 0, i32 14, !dbg !6464
  %15 = load i32, i32* %hint_events_per_packet, align 8, !dbg !6464
  %16 = load i32, i32* %packet_size, align 4, !dbg !6465
  %cmp = icmp ult i32 %15, %16, !dbg !6466
  br i1 %cmp, label %if.then13, label %if.end15, !dbg !6467

if.then13:                                        ; preds = %if.end8
  %17 = load i32, i32* %packet_size, align 4, !dbg !6468
  %18 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !6469
  %hint_events_per_packet14 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %18, i32 0, i32 14, !dbg !6470
  store i32 %17, i32* %hint_events_per_packet14, align 8, !dbg !6471
  br label %if.end15, !dbg !6469

if.end15:                                         ; preds = %if.then13, %if.end8
  %19 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !6472
  %hint_events_per_packet16 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %19, i32 0, i32 14, !dbg !6473
  %20 = load i32, i32* %hint_events_per_packet16, align 8, !dbg !6473
  %add = add i32 %20, 2, !dbg !6474
  %21 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !6475
  %max_vals = getelementptr inbounds %struct.input_dev, %struct.input_dev* %21, i32 0, i32 44, !dbg !6476
  store i32 %add, i32* %max_vals, align 4, !dbg !6477
  %22 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !6478
  %max_vals17 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %22, i32 0, i32 44, !dbg !6479
  %23 = load i32, i32* %max_vals17, align 4, !dbg !6479
  %conv = zext i32 %23 to i64, !dbg !6478
  %call18 = call i8* @kcalloc(i64 %conv, i64 8, i32 3264) #11, !dbg !6480
  %24 = bitcast i8* %call18 to %struct.input_value*, !dbg !6480
  %25 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !6481
  %vals = getelementptr inbounds %struct.input_dev, %struct.input_dev* %25, i32 0, i32 45, !dbg !6482
  store %struct.input_value* %24, %struct.input_value** %vals, align 8, !dbg !6483
  %26 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !6484
  %vals19 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %26, i32 0, i32 45, !dbg !6486
  %27 = load %struct.input_value*, %struct.input_value** %vals19, align 8, !dbg !6486
  %tobool20 = icmp ne %struct.input_value* %27, null, !dbg !6484
  br i1 %tobool20, label %if.end22, label %if.then21, !dbg !6487

if.then21:                                        ; preds = %if.end15
  store i32 -12, i32* %error, align 4, !dbg !6488
  br label %err_devres_free, !dbg !6490

if.end22:                                         ; preds = %if.end15
  %28 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !6491
  %rep = getelementptr inbounds %struct.input_dev, %struct.input_dev* %28, i32 0, i32 24, !dbg !6493
  %arrayidx = getelementptr [2 x i32], [2 x i32]* %rep, i64 0, i64 0, !dbg !6491
  %29 = load i32, i32* %arrayidx, align 8, !dbg !6491
  %tobool23 = icmp ne i32 %29, 0, !dbg !6491
  br i1 %tobool23, label %if.end29, label %land.lhs.true24, !dbg !6494

land.lhs.true24:                                  ; preds = %if.end22
  %30 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !6495
  %rep25 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %30, i32 0, i32 24, !dbg !6496
  %arrayidx26 = getelementptr [2 x i32], [2 x i32]* %rep25, i64 0, i64 1, !dbg !6495
  %31 = load i32, i32* %arrayidx26, align 4, !dbg !6495
  %tobool27 = icmp ne i32 %31, 0, !dbg !6495
  br i1 %tobool27, label %if.end29, label %if.then28, !dbg !6497

if.then28:                                        ; preds = %land.lhs.true24
  %32 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !6498
  call void @input_enable_softrepeat(%struct.input_dev* %32, i32 250, i32 33) #11, !dbg !6499
  br label %if.end29, !dbg !6499

if.end29:                                         ; preds = %if.then28, %land.lhs.true24, %if.end22
  %33 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !6500
  %getkeycode = getelementptr inbounds %struct.input_dev, %struct.input_dev* %33, i32 0, i32 19, !dbg !6502
  %34 = load i32 (%struct.input_dev*, %struct.input_keymap_entry*)*, i32 (%struct.input_dev*, %struct.input_keymap_entry*)** %getkeycode, align 8, !dbg !6502
  %tobool30 = icmp ne i32 (%struct.input_dev*, %struct.input_keymap_entry*)* %34, null, !dbg !6500
  br i1 %tobool30, label %if.end33, label %if.then31, !dbg !6503

if.then31:                                        ; preds = %if.end29
  %35 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !6504
  %getkeycode32 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %35, i32 0, i32 19, !dbg !6505
  store i32 (%struct.input_dev*, %struct.input_keymap_entry*)* @input_default_getkeycode, i32 (%struct.input_dev*, %struct.input_keymap_entry*)** %getkeycode32, align 8, !dbg !6506
  br label %if.end33, !dbg !6504

if.end33:                                         ; preds = %if.then31, %if.end29
  %36 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !6507
  %setkeycode = getelementptr inbounds %struct.input_dev, %struct.input_dev* %36, i32 0, i32 18, !dbg !6509
  %37 = load i32 (%struct.input_dev*, %struct.input_keymap_entry*, i32*)*, i32 (%struct.input_dev*, %struct.input_keymap_entry*, i32*)** %setkeycode, align 8, !dbg !6509
  %tobool34 = icmp ne i32 (%struct.input_dev*, %struct.input_keymap_entry*, i32*)* %37, null, !dbg !6507
  br i1 %tobool34, label %if.end37, label %if.then35, !dbg !6510

if.then35:                                        ; preds = %if.end33
  %38 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !6511
  %setkeycode36 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %38, i32 0, i32 18, !dbg !6512
  store i32 (%struct.input_dev*, %struct.input_keymap_entry*, i32*)* @input_default_setkeycode, i32 (%struct.input_dev*, %struct.input_keymap_entry*, i32*)** %setkeycode36, align 8, !dbg !6513
  br label %if.end37, !dbg !6511

if.end37:                                         ; preds = %if.then35, %if.end33
  %39 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !6514
  %poller = getelementptr inbounds %struct.input_dev, %struct.input_dev* %39, i32 0, i32 21, !dbg !6516
  %40 = load %struct.input_dev_poller*, %struct.input_dev_poller** %poller, align 8, !dbg !6516
  %tobool38 = icmp ne %struct.input_dev_poller* %40, null, !dbg !6514
  br i1 %tobool38, label %if.then39, label %if.end41, !dbg !6517

if.then39:                                        ; preds = %if.end37
  %41 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !6518
  %poller40 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %41, i32 0, i32 21, !dbg !6519
  %42 = load %struct.input_dev_poller*, %struct.input_dev_poller** %poller40, align 8, !dbg !6519
  call void @input_dev_poller_finalize(%struct.input_dev_poller* %42) #11, !dbg !6520
  br label %if.end41, !dbg !6520

if.end41:                                         ; preds = %if.then39, %if.end37
  %43 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !6521
  %dev42 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %43, i32 0, i32 40, !dbg !6522
  %call43 = call i32 @device_add(%struct.device* %dev42) #11, !dbg !6523
  store i32 %call43, i32* %error, align 4, !dbg !6524
  %44 = load i32, i32* %error, align 4, !dbg !6525
  %tobool44 = icmp ne i32 %44, 0, !dbg !6525
  br i1 %tobool44, label %if.then45, label %if.end46, !dbg !6527

if.then45:                                        ; preds = %if.end41
  br label %err_free_vals, !dbg !6528

if.end46:                                         ; preds = %if.end41
  %45 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !6529
  %dev47 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %45, i32 0, i32 40, !dbg !6530
  %kobj = getelementptr inbounds %struct.device, %struct.device* %dev47, i32 0, i32 0, !dbg !6531
  %call48 = call i8* @kobject_get_path(%struct.kobject* %kobj, i32 3264) #11, !dbg !6532
  store i8* %call48, i8** %path, align 8, !dbg !6533
  %46 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !6534
  %name = getelementptr inbounds %struct.input_dev, %struct.input_dev* %46, i32 0, i32 0, !dbg !6534
  %47 = load i8*, i8** %name, align 8, !dbg !6534
  %tobool49 = icmp ne i8* %47, null, !dbg !6534
  br i1 %tobool49, label %cond.true, label %cond.false, !dbg !6534

cond.true:                                        ; preds = %if.end46
  %48 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !6534
  %name50 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %48, i32 0, i32 0, !dbg !6534
  %49 = load i8*, i8** %name50, align 8, !dbg !6534
  br label %cond.end, !dbg !6534

cond.false:                                       ; preds = %if.end46
  br label %cond.end, !dbg !6534

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %49, %cond.true ], [ getelementptr inbounds ([19 x i8], [19 x i8]* @.str.9, i64 0, i64 0), %cond.false ], !dbg !6534
  %50 = load i8*, i8** %path, align 8, !dbg !6534
  %tobool51 = icmp ne i8* %50, null, !dbg !6534
  br i1 %tobool51, label %cond.true52, label %cond.false53, !dbg !6534

cond.true52:                                      ; preds = %cond.end
  %51 = load i8*, i8** %path, align 8, !dbg !6534
  br label %cond.end54, !dbg !6534

cond.false53:                                     ; preds = %cond.end
  br label %cond.end54, !dbg !6534

cond.end54:                                       ; preds = %cond.false53, %cond.true52
  %cond55 = phi i8* [ %51, %cond.true52 ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @.str.10, i64 0, i64 0), %cond.false53 ], !dbg !6534
  %call56 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.8, i64 0, i64 0), i8* %cond, i8* %cond55) #13, !dbg !6534
  %52 = load i8*, i8** %path, align 8, !dbg !6535
  call void @kfree(i8* %52) #11, !dbg !6536
  %call57 = call i32 @mutex_lock_interruptible(%struct.mutex* @input_mutex) #11, !dbg !6537
  store i32 %call57, i32* %error, align 4, !dbg !6538
  %53 = load i32, i32* %error, align 4, !dbg !6539
  %tobool58 = icmp ne i32 %53, 0, !dbg !6539
  br i1 %tobool58, label %if.then59, label %if.end60, !dbg !6541

if.then59:                                        ; preds = %cond.end54
  br label %err_device_del, !dbg !6542

if.end60:                                         ; preds = %cond.end54
  %54 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !6543
  %node = getelementptr inbounds %struct.input_dev, %struct.input_dev* %54, i32 0, i32 42, !dbg !6544
  call void @list_add_tail(%struct.list_head* %node, %struct.list_head* @input_dev_list) #11, !dbg !6545
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !6546, metadata !DIExpression()), !dbg !6549
  %55 = load %struct.list_head*, %struct.list_head** getelementptr inbounds (%struct.list_head, %struct.list_head* @input_handler_list, i32 0, i32 0), align 8, !dbg !6549
  %56 = bitcast %struct.list_head* %55 to i8*, !dbg !6549
  store i8* %56, i8** %__mptr, align 8, !dbg !6549
  br label %do.body, !dbg !6549

do.body:                                          ; preds = %if.end60
  br label %do.end, !dbg !6550

do.end:                                           ; preds = %do.body
  %57 = load i8*, i8** %__mptr, align 8, !dbg !6549
  %add.ptr = getelementptr i8, i8* %57, i64 -104, !dbg !6549
  %58 = bitcast i8* %add.ptr to %struct.input_handler*, !dbg !6549
  store %struct.input_handler* %58, %struct.input_handler** %tmp, align 8, !dbg !6550
  %59 = load %struct.input_handler*, %struct.input_handler** %tmp, align 8, !dbg !6549
  store %struct.input_handler* %59, %struct.input_handler** %handler, align 8, !dbg !6552
  br label %for.cond, !dbg !6552

for.cond:                                         ; preds = %do.end68, %do.end
  %60 = load %struct.input_handler*, %struct.input_handler** %handler, align 8, !dbg !6553
  %node61 = getelementptr inbounds %struct.input_handler, %struct.input_handler* %60, i32 0, i32 13, !dbg !6553
  %cmp62 = icmp eq %struct.list_head* %node61, @input_handler_list, !dbg !6553
  %lnot = xor i1 %cmp62, true, !dbg !6553
  br i1 %lnot, label %for.body, label %for.end, !dbg !6552

for.body:                                         ; preds = %for.cond
  %61 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !6555
  %62 = load %struct.input_handler*, %struct.input_handler** %handler, align 8, !dbg !6556
  %call64 = call i32 @input_attach_handler(%struct.input_dev* %61, %struct.input_handler* %62) #11, !dbg !6557
  br label %for.inc, !dbg !6557

for.inc:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata i8** %__mptr65, metadata !6558, metadata !DIExpression()), !dbg !6560
  %63 = load %struct.input_handler*, %struct.input_handler** %handler, align 8, !dbg !6560
  %node66 = getelementptr inbounds %struct.input_handler, %struct.input_handler* %63, i32 0, i32 13, !dbg !6560
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %node66, i32 0, i32 0, !dbg !6560
  %64 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !6560
  %65 = bitcast %struct.list_head* %64 to i8*, !dbg !6560
  store i8* %65, i8** %__mptr65, align 8, !dbg !6560
  br label %do.body67, !dbg !6560

do.body67:                                        ; preds = %for.inc
  br label %do.end68, !dbg !6561

do.end68:                                         ; preds = %do.body67
  %66 = load i8*, i8** %__mptr65, align 8, !dbg !6560
  %add.ptr70 = getelementptr i8, i8* %66, i64 -104, !dbg !6560
  %67 = bitcast i8* %add.ptr70 to %struct.input_handler*, !dbg !6560
  store %struct.input_handler* %67, %struct.input_handler** %tmp69, align 8, !dbg !6561
  %68 = load %struct.input_handler*, %struct.input_handler** %tmp69, align 8, !dbg !6560
  store %struct.input_handler* %68, %struct.input_handler** %handler, align 8, !dbg !6553
  br label %for.cond, !dbg !6553, !llvm.loop !6563

for.end:                                          ; preds = %for.cond
  call void @input_wakeup_procfs_readers() #11, !dbg !6565
  call void @mutex_unlock(%struct.mutex* @input_mutex) #11, !dbg !6566
  %69 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !6567
  %devres_managed71 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %69, i32 0, i32 46, !dbg !6569
  %70 = load i8, i8* %devres_managed71, align 8, !dbg !6569
  %tobool72 = trunc i8 %70 to i1, !dbg !6569
  br i1 %tobool72, label %if.then73, label %if.end75, !dbg !6570

if.then73:                                        ; preds = %for.end
  %71 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !6571
  %dev74 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %71, i32 0, i32 40, !dbg !6573
  %parent = getelementptr inbounds %struct.device, %struct.device* %dev74, i32 0, i32 1, !dbg !6574
  %72 = load %struct.device*, %struct.device** %parent, align 8, !dbg !6574
  %73 = load %struct.input_devres*, %struct.input_devres** %devres, align 8, !dbg !6575
  %74 = bitcast %struct.input_devres* %73 to i8*, !dbg !6575
  call void @devres_add(%struct.device* %72, i8* %74) #11, !dbg !6576
  br label %if.end75, !dbg !6577

if.end75:                                         ; preds = %if.then73, %for.end
  store i32 0, i32* %retval, align 4, !dbg !6578
  br label %return, !dbg !6578

err_device_del:                                   ; preds = %if.then59
  call void @llvm.dbg.label(metadata !6579), !dbg !6580
  %75 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !6581
  %dev76 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %75, i32 0, i32 40, !dbg !6582
  call void @device_del(%struct.device* %dev76) #11, !dbg !6583
  br label %err_free_vals, !dbg !6583

err_free_vals:                                    ; preds = %err_device_del, %if.then45
  call void @llvm.dbg.label(metadata !6584), !dbg !6585
  %76 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !6586
  %vals77 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %76, i32 0, i32 45, !dbg !6587
  %77 = load %struct.input_value*, %struct.input_value** %vals77, align 8, !dbg !6587
  %78 = bitcast %struct.input_value* %77 to i8*, !dbg !6586
  call void @kfree(i8* %78) #11, !dbg !6588
  %79 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !6589
  %vals78 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %79, i32 0, i32 45, !dbg !6590
  store %struct.input_value* null, %struct.input_value** %vals78, align 8, !dbg !6591
  br label %err_devres_free, !dbg !6589

err_devres_free:                                  ; preds = %err_free_vals, %if.then21
  call void @llvm.dbg.label(metadata !6592), !dbg !6593
  %80 = load %struct.input_devres*, %struct.input_devres** %devres, align 8, !dbg !6594
  %81 = bitcast %struct.input_devres* %80 to i8*, !dbg !6594
  call void @devres_free(i8* %81) #11, !dbg !6595
  %82 = load i32, i32* %error, align 4, !dbg !6596
  store i32 %82, i32* %retval, align 4, !dbg !6597
  br label %return, !dbg !6597

return:                                           ; preds = %err_devres_free, %if.end75, %if.then6, %if.then
  %83 = load i32, i32* %retval, align 4, !dbg !6598
  ret i32 %83, !dbg !6598
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @devm_input_device_unregister(%struct.device* %dev, i8* %res) #0 !dbg !6599 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %res.addr = alloca i8*, align 8
  %devres = alloca %struct.input_devres*, align 8
  %input = alloca %struct.input_dev*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !6600, metadata !DIExpression()), !dbg !6601
  store i8* %res, i8** %res.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %res.addr, metadata !6602, metadata !DIExpression()), !dbg !6603
  call void @llvm.dbg.declare(metadata %struct.input_devres** %devres, metadata !6604, metadata !DIExpression()), !dbg !6605
  %0 = load i8*, i8** %res.addr, align 8, !dbg !6606
  %1 = bitcast i8* %0 to %struct.input_devres*, !dbg !6606
  store %struct.input_devres* %1, %struct.input_devres** %devres, align 8, !dbg !6605
  call void @llvm.dbg.declare(metadata %struct.input_dev** %input, metadata !6607, metadata !DIExpression()), !dbg !6608
  %2 = load %struct.input_devres*, %struct.input_devres** %devres, align 8, !dbg !6609
  %input1 = getelementptr inbounds %struct.input_devres, %struct.input_devres* %2, i32 0, i32 0, !dbg !6610
  %3 = load %struct.input_dev*, %struct.input_dev** %input1, align 8, !dbg !6610
  store %struct.input_dev* %3, %struct.input_dev** %input, align 8, !dbg !6608
  %4 = load %struct.input_dev*, %struct.input_dev** %input, align 8, !dbg !6611
  call void @__input_unregister_device(%struct.input_dev* %4) #11, !dbg !6612
  ret void, !dbg !6613
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @input_cleanse_bitmasks(%struct.input_dev* %dev) #0 !dbg !6614 {
entry:
  %dev.addr = alloca %struct.input_dev*, align 8
  store %struct.input_dev* %dev, %struct.input_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.input_dev** %dev.addr, metadata !6615, metadata !DIExpression()), !dbg !6616
  br label %do.body, !dbg !6617

do.body:                                          ; preds = %entry
  %0 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !6618
  %evbit = getelementptr inbounds %struct.input_dev, %struct.input_dev* %0, i32 0, i32 5, !dbg !6618
  %arraydecay = getelementptr inbounds [1 x i64], [1 x i64]* %evbit, i64 0, i64 0, !dbg !6618
  %call = call zeroext i1 @test_bit(i64 1, i64* %arraydecay) #11, !dbg !6618
  br i1 %call, label %if.end, label %if.then, !dbg !6621

if.then:                                          ; preds = %do.body
  %1 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !6618
  %keybit = getelementptr inbounds %struct.input_dev, %struct.input_dev* %1, i32 0, i32 6, !dbg !6618
  %arraydecay1 = getelementptr inbounds [12 x i64], [12 x i64]* %keybit, i64 0, i64 0, !dbg !6618
  %2 = bitcast i64* %arraydecay1 to i8*, !dbg !6618
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 96, i1 false), !dbg !6618
  br label %if.end, !dbg !6618

if.end:                                           ; preds = %if.then, %do.body
  br label %do.end, !dbg !6621

do.end:                                           ; preds = %if.end
  br label %do.body2, !dbg !6622

do.body2:                                         ; preds = %do.end
  %3 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !6623
  %evbit3 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %3, i32 0, i32 5, !dbg !6623
  %arraydecay4 = getelementptr inbounds [1 x i64], [1 x i64]* %evbit3, i64 0, i64 0, !dbg !6623
  %call5 = call zeroext i1 @test_bit(i64 2, i64* %arraydecay4) #11, !dbg !6623
  br i1 %call5, label %if.end8, label %if.then6, !dbg !6626

if.then6:                                         ; preds = %do.body2
  %4 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !6623
  %relbit = getelementptr inbounds %struct.input_dev, %struct.input_dev* %4, i32 0, i32 7, !dbg !6623
  %arraydecay7 = getelementptr inbounds [1 x i64], [1 x i64]* %relbit, i64 0, i64 0, !dbg !6623
  %5 = bitcast i64* %arraydecay7 to i8*, !dbg !6623
  call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 8, i1 false), !dbg !6623
  br label %if.end8, !dbg !6623

if.end8:                                          ; preds = %if.then6, %do.body2
  br label %do.end9, !dbg !6626

do.end9:                                          ; preds = %if.end8
  br label %do.body10, !dbg !6627

do.body10:                                        ; preds = %do.end9
  %6 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !6628
  %evbit11 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %6, i32 0, i32 5, !dbg !6628
  %arraydecay12 = getelementptr inbounds [1 x i64], [1 x i64]* %evbit11, i64 0, i64 0, !dbg !6628
  %call13 = call zeroext i1 @test_bit(i64 3, i64* %arraydecay12) #11, !dbg !6628
  br i1 %call13, label %if.end16, label %if.then14, !dbg !6631

if.then14:                                        ; preds = %do.body10
  %7 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !6628
  %absbit = getelementptr inbounds %struct.input_dev, %struct.input_dev* %7, i32 0, i32 8, !dbg !6628
  %arraydecay15 = getelementptr inbounds [1 x i64], [1 x i64]* %absbit, i64 0, i64 0, !dbg !6628
  %8 = bitcast i64* %arraydecay15 to i8*, !dbg !6628
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 8, i1 false), !dbg !6628
  br label %if.end16, !dbg !6628

if.end16:                                         ; preds = %if.then14, %do.body10
  br label %do.end17, !dbg !6631

do.end17:                                         ; preds = %if.end16
  br label %do.body18, !dbg !6632

do.body18:                                        ; preds = %do.end17
  %9 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !6633
  %evbit19 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %9, i32 0, i32 5, !dbg !6633
  %arraydecay20 = getelementptr inbounds [1 x i64], [1 x i64]* %evbit19, i64 0, i64 0, !dbg !6633
  %call21 = call zeroext i1 @test_bit(i64 4, i64* %arraydecay20) #11, !dbg !6633
  br i1 %call21, label %if.end24, label %if.then22, !dbg !6636

if.then22:                                        ; preds = %do.body18
  %10 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !6633
  %mscbit = getelementptr inbounds %struct.input_dev, %struct.input_dev* %10, i32 0, i32 9, !dbg !6633
  %arraydecay23 = getelementptr inbounds [1 x i64], [1 x i64]* %mscbit, i64 0, i64 0, !dbg !6633
  %11 = bitcast i64* %arraydecay23 to i8*, !dbg !6633
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 8, i1 false), !dbg !6633
  br label %if.end24, !dbg !6633

if.end24:                                         ; preds = %if.then22, %do.body18
  br label %do.end25, !dbg !6636

do.end25:                                         ; preds = %if.end24
  br label %do.body26, !dbg !6637

do.body26:                                        ; preds = %do.end25
  %12 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !6638
  %evbit27 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %12, i32 0, i32 5, !dbg !6638
  %arraydecay28 = getelementptr inbounds [1 x i64], [1 x i64]* %evbit27, i64 0, i64 0, !dbg !6638
  %call29 = call zeroext i1 @test_bit(i64 17, i64* %arraydecay28) #11, !dbg !6638
  br i1 %call29, label %if.end32, label %if.then30, !dbg !6641

if.then30:                                        ; preds = %do.body26
  %13 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !6638
  %ledbit = getelementptr inbounds %struct.input_dev, %struct.input_dev* %13, i32 0, i32 10, !dbg !6638
  %arraydecay31 = getelementptr inbounds [1 x i64], [1 x i64]* %ledbit, i64 0, i64 0, !dbg !6638
  %14 = bitcast i64* %arraydecay31 to i8*, !dbg !6638
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 8, i1 false), !dbg !6638
  br label %if.end32, !dbg !6638

if.end32:                                         ; preds = %if.then30, %do.body26
  br label %do.end33, !dbg !6641

do.end33:                                         ; preds = %if.end32
  br label %do.body34, !dbg !6642

do.body34:                                        ; preds = %do.end33
  %15 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !6643
  %evbit35 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %15, i32 0, i32 5, !dbg !6643
  %arraydecay36 = getelementptr inbounds [1 x i64], [1 x i64]* %evbit35, i64 0, i64 0, !dbg !6643
  %call37 = call zeroext i1 @test_bit(i64 18, i64* %arraydecay36) #11, !dbg !6643
  br i1 %call37, label %if.end40, label %if.then38, !dbg !6646

if.then38:                                        ; preds = %do.body34
  %16 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !6643
  %sndbit = getelementptr inbounds %struct.input_dev, %struct.input_dev* %16, i32 0, i32 11, !dbg !6643
  %arraydecay39 = getelementptr inbounds [1 x i64], [1 x i64]* %sndbit, i64 0, i64 0, !dbg !6643
  %17 = bitcast i64* %arraydecay39 to i8*, !dbg !6643
  call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 8, i1 false), !dbg !6643
  br label %if.end40, !dbg !6643

if.end40:                                         ; preds = %if.then38, %do.body34
  br label %do.end41, !dbg !6646

do.end41:                                         ; preds = %if.end40
  br label %do.body42, !dbg !6647

do.body42:                                        ; preds = %do.end41
  %18 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !6648
  %evbit43 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %18, i32 0, i32 5, !dbg !6648
  %arraydecay44 = getelementptr inbounds [1 x i64], [1 x i64]* %evbit43, i64 0, i64 0, !dbg !6648
  %call45 = call zeroext i1 @test_bit(i64 21, i64* %arraydecay44) #11, !dbg !6648
  br i1 %call45, label %if.end48, label %if.then46, !dbg !6651

if.then46:                                        ; preds = %do.body42
  %19 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !6648
  %ffbit = getelementptr inbounds %struct.input_dev, %struct.input_dev* %19, i32 0, i32 12, !dbg !6648
  %arraydecay47 = getelementptr inbounds [2 x i64], [2 x i64]* %ffbit, i64 0, i64 0, !dbg !6648
  %20 = bitcast i64* %arraydecay47 to i8*, !dbg !6648
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false), !dbg !6648
  br label %if.end48, !dbg !6648

if.end48:                                         ; preds = %if.then46, %do.body42
  br label %do.end49, !dbg !6651

do.end49:                                         ; preds = %if.end48
  br label %do.body50, !dbg !6652

do.body50:                                        ; preds = %do.end49
  %21 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !6653
  %evbit51 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %21, i32 0, i32 5, !dbg !6653
  %arraydecay52 = getelementptr inbounds [1 x i64], [1 x i64]* %evbit51, i64 0, i64 0, !dbg !6653
  %call53 = call zeroext i1 @test_bit(i64 5, i64* %arraydecay52) #11, !dbg !6653
  br i1 %call53, label %if.end56, label %if.then54, !dbg !6656

if.then54:                                        ; preds = %do.body50
  %22 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !6653
  %swbit = getelementptr inbounds %struct.input_dev, %struct.input_dev* %22, i32 0, i32 13, !dbg !6653
  %arraydecay55 = getelementptr inbounds [1 x i64], [1 x i64]* %swbit, i64 0, i64 0, !dbg !6653
  %23 = bitcast i64* %arraydecay55 to i8*, !dbg !6653
  call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 8, i1 false), !dbg !6653
  br label %if.end56, !dbg !6653

if.end56:                                         ; preds = %if.then54, %do.body50
  br label %do.end57, !dbg !6656

do.end57:                                         ; preds = %if.end56
  ret void, !dbg !6657
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @input_estimate_events_per_packet(%struct.input_dev* %dev) #0 !dbg !6658 {
entry:
  %w.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %w.addr.i.i.i, metadata !6661, metadata !DIExpression()), !dbg !6666
  %res.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %res.i.i.i, metadata !6679, metadata !DIExpression()), !dbg !6680
  %w.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %w.addr.i.i, metadata !6681, metadata !DIExpression()), !dbg !6682
  %retval.i = alloca i32, align 4
  %src.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %src.addr.i, metadata !6683, metadata !DIExpression()), !dbg !6684
  %nbits.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %nbits.addr.i, metadata !6685, metadata !DIExpression()), !dbg !6686
  %dev.addr = alloca %struct.input_dev*, align 8
  %mt_slots = alloca i32, align 4
  %i = alloca i32, align 4
  %events = alloca i32, align 4
  %__UNIQUE_ID___x300 = alloca i32, align 4
  %__UNIQUE_ID___x298 = alloca i32, align 4
  %__UNIQUE_ID___y299 = alloca i32, align 4
  %tmp = alloca i32, align 4
  %__UNIQUE_ID___y301 = alloca i32, align 4
  %tmp5 = alloca i32, align 4
  store %struct.input_dev* %dev, %struct.input_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.input_dev** %dev.addr, metadata !6687, metadata !DIExpression()), !dbg !6688
  call void @llvm.dbg.declare(metadata i32* %mt_slots, metadata !6689, metadata !DIExpression()), !dbg !6690
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6691, metadata !DIExpression()), !dbg !6692
  call void @llvm.dbg.declare(metadata i32* %events, metadata !6693, metadata !DIExpression()), !dbg !6694
  %0 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !6695
  %mt = getelementptr inbounds %struct.input_dev, %struct.input_dev* %0, i32 0, i32 25, !dbg !6697
  %1 = load %struct.input_mt*, %struct.input_mt** %mt, align 8, !dbg !6697
  %tobool = icmp ne %struct.input_mt* %1, null, !dbg !6695
  br i1 %tobool, label %if.then, label %if.else, !dbg !6698

if.then:                                          ; preds = %entry
  %2 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !6699
  %mt1 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %2, i32 0, i32 25, !dbg !6701
  %3 = load %struct.input_mt*, %struct.input_mt** %mt1, align 8, !dbg !6701
  %num_slots = getelementptr inbounds %struct.input_mt, %struct.input_mt* %3, i32 0, i32 1, !dbg !6702
  %4 = load i32, i32* %num_slots, align 4, !dbg !6702
  store i32 %4, i32* %mt_slots, align 4, !dbg !6703
  br label %if.end18, !dbg !6704

if.else:                                          ; preds = %entry
  %5 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !6705
  %absbit = getelementptr inbounds %struct.input_dev, %struct.input_dev* %5, i32 0, i32 8, !dbg !6707
  %arraydecay = getelementptr inbounds [1 x i64], [1 x i64]* %absbit, i64 0, i64 0, !dbg !6705
  %call = call zeroext i1 @test_bit(i64 57, i64* %arraydecay) #11, !dbg !6708
  br i1 %call, label %if.then2, label %if.else11, !dbg !6709

if.then2:                                         ; preds = %if.else
  %6 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !6710
  %absinfo = getelementptr inbounds %struct.input_dev, %struct.input_dev* %6, i32 0, i32 26, !dbg !6712
  %7 = load %struct.input_absinfo*, %struct.input_absinfo** %absinfo, align 8, !dbg !6712
  %arrayidx = getelementptr %struct.input_absinfo, %struct.input_absinfo* %7, i64 57, !dbg !6710
  %maximum = getelementptr inbounds %struct.input_absinfo, %struct.input_absinfo* %arrayidx, i32 0, i32 2, !dbg !6713
  %8 = load i32, i32* %maximum, align 4, !dbg !6713
  %9 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !6714
  %absinfo3 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %9, i32 0, i32 26, !dbg !6715
  %10 = load %struct.input_absinfo*, %struct.input_absinfo** %absinfo3, align 8, !dbg !6715
  %arrayidx4 = getelementptr %struct.input_absinfo, %struct.input_absinfo* %10, i64 57, !dbg !6714
  %minimum = getelementptr inbounds %struct.input_absinfo, %struct.input_absinfo* %arrayidx4, i32 0, i32 1, !dbg !6716
  %11 = load i32, i32* %minimum, align 4, !dbg !6716
  %sub = sub i32 %8, %11, !dbg !6717
  %add = add i32 %sub, 1, !dbg !6718
  store i32 %add, i32* %mt_slots, align 4, !dbg !6719
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x300, metadata !6720, metadata !DIExpression()), !dbg !6722
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x298, metadata !6723, metadata !DIExpression()), !dbg !6725
  %12 = load i32, i32* %mt_slots, align 4, !dbg !6725
  store i32 %12, i32* %__UNIQUE_ID___x298, align 4, !dbg !6725
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y299, metadata !6726, metadata !DIExpression()), !dbg !6725
  store i32 2, i32* %__UNIQUE_ID___y299, align 4, !dbg !6725
  %13 = load i32, i32* %__UNIQUE_ID___x298, align 4, !dbg !6725
  %14 = load i32, i32* %__UNIQUE_ID___y299, align 4, !dbg !6725
  %cmp = icmp sgt i32 %13, %14, !dbg !6725
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !6725

cond.true:                                        ; preds = %if.then2
  %15 = load i32, i32* %__UNIQUE_ID___x298, align 4, !dbg !6725
  br label %cond.end, !dbg !6725

cond.false:                                       ; preds = %if.then2
  %16 = load i32, i32* %__UNIQUE_ID___y299, align 4, !dbg !6725
  br label %cond.end, !dbg !6725

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %15, %cond.true ], [ %16, %cond.false ], !dbg !6725
  store i32 %cond, i32* %tmp, align 4, !dbg !6725
  %17 = load i32, i32* %tmp, align 4, !dbg !6725
  store i32 %17, i32* %__UNIQUE_ID___x300, align 4, !dbg !6722
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y301, metadata !6727, metadata !DIExpression()), !dbg !6722
  store i32 32, i32* %__UNIQUE_ID___y301, align 4, !dbg !6722
  %18 = load i32, i32* %__UNIQUE_ID___x300, align 4, !dbg !6722
  %19 = load i32, i32* %__UNIQUE_ID___y301, align 4, !dbg !6722
  %cmp6 = icmp slt i32 %18, %19, !dbg !6722
  br i1 %cmp6, label %cond.true7, label %cond.false8, !dbg !6722

cond.true7:                                       ; preds = %cond.end
  %20 = load i32, i32* %__UNIQUE_ID___x300, align 4, !dbg !6722
  br label %cond.end9, !dbg !6722

cond.false8:                                      ; preds = %cond.end
  %21 = load i32, i32* %__UNIQUE_ID___y301, align 4, !dbg !6722
  br label %cond.end9, !dbg !6722

cond.end9:                                        ; preds = %cond.false8, %cond.true7
  %cond10 = phi i32 [ %20, %cond.true7 ], [ %21, %cond.false8 ], !dbg !6722
  store i32 %cond10, i32* %tmp5, align 4, !dbg !6722
  %22 = load i32, i32* %tmp5, align 4, !dbg !6722
  store i32 %22, i32* %mt_slots, align 4, !dbg !6728
  br label %if.end17, !dbg !6729

if.else11:                                        ; preds = %if.else
  %23 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !6730
  %absbit12 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %23, i32 0, i32 8, !dbg !6732
  %arraydecay13 = getelementptr inbounds [1 x i64], [1 x i64]* %absbit12, i64 0, i64 0, !dbg !6730
  %call14 = call zeroext i1 @test_bit(i64 53, i64* %arraydecay13) #11, !dbg !6733
  br i1 %call14, label %if.then15, label %if.else16, !dbg !6734

if.then15:                                        ; preds = %if.else11
  store i32 2, i32* %mt_slots, align 4, !dbg !6735
  br label %if.end, !dbg !6737

if.else16:                                        ; preds = %if.else11
  store i32 0, i32* %mt_slots, align 4, !dbg !6738
  br label %if.end

if.end:                                           ; preds = %if.else16, %if.then15
  br label %if.end17

if.end17:                                         ; preds = %if.end, %cond.end9
  br label %if.end18

if.end18:                                         ; preds = %if.end17, %if.then
  %24 = load i32, i32* %mt_slots, align 4, !dbg !6740
  %add19 = add i32 %24, 1, !dbg !6741
  store i32 %add19, i32* %events, align 4, !dbg !6742
  %25 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !6743
  %evbit = getelementptr inbounds %struct.input_dev, %struct.input_dev* %25, i32 0, i32 5, !dbg !6745
  %arraydecay20 = getelementptr inbounds [1 x i64], [1 x i64]* %evbit, i64 0, i64 0, !dbg !6743
  %call21 = call zeroext i1 @test_bit(i64 3, i64* %arraydecay20) #11, !dbg !6746
  br i1 %call21, label %if.then22, label %if.end41, !dbg !6747

if.then22:                                        ; preds = %if.end18
  %26 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !6748
  %absbit23 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %26, i32 0, i32 8, !dbg !6748
  %arraydecay24 = getelementptr inbounds [1 x i64], [1 x i64]* %absbit23, i64 0, i64 0, !dbg !6748
  %call25 = call i64 @find_first_bit(i64* %arraydecay24, i64 64) #11, !dbg !6748
  %conv = trunc i64 %call25 to i32, !dbg !6748
  store i32 %conv, i32* %i, align 4, !dbg !6748
  br label %for.cond, !dbg !6748

for.cond:                                         ; preds = %for.inc, %if.then22
  %27 = load i32, i32* %i, align 4, !dbg !6750
  %cmp26 = icmp slt i32 %27, 64, !dbg !6750
  br i1 %cmp26, label %for.body, label %for.end, !dbg !6748

for.body:                                         ; preds = %for.cond
  %28 = load i32, i32* %i, align 4, !dbg !6752
  %call28 = call zeroext i1 @input_is_mt_axis(i32 %28) #11, !dbg !6753
  br i1 %call28, label %cond.true30, label %cond.false31, !dbg !6753

cond.true30:                                      ; preds = %for.body
  %29 = load i32, i32* %mt_slots, align 4, !dbg !6754
  br label %cond.end32, !dbg !6753

cond.false31:                                     ; preds = %for.body
  br label %cond.end32, !dbg !6753

cond.end32:                                       ; preds = %cond.false31, %cond.true30
  %cond33 = phi i32 [ %29, %cond.true30 ], [ 1, %cond.false31 ], !dbg !6753
  %30 = load i32, i32* %events, align 4, !dbg !6755
  %add34 = add i32 %30, %cond33, !dbg !6755
  store i32 %add34, i32* %events, align 4, !dbg !6755
  br label %for.inc, !dbg !6756

for.inc:                                          ; preds = %cond.end32
  %31 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !6750
  %absbit35 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %31, i32 0, i32 8, !dbg !6750
  %arraydecay36 = getelementptr inbounds [1 x i64], [1 x i64]* %absbit35, i64 0, i64 0, !dbg !6750
  %32 = load i32, i32* %i, align 4, !dbg !6750
  %add37 = add i32 %32, 1, !dbg !6750
  %conv38 = sext i32 %add37 to i64, !dbg !6750
  %call39 = call i64 @find_next_bit(i64* %arraydecay36, i64 64, i64 %conv38) #11, !dbg !6750
  %conv40 = trunc i64 %call39 to i32, !dbg !6750
  store i32 %conv40, i32* %i, align 4, !dbg !6750
  br label %for.cond, !dbg !6750, !llvm.loop !6757

for.end:                                          ; preds = %for.cond
  br label %if.end41, !dbg !6758

if.end41:                                         ; preds = %for.end, %if.end18
  %33 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !6759
  %evbit42 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %33, i32 0, i32 5, !dbg !6760
  %arraydecay43 = getelementptr inbounds [1 x i64], [1 x i64]* %evbit42, i64 0, i64 0, !dbg !6759
  %call44 = call zeroext i1 @test_bit(i64 2, i64* %arraydecay43) #11, !dbg !6761
  br i1 %call44, label %if.then45, label %if.end49, !dbg !6762

if.then45:                                        ; preds = %if.end41
  %34 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !6763
  %relbit = getelementptr inbounds %struct.input_dev, %struct.input_dev* %34, i32 0, i32 7, !dbg !6764
  %arraydecay46 = getelementptr inbounds [1 x i64], [1 x i64]* %relbit, i64 0, i64 0, !dbg !6763
  store i64* %arraydecay46, i64** %src.addr.i, align 8
  store i32 16, i32* %nbits.addr.i, align 4
  %35 = load i32, i32* %nbits.addr.i, align 4, !dbg !6765
  %36 = call i1 @llvm.is.constant.i32(i32 %35) #7, !dbg !6765
  br i1 %36, label %land.lhs.true.i, label %if.end.i, !dbg !6765

land.lhs.true.i:                                  ; preds = %if.then45
  %37 = load i32, i32* %nbits.addr.i, align 4, !dbg !6765
  %cmp.i = icmp ule i32 %37, 64, !dbg !6765
  br i1 %cmp.i, label %land.lhs.true1.i, label %if.end.i, !dbg !6765

land.lhs.true1.i:                                 ; preds = %land.lhs.true.i
  %38 = load i32, i32* %nbits.addr.i, align 4, !dbg !6765
  %cmp2.i = icmp ugt i32 %38, 0, !dbg !6765
  br i1 %cmp2.i, label %if.then.i, label %if.end.i, !dbg !6766

if.then.i:                                        ; preds = %land.lhs.true1.i
  %39 = load i64*, i64** %src.addr.i, align 8, !dbg !6767
  %40 = load i64, i64* %39, align 8, !dbg !6768
  %41 = load i32, i32* %nbits.addr.i, align 4, !dbg !6769
  %sub.i = sub i32 0, %41, !dbg !6769
  %and.i = and i32 %sub.i, 63, !dbg !6769
  %sh_prom.i = zext i32 %and.i to i64, !dbg !6769
  %shr.i = lshr i64 -1, %sh_prom.i, !dbg !6769
  %and3.i = and i64 %40, %shr.i, !dbg !6770
  store i64 %and3.i, i64* %w.addr.i.i, align 8
  %42 = load i64, i64* %w.addr.i.i, align 8, !dbg !6771
  %43 = call i1 @llvm.is.constant.i64(i64 %42) #7, !dbg !6771
  br i1 %43, label %cond.true.i.i, label %cond.false.i.i, !dbg !6771

cond.true.i.i:                                    ; preds = %if.then.i
  %44 = load i64, i64* %w.addr.i.i, align 8, !dbg !6771
  %and.i.i = and i64 %44, 1, !dbg !6771
  %tobool.i.i = icmp ne i64 %and.i.i, 0, !dbg !6771
  %lnot.i.i = xor i1 %tobool.i.i, true, !dbg !6771
  %lnot.ext.i.i = zext i1 %tobool.i.i to i32, !dbg !6771
  %45 = load i64, i64* %w.addr.i.i, align 8, !dbg !6771
  %and2.i.i = and i64 %45, 2, !dbg !6771
  %tobool3.i.i = icmp ne i64 %and2.i.i, 0, !dbg !6771
  %lnot4.i.i = xor i1 %tobool3.i.i, true, !dbg !6771
  %lnot.ext7.i.i = zext i1 %tobool3.i.i to i32, !dbg !6771
  %add.i.i = add i32 %lnot.ext.i.i, %lnot.ext7.i.i, !dbg !6771
  %46 = load i64, i64* %w.addr.i.i, align 8, !dbg !6771
  %and8.i.i = and i64 %46, 4, !dbg !6771
  %tobool9.i.i = icmp ne i64 %and8.i.i, 0, !dbg !6771
  %lnot10.i.i = xor i1 %tobool9.i.i, true, !dbg !6771
  %lnot.ext13.i.i = zext i1 %tobool9.i.i to i32, !dbg !6771
  %add14.i.i = add i32 %add.i.i, %lnot.ext13.i.i, !dbg !6771
  %47 = load i64, i64* %w.addr.i.i, align 8, !dbg !6771
  %and15.i.i = and i64 %47, 8, !dbg !6771
  %tobool16.i.i = icmp ne i64 %and15.i.i, 0, !dbg !6771
  %lnot17.i.i = xor i1 %tobool16.i.i, true, !dbg !6771
  %lnot.ext20.i.i = zext i1 %tobool16.i.i to i32, !dbg !6771
  %add21.i.i = add i32 %add14.i.i, %lnot.ext20.i.i, !dbg !6771
  %48 = load i64, i64* %w.addr.i.i, align 8, !dbg !6771
  %and22.i.i = and i64 %48, 16, !dbg !6771
  %tobool23.i.i = icmp ne i64 %and22.i.i, 0, !dbg !6771
  %lnot24.i.i = xor i1 %tobool23.i.i, true, !dbg !6771
  %lnot.ext27.i.i = zext i1 %tobool23.i.i to i32, !dbg !6771
  %add28.i.i = add i32 %add21.i.i, %lnot.ext27.i.i, !dbg !6771
  %49 = load i64, i64* %w.addr.i.i, align 8, !dbg !6771
  %and29.i.i = and i64 %49, 32, !dbg !6771
  %tobool30.i.i = icmp ne i64 %and29.i.i, 0, !dbg !6771
  %lnot31.i.i = xor i1 %tobool30.i.i, true, !dbg !6771
  %lnot.ext34.i.i = zext i1 %tobool30.i.i to i32, !dbg !6771
  %add35.i.i = add i32 %add28.i.i, %lnot.ext34.i.i, !dbg !6771
  %50 = load i64, i64* %w.addr.i.i, align 8, !dbg !6771
  %and36.i.i = and i64 %50, 64, !dbg !6771
  %tobool37.i.i = icmp ne i64 %and36.i.i, 0, !dbg !6771
  %lnot38.i.i = xor i1 %tobool37.i.i, true, !dbg !6771
  %lnot.ext41.i.i = zext i1 %tobool37.i.i to i32, !dbg !6771
  %add42.i.i = add i32 %add35.i.i, %lnot.ext41.i.i, !dbg !6771
  %51 = load i64, i64* %w.addr.i.i, align 8, !dbg !6771
  %and43.i.i = and i64 %51, 128, !dbg !6771
  %tobool44.i.i = icmp ne i64 %and43.i.i, 0, !dbg !6771
  %lnot45.i.i = xor i1 %tobool44.i.i, true, !dbg !6771
  %lnot.ext48.i.i = zext i1 %tobool44.i.i to i32, !dbg !6771
  %add49.i.i = add i32 %add42.i.i, %lnot.ext48.i.i, !dbg !6771
  %52 = load i64, i64* %w.addr.i.i, align 8, !dbg !6771
  %shr.i.i = lshr i64 %52, 8, !dbg !6771
  %and50.i.i = and i64 %shr.i.i, 1, !dbg !6771
  %tobool51.i.i = icmp ne i64 %and50.i.i, 0, !dbg !6771
  %lnot52.i.i = xor i1 %tobool51.i.i, true, !dbg !6771
  %lnot.ext55.i.i = zext i1 %tobool51.i.i to i32, !dbg !6771
  %53 = load i64, i64* %w.addr.i.i, align 8, !dbg !6771
  %shr56.i.i = lshr i64 %53, 8, !dbg !6771
  %and57.i.i = and i64 %shr56.i.i, 2, !dbg !6771
  %tobool58.i.i = icmp ne i64 %and57.i.i, 0, !dbg !6771
  %lnot59.i.i = xor i1 %tobool58.i.i, true, !dbg !6771
  %lnot.ext62.i.i = zext i1 %tobool58.i.i to i32, !dbg !6771
  %add63.i.i = add i32 %lnot.ext55.i.i, %lnot.ext62.i.i, !dbg !6771
  %54 = load i64, i64* %w.addr.i.i, align 8, !dbg !6771
  %shr64.i.i = lshr i64 %54, 8, !dbg !6771
  %and65.i.i = and i64 %shr64.i.i, 4, !dbg !6771
  %tobool66.i.i = icmp ne i64 %and65.i.i, 0, !dbg !6771
  %lnot67.i.i = xor i1 %tobool66.i.i, true, !dbg !6771
  %lnot.ext70.i.i = zext i1 %tobool66.i.i to i32, !dbg !6771
  %add71.i.i = add i32 %add63.i.i, %lnot.ext70.i.i, !dbg !6771
  %55 = load i64, i64* %w.addr.i.i, align 8, !dbg !6771
  %shr72.i.i = lshr i64 %55, 8, !dbg !6771
  %and73.i.i = and i64 %shr72.i.i, 8, !dbg !6771
  %tobool74.i.i = icmp ne i64 %and73.i.i, 0, !dbg !6771
  %lnot75.i.i = xor i1 %tobool74.i.i, true, !dbg !6771
  %lnot.ext78.i.i = zext i1 %tobool74.i.i to i32, !dbg !6771
  %add79.i.i = add i32 %add71.i.i, %lnot.ext78.i.i, !dbg !6771
  %56 = load i64, i64* %w.addr.i.i, align 8, !dbg !6771
  %shr80.i.i = lshr i64 %56, 8, !dbg !6771
  %and81.i.i = and i64 %shr80.i.i, 16, !dbg !6771
  %tobool82.i.i = icmp ne i64 %and81.i.i, 0, !dbg !6771
  %lnot83.i.i = xor i1 %tobool82.i.i, true, !dbg !6771
  %lnot.ext86.i.i = zext i1 %tobool82.i.i to i32, !dbg !6771
  %add87.i.i = add i32 %add79.i.i, %lnot.ext86.i.i, !dbg !6771
  %57 = load i64, i64* %w.addr.i.i, align 8, !dbg !6771
  %shr88.i.i = lshr i64 %57, 8, !dbg !6771
  %and89.i.i = and i64 %shr88.i.i, 32, !dbg !6771
  %tobool90.i.i = icmp ne i64 %and89.i.i, 0, !dbg !6771
  %lnot91.i.i = xor i1 %tobool90.i.i, true, !dbg !6771
  %lnot.ext94.i.i = zext i1 %tobool90.i.i to i32, !dbg !6771
  %add95.i.i = add i32 %add87.i.i, %lnot.ext94.i.i, !dbg !6771
  %58 = load i64, i64* %w.addr.i.i, align 8, !dbg !6771
  %shr96.i.i = lshr i64 %58, 8, !dbg !6771
  %and97.i.i = and i64 %shr96.i.i, 64, !dbg !6771
  %tobool98.i.i = icmp ne i64 %and97.i.i, 0, !dbg !6771
  %lnot99.i.i = xor i1 %tobool98.i.i, true, !dbg !6771
  %lnot.ext102.i.i = zext i1 %tobool98.i.i to i32, !dbg !6771
  %add103.i.i = add i32 %add95.i.i, %lnot.ext102.i.i, !dbg !6771
  %59 = load i64, i64* %w.addr.i.i, align 8, !dbg !6771
  %shr104.i.i = lshr i64 %59, 8, !dbg !6771
  %and105.i.i = and i64 %shr104.i.i, 128, !dbg !6771
  %tobool106.i.i = icmp ne i64 %and105.i.i, 0, !dbg !6771
  %lnot107.i.i = xor i1 %tobool106.i.i, true, !dbg !6771
  %lnot.ext110.i.i = zext i1 %tobool106.i.i to i32, !dbg !6771
  %add111.i.i = add i32 %add103.i.i, %lnot.ext110.i.i, !dbg !6771
  %add112.i.i = add i32 %add49.i.i, %add111.i.i, !dbg !6771
  %60 = load i64, i64* %w.addr.i.i, align 8, !dbg !6771
  %shr113.i.i = lshr i64 %60, 16, !dbg !6771
  %and114.i.i = and i64 %shr113.i.i, 1, !dbg !6771
  %tobool115.i.i = icmp ne i64 %and114.i.i, 0, !dbg !6771
  %lnot116.i.i = xor i1 %tobool115.i.i, true, !dbg !6771
  %lnot.ext119.i.i = zext i1 %tobool115.i.i to i32, !dbg !6771
  %61 = load i64, i64* %w.addr.i.i, align 8, !dbg !6771
  %shr120.i.i = lshr i64 %61, 16, !dbg !6771
  %and121.i.i = and i64 %shr120.i.i, 2, !dbg !6771
  %tobool122.i.i = icmp ne i64 %and121.i.i, 0, !dbg !6771
  %lnot123.i.i = xor i1 %tobool122.i.i, true, !dbg !6771
  %lnot.ext126.i.i = zext i1 %tobool122.i.i to i32, !dbg !6771
  %add127.i.i = add i32 %lnot.ext119.i.i, %lnot.ext126.i.i, !dbg !6771
  %62 = load i64, i64* %w.addr.i.i, align 8, !dbg !6771
  %shr128.i.i = lshr i64 %62, 16, !dbg !6771
  %and129.i.i = and i64 %shr128.i.i, 4, !dbg !6771
  %tobool130.i.i = icmp ne i64 %and129.i.i, 0, !dbg !6771
  %lnot131.i.i = xor i1 %tobool130.i.i, true, !dbg !6771
  %lnot.ext134.i.i = zext i1 %tobool130.i.i to i32, !dbg !6771
  %add135.i.i = add i32 %add127.i.i, %lnot.ext134.i.i, !dbg !6771
  %63 = load i64, i64* %w.addr.i.i, align 8, !dbg !6771
  %shr136.i.i = lshr i64 %63, 16, !dbg !6771
  %and137.i.i = and i64 %shr136.i.i, 8, !dbg !6771
  %tobool138.i.i = icmp ne i64 %and137.i.i, 0, !dbg !6771
  %lnot139.i.i = xor i1 %tobool138.i.i, true, !dbg !6771
  %lnot.ext142.i.i = zext i1 %tobool138.i.i to i32, !dbg !6771
  %add143.i.i = add i32 %add135.i.i, %lnot.ext142.i.i, !dbg !6771
  %64 = load i64, i64* %w.addr.i.i, align 8, !dbg !6771
  %shr144.i.i = lshr i64 %64, 16, !dbg !6771
  %and145.i.i = and i64 %shr144.i.i, 16, !dbg !6771
  %tobool146.i.i = icmp ne i64 %and145.i.i, 0, !dbg !6771
  %lnot147.i.i = xor i1 %tobool146.i.i, true, !dbg !6771
  %lnot.ext150.i.i = zext i1 %tobool146.i.i to i32, !dbg !6771
  %add151.i.i = add i32 %add143.i.i, %lnot.ext150.i.i, !dbg !6771
  %65 = load i64, i64* %w.addr.i.i, align 8, !dbg !6771
  %shr152.i.i = lshr i64 %65, 16, !dbg !6771
  %and153.i.i = and i64 %shr152.i.i, 32, !dbg !6771
  %tobool154.i.i = icmp ne i64 %and153.i.i, 0, !dbg !6771
  %lnot155.i.i = xor i1 %tobool154.i.i, true, !dbg !6771
  %lnot.ext158.i.i = zext i1 %tobool154.i.i to i32, !dbg !6771
  %add159.i.i = add i32 %add151.i.i, %lnot.ext158.i.i, !dbg !6771
  %66 = load i64, i64* %w.addr.i.i, align 8, !dbg !6771
  %shr160.i.i = lshr i64 %66, 16, !dbg !6771
  %and161.i.i = and i64 %shr160.i.i, 64, !dbg !6771
  %tobool162.i.i = icmp ne i64 %and161.i.i, 0, !dbg !6771
  %lnot163.i.i = xor i1 %tobool162.i.i, true, !dbg !6771
  %lnot.ext166.i.i = zext i1 %tobool162.i.i to i32, !dbg !6771
  %add167.i.i = add i32 %add159.i.i, %lnot.ext166.i.i, !dbg !6771
  %67 = load i64, i64* %w.addr.i.i, align 8, !dbg !6771
  %shr168.i.i = lshr i64 %67, 16, !dbg !6771
  %and169.i.i = and i64 %shr168.i.i, 128, !dbg !6771
  %tobool170.i.i = icmp ne i64 %and169.i.i, 0, !dbg !6771
  %lnot171.i.i = xor i1 %tobool170.i.i, true, !dbg !6771
  %lnot.ext174.i.i = zext i1 %tobool170.i.i to i32, !dbg !6771
  %add175.i.i = add i32 %add167.i.i, %lnot.ext174.i.i, !dbg !6771
  %68 = load i64, i64* %w.addr.i.i, align 8, !dbg !6771
  %shr176.i.i = lshr i64 %68, 16, !dbg !6771
  %shr177.i.i = lshr i64 %shr176.i.i, 8, !dbg !6771
  %and178.i.i = and i64 %shr177.i.i, 1, !dbg !6771
  %tobool179.i.i = icmp ne i64 %and178.i.i, 0, !dbg !6771
  %lnot180.i.i = xor i1 %tobool179.i.i, true, !dbg !6771
  %lnot.ext183.i.i = zext i1 %tobool179.i.i to i32, !dbg !6771
  %69 = load i64, i64* %w.addr.i.i, align 8, !dbg !6771
  %shr184.i.i = lshr i64 %69, 16, !dbg !6771
  %shr185.i.i = lshr i64 %shr184.i.i, 8, !dbg !6771
  %and186.i.i = and i64 %shr185.i.i, 2, !dbg !6771
  %tobool187.i.i = icmp ne i64 %and186.i.i, 0, !dbg !6771
  %lnot188.i.i = xor i1 %tobool187.i.i, true, !dbg !6771
  %lnot.ext191.i.i = zext i1 %tobool187.i.i to i32, !dbg !6771
  %add192.i.i = add i32 %lnot.ext183.i.i, %lnot.ext191.i.i, !dbg !6771
  %70 = load i64, i64* %w.addr.i.i, align 8, !dbg !6771
  %shr193.i.i = lshr i64 %70, 16, !dbg !6771
  %shr194.i.i = lshr i64 %shr193.i.i, 8, !dbg !6771
  %and195.i.i = and i64 %shr194.i.i, 4, !dbg !6771
  %tobool196.i.i = icmp ne i64 %and195.i.i, 0, !dbg !6771
  %lnot197.i.i = xor i1 %tobool196.i.i, true, !dbg !6771
  %lnot.ext200.i.i = zext i1 %tobool196.i.i to i32, !dbg !6771
  %add201.i.i = add i32 %add192.i.i, %lnot.ext200.i.i, !dbg !6771
  %71 = load i64, i64* %w.addr.i.i, align 8, !dbg !6771
  %shr202.i.i = lshr i64 %71, 16, !dbg !6771
  %shr203.i.i = lshr i64 %shr202.i.i, 8, !dbg !6771
  %and204.i.i = and i64 %shr203.i.i, 8, !dbg !6771
  %tobool205.i.i = icmp ne i64 %and204.i.i, 0, !dbg !6771
  %lnot206.i.i = xor i1 %tobool205.i.i, true, !dbg !6771
  %lnot.ext209.i.i = zext i1 %tobool205.i.i to i32, !dbg !6771
  %add210.i.i = add i32 %add201.i.i, %lnot.ext209.i.i, !dbg !6771
  %72 = load i64, i64* %w.addr.i.i, align 8, !dbg !6771
  %shr211.i.i = lshr i64 %72, 16, !dbg !6771
  %shr212.i.i = lshr i64 %shr211.i.i, 8, !dbg !6771
  %and213.i.i = and i64 %shr212.i.i, 16, !dbg !6771
  %tobool214.i.i = icmp ne i64 %and213.i.i, 0, !dbg !6771
  %lnot215.i.i = xor i1 %tobool214.i.i, true, !dbg !6771
  %lnot.ext218.i.i = zext i1 %tobool214.i.i to i32, !dbg !6771
  %add219.i.i = add i32 %add210.i.i, %lnot.ext218.i.i, !dbg !6771
  %73 = load i64, i64* %w.addr.i.i, align 8, !dbg !6771
  %shr220.i.i = lshr i64 %73, 16, !dbg !6771
  %shr221.i.i = lshr i64 %shr220.i.i, 8, !dbg !6771
  %and222.i.i = and i64 %shr221.i.i, 32, !dbg !6771
  %tobool223.i.i = icmp ne i64 %and222.i.i, 0, !dbg !6771
  %lnot224.i.i = xor i1 %tobool223.i.i, true, !dbg !6771
  %lnot.ext227.i.i = zext i1 %tobool223.i.i to i32, !dbg !6771
  %add228.i.i = add i32 %add219.i.i, %lnot.ext227.i.i, !dbg !6771
  %74 = load i64, i64* %w.addr.i.i, align 8, !dbg !6771
  %shr229.i.i = lshr i64 %74, 16, !dbg !6771
  %shr230.i.i = lshr i64 %shr229.i.i, 8, !dbg !6771
  %and231.i.i = and i64 %shr230.i.i, 64, !dbg !6771
  %tobool232.i.i = icmp ne i64 %and231.i.i, 0, !dbg !6771
  %lnot233.i.i = xor i1 %tobool232.i.i, true, !dbg !6771
  %lnot.ext236.i.i = zext i1 %tobool232.i.i to i32, !dbg !6771
  %add237.i.i = add i32 %add228.i.i, %lnot.ext236.i.i, !dbg !6771
  %75 = load i64, i64* %w.addr.i.i, align 8, !dbg !6771
  %shr238.i.i = lshr i64 %75, 16, !dbg !6771
  %shr239.i.i = lshr i64 %shr238.i.i, 8, !dbg !6771
  %and240.i.i = and i64 %shr239.i.i, 128, !dbg !6771
  %tobool241.i.i = icmp ne i64 %and240.i.i, 0, !dbg !6771
  %lnot242.i.i = xor i1 %tobool241.i.i, true, !dbg !6771
  %lnot.ext245.i.i = zext i1 %tobool241.i.i to i32, !dbg !6771
  %add246.i.i = add i32 %add237.i.i, %lnot.ext245.i.i, !dbg !6771
  %add247.i.i = add i32 %add175.i.i, %add246.i.i, !dbg !6771
  %add248.i.i = add i32 %add112.i.i, %add247.i.i, !dbg !6771
  %76 = load i64, i64* %w.addr.i.i, align 8, !dbg !6771
  %shr249.i.i = lshr i64 %76, 32, !dbg !6771
  %and250.i.i = and i64 %shr249.i.i, 1, !dbg !6771
  %tobool251.i.i = icmp ne i64 %and250.i.i, 0, !dbg !6771
  %lnot252.i.i = xor i1 %tobool251.i.i, true, !dbg !6771
  %lnot.ext255.i.i = zext i1 %tobool251.i.i to i32, !dbg !6771
  %77 = load i64, i64* %w.addr.i.i, align 8, !dbg !6771
  %shr256.i.i = lshr i64 %77, 32, !dbg !6771
  %and257.i.i = and i64 %shr256.i.i, 2, !dbg !6771
  %tobool258.i.i = icmp ne i64 %and257.i.i, 0, !dbg !6771
  %lnot259.i.i = xor i1 %tobool258.i.i, true, !dbg !6771
  %lnot.ext262.i.i = zext i1 %tobool258.i.i to i32, !dbg !6771
  %add263.i.i = add i32 %lnot.ext255.i.i, %lnot.ext262.i.i, !dbg !6771
  %78 = load i64, i64* %w.addr.i.i, align 8, !dbg !6771
  %shr264.i.i = lshr i64 %78, 32, !dbg !6771
  %and265.i.i = and i64 %shr264.i.i, 4, !dbg !6771
  %tobool266.i.i = icmp ne i64 %and265.i.i, 0, !dbg !6771
  %lnot267.i.i = xor i1 %tobool266.i.i, true, !dbg !6771
  %lnot.ext270.i.i = zext i1 %tobool266.i.i to i32, !dbg !6771
  %add271.i.i = add i32 %add263.i.i, %lnot.ext270.i.i, !dbg !6771
  %79 = load i64, i64* %w.addr.i.i, align 8, !dbg !6771
  %shr272.i.i = lshr i64 %79, 32, !dbg !6771
  %and273.i.i = and i64 %shr272.i.i, 8, !dbg !6771
  %tobool274.i.i = icmp ne i64 %and273.i.i, 0, !dbg !6771
  %lnot275.i.i = xor i1 %tobool274.i.i, true, !dbg !6771
  %lnot.ext278.i.i = zext i1 %tobool274.i.i to i32, !dbg !6771
  %add279.i.i = add i32 %add271.i.i, %lnot.ext278.i.i, !dbg !6771
  %80 = load i64, i64* %w.addr.i.i, align 8, !dbg !6771
  %shr280.i.i = lshr i64 %80, 32, !dbg !6771
  %and281.i.i = and i64 %shr280.i.i, 16, !dbg !6771
  %tobool282.i.i = icmp ne i64 %and281.i.i, 0, !dbg !6771
  %lnot283.i.i = xor i1 %tobool282.i.i, true, !dbg !6771
  %lnot.ext286.i.i = zext i1 %tobool282.i.i to i32, !dbg !6771
  %add287.i.i = add i32 %add279.i.i, %lnot.ext286.i.i, !dbg !6771
  %81 = load i64, i64* %w.addr.i.i, align 8, !dbg !6771
  %shr288.i.i = lshr i64 %81, 32, !dbg !6771
  %and289.i.i = and i64 %shr288.i.i, 32, !dbg !6771
  %tobool290.i.i = icmp ne i64 %and289.i.i, 0, !dbg !6771
  %lnot291.i.i = xor i1 %tobool290.i.i, true, !dbg !6771
  %lnot.ext294.i.i = zext i1 %tobool290.i.i to i32, !dbg !6771
  %add295.i.i = add i32 %add287.i.i, %lnot.ext294.i.i, !dbg !6771
  %82 = load i64, i64* %w.addr.i.i, align 8, !dbg !6771
  %shr296.i.i = lshr i64 %82, 32, !dbg !6771
  %and297.i.i = and i64 %shr296.i.i, 64, !dbg !6771
  %tobool298.i.i = icmp ne i64 %and297.i.i, 0, !dbg !6771
  %lnot299.i.i = xor i1 %tobool298.i.i, true, !dbg !6771
  %lnot.ext302.i.i = zext i1 %tobool298.i.i to i32, !dbg !6771
  %add303.i.i = add i32 %add295.i.i, %lnot.ext302.i.i, !dbg !6771
  %83 = load i64, i64* %w.addr.i.i, align 8, !dbg !6771
  %shr304.i.i = lshr i64 %83, 32, !dbg !6771
  %and305.i.i = and i64 %shr304.i.i, 128, !dbg !6771
  %tobool306.i.i = icmp ne i64 %and305.i.i, 0, !dbg !6771
  %lnot307.i.i = xor i1 %tobool306.i.i, true, !dbg !6771
  %lnot.ext310.i.i = zext i1 %tobool306.i.i to i32, !dbg !6771
  %add311.i.i = add i32 %add303.i.i, %lnot.ext310.i.i, !dbg !6771
  %84 = load i64, i64* %w.addr.i.i, align 8, !dbg !6771
  %shr312.i.i = lshr i64 %84, 32, !dbg !6771
  %shr313.i.i = lshr i64 %shr312.i.i, 8, !dbg !6771
  %and314.i.i = and i64 %shr313.i.i, 1, !dbg !6771
  %tobool315.i.i = icmp ne i64 %and314.i.i, 0, !dbg !6771
  %lnot316.i.i = xor i1 %tobool315.i.i, true, !dbg !6771
  %lnot.ext319.i.i = zext i1 %tobool315.i.i to i32, !dbg !6771
  %85 = load i64, i64* %w.addr.i.i, align 8, !dbg !6771
  %shr320.i.i = lshr i64 %85, 32, !dbg !6771
  %shr321.i.i = lshr i64 %shr320.i.i, 8, !dbg !6771
  %and322.i.i = and i64 %shr321.i.i, 2, !dbg !6771
  %tobool323.i.i = icmp ne i64 %and322.i.i, 0, !dbg !6771
  %lnot324.i.i = xor i1 %tobool323.i.i, true, !dbg !6771
  %lnot.ext327.i.i = zext i1 %tobool323.i.i to i32, !dbg !6771
  %add328.i.i = add i32 %lnot.ext319.i.i, %lnot.ext327.i.i, !dbg !6771
  %86 = load i64, i64* %w.addr.i.i, align 8, !dbg !6771
  %shr329.i.i = lshr i64 %86, 32, !dbg !6771
  %shr330.i.i = lshr i64 %shr329.i.i, 8, !dbg !6771
  %and331.i.i = and i64 %shr330.i.i, 4, !dbg !6771
  %tobool332.i.i = icmp ne i64 %and331.i.i, 0, !dbg !6771
  %lnot333.i.i = xor i1 %tobool332.i.i, true, !dbg !6771
  %lnot.ext336.i.i = zext i1 %tobool332.i.i to i32, !dbg !6771
  %add337.i.i = add i32 %add328.i.i, %lnot.ext336.i.i, !dbg !6771
  %87 = load i64, i64* %w.addr.i.i, align 8, !dbg !6771
  %shr338.i.i = lshr i64 %87, 32, !dbg !6771
  %shr339.i.i = lshr i64 %shr338.i.i, 8, !dbg !6771
  %and340.i.i = and i64 %shr339.i.i, 8, !dbg !6771
  %tobool341.i.i = icmp ne i64 %and340.i.i, 0, !dbg !6771
  %lnot342.i.i = xor i1 %tobool341.i.i, true, !dbg !6771
  %lnot.ext345.i.i = zext i1 %tobool341.i.i to i32, !dbg !6771
  %add346.i.i = add i32 %add337.i.i, %lnot.ext345.i.i, !dbg !6771
  %88 = load i64, i64* %w.addr.i.i, align 8, !dbg !6771
  %shr347.i.i = lshr i64 %88, 32, !dbg !6771
  %shr348.i.i = lshr i64 %shr347.i.i, 8, !dbg !6771
  %and349.i.i = and i64 %shr348.i.i, 16, !dbg !6771
  %tobool350.i.i = icmp ne i64 %and349.i.i, 0, !dbg !6771
  %lnot351.i.i = xor i1 %tobool350.i.i, true, !dbg !6771
  %lnot.ext354.i.i = zext i1 %tobool350.i.i to i32, !dbg !6771
  %add355.i.i = add i32 %add346.i.i, %lnot.ext354.i.i, !dbg !6771
  %89 = load i64, i64* %w.addr.i.i, align 8, !dbg !6771
  %shr356.i.i = lshr i64 %89, 32, !dbg !6771
  %shr357.i.i = lshr i64 %shr356.i.i, 8, !dbg !6771
  %and358.i.i = and i64 %shr357.i.i, 32, !dbg !6771
  %tobool359.i.i = icmp ne i64 %and358.i.i, 0, !dbg !6771
  %lnot360.i.i = xor i1 %tobool359.i.i, true, !dbg !6771
  %lnot.ext363.i.i = zext i1 %tobool359.i.i to i32, !dbg !6771
  %add364.i.i = add i32 %add355.i.i, %lnot.ext363.i.i, !dbg !6771
  %90 = load i64, i64* %w.addr.i.i, align 8, !dbg !6771
  %shr365.i.i = lshr i64 %90, 32, !dbg !6771
  %shr366.i.i = lshr i64 %shr365.i.i, 8, !dbg !6771
  %and367.i.i = and i64 %shr366.i.i, 64, !dbg !6771
  %tobool368.i.i = icmp ne i64 %and367.i.i, 0, !dbg !6771
  %lnot369.i.i = xor i1 %tobool368.i.i, true, !dbg !6771
  %lnot.ext372.i.i = zext i1 %tobool368.i.i to i32, !dbg !6771
  %add373.i.i = add i32 %add364.i.i, %lnot.ext372.i.i, !dbg !6771
  %91 = load i64, i64* %w.addr.i.i, align 8, !dbg !6771
  %shr374.i.i = lshr i64 %91, 32, !dbg !6771
  %shr375.i.i = lshr i64 %shr374.i.i, 8, !dbg !6771
  %and376.i.i = and i64 %shr375.i.i, 128, !dbg !6771
  %tobool377.i.i = icmp ne i64 %and376.i.i, 0, !dbg !6771
  %lnot378.i.i = xor i1 %tobool377.i.i, true, !dbg !6771
  %lnot.ext381.i.i = zext i1 %tobool377.i.i to i32, !dbg !6771
  %add382.i.i = add i32 %add373.i.i, %lnot.ext381.i.i, !dbg !6771
  %add383.i.i = add i32 %add311.i.i, %add382.i.i, !dbg !6771
  %92 = load i64, i64* %w.addr.i.i, align 8, !dbg !6771
  %shr384.i.i = lshr i64 %92, 32, !dbg !6771
  %shr385.i.i = lshr i64 %shr384.i.i, 16, !dbg !6771
  %and386.i.i = and i64 %shr385.i.i, 1, !dbg !6771
  %tobool387.i.i = icmp ne i64 %and386.i.i, 0, !dbg !6771
  %lnot388.i.i = xor i1 %tobool387.i.i, true, !dbg !6771
  %lnot.ext391.i.i = zext i1 %tobool387.i.i to i32, !dbg !6771
  %93 = load i64, i64* %w.addr.i.i, align 8, !dbg !6771
  %shr392.i.i = lshr i64 %93, 32, !dbg !6771
  %shr393.i.i = lshr i64 %shr392.i.i, 16, !dbg !6771
  %and394.i.i = and i64 %shr393.i.i, 2, !dbg !6771
  %tobool395.i.i = icmp ne i64 %and394.i.i, 0, !dbg !6771
  %lnot396.i.i = xor i1 %tobool395.i.i, true, !dbg !6771
  %lnot.ext399.i.i = zext i1 %tobool395.i.i to i32, !dbg !6771
  %add400.i.i = add i32 %lnot.ext391.i.i, %lnot.ext399.i.i, !dbg !6771
  %94 = load i64, i64* %w.addr.i.i, align 8, !dbg !6771
  %shr401.i.i = lshr i64 %94, 32, !dbg !6771
  %shr402.i.i = lshr i64 %shr401.i.i, 16, !dbg !6771
  %and403.i.i = and i64 %shr402.i.i, 4, !dbg !6771
  %tobool404.i.i = icmp ne i64 %and403.i.i, 0, !dbg !6771
  %lnot405.i.i = xor i1 %tobool404.i.i, true, !dbg !6771
  %lnot.ext408.i.i = zext i1 %tobool404.i.i to i32, !dbg !6771
  %add409.i.i = add i32 %add400.i.i, %lnot.ext408.i.i, !dbg !6771
  %95 = load i64, i64* %w.addr.i.i, align 8, !dbg !6771
  %shr410.i.i = lshr i64 %95, 32, !dbg !6771
  %shr411.i.i = lshr i64 %shr410.i.i, 16, !dbg !6771
  %and412.i.i = and i64 %shr411.i.i, 8, !dbg !6771
  %tobool413.i.i = icmp ne i64 %and412.i.i, 0, !dbg !6771
  %lnot414.i.i = xor i1 %tobool413.i.i, true, !dbg !6771
  %lnot.ext417.i.i = zext i1 %tobool413.i.i to i32, !dbg !6771
  %add418.i.i = add i32 %add409.i.i, %lnot.ext417.i.i, !dbg !6771
  %96 = load i64, i64* %w.addr.i.i, align 8, !dbg !6771
  %shr419.i.i = lshr i64 %96, 32, !dbg !6771
  %shr420.i.i = lshr i64 %shr419.i.i, 16, !dbg !6771
  %and421.i.i = and i64 %shr420.i.i, 16, !dbg !6771
  %tobool422.i.i = icmp ne i64 %and421.i.i, 0, !dbg !6771
  %lnot423.i.i = xor i1 %tobool422.i.i, true, !dbg !6771
  %lnot.ext426.i.i = zext i1 %tobool422.i.i to i32, !dbg !6771
  %add427.i.i = add i32 %add418.i.i, %lnot.ext426.i.i, !dbg !6771
  %97 = load i64, i64* %w.addr.i.i, align 8, !dbg !6771
  %shr428.i.i = lshr i64 %97, 32, !dbg !6771
  %shr429.i.i = lshr i64 %shr428.i.i, 16, !dbg !6771
  %and430.i.i = and i64 %shr429.i.i, 32, !dbg !6771
  %tobool431.i.i = icmp ne i64 %and430.i.i, 0, !dbg !6771
  %lnot432.i.i = xor i1 %tobool431.i.i, true, !dbg !6771
  %lnot.ext435.i.i = zext i1 %tobool431.i.i to i32, !dbg !6771
  %add436.i.i = add i32 %add427.i.i, %lnot.ext435.i.i, !dbg !6771
  %98 = load i64, i64* %w.addr.i.i, align 8, !dbg !6771
  %shr437.i.i = lshr i64 %98, 32, !dbg !6771
  %shr438.i.i = lshr i64 %shr437.i.i, 16, !dbg !6771
  %and439.i.i = and i64 %shr438.i.i, 64, !dbg !6771
  %tobool440.i.i = icmp ne i64 %and439.i.i, 0, !dbg !6771
  %lnot441.i.i = xor i1 %tobool440.i.i, true, !dbg !6771
  %lnot.ext444.i.i = zext i1 %tobool440.i.i to i32, !dbg !6771
  %add445.i.i = add i32 %add436.i.i, %lnot.ext444.i.i, !dbg !6771
  %99 = load i64, i64* %w.addr.i.i, align 8, !dbg !6771
  %shr446.i.i = lshr i64 %99, 32, !dbg !6771
  %shr447.i.i = lshr i64 %shr446.i.i, 16, !dbg !6771
  %and448.i.i = and i64 %shr447.i.i, 128, !dbg !6771
  %tobool449.i.i = icmp ne i64 %and448.i.i, 0, !dbg !6771
  %lnot450.i.i = xor i1 %tobool449.i.i, true, !dbg !6771
  %lnot.ext453.i.i = zext i1 %tobool449.i.i to i32, !dbg !6771
  %add454.i.i = add i32 %add445.i.i, %lnot.ext453.i.i, !dbg !6771
  %100 = load i64, i64* %w.addr.i.i, align 8, !dbg !6771
  %shr455.i.i = lshr i64 %100, 32, !dbg !6771
  %shr456.i.i = lshr i64 %shr455.i.i, 16, !dbg !6771
  %shr457.i.i = lshr i64 %shr456.i.i, 8, !dbg !6771
  %and458.i.i = and i64 %shr457.i.i, 1, !dbg !6771
  %tobool459.i.i = icmp ne i64 %and458.i.i, 0, !dbg !6771
  %lnot460.i.i = xor i1 %tobool459.i.i, true, !dbg !6771
  %lnot.ext463.i.i = zext i1 %tobool459.i.i to i32, !dbg !6771
  %101 = load i64, i64* %w.addr.i.i, align 8, !dbg !6771
  %shr464.i.i = lshr i64 %101, 32, !dbg !6771
  %shr465.i.i = lshr i64 %shr464.i.i, 16, !dbg !6771
  %shr466.i.i = lshr i64 %shr465.i.i, 8, !dbg !6771
  %and467.i.i = and i64 %shr466.i.i, 2, !dbg !6771
  %tobool468.i.i = icmp ne i64 %and467.i.i, 0, !dbg !6771
  %lnot469.i.i = xor i1 %tobool468.i.i, true, !dbg !6771
  %lnot.ext472.i.i = zext i1 %tobool468.i.i to i32, !dbg !6771
  %add473.i.i = add i32 %lnot.ext463.i.i, %lnot.ext472.i.i, !dbg !6771
  %102 = load i64, i64* %w.addr.i.i, align 8, !dbg !6771
  %shr474.i.i = lshr i64 %102, 32, !dbg !6771
  %shr475.i.i = lshr i64 %shr474.i.i, 16, !dbg !6771
  %shr476.i.i = lshr i64 %shr475.i.i, 8, !dbg !6771
  %and477.i.i = and i64 %shr476.i.i, 4, !dbg !6771
  %tobool478.i.i = icmp ne i64 %and477.i.i, 0, !dbg !6771
  %lnot479.i.i = xor i1 %tobool478.i.i, true, !dbg !6771
  %lnot.ext482.i.i = zext i1 %tobool478.i.i to i32, !dbg !6771
  %add483.i.i = add i32 %add473.i.i, %lnot.ext482.i.i, !dbg !6771
  %103 = load i64, i64* %w.addr.i.i, align 8, !dbg !6771
  %shr484.i.i = lshr i64 %103, 32, !dbg !6771
  %shr485.i.i = lshr i64 %shr484.i.i, 16, !dbg !6771
  %shr486.i.i = lshr i64 %shr485.i.i, 8, !dbg !6771
  %and487.i.i = and i64 %shr486.i.i, 8, !dbg !6771
  %tobool488.i.i = icmp ne i64 %and487.i.i, 0, !dbg !6771
  %lnot489.i.i = xor i1 %tobool488.i.i, true, !dbg !6771
  %lnot.ext492.i.i = zext i1 %tobool488.i.i to i32, !dbg !6771
  %add493.i.i = add i32 %add483.i.i, %lnot.ext492.i.i, !dbg !6771
  %104 = load i64, i64* %w.addr.i.i, align 8, !dbg !6771
  %shr494.i.i = lshr i64 %104, 32, !dbg !6771
  %shr495.i.i = lshr i64 %shr494.i.i, 16, !dbg !6771
  %shr496.i.i = lshr i64 %shr495.i.i, 8, !dbg !6771
  %and497.i.i = and i64 %shr496.i.i, 16, !dbg !6771
  %tobool498.i.i = icmp ne i64 %and497.i.i, 0, !dbg !6771
  %lnot499.i.i = xor i1 %tobool498.i.i, true, !dbg !6771
  %lnot.ext502.i.i = zext i1 %tobool498.i.i to i32, !dbg !6771
  %add503.i.i = add i32 %add493.i.i, %lnot.ext502.i.i, !dbg !6771
  %105 = load i64, i64* %w.addr.i.i, align 8, !dbg !6771
  %shr504.i.i = lshr i64 %105, 32, !dbg !6771
  %shr505.i.i = lshr i64 %shr504.i.i, 16, !dbg !6771
  %shr506.i.i = lshr i64 %shr505.i.i, 8, !dbg !6771
  %and507.i.i = and i64 %shr506.i.i, 32, !dbg !6771
  %tobool508.i.i = icmp ne i64 %and507.i.i, 0, !dbg !6771
  %lnot509.i.i = xor i1 %tobool508.i.i, true, !dbg !6771
  %lnot.ext512.i.i = zext i1 %tobool508.i.i to i32, !dbg !6771
  %add513.i.i = add i32 %add503.i.i, %lnot.ext512.i.i, !dbg !6771
  %106 = load i64, i64* %w.addr.i.i, align 8, !dbg !6771
  %shr514.i.i = lshr i64 %106, 32, !dbg !6771
  %shr515.i.i = lshr i64 %shr514.i.i, 16, !dbg !6771
  %shr516.i.i = lshr i64 %shr515.i.i, 8, !dbg !6771
  %and517.i.i = and i64 %shr516.i.i, 64, !dbg !6771
  %tobool518.i.i = icmp ne i64 %and517.i.i, 0, !dbg !6771
  %lnot519.i.i = xor i1 %tobool518.i.i, true, !dbg !6771
  %lnot.ext522.i.i = zext i1 %tobool518.i.i to i32, !dbg !6771
  %add523.i.i = add i32 %add513.i.i, %lnot.ext522.i.i, !dbg !6771
  %107 = load i64, i64* %w.addr.i.i, align 8, !dbg !6771
  %shr524.i.i = lshr i64 %107, 32, !dbg !6771
  %shr525.i.i = lshr i64 %shr524.i.i, 16, !dbg !6771
  %shr526.i.i = lshr i64 %shr525.i.i, 8, !dbg !6771
  %and527.i.i = and i64 %shr526.i.i, 128, !dbg !6771
  %tobool528.i.i = icmp ne i64 %and527.i.i, 0, !dbg !6771
  %lnot529.i.i = xor i1 %tobool528.i.i, true, !dbg !6771
  %lnot.ext532.i.i = zext i1 %tobool528.i.i to i32, !dbg !6771
  %add533.i.i = add i32 %add523.i.i, %lnot.ext532.i.i, !dbg !6771
  %add534.i.i = add i32 %add454.i.i, %add533.i.i, !dbg !6771
  %add535.i.i = add i32 %add383.i.i, %add534.i.i, !dbg !6771
  %add536.i.i = add i32 %add248.i.i, %add535.i.i, !dbg !6771
  %conv.i.i = zext i32 %add536.i.i to i64, !dbg !6771
  br label %hweight_long.exit.i, !dbg !6771

cond.false.i.i:                                   ; preds = %if.then.i
  %108 = load i64, i64* %w.addr.i.i, align 8, !dbg !6771
  store i64 %108, i64* %w.addr.i.i.i, align 8
  %109 = load i64, i64* %w.addr.i.i.i, align 8, !dbg !6772
  %110 = call i64 asm "# ALT: oldnstr\0A661:\0A\09call __sw_hweight64\0A662:\0A# ALT: padding\0A.skip -(((6651f-6641f)-(662b-661b)) > 0) * ((6651f-6641f)-(662b-661b)),0x90\0A663:\0A.pushsection .altinstructions,\22a\22\0A .long 661b - .\0A .long 6641f - .\0A .word ( 4*32+23)\0A .byte 663b-661b\0A .byte 6651f-6641f\0A .byte 663b-662b\0A.popsection\0A.pushsection .altinstr_replacement, \22ax\22\0A# ALT: replacement 1\0A6641:\0A\09popcntq $1, $0\0A6651:\0A.popsection\0A", "={ax},{di},~{dirflag},~{fpsr},~{flags}"(i64 %109) #15, !dbg !6773, !srcloc !6774
  store i64 %110, i64* %res.i.i.i, align 8, !dbg !6773
  %111 = load i64, i64* %res.i.i.i, align 8, !dbg !6775
  br label %hweight_long.exit.i, !dbg !6771

hweight_long.exit.i:                              ; preds = %cond.false.i.i, %cond.true.i.i
  %cond.i.i = phi i64 [ %conv.i.i, %cond.true.i.i ], [ %111, %cond.false.i.i ], !dbg !6771
  %conv.i = trunc i64 %cond.i.i to i32, !dbg !6776
  store i32 %conv.i, i32* %retval.i, align 4, !dbg !6777
  br label %bitmap_weight.exit, !dbg !6777

if.end.i:                                         ; preds = %land.lhs.true1.i, %land.lhs.true.i, %if.then45
  %112 = load i64*, i64** %src.addr.i, align 8, !dbg !6778
  %113 = load i32, i32* %nbits.addr.i, align 4, !dbg !6779
  %call4.i = call i32 @__bitmap_weight(i64* %112, i32 %113) #12, !dbg !6780
  store i32 %call4.i, i32* %retval.i, align 4, !dbg !6781
  br label %bitmap_weight.exit, !dbg !6781

bitmap_weight.exit:                               ; preds = %hweight_long.exit.i, %if.end.i
  %114 = load i32, i32* %retval.i, align 4, !dbg !6782
  %115 = load i32, i32* %events, align 4, !dbg !6783
  %add48 = add i32 %115, %114, !dbg !6783
  store i32 %add48, i32* %events, align 4, !dbg !6783
  br label %if.end49, !dbg !6784

if.end49:                                         ; preds = %bitmap_weight.exit, %if.end41
  %116 = load i32, i32* %events, align 4, !dbg !6785
  %add50 = add i32 %116, 7, !dbg !6785
  store i32 %add50, i32* %events, align 4, !dbg !6785
  %117 = load i32, i32* %events, align 4, !dbg !6786
  ret i32 %117, !dbg !6787
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @input_default_getkeycode(%struct.input_dev* %dev, %struct.input_keymap_entry* %ke) #0 !dbg !6788 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.input_dev*, align 8
  %ke.addr = alloca %struct.input_keymap_entry*, align 8
  %index = alloca i32, align 4
  %error = alloca i32, align 4
  store %struct.input_dev* %dev, %struct.input_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.input_dev** %dev.addr, metadata !6789, metadata !DIExpression()), !dbg !6790
  store %struct.input_keymap_entry* %ke, %struct.input_keymap_entry** %ke.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.input_keymap_entry** %ke.addr, metadata !6791, metadata !DIExpression()), !dbg !6792
  call void @llvm.dbg.declare(metadata i32* %index, metadata !6793, metadata !DIExpression()), !dbg !6794
  call void @llvm.dbg.declare(metadata i32* %error, metadata !6795, metadata !DIExpression()), !dbg !6796
  %0 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !6797
  %keycodesize = getelementptr inbounds %struct.input_dev, %struct.input_dev* %0, i32 0, i32 16, !dbg !6799
  %1 = load i32, i32* %keycodesize, align 8, !dbg !6799
  %tobool = icmp ne i32 %1, 0, !dbg !6797
  br i1 %tobool, label %if.end, label %if.then, !dbg !6800

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !6801
  br label %return, !dbg !6801

if.end:                                           ; preds = %entry
  %2 = load %struct.input_keymap_entry*, %struct.input_keymap_entry** %ke.addr, align 8, !dbg !6802
  %flags = getelementptr inbounds %struct.input_keymap_entry, %struct.input_keymap_entry* %2, i32 0, i32 0, !dbg !6804
  %3 = load i8, i8* %flags, align 4, !dbg !6804
  %conv = zext i8 %3 to i32, !dbg !6802
  %and = and i32 %conv, 1, !dbg !6805
  %tobool1 = icmp ne i32 %and, 0, !dbg !6805
  br i1 %tobool1, label %if.then2, label %if.else, !dbg !6806

if.then2:                                         ; preds = %if.end
  %4 = load %struct.input_keymap_entry*, %struct.input_keymap_entry** %ke.addr, align 8, !dbg !6807
  %index3 = getelementptr inbounds %struct.input_keymap_entry, %struct.input_keymap_entry* %4, i32 0, i32 2, !dbg !6808
  %5 = load i16, i16* %index3, align 2, !dbg !6808
  %conv4 = zext i16 %5 to i32, !dbg !6807
  store i32 %conv4, i32* %index, align 4, !dbg !6809
  br label %if.end8, !dbg !6810

if.else:                                          ; preds = %if.end
  %6 = load %struct.input_keymap_entry*, %struct.input_keymap_entry** %ke.addr, align 8, !dbg !6811
  %call = call i32 @input_scancode_to_scalar(%struct.input_keymap_entry* %6, i32* %index) #11, !dbg !6813
  store i32 %call, i32* %error, align 4, !dbg !6814
  %7 = load i32, i32* %error, align 4, !dbg !6815
  %tobool5 = icmp ne i32 %7, 0, !dbg !6815
  br i1 %tobool5, label %if.then6, label %if.end7, !dbg !6817

if.then6:                                         ; preds = %if.else
  %8 = load i32, i32* %error, align 4, !dbg !6818
  store i32 %8, i32* %retval, align 4, !dbg !6819
  br label %return, !dbg !6819

if.end7:                                          ; preds = %if.else
  br label %if.end8

if.end8:                                          ; preds = %if.end7, %if.then2
  %9 = load i32, i32* %index, align 4, !dbg !6820
  %10 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !6822
  %keycodemax = getelementptr inbounds %struct.input_dev, %struct.input_dev* %10, i32 0, i32 15, !dbg !6823
  %11 = load i32, i32* %keycodemax, align 4, !dbg !6823
  %cmp = icmp uge i32 %9, %11, !dbg !6824
  br i1 %cmp, label %if.then10, label %if.end11, !dbg !6825

if.then10:                                        ; preds = %if.end8
  store i32 -22, i32* %retval, align 4, !dbg !6826
  br label %return, !dbg !6826

if.end11:                                         ; preds = %if.end8
  %12 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !6827
  %13 = load i32, i32* %index, align 4, !dbg !6828
  %call12 = call i32 @input_fetch_keycode(%struct.input_dev* %12, i32 %13) #11, !dbg !6829
  %14 = load %struct.input_keymap_entry*, %struct.input_keymap_entry** %ke.addr, align 8, !dbg !6830
  %keycode = getelementptr inbounds %struct.input_keymap_entry, %struct.input_keymap_entry* %14, i32 0, i32 3, !dbg !6831
  store i32 %call12, i32* %keycode, align 4, !dbg !6832
  %15 = load i32, i32* %index, align 4, !dbg !6833
  %conv13 = trunc i32 %15 to i16, !dbg !6833
  %16 = load %struct.input_keymap_entry*, %struct.input_keymap_entry** %ke.addr, align 8, !dbg !6834
  %index14 = getelementptr inbounds %struct.input_keymap_entry, %struct.input_keymap_entry* %16, i32 0, i32 2, !dbg !6835
  store i16 %conv13, i16* %index14, align 2, !dbg !6836
  %17 = load %struct.input_keymap_entry*, %struct.input_keymap_entry** %ke.addr, align 8, !dbg !6837
  %len = getelementptr inbounds %struct.input_keymap_entry, %struct.input_keymap_entry* %17, i32 0, i32 1, !dbg !6838
  store i8 4, i8* %len, align 1, !dbg !6839
  %18 = load %struct.input_keymap_entry*, %struct.input_keymap_entry** %ke.addr, align 8, !dbg !6840
  %scancode = getelementptr inbounds %struct.input_keymap_entry, %struct.input_keymap_entry* %18, i32 0, i32 4, !dbg !6841
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %scancode, i64 0, i64 0, !dbg !6842
  %19 = bitcast i32* %index to i8*, !dbg !6842
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %arraydecay, i8* align 4 %19, i64 4, i1 false), !dbg !6842
  store i32 0, i32* %retval, align 4, !dbg !6843
  br label %return, !dbg !6843

return:                                           ; preds = %if.end11, %if.then10, %if.then6, %if.then
  %20 = load i32, i32* %retval, align 4, !dbg !6844
  ret i32 %20, !dbg !6844
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @input_default_setkeycode(%struct.input_dev* %dev, %struct.input_keymap_entry* %ke, i32* %old_keycode) #0 !dbg !6845 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.input_dev*, align 8
  %ke.addr = alloca %struct.input_keymap_entry*, align 8
  %old_keycode.addr = alloca i32*, align 8
  %index = alloca i32, align 4
  %error = alloca i32, align 4
  %i = alloca i32, align 4
  %k = alloca i8*, align 8
  %k28 = alloca i16*, align 8
  %k37 = alloca i32*, align 8
  store %struct.input_dev* %dev, %struct.input_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.input_dev** %dev.addr, metadata !6846, metadata !DIExpression()), !dbg !6847
  store %struct.input_keymap_entry* %ke, %struct.input_keymap_entry** %ke.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.input_keymap_entry** %ke.addr, metadata !6848, metadata !DIExpression()), !dbg !6849
  store i32* %old_keycode, i32** %old_keycode.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %old_keycode.addr, metadata !6850, metadata !DIExpression()), !dbg !6851
  call void @llvm.dbg.declare(metadata i32* %index, metadata !6852, metadata !DIExpression()), !dbg !6853
  call void @llvm.dbg.declare(metadata i32* %error, metadata !6854, metadata !DIExpression()), !dbg !6855
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6856, metadata !DIExpression()), !dbg !6857
  %0 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !6858
  %keycodesize = getelementptr inbounds %struct.input_dev, %struct.input_dev* %0, i32 0, i32 16, !dbg !6860
  %1 = load i32, i32* %keycodesize, align 8, !dbg !6860
  %tobool = icmp ne i32 %1, 0, !dbg !6858
  br i1 %tobool, label %if.end, label %if.then, !dbg !6861

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !6862
  br label %return, !dbg !6862

if.end:                                           ; preds = %entry
  %2 = load %struct.input_keymap_entry*, %struct.input_keymap_entry** %ke.addr, align 8, !dbg !6863
  %flags = getelementptr inbounds %struct.input_keymap_entry, %struct.input_keymap_entry* %2, i32 0, i32 0, !dbg !6865
  %3 = load i8, i8* %flags, align 4, !dbg !6865
  %conv = zext i8 %3 to i32, !dbg !6863
  %and = and i32 %conv, 1, !dbg !6866
  %tobool1 = icmp ne i32 %and, 0, !dbg !6866
  br i1 %tobool1, label %if.then2, label %if.else, !dbg !6867

if.then2:                                         ; preds = %if.end
  %4 = load %struct.input_keymap_entry*, %struct.input_keymap_entry** %ke.addr, align 8, !dbg !6868
  %index3 = getelementptr inbounds %struct.input_keymap_entry, %struct.input_keymap_entry* %4, i32 0, i32 2, !dbg !6870
  %5 = load i16, i16* %index3, align 2, !dbg !6870
  %conv4 = zext i16 %5 to i32, !dbg !6868
  store i32 %conv4, i32* %index, align 4, !dbg !6871
  br label %if.end8, !dbg !6872

if.else:                                          ; preds = %if.end
  %6 = load %struct.input_keymap_entry*, %struct.input_keymap_entry** %ke.addr, align 8, !dbg !6873
  %call = call i32 @input_scancode_to_scalar(%struct.input_keymap_entry* %6, i32* %index) #11, !dbg !6875
  store i32 %call, i32* %error, align 4, !dbg !6876
  %7 = load i32, i32* %error, align 4, !dbg !6877
  %tobool5 = icmp ne i32 %7, 0, !dbg !6877
  br i1 %tobool5, label %if.then6, label %if.end7, !dbg !6879

if.then6:                                         ; preds = %if.else
  %8 = load i32, i32* %error, align 4, !dbg !6880
  store i32 %8, i32* %retval, align 4, !dbg !6881
  br label %return, !dbg !6881

if.end7:                                          ; preds = %if.else
  br label %if.end8

if.end8:                                          ; preds = %if.end7, %if.then2
  %9 = load i32, i32* %index, align 4, !dbg !6882
  %10 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !6884
  %keycodemax = getelementptr inbounds %struct.input_dev, %struct.input_dev* %10, i32 0, i32 15, !dbg !6885
  %11 = load i32, i32* %keycodemax, align 4, !dbg !6885
  %cmp = icmp uge i32 %9, %11, !dbg !6886
  br i1 %cmp, label %if.then10, label %if.end11, !dbg !6887

if.then10:                                        ; preds = %if.end8
  store i32 -22, i32* %retval, align 4, !dbg !6888
  br label %return, !dbg !6888

if.end11:                                         ; preds = %if.end8
  %12 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !6889
  %keycodesize12 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %12, i32 0, i32 16, !dbg !6891
  %13 = load i32, i32* %keycodesize12, align 8, !dbg !6891
  %conv13 = zext i32 %13 to i64, !dbg !6889
  %cmp14 = icmp ult i64 %conv13, 4, !dbg !6892
  br i1 %cmp14, label %land.lhs.true, label %if.end19, !dbg !6893

land.lhs.true:                                    ; preds = %if.end11
  %14 = load %struct.input_keymap_entry*, %struct.input_keymap_entry** %ke.addr, align 8, !dbg !6894
  %keycode = getelementptr inbounds %struct.input_keymap_entry, %struct.input_keymap_entry* %14, i32 0, i32 3, !dbg !6895
  %15 = load i32, i32* %keycode, align 4, !dbg !6895
  %16 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !6896
  %keycodesize16 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %16, i32 0, i32 16, !dbg !6897
  %17 = load i32, i32* %keycodesize16, align 8, !dbg !6897
  %mul = mul i32 %17, 8, !dbg !6898
  %shr = lshr i32 %15, %mul, !dbg !6899
  %tobool17 = icmp ne i32 %shr, 0, !dbg !6899
  br i1 %tobool17, label %if.then18, label %if.end19, !dbg !6900

if.then18:                                        ; preds = %land.lhs.true
  store i32 -22, i32* %retval, align 4, !dbg !6901
  br label %return, !dbg !6901

if.end19:                                         ; preds = %land.lhs.true, %if.end11
  %18 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !6902
  %keycodesize20 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %18, i32 0, i32 16, !dbg !6903
  %19 = load i32, i32* %keycodesize20, align 8, !dbg !6903
  switch i32 %19, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb27
  ], !dbg !6904

sw.bb:                                            ; preds = %if.end19
  call void @llvm.dbg.declare(metadata i8** %k, metadata !6905, metadata !DIExpression()), !dbg !6908
  %20 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !6909
  %keycode21 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %20, i32 0, i32 17, !dbg !6910
  %21 = load i8*, i8** %keycode21, align 8, !dbg !6910
  store i8* %21, i8** %k, align 8, !dbg !6908
  %22 = load i8*, i8** %k, align 8, !dbg !6911
  %23 = load i32, i32* %index, align 4, !dbg !6912
  %idxprom = zext i32 %23 to i64, !dbg !6911
  %arrayidx = getelementptr i8, i8* %22, i64 %idxprom, !dbg !6911
  %24 = load i8, i8* %arrayidx, align 1, !dbg !6911
  %conv22 = zext i8 %24 to i32, !dbg !6911
  %25 = load i32*, i32** %old_keycode.addr, align 8, !dbg !6913
  store i32 %conv22, i32* %25, align 4, !dbg !6914
  %26 = load %struct.input_keymap_entry*, %struct.input_keymap_entry** %ke.addr, align 8, !dbg !6915
  %keycode23 = getelementptr inbounds %struct.input_keymap_entry, %struct.input_keymap_entry* %26, i32 0, i32 3, !dbg !6916
  %27 = load i32, i32* %keycode23, align 4, !dbg !6916
  %conv24 = trunc i32 %27 to i8, !dbg !6915
  %28 = load i8*, i8** %k, align 8, !dbg !6917
  %29 = load i32, i32* %index, align 4, !dbg !6918
  %idxprom25 = zext i32 %29 to i64, !dbg !6917
  %arrayidx26 = getelementptr i8, i8* %28, i64 %idxprom25, !dbg !6917
  store i8 %conv24, i8* %arrayidx26, align 1, !dbg !6919
  br label %sw.epilog, !dbg !6920

sw.bb27:                                          ; preds = %if.end19
  call void @llvm.dbg.declare(metadata i16** %k28, metadata !6921, metadata !DIExpression()), !dbg !6923
  %30 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !6924
  %keycode29 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %30, i32 0, i32 17, !dbg !6925
  %31 = load i8*, i8** %keycode29, align 8, !dbg !6925
  %32 = bitcast i8* %31 to i16*, !dbg !6926
  store i16* %32, i16** %k28, align 8, !dbg !6923
  %33 = load i16*, i16** %k28, align 8, !dbg !6927
  %34 = load i32, i32* %index, align 4, !dbg !6928
  %idxprom30 = zext i32 %34 to i64, !dbg !6927
  %arrayidx31 = getelementptr i16, i16* %33, i64 %idxprom30, !dbg !6927
  %35 = load i16, i16* %arrayidx31, align 2, !dbg !6927
  %conv32 = zext i16 %35 to i32, !dbg !6927
  %36 = load i32*, i32** %old_keycode.addr, align 8, !dbg !6929
  store i32 %conv32, i32* %36, align 4, !dbg !6930
  %37 = load %struct.input_keymap_entry*, %struct.input_keymap_entry** %ke.addr, align 8, !dbg !6931
  %keycode33 = getelementptr inbounds %struct.input_keymap_entry, %struct.input_keymap_entry* %37, i32 0, i32 3, !dbg !6932
  %38 = load i32, i32* %keycode33, align 4, !dbg !6932
  %conv34 = trunc i32 %38 to i16, !dbg !6931
  %39 = load i16*, i16** %k28, align 8, !dbg !6933
  %40 = load i32, i32* %index, align 4, !dbg !6934
  %idxprom35 = zext i32 %40 to i64, !dbg !6933
  %arrayidx36 = getelementptr i16, i16* %39, i64 %idxprom35, !dbg !6933
  store i16 %conv34, i16* %arrayidx36, align 2, !dbg !6935
  br label %sw.epilog, !dbg !6936

sw.default:                                       ; preds = %if.end19
  call void @llvm.dbg.declare(metadata i32** %k37, metadata !6937, metadata !DIExpression()), !dbg !6939
  %41 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !6940
  %keycode38 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %41, i32 0, i32 17, !dbg !6941
  %42 = load i8*, i8** %keycode38, align 8, !dbg !6941
  %43 = bitcast i8* %42 to i32*, !dbg !6942
  store i32* %43, i32** %k37, align 8, !dbg !6939
  %44 = load i32*, i32** %k37, align 8, !dbg !6943
  %45 = load i32, i32* %index, align 4, !dbg !6944
  %idxprom39 = zext i32 %45 to i64, !dbg !6943
  %arrayidx40 = getelementptr i32, i32* %44, i64 %idxprom39, !dbg !6943
  %46 = load i32, i32* %arrayidx40, align 4, !dbg !6943
  %47 = load i32*, i32** %old_keycode.addr, align 8, !dbg !6945
  store i32 %46, i32* %47, align 4, !dbg !6946
  %48 = load %struct.input_keymap_entry*, %struct.input_keymap_entry** %ke.addr, align 8, !dbg !6947
  %keycode41 = getelementptr inbounds %struct.input_keymap_entry, %struct.input_keymap_entry* %48, i32 0, i32 3, !dbg !6948
  %49 = load i32, i32* %keycode41, align 4, !dbg !6948
  %50 = load i32*, i32** %k37, align 8, !dbg !6949
  %51 = load i32, i32* %index, align 4, !dbg !6950
  %idxprom42 = zext i32 %51 to i64, !dbg !6949
  %arrayidx43 = getelementptr i32, i32* %50, i64 %idxprom42, !dbg !6949
  store i32 %49, i32* %arrayidx43, align 4, !dbg !6951
  br label %sw.epilog, !dbg !6952

sw.epilog:                                        ; preds = %sw.default, %sw.bb27, %sw.bb
  %52 = load i32*, i32** %old_keycode.addr, align 8, !dbg !6953
  %53 = load i32, i32* %52, align 4, !dbg !6955
  %cmp44 = icmp ule i32 %53, 767, !dbg !6956
  br i1 %cmp44, label %if.then46, label %if.end59, !dbg !6957

if.then46:                                        ; preds = %sw.epilog
  %54 = load i32*, i32** %old_keycode.addr, align 8, !dbg !6958
  %55 = load i32, i32* %54, align 4, !dbg !6960
  %conv47 = zext i32 %55 to i64, !dbg !6960
  %56 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !6961
  %keybit = getelementptr inbounds %struct.input_dev, %struct.input_dev* %56, i32 0, i32 6, !dbg !6962
  %arraydecay = getelementptr inbounds [12 x i64], [12 x i64]* %keybit, i64 0, i64 0, !dbg !6961
  call void @__clear_bit(i64 %conv47, i64* %arraydecay) #11, !dbg !6963
  store i32 0, i32* %i, align 4, !dbg !6964
  br label %for.cond, !dbg !6966

for.cond:                                         ; preds = %for.inc, %if.then46
  %57 = load i32, i32* %i, align 4, !dbg !6967
  %58 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !6969
  %keycodemax48 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %58, i32 0, i32 15, !dbg !6970
  %59 = load i32, i32* %keycodemax48, align 4, !dbg !6970
  %cmp49 = icmp ult i32 %57, %59, !dbg !6971
  br i1 %cmp49, label %for.body, label %for.end, !dbg !6972

for.body:                                         ; preds = %for.cond
  %60 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !6973
  %61 = load i32, i32* %i, align 4, !dbg !6976
  %call51 = call i32 @input_fetch_keycode(%struct.input_dev* %60, i32 %61) #11, !dbg !6977
  %62 = load i32*, i32** %old_keycode.addr, align 8, !dbg !6978
  %63 = load i32, i32* %62, align 4, !dbg !6979
  %cmp52 = icmp eq i32 %call51, %63, !dbg !6980
  br i1 %cmp52, label %if.then54, label %if.end58, !dbg !6981

if.then54:                                        ; preds = %for.body
  %64 = load i32*, i32** %old_keycode.addr, align 8, !dbg !6982
  %65 = load i32, i32* %64, align 4, !dbg !6984
  %conv55 = zext i32 %65 to i64, !dbg !6984
  %66 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !6985
  %keybit56 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %66, i32 0, i32 6, !dbg !6986
  %arraydecay57 = getelementptr inbounds [12 x i64], [12 x i64]* %keybit56, i64 0, i64 0, !dbg !6985
  call void @__set_bit(i64 %conv55, i64* %arraydecay57) #11, !dbg !6987
  br label %for.end, !dbg !6988

if.end58:                                         ; preds = %for.body
  br label %for.inc, !dbg !6989

for.inc:                                          ; preds = %if.end58
  %67 = load i32, i32* %i, align 4, !dbg !6990
  %inc = add i32 %67, 1, !dbg !6990
  store i32 %inc, i32* %i, align 4, !dbg !6990
  br label %for.cond, !dbg !6991, !llvm.loop !6992

for.end:                                          ; preds = %if.then54, %for.cond
  br label %if.end59, !dbg !6994

if.end59:                                         ; preds = %for.end, %sw.epilog
  %68 = load %struct.input_keymap_entry*, %struct.input_keymap_entry** %ke.addr, align 8, !dbg !6995
  %keycode60 = getelementptr inbounds %struct.input_keymap_entry, %struct.input_keymap_entry* %68, i32 0, i32 3, !dbg !6996
  %69 = load i32, i32* %keycode60, align 4, !dbg !6996
  %conv61 = zext i32 %69 to i64, !dbg !6995
  %70 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !6997
  %keybit62 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %70, i32 0, i32 6, !dbg !6998
  %arraydecay63 = getelementptr inbounds [12 x i64], [12 x i64]* %keybit62, i64 0, i64 0, !dbg !6997
  call void @__set_bit(i64 %conv61, i64* %arraydecay63) #11, !dbg !6999
  store i32 0, i32* %retval, align 4, !dbg !7000
  br label %return, !dbg !7000

return:                                           ; preds = %if.end59, %if.then18, %if.then10, %if.then6, %if.then
  %71 = load i32, i32* %retval, align 4, !dbg !7001
  ret i32 %71, !dbg !7001
}

; Function Attrs: noredzone
declare dso_local void @input_dev_poller_finalize(%struct.input_dev_poller*) #3

; Function Attrs: noredzone
declare dso_local i32 @device_add(%struct.device*) #3

; Function Attrs: noredzone
declare dso_local i8* @kobject_get_path(%struct.kobject*, i32) #3

; Function Attrs: noredzone
declare dso_local void @kfree(i8*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_add_tail(%struct.list_head* %new, %struct.list_head* %head) #0 !dbg !7002 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %head.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !7005, metadata !DIExpression()), !dbg !7006
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !7007, metadata !DIExpression()), !dbg !7008
  %0 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !7009
  %1 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !7010
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !7011
  %2 = load %struct.list_head*, %struct.list_head** %prev, align 8, !dbg !7011
  %3 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !7012
  call void @__list_add(%struct.list_head* %0, %struct.list_head* %2, %struct.list_head* %3) #11, !dbg !7013
  ret void, !dbg !7014
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @input_attach_handler(%struct.input_dev* %dev, %struct.input_handler* %handler) #0 !dbg !7015 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.input_dev*, align 8
  %handler.addr = alloca %struct.input_handler*, align 8
  %id = alloca %struct.input_device_id*, align 8
  %error = alloca i32, align 4
  store %struct.input_dev* %dev, %struct.input_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.input_dev** %dev.addr, metadata !7018, metadata !DIExpression()), !dbg !7019
  store %struct.input_handler* %handler, %struct.input_handler** %handler.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.input_handler** %handler.addr, metadata !7020, metadata !DIExpression()), !dbg !7021
  call void @llvm.dbg.declare(metadata %struct.input_device_id** %id, metadata !7022, metadata !DIExpression()), !dbg !7023
  call void @llvm.dbg.declare(metadata i32* %error, metadata !7024, metadata !DIExpression()), !dbg !7025
  %0 = load %struct.input_handler*, %struct.input_handler** %handler.addr, align 8, !dbg !7026
  %1 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !7027
  %call = call %struct.input_device_id* @input_match_device(%struct.input_handler* %0, %struct.input_dev* %1) #11, !dbg !7028
  store %struct.input_device_id* %call, %struct.input_device_id** %id, align 8, !dbg !7029
  %2 = load %struct.input_device_id*, %struct.input_device_id** %id, align 8, !dbg !7030
  %tobool = icmp ne %struct.input_device_id* %2, null, !dbg !7030
  br i1 %tobool, label %if.end, label %if.then, !dbg !7032

if.then:                                          ; preds = %entry
  store i32 -19, i32* %retval, align 4, !dbg !7033
  br label %return, !dbg !7033

if.end:                                           ; preds = %entry
  %3 = load %struct.input_handler*, %struct.input_handler** %handler.addr, align 8, !dbg !7034
  %connect = getelementptr inbounds %struct.input_handler, %struct.input_handler* %3, i32 0, i32 5, !dbg !7035
  %4 = load i32 (%struct.input_handler*, %struct.input_dev*, %struct.input_device_id*)*, i32 (%struct.input_handler*, %struct.input_dev*, %struct.input_device_id*)** %connect, align 8, !dbg !7035
  %5 = load %struct.input_handler*, %struct.input_handler** %handler.addr, align 8, !dbg !7036
  %6 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !7037
  %7 = load %struct.input_device_id*, %struct.input_device_id** %id, align 8, !dbg !7038
  %call1 = call i32 %4(%struct.input_handler* %5, %struct.input_dev* %6, %struct.input_device_id* %7) #11, !dbg !7034
  store i32 %call1, i32* %error, align 4, !dbg !7039
  %8 = load i32, i32* %error, align 4, !dbg !7040
  %tobool2 = icmp ne i32 %8, 0, !dbg !7040
  br i1 %tobool2, label %land.lhs.true, label %if.end7, !dbg !7042

land.lhs.true:                                    ; preds = %if.end
  %9 = load i32, i32* %error, align 4, !dbg !7043
  %cmp = icmp ne i32 %9, -19, !dbg !7044
  br i1 %cmp, label %if.then3, label %if.end7, !dbg !7045

if.then3:                                         ; preds = %land.lhs.true
  %10 = load %struct.input_handler*, %struct.input_handler** %handler.addr, align 8, !dbg !7046
  %name = getelementptr inbounds %struct.input_handler, %struct.input_handler* %10, i32 0, i32 10, !dbg !7046
  %11 = load i8*, i8** %name, align 8, !dbg !7046
  %12 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !7046
  %dev4 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %12, i32 0, i32 40, !dbg !7046
  %kobj = getelementptr inbounds %struct.device, %struct.device* %dev4, i32 0, i32 0, !dbg !7046
  %call5 = call i8* @kobject_name(%struct.kobject* %kobj) #11, !dbg !7046
  %13 = load i32, i32* %error, align 4, !dbg !7046
  %call6 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.59, i64 0, i64 0), i8* %11, i8* %call5, i32 %13) #13, !dbg !7046
  br label %if.end7, !dbg !7046

if.end7:                                          ; preds = %if.then3, %land.lhs.true, %if.end
  %14 = load i32, i32* %error, align 4, !dbg !7047
  store i32 %14, i32* %retval, align 4, !dbg !7048
  br label %return, !dbg !7048

return:                                           ; preds = %if.end7, %if.then
  %15 = load i32, i32* %retval, align 4, !dbg !7049
  ret i32 %15, !dbg !7049
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @input_wakeup_procfs_readers() #0 !dbg !7050 {
entry:
  %0 = load i32, i32* @input_devices_state, align 4, !dbg !7051
  %inc = add i32 %0, 1, !dbg !7051
  store i32 %inc, i32* @input_devices_state, align 4, !dbg !7051
  call void @__wake_up(%struct.wait_queue_head* @input_devices_poll_wait, i32 3, i32 1, i8* null) #11, !dbg !7052
  ret void, !dbg !7053
}

; Function Attrs: noredzone
declare dso_local void @device_del(%struct.device*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @input_unregister_device(%struct.input_dev* %dev) #0 !dbg !7054 {
entry:
  %dev.addr = alloca %struct.input_dev*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.input_dev* %dev, %struct.input_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.input_dev** %dev.addr, metadata !7055, metadata !DIExpression()), !dbg !7056
  %0 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !7057
  %devres_managed = getelementptr inbounds %struct.input_dev, %struct.input_dev* %0, i32 0, i32 46, !dbg !7059
  %1 = load i8, i8* %devres_managed, align 8, !dbg !7059
  %tobool = trunc i8 %1 to i1, !dbg !7059
  br i1 %tobool, label %if.then, label %if.else, !dbg !7060

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !7061, metadata !DIExpression()), !dbg !7064
  %2 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !7064
  %dev1 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %2, i32 0, i32 40, !dbg !7064
  %parent = getelementptr inbounds %struct.device, %struct.device* %dev1, i32 0, i32 1, !dbg !7064
  %3 = load %struct.device*, %struct.device** %parent, align 8, !dbg !7064
  %4 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !7064
  %5 = bitcast %struct.input_dev* %4 to i8*, !dbg !7064
  %call = call i32 @devres_destroy(%struct.device* %3, void (%struct.device*, i8*)* @devm_input_device_unregister, i32 (%struct.device*, i8*, i8*)* @devm_input_device_match, i8* %5) #11, !dbg !7064
  %tobool2 = icmp ne i32 %call, 0, !dbg !7064
  %lnot = xor i1 %tobool2, true, !dbg !7064
  %lnot3 = xor i1 %lnot, true, !dbg !7064
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !7064
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !7064
  %6 = load i32, i32* %__ret_warn_on, align 4, !dbg !7065
  %tobool4 = icmp ne i32 %6, 0, !dbg !7065
  %lnot5 = xor i1 %tobool4, true, !dbg !7065
  %lnot7 = xor i1 %lnot5, true, !dbg !7065
  %lnot.ext8 = zext i1 %lnot7 to i32, !dbg !7065
  %conv = sext i32 %lnot.ext8 to i64, !dbg !7065
  %tobool9 = icmp ne i64 %conv, 0, !dbg !7065
  br i1 %tobool9, label %if.then10, label %if.end, !dbg !7064

if.then10:                                        ; preds = %if.then
  br label %do.body, !dbg !7065

do.body:                                          ; preds = %if.then10
  br label %do.body11, !dbg !7067

do.body11:                                        ; preds = %do.body
  br label %do.end, !dbg !7069

do.end:                                           ; preds = %do.body11
  br label %do.body12, !dbg !7067

do.body12:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.5, i64 0, i64 0), i32 2266, i32 2305, i64 12) #7, !dbg !7071, !srcloc !7073
  br label %do.end13, !dbg !7071

do.end13:                                         ; preds = %do.body12
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 308) #7, !dbg !7074, !srcloc !7076
  br label %do.body14, !dbg !7067

do.body14:                                        ; preds = %do.end13
  br label %do.end15, !dbg !7077

do.end15:                                         ; preds = %do.body14
  br label %do.end16, !dbg !7067

do.end16:                                         ; preds = %do.end15
  br label %if.end, !dbg !7067

if.end:                                           ; preds = %do.end16, %if.then
  %7 = load i32, i32* %__ret_warn_on, align 4, !dbg !7064
  %tobool17 = icmp ne i32 %7, 0, !dbg !7064
  %lnot18 = xor i1 %tobool17, true, !dbg !7064
  %lnot20 = xor i1 %lnot18, true, !dbg !7064
  %lnot.ext21 = zext i1 %lnot20 to i32, !dbg !7064
  %conv22 = sext i32 %lnot.ext21 to i64, !dbg !7064
  store i64 %conv22, i64* %tmp, align 8, !dbg !7065
  %8 = load i64, i64* %tmp, align 8, !dbg !7064
  %9 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !7079
  call void @__input_unregister_device(%struct.input_dev* %9) #11, !dbg !7080
  br label %if.end23, !dbg !7081

if.else:                                          ; preds = %entry
  %10 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !7082
  call void @__input_unregister_device(%struct.input_dev* %10) #11, !dbg !7084
  %11 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !7085
  call void @input_put_device(%struct.input_dev* %11) #11, !dbg !7086
  br label %if.end23

if.end23:                                         ; preds = %if.else, %if.end
  ret void, !dbg !7087
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__input_unregister_device(%struct.input_dev* %dev) #0 !dbg !7088 {
entry:
  %dev.addr = alloca %struct.input_dev*, align 8
  %handle = alloca %struct.input_handle*, align 8
  %next = alloca %struct.input_handle*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.input_handle*, align 8
  %__mptr2 = alloca i8*, align 8
  %tmp6 = alloca %struct.input_handle*, align 8
  %__mptr10 = alloca i8*, align 8
  %tmp15 = alloca %struct.input_handle*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp35 = alloca i64, align 8
  store %struct.input_dev* %dev, %struct.input_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.input_dev** %dev.addr, metadata !7089, metadata !DIExpression()), !dbg !7090
  call void @llvm.dbg.declare(metadata %struct.input_handle** %handle, metadata !7091, metadata !DIExpression()), !dbg !7092
  call void @llvm.dbg.declare(metadata %struct.input_handle** %next, metadata !7093, metadata !DIExpression()), !dbg !7094
  %0 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !7095
  call void @input_disconnect_device(%struct.input_dev* %0) #11, !dbg !7096
  call void @mutex_lock(%struct.mutex* @input_mutex) #11, !dbg !7097
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !7098, metadata !DIExpression()), !dbg !7101
  %1 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !7101
  %h_list = getelementptr inbounds %struct.input_dev, %struct.input_dev* %1, i32 0, i32 41, !dbg !7101
  %next1 = getelementptr inbounds %struct.list_head, %struct.list_head* %h_list, i32 0, i32 0, !dbg !7101
  %2 = load %struct.list_head*, %struct.list_head** %next1, align 8, !dbg !7101
  %3 = bitcast %struct.list_head* %2 to i8*, !dbg !7101
  store i8* %3, i8** %__mptr, align 8, !dbg !7101
  br label %do.body, !dbg !7101

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !7102

do.end:                                           ; preds = %do.body
  %4 = load i8*, i8** %__mptr, align 8, !dbg !7101
  %add.ptr = getelementptr i8, i8* %4, i64 -40, !dbg !7101
  %5 = bitcast i8* %add.ptr to %struct.input_handle*, !dbg !7101
  store %struct.input_handle* %5, %struct.input_handle** %tmp, align 8, !dbg !7102
  %6 = load %struct.input_handle*, %struct.input_handle** %tmp, align 8, !dbg !7101
  store %struct.input_handle* %6, %struct.input_handle** %handle, align 8, !dbg !7104
  call void @llvm.dbg.declare(metadata i8** %__mptr2, metadata !7105, metadata !DIExpression()), !dbg !7107
  %7 = load %struct.input_handle*, %struct.input_handle** %handle, align 8, !dbg !7107
  %d_node = getelementptr inbounds %struct.input_handle, %struct.input_handle* %7, i32 0, i32 5, !dbg !7107
  %next3 = getelementptr inbounds %struct.list_head, %struct.list_head* %d_node, i32 0, i32 0, !dbg !7107
  %8 = load %struct.list_head*, %struct.list_head** %next3, align 8, !dbg !7107
  %9 = bitcast %struct.list_head* %8 to i8*, !dbg !7107
  store i8* %9, i8** %__mptr2, align 8, !dbg !7107
  br label %do.body4, !dbg !7107

do.body4:                                         ; preds = %do.end
  br label %do.end5, !dbg !7108

do.end5:                                          ; preds = %do.body4
  %10 = load i8*, i8** %__mptr2, align 8, !dbg !7107
  %add.ptr7 = getelementptr i8, i8* %10, i64 -40, !dbg !7107
  %11 = bitcast i8* %add.ptr7 to %struct.input_handle*, !dbg !7107
  store %struct.input_handle* %11, %struct.input_handle** %tmp6, align 8, !dbg !7108
  %12 = load %struct.input_handle*, %struct.input_handle** %tmp6, align 8, !dbg !7107
  store %struct.input_handle* %12, %struct.input_handle** %next, align 8, !dbg !7104
  br label %for.cond, !dbg !7104

for.cond:                                         ; preds = %do.end14, %do.end5
  %13 = load %struct.input_handle*, %struct.input_handle** %handle, align 8, !dbg !7110
  %d_node8 = getelementptr inbounds %struct.input_handle, %struct.input_handle* %13, i32 0, i32 5, !dbg !7110
  %14 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !7110
  %h_list9 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %14, i32 0, i32 41, !dbg !7110
  %cmp = icmp eq %struct.list_head* %d_node8, %h_list9, !dbg !7110
  %lnot = xor i1 %cmp, true, !dbg !7110
  br i1 %lnot, label %for.body, label %for.end, !dbg !7104

for.body:                                         ; preds = %for.cond
  %15 = load %struct.input_handle*, %struct.input_handle** %handle, align 8, !dbg !7112
  %handler = getelementptr inbounds %struct.input_handle, %struct.input_handle* %15, i32 0, i32 4, !dbg !7113
  %16 = load %struct.input_handler*, %struct.input_handler** %handler, align 8, !dbg !7113
  %disconnect = getelementptr inbounds %struct.input_handler, %struct.input_handler* %16, i32 0, i32 6, !dbg !7114
  %17 = load void (%struct.input_handle*)*, void (%struct.input_handle*)** %disconnect, align 8, !dbg !7114
  %18 = load %struct.input_handle*, %struct.input_handle** %handle, align 8, !dbg !7115
  call void %17(%struct.input_handle* %18) #11, !dbg !7112
  br label %for.inc, !dbg !7112

for.inc:                                          ; preds = %for.body
  %19 = load %struct.input_handle*, %struct.input_handle** %next, align 8, !dbg !7110
  store %struct.input_handle* %19, %struct.input_handle** %handle, align 8, !dbg !7110
  call void @llvm.dbg.declare(metadata i8** %__mptr10, metadata !7116, metadata !DIExpression()), !dbg !7118
  %20 = load %struct.input_handle*, %struct.input_handle** %next, align 8, !dbg !7118
  %d_node11 = getelementptr inbounds %struct.input_handle, %struct.input_handle* %20, i32 0, i32 5, !dbg !7118
  %next12 = getelementptr inbounds %struct.list_head, %struct.list_head* %d_node11, i32 0, i32 0, !dbg !7118
  %21 = load %struct.list_head*, %struct.list_head** %next12, align 8, !dbg !7118
  %22 = bitcast %struct.list_head* %21 to i8*, !dbg !7118
  store i8* %22, i8** %__mptr10, align 8, !dbg !7118
  br label %do.body13, !dbg !7118

do.body13:                                        ; preds = %for.inc
  br label %do.end14, !dbg !7119

do.end14:                                         ; preds = %do.body13
  %23 = load i8*, i8** %__mptr10, align 8, !dbg !7118
  %add.ptr16 = getelementptr i8, i8* %23, i64 -40, !dbg !7118
  %24 = bitcast i8* %add.ptr16 to %struct.input_handle*, !dbg !7118
  store %struct.input_handle* %24, %struct.input_handle** %tmp15, align 8, !dbg !7119
  %25 = load %struct.input_handle*, %struct.input_handle** %tmp15, align 8, !dbg !7118
  store %struct.input_handle* %25, %struct.input_handle** %next, align 8, !dbg !7110
  br label %for.cond, !dbg !7110, !llvm.loop !7121

for.end:                                          ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !7123, metadata !DIExpression()), !dbg !7125
  %26 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !7125
  %h_list17 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %26, i32 0, i32 41, !dbg !7125
  %call = call i32 @list_empty(%struct.list_head* %h_list17) #11, !dbg !7125
  %tobool = icmp ne i32 %call, 0, !dbg !7125
  %lnot18 = xor i1 %tobool, true, !dbg !7125
  %lnot19 = xor i1 %lnot18, true, !dbg !7125
  %lnot20 = xor i1 %lnot19, true, !dbg !7125
  %lnot.ext = zext i1 %lnot20 to i32, !dbg !7125
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !7125
  %27 = load i32, i32* %__ret_warn_on, align 4, !dbg !7126
  %tobool21 = icmp ne i32 %27, 0, !dbg !7126
  %lnot22 = xor i1 %tobool21, true, !dbg !7126
  %lnot24 = xor i1 %lnot22, true, !dbg !7126
  %lnot.ext25 = zext i1 %lnot24 to i32, !dbg !7126
  %conv = sext i32 %lnot.ext25 to i64, !dbg !7126
  %tobool26 = icmp ne i64 %conv, 0, !dbg !7126
  br i1 %tobool26, label %if.then, label %if.end, !dbg !7125

if.then:                                          ; preds = %for.end
  br label %do.body27, !dbg !7126

do.body27:                                        ; preds = %if.then
  br label %do.body28, !dbg !7128

do.body28:                                        ; preds = %do.body27
  br label %do.end29, !dbg !7130

do.end29:                                         ; preds = %do.body28
  br label %do.body30, !dbg !7128

do.body30:                                        ; preds = %do.end29
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.5, i64 0, i64 0), i32 2092, i32 2305, i64 12) #7, !dbg !7132, !srcloc !7134
  br label %do.end31, !dbg !7132

do.end31:                                         ; preds = %do.body30
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 305) #7, !dbg !7135, !srcloc !7137
  br label %do.body32, !dbg !7128

do.body32:                                        ; preds = %do.end31
  br label %do.end33, !dbg !7138

do.end33:                                         ; preds = %do.body32
  br label %do.end34, !dbg !7128

do.end34:                                         ; preds = %do.end33
  br label %if.end, !dbg !7128

if.end:                                           ; preds = %do.end34, %for.end
  %28 = load i32, i32* %__ret_warn_on, align 4, !dbg !7125
  %tobool36 = icmp ne i32 %28, 0, !dbg !7125
  %lnot37 = xor i1 %tobool36, true, !dbg !7125
  %lnot39 = xor i1 %lnot37, true, !dbg !7125
  %lnot.ext40 = zext i1 %lnot39 to i32, !dbg !7125
  %conv41 = sext i32 %lnot.ext40 to i64, !dbg !7125
  store i64 %conv41, i64* %tmp35, align 8, !dbg !7126
  %29 = load i64, i64* %tmp35, align 8, !dbg !7125
  %30 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !7140
  %timer = getelementptr inbounds %struct.input_dev, %struct.input_dev* %30, i32 0, i32 23, !dbg !7140
  %call42 = call i32 @del_timer(%struct.timer_list* %timer) #11, !dbg !7140
  %31 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !7141
  %node = getelementptr inbounds %struct.input_dev, %struct.input_dev* %31, i32 0, i32 42, !dbg !7142
  call void @list_del_init(%struct.list_head* %node) #11, !dbg !7143
  call void @input_wakeup_procfs_readers() #11, !dbg !7144
  call void @mutex_unlock(%struct.mutex* @input_mutex) #11, !dbg !7145
  %32 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !7146
  %dev43 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %32, i32 0, i32 40, !dbg !7147
  call void @device_del(%struct.device* %dev43) #11, !dbg !7148
  ret void, !dbg !7149
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @input_register_handler(%struct.input_handler* %handler) #0 !dbg !7150 {
entry:
  %retval = alloca i32, align 4
  %handler.addr = alloca %struct.input_handler*, align 8
  %dev = alloca %struct.input_dev*, align 8
  %error = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.input_dev*, align 8
  %__mptr3 = alloca i8*, align 8
  %tmp7 = alloca %struct.input_dev*, align 8
  store %struct.input_handler* %handler, %struct.input_handler** %handler.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.input_handler** %handler.addr, metadata !7153, metadata !DIExpression()), !dbg !7154
  call void @llvm.dbg.declare(metadata %struct.input_dev** %dev, metadata !7155, metadata !DIExpression()), !dbg !7156
  call void @llvm.dbg.declare(metadata i32* %error, metadata !7157, metadata !DIExpression()), !dbg !7158
  %call = call i32 @mutex_lock_interruptible(%struct.mutex* @input_mutex) #11, !dbg !7159
  store i32 %call, i32* %error, align 4, !dbg !7160
  %0 = load i32, i32* %error, align 4, !dbg !7161
  %tobool = icmp ne i32 %0, 0, !dbg !7161
  br i1 %tobool, label %if.then, label %if.end, !dbg !7163

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %error, align 4, !dbg !7164
  store i32 %1, i32* %retval, align 4, !dbg !7165
  br label %return, !dbg !7165

if.end:                                           ; preds = %entry
  %2 = load %struct.input_handler*, %struct.input_handler** %handler.addr, align 8, !dbg !7166
  %h_list = getelementptr inbounds %struct.input_handler, %struct.input_handler* %2, i32 0, i32 12, !dbg !7167
  call void @INIT_LIST_HEAD(%struct.list_head* %h_list) #11, !dbg !7168
  %3 = load %struct.input_handler*, %struct.input_handler** %handler.addr, align 8, !dbg !7169
  %node = getelementptr inbounds %struct.input_handler, %struct.input_handler* %3, i32 0, i32 13, !dbg !7170
  call void @list_add_tail(%struct.list_head* %node, %struct.list_head* @input_handler_list) #11, !dbg !7171
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !7172, metadata !DIExpression()), !dbg !7175
  %4 = load %struct.list_head*, %struct.list_head** getelementptr inbounds (%struct.list_head, %struct.list_head* @input_dev_list, i32 0, i32 0), align 8, !dbg !7175
  %5 = bitcast %struct.list_head* %4 to i8*, !dbg !7175
  store i8* %5, i8** %__mptr, align 8, !dbg !7175
  br label %do.body, !dbg !7175

do.body:                                          ; preds = %if.end
  br label %do.end, !dbg !7176

do.end:                                           ; preds = %do.body
  %6 = load i8*, i8** %__mptr, align 8, !dbg !7175
  %add.ptr = getelementptr i8, i8* %6, i64 -1240, !dbg !7175
  %7 = bitcast i8* %add.ptr to %struct.input_dev*, !dbg !7175
  store %struct.input_dev* %7, %struct.input_dev** %tmp, align 8, !dbg !7176
  %8 = load %struct.input_dev*, %struct.input_dev** %tmp, align 8, !dbg !7175
  store %struct.input_dev* %8, %struct.input_dev** %dev, align 8, !dbg !7178
  br label %for.cond, !dbg !7178

for.cond:                                         ; preds = %do.end6, %do.end
  %9 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !7179
  %node1 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %9, i32 0, i32 42, !dbg !7179
  %cmp = icmp eq %struct.list_head* %node1, @input_dev_list, !dbg !7179
  %lnot = xor i1 %cmp, true, !dbg !7179
  br i1 %lnot, label %for.body, label %for.end, !dbg !7178

for.body:                                         ; preds = %for.cond
  %10 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !7181
  %11 = load %struct.input_handler*, %struct.input_handler** %handler.addr, align 8, !dbg !7182
  %call2 = call i32 @input_attach_handler(%struct.input_dev* %10, %struct.input_handler* %11) #11, !dbg !7183
  br label %for.inc, !dbg !7183

for.inc:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata i8** %__mptr3, metadata !7184, metadata !DIExpression()), !dbg !7186
  %12 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !7186
  %node4 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %12, i32 0, i32 42, !dbg !7186
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %node4, i32 0, i32 0, !dbg !7186
  %13 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !7186
  %14 = bitcast %struct.list_head* %13 to i8*, !dbg !7186
  store i8* %14, i8** %__mptr3, align 8, !dbg !7186
  br label %do.body5, !dbg !7186

do.body5:                                         ; preds = %for.inc
  br label %do.end6, !dbg !7187

do.end6:                                          ; preds = %do.body5
  %15 = load i8*, i8** %__mptr3, align 8, !dbg !7186
  %add.ptr8 = getelementptr i8, i8* %15, i64 -1240, !dbg !7186
  %16 = bitcast i8* %add.ptr8 to %struct.input_dev*, !dbg !7186
  store %struct.input_dev* %16, %struct.input_dev** %tmp7, align 8, !dbg !7187
  %17 = load %struct.input_dev*, %struct.input_dev** %tmp7, align 8, !dbg !7186
  store %struct.input_dev* %17, %struct.input_dev** %dev, align 8, !dbg !7179
  br label %for.cond, !dbg !7179, !llvm.loop !7189

for.end:                                          ; preds = %for.cond
  call void @input_wakeup_procfs_readers() #11, !dbg !7191
  call void @mutex_unlock(%struct.mutex* @input_mutex) #11, !dbg !7192
  store i32 0, i32* %retval, align 4, !dbg !7193
  br label %return, !dbg !7193

return:                                           ; preds = %for.end, %if.then
  %18 = load i32, i32* %retval, align 4, !dbg !7194
  ret i32 %18, !dbg !7194
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @input_unregister_handler(%struct.input_handler* %handler) #0 !dbg !7195 {
entry:
  %handler.addr = alloca %struct.input_handler*, align 8
  %handle = alloca %struct.input_handle*, align 8
  %next = alloca %struct.input_handle*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.input_handle*, align 8
  %__mptr2 = alloca i8*, align 8
  %tmp6 = alloca %struct.input_handle*, align 8
  %__mptr10 = alloca i8*, align 8
  %tmp15 = alloca %struct.input_handle*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp35 = alloca i64, align 8
  store %struct.input_handler* %handler, %struct.input_handler** %handler.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.input_handler** %handler.addr, metadata !7198, metadata !DIExpression()), !dbg !7199
  call void @llvm.dbg.declare(metadata %struct.input_handle** %handle, metadata !7200, metadata !DIExpression()), !dbg !7201
  call void @llvm.dbg.declare(metadata %struct.input_handle** %next, metadata !7202, metadata !DIExpression()), !dbg !7203
  call void @mutex_lock(%struct.mutex* @input_mutex) #11, !dbg !7204
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !7205, metadata !DIExpression()), !dbg !7208
  %0 = load %struct.input_handler*, %struct.input_handler** %handler.addr, align 8, !dbg !7208
  %h_list = getelementptr inbounds %struct.input_handler, %struct.input_handler* %0, i32 0, i32 12, !dbg !7208
  %next1 = getelementptr inbounds %struct.list_head, %struct.list_head* %h_list, i32 0, i32 0, !dbg !7208
  %1 = load %struct.list_head*, %struct.list_head** %next1, align 8, !dbg !7208
  %2 = bitcast %struct.list_head* %1 to i8*, !dbg !7208
  store i8* %2, i8** %__mptr, align 8, !dbg !7208
  br label %do.body, !dbg !7208

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !7209

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !7208
  %add.ptr = getelementptr i8, i8* %3, i64 -56, !dbg !7208
  %4 = bitcast i8* %add.ptr to %struct.input_handle*, !dbg !7208
  store %struct.input_handle* %4, %struct.input_handle** %tmp, align 8, !dbg !7209
  %5 = load %struct.input_handle*, %struct.input_handle** %tmp, align 8, !dbg !7208
  store %struct.input_handle* %5, %struct.input_handle** %handle, align 8, !dbg !7211
  call void @llvm.dbg.declare(metadata i8** %__mptr2, metadata !7212, metadata !DIExpression()), !dbg !7214
  %6 = load %struct.input_handle*, %struct.input_handle** %handle, align 8, !dbg !7214
  %h_node = getelementptr inbounds %struct.input_handle, %struct.input_handle* %6, i32 0, i32 6, !dbg !7214
  %next3 = getelementptr inbounds %struct.list_head, %struct.list_head* %h_node, i32 0, i32 0, !dbg !7214
  %7 = load %struct.list_head*, %struct.list_head** %next3, align 8, !dbg !7214
  %8 = bitcast %struct.list_head* %7 to i8*, !dbg !7214
  store i8* %8, i8** %__mptr2, align 8, !dbg !7214
  br label %do.body4, !dbg !7214

do.body4:                                         ; preds = %do.end
  br label %do.end5, !dbg !7215

do.end5:                                          ; preds = %do.body4
  %9 = load i8*, i8** %__mptr2, align 8, !dbg !7214
  %add.ptr7 = getelementptr i8, i8* %9, i64 -56, !dbg !7214
  %10 = bitcast i8* %add.ptr7 to %struct.input_handle*, !dbg !7214
  store %struct.input_handle* %10, %struct.input_handle** %tmp6, align 8, !dbg !7215
  %11 = load %struct.input_handle*, %struct.input_handle** %tmp6, align 8, !dbg !7214
  store %struct.input_handle* %11, %struct.input_handle** %next, align 8, !dbg !7211
  br label %for.cond, !dbg !7211

for.cond:                                         ; preds = %do.end14, %do.end5
  %12 = load %struct.input_handle*, %struct.input_handle** %handle, align 8, !dbg !7217
  %h_node8 = getelementptr inbounds %struct.input_handle, %struct.input_handle* %12, i32 0, i32 6, !dbg !7217
  %13 = load %struct.input_handler*, %struct.input_handler** %handler.addr, align 8, !dbg !7217
  %h_list9 = getelementptr inbounds %struct.input_handler, %struct.input_handler* %13, i32 0, i32 12, !dbg !7217
  %cmp = icmp eq %struct.list_head* %h_node8, %h_list9, !dbg !7217
  %lnot = xor i1 %cmp, true, !dbg !7217
  br i1 %lnot, label %for.body, label %for.end, !dbg !7211

for.body:                                         ; preds = %for.cond
  %14 = load %struct.input_handler*, %struct.input_handler** %handler.addr, align 8, !dbg !7219
  %disconnect = getelementptr inbounds %struct.input_handler, %struct.input_handler* %14, i32 0, i32 6, !dbg !7220
  %15 = load void (%struct.input_handle*)*, void (%struct.input_handle*)** %disconnect, align 8, !dbg !7220
  %16 = load %struct.input_handle*, %struct.input_handle** %handle, align 8, !dbg !7221
  call void %15(%struct.input_handle* %16) #11, !dbg !7219
  br label %for.inc, !dbg !7219

for.inc:                                          ; preds = %for.body
  %17 = load %struct.input_handle*, %struct.input_handle** %next, align 8, !dbg !7217
  store %struct.input_handle* %17, %struct.input_handle** %handle, align 8, !dbg !7217
  call void @llvm.dbg.declare(metadata i8** %__mptr10, metadata !7222, metadata !DIExpression()), !dbg !7224
  %18 = load %struct.input_handle*, %struct.input_handle** %next, align 8, !dbg !7224
  %h_node11 = getelementptr inbounds %struct.input_handle, %struct.input_handle* %18, i32 0, i32 6, !dbg !7224
  %next12 = getelementptr inbounds %struct.list_head, %struct.list_head* %h_node11, i32 0, i32 0, !dbg !7224
  %19 = load %struct.list_head*, %struct.list_head** %next12, align 8, !dbg !7224
  %20 = bitcast %struct.list_head* %19 to i8*, !dbg !7224
  store i8* %20, i8** %__mptr10, align 8, !dbg !7224
  br label %do.body13, !dbg !7224

do.body13:                                        ; preds = %for.inc
  br label %do.end14, !dbg !7225

do.end14:                                         ; preds = %do.body13
  %21 = load i8*, i8** %__mptr10, align 8, !dbg !7224
  %add.ptr16 = getelementptr i8, i8* %21, i64 -56, !dbg !7224
  %22 = bitcast i8* %add.ptr16 to %struct.input_handle*, !dbg !7224
  store %struct.input_handle* %22, %struct.input_handle** %tmp15, align 8, !dbg !7225
  %23 = load %struct.input_handle*, %struct.input_handle** %tmp15, align 8, !dbg !7224
  store %struct.input_handle* %23, %struct.input_handle** %next, align 8, !dbg !7217
  br label %for.cond, !dbg !7217, !llvm.loop !7227

for.end:                                          ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !7229, metadata !DIExpression()), !dbg !7231
  %24 = load %struct.input_handler*, %struct.input_handler** %handler.addr, align 8, !dbg !7231
  %h_list17 = getelementptr inbounds %struct.input_handler, %struct.input_handler* %24, i32 0, i32 12, !dbg !7231
  %call = call i32 @list_empty(%struct.list_head* %h_list17) #11, !dbg !7231
  %tobool = icmp ne i32 %call, 0, !dbg !7231
  %lnot18 = xor i1 %tobool, true, !dbg !7231
  %lnot19 = xor i1 %lnot18, true, !dbg !7231
  %lnot20 = xor i1 %lnot19, true, !dbg !7231
  %lnot.ext = zext i1 %lnot20 to i32, !dbg !7231
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !7231
  %25 = load i32, i32* %__ret_warn_on, align 4, !dbg !7232
  %tobool21 = icmp ne i32 %25, 0, !dbg !7232
  %lnot22 = xor i1 %tobool21, true, !dbg !7232
  %lnot24 = xor i1 %lnot22, true, !dbg !7232
  %lnot.ext25 = zext i1 %lnot24 to i32, !dbg !7232
  %conv = sext i32 %lnot.ext25 to i64, !dbg !7232
  %tobool26 = icmp ne i64 %conv, 0, !dbg !7232
  br i1 %tobool26, label %if.then, label %if.end, !dbg !7231

if.then:                                          ; preds = %for.end
  br label %do.body27, !dbg !7232

do.body27:                                        ; preds = %if.then
  br label %do.body28, !dbg !7234

do.body28:                                        ; preds = %do.body27
  br label %do.end29, !dbg !7236

do.end29:                                         ; preds = %do.body28
  br label %do.body30, !dbg !7234

do.body30:                                        ; preds = %do.end29
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.5, i64 0, i64 0), i32 2325, i32 2305, i64 12) #7, !dbg !7238, !srcloc !7240
  br label %do.end31, !dbg !7238

do.end31:                                         ; preds = %do.body30
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 314) #7, !dbg !7241, !srcloc !7243
  br label %do.body32, !dbg !7234

do.body32:                                        ; preds = %do.end31
  br label %do.end33, !dbg !7244

do.end33:                                         ; preds = %do.body32
  br label %do.end34, !dbg !7234

do.end34:                                         ; preds = %do.end33
  br label %if.end, !dbg !7234

if.end:                                           ; preds = %do.end34, %for.end
  %26 = load i32, i32* %__ret_warn_on, align 4, !dbg !7231
  %tobool36 = icmp ne i32 %26, 0, !dbg !7231
  %lnot37 = xor i1 %tobool36, true, !dbg !7231
  %lnot39 = xor i1 %lnot37, true, !dbg !7231
  %lnot.ext40 = zext i1 %lnot39 to i32, !dbg !7231
  %conv41 = sext i32 %lnot.ext40 to i64, !dbg !7231
  store i64 %conv41, i64* %tmp35, align 8, !dbg !7232
  %27 = load i64, i64* %tmp35, align 8, !dbg !7231
  %28 = load %struct.input_handler*, %struct.input_handler** %handler.addr, align 8, !dbg !7246
  %node = getelementptr inbounds %struct.input_handler, %struct.input_handler* %28, i32 0, i32 13, !dbg !7247
  call void @list_del_init(%struct.list_head* %node) #11, !dbg !7248
  call void @input_wakeup_procfs_readers() #11, !dbg !7249
  call void @mutex_unlock(%struct.mutex* @input_mutex) #11, !dbg !7250
  ret void, !dbg !7251
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @list_empty(%struct.list_head* %head) #0 !dbg !7252 {
entry:
  %head.addr = alloca %struct.list_head*, align 8
  %tmp = alloca %struct.list_head*, align 8
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !7257, metadata !DIExpression()), !dbg !7258
  br label %do.body, !dbg !7259

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !7261

do.end:                                           ; preds = %do.body
  %0 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !7259
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %0, i32 0, i32 0, !dbg !7259
  %1 = load volatile %struct.list_head*, %struct.list_head** %next, align 8, !dbg !7259
  store %struct.list_head* %1, %struct.list_head** %tmp, align 8, !dbg !7261
  %2 = load %struct.list_head*, %struct.list_head** %tmp, align 8, !dbg !7259
  %3 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !7263
  %cmp = icmp eq %struct.list_head* %2, %3, !dbg !7264
  %conv = zext i1 %cmp to i32, !dbg !7264
  ret i32 %conv, !dbg !7265
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_del_init(%struct.list_head* %entry1) #0 !dbg !7266 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !7267, metadata !DIExpression()), !dbg !7268
  %0 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !7269
  call void @__list_del_entry(%struct.list_head* %0) #11, !dbg !7270
  %1 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !7271
  call void @INIT_LIST_HEAD(%struct.list_head* %1) #11, !dbg !7272
  ret void, !dbg !7273
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @input_handler_for_each_handle(%struct.input_handler* %handler, i8* %data, i32 (%struct.input_handle*, i8*)* %fn) #0 !dbg !7274 {
entry:
  %handler.addr = alloca %struct.input_handler*, align 8
  %data.addr = alloca i8*, align 8
  %fn.addr = alloca i32 (%struct.input_handle*, i8*)*, align 8
  %handle = alloca %struct.input_handle*, align 8
  %retval1 = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.list_head*, align 8
  %tmp4 = alloca %struct.input_handle*, align 8
  %__mptr6 = alloca i8*, align 8
  %tmp9 = alloca %struct.list_head*, align 8
  %tmp14 = alloca %struct.input_handle*, align 8
  store %struct.input_handler* %handler, %struct.input_handler** %handler.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.input_handler** %handler.addr, metadata !7280, metadata !DIExpression()), !dbg !7281
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !7282, metadata !DIExpression()), !dbg !7283
  store i32 (%struct.input_handle*, i8*)* %fn, i32 (%struct.input_handle*, i8*)** %fn.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (%struct.input_handle*, i8*)** %fn.addr, metadata !7284, metadata !DIExpression()), !dbg !7285
  call void @llvm.dbg.declare(metadata %struct.input_handle** %handle, metadata !7286, metadata !DIExpression()), !dbg !7287
  call void @llvm.dbg.declare(metadata i32* %retval1, metadata !7288, metadata !DIExpression()), !dbg !7289
  store i32 0, i32* %retval1, align 4, !dbg !7289
  call void @__rcu_read_lock() #12, !dbg !7290
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !7292, metadata !DIExpression()), !dbg !7295
  br label %do.body, !dbg !7296

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !7298

do.end:                                           ; preds = %do.body
  %0 = load %struct.input_handler*, %struct.input_handler** %handler.addr, align 8, !dbg !7296
  %h_list = getelementptr inbounds %struct.input_handler, %struct.input_handler* %0, i32 0, i32 12, !dbg !7296
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %h_list, i32 0, i32 0, !dbg !7296
  %1 = load volatile %struct.list_head*, %struct.list_head** %next, align 8, !dbg !7296
  store %struct.list_head* %1, %struct.list_head** %tmp, align 8, !dbg !7298
  %2 = load %struct.list_head*, %struct.list_head** %tmp, align 8, !dbg !7296
  %3 = bitcast %struct.list_head* %2 to i8*, !dbg !7295
  store i8* %3, i8** %__mptr, align 8, !dbg !7295
  br label %do.body2, !dbg !7295

do.body2:                                         ; preds = %do.end
  br label %do.end3, !dbg !7300

do.end3:                                          ; preds = %do.body2
  %4 = load i8*, i8** %__mptr, align 8, !dbg !7295
  %add.ptr = getelementptr i8, i8* %4, i64 -56, !dbg !7295
  %5 = bitcast i8* %add.ptr to %struct.input_handle*, !dbg !7295
  store %struct.input_handle* %5, %struct.input_handle** %tmp4, align 8, !dbg !7300
  %6 = load %struct.input_handle*, %struct.input_handle** %tmp4, align 8, !dbg !7295
  store %struct.input_handle* %6, %struct.input_handle** %handle, align 8, !dbg !7302
  br label %for.cond, !dbg !7302

for.cond:                                         ; preds = %do.end13, %do.end3
  %7 = load %struct.input_handle*, %struct.input_handle** %handle, align 8, !dbg !7303
  %h_node = getelementptr inbounds %struct.input_handle, %struct.input_handle* %7, i32 0, i32 6, !dbg !7303
  %8 = load %struct.input_handler*, %struct.input_handler** %handler.addr, align 8, !dbg !7303
  %h_list5 = getelementptr inbounds %struct.input_handler, %struct.input_handler* %8, i32 0, i32 12, !dbg !7303
  %cmp = icmp ne %struct.list_head* %h_node, %h_list5, !dbg !7303
  br i1 %cmp, label %for.body, label %for.end, !dbg !7302

for.body:                                         ; preds = %for.cond
  %9 = load i32 (%struct.input_handle*, i8*)*, i32 (%struct.input_handle*, i8*)** %fn.addr, align 8, !dbg !7305
  %10 = load %struct.input_handle*, %struct.input_handle** %handle, align 8, !dbg !7307
  %11 = load i8*, i8** %data.addr, align 8, !dbg !7308
  %call = call i32 %9(%struct.input_handle* %10, i8* %11) #11, !dbg !7305
  store i32 %call, i32* %retval1, align 4, !dbg !7309
  %12 = load i32, i32* %retval1, align 4, !dbg !7310
  %tobool = icmp ne i32 %12, 0, !dbg !7310
  br i1 %tobool, label %if.then, label %if.end, !dbg !7312

if.then:                                          ; preds = %for.body
  br label %for.end, !dbg !7313

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !7314

for.inc:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8** %__mptr6, metadata !7315, metadata !DIExpression()), !dbg !7317
  br label %do.body7, !dbg !7318

do.body7:                                         ; preds = %for.inc
  br label %do.end8, !dbg !7320

do.end8:                                          ; preds = %do.body7
  %13 = load %struct.input_handle*, %struct.input_handle** %handle, align 8, !dbg !7318
  %h_node10 = getelementptr inbounds %struct.input_handle, %struct.input_handle* %13, i32 0, i32 6, !dbg !7318
  %next11 = getelementptr inbounds %struct.list_head, %struct.list_head* %h_node10, i32 0, i32 0, !dbg !7318
  %14 = load volatile %struct.list_head*, %struct.list_head** %next11, align 8, !dbg !7318
  store %struct.list_head* %14, %struct.list_head** %tmp9, align 8, !dbg !7320
  %15 = load %struct.list_head*, %struct.list_head** %tmp9, align 8, !dbg !7318
  %16 = bitcast %struct.list_head* %15 to i8*, !dbg !7317
  store i8* %16, i8** %__mptr6, align 8, !dbg !7317
  br label %do.body12, !dbg !7317

do.body12:                                        ; preds = %do.end8
  br label %do.end13, !dbg !7322

do.end13:                                         ; preds = %do.body12
  %17 = load i8*, i8** %__mptr6, align 8, !dbg !7317
  %add.ptr15 = getelementptr i8, i8* %17, i64 -56, !dbg !7317
  %18 = bitcast i8* %add.ptr15 to %struct.input_handle*, !dbg !7317
  store %struct.input_handle* %18, %struct.input_handle** %tmp14, align 8, !dbg !7322
  %19 = load %struct.input_handle*, %struct.input_handle** %tmp14, align 8, !dbg !7317
  store %struct.input_handle* %19, %struct.input_handle** %handle, align 8, !dbg !7303
  br label %for.cond, !dbg !7303, !llvm.loop !7324

for.end:                                          ; preds = %if.then, %for.cond
  call void @rcu_read_unlock() #11, !dbg !7326
  %20 = load i32, i32* %retval1, align 4, !dbg !7327
  ret i32 %20, !dbg !7328
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @input_register_handle(%struct.input_handle* %handle) #0 !dbg !7329 {
entry:
  %retval = alloca i32, align 4
  %handle.addr = alloca %struct.input_handle*, align 8
  %handler = alloca %struct.input_handler*, align 8
  %dev = alloca %struct.input_dev*, align 8
  %error = alloca i32, align 4
  store %struct.input_handle* %handle, %struct.input_handle** %handle.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.input_handle** %handle.addr, metadata !7330, metadata !DIExpression()), !dbg !7331
  call void @llvm.dbg.declare(metadata %struct.input_handler** %handler, metadata !7332, metadata !DIExpression()), !dbg !7333
  %0 = load %struct.input_handle*, %struct.input_handle** %handle.addr, align 8, !dbg !7334
  %handler1 = getelementptr inbounds %struct.input_handle, %struct.input_handle* %0, i32 0, i32 4, !dbg !7335
  %1 = load %struct.input_handler*, %struct.input_handler** %handler1, align 8, !dbg !7335
  store %struct.input_handler* %1, %struct.input_handler** %handler, align 8, !dbg !7333
  call void @llvm.dbg.declare(metadata %struct.input_dev** %dev, metadata !7336, metadata !DIExpression()), !dbg !7337
  %2 = load %struct.input_handle*, %struct.input_handle** %handle.addr, align 8, !dbg !7338
  %dev2 = getelementptr inbounds %struct.input_handle, %struct.input_handle* %2, i32 0, i32 3, !dbg !7339
  %3 = load %struct.input_dev*, %struct.input_dev** %dev2, align 8, !dbg !7339
  store %struct.input_dev* %3, %struct.input_dev** %dev, align 8, !dbg !7337
  call void @llvm.dbg.declare(metadata i32* %error, metadata !7340, metadata !DIExpression()), !dbg !7341
  %4 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !7342
  %mutex = getelementptr inbounds %struct.input_dev, %struct.input_dev* %4, i32 0, i32 37, !dbg !7343
  %call = call i32 @mutex_lock_interruptible(%struct.mutex* %mutex) #11, !dbg !7344
  store i32 %call, i32* %error, align 4, !dbg !7345
  %5 = load i32, i32* %error, align 4, !dbg !7346
  %tobool = icmp ne i32 %5, 0, !dbg !7346
  br i1 %tobool, label %if.then, label %if.end, !dbg !7348

if.then:                                          ; preds = %entry
  %6 = load i32, i32* %error, align 4, !dbg !7349
  store i32 %6, i32* %retval, align 4, !dbg !7350
  br label %return, !dbg !7350

if.end:                                           ; preds = %entry
  %7 = load %struct.input_handler*, %struct.input_handler** %handler, align 8, !dbg !7351
  %filter = getelementptr inbounds %struct.input_handler, %struct.input_handler* %7, i32 0, i32 3, !dbg !7353
  %8 = load i1 (%struct.input_handle*, i32, i32, i32)*, i1 (%struct.input_handle*, i32, i32, i32)** %filter, align 8, !dbg !7353
  %tobool3 = icmp ne i1 (%struct.input_handle*, i32, i32, i32)* %8, null, !dbg !7351
  br i1 %tobool3, label %if.then4, label %if.else, !dbg !7354

if.then4:                                         ; preds = %if.end
  %9 = load %struct.input_handle*, %struct.input_handle** %handle.addr, align 8, !dbg !7355
  %d_node = getelementptr inbounds %struct.input_handle, %struct.input_handle* %9, i32 0, i32 5, !dbg !7356
  %10 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !7357
  %h_list = getelementptr inbounds %struct.input_dev, %struct.input_dev* %10, i32 0, i32 41, !dbg !7358
  call void @list_add_rcu(%struct.list_head* %d_node, %struct.list_head* %h_list) #11, !dbg !7359
  br label %if.end7, !dbg !7359

if.else:                                          ; preds = %if.end
  %11 = load %struct.input_handle*, %struct.input_handle** %handle.addr, align 8, !dbg !7360
  %d_node5 = getelementptr inbounds %struct.input_handle, %struct.input_handle* %11, i32 0, i32 5, !dbg !7361
  %12 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !7362
  %h_list6 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %12, i32 0, i32 41, !dbg !7363
  call void @list_add_tail_rcu(%struct.list_head* %d_node5, %struct.list_head* %h_list6) #11, !dbg !7364
  br label %if.end7

if.end7:                                          ; preds = %if.else, %if.then4
  %13 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !7365
  %mutex8 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %13, i32 0, i32 37, !dbg !7366
  call void @mutex_unlock(%struct.mutex* %mutex8) #11, !dbg !7367
  %14 = load %struct.input_handle*, %struct.input_handle** %handle.addr, align 8, !dbg !7368
  %h_node = getelementptr inbounds %struct.input_handle, %struct.input_handle* %14, i32 0, i32 6, !dbg !7369
  %15 = load %struct.input_handler*, %struct.input_handler** %handler, align 8, !dbg !7370
  %h_list9 = getelementptr inbounds %struct.input_handler, %struct.input_handler* %15, i32 0, i32 12, !dbg !7371
  call void @list_add_tail_rcu(%struct.list_head* %h_node, %struct.list_head* %h_list9) #11, !dbg !7372
  %16 = load %struct.input_handler*, %struct.input_handler** %handler, align 8, !dbg !7373
  %start = getelementptr inbounds %struct.input_handler, %struct.input_handler* %16, i32 0, i32 7, !dbg !7375
  %17 = load void (%struct.input_handle*)*, void (%struct.input_handle*)** %start, align 8, !dbg !7375
  %tobool10 = icmp ne void (%struct.input_handle*)* %17, null, !dbg !7373
  br i1 %tobool10, label %if.then11, label %if.end13, !dbg !7376

if.then11:                                        ; preds = %if.end7
  %18 = load %struct.input_handler*, %struct.input_handler** %handler, align 8, !dbg !7377
  %start12 = getelementptr inbounds %struct.input_handler, %struct.input_handler* %18, i32 0, i32 7, !dbg !7378
  %19 = load void (%struct.input_handle*)*, void (%struct.input_handle*)** %start12, align 8, !dbg !7378
  %20 = load %struct.input_handle*, %struct.input_handle** %handle.addr, align 8, !dbg !7379
  call void %19(%struct.input_handle* %20) #11, !dbg !7377
  br label %if.end13, !dbg !7377

if.end13:                                         ; preds = %if.then11, %if.end7
  store i32 0, i32* %retval, align 4, !dbg !7380
  br label %return, !dbg !7380

return:                                           ; preds = %if.end13, %if.then
  %21 = load i32, i32* %retval, align 4, !dbg !7381
  ret i32 %21, !dbg !7381
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_add_rcu(%struct.list_head* %new, %struct.list_head* %head) #0 !dbg !7382 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %head.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !7384, metadata !DIExpression()), !dbg !7385
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !7386, metadata !DIExpression()), !dbg !7387
  %0 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !7388
  %1 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !7389
  %2 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !7390
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %2, i32 0, i32 0, !dbg !7391
  %3 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !7391
  call void @__list_add_rcu(%struct.list_head* %0, %struct.list_head* %1, %struct.list_head* %3) #11, !dbg !7392
  ret void, !dbg !7393
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_add_tail_rcu(%struct.list_head* %new, %struct.list_head* %head) #0 !dbg !7394 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %head.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !7395, metadata !DIExpression()), !dbg !7396
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !7397, metadata !DIExpression()), !dbg !7398
  %0 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !7399
  %1 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !7400
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !7401
  %2 = load %struct.list_head*, %struct.list_head** %prev, align 8, !dbg !7401
  %3 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !7402
  call void @__list_add_rcu(%struct.list_head* %0, %struct.list_head* %2, %struct.list_head* %3) #11, !dbg !7403
  ret void, !dbg !7404
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @input_unregister_handle(%struct.input_handle* %handle) #0 !dbg !7405 {
entry:
  %handle.addr = alloca %struct.input_handle*, align 8
  %dev = alloca %struct.input_dev*, align 8
  store %struct.input_handle* %handle, %struct.input_handle** %handle.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.input_handle** %handle.addr, metadata !7406, metadata !DIExpression()), !dbg !7407
  call void @llvm.dbg.declare(metadata %struct.input_dev** %dev, metadata !7408, metadata !DIExpression()), !dbg !7409
  %0 = load %struct.input_handle*, %struct.input_handle** %handle.addr, align 8, !dbg !7410
  %dev1 = getelementptr inbounds %struct.input_handle, %struct.input_handle* %0, i32 0, i32 3, !dbg !7411
  %1 = load %struct.input_dev*, %struct.input_dev** %dev1, align 8, !dbg !7411
  store %struct.input_dev* %1, %struct.input_dev** %dev, align 8, !dbg !7409
  %2 = load %struct.input_handle*, %struct.input_handle** %handle.addr, align 8, !dbg !7412
  %h_node = getelementptr inbounds %struct.input_handle, %struct.input_handle* %2, i32 0, i32 6, !dbg !7413
  call void @list_del_rcu(%struct.list_head* %h_node) #11, !dbg !7414
  %3 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !7415
  %mutex = getelementptr inbounds %struct.input_dev, %struct.input_dev* %3, i32 0, i32 37, !dbg !7416
  call void @mutex_lock(%struct.mutex* %mutex) #11, !dbg !7417
  %4 = load %struct.input_handle*, %struct.input_handle** %handle.addr, align 8, !dbg !7418
  %d_node = getelementptr inbounds %struct.input_handle, %struct.input_handle* %4, i32 0, i32 5, !dbg !7419
  call void @list_del_rcu(%struct.list_head* %d_node) #11, !dbg !7420
  %5 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !7421
  %mutex2 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %5, i32 0, i32 37, !dbg !7422
  call void @mutex_unlock(%struct.mutex* %mutex2) #11, !dbg !7423
  call void @synchronize_rcu() #11, !dbg !7424
  ret void, !dbg !7425
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_del_rcu(%struct.list_head* %entry1) #0 !dbg !7426 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !7427, metadata !DIExpression()), !dbg !7428
  %0 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !7429
  call void @__list_del_entry(%struct.list_head* %0) #11, !dbg !7430
  %1 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !7431
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !7432
  store %struct.list_head* bitcast (i8* getelementptr (i8, i8* inttoptr (i64 290 to i8*), i64 -2401263026318606336) to %struct.list_head*), %struct.list_head** %prev, align 8, !dbg !7433
  ret void, !dbg !7434
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @input_get_new_minor(i32 %legacy_base, i32 %legacy_num, i1 zeroext %allow_dynamic) #0 !dbg !7435 {
entry:
  %retval = alloca i32, align 4
  %legacy_base.addr = alloca i32, align 4
  %legacy_num.addr = alloca i32, align 4
  %allow_dynamic.addr = alloca i8, align 1
  %minor = alloca i32, align 4
  store i32 %legacy_base, i32* %legacy_base.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %legacy_base.addr, metadata !7438, metadata !DIExpression()), !dbg !7439
  store i32 %legacy_num, i32* %legacy_num.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %legacy_num.addr, metadata !7440, metadata !DIExpression()), !dbg !7441
  %frombool = zext i1 %allow_dynamic to i8
  store i8 %frombool, i8* %allow_dynamic.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %allow_dynamic.addr, metadata !7442, metadata !DIExpression()), !dbg !7443
  %0 = load i32, i32* %legacy_base.addr, align 4, !dbg !7444
  %cmp = icmp sge i32 %0, 0, !dbg !7446
  br i1 %cmp, label %if.then, label %if.end3, !dbg !7447

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %minor, metadata !7448, metadata !DIExpression()), !dbg !7450
  %1 = load i32, i32* %legacy_base.addr, align 4, !dbg !7451
  %2 = load i32, i32* %legacy_base.addr, align 4, !dbg !7451
  %3 = load i32, i32* %legacy_num.addr, align 4, !dbg !7451
  %add = add i32 %2, %3, !dbg !7451
  %sub = sub i32 %add, 1, !dbg !7451
  %call = call i32 @ida_alloc_range(%struct.ida* @input_ida, i32 %1, i32 %sub, i32 3264) #11, !dbg !7451
  store i32 %call, i32* %minor, align 4, !dbg !7450
  %4 = load i32, i32* %minor, align 4, !dbg !7452
  %cmp1 = icmp sge i32 %4, 0, !dbg !7454
  br i1 %cmp1, label %if.then2, label %lor.lhs.false, !dbg !7455

lor.lhs.false:                                    ; preds = %if.then
  %5 = load i8, i8* %allow_dynamic.addr, align 1, !dbg !7456
  %tobool = trunc i8 %5 to i1, !dbg !7456
  br i1 %tobool, label %if.end, label %if.then2, !dbg !7457

if.then2:                                         ; preds = %lor.lhs.false, %if.then
  %6 = load i32, i32* %minor, align 4, !dbg !7458
  store i32 %6, i32* %retval, align 4, !dbg !7459
  br label %return, !dbg !7459

if.end:                                           ; preds = %lor.lhs.false
  br label %if.end3, !dbg !7460

if.end3:                                          ; preds = %if.end, %entry
  %call4 = call i32 @ida_alloc_range(%struct.ida* @input_ida, i32 256, i32 1023, i32 3264) #11, !dbg !7461
  store i32 %call4, i32* %retval, align 4, !dbg !7462
  br label %return, !dbg !7462

return:                                           ; preds = %if.end3, %if.then2
  %7 = load i32, i32* %retval, align 4, !dbg !7463
  ret i32 %7, !dbg !7463
}

; Function Attrs: noredzone
declare dso_local i32 @ida_alloc_range(%struct.ida*, i32, i32, i32) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @input_free_minor(i32 %minor) #0 !dbg !7464 {
entry:
  %minor.addr = alloca i32, align 4
  store i32 %minor, i32* %minor.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %minor.addr, metadata !7467, metadata !DIExpression()), !dbg !7468
  %0 = load i32, i32* %minor.addr, align 4, !dbg !7469
  call void @ida_free(%struct.ida* @input_ida, i32 %0) #11, !dbg !7469
  ret void, !dbg !7470
}

; Function Attrs: noredzone
declare dso_local void @ida_free(%struct.ida*, i32) #3

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal void @input_exit() #5 section ".exit.text" !dbg !7471 {
entry:
  call void @input_proc_exit() #11, !dbg !7472
  call void @unregister_chrdev_region(i32 13631488, i32 1024) #11, !dbg !7473
  call void @class_unregister(%struct.class* @input_class) #11, !dbg !7474
  ret void, !dbg !7475
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @input_proc_exit() #0 !dbg !7476 {
entry:
  %0 = load %struct.proc_dir_entry*, %struct.proc_dir_entry** @proc_bus_input_dir, align 8, !dbg !7477
  call void @remove_proc_entry(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.60, i64 0, i64 0), %struct.proc_dir_entry* %0) #11, !dbg !7478
  %1 = load %struct.proc_dir_entry*, %struct.proc_dir_entry** @proc_bus_input_dir, align 8, !dbg !7479
  call void @remove_proc_entry(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.61, i64 0, i64 0), %struct.proc_dir_entry* %1) #11, !dbg !7480
  call void @remove_proc_entry(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.62, i64 0, i64 0), %struct.proc_dir_entry* null) #11, !dbg !7481
  ret void, !dbg !7482
}

; Function Attrs: noredzone
declare dso_local void @unregister_chrdev_region(i32, i32) #3

; Function Attrs: noredzone
declare dso_local void @class_unregister(%struct.class*) #3

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal i32 @input_init() #5 section ".init.text" !dbg !4005 {
entry:
  %retval = alloca i32, align 4
  %err = alloca i32, align 4
  %tmp = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %err, metadata !7483, metadata !DIExpression()), !dbg !7484
  %call = call i32 @__class_register(%struct.class* @input_class, %struct.lock_class_key* @input_init.__key) #11, !dbg !7485
  store i32 %call, i32* %tmp, align 4, !dbg !7485
  %0 = load i32, i32* %tmp, align 4, !dbg !7485
  store i32 %0, i32* %err, align 4, !dbg !7487
  %1 = load i32, i32* %err, align 4, !dbg !7488
  %tobool = icmp ne i32 %1, 0, !dbg !7488
  br i1 %tobool, label %if.then, label %if.end, !dbg !7490

if.then:                                          ; preds = %entry
  %call1 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.63, i64 0, i64 0)) #13, !dbg !7491
  %2 = load i32, i32* %err, align 4, !dbg !7493
  store i32 %2, i32* %retval, align 4, !dbg !7494
  br label %return, !dbg !7494

if.end:                                           ; preds = %entry
  %call2 = call i32 @input_proc_init() #13, !dbg !7495
  store i32 %call2, i32* %err, align 4, !dbg !7496
  %3 = load i32, i32* %err, align 4, !dbg !7497
  %tobool3 = icmp ne i32 %3, 0, !dbg !7497
  br i1 %tobool3, label %if.then4, label %if.end5, !dbg !7499

if.then4:                                         ; preds = %if.end
  br label %fail1, !dbg !7500

if.end5:                                          ; preds = %if.end
  %call6 = call i32 @register_chrdev_region(i32 13631488, i32 1024, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0)) #11, !dbg !7501
  store i32 %call6, i32* %err, align 4, !dbg !7502
  %4 = load i32, i32* %err, align 4, !dbg !7503
  %tobool7 = icmp ne i32 %4, 0, !dbg !7503
  br i1 %tobool7, label %if.then8, label %if.end10, !dbg !7505

if.then8:                                         ; preds = %if.end5
  %call9 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.64, i64 0, i64 0), i32 13) #13, !dbg !7506
  br label %fail2, !dbg !7508

if.end10:                                         ; preds = %if.end5
  store i32 0, i32* %retval, align 4, !dbg !7509
  br label %return, !dbg !7509

fail2:                                            ; preds = %if.then8
  call void @llvm.dbg.label(metadata !7510), !dbg !7511
  call void @input_proc_exit() #11, !dbg !7512
  br label %fail1, !dbg !7512

fail1:                                            ; preds = %fail2, %if.then4
  call void @llvm.dbg.label(metadata !7513), !dbg !7514
  call void @class_unregister(%struct.class* @input_class) #11, !dbg !7515
  %5 = load i32, i32* %err, align 4, !dbg !7516
  store i32 %5, i32* %retval, align 4, !dbg !7517
  br label %return, !dbg !7517

return:                                           ; preds = %fail1, %if.end10, %if.then
  %6 = load i32, i32* %retval, align 4, !dbg !7518
  ret i32 %6, !dbg !7518
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @arch_local_save_flags() #0 !dbg !7519 {
entry:
  %__ret = alloca i64, align 8
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  %__mask = alloca i64, align 8
  %tmp = alloca i64, align 8
  %tmp2 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__ret, metadata !7520, metadata !DIExpression()), !dbg !7522
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !7523, metadata !DIExpression()), !dbg !7522
  %0 = load i64, i64* %__edi, align 8, !dbg !7522
  store i64 %0, i64* %__edi, align 8, !dbg !7522
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !7524, metadata !DIExpression()), !dbg !7522
  %1 = load i64, i64* %__esi, align 8, !dbg !7522
  store i64 %1, i64* %__esi, align 8, !dbg !7522
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !7525, metadata !DIExpression()), !dbg !7522
  %2 = load i64, i64* %__edx, align 8, !dbg !7522
  store i64 %2, i64* %__edx, align 8, !dbg !7522
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !7526, metadata !DIExpression()), !dbg !7522
  %3 = load i64, i64* %__ecx, align 8, !dbg !7522
  store i64 %3, i64* %__ecx, align 8, !dbg !7522
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !7527, metadata !DIExpression()), !dbg !7522
  %4 = load i64, i64* %__eax, align 8, !dbg !7522
  store i64 %4, i64* %__eax, align 8, !dbg !7522
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 0, i32 0), align 8, !dbg !7522
  %6 = call i64 @llvm.read_register.i64(metadata !4033), !dbg !7528
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 36, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 0, i32 0), i32 1, i64 %6) #7, !dbg !7528, !srcloc !7531
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !7528
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !7528
  store i64 %asmresult, i64* %__eax, align 8, !dbg !7528
  call void @llvm.write_register.i64(metadata !4033, i64 %asmresult1), !dbg !7528
  %8 = load i64, i64* %__eax, align 8, !dbg !7528
  call void @llvm.dbg.declare(metadata i64* %__mask, metadata !7532, metadata !DIExpression()), !dbg !7534
  store i64 -1, i64* %__mask, align 8, !dbg !7534
  %9 = load i64, i64* %__mask, align 8, !dbg !7534
  store i64 %9, i64* %tmp, align 8, !dbg !7534
  %10 = load i64, i64* %tmp, align 8, !dbg !7534
  %and = and i64 %8, %10, !dbg !7528
  store i64 %and, i64* %__ret, align 8, !dbg !7528
  %11 = load i64, i64* %__ret, align 8, !dbg !7522
  store i64 %11, i64* %tmp2, align 8, !dbg !7535
  %12 = load i64, i64* %tmp2, align 8, !dbg !7522
  ret i64 %12, !dbg !7536
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_disable() #0 !dbg !7537 {
entry:
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !7538, metadata !DIExpression()), !dbg !7540
  %0 = load i64, i64* %__edi, align 8, !dbg !7540
  store i64 %0, i64* %__edi, align 8, !dbg !7540
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !7541, metadata !DIExpression()), !dbg !7540
  %1 = load i64, i64* %__esi, align 8, !dbg !7540
  store i64 %1, i64* %__esi, align 8, !dbg !7540
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !7542, metadata !DIExpression()), !dbg !7540
  %2 = load i64, i64* %__edx, align 8, !dbg !7540
  store i64 %2, i64* %__edx, align 8, !dbg !7540
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !7543, metadata !DIExpression()), !dbg !7540
  %3 = load i64, i64* %__ecx, align 8, !dbg !7540
  store i64 %3, i64* %__ecx, align 8, !dbg !7540
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !7544, metadata !DIExpression()), !dbg !7540
  %4 = load i64, i64* %__eax, align 8, !dbg !7540
  store i64 %4, i64* %__eax, align 8, !dbg !7540
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 2, i32 0), align 8, !dbg !7540
  %6 = call i64 @llvm.read_register.i64(metadata !4033), !dbg !7540
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 38, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 2, i32 0), i32 1, i64 %6) #7, !dbg !7540, !srcloc !7545
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !7540
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !7540
  store i64 %asmresult, i64* %__eax, align 8, !dbg !7540
  call void @llvm.write_register.i64(metadata !4033, i64 %asmresult1), !dbg !7540
  ret void, !dbg !7546
}

; Function Attrs: nounwind readonly
declare i64 @llvm.read_register.i64(metadata) #6

; Function Attrs: nounwind
declare void @llvm.write_register.i64(metadata, i64) #7

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @input_get_disposition(%struct.input_dev* %dev, i32 %type, i32 %code, i32* %pval) #0 !dbg !7547 {
entry:
  %dev.addr = alloca %struct.input_dev*, align 8
  %type.addr = alloca i32, align 4
  %code.addr = alloca i32, align 4
  %pval.addr = alloca i32*, align 8
  %disposition = alloca i32, align 4
  %value = alloca i32, align 4
  store %struct.input_dev* %dev, %struct.input_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.input_dev** %dev.addr, metadata !7550, metadata !DIExpression()), !dbg !7551
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !7552, metadata !DIExpression()), !dbg !7553
  store i32 %code, i32* %code.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %code.addr, metadata !7554, metadata !DIExpression()), !dbg !7555
  store i32* %pval, i32** %pval.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %pval.addr, metadata !7556, metadata !DIExpression()), !dbg !7557
  call void @llvm.dbg.declare(metadata i32* %disposition, metadata !7558, metadata !DIExpression()), !dbg !7559
  store i32 0, i32* %disposition, align 4, !dbg !7559
  call void @llvm.dbg.declare(metadata i32* %value, metadata !7560, metadata !DIExpression()), !dbg !7561
  %0 = load i32*, i32** %pval.addr, align 8, !dbg !7562
  %1 = load i32, i32* %0, align 4, !dbg !7563
  store i32 %1, i32* %value, align 4, !dbg !7561
  %2 = load i32, i32* %type.addr, align 4, !dbg !7564
  switch i32 %2, label %sw.epilog135 [
    i32 0, label %sw.bb
    i32 1, label %sw.bb4
    i32 5, label %sw.bb22
    i32 3, label %sw.bb45
    i32 2, label %sw.bb52
    i32 4, label %sw.bb60
    i32 17, label %sw.bb66
    i32 18, label %sw.bb90
    i32 20, label %sw.bb115
    i32 21, label %sw.bb129
    i32 22, label %sw.bb134
  ], !dbg !7565

sw.bb:                                            ; preds = %entry
  %3 = load i32, i32* %code.addr, align 4, !dbg !7566
  switch i32 %3, label %sw.epilog [
    i32 1, label %sw.bb1
    i32 0, label %sw.bb2
    i32 2, label %sw.bb3
  ], !dbg !7568

sw.bb1:                                           ; preds = %sw.bb
  store i32 3, i32* %disposition, align 4, !dbg !7569
  br label %sw.epilog, !dbg !7571

sw.bb2:                                           ; preds = %sw.bb
  store i32 9, i32* %disposition, align 4, !dbg !7572
  br label %sw.epilog, !dbg !7573

sw.bb3:                                           ; preds = %sw.bb
  store i32 1, i32* %disposition, align 4, !dbg !7574
  br label %sw.epilog, !dbg !7575

sw.epilog:                                        ; preds = %sw.bb, %sw.bb3, %sw.bb2, %sw.bb1
  br label %sw.epilog135, !dbg !7576

sw.bb4:                                           ; preds = %entry
  %4 = load i32, i32* %code.addr, align 4, !dbg !7577
  %5 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !7579
  %keybit = getelementptr inbounds %struct.input_dev, %struct.input_dev* %5, i32 0, i32 6, !dbg !7580
  %arraydecay = getelementptr inbounds [12 x i64], [12 x i64]* %keybit, i64 0, i64 0, !dbg !7579
  %call = call i32 @is_event_supported(i32 %4, i64* %arraydecay, i32 767) #11, !dbg !7581
  %tobool = icmp ne i32 %call, 0, !dbg !7581
  br i1 %tobool, label %if.then, label %if.end21, !dbg !7582

if.then:                                          ; preds = %sw.bb4
  %6 = load i32, i32* %value, align 4, !dbg !7583
  %cmp = icmp eq i32 %6, 2, !dbg !7586
  br i1 %cmp, label %if.then5, label %if.end, !dbg !7587

if.then5:                                         ; preds = %if.then
  store i32 1, i32* %disposition, align 4, !dbg !7588
  br label %sw.epilog135, !dbg !7590

if.end:                                           ; preds = %if.then
  %7 = load i32, i32* %code.addr, align 4, !dbg !7591
  %conv = zext i32 %7 to i64, !dbg !7591
  %8 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !7593
  %key = getelementptr inbounds %struct.input_dev, %struct.input_dev* %8, i32 0, i32 27, !dbg !7594
  %arraydecay6 = getelementptr inbounds [12 x i64], [12 x i64]* %key, i64 0, i64 0, !dbg !7593
  %call7 = call zeroext i1 @test_bit(i64 %conv, i64* %arraydecay6) #11, !dbg !7595
  %lnot = xor i1 %call7, true, !dbg !7596
  %lnot8 = xor i1 %lnot, true, !dbg !7597
  %lnot.ext = zext i1 %lnot8 to i32, !dbg !7597
  %9 = load i32, i32* %value, align 4, !dbg !7598
  %tobool9 = icmp ne i32 %9, 0, !dbg !7599
  %lnot10 = xor i1 %tobool9, true, !dbg !7599
  %lnot12 = xor i1 %lnot10, true, !dbg !7600
  %lnot.ext13 = zext i1 %lnot12 to i32, !dbg !7600
  %cmp14 = icmp ne i32 %lnot.ext, %lnot.ext13, !dbg !7601
  br i1 %cmp14, label %if.then16, label %if.end20, !dbg !7602

if.then16:                                        ; preds = %if.end
  %10 = load i32, i32* %code.addr, align 4, !dbg !7603
  %conv17 = zext i32 %10 to i64, !dbg !7603
  %11 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !7605
  %key18 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %11, i32 0, i32 27, !dbg !7606
  %arraydecay19 = getelementptr inbounds [12 x i64], [12 x i64]* %key18, i64 0, i64 0, !dbg !7605
  call void @__change_bit(i64 %conv17, i64* %arraydecay19) #11, !dbg !7607
  store i32 1, i32* %disposition, align 4, !dbg !7608
  br label %if.end20, !dbg !7609

if.end20:                                         ; preds = %if.then16, %if.end
  br label %if.end21, !dbg !7610

if.end21:                                         ; preds = %if.end20, %sw.bb4
  br label %sw.epilog135, !dbg !7611

sw.bb22:                                          ; preds = %entry
  %12 = load i32, i32* %code.addr, align 4, !dbg !7612
  %13 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !7614
  %swbit = getelementptr inbounds %struct.input_dev, %struct.input_dev* %13, i32 0, i32 13, !dbg !7615
  %arraydecay23 = getelementptr inbounds [1 x i64], [1 x i64]* %swbit, i64 0, i64 0, !dbg !7614
  %call24 = call i32 @is_event_supported(i32 %12, i64* %arraydecay23, i32 16) #11, !dbg !7616
  %tobool25 = icmp ne i32 %call24, 0, !dbg !7616
  br i1 %tobool25, label %land.lhs.true, label %if.end44, !dbg !7617

land.lhs.true:                                    ; preds = %sw.bb22
  %14 = load i32, i32* %code.addr, align 4, !dbg !7618
  %conv26 = zext i32 %14 to i64, !dbg !7618
  %15 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !7619
  %sw = getelementptr inbounds %struct.input_dev, %struct.input_dev* %15, i32 0, i32 30, !dbg !7620
  %arraydecay27 = getelementptr inbounds [1 x i64], [1 x i64]* %sw, i64 0, i64 0, !dbg !7619
  %call28 = call zeroext i1 @test_bit(i64 %conv26, i64* %arraydecay27) #11, !dbg !7621
  %lnot29 = xor i1 %call28, true, !dbg !7622
  %lnot31 = xor i1 %lnot29, true, !dbg !7623
  %lnot.ext32 = zext i1 %lnot31 to i32, !dbg !7623
  %16 = load i32, i32* %value, align 4, !dbg !7624
  %tobool33 = icmp ne i32 %16, 0, !dbg !7625
  %lnot34 = xor i1 %tobool33, true, !dbg !7625
  %lnot36 = xor i1 %lnot34, true, !dbg !7626
  %lnot.ext37 = zext i1 %lnot36 to i32, !dbg !7626
  %cmp38 = icmp ne i32 %lnot.ext32, %lnot.ext37, !dbg !7627
  br i1 %cmp38, label %if.then40, label %if.end44, !dbg !7628

if.then40:                                        ; preds = %land.lhs.true
  %17 = load i32, i32* %code.addr, align 4, !dbg !7629
  %conv41 = zext i32 %17 to i64, !dbg !7629
  %18 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !7631
  %sw42 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %18, i32 0, i32 30, !dbg !7632
  %arraydecay43 = getelementptr inbounds [1 x i64], [1 x i64]* %sw42, i64 0, i64 0, !dbg !7631
  call void @__change_bit(i64 %conv41, i64* %arraydecay43) #11, !dbg !7633
  store i32 1, i32* %disposition, align 4, !dbg !7634
  br label %if.end44, !dbg !7635

if.end44:                                         ; preds = %if.then40, %land.lhs.true, %sw.bb22
  br label %sw.epilog135, !dbg !7636

sw.bb45:                                          ; preds = %entry
  %19 = load i32, i32* %code.addr, align 4, !dbg !7637
  %20 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !7639
  %absbit = getelementptr inbounds %struct.input_dev, %struct.input_dev* %20, i32 0, i32 8, !dbg !7640
  %arraydecay46 = getelementptr inbounds [1 x i64], [1 x i64]* %absbit, i64 0, i64 0, !dbg !7639
  %call47 = call i32 @is_event_supported(i32 %19, i64* %arraydecay46, i32 63) #11, !dbg !7641
  %tobool48 = icmp ne i32 %call47, 0, !dbg !7641
  br i1 %tobool48, label %if.then49, label %if.end51, !dbg !7642

if.then49:                                        ; preds = %sw.bb45
  %21 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !7643
  %22 = load i32, i32* %code.addr, align 4, !dbg !7644
  %call50 = call i32 @input_handle_abs_event(%struct.input_dev* %21, i32 %22, i32* %value) #11, !dbg !7645
  store i32 %call50, i32* %disposition, align 4, !dbg !7646
  br label %if.end51, !dbg !7647

if.end51:                                         ; preds = %if.then49, %sw.bb45
  br label %sw.epilog135, !dbg !7648

sw.bb52:                                          ; preds = %entry
  %23 = load i32, i32* %code.addr, align 4, !dbg !7649
  %24 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !7651
  %relbit = getelementptr inbounds %struct.input_dev, %struct.input_dev* %24, i32 0, i32 7, !dbg !7652
  %arraydecay53 = getelementptr inbounds [1 x i64], [1 x i64]* %relbit, i64 0, i64 0, !dbg !7651
  %call54 = call i32 @is_event_supported(i32 %23, i64* %arraydecay53, i32 15) #11, !dbg !7653
  %tobool55 = icmp ne i32 %call54, 0, !dbg !7653
  br i1 %tobool55, label %land.lhs.true56, label %if.end59, !dbg !7654

land.lhs.true56:                                  ; preds = %sw.bb52
  %25 = load i32, i32* %value, align 4, !dbg !7655
  %tobool57 = icmp ne i32 %25, 0, !dbg !7655
  br i1 %tobool57, label %if.then58, label %if.end59, !dbg !7656

if.then58:                                        ; preds = %land.lhs.true56
  store i32 1, i32* %disposition, align 4, !dbg !7657
  br label %if.end59, !dbg !7658

if.end59:                                         ; preds = %if.then58, %land.lhs.true56, %sw.bb52
  br label %sw.epilog135, !dbg !7659

sw.bb60:                                          ; preds = %entry
  %26 = load i32, i32* %code.addr, align 4, !dbg !7660
  %27 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !7662
  %mscbit = getelementptr inbounds %struct.input_dev, %struct.input_dev* %27, i32 0, i32 9, !dbg !7663
  %arraydecay61 = getelementptr inbounds [1 x i64], [1 x i64]* %mscbit, i64 0, i64 0, !dbg !7662
  %call62 = call i32 @is_event_supported(i32 %26, i64* %arraydecay61, i32 7) #11, !dbg !7664
  %tobool63 = icmp ne i32 %call62, 0, !dbg !7664
  br i1 %tobool63, label %if.then64, label %if.end65, !dbg !7665

if.then64:                                        ; preds = %sw.bb60
  store i32 3, i32* %disposition, align 4, !dbg !7666
  br label %if.end65, !dbg !7667

if.end65:                                         ; preds = %if.then64, %sw.bb60
  br label %sw.epilog135, !dbg !7668

sw.bb66:                                          ; preds = %entry
  %28 = load i32, i32* %code.addr, align 4, !dbg !7669
  %29 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !7671
  %ledbit = getelementptr inbounds %struct.input_dev, %struct.input_dev* %29, i32 0, i32 10, !dbg !7672
  %arraydecay67 = getelementptr inbounds [1 x i64], [1 x i64]* %ledbit, i64 0, i64 0, !dbg !7671
  %call68 = call i32 @is_event_supported(i32 %28, i64* %arraydecay67, i32 15) #11, !dbg !7673
  %tobool69 = icmp ne i32 %call68, 0, !dbg !7673
  br i1 %tobool69, label %land.lhs.true70, label %if.end89, !dbg !7674

land.lhs.true70:                                  ; preds = %sw.bb66
  %30 = load i32, i32* %code.addr, align 4, !dbg !7675
  %conv71 = zext i32 %30 to i64, !dbg !7675
  %31 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !7676
  %led = getelementptr inbounds %struct.input_dev, %struct.input_dev* %31, i32 0, i32 28, !dbg !7677
  %arraydecay72 = getelementptr inbounds [1 x i64], [1 x i64]* %led, i64 0, i64 0, !dbg !7676
  %call73 = call zeroext i1 @test_bit(i64 %conv71, i64* %arraydecay72) #11, !dbg !7678
  %lnot74 = xor i1 %call73, true, !dbg !7679
  %lnot76 = xor i1 %lnot74, true, !dbg !7680
  %lnot.ext77 = zext i1 %lnot76 to i32, !dbg !7680
  %32 = load i32, i32* %value, align 4, !dbg !7681
  %tobool78 = icmp ne i32 %32, 0, !dbg !7682
  %lnot79 = xor i1 %tobool78, true, !dbg !7682
  %lnot81 = xor i1 %lnot79, true, !dbg !7683
  %lnot.ext82 = zext i1 %lnot81 to i32, !dbg !7683
  %cmp83 = icmp ne i32 %lnot.ext77, %lnot.ext82, !dbg !7684
  br i1 %cmp83, label %if.then85, label %if.end89, !dbg !7685

if.then85:                                        ; preds = %land.lhs.true70
  %33 = load i32, i32* %code.addr, align 4, !dbg !7686
  %conv86 = zext i32 %33 to i64, !dbg !7686
  %34 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !7688
  %led87 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %34, i32 0, i32 28, !dbg !7689
  %arraydecay88 = getelementptr inbounds [1 x i64], [1 x i64]* %led87, i64 0, i64 0, !dbg !7688
  call void @__change_bit(i64 %conv86, i64* %arraydecay88) #11, !dbg !7690
  store i32 3, i32* %disposition, align 4, !dbg !7691
  br label %if.end89, !dbg !7692

if.end89:                                         ; preds = %if.then85, %land.lhs.true70, %sw.bb66
  br label %sw.epilog135, !dbg !7693

sw.bb90:                                          ; preds = %entry
  %35 = load i32, i32* %code.addr, align 4, !dbg !7694
  %36 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !7696
  %sndbit = getelementptr inbounds %struct.input_dev, %struct.input_dev* %36, i32 0, i32 11, !dbg !7697
  %arraydecay91 = getelementptr inbounds [1 x i64], [1 x i64]* %sndbit, i64 0, i64 0, !dbg !7696
  %call92 = call i32 @is_event_supported(i32 %35, i64* %arraydecay91, i32 7) #11, !dbg !7698
  %tobool93 = icmp ne i32 %call92, 0, !dbg !7698
  br i1 %tobool93, label %if.then94, label %if.end114, !dbg !7699

if.then94:                                        ; preds = %sw.bb90
  %37 = load i32, i32* %code.addr, align 4, !dbg !7700
  %conv95 = zext i32 %37 to i64, !dbg !7700
  %38 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !7703
  %snd = getelementptr inbounds %struct.input_dev, %struct.input_dev* %38, i32 0, i32 29, !dbg !7704
  %arraydecay96 = getelementptr inbounds [1 x i64], [1 x i64]* %snd, i64 0, i64 0, !dbg !7703
  %call97 = call zeroext i1 @test_bit(i64 %conv95, i64* %arraydecay96) #11, !dbg !7705
  %lnot98 = xor i1 %call97, true, !dbg !7706
  %lnot100 = xor i1 %lnot98, true, !dbg !7707
  %lnot.ext101 = zext i1 %lnot100 to i32, !dbg !7707
  %39 = load i32, i32* %value, align 4, !dbg !7708
  %tobool102 = icmp ne i32 %39, 0, !dbg !7709
  %lnot103 = xor i1 %tobool102, true, !dbg !7709
  %lnot105 = xor i1 %lnot103, true, !dbg !7710
  %lnot.ext106 = zext i1 %lnot105 to i32, !dbg !7710
  %cmp107 = icmp ne i32 %lnot.ext101, %lnot.ext106, !dbg !7711
  br i1 %cmp107, label %if.then109, label %if.end113, !dbg !7712

if.then109:                                       ; preds = %if.then94
  %40 = load i32, i32* %code.addr, align 4, !dbg !7713
  %conv110 = zext i32 %40 to i64, !dbg !7713
  %41 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !7714
  %snd111 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %41, i32 0, i32 29, !dbg !7715
  %arraydecay112 = getelementptr inbounds [1 x i64], [1 x i64]* %snd111, i64 0, i64 0, !dbg !7714
  call void @__change_bit(i64 %conv110, i64* %arraydecay112) #11, !dbg !7716
  br label %if.end113, !dbg !7716

if.end113:                                        ; preds = %if.then109, %if.then94
  store i32 3, i32* %disposition, align 4, !dbg !7717
  br label %if.end114, !dbg !7718

if.end114:                                        ; preds = %if.end113, %sw.bb90
  br label %sw.epilog135, !dbg !7719

sw.bb115:                                         ; preds = %entry
  %42 = load i32, i32* %code.addr, align 4, !dbg !7720
  %cmp116 = icmp ule i32 %42, 1, !dbg !7722
  br i1 %cmp116, label %land.lhs.true118, label %if.end128, !dbg !7723

land.lhs.true118:                                 ; preds = %sw.bb115
  %43 = load i32, i32* %value, align 4, !dbg !7724
  %cmp119 = icmp sge i32 %43, 0, !dbg !7725
  br i1 %cmp119, label %land.lhs.true121, label %if.end128, !dbg !7726

land.lhs.true121:                                 ; preds = %land.lhs.true118
  %44 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !7727
  %rep = getelementptr inbounds %struct.input_dev, %struct.input_dev* %44, i32 0, i32 24, !dbg !7728
  %45 = load i32, i32* %code.addr, align 4, !dbg !7729
  %idxprom = zext i32 %45 to i64, !dbg !7727
  %arrayidx = getelementptr [2 x i32], [2 x i32]* %rep, i64 0, i64 %idxprom, !dbg !7727
  %46 = load i32, i32* %arrayidx, align 4, !dbg !7727
  %47 = load i32, i32* %value, align 4, !dbg !7730
  %cmp122 = icmp ne i32 %46, %47, !dbg !7731
  br i1 %cmp122, label %if.then124, label %if.end128, !dbg !7732

if.then124:                                       ; preds = %land.lhs.true121
  %48 = load i32, i32* %value, align 4, !dbg !7733
  %49 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !7735
  %rep125 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %49, i32 0, i32 24, !dbg !7736
  %50 = load i32, i32* %code.addr, align 4, !dbg !7737
  %idxprom126 = zext i32 %50 to i64, !dbg !7735
  %arrayidx127 = getelementptr [2 x i32], [2 x i32]* %rep125, i64 0, i64 %idxprom126, !dbg !7735
  store i32 %48, i32* %arrayidx127, align 4, !dbg !7738
  store i32 3, i32* %disposition, align 4, !dbg !7739
  br label %if.end128, !dbg !7740

if.end128:                                        ; preds = %if.then124, %land.lhs.true121, %land.lhs.true118, %sw.bb115
  br label %sw.epilog135, !dbg !7741

sw.bb129:                                         ; preds = %entry
  %51 = load i32, i32* %value, align 4, !dbg !7742
  %cmp130 = icmp sge i32 %51, 0, !dbg !7744
  br i1 %cmp130, label %if.then132, label %if.end133, !dbg !7745

if.then132:                                       ; preds = %sw.bb129
  store i32 3, i32* %disposition, align 4, !dbg !7746
  br label %if.end133, !dbg !7747

if.end133:                                        ; preds = %if.then132, %sw.bb129
  br label %sw.epilog135, !dbg !7748

sw.bb134:                                         ; preds = %entry
  store i32 3, i32* %disposition, align 4, !dbg !7749
  br label %sw.epilog135, !dbg !7750

sw.epilog135:                                     ; preds = %entry, %sw.bb134, %if.end133, %if.end128, %if.end114, %if.end89, %if.end65, %if.end59, %if.end51, %if.end44, %if.end21, %if.then5, %sw.epilog
  %52 = load i32, i32* %value, align 4, !dbg !7751
  %53 = load i32*, i32** %pval.addr, align 8, !dbg !7752
  store i32 %52, i32* %53, align 4, !dbg !7753
  %54 = load i32, i32* %disposition, align 4, !dbg !7754
  ret i32 %54, !dbg !7755
}

; Function Attrs: noredzone
declare dso_local void @add_input_randomness(i32, i32, i32) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__change_bit(i64 %nr, i64* %addr) #0 !dbg !7756 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !7757, metadata !DIExpression()), !dbg !7759
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !7761, metadata !DIExpression()), !dbg !7762
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !4504, metadata !DIExpression()), !dbg !7763
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !4514, metadata !DIExpression()), !dbg !7765
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !7766, metadata !DIExpression()), !dbg !7767
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !7768, metadata !DIExpression()), !dbg !7769
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !7770
  %1 = load i64, i64* %nr.addr, align 8, !dbg !7771
  %div = sdiv i64 %1, 64, !dbg !7771
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !7772
  %2 = bitcast i64* %add.ptr to i8*, !dbg !7770
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !7773
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !7774
  %conv.i = trunc i64 %4 to i32, !dbg !7774
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #12, !dbg !7775
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !7776
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !7776
  call void @kcsan_check_access(i8* %5, i64 %6, i32 1) #12, !dbg !7776
  %7 = load i64, i64* %nr.addr, align 8, !dbg !7777
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !7778
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64*, i64** %addr.addr.i, align 8, !dbg !7779
  %10 = load i64, i64* %nr.addr.i, align 8, !dbg !7780
  call void asm sideeffect " btcq  $1,$0", "*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %9, i64 %10) #7, !dbg !7781, !srcloc !7782
  ret void, !dbg !7783
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @input_handle_abs_event(%struct.input_dev* %dev, i32 %code, i32* %pval) #0 !dbg !7784 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.input_dev*, align 8
  %code.addr = alloca i32, align 4
  %pval.addr = alloca i32*, align 8
  %mt = alloca %struct.input_mt*, align 8
  %is_mt_event = alloca i8, align 1
  %pold = alloca i32*, align 8
  store %struct.input_dev* %dev, %struct.input_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.input_dev** %dev.addr, metadata !7787, metadata !DIExpression()), !dbg !7788
  store i32 %code, i32* %code.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %code.addr, metadata !7789, metadata !DIExpression()), !dbg !7790
  store i32* %pval, i32** %pval.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %pval.addr, metadata !7791, metadata !DIExpression()), !dbg !7792
  call void @llvm.dbg.declare(metadata %struct.input_mt** %mt, metadata !7793, metadata !DIExpression()), !dbg !7794
  %0 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !7795
  %mt1 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %0, i32 0, i32 25, !dbg !7796
  %1 = load %struct.input_mt*, %struct.input_mt** %mt1, align 8, !dbg !7796
  store %struct.input_mt* %1, %struct.input_mt** %mt, align 8, !dbg !7794
  call void @llvm.dbg.declare(metadata i8* %is_mt_event, metadata !7797, metadata !DIExpression()), !dbg !7798
  call void @llvm.dbg.declare(metadata i32** %pold, metadata !7799, metadata !DIExpression()), !dbg !7800
  %2 = load i32, i32* %code.addr, align 4, !dbg !7801
  %cmp = icmp eq i32 %2, 47, !dbg !7803
  br i1 %cmp, label %if.then, label %if.end6, !dbg !7804

if.then:                                          ; preds = %entry
  %3 = load %struct.input_mt*, %struct.input_mt** %mt, align 8, !dbg !7805
  %tobool = icmp ne %struct.input_mt* %3, null, !dbg !7805
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !7808

land.lhs.true:                                    ; preds = %if.then
  %4 = load i32*, i32** %pval.addr, align 8, !dbg !7809
  %5 = load i32, i32* %4, align 4, !dbg !7810
  %cmp2 = icmp sge i32 %5, 0, !dbg !7811
  br i1 %cmp2, label %land.lhs.true3, label %if.end, !dbg !7812

land.lhs.true3:                                   ; preds = %land.lhs.true
  %6 = load i32*, i32** %pval.addr, align 8, !dbg !7813
  %7 = load i32, i32* %6, align 4, !dbg !7814
  %8 = load %struct.input_mt*, %struct.input_mt** %mt, align 8, !dbg !7815
  %num_slots = getelementptr inbounds %struct.input_mt, %struct.input_mt* %8, i32 0, i32 1, !dbg !7816
  %9 = load i32, i32* %num_slots, align 4, !dbg !7816
  %cmp4 = icmp slt i32 %7, %9, !dbg !7817
  br i1 %cmp4, label %if.then5, label %if.end, !dbg !7818

if.then5:                                         ; preds = %land.lhs.true3
  %10 = load i32*, i32** %pval.addr, align 8, !dbg !7819
  %11 = load i32, i32* %10, align 4, !dbg !7820
  %12 = load %struct.input_mt*, %struct.input_mt** %mt, align 8, !dbg !7821
  %slot = getelementptr inbounds %struct.input_mt, %struct.input_mt* %12, i32 0, i32 2, !dbg !7822
  store i32 %11, i32* %slot, align 8, !dbg !7823
  br label %if.end, !dbg !7821

if.end:                                           ; preds = %if.then5, %land.lhs.true3, %land.lhs.true, %if.then
  store i32 0, i32* %retval, align 4, !dbg !7824
  br label %return, !dbg !7824

if.end6:                                          ; preds = %entry
  %13 = load i32, i32* %code.addr, align 4, !dbg !7825
  %call = call zeroext i1 @input_is_mt_value(i32 %13) #11, !dbg !7826
  %frombool = zext i1 %call to i8, !dbg !7827
  store i8 %frombool, i8* %is_mt_event, align 1, !dbg !7827
  %14 = load i8, i8* %is_mt_event, align 1, !dbg !7828
  %tobool7 = trunc i8 %14 to i1, !dbg !7828
  br i1 %tobool7, label %if.else, label %if.then8, !dbg !7830

if.then8:                                         ; preds = %if.end6
  %15 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !7831
  %absinfo = getelementptr inbounds %struct.input_dev, %struct.input_dev* %15, i32 0, i32 26, !dbg !7833
  %16 = load %struct.input_absinfo*, %struct.input_absinfo** %absinfo, align 8, !dbg !7833
  %17 = load i32, i32* %code.addr, align 4, !dbg !7834
  %idxprom = zext i32 %17 to i64, !dbg !7831
  %arrayidx = getelementptr %struct.input_absinfo, %struct.input_absinfo* %16, i64 %idxprom, !dbg !7831
  %value = getelementptr inbounds %struct.input_absinfo, %struct.input_absinfo* %arrayidx, i32 0, i32 0, !dbg !7835
  store i32* %value, i32** %pold, align 8, !dbg !7836
  br label %if.end18, !dbg !7837

if.else:                                          ; preds = %if.end6
  %18 = load %struct.input_mt*, %struct.input_mt** %mt, align 8, !dbg !7838
  %tobool9 = icmp ne %struct.input_mt* %18, null, !dbg !7838
  br i1 %tobool9, label %if.then10, label %if.else16, !dbg !7840

if.then10:                                        ; preds = %if.else
  %19 = load %struct.input_mt*, %struct.input_mt** %mt, align 8, !dbg !7841
  %slots = getelementptr inbounds %struct.input_mt, %struct.input_mt* %19, i32 0, i32 6, !dbg !7843
  %20 = load %struct.input_mt*, %struct.input_mt** %mt, align 8, !dbg !7844
  %slot11 = getelementptr inbounds %struct.input_mt, %struct.input_mt* %20, i32 0, i32 2, !dbg !7845
  %21 = load i32, i32* %slot11, align 8, !dbg !7845
  %idxprom12 = sext i32 %21 to i64, !dbg !7841
  %arrayidx13 = getelementptr [0 x %struct.input_mt_slot], [0 x %struct.input_mt_slot]* %slots, i64 0, i64 %idxprom12, !dbg !7841
  %abs = getelementptr inbounds %struct.input_mt_slot, %struct.input_mt_slot* %arrayidx13, i32 0, i32 0, !dbg !7846
  %22 = load i32, i32* %code.addr, align 4, !dbg !7847
  %sub = sub i32 %22, 48, !dbg !7848
  %idxprom14 = zext i32 %sub to i64, !dbg !7841
  %arrayidx15 = getelementptr [14 x i32], [14 x i32]* %abs, i64 0, i64 %idxprom14, !dbg !7841
  store i32* %arrayidx15, i32** %pold, align 8, !dbg !7849
  br label %if.end17, !dbg !7850

if.else16:                                        ; preds = %if.else
  store i32* null, i32** %pold, align 8, !dbg !7851
  br label %if.end17

if.end17:                                         ; preds = %if.else16, %if.then10
  br label %if.end18

if.end18:                                         ; preds = %if.end17, %if.then8
  %23 = load i32*, i32** %pold, align 8, !dbg !7853
  %tobool19 = icmp ne i32* %23, null, !dbg !7853
  br i1 %tobool19, label %if.then20, label %if.end28, !dbg !7855

if.then20:                                        ; preds = %if.end18
  %24 = load i32*, i32** %pval.addr, align 8, !dbg !7856
  %25 = load i32, i32* %24, align 4, !dbg !7858
  %26 = load i32*, i32** %pold, align 8, !dbg !7859
  %27 = load i32, i32* %26, align 4, !dbg !7860
  %28 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !7861
  %absinfo21 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %28, i32 0, i32 26, !dbg !7862
  %29 = load %struct.input_absinfo*, %struct.input_absinfo** %absinfo21, align 8, !dbg !7862
  %30 = load i32, i32* %code.addr, align 4, !dbg !7863
  %idxprom22 = zext i32 %30 to i64, !dbg !7861
  %arrayidx23 = getelementptr %struct.input_absinfo, %struct.input_absinfo* %29, i64 %idxprom22, !dbg !7861
  %fuzz = getelementptr inbounds %struct.input_absinfo, %struct.input_absinfo* %arrayidx23, i32 0, i32 3, !dbg !7864
  %31 = load i32, i32* %fuzz, align 4, !dbg !7864
  %call24 = call i32 @input_defuzz_abs_event(i32 %25, i32 %27, i32 %31) #11, !dbg !7865
  %32 = load i32*, i32** %pval.addr, align 8, !dbg !7866
  store i32 %call24, i32* %32, align 4, !dbg !7867
  %33 = load i32*, i32** %pold, align 8, !dbg !7868
  %34 = load i32, i32* %33, align 4, !dbg !7870
  %35 = load i32*, i32** %pval.addr, align 8, !dbg !7871
  %36 = load i32, i32* %35, align 4, !dbg !7872
  %cmp25 = icmp eq i32 %34, %36, !dbg !7873
  br i1 %cmp25, label %if.then26, label %if.end27, !dbg !7874

if.then26:                                        ; preds = %if.then20
  store i32 0, i32* %retval, align 4, !dbg !7875
  br label %return, !dbg !7875

if.end27:                                         ; preds = %if.then20
  %37 = load i32*, i32** %pval.addr, align 8, !dbg !7876
  %38 = load i32, i32* %37, align 4, !dbg !7877
  %39 = load i32*, i32** %pold, align 8, !dbg !7878
  store i32 %38, i32* %39, align 4, !dbg !7879
  br label %if.end28, !dbg !7880

if.end28:                                         ; preds = %if.end27, %if.end18
  %40 = load i8, i8* %is_mt_event, align 1, !dbg !7881
  %tobool29 = trunc i8 %40 to i1, !dbg !7881
  br i1 %tobool29, label %land.lhs.true30, label %if.end38, !dbg !7883

land.lhs.true30:                                  ; preds = %if.end28
  %41 = load %struct.input_mt*, %struct.input_mt** %mt, align 8, !dbg !7884
  %tobool31 = icmp ne %struct.input_mt* %41, null, !dbg !7884
  br i1 %tobool31, label %land.lhs.true32, label %if.end38, !dbg !7885

land.lhs.true32:                                  ; preds = %land.lhs.true30
  %42 = load %struct.input_mt*, %struct.input_mt** %mt, align 8, !dbg !7886
  %slot33 = getelementptr inbounds %struct.input_mt, %struct.input_mt* %42, i32 0, i32 2, !dbg !7887
  %43 = load i32, i32* %slot33, align 8, !dbg !7887
  %44 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !7888
  %call34 = call i32 @input_abs_get_val(%struct.input_dev* %44, i32 47) #11, !dbg !7889
  %cmp35 = icmp ne i32 %43, %call34, !dbg !7890
  br i1 %cmp35, label %if.then36, label %if.end38, !dbg !7891

if.then36:                                        ; preds = %land.lhs.true32
  %45 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !7892
  %46 = load %struct.input_mt*, %struct.input_mt** %mt, align 8, !dbg !7894
  %slot37 = getelementptr inbounds %struct.input_mt, %struct.input_mt* %46, i32 0, i32 2, !dbg !7895
  %47 = load i32, i32* %slot37, align 8, !dbg !7895
  call void @input_abs_set_val(%struct.input_dev* %45, i32 47, i32 %47) #11, !dbg !7896
  store i32 5, i32* %retval, align 4, !dbg !7897
  br label %return, !dbg !7897

if.end38:                                         ; preds = %land.lhs.true32, %land.lhs.true30, %if.end28
  store i32 1, i32* %retval, align 4, !dbg !7898
  br label %return, !dbg !7898

return:                                           ; preds = %if.end38, %if.then36, %if.then26, %if.end
  %48 = load i32, i32* %retval, align 4, !dbg !7899
  ret i32 %48, !dbg !7899
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @kasan_check_write(i8* %p, i32 %size) #0 !dbg !7900 {
entry:
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !7904, metadata !DIExpression()), !dbg !7905
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !7906, metadata !DIExpression()), !dbg !7907
  ret i1 true, !dbg !7908
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @kcsan_check_access(i8* %ptr, i64 %size, i32 %type) #0 !dbg !7909 {
entry:
  %ptr.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %type.addr = alloca i32, align 4
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !7913, metadata !DIExpression()), !dbg !7914
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !7915, metadata !DIExpression()), !dbg !7916
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !7917, metadata !DIExpression()), !dbg !7918
  ret void, !dbg !7919
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @input_is_mt_value(i32 %axis) #0 !dbg !7920 {
entry:
  %axis.addr = alloca i32, align 4
  store i32 %axis, i32* %axis.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %axis.addr, metadata !7923, metadata !DIExpression()), !dbg !7924
  %0 = load i32, i32* %axis.addr, align 4, !dbg !7925
  %cmp = icmp sge i32 %0, 48, !dbg !7926
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !7927

land.rhs:                                         ; preds = %entry
  %1 = load i32, i32* %axis.addr, align 4, !dbg !7928
  %cmp1 = icmp sle i32 %1, 61, !dbg !7929
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %2 = phi i1 [ false, %entry ], [ %cmp1, %land.rhs ], !dbg !7930
  ret i1 %2, !dbg !7931
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @input_defuzz_abs_event(i32 %value, i32 %old_val, i32 %fuzz) #0 !dbg !7932 {
entry:
  %retval = alloca i32, align 4
  %value.addr = alloca i32, align 4
  %old_val.addr = alloca i32, align 4
  %fuzz.addr = alloca i32, align 4
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !7935, metadata !DIExpression()), !dbg !7936
  store i32 %old_val, i32* %old_val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %old_val.addr, metadata !7937, metadata !DIExpression()), !dbg !7938
  store i32 %fuzz, i32* %fuzz.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fuzz.addr, metadata !7939, metadata !DIExpression()), !dbg !7940
  %0 = load i32, i32* %fuzz.addr, align 4, !dbg !7941
  %tobool = icmp ne i32 %0, 0, !dbg !7941
  br i1 %tobool, label %if.then, label %if.end24, !dbg !7943

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %value.addr, align 4, !dbg !7944
  %2 = load i32, i32* %old_val.addr, align 4, !dbg !7947
  %3 = load i32, i32* %fuzz.addr, align 4, !dbg !7948
  %div = sdiv i32 %3, 2, !dbg !7949
  %sub = sub i32 %2, %div, !dbg !7950
  %cmp = icmp sgt i32 %1, %sub, !dbg !7951
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !7952

land.lhs.true:                                    ; preds = %if.then
  %4 = load i32, i32* %value.addr, align 4, !dbg !7953
  %5 = load i32, i32* %old_val.addr, align 4, !dbg !7954
  %6 = load i32, i32* %fuzz.addr, align 4, !dbg !7955
  %div1 = sdiv i32 %6, 2, !dbg !7956
  %add = add i32 %5, %div1, !dbg !7957
  %cmp2 = icmp slt i32 %4, %add, !dbg !7958
  br i1 %cmp2, label %if.then3, label %if.end, !dbg !7959

if.then3:                                         ; preds = %land.lhs.true
  %7 = load i32, i32* %old_val.addr, align 4, !dbg !7960
  store i32 %7, i32* %retval, align 4, !dbg !7961
  br label %return, !dbg !7961

if.end:                                           ; preds = %land.lhs.true, %if.then
  %8 = load i32, i32* %value.addr, align 4, !dbg !7962
  %9 = load i32, i32* %old_val.addr, align 4, !dbg !7964
  %10 = load i32, i32* %fuzz.addr, align 4, !dbg !7965
  %sub4 = sub i32 %9, %10, !dbg !7966
  %cmp5 = icmp sgt i32 %8, %sub4, !dbg !7967
  br i1 %cmp5, label %land.lhs.true6, label %if.end12, !dbg !7968

land.lhs.true6:                                   ; preds = %if.end
  %11 = load i32, i32* %value.addr, align 4, !dbg !7969
  %12 = load i32, i32* %old_val.addr, align 4, !dbg !7970
  %13 = load i32, i32* %fuzz.addr, align 4, !dbg !7971
  %add7 = add i32 %12, %13, !dbg !7972
  %cmp8 = icmp slt i32 %11, %add7, !dbg !7973
  br i1 %cmp8, label %if.then9, label %if.end12, !dbg !7974

if.then9:                                         ; preds = %land.lhs.true6
  %14 = load i32, i32* %old_val.addr, align 4, !dbg !7975
  %mul = mul i32 %14, 3, !dbg !7976
  %15 = load i32, i32* %value.addr, align 4, !dbg !7977
  %add10 = add i32 %mul, %15, !dbg !7978
  %div11 = sdiv i32 %add10, 4, !dbg !7979
  store i32 %div11, i32* %retval, align 4, !dbg !7980
  br label %return, !dbg !7980

if.end12:                                         ; preds = %land.lhs.true6, %if.end
  %16 = load i32, i32* %value.addr, align 4, !dbg !7981
  %17 = load i32, i32* %old_val.addr, align 4, !dbg !7983
  %18 = load i32, i32* %fuzz.addr, align 4, !dbg !7984
  %mul13 = mul i32 %18, 2, !dbg !7985
  %sub14 = sub i32 %17, %mul13, !dbg !7986
  %cmp15 = icmp sgt i32 %16, %sub14, !dbg !7987
  br i1 %cmp15, label %land.lhs.true16, label %if.end23, !dbg !7988

land.lhs.true16:                                  ; preds = %if.end12
  %19 = load i32, i32* %value.addr, align 4, !dbg !7989
  %20 = load i32, i32* %old_val.addr, align 4, !dbg !7990
  %21 = load i32, i32* %fuzz.addr, align 4, !dbg !7991
  %mul17 = mul i32 %21, 2, !dbg !7992
  %add18 = add i32 %20, %mul17, !dbg !7993
  %cmp19 = icmp slt i32 %19, %add18, !dbg !7994
  br i1 %cmp19, label %if.then20, label %if.end23, !dbg !7995

if.then20:                                        ; preds = %land.lhs.true16
  %22 = load i32, i32* %old_val.addr, align 4, !dbg !7996
  %23 = load i32, i32* %value.addr, align 4, !dbg !7997
  %add21 = add i32 %22, %23, !dbg !7998
  %div22 = sdiv i32 %add21, 2, !dbg !7999
  store i32 %div22, i32* %retval, align 4, !dbg !8000
  br label %return, !dbg !8000

if.end23:                                         ; preds = %land.lhs.true16, %if.end12
  br label %if.end24, !dbg !8001

if.end24:                                         ; preds = %if.end23, %entry
  %24 = load i32, i32* %value.addr, align 4, !dbg !8002
  store i32 %24, i32* %retval, align 4, !dbg !8003
  br label %return, !dbg !8003

return:                                           ; preds = %if.end24, %if.then20, %if.then9, %if.then3
  %25 = load i32, i32* %retval, align 4, !dbg !8004
  ret i32 %25, !dbg !8004
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @input_abs_get_val(%struct.input_dev* %dev, i32 %axis) #0 !dbg !8005 {
entry:
  %dev.addr = alloca %struct.input_dev*, align 8
  %axis.addr = alloca i32, align 4
  store %struct.input_dev* %dev, %struct.input_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.input_dev** %dev.addr, metadata !8008, metadata !DIExpression()), !dbg !8009
  store i32 %axis, i32* %axis.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %axis.addr, metadata !8010, metadata !DIExpression()), !dbg !8009
  %0 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !8009
  %absinfo = getelementptr inbounds %struct.input_dev, %struct.input_dev* %0, i32 0, i32 26, !dbg !8009
  %1 = load %struct.input_absinfo*, %struct.input_absinfo** %absinfo, align 8, !dbg !8009
  %tobool = icmp ne %struct.input_absinfo* %1, null, !dbg !8009
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !8009

cond.true:                                        ; preds = %entry
  %2 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !8009
  %absinfo1 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %2, i32 0, i32 26, !dbg !8009
  %3 = load %struct.input_absinfo*, %struct.input_absinfo** %absinfo1, align 8, !dbg !8009
  %4 = load i32, i32* %axis.addr, align 4, !dbg !8009
  %idxprom = zext i32 %4 to i64, !dbg !8009
  %arrayidx = getelementptr %struct.input_absinfo, %struct.input_absinfo* %3, i64 %idxprom, !dbg !8009
  %value = getelementptr inbounds %struct.input_absinfo, %struct.input_absinfo* %arrayidx, i32 0, i32 0, !dbg !8009
  %5 = load i32, i32* %value, align 4, !dbg !8009
  br label %cond.end, !dbg !8009

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !8009

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %5, %cond.true ], [ 0, %cond.false ], !dbg !8009
  ret i32 %cond, !dbg !8009
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @input_abs_set_val(%struct.input_dev* %dev, i32 %axis, i32 %val) #0 !dbg !8011 {
entry:
  %dev.addr = alloca %struct.input_dev*, align 8
  %axis.addr = alloca i32, align 4
  %val.addr = alloca i32, align 4
  store %struct.input_dev* %dev, %struct.input_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.input_dev** %dev.addr, metadata !8014, metadata !DIExpression()), !dbg !8015
  store i32 %axis, i32* %axis.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %axis.addr, metadata !8016, metadata !DIExpression()), !dbg !8015
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !8017, metadata !DIExpression()), !dbg !8015
  %0 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !8015
  call void @input_alloc_absinfo(%struct.input_dev* %0) #11, !dbg !8015
  %1 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !8018
  %absinfo = getelementptr inbounds %struct.input_dev, %struct.input_dev* %1, i32 0, i32 26, !dbg !8018
  %2 = load %struct.input_absinfo*, %struct.input_absinfo** %absinfo, align 8, !dbg !8018
  %tobool = icmp ne %struct.input_absinfo* %2, null, !dbg !8018
  br i1 %tobool, label %if.then, label %if.end, !dbg !8015

if.then:                                          ; preds = %entry
  %3 = load i32, i32* %val.addr, align 4, !dbg !8018
  %4 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !8018
  %absinfo1 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %4, i32 0, i32 26, !dbg !8018
  %5 = load %struct.input_absinfo*, %struct.input_absinfo** %absinfo1, align 8, !dbg !8018
  %6 = load i32, i32* %axis.addr, align 4, !dbg !8018
  %idxprom = zext i32 %6 to i64, !dbg !8018
  %arrayidx = getelementptr %struct.input_absinfo, %struct.input_absinfo* %5, i64 %idxprom, !dbg !8018
  %value = getelementptr inbounds %struct.input_absinfo, %struct.input_absinfo* %arrayidx, i32 0, i32 0, !dbg !8018
  store i32 %3, i32* %value, align 4, !dbg !8018
  br label %if.end, !dbg !8018

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !8015
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_restore(i64 %f) #0 !dbg !8020 {
entry:
  %f.addr = alloca i64, align 8
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  store i64 %f, i64* %f.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %f.addr, metadata !8023, metadata !DIExpression()), !dbg !8024
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !8025, metadata !DIExpression()), !dbg !8027
  %0 = load i64, i64* %__edi, align 8, !dbg !8027
  store i64 %0, i64* %__edi, align 8, !dbg !8027
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !8028, metadata !DIExpression()), !dbg !8027
  %1 = load i64, i64* %__esi, align 8, !dbg !8027
  store i64 %1, i64* %__esi, align 8, !dbg !8027
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !8029, metadata !DIExpression()), !dbg !8027
  %2 = load i64, i64* %__edx, align 8, !dbg !8027
  store i64 %2, i64* %__edx, align 8, !dbg !8027
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !8030, metadata !DIExpression()), !dbg !8027
  %3 = load i64, i64* %__ecx, align 8, !dbg !8027
  store i64 %3, i64* %__ecx, align 8, !dbg !8027
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !8031, metadata !DIExpression()), !dbg !8027
  %4 = load i64, i64* %__eax, align 8, !dbg !8027
  store i64 %4, i64* %__eax, align 8, !dbg !8027
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 1, i32 0), align 8, !dbg !8027
  %6 = call i64 @llvm.read_register.i64(metadata !4033), !dbg !8027
  %7 = load i64, i64* %f.addr, align 8, !dbg !8027
  %8 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,{di},1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 37, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 1, i32 0), i32 1, i64 %7, i64 %6) #7, !dbg !8027, !srcloc !8032
  %asmresult = extractvalue { i64, i64 } %8, 0, !dbg !8027
  %asmresult1 = extractvalue { i64, i64 } %8, 1, !dbg !8027
  store i64 %asmresult, i64* %__eax, align 8, !dbg !8027
  call void @llvm.write_register.i64(metadata !4033, i64 %asmresult1), !dbg !8027
  ret void, !dbg !8033
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__rcu_read_lock() #0 !dbg !8034 {
entry:
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !8035, !srcloc !8036
  ret void, !dbg !8037
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__rcu_read_unlock() #0 !dbg !8038 {
entry:
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !8039, !srcloc !8040
  br label %do.body, !dbg !8041

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !8042

do.end:                                           ; preds = %do.body
  ret void, !dbg !8044
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kmalloc_array(i64 %n, i64 %size, i32 %flags) #0 !dbg !8045 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !5681, metadata !DIExpression()), !dbg !8046
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !5691, metadata !DIExpression()), !dbg !8050
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !5693, metadata !DIExpression()), !dbg !8051
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !5695, metadata !DIExpression()), !dbg !8052
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !5697, metadata !DIExpression()), !dbg !8053
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !5703, metadata !DIExpression()), !dbg !8055
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !5709, metadata !DIExpression()), !dbg !8057
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !5718, metadata !DIExpression()), !dbg !8060
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !5720, metadata !DIExpression()), !dbg !8061
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !5722, metadata !DIExpression()), !dbg !8062
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !5724, metadata !DIExpression()), !dbg !8063
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !5726, metadata !DIExpression()), !dbg !8064
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !5728, metadata !DIExpression()), !dbg !8065
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !5730, metadata !DIExpression()), !dbg !8066
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !5732, metadata !DIExpression()), !dbg !8067
  %retval = alloca i8*, align 8
  %n.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  %bytes = alloca i64, align 8
  %__a = alloca i64, align 8
  %__b = alloca i64, align 8
  %__d = alloca i64*, align 8
  %tmp = alloca i8, align 1
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !8068, metadata !DIExpression()), !dbg !8069
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !8070, metadata !DIExpression()), !dbg !8071
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !8072, metadata !DIExpression()), !dbg !8073
  call void @llvm.dbg.declare(metadata i64* %bytes, metadata !8074, metadata !DIExpression()), !dbg !8075
  call void @llvm.dbg.declare(metadata i64* %__a, metadata !8076, metadata !DIExpression()), !dbg !8079
  %0 = load i64, i64* %n.addr, align 8, !dbg !8079
  store i64 %0, i64* %__a, align 8, !dbg !8079
  call void @llvm.dbg.declare(metadata i64* %__b, metadata !8080, metadata !DIExpression()), !dbg !8079
  %1 = load i64, i64* %size.addr, align 8, !dbg !8079
  store i64 %1, i64* %__b, align 8, !dbg !8079
  call void @llvm.dbg.declare(metadata i64** %__d, metadata !8081, metadata !DIExpression()), !dbg !8079
  store i64* %bytes, i64** %__d, align 8, !dbg !8079
  %cmp = icmp eq i64* %__a, %__b, !dbg !8079
  %conv = zext i1 %cmp to i32, !dbg !8079
  %2 = load i64*, i64** %__d, align 8, !dbg !8079
  %cmp1 = icmp eq i64* %__a, %2, !dbg !8079
  %conv2 = zext i1 %cmp1 to i32, !dbg !8079
  %3 = load i64, i64* %__a, align 8, !dbg !8079
  %4 = load i64, i64* %__b, align 8, !dbg !8079
  %5 = load i64*, i64** %__d, align 8, !dbg !8079
  %6 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %3, i64 %4), !dbg !8079
  %7 = extractvalue { i64, i1 } %6, 1, !dbg !8079
  %8 = extractvalue { i64, i1 } %6, 0, !dbg !8079
  store i64 %8, i64* %5, align 8, !dbg !8079
  %frombool = zext i1 %7 to i8, !dbg !8079
  store i8 %frombool, i8* %tmp, align 1, !dbg !8079
  %9 = load i8, i8* %tmp, align 1, !dbg !8079
  %tobool = trunc i8 %9 to i1, !dbg !8079
  %call = call zeroext i1 @__must_check_overflow(i1 zeroext %tobool) #11, !dbg !8083
  %lnot = xor i1 %call, true, !dbg !8083
  %lnot3 = xor i1 %lnot, true, !dbg !8083
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !8083
  %conv4 = sext i32 %lnot.ext to i64, !dbg !8083
  %tobool5 = icmp ne i64 %conv4, 0, !dbg !8083
  br i1 %tobool5, label %if.then, label %if.end, !dbg !8084

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !8085
  br label %return, !dbg !8085

if.end:                                           ; preds = %entry
  %10 = load i64, i64* %n.addr, align 8, !dbg !8086
  %11 = call i1 @llvm.is.constant.i64(i64 %10), !dbg !8087
  br i1 %11, label %land.lhs.true, label %if.end8, !dbg !8088

land.lhs.true:                                    ; preds = %if.end
  %12 = load i64, i64* %size.addr, align 8, !dbg !8089
  %13 = call i1 @llvm.is.constant.i64(i64 %12), !dbg !8090
  br i1 %13, label %if.then6, label %if.end8, !dbg !8091

if.then6:                                         ; preds = %land.lhs.true
  %14 = load i64, i64* %bytes, align 8, !dbg !8092
  %15 = load i32, i32* %flags.addr, align 4, !dbg !8093
  store i64 %14, i64* %size.addr.i, align 8
  store i32 %15, i32* %flags.addr.i, align 4
  %16 = load i64, i64* %size.addr.i, align 8, !dbg !8094
  %17 = call i1 @llvm.is.constant.i64(i64 %16) #7, !dbg !8095
  br i1 %17, label %if.then.i, label %if.end9.i, !dbg !8096

if.then.i:                                        ; preds = %if.then6
  %18 = load i64, i64* %size.addr.i, align 8, !dbg !8097
  %cmp.i = icmp ugt i64 %18, 8192, !dbg !8098
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !8099

if.then1.i:                                       ; preds = %if.then.i
  %19 = load i64, i64* %size.addr.i, align 8, !dbg !8100
  %20 = load i32, i32* %flags.addr.i, align 4, !dbg !8101
  store i64 %19, i64* %size.addr.i.i, align 8
  store i32 %20, i32* %flags.addr.i.i, align 4
  %21 = load i64, i64* %size.addr.i.i, align 8, !dbg !8102
  %call.i.i = call i32 @get_order(i64 %21) #14, !dbg !8103
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !8064
  %22 = load i64, i64* %size.addr.i.i, align 8, !dbg !8104
  %23 = load i32, i32* %flags.addr.i.i, align 4, !dbg !8105
  %24 = load i32, i32* %order.i.i, align 4, !dbg !8106
  store i64 %22, i64* %size.addr.i.i.i, align 8
  store i32 %23, i32* %flags.addr.i.i.i, align 4
  store i32 %24, i32* %order.addr.i.i.i, align 4
  %25 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !8107
  %26 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !8108
  %27 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !8109
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %25, i32 %26, i32 %27) #12, !dbg !8110
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !8110
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !8110
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !8110
  call void @llvm.assume(i1 %maskcond.i.i.i) #7, !dbg !8110
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !8111
  br label %kmalloc.exit, !dbg !8111

if.end.i:                                         ; preds = %if.then.i
  %28 = load i64, i64* %size.addr.i, align 8, !dbg !8112
  store i64 %28, i64* %size.addr.i11.i, align 8
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8113
  %tobool.i.i = icmp ne i64 %29, 0, !dbg !8113
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !8114

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !8115
  br label %kmalloc_index.exit.i, !dbg !8115

if.end.i.i:                                       ; preds = %if.end.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8116
  %cmp.i.i = icmp ule i64 %30, 8, !dbg !8117
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !8118

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !8119
  br label %kmalloc_index.exit.i, !dbg !8119

if.end2.i.i:                                      ; preds = %if.end.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8120
  %cmp3.i.i = icmp ugt i64 %31, 64, !dbg !8121
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !8122

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8123
  %cmp4.i.i = icmp ule i64 %32, 96, !dbg !8124
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !8125

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !8126
  br label %kmalloc_index.exit.i, !dbg !8126

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8127
  %cmp7.i.i = icmp ugt i64 %33, 128, !dbg !8128
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !8129

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8130
  %cmp9.i.i = icmp ule i64 %34, 192, !dbg !8131
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !8132

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !8133
  br label %kmalloc_index.exit.i, !dbg !8133

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8134
  %cmp12.i.i = icmp ule i64 %35, 8, !dbg !8135
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !8136

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !8137
  br label %kmalloc_index.exit.i, !dbg !8137

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8138
  %cmp15.i.i = icmp ule i64 %36, 16, !dbg !8139
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !8140

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !8141
  br label %kmalloc_index.exit.i, !dbg !8141

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8142
  %cmp18.i.i = icmp ule i64 %37, 32, !dbg !8143
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !8144

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !8145
  br label %kmalloc_index.exit.i, !dbg !8145

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8146
  %cmp21.i.i = icmp ule i64 %38, 64, !dbg !8147
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !8148

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !8149
  br label %kmalloc_index.exit.i, !dbg !8149

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8150
  %cmp24.i.i = icmp ule i64 %39, 128, !dbg !8151
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !8152

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !8153
  br label %kmalloc_index.exit.i, !dbg !8153

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8154
  %cmp27.i.i = icmp ule i64 %40, 256, !dbg !8155
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !8156

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !8157
  br label %kmalloc_index.exit.i, !dbg !8157

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8158
  %cmp30.i.i = icmp ule i64 %41, 512, !dbg !8159
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !8160

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !8161
  br label %kmalloc_index.exit.i, !dbg !8161

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8162
  %cmp33.i.i = icmp ule i64 %42, 1024, !dbg !8163
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !8164

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !8165
  br label %kmalloc_index.exit.i, !dbg !8165

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8166
  %cmp36.i.i = icmp ule i64 %43, 2048, !dbg !8167
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !8168

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !8169
  br label %kmalloc_index.exit.i, !dbg !8169

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8170
  %cmp39.i.i = icmp ule i64 %44, 4096, !dbg !8171
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !8172

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !8173
  br label %kmalloc_index.exit.i, !dbg !8173

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %45 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8174
  %cmp42.i.i = icmp ule i64 %45, 8192, !dbg !8175
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !8176

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !8177
  br label %kmalloc_index.exit.i, !dbg !8177

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %46 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8178
  %cmp45.i.i = icmp ule i64 %46, 16384, !dbg !8179
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !8180

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !8181
  br label %kmalloc_index.exit.i, !dbg !8181

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %47 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8182
  %cmp48.i.i = icmp ule i64 %47, 32768, !dbg !8183
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !8184

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !8185
  br label %kmalloc_index.exit.i, !dbg !8185

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %48 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8186
  %cmp51.i.i = icmp ule i64 %48, 65536, !dbg !8187
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !8188

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !8189
  br label %kmalloc_index.exit.i, !dbg !8189

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %49 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8190
  %cmp54.i.i = icmp ule i64 %49, 131072, !dbg !8191
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !8192

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !8193
  br label %kmalloc_index.exit.i, !dbg !8193

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %50 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8194
  %cmp57.i.i = icmp ule i64 %50, 262144, !dbg !8195
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !8196

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !8197
  br label %kmalloc_index.exit.i, !dbg !8197

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %51 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8198
  %cmp60.i.i = icmp ule i64 %51, 524288, !dbg !8199
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !8200

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !8201
  br label %kmalloc_index.exit.i, !dbg !8201

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %52 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8202
  %cmp63.i.i = icmp ule i64 %52, 1048576, !dbg !8203
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !8204

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !8205
  br label %kmalloc_index.exit.i, !dbg !8205

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %53 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8206
  %cmp66.i.i = icmp ule i64 %53, 2097152, !dbg !8207
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !8208

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !8209
  br label %kmalloc_index.exit.i, !dbg !8209

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %54 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8210
  %cmp69.i.i = icmp ule i64 %54, 4194304, !dbg !8211
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !8212

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !8213
  br label %kmalloc_index.exit.i, !dbg !8213

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %55 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8214
  %cmp72.i.i = icmp ule i64 %55, 8388608, !dbg !8215
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !8216

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !8217
  br label %kmalloc_index.exit.i, !dbg !8217

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %56 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8218
  %cmp75.i.i = icmp ule i64 %56, 16777216, !dbg !8219
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !8220

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !8221
  br label %kmalloc_index.exit.i, !dbg !8221

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %57 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8222
  %cmp78.i.i = icmp ule i64 %57, 33554432, !dbg !8223
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !8224

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !8225
  br label %kmalloc_index.exit.i, !dbg !8225

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %58 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8226
  %cmp81.i.i = icmp ule i64 %58, 67108864, !dbg !8227
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !8228

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !8229
  br label %kmalloc_index.exit.i, !dbg !8229

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.11, i64 0, i64 0), i32 382, i32 0, i64 12) #7, !dbg !8230, !srcloc !5908
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 203) #7, !dbg !8231, !srcloc !5912
  unreachable, !dbg !8232

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %59 = load i32, i32* %retval.i.i, align 4, !dbg !8233
  store i32 %59, i32* %index.i, align 4, !dbg !8234
  %60 = load i32, i32* %index.i, align 4, !dbg !8235
  %tobool.i = icmp ne i32 %60, 0, !dbg !8235
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !8236

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !8237
  br label %kmalloc.exit, !dbg !8237

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %61 = load i32, i32* %flags.addr.i, align 4, !dbg !8238
  store i32 %61, i32* %flags.addr.i13.i, align 4
  %62 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !8239
  %and.i.i = and i32 %62, 17, !dbg !8239
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !8239
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !8239
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !8239
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !8239
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !8240

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !8241
  br label %kmalloc_type.exit.i, !dbg !8241

if.end.i16.i:                                     ; preds = %if.end4.i
  %63 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !8242
  %and2.i.i = and i32 %63, 1, !dbg !8243
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !8242
  %64 = zext i1 %tobool3.i.i to i64, !dbg !8242
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !8242
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !8244
  br label %kmalloc_type.exit.i, !dbg !8244

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %65 = load i32, i32* %retval.i12.i, align 4, !dbg !8245
  %idxprom.i = zext i32 %65 to i64, !dbg !8246
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !8246
  %66 = load i32, i32* %index.i, align 4, !dbg !8247
  %idxprom6.i = zext i32 %66 to i64, !dbg !8246
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !8246
  %67 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !8246
  %68 = load i32, i32* %flags.addr.i, align 4, !dbg !8248
  %69 = load i64, i64* %size.addr.i, align 8, !dbg !8249
  store %struct.kmem_cache* %67, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %68, i32* %flags.addr.i17.i, align 4
  store i64 %69, i64* %size.addr.i18.i, align 8
  %70 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !8250
  %71 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !8251
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %70, i32 %71) #12, !dbg !8252
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !8252
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !8252
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !8252
  call void @llvm.assume(i1 %maskcond.i.i) #7, !dbg !8252
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !8052
  %72 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !8253
  %73 = load i8*, i8** %ret.i.i, align 8, !dbg !8254
  %74 = load i64, i64* %size.addr.i18.i, align 8, !dbg !8255
  %75 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !8256
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %72, i8* %73, i64 %74, i32 %75) #12, !dbg !8257
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !8258
  %76 = load i8*, i8** %ret.i.i, align 8, !dbg !8259
  store i8* %76, i8** %retval.i, align 8, !dbg !8260
  br label %kmalloc.exit, !dbg !8260

if.end9.i:                                        ; preds = %if.then6
  %77 = load i64, i64* %size.addr.i, align 8, !dbg !8261
  %78 = load i32, i32* %flags.addr.i, align 4, !dbg !8262
  %call10.i = call noalias i8* @__kmalloc(i64 %77, i32 %78) #12, !dbg !8263
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !8263
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !8263
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !8263
  call void @llvm.assume(i1 %maskcond.i) #7, !dbg !8263
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !8264
  br label %kmalloc.exit, !dbg !8264

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %79 = load i8*, i8** %retval.i, align 8, !dbg !8265
  store i8* %79, i8** %retval, align 8, !dbg !8266
  br label %return, !dbg !8266

if.end8:                                          ; preds = %land.lhs.true, %if.end
  %80 = load i64, i64* %bytes, align 8, !dbg !8267
  %81 = load i32, i32* %flags.addr, align 4, !dbg !8268
  %call9 = call noalias i8* @__kmalloc(i64 %80, i32 %81) #11, !dbg !8269
  %ptrint = ptrtoint i8* %call9 to i64, !dbg !8269
  %maskedptr = and i64 %ptrint, 7, !dbg !8269
  %maskcond = icmp eq i64 %maskedptr, 0, !dbg !8269
  call void @llvm.assume(i1 %maskcond), !dbg !8269
  store i8* %call9, i8** %retval, align 8, !dbg !8270
  br label %return, !dbg !8270

return:                                           ; preds = %if.end8, %kmalloc.exit, %if.then
  %82 = load i8*, i8** %retval, align 8, !dbg !8271
  ret i8* %82, !dbg !8271
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__must_check_overflow(i1 zeroext %overflow) #0 !dbg !8272 {
entry:
  %overflow.addr = alloca i8, align 1
  %frombool = zext i1 %overflow to i8
  store i8 %frombool, i8* %overflow.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %overflow.addr, metadata !8276, metadata !DIExpression()), !dbg !8277
  %0 = load i8, i8* %overflow.addr, align 1, !dbg !8278
  %tobool = trunc i8 %0 to i1, !dbg !8278
  %lnot = xor i1 %tobool, true, !dbg !8278
  %lnot1 = xor i1 %lnot, true, !dbg !8278
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !8278
  %conv = sext i32 %lnot.ext to i64, !dbg !8278
  %tobool2 = icmp ne i64 %conv, 0, !dbg !8278
  ret i1 %tobool2, !dbg !8279
}

; Function Attrs: nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #1

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i64(i64) #8

; Function Attrs: noredzone
declare dso_local noalias i8* @__kmalloc(i64, i32) #3

; Function Attrs: nounwind willreturn
declare void @llvm.assume(i1) #9

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @get_order(i64 %size) #10 !dbg !8280 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !8284, metadata !DIExpression()), !dbg !8288
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !8290, metadata !DIExpression()), !dbg !8291
  %retval = alloca i32, align 4
  %size.addr = alloca i64, align 8
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !8292, metadata !DIExpression()), !dbg !8293
  %0 = load i64, i64* %size.addr, align 8, !dbg !8294
  %1 = call i1 @llvm.is.constant.i64(i64 %0), !dbg !8296
  br i1 %1, label %if.then, label %if.end447, !dbg !8297

if.then:                                          ; preds = %entry
  %2 = load i64, i64* %size.addr, align 8, !dbg !8298
  %tobool = icmp ne i64 %2, 0, !dbg !8298
  br i1 %tobool, label %if.end, label %if.then1, !dbg !8301

if.then1:                                         ; preds = %if.then
  store i32 52, i32* %retval, align 4, !dbg !8302
  br label %return, !dbg !8302

if.end:                                           ; preds = %if.then
  %3 = load i64, i64* %size.addr, align 8, !dbg !8303
  %cmp = icmp ult i64 %3, 4096, !dbg !8305
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !8306

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !8307
  br label %return, !dbg !8307

if.end3:                                          ; preds = %if.end
  %4 = load i64, i64* %size.addr, align 8, !dbg !8308
  %sub = sub i64 %4, 1, !dbg !8308
  %5 = call i1 @llvm.is.constant.i64(i64 %sub), !dbg !8308
  br i1 %5, label %cond.true, label %cond.false442, !dbg !8308

cond.true:                                        ; preds = %if.end3
  %6 = load i64, i64* %size.addr, align 8, !dbg !8308
  %sub4 = sub i64 %6, 1, !dbg !8308
  %7 = call i1 @llvm.is.constant.i64(i64 %sub4), !dbg !8308
  br i1 %7, label %cond.true5, label %cond.false439, !dbg !8308

cond.true5:                                       ; preds = %cond.true
  %8 = load i64, i64* %size.addr, align 8, !dbg !8308
  %sub6 = sub i64 %8, 1, !dbg !8308
  %cmp7 = icmp ult i64 %sub6, 2, !dbg !8308
  br i1 %cmp7, label %cond.true8, label %cond.false, !dbg !8308

cond.true8:                                       ; preds = %cond.true5
  br label %cond.end437, !dbg !8308

cond.false:                                       ; preds = %cond.true5
  %9 = load i64, i64* %size.addr, align 8, !dbg !8308
  %sub9 = sub i64 %9, 1, !dbg !8308
  %and = and i64 %sub9, -9223372036854775808, !dbg !8308
  %tobool10 = icmp ne i64 %and, 0, !dbg !8308
  br i1 %tobool10, label %cond.true11, label %cond.false12, !dbg !8308

cond.true11:                                      ; preds = %cond.false
  br label %cond.end435, !dbg !8308

cond.false12:                                     ; preds = %cond.false
  %10 = load i64, i64* %size.addr, align 8, !dbg !8308
  %sub13 = sub i64 %10, 1, !dbg !8308
  %and14 = and i64 %sub13, 4611686018427387904, !dbg !8308
  %tobool15 = icmp ne i64 %and14, 0, !dbg !8308
  br i1 %tobool15, label %cond.true16, label %cond.false17, !dbg !8308

cond.true16:                                      ; preds = %cond.false12
  br label %cond.end433, !dbg !8308

cond.false17:                                     ; preds = %cond.false12
  %11 = load i64, i64* %size.addr, align 8, !dbg !8308
  %sub18 = sub i64 %11, 1, !dbg !8308
  %and19 = and i64 %sub18, 2305843009213693952, !dbg !8308
  %tobool20 = icmp ne i64 %and19, 0, !dbg !8308
  br i1 %tobool20, label %cond.true21, label %cond.false22, !dbg !8308

cond.true21:                                      ; preds = %cond.false17
  br label %cond.end431, !dbg !8308

cond.false22:                                     ; preds = %cond.false17
  %12 = load i64, i64* %size.addr, align 8, !dbg !8308
  %sub23 = sub i64 %12, 1, !dbg !8308
  %and24 = and i64 %sub23, 1152921504606846976, !dbg !8308
  %tobool25 = icmp ne i64 %and24, 0, !dbg !8308
  br i1 %tobool25, label %cond.true26, label %cond.false27, !dbg !8308

cond.true26:                                      ; preds = %cond.false22
  br label %cond.end429, !dbg !8308

cond.false27:                                     ; preds = %cond.false22
  %13 = load i64, i64* %size.addr, align 8, !dbg !8308
  %sub28 = sub i64 %13, 1, !dbg !8308
  %and29 = and i64 %sub28, 576460752303423488, !dbg !8308
  %tobool30 = icmp ne i64 %and29, 0, !dbg !8308
  br i1 %tobool30, label %cond.true31, label %cond.false32, !dbg !8308

cond.true31:                                      ; preds = %cond.false27
  br label %cond.end427, !dbg !8308

cond.false32:                                     ; preds = %cond.false27
  %14 = load i64, i64* %size.addr, align 8, !dbg !8308
  %sub33 = sub i64 %14, 1, !dbg !8308
  %and34 = and i64 %sub33, 288230376151711744, !dbg !8308
  %tobool35 = icmp ne i64 %and34, 0, !dbg !8308
  br i1 %tobool35, label %cond.true36, label %cond.false37, !dbg !8308

cond.true36:                                      ; preds = %cond.false32
  br label %cond.end425, !dbg !8308

cond.false37:                                     ; preds = %cond.false32
  %15 = load i64, i64* %size.addr, align 8, !dbg !8308
  %sub38 = sub i64 %15, 1, !dbg !8308
  %and39 = and i64 %sub38, 144115188075855872, !dbg !8308
  %tobool40 = icmp ne i64 %and39, 0, !dbg !8308
  br i1 %tobool40, label %cond.true41, label %cond.false42, !dbg !8308

cond.true41:                                      ; preds = %cond.false37
  br label %cond.end423, !dbg !8308

cond.false42:                                     ; preds = %cond.false37
  %16 = load i64, i64* %size.addr, align 8, !dbg !8308
  %sub43 = sub i64 %16, 1, !dbg !8308
  %and44 = and i64 %sub43, 72057594037927936, !dbg !8308
  %tobool45 = icmp ne i64 %and44, 0, !dbg !8308
  br i1 %tobool45, label %cond.true46, label %cond.false47, !dbg !8308

cond.true46:                                      ; preds = %cond.false42
  br label %cond.end421, !dbg !8308

cond.false47:                                     ; preds = %cond.false42
  %17 = load i64, i64* %size.addr, align 8, !dbg !8308
  %sub48 = sub i64 %17, 1, !dbg !8308
  %and49 = and i64 %sub48, 36028797018963968, !dbg !8308
  %tobool50 = icmp ne i64 %and49, 0, !dbg !8308
  br i1 %tobool50, label %cond.true51, label %cond.false52, !dbg !8308

cond.true51:                                      ; preds = %cond.false47
  br label %cond.end419, !dbg !8308

cond.false52:                                     ; preds = %cond.false47
  %18 = load i64, i64* %size.addr, align 8, !dbg !8308
  %sub53 = sub i64 %18, 1, !dbg !8308
  %and54 = and i64 %sub53, 18014398509481984, !dbg !8308
  %tobool55 = icmp ne i64 %and54, 0, !dbg !8308
  br i1 %tobool55, label %cond.true56, label %cond.false57, !dbg !8308

cond.true56:                                      ; preds = %cond.false52
  br label %cond.end417, !dbg !8308

cond.false57:                                     ; preds = %cond.false52
  %19 = load i64, i64* %size.addr, align 8, !dbg !8308
  %sub58 = sub i64 %19, 1, !dbg !8308
  %and59 = and i64 %sub58, 9007199254740992, !dbg !8308
  %tobool60 = icmp ne i64 %and59, 0, !dbg !8308
  br i1 %tobool60, label %cond.true61, label %cond.false62, !dbg !8308

cond.true61:                                      ; preds = %cond.false57
  br label %cond.end415, !dbg !8308

cond.false62:                                     ; preds = %cond.false57
  %20 = load i64, i64* %size.addr, align 8, !dbg !8308
  %sub63 = sub i64 %20, 1, !dbg !8308
  %and64 = and i64 %sub63, 4503599627370496, !dbg !8308
  %tobool65 = icmp ne i64 %and64, 0, !dbg !8308
  br i1 %tobool65, label %cond.true66, label %cond.false67, !dbg !8308

cond.true66:                                      ; preds = %cond.false62
  br label %cond.end413, !dbg !8308

cond.false67:                                     ; preds = %cond.false62
  %21 = load i64, i64* %size.addr, align 8, !dbg !8308
  %sub68 = sub i64 %21, 1, !dbg !8308
  %and69 = and i64 %sub68, 2251799813685248, !dbg !8308
  %tobool70 = icmp ne i64 %and69, 0, !dbg !8308
  br i1 %tobool70, label %cond.true71, label %cond.false72, !dbg !8308

cond.true71:                                      ; preds = %cond.false67
  br label %cond.end411, !dbg !8308

cond.false72:                                     ; preds = %cond.false67
  %22 = load i64, i64* %size.addr, align 8, !dbg !8308
  %sub73 = sub i64 %22, 1, !dbg !8308
  %and74 = and i64 %sub73, 1125899906842624, !dbg !8308
  %tobool75 = icmp ne i64 %and74, 0, !dbg !8308
  br i1 %tobool75, label %cond.true76, label %cond.false77, !dbg !8308

cond.true76:                                      ; preds = %cond.false72
  br label %cond.end409, !dbg !8308

cond.false77:                                     ; preds = %cond.false72
  %23 = load i64, i64* %size.addr, align 8, !dbg !8308
  %sub78 = sub i64 %23, 1, !dbg !8308
  %and79 = and i64 %sub78, 562949953421312, !dbg !8308
  %tobool80 = icmp ne i64 %and79, 0, !dbg !8308
  br i1 %tobool80, label %cond.true81, label %cond.false82, !dbg !8308

cond.true81:                                      ; preds = %cond.false77
  br label %cond.end407, !dbg !8308

cond.false82:                                     ; preds = %cond.false77
  %24 = load i64, i64* %size.addr, align 8, !dbg !8308
  %sub83 = sub i64 %24, 1, !dbg !8308
  %and84 = and i64 %sub83, 281474976710656, !dbg !8308
  %tobool85 = icmp ne i64 %and84, 0, !dbg !8308
  br i1 %tobool85, label %cond.true86, label %cond.false87, !dbg !8308

cond.true86:                                      ; preds = %cond.false82
  br label %cond.end405, !dbg !8308

cond.false87:                                     ; preds = %cond.false82
  %25 = load i64, i64* %size.addr, align 8, !dbg !8308
  %sub88 = sub i64 %25, 1, !dbg !8308
  %and89 = and i64 %sub88, 140737488355328, !dbg !8308
  %tobool90 = icmp ne i64 %and89, 0, !dbg !8308
  br i1 %tobool90, label %cond.true91, label %cond.false92, !dbg !8308

cond.true91:                                      ; preds = %cond.false87
  br label %cond.end403, !dbg !8308

cond.false92:                                     ; preds = %cond.false87
  %26 = load i64, i64* %size.addr, align 8, !dbg !8308
  %sub93 = sub i64 %26, 1, !dbg !8308
  %and94 = and i64 %sub93, 70368744177664, !dbg !8308
  %tobool95 = icmp ne i64 %and94, 0, !dbg !8308
  br i1 %tobool95, label %cond.true96, label %cond.false97, !dbg !8308

cond.true96:                                      ; preds = %cond.false92
  br label %cond.end401, !dbg !8308

cond.false97:                                     ; preds = %cond.false92
  %27 = load i64, i64* %size.addr, align 8, !dbg !8308
  %sub98 = sub i64 %27, 1, !dbg !8308
  %and99 = and i64 %sub98, 35184372088832, !dbg !8308
  %tobool100 = icmp ne i64 %and99, 0, !dbg !8308
  br i1 %tobool100, label %cond.true101, label %cond.false102, !dbg !8308

cond.true101:                                     ; preds = %cond.false97
  br label %cond.end399, !dbg !8308

cond.false102:                                    ; preds = %cond.false97
  %28 = load i64, i64* %size.addr, align 8, !dbg !8308
  %sub103 = sub i64 %28, 1, !dbg !8308
  %and104 = and i64 %sub103, 17592186044416, !dbg !8308
  %tobool105 = icmp ne i64 %and104, 0, !dbg !8308
  br i1 %tobool105, label %cond.true106, label %cond.false107, !dbg !8308

cond.true106:                                     ; preds = %cond.false102
  br label %cond.end397, !dbg !8308

cond.false107:                                    ; preds = %cond.false102
  %29 = load i64, i64* %size.addr, align 8, !dbg !8308
  %sub108 = sub i64 %29, 1, !dbg !8308
  %and109 = and i64 %sub108, 8796093022208, !dbg !8308
  %tobool110 = icmp ne i64 %and109, 0, !dbg !8308
  br i1 %tobool110, label %cond.true111, label %cond.false112, !dbg !8308

cond.true111:                                     ; preds = %cond.false107
  br label %cond.end395, !dbg !8308

cond.false112:                                    ; preds = %cond.false107
  %30 = load i64, i64* %size.addr, align 8, !dbg !8308
  %sub113 = sub i64 %30, 1, !dbg !8308
  %and114 = and i64 %sub113, 4398046511104, !dbg !8308
  %tobool115 = icmp ne i64 %and114, 0, !dbg !8308
  br i1 %tobool115, label %cond.true116, label %cond.false117, !dbg !8308

cond.true116:                                     ; preds = %cond.false112
  br label %cond.end393, !dbg !8308

cond.false117:                                    ; preds = %cond.false112
  %31 = load i64, i64* %size.addr, align 8, !dbg !8308
  %sub118 = sub i64 %31, 1, !dbg !8308
  %and119 = and i64 %sub118, 2199023255552, !dbg !8308
  %tobool120 = icmp ne i64 %and119, 0, !dbg !8308
  br i1 %tobool120, label %cond.true121, label %cond.false122, !dbg !8308

cond.true121:                                     ; preds = %cond.false117
  br label %cond.end391, !dbg !8308

cond.false122:                                    ; preds = %cond.false117
  %32 = load i64, i64* %size.addr, align 8, !dbg !8308
  %sub123 = sub i64 %32, 1, !dbg !8308
  %and124 = and i64 %sub123, 1099511627776, !dbg !8308
  %tobool125 = icmp ne i64 %and124, 0, !dbg !8308
  br i1 %tobool125, label %cond.true126, label %cond.false127, !dbg !8308

cond.true126:                                     ; preds = %cond.false122
  br label %cond.end389, !dbg !8308

cond.false127:                                    ; preds = %cond.false122
  %33 = load i64, i64* %size.addr, align 8, !dbg !8308
  %sub128 = sub i64 %33, 1, !dbg !8308
  %and129 = and i64 %sub128, 549755813888, !dbg !8308
  %tobool130 = icmp ne i64 %and129, 0, !dbg !8308
  br i1 %tobool130, label %cond.true131, label %cond.false132, !dbg !8308

cond.true131:                                     ; preds = %cond.false127
  br label %cond.end387, !dbg !8308

cond.false132:                                    ; preds = %cond.false127
  %34 = load i64, i64* %size.addr, align 8, !dbg !8308
  %sub133 = sub i64 %34, 1, !dbg !8308
  %and134 = and i64 %sub133, 274877906944, !dbg !8308
  %tobool135 = icmp ne i64 %and134, 0, !dbg !8308
  br i1 %tobool135, label %cond.true136, label %cond.false137, !dbg !8308

cond.true136:                                     ; preds = %cond.false132
  br label %cond.end385, !dbg !8308

cond.false137:                                    ; preds = %cond.false132
  %35 = load i64, i64* %size.addr, align 8, !dbg !8308
  %sub138 = sub i64 %35, 1, !dbg !8308
  %and139 = and i64 %sub138, 137438953472, !dbg !8308
  %tobool140 = icmp ne i64 %and139, 0, !dbg !8308
  br i1 %tobool140, label %cond.true141, label %cond.false142, !dbg !8308

cond.true141:                                     ; preds = %cond.false137
  br label %cond.end383, !dbg !8308

cond.false142:                                    ; preds = %cond.false137
  %36 = load i64, i64* %size.addr, align 8, !dbg !8308
  %sub143 = sub i64 %36, 1, !dbg !8308
  %and144 = and i64 %sub143, 68719476736, !dbg !8308
  %tobool145 = icmp ne i64 %and144, 0, !dbg !8308
  br i1 %tobool145, label %cond.true146, label %cond.false147, !dbg !8308

cond.true146:                                     ; preds = %cond.false142
  br label %cond.end381, !dbg !8308

cond.false147:                                    ; preds = %cond.false142
  %37 = load i64, i64* %size.addr, align 8, !dbg !8308
  %sub148 = sub i64 %37, 1, !dbg !8308
  %and149 = and i64 %sub148, 34359738368, !dbg !8308
  %tobool150 = icmp ne i64 %and149, 0, !dbg !8308
  br i1 %tobool150, label %cond.true151, label %cond.false152, !dbg !8308

cond.true151:                                     ; preds = %cond.false147
  br label %cond.end379, !dbg !8308

cond.false152:                                    ; preds = %cond.false147
  %38 = load i64, i64* %size.addr, align 8, !dbg !8308
  %sub153 = sub i64 %38, 1, !dbg !8308
  %and154 = and i64 %sub153, 17179869184, !dbg !8308
  %tobool155 = icmp ne i64 %and154, 0, !dbg !8308
  br i1 %tobool155, label %cond.true156, label %cond.false157, !dbg !8308

cond.true156:                                     ; preds = %cond.false152
  br label %cond.end377, !dbg !8308

cond.false157:                                    ; preds = %cond.false152
  %39 = load i64, i64* %size.addr, align 8, !dbg !8308
  %sub158 = sub i64 %39, 1, !dbg !8308
  %and159 = and i64 %sub158, 8589934592, !dbg !8308
  %tobool160 = icmp ne i64 %and159, 0, !dbg !8308
  br i1 %tobool160, label %cond.true161, label %cond.false162, !dbg !8308

cond.true161:                                     ; preds = %cond.false157
  br label %cond.end375, !dbg !8308

cond.false162:                                    ; preds = %cond.false157
  %40 = load i64, i64* %size.addr, align 8, !dbg !8308
  %sub163 = sub i64 %40, 1, !dbg !8308
  %and164 = and i64 %sub163, 4294967296, !dbg !8308
  %tobool165 = icmp ne i64 %and164, 0, !dbg !8308
  br i1 %tobool165, label %cond.true166, label %cond.false167, !dbg !8308

cond.true166:                                     ; preds = %cond.false162
  br label %cond.end373, !dbg !8308

cond.false167:                                    ; preds = %cond.false162
  %41 = load i64, i64* %size.addr, align 8, !dbg !8308
  %sub168 = sub i64 %41, 1, !dbg !8308
  %and169 = and i64 %sub168, 2147483648, !dbg !8308
  %tobool170 = icmp ne i64 %and169, 0, !dbg !8308
  br i1 %tobool170, label %cond.true171, label %cond.false172, !dbg !8308

cond.true171:                                     ; preds = %cond.false167
  br label %cond.end371, !dbg !8308

cond.false172:                                    ; preds = %cond.false167
  %42 = load i64, i64* %size.addr, align 8, !dbg !8308
  %sub173 = sub i64 %42, 1, !dbg !8308
  %and174 = and i64 %sub173, 1073741824, !dbg !8308
  %tobool175 = icmp ne i64 %and174, 0, !dbg !8308
  br i1 %tobool175, label %cond.true176, label %cond.false177, !dbg !8308

cond.true176:                                     ; preds = %cond.false172
  br label %cond.end369, !dbg !8308

cond.false177:                                    ; preds = %cond.false172
  %43 = load i64, i64* %size.addr, align 8, !dbg !8308
  %sub178 = sub i64 %43, 1, !dbg !8308
  %and179 = and i64 %sub178, 536870912, !dbg !8308
  %tobool180 = icmp ne i64 %and179, 0, !dbg !8308
  br i1 %tobool180, label %cond.true181, label %cond.false182, !dbg !8308

cond.true181:                                     ; preds = %cond.false177
  br label %cond.end367, !dbg !8308

cond.false182:                                    ; preds = %cond.false177
  %44 = load i64, i64* %size.addr, align 8, !dbg !8308
  %sub183 = sub i64 %44, 1, !dbg !8308
  %and184 = and i64 %sub183, 268435456, !dbg !8308
  %tobool185 = icmp ne i64 %and184, 0, !dbg !8308
  br i1 %tobool185, label %cond.true186, label %cond.false187, !dbg !8308

cond.true186:                                     ; preds = %cond.false182
  br label %cond.end365, !dbg !8308

cond.false187:                                    ; preds = %cond.false182
  %45 = load i64, i64* %size.addr, align 8, !dbg !8308
  %sub188 = sub i64 %45, 1, !dbg !8308
  %and189 = and i64 %sub188, 134217728, !dbg !8308
  %tobool190 = icmp ne i64 %and189, 0, !dbg !8308
  br i1 %tobool190, label %cond.true191, label %cond.false192, !dbg !8308

cond.true191:                                     ; preds = %cond.false187
  br label %cond.end363, !dbg !8308

cond.false192:                                    ; preds = %cond.false187
  %46 = load i64, i64* %size.addr, align 8, !dbg !8308
  %sub193 = sub i64 %46, 1, !dbg !8308
  %and194 = and i64 %sub193, 67108864, !dbg !8308
  %tobool195 = icmp ne i64 %and194, 0, !dbg !8308
  br i1 %tobool195, label %cond.true196, label %cond.false197, !dbg !8308

cond.true196:                                     ; preds = %cond.false192
  br label %cond.end361, !dbg !8308

cond.false197:                                    ; preds = %cond.false192
  %47 = load i64, i64* %size.addr, align 8, !dbg !8308
  %sub198 = sub i64 %47, 1, !dbg !8308
  %and199 = and i64 %sub198, 33554432, !dbg !8308
  %tobool200 = icmp ne i64 %and199, 0, !dbg !8308
  br i1 %tobool200, label %cond.true201, label %cond.false202, !dbg !8308

cond.true201:                                     ; preds = %cond.false197
  br label %cond.end359, !dbg !8308

cond.false202:                                    ; preds = %cond.false197
  %48 = load i64, i64* %size.addr, align 8, !dbg !8308
  %sub203 = sub i64 %48, 1, !dbg !8308
  %and204 = and i64 %sub203, 16777216, !dbg !8308
  %tobool205 = icmp ne i64 %and204, 0, !dbg !8308
  br i1 %tobool205, label %cond.true206, label %cond.false207, !dbg !8308

cond.true206:                                     ; preds = %cond.false202
  br label %cond.end357, !dbg !8308

cond.false207:                                    ; preds = %cond.false202
  %49 = load i64, i64* %size.addr, align 8, !dbg !8308
  %sub208 = sub i64 %49, 1, !dbg !8308
  %and209 = and i64 %sub208, 8388608, !dbg !8308
  %tobool210 = icmp ne i64 %and209, 0, !dbg !8308
  br i1 %tobool210, label %cond.true211, label %cond.false212, !dbg !8308

cond.true211:                                     ; preds = %cond.false207
  br label %cond.end355, !dbg !8308

cond.false212:                                    ; preds = %cond.false207
  %50 = load i64, i64* %size.addr, align 8, !dbg !8308
  %sub213 = sub i64 %50, 1, !dbg !8308
  %and214 = and i64 %sub213, 4194304, !dbg !8308
  %tobool215 = icmp ne i64 %and214, 0, !dbg !8308
  br i1 %tobool215, label %cond.true216, label %cond.false217, !dbg !8308

cond.true216:                                     ; preds = %cond.false212
  br label %cond.end353, !dbg !8308

cond.false217:                                    ; preds = %cond.false212
  %51 = load i64, i64* %size.addr, align 8, !dbg !8308
  %sub218 = sub i64 %51, 1, !dbg !8308
  %and219 = and i64 %sub218, 2097152, !dbg !8308
  %tobool220 = icmp ne i64 %and219, 0, !dbg !8308
  br i1 %tobool220, label %cond.true221, label %cond.false222, !dbg !8308

cond.true221:                                     ; preds = %cond.false217
  br label %cond.end351, !dbg !8308

cond.false222:                                    ; preds = %cond.false217
  %52 = load i64, i64* %size.addr, align 8, !dbg !8308
  %sub223 = sub i64 %52, 1, !dbg !8308
  %and224 = and i64 %sub223, 1048576, !dbg !8308
  %tobool225 = icmp ne i64 %and224, 0, !dbg !8308
  br i1 %tobool225, label %cond.true226, label %cond.false227, !dbg !8308

cond.true226:                                     ; preds = %cond.false222
  br label %cond.end349, !dbg !8308

cond.false227:                                    ; preds = %cond.false222
  %53 = load i64, i64* %size.addr, align 8, !dbg !8308
  %sub228 = sub i64 %53, 1, !dbg !8308
  %and229 = and i64 %sub228, 524288, !dbg !8308
  %tobool230 = icmp ne i64 %and229, 0, !dbg !8308
  br i1 %tobool230, label %cond.true231, label %cond.false232, !dbg !8308

cond.true231:                                     ; preds = %cond.false227
  br label %cond.end347, !dbg !8308

cond.false232:                                    ; preds = %cond.false227
  %54 = load i64, i64* %size.addr, align 8, !dbg !8308
  %sub233 = sub i64 %54, 1, !dbg !8308
  %and234 = and i64 %sub233, 262144, !dbg !8308
  %tobool235 = icmp ne i64 %and234, 0, !dbg !8308
  br i1 %tobool235, label %cond.true236, label %cond.false237, !dbg !8308

cond.true236:                                     ; preds = %cond.false232
  br label %cond.end345, !dbg !8308

cond.false237:                                    ; preds = %cond.false232
  %55 = load i64, i64* %size.addr, align 8, !dbg !8308
  %sub238 = sub i64 %55, 1, !dbg !8308
  %and239 = and i64 %sub238, 131072, !dbg !8308
  %tobool240 = icmp ne i64 %and239, 0, !dbg !8308
  br i1 %tobool240, label %cond.true241, label %cond.false242, !dbg !8308

cond.true241:                                     ; preds = %cond.false237
  br label %cond.end343, !dbg !8308

cond.false242:                                    ; preds = %cond.false237
  %56 = load i64, i64* %size.addr, align 8, !dbg !8308
  %sub243 = sub i64 %56, 1, !dbg !8308
  %and244 = and i64 %sub243, 65536, !dbg !8308
  %tobool245 = icmp ne i64 %and244, 0, !dbg !8308
  br i1 %tobool245, label %cond.true246, label %cond.false247, !dbg !8308

cond.true246:                                     ; preds = %cond.false242
  br label %cond.end341, !dbg !8308

cond.false247:                                    ; preds = %cond.false242
  %57 = load i64, i64* %size.addr, align 8, !dbg !8308
  %sub248 = sub i64 %57, 1, !dbg !8308
  %and249 = and i64 %sub248, 32768, !dbg !8308
  %tobool250 = icmp ne i64 %and249, 0, !dbg !8308
  br i1 %tobool250, label %cond.true251, label %cond.false252, !dbg !8308

cond.true251:                                     ; preds = %cond.false247
  br label %cond.end339, !dbg !8308

cond.false252:                                    ; preds = %cond.false247
  %58 = load i64, i64* %size.addr, align 8, !dbg !8308
  %sub253 = sub i64 %58, 1, !dbg !8308
  %and254 = and i64 %sub253, 16384, !dbg !8308
  %tobool255 = icmp ne i64 %and254, 0, !dbg !8308
  br i1 %tobool255, label %cond.true256, label %cond.false257, !dbg !8308

cond.true256:                                     ; preds = %cond.false252
  br label %cond.end337, !dbg !8308

cond.false257:                                    ; preds = %cond.false252
  %59 = load i64, i64* %size.addr, align 8, !dbg !8308
  %sub258 = sub i64 %59, 1, !dbg !8308
  %and259 = and i64 %sub258, 8192, !dbg !8308
  %tobool260 = icmp ne i64 %and259, 0, !dbg !8308
  br i1 %tobool260, label %cond.true261, label %cond.false262, !dbg !8308

cond.true261:                                     ; preds = %cond.false257
  br label %cond.end335, !dbg !8308

cond.false262:                                    ; preds = %cond.false257
  %60 = load i64, i64* %size.addr, align 8, !dbg !8308
  %sub263 = sub i64 %60, 1, !dbg !8308
  %and264 = and i64 %sub263, 4096, !dbg !8308
  %tobool265 = icmp ne i64 %and264, 0, !dbg !8308
  br i1 %tobool265, label %cond.true266, label %cond.false267, !dbg !8308

cond.true266:                                     ; preds = %cond.false262
  br label %cond.end333, !dbg !8308

cond.false267:                                    ; preds = %cond.false262
  %61 = load i64, i64* %size.addr, align 8, !dbg !8308
  %sub268 = sub i64 %61, 1, !dbg !8308
  %and269 = and i64 %sub268, 2048, !dbg !8308
  %tobool270 = icmp ne i64 %and269, 0, !dbg !8308
  br i1 %tobool270, label %cond.true271, label %cond.false272, !dbg !8308

cond.true271:                                     ; preds = %cond.false267
  br label %cond.end331, !dbg !8308

cond.false272:                                    ; preds = %cond.false267
  %62 = load i64, i64* %size.addr, align 8, !dbg !8308
  %sub273 = sub i64 %62, 1, !dbg !8308
  %and274 = and i64 %sub273, 1024, !dbg !8308
  %tobool275 = icmp ne i64 %and274, 0, !dbg !8308
  br i1 %tobool275, label %cond.true276, label %cond.false277, !dbg !8308

cond.true276:                                     ; preds = %cond.false272
  br label %cond.end329, !dbg !8308

cond.false277:                                    ; preds = %cond.false272
  %63 = load i64, i64* %size.addr, align 8, !dbg !8308
  %sub278 = sub i64 %63, 1, !dbg !8308
  %and279 = and i64 %sub278, 512, !dbg !8308
  %tobool280 = icmp ne i64 %and279, 0, !dbg !8308
  br i1 %tobool280, label %cond.true281, label %cond.false282, !dbg !8308

cond.true281:                                     ; preds = %cond.false277
  br label %cond.end327, !dbg !8308

cond.false282:                                    ; preds = %cond.false277
  %64 = load i64, i64* %size.addr, align 8, !dbg !8308
  %sub283 = sub i64 %64, 1, !dbg !8308
  %and284 = and i64 %sub283, 256, !dbg !8308
  %tobool285 = icmp ne i64 %and284, 0, !dbg !8308
  br i1 %tobool285, label %cond.true286, label %cond.false287, !dbg !8308

cond.true286:                                     ; preds = %cond.false282
  br label %cond.end325, !dbg !8308

cond.false287:                                    ; preds = %cond.false282
  %65 = load i64, i64* %size.addr, align 8, !dbg !8308
  %sub288 = sub i64 %65, 1, !dbg !8308
  %and289 = and i64 %sub288, 128, !dbg !8308
  %tobool290 = icmp ne i64 %and289, 0, !dbg !8308
  br i1 %tobool290, label %cond.true291, label %cond.false292, !dbg !8308

cond.true291:                                     ; preds = %cond.false287
  br label %cond.end323, !dbg !8308

cond.false292:                                    ; preds = %cond.false287
  %66 = load i64, i64* %size.addr, align 8, !dbg !8308
  %sub293 = sub i64 %66, 1, !dbg !8308
  %and294 = and i64 %sub293, 64, !dbg !8308
  %tobool295 = icmp ne i64 %and294, 0, !dbg !8308
  br i1 %tobool295, label %cond.true296, label %cond.false297, !dbg !8308

cond.true296:                                     ; preds = %cond.false292
  br label %cond.end321, !dbg !8308

cond.false297:                                    ; preds = %cond.false292
  %67 = load i64, i64* %size.addr, align 8, !dbg !8308
  %sub298 = sub i64 %67, 1, !dbg !8308
  %and299 = and i64 %sub298, 32, !dbg !8308
  %tobool300 = icmp ne i64 %and299, 0, !dbg !8308
  br i1 %tobool300, label %cond.true301, label %cond.false302, !dbg !8308

cond.true301:                                     ; preds = %cond.false297
  br label %cond.end319, !dbg !8308

cond.false302:                                    ; preds = %cond.false297
  %68 = load i64, i64* %size.addr, align 8, !dbg !8308
  %sub303 = sub i64 %68, 1, !dbg !8308
  %and304 = and i64 %sub303, 16, !dbg !8308
  %tobool305 = icmp ne i64 %and304, 0, !dbg !8308
  br i1 %tobool305, label %cond.true306, label %cond.false307, !dbg !8308

cond.true306:                                     ; preds = %cond.false302
  br label %cond.end317, !dbg !8308

cond.false307:                                    ; preds = %cond.false302
  %69 = load i64, i64* %size.addr, align 8, !dbg !8308
  %sub308 = sub i64 %69, 1, !dbg !8308
  %and309 = and i64 %sub308, 8, !dbg !8308
  %tobool310 = icmp ne i64 %and309, 0, !dbg !8308
  br i1 %tobool310, label %cond.true311, label %cond.false312, !dbg !8308

cond.true311:                                     ; preds = %cond.false307
  br label %cond.end, !dbg !8308

cond.false312:                                    ; preds = %cond.false307
  %70 = load i64, i64* %size.addr, align 8, !dbg !8308
  %sub313 = sub i64 %70, 1, !dbg !8308
  %and314 = and i64 %sub313, 4, !dbg !8308
  %tobool315 = icmp ne i64 %and314, 0, !dbg !8308
  %71 = zext i1 %tobool315 to i64, !dbg !8308
  %cond = select i1 %tobool315, i32 2, i32 1, !dbg !8308
  br label %cond.end, !dbg !8308

cond.end:                                         ; preds = %cond.false312, %cond.true311
  %cond316 = phi i32 [ 3, %cond.true311 ], [ %cond, %cond.false312 ], !dbg !8308
  br label %cond.end317, !dbg !8308

cond.end317:                                      ; preds = %cond.end, %cond.true306
  %cond318 = phi i32 [ 4, %cond.true306 ], [ %cond316, %cond.end ], !dbg !8308
  br label %cond.end319, !dbg !8308

cond.end319:                                      ; preds = %cond.end317, %cond.true301
  %cond320 = phi i32 [ 5, %cond.true301 ], [ %cond318, %cond.end317 ], !dbg !8308
  br label %cond.end321, !dbg !8308

cond.end321:                                      ; preds = %cond.end319, %cond.true296
  %cond322 = phi i32 [ 6, %cond.true296 ], [ %cond320, %cond.end319 ], !dbg !8308
  br label %cond.end323, !dbg !8308

cond.end323:                                      ; preds = %cond.end321, %cond.true291
  %cond324 = phi i32 [ 7, %cond.true291 ], [ %cond322, %cond.end321 ], !dbg !8308
  br label %cond.end325, !dbg !8308

cond.end325:                                      ; preds = %cond.end323, %cond.true286
  %cond326 = phi i32 [ 8, %cond.true286 ], [ %cond324, %cond.end323 ], !dbg !8308
  br label %cond.end327, !dbg !8308

cond.end327:                                      ; preds = %cond.end325, %cond.true281
  %cond328 = phi i32 [ 9, %cond.true281 ], [ %cond326, %cond.end325 ], !dbg !8308
  br label %cond.end329, !dbg !8308

cond.end329:                                      ; preds = %cond.end327, %cond.true276
  %cond330 = phi i32 [ 10, %cond.true276 ], [ %cond328, %cond.end327 ], !dbg !8308
  br label %cond.end331, !dbg !8308

cond.end331:                                      ; preds = %cond.end329, %cond.true271
  %cond332 = phi i32 [ 11, %cond.true271 ], [ %cond330, %cond.end329 ], !dbg !8308
  br label %cond.end333, !dbg !8308

cond.end333:                                      ; preds = %cond.end331, %cond.true266
  %cond334 = phi i32 [ 12, %cond.true266 ], [ %cond332, %cond.end331 ], !dbg !8308
  br label %cond.end335, !dbg !8308

cond.end335:                                      ; preds = %cond.end333, %cond.true261
  %cond336 = phi i32 [ 13, %cond.true261 ], [ %cond334, %cond.end333 ], !dbg !8308
  br label %cond.end337, !dbg !8308

cond.end337:                                      ; preds = %cond.end335, %cond.true256
  %cond338 = phi i32 [ 14, %cond.true256 ], [ %cond336, %cond.end335 ], !dbg !8308
  br label %cond.end339, !dbg !8308

cond.end339:                                      ; preds = %cond.end337, %cond.true251
  %cond340 = phi i32 [ 15, %cond.true251 ], [ %cond338, %cond.end337 ], !dbg !8308
  br label %cond.end341, !dbg !8308

cond.end341:                                      ; preds = %cond.end339, %cond.true246
  %cond342 = phi i32 [ 16, %cond.true246 ], [ %cond340, %cond.end339 ], !dbg !8308
  br label %cond.end343, !dbg !8308

cond.end343:                                      ; preds = %cond.end341, %cond.true241
  %cond344 = phi i32 [ 17, %cond.true241 ], [ %cond342, %cond.end341 ], !dbg !8308
  br label %cond.end345, !dbg !8308

cond.end345:                                      ; preds = %cond.end343, %cond.true236
  %cond346 = phi i32 [ 18, %cond.true236 ], [ %cond344, %cond.end343 ], !dbg !8308
  br label %cond.end347, !dbg !8308

cond.end347:                                      ; preds = %cond.end345, %cond.true231
  %cond348 = phi i32 [ 19, %cond.true231 ], [ %cond346, %cond.end345 ], !dbg !8308
  br label %cond.end349, !dbg !8308

cond.end349:                                      ; preds = %cond.end347, %cond.true226
  %cond350 = phi i32 [ 20, %cond.true226 ], [ %cond348, %cond.end347 ], !dbg !8308
  br label %cond.end351, !dbg !8308

cond.end351:                                      ; preds = %cond.end349, %cond.true221
  %cond352 = phi i32 [ 21, %cond.true221 ], [ %cond350, %cond.end349 ], !dbg !8308
  br label %cond.end353, !dbg !8308

cond.end353:                                      ; preds = %cond.end351, %cond.true216
  %cond354 = phi i32 [ 22, %cond.true216 ], [ %cond352, %cond.end351 ], !dbg !8308
  br label %cond.end355, !dbg !8308

cond.end355:                                      ; preds = %cond.end353, %cond.true211
  %cond356 = phi i32 [ 23, %cond.true211 ], [ %cond354, %cond.end353 ], !dbg !8308
  br label %cond.end357, !dbg !8308

cond.end357:                                      ; preds = %cond.end355, %cond.true206
  %cond358 = phi i32 [ 24, %cond.true206 ], [ %cond356, %cond.end355 ], !dbg !8308
  br label %cond.end359, !dbg !8308

cond.end359:                                      ; preds = %cond.end357, %cond.true201
  %cond360 = phi i32 [ 25, %cond.true201 ], [ %cond358, %cond.end357 ], !dbg !8308
  br label %cond.end361, !dbg !8308

cond.end361:                                      ; preds = %cond.end359, %cond.true196
  %cond362 = phi i32 [ 26, %cond.true196 ], [ %cond360, %cond.end359 ], !dbg !8308
  br label %cond.end363, !dbg !8308

cond.end363:                                      ; preds = %cond.end361, %cond.true191
  %cond364 = phi i32 [ 27, %cond.true191 ], [ %cond362, %cond.end361 ], !dbg !8308
  br label %cond.end365, !dbg !8308

cond.end365:                                      ; preds = %cond.end363, %cond.true186
  %cond366 = phi i32 [ 28, %cond.true186 ], [ %cond364, %cond.end363 ], !dbg !8308
  br label %cond.end367, !dbg !8308

cond.end367:                                      ; preds = %cond.end365, %cond.true181
  %cond368 = phi i32 [ 29, %cond.true181 ], [ %cond366, %cond.end365 ], !dbg !8308
  br label %cond.end369, !dbg !8308

cond.end369:                                      ; preds = %cond.end367, %cond.true176
  %cond370 = phi i32 [ 30, %cond.true176 ], [ %cond368, %cond.end367 ], !dbg !8308
  br label %cond.end371, !dbg !8308

cond.end371:                                      ; preds = %cond.end369, %cond.true171
  %cond372 = phi i32 [ 31, %cond.true171 ], [ %cond370, %cond.end369 ], !dbg !8308
  br label %cond.end373, !dbg !8308

cond.end373:                                      ; preds = %cond.end371, %cond.true166
  %cond374 = phi i32 [ 32, %cond.true166 ], [ %cond372, %cond.end371 ], !dbg !8308
  br label %cond.end375, !dbg !8308

cond.end375:                                      ; preds = %cond.end373, %cond.true161
  %cond376 = phi i32 [ 33, %cond.true161 ], [ %cond374, %cond.end373 ], !dbg !8308
  br label %cond.end377, !dbg !8308

cond.end377:                                      ; preds = %cond.end375, %cond.true156
  %cond378 = phi i32 [ 34, %cond.true156 ], [ %cond376, %cond.end375 ], !dbg !8308
  br label %cond.end379, !dbg !8308

cond.end379:                                      ; preds = %cond.end377, %cond.true151
  %cond380 = phi i32 [ 35, %cond.true151 ], [ %cond378, %cond.end377 ], !dbg !8308
  br label %cond.end381, !dbg !8308

cond.end381:                                      ; preds = %cond.end379, %cond.true146
  %cond382 = phi i32 [ 36, %cond.true146 ], [ %cond380, %cond.end379 ], !dbg !8308
  br label %cond.end383, !dbg !8308

cond.end383:                                      ; preds = %cond.end381, %cond.true141
  %cond384 = phi i32 [ 37, %cond.true141 ], [ %cond382, %cond.end381 ], !dbg !8308
  br label %cond.end385, !dbg !8308

cond.end385:                                      ; preds = %cond.end383, %cond.true136
  %cond386 = phi i32 [ 38, %cond.true136 ], [ %cond384, %cond.end383 ], !dbg !8308
  br label %cond.end387, !dbg !8308

cond.end387:                                      ; preds = %cond.end385, %cond.true131
  %cond388 = phi i32 [ 39, %cond.true131 ], [ %cond386, %cond.end385 ], !dbg !8308
  br label %cond.end389, !dbg !8308

cond.end389:                                      ; preds = %cond.end387, %cond.true126
  %cond390 = phi i32 [ 40, %cond.true126 ], [ %cond388, %cond.end387 ], !dbg !8308
  br label %cond.end391, !dbg !8308

cond.end391:                                      ; preds = %cond.end389, %cond.true121
  %cond392 = phi i32 [ 41, %cond.true121 ], [ %cond390, %cond.end389 ], !dbg !8308
  br label %cond.end393, !dbg !8308

cond.end393:                                      ; preds = %cond.end391, %cond.true116
  %cond394 = phi i32 [ 42, %cond.true116 ], [ %cond392, %cond.end391 ], !dbg !8308
  br label %cond.end395, !dbg !8308

cond.end395:                                      ; preds = %cond.end393, %cond.true111
  %cond396 = phi i32 [ 43, %cond.true111 ], [ %cond394, %cond.end393 ], !dbg !8308
  br label %cond.end397, !dbg !8308

cond.end397:                                      ; preds = %cond.end395, %cond.true106
  %cond398 = phi i32 [ 44, %cond.true106 ], [ %cond396, %cond.end395 ], !dbg !8308
  br label %cond.end399, !dbg !8308

cond.end399:                                      ; preds = %cond.end397, %cond.true101
  %cond400 = phi i32 [ 45, %cond.true101 ], [ %cond398, %cond.end397 ], !dbg !8308
  br label %cond.end401, !dbg !8308

cond.end401:                                      ; preds = %cond.end399, %cond.true96
  %cond402 = phi i32 [ 46, %cond.true96 ], [ %cond400, %cond.end399 ], !dbg !8308
  br label %cond.end403, !dbg !8308

cond.end403:                                      ; preds = %cond.end401, %cond.true91
  %cond404 = phi i32 [ 47, %cond.true91 ], [ %cond402, %cond.end401 ], !dbg !8308
  br label %cond.end405, !dbg !8308

cond.end405:                                      ; preds = %cond.end403, %cond.true86
  %cond406 = phi i32 [ 48, %cond.true86 ], [ %cond404, %cond.end403 ], !dbg !8308
  br label %cond.end407, !dbg !8308

cond.end407:                                      ; preds = %cond.end405, %cond.true81
  %cond408 = phi i32 [ 49, %cond.true81 ], [ %cond406, %cond.end405 ], !dbg !8308
  br label %cond.end409, !dbg !8308

cond.end409:                                      ; preds = %cond.end407, %cond.true76
  %cond410 = phi i32 [ 50, %cond.true76 ], [ %cond408, %cond.end407 ], !dbg !8308
  br label %cond.end411, !dbg !8308

cond.end411:                                      ; preds = %cond.end409, %cond.true71
  %cond412 = phi i32 [ 51, %cond.true71 ], [ %cond410, %cond.end409 ], !dbg !8308
  br label %cond.end413, !dbg !8308

cond.end413:                                      ; preds = %cond.end411, %cond.true66
  %cond414 = phi i32 [ 52, %cond.true66 ], [ %cond412, %cond.end411 ], !dbg !8308
  br label %cond.end415, !dbg !8308

cond.end415:                                      ; preds = %cond.end413, %cond.true61
  %cond416 = phi i32 [ 53, %cond.true61 ], [ %cond414, %cond.end413 ], !dbg !8308
  br label %cond.end417, !dbg !8308

cond.end417:                                      ; preds = %cond.end415, %cond.true56
  %cond418 = phi i32 [ 54, %cond.true56 ], [ %cond416, %cond.end415 ], !dbg !8308
  br label %cond.end419, !dbg !8308

cond.end419:                                      ; preds = %cond.end417, %cond.true51
  %cond420 = phi i32 [ 55, %cond.true51 ], [ %cond418, %cond.end417 ], !dbg !8308
  br label %cond.end421, !dbg !8308

cond.end421:                                      ; preds = %cond.end419, %cond.true46
  %cond422 = phi i32 [ 56, %cond.true46 ], [ %cond420, %cond.end419 ], !dbg !8308
  br label %cond.end423, !dbg !8308

cond.end423:                                      ; preds = %cond.end421, %cond.true41
  %cond424 = phi i32 [ 57, %cond.true41 ], [ %cond422, %cond.end421 ], !dbg !8308
  br label %cond.end425, !dbg !8308

cond.end425:                                      ; preds = %cond.end423, %cond.true36
  %cond426 = phi i32 [ 58, %cond.true36 ], [ %cond424, %cond.end423 ], !dbg !8308
  br label %cond.end427, !dbg !8308

cond.end427:                                      ; preds = %cond.end425, %cond.true31
  %cond428 = phi i32 [ 59, %cond.true31 ], [ %cond426, %cond.end425 ], !dbg !8308
  br label %cond.end429, !dbg !8308

cond.end429:                                      ; preds = %cond.end427, %cond.true26
  %cond430 = phi i32 [ 60, %cond.true26 ], [ %cond428, %cond.end427 ], !dbg !8308
  br label %cond.end431, !dbg !8308

cond.end431:                                      ; preds = %cond.end429, %cond.true21
  %cond432 = phi i32 [ 61, %cond.true21 ], [ %cond430, %cond.end429 ], !dbg !8308
  br label %cond.end433, !dbg !8308

cond.end433:                                      ; preds = %cond.end431, %cond.true16
  %cond434 = phi i32 [ 62, %cond.true16 ], [ %cond432, %cond.end431 ], !dbg !8308
  br label %cond.end435, !dbg !8308

cond.end435:                                      ; preds = %cond.end433, %cond.true11
  %cond436 = phi i32 [ 63, %cond.true11 ], [ %cond434, %cond.end433 ], !dbg !8308
  br label %cond.end437, !dbg !8308

cond.end437:                                      ; preds = %cond.end435, %cond.true8
  %cond438 = phi i32 [ 0, %cond.true8 ], [ %cond436, %cond.end435 ], !dbg !8308
  br label %cond.end440, !dbg !8308

cond.false439:                                    ; preds = %cond.true
  br label %cond.end440, !dbg !8308

cond.end440:                                      ; preds = %cond.false439, %cond.end437
  %cond441 = phi i32 [ %cond438, %cond.end437 ], [ -1, %cond.false439 ], !dbg !8308
  br label %cond.end444, !dbg !8308

cond.false442:                                    ; preds = %if.end3
  %72 = load i64, i64* %size.addr, align 8, !dbg !8308
  %sub443 = sub i64 %72, 1, !dbg !8308
  %call = call i32 @__ilog2_u64(i64 %sub443) #14, !dbg !8308
  br label %cond.end444, !dbg !8308

cond.end444:                                      ; preds = %cond.false442, %cond.end440
  %cond445 = phi i32 [ %cond441, %cond.end440 ], [ %call, %cond.false442 ], !dbg !8308
  %sub446 = sub i32 %cond445, 12, !dbg !8309
  %add = add i32 %sub446, 1, !dbg !8310
  store i32 %add, i32* %retval, align 4, !dbg !8311
  br label %return, !dbg !8311

if.end447:                                        ; preds = %entry
  %73 = load i64, i64* %size.addr, align 8, !dbg !8312
  %dec = add i64 %73, -1, !dbg !8312
  store i64 %dec, i64* %size.addr, align 8, !dbg !8312
  %74 = load i64, i64* %size.addr, align 8, !dbg !8313
  %shr = lshr i64 %74, 12, !dbg !8313
  store i64 %shr, i64* %size.addr, align 8, !dbg !8313
  %75 = load i64, i64* %size.addr, align 8, !dbg !8314
  store i64 %75, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !8291
  %76 = load i32, i32* %bitpos.i, align 4, !dbg !8315
  %77 = load i64, i64* %x.addr.i, align 8, !dbg !8316
  %78 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %77, i32 %76) #6, !dbg !8315, !srcloc !8317
  store i32 %78, i32* %bitpos.i, align 4, !dbg !8315
  %79 = load i32, i32* %bitpos.i, align 4, !dbg !8318
  %add.i = add i32 %79, 1, !dbg !8319
  store i32 %add.i, i32* %retval, align 4, !dbg !8320
  br label %return, !dbg !8320

return:                                           ; preds = %if.end447, %cond.end444, %if.then2, %if.then1
  %80 = load i32, i32* %retval, align 4, !dbg !8321
  ret i32 %80, !dbg !8321
}

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @__ilog2_u64(i64 %n) #10 !dbg !8322 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !8284, metadata !DIExpression()), !dbg !8326
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !8290, metadata !DIExpression()), !dbg !8328
  %n.addr = alloca i64, align 8
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !8329, metadata !DIExpression()), !dbg !8330
  %0 = load i64, i64* %n.addr, align 8, !dbg !8331
  store i64 %0, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !8328
  %1 = load i32, i32* %bitpos.i, align 4, !dbg !8332
  %2 = load i64, i64* %x.addr.i, align 8, !dbg !8333
  %3 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %2, i32 %1) #6, !dbg !8332, !srcloc !8317
  store i32 %3, i32* %bitpos.i, align 4, !dbg !8332
  %4 = load i32, i32* %bitpos.i, align 4, !dbg !8334
  %add.i = add i32 %4, 1, !dbg !8335
  %sub = sub i32 %add.i, 1, !dbg !8336
  ret i32 %sub, !dbg !8337
}

; Function Attrs: noredzone
declare dso_local noalias i8* @kmalloc_order(i64, i32, i32) #3

; Function Attrs: noredzone
declare dso_local noalias i8* @kmem_cache_alloc(%struct.kmem_cache*, i32) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kasan_kmalloc(%struct.kmem_cache* %s, i8* %object, i64 %size, i32 %flags) #0 !dbg !8338 {
entry:
  %s.addr = alloca %struct.kmem_cache*, align 8
  %object.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store %struct.kmem_cache* %s, %struct.kmem_cache** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr, metadata !8342, metadata !DIExpression()), !dbg !8343
  store i8* %object, i8** %object.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %object.addr, metadata !8344, metadata !DIExpression()), !dbg !8345
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !8346, metadata !DIExpression()), !dbg !8347
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !8348, metadata !DIExpression()), !dbg !8349
  %0 = load i8*, i8** %object.addr, align 8, !dbg !8350
  ret i8* %0, !dbg !8351
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @kasan_check_read(i8* %p, i32 %size) #0 !dbg !8352 {
entry:
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !8353, metadata !DIExpression()), !dbg !8354
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !8355, metadata !DIExpression()), !dbg !8356
  ret i1 true, !dbg !8357
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__instrument_read_write_bitop(i64 %nr, i64* %addr) #0 !dbg !8358 {
entry:
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !8359, metadata !DIExpression()), !dbg !8361
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !8365, metadata !DIExpression()), !dbg !8366
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !8367, metadata !DIExpression()), !dbg !8368
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !8369, metadata !DIExpression()), !dbg !8370
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !8371
  %1 = load i64, i64* %nr.addr, align 8, !dbg !8372
  %div = sdiv i64 %1, 64, !dbg !8372
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !8373
  %2 = bitcast i64* %add.ptr to i8*, !dbg !8371
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !8374
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !8375
  %conv.i = trunc i64 %4 to i32, !dbg !8375
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #12, !dbg !8376
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !8377
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !8377
  call void @kcsan_check_access(i8* %5, i64 %6, i32 3) #12, !dbg !8377
  ret void, !dbg !8378
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @input_to_handler(%struct.input_handle* %handle, %struct.input_value* %vals, i32 %count) #0 !dbg !8379 {
entry:
  %retval = alloca i32, align 4
  %handle.addr = alloca %struct.input_handle*, align 8
  %vals.addr = alloca %struct.input_value*, align 8
  %count.addr = alloca i32, align 4
  %handler = alloca %struct.input_handler*, align 8
  %end = alloca %struct.input_value*, align 8
  %v = alloca %struct.input_value*, align 8
  store %struct.input_handle* %handle, %struct.input_handle** %handle.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.input_handle** %handle.addr, metadata !8382, metadata !DIExpression()), !dbg !8383
  store %struct.input_value* %vals, %struct.input_value** %vals.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.input_value** %vals.addr, metadata !8384, metadata !DIExpression()), !dbg !8385
  store i32 %count, i32* %count.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %count.addr, metadata !8386, metadata !DIExpression()), !dbg !8387
  call void @llvm.dbg.declare(metadata %struct.input_handler** %handler, metadata !8388, metadata !DIExpression()), !dbg !8389
  %0 = load %struct.input_handle*, %struct.input_handle** %handle.addr, align 8, !dbg !8390
  %handler1 = getelementptr inbounds %struct.input_handle, %struct.input_handle* %0, i32 0, i32 4, !dbg !8391
  %1 = load %struct.input_handler*, %struct.input_handler** %handler1, align 8, !dbg !8391
  store %struct.input_handler* %1, %struct.input_handler** %handler, align 8, !dbg !8389
  call void @llvm.dbg.declare(metadata %struct.input_value** %end, metadata !8392, metadata !DIExpression()), !dbg !8393
  %2 = load %struct.input_value*, %struct.input_value** %vals.addr, align 8, !dbg !8394
  store %struct.input_value* %2, %struct.input_value** %end, align 8, !dbg !8393
  call void @llvm.dbg.declare(metadata %struct.input_value** %v, metadata !8395, metadata !DIExpression()), !dbg !8396
  %3 = load %struct.input_handler*, %struct.input_handler** %handler, align 8, !dbg !8397
  %filter = getelementptr inbounds %struct.input_handler, %struct.input_handler* %3, i32 0, i32 3, !dbg !8399
  %4 = load i1 (%struct.input_handle*, i32, i32, i32)*, i1 (%struct.input_handle*, i32, i32, i32)** %filter, align 8, !dbg !8399
  %tobool = icmp ne i1 (%struct.input_handle*, i32, i32, i32)* %4, null, !dbg !8397
  br i1 %tobool, label %if.then, label %if.end11, !dbg !8400

if.then:                                          ; preds = %entry
  %5 = load %struct.input_value*, %struct.input_value** %vals.addr, align 8, !dbg !8401
  store %struct.input_value* %5, %struct.input_value** %v, align 8, !dbg !8404
  br label %for.cond, !dbg !8405

for.cond:                                         ; preds = %for.inc, %if.then
  %6 = load %struct.input_value*, %struct.input_value** %v, align 8, !dbg !8406
  %7 = load %struct.input_value*, %struct.input_value** %vals.addr, align 8, !dbg !8408
  %8 = load i32, i32* %count.addr, align 4, !dbg !8409
  %idx.ext = zext i32 %8 to i64, !dbg !8410
  %add.ptr = getelementptr %struct.input_value, %struct.input_value* %7, i64 %idx.ext, !dbg !8410
  %cmp = icmp ne %struct.input_value* %6, %add.ptr, !dbg !8411
  br i1 %cmp, label %for.body, label %for.end, !dbg !8412

for.body:                                         ; preds = %for.cond
  %9 = load %struct.input_handler*, %struct.input_handler** %handler, align 8, !dbg !8413
  %filter2 = getelementptr inbounds %struct.input_handler, %struct.input_handler* %9, i32 0, i32 3, !dbg !8416
  %10 = load i1 (%struct.input_handle*, i32, i32, i32)*, i1 (%struct.input_handle*, i32, i32, i32)** %filter2, align 8, !dbg !8416
  %11 = load %struct.input_handle*, %struct.input_handle** %handle.addr, align 8, !dbg !8417
  %12 = load %struct.input_value*, %struct.input_value** %v, align 8, !dbg !8418
  %type = getelementptr inbounds %struct.input_value, %struct.input_value* %12, i32 0, i32 0, !dbg !8419
  %13 = load i16, i16* %type, align 4, !dbg !8419
  %conv = zext i16 %13 to i32, !dbg !8418
  %14 = load %struct.input_value*, %struct.input_value** %v, align 8, !dbg !8420
  %code = getelementptr inbounds %struct.input_value, %struct.input_value* %14, i32 0, i32 1, !dbg !8421
  %15 = load i16, i16* %code, align 2, !dbg !8421
  %conv3 = zext i16 %15 to i32, !dbg !8420
  %16 = load %struct.input_value*, %struct.input_value** %v, align 8, !dbg !8422
  %value = getelementptr inbounds %struct.input_value, %struct.input_value* %16, i32 0, i32 2, !dbg !8423
  %17 = load i32, i32* %value, align 4, !dbg !8423
  %call = call zeroext i1 %10(%struct.input_handle* %11, i32 %conv, i32 %conv3, i32 %17) #11, !dbg !8413
  br i1 %call, label %if.then4, label %if.end, !dbg !8424

if.then4:                                         ; preds = %for.body
  br label %for.inc, !dbg !8425

if.end:                                           ; preds = %for.body
  %18 = load %struct.input_value*, %struct.input_value** %end, align 8, !dbg !8426
  %19 = load %struct.input_value*, %struct.input_value** %v, align 8, !dbg !8428
  %cmp5 = icmp ne %struct.input_value* %18, %19, !dbg !8429
  br i1 %cmp5, label %if.then7, label %if.end8, !dbg !8430

if.then7:                                         ; preds = %if.end
  %20 = load %struct.input_value*, %struct.input_value** %end, align 8, !dbg !8431
  %21 = load %struct.input_value*, %struct.input_value** %v, align 8, !dbg !8432
  %22 = bitcast %struct.input_value* %20 to i8*, !dbg !8433
  %23 = bitcast %struct.input_value* %21 to i8*, !dbg !8433
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %22, i8* align 4 %23, i64 8, i1 false), !dbg !8433
  br label %if.end8, !dbg !8434

if.end8:                                          ; preds = %if.then7, %if.end
  %24 = load %struct.input_value*, %struct.input_value** %end, align 8, !dbg !8435
  %incdec.ptr = getelementptr %struct.input_value, %struct.input_value* %24, i32 1, !dbg !8435
  store %struct.input_value* %incdec.ptr, %struct.input_value** %end, align 8, !dbg !8435
  br label %for.inc, !dbg !8436

for.inc:                                          ; preds = %if.end8, %if.then4
  %25 = load %struct.input_value*, %struct.input_value** %v, align 8, !dbg !8437
  %incdec.ptr9 = getelementptr %struct.input_value, %struct.input_value* %25, i32 1, !dbg !8437
  store %struct.input_value* %incdec.ptr9, %struct.input_value** %v, align 8, !dbg !8437
  br label %for.cond, !dbg !8438, !llvm.loop !8439

for.end:                                          ; preds = %for.cond
  %26 = load %struct.input_value*, %struct.input_value** %end, align 8, !dbg !8441
  %27 = load %struct.input_value*, %struct.input_value** %vals.addr, align 8, !dbg !8442
  %sub.ptr.lhs.cast = ptrtoint %struct.input_value* %26 to i64, !dbg !8443
  %sub.ptr.rhs.cast = ptrtoint %struct.input_value* %27 to i64, !dbg !8443
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !8443
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8, !dbg !8443
  %conv10 = trunc i64 %sub.ptr.div to i32, !dbg !8441
  store i32 %conv10, i32* %count.addr, align 4, !dbg !8444
  br label %if.end11, !dbg !8445

if.end11:                                         ; preds = %for.end, %entry
  %28 = load i32, i32* %count.addr, align 4, !dbg !8446
  %tobool12 = icmp ne i32 %28, 0, !dbg !8446
  br i1 %tobool12, label %if.end14, label %if.then13, !dbg !8448

if.then13:                                        ; preds = %if.end11
  store i32 0, i32* %retval, align 4, !dbg !8449
  br label %return, !dbg !8449

if.end14:                                         ; preds = %if.end11
  %29 = load %struct.input_handler*, %struct.input_handler** %handler, align 8, !dbg !8450
  %events = getelementptr inbounds %struct.input_handler, %struct.input_handler* %29, i32 0, i32 2, !dbg !8452
  %30 = load void (%struct.input_handle*, %struct.input_value*, i32)*, void (%struct.input_handle*, %struct.input_value*, i32)** %events, align 8, !dbg !8452
  %tobool15 = icmp ne void (%struct.input_handle*, %struct.input_value*, i32)* %30, null, !dbg !8450
  br i1 %tobool15, label %if.then16, label %if.else, !dbg !8453

if.then16:                                        ; preds = %if.end14
  %31 = load %struct.input_handler*, %struct.input_handler** %handler, align 8, !dbg !8454
  %events17 = getelementptr inbounds %struct.input_handler, %struct.input_handler* %31, i32 0, i32 2, !dbg !8455
  %32 = load void (%struct.input_handle*, %struct.input_value*, i32)*, void (%struct.input_handle*, %struct.input_value*, i32)** %events17, align 8, !dbg !8455
  %33 = load %struct.input_handle*, %struct.input_handle** %handle.addr, align 8, !dbg !8456
  %34 = load %struct.input_value*, %struct.input_value** %vals.addr, align 8, !dbg !8457
  %35 = load i32, i32* %count.addr, align 4, !dbg !8458
  call void %32(%struct.input_handle* %33, %struct.input_value* %34, i32 %35) #11, !dbg !8454
  br label %if.end36, !dbg !8454

if.else:                                          ; preds = %if.end14
  %36 = load %struct.input_handler*, %struct.input_handler** %handler, align 8, !dbg !8459
  %event = getelementptr inbounds %struct.input_handler, %struct.input_handler* %36, i32 0, i32 1, !dbg !8461
  %37 = load void (%struct.input_handle*, i32, i32, i32)*, void (%struct.input_handle*, i32, i32, i32)** %event, align 8, !dbg !8461
  %tobool18 = icmp ne void (%struct.input_handle*, i32, i32, i32)* %37, null, !dbg !8459
  br i1 %tobool18, label %if.then19, label %if.end35, !dbg !8462

if.then19:                                        ; preds = %if.else
  %38 = load %struct.input_value*, %struct.input_value** %vals.addr, align 8, !dbg !8463
  store %struct.input_value* %38, %struct.input_value** %v, align 8, !dbg !8465
  br label %for.cond20, !dbg !8466

for.cond20:                                       ; preds = %for.inc32, %if.then19
  %39 = load %struct.input_value*, %struct.input_value** %v, align 8, !dbg !8467
  %40 = load %struct.input_value*, %struct.input_value** %vals.addr, align 8, !dbg !8469
  %41 = load i32, i32* %count.addr, align 4, !dbg !8470
  %idx.ext21 = zext i32 %41 to i64, !dbg !8471
  %add.ptr22 = getelementptr %struct.input_value, %struct.input_value* %40, i64 %idx.ext21, !dbg !8471
  %cmp23 = icmp ne %struct.input_value* %39, %add.ptr22, !dbg !8472
  br i1 %cmp23, label %for.body25, label %for.end34, !dbg !8473

for.body25:                                       ; preds = %for.cond20
  %42 = load %struct.input_handler*, %struct.input_handler** %handler, align 8, !dbg !8474
  %event26 = getelementptr inbounds %struct.input_handler, %struct.input_handler* %42, i32 0, i32 1, !dbg !8475
  %43 = load void (%struct.input_handle*, i32, i32, i32)*, void (%struct.input_handle*, i32, i32, i32)** %event26, align 8, !dbg !8475
  %44 = load %struct.input_handle*, %struct.input_handle** %handle.addr, align 8, !dbg !8476
  %45 = load %struct.input_value*, %struct.input_value** %v, align 8, !dbg !8477
  %type27 = getelementptr inbounds %struct.input_value, %struct.input_value* %45, i32 0, i32 0, !dbg !8478
  %46 = load i16, i16* %type27, align 4, !dbg !8478
  %conv28 = zext i16 %46 to i32, !dbg !8477
  %47 = load %struct.input_value*, %struct.input_value** %v, align 8, !dbg !8479
  %code29 = getelementptr inbounds %struct.input_value, %struct.input_value* %47, i32 0, i32 1, !dbg !8480
  %48 = load i16, i16* %code29, align 2, !dbg !8480
  %conv30 = zext i16 %48 to i32, !dbg !8479
  %49 = load %struct.input_value*, %struct.input_value** %v, align 8, !dbg !8481
  %value31 = getelementptr inbounds %struct.input_value, %struct.input_value* %49, i32 0, i32 2, !dbg !8482
  %50 = load i32, i32* %value31, align 4, !dbg !8482
  call void %43(%struct.input_handle* %44, i32 %conv28, i32 %conv30, i32 %50) #11, !dbg !8474
  br label %for.inc32, !dbg !8474

for.inc32:                                        ; preds = %for.body25
  %51 = load %struct.input_value*, %struct.input_value** %v, align 8, !dbg !8483
  %incdec.ptr33 = getelementptr %struct.input_value, %struct.input_value* %51, i32 1, !dbg !8483
  store %struct.input_value* %incdec.ptr33, %struct.input_value** %v, align 8, !dbg !8483
  br label %for.cond20, !dbg !8484, !llvm.loop !8485

for.end34:                                        ; preds = %for.cond20
  br label %if.end35, !dbg !8486

if.end35:                                         ; preds = %for.end34, %if.else
  br label %if.end36

if.end36:                                         ; preds = %if.end35, %if.then16
  %52 = load i32, i32* %count.addr, align 4, !dbg !8487
  store i32 %52, i32* %retval, align 4, !dbg !8488
  br label %return, !dbg !8488

return:                                           ; preds = %if.end36, %if.then13
  %53 = load i32, i32* %retval, align 4, !dbg !8489
  ret i32 %53, !dbg !8489
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @input_start_autorepeat(%struct.input_dev* %dev, i32 %code) #0 !dbg !8490 {
entry:
  %retval.i = alloca i64, align 8
  %m.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m.addr.i, metadata !6296, metadata !DIExpression()), !dbg !8493
  %dev.addr = alloca %struct.input_dev*, align 8
  %code.addr = alloca i32, align 4
  store %struct.input_dev* %dev, %struct.input_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.input_dev** %dev.addr, metadata !8497, metadata !DIExpression()), !dbg !8498
  store i32 %code, i32* %code.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %code.addr, metadata !8499, metadata !DIExpression()), !dbg !8500
  %0 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !8501
  %evbit = getelementptr inbounds %struct.input_dev, %struct.input_dev* %0, i32 0, i32 5, !dbg !8502
  %arraydecay = getelementptr inbounds [1 x i64], [1 x i64]* %evbit, i64 0, i64 0, !dbg !8501
  %call = call zeroext i1 @test_bit(i64 20, i64* %arraydecay) #11, !dbg !8503
  br i1 %call, label %land.lhs.true, label %if.end, !dbg !8504

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !8505
  %rep = getelementptr inbounds %struct.input_dev, %struct.input_dev* %1, i32 0, i32 24, !dbg !8506
  %arrayidx = getelementptr [2 x i32], [2 x i32]* %rep, i64 0, i64 1, !dbg !8505
  %2 = load i32, i32* %arrayidx, align 4, !dbg !8505
  %tobool = icmp ne i32 %2, 0, !dbg !8505
  br i1 %tobool, label %land.lhs.true1, label %if.end, !dbg !8507

land.lhs.true1:                                   ; preds = %land.lhs.true
  %3 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !8508
  %rep2 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %3, i32 0, i32 24, !dbg !8509
  %arrayidx3 = getelementptr [2 x i32], [2 x i32]* %rep2, i64 0, i64 0, !dbg !8508
  %4 = load i32, i32* %arrayidx3, align 8, !dbg !8508
  %tobool4 = icmp ne i32 %4, 0, !dbg !8508
  br i1 %tobool4, label %land.lhs.true5, label %if.end, !dbg !8510

land.lhs.true5:                                   ; preds = %land.lhs.true1
  %5 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !8511
  %timer = getelementptr inbounds %struct.input_dev, %struct.input_dev* %5, i32 0, i32 23, !dbg !8512
  %function = getelementptr inbounds %struct.timer_list, %struct.timer_list* %timer, i32 0, i32 2, !dbg !8513
  %6 = load void (%struct.timer_list*)*, void (%struct.timer_list*)** %function, align 8, !dbg !8513
  %tobool6 = icmp ne void (%struct.timer_list*)* %6, null, !dbg !8511
  br i1 %tobool6, label %if.then, label %if.end, !dbg !8514

if.then:                                          ; preds = %land.lhs.true5
  %7 = load i32, i32* %code.addr, align 4, !dbg !8515
  %8 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !8516
  %repeat_key = getelementptr inbounds %struct.input_dev, %struct.input_dev* %8, i32 0, i32 22, !dbg !8517
  store i32 %7, i32* %repeat_key, align 8, !dbg !8518
  %9 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !8519
  %timer7 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %9, i32 0, i32 23, !dbg !8520
  %10 = load volatile i64, i64* @jiffies, align 8, !dbg !8521
  %11 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !8522
  %rep8 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %11, i32 0, i32 24, !dbg !8523
  %arrayidx9 = getelementptr [2 x i32], [2 x i32]* %rep8, i64 0, i64 0, !dbg !8522
  %12 = load i32, i32* %arrayidx9, align 8, !dbg !8522
  store i32 %12, i32* %m.addr.i, align 4
  %13 = load i32, i32* %m.addr.i, align 4, !dbg !8524
  %14 = call i1 @llvm.is.constant.i32(i32 %13) #7, !dbg !8525
  br i1 %14, label %if.then.i, label %if.else.i, !dbg !8526

if.then.i:                                        ; preds = %if.then
  %15 = load i32, i32* %m.addr.i, align 4, !dbg !8527
  %cmp.i = icmp slt i32 %15, 0, !dbg !8528
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !8529

if.then1.i:                                       ; preds = %if.then.i
  store i64 4611686018427387902, i64* %retval.i, align 8, !dbg !8530
  br label %msecs_to_jiffies.exit, !dbg !8530

if.end.i:                                         ; preds = %if.then.i
  %16 = load i32, i32* %m.addr.i, align 4, !dbg !8531
  %call.i = call i64 @_msecs_to_jiffies(i32 %16) #12, !dbg !8532
  store i64 %call.i, i64* %retval.i, align 8, !dbg !8533
  br label %msecs_to_jiffies.exit, !dbg !8533

if.else.i:                                        ; preds = %if.then
  %17 = load i32, i32* %m.addr.i, align 4, !dbg !8534
  %call2.i = call i64 @__msecs_to_jiffies(i32 %17) #12, !dbg !8535
  store i64 %call2.i, i64* %retval.i, align 8, !dbg !8536
  br label %msecs_to_jiffies.exit, !dbg !8536

msecs_to_jiffies.exit:                            ; preds = %if.then1.i, %if.end.i, %if.else.i
  %18 = load i64, i64* %retval.i, align 8, !dbg !8537
  %add = add i64 %10, %18, !dbg !8538
  %call11 = call i32 @mod_timer(%struct.timer_list* %timer7, i64 %add) #11, !dbg !8539
  br label %if.end, !dbg !8540

if.end:                                           ; preds = %msecs_to_jiffies.exit, %land.lhs.true5, %land.lhs.true1, %land.lhs.true, %entry
  ret void, !dbg !8541
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @input_stop_autorepeat(%struct.input_dev* %dev) #0 !dbg !8542 {
entry:
  %dev.addr = alloca %struct.input_dev*, align 8
  store %struct.input_dev* %dev, %struct.input_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.input_dev** %dev.addr, metadata !8543, metadata !DIExpression()), !dbg !8544
  %0 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !8545
  %timer = getelementptr inbounds %struct.input_dev, %struct.input_dev* %0, i32 0, i32 23, !dbg !8546
  %call = call i32 @del_timer(%struct.timer_list* %timer) #11, !dbg !8547
  ret void, !dbg !8548
}

; Function Attrs: noredzone
declare dso_local i32 @mod_timer(%struct.timer_list*, i64) #3

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i32(i32) #8

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @_msecs_to_jiffies(i32 %m) #0 !dbg !8549 {
entry:
  %m.addr = alloca i32, align 4
  store i32 %m, i32* %m.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %m.addr, metadata !8550, metadata !DIExpression()), !dbg !8551
  %0 = load i32, i32* %m.addr, align 4, !dbg !8552
  %conv = zext i32 %0 to i64, !dbg !8552
  %add = add i64 %conv, 4, !dbg !8553
  %sub = sub i64 %add, 1, !dbg !8554
  %div = sdiv i64 %sub, 4, !dbg !8555
  ret i64 %div, !dbg !8556
}

; Function Attrs: noredzone
declare dso_local i64 @__msecs_to_jiffies(i32) #3

; Function Attrs: noredzone
declare dso_local i32 @del_timer(%struct.timer_list*) #3

; Function Attrs: noredzone
declare dso_local i32 @__bitmap_subset(i64*, i64*, i32) #3

; Function Attrs: noredzone
declare dso_local i64 @find_first_bit(i64*, i64) #3

; Function Attrs: noredzone
declare dso_local i64 @find_next_bit(i64*, i64, i64) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @input_pass_event(%struct.input_dev* %dev, i32 %type, i32 %code, i32 %value) #0 !dbg !8557 {
entry:
  %dev.addr = alloca %struct.input_dev*, align 8
  %type.addr = alloca i32, align 4
  %code.addr = alloca i32, align 4
  %value.addr = alloca i32, align 4
  %vals = alloca [1 x %struct.input_value], align 4
  store %struct.input_dev* %dev, %struct.input_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.input_dev** %dev.addr, metadata !8558, metadata !DIExpression()), !dbg !8559
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !8560, metadata !DIExpression()), !dbg !8561
  store i32 %code, i32* %code.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %code.addr, metadata !8562, metadata !DIExpression()), !dbg !8563
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !8564, metadata !DIExpression()), !dbg !8565
  call void @llvm.dbg.declare(metadata [1 x %struct.input_value]* %vals, metadata !8566, metadata !DIExpression()), !dbg !8568
  %arrayinit.begin = getelementptr inbounds [1 x %struct.input_value], [1 x %struct.input_value]* %vals, i64 0, i64 0, !dbg !8569
  %type1 = getelementptr inbounds %struct.input_value, %struct.input_value* %arrayinit.begin, i32 0, i32 0, !dbg !8570
  %0 = load i32, i32* %type.addr, align 4, !dbg !8571
  %conv = trunc i32 %0 to i16, !dbg !8571
  store i16 %conv, i16* %type1, align 4, !dbg !8570
  %code2 = getelementptr inbounds %struct.input_value, %struct.input_value* %arrayinit.begin, i32 0, i32 1, !dbg !8570
  %1 = load i32, i32* %code.addr, align 4, !dbg !8572
  %conv3 = trunc i32 %1 to i16, !dbg !8572
  store i16 %conv3, i16* %code2, align 2, !dbg !8570
  %value4 = getelementptr inbounds %struct.input_value, %struct.input_value* %arrayinit.begin, i32 0, i32 2, !dbg !8570
  %2 = load i32, i32* %value.addr, align 4, !dbg !8573
  store i32 %2, i32* %value4, align 4, !dbg !8570
  %3 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !8574
  %arraydecay = getelementptr inbounds [1 x %struct.input_value], [1 x %struct.input_value]* %vals, i64 0, i64 0, !dbg !8575
  call void @input_pass_values(%struct.input_dev* %3, %struct.input_value* %arraydecay, i32 1) #11, !dbg !8576
  ret void, !dbg !8577
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: noredzone
declare dso_local noalias i8* @kasprintf(i32, i8*, ...) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @dev_name(%struct.device* %dev) #0 !dbg !8578 {
entry:
  %retval = alloca i8*, align 8
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !8583, metadata !DIExpression()), !dbg !8584
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !8585
  %init_name = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !8587
  %1 = load i8*, i8** %init_name, align 8, !dbg !8587
  %tobool = icmp ne i8* %1, null, !dbg !8585
  br i1 %tobool, label %if.then, label %if.end, !dbg !8588

if.then:                                          ; preds = %entry
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !8589
  %init_name1 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 3, !dbg !8590
  %3 = load i8*, i8** %init_name1, align 8, !dbg !8590
  store i8* %3, i8** %retval, align 8, !dbg !8591
  br label %return, !dbg !8591

if.end:                                           ; preds = %entry
  %4 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !8592
  %kobj = getelementptr inbounds %struct.device, %struct.device* %4, i32 0, i32 0, !dbg !8593
  %call = call i8* @kobject_name(%struct.kobject* %kobj) #11, !dbg !8594
  store i8* %call, i8** %retval, align 8, !dbg !8595
  br label %return, !dbg !8595

return:                                           ; preds = %if.end, %if.then
  %5 = load i8*, i8** %retval, align 8, !dbg !8596
  ret i8* %5, !dbg !8596
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kobject_name(%struct.kobject* %kobj) #0 !dbg !8597 {
entry:
  %kobj.addr = alloca %struct.kobject*, align 8
  store %struct.kobject* %kobj, %struct.kobject** %kobj.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kobject** %kobj.addr, metadata !8602, metadata !DIExpression()), !dbg !8603
  %0 = load %struct.kobject*, %struct.kobject** %kobj.addr, align 8, !dbg !8604
  %name = getelementptr inbounds %struct.kobject, %struct.kobject* %0, i32 0, i32 0, !dbg !8605
  %1 = load i8*, i8** %name, align 8, !dbg !8605
  ret i8* %1, !dbg !8606
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @input_dev_uevent(%struct.device* %device, %struct.kobj_uevent_env* %env) #0 !dbg !8607 {
entry:
  %retval = alloca i32, align 4
  %device.addr = alloca %struct.device*, align 8
  %env.addr = alloca %struct.kobj_uevent_env*, align 8
  %dev = alloca %struct.input_dev*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.input_dev*, align 8
  %err = alloca i32, align 4
  %err12 = alloca i32, align 4
  %err23 = alloca i32, align 4
  %err34 = alloca i32, align 4
  %err43 = alloca i32, align 4
  %err50 = alloca i32, align 4
  %err62 = alloca i32, align 4
  %err75 = alloca i32, align 4
  %err88 = alloca i32, align 4
  %err101 = alloca i32, align 4
  %err114 = alloca i32, align 4
  %err127 = alloca i32, align 4
  %err140 = alloca i32, align 4
  %err153 = alloca i32, align 4
  %err162 = alloca i32, align 4
  store %struct.device* %device, %struct.device** %device.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %device.addr, metadata !8608, metadata !DIExpression()), !dbg !8609
  store %struct.kobj_uevent_env* %env, %struct.kobj_uevent_env** %env.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kobj_uevent_env** %env.addr, metadata !8610, metadata !DIExpression()), !dbg !8611
  call void @llvm.dbg.declare(metadata %struct.input_dev** %dev, metadata !8612, metadata !DIExpression()), !dbg !8613
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !8614, metadata !DIExpression()), !dbg !8616
  %0 = load %struct.device*, %struct.device** %device.addr, align 8, !dbg !8616
  %1 = bitcast %struct.device* %0 to i8*, !dbg !8616
  store i8* %1, i8** %__mptr, align 8, !dbg !8616
  br label %do.body, !dbg !8616

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !8617

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !8616
  %add.ptr = getelementptr i8, i8* %2, i64 -528, !dbg !8616
  %3 = bitcast i8* %add.ptr to %struct.input_dev*, !dbg !8616
  store %struct.input_dev* %3, %struct.input_dev** %tmp, align 8, !dbg !8617
  %4 = load %struct.input_dev*, %struct.input_dev** %tmp, align 8, !dbg !8616
  store %struct.input_dev* %4, %struct.input_dev** %dev, align 8, !dbg !8613
  br label %do.body1, !dbg !8619

do.body1:                                         ; preds = %do.end
  call void @llvm.dbg.declare(metadata i32* %err, metadata !8620, metadata !DIExpression()), !dbg !8622
  %5 = load %struct.kobj_uevent_env*, %struct.kobj_uevent_env** %env.addr, align 8, !dbg !8622
  %6 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !8622
  %id = getelementptr inbounds %struct.input_dev, %struct.input_dev* %6, i32 0, i32 3, !dbg !8622
  %bustype = getelementptr inbounds %struct.input_id, %struct.input_id* %id, i32 0, i32 0, !dbg !8622
  %7 = load i16, i16* %bustype, align 8, !dbg !8622
  %conv = zext i16 %7 to i32, !dbg !8622
  %8 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !8622
  %id2 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %8, i32 0, i32 3, !dbg !8622
  %vendor = getelementptr inbounds %struct.input_id, %struct.input_id* %id2, i32 0, i32 1, !dbg !8622
  %9 = load i16, i16* %vendor, align 2, !dbg !8622
  %conv3 = zext i16 %9 to i32, !dbg !8622
  %10 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !8622
  %id4 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %10, i32 0, i32 3, !dbg !8622
  %product = getelementptr inbounds %struct.input_id, %struct.input_id* %id4, i32 0, i32 2, !dbg !8622
  %11 = load i16, i16* %product, align 4, !dbg !8622
  %conv5 = zext i16 %11 to i32, !dbg !8622
  %12 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !8622
  %id6 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %12, i32 0, i32 3, !dbg !8622
  %version = getelementptr inbounds %struct.input_id, %struct.input_id* %id6, i32 0, i32 3, !dbg !8622
  %13 = load i16, i16* %version, align 2, !dbg !8622
  %conv7 = zext i16 %13 to i32, !dbg !8622
  %call = call i32 (%struct.kobj_uevent_env*, i8*, ...) @add_uevent_var(%struct.kobj_uevent_env* %5, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.43, i64 0, i64 0), i32 %conv, i32 %conv3, i32 %conv5, i32 %conv7) #11, !dbg !8622
  store i32 %call, i32* %err, align 4, !dbg !8622
  %14 = load i32, i32* %err, align 4, !dbg !8623
  %tobool = icmp ne i32 %14, 0, !dbg !8623
  br i1 %tobool, label %if.then, label %if.end, !dbg !8622

if.then:                                          ; preds = %do.body1
  %15 = load i32, i32* %err, align 4, !dbg !8623
  store i32 %15, i32* %retval, align 4, !dbg !8623
  br label %return, !dbg !8623

if.end:                                           ; preds = %do.body1
  br label %do.end8, !dbg !8622

do.end8:                                          ; preds = %if.end
  %16 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !8625
  %name = getelementptr inbounds %struct.input_dev, %struct.input_dev* %16, i32 0, i32 0, !dbg !8627
  %17 = load i8*, i8** %name, align 8, !dbg !8627
  %tobool9 = icmp ne i8* %17, null, !dbg !8625
  br i1 %tobool9, label %if.then10, label %if.end19, !dbg !8628

if.then10:                                        ; preds = %do.end8
  br label %do.body11, !dbg !8629

do.body11:                                        ; preds = %if.then10
  call void @llvm.dbg.declare(metadata i32* %err12, metadata !8630, metadata !DIExpression()), !dbg !8632
  %18 = load %struct.kobj_uevent_env*, %struct.kobj_uevent_env** %env.addr, align 8, !dbg !8632
  %19 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !8632
  %name13 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %19, i32 0, i32 0, !dbg !8632
  %20 = load i8*, i8** %name13, align 8, !dbg !8632
  %call14 = call i32 (%struct.kobj_uevent_env*, i8*, ...) @add_uevent_var(%struct.kobj_uevent_env* %18, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.44, i64 0, i64 0), i8* %20) #11, !dbg !8632
  store i32 %call14, i32* %err12, align 4, !dbg !8632
  %21 = load i32, i32* %err12, align 4, !dbg !8633
  %tobool15 = icmp ne i32 %21, 0, !dbg !8633
  br i1 %tobool15, label %if.then16, label %if.end17, !dbg !8632

if.then16:                                        ; preds = %do.body11
  %22 = load i32, i32* %err12, align 4, !dbg !8633
  store i32 %22, i32* %retval, align 4, !dbg !8633
  br label %return, !dbg !8633

if.end17:                                         ; preds = %do.body11
  br label %do.end18, !dbg !8632

do.end18:                                         ; preds = %if.end17
  br label %if.end19, !dbg !8632

if.end19:                                         ; preds = %do.end18, %do.end8
  %23 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !8635
  %phys = getelementptr inbounds %struct.input_dev, %struct.input_dev* %23, i32 0, i32 1, !dbg !8637
  %24 = load i8*, i8** %phys, align 8, !dbg !8637
  %tobool20 = icmp ne i8* %24, null, !dbg !8635
  br i1 %tobool20, label %if.then21, label %if.end30, !dbg !8638

if.then21:                                        ; preds = %if.end19
  br label %do.body22, !dbg !8639

do.body22:                                        ; preds = %if.then21
  call void @llvm.dbg.declare(metadata i32* %err23, metadata !8640, metadata !DIExpression()), !dbg !8642
  %25 = load %struct.kobj_uevent_env*, %struct.kobj_uevent_env** %env.addr, align 8, !dbg !8642
  %26 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !8642
  %phys24 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %26, i32 0, i32 1, !dbg !8642
  %27 = load i8*, i8** %phys24, align 8, !dbg !8642
  %call25 = call i32 (%struct.kobj_uevent_env*, i8*, ...) @add_uevent_var(%struct.kobj_uevent_env* %25, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.45, i64 0, i64 0), i8* %27) #11, !dbg !8642
  store i32 %call25, i32* %err23, align 4, !dbg !8642
  %28 = load i32, i32* %err23, align 4, !dbg !8643
  %tobool26 = icmp ne i32 %28, 0, !dbg !8643
  br i1 %tobool26, label %if.then27, label %if.end28, !dbg !8642

if.then27:                                        ; preds = %do.body22
  %29 = load i32, i32* %err23, align 4, !dbg !8643
  store i32 %29, i32* %retval, align 4, !dbg !8643
  br label %return, !dbg !8643

if.end28:                                         ; preds = %do.body22
  br label %do.end29, !dbg !8642

do.end29:                                         ; preds = %if.end28
  br label %if.end30, !dbg !8642

if.end30:                                         ; preds = %do.end29, %if.end19
  %30 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !8645
  %uniq = getelementptr inbounds %struct.input_dev, %struct.input_dev* %30, i32 0, i32 2, !dbg !8647
  %31 = load i8*, i8** %uniq, align 8, !dbg !8647
  %tobool31 = icmp ne i8* %31, null, !dbg !8645
  br i1 %tobool31, label %if.then32, label %if.end41, !dbg !8648

if.then32:                                        ; preds = %if.end30
  br label %do.body33, !dbg !8649

do.body33:                                        ; preds = %if.then32
  call void @llvm.dbg.declare(metadata i32* %err34, metadata !8650, metadata !DIExpression()), !dbg !8652
  %32 = load %struct.kobj_uevent_env*, %struct.kobj_uevent_env** %env.addr, align 8, !dbg !8652
  %33 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !8652
  %uniq35 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %33, i32 0, i32 2, !dbg !8652
  %34 = load i8*, i8** %uniq35, align 8, !dbg !8652
  %call36 = call i32 (%struct.kobj_uevent_env*, i8*, ...) @add_uevent_var(%struct.kobj_uevent_env* %32, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.46, i64 0, i64 0), i8* %34) #11, !dbg !8652
  store i32 %call36, i32* %err34, align 4, !dbg !8652
  %35 = load i32, i32* %err34, align 4, !dbg !8653
  %tobool37 = icmp ne i32 %35, 0, !dbg !8653
  br i1 %tobool37, label %if.then38, label %if.end39, !dbg !8652

if.then38:                                        ; preds = %do.body33
  %36 = load i32, i32* %err34, align 4, !dbg !8653
  store i32 %36, i32* %retval, align 4, !dbg !8653
  br label %return, !dbg !8653

if.end39:                                         ; preds = %do.body33
  br label %do.end40, !dbg !8652

do.end40:                                         ; preds = %if.end39
  br label %if.end41, !dbg !8652

if.end41:                                         ; preds = %do.end40, %if.end30
  br label %do.body42, !dbg !8655

do.body42:                                        ; preds = %if.end41
  call void @llvm.dbg.declare(metadata i32* %err43, metadata !8656, metadata !DIExpression()), !dbg !8658
  %37 = load %struct.kobj_uevent_env*, %struct.kobj_uevent_env** %env.addr, align 8, !dbg !8658
  %38 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !8658
  %propbit = getelementptr inbounds %struct.input_dev, %struct.input_dev* %38, i32 0, i32 4, !dbg !8658
  %arraydecay = getelementptr inbounds [1 x i64], [1 x i64]* %propbit, i64 0, i64 0, !dbg !8658
  %call44 = call i32 @input_add_uevent_bm_var(%struct.kobj_uevent_env* %37, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.47, i64 0, i64 0), i64* %arraydecay, i32 31) #11, !dbg !8658
  store i32 %call44, i32* %err43, align 4, !dbg !8658
  %39 = load i32, i32* %err43, align 4, !dbg !8659
  %tobool45 = icmp ne i32 %39, 0, !dbg !8659
  br i1 %tobool45, label %if.then46, label %if.end47, !dbg !8658

if.then46:                                        ; preds = %do.body42
  %40 = load i32, i32* %err43, align 4, !dbg !8659
  store i32 %40, i32* %retval, align 4, !dbg !8659
  br label %return, !dbg !8659

if.end47:                                         ; preds = %do.body42
  br label %do.end48, !dbg !8658

do.end48:                                         ; preds = %if.end47
  br label %do.body49, !dbg !8661

do.body49:                                        ; preds = %do.end48
  call void @llvm.dbg.declare(metadata i32* %err50, metadata !8662, metadata !DIExpression()), !dbg !8664
  %41 = load %struct.kobj_uevent_env*, %struct.kobj_uevent_env** %env.addr, align 8, !dbg !8664
  %42 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !8664
  %evbit = getelementptr inbounds %struct.input_dev, %struct.input_dev* %42, i32 0, i32 5, !dbg !8664
  %arraydecay51 = getelementptr inbounds [1 x i64], [1 x i64]* %evbit, i64 0, i64 0, !dbg !8664
  %call52 = call i32 @input_add_uevent_bm_var(%struct.kobj_uevent_env* %41, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.48, i64 0, i64 0), i64* %arraydecay51, i32 31) #11, !dbg !8664
  store i32 %call52, i32* %err50, align 4, !dbg !8664
  %43 = load i32, i32* %err50, align 4, !dbg !8665
  %tobool53 = icmp ne i32 %43, 0, !dbg !8665
  br i1 %tobool53, label %if.then54, label %if.end55, !dbg !8664

if.then54:                                        ; preds = %do.body49
  %44 = load i32, i32* %err50, align 4, !dbg !8665
  store i32 %44, i32* %retval, align 4, !dbg !8665
  br label %return, !dbg !8665

if.end55:                                         ; preds = %do.body49
  br label %do.end56, !dbg !8664

do.end56:                                         ; preds = %if.end55
  %45 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !8667
  %evbit57 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %45, i32 0, i32 5, !dbg !8669
  %arraydecay58 = getelementptr inbounds [1 x i64], [1 x i64]* %evbit57, i64 0, i64 0, !dbg !8667
  %call59 = call zeroext i1 @test_bit(i64 1, i64* %arraydecay58) #11, !dbg !8670
  br i1 %call59, label %if.then60, label %if.end69, !dbg !8671

if.then60:                                        ; preds = %do.end56
  br label %do.body61, !dbg !8672

do.body61:                                        ; preds = %if.then60
  call void @llvm.dbg.declare(metadata i32* %err62, metadata !8673, metadata !DIExpression()), !dbg !8675
  %46 = load %struct.kobj_uevent_env*, %struct.kobj_uevent_env** %env.addr, align 8, !dbg !8675
  %47 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !8675
  %keybit = getelementptr inbounds %struct.input_dev, %struct.input_dev* %47, i32 0, i32 6, !dbg !8675
  %arraydecay63 = getelementptr inbounds [12 x i64], [12 x i64]* %keybit, i64 0, i64 0, !dbg !8675
  %call64 = call i32 @input_add_uevent_bm_var(%struct.kobj_uevent_env* %46, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.49, i64 0, i64 0), i64* %arraydecay63, i32 767) #11, !dbg !8675
  store i32 %call64, i32* %err62, align 4, !dbg !8675
  %48 = load i32, i32* %err62, align 4, !dbg !8676
  %tobool65 = icmp ne i32 %48, 0, !dbg !8676
  br i1 %tobool65, label %if.then66, label %if.end67, !dbg !8675

if.then66:                                        ; preds = %do.body61
  %49 = load i32, i32* %err62, align 4, !dbg !8676
  store i32 %49, i32* %retval, align 4, !dbg !8676
  br label %return, !dbg !8676

if.end67:                                         ; preds = %do.body61
  br label %do.end68, !dbg !8675

do.end68:                                         ; preds = %if.end67
  br label %if.end69, !dbg !8675

if.end69:                                         ; preds = %do.end68, %do.end56
  %50 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !8678
  %evbit70 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %50, i32 0, i32 5, !dbg !8680
  %arraydecay71 = getelementptr inbounds [1 x i64], [1 x i64]* %evbit70, i64 0, i64 0, !dbg !8678
  %call72 = call zeroext i1 @test_bit(i64 2, i64* %arraydecay71) #11, !dbg !8681
  br i1 %call72, label %if.then73, label %if.end82, !dbg !8682

if.then73:                                        ; preds = %if.end69
  br label %do.body74, !dbg !8683

do.body74:                                        ; preds = %if.then73
  call void @llvm.dbg.declare(metadata i32* %err75, metadata !8684, metadata !DIExpression()), !dbg !8686
  %51 = load %struct.kobj_uevent_env*, %struct.kobj_uevent_env** %env.addr, align 8, !dbg !8686
  %52 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !8686
  %relbit = getelementptr inbounds %struct.input_dev, %struct.input_dev* %52, i32 0, i32 7, !dbg !8686
  %arraydecay76 = getelementptr inbounds [1 x i64], [1 x i64]* %relbit, i64 0, i64 0, !dbg !8686
  %call77 = call i32 @input_add_uevent_bm_var(%struct.kobj_uevent_env* %51, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.50, i64 0, i64 0), i64* %arraydecay76, i32 15) #11, !dbg !8686
  store i32 %call77, i32* %err75, align 4, !dbg !8686
  %53 = load i32, i32* %err75, align 4, !dbg !8687
  %tobool78 = icmp ne i32 %53, 0, !dbg !8687
  br i1 %tobool78, label %if.then79, label %if.end80, !dbg !8686

if.then79:                                        ; preds = %do.body74
  %54 = load i32, i32* %err75, align 4, !dbg !8687
  store i32 %54, i32* %retval, align 4, !dbg !8687
  br label %return, !dbg !8687

if.end80:                                         ; preds = %do.body74
  br label %do.end81, !dbg !8686

do.end81:                                         ; preds = %if.end80
  br label %if.end82, !dbg !8686

if.end82:                                         ; preds = %do.end81, %if.end69
  %55 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !8689
  %evbit83 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %55, i32 0, i32 5, !dbg !8691
  %arraydecay84 = getelementptr inbounds [1 x i64], [1 x i64]* %evbit83, i64 0, i64 0, !dbg !8689
  %call85 = call zeroext i1 @test_bit(i64 3, i64* %arraydecay84) #11, !dbg !8692
  br i1 %call85, label %if.then86, label %if.end95, !dbg !8693

if.then86:                                        ; preds = %if.end82
  br label %do.body87, !dbg !8694

do.body87:                                        ; preds = %if.then86
  call void @llvm.dbg.declare(metadata i32* %err88, metadata !8695, metadata !DIExpression()), !dbg !8697
  %56 = load %struct.kobj_uevent_env*, %struct.kobj_uevent_env** %env.addr, align 8, !dbg !8697
  %57 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !8697
  %absbit = getelementptr inbounds %struct.input_dev, %struct.input_dev* %57, i32 0, i32 8, !dbg !8697
  %arraydecay89 = getelementptr inbounds [1 x i64], [1 x i64]* %absbit, i64 0, i64 0, !dbg !8697
  %call90 = call i32 @input_add_uevent_bm_var(%struct.kobj_uevent_env* %56, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.51, i64 0, i64 0), i64* %arraydecay89, i32 63) #11, !dbg !8697
  store i32 %call90, i32* %err88, align 4, !dbg !8697
  %58 = load i32, i32* %err88, align 4, !dbg !8698
  %tobool91 = icmp ne i32 %58, 0, !dbg !8698
  br i1 %tobool91, label %if.then92, label %if.end93, !dbg !8697

if.then92:                                        ; preds = %do.body87
  %59 = load i32, i32* %err88, align 4, !dbg !8698
  store i32 %59, i32* %retval, align 4, !dbg !8698
  br label %return, !dbg !8698

if.end93:                                         ; preds = %do.body87
  br label %do.end94, !dbg !8697

do.end94:                                         ; preds = %if.end93
  br label %if.end95, !dbg !8697

if.end95:                                         ; preds = %do.end94, %if.end82
  %60 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !8700
  %evbit96 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %60, i32 0, i32 5, !dbg !8702
  %arraydecay97 = getelementptr inbounds [1 x i64], [1 x i64]* %evbit96, i64 0, i64 0, !dbg !8700
  %call98 = call zeroext i1 @test_bit(i64 4, i64* %arraydecay97) #11, !dbg !8703
  br i1 %call98, label %if.then99, label %if.end108, !dbg !8704

if.then99:                                        ; preds = %if.end95
  br label %do.body100, !dbg !8705

do.body100:                                       ; preds = %if.then99
  call void @llvm.dbg.declare(metadata i32* %err101, metadata !8706, metadata !DIExpression()), !dbg !8708
  %61 = load %struct.kobj_uevent_env*, %struct.kobj_uevent_env** %env.addr, align 8, !dbg !8708
  %62 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !8708
  %mscbit = getelementptr inbounds %struct.input_dev, %struct.input_dev* %62, i32 0, i32 9, !dbg !8708
  %arraydecay102 = getelementptr inbounds [1 x i64], [1 x i64]* %mscbit, i64 0, i64 0, !dbg !8708
  %call103 = call i32 @input_add_uevent_bm_var(%struct.kobj_uevent_env* %61, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.52, i64 0, i64 0), i64* %arraydecay102, i32 7) #11, !dbg !8708
  store i32 %call103, i32* %err101, align 4, !dbg !8708
  %63 = load i32, i32* %err101, align 4, !dbg !8709
  %tobool104 = icmp ne i32 %63, 0, !dbg !8709
  br i1 %tobool104, label %if.then105, label %if.end106, !dbg !8708

if.then105:                                       ; preds = %do.body100
  %64 = load i32, i32* %err101, align 4, !dbg !8709
  store i32 %64, i32* %retval, align 4, !dbg !8709
  br label %return, !dbg !8709

if.end106:                                        ; preds = %do.body100
  br label %do.end107, !dbg !8708

do.end107:                                        ; preds = %if.end106
  br label %if.end108, !dbg !8708

if.end108:                                        ; preds = %do.end107, %if.end95
  %65 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !8711
  %evbit109 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %65, i32 0, i32 5, !dbg !8713
  %arraydecay110 = getelementptr inbounds [1 x i64], [1 x i64]* %evbit109, i64 0, i64 0, !dbg !8711
  %call111 = call zeroext i1 @test_bit(i64 17, i64* %arraydecay110) #11, !dbg !8714
  br i1 %call111, label %if.then112, label %if.end121, !dbg !8715

if.then112:                                       ; preds = %if.end108
  br label %do.body113, !dbg !8716

do.body113:                                       ; preds = %if.then112
  call void @llvm.dbg.declare(metadata i32* %err114, metadata !8717, metadata !DIExpression()), !dbg !8719
  %66 = load %struct.kobj_uevent_env*, %struct.kobj_uevent_env** %env.addr, align 8, !dbg !8719
  %67 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !8719
  %ledbit = getelementptr inbounds %struct.input_dev, %struct.input_dev* %67, i32 0, i32 10, !dbg !8719
  %arraydecay115 = getelementptr inbounds [1 x i64], [1 x i64]* %ledbit, i64 0, i64 0, !dbg !8719
  %call116 = call i32 @input_add_uevent_bm_var(%struct.kobj_uevent_env* %66, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.53, i64 0, i64 0), i64* %arraydecay115, i32 15) #11, !dbg !8719
  store i32 %call116, i32* %err114, align 4, !dbg !8719
  %68 = load i32, i32* %err114, align 4, !dbg !8720
  %tobool117 = icmp ne i32 %68, 0, !dbg !8720
  br i1 %tobool117, label %if.then118, label %if.end119, !dbg !8719

if.then118:                                       ; preds = %do.body113
  %69 = load i32, i32* %err114, align 4, !dbg !8720
  store i32 %69, i32* %retval, align 4, !dbg !8720
  br label %return, !dbg !8720

if.end119:                                        ; preds = %do.body113
  br label %do.end120, !dbg !8719

do.end120:                                        ; preds = %if.end119
  br label %if.end121, !dbg !8719

if.end121:                                        ; preds = %do.end120, %if.end108
  %70 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !8722
  %evbit122 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %70, i32 0, i32 5, !dbg !8724
  %arraydecay123 = getelementptr inbounds [1 x i64], [1 x i64]* %evbit122, i64 0, i64 0, !dbg !8722
  %call124 = call zeroext i1 @test_bit(i64 18, i64* %arraydecay123) #11, !dbg !8725
  br i1 %call124, label %if.then125, label %if.end134, !dbg !8726

if.then125:                                       ; preds = %if.end121
  br label %do.body126, !dbg !8727

do.body126:                                       ; preds = %if.then125
  call void @llvm.dbg.declare(metadata i32* %err127, metadata !8728, metadata !DIExpression()), !dbg !8730
  %71 = load %struct.kobj_uevent_env*, %struct.kobj_uevent_env** %env.addr, align 8, !dbg !8730
  %72 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !8730
  %sndbit = getelementptr inbounds %struct.input_dev, %struct.input_dev* %72, i32 0, i32 11, !dbg !8730
  %arraydecay128 = getelementptr inbounds [1 x i64], [1 x i64]* %sndbit, i64 0, i64 0, !dbg !8730
  %call129 = call i32 @input_add_uevent_bm_var(%struct.kobj_uevent_env* %71, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.54, i64 0, i64 0), i64* %arraydecay128, i32 7) #11, !dbg !8730
  store i32 %call129, i32* %err127, align 4, !dbg !8730
  %73 = load i32, i32* %err127, align 4, !dbg !8731
  %tobool130 = icmp ne i32 %73, 0, !dbg !8731
  br i1 %tobool130, label %if.then131, label %if.end132, !dbg !8730

if.then131:                                       ; preds = %do.body126
  %74 = load i32, i32* %err127, align 4, !dbg !8731
  store i32 %74, i32* %retval, align 4, !dbg !8731
  br label %return, !dbg !8731

if.end132:                                        ; preds = %do.body126
  br label %do.end133, !dbg !8730

do.end133:                                        ; preds = %if.end132
  br label %if.end134, !dbg !8730

if.end134:                                        ; preds = %do.end133, %if.end121
  %75 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !8733
  %evbit135 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %75, i32 0, i32 5, !dbg !8735
  %arraydecay136 = getelementptr inbounds [1 x i64], [1 x i64]* %evbit135, i64 0, i64 0, !dbg !8733
  %call137 = call zeroext i1 @test_bit(i64 21, i64* %arraydecay136) #11, !dbg !8736
  br i1 %call137, label %if.then138, label %if.end147, !dbg !8737

if.then138:                                       ; preds = %if.end134
  br label %do.body139, !dbg !8738

do.body139:                                       ; preds = %if.then138
  call void @llvm.dbg.declare(metadata i32* %err140, metadata !8739, metadata !DIExpression()), !dbg !8741
  %76 = load %struct.kobj_uevent_env*, %struct.kobj_uevent_env** %env.addr, align 8, !dbg !8741
  %77 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !8741
  %ffbit = getelementptr inbounds %struct.input_dev, %struct.input_dev* %77, i32 0, i32 12, !dbg !8741
  %arraydecay141 = getelementptr inbounds [2 x i64], [2 x i64]* %ffbit, i64 0, i64 0, !dbg !8741
  %call142 = call i32 @input_add_uevent_bm_var(%struct.kobj_uevent_env* %76, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.55, i64 0, i64 0), i64* %arraydecay141, i32 127) #11, !dbg !8741
  store i32 %call142, i32* %err140, align 4, !dbg !8741
  %78 = load i32, i32* %err140, align 4, !dbg !8742
  %tobool143 = icmp ne i32 %78, 0, !dbg !8742
  br i1 %tobool143, label %if.then144, label %if.end145, !dbg !8741

if.then144:                                       ; preds = %do.body139
  %79 = load i32, i32* %err140, align 4, !dbg !8742
  store i32 %79, i32* %retval, align 4, !dbg !8742
  br label %return, !dbg !8742

if.end145:                                        ; preds = %do.body139
  br label %do.end146, !dbg !8741

do.end146:                                        ; preds = %if.end145
  br label %if.end147, !dbg !8741

if.end147:                                        ; preds = %do.end146, %if.end134
  %80 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !8744
  %evbit148 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %80, i32 0, i32 5, !dbg !8746
  %arraydecay149 = getelementptr inbounds [1 x i64], [1 x i64]* %evbit148, i64 0, i64 0, !dbg !8744
  %call150 = call zeroext i1 @test_bit(i64 5, i64* %arraydecay149) #11, !dbg !8747
  br i1 %call150, label %if.then151, label %if.end160, !dbg !8748

if.then151:                                       ; preds = %if.end147
  br label %do.body152, !dbg !8749

do.body152:                                       ; preds = %if.then151
  call void @llvm.dbg.declare(metadata i32* %err153, metadata !8750, metadata !DIExpression()), !dbg !8752
  %81 = load %struct.kobj_uevent_env*, %struct.kobj_uevent_env** %env.addr, align 8, !dbg !8752
  %82 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !8752
  %swbit = getelementptr inbounds %struct.input_dev, %struct.input_dev* %82, i32 0, i32 13, !dbg !8752
  %arraydecay154 = getelementptr inbounds [1 x i64], [1 x i64]* %swbit, i64 0, i64 0, !dbg !8752
  %call155 = call i32 @input_add_uevent_bm_var(%struct.kobj_uevent_env* %81, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.56, i64 0, i64 0), i64* %arraydecay154, i32 16) #11, !dbg !8752
  store i32 %call155, i32* %err153, align 4, !dbg !8752
  %83 = load i32, i32* %err153, align 4, !dbg !8753
  %tobool156 = icmp ne i32 %83, 0, !dbg !8753
  br i1 %tobool156, label %if.then157, label %if.end158, !dbg !8752

if.then157:                                       ; preds = %do.body152
  %84 = load i32, i32* %err153, align 4, !dbg !8753
  store i32 %84, i32* %retval, align 4, !dbg !8753
  br label %return, !dbg !8753

if.end158:                                        ; preds = %do.body152
  br label %do.end159, !dbg !8752

do.end159:                                        ; preds = %if.end158
  br label %if.end160, !dbg !8752

if.end160:                                        ; preds = %do.end159, %if.end147
  br label %do.body161, !dbg !8755

do.body161:                                       ; preds = %if.end160
  call void @llvm.dbg.declare(metadata i32* %err162, metadata !8756, metadata !DIExpression()), !dbg !8758
  %85 = load %struct.kobj_uevent_env*, %struct.kobj_uevent_env** %env.addr, align 8, !dbg !8758
  %86 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !8758
  %call163 = call i32 @input_add_uevent_modalias_var(%struct.kobj_uevent_env* %85, %struct.input_dev* %86) #11, !dbg !8758
  store i32 %call163, i32* %err162, align 4, !dbg !8758
  %87 = load i32, i32* %err162, align 4, !dbg !8759
  %tobool164 = icmp ne i32 %87, 0, !dbg !8759
  br i1 %tobool164, label %if.then165, label %if.end166, !dbg !8758

if.then165:                                       ; preds = %do.body161
  %88 = load i32, i32* %err162, align 4, !dbg !8759
  store i32 %88, i32* %retval, align 4, !dbg !8759
  br label %return, !dbg !8759

if.end166:                                        ; preds = %do.body161
  br label %do.end167, !dbg !8758

do.end167:                                        ; preds = %if.end166
  store i32 0, i32* %retval, align 4, !dbg !8761
  br label %return, !dbg !8761

return:                                           ; preds = %do.end167, %if.then165, %if.then157, %if.then144, %if.then131, %if.then118, %if.then105, %if.then92, %if.then79, %if.then66, %if.then54, %if.then46, %if.then38, %if.then27, %if.then16, %if.then
  %89 = load i32, i32* %retval, align 4, !dbg !8762
  ret i32 %89, !dbg !8762
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @input_dev_release(%struct.device* %device) #0 !dbg !8763 {
entry:
  %device.addr = alloca %struct.device*, align 8
  %dev = alloca %struct.input_dev*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.input_dev*, align 8
  store %struct.device* %device, %struct.device** %device.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %device.addr, metadata !8764, metadata !DIExpression()), !dbg !8765
  call void @llvm.dbg.declare(metadata %struct.input_dev** %dev, metadata !8766, metadata !DIExpression()), !dbg !8767
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !8768, metadata !DIExpression()), !dbg !8770
  %0 = load %struct.device*, %struct.device** %device.addr, align 8, !dbg !8770
  %1 = bitcast %struct.device* %0 to i8*, !dbg !8770
  store i8* %1, i8** %__mptr, align 8, !dbg !8770
  br label %do.body, !dbg !8770

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !8771

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !8770
  %add.ptr = getelementptr i8, i8* %2, i64 -528, !dbg !8770
  %3 = bitcast i8* %add.ptr to %struct.input_dev*, !dbg !8770
  store %struct.input_dev* %3, %struct.input_dev** %tmp, align 8, !dbg !8771
  %4 = load %struct.input_dev*, %struct.input_dev** %tmp, align 8, !dbg !8770
  store %struct.input_dev* %4, %struct.input_dev** %dev, align 8, !dbg !8767
  %5 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !8773
  call void @input_ff_destroy(%struct.input_dev* %5) #11, !dbg !8774
  %6 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !8775
  call void @input_mt_destroy_slots(%struct.input_dev* %6) #11, !dbg !8776
  %7 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !8777
  %poller = getelementptr inbounds %struct.input_dev, %struct.input_dev* %7, i32 0, i32 21, !dbg !8778
  %8 = load %struct.input_dev_poller*, %struct.input_dev_poller** %poller, align 8, !dbg !8778
  %9 = bitcast %struct.input_dev_poller* %8 to i8*, !dbg !8777
  call void @kfree(i8* %9) #11, !dbg !8779
  %10 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !8780
  %absinfo = getelementptr inbounds %struct.input_dev, %struct.input_dev* %10, i32 0, i32 26, !dbg !8781
  %11 = load %struct.input_absinfo*, %struct.input_absinfo** %absinfo, align 8, !dbg !8781
  %12 = bitcast %struct.input_absinfo* %11 to i8*, !dbg !8780
  call void @kfree(i8* %12) #11, !dbg !8782
  %13 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !8783
  %vals = getelementptr inbounds %struct.input_dev, %struct.input_dev* %13, i32 0, i32 45, !dbg !8784
  %14 = load %struct.input_value*, %struct.input_value** %vals, align 8, !dbg !8784
  %15 = bitcast %struct.input_value* %14 to i8*, !dbg !8783
  call void @kfree(i8* %15) #11, !dbg !8785
  %16 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !8786
  %17 = bitcast %struct.input_dev* %16 to i8*, !dbg !8786
  call void @kfree(i8* %17) #11, !dbg !8787
  call void @module_put(%struct.module* null) #11, !dbg !8788
  ret void, !dbg !8789
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @input_dev_show_name(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !8790 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %input_dev = alloca %struct.input_dev*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.input_dev*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !8791, metadata !DIExpression()), !dbg !8792
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !8793, metadata !DIExpression()), !dbg !8792
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !8794, metadata !DIExpression()), !dbg !8792
  call void @llvm.dbg.declare(metadata %struct.input_dev** %input_dev, metadata !8795, metadata !DIExpression()), !dbg !8792
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !8796, metadata !DIExpression()), !dbg !8798
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !8798
  %1 = bitcast %struct.device* %0 to i8*, !dbg !8798
  store i8* %1, i8** %__mptr, align 8, !dbg !8798
  br label %do.body, !dbg !8798

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !8799

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !8798
  %add.ptr = getelementptr i8, i8* %2, i64 -528, !dbg !8798
  %3 = bitcast i8* %add.ptr to %struct.input_dev*, !dbg !8798
  store %struct.input_dev* %3, %struct.input_dev** %tmp, align 8, !dbg !8799
  %4 = load %struct.input_dev*, %struct.input_dev** %tmp, align 8, !dbg !8798
  store %struct.input_dev* %4, %struct.input_dev** %input_dev, align 8, !dbg !8792
  %5 = load i8*, i8** %buf.addr, align 8, !dbg !8792
  %6 = load %struct.input_dev*, %struct.input_dev** %input_dev, align 8, !dbg !8792
  %name = getelementptr inbounds %struct.input_dev, %struct.input_dev* %6, i32 0, i32 0, !dbg !8792
  %7 = load i8*, i8** %name, align 8, !dbg !8792
  %tobool = icmp ne i8* %7, null, !dbg !8792
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !8792

cond.true:                                        ; preds = %do.end
  %8 = load %struct.input_dev*, %struct.input_dev** %input_dev, align 8, !dbg !8792
  %name1 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %8, i32 0, i32 0, !dbg !8792
  %9 = load i8*, i8** %name1, align 8, !dbg !8792
  br label %cond.end, !dbg !8792

cond.false:                                       ; preds = %do.end
  br label %cond.end, !dbg !8792

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %9, %cond.true ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.15, i64 0, i64 0), %cond.false ], !dbg !8792
  %call = call i32 (i8*, i64, i8*, ...) @scnprintf(i8* %5, i64 4096, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14, i64 0, i64 0), i8* %cond) #11, !dbg !8792
  %conv = sext i32 %call to i64, !dbg !8792
  ret i64 %conv, !dbg !8792
}

; Function Attrs: noredzone
declare dso_local i32 @scnprintf(i8*, i64, i8*, ...) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @input_dev_show_phys(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !8801 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %input_dev = alloca %struct.input_dev*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.input_dev*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !8802, metadata !DIExpression()), !dbg !8803
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !8804, metadata !DIExpression()), !dbg !8803
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !8805, metadata !DIExpression()), !dbg !8803
  call void @llvm.dbg.declare(metadata %struct.input_dev** %input_dev, metadata !8806, metadata !DIExpression()), !dbg !8803
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !8807, metadata !DIExpression()), !dbg !8809
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !8809
  %1 = bitcast %struct.device* %0 to i8*, !dbg !8809
  store i8* %1, i8** %__mptr, align 8, !dbg !8809
  br label %do.body, !dbg !8809

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !8810

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !8809
  %add.ptr = getelementptr i8, i8* %2, i64 -528, !dbg !8809
  %3 = bitcast i8* %add.ptr to %struct.input_dev*, !dbg !8809
  store %struct.input_dev* %3, %struct.input_dev** %tmp, align 8, !dbg !8810
  %4 = load %struct.input_dev*, %struct.input_dev** %tmp, align 8, !dbg !8809
  store %struct.input_dev* %4, %struct.input_dev** %input_dev, align 8, !dbg !8803
  %5 = load i8*, i8** %buf.addr, align 8, !dbg !8803
  %6 = load %struct.input_dev*, %struct.input_dev** %input_dev, align 8, !dbg !8803
  %phys = getelementptr inbounds %struct.input_dev, %struct.input_dev* %6, i32 0, i32 1, !dbg !8803
  %7 = load i8*, i8** %phys, align 8, !dbg !8803
  %tobool = icmp ne i8* %7, null, !dbg !8803
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !8803

cond.true:                                        ; preds = %do.end
  %8 = load %struct.input_dev*, %struct.input_dev** %input_dev, align 8, !dbg !8803
  %phys1 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %8, i32 0, i32 1, !dbg !8803
  %9 = load i8*, i8** %phys1, align 8, !dbg !8803
  br label %cond.end, !dbg !8803

cond.false:                                       ; preds = %do.end
  br label %cond.end, !dbg !8803

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %9, %cond.true ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.15, i64 0, i64 0), %cond.false ], !dbg !8803
  %call = call i32 (i8*, i64, i8*, ...) @scnprintf(i8* %5, i64 4096, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14, i64 0, i64 0), i8* %cond) #11, !dbg !8803
  %conv = sext i32 %call to i64, !dbg !8803
  ret i64 %conv, !dbg !8803
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @input_dev_show_uniq(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !8812 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %input_dev = alloca %struct.input_dev*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.input_dev*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !8813, metadata !DIExpression()), !dbg !8814
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !8815, metadata !DIExpression()), !dbg !8814
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !8816, metadata !DIExpression()), !dbg !8814
  call void @llvm.dbg.declare(metadata %struct.input_dev** %input_dev, metadata !8817, metadata !DIExpression()), !dbg !8814
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !8818, metadata !DIExpression()), !dbg !8820
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !8820
  %1 = bitcast %struct.device* %0 to i8*, !dbg !8820
  store i8* %1, i8** %__mptr, align 8, !dbg !8820
  br label %do.body, !dbg !8820

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !8821

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !8820
  %add.ptr = getelementptr i8, i8* %2, i64 -528, !dbg !8820
  %3 = bitcast i8* %add.ptr to %struct.input_dev*, !dbg !8820
  store %struct.input_dev* %3, %struct.input_dev** %tmp, align 8, !dbg !8821
  %4 = load %struct.input_dev*, %struct.input_dev** %tmp, align 8, !dbg !8820
  store %struct.input_dev* %4, %struct.input_dev** %input_dev, align 8, !dbg !8814
  %5 = load i8*, i8** %buf.addr, align 8, !dbg !8814
  %6 = load %struct.input_dev*, %struct.input_dev** %input_dev, align 8, !dbg !8814
  %uniq = getelementptr inbounds %struct.input_dev, %struct.input_dev* %6, i32 0, i32 2, !dbg !8814
  %7 = load i8*, i8** %uniq, align 8, !dbg !8814
  %tobool = icmp ne i8* %7, null, !dbg !8814
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !8814

cond.true:                                        ; preds = %do.end
  %8 = load %struct.input_dev*, %struct.input_dev** %input_dev, align 8, !dbg !8814
  %uniq1 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %8, i32 0, i32 2, !dbg !8814
  %9 = load i8*, i8** %uniq1, align 8, !dbg !8814
  br label %cond.end, !dbg !8814

cond.false:                                       ; preds = %do.end
  br label %cond.end, !dbg !8814

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %9, %cond.true ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.15, i64 0, i64 0), %cond.false ], !dbg !8814
  %call = call i32 (i8*, i64, i8*, ...) @scnprintf(i8* %5, i64 4096, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14, i64 0, i64 0), i8* %cond) #11, !dbg !8814
  %conv = sext i32 %call to i64, !dbg !8814
  ret i64 %conv, !dbg !8814
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @input_dev_show_modalias(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !8823 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %id = alloca %struct.input_dev*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.input_dev*, align 8
  %len = alloca i64, align 8
  %__UNIQUE_ID___x249 = alloca i32, align 4
  %__UNIQUE_ID___y250 = alloca i32, align 4
  %tmp2 = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !8824, metadata !DIExpression()), !dbg !8825
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !8826, metadata !DIExpression()), !dbg !8827
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !8828, metadata !DIExpression()), !dbg !8829
  call void @llvm.dbg.declare(metadata %struct.input_dev** %id, metadata !8830, metadata !DIExpression()), !dbg !8831
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !8832, metadata !DIExpression()), !dbg !8834
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !8834
  %1 = bitcast %struct.device* %0 to i8*, !dbg !8834
  store i8* %1, i8** %__mptr, align 8, !dbg !8834
  br label %do.body, !dbg !8834

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !8835

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !8834
  %add.ptr = getelementptr i8, i8* %2, i64 -528, !dbg !8834
  %3 = bitcast i8* %add.ptr to %struct.input_dev*, !dbg !8834
  store %struct.input_dev* %3, %struct.input_dev** %tmp, align 8, !dbg !8835
  %4 = load %struct.input_dev*, %struct.input_dev** %tmp, align 8, !dbg !8834
  store %struct.input_dev* %4, %struct.input_dev** %id, align 8, !dbg !8831
  call void @llvm.dbg.declare(metadata i64* %len, metadata !8837, metadata !DIExpression()), !dbg !8838
  %5 = load i8*, i8** %buf.addr, align 8, !dbg !8839
  %6 = load %struct.input_dev*, %struct.input_dev** %id, align 8, !dbg !8840
  %call = call i32 @input_print_modalias(i8* %5, i32 4096, %struct.input_dev* %6, i32 1) #11, !dbg !8841
  %conv = sext i32 %call to i64, !dbg !8841
  store i64 %conv, i64* %len, align 8, !dbg !8842
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x249, metadata !8843, metadata !DIExpression()), !dbg !8845
  %7 = load i64, i64* %len, align 8, !dbg !8845
  %conv1 = trunc i64 %7 to i32, !dbg !8845
  store i32 %conv1, i32* %__UNIQUE_ID___x249, align 4, !dbg !8845
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y250, metadata !8846, metadata !DIExpression()), !dbg !8845
  store i32 4096, i32* %__UNIQUE_ID___y250, align 4, !dbg !8845
  %8 = load i32, i32* %__UNIQUE_ID___x249, align 4, !dbg !8845
  %9 = load i32, i32* %__UNIQUE_ID___y250, align 4, !dbg !8845
  %cmp = icmp slt i32 %8, %9, !dbg !8845
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !8845

cond.true:                                        ; preds = %do.end
  %10 = load i32, i32* %__UNIQUE_ID___x249, align 4, !dbg !8845
  br label %cond.end, !dbg !8845

cond.false:                                       ; preds = %do.end
  %11 = load i32, i32* %__UNIQUE_ID___y250, align 4, !dbg !8845
  br label %cond.end, !dbg !8845

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %10, %cond.true ], [ %11, %cond.false ], !dbg !8845
  store i32 %cond, i32* %tmp2, align 4, !dbg !8845
  %12 = load i32, i32* %tmp2, align 4, !dbg !8845
  %conv4 = sext i32 %12 to i64, !dbg !8847
  ret i64 %conv4, !dbg !8848
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @input_print_modalias(i8* %buf, i32 %size, %struct.input_dev* %id, i32 %add_cr) #0 !dbg !8849 {
entry:
  %buf.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  %id.addr = alloca %struct.input_dev*, align 8
  %add_cr.addr = alloca i32, align 4
  %len = alloca i32, align 4
  %__UNIQUE_ID___x244 = alloca i32, align 4
  %__UNIQUE_ID___y245 = alloca i32, align 4
  %tmp = alloca i32, align 4
  %__UNIQUE_ID___x246 = alloca i32, align 4
  %__UNIQUE_ID___y247 = alloca i32, align 4
  %tmp61 = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !8852, metadata !DIExpression()), !dbg !8853
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !8854, metadata !DIExpression()), !dbg !8855
  store %struct.input_dev* %id, %struct.input_dev** %id.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.input_dev** %id.addr, metadata !8856, metadata !DIExpression()), !dbg !8857
  store i32 %add_cr, i32* %add_cr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %add_cr.addr, metadata !8858, metadata !DIExpression()), !dbg !8859
  call void @llvm.dbg.declare(metadata i32* %len, metadata !8860, metadata !DIExpression()), !dbg !8861
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !8862
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x244, metadata !8863, metadata !DIExpression()), !dbg !8865
  %1 = load i32, i32* %size.addr, align 4, !dbg !8865
  store i32 %1, i32* %__UNIQUE_ID___x244, align 4, !dbg !8865
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y245, metadata !8866, metadata !DIExpression()), !dbg !8865
  store i32 0, i32* %__UNIQUE_ID___y245, align 4, !dbg !8865
  %2 = load i32, i32* %__UNIQUE_ID___x244, align 4, !dbg !8865
  %3 = load i32, i32* %__UNIQUE_ID___y245, align 4, !dbg !8865
  %cmp = icmp sgt i32 %2, %3, !dbg !8865
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !8865

cond.true:                                        ; preds = %entry
  %4 = load i32, i32* %__UNIQUE_ID___x244, align 4, !dbg !8865
  br label %cond.end, !dbg !8865

cond.false:                                       ; preds = %entry
  %5 = load i32, i32* %__UNIQUE_ID___y245, align 4, !dbg !8865
  br label %cond.end, !dbg !8865

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %4, %cond.true ], [ %5, %cond.false ], !dbg !8865
  store i32 %cond, i32* %tmp, align 4, !dbg !8865
  %6 = load i32, i32* %tmp, align 4, !dbg !8865
  %conv = sext i32 %6 to i64, !dbg !8867
  %7 = load %struct.input_dev*, %struct.input_dev** %id.addr, align 8, !dbg !8868
  %id1 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %7, i32 0, i32 3, !dbg !8869
  %bustype = getelementptr inbounds %struct.input_id, %struct.input_id* %id1, i32 0, i32 0, !dbg !8870
  %8 = load i16, i16* %bustype, align 8, !dbg !8870
  %conv2 = zext i16 %8 to i32, !dbg !8868
  %9 = load %struct.input_dev*, %struct.input_dev** %id.addr, align 8, !dbg !8871
  %id3 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %9, i32 0, i32 3, !dbg !8872
  %vendor = getelementptr inbounds %struct.input_id, %struct.input_id* %id3, i32 0, i32 1, !dbg !8873
  %10 = load i16, i16* %vendor, align 2, !dbg !8873
  %conv4 = zext i16 %10 to i32, !dbg !8871
  %11 = load %struct.input_dev*, %struct.input_dev** %id.addr, align 8, !dbg !8874
  %id5 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %11, i32 0, i32 3, !dbg !8875
  %product = getelementptr inbounds %struct.input_id, %struct.input_id* %id5, i32 0, i32 2, !dbg !8876
  %12 = load i16, i16* %product, align 4, !dbg !8876
  %conv6 = zext i16 %12 to i32, !dbg !8874
  %13 = load %struct.input_dev*, %struct.input_dev** %id.addr, align 8, !dbg !8877
  %id7 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %13, i32 0, i32 3, !dbg !8878
  %version = getelementptr inbounds %struct.input_id, %struct.input_id* %id7, i32 0, i32 3, !dbg !8879
  %14 = load i16, i16* %version, align 2, !dbg !8879
  %conv8 = zext i16 %14 to i32, !dbg !8877
  %call = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %0, i64 %conv, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.19, i64 0, i64 0), i32 %conv2, i32 %conv4, i32 %conv6, i32 %conv8) #11, !dbg !8880
  store i32 %call, i32* %len, align 4, !dbg !8881
  %15 = load i8*, i8** %buf.addr, align 8, !dbg !8882
  %16 = load i32, i32* %len, align 4, !dbg !8883
  %idx.ext = sext i32 %16 to i64, !dbg !8884
  %add.ptr = getelementptr i8, i8* %15, i64 %idx.ext, !dbg !8884
  %17 = load i32, i32* %size.addr, align 4, !dbg !8885
  %18 = load i32, i32* %len, align 4, !dbg !8886
  %sub = sub i32 %17, %18, !dbg !8887
  %19 = load %struct.input_dev*, %struct.input_dev** %id.addr, align 8, !dbg !8888
  %evbit = getelementptr inbounds %struct.input_dev, %struct.input_dev* %19, i32 0, i32 5, !dbg !8889
  %arraydecay = getelementptr inbounds [1 x i64], [1 x i64]* %evbit, i64 0, i64 0, !dbg !8888
  %call9 = call i32 @input_print_modalias_bits(i8* %add.ptr, i32 %sub, i8 signext 101, i64* %arraydecay, i32 0, i32 31) #11, !dbg !8890
  %20 = load i32, i32* %len, align 4, !dbg !8891
  %add = add i32 %20, %call9, !dbg !8891
  store i32 %add, i32* %len, align 4, !dbg !8891
  %21 = load i8*, i8** %buf.addr, align 8, !dbg !8892
  %22 = load i32, i32* %len, align 4, !dbg !8893
  %idx.ext10 = sext i32 %22 to i64, !dbg !8894
  %add.ptr11 = getelementptr i8, i8* %21, i64 %idx.ext10, !dbg !8894
  %23 = load i32, i32* %size.addr, align 4, !dbg !8895
  %24 = load i32, i32* %len, align 4, !dbg !8896
  %sub12 = sub i32 %23, %24, !dbg !8897
  %25 = load %struct.input_dev*, %struct.input_dev** %id.addr, align 8, !dbg !8898
  %keybit = getelementptr inbounds %struct.input_dev, %struct.input_dev* %25, i32 0, i32 6, !dbg !8899
  %arraydecay13 = getelementptr inbounds [12 x i64], [12 x i64]* %keybit, i64 0, i64 0, !dbg !8898
  %call14 = call i32 @input_print_modalias_bits(i8* %add.ptr11, i32 %sub12, i8 signext 107, i64* %arraydecay13, i32 113, i32 767) #11, !dbg !8900
  %26 = load i32, i32* %len, align 4, !dbg !8901
  %add15 = add i32 %26, %call14, !dbg !8901
  store i32 %add15, i32* %len, align 4, !dbg !8901
  %27 = load i8*, i8** %buf.addr, align 8, !dbg !8902
  %28 = load i32, i32* %len, align 4, !dbg !8903
  %idx.ext16 = sext i32 %28 to i64, !dbg !8904
  %add.ptr17 = getelementptr i8, i8* %27, i64 %idx.ext16, !dbg !8904
  %29 = load i32, i32* %size.addr, align 4, !dbg !8905
  %30 = load i32, i32* %len, align 4, !dbg !8906
  %sub18 = sub i32 %29, %30, !dbg !8907
  %31 = load %struct.input_dev*, %struct.input_dev** %id.addr, align 8, !dbg !8908
  %relbit = getelementptr inbounds %struct.input_dev, %struct.input_dev* %31, i32 0, i32 7, !dbg !8909
  %arraydecay19 = getelementptr inbounds [1 x i64], [1 x i64]* %relbit, i64 0, i64 0, !dbg !8908
  %call20 = call i32 @input_print_modalias_bits(i8* %add.ptr17, i32 %sub18, i8 signext 114, i64* %arraydecay19, i32 0, i32 15) #11, !dbg !8910
  %32 = load i32, i32* %len, align 4, !dbg !8911
  %add21 = add i32 %32, %call20, !dbg !8911
  store i32 %add21, i32* %len, align 4, !dbg !8911
  %33 = load i8*, i8** %buf.addr, align 8, !dbg !8912
  %34 = load i32, i32* %len, align 4, !dbg !8913
  %idx.ext22 = sext i32 %34 to i64, !dbg !8914
  %add.ptr23 = getelementptr i8, i8* %33, i64 %idx.ext22, !dbg !8914
  %35 = load i32, i32* %size.addr, align 4, !dbg !8915
  %36 = load i32, i32* %len, align 4, !dbg !8916
  %sub24 = sub i32 %35, %36, !dbg !8917
  %37 = load %struct.input_dev*, %struct.input_dev** %id.addr, align 8, !dbg !8918
  %absbit = getelementptr inbounds %struct.input_dev, %struct.input_dev* %37, i32 0, i32 8, !dbg !8919
  %arraydecay25 = getelementptr inbounds [1 x i64], [1 x i64]* %absbit, i64 0, i64 0, !dbg !8918
  %call26 = call i32 @input_print_modalias_bits(i8* %add.ptr23, i32 %sub24, i8 signext 97, i64* %arraydecay25, i32 0, i32 63) #11, !dbg !8920
  %38 = load i32, i32* %len, align 4, !dbg !8921
  %add27 = add i32 %38, %call26, !dbg !8921
  store i32 %add27, i32* %len, align 4, !dbg !8921
  %39 = load i8*, i8** %buf.addr, align 8, !dbg !8922
  %40 = load i32, i32* %len, align 4, !dbg !8923
  %idx.ext28 = sext i32 %40 to i64, !dbg !8924
  %add.ptr29 = getelementptr i8, i8* %39, i64 %idx.ext28, !dbg !8924
  %41 = load i32, i32* %size.addr, align 4, !dbg !8925
  %42 = load i32, i32* %len, align 4, !dbg !8926
  %sub30 = sub i32 %41, %42, !dbg !8927
  %43 = load %struct.input_dev*, %struct.input_dev** %id.addr, align 8, !dbg !8928
  %mscbit = getelementptr inbounds %struct.input_dev, %struct.input_dev* %43, i32 0, i32 9, !dbg !8929
  %arraydecay31 = getelementptr inbounds [1 x i64], [1 x i64]* %mscbit, i64 0, i64 0, !dbg !8928
  %call32 = call i32 @input_print_modalias_bits(i8* %add.ptr29, i32 %sub30, i8 signext 109, i64* %arraydecay31, i32 0, i32 7) #11, !dbg !8930
  %44 = load i32, i32* %len, align 4, !dbg !8931
  %add33 = add i32 %44, %call32, !dbg !8931
  store i32 %add33, i32* %len, align 4, !dbg !8931
  %45 = load i8*, i8** %buf.addr, align 8, !dbg !8932
  %46 = load i32, i32* %len, align 4, !dbg !8933
  %idx.ext34 = sext i32 %46 to i64, !dbg !8934
  %add.ptr35 = getelementptr i8, i8* %45, i64 %idx.ext34, !dbg !8934
  %47 = load i32, i32* %size.addr, align 4, !dbg !8935
  %48 = load i32, i32* %len, align 4, !dbg !8936
  %sub36 = sub i32 %47, %48, !dbg !8937
  %49 = load %struct.input_dev*, %struct.input_dev** %id.addr, align 8, !dbg !8938
  %ledbit = getelementptr inbounds %struct.input_dev, %struct.input_dev* %49, i32 0, i32 10, !dbg !8939
  %arraydecay37 = getelementptr inbounds [1 x i64], [1 x i64]* %ledbit, i64 0, i64 0, !dbg !8938
  %call38 = call i32 @input_print_modalias_bits(i8* %add.ptr35, i32 %sub36, i8 signext 108, i64* %arraydecay37, i32 0, i32 15) #11, !dbg !8940
  %50 = load i32, i32* %len, align 4, !dbg !8941
  %add39 = add i32 %50, %call38, !dbg !8941
  store i32 %add39, i32* %len, align 4, !dbg !8941
  %51 = load i8*, i8** %buf.addr, align 8, !dbg !8942
  %52 = load i32, i32* %len, align 4, !dbg !8943
  %idx.ext40 = sext i32 %52 to i64, !dbg !8944
  %add.ptr41 = getelementptr i8, i8* %51, i64 %idx.ext40, !dbg !8944
  %53 = load i32, i32* %size.addr, align 4, !dbg !8945
  %54 = load i32, i32* %len, align 4, !dbg !8946
  %sub42 = sub i32 %53, %54, !dbg !8947
  %55 = load %struct.input_dev*, %struct.input_dev** %id.addr, align 8, !dbg !8948
  %sndbit = getelementptr inbounds %struct.input_dev, %struct.input_dev* %55, i32 0, i32 11, !dbg !8949
  %arraydecay43 = getelementptr inbounds [1 x i64], [1 x i64]* %sndbit, i64 0, i64 0, !dbg !8948
  %call44 = call i32 @input_print_modalias_bits(i8* %add.ptr41, i32 %sub42, i8 signext 115, i64* %arraydecay43, i32 0, i32 7) #11, !dbg !8950
  %56 = load i32, i32* %len, align 4, !dbg !8951
  %add45 = add i32 %56, %call44, !dbg !8951
  store i32 %add45, i32* %len, align 4, !dbg !8951
  %57 = load i8*, i8** %buf.addr, align 8, !dbg !8952
  %58 = load i32, i32* %len, align 4, !dbg !8953
  %idx.ext46 = sext i32 %58 to i64, !dbg !8954
  %add.ptr47 = getelementptr i8, i8* %57, i64 %idx.ext46, !dbg !8954
  %59 = load i32, i32* %size.addr, align 4, !dbg !8955
  %60 = load i32, i32* %len, align 4, !dbg !8956
  %sub48 = sub i32 %59, %60, !dbg !8957
  %61 = load %struct.input_dev*, %struct.input_dev** %id.addr, align 8, !dbg !8958
  %ffbit = getelementptr inbounds %struct.input_dev, %struct.input_dev* %61, i32 0, i32 12, !dbg !8959
  %arraydecay49 = getelementptr inbounds [2 x i64], [2 x i64]* %ffbit, i64 0, i64 0, !dbg !8958
  %call50 = call i32 @input_print_modalias_bits(i8* %add.ptr47, i32 %sub48, i8 signext 102, i64* %arraydecay49, i32 0, i32 127) #11, !dbg !8960
  %62 = load i32, i32* %len, align 4, !dbg !8961
  %add51 = add i32 %62, %call50, !dbg !8961
  store i32 %add51, i32* %len, align 4, !dbg !8961
  %63 = load i8*, i8** %buf.addr, align 8, !dbg !8962
  %64 = load i32, i32* %len, align 4, !dbg !8963
  %idx.ext52 = sext i32 %64 to i64, !dbg !8964
  %add.ptr53 = getelementptr i8, i8* %63, i64 %idx.ext52, !dbg !8964
  %65 = load i32, i32* %size.addr, align 4, !dbg !8965
  %66 = load i32, i32* %len, align 4, !dbg !8966
  %sub54 = sub i32 %65, %66, !dbg !8967
  %67 = load %struct.input_dev*, %struct.input_dev** %id.addr, align 8, !dbg !8968
  %swbit = getelementptr inbounds %struct.input_dev, %struct.input_dev* %67, i32 0, i32 13, !dbg !8969
  %arraydecay55 = getelementptr inbounds [1 x i64], [1 x i64]* %swbit, i64 0, i64 0, !dbg !8968
  %call56 = call i32 @input_print_modalias_bits(i8* %add.ptr53, i32 %sub54, i8 signext 119, i64* %arraydecay55, i32 0, i32 16) #11, !dbg !8970
  %68 = load i32, i32* %len, align 4, !dbg !8971
  %add57 = add i32 %68, %call56, !dbg !8971
  store i32 %add57, i32* %len, align 4, !dbg !8971
  %69 = load i32, i32* %add_cr.addr, align 4, !dbg !8972
  %tobool = icmp ne i32 %69, 0, !dbg !8972
  br i1 %tobool, label %if.then, label %if.end, !dbg !8974

if.then:                                          ; preds = %cond.end
  %70 = load i8*, i8** %buf.addr, align 8, !dbg !8975
  %71 = load i32, i32* %len, align 4, !dbg !8976
  %idx.ext58 = sext i32 %71 to i64, !dbg !8977
  %add.ptr59 = getelementptr i8, i8* %70, i64 %idx.ext58, !dbg !8977
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x246, metadata !8978, metadata !DIExpression()), !dbg !8980
  %72 = load i32, i32* %size.addr, align 4, !dbg !8980
  %73 = load i32, i32* %len, align 4, !dbg !8980
  %sub60 = sub i32 %72, %73, !dbg !8980
  store i32 %sub60, i32* %__UNIQUE_ID___x246, align 4, !dbg !8980
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y247, metadata !8981, metadata !DIExpression()), !dbg !8980
  store i32 0, i32* %__UNIQUE_ID___y247, align 4, !dbg !8980
  %74 = load i32, i32* %__UNIQUE_ID___x246, align 4, !dbg !8980
  %75 = load i32, i32* %__UNIQUE_ID___y247, align 4, !dbg !8980
  %cmp62 = icmp sgt i32 %74, %75, !dbg !8980
  br i1 %cmp62, label %cond.true64, label %cond.false65, !dbg !8980

cond.true64:                                      ; preds = %if.then
  %76 = load i32, i32* %__UNIQUE_ID___x246, align 4, !dbg !8980
  br label %cond.end66, !dbg !8980

cond.false65:                                     ; preds = %if.then
  %77 = load i32, i32* %__UNIQUE_ID___y247, align 4, !dbg !8980
  br label %cond.end66, !dbg !8980

cond.end66:                                       ; preds = %cond.false65, %cond.true64
  %cond67 = phi i32 [ %76, %cond.true64 ], [ %77, %cond.false65 ], !dbg !8980
  store i32 %cond67, i32* %tmp61, align 4, !dbg !8980
  %78 = load i32, i32* %tmp61, align 4, !dbg !8980
  %conv68 = sext i32 %78 to i64, !dbg !8982
  %call69 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %add.ptr59, i64 %conv68, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.20, i64 0, i64 0)) #11, !dbg !8983
  %79 = load i32, i32* %len, align 4, !dbg !8984
  %add70 = add i32 %79, %call69, !dbg !8984
  store i32 %add70, i32* %len, align 4, !dbg !8984
  br label %if.end, !dbg !8985

if.end:                                           ; preds = %cond.end66, %cond.end
  %80 = load i32, i32* %len, align 4, !dbg !8986
  ret i32 %80, !dbg !8987
}

; Function Attrs: noredzone
declare dso_local i32 @snprintf(i8*, i64, i8*, ...) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @input_print_modalias_bits(i8* %buf, i32 %size, i8 signext %name, i64* %bm, i32 %min_bit, i32 %max_bit) #0 !dbg !8988 {
entry:
  %buf.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  %name.addr = alloca i8, align 1
  %bm.addr = alloca i64*, align 8
  %min_bit.addr = alloca i32, align 4
  %max_bit.addr = alloca i32, align 4
  %len = alloca i32, align 4
  %i = alloca i32, align 4
  %__UNIQUE_ID___x240 = alloca i32, align 4
  %__UNIQUE_ID___y241 = alloca i32, align 4
  %tmp = alloca i32, align 4
  %__UNIQUE_ID___x242 = alloca i32, align 4
  %__UNIQUE_ID___y243 = alloca i32, align 4
  %tmp4 = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !8991, metadata !DIExpression()), !dbg !8992
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !8993, metadata !DIExpression()), !dbg !8994
  store i8 %name, i8* %name.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %name.addr, metadata !8995, metadata !DIExpression()), !dbg !8996
  store i64* %bm, i64** %bm.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %bm.addr, metadata !8997, metadata !DIExpression()), !dbg !8998
  store i32 %min_bit, i32* %min_bit.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %min_bit.addr, metadata !8999, metadata !DIExpression()), !dbg !9000
  store i32 %max_bit, i32* %max_bit.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %max_bit.addr, metadata !9001, metadata !DIExpression()), !dbg !9002
  call void @llvm.dbg.declare(metadata i32* %len, metadata !9003, metadata !DIExpression()), !dbg !9004
  store i32 0, i32* %len, align 4, !dbg !9004
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9005, metadata !DIExpression()), !dbg !9006
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !9007
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x240, metadata !9008, metadata !DIExpression()), !dbg !9010
  %1 = load i32, i32* %size.addr, align 4, !dbg !9010
  store i32 %1, i32* %__UNIQUE_ID___x240, align 4, !dbg !9010
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y241, metadata !9011, metadata !DIExpression()), !dbg !9010
  store i32 0, i32* %__UNIQUE_ID___y241, align 4, !dbg !9010
  %2 = load i32, i32* %__UNIQUE_ID___x240, align 4, !dbg !9010
  %3 = load i32, i32* %__UNIQUE_ID___y241, align 4, !dbg !9010
  %cmp = icmp sgt i32 %2, %3, !dbg !9010
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !9010

cond.true:                                        ; preds = %entry
  %4 = load i32, i32* %__UNIQUE_ID___x240, align 4, !dbg !9010
  br label %cond.end, !dbg !9010

cond.false:                                       ; preds = %entry
  %5 = load i32, i32* %__UNIQUE_ID___y241, align 4, !dbg !9010
  br label %cond.end, !dbg !9010

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %4, %cond.true ], [ %5, %cond.false ], !dbg !9010
  store i32 %cond, i32* %tmp, align 4, !dbg !9010
  %6 = load i32, i32* %tmp, align 4, !dbg !9010
  %conv = sext i32 %6 to i64, !dbg !9012
  %7 = load i8, i8* %name.addr, align 1, !dbg !9013
  %conv1 = sext i8 %7 to i32, !dbg !9013
  %call = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %0, i64 %conv, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.21, i64 0, i64 0), i32 %conv1) #11, !dbg !9014
  %8 = load i32, i32* %len, align 4, !dbg !9015
  %add = add i32 %8, %call, !dbg !9015
  store i32 %add, i32* %len, align 4, !dbg !9015
  %9 = load i32, i32* %min_bit.addr, align 4, !dbg !9016
  store i32 %9, i32* %i, align 4, !dbg !9018
  br label %for.cond, !dbg !9019

for.cond:                                         ; preds = %for.inc, %cond.end
  %10 = load i32, i32* %i, align 4, !dbg !9020
  %11 = load i32, i32* %max_bit.addr, align 4, !dbg !9022
  %cmp2 = icmp ult i32 %10, %11, !dbg !9023
  br i1 %cmp2, label %for.body, label %for.end, !dbg !9024

for.body:                                         ; preds = %for.cond
  %12 = load i64*, i64** %bm.addr, align 8, !dbg !9025
  %13 = load i32, i32* %i, align 4, !dbg !9027
  %div = sdiv i32 %13, 64, !dbg !9027
  %idxprom = sext i32 %div to i64, !dbg !9025
  %arrayidx = getelementptr i64, i64* %12, i64 %idxprom, !dbg !9025
  %14 = load i64, i64* %arrayidx, align 8, !dbg !9025
  %15 = load i32, i32* %i, align 4, !dbg !9028
  %rem = srem i32 %15, 64, !dbg !9028
  %sh_prom = zext i32 %rem to i64, !dbg !9028
  %shl = shl i64 1, %sh_prom, !dbg !9028
  %and = and i64 %14, %shl, !dbg !9029
  %tobool = icmp ne i64 %and, 0, !dbg !9029
  br i1 %tobool, label %if.then, label %if.end, !dbg !9030

if.then:                                          ; preds = %for.body
  %16 = load i8*, i8** %buf.addr, align 8, !dbg !9031
  %17 = load i32, i32* %len, align 4, !dbg !9032
  %idx.ext = sext i32 %17 to i64, !dbg !9033
  %add.ptr = getelementptr i8, i8* %16, i64 %idx.ext, !dbg !9033
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x242, metadata !9034, metadata !DIExpression()), !dbg !9036
  %18 = load i32, i32* %size.addr, align 4, !dbg !9036
  %19 = load i32, i32* %len, align 4, !dbg !9036
  %sub = sub i32 %18, %19, !dbg !9036
  store i32 %sub, i32* %__UNIQUE_ID___x242, align 4, !dbg !9036
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y243, metadata !9037, metadata !DIExpression()), !dbg !9036
  store i32 0, i32* %__UNIQUE_ID___y243, align 4, !dbg !9036
  %20 = load i32, i32* %__UNIQUE_ID___x242, align 4, !dbg !9036
  %21 = load i32, i32* %__UNIQUE_ID___y243, align 4, !dbg !9036
  %cmp5 = icmp sgt i32 %20, %21, !dbg !9036
  br i1 %cmp5, label %cond.true7, label %cond.false8, !dbg !9036

cond.true7:                                       ; preds = %if.then
  %22 = load i32, i32* %__UNIQUE_ID___x242, align 4, !dbg !9036
  br label %cond.end9, !dbg !9036

cond.false8:                                      ; preds = %if.then
  %23 = load i32, i32* %__UNIQUE_ID___y243, align 4, !dbg !9036
  br label %cond.end9, !dbg !9036

cond.end9:                                        ; preds = %cond.false8, %cond.true7
  %cond10 = phi i32 [ %22, %cond.true7 ], [ %23, %cond.false8 ], !dbg !9036
  store i32 %cond10, i32* %tmp4, align 4, !dbg !9036
  %24 = load i32, i32* %tmp4, align 4, !dbg !9036
  %conv11 = sext i32 %24 to i64, !dbg !9038
  %25 = load i32, i32* %i, align 4, !dbg !9039
  %call12 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %add.ptr, i64 %conv11, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.22, i64 0, i64 0), i32 %25) #11, !dbg !9040
  %26 = load i32, i32* %len, align 4, !dbg !9041
  %add13 = add i32 %26, %call12, !dbg !9041
  store i32 %add13, i32* %len, align 4, !dbg !9041
  br label %if.end, !dbg !9042

if.end:                                           ; preds = %cond.end9, %for.body
  br label %for.inc, !dbg !9028

for.inc:                                          ; preds = %if.end
  %27 = load i32, i32* %i, align 4, !dbg !9043
  %inc = add i32 %27, 1, !dbg !9043
  store i32 %inc, i32* %i, align 4, !dbg !9043
  br label %for.cond, !dbg !9044, !llvm.loop !9045

for.end:                                          ; preds = %for.cond
  %28 = load i32, i32* %len, align 4, !dbg !9047
  ret i32 %28, !dbg !9048
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @input_dev_show_properties(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !9049 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %input_dev = alloca %struct.input_dev*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.input_dev*, align 8
  %len = alloca i32, align 4
  %__UNIQUE_ID___x252 = alloca i32, align 4
  %__UNIQUE_ID___y253 = alloca i32, align 4
  %tmp1 = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !9050, metadata !DIExpression()), !dbg !9051
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !9052, metadata !DIExpression()), !dbg !9053
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !9054, metadata !DIExpression()), !dbg !9055
  call void @llvm.dbg.declare(metadata %struct.input_dev** %input_dev, metadata !9056, metadata !DIExpression()), !dbg !9057
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !9058, metadata !DIExpression()), !dbg !9060
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9060
  %1 = bitcast %struct.device* %0 to i8*, !dbg !9060
  store i8* %1, i8** %__mptr, align 8, !dbg !9060
  br label %do.body, !dbg !9060

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !9061

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !9060
  %add.ptr = getelementptr i8, i8* %2, i64 -528, !dbg !9060
  %3 = bitcast i8* %add.ptr to %struct.input_dev*, !dbg !9060
  store %struct.input_dev* %3, %struct.input_dev** %tmp, align 8, !dbg !9061
  %4 = load %struct.input_dev*, %struct.input_dev** %tmp, align 8, !dbg !9060
  store %struct.input_dev* %4, %struct.input_dev** %input_dev, align 8, !dbg !9057
  call void @llvm.dbg.declare(metadata i32* %len, metadata !9063, metadata !DIExpression()), !dbg !9064
  %5 = load i8*, i8** %buf.addr, align 8, !dbg !9065
  %6 = load %struct.input_dev*, %struct.input_dev** %input_dev, align 8, !dbg !9066
  %propbit = getelementptr inbounds %struct.input_dev, %struct.input_dev* %6, i32 0, i32 4, !dbg !9067
  %arraydecay = getelementptr inbounds [1 x i64], [1 x i64]* %propbit, i64 0, i64 0, !dbg !9066
  %call = call i32 @input_print_bitmap(i8* %5, i32 4096, i64* %arraydecay, i32 31, i32 1) #11, !dbg !9068
  store i32 %call, i32* %len, align 4, !dbg !9064
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x252, metadata !9069, metadata !DIExpression()), !dbg !9071
  %7 = load i32, i32* %len, align 4, !dbg !9071
  store i32 %7, i32* %__UNIQUE_ID___x252, align 4, !dbg !9071
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y253, metadata !9072, metadata !DIExpression()), !dbg !9071
  store i32 4096, i32* %__UNIQUE_ID___y253, align 4, !dbg !9071
  %8 = load i32, i32* %__UNIQUE_ID___x252, align 4, !dbg !9071
  %9 = load i32, i32* %__UNIQUE_ID___y253, align 4, !dbg !9071
  %cmp = icmp slt i32 %8, %9, !dbg !9071
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !9071

cond.true:                                        ; preds = %do.end
  %10 = load i32, i32* %__UNIQUE_ID___x252, align 4, !dbg !9071
  br label %cond.end, !dbg !9071

cond.false:                                       ; preds = %do.end
  %11 = load i32, i32* %__UNIQUE_ID___y253, align 4, !dbg !9071
  br label %cond.end, !dbg !9071

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %10, %cond.true ], [ %11, %cond.false ], !dbg !9071
  store i32 %cond, i32* %tmp1, align 4, !dbg !9071
  %12 = load i32, i32* %tmp1, align 4, !dbg !9071
  %conv = sext i32 %12 to i64, !dbg !9073
  ret i64 %conv, !dbg !9074
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @input_print_bitmap(i8* %buf, i32 %buf_size, i64* %bitmap, i32 %max, i32 %add_cr) #0 !dbg !9075 {
entry:
  %buf.addr = alloca i8*, align 8
  %buf_size.addr = alloca i32, align 4
  %bitmap.addr = alloca i64*, align 8
  %max.addr = alloca i32, align 4
  %add_cr.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %len = alloca i32, align 4
  %skip_empty = alloca i8, align 1
  %__UNIQUE_ID___x258 = alloca i32, align 4
  %__UNIQUE_ID___y259 = alloca i32, align 4
  %tmp = alloca i32, align 4
  %__UNIQUE_ID___x260 = alloca i32, align 4
  %__UNIQUE_ID___y261 = alloca i32, align 4
  %tmp15 = alloca i32, align 4
  %__UNIQUE_ID___x262 = alloca i32, align 4
  %__UNIQUE_ID___y263 = alloca i32, align 4
  %tmp37 = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !9078, metadata !DIExpression()), !dbg !9079
  store i32 %buf_size, i32* %buf_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %buf_size.addr, metadata !9080, metadata !DIExpression()), !dbg !9081
  store i64* %bitmap, i64** %bitmap.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %bitmap.addr, metadata !9082, metadata !DIExpression()), !dbg !9083
  store i32 %max, i32* %max.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %max.addr, metadata !9084, metadata !DIExpression()), !dbg !9085
  store i32 %add_cr, i32* %add_cr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %add_cr.addr, metadata !9086, metadata !DIExpression()), !dbg !9087
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9088, metadata !DIExpression()), !dbg !9089
  call void @llvm.dbg.declare(metadata i32* %len, metadata !9090, metadata !DIExpression()), !dbg !9091
  store i32 0, i32* %len, align 4, !dbg !9091
  call void @llvm.dbg.declare(metadata i8* %skip_empty, metadata !9092, metadata !DIExpression()), !dbg !9093
  store i8 1, i8* %skip_empty, align 1, !dbg !9093
  %0 = load i32, i32* %max.addr, align 4, !dbg !9094
  %conv = sext i32 %0 to i64, !dbg !9094
  %add = add i64 %conv, 64, !dbg !9094
  %sub = sub i64 %add, 1, !dbg !9094
  %div = udiv i64 %sub, 64, !dbg !9094
  %sub1 = sub i64 %div, 1, !dbg !9096
  %conv2 = trunc i64 %sub1 to i32, !dbg !9094
  store i32 %conv2, i32* %i, align 4, !dbg !9097
  br label %for.cond, !dbg !9098

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %i, align 4, !dbg !9099
  %cmp = icmp sge i32 %1, 0, !dbg !9101
  br i1 %cmp, label %for.body, label %for.end, !dbg !9102

for.body:                                         ; preds = %for.cond
  %2 = load i8*, i8** %buf.addr, align 8, !dbg !9103
  %3 = load i32, i32* %len, align 4, !dbg !9105
  %idx.ext = sext i32 %3 to i64, !dbg !9106
  %add.ptr = getelementptr i8, i8* %2, i64 %idx.ext, !dbg !9106
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x258, metadata !9107, metadata !DIExpression()), !dbg !9109
  %4 = load i32, i32* %buf_size.addr, align 4, !dbg !9109
  %5 = load i32, i32* %len, align 4, !dbg !9109
  %sub4 = sub i32 %4, %5, !dbg !9109
  store i32 %sub4, i32* %__UNIQUE_ID___x258, align 4, !dbg !9109
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y259, metadata !9110, metadata !DIExpression()), !dbg !9109
  store i32 0, i32* %__UNIQUE_ID___y259, align 4, !dbg !9109
  %6 = load i32, i32* %__UNIQUE_ID___x258, align 4, !dbg !9109
  %7 = load i32, i32* %__UNIQUE_ID___y259, align 4, !dbg !9109
  %cmp5 = icmp sgt i32 %6, %7, !dbg !9109
  br i1 %cmp5, label %cond.true, label %cond.false, !dbg !9109

cond.true:                                        ; preds = %for.body
  %8 = load i32, i32* %__UNIQUE_ID___x258, align 4, !dbg !9109
  br label %cond.end, !dbg !9109

cond.false:                                       ; preds = %for.body
  %9 = load i32, i32* %__UNIQUE_ID___y259, align 4, !dbg !9109
  br label %cond.end, !dbg !9109

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %8, %cond.true ], [ %9, %cond.false ], !dbg !9109
  store i32 %cond, i32* %tmp, align 4, !dbg !9109
  %10 = load i32, i32* %tmp, align 4, !dbg !9109
  %11 = load i64*, i64** %bitmap.addr, align 8, !dbg !9111
  %12 = load i32, i32* %i, align 4, !dbg !9112
  %idxprom = sext i32 %12 to i64, !dbg !9111
  %arrayidx = getelementptr i64, i64* %11, i64 %idxprom, !dbg !9111
  %13 = load i64, i64* %arrayidx, align 8, !dbg !9111
  %14 = load i8, i8* %skip_empty, align 1, !dbg !9113
  %tobool = trunc i8 %14 to i1, !dbg !9113
  %call = call i32 @input_bits_to_string(i8* %add.ptr, i32 %10, i64 %13, i1 zeroext %tobool) #11, !dbg !9114
  %15 = load i32, i32* %len, align 4, !dbg !9115
  %add7 = add i32 %15, %call, !dbg !9115
  store i32 %add7, i32* %len, align 4, !dbg !9115
  %16 = load i32, i32* %len, align 4, !dbg !9116
  %tobool8 = icmp ne i32 %16, 0, !dbg !9116
  br i1 %tobool8, label %if.then, label %if.end25, !dbg !9118

if.then:                                          ; preds = %cond.end
  store i8 0, i8* %skip_empty, align 1, !dbg !9119
  %17 = load i32, i32* %i, align 4, !dbg !9121
  %cmp9 = icmp sgt i32 %17, 0, !dbg !9123
  br i1 %cmp9, label %if.then11, label %if.end, !dbg !9124

if.then11:                                        ; preds = %if.then
  %18 = load i8*, i8** %buf.addr, align 8, !dbg !9125
  %19 = load i32, i32* %len, align 4, !dbg !9126
  %idx.ext12 = sext i32 %19 to i64, !dbg !9127
  %add.ptr13 = getelementptr i8, i8* %18, i64 %idx.ext12, !dbg !9127
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x260, metadata !9128, metadata !DIExpression()), !dbg !9130
  %20 = load i32, i32* %buf_size.addr, align 4, !dbg !9130
  %21 = load i32, i32* %len, align 4, !dbg !9130
  %sub14 = sub i32 %20, %21, !dbg !9130
  store i32 %sub14, i32* %__UNIQUE_ID___x260, align 4, !dbg !9130
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y261, metadata !9131, metadata !DIExpression()), !dbg !9130
  store i32 0, i32* %__UNIQUE_ID___y261, align 4, !dbg !9130
  %22 = load i32, i32* %__UNIQUE_ID___x260, align 4, !dbg !9130
  %23 = load i32, i32* %__UNIQUE_ID___y261, align 4, !dbg !9130
  %cmp16 = icmp sgt i32 %22, %23, !dbg !9130
  br i1 %cmp16, label %cond.true18, label %cond.false19, !dbg !9130

cond.true18:                                      ; preds = %if.then11
  %24 = load i32, i32* %__UNIQUE_ID___x260, align 4, !dbg !9130
  br label %cond.end20, !dbg !9130

cond.false19:                                     ; preds = %if.then11
  %25 = load i32, i32* %__UNIQUE_ID___y261, align 4, !dbg !9130
  br label %cond.end20, !dbg !9130

cond.end20:                                       ; preds = %cond.false19, %cond.true18
  %cond21 = phi i32 [ %24, %cond.true18 ], [ %25, %cond.false19 ], !dbg !9130
  store i32 %cond21, i32* %tmp15, align 4, !dbg !9130
  %26 = load i32, i32* %tmp15, align 4, !dbg !9130
  %conv22 = sext i32 %26 to i64, !dbg !9132
  %call23 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %add.ptr13, i64 %conv22, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.24, i64 0, i64 0)) #11, !dbg !9133
  %27 = load i32, i32* %len, align 4, !dbg !9134
  %add24 = add i32 %27, %call23, !dbg !9134
  store i32 %add24, i32* %len, align 4, !dbg !9134
  br label %if.end, !dbg !9135

if.end:                                           ; preds = %cond.end20, %if.then
  br label %if.end25, !dbg !9136

if.end25:                                         ; preds = %if.end, %cond.end
  br label %for.inc, !dbg !9137

for.inc:                                          ; preds = %if.end25
  %28 = load i32, i32* %i, align 4, !dbg !9138
  %dec = add i32 %28, -1, !dbg !9138
  store i32 %dec, i32* %i, align 4, !dbg !9138
  br label %for.cond, !dbg !9139, !llvm.loop !9140

for.end:                                          ; preds = %for.cond
  %29 = load i32, i32* %len, align 4, !dbg !9142
  %cmp26 = icmp eq i32 %29, 0, !dbg !9144
  br i1 %cmp26, label %if.then28, label %if.end31, !dbg !9145

if.then28:                                        ; preds = %for.end
  %30 = load i8*, i8** %buf.addr, align 8, !dbg !9146
  %31 = load i32, i32* %buf_size.addr, align 4, !dbg !9147
  %conv29 = sext i32 %31 to i64, !dbg !9147
  %call30 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %30, i64 %conv29, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.25, i64 0, i64 0), i32 0) #11, !dbg !9148
  store i32 %call30, i32* %len, align 4, !dbg !9149
  br label %if.end31, !dbg !9150

if.end31:                                         ; preds = %if.then28, %for.end
  %32 = load i32, i32* %add_cr.addr, align 4, !dbg !9151
  %tobool32 = icmp ne i32 %32, 0, !dbg !9151
  br i1 %tobool32, label %if.then33, label %if.end47, !dbg !9153

if.then33:                                        ; preds = %if.end31
  %33 = load i8*, i8** %buf.addr, align 8, !dbg !9154
  %34 = load i32, i32* %len, align 4, !dbg !9155
  %idx.ext34 = sext i32 %34 to i64, !dbg !9156
  %add.ptr35 = getelementptr i8, i8* %33, i64 %idx.ext34, !dbg !9156
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x262, metadata !9157, metadata !DIExpression()), !dbg !9159
  %35 = load i32, i32* %buf_size.addr, align 4, !dbg !9159
  %36 = load i32, i32* %len, align 4, !dbg !9159
  %sub36 = sub i32 %35, %36, !dbg !9159
  store i32 %sub36, i32* %__UNIQUE_ID___x262, align 4, !dbg !9159
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y263, metadata !9160, metadata !DIExpression()), !dbg !9159
  store i32 0, i32* %__UNIQUE_ID___y263, align 4, !dbg !9159
  %37 = load i32, i32* %__UNIQUE_ID___x262, align 4, !dbg !9159
  %38 = load i32, i32* %__UNIQUE_ID___y263, align 4, !dbg !9159
  %cmp38 = icmp sgt i32 %37, %38, !dbg !9159
  br i1 %cmp38, label %cond.true40, label %cond.false41, !dbg !9159

cond.true40:                                      ; preds = %if.then33
  %39 = load i32, i32* %__UNIQUE_ID___x262, align 4, !dbg !9159
  br label %cond.end42, !dbg !9159

cond.false41:                                     ; preds = %if.then33
  %40 = load i32, i32* %__UNIQUE_ID___y263, align 4, !dbg !9159
  br label %cond.end42, !dbg !9159

cond.end42:                                       ; preds = %cond.false41, %cond.true40
  %cond43 = phi i32 [ %39, %cond.true40 ], [ %40, %cond.false41 ], !dbg !9159
  store i32 %cond43, i32* %tmp37, align 4, !dbg !9159
  %41 = load i32, i32* %tmp37, align 4, !dbg !9159
  %conv44 = sext i32 %41 to i64, !dbg !9161
  %call45 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %add.ptr35, i64 %conv44, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.20, i64 0, i64 0)) #11, !dbg !9162
  %42 = load i32, i32* %len, align 4, !dbg !9163
  %add46 = add i32 %42, %call45, !dbg !9163
  store i32 %add46, i32* %len, align 4, !dbg !9163
  br label %if.end47, !dbg !9164

if.end47:                                         ; preds = %cond.end42, %if.end31
  %43 = load i32, i32* %len, align 4, !dbg !9165
  ret i32 %43, !dbg !9166
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @input_bits_to_string(i8* %buf, i32 %buf_size, i64 %bits, i1 zeroext %skip_empty) #0 !dbg !9167 {
entry:
  %buf.addr = alloca i8*, align 8
  %buf_size.addr = alloca i32, align 4
  %bits.addr = alloca i64, align 8
  %skip_empty.addr = alloca i8, align 1
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !9170, metadata !DIExpression()), !dbg !9171
  store i32 %buf_size, i32* %buf_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %buf_size.addr, metadata !9172, metadata !DIExpression()), !dbg !9173
  store i64 %bits, i64* %bits.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bits.addr, metadata !9174, metadata !DIExpression()), !dbg !9175
  %frombool = zext i1 %skip_empty to i8
  store i8 %frombool, i8* %skip_empty.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %skip_empty.addr, metadata !9176, metadata !DIExpression()), !dbg !9177
  %0 = load i64, i64* %bits.addr, align 8, !dbg !9178
  %tobool = icmp ne i64 %0, 0, !dbg !9178
  br i1 %tobool, label %cond.true, label %lor.lhs.false, !dbg !9179

lor.lhs.false:                                    ; preds = %entry
  %1 = load i8, i8* %skip_empty.addr, align 1, !dbg !9180
  %tobool1 = trunc i8 %1 to i1, !dbg !9180
  br i1 %tobool1, label %cond.false, label %cond.true, !dbg !9178

cond.true:                                        ; preds = %lor.lhs.false, %entry
  %2 = load i8*, i8** %buf.addr, align 8, !dbg !9181
  %3 = load i32, i32* %buf_size.addr, align 4, !dbg !9182
  %conv = sext i32 %3 to i64, !dbg !9182
  %4 = load i64, i64* %bits.addr, align 8, !dbg !9183
  %call = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %2, i64 %conv, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.26, i64 0, i64 0), i64 %4) #11, !dbg !9184
  br label %cond.end, !dbg !9178

cond.false:                                       ; preds = %lor.lhs.false
  br label %cond.end, !dbg !9178

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ 0, %cond.false ], !dbg !9178
  ret i32 %cond, !dbg !9185
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @input_dev_show_id_bustype(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !9186 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %input_dev = alloca %struct.input_dev*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.input_dev*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !9187, metadata !DIExpression()), !dbg !9188
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !9189, metadata !DIExpression()), !dbg !9188
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !9190, metadata !DIExpression()), !dbg !9188
  call void @llvm.dbg.declare(metadata %struct.input_dev** %input_dev, metadata !9191, metadata !DIExpression()), !dbg !9188
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !9192, metadata !DIExpression()), !dbg !9194
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9194
  %1 = bitcast %struct.device* %0 to i8*, !dbg !9194
  store i8* %1, i8** %__mptr, align 8, !dbg !9194
  br label %do.body, !dbg !9194

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !9195

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !9194
  %add.ptr = getelementptr i8, i8* %2, i64 -528, !dbg !9194
  %3 = bitcast i8* %add.ptr to %struct.input_dev*, !dbg !9194
  store %struct.input_dev* %3, %struct.input_dev** %tmp, align 8, !dbg !9195
  %4 = load %struct.input_dev*, %struct.input_dev** %tmp, align 8, !dbg !9194
  store %struct.input_dev* %4, %struct.input_dev** %input_dev, align 8, !dbg !9188
  %5 = load i8*, i8** %buf.addr, align 8, !dbg !9188
  %6 = load %struct.input_dev*, %struct.input_dev** %input_dev, align 8, !dbg !9188
  %id = getelementptr inbounds %struct.input_dev, %struct.input_dev* %6, i32 0, i32 3, !dbg !9188
  %bustype = getelementptr inbounds %struct.input_id, %struct.input_id* %id, i32 0, i32 0, !dbg !9188
  %7 = load i16, i16* %bustype, align 8, !dbg !9188
  %conv = zext i16 %7 to i32, !dbg !9188
  %call = call i32 (i8*, i64, i8*, ...) @scnprintf(i8* %5, i64 4096, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.29, i64 0, i64 0), i32 %conv) #11, !dbg !9188
  %conv1 = sext i32 %call to i64, !dbg !9188
  ret i64 %conv1, !dbg !9188
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @input_dev_show_id_vendor(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !9197 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %input_dev = alloca %struct.input_dev*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.input_dev*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !9198, metadata !DIExpression()), !dbg !9199
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !9200, metadata !DIExpression()), !dbg !9199
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !9201, metadata !DIExpression()), !dbg !9199
  call void @llvm.dbg.declare(metadata %struct.input_dev** %input_dev, metadata !9202, metadata !DIExpression()), !dbg !9199
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !9203, metadata !DIExpression()), !dbg !9205
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9205
  %1 = bitcast %struct.device* %0 to i8*, !dbg !9205
  store i8* %1, i8** %__mptr, align 8, !dbg !9205
  br label %do.body, !dbg !9205

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !9206

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !9205
  %add.ptr = getelementptr i8, i8* %2, i64 -528, !dbg !9205
  %3 = bitcast i8* %add.ptr to %struct.input_dev*, !dbg !9205
  store %struct.input_dev* %3, %struct.input_dev** %tmp, align 8, !dbg !9206
  %4 = load %struct.input_dev*, %struct.input_dev** %tmp, align 8, !dbg !9205
  store %struct.input_dev* %4, %struct.input_dev** %input_dev, align 8, !dbg !9199
  %5 = load i8*, i8** %buf.addr, align 8, !dbg !9199
  %6 = load %struct.input_dev*, %struct.input_dev** %input_dev, align 8, !dbg !9199
  %id = getelementptr inbounds %struct.input_dev, %struct.input_dev* %6, i32 0, i32 3, !dbg !9199
  %vendor = getelementptr inbounds %struct.input_id, %struct.input_id* %id, i32 0, i32 1, !dbg !9199
  %7 = load i16, i16* %vendor, align 2, !dbg !9199
  %conv = zext i16 %7 to i32, !dbg !9199
  %call = call i32 (i8*, i64, i8*, ...) @scnprintf(i8* %5, i64 4096, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.29, i64 0, i64 0), i32 %conv) #11, !dbg !9199
  %conv1 = sext i32 %call to i64, !dbg !9199
  ret i64 %conv1, !dbg !9199
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @input_dev_show_id_product(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !9208 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %input_dev = alloca %struct.input_dev*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.input_dev*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !9209, metadata !DIExpression()), !dbg !9210
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !9211, metadata !DIExpression()), !dbg !9210
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !9212, metadata !DIExpression()), !dbg !9210
  call void @llvm.dbg.declare(metadata %struct.input_dev** %input_dev, metadata !9213, metadata !DIExpression()), !dbg !9210
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !9214, metadata !DIExpression()), !dbg !9216
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9216
  %1 = bitcast %struct.device* %0 to i8*, !dbg !9216
  store i8* %1, i8** %__mptr, align 8, !dbg !9216
  br label %do.body, !dbg !9216

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !9217

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !9216
  %add.ptr = getelementptr i8, i8* %2, i64 -528, !dbg !9216
  %3 = bitcast i8* %add.ptr to %struct.input_dev*, !dbg !9216
  store %struct.input_dev* %3, %struct.input_dev** %tmp, align 8, !dbg !9217
  %4 = load %struct.input_dev*, %struct.input_dev** %tmp, align 8, !dbg !9216
  store %struct.input_dev* %4, %struct.input_dev** %input_dev, align 8, !dbg !9210
  %5 = load i8*, i8** %buf.addr, align 8, !dbg !9210
  %6 = load %struct.input_dev*, %struct.input_dev** %input_dev, align 8, !dbg !9210
  %id = getelementptr inbounds %struct.input_dev, %struct.input_dev* %6, i32 0, i32 3, !dbg !9210
  %product = getelementptr inbounds %struct.input_id, %struct.input_id* %id, i32 0, i32 2, !dbg !9210
  %7 = load i16, i16* %product, align 4, !dbg !9210
  %conv = zext i16 %7 to i32, !dbg !9210
  %call = call i32 (i8*, i64, i8*, ...) @scnprintf(i8* %5, i64 4096, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.29, i64 0, i64 0), i32 %conv) #11, !dbg !9210
  %conv1 = sext i32 %call to i64, !dbg !9210
  ret i64 %conv1, !dbg !9210
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @input_dev_show_id_version(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !9219 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %input_dev = alloca %struct.input_dev*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.input_dev*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !9220, metadata !DIExpression()), !dbg !9221
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !9222, metadata !DIExpression()), !dbg !9221
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !9223, metadata !DIExpression()), !dbg !9221
  call void @llvm.dbg.declare(metadata %struct.input_dev** %input_dev, metadata !9224, metadata !DIExpression()), !dbg !9221
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !9225, metadata !DIExpression()), !dbg !9227
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9227
  %1 = bitcast %struct.device* %0 to i8*, !dbg !9227
  store i8* %1, i8** %__mptr, align 8, !dbg !9227
  br label %do.body, !dbg !9227

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !9228

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !9227
  %add.ptr = getelementptr i8, i8* %2, i64 -528, !dbg !9227
  %3 = bitcast i8* %add.ptr to %struct.input_dev*, !dbg !9227
  store %struct.input_dev* %3, %struct.input_dev** %tmp, align 8, !dbg !9228
  %4 = load %struct.input_dev*, %struct.input_dev** %tmp, align 8, !dbg !9227
  store %struct.input_dev* %4, %struct.input_dev** %input_dev, align 8, !dbg !9221
  %5 = load i8*, i8** %buf.addr, align 8, !dbg !9221
  %6 = load %struct.input_dev*, %struct.input_dev** %input_dev, align 8, !dbg !9221
  %id = getelementptr inbounds %struct.input_dev, %struct.input_dev* %6, i32 0, i32 3, !dbg !9221
  %version = getelementptr inbounds %struct.input_id, %struct.input_id* %id, i32 0, i32 3, !dbg !9221
  %7 = load i16, i16* %version, align 2, !dbg !9221
  %conv = zext i16 %7 to i32, !dbg !9221
  %call = call i32 (i8*, i64, i8*, ...) @scnprintf(i8* %5, i64 4096, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.29, i64 0, i64 0), i32 %conv) #11, !dbg !9221
  %conv1 = sext i32 %call to i64, !dbg !9221
  ret i64 %conv1, !dbg !9221
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @input_dev_show_cap_ev(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !9230 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %input_dev = alloca %struct.input_dev*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.input_dev*, align 8
  %len = alloca i32, align 4
  %__UNIQUE_ID___x265 = alloca i32, align 4
  %__UNIQUE_ID___y266 = alloca i32, align 4
  %tmp1 = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !9231, metadata !DIExpression()), !dbg !9232
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !9233, metadata !DIExpression()), !dbg !9232
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !9234, metadata !DIExpression()), !dbg !9232
  call void @llvm.dbg.declare(metadata %struct.input_dev** %input_dev, metadata !9235, metadata !DIExpression()), !dbg !9232
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !9236, metadata !DIExpression()), !dbg !9238
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9238
  %1 = bitcast %struct.device* %0 to i8*, !dbg !9238
  store i8* %1, i8** %__mptr, align 8, !dbg !9238
  br label %do.body, !dbg !9238

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !9239

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !9238
  %add.ptr = getelementptr i8, i8* %2, i64 -528, !dbg !9238
  %3 = bitcast i8* %add.ptr to %struct.input_dev*, !dbg !9238
  store %struct.input_dev* %3, %struct.input_dev** %tmp, align 8, !dbg !9239
  %4 = load %struct.input_dev*, %struct.input_dev** %tmp, align 8, !dbg !9238
  store %struct.input_dev* %4, %struct.input_dev** %input_dev, align 8, !dbg !9232
  call void @llvm.dbg.declare(metadata i32* %len, metadata !9241, metadata !DIExpression()), !dbg !9232
  %5 = load i8*, i8** %buf.addr, align 8, !dbg !9232
  %6 = load %struct.input_dev*, %struct.input_dev** %input_dev, align 8, !dbg !9232
  %evbit = getelementptr inbounds %struct.input_dev, %struct.input_dev* %6, i32 0, i32 5, !dbg !9232
  %arraydecay = getelementptr inbounds [1 x i64], [1 x i64]* %evbit, i64 0, i64 0, !dbg !9232
  %call = call i32 @input_print_bitmap(i8* %5, i32 4096, i64* %arraydecay, i32 31, i32 1) #11, !dbg !9232
  store i32 %call, i32* %len, align 4, !dbg !9232
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x265, metadata !9242, metadata !DIExpression()), !dbg !9244
  %7 = load i32, i32* %len, align 4, !dbg !9244
  store i32 %7, i32* %__UNIQUE_ID___x265, align 4, !dbg !9244
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y266, metadata !9245, metadata !DIExpression()), !dbg !9244
  store i32 4096, i32* %__UNIQUE_ID___y266, align 4, !dbg !9244
  %8 = load i32, i32* %__UNIQUE_ID___x265, align 4, !dbg !9244
  %9 = load i32, i32* %__UNIQUE_ID___y266, align 4, !dbg !9244
  %cmp = icmp slt i32 %8, %9, !dbg !9244
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !9244

cond.true:                                        ; preds = %do.end
  %10 = load i32, i32* %__UNIQUE_ID___x265, align 4, !dbg !9244
  br label %cond.end, !dbg !9244

cond.false:                                       ; preds = %do.end
  %11 = load i32, i32* %__UNIQUE_ID___y266, align 4, !dbg !9244
  br label %cond.end, !dbg !9244

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %10, %cond.true ], [ %11, %cond.false ], !dbg !9244
  store i32 %cond, i32* %tmp1, align 4, !dbg !9244
  %12 = load i32, i32* %tmp1, align 4, !dbg !9244
  %conv = sext i32 %12 to i64, !dbg !9232
  ret i64 %conv, !dbg !9232
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @input_dev_show_cap_key(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !9246 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %input_dev = alloca %struct.input_dev*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.input_dev*, align 8
  %len = alloca i32, align 4
  %__UNIQUE_ID___x268 = alloca i32, align 4
  %__UNIQUE_ID___y269 = alloca i32, align 4
  %tmp1 = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !9247, metadata !DIExpression()), !dbg !9248
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !9249, metadata !DIExpression()), !dbg !9248
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !9250, metadata !DIExpression()), !dbg !9248
  call void @llvm.dbg.declare(metadata %struct.input_dev** %input_dev, metadata !9251, metadata !DIExpression()), !dbg !9248
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !9252, metadata !DIExpression()), !dbg !9254
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9254
  %1 = bitcast %struct.device* %0 to i8*, !dbg !9254
  store i8* %1, i8** %__mptr, align 8, !dbg !9254
  br label %do.body, !dbg !9254

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !9255

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !9254
  %add.ptr = getelementptr i8, i8* %2, i64 -528, !dbg !9254
  %3 = bitcast i8* %add.ptr to %struct.input_dev*, !dbg !9254
  store %struct.input_dev* %3, %struct.input_dev** %tmp, align 8, !dbg !9255
  %4 = load %struct.input_dev*, %struct.input_dev** %tmp, align 8, !dbg !9254
  store %struct.input_dev* %4, %struct.input_dev** %input_dev, align 8, !dbg !9248
  call void @llvm.dbg.declare(metadata i32* %len, metadata !9257, metadata !DIExpression()), !dbg !9248
  %5 = load i8*, i8** %buf.addr, align 8, !dbg !9248
  %6 = load %struct.input_dev*, %struct.input_dev** %input_dev, align 8, !dbg !9248
  %keybit = getelementptr inbounds %struct.input_dev, %struct.input_dev* %6, i32 0, i32 6, !dbg !9248
  %arraydecay = getelementptr inbounds [12 x i64], [12 x i64]* %keybit, i64 0, i64 0, !dbg !9248
  %call = call i32 @input_print_bitmap(i8* %5, i32 4096, i64* %arraydecay, i32 767, i32 1) #11, !dbg !9248
  store i32 %call, i32* %len, align 4, !dbg !9248
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x268, metadata !9258, metadata !DIExpression()), !dbg !9260
  %7 = load i32, i32* %len, align 4, !dbg !9260
  store i32 %7, i32* %__UNIQUE_ID___x268, align 4, !dbg !9260
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y269, metadata !9261, metadata !DIExpression()), !dbg !9260
  store i32 4096, i32* %__UNIQUE_ID___y269, align 4, !dbg !9260
  %8 = load i32, i32* %__UNIQUE_ID___x268, align 4, !dbg !9260
  %9 = load i32, i32* %__UNIQUE_ID___y269, align 4, !dbg !9260
  %cmp = icmp slt i32 %8, %9, !dbg !9260
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !9260

cond.true:                                        ; preds = %do.end
  %10 = load i32, i32* %__UNIQUE_ID___x268, align 4, !dbg !9260
  br label %cond.end, !dbg !9260

cond.false:                                       ; preds = %do.end
  %11 = load i32, i32* %__UNIQUE_ID___y269, align 4, !dbg !9260
  br label %cond.end, !dbg !9260

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %10, %cond.true ], [ %11, %cond.false ], !dbg !9260
  store i32 %cond, i32* %tmp1, align 4, !dbg !9260
  %12 = load i32, i32* %tmp1, align 4, !dbg !9260
  %conv = sext i32 %12 to i64, !dbg !9248
  ret i64 %conv, !dbg !9248
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @input_dev_show_cap_rel(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !9262 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %input_dev = alloca %struct.input_dev*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.input_dev*, align 8
  %len = alloca i32, align 4
  %__UNIQUE_ID___x271 = alloca i32, align 4
  %__UNIQUE_ID___y272 = alloca i32, align 4
  %tmp1 = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !9263, metadata !DIExpression()), !dbg !9264
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !9265, metadata !DIExpression()), !dbg !9264
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !9266, metadata !DIExpression()), !dbg !9264
  call void @llvm.dbg.declare(metadata %struct.input_dev** %input_dev, metadata !9267, metadata !DIExpression()), !dbg !9264
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !9268, metadata !DIExpression()), !dbg !9270
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9270
  %1 = bitcast %struct.device* %0 to i8*, !dbg !9270
  store i8* %1, i8** %__mptr, align 8, !dbg !9270
  br label %do.body, !dbg !9270

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !9271

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !9270
  %add.ptr = getelementptr i8, i8* %2, i64 -528, !dbg !9270
  %3 = bitcast i8* %add.ptr to %struct.input_dev*, !dbg !9270
  store %struct.input_dev* %3, %struct.input_dev** %tmp, align 8, !dbg !9271
  %4 = load %struct.input_dev*, %struct.input_dev** %tmp, align 8, !dbg !9270
  store %struct.input_dev* %4, %struct.input_dev** %input_dev, align 8, !dbg !9264
  call void @llvm.dbg.declare(metadata i32* %len, metadata !9273, metadata !DIExpression()), !dbg !9264
  %5 = load i8*, i8** %buf.addr, align 8, !dbg !9264
  %6 = load %struct.input_dev*, %struct.input_dev** %input_dev, align 8, !dbg !9264
  %relbit = getelementptr inbounds %struct.input_dev, %struct.input_dev* %6, i32 0, i32 7, !dbg !9264
  %arraydecay = getelementptr inbounds [1 x i64], [1 x i64]* %relbit, i64 0, i64 0, !dbg !9264
  %call = call i32 @input_print_bitmap(i8* %5, i32 4096, i64* %arraydecay, i32 15, i32 1) #11, !dbg !9264
  store i32 %call, i32* %len, align 4, !dbg !9264
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x271, metadata !9274, metadata !DIExpression()), !dbg !9276
  %7 = load i32, i32* %len, align 4, !dbg !9276
  store i32 %7, i32* %__UNIQUE_ID___x271, align 4, !dbg !9276
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y272, metadata !9277, metadata !DIExpression()), !dbg !9276
  store i32 4096, i32* %__UNIQUE_ID___y272, align 4, !dbg !9276
  %8 = load i32, i32* %__UNIQUE_ID___x271, align 4, !dbg !9276
  %9 = load i32, i32* %__UNIQUE_ID___y272, align 4, !dbg !9276
  %cmp = icmp slt i32 %8, %9, !dbg !9276
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !9276

cond.true:                                        ; preds = %do.end
  %10 = load i32, i32* %__UNIQUE_ID___x271, align 4, !dbg !9276
  br label %cond.end, !dbg !9276

cond.false:                                       ; preds = %do.end
  %11 = load i32, i32* %__UNIQUE_ID___y272, align 4, !dbg !9276
  br label %cond.end, !dbg !9276

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %10, %cond.true ], [ %11, %cond.false ], !dbg !9276
  store i32 %cond, i32* %tmp1, align 4, !dbg !9276
  %12 = load i32, i32* %tmp1, align 4, !dbg !9276
  %conv = sext i32 %12 to i64, !dbg !9264
  ret i64 %conv, !dbg !9264
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @input_dev_show_cap_abs(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !9278 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %input_dev = alloca %struct.input_dev*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.input_dev*, align 8
  %len = alloca i32, align 4
  %__UNIQUE_ID___x274 = alloca i32, align 4
  %__UNIQUE_ID___y275 = alloca i32, align 4
  %tmp1 = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !9279, metadata !DIExpression()), !dbg !9280
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !9281, metadata !DIExpression()), !dbg !9280
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !9282, metadata !DIExpression()), !dbg !9280
  call void @llvm.dbg.declare(metadata %struct.input_dev** %input_dev, metadata !9283, metadata !DIExpression()), !dbg !9280
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !9284, metadata !DIExpression()), !dbg !9286
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9286
  %1 = bitcast %struct.device* %0 to i8*, !dbg !9286
  store i8* %1, i8** %__mptr, align 8, !dbg !9286
  br label %do.body, !dbg !9286

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !9287

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !9286
  %add.ptr = getelementptr i8, i8* %2, i64 -528, !dbg !9286
  %3 = bitcast i8* %add.ptr to %struct.input_dev*, !dbg !9286
  store %struct.input_dev* %3, %struct.input_dev** %tmp, align 8, !dbg !9287
  %4 = load %struct.input_dev*, %struct.input_dev** %tmp, align 8, !dbg !9286
  store %struct.input_dev* %4, %struct.input_dev** %input_dev, align 8, !dbg !9280
  call void @llvm.dbg.declare(metadata i32* %len, metadata !9289, metadata !DIExpression()), !dbg !9280
  %5 = load i8*, i8** %buf.addr, align 8, !dbg !9280
  %6 = load %struct.input_dev*, %struct.input_dev** %input_dev, align 8, !dbg !9280
  %absbit = getelementptr inbounds %struct.input_dev, %struct.input_dev* %6, i32 0, i32 8, !dbg !9280
  %arraydecay = getelementptr inbounds [1 x i64], [1 x i64]* %absbit, i64 0, i64 0, !dbg !9280
  %call = call i32 @input_print_bitmap(i8* %5, i32 4096, i64* %arraydecay, i32 63, i32 1) #11, !dbg !9280
  store i32 %call, i32* %len, align 4, !dbg !9280
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x274, metadata !9290, metadata !DIExpression()), !dbg !9292
  %7 = load i32, i32* %len, align 4, !dbg !9292
  store i32 %7, i32* %__UNIQUE_ID___x274, align 4, !dbg !9292
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y275, metadata !9293, metadata !DIExpression()), !dbg !9292
  store i32 4096, i32* %__UNIQUE_ID___y275, align 4, !dbg !9292
  %8 = load i32, i32* %__UNIQUE_ID___x274, align 4, !dbg !9292
  %9 = load i32, i32* %__UNIQUE_ID___y275, align 4, !dbg !9292
  %cmp = icmp slt i32 %8, %9, !dbg !9292
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !9292

cond.true:                                        ; preds = %do.end
  %10 = load i32, i32* %__UNIQUE_ID___x274, align 4, !dbg !9292
  br label %cond.end, !dbg !9292

cond.false:                                       ; preds = %do.end
  %11 = load i32, i32* %__UNIQUE_ID___y275, align 4, !dbg !9292
  br label %cond.end, !dbg !9292

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %10, %cond.true ], [ %11, %cond.false ], !dbg !9292
  store i32 %cond, i32* %tmp1, align 4, !dbg !9292
  %12 = load i32, i32* %tmp1, align 4, !dbg !9292
  %conv = sext i32 %12 to i64, !dbg !9280
  ret i64 %conv, !dbg !9280
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @input_dev_show_cap_msc(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !9294 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %input_dev = alloca %struct.input_dev*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.input_dev*, align 8
  %len = alloca i32, align 4
  %__UNIQUE_ID___x277 = alloca i32, align 4
  %__UNIQUE_ID___y278 = alloca i32, align 4
  %tmp1 = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !9295, metadata !DIExpression()), !dbg !9296
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !9297, metadata !DIExpression()), !dbg !9296
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !9298, metadata !DIExpression()), !dbg !9296
  call void @llvm.dbg.declare(metadata %struct.input_dev** %input_dev, metadata !9299, metadata !DIExpression()), !dbg !9296
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !9300, metadata !DIExpression()), !dbg !9302
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9302
  %1 = bitcast %struct.device* %0 to i8*, !dbg !9302
  store i8* %1, i8** %__mptr, align 8, !dbg !9302
  br label %do.body, !dbg !9302

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !9303

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !9302
  %add.ptr = getelementptr i8, i8* %2, i64 -528, !dbg !9302
  %3 = bitcast i8* %add.ptr to %struct.input_dev*, !dbg !9302
  store %struct.input_dev* %3, %struct.input_dev** %tmp, align 8, !dbg !9303
  %4 = load %struct.input_dev*, %struct.input_dev** %tmp, align 8, !dbg !9302
  store %struct.input_dev* %4, %struct.input_dev** %input_dev, align 8, !dbg !9296
  call void @llvm.dbg.declare(metadata i32* %len, metadata !9305, metadata !DIExpression()), !dbg !9296
  %5 = load i8*, i8** %buf.addr, align 8, !dbg !9296
  %6 = load %struct.input_dev*, %struct.input_dev** %input_dev, align 8, !dbg !9296
  %mscbit = getelementptr inbounds %struct.input_dev, %struct.input_dev* %6, i32 0, i32 9, !dbg !9296
  %arraydecay = getelementptr inbounds [1 x i64], [1 x i64]* %mscbit, i64 0, i64 0, !dbg !9296
  %call = call i32 @input_print_bitmap(i8* %5, i32 4096, i64* %arraydecay, i32 7, i32 1) #11, !dbg !9296
  store i32 %call, i32* %len, align 4, !dbg !9296
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x277, metadata !9306, metadata !DIExpression()), !dbg !9308
  %7 = load i32, i32* %len, align 4, !dbg !9308
  store i32 %7, i32* %__UNIQUE_ID___x277, align 4, !dbg !9308
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y278, metadata !9309, metadata !DIExpression()), !dbg !9308
  store i32 4096, i32* %__UNIQUE_ID___y278, align 4, !dbg !9308
  %8 = load i32, i32* %__UNIQUE_ID___x277, align 4, !dbg !9308
  %9 = load i32, i32* %__UNIQUE_ID___y278, align 4, !dbg !9308
  %cmp = icmp slt i32 %8, %9, !dbg !9308
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !9308

cond.true:                                        ; preds = %do.end
  %10 = load i32, i32* %__UNIQUE_ID___x277, align 4, !dbg !9308
  br label %cond.end, !dbg !9308

cond.false:                                       ; preds = %do.end
  %11 = load i32, i32* %__UNIQUE_ID___y278, align 4, !dbg !9308
  br label %cond.end, !dbg !9308

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %10, %cond.true ], [ %11, %cond.false ], !dbg !9308
  store i32 %cond, i32* %tmp1, align 4, !dbg !9308
  %12 = load i32, i32* %tmp1, align 4, !dbg !9308
  %conv = sext i32 %12 to i64, !dbg !9296
  ret i64 %conv, !dbg !9296
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @input_dev_show_cap_led(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !9310 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %input_dev = alloca %struct.input_dev*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.input_dev*, align 8
  %len = alloca i32, align 4
  %__UNIQUE_ID___x280 = alloca i32, align 4
  %__UNIQUE_ID___y281 = alloca i32, align 4
  %tmp1 = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !9311, metadata !DIExpression()), !dbg !9312
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !9313, metadata !DIExpression()), !dbg !9312
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !9314, metadata !DIExpression()), !dbg !9312
  call void @llvm.dbg.declare(metadata %struct.input_dev** %input_dev, metadata !9315, metadata !DIExpression()), !dbg !9312
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !9316, metadata !DIExpression()), !dbg !9318
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9318
  %1 = bitcast %struct.device* %0 to i8*, !dbg !9318
  store i8* %1, i8** %__mptr, align 8, !dbg !9318
  br label %do.body, !dbg !9318

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !9319

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !9318
  %add.ptr = getelementptr i8, i8* %2, i64 -528, !dbg !9318
  %3 = bitcast i8* %add.ptr to %struct.input_dev*, !dbg !9318
  store %struct.input_dev* %3, %struct.input_dev** %tmp, align 8, !dbg !9319
  %4 = load %struct.input_dev*, %struct.input_dev** %tmp, align 8, !dbg !9318
  store %struct.input_dev* %4, %struct.input_dev** %input_dev, align 8, !dbg !9312
  call void @llvm.dbg.declare(metadata i32* %len, metadata !9321, metadata !DIExpression()), !dbg !9312
  %5 = load i8*, i8** %buf.addr, align 8, !dbg !9312
  %6 = load %struct.input_dev*, %struct.input_dev** %input_dev, align 8, !dbg !9312
  %ledbit = getelementptr inbounds %struct.input_dev, %struct.input_dev* %6, i32 0, i32 10, !dbg !9312
  %arraydecay = getelementptr inbounds [1 x i64], [1 x i64]* %ledbit, i64 0, i64 0, !dbg !9312
  %call = call i32 @input_print_bitmap(i8* %5, i32 4096, i64* %arraydecay, i32 15, i32 1) #11, !dbg !9312
  store i32 %call, i32* %len, align 4, !dbg !9312
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x280, metadata !9322, metadata !DIExpression()), !dbg !9324
  %7 = load i32, i32* %len, align 4, !dbg !9324
  store i32 %7, i32* %__UNIQUE_ID___x280, align 4, !dbg !9324
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y281, metadata !9325, metadata !DIExpression()), !dbg !9324
  store i32 4096, i32* %__UNIQUE_ID___y281, align 4, !dbg !9324
  %8 = load i32, i32* %__UNIQUE_ID___x280, align 4, !dbg !9324
  %9 = load i32, i32* %__UNIQUE_ID___y281, align 4, !dbg !9324
  %cmp = icmp slt i32 %8, %9, !dbg !9324
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !9324

cond.true:                                        ; preds = %do.end
  %10 = load i32, i32* %__UNIQUE_ID___x280, align 4, !dbg !9324
  br label %cond.end, !dbg !9324

cond.false:                                       ; preds = %do.end
  %11 = load i32, i32* %__UNIQUE_ID___y281, align 4, !dbg !9324
  br label %cond.end, !dbg !9324

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %10, %cond.true ], [ %11, %cond.false ], !dbg !9324
  store i32 %cond, i32* %tmp1, align 4, !dbg !9324
  %12 = load i32, i32* %tmp1, align 4, !dbg !9324
  %conv = sext i32 %12 to i64, !dbg !9312
  ret i64 %conv, !dbg !9312
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @input_dev_show_cap_snd(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !9326 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %input_dev = alloca %struct.input_dev*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.input_dev*, align 8
  %len = alloca i32, align 4
  %__UNIQUE_ID___x283 = alloca i32, align 4
  %__UNIQUE_ID___y284 = alloca i32, align 4
  %tmp1 = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !9327, metadata !DIExpression()), !dbg !9328
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !9329, metadata !DIExpression()), !dbg !9328
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !9330, metadata !DIExpression()), !dbg !9328
  call void @llvm.dbg.declare(metadata %struct.input_dev** %input_dev, metadata !9331, metadata !DIExpression()), !dbg !9328
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !9332, metadata !DIExpression()), !dbg !9334
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9334
  %1 = bitcast %struct.device* %0 to i8*, !dbg !9334
  store i8* %1, i8** %__mptr, align 8, !dbg !9334
  br label %do.body, !dbg !9334

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !9335

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !9334
  %add.ptr = getelementptr i8, i8* %2, i64 -528, !dbg !9334
  %3 = bitcast i8* %add.ptr to %struct.input_dev*, !dbg !9334
  store %struct.input_dev* %3, %struct.input_dev** %tmp, align 8, !dbg !9335
  %4 = load %struct.input_dev*, %struct.input_dev** %tmp, align 8, !dbg !9334
  store %struct.input_dev* %4, %struct.input_dev** %input_dev, align 8, !dbg !9328
  call void @llvm.dbg.declare(metadata i32* %len, metadata !9337, metadata !DIExpression()), !dbg !9328
  %5 = load i8*, i8** %buf.addr, align 8, !dbg !9328
  %6 = load %struct.input_dev*, %struct.input_dev** %input_dev, align 8, !dbg !9328
  %sndbit = getelementptr inbounds %struct.input_dev, %struct.input_dev* %6, i32 0, i32 11, !dbg !9328
  %arraydecay = getelementptr inbounds [1 x i64], [1 x i64]* %sndbit, i64 0, i64 0, !dbg !9328
  %call = call i32 @input_print_bitmap(i8* %5, i32 4096, i64* %arraydecay, i32 7, i32 1) #11, !dbg !9328
  store i32 %call, i32* %len, align 4, !dbg !9328
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x283, metadata !9338, metadata !DIExpression()), !dbg !9340
  %7 = load i32, i32* %len, align 4, !dbg !9340
  store i32 %7, i32* %__UNIQUE_ID___x283, align 4, !dbg !9340
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y284, metadata !9341, metadata !DIExpression()), !dbg !9340
  store i32 4096, i32* %__UNIQUE_ID___y284, align 4, !dbg !9340
  %8 = load i32, i32* %__UNIQUE_ID___x283, align 4, !dbg !9340
  %9 = load i32, i32* %__UNIQUE_ID___y284, align 4, !dbg !9340
  %cmp = icmp slt i32 %8, %9, !dbg !9340
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !9340

cond.true:                                        ; preds = %do.end
  %10 = load i32, i32* %__UNIQUE_ID___x283, align 4, !dbg !9340
  br label %cond.end, !dbg !9340

cond.false:                                       ; preds = %do.end
  %11 = load i32, i32* %__UNIQUE_ID___y284, align 4, !dbg !9340
  br label %cond.end, !dbg !9340

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %10, %cond.true ], [ %11, %cond.false ], !dbg !9340
  store i32 %cond, i32* %tmp1, align 4, !dbg !9340
  %12 = load i32, i32* %tmp1, align 4, !dbg !9340
  %conv = sext i32 %12 to i64, !dbg !9328
  ret i64 %conv, !dbg !9328
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @input_dev_show_cap_ff(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !9342 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %input_dev = alloca %struct.input_dev*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.input_dev*, align 8
  %len = alloca i32, align 4
  %__UNIQUE_ID___x286 = alloca i32, align 4
  %__UNIQUE_ID___y287 = alloca i32, align 4
  %tmp1 = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !9343, metadata !DIExpression()), !dbg !9344
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !9345, metadata !DIExpression()), !dbg !9344
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !9346, metadata !DIExpression()), !dbg !9344
  call void @llvm.dbg.declare(metadata %struct.input_dev** %input_dev, metadata !9347, metadata !DIExpression()), !dbg !9344
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !9348, metadata !DIExpression()), !dbg !9350
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9350
  %1 = bitcast %struct.device* %0 to i8*, !dbg !9350
  store i8* %1, i8** %__mptr, align 8, !dbg !9350
  br label %do.body, !dbg !9350

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !9351

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !9350
  %add.ptr = getelementptr i8, i8* %2, i64 -528, !dbg !9350
  %3 = bitcast i8* %add.ptr to %struct.input_dev*, !dbg !9350
  store %struct.input_dev* %3, %struct.input_dev** %tmp, align 8, !dbg !9351
  %4 = load %struct.input_dev*, %struct.input_dev** %tmp, align 8, !dbg !9350
  store %struct.input_dev* %4, %struct.input_dev** %input_dev, align 8, !dbg !9344
  call void @llvm.dbg.declare(metadata i32* %len, metadata !9353, metadata !DIExpression()), !dbg !9344
  %5 = load i8*, i8** %buf.addr, align 8, !dbg !9344
  %6 = load %struct.input_dev*, %struct.input_dev** %input_dev, align 8, !dbg !9344
  %ffbit = getelementptr inbounds %struct.input_dev, %struct.input_dev* %6, i32 0, i32 12, !dbg !9344
  %arraydecay = getelementptr inbounds [2 x i64], [2 x i64]* %ffbit, i64 0, i64 0, !dbg !9344
  %call = call i32 @input_print_bitmap(i8* %5, i32 4096, i64* %arraydecay, i32 127, i32 1) #11, !dbg !9344
  store i32 %call, i32* %len, align 4, !dbg !9344
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x286, metadata !9354, metadata !DIExpression()), !dbg !9356
  %7 = load i32, i32* %len, align 4, !dbg !9356
  store i32 %7, i32* %__UNIQUE_ID___x286, align 4, !dbg !9356
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y287, metadata !9357, metadata !DIExpression()), !dbg !9356
  store i32 4096, i32* %__UNIQUE_ID___y287, align 4, !dbg !9356
  %8 = load i32, i32* %__UNIQUE_ID___x286, align 4, !dbg !9356
  %9 = load i32, i32* %__UNIQUE_ID___y287, align 4, !dbg !9356
  %cmp = icmp slt i32 %8, %9, !dbg !9356
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !9356

cond.true:                                        ; preds = %do.end
  %10 = load i32, i32* %__UNIQUE_ID___x286, align 4, !dbg !9356
  br label %cond.end, !dbg !9356

cond.false:                                       ; preds = %do.end
  %11 = load i32, i32* %__UNIQUE_ID___y287, align 4, !dbg !9356
  br label %cond.end, !dbg !9356

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %10, %cond.true ], [ %11, %cond.false ], !dbg !9356
  store i32 %cond, i32* %tmp1, align 4, !dbg !9356
  %12 = load i32, i32* %tmp1, align 4, !dbg !9356
  %conv = sext i32 %12 to i64, !dbg !9344
  ret i64 %conv, !dbg !9344
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @input_dev_show_cap_sw(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !9358 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %input_dev = alloca %struct.input_dev*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.input_dev*, align 8
  %len = alloca i32, align 4
  %__UNIQUE_ID___x289 = alloca i32, align 4
  %__UNIQUE_ID___y290 = alloca i32, align 4
  %tmp1 = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !9359, metadata !DIExpression()), !dbg !9360
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !9361, metadata !DIExpression()), !dbg !9360
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !9362, metadata !DIExpression()), !dbg !9360
  call void @llvm.dbg.declare(metadata %struct.input_dev** %input_dev, metadata !9363, metadata !DIExpression()), !dbg !9360
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !9364, metadata !DIExpression()), !dbg !9366
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9366
  %1 = bitcast %struct.device* %0 to i8*, !dbg !9366
  store i8* %1, i8** %__mptr, align 8, !dbg !9366
  br label %do.body, !dbg !9366

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !9367

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !9366
  %add.ptr = getelementptr i8, i8* %2, i64 -528, !dbg !9366
  %3 = bitcast i8* %add.ptr to %struct.input_dev*, !dbg !9366
  store %struct.input_dev* %3, %struct.input_dev** %tmp, align 8, !dbg !9367
  %4 = load %struct.input_dev*, %struct.input_dev** %tmp, align 8, !dbg !9366
  store %struct.input_dev* %4, %struct.input_dev** %input_dev, align 8, !dbg !9360
  call void @llvm.dbg.declare(metadata i32* %len, metadata !9369, metadata !DIExpression()), !dbg !9360
  %5 = load i8*, i8** %buf.addr, align 8, !dbg !9360
  %6 = load %struct.input_dev*, %struct.input_dev** %input_dev, align 8, !dbg !9360
  %swbit = getelementptr inbounds %struct.input_dev, %struct.input_dev* %6, i32 0, i32 13, !dbg !9360
  %arraydecay = getelementptr inbounds [1 x i64], [1 x i64]* %swbit, i64 0, i64 0, !dbg !9360
  %call = call i32 @input_print_bitmap(i8* %5, i32 4096, i64* %arraydecay, i32 16, i32 1) #11, !dbg !9360
  store i32 %call, i32* %len, align 4, !dbg !9360
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x289, metadata !9370, metadata !DIExpression()), !dbg !9372
  %7 = load i32, i32* %len, align 4, !dbg !9372
  store i32 %7, i32* %__UNIQUE_ID___x289, align 4, !dbg !9372
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y290, metadata !9373, metadata !DIExpression()), !dbg !9372
  store i32 4096, i32* %__UNIQUE_ID___y290, align 4, !dbg !9372
  %8 = load i32, i32* %__UNIQUE_ID___x289, align 4, !dbg !9372
  %9 = load i32, i32* %__UNIQUE_ID___y290, align 4, !dbg !9372
  %cmp = icmp slt i32 %8, %9, !dbg !9372
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !9372

cond.true:                                        ; preds = %do.end
  %10 = load i32, i32* %__UNIQUE_ID___x289, align 4, !dbg !9372
  br label %cond.end, !dbg !9372

cond.false:                                       ; preds = %do.end
  %11 = load i32, i32* %__UNIQUE_ID___y290, align 4, !dbg !9372
  br label %cond.end, !dbg !9372

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %10, %cond.true ], [ %11, %cond.false ], !dbg !9372
  store i32 %cond, i32* %tmp1, align 4, !dbg !9372
  %12 = load i32, i32* %tmp1, align 4, !dbg !9372
  %conv = sext i32 %12 to i64, !dbg !9360
  ret i64 %conv, !dbg !9360
}

; Function Attrs: noredzone
declare dso_local i32 @add_uevent_var(%struct.kobj_uevent_env*, i8*, ...) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @input_add_uevent_bm_var(%struct.kobj_uevent_env* %env, i8* %name, i64* %bitmap, i32 %max) #0 !dbg !9374 {
entry:
  %retval = alloca i32, align 4
  %env.addr = alloca %struct.kobj_uevent_env*, align 8
  %name.addr = alloca i8*, align 8
  %bitmap.addr = alloca i64*, align 8
  %max.addr = alloca i32, align 4
  %len = alloca i32, align 4
  store %struct.kobj_uevent_env* %env, %struct.kobj_uevent_env** %env.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kobj_uevent_env** %env.addr, metadata !9377, metadata !DIExpression()), !dbg !9378
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !9379, metadata !DIExpression()), !dbg !9380
  store i64* %bitmap, i64** %bitmap.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %bitmap.addr, metadata !9381, metadata !DIExpression()), !dbg !9382
  store i32 %max, i32* %max.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %max.addr, metadata !9383, metadata !DIExpression()), !dbg !9384
  call void @llvm.dbg.declare(metadata i32* %len, metadata !9385, metadata !DIExpression()), !dbg !9386
  %0 = load %struct.kobj_uevent_env*, %struct.kobj_uevent_env** %env.addr, align 8, !dbg !9387
  %1 = load i8*, i8** %name.addr, align 8, !dbg !9389
  %call = call i32 (%struct.kobj_uevent_env*, i8*, ...) @add_uevent_var(%struct.kobj_uevent_env* %0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.57, i64 0, i64 0), i8* %1) #11, !dbg !9390
  %tobool = icmp ne i32 %call, 0, !dbg !9390
  br i1 %tobool, label %if.then, label %if.end, !dbg !9391

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !9392
  br label %return, !dbg !9392

if.end:                                           ; preds = %entry
  %2 = load %struct.kobj_uevent_env*, %struct.kobj_uevent_env** %env.addr, align 8, !dbg !9393
  %buf = getelementptr inbounds %struct.kobj_uevent_env, %struct.kobj_uevent_env* %2, i32 0, i32 3, !dbg !9394
  %3 = load %struct.kobj_uevent_env*, %struct.kobj_uevent_env** %env.addr, align 8, !dbg !9395
  %buflen = getelementptr inbounds %struct.kobj_uevent_env, %struct.kobj_uevent_env* %3, i32 0, i32 4, !dbg !9396
  %4 = load i32, i32* %buflen, align 4, !dbg !9396
  %sub = sub i32 %4, 1, !dbg !9397
  %idxprom = sext i32 %sub to i64, !dbg !9393
  %arrayidx = getelementptr [2048 x i8], [2048 x i8]* %buf, i64 0, i64 %idxprom, !dbg !9393
  %5 = load %struct.kobj_uevent_env*, %struct.kobj_uevent_env** %env.addr, align 8, !dbg !9398
  %buflen1 = getelementptr inbounds %struct.kobj_uevent_env, %struct.kobj_uevent_env* %5, i32 0, i32 4, !dbg !9399
  %6 = load i32, i32* %buflen1, align 4, !dbg !9399
  %conv = sext i32 %6 to i64, !dbg !9398
  %sub2 = sub i64 2048, %conv, !dbg !9400
  %conv3 = trunc i64 %sub2 to i32, !dbg !9401
  %7 = load i64*, i64** %bitmap.addr, align 8, !dbg !9402
  %8 = load i32, i32* %max.addr, align 4, !dbg !9403
  %call4 = call i32 @input_print_bitmap(i8* %arrayidx, i32 %conv3, i64* %7, i32 %8, i32 0) #11, !dbg !9404
  store i32 %call4, i32* %len, align 4, !dbg !9405
  %9 = load i32, i32* %len, align 4, !dbg !9406
  %conv5 = sext i32 %9 to i64, !dbg !9406
  %10 = load %struct.kobj_uevent_env*, %struct.kobj_uevent_env** %env.addr, align 8, !dbg !9408
  %buflen6 = getelementptr inbounds %struct.kobj_uevent_env, %struct.kobj_uevent_env* %10, i32 0, i32 4, !dbg !9409
  %11 = load i32, i32* %buflen6, align 4, !dbg !9409
  %conv7 = sext i32 %11 to i64, !dbg !9408
  %sub8 = sub i64 2048, %conv7, !dbg !9410
  %cmp = icmp uge i64 %conv5, %sub8, !dbg !9411
  br i1 %cmp, label %if.then10, label %if.end11, !dbg !9412

if.then10:                                        ; preds = %if.end
  store i32 -12, i32* %retval, align 4, !dbg !9413
  br label %return, !dbg !9413

if.end11:                                         ; preds = %if.end
  %12 = load i32, i32* %len, align 4, !dbg !9414
  %13 = load %struct.kobj_uevent_env*, %struct.kobj_uevent_env** %env.addr, align 8, !dbg !9415
  %buflen12 = getelementptr inbounds %struct.kobj_uevent_env, %struct.kobj_uevent_env* %13, i32 0, i32 4, !dbg !9416
  %14 = load i32, i32* %buflen12, align 4, !dbg !9417
  %add = add i32 %14, %12, !dbg !9417
  store i32 %add, i32* %buflen12, align 4, !dbg !9417
  store i32 0, i32* %retval, align 4, !dbg !9418
  br label %return, !dbg !9418

return:                                           ; preds = %if.end11, %if.then10, %if.then
  %15 = load i32, i32* %retval, align 4, !dbg !9419
  ret i32 %15, !dbg !9419
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @input_add_uevent_modalias_var(%struct.kobj_uevent_env* %env, %struct.input_dev* %dev) #0 !dbg !9420 {
entry:
  %retval = alloca i32, align 4
  %env.addr = alloca %struct.kobj_uevent_env*, align 8
  %dev.addr = alloca %struct.input_dev*, align 8
  %len = alloca i32, align 4
  store %struct.kobj_uevent_env* %env, %struct.kobj_uevent_env** %env.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kobj_uevent_env** %env.addr, metadata !9423, metadata !DIExpression()), !dbg !9424
  store %struct.input_dev* %dev, %struct.input_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.input_dev** %dev.addr, metadata !9425, metadata !DIExpression()), !dbg !9426
  call void @llvm.dbg.declare(metadata i32* %len, metadata !9427, metadata !DIExpression()), !dbg !9428
  %0 = load %struct.kobj_uevent_env*, %struct.kobj_uevent_env** %env.addr, align 8, !dbg !9429
  %call = call i32 (%struct.kobj_uevent_env*, i8*, ...) @add_uevent_var(%struct.kobj_uevent_env* %0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.58, i64 0, i64 0)) #11, !dbg !9431
  %tobool = icmp ne i32 %call, 0, !dbg !9431
  br i1 %tobool, label %if.then, label %if.end, !dbg !9432

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !9433
  br label %return, !dbg !9433

if.end:                                           ; preds = %entry
  %1 = load %struct.kobj_uevent_env*, %struct.kobj_uevent_env** %env.addr, align 8, !dbg !9434
  %buf = getelementptr inbounds %struct.kobj_uevent_env, %struct.kobj_uevent_env* %1, i32 0, i32 3, !dbg !9435
  %2 = load %struct.kobj_uevent_env*, %struct.kobj_uevent_env** %env.addr, align 8, !dbg !9436
  %buflen = getelementptr inbounds %struct.kobj_uevent_env, %struct.kobj_uevent_env* %2, i32 0, i32 4, !dbg !9437
  %3 = load i32, i32* %buflen, align 4, !dbg !9437
  %sub = sub i32 %3, 1, !dbg !9438
  %idxprom = sext i32 %sub to i64, !dbg !9434
  %arrayidx = getelementptr [2048 x i8], [2048 x i8]* %buf, i64 0, i64 %idxprom, !dbg !9434
  %4 = load %struct.kobj_uevent_env*, %struct.kobj_uevent_env** %env.addr, align 8, !dbg !9439
  %buflen1 = getelementptr inbounds %struct.kobj_uevent_env, %struct.kobj_uevent_env* %4, i32 0, i32 4, !dbg !9440
  %5 = load i32, i32* %buflen1, align 4, !dbg !9440
  %conv = sext i32 %5 to i64, !dbg !9439
  %sub2 = sub i64 2048, %conv, !dbg !9441
  %conv3 = trunc i64 %sub2 to i32, !dbg !9442
  %6 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !9443
  %call4 = call i32 @input_print_modalias(i8* %arrayidx, i32 %conv3, %struct.input_dev* %6, i32 0) #11, !dbg !9444
  store i32 %call4, i32* %len, align 4, !dbg !9445
  %7 = load i32, i32* %len, align 4, !dbg !9446
  %conv5 = sext i32 %7 to i64, !dbg !9446
  %8 = load %struct.kobj_uevent_env*, %struct.kobj_uevent_env** %env.addr, align 8, !dbg !9448
  %buflen6 = getelementptr inbounds %struct.kobj_uevent_env, %struct.kobj_uevent_env* %8, i32 0, i32 4, !dbg !9449
  %9 = load i32, i32* %buflen6, align 4, !dbg !9449
  %conv7 = sext i32 %9 to i64, !dbg !9448
  %sub8 = sub i64 2048, %conv7, !dbg !9450
  %cmp = icmp uge i64 %conv5, %sub8, !dbg !9451
  br i1 %cmp, label %if.then10, label %if.end11, !dbg !9452

if.then10:                                        ; preds = %if.end
  store i32 -12, i32* %retval, align 4, !dbg !9453
  br label %return, !dbg !9453

if.end11:                                         ; preds = %if.end
  %10 = load i32, i32* %len, align 4, !dbg !9454
  %11 = load %struct.kobj_uevent_env*, %struct.kobj_uevent_env** %env.addr, align 8, !dbg !9455
  %buflen12 = getelementptr inbounds %struct.kobj_uevent_env, %struct.kobj_uevent_env* %11, i32 0, i32 4, !dbg !9456
  %12 = load i32, i32* %buflen12, align 4, !dbg !9457
  %add = add i32 %12, %10, !dbg !9457
  store i32 %add, i32* %buflen12, align 4, !dbg !9457
  store i32 0, i32* %retval, align 4, !dbg !9458
  br label %return, !dbg !9458

return:                                           ; preds = %if.end11, %if.then10, %if.then
  %13 = load i32, i32* %retval, align 4, !dbg !9459
  ret i32 %13, !dbg !9459
}

; Function Attrs: noredzone
declare dso_local void @input_ff_destroy(%struct.input_dev*) #3

; Function Attrs: noredzone
declare dso_local void @input_mt_destroy_slots(%struct.input_dev*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @module_put(%struct.module* %module) #0 !dbg !9460 {
entry:
  %module.addr = alloca %struct.module*, align 8
  store %struct.module* %module, %struct.module** %module.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.module** %module.addr, metadata !9461, metadata !DIExpression()), !dbg !9462
  ret void, !dbg !9463
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @input_dev_suspend(%struct.device* %dev) #0 !dbg !9464 {
entry:
  %lock.addr.i2 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i2, metadata !9465, metadata !DIExpression()), !dbg !9469
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !9471, metadata !DIExpression()), !dbg !9473
  %dev.addr = alloca %struct.device*, align 8
  %input_dev = alloca %struct.input_dev*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.input_dev*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !9475, metadata !DIExpression()), !dbg !9476
  call void @llvm.dbg.declare(metadata %struct.input_dev** %input_dev, metadata !9477, metadata !DIExpression()), !dbg !9478
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !9479, metadata !DIExpression()), !dbg !9481
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9481
  %1 = bitcast %struct.device* %0 to i8*, !dbg !9481
  store i8* %1, i8** %__mptr, align 8, !dbg !9481
  br label %do.body, !dbg !9481

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !9482

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !9481
  %add.ptr = getelementptr i8, i8* %2, i64 -528, !dbg !9481
  %3 = bitcast i8* %add.ptr to %struct.input_dev*, !dbg !9481
  store %struct.input_dev* %3, %struct.input_dev** %tmp, align 8, !dbg !9482
  %4 = load %struct.input_dev*, %struct.input_dev** %tmp, align 8, !dbg !9481
  store %struct.input_dev* %4, %struct.input_dev** %input_dev, align 8, !dbg !9478
  %5 = load %struct.input_dev*, %struct.input_dev** %input_dev, align 8, !dbg !9484
  %event_lock = getelementptr inbounds %struct.input_dev, %struct.input_dev* %5, i32 0, i32 36, !dbg !9485
  store %struct.spinlock* %event_lock, %struct.spinlock** %lock.addr.i, align 8
  call void @arch_local_irq_disable() #12, !dbg !9486
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !9489, !srcloc !9491
  %6 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !9492
  %7 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %6, i32 0, i32 0, !dbg !9492
  %rlock.i = bitcast %union.anon.0* %7 to %struct.raw_spinlock*, !dbg !9492
  %8 = load %struct.input_dev*, %struct.input_dev** %input_dev, align 8, !dbg !9494
  call void @input_dev_release_keys(%struct.input_dev* %8) #11, !dbg !9495
  %9 = load %struct.input_dev*, %struct.input_dev** %input_dev, align 8, !dbg !9496
  call void @input_dev_toggle(%struct.input_dev* %9, i1 zeroext false) #11, !dbg !9497
  %10 = load %struct.input_dev*, %struct.input_dev** %input_dev, align 8, !dbg !9498
  %event_lock1 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %10, i32 0, i32 36, !dbg !9499
  store %struct.spinlock* %event_lock1, %struct.spinlock** %lock.addr.i2, align 8
  call void @arch_local_irq_enable() #12, !dbg !9500
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !9503, !srcloc !9505
  %11 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i2, align 8, !dbg !9506
  %12 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %11, i32 0, i32 0, !dbg !9506
  %rlock.i3 = bitcast %union.anon.0* %12 to %struct.raw_spinlock*, !dbg !9506
  ret i32 0, !dbg !9508
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @input_dev_resume(%struct.device* %dev) #0 !dbg !9509 {
entry:
  %lock.addr.i2 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i2, metadata !9465, metadata !DIExpression()), !dbg !9510
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !9471, metadata !DIExpression()), !dbg !9512
  %dev.addr = alloca %struct.device*, align 8
  %input_dev = alloca %struct.input_dev*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.input_dev*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !9514, metadata !DIExpression()), !dbg !9515
  call void @llvm.dbg.declare(metadata %struct.input_dev** %input_dev, metadata !9516, metadata !DIExpression()), !dbg !9517
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !9518, metadata !DIExpression()), !dbg !9520
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9520
  %1 = bitcast %struct.device* %0 to i8*, !dbg !9520
  store i8* %1, i8** %__mptr, align 8, !dbg !9520
  br label %do.body, !dbg !9520

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !9521

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !9520
  %add.ptr = getelementptr i8, i8* %2, i64 -528, !dbg !9520
  %3 = bitcast i8* %add.ptr to %struct.input_dev*, !dbg !9520
  store %struct.input_dev* %3, %struct.input_dev** %tmp, align 8, !dbg !9521
  %4 = load %struct.input_dev*, %struct.input_dev** %tmp, align 8, !dbg !9520
  store %struct.input_dev* %4, %struct.input_dev** %input_dev, align 8, !dbg !9517
  %5 = load %struct.input_dev*, %struct.input_dev** %input_dev, align 8, !dbg !9523
  %event_lock = getelementptr inbounds %struct.input_dev, %struct.input_dev* %5, i32 0, i32 36, !dbg !9524
  store %struct.spinlock* %event_lock, %struct.spinlock** %lock.addr.i, align 8
  call void @arch_local_irq_disable() #12, !dbg !9525
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !9526, !srcloc !9491
  %6 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !9527
  %7 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %6, i32 0, i32 0, !dbg !9527
  %rlock.i = bitcast %union.anon.0* %7 to %struct.raw_spinlock*, !dbg !9527
  %8 = load %struct.input_dev*, %struct.input_dev** %input_dev, align 8, !dbg !9528
  call void @input_dev_toggle(%struct.input_dev* %8, i1 zeroext true) #11, !dbg !9529
  %9 = load %struct.input_dev*, %struct.input_dev** %input_dev, align 8, !dbg !9530
  %event_lock1 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %9, i32 0, i32 36, !dbg !9531
  store %struct.spinlock* %event_lock1, %struct.spinlock** %lock.addr.i2, align 8
  call void @arch_local_irq_enable() #12, !dbg !9532
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !9533, !srcloc !9505
  %10 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i2, align 8, !dbg !9534
  %11 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %10, i32 0, i32 0, !dbg !9534
  %rlock.i3 = bitcast %union.anon.0* %11 to %struct.raw_spinlock*, !dbg !9534
  ret i32 0, !dbg !9535
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @input_dev_freeze(%struct.device* %dev) #0 !dbg !9536 {
entry:
  %lock.addr.i2 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i2, metadata !9465, metadata !DIExpression()), !dbg !9537
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !9471, metadata !DIExpression()), !dbg !9539
  %dev.addr = alloca %struct.device*, align 8
  %input_dev = alloca %struct.input_dev*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.input_dev*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !9541, metadata !DIExpression()), !dbg !9542
  call void @llvm.dbg.declare(metadata %struct.input_dev** %input_dev, metadata !9543, metadata !DIExpression()), !dbg !9544
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !9545, metadata !DIExpression()), !dbg !9547
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9547
  %1 = bitcast %struct.device* %0 to i8*, !dbg !9547
  store i8* %1, i8** %__mptr, align 8, !dbg !9547
  br label %do.body, !dbg !9547

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !9548

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !9547
  %add.ptr = getelementptr i8, i8* %2, i64 -528, !dbg !9547
  %3 = bitcast i8* %add.ptr to %struct.input_dev*, !dbg !9547
  store %struct.input_dev* %3, %struct.input_dev** %tmp, align 8, !dbg !9548
  %4 = load %struct.input_dev*, %struct.input_dev** %tmp, align 8, !dbg !9547
  store %struct.input_dev* %4, %struct.input_dev** %input_dev, align 8, !dbg !9544
  %5 = load %struct.input_dev*, %struct.input_dev** %input_dev, align 8, !dbg !9550
  %event_lock = getelementptr inbounds %struct.input_dev, %struct.input_dev* %5, i32 0, i32 36, !dbg !9551
  store %struct.spinlock* %event_lock, %struct.spinlock** %lock.addr.i, align 8
  call void @arch_local_irq_disable() #12, !dbg !9552
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !9553, !srcloc !9491
  %6 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !9554
  %7 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %6, i32 0, i32 0, !dbg !9554
  %rlock.i = bitcast %union.anon.0* %7 to %struct.raw_spinlock*, !dbg !9554
  %8 = load %struct.input_dev*, %struct.input_dev** %input_dev, align 8, !dbg !9555
  call void @input_dev_release_keys(%struct.input_dev* %8) #11, !dbg !9556
  %9 = load %struct.input_dev*, %struct.input_dev** %input_dev, align 8, !dbg !9557
  %event_lock1 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %9, i32 0, i32 36, !dbg !9558
  store %struct.spinlock* %event_lock1, %struct.spinlock** %lock.addr.i2, align 8
  call void @arch_local_irq_enable() #12, !dbg !9559
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !9560, !srcloc !9505
  %10 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i2, align 8, !dbg !9561
  %11 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %10, i32 0, i32 0, !dbg !9561
  %rlock.i3 = bitcast %union.anon.0* %11 to %struct.raw_spinlock*, !dbg !9561
  ret i32 0, !dbg !9562
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @input_dev_poweroff(%struct.device* %dev) #0 !dbg !9563 {
entry:
  %lock.addr.i2 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i2, metadata !9465, metadata !DIExpression()), !dbg !9564
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !9471, metadata !DIExpression()), !dbg !9566
  %dev.addr = alloca %struct.device*, align 8
  %input_dev = alloca %struct.input_dev*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.input_dev*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !9568, metadata !DIExpression()), !dbg !9569
  call void @llvm.dbg.declare(metadata %struct.input_dev** %input_dev, metadata !9570, metadata !DIExpression()), !dbg !9571
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !9572, metadata !DIExpression()), !dbg !9574
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9574
  %1 = bitcast %struct.device* %0 to i8*, !dbg !9574
  store i8* %1, i8** %__mptr, align 8, !dbg !9574
  br label %do.body, !dbg !9574

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !9575

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !9574
  %add.ptr = getelementptr i8, i8* %2, i64 -528, !dbg !9574
  %3 = bitcast i8* %add.ptr to %struct.input_dev*, !dbg !9574
  store %struct.input_dev* %3, %struct.input_dev** %tmp, align 8, !dbg !9575
  %4 = load %struct.input_dev*, %struct.input_dev** %tmp, align 8, !dbg !9574
  store %struct.input_dev* %4, %struct.input_dev** %input_dev, align 8, !dbg !9571
  %5 = load %struct.input_dev*, %struct.input_dev** %input_dev, align 8, !dbg !9577
  %event_lock = getelementptr inbounds %struct.input_dev, %struct.input_dev* %5, i32 0, i32 36, !dbg !9578
  store %struct.spinlock* %event_lock, %struct.spinlock** %lock.addr.i, align 8
  call void @arch_local_irq_disable() #12, !dbg !9579
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !9580, !srcloc !9491
  %6 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !9581
  %7 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %6, i32 0, i32 0, !dbg !9581
  %rlock.i = bitcast %union.anon.0* %7 to %struct.raw_spinlock*, !dbg !9581
  %8 = load %struct.input_dev*, %struct.input_dev** %input_dev, align 8, !dbg !9582
  call void @input_dev_toggle(%struct.input_dev* %8, i1 zeroext false) #11, !dbg !9583
  %9 = load %struct.input_dev*, %struct.input_dev** %input_dev, align 8, !dbg !9584
  %event_lock1 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %9, i32 0, i32 36, !dbg !9585
  store %struct.spinlock* %event_lock1, %struct.spinlock** %lock.addr.i2, align 8
  call void @arch_local_irq_enable() #12, !dbg !9586
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !9587, !srcloc !9505
  %10 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i2, align 8, !dbg !9588
  %11 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %10, i32 0, i32 0, !dbg !9588
  %rlock.i3 = bitcast %union.anon.0* %11 to %struct.raw_spinlock*, !dbg !9588
  ret i32 0, !dbg !9589
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_enable() #0 !dbg !9590 {
entry:
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !9591, metadata !DIExpression()), !dbg !9593
  %0 = load i64, i64* %__edi, align 8, !dbg !9593
  store i64 %0, i64* %__edi, align 8, !dbg !9593
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !9594, metadata !DIExpression()), !dbg !9593
  %1 = load i64, i64* %__esi, align 8, !dbg !9593
  store i64 %1, i64* %__esi, align 8, !dbg !9593
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !9595, metadata !DIExpression()), !dbg !9593
  %2 = load i64, i64* %__edx, align 8, !dbg !9593
  store i64 %2, i64* %__edx, align 8, !dbg !9593
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !9596, metadata !DIExpression()), !dbg !9593
  %3 = load i64, i64* %__ecx, align 8, !dbg !9593
  store i64 %3, i64* %__ecx, align 8, !dbg !9593
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !9597, metadata !DIExpression()), !dbg !9593
  %4 = load i64, i64* %__eax, align 8, !dbg !9593
  store i64 %4, i64* %__eax, align 8, !dbg !9593
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 3, i32 0), align 8, !dbg !9593
  %6 = call i64 @llvm.read_register.i64(metadata !4033), !dbg !9593
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 39, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 3, i32 0), i32 1, i64 %6) #7, !dbg !9593, !srcloc !9598
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !9593
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !9593
  store i64 %asmresult, i64* %__eax, align 8, !dbg !9593
  call void @llvm.write_register.i64(metadata !4033, i64 %asmresult1), !dbg !9593
  ret void, !dbg !9599
}

; Function Attrs: noredzone
declare dso_local noalias i8* @devres_alloc_node(void (%struct.device*, i8*)*, i64, i32, i32) #3

; Function Attrs: noredzone
declare dso_local void @put_device(%struct.device*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @input_is_mt_axis(i32 %axis) #0 !dbg !9600 {
entry:
  %axis.addr = alloca i32, align 4
  store i32 %axis, i32* %axis.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %axis.addr, metadata !9601, metadata !DIExpression()), !dbg !9602
  %0 = load i32, i32* %axis.addr, align 4, !dbg !9603
  %cmp = icmp eq i32 %0, 47, !dbg !9604
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !9605

lor.rhs:                                          ; preds = %entry
  %1 = load i32, i32* %axis.addr, align 4, !dbg !9606
  %call = call zeroext i1 @input_is_mt_value(i32 %1) #11, !dbg !9607
  br label %lor.end, !dbg !9605

lor.end:                                          ; preds = %lor.rhs, %entry
  %2 = phi i1 [ true, %entry ], [ %call, %lor.rhs ]
  ret i1 %2, !dbg !9608
}

; Function Attrs: noredzone
declare dso_local i32 @__bitmap_weight(i64*, i32) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @input_fetch_keycode(%struct.input_dev* %dev, i32 %index) #0 !dbg !9609 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.input_dev*, align 8
  %index.addr = alloca i32, align 4
  store %struct.input_dev* %dev, %struct.input_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.input_dev** %dev.addr, metadata !9612, metadata !DIExpression()), !dbg !9613
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !9614, metadata !DIExpression()), !dbg !9615
  %0 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !9616
  %keycodesize = getelementptr inbounds %struct.input_dev, %struct.input_dev* %0, i32 0, i32 16, !dbg !9617
  %1 = load i32, i32* %keycodesize, align 8, !dbg !9617
  switch i32 %1, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb1
  ], !dbg !9618

sw.bb:                                            ; preds = %entry
  %2 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !9619
  %keycode = getelementptr inbounds %struct.input_dev, %struct.input_dev* %2, i32 0, i32 17, !dbg !9621
  %3 = load i8*, i8** %keycode, align 8, !dbg !9621
  %4 = load i32, i32* %index.addr, align 4, !dbg !9622
  %idxprom = zext i32 %4 to i64, !dbg !9623
  %arrayidx = getelementptr i8, i8* %3, i64 %idxprom, !dbg !9623
  %5 = load i8, i8* %arrayidx, align 1, !dbg !9623
  %conv = zext i8 %5 to i32, !dbg !9623
  store i32 %conv, i32* %retval, align 4, !dbg !9624
  br label %return, !dbg !9624

sw.bb1:                                           ; preds = %entry
  %6 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !9625
  %keycode2 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %6, i32 0, i32 17, !dbg !9626
  %7 = load i8*, i8** %keycode2, align 8, !dbg !9626
  %8 = bitcast i8* %7 to i16*, !dbg !9627
  %9 = load i32, i32* %index.addr, align 4, !dbg !9628
  %idxprom3 = zext i32 %9 to i64, !dbg !9629
  %arrayidx4 = getelementptr i16, i16* %8, i64 %idxprom3, !dbg !9629
  %10 = load i16, i16* %arrayidx4, align 2, !dbg !9629
  %conv5 = zext i16 %10 to i32, !dbg !9629
  store i32 %conv5, i32* %retval, align 4, !dbg !9630
  br label %return, !dbg !9630

sw.default:                                       ; preds = %entry
  %11 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !9631
  %keycode6 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %11, i32 0, i32 17, !dbg !9632
  %12 = load i8*, i8** %keycode6, align 8, !dbg !9632
  %13 = bitcast i8* %12 to i32*, !dbg !9633
  %14 = load i32, i32* %index.addr, align 4, !dbg !9634
  %idxprom7 = zext i32 %14 to i64, !dbg !9635
  %arrayidx8 = getelementptr i32, i32* %13, i64 %idxprom7, !dbg !9635
  %15 = load i32, i32* %arrayidx8, align 4, !dbg !9635
  store i32 %15, i32* %retval, align 4, !dbg !9636
  br label %return, !dbg !9636

return:                                           ; preds = %sw.default, %sw.bb1, %sw.bb
  %16 = load i32, i32* %retval, align 4, !dbg !9637
  ret i32 %16, !dbg !9637
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_add(%struct.list_head* %new, %struct.list_head* %prev, %struct.list_head* %next) #0 !dbg !9638 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !9641, metadata !DIExpression()), !dbg !9642
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !9643, metadata !DIExpression()), !dbg !9644
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !9645, metadata !DIExpression()), !dbg !9646
  %0 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !9647
  %1 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !9649
  %2 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !9650
  %call = call zeroext i1 @__list_add_valid(%struct.list_head* %0, %struct.list_head* %1, %struct.list_head* %2) #11, !dbg !9651
  br i1 %call, label %if.end, label %if.then, !dbg !9652

if.then:                                          ; preds = %entry
  br label %do.end8, !dbg !9653

if.end:                                           ; preds = %entry
  %3 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !9654
  %4 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !9655
  %prev1 = getelementptr inbounds %struct.list_head, %struct.list_head* %4, i32 0, i32 1, !dbg !9656
  store %struct.list_head* %3, %struct.list_head** %prev1, align 8, !dbg !9657
  %5 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !9658
  %6 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !9659
  %next2 = getelementptr inbounds %struct.list_head, %struct.list_head* %6, i32 0, i32 0, !dbg !9660
  store %struct.list_head* %5, %struct.list_head** %next2, align 8, !dbg !9661
  %7 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !9662
  %8 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !9663
  %prev3 = getelementptr inbounds %struct.list_head, %struct.list_head* %8, i32 0, i32 1, !dbg !9664
  store %struct.list_head* %7, %struct.list_head** %prev3, align 8, !dbg !9665
  br label %do.body, !dbg !9666

do.body:                                          ; preds = %if.end
  br label %do.body4, !dbg !9667

do.body4:                                         ; preds = %do.body
  br label %do.end, !dbg !9669

do.end:                                           ; preds = %do.body4
  br label %do.body5, !dbg !9667

do.body5:                                         ; preds = %do.end
  %9 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !9671
  %10 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !9671
  %next6 = getelementptr inbounds %struct.list_head, %struct.list_head* %10, i32 0, i32 0, !dbg !9671
  store volatile %struct.list_head* %9, %struct.list_head** %next6, align 8, !dbg !9671
  br label %do.end7, !dbg !9671

do.end7:                                          ; preds = %do.body5
  br label %do.end8, !dbg !9667

do.end8:                                          ; preds = %if.then, %do.end7
  ret void, !dbg !9673
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__list_add_valid(%struct.list_head* %new, %struct.list_head* %prev, %struct.list_head* %next) #0 !dbg !9674 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !9677, metadata !DIExpression()), !dbg !9678
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !9679, metadata !DIExpression()), !dbg !9680
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !9681, metadata !DIExpression()), !dbg !9682
  ret i1 true, !dbg !9683
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.input_device_id* @input_match_device(%struct.input_handler* %handler, %struct.input_dev* %dev) #0 !dbg !9684 {
entry:
  %retval = alloca %struct.input_device_id*, align 8
  %handler.addr = alloca %struct.input_handler*, align 8
  %dev.addr = alloca %struct.input_dev*, align 8
  %id = alloca %struct.input_device_id*, align 8
  store %struct.input_handler* %handler, %struct.input_handler** %handler.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.input_handler** %handler.addr, metadata !9687, metadata !DIExpression()), !dbg !9688
  store %struct.input_dev* %dev, %struct.input_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.input_dev** %dev.addr, metadata !9689, metadata !DIExpression()), !dbg !9690
  call void @llvm.dbg.declare(metadata %struct.input_device_id** %id, metadata !9691, metadata !DIExpression()), !dbg !9692
  %0 = load %struct.input_handler*, %struct.input_handler** %handler.addr, align 8, !dbg !9693
  %id_table = getelementptr inbounds %struct.input_handler, %struct.input_handler* %0, i32 0, i32 11, !dbg !9695
  %1 = load %struct.input_device_id*, %struct.input_device_id** %id_table, align 8, !dbg !9695
  store %struct.input_device_id* %1, %struct.input_device_id** %id, align 8, !dbg !9696
  br label %for.cond, !dbg !9697

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load %struct.input_device_id*, %struct.input_device_id** %id, align 8, !dbg !9698
  %flags = getelementptr inbounds %struct.input_device_id, %struct.input_device_id* %2, i32 0, i32 0, !dbg !9700
  %3 = load i64, i64* %flags, align 8, !dbg !9700
  %tobool = icmp ne i64 %3, 0, !dbg !9698
  br i1 %tobool, label %lor.end, label %lor.rhs, !dbg !9701

lor.rhs:                                          ; preds = %for.cond
  %4 = load %struct.input_device_id*, %struct.input_device_id** %id, align 8, !dbg !9702
  %driver_info = getelementptr inbounds %struct.input_device_id, %struct.input_device_id* %4, i32 0, i32 15, !dbg !9703
  %5 = load i64, i64* %driver_info, align 8, !dbg !9703
  %tobool1 = icmp ne i64 %5, 0, !dbg !9701
  br label %lor.end, !dbg !9701

lor.end:                                          ; preds = %lor.rhs, %for.cond
  %6 = phi i1 [ true, %for.cond ], [ %tobool1, %lor.rhs ]
  br i1 %6, label %for.body, label %for.end, !dbg !9704

for.body:                                         ; preds = %lor.end
  %7 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !9705
  %8 = load %struct.input_device_id*, %struct.input_device_id** %id, align 8, !dbg !9708
  %call = call zeroext i1 @input_match_device_id(%struct.input_dev* %7, %struct.input_device_id* %8) #11, !dbg !9709
  br i1 %call, label %land.lhs.true, label %if.end, !dbg !9710

land.lhs.true:                                    ; preds = %for.body
  %9 = load %struct.input_handler*, %struct.input_handler** %handler.addr, align 8, !dbg !9711
  %match = getelementptr inbounds %struct.input_handler, %struct.input_handler* %9, i32 0, i32 4, !dbg !9712
  %10 = load i1 (%struct.input_handler*, %struct.input_dev*)*, i1 (%struct.input_handler*, %struct.input_dev*)** %match, align 8, !dbg !9712
  %tobool2 = icmp ne i1 (%struct.input_handler*, %struct.input_dev*)* %10, null, !dbg !9711
  br i1 %tobool2, label %lor.lhs.false, label %if.then, !dbg !9713

lor.lhs.false:                                    ; preds = %land.lhs.true
  %11 = load %struct.input_handler*, %struct.input_handler** %handler.addr, align 8, !dbg !9714
  %match3 = getelementptr inbounds %struct.input_handler, %struct.input_handler* %11, i32 0, i32 4, !dbg !9715
  %12 = load i1 (%struct.input_handler*, %struct.input_dev*)*, i1 (%struct.input_handler*, %struct.input_dev*)** %match3, align 8, !dbg !9715
  %13 = load %struct.input_handler*, %struct.input_handler** %handler.addr, align 8, !dbg !9716
  %14 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !9717
  %call4 = call zeroext i1 %12(%struct.input_handler* %13, %struct.input_dev* %14) #11, !dbg !9714
  br i1 %call4, label %if.then, label %if.end, !dbg !9718

if.then:                                          ; preds = %lor.lhs.false, %land.lhs.true
  %15 = load %struct.input_device_id*, %struct.input_device_id** %id, align 8, !dbg !9719
  store %struct.input_device_id* %15, %struct.input_device_id** %retval, align 8, !dbg !9721
  br label %return, !dbg !9721

if.end:                                           ; preds = %lor.lhs.false, %for.body
  br label %for.inc, !dbg !9722

for.inc:                                          ; preds = %if.end
  %16 = load %struct.input_device_id*, %struct.input_device_id** %id, align 8, !dbg !9723
  %incdec.ptr = getelementptr %struct.input_device_id, %struct.input_device_id* %16, i32 1, !dbg !9723
  store %struct.input_device_id* %incdec.ptr, %struct.input_device_id** %id, align 8, !dbg !9723
  br label %for.cond, !dbg !9724, !llvm.loop !9725

for.end:                                          ; preds = %lor.end
  store %struct.input_device_id* null, %struct.input_device_id** %retval, align 8, !dbg !9727
  br label %return, !dbg !9727

return:                                           ; preds = %for.end, %if.then
  %17 = load %struct.input_device_id*, %struct.input_device_id** %retval, align 8, !dbg !9728
  ret %struct.input_device_id* %17, !dbg !9728
}

; Function Attrs: noredzone
declare dso_local void @__wake_up(%struct.wait_queue_head*, i32, i32, i8*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @input_disconnect_device(%struct.input_dev* %dev) #0 !dbg !9729 {
entry:
  %lock.addr.i11 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i11, metadata !9465, metadata !DIExpression()), !dbg !9730
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !9471, metadata !DIExpression()), !dbg !9732
  %dev.addr = alloca %struct.input_dev*, align 8
  %handle = alloca %struct.input_handle*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.input_handle*, align 8
  %__mptr3 = alloca i8*, align 8
  %tmp8 = alloca %struct.input_handle*, align 8
  store %struct.input_dev* %dev, %struct.input_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.input_dev** %dev.addr, metadata !9734, metadata !DIExpression()), !dbg !9735
  call void @llvm.dbg.declare(metadata %struct.input_handle** %handle, metadata !9736, metadata !DIExpression()), !dbg !9737
  %0 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !9738
  %mutex = getelementptr inbounds %struct.input_dev, %struct.input_dev* %0, i32 0, i32 37, !dbg !9739
  call void @mutex_lock(%struct.mutex* %mutex) #11, !dbg !9740
  %1 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !9741
  %going_away = getelementptr inbounds %struct.input_dev, %struct.input_dev* %1, i32 0, i32 39, !dbg !9742
  store i8 1, i8* %going_away, align 4, !dbg !9743
  %2 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !9744
  %mutex1 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %2, i32 0, i32 37, !dbg !9745
  call void @mutex_unlock(%struct.mutex* %mutex1) #11, !dbg !9746
  %3 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !9747
  %event_lock = getelementptr inbounds %struct.input_dev, %struct.input_dev* %3, i32 0, i32 36, !dbg !9748
  store %struct.spinlock* %event_lock, %struct.spinlock** %lock.addr.i, align 8
  call void @arch_local_irq_disable() #12, !dbg !9749
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !9750, !srcloc !9491
  %4 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !9751
  %5 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %4, i32 0, i32 0, !dbg !9751
  %rlock.i = bitcast %union.anon.0* %5 to %struct.raw_spinlock*, !dbg !9751
  %6 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !9752
  call void @input_dev_release_keys(%struct.input_dev* %6) #11, !dbg !9753
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !9754, metadata !DIExpression()), !dbg !9757
  %7 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !9757
  %h_list = getelementptr inbounds %struct.input_dev, %struct.input_dev* %7, i32 0, i32 41, !dbg !9757
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %h_list, i32 0, i32 0, !dbg !9757
  %8 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !9757
  %9 = bitcast %struct.list_head* %8 to i8*, !dbg !9757
  store i8* %9, i8** %__mptr, align 8, !dbg !9757
  br label %do.body, !dbg !9757

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !9758

do.end:                                           ; preds = %do.body
  %10 = load i8*, i8** %__mptr, align 8, !dbg !9757
  %add.ptr = getelementptr i8, i8* %10, i64 -40, !dbg !9757
  %11 = bitcast i8* %add.ptr to %struct.input_handle*, !dbg !9757
  store %struct.input_handle* %11, %struct.input_handle** %tmp, align 8, !dbg !9758
  %12 = load %struct.input_handle*, %struct.input_handle** %tmp, align 8, !dbg !9757
  store %struct.input_handle* %12, %struct.input_handle** %handle, align 8, !dbg !9760
  br label %for.cond, !dbg !9760

for.cond:                                         ; preds = %do.end7, %do.end
  %13 = load %struct.input_handle*, %struct.input_handle** %handle, align 8, !dbg !9761
  %d_node = getelementptr inbounds %struct.input_handle, %struct.input_handle* %13, i32 0, i32 5, !dbg !9761
  %14 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !9761
  %h_list2 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %14, i32 0, i32 41, !dbg !9761
  %cmp = icmp eq %struct.list_head* %d_node, %h_list2, !dbg !9761
  %lnot = xor i1 %cmp, true, !dbg !9761
  br i1 %lnot, label %for.body, label %for.end, !dbg !9760

for.body:                                         ; preds = %for.cond
  %15 = load %struct.input_handle*, %struct.input_handle** %handle, align 8, !dbg !9763
  %open = getelementptr inbounds %struct.input_handle, %struct.input_handle* %15, i32 0, i32 1, !dbg !9764
  store i32 0, i32* %open, align 8, !dbg !9765
  br label %for.inc, !dbg !9763

for.inc:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata i8** %__mptr3, metadata !9766, metadata !DIExpression()), !dbg !9768
  %16 = load %struct.input_handle*, %struct.input_handle** %handle, align 8, !dbg !9768
  %d_node4 = getelementptr inbounds %struct.input_handle, %struct.input_handle* %16, i32 0, i32 5, !dbg !9768
  %next5 = getelementptr inbounds %struct.list_head, %struct.list_head* %d_node4, i32 0, i32 0, !dbg !9768
  %17 = load %struct.list_head*, %struct.list_head** %next5, align 8, !dbg !9768
  %18 = bitcast %struct.list_head* %17 to i8*, !dbg !9768
  store i8* %18, i8** %__mptr3, align 8, !dbg !9768
  br label %do.body6, !dbg !9768

do.body6:                                         ; preds = %for.inc
  br label %do.end7, !dbg !9769

do.end7:                                          ; preds = %do.body6
  %19 = load i8*, i8** %__mptr3, align 8, !dbg !9768
  %add.ptr9 = getelementptr i8, i8* %19, i64 -40, !dbg !9768
  %20 = bitcast i8* %add.ptr9 to %struct.input_handle*, !dbg !9768
  store %struct.input_handle* %20, %struct.input_handle** %tmp8, align 8, !dbg !9769
  %21 = load %struct.input_handle*, %struct.input_handle** %tmp8, align 8, !dbg !9768
  store %struct.input_handle* %21, %struct.input_handle** %handle, align 8, !dbg !9761
  br label %for.cond, !dbg !9761, !llvm.loop !9771

for.end:                                          ; preds = %for.cond
  %22 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !9773
  %event_lock10 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %22, i32 0, i32 36, !dbg !9774
  store %struct.spinlock* %event_lock10, %struct.spinlock** %lock.addr.i11, align 8
  call void @arch_local_irq_enable() #12, !dbg !9775
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !9776, !srcloc !9505
  %23 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i11, align 8, !dbg !9777
  %24 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %23, i32 0, i32 0, !dbg !9777
  %rlock.i12 = bitcast %union.anon.0* %24 to %struct.raw_spinlock*, !dbg !9777
  ret void, !dbg !9778
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_del_entry(%struct.list_head* %entry1) #0 !dbg !9779 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !9780, metadata !DIExpression()), !dbg !9781
  %0 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !9782
  %call = call zeroext i1 @__list_del_entry_valid(%struct.list_head* %0) #11, !dbg !9784
  br i1 %call, label %if.end, label %if.then, !dbg !9785

if.then:                                          ; preds = %entry
  br label %return, !dbg !9786

if.end:                                           ; preds = %entry
  %1 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !9787
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !9788
  %2 = load %struct.list_head*, %struct.list_head** %prev, align 8, !dbg !9788
  %3 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !9789
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 0, !dbg !9790
  %4 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !9790
  call void @__list_del(%struct.list_head* %2, %struct.list_head* %4) #11, !dbg !9791
  br label %return, !dbg !9792

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !9792
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__list_del_entry_valid(%struct.list_head* %entry1) #0 !dbg !9793 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !9796, metadata !DIExpression()), !dbg !9797
  ret i1 true, !dbg !9798
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_del(%struct.list_head* %prev, %struct.list_head* %next) #0 !dbg !9799 {
entry:
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !9800, metadata !DIExpression()), !dbg !9801
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !9802, metadata !DIExpression()), !dbg !9803
  %0 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !9804
  %1 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !9805
  %prev1 = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !9806
  store %struct.list_head* %0, %struct.list_head** %prev1, align 8, !dbg !9807
  br label %do.body, !dbg !9808

do.body:                                          ; preds = %entry
  br label %do.body2, !dbg !9809

do.body2:                                         ; preds = %do.body
  br label %do.end, !dbg !9811

do.end:                                           ; preds = %do.body2
  br label %do.body3, !dbg !9809

do.body3:                                         ; preds = %do.end
  %2 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !9813
  %3 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !9813
  %next4 = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 0, !dbg !9813
  store volatile %struct.list_head* %2, %struct.list_head** %next4, align 8, !dbg !9813
  br label %do.end5, !dbg !9813

do.end5:                                          ; preds = %do.body3
  br label %do.end6, !dbg !9809

do.end6:                                          ; preds = %do.end5
  ret void, !dbg !9815
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_add_rcu(%struct.list_head* %new, %struct.list_head* %prev, %struct.list_head* %next) #0 !dbg !9816 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  %_r_a_p__v = alloca i64, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !9817, metadata !DIExpression()), !dbg !9818
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !9819, metadata !DIExpression()), !dbg !9820
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !9821, metadata !DIExpression()), !dbg !9822
  %0 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !9823
  %1 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !9825
  %2 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !9826
  %call = call zeroext i1 @__list_add_valid(%struct.list_head* %0, %struct.list_head* %1, %struct.list_head* %2) #11, !dbg !9827
  br i1 %call, label %if.end, label %if.then, !dbg !9828

if.then:                                          ; preds = %entry
  br label %return, !dbg !9829

if.end:                                           ; preds = %entry
  %3 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !9830
  %4 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !9831
  %next1 = getelementptr inbounds %struct.list_head, %struct.list_head* %4, i32 0, i32 0, !dbg !9832
  store %struct.list_head* %3, %struct.list_head** %next1, align 8, !dbg !9833
  %5 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !9834
  %6 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !9835
  %prev2 = getelementptr inbounds %struct.list_head, %struct.list_head* %6, i32 0, i32 1, !dbg !9836
  store %struct.list_head* %5, %struct.list_head** %prev2, align 8, !dbg !9837
  br label %do.body, !dbg !9838

do.body:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i64* %_r_a_p__v, metadata !9839, metadata !DIExpression()), !dbg !9841
  %7 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !9841
  %8 = ptrtoint %struct.list_head* %7 to i64, !dbg !9841
  store i64 %8, i64* %_r_a_p__v, align 8, !dbg !9841
  br i1 false, label %land.lhs.true, label %if.else, !dbg !9842

land.lhs.true:                                    ; preds = %do.body
  %9 = load i64, i64* %_r_a_p__v, align 8, !dbg !9842
  %cmp = icmp eq i64 %9, 0, !dbg !9842
  br i1 %cmp, label %if.then3, label %if.else, !dbg !9841

if.then3:                                         ; preds = %land.lhs.true
  br label %do.body4, !dbg !9842

do.body4:                                         ; preds = %if.then3
  br label %do.body5, !dbg !9844

do.body5:                                         ; preds = %do.body4
  br label %do.end, !dbg !9846

do.end:                                           ; preds = %do.body5
  br label %do.body6, !dbg !9844

do.body6:                                         ; preds = %do.end
  %10 = load i64, i64* %_r_a_p__v, align 8, !dbg !9848
  %11 = inttoptr i64 %10 to %struct.list_head*, !dbg !9848
  %12 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !9848
  %next7 = getelementptr inbounds %struct.list_head, %struct.list_head* %12, i32 0, i32 0, !dbg !9848
  store volatile %struct.list_head* %11, %struct.list_head** %next7, align 8, !dbg !9848
  br label %do.end8, !dbg !9848

do.end8:                                          ; preds = %do.body6
  br label %do.end9, !dbg !9844

do.end9:                                          ; preds = %do.end8
  br label %if.end21, !dbg !9844

if.else:                                          ; preds = %land.lhs.true, %do.body
  br label %do.body10, !dbg !9842

do.body10:                                        ; preds = %if.else
  br label %do.body11, !dbg !9850

do.body11:                                        ; preds = %do.body10
  br label %do.end12, !dbg !9852

do.end12:                                         ; preds = %do.body11
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !9850, !srcloc !9854
  br label %do.body13, !dbg !9850

do.body13:                                        ; preds = %do.end12
  br label %do.body14, !dbg !9855

do.body14:                                        ; preds = %do.body13
  br label %do.end15, !dbg !9857

do.end15:                                         ; preds = %do.body14
  br label %do.body16, !dbg !9855

do.body16:                                        ; preds = %do.end15
  %13 = load i64, i64* %_r_a_p__v, align 8, !dbg !9859
  %14 = inttoptr i64 %13 to %struct.list_head*, !dbg !9859
  %15 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !9859
  %next17 = getelementptr inbounds %struct.list_head, %struct.list_head* %15, i32 0, i32 0, !dbg !9859
  store volatile %struct.list_head* %14, %struct.list_head** %next17, align 8, !dbg !9859
  br label %do.end18, !dbg !9859

do.end18:                                         ; preds = %do.body16
  br label %do.end19, !dbg !9855

do.end19:                                         ; preds = %do.end18
  br label %do.end20, !dbg !9850

do.end20:                                         ; preds = %do.end19
  br label %if.end21

if.end21:                                         ; preds = %do.end20, %do.end9
  br label %do.end22, !dbg !9841

do.end22:                                         ; preds = %if.end21
  %16 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !9861
  %17 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !9862
  %prev23 = getelementptr inbounds %struct.list_head, %struct.list_head* %17, i32 0, i32 1, !dbg !9863
  store %struct.list_head* %16, %struct.list_head** %prev23, align 8, !dbg !9864
  br label %return, !dbg !9865

return:                                           ; preds = %do.end22, %if.then
  ret void, !dbg !9865
}

; Function Attrs: noredzone
declare dso_local void @remove_proc_entry(i8*, %struct.proc_dir_entry*) #3

; Function Attrs: noredzone
declare dso_local i32 @__class_register(%struct.class*, %struct.lock_class_key*) #3

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal i32 @input_proc_init() #5 section ".init.text" !dbg !9866 {
entry:
  %retval = alloca i32, align 4
  %entry1 = alloca %struct.proc_dir_entry*, align 8
  call void @llvm.dbg.declare(metadata %struct.proc_dir_entry** %entry1, metadata !9867, metadata !DIExpression()), !dbg !9868
  %call = call %struct.proc_dir_entry* @proc_mkdir(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.62, i64 0, i64 0), %struct.proc_dir_entry* null) #11, !dbg !9869
  store %struct.proc_dir_entry* %call, %struct.proc_dir_entry** @proc_bus_input_dir, align 8, !dbg !9870
  %0 = load %struct.proc_dir_entry*, %struct.proc_dir_entry** @proc_bus_input_dir, align 8, !dbg !9871
  %tobool = icmp ne %struct.proc_dir_entry* %0, null, !dbg !9871
  br i1 %tobool, label %if.end, label %if.then, !dbg !9873

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !9874
  br label %return, !dbg !9874

if.end:                                           ; preds = %entry
  %1 = load %struct.proc_dir_entry*, %struct.proc_dir_entry** @proc_bus_input_dir, align 8, !dbg !9875
  %call2 = call %struct.proc_dir_entry* @proc_create(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.60, i64 0, i64 0), i16 zeroext 0, %struct.proc_dir_entry* %1, %struct.proc_ops* @input_devices_proc_ops) #11, !dbg !9876
  store %struct.proc_dir_entry* %call2, %struct.proc_dir_entry** %entry1, align 8, !dbg !9877
  %2 = load %struct.proc_dir_entry*, %struct.proc_dir_entry** %entry1, align 8, !dbg !9878
  %tobool3 = icmp ne %struct.proc_dir_entry* %2, null, !dbg !9878
  br i1 %tobool3, label %if.end5, label %if.then4, !dbg !9880

if.then4:                                         ; preds = %if.end
  br label %fail1, !dbg !9881

if.end5:                                          ; preds = %if.end
  %3 = load %struct.proc_dir_entry*, %struct.proc_dir_entry** @proc_bus_input_dir, align 8, !dbg !9882
  %call6 = call %struct.proc_dir_entry* @proc_create(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.61, i64 0, i64 0), i16 zeroext 0, %struct.proc_dir_entry* %3, %struct.proc_ops* @input_handlers_proc_ops) #11, !dbg !9883
  store %struct.proc_dir_entry* %call6, %struct.proc_dir_entry** %entry1, align 8, !dbg !9884
  %4 = load %struct.proc_dir_entry*, %struct.proc_dir_entry** %entry1, align 8, !dbg !9885
  %tobool7 = icmp ne %struct.proc_dir_entry* %4, null, !dbg !9885
  br i1 %tobool7, label %if.end9, label %if.then8, !dbg !9887

if.then8:                                         ; preds = %if.end5
  br label %fail2, !dbg !9888

if.end9:                                          ; preds = %if.end5
  store i32 0, i32* %retval, align 4, !dbg !9889
  br label %return, !dbg !9889

fail2:                                            ; preds = %if.then8
  call void @llvm.dbg.label(metadata !9890), !dbg !9891
  %5 = load %struct.proc_dir_entry*, %struct.proc_dir_entry** @proc_bus_input_dir, align 8, !dbg !9892
  call void @remove_proc_entry(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.60, i64 0, i64 0), %struct.proc_dir_entry* %5) #11, !dbg !9893
  br label %fail1, !dbg !9893

fail1:                                            ; preds = %fail2, %if.then4
  call void @llvm.dbg.label(metadata !9894), !dbg !9895
  call void @remove_proc_entry(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.62, i64 0, i64 0), %struct.proc_dir_entry* null) #11, !dbg !9896
  store i32 -12, i32* %retval, align 4, !dbg !9897
  br label %return, !dbg !9897

return:                                           ; preds = %fail1, %if.end9, %if.then
  %6 = load i32, i32* %retval, align 4, !dbg !9898
  ret i32 %6, !dbg !9898
}

; Function Attrs: noredzone
declare dso_local i32 @register_chrdev_region(i32, i32, i8*) #3

; Function Attrs: noredzone
declare dso_local %struct.proc_dir_entry* @proc_mkdir(i8*, %struct.proc_dir_entry*) #3

; Function Attrs: noredzone
declare dso_local %struct.proc_dir_entry* @proc_create(i8*, i16 zeroext, %struct.proc_dir_entry*, %struct.proc_ops*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @input_proc_devices_open(%struct.inode* %inode, %struct.file* %file) #0 !dbg !9899 {
entry:
  %inode.addr = alloca %struct.inode*, align 8
  %file.addr = alloca %struct.file*, align 8
  store %struct.inode* %inode, %struct.inode** %inode.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.inode** %inode.addr, metadata !9900, metadata !DIExpression()), !dbg !9901
  store %struct.file* %file, %struct.file** %file.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.file** %file.addr, metadata !9902, metadata !DIExpression()), !dbg !9903
  %0 = load %struct.file*, %struct.file** %file.addr, align 8, !dbg !9904
  %call = call i32 @seq_open(%struct.file* %0, %struct.seq_operations* @input_devices_seq_ops) #11, !dbg !9905
  ret i32 %call, !dbg !9906
}

; Function Attrs: noredzone
declare dso_local i64 @seq_read(%struct.file*, i8*, i64, i64*) #3

; Function Attrs: noredzone
declare dso_local i64 @seq_lseek(%struct.file*, i64, i32) #3

; Function Attrs: noredzone
declare dso_local i32 @seq_release(%struct.inode*, %struct.file*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @input_proc_devices_poll(%struct.file* %file, %struct.poll_table_struct* %wait) #0 !dbg !9907 {
entry:
  %retval = alloca i32, align 4
  %file.addr = alloca %struct.file*, align 8
  %wait.addr = alloca %struct.poll_table_struct*, align 8
  store %struct.file* %file, %struct.file** %file.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.file** %file.addr, metadata !9912, metadata !DIExpression()), !dbg !9913
  store %struct.poll_table_struct* %wait, %struct.poll_table_struct** %wait.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.poll_table_struct** %wait.addr, metadata !9914, metadata !DIExpression()), !dbg !9915
  %0 = load %struct.file*, %struct.file** %file.addr, align 8, !dbg !9916
  %1 = load %struct.poll_table_struct*, %struct.poll_table_struct** %wait.addr, align 8, !dbg !9917
  call void @poll_wait(%struct.file* %0, %struct.wait_queue_head* @input_devices_poll_wait, %struct.poll_table_struct* %1) #11, !dbg !9918
  %2 = load %struct.file*, %struct.file** %file.addr, align 8, !dbg !9919
  %f_version = getelementptr inbounds %struct.file, %struct.file* %2, i32 0, i32 14, !dbg !9921
  %3 = load i64, i64* %f_version, align 8, !dbg !9921
  %4 = load i32, i32* @input_devices_state, align 4, !dbg !9922
  %conv = sext i32 %4 to i64, !dbg !9922
  %cmp = icmp ne i64 %3, %conv, !dbg !9923
  br i1 %cmp, label %if.then, label %if.end, !dbg !9924

if.then:                                          ; preds = %entry
  %5 = load i32, i32* @input_devices_state, align 4, !dbg !9925
  %conv2 = sext i32 %5 to i64, !dbg !9925
  %6 = load %struct.file*, %struct.file** %file.addr, align 8, !dbg !9927
  %f_version3 = getelementptr inbounds %struct.file, %struct.file* %6, i32 0, i32 14, !dbg !9928
  store i64 %conv2, i64* %f_version3, align 8, !dbg !9929
  store i32 65, i32* %retval, align 4, !dbg !9930
  br label %return, !dbg !9930

if.end:                                           ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !9931
  br label %return, !dbg !9931

return:                                           ; preds = %if.end, %if.then
  %7 = load i32, i32* %retval, align 4, !dbg !9932
  ret i32 %7, !dbg !9932
}

; Function Attrs: noredzone
declare dso_local i32 @seq_open(%struct.file*, %struct.seq_operations*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @input_devices_seq_start(%struct.seq_file* %seq, i64* %pos) #0 !dbg !9933 {
entry:
  %retval = alloca i8*, align 8
  %seq.addr = alloca %struct.seq_file*, align 8
  %pos.addr = alloca i64*, align 8
  %state = alloca %union.input_seq_state*, align 8
  %error = alloca i32, align 4
  store %struct.seq_file* %seq, %struct.seq_file** %seq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.seq_file** %seq.addr, metadata !9934, metadata !DIExpression()), !dbg !9935
  store i64* %pos, i64** %pos.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %pos.addr, metadata !9936, metadata !DIExpression()), !dbg !9937
  call void @llvm.dbg.declare(metadata %union.input_seq_state** %state, metadata !9938, metadata !DIExpression()), !dbg !9939
  %0 = load %struct.seq_file*, %struct.seq_file** %seq.addr, align 8, !dbg !9940
  %private = getelementptr inbounds %struct.seq_file, %struct.seq_file* %0, i32 0, i32 11, !dbg !9941
  %1 = bitcast i8** %private to %union.input_seq_state*, !dbg !9942
  store %union.input_seq_state* %1, %union.input_seq_state** %state, align 8, !dbg !9939
  call void @llvm.dbg.declare(metadata i32* %error, metadata !9943, metadata !DIExpression()), !dbg !9944
  br label %do.body, !dbg !9945

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !9946

do.end:                                           ; preds = %do.body
  %call = call i32 @mutex_lock_interruptible(%struct.mutex* @input_mutex) #11, !dbg !9948
  store i32 %call, i32* %error, align 4, !dbg !9949
  %2 = load i32, i32* %error, align 4, !dbg !9950
  %tobool = icmp ne i32 %2, 0, !dbg !9950
  br i1 %tobool, label %if.then, label %if.end, !dbg !9952

if.then:                                          ; preds = %do.end
  %3 = load %union.input_seq_state*, %union.input_seq_state** %state, align 8, !dbg !9953
  %4 = bitcast %union.input_seq_state* %3 to %struct.anon.68*, !dbg !9955
  %mutex_acquired = getelementptr inbounds %struct.anon.68, %struct.anon.68* %4, i32 0, i32 1, !dbg !9955
  store i8 0, i8* %mutex_acquired, align 2, !dbg !9956
  %5 = load i32, i32* %error, align 4, !dbg !9957
  %conv = sext i32 %5 to i64, !dbg !9957
  %call1 = call i8* @ERR_PTR(i64 %conv) #11, !dbg !9958
  store i8* %call1, i8** %retval, align 8, !dbg !9959
  br label %return, !dbg !9959

if.end:                                           ; preds = %do.end
  %6 = load %union.input_seq_state*, %union.input_seq_state** %state, align 8, !dbg !9960
  %7 = bitcast %union.input_seq_state* %6 to %struct.anon.68*, !dbg !9961
  %mutex_acquired2 = getelementptr inbounds %struct.anon.68, %struct.anon.68* %7, i32 0, i32 1, !dbg !9961
  store i8 1, i8* %mutex_acquired2, align 2, !dbg !9962
  %8 = load i64*, i64** %pos.addr, align 8, !dbg !9963
  %9 = load i64, i64* %8, align 8, !dbg !9964
  %call3 = call %struct.list_head* @seq_list_start(%struct.list_head* @input_dev_list, i64 %9) #11, !dbg !9965
  %10 = bitcast %struct.list_head* %call3 to i8*, !dbg !9965
  store i8* %10, i8** %retval, align 8, !dbg !9966
  br label %return, !dbg !9966

return:                                           ; preds = %if.end, %if.then
  %11 = load i8*, i8** %retval, align 8, !dbg !9967
  ret i8* %11, !dbg !9967
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @input_seq_stop(%struct.seq_file* %seq, i8* %v) #0 !dbg !9968 {
entry:
  %seq.addr = alloca %struct.seq_file*, align 8
  %v.addr = alloca i8*, align 8
  %state = alloca %union.input_seq_state*, align 8
  store %struct.seq_file* %seq, %struct.seq_file** %seq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.seq_file** %seq.addr, metadata !9969, metadata !DIExpression()), !dbg !9970
  store i8* %v, i8** %v.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr, metadata !9971, metadata !DIExpression()), !dbg !9972
  call void @llvm.dbg.declare(metadata %union.input_seq_state** %state, metadata !9973, metadata !DIExpression()), !dbg !9974
  %0 = load %struct.seq_file*, %struct.seq_file** %seq.addr, align 8, !dbg !9975
  %private = getelementptr inbounds %struct.seq_file, %struct.seq_file* %0, i32 0, i32 11, !dbg !9976
  %1 = bitcast i8** %private to %union.input_seq_state*, !dbg !9977
  store %union.input_seq_state* %1, %union.input_seq_state** %state, align 8, !dbg !9974
  %2 = load %union.input_seq_state*, %union.input_seq_state** %state, align 8, !dbg !9978
  %3 = bitcast %union.input_seq_state* %2 to %struct.anon.68*, !dbg !9980
  %mutex_acquired = getelementptr inbounds %struct.anon.68, %struct.anon.68* %3, i32 0, i32 1, !dbg !9980
  %4 = load i8, i8* %mutex_acquired, align 2, !dbg !9980
  %tobool = trunc i8 %4 to i1, !dbg !9980
  br i1 %tobool, label %if.then, label %if.end, !dbg !9981

if.then:                                          ; preds = %entry
  call void @mutex_unlock(%struct.mutex* @input_mutex) #11, !dbg !9982
  br label %if.end, !dbg !9982

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !9983
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @input_devices_seq_next(%struct.seq_file* %seq, i8* %v, i64* %pos) #0 !dbg !9984 {
entry:
  %seq.addr = alloca %struct.seq_file*, align 8
  %v.addr = alloca i8*, align 8
  %pos.addr = alloca i64*, align 8
  store %struct.seq_file* %seq, %struct.seq_file** %seq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.seq_file** %seq.addr, metadata !9985, metadata !DIExpression()), !dbg !9986
  store i8* %v, i8** %v.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr, metadata !9987, metadata !DIExpression()), !dbg !9988
  store i64* %pos, i64** %pos.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %pos.addr, metadata !9989, metadata !DIExpression()), !dbg !9990
  %0 = load i8*, i8** %v.addr, align 8, !dbg !9991
  %1 = load i64*, i64** %pos.addr, align 8, !dbg !9992
  %call = call %struct.list_head* @seq_list_next(i8* %0, %struct.list_head* @input_dev_list, i64* %1) #11, !dbg !9993
  %2 = bitcast %struct.list_head* %call to i8*, !dbg !9993
  ret i8* %2, !dbg !9994
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @input_devices_seq_show(%struct.seq_file* %seq, i8* %v) #0 !dbg !9995 {
entry:
  %seq.addr = alloca %struct.seq_file*, align 8
  %v.addr = alloca i8*, align 8
  %dev = alloca %struct.input_dev*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.input_dev*, align 8
  %path = alloca i8*, align 8
  %handle = alloca %struct.input_handle*, align 8
  %__mptr26 = alloca i8*, align 8
  %tmp29 = alloca %struct.input_handle*, align 8
  %__mptr34 = alloca i8*, align 8
  %tmp39 = alloca %struct.input_handle*, align 8
  store %struct.seq_file* %seq, %struct.seq_file** %seq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.seq_file** %seq.addr, metadata !9996, metadata !DIExpression()), !dbg !9997
  store i8* %v, i8** %v.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr, metadata !9998, metadata !DIExpression()), !dbg !9999
  call void @llvm.dbg.declare(metadata %struct.input_dev** %dev, metadata !10000, metadata !DIExpression()), !dbg !10001
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !10002, metadata !DIExpression()), !dbg !10004
  %0 = load i8*, i8** %v.addr, align 8, !dbg !10004
  store i8* %0, i8** %__mptr, align 8, !dbg !10004
  br label %do.body, !dbg !10004

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !10005

do.end:                                           ; preds = %do.body
  %1 = load i8*, i8** %__mptr, align 8, !dbg !10004
  %add.ptr = getelementptr i8, i8* %1, i64 -1240, !dbg !10004
  %2 = bitcast i8* %add.ptr to %struct.input_dev*, !dbg !10004
  store %struct.input_dev* %2, %struct.input_dev** %tmp, align 8, !dbg !10005
  %3 = load %struct.input_dev*, %struct.input_dev** %tmp, align 8, !dbg !10004
  store %struct.input_dev* %3, %struct.input_dev** %dev, align 8, !dbg !10001
  call void @llvm.dbg.declare(metadata i8** %path, metadata !10007, metadata !DIExpression()), !dbg !10008
  %4 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !10009
  %dev1 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %4, i32 0, i32 40, !dbg !10010
  %kobj = getelementptr inbounds %struct.device, %struct.device* %dev1, i32 0, i32 0, !dbg !10011
  %call = call i8* @kobject_get_path(%struct.kobject* %kobj, i32 3264) #11, !dbg !10012
  store i8* %call, i8** %path, align 8, !dbg !10008
  call void @llvm.dbg.declare(metadata %struct.input_handle** %handle, metadata !10013, metadata !DIExpression()), !dbg !10014
  %5 = load %struct.seq_file*, %struct.seq_file** %seq.addr, align 8, !dbg !10015
  %6 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !10016
  %id = getelementptr inbounds %struct.input_dev, %struct.input_dev* %6, i32 0, i32 3, !dbg !10017
  %bustype = getelementptr inbounds %struct.input_id, %struct.input_id* %id, i32 0, i32 0, !dbg !10018
  %7 = load i16, i16* %bustype, align 8, !dbg !10018
  %conv = zext i16 %7 to i32, !dbg !10016
  %8 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !10019
  %id2 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %8, i32 0, i32 3, !dbg !10020
  %vendor = getelementptr inbounds %struct.input_id, %struct.input_id* %id2, i32 0, i32 1, !dbg !10021
  %9 = load i16, i16* %vendor, align 2, !dbg !10021
  %conv3 = zext i16 %9 to i32, !dbg !10019
  %10 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !10022
  %id4 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %10, i32 0, i32 3, !dbg !10023
  %product = getelementptr inbounds %struct.input_id, %struct.input_id* %id4, i32 0, i32 2, !dbg !10024
  %11 = load i16, i16* %product, align 4, !dbg !10024
  %conv5 = zext i16 %11 to i32, !dbg !10022
  %12 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !10025
  %id6 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %12, i32 0, i32 3, !dbg !10026
  %version = getelementptr inbounds %struct.input_id, %struct.input_id* %id6, i32 0, i32 3, !dbg !10027
  %13 = load i16, i16* %version, align 2, !dbg !10027
  %conv7 = zext i16 %13 to i32, !dbg !10025
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %5, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.65, i64 0, i64 0), i32 %conv, i32 %conv3, i32 %conv5, i32 %conv7) #11, !dbg !10028
  %14 = load %struct.seq_file*, %struct.seq_file** %seq.addr, align 8, !dbg !10029
  %15 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !10030
  %name = getelementptr inbounds %struct.input_dev, %struct.input_dev* %15, i32 0, i32 0, !dbg !10031
  %16 = load i8*, i8** %name, align 8, !dbg !10031
  %tobool = icmp ne i8* %16, null, !dbg !10030
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !10030

cond.true:                                        ; preds = %do.end
  %17 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !10032
  %name8 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %17, i32 0, i32 0, !dbg !10033
  %18 = load i8*, i8** %name8, align 8, !dbg !10033
  br label %cond.end, !dbg !10030

cond.false:                                       ; preds = %do.end
  br label %cond.end, !dbg !10030

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %18, %cond.true ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.15, i64 0, i64 0), %cond.false ], !dbg !10030
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %14, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.66, i64 0, i64 0), i8* %cond) #11, !dbg !10034
  %19 = load %struct.seq_file*, %struct.seq_file** %seq.addr, align 8, !dbg !10035
  %20 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !10036
  %phys = getelementptr inbounds %struct.input_dev, %struct.input_dev* %20, i32 0, i32 1, !dbg !10037
  %21 = load i8*, i8** %phys, align 8, !dbg !10037
  %tobool9 = icmp ne i8* %21, null, !dbg !10036
  br i1 %tobool9, label %cond.true10, label %cond.false12, !dbg !10036

cond.true10:                                      ; preds = %cond.end
  %22 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !10038
  %phys11 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %22, i32 0, i32 1, !dbg !10039
  %23 = load i8*, i8** %phys11, align 8, !dbg !10039
  br label %cond.end13, !dbg !10036

cond.false12:                                     ; preds = %cond.end
  br label %cond.end13, !dbg !10036

cond.end13:                                       ; preds = %cond.false12, %cond.true10
  %cond14 = phi i8* [ %23, %cond.true10 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.15, i64 0, i64 0), %cond.false12 ], !dbg !10036
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %19, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.67, i64 0, i64 0), i8* %cond14) #11, !dbg !10040
  %24 = load %struct.seq_file*, %struct.seq_file** %seq.addr, align 8, !dbg !10041
  %25 = load i8*, i8** %path, align 8, !dbg !10042
  %tobool15 = icmp ne i8* %25, null, !dbg !10042
  br i1 %tobool15, label %cond.true16, label %cond.false17, !dbg !10042

cond.true16:                                      ; preds = %cond.end13
  %26 = load i8*, i8** %path, align 8, !dbg !10043
  br label %cond.end18, !dbg !10042

cond.false17:                                     ; preds = %cond.end13
  br label %cond.end18, !dbg !10042

cond.end18:                                       ; preds = %cond.false17, %cond.true16
  %cond19 = phi i8* [ %26, %cond.true16 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.15, i64 0, i64 0), %cond.false17 ], !dbg !10042
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %24, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.68, i64 0, i64 0), i8* %cond19) #11, !dbg !10044
  %27 = load %struct.seq_file*, %struct.seq_file** %seq.addr, align 8, !dbg !10045
  %28 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !10046
  %uniq = getelementptr inbounds %struct.input_dev, %struct.input_dev* %28, i32 0, i32 2, !dbg !10047
  %29 = load i8*, i8** %uniq, align 8, !dbg !10047
  %tobool20 = icmp ne i8* %29, null, !dbg !10046
  br i1 %tobool20, label %cond.true21, label %cond.false23, !dbg !10046

cond.true21:                                      ; preds = %cond.end18
  %30 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !10048
  %uniq22 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %30, i32 0, i32 2, !dbg !10049
  %31 = load i8*, i8** %uniq22, align 8, !dbg !10049
  br label %cond.end24, !dbg !10046

cond.false23:                                     ; preds = %cond.end18
  br label %cond.end24, !dbg !10046

cond.end24:                                       ; preds = %cond.false23, %cond.true21
  %cond25 = phi i8* [ %31, %cond.true21 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.15, i64 0, i64 0), %cond.false23 ], !dbg !10046
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %27, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.69, i64 0, i64 0), i8* %cond25) #11, !dbg !10050
  %32 = load %struct.seq_file*, %struct.seq_file** %seq.addr, align 8, !dbg !10051
  call void @seq_puts(%struct.seq_file* %32, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.70, i64 0, i64 0)) #11, !dbg !10052
  call void @llvm.dbg.declare(metadata i8** %__mptr26, metadata !10053, metadata !DIExpression()), !dbg !10056
  %33 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !10056
  %h_list = getelementptr inbounds %struct.input_dev, %struct.input_dev* %33, i32 0, i32 41, !dbg !10056
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %h_list, i32 0, i32 0, !dbg !10056
  %34 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !10056
  %35 = bitcast %struct.list_head* %34 to i8*, !dbg !10056
  store i8* %35, i8** %__mptr26, align 8, !dbg !10056
  br label %do.body27, !dbg !10056

do.body27:                                        ; preds = %cond.end24
  br label %do.end28, !dbg !10057

do.end28:                                         ; preds = %do.body27
  %36 = load i8*, i8** %__mptr26, align 8, !dbg !10056
  %add.ptr30 = getelementptr i8, i8* %36, i64 -40, !dbg !10056
  %37 = bitcast i8* %add.ptr30 to %struct.input_handle*, !dbg !10056
  store %struct.input_handle* %37, %struct.input_handle** %tmp29, align 8, !dbg !10057
  %38 = load %struct.input_handle*, %struct.input_handle** %tmp29, align 8, !dbg !10056
  store %struct.input_handle* %38, %struct.input_handle** %handle, align 8, !dbg !10059
  br label %for.cond, !dbg !10059

for.cond:                                         ; preds = %do.end38, %do.end28
  %39 = load %struct.input_handle*, %struct.input_handle** %handle, align 8, !dbg !10060
  %d_node = getelementptr inbounds %struct.input_handle, %struct.input_handle* %39, i32 0, i32 5, !dbg !10060
  %40 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !10060
  %h_list31 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %40, i32 0, i32 41, !dbg !10060
  %cmp = icmp eq %struct.list_head* %d_node, %h_list31, !dbg !10060
  %lnot = xor i1 %cmp, true, !dbg !10060
  br i1 %lnot, label %for.body, label %for.end, !dbg !10059

for.body:                                         ; preds = %for.cond
  %41 = load %struct.seq_file*, %struct.seq_file** %seq.addr, align 8, !dbg !10062
  %42 = load %struct.input_handle*, %struct.input_handle** %handle, align 8, !dbg !10063
  %name33 = getelementptr inbounds %struct.input_handle, %struct.input_handle* %42, i32 0, i32 2, !dbg !10064
  %43 = load i8*, i8** %name33, align 8, !dbg !10064
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %41, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.71, i64 0, i64 0), i8* %43) #11, !dbg !10065
  br label %for.inc, !dbg !10065

for.inc:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata i8** %__mptr34, metadata !10066, metadata !DIExpression()), !dbg !10068
  %44 = load %struct.input_handle*, %struct.input_handle** %handle, align 8, !dbg !10068
  %d_node35 = getelementptr inbounds %struct.input_handle, %struct.input_handle* %44, i32 0, i32 5, !dbg !10068
  %next36 = getelementptr inbounds %struct.list_head, %struct.list_head* %d_node35, i32 0, i32 0, !dbg !10068
  %45 = load %struct.list_head*, %struct.list_head** %next36, align 8, !dbg !10068
  %46 = bitcast %struct.list_head* %45 to i8*, !dbg !10068
  store i8* %46, i8** %__mptr34, align 8, !dbg !10068
  br label %do.body37, !dbg !10068

do.body37:                                        ; preds = %for.inc
  br label %do.end38, !dbg !10069

do.end38:                                         ; preds = %do.body37
  %47 = load i8*, i8** %__mptr34, align 8, !dbg !10068
  %add.ptr40 = getelementptr i8, i8* %47, i64 -40, !dbg !10068
  %48 = bitcast i8* %add.ptr40 to %struct.input_handle*, !dbg !10068
  store %struct.input_handle* %48, %struct.input_handle** %tmp39, align 8, !dbg !10069
  %49 = load %struct.input_handle*, %struct.input_handle** %tmp39, align 8, !dbg !10068
  store %struct.input_handle* %49, %struct.input_handle** %handle, align 8, !dbg !10060
  br label %for.cond, !dbg !10060, !llvm.loop !10071

for.end:                                          ; preds = %for.cond
  %50 = load %struct.seq_file*, %struct.seq_file** %seq.addr, align 8, !dbg !10073
  call void @seq_putc(%struct.seq_file* %50, i8 signext 10) #11, !dbg !10074
  %51 = load %struct.seq_file*, %struct.seq_file** %seq.addr, align 8, !dbg !10075
  %52 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !10076
  %propbit = getelementptr inbounds %struct.input_dev, %struct.input_dev* %52, i32 0, i32 4, !dbg !10077
  %arraydecay = getelementptr inbounds [1 x i64], [1 x i64]* %propbit, i64 0, i64 0, !dbg !10076
  call void @input_seq_print_bitmap(%struct.seq_file* %51, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.72, i64 0, i64 0), i64* %arraydecay, i32 31) #11, !dbg !10078
  %53 = load %struct.seq_file*, %struct.seq_file** %seq.addr, align 8, !dbg !10079
  %54 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !10080
  %evbit = getelementptr inbounds %struct.input_dev, %struct.input_dev* %54, i32 0, i32 5, !dbg !10081
  %arraydecay41 = getelementptr inbounds [1 x i64], [1 x i64]* %evbit, i64 0, i64 0, !dbg !10080
  call void @input_seq_print_bitmap(%struct.seq_file* %53, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.73, i64 0, i64 0), i64* %arraydecay41, i32 31) #11, !dbg !10082
  %55 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !10083
  %evbit42 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %55, i32 0, i32 5, !dbg !10085
  %arraydecay43 = getelementptr inbounds [1 x i64], [1 x i64]* %evbit42, i64 0, i64 0, !dbg !10083
  %call44 = call zeroext i1 @test_bit(i64 1, i64* %arraydecay43) #11, !dbg !10086
  br i1 %call44, label %if.then, label %if.end, !dbg !10087

if.then:                                          ; preds = %for.end
  %56 = load %struct.seq_file*, %struct.seq_file** %seq.addr, align 8, !dbg !10088
  %57 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !10089
  %keybit = getelementptr inbounds %struct.input_dev, %struct.input_dev* %57, i32 0, i32 6, !dbg !10090
  %arraydecay45 = getelementptr inbounds [12 x i64], [12 x i64]* %keybit, i64 0, i64 0, !dbg !10089
  call void @input_seq_print_bitmap(%struct.seq_file* %56, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.74, i64 0, i64 0), i64* %arraydecay45, i32 767) #11, !dbg !10091
  br label %if.end, !dbg !10091

if.end:                                           ; preds = %if.then, %for.end
  %58 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !10092
  %evbit46 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %58, i32 0, i32 5, !dbg !10094
  %arraydecay47 = getelementptr inbounds [1 x i64], [1 x i64]* %evbit46, i64 0, i64 0, !dbg !10092
  %call48 = call zeroext i1 @test_bit(i64 2, i64* %arraydecay47) #11, !dbg !10095
  br i1 %call48, label %if.then49, label %if.end51, !dbg !10096

if.then49:                                        ; preds = %if.end
  %59 = load %struct.seq_file*, %struct.seq_file** %seq.addr, align 8, !dbg !10097
  %60 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !10098
  %relbit = getelementptr inbounds %struct.input_dev, %struct.input_dev* %60, i32 0, i32 7, !dbg !10099
  %arraydecay50 = getelementptr inbounds [1 x i64], [1 x i64]* %relbit, i64 0, i64 0, !dbg !10098
  call void @input_seq_print_bitmap(%struct.seq_file* %59, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.75, i64 0, i64 0), i64* %arraydecay50, i32 15) #11, !dbg !10100
  br label %if.end51, !dbg !10100

if.end51:                                         ; preds = %if.then49, %if.end
  %61 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !10101
  %evbit52 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %61, i32 0, i32 5, !dbg !10103
  %arraydecay53 = getelementptr inbounds [1 x i64], [1 x i64]* %evbit52, i64 0, i64 0, !dbg !10101
  %call54 = call zeroext i1 @test_bit(i64 3, i64* %arraydecay53) #11, !dbg !10104
  br i1 %call54, label %if.then55, label %if.end57, !dbg !10105

if.then55:                                        ; preds = %if.end51
  %62 = load %struct.seq_file*, %struct.seq_file** %seq.addr, align 8, !dbg !10106
  %63 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !10107
  %absbit = getelementptr inbounds %struct.input_dev, %struct.input_dev* %63, i32 0, i32 8, !dbg !10108
  %arraydecay56 = getelementptr inbounds [1 x i64], [1 x i64]* %absbit, i64 0, i64 0, !dbg !10107
  call void @input_seq_print_bitmap(%struct.seq_file* %62, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.76, i64 0, i64 0), i64* %arraydecay56, i32 63) #11, !dbg !10109
  br label %if.end57, !dbg !10109

if.end57:                                         ; preds = %if.then55, %if.end51
  %64 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !10110
  %evbit58 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %64, i32 0, i32 5, !dbg !10112
  %arraydecay59 = getelementptr inbounds [1 x i64], [1 x i64]* %evbit58, i64 0, i64 0, !dbg !10110
  %call60 = call zeroext i1 @test_bit(i64 4, i64* %arraydecay59) #11, !dbg !10113
  br i1 %call60, label %if.then61, label %if.end63, !dbg !10114

if.then61:                                        ; preds = %if.end57
  %65 = load %struct.seq_file*, %struct.seq_file** %seq.addr, align 8, !dbg !10115
  %66 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !10116
  %mscbit = getelementptr inbounds %struct.input_dev, %struct.input_dev* %66, i32 0, i32 9, !dbg !10117
  %arraydecay62 = getelementptr inbounds [1 x i64], [1 x i64]* %mscbit, i64 0, i64 0, !dbg !10116
  call void @input_seq_print_bitmap(%struct.seq_file* %65, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.77, i64 0, i64 0), i64* %arraydecay62, i32 7) #11, !dbg !10118
  br label %if.end63, !dbg !10118

if.end63:                                         ; preds = %if.then61, %if.end57
  %67 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !10119
  %evbit64 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %67, i32 0, i32 5, !dbg !10121
  %arraydecay65 = getelementptr inbounds [1 x i64], [1 x i64]* %evbit64, i64 0, i64 0, !dbg !10119
  %call66 = call zeroext i1 @test_bit(i64 17, i64* %arraydecay65) #11, !dbg !10122
  br i1 %call66, label %if.then67, label %if.end69, !dbg !10123

if.then67:                                        ; preds = %if.end63
  %68 = load %struct.seq_file*, %struct.seq_file** %seq.addr, align 8, !dbg !10124
  %69 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !10125
  %ledbit = getelementptr inbounds %struct.input_dev, %struct.input_dev* %69, i32 0, i32 10, !dbg !10126
  %arraydecay68 = getelementptr inbounds [1 x i64], [1 x i64]* %ledbit, i64 0, i64 0, !dbg !10125
  call void @input_seq_print_bitmap(%struct.seq_file* %68, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.78, i64 0, i64 0), i64* %arraydecay68, i32 15) #11, !dbg !10127
  br label %if.end69, !dbg !10127

if.end69:                                         ; preds = %if.then67, %if.end63
  %70 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !10128
  %evbit70 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %70, i32 0, i32 5, !dbg !10130
  %arraydecay71 = getelementptr inbounds [1 x i64], [1 x i64]* %evbit70, i64 0, i64 0, !dbg !10128
  %call72 = call zeroext i1 @test_bit(i64 18, i64* %arraydecay71) #11, !dbg !10131
  br i1 %call72, label %if.then73, label %if.end75, !dbg !10132

if.then73:                                        ; preds = %if.end69
  %71 = load %struct.seq_file*, %struct.seq_file** %seq.addr, align 8, !dbg !10133
  %72 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !10134
  %sndbit = getelementptr inbounds %struct.input_dev, %struct.input_dev* %72, i32 0, i32 11, !dbg !10135
  %arraydecay74 = getelementptr inbounds [1 x i64], [1 x i64]* %sndbit, i64 0, i64 0, !dbg !10134
  call void @input_seq_print_bitmap(%struct.seq_file* %71, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.79, i64 0, i64 0), i64* %arraydecay74, i32 7) #11, !dbg !10136
  br label %if.end75, !dbg !10136

if.end75:                                         ; preds = %if.then73, %if.end69
  %73 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !10137
  %evbit76 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %73, i32 0, i32 5, !dbg !10139
  %arraydecay77 = getelementptr inbounds [1 x i64], [1 x i64]* %evbit76, i64 0, i64 0, !dbg !10137
  %call78 = call zeroext i1 @test_bit(i64 21, i64* %arraydecay77) #11, !dbg !10140
  br i1 %call78, label %if.then79, label %if.end81, !dbg !10141

if.then79:                                        ; preds = %if.end75
  %74 = load %struct.seq_file*, %struct.seq_file** %seq.addr, align 8, !dbg !10142
  %75 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !10143
  %ffbit = getelementptr inbounds %struct.input_dev, %struct.input_dev* %75, i32 0, i32 12, !dbg !10144
  %arraydecay80 = getelementptr inbounds [2 x i64], [2 x i64]* %ffbit, i64 0, i64 0, !dbg !10143
  call void @input_seq_print_bitmap(%struct.seq_file* %74, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.80, i64 0, i64 0), i64* %arraydecay80, i32 127) #11, !dbg !10145
  br label %if.end81, !dbg !10145

if.end81:                                         ; preds = %if.then79, %if.end75
  %76 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !10146
  %evbit82 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %76, i32 0, i32 5, !dbg !10148
  %arraydecay83 = getelementptr inbounds [1 x i64], [1 x i64]* %evbit82, i64 0, i64 0, !dbg !10146
  %call84 = call zeroext i1 @test_bit(i64 5, i64* %arraydecay83) #11, !dbg !10149
  br i1 %call84, label %if.then85, label %if.end87, !dbg !10150

if.then85:                                        ; preds = %if.end81
  %77 = load %struct.seq_file*, %struct.seq_file** %seq.addr, align 8, !dbg !10151
  %78 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !10152
  %swbit = getelementptr inbounds %struct.input_dev, %struct.input_dev* %78, i32 0, i32 13, !dbg !10153
  %arraydecay86 = getelementptr inbounds [1 x i64], [1 x i64]* %swbit, i64 0, i64 0, !dbg !10152
  call void @input_seq_print_bitmap(%struct.seq_file* %77, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.81, i64 0, i64 0), i64* %arraydecay86, i32 16) #11, !dbg !10154
  br label %if.end87, !dbg !10154

if.end87:                                         ; preds = %if.then85, %if.end81
  %79 = load %struct.seq_file*, %struct.seq_file** %seq.addr, align 8, !dbg !10155
  call void @seq_putc(%struct.seq_file* %79, i8 signext 10) #11, !dbg !10156
  %80 = load i8*, i8** %path, align 8, !dbg !10157
  call void @kfree(i8* %80) #11, !dbg !10158
  ret i32 0, !dbg !10159
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @ERR_PTR(i64 %error) #0 !dbg !10160 {
entry:
  %error.addr = alloca i64, align 8
  store i64 %error, i64* %error.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %error.addr, metadata !10164, metadata !DIExpression()), !dbg !10165
  %0 = load i64, i64* %error.addr, align 8, !dbg !10166
  %1 = inttoptr i64 %0 to i8*, !dbg !10167
  ret i8* %1, !dbg !10168
}

; Function Attrs: noredzone
declare dso_local %struct.list_head* @seq_list_start(%struct.list_head*, i64) #3

; Function Attrs: noredzone
declare dso_local %struct.list_head* @seq_list_next(i8*, %struct.list_head*, i64*) #3

; Function Attrs: noredzone
declare dso_local void @seq_printf(%struct.seq_file*, i8*, ...) #3

; Function Attrs: noredzone
declare dso_local void @seq_puts(%struct.seq_file*, i8*) #3

; Function Attrs: noredzone
declare dso_local void @seq_putc(%struct.seq_file*, i8 signext) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @input_seq_print_bitmap(%struct.seq_file* %seq, i8* %name, i64* %bitmap, i32 %max) #0 !dbg !10169 {
entry:
  %seq.addr = alloca %struct.seq_file*, align 8
  %name.addr = alloca i8*, align 8
  %bitmap.addr = alloca i64*, align 8
  %max.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %skip_empty = alloca i8, align 1
  %buf = alloca [18 x i8], align 16
  store %struct.seq_file* %seq, %struct.seq_file** %seq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.seq_file** %seq.addr, metadata !10172, metadata !DIExpression()), !dbg !10173
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !10174, metadata !DIExpression()), !dbg !10175
  store i64* %bitmap, i64** %bitmap.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %bitmap.addr, metadata !10176, metadata !DIExpression()), !dbg !10177
  store i32 %max, i32* %max.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %max.addr, metadata !10178, metadata !DIExpression()), !dbg !10179
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10180, metadata !DIExpression()), !dbg !10181
  call void @llvm.dbg.declare(metadata i8* %skip_empty, metadata !10182, metadata !DIExpression()), !dbg !10183
  store i8 1, i8* %skip_empty, align 1, !dbg !10183
  call void @llvm.dbg.declare(metadata [18 x i8]* %buf, metadata !10184, metadata !DIExpression()), !dbg !10188
  %0 = load %struct.seq_file*, %struct.seq_file** %seq.addr, align 8, !dbg !10189
  %1 = load i8*, i8** %name.addr, align 8, !dbg !10190
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.82, i64 0, i64 0), i8* %1) #11, !dbg !10191
  %2 = load i32, i32* %max.addr, align 4, !dbg !10192
  %conv = sext i32 %2 to i64, !dbg !10192
  %add = add i64 %conv, 64, !dbg !10192
  %sub = sub i64 %add, 1, !dbg !10192
  %div = udiv i64 %sub, 64, !dbg !10192
  %sub1 = sub i64 %div, 1, !dbg !10194
  %conv2 = trunc i64 %sub1 to i32, !dbg !10192
  store i32 %conv2, i32* %i, align 4, !dbg !10195
  br label %for.cond, !dbg !10196

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load i32, i32* %i, align 4, !dbg !10197
  %cmp = icmp sge i32 %3, 0, !dbg !10199
  br i1 %cmp, label %for.body, label %for.end, !dbg !10200

for.body:                                         ; preds = %for.cond
  %arraydecay = getelementptr inbounds [18 x i8], [18 x i8]* %buf, i64 0, i64 0, !dbg !10201
  %4 = load i64*, i64** %bitmap.addr, align 8, !dbg !10204
  %5 = load i32, i32* %i, align 4, !dbg !10205
  %idxprom = sext i32 %5 to i64, !dbg !10204
  %arrayidx = getelementptr i64, i64* %4, i64 %idxprom, !dbg !10204
  %6 = load i64, i64* %arrayidx, align 8, !dbg !10204
  %7 = load i8, i8* %skip_empty, align 1, !dbg !10206
  %tobool = trunc i8 %7 to i1, !dbg !10206
  %call = call i32 @input_bits_to_string(i8* %arraydecay, i32 18, i64 %6, i1 zeroext %tobool) #11, !dbg !10207
  %tobool4 = icmp ne i32 %call, 0, !dbg !10207
  br i1 %tobool4, label %if.then, label %if.end, !dbg !10208

if.then:                                          ; preds = %for.body
  store i8 0, i8* %skip_empty, align 1, !dbg !10209
  %8 = load %struct.seq_file*, %struct.seq_file** %seq.addr, align 8, !dbg !10211
  %arraydecay5 = getelementptr inbounds [18 x i8], [18 x i8]* %buf, i64 0, i64 0, !dbg !10212
  %9 = load i32, i32* %i, align 4, !dbg !10213
  %cmp6 = icmp sgt i32 %9, 0, !dbg !10214
  %10 = zext i1 %cmp6 to i64, !dbg !10213
  %cond = select i1 %cmp6, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.24, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.15, i64 0, i64 0), !dbg !10213
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.83, i64 0, i64 0), i8* %arraydecay5, i8* %cond) #11, !dbg !10215
  br label %if.end, !dbg !10216

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !10217

for.inc:                                          ; preds = %if.end
  %11 = load i32, i32* %i, align 4, !dbg !10218
  %dec = add i32 %11, -1, !dbg !10218
  store i32 %dec, i32* %i, align 4, !dbg !10218
  br label %for.cond, !dbg !10219, !llvm.loop !10220

for.end:                                          ; preds = %for.cond
  %12 = load i8, i8* %skip_empty, align 1, !dbg !10222
  %tobool8 = trunc i8 %12 to i1, !dbg !10222
  br i1 %tobool8, label %if.then9, label %if.end10, !dbg !10224

if.then9:                                         ; preds = %for.end
  %13 = load %struct.seq_file*, %struct.seq_file** %seq.addr, align 8, !dbg !10225
  call void @seq_putc(%struct.seq_file* %13, i8 signext 48) #11, !dbg !10226
  br label %if.end10, !dbg !10226

if.end10:                                         ; preds = %if.then9, %for.end
  %14 = load %struct.seq_file*, %struct.seq_file** %seq.addr, align 8, !dbg !10227
  call void @seq_putc(%struct.seq_file* %14, i8 signext 10) #11, !dbg !10228
  ret void, !dbg !10229
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @poll_wait(%struct.file* %filp, %struct.wait_queue_head* %wait_address, %struct.poll_table_struct* %p) #0 !dbg !10230 {
entry:
  %filp.addr = alloca %struct.file*, align 8
  %wait_address.addr = alloca %struct.wait_queue_head*, align 8
  %p.addr = alloca %struct.poll_table_struct*, align 8
  store %struct.file* %filp, %struct.file** %filp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.file** %filp.addr, metadata !10233, metadata !DIExpression()), !dbg !10234
  store %struct.wait_queue_head* %wait_address, %struct.wait_queue_head** %wait_address.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wait_queue_head** %wait_address.addr, metadata !10235, metadata !DIExpression()), !dbg !10236
  store %struct.poll_table_struct* %p, %struct.poll_table_struct** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.poll_table_struct** %p.addr, metadata !10237, metadata !DIExpression()), !dbg !10238
  %0 = load %struct.poll_table_struct*, %struct.poll_table_struct** %p.addr, align 8, !dbg !10239
  %tobool = icmp ne %struct.poll_table_struct* %0, null, !dbg !10239
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !10241

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.poll_table_struct*, %struct.poll_table_struct** %p.addr, align 8, !dbg !10242
  %_qproc = getelementptr inbounds %struct.poll_table_struct, %struct.poll_table_struct* %1, i32 0, i32 0, !dbg !10243
  %2 = load void (%struct.file*, %struct.wait_queue_head*, %struct.poll_table_struct*)*, void (%struct.file*, %struct.wait_queue_head*, %struct.poll_table_struct*)** %_qproc, align 8, !dbg !10243
  %tobool1 = icmp ne void (%struct.file*, %struct.wait_queue_head*, %struct.poll_table_struct*)* %2, null, !dbg !10242
  br i1 %tobool1, label %land.lhs.true2, label %if.end, !dbg !10244

land.lhs.true2:                                   ; preds = %land.lhs.true
  %3 = load %struct.wait_queue_head*, %struct.wait_queue_head** %wait_address.addr, align 8, !dbg !10245
  %tobool3 = icmp ne %struct.wait_queue_head* %3, null, !dbg !10245
  br i1 %tobool3, label %if.then, label %if.end, !dbg !10246

if.then:                                          ; preds = %land.lhs.true2
  %4 = load %struct.poll_table_struct*, %struct.poll_table_struct** %p.addr, align 8, !dbg !10247
  %_qproc4 = getelementptr inbounds %struct.poll_table_struct, %struct.poll_table_struct* %4, i32 0, i32 0, !dbg !10248
  %5 = load void (%struct.file*, %struct.wait_queue_head*, %struct.poll_table_struct*)*, void (%struct.file*, %struct.wait_queue_head*, %struct.poll_table_struct*)** %_qproc4, align 8, !dbg !10248
  %6 = load %struct.file*, %struct.file** %filp.addr, align 8, !dbg !10249
  %7 = load %struct.wait_queue_head*, %struct.wait_queue_head** %wait_address.addr, align 8, !dbg !10250
  %8 = load %struct.poll_table_struct*, %struct.poll_table_struct** %p.addr, align 8, !dbg !10251
  call void %5(%struct.file* %6, %struct.wait_queue_head* %7, %struct.poll_table_struct* %8) #11, !dbg !10247
  br label %if.end, !dbg !10247

if.end:                                           ; preds = %if.then, %land.lhs.true2, %land.lhs.true, %entry
  ret void, !dbg !10252
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @input_proc_handlers_open(%struct.inode* %inode, %struct.file* %file) #0 !dbg !10253 {
entry:
  %inode.addr = alloca %struct.inode*, align 8
  %file.addr = alloca %struct.file*, align 8
  store %struct.inode* %inode, %struct.inode** %inode.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.inode** %inode.addr, metadata !10254, metadata !DIExpression()), !dbg !10255
  store %struct.file* %file, %struct.file** %file.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.file** %file.addr, metadata !10256, metadata !DIExpression()), !dbg !10257
  %0 = load %struct.file*, %struct.file** %file.addr, align 8, !dbg !10258
  %call = call i32 @seq_open(%struct.file* %0, %struct.seq_operations* @input_handlers_seq_ops) #11, !dbg !10259
  ret i32 %call, !dbg !10260
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @input_handlers_seq_start(%struct.seq_file* %seq, i64* %pos) #0 !dbg !10261 {
entry:
  %retval = alloca i8*, align 8
  %seq.addr = alloca %struct.seq_file*, align 8
  %pos.addr = alloca i64*, align 8
  %state = alloca %union.input_seq_state*, align 8
  %error = alloca i32, align 4
  store %struct.seq_file* %seq, %struct.seq_file** %seq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.seq_file** %seq.addr, metadata !10262, metadata !DIExpression()), !dbg !10263
  store i64* %pos, i64** %pos.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %pos.addr, metadata !10264, metadata !DIExpression()), !dbg !10265
  call void @llvm.dbg.declare(metadata %union.input_seq_state** %state, metadata !10266, metadata !DIExpression()), !dbg !10267
  %0 = load %struct.seq_file*, %struct.seq_file** %seq.addr, align 8, !dbg !10268
  %private = getelementptr inbounds %struct.seq_file, %struct.seq_file* %0, i32 0, i32 11, !dbg !10269
  %1 = bitcast i8** %private to %union.input_seq_state*, !dbg !10270
  store %union.input_seq_state* %1, %union.input_seq_state** %state, align 8, !dbg !10267
  call void @llvm.dbg.declare(metadata i32* %error, metadata !10271, metadata !DIExpression()), !dbg !10272
  br label %do.body, !dbg !10273

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !10274

do.end:                                           ; preds = %do.body
  %call = call i32 @mutex_lock_interruptible(%struct.mutex* @input_mutex) #11, !dbg !10276
  store i32 %call, i32* %error, align 4, !dbg !10277
  %2 = load i32, i32* %error, align 4, !dbg !10278
  %tobool = icmp ne i32 %2, 0, !dbg !10278
  br i1 %tobool, label %if.then, label %if.end, !dbg !10280

if.then:                                          ; preds = %do.end
  %3 = load %union.input_seq_state*, %union.input_seq_state** %state, align 8, !dbg !10281
  %4 = bitcast %union.input_seq_state* %3 to %struct.anon.68*, !dbg !10283
  %mutex_acquired = getelementptr inbounds %struct.anon.68, %struct.anon.68* %4, i32 0, i32 1, !dbg !10283
  store i8 0, i8* %mutex_acquired, align 2, !dbg !10284
  %5 = load i32, i32* %error, align 4, !dbg !10285
  %conv = sext i32 %5 to i64, !dbg !10285
  %call1 = call i8* @ERR_PTR(i64 %conv) #11, !dbg !10286
  store i8* %call1, i8** %retval, align 8, !dbg !10287
  br label %return, !dbg !10287

if.end:                                           ; preds = %do.end
  %6 = load %union.input_seq_state*, %union.input_seq_state** %state, align 8, !dbg !10288
  %7 = bitcast %union.input_seq_state* %6 to %struct.anon.68*, !dbg !10289
  %mutex_acquired2 = getelementptr inbounds %struct.anon.68, %struct.anon.68* %7, i32 0, i32 1, !dbg !10289
  store i8 1, i8* %mutex_acquired2, align 2, !dbg !10290
  %8 = load i64*, i64** %pos.addr, align 8, !dbg !10291
  %9 = load i64, i64* %8, align 8, !dbg !10292
  %conv3 = trunc i64 %9 to i16, !dbg !10292
  %10 = load %union.input_seq_state*, %union.input_seq_state** %state, align 8, !dbg !10293
  %11 = bitcast %union.input_seq_state* %10 to %struct.anon.68*, !dbg !10294
  %pos4 = getelementptr inbounds %struct.anon.68, %struct.anon.68* %11, i32 0, i32 0, !dbg !10294
  store i16 %conv3, i16* %pos4, align 8, !dbg !10295
  %12 = load i64*, i64** %pos.addr, align 8, !dbg !10296
  %13 = load i64, i64* %12, align 8, !dbg !10297
  %call5 = call %struct.list_head* @seq_list_start(%struct.list_head* @input_handler_list, i64 %13) #11, !dbg !10298
  %14 = bitcast %struct.list_head* %call5 to i8*, !dbg !10298
  store i8* %14, i8** %retval, align 8, !dbg !10299
  br label %return, !dbg !10299

return:                                           ; preds = %if.end, %if.then
  %15 = load i8*, i8** %retval, align 8, !dbg !10300
  ret i8* %15, !dbg !10300
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @input_handlers_seq_next(%struct.seq_file* %seq, i8* %v, i64* %pos) #0 !dbg !10301 {
entry:
  %seq.addr = alloca %struct.seq_file*, align 8
  %v.addr = alloca i8*, align 8
  %pos.addr = alloca i64*, align 8
  %state = alloca %union.input_seq_state*, align 8
  store %struct.seq_file* %seq, %struct.seq_file** %seq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.seq_file** %seq.addr, metadata !10302, metadata !DIExpression()), !dbg !10303
  store i8* %v, i8** %v.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr, metadata !10304, metadata !DIExpression()), !dbg !10305
  store i64* %pos, i64** %pos.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %pos.addr, metadata !10306, metadata !DIExpression()), !dbg !10307
  call void @llvm.dbg.declare(metadata %union.input_seq_state** %state, metadata !10308, metadata !DIExpression()), !dbg !10309
  %0 = load %struct.seq_file*, %struct.seq_file** %seq.addr, align 8, !dbg !10310
  %private = getelementptr inbounds %struct.seq_file, %struct.seq_file* %0, i32 0, i32 11, !dbg !10311
  %1 = bitcast i8** %private to %union.input_seq_state*, !dbg !10312
  store %union.input_seq_state* %1, %union.input_seq_state** %state, align 8, !dbg !10309
  %2 = load i64*, i64** %pos.addr, align 8, !dbg !10313
  %3 = load i64, i64* %2, align 8, !dbg !10314
  %add = add i64 %3, 1, !dbg !10315
  %conv = trunc i64 %add to i16, !dbg !10314
  %4 = load %union.input_seq_state*, %union.input_seq_state** %state, align 8, !dbg !10316
  %5 = bitcast %union.input_seq_state* %4 to %struct.anon.68*, !dbg !10317
  %pos1 = getelementptr inbounds %struct.anon.68, %struct.anon.68* %5, i32 0, i32 0, !dbg !10317
  store i16 %conv, i16* %pos1, align 8, !dbg !10318
  %6 = load i8*, i8** %v.addr, align 8, !dbg !10319
  %7 = load i64*, i64** %pos.addr, align 8, !dbg !10320
  %call = call %struct.list_head* @seq_list_next(i8* %6, %struct.list_head* @input_handler_list, i64* %7) #11, !dbg !10321
  %8 = bitcast %struct.list_head* %call to i8*, !dbg !10321
  ret i8* %8, !dbg !10322
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @input_handlers_seq_show(%struct.seq_file* %seq, i8* %v) #0 !dbg !10323 {
entry:
  %seq.addr = alloca %struct.seq_file*, align 8
  %v.addr = alloca i8*, align 8
  %handler = alloca %struct.input_handler*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.input_handler*, align 8
  %state = alloca %union.input_seq_state*, align 8
  store %struct.seq_file* %seq, %struct.seq_file** %seq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.seq_file** %seq.addr, metadata !10324, metadata !DIExpression()), !dbg !10325
  store i8* %v, i8** %v.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr, metadata !10326, metadata !DIExpression()), !dbg !10327
  call void @llvm.dbg.declare(metadata %struct.input_handler** %handler, metadata !10328, metadata !DIExpression()), !dbg !10329
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !10330, metadata !DIExpression()), !dbg !10332
  %0 = load i8*, i8** %v.addr, align 8, !dbg !10332
  store i8* %0, i8** %__mptr, align 8, !dbg !10332
  br label %do.body, !dbg !10332

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !10333

do.end:                                           ; preds = %do.body
  %1 = load i8*, i8** %__mptr, align 8, !dbg !10332
  %add.ptr = getelementptr i8, i8* %1, i64 -104, !dbg !10332
  %2 = bitcast i8* %add.ptr to %struct.input_handler*, !dbg !10332
  store %struct.input_handler* %2, %struct.input_handler** %tmp, align 8, !dbg !10333
  %3 = load %struct.input_handler*, %struct.input_handler** %tmp, align 8, !dbg !10332
  store %struct.input_handler* %3, %struct.input_handler** %handler, align 8, !dbg !10329
  call void @llvm.dbg.declare(metadata %union.input_seq_state** %state, metadata !10335, metadata !DIExpression()), !dbg !10336
  %4 = load %struct.seq_file*, %struct.seq_file** %seq.addr, align 8, !dbg !10337
  %private = getelementptr inbounds %struct.seq_file, %struct.seq_file* %4, i32 0, i32 11, !dbg !10338
  %5 = bitcast i8** %private to %union.input_seq_state*, !dbg !10339
  store %union.input_seq_state* %5, %union.input_seq_state** %state, align 8, !dbg !10336
  %6 = load %struct.seq_file*, %struct.seq_file** %seq.addr, align 8, !dbg !10340
  %7 = load %union.input_seq_state*, %union.input_seq_state** %state, align 8, !dbg !10341
  %8 = bitcast %union.input_seq_state* %7 to %struct.anon.68*, !dbg !10342
  %pos = getelementptr inbounds %struct.anon.68, %struct.anon.68* %8, i32 0, i32 0, !dbg !10342
  %9 = load i16, i16* %pos, align 8, !dbg !10342
  %conv = zext i16 %9 to i32, !dbg !10341
  %10 = load %struct.input_handler*, %struct.input_handler** %handler, align 8, !dbg !10343
  %name = getelementptr inbounds %struct.input_handler, %struct.input_handler* %10, i32 0, i32 10, !dbg !10344
  %11 = load i8*, i8** %name, align 8, !dbg !10344
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %6, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.84, i64 0, i64 0), i32 %conv, i8* %11) #11, !dbg !10345
  %12 = load %struct.input_handler*, %struct.input_handler** %handler, align 8, !dbg !10346
  %filter = getelementptr inbounds %struct.input_handler, %struct.input_handler* %12, i32 0, i32 3, !dbg !10348
  %13 = load i1 (%struct.input_handle*, i32, i32, i32)*, i1 (%struct.input_handle*, i32, i32, i32)** %filter, align 8, !dbg !10348
  %tobool = icmp ne i1 (%struct.input_handle*, i32, i32, i32)* %13, null, !dbg !10346
  br i1 %tobool, label %if.then, label %if.end, !dbg !10349

if.then:                                          ; preds = %do.end
  %14 = load %struct.seq_file*, %struct.seq_file** %seq.addr, align 8, !dbg !10350
  call void @seq_puts(%struct.seq_file* %14, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.85, i64 0, i64 0)) #11, !dbg !10351
  br label %if.end, !dbg !10351

if.end:                                           ; preds = %if.then, %do.end
  %15 = load %struct.input_handler*, %struct.input_handler** %handler, align 8, !dbg !10352
  %legacy_minors = getelementptr inbounds %struct.input_handler, %struct.input_handler* %15, i32 0, i32 8, !dbg !10354
  %16 = load i8, i8* %legacy_minors, align 8, !dbg !10354
  %tobool1 = trunc i8 %16 to i1, !dbg !10354
  br i1 %tobool1, label %if.then2, label %if.end3, !dbg !10355

if.then2:                                         ; preds = %if.end
  %17 = load %struct.seq_file*, %struct.seq_file** %seq.addr, align 8, !dbg !10356
  %18 = load %struct.input_handler*, %struct.input_handler** %handler, align 8, !dbg !10357
  %minor = getelementptr inbounds %struct.input_handler, %struct.input_handler* %18, i32 0, i32 9, !dbg !10358
  %19 = load i32, i32* %minor, align 4, !dbg !10358
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %17, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.86, i64 0, i64 0), i32 %19) #11, !dbg !10359
  br label %if.end3, !dbg !10359

if.end3:                                          ; preds = %if.then2, %if.end
  %20 = load %struct.seq_file*, %struct.seq_file** %seq.addr, align 8, !dbg !10360
  call void @seq_putc(%struct.seq_file* %20, i8 signext 10) #11, !dbg !10361
  ret i32 0, !dbg !10362
}

attributes #0 = { noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { cold noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind willreturn }
attributes #5 = { cold noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readonly }
attributes #7 = { nounwind }
attributes #8 = { nounwind readnone willreturn }
attributes #9 = { nounwind willreturn }
attributes #10 = { noinline noredzone nounwind optnone readnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noredzone }
attributes #12 = { noredzone nounwind }
attributes #13 = { cold noredzone }
attributes #14 = { noredzone nounwind readnone }
attributes #15 = { nounwind readnone }

!llvm.dbg.cu = !{!2}
!llvm.named.register.rsp = !{!4033}
!llvm.module.flags = !{!4034, !4035, !4036, !4037}
!llvm.ident = !{!4038}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_author210", scope: !2, file: !3, line: 29, type: !4030, isLocal: true, isDefinition: true, align: 8)
!2 = distinct !DICompileUnit(language: DW_LANG_C89, file: !3, producer: "clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !106, globals: !3875, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "drivers/input/input.c", directory: "/home/lizy2001/genbc/linux")
!4 = !{!5, !13, !18, !24, !30, !39, !47, !53, !59, !66, !74, !80, !85, !92, !99}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "migrate_mode", file: !6, line: 15, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./include/linux/migrate_mode.h", directory: "/home/lizy2001/genbc/linux")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12}
!9 = !DIEnumerator(name: "MIGRATE_ASYNC", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "MIGRATE_SYNC_LIGHT", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "MIGRATE_SYNC", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "MIGRATE_SYNC_NO_COPY", value: 3, isUnsigned: true)
!13 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "hrtimer_restart", file: !14, line: 65, baseType: !7, size: 32, elements: !15)
!14 = !DIFile(filename: "./include/linux/hrtimer.h", directory: "/home/lizy2001/genbc/linux")
!15 = !{!16, !17}
!16 = !DIEnumerator(name: "HRTIMER_NORESTART", value: 0, isUnsigned: true)
!17 = !DIEnumerator(name: "HRTIMER_RESTART", value: 1, isUnsigned: true)
!18 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "timespec_type", file: !19, line: 16, baseType: !7, size: 32, elements: !20)
!19 = !DIFile(filename: "./include/linux/restart_block.h", directory: "/home/lizy2001/genbc/linux")
!20 = !{!21, !22, !23}
!21 = !DIEnumerator(name: "TT_NONE", value: 0, isUnsigned: true)
!22 = !DIEnumerator(name: "TT_NATIVE", value: 1, isUnsigned: true)
!23 = !DIEnumerator(name: "TT_COMPAT", value: 2, isUnsigned: true)
!24 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "quota_type", file: !25, line: 54, baseType: !7, size: 32, elements: !26)
!25 = !DIFile(filename: "./include/linux/quota.h", directory: "/home/lizy2001/genbc/linux")
!26 = !{!27, !28, !29}
!27 = !DIEnumerator(name: "USRQUOTA", value: 0, isUnsigned: true)
!28 = !DIEnumerator(name: "GRPQUOTA", value: 1, isUnsigned: true)
!29 = !DIEnumerator(name: "PRJQUOTA", value: 2, isUnsigned: true)
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rw_hint", file: !31, line: 296, baseType: !7, size: 32, elements: !32)
!31 = !DIFile(filename: "./include/linux/fs.h", directory: "/home/lizy2001/genbc/linux")
!32 = !{!33, !34, !35, !36, !37, !38}
!33 = !DIEnumerator(name: "WRITE_LIFE_NOT_SET", value: 0, isUnsigned: true)
!34 = !DIEnumerator(name: "WRITE_LIFE_NONE", value: 1, isUnsigned: true)
!35 = !DIEnumerator(name: "WRITE_LIFE_SHORT", value: 2, isUnsigned: true)
!36 = !DIEnumerator(name: "WRITE_LIFE_MEDIUM", value: 3, isUnsigned: true)
!37 = !DIEnumerator(name: "WRITE_LIFE_LONG", value: 4, isUnsigned: true)
!38 = !DIEnumerator(name: "WRITE_LIFE_EXTREME", value: 5, isUnsigned: true)
!39 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pid_type", file: !40, line: 9, baseType: !7, size: 32, elements: !41)
!40 = !DIFile(filename: "./include/linux/pid.h", directory: "/home/lizy2001/genbc/linux")
!41 = !{!42, !43, !44, !45, !46}
!42 = !DIEnumerator(name: "PIDTYPE_PID", value: 0, isUnsigned: true)
!43 = !DIEnumerator(name: "PIDTYPE_TGID", value: 1, isUnsigned: true)
!44 = !DIEnumerator(name: "PIDTYPE_PGID", value: 2, isUnsigned: true)
!45 = !DIEnumerator(name: "PIDTYPE_SID", value: 3, isUnsigned: true)
!46 = !DIEnumerator(name: "PIDTYPE_MAX", value: 4, isUnsigned: true)
!47 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kobj_ns_type", file: !48, line: 26, baseType: !7, size: 32, elements: !49)
!48 = !DIFile(filename: "./include/linux/kobject_ns.h", directory: "/home/lizy2001/genbc/linux")
!49 = !{!50, !51, !52}
!50 = !DIEnumerator(name: "KOBJ_NS_TYPE_NONE", value: 0, isUnsigned: true)
!51 = !DIEnumerator(name: "KOBJ_NS_TYPE_NET", value: 1, isUnsigned: true)
!52 = !DIEnumerator(name: "KOBJ_NS_TYPES", value: 2, isUnsigned: true)
!53 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "probe_type", file: !54, line: 44, baseType: !7, size: 32, elements: !55)
!54 = !DIFile(filename: "./include/linux/device/driver.h", directory: "/home/lizy2001/genbc/linux")
!55 = !{!56, !57, !58}
!56 = !DIEnumerator(name: "PROBE_DEFAULT_STRATEGY", value: 0, isUnsigned: true)
!57 = !DIEnumerator(name: "PROBE_PREFER_ASYNCHRONOUS", value: 1, isUnsigned: true)
!58 = !DIEnumerator(name: "PROBE_FORCE_SYNCHRONOUS", value: 2, isUnsigned: true)
!59 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dl_dev_state", file: !60, line: 343, baseType: !7, size: 32, elements: !61)
!60 = !DIFile(filename: "./include/linux/device.h", directory: "/home/lizy2001/genbc/linux")
!61 = !{!62, !63, !64, !65}
!62 = !DIEnumerator(name: "DL_DEV_NO_DRIVER", value: 0, isUnsigned: true)
!63 = !DIEnumerator(name: "DL_DEV_PROBING", value: 1, isUnsigned: true)
!64 = !DIEnumerator(name: "DL_DEV_DRIVER_BOUND", value: 2, isUnsigned: true)
!65 = !DIEnumerator(name: "DL_DEV_UNBINDING", value: 3, isUnsigned: true)
!66 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_request", file: !67, line: 524, baseType: !7, size: 32, elements: !68)
!67 = !DIFile(filename: "./include/linux/pm.h", directory: "/home/lizy2001/genbc/linux")
!68 = !{!69, !70, !71, !72, !73}
!69 = !DIEnumerator(name: "RPM_REQ_NONE", value: 0, isUnsigned: true)
!70 = !DIEnumerator(name: "RPM_REQ_IDLE", value: 1, isUnsigned: true)
!71 = !DIEnumerator(name: "RPM_REQ_SUSPEND", value: 2, isUnsigned: true)
!72 = !DIEnumerator(name: "RPM_REQ_AUTOSUSPEND", value: 3, isUnsigned: true)
!73 = !DIEnumerator(name: "RPM_REQ_RESUME", value: 4, isUnsigned: true)
!74 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_status", file: !67, line: 502, baseType: !7, size: 32, elements: !75)
!75 = !{!76, !77, !78, !79}
!76 = !DIEnumerator(name: "RPM_ACTIVE", value: 0, isUnsigned: true)
!77 = !DIEnumerator(name: "RPM_RESUMING", value: 1, isUnsigned: true)
!78 = !DIEnumerator(name: "RPM_SUSPENDED", value: 2, isUnsigned: true)
!79 = !DIEnumerator(name: "RPM_SUSPENDING", value: 3, isUnsigned: true)
!80 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !81, line: 10, baseType: !7, size: 32, elements: !82)
!81 = !DIFile(filename: "./include/linux/stddef.h", directory: "/home/lizy2001/genbc/linux")
!82 = !{!83, !84}
!83 = !DIEnumerator(name: "false", value: 0, isUnsigned: true)
!84 = !DIEnumerator(name: "true", value: 1, isUnsigned: true)
!85 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "input_clock_type", file: !86, line: 38, baseType: !7, size: 32, elements: !87)
!86 = !DIFile(filename: "./include/linux/input.h", directory: "/home/lizy2001/genbc/linux")
!87 = !{!88, !89, !90, !91}
!88 = !DIEnumerator(name: "INPUT_CLK_REAL", value: 0, isUnsigned: true)
!89 = !DIEnumerator(name: "INPUT_CLK_MONO", value: 1, isUnsigned: true)
!90 = !DIEnumerator(name: "INPUT_CLK_BOOT", value: 2, isUnsigned: true)
!91 = !DIEnumerator(name: "INPUT_CLK_MAX", value: 3, isUnsigned: true)
!92 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "tk_offsets", file: !93, line: 60, baseType: !7, size: 32, elements: !94)
!93 = !DIFile(filename: "./include/linux/timekeeping.h", directory: "/home/lizy2001/genbc/linux")
!94 = !{!95, !96, !97, !98}
!95 = !DIEnumerator(name: "TK_OFFS_REAL", value: 0, isUnsigned: true)
!96 = !DIEnumerator(name: "TK_OFFS_BOOT", value: 1, isUnsigned: true)
!97 = !DIEnumerator(name: "TK_OFFS_TAI", value: 2, isUnsigned: true)
!98 = !DIEnumerator(name: "TK_OFFS_MAX", value: 3, isUnsigned: true)
!99 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kmalloc_cache_type", file: !100, line: 305, baseType: !7, size: 32, elements: !101)
!100 = !DIFile(filename: "./include/linux/slab.h", directory: "/home/lizy2001/genbc/linux")
!101 = !{!102, !103, !104, !105}
!102 = !DIEnumerator(name: "KMALLOC_NORMAL", value: 0, isUnsigned: true)
!103 = !DIEnumerator(name: "KMALLOC_RECLAIM", value: 1, isUnsigned: true)
!104 = !DIEnumerator(name: "KMALLOC_DMA", value: 2, isUnsigned: true)
!105 = !DIEnumerator(name: "NR_KMALLOC_TYPES", value: 3, isUnsigned: true)
!106 = !{!107, !3852, !757, !3855, !111, !3856, !3857, !3858, !1368, !113, !138, !605, !3790, !119, !3859, !3862, !3863, !507, !3864, !291, !386, !387, !7, !314, !3865, !3866, !2782}
!107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !108, size: 64)
!108 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "input_handle", file: !86, line: 337, size: 576, elements: !109)
!109 = !{!110, !112, !114, !118, !3789, !3850, !3851}
!110 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !108, file: !86, line: 339, baseType: !111, size: 64)
!111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!112 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !108, file: !86, line: 341, baseType: !113, size: 32, offset: 64)
!113 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!114 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !108, file: !86, line: 342, baseType: !115, size: 64, offset: 128)
!115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !116, size: 64)
!116 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !117)
!117 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!118 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !108, file: !86, line: 344, baseType: !119, size: 64, offset: 192)
!119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !120, size: 64)
!120 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "input_dev", file: !86, line: 131, size: 10432, elements: !121)
!121 = !{!122, !123, !124, !125, !136, !141, !142, !146, !147, !148, !149, !150, !151, !155, !156, !157, !158, !159, !160, !180, !185, !3062, !3065, !3066, !3078, !3080, !3101, !3111, !3112, !3113, !3114, !3115, !3119, !3123, !3127, !3131, !3132, !3133, !3134, !3135, !3136, !3775, !3776, !3777, !3778, !3779, !3786, !3787}
!122 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !120, file: !86, line: 132, baseType: !115, size: 64)
!123 = !DIDerivedType(tag: DW_TAG_member, name: "phys", scope: !120, file: !86, line: 133, baseType: !115, size: 64, offset: 64)
!124 = !DIDerivedType(tag: DW_TAG_member, name: "uniq", scope: !120, file: !86, line: 134, baseType: !115, size: 64, offset: 128)
!125 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !120, file: !86, line: 135, baseType: !126, size: 64, offset: 192)
!126 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "input_id", file: !127, line: 59, size: 64, elements: !128)
!127 = !DIFile(filename: "./include/uapi/linux/input.h", directory: "/home/lizy2001/genbc/linux")
!128 = !{!129, !133, !134, !135}
!129 = !DIDerivedType(tag: DW_TAG_member, name: "bustype", scope: !126, file: !127, line: 60, baseType: !130, size: 16)
!130 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u16", file: !131, line: 24, baseType: !132)
!131 = !DIFile(filename: "./include/uapi/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!132 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!133 = !DIDerivedType(tag: DW_TAG_member, name: "vendor", scope: !126, file: !127, line: 61, baseType: !130, size: 16, offset: 16)
!134 = !DIDerivedType(tag: DW_TAG_member, name: "product", scope: !126, file: !127, line: 62, baseType: !130, size: 16, offset: 32)
!135 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !126, file: !127, line: 63, baseType: !130, size: 16, offset: 48)
!136 = !DIDerivedType(tag: DW_TAG_member, name: "propbit", scope: !120, file: !86, line: 137, baseType: !137, size: 64, offset: 256)
!137 = !DICompositeType(tag: DW_TAG_array_type, baseType: !138, size: 64, elements: !139)
!138 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!139 = !{!140}
!140 = !DISubrange(count: 1)
!141 = !DIDerivedType(tag: DW_TAG_member, name: "evbit", scope: !120, file: !86, line: 139, baseType: !137, size: 64, offset: 320)
!142 = !DIDerivedType(tag: DW_TAG_member, name: "keybit", scope: !120, file: !86, line: 140, baseType: !143, size: 768, offset: 384)
!143 = !DICompositeType(tag: DW_TAG_array_type, baseType: !138, size: 768, elements: !144)
!144 = !{!145}
!145 = !DISubrange(count: 12)
!146 = !DIDerivedType(tag: DW_TAG_member, name: "relbit", scope: !120, file: !86, line: 141, baseType: !137, size: 64, offset: 1152)
!147 = !DIDerivedType(tag: DW_TAG_member, name: "absbit", scope: !120, file: !86, line: 142, baseType: !137, size: 64, offset: 1216)
!148 = !DIDerivedType(tag: DW_TAG_member, name: "mscbit", scope: !120, file: !86, line: 143, baseType: !137, size: 64, offset: 1280)
!149 = !DIDerivedType(tag: DW_TAG_member, name: "ledbit", scope: !120, file: !86, line: 144, baseType: !137, size: 64, offset: 1344)
!150 = !DIDerivedType(tag: DW_TAG_member, name: "sndbit", scope: !120, file: !86, line: 145, baseType: !137, size: 64, offset: 1408)
!151 = !DIDerivedType(tag: DW_TAG_member, name: "ffbit", scope: !120, file: !86, line: 146, baseType: !152, size: 128, offset: 1472)
!152 = !DICompositeType(tag: DW_TAG_array_type, baseType: !138, size: 128, elements: !153)
!153 = !{!154}
!154 = !DISubrange(count: 2)
!155 = !DIDerivedType(tag: DW_TAG_member, name: "swbit", scope: !120, file: !86, line: 147, baseType: !137, size: 64, offset: 1600)
!156 = !DIDerivedType(tag: DW_TAG_member, name: "hint_events_per_packet", scope: !120, file: !86, line: 149, baseType: !7, size: 32, offset: 1664)
!157 = !DIDerivedType(tag: DW_TAG_member, name: "keycodemax", scope: !120, file: !86, line: 151, baseType: !7, size: 32, offset: 1696)
!158 = !DIDerivedType(tag: DW_TAG_member, name: "keycodesize", scope: !120, file: !86, line: 152, baseType: !7, size: 32, offset: 1728)
!159 = !DIDerivedType(tag: DW_TAG_member, name: "keycode", scope: !120, file: !86, line: 153, baseType: !111, size: 64, offset: 1792)
!160 = !DIDerivedType(tag: DW_TAG_member, name: "setkeycode", scope: !120, file: !86, line: 155, baseType: !161, size: 64, offset: 1856)
!161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !162, size: 64)
!162 = !DISubroutineType(types: !163)
!163 = !{!113, !119, !164, !179}
!164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !165, size: 64)
!165 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !166)
!166 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "input_keymap_entry", file: !127, line: 114, size: 320, elements: !167)
!167 = !{!168, !171, !172, !173, !175}
!168 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !166, file: !127, line: 116, baseType: !169, size: 8)
!169 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u8", file: !131, line: 21, baseType: !170)
!170 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!171 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !166, file: !127, line: 117, baseType: !169, size: 8, offset: 8)
!172 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !166, file: !127, line: 118, baseType: !130, size: 16, offset: 16)
!173 = !DIDerivedType(tag: DW_TAG_member, name: "keycode", scope: !166, file: !127, line: 119, baseType: !174, size: 32, offset: 32)
!174 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u32", file: !131, line: 27, baseType: !7)
!175 = !DIDerivedType(tag: DW_TAG_member, name: "scancode", scope: !166, file: !127, line: 120, baseType: !176, size: 256, offset: 64)
!176 = !DICompositeType(tag: DW_TAG_array_type, baseType: !169, size: 256, elements: !177)
!177 = !{!178}
!178 = !DISubrange(count: 32)
!179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!180 = !DIDerivedType(tag: DW_TAG_member, name: "getkeycode", scope: !120, file: !86, line: 158, baseType: !181, size: 64, offset: 1920)
!181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !182, size: 64)
!182 = !DISubroutineType(types: !183)
!183 = !{!113, !119, !184}
!184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !166, size: 64)
!185 = !DIDerivedType(tag: DW_TAG_member, name: "ff", scope: !120, file: !86, line: 161, baseType: !186, size: 64, offset: 1984)
!186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !187, size: 64)
!187 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ff_device", file: !86, line: 534, size: 896, elements: !188)
!188 = !{!189, !258, !262, !266, !272, !273, !277, !278, !279, !316, !317, !318}
!189 = !DIDerivedType(tag: DW_TAG_member, name: "upload", scope: !187, file: !86, line: 535, baseType: !190, size: 64)
!190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !191, size: 64)
!191 = !DISubroutineType(types: !192)
!192 = !{!113, !119, !193, !193}
!193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !194, size: 64)
!194 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ff_effect", file: !127, line: 450, size: 384, elements: !195)
!195 = !{!196, !197, !200, !201, !206, !211}
!196 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !194, file: !127, line: 451, baseType: !130, size: 16)
!197 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !194, file: !127, line: 452, baseType: !198, size: 16, offset: 16)
!198 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s16", file: !131, line: 23, baseType: !199)
!199 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!200 = !DIDerivedType(tag: DW_TAG_member, name: "direction", scope: !194, file: !127, line: 453, baseType: !130, size: 16, offset: 32)
!201 = !DIDerivedType(tag: DW_TAG_member, name: "trigger", scope: !194, file: !127, line: 454, baseType: !202, size: 32, offset: 48)
!202 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ff_trigger", file: !127, line: 316, size: 32, elements: !203)
!203 = !{!204, !205}
!204 = !DIDerivedType(tag: DW_TAG_member, name: "button", scope: !202, file: !127, line: 317, baseType: !130, size: 16)
!205 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !202, file: !127, line: 318, baseType: !130, size: 16, offset: 16)
!206 = !DIDerivedType(tag: DW_TAG_member, name: "replay", scope: !194, file: !127, line: 455, baseType: !207, size: 32, offset: 80)
!207 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ff_replay", file: !127, line: 306, size: 32, elements: !208)
!208 = !{!209, !210}
!209 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !207, file: !127, line: 307, baseType: !130, size: 16)
!210 = !DIDerivedType(tag: DW_TAG_member, name: "delay", scope: !207, file: !127, line: 308, baseType: !130, size: 16, offset: 16)
!211 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !194, file: !127, line: 463, baseType: !212, size: 256, offset: 128)
!212 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !194, file: !127, line: 457, size: 256, elements: !213)
!213 = !{!214, !225, !231, !243, !253}
!214 = !DIDerivedType(tag: DW_TAG_member, name: "constant", scope: !212, file: !127, line: 458, baseType: !215, size: 80)
!215 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ff_constant_effect", file: !127, line: 345, size: 80, elements: !216)
!216 = !{!217, !218}
!217 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !215, file: !127, line: 346, baseType: !198, size: 16)
!218 = !DIDerivedType(tag: DW_TAG_member, name: "envelope", scope: !215, file: !127, line: 347, baseType: !219, size: 64, offset: 16)
!219 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ff_envelope", file: !127, line: 333, size: 64, elements: !220)
!220 = !{!221, !222, !223, !224}
!221 = !DIDerivedType(tag: DW_TAG_member, name: "attack_length", scope: !219, file: !127, line: 334, baseType: !130, size: 16)
!222 = !DIDerivedType(tag: DW_TAG_member, name: "attack_level", scope: !219, file: !127, line: 335, baseType: !130, size: 16, offset: 16)
!223 = !DIDerivedType(tag: DW_TAG_member, name: "fade_length", scope: !219, file: !127, line: 336, baseType: !130, size: 16, offset: 32)
!224 = !DIDerivedType(tag: DW_TAG_member, name: "fade_level", scope: !219, file: !127, line: 337, baseType: !130, size: 16, offset: 48)
!225 = !DIDerivedType(tag: DW_TAG_member, name: "ramp", scope: !212, file: !127, line: 459, baseType: !226, size: 96)
!226 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ff_ramp_effect", file: !127, line: 356, size: 96, elements: !227)
!227 = !{!228, !229, !230}
!228 = !DIDerivedType(tag: DW_TAG_member, name: "start_level", scope: !226, file: !127, line: 357, baseType: !198, size: 16)
!229 = !DIDerivedType(tag: DW_TAG_member, name: "end_level", scope: !226, file: !127, line: 358, baseType: !198, size: 16, offset: 16)
!230 = !DIDerivedType(tag: DW_TAG_member, name: "envelope", scope: !226, file: !127, line: 359, baseType: !219, size: 64, offset: 32)
!231 = !DIDerivedType(tag: DW_TAG_member, name: "periodic", scope: !212, file: !127, line: 460, baseType: !232, size: 256)
!232 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ff_periodic_effect", file: !127, line: 401, size: 256, elements: !233)
!233 = !{!234, !235, !236, !237, !238, !239, !240, !241}
!234 = !DIDerivedType(tag: DW_TAG_member, name: "waveform", scope: !232, file: !127, line: 402, baseType: !130, size: 16)
!235 = !DIDerivedType(tag: DW_TAG_member, name: "period", scope: !232, file: !127, line: 403, baseType: !130, size: 16, offset: 16)
!236 = !DIDerivedType(tag: DW_TAG_member, name: "magnitude", scope: !232, file: !127, line: 404, baseType: !198, size: 16, offset: 32)
!237 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !232, file: !127, line: 405, baseType: !198, size: 16, offset: 48)
!238 = !DIDerivedType(tag: DW_TAG_member, name: "phase", scope: !232, file: !127, line: 406, baseType: !130, size: 16, offset: 64)
!239 = !DIDerivedType(tag: DW_TAG_member, name: "envelope", scope: !232, file: !127, line: 408, baseType: !219, size: 64, offset: 80)
!240 = !DIDerivedType(tag: DW_TAG_member, name: "custom_len", scope: !232, file: !127, line: 410, baseType: !174, size: 32, offset: 160)
!241 = !DIDerivedType(tag: DW_TAG_member, name: "custom_data", scope: !232, file: !127, line: 411, baseType: !242, size: 64, offset: 192)
!242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !198, size: 64)
!243 = !DIDerivedType(tag: DW_TAG_member, name: "condition", scope: !212, file: !127, line: 461, baseType: !244, size: 192)
!244 = !DICompositeType(tag: DW_TAG_array_type, baseType: !245, size: 192, elements: !153)
!245 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ff_condition_effect", file: !127, line: 372, size: 96, elements: !246)
!246 = !{!247, !248, !249, !250, !251, !252}
!247 = !DIDerivedType(tag: DW_TAG_member, name: "right_saturation", scope: !245, file: !127, line: 373, baseType: !130, size: 16)
!248 = !DIDerivedType(tag: DW_TAG_member, name: "left_saturation", scope: !245, file: !127, line: 374, baseType: !130, size: 16, offset: 16)
!249 = !DIDerivedType(tag: DW_TAG_member, name: "right_coeff", scope: !245, file: !127, line: 376, baseType: !198, size: 16, offset: 32)
!250 = !DIDerivedType(tag: DW_TAG_member, name: "left_coeff", scope: !245, file: !127, line: 377, baseType: !198, size: 16, offset: 48)
!251 = !DIDerivedType(tag: DW_TAG_member, name: "deadband", scope: !245, file: !127, line: 379, baseType: !130, size: 16, offset: 64)
!252 = !DIDerivedType(tag: DW_TAG_member, name: "center", scope: !245, file: !127, line: 380, baseType: !198, size: 16, offset: 80)
!253 = !DIDerivedType(tag: DW_TAG_member, name: "rumble", scope: !212, file: !127, line: 462, baseType: !254, size: 32)
!254 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ff_rumble_effect", file: !127, line: 422, size: 32, elements: !255)
!255 = !{!256, !257}
!256 = !DIDerivedType(tag: DW_TAG_member, name: "strong_magnitude", scope: !254, file: !127, line: 423, baseType: !130, size: 16)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "weak_magnitude", scope: !254, file: !127, line: 424, baseType: !130, size: 16, offset: 16)
!258 = !DIDerivedType(tag: DW_TAG_member, name: "erase", scope: !187, file: !86, line: 537, baseType: !259, size: 64, offset: 64)
!259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !260, size: 64)
!260 = !DISubroutineType(types: !261)
!261 = !{!113, !119, !113}
!262 = !DIDerivedType(tag: DW_TAG_member, name: "playback", scope: !187, file: !86, line: 539, baseType: !263, size: 64, offset: 128)
!263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !264, size: 64)
!264 = !DISubroutineType(types: !265)
!265 = !{!113, !119, !113, !113}
!266 = !DIDerivedType(tag: DW_TAG_member, name: "set_gain", scope: !187, file: !86, line: 540, baseType: !267, size: 64, offset: 192)
!267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !268, size: 64)
!268 = !DISubroutineType(types: !269)
!269 = !{null, !119, !270}
!270 = !DIDerivedType(tag: DW_TAG_typedef, name: "u16", file: !271, line: 19, baseType: !130)
!271 = !DIFile(filename: "./include/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!272 = !DIDerivedType(tag: DW_TAG_member, name: "set_autocenter", scope: !187, file: !86, line: 541, baseType: !267, size: 64, offset: 256)
!273 = !DIDerivedType(tag: DW_TAG_member, name: "destroy", scope: !187, file: !86, line: 543, baseType: !274, size: 64, offset: 320)
!274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !275, size: 64)
!275 = !DISubroutineType(types: !276)
!276 = !{null, !186}
!277 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !187, file: !86, line: 545, baseType: !111, size: 64, offset: 384)
!278 = !DIDerivedType(tag: DW_TAG_member, name: "ffbit", scope: !187, file: !86, line: 547, baseType: !152, size: 128, offset: 448)
!279 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !187, file: !86, line: 549, baseType: !280, size: 192, offset: 576)
!280 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mutex", file: !281, line: 53, size: 192, elements: !282)
!281 = !DIFile(filename: "./include/linux/mutex.h", directory: "/home/lizy2001/genbc/linux")
!282 = !{!283, !294, !310}
!283 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !280, file: !281, line: 54, baseType: !284, size: 64)
!284 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_long_t", file: !285, line: 13, baseType: !286)
!285 = !DIFile(filename: "./include/asm-generic/atomic-long.h", directory: "/home/lizy2001/genbc/linux")
!286 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic64_t", file: !287, line: 175, baseType: !288)
!287 = !DIFile(filename: "./include/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!288 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !287, line: 173, size: 64, elements: !289)
!289 = !{!290}
!290 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !288, file: !287, line: 174, baseType: !291, size: 64)
!291 = !DIDerivedType(tag: DW_TAG_typedef, name: "s64", file: !271, line: 22, baseType: !292)
!292 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s64", file: !131, line: 30, baseType: !293)
!293 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!294 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !280, file: !281, line: 55, baseType: !295, offset: 64)
!295 = !DIDerivedType(tag: DW_TAG_typedef, name: "spinlock_t", file: !296, line: 83, baseType: !297)
!296 = !DIFile(filename: "./include/linux/spinlock_types.h", directory: "/home/lizy2001/genbc/linux")
!297 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spinlock", file: !296, line: 71, elements: !298)
!298 = !{!299}
!299 = !DIDerivedType(tag: DW_TAG_member, scope: !297, file: !296, line: 72, baseType: !300)
!300 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !297, file: !296, line: 72, elements: !301)
!301 = !{!302}
!302 = !DIDerivedType(tag: DW_TAG_member, name: "rlock", scope: !300, file: !296, line: 73, baseType: !303)
!303 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raw_spinlock", file: !296, line: 20, elements: !304)
!304 = !{!305}
!305 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !303, file: !296, line: 21, baseType: !306)
!306 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_spinlock_t", file: !307, line: 25, baseType: !308)
!307 = !DIFile(filename: "./include/linux/spinlock_types_up.h", directory: "/home/lizy2001/genbc/linux")
!308 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !307, line: 25, elements: !309)
!309 = !{}
!310 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !280, file: !281, line: 59, baseType: !311, size: 128, offset: 64)
!311 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_head", file: !287, line: 178, size: 128, elements: !312)
!312 = !{!313, !315}
!313 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !311, file: !287, line: 179, baseType: !314, size: 64)
!314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !311, size: 64)
!315 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !311, file: !287, line: 179, baseType: !314, size: 64, offset: 64)
!316 = !DIDerivedType(tag: DW_TAG_member, name: "max_effects", scope: !187, file: !86, line: 551, baseType: !113, size: 32, offset: 768)
!317 = !DIDerivedType(tag: DW_TAG_member, name: "effects", scope: !187, file: !86, line: 552, baseType: !193, size: 64, offset: 832)
!318 = !DIDerivedType(tag: DW_TAG_member, name: "effect_owners", scope: !187, file: !86, line: 553, baseType: !319, offset: 896)
!319 = !DICompositeType(tag: DW_TAG_array_type, baseType: !320, elements: !2271)
!320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !321, size: 64)
!321 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file", file: !31, line: 916, size: 1856, align: 32, elements: !322)
!322 = !{!323, !341, !3027, !3028, !3029, !3030, !3031, !3032, !3033, !3034, !3035, !3036, !3045, !3046, !3055, !3056, !3057, !3058, !3059, !3060, !3061}
!323 = !DIDerivedType(tag: DW_TAG_member, name: "f_u", scope: !321, file: !31, line: 920, baseType: !324, size: 128)
!324 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !321, file: !31, line: 917, size: 128, elements: !325)
!325 = !{!326, !332}
!326 = !DIDerivedType(tag: DW_TAG_member, name: "fu_llist", scope: !324, file: !31, line: 918, baseType: !327, size: 64)
!327 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "llist_node", file: !328, line: 58, size: 64, elements: !329)
!328 = !DIFile(filename: "./include/linux/llist.h", directory: "/home/lizy2001/genbc/linux")
!329 = !{!330}
!330 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !327, file: !328, line: 59, baseType: !331, size: 64)
!331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !327, size: 64)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "fu_rcuhead", scope: !324, file: !31, line: 919, baseType: !333, size: 128, align: 64)
!333 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "callback_head", file: !287, line: 216, size: 128, align: 64, elements: !334)
!334 = !{!335, !337}
!335 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !333, file: !287, line: 217, baseType: !336, size: 64)
!336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !333, size: 64)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !333, file: !287, line: 218, baseType: !338, size: 64, offset: 64)
!338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !339, size: 64)
!339 = !DISubroutineType(types: !340)
!340 = !{null, !336}
!341 = !DIDerivedType(tag: DW_TAG_member, name: "f_path", scope: !321, file: !31, line: 921, baseType: !342, size: 128, offset: 128)
!342 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "path", file: !343, line: 8, size: 128, elements: !344)
!343 = !DIFile(filename: "./include/linux/path.h", directory: "/home/lizy2001/genbc/linux")
!344 = !{!345, !349}
!345 = !DIDerivedType(tag: DW_TAG_member, name: "mnt", scope: !342, file: !343, line: 9, baseType: !346, size: 64)
!346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !347, size: 64)
!347 = !DICompositeType(tag: DW_TAG_structure_type, name: "vfsmount", file: !348, line: 18, flags: DIFlagFwdDecl)
!348 = !DIFile(filename: "./include/linux/dcache.h", directory: "/home/lizy2001/genbc/linux")
!349 = !DIDerivedType(tag: DW_TAG_member, name: "dentry", scope: !342, file: !343, line: 10, baseType: !350, size: 64, offset: 64)
!350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !351, size: 64)
!351 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry", file: !348, line: 89, size: 1536, elements: !352)
!352 = !{!353, !354, !364, !372, !373, !392, !2996, !2998, !3010, !3011, !3012, !3013, !3014, !3019, !3020, !3021}
!353 = !DIDerivedType(tag: DW_TAG_member, name: "d_flags", scope: !351, file: !348, line: 91, baseType: !7, size: 32)
!354 = !DIDerivedType(tag: DW_TAG_member, name: "d_seq", scope: !351, file: !348, line: 92, baseType: !355, size: 32, offset: 32)
!355 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_spinlock_t", file: !356, line: 277, baseType: !357)
!356 = !DIFile(filename: "./include/linux/seqlock.h", directory: "/home/lizy2001/genbc/linux")
!357 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_spinlock", file: !356, line: 277, size: 32, elements: !358)
!358 = !{!359}
!359 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !357, file: !356, line: 277, baseType: !360, size: 32)
!360 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_t", file: !356, line: 70, baseType: !361)
!361 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount", file: !356, line: 65, size: 32, elements: !362)
!362 = !{!363}
!363 = !DIDerivedType(tag: DW_TAG_member, name: "sequence", scope: !361, file: !356, line: 66, baseType: !7, size: 32)
!364 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !351, file: !348, line: 93, baseType: !365, size: 128, offset: 64)
!365 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_node", file: !366, line: 38, size: 128, elements: !367)
!366 = !DIFile(filename: "./include/linux/list_bl.h", directory: "/home/lizy2001/genbc/linux")
!367 = !{!368, !370}
!368 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !365, file: !366, line: 39, baseType: !369, size: 64)
!369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !365, size: 64)
!370 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !365, file: !366, line: 39, baseType: !371, size: 64, offset: 64)
!371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !369, size: 64)
!372 = !DIDerivedType(tag: DW_TAG_member, name: "d_parent", scope: !351, file: !348, line: 94, baseType: !350, size: 64, offset: 192)
!373 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !351, file: !348, line: 95, baseType: !374, size: 128, offset: 256)
!374 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qstr", file: !348, line: 47, size: 128, elements: !375)
!375 = !{!376, !389}
!376 = !DIDerivedType(tag: DW_TAG_member, scope: !374, file: !348, line: 48, baseType: !377, size: 64)
!377 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !374, file: !348, line: 48, size: 64, elements: !378)
!378 = !{!379, !385}
!379 = !DIDerivedType(tag: DW_TAG_member, scope: !377, file: !348, line: 49, baseType: !380, size: 64)
!380 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !377, file: !348, line: 49, size: 64, elements: !381)
!381 = !{!382, !384}
!382 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !380, file: !348, line: 50, baseType: !383, size: 32)
!383 = !DIDerivedType(tag: DW_TAG_typedef, name: "u32", file: !271, line: 21, baseType: !174)
!384 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !380, file: !348, line: 50, baseType: !383, size: 32, offset: 32)
!385 = !DIDerivedType(tag: DW_TAG_member, name: "hash_len", scope: !377, file: !348, line: 52, baseType: !386, size: 64)
!386 = !DIDerivedType(tag: DW_TAG_typedef, name: "u64", file: !271, line: 23, baseType: !387)
!387 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u64", file: !131, line: 31, baseType: !388)
!388 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!389 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !374, file: !348, line: 54, baseType: !390, size: 64, offset: 64)
!390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !391, size: 64)
!391 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !170)
!392 = !DIDerivedType(tag: DW_TAG_member, name: "d_inode", scope: !351, file: !348, line: 96, baseType: !393, size: 64, offset: 384)
!393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !394, size: 64)
!394 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode", file: !31, line: 610, size: 4224, elements: !395)
!395 = !{!396, !398, !399, !408, !415, !416, !570, !2699, !2700, !2701, !2707, !2708, !2709, !2710, !2711, !2712, !2713, !2714, !2715, !2716, !2717, !2718, !2719, !2720, !2721, !2722, !2723, !2724, !2725, !2726, !2731, !2732, !2733, !2734, !2735, !2736, !2737, !2972, !2980, !2981, !2982, !2992, !2993, !2994, !2995}
!396 = !DIDerivedType(tag: DW_TAG_member, name: "i_mode", scope: !394, file: !31, line: 611, baseType: !397, size: 16)
!397 = !DIDerivedType(tag: DW_TAG_typedef, name: "umode_t", file: !287, line: 19, baseType: !132)
!398 = !DIDerivedType(tag: DW_TAG_member, name: "i_opflags", scope: !394, file: !31, line: 612, baseType: !132, size: 16, offset: 16)
!399 = !DIDerivedType(tag: DW_TAG_member, name: "i_uid", scope: !394, file: !31, line: 613, baseType: !400, size: 32, offset: 32)
!400 = !DIDerivedType(tag: DW_TAG_typedef, name: "kuid_t", file: !401, line: 23, baseType: !402)
!401 = !DIFile(filename: "./include/linux/uidgid.h", directory: "/home/lizy2001/genbc/linux")
!402 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !401, line: 21, size: 32, elements: !403)
!403 = !{!404}
!404 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !402, file: !401, line: 22, baseType: !405, size: 32)
!405 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !287, line: 32, baseType: !406)
!406 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_uid32_t", file: !407, line: 49, baseType: !7)
!407 = !DIFile(filename: "./include/uapi/asm-generic/posix_types.h", directory: "/home/lizy2001/genbc/linux")
!408 = !DIDerivedType(tag: DW_TAG_member, name: "i_gid", scope: !394, file: !31, line: 614, baseType: !409, size: 32, offset: 64)
!409 = !DIDerivedType(tag: DW_TAG_typedef, name: "kgid_t", file: !401, line: 28, baseType: !410)
!410 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !401, line: 26, size: 32, elements: !411)
!411 = !{!412}
!412 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !410, file: !401, line: 27, baseType: !413, size: 32)
!413 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !287, line: 33, baseType: !414)
!414 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_gid32_t", file: !407, line: 50, baseType: !7)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !394, file: !31, line: 615, baseType: !7, size: 32, offset: 96)
!416 = !DIDerivedType(tag: DW_TAG_member, name: "i_op", scope: !394, file: !31, line: 622, baseType: !417, size: 64, offset: 128)
!417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !418, size: 64)
!418 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !419)
!419 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode_operations", file: !31, line: 1864, size: 1536, align: 512, elements: !420)
!420 = !{!421, !425, !438, !442, !448, !453, !459, !463, !467, !471, !475, !476, !482, !486, !511, !540, !550, !556, !561, !565, !566}
!421 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !419, file: !31, line: 1865, baseType: !422, size: 64)
!422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !423, size: 64)
!423 = !DISubroutineType(types: !424)
!424 = !{!350, !393, !350, !7}
!425 = !DIDerivedType(tag: DW_TAG_member, name: "get_link", scope: !419, file: !31, line: 1866, baseType: !426, size: 64, offset: 64)
!426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !427, size: 64)
!427 = !DISubroutineType(types: !428)
!428 = !{!115, !350, !393, !429}
!429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !430, size: 64)
!430 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_call", file: !431, line: 10, size: 128, elements: !432)
!431 = !DIFile(filename: "./include/linux/delayed_call.h", directory: "/home/lizy2001/genbc/linux")
!432 = !{!433, !437}
!433 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !430, file: !431, line: 11, baseType: !434, size: 64)
!434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !435, size: 64)
!435 = !DISubroutineType(types: !436)
!436 = !{null, !111}
!437 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !430, file: !431, line: 12, baseType: !111, size: 64, offset: 64)
!438 = !DIDerivedType(tag: DW_TAG_member, name: "permission", scope: !419, file: !31, line: 1867, baseType: !439, size: 64, offset: 128)
!439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !440, size: 64)
!440 = !DISubroutineType(types: !441)
!441 = !{!113, !393, !113}
!442 = !DIDerivedType(tag: DW_TAG_member, name: "get_acl", scope: !419, file: !31, line: 1868, baseType: !443, size: 64, offset: 192)
!443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !444, size: 64)
!444 = !DISubroutineType(types: !445)
!445 = !{!446, !393, !113}
!446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !447, size: 64)
!447 = !DICompositeType(tag: DW_TAG_structure_type, name: "posix_acl", file: !31, line: 581, flags: DIFlagFwdDecl)
!448 = !DIDerivedType(tag: DW_TAG_member, name: "readlink", scope: !419, file: !31, line: 1870, baseType: !449, size: 64, offset: 256)
!449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !450, size: 64)
!450 = !DISubroutineType(types: !451)
!451 = !{!113, !350, !452, !113}
!452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !117, size: 64)
!453 = !DIDerivedType(tag: DW_TAG_member, name: "create", scope: !419, file: !31, line: 1872, baseType: !454, size: 64, offset: 320)
!454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !455, size: 64)
!455 = !DISubroutineType(types: !456)
!456 = !{!113, !393, !350, !397, !457}
!457 = !DIDerivedType(tag: DW_TAG_typedef, name: "bool", file: !287, line: 30, baseType: !458)
!458 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!459 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !419, file: !31, line: 1873, baseType: !460, size: 64, offset: 384)
!460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !461, size: 64)
!461 = !DISubroutineType(types: !462)
!462 = !{!113, !350, !393, !350}
!463 = !DIDerivedType(tag: DW_TAG_member, name: "unlink", scope: !419, file: !31, line: 1874, baseType: !464, size: 64, offset: 448)
!464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !465, size: 64)
!465 = !DISubroutineType(types: !466)
!466 = !{!113, !393, !350}
!467 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !419, file: !31, line: 1875, baseType: !468, size: 64, offset: 512)
!468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !469, size: 64)
!469 = !DISubroutineType(types: !470)
!470 = !{!113, !393, !350, !115}
!471 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !419, file: !31, line: 1876, baseType: !472, size: 64, offset: 576)
!472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !473, size: 64)
!473 = !DISubroutineType(types: !474)
!474 = !{!113, !393, !350, !397}
!475 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !419, file: !31, line: 1877, baseType: !464, size: 64, offset: 640)
!476 = !DIDerivedType(tag: DW_TAG_member, name: "mknod", scope: !419, file: !31, line: 1878, baseType: !477, size: 64, offset: 704)
!477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !478, size: 64)
!478 = !DISubroutineType(types: !479)
!479 = !{!113, !393, !350, !397, !480}
!480 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !287, line: 16, baseType: !481)
!481 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_dev_t", file: !287, line: 13, baseType: !383)
!482 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !419, file: !31, line: 1879, baseType: !483, size: 64, offset: 768)
!483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !484, size: 64)
!484 = !DISubroutineType(types: !485)
!485 = !{!113, !393, !350, !393, !350, !7}
!486 = !DIDerivedType(tag: DW_TAG_member, name: "setattr", scope: !419, file: !31, line: 1881, baseType: !487, size: 64, offset: 832)
!487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !488, size: 64)
!488 = !DISubroutineType(types: !489)
!489 = !{!113, !350, !490}
!490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !491, size: 64)
!491 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iattr", file: !31, line: 219, size: 640, elements: !492)
!492 = !{!493, !494, !495, !496, !497, !500, !508, !509, !510}
!493 = !DIDerivedType(tag: DW_TAG_member, name: "ia_valid", scope: !491, file: !31, line: 220, baseType: !7, size: 32)
!494 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mode", scope: !491, file: !31, line: 221, baseType: !397, size: 16, offset: 32)
!495 = !DIDerivedType(tag: DW_TAG_member, name: "ia_uid", scope: !491, file: !31, line: 222, baseType: !400, size: 32, offset: 64)
!496 = !DIDerivedType(tag: DW_TAG_member, name: "ia_gid", scope: !491, file: !31, line: 223, baseType: !409, size: 32, offset: 96)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "ia_size", scope: !491, file: !31, line: 224, baseType: !498, size: 64, offset: 128)
!498 = !DIDerivedType(tag: DW_TAG_typedef, name: "loff_t", file: !287, line: 46, baseType: !499)
!499 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_loff_t", file: !407, line: 88, baseType: !293)
!500 = !DIDerivedType(tag: DW_TAG_member, name: "ia_atime", scope: !491, file: !31, line: 225, baseType: !501, size: 128, offset: 192)
!501 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec64", file: !502, line: 13, size: 128, elements: !503)
!502 = !DIFile(filename: "./include/linux/time64.h", directory: "/home/lizy2001/genbc/linux")
!503 = !{!504, !506}
!504 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !501, file: !502, line: 14, baseType: !505, size: 64)
!505 = !DIDerivedType(tag: DW_TAG_typedef, name: "time64_t", file: !502, line: 8, baseType: !292)
!506 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !501, file: !502, line: 15, baseType: !507, size: 64, offset: 64)
!507 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!508 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mtime", scope: !491, file: !31, line: 226, baseType: !501, size: 128, offset: 320)
!509 = !DIDerivedType(tag: DW_TAG_member, name: "ia_ctime", scope: !491, file: !31, line: 227, baseType: !501, size: 128, offset: 448)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "ia_file", scope: !491, file: !31, line: 234, baseType: !320, size: 64, offset: 576)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "getattr", scope: !419, file: !31, line: 1882, baseType: !512, size: 64, offset: 896)
!512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !513, size: 64)
!513 = !DISubroutineType(types: !514)
!514 = !{!113, !515, !517, !383, !7}
!515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !516, size: 64)
!516 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !342)
!517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !518, size: 64)
!518 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kstat", file: !519, line: 22, size: 1152, elements: !520)
!519 = !DIFile(filename: "./include/linux/stat.h", directory: "/home/lizy2001/genbc/linux")
!520 = !{!521, !522, !523, !524, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539}
!521 = !DIDerivedType(tag: DW_TAG_member, name: "result_mask", scope: !518, file: !519, line: 23, baseType: !383, size: 32)
!522 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !518, file: !519, line: 24, baseType: !397, size: 16, offset: 32)
!523 = !DIDerivedType(tag: DW_TAG_member, name: "nlink", scope: !518, file: !519, line: 25, baseType: !7, size: 32, offset: 64)
!524 = !DIDerivedType(tag: DW_TAG_member, name: "blksize", scope: !518, file: !519, line: 26, baseType: !525, size: 32, offset: 96)
!525 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !287, line: 104, baseType: !383)
!526 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !518, file: !519, line: 27, baseType: !386, size: 64, offset: 128)
!527 = !DIDerivedType(tag: DW_TAG_member, name: "attributes_mask", scope: !518, file: !519, line: 28, baseType: !386, size: 64, offset: 192)
!528 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !518, file: !519, line: 37, baseType: !386, size: 64, offset: 256)
!529 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !518, file: !519, line: 38, baseType: !480, size: 32, offset: 320)
!530 = !DIDerivedType(tag: DW_TAG_member, name: "rdev", scope: !518, file: !519, line: 39, baseType: !480, size: 32, offset: 352)
!531 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !518, file: !519, line: 40, baseType: !400, size: 32, offset: 384)
!532 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !518, file: !519, line: 41, baseType: !409, size: 32, offset: 416)
!533 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !518, file: !519, line: 42, baseType: !498, size: 64, offset: 448)
!534 = !DIDerivedType(tag: DW_TAG_member, name: "atime", scope: !518, file: !519, line: 43, baseType: !501, size: 128, offset: 512)
!535 = !DIDerivedType(tag: DW_TAG_member, name: "mtime", scope: !518, file: !519, line: 44, baseType: !501, size: 128, offset: 640)
!536 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !518, file: !519, line: 45, baseType: !501, size: 128, offset: 768)
!537 = !DIDerivedType(tag: DW_TAG_member, name: "btime", scope: !518, file: !519, line: 46, baseType: !501, size: 128, offset: 896)
!538 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !518, file: !519, line: 47, baseType: !386, size: 64, offset: 1024)
!539 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_id", scope: !518, file: !519, line: 48, baseType: !386, size: 64, offset: 1088)
!540 = !DIDerivedType(tag: DW_TAG_member, name: "listxattr", scope: !419, file: !31, line: 1883, baseType: !541, size: 64, offset: 960)
!541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !542, size: 64)
!542 = !DISubroutineType(types: !543)
!543 = !{!544, !350, !452, !547}
!544 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !287, line: 60, baseType: !545)
!545 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ssize_t", file: !407, line: 73, baseType: !546)
!546 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_long_t", file: !407, line: 15, baseType: !507)
!547 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !287, line: 55, baseType: !548)
!548 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_size_t", file: !407, line: 72, baseType: !549)
!549 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ulong_t", file: !407, line: 16, baseType: !138)
!550 = !DIDerivedType(tag: DW_TAG_member, name: "fiemap", scope: !419, file: !31, line: 1884, baseType: !551, size: 64, offset: 1024)
!551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !552, size: 64)
!552 = !DISubroutineType(types: !553)
!553 = !{!113, !393, !554, !386, !386}
!554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !555, size: 64)
!555 = !DICompositeType(tag: DW_TAG_structure_type, name: "fiemap_extent_info", file: !31, line: 50, flags: DIFlagFwdDecl)
!556 = !DIDerivedType(tag: DW_TAG_member, name: "update_time", scope: !419, file: !31, line: 1886, baseType: !557, size: 64, offset: 1088)
!557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !558, size: 64)
!558 = !DISubroutineType(types: !559)
!559 = !{!113, !393, !560, !113}
!560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !501, size: 64)
!561 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_open", scope: !419, file: !31, line: 1887, baseType: !562, size: 64, offset: 1152)
!562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !563, size: 64)
!563 = !DISubroutineType(types: !564)
!564 = !{!113, !393, !350, !320, !7, !397}
!565 = !DIDerivedType(tag: DW_TAG_member, name: "tmpfile", scope: !419, file: !31, line: 1890, baseType: !472, size: 64, offset: 1216)
!566 = !DIDerivedType(tag: DW_TAG_member, name: "set_acl", scope: !419, file: !31, line: 1891, baseType: !567, size: 64, offset: 1280)
!567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !568, size: 64)
!568 = !DISubroutineType(types: !569)
!569 = !{!113, !393, !446, !113}
!570 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb", scope: !394, file: !31, line: 623, baseType: !571, size: 64, offset: 192)
!571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !572, size: 64)
!572 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_block", file: !31, line: 1416, size: 9472, elements: !573)
!573 = !{!574, !575, !576, !577, !578, !579, !631, !2307, !2389, !2472, !2476, !2477, !2478, !2479, !2480, !2481, !2482, !2483, !2488, !2492, !2493, !2496, !2497, !2500, !2501, !2502, !2543, !2569, !2570, !2571, !2572, !2573, !2574, !2577, !2579, !2586, !2587, !2589, !2590, !2591, !2650, !2651, !2666, !2667, !2668, !2669, !2670, !2673, !2674, !2675, !2690, !2691, !2692, !2693, !2694, !2695, !2696, !2697, !2698}
!574 = !DIDerivedType(tag: DW_TAG_member, name: "s_list", scope: !572, file: !31, line: 1417, baseType: !311, size: 128)
!575 = !DIDerivedType(tag: DW_TAG_member, name: "s_dev", scope: !572, file: !31, line: 1418, baseType: !480, size: 32, offset: 128)
!576 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize_bits", scope: !572, file: !31, line: 1419, baseType: !170, size: 8, offset: 160)
!577 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize", scope: !572, file: !31, line: 1420, baseType: !138, size: 64, offset: 192)
!578 = !DIDerivedType(tag: DW_TAG_member, name: "s_maxbytes", scope: !572, file: !31, line: 1421, baseType: !498, size: 64, offset: 256)
!579 = !DIDerivedType(tag: DW_TAG_member, name: "s_type", scope: !572, file: !31, line: 1422, baseType: !580, size: 64, offset: 320)
!580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !581, size: 64)
!581 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_system_type", file: !31, line: 2228, size: 576, elements: !582)
!582 = !{!583, !584, !585, !592, !596, !600, !604, !608, !609, !619, !622, !623, !624, !628, !629, !630}
!583 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !581, file: !31, line: 2229, baseType: !115, size: 64)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "fs_flags", scope: !581, file: !31, line: 2230, baseType: !113, size: 32, offset: 64)
!585 = !DIDerivedType(tag: DW_TAG_member, name: "init_fs_context", scope: !581, file: !31, line: 2238, baseType: !586, size: 64, offset: 128)
!586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !587, size: 64)
!587 = !DISubroutineType(types: !588)
!588 = !{!113, !589}
!589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !590, size: 64)
!590 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_context", file: !591, line: 28, flags: DIFlagFwdDecl)
!591 = !DIFile(filename: "./include/linux/kernfs.h", directory: "/home/lizy2001/genbc/linux")
!592 = !DIDerivedType(tag: DW_TAG_member, name: "parameters", scope: !581, file: !31, line: 2239, baseType: !593, size: 64, offset: 192)
!593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !594, size: 64)
!594 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !595)
!595 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_parameter_spec", file: !31, line: 70, flags: DIFlagFwdDecl)
!596 = !DIDerivedType(tag: DW_TAG_member, name: "mount", scope: !581, file: !31, line: 2240, baseType: !597, size: 64, offset: 256)
!597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !598, size: 64)
!598 = !DISubroutineType(types: !599)
!599 = !{!350, !580, !113, !115, !111}
!600 = !DIDerivedType(tag: DW_TAG_member, name: "kill_sb", scope: !581, file: !31, line: 2242, baseType: !601, size: 64, offset: 320)
!601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !602, size: 64)
!602 = !DISubroutineType(types: !603)
!603 = !{null, !571}
!604 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !581, file: !31, line: 2243, baseType: !605, size: 64, offset: 384)
!605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !606, size: 64)
!606 = !DICompositeType(tag: DW_TAG_structure_type, name: "module", file: !607, line: 76, flags: DIFlagFwdDecl)
!607 = !DIFile(filename: "./arch/x86/include/asm/alternative.h", directory: "/home/lizy2001/genbc/linux")
!608 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !581, file: !31, line: 2244, baseType: !580, size: 64, offset: 448)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "fs_supers", scope: !581, file: !31, line: 2245, baseType: !610, size: 64, offset: 512)
!610 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_head", file: !287, line: 182, size: 64, elements: !611)
!611 = !{!612}
!612 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !610, file: !287, line: 183, baseType: !613, size: 64)
!613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !614, size: 64)
!614 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_node", file: !287, line: 186, size: 128, elements: !615)
!615 = !{!616, !617}
!616 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !614, file: !287, line: 187, baseType: !613, size: 64)
!617 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !614, file: !287, line: 187, baseType: !618, size: 64, offset: 64)
!618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !613, size: 64)
!619 = !DIDerivedType(tag: DW_TAG_member, name: "s_lock_key", scope: !581, file: !31, line: 2247, baseType: !620, offset: 576)
!620 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_class_key", file: !621, line: 187, elements: !309)
!621 = !DIFile(filename: "./include/linux/lockdep_types.h", directory: "/home/lizy2001/genbc/linux")
!622 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount_key", scope: !581, file: !31, line: 2248, baseType: !620, offset: 576)
!623 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_key", scope: !581, file: !31, line: 2249, baseType: !620, offset: 576)
!624 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers_key", scope: !581, file: !31, line: 2250, baseType: !625, offset: 576)
!625 = !DICompositeType(tag: DW_TAG_array_type, baseType: !620, elements: !626)
!626 = !{!627}
!627 = !DISubrange(count: 3)
!628 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock_key", scope: !581, file: !31, line: 2252, baseType: !620, offset: 576)
!629 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_key", scope: !581, file: !31, line: 2253, baseType: !620, offset: 576)
!630 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_dir_key", scope: !581, file: !31, line: 2254, baseType: !620, offset: 576)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "s_op", scope: !572, file: !31, line: 1423, baseType: !632, size: 64, offset: 384)
!632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !633, size: 64)
!633 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !634)
!634 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_operations", file: !31, line: 1935, size: 1472, elements: !635)
!635 = !{!636, !640, !644, !645, !649, !655, !659, !660, !661, !665, !669, !670, !671, !672, !678, !683, !684, !727, !728, !729, !730, !2291, !2306}
!636 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_inode", scope: !634, file: !31, line: 1936, baseType: !637, size: 64)
!637 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !638, size: 64)
!638 = !DISubroutineType(types: !639)
!639 = !{!393, !571}
!640 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_inode", scope: !634, file: !31, line: 1937, baseType: !641, size: 64, offset: 64)
!641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !642, size: 64)
!642 = !DISubroutineType(types: !643)
!643 = !{null, !393}
!644 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !634, file: !31, line: 1938, baseType: !641, size: 64, offset: 128)
!645 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_inode", scope: !634, file: !31, line: 1940, baseType: !646, size: 64, offset: 192)
!646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !647, size: 64)
!647 = !DISubroutineType(types: !648)
!648 = !{null, !393, !113}
!649 = !DIDerivedType(tag: DW_TAG_member, name: "write_inode", scope: !634, file: !31, line: 1941, baseType: !650, size: 64, offset: 256)
!650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !651, size: 64)
!651 = !DISubroutineType(types: !652)
!652 = !{!113, !393, !653}
!653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !654, size: 64)
!654 = !DICompositeType(tag: DW_TAG_structure_type, name: "writeback_control", file: !31, line: 289, flags: DIFlagFwdDecl)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "drop_inode", scope: !634, file: !31, line: 1942, baseType: !656, size: 64, offset: 320)
!656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !657, size: 64)
!657 = !DISubroutineType(types: !658)
!658 = !{!113, !393}
!659 = !DIDerivedType(tag: DW_TAG_member, name: "evict_inode", scope: !634, file: !31, line: 1943, baseType: !641, size: 64, offset: 384)
!660 = !DIDerivedType(tag: DW_TAG_member, name: "put_super", scope: !634, file: !31, line: 1944, baseType: !601, size: 64, offset: 448)
!661 = !DIDerivedType(tag: DW_TAG_member, name: "sync_fs", scope: !634, file: !31, line: 1945, baseType: !662, size: 64, offset: 512)
!662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !663, size: 64)
!663 = !DISubroutineType(types: !664)
!664 = !{!113, !571, !113}
!665 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_super", scope: !634, file: !31, line: 1946, baseType: !666, size: 64, offset: 576)
!666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !667, size: 64)
!667 = !DISubroutineType(types: !668)
!668 = !{!113, !571}
!669 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_fs", scope: !634, file: !31, line: 1947, baseType: !666, size: 64, offset: 640)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_super", scope: !634, file: !31, line: 1948, baseType: !666, size: 64, offset: 704)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "unfreeze_fs", scope: !634, file: !31, line: 1949, baseType: !666, size: 64, offset: 768)
!672 = !DIDerivedType(tag: DW_TAG_member, name: "statfs", scope: !634, file: !31, line: 1950, baseType: !673, size: 64, offset: 832)
!673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !674, size: 64)
!674 = !DISubroutineType(types: !675)
!675 = !{!113, !350, !676}
!676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !677, size: 64)
!677 = !DICompositeType(tag: DW_TAG_structure_type, name: "kstatfs", file: !31, line: 57, flags: DIFlagFwdDecl)
!678 = !DIDerivedType(tag: DW_TAG_member, name: "remount_fs", scope: !634, file: !31, line: 1951, baseType: !679, size: 64, offset: 896)
!679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !680, size: 64)
!680 = !DISubroutineType(types: !681)
!681 = !{!113, !571, !682, !452}
!682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !113, size: 64)
!683 = !DIDerivedType(tag: DW_TAG_member, name: "umount_begin", scope: !634, file: !31, line: 1952, baseType: !601, size: 64, offset: 960)
!684 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !634, file: !31, line: 1954, baseType: !685, size: 64, offset: 1024)
!685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !686, size: 64)
!686 = !DISubroutineType(types: !687)
!687 = !{!113, !688, !350}
!688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !689, size: 64)
!689 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seq_file", file: !690, line: 16, size: 896, elements: !691)
!690 = !DIFile(filename: "./include/linux/seq_file.h", directory: "/home/lizy2001/genbc/linux")
!691 = !{!692, !693, !694, !695, !696, !697, !698, !699, !700, !722, !723, !726}
!692 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !689, file: !690, line: 17, baseType: !452, size: 64)
!693 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !689, file: !690, line: 18, baseType: !547, size: 64, offset: 64)
!694 = !DIDerivedType(tag: DW_TAG_member, name: "from", scope: !689, file: !690, line: 19, baseType: !547, size: 64, offset: 128)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !689, file: !690, line: 20, baseType: !547, size: 64, offset: 192)
!696 = !DIDerivedType(tag: DW_TAG_member, name: "pad_until", scope: !689, file: !690, line: 21, baseType: !547, size: 64, offset: 256)
!697 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !689, file: !690, line: 22, baseType: !498, size: 64, offset: 320)
!698 = !DIDerivedType(tag: DW_TAG_member, name: "read_pos", scope: !689, file: !690, line: 23, baseType: !498, size: 64, offset: 384)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !689, file: !690, line: 24, baseType: !280, size: 192, offset: 448)
!700 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !689, file: !690, line: 25, baseType: !701, size: 64, offset: 640)
!701 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !702, size: 64)
!702 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !703)
!703 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seq_operations", file: !690, line: 31, size: 256, elements: !704)
!704 = !{!705, !710, !714, !718}
!705 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !703, file: !690, line: 32, baseType: !706, size: 64)
!706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !707, size: 64)
!707 = !DISubroutineType(types: !708)
!708 = !{!111, !688, !709}
!709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !498, size: 64)
!710 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !703, file: !690, line: 33, baseType: !711, size: 64, offset: 64)
!711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !712, size: 64)
!712 = !DISubroutineType(types: !713)
!713 = !{null, !688, !111}
!714 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !703, file: !690, line: 34, baseType: !715, size: 64, offset: 128)
!715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !716, size: 64)
!716 = !DISubroutineType(types: !717)
!717 = !{!111, !688, !111, !709}
!718 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !703, file: !690, line: 35, baseType: !719, size: 64, offset: 192)
!719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !720, size: 64)
!720 = !DISubroutineType(types: !721)
!721 = !{!113, !688, !111}
!722 = !DIDerivedType(tag: DW_TAG_member, name: "poll_event", scope: !689, file: !690, line: 26, baseType: !113, size: 32, offset: 704)
!723 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !689, file: !690, line: 27, baseType: !724, size: 64, offset: 768)
!724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !725, size: 64)
!725 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !321)
!726 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !689, file: !690, line: 28, baseType: !111, size: 64, offset: 832)
!727 = !DIDerivedType(tag: DW_TAG_member, name: "show_devname", scope: !634, file: !31, line: 1955, baseType: !685, size: 64, offset: 1088)
!728 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !634, file: !31, line: 1956, baseType: !685, size: 64, offset: 1152)
!729 = !DIDerivedType(tag: DW_TAG_member, name: "show_stats", scope: !634, file: !31, line: 1957, baseType: !685, size: 64, offset: 1216)
!730 = !DIDerivedType(tag: DW_TAG_member, name: "bdev_try_to_free_page", scope: !634, file: !31, line: 1963, baseType: !731, size: 64, offset: 1280)
!731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !732, size: 64)
!732 = !DISubroutineType(types: !733)
!733 = !{!113, !571, !734, !757}
!734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !735, size: 64)
!735 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page", file: !736, line: 68, size: 512, align: 128, elements: !737)
!736 = !DIFile(filename: "./include/linux/mm_types.h", directory: "/home/lizy2001/genbc/linux")
!737 = !{!738, !739, !2283, !2290}
!738 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !735, file: !736, line: 69, baseType: !138, size: 64)
!739 = !DIDerivedType(tag: DW_TAG_member, scope: !735, file: !736, line: 77, baseType: !740, size: 320, offset: 64)
!740 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !735, file: !736, line: 77, size: 320, elements: !741)
!741 = !{!742, !961, !966, !994, !1002, !1008, !2275, !2282}
!742 = !DIDerivedType(tag: DW_TAG_member, scope: !740, file: !736, line: 78, baseType: !743, size: 320)
!743 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !740, file: !736, line: 78, size: 320, elements: !744)
!744 = !{!745, !746, !959, !960}
!745 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !743, file: !736, line: 84, baseType: !311, size: 128)
!746 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !743, file: !736, line: 86, baseType: !747, size: 64, offset: 128)
!747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !748, size: 64)
!748 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space", file: !31, line: 451, size: 1216, align: 64, elements: !749)
!749 = !{!750, !751, !759, !760, !765, !780, !789, !790, !791, !792, !952, !953, !956, !957, !958}
!750 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !748, file: !31, line: 452, baseType: !393, size: 64)
!751 = !DIDerivedType(tag: DW_TAG_member, name: "i_pages", scope: !748, file: !31, line: 453, baseType: !752, size: 128, offset: 64)
!752 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xarray", file: !753, line: 292, size: 128, elements: !754)
!753 = !DIFile(filename: "./include/linux/xarray.h", directory: "/home/lizy2001/genbc/linux")
!754 = !{!755, !756, !758}
!755 = !DIDerivedType(tag: DW_TAG_member, name: "xa_lock", scope: !752, file: !753, line: 293, baseType: !295)
!756 = !DIDerivedType(tag: DW_TAG_member, name: "xa_flags", scope: !752, file: !753, line: 295, baseType: !757, size: 32)
!757 = !DIDerivedType(tag: DW_TAG_typedef, name: "gfp_t", file: !287, line: 148, baseType: !7)
!758 = !DIDerivedType(tag: DW_TAG_member, name: "xa_head", scope: !752, file: !753, line: 296, baseType: !111, size: 64, offset: 64)
!759 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !748, file: !31, line: 454, baseType: !757, size: 32, offset: 192)
!760 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_writable", scope: !748, file: !31, line: 455, baseType: !761, size: 32, offset: 224)
!761 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !287, line: 168, baseType: !762)
!762 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !287, line: 166, size: 32, elements: !763)
!763 = !{!764}
!764 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !762, file: !287, line: 167, baseType: !113, size: 32)
!765 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap", scope: !748, file: !31, line: 460, baseType: !766, size: 128, offset: 256)
!766 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root_cached", file: !767, line: 125, size: 128, elements: !768)
!767 = !DIFile(filename: "./include/linux/rbtree.h", directory: "/home/lizy2001/genbc/linux")
!768 = !{!769, !779}
!769 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !766, file: !767, line: 126, baseType: !770, size: 64)
!770 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root", file: !767, line: 31, size: 64, elements: !771)
!771 = !{!772}
!772 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !770, file: !767, line: 32, baseType: !773, size: 64)
!773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !774, size: 64)
!774 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_node", file: !767, line: 24, size: 192, align: 64, elements: !775)
!775 = !{!776, !777, !778}
!776 = !DIDerivedType(tag: DW_TAG_member, name: "__rb_parent_color", scope: !774, file: !767, line: 25, baseType: !138, size: 64)
!777 = !DIDerivedType(tag: DW_TAG_member, name: "rb_right", scope: !774, file: !767, line: 26, baseType: !773, size: 64, offset: 64)
!778 = !DIDerivedType(tag: DW_TAG_member, name: "rb_left", scope: !774, file: !767, line: 27, baseType: !773, size: 64, offset: 128)
!779 = !DIDerivedType(tag: DW_TAG_member, name: "rb_leftmost", scope: !766, file: !767, line: 127, baseType: !773, size: 64, offset: 64)
!780 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_rwsem", scope: !748, file: !31, line: 461, baseType: !781, size: 256, offset: 384)
!781 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rw_semaphore", file: !782, line: 35, size: 256, elements: !783)
!782 = !DIFile(filename: "./include/linux/rwsem.h", directory: "/home/lizy2001/genbc/linux")
!783 = !{!784, !785, !786, !788}
!784 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !781, file: !782, line: 36, baseType: !284, size: 64)
!785 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !781, file: !782, line: 42, baseType: !284, size: 64, offset: 64)
!786 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !781, file: !782, line: 46, baseType: !787, offset: 128)
!787 = !DIDerivedType(tag: DW_TAG_typedef, name: "raw_spinlock_t", file: !296, line: 29, baseType: !303)
!788 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !781, file: !782, line: 47, baseType: !311, size: 128, offset: 128)
!789 = !DIDerivedType(tag: DW_TAG_member, name: "nrpages", scope: !748, file: !31, line: 462, baseType: !138, size: 64, offset: 640)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "nrexceptional", scope: !748, file: !31, line: 463, baseType: !138, size: 64, offset: 704)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "writeback_index", scope: !748, file: !31, line: 464, baseType: !138, size: 64, offset: 768)
!792 = !DIDerivedType(tag: DW_TAG_member, name: "a_ops", scope: !748, file: !31, line: 465, baseType: !793, size: 64, offset: 832)
!793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !794, size: 64)
!794 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !795)
!795 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space_operations", file: !31, line: 367, size: 1408, elements: !796)
!796 = !{!797, !801, !805, !809, !813, !817, !823, !829, !833, !838, !842, !846, !850, !916, !920, !926, !927, !928, !932, !937, !941, !948}
!797 = !DIDerivedType(tag: DW_TAG_member, name: "writepage", scope: !795, file: !31, line: 368, baseType: !798, size: 64)
!798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !799, size: 64)
!799 = !DISubroutineType(types: !800)
!800 = !{!113, !734, !653}
!801 = !DIDerivedType(tag: DW_TAG_member, name: "readpage", scope: !795, file: !31, line: 369, baseType: !802, size: 64, offset: 64)
!802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !803, size: 64)
!803 = !DISubroutineType(types: !804)
!804 = !{!113, !320, !734}
!805 = !DIDerivedType(tag: DW_TAG_member, name: "writepages", scope: !795, file: !31, line: 372, baseType: !806, size: 64, offset: 128)
!806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !807, size: 64)
!807 = !DISubroutineType(types: !808)
!808 = !{!113, !747, !653}
!809 = !DIDerivedType(tag: DW_TAG_member, name: "set_page_dirty", scope: !795, file: !31, line: 375, baseType: !810, size: 64, offset: 192)
!810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !811, size: 64)
!811 = !DISubroutineType(types: !812)
!812 = !{!113, !734}
!813 = !DIDerivedType(tag: DW_TAG_member, name: "readpages", scope: !795, file: !31, line: 381, baseType: !814, size: 64, offset: 256)
!814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !815, size: 64)
!815 = !DISubroutineType(types: !816)
!816 = !{!113, !320, !747, !314, !7}
!817 = !DIDerivedType(tag: DW_TAG_member, name: "readahead", scope: !795, file: !31, line: 383, baseType: !818, size: 64, offset: 320)
!818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !819, size: 64)
!819 = !DISubroutineType(types: !820)
!820 = !{null, !821}
!821 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !822, size: 64)
!822 = !DICompositeType(tag: DW_TAG_structure_type, name: "readahead_control", file: !31, line: 290, flags: DIFlagFwdDecl)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "write_begin", scope: !795, file: !31, line: 385, baseType: !824, size: 64, offset: 384)
!824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !825, size: 64)
!825 = !DISubroutineType(types: !826)
!826 = !{!113, !320, !747, !498, !7, !7, !827, !828}
!827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !734, size: 64)
!828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !111, size: 64)
!829 = !DIDerivedType(tag: DW_TAG_member, name: "write_end", scope: !795, file: !31, line: 388, baseType: !830, size: 64, offset: 448)
!830 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !831, size: 64)
!831 = !DISubroutineType(types: !832)
!832 = !{!113, !320, !747, !498, !7, !7, !734, !111}
!833 = !DIDerivedType(tag: DW_TAG_member, name: "bmap", scope: !795, file: !31, line: 393, baseType: !834, size: 64, offset: 512)
!834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !835, size: 64)
!835 = !DISubroutineType(types: !836)
!836 = !{!837, !747, !837}
!837 = !DIDerivedType(tag: DW_TAG_typedef, name: "sector_t", file: !287, line: 125, baseType: !386)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "invalidatepage", scope: !795, file: !31, line: 394, baseType: !839, size: 64, offset: 576)
!839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !840, size: 64)
!840 = !DISubroutineType(types: !841)
!841 = !{null, !734, !7, !7}
!842 = !DIDerivedType(tag: DW_TAG_member, name: "releasepage", scope: !795, file: !31, line: 395, baseType: !843, size: 64, offset: 640)
!843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !844, size: 64)
!844 = !DISubroutineType(types: !845)
!845 = !{!113, !734, !757}
!846 = !DIDerivedType(tag: DW_TAG_member, name: "freepage", scope: !795, file: !31, line: 396, baseType: !847, size: 64, offset: 704)
!847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !848, size: 64)
!848 = !DISubroutineType(types: !849)
!849 = !{null, !734}
!850 = !DIDerivedType(tag: DW_TAG_member, name: "direct_IO", scope: !795, file: !31, line: 397, baseType: !851, size: 64, offset: 768)
!851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !852, size: 64)
!852 = !DISubroutineType(types: !853)
!853 = !{!544, !854, !874}
!854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !855, size: 64)
!855 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kiocb", file: !31, line: 320, size: 384, elements: !856)
!856 = !{!857, !858, !859, !863, !864, !865, !866, !867}
!857 = !DIDerivedType(tag: DW_TAG_member, name: "ki_filp", scope: !855, file: !31, line: 321, baseType: !320, size: 64)
!858 = !DIDerivedType(tag: DW_TAG_member, name: "ki_pos", scope: !855, file: !31, line: 326, baseType: !498, size: 64, offset: 64)
!859 = !DIDerivedType(tag: DW_TAG_member, name: "ki_complete", scope: !855, file: !31, line: 327, baseType: !860, size: 64, offset: 128)
!860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !861, size: 64)
!861 = !DISubroutineType(types: !862)
!862 = !{null, !854, !507, !507}
!863 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !855, file: !31, line: 328, baseType: !111, size: 64, offset: 192)
!864 = !DIDerivedType(tag: DW_TAG_member, name: "ki_flags", scope: !855, file: !31, line: 329, baseType: !113, size: 32, offset: 256)
!865 = !DIDerivedType(tag: DW_TAG_member, name: "ki_hint", scope: !855, file: !31, line: 330, baseType: !270, size: 16, offset: 288)
!866 = !DIDerivedType(tag: DW_TAG_member, name: "ki_ioprio", scope: !855, file: !31, line: 331, baseType: !270, size: 16, offset: 304)
!867 = !DIDerivedType(tag: DW_TAG_member, scope: !855, file: !31, line: 332, baseType: !868, size: 64, offset: 320)
!868 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !855, file: !31, line: 332, size: 64, elements: !869)
!869 = !{!870, !871}
!870 = !DIDerivedType(tag: DW_TAG_member, name: "ki_cookie", scope: !868, file: !31, line: 333, baseType: !7, size: 32)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "ki_waitq", scope: !868, file: !31, line: 334, baseType: !872, size: 64)
!872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !873, size: 64)
!873 = !DICompositeType(tag: DW_TAG_structure_type, name: "wait_page_queue", file: !31, line: 334, flags: DIFlagFwdDecl)
!874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !875, size: 64)
!875 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iov_iter", file: !876, line: 29, size: 320, elements: !877)
!876 = !DIFile(filename: "./include/linux/uio.h", directory: "/home/lizy2001/genbc/linux")
!877 = !{!878, !879, !880, !881, !907}
!878 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !875, file: !876, line: 35, baseType: !7, size: 32)
!879 = !DIDerivedType(tag: DW_TAG_member, name: "iov_offset", scope: !875, file: !876, line: 36, baseType: !547, size: 64, offset: 64)
!880 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !875, file: !876, line: 37, baseType: !547, size: 64, offset: 128)
!881 = !DIDerivedType(tag: DW_TAG_member, scope: !875, file: !876, line: 38, baseType: !882, size: 64, offset: 192)
!882 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !875, file: !876, line: 38, size: 64, elements: !883)
!883 = !{!884, !892, !899, !903}
!884 = !DIDerivedType(tag: DW_TAG_member, name: "iov", scope: !882, file: !876, line: 39, baseType: !885, size: 64)
!885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !886, size: 64)
!886 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !887)
!887 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iovec", file: !888, line: 17, size: 128, elements: !889)
!888 = !DIFile(filename: "./include/uapi/linux/uio.h", directory: "/home/lizy2001/genbc/linux")
!889 = !{!890, !891}
!890 = !DIDerivedType(tag: DW_TAG_member, name: "iov_base", scope: !887, file: !888, line: 19, baseType: !111, size: 64)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "iov_len", scope: !887, file: !888, line: 20, baseType: !548, size: 64, offset: 64)
!892 = !DIDerivedType(tag: DW_TAG_member, name: "kvec", scope: !882, file: !876, line: 40, baseType: !893, size: 64)
!893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !894, size: 64)
!894 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !895)
!895 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kvec", file: !876, line: 15, size: 128, elements: !896)
!896 = !{!897, !898}
!897 = !DIDerivedType(tag: DW_TAG_member, name: "iov_base", scope: !895, file: !876, line: 16, baseType: !111, size: 64)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "iov_len", scope: !895, file: !876, line: 17, baseType: !547, size: 64, offset: 64)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "bvec", scope: !882, file: !876, line: 41, baseType: !900, size: 64)
!900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !901, size: 64)
!901 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !902)
!902 = !DICompositeType(tag: DW_TAG_structure_type, name: "bio_vec", file: !876, line: 41, flags: DIFlagFwdDecl)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "pipe", scope: !882, file: !876, line: 42, baseType: !904, size: 64)
!904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !905, size: 64)
!905 = !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_inode_info", file: !906, line: 53, flags: DIFlagFwdDecl)
!906 = !DIFile(filename: "./include/linux/sched.h", directory: "/home/lizy2001/genbc/linux")
!907 = !DIDerivedType(tag: DW_TAG_member, scope: !875, file: !876, line: 44, baseType: !908, size: 64, offset: 256)
!908 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !875, file: !876, line: 44, size: 64, elements: !909)
!909 = !{!910, !911}
!910 = !DIDerivedType(tag: DW_TAG_member, name: "nr_segs", scope: !908, file: !876, line: 45, baseType: !138, size: 64)
!911 = !DIDerivedType(tag: DW_TAG_member, scope: !908, file: !876, line: 46, baseType: !912, size: 64)
!912 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !908, file: !876, line: 46, size: 64, elements: !913)
!913 = !{!914, !915}
!914 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !912, file: !876, line: 47, baseType: !7, size: 32)
!915 = !DIDerivedType(tag: DW_TAG_member, name: "start_head", scope: !912, file: !876, line: 48, baseType: !7, size: 32, offset: 32)
!916 = !DIDerivedType(tag: DW_TAG_member, name: "migratepage", scope: !795, file: !31, line: 402, baseType: !917, size: 64, offset: 832)
!917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !918, size: 64)
!918 = !DISubroutineType(types: !919)
!919 = !{!113, !747, !734, !734, !5}
!920 = !DIDerivedType(tag: DW_TAG_member, name: "isolate_page", scope: !795, file: !31, line: 404, baseType: !921, size: 64, offset: 896)
!921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !922, size: 64)
!922 = !DISubroutineType(types: !923)
!923 = !{!457, !734, !924}
!924 = !DIDerivedType(tag: DW_TAG_typedef, name: "isolate_mode_t", file: !925, line: 305, baseType: !7)
!925 = !DIFile(filename: "./include/linux/mmzone.h", directory: "/home/lizy2001/genbc/linux")
!926 = !DIDerivedType(tag: DW_TAG_member, name: "putback_page", scope: !795, file: !31, line: 405, baseType: !847, size: 64, offset: 960)
!927 = !DIDerivedType(tag: DW_TAG_member, name: "launder_page", scope: !795, file: !31, line: 406, baseType: !810, size: 64, offset: 1024)
!928 = !DIDerivedType(tag: DW_TAG_member, name: "is_partially_uptodate", scope: !795, file: !31, line: 407, baseType: !929, size: 64, offset: 1088)
!929 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !930, size: 64)
!930 = !DISubroutineType(types: !931)
!931 = !{!113, !734, !138, !138}
!932 = !DIDerivedType(tag: DW_TAG_member, name: "is_dirty_writeback", scope: !795, file: !31, line: 409, baseType: !933, size: 64, offset: 1152)
!933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !934, size: 64)
!934 = !DISubroutineType(types: !935)
!935 = !{null, !734, !936, !936}
!936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !457, size: 64)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "error_remove_page", scope: !795, file: !31, line: 410, baseType: !938, size: 64, offset: 1216)
!938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !939, size: 64)
!939 = !DISubroutineType(types: !940)
!940 = !{!113, !747, !734}
!941 = !DIDerivedType(tag: DW_TAG_member, name: "swap_activate", scope: !795, file: !31, line: 413, baseType: !942, size: 64, offset: 1280)
!942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !943, size: 64)
!943 = !DISubroutineType(types: !944)
!944 = !{!113, !945, !320, !947}
!945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !946, size: 64)
!946 = !DICompositeType(tag: DW_TAG_structure_type, name: "swap_info_struct", file: !31, line: 61, flags: DIFlagFwdDecl)
!947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !837, size: 64)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "swap_deactivate", scope: !795, file: !31, line: 415, baseType: !949, size: 64, offset: 1344)
!949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !950, size: 64)
!950 = !DISubroutineType(types: !951)
!951 = !{null, !320}
!952 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !748, file: !31, line: 466, baseType: !138, size: 64, offset: 896)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "wb_err", scope: !748, file: !31, line: 467, baseType: !954, size: 32, offset: 960)
!954 = !DIDerivedType(tag: DW_TAG_typedef, name: "errseq_t", file: !955, line: 8, baseType: !383)
!955 = !DIFile(filename: "./include/linux/errseq.h", directory: "/home/lizy2001/genbc/linux")
!956 = !DIDerivedType(tag: DW_TAG_member, name: "private_lock", scope: !748, file: !31, line: 468, baseType: !295, offset: 992)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "private_list", scope: !748, file: !31, line: 469, baseType: !311, size: 128, offset: 1024)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !748, file: !31, line: 470, baseType: !111, size: 64, offset: 1152)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !743, file: !736, line: 87, baseType: !138, size: 64, offset: 192)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !743, file: !736, line: 94, baseType: !138, size: 64, offset: 256)
!961 = !DIDerivedType(tag: DW_TAG_member, scope: !740, file: !736, line: 96, baseType: !962, size: 64)
!962 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !740, file: !736, line: 96, size: 64, elements: !963)
!963 = !{!964}
!964 = !DIDerivedType(tag: DW_TAG_member, name: "dma_addr", scope: !962, file: !736, line: 101, baseType: !965, size: 64)
!965 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_addr_t", file: !287, line: 143, baseType: !386)
!966 = !DIDerivedType(tag: DW_TAG_member, scope: !740, file: !736, line: 103, baseType: !967, size: 320)
!967 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !740, file: !736, line: 103, size: 320, elements: !968)
!968 = !{!969, !979, !982, !983}
!969 = !DIDerivedType(tag: DW_TAG_member, scope: !967, file: !736, line: 104, baseType: !970, size: 128)
!970 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !967, file: !736, line: 104, size: 128, elements: !971)
!971 = !{!972, !973}
!972 = !DIDerivedType(tag: DW_TAG_member, name: "slab_list", scope: !970, file: !736, line: 105, baseType: !311, size: 128)
!973 = !DIDerivedType(tag: DW_TAG_member, scope: !970, file: !736, line: 106, baseType: !974, size: 128)
!974 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !970, file: !736, line: 106, size: 128, elements: !975)
!975 = !{!976, !977, !978}
!976 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !974, file: !736, line: 107, baseType: !734, size: 64)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !974, file: !736, line: 109, baseType: !113, size: 32, offset: 64)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "pobjects", scope: !974, file: !736, line: 110, baseType: !113, size: 32, offset: 96)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "slab_cache", scope: !967, file: !736, line: 117, baseType: !980, size: 64, offset: 128)
!980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !981, size: 64)
!981 = !DICompositeType(tag: DW_TAG_structure_type, name: "kmem_cache", file: !736, line: 117, flags: DIFlagFwdDecl)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "freelist", scope: !967, file: !736, line: 119, baseType: !111, size: 64, offset: 192)
!983 = !DIDerivedType(tag: DW_TAG_member, scope: !967, file: !736, line: 120, baseType: !984, size: 64, offset: 256)
!984 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !967, file: !736, line: 120, size: 64, elements: !985)
!985 = !{!986, !987, !988}
!986 = !DIDerivedType(tag: DW_TAG_member, name: "s_mem", scope: !984, file: !736, line: 121, baseType: !111, size: 64)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "counters", scope: !984, file: !736, line: 122, baseType: !138, size: 64)
!988 = !DIDerivedType(tag: DW_TAG_member, scope: !984, file: !736, line: 123, baseType: !989, size: 32)
!989 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !984, file: !736, line: 123, size: 32, elements: !990)
!990 = !{!991, !992, !993}
!991 = !DIDerivedType(tag: DW_TAG_member, name: "inuse", scope: !989, file: !736, line: 124, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !989, file: !736, line: 125, baseType: !7, size: 15, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !989, file: !736, line: 126, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!994 = !DIDerivedType(tag: DW_TAG_member, scope: !740, file: !736, line: 130, baseType: !995, size: 192)
!995 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !740, file: !736, line: 130, size: 192, elements: !996)
!996 = !{!997, !998, !999, !1000, !1001}
!997 = !DIDerivedType(tag: DW_TAG_member, name: "compound_head", scope: !995, file: !736, line: 131, baseType: !138, size: 64)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "compound_dtor", scope: !995, file: !736, line: 134, baseType: !170, size: 8, offset: 64)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "compound_order", scope: !995, file: !736, line: 135, baseType: !170, size: 8, offset: 72)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "compound_mapcount", scope: !995, file: !736, line: 136, baseType: !761, size: 32, offset: 96)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "compound_nr", scope: !995, file: !736, line: 137, baseType: !7, size: 32, offset: 128)
!1002 = !DIDerivedType(tag: DW_TAG_member, scope: !740, file: !736, line: 139, baseType: !1003, size: 256)
!1003 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !740, file: !736, line: 139, size: 256, elements: !1004)
!1004 = !{!1005, !1006, !1007}
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "_compound_pad_1", scope: !1003, file: !736, line: 140, baseType: !138, size: 64)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "hpage_pinned_refcount", scope: !1003, file: !736, line: 141, baseType: !761, size: 32, offset: 64)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_list", scope: !1003, file: !736, line: 143, baseType: !311, size: 128, offset: 128)
!1008 = !DIDerivedType(tag: DW_TAG_member, scope: !740, file: !736, line: 145, baseType: !1009, size: 256)
!1009 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !740, file: !736, line: 145, size: 256, elements: !1010)
!1010 = !{!1011, !1012, !1015, !1016, !2274}
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_1", scope: !1009, file: !736, line: 146, baseType: !138, size: 64)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "pmd_huge_pte", scope: !1009, file: !736, line: 147, baseType: !1013, size: 64, offset: 64)
!1013 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgtable_t", file: !1014, line: 509, baseType: !734)
!1014 = !DIFile(filename: "./arch/x86/include/asm/pgtable_types.h", directory: "/home/lizy2001/genbc/linux")
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_2", scope: !1009, file: !736, line: 148, baseType: !138, size: 64, offset: 128)
!1016 = !DIDerivedType(tag: DW_TAG_member, scope: !1009, file: !736, line: 149, baseType: !1017, size: 64, offset: 192)
!1017 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1009, file: !736, line: 149, size: 64, elements: !1018)
!1018 = !{!1019, !2273}
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "pt_mm", scope: !1017, file: !736, line: 150, baseType: !1020, size: 64)
!1020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1021, size: 64)
!1021 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_struct", file: !736, line: 388, size: 7296, elements: !1022)
!1022 = !{!1023, !2269}
!1023 = !DIDerivedType(tag: DW_TAG_member, scope: !1021, file: !736, line: 389, baseType: !1024, size: 7296)
!1024 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1021, file: !736, line: 389, size: 7296, elements: !1025)
!1025 = !{!1026, !1064, !1065, !1066, !1070, !1071, !1072, !1073, !1074, !1081, !1082, !1083, !1084, !1085, !1086, !1087, !1088, !1089, !1090, !1091, !1092, !1093, !1094, !1095, !1096, !1097, !1098, !1099, !1100, !1101, !1102, !1103, !1104, !1105, !1106, !1107, !1108, !1109, !1110, !1111, !1115, !1123, !1126, !1164, !1165, !2253, !2254, !2257, !2258, !2259, !2262, !2263, !2264, !2267, !2268}
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !1024, file: !736, line: 390, baseType: !1027, size: 64)
!1027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1028, size: 64)
!1028 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_area_struct", file: !736, line: 305, size: 1472, elements: !1029)
!1029 = !{!1030, !1031, !1032, !1033, !1034, !1035, !1036, !1037, !1044, !1045, !1050, !1051, !1054, !1058, !1059, !1060, !1061, !1062}
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "vm_start", scope: !1028, file: !736, line: 308, baseType: !138, size: 64)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "vm_end", scope: !1028, file: !736, line: 309, baseType: !138, size: 64, offset: 64)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "vm_next", scope: !1028, file: !736, line: 313, baseType: !1027, size: 64, offset: 128)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "vm_prev", scope: !1028, file: !736, line: 313, baseType: !1027, size: 64, offset: 192)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "vm_rb", scope: !1028, file: !736, line: 315, baseType: !774, size: 192, align: 64, offset: 256)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_gap", scope: !1028, file: !736, line: 323, baseType: !138, size: 64, offset: 448)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "vm_mm", scope: !1028, file: !736, line: 327, baseType: !1020, size: 64, offset: 512)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "vm_page_prot", scope: !1028, file: !736, line: 333, baseType: !1038, size: 64, offset: 576)
!1038 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprot_t", file: !1014, line: 284, baseType: !1039)
!1039 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pgprot", file: !1014, line: 284, size: 64, elements: !1040)
!1040 = !{!1041}
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "pgprot", scope: !1039, file: !1014, line: 284, baseType: !1042, size: 64)
!1042 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprotval_t", file: !1043, line: 19, baseType: !138)
!1043 = !DIFile(filename: "./arch/x86/include/asm/pgtable_64_types.h", directory: "/home/lizy2001/genbc/linux")
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "vm_flags", scope: !1028, file: !736, line: 334, baseType: !138, size: 64, offset: 640)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "shared", scope: !1028, file: !736, line: 343, baseType: !1046, size: 256, offset: 704)
!1046 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1028, file: !736, line: 340, size: 256, elements: !1047)
!1047 = !{!1048, !1049}
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !1046, file: !736, line: 341, baseType: !774, size: 192, align: 64)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_last", scope: !1046, file: !736, line: 342, baseType: !138, size: 64, offset: 192)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma_chain", scope: !1028, file: !736, line: 351, baseType: !311, size: 128, offset: 960)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma", scope: !1028, file: !736, line: 353, baseType: !1052, size: 64, offset: 1088)
!1052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1053, size: 64)
!1053 = !DICompositeType(tag: DW_TAG_structure_type, name: "anon_vma", file: !736, line: 353, flags: DIFlagFwdDecl)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !1028, file: !736, line: 356, baseType: !1055, size: 64, offset: 1152)
!1055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1056, size: 64)
!1056 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1057)
!1057 = !DICompositeType(tag: DW_TAG_structure_type, name: "vm_operations_struct", file: !736, line: 356, flags: DIFlagFwdDecl)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "vm_pgoff", scope: !1028, file: !736, line: 359, baseType: !138, size: 64, offset: 1216)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "vm_file", scope: !1028, file: !736, line: 361, baseType: !320, size: 64, offset: 1280)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "vm_private_data", scope: !1028, file: !736, line: 362, baseType: !111, size: 64, offset: 1344)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "swap_readahead_info", scope: !1028, file: !736, line: 365, baseType: !284, size: 64, offset: 1408)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "vm_userfaultfd_ctx", scope: !1028, file: !736, line: 373, baseType: !1063, offset: 1472)
!1063 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_userfaultfd_ctx", file: !736, line: 296, elements: !309)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "mm_rb", scope: !1024, file: !736, line: 391, baseType: !770, size: 64, offset: 64)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache_seqnum", scope: !1024, file: !736, line: 392, baseType: !386, size: 64, offset: 128)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !1024, file: !736, line: 394, baseType: !1067, size: 64, offset: 192)
!1067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1068, size: 64)
!1068 = !DISubroutineType(types: !1069)
!1069 = !{!138, !320, !138, !138, !138, !138}
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_base", scope: !1024, file: !736, line: 398, baseType: !138, size: 64, offset: 256)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_legacy_base", scope: !1024, file: !736, line: 399, baseType: !138, size: 64, offset: 320)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "task_size", scope: !1024, file: !736, line: 405, baseType: !138, size: 64, offset: 384)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "highest_vm_end", scope: !1024, file: !736, line: 406, baseType: !138, size: 64, offset: 448)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !1024, file: !736, line: 407, baseType: !1075, size: 64, offset: 512)
!1075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1076, size: 64)
!1076 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgd_t", file: !1014, line: 286, baseType: !1077)
!1077 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1014, line: 286, size: 64, elements: !1078)
!1078 = !{!1079}
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !1077, file: !1014, line: 286, baseType: !1080, size: 64)
!1080 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgdval_t", file: !1043, line: 18, baseType: !138)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "membarrier_state", scope: !1024, file: !736, line: 416, baseType: !761, size: 32, offset: 576)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "mm_users", scope: !1024, file: !736, line: 428, baseType: !761, size: 32, offset: 608)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "mm_count", scope: !1024, file: !736, line: 437, baseType: !761, size: 32, offset: 640)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "has_pinned", scope: !1024, file: !736, line: 447, baseType: !761, size: 32, offset: 672)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "pgtables_bytes", scope: !1024, file: !736, line: 450, baseType: !284, size: 64, offset: 704)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "map_count", scope: !1024, file: !736, line: 452, baseType: !113, size: 32, offset: 768)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "page_table_lock", scope: !1024, file: !736, line: 454, baseType: !295, offset: 800)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_lock", scope: !1024, file: !736, line: 457, baseType: !781, size: 256, offset: 832)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "mmlist", scope: !1024, file: !736, line: 459, baseType: !311, size: 128, offset: 1088)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_rss", scope: !1024, file: !736, line: 466, baseType: !138, size: 64, offset: 1216)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_vm", scope: !1024, file: !736, line: 467, baseType: !138, size: 64, offset: 1280)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "total_vm", scope: !1024, file: !736, line: 469, baseType: !138, size: 64, offset: 1344)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !1024, file: !736, line: 470, baseType: !138, size: 64, offset: 1408)
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "pinned_vm", scope: !1024, file: !736, line: 471, baseType: !286, size: 64, offset: 1472)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "data_vm", scope: !1024, file: !736, line: 472, baseType: !138, size: 64, offset: 1536)
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "exec_vm", scope: !1024, file: !736, line: 473, baseType: !138, size: 64, offset: 1600)
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm", scope: !1024, file: !736, line: 474, baseType: !138, size: 64, offset: 1664)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "def_flags", scope: !1024, file: !736, line: 475, baseType: !138, size: 64, offset: 1728)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "arg_lock", scope: !1024, file: !736, line: 477, baseType: !295, offset: 1792)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "start_code", scope: !1024, file: !736, line: 478, baseType: !138, size: 64, offset: 1792)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "end_code", scope: !1024, file: !736, line: 478, baseType: !138, size: 64, offset: 1856)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "start_data", scope: !1024, file: !736, line: 478, baseType: !138, size: 64, offset: 1920)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "end_data", scope: !1024, file: !736, line: 478, baseType: !138, size: 64, offset: 1984)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "start_brk", scope: !1024, file: !736, line: 479, baseType: !138, size: 64, offset: 2048)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "brk", scope: !1024, file: !736, line: 479, baseType: !138, size: 64, offset: 2112)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "start_stack", scope: !1024, file: !736, line: 479, baseType: !138, size: 64, offset: 2176)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "arg_start", scope: !1024, file: !736, line: 480, baseType: !138, size: 64, offset: 2240)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "arg_end", scope: !1024, file: !736, line: 480, baseType: !138, size: 64, offset: 2304)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "env_start", scope: !1024, file: !736, line: 480, baseType: !138, size: 64, offset: 2368)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "env_end", scope: !1024, file: !736, line: 480, baseType: !138, size: 64, offset: 2432)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "saved_auxv", scope: !1024, file: !736, line: 482, baseType: !1112, size: 2816, offset: 2496)
!1112 = !DICompositeType(tag: DW_TAG_array_type, baseType: !138, size: 2816, elements: !1113)
!1113 = !{!1114}
!1114 = !DISubrange(count: 44)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "rss_stat", scope: !1024, file: !736, line: 488, baseType: !1116, size: 256, offset: 5312)
!1116 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_rss_stat", file: !1117, line: 60, size: 256, elements: !1118)
!1117 = !DIFile(filename: "./include/linux/mm_types_task.h", directory: "/home/lizy2001/genbc/linux")
!1118 = !{!1119}
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1116, file: !1117, line: 61, baseType: !1120, size: 256)
!1120 = !DICompositeType(tag: DW_TAG_array_type, baseType: !284, size: 256, elements: !1121)
!1121 = !{!1122}
!1122 = !DISubrange(count: 4)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "binfmt", scope: !1024, file: !736, line: 490, baseType: !1124, size: 64, offset: 5568)
!1124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1125, size: 64)
!1125 = !DICompositeType(tag: DW_TAG_structure_type, name: "linux_binfmt", file: !736, line: 490, flags: DIFlagFwdDecl)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1024, file: !736, line: 493, baseType: !1127, size: 896, offset: 5632)
!1127 = !DIDerivedType(tag: DW_TAG_typedef, name: "mm_context_t", file: !1128, line: 53, baseType: !1129)
!1128 = !DIFile(filename: "./arch/x86/include/asm/mmu.h", directory: "/home/lizy2001/genbc/linux")
!1129 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1128, line: 13, size: 896, elements: !1130)
!1130 = !{!1131, !1132, !1133, !1134, !1137, !1138, !1139, !1140, !1160, !1161, !1162}
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_id", scope: !1129, file: !1128, line: 18, baseType: !386, size: 64)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_gen", scope: !1129, file: !1128, line: 28, baseType: !286, size: 64, offset: 64)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "ldt_usr_sem", scope: !1129, file: !1128, line: 31, baseType: !781, size: 256, offset: 128)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "ldt", scope: !1129, file: !1128, line: 32, baseType: !1135, size: 64, offset: 384)
!1135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1136, size: 64)
!1136 = !DICompositeType(tag: DW_TAG_structure_type, name: "ldt_struct", file: !1128, line: 32, flags: DIFlagFwdDecl)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "ia32_compat", scope: !1129, file: !1128, line: 37, baseType: !132, size: 16, offset: 448)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1129, file: !1128, line: 40, baseType: !280, size: 192, offset: 512)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "vdso", scope: !1129, file: !1128, line: 41, baseType: !111, size: 64, offset: 704)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "vdso_image", scope: !1129, file: !1128, line: 42, baseType: !1141, size: 64, offset: 768)
!1141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1142, size: 64)
!1142 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1143)
!1143 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vdso_image", file: !1144, line: 13, size: 896, elements: !1145)
!1144 = !DIFile(filename: "./arch/x86/include/asm/vdso.h", directory: "/home/lizy2001/genbc/linux")
!1145 = !{!1146, !1147, !1148, !1149, !1150, !1151, !1152, !1153, !1154, !1155, !1156, !1157, !1158, !1159}
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1143, file: !1144, line: 14, baseType: !111, size: 64)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1143, file: !1144, line: 15, baseType: !138, size: 64, offset: 64)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "alt", scope: !1143, file: !1144, line: 17, baseType: !138, size: 64, offset: 128)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "alt_len", scope: !1143, file: !1144, line: 17, baseType: !138, size: 64, offset: 192)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_start", scope: !1143, file: !1144, line: 19, baseType: !507, size: 64, offset: 256)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_page", scope: !1143, file: !1144, line: 21, baseType: !507, size: 64, offset: 320)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "sym_pvclock_page", scope: !1143, file: !1144, line: 22, baseType: !507, size: 64, offset: 384)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "sym_hvclock_page", scope: !1143, file: !1144, line: 23, baseType: !507, size: 64, offset: 448)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "sym_timens_page", scope: !1143, file: !1144, line: 24, baseType: !507, size: 64, offset: 512)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "sym_VDSO32_NOTE_MASK", scope: !1143, file: !1144, line: 25, baseType: !507, size: 64, offset: 576)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_sigreturn", scope: !1143, file: !1144, line: 26, baseType: !507, size: 64, offset: 640)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_rt_sigreturn", scope: !1143, file: !1144, line: 27, baseType: !507, size: 64, offset: 704)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_vsyscall", scope: !1143, file: !1144, line: 28, baseType: !507, size: 64, offset: 768)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "sym_int80_landing_pad", scope: !1143, file: !1144, line: 29, baseType: !507, size: 64, offset: 832)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "perf_rdpmc_allowed", scope: !1129, file: !1128, line: 44, baseType: !761, size: 32, offset: 832)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "pkey_allocation_map", scope: !1129, file: !1128, line: 50, baseType: !270, size: 16, offset: 864)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "execute_only_pkey", scope: !1129, file: !1128, line: 51, baseType: !1163, size: 16, offset: 880)
!1163 = !DIDerivedType(tag: DW_TAG_typedef, name: "s16", file: !271, line: 18, baseType: !198)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1024, file: !736, line: 495, baseType: !138, size: 64, offset: 6528)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "core_state", scope: !1024, file: !736, line: 497, baseType: !1166, size: 64, offset: 6592)
!1166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1167, size: 64)
!1167 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_state", file: !736, line: 381, size: 384, elements: !1168)
!1168 = !{!1169, !1170, !2252}
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !1167, file: !736, line: 382, baseType: !761, size: 32)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "dumper", scope: !1167, file: !736, line: 383, baseType: !1171, size: 128, offset: 64)
!1171 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_thread", file: !736, line: 376, size: 128, elements: !1172)
!1172 = !{!1173, !2250}
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !1171, file: !736, line: 377, baseType: !1174, size: 64)
!1174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1175, size: 64)
!1175 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_struct", file: !906, line: 640, size: 48640, elements: !1176)
!1176 = !{!1177, !1183, !1185, !1186, !1192, !1193, !1194, !1195, !1196, !1197, !1198, !1199, !1203, !1221, !1232, !1316, !1317, !1318, !1326, !1327, !1329, !1330, !1331, !1332, !1338, !1339, !1340, !1341, !1342, !1343, !1344, !1345, !1346, !1347, !1348, !1349, !1350, !1351, !1352, !1353, !1416, !1419, !1420, !1421, !1422, !1423, !1424, !1425, !1426, !1427, !1428, !1454, !1456, !1457, !1458, !1470, !1471, !1472, !1473, !1474, !1475, !1481, !1482, !1483, !1484, !1485, !1486, !1487, !1499, !1504, !1686, !1687, !1688, !1689, !1693, !1696, !1699, !1702, !1705, !1708, !1809, !1840, !1841, !1842, !1843, !1844, !1845, !1846, !1847, !1848, !1857, !1858, !1859, !1860, !1861, !1866, !1867, !1868, !1871, !1872, !1875, !1878, !1881, !1884, !1927, !1930, !1931, !2010, !2011, !2014, !2015, !2018, !2019, !2020, !2024, !2025, !2026, !2039, !2040, !2041, !2051, !2056, !2057, !2063, !2064, !2065, !2066, !2067, !2068, !2069, !2070, !2073, !2074, !2075, !2076, !2077, !2078, !2079, !2080, !2081}
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "thread_info", scope: !1175, file: !906, line: 646, baseType: !1178, size: 128)
!1178 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_info", file: !1179, line: 56, size: 128, elements: !1180)
!1179 = !DIFile(filename: "./arch/x86/include/asm/thread_info.h", directory: "/home/lizy2001/genbc/linux")
!1180 = !{!1181, !1182}
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1178, file: !1179, line: 57, baseType: !138, size: 64)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !1178, file: !1179, line: 58, baseType: !383, size: 32, offset: 64)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1175, file: !906, line: 649, baseType: !1184, size: 64, offset: 128)
!1184 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !507)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !1175, file: !906, line: 657, baseType: !111, size: 64, offset: 192)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1175, file: !906, line: 658, baseType: !1187, size: 32, offset: 256)
!1187 = !DIDerivedType(tag: DW_TAG_typedef, name: "refcount_t", file: !1188, line: 113, baseType: !1189)
!1188 = !DIFile(filename: "./include/linux/refcount.h", directory: "/home/lizy2001/genbc/linux")
!1189 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "refcount_struct", file: !1188, line: 111, size: 32, elements: !1190)
!1190 = !{!1191}
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !1189, file: !1188, line: 112, baseType: !761, size: 32)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1175, file: !906, line: 660, baseType: !7, size: 32, offset: 288)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace", scope: !1175, file: !906, line: 661, baseType: !7, size: 32, offset: 320)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1175, file: !906, line: 684, baseType: !113, size: 32, offset: 352)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1175, file: !906, line: 686, baseType: !113, size: 32, offset: 384)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "static_prio", scope: !1175, file: !906, line: 687, baseType: !113, size: 32, offset: 416)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "normal_prio", scope: !1175, file: !906, line: 688, baseType: !113, size: 32, offset: 448)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "rt_priority", scope: !1175, file: !906, line: 689, baseType: !7, size: 32, offset: 480)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "sched_class", scope: !1175, file: !906, line: 691, baseType: !1200, size: 64, offset: 512)
!1200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1201, size: 64)
!1201 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1202)
!1202 = !DICompositeType(tag: DW_TAG_structure_type, name: "sched_class", file: !906, line: 691, flags: DIFlagFwdDecl)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "se", scope: !1175, file: !906, line: 692, baseType: !1204, size: 832, offset: 576)
!1204 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_entity", file: !906, line: 451, size: 832, elements: !1205)
!1205 = !{!1206, !1211, !1212, !1213, !1214, !1215, !1216, !1217, !1218, !1219}
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "load", scope: !1204, file: !906, line: 453, baseType: !1207, size: 128)
!1207 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "load_weight", file: !906, line: 325, size: 128, elements: !1208)
!1208 = !{!1209, !1210}
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1207, file: !906, line: 326, baseType: !138, size: 64)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "inv_weight", scope: !1207, file: !906, line: 327, baseType: !383, size: 32, offset: 64)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "run_node", scope: !1204, file: !906, line: 454, baseType: !774, size: 192, align: 64, offset: 128)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "group_node", scope: !1204, file: !906, line: 455, baseType: !311, size: 128, offset: 320)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1204, file: !906, line: 456, baseType: !7, size: 32, offset: 448)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "exec_start", scope: !1204, file: !906, line: 458, baseType: !386, size: 64, offset: 512)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !1204, file: !906, line: 459, baseType: !386, size: 64, offset: 576)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "vruntime", scope: !1204, file: !906, line: 460, baseType: !386, size: 64, offset: 640)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "prev_sum_exec_runtime", scope: !1204, file: !906, line: 461, baseType: !386, size: 64, offset: 704)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "nr_migrations", scope: !1204, file: !906, line: 463, baseType: !386, size: 64, offset: 768)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "statistics", scope: !1204, file: !906, line: 465, baseType: !1220, offset: 832)
!1220 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_statistics", file: !906, line: 415, elements: !309)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1175, file: !906, line: 693, baseType: !1222, size: 384, offset: 1408)
!1222 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_rt_entity", file: !906, line: 489, size: 384, elements: !1223)
!1223 = !{!1224, !1225, !1226, !1227, !1228, !1229, !1230}
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "run_list", scope: !1222, file: !906, line: 490, baseType: !311, size: 128)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1222, file: !906, line: 491, baseType: !138, size: 64, offset: 128)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_stamp", scope: !1222, file: !906, line: 492, baseType: !138, size: 64, offset: 192)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "time_slice", scope: !1222, file: !906, line: 493, baseType: !7, size: 32, offset: 256)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1222, file: !906, line: 494, baseType: !132, size: 16, offset: 288)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "on_list", scope: !1222, file: !906, line: 495, baseType: !132, size: 16, offset: 304)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !1222, file: !906, line: 497, baseType: !1231, size: 64, offset: 320)
!1231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1222, size: 64)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "dl", scope: !1175, file: !906, line: 697, baseType: !1233, size: 1792, offset: 1792)
!1233 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_dl_entity", file: !906, line: 507, size: 1792, elements: !1234)
!1234 = !{!1235, !1236, !1237, !1238, !1239, !1240, !1241, !1242, !1243, !1244, !1245, !1246, !1247, !1248, !1313, !1314}
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !1233, file: !906, line: 508, baseType: !774, size: 192, align: 64)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "dl_runtime", scope: !1233, file: !906, line: 515, baseType: !386, size: 64, offset: 192)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "dl_deadline", scope: !1233, file: !906, line: 516, baseType: !386, size: 64, offset: 256)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "dl_period", scope: !1233, file: !906, line: 517, baseType: !386, size: 64, offset: 320)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "dl_bw", scope: !1233, file: !906, line: 518, baseType: !386, size: 64, offset: 384)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "dl_density", scope: !1233, file: !906, line: 519, baseType: !386, size: 64, offset: 448)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "runtime", scope: !1233, file: !906, line: 526, baseType: !291, size: 64, offset: 512)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", scope: !1233, file: !906, line: 527, baseType: !386, size: 64, offset: 576)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1233, file: !906, line: 528, baseType: !7, size: 32, offset: 640)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "dl_throttled", scope: !1233, file: !906, line: 554, baseType: !7, size: 1, offset: 672, flags: DIFlagBitField, extraData: i64 672)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "dl_yielded", scope: !1233, file: !906, line: 555, baseType: !7, size: 1, offset: 673, flags: DIFlagBitField, extraData: i64 672)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "dl_non_contending", scope: !1233, file: !906, line: 556, baseType: !7, size: 1, offset: 674, flags: DIFlagBitField, extraData: i64 672)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "dl_overrun", scope: !1233, file: !906, line: 557, baseType: !7, size: 1, offset: 675, flags: DIFlagBitField, extraData: i64 672)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "dl_timer", scope: !1233, file: !906, line: 563, baseType: !1249, size: 512, offset: 704)
!1249 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer", file: !14, line: 118, size: 512, elements: !1250)
!1250 = !{!1251, !1259, !1260, !1265, !1308, !1310, !1311, !1312}
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1249, file: !14, line: 119, baseType: !1252, size: 256)
!1252 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_node", file: !1253, line: 9, size: 256, elements: !1254)
!1253 = !DIFile(filename: "./include/linux/timerqueue.h", directory: "/home/lizy2001/genbc/linux")
!1254 = !{!1255, !1256}
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1252, file: !1253, line: 10, baseType: !774, size: 192, align: 64)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1252, file: !1253, line: 11, baseType: !1257, size: 64, offset: 192)
!1257 = !DIDerivedType(tag: DW_TAG_typedef, name: "ktime_t", file: !1258, line: 29, baseType: !291)
!1258 = !DIFile(filename: "./include/linux/ktime.h", directory: "/home/lizy2001/genbc/linux")
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "_softexpires", scope: !1249, file: !14, line: 120, baseType: !1257, size: 64, offset: 256)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !1249, file: !14, line: 121, baseType: !1261, size: 64, offset: 320)
!1261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1262, size: 64)
!1262 = !DISubroutineType(types: !1263)
!1263 = !{!13, !1264}
!1264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1249, size: 64)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1249, file: !14, line: 122, baseType: !1266, size: 64, offset: 384)
!1266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1267, size: 64)
!1267 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_clock_base", file: !14, line: 159, size: 512, align: 512, elements: !1268)
!1268 = !{!1269, !1289, !1290, !1293, !1298, !1299, !1303, !1307}
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_base", scope: !1267, file: !14, line: 160, baseType: !1270, size: 64)
!1270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1271, size: 64)
!1271 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_cpu_base", file: !14, line: 214, size: 4608, align: 512, elements: !1272)
!1272 = !{!1273, !1274, !1275, !1276, !1277, !1278, !1279, !1280, !1281, !1282, !1283, !1284, !1285}
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1271, file: !14, line: 215, baseType: !787)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !1271, file: !14, line: 216, baseType: !7, size: 32)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "active_bases", scope: !1271, file: !14, line: 217, baseType: !7, size: 32, offset: 32)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "clock_was_set_seq", scope: !1271, file: !14, line: 218, baseType: !7, size: 32, offset: 64)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "hres_active", scope: !1271, file: !14, line: 219, baseType: !7, size: 1, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "in_hrtirq", scope: !1271, file: !14, line: 220, baseType: !7, size: 1, offset: 97, flags: DIFlagBitField, extraData: i64 96)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "hang_detected", scope: !1271, file: !14, line: 221, baseType: !7, size: 1, offset: 98, flags: DIFlagBitField, extraData: i64 96)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_activated", scope: !1271, file: !14, line: 222, baseType: !7, size: 1, offset: 99, flags: DIFlagBitField, extraData: i64 96)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "expires_next", scope: !1271, file: !14, line: 233, baseType: !1257, size: 64, offset: 128)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "next_timer", scope: !1271, file: !14, line: 234, baseType: !1264, size: 64, offset: 192)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_expires_next", scope: !1271, file: !14, line: 235, baseType: !1257, size: 64, offset: 256)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_next_timer", scope: !1271, file: !14, line: 236, baseType: !1264, size: 64, offset: 320)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "clock_base", scope: !1271, file: !14, line: 237, baseType: !1286, size: 4096, offset: 512)
!1286 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1267, size: 4096, elements: !1287)
!1287 = !{!1288}
!1288 = !DISubrange(count: 8)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1267, file: !14, line: 161, baseType: !7, size: 32, offset: 64)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !1267, file: !14, line: 162, baseType: !1291, size: 32, offset: 96)
!1291 = !DIDerivedType(tag: DW_TAG_typedef, name: "clockid_t", file: !287, line: 27, baseType: !1292)
!1292 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clockid_t", file: !407, line: 96, baseType: !113)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !1267, file: !14, line: 163, baseType: !1294, size: 32, offset: 128)
!1294 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_raw_spinlock_t", file: !356, line: 276, baseType: !1295)
!1295 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_raw_spinlock", file: !356, line: 276, size: 32, elements: !1296)
!1296 = !{!1297}
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !1295, file: !356, line: 276, baseType: !360, size: 32)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "running", scope: !1267, file: !14, line: 164, baseType: !1264, size: 64, offset: 192)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !1267, file: !14, line: 165, baseType: !1300, size: 128, offset: 256)
!1300 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_head", file: !1253, line: 14, size: 128, elements: !1301)
!1301 = !{!1302}
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !1300, file: !1253, line: 15, baseType: !766, size: 128)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "get_time", scope: !1267, file: !14, line: 166, baseType: !1304, size: 64, offset: 384)
!1304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1305, size: 64)
!1305 = !DISubroutineType(types: !1306)
!1306 = !{!1257}
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1267, file: !14, line: 167, baseType: !1257, size: 64, offset: 448)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1249, file: !14, line: 123, baseType: !1309, size: 8, offset: 448)
!1309 = !DIDerivedType(tag: DW_TAG_typedef, name: "u8", file: !271, line: 17, baseType: !169)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "is_rel", scope: !1249, file: !14, line: 124, baseType: !1309, size: 8, offset: 456)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "is_soft", scope: !1249, file: !14, line: 125, baseType: !1309, size: 8, offset: 464)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "is_hard", scope: !1249, file: !14, line: 126, baseType: !1309, size: 8, offset: 472)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "inactive_timer", scope: !1233, file: !906, line: 572, baseType: !1249, size: 512, offset: 1216)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "pi_se", scope: !1233, file: !906, line: 580, baseType: !1315, size: 64, offset: 1728)
!1315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1233, size: 64)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !1175, file: !906, line: 721, baseType: !7, size: 32, offset: 3584)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cpus_allowed", scope: !1175, file: !906, line: 722, baseType: !113, size: 32, offset: 3616)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_ptr", scope: !1175, file: !906, line: 723, baseType: !1319, size: 64, offset: 3648)
!1319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1320, size: 64)
!1320 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1321)
!1321 = !DIDerivedType(tag: DW_TAG_typedef, name: "cpumask_t", file: !1322, line: 17, baseType: !1323)
!1322 = !DIFile(filename: "./include/linux/cpumask.h", directory: "/home/lizy2001/genbc/linux")
!1323 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpumask", file: !1322, line: 17, size: 64, elements: !1324)
!1324 = !{!1325}
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !1323, file: !1322, line: 17, baseType: !137, size: 64)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_mask", scope: !1175, file: !906, line: 724, baseType: !1321, size: 64, offset: 3712)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "sched_info", scope: !1175, file: !906, line: 749, baseType: !1328, offset: 3776)
!1328 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_info", file: !906, line: 290, elements: !309)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !1175, file: !906, line: 751, baseType: !311, size: 128, offset: 3776)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "mm", scope: !1175, file: !906, line: 757, baseType: !1020, size: 64, offset: 3904)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "active_mm", scope: !1175, file: !906, line: 758, baseType: !1020, size: 64, offset: 3968)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache", scope: !1175, file: !906, line: 761, baseType: !1333, size: 320, offset: 4032)
!1333 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmacache", file: !1117, line: 34, size: 320, elements: !1334)
!1334 = !{!1335, !1336}
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "seqnum", scope: !1333, file: !1117, line: 35, baseType: !386, size: 64)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "vmas", scope: !1333, file: !1117, line: 36, baseType: !1337, size: 256, offset: 64)
!1337 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1027, size: 256, elements: !1121)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "exit_state", scope: !1175, file: !906, line: 766, baseType: !113, size: 32, offset: 4352)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "exit_code", scope: !1175, file: !906, line: 767, baseType: !113, size: 32, offset: 4384)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "exit_signal", scope: !1175, file: !906, line: 768, baseType: !113, size: 32, offset: 4416)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "pdeath_signal", scope: !1175, file: !906, line: 770, baseType: !113, size: 32, offset: 4448)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "jobctl", scope: !1175, file: !906, line: 772, baseType: !138, size: 64, offset: 4480)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !1175, file: !906, line: 775, baseType: !7, size: 32, offset: 4544)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "sched_reset_on_fork", scope: !1175, file: !906, line: 778, baseType: !7, size: 1, offset: 4576, flags: DIFlagBitField, extraData: i64 4576)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "sched_contributes_to_load", scope: !1175, file: !906, line: 779, baseType: !7, size: 1, offset: 4577, flags: DIFlagBitField, extraData: i64 4576)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "sched_migrated", scope: !1175, file: !906, line: 780, baseType: !7, size: 1, offset: 4578, flags: DIFlagBitField, extraData: i64 4576)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "sched_remote_wakeup", scope: !1175, file: !906, line: 803, baseType: !7, size: 1, offset: 4608, flags: DIFlagBitField, extraData: i64 4608)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "in_execve", scope: !1175, file: !906, line: 806, baseType: !7, size: 1, offset: 4609, flags: DIFlagBitField, extraData: i64 4608)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "in_iowait", scope: !1175, file: !906, line: 807, baseType: !7, size: 1, offset: 4610, flags: DIFlagBitField, extraData: i64 4608)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "restore_sigmask", scope: !1175, file: !906, line: 809, baseType: !7, size: 1, offset: 4611, flags: DIFlagBitField, extraData: i64 4608)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "brk_randomized", scope: !1175, file: !906, line: 815, baseType: !7, size: 1, offset: 4612, flags: DIFlagBitField, extraData: i64 4608)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_flags", scope: !1175, file: !906, line: 831, baseType: !138, size: 64, offset: 4672)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "restart_block", scope: !1175, file: !906, line: 833, baseType: !1354, size: 384, offset: 4736)
!1354 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "restart_block", file: !19, line: 25, size: 384, elements: !1355)
!1355 = !{!1356, !1361}
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1354, file: !19, line: 26, baseType: !1357, size: 64)
!1357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1358, size: 64)
!1358 = !DISubroutineType(types: !1359)
!1359 = !{!507, !1360}
!1360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1354, size: 64)
!1361 = !DIDerivedType(tag: DW_TAG_member, scope: !1354, file: !19, line: 27, baseType: !1362, size: 320, offset: 64)
!1362 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1354, file: !19, line: 27, size: 320, elements: !1363)
!1363 = !{!1364, !1374, !1401}
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "futex", scope: !1362, file: !19, line: 36, baseType: !1365, size: 320)
!1365 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1362, file: !19, line: 29, size: 320, elements: !1366)
!1366 = !{!1367, !1369, !1370, !1371, !1372, !1373}
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr", scope: !1365, file: !19, line: 30, baseType: !1368, size: 64)
!1368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !383, size: 64)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1365, file: !19, line: 31, baseType: !383, size: 32, offset: 64)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1365, file: !19, line: 32, baseType: !383, size: 32, offset: 96)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "bitset", scope: !1365, file: !19, line: 33, baseType: !383, size: 32, offset: 128)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !1365, file: !19, line: 34, baseType: !386, size: 64, offset: 192)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr2", scope: !1365, file: !19, line: 35, baseType: !1368, size: 64, offset: 256)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "nanosleep", scope: !1362, file: !19, line: 46, baseType: !1375, size: 192)
!1375 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1362, file: !19, line: 38, size: 192, elements: !1376)
!1376 = !{!1377, !1378, !1379, !1400}
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !1375, file: !19, line: 39, baseType: !1291, size: 32)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1375, file: !19, line: 40, baseType: !18, size: 32, offset: 32)
!1379 = !DIDerivedType(tag: DW_TAG_member, scope: !1375, file: !19, line: 41, baseType: !1380, size: 64, offset: 64)
!1380 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1375, file: !19, line: 41, size: 64, elements: !1381)
!1381 = !{!1382, !1390}
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "rmtp", scope: !1380, file: !19, line: 42, baseType: !1383, size: 64)
!1383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1384, size: 64)
!1384 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__kernel_timespec", file: !1385, line: 7, size: 128, elements: !1386)
!1385 = !DIFile(filename: "./include/uapi/linux/time_types.h", directory: "/home/lizy2001/genbc/linux")
!1386 = !{!1387, !1389}
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1384, file: !1385, line: 8, baseType: !1388, size: 64)
!1388 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_time64_t", file: !407, line: 93, baseType: !293)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1384, file: !1385, line: 9, baseType: !293, size: 64, offset: 64)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "compat_rmtp", scope: !1380, file: !19, line: 43, baseType: !1391, size: 64)
!1391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1392, size: 64)
!1392 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "old_timespec32", file: !1393, line: 7, size: 64, elements: !1394)
!1393 = !DIFile(filename: "./include/vdso/time32.h", directory: "/home/lizy2001/genbc/linux")
!1394 = !{!1395, !1399}
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1392, file: !1393, line: 8, baseType: !1396, size: 32)
!1396 = !DIDerivedType(tag: DW_TAG_typedef, name: "old_time32_t", file: !1393, line: 5, baseType: !1397)
!1397 = !DIDerivedType(tag: DW_TAG_typedef, name: "s32", file: !271, line: 20, baseType: !1398)
!1398 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s32", file: !131, line: 26, baseType: !113)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1392, file: !1393, line: 9, baseType: !1397, size: 32, offset: 32)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1375, file: !19, line: 45, baseType: !386, size: 64, offset: 128)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !1362, file: !19, line: 54, baseType: !1402, size: 256)
!1402 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1362, file: !19, line: 48, size: 256, elements: !1403)
!1403 = !{!1404, !1412, !1413, !1414, !1415}
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "ufds", scope: !1402, file: !19, line: 49, baseType: !1405, size: 64)
!1405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1406, size: 64)
!1406 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pollfd", file: !1407, line: 36, size: 64, elements: !1408)
!1407 = !DIFile(filename: "./include/uapi/asm-generic/poll.h", directory: "/home/lizy2001/genbc/linux")
!1408 = !{!1409, !1410, !1411}
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !1406, file: !1407, line: 37, baseType: !113, size: 32)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "events", scope: !1406, file: !1407, line: 38, baseType: !199, size: 16, offset: 32)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "revents", scope: !1406, file: !1407, line: 39, baseType: !199, size: 16, offset: 48)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "nfds", scope: !1402, file: !19, line: 50, baseType: !113, size: 32, offset: 64)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "has_timeout", scope: !1402, file: !19, line: 51, baseType: !113, size: 32, offset: 96)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1402, file: !19, line: 52, baseType: !138, size: 64, offset: 128)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1402, file: !19, line: 53, baseType: !138, size: 64, offset: 192)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !1175, file: !906, line: 835, baseType: !1417, size: 32, offset: 5120)
!1417 = !DIDerivedType(tag: DW_TAG_typedef, name: "pid_t", file: !287, line: 22, baseType: !1418)
!1418 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_pid_t", file: !407, line: 28, baseType: !113)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "tgid", scope: !1175, file: !906, line: 836, baseType: !1417, size: 32, offset: 5152)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "stack_canary", scope: !1175, file: !906, line: 840, baseType: !138, size: 64, offset: 5184)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "real_parent", scope: !1175, file: !906, line: 849, baseType: !1174, size: 64, offset: 5248)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1175, file: !906, line: 852, baseType: !1174, size: 64, offset: 5312)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1175, file: !906, line: 857, baseType: !311, size: 128, offset: 5376)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !1175, file: !906, line: 858, baseType: !311, size: 128, offset: 5504)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "group_leader", scope: !1175, file: !906, line: 859, baseType: !1174, size: 64, offset: 5632)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "ptraced", scope: !1175, file: !906, line: 867, baseType: !311, size: 128, offset: 5696)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_entry", scope: !1175, file: !906, line: 868, baseType: !311, size: 128, offset: 5824)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "thread_pid", scope: !1175, file: !906, line: 871, baseType: !1429, size: 64, offset: 5952)
!1429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1430, size: 64)
!1430 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pid", file: !40, line: 59, size: 768, elements: !1431)
!1431 = !{!1432, !1433, !1434, !1435, !1437, !1438, !1445, !1446}
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1430, file: !40, line: 61, baseType: !1187, size: 32)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1430, file: !40, line: 62, baseType: !7, size: 32, offset: 32)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1430, file: !40, line: 63, baseType: !295, offset: 64)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !1430, file: !40, line: 65, baseType: !1436, size: 256, offset: 64)
!1436 = !DICompositeType(tag: DW_TAG_array_type, baseType: !610, size: 256, elements: !1121)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "inodes", scope: !1430, file: !40, line: 66, baseType: !610, size: 64, offset: 320)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "wait_pidfd", scope: !1430, file: !40, line: 68, baseType: !1439, size: 128, offset: 384)
!1439 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_head_t", file: !1440, line: 40, baseType: !1441)
!1440 = !DIFile(filename: "./include/linux/wait.h", directory: "/home/lizy2001/genbc/linux")
!1441 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_head", file: !1440, line: 36, size: 128, elements: !1442)
!1442 = !{!1443, !1444}
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1441, file: !1440, line: 37, baseType: !295)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1441, file: !1440, line: 38, baseType: !311, size: 128)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1430, file: !40, line: 69, baseType: !333, size: 128, align: 64, offset: 512)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "numbers", scope: !1430, file: !40, line: 70, baseType: !1447, size: 128, offset: 640)
!1447 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1448, size: 128, elements: !139)
!1448 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "upid", file: !40, line: 54, size: 128, elements: !1449)
!1449 = !{!1450, !1451}
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !1448, file: !40, line: 55, baseType: !113, size: 32)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !1448, file: !40, line: 56, baseType: !1452, size: 64, offset: 64)
!1452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1453, size: 64)
!1453 = !DICompositeType(tag: DW_TAG_structure_type, name: "pid_namespace", file: !40, line: 56, flags: DIFlagFwdDecl)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "pid_links", scope: !1175, file: !906, line: 872, baseType: !1455, size: 512, offset: 6016)
!1455 = !DICompositeType(tag: DW_TAG_array_type, baseType: !614, size: 512, elements: !1121)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "thread_group", scope: !1175, file: !906, line: 873, baseType: !311, size: 128, offset: 6528)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "thread_node", scope: !1175, file: !906, line: 874, baseType: !311, size: 128, offset: 6656)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "vfork_done", scope: !1175, file: !906, line: 876, baseType: !1459, size: 64, offset: 6784)
!1459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1460, size: 64)
!1460 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "completion", file: !1461, line: 26, size: 192, elements: !1462)
!1461 = !DIFile(filename: "./include/linux/completion.h", directory: "/home/lizy2001/genbc/linux")
!1462 = !{!1463, !1464}
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !1460, file: !1461, line: 27, baseType: !7, size: 32)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !1460, file: !1461, line: 28, baseType: !1465, size: 128, offset: 64)
!1465 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swait_queue_head", file: !1466, line: 43, size: 128, elements: !1467)
!1466 = !DIFile(filename: "./include/linux/swait.h", directory: "/home/lizy2001/genbc/linux")
!1467 = !{!1468, !1469}
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1465, file: !1466, line: 44, baseType: !787)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "task_list", scope: !1465, file: !1466, line: 45, baseType: !311, size: 128)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "set_child_tid", scope: !1175, file: !906, line: 879, baseType: !682, size: 64, offset: 6848)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "clear_child_tid", scope: !1175, file: !906, line: 882, baseType: !682, size: 64, offset: 6912)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1175, file: !906, line: 884, baseType: !386, size: 64, offset: 6976)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1175, file: !906, line: 885, baseType: !386, size: 64, offset: 7040)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !1175, file: !906, line: 890, baseType: !386, size: 64, offset: 7104)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !1175, file: !906, line: 891, baseType: !1476, size: 128, offset: 7168)
!1476 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "prev_cputime", file: !906, line: 242, size: 128, elements: !1477)
!1477 = !{!1478, !1479, !1480}
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1476, file: !906, line: 244, baseType: !386, size: 64)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1476, file: !906, line: 245, baseType: !386, size: 64, offset: 64)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1476, file: !906, line: 246, baseType: !787, offset: 128)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !1175, file: !906, line: 900, baseType: !138, size: 64, offset: 7296)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !1175, file: !906, line: 901, baseType: !138, size: 64, offset: 7360)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "start_time", scope: !1175, file: !906, line: 904, baseType: !386, size: 64, offset: 7424)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "start_boottime", scope: !1175, file: !906, line: 907, baseType: !386, size: 64, offset: 7488)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !1175, file: !906, line: 910, baseType: !138, size: 64, offset: 7552)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !1175, file: !906, line: 911, baseType: !138, size: 64, offset: 7616)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !1175, file: !906, line: 914, baseType: !1488, size: 640, offset: 7680)
!1488 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers", file: !1489, line: 123, size: 640, elements: !1490)
!1489 = !DIFile(filename: "./include/linux/posix-timers.h", directory: "/home/lizy2001/genbc/linux")
!1490 = !{!1491, !1497, !1498}
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "bases", scope: !1488, file: !1489, line: 124, baseType: !1492, size: 576)
!1492 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1493, size: 576, elements: !626)
!1493 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimer_base", file: !1489, line: 108, size: 192, elements: !1494)
!1494 = !{!1495, !1496}
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "nextevt", scope: !1493, file: !1489, line: 109, baseType: !386, size: 64)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "tqhead", scope: !1493, file: !1489, line: 110, baseType: !1300, size: 128, offset: 64)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "timers_active", scope: !1488, file: !1489, line: 125, baseType: !7, size: 32, offset: 576)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "expiry_active", scope: !1488, file: !1489, line: 126, baseType: !7, size: 32, offset: 608)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers_work", scope: !1175, file: !906, line: 917, baseType: !1500, size: 192, offset: 8320)
!1500 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers_work", file: !1489, line: 134, size: 192, elements: !1501)
!1501 = !{!1502, !1503}
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !1500, file: !1489, line: 135, baseType: !333, size: 128, align: 64)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "scheduled", scope: !1500, file: !1489, line: 136, baseType: !7, size: 32, offset: 128)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "ptracer_cred", scope: !1175, file: !906, line: 923, baseType: !1505, size: 64, offset: 8512)
!1505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1506, size: 64)
!1506 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1507)
!1507 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cred", file: !1508, line: 111, size: 1280, elements: !1509)
!1508 = !DIFile(filename: "./include/linux/cred.h", directory: "/home/lizy2001/genbc/linux")
!1509 = !{!1510, !1511, !1512, !1513, !1514, !1515, !1516, !1517, !1518, !1519, !1520, !1527, !1528, !1529, !1530, !1531, !1532, !1639, !1640, !1641, !1642, !1668, !1671, !1681}
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1507, file: !1508, line: 112, baseType: !761, size: 32)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1507, file: !1508, line: 120, baseType: !400, size: 32, offset: 32)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1507, file: !1508, line: 121, baseType: !409, size: 32, offset: 64)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "suid", scope: !1507, file: !1508, line: 122, baseType: !400, size: 32, offset: 96)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "sgid", scope: !1507, file: !1508, line: 123, baseType: !409, size: 32, offset: 128)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !1507, file: !1508, line: 124, baseType: !400, size: 32, offset: 160)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "egid", scope: !1507, file: !1508, line: 125, baseType: !409, size: 32, offset: 192)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "fsuid", scope: !1507, file: !1508, line: 126, baseType: !400, size: 32, offset: 224)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "fsgid", scope: !1507, file: !1508, line: 127, baseType: !409, size: 32, offset: 256)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "securebits", scope: !1507, file: !1508, line: 128, baseType: !7, size: 32, offset: 288)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "cap_inheritable", scope: !1507, file: !1508, line: 129, baseType: !1521, size: 64, offset: 320)
!1521 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_cap_t", file: !1522, line: 26, baseType: !1523)
!1522 = !DIFile(filename: "./include/linux/capability.h", directory: "/home/lizy2001/genbc/linux")
!1523 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_cap_struct", file: !1522, line: 24, size: 64, elements: !1524)
!1524 = !{!1525}
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !1523, file: !1522, line: 25, baseType: !1526, size: 64)
!1526 = !DICompositeType(tag: DW_TAG_array_type, baseType: !174, size: 64, elements: !153)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "cap_permitted", scope: !1507, file: !1508, line: 130, baseType: !1521, size: 64, offset: 384)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "cap_effective", scope: !1507, file: !1508, line: 131, baseType: !1521, size: 64, offset: 448)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "cap_bset", scope: !1507, file: !1508, line: 132, baseType: !1521, size: 64, offset: 512)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "cap_ambient", scope: !1507, file: !1508, line: 133, baseType: !1521, size: 64, offset: 576)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "jit_keyring", scope: !1507, file: !1508, line: 135, baseType: !170, size: 8, offset: 640)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "session_keyring", scope: !1507, file: !1508, line: 137, baseType: !1533, size: 64, offset: 704)
!1533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1534, size: 64)
!1534 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key", file: !1535, line: 189, size: 1664, elements: !1536)
!1535 = !DIFile(filename: "./include/linux/key.h", directory: "/home/lizy2001/genbc/linux")
!1536 = !{!1537, !1538, !1541, !1546, !1547, !1550, !1551, !1556, !1557, !1558, !1559, !1561, !1562, !1563, !1564, !1565, !1603, !1624}
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1534, file: !1535, line: 190, baseType: !1187, size: 32)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !1534, file: !1535, line: 191, baseType: !1539, size: 32, offset: 32)
!1539 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_serial_t", file: !1535, line: 28, baseType: !1540)
!1540 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !287, line: 98, baseType: !1397)
!1541 = !DIDerivedType(tag: DW_TAG_member, scope: !1534, file: !1535, line: 192, baseType: !1542, size: 192, offset: 64)
!1542 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1534, file: !1535, line: 192, size: 192, elements: !1543)
!1543 = !{!1544, !1545}
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "graveyard_link", scope: !1542, file: !1535, line: 193, baseType: !311, size: 128)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "serial_node", scope: !1542, file: !1535, line: 194, baseType: !774, size: 192, align: 64)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "sem", scope: !1534, file: !1535, line: 199, baseType: !781, size: 256, offset: 256)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1534, file: !1535, line: 200, baseType: !1548, size: 64, offset: 512)
!1548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1549, size: 64)
!1549 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_user", file: !1535, line: 200, flags: DIFlagFwdDecl)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "security", scope: !1534, file: !1535, line: 201, baseType: !111, size: 64, offset: 576)
!1551 = !DIDerivedType(tag: DW_TAG_member, scope: !1534, file: !1535, line: 202, baseType: !1552, size: 64, offset: 640)
!1552 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1534, file: !1535, line: 202, size: 64, elements: !1553)
!1553 = !{!1554, !1555}
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "expiry", scope: !1552, file: !1535, line: 203, baseType: !505, size: 64)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "revoked_at", scope: !1552, file: !1535, line: 204, baseType: !505, size: 64)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "last_used_at", scope: !1534, file: !1535, line: 206, baseType: !505, size: 64, offset: 704)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1534, file: !1535, line: 207, baseType: !400, size: 32, offset: 768)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1534, file: !1535, line: 208, baseType: !409, size: 32, offset: 800)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !1534, file: !1535, line: 209, baseType: !1560, size: 32, offset: 832)
!1560 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_perm_t", file: !1535, line: 31, baseType: !525)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "quotalen", scope: !1534, file: !1535, line: 210, baseType: !132, size: 16, offset: 864)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "datalen", scope: !1534, file: !1535, line: 211, baseType: !132, size: 16, offset: 880)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1534, file: !1535, line: 215, baseType: !199, size: 16, offset: 896)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1534, file: !1535, line: 222, baseType: !138, size: 64, offset: 960)
!1565 = !DIDerivedType(tag: DW_TAG_member, scope: !1534, file: !1535, line: 239, baseType: !1566, size: 320, offset: 1024)
!1566 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1534, file: !1535, line: 239, size: 320, elements: !1567)
!1567 = !{!1568, !1595}
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "index_key", scope: !1566, file: !1535, line: 240, baseType: !1569, size: 320)
!1569 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "keyring_index_key", file: !1535, line: 108, size: 320, elements: !1570)
!1570 = !{!1571, !1572, !1584, !1587, !1594}
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1569, file: !1535, line: 110, baseType: !138, size: 64)
!1572 = !DIDerivedType(tag: DW_TAG_member, scope: !1569, file: !1535, line: 111, baseType: !1573, size: 64, offset: 64)
!1573 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1569, file: !1535, line: 111, size: 64, elements: !1574)
!1574 = !{!1575, !1583}
!1575 = !DIDerivedType(tag: DW_TAG_member, scope: !1573, file: !1535, line: 112, baseType: !1576, size: 64)
!1576 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1573, file: !1535, line: 112, size: 64, elements: !1577)
!1577 = !{!1578, !1579}
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "desc_len", scope: !1576, file: !1535, line: 114, baseType: !270, size: 16)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !1576, file: !1535, line: 115, baseType: !1580, size: 48, offset: 16)
!1580 = !DICompositeType(tag: DW_TAG_array_type, baseType: !117, size: 48, elements: !1581)
!1581 = !{!1582}
!1582 = !DISubrange(count: 6)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1573, file: !1535, line: 121, baseType: !138, size: 64)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1569, file: !1535, line: 123, baseType: !1585, size: 64, offset: 128)
!1585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1586, size: 64)
!1586 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_type", file: !1535, line: 96, flags: DIFlagFwdDecl)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !1569, file: !1535, line: 124, baseType: !1588, size: 64, offset: 192)
!1588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1589, size: 64)
!1589 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_tag", file: !1535, line: 102, size: 192, elements: !1590)
!1590 = !{!1591, !1592, !1593}
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1589, file: !1535, line: 103, baseType: !333, size: 128, align: 64)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1589, file: !1535, line: 104, baseType: !1187, size: 32, offset: 128)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "removed", scope: !1589, file: !1535, line: 105, baseType: !457, size: 8, offset: 160)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1569, file: !1535, line: 125, baseType: !115, size: 64, offset: 256)
!1595 = !DIDerivedType(tag: DW_TAG_member, scope: !1566, file: !1535, line: 241, baseType: !1596, size: 320)
!1596 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1566, file: !1535, line: 241, size: 320, elements: !1597)
!1597 = !{!1598, !1599, !1600, !1601, !1602}
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1596, file: !1535, line: 242, baseType: !138, size: 64)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "len_desc", scope: !1596, file: !1535, line: 243, baseType: !138, size: 64, offset: 64)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1596, file: !1535, line: 244, baseType: !1585, size: 64, offset: 128)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !1596, file: !1535, line: 245, baseType: !1588, size: 64, offset: 192)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1596, file: !1535, line: 246, baseType: !452, size: 64, offset: 256)
!1603 = !DIDerivedType(tag: DW_TAG_member, scope: !1534, file: !1535, line: 254, baseType: !1604, size: 256, offset: 1344)
!1604 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1534, file: !1535, line: 254, size: 256, elements: !1605)
!1605 = !{!1606, !1612}
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "payload", scope: !1604, file: !1535, line: 255, baseType: !1607, size: 256)
!1607 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "key_payload", file: !1535, line: 128, size: 256, elements: !1608)
!1608 = !{!1609, !1610}
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_data0", scope: !1607, file: !1535, line: 129, baseType: !111, size: 64)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1607, file: !1535, line: 130, baseType: !1611, size: 256)
!1611 = !DICompositeType(tag: DW_TAG_array_type, baseType: !111, size: 256, elements: !1121)
!1612 = !DIDerivedType(tag: DW_TAG_member, scope: !1604, file: !1535, line: 256, baseType: !1613, size: 256)
!1613 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1604, file: !1535, line: 256, size: 256, elements: !1614)
!1614 = !{!1615, !1616}
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "name_link", scope: !1613, file: !1535, line: 258, baseType: !311, size: 128)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !1613, file: !1535, line: 259, baseType: !1617, size: 128, offset: 128)
!1617 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array", file: !1618, line: 22, size: 128, elements: !1619)
!1618 = !DIFile(filename: "./include/linux/assoc_array.h", directory: "/home/lizy2001/genbc/linux")
!1619 = !{!1620, !1623}
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !1617, file: !1618, line: 23, baseType: !1621, size: 64)
!1621 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1622, size: 64)
!1622 = !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array_ptr", file: !1618, line: 23, flags: DIFlagFwdDecl)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "nr_leaves_on_tree", scope: !1617, file: !1618, line: 24, baseType: !138, size: 64, offset: 64)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_link", scope: !1534, file: !1535, line: 274, baseType: !1625, size: 64, offset: 1600)
!1625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1626, size: 64)
!1626 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_restriction", file: !1535, line: 170, size: 192, elements: !1627)
!1627 = !{!1628, !1637, !1638}
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !1626, file: !1535, line: 171, baseType: !1629, size: 64)
!1629 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_restrict_link_func_t", file: !1535, line: 165, baseType: !1630)
!1630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1631, size: 64)
!1631 = !DISubroutineType(types: !1632)
!1632 = !{!113, !1533, !1633, !1635, !1533}
!1633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1634, size: 64)
!1634 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1586)
!1635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1636, size: 64)
!1636 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1607)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1626, file: !1535, line: 172, baseType: !1533, size: 64, offset: 64)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "keytype", scope: !1626, file: !1535, line: 173, baseType: !1585, size: 64, offset: 128)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "process_keyring", scope: !1507, file: !1508, line: 138, baseType: !1533, size: 64, offset: 768)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "thread_keyring", scope: !1507, file: !1508, line: 139, baseType: !1533, size: 64, offset: 832)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "request_key_auth", scope: !1507, file: !1508, line: 140, baseType: !1533, size: 64, offset: 896)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1507, file: !1508, line: 145, baseType: !1643, size: 64, offset: 960)
!1643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1644, size: 64)
!1644 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "user_struct", file: !1645, line: 13, size: 896, elements: !1646)
!1645 = !DIFile(filename: "./include/linux/sched/user.h", directory: "/home/lizy2001/genbc/linux")
!1646 = !{!1647, !1648, !1649, !1650, !1651, !1652, !1653, !1654, !1655, !1656, !1657}
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !1644, file: !1645, line: 14, baseType: !1187, size: 32)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "processes", scope: !1644, file: !1645, line: 15, baseType: !761, size: 32, offset: 32)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "sigpending", scope: !1644, file: !1645, line: 16, baseType: !761, size: 32, offset: 64)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "epoll_watches", scope: !1644, file: !1645, line: 21, baseType: !284, size: 64, offset: 128)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "locked_shm", scope: !1644, file: !1645, line: 27, baseType: !138, size: 64, offset: 192)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "unix_inflight", scope: !1644, file: !1645, line: 28, baseType: !138, size: 64, offset: 256)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "pipe_bufs", scope: !1644, file: !1645, line: 29, baseType: !284, size: 64, offset: 320)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "uidhash_node", scope: !1644, file: !1645, line: 32, baseType: !614, size: 128, offset: 384)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1644, file: !1645, line: 33, baseType: !400, size: 32, offset: 512)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !1644, file: !1645, line: 37, baseType: !284, size: 64, offset: 576)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "ratelimit", scope: !1644, file: !1645, line: 44, baseType: !1658, size: 256, offset: 640)
!1658 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ratelimit_state", file: !1659, line: 15, size: 256, elements: !1660)
!1659 = !DIFile(filename: "./include/linux/ratelimit_types.h", directory: "/home/lizy2001/genbc/linux")
!1660 = !{!1661, !1662, !1663, !1664, !1665, !1666, !1667}
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1658, file: !1659, line: 16, baseType: !787)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !1658, file: !1659, line: 18, baseType: !113, size: 32)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "burst", scope: !1658, file: !1659, line: 19, baseType: !113, size: 32, offset: 32)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "printed", scope: !1658, file: !1659, line: 20, baseType: !113, size: 32, offset: 64)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "missed", scope: !1658, file: !1659, line: 21, baseType: !113, size: 32, offset: 96)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !1658, file: !1659, line: 22, baseType: !138, size: 64, offset: 128)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1658, file: !1659, line: 23, baseType: !138, size: 64, offset: 192)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1507, file: !1508, line: 146, baseType: !1669, size: 64, offset: 1024)
!1669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1670, size: 64)
!1670 = !DICompositeType(tag: DW_TAG_structure_type, name: "user_namespace", file: !736, line: 516, flags: DIFlagFwdDecl)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "group_info", scope: !1507, file: !1508, line: 147, baseType: !1672, size: 64, offset: 1088)
!1672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1673, size: 64)
!1673 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group_info", file: !1508, line: 25, size: 64, elements: !1674)
!1674 = !{!1675, !1676, !1677}
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1673, file: !1508, line: 26, baseType: !761, size: 32)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "ngroups", scope: !1673, file: !1508, line: 27, baseType: !113, size: 32, offset: 32)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1673, file: !1508, line: 28, baseType: !1678, offset: 64)
!1678 = !DICompositeType(tag: DW_TAG_array_type, baseType: !409, elements: !1679)
!1679 = !{!1680}
!1680 = !DISubrange(count: 0)
!1681 = !DIDerivedType(tag: DW_TAG_member, scope: !1507, file: !1508, line: 149, baseType: !1682, size: 128, offset: 1152)
!1682 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1507, file: !1508, line: 149, size: 128, elements: !1683)
!1683 = !{!1684, !1685}
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "non_rcu", scope: !1682, file: !1508, line: 150, baseType: !113, size: 32)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1682, file: !1508, line: 151, baseType: !333, size: 128, align: 64)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "real_cred", scope: !1175, file: !906, line: 926, baseType: !1505, size: 64, offset: 8576)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "cred", scope: !1175, file: !906, line: 929, baseType: !1505, size: 64, offset: 8640)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "cached_requested_key", scope: !1175, file: !906, line: 933, baseType: !1533, size: 64, offset: 8704)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "comm", scope: !1175, file: !906, line: 943, baseType: !1690, size: 128, offset: 8768)
!1690 = !DICompositeType(tag: DW_TAG_array_type, baseType: !117, size: 128, elements: !1691)
!1691 = !{!1692}
!1692 = !DISubrange(count: 16)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "nameidata", scope: !1175, file: !906, line: 945, baseType: !1694, size: 64, offset: 8896)
!1694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1695, size: 64)
!1695 = !DICompositeType(tag: DW_TAG_structure_type, name: "nameidata", file: !906, line: 49, flags: DIFlagFwdDecl)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !1175, file: !906, line: 956, baseType: !1697, size: 64, offset: 8960)
!1697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1698, size: 64)
!1698 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_struct", file: !906, line: 45, flags: DIFlagFwdDecl)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !1175, file: !906, line: 959, baseType: !1700, size: 64, offset: 9024)
!1700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1701, size: 64)
!1701 = !DICompositeType(tag: DW_TAG_structure_type, name: "files_struct", file: !906, line: 959, flags: DIFlagFwdDecl)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "io_uring", scope: !1175, file: !906, line: 962, baseType: !1703, size: 64, offset: 9088)
!1703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1704, size: 64)
!1704 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_uring_task", file: !906, line: 66, flags: DIFlagFwdDecl)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "nsproxy", scope: !1175, file: !906, line: 966, baseType: !1706, size: 64, offset: 9152)
!1706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1707, size: 64)
!1707 = !DICompositeType(tag: DW_TAG_structure_type, name: "nsproxy", file: !906, line: 50, flags: DIFlagFwdDecl)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !1175, file: !906, line: 969, baseType: !1709, size: 64, offset: 9216)
!1709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1710, size: 64)
!1710 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "signal_struct", file: !1711, line: 82, size: 7296, elements: !1712)
!1711 = !DIFile(filename: "./include/linux/sched/signal.h", directory: "/home/lizy2001/genbc/linux")
!1712 = !{!1713, !1714, !1715, !1716, !1717, !1718, !1719, !1730, !1731, !1732, !1733, !1734, !1735, !1736, !1737, !1738, !1739, !1740, !1741, !1742, !1748, !1757, !1758, !1760, !1761, !1762, !1765, !1771, !1772, !1773, !1774, !1775, !1776, !1777, !1778, !1779, !1780, !1781, !1782, !1783, !1784, !1785, !1786, !1787, !1788, !1789, !1790, !1791, !1792, !1795, !1796, !1803, !1804, !1805, !1806, !1807, !1808}
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "sigcnt", scope: !1710, file: !1711, line: 83, baseType: !1187, size: 32)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "live", scope: !1710, file: !1711, line: 84, baseType: !761, size: 32, offset: 32)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !1710, file: !1711, line: 85, baseType: !113, size: 32, offset: 64)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "thread_head", scope: !1710, file: !1711, line: 86, baseType: !311, size: 128, offset: 128)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "wait_chldexit", scope: !1710, file: !1711, line: 88, baseType: !1439, size: 128, offset: 256)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "curr_target", scope: !1710, file: !1711, line: 91, baseType: !1174, size: 64, offset: 384)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "shared_pending", scope: !1710, file: !1711, line: 94, baseType: !1720, size: 192, offset: 448)
!1720 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigpending", file: !1721, line: 30, size: 192, elements: !1722)
!1721 = !DIFile(filename: "./include/linux/signal_types.h", directory: "/home/lizy2001/genbc/linux")
!1722 = !{!1723, !1724}
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !1720, file: !1721, line: 31, baseType: !311, size: 128)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !1720, file: !1721, line: 32, baseType: !1725, size: 64, offset: 128)
!1725 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigset_t", file: !1726, line: 25, baseType: !1727)
!1726 = !DIFile(filename: "./arch/x86/include/asm/signal.h", directory: "/home/lizy2001/genbc/linux")
!1727 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1726, line: 23, size: 64, elements: !1728)
!1728 = !{!1729}
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !1727, file: !1726, line: 24, baseType: !137, size: 64)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "multiprocess", scope: !1710, file: !1711, line: 97, baseType: !610, size: 64, offset: 640)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_code", scope: !1710, file: !1711, line: 100, baseType: !113, size: 32, offset: 704)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "notify_count", scope: !1710, file: !1711, line: 106, baseType: !113, size: 32, offset: 736)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_task", scope: !1710, file: !1711, line: 107, baseType: !1174, size: 64, offset: 768)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "group_stop_count", scope: !1710, file: !1711, line: 110, baseType: !113, size: 32, offset: 832)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1710, file: !1711, line: 111, baseType: !7, size: 32, offset: 864)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "is_child_subreaper", scope: !1710, file: !1711, line: 122, baseType: !7, size: 1, offset: 896, flags: DIFlagBitField, extraData: i64 896)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "has_child_subreaper", scope: !1710, file: !1711, line: 123, baseType: !7, size: 1, offset: 897, flags: DIFlagBitField, extraData: i64 896)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timer_id", scope: !1710, file: !1711, line: 128, baseType: !113, size: 32, offset: 928)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timers", scope: !1710, file: !1711, line: 129, baseType: !311, size: 128, offset: 960)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "real_timer", scope: !1710, file: !1711, line: 132, baseType: !1249, size: 512, offset: 1088)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "it_real_incr", scope: !1710, file: !1711, line: 133, baseType: !1257, size: 64, offset: 1600)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "it", scope: !1710, file: !1711, line: 140, baseType: !1743, size: 256, offset: 1664)
!1743 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1744, size: 256, elements: !153)
!1744 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpu_itimer", file: !1711, line: 38, size: 128, elements: !1745)
!1745 = !{!1746, !1747}
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1744, file: !1711, line: 39, baseType: !386, size: 64)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "incr", scope: !1744, file: !1711, line: 40, baseType: !386, size: 64, offset: 64)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "cputimer", scope: !1710, file: !1711, line: 146, baseType: !1749, size: 192, offset: 1920)
!1749 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_group_cputimer", file: !1711, line: 66, size: 192, elements: !1750)
!1750 = !{!1751}
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "cputime_atomic", scope: !1749, file: !1711, line: 67, baseType: !1752, size: 192)
!1752 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_cputime_atomic", file: !1711, line: 47, size: 192, elements: !1753)
!1753 = !{!1754, !1755, !1756}
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1752, file: !1711, line: 48, baseType: !286, size: 64)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1752, file: !1711, line: 49, baseType: !286, size: 64, offset: 64)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !1752, file: !1711, line: 50, baseType: !286, size: 64, offset: 128)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !1710, file: !1711, line: 150, baseType: !1488, size: 640, offset: 2112)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "pids", scope: !1710, file: !1711, line: 153, baseType: !1759, size: 256, offset: 2752)
!1759 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1429, size: 256, elements: !1121)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "tty_old_pgrp", scope: !1710, file: !1711, line: 159, baseType: !1429, size: 64, offset: 3008)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "leader", scope: !1710, file: !1711, line: 162, baseType: !113, size: 32, offset: 3072)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "tty", scope: !1710, file: !1711, line: 164, baseType: !1763, size: 64, offset: 3136)
!1763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1764, size: 64)
!1764 = !DICompositeType(tag: DW_TAG_structure_type, name: "tty_struct", file: !1711, line: 164, flags: DIFlagFwdDecl)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "stats_lock", scope: !1710, file: !1711, line: 175, baseType: !1766, size: 32, offset: 3200)
!1766 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqlock_t", file: !356, line: 805, baseType: !1767)
!1767 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !356, line: 798, size: 32, elements: !1768)
!1768 = !{!1769, !1770}
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !1767, file: !356, line: 803, baseType: !355, size: 32)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1767, file: !356, line: 804, baseType: !295, offset: 32)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1710, file: !1711, line: 176, baseType: !386, size: 64, offset: 3264)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1710, file: !1711, line: 176, baseType: !386, size: 64, offset: 3328)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "cutime", scope: !1710, file: !1711, line: 176, baseType: !386, size: 64, offset: 3392)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "cstime", scope: !1710, file: !1711, line: 176, baseType: !386, size: 64, offset: 3456)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !1710, file: !1711, line: 177, baseType: !386, size: 64, offset: 3520)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "cgtime", scope: !1710, file: !1711, line: 178, baseType: !386, size: 64, offset: 3584)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !1710, file: !1711, line: 179, baseType: !1476, size: 128, offset: 3648)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !1710, file: !1711, line: 180, baseType: !138, size: 64, offset: 3776)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !1710, file: !1711, line: 180, baseType: !138, size: 64, offset: 3840)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "cnvcsw", scope: !1710, file: !1711, line: 180, baseType: !138, size: 64, offset: 3904)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "cnivcsw", scope: !1710, file: !1711, line: 180, baseType: !138, size: 64, offset: 3968)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !1710, file: !1711, line: 181, baseType: !138, size: 64, offset: 4032)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !1710, file: !1711, line: 181, baseType: !138, size: 64, offset: 4096)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "cmin_flt", scope: !1710, file: !1711, line: 181, baseType: !138, size: 64, offset: 4160)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "cmaj_flt", scope: !1710, file: !1711, line: 181, baseType: !138, size: 64, offset: 4224)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "inblock", scope: !1710, file: !1711, line: 182, baseType: !138, size: 64, offset: 4288)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "oublock", scope: !1710, file: !1711, line: 182, baseType: !138, size: 64, offset: 4352)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "cinblock", scope: !1710, file: !1711, line: 182, baseType: !138, size: 64, offset: 4416)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "coublock", scope: !1710, file: !1711, line: 182, baseType: !138, size: 64, offset: 4480)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "maxrss", scope: !1710, file: !1711, line: 183, baseType: !138, size: 64, offset: 4544)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "cmaxrss", scope: !1710, file: !1711, line: 183, baseType: !138, size: 64, offset: 4608)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !1710, file: !1711, line: 184, baseType: !1793, offset: 4672)
!1793 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_io_accounting", file: !1794, line: 12, elements: !309)
!1794 = !DIFile(filename: "./include/linux/task_io_accounting.h", directory: "/home/lizy2001/genbc/linux")
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "sum_sched_runtime", scope: !1710, file: !1711, line: 192, baseType: !388, size: 64, offset: 4672)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "rlim", scope: !1710, file: !1711, line: 203, baseType: !1797, size: 2048, offset: 4736)
!1797 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1798, size: 2048, elements: !1691)
!1798 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rlimit", file: !1799, line: 43, size: 128, elements: !1800)
!1799 = !DIFile(filename: "./include/uapi/linux/resource.h", directory: "/home/lizy2001/genbc/linux")
!1800 = !{!1801, !1802}
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_cur", scope: !1798, file: !1799, line: 44, baseType: !549, size: 64)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_max", scope: !1798, file: !1799, line: 45, baseType: !549, size: 64, offset: 64)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "oom_flag_origin", scope: !1710, file: !1711, line: 220, baseType: !457, size: 8, offset: 6784)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj", scope: !1710, file: !1711, line: 221, baseType: !199, size: 16, offset: 6800)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj_min", scope: !1710, file: !1711, line: 222, baseType: !199, size: 16, offset: 6816)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "oom_mm", scope: !1710, file: !1711, line: 224, baseType: !1020, size: 64, offset: 6848)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "cred_guard_mutex", scope: !1710, file: !1711, line: 227, baseType: !280, size: 192, offset: 6912)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "exec_update_mutex", scope: !1710, file: !1711, line: 233, baseType: !280, size: 192, offset: 7104)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "sighand", scope: !1175, file: !906, line: 970, baseType: !1810, size: 64, offset: 9280)
!1810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1811, size: 64)
!1811 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sighand_struct", file: !1711, line: 20, size: 16576, elements: !1812)
!1812 = !{!1813, !1814, !1815, !1816}
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "siglock", scope: !1811, file: !1711, line: 21, baseType: !295)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1811, file: !1711, line: 22, baseType: !1187, size: 32)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "signalfd_wqh", scope: !1811, file: !1711, line: 23, baseType: !1439, size: 128, offset: 64)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !1811, file: !1711, line: 24, baseType: !1817, size: 16384, offset: 192)
!1817 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1818, size: 16384, elements: !1838)
!1818 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sigaction", file: !1721, line: 49, size: 256, elements: !1819)
!1819 = !{!1820}
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "sa", scope: !1818, file: !1721, line: 50, baseType: !1821, size: 256)
!1821 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigaction", file: !1721, line: 35, size: 256, elements: !1822)
!1822 = !{!1823, !1830, !1831, !1837}
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "sa_handler", scope: !1821, file: !1721, line: 37, baseType: !1824, size: 64)
!1824 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sighandler_t", file: !1825, line: 19, baseType: !1826)
!1825 = !DIFile(filename: "./include/uapi/asm-generic/signal-defs.h", directory: "/home/lizy2001/genbc/linux")
!1826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1827, size: 64)
!1827 = !DIDerivedType(tag: DW_TAG_typedef, name: "__signalfn_t", file: !1825, line: 18, baseType: !1828)
!1828 = !DISubroutineType(types: !1829)
!1829 = !{null, !113}
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "sa_flags", scope: !1821, file: !1721, line: 38, baseType: !138, size: 64, offset: 64)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "sa_restorer", scope: !1821, file: !1721, line: 44, baseType: !1832, size: 64, offset: 128)
!1832 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sigrestore_t", file: !1825, line: 22, baseType: !1833)
!1833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1834, size: 64)
!1834 = !DIDerivedType(tag: DW_TAG_typedef, name: "__restorefn_t", file: !1825, line: 21, baseType: !1835)
!1835 = !DISubroutineType(types: !1836)
!1836 = !{null}
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "sa_mask", scope: !1821, file: !1721, line: 46, baseType: !1725, size: 64, offset: 192)
!1838 = !{!1839}
!1839 = !DISubrange(count: 64)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "blocked", scope: !1175, file: !906, line: 971, baseType: !1725, size: 64, offset: 9344)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "real_blocked", scope: !1175, file: !906, line: 972, baseType: !1725, size: 64, offset: 9408)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "saved_sigmask", scope: !1175, file: !906, line: 974, baseType: !1725, size: 64, offset: 9472)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "pending", scope: !1175, file: !906, line: 975, baseType: !1720, size: 192, offset: 9536)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_sp", scope: !1175, file: !906, line: 976, baseType: !138, size: 64, offset: 9728)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_size", scope: !1175, file: !906, line: 977, baseType: !547, size: 64, offset: 9792)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_flags", scope: !1175, file: !906, line: 978, baseType: !7, size: 32, offset: 9856)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "task_works", scope: !1175, file: !906, line: 980, baseType: !336, size: 64, offset: 9920)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "seccomp", scope: !1175, file: !906, line: 989, baseType: !1849, size: 128, offset: 9984)
!1849 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp", file: !1850, line: 35, size: 128, elements: !1851)
!1850 = !DIFile(filename: "./include/linux/seccomp.h", directory: "/home/lizy2001/genbc/linux")
!1851 = !{!1852, !1853, !1854}
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1849, file: !1850, line: 36, baseType: !113, size: 32)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "filter_count", scope: !1849, file: !1850, line: 37, baseType: !761, size: 32, offset: 32)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1849, file: !1850, line: 38, baseType: !1855, size: 64, offset: 64)
!1855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1856, size: 64)
!1856 = !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp_filter", file: !1850, line: 23, flags: DIFlagFwdDecl)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "parent_exec_id", scope: !1175, file: !906, line: 992, baseType: !386, size: 64, offset: 10112)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "self_exec_id", scope: !1175, file: !906, line: 993, baseType: !386, size: 64, offset: 10176)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_lock", scope: !1175, file: !906, line: 996, baseType: !295, offset: 10240)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "pi_lock", scope: !1175, file: !906, line: 999, baseType: !787, offset: 10240)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "wake_q", scope: !1175, file: !906, line: 1001, baseType: !1862, size: 64, offset: 10240)
!1862 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wake_q_node", file: !906, line: 636, size: 64, elements: !1863)
!1863 = !{!1864}
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1862, file: !906, line: 637, baseType: !1865, size: 64)
!1865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1862, size: 64)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "pi_waiters", scope: !1175, file: !906, line: 1005, baseType: !766, size: 128, offset: 10304)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "pi_top_task", scope: !1175, file: !906, line: 1007, baseType: !1174, size: 64, offset: 10432)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "pi_blocked_on", scope: !1175, file: !906, line: 1009, baseType: !1869, size: 64, offset: 10496)
!1869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1870, size: 64)
!1870 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt_mutex_waiter", file: !906, line: 1009, flags: DIFlagFwdDecl)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "journal_info", scope: !1175, file: !906, line: 1043, baseType: !111, size: 64, offset: 10560)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "bio_list", scope: !1175, file: !906, line: 1046, baseType: !1873, size: 64, offset: 10624)
!1873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1874, size: 64)
!1874 = !DICompositeType(tag: DW_TAG_structure_type, name: "bio_list", file: !906, line: 41, flags: DIFlagFwdDecl)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "plug", scope: !1175, file: !906, line: 1050, baseType: !1876, size: 64, offset: 10688)
!1876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1877, size: 64)
!1877 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_plug", file: !906, line: 42, flags: DIFlagFwdDecl)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "reclaim_state", scope: !1175, file: !906, line: 1054, baseType: !1879, size: 64, offset: 10752)
!1879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1880, size: 64)
!1880 = !DICompositeType(tag: DW_TAG_structure_type, name: "reclaim_state", file: !906, line: 55, flags: DIFlagFwdDecl)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "backing_dev_info", scope: !1175, file: !906, line: 1056, baseType: !1882, size: 64, offset: 10816)
!1882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1883, size: 64)
!1883 = !DICompositeType(tag: DW_TAG_structure_type, name: "backing_dev_info", file: !906, line: 40, flags: DIFlagFwdDecl)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "io_context", scope: !1175, file: !906, line: 1058, baseType: !1885, size: 64, offset: 10880)
!1885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1886, size: 64)
!1886 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_context", file: !1887, line: 99, size: 704, elements: !1888)
!1887 = !DIFile(filename: "./include/linux/iocontext.h", directory: "/home/lizy2001/genbc/linux")
!1888 = !{!1889, !1890, !1891, !1892, !1893, !1894, !1895, !1914, !1915}
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !1886, file: !1887, line: 100, baseType: !284, size: 64)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "active_ref", scope: !1886, file: !1887, line: 101, baseType: !761, size: 32, offset: 64)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "nr_tasks", scope: !1886, file: !1887, line: 102, baseType: !761, size: 32, offset: 96)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1886, file: !1887, line: 105, baseType: !295, offset: 128)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "ioprio", scope: !1886, file: !1887, line: 107, baseType: !132, size: 16, offset: 128)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "icq_tree", scope: !1886, file: !1887, line: 109, baseType: !752, size: 128, offset: 192)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "icq_hint", scope: !1886, file: !1887, line: 110, baseType: !1896, size: 64, offset: 320)
!1896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1897, size: 64)
!1897 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_cq", file: !1887, line: 73, size: 448, elements: !1898)
!1898 = !{!1899, !1902, !1903, !1908, !1913}
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !1897, file: !1887, line: 74, baseType: !1900, size: 64)
!1900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1901, size: 64)
!1901 = !DICompositeType(tag: DW_TAG_structure_type, name: "request_queue", file: !1887, line: 74, flags: DIFlagFwdDecl)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "ioc", scope: !1897, file: !1887, line: 75, baseType: !1885, size: 64, offset: 64)
!1903 = !DIDerivedType(tag: DW_TAG_member, scope: !1897, file: !1887, line: 83, baseType: !1904, size: 128, offset: 128)
!1904 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1897, file: !1887, line: 83, size: 128, elements: !1905)
!1905 = !{!1906, !1907}
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "q_node", scope: !1904, file: !1887, line: 84, baseType: !311, size: 128)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_icq_cache", scope: !1904, file: !1887, line: 85, baseType: !980, size: 64)
!1908 = !DIDerivedType(tag: DW_TAG_member, scope: !1897, file: !1887, line: 87, baseType: !1909, size: 128, offset: 256)
!1909 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1897, file: !1887, line: 87, size: 128, elements: !1910)
!1910 = !{!1911, !1912}
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "ioc_node", scope: !1909, file: !1887, line: 88, baseType: !614, size: 128)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_head", scope: !1909, file: !1887, line: 89, baseType: !333, size: 128, align: 64)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1897, file: !1887, line: 92, baseType: !7, size: 32, offset: 384)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "icq_list", scope: !1886, file: !1887, line: 111, baseType: !610, size: 64, offset: 384)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "release_work", scope: !1886, file: !1887, line: 113, baseType: !1916, size: 256, offset: 448)
!1916 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "work_struct", file: !1917, line: 102, size: 256, elements: !1918)
!1917 = !DIFile(filename: "./include/linux/workqueue.h", directory: "/home/lizy2001/genbc/linux")
!1918 = !{!1919, !1920, !1921}
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1916, file: !1917, line: 103, baseType: !284, size: 64)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !1916, file: !1917, line: 104, baseType: !311, size: 128, offset: 64)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1916, file: !1917, line: 105, baseType: !1922, size: 64, offset: 192)
!1922 = !DIDerivedType(tag: DW_TAG_typedef, name: "work_func_t", file: !1917, line: 21, baseType: !1923)
!1923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1924, size: 64)
!1924 = !DISubroutineType(types: !1925)
!1925 = !{null, !1926}
!1926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1916, size: 64)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "capture_control", scope: !1175, file: !906, line: 1061, baseType: !1928, size: 64, offset: 10944)
!1928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1929, size: 64)
!1929 = !DICompositeType(tag: DW_TAG_structure_type, name: "capture_control", file: !906, line: 43, flags: DIFlagFwdDecl)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_message", scope: !1175, file: !906, line: 1064, baseType: !138, size: 64, offset: 11008)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "last_siginfo", scope: !1175, file: !906, line: 1065, baseType: !1932, size: 64, offset: 11072)
!1932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1933, size: 64)
!1933 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_siginfo_t", file: !1721, line: 14, baseType: !1934)
!1934 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_siginfo", file: !1721, line: 12, size: 384, elements: !1935)
!1935 = !{!1936}
!1936 = !DIDerivedType(tag: DW_TAG_member, scope: !1934, file: !1721, line: 13, baseType: !1937, size: 384)
!1937 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1934, file: !1721, line: 13, size: 384, elements: !1938)
!1938 = !{!1939, !1940, !1941, !1942}
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "si_signo", scope: !1937, file: !1721, line: 13, baseType: !113, size: 32)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "si_errno", scope: !1937, file: !1721, line: 13, baseType: !113, size: 32, offset: 32)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "si_code", scope: !1937, file: !1721, line: 13, baseType: !113, size: 32, offset: 64)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "_sifields", scope: !1937, file: !1721, line: 13, baseType: !1943, size: 256, offset: 128)
!1943 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "__sifields", file: !1944, line: 32, size: 256, elements: !1945)
!1944 = !DIFile(filename: "./include/uapi/asm-generic/siginfo.h", directory: "/home/lizy2001/genbc/linux")
!1945 = !{!1946, !1951, !1964, !1970, !1979, !1999, !2004}
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "_kill", scope: !1943, file: !1944, line: 37, baseType: !1947, size: 64)
!1947 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1943, file: !1944, line: 34, size: 64, elements: !1948)
!1948 = !{!1949, !1950}
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !1947, file: !1944, line: 35, baseType: !1418, size: 32)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !1947, file: !1944, line: 36, baseType: !406, size: 32, offset: 32)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "_timer", scope: !1943, file: !1944, line: 45, baseType: !1952, size: 192)
!1952 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1943, file: !1944, line: 40, size: 192, elements: !1953)
!1953 = !{!1954, !1956, !1957, !1963}
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "_tid", scope: !1952, file: !1944, line: 41, baseType: !1955, size: 32)
!1955 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_timer_t", file: !407, line: 95, baseType: !113)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "_overrun", scope: !1952, file: !1944, line: 42, baseType: !113, size: 32, offset: 32)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !1952, file: !1944, line: 43, baseType: !1958, size: 64, offset: 64)
!1958 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigval_t", file: !1944, line: 11, baseType: !1959)
!1959 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "sigval", file: !1944, line: 8, size: 64, elements: !1960)
!1960 = !{!1961, !1962}
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "sival_int", scope: !1959, file: !1944, line: 9, baseType: !113, size: 32)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "sival_ptr", scope: !1959, file: !1944, line: 10, baseType: !111, size: 64)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "_sys_private", scope: !1952, file: !1944, line: 44, baseType: !113, size: 32, offset: 128)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "_rt", scope: !1943, file: !1944, line: 52, baseType: !1965, size: 128)
!1965 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1943, file: !1944, line: 48, size: 128, elements: !1966)
!1966 = !{!1967, !1968, !1969}
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !1965, file: !1944, line: 49, baseType: !1418, size: 32)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !1965, file: !1944, line: 50, baseType: !406, size: 32, offset: 32)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !1965, file: !1944, line: 51, baseType: !1958, size: 64, offset: 64)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "_sigchld", scope: !1943, file: !1944, line: 61, baseType: !1971, size: 256)
!1971 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1943, file: !1944, line: 55, size: 256, elements: !1972)
!1972 = !{!1973, !1974, !1975, !1976, !1978}
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !1971, file: !1944, line: 56, baseType: !1418, size: 32)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !1971, file: !1944, line: 57, baseType: !406, size: 32, offset: 32)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "_status", scope: !1971, file: !1944, line: 58, baseType: !113, size: 32, offset: 64)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "_utime", scope: !1971, file: !1944, line: 59, baseType: !1977, size: 64, offset: 128)
!1977 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clock_t", file: !407, line: 94, baseType: !546)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "_stime", scope: !1971, file: !1944, line: 60, baseType: !1977, size: 64, offset: 192)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "_sigfault", scope: !1943, file: !1944, line: 95, baseType: !1980, size: 256)
!1980 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1943, file: !1944, line: 64, size: 256, elements: !1981)
!1981 = !{!1982, !1983}
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "_addr", scope: !1980, file: !1944, line: 65, baseType: !111, size: 64)
!1983 = !DIDerivedType(tag: DW_TAG_member, scope: !1980, file: !1944, line: 77, baseType: !1984, size: 192, offset: 64)
!1984 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1980, file: !1944, line: 77, size: 192, elements: !1985)
!1985 = !{!1986, !1987, !1994}
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_lsb", scope: !1984, file: !1944, line: 82, baseType: !199, size: 16)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_bnd", scope: !1984, file: !1944, line: 88, baseType: !1988, size: 192)
!1988 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1984, file: !1944, line: 84, size: 192, elements: !1989)
!1989 = !{!1990, !1992, !1993}
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_bnd", scope: !1988, file: !1944, line: 85, baseType: !1991, size: 64)
!1991 = !DICompositeType(tag: DW_TAG_array_type, baseType: !117, size: 64, elements: !1287)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "_lower", scope: !1988, file: !1944, line: 86, baseType: !111, size: 64, offset: 64)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "_upper", scope: !1988, file: !1944, line: 87, baseType: !111, size: 64, offset: 128)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_pkey", scope: !1984, file: !1944, line: 93, baseType: !1995, size: 96)
!1995 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1984, file: !1944, line: 90, size: 96, elements: !1996)
!1996 = !{!1997, !1998}
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_pkey", scope: !1995, file: !1944, line: 91, baseType: !1991, size: 64)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "_pkey", scope: !1995, file: !1944, line: 92, baseType: !174, size: 32, offset: 64)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "_sigpoll", scope: !1943, file: !1944, line: 101, baseType: !2000, size: 128)
!2000 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1943, file: !1944, line: 98, size: 128, elements: !2001)
!2001 = !{!2002, !2003}
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "_band", scope: !2000, file: !1944, line: 99, baseType: !507, size: 64)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "_fd", scope: !2000, file: !1944, line: 100, baseType: !113, size: 32, offset: 64)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "_sigsys", scope: !1943, file: !1944, line: 108, baseType: !2005, size: 128)
!2005 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1943, file: !1944, line: 104, size: 128, elements: !2006)
!2006 = !{!2007, !2008, !2009}
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "_call_addr", scope: !2005, file: !1944, line: 105, baseType: !111, size: 64)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "_syscall", scope: !2005, file: !1944, line: 106, baseType: !113, size: 32, offset: 64)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "_arch", scope: !2005, file: !1944, line: 107, baseType: !7, size: 32, offset: 96)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !1175, file: !906, line: 1067, baseType: !1793, offset: 11136)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "robust_list", scope: !1175, file: !906, line: 1099, baseType: !2012, size: 64, offset: 11136)
!2012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2013, size: 64)
!2013 = !DICompositeType(tag: DW_TAG_structure_type, name: "robust_list_head", file: !906, line: 56, flags: DIFlagFwdDecl)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_list", scope: !1175, file: !906, line: 1103, baseType: !311, size: 128, offset: 11200)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_cache", scope: !1175, file: !906, line: 1104, baseType: !2016, size: 64, offset: 11328)
!2016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2017, size: 64)
!2017 = !DICompositeType(tag: DW_TAG_structure_type, name: "futex_pi_state", file: !906, line: 46, flags: DIFlagFwdDecl)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "futex_exit_mutex", scope: !1175, file: !906, line: 1105, baseType: !280, size: 192, offset: 11392)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "futex_state", scope: !1175, file: !906, line: 1106, baseType: !7, size: 32, offset: 11584)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_ctxp", scope: !1175, file: !906, line: 1109, baseType: !2021, size: 128, offset: 11648)
!2021 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2022, size: 128, elements: !153)
!2022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2023, size: 64)
!2023 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event_context", file: !906, line: 51, flags: DIFlagFwdDecl)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_mutex", scope: !1175, file: !906, line: 1110, baseType: !280, size: 192, offset: 11776)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_list", scope: !1175, file: !906, line: 1111, baseType: !311, size: 128, offset: 11968)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "rseq", scope: !1175, file: !906, line: 1173, baseType: !2027, size: 64, offset: 12096)
!2027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2028, size: 64)
!2028 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rseq", file: !2029, line: 62, size: 256, align: 256, elements: !2030)
!2029 = !DIFile(filename: "./include/uapi/linux/rseq.h", directory: "/home/lizy2001/genbc/linux")
!2030 = !{!2031, !2032, !2033, !2038}
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id_start", scope: !2028, file: !2029, line: 75, baseType: !174, size: 32)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id", scope: !2028, file: !2029, line: 90, baseType: !174, size: 32, offset: 32)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_cs", scope: !2028, file: !2029, line: 124, baseType: !2034, size: 64, offset: 64)
!2034 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2028, file: !2029, line: 109, size: 64, elements: !2035)
!2035 = !{!2036, !2037}
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "ptr64", scope: !2034, file: !2029, line: 110, baseType: !387, size: 64)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !2034, file: !2029, line: 112, baseType: !387, size: 64)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2028, file: !2029, line: 144, baseType: !174, size: 32, offset: 128)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_sig", scope: !1175, file: !906, line: 1174, baseType: !383, size: 32, offset: 12160)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_event_mask", scope: !1175, file: !906, line: 1179, baseType: !138, size: 64, offset: 12224)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_ubc", scope: !1175, file: !906, line: 1182, baseType: !2042, size: 128, offset: 12288)
!2042 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tlbflush_unmap_batch", file: !1117, line: 76, size: 128, elements: !2043)
!2043 = !{!2044, !2049, !2050}
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2042, file: !1117, line: 85, baseType: !2045, size: 64)
!2045 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arch_tlbflush_unmap_batch", file: !2046, line: 7, size: 64, elements: !2047)
!2046 = !DIFile(filename: "./arch/x86/include/asm/tlbbatch.h", directory: "/home/lizy2001/genbc/linux")
!2047 = !{!2048}
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "cpumask", scope: !2045, file: !2046, line: 12, baseType: !1323, size: 64)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "flush_required", scope: !2042, file: !1117, line: 88, baseType: !457, size: 8, offset: 64)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "writable", scope: !2042, file: !1117, line: 95, baseType: !457, size: 8, offset: 72)
!2051 = !DIDerivedType(tag: DW_TAG_member, scope: !1175, file: !906, line: 1184, baseType: !2052, size: 128, offset: 12416)
!2052 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1175, file: !906, line: 1184, size: 128, elements: !2053)
!2053 = !{!2054, !2055}
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_users", scope: !2052, file: !906, line: 1185, baseType: !1187, size: 32)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2052, file: !906, line: 1186, baseType: !333, size: 128, align: 64)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "splice_pipe", scope: !1175, file: !906, line: 1190, baseType: !904, size: 64, offset: 12544)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "task_frag", scope: !1175, file: !906, line: 1192, baseType: !2058, size: 128, offset: 12608)
!2058 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page_frag", file: !1117, line: 64, size: 128, elements: !2059)
!2059 = !{!2060, !2061, !2062}
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !2058, file: !1117, line: 65, baseType: !734, size: 64)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2058, file: !1117, line: 67, baseType: !174, size: 32, offset: 64)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2058, file: !1117, line: 68, baseType: !174, size: 32, offset: 96)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied", scope: !1175, file: !906, line: 1206, baseType: !113, size: 32, offset: 12736)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied_pause", scope: !1175, file: !906, line: 1207, baseType: !113, size: 32, offset: 12768)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_paused_when", scope: !1175, file: !906, line: 1209, baseType: !138, size: 64, offset: 12800)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "timer_slack_ns", scope: !1175, file: !906, line: 1219, baseType: !386, size: 64, offset: 12864)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "default_timer_slack_ns", scope: !1175, file: !906, line: 1220, baseType: !386, size: 64, offset: 12928)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "pagefault_disabled", scope: !1175, file: !906, line: 1317, baseType: !113, size: 32, offset: 12992)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "oom_reaper_list", scope: !1175, file: !906, line: 1319, baseType: !1174, size: 64, offset: 13056)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm_area", scope: !1175, file: !906, line: 1322, baseType: !2071, size: 64, offset: 13120)
!2071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2072, size: 64)
!2072 = !DICompositeType(tag: DW_TAG_structure_type, name: "vm_struct", file: !906, line: 1322, flags: DIFlagFwdDecl)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "stack_refcount", scope: !1175, file: !906, line: 1326, baseType: !1187, size: 32, offset: 13184)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "mce_vaddr", scope: !1175, file: !906, line: 1342, baseType: !111, size: 64, offset: 13248)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kflags", scope: !1175, file: !906, line: 1343, baseType: !387, size: 64, offset: 13312)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "mce_addr", scope: !1175, file: !906, line: 1344, baseType: !386, size: 64, offset: 13376)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "mce_ripv", scope: !1175, file: !906, line: 1345, baseType: !387, size: 1, offset: 13440, flags: DIFlagBitField, extraData: i64 13440)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "mce_whole_page", scope: !1175, file: !906, line: 1346, baseType: !387, size: 1, offset: 13441, flags: DIFlagBitField, extraData: i64 13440)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "__mce_reserved", scope: !1175, file: !906, line: 1347, baseType: !387, size: 62, offset: 13442, flags: DIFlagBitField, extraData: i64 13440)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kill_me", scope: !1175, file: !906, line: 1348, baseType: !333, size: 128, align: 64, offset: 13504)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !1175, file: !906, line: 1358, baseType: !2082, size: 34816, offset: 13824)
!2082 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_struct", file: !2083, line: 485, size: 34816, elements: !2084)
!2083 = !DIFile(filename: "./arch/x86/include/asm/processor.h", directory: "/home/lizy2001/genbc/linux")
!2084 = !{!2085, !2103, !2104, !2105, !2106, !2107, !2108, !2109, !2110, !2114, !2115, !2116, !2117, !2118, !2119, !2122, !2123, !2124}
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "tls_array", scope: !2082, file: !2083, line: 487, baseType: !2086, size: 192)
!2086 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2087, size: 192, elements: !626)
!2087 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "desc_struct", file: !2088, line: 16, size: 64, elements: !2089)
!2088 = !DIFile(filename: "./arch/x86/include/asm/desc_defs.h", directory: "/home/lizy2001/genbc/linux")
!2089 = !{!2090, !2091, !2092, !2093, !2094, !2095, !2096, !2097, !2098, !2099, !2100, !2101, !2102}
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "limit0", scope: !2087, file: !2088, line: 17, baseType: !270, size: 16)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "base0", scope: !2087, file: !2088, line: 18, baseType: !270, size: 16, offset: 16)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "base1", scope: !2087, file: !2088, line: 19, baseType: !270, size: 8, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2087, file: !2088, line: 19, baseType: !270, size: 4, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !2087, file: !2088, line: 19, baseType: !270, size: 1, offset: 44, flags: DIFlagBitField, extraData: i64 32)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "dpl", scope: !2087, file: !2088, line: 19, baseType: !270, size: 2, offset: 45, flags: DIFlagBitField, extraData: i64 32)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !2087, file: !2088, line: 19, baseType: !270, size: 1, offset: 47, flags: DIFlagBitField, extraData: i64 32)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "limit1", scope: !2087, file: !2088, line: 20, baseType: !270, size: 4, offset: 48, flags: DIFlagBitField, extraData: i64 32)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "avl", scope: !2087, file: !2088, line: 20, baseType: !270, size: 1, offset: 52, flags: DIFlagBitField, extraData: i64 32)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !2087, file: !2088, line: 20, baseType: !270, size: 1, offset: 53, flags: DIFlagBitField, extraData: i64 32)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !2087, file: !2088, line: 20, baseType: !270, size: 1, offset: 54, flags: DIFlagBitField, extraData: i64 32)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !2087, file: !2088, line: 20, baseType: !270, size: 1, offset: 55, flags: DIFlagBitField, extraData: i64 32)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "base2", scope: !2087, file: !2088, line: 20, baseType: !270, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 32)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !2082, file: !2083, line: 491, baseType: !138, size: 64, offset: 192)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "es", scope: !2082, file: !2083, line: 495, baseType: !132, size: 16, offset: 256)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !2082, file: !2083, line: 496, baseType: !132, size: 16, offset: 272)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "fsindex", scope: !2082, file: !2083, line: 497, baseType: !132, size: 16, offset: 288)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "gsindex", scope: !2082, file: !2083, line: 498, baseType: !132, size: 16, offset: 304)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "fsbase", scope: !2082, file: !2083, line: 502, baseType: !138, size: 64, offset: 320)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !2082, file: !2083, line: 503, baseType: !138, size: 64, offset: 384)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_bps", scope: !2082, file: !2083, line: 514, baseType: !2111, size: 256, offset: 448)
!2111 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2112, size: 256, elements: !1121)
!2112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2113, size: 64)
!2113 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event", file: !2083, line: 483, flags: DIFlagFwdDecl)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_dr6", scope: !2082, file: !2083, line: 516, baseType: !138, size: 64, offset: 704)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_dr7", scope: !2082, file: !2083, line: 518, baseType: !138, size: 64, offset: 768)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "cr2", scope: !2082, file: !2083, line: 520, baseType: !138, size: 64, offset: 832)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "trap_nr", scope: !2082, file: !2083, line: 521, baseType: !138, size: 64, offset: 896)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "error_code", scope: !2082, file: !2083, line: 522, baseType: !138, size: 64, offset: 960)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "io_bitmap", scope: !2082, file: !2083, line: 528, baseType: !2120, size: 64, offset: 1024)
!2120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2121, size: 64)
!2121 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_bitmap", file: !2083, line: 10, flags: DIFlagFwdDecl)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "iopl_emul", scope: !2082, file: !2083, line: 535, baseType: !138, size: 64, offset: 1088)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "sig_on_uaccess_err", scope: !2082, file: !2083, line: 537, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "fpu", scope: !2082, file: !2083, line: 540, baseType: !2125, size: 33280, offset: 1536)
!2125 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fpu", file: !2126, line: 317, size: 33280, elements: !2127)
!2126 = !DIFile(filename: "./arch/x86/include/asm/fpu/types.h", directory: "/home/lizy2001/genbc/linux")
!2127 = !{!2128, !2129, !2130}
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "last_cpu", scope: !2125, file: !2126, line: 330, baseType: !7, size: 32)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "avx512_timestamp", scope: !2125, file: !2126, line: 337, baseType: !138, size: 64, offset: 64)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2125, file: !2126, line: 348, baseType: !2131, size: 32768, offset: 512)
!2131 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "fpregs_state", file: !2126, line: 304, size: 32768, elements: !2132)
!2132 = !{!2133, !2148, !2183, !2233, !2246}
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "fsave", scope: !2131, file: !2126, line: 305, baseType: !2134, size: 896)
!2134 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fregs_state", file: !2126, line: 12, size: 896, elements: !2135)
!2135 = !{!2136, !2137, !2138, !2139, !2140, !2141, !2142, !2143, !2147}
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !2134, file: !2126, line: 13, baseType: !383, size: 32)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !2134, file: !2126, line: 14, baseType: !383, size: 32, offset: 32)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !2134, file: !2126, line: 15, baseType: !383, size: 32, offset: 64)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !2134, file: !2126, line: 16, baseType: !383, size: 32, offset: 96)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !2134, file: !2126, line: 17, baseType: !383, size: 32, offset: 128)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !2134, file: !2126, line: 18, baseType: !383, size: 32, offset: 160)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !2134, file: !2126, line: 19, baseType: !383, size: 32, offset: 192)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !2134, file: !2126, line: 22, baseType: !2144, size: 640, offset: 224)
!2144 = !DICompositeType(tag: DW_TAG_array_type, baseType: !383, size: 640, elements: !2145)
!2145 = !{!2146}
!2146 = !DISubrange(count: 20)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !2134, file: !2126, line: 25, baseType: !383, size: 32, offset: 864)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "fxsave", scope: !2131, file: !2126, line: 306, baseType: !2149, size: 4096, align: 128)
!2149 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fxregs_state", file: !2126, line: 34, size: 4096, align: 128, elements: !2150)
!2150 = !{!2151, !2152, !2153, !2154, !2155, !2170, !2171, !2172, !2174, !2176, !2178}
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !2149, file: !2126, line: 35, baseType: !270, size: 16)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !2149, file: !2126, line: 36, baseType: !270, size: 16, offset: 16)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !2149, file: !2126, line: 37, baseType: !270, size: 16, offset: 32)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "fop", scope: !2149, file: !2126, line: 38, baseType: !270, size: 16, offset: 48)
!2155 = !DIDerivedType(tag: DW_TAG_member, scope: !2149, file: !2126, line: 39, baseType: !2156, size: 128, offset: 64)
!2156 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2149, file: !2126, line: 39, size: 128, elements: !2157)
!2157 = !{!2158, !2163}
!2158 = !DIDerivedType(tag: DW_TAG_member, scope: !2156, file: !2126, line: 40, baseType: !2159, size: 128)
!2159 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2156, file: !2126, line: 40, size: 128, elements: !2160)
!2160 = !{!2161, !2162}
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "rip", scope: !2159, file: !2126, line: 41, baseType: !386, size: 64)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "rdp", scope: !2159, file: !2126, line: 42, baseType: !386, size: 64, offset: 64)
!2163 = !DIDerivedType(tag: DW_TAG_member, scope: !2156, file: !2126, line: 44, baseType: !2164, size: 128)
!2164 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2156, file: !2126, line: 44, size: 128, elements: !2165)
!2165 = !{!2166, !2167, !2168, !2169}
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !2164, file: !2126, line: 45, baseType: !383, size: 32)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !2164, file: !2126, line: 46, baseType: !383, size: 32, offset: 32)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !2164, file: !2126, line: 47, baseType: !383, size: 32, offset: 64)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !2164, file: !2126, line: 48, baseType: !383, size: 32, offset: 96)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr", scope: !2149, file: !2126, line: 51, baseType: !383, size: 32, offset: 192)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr_mask", scope: !2149, file: !2126, line: 52, baseType: !383, size: 32, offset: 224)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !2149, file: !2126, line: 55, baseType: !2173, size: 1024, offset: 256)
!2173 = !DICompositeType(tag: DW_TAG_array_type, baseType: !383, size: 1024, elements: !177)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "xmm_space", scope: !2149, file: !2126, line: 58, baseType: !2175, size: 2048, offset: 1280)
!2175 = !DICompositeType(tag: DW_TAG_array_type, baseType: !383, size: 2048, elements: !1838)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !2149, file: !2126, line: 60, baseType: !2177, size: 384, offset: 3328)
!2177 = !DICompositeType(tag: DW_TAG_array_type, baseType: !383, size: 384, elements: !144)
!2178 = !DIDerivedType(tag: DW_TAG_member, scope: !2149, file: !2126, line: 62, baseType: !2179, size: 384, offset: 3712)
!2179 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2149, file: !2126, line: 62, size: 384, elements: !2180)
!2180 = !{!2181, !2182}
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "padding1", scope: !2179, file: !2126, line: 63, baseType: !2177, size: 384)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "sw_reserved", scope: !2179, file: !2126, line: 64, baseType: !2177, size: 384)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !2131, file: !2126, line: 307, baseType: !2184, size: 1088)
!2184 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swregs_state", file: !2126, line: 79, size: 1088, elements: !2185)
!2185 = !{!2186, !2187, !2188, !2189, !2190, !2191, !2192, !2193, !2194, !2195, !2196, !2197, !2198, !2199, !2200, !2232}
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !2184, file: !2126, line: 80, baseType: !383, size: 32)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !2184, file: !2126, line: 81, baseType: !383, size: 32, offset: 32)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !2184, file: !2126, line: 82, baseType: !383, size: 32, offset: 64)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !2184, file: !2126, line: 83, baseType: !383, size: 32, offset: 96)
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !2184, file: !2126, line: 84, baseType: !383, size: 32, offset: 128)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !2184, file: !2126, line: 85, baseType: !383, size: 32, offset: 160)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !2184, file: !2126, line: 86, baseType: !383, size: 32, offset: 192)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !2184, file: !2126, line: 88, baseType: !2144, size: 640, offset: 224)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "ftop", scope: !2184, file: !2126, line: 89, baseType: !1309, size: 8, offset: 864)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !2184, file: !2126, line: 90, baseType: !1309, size: 8, offset: 872)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "lookahead", scope: !2184, file: !2126, line: 91, baseType: !1309, size: 8, offset: 880)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "no_update", scope: !2184, file: !2126, line: 92, baseType: !1309, size: 8, offset: 888)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "rm", scope: !2184, file: !2126, line: 93, baseType: !1309, size: 8, offset: 896)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "alimit", scope: !2184, file: !2126, line: 94, baseType: !1309, size: 8, offset: 904)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !2184, file: !2126, line: 95, baseType: !2201, size: 64, offset: 960)
!2201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2202, size: 64)
!2202 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "math_emu_info", file: !2203, line: 11, size: 128, elements: !2204)
!2203 = !DIFile(filename: "./arch/x86/include/asm/math_emu.h", directory: "/home/lizy2001/genbc/linux")
!2204 = !{!2205, !2206}
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "___orig_eip", scope: !2202, file: !2203, line: 12, baseType: !507, size: 64)
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !2202, file: !2203, line: 13, baseType: !2207, size: 64, offset: 64)
!2207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2208, size: 64)
!2208 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pt_regs", file: !2209, line: 56, size: 1344, elements: !2210)
!2209 = !DIFile(filename: "./arch/x86/include/asm/ptrace.h", directory: "/home/lizy2001/genbc/linux")
!2210 = !{!2211, !2212, !2213, !2214, !2215, !2216, !2217, !2218, !2219, !2220, !2221, !2222, !2223, !2224, !2225, !2226, !2227, !2228, !2229, !2230, !2231}
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2208, file: !2209, line: 61, baseType: !138, size: 64)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2208, file: !2209, line: 62, baseType: !138, size: 64, offset: 64)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "r13", scope: !2208, file: !2209, line: 63, baseType: !138, size: 64, offset: 128)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2208, file: !2209, line: 64, baseType: !138, size: 64, offset: 192)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "bp", scope: !2208, file: !2209, line: 65, baseType: !138, size: 64, offset: 256)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "bx", scope: !2208, file: !2209, line: 66, baseType: !138, size: 64, offset: 320)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "r11", scope: !2208, file: !2209, line: 68, baseType: !138, size: 64, offset: 384)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "r10", scope: !2208, file: !2209, line: 69, baseType: !138, size: 64, offset: 448)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "r9", scope: !2208, file: !2209, line: 70, baseType: !138, size: 64, offset: 512)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "r8", scope: !2208, file: !2209, line: 71, baseType: !138, size: 64, offset: 576)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "ax", scope: !2208, file: !2209, line: 72, baseType: !138, size: 64, offset: 640)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "cx", scope: !2208, file: !2209, line: 73, baseType: !138, size: 64, offset: 704)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "dx", scope: !2208, file: !2209, line: 74, baseType: !138, size: 64, offset: 768)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "si", scope: !2208, file: !2209, line: 75, baseType: !138, size: 64, offset: 832)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "di", scope: !2208, file: !2209, line: 76, baseType: !138, size: 64, offset: 896)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "orig_ax", scope: !2208, file: !2209, line: 81, baseType: !138, size: 64, offset: 960)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2208, file: !2209, line: 83, baseType: !138, size: 64, offset: 1024)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !2208, file: !2209, line: 84, baseType: !138, size: 64, offset: 1088)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2208, file: !2209, line: 85, baseType: !138, size: 64, offset: 1152)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !2208, file: !2209, line: 86, baseType: !138, size: 64, offset: 1216)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "ss", scope: !2208, file: !2209, line: 87, baseType: !138, size: 64, offset: 1280)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "entry_eip", scope: !2184, file: !2126, line: 96, baseType: !383, size: 32, offset: 1024)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "xsave", scope: !2131, file: !2126, line: 308, baseType: !2234, size: 4608, align: 512)
!2234 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xregs_state", file: !2126, line: 289, size: 4608, align: 512, elements: !2235)
!2235 = !{!2236, !2237, !2244}
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "i387", scope: !2234, file: !2126, line: 290, baseType: !2149, size: 4096, align: 128)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !2234, file: !2126, line: 291, baseType: !2238, size: 512, offset: 4096)
!2238 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xstate_header", file: !2126, line: 268, size: 512, elements: !2239)
!2239 = !{!2240, !2241, !2242}
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "xfeatures", scope: !2238, file: !2126, line: 269, baseType: !386, size: 64)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "xcomp_bv", scope: !2238, file: !2126, line: 270, baseType: !386, size: 64, offset: 64)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !2238, file: !2126, line: 271, baseType: !2243, size: 384, offset: 128)
!2243 = !DICompositeType(tag: DW_TAG_array_type, baseType: !386, size: 384, elements: !1581)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "extended_state_area", scope: !2234, file: !2126, line: 292, baseType: !2245, offset: 4608)
!2245 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1309, elements: !1679)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "__padding", scope: !2131, file: !2126, line: 309, baseType: !2247, size: 32768)
!2247 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1309, size: 32768, elements: !2248)
!2248 = !{!2249}
!2249 = !DISubrange(count: 4096)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1171, file: !736, line: 378, baseType: !2251, size: 64, offset: 64)
!2251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1171, size: 64)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "startup", scope: !1167, file: !736, line: 384, baseType: !1460, size: 192, offset: 192)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_lock", scope: !1024, file: !736, line: 500, baseType: !295, offset: 6656)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_table", scope: !1024, file: !736, line: 501, baseType: !2255, size: 64, offset: 6656)
!2255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2256, size: 64)
!2256 = !DICompositeType(tag: DW_TAG_structure_type, name: "kioctx_table", file: !736, line: 387, flags: DIFlagFwdDecl)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1024, file: !736, line: 516, baseType: !1669, size: 64, offset: 6720)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "exe_file", scope: !1024, file: !736, line: 519, baseType: !320, size: 64, offset: 6784)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_subscriptions", scope: !1024, file: !736, line: 521, baseType: !2260, size: 64, offset: 6848)
!2260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2261, size: 64)
!2261 = !DICompositeType(tag: DW_TAG_structure_type, name: "mmu_notifier_subscriptions", file: !736, line: 521, flags: DIFlagFwdDecl)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_pending", scope: !1024, file: !736, line: 545, baseType: !761, size: 32, offset: 6912)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_batched", scope: !1024, file: !736, line: 548, baseType: !457, size: 8, offset: 6944)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "uprobes_state", scope: !1024, file: !736, line: 550, baseType: !2265, offset: 6952)
!2265 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uprobes_state", file: !2266, line: 142, elements: !309)
!2266 = !DIFile(filename: "./include/linux/uprobes.h", directory: "/home/lizy2001/genbc/linux")
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "async_put_work", scope: !1024, file: !736, line: 554, baseType: !1916, size: 256, offset: 6976)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "pasid", scope: !1024, file: !736, line: 557, baseType: !383, size: 32, offset: 7232)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_bitmap", scope: !1021, file: !736, line: 565, baseType: !2270, offset: 7296)
!2270 = !DICompositeType(tag: DW_TAG_array_type, baseType: !138, elements: !2271)
!2271 = !{!2272}
!2272 = !DISubrange(count: -1)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "pt_frag_refcount", scope: !1017, file: !736, line: 151, baseType: !761, size: 32)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !1009, file: !736, line: 156, baseType: !295, offset: 256)
!2275 = !DIDerivedType(tag: DW_TAG_member, scope: !740, file: !736, line: 159, baseType: !2276, size: 128)
!2276 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !740, file: !736, line: 159, size: 128, elements: !2277)
!2277 = !{!2278, !2281}
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "pgmap", scope: !2276, file: !736, line: 161, baseType: !2279, size: 64)
!2279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2280, size: 64)
!2280 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap", file: !736, line: 161, flags: DIFlagFwdDecl)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "zone_device_data", scope: !2276, file: !736, line: 162, baseType: !111, size: 64, offset: 64)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !740, file: !736, line: 176, baseType: !333, size: 128, align: 64)
!2283 = !DIDerivedType(tag: DW_TAG_member, scope: !735, file: !736, line: 179, baseType: !2284, size: 32, offset: 384)
!2284 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !735, file: !736, line: 179, size: 32, elements: !2285)
!2285 = !{!2286, !2287, !2288, !2289}
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "_mapcount", scope: !2284, file: !736, line: 184, baseType: !761, size: 32)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "page_type", scope: !2284, file: !736, line: 192, baseType: !7, size: 32)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !2284, file: !736, line: 194, baseType: !7, size: 32)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !2284, file: !736, line: 195, baseType: !113, size: 32)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "_refcount", scope: !735, file: !736, line: 199, baseType: !761, size: 32, offset: 416)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cached_objects", scope: !634, file: !31, line: 1964, baseType: !2292, size: 64, offset: 1344)
!2292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2293, size: 64)
!2293 = !DISubroutineType(types: !2294)
!2294 = !{!507, !571, !2295}
!2295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2296, size: 64)
!2296 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrink_control", file: !2297, line: 12, size: 256, elements: !2298)
!2297 = !DIFile(filename: "./include/linux/shrinker.h", directory: "/home/lizy2001/genbc/linux")
!2298 = !{!2299, !2300, !2301, !2302, !2303}
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !2296, file: !2297, line: 13, baseType: !757, size: 32)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "nid", scope: !2296, file: !2297, line: 16, baseType: !113, size: 32, offset: 32)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "nr_to_scan", scope: !2296, file: !2297, line: 23, baseType: !138, size: 64, offset: 64)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "nr_scanned", scope: !2296, file: !2297, line: 30, baseType: !138, size: 64, offset: 128)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "memcg", scope: !2296, file: !2297, line: 33, baseType: !2304, size: 64, offset: 192)
!2304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2305, size: 64)
!2305 = !DICompositeType(tag: DW_TAG_structure_type, name: "mem_cgroup", file: !736, line: 27, flags: DIFlagFwdDecl)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "free_cached_objects", scope: !634, file: !31, line: 1966, baseType: !2292, size: 64, offset: 1408)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "dq_op", scope: !572, file: !31, line: 1424, baseType: !2308, size: 64, offset: 448)
!2308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2309, size: 64)
!2309 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2310)
!2310 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot_operations", file: !25, line: 322, size: 704, elements: !2311)
!2311 = !{!2312, !2358, !2362, !2366, !2367, !2368, !2369, !2370, !2375, !2380, !2384}
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "write_dquot", scope: !2310, file: !25, line: 323, baseType: !2313, size: 64)
!2313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2314, size: 64)
!2314 = !DISubroutineType(types: !2315)
!2315 = !{!113, !2316}
!2316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2317, size: 64)
!2317 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot", file: !25, line: 294, size: 1600, elements: !2318)
!2318 = !{!2319, !2320, !2321, !2322, !2323, !2324, !2325, !2326, !2327, !2343, !2344, !2345}
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "dq_hash", scope: !2317, file: !25, line: 295, baseType: !614, size: 128)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "dq_inuse", scope: !2317, file: !25, line: 296, baseType: !311, size: 128, offset: 128)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "dq_free", scope: !2317, file: !25, line: 297, baseType: !311, size: 128, offset: 256)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dirty", scope: !2317, file: !25, line: 298, baseType: !311, size: 128, offset: 384)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "dq_lock", scope: !2317, file: !25, line: 299, baseType: !280, size: 192, offset: 512)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb_lock", scope: !2317, file: !25, line: 300, baseType: !295, offset: 704)
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "dq_count", scope: !2317, file: !25, line: 301, baseType: !761, size: 32, offset: 704)
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "dq_sb", scope: !2317, file: !25, line: 302, baseType: !571, size: 64, offset: 768)
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "dq_id", scope: !2317, file: !25, line: 303, baseType: !2328, size: 64, offset: 832)
!2328 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kqid", file: !25, line: 68, size: 64, elements: !2329)
!2329 = !{!2330, !2342}
!2330 = !DIDerivedType(tag: DW_TAG_member, scope: !2328, file: !25, line: 69, baseType: !2331, size: 32)
!2331 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2328, file: !25, line: 69, size: 32, elements: !2332)
!2332 = !{!2333, !2334, !2335}
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2331, file: !25, line: 70, baseType: !400, size: 32)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !2331, file: !25, line: 71, baseType: !409, size: 32)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "projid", scope: !2331, file: !25, line: 72, baseType: !2336, size: 32)
!2336 = !DIDerivedType(tag: DW_TAG_typedef, name: "kprojid_t", file: !2337, line: 24, baseType: !2338)
!2337 = !DIFile(filename: "./include/linux/projid.h", directory: "/home/lizy2001/genbc/linux")
!2338 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2337, line: 22, size: 32, elements: !2339)
!2339 = !{!2340}
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2338, file: !2337, line: 23, baseType: !2341, size: 32)
!2341 = !DIDerivedType(tag: DW_TAG_typedef, name: "projid_t", file: !2337, line: 20, baseType: !406)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2328, file: !25, line: 74, baseType: !24, size: 32, offset: 32)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "dq_off", scope: !2317, file: !25, line: 304, baseType: !498, size: 64, offset: 896)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "dq_flags", scope: !2317, file: !25, line: 305, baseType: !138, size: 64, offset: 960)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb", scope: !2317, file: !25, line: 306, baseType: !2346, size: 576, offset: 1024)
!2346 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqblk", file: !25, line: 205, size: 576, elements: !2347)
!2347 = !{!2348, !2350, !2351, !2352, !2353, !2354, !2355, !2356, !2357}
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bhardlimit", scope: !2346, file: !25, line: 206, baseType: !2349, size: 64)
!2349 = !DIDerivedType(tag: DW_TAG_typedef, name: "qsize_t", file: !25, line: 66, baseType: !293)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bsoftlimit", scope: !2346, file: !25, line: 207, baseType: !2349, size: 64, offset: 64)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curspace", scope: !2346, file: !25, line: 208, baseType: !2349, size: 64, offset: 128)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_rsvspace", scope: !2346, file: !25, line: 209, baseType: !2349, size: 64, offset: 192)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_ihardlimit", scope: !2346, file: !25, line: 210, baseType: !2349, size: 64, offset: 256)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_isoftlimit", scope: !2346, file: !25, line: 211, baseType: !2349, size: 64, offset: 320)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curinodes", scope: !2346, file: !25, line: 212, baseType: !2349, size: 64, offset: 384)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_btime", scope: !2346, file: !25, line: 213, baseType: !505, size: 64, offset: 448)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_itime", scope: !2346, file: !25, line: 214, baseType: !505, size: 64, offset: 512)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_dquot", scope: !2310, file: !25, line: 324, baseType: !2359, size: 64, offset: 64)
!2359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2360, size: 64)
!2360 = !DISubroutineType(types: !2361)
!2361 = !{!2316, !571, !113}
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_dquot", scope: !2310, file: !25, line: 325, baseType: !2363, size: 64, offset: 128)
!2363 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2364, size: 64)
!2364 = !DISubroutineType(types: !2365)
!2365 = !{null, !2316}
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "acquire_dquot", scope: !2310, file: !25, line: 326, baseType: !2313, size: 64, offset: 192)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "release_dquot", scope: !2310, file: !25, line: 327, baseType: !2313, size: 64, offset: 256)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "mark_dirty", scope: !2310, file: !25, line: 328, baseType: !2313, size: 64, offset: 320)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "write_info", scope: !2310, file: !25, line: 329, baseType: !662, size: 64, offset: 384)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "get_reserved_space", scope: !2310, file: !25, line: 332, baseType: !2371, size: 64, offset: 448)
!2371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2372, size: 64)
!2372 = !DISubroutineType(types: !2373)
!2373 = !{!2374, !393}
!2374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2349, size: 64)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "get_projid", scope: !2310, file: !25, line: 333, baseType: !2376, size: 64, offset: 512)
!2376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2377, size: 64)
!2377 = !DISubroutineType(types: !2378)
!2378 = !{!113, !393, !2379}
!2379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2336, size: 64)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "get_inode_usage", scope: !2310, file: !25, line: 335, baseType: !2381, size: 64, offset: 576)
!2381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2382, size: 64)
!2382 = !DISubroutineType(types: !2383)
!2383 = !{!113, !393, !2374}
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !2310, file: !25, line: 337, baseType: !2385, size: 64, offset: 640)
!2385 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2386, size: 64)
!2386 = !DISubroutineType(types: !2387)
!2387 = !{!113, !571, !2388}
!2388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2328, size: 64)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "s_qcop", scope: !572, file: !31, line: 1425, baseType: !2390, size: 64, offset: 512)
!2390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2391, size: 64)
!2391 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2392)
!2392 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quotactl_ops", file: !25, line: 428, size: 704, elements: !2393)
!2393 = !{!2394, !2398, !2399, !2403, !2404, !2405, !2420, !2443, !2447, !2448, !2471}
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "quota_on", scope: !2392, file: !25, line: 429, baseType: !2395, size: 64)
!2395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2396, size: 64)
!2396 = !DISubroutineType(types: !2397)
!2397 = !{!113, !571, !113, !113, !515}
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "quota_off", scope: !2392, file: !25, line: 430, baseType: !662, size: 64, offset: 64)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "quota_enable", scope: !2392, file: !25, line: 431, baseType: !2400, size: 64, offset: 128)
!2400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2401, size: 64)
!2401 = !DISubroutineType(types: !2402)
!2402 = !{!113, !571, !7}
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "quota_disable", scope: !2392, file: !25, line: 432, baseType: !2400, size: 64, offset: 192)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "quota_sync", scope: !2392, file: !25, line: 433, baseType: !662, size: 64, offset: 256)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "set_info", scope: !2392, file: !25, line: 434, baseType: !2406, size: 64, offset: 320)
!2406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2407, size: 64)
!2407 = !DISubroutineType(types: !2408)
!2408 = !{!113, !571, !113, !2409}
!2409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2410, size: 64)
!2410 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_info", file: !25, line: 415, size: 256, elements: !2411)
!2411 = !{!2412, !2413, !2414, !2415, !2416, !2417, !2418, !2419}
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "i_fieldmask", scope: !2410, file: !25, line: 416, baseType: !113, size: 32)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !2410, file: !25, line: 417, baseType: !7, size: 32, offset: 32)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_timelimit", scope: !2410, file: !25, line: 418, baseType: !7, size: 32, offset: 64)
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_timelimit", scope: !2410, file: !25, line: 420, baseType: !7, size: 32, offset: 96)
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_timelimit", scope: !2410, file: !25, line: 421, baseType: !7, size: 32, offset: 128)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_warnlimit", scope: !2410, file: !25, line: 422, baseType: !7, size: 32, offset: 160)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_warnlimit", scope: !2410, file: !25, line: 423, baseType: !7, size: 32, offset: 192)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_warnlimit", scope: !2410, file: !25, line: 424, baseType: !7, size: 32, offset: 224)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "get_dqblk", scope: !2392, file: !25, line: 435, baseType: !2421, size: 64, offset: 384)
!2421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2422, size: 64)
!2422 = !DISubroutineType(types: !2423)
!2423 = !{!113, !571, !2328, !2424}
!2424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2425, size: 64)
!2425 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_dqblk", file: !25, line: 343, size: 960, elements: !2426)
!2426 = !{!2427, !2428, !2429, !2430, !2431, !2432, !2433, !2434, !2435, !2436, !2437, !2438, !2439, !2440, !2441, !2442}
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "d_fieldmask", scope: !2425, file: !25, line: 344, baseType: !113, size: 32)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_hardlimit", scope: !2425, file: !25, line: 345, baseType: !386, size: 64, offset: 64)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_softlimit", scope: !2425, file: !25, line: 346, baseType: !386, size: 64, offset: 128)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_hardlimit", scope: !2425, file: !25, line: 347, baseType: !386, size: 64, offset: 192)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_softlimit", scope: !2425, file: !25, line: 348, baseType: !386, size: 64, offset: 256)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "d_space", scope: !2425, file: !25, line: 349, baseType: !386, size: 64, offset: 320)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_count", scope: !2425, file: !25, line: 350, baseType: !386, size: 64, offset: 384)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_timer", scope: !2425, file: !25, line: 351, baseType: !291, size: 64, offset: 448)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_timer", scope: !2425, file: !25, line: 353, baseType: !291, size: 64, offset: 512)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_warns", scope: !2425, file: !25, line: 354, baseType: !113, size: 32, offset: 576)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_warns", scope: !2425, file: !25, line: 355, baseType: !113, size: 32, offset: 608)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_hardlimit", scope: !2425, file: !25, line: 356, baseType: !386, size: 64, offset: 640)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_softlimit", scope: !2425, file: !25, line: 357, baseType: !386, size: 64, offset: 704)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_space", scope: !2425, file: !25, line: 358, baseType: !386, size: 64, offset: 768)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_timer", scope: !2425, file: !25, line: 359, baseType: !291, size: 64, offset: 832)
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_warns", scope: !2425, file: !25, line: 360, baseType: !113, size: 32, offset: 896)
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "get_nextdqblk", scope: !2392, file: !25, line: 436, baseType: !2444, size: 64, offset: 448)
!2444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2445, size: 64)
!2445 = !DISubroutineType(types: !2446)
!2446 = !{!113, !571, !2388, !2424}
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "set_dqblk", scope: !2392, file: !25, line: 438, baseType: !2421, size: 64, offset: 512)
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "get_state", scope: !2392, file: !25, line: 439, baseType: !2449, size: 64, offset: 576)
!2449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2450, size: 64)
!2450 = !DISubroutineType(types: !2451)
!2451 = !{!113, !571, !2452}
!2452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2453, size: 64)
!2453 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_state", file: !25, line: 409, size: 1408, elements: !2454)
!2454 = !{!2455, !2456}
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "s_incoredqs", scope: !2453, file: !25, line: 410, baseType: !7, size: 32)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "s_state", scope: !2453, file: !25, line: 411, baseType: !2457, size: 1344, offset: 64)
!2457 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2458, size: 1344, elements: !626)
!2458 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_type_state", file: !25, line: 395, size: 448, elements: !2459)
!2459 = !{!2460, !2461, !2462, !2463, !2464, !2465, !2466, !2467, !2468, !2470}
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2458, file: !25, line: 396, baseType: !7, size: 32)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "spc_timelimit", scope: !2458, file: !25, line: 397, baseType: !7, size: 32, offset: 32)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "ino_timelimit", scope: !2458, file: !25, line: 399, baseType: !7, size: 32, offset: 64)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_timelimit", scope: !2458, file: !25, line: 400, baseType: !7, size: 32, offset: 96)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "spc_warnlimit", scope: !2458, file: !25, line: 401, baseType: !7, size: 32, offset: 128)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "ino_warnlimit", scope: !2458, file: !25, line: 402, baseType: !7, size: 32, offset: 160)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_warnlimit", scope: !2458, file: !25, line: 403, baseType: !7, size: 32, offset: 192)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !2458, file: !25, line: 404, baseType: !388, size: 64, offset: 256)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !2458, file: !25, line: 405, baseType: !2469, size: 64, offset: 320)
!2469 = !DIDerivedType(tag: DW_TAG_typedef, name: "blkcnt_t", file: !287, line: 126, baseType: !386)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "nextents", scope: !2458, file: !25, line: 406, baseType: !2469, size: 64, offset: 384)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "rm_xquota", scope: !2392, file: !25, line: 440, baseType: !2400, size: 64, offset: 640)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "s_export_op", scope: !572, file: !31, line: 1426, baseType: !2473, size: 64, offset: 576)
!2473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2474, size: 64)
!2474 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2475)
!2475 = !DICompositeType(tag: DW_TAG_structure_type, name: "export_operations", file: !31, line: 49, flags: DIFlagFwdDecl)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "s_flags", scope: !572, file: !31, line: 1427, baseType: !138, size: 64, offset: 640)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "s_iflags", scope: !572, file: !31, line: 1428, baseType: !138, size: 64, offset: 704)
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "s_magic", scope: !572, file: !31, line: 1429, baseType: !138, size: 64, offset: 768)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "s_root", scope: !572, file: !31, line: 1430, baseType: !350, size: 64, offset: 832)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount", scope: !572, file: !31, line: 1431, baseType: !781, size: 256, offset: 896)
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "s_count", scope: !572, file: !31, line: 1432, baseType: !113, size: 32, offset: 1152)
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "s_active", scope: !572, file: !31, line: 1433, baseType: !761, size: 32, offset: 1184)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "s_xattr", scope: !572, file: !31, line: 1437, baseType: !2484, size: 64, offset: 1216)
!2484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2485, size: 64)
!2485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2486, size: 64)
!2486 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2487)
!2487 = !DICompositeType(tag: DW_TAG_structure_type, name: "xattr_handler", file: !31, line: 1437, flags: DIFlagFwdDecl)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "s_roots", scope: !572, file: !31, line: 1449, baseType: !2489, size: 64, offset: 1280)
!2489 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_head", file: !366, line: 34, size: 64, elements: !2490)
!2490 = !{!2491}
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !2489, file: !366, line: 35, baseType: !369, size: 64)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "s_mounts", scope: !572, file: !31, line: 1450, baseType: !311, size: 128, offset: 1344)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdev", scope: !572, file: !31, line: 1451, baseType: !2494, size: 64, offset: 1472)
!2494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2495, size: 64)
!2495 = !DICompositeType(tag: DW_TAG_structure_type, name: "block_device", file: !31, line: 699, flags: DIFlagFwdDecl)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdi", scope: !572, file: !31, line: 1452, baseType: !1882, size: 64, offset: 1536)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "s_mtd", scope: !572, file: !31, line: 1453, baseType: !2498, size: 64, offset: 1600)
!2498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2499, size: 64)
!2499 = !DICompositeType(tag: DW_TAG_structure_type, name: "mtd_info", file: !31, line: 1453, flags: DIFlagFwdDecl)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "s_instances", scope: !572, file: !31, line: 1454, baseType: !614, size: 128, offset: 1664)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "s_quota_types", scope: !572, file: !31, line: 1455, baseType: !7, size: 32, offset: 1792)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "s_dquot", scope: !572, file: !31, line: 1456, baseType: !2503, size: 2432, offset: 1856)
!2503 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_info", file: !25, line: 518, size: 2432, elements: !2504)
!2504 = !{!2505, !2506, !2507, !2509, !2541}
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2503, file: !25, line: 519, baseType: !7, size: 32)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "dqio_sem", scope: !2503, file: !25, line: 520, baseType: !781, size: 256, offset: 64)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !2503, file: !25, line: 521, baseType: !2508, size: 192, offset: 320)
!2508 = !DICompositeType(tag: DW_TAG_array_type, baseType: !393, size: 192, elements: !626)
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !2503, file: !25, line: 522, baseType: !2510, size: 1728, offset: 512)
!2510 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2511, size: 1728, elements: !626)
!2511 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqinfo", file: !25, line: 222, size: 576, elements: !2512)
!2512 = !{!2513, !2533, !2534, !2535, !2536, !2537, !2538, !2539, !2540}
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_format", scope: !2511, file: !25, line: 223, baseType: !2514, size: 64)
!2514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2515, size: 64)
!2515 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_type", file: !25, line: 443, size: 256, elements: !2516)
!2516 = !{!2517, !2518, !2531, !2532}
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "qf_fmt_id", scope: !2515, file: !25, line: 444, baseType: !113, size: 32)
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "qf_ops", scope: !2515, file: !25, line: 445, baseType: !2519, size: 64, offset: 64)
!2519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2520, size: 64)
!2520 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2521)
!2521 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_ops", file: !25, line: 310, size: 512, elements: !2522)
!2522 = !{!2523, !2524, !2525, !2526, !2527, !2528, !2529, !2530}
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "check_quota_file", scope: !2521, file: !25, line: 311, baseType: !662, size: 64)
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "read_file_info", scope: !2521, file: !25, line: 312, baseType: !662, size: 64, offset: 64)
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "write_file_info", scope: !2521, file: !25, line: 313, baseType: !662, size: 64, offset: 128)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "free_file_info", scope: !2521, file: !25, line: 314, baseType: !662, size: 64, offset: 192)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "read_dqblk", scope: !2521, file: !25, line: 315, baseType: !2313, size: 64, offset: 256)
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "commit_dqblk", scope: !2521, file: !25, line: 316, baseType: !2313, size: 64, offset: 320)
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "release_dqblk", scope: !2521, file: !25, line: 317, baseType: !2313, size: 64, offset: 384)
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !2521, file: !25, line: 318, baseType: !2385, size: 64, offset: 448)
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "qf_owner", scope: !2515, file: !25, line: 446, baseType: !605, size: 64, offset: 128)
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "qf_next", scope: !2515, file: !25, line: 447, baseType: !2514, size: 64, offset: 192)
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_fmt_id", scope: !2511, file: !25, line: 224, baseType: !113, size: 32, offset: 64)
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_dirty_list", scope: !2511, file: !25, line: 226, baseType: !311, size: 128, offset: 128)
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_flags", scope: !2511, file: !25, line: 227, baseType: !138, size: 64, offset: 256)
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_bgrace", scope: !2511, file: !25, line: 228, baseType: !7, size: 32, offset: 320)
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_igrace", scope: !2511, file: !25, line: 229, baseType: !7, size: 32, offset: 352)
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_spc_limit", scope: !2511, file: !25, line: 230, baseType: !2349, size: 64, offset: 384)
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_ino_limit", scope: !2511, file: !25, line: 231, baseType: !2349, size: 64, offset: 448)
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_priv", scope: !2511, file: !25, line: 232, baseType: !111, size: 64, offset: 512)
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2503, file: !25, line: 523, baseType: !2542, size: 192, offset: 2240)
!2542 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2519, size: 192, elements: !626)
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers", scope: !572, file: !31, line: 1458, baseType: !2544, size: 2112, offset: 4288)
!2544 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sb_writers", file: !31, line: 1410, size: 2112, elements: !2545)
!2545 = !{!2546, !2547, !2548}
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !2544, file: !31, line: 1411, baseType: !113, size: 32)
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "wait_unfrozen", scope: !2544, file: !31, line: 1412, baseType: !1439, size: 128, offset: 64)
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "rw_sem", scope: !2544, file: !31, line: 1413, baseType: !2549, size: 1920, offset: 192)
!2549 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2550, size: 1920, elements: !626)
!2550 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_rw_semaphore", file: !2551, line: 12, size: 640, elements: !2552)
!2551 = !DIFile(filename: "./include/linux/percpu-rwsem.h", directory: "/home/lizy2001/genbc/linux")
!2552 = !{!2553, !2561, !2562, !2567, !2568}
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "rss", scope: !2550, file: !2551, line: 13, baseType: !2554, size: 320)
!2554 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcu_sync", file: !2555, line: 17, size: 320, elements: !2556)
!2555 = !DIFile(filename: "./include/linux/rcu_sync.h", directory: "/home/lizy2001/genbc/linux")
!2556 = !{!2557, !2558, !2559, !2560}
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "gp_state", scope: !2554, file: !2555, line: 18, baseType: !113, size: 32)
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "gp_count", scope: !2554, file: !2555, line: 19, baseType: !113, size: 32, offset: 32)
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "gp_wait", scope: !2554, file: !2555, line: 20, baseType: !1439, size: 128, offset: 64)
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "cb_head", scope: !2554, file: !2555, line: 22, baseType: !333, size: 128, align: 64, offset: 192)
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "read_count", scope: !2550, file: !2551, line: 14, baseType: !179, size: 64, offset: 320)
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "writer", scope: !2550, file: !2551, line: 15, baseType: !2563, size: 64, offset: 384)
!2563 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcuwait", file: !2564, line: 16, size: 64, elements: !2565)
!2564 = !DIFile(filename: "./include/linux/rcuwait.h", directory: "/home/lizy2001/genbc/linux")
!2565 = !{!2566}
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !2563, file: !2564, line: 17, baseType: !1174, size: 64)
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "waiters", scope: !2550, file: !2551, line: 16, baseType: !1439, size: 128, offset: 448)
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !2550, file: !2551, line: 17, baseType: !761, size: 32, offset: 576)
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "s_fs_info", scope: !572, file: !31, line: 1465, baseType: !111, size: 64, offset: 6400)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_gran", scope: !572, file: !31, line: 1468, baseType: !383, size: 32, offset: 6464)
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_min", scope: !572, file: !31, line: 1470, baseType: !505, size: 64, offset: 6528)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_max", scope: !572, file: !31, line: 1471, baseType: !505, size: 64, offset: 6592)
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_mask", scope: !572, file: !31, line: 1473, baseType: !174, size: 32, offset: 6656)
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_marks", scope: !572, file: !31, line: 1474, baseType: !2575, size: 64, offset: 6720)
!2575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2576, size: 64)
!2576 = !DICompositeType(tag: DW_TAG_structure_type, name: "fsnotify_mark_connector", file: !31, line: 603, flags: DIFlagFwdDecl)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "s_id", scope: !572, file: !31, line: 1477, baseType: !2578, size: 256, offset: 6784)
!2578 = !DICompositeType(tag: DW_TAG_array_type, baseType: !117, size: 256, elements: !177)
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "s_uuid", scope: !572, file: !31, line: 1478, baseType: !2580, size: 128, offset: 7040)
!2580 = !DIDerivedType(tag: DW_TAG_typedef, name: "uuid_t", file: !2581, line: 18, baseType: !2582)
!2581 = !DIFile(filename: "./include/linux/uuid.h", directory: "/home/lizy2001/genbc/linux")
!2582 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2581, line: 16, size: 128, elements: !2583)
!2583 = !{!2584}
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !2582, file: !2581, line: 17, baseType: !2585, size: 128)
!2585 = !DICompositeType(tag: DW_TAG_array_type, baseType: !169, size: 128, elements: !1691)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "s_max_links", scope: !572, file: !31, line: 1480, baseType: !7, size: 32, offset: 7168)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "s_mode", scope: !572, file: !31, line: 1481, baseType: !2588, size: 32, offset: 7200)
!2588 = !DIDerivedType(tag: DW_TAG_typedef, name: "fmode_t", file: !287, line: 150, baseType: !7)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_mutex", scope: !572, file: !31, line: 1487, baseType: !280, size: 192, offset: 7232)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "s_subtype", scope: !572, file: !31, line: 1493, baseType: !115, size: 64, offset: 7424)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "s_d_op", scope: !572, file: !31, line: 1495, baseType: !2592, size: 64, offset: 7488)
!2592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2593, size: 64)
!2593 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2594)
!2594 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry_operations", file: !348, line: 135, size: 1024, align: 512, elements: !2595)
!2595 = !{!2596, !2600, !2601, !2608, !2614, !2618, !2622, !2626, !2627, !2631, !2635, !2640, !2644}
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "d_revalidate", scope: !2594, file: !348, line: 136, baseType: !2597, size: 64)
!2597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2598, size: 64)
!2598 = !DISubroutineType(types: !2599)
!2599 = !{!113, !350, !7}
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "d_weak_revalidate", scope: !2594, file: !348, line: 137, baseType: !2597, size: 64, offset: 64)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !2594, file: !348, line: 138, baseType: !2602, size: 64, offset: 128)
!2602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2603, size: 64)
!2603 = !DISubroutineType(types: !2604)
!2604 = !{!113, !2605, !2607}
!2605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2606, size: 64)
!2606 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !351)
!2607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !374, size: 64)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "d_compare", scope: !2594, file: !348, line: 139, baseType: !2609, size: 64, offset: 192)
!2609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2610, size: 64)
!2610 = !DISubroutineType(types: !2611)
!2611 = !{!113, !2605, !7, !115, !2612}
!2612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2613, size: 64)
!2613 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !374)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "d_delete", scope: !2594, file: !348, line: 141, baseType: !2615, size: 64, offset: 256)
!2615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2616, size: 64)
!2616 = !DISubroutineType(types: !2617)
!2617 = !{!113, !2605}
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "d_init", scope: !2594, file: !348, line: 142, baseType: !2619, size: 64, offset: 320)
!2619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2620, size: 64)
!2620 = !DISubroutineType(types: !2621)
!2621 = !{!113, !350}
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "d_release", scope: !2594, file: !348, line: 143, baseType: !2623, size: 64, offset: 384)
!2623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2624, size: 64)
!2624 = !DISubroutineType(types: !2625)
!2625 = !{null, !350}
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "d_prune", scope: !2594, file: !348, line: 144, baseType: !2623, size: 64, offset: 448)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "d_iput", scope: !2594, file: !348, line: 145, baseType: !2628, size: 64, offset: 512)
!2628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2629, size: 64)
!2629 = !DISubroutineType(types: !2630)
!2630 = !{null, !350, !393}
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "d_dname", scope: !2594, file: !348, line: 146, baseType: !2632, size: 64, offset: 576)
!2632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2633, size: 64)
!2633 = !DISubroutineType(types: !2634)
!2634 = !{!452, !350, !452, !113}
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "d_automount", scope: !2594, file: !348, line: 147, baseType: !2636, size: 64, offset: 640)
!2636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2637, size: 64)
!2637 = !DISubroutineType(types: !2638)
!2638 = !{!346, !2639}
!2639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !342, size: 64)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "d_manage", scope: !2594, file: !348, line: 148, baseType: !2641, size: 64, offset: 704)
!2641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2642, size: 64)
!2642 = !DISubroutineType(types: !2643)
!2643 = !{!113, !515, !457}
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "d_real", scope: !2594, file: !348, line: 149, baseType: !2645, size: 64, offset: 768)
!2645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2646, size: 64)
!2646 = !DISubroutineType(types: !2647)
!2647 = !{!350, !350, !2648}
!2648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2649, size: 64)
!2649 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !394)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "cleancache_poolid", scope: !572, file: !31, line: 1500, baseType: !113, size: 32, offset: 7552)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "s_shrink", scope: !572, file: !31, line: 1502, baseType: !2652, size: 448, offset: 7616)
!2652 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrinker", file: !2297, line: 60, size: 448, elements: !2653)
!2653 = !{!2654, !2659, !2660, !2661, !2662, !2663, !2664}
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "count_objects", scope: !2652, file: !2297, line: 61, baseType: !2655, size: 64)
!2655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2656, size: 64)
!2656 = !DISubroutineType(types: !2657)
!2657 = !{!138, !2658, !2295}
!2658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2652, size: 64)
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "scan_objects", scope: !2652, file: !2297, line: 63, baseType: !2655, size: 64, offset: 64)
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !2652, file: !2297, line: 66, baseType: !507, size: 64, offset: 128)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "seeks", scope: !2652, file: !2297, line: 67, baseType: !113, size: 32, offset: 192)
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2652, file: !2297, line: 68, baseType: !7, size: 32, offset: 224)
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2652, file: !2297, line: 71, baseType: !311, size: 128, offset: 256)
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "nr_deferred", scope: !2652, file: !2297, line: 77, baseType: !2665, size: 64, offset: 384)
!2665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !284, size: 64)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "s_remove_count", scope: !572, file: !31, line: 1505, baseType: !284, size: 64, offset: 8064)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_inode_refs", scope: !572, file: !31, line: 1508, baseType: !284, size: 64, offset: 8128)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "s_readonly_remount", scope: !572, file: !31, line: 1511, baseType: !113, size: 32, offset: 8192)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "s_wb_err", scope: !572, file: !31, line: 1514, baseType: !954, size: 32, offset: 8224)
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "s_dio_done_wq", scope: !572, file: !31, line: 1517, baseType: !2671, size: 64, offset: 8256)
!2671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2672, size: 64)
!2672 = !DICompositeType(tag: DW_TAG_structure_type, name: "workqueue_struct", file: !1917, line: 18, flags: DIFlagFwdDecl)
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "s_pins", scope: !572, file: !31, line: 1518, baseType: !610, size: 64, offset: 8320)
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "s_user_ns", scope: !572, file: !31, line: 1525, baseType: !1669, size: 64, offset: 8384)
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "s_dentry_lru", scope: !572, file: !31, line: 1532, baseType: !2676, size: 64, offset: 8448)
!2676 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru", file: !2677, line: 52, size: 64, elements: !2678)
!2677 = !DIFile(filename: "./include/linux/list_lru.h", directory: "/home/lizy2001/genbc/linux")
!2678 = !{!2679}
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2676, file: !2677, line: 53, baseType: !2680, size: 64)
!2680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2681, size: 64)
!2681 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_node", file: !2677, line: 40, size: 256, elements: !2682)
!2682 = !{!2683, !2684, !2689}
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2681, file: !2677, line: 42, baseType: !295)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !2681, file: !2677, line: 44, baseType: !2685, size: 192)
!2685 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_one", file: !2677, line: 28, size: 192, elements: !2686)
!2686 = !{!2687, !2688}
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2685, file: !2677, line: 29, baseType: !311, size: 128)
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !2685, file: !2677, line: 31, baseType: !507, size: 64, offset: 128)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !2681, file: !2677, line: 49, baseType: !507, size: 64, offset: 192)
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_lru", scope: !572, file: !31, line: 1533, baseType: !2676, size: 64, offset: 8512)
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !572, file: !31, line: 1534, baseType: !333, size: 128, align: 64, offset: 8576)
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_work", scope: !572, file: !31, line: 1535, baseType: !1916, size: 256, offset: 8704)
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "s_sync_lock", scope: !572, file: !31, line: 1537, baseType: !280, size: 192, offset: 8960)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "s_stack_depth", scope: !572, file: !31, line: 1542, baseType: !113, size: 32, offset: 9152)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_list_lock", scope: !572, file: !31, line: 1545, baseType: !295, offset: 9184)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes", scope: !572, file: !31, line: 1546, baseType: !311, size: 128, offset: 9216)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_wblist_lock", scope: !572, file: !31, line: 1548, baseType: !295, offset: 9344)
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes_wb", scope: !572, file: !31, line: 1549, baseType: !311, size: 128, offset: 9344)
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "i_mapping", scope: !394, file: !31, line: 624, baseType: !747, size: 64, offset: 256)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino", scope: !394, file: !31, line: 631, baseType: !138, size: 64, offset: 320)
!2701 = !DIDerivedType(tag: DW_TAG_member, scope: !394, file: !31, line: 639, baseType: !2702, size: 32, offset: 384)
!2702 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !394, file: !31, line: 639, size: 32, elements: !2703)
!2703 = !{!2704, !2706}
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "i_nlink", scope: !2702, file: !31, line: 640, baseType: !2705, size: 32)
!2705 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "__i_nlink", scope: !2702, file: !31, line: 641, baseType: !7, size: 32)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "i_rdev", scope: !394, file: !31, line: 643, baseType: !480, size: 32, offset: 416)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "i_size", scope: !394, file: !31, line: 644, baseType: !498, size: 64, offset: 448)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "i_atime", scope: !394, file: !31, line: 645, baseType: !501, size: 128, offset: 512)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "i_mtime", scope: !394, file: !31, line: 646, baseType: !501, size: 128, offset: 640)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "i_ctime", scope: !394, file: !31, line: 647, baseType: !501, size: 128, offset: 768)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock", scope: !394, file: !31, line: 648, baseType: !295, offset: 896)
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "i_bytes", scope: !394, file: !31, line: 649, baseType: !132, size: 16, offset: 896)
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "i_blkbits", scope: !394, file: !31, line: 650, baseType: !1309, size: 8, offset: 912)
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "i_write_hint", scope: !394, file: !31, line: 651, baseType: !1309, size: 8, offset: 920)
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "i_blocks", scope: !394, file: !31, line: 652, baseType: !2469, size: 64, offset: 960)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "i_state", scope: !394, file: !31, line: 659, baseType: !138, size: 64, offset: 1024)
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "i_rwsem", scope: !394, file: !31, line: 660, baseType: !781, size: 256, offset: 1088)
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_when", scope: !394, file: !31, line: 662, baseType: !138, size: 64, offset: 1344)
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_time_when", scope: !394, file: !31, line: 663, baseType: !138, size: 64, offset: 1408)
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "i_hash", scope: !394, file: !31, line: 665, baseType: !614, size: 128, offset: 1472)
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "i_io_list", scope: !394, file: !31, line: 666, baseType: !311, size: 128, offset: 1600)
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "i_lru", scope: !394, file: !31, line: 675, baseType: !311, size: 128, offset: 1728)
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb_list", scope: !394, file: !31, line: 676, baseType: !311, size: 128, offset: 1856)
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "i_wb_list", scope: !394, file: !31, line: 677, baseType: !311, size: 128, offset: 1984)
!2726 = !DIDerivedType(tag: DW_TAG_member, scope: !394, file: !31, line: 678, baseType: !2727, size: 128, offset: 2112)
!2727 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !394, file: !31, line: 678, size: 128, elements: !2728)
!2728 = !{!2729, !2730}
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "i_dentry", scope: !2727, file: !31, line: 679, baseType: !610, size: 64)
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "i_rcu", scope: !2727, file: !31, line: 680, baseType: !333, size: 128, align: 64)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "i_version", scope: !394, file: !31, line: 682, baseType: !286, size: 64, offset: 2240)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "i_sequence", scope: !394, file: !31, line: 683, baseType: !286, size: 64, offset: 2304)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !394, file: !31, line: 684, baseType: !761, size: 32, offset: 2368)
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "i_dio_count", scope: !394, file: !31, line: 685, baseType: !761, size: 32, offset: 2400)
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "i_writecount", scope: !394, file: !31, line: 686, baseType: !761, size: 32, offset: 2432)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "i_readcount", scope: !394, file: !31, line: 688, baseType: !761, size: 32, offset: 2464)
!2737 = !DIDerivedType(tag: DW_TAG_member, scope: !394, file: !31, line: 690, baseType: !2738, size: 64, offset: 2496)
!2738 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !394, file: !31, line: 690, size: 64, elements: !2739)
!2739 = !{!2740, !2971}
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "i_fop", scope: !2738, file: !31, line: 691, baseType: !2741, size: 64)
!2741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2742, size: 64)
!2742 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2743)
!2743 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_operations", file: !31, line: 1822, size: 2048, elements: !2744)
!2744 = !{!2745, !2746, !2750, !2754, !2758, !2759, !2760, !2764, !2777, !2778, !2795, !2799, !2800, !2804, !2805, !2809, !2814, !2815, !2819, !2823, !2931, !2935, !2936, !2940, !2941, !2945, !2949, !2954, !2958, !2962, !2966, !2970}
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2743, file: !31, line: 1823, baseType: !605, size: 64)
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "llseek", scope: !2743, file: !31, line: 1824, baseType: !2747, size: 64, offset: 64)
!2747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2748, size: 64)
!2748 = !DISubroutineType(types: !2749)
!2749 = !{!498, !320, !498, !113}
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !2743, file: !31, line: 1825, baseType: !2751, size: 64, offset: 128)
!2751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2752, size: 64)
!2752 = !DISubroutineType(types: !2753)
!2753 = !{!544, !320, !452, !547, !709}
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !2743, file: !31, line: 1826, baseType: !2755, size: 64, offset: 192)
!2755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2756, size: 64)
!2756 = !DISubroutineType(types: !2757)
!2757 = !{!544, !320, !115, !547, !709}
!2758 = !DIDerivedType(tag: DW_TAG_member, name: "read_iter", scope: !2743, file: !31, line: 1827, baseType: !851, size: 64, offset: 256)
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "write_iter", scope: !2743, file: !31, line: 1828, baseType: !851, size: 64, offset: 320)
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "iopoll", scope: !2743, file: !31, line: 1829, baseType: !2761, size: 64, offset: 384)
!2761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2762, size: 64)
!2762 = !DISubroutineType(types: !2763)
!2763 = !{!113, !854, !457}
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "iterate", scope: !2743, file: !31, line: 1830, baseType: !2765, size: 64, offset: 448)
!2765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2766, size: 64)
!2766 = !DISubroutineType(types: !2767)
!2767 = !{!113, !320, !2768}
!2768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2769, size: 64)
!2769 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dir_context", file: !31, line: 1776, size: 128, elements: !2770)
!2770 = !{!2771, !2776}
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "actor", scope: !2769, file: !31, line: 1777, baseType: !2772, size: 64)
!2772 = !DIDerivedType(tag: DW_TAG_typedef, name: "filldir_t", file: !31, line: 1773, baseType: !2773)
!2773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2774, size: 64)
!2774 = !DISubroutineType(types: !2775)
!2775 = !{!113, !2768, !115, !113, !498, !386, !7}
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !2769, file: !31, line: 1778, baseType: !498, size: 64, offset: 64)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "iterate_shared", scope: !2743, file: !31, line: 1831, baseType: !2765, size: 64, offset: 512)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !2743, file: !31, line: 1832, baseType: !2779, size: 64, offset: 576)
!2779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2780, size: 64)
!2780 = !DISubroutineType(types: !2781)
!2781 = !{!2782, !320, !2784}
!2782 = !DIDerivedType(tag: DW_TAG_typedef, name: "__poll_t", file: !2783, line: 52, baseType: !7)
!2783 = !DIFile(filename: "./include/uapi/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!2784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2785, size: 64)
!2785 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "poll_table_struct", file: !2786, line: 43, size: 128, elements: !2787)
!2786 = !DIFile(filename: "./include/linux/poll.h", directory: "/home/lizy2001/genbc/linux")
!2787 = !{!2788, !2794}
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "_qproc", scope: !2785, file: !2786, line: 44, baseType: !2789, size: 64)
!2789 = !DIDerivedType(tag: DW_TAG_typedef, name: "poll_queue_proc", file: !2786, line: 37, baseType: !2790)
!2790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2791, size: 64)
!2791 = !DISubroutineType(types: !2792)
!2792 = !{null, !320, !2793, !2784}
!2793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1439, size: 64)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "_key", scope: !2785, file: !2786, line: 45, baseType: !2782, size: 32, offset: 64)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "unlocked_ioctl", scope: !2743, file: !31, line: 1833, baseType: !2796, size: 64, offset: 640)
!2796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2797, size: 64)
!2797 = !DISubroutineType(types: !2798)
!2798 = !{!507, !320, !7, !138}
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !2743, file: !31, line: 1834, baseType: !2796, size: 64, offset: 704)
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !2743, file: !31, line: 1835, baseType: !2801, size: 64, offset: 768)
!2801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2802, size: 64)
!2802 = !DISubroutineType(types: !2803)
!2803 = !{!113, !320, !1027}
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_supported_flags", scope: !2743, file: !31, line: 1836, baseType: !138, size: 64, offset: 832)
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !2743, file: !31, line: 1837, baseType: !2806, size: 64, offset: 896)
!2806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2807, size: 64)
!2807 = !DISubroutineType(types: !2808)
!2808 = !{!113, !393, !320}
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !2743, file: !31, line: 1838, baseType: !2810, size: 64, offset: 960)
!2810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2811, size: 64)
!2811 = !DISubroutineType(types: !2812)
!2812 = !{!113, !320, !2813}
!2813 = !DIDerivedType(tag: DW_TAG_typedef, name: "fl_owner_t", file: !31, line: 1007, baseType: !111)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !2743, file: !31, line: 1839, baseType: !2806, size: 64, offset: 1024)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "fsync", scope: !2743, file: !31, line: 1840, baseType: !2816, size: 64, offset: 1088)
!2816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2817, size: 64)
!2817 = !DISubroutineType(types: !2818)
!2818 = !{!113, !320, !498, !498, !113}
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "fasync", scope: !2743, file: !31, line: 1841, baseType: !2820, size: 64, offset: 1152)
!2820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2821, size: 64)
!2821 = !DISubroutineType(types: !2822)
!2822 = !{!113, !113, !320, !113}
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2743, file: !31, line: 1842, baseType: !2824, size: 64, offset: 1216)
!2824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2825, size: 64)
!2825 = !DISubroutineType(types: !2826)
!2826 = !{!113, !320, !113, !2827}
!2827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2828, size: 64)
!2828 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock", file: !31, line: 1062, size: 1664, elements: !2829)
!2829 = !{!2830, !2831, !2832, !2833, !2834, !2835, !2836, !2837, !2838, !2839, !2840, !2841, !2842, !2843, !2844, !2861, !2862, !2863, !2876, !2907}
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocker", scope: !2828, file: !31, line: 1063, baseType: !2827, size: 64)
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "fl_list", scope: !2828, file: !31, line: 1064, baseType: !311, size: 128, offset: 64)
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link", scope: !2828, file: !31, line: 1065, baseType: !614, size: 128, offset: 192)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_requests", scope: !2828, file: !31, line: 1066, baseType: !311, size: 128, offset: 320)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_member", scope: !2828, file: !31, line: 1069, baseType: !311, size: 128, offset: 448)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "fl_owner", scope: !2828, file: !31, line: 1072, baseType: !2813, size: 64, offset: 576)
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "fl_flags", scope: !2828, file: !31, line: 1073, baseType: !7, size: 32, offset: 640)
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "fl_type", scope: !2828, file: !31, line: 1074, baseType: !170, size: 8, offset: 672)
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "fl_pid", scope: !2828, file: !31, line: 1075, baseType: !7, size: 32, offset: 704)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link_cpu", scope: !2828, file: !31, line: 1076, baseType: !113, size: 32, offset: 736)
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "fl_wait", scope: !2828, file: !31, line: 1077, baseType: !1439, size: 128, offset: 768)
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "fl_file", scope: !2828, file: !31, line: 1078, baseType: !320, size: 64, offset: 896)
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "fl_start", scope: !2828, file: !31, line: 1079, baseType: !498, size: 64, offset: 960)
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "fl_end", scope: !2828, file: !31, line: 1080, baseType: !498, size: 64, offset: 1024)
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "fl_fasync", scope: !2828, file: !31, line: 1082, baseType: !2845, size: 64, offset: 1088)
!2845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2846, size: 64)
!2846 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fasync_struct", file: !31, line: 1314, size: 320, elements: !2847)
!2847 = !{!2848, !2856, !2857, !2858, !2859, !2860}
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "fa_lock", scope: !2846, file: !31, line: 1315, baseType: !2849)
!2849 = !DIDerivedType(tag: DW_TAG_typedef, name: "rwlock_t", file: !2850, line: 20, baseType: !2851)
!2850 = !DIFile(filename: "./include/linux/rwlock_types.h", directory: "/home/lizy2001/genbc/linux")
!2851 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2850, line: 11, elements: !2852)
!2852 = !{!2853}
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !2851, file: !2850, line: 12, baseType: !2854)
!2854 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_rwlock_t", file: !307, line: 33, baseType: !2855)
!2855 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !307, line: 31, elements: !309)
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !2846, file: !31, line: 1316, baseType: !113, size: 32)
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "fa_fd", scope: !2846, file: !31, line: 1317, baseType: !113, size: 32, offset: 32)
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "fa_next", scope: !2846, file: !31, line: 1318, baseType: !2845, size: 64, offset: 64)
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "fa_file", scope: !2846, file: !31, line: 1319, baseType: !320, size: 64, offset: 128)
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "fa_rcu", scope: !2846, file: !31, line: 1320, baseType: !333, size: 128, align: 64, offset: 192)
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "fl_break_time", scope: !2828, file: !31, line: 1084, baseType: !138, size: 64, offset: 1152)
!2862 = !DIDerivedType(tag: DW_TAG_member, name: "fl_downgrade_time", scope: !2828, file: !31, line: 1085, baseType: !138, size: 64, offset: 1216)
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "fl_ops", scope: !2828, file: !31, line: 1087, baseType: !2864, size: 64, offset: 1280)
!2864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2865, size: 64)
!2865 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2866)
!2866 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_operations", file: !31, line: 1011, size: 128, elements: !2867)
!2867 = !{!2868, !2872}
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "fl_copy_lock", scope: !2866, file: !31, line: 1012, baseType: !2869, size: 64)
!2869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2870, size: 64)
!2870 = !DISubroutineType(types: !2871)
!2871 = !{null, !2827, !2827}
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "fl_release_private", scope: !2866, file: !31, line: 1013, baseType: !2873, size: 64, offset: 64)
!2873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2874, size: 64)
!2874 = !DISubroutineType(types: !2875)
!2875 = !{null, !2827}
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "fl_lmops", scope: !2828, file: !31, line: 1088, baseType: !2877, size: 64, offset: 1344)
!2877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2878, size: 64)
!2878 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2879)
!2879 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_manager_operations", file: !31, line: 1016, size: 512, elements: !2880)
!2880 = !{!2881, !2885, !2889, !2890, !2894, !2898, !2902, !2906}
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "lm_get_owner", scope: !2879, file: !31, line: 1017, baseType: !2882, size: 64)
!2882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2883, size: 64)
!2883 = !DISubroutineType(types: !2884)
!2884 = !{!2813, !2813}
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "lm_put_owner", scope: !2879, file: !31, line: 1018, baseType: !2886, size: 64, offset: 64)
!2886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2887, size: 64)
!2887 = !DISubroutineType(types: !2888)
!2888 = !{null, !2813}
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "lm_notify", scope: !2879, file: !31, line: 1019, baseType: !2873, size: 64, offset: 128)
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "lm_grant", scope: !2879, file: !31, line: 1020, baseType: !2891, size: 64, offset: 192)
!2891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2892, size: 64)
!2892 = !DISubroutineType(types: !2893)
!2893 = !{!113, !2827, !113}
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "lm_break", scope: !2879, file: !31, line: 1021, baseType: !2895, size: 64, offset: 256)
!2895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2896, size: 64)
!2896 = !DISubroutineType(types: !2897)
!2897 = !{!457, !2827}
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "lm_change", scope: !2879, file: !31, line: 1022, baseType: !2899, size: 64, offset: 320)
!2899 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2900, size: 64)
!2900 = !DISubroutineType(types: !2901)
!2901 = !{!113, !2827, !113, !314}
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "lm_setup", scope: !2879, file: !31, line: 1023, baseType: !2903, size: 64, offset: 384)
!2903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2904, size: 64)
!2904 = !DISubroutineType(types: !2905)
!2905 = !{null, !2827, !828}
!2906 = !DIDerivedType(tag: DW_TAG_member, name: "lm_breaker_owns_lease", scope: !2879, file: !31, line: 1024, baseType: !2895, size: 64, offset: 448)
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "fl_u", scope: !2828, file: !31, line: 1097, baseType: !2908, size: 256, offset: 1408)
!2908 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2828, file: !31, line: 1089, size: 256, elements: !2909)
!2909 = !{!2910, !2919, !2925}
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "nfs_fl", scope: !2908, file: !31, line: 1090, baseType: !2911, size: 256)
!2911 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs_lock_info", file: !2912, line: 10, size: 256, elements: !2913)
!2912 = !DIFile(filename: "./include/linux/nfs_fs_i.h", directory: "/home/lizy2001/genbc/linux")
!2913 = !{!2914, !2915, !2918}
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2911, file: !2912, line: 11, baseType: !383, size: 32)
!2915 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2911, file: !2912, line: 12, baseType: !2916, size: 64, offset: 64)
!2916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2917, size: 64)
!2917 = !DICompositeType(tag: DW_TAG_structure_type, name: "nlm_lockowner", file: !2912, line: 5, flags: DIFlagFwdDecl)
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2911, file: !2912, line: 13, baseType: !311, size: 128, offset: 128)
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "nfs4_fl", scope: !2908, file: !31, line: 1091, baseType: !2920, size: 64)
!2920 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_info", file: !2912, line: 17, size: 64, elements: !2921)
!2921 = !{!2922}
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2920, file: !2912, line: 18, baseType: !2923, size: 64)
!2923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2924, size: 64)
!2924 = !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_state", file: !2912, line: 16, flags: DIFlagFwdDecl)
!2925 = !DIDerivedType(tag: DW_TAG_member, name: "afs", scope: !2908, file: !31, line: 1096, baseType: !2926, size: 192)
!2926 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2908, file: !31, line: 1092, size: 192, elements: !2927)
!2927 = !{!2928, !2929, !2930}
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !2926, file: !31, line: 1093, baseType: !311, size: 128)
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2926, file: !31, line: 1094, baseType: !113, size: 32, offset: 128)
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "debug_id", scope: !2926, file: !31, line: 1095, baseType: !7, size: 32, offset: 160)
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "sendpage", scope: !2743, file: !31, line: 1843, baseType: !2932, size: 64, offset: 1280)
!2932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2933, size: 64)
!2933 = !DISubroutineType(types: !2934)
!2934 = !{!544, !320, !734, !113, !547, !709, !113}
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !2743, file: !31, line: 1844, baseType: !1067, size: 64, offset: 1344)
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "check_flags", scope: !2743, file: !31, line: 1845, baseType: !2937, size: 64, offset: 1408)
!2937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2938, size: 64)
!2938 = !DISubroutineType(types: !2939)
!2939 = !{!113, !113}
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "flock", scope: !2743, file: !31, line: 1846, baseType: !2824, size: 64, offset: 1472)
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "splice_write", scope: !2743, file: !31, line: 1847, baseType: !2942, size: 64, offset: 1536)
!2942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2943, size: 64)
!2943 = !DISubroutineType(types: !2944)
!2944 = !{!544, !904, !320, !709, !547, !7}
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "splice_read", scope: !2743, file: !31, line: 1848, baseType: !2946, size: 64, offset: 1600)
!2946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2947, size: 64)
!2947 = !DISubroutineType(types: !2948)
!2948 = !{!544, !320, !709, !904, !547, !7}
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "setlease", scope: !2743, file: !31, line: 1849, baseType: !2950, size: 64, offset: 1664)
!2950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2951, size: 64)
!2951 = !DISubroutineType(types: !2952)
!2952 = !{!113, !320, !507, !2953, !828}
!2953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2827, size: 64)
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "fallocate", scope: !2743, file: !31, line: 1850, baseType: !2955, size: 64, offset: 1728)
!2955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2956, size: 64)
!2956 = !DISubroutineType(types: !2957)
!2957 = !{!507, !320, !113, !498, !498}
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "show_fdinfo", scope: !2743, file: !31, line: 1852, baseType: !2959, size: 64, offset: 1792)
!2959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2960, size: 64)
!2960 = !DISubroutineType(types: !2961)
!2961 = !{null, !688, !320}
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "copy_file_range", scope: !2743, file: !31, line: 1856, baseType: !2963, size: 64, offset: 1856)
!2963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2964, size: 64)
!2964 = !DISubroutineType(types: !2965)
!2965 = !{!544, !320, !498, !320, !498, !547, !7}
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "remap_file_range", scope: !2743, file: !31, line: 1858, baseType: !2967, size: 64, offset: 1920)
!2967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2968, size: 64)
!2968 = !DISubroutineType(types: !2969)
!2969 = !{!498, !320, !498, !320, !498, !498, !7}
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "fadvise", scope: !2743, file: !31, line: 1861, baseType: !2816, size: 64, offset: 1984)
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !2738, file: !31, line: 692, baseType: !641, size: 64)
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "i_flctx", scope: !394, file: !31, line: 694, baseType: !2973, size: 64, offset: 2560)
!2973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2974, size: 64)
!2974 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_context", file: !31, line: 1100, size: 384, elements: !2975)
!2975 = !{!2976, !2977, !2978, !2979}
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lock", scope: !2974, file: !31, line: 1101, baseType: !295)
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "flc_flock", scope: !2974, file: !31, line: 1102, baseType: !311, size: 128)
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "flc_posix", scope: !2974, file: !31, line: 1103, baseType: !311, size: 128, offset: 128)
!2979 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lease", scope: !2974, file: !31, line: 1104, baseType: !311, size: 128, offset: 256)
!2980 = !DIDerivedType(tag: DW_TAG_member, name: "i_data", scope: !394, file: !31, line: 695, baseType: !748, size: 1216, align: 64, offset: 2624)
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "i_devices", scope: !394, file: !31, line: 696, baseType: !311, size: 128, offset: 3840)
!2982 = !DIDerivedType(tag: DW_TAG_member, scope: !394, file: !31, line: 697, baseType: !2983, size: 64, offset: 3968)
!2983 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !394, file: !31, line: 697, size: 64, elements: !2984)
!2984 = !{!2985, !2986, !2987, !2990, !2991}
!2985 = !DIDerivedType(tag: DW_TAG_member, name: "i_pipe", scope: !2983, file: !31, line: 698, baseType: !904, size: 64)
!2986 = !DIDerivedType(tag: DW_TAG_member, name: "i_bdev", scope: !2983, file: !31, line: 699, baseType: !2494, size: 64)
!2987 = !DIDerivedType(tag: DW_TAG_member, name: "i_cdev", scope: !2983, file: !31, line: 700, baseType: !2988, size: 64)
!2988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2989, size: 64)
!2989 = !DICompositeType(tag: DW_TAG_structure_type, name: "cdev", file: !31, line: 700, flags: DIFlagFwdDecl)
!2990 = !DIDerivedType(tag: DW_TAG_member, name: "i_link", scope: !2983, file: !31, line: 701, baseType: !452, size: 64)
!2991 = !DIDerivedType(tag: DW_TAG_member, name: "i_dir_seq", scope: !2983, file: !31, line: 702, baseType: !7, size: 32)
!2992 = !DIDerivedType(tag: DW_TAG_member, name: "i_generation", scope: !394, file: !31, line: 705, baseType: !174, size: 32, offset: 4032)
!2993 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_mask", scope: !394, file: !31, line: 708, baseType: !174, size: 32, offset: 4064)
!2994 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_marks", scope: !394, file: !31, line: 709, baseType: !2575, size: 64, offset: 4096)
!2995 = !DIDerivedType(tag: DW_TAG_member, name: "i_private", scope: !394, file: !31, line: 720, baseType: !111, size: 64, offset: 4160)
!2996 = !DIDerivedType(tag: DW_TAG_member, name: "d_iname", scope: !351, file: !348, line: 98, baseType: !2997, size: 256, offset: 448)
!2997 = !DICompositeType(tag: DW_TAG_array_type, baseType: !170, size: 256, elements: !177)
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "d_lockref", scope: !351, file: !348, line: 101, baseType: !2999, size: 32, offset: 704)
!2999 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lockref", file: !3000, line: 25, size: 32, elements: !3001)
!3000 = !DIFile(filename: "./include/linux/lockref.h", directory: "/home/lizy2001/genbc/linux")
!3001 = !{!3002}
!3002 = !DIDerivedType(tag: DW_TAG_member, scope: !2999, file: !3000, line: 26, baseType: !3003, size: 32)
!3003 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2999, file: !3000, line: 26, size: 32, elements: !3004)
!3004 = !{!3005}
!3005 = !DIDerivedType(tag: DW_TAG_member, scope: !3003, file: !3000, line: 30, baseType: !3006, size: 32)
!3006 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3003, file: !3000, line: 30, size: 32, elements: !3007)
!3007 = !{!3008, !3009}
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3006, file: !3000, line: 31, baseType: !295)
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3006, file: !3000, line: 32, baseType: !113, size: 32)
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "d_op", scope: !351, file: !348, line: 102, baseType: !2592, size: 64, offset: 768)
!3011 = !DIDerivedType(tag: DW_TAG_member, name: "d_sb", scope: !351, file: !348, line: 103, baseType: !571, size: 64, offset: 832)
!3012 = !DIDerivedType(tag: DW_TAG_member, name: "d_time", scope: !351, file: !348, line: 104, baseType: !138, size: 64, offset: 896)
!3013 = !DIDerivedType(tag: DW_TAG_member, name: "d_fsdata", scope: !351, file: !348, line: 105, baseType: !111, size: 64, offset: 960)
!3014 = !DIDerivedType(tag: DW_TAG_member, scope: !351, file: !348, line: 107, baseType: !3015, size: 128, offset: 1024)
!3015 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !351, file: !348, line: 107, size: 128, elements: !3016)
!3016 = !{!3017, !3018}
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "d_lru", scope: !3015, file: !348, line: 108, baseType: !311, size: 128)
!3018 = !DIDerivedType(tag: DW_TAG_member, name: "d_wait", scope: !3015, file: !348, line: 109, baseType: !2793, size: 64)
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "d_child", scope: !351, file: !348, line: 111, baseType: !311, size: 128, offset: 1152)
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "d_subdirs", scope: !351, file: !348, line: 112, baseType: !311, size: 128, offset: 1280)
!3021 = !DIDerivedType(tag: DW_TAG_member, name: "d_u", scope: !351, file: !348, line: 120, baseType: !3022, size: 128, offset: 1408)
!3022 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !351, file: !348, line: 116, size: 128, elements: !3023)
!3023 = !{!3024, !3025, !3026}
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "d_alias", scope: !3022, file: !348, line: 117, baseType: !614, size: 128)
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "d_in_lookup_hash", scope: !3022, file: !348, line: 118, baseType: !365, size: 128)
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "d_rcu", scope: !3022, file: !348, line: 119, baseType: !333, size: 128, align: 64)
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "f_inode", scope: !321, file: !31, line: 922, baseType: !393, size: 64, offset: 256)
!3028 = !DIDerivedType(tag: DW_TAG_member, name: "f_op", scope: !321, file: !31, line: 923, baseType: !2741, size: 64, offset: 320)
!3029 = !DIDerivedType(tag: DW_TAG_member, name: "f_lock", scope: !321, file: !31, line: 929, baseType: !295, offset: 384)
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "f_write_hint", scope: !321, file: !31, line: 930, baseType: !30, size: 32, offset: 384)
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "f_count", scope: !321, file: !31, line: 931, baseType: !284, size: 64, offset: 448)
!3032 = !DIDerivedType(tag: DW_TAG_member, name: "f_flags", scope: !321, file: !31, line: 932, baseType: !7, size: 32, offset: 512)
!3033 = !DIDerivedType(tag: DW_TAG_member, name: "f_mode", scope: !321, file: !31, line: 933, baseType: !2588, size: 32, offset: 544)
!3034 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos_lock", scope: !321, file: !31, line: 934, baseType: !280, size: 192, offset: 576)
!3035 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos", scope: !321, file: !31, line: 935, baseType: !498, size: 64, offset: 768)
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "f_owner", scope: !321, file: !31, line: 936, baseType: !3037, size: 192, offset: 832)
!3037 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fown_struct", file: !31, line: 885, size: 192, elements: !3038)
!3038 = !{!3039, !3040, !3041, !3042, !3043, !3044}
!3039 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3037, file: !31, line: 886, baseType: !2849)
!3040 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !3037, file: !31, line: 887, baseType: !1429, size: 64)
!3041 = !DIDerivedType(tag: DW_TAG_member, name: "pid_type", scope: !3037, file: !31, line: 888, baseType: !39, size: 32, offset: 64)
!3042 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !3037, file: !31, line: 889, baseType: !400, size: 32, offset: 96)
!3043 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !3037, file: !31, line: 889, baseType: !400, size: 32, offset: 128)
!3044 = !DIDerivedType(tag: DW_TAG_member, name: "signum", scope: !3037, file: !31, line: 890, baseType: !113, size: 32, offset: 160)
!3045 = !DIDerivedType(tag: DW_TAG_member, name: "f_cred", scope: !321, file: !31, line: 937, baseType: !1505, size: 64, offset: 1024)
!3046 = !DIDerivedType(tag: DW_TAG_member, name: "f_ra", scope: !321, file: !31, line: 938, baseType: !3047, size: 256, offset: 1088)
!3047 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_ra_state", file: !31, line: 896, size: 256, elements: !3048)
!3048 = !{!3049, !3050, !3051, !3052, !3053, !3054}
!3049 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3047, file: !31, line: 897, baseType: !138, size: 64)
!3050 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3047, file: !31, line: 898, baseType: !7, size: 32, offset: 64)
!3051 = !DIDerivedType(tag: DW_TAG_member, name: "async_size", scope: !3047, file: !31, line: 899, baseType: !7, size: 32, offset: 96)
!3052 = !DIDerivedType(tag: DW_TAG_member, name: "ra_pages", scope: !3047, file: !31, line: 902, baseType: !7, size: 32, offset: 128)
!3053 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_miss", scope: !3047, file: !31, line: 903, baseType: !7, size: 32, offset: 160)
!3054 = !DIDerivedType(tag: DW_TAG_member, name: "prev_pos", scope: !3047, file: !31, line: 904, baseType: !498, size: 64, offset: 192)
!3055 = !DIDerivedType(tag: DW_TAG_member, name: "f_version", scope: !321, file: !31, line: 940, baseType: !386, size: 64, offset: 1344)
!3056 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !321, file: !31, line: 945, baseType: !111, size: 64, offset: 1408)
!3057 = !DIDerivedType(tag: DW_TAG_member, name: "f_ep_links", scope: !321, file: !31, line: 949, baseType: !311, size: 128, offset: 1472)
!3058 = !DIDerivedType(tag: DW_TAG_member, name: "f_tfile_llink", scope: !321, file: !31, line: 950, baseType: !311, size: 128, offset: 1600)
!3059 = !DIDerivedType(tag: DW_TAG_member, name: "f_mapping", scope: !321, file: !31, line: 952, baseType: !747, size: 64, offset: 1728)
!3060 = !DIDerivedType(tag: DW_TAG_member, name: "f_wb_err", scope: !321, file: !31, line: 953, baseType: !954, size: 32, offset: 1792)
!3061 = !DIDerivedType(tag: DW_TAG_member, name: "f_sb_err", scope: !321, file: !31, line: 954, baseType: !954, size: 32, offset: 1824)
!3062 = !DIDerivedType(tag: DW_TAG_member, name: "poller", scope: !120, file: !86, line: 163, baseType: !3063, size: 64, offset: 2048)
!3063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3064, size: 64)
!3064 = !DICompositeType(tag: DW_TAG_structure_type, name: "input_dev_poller", file: !86, line: 24, flags: DIFlagFwdDecl)
!3065 = !DIDerivedType(tag: DW_TAG_member, name: "repeat_key", scope: !120, file: !86, line: 165, baseType: !7, size: 32, offset: 2112)
!3066 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !120, file: !86, line: 166, baseType: !3067, size: 320, offset: 2176)
!3067 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timer_list", file: !3068, line: 11, size: 320, elements: !3069)
!3068 = !DIFile(filename: "./include/linux/timer.h", directory: "/home/lizy2001/genbc/linux")
!3069 = !{!3070, !3071, !3072, !3077}
!3070 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3067, file: !3068, line: 16, baseType: !614, size: 128)
!3071 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !3067, file: !3068, line: 17, baseType: !138, size: 64, offset: 128)
!3072 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !3067, file: !3068, line: 18, baseType: !3073, size: 64, offset: 192)
!3073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3074, size: 64)
!3074 = !DISubroutineType(types: !3075)
!3075 = !{null, !3076}
!3076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3067, size: 64)
!3077 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3067, file: !3068, line: 19, baseType: !383, size: 32, offset: 256)
!3078 = !DIDerivedType(tag: DW_TAG_member, name: "rep", scope: !120, file: !86, line: 168, baseType: !3079, size: 64, offset: 2496)
!3079 = !DICompositeType(tag: DW_TAG_array_type, baseType: !113, size: 64, elements: !153)
!3080 = !DIDerivedType(tag: DW_TAG_member, name: "mt", scope: !120, file: !86, line: 170, baseType: !3081, size: 64, offset: 2560)
!3081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3082, size: 64)
!3082 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "input_mt", file: !3083, line: 43, size: 256, elements: !3084)
!3083 = !DIFile(filename: "./include/linux/input/mt.h", directory: "/home/lizy2001/genbc/linux")
!3084 = !{!3085, !3086, !3087, !3088, !3089, !3090, !3091}
!3085 = !DIDerivedType(tag: DW_TAG_member, name: "trkid", scope: !3082, file: !3083, line: 44, baseType: !113, size: 32)
!3086 = !DIDerivedType(tag: DW_TAG_member, name: "num_slots", scope: !3082, file: !3083, line: 45, baseType: !113, size: 32, offset: 32)
!3087 = !DIDerivedType(tag: DW_TAG_member, name: "slot", scope: !3082, file: !3083, line: 46, baseType: !113, size: 32, offset: 64)
!3088 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3082, file: !3083, line: 47, baseType: !7, size: 32, offset: 96)
!3089 = !DIDerivedType(tag: DW_TAG_member, name: "frame", scope: !3082, file: !3083, line: 48, baseType: !7, size: 32, offset: 128)
!3090 = !DIDerivedType(tag: DW_TAG_member, name: "red", scope: !3082, file: !3083, line: 49, baseType: !682, size: 64, offset: 192)
!3091 = !DIDerivedType(tag: DW_TAG_member, name: "slots", scope: !3082, file: !3083, line: 50, baseType: !3092, offset: 256)
!3092 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3093, elements: !2271)
!3093 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "input_mt_slot", file: !3083, line: 27, size: 512, elements: !3094)
!3094 = !{!3095, !3099, !3100}
!3095 = !DIDerivedType(tag: DW_TAG_member, name: "abs", scope: !3093, file: !3083, line: 28, baseType: !3096, size: 448)
!3096 = !DICompositeType(tag: DW_TAG_array_type, baseType: !113, size: 448, elements: !3097)
!3097 = !{!3098}
!3098 = !DISubrange(count: 14)
!3099 = !DIDerivedType(tag: DW_TAG_member, name: "frame", scope: !3093, file: !3083, line: 29, baseType: !7, size: 32, offset: 448)
!3100 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !3093, file: !3083, line: 30, baseType: !7, size: 32, offset: 480)
!3101 = !DIDerivedType(tag: DW_TAG_member, name: "absinfo", scope: !120, file: !86, line: 172, baseType: !3102, size: 64, offset: 2624)
!3102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3103, size: 64)
!3103 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "input_absinfo", file: !127, line: 90, size: 192, elements: !3104)
!3104 = !{!3105, !3106, !3107, !3108, !3109, !3110}
!3105 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !3103, file: !127, line: 91, baseType: !1398, size: 32)
!3106 = !DIDerivedType(tag: DW_TAG_member, name: "minimum", scope: !3103, file: !127, line: 92, baseType: !1398, size: 32, offset: 32)
!3107 = !DIDerivedType(tag: DW_TAG_member, name: "maximum", scope: !3103, file: !127, line: 93, baseType: !1398, size: 32, offset: 64)
!3108 = !DIDerivedType(tag: DW_TAG_member, name: "fuzz", scope: !3103, file: !127, line: 94, baseType: !1398, size: 32, offset: 96)
!3109 = !DIDerivedType(tag: DW_TAG_member, name: "flat", scope: !3103, file: !127, line: 95, baseType: !1398, size: 32, offset: 128)
!3110 = !DIDerivedType(tag: DW_TAG_member, name: "resolution", scope: !3103, file: !127, line: 96, baseType: !1398, size: 32, offset: 160)
!3111 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !120, file: !86, line: 174, baseType: !143, size: 768, offset: 2688)
!3112 = !DIDerivedType(tag: DW_TAG_member, name: "led", scope: !120, file: !86, line: 175, baseType: !137, size: 64, offset: 3456)
!3113 = !DIDerivedType(tag: DW_TAG_member, name: "snd", scope: !120, file: !86, line: 176, baseType: !137, size: 64, offset: 3520)
!3114 = !DIDerivedType(tag: DW_TAG_member, name: "sw", scope: !120, file: !86, line: 177, baseType: !137, size: 64, offset: 3584)
!3115 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !120, file: !86, line: 179, baseType: !3116, size: 64, offset: 3648)
!3116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3117, size: 64)
!3117 = !DISubroutineType(types: !3118)
!3118 = !{!113, !119}
!3119 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !120, file: !86, line: 180, baseType: !3120, size: 64, offset: 3712)
!3120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3121, size: 64)
!3121 = !DISubroutineType(types: !3122)
!3122 = !{null, !119}
!3123 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !120, file: !86, line: 181, baseType: !3124, size: 64, offset: 3776)
!3124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3125, size: 64)
!3125 = !DISubroutineType(types: !3126)
!3126 = !{!113, !119, !320}
!3127 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !120, file: !86, line: 182, baseType: !3128, size: 64, offset: 3840)
!3128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3129, size: 64)
!3129 = !DISubroutineType(types: !3130)
!3130 = !{!113, !119, !7, !7, !113}
!3131 = !DIDerivedType(tag: DW_TAG_member, name: "grab", scope: !120, file: !86, line: 184, baseType: !107, size: 64, offset: 3904)
!3132 = !DIDerivedType(tag: DW_TAG_member, name: "event_lock", scope: !120, file: !86, line: 186, baseType: !295, offset: 3968)
!3133 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !120, file: !86, line: 187, baseType: !280, size: 192, offset: 3968)
!3134 = !DIDerivedType(tag: DW_TAG_member, name: "users", scope: !120, file: !86, line: 189, baseType: !7, size: 32, offset: 4160)
!3135 = !DIDerivedType(tag: DW_TAG_member, name: "going_away", scope: !120, file: !86, line: 190, baseType: !457, size: 8, offset: 4192)
!3136 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !120, file: !86, line: 192, baseType: !3137, size: 5568, offset: 4224)
!3137 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !60, line: 461, size: 5568, elements: !3138)
!3138 = !{!3139, !3426, !3428, !3431, !3432, !3483, !3574, !3575, !3576, !3577, !3578, !3587, !3681, !3694, !3697, !3698, !3702, !3704, !3705, !3706, !3710, !3716, !3717, !3720, !3724, !3727, !3728, !3729, !3730, !3731, !3763, !3764, !3765, !3768, !3771, !3772, !3773, !3774}
!3139 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !3137, file: !60, line: 462, baseType: !3140, size: 512)
!3140 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobject", file: !3141, line: 64, size: 512, elements: !3142)
!3141 = !DIFile(filename: "./include/linux/kobject.h", directory: "/home/lizy2001/genbc/linux")
!3142 = !{!3143, !3144, !3145, !3147, !3187, !3289, !3416, !3421, !3422, !3423, !3424, !3425}
!3143 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3140, file: !3141, line: 65, baseType: !115, size: 64)
!3144 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3140, file: !3141, line: 66, baseType: !311, size: 128, offset: 64)
!3145 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3140, file: !3141, line: 67, baseType: !3146, size: 64, offset: 192)
!3146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3140, size: 64)
!3147 = !DIDerivedType(tag: DW_TAG_member, name: "kset", scope: !3140, file: !3141, line: 68, baseType: !3148, size: 64, offset: 256)
!3148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3149, size: 64)
!3149 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset", file: !3141, line: 192, size: 704, elements: !3150)
!3150 = !{!3151, !3152, !3153, !3154}
!3151 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3149, file: !3141, line: 193, baseType: !311, size: 128)
!3152 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !3149, file: !3141, line: 194, baseType: !295, offset: 128)
!3153 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !3149, file: !3141, line: 195, baseType: !3140, size: 512, offset: 128)
!3154 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_ops", scope: !3149, file: !3141, line: 196, baseType: !3155, size: 64, offset: 640)
!3155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3156, size: 64)
!3156 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3157)
!3157 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset_uevent_ops", file: !3141, line: 156, size: 192, elements: !3158)
!3158 = !{!3159, !3164, !3169}
!3159 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !3157, file: !3141, line: 157, baseType: !3160, size: 64)
!3160 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3161)
!3161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3162, size: 64)
!3162 = !DISubroutineType(types: !3163)
!3163 = !{!113, !3148, !3146}
!3164 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3157, file: !3141, line: 158, baseType: !3165, size: 64, offset: 64)
!3165 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3166)
!3166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3167, size: 64)
!3167 = !DISubroutineType(types: !3168)
!3168 = !{!115, !3148, !3146}
!3169 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !3157, file: !3141, line: 159, baseType: !3170, size: 64, offset: 128)
!3170 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3171)
!3171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3172, size: 64)
!3172 = !DISubroutineType(types: !3173)
!3173 = !{!113, !3148, !3146, !3174}
!3174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3175, size: 64)
!3175 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_uevent_env", file: !3141, line: 148, size: 20736, elements: !3176)
!3176 = !{!3177, !3179, !3181, !3182, !3186}
!3177 = !DIDerivedType(tag: DW_TAG_member, name: "argv", scope: !3175, file: !3141, line: 149, baseType: !3178, size: 192)
!3178 = !DICompositeType(tag: DW_TAG_array_type, baseType: !452, size: 192, elements: !626)
!3179 = !DIDerivedType(tag: DW_TAG_member, name: "envp", scope: !3175, file: !3141, line: 150, baseType: !3180, size: 4096, offset: 192)
!3180 = !DICompositeType(tag: DW_TAG_array_type, baseType: !452, size: 4096, elements: !1838)
!3181 = !DIDerivedType(tag: DW_TAG_member, name: "envp_idx", scope: !3175, file: !3141, line: 151, baseType: !113, size: 32, offset: 4288)
!3182 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !3175, file: !3141, line: 152, baseType: !3183, size: 16384, offset: 4320)
!3183 = !DICompositeType(tag: DW_TAG_array_type, baseType: !117, size: 16384, elements: !3184)
!3184 = !{!3185}
!3185 = !DISubrange(count: 2048)
!3186 = !DIDerivedType(tag: DW_TAG_member, name: "buflen", scope: !3175, file: !3141, line: 153, baseType: !113, size: 32, offset: 20704)
!3187 = !DIDerivedType(tag: DW_TAG_member, name: "ktype", scope: !3140, file: !3141, line: 69, baseType: !3188, size: 64, offset: 320)
!3188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3189, size: 64)
!3189 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_type", file: !3141, line: 138, size: 448, elements: !3190)
!3190 = !{!3191, !3195, !3214, !3216, !3249, !3279, !3283}
!3191 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3189, file: !3141, line: 139, baseType: !3192, size: 64)
!3192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3193, size: 64)
!3193 = !DISubroutineType(types: !3194)
!3194 = !{null, !3146}
!3195 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_ops", scope: !3189, file: !3141, line: 140, baseType: !3196, size: 64, offset: 64)
!3196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3197, size: 64)
!3197 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3198)
!3198 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sysfs_ops", file: !3199, line: 230, size: 128, elements: !3200)
!3199 = !DIFile(filename: "./include/linux/sysfs.h", directory: "/home/lizy2001/genbc/linux")
!3200 = !{!3201, !3210}
!3201 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !3198, file: !3199, line: 231, baseType: !3202, size: 64)
!3202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3203, size: 64)
!3203 = !DISubroutineType(types: !3204)
!3204 = !{!544, !3146, !3205, !452}
!3205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3206, size: 64)
!3206 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute", file: !3199, line: 30, size: 128, elements: !3207)
!3207 = !{!3208, !3209}
!3208 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3206, file: !3199, line: 31, baseType: !115, size: 64)
!3209 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3206, file: !3199, line: 32, baseType: !397, size: 16, offset: 64)
!3210 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !3198, file: !3199, line: 232, baseType: !3211, size: 64, offset: 64)
!3211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3212, size: 64)
!3212 = !DISubroutineType(types: !3213)
!3213 = !{!544, !3146, !3205, !115, !547}
!3214 = !DIDerivedType(tag: DW_TAG_member, name: "default_attrs", scope: !3189, file: !3141, line: 141, baseType: !3215, size: 64, offset: 128)
!3215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3205, size: 64)
!3216 = !DIDerivedType(tag: DW_TAG_member, name: "default_groups", scope: !3189, file: !3141, line: 142, baseType: !3217, size: 64, offset: 192)
!3217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3218, size: 64)
!3218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3219, size: 64)
!3219 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3220)
!3220 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute_group", file: !3199, line: 84, size: 320, elements: !3221)
!3221 = !{!3222, !3223, !3227, !3246, !3247}
!3222 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3220, file: !3199, line: 85, baseType: !115, size: 64)
!3223 = !DIDerivedType(tag: DW_TAG_member, name: "is_visible", scope: !3220, file: !3199, line: 86, baseType: !3224, size: 64, offset: 64)
!3224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3225, size: 64)
!3225 = !DISubroutineType(types: !3226)
!3226 = !{!397, !3146, !3205, !113}
!3227 = !DIDerivedType(tag: DW_TAG_member, name: "is_bin_visible", scope: !3220, file: !3199, line: 88, baseType: !3228, size: 64, offset: 128)
!3228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3229, size: 64)
!3229 = !DISubroutineType(types: !3230)
!3230 = !{!397, !3146, !3231, !113}
!3231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3232, size: 64)
!3232 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bin_attribute", file: !3199, line: 168, size: 448, elements: !3233)
!3233 = !{!3234, !3235, !3236, !3237, !3241, !3242}
!3234 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !3232, file: !3199, line: 169, baseType: !3206, size: 128)
!3235 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3232, file: !3199, line: 170, baseType: !547, size: 64, offset: 128)
!3236 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !3232, file: !3199, line: 171, baseType: !111, size: 64, offset: 192)
!3237 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !3232, file: !3199, line: 172, baseType: !3238, size: 64, offset: 256)
!3238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3239, size: 64)
!3239 = !DISubroutineType(types: !3240)
!3240 = !{!544, !320, !3146, !3231, !452, !498, !547}
!3241 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !3232, file: !3199, line: 174, baseType: !3238, size: 64, offset: 320)
!3242 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !3232, file: !3199, line: 176, baseType: !3243, size: 64, offset: 384)
!3243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3244, size: 64)
!3244 = !DISubroutineType(types: !3245)
!3245 = !{!113, !320, !3146, !3231, !1027}
!3246 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", scope: !3220, file: !3199, line: 90, baseType: !3215, size: 64, offset: 192)
!3247 = !DIDerivedType(tag: DW_TAG_member, name: "bin_attrs", scope: !3220, file: !3199, line: 91, baseType: !3248, size: 64, offset: 256)
!3248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3231, size: 64)
!3249 = !DIDerivedType(tag: DW_TAG_member, name: "child_ns_type", scope: !3189, file: !3141, line: 143, baseType: !3250, size: 64, offset: 256)
!3250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3251, size: 64)
!3251 = !DISubroutineType(types: !3252)
!3252 = !{!3253, !3146}
!3253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3254, size: 64)
!3254 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3255)
!3255 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_ns_type_operations", file: !48, line: 39, size: 384, elements: !3256)
!3256 = !{!3257, !3258, !3262, !3266, !3274, !3278}
!3257 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3255, file: !48, line: 40, baseType: !47, size: 32)
!3258 = !DIDerivedType(tag: DW_TAG_member, name: "current_may_mount", scope: !3255, file: !48, line: 41, baseType: !3259, size: 64, offset: 64)
!3259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3260, size: 64)
!3260 = !DISubroutineType(types: !3261)
!3261 = !{!457}
!3262 = !DIDerivedType(tag: DW_TAG_member, name: "grab_current_ns", scope: !3255, file: !48, line: 42, baseType: !3263, size: 64, offset: 128)
!3263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3264, size: 64)
!3264 = !DISubroutineType(types: !3265)
!3265 = !{!111}
!3266 = !DIDerivedType(tag: DW_TAG_member, name: "netlink_ns", scope: !3255, file: !48, line: 43, baseType: !3267, size: 64, offset: 192)
!3267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3268, size: 64)
!3268 = !DISubroutineType(types: !3269)
!3269 = !{!3270, !3272}
!3270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3271, size: 64)
!3271 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!3272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3273, size: 64)
!3273 = !DICompositeType(tag: DW_TAG_structure_type, name: "sock", file: !48, line: 19, flags: DIFlagFwdDecl)
!3274 = !DIDerivedType(tag: DW_TAG_member, name: "initial_ns", scope: !3255, file: !48, line: 44, baseType: !3275, size: 64, offset: 256)
!3275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3276, size: 64)
!3276 = !DISubroutineType(types: !3277)
!3277 = !{!3270}
!3278 = !DIDerivedType(tag: DW_TAG_member, name: "drop_ns", scope: !3255, file: !48, line: 45, baseType: !434, size: 64, offset: 320)
!3279 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !3189, file: !3141, line: 144, baseType: !3280, size: 64, offset: 320)
!3280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3281, size: 64)
!3281 = !DISubroutineType(types: !3282)
!3282 = !{!3270, !3146}
!3283 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !3189, file: !3141, line: 145, baseType: !3284, size: 64, offset: 384)
!3284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3285, size: 64)
!3285 = !DISubroutineType(types: !3286)
!3286 = !{null, !3146, !3287, !3288}
!3287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !400, size: 64)
!3288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !409, size: 64)
!3289 = !DIDerivedType(tag: DW_TAG_member, name: "sd", scope: !3140, file: !3141, line: 70, baseType: !3290, size: 64, offset: 384)
!3290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3291, size: 64)
!3291 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_node", file: !591, line: 123, size: 1024, elements: !3292)
!3292 = !{!3293, !3294, !3295, !3296, !3297, !3298, !3299, !3300, !3409, !3410, !3411, !3412, !3413}
!3293 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3291, file: !591, line: 124, baseType: !761, size: 32)
!3294 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !3291, file: !591, line: 125, baseType: !761, size: 32, offset: 32)
!3295 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3291, file: !591, line: 135, baseType: !3290, size: 64, offset: 64)
!3296 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3291, file: !591, line: 136, baseType: !115, size: 64, offset: 128)
!3297 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !3291, file: !591, line: 138, baseType: !774, size: 192, align: 64, offset: 192)
!3298 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !3291, file: !591, line: 140, baseType: !3270, size: 64, offset: 384)
!3299 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !3291, file: !591, line: 141, baseType: !7, size: 32, offset: 448)
!3300 = !DIDerivedType(tag: DW_TAG_member, scope: !3291, file: !591, line: 142, baseType: !3301, size: 256, offset: 512)
!3301 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3291, file: !591, line: 142, size: 256, elements: !3302)
!3302 = !{!3303, !3349, !3353}
!3303 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !3301, file: !591, line: 143, baseType: !3304, size: 192)
!3304 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_dir", file: !591, line: 91, size: 192, elements: !3305)
!3305 = !{!3306, !3307, !3308}
!3306 = !DIDerivedType(tag: DW_TAG_member, name: "subdirs", scope: !3304, file: !591, line: 92, baseType: !138, size: 64)
!3307 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3304, file: !591, line: 94, baseType: !770, size: 64, offset: 64)
!3308 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !3304, file: !591, line: 100, baseType: !3309, size: 64, offset: 128)
!3309 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3310, size: 64)
!3310 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_root", file: !591, line: 180, size: 704, elements: !3311)
!3311 = !{!3312, !3313, !3314, !3321, !3322, !3323, !3347, !3348}
!3312 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !3310, file: !591, line: 182, baseType: !3290, size: 64)
!3313 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3310, file: !591, line: 183, baseType: !7, size: 32, offset: 64)
!3314 = !DIDerivedType(tag: DW_TAG_member, name: "ino_idr", scope: !3310, file: !591, line: 186, baseType: !3315, size: 192, offset: 128)
!3315 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "idr", file: !3316, line: 19, size: 192, elements: !3317)
!3316 = !DIFile(filename: "./include/linux/idr.h", directory: "/home/lizy2001/genbc/linux")
!3317 = !{!3318, !3319, !3320}
!3318 = !DIDerivedType(tag: DW_TAG_member, name: "idr_rt", scope: !3315, file: !3316, line: 20, baseType: !752, size: 128)
!3319 = !DIDerivedType(tag: DW_TAG_member, name: "idr_base", scope: !3315, file: !3316, line: 21, baseType: !7, size: 32, offset: 128)
!3320 = !DIDerivedType(tag: DW_TAG_member, name: "idr_next", scope: !3315, file: !3316, line: 22, baseType: !7, size: 32, offset: 160)
!3321 = !DIDerivedType(tag: DW_TAG_member, name: "last_id_lowbits", scope: !3310, file: !591, line: 187, baseType: !383, size: 32, offset: 320)
!3322 = !DIDerivedType(tag: DW_TAG_member, name: "id_highbits", scope: !3310, file: !591, line: 188, baseType: !383, size: 32, offset: 352)
!3323 = !DIDerivedType(tag: DW_TAG_member, name: "syscall_ops", scope: !3310, file: !591, line: 189, baseType: !3324, size: 64, offset: 384)
!3324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3325, size: 64)
!3325 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_syscall_ops", file: !591, line: 168, size: 320, elements: !3326)
!3326 = !{!3327, !3331, !3335, !3339, !3343}
!3327 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !3325, file: !591, line: 169, baseType: !3328, size: 64)
!3328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3329, size: 64)
!3329 = !DISubroutineType(types: !3330)
!3330 = !{!113, !688, !3309}
!3331 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !3325, file: !591, line: 171, baseType: !3332, size: 64, offset: 64)
!3332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3333, size: 64)
!3333 = !DISubroutineType(types: !3334)
!3334 = !{!113, !3290, !115, !397}
!3335 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !3325, file: !591, line: 173, baseType: !3336, size: 64, offset: 128)
!3336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3337, size: 64)
!3337 = !DISubroutineType(types: !3338)
!3338 = !{!113, !3290}
!3339 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !3325, file: !591, line: 174, baseType: !3340, size: 64, offset: 192)
!3340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3341, size: 64)
!3341 = !DISubroutineType(types: !3342)
!3342 = !{!113, !3290, !3290, !115}
!3343 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !3325, file: !591, line: 176, baseType: !3344, size: 64, offset: 256)
!3344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3345, size: 64)
!3345 = !DISubroutineType(types: !3346)
!3346 = !{!113, !688, !3290, !3309}
!3347 = !DIDerivedType(tag: DW_TAG_member, name: "supers", scope: !3310, file: !591, line: 192, baseType: !311, size: 128, offset: 448)
!3348 = !DIDerivedType(tag: DW_TAG_member, name: "deactivate_waitq", scope: !3310, file: !591, line: 194, baseType: !1439, size: 128, offset: 576)
!3349 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !3301, file: !591, line: 144, baseType: !3350, size: 64)
!3350 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_symlink", file: !591, line: 103, size: 64, elements: !3351)
!3351 = !{!3352}
!3352 = !DIDerivedType(tag: DW_TAG_member, name: "target_kn", scope: !3350, file: !591, line: 104, baseType: !3290, size: 64)
!3353 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !3301, file: !591, line: 145, baseType: !3354, size: 256)
!3354 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_attr", file: !591, line: 107, size: 256, elements: !3355)
!3355 = !{!3356, !3404, !3407, !3408}
!3356 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3354, file: !591, line: 108, baseType: !3357, size: 64)
!3357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3358, size: 64)
!3358 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3359)
!3359 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_ops", file: !591, line: 217, size: 768, elements: !3360)
!3360 = !{!3361, !3381, !3385, !3386, !3387, !3388, !3389, !3393, !3394, !3395, !3396, !3400}
!3361 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !3359, file: !591, line: 222, baseType: !3362, size: 64)
!3362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3363, size: 64)
!3363 = !DISubroutineType(types: !3364)
!3364 = !{!113, !3365}
!3365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3366, size: 64)
!3366 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_file", file: !591, line: 197, size: 1088, elements: !3367)
!3367 = !{!3368, !3369, !3370, !3371, !3372, !3373, !3374, !3375, !3376, !3377, !3378, !3379, !3380}
!3368 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !3366, file: !591, line: 199, baseType: !3290, size: 64)
!3369 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !3366, file: !591, line: 200, baseType: !320, size: 64, offset: 64)
!3370 = !DIDerivedType(tag: DW_TAG_member, name: "seq_file", scope: !3366, file: !591, line: 201, baseType: !688, size: 64, offset: 128)
!3371 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !3366, file: !591, line: 202, baseType: !111, size: 64, offset: 192)
!3372 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !3366, file: !591, line: 205, baseType: !280, size: 192, offset: 256)
!3373 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_mutex", scope: !3366, file: !591, line: 206, baseType: !280, size: 192, offset: 448)
!3374 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !3366, file: !591, line: 207, baseType: !113, size: 32, offset: 640)
!3375 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3366, file: !591, line: 208, baseType: !311, size: 128, offset: 704)
!3376 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_buf", scope: !3366, file: !591, line: 209, baseType: !452, size: 64, offset: 832)
!3377 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !3366, file: !591, line: 211, baseType: !547, size: 64, offset: 896)
!3378 = !DIDerivedType(tag: DW_TAG_member, name: "mmapped", scope: !3366, file: !591, line: 212, baseType: !457, size: 1, offset: 960, flags: DIFlagBitField, extraData: i64 960)
!3379 = !DIDerivedType(tag: DW_TAG_member, name: "released", scope: !3366, file: !591, line: 213, baseType: !457, size: 1, offset: 961, flags: DIFlagBitField, extraData: i64 960)
!3380 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !3366, file: !591, line: 214, baseType: !1055, size: 64, offset: 1024)
!3381 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3359, file: !591, line: 223, baseType: !3382, size: 64, offset: 64)
!3382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3383, size: 64)
!3383 = !DISubroutineType(types: !3384)
!3384 = !{null, !3365}
!3385 = !DIDerivedType(tag: DW_TAG_member, name: "seq_show", scope: !3359, file: !591, line: 236, baseType: !719, size: 64, offset: 128)
!3386 = !DIDerivedType(tag: DW_TAG_member, name: "seq_start", scope: !3359, file: !591, line: 238, baseType: !706, size: 64, offset: 192)
!3387 = !DIDerivedType(tag: DW_TAG_member, name: "seq_next", scope: !3359, file: !591, line: 239, baseType: !715, size: 64, offset: 256)
!3388 = !DIDerivedType(tag: DW_TAG_member, name: "seq_stop", scope: !3359, file: !591, line: 240, baseType: !711, size: 64, offset: 320)
!3389 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !3359, file: !591, line: 242, baseType: !3390, size: 64, offset: 384)
!3390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3391, size: 64)
!3391 = !DISubroutineType(types: !3392)
!3392 = !{!544, !3365, !452, !547, !498}
!3393 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !3359, file: !591, line: 252, baseType: !547, size: 64, offset: 448)
!3394 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc", scope: !3359, file: !591, line: 259, baseType: !457, size: 8, offset: 512)
!3395 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !3359, file: !591, line: 260, baseType: !3390, size: 64, offset: 576)
!3396 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !3359, file: !591, line: 263, baseType: !3397, size: 64, offset: 640)
!3397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3398, size: 64)
!3398 = !DISubroutineType(types: !3399)
!3399 = !{!2782, !3365, !2784}
!3400 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !3359, file: !591, line: 266, baseType: !3401, size: 64, offset: 704)
!3401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3402, size: 64)
!3402 = !DISubroutineType(types: !3403)
!3403 = !{!113, !3365, !1027}
!3404 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !3354, file: !591, line: 109, baseType: !3405, size: 64, offset: 64)
!3405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3406, size: 64)
!3406 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_node", file: !591, line: 31, flags: DIFlagFwdDecl)
!3407 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3354, file: !591, line: 110, baseType: !498, size: 64, offset: 128)
!3408 = !DIDerivedType(tag: DW_TAG_member, name: "notify_next", scope: !3354, file: !591, line: 111, baseType: !3290, size: 64, offset: 192)
!3409 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !3291, file: !591, line: 148, baseType: !111, size: 64, offset: 768)
!3410 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3291, file: !591, line: 154, baseType: !386, size: 64, offset: 832)
!3411 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3291, file: !591, line: 156, baseType: !132, size: 16, offset: 896)
!3412 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3291, file: !591, line: 157, baseType: !397, size: 16, offset: 912)
!3413 = !DIDerivedType(tag: DW_TAG_member, name: "iattr", scope: !3291, file: !591, line: 158, baseType: !3414, size: 64, offset: 960)
!3414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3415, size: 64)
!3415 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_iattrs", file: !591, line: 32, flags: DIFlagFwdDecl)
!3416 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !3140, file: !3141, line: 71, baseType: !3417, size: 32, offset: 448)
!3417 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kref", file: !3418, line: 19, size: 32, elements: !3419)
!3418 = !DIFile(filename: "./include/linux/kref.h", directory: "/home/lizy2001/genbc/linux")
!3419 = !{!3420}
!3420 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !3417, file: !3418, line: 20, baseType: !1187, size: 32)
!3421 = !DIDerivedType(tag: DW_TAG_member, name: "state_initialized", scope: !3140, file: !3141, line: 75, baseType: !7, size: 1, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!3422 = !DIDerivedType(tag: DW_TAG_member, name: "state_in_sysfs", scope: !3140, file: !3141, line: 76, baseType: !7, size: 1, offset: 481, flags: DIFlagBitField, extraData: i64 480)
!3423 = !DIDerivedType(tag: DW_TAG_member, name: "state_add_uevent_sent", scope: !3140, file: !3141, line: 77, baseType: !7, size: 1, offset: 482, flags: DIFlagBitField, extraData: i64 480)
!3424 = !DIDerivedType(tag: DW_TAG_member, name: "state_remove_uevent_sent", scope: !3140, file: !3141, line: 78, baseType: !7, size: 1, offset: 483, flags: DIFlagBitField, extraData: i64 480)
!3425 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_suppress", scope: !3140, file: !3141, line: 79, baseType: !7, size: 1, offset: 484, flags: DIFlagBitField, extraData: i64 480)
!3426 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3137, file: !60, line: 463, baseType: !3427, size: 64, offset: 512)
!3427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3137, size: 64)
!3428 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3137, file: !60, line: 465, baseType: !3429, size: 64, offset: 576)
!3429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3430, size: 64)
!3430 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_private", file: !60, line: 36, flags: DIFlagFwdDecl)
!3431 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !3137, file: !60, line: 467, baseType: !115, size: 64, offset: 640)
!3432 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3137, file: !60, line: 468, baseType: !3433, size: 64, offset: 704)
!3433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3434, size: 64)
!3434 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3435)
!3435 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_type", file: !60, line: 87, size: 384, elements: !3436)
!3436 = !{!3437, !3438, !3439, !3443, !3448, !3452}
!3437 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3435, file: !60, line: 88, baseType: !115, size: 64)
!3438 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !3435, file: !60, line: 89, baseType: !3217, size: 64, offset: 64)
!3439 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !3435, file: !60, line: 90, baseType: !3440, size: 64, offset: 128)
!3440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3441, size: 64)
!3441 = !DISubroutineType(types: !3442)
!3442 = !{!113, !3427, !3174}
!3443 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !3435, file: !60, line: 91, baseType: !3444, size: 64, offset: 192)
!3444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3445, size: 64)
!3445 = !DISubroutineType(types: !3446)
!3446 = !{!452, !3427, !3447, !3287, !3288}
!3447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !397, size: 64)
!3448 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3435, file: !60, line: 93, baseType: !3449, size: 64, offset: 256)
!3449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3450, size: 64)
!3450 = !DISubroutineType(types: !3451)
!3451 = !{null, !3427}
!3452 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3435, file: !60, line: 95, baseType: !3453, size: 64, offset: 320)
!3453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3454, size: 64)
!3454 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3455)
!3455 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_ops", file: !67, line: 278, size: 1472, elements: !3456)
!3456 = !{!3457, !3461, !3462, !3463, !3464, !3465, !3466, !3467, !3468, !3469, !3470, !3471, !3472, !3473, !3474, !3475, !3476, !3477, !3478, !3479, !3480, !3481, !3482}
!3457 = !DIDerivedType(tag: DW_TAG_member, name: "prepare", scope: !3455, file: !67, line: 279, baseType: !3458, size: 64)
!3458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3459, size: 64)
!3459 = !DISubroutineType(types: !3460)
!3460 = !{!113, !3427}
!3461 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !3455, file: !67, line: 280, baseType: !3449, size: 64, offset: 64)
!3462 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3455, file: !67, line: 281, baseType: !3458, size: 64, offset: 128)
!3463 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3455, file: !67, line: 282, baseType: !3458, size: 64, offset: 192)
!3464 = !DIDerivedType(tag: DW_TAG_member, name: "freeze", scope: !3455, file: !67, line: 283, baseType: !3458, size: 64, offset: 256)
!3465 = !DIDerivedType(tag: DW_TAG_member, name: "thaw", scope: !3455, file: !67, line: 284, baseType: !3458, size: 64, offset: 320)
!3466 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff", scope: !3455, file: !67, line: 285, baseType: !3458, size: 64, offset: 384)
!3467 = !DIDerivedType(tag: DW_TAG_member, name: "restore", scope: !3455, file: !67, line: 286, baseType: !3458, size: 64, offset: 448)
!3468 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_late", scope: !3455, file: !67, line: 287, baseType: !3458, size: 64, offset: 512)
!3469 = !DIDerivedType(tag: DW_TAG_member, name: "resume_early", scope: !3455, file: !67, line: 288, baseType: !3458, size: 64, offset: 576)
!3470 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_late", scope: !3455, file: !67, line: 289, baseType: !3458, size: 64, offset: 640)
!3471 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_early", scope: !3455, file: !67, line: 290, baseType: !3458, size: 64, offset: 704)
!3472 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_late", scope: !3455, file: !67, line: 291, baseType: !3458, size: 64, offset: 768)
!3473 = !DIDerivedType(tag: DW_TAG_member, name: "restore_early", scope: !3455, file: !67, line: 292, baseType: !3458, size: 64, offset: 832)
!3474 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_noirq", scope: !3455, file: !67, line: 293, baseType: !3458, size: 64, offset: 896)
!3475 = !DIDerivedType(tag: DW_TAG_member, name: "resume_noirq", scope: !3455, file: !67, line: 294, baseType: !3458, size: 64, offset: 960)
!3476 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_noirq", scope: !3455, file: !67, line: 295, baseType: !3458, size: 64, offset: 1024)
!3477 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_noirq", scope: !3455, file: !67, line: 296, baseType: !3458, size: 64, offset: 1088)
!3478 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_noirq", scope: !3455, file: !67, line: 297, baseType: !3458, size: 64, offset: 1152)
!3479 = !DIDerivedType(tag: DW_TAG_member, name: "restore_noirq", scope: !3455, file: !67, line: 298, baseType: !3458, size: 64, offset: 1216)
!3480 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_suspend", scope: !3455, file: !67, line: 299, baseType: !3458, size: 64, offset: 1280)
!3481 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_resume", scope: !3455, file: !67, line: 300, baseType: !3458, size: 64, offset: 1344)
!3482 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_idle", scope: !3455, file: !67, line: 301, baseType: !3458, size: 64, offset: 1408)
!3483 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !3137, file: !60, line: 470, baseType: !3484, size: 64, offset: 768)
!3484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3485, size: 64)
!3485 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bus_type", file: !3486, line: 82, size: 1408, elements: !3487)
!3486 = !DIFile(filename: "./include/linux/device/bus.h", directory: "/home/lizy2001/genbc/linux")
!3487 = !{!3488, !3489, !3490, !3491, !3492, !3493, !3494, !3553, !3554, !3555, !3556, !3557, !3558, !3559, !3560, !3561, !3562, !3563, !3564, !3565, !3569, !3572, !3573}
!3488 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3485, file: !3486, line: 83, baseType: !115, size: 64)
!3489 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name", scope: !3485, file: !3486, line: 84, baseType: !115, size: 64, offset: 64)
!3490 = !DIDerivedType(tag: DW_TAG_member, name: "dev_root", scope: !3485, file: !3486, line: 85, baseType: !3427, size: 64, offset: 128)
!3491 = !DIDerivedType(tag: DW_TAG_member, name: "bus_groups", scope: !3485, file: !3486, line: 86, baseType: !3217, size: 64, offset: 192)
!3492 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !3485, file: !3486, line: 87, baseType: !3217, size: 64, offset: 256)
!3493 = !DIDerivedType(tag: DW_TAG_member, name: "drv_groups", scope: !3485, file: !3486, line: 88, baseType: !3217, size: 64, offset: 320)
!3494 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !3485, file: !3486, line: 90, baseType: !3495, size: 64, offset: 384)
!3495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3496, size: 64)
!3496 = !DISubroutineType(types: !3497)
!3497 = !{!113, !3427, !3498}
!3498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3499, size: 64)
!3499 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_driver", file: !54, line: 95, size: 1152, elements: !3500)
!3500 = !{!3501, !3502, !3503, !3504, !3505, !3506, !3507, !3520, !3533, !3534, !3535, !3536, !3537, !3545, !3546, !3547, !3548, !3549, !3550}
!3501 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3499, file: !54, line: 96, baseType: !115, size: 64)
!3502 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !3499, file: !54, line: 97, baseType: !3484, size: 64, offset: 64)
!3503 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3499, file: !54, line: 99, baseType: !605, size: 64, offset: 128)
!3504 = !DIDerivedType(tag: DW_TAG_member, name: "mod_name", scope: !3499, file: !54, line: 100, baseType: !115, size: 64, offset: 192)
!3505 = !DIDerivedType(tag: DW_TAG_member, name: "suppress_bind_attrs", scope: !3499, file: !54, line: 102, baseType: !457, size: 8, offset: 256)
!3506 = !DIDerivedType(tag: DW_TAG_member, name: "probe_type", scope: !3499, file: !54, line: 103, baseType: !53, size: 32, offset: 288)
!3507 = !DIDerivedType(tag: DW_TAG_member, name: "of_match_table", scope: !3499, file: !54, line: 105, baseType: !3508, size: 64, offset: 320)
!3508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3509, size: 64)
!3509 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3510)
!3510 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "of_device_id", file: !3511, line: 262, size: 1600, elements: !3512)
!3511 = !DIFile(filename: "./include/linux/mod_devicetable.h", directory: "/home/lizy2001/genbc/linux")
!3512 = !{!3513, !3514, !3515, !3519}
!3513 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3510, file: !3511, line: 263, baseType: !2578, size: 256)
!3514 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3510, file: !3511, line: 264, baseType: !2578, size: 256, offset: 256)
!3515 = !DIDerivedType(tag: DW_TAG_member, name: "compatible", scope: !3510, file: !3511, line: 265, baseType: !3516, size: 1024, offset: 512)
!3516 = !DICompositeType(tag: DW_TAG_array_type, baseType: !117, size: 1024, elements: !3517)
!3517 = !{!3518}
!3518 = !DISubrange(count: 128)
!3519 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3510, file: !3511, line: 266, baseType: !3270, size: 64, offset: 1536)
!3520 = !DIDerivedType(tag: DW_TAG_member, name: "acpi_match_table", scope: !3499, file: !54, line: 106, baseType: !3521, size: 64, offset: 384)
!3521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3522, size: 64)
!3522 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3523)
!3523 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_id", file: !3511, line: 210, size: 256, elements: !3524)
!3524 = !{!3525, !3529, !3531, !3532}
!3525 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3523, file: !3511, line: 211, baseType: !3526, size: 72)
!3526 = !DICompositeType(tag: DW_TAG_array_type, baseType: !169, size: 72, elements: !3527)
!3527 = !{!3528}
!3528 = !DISubrange(count: 9)
!3529 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !3523, file: !3511, line: 212, baseType: !3530, size: 64, offset: 128)
!3530 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_ulong_t", file: !3511, line: 14, baseType: !138)
!3531 = !DIDerivedType(tag: DW_TAG_member, name: "cls", scope: !3523, file: !3511, line: 213, baseType: !174, size: 32, offset: 192)
!3532 = !DIDerivedType(tag: DW_TAG_member, name: "cls_msk", scope: !3523, file: !3511, line: 214, baseType: !174, size: 32, offset: 224)
!3533 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !3499, file: !54, line: 108, baseType: !3458, size: 64, offset: 448)
!3534 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !3499, file: !54, line: 109, baseType: !3449, size: 64, offset: 512)
!3535 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !3499, file: !54, line: 110, baseType: !3458, size: 64, offset: 576)
!3536 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !3499, file: !54, line: 111, baseType: !3449, size: 64, offset: 640)
!3537 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3499, file: !54, line: 112, baseType: !3538, size: 64, offset: 704)
!3538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3539, size: 64)
!3539 = !DISubroutineType(types: !3540)
!3540 = !{!113, !3427, !3541}
!3541 = !DIDerivedType(tag: DW_TAG_typedef, name: "pm_message_t", file: !67, line: 52, baseType: !3542)
!3542 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_message", file: !67, line: 50, size: 32, elements: !3543)
!3543 = !{!3544}
!3544 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !3542, file: !67, line: 51, baseType: !113, size: 32)
!3545 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3499, file: !54, line: 113, baseType: !3458, size: 64, offset: 768)
!3546 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !3499, file: !54, line: 114, baseType: !3217, size: 64, offset: 832)
!3547 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !3499, file: !54, line: 115, baseType: !3217, size: 64, offset: 896)
!3548 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3499, file: !54, line: 117, baseType: !3453, size: 64, offset: 960)
!3549 = !DIDerivedType(tag: DW_TAG_member, name: "coredump", scope: !3499, file: !54, line: 118, baseType: !3449, size: 64, offset: 1024)
!3550 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3499, file: !54, line: 120, baseType: !3551, size: 64, offset: 1088)
!3551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3552, size: 64)
!3552 = !DICompositeType(tag: DW_TAG_structure_type, name: "driver_private", file: !54, line: 120, flags: DIFlagFwdDecl)
!3553 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !3485, file: !3486, line: 91, baseType: !3440, size: 64, offset: 448)
!3554 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !3485, file: !3486, line: 92, baseType: !3458, size: 64, offset: 512)
!3555 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !3485, file: !3486, line: 93, baseType: !3449, size: 64, offset: 576)
!3556 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !3485, file: !3486, line: 94, baseType: !3458, size: 64, offset: 640)
!3557 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !3485, file: !3486, line: 95, baseType: !3449, size: 64, offset: 704)
!3558 = !DIDerivedType(tag: DW_TAG_member, name: "online", scope: !3485, file: !3486, line: 97, baseType: !3458, size: 64, offset: 768)
!3559 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !3485, file: !3486, line: 98, baseType: !3458, size: 64, offset: 832)
!3560 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3485, file: !3486, line: 100, baseType: !3538, size: 64, offset: 896)
!3561 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3485, file: !3486, line: 101, baseType: !3458, size: 64, offset: 960)
!3562 = !DIDerivedType(tag: DW_TAG_member, name: "num_vf", scope: !3485, file: !3486, line: 103, baseType: !3458, size: 64, offset: 1024)
!3563 = !DIDerivedType(tag: DW_TAG_member, name: "dma_configure", scope: !3485, file: !3486, line: 105, baseType: !3458, size: 64, offset: 1088)
!3564 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3485, file: !3486, line: 107, baseType: !3453, size: 64, offset: 1152)
!3565 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_ops", scope: !3485, file: !3486, line: 109, baseType: !3566, size: 64, offset: 1216)
!3566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3567, size: 64)
!3567 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3568)
!3568 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_ops", file: !3486, line: 109, flags: DIFlagFwdDecl)
!3569 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3485, file: !3486, line: 111, baseType: !3570, size: 64, offset: 1280)
!3570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3571, size: 64)
!3571 = !DICompositeType(tag: DW_TAG_structure_type, name: "subsys_private", file: !3486, line: 111, flags: DIFlagFwdDecl)
!3572 = !DIDerivedType(tag: DW_TAG_member, name: "lock_key", scope: !3485, file: !3486, line: 112, baseType: !620, offset: 1344)
!3573 = !DIDerivedType(tag: DW_TAG_member, name: "need_parent_lock", scope: !3485, file: !3486, line: 114, baseType: !457, size: 8, offset: 1344)
!3574 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !3137, file: !60, line: 471, baseType: !3498, size: 64, offset: 832)
!3575 = !DIDerivedType(tag: DW_TAG_member, name: "platform_data", scope: !3137, file: !60, line: 473, baseType: !111, size: 64, offset: 896)
!3576 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !3137, file: !60, line: 475, baseType: !111, size: 64, offset: 960)
!3577 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !3137, file: !60, line: 480, baseType: !280, size: 192, offset: 1024)
!3578 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !3137, file: !60, line: 484, baseType: !3579, size: 576, offset: 1216)
!3579 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_links_info", file: !60, line: 361, size: 576, elements: !3580)
!3580 = !{!3581, !3582, !3583, !3584, !3585, !3586}
!3581 = !DIDerivedType(tag: DW_TAG_member, name: "suppliers", scope: !3579, file: !60, line: 362, baseType: !311, size: 128)
!3582 = !DIDerivedType(tag: DW_TAG_member, name: "consumers", scope: !3579, file: !60, line: 363, baseType: !311, size: 128, offset: 128)
!3583 = !DIDerivedType(tag: DW_TAG_member, name: "needs_suppliers", scope: !3579, file: !60, line: 364, baseType: !311, size: 128, offset: 256)
!3584 = !DIDerivedType(tag: DW_TAG_member, name: "defer_hook", scope: !3579, file: !60, line: 365, baseType: !311, size: 128, offset: 384)
!3585 = !DIDerivedType(tag: DW_TAG_member, name: "need_for_probe", scope: !3579, file: !60, line: 366, baseType: !457, size: 8, offset: 512)
!3586 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !3579, file: !60, line: 367, baseType: !59, size: 32, offset: 544)
!3587 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !3137, file: !60, line: 485, baseType: !3588, size: 2304, offset: 1792)
!3588 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_info", file: !67, line: 565, size: 2304, elements: !3589)
!3589 = !{!3590, !3591, !3592, !3593, !3594, !3595, !3596, !3597, !3598, !3599, !3600, !3601, !3602, !3603, !3604, !3605, !3632, !3633, !3634, !3635, !3636, !3637, !3638, !3639, !3640, !3641, !3642, !3643, !3644, !3645, !3646, !3647, !3648, !3649, !3650, !3651, !3652, !3653, !3654, !3655, !3656, !3657, !3658, !3659, !3660, !3661, !3662, !3663, !3664, !3674, !3678}
!3590 = !DIDerivedType(tag: DW_TAG_member, name: "power_state", scope: !3588, file: !67, line: 566, baseType: !3541, size: 32)
!3591 = !DIDerivedType(tag: DW_TAG_member, name: "can_wakeup", scope: !3588, file: !67, line: 567, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!3592 = !DIDerivedType(tag: DW_TAG_member, name: "async_suspend", scope: !3588, file: !67, line: 568, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 32)
!3593 = !DIDerivedType(tag: DW_TAG_member, name: "in_dpm_list", scope: !3588, file: !67, line: 569, baseType: !457, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 32)
!3594 = !DIDerivedType(tag: DW_TAG_member, name: "is_prepared", scope: !3588, file: !67, line: 570, baseType: !457, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 32)
!3595 = !DIDerivedType(tag: DW_TAG_member, name: "is_suspended", scope: !3588, file: !67, line: 571, baseType: !457, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 32)
!3596 = !DIDerivedType(tag: DW_TAG_member, name: "is_noirq_suspended", scope: !3588, file: !67, line: 572, baseType: !457, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 32)
!3597 = !DIDerivedType(tag: DW_TAG_member, name: "is_late_suspended", scope: !3588, file: !67, line: 573, baseType: !457, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 32)
!3598 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm", scope: !3588, file: !67, line: 574, baseType: !457, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 32)
!3599 = !DIDerivedType(tag: DW_TAG_member, name: "early_init", scope: !3588, file: !67, line: 575, baseType: !457, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!3600 = !DIDerivedType(tag: DW_TAG_member, name: "direct_complete", scope: !3588, file: !67, line: 576, baseType: !457, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 32)
!3601 = !DIDerivedType(tag: DW_TAG_member, name: "driver_flags", scope: !3588, file: !67, line: 577, baseType: !383, size: 32, offset: 64)
!3602 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3588, file: !67, line: 578, baseType: !295, offset: 96)
!3603 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3588, file: !67, line: 580, baseType: !311, size: 128, offset: 128)
!3604 = !DIDerivedType(tag: DW_TAG_member, name: "completion", scope: !3588, file: !67, line: 581, baseType: !1460, size: 192, offset: 256)
!3605 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup", scope: !3588, file: !67, line: 582, baseType: !3606, size: 64, offset: 448)
!3606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3607, size: 64)
!3607 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wakeup_source", file: !3608, line: 43, size: 1472, elements: !3609)
!3608 = !DIFile(filename: "./include/linux/pm_wakeup.h", directory: "/home/lizy2001/genbc/linux")
!3609 = !{!3610, !3611, !3612, !3613, !3614, !3617, !3618, !3619, !3620, !3621, !3622, !3623, !3624, !3625, !3626, !3627, !3628, !3629, !3630, !3631}
!3610 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3607, file: !3608, line: 44, baseType: !115, size: 64)
!3611 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3607, file: !3608, line: 45, baseType: !113, size: 32, offset: 64)
!3612 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3607, file: !3608, line: 46, baseType: !311, size: 128, offset: 128)
!3613 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3607, file: !3608, line: 47, baseType: !295, offset: 256)
!3614 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !3607, file: !3608, line: 48, baseType: !3615, size: 64, offset: 256)
!3615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3616, size: 64)
!3616 = !DICompositeType(tag: DW_TAG_structure_type, name: "wake_irq", file: !67, line: 533, flags: DIFlagFwdDecl)
!3617 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !3607, file: !3608, line: 49, baseType: !3067, size: 320, offset: 320)
!3618 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !3607, file: !3608, line: 50, baseType: !138, size: 64, offset: 640)
!3619 = !DIDerivedType(tag: DW_TAG_member, name: "total_time", scope: !3607, file: !3608, line: 51, baseType: !1257, size: 64, offset: 704)
!3620 = !DIDerivedType(tag: DW_TAG_member, name: "max_time", scope: !3607, file: !3608, line: 52, baseType: !1257, size: 64, offset: 768)
!3621 = !DIDerivedType(tag: DW_TAG_member, name: "last_time", scope: !3607, file: !3608, line: 53, baseType: !1257, size: 64, offset: 832)
!3622 = !DIDerivedType(tag: DW_TAG_member, name: "start_prevent_time", scope: !3607, file: !3608, line: 54, baseType: !1257, size: 64, offset: 896)
!3623 = !DIDerivedType(tag: DW_TAG_member, name: "prevent_sleep_time", scope: !3607, file: !3608, line: 55, baseType: !1257, size: 64, offset: 960)
!3624 = !DIDerivedType(tag: DW_TAG_member, name: "event_count", scope: !3607, file: !3608, line: 56, baseType: !138, size: 64, offset: 1024)
!3625 = !DIDerivedType(tag: DW_TAG_member, name: "active_count", scope: !3607, file: !3608, line: 57, baseType: !138, size: 64, offset: 1088)
!3626 = !DIDerivedType(tag: DW_TAG_member, name: "relax_count", scope: !3607, file: !3608, line: 58, baseType: !138, size: 64, offset: 1152)
!3627 = !DIDerivedType(tag: DW_TAG_member, name: "expire_count", scope: !3607, file: !3608, line: 59, baseType: !138, size: 64, offset: 1216)
!3628 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_count", scope: !3607, file: !3608, line: 60, baseType: !138, size: 64, offset: 1280)
!3629 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3607, file: !3608, line: 61, baseType: !3427, size: 64, offset: 1344)
!3630 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !3607, file: !3608, line: 62, baseType: !457, size: 1, offset: 1408, flags: DIFlagBitField, extraData: i64 1408)
!3631 = !DIDerivedType(tag: DW_TAG_member, name: "autosleep_enabled", scope: !3607, file: !3608, line: 63, baseType: !457, size: 1, offset: 1409, flags: DIFlagBitField, extraData: i64 1408)
!3632 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_path", scope: !3588, file: !67, line: 583, baseType: !457, size: 1, offset: 512, flags: DIFlagBitField, extraData: i64 512)
!3633 = !DIDerivedType(tag: DW_TAG_member, name: "syscore", scope: !3588, file: !67, line: 584, baseType: !457, size: 1, offset: 513, flags: DIFlagBitField, extraData: i64 512)
!3634 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm_callbacks", scope: !3588, file: !67, line: 585, baseType: !457, size: 1, offset: 514, flags: DIFlagBitField, extraData: i64 512)
!3635 = !DIDerivedType(tag: DW_TAG_member, name: "must_resume", scope: !3588, file: !67, line: 586, baseType: !7, size: 1, offset: 515, flags: DIFlagBitField, extraData: i64 512)
!3636 = !DIDerivedType(tag: DW_TAG_member, name: "may_skip_resume", scope: !3588, file: !67, line: 587, baseType: !7, size: 1, offset: 516, flags: DIFlagBitField, extraData: i64 512)
!3637 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_timer", scope: !3588, file: !67, line: 592, baseType: !1249, size: 512, offset: 576)
!3638 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !3588, file: !67, line: 593, baseType: !386, size: 64, offset: 1088)
!3639 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !3588, file: !67, line: 594, baseType: !1916, size: 256, offset: 1152)
!3640 = !DIDerivedType(tag: DW_TAG_member, name: "wait_queue", scope: !3588, file: !67, line: 595, baseType: !1439, size: 128, offset: 1408)
!3641 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !3588, file: !67, line: 596, baseType: !3615, size: 64, offset: 1536)
!3642 = !DIDerivedType(tag: DW_TAG_member, name: "usage_count", scope: !3588, file: !67, line: 597, baseType: !761, size: 32, offset: 1600)
!3643 = !DIDerivedType(tag: DW_TAG_member, name: "child_count", scope: !3588, file: !67, line: 598, baseType: !761, size: 32, offset: 1632)
!3644 = !DIDerivedType(tag: DW_TAG_member, name: "disable_depth", scope: !3588, file: !67, line: 599, baseType: !7, size: 3, offset: 1664, flags: DIFlagBitField, extraData: i64 1664)
!3645 = !DIDerivedType(tag: DW_TAG_member, name: "idle_notification", scope: !3588, file: !67, line: 600, baseType: !7, size: 1, offset: 1667, flags: DIFlagBitField, extraData: i64 1664)
!3646 = !DIDerivedType(tag: DW_TAG_member, name: "request_pending", scope: !3588, file: !67, line: 601, baseType: !7, size: 1, offset: 1668, flags: DIFlagBitField, extraData: i64 1664)
!3647 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_resume", scope: !3588, file: !67, line: 602, baseType: !7, size: 1, offset: 1669, flags: DIFlagBitField, extraData: i64 1664)
!3648 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_auto", scope: !3588, file: !67, line: 603, baseType: !7, size: 1, offset: 1670, flags: DIFlagBitField, extraData: i64 1664)
!3649 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_children", scope: !3588, file: !67, line: 604, baseType: !457, size: 1, offset: 1671, flags: DIFlagBitField, extraData: i64 1664)
!3650 = !DIDerivedType(tag: DW_TAG_member, name: "no_callbacks", scope: !3588, file: !67, line: 605, baseType: !7, size: 1, offset: 1672, flags: DIFlagBitField, extraData: i64 1664)
!3651 = !DIDerivedType(tag: DW_TAG_member, name: "irq_safe", scope: !3588, file: !67, line: 606, baseType: !7, size: 1, offset: 1673, flags: DIFlagBitField, extraData: i64 1664)
!3652 = !DIDerivedType(tag: DW_TAG_member, name: "use_autosuspend", scope: !3588, file: !67, line: 607, baseType: !7, size: 1, offset: 1674, flags: DIFlagBitField, extraData: i64 1664)
!3653 = !DIDerivedType(tag: DW_TAG_member, name: "timer_autosuspends", scope: !3588, file: !67, line: 608, baseType: !7, size: 1, offset: 1675, flags: DIFlagBitField, extraData: i64 1664)
!3654 = !DIDerivedType(tag: DW_TAG_member, name: "memalloc_noio", scope: !3588, file: !67, line: 609, baseType: !7, size: 1, offset: 1676, flags: DIFlagBitField, extraData: i64 1664)
!3655 = !DIDerivedType(tag: DW_TAG_member, name: "links_count", scope: !3588, file: !67, line: 610, baseType: !7, size: 32, offset: 1696)
!3656 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !3588, file: !67, line: 611, baseType: !66, size: 32, offset: 1728)
!3657 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_status", scope: !3588, file: !67, line: 612, baseType: !74, size: 32, offset: 1760)
!3658 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_error", scope: !3588, file: !67, line: 613, baseType: !113, size: 32, offset: 1792)
!3659 = !DIDerivedType(tag: DW_TAG_member, name: "autosuspend_delay", scope: !3588, file: !67, line: 614, baseType: !113, size: 32, offset: 1824)
!3660 = !DIDerivedType(tag: DW_TAG_member, name: "last_busy", scope: !3588, file: !67, line: 615, baseType: !386, size: 64, offset: 1856)
!3661 = !DIDerivedType(tag: DW_TAG_member, name: "active_time", scope: !3588, file: !67, line: 616, baseType: !386, size: 64, offset: 1920)
!3662 = !DIDerivedType(tag: DW_TAG_member, name: "suspended_time", scope: !3588, file: !67, line: 617, baseType: !386, size: 64, offset: 1984)
!3663 = !DIDerivedType(tag: DW_TAG_member, name: "accounting_timestamp", scope: !3588, file: !67, line: 618, baseType: !386, size: 64, offset: 2048)
!3664 = !DIDerivedType(tag: DW_TAG_member, name: "subsys_data", scope: !3588, file: !67, line: 620, baseType: !3665, size: 64, offset: 2112)
!3665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3666, size: 64)
!3666 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_subsys_data", file: !67, line: 536, size: 256, elements: !3667)
!3667 = !{!3668, !3669, !3670, !3671}
!3668 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3666, file: !67, line: 537, baseType: !295)
!3669 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !3666, file: !67, line: 538, baseType: !7, size: 32)
!3670 = !DIDerivedType(tag: DW_TAG_member, name: "clock_list", scope: !3666, file: !67, line: 540, baseType: !311, size: 128, offset: 64)
!3671 = !DIDerivedType(tag: DW_TAG_member, name: "domain_data", scope: !3666, file: !67, line: 543, baseType: !3672, size: 64, offset: 192)
!3672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3673, size: 64)
!3673 = !DICompositeType(tag: DW_TAG_structure_type, name: "pm_domain_data", file: !67, line: 534, flags: DIFlagFwdDecl)
!3674 = !DIDerivedType(tag: DW_TAG_member, name: "set_latency_tolerance", scope: !3588, file: !67, line: 621, baseType: !3675, size: 64, offset: 2176)
!3675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3676, size: 64)
!3676 = !DISubroutineType(types: !3677)
!3677 = !{null, !3427, !1397}
!3678 = !DIDerivedType(tag: DW_TAG_member, name: "qos", scope: !3588, file: !67, line: 622, baseType: !3679, size: 64, offset: 2240)
!3679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3680, size: 64)
!3680 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_qos", file: !67, line: 622, flags: DIFlagFwdDecl)
!3681 = !DIDerivedType(tag: DW_TAG_member, name: "pm_domain", scope: !3137, file: !60, line: 486, baseType: !3682, size: 64, offset: 4096)
!3682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3683, size: 64)
!3683 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_domain", file: !67, line: 642, size: 1792, elements: !3684)
!3684 = !{!3685, !3686, !3687, !3691, !3692, !3693}
!3685 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3683, file: !67, line: 643, baseType: !3455, size: 1472)
!3686 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3683, file: !67, line: 644, baseType: !3458, size: 64, offset: 1472)
!3687 = !DIDerivedType(tag: DW_TAG_member, name: "detach", scope: !3683, file: !67, line: 645, baseType: !3688, size: 64, offset: 1536)
!3688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3689, size: 64)
!3689 = !DISubroutineType(types: !3690)
!3690 = !{null, !3427, !457}
!3691 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !3683, file: !67, line: 646, baseType: !3458, size: 64, offset: 1600)
!3692 = !DIDerivedType(tag: DW_TAG_member, name: "sync", scope: !3683, file: !67, line: 647, baseType: !3449, size: 64, offset: 1664)
!3693 = !DIDerivedType(tag: DW_TAG_member, name: "dismiss", scope: !3683, file: !67, line: 648, baseType: !3449, size: 64, offset: 1728)
!3694 = !DIDerivedType(tag: DW_TAG_member, name: "msi_domain", scope: !3137, file: !60, line: 493, baseType: !3695, size: 64, offset: 4160)
!3695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3696, size: 64)
!3696 = !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain", file: !60, line: 493, flags: DIFlagFwdDecl)
!3697 = !DIDerivedType(tag: DW_TAG_member, name: "msi_list", scope: !3137, file: !60, line: 499, baseType: !311, size: 128, offset: 4224)
!3698 = !DIDerivedType(tag: DW_TAG_member, name: "dma_ops", scope: !3137, file: !60, line: 502, baseType: !3699, size: 64, offset: 4352)
!3699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3700, size: 64)
!3700 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3701)
!3701 = !DICompositeType(tag: DW_TAG_structure_type, name: "dma_map_ops", file: !60, line: 502, flags: DIFlagFwdDecl)
!3702 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !3137, file: !60, line: 504, baseType: !3703, size: 64, offset: 4416)
!3703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !386, size: 64)
!3704 = !DIDerivedType(tag: DW_TAG_member, name: "coherent_dma_mask", scope: !3137, file: !60, line: 505, baseType: !386, size: 64, offset: 4480)
!3705 = !DIDerivedType(tag: DW_TAG_member, name: "bus_dma_limit", scope: !3137, file: !60, line: 510, baseType: !386, size: 64, offset: 4544)
!3706 = !DIDerivedType(tag: DW_TAG_member, name: "dma_range_map", scope: !3137, file: !60, line: 511, baseType: !3707, size: 64, offset: 4608)
!3707 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3708, size: 64)
!3708 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3709)
!3709 = !DICompositeType(tag: DW_TAG_structure_type, name: "bus_dma_region", file: !60, line: 511, flags: DIFlagFwdDecl)
!3710 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !3137, file: !60, line: 513, baseType: !3711, size: 64, offset: 4672)
!3711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3712, size: 64)
!3712 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_dma_parameters", file: !60, line: 288, size: 128, elements: !3713)
!3713 = !{!3714, !3715}
!3714 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !3712, file: !60, line: 293, baseType: !7, size: 32)
!3715 = !DIDerivedType(tag: DW_TAG_member, name: "segment_boundary_mask", scope: !3712, file: !60, line: 294, baseType: !138, size: 64, offset: 64)
!3716 = !DIDerivedType(tag: DW_TAG_member, name: "dma_pools", scope: !3137, file: !60, line: 515, baseType: !311, size: 128, offset: 4736)
!3717 = !DIDerivedType(tag: DW_TAG_member, name: "archdata", scope: !3137, file: !60, line: 526, baseType: !3718, offset: 4864)
!3718 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_archdata", file: !3719, line: 5, elements: !309)
!3719 = !DIFile(filename: "./arch/x86/include/asm/device.h", directory: "/home/lizy2001/genbc/linux")
!3720 = !DIDerivedType(tag: DW_TAG_member, name: "of_node", scope: !3137, file: !60, line: 528, baseType: !3721, size: 64, offset: 4864)
!3721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3722, size: 64)
!3722 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_node", file: !3723, line: 14, flags: DIFlagFwdDecl)
!3723 = !DIFile(filename: "./include/linux/arch_topology.h", directory: "/home/lizy2001/genbc/linux")
!3724 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !3137, file: !60, line: 529, baseType: !3725, size: 64, offset: 4928)
!3725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3726, size: 64)
!3726 = !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_handle", file: !3486, line: 22, flags: DIFlagFwdDecl)
!3727 = !DIDerivedType(tag: DW_TAG_member, name: "devt", scope: !3137, file: !60, line: 534, baseType: !480, size: 32, offset: 4992)
!3728 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3137, file: !60, line: 535, baseType: !383, size: 32, offset: 5024)
!3729 = !DIDerivedType(tag: DW_TAG_member, name: "devres_lock", scope: !3137, file: !60, line: 537, baseType: !295, offset: 5056)
!3730 = !DIDerivedType(tag: DW_TAG_member, name: "devres_head", scope: !3137, file: !60, line: 538, baseType: !311, size: 128, offset: 5056)
!3731 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !3137, file: !60, line: 540, baseType: !3732, size: 64, offset: 5184)
!3732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3733, size: 64)
!3733 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "class", file: !3734, line: 54, size: 960, elements: !3735)
!3734 = !DIFile(filename: "./include/linux/device/class.h", directory: "/home/lizy2001/genbc/linux")
!3735 = !{!3736, !3737, !3738, !3739, !3740, !3741, !3742, !3746, !3750, !3751, !3752, !3753, !3757, !3761, !3762}
!3736 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3733, file: !3734, line: 55, baseType: !115, size: 64)
!3737 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3733, file: !3734, line: 56, baseType: !605, size: 64, offset: 64)
!3738 = !DIDerivedType(tag: DW_TAG_member, name: "class_groups", scope: !3733, file: !3734, line: 58, baseType: !3217, size: 64, offset: 128)
!3739 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !3733, file: !3734, line: 59, baseType: !3217, size: 64, offset: 192)
!3740 = !DIDerivedType(tag: DW_TAG_member, name: "dev_kobj", scope: !3733, file: !3734, line: 60, baseType: !3146, size: 64, offset: 256)
!3741 = !DIDerivedType(tag: DW_TAG_member, name: "dev_uevent", scope: !3733, file: !3734, line: 62, baseType: !3440, size: 64, offset: 320)
!3742 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !3733, file: !3734, line: 63, baseType: !3743, size: 64, offset: 384)
!3743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3744, size: 64)
!3744 = !DISubroutineType(types: !3745)
!3745 = !{!452, !3427, !3447}
!3746 = !DIDerivedType(tag: DW_TAG_member, name: "class_release", scope: !3733, file: !3734, line: 65, baseType: !3747, size: 64, offset: 448)
!3747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3748, size: 64)
!3748 = !DISubroutineType(types: !3749)
!3749 = !{null, !3732}
!3750 = !DIDerivedType(tag: DW_TAG_member, name: "dev_release", scope: !3733, file: !3734, line: 66, baseType: !3449, size: 64, offset: 512)
!3751 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown_pre", scope: !3733, file: !3734, line: 68, baseType: !3458, size: 64, offset: 576)
!3752 = !DIDerivedType(tag: DW_TAG_member, name: "ns_type", scope: !3733, file: !3734, line: 70, baseType: !3253, size: 64, offset: 640)
!3753 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !3733, file: !3734, line: 71, baseType: !3754, size: 64, offset: 704)
!3754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3755, size: 64)
!3755 = !DISubroutineType(types: !3756)
!3756 = !{!3270, !3427}
!3757 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !3733, file: !3734, line: 73, baseType: !3758, size: 64, offset: 768)
!3758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3759, size: 64)
!3759 = !DISubroutineType(types: !3760)
!3760 = !{null, !3427, !3287, !3288}
!3761 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3733, file: !3734, line: 75, baseType: !3453, size: 64, offset: 832)
!3762 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3733, file: !3734, line: 77, baseType: !3570, size: 64, offset: 896)
!3763 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !3137, file: !60, line: 541, baseType: !3217, size: 64, offset: 5248)
!3764 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3137, file: !60, line: 543, baseType: !3449, size: 64, offset: 5312)
!3765 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_group", scope: !3137, file: !60, line: 544, baseType: !3766, size: 64, offset: 5376)
!3766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3767, size: 64)
!3767 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_group", file: !60, line: 45, flags: DIFlagFwdDecl)
!3768 = !DIDerivedType(tag: DW_TAG_member, name: "iommu", scope: !3137, file: !60, line: 545, baseType: !3769, size: 64, offset: 5440)
!3769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3770, size: 64)
!3770 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_iommu", file: !60, line: 47, flags: DIFlagFwdDecl)
!3771 = !DIDerivedType(tag: DW_TAG_member, name: "offline_disabled", scope: !3137, file: !60, line: 547, baseType: !457, size: 1, offset: 5504, flags: DIFlagBitField, extraData: i64 5504)
!3772 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !3137, file: !60, line: 548, baseType: !457, size: 1, offset: 5505, flags: DIFlagBitField, extraData: i64 5504)
!3773 = !DIDerivedType(tag: DW_TAG_member, name: "of_node_reused", scope: !3137, file: !60, line: 549, baseType: !457, size: 1, offset: 5506, flags: DIFlagBitField, extraData: i64 5504)
!3774 = !DIDerivedType(tag: DW_TAG_member, name: "state_synced", scope: !3137, file: !60, line: 550, baseType: !457, size: 1, offset: 5507, flags: DIFlagBitField, extraData: i64 5504)
!3775 = !DIDerivedType(tag: DW_TAG_member, name: "h_list", scope: !120, file: !86, line: 194, baseType: !311, size: 128, offset: 9792)
!3776 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !120, file: !86, line: 195, baseType: !311, size: 128, offset: 9920)
!3777 = !DIDerivedType(tag: DW_TAG_member, name: "num_vals", scope: !120, file: !86, line: 197, baseType: !7, size: 32, offset: 10048)
!3778 = !DIDerivedType(tag: DW_TAG_member, name: "max_vals", scope: !120, file: !86, line: 198, baseType: !7, size: 32, offset: 10080)
!3779 = !DIDerivedType(tag: DW_TAG_member, name: "vals", scope: !120, file: !86, line: 199, baseType: !3780, size: 64, offset: 10112)
!3780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3781, size: 64)
!3781 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "input_value", file: !86, line: 32, size: 64, elements: !3782)
!3782 = !{!3783, !3784, !3785}
!3783 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3781, file: !86, line: 33, baseType: !130, size: 16)
!3784 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !3781, file: !86, line: 34, baseType: !130, size: 16, offset: 16)
!3785 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !3781, file: !86, line: 35, baseType: !1398, size: 32, offset: 32)
!3786 = !DIDerivedType(tag: DW_TAG_member, name: "devres_managed", scope: !120, file: !86, line: 201, baseType: !457, size: 8, offset: 10176)
!3787 = !DIDerivedType(tag: DW_TAG_member, name: "timestamp", scope: !120, file: !86, line: 203, baseType: !3788, size: 192, offset: 10240)
!3788 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1257, size: 192, elements: !626)
!3789 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !108, file: !86, line: 345, baseType: !3790, size: 64, offset: 256)
!3790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3791, size: 64)
!3791 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "input_handler", file: !86, line: 302, size: 960, elements: !3792)
!3792 = !{!3793, !3794, !3798, !3804, !3808, !3812, !3839, !3843, !3844, !3845, !3846, !3847, !3848, !3849}
!3793 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !3791, file: !86, line: 304, baseType: !111, size: 64)
!3794 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !3791, file: !86, line: 306, baseType: !3795, size: 64, offset: 64)
!3795 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3796, size: 64)
!3796 = !DISubroutineType(types: !3797)
!3797 = !{null, !107, !7, !7, !113}
!3798 = !DIDerivedType(tag: DW_TAG_member, name: "events", scope: !3791, file: !86, line: 307, baseType: !3799, size: 64, offset: 128)
!3799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3800, size: 64)
!3800 = !DISubroutineType(types: !3801)
!3801 = !{null, !107, !3802, !7}
!3802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3803, size: 64)
!3803 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3781)
!3804 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !3791, file: !86, line: 309, baseType: !3805, size: 64, offset: 192)
!3805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3806, size: 64)
!3806 = !DISubroutineType(types: !3807)
!3807 = !{!457, !107, !7, !7, !113}
!3808 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !3791, file: !86, line: 310, baseType: !3809, size: 64, offset: 256)
!3809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3810, size: 64)
!3810 = !DISubroutineType(types: !3811)
!3811 = !{!457, !3790, !119}
!3812 = !DIDerivedType(tag: DW_TAG_member, name: "connect", scope: !3791, file: !86, line: 311, baseType: !3813, size: 64, offset: 320)
!3813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3814, size: 64)
!3814 = !DISubroutineType(types: !3815)
!3815 = !{!113, !3790, !119, !3816}
!3816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3817, size: 64)
!3817 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3818)
!3818 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "input_device_id", file: !3511, line: 342, size: 1600, elements: !3819)
!3819 = !{!3820, !3821, !3822, !3823, !3824, !3825, !3827, !3829, !3830, !3831, !3832, !3833, !3834, !3836, !3837, !3838}
!3820 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3818, file: !3511, line: 344, baseType: !3530, size: 64)
!3821 = !DIDerivedType(tag: DW_TAG_member, name: "bustype", scope: !3818, file: !3511, line: 346, baseType: !130, size: 16, offset: 64)
!3822 = !DIDerivedType(tag: DW_TAG_member, name: "vendor", scope: !3818, file: !3511, line: 347, baseType: !130, size: 16, offset: 80)
!3823 = !DIDerivedType(tag: DW_TAG_member, name: "product", scope: !3818, file: !3511, line: 348, baseType: !130, size: 16, offset: 96)
!3824 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !3818, file: !3511, line: 349, baseType: !130, size: 16, offset: 112)
!3825 = !DIDerivedType(tag: DW_TAG_member, name: "evbit", scope: !3818, file: !3511, line: 351, baseType: !3826, size: 64, offset: 128)
!3826 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3530, size: 64, elements: !139)
!3827 = !DIDerivedType(tag: DW_TAG_member, name: "keybit", scope: !3818, file: !3511, line: 352, baseType: !3828, size: 768, offset: 192)
!3828 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3530, size: 768, elements: !144)
!3829 = !DIDerivedType(tag: DW_TAG_member, name: "relbit", scope: !3818, file: !3511, line: 353, baseType: !3826, size: 64, offset: 960)
!3830 = !DIDerivedType(tag: DW_TAG_member, name: "absbit", scope: !3818, file: !3511, line: 354, baseType: !3826, size: 64, offset: 1024)
!3831 = !DIDerivedType(tag: DW_TAG_member, name: "mscbit", scope: !3818, file: !3511, line: 355, baseType: !3826, size: 64, offset: 1088)
!3832 = !DIDerivedType(tag: DW_TAG_member, name: "ledbit", scope: !3818, file: !3511, line: 356, baseType: !3826, size: 64, offset: 1152)
!3833 = !DIDerivedType(tag: DW_TAG_member, name: "sndbit", scope: !3818, file: !3511, line: 357, baseType: !3826, size: 64, offset: 1216)
!3834 = !DIDerivedType(tag: DW_TAG_member, name: "ffbit", scope: !3818, file: !3511, line: 358, baseType: !3835, size: 128, offset: 1280)
!3835 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3530, size: 128, elements: !153)
!3836 = !DIDerivedType(tag: DW_TAG_member, name: "swbit", scope: !3818, file: !3511, line: 359, baseType: !3826, size: 64, offset: 1408)
!3837 = !DIDerivedType(tag: DW_TAG_member, name: "propbit", scope: !3818, file: !3511, line: 360, baseType: !3826, size: 64, offset: 1472)
!3838 = !DIDerivedType(tag: DW_TAG_member, name: "driver_info", scope: !3818, file: !3511, line: 362, baseType: !3530, size: 64, offset: 1536)
!3839 = !DIDerivedType(tag: DW_TAG_member, name: "disconnect", scope: !3791, file: !86, line: 312, baseType: !3840, size: 64, offset: 384)
!3840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3841, size: 64)
!3841 = !DISubroutineType(types: !3842)
!3842 = !{null, !107}
!3843 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3791, file: !86, line: 313, baseType: !3840, size: 64, offset: 448)
!3844 = !DIDerivedType(tag: DW_TAG_member, name: "legacy_minors", scope: !3791, file: !86, line: 315, baseType: !457, size: 8, offset: 512)
!3845 = !DIDerivedType(tag: DW_TAG_member, name: "minor", scope: !3791, file: !86, line: 316, baseType: !113, size: 32, offset: 544)
!3846 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3791, file: !86, line: 317, baseType: !115, size: 64, offset: 576)
!3847 = !DIDerivedType(tag: DW_TAG_member, name: "id_table", scope: !3791, file: !86, line: 319, baseType: !3816, size: 64, offset: 640)
!3848 = !DIDerivedType(tag: DW_TAG_member, name: "h_list", scope: !3791, file: !86, line: 321, baseType: !311, size: 128, offset: 704)
!3849 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3791, file: !86, line: 322, baseType: !311, size: 128, offset: 832)
!3850 = !DIDerivedType(tag: DW_TAG_member, name: "d_node", scope: !108, file: !86, line: 347, baseType: !311, size: 128, offset: 320)
!3851 = !DIDerivedType(tag: DW_TAG_member, name: "h_node", scope: !108, file: !86, line: 348, baseType: !311, size: 128, offset: 448)
!3852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3853, size: 64)
!3853 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3854)
!3854 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !107)
!3855 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !287, line: 37, baseType: !138)
!3856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3854, size: 64)
!3857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1309, size: 64)
!3858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !270, size: 64)
!3859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3860, size: 64)
!3860 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3861)
!3861 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !314)
!3862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1184, size: 64)
!3863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !138, size: 64)
!3864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3861, size: 64)
!3865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !314, size: 64)
!3866 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3867, size: 64)
!3867 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "input_seq_state", file: !3, line: 1097, size: 64, elements: !3868)
!3868 = !{!3869, !3874}
!3869 = !DIDerivedType(tag: DW_TAG_member, scope: !3867, file: !3, line: 1098, baseType: !3870, size: 32)
!3870 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3867, file: !3, line: 1098, size: 32, elements: !3871)
!3871 = !{!3872, !3873}
!3872 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !3870, file: !3, line: 1099, baseType: !132, size: 16)
!3873 = !DIDerivedType(tag: DW_TAG_member, name: "mutex_acquired", scope: !3870, file: !3, line: 1100, baseType: !457, size: 8, offset: 16)
!3874 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3867, file: !3, line: 1102, baseType: !111, size: 64)
!3875 = !{!0, !3876, !3881, !3886, !3891, !3893, !3898, !3900, !3902, !3907, !3909, !3911, !3916, !3918, !3921, !3935, !3937, !3939, !3941, !3943, !3945, !3948, !3950, !3952, !3954, !3956, !3958, !3963, !3965, !3967, !3969, !3971, !3973, !3975, !3977, !3979, !3981, !3983, !3985, !3987, !3989, !3991, !3993, !3998, !4003, !4008, !4024, !4026, !4028}
!3876 = !DIGlobalVariableExpression(var: !3877, expr: !DIExpression())
!3877 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_description211", scope: !2, file: !3, line: 30, type: !3878, isLocal: true, isDefinition: true, align: 8)
!3878 = !DICompositeType(tag: DW_TAG_array_type, baseType: !116, size: 272, elements: !3879)
!3879 = !{!3880}
!3880 = !DISubrange(count: 34)
!3881 = !DIGlobalVariableExpression(var: !3882, expr: !DIExpression())
!3882 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_file212", scope: !2, file: !3, line: 31, type: !3883, isLocal: true, isDefinition: true, align: 8)
!3883 = !DICompositeType(tag: DW_TAG_array_type, baseType: !116, size: 328, elements: !3884)
!3884 = !{!3885}
!3885 = !DISubrange(count: 41)
!3886 = !DIGlobalVariableExpression(var: !3887, expr: !DIExpression())
!3887 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_license213", scope: !2, file: !3, line: 31, type: !3888, isLocal: true, isDefinition: true, align: 8)
!3888 = !DICompositeType(tag: DW_TAG_array_type, baseType: !116, size: 184, elements: !3889)
!3889 = !{!3890}
!3890 = !DISubrange(count: 23)
!3891 = !DIGlobalVariableExpression(var: !3892, expr: !DIExpression())
!3892 = distinct !DIGlobalVariable(name: "input_class", scope: !2, file: !3, line: 1795, type: !3733, isLocal: false, isDefinition: true)
!3893 = !DIGlobalVariableExpression(var: !3894, expr: !DIExpression())
!3894 = distinct !DIGlobalVariable(name: "input_no", scope: !3895, file: !3, line: 1812, type: !761, isLocal: true, isDefinition: true)
!3895 = distinct !DISubprogram(name: "input_allocate_device", scope: !3, file: !3, line: 1810, type: !3896, scopeLine: 1811, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !309)
!3896 = !DISubroutineType(types: !3897)
!3897 = !{!119}
!3898 = !DIGlobalVariableExpression(var: !3899, expr: !DIExpression())
!3899 = distinct !DIGlobalVariable(name: "__key", scope: !3895, file: !3, line: 1820, type: !620, isLocal: true, isDefinition: true)
!3900 = !DIGlobalVariableExpression(var: !3901, expr: !DIExpression())
!3901 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_input_init319", scope: !2, file: !3, line: 2528, type: !111, isLocal: true, isDefinition: true)
!3902 = !DIGlobalVariableExpression(var: !3903, expr: !DIExpression())
!3903 = distinct !DIGlobalVariable(name: "__exitcall_input_exit", scope: !2, file: !3, line: 2529, type: !3904, isLocal: true, isDefinition: true)
!3904 = !DIDerivedType(tag: DW_TAG_typedef, name: "exitcall_t", file: !3905, line: 117, baseType: !3906)
!3905 = !DIFile(filename: "./include/linux/init.h", directory: "/home/lizy2001/genbc/linux")
!3906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1835, size: 64)
!3907 = !DIGlobalVariableExpression(var: !3908, expr: !DIExpression())
!3908 = distinct !DIGlobalVariable(name: "input_value_sync", scope: !2, file: !3, line: 48, type: !3803, isLocal: true, isDefinition: true)
!3909 = !DIGlobalVariableExpression(var: !3910, expr: !DIExpression())
!3910 = distinct !DIGlobalVariable(name: "input_dev_type", scope: !2, file: !3, line: 1781, type: !3434, isLocal: true, isDefinition: true)
!3911 = !DIGlobalVariableExpression(var: !3912, expr: !DIExpression())
!3912 = distinct !DIGlobalVariable(name: "input_dev_attr_groups", scope: !2, file: !3, line: 1530, type: !3913, isLocal: true, isDefinition: true)
!3913 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3218, size: 320, elements: !3914)
!3914 = !{!3915}
!3915 = !DISubrange(count: 5)
!3916 = !DIGlobalVariableExpression(var: !3917, expr: !DIExpression())
!3917 = distinct !DIGlobalVariable(name: "input_dev_attr_group", scope: !2, file: !3, line: 1428, type: !3219, isLocal: true, isDefinition: true)
!3918 = !DIGlobalVariableExpression(var: !3919, expr: !DIExpression())
!3919 = distinct !DIGlobalVariable(name: "input_dev_attrs", scope: !2, file: !3, line: 1419, type: !3920, isLocal: true, isDefinition: true)
!3920 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3205, size: 384, elements: !1581)
!3921 = !DIGlobalVariableExpression(var: !3922, expr: !DIExpression())
!3922 = distinct !DIGlobalVariable(name: "dev_attr_name", scope: !2, file: !3, line: 1340, type: !3923, isLocal: true, isDefinition: true)
!3923 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_attribute", file: !60, line: 99, size: 256, elements: !3924)
!3924 = !{!3925, !3926, !3931}
!3925 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !3923, file: !60, line: 100, baseType: !3206, size: 128)
!3926 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !3923, file: !60, line: 101, baseType: !3927, size: 64, offset: 128)
!3927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3928, size: 64)
!3928 = !DISubroutineType(types: !3929)
!3929 = !{!544, !3427, !3930, !452}
!3930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3923, size: 64)
!3931 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !3923, file: !60, line: 103, baseType: !3932, size: 64, offset: 192)
!3932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3933, size: 64)
!3933 = !DISubroutineType(types: !3934)
!3934 = !{!544, !3427, !3930, !115, !547}
!3935 = !DIGlobalVariableExpression(var: !3936, expr: !DIExpression())
!3936 = distinct !DIGlobalVariable(name: "dev_attr_phys", scope: !2, file: !3, line: 1341, type: !3923, isLocal: true, isDefinition: true)
!3937 = !DIGlobalVariableExpression(var: !3938, expr: !DIExpression())
!3938 = distinct !DIGlobalVariable(name: "dev_attr_uniq", scope: !2, file: !3, line: 1342, type: !3923, isLocal: true, isDefinition: true)
!3939 = !DIGlobalVariableExpression(var: !3940, expr: !DIExpression())
!3940 = distinct !DIGlobalVariable(name: "dev_attr_modalias", scope: !2, file: !3, line: 1403, type: !3923, isLocal: true, isDefinition: true)
!3941 = !DIGlobalVariableExpression(var: !3942, expr: !DIExpression())
!3942 = distinct !DIGlobalVariable(name: "dev_attr_properties", scope: !2, file: !3, line: 1417, type: !3923, isLocal: true, isDefinition: true)
!3943 = !DIGlobalVariableExpression(var: !3944, expr: !DIExpression())
!3944 = distinct !DIGlobalVariable(name: "input_dev_id_attr_group", scope: !2, file: !3, line: 1455, type: !3219, isLocal: true, isDefinition: true)
!3945 = !DIGlobalVariableExpression(var: !3946, expr: !DIExpression())
!3946 = distinct !DIGlobalVariable(name: "input_dev_id_attrs", scope: !2, file: !3, line: 1447, type: !3947, isLocal: true, isDefinition: true)
!3947 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3205, size: 320, elements: !3914)
!3948 = !DIGlobalVariableExpression(var: !3949, expr: !DIExpression())
!3949 = distinct !DIGlobalVariable(name: "dev_attr_bustype", scope: !2, file: !3, line: 1442, type: !3923, isLocal: true, isDefinition: true)
!3950 = !DIGlobalVariableExpression(var: !3951, expr: !DIExpression())
!3951 = distinct !DIGlobalVariable(name: "dev_attr_vendor", scope: !2, file: !3, line: 1443, type: !3923, isLocal: true, isDefinition: true)
!3952 = !DIGlobalVariableExpression(var: !3953, expr: !DIExpression())
!3953 = distinct !DIGlobalVariable(name: "dev_attr_product", scope: !2, file: !3, line: 1444, type: !3923, isLocal: true, isDefinition: true)
!3954 = !DIGlobalVariableExpression(var: !3955, expr: !DIExpression())
!3955 = distinct !DIGlobalVariable(name: "dev_attr_version", scope: !2, file: !3, line: 1445, type: !3923, isLocal: true, isDefinition: true)
!3956 = !DIGlobalVariableExpression(var: !3957, expr: !DIExpression())
!3957 = distinct !DIGlobalVariable(name: "input_dev_caps_attr_group", scope: !2, file: !3, line: 1525, type: !3219, isLocal: true, isDefinition: true)
!3958 = !DIGlobalVariableExpression(var: !3959, expr: !DIExpression())
!3959 = distinct !DIGlobalVariable(name: "input_dev_caps_attrs", scope: !2, file: !3, line: 1512, type: !3960, isLocal: true, isDefinition: true)
!3960 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3205, size: 640, elements: !3961)
!3961 = !{!3962}
!3962 = !DISubrange(count: 10)
!3963 = !DIGlobalVariableExpression(var: !3964, expr: !DIExpression())
!3964 = distinct !DIGlobalVariable(name: "dev_attr_ev", scope: !2, file: !3, line: 1502, type: !3923, isLocal: true, isDefinition: true)
!3965 = !DIGlobalVariableExpression(var: !3966, expr: !DIExpression())
!3966 = distinct !DIGlobalVariable(name: "dev_attr_key", scope: !2, file: !3, line: 1503, type: !3923, isLocal: true, isDefinition: true)
!3967 = !DIGlobalVariableExpression(var: !3968, expr: !DIExpression())
!3968 = distinct !DIGlobalVariable(name: "dev_attr_rel", scope: !2, file: !3, line: 1504, type: !3923, isLocal: true, isDefinition: true)
!3969 = !DIGlobalVariableExpression(var: !3970, expr: !DIExpression())
!3970 = distinct !DIGlobalVariable(name: "dev_attr_abs", scope: !2, file: !3, line: 1505, type: !3923, isLocal: true, isDefinition: true)
!3971 = !DIGlobalVariableExpression(var: !3972, expr: !DIExpression())
!3972 = distinct !DIGlobalVariable(name: "dev_attr_msc", scope: !2, file: !3, line: 1506, type: !3923, isLocal: true, isDefinition: true)
!3973 = !DIGlobalVariableExpression(var: !3974, expr: !DIExpression())
!3974 = distinct !DIGlobalVariable(name: "dev_attr_led", scope: !2, file: !3, line: 1507, type: !3923, isLocal: true, isDefinition: true)
!3975 = !DIGlobalVariableExpression(var: !3976, expr: !DIExpression())
!3976 = distinct !DIGlobalVariable(name: "dev_attr_snd", scope: !2, file: !3, line: 1508, type: !3923, isLocal: true, isDefinition: true)
!3977 = !DIGlobalVariableExpression(var: !3978, expr: !DIExpression())
!3978 = distinct !DIGlobalVariable(name: "dev_attr_ff", scope: !2, file: !3, line: 1509, type: !3923, isLocal: true, isDefinition: true)
!3979 = !DIGlobalVariableExpression(var: !3980, expr: !DIExpression())
!3980 = distinct !DIGlobalVariable(name: "dev_attr_sw", scope: !2, file: !3, line: 1510, type: !3923, isLocal: true, isDefinition: true)
!3981 = !DIGlobalVariableExpression(var: !3982, expr: !DIExpression())
!3982 = distinct !DIGlobalVariable(name: "input_dev_pm_ops", scope: !2, file: !3, line: 1772, type: !3454, isLocal: true, isDefinition: true)
!3983 = !DIGlobalVariableExpression(var: !3984, expr: !DIExpression())
!3984 = distinct !DIGlobalVariable(name: "input_mutex", scope: !2, file: !3, line: 46, type: !280, isLocal: true, isDefinition: true)
!3985 = !DIGlobalVariableExpression(var: !3986, expr: !DIExpression())
!3986 = distinct !DIGlobalVariable(name: "input_dev_list", scope: !2, file: !3, line: 37, type: !311, isLocal: true, isDefinition: true)
!3987 = !DIGlobalVariableExpression(var: !3988, expr: !DIExpression())
!3988 = distinct !DIGlobalVariable(name: "input_handler_list", scope: !2, file: !3, line: 38, type: !311, isLocal: true, isDefinition: true)
!3989 = !DIGlobalVariableExpression(var: !3990, expr: !DIExpression())
!3990 = distinct !DIGlobalVariable(name: "input_devices_state", scope: !2, file: !3, line: 1078, type: !113, isLocal: true, isDefinition: true)
!3991 = !DIGlobalVariableExpression(var: !3992, expr: !DIExpression())
!3992 = distinct !DIGlobalVariable(name: "input_devices_poll_wait", scope: !2, file: !3, line: 1077, type: !1441, isLocal: true, isDefinition: true)
!3993 = !DIGlobalVariableExpression(var: !3994, expr: !DIExpression())
!3994 = distinct !DIGlobalVariable(name: "input_ida", scope: !2, file: !3, line: 35, type: !3995, isLocal: true, isDefinition: true)
!3995 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ida", file: !3316, line: 244, size: 128, elements: !3996)
!3996 = !{!3997}
!3997 = !DIDerivedType(tag: DW_TAG_member, name: "xa", scope: !3995, file: !3316, line: 245, baseType: !752, size: 128)
!3998 = !DIGlobalVariableExpression(var: !3999, expr: !DIExpression())
!3999 = distinct !DIGlobalVariable(name: "proc_bus_input_dir", scope: !2, file: !3, line: 1076, type: !4000, isLocal: true, isDefinition: true)
!4000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4001, size: 64)
!4001 = !DICompositeType(tag: DW_TAG_structure_type, name: "proc_dir_entry", file: !4002, line: 12, flags: DIFlagFwdDecl)
!4002 = !DIFile(filename: "./include/linux/proc_fs.h", directory: "/home/lizy2001/genbc/linux")
!4003 = !DIGlobalVariableExpression(var: !4004, expr: !DIExpression())
!4004 = distinct !DIGlobalVariable(name: "__key", scope: !4005, file: !3, line: 2496, type: !620, isLocal: true, isDefinition: true)
!4005 = distinct !DISubprogram(name: "input_init", scope: !3, file: !3, line: 2492, type: !4006, scopeLine: 2493, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!4006 = !DISubroutineType(types: !4007)
!4007 = !{!113}
!4008 = !DIGlobalVariableExpression(var: !4009, expr: !DIExpression())
!4009 = distinct !DIGlobalVariable(name: "input_devices_proc_ops", scope: !2, file: !3, line: 1220, type: !4010, isLocal: true, isDefinition: true)
!4010 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4011)
!4011 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "proc_ops", file: !4002, line: 29, size: 704, elements: !4012)
!4012 = !{!4013, !4014, !4015, !4016, !4017, !4018, !4019, !4020, !4021, !4022, !4023}
!4013 = !DIDerivedType(tag: DW_TAG_member, name: "proc_flags", scope: !4011, file: !4002, line: 30, baseType: !7, size: 32)
!4014 = !DIDerivedType(tag: DW_TAG_member, name: "proc_open", scope: !4011, file: !4002, line: 31, baseType: !2806, size: 64, offset: 64)
!4015 = !DIDerivedType(tag: DW_TAG_member, name: "proc_read", scope: !4011, file: !4002, line: 32, baseType: !2751, size: 64, offset: 128)
!4016 = !DIDerivedType(tag: DW_TAG_member, name: "proc_read_iter", scope: !4011, file: !4002, line: 33, baseType: !851, size: 64, offset: 192)
!4017 = !DIDerivedType(tag: DW_TAG_member, name: "proc_write", scope: !4011, file: !4002, line: 34, baseType: !2755, size: 64, offset: 256)
!4018 = !DIDerivedType(tag: DW_TAG_member, name: "proc_lseek", scope: !4011, file: !4002, line: 35, baseType: !2747, size: 64, offset: 320)
!4019 = !DIDerivedType(tag: DW_TAG_member, name: "proc_release", scope: !4011, file: !4002, line: 36, baseType: !2806, size: 64, offset: 384)
!4020 = !DIDerivedType(tag: DW_TAG_member, name: "proc_poll", scope: !4011, file: !4002, line: 37, baseType: !2779, size: 64, offset: 448)
!4021 = !DIDerivedType(tag: DW_TAG_member, name: "proc_ioctl", scope: !4011, file: !4002, line: 38, baseType: !2796, size: 64, offset: 512)
!4022 = !DIDerivedType(tag: DW_TAG_member, name: "proc_mmap", scope: !4011, file: !4002, line: 42, baseType: !2801, size: 64, offset: 576)
!4023 = !DIDerivedType(tag: DW_TAG_member, name: "proc_get_unmapped_area", scope: !4011, file: !4002, line: 43, baseType: !1067, size: 64, offset: 640)
!4024 = !DIGlobalVariableExpression(var: !4025, expr: !DIExpression())
!4025 = distinct !DIGlobalVariable(name: "input_devices_seq_ops", scope: !2, file: !3, line: 1208, type: !702, isLocal: true, isDefinition: true)
!4026 = !DIGlobalVariableExpression(var: !4027, expr: !DIExpression())
!4027 = distinct !DIGlobalVariable(name: "input_handlers_proc_ops", scope: !2, file: !3, line: 1283, type: !4010, isLocal: true, isDefinition: true)
!4028 = !DIGlobalVariableExpression(var: !4029, expr: !DIExpression())
!4029 = distinct !DIGlobalVariable(name: "input_handlers_seq_ops", scope: !2, file: !3, line: 1271, type: !702, isLocal: true, isDefinition: true)
!4030 = !DICompositeType(tag: DW_TAG_array_type, baseType: !116, size: 408, elements: !4031)
!4031 = !{!4032}
!4032 = !DISubrange(count: 51)
!4033 = !{!"rsp"}
!4034 = !{i32 7, !"Dwarf Version", i32 4}
!4035 = !{i32 2, !"Debug Info Version", i32 3}
!4036 = !{i32 1, !"wchar_size", i32 2}
!4037 = !{i32 1, !"Code Model", i32 2}
!4038 = !{!"clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)"}
!4039 = distinct !DISubprogram(name: "input_event", scope: !3, file: !3, line: 433, type: !4040, scopeLine: 435, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !309)
!4040 = !DISubroutineType(types: !4041)
!4041 = !{null, !119, !7, !7, !113}
!4042 = !DILocalVariable(name: "lock", arg: 1, scope: !4043, file: !4044, line: 407, type: !4047)
!4043 = distinct !DISubprogram(name: "spin_unlock_irqrestore", scope: !4044, file: !4044, line: 407, type: !4045, scopeLine: 408, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!4044 = !DIFile(filename: "./include/linux/spinlock.h", directory: "/home/lizy2001/genbc/linux")
!4045 = !DISubroutineType(types: !4046)
!4046 = !{null, !4047, !138}
!4047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !295, size: 64)
!4048 = !DILocation(line: 407, column: 64, scope: !4043, inlinedAt: !4049)
!4049 = distinct !DILocation(line: 442, column: 3, scope: !4050)
!4050 = distinct !DILexicalBlock(scope: !4051, file: !3, line: 438, column: 52)
!4051 = distinct !DILexicalBlock(scope: !4039, file: !3, line: 438, column: 6)
!4052 = !DILocalVariable(name: "flags", arg: 2, scope: !4043, file: !4044, line: 407, type: !138)
!4053 = !DILocation(line: 407, column: 84, scope: !4043, inlinedAt: !4049)
!4054 = !DILocalVariable(name: "lock", arg: 1, scope: !4055, file: !4044, line: 327, type: !4047)
!4055 = distinct !DISubprogram(name: "spinlock_check", scope: !4044, file: !4044, line: 327, type: !4056, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!4056 = !DISubroutineType(types: !4057)
!4057 = !{!4058, !4047}
!4058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !787, size: 64)
!4059 = !DILocation(line: 327, column: 67, scope: !4055, inlinedAt: !4060)
!4060 = distinct !DILocation(line: 440, column: 3, scope: !4061)
!4061 = distinct !DILexicalBlock(scope: !4062, file: !3, line: 440, column: 3)
!4062 = distinct !DILexicalBlock(scope: !4063, file: !3, line: 440, column: 3)
!4063 = distinct !DILexicalBlock(scope: !4064, file: !3, line: 440, column: 3)
!4064 = distinct !DILexicalBlock(scope: !4065, file: !3, line: 440, column: 3)
!4065 = distinct !DILexicalBlock(scope: !4050, file: !3, line: 440, column: 3)
!4066 = !DILocalVariable(name: "dev", arg: 1, scope: !4039, file: !3, line: 433, type: !119)
!4067 = !DILocation(line: 433, column: 36, scope: !4039)
!4068 = !DILocalVariable(name: "type", arg: 2, scope: !4039, file: !3, line: 434, type: !7)
!4069 = !DILocation(line: 434, column: 17, scope: !4039)
!4070 = !DILocalVariable(name: "code", arg: 3, scope: !4039, file: !3, line: 434, type: !7)
!4071 = !DILocation(line: 434, column: 36, scope: !4039)
!4072 = !DILocalVariable(name: "value", arg: 4, scope: !4039, file: !3, line: 434, type: !113)
!4073 = !DILocation(line: 434, column: 46, scope: !4039)
!4074 = !DILocalVariable(name: "flags", scope: !4039, file: !3, line: 436, type: !138)
!4075 = !DILocation(line: 436, column: 16, scope: !4039)
!4076 = !DILocation(line: 438, column: 25, scope: !4051)
!4077 = !DILocation(line: 438, column: 31, scope: !4051)
!4078 = !DILocation(line: 438, column: 36, scope: !4051)
!4079 = !DILocation(line: 438, column: 6, scope: !4051)
!4080 = !DILocation(line: 438, column: 6, scope: !4039)
!4081 = !DILocation(line: 440, column: 3, scope: !4050)
!4082 = !DILocation(line: 440, column: 3, scope: !4065)
!4083 = !DILocalVariable(name: "__dummy", scope: !4084, file: !3, line: 440, type: !138)
!4084 = distinct !DILexicalBlock(scope: !4064, file: !3, line: 440, column: 3)
!4085 = !DILocation(line: 440, column: 3, scope: !4084)
!4086 = !DILocalVariable(name: "__dummy2", scope: !4084, file: !3, line: 440, type: !138)
!4087 = !DILocation(line: 440, column: 3, scope: !4064)
!4088 = !DILocation(line: 440, column: 3, scope: !4063)
!4089 = !DILocation(line: 440, column: 3, scope: !4090)
!4090 = distinct !DILexicalBlock(scope: !4063, file: !3, line: 440, column: 3)
!4091 = !DILocalVariable(name: "__dummy", scope: !4092, file: !3, line: 440, type: !138)
!4092 = distinct !DILexicalBlock(scope: !4093, file: !3, line: 440, column: 3)
!4093 = distinct !DILexicalBlock(scope: !4090, file: !3, line: 440, column: 3)
!4094 = !DILocation(line: 440, column: 3, scope: !4092)
!4095 = !DILocalVariable(name: "__dummy2", scope: !4092, file: !3, line: 440, type: !138)
!4096 = !DILocation(line: 440, column: 3, scope: !4093)
!4097 = !DILocation(line: 440, column: 3, scope: !4062)
!4098 = !{i32 -2142461398}
!4099 = !DILocation(line: 440, column: 3, scope: !4061)
!4100 = !DILocation(line: 329, column: 10, scope: !4055, inlinedAt: !4060)
!4101 = !DILocation(line: 329, column: 16, scope: !4055, inlinedAt: !4060)
!4102 = !DILocation(line: 441, column: 22, scope: !4050)
!4103 = !DILocation(line: 441, column: 27, scope: !4050)
!4104 = !DILocation(line: 441, column: 33, scope: !4050)
!4105 = !DILocation(line: 441, column: 39, scope: !4050)
!4106 = !DILocation(line: 441, column: 3, scope: !4050)
!4107 = !DILocation(line: 442, column: 27, scope: !4050)
!4108 = !DILocation(line: 442, column: 32, scope: !4050)
!4109 = !DILocation(line: 442, column: 44, scope: !4050)
!4110 = !DILocalVariable(name: "__dummy", scope: !4111, file: !4044, line: 409, type: !138)
!4111 = distinct !DILexicalBlock(scope: !4112, file: !4044, line: 409, column: 2)
!4112 = distinct !DILexicalBlock(scope: !4043, file: !4044, line: 409, column: 2)
!4113 = !DILocation(line: 409, column: 2, scope: !4111, inlinedAt: !4049)
!4114 = !DILocalVariable(name: "__dummy2", scope: !4111, file: !4044, line: 409, type: !138)
!4115 = !DILocalVariable(name: "__dummy", scope: !4116, file: !4044, line: 409, type: !138)
!4116 = distinct !DILexicalBlock(scope: !4117, file: !4044, line: 409, column: 2)
!4117 = distinct !DILexicalBlock(scope: !4118, file: !4044, line: 409, column: 2)
!4118 = distinct !DILexicalBlock(scope: !4119, file: !4044, line: 409, column: 2)
!4119 = distinct !DILexicalBlock(scope: !4112, file: !4044, line: 409, column: 2)
!4120 = !DILocation(line: 409, column: 2, scope: !4116, inlinedAt: !4049)
!4121 = !DILocalVariable(name: "__dummy2", scope: !4116, file: !4044, line: 409, type: !138)
!4122 = !DILocation(line: 409, column: 2, scope: !4117, inlinedAt: !4049)
!4123 = !DILocation(line: 409, column: 2, scope: !4124, inlinedAt: !4049)
!4124 = distinct !DILexicalBlock(scope: !4119, file: !4044, line: 409, column: 2)
!4125 = !{i32 -2145475979}
!4126 = !DILocation(line: 409, column: 2, scope: !4127, inlinedAt: !4049)
!4127 = distinct !DILexicalBlock(scope: !4124, file: !4044, line: 409, column: 2)
!4128 = !DILocation(line: 443, column: 2, scope: !4050)
!4129 = !DILocation(line: 444, column: 1, scope: !4039)
!4130 = distinct !DISubprogram(name: "is_event_supported", scope: !3, file: !3, line: 50, type: !4131, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!4131 = !DISubroutineType(types: !4132)
!4132 = !{!113, !7, !3863, !7}
!4133 = !DILocalVariable(name: "code", arg: 1, scope: !4130, file: !3, line: 50, type: !7)
!4134 = !DILocation(line: 50, column: 51, scope: !4130)
!4135 = !DILocalVariable(name: "bm", arg: 2, scope: !4130, file: !3, line: 51, type: !3863)
!4136 = !DILocation(line: 51, column: 25, scope: !4130)
!4137 = !DILocalVariable(name: "max", arg: 3, scope: !4130, file: !3, line: 51, type: !7)
!4138 = !DILocation(line: 51, column: 42, scope: !4130)
!4139 = !DILocation(line: 53, column: 9, scope: !4130)
!4140 = !DILocation(line: 53, column: 17, scope: !4130)
!4141 = !DILocation(line: 53, column: 14, scope: !4130)
!4142 = !DILocation(line: 53, column: 21, scope: !4130)
!4143 = !DILocation(line: 53, column: 33, scope: !4130)
!4144 = !DILocation(line: 53, column: 39, scope: !4130)
!4145 = !DILocation(line: 53, column: 24, scope: !4130)
!4146 = !DILocation(line: 0, scope: !4130)
!4147 = !DILocation(line: 53, column: 2, scope: !4130)
!4148 = distinct !DISubprogram(name: "arch_local_irq_save", scope: !4149, file: !4149, line: 666, type: !4150, scopeLine: 667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!4149 = !DIFile(filename: "./arch/x86/include/asm/paravirt.h", directory: "/home/lizy2001/genbc/linux")
!4150 = !DISubroutineType(types: !4151)
!4151 = !{!138}
!4152 = !DILocalVariable(name: "f", scope: !4148, file: !4149, line: 668, type: !138)
!4153 = !DILocation(line: 668, column: 16, scope: !4148)
!4154 = !DILocation(line: 670, column: 6, scope: !4148)
!4155 = !DILocation(line: 670, column: 4, scope: !4148)
!4156 = !DILocation(line: 671, column: 2, scope: !4148)
!4157 = !DILocation(line: 672, column: 9, scope: !4148)
!4158 = !DILocation(line: 672, column: 2, scope: !4148)
!4159 = distinct !DISubprogram(name: "input_handle_event", scope: !3, file: !3, line: 367, type: !4040, scopeLine: 369, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!4160 = !DILocalVariable(name: "dev", arg: 1, scope: !4159, file: !3, line: 367, type: !119)
!4161 = !DILocation(line: 367, column: 50, scope: !4159)
!4162 = !DILocalVariable(name: "type", arg: 2, scope: !4159, file: !3, line: 368, type: !7)
!4163 = !DILocation(line: 368, column: 24, scope: !4159)
!4164 = !DILocalVariable(name: "code", arg: 3, scope: !4159, file: !3, line: 368, type: !7)
!4165 = !DILocation(line: 368, column: 43, scope: !4159)
!4166 = !DILocalVariable(name: "value", arg: 4, scope: !4159, file: !3, line: 368, type: !113)
!4167 = !DILocation(line: 368, column: 53, scope: !4159)
!4168 = !DILocalVariable(name: "disposition", scope: !4159, file: !3, line: 370, type: !113)
!4169 = !DILocation(line: 370, column: 6, scope: !4159)
!4170 = !DILocation(line: 370, column: 42, scope: !4159)
!4171 = !DILocation(line: 370, column: 47, scope: !4159)
!4172 = !DILocation(line: 370, column: 53, scope: !4159)
!4173 = !DILocation(line: 370, column: 20, scope: !4159)
!4174 = !DILocation(line: 372, column: 6, scope: !4175)
!4175 = distinct !DILexicalBlock(scope: !4159, file: !3, line: 372, column: 6)
!4176 = !DILocation(line: 372, column: 18, scope: !4175)
!4177 = !DILocation(line: 372, column: 40, scope: !4175)
!4178 = !DILocation(line: 372, column: 43, scope: !4175)
!4179 = !DILocation(line: 372, column: 48, scope: !4175)
!4180 = !DILocation(line: 372, column: 6, scope: !4159)
!4181 = !DILocation(line: 373, column: 24, scope: !4175)
!4182 = !DILocation(line: 373, column: 30, scope: !4175)
!4183 = !DILocation(line: 373, column: 36, scope: !4175)
!4184 = !DILocation(line: 373, column: 3, scope: !4175)
!4185 = !DILocation(line: 375, column: 7, scope: !4186)
!4186 = distinct !DILexicalBlock(scope: !4159, file: !3, line: 375, column: 6)
!4187 = !DILocation(line: 375, column: 19, scope: !4186)
!4188 = !DILocation(line: 375, column: 43, scope: !4186)
!4189 = !DILocation(line: 375, column: 46, scope: !4186)
!4190 = !DILocation(line: 375, column: 51, scope: !4186)
!4191 = !DILocation(line: 375, column: 6, scope: !4159)
!4192 = !DILocation(line: 376, column: 3, scope: !4186)
!4193 = !DILocation(line: 376, column: 8, scope: !4186)
!4194 = !DILocation(line: 376, column: 14, scope: !4186)
!4195 = !DILocation(line: 376, column: 19, scope: !4186)
!4196 = !DILocation(line: 376, column: 25, scope: !4186)
!4197 = !DILocation(line: 376, column: 31, scope: !4186)
!4198 = !DILocation(line: 378, column: 7, scope: !4199)
!4199 = distinct !DILexicalBlock(scope: !4159, file: !3, line: 378, column: 6)
!4200 = !DILocation(line: 378, column: 12, scope: !4199)
!4201 = !DILocation(line: 378, column: 6, scope: !4159)
!4202 = !DILocation(line: 379, column: 3, scope: !4199)
!4203 = !DILocation(line: 381, column: 6, scope: !4204)
!4204 = distinct !DILexicalBlock(scope: !4159, file: !3, line: 381, column: 6)
!4205 = !DILocation(line: 381, column: 18, scope: !4204)
!4206 = !DILocation(line: 381, column: 6, scope: !4159)
!4207 = !DILocalVariable(name: "v", scope: !4208, file: !3, line: 382, type: !3780)
!4208 = distinct !DILexicalBlock(scope: !4204, file: !3, line: 381, column: 44)
!4209 = !DILocation(line: 382, column: 23, scope: !4208)
!4210 = !DILocation(line: 384, column: 7, scope: !4211)
!4211 = distinct !DILexicalBlock(scope: !4208, file: !3, line: 384, column: 7)
!4212 = !DILocation(line: 384, column: 19, scope: !4211)
!4213 = !DILocation(line: 384, column: 7, scope: !4208)
!4214 = !DILocation(line: 385, column: 9, scope: !4215)
!4215 = distinct !DILexicalBlock(scope: !4211, file: !3, line: 384, column: 33)
!4216 = !DILocation(line: 385, column: 14, scope: !4215)
!4217 = !DILocation(line: 385, column: 19, scope: !4215)
!4218 = !DILocation(line: 385, column: 24, scope: !4215)
!4219 = !DILocation(line: 385, column: 32, scope: !4215)
!4220 = !DILocation(line: 385, column: 6, scope: !4215)
!4221 = !DILocation(line: 386, column: 4, scope: !4215)
!4222 = !DILocation(line: 386, column: 7, scope: !4215)
!4223 = !DILocation(line: 386, column: 12, scope: !4215)
!4224 = !DILocation(line: 387, column: 4, scope: !4215)
!4225 = !DILocation(line: 387, column: 7, scope: !4215)
!4226 = !DILocation(line: 387, column: 12, scope: !4215)
!4227 = !DILocation(line: 388, column: 15, scope: !4215)
!4228 = !DILocation(line: 388, column: 20, scope: !4215)
!4229 = !DILocation(line: 388, column: 24, scope: !4215)
!4230 = !DILocation(line: 388, column: 4, scope: !4215)
!4231 = !DILocation(line: 388, column: 7, scope: !4215)
!4232 = !DILocation(line: 388, column: 13, scope: !4215)
!4233 = !DILocation(line: 389, column: 3, scope: !4215)
!4234 = !DILocation(line: 391, column: 8, scope: !4208)
!4235 = !DILocation(line: 391, column: 13, scope: !4208)
!4236 = !DILocation(line: 391, column: 18, scope: !4208)
!4237 = !DILocation(line: 391, column: 23, scope: !4208)
!4238 = !DILocation(line: 391, column: 31, scope: !4208)
!4239 = !DILocation(line: 391, column: 5, scope: !4208)
!4240 = !DILocation(line: 392, column: 13, scope: !4208)
!4241 = !DILocation(line: 392, column: 3, scope: !4208)
!4242 = !DILocation(line: 392, column: 6, scope: !4208)
!4243 = !DILocation(line: 392, column: 11, scope: !4208)
!4244 = !DILocation(line: 393, column: 13, scope: !4208)
!4245 = !DILocation(line: 393, column: 3, scope: !4208)
!4246 = !DILocation(line: 393, column: 6, scope: !4208)
!4247 = !DILocation(line: 393, column: 11, scope: !4208)
!4248 = !DILocation(line: 394, column: 14, scope: !4208)
!4249 = !DILocation(line: 394, column: 3, scope: !4208)
!4250 = !DILocation(line: 394, column: 6, scope: !4208)
!4251 = !DILocation(line: 394, column: 12, scope: !4208)
!4252 = !DILocation(line: 395, column: 2, scope: !4208)
!4253 = !DILocation(line: 397, column: 6, scope: !4254)
!4254 = distinct !DILexicalBlock(scope: !4159, file: !3, line: 397, column: 6)
!4255 = !DILocation(line: 397, column: 18, scope: !4254)
!4256 = !DILocation(line: 397, column: 6, scope: !4159)
!4257 = !DILocation(line: 398, column: 7, scope: !4258)
!4258 = distinct !DILexicalBlock(scope: !4259, file: !3, line: 398, column: 7)
!4259 = distinct !DILexicalBlock(scope: !4254, file: !3, line: 397, column: 33)
!4260 = !DILocation(line: 398, column: 12, scope: !4258)
!4261 = !DILocation(line: 398, column: 21, scope: !4258)
!4262 = !DILocation(line: 398, column: 7, scope: !4259)
!4263 = !DILocation(line: 399, column: 22, scope: !4258)
!4264 = !DILocation(line: 399, column: 27, scope: !4258)
!4265 = !DILocation(line: 399, column: 32, scope: !4258)
!4266 = !DILocation(line: 399, column: 38, scope: !4258)
!4267 = !DILocation(line: 399, column: 43, scope: !4258)
!4268 = !DILocation(line: 399, column: 4, scope: !4258)
!4269 = !DILocation(line: 400, column: 3, scope: !4259)
!4270 = !DILocation(line: 400, column: 8, scope: !4259)
!4271 = !DILocation(line: 400, column: 17, scope: !4259)
!4272 = !DILocation(line: 407, column: 36, scope: !4259)
!4273 = !DILocation(line: 407, column: 3, scope: !4259)
!4274 = !DILocation(line: 407, column: 8, scope: !4259)
!4275 = !DILocation(line: 407, column: 34, scope: !4259)
!4276 = !DILocation(line: 408, column: 2, scope: !4259)
!4277 = !DILocation(line: 408, column: 13, scope: !4278)
!4278 = distinct !DILexicalBlock(scope: !4254, file: !3, line: 408, column: 13)
!4279 = !DILocation(line: 408, column: 18, scope: !4278)
!4280 = !DILocation(line: 408, column: 30, scope: !4278)
!4281 = !DILocation(line: 408, column: 35, scope: !4278)
!4282 = !DILocation(line: 408, column: 44, scope: !4278)
!4283 = !DILocation(line: 408, column: 27, scope: !4278)
!4284 = !DILocation(line: 408, column: 13, scope: !4254)
!4285 = !DILocation(line: 409, column: 3, scope: !4286)
!4286 = distinct !DILexicalBlock(scope: !4278, file: !3, line: 408, column: 49)
!4287 = !DILocation(line: 409, column: 8, scope: !4286)
!4288 = !DILocation(line: 409, column: 13, scope: !4286)
!4289 = !DILocation(line: 409, column: 18, scope: !4286)
!4290 = !DILocation(line: 409, column: 26, scope: !4286)
!4291 = !DILocation(line: 409, column: 32, scope: !4286)
!4292 = !DILocation(line: 410, column: 21, scope: !4286)
!4293 = !DILocation(line: 410, column: 26, scope: !4286)
!4294 = !DILocation(line: 410, column: 31, scope: !4286)
!4295 = !DILocation(line: 410, column: 37, scope: !4286)
!4296 = !DILocation(line: 410, column: 42, scope: !4286)
!4297 = !DILocation(line: 410, column: 3, scope: !4286)
!4298 = !DILocation(line: 411, column: 3, scope: !4286)
!4299 = !DILocation(line: 411, column: 8, scope: !4286)
!4300 = !DILocation(line: 411, column: 17, scope: !4286)
!4301 = !DILocation(line: 412, column: 2, scope: !4286)
!4302 = !DILocation(line: 414, column: 1, scope: !4159)
!4303 = distinct !DISubprogram(name: "input_inject_event", scope: !3, file: !3, line: 458, type: !3796, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !309)
!4304 = !DILocation(line: 407, column: 64, scope: !4043, inlinedAt: !4305)
!4305 = distinct !DILocation(line: 474, column: 3, scope: !4306)
!4306 = distinct !DILexicalBlock(scope: !4307, file: !3, line: 465, column: 52)
!4307 = distinct !DILexicalBlock(scope: !4303, file: !3, line: 465, column: 6)
!4308 = !DILocation(line: 407, column: 84, scope: !4043, inlinedAt: !4305)
!4309 = !DILocation(line: 327, column: 67, scope: !4055, inlinedAt: !4310)
!4310 = distinct !DILocation(line: 466, column: 3, scope: !4311)
!4311 = distinct !DILexicalBlock(scope: !4312, file: !3, line: 466, column: 3)
!4312 = distinct !DILexicalBlock(scope: !4313, file: !3, line: 466, column: 3)
!4313 = distinct !DILexicalBlock(scope: !4314, file: !3, line: 466, column: 3)
!4314 = distinct !DILexicalBlock(scope: !4315, file: !3, line: 466, column: 3)
!4315 = distinct !DILexicalBlock(scope: !4306, file: !3, line: 466, column: 3)
!4316 = !DILocalVariable(name: "handle", arg: 1, scope: !4303, file: !3, line: 458, type: !107)
!4317 = !DILocation(line: 458, column: 46, scope: !4303)
!4318 = !DILocalVariable(name: "type", arg: 2, scope: !4303, file: !3, line: 459, type: !7)
!4319 = !DILocation(line: 459, column: 17, scope: !4303)
!4320 = !DILocalVariable(name: "code", arg: 3, scope: !4303, file: !3, line: 459, type: !7)
!4321 = !DILocation(line: 459, column: 36, scope: !4303)
!4322 = !DILocalVariable(name: "value", arg: 4, scope: !4303, file: !3, line: 459, type: !113)
!4323 = !DILocation(line: 459, column: 46, scope: !4303)
!4324 = !DILocalVariable(name: "dev", scope: !4303, file: !3, line: 461, type: !119)
!4325 = !DILocation(line: 461, column: 20, scope: !4303)
!4326 = !DILocation(line: 461, column: 26, scope: !4303)
!4327 = !DILocation(line: 461, column: 34, scope: !4303)
!4328 = !DILocalVariable(name: "grab", scope: !4303, file: !3, line: 462, type: !107)
!4329 = !DILocation(line: 462, column: 23, scope: !4303)
!4330 = !DILocalVariable(name: "flags", scope: !4303, file: !3, line: 463, type: !138)
!4331 = !DILocation(line: 463, column: 16, scope: !4303)
!4332 = !DILocation(line: 465, column: 25, scope: !4307)
!4333 = !DILocation(line: 465, column: 31, scope: !4307)
!4334 = !DILocation(line: 465, column: 36, scope: !4307)
!4335 = !DILocation(line: 465, column: 6, scope: !4307)
!4336 = !DILocation(line: 465, column: 6, scope: !4303)
!4337 = !DILocation(line: 466, column: 3, scope: !4306)
!4338 = !DILocation(line: 466, column: 3, scope: !4315)
!4339 = !DILocalVariable(name: "__dummy", scope: !4340, file: !3, line: 466, type: !138)
!4340 = distinct !DILexicalBlock(scope: !4314, file: !3, line: 466, column: 3)
!4341 = !DILocation(line: 466, column: 3, scope: !4340)
!4342 = !DILocalVariable(name: "__dummy2", scope: !4340, file: !3, line: 466, type: !138)
!4343 = !DILocation(line: 466, column: 3, scope: !4314)
!4344 = !DILocation(line: 466, column: 3, scope: !4313)
!4345 = !DILocation(line: 466, column: 3, scope: !4346)
!4346 = distinct !DILexicalBlock(scope: !4313, file: !3, line: 466, column: 3)
!4347 = !DILocalVariable(name: "__dummy", scope: !4348, file: !3, line: 466, type: !138)
!4348 = distinct !DILexicalBlock(scope: !4349, file: !3, line: 466, column: 3)
!4349 = distinct !DILexicalBlock(scope: !4346, file: !3, line: 466, column: 3)
!4350 = !DILocation(line: 466, column: 3, scope: !4348)
!4351 = !DILocalVariable(name: "__dummy2", scope: !4348, file: !3, line: 466, type: !138)
!4352 = !DILocation(line: 466, column: 3, scope: !4349)
!4353 = !DILocation(line: 466, column: 3, scope: !4312)
!4354 = !{i32 -2142460258}
!4355 = !DILocation(line: 466, column: 3, scope: !4311)
!4356 = !DILocation(line: 329, column: 10, scope: !4055, inlinedAt: !4310)
!4357 = !DILocation(line: 329, column: 16, scope: !4055, inlinedAt: !4310)
!4358 = !DILocation(line: 639, column: 2, scope: !4359, inlinedAt: !4361)
!4359 = distinct !DISubprogram(name: "rcu_read_lock", scope: !4360, file: !4360, line: 637, type: !1835, scopeLine: 638, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!4360 = !DIFile(filename: "./include/linux/rcupdate.h", directory: "/home/lizy2001/genbc/linux")
!4361 = distinct !DILocation(line: 468, column: 3, scope: !4306)
!4362 = !DILocalVariable(name: "________p1", scope: !4363, file: !3, line: 469, type: !107)
!4363 = distinct !DILexicalBlock(scope: !4306, file: !3, line: 469, column: 10)
!4364 = !DILocation(line: 469, column: 10, scope: !4363)
!4365 = !DILocation(line: 469, column: 10, scope: !4366)
!4366 = distinct !DILexicalBlock(scope: !4363, file: !3, line: 469, column: 10)
!4367 = !DILocation(line: 469, column: 10, scope: !4368)
!4368 = distinct !DILexicalBlock(scope: !4366, file: !3, line: 469, column: 10)
!4369 = !DILocation(line: 469, column: 10, scope: !4370)
!4370 = distinct !DILexicalBlock(scope: !4363, file: !3, line: 469, column: 10)
!4371 = !DILocation(line: 469, column: 8, scope: !4306)
!4372 = !DILocation(line: 470, column: 8, scope: !4373)
!4373 = distinct !DILexicalBlock(scope: !4306, file: !3, line: 470, column: 7)
!4374 = !DILocation(line: 470, column: 13, scope: !4373)
!4375 = !DILocation(line: 470, column: 16, scope: !4373)
!4376 = !DILocation(line: 470, column: 24, scope: !4373)
!4377 = !DILocation(line: 470, column: 21, scope: !4373)
!4378 = !DILocation(line: 470, column: 7, scope: !4306)
!4379 = !DILocation(line: 471, column: 23, scope: !4373)
!4380 = !DILocation(line: 471, column: 28, scope: !4373)
!4381 = !DILocation(line: 471, column: 34, scope: !4373)
!4382 = !DILocation(line: 471, column: 40, scope: !4373)
!4383 = !DILocation(line: 471, column: 4, scope: !4373)
!4384 = !DILocation(line: 472, column: 3, scope: !4306)
!4385 = !DILocation(line: 474, column: 27, scope: !4306)
!4386 = !DILocation(line: 474, column: 32, scope: !4306)
!4387 = !DILocation(line: 474, column: 44, scope: !4306)
!4388 = !DILocation(line: 409, column: 2, scope: !4111, inlinedAt: !4305)
!4389 = !DILocation(line: 409, column: 2, scope: !4116, inlinedAt: !4305)
!4390 = !DILocation(line: 409, column: 2, scope: !4117, inlinedAt: !4305)
!4391 = !DILocation(line: 409, column: 2, scope: !4124, inlinedAt: !4305)
!4392 = !DILocation(line: 409, column: 2, scope: !4127, inlinedAt: !4305)
!4393 = !DILocation(line: 475, column: 2, scope: !4306)
!4394 = !DILocation(line: 476, column: 1, scope: !4303)
!4395 = distinct !DISubprogram(name: "rcu_read_unlock", scope: !4360, file: !4360, line: 689, type: !1835, scopeLine: 690, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!4396 = !DILocation(line: 691, column: 2, scope: !4395)
!4397 = !DILocation(line: 691, column: 2, scope: !4398)
!4398 = distinct !DILexicalBlock(scope: !4395, file: !4360, line: 691, column: 2)
!4399 = !DILocation(line: 694, column: 2, scope: !4395)
!4400 = !DILocation(line: 695, column: 2, scope: !4395)
!4401 = !DILocation(line: 695, column: 2, scope: !4402)
!4402 = distinct !DILexicalBlock(scope: !4395, file: !4360, line: 695, column: 2)
!4403 = !DILocation(line: 696, column: 1, scope: !4395)
!4404 = distinct !DISubprogram(name: "input_alloc_absinfo", scope: !3, file: !3, line: 486, type: !3121, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !309)
!4405 = !DILocalVariable(name: "dev", arg: 1, scope: !4404, file: !3, line: 486, type: !119)
!4406 = !DILocation(line: 486, column: 44, scope: !4404)
!4407 = !DILocation(line: 488, column: 6, scope: !4408)
!4408 = distinct !DILexicalBlock(scope: !4404, file: !3, line: 488, column: 6)
!4409 = !DILocation(line: 488, column: 11, scope: !4408)
!4410 = !DILocation(line: 488, column: 6, scope: !4404)
!4411 = !DILocation(line: 489, column: 3, scope: !4408)
!4412 = !DILocation(line: 491, column: 17, scope: !4404)
!4413 = !DILocation(line: 491, column: 2, scope: !4404)
!4414 = !DILocation(line: 491, column: 7, scope: !4404)
!4415 = !DILocation(line: 491, column: 15, scope: !4404)
!4416 = !DILocation(line: 492, column: 7, scope: !4417)
!4417 = distinct !DILexicalBlock(scope: !4404, file: !3, line: 492, column: 6)
!4418 = !DILocation(line: 492, column: 12, scope: !4417)
!4419 = !DILocation(line: 492, column: 6, scope: !4404)
!4420 = !DILocation(line: 493, column: 3, scope: !4421)
!4421 = distinct !DILexicalBlock(scope: !4417, file: !3, line: 492, column: 21)
!4422 = !DILocation(line: 500, column: 2, scope: !4421)
!4423 = !DILocation(line: 501, column: 1, scope: !4404)
!4424 = distinct !DISubprogram(name: "kcalloc", scope: !100, file: !100, line: 601, type: !4425, scopeLine: 602, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!4425 = !DISubroutineType(types: !4426)
!4426 = !{!111, !547, !547, !757}
!4427 = !DILocalVariable(name: "n", arg: 1, scope: !4424, file: !100, line: 601, type: !547)
!4428 = !DILocation(line: 601, column: 36, scope: !4424)
!4429 = !DILocalVariable(name: "size", arg: 2, scope: !4424, file: !100, line: 601, type: !547)
!4430 = !DILocation(line: 601, column: 46, scope: !4424)
!4431 = !DILocalVariable(name: "flags", arg: 3, scope: !4424, file: !100, line: 601, type: !757)
!4432 = !DILocation(line: 601, column: 58, scope: !4424)
!4433 = !DILocation(line: 603, column: 23, scope: !4424)
!4434 = !DILocation(line: 603, column: 26, scope: !4424)
!4435 = !DILocation(line: 603, column: 32, scope: !4424)
!4436 = !DILocation(line: 603, column: 38, scope: !4424)
!4437 = !DILocation(line: 603, column: 9, scope: !4424)
!4438 = !DILocation(line: 603, column: 2, scope: !4424)
!4439 = distinct !DISubprogram(name: "input_set_abs_params", scope: !3, file: !3, line: 504, type: !4440, scopeLine: 506, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !309)
!4440 = !DISubroutineType(types: !4441)
!4441 = !{null, !119, !7, !113, !113, !113, !113}
!4442 = !DILocalVariable(name: "dev", arg: 1, scope: !4439, file: !3, line: 504, type: !119)
!4443 = !DILocation(line: 504, column: 45, scope: !4439)
!4444 = !DILocalVariable(name: "axis", arg: 2, scope: !4439, file: !3, line: 504, type: !7)
!4445 = !DILocation(line: 504, column: 63, scope: !4439)
!4446 = !DILocalVariable(name: "min", arg: 3, scope: !4439, file: !3, line: 505, type: !113)
!4447 = !DILocation(line: 505, column: 10, scope: !4439)
!4448 = !DILocalVariable(name: "max", arg: 4, scope: !4439, file: !3, line: 505, type: !113)
!4449 = !DILocation(line: 505, column: 19, scope: !4439)
!4450 = !DILocalVariable(name: "fuzz", arg: 5, scope: !4439, file: !3, line: 505, type: !113)
!4451 = !DILocation(line: 505, column: 28, scope: !4439)
!4452 = !DILocalVariable(name: "flat", arg: 6, scope: !4439, file: !3, line: 505, type: !113)
!4453 = !DILocation(line: 505, column: 38, scope: !4439)
!4454 = !DILocalVariable(name: "absinfo", scope: !4439, file: !3, line: 507, type: !3102)
!4455 = !DILocation(line: 507, column: 24, scope: !4439)
!4456 = !DILocation(line: 509, column: 22, scope: !4439)
!4457 = !DILocation(line: 509, column: 2, scope: !4439)
!4458 = !DILocation(line: 510, column: 7, scope: !4459)
!4459 = distinct !DILexicalBlock(scope: !4439, file: !3, line: 510, column: 6)
!4460 = !DILocation(line: 510, column: 12, scope: !4459)
!4461 = !DILocation(line: 510, column: 6, scope: !4439)
!4462 = !DILocation(line: 511, column: 3, scope: !4459)
!4463 = !DILocation(line: 513, column: 13, scope: !4439)
!4464 = !DILocation(line: 513, column: 18, scope: !4439)
!4465 = !DILocation(line: 513, column: 26, scope: !4439)
!4466 = !DILocation(line: 513, column: 10, scope: !4439)
!4467 = !DILocation(line: 514, column: 21, scope: !4439)
!4468 = !DILocation(line: 514, column: 2, scope: !4439)
!4469 = !DILocation(line: 514, column: 11, scope: !4439)
!4470 = !DILocation(line: 514, column: 19, scope: !4439)
!4471 = !DILocation(line: 515, column: 21, scope: !4439)
!4472 = !DILocation(line: 515, column: 2, scope: !4439)
!4473 = !DILocation(line: 515, column: 11, scope: !4439)
!4474 = !DILocation(line: 515, column: 19, scope: !4439)
!4475 = !DILocation(line: 516, column: 18, scope: !4439)
!4476 = !DILocation(line: 516, column: 2, scope: !4439)
!4477 = !DILocation(line: 516, column: 11, scope: !4439)
!4478 = !DILocation(line: 516, column: 16, scope: !4439)
!4479 = !DILocation(line: 517, column: 18, scope: !4439)
!4480 = !DILocation(line: 517, column: 2, scope: !4439)
!4481 = !DILocation(line: 517, column: 11, scope: !4439)
!4482 = !DILocation(line: 517, column: 16, scope: !4439)
!4483 = !DILocation(line: 519, column: 20, scope: !4439)
!4484 = !DILocation(line: 519, column: 25, scope: !4439)
!4485 = !DILocation(line: 519, column: 2, scope: !4439)
!4486 = !DILocation(line: 520, column: 12, scope: !4439)
!4487 = !DILocation(line: 520, column: 18, scope: !4439)
!4488 = !DILocation(line: 520, column: 23, scope: !4439)
!4489 = !DILocation(line: 520, column: 2, scope: !4439)
!4490 = !DILocation(line: 521, column: 1, scope: !4439)
!4491 = distinct !DISubprogram(name: "__set_bit", scope: !4492, file: !4492, line: 25, type: !4493, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!4492 = !DIFile(filename: "./include/asm-generic/bitops/instrumented-non-atomic.h", directory: "/home/lizy2001/genbc/linux")
!4493 = !DISubroutineType(types: !4494)
!4494 = !{null, !507, !4495}
!4495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4496, size: 64)
!4496 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !138)
!4497 = !DILocalVariable(name: "nr", arg: 1, scope: !4498, file: !4499, line: 66, type: !507)
!4498 = distinct !DISubprogram(name: "arch___set_bit", scope: !4499, file: !4499, line: 66, type: !4493, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!4499 = !DIFile(filename: "./arch/x86/include/asm/bitops.h", directory: "/home/lizy2001/genbc/linux")
!4500 = !DILocation(line: 66, column: 21, scope: !4498, inlinedAt: !4501)
!4501 = distinct !DILocation(line: 28, column: 2, scope: !4491)
!4502 = !DILocalVariable(name: "addr", arg: 2, scope: !4498, file: !4499, line: 66, type: !4495)
!4503 = !DILocation(line: 66, column: 49, scope: !4498, inlinedAt: !4501)
!4504 = !DILocalVariable(name: "v", arg: 1, scope: !4505, file: !4506, line: 39, type: !4509)
!4505 = distinct !DISubprogram(name: "instrument_write", scope: !4506, file: !4506, line: 39, type: !4507, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!4506 = !DIFile(filename: "./include/linux/instrumented.h", directory: "/home/lizy2001/genbc/linux")
!4507 = !DISubroutineType(types: !4508)
!4508 = !{null, !4509, !547}
!4509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4510, size: 64)
!4510 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4511)
!4511 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: null)
!4512 = !DILocation(line: 39, column: 67, scope: !4505, inlinedAt: !4513)
!4513 = distinct !DILocation(line: 27, column: 2, scope: !4491)
!4514 = !DILocalVariable(name: "size", arg: 2, scope: !4505, file: !4506, line: 39, type: !547)
!4515 = !DILocation(line: 39, column: 77, scope: !4505, inlinedAt: !4513)
!4516 = !DILocalVariable(name: "nr", arg: 1, scope: !4491, file: !4492, line: 25, type: !507)
!4517 = !DILocation(line: 25, column: 35, scope: !4491)
!4518 = !DILocalVariable(name: "addr", arg: 2, scope: !4491, file: !4492, line: 25, type: !4495)
!4519 = !DILocation(line: 25, column: 63, scope: !4491)
!4520 = !DILocation(line: 27, column: 19, scope: !4491)
!4521 = !DILocation(line: 27, column: 26, scope: !4491)
!4522 = !DILocation(line: 27, column: 24, scope: !4491)
!4523 = !DILocation(line: 41, column: 20, scope: !4505, inlinedAt: !4513)
!4524 = !DILocation(line: 41, column: 23, scope: !4505, inlinedAt: !4513)
!4525 = !DILocation(line: 41, column: 2, scope: !4505, inlinedAt: !4513)
!4526 = !DILocation(line: 42, column: 2, scope: !4505, inlinedAt: !4513)
!4527 = !DILocation(line: 28, column: 17, scope: !4491)
!4528 = !DILocation(line: 28, column: 21, scope: !4491)
!4529 = !DILocation(line: 68, column: 44, scope: !4498, inlinedAt: !4501)
!4530 = !DILocation(line: 68, column: 56, scope: !4498, inlinedAt: !4501)
!4531 = !DILocation(line: 68, column: 2, scope: !4498, inlinedAt: !4501)
!4532 = !{i32 -2147164772}
!4533 = !DILocation(line: 29, column: 1, scope: !4491)
!4534 = distinct !DISubprogram(name: "input_grab_device", scope: !3, file: !3, line: 533, type: !4535, scopeLine: 534, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !309)
!4535 = !DISubroutineType(types: !4536)
!4536 = !{!113, !107}
!4537 = !DILocalVariable(name: "handle", arg: 1, scope: !4534, file: !3, line: 533, type: !107)
!4538 = !DILocation(line: 533, column: 44, scope: !4534)
!4539 = !DILocalVariable(name: "dev", scope: !4534, file: !3, line: 535, type: !119)
!4540 = !DILocation(line: 535, column: 20, scope: !4534)
!4541 = !DILocation(line: 535, column: 26, scope: !4534)
!4542 = !DILocation(line: 535, column: 34, scope: !4534)
!4543 = !DILocalVariable(name: "retval", scope: !4534, file: !3, line: 536, type: !113)
!4544 = !DILocation(line: 536, column: 6, scope: !4534)
!4545 = !DILocation(line: 538, column: 37, scope: !4534)
!4546 = !DILocation(line: 538, column: 42, scope: !4534)
!4547 = !DILocation(line: 538, column: 11, scope: !4534)
!4548 = !DILocation(line: 538, column: 9, scope: !4534)
!4549 = !DILocation(line: 539, column: 6, scope: !4550)
!4550 = distinct !DILexicalBlock(scope: !4534, file: !3, line: 539, column: 6)
!4551 = !DILocation(line: 539, column: 6, scope: !4534)
!4552 = !DILocation(line: 540, column: 10, scope: !4550)
!4553 = !DILocation(line: 540, column: 3, scope: !4550)
!4554 = !DILocation(line: 542, column: 6, scope: !4555)
!4555 = distinct !DILexicalBlock(scope: !4534, file: !3, line: 542, column: 6)
!4556 = !DILocation(line: 542, column: 11, scope: !4555)
!4557 = !DILocation(line: 542, column: 6, scope: !4534)
!4558 = !DILocation(line: 543, column: 10, scope: !4559)
!4559 = distinct !DILexicalBlock(scope: !4555, file: !3, line: 542, column: 17)
!4560 = !DILocation(line: 544, column: 3, scope: !4559)
!4561 = !DILocation(line: 547, column: 2, scope: !4534)
!4562 = !DILocalVariable(name: "_r_a_p__v", scope: !4563, file: !3, line: 547, type: !3855)
!4563 = distinct !DILexicalBlock(scope: !4534, file: !3, line: 547, column: 2)
!4564 = !DILocation(line: 547, column: 2, scope: !4563)
!4565 = !DILocation(line: 547, column: 2, scope: !4566)
!4566 = distinct !DILexicalBlock(scope: !4563, file: !3, line: 547, column: 2)
!4567 = !DILocation(line: 547, column: 2, scope: !4568)
!4568 = distinct !DILexicalBlock(scope: !4566, file: !3, line: 547, column: 2)
!4569 = !DILocation(line: 547, column: 2, scope: !4570)
!4570 = distinct !DILexicalBlock(scope: !4568, file: !3, line: 547, column: 2)
!4571 = !DILocation(line: 547, column: 2, scope: !4572)
!4572 = distinct !DILexicalBlock(scope: !4568, file: !3, line: 547, column: 2)
!4573 = !DILocation(line: 547, column: 2, scope: !4574)
!4574 = distinct !DILexicalBlock(scope: !4566, file: !3, line: 547, column: 2)
!4575 = !DILocation(line: 547, column: 2, scope: !4576)
!4576 = distinct !DILexicalBlock(scope: !4574, file: !3, line: 547, column: 2)
!4577 = !{i32 -2142453907}
!4578 = !DILocation(line: 547, column: 2, scope: !4579)
!4579 = distinct !DILexicalBlock(scope: !4574, file: !3, line: 547, column: 2)
!4580 = !DILocation(line: 547, column: 2, scope: !4581)
!4581 = distinct !DILexicalBlock(scope: !4579, file: !3, line: 547, column: 2)
!4582 = !DILocation(line: 547, column: 2, scope: !4583)
!4583 = distinct !DILexicalBlock(scope: !4579, file: !3, line: 547, column: 2)
!4584 = !DILabel(scope: !4534, name: "out", file: !3, line: 549)
!4585 = !DILocation(line: 549, column: 2, scope: !4534)
!4586 = !DILocation(line: 550, column: 16, scope: !4534)
!4587 = !DILocation(line: 550, column: 21, scope: !4534)
!4588 = !DILocation(line: 550, column: 2, scope: !4534)
!4589 = !DILocation(line: 551, column: 9, scope: !4534)
!4590 = !DILocation(line: 551, column: 2, scope: !4534)
!4591 = !DILocation(line: 552, column: 1, scope: !4534)
!4592 = distinct !DISubprogram(name: "input_release_device", scope: !3, file: !3, line: 582, type: !3841, scopeLine: 583, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !309)
!4593 = !DILocalVariable(name: "handle", arg: 1, scope: !4592, file: !3, line: 582, type: !107)
!4594 = !DILocation(line: 582, column: 48, scope: !4592)
!4595 = !DILocalVariable(name: "dev", scope: !4592, file: !3, line: 584, type: !119)
!4596 = !DILocation(line: 584, column: 20, scope: !4592)
!4597 = !DILocation(line: 584, column: 26, scope: !4592)
!4598 = !DILocation(line: 584, column: 34, scope: !4592)
!4599 = !DILocation(line: 586, column: 14, scope: !4592)
!4600 = !DILocation(line: 586, column: 19, scope: !4592)
!4601 = !DILocation(line: 586, column: 2, scope: !4592)
!4602 = !DILocation(line: 587, column: 25, scope: !4592)
!4603 = !DILocation(line: 587, column: 2, scope: !4592)
!4604 = !DILocation(line: 588, column: 16, scope: !4592)
!4605 = !DILocation(line: 588, column: 21, scope: !4592)
!4606 = !DILocation(line: 588, column: 2, scope: !4592)
!4607 = !DILocation(line: 589, column: 1, scope: !4592)
!4608 = distinct !DISubprogram(name: "__input_release_device", scope: !3, file: !3, line: 555, type: !3841, scopeLine: 556, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!4609 = !DILocalVariable(name: "handle", arg: 1, scope: !4608, file: !3, line: 555, type: !107)
!4610 = !DILocation(line: 555, column: 57, scope: !4608)
!4611 = !DILocalVariable(name: "dev", scope: !4608, file: !3, line: 557, type: !119)
!4612 = !DILocation(line: 557, column: 20, scope: !4608)
!4613 = !DILocation(line: 557, column: 26, scope: !4608)
!4614 = !DILocation(line: 557, column: 34, scope: !4608)
!4615 = !DILocalVariable(name: "grabber", scope: !4608, file: !3, line: 558, type: !107)
!4616 = !DILocation(line: 558, column: 23, scope: !4608)
!4617 = !DILocation(line: 560, column: 12, scope: !4618)
!4618 = distinct !DILexicalBlock(scope: !4608, file: !3, line: 560, column: 12)
!4619 = !DILocation(line: 560, column: 12, scope: !4620)
!4620 = distinct !DILexicalBlock(scope: !4618, file: !3, line: 560, column: 12)
!4621 = !DILocation(line: 560, column: 10, scope: !4608)
!4622 = !DILocation(line: 562, column: 6, scope: !4623)
!4623 = distinct !DILexicalBlock(scope: !4608, file: !3, line: 562, column: 6)
!4624 = !DILocation(line: 562, column: 17, scope: !4623)
!4625 = !DILocation(line: 562, column: 14, scope: !4623)
!4626 = !DILocation(line: 562, column: 6, scope: !4608)
!4627 = !DILocation(line: 563, column: 3, scope: !4628)
!4628 = distinct !DILexicalBlock(scope: !4623, file: !3, line: 562, column: 25)
!4629 = !DILocalVariable(name: "_r_a_p__v", scope: !4630, file: !3, line: 563, type: !3855)
!4630 = distinct !DILexicalBlock(scope: !4628, file: !3, line: 563, column: 3)
!4631 = !DILocation(line: 563, column: 3, scope: !4630)
!4632 = !DILocation(line: 563, column: 3, scope: !4633)
!4633 = distinct !DILexicalBlock(scope: !4630, file: !3, line: 563, column: 3)
!4634 = !DILocation(line: 563, column: 3, scope: !4635)
!4635 = distinct !DILexicalBlock(scope: !4633, file: !3, line: 563, column: 3)
!4636 = !DILocation(line: 563, column: 3, scope: !4637)
!4637 = distinct !DILexicalBlock(scope: !4635, file: !3, line: 563, column: 3)
!4638 = !DILocation(line: 563, column: 3, scope: !4639)
!4639 = distinct !DILexicalBlock(scope: !4635, file: !3, line: 563, column: 3)
!4640 = !DILocation(line: 563, column: 3, scope: !4641)
!4641 = distinct !DILexicalBlock(scope: !4633, file: !3, line: 563, column: 3)
!4642 = !DILocation(line: 563, column: 3, scope: !4643)
!4643 = distinct !DILexicalBlock(scope: !4641, file: !3, line: 563, column: 3)
!4644 = !{i32 -2142448928}
!4645 = !DILocation(line: 563, column: 3, scope: !4646)
!4646 = distinct !DILexicalBlock(scope: !4641, file: !3, line: 563, column: 3)
!4647 = !DILocation(line: 563, column: 3, scope: !4648)
!4648 = distinct !DILexicalBlock(scope: !4646, file: !3, line: 563, column: 3)
!4649 = !DILocation(line: 563, column: 3, scope: !4650)
!4650 = distinct !DILexicalBlock(scope: !4646, file: !3, line: 563, column: 3)
!4651 = !DILocation(line: 565, column: 3, scope: !4628)
!4652 = !DILocalVariable(name: "__mptr", scope: !4653, file: !3, line: 567, type: !111)
!4653 = distinct !DILexicalBlock(scope: !4654, file: !3, line: 567, column: 3)
!4654 = distinct !DILexicalBlock(scope: !4628, file: !3, line: 567, column: 3)
!4655 = !DILocation(line: 567, column: 3, scope: !4653)
!4656 = !DILocation(line: 567, column: 3, scope: !4657)
!4657 = distinct !DILexicalBlock(scope: !4653, file: !3, line: 567, column: 3)
!4658 = !DILocation(line: 567, column: 3, scope: !4654)
!4659 = !DILocation(line: 567, column: 3, scope: !4660)
!4660 = distinct !DILexicalBlock(scope: !4654, file: !3, line: 567, column: 3)
!4661 = !DILocation(line: 568, column: 8, scope: !4662)
!4662 = distinct !DILexicalBlock(scope: !4660, file: !3, line: 568, column: 8)
!4663 = !DILocation(line: 568, column: 16, scope: !4662)
!4664 = !DILocation(line: 568, column: 21, scope: !4662)
!4665 = !DILocation(line: 568, column: 24, scope: !4662)
!4666 = !DILocation(line: 568, column: 32, scope: !4662)
!4667 = !DILocation(line: 568, column: 41, scope: !4662)
!4668 = !DILocation(line: 568, column: 8, scope: !4660)
!4669 = !DILocation(line: 569, column: 5, scope: !4662)
!4670 = !DILocation(line: 569, column: 13, scope: !4662)
!4671 = !DILocation(line: 569, column: 22, scope: !4662)
!4672 = !DILocation(line: 569, column: 28, scope: !4662)
!4673 = !DILocalVariable(name: "__mptr", scope: !4674, file: !3, line: 567, type: !111)
!4674 = distinct !DILexicalBlock(scope: !4660, file: !3, line: 567, column: 3)
!4675 = !DILocation(line: 567, column: 3, scope: !4674)
!4676 = !DILocation(line: 567, column: 3, scope: !4677)
!4677 = distinct !DILexicalBlock(scope: !4674, file: !3, line: 567, column: 3)
!4678 = distinct !{!4678, !4658, !4679}
!4679 = !DILocation(line: 569, column: 34, scope: !4654)
!4680 = !DILocation(line: 570, column: 2, scope: !4628)
!4681 = !DILocation(line: 571, column: 1, scope: !4608)
!4682 = distinct !DISubprogram(name: "input_open_device", scope: !3, file: !3, line: 599, type: !4535, scopeLine: 600, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !309)
!4683 = !DILocalVariable(name: "handle", arg: 1, scope: !4682, file: !3, line: 599, type: !107)
!4684 = !DILocation(line: 599, column: 44, scope: !4682)
!4685 = !DILocalVariable(name: "dev", scope: !4682, file: !3, line: 601, type: !119)
!4686 = !DILocation(line: 601, column: 20, scope: !4682)
!4687 = !DILocation(line: 601, column: 26, scope: !4682)
!4688 = !DILocation(line: 601, column: 34, scope: !4682)
!4689 = !DILocalVariable(name: "retval", scope: !4682, file: !3, line: 602, type: !113)
!4690 = !DILocation(line: 602, column: 6, scope: !4682)
!4691 = !DILocation(line: 604, column: 37, scope: !4682)
!4692 = !DILocation(line: 604, column: 42, scope: !4682)
!4693 = !DILocation(line: 604, column: 11, scope: !4682)
!4694 = !DILocation(line: 604, column: 9, scope: !4682)
!4695 = !DILocation(line: 605, column: 6, scope: !4696)
!4696 = distinct !DILexicalBlock(scope: !4682, file: !3, line: 605, column: 6)
!4697 = !DILocation(line: 605, column: 6, scope: !4682)
!4698 = !DILocation(line: 606, column: 10, scope: !4696)
!4699 = !DILocation(line: 606, column: 3, scope: !4696)
!4700 = !DILocation(line: 608, column: 6, scope: !4701)
!4701 = distinct !DILexicalBlock(scope: !4682, file: !3, line: 608, column: 6)
!4702 = !DILocation(line: 608, column: 11, scope: !4701)
!4703 = !DILocation(line: 608, column: 6, scope: !4682)
!4704 = !DILocation(line: 609, column: 10, scope: !4705)
!4705 = distinct !DILexicalBlock(scope: !4701, file: !3, line: 608, column: 23)
!4706 = !DILocation(line: 610, column: 3, scope: !4705)
!4707 = !DILocation(line: 613, column: 2, scope: !4682)
!4708 = !DILocation(line: 613, column: 10, scope: !4682)
!4709 = !DILocation(line: 613, column: 14, scope: !4682)
!4710 = !DILocation(line: 615, column: 6, scope: !4711)
!4711 = distinct !DILexicalBlock(scope: !4682, file: !3, line: 615, column: 6)
!4712 = !DILocation(line: 615, column: 11, scope: !4711)
!4713 = !DILocation(line: 615, column: 16, scope: !4711)
!4714 = !DILocation(line: 615, column: 6, scope: !4682)
!4715 = !DILocation(line: 620, column: 3, scope: !4716)
!4716 = distinct !DILexicalBlock(scope: !4711, file: !3, line: 615, column: 20)
!4717 = !DILocation(line: 623, column: 6, scope: !4718)
!4718 = distinct !DILexicalBlock(scope: !4682, file: !3, line: 623, column: 6)
!4719 = !DILocation(line: 623, column: 11, scope: !4718)
!4720 = !DILocation(line: 623, column: 6, scope: !4682)
!4721 = !DILocation(line: 624, column: 12, scope: !4722)
!4722 = distinct !DILexicalBlock(scope: !4718, file: !3, line: 623, column: 17)
!4723 = !DILocation(line: 624, column: 17, scope: !4722)
!4724 = !DILocation(line: 624, column: 22, scope: !4722)
!4725 = !DILocation(line: 624, column: 10, scope: !4722)
!4726 = !DILocation(line: 625, column: 7, scope: !4727)
!4727 = distinct !DILexicalBlock(scope: !4722, file: !3, line: 625, column: 7)
!4728 = !DILocation(line: 625, column: 7, scope: !4722)
!4729 = !DILocation(line: 626, column: 4, scope: !4730)
!4730 = distinct !DILexicalBlock(scope: !4727, file: !3, line: 625, column: 15)
!4731 = !DILocation(line: 626, column: 9, scope: !4730)
!4732 = !DILocation(line: 626, column: 14, scope: !4730)
!4733 = !DILocation(line: 627, column: 4, scope: !4730)
!4734 = !DILocation(line: 627, column: 12, scope: !4730)
!4735 = !DILocation(line: 627, column: 16, scope: !4730)
!4736 = !DILocation(line: 632, column: 4, scope: !4730)
!4737 = !DILocation(line: 633, column: 4, scope: !4730)
!4738 = !DILocation(line: 635, column: 2, scope: !4722)
!4739 = !DILocation(line: 637, column: 6, scope: !4740)
!4740 = distinct !DILexicalBlock(scope: !4682, file: !3, line: 637, column: 6)
!4741 = !DILocation(line: 637, column: 11, scope: !4740)
!4742 = !DILocation(line: 637, column: 6, scope: !4682)
!4743 = !DILocation(line: 638, column: 26, scope: !4740)
!4744 = !DILocation(line: 638, column: 31, scope: !4740)
!4745 = !DILocation(line: 638, column: 3, scope: !4740)
!4746 = !DILabel(scope: !4682, name: "out", file: !3, line: 640)
!4747 = !DILocation(line: 640, column: 2, scope: !4682)
!4748 = !DILocation(line: 641, column: 16, scope: !4682)
!4749 = !DILocation(line: 641, column: 21, scope: !4682)
!4750 = !DILocation(line: 641, column: 2, scope: !4682)
!4751 = !DILocation(line: 642, column: 9, scope: !4682)
!4752 = !DILocation(line: 642, column: 2, scope: !4682)
!4753 = !DILocation(line: 643, column: 1, scope: !4682)
!4754 = distinct !DISubprogram(name: "input_flush_device", scope: !3, file: !3, line: 646, type: !4755, scopeLine: 647, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !309)
!4755 = !DISubroutineType(types: !4756)
!4756 = !{!113, !107, !320}
!4757 = !DILocalVariable(name: "handle", arg: 1, scope: !4754, file: !3, line: 646, type: !107)
!4758 = !DILocation(line: 646, column: 45, scope: !4754)
!4759 = !DILocalVariable(name: "file", arg: 2, scope: !4754, file: !3, line: 646, type: !320)
!4760 = !DILocation(line: 646, column: 66, scope: !4754)
!4761 = !DILocalVariable(name: "dev", scope: !4754, file: !3, line: 648, type: !119)
!4762 = !DILocation(line: 648, column: 20, scope: !4754)
!4763 = !DILocation(line: 648, column: 26, scope: !4754)
!4764 = !DILocation(line: 648, column: 34, scope: !4754)
!4765 = !DILocalVariable(name: "retval", scope: !4754, file: !3, line: 649, type: !113)
!4766 = !DILocation(line: 649, column: 6, scope: !4754)
!4767 = !DILocation(line: 651, column: 37, scope: !4754)
!4768 = !DILocation(line: 651, column: 42, scope: !4754)
!4769 = !DILocation(line: 651, column: 11, scope: !4754)
!4770 = !DILocation(line: 651, column: 9, scope: !4754)
!4771 = !DILocation(line: 652, column: 6, scope: !4772)
!4772 = distinct !DILexicalBlock(scope: !4754, file: !3, line: 652, column: 6)
!4773 = !DILocation(line: 652, column: 6, scope: !4754)
!4774 = !DILocation(line: 653, column: 10, scope: !4772)
!4775 = !DILocation(line: 653, column: 3, scope: !4772)
!4776 = !DILocation(line: 655, column: 6, scope: !4777)
!4777 = distinct !DILexicalBlock(scope: !4754, file: !3, line: 655, column: 6)
!4778 = !DILocation(line: 655, column: 11, scope: !4777)
!4779 = !DILocation(line: 655, column: 6, scope: !4754)
!4780 = !DILocation(line: 656, column: 12, scope: !4777)
!4781 = !DILocation(line: 656, column: 17, scope: !4777)
!4782 = !DILocation(line: 656, column: 23, scope: !4777)
!4783 = !DILocation(line: 656, column: 28, scope: !4777)
!4784 = !DILocation(line: 656, column: 10, scope: !4777)
!4785 = !DILocation(line: 656, column: 3, scope: !4777)
!4786 = !DILocation(line: 658, column: 16, scope: !4754)
!4787 = !DILocation(line: 658, column: 21, scope: !4754)
!4788 = !DILocation(line: 658, column: 2, scope: !4754)
!4789 = !DILocation(line: 659, column: 9, scope: !4754)
!4790 = !DILocation(line: 659, column: 2, scope: !4754)
!4791 = !DILocation(line: 660, column: 1, scope: !4754)
!4792 = distinct !DISubprogram(name: "input_close_device", scope: !3, file: !3, line: 670, type: !3841, scopeLine: 671, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !309)
!4793 = !DILocalVariable(name: "handle", arg: 1, scope: !4792, file: !3, line: 670, type: !107)
!4794 = !DILocation(line: 670, column: 46, scope: !4792)
!4795 = !DILocalVariable(name: "dev", scope: !4792, file: !3, line: 672, type: !119)
!4796 = !DILocation(line: 672, column: 20, scope: !4792)
!4797 = !DILocation(line: 672, column: 26, scope: !4792)
!4798 = !DILocation(line: 672, column: 34, scope: !4792)
!4799 = !DILocation(line: 674, column: 14, scope: !4792)
!4800 = !DILocation(line: 674, column: 19, scope: !4792)
!4801 = !DILocation(line: 674, column: 2, scope: !4792)
!4802 = !DILocation(line: 676, column: 25, scope: !4792)
!4803 = !DILocation(line: 676, column: 2, scope: !4792)
!4804 = !DILocation(line: 678, column: 9, scope: !4805)
!4805 = distinct !DILexicalBlock(scope: !4792, file: !3, line: 678, column: 6)
!4806 = !DILocation(line: 678, column: 14, scope: !4805)
!4807 = !DILocation(line: 678, column: 7, scope: !4805)
!4808 = !DILocation(line: 678, column: 6, scope: !4792)
!4809 = !DILocation(line: 679, column: 7, scope: !4810)
!4810 = distinct !DILexicalBlock(scope: !4811, file: !3, line: 679, column: 7)
!4811 = distinct !DILexicalBlock(scope: !4805, file: !3, line: 678, column: 21)
!4812 = !DILocation(line: 679, column: 12, scope: !4810)
!4813 = !DILocation(line: 679, column: 7, scope: !4811)
!4814 = !DILocation(line: 680, column: 26, scope: !4810)
!4815 = !DILocation(line: 680, column: 31, scope: !4810)
!4816 = !DILocation(line: 680, column: 4, scope: !4810)
!4817 = !DILocation(line: 682, column: 7, scope: !4818)
!4818 = distinct !DILexicalBlock(scope: !4811, file: !3, line: 682, column: 7)
!4819 = !DILocation(line: 682, column: 12, scope: !4818)
!4820 = !DILocation(line: 682, column: 7, scope: !4811)
!4821 = !DILocation(line: 683, column: 4, scope: !4818)
!4822 = !DILocation(line: 683, column: 9, scope: !4818)
!4823 = !DILocation(line: 683, column: 15, scope: !4818)
!4824 = !DILocation(line: 684, column: 2, scope: !4811)
!4825 = !DILocation(line: 686, column: 9, scope: !4826)
!4826 = distinct !DILexicalBlock(scope: !4792, file: !3, line: 686, column: 6)
!4827 = !DILocation(line: 686, column: 17, scope: !4826)
!4828 = !DILocation(line: 686, column: 7, scope: !4826)
!4829 = !DILocation(line: 686, column: 6, scope: !4792)
!4830 = !DILocation(line: 692, column: 3, scope: !4831)
!4831 = distinct !DILexicalBlock(scope: !4826, file: !3, line: 686, column: 23)
!4832 = !DILocation(line: 693, column: 2, scope: !4831)
!4833 = !DILocation(line: 695, column: 16, scope: !4792)
!4834 = !DILocation(line: 695, column: 21, scope: !4792)
!4835 = !DILocation(line: 695, column: 2, scope: !4792)
!4836 = !DILocation(line: 696, column: 1, scope: !4792)
!4837 = distinct !DISubprogram(name: "input_scancode_to_scalar", scope: !3, file: !3, line: 763, type: !4838, scopeLine: 765, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !309)
!4838 = !DISubroutineType(types: !4839)
!4839 = !{!113, !164, !179}
!4840 = !DILocalVariable(name: "ke", arg: 1, scope: !4837, file: !3, line: 763, type: !164)
!4841 = !DILocation(line: 763, column: 63, scope: !4837)
!4842 = !DILocalVariable(name: "scancode", arg: 2, scope: !4837, file: !3, line: 764, type: !179)
!4843 = !DILocation(line: 764, column: 23, scope: !4837)
!4844 = !DILocation(line: 766, column: 10, scope: !4837)
!4845 = !DILocation(line: 766, column: 14, scope: !4837)
!4846 = !DILocation(line: 766, column: 2, scope: !4837)
!4847 = !DILocation(line: 768, column: 23, scope: !4848)
!4848 = distinct !DILexicalBlock(scope: !4837, file: !3, line: 766, column: 19)
!4849 = !DILocation(line: 768, column: 27, scope: !4848)
!4850 = !DILocation(line: 768, column: 15, scope: !4848)
!4851 = !DILocation(line: 768, column: 4, scope: !4848)
!4852 = !DILocation(line: 768, column: 13, scope: !4848)
!4853 = !DILocation(line: 769, column: 3, scope: !4848)
!4854 = !DILocation(line: 772, column: 24, scope: !4848)
!4855 = !DILocation(line: 772, column: 28, scope: !4848)
!4856 = !DILocation(line: 772, column: 15, scope: !4848)
!4857 = !DILocation(line: 772, column: 4, scope: !4848)
!4858 = !DILocation(line: 772, column: 13, scope: !4848)
!4859 = !DILocation(line: 773, column: 3, scope: !4848)
!4860 = !DILocation(line: 776, column: 24, scope: !4848)
!4861 = !DILocation(line: 776, column: 28, scope: !4848)
!4862 = !DILocation(line: 776, column: 15, scope: !4848)
!4863 = !DILocation(line: 776, column: 4, scope: !4848)
!4864 = !DILocation(line: 776, column: 13, scope: !4848)
!4865 = !DILocation(line: 777, column: 3, scope: !4848)
!4866 = !DILocation(line: 780, column: 3, scope: !4848)
!4867 = !DILocation(line: 783, column: 2, scope: !4837)
!4868 = !DILocation(line: 784, column: 1, scope: !4837)
!4869 = distinct !DISubprogram(name: "input_get_keycode", scope: !3, file: !3, line: 905, type: !182, scopeLine: 906, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !309)
!4870 = !DILocation(line: 407, column: 64, scope: !4043, inlinedAt: !4871)
!4871 = distinct !DILocation(line: 912, column: 2, scope: !4869)
!4872 = !DILocation(line: 407, column: 84, scope: !4043, inlinedAt: !4871)
!4873 = !DILocation(line: 327, column: 67, scope: !4055, inlinedAt: !4874)
!4874 = distinct !DILocation(line: 910, column: 2, scope: !4875)
!4875 = distinct !DILexicalBlock(scope: !4876, file: !3, line: 910, column: 2)
!4876 = distinct !DILexicalBlock(scope: !4877, file: !3, line: 910, column: 2)
!4877 = distinct !DILexicalBlock(scope: !4878, file: !3, line: 910, column: 2)
!4878 = distinct !DILexicalBlock(scope: !4879, file: !3, line: 910, column: 2)
!4879 = distinct !DILexicalBlock(scope: !4869, file: !3, line: 910, column: 2)
!4880 = !DILocalVariable(name: "dev", arg: 1, scope: !4869, file: !3, line: 905, type: !119)
!4881 = !DILocation(line: 905, column: 41, scope: !4869)
!4882 = !DILocalVariable(name: "ke", arg: 2, scope: !4869, file: !3, line: 905, type: !184)
!4883 = !DILocation(line: 905, column: 73, scope: !4869)
!4884 = !DILocalVariable(name: "flags", scope: !4869, file: !3, line: 907, type: !138)
!4885 = !DILocation(line: 907, column: 16, scope: !4869)
!4886 = !DILocalVariable(name: "retval", scope: !4869, file: !3, line: 908, type: !113)
!4887 = !DILocation(line: 908, column: 6, scope: !4869)
!4888 = !DILocation(line: 910, column: 2, scope: !4869)
!4889 = !DILocation(line: 910, column: 2, scope: !4879)
!4890 = !DILocalVariable(name: "__dummy", scope: !4891, file: !3, line: 910, type: !138)
!4891 = distinct !DILexicalBlock(scope: !4878, file: !3, line: 910, column: 2)
!4892 = !DILocation(line: 910, column: 2, scope: !4891)
!4893 = !DILocalVariable(name: "__dummy2", scope: !4891, file: !3, line: 910, type: !138)
!4894 = !DILocation(line: 910, column: 2, scope: !4878)
!4895 = !DILocation(line: 910, column: 2, scope: !4877)
!4896 = !DILocation(line: 910, column: 2, scope: !4897)
!4897 = distinct !DILexicalBlock(scope: !4877, file: !3, line: 910, column: 2)
!4898 = !DILocalVariable(name: "__dummy", scope: !4899, file: !3, line: 910, type: !138)
!4899 = distinct !DILexicalBlock(scope: !4900, file: !3, line: 910, column: 2)
!4900 = distinct !DILexicalBlock(scope: !4897, file: !3, line: 910, column: 2)
!4901 = !DILocation(line: 910, column: 2, scope: !4899)
!4902 = !DILocalVariable(name: "__dummy2", scope: !4899, file: !3, line: 910, type: !138)
!4903 = !DILocation(line: 910, column: 2, scope: !4900)
!4904 = !DILocation(line: 910, column: 2, scope: !4876)
!4905 = !{i32 -2142437778}
!4906 = !DILocation(line: 910, column: 2, scope: !4875)
!4907 = !DILocation(line: 329, column: 10, scope: !4055, inlinedAt: !4874)
!4908 = !DILocation(line: 329, column: 16, scope: !4055, inlinedAt: !4874)
!4909 = !DILocation(line: 911, column: 11, scope: !4869)
!4910 = !DILocation(line: 911, column: 16, scope: !4869)
!4911 = !DILocation(line: 911, column: 27, scope: !4869)
!4912 = !DILocation(line: 911, column: 32, scope: !4869)
!4913 = !DILocation(line: 911, column: 9, scope: !4869)
!4914 = !DILocation(line: 912, column: 26, scope: !4869)
!4915 = !DILocation(line: 912, column: 31, scope: !4869)
!4916 = !DILocation(line: 912, column: 43, scope: !4869)
!4917 = !DILocation(line: 409, column: 2, scope: !4111, inlinedAt: !4871)
!4918 = !DILocation(line: 409, column: 2, scope: !4116, inlinedAt: !4871)
!4919 = !DILocation(line: 409, column: 2, scope: !4117, inlinedAt: !4871)
!4920 = !DILocation(line: 409, column: 2, scope: !4124, inlinedAt: !4871)
!4921 = !DILocation(line: 409, column: 2, scope: !4127, inlinedAt: !4871)
!4922 = !DILocation(line: 914, column: 9, scope: !4869)
!4923 = !DILocation(line: 914, column: 2, scope: !4869)
!4924 = distinct !DISubprogram(name: "input_set_keycode", scope: !3, file: !3, line: 926, type: !4925, scopeLine: 928, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !309)
!4925 = !DISubroutineType(types: !4926)
!4926 = !{!113, !119, !164}
!4927 = !DILocation(line: 407, column: 64, scope: !4043, inlinedAt: !4928)
!4928 = distinct !DILocation(line: 965, column: 2, scope: !4924)
!4929 = !DILocation(line: 407, column: 84, scope: !4043, inlinedAt: !4928)
!4930 = !DILocation(line: 327, column: 67, scope: !4055, inlinedAt: !4931)
!4931 = distinct !DILocation(line: 936, column: 2, scope: !4932)
!4932 = distinct !DILexicalBlock(scope: !4933, file: !3, line: 936, column: 2)
!4933 = distinct !DILexicalBlock(scope: !4934, file: !3, line: 936, column: 2)
!4934 = distinct !DILexicalBlock(scope: !4935, file: !3, line: 936, column: 2)
!4935 = distinct !DILexicalBlock(scope: !4936, file: !3, line: 936, column: 2)
!4936 = distinct !DILexicalBlock(scope: !4924, file: !3, line: 936, column: 2)
!4937 = !DILocalVariable(name: "dev", arg: 1, scope: !4924, file: !3, line: 926, type: !119)
!4938 = !DILocation(line: 926, column: 41, scope: !4924)
!4939 = !DILocalVariable(name: "ke", arg: 2, scope: !4924, file: !3, line: 927, type: !164)
!4940 = !DILocation(line: 927, column: 42, scope: !4924)
!4941 = !DILocalVariable(name: "flags", scope: !4924, file: !3, line: 929, type: !138)
!4942 = !DILocation(line: 929, column: 16, scope: !4924)
!4943 = !DILocalVariable(name: "old_keycode", scope: !4924, file: !3, line: 930, type: !7)
!4944 = !DILocation(line: 930, column: 15, scope: !4924)
!4945 = !DILocalVariable(name: "retval", scope: !4924, file: !3, line: 931, type: !113)
!4946 = !DILocation(line: 931, column: 6, scope: !4924)
!4947 = !DILocation(line: 933, column: 6, scope: !4948)
!4948 = distinct !DILexicalBlock(scope: !4924, file: !3, line: 933, column: 6)
!4949 = !DILocation(line: 933, column: 10, scope: !4948)
!4950 = !DILocation(line: 933, column: 18, scope: !4948)
!4951 = !DILocation(line: 933, column: 6, scope: !4924)
!4952 = !DILocation(line: 934, column: 3, scope: !4948)
!4953 = !DILocation(line: 936, column: 2, scope: !4924)
!4954 = !DILocation(line: 936, column: 2, scope: !4936)
!4955 = !DILocalVariable(name: "__dummy", scope: !4956, file: !3, line: 936, type: !138)
!4956 = distinct !DILexicalBlock(scope: !4935, file: !3, line: 936, column: 2)
!4957 = !DILocation(line: 936, column: 2, scope: !4956)
!4958 = !DILocalVariable(name: "__dummy2", scope: !4956, file: !3, line: 936, type: !138)
!4959 = !DILocation(line: 936, column: 2, scope: !4935)
!4960 = !DILocation(line: 936, column: 2, scope: !4934)
!4961 = !DILocation(line: 936, column: 2, scope: !4962)
!4962 = distinct !DILexicalBlock(scope: !4934, file: !3, line: 936, column: 2)
!4963 = !DILocalVariable(name: "__dummy", scope: !4964, file: !3, line: 936, type: !138)
!4964 = distinct !DILexicalBlock(scope: !4965, file: !3, line: 936, column: 2)
!4965 = distinct !DILexicalBlock(scope: !4962, file: !3, line: 936, column: 2)
!4966 = !DILocation(line: 936, column: 2, scope: !4964)
!4967 = !DILocalVariable(name: "__dummy2", scope: !4964, file: !3, line: 936, type: !138)
!4968 = !DILocation(line: 936, column: 2, scope: !4965)
!4969 = !DILocation(line: 936, column: 2, scope: !4933)
!4970 = !{i32 -2142436622}
!4971 = !DILocation(line: 936, column: 2, scope: !4932)
!4972 = !DILocation(line: 329, column: 10, scope: !4055, inlinedAt: !4931)
!4973 = !DILocation(line: 329, column: 16, scope: !4055, inlinedAt: !4931)
!4974 = !DILocation(line: 938, column: 11, scope: !4924)
!4975 = !DILocation(line: 938, column: 16, scope: !4924)
!4976 = !DILocation(line: 938, column: 27, scope: !4924)
!4977 = !DILocation(line: 938, column: 32, scope: !4924)
!4978 = !DILocation(line: 938, column: 9, scope: !4924)
!4979 = !DILocation(line: 939, column: 6, scope: !4980)
!4980 = distinct !DILexicalBlock(scope: !4924, file: !3, line: 939, column: 6)
!4981 = !DILocation(line: 939, column: 6, scope: !4924)
!4982 = !DILocation(line: 940, column: 3, scope: !4980)
!4983 = !DILocation(line: 943, column: 28, scope: !4924)
!4984 = !DILocation(line: 943, column: 33, scope: !4924)
!4985 = !DILocation(line: 943, column: 2, scope: !4924)
!4986 = !DILocation(line: 949, column: 6, scope: !4987)
!4987 = distinct !DILexicalBlock(scope: !4924, file: !3, line: 949, column: 6)
!4988 = !DILocation(line: 949, column: 18, scope: !4987)
!4989 = !DILocation(line: 949, column: 6, scope: !4924)
!4990 = !DILocation(line: 950, column: 3, scope: !4991)
!4991 = distinct !DILexicalBlock(scope: !4987, file: !3, line: 949, column: 29)
!4992 = !DILocation(line: 953, column: 2, scope: !4991)
!4993 = !DILocation(line: 953, column: 30, scope: !4994)
!4994 = distinct !DILexicalBlock(scope: !4987, file: !3, line: 953, column: 13)
!4995 = !DILocation(line: 953, column: 35, scope: !4994)
!4996 = !DILocation(line: 953, column: 13, scope: !4994)
!4997 = !DILocation(line: 953, column: 42, scope: !4994)
!4998 = !DILocation(line: 954, column: 26, scope: !4994)
!4999 = !DILocation(line: 954, column: 39, scope: !4994)
!5000 = !DILocation(line: 954, column: 44, scope: !4994)
!5001 = !DILocation(line: 954, column: 7, scope: !4994)
!5002 = !DILocation(line: 954, column: 61, scope: !4994)
!5003 = !DILocation(line: 955, column: 27, scope: !4994)
!5004 = !DILocation(line: 955, column: 40, scope: !4994)
!5005 = !DILocation(line: 955, column: 45, scope: !4994)
!5006 = !DILocation(line: 955, column: 6, scope: !4994)
!5007 = !DILocation(line: 953, column: 13, scope: !4987)
!5008 = !DILocalVariable(name: "vals", scope: !5009, file: !3, line: 956, type: !5010)
!5009 = distinct !DILexicalBlock(scope: !4994, file: !3, line: 955, column: 51)
!5010 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3781, size: 128, elements: !153)
!5011 = !DILocation(line: 956, column: 22, scope: !5009)
!5012 = !DILocation(line: 956, column: 32, scope: !5009)
!5013 = !DILocation(line: 957, column: 4, scope: !5009)
!5014 = !DILocation(line: 957, column: 14, scope: !5009)
!5015 = !DILocation(line: 958, column: 4, scope: !5009)
!5016 = !DILocation(line: 961, column: 21, scope: !5009)
!5017 = !DILocation(line: 961, column: 26, scope: !5009)
!5018 = !DILocation(line: 961, column: 3, scope: !5009)
!5019 = !DILocation(line: 962, column: 2, scope: !5009)
!5020 = !DILocation(line: 949, column: 20, scope: !4987)
!5021 = !DILabel(scope: !4924, name: "out", file: !3, line: 964)
!5022 = !DILocation(line: 964, column: 2, scope: !4924)
!5023 = !DILocation(line: 965, column: 26, scope: !4924)
!5024 = !DILocation(line: 965, column: 31, scope: !4924)
!5025 = !DILocation(line: 965, column: 43, scope: !4924)
!5026 = !DILocation(line: 409, column: 2, scope: !4111, inlinedAt: !4928)
!5027 = !DILocation(line: 409, column: 2, scope: !4116, inlinedAt: !4928)
!5028 = !DILocation(line: 409, column: 2, scope: !4117, inlinedAt: !4928)
!5029 = !DILocation(line: 409, column: 2, scope: !4124, inlinedAt: !4928)
!5030 = !DILocation(line: 409, column: 2, scope: !4127, inlinedAt: !4928)
!5031 = !DILocation(line: 967, column: 9, scope: !4924)
!5032 = !DILocation(line: 967, column: 2, scope: !4924)
!5033 = !DILocation(line: 968, column: 1, scope: !4924)
!5034 = distinct !DISubprogram(name: "__clear_bit", scope: !4492, file: !4492, line: 40, type: !4493, scopeLine: 41, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!5035 = !DILocalVariable(name: "nr", arg: 1, scope: !5036, file: !4499, line: 92, type: !507)
!5036 = distinct !DISubprogram(name: "arch___clear_bit", scope: !4499, file: !4499, line: 92, type: !4493, scopeLine: 93, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!5037 = !DILocation(line: 92, column: 23, scope: !5036, inlinedAt: !5038)
!5038 = distinct !DILocation(line: 43, column: 2, scope: !5034)
!5039 = !DILocalVariable(name: "addr", arg: 2, scope: !5036, file: !4499, line: 92, type: !4495)
!5040 = !DILocation(line: 92, column: 51, scope: !5036, inlinedAt: !5038)
!5041 = !DILocation(line: 39, column: 67, scope: !4505, inlinedAt: !5042)
!5042 = distinct !DILocation(line: 42, column: 2, scope: !5034)
!5043 = !DILocation(line: 39, column: 77, scope: !4505, inlinedAt: !5042)
!5044 = !DILocalVariable(name: "nr", arg: 1, scope: !5034, file: !4492, line: 40, type: !507)
!5045 = !DILocation(line: 40, column: 37, scope: !5034)
!5046 = !DILocalVariable(name: "addr", arg: 2, scope: !5034, file: !4492, line: 40, type: !4495)
!5047 = !DILocation(line: 40, column: 65, scope: !5034)
!5048 = !DILocation(line: 42, column: 19, scope: !5034)
!5049 = !DILocation(line: 42, column: 26, scope: !5034)
!5050 = !DILocation(line: 42, column: 24, scope: !5034)
!5051 = !DILocation(line: 41, column: 20, scope: !4505, inlinedAt: !5042)
!5052 = !DILocation(line: 41, column: 23, scope: !4505, inlinedAt: !5042)
!5053 = !DILocation(line: 41, column: 2, scope: !4505, inlinedAt: !5042)
!5054 = !DILocation(line: 42, column: 2, scope: !4505, inlinedAt: !5042)
!5055 = !DILocation(line: 43, column: 19, scope: !5034)
!5056 = !DILocation(line: 43, column: 23, scope: !5034)
!5057 = !DILocation(line: 94, column: 44, scope: !5036, inlinedAt: !5038)
!5058 = !DILocation(line: 94, column: 56, scope: !5036, inlinedAt: !5038)
!5059 = !DILocation(line: 94, column: 2, scope: !5036, inlinedAt: !5038)
!5060 = !{i32 -2147163561}
!5061 = !DILocation(line: 44, column: 1, scope: !5034)
!5062 = distinct !DISubprogram(name: "test_bit", scope: !4492, file: !4492, line: 132, type: !5063, scopeLine: 133, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!5063 = !DISubroutineType(types: !5064)
!5064 = !{!457, !507, !5065}
!5065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5066, size: 64)
!5066 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4496)
!5067 = !DILocalVariable(name: "nr", arg: 1, scope: !5068, file: !4499, line: 210, type: !507)
!5068 = distinct !DISubprogram(name: "variable_test_bit", scope: !4499, file: !4499, line: 210, type: !5063, scopeLine: 211, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!5069 = !DILocation(line: 210, column: 52, scope: !5068, inlinedAt: !5070)
!5070 = distinct !DILocation(line: 135, column: 9, scope: !5062)
!5071 = !DILocalVariable(name: "addr", arg: 2, scope: !5068, file: !4499, line: 210, type: !5065)
!5072 = !DILocation(line: 210, column: 86, scope: !5068, inlinedAt: !5070)
!5073 = !DILocalVariable(name: "oldbit", scope: !5068, file: !4499, line: 212, type: !457)
!5074 = !DILocation(line: 212, column: 7, scope: !5068, inlinedAt: !5070)
!5075 = !DILocalVariable(name: "nr", arg: 1, scope: !5076, file: !4499, line: 204, type: !507)
!5076 = distinct !DISubprogram(name: "constant_test_bit", scope: !4499, file: !4499, line: 204, type: !5063, scopeLine: 205, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!5077 = !DILocation(line: 204, column: 52, scope: !5076, inlinedAt: !5078)
!5078 = distinct !DILocation(line: 135, column: 9, scope: !5062)
!5079 = !DILocalVariable(name: "addr", arg: 2, scope: !5076, file: !4499, line: 204, type: !5065)
!5080 = !DILocation(line: 204, column: 86, scope: !5076, inlinedAt: !5078)
!5081 = !DILocalVariable(name: "v", arg: 1, scope: !5082, file: !4506, line: 69, type: !4509)
!5082 = distinct !DISubprogram(name: "instrument_atomic_read", scope: !4506, file: !4506, line: 69, type: !4507, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!5083 = !DILocation(line: 69, column: 73, scope: !5082, inlinedAt: !5084)
!5084 = distinct !DILocation(line: 134, column: 2, scope: !5062)
!5085 = !DILocalVariable(name: "size", arg: 2, scope: !5082, file: !4506, line: 69, type: !547)
!5086 = !DILocation(line: 69, column: 83, scope: !5082, inlinedAt: !5084)
!5087 = !DILocalVariable(name: "nr", arg: 1, scope: !5062, file: !4492, line: 132, type: !507)
!5088 = !DILocation(line: 132, column: 34, scope: !5062)
!5089 = !DILocalVariable(name: "addr", arg: 2, scope: !5062, file: !4492, line: 132, type: !5065)
!5090 = !DILocation(line: 132, column: 68, scope: !5062)
!5091 = !DILocation(line: 134, column: 25, scope: !5062)
!5092 = !DILocation(line: 134, column: 32, scope: !5062)
!5093 = !DILocation(line: 134, column: 30, scope: !5062)
!5094 = !DILocation(line: 71, column: 19, scope: !5082, inlinedAt: !5084)
!5095 = !DILocation(line: 71, column: 22, scope: !5082, inlinedAt: !5084)
!5096 = !DILocation(line: 71, column: 2, scope: !5082, inlinedAt: !5084)
!5097 = !DILocation(line: 72, column: 2, scope: !5082, inlinedAt: !5084)
!5098 = !DILocation(line: 135, column: 9, scope: !5062)
!5099 = !DILocation(line: 206, column: 19, scope: !5076, inlinedAt: !5078)
!5100 = !DILocation(line: 206, column: 22, scope: !5076, inlinedAt: !5078)
!5101 = !DILocation(line: 206, column: 15, scope: !5076, inlinedAt: !5078)
!5102 = !DILocation(line: 207, column: 4, scope: !5076, inlinedAt: !5078)
!5103 = !DILocation(line: 207, column: 9, scope: !5076, inlinedAt: !5078)
!5104 = !DILocation(line: 207, column: 12, scope: !5076, inlinedAt: !5078)
!5105 = !DILocation(line: 206, column: 44, scope: !5076, inlinedAt: !5078)
!5106 = !DILocation(line: 207, column: 37, scope: !5076, inlinedAt: !5078)
!5107 = !DILocation(line: 217, column: 33, scope: !5068, inlinedAt: !5070)
!5108 = !DILocation(line: 217, column: 46, scope: !5068, inlinedAt: !5070)
!5109 = !DILocation(line: 214, column: 2, scope: !5068, inlinedAt: !5070)
!5110 = !{i32 -2147156096, i32 -2147156036}
!5111 = !DILocation(line: 219, column: 9, scope: !5068, inlinedAt: !5070)
!5112 = !DILocation(line: 135, column: 2, scope: !5062)
!5113 = distinct !DISubprogram(name: "__test_and_clear_bit", scope: !4492, file: !4492, line: 107, type: !5114, scopeLine: 108, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!5114 = !DISubroutineType(types: !5115)
!5115 = !{!457, !507, !4495}
!5116 = !DILocalVariable(name: "nr", arg: 1, scope: !5117, file: !4499, line: 174, type: !507)
!5117 = distinct !DISubprogram(name: "arch___test_and_clear_bit", scope: !4499, file: !4499, line: 174, type: !5114, scopeLine: 175, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!5118 = !DILocation(line: 174, column: 32, scope: !5117, inlinedAt: !5119)
!5119 = distinct !DILocation(line: 110, column: 9, scope: !5113)
!5120 = !DILocalVariable(name: "addr", arg: 2, scope: !5117, file: !4499, line: 174, type: !4495)
!5121 = !DILocation(line: 174, column: 60, scope: !5117, inlinedAt: !5119)
!5122 = !DILocalVariable(name: "oldbit", scope: !5117, file: !4499, line: 176, type: !457)
!5123 = !DILocation(line: 176, column: 7, scope: !5117, inlinedAt: !5119)
!5124 = !DILocalVariable(name: "nr", arg: 1, scope: !5113, file: !4492, line: 107, type: !507)
!5125 = !DILocation(line: 107, column: 46, scope: !5113)
!5126 = !DILocalVariable(name: "addr", arg: 2, scope: !5113, file: !4492, line: 107, type: !4495)
!5127 = !DILocation(line: 107, column: 74, scope: !5113)
!5128 = !DILocation(line: 109, column: 32, scope: !5113)
!5129 = !DILocation(line: 109, column: 36, scope: !5113)
!5130 = !DILocation(line: 109, column: 2, scope: !5113)
!5131 = !DILocation(line: 110, column: 35, scope: !5113)
!5132 = !DILocation(line: 110, column: 39, scope: !5113)
!5133 = !DILocation(line: 181, column: 10, scope: !5117, inlinedAt: !5119)
!5134 = !DILocation(line: 181, column: 22, scope: !5117, inlinedAt: !5119)
!5135 = !DILocation(line: 178, column: 2, scope: !5117, inlinedAt: !5119)
!5136 = !{i32 -2147158502, i32 -2147158439}
!5137 = !DILocation(line: 182, column: 9, scope: !5117, inlinedAt: !5119)
!5138 = !DILocation(line: 110, column: 2, scope: !5113)
!5139 = distinct !DISubprogram(name: "input_pass_values", scope: !3, file: !3, line: 128, type: !5140, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!5140 = !DISubroutineType(types: !5141)
!5141 = !{null, !119, !3780, !7}
!5142 = !DILocalVariable(name: "dev", arg: 1, scope: !5139, file: !3, line: 128, type: !119)
!5143 = !DILocation(line: 128, column: 49, scope: !5139)
!5144 = !DILocalVariable(name: "vals", arg: 2, scope: !5139, file: !3, line: 129, type: !3780)
!5145 = !DILocation(line: 129, column: 30, scope: !5139)
!5146 = !DILocalVariable(name: "count", arg: 3, scope: !5139, file: !3, line: 129, type: !7)
!5147 = !DILocation(line: 129, column: 49, scope: !5139)
!5148 = !DILocalVariable(name: "handle", scope: !5139, file: !3, line: 131, type: !107)
!5149 = !DILocation(line: 131, column: 23, scope: !5139)
!5150 = !DILocalVariable(name: "v", scope: !5139, file: !3, line: 132, type: !3780)
!5151 = !DILocation(line: 132, column: 22, scope: !5139)
!5152 = !DILocation(line: 134, column: 7, scope: !5153)
!5153 = distinct !DILexicalBlock(scope: !5139, file: !3, line: 134, column: 6)
!5154 = !DILocation(line: 134, column: 6, scope: !5139)
!5155 = !DILocation(line: 135, column: 3, scope: !5153)
!5156 = !DILocation(line: 639, column: 2, scope: !4359, inlinedAt: !5157)
!5157 = distinct !DILocation(line: 137, column: 2, scope: !5139)
!5158 = !DILocalVariable(name: "________p1", scope: !5159, file: !3, line: 139, type: !107)
!5159 = distinct !DILexicalBlock(scope: !5139, file: !3, line: 139, column: 11)
!5160 = !DILocation(line: 139, column: 11, scope: !5159)
!5161 = !DILocation(line: 139, column: 11, scope: !5162)
!5162 = distinct !DILexicalBlock(scope: !5159, file: !3, line: 139, column: 11)
!5163 = !DILocation(line: 139, column: 11, scope: !5164)
!5164 = distinct !DILexicalBlock(scope: !5162, file: !3, line: 139, column: 11)
!5165 = !DILocation(line: 139, column: 11, scope: !5166)
!5166 = distinct !DILexicalBlock(scope: !5159, file: !3, line: 139, column: 11)
!5167 = !DILocation(line: 139, column: 9, scope: !5139)
!5168 = !DILocation(line: 140, column: 6, scope: !5169)
!5169 = distinct !DILexicalBlock(scope: !5139, file: !3, line: 140, column: 6)
!5170 = !DILocation(line: 140, column: 6, scope: !5139)
!5171 = !DILocation(line: 141, column: 28, scope: !5172)
!5172 = distinct !DILexicalBlock(scope: !5169, file: !3, line: 140, column: 14)
!5173 = !DILocation(line: 141, column: 36, scope: !5172)
!5174 = !DILocation(line: 141, column: 42, scope: !5172)
!5175 = !DILocation(line: 141, column: 11, scope: !5172)
!5176 = !DILocation(line: 141, column: 9, scope: !5172)
!5177 = !DILocation(line: 142, column: 2, scope: !5172)
!5178 = !DILocalVariable(name: "__mptr", scope: !5179, file: !3, line: 143, type: !111)
!5179 = distinct !DILexicalBlock(scope: !5180, file: !3, line: 143, column: 3)
!5180 = distinct !DILexicalBlock(scope: !5181, file: !3, line: 143, column: 3)
!5181 = distinct !DILexicalBlock(scope: !5169, file: !3, line: 142, column: 9)
!5182 = !DILocation(line: 143, column: 3, scope: !5179)
!5183 = !DILocation(line: 143, column: 3, scope: !5184)
!5184 = distinct !DILexicalBlock(scope: !5179, file: !3, line: 143, column: 3)
!5185 = !DILocation(line: 143, column: 3, scope: !5186)
!5186 = distinct !DILexicalBlock(scope: !5184, file: !3, line: 143, column: 3)
!5187 = !DILocation(line: 143, column: 3, scope: !5188)
!5188 = distinct !DILexicalBlock(scope: !5179, file: !3, line: 143, column: 3)
!5189 = !DILocation(line: 143, column: 3, scope: !5180)
!5190 = !DILocation(line: 143, column: 3, scope: !5191)
!5191 = distinct !DILexicalBlock(scope: !5180, file: !3, line: 143, column: 3)
!5192 = !DILocation(line: 144, column: 8, scope: !5193)
!5193 = distinct !DILexicalBlock(scope: !5191, file: !3, line: 144, column: 8)
!5194 = !DILocation(line: 144, column: 16, scope: !5193)
!5195 = !DILocation(line: 144, column: 8, scope: !5191)
!5196 = !DILocation(line: 145, column: 30, scope: !5197)
!5197 = distinct !DILexicalBlock(scope: !5193, file: !3, line: 144, column: 22)
!5198 = !DILocation(line: 145, column: 38, scope: !5197)
!5199 = !DILocation(line: 145, column: 44, scope: !5197)
!5200 = !DILocation(line: 145, column: 13, scope: !5197)
!5201 = !DILocation(line: 145, column: 11, scope: !5197)
!5202 = !DILocation(line: 146, column: 10, scope: !5203)
!5203 = distinct !DILexicalBlock(scope: !5197, file: !3, line: 146, column: 9)
!5204 = !DILocation(line: 146, column: 9, scope: !5197)
!5205 = !DILocation(line: 147, column: 6, scope: !5203)
!5206 = !DILocation(line: 148, column: 4, scope: !5197)
!5207 = !DILocalVariable(name: "__mptr", scope: !5208, file: !3, line: 143, type: !111)
!5208 = distinct !DILexicalBlock(scope: !5191, file: !3, line: 143, column: 3)
!5209 = !DILocation(line: 143, column: 3, scope: !5208)
!5210 = !DILocation(line: 143, column: 3, scope: !5211)
!5211 = distinct !DILexicalBlock(scope: !5208, file: !3, line: 143, column: 3)
!5212 = !DILocation(line: 143, column: 3, scope: !5213)
!5213 = distinct !DILexicalBlock(scope: !5211, file: !3, line: 143, column: 3)
!5214 = !DILocation(line: 143, column: 3, scope: !5215)
!5215 = distinct !DILexicalBlock(scope: !5208, file: !3, line: 143, column: 3)
!5216 = distinct !{!5216, !5189, !5217}
!5217 = !DILocation(line: 148, column: 4, scope: !5180)
!5218 = !DILocation(line: 151, column: 2, scope: !5139)
!5219 = !DILocation(line: 154, column: 23, scope: !5220)
!5220 = distinct !DILexicalBlock(scope: !5139, file: !3, line: 154, column: 6)
!5221 = !DILocation(line: 154, column: 28, scope: !5220)
!5222 = !DILocation(line: 154, column: 6, scope: !5220)
!5223 = !DILocation(line: 154, column: 35, scope: !5220)
!5224 = !DILocation(line: 154, column: 55, scope: !5220)
!5225 = !DILocation(line: 154, column: 60, scope: !5220)
!5226 = !DILocation(line: 154, column: 38, scope: !5220)
!5227 = !DILocation(line: 154, column: 6, scope: !5139)
!5228 = !DILocation(line: 155, column: 12, scope: !5229)
!5229 = distinct !DILexicalBlock(scope: !5230, file: !3, line: 155, column: 3)
!5230 = distinct !DILexicalBlock(scope: !5220, file: !3, line: 154, column: 68)
!5231 = !DILocation(line: 155, column: 10, scope: !5229)
!5232 = !DILocation(line: 155, column: 8, scope: !5229)
!5233 = !DILocation(line: 155, column: 18, scope: !5234)
!5234 = distinct !DILexicalBlock(scope: !5229, file: !3, line: 155, column: 3)
!5235 = !DILocation(line: 155, column: 23, scope: !5234)
!5236 = !DILocation(line: 155, column: 30, scope: !5234)
!5237 = !DILocation(line: 155, column: 28, scope: !5234)
!5238 = !DILocation(line: 155, column: 20, scope: !5234)
!5239 = !DILocation(line: 155, column: 3, scope: !5229)
!5240 = !DILocation(line: 156, column: 8, scope: !5241)
!5241 = distinct !DILexicalBlock(scope: !5242, file: !3, line: 156, column: 8)
!5242 = distinct !DILexicalBlock(scope: !5234, file: !3, line: 155, column: 42)
!5243 = !DILocation(line: 156, column: 11, scope: !5241)
!5244 = !DILocation(line: 156, column: 16, scope: !5241)
!5245 = !DILocation(line: 156, column: 26, scope: !5241)
!5246 = !DILocation(line: 156, column: 29, scope: !5241)
!5247 = !DILocation(line: 156, column: 32, scope: !5241)
!5248 = !DILocation(line: 156, column: 38, scope: !5241)
!5249 = !DILocation(line: 156, column: 8, scope: !5242)
!5250 = !DILocation(line: 157, column: 9, scope: !5251)
!5251 = distinct !DILexicalBlock(scope: !5252, file: !3, line: 157, column: 9)
!5252 = distinct !DILexicalBlock(scope: !5241, file: !3, line: 156, column: 44)
!5253 = !DILocation(line: 157, column: 12, scope: !5251)
!5254 = !DILocation(line: 157, column: 9, scope: !5252)
!5255 = !DILocation(line: 158, column: 29, scope: !5251)
!5256 = !DILocation(line: 158, column: 34, scope: !5251)
!5257 = !DILocation(line: 158, column: 37, scope: !5251)
!5258 = !DILocation(line: 158, column: 6, scope: !5251)
!5259 = !DILocation(line: 160, column: 28, scope: !5251)
!5260 = !DILocation(line: 160, column: 6, scope: !5251)
!5261 = !DILocation(line: 161, column: 4, scope: !5252)
!5262 = !DILocation(line: 162, column: 3, scope: !5242)
!5263 = !DILocation(line: 155, column: 38, scope: !5234)
!5264 = !DILocation(line: 155, column: 3, scope: !5234)
!5265 = distinct !{!5265, !5239, !5266}
!5266 = !DILocation(line: 162, column: 3, scope: !5229)
!5267 = !DILocation(line: 163, column: 2, scope: !5230)
!5268 = !DILocation(line: 164, column: 1, scope: !5139)
!5269 = distinct !DISubprogram(name: "input_match_device_id", scope: !3, file: !3, line: 971, type: !5270, scopeLine: 973, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !309)
!5270 = !DISubroutineType(types: !5271)
!5271 = !{!457, !5272, !3816}
!5272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5273, size: 64)
!5273 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !120)
!5274 = !DILocalVariable(name: "dev", arg: 1, scope: !5269, file: !3, line: 971, type: !5272)
!5275 = !DILocation(line: 971, column: 52, scope: !5269)
!5276 = !DILocalVariable(name: "id", arg: 2, scope: !5269, file: !3, line: 972, type: !3816)
!5277 = !DILocation(line: 972, column: 37, scope: !5269)
!5278 = !DILocation(line: 974, column: 6, scope: !5279)
!5279 = distinct !DILexicalBlock(scope: !5269, file: !3, line: 974, column: 6)
!5280 = !DILocation(line: 974, column: 10, scope: !5279)
!5281 = !DILocation(line: 974, column: 16, scope: !5279)
!5282 = !DILocation(line: 974, column: 6, scope: !5269)
!5283 = !DILocation(line: 975, column: 7, scope: !5284)
!5284 = distinct !DILexicalBlock(scope: !5279, file: !3, line: 975, column: 7)
!5285 = !DILocation(line: 975, column: 11, scope: !5284)
!5286 = !DILocation(line: 975, column: 22, scope: !5284)
!5287 = !DILocation(line: 975, column: 27, scope: !5284)
!5288 = !DILocation(line: 975, column: 30, scope: !5284)
!5289 = !DILocation(line: 975, column: 19, scope: !5284)
!5290 = !DILocation(line: 975, column: 7, scope: !5279)
!5291 = !DILocation(line: 976, column: 4, scope: !5284)
!5292 = !DILocation(line: 978, column: 6, scope: !5293)
!5293 = distinct !DILexicalBlock(scope: !5269, file: !3, line: 978, column: 6)
!5294 = !DILocation(line: 978, column: 10, scope: !5293)
!5295 = !DILocation(line: 978, column: 16, scope: !5293)
!5296 = !DILocation(line: 978, column: 6, scope: !5269)
!5297 = !DILocation(line: 979, column: 7, scope: !5298)
!5298 = distinct !DILexicalBlock(scope: !5293, file: !3, line: 979, column: 7)
!5299 = !DILocation(line: 979, column: 11, scope: !5298)
!5300 = !DILocation(line: 979, column: 21, scope: !5298)
!5301 = !DILocation(line: 979, column: 26, scope: !5298)
!5302 = !DILocation(line: 979, column: 29, scope: !5298)
!5303 = !DILocation(line: 979, column: 18, scope: !5298)
!5304 = !DILocation(line: 979, column: 7, scope: !5293)
!5305 = !DILocation(line: 980, column: 4, scope: !5298)
!5306 = !DILocation(line: 982, column: 6, scope: !5307)
!5307 = distinct !DILexicalBlock(scope: !5269, file: !3, line: 982, column: 6)
!5308 = !DILocation(line: 982, column: 10, scope: !5307)
!5309 = !DILocation(line: 982, column: 16, scope: !5307)
!5310 = !DILocation(line: 982, column: 6, scope: !5269)
!5311 = !DILocation(line: 983, column: 7, scope: !5312)
!5312 = distinct !DILexicalBlock(scope: !5307, file: !3, line: 983, column: 7)
!5313 = !DILocation(line: 983, column: 11, scope: !5312)
!5314 = !DILocation(line: 983, column: 22, scope: !5312)
!5315 = !DILocation(line: 983, column: 27, scope: !5312)
!5316 = !DILocation(line: 983, column: 30, scope: !5312)
!5317 = !DILocation(line: 983, column: 19, scope: !5312)
!5318 = !DILocation(line: 983, column: 7, scope: !5307)
!5319 = !DILocation(line: 984, column: 4, scope: !5312)
!5320 = !DILocation(line: 986, column: 6, scope: !5321)
!5321 = distinct !DILexicalBlock(scope: !5269, file: !3, line: 986, column: 6)
!5322 = !DILocation(line: 986, column: 10, scope: !5321)
!5323 = !DILocation(line: 986, column: 16, scope: !5321)
!5324 = !DILocation(line: 986, column: 6, scope: !5269)
!5325 = !DILocation(line: 987, column: 7, scope: !5326)
!5326 = distinct !DILexicalBlock(scope: !5321, file: !3, line: 987, column: 7)
!5327 = !DILocation(line: 987, column: 11, scope: !5326)
!5328 = !DILocation(line: 987, column: 22, scope: !5326)
!5329 = !DILocation(line: 987, column: 27, scope: !5326)
!5330 = !DILocation(line: 987, column: 30, scope: !5326)
!5331 = !DILocation(line: 987, column: 19, scope: !5326)
!5332 = !DILocation(line: 987, column: 7, scope: !5321)
!5333 = !DILocation(line: 988, column: 4, scope: !5326)
!5334 = !DILocation(line: 990, column: 21, scope: !5335)
!5335 = distinct !DILexicalBlock(scope: !5269, file: !3, line: 990, column: 6)
!5336 = !DILocation(line: 990, column: 25, scope: !5335)
!5337 = !DILocation(line: 990, column: 32, scope: !5335)
!5338 = !DILocation(line: 990, column: 37, scope: !5335)
!5339 = !DILocation(line: 990, column: 7, scope: !5335)
!5340 = !DILocation(line: 990, column: 52, scope: !5335)
!5341 = !DILocation(line: 991, column: 21, scope: !5335)
!5342 = !DILocation(line: 991, column: 25, scope: !5335)
!5343 = !DILocation(line: 991, column: 33, scope: !5335)
!5344 = !DILocation(line: 991, column: 38, scope: !5335)
!5345 = !DILocation(line: 991, column: 7, scope: !5335)
!5346 = !DILocation(line: 991, column: 55, scope: !5335)
!5347 = !DILocation(line: 992, column: 21, scope: !5335)
!5348 = !DILocation(line: 992, column: 25, scope: !5335)
!5349 = !DILocation(line: 992, column: 33, scope: !5335)
!5350 = !DILocation(line: 992, column: 38, scope: !5335)
!5351 = !DILocation(line: 992, column: 7, scope: !5335)
!5352 = !DILocation(line: 992, column: 55, scope: !5335)
!5353 = !DILocation(line: 993, column: 21, scope: !5335)
!5354 = !DILocation(line: 993, column: 25, scope: !5335)
!5355 = !DILocation(line: 993, column: 33, scope: !5335)
!5356 = !DILocation(line: 993, column: 38, scope: !5335)
!5357 = !DILocation(line: 993, column: 7, scope: !5335)
!5358 = !DILocation(line: 993, column: 55, scope: !5335)
!5359 = !DILocation(line: 994, column: 21, scope: !5335)
!5360 = !DILocation(line: 994, column: 25, scope: !5335)
!5361 = !DILocation(line: 994, column: 33, scope: !5335)
!5362 = !DILocation(line: 994, column: 38, scope: !5335)
!5363 = !DILocation(line: 994, column: 7, scope: !5335)
!5364 = !DILocation(line: 994, column: 55, scope: !5335)
!5365 = !DILocation(line: 995, column: 21, scope: !5335)
!5366 = !DILocation(line: 995, column: 25, scope: !5335)
!5367 = !DILocation(line: 995, column: 33, scope: !5335)
!5368 = !DILocation(line: 995, column: 38, scope: !5335)
!5369 = !DILocation(line: 995, column: 7, scope: !5335)
!5370 = !DILocation(line: 995, column: 55, scope: !5335)
!5371 = !DILocation(line: 996, column: 21, scope: !5335)
!5372 = !DILocation(line: 996, column: 25, scope: !5335)
!5373 = !DILocation(line: 996, column: 33, scope: !5335)
!5374 = !DILocation(line: 996, column: 38, scope: !5335)
!5375 = !DILocation(line: 996, column: 7, scope: !5335)
!5376 = !DILocation(line: 996, column: 55, scope: !5335)
!5377 = !DILocation(line: 997, column: 21, scope: !5335)
!5378 = !DILocation(line: 997, column: 25, scope: !5335)
!5379 = !DILocation(line: 997, column: 32, scope: !5335)
!5380 = !DILocation(line: 997, column: 37, scope: !5335)
!5381 = !DILocation(line: 997, column: 7, scope: !5335)
!5382 = !DILocation(line: 997, column: 52, scope: !5335)
!5383 = !DILocation(line: 998, column: 21, scope: !5335)
!5384 = !DILocation(line: 998, column: 25, scope: !5335)
!5385 = !DILocation(line: 998, column: 32, scope: !5335)
!5386 = !DILocation(line: 998, column: 37, scope: !5335)
!5387 = !DILocation(line: 998, column: 7, scope: !5335)
!5388 = !DILocation(line: 998, column: 52, scope: !5335)
!5389 = !DILocation(line: 999, column: 21, scope: !5335)
!5390 = !DILocation(line: 999, column: 25, scope: !5335)
!5391 = !DILocation(line: 999, column: 34, scope: !5335)
!5392 = !DILocation(line: 999, column: 39, scope: !5335)
!5393 = !DILocation(line: 999, column: 7, scope: !5335)
!5394 = !DILocation(line: 990, column: 6, scope: !5269)
!5395 = !DILocation(line: 1000, column: 3, scope: !5396)
!5396 = distinct !DILexicalBlock(scope: !5335, file: !3, line: 999, column: 65)
!5397 = !DILocation(line: 1003, column: 2, scope: !5269)
!5398 = !DILocation(line: 1004, column: 1, scope: !5269)
!5399 = distinct !DISubprogram(name: "bitmap_subset", scope: !5400, file: !5400, line: 373, type: !5401, scopeLine: 375, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!5400 = !DIFile(filename: "./include/linux/bitmap.h", directory: "/home/lizy2001/genbc/linux")
!5401 = !DISubroutineType(types: !5402)
!5402 = !{!113, !5403, !5403, !7}
!5403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5404, size: 64)
!5404 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !138)
!5405 = !DILocalVariable(name: "src1", arg: 1, scope: !5399, file: !5400, line: 373, type: !5403)
!5406 = !DILocation(line: 373, column: 54, scope: !5399)
!5407 = !DILocalVariable(name: "src2", arg: 2, scope: !5399, file: !5400, line: 374, type: !5403)
!5408 = !DILocation(line: 374, column: 25, scope: !5399)
!5409 = !DILocalVariable(name: "nbits", arg: 3, scope: !5399, file: !5400, line: 374, type: !7)
!5410 = !DILocation(line: 374, column: 44, scope: !5399)
!5411 = !DILocation(line: 376, column: 6, scope: !5412)
!5412 = distinct !DILexicalBlock(scope: !5399, file: !5400, line: 376, column: 6)
!5413 = !DILocation(line: 376, column: 6, scope: !5399)
!5414 = !DILocation(line: 377, column: 15, scope: !5412)
!5415 = !DILocation(line: 377, column: 14, scope: !5412)
!5416 = !DILocation(line: 377, column: 25, scope: !5412)
!5417 = !DILocation(line: 377, column: 24, scope: !5412)
!5418 = !DILocation(line: 377, column: 22, scope: !5412)
!5419 = !DILocation(line: 377, column: 20, scope: !5412)
!5420 = !DILocation(line: 377, column: 34, scope: !5412)
!5421 = !DILocation(line: 377, column: 32, scope: !5412)
!5422 = !DILocation(line: 377, column: 10, scope: !5412)
!5423 = !DILocation(line: 377, column: 3, scope: !5412)
!5424 = !DILocation(line: 379, column: 26, scope: !5412)
!5425 = !DILocation(line: 379, column: 32, scope: !5412)
!5426 = !DILocation(line: 379, column: 38, scope: !5412)
!5427 = !DILocation(line: 379, column: 10, scope: !5412)
!5428 = !DILocation(line: 379, column: 3, scope: !5412)
!5429 = !DILocation(line: 380, column: 1, scope: !5399)
!5430 = distinct !DISubprogram(name: "input_reset_device", scope: !3, file: !3, line: 1691, type: !3121, scopeLine: 1692, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !309)
!5431 = !DILocation(line: 407, column: 64, scope: !4043, inlinedAt: !5432)
!5432 = distinct !DILocation(line: 1701, column: 2, scope: !5430)
!5433 = !DILocation(line: 407, column: 84, scope: !4043, inlinedAt: !5432)
!5434 = !DILocation(line: 327, column: 67, scope: !4055, inlinedAt: !5435)
!5435 = distinct !DILocation(line: 1696, column: 2, scope: !5436)
!5436 = distinct !DILexicalBlock(scope: !5437, file: !3, line: 1696, column: 2)
!5437 = distinct !DILexicalBlock(scope: !5438, file: !3, line: 1696, column: 2)
!5438 = distinct !DILexicalBlock(scope: !5439, file: !3, line: 1696, column: 2)
!5439 = distinct !DILexicalBlock(scope: !5440, file: !3, line: 1696, column: 2)
!5440 = distinct !DILexicalBlock(scope: !5430, file: !3, line: 1696, column: 2)
!5441 = !DILocalVariable(name: "dev", arg: 1, scope: !5430, file: !3, line: 1691, type: !119)
!5442 = !DILocation(line: 1691, column: 43, scope: !5430)
!5443 = !DILocalVariable(name: "flags", scope: !5430, file: !3, line: 1693, type: !138)
!5444 = !DILocation(line: 1693, column: 16, scope: !5430)
!5445 = !DILocation(line: 1695, column: 14, scope: !5430)
!5446 = !DILocation(line: 1695, column: 19, scope: !5430)
!5447 = !DILocation(line: 1695, column: 2, scope: !5430)
!5448 = !DILocation(line: 1696, column: 2, scope: !5430)
!5449 = !DILocation(line: 1696, column: 2, scope: !5440)
!5450 = !DILocalVariable(name: "__dummy", scope: !5451, file: !3, line: 1696, type: !138)
!5451 = distinct !DILexicalBlock(scope: !5439, file: !3, line: 1696, column: 2)
!5452 = !DILocation(line: 1696, column: 2, scope: !5451)
!5453 = !DILocalVariable(name: "__dummy2", scope: !5451, file: !3, line: 1696, type: !138)
!5454 = !DILocation(line: 1696, column: 2, scope: !5439)
!5455 = !DILocation(line: 1696, column: 2, scope: !5438)
!5456 = !DILocation(line: 1696, column: 2, scope: !5457)
!5457 = distinct !DILexicalBlock(scope: !5438, file: !3, line: 1696, column: 2)
!5458 = !DILocalVariable(name: "__dummy", scope: !5459, file: !3, line: 1696, type: !138)
!5459 = distinct !DILexicalBlock(scope: !5460, file: !3, line: 1696, column: 2)
!5460 = distinct !DILexicalBlock(scope: !5457, file: !3, line: 1696, column: 2)
!5461 = !DILocation(line: 1696, column: 2, scope: !5459)
!5462 = !DILocalVariable(name: "__dummy2", scope: !5459, file: !3, line: 1696, type: !138)
!5463 = !DILocation(line: 1696, column: 2, scope: !5460)
!5464 = !DILocation(line: 1696, column: 2, scope: !5437)
!5465 = !{i32 -2142320210}
!5466 = !DILocation(line: 1696, column: 2, scope: !5436)
!5467 = !DILocation(line: 329, column: 10, scope: !4055, inlinedAt: !5435)
!5468 = !DILocation(line: 329, column: 16, scope: !4055, inlinedAt: !5435)
!5469 = !DILocation(line: 1698, column: 19, scope: !5430)
!5470 = !DILocation(line: 1698, column: 2, scope: !5430)
!5471 = !DILocation(line: 1699, column: 25, scope: !5430)
!5472 = !DILocation(line: 1699, column: 2, scope: !5430)
!5473 = !DILocation(line: 1701, column: 26, scope: !5430)
!5474 = !DILocation(line: 1701, column: 31, scope: !5430)
!5475 = !DILocation(line: 1701, column: 43, scope: !5430)
!5476 = !DILocation(line: 409, column: 2, scope: !4111, inlinedAt: !5432)
!5477 = !DILocation(line: 409, column: 2, scope: !4116, inlinedAt: !5432)
!5478 = !DILocation(line: 409, column: 2, scope: !4117, inlinedAt: !5432)
!5479 = !DILocation(line: 409, column: 2, scope: !4124, inlinedAt: !5432)
!5480 = !DILocation(line: 409, column: 2, scope: !4127, inlinedAt: !5432)
!5481 = !DILocation(line: 1702, column: 16, scope: !5430)
!5482 = !DILocation(line: 1702, column: 21, scope: !5430)
!5483 = !DILocation(line: 1702, column: 2, scope: !5430)
!5484 = !DILocation(line: 1703, column: 1, scope: !5430)
!5485 = distinct !DISubprogram(name: "input_dev_toggle", scope: !3, file: !3, line: 1669, type: !5486, scopeLine: 1670, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!5486 = !DISubroutineType(types: !5487)
!5487 = !{null, !119, !457}
!5488 = !DILocalVariable(name: "dev", arg: 1, scope: !5485, file: !3, line: 1669, type: !119)
!5489 = !DILocation(line: 1669, column: 48, scope: !5485)
!5490 = !DILocalVariable(name: "activate", arg: 2, scope: !5485, file: !3, line: 1669, type: !457)
!5491 = !DILocation(line: 1669, column: 58, scope: !5485)
!5492 = !DILocation(line: 1671, column: 7, scope: !5493)
!5493 = distinct !DILexicalBlock(scope: !5485, file: !3, line: 1671, column: 6)
!5494 = !DILocation(line: 1671, column: 12, scope: !5493)
!5495 = !DILocation(line: 1671, column: 6, scope: !5485)
!5496 = !DILocation(line: 1672, column: 3, scope: !5493)
!5497 = !DILocation(line: 1674, column: 2, scope: !5485)
!5498 = !DILocalVariable(name: "i", scope: !5499, file: !3, line: 1674, type: !113)
!5499 = distinct !DILexicalBlock(scope: !5485, file: !3, line: 1674, column: 2)
!5500 = !DILocation(line: 1674, column: 2, scope: !5499)
!5501 = !DILocalVariable(name: "active", scope: !5499, file: !3, line: 1674, type: !457)
!5502 = !DILocation(line: 1674, column: 2, scope: !5503)
!5503 = distinct !DILexicalBlock(scope: !5499, file: !3, line: 1674, column: 2)
!5504 = !DILocation(line: 1674, column: 2, scope: !5505)
!5505 = distinct !DILexicalBlock(scope: !5499, file: !3, line: 1674, column: 2)
!5506 = !DILocation(line: 1674, column: 2, scope: !5507)
!5507 = distinct !DILexicalBlock(scope: !5505, file: !3, line: 1674, column: 2)
!5508 = !DILocation(line: 1674, column: 2, scope: !5509)
!5509 = distinct !DILexicalBlock(scope: !5507, file: !3, line: 1674, column: 2)
!5510 = !DILocation(line: 1674, column: 2, scope: !5511)
!5511 = distinct !DILexicalBlock(scope: !5509, file: !3, line: 1674, column: 2)
!5512 = distinct !{!5512, !5504, !5504}
!5513 = !DILocation(line: 1675, column: 2, scope: !5485)
!5514 = !DILocalVariable(name: "i", scope: !5515, file: !3, line: 1675, type: !113)
!5515 = distinct !DILexicalBlock(scope: !5485, file: !3, line: 1675, column: 2)
!5516 = !DILocation(line: 1675, column: 2, scope: !5515)
!5517 = !DILocalVariable(name: "active", scope: !5515, file: !3, line: 1675, type: !457)
!5518 = !DILocation(line: 1675, column: 2, scope: !5519)
!5519 = distinct !DILexicalBlock(scope: !5515, file: !3, line: 1675, column: 2)
!5520 = !DILocation(line: 1675, column: 2, scope: !5521)
!5521 = distinct !DILexicalBlock(scope: !5515, file: !3, line: 1675, column: 2)
!5522 = !DILocation(line: 1675, column: 2, scope: !5523)
!5523 = distinct !DILexicalBlock(scope: !5521, file: !3, line: 1675, column: 2)
!5524 = !DILocation(line: 1675, column: 2, scope: !5525)
!5525 = distinct !DILexicalBlock(scope: !5523, file: !3, line: 1675, column: 2)
!5526 = !DILocation(line: 1675, column: 2, scope: !5527)
!5527 = distinct !DILexicalBlock(scope: !5525, file: !3, line: 1675, column: 2)
!5528 = distinct !{!5528, !5520, !5520}
!5529 = !DILocation(line: 1677, column: 6, scope: !5530)
!5530 = distinct !DILexicalBlock(scope: !5485, file: !3, line: 1677, column: 6)
!5531 = !DILocation(line: 1677, column: 15, scope: !5530)
!5532 = !DILocation(line: 1677, column: 35, scope: !5530)
!5533 = !DILocation(line: 1677, column: 40, scope: !5530)
!5534 = !DILocation(line: 1677, column: 18, scope: !5530)
!5535 = !DILocation(line: 1677, column: 6, scope: !5485)
!5536 = !DILocation(line: 1678, column: 3, scope: !5537)
!5537 = distinct !DILexicalBlock(scope: !5530, file: !3, line: 1677, column: 48)
!5538 = !DILocation(line: 1678, column: 8, scope: !5537)
!5539 = !DILocation(line: 1678, column: 14, scope: !5537)
!5540 = !DILocation(line: 1678, column: 39, scope: !5537)
!5541 = !DILocation(line: 1678, column: 44, scope: !5537)
!5542 = !DILocation(line: 1679, column: 3, scope: !5537)
!5543 = !DILocation(line: 1679, column: 8, scope: !5537)
!5544 = !DILocation(line: 1679, column: 14, scope: !5537)
!5545 = !DILocation(line: 1679, column: 38, scope: !5537)
!5546 = !DILocation(line: 1679, column: 43, scope: !5537)
!5547 = !DILocation(line: 1680, column: 2, scope: !5537)
!5548 = !DILocation(line: 1681, column: 1, scope: !5485)
!5549 = distinct !DISubprogram(name: "input_dev_release_keys", scope: !3, file: !3, line: 703, type: !3121, scopeLine: 704, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!5550 = !DILocalVariable(name: "dev", arg: 1, scope: !5549, file: !3, line: 703, type: !119)
!5551 = !DILocation(line: 703, column: 54, scope: !5549)
!5552 = !DILocalVariable(name: "need_sync", scope: !5549, file: !3, line: 705, type: !457)
!5553 = !DILocation(line: 705, column: 7, scope: !5549)
!5554 = !DILocalVariable(name: "code", scope: !5549, file: !3, line: 706, type: !113)
!5555 = !DILocation(line: 706, column: 6, scope: !5549)
!5556 = !DILocation(line: 708, column: 33, scope: !5557)
!5557 = distinct !DILexicalBlock(scope: !5549, file: !3, line: 708, column: 6)
!5558 = !DILocation(line: 708, column: 38, scope: !5557)
!5559 = !DILocation(line: 708, column: 6, scope: !5557)
!5560 = !DILocation(line: 708, column: 6, scope: !5549)
!5561 = !DILocation(line: 709, column: 3, scope: !5562)
!5562 = distinct !DILexicalBlock(scope: !5563, file: !3, line: 709, column: 3)
!5563 = distinct !DILexicalBlock(scope: !5557, file: !3, line: 708, column: 54)
!5564 = !DILocation(line: 709, column: 3, scope: !5565)
!5565 = distinct !DILexicalBlock(scope: !5562, file: !3, line: 709, column: 3)
!5566 = !DILocation(line: 710, column: 21, scope: !5567)
!5567 = distinct !DILexicalBlock(scope: !5565, file: !3, line: 709, column: 45)
!5568 = !DILocation(line: 710, column: 34, scope: !5567)
!5569 = !DILocation(line: 710, column: 4, scope: !5567)
!5570 = !DILocation(line: 711, column: 14, scope: !5567)
!5571 = !DILocation(line: 712, column: 3, scope: !5567)
!5572 = distinct !{!5572, !5561, !5573}
!5573 = !DILocation(line: 712, column: 3, scope: !5562)
!5574 = !DILocation(line: 714, column: 7, scope: !5575)
!5575 = distinct !DILexicalBlock(scope: !5563, file: !3, line: 714, column: 7)
!5576 = !DILocation(line: 714, column: 7, scope: !5563)
!5577 = !DILocation(line: 715, column: 21, scope: !5575)
!5578 = !DILocation(line: 715, column: 4, scope: !5575)
!5579 = !DILocation(line: 717, column: 10, scope: !5563)
!5580 = !DILocation(line: 717, column: 15, scope: !5563)
!5581 = !DILocation(line: 717, column: 3, scope: !5563)
!5582 = !DILocation(line: 718, column: 2, scope: !5563)
!5583 = !DILocation(line: 719, column: 1, scope: !5549)
!5584 = distinct !DISubprogram(name: "input_devnode", scope: !3, file: !3, line: 1790, type: !3744, scopeLine: 1791, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!5585 = !DILocalVariable(name: "dev", arg: 1, scope: !5584, file: !3, line: 1790, type: !3427)
!5586 = !DILocation(line: 1790, column: 43, scope: !5584)
!5587 = !DILocalVariable(name: "mode", arg: 2, scope: !5584, file: !3, line: 1790, type: !3447)
!5588 = !DILocation(line: 1790, column: 57, scope: !5584)
!5589 = !DILocation(line: 1792, column: 52, scope: !5584)
!5590 = !DILocation(line: 1792, column: 43, scope: !5584)
!5591 = !DILocation(line: 1792, column: 9, scope: !5584)
!5592 = !DILocation(line: 1792, column: 2, scope: !5584)
!5593 = !DILocalVariable(name: "i", arg: 1, scope: !5594, file: !5595, line: 163, type: !113)
!5594 = distinct !DISubprogram(name: "arch_atomic_add_return", scope: !5595, file: !5595, line: 163, type: !5596, scopeLine: 164, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!5595 = !DIFile(filename: "./arch/x86/include/asm/atomic.h", directory: "/home/lizy2001/genbc/linux")
!5596 = !DISubroutineType(types: !5597)
!5597 = !{!113, !113, !5598}
!5598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !761, size: 64)
!5599 = !DILocation(line: 163, column: 55, scope: !5594, inlinedAt: !5600)
!5600 = distinct !DILocation(line: 286, column: 9, scope: !5601, inlinedAt: !5605)
!5601 = distinct !DISubprogram(name: "arch_atomic_inc_return", scope: !5602, file: !5602, line: 284, type: !5603, scopeLine: 285, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!5602 = !DIFile(filename: "./include/linux/atomic-arch-fallback.h", directory: "/home/lizy2001/genbc/linux")
!5603 = !DISubroutineType(types: !5604)
!5604 = !{!113, !5598}
!5605 = distinct !DILocation(line: 251, column: 9, scope: !5606, inlinedAt: !5608)
!5606 = distinct !DISubprogram(name: "atomic_inc_return", scope: !5607, file: !5607, line: 248, type: !5603, scopeLine: 249, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!5607 = !DIFile(filename: "./include/asm-generic/atomic-instrumented.h", directory: "/home/lizy2001/genbc/linux")
!5608 = distinct !DILocation(line: 1827, column: 24, scope: !5609)
!5609 = distinct !DILexicalBlock(scope: !5610, file: !3, line: 1816, column: 11)
!5610 = distinct !DILexicalBlock(scope: !3895, file: !3, line: 1816, column: 6)
!5611 = !DILocalVariable(name: "v", arg: 2, scope: !5594, file: !5595, line: 163, type: !5598)
!5612 = !DILocation(line: 163, column: 68, scope: !5594, inlinedAt: !5600)
!5613 = !DILocalVariable(name: "__ret", scope: !5614, file: !5595, line: 165, type: !113)
!5614 = distinct !DILexicalBlock(scope: !5594, file: !5595, line: 165, column: 13)
!5615 = !DILocation(line: 165, column: 13, scope: !5614, inlinedAt: !5600)
!5616 = !DILocalVariable(name: "v", arg: 1, scope: !5601, file: !5602, line: 284, type: !5598)
!5617 = !DILocation(line: 284, column: 34, scope: !5601, inlinedAt: !5605)
!5618 = !DILocalVariable(name: "v", arg: 1, scope: !5619, file: !4506, line: 99, type: !4509)
!5619 = distinct !DISubprogram(name: "instrument_atomic_read_write", scope: !4506, file: !4506, line: 99, type: !4507, scopeLine: 100, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!5620 = !DILocation(line: 99, column: 79, scope: !5619, inlinedAt: !5621)
!5621 = distinct !DILocation(line: 250, column: 2, scope: !5606, inlinedAt: !5608)
!5622 = !DILocalVariable(name: "size", arg: 2, scope: !5619, file: !4506, line: 99, type: !547)
!5623 = !DILocation(line: 99, column: 89, scope: !5619, inlinedAt: !5621)
!5624 = !DILocalVariable(name: "v", arg: 1, scope: !5606, file: !5607, line: 248, type: !5598)
!5625 = !DILocation(line: 248, column: 29, scope: !5606, inlinedAt: !5608)
!5626 = !DILocation(line: 327, column: 67, scope: !4055, inlinedAt: !5627)
!5627 = distinct !DILocation(line: 1821, column: 3, scope: !5628)
!5628 = distinct !DILexicalBlock(scope: !5609, file: !3, line: 1821, column: 3)
!5629 = !DILocalVariable(name: "dev", scope: !3895, file: !3, line: 1813, type: !119)
!5630 = !DILocation(line: 1813, column: 20, scope: !3895)
!5631 = !DILocation(line: 1815, column: 8, scope: !3895)
!5632 = !DILocation(line: 1815, column: 6, scope: !3895)
!5633 = !DILocation(line: 1816, column: 6, scope: !5610)
!5634 = !DILocation(line: 1816, column: 6, scope: !3895)
!5635 = !DILocation(line: 1817, column: 3, scope: !5609)
!5636 = !DILocation(line: 1817, column: 8, scope: !5609)
!5637 = !DILocation(line: 1817, column: 12, scope: !5609)
!5638 = !DILocation(line: 1817, column: 17, scope: !5609)
!5639 = !DILocation(line: 1818, column: 3, scope: !5609)
!5640 = !DILocation(line: 1818, column: 8, scope: !5609)
!5641 = !DILocation(line: 1818, column: 12, scope: !5609)
!5642 = !DILocation(line: 1818, column: 18, scope: !5609)
!5643 = !DILocation(line: 1819, column: 22, scope: !5609)
!5644 = !DILocation(line: 1819, column: 27, scope: !5609)
!5645 = !DILocation(line: 1819, column: 3, scope: !5609)
!5646 = !DILocation(line: 1820, column: 3, scope: !5609)
!5647 = !DILocation(line: 1820, column: 3, scope: !5648)
!5648 = distinct !DILexicalBlock(scope: !5609, file: !3, line: 1820, column: 3)
!5649 = !DILocation(line: 1821, column: 3, scope: !5609)
!5650 = !DILocation(line: 1821, column: 3, scope: !5628)
!5651 = !DILocation(line: 329, column: 10, scope: !4055, inlinedAt: !5627)
!5652 = !DILocation(line: 329, column: 16, scope: !4055, inlinedAt: !5627)
!5653 = !DILocation(line: 1822, column: 3, scope: !5609)
!5654 = !DILocation(line: 1823, column: 19, scope: !5609)
!5655 = !DILocation(line: 1823, column: 24, scope: !5609)
!5656 = !DILocation(line: 1823, column: 3, scope: !5609)
!5657 = !DILocation(line: 1824, column: 19, scope: !5609)
!5658 = !DILocation(line: 1824, column: 24, scope: !5609)
!5659 = !DILocation(line: 1824, column: 3, scope: !5609)
!5660 = !DILocation(line: 1826, column: 17, scope: !5609)
!5661 = !DILocation(line: 1826, column: 22, scope: !5609)
!5662 = !DILocation(line: 250, column: 31, scope: !5606, inlinedAt: !5608)
!5663 = !DILocation(line: 101, column: 20, scope: !5619, inlinedAt: !5621)
!5664 = !DILocation(line: 101, column: 23, scope: !5619, inlinedAt: !5621)
!5665 = !DILocation(line: 101, column: 2, scope: !5619, inlinedAt: !5621)
!5666 = !DILocation(line: 102, column: 2, scope: !5619, inlinedAt: !5621)
!5667 = !DILocation(line: 251, column: 32, scope: !5606, inlinedAt: !5608)
!5668 = !DILocation(line: 286, column: 35, scope: !5601, inlinedAt: !5605)
!5669 = !DILocation(line: 165, column: 9, scope: !5594, inlinedAt: !5600)
!5670 = !{i32 -2146468970}
!5671 = !DILocation(line: 165, column: 11, scope: !5594, inlinedAt: !5600)
!5672 = !DILocation(line: 1827, column: 9, scope: !5609)
!5673 = !DILocation(line: 1826, column: 3, scope: !5609)
!5674 = !DILocation(line: 1829, column: 3, scope: !5609)
!5675 = !DILocation(line: 1830, column: 2, scope: !5609)
!5676 = !DILocation(line: 1832, column: 9, scope: !3895)
!5677 = !DILocation(line: 1832, column: 2, scope: !3895)
!5678 = distinct !DISubprogram(name: "kzalloc", scope: !100, file: !100, line: 662, type: !5679, scopeLine: 663, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!5679 = !DISubroutineType(types: !5680)
!5680 = !{!111, !547, !757}
!5681 = !DILocalVariable(name: "s", arg: 1, scope: !5682, file: !100, line: 445, type: !980)
!5682 = distinct !DISubprogram(name: "kmem_cache_alloc_trace", scope: !100, file: !100, line: 445, type: !5683, scopeLine: 447, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!5683 = !DISubroutineType(types: !5684)
!5684 = !{!111, !980, !757, !547}
!5685 = !DILocation(line: 445, column: 72, scope: !5682, inlinedAt: !5686)
!5686 = distinct !DILocation(line: 552, column: 10, scope: !5687, inlinedAt: !5690)
!5687 = distinct !DILexicalBlock(scope: !5688, file: !100, line: 540, column: 34)
!5688 = distinct !DILexicalBlock(scope: !5689, file: !100, line: 540, column: 6)
!5689 = distinct !DISubprogram(name: "kmalloc", scope: !100, file: !100, line: 538, type: !5679, scopeLine: 539, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!5690 = distinct !DILocation(line: 664, column: 9, scope: !5678)
!5691 = !DILocalVariable(name: "flags", arg: 2, scope: !5682, file: !100, line: 446, type: !757)
!5692 = !DILocation(line: 446, column: 9, scope: !5682, inlinedAt: !5686)
!5693 = !DILocalVariable(name: "size", arg: 3, scope: !5682, file: !100, line: 446, type: !547)
!5694 = !DILocation(line: 446, column: 23, scope: !5682, inlinedAt: !5686)
!5695 = !DILocalVariable(name: "ret", scope: !5682, file: !100, line: 448, type: !111)
!5696 = !DILocation(line: 448, column: 8, scope: !5682, inlinedAt: !5686)
!5697 = !DILocalVariable(name: "flags", arg: 1, scope: !5698, file: !100, line: 318, type: !757)
!5698 = distinct !DISubprogram(name: "kmalloc_type", scope: !100, file: !100, line: 318, type: !5699, scopeLine: 319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!5699 = !DISubroutineType(types: !5700)
!5700 = !{!99, !757}
!5701 = !DILocation(line: 318, column: 67, scope: !5698, inlinedAt: !5702)
!5702 = distinct !DILocation(line: 553, column: 20, scope: !5687, inlinedAt: !5690)
!5703 = !DILocalVariable(name: "size", arg: 1, scope: !5704, file: !100, line: 346, type: !547)
!5704 = distinct !DISubprogram(name: "kmalloc_index", scope: !100, file: !100, line: 346, type: !5705, scopeLine: 347, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!5705 = !DISubroutineType(types: !5706)
!5706 = !{!7, !547}
!5707 = !DILocation(line: 346, column: 58, scope: !5704, inlinedAt: !5708)
!5708 = distinct !DILocation(line: 547, column: 11, scope: !5687, inlinedAt: !5690)
!5709 = !DILocalVariable(name: "size", arg: 1, scope: !5710, file: !100, line: 472, type: !547)
!5710 = distinct !DISubprogram(name: "kmalloc_order_trace", scope: !100, file: !100, line: 472, type: !5711, scopeLine: 473, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!5711 = !DISubroutineType(types: !5712)
!5712 = !{!111, !547, !757, !7}
!5713 = !DILocation(line: 472, column: 28, scope: !5710, inlinedAt: !5714)
!5714 = distinct !DILocation(line: 481, column: 9, scope: !5715, inlinedAt: !5716)
!5715 = distinct !DISubprogram(name: "kmalloc_large", scope: !100, file: !100, line: 478, type: !5679, scopeLine: 479, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!5716 = distinct !DILocation(line: 545, column: 11, scope: !5717, inlinedAt: !5690)
!5717 = distinct !DILexicalBlock(scope: !5687, file: !100, line: 544, column: 7)
!5718 = !DILocalVariable(name: "flags", arg: 2, scope: !5710, file: !100, line: 472, type: !757)
!5719 = !DILocation(line: 472, column: 40, scope: !5710, inlinedAt: !5714)
!5720 = !DILocalVariable(name: "order", arg: 3, scope: !5710, file: !100, line: 472, type: !7)
!5721 = !DILocation(line: 472, column: 60, scope: !5710, inlinedAt: !5714)
!5722 = !DILocalVariable(name: "size", arg: 1, scope: !5715, file: !100, line: 478, type: !547)
!5723 = !DILocation(line: 478, column: 51, scope: !5715, inlinedAt: !5716)
!5724 = !DILocalVariable(name: "flags", arg: 2, scope: !5715, file: !100, line: 478, type: !757)
!5725 = !DILocation(line: 478, column: 63, scope: !5715, inlinedAt: !5716)
!5726 = !DILocalVariable(name: "order", scope: !5715, file: !100, line: 480, type: !7)
!5727 = !DILocation(line: 480, column: 15, scope: !5715, inlinedAt: !5716)
!5728 = !DILocalVariable(name: "size", arg: 1, scope: !5689, file: !100, line: 538, type: !547)
!5729 = !DILocation(line: 538, column: 45, scope: !5689, inlinedAt: !5690)
!5730 = !DILocalVariable(name: "flags", arg: 2, scope: !5689, file: !100, line: 538, type: !757)
!5731 = !DILocation(line: 538, column: 57, scope: !5689, inlinedAt: !5690)
!5732 = !DILocalVariable(name: "index", scope: !5687, file: !100, line: 542, type: !7)
!5733 = !DILocation(line: 542, column: 16, scope: !5687, inlinedAt: !5690)
!5734 = !DILocalVariable(name: "size", arg: 1, scope: !5678, file: !100, line: 662, type: !547)
!5735 = !DILocation(line: 662, column: 36, scope: !5678)
!5736 = !DILocalVariable(name: "flags", arg: 2, scope: !5678, file: !100, line: 662, type: !757)
!5737 = !DILocation(line: 662, column: 48, scope: !5678)
!5738 = !DILocation(line: 664, column: 17, scope: !5678)
!5739 = !DILocation(line: 664, column: 23, scope: !5678)
!5740 = !DILocation(line: 664, column: 29, scope: !5678)
!5741 = !DILocation(line: 540, column: 27, scope: !5688, inlinedAt: !5690)
!5742 = !DILocation(line: 540, column: 6, scope: !5688, inlinedAt: !5690)
!5743 = !DILocation(line: 540, column: 6, scope: !5689, inlinedAt: !5690)
!5744 = !DILocation(line: 544, column: 7, scope: !5717, inlinedAt: !5690)
!5745 = !DILocation(line: 544, column: 12, scope: !5717, inlinedAt: !5690)
!5746 = !DILocation(line: 544, column: 7, scope: !5687, inlinedAt: !5690)
!5747 = !DILocation(line: 545, column: 25, scope: !5717, inlinedAt: !5690)
!5748 = !DILocation(line: 545, column: 31, scope: !5717, inlinedAt: !5690)
!5749 = !DILocation(line: 480, column: 33, scope: !5715, inlinedAt: !5716)
!5750 = !DILocation(line: 480, column: 23, scope: !5715, inlinedAt: !5716)
!5751 = !DILocation(line: 481, column: 29, scope: !5715, inlinedAt: !5716)
!5752 = !DILocation(line: 481, column: 35, scope: !5715, inlinedAt: !5716)
!5753 = !DILocation(line: 481, column: 42, scope: !5715, inlinedAt: !5716)
!5754 = !DILocation(line: 474, column: 23, scope: !5710, inlinedAt: !5714)
!5755 = !DILocation(line: 474, column: 29, scope: !5710, inlinedAt: !5714)
!5756 = !DILocation(line: 474, column: 36, scope: !5710, inlinedAt: !5714)
!5757 = !DILocation(line: 474, column: 9, scope: !5710, inlinedAt: !5714)
!5758 = !DILocation(line: 545, column: 4, scope: !5717, inlinedAt: !5690)
!5759 = !DILocation(line: 547, column: 25, scope: !5687, inlinedAt: !5690)
!5760 = !DILocation(line: 348, column: 7, scope: !5761, inlinedAt: !5708)
!5761 = distinct !DILexicalBlock(scope: !5704, file: !100, line: 348, column: 6)
!5762 = !DILocation(line: 348, column: 6, scope: !5704, inlinedAt: !5708)
!5763 = !DILocation(line: 349, column: 3, scope: !5761, inlinedAt: !5708)
!5764 = !DILocation(line: 351, column: 6, scope: !5765, inlinedAt: !5708)
!5765 = distinct !DILexicalBlock(scope: !5704, file: !100, line: 351, column: 6)
!5766 = !DILocation(line: 351, column: 11, scope: !5765, inlinedAt: !5708)
!5767 = !DILocation(line: 351, column: 6, scope: !5704, inlinedAt: !5708)
!5768 = !DILocation(line: 352, column: 3, scope: !5765, inlinedAt: !5708)
!5769 = !DILocation(line: 354, column: 32, scope: !5770, inlinedAt: !5708)
!5770 = distinct !DILexicalBlock(scope: !5704, file: !100, line: 354, column: 6)
!5771 = !DILocation(line: 354, column: 37, scope: !5770, inlinedAt: !5708)
!5772 = !DILocation(line: 354, column: 42, scope: !5770, inlinedAt: !5708)
!5773 = !DILocation(line: 354, column: 45, scope: !5770, inlinedAt: !5708)
!5774 = !DILocation(line: 354, column: 50, scope: !5770, inlinedAt: !5708)
!5775 = !DILocation(line: 354, column: 6, scope: !5704, inlinedAt: !5708)
!5776 = !DILocation(line: 355, column: 3, scope: !5770, inlinedAt: !5708)
!5777 = !DILocation(line: 356, column: 32, scope: !5778, inlinedAt: !5708)
!5778 = distinct !DILexicalBlock(scope: !5704, file: !100, line: 356, column: 6)
!5779 = !DILocation(line: 356, column: 37, scope: !5778, inlinedAt: !5708)
!5780 = !DILocation(line: 356, column: 43, scope: !5778, inlinedAt: !5708)
!5781 = !DILocation(line: 356, column: 46, scope: !5778, inlinedAt: !5708)
!5782 = !DILocation(line: 356, column: 51, scope: !5778, inlinedAt: !5708)
!5783 = !DILocation(line: 356, column: 6, scope: !5704, inlinedAt: !5708)
!5784 = !DILocation(line: 357, column: 3, scope: !5778, inlinedAt: !5708)
!5785 = !DILocation(line: 358, column: 6, scope: !5786, inlinedAt: !5708)
!5786 = distinct !DILexicalBlock(scope: !5704, file: !100, line: 358, column: 6)
!5787 = !DILocation(line: 358, column: 11, scope: !5786, inlinedAt: !5708)
!5788 = !DILocation(line: 358, column: 6, scope: !5704, inlinedAt: !5708)
!5789 = !DILocation(line: 358, column: 26, scope: !5786, inlinedAt: !5708)
!5790 = !DILocation(line: 359, column: 6, scope: !5791, inlinedAt: !5708)
!5791 = distinct !DILexicalBlock(scope: !5704, file: !100, line: 359, column: 6)
!5792 = !DILocation(line: 359, column: 11, scope: !5791, inlinedAt: !5708)
!5793 = !DILocation(line: 359, column: 6, scope: !5704, inlinedAt: !5708)
!5794 = !DILocation(line: 359, column: 26, scope: !5791, inlinedAt: !5708)
!5795 = !DILocation(line: 360, column: 6, scope: !5796, inlinedAt: !5708)
!5796 = distinct !DILexicalBlock(scope: !5704, file: !100, line: 360, column: 6)
!5797 = !DILocation(line: 360, column: 11, scope: !5796, inlinedAt: !5708)
!5798 = !DILocation(line: 360, column: 6, scope: !5704, inlinedAt: !5708)
!5799 = !DILocation(line: 360, column: 26, scope: !5796, inlinedAt: !5708)
!5800 = !DILocation(line: 361, column: 6, scope: !5801, inlinedAt: !5708)
!5801 = distinct !DILexicalBlock(scope: !5704, file: !100, line: 361, column: 6)
!5802 = !DILocation(line: 361, column: 11, scope: !5801, inlinedAt: !5708)
!5803 = !DILocation(line: 361, column: 6, scope: !5704, inlinedAt: !5708)
!5804 = !DILocation(line: 361, column: 26, scope: !5801, inlinedAt: !5708)
!5805 = !DILocation(line: 362, column: 6, scope: !5806, inlinedAt: !5708)
!5806 = distinct !DILexicalBlock(scope: !5704, file: !100, line: 362, column: 6)
!5807 = !DILocation(line: 362, column: 11, scope: !5806, inlinedAt: !5708)
!5808 = !DILocation(line: 362, column: 6, scope: !5704, inlinedAt: !5708)
!5809 = !DILocation(line: 362, column: 26, scope: !5806, inlinedAt: !5708)
!5810 = !DILocation(line: 363, column: 6, scope: !5811, inlinedAt: !5708)
!5811 = distinct !DILexicalBlock(scope: !5704, file: !100, line: 363, column: 6)
!5812 = !DILocation(line: 363, column: 11, scope: !5811, inlinedAt: !5708)
!5813 = !DILocation(line: 363, column: 6, scope: !5704, inlinedAt: !5708)
!5814 = !DILocation(line: 363, column: 26, scope: !5811, inlinedAt: !5708)
!5815 = !DILocation(line: 364, column: 6, scope: !5816, inlinedAt: !5708)
!5816 = distinct !DILexicalBlock(scope: !5704, file: !100, line: 364, column: 6)
!5817 = !DILocation(line: 364, column: 11, scope: !5816, inlinedAt: !5708)
!5818 = !DILocation(line: 364, column: 6, scope: !5704, inlinedAt: !5708)
!5819 = !DILocation(line: 364, column: 26, scope: !5816, inlinedAt: !5708)
!5820 = !DILocation(line: 365, column: 6, scope: !5821, inlinedAt: !5708)
!5821 = distinct !DILexicalBlock(scope: !5704, file: !100, line: 365, column: 6)
!5822 = !DILocation(line: 365, column: 11, scope: !5821, inlinedAt: !5708)
!5823 = !DILocation(line: 365, column: 6, scope: !5704, inlinedAt: !5708)
!5824 = !DILocation(line: 365, column: 26, scope: !5821, inlinedAt: !5708)
!5825 = !DILocation(line: 366, column: 6, scope: !5826, inlinedAt: !5708)
!5826 = distinct !DILexicalBlock(scope: !5704, file: !100, line: 366, column: 6)
!5827 = !DILocation(line: 366, column: 11, scope: !5826, inlinedAt: !5708)
!5828 = !DILocation(line: 366, column: 6, scope: !5704, inlinedAt: !5708)
!5829 = !DILocation(line: 366, column: 26, scope: !5826, inlinedAt: !5708)
!5830 = !DILocation(line: 367, column: 6, scope: !5831, inlinedAt: !5708)
!5831 = distinct !DILexicalBlock(scope: !5704, file: !100, line: 367, column: 6)
!5832 = !DILocation(line: 367, column: 11, scope: !5831, inlinedAt: !5708)
!5833 = !DILocation(line: 367, column: 6, scope: !5704, inlinedAt: !5708)
!5834 = !DILocation(line: 367, column: 26, scope: !5831, inlinedAt: !5708)
!5835 = !DILocation(line: 368, column: 6, scope: !5836, inlinedAt: !5708)
!5836 = distinct !DILexicalBlock(scope: !5704, file: !100, line: 368, column: 6)
!5837 = !DILocation(line: 368, column: 11, scope: !5836, inlinedAt: !5708)
!5838 = !DILocation(line: 368, column: 6, scope: !5704, inlinedAt: !5708)
!5839 = !DILocation(line: 368, column: 26, scope: !5836, inlinedAt: !5708)
!5840 = !DILocation(line: 369, column: 6, scope: !5841, inlinedAt: !5708)
!5841 = distinct !DILexicalBlock(scope: !5704, file: !100, line: 369, column: 6)
!5842 = !DILocation(line: 369, column: 11, scope: !5841, inlinedAt: !5708)
!5843 = !DILocation(line: 369, column: 6, scope: !5704, inlinedAt: !5708)
!5844 = !DILocation(line: 369, column: 26, scope: !5841, inlinedAt: !5708)
!5845 = !DILocation(line: 370, column: 6, scope: !5846, inlinedAt: !5708)
!5846 = distinct !DILexicalBlock(scope: !5704, file: !100, line: 370, column: 6)
!5847 = !DILocation(line: 370, column: 11, scope: !5846, inlinedAt: !5708)
!5848 = !DILocation(line: 370, column: 6, scope: !5704, inlinedAt: !5708)
!5849 = !DILocation(line: 370, column: 26, scope: !5846, inlinedAt: !5708)
!5850 = !DILocation(line: 371, column: 6, scope: !5851, inlinedAt: !5708)
!5851 = distinct !DILexicalBlock(scope: !5704, file: !100, line: 371, column: 6)
!5852 = !DILocation(line: 371, column: 11, scope: !5851, inlinedAt: !5708)
!5853 = !DILocation(line: 371, column: 6, scope: !5704, inlinedAt: !5708)
!5854 = !DILocation(line: 371, column: 26, scope: !5851, inlinedAt: !5708)
!5855 = !DILocation(line: 372, column: 6, scope: !5856, inlinedAt: !5708)
!5856 = distinct !DILexicalBlock(scope: !5704, file: !100, line: 372, column: 6)
!5857 = !DILocation(line: 372, column: 11, scope: !5856, inlinedAt: !5708)
!5858 = !DILocation(line: 372, column: 6, scope: !5704, inlinedAt: !5708)
!5859 = !DILocation(line: 372, column: 26, scope: !5856, inlinedAt: !5708)
!5860 = !DILocation(line: 373, column: 6, scope: !5861, inlinedAt: !5708)
!5861 = distinct !DILexicalBlock(scope: !5704, file: !100, line: 373, column: 6)
!5862 = !DILocation(line: 373, column: 11, scope: !5861, inlinedAt: !5708)
!5863 = !DILocation(line: 373, column: 6, scope: !5704, inlinedAt: !5708)
!5864 = !DILocation(line: 373, column: 26, scope: !5861, inlinedAt: !5708)
!5865 = !DILocation(line: 374, column: 6, scope: !5866, inlinedAt: !5708)
!5866 = distinct !DILexicalBlock(scope: !5704, file: !100, line: 374, column: 6)
!5867 = !DILocation(line: 374, column: 11, scope: !5866, inlinedAt: !5708)
!5868 = !DILocation(line: 374, column: 6, scope: !5704, inlinedAt: !5708)
!5869 = !DILocation(line: 374, column: 26, scope: !5866, inlinedAt: !5708)
!5870 = !DILocation(line: 375, column: 6, scope: !5871, inlinedAt: !5708)
!5871 = distinct !DILexicalBlock(scope: !5704, file: !100, line: 375, column: 6)
!5872 = !DILocation(line: 375, column: 11, scope: !5871, inlinedAt: !5708)
!5873 = !DILocation(line: 375, column: 6, scope: !5704, inlinedAt: !5708)
!5874 = !DILocation(line: 375, column: 27, scope: !5871, inlinedAt: !5708)
!5875 = !DILocation(line: 376, column: 6, scope: !5876, inlinedAt: !5708)
!5876 = distinct !DILexicalBlock(scope: !5704, file: !100, line: 376, column: 6)
!5877 = !DILocation(line: 376, column: 11, scope: !5876, inlinedAt: !5708)
!5878 = !DILocation(line: 376, column: 6, scope: !5704, inlinedAt: !5708)
!5879 = !DILocation(line: 376, column: 32, scope: !5876, inlinedAt: !5708)
!5880 = !DILocation(line: 377, column: 6, scope: !5881, inlinedAt: !5708)
!5881 = distinct !DILexicalBlock(scope: !5704, file: !100, line: 377, column: 6)
!5882 = !DILocation(line: 377, column: 11, scope: !5881, inlinedAt: !5708)
!5883 = !DILocation(line: 377, column: 6, scope: !5704, inlinedAt: !5708)
!5884 = !DILocation(line: 377, column: 32, scope: !5881, inlinedAt: !5708)
!5885 = !DILocation(line: 378, column: 6, scope: !5886, inlinedAt: !5708)
!5886 = distinct !DILexicalBlock(scope: !5704, file: !100, line: 378, column: 6)
!5887 = !DILocation(line: 378, column: 11, scope: !5886, inlinedAt: !5708)
!5888 = !DILocation(line: 378, column: 6, scope: !5704, inlinedAt: !5708)
!5889 = !DILocation(line: 378, column: 32, scope: !5886, inlinedAt: !5708)
!5890 = !DILocation(line: 379, column: 6, scope: !5891, inlinedAt: !5708)
!5891 = distinct !DILexicalBlock(scope: !5704, file: !100, line: 379, column: 6)
!5892 = !DILocation(line: 379, column: 11, scope: !5891, inlinedAt: !5708)
!5893 = !DILocation(line: 379, column: 6, scope: !5704, inlinedAt: !5708)
!5894 = !DILocation(line: 379, column: 33, scope: !5891, inlinedAt: !5708)
!5895 = !DILocation(line: 380, column: 6, scope: !5896, inlinedAt: !5708)
!5896 = distinct !DILexicalBlock(scope: !5704, file: !100, line: 380, column: 6)
!5897 = !DILocation(line: 380, column: 11, scope: !5896, inlinedAt: !5708)
!5898 = !DILocation(line: 380, column: 6, scope: !5704, inlinedAt: !5708)
!5899 = !DILocation(line: 380, column: 33, scope: !5896, inlinedAt: !5708)
!5900 = !DILocation(line: 381, column: 6, scope: !5901, inlinedAt: !5708)
!5901 = distinct !DILexicalBlock(scope: !5704, file: !100, line: 381, column: 6)
!5902 = !DILocation(line: 381, column: 11, scope: !5901, inlinedAt: !5708)
!5903 = !DILocation(line: 381, column: 6, scope: !5704, inlinedAt: !5708)
!5904 = !DILocation(line: 381, column: 33, scope: !5901, inlinedAt: !5708)
!5905 = !DILocation(line: 382, column: 2, scope: !5906, inlinedAt: !5708)
!5906 = distinct !DILexicalBlock(scope: !5907, file: !100, line: 382, column: 2)
!5907 = distinct !DILexicalBlock(scope: !5704, file: !100, line: 382, column: 2)
!5908 = !{i32 -2142752795, i32 -2142752766, i32 -2142752720, i32 -2142752662, i32 -2142752608, i32 -2142752554, i32 -2142752499, i32 -2142752468}
!5909 = !DILocation(line: 382, column: 2, scope: !5910, inlinedAt: !5708)
!5910 = distinct !DILexicalBlock(scope: !5911, file: !100, line: 382, column: 2)
!5911 = distinct !DILexicalBlock(scope: !5907, file: !100, line: 382, column: 2)
!5912 = !{i32 -2142752025, i32 -2142752018, i32 -2142751964, i32 -2142751933, i32 -2142751903}
!5913 = !DILocation(line: 382, column: 2, scope: !5911, inlinedAt: !5708)
!5914 = !DILocation(line: 386, column: 1, scope: !5704, inlinedAt: !5708)
!5915 = !DILocation(line: 547, column: 9, scope: !5687, inlinedAt: !5690)
!5916 = !DILocation(line: 549, column: 8, scope: !5917, inlinedAt: !5690)
!5917 = distinct !DILexicalBlock(scope: !5687, file: !100, line: 549, column: 7)
!5918 = !DILocation(line: 549, column: 7, scope: !5687, inlinedAt: !5690)
!5919 = !DILocation(line: 550, column: 4, scope: !5917, inlinedAt: !5690)
!5920 = !DILocation(line: 553, column: 33, scope: !5687, inlinedAt: !5690)
!5921 = !DILocation(line: 325, column: 6, scope: !5922, inlinedAt: !5702)
!5922 = distinct !DILexicalBlock(scope: !5698, file: !100, line: 325, column: 6)
!5923 = !DILocation(line: 325, column: 6, scope: !5698, inlinedAt: !5702)
!5924 = !DILocation(line: 326, column: 3, scope: !5922, inlinedAt: !5702)
!5925 = !DILocation(line: 332, column: 9, scope: !5698, inlinedAt: !5702)
!5926 = !DILocation(line: 332, column: 15, scope: !5698, inlinedAt: !5702)
!5927 = !DILocation(line: 332, column: 2, scope: !5698, inlinedAt: !5702)
!5928 = !DILocation(line: 336, column: 1, scope: !5698, inlinedAt: !5702)
!5929 = !DILocation(line: 553, column: 5, scope: !5687, inlinedAt: !5690)
!5930 = !DILocation(line: 553, column: 41, scope: !5687, inlinedAt: !5690)
!5931 = !DILocation(line: 554, column: 5, scope: !5687, inlinedAt: !5690)
!5932 = !DILocation(line: 554, column: 12, scope: !5687, inlinedAt: !5690)
!5933 = !DILocation(line: 448, column: 31, scope: !5682, inlinedAt: !5686)
!5934 = !DILocation(line: 448, column: 34, scope: !5682, inlinedAt: !5686)
!5935 = !DILocation(line: 448, column: 14, scope: !5682, inlinedAt: !5686)
!5936 = !DILocation(line: 450, column: 22, scope: !5682, inlinedAt: !5686)
!5937 = !DILocation(line: 450, column: 25, scope: !5682, inlinedAt: !5686)
!5938 = !DILocation(line: 450, column: 30, scope: !5682, inlinedAt: !5686)
!5939 = !DILocation(line: 450, column: 36, scope: !5682, inlinedAt: !5686)
!5940 = !DILocation(line: 450, column: 8, scope: !5682, inlinedAt: !5686)
!5941 = !DILocation(line: 450, column: 6, scope: !5682, inlinedAt: !5686)
!5942 = !DILocation(line: 451, column: 9, scope: !5682, inlinedAt: !5686)
!5943 = !DILocation(line: 552, column: 3, scope: !5687, inlinedAt: !5690)
!5944 = !DILocation(line: 557, column: 19, scope: !5689, inlinedAt: !5690)
!5945 = !DILocation(line: 557, column: 25, scope: !5689, inlinedAt: !5690)
!5946 = !DILocation(line: 557, column: 9, scope: !5689, inlinedAt: !5690)
!5947 = !DILocation(line: 557, column: 2, scope: !5689, inlinedAt: !5690)
!5948 = !DILocation(line: 558, column: 1, scope: !5689, inlinedAt: !5690)
!5949 = !DILocation(line: 664, column: 2, scope: !5678)
!5950 = distinct !DISubprogram(name: "INIT_LIST_HEAD", scope: !5951, file: !5951, line: 33, type: !5952, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!5951 = !DIFile(filename: "./include/linux/list.h", directory: "/home/lizy2001/genbc/linux")
!5952 = !DISubroutineType(types: !5953)
!5953 = !{null, !314}
!5954 = !DILocalVariable(name: "list", arg: 1, scope: !5950, file: !5951, line: 33, type: !314)
!5955 = !DILocation(line: 33, column: 53, scope: !5950)
!5956 = !DILocation(line: 35, column: 2, scope: !5950)
!5957 = !DILocation(line: 35, column: 2, scope: !5958)
!5958 = distinct !DILexicalBlock(scope: !5950, file: !5951, line: 35, column: 2)
!5959 = !DILocation(line: 35, column: 2, scope: !5960)
!5960 = distinct !DILexicalBlock(scope: !5958, file: !5951, line: 35, column: 2)
!5961 = !DILocation(line: 35, column: 2, scope: !5962)
!5962 = distinct !DILexicalBlock(scope: !5958, file: !5951, line: 35, column: 2)
!5963 = !DILocation(line: 36, column: 15, scope: !5950)
!5964 = !DILocation(line: 36, column: 2, scope: !5950)
!5965 = !DILocation(line: 36, column: 8, scope: !5950)
!5966 = !DILocation(line: 36, column: 13, scope: !5950)
!5967 = !DILocation(line: 37, column: 1, scope: !5950)
!5968 = distinct !DISubprogram(name: "__module_get", scope: !5969, file: !5969, line: 747, type: !5970, scopeLine: 748, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!5969 = !DIFile(filename: "./include/linux/module.h", directory: "/home/lizy2001/genbc/linux")
!5970 = !DISubroutineType(types: !5971)
!5971 = !{null, !605}
!5972 = !DILocalVariable(name: "module", arg: 1, scope: !5968, file: !5969, line: 747, type: !605)
!5973 = !DILocation(line: 747, column: 48, scope: !5968)
!5974 = !DILocation(line: 749, column: 1, scope: !5968)
!5975 = distinct !DISubprogram(name: "devm_input_allocate_device", scope: !3, file: !3, line: 1875, type: !5976, scopeLine: 1876, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !309)
!5976 = !DISubroutineType(types: !5977)
!5977 = !{!119, !3427}
!5978 = !DILocalVariable(name: "dev", arg: 1, scope: !5975, file: !3, line: 1875, type: !3427)
!5979 = !DILocation(line: 1875, column: 61, scope: !5975)
!5980 = !DILocalVariable(name: "input", scope: !5975, file: !3, line: 1877, type: !119)
!5981 = !DILocation(line: 1877, column: 20, scope: !5975)
!5982 = !DILocalVariable(name: "devres", scope: !5975, file: !3, line: 1878, type: !5983)
!5983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5984, size: 64)
!5984 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "input_devres", file: !3, line: 1836, size: 64, elements: !5985)
!5985 = !{!5986}
!5986 = !DIDerivedType(tag: DW_TAG_member, name: "input", scope: !5984, file: !3, line: 1837, baseType: !119, size: 64)
!5987 = !DILocation(line: 1878, column: 23, scope: !5975)
!5988 = !DILocation(line: 1880, column: 11, scope: !5975)
!5989 = !DILocation(line: 1880, column: 9, scope: !5975)
!5990 = !DILocation(line: 1882, column: 7, scope: !5991)
!5991 = distinct !DILexicalBlock(scope: !5975, file: !3, line: 1882, column: 6)
!5992 = !DILocation(line: 1882, column: 6, scope: !5975)
!5993 = !DILocation(line: 1883, column: 3, scope: !5991)
!5994 = !DILocation(line: 1885, column: 10, scope: !5975)
!5995 = !DILocation(line: 1885, column: 8, scope: !5975)
!5996 = !DILocation(line: 1886, column: 7, scope: !5997)
!5997 = distinct !DILexicalBlock(scope: !5975, file: !3, line: 1886, column: 6)
!5998 = !DILocation(line: 1886, column: 6, scope: !5975)
!5999 = !DILocation(line: 1887, column: 15, scope: !6000)
!6000 = distinct !DILexicalBlock(scope: !5997, file: !3, line: 1886, column: 14)
!6001 = !DILocation(line: 1887, column: 3, scope: !6000)
!6002 = !DILocation(line: 1888, column: 3, scope: !6000)
!6003 = !DILocation(line: 1891, column: 22, scope: !5975)
!6004 = !DILocation(line: 1891, column: 2, scope: !5975)
!6005 = !DILocation(line: 1891, column: 9, scope: !5975)
!6006 = !DILocation(line: 1891, column: 13, scope: !5975)
!6007 = !DILocation(line: 1891, column: 20, scope: !5975)
!6008 = !DILocation(line: 1892, column: 2, scope: !5975)
!6009 = !DILocation(line: 1892, column: 9, scope: !5975)
!6010 = !DILocation(line: 1892, column: 24, scope: !5975)
!6011 = !DILocation(line: 1894, column: 18, scope: !5975)
!6012 = !DILocation(line: 1894, column: 2, scope: !5975)
!6013 = !DILocation(line: 1894, column: 10, scope: !5975)
!6014 = !DILocation(line: 1894, column: 16, scope: !5975)
!6015 = !DILocation(line: 1895, column: 13, scope: !5975)
!6016 = !DILocation(line: 1895, column: 18, scope: !5975)
!6017 = !DILocation(line: 1895, column: 2, scope: !5975)
!6018 = !DILocation(line: 1897, column: 9, scope: !5975)
!6019 = !DILocation(line: 1897, column: 2, scope: !5975)
!6020 = !DILocation(line: 1898, column: 1, scope: !5975)
!6021 = distinct !DISubprogram(name: "devres_alloc", scope: !60, file: !60, line: 178, type: !6022, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!6022 = !DISubroutineType(types: !6023)
!6023 = !{!111, !6024, !547, !757}
!6024 = !DIDerivedType(tag: DW_TAG_typedef, name: "dr_release_t", file: !60, line: 165, baseType: !6025)
!6025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6026, size: 64)
!6026 = !DISubroutineType(types: !6027)
!6027 = !{null, !3427, !111}
!6028 = !DILocalVariable(name: "release", arg: 1, scope: !6021, file: !60, line: 178, type: !6024)
!6029 = !DILocation(line: 178, column: 47, scope: !6021)
!6030 = !DILocalVariable(name: "size", arg: 2, scope: !6021, file: !60, line: 178, type: !547)
!6031 = !DILocation(line: 178, column: 63, scope: !6021)
!6032 = !DILocalVariable(name: "gfp", arg: 3, scope: !6021, file: !60, line: 178, type: !757)
!6033 = !DILocation(line: 178, column: 75, scope: !6021)
!6034 = !DILocation(line: 180, column: 27, scope: !6021)
!6035 = !DILocation(line: 180, column: 36, scope: !6021)
!6036 = !DILocation(line: 180, column: 42, scope: !6021)
!6037 = !DILocation(line: 180, column: 9, scope: !6021)
!6038 = !DILocation(line: 180, column: 2, scope: !6021)
!6039 = distinct !DISubprogram(name: "devm_input_device_release", scope: !3, file: !3, line: 1847, type: !6026, scopeLine: 1848, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!6040 = !DILocalVariable(name: "dev", arg: 1, scope: !6039, file: !3, line: 1847, type: !3427)
!6041 = !DILocation(line: 1847, column: 54, scope: !6039)
!6042 = !DILocalVariable(name: "res", arg: 2, scope: !6039, file: !3, line: 1847, type: !111)
!6043 = !DILocation(line: 1847, column: 65, scope: !6039)
!6044 = !DILocalVariable(name: "devres", scope: !6039, file: !3, line: 1849, type: !5983)
!6045 = !DILocation(line: 1849, column: 23, scope: !6039)
!6046 = !DILocation(line: 1849, column: 32, scope: !6039)
!6047 = !DILocalVariable(name: "input", scope: !6039, file: !3, line: 1850, type: !119)
!6048 = !DILocation(line: 1850, column: 20, scope: !6039)
!6049 = !DILocation(line: 1850, column: 28, scope: !6039)
!6050 = !DILocation(line: 1850, column: 36, scope: !6039)
!6051 = !DILocation(line: 1854, column: 19, scope: !6039)
!6052 = !DILocation(line: 1854, column: 2, scope: !6039)
!6053 = !DILocation(line: 1855, column: 1, scope: !6039)
!6054 = distinct !DISubprogram(name: "input_free_device", scope: !3, file: !3, line: 1915, type: !3121, scopeLine: 1916, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !309)
!6055 = !DILocalVariable(name: "dev", arg: 1, scope: !6054, file: !3, line: 1915, type: !119)
!6056 = !DILocation(line: 1915, column: 42, scope: !6054)
!6057 = !DILocation(line: 1917, column: 6, scope: !6058)
!6058 = distinct !DILexicalBlock(scope: !6054, file: !3, line: 1917, column: 6)
!6059 = !DILocation(line: 1917, column: 6, scope: !6054)
!6060 = !DILocation(line: 1918, column: 7, scope: !6061)
!6061 = distinct !DILexicalBlock(scope: !6062, file: !3, line: 1918, column: 7)
!6062 = distinct !DILexicalBlock(scope: !6058, file: !3, line: 1917, column: 11)
!6063 = !DILocation(line: 1918, column: 12, scope: !6061)
!6064 = !DILocation(line: 1918, column: 7, scope: !6062)
!6065 = !DILocalVariable(name: "__ret_warn_on", scope: !6066, file: !3, line: 1919, type: !113)
!6066 = distinct !DILexicalBlock(scope: !6061, file: !3, line: 1919, column: 4)
!6067 = !DILocation(line: 1919, column: 4, scope: !6066)
!6068 = !DILocation(line: 1919, column: 4, scope: !6069)
!6069 = distinct !DILexicalBlock(scope: !6066, file: !3, line: 1919, column: 4)
!6070 = !DILocation(line: 1919, column: 4, scope: !6071)
!6071 = distinct !DILexicalBlock(scope: !6069, file: !3, line: 1919, column: 4)
!6072 = !DILocation(line: 1919, column: 4, scope: !6073)
!6073 = distinct !DILexicalBlock(scope: !6071, file: !3, line: 1919, column: 4)
!6074 = !DILocation(line: 1919, column: 4, scope: !6075)
!6075 = distinct !DILexicalBlock(scope: !6071, file: !3, line: 1919, column: 4)
!6076 = !{i32 -2142307551, i32 -2142307522, i32 -2142307476, i32 -2142307418, i32 -2142307364, i32 -2142307310, i32 -2142307255, i32 -2142307224}
!6077 = !DILocation(line: 1919, column: 4, scope: !6078)
!6078 = distinct !DILexicalBlock(scope: !6071, file: !3, line: 1919, column: 4)
!6079 = !{i32 -2142306820, i32 -2142306813, i32 -2142306761, i32 -2142306730, i32 -2142306700}
!6080 = !DILocation(line: 1919, column: 4, scope: !6081)
!6081 = distinct !DILexicalBlock(scope: !6071, file: !3, line: 1919, column: 4)
!6082 = !DILocation(line: 1919, column: 4, scope: !6061)
!6083 = !DILocation(line: 1923, column: 20, scope: !6062)
!6084 = !DILocation(line: 1923, column: 3, scope: !6062)
!6085 = !DILocation(line: 1924, column: 2, scope: !6062)
!6086 = !DILocation(line: 1925, column: 1, scope: !6054)
!6087 = distinct !DISubprogram(name: "devm_input_device_match", scope: !3, file: !3, line: 1840, type: !6088, scopeLine: 1841, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!6088 = !DISubroutineType(types: !6089)
!6089 = !{!113, !3427, !111, !111}
!6090 = !DILocalVariable(name: "dev", arg: 1, scope: !6087, file: !3, line: 1840, type: !3427)
!6091 = !DILocation(line: 1840, column: 51, scope: !6087)
!6092 = !DILocalVariable(name: "res", arg: 2, scope: !6087, file: !3, line: 1840, type: !111)
!6093 = !DILocation(line: 1840, column: 62, scope: !6087)
!6094 = !DILocalVariable(name: "data", arg: 3, scope: !6087, file: !3, line: 1840, type: !111)
!6095 = !DILocation(line: 1840, column: 73, scope: !6087)
!6096 = !DILocalVariable(name: "devres", scope: !6087, file: !3, line: 1842, type: !5983)
!6097 = !DILocation(line: 1842, column: 23, scope: !6087)
!6098 = !DILocation(line: 1842, column: 32, scope: !6087)
!6099 = !DILocation(line: 1844, column: 9, scope: !6087)
!6100 = !DILocation(line: 1844, column: 17, scope: !6087)
!6101 = !DILocation(line: 1844, column: 26, scope: !6087)
!6102 = !DILocation(line: 1844, column: 23, scope: !6087)
!6103 = !DILocation(line: 1844, column: 2, scope: !6087)
!6104 = distinct !DISubprogram(name: "input_put_device", scope: !86, file: !86, line: 360, type: !3121, scopeLine: 361, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!6105 = !DILocalVariable(name: "dev", arg: 1, scope: !6104, file: !86, line: 360, type: !119)
!6106 = !DILocation(line: 360, column: 55, scope: !6104)
!6107 = !DILocation(line: 362, column: 6, scope: !6108)
!6108 = distinct !DILexicalBlock(scope: !6104, file: !86, line: 362, column: 6)
!6109 = !DILocation(line: 362, column: 6, scope: !6104)
!6110 = !DILocation(line: 363, column: 15, scope: !6108)
!6111 = !DILocation(line: 363, column: 20, scope: !6108)
!6112 = !DILocation(line: 363, column: 3, scope: !6108)
!6113 = !DILocation(line: 364, column: 1, scope: !6104)
!6114 = distinct !DISubprogram(name: "input_set_timestamp", scope: !3, file: !3, line: 1942, type: !6115, scopeLine: 1943, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !309)
!6115 = !DISubroutineType(types: !6116)
!6116 = !{null, !119, !1257}
!6117 = !DILocalVariable(name: "dev", arg: 1, scope: !6114, file: !3, line: 1942, type: !119)
!6118 = !DILocation(line: 1942, column: 44, scope: !6114)
!6119 = !DILocalVariable(name: "timestamp", arg: 2, scope: !6114, file: !3, line: 1942, type: !1257)
!6120 = !DILocation(line: 1942, column: 57, scope: !6114)
!6121 = !DILocation(line: 1944, column: 35, scope: !6114)
!6122 = !DILocation(line: 1944, column: 2, scope: !6114)
!6123 = !DILocation(line: 1944, column: 7, scope: !6114)
!6124 = !DILocation(line: 1944, column: 33, scope: !6114)
!6125 = !DILocation(line: 1945, column: 54, scope: !6114)
!6126 = !DILocation(line: 1945, column: 35, scope: !6114)
!6127 = !DILocation(line: 1945, column: 2, scope: !6114)
!6128 = !DILocation(line: 1945, column: 7, scope: !6114)
!6129 = !DILocation(line: 1945, column: 33, scope: !6114)
!6130 = !DILocation(line: 1946, column: 53, scope: !6114)
!6131 = !DILocation(line: 1946, column: 35, scope: !6114)
!6132 = !DILocation(line: 1946, column: 2, scope: !6114)
!6133 = !DILocation(line: 1946, column: 7, scope: !6114)
!6134 = !DILocation(line: 1946, column: 33, scope: !6114)
!6135 = !DILocation(line: 1948, column: 1, scope: !6114)
!6136 = distinct !DISubprogram(name: "ktime_mono_to_real", scope: !93, file: !93, line: 147, type: !6137, scopeLine: 148, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!6137 = !DISubroutineType(types: !6138)
!6138 = !{!1257, !1257}
!6139 = !DILocalVariable(name: "mono", arg: 1, scope: !6136, file: !93, line: 147, type: !1257)
!6140 = !DILocation(line: 147, column: 50, scope: !6136)
!6141 = !DILocation(line: 149, column: 27, scope: !6136)
!6142 = !DILocation(line: 149, column: 9, scope: !6136)
!6143 = !DILocation(line: 149, column: 2, scope: !6136)
!6144 = distinct !DISubprogram(name: "input_get_timestamp", scope: !3, file: !3, line: 1957, type: !6145, scopeLine: 1958, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !309)
!6145 = !DISubroutineType(types: !6146)
!6146 = !{!6147, !119}
!6147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1257, size: 64)
!6148 = !DILocalVariable(name: "dev", arg: 1, scope: !6144, file: !3, line: 1957, type: !119)
!6149 = !DILocation(line: 1957, column: 48, scope: !6144)
!6150 = !DILocalVariable(name: "invalid_timestamp", scope: !6144, file: !3, line: 1959, type: !6151)
!6151 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1257)
!6152 = !DILocation(line: 1959, column: 16, scope: !6144)
!6153 = !DILocation(line: 1959, column: 36, scope: !6144)
!6154 = !DILocation(line: 1961, column: 21, scope: !6155)
!6155 = distinct !DILexicalBlock(scope: !6144, file: !3, line: 1961, column: 6)
!6156 = !DILocation(line: 1961, column: 26, scope: !6155)
!6157 = !DILocation(line: 1961, column: 53, scope: !6155)
!6158 = !DILocation(line: 1961, column: 7, scope: !6155)
!6159 = !DILocation(line: 1961, column: 6, scope: !6144)
!6160 = !DILocation(line: 1962, column: 23, scope: !6155)
!6161 = !DILocation(line: 1962, column: 28, scope: !6155)
!6162 = !DILocation(line: 1962, column: 3, scope: !6155)
!6163 = !DILocation(line: 1964, column: 9, scope: !6144)
!6164 = !DILocation(line: 1964, column: 14, scope: !6144)
!6165 = !DILocation(line: 1964, column: 2, scope: !6144)
!6166 = distinct !DISubprogram(name: "ktime_set", scope: !1258, file: !1258, line: 38, type: !6167, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!6167 = !DISubroutineType(types: !6168)
!6168 = !{!1257, !6169, !5404}
!6169 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !291)
!6170 = !DILocalVariable(name: "secs", arg: 1, scope: !6166, file: !1258, line: 38, type: !6169)
!6171 = !DILocation(line: 38, column: 43, scope: !6166)
!6172 = !DILocalVariable(name: "nsecs", arg: 2, scope: !6166, file: !1258, line: 38, type: !5404)
!6173 = !DILocation(line: 38, column: 69, scope: !6166)
!6174 = !DILocation(line: 40, column: 6, scope: !6175)
!6175 = distinct !DILexicalBlock(scope: !6166, file: !1258, line: 40, column: 6)
!6176 = !DILocation(line: 40, column: 6, scope: !6166)
!6177 = !DILocation(line: 41, column: 3, scope: !6175)
!6178 = !DILocation(line: 43, column: 9, scope: !6166)
!6179 = !DILocation(line: 43, column: 14, scope: !6166)
!6180 = !DILocation(line: 43, column: 36, scope: !6166)
!6181 = !DILocation(line: 43, column: 29, scope: !6166)
!6182 = !DILocation(line: 43, column: 2, scope: !6166)
!6183 = !DILocation(line: 44, column: 1, scope: !6166)
!6184 = distinct !DISubprogram(name: "ktime_compare", scope: !1258, file: !1258, line: 95, type: !6185, scopeLine: 96, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!6185 = !DISubroutineType(types: !6186)
!6186 = !{!113, !6151, !6151}
!6187 = !DILocalVariable(name: "cmp1", arg: 1, scope: !6184, file: !1258, line: 95, type: !6151)
!6188 = !DILocation(line: 95, column: 47, scope: !6184)
!6189 = !DILocalVariable(name: "cmp2", arg: 2, scope: !6184, file: !1258, line: 95, type: !6151)
!6190 = !DILocation(line: 95, column: 67, scope: !6184)
!6191 = !DILocation(line: 97, column: 6, scope: !6192)
!6192 = distinct !DILexicalBlock(scope: !6184, file: !1258, line: 97, column: 6)
!6193 = !DILocation(line: 97, column: 13, scope: !6192)
!6194 = !DILocation(line: 97, column: 11, scope: !6192)
!6195 = !DILocation(line: 97, column: 6, scope: !6184)
!6196 = !DILocation(line: 98, column: 3, scope: !6192)
!6197 = !DILocation(line: 99, column: 6, scope: !6198)
!6198 = distinct !DILexicalBlock(scope: !6184, file: !1258, line: 99, column: 6)
!6199 = !DILocation(line: 99, column: 13, scope: !6198)
!6200 = !DILocation(line: 99, column: 11, scope: !6198)
!6201 = !DILocation(line: 99, column: 6, scope: !6184)
!6202 = !DILocation(line: 100, column: 3, scope: !6198)
!6203 = !DILocation(line: 101, column: 2, scope: !6184)
!6204 = !DILocation(line: 102, column: 1, scope: !6184)
!6205 = distinct !DISubprogram(name: "input_set_capability", scope: !3, file: !3, line: 1977, type: !6206, scopeLine: 1978, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !309)
!6206 = !DISubroutineType(types: !6207)
!6207 = !{null, !119, !7, !7}
!6208 = !DILocalVariable(name: "dev", arg: 1, scope: !6205, file: !3, line: 1977, type: !119)
!6209 = !DILocation(line: 1977, column: 45, scope: !6205)
!6210 = !DILocalVariable(name: "type", arg: 2, scope: !6205, file: !3, line: 1977, type: !7)
!6211 = !DILocation(line: 1977, column: 63, scope: !6205)
!6212 = !DILocalVariable(name: "code", arg: 3, scope: !6205, file: !3, line: 1977, type: !7)
!6213 = !DILocation(line: 1977, column: 82, scope: !6205)
!6214 = !DILocation(line: 1979, column: 10, scope: !6205)
!6215 = !DILocation(line: 1979, column: 2, scope: !6205)
!6216 = !DILocation(line: 1981, column: 13, scope: !6217)
!6217 = distinct !DILexicalBlock(scope: !6205, file: !3, line: 1979, column: 16)
!6218 = !DILocation(line: 1981, column: 19, scope: !6217)
!6219 = !DILocation(line: 1981, column: 24, scope: !6217)
!6220 = !DILocation(line: 1981, column: 3, scope: !6217)
!6221 = !DILocation(line: 1982, column: 3, scope: !6217)
!6222 = !DILocation(line: 1985, column: 13, scope: !6217)
!6223 = !DILocation(line: 1985, column: 19, scope: !6217)
!6224 = !DILocation(line: 1985, column: 24, scope: !6217)
!6225 = !DILocation(line: 1985, column: 3, scope: !6217)
!6226 = !DILocation(line: 1986, column: 3, scope: !6217)
!6227 = !DILocation(line: 1989, column: 23, scope: !6217)
!6228 = !DILocation(line: 1989, column: 3, scope: !6217)
!6229 = !DILocation(line: 1990, column: 8, scope: !6230)
!6230 = distinct !DILexicalBlock(scope: !6217, file: !3, line: 1990, column: 7)
!6231 = !DILocation(line: 1990, column: 13, scope: !6230)
!6232 = !DILocation(line: 1990, column: 7, scope: !6217)
!6233 = !DILocation(line: 1991, column: 4, scope: !6230)
!6234 = !DILocation(line: 1993, column: 13, scope: !6217)
!6235 = !DILocation(line: 1993, column: 19, scope: !6217)
!6236 = !DILocation(line: 1993, column: 24, scope: !6217)
!6237 = !DILocation(line: 1993, column: 3, scope: !6217)
!6238 = !DILocation(line: 1994, column: 3, scope: !6217)
!6239 = !DILocation(line: 1997, column: 13, scope: !6217)
!6240 = !DILocation(line: 1997, column: 19, scope: !6217)
!6241 = !DILocation(line: 1997, column: 24, scope: !6217)
!6242 = !DILocation(line: 1997, column: 3, scope: !6217)
!6243 = !DILocation(line: 1998, column: 3, scope: !6217)
!6244 = !DILocation(line: 2001, column: 13, scope: !6217)
!6245 = !DILocation(line: 2001, column: 19, scope: !6217)
!6246 = !DILocation(line: 2001, column: 24, scope: !6217)
!6247 = !DILocation(line: 2001, column: 3, scope: !6217)
!6248 = !DILocation(line: 2002, column: 3, scope: !6217)
!6249 = !DILocation(line: 2005, column: 13, scope: !6217)
!6250 = !DILocation(line: 2005, column: 19, scope: !6217)
!6251 = !DILocation(line: 2005, column: 24, scope: !6217)
!6252 = !DILocation(line: 2005, column: 3, scope: !6217)
!6253 = !DILocation(line: 2006, column: 3, scope: !6217)
!6254 = !DILocation(line: 2009, column: 13, scope: !6217)
!6255 = !DILocation(line: 2009, column: 19, scope: !6217)
!6256 = !DILocation(line: 2009, column: 24, scope: !6217)
!6257 = !DILocation(line: 2009, column: 3, scope: !6217)
!6258 = !DILocation(line: 2010, column: 3, scope: !6217)
!6259 = !DILocation(line: 2013, column: 13, scope: !6217)
!6260 = !DILocation(line: 2013, column: 19, scope: !6217)
!6261 = !DILocation(line: 2013, column: 24, scope: !6217)
!6262 = !DILocation(line: 2013, column: 3, scope: !6217)
!6263 = !DILocation(line: 2014, column: 3, scope: !6217)
!6264 = !DILocation(line: 2018, column: 3, scope: !6217)
!6265 = !DILocation(line: 2021, column: 3, scope: !6217)
!6266 = !DILocation(line: 2022, column: 3, scope: !6217)
!6267 = !DILocation(line: 2023, column: 3, scope: !6217)
!6268 = !DILocation(line: 2026, column: 12, scope: !6205)
!6269 = !DILocation(line: 2026, column: 18, scope: !6205)
!6270 = !DILocation(line: 2026, column: 23, scope: !6205)
!6271 = !DILocation(line: 2026, column: 2, scope: !6205)
!6272 = !DILocation(line: 2027, column: 1, scope: !6205)
!6273 = distinct !DISubprogram(name: "input_enable_softrepeat", scope: !3, file: !3, line: 2122, type: !6274, scopeLine: 2123, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !309)
!6274 = !DISubroutineType(types: !6275)
!6275 = !{null, !119, !113, !113}
!6276 = !DILocalVariable(name: "dev", arg: 1, scope: !6273, file: !3, line: 2122, type: !119)
!6277 = !DILocation(line: 2122, column: 48, scope: !6273)
!6278 = !DILocalVariable(name: "delay", arg: 2, scope: !6273, file: !3, line: 2122, type: !113)
!6279 = !DILocation(line: 2122, column: 57, scope: !6273)
!6280 = !DILocalVariable(name: "period", arg: 3, scope: !6273, file: !3, line: 2122, type: !113)
!6281 = !DILocation(line: 2122, column: 68, scope: !6273)
!6282 = !DILocation(line: 2124, column: 2, scope: !6273)
!6283 = !DILocation(line: 2124, column: 7, scope: !6273)
!6284 = !DILocation(line: 2124, column: 13, scope: !6273)
!6285 = !DILocation(line: 2124, column: 22, scope: !6273)
!6286 = !DILocation(line: 2125, column: 24, scope: !6273)
!6287 = !DILocation(line: 2125, column: 2, scope: !6273)
!6288 = !DILocation(line: 2125, column: 7, scope: !6273)
!6289 = !DILocation(line: 2125, column: 22, scope: !6273)
!6290 = !DILocation(line: 2126, column: 25, scope: !6273)
!6291 = !DILocation(line: 2126, column: 2, scope: !6273)
!6292 = !DILocation(line: 2126, column: 7, scope: !6273)
!6293 = !DILocation(line: 2126, column: 23, scope: !6273)
!6294 = !DILocation(line: 2127, column: 1, scope: !6273)
!6295 = distinct !DISubprogram(name: "input_repeat_key", scope: !3, file: !3, line: 179, type: !3074, scopeLine: 180, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!6296 = !DILocalVariable(name: "m", arg: 1, scope: !6297, file: !6298, line: 363, type: !2705)
!6297 = distinct !DISubprogram(name: "msecs_to_jiffies", scope: !6298, file: !6298, line: 363, type: !6299, scopeLine: 364, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!6298 = !DIFile(filename: "./include/linux/jiffies.h", directory: "/home/lizy2001/genbc/linux")
!6299 = !DISubroutineType(types: !6300)
!6300 = !{!138, !2705}
!6301 = !DILocation(line: 363, column: 74, scope: !6297, inlinedAt: !6302)
!6302 = distinct !DILocation(line: 198, column: 6, scope: !6303)
!6303 = distinct !DILexicalBlock(scope: !6304, file: !3, line: 196, column: 7)
!6304 = distinct !DILexicalBlock(scope: !6305, file: !3, line: 187, column: 65)
!6305 = distinct !DILexicalBlock(scope: !6295, file: !3, line: 186, column: 6)
!6306 = !DILocation(line: 407, column: 64, scope: !4043, inlinedAt: !6307)
!6307 = distinct !DILocation(line: 201, column: 2, scope: !6295)
!6308 = !DILocation(line: 407, column: 84, scope: !4043, inlinedAt: !6307)
!6309 = !DILocation(line: 327, column: 67, scope: !4055, inlinedAt: !6310)
!6310 = distinct !DILocation(line: 184, column: 2, scope: !6311)
!6311 = distinct !DILexicalBlock(scope: !6312, file: !3, line: 184, column: 2)
!6312 = distinct !DILexicalBlock(scope: !6313, file: !3, line: 184, column: 2)
!6313 = distinct !DILexicalBlock(scope: !6314, file: !3, line: 184, column: 2)
!6314 = distinct !DILexicalBlock(scope: !6315, file: !3, line: 184, column: 2)
!6315 = distinct !DILexicalBlock(scope: !6295, file: !3, line: 184, column: 2)
!6316 = !DILocalVariable(name: "t", arg: 1, scope: !6295, file: !3, line: 179, type: !3076)
!6317 = !DILocation(line: 179, column: 49, scope: !6295)
!6318 = !DILocalVariable(name: "dev", scope: !6295, file: !3, line: 181, type: !119)
!6319 = !DILocation(line: 181, column: 20, scope: !6295)
!6320 = !DILocalVariable(name: "__mptr", scope: !6321, file: !3, line: 181, type: !111)
!6321 = distinct !DILexicalBlock(scope: !6295, file: !3, line: 181, column: 26)
!6322 = !DILocation(line: 181, column: 26, scope: !6321)
!6323 = !DILocation(line: 181, column: 26, scope: !6324)
!6324 = distinct !DILexicalBlock(scope: !6321, file: !3, line: 181, column: 26)
!6325 = !DILocalVariable(name: "flags", scope: !6295, file: !3, line: 182, type: !138)
!6326 = !DILocation(line: 182, column: 16, scope: !6295)
!6327 = !DILocation(line: 184, column: 2, scope: !6295)
!6328 = !DILocation(line: 184, column: 2, scope: !6315)
!6329 = !DILocalVariable(name: "__dummy", scope: !6330, file: !3, line: 184, type: !138)
!6330 = distinct !DILexicalBlock(scope: !6314, file: !3, line: 184, column: 2)
!6331 = !DILocation(line: 184, column: 2, scope: !6330)
!6332 = !DILocalVariable(name: "__dummy2", scope: !6330, file: !3, line: 184, type: !138)
!6333 = !DILocation(line: 184, column: 2, scope: !6314)
!6334 = !DILocation(line: 184, column: 2, scope: !6313)
!6335 = !DILocation(line: 184, column: 2, scope: !6336)
!6336 = distinct !DILexicalBlock(scope: !6313, file: !3, line: 184, column: 2)
!6337 = !DILocalVariable(name: "__dummy", scope: !6338, file: !3, line: 184, type: !138)
!6338 = distinct !DILexicalBlock(scope: !6339, file: !3, line: 184, column: 2)
!6339 = distinct !DILexicalBlock(scope: !6336, file: !3, line: 184, column: 2)
!6340 = !DILocation(line: 184, column: 2, scope: !6338)
!6341 = !DILocalVariable(name: "__dummy2", scope: !6338, file: !3, line: 184, type: !138)
!6342 = !DILocation(line: 184, column: 2, scope: !6339)
!6343 = !DILocation(line: 184, column: 2, scope: !6312)
!6344 = !{i32 -2142463360}
!6345 = !DILocation(line: 184, column: 2, scope: !6311)
!6346 = !DILocation(line: 329, column: 10, scope: !4055, inlinedAt: !6310)
!6347 = !DILocation(line: 329, column: 16, scope: !4055, inlinedAt: !6310)
!6348 = !DILocation(line: 186, column: 15, scope: !6305)
!6349 = !DILocation(line: 186, column: 20, scope: !6305)
!6350 = !DILocation(line: 186, column: 32, scope: !6305)
!6351 = !DILocation(line: 186, column: 37, scope: !6305)
!6352 = !DILocation(line: 186, column: 6, scope: !6305)
!6353 = !DILocation(line: 186, column: 42, scope: !6305)
!6354 = !DILocation(line: 187, column: 25, scope: !6305)
!6355 = !DILocation(line: 187, column: 30, scope: !6305)
!6356 = !DILocation(line: 187, column: 42, scope: !6305)
!6357 = !DILocation(line: 187, column: 47, scope: !6305)
!6358 = !DILocation(line: 187, column: 6, scope: !6305)
!6359 = !DILocation(line: 186, column: 6, scope: !6295)
!6360 = !DILocalVariable(name: "vals", scope: !6304, file: !3, line: 188, type: !5010)
!6361 = !DILocation(line: 188, column: 22, scope: !6304)
!6362 = !DILocation(line: 188, column: 32, scope: !6304)
!6363 = !DILocation(line: 189, column: 4, scope: !6304)
!6364 = !DILocation(line: 189, column: 14, scope: !6304)
!6365 = !DILocation(line: 189, column: 19, scope: !6304)
!6366 = !DILocation(line: 190, column: 4, scope: !6304)
!6367 = !DILocation(line: 193, column: 23, scope: !6304)
!6368 = !DILocation(line: 193, column: 28, scope: !6304)
!6369 = !DILocation(line: 193, column: 3, scope: !6304)
!6370 = !DILocation(line: 194, column: 21, scope: !6304)
!6371 = !DILocation(line: 194, column: 26, scope: !6304)
!6372 = !DILocation(line: 194, column: 3, scope: !6304)
!6373 = !DILocation(line: 196, column: 7, scope: !6303)
!6374 = !DILocation(line: 196, column: 12, scope: !6303)
!6375 = !DILocation(line: 196, column: 7, scope: !6304)
!6376 = !DILocation(line: 197, column: 15, scope: !6303)
!6377 = !DILocation(line: 197, column: 20, scope: !6303)
!6378 = !DILocation(line: 197, column: 27, scope: !6303)
!6379 = !DILocation(line: 198, column: 23, scope: !6303)
!6380 = !DILocation(line: 198, column: 28, scope: !6303)
!6381 = !DILocation(line: 365, column: 27, scope: !6382, inlinedAt: !6302)
!6382 = distinct !DILexicalBlock(scope: !6297, file: !6298, line: 365, column: 6)
!6383 = !DILocation(line: 365, column: 6, scope: !6382, inlinedAt: !6302)
!6384 = !DILocation(line: 365, column: 6, scope: !6297, inlinedAt: !6302)
!6385 = !DILocation(line: 366, column: 12, scope: !6386, inlinedAt: !6302)
!6386 = distinct !DILexicalBlock(scope: !6387, file: !6298, line: 366, column: 7)
!6387 = distinct !DILexicalBlock(scope: !6382, file: !6298, line: 365, column: 31)
!6388 = !DILocation(line: 366, column: 14, scope: !6386, inlinedAt: !6302)
!6389 = !DILocation(line: 366, column: 7, scope: !6387, inlinedAt: !6302)
!6390 = !DILocation(line: 367, column: 4, scope: !6386, inlinedAt: !6302)
!6391 = !DILocation(line: 368, column: 28, scope: !6387, inlinedAt: !6302)
!6392 = !DILocation(line: 368, column: 10, scope: !6387, inlinedAt: !6302)
!6393 = !DILocation(line: 368, column: 3, scope: !6387, inlinedAt: !6302)
!6394 = !DILocation(line: 370, column: 29, scope: !6395, inlinedAt: !6302)
!6395 = distinct !DILexicalBlock(scope: !6382, file: !6298, line: 369, column: 9)
!6396 = !DILocation(line: 370, column: 10, scope: !6395, inlinedAt: !6302)
!6397 = !DILocation(line: 370, column: 3, scope: !6395, inlinedAt: !6302)
!6398 = !DILocation(line: 372, column: 1, scope: !6297, inlinedAt: !6302)
!6399 = !DILocation(line: 197, column: 35, scope: !6303)
!6400 = !DILocation(line: 197, column: 4, scope: !6303)
!6401 = !DILocation(line: 199, column: 2, scope: !6304)
!6402 = !DILocation(line: 201, column: 26, scope: !6295)
!6403 = !DILocation(line: 201, column: 31, scope: !6295)
!6404 = !DILocation(line: 201, column: 43, scope: !6295)
!6405 = !DILocation(line: 409, column: 2, scope: !4111, inlinedAt: !6307)
!6406 = !DILocation(line: 409, column: 2, scope: !4116, inlinedAt: !6307)
!6407 = !DILocation(line: 409, column: 2, scope: !4117, inlinedAt: !6307)
!6408 = !DILocation(line: 409, column: 2, scope: !4124, inlinedAt: !6307)
!6409 = !DILocation(line: 409, column: 2, scope: !4127, inlinedAt: !6307)
!6410 = !DILocation(line: 202, column: 1, scope: !6295)
!6411 = distinct !DISubprogram(name: "input_register_device", scope: !3, file: !3, line: 2153, type: !3117, scopeLine: 2154, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !309)
!6412 = !DILocalVariable(name: "dev", arg: 1, scope: !6411, file: !3, line: 2153, type: !119)
!6413 = !DILocation(line: 2153, column: 45, scope: !6411)
!6414 = !DILocalVariable(name: "devres", scope: !6411, file: !3, line: 2155, type: !5983)
!6415 = !DILocation(line: 2155, column: 23, scope: !6411)
!6416 = !DILocalVariable(name: "handler", scope: !6411, file: !3, line: 2156, type: !3790)
!6417 = !DILocation(line: 2156, column: 24, scope: !6411)
!6418 = !DILocalVariable(name: "packet_size", scope: !6411, file: !3, line: 2157, type: !7)
!6419 = !DILocation(line: 2157, column: 15, scope: !6411)
!6420 = !DILocalVariable(name: "path", scope: !6411, file: !3, line: 2158, type: !115)
!6421 = !DILocation(line: 2158, column: 14, scope: !6411)
!6422 = !DILocalVariable(name: "error", scope: !6411, file: !3, line: 2159, type: !113)
!6423 = !DILocation(line: 2159, column: 6, scope: !6411)
!6424 = !DILocation(line: 2161, column: 23, scope: !6425)
!6425 = distinct !DILexicalBlock(scope: !6411, file: !3, line: 2161, column: 6)
!6426 = !DILocation(line: 2161, column: 28, scope: !6425)
!6427 = !DILocation(line: 2161, column: 6, scope: !6425)
!6428 = !DILocation(line: 2161, column: 35, scope: !6425)
!6429 = !DILocation(line: 2161, column: 39, scope: !6425)
!6430 = !DILocation(line: 2161, column: 44, scope: !6425)
!6431 = !DILocation(line: 2161, column: 6, scope: !6411)
!6432 = !DILocation(line: 2162, column: 3, scope: !6433)
!6433 = distinct !DILexicalBlock(scope: !6425, file: !3, line: 2161, column: 53)
!6434 = !DILocation(line: 2164, column: 3, scope: !6433)
!6435 = !DILocation(line: 2167, column: 6, scope: !6436)
!6436 = distinct !DILexicalBlock(scope: !6411, file: !3, line: 2167, column: 6)
!6437 = !DILocation(line: 2167, column: 11, scope: !6436)
!6438 = !DILocation(line: 2167, column: 6, scope: !6411)
!6439 = !DILocation(line: 2168, column: 12, scope: !6440)
!6440 = distinct !DILexicalBlock(scope: !6436, file: !3, line: 2167, column: 27)
!6441 = !DILocation(line: 2168, column: 10, scope: !6440)
!6442 = !DILocation(line: 2170, column: 8, scope: !6443)
!6443 = distinct !DILexicalBlock(scope: !6440, file: !3, line: 2170, column: 7)
!6444 = !DILocation(line: 2170, column: 7, scope: !6440)
!6445 = !DILocation(line: 2171, column: 4, scope: !6443)
!6446 = !DILocation(line: 2173, column: 19, scope: !6440)
!6447 = !DILocation(line: 2173, column: 3, scope: !6440)
!6448 = !DILocation(line: 2173, column: 11, scope: !6440)
!6449 = !DILocation(line: 2173, column: 17, scope: !6440)
!6450 = !DILocation(line: 2174, column: 2, scope: !6440)
!6451 = !DILocation(line: 2177, column: 20, scope: !6411)
!6452 = !DILocation(line: 2177, column: 25, scope: !6411)
!6453 = !DILocation(line: 2177, column: 2, scope: !6411)
!6454 = !DILocation(line: 2180, column: 28, scope: !6411)
!6455 = !DILocation(line: 2180, column: 33, scope: !6411)
!6456 = !DILocation(line: 2180, column: 2, scope: !6411)
!6457 = !DILocation(line: 2183, column: 25, scope: !6411)
!6458 = !DILocation(line: 2183, column: 2, scope: !6411)
!6459 = !DILocation(line: 2185, column: 49, scope: !6411)
!6460 = !DILocation(line: 2185, column: 16, scope: !6411)
!6461 = !DILocation(line: 2185, column: 14, scope: !6411)
!6462 = !DILocation(line: 2186, column: 6, scope: !6463)
!6463 = distinct !DILexicalBlock(scope: !6411, file: !3, line: 2186, column: 6)
!6464 = !DILocation(line: 2186, column: 11, scope: !6463)
!6465 = !DILocation(line: 2186, column: 36, scope: !6463)
!6466 = !DILocation(line: 2186, column: 34, scope: !6463)
!6467 = !DILocation(line: 2186, column: 6, scope: !6411)
!6468 = !DILocation(line: 2187, column: 33, scope: !6463)
!6469 = !DILocation(line: 2187, column: 3, scope: !6463)
!6470 = !DILocation(line: 2187, column: 8, scope: !6463)
!6471 = !DILocation(line: 2187, column: 31, scope: !6463)
!6472 = !DILocation(line: 2189, column: 18, scope: !6411)
!6473 = !DILocation(line: 2189, column: 23, scope: !6411)
!6474 = !DILocation(line: 2189, column: 46, scope: !6411)
!6475 = !DILocation(line: 2189, column: 2, scope: !6411)
!6476 = !DILocation(line: 2189, column: 7, scope: !6411)
!6477 = !DILocation(line: 2189, column: 16, scope: !6411)
!6478 = !DILocation(line: 2190, column: 22, scope: !6411)
!6479 = !DILocation(line: 2190, column: 27, scope: !6411)
!6480 = !DILocation(line: 2190, column: 14, scope: !6411)
!6481 = !DILocation(line: 2190, column: 2, scope: !6411)
!6482 = !DILocation(line: 2190, column: 7, scope: !6411)
!6483 = !DILocation(line: 2190, column: 12, scope: !6411)
!6484 = !DILocation(line: 2191, column: 7, scope: !6485)
!6485 = distinct !DILexicalBlock(scope: !6411, file: !3, line: 2191, column: 6)
!6486 = !DILocation(line: 2191, column: 12, scope: !6485)
!6487 = !DILocation(line: 2191, column: 6, scope: !6411)
!6488 = !DILocation(line: 2192, column: 9, scope: !6489)
!6489 = distinct !DILexicalBlock(scope: !6485, file: !3, line: 2191, column: 18)
!6490 = !DILocation(line: 2193, column: 3, scope: !6489)
!6491 = !DILocation(line: 2200, column: 7, scope: !6492)
!6492 = distinct !DILexicalBlock(scope: !6411, file: !3, line: 2200, column: 6)
!6493 = !DILocation(line: 2200, column: 12, scope: !6492)
!6494 = !DILocation(line: 2200, column: 27, scope: !6492)
!6495 = !DILocation(line: 2200, column: 31, scope: !6492)
!6496 = !DILocation(line: 2200, column: 36, scope: !6492)
!6497 = !DILocation(line: 2200, column: 6, scope: !6411)
!6498 = !DILocation(line: 2201, column: 27, scope: !6492)
!6499 = !DILocation(line: 2201, column: 3, scope: !6492)
!6500 = !DILocation(line: 2203, column: 7, scope: !6501)
!6501 = distinct !DILexicalBlock(scope: !6411, file: !3, line: 2203, column: 6)
!6502 = !DILocation(line: 2203, column: 12, scope: !6501)
!6503 = !DILocation(line: 2203, column: 6, scope: !6411)
!6504 = !DILocation(line: 2204, column: 3, scope: !6501)
!6505 = !DILocation(line: 2204, column: 8, scope: !6501)
!6506 = !DILocation(line: 2204, column: 19, scope: !6501)
!6507 = !DILocation(line: 2206, column: 7, scope: !6508)
!6508 = distinct !DILexicalBlock(scope: !6411, file: !3, line: 2206, column: 6)
!6509 = !DILocation(line: 2206, column: 12, scope: !6508)
!6510 = !DILocation(line: 2206, column: 6, scope: !6411)
!6511 = !DILocation(line: 2207, column: 3, scope: !6508)
!6512 = !DILocation(line: 2207, column: 8, scope: !6508)
!6513 = !DILocation(line: 2207, column: 19, scope: !6508)
!6514 = !DILocation(line: 2209, column: 6, scope: !6515)
!6515 = distinct !DILexicalBlock(scope: !6411, file: !3, line: 2209, column: 6)
!6516 = !DILocation(line: 2209, column: 11, scope: !6515)
!6517 = !DILocation(line: 2209, column: 6, scope: !6411)
!6518 = !DILocation(line: 2210, column: 29, scope: !6515)
!6519 = !DILocation(line: 2210, column: 34, scope: !6515)
!6520 = !DILocation(line: 2210, column: 3, scope: !6515)
!6521 = !DILocation(line: 2212, column: 22, scope: !6411)
!6522 = !DILocation(line: 2212, column: 27, scope: !6411)
!6523 = !DILocation(line: 2212, column: 10, scope: !6411)
!6524 = !DILocation(line: 2212, column: 8, scope: !6411)
!6525 = !DILocation(line: 2213, column: 6, scope: !6526)
!6526 = distinct !DILexicalBlock(scope: !6411, file: !3, line: 2213, column: 6)
!6527 = !DILocation(line: 2213, column: 6, scope: !6411)
!6528 = !DILocation(line: 2214, column: 3, scope: !6526)
!6529 = !DILocation(line: 2216, column: 27, scope: !6411)
!6530 = !DILocation(line: 2216, column: 32, scope: !6411)
!6531 = !DILocation(line: 2216, column: 36, scope: !6411)
!6532 = !DILocation(line: 2216, column: 9, scope: !6411)
!6533 = !DILocation(line: 2216, column: 7, scope: !6411)
!6534 = !DILocation(line: 2217, column: 2, scope: !6411)
!6535 = !DILocation(line: 2220, column: 8, scope: !6411)
!6536 = !DILocation(line: 2220, column: 2, scope: !6411)
!6537 = !DILocation(line: 2222, column: 10, scope: !6411)
!6538 = !DILocation(line: 2222, column: 8, scope: !6411)
!6539 = !DILocation(line: 2223, column: 6, scope: !6540)
!6540 = distinct !DILexicalBlock(scope: !6411, file: !3, line: 2223, column: 6)
!6541 = !DILocation(line: 2223, column: 6, scope: !6411)
!6542 = !DILocation(line: 2224, column: 3, scope: !6540)
!6543 = !DILocation(line: 2226, column: 17, scope: !6411)
!6544 = !DILocation(line: 2226, column: 22, scope: !6411)
!6545 = !DILocation(line: 2226, column: 2, scope: !6411)
!6546 = !DILocalVariable(name: "__mptr", scope: !6547, file: !3, line: 2228, type: !111)
!6547 = distinct !DILexicalBlock(scope: !6548, file: !3, line: 2228, column: 2)
!6548 = distinct !DILexicalBlock(scope: !6411, file: !3, line: 2228, column: 2)
!6549 = !DILocation(line: 2228, column: 2, scope: !6547)
!6550 = !DILocation(line: 2228, column: 2, scope: !6551)
!6551 = distinct !DILexicalBlock(scope: !6547, file: !3, line: 2228, column: 2)
!6552 = !DILocation(line: 2228, column: 2, scope: !6548)
!6553 = !DILocation(line: 2228, column: 2, scope: !6554)
!6554 = distinct !DILexicalBlock(scope: !6548, file: !3, line: 2228, column: 2)
!6555 = !DILocation(line: 2229, column: 24, scope: !6554)
!6556 = !DILocation(line: 2229, column: 29, scope: !6554)
!6557 = !DILocation(line: 2229, column: 3, scope: !6554)
!6558 = !DILocalVariable(name: "__mptr", scope: !6559, file: !3, line: 2228, type: !111)
!6559 = distinct !DILexicalBlock(scope: !6554, file: !3, line: 2228, column: 2)
!6560 = !DILocation(line: 2228, column: 2, scope: !6559)
!6561 = !DILocation(line: 2228, column: 2, scope: !6562)
!6562 = distinct !DILexicalBlock(scope: !6559, file: !3, line: 2228, column: 2)
!6563 = distinct !{!6563, !6552, !6564}
!6564 = !DILocation(line: 2229, column: 36, scope: !6548)
!6565 = !DILocation(line: 2231, column: 2, scope: !6411)
!6566 = !DILocation(line: 2233, column: 2, scope: !6411)
!6567 = !DILocation(line: 2235, column: 6, scope: !6568)
!6568 = distinct !DILexicalBlock(scope: !6411, file: !3, line: 2235, column: 6)
!6569 = !DILocation(line: 2235, column: 11, scope: !6568)
!6570 = !DILocation(line: 2235, column: 6, scope: !6411)
!6571 = !DILocation(line: 2238, column: 14, scope: !6572)
!6572 = distinct !DILexicalBlock(scope: !6568, file: !3, line: 2235, column: 27)
!6573 = !DILocation(line: 2238, column: 19, scope: !6572)
!6574 = !DILocation(line: 2238, column: 23, scope: !6572)
!6575 = !DILocation(line: 2238, column: 31, scope: !6572)
!6576 = !DILocation(line: 2238, column: 3, scope: !6572)
!6577 = !DILocation(line: 2239, column: 2, scope: !6572)
!6578 = !DILocation(line: 2240, column: 2, scope: !6411)
!6579 = !DILabel(scope: !6411, name: "err_device_del", file: !3, line: 2242)
!6580 = !DILocation(line: 2242, column: 1, scope: !6411)
!6581 = !DILocation(line: 2243, column: 14, scope: !6411)
!6582 = !DILocation(line: 2243, column: 19, scope: !6411)
!6583 = !DILocation(line: 2243, column: 2, scope: !6411)
!6584 = !DILabel(scope: !6411, name: "err_free_vals", file: !3, line: 2244)
!6585 = !DILocation(line: 2244, column: 1, scope: !6411)
!6586 = !DILocation(line: 2245, column: 8, scope: !6411)
!6587 = !DILocation(line: 2245, column: 13, scope: !6411)
!6588 = !DILocation(line: 2245, column: 2, scope: !6411)
!6589 = !DILocation(line: 2246, column: 2, scope: !6411)
!6590 = !DILocation(line: 2246, column: 7, scope: !6411)
!6591 = !DILocation(line: 2246, column: 12, scope: !6411)
!6592 = !DILabel(scope: !6411, name: "err_devres_free", file: !3, line: 2247)
!6593 = !DILocation(line: 2247, column: 1, scope: !6411)
!6594 = !DILocation(line: 2248, column: 14, scope: !6411)
!6595 = !DILocation(line: 2248, column: 2, scope: !6411)
!6596 = !DILocation(line: 2249, column: 9, scope: !6411)
!6597 = !DILocation(line: 2249, column: 2, scope: !6411)
!6598 = !DILocation(line: 2250, column: 1, scope: !6411)
!6599 = distinct !DISubprogram(name: "devm_input_device_unregister", scope: !3, file: !3, line: 2104, type: !6026, scopeLine: 2105, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!6600 = !DILocalVariable(name: "dev", arg: 1, scope: !6599, file: !3, line: 2104, type: !3427)
!6601 = !DILocation(line: 2104, column: 57, scope: !6599)
!6602 = !DILocalVariable(name: "res", arg: 2, scope: !6599, file: !3, line: 2104, type: !111)
!6603 = !DILocation(line: 2104, column: 68, scope: !6599)
!6604 = !DILocalVariable(name: "devres", scope: !6599, file: !3, line: 2106, type: !5983)
!6605 = !DILocation(line: 2106, column: 23, scope: !6599)
!6606 = !DILocation(line: 2106, column: 32, scope: !6599)
!6607 = !DILocalVariable(name: "input", scope: !6599, file: !3, line: 2107, type: !119)
!6608 = !DILocation(line: 2107, column: 20, scope: !6599)
!6609 = !DILocation(line: 2107, column: 28, scope: !6599)
!6610 = !DILocation(line: 2107, column: 36, scope: !6599)
!6611 = !DILocation(line: 2111, column: 28, scope: !6599)
!6612 = !DILocation(line: 2111, column: 2, scope: !6599)
!6613 = !DILocation(line: 2112, column: 1, scope: !6599)
!6614 = distinct !DISubprogram(name: "input_cleanse_bitmasks", scope: !3, file: !3, line: 2070, type: !3121, scopeLine: 2071, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!6615 = !DILocalVariable(name: "dev", arg: 1, scope: !6614, file: !3, line: 2070, type: !119)
!6616 = !DILocation(line: 2070, column: 54, scope: !6614)
!6617 = !DILocation(line: 2072, column: 2, scope: !6614)
!6618 = !DILocation(line: 2072, column: 2, scope: !6619)
!6619 = distinct !DILexicalBlock(scope: !6620, file: !3, line: 2072, column: 2)
!6620 = distinct !DILexicalBlock(scope: !6614, file: !3, line: 2072, column: 2)
!6621 = !DILocation(line: 2072, column: 2, scope: !6620)
!6622 = !DILocation(line: 2073, column: 2, scope: !6614)
!6623 = !DILocation(line: 2073, column: 2, scope: !6624)
!6624 = distinct !DILexicalBlock(scope: !6625, file: !3, line: 2073, column: 2)
!6625 = distinct !DILexicalBlock(scope: !6614, file: !3, line: 2073, column: 2)
!6626 = !DILocation(line: 2073, column: 2, scope: !6625)
!6627 = !DILocation(line: 2074, column: 2, scope: !6614)
!6628 = !DILocation(line: 2074, column: 2, scope: !6629)
!6629 = distinct !DILexicalBlock(scope: !6630, file: !3, line: 2074, column: 2)
!6630 = distinct !DILexicalBlock(scope: !6614, file: !3, line: 2074, column: 2)
!6631 = !DILocation(line: 2074, column: 2, scope: !6630)
!6632 = !DILocation(line: 2075, column: 2, scope: !6614)
!6633 = !DILocation(line: 2075, column: 2, scope: !6634)
!6634 = distinct !DILexicalBlock(scope: !6635, file: !3, line: 2075, column: 2)
!6635 = distinct !DILexicalBlock(scope: !6614, file: !3, line: 2075, column: 2)
!6636 = !DILocation(line: 2075, column: 2, scope: !6635)
!6637 = !DILocation(line: 2076, column: 2, scope: !6614)
!6638 = !DILocation(line: 2076, column: 2, scope: !6639)
!6639 = distinct !DILexicalBlock(scope: !6640, file: !3, line: 2076, column: 2)
!6640 = distinct !DILexicalBlock(scope: !6614, file: !3, line: 2076, column: 2)
!6641 = !DILocation(line: 2076, column: 2, scope: !6640)
!6642 = !DILocation(line: 2077, column: 2, scope: !6614)
!6643 = !DILocation(line: 2077, column: 2, scope: !6644)
!6644 = distinct !DILexicalBlock(scope: !6645, file: !3, line: 2077, column: 2)
!6645 = distinct !DILexicalBlock(scope: !6614, file: !3, line: 2077, column: 2)
!6646 = !DILocation(line: 2077, column: 2, scope: !6645)
!6647 = !DILocation(line: 2078, column: 2, scope: !6614)
!6648 = !DILocation(line: 2078, column: 2, scope: !6649)
!6649 = distinct !DILexicalBlock(scope: !6650, file: !3, line: 2078, column: 2)
!6650 = distinct !DILexicalBlock(scope: !6614, file: !3, line: 2078, column: 2)
!6651 = !DILocation(line: 2078, column: 2, scope: !6650)
!6652 = !DILocation(line: 2079, column: 2, scope: !6614)
!6653 = !DILocation(line: 2079, column: 2, scope: !6654)
!6654 = distinct !DILexicalBlock(scope: !6655, file: !3, line: 2079, column: 2)
!6655 = distinct !DILexicalBlock(scope: !6614, file: !3, line: 2079, column: 2)
!6656 = !DILocation(line: 2079, column: 2, scope: !6655)
!6657 = !DILocation(line: 2080, column: 1, scope: !6614)
!6658 = distinct !DISubprogram(name: "input_estimate_events_per_packet", scope: !3, file: !3, line: 2030, type: !6659, scopeLine: 2031, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!6659 = !DISubroutineType(types: !6660)
!6660 = !{!7, !119}
!6661 = !DILocalVariable(name: "w", arg: 1, scope: !6662, file: !6663, line: 43, type: !387)
!6662 = distinct !DISubprogram(name: "__arch_hweight64", scope: !6663, file: !6663, line: 43, type: !6664, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!6663 = !DIFile(filename: "./arch/x86/include/asm/arch_hweight.h", directory: "/home/lizy2001/genbc/linux")
!6664 = !DISubroutineType(types: !6665)
!6665 = !{!138, !387}
!6666 = !DILocation(line: 43, column: 61, scope: !6662, inlinedAt: !6667)
!6667 = distinct !DILocation(line: 75, column: 41, scope: !6668, inlinedAt: !6672)
!6668 = distinct !DISubprogram(name: "hweight_long", scope: !6669, file: !6669, line: 73, type: !6670, scopeLine: 74, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!6669 = !DIFile(filename: "./include/linux/bitops.h", directory: "/home/lizy2001/genbc/linux")
!6670 = !DISubroutineType(types: !6671)
!6671 = !{!138, !138}
!6672 = distinct !DILocation(line: 401, column: 10, scope: !6673, inlinedAt: !6677)
!6673 = distinct !DILexicalBlock(scope: !6674, file: !5400, line: 400, column: 6)
!6674 = distinct !DISubprogram(name: "bitmap_weight", scope: !5400, file: !5400, line: 398, type: !6675, scopeLine: 399, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!6675 = !DISubroutineType(types: !6676)
!6676 = !{!113, !5403, !7}
!6677 = distinct !DILocation(line: 2055, column: 13, scope: !6678)
!6678 = distinct !DILexicalBlock(scope: !6658, file: !3, line: 2054, column: 6)
!6679 = !DILocalVariable(name: "res", scope: !6662, file: !6663, line: 45, type: !138)
!6680 = !DILocation(line: 45, column: 16, scope: !6662, inlinedAt: !6667)
!6681 = !DILocalVariable(name: "w", arg: 1, scope: !6668, file: !6669, line: 73, type: !138)
!6682 = !DILocation(line: 73, column: 65, scope: !6668, inlinedAt: !6672)
!6683 = !DILocalVariable(name: "src", arg: 1, scope: !6674, file: !5400, line: 398, type: !5403)
!6684 = !DILocation(line: 398, column: 63, scope: !6674, inlinedAt: !6677)
!6685 = !DILocalVariable(name: "nbits", arg: 2, scope: !6674, file: !5400, line: 398, type: !7)
!6686 = !DILocation(line: 398, column: 81, scope: !6674, inlinedAt: !6677)
!6687 = !DILocalVariable(name: "dev", arg: 1, scope: !6658, file: !3, line: 2030, type: !119)
!6688 = !DILocation(line: 2030, column: 72, scope: !6658)
!6689 = !DILocalVariable(name: "mt_slots", scope: !6658, file: !3, line: 2032, type: !113)
!6690 = !DILocation(line: 2032, column: 6, scope: !6658)
!6691 = !DILocalVariable(name: "i", scope: !6658, file: !3, line: 2033, type: !113)
!6692 = !DILocation(line: 2033, column: 6, scope: !6658)
!6693 = !DILocalVariable(name: "events", scope: !6658, file: !3, line: 2034, type: !7)
!6694 = !DILocation(line: 2034, column: 15, scope: !6658)
!6695 = !DILocation(line: 2036, column: 6, scope: !6696)
!6696 = distinct !DILexicalBlock(scope: !6658, file: !3, line: 2036, column: 6)
!6697 = !DILocation(line: 2036, column: 11, scope: !6696)
!6698 = !DILocation(line: 2036, column: 6, scope: !6658)
!6699 = !DILocation(line: 2037, column: 14, scope: !6700)
!6700 = distinct !DILexicalBlock(scope: !6696, file: !3, line: 2036, column: 15)
!6701 = !DILocation(line: 2037, column: 19, scope: !6700)
!6702 = !DILocation(line: 2037, column: 23, scope: !6700)
!6703 = !DILocation(line: 2037, column: 12, scope: !6700)
!6704 = !DILocation(line: 2038, column: 2, scope: !6700)
!6705 = !DILocation(line: 2038, column: 42, scope: !6706)
!6706 = distinct !DILexicalBlock(scope: !6696, file: !3, line: 2038, column: 13)
!6707 = !DILocation(line: 2038, column: 47, scope: !6706)
!6708 = !DILocation(line: 2038, column: 13, scope: !6706)
!6709 = !DILocation(line: 2038, column: 13, scope: !6696)
!6710 = !DILocation(line: 2039, column: 14, scope: !6711)
!6711 = distinct !DILexicalBlock(scope: !6706, file: !3, line: 2038, column: 56)
!6712 = !DILocation(line: 2039, column: 19, scope: !6711)
!6713 = !DILocation(line: 2039, column: 47, scope: !6711)
!6714 = !DILocation(line: 2040, column: 7, scope: !6711)
!6715 = !DILocation(line: 2040, column: 12, scope: !6711)
!6716 = !DILocation(line: 2040, column: 40, scope: !6711)
!6717 = !DILocation(line: 2039, column: 55, scope: !6711)
!6718 = !DILocation(line: 2040, column: 48, scope: !6711)
!6719 = !DILocation(line: 2039, column: 12, scope: !6711)
!6720 = !DILocalVariable(name: "__UNIQUE_ID___x300", scope: !6721, file: !3, line: 2041, type: !113)
!6721 = distinct !DILexicalBlock(scope: !6711, file: !3, line: 2041, column: 14)
!6722 = !DILocation(line: 2041, column: 14, scope: !6721)
!6723 = !DILocalVariable(name: "__UNIQUE_ID___x298", scope: !6724, file: !3, line: 2041, type: !113)
!6724 = distinct !DILexicalBlock(scope: !6721, file: !3, line: 2041, column: 14)
!6725 = !DILocation(line: 2041, column: 14, scope: !6724)
!6726 = !DILocalVariable(name: "__UNIQUE_ID___y299", scope: !6724, file: !3, line: 2041, type: !113)
!6727 = !DILocalVariable(name: "__UNIQUE_ID___y301", scope: !6721, file: !3, line: 2041, type: !113)
!6728 = !DILocation(line: 2041, column: 12, scope: !6711)
!6729 = !DILocation(line: 2042, column: 2, scope: !6711)
!6730 = !DILocation(line: 2042, column: 41, scope: !6731)
!6731 = distinct !DILexicalBlock(scope: !6706, file: !3, line: 2042, column: 13)
!6732 = !DILocation(line: 2042, column: 46, scope: !6731)
!6733 = !DILocation(line: 2042, column: 13, scope: !6731)
!6734 = !DILocation(line: 2042, column: 13, scope: !6706)
!6735 = !DILocation(line: 2043, column: 12, scope: !6736)
!6736 = distinct !DILexicalBlock(scope: !6731, file: !3, line: 2042, column: 55)
!6737 = !DILocation(line: 2044, column: 2, scope: !6736)
!6738 = !DILocation(line: 2045, column: 12, scope: !6739)
!6739 = distinct !DILexicalBlock(scope: !6731, file: !3, line: 2044, column: 9)
!6740 = !DILocation(line: 2048, column: 11, scope: !6658)
!6741 = !DILocation(line: 2048, column: 20, scope: !6658)
!6742 = !DILocation(line: 2048, column: 9, scope: !6658)
!6743 = !DILocation(line: 2050, column: 23, scope: !6744)
!6744 = distinct !DILexicalBlock(scope: !6658, file: !3, line: 2050, column: 6)
!6745 = !DILocation(line: 2050, column: 28, scope: !6744)
!6746 = !DILocation(line: 2050, column: 6, scope: !6744)
!6747 = !DILocation(line: 2050, column: 6, scope: !6658)
!6748 = !DILocation(line: 2051, column: 3, scope: !6749)
!6749 = distinct !DILexicalBlock(scope: !6744, file: !3, line: 2051, column: 3)
!6750 = !DILocation(line: 2051, column: 3, scope: !6751)
!6751 = distinct !DILexicalBlock(scope: !6749, file: !3, line: 2051, column: 3)
!6752 = !DILocation(line: 2052, column: 31, scope: !6751)
!6753 = !DILocation(line: 2052, column: 14, scope: !6751)
!6754 = !DILocation(line: 2052, column: 36, scope: !6751)
!6755 = !DILocation(line: 2052, column: 11, scope: !6751)
!6756 = !DILocation(line: 2052, column: 4, scope: !6751)
!6757 = distinct !{!6757, !6748, !6758}
!6758 = !DILocation(line: 2052, column: 47, scope: !6749)
!6759 = !DILocation(line: 2054, column: 23, scope: !6678)
!6760 = !DILocation(line: 2054, column: 28, scope: !6678)
!6761 = !DILocation(line: 2054, column: 6, scope: !6678)
!6762 = !DILocation(line: 2054, column: 6, scope: !6658)
!6763 = !DILocation(line: 2055, column: 27, scope: !6678)
!6764 = !DILocation(line: 2055, column: 32, scope: !6678)
!6765 = !DILocation(line: 400, column: 6, scope: !6673, inlinedAt: !6677)
!6766 = !DILocation(line: 400, column: 6, scope: !6674, inlinedAt: !6677)
!6767 = !DILocation(line: 401, column: 24, scope: !6673, inlinedAt: !6677)
!6768 = !DILocation(line: 401, column: 23, scope: !6673, inlinedAt: !6677)
!6769 = !DILocation(line: 401, column: 30, scope: !6673, inlinedAt: !6677)
!6770 = !DILocation(line: 401, column: 28, scope: !6673, inlinedAt: !6677)
!6771 = !DILocation(line: 75, column: 41, scope: !6668, inlinedAt: !6672)
!6772 = !DILocation(line: 49, column: 15, scope: !6662, inlinedAt: !6667)
!6773 = !DILocation(line: 47, column: 2, scope: !6662, inlinedAt: !6667)
!6774 = !{i32 -2147114568, i32 -2147114540, i32 -2147114534, i32 -2147114518, i32 -2147114502, i32 -2147114475, i32 -2147114142, i32 -2147114860, i32 -2147114136, i32 -2147114088, i32 -2147114024, i32 -2147113962, i32 -2147113905, i32 -2147113849, i32 -2147114780, i32 -2147114755, i32 -2147113615, i32 -2147113485, i32 -2147113554, i32 -2147113471, i32 -2147114655}
!6775 = !DILocation(line: 51, column: 9, scope: !6662, inlinedAt: !6667)
!6776 = !DILocation(line: 401, column: 10, scope: !6673, inlinedAt: !6677)
!6777 = !DILocation(line: 401, column: 3, scope: !6673, inlinedAt: !6677)
!6778 = !DILocation(line: 402, column: 25, scope: !6674, inlinedAt: !6677)
!6779 = !DILocation(line: 402, column: 30, scope: !6674, inlinedAt: !6677)
!6780 = !DILocation(line: 402, column: 9, scope: !6674, inlinedAt: !6677)
!6781 = !DILocation(line: 402, column: 2, scope: !6674, inlinedAt: !6677)
!6782 = !DILocation(line: 403, column: 1, scope: !6674, inlinedAt: !6677)
!6783 = !DILocation(line: 2055, column: 10, scope: !6678)
!6784 = !DILocation(line: 2055, column: 3, scope: !6678)
!6785 = !DILocation(line: 2058, column: 9, scope: !6658)
!6786 = !DILocation(line: 2060, column: 9, scope: !6658)
!6787 = !DILocation(line: 2060, column: 2, scope: !6658)
!6788 = distinct !DISubprogram(name: "input_default_getkeycode", scope: !3, file: !3, line: 807, type: !182, scopeLine: 809, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!6789 = !DILocalVariable(name: "dev", arg: 1, scope: !6788, file: !3, line: 807, type: !119)
!6790 = !DILocation(line: 807, column: 55, scope: !6788)
!6791 = !DILocalVariable(name: "ke", arg: 2, scope: !6788, file: !3, line: 808, type: !184)
!6792 = !DILocation(line: 808, column: 36, scope: !6788)
!6793 = !DILocalVariable(name: "index", scope: !6788, file: !3, line: 810, type: !7)
!6794 = !DILocation(line: 810, column: 15, scope: !6788)
!6795 = !DILocalVariable(name: "error", scope: !6788, file: !3, line: 811, type: !113)
!6796 = !DILocation(line: 811, column: 6, scope: !6788)
!6797 = !DILocation(line: 813, column: 7, scope: !6798)
!6798 = distinct !DILexicalBlock(scope: !6788, file: !3, line: 813, column: 6)
!6799 = !DILocation(line: 813, column: 12, scope: !6798)
!6800 = !DILocation(line: 813, column: 6, scope: !6788)
!6801 = !DILocation(line: 814, column: 3, scope: !6798)
!6802 = !DILocation(line: 816, column: 6, scope: !6803)
!6803 = distinct !DILexicalBlock(scope: !6788, file: !3, line: 816, column: 6)
!6804 = !DILocation(line: 816, column: 10, scope: !6803)
!6805 = !DILocation(line: 816, column: 16, scope: !6803)
!6806 = !DILocation(line: 816, column: 6, scope: !6788)
!6807 = !DILocation(line: 817, column: 11, scope: !6803)
!6808 = !DILocation(line: 817, column: 15, scope: !6803)
!6809 = !DILocation(line: 817, column: 9, scope: !6803)
!6810 = !DILocation(line: 817, column: 3, scope: !6803)
!6811 = !DILocation(line: 819, column: 36, scope: !6812)
!6812 = distinct !DILexicalBlock(scope: !6803, file: !3, line: 818, column: 7)
!6813 = !DILocation(line: 819, column: 11, scope: !6812)
!6814 = !DILocation(line: 819, column: 9, scope: !6812)
!6815 = !DILocation(line: 820, column: 7, scope: !6816)
!6816 = distinct !DILexicalBlock(scope: !6812, file: !3, line: 820, column: 7)
!6817 = !DILocation(line: 820, column: 7, scope: !6812)
!6818 = !DILocation(line: 821, column: 11, scope: !6816)
!6819 = !DILocation(line: 821, column: 4, scope: !6816)
!6820 = !DILocation(line: 824, column: 6, scope: !6821)
!6821 = distinct !DILexicalBlock(scope: !6788, file: !3, line: 824, column: 6)
!6822 = !DILocation(line: 824, column: 15, scope: !6821)
!6823 = !DILocation(line: 824, column: 20, scope: !6821)
!6824 = !DILocation(line: 824, column: 12, scope: !6821)
!6825 = !DILocation(line: 824, column: 6, scope: !6788)
!6826 = !DILocation(line: 825, column: 3, scope: !6821)
!6827 = !DILocation(line: 827, column: 36, scope: !6788)
!6828 = !DILocation(line: 827, column: 41, scope: !6788)
!6829 = !DILocation(line: 827, column: 16, scope: !6788)
!6830 = !DILocation(line: 827, column: 2, scope: !6788)
!6831 = !DILocation(line: 827, column: 6, scope: !6788)
!6832 = !DILocation(line: 827, column: 14, scope: !6788)
!6833 = !DILocation(line: 828, column: 14, scope: !6788)
!6834 = !DILocation(line: 828, column: 2, scope: !6788)
!6835 = !DILocation(line: 828, column: 6, scope: !6788)
!6836 = !DILocation(line: 828, column: 12, scope: !6788)
!6837 = !DILocation(line: 829, column: 2, scope: !6788)
!6838 = !DILocation(line: 829, column: 6, scope: !6788)
!6839 = !DILocation(line: 829, column: 10, scope: !6788)
!6840 = !DILocation(line: 830, column: 9, scope: !6788)
!6841 = !DILocation(line: 830, column: 13, scope: !6788)
!6842 = !DILocation(line: 830, column: 2, scope: !6788)
!6843 = !DILocation(line: 832, column: 2, scope: !6788)
!6844 = !DILocation(line: 833, column: 1, scope: !6788)
!6845 = distinct !DISubprogram(name: "input_default_setkeycode", scope: !3, file: !3, line: 835, type: !162, scopeLine: 838, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!6846 = !DILocalVariable(name: "dev", arg: 1, scope: !6845, file: !3, line: 835, type: !119)
!6847 = !DILocation(line: 835, column: 55, scope: !6845)
!6848 = !DILocalVariable(name: "ke", arg: 2, scope: !6845, file: !3, line: 836, type: !164)
!6849 = !DILocation(line: 836, column: 42, scope: !6845)
!6850 = !DILocalVariable(name: "old_keycode", arg: 3, scope: !6845, file: !3, line: 837, type: !179)
!6851 = !DILocation(line: 837, column: 23, scope: !6845)
!6852 = !DILocalVariable(name: "index", scope: !6845, file: !3, line: 839, type: !7)
!6853 = !DILocation(line: 839, column: 15, scope: !6845)
!6854 = !DILocalVariable(name: "error", scope: !6845, file: !3, line: 840, type: !113)
!6855 = !DILocation(line: 840, column: 6, scope: !6845)
!6856 = !DILocalVariable(name: "i", scope: !6845, file: !3, line: 841, type: !113)
!6857 = !DILocation(line: 841, column: 6, scope: !6845)
!6858 = !DILocation(line: 843, column: 7, scope: !6859)
!6859 = distinct !DILexicalBlock(scope: !6845, file: !3, line: 843, column: 6)
!6860 = !DILocation(line: 843, column: 12, scope: !6859)
!6861 = !DILocation(line: 843, column: 6, scope: !6845)
!6862 = !DILocation(line: 844, column: 3, scope: !6859)
!6863 = !DILocation(line: 846, column: 6, scope: !6864)
!6864 = distinct !DILexicalBlock(scope: !6845, file: !3, line: 846, column: 6)
!6865 = !DILocation(line: 846, column: 10, scope: !6864)
!6866 = !DILocation(line: 846, column: 16, scope: !6864)
!6867 = !DILocation(line: 846, column: 6, scope: !6845)
!6868 = !DILocation(line: 847, column: 11, scope: !6869)
!6869 = distinct !DILexicalBlock(scope: !6864, file: !3, line: 846, column: 41)
!6870 = !DILocation(line: 847, column: 15, scope: !6869)
!6871 = !DILocation(line: 847, column: 9, scope: !6869)
!6872 = !DILocation(line: 848, column: 2, scope: !6869)
!6873 = !DILocation(line: 849, column: 36, scope: !6874)
!6874 = distinct !DILexicalBlock(scope: !6864, file: !3, line: 848, column: 9)
!6875 = !DILocation(line: 849, column: 11, scope: !6874)
!6876 = !DILocation(line: 849, column: 9, scope: !6874)
!6877 = !DILocation(line: 850, column: 7, scope: !6878)
!6878 = distinct !DILexicalBlock(scope: !6874, file: !3, line: 850, column: 7)
!6879 = !DILocation(line: 850, column: 7, scope: !6874)
!6880 = !DILocation(line: 851, column: 11, scope: !6878)
!6881 = !DILocation(line: 851, column: 4, scope: !6878)
!6882 = !DILocation(line: 854, column: 6, scope: !6883)
!6883 = distinct !DILexicalBlock(scope: !6845, file: !3, line: 854, column: 6)
!6884 = !DILocation(line: 854, column: 15, scope: !6883)
!6885 = !DILocation(line: 854, column: 20, scope: !6883)
!6886 = !DILocation(line: 854, column: 12, scope: !6883)
!6887 = !DILocation(line: 854, column: 6, scope: !6845)
!6888 = !DILocation(line: 855, column: 3, scope: !6883)
!6889 = !DILocation(line: 857, column: 6, scope: !6890)
!6890 = distinct !DILexicalBlock(scope: !6845, file: !3, line: 857, column: 6)
!6891 = !DILocation(line: 857, column: 11, scope: !6890)
!6892 = !DILocation(line: 857, column: 23, scope: !6890)
!6893 = !DILocation(line: 857, column: 45, scope: !6890)
!6894 = !DILocation(line: 858, column: 5, scope: !6890)
!6895 = !DILocation(line: 858, column: 9, scope: !6890)
!6896 = !DILocation(line: 858, column: 21, scope: !6890)
!6897 = !DILocation(line: 858, column: 26, scope: !6890)
!6898 = !DILocation(line: 858, column: 38, scope: !6890)
!6899 = !DILocation(line: 858, column: 17, scope: !6890)
!6900 = !DILocation(line: 857, column: 6, scope: !6845)
!6901 = !DILocation(line: 859, column: 3, scope: !6890)
!6902 = !DILocation(line: 861, column: 10, scope: !6845)
!6903 = !DILocation(line: 861, column: 15, scope: !6845)
!6904 = !DILocation(line: 861, column: 2, scope: !6845)
!6905 = !DILocalVariable(name: "k", scope: !6906, file: !3, line: 863, type: !3857)
!6906 = distinct !DILexicalBlock(scope: !6907, file: !3, line: 862, column: 11)
!6907 = distinct !DILexicalBlock(scope: !6845, file: !3, line: 861, column: 28)
!6908 = !DILocation(line: 863, column: 8, scope: !6906)
!6909 = !DILocation(line: 863, column: 18, scope: !6906)
!6910 = !DILocation(line: 863, column: 23, scope: !6906)
!6911 = !DILocation(line: 864, column: 19, scope: !6906)
!6912 = !DILocation(line: 864, column: 21, scope: !6906)
!6913 = !DILocation(line: 864, column: 5, scope: !6906)
!6914 = !DILocation(line: 864, column: 17, scope: !6906)
!6915 = !DILocation(line: 865, column: 15, scope: !6906)
!6916 = !DILocation(line: 865, column: 19, scope: !6906)
!6917 = !DILocation(line: 865, column: 4, scope: !6906)
!6918 = !DILocation(line: 865, column: 6, scope: !6906)
!6919 = !DILocation(line: 865, column: 13, scope: !6906)
!6920 = !DILocation(line: 866, column: 4, scope: !6906)
!6921 = !DILocalVariable(name: "k", scope: !6922, file: !3, line: 869, type: !3858)
!6922 = distinct !DILexicalBlock(scope: !6907, file: !3, line: 868, column: 11)
!6923 = !DILocation(line: 869, column: 9, scope: !6922)
!6924 = !DILocation(line: 869, column: 20, scope: !6922)
!6925 = !DILocation(line: 869, column: 25, scope: !6922)
!6926 = !DILocation(line: 869, column: 13, scope: !6922)
!6927 = !DILocation(line: 870, column: 19, scope: !6922)
!6928 = !DILocation(line: 870, column: 21, scope: !6922)
!6929 = !DILocation(line: 870, column: 5, scope: !6922)
!6930 = !DILocation(line: 870, column: 17, scope: !6922)
!6931 = !DILocation(line: 871, column: 15, scope: !6922)
!6932 = !DILocation(line: 871, column: 19, scope: !6922)
!6933 = !DILocation(line: 871, column: 4, scope: !6922)
!6934 = !DILocation(line: 871, column: 6, scope: !6922)
!6935 = !DILocation(line: 871, column: 13, scope: !6922)
!6936 = !DILocation(line: 872, column: 4, scope: !6922)
!6937 = !DILocalVariable(name: "k", scope: !6938, file: !3, line: 875, type: !1368)
!6938 = distinct !DILexicalBlock(scope: !6907, file: !3, line: 874, column: 12)
!6939 = !DILocation(line: 875, column: 9, scope: !6938)
!6940 = !DILocation(line: 875, column: 20, scope: !6938)
!6941 = !DILocation(line: 875, column: 25, scope: !6938)
!6942 = !DILocation(line: 875, column: 13, scope: !6938)
!6943 = !DILocation(line: 876, column: 19, scope: !6938)
!6944 = !DILocation(line: 876, column: 21, scope: !6938)
!6945 = !DILocation(line: 876, column: 5, scope: !6938)
!6946 = !DILocation(line: 876, column: 17, scope: !6938)
!6947 = !DILocation(line: 877, column: 15, scope: !6938)
!6948 = !DILocation(line: 877, column: 19, scope: !6938)
!6949 = !DILocation(line: 877, column: 4, scope: !6938)
!6950 = !DILocation(line: 877, column: 6, scope: !6938)
!6951 = !DILocation(line: 877, column: 13, scope: !6938)
!6952 = !DILocation(line: 878, column: 4, scope: !6938)
!6953 = !DILocation(line: 882, column: 7, scope: !6954)
!6954 = distinct !DILexicalBlock(scope: !6845, file: !3, line: 882, column: 6)
!6955 = !DILocation(line: 882, column: 6, scope: !6954)
!6956 = !DILocation(line: 882, column: 19, scope: !6954)
!6957 = !DILocation(line: 882, column: 6, scope: !6845)
!6958 = !DILocation(line: 883, column: 16, scope: !6959)
!6959 = distinct !DILexicalBlock(scope: !6954, file: !3, line: 882, column: 31)
!6960 = !DILocation(line: 883, column: 15, scope: !6959)
!6961 = !DILocation(line: 883, column: 29, scope: !6959)
!6962 = !DILocation(line: 883, column: 34, scope: !6959)
!6963 = !DILocation(line: 883, column: 3, scope: !6959)
!6964 = !DILocation(line: 884, column: 10, scope: !6965)
!6965 = distinct !DILexicalBlock(scope: !6959, file: !3, line: 884, column: 3)
!6966 = !DILocation(line: 884, column: 8, scope: !6965)
!6967 = !DILocation(line: 884, column: 15, scope: !6968)
!6968 = distinct !DILexicalBlock(scope: !6965, file: !3, line: 884, column: 3)
!6969 = !DILocation(line: 884, column: 19, scope: !6968)
!6970 = !DILocation(line: 884, column: 24, scope: !6968)
!6971 = !DILocation(line: 884, column: 17, scope: !6968)
!6972 = !DILocation(line: 884, column: 3, scope: !6965)
!6973 = !DILocation(line: 885, column: 28, scope: !6974)
!6974 = distinct !DILexicalBlock(scope: !6975, file: !3, line: 885, column: 8)
!6975 = distinct !DILexicalBlock(scope: !6968, file: !3, line: 884, column: 41)
!6976 = !DILocation(line: 885, column: 33, scope: !6974)
!6977 = !DILocation(line: 885, column: 8, scope: !6974)
!6978 = !DILocation(line: 885, column: 40, scope: !6974)
!6979 = !DILocation(line: 885, column: 39, scope: !6974)
!6980 = !DILocation(line: 885, column: 36, scope: !6974)
!6981 = !DILocation(line: 885, column: 8, scope: !6975)
!6982 = !DILocation(line: 886, column: 16, scope: !6983)
!6983 = distinct !DILexicalBlock(scope: !6974, file: !3, line: 885, column: 53)
!6984 = !DILocation(line: 886, column: 15, scope: !6983)
!6985 = !DILocation(line: 886, column: 29, scope: !6983)
!6986 = !DILocation(line: 886, column: 34, scope: !6983)
!6987 = !DILocation(line: 886, column: 5, scope: !6983)
!6988 = !DILocation(line: 888, column: 5, scope: !6983)
!6989 = !DILocation(line: 890, column: 3, scope: !6975)
!6990 = !DILocation(line: 884, column: 37, scope: !6968)
!6991 = !DILocation(line: 884, column: 3, scope: !6968)
!6992 = distinct !{!6992, !6972, !6993}
!6993 = !DILocation(line: 890, column: 3, scope: !6965)
!6994 = !DILocation(line: 891, column: 2, scope: !6959)
!6995 = !DILocation(line: 893, column: 12, scope: !6845)
!6996 = !DILocation(line: 893, column: 16, scope: !6845)
!6997 = !DILocation(line: 893, column: 25, scope: !6845)
!6998 = !DILocation(line: 893, column: 30, scope: !6845)
!6999 = !DILocation(line: 893, column: 2, scope: !6845)
!7000 = !DILocation(line: 894, column: 2, scope: !6845)
!7001 = !DILocation(line: 895, column: 1, scope: !6845)
!7002 = distinct !DISubprogram(name: "list_add_tail", scope: !5951, file: !5951, line: 98, type: !7003, scopeLine: 99, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!7003 = !DISubroutineType(types: !7004)
!7004 = !{null, !314, !314}
!7005 = !DILocalVariable(name: "new", arg: 1, scope: !7002, file: !5951, line: 98, type: !314)
!7006 = !DILocation(line: 98, column: 52, scope: !7002)
!7007 = !DILocalVariable(name: "head", arg: 2, scope: !7002, file: !5951, line: 98, type: !314)
!7008 = !DILocation(line: 98, column: 75, scope: !7002)
!7009 = !DILocation(line: 100, column: 13, scope: !7002)
!7010 = !DILocation(line: 100, column: 18, scope: !7002)
!7011 = !DILocation(line: 100, column: 24, scope: !7002)
!7012 = !DILocation(line: 100, column: 30, scope: !7002)
!7013 = !DILocation(line: 100, column: 2, scope: !7002)
!7014 = !DILocation(line: 101, column: 1, scope: !7002)
!7015 = distinct !DISubprogram(name: "input_attach_handler", scope: !3, file: !3, line: 1022, type: !7016, scopeLine: 1023, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!7016 = !DISubroutineType(types: !7017)
!7017 = !{!113, !119, !3790}
!7018 = !DILocalVariable(name: "dev", arg: 1, scope: !7015, file: !3, line: 1022, type: !119)
!7019 = !DILocation(line: 1022, column: 51, scope: !7015)
!7020 = !DILocalVariable(name: "handler", arg: 2, scope: !7015, file: !3, line: 1022, type: !3790)
!7021 = !DILocation(line: 1022, column: 78, scope: !7015)
!7022 = !DILocalVariable(name: "id", scope: !7015, file: !3, line: 1024, type: !3816)
!7023 = !DILocation(line: 1024, column: 32, scope: !7015)
!7024 = !DILocalVariable(name: "error", scope: !7015, file: !3, line: 1025, type: !113)
!7025 = !DILocation(line: 1025, column: 6, scope: !7015)
!7026 = !DILocation(line: 1027, column: 26, scope: !7015)
!7027 = !DILocation(line: 1027, column: 35, scope: !7015)
!7028 = !DILocation(line: 1027, column: 7, scope: !7015)
!7029 = !DILocation(line: 1027, column: 5, scope: !7015)
!7030 = !DILocation(line: 1028, column: 7, scope: !7031)
!7031 = distinct !DILexicalBlock(scope: !7015, file: !3, line: 1028, column: 6)
!7032 = !DILocation(line: 1028, column: 6, scope: !7015)
!7033 = !DILocation(line: 1029, column: 3, scope: !7031)
!7034 = !DILocation(line: 1031, column: 10, scope: !7015)
!7035 = !DILocation(line: 1031, column: 19, scope: !7015)
!7036 = !DILocation(line: 1031, column: 27, scope: !7015)
!7037 = !DILocation(line: 1031, column: 36, scope: !7015)
!7038 = !DILocation(line: 1031, column: 41, scope: !7015)
!7039 = !DILocation(line: 1031, column: 8, scope: !7015)
!7040 = !DILocation(line: 1032, column: 6, scope: !7041)
!7041 = distinct !DILexicalBlock(scope: !7015, file: !3, line: 1032, column: 6)
!7042 = !DILocation(line: 1032, column: 12, scope: !7041)
!7043 = !DILocation(line: 1032, column: 15, scope: !7041)
!7044 = !DILocation(line: 1032, column: 21, scope: !7041)
!7045 = !DILocation(line: 1032, column: 6, scope: !7015)
!7046 = !DILocation(line: 1033, column: 3, scope: !7041)
!7047 = !DILocation(line: 1036, column: 9, scope: !7015)
!7048 = !DILocation(line: 1036, column: 2, scope: !7015)
!7049 = !DILocation(line: 1037, column: 1, scope: !7015)
!7050 = distinct !DISubprogram(name: "input_wakeup_procfs_readers", scope: !3, file: !3, line: 1080, type: !1835, scopeLine: 1081, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!7051 = !DILocation(line: 1082, column: 21, scope: !7050)
!7052 = !DILocation(line: 1083, column: 2, scope: !7050)
!7053 = !DILocation(line: 1084, column: 1, scope: !7050)
!7054 = distinct !DISubprogram(name: "input_unregister_device", scope: !3, file: !3, line: 2260, type: !3121, scopeLine: 2261, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !309)
!7055 = !DILocalVariable(name: "dev", arg: 1, scope: !7054, file: !3, line: 2260, type: !119)
!7056 = !DILocation(line: 2260, column: 48, scope: !7054)
!7057 = !DILocation(line: 2262, column: 6, scope: !7058)
!7058 = distinct !DILexicalBlock(scope: !7054, file: !3, line: 2262, column: 6)
!7059 = !DILocation(line: 2262, column: 11, scope: !7058)
!7060 = !DILocation(line: 2262, column: 6, scope: !7054)
!7061 = !DILocalVariable(name: "__ret_warn_on", scope: !7062, file: !3, line: 2263, type: !113)
!7062 = distinct !DILexicalBlock(scope: !7063, file: !3, line: 2263, column: 3)
!7063 = distinct !DILexicalBlock(scope: !7058, file: !3, line: 2262, column: 27)
!7064 = !DILocation(line: 2263, column: 3, scope: !7062)
!7065 = !DILocation(line: 2263, column: 3, scope: !7066)
!7066 = distinct !DILexicalBlock(scope: !7062, file: !3, line: 2263, column: 3)
!7067 = !DILocation(line: 2263, column: 3, scope: !7068)
!7068 = distinct !DILexicalBlock(scope: !7066, file: !3, line: 2263, column: 3)
!7069 = !DILocation(line: 2263, column: 3, scope: !7070)
!7070 = distinct !DILexicalBlock(scope: !7068, file: !3, line: 2263, column: 3)
!7071 = !DILocation(line: 2263, column: 3, scope: !7072)
!7072 = distinct !DILexicalBlock(scope: !7068, file: !3, line: 2263, column: 3)
!7073 = !{i32 -2142281158, i32 -2142281129, i32 -2142281083, i32 -2142281025, i32 -2142280971, i32 -2142280917, i32 -2142280862, i32 -2142280831}
!7074 = !DILocation(line: 2263, column: 3, scope: !7075)
!7075 = distinct !DILexicalBlock(scope: !7068, file: !3, line: 2263, column: 3)
!7076 = !{i32 -2142280427, i32 -2142280420, i32 -2142280368, i32 -2142280337, i32 -2142280307}
!7077 = !DILocation(line: 2263, column: 3, scope: !7078)
!7078 = distinct !DILexicalBlock(scope: !7068, file: !3, line: 2263, column: 3)
!7079 = !DILocation(line: 2267, column: 29, scope: !7063)
!7080 = !DILocation(line: 2267, column: 3, scope: !7063)
!7081 = !DILocation(line: 2272, column: 2, scope: !7063)
!7082 = !DILocation(line: 2273, column: 29, scope: !7083)
!7083 = distinct !DILexicalBlock(scope: !7058, file: !3, line: 2272, column: 9)
!7084 = !DILocation(line: 2273, column: 3, scope: !7083)
!7085 = !DILocation(line: 2274, column: 20, scope: !7083)
!7086 = !DILocation(line: 2274, column: 3, scope: !7083)
!7087 = !DILocation(line: 2276, column: 1, scope: !7054)
!7088 = distinct !DISubprogram(name: "__input_unregister_device", scope: !3, file: !3, line: 2082, type: !3121, scopeLine: 2083, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!7089 = !DILocalVariable(name: "dev", arg: 1, scope: !7088, file: !3, line: 2082, type: !119)
!7090 = !DILocation(line: 2082, column: 57, scope: !7088)
!7091 = !DILocalVariable(name: "handle", scope: !7088, file: !3, line: 2084, type: !107)
!7092 = !DILocation(line: 2084, column: 23, scope: !7088)
!7093 = !DILocalVariable(name: "next", scope: !7088, file: !3, line: 2084, type: !107)
!7094 = !DILocation(line: 2084, column: 32, scope: !7088)
!7095 = !DILocation(line: 2086, column: 26, scope: !7088)
!7096 = !DILocation(line: 2086, column: 2, scope: !7088)
!7097 = !DILocation(line: 2088, column: 2, scope: !7088)
!7098 = !DILocalVariable(name: "__mptr", scope: !7099, file: !3, line: 2090, type: !111)
!7099 = distinct !DILexicalBlock(scope: !7100, file: !3, line: 2090, column: 2)
!7100 = distinct !DILexicalBlock(scope: !7088, file: !3, line: 2090, column: 2)
!7101 = !DILocation(line: 2090, column: 2, scope: !7099)
!7102 = !DILocation(line: 2090, column: 2, scope: !7103)
!7103 = distinct !DILexicalBlock(scope: !7099, file: !3, line: 2090, column: 2)
!7104 = !DILocation(line: 2090, column: 2, scope: !7100)
!7105 = !DILocalVariable(name: "__mptr", scope: !7106, file: !3, line: 2090, type: !111)
!7106 = distinct !DILexicalBlock(scope: !7100, file: !3, line: 2090, column: 2)
!7107 = !DILocation(line: 2090, column: 2, scope: !7106)
!7108 = !DILocation(line: 2090, column: 2, scope: !7109)
!7109 = distinct !DILexicalBlock(scope: !7106, file: !3, line: 2090, column: 2)
!7110 = !DILocation(line: 2090, column: 2, scope: !7111)
!7111 = distinct !DILexicalBlock(scope: !7100, file: !3, line: 2090, column: 2)
!7112 = !DILocation(line: 2091, column: 3, scope: !7111)
!7113 = !DILocation(line: 2091, column: 11, scope: !7111)
!7114 = !DILocation(line: 2091, column: 20, scope: !7111)
!7115 = !DILocation(line: 2091, column: 31, scope: !7111)
!7116 = !DILocalVariable(name: "__mptr", scope: !7117, file: !3, line: 2090, type: !111)
!7117 = distinct !DILexicalBlock(scope: !7111, file: !3, line: 2090, column: 2)
!7118 = !DILocation(line: 2090, column: 2, scope: !7117)
!7119 = !DILocation(line: 2090, column: 2, scope: !7120)
!7120 = distinct !DILexicalBlock(scope: !7117, file: !3, line: 2090, column: 2)
!7121 = distinct !{!7121, !7104, !7122}
!7122 = !DILocation(line: 2091, column: 37, scope: !7100)
!7123 = !DILocalVariable(name: "__ret_warn_on", scope: !7124, file: !3, line: 2092, type: !113)
!7124 = distinct !DILexicalBlock(scope: !7088, file: !3, line: 2092, column: 2)
!7125 = !DILocation(line: 2092, column: 2, scope: !7124)
!7126 = !DILocation(line: 2092, column: 2, scope: !7127)
!7127 = distinct !DILexicalBlock(scope: !7124, file: !3, line: 2092, column: 2)
!7128 = !DILocation(line: 2092, column: 2, scope: !7129)
!7129 = distinct !DILexicalBlock(scope: !7127, file: !3, line: 2092, column: 2)
!7130 = !DILocation(line: 2092, column: 2, scope: !7131)
!7131 = distinct !DILexicalBlock(scope: !7129, file: !3, line: 2092, column: 2)
!7132 = !DILocation(line: 2092, column: 2, scope: !7133)
!7133 = distinct !DILexicalBlock(scope: !7129, file: !3, line: 2092, column: 2)
!7134 = !{i32 -2142288426, i32 -2142288397, i32 -2142288351, i32 -2142288293, i32 -2142288239, i32 -2142288185, i32 -2142288130, i32 -2142288099}
!7135 = !DILocation(line: 2092, column: 2, scope: !7136)
!7136 = distinct !DILexicalBlock(scope: !7129, file: !3, line: 2092, column: 2)
!7137 = !{i32 -2142287695, i32 -2142287688, i32 -2142287636, i32 -2142287605, i32 -2142287575}
!7138 = !DILocation(line: 2092, column: 2, scope: !7139)
!7139 = distinct !DILexicalBlock(scope: !7129, file: !3, line: 2092, column: 2)
!7140 = !DILocation(line: 2094, column: 2, scope: !7088)
!7141 = !DILocation(line: 2095, column: 17, scope: !7088)
!7142 = !DILocation(line: 2095, column: 22, scope: !7088)
!7143 = !DILocation(line: 2095, column: 2, scope: !7088)
!7144 = !DILocation(line: 2097, column: 2, scope: !7088)
!7145 = !DILocation(line: 2099, column: 2, scope: !7088)
!7146 = !DILocation(line: 2101, column: 14, scope: !7088)
!7147 = !DILocation(line: 2101, column: 19, scope: !7088)
!7148 = !DILocation(line: 2101, column: 2, scope: !7088)
!7149 = !DILocation(line: 2102, column: 1, scope: !7088)
!7150 = distinct !DISubprogram(name: "input_register_handler", scope: !3, file: !3, line: 2287, type: !7151, scopeLine: 2288, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !309)
!7151 = !DISubroutineType(types: !7152)
!7152 = !{!113, !3790}
!7153 = !DILocalVariable(name: "handler", arg: 1, scope: !7150, file: !3, line: 2287, type: !3790)
!7154 = !DILocation(line: 2287, column: 50, scope: !7150)
!7155 = !DILocalVariable(name: "dev", scope: !7150, file: !3, line: 2289, type: !119)
!7156 = !DILocation(line: 2289, column: 20, scope: !7150)
!7157 = !DILocalVariable(name: "error", scope: !7150, file: !3, line: 2290, type: !113)
!7158 = !DILocation(line: 2290, column: 6, scope: !7150)
!7159 = !DILocation(line: 2292, column: 10, scope: !7150)
!7160 = !DILocation(line: 2292, column: 8, scope: !7150)
!7161 = !DILocation(line: 2293, column: 6, scope: !7162)
!7162 = distinct !DILexicalBlock(scope: !7150, file: !3, line: 2293, column: 6)
!7163 = !DILocation(line: 2293, column: 6, scope: !7150)
!7164 = !DILocation(line: 2294, column: 10, scope: !7162)
!7165 = !DILocation(line: 2294, column: 3, scope: !7162)
!7166 = !DILocation(line: 2296, column: 18, scope: !7150)
!7167 = !DILocation(line: 2296, column: 27, scope: !7150)
!7168 = !DILocation(line: 2296, column: 2, scope: !7150)
!7169 = !DILocation(line: 2298, column: 17, scope: !7150)
!7170 = !DILocation(line: 2298, column: 26, scope: !7150)
!7171 = !DILocation(line: 2298, column: 2, scope: !7150)
!7172 = !DILocalVariable(name: "__mptr", scope: !7173, file: !3, line: 2300, type: !111)
!7173 = distinct !DILexicalBlock(scope: !7174, file: !3, line: 2300, column: 2)
!7174 = distinct !DILexicalBlock(scope: !7150, file: !3, line: 2300, column: 2)
!7175 = !DILocation(line: 2300, column: 2, scope: !7173)
!7176 = !DILocation(line: 2300, column: 2, scope: !7177)
!7177 = distinct !DILexicalBlock(scope: !7173, file: !3, line: 2300, column: 2)
!7178 = !DILocation(line: 2300, column: 2, scope: !7174)
!7179 = !DILocation(line: 2300, column: 2, scope: !7180)
!7180 = distinct !DILexicalBlock(scope: !7174, file: !3, line: 2300, column: 2)
!7181 = !DILocation(line: 2301, column: 24, scope: !7180)
!7182 = !DILocation(line: 2301, column: 29, scope: !7180)
!7183 = !DILocation(line: 2301, column: 3, scope: !7180)
!7184 = !DILocalVariable(name: "__mptr", scope: !7185, file: !3, line: 2300, type: !111)
!7185 = distinct !DILexicalBlock(scope: !7180, file: !3, line: 2300, column: 2)
!7186 = !DILocation(line: 2300, column: 2, scope: !7185)
!7187 = !DILocation(line: 2300, column: 2, scope: !7188)
!7188 = distinct !DILexicalBlock(scope: !7185, file: !3, line: 2300, column: 2)
!7189 = distinct !{!7189, !7178, !7190}
!7190 = !DILocation(line: 2301, column: 36, scope: !7174)
!7191 = !DILocation(line: 2303, column: 2, scope: !7150)
!7192 = !DILocation(line: 2305, column: 2, scope: !7150)
!7193 = !DILocation(line: 2306, column: 2, scope: !7150)
!7194 = !DILocation(line: 2307, column: 1, scope: !7150)
!7195 = distinct !DISubprogram(name: "input_unregister_handler", scope: !3, file: !3, line: 2317, type: !7196, scopeLine: 2318, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !309)
!7196 = !DISubroutineType(types: !7197)
!7197 = !{null, !3790}
!7198 = !DILocalVariable(name: "handler", arg: 1, scope: !7195, file: !3, line: 2317, type: !3790)
!7199 = !DILocation(line: 2317, column: 53, scope: !7195)
!7200 = !DILocalVariable(name: "handle", scope: !7195, file: !3, line: 2319, type: !107)
!7201 = !DILocation(line: 2319, column: 23, scope: !7195)
!7202 = !DILocalVariable(name: "next", scope: !7195, file: !3, line: 2319, type: !107)
!7203 = !DILocation(line: 2319, column: 32, scope: !7195)
!7204 = !DILocation(line: 2321, column: 2, scope: !7195)
!7205 = !DILocalVariable(name: "__mptr", scope: !7206, file: !3, line: 2323, type: !111)
!7206 = distinct !DILexicalBlock(scope: !7207, file: !3, line: 2323, column: 2)
!7207 = distinct !DILexicalBlock(scope: !7195, file: !3, line: 2323, column: 2)
!7208 = !DILocation(line: 2323, column: 2, scope: !7206)
!7209 = !DILocation(line: 2323, column: 2, scope: !7210)
!7210 = distinct !DILexicalBlock(scope: !7206, file: !3, line: 2323, column: 2)
!7211 = !DILocation(line: 2323, column: 2, scope: !7207)
!7212 = !DILocalVariable(name: "__mptr", scope: !7213, file: !3, line: 2323, type: !111)
!7213 = distinct !DILexicalBlock(scope: !7207, file: !3, line: 2323, column: 2)
!7214 = !DILocation(line: 2323, column: 2, scope: !7213)
!7215 = !DILocation(line: 2323, column: 2, scope: !7216)
!7216 = distinct !DILexicalBlock(scope: !7213, file: !3, line: 2323, column: 2)
!7217 = !DILocation(line: 2323, column: 2, scope: !7218)
!7218 = distinct !DILexicalBlock(scope: !7207, file: !3, line: 2323, column: 2)
!7219 = !DILocation(line: 2324, column: 3, scope: !7218)
!7220 = !DILocation(line: 2324, column: 12, scope: !7218)
!7221 = !DILocation(line: 2324, column: 23, scope: !7218)
!7222 = !DILocalVariable(name: "__mptr", scope: !7223, file: !3, line: 2323, type: !111)
!7223 = distinct !DILexicalBlock(scope: !7218, file: !3, line: 2323, column: 2)
!7224 = !DILocation(line: 2323, column: 2, scope: !7223)
!7225 = !DILocation(line: 2323, column: 2, scope: !7226)
!7226 = distinct !DILexicalBlock(scope: !7223, file: !3, line: 2323, column: 2)
!7227 = distinct !{!7227, !7211, !7228}
!7228 = !DILocation(line: 2324, column: 29, scope: !7207)
!7229 = !DILocalVariable(name: "__ret_warn_on", scope: !7230, file: !3, line: 2325, type: !113)
!7230 = distinct !DILexicalBlock(scope: !7195, file: !3, line: 2325, column: 2)
!7231 = !DILocation(line: 2325, column: 2, scope: !7230)
!7232 = !DILocation(line: 2325, column: 2, scope: !7233)
!7233 = distinct !DILexicalBlock(scope: !7230, file: !3, line: 2325, column: 2)
!7234 = !DILocation(line: 2325, column: 2, scope: !7235)
!7235 = distinct !DILexicalBlock(scope: !7233, file: !3, line: 2325, column: 2)
!7236 = !DILocation(line: 2325, column: 2, scope: !7237)
!7237 = distinct !DILexicalBlock(scope: !7235, file: !3, line: 2325, column: 2)
!7238 = !DILocation(line: 2325, column: 2, scope: !7239)
!7239 = distinct !DILexicalBlock(scope: !7235, file: !3, line: 2325, column: 2)
!7240 = !{i32 -2142269704, i32 -2142269675, i32 -2142269629, i32 -2142269571, i32 -2142269517, i32 -2142269463, i32 -2142269408, i32 -2142269377}
!7241 = !DILocation(line: 2325, column: 2, scope: !7242)
!7242 = distinct !DILexicalBlock(scope: !7235, file: !3, line: 2325, column: 2)
!7243 = !{i32 -2142268973, i32 -2142268966, i32 -2142268914, i32 -2142268883, i32 -2142268853}
!7244 = !DILocation(line: 2325, column: 2, scope: !7245)
!7245 = distinct !DILexicalBlock(scope: !7235, file: !3, line: 2325, column: 2)
!7246 = !DILocation(line: 2327, column: 17, scope: !7195)
!7247 = !DILocation(line: 2327, column: 26, scope: !7195)
!7248 = !DILocation(line: 2327, column: 2, scope: !7195)
!7249 = !DILocation(line: 2329, column: 2, scope: !7195)
!7250 = !DILocation(line: 2331, column: 2, scope: !7195)
!7251 = !DILocation(line: 2332, column: 1, scope: !7195)
!7252 = distinct !DISubprogram(name: "list_empty", scope: !5951, file: !5951, line: 280, type: !7253, scopeLine: 281, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!7253 = !DISubroutineType(types: !7254)
!7254 = !{!113, !7255}
!7255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7256, size: 64)
!7256 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !311)
!7257 = !DILocalVariable(name: "head", arg: 1, scope: !7252, file: !5951, line: 280, type: !7255)
!7258 = !DILocation(line: 280, column: 54, scope: !7252)
!7259 = !DILocation(line: 282, column: 9, scope: !7260)
!7260 = distinct !DILexicalBlock(scope: !7252, file: !5951, line: 282, column: 9)
!7261 = !DILocation(line: 282, column: 9, scope: !7262)
!7262 = distinct !DILexicalBlock(scope: !7260, file: !5951, line: 282, column: 9)
!7263 = !DILocation(line: 282, column: 34, scope: !7252)
!7264 = !DILocation(line: 282, column: 31, scope: !7252)
!7265 = !DILocation(line: 282, column: 2, scope: !7252)
!7266 = distinct !DISubprogram(name: "list_del_init", scope: !5951, file: !5951, line: 202, type: !5952, scopeLine: 203, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!7267 = !DILocalVariable(name: "entry", arg: 1, scope: !7266, file: !5951, line: 202, type: !314)
!7268 = !DILocation(line: 202, column: 52, scope: !7266)
!7269 = !DILocation(line: 204, column: 19, scope: !7266)
!7270 = !DILocation(line: 204, column: 2, scope: !7266)
!7271 = !DILocation(line: 205, column: 17, scope: !7266)
!7272 = !DILocation(line: 205, column: 2, scope: !7266)
!7273 = !DILocation(line: 206, column: 1, scope: !7266)
!7274 = distinct !DISubprogram(name: "input_handler_for_each_handle", scope: !3, file: !3, line: 2347, type: !7275, scopeLine: 2349, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !309)
!7275 = !DISubroutineType(types: !7276)
!7276 = !{!113, !3790, !111, !7277}
!7277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7278, size: 64)
!7278 = !DISubroutineType(types: !7279)
!7279 = !{!113, !107, !111}
!7280 = !DILocalVariable(name: "handler", arg: 1, scope: !7274, file: !3, line: 2347, type: !3790)
!7281 = !DILocation(line: 2347, column: 57, scope: !7274)
!7282 = !DILocalVariable(name: "data", arg: 2, scope: !7274, file: !3, line: 2347, type: !111)
!7283 = !DILocation(line: 2347, column: 72, scope: !7274)
!7284 = !DILocalVariable(name: "fn", arg: 3, scope: !7274, file: !3, line: 2348, type: !7277)
!7285 = !DILocation(line: 2348, column: 13, scope: !7274)
!7286 = !DILocalVariable(name: "handle", scope: !7274, file: !3, line: 2350, type: !107)
!7287 = !DILocation(line: 2350, column: 23, scope: !7274)
!7288 = !DILocalVariable(name: "retval", scope: !7274, file: !3, line: 2351, type: !113)
!7289 = !DILocation(line: 2351, column: 6, scope: !7274)
!7290 = !DILocation(line: 639, column: 2, scope: !4359, inlinedAt: !7291)
!7291 = distinct !DILocation(line: 2353, column: 2, scope: !7274)
!7292 = !DILocalVariable(name: "__mptr", scope: !7293, file: !3, line: 2355, type: !111)
!7293 = distinct !DILexicalBlock(scope: !7294, file: !3, line: 2355, column: 2)
!7294 = distinct !DILexicalBlock(scope: !7274, file: !3, line: 2355, column: 2)
!7295 = !DILocation(line: 2355, column: 2, scope: !7293)
!7296 = !DILocation(line: 2355, column: 2, scope: !7297)
!7297 = distinct !DILexicalBlock(scope: !7293, file: !3, line: 2355, column: 2)
!7298 = !DILocation(line: 2355, column: 2, scope: !7299)
!7299 = distinct !DILexicalBlock(scope: !7297, file: !3, line: 2355, column: 2)
!7300 = !DILocation(line: 2355, column: 2, scope: !7301)
!7301 = distinct !DILexicalBlock(scope: !7293, file: !3, line: 2355, column: 2)
!7302 = !DILocation(line: 2355, column: 2, scope: !7294)
!7303 = !DILocation(line: 2355, column: 2, scope: !7304)
!7304 = distinct !DILexicalBlock(scope: !7294, file: !3, line: 2355, column: 2)
!7305 = !DILocation(line: 2356, column: 12, scope: !7306)
!7306 = distinct !DILexicalBlock(scope: !7304, file: !3, line: 2355, column: 60)
!7307 = !DILocation(line: 2356, column: 15, scope: !7306)
!7308 = !DILocation(line: 2356, column: 23, scope: !7306)
!7309 = !DILocation(line: 2356, column: 10, scope: !7306)
!7310 = !DILocation(line: 2357, column: 7, scope: !7311)
!7311 = distinct !DILexicalBlock(scope: !7306, file: !3, line: 2357, column: 7)
!7312 = !DILocation(line: 2357, column: 7, scope: !7306)
!7313 = !DILocation(line: 2358, column: 4, scope: !7311)
!7314 = !DILocation(line: 2359, column: 2, scope: !7306)
!7315 = !DILocalVariable(name: "__mptr", scope: !7316, file: !3, line: 2355, type: !111)
!7316 = distinct !DILexicalBlock(scope: !7304, file: !3, line: 2355, column: 2)
!7317 = !DILocation(line: 2355, column: 2, scope: !7316)
!7318 = !DILocation(line: 2355, column: 2, scope: !7319)
!7319 = distinct !DILexicalBlock(scope: !7316, file: !3, line: 2355, column: 2)
!7320 = !DILocation(line: 2355, column: 2, scope: !7321)
!7321 = distinct !DILexicalBlock(scope: !7319, file: !3, line: 2355, column: 2)
!7322 = !DILocation(line: 2355, column: 2, scope: !7323)
!7323 = distinct !DILexicalBlock(scope: !7316, file: !3, line: 2355, column: 2)
!7324 = distinct !{!7324, !7302, !7325}
!7325 = !DILocation(line: 2359, column: 2, scope: !7294)
!7326 = !DILocation(line: 2361, column: 2, scope: !7274)
!7327 = !DILocation(line: 2363, column: 9, scope: !7274)
!7328 = !DILocation(line: 2363, column: 2, scope: !7274)
!7329 = distinct !DISubprogram(name: "input_register_handle", scope: !3, file: !3, line: 2378, type: !4535, scopeLine: 2379, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !309)
!7330 = !DILocalVariable(name: "handle", arg: 1, scope: !7329, file: !3, line: 2378, type: !107)
!7331 = !DILocation(line: 2378, column: 48, scope: !7329)
!7332 = !DILocalVariable(name: "handler", scope: !7329, file: !3, line: 2380, type: !3790)
!7333 = !DILocation(line: 2380, column: 24, scope: !7329)
!7334 = !DILocation(line: 2380, column: 34, scope: !7329)
!7335 = !DILocation(line: 2380, column: 42, scope: !7329)
!7336 = !DILocalVariable(name: "dev", scope: !7329, file: !3, line: 2381, type: !119)
!7337 = !DILocation(line: 2381, column: 20, scope: !7329)
!7338 = !DILocation(line: 2381, column: 26, scope: !7329)
!7339 = !DILocation(line: 2381, column: 34, scope: !7329)
!7340 = !DILocalVariable(name: "error", scope: !7329, file: !3, line: 2382, type: !113)
!7341 = !DILocation(line: 2382, column: 6, scope: !7329)
!7342 = !DILocation(line: 2388, column: 36, scope: !7329)
!7343 = !DILocation(line: 2388, column: 41, scope: !7329)
!7344 = !DILocation(line: 2388, column: 10, scope: !7329)
!7345 = !DILocation(line: 2388, column: 8, scope: !7329)
!7346 = !DILocation(line: 2389, column: 6, scope: !7347)
!7347 = distinct !DILexicalBlock(scope: !7329, file: !3, line: 2389, column: 6)
!7348 = !DILocation(line: 2389, column: 6, scope: !7329)
!7349 = !DILocation(line: 2390, column: 10, scope: !7347)
!7350 = !DILocation(line: 2390, column: 3, scope: !7347)
!7351 = !DILocation(line: 2396, column: 6, scope: !7352)
!7352 = distinct !DILexicalBlock(scope: !7329, file: !3, line: 2396, column: 6)
!7353 = !DILocation(line: 2396, column: 15, scope: !7352)
!7354 = !DILocation(line: 2396, column: 6, scope: !7329)
!7355 = !DILocation(line: 2397, column: 17, scope: !7352)
!7356 = !DILocation(line: 2397, column: 25, scope: !7352)
!7357 = !DILocation(line: 2397, column: 34, scope: !7352)
!7358 = !DILocation(line: 2397, column: 39, scope: !7352)
!7359 = !DILocation(line: 2397, column: 3, scope: !7352)
!7360 = !DILocation(line: 2399, column: 22, scope: !7352)
!7361 = !DILocation(line: 2399, column: 30, scope: !7352)
!7362 = !DILocation(line: 2399, column: 39, scope: !7352)
!7363 = !DILocation(line: 2399, column: 44, scope: !7352)
!7364 = !DILocation(line: 2399, column: 3, scope: !7352)
!7365 = !DILocation(line: 2401, column: 16, scope: !7329)
!7366 = !DILocation(line: 2401, column: 21, scope: !7329)
!7367 = !DILocation(line: 2401, column: 2, scope: !7329)
!7368 = !DILocation(line: 2409, column: 21, scope: !7329)
!7369 = !DILocation(line: 2409, column: 29, scope: !7329)
!7370 = !DILocation(line: 2409, column: 38, scope: !7329)
!7371 = !DILocation(line: 2409, column: 47, scope: !7329)
!7372 = !DILocation(line: 2409, column: 2, scope: !7329)
!7373 = !DILocation(line: 2411, column: 6, scope: !7374)
!7374 = distinct !DILexicalBlock(scope: !7329, file: !3, line: 2411, column: 6)
!7375 = !DILocation(line: 2411, column: 15, scope: !7374)
!7376 = !DILocation(line: 2411, column: 6, scope: !7329)
!7377 = !DILocation(line: 2412, column: 3, scope: !7374)
!7378 = !DILocation(line: 2412, column: 12, scope: !7374)
!7379 = !DILocation(line: 2412, column: 18, scope: !7374)
!7380 = !DILocation(line: 2414, column: 2, scope: !7329)
!7381 = !DILocation(line: 2415, column: 1, scope: !7329)
!7382 = distinct !DISubprogram(name: "list_add_rcu", scope: !7383, file: !7383, line: 113, type: !7003, scopeLine: 114, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!7383 = !DIFile(filename: "./include/linux/rculist.h", directory: "/home/lizy2001/genbc/linux")
!7384 = !DILocalVariable(name: "new", arg: 1, scope: !7382, file: !7383, line: 113, type: !314)
!7385 = !DILocation(line: 113, column: 51, scope: !7382)
!7386 = !DILocalVariable(name: "head", arg: 2, scope: !7382, file: !7383, line: 113, type: !314)
!7387 = !DILocation(line: 113, column: 74, scope: !7382)
!7388 = !DILocation(line: 115, column: 17, scope: !7382)
!7389 = !DILocation(line: 115, column: 22, scope: !7382)
!7390 = !DILocation(line: 115, column: 28, scope: !7382)
!7391 = !DILocation(line: 115, column: 34, scope: !7382)
!7392 = !DILocation(line: 115, column: 2, scope: !7382)
!7393 = !DILocation(line: 116, column: 1, scope: !7382)
!7394 = distinct !DISubprogram(name: "list_add_tail_rcu", scope: !7383, file: !7383, line: 134, type: !7003, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!7395 = !DILocalVariable(name: "new", arg: 1, scope: !7394, file: !7383, line: 134, type: !314)
!7396 = !DILocation(line: 134, column: 56, scope: !7394)
!7397 = !DILocalVariable(name: "head", arg: 2, scope: !7394, file: !7383, line: 135, type: !314)
!7398 = !DILocation(line: 135, column: 24, scope: !7394)
!7399 = !DILocation(line: 137, column: 17, scope: !7394)
!7400 = !DILocation(line: 137, column: 22, scope: !7394)
!7401 = !DILocation(line: 137, column: 28, scope: !7394)
!7402 = !DILocation(line: 137, column: 34, scope: !7394)
!7403 = !DILocation(line: 137, column: 2, scope: !7394)
!7404 = !DILocation(line: 138, column: 1, scope: !7394)
!7405 = distinct !DISubprogram(name: "input_unregister_handle", scope: !3, file: !3, line: 2428, type: !3841, scopeLine: 2429, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !309)
!7406 = !DILocalVariable(name: "handle", arg: 1, scope: !7405, file: !3, line: 2428, type: !107)
!7407 = !DILocation(line: 2428, column: 51, scope: !7405)
!7408 = !DILocalVariable(name: "dev", scope: !7405, file: !3, line: 2430, type: !119)
!7409 = !DILocation(line: 2430, column: 20, scope: !7405)
!7410 = !DILocation(line: 2430, column: 26, scope: !7405)
!7411 = !DILocation(line: 2430, column: 34, scope: !7405)
!7412 = !DILocation(line: 2432, column: 16, scope: !7405)
!7413 = !DILocation(line: 2432, column: 24, scope: !7405)
!7414 = !DILocation(line: 2432, column: 2, scope: !7405)
!7415 = !DILocation(line: 2437, column: 14, scope: !7405)
!7416 = !DILocation(line: 2437, column: 19, scope: !7405)
!7417 = !DILocation(line: 2437, column: 2, scope: !7405)
!7418 = !DILocation(line: 2438, column: 16, scope: !7405)
!7419 = !DILocation(line: 2438, column: 24, scope: !7405)
!7420 = !DILocation(line: 2438, column: 2, scope: !7405)
!7421 = !DILocation(line: 2439, column: 16, scope: !7405)
!7422 = !DILocation(line: 2439, column: 21, scope: !7405)
!7423 = !DILocation(line: 2439, column: 2, scope: !7405)
!7424 = !DILocation(line: 2441, column: 2, scope: !7405)
!7425 = !DILocation(line: 2442, column: 1, scope: !7405)
!7426 = distinct !DISubprogram(name: "list_del_rcu", scope: !7383, file: !7383, line: 164, type: !5952, scopeLine: 165, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!7427 = !DILocalVariable(name: "entry", arg: 1, scope: !7426, file: !7383, line: 164, type: !314)
!7428 = !DILocation(line: 164, column: 51, scope: !7426)
!7429 = !DILocation(line: 166, column: 19, scope: !7426)
!7430 = !DILocation(line: 166, column: 2, scope: !7426)
!7431 = !DILocation(line: 167, column: 2, scope: !7426)
!7432 = !DILocation(line: 167, column: 9, scope: !7426)
!7433 = !DILocation(line: 167, column: 14, scope: !7426)
!7434 = !DILocation(line: 168, column: 1, scope: !7426)
!7435 = distinct !DISubprogram(name: "input_get_new_minor", scope: !3, file: !3, line: 2456, type: !7436, scopeLine: 2458, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !309)
!7436 = !DISubroutineType(types: !7437)
!7437 = !{!113, !113, !7, !457}
!7438 = !DILocalVariable(name: "legacy_base", arg: 1, scope: !7435, file: !3, line: 2456, type: !113)
!7439 = !DILocation(line: 2456, column: 29, scope: !7435)
!7440 = !DILocalVariable(name: "legacy_num", arg: 2, scope: !7435, file: !3, line: 2456, type: !7)
!7441 = !DILocation(line: 2456, column: 55, scope: !7435)
!7442 = !DILocalVariable(name: "allow_dynamic", arg: 3, scope: !7435, file: !3, line: 2457, type: !457)
!7443 = !DILocation(line: 2457, column: 9, scope: !7435)
!7444 = !DILocation(line: 2464, column: 6, scope: !7445)
!7445 = distinct !DILexicalBlock(scope: !7435, file: !3, line: 2464, column: 6)
!7446 = !DILocation(line: 2464, column: 18, scope: !7445)
!7447 = !DILocation(line: 2464, column: 6, scope: !7435)
!7448 = !DILocalVariable(name: "minor", scope: !7449, file: !3, line: 2465, type: !113)
!7449 = distinct !DILexicalBlock(scope: !7445, file: !3, line: 2464, column: 24)
!7450 = !DILocation(line: 2465, column: 7, scope: !7449)
!7451 = !DILocation(line: 2465, column: 15, scope: !7449)
!7452 = !DILocation(line: 2469, column: 7, scope: !7453)
!7453 = distinct !DILexicalBlock(scope: !7449, file: !3, line: 2469, column: 7)
!7454 = !DILocation(line: 2469, column: 13, scope: !7453)
!7455 = !DILocation(line: 2469, column: 18, scope: !7453)
!7456 = !DILocation(line: 2469, column: 22, scope: !7453)
!7457 = !DILocation(line: 2469, column: 7, scope: !7449)
!7458 = !DILocation(line: 2470, column: 11, scope: !7453)
!7459 = !DILocation(line: 2470, column: 4, scope: !7453)
!7460 = !DILocation(line: 2471, column: 2, scope: !7449)
!7461 = !DILocation(line: 2473, column: 9, scope: !7435)
!7462 = !DILocation(line: 2473, column: 2, scope: !7435)
!7463 = !DILocation(line: 2476, column: 1, scope: !7435)
!7464 = distinct !DISubprogram(name: "input_free_minor", scope: !3, file: !3, line: 2486, type: !7465, scopeLine: 2487, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !309)
!7465 = !DISubroutineType(types: !7466)
!7466 = !{null, !7}
!7467 = !DILocalVariable(name: "minor", arg: 1, scope: !7464, file: !3, line: 2486, type: !7)
!7468 = !DILocation(line: 2486, column: 36, scope: !7464)
!7469 = !DILocation(line: 2488, column: 2, scope: !7464)
!7470 = !DILocation(line: 2489, column: 1, scope: !7464)
!7471 = distinct !DISubprogram(name: "input_exit", scope: !3, file: !3, line: 2520, type: !1835, scopeLine: 2521, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!7472 = !DILocation(line: 2522, column: 2, scope: !7471)
!7473 = !DILocation(line: 2523, column: 2, scope: !7471)
!7474 = !DILocation(line: 2525, column: 2, scope: !7471)
!7475 = !DILocation(line: 2526, column: 1, scope: !7471)
!7476 = distinct !DISubprogram(name: "input_proc_exit", scope: !3, file: !3, line: 1315, type: !1835, scopeLine: 1316, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!7477 = !DILocation(line: 1317, column: 31, scope: !7476)
!7478 = !DILocation(line: 1317, column: 2, scope: !7476)
!7479 = !DILocation(line: 1318, column: 32, scope: !7476)
!7480 = !DILocation(line: 1318, column: 2, scope: !7476)
!7481 = !DILocation(line: 1319, column: 2, scope: !7476)
!7482 = !DILocation(line: 1320, column: 1, scope: !7476)
!7483 = !DILocalVariable(name: "err", scope: !4005, file: !3, line: 2494, type: !113)
!7484 = !DILocation(line: 2494, column: 6, scope: !4005)
!7485 = !DILocation(line: 2496, column: 8, scope: !7486)
!7486 = distinct !DILexicalBlock(scope: !4005, file: !3, line: 2496, column: 8)
!7487 = !DILocation(line: 2496, column: 6, scope: !4005)
!7488 = !DILocation(line: 2497, column: 6, scope: !7489)
!7489 = distinct !DILexicalBlock(scope: !4005, file: !3, line: 2497, column: 6)
!7490 = !DILocation(line: 2497, column: 6, scope: !4005)
!7491 = !DILocation(line: 2498, column: 3, scope: !7492)
!7492 = distinct !DILexicalBlock(scope: !7489, file: !3, line: 2497, column: 11)
!7493 = !DILocation(line: 2499, column: 10, scope: !7492)
!7494 = !DILocation(line: 2499, column: 3, scope: !7492)
!7495 = !DILocation(line: 2502, column: 8, scope: !4005)
!7496 = !DILocation(line: 2502, column: 6, scope: !4005)
!7497 = !DILocation(line: 2503, column: 6, scope: !7498)
!7498 = distinct !DILexicalBlock(scope: !4005, file: !3, line: 2503, column: 6)
!7499 = !DILocation(line: 2503, column: 6, scope: !4005)
!7500 = !DILocation(line: 2504, column: 3, scope: !7498)
!7501 = !DILocation(line: 2506, column: 8, scope: !4005)
!7502 = !DILocation(line: 2506, column: 6, scope: !4005)
!7503 = !DILocation(line: 2508, column: 6, scope: !7504)
!7504 = distinct !DILexicalBlock(scope: !4005, file: !3, line: 2508, column: 6)
!7505 = !DILocation(line: 2508, column: 6, scope: !4005)
!7506 = !DILocation(line: 2509, column: 3, scope: !7507)
!7507 = distinct !DILexicalBlock(scope: !7504, file: !3, line: 2508, column: 11)
!7508 = !DILocation(line: 2510, column: 3, scope: !7507)
!7509 = !DILocation(line: 2513, column: 2, scope: !4005)
!7510 = !DILabel(scope: !4005, name: "fail2", file: !3, line: 2515)
!7511 = !DILocation(line: 2515, column: 2, scope: !4005)
!7512 = !DILocation(line: 2515, column: 9, scope: !4005)
!7513 = !DILabel(scope: !4005, name: "fail1", file: !3, line: 2516)
!7514 = !DILocation(line: 2516, column: 2, scope: !4005)
!7515 = !DILocation(line: 2516, column: 9, scope: !4005)
!7516 = !DILocation(line: 2517, column: 9, scope: !4005)
!7517 = !DILocation(line: 2517, column: 2, scope: !4005)
!7518 = !DILocation(line: 2518, column: 1, scope: !4005)
!7519 = distinct !DISubprogram(name: "arch_local_save_flags", scope: !4149, file: !4149, line: 646, type: !4150, scopeLine: 647, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!7520 = !DILocalVariable(name: "__ret", scope: !7521, file: !4149, line: 648, type: !138)
!7521 = distinct !DILexicalBlock(scope: !7519, file: !4149, line: 648, column: 9)
!7522 = !DILocation(line: 648, column: 9, scope: !7521)
!7523 = !DILocalVariable(name: "__edi", scope: !7521, file: !4149, line: 648, type: !138)
!7524 = !DILocalVariable(name: "__esi", scope: !7521, file: !4149, line: 648, type: !138)
!7525 = !DILocalVariable(name: "__edx", scope: !7521, file: !4149, line: 648, type: !138)
!7526 = !DILocalVariable(name: "__ecx", scope: !7521, file: !4149, line: 648, type: !138)
!7527 = !DILocalVariable(name: "__eax", scope: !7521, file: !4149, line: 648, type: !138)
!7528 = !DILocation(line: 648, column: 9, scope: !7529)
!7529 = distinct !DILexicalBlock(scope: !7530, file: !4149, line: 648, column: 9)
!7530 = distinct !DILexicalBlock(scope: !7521, file: !4149, line: 648, column: 9)
!7531 = !{i32 -2145718111, i32 -2145715796, i32 -2145715562, i32 -2145715511, i32 -2145715483, i32 -2145715458, i32 -2145715774, i32 -2145715761, i32 -2145715323, i32 -2145715204, i32 -2145715669, i32 -2145715642, i32 -2145715614, i32 -2145715584}
!7532 = !DILocalVariable(name: "__mask", scope: !7533, file: !4149, line: 648, type: !138)
!7533 = distinct !DILexicalBlock(scope: !7529, file: !4149, line: 648, column: 9)
!7534 = !DILocation(line: 648, column: 9, scope: !7533)
!7535 = !DILocation(line: 648, column: 9, scope: !7530)
!7536 = !DILocation(line: 648, column: 2, scope: !7519)
!7537 = distinct !DISubprogram(name: "arch_local_irq_disable", scope: !4149, file: !4149, line: 656, type: !1835, scopeLine: 657, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!7538 = !DILocalVariable(name: "__edi", scope: !7539, file: !4149, line: 658, type: !138)
!7539 = distinct !DILexicalBlock(scope: !7537, file: !4149, line: 658, column: 2)
!7540 = !DILocation(line: 658, column: 2, scope: !7539)
!7541 = !DILocalVariable(name: "__esi", scope: !7539, file: !4149, line: 658, type: !138)
!7542 = !DILocalVariable(name: "__edx", scope: !7539, file: !4149, line: 658, type: !138)
!7543 = !DILocalVariable(name: "__ecx", scope: !7539, file: !4149, line: 658, type: !138)
!7544 = !DILocalVariable(name: "__eax", scope: !7539, file: !4149, line: 658, type: !138)
!7545 = !{i32 -2145711017, i32 -2145710285, i32 -2145710051, i32 -2145710000, i32 -2145709972, i32 -2145709947, i32 -2145710263, i32 -2145710250, i32 -2145709812, i32 -2145709693, i32 -2145710158, i32 -2145710131, i32 -2145710103, i32 -2145710073}
!7546 = !DILocation(line: 659, column: 1, scope: !7537)
!7547 = distinct !DISubprogram(name: "input_get_disposition", scope: !3, file: !3, line: 261, type: !7548, scopeLine: 263, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!7548 = !DISubroutineType(types: !7549)
!7549 = !{!113, !119, !7, !7, !682}
!7550 = !DILocalVariable(name: "dev", arg: 1, scope: !7547, file: !3, line: 261, type: !119)
!7551 = !DILocation(line: 261, column: 52, scope: !7547)
!7552 = !DILocalVariable(name: "type", arg: 2, scope: !7547, file: !3, line: 262, type: !7)
!7553 = !DILocation(line: 262, column: 19, scope: !7547)
!7554 = !DILocalVariable(name: "code", arg: 3, scope: !7547, file: !3, line: 262, type: !7)
!7555 = !DILocation(line: 262, column: 38, scope: !7547)
!7556 = !DILocalVariable(name: "pval", arg: 4, scope: !7547, file: !3, line: 262, type: !682)
!7557 = !DILocation(line: 262, column: 49, scope: !7547)
!7558 = !DILocalVariable(name: "disposition", scope: !7547, file: !3, line: 264, type: !113)
!7559 = !DILocation(line: 264, column: 6, scope: !7547)
!7560 = !DILocalVariable(name: "value", scope: !7547, file: !3, line: 265, type: !113)
!7561 = !DILocation(line: 265, column: 6, scope: !7547)
!7562 = !DILocation(line: 265, column: 15, scope: !7547)
!7563 = !DILocation(line: 265, column: 14, scope: !7547)
!7564 = !DILocation(line: 267, column: 10, scope: !7547)
!7565 = !DILocation(line: 267, column: 2, scope: !7547)
!7566 = !DILocation(line: 270, column: 11, scope: !7567)
!7567 = distinct !DILexicalBlock(scope: !7547, file: !3, line: 267, column: 16)
!7568 = !DILocation(line: 270, column: 3, scope: !7567)
!7569 = !DILocation(line: 272, column: 16, scope: !7570)
!7570 = distinct !DILexicalBlock(scope: !7567, file: !3, line: 270, column: 17)
!7571 = !DILocation(line: 273, column: 4, scope: !7570)
!7572 = !DILocation(line: 276, column: 16, scope: !7570)
!7573 = !DILocation(line: 277, column: 4, scope: !7570)
!7574 = !DILocation(line: 279, column: 16, scope: !7570)
!7575 = !DILocation(line: 280, column: 4, scope: !7570)
!7576 = !DILocation(line: 282, column: 3, scope: !7567)
!7577 = !DILocation(line: 285, column: 26, scope: !7578)
!7578 = distinct !DILexicalBlock(scope: !7567, file: !3, line: 285, column: 7)
!7579 = !DILocation(line: 285, column: 32, scope: !7578)
!7580 = !DILocation(line: 285, column: 37, scope: !7578)
!7581 = !DILocation(line: 285, column: 7, scope: !7578)
!7582 = !DILocation(line: 285, column: 7, scope: !7567)
!7583 = !DILocation(line: 288, column: 8, scope: !7584)
!7584 = distinct !DILexicalBlock(scope: !7585, file: !3, line: 288, column: 8)
!7585 = distinct !DILexicalBlock(scope: !7578, file: !3, line: 285, column: 55)
!7586 = !DILocation(line: 288, column: 14, scope: !7584)
!7587 = !DILocation(line: 288, column: 8, scope: !7585)
!7588 = !DILocation(line: 289, column: 17, scope: !7589)
!7589 = distinct !DILexicalBlock(scope: !7584, file: !3, line: 288, column: 20)
!7590 = !DILocation(line: 290, column: 5, scope: !7589)
!7591 = !DILocation(line: 293, column: 19, scope: !7592)
!7592 = distinct !DILexicalBlock(scope: !7585, file: !3, line: 293, column: 8)
!7593 = !DILocation(line: 293, column: 25, scope: !7592)
!7594 = !DILocation(line: 293, column: 30, scope: !7592)
!7595 = !DILocation(line: 293, column: 10, scope: !7592)
!7596 = !DILocation(line: 293, column: 9, scope: !7592)
!7597 = !DILocation(line: 293, column: 8, scope: !7592)
!7598 = !DILocation(line: 293, column: 40, scope: !7592)
!7599 = !DILocation(line: 293, column: 39, scope: !7592)
!7600 = !DILocation(line: 293, column: 38, scope: !7592)
!7601 = !DILocation(line: 293, column: 35, scope: !7592)
!7602 = !DILocation(line: 293, column: 8, scope: !7585)
!7603 = !DILocation(line: 295, column: 18, scope: !7604)
!7604 = distinct !DILexicalBlock(scope: !7592, file: !3, line: 293, column: 47)
!7605 = !DILocation(line: 295, column: 24, scope: !7604)
!7606 = !DILocation(line: 295, column: 29, scope: !7604)
!7607 = !DILocation(line: 295, column: 5, scope: !7604)
!7608 = !DILocation(line: 296, column: 17, scope: !7604)
!7609 = !DILocation(line: 297, column: 4, scope: !7604)
!7610 = !DILocation(line: 298, column: 3, scope: !7585)
!7611 = !DILocation(line: 299, column: 3, scope: !7567)
!7612 = !DILocation(line: 302, column: 26, scope: !7613)
!7613 = distinct !DILexicalBlock(scope: !7567, file: !3, line: 302, column: 7)
!7614 = !DILocation(line: 302, column: 32, scope: !7613)
!7615 = !DILocation(line: 302, column: 37, scope: !7613)
!7616 = !DILocation(line: 302, column: 7, scope: !7613)
!7617 = !DILocation(line: 302, column: 52, scope: !7613)
!7618 = !DILocation(line: 303, column: 18, scope: !7613)
!7619 = !DILocation(line: 303, column: 24, scope: !7613)
!7620 = !DILocation(line: 303, column: 29, scope: !7613)
!7621 = !DILocation(line: 303, column: 9, scope: !7613)
!7622 = !DILocation(line: 303, column: 8, scope: !7613)
!7623 = !DILocation(line: 303, column: 7, scope: !7613)
!7624 = !DILocation(line: 303, column: 38, scope: !7613)
!7625 = !DILocation(line: 303, column: 37, scope: !7613)
!7626 = !DILocation(line: 303, column: 36, scope: !7613)
!7627 = !DILocation(line: 303, column: 33, scope: !7613)
!7628 = !DILocation(line: 302, column: 7, scope: !7567)
!7629 = !DILocation(line: 305, column: 17, scope: !7630)
!7630 = distinct !DILexicalBlock(scope: !7613, file: !3, line: 303, column: 45)
!7631 = !DILocation(line: 305, column: 23, scope: !7630)
!7632 = !DILocation(line: 305, column: 28, scope: !7630)
!7633 = !DILocation(line: 305, column: 4, scope: !7630)
!7634 = !DILocation(line: 306, column: 16, scope: !7630)
!7635 = !DILocation(line: 307, column: 3, scope: !7630)
!7636 = !DILocation(line: 308, column: 3, scope: !7567)
!7637 = !DILocation(line: 311, column: 26, scope: !7638)
!7638 = distinct !DILexicalBlock(scope: !7567, file: !3, line: 311, column: 7)
!7639 = !DILocation(line: 311, column: 32, scope: !7638)
!7640 = !DILocation(line: 311, column: 37, scope: !7638)
!7641 = !DILocation(line: 311, column: 7, scope: !7638)
!7642 = !DILocation(line: 311, column: 7, scope: !7567)
!7643 = !DILocation(line: 312, column: 41, scope: !7638)
!7644 = !DILocation(line: 312, column: 46, scope: !7638)
!7645 = !DILocation(line: 312, column: 18, scope: !7638)
!7646 = !DILocation(line: 312, column: 16, scope: !7638)
!7647 = !DILocation(line: 312, column: 4, scope: !7638)
!7648 = !DILocation(line: 314, column: 3, scope: !7567)
!7649 = !DILocation(line: 317, column: 26, scope: !7650)
!7650 = distinct !DILexicalBlock(scope: !7567, file: !3, line: 317, column: 7)
!7651 = !DILocation(line: 317, column: 32, scope: !7650)
!7652 = !DILocation(line: 317, column: 37, scope: !7650)
!7653 = !DILocation(line: 317, column: 7, scope: !7650)
!7654 = !DILocation(line: 317, column: 54, scope: !7650)
!7655 = !DILocation(line: 317, column: 57, scope: !7650)
!7656 = !DILocation(line: 317, column: 7, scope: !7567)
!7657 = !DILocation(line: 318, column: 16, scope: !7650)
!7658 = !DILocation(line: 318, column: 4, scope: !7650)
!7659 = !DILocation(line: 320, column: 3, scope: !7567)
!7660 = !DILocation(line: 323, column: 26, scope: !7661)
!7661 = distinct !DILexicalBlock(scope: !7567, file: !3, line: 323, column: 7)
!7662 = !DILocation(line: 323, column: 32, scope: !7661)
!7663 = !DILocation(line: 323, column: 37, scope: !7661)
!7664 = !DILocation(line: 323, column: 7, scope: !7661)
!7665 = !DILocation(line: 323, column: 7, scope: !7567)
!7666 = !DILocation(line: 324, column: 16, scope: !7661)
!7667 = !DILocation(line: 324, column: 4, scope: !7661)
!7668 = !DILocation(line: 326, column: 3, scope: !7567)
!7669 = !DILocation(line: 329, column: 26, scope: !7670)
!7670 = distinct !DILexicalBlock(scope: !7567, file: !3, line: 329, column: 7)
!7671 = !DILocation(line: 329, column: 32, scope: !7670)
!7672 = !DILocation(line: 329, column: 37, scope: !7670)
!7673 = !DILocation(line: 329, column: 7, scope: !7670)
!7674 = !DILocation(line: 329, column: 54, scope: !7670)
!7675 = !DILocation(line: 330, column: 18, scope: !7670)
!7676 = !DILocation(line: 330, column: 24, scope: !7670)
!7677 = !DILocation(line: 330, column: 29, scope: !7670)
!7678 = !DILocation(line: 330, column: 9, scope: !7670)
!7679 = !DILocation(line: 330, column: 8, scope: !7670)
!7680 = !DILocation(line: 330, column: 7, scope: !7670)
!7681 = !DILocation(line: 330, column: 39, scope: !7670)
!7682 = !DILocation(line: 330, column: 38, scope: !7670)
!7683 = !DILocation(line: 330, column: 37, scope: !7670)
!7684 = !DILocation(line: 330, column: 34, scope: !7670)
!7685 = !DILocation(line: 329, column: 7, scope: !7567)
!7686 = !DILocation(line: 332, column: 17, scope: !7687)
!7687 = distinct !DILexicalBlock(scope: !7670, file: !3, line: 330, column: 46)
!7688 = !DILocation(line: 332, column: 23, scope: !7687)
!7689 = !DILocation(line: 332, column: 28, scope: !7687)
!7690 = !DILocation(line: 332, column: 4, scope: !7687)
!7691 = !DILocation(line: 333, column: 16, scope: !7687)
!7692 = !DILocation(line: 334, column: 3, scope: !7687)
!7693 = !DILocation(line: 335, column: 3, scope: !7567)
!7694 = !DILocation(line: 338, column: 26, scope: !7695)
!7695 = distinct !DILexicalBlock(scope: !7567, file: !3, line: 338, column: 7)
!7696 = !DILocation(line: 338, column: 32, scope: !7695)
!7697 = !DILocation(line: 338, column: 37, scope: !7695)
!7698 = !DILocation(line: 338, column: 7, scope: !7695)
!7699 = !DILocation(line: 338, column: 7, scope: !7567)
!7700 = !DILocation(line: 340, column: 19, scope: !7701)
!7701 = distinct !DILexicalBlock(scope: !7702, file: !3, line: 340, column: 8)
!7702 = distinct !DILexicalBlock(scope: !7695, file: !3, line: 338, column: 55)
!7703 = !DILocation(line: 340, column: 25, scope: !7701)
!7704 = !DILocation(line: 340, column: 30, scope: !7701)
!7705 = !DILocation(line: 340, column: 10, scope: !7701)
!7706 = !DILocation(line: 340, column: 9, scope: !7701)
!7707 = !DILocation(line: 340, column: 8, scope: !7701)
!7708 = !DILocation(line: 340, column: 40, scope: !7701)
!7709 = !DILocation(line: 340, column: 39, scope: !7701)
!7710 = !DILocation(line: 340, column: 38, scope: !7701)
!7711 = !DILocation(line: 340, column: 35, scope: !7701)
!7712 = !DILocation(line: 340, column: 8, scope: !7702)
!7713 = !DILocation(line: 341, column: 18, scope: !7701)
!7714 = !DILocation(line: 341, column: 24, scope: !7701)
!7715 = !DILocation(line: 341, column: 29, scope: !7701)
!7716 = !DILocation(line: 341, column: 5, scope: !7701)
!7717 = !DILocation(line: 342, column: 16, scope: !7702)
!7718 = !DILocation(line: 343, column: 3, scope: !7702)
!7719 = !DILocation(line: 344, column: 3, scope: !7567)
!7720 = !DILocation(line: 347, column: 7, scope: !7721)
!7721 = distinct !DILexicalBlock(scope: !7567, file: !3, line: 347, column: 7)
!7722 = !DILocation(line: 347, column: 12, scope: !7721)
!7723 = !DILocation(line: 347, column: 23, scope: !7721)
!7724 = !DILocation(line: 347, column: 26, scope: !7721)
!7725 = !DILocation(line: 347, column: 32, scope: !7721)
!7726 = !DILocation(line: 347, column: 37, scope: !7721)
!7727 = !DILocation(line: 347, column: 40, scope: !7721)
!7728 = !DILocation(line: 347, column: 45, scope: !7721)
!7729 = !DILocation(line: 347, column: 49, scope: !7721)
!7730 = !DILocation(line: 347, column: 58, scope: !7721)
!7731 = !DILocation(line: 347, column: 55, scope: !7721)
!7732 = !DILocation(line: 347, column: 7, scope: !7567)
!7733 = !DILocation(line: 348, column: 21, scope: !7734)
!7734 = distinct !DILexicalBlock(scope: !7721, file: !3, line: 347, column: 65)
!7735 = !DILocation(line: 348, column: 4, scope: !7734)
!7736 = !DILocation(line: 348, column: 9, scope: !7734)
!7737 = !DILocation(line: 348, column: 13, scope: !7734)
!7738 = !DILocation(line: 348, column: 19, scope: !7734)
!7739 = !DILocation(line: 349, column: 16, scope: !7734)
!7740 = !DILocation(line: 350, column: 3, scope: !7734)
!7741 = !DILocation(line: 351, column: 3, scope: !7567)
!7742 = !DILocation(line: 354, column: 7, scope: !7743)
!7743 = distinct !DILexicalBlock(scope: !7567, file: !3, line: 354, column: 7)
!7744 = !DILocation(line: 354, column: 13, scope: !7743)
!7745 = !DILocation(line: 354, column: 7, scope: !7567)
!7746 = !DILocation(line: 355, column: 16, scope: !7743)
!7747 = !DILocation(line: 355, column: 4, scope: !7743)
!7748 = !DILocation(line: 356, column: 3, scope: !7567)
!7749 = !DILocation(line: 359, column: 15, scope: !7567)
!7750 = !DILocation(line: 360, column: 3, scope: !7567)
!7751 = !DILocation(line: 363, column: 10, scope: !7547)
!7752 = !DILocation(line: 363, column: 3, scope: !7547)
!7753 = !DILocation(line: 363, column: 8, scope: !7547)
!7754 = !DILocation(line: 364, column: 9, scope: !7547)
!7755 = !DILocation(line: 364, column: 2, scope: !7547)
!7756 = distinct !DISubprogram(name: "__change_bit", scope: !4492, file: !4492, line: 55, type: !4493, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!7757 = !DILocalVariable(name: "nr", arg: 1, scope: !7758, file: !4499, line: 117, type: !507)
!7758 = distinct !DISubprogram(name: "arch___change_bit", scope: !4499, file: !4499, line: 117, type: !4493, scopeLine: 118, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!7759 = !DILocation(line: 117, column: 24, scope: !7758, inlinedAt: !7760)
!7760 = distinct !DILocation(line: 58, column: 2, scope: !7756)
!7761 = !DILocalVariable(name: "addr", arg: 2, scope: !7758, file: !4499, line: 117, type: !4495)
!7762 = !DILocation(line: 117, column: 52, scope: !7758, inlinedAt: !7760)
!7763 = !DILocation(line: 39, column: 67, scope: !4505, inlinedAt: !7764)
!7764 = distinct !DILocation(line: 57, column: 2, scope: !7756)
!7765 = !DILocation(line: 39, column: 77, scope: !4505, inlinedAt: !7764)
!7766 = !DILocalVariable(name: "nr", arg: 1, scope: !7756, file: !4492, line: 55, type: !507)
!7767 = !DILocation(line: 55, column: 38, scope: !7756)
!7768 = !DILocalVariable(name: "addr", arg: 2, scope: !7756, file: !4492, line: 55, type: !4495)
!7769 = !DILocation(line: 55, column: 66, scope: !7756)
!7770 = !DILocation(line: 57, column: 19, scope: !7756)
!7771 = !DILocation(line: 57, column: 26, scope: !7756)
!7772 = !DILocation(line: 57, column: 24, scope: !7756)
!7773 = !DILocation(line: 41, column: 20, scope: !4505, inlinedAt: !7764)
!7774 = !DILocation(line: 41, column: 23, scope: !4505, inlinedAt: !7764)
!7775 = !DILocation(line: 41, column: 2, scope: !4505, inlinedAt: !7764)
!7776 = !DILocation(line: 42, column: 2, scope: !4505, inlinedAt: !7764)
!7777 = !DILocation(line: 58, column: 20, scope: !7756)
!7778 = !DILocation(line: 58, column: 24, scope: !7756)
!7779 = !DILocation(line: 119, column: 44, scope: !7758, inlinedAt: !7760)
!7780 = !DILocation(line: 119, column: 56, scope: !7758, inlinedAt: !7760)
!7781 = !DILocation(line: 119, column: 2, scope: !7758, inlinedAt: !7760)
!7782 = !{i32 -2147162619}
!7783 = !DILocation(line: 59, column: 1, scope: !7756)
!7784 = distinct !DISubprogram(name: "input_handle_abs_event", scope: !3, file: !3, line: 211, type: !7785, scopeLine: 213, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!7785 = !DISubroutineType(types: !7786)
!7786 = !{!113, !119, !7, !682}
!7787 = !DILocalVariable(name: "dev", arg: 1, scope: !7784, file: !3, line: 211, type: !119)
!7788 = !DILocation(line: 211, column: 53, scope: !7784)
!7789 = !DILocalVariable(name: "code", arg: 2, scope: !7784, file: !3, line: 212, type: !7)
!7790 = !DILocation(line: 212, column: 20, scope: !7784)
!7791 = !DILocalVariable(name: "pval", arg: 3, scope: !7784, file: !3, line: 212, type: !682)
!7792 = !DILocation(line: 212, column: 31, scope: !7784)
!7793 = !DILocalVariable(name: "mt", scope: !7784, file: !3, line: 214, type: !3081)
!7794 = !DILocation(line: 214, column: 19, scope: !7784)
!7795 = !DILocation(line: 214, column: 24, scope: !7784)
!7796 = !DILocation(line: 214, column: 29, scope: !7784)
!7797 = !DILocalVariable(name: "is_mt_event", scope: !7784, file: !3, line: 215, type: !457)
!7798 = !DILocation(line: 215, column: 7, scope: !7784)
!7799 = !DILocalVariable(name: "pold", scope: !7784, file: !3, line: 216, type: !682)
!7800 = !DILocation(line: 216, column: 7, scope: !7784)
!7801 = !DILocation(line: 218, column: 6, scope: !7802)
!7802 = distinct !DILexicalBlock(scope: !7784, file: !3, line: 218, column: 6)
!7803 = !DILocation(line: 218, column: 11, scope: !7802)
!7804 = !DILocation(line: 218, column: 6, scope: !7784)
!7805 = !DILocation(line: 223, column: 7, scope: !7806)
!7806 = distinct !DILexicalBlock(scope: !7807, file: !3, line: 223, column: 7)
!7807 = distinct !DILexicalBlock(scope: !7802, file: !3, line: 218, column: 27)
!7808 = !DILocation(line: 223, column: 10, scope: !7806)
!7809 = !DILocation(line: 223, column: 14, scope: !7806)
!7810 = !DILocation(line: 223, column: 13, scope: !7806)
!7811 = !DILocation(line: 223, column: 19, scope: !7806)
!7812 = !DILocation(line: 223, column: 24, scope: !7806)
!7813 = !DILocation(line: 223, column: 28, scope: !7806)
!7814 = !DILocation(line: 223, column: 27, scope: !7806)
!7815 = !DILocation(line: 223, column: 35, scope: !7806)
!7816 = !DILocation(line: 223, column: 39, scope: !7806)
!7817 = !DILocation(line: 223, column: 33, scope: !7806)
!7818 = !DILocation(line: 223, column: 7, scope: !7807)
!7819 = !DILocation(line: 224, column: 16, scope: !7806)
!7820 = !DILocation(line: 224, column: 15, scope: !7806)
!7821 = !DILocation(line: 224, column: 4, scope: !7806)
!7822 = !DILocation(line: 224, column: 8, scope: !7806)
!7823 = !DILocation(line: 224, column: 13, scope: !7806)
!7824 = !DILocation(line: 226, column: 3, scope: !7807)
!7825 = !DILocation(line: 229, column: 34, scope: !7784)
!7826 = !DILocation(line: 229, column: 16, scope: !7784)
!7827 = !DILocation(line: 229, column: 14, scope: !7784)
!7828 = !DILocation(line: 231, column: 7, scope: !7829)
!7829 = distinct !DILexicalBlock(scope: !7784, file: !3, line: 231, column: 6)
!7830 = !DILocation(line: 231, column: 6, scope: !7784)
!7831 = !DILocation(line: 232, column: 11, scope: !7832)
!7832 = distinct !DILexicalBlock(scope: !7829, file: !3, line: 231, column: 20)
!7833 = !DILocation(line: 232, column: 16, scope: !7832)
!7834 = !DILocation(line: 232, column: 24, scope: !7832)
!7835 = !DILocation(line: 232, column: 30, scope: !7832)
!7836 = !DILocation(line: 232, column: 8, scope: !7832)
!7837 = !DILocation(line: 233, column: 2, scope: !7832)
!7838 = !DILocation(line: 233, column: 13, scope: !7839)
!7839 = distinct !DILexicalBlock(scope: !7829, file: !3, line: 233, column: 13)
!7840 = !DILocation(line: 233, column: 13, scope: !7829)
!7841 = !DILocation(line: 234, column: 11, scope: !7842)
!7842 = distinct !DILexicalBlock(scope: !7839, file: !3, line: 233, column: 17)
!7843 = !DILocation(line: 234, column: 15, scope: !7842)
!7844 = !DILocation(line: 234, column: 21, scope: !7842)
!7845 = !DILocation(line: 234, column: 25, scope: !7842)
!7846 = !DILocation(line: 234, column: 31, scope: !7842)
!7847 = !DILocation(line: 234, column: 35, scope: !7842)
!7848 = !DILocation(line: 234, column: 40, scope: !7842)
!7849 = !DILocation(line: 234, column: 8, scope: !7842)
!7850 = !DILocation(line: 235, column: 2, scope: !7842)
!7851 = !DILocation(line: 240, column: 8, scope: !7852)
!7852 = distinct !DILexicalBlock(scope: !7839, file: !3, line: 235, column: 9)
!7853 = !DILocation(line: 243, column: 6, scope: !7854)
!7854 = distinct !DILexicalBlock(scope: !7784, file: !3, line: 243, column: 6)
!7855 = !DILocation(line: 243, column: 6, scope: !7784)
!7856 = !DILocation(line: 244, column: 35, scope: !7857)
!7857 = distinct !DILexicalBlock(scope: !7854, file: !3, line: 243, column: 12)
!7858 = !DILocation(line: 244, column: 34, scope: !7857)
!7859 = !DILocation(line: 244, column: 42, scope: !7857)
!7860 = !DILocation(line: 244, column: 41, scope: !7857)
!7861 = !DILocation(line: 245, column: 7, scope: !7857)
!7862 = !DILocation(line: 245, column: 12, scope: !7857)
!7863 = !DILocation(line: 245, column: 20, scope: !7857)
!7864 = !DILocation(line: 245, column: 26, scope: !7857)
!7865 = !DILocation(line: 244, column: 11, scope: !7857)
!7866 = !DILocation(line: 244, column: 4, scope: !7857)
!7867 = !DILocation(line: 244, column: 9, scope: !7857)
!7868 = !DILocation(line: 246, column: 8, scope: !7869)
!7869 = distinct !DILexicalBlock(scope: !7857, file: !3, line: 246, column: 7)
!7870 = !DILocation(line: 246, column: 7, scope: !7869)
!7871 = !DILocation(line: 246, column: 17, scope: !7869)
!7872 = !DILocation(line: 246, column: 16, scope: !7869)
!7873 = !DILocation(line: 246, column: 13, scope: !7869)
!7874 = !DILocation(line: 246, column: 7, scope: !7857)
!7875 = !DILocation(line: 247, column: 4, scope: !7869)
!7876 = !DILocation(line: 249, column: 12, scope: !7857)
!7877 = !DILocation(line: 249, column: 11, scope: !7857)
!7878 = !DILocation(line: 249, column: 4, scope: !7857)
!7879 = !DILocation(line: 249, column: 9, scope: !7857)
!7880 = !DILocation(line: 250, column: 2, scope: !7857)
!7881 = !DILocation(line: 253, column: 6, scope: !7882)
!7882 = distinct !DILexicalBlock(scope: !7784, file: !3, line: 253, column: 6)
!7883 = !DILocation(line: 253, column: 18, scope: !7882)
!7884 = !DILocation(line: 253, column: 21, scope: !7882)
!7885 = !DILocation(line: 253, column: 24, scope: !7882)
!7886 = !DILocation(line: 253, column: 27, scope: !7882)
!7887 = !DILocation(line: 253, column: 31, scope: !7882)
!7888 = !DILocation(line: 253, column: 57, scope: !7882)
!7889 = !DILocation(line: 253, column: 39, scope: !7882)
!7890 = !DILocation(line: 253, column: 36, scope: !7882)
!7891 = !DILocation(line: 253, column: 6, scope: !7784)
!7892 = !DILocation(line: 254, column: 21, scope: !7893)
!7893 = distinct !DILexicalBlock(scope: !7882, file: !3, line: 253, column: 76)
!7894 = !DILocation(line: 254, column: 39, scope: !7893)
!7895 = !DILocation(line: 254, column: 43, scope: !7893)
!7896 = !DILocation(line: 254, column: 3, scope: !7893)
!7897 = !DILocation(line: 255, column: 3, scope: !7893)
!7898 = !DILocation(line: 258, column: 2, scope: !7784)
!7899 = !DILocation(line: 259, column: 1, scope: !7784)
!7900 = distinct !DISubprogram(name: "kasan_check_write", scope: !7901, file: !7901, line: 38, type: !7902, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!7901 = !DIFile(filename: "./include/linux/kasan-checks.h", directory: "/home/lizy2001/genbc/linux")
!7902 = !DISubroutineType(types: !7903)
!7903 = !{!457, !4509, !7}
!7904 = !DILocalVariable(name: "p", arg: 1, scope: !7900, file: !7901, line: 38, type: !4509)
!7905 = !DILocation(line: 38, column: 59, scope: !7900)
!7906 = !DILocalVariable(name: "size", arg: 2, scope: !7900, file: !7901, line: 38, type: !7)
!7907 = !DILocation(line: 38, column: 75, scope: !7900)
!7908 = !DILocation(line: 40, column: 2, scope: !7900)
!7909 = distinct !DISubprogram(name: "kcsan_check_access", scope: !7910, file: !7910, line: 178, type: !7911, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!7910 = !DIFile(filename: "./include/linux/kcsan-checks.h", directory: "/home/lizy2001/genbc/linux")
!7911 = !DISubroutineType(types: !7912)
!7912 = !{null, !4509, !547, !113}
!7913 = !DILocalVariable(name: "ptr", arg: 1, scope: !7909, file: !7910, line: 178, type: !4509)
!7914 = !DILocation(line: 178, column: 60, scope: !7909)
!7915 = !DILocalVariable(name: "size", arg: 2, scope: !7909, file: !7910, line: 178, type: !547)
!7916 = !DILocation(line: 178, column: 72, scope: !7909)
!7917 = !DILocalVariable(name: "type", arg: 3, scope: !7909, file: !7910, line: 179, type: !113)
!7918 = !DILocation(line: 179, column: 15, scope: !7909)
!7919 = !DILocation(line: 179, column: 23, scope: !7909)
!7920 = distinct !DISubprogram(name: "input_is_mt_value", scope: !3083, file: !3083, line: 90, type: !7921, scopeLine: 91, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!7921 = !DISubroutineType(types: !7922)
!7922 = !{!457, !113}
!7923 = !DILocalVariable(name: "axis", arg: 1, scope: !7920, file: !3083, line: 90, type: !113)
!7924 = !DILocation(line: 90, column: 42, scope: !7920)
!7925 = !DILocation(line: 92, column: 9, scope: !7920)
!7926 = !DILocation(line: 92, column: 14, scope: !7920)
!7927 = !DILocation(line: 92, column: 30, scope: !7920)
!7928 = !DILocation(line: 92, column: 33, scope: !7920)
!7929 = !DILocation(line: 92, column: 38, scope: !7920)
!7930 = !DILocation(line: 0, scope: !7920)
!7931 = !DILocation(line: 92, column: 2, scope: !7920)
!7932 = distinct !DISubprogram(name: "input_defuzz_abs_event", scope: !3, file: !3, line: 56, type: !7933, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!7933 = !DISubroutineType(types: !7934)
!7934 = !{!113, !113, !113, !113}
!7935 = !DILocalVariable(name: "value", arg: 1, scope: !7932, file: !3, line: 56, type: !113)
!7936 = !DILocation(line: 56, column: 39, scope: !7932)
!7937 = !DILocalVariable(name: "old_val", arg: 2, scope: !7932, file: !3, line: 56, type: !113)
!7938 = !DILocation(line: 56, column: 50, scope: !7932)
!7939 = !DILocalVariable(name: "fuzz", arg: 3, scope: !7932, file: !3, line: 56, type: !113)
!7940 = !DILocation(line: 56, column: 63, scope: !7932)
!7941 = !DILocation(line: 58, column: 6, scope: !7942)
!7942 = distinct !DILexicalBlock(scope: !7932, file: !3, line: 58, column: 6)
!7943 = !DILocation(line: 58, column: 6, scope: !7932)
!7944 = !DILocation(line: 59, column: 7, scope: !7945)
!7945 = distinct !DILexicalBlock(scope: !7946, file: !3, line: 59, column: 7)
!7946 = distinct !DILexicalBlock(scope: !7942, file: !3, line: 58, column: 12)
!7947 = !DILocation(line: 59, column: 15, scope: !7945)
!7948 = !DILocation(line: 59, column: 25, scope: !7945)
!7949 = !DILocation(line: 59, column: 30, scope: !7945)
!7950 = !DILocation(line: 59, column: 23, scope: !7945)
!7951 = !DILocation(line: 59, column: 13, scope: !7945)
!7952 = !DILocation(line: 59, column: 34, scope: !7945)
!7953 = !DILocation(line: 59, column: 37, scope: !7945)
!7954 = !DILocation(line: 59, column: 45, scope: !7945)
!7955 = !DILocation(line: 59, column: 55, scope: !7945)
!7956 = !DILocation(line: 59, column: 60, scope: !7945)
!7957 = !DILocation(line: 59, column: 53, scope: !7945)
!7958 = !DILocation(line: 59, column: 43, scope: !7945)
!7959 = !DILocation(line: 59, column: 7, scope: !7946)
!7960 = !DILocation(line: 60, column: 11, scope: !7945)
!7961 = !DILocation(line: 60, column: 4, scope: !7945)
!7962 = !DILocation(line: 62, column: 7, scope: !7963)
!7963 = distinct !DILexicalBlock(scope: !7946, file: !3, line: 62, column: 7)
!7964 = !DILocation(line: 62, column: 15, scope: !7963)
!7965 = !DILocation(line: 62, column: 25, scope: !7963)
!7966 = !DILocation(line: 62, column: 23, scope: !7963)
!7967 = !DILocation(line: 62, column: 13, scope: !7963)
!7968 = !DILocation(line: 62, column: 30, scope: !7963)
!7969 = !DILocation(line: 62, column: 33, scope: !7963)
!7970 = !DILocation(line: 62, column: 41, scope: !7963)
!7971 = !DILocation(line: 62, column: 51, scope: !7963)
!7972 = !DILocation(line: 62, column: 49, scope: !7963)
!7973 = !DILocation(line: 62, column: 39, scope: !7963)
!7974 = !DILocation(line: 62, column: 7, scope: !7946)
!7975 = !DILocation(line: 63, column: 12, scope: !7963)
!7976 = !DILocation(line: 63, column: 20, scope: !7963)
!7977 = !DILocation(line: 63, column: 26, scope: !7963)
!7978 = !DILocation(line: 63, column: 24, scope: !7963)
!7979 = !DILocation(line: 63, column: 33, scope: !7963)
!7980 = !DILocation(line: 63, column: 4, scope: !7963)
!7981 = !DILocation(line: 65, column: 7, scope: !7982)
!7982 = distinct !DILexicalBlock(scope: !7946, file: !3, line: 65, column: 7)
!7983 = !DILocation(line: 65, column: 15, scope: !7982)
!7984 = !DILocation(line: 65, column: 25, scope: !7982)
!7985 = !DILocation(line: 65, column: 30, scope: !7982)
!7986 = !DILocation(line: 65, column: 23, scope: !7982)
!7987 = !DILocation(line: 65, column: 13, scope: !7982)
!7988 = !DILocation(line: 65, column: 34, scope: !7982)
!7989 = !DILocation(line: 65, column: 37, scope: !7982)
!7990 = !DILocation(line: 65, column: 45, scope: !7982)
!7991 = !DILocation(line: 65, column: 55, scope: !7982)
!7992 = !DILocation(line: 65, column: 60, scope: !7982)
!7993 = !DILocation(line: 65, column: 53, scope: !7982)
!7994 = !DILocation(line: 65, column: 43, scope: !7982)
!7995 = !DILocation(line: 65, column: 7, scope: !7946)
!7996 = !DILocation(line: 66, column: 12, scope: !7982)
!7997 = !DILocation(line: 66, column: 22, scope: !7982)
!7998 = !DILocation(line: 66, column: 20, scope: !7982)
!7999 = !DILocation(line: 66, column: 29, scope: !7982)
!8000 = !DILocation(line: 66, column: 4, scope: !7982)
!8001 = !DILocation(line: 67, column: 2, scope: !7946)
!8002 = !DILocation(line: 69, column: 9, scope: !7932)
!8003 = !DILocation(line: 69, column: 2, scope: !7932)
!8004 = !DILocation(line: 70, column: 1, scope: !7932)
!8005 = distinct !DISubprogram(name: "input_abs_get_val", scope: !86, file: !86, line: 486, type: !8006, scopeLine: 486, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!8006 = !DISubroutineType(types: !8007)
!8007 = !{!113, !119, !7}
!8008 = !DILocalVariable(name: "dev", arg: 1, scope: !8005, file: !86, line: 486, type: !119)
!8009 = !DILocation(line: 486, column: 1, scope: !8005)
!8010 = !DILocalVariable(name: "axis", arg: 2, scope: !8005, file: !86, line: 486, type: !7)
!8011 = distinct !DISubprogram(name: "input_abs_set_val", scope: !86, file: !86, line: 486, type: !8012, scopeLine: 486, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!8012 = !DISubroutineType(types: !8013)
!8013 = !{null, !119, !7, !113}
!8014 = !DILocalVariable(name: "dev", arg: 1, scope: !8011, file: !86, line: 486, type: !119)
!8015 = !DILocation(line: 486, column: 1, scope: !8011)
!8016 = !DILocalVariable(name: "axis", arg: 2, scope: !8011, file: !86, line: 486, type: !7)
!8017 = !DILocalVariable(name: "val", arg: 3, scope: !8011, file: !86, line: 486, type: !113)
!8018 = !DILocation(line: 486, column: 1, scope: !8019)
!8019 = distinct !DILexicalBlock(scope: !8011, file: !86, line: 486, column: 1)
!8020 = distinct !DISubprogram(name: "arch_local_irq_restore", scope: !4149, file: !4149, line: 651, type: !8021, scopeLine: 652, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!8021 = !DISubroutineType(types: !8022)
!8022 = !{null, !138}
!8023 = !DILocalVariable(name: "f", arg: 1, scope: !8020, file: !4149, line: 651, type: !138)
!8024 = !DILocation(line: 651, column: 65, scope: !8020)
!8025 = !DILocalVariable(name: "__edi", scope: !8026, file: !4149, line: 653, type: !138)
!8026 = distinct !DILexicalBlock(scope: !8020, file: !4149, line: 653, column: 2)
!8027 = !DILocation(line: 653, column: 2, scope: !8026)
!8028 = !DILocalVariable(name: "__esi", scope: !8026, file: !4149, line: 653, type: !138)
!8029 = !DILocalVariable(name: "__edx", scope: !8026, file: !4149, line: 653, type: !138)
!8030 = !DILocalVariable(name: "__ecx", scope: !8026, file: !4149, line: 653, type: !138)
!8031 = !DILocalVariable(name: "__eax", scope: !8026, file: !4149, line: 653, type: !138)
!8032 = !{i32 -2145713644, i32 -2145712894, i32 -2145712660, i32 -2145712609, i32 -2145712581, i32 -2145712556, i32 -2145712872, i32 -2145712859, i32 -2145712421, i32 -2145712302, i32 -2145712767, i32 -2145712740, i32 -2145712712, i32 -2145712682}
!8033 = !DILocation(line: 654, column: 1, scope: !8020)
!8034 = distinct !DISubprogram(name: "__rcu_read_lock", scope: !4360, file: !4360, line: 64, type: !1835, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!8035 = !DILocation(line: 66, column: 2, scope: !8034)
!8036 = !{i32 -2145525541}
!8037 = !DILocation(line: 67, column: 1, scope: !8034)
!8038 = distinct !DISubprogram(name: "__rcu_read_unlock", scope: !4360, file: !4360, line: 69, type: !1835, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!8039 = !DILocation(line: 71, column: 2, scope: !8038)
!8040 = !{i32 -2145525328}
!8041 = !DILocation(line: 72, column: 2, scope: !8038)
!8042 = !DILocation(line: 72, column: 2, scope: !8043)
!8043 = distinct !DILexicalBlock(scope: !8038, file: !4360, line: 72, column: 2)
!8044 = !DILocation(line: 73, column: 1, scope: !8038)
!8045 = distinct !DISubprogram(name: "kmalloc_array", scope: !100, file: !100, line: 584, type: !4425, scopeLine: 585, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!8046 = !DILocation(line: 445, column: 72, scope: !5682, inlinedAt: !8047)
!8047 = distinct !DILocation(line: 552, column: 10, scope: !5687, inlinedAt: !8048)
!8048 = distinct !DILocation(line: 591, column: 10, scope: !8049)
!8049 = distinct !DILexicalBlock(scope: !8045, file: !100, line: 590, column: 6)
!8050 = !DILocation(line: 446, column: 9, scope: !5682, inlinedAt: !8047)
!8051 = !DILocation(line: 446, column: 23, scope: !5682, inlinedAt: !8047)
!8052 = !DILocation(line: 448, column: 8, scope: !5682, inlinedAt: !8047)
!8053 = !DILocation(line: 318, column: 67, scope: !5698, inlinedAt: !8054)
!8054 = distinct !DILocation(line: 553, column: 20, scope: !5687, inlinedAt: !8048)
!8055 = !DILocation(line: 346, column: 58, scope: !5704, inlinedAt: !8056)
!8056 = distinct !DILocation(line: 547, column: 11, scope: !5687, inlinedAt: !8048)
!8057 = !DILocation(line: 472, column: 28, scope: !5710, inlinedAt: !8058)
!8058 = distinct !DILocation(line: 481, column: 9, scope: !5715, inlinedAt: !8059)
!8059 = distinct !DILocation(line: 545, column: 11, scope: !5717, inlinedAt: !8048)
!8060 = !DILocation(line: 472, column: 40, scope: !5710, inlinedAt: !8058)
!8061 = !DILocation(line: 472, column: 60, scope: !5710, inlinedAt: !8058)
!8062 = !DILocation(line: 478, column: 51, scope: !5715, inlinedAt: !8059)
!8063 = !DILocation(line: 478, column: 63, scope: !5715, inlinedAt: !8059)
!8064 = !DILocation(line: 480, column: 15, scope: !5715, inlinedAt: !8059)
!8065 = !DILocation(line: 538, column: 45, scope: !5689, inlinedAt: !8048)
!8066 = !DILocation(line: 538, column: 57, scope: !5689, inlinedAt: !8048)
!8067 = !DILocation(line: 542, column: 16, scope: !5687, inlinedAt: !8048)
!8068 = !DILocalVariable(name: "n", arg: 1, scope: !8045, file: !100, line: 584, type: !547)
!8069 = !DILocation(line: 584, column: 42, scope: !8045)
!8070 = !DILocalVariable(name: "size", arg: 2, scope: !8045, file: !100, line: 584, type: !547)
!8071 = !DILocation(line: 584, column: 52, scope: !8045)
!8072 = !DILocalVariable(name: "flags", arg: 3, scope: !8045, file: !100, line: 584, type: !757)
!8073 = !DILocation(line: 584, column: 64, scope: !8045)
!8074 = !DILocalVariable(name: "bytes", scope: !8045, file: !100, line: 586, type: !547)
!8075 = !DILocation(line: 586, column: 9, scope: !8045)
!8076 = !DILocalVariable(name: "__a", scope: !8077, file: !100, line: 588, type: !547)
!8077 = distinct !DILexicalBlock(scope: !8078, file: !100, line: 588, column: 6)
!8078 = distinct !DILexicalBlock(scope: !8045, file: !100, line: 588, column: 6)
!8079 = !DILocation(line: 588, column: 6, scope: !8077)
!8080 = !DILocalVariable(name: "__b", scope: !8077, file: !100, line: 588, type: !547)
!8081 = !DILocalVariable(name: "__d", scope: !8077, file: !100, line: 588, type: !8082)
!8082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !547, size: 64)
!8083 = !DILocation(line: 588, column: 6, scope: !8078)
!8084 = !DILocation(line: 588, column: 6, scope: !8045)
!8085 = !DILocation(line: 589, column: 3, scope: !8078)
!8086 = !DILocation(line: 590, column: 27, scope: !8049)
!8087 = !DILocation(line: 590, column: 6, scope: !8049)
!8088 = !DILocation(line: 590, column: 30, scope: !8049)
!8089 = !DILocation(line: 590, column: 54, scope: !8049)
!8090 = !DILocation(line: 590, column: 33, scope: !8049)
!8091 = !DILocation(line: 590, column: 6, scope: !8045)
!8092 = !DILocation(line: 591, column: 18, scope: !8049)
!8093 = !DILocation(line: 591, column: 25, scope: !8049)
!8094 = !DILocation(line: 540, column: 27, scope: !5688, inlinedAt: !8048)
!8095 = !DILocation(line: 540, column: 6, scope: !5688, inlinedAt: !8048)
!8096 = !DILocation(line: 540, column: 6, scope: !5689, inlinedAt: !8048)
!8097 = !DILocation(line: 544, column: 7, scope: !5717, inlinedAt: !8048)
!8098 = !DILocation(line: 544, column: 12, scope: !5717, inlinedAt: !8048)
!8099 = !DILocation(line: 544, column: 7, scope: !5687, inlinedAt: !8048)
!8100 = !DILocation(line: 545, column: 25, scope: !5717, inlinedAt: !8048)
!8101 = !DILocation(line: 545, column: 31, scope: !5717, inlinedAt: !8048)
!8102 = !DILocation(line: 480, column: 33, scope: !5715, inlinedAt: !8059)
!8103 = !DILocation(line: 480, column: 23, scope: !5715, inlinedAt: !8059)
!8104 = !DILocation(line: 481, column: 29, scope: !5715, inlinedAt: !8059)
!8105 = !DILocation(line: 481, column: 35, scope: !5715, inlinedAt: !8059)
!8106 = !DILocation(line: 481, column: 42, scope: !5715, inlinedAt: !8059)
!8107 = !DILocation(line: 474, column: 23, scope: !5710, inlinedAt: !8058)
!8108 = !DILocation(line: 474, column: 29, scope: !5710, inlinedAt: !8058)
!8109 = !DILocation(line: 474, column: 36, scope: !5710, inlinedAt: !8058)
!8110 = !DILocation(line: 474, column: 9, scope: !5710, inlinedAt: !8058)
!8111 = !DILocation(line: 545, column: 4, scope: !5717, inlinedAt: !8048)
!8112 = !DILocation(line: 547, column: 25, scope: !5687, inlinedAt: !8048)
!8113 = !DILocation(line: 348, column: 7, scope: !5761, inlinedAt: !8056)
!8114 = !DILocation(line: 348, column: 6, scope: !5704, inlinedAt: !8056)
!8115 = !DILocation(line: 349, column: 3, scope: !5761, inlinedAt: !8056)
!8116 = !DILocation(line: 351, column: 6, scope: !5765, inlinedAt: !8056)
!8117 = !DILocation(line: 351, column: 11, scope: !5765, inlinedAt: !8056)
!8118 = !DILocation(line: 351, column: 6, scope: !5704, inlinedAt: !8056)
!8119 = !DILocation(line: 352, column: 3, scope: !5765, inlinedAt: !8056)
!8120 = !DILocation(line: 354, column: 32, scope: !5770, inlinedAt: !8056)
!8121 = !DILocation(line: 354, column: 37, scope: !5770, inlinedAt: !8056)
!8122 = !DILocation(line: 354, column: 42, scope: !5770, inlinedAt: !8056)
!8123 = !DILocation(line: 354, column: 45, scope: !5770, inlinedAt: !8056)
!8124 = !DILocation(line: 354, column: 50, scope: !5770, inlinedAt: !8056)
!8125 = !DILocation(line: 354, column: 6, scope: !5704, inlinedAt: !8056)
!8126 = !DILocation(line: 355, column: 3, scope: !5770, inlinedAt: !8056)
!8127 = !DILocation(line: 356, column: 32, scope: !5778, inlinedAt: !8056)
!8128 = !DILocation(line: 356, column: 37, scope: !5778, inlinedAt: !8056)
!8129 = !DILocation(line: 356, column: 43, scope: !5778, inlinedAt: !8056)
!8130 = !DILocation(line: 356, column: 46, scope: !5778, inlinedAt: !8056)
!8131 = !DILocation(line: 356, column: 51, scope: !5778, inlinedAt: !8056)
!8132 = !DILocation(line: 356, column: 6, scope: !5704, inlinedAt: !8056)
!8133 = !DILocation(line: 357, column: 3, scope: !5778, inlinedAt: !8056)
!8134 = !DILocation(line: 358, column: 6, scope: !5786, inlinedAt: !8056)
!8135 = !DILocation(line: 358, column: 11, scope: !5786, inlinedAt: !8056)
!8136 = !DILocation(line: 358, column: 6, scope: !5704, inlinedAt: !8056)
!8137 = !DILocation(line: 358, column: 26, scope: !5786, inlinedAt: !8056)
!8138 = !DILocation(line: 359, column: 6, scope: !5791, inlinedAt: !8056)
!8139 = !DILocation(line: 359, column: 11, scope: !5791, inlinedAt: !8056)
!8140 = !DILocation(line: 359, column: 6, scope: !5704, inlinedAt: !8056)
!8141 = !DILocation(line: 359, column: 26, scope: !5791, inlinedAt: !8056)
!8142 = !DILocation(line: 360, column: 6, scope: !5796, inlinedAt: !8056)
!8143 = !DILocation(line: 360, column: 11, scope: !5796, inlinedAt: !8056)
!8144 = !DILocation(line: 360, column: 6, scope: !5704, inlinedAt: !8056)
!8145 = !DILocation(line: 360, column: 26, scope: !5796, inlinedAt: !8056)
!8146 = !DILocation(line: 361, column: 6, scope: !5801, inlinedAt: !8056)
!8147 = !DILocation(line: 361, column: 11, scope: !5801, inlinedAt: !8056)
!8148 = !DILocation(line: 361, column: 6, scope: !5704, inlinedAt: !8056)
!8149 = !DILocation(line: 361, column: 26, scope: !5801, inlinedAt: !8056)
!8150 = !DILocation(line: 362, column: 6, scope: !5806, inlinedAt: !8056)
!8151 = !DILocation(line: 362, column: 11, scope: !5806, inlinedAt: !8056)
!8152 = !DILocation(line: 362, column: 6, scope: !5704, inlinedAt: !8056)
!8153 = !DILocation(line: 362, column: 26, scope: !5806, inlinedAt: !8056)
!8154 = !DILocation(line: 363, column: 6, scope: !5811, inlinedAt: !8056)
!8155 = !DILocation(line: 363, column: 11, scope: !5811, inlinedAt: !8056)
!8156 = !DILocation(line: 363, column: 6, scope: !5704, inlinedAt: !8056)
!8157 = !DILocation(line: 363, column: 26, scope: !5811, inlinedAt: !8056)
!8158 = !DILocation(line: 364, column: 6, scope: !5816, inlinedAt: !8056)
!8159 = !DILocation(line: 364, column: 11, scope: !5816, inlinedAt: !8056)
!8160 = !DILocation(line: 364, column: 6, scope: !5704, inlinedAt: !8056)
!8161 = !DILocation(line: 364, column: 26, scope: !5816, inlinedAt: !8056)
!8162 = !DILocation(line: 365, column: 6, scope: !5821, inlinedAt: !8056)
!8163 = !DILocation(line: 365, column: 11, scope: !5821, inlinedAt: !8056)
!8164 = !DILocation(line: 365, column: 6, scope: !5704, inlinedAt: !8056)
!8165 = !DILocation(line: 365, column: 26, scope: !5821, inlinedAt: !8056)
!8166 = !DILocation(line: 366, column: 6, scope: !5826, inlinedAt: !8056)
!8167 = !DILocation(line: 366, column: 11, scope: !5826, inlinedAt: !8056)
!8168 = !DILocation(line: 366, column: 6, scope: !5704, inlinedAt: !8056)
!8169 = !DILocation(line: 366, column: 26, scope: !5826, inlinedAt: !8056)
!8170 = !DILocation(line: 367, column: 6, scope: !5831, inlinedAt: !8056)
!8171 = !DILocation(line: 367, column: 11, scope: !5831, inlinedAt: !8056)
!8172 = !DILocation(line: 367, column: 6, scope: !5704, inlinedAt: !8056)
!8173 = !DILocation(line: 367, column: 26, scope: !5831, inlinedAt: !8056)
!8174 = !DILocation(line: 368, column: 6, scope: !5836, inlinedAt: !8056)
!8175 = !DILocation(line: 368, column: 11, scope: !5836, inlinedAt: !8056)
!8176 = !DILocation(line: 368, column: 6, scope: !5704, inlinedAt: !8056)
!8177 = !DILocation(line: 368, column: 26, scope: !5836, inlinedAt: !8056)
!8178 = !DILocation(line: 369, column: 6, scope: !5841, inlinedAt: !8056)
!8179 = !DILocation(line: 369, column: 11, scope: !5841, inlinedAt: !8056)
!8180 = !DILocation(line: 369, column: 6, scope: !5704, inlinedAt: !8056)
!8181 = !DILocation(line: 369, column: 26, scope: !5841, inlinedAt: !8056)
!8182 = !DILocation(line: 370, column: 6, scope: !5846, inlinedAt: !8056)
!8183 = !DILocation(line: 370, column: 11, scope: !5846, inlinedAt: !8056)
!8184 = !DILocation(line: 370, column: 6, scope: !5704, inlinedAt: !8056)
!8185 = !DILocation(line: 370, column: 26, scope: !5846, inlinedAt: !8056)
!8186 = !DILocation(line: 371, column: 6, scope: !5851, inlinedAt: !8056)
!8187 = !DILocation(line: 371, column: 11, scope: !5851, inlinedAt: !8056)
!8188 = !DILocation(line: 371, column: 6, scope: !5704, inlinedAt: !8056)
!8189 = !DILocation(line: 371, column: 26, scope: !5851, inlinedAt: !8056)
!8190 = !DILocation(line: 372, column: 6, scope: !5856, inlinedAt: !8056)
!8191 = !DILocation(line: 372, column: 11, scope: !5856, inlinedAt: !8056)
!8192 = !DILocation(line: 372, column: 6, scope: !5704, inlinedAt: !8056)
!8193 = !DILocation(line: 372, column: 26, scope: !5856, inlinedAt: !8056)
!8194 = !DILocation(line: 373, column: 6, scope: !5861, inlinedAt: !8056)
!8195 = !DILocation(line: 373, column: 11, scope: !5861, inlinedAt: !8056)
!8196 = !DILocation(line: 373, column: 6, scope: !5704, inlinedAt: !8056)
!8197 = !DILocation(line: 373, column: 26, scope: !5861, inlinedAt: !8056)
!8198 = !DILocation(line: 374, column: 6, scope: !5866, inlinedAt: !8056)
!8199 = !DILocation(line: 374, column: 11, scope: !5866, inlinedAt: !8056)
!8200 = !DILocation(line: 374, column: 6, scope: !5704, inlinedAt: !8056)
!8201 = !DILocation(line: 374, column: 26, scope: !5866, inlinedAt: !8056)
!8202 = !DILocation(line: 375, column: 6, scope: !5871, inlinedAt: !8056)
!8203 = !DILocation(line: 375, column: 11, scope: !5871, inlinedAt: !8056)
!8204 = !DILocation(line: 375, column: 6, scope: !5704, inlinedAt: !8056)
!8205 = !DILocation(line: 375, column: 27, scope: !5871, inlinedAt: !8056)
!8206 = !DILocation(line: 376, column: 6, scope: !5876, inlinedAt: !8056)
!8207 = !DILocation(line: 376, column: 11, scope: !5876, inlinedAt: !8056)
!8208 = !DILocation(line: 376, column: 6, scope: !5704, inlinedAt: !8056)
!8209 = !DILocation(line: 376, column: 32, scope: !5876, inlinedAt: !8056)
!8210 = !DILocation(line: 377, column: 6, scope: !5881, inlinedAt: !8056)
!8211 = !DILocation(line: 377, column: 11, scope: !5881, inlinedAt: !8056)
!8212 = !DILocation(line: 377, column: 6, scope: !5704, inlinedAt: !8056)
!8213 = !DILocation(line: 377, column: 32, scope: !5881, inlinedAt: !8056)
!8214 = !DILocation(line: 378, column: 6, scope: !5886, inlinedAt: !8056)
!8215 = !DILocation(line: 378, column: 11, scope: !5886, inlinedAt: !8056)
!8216 = !DILocation(line: 378, column: 6, scope: !5704, inlinedAt: !8056)
!8217 = !DILocation(line: 378, column: 32, scope: !5886, inlinedAt: !8056)
!8218 = !DILocation(line: 379, column: 6, scope: !5891, inlinedAt: !8056)
!8219 = !DILocation(line: 379, column: 11, scope: !5891, inlinedAt: !8056)
!8220 = !DILocation(line: 379, column: 6, scope: !5704, inlinedAt: !8056)
!8221 = !DILocation(line: 379, column: 33, scope: !5891, inlinedAt: !8056)
!8222 = !DILocation(line: 380, column: 6, scope: !5896, inlinedAt: !8056)
!8223 = !DILocation(line: 380, column: 11, scope: !5896, inlinedAt: !8056)
!8224 = !DILocation(line: 380, column: 6, scope: !5704, inlinedAt: !8056)
!8225 = !DILocation(line: 380, column: 33, scope: !5896, inlinedAt: !8056)
!8226 = !DILocation(line: 381, column: 6, scope: !5901, inlinedAt: !8056)
!8227 = !DILocation(line: 381, column: 11, scope: !5901, inlinedAt: !8056)
!8228 = !DILocation(line: 381, column: 6, scope: !5704, inlinedAt: !8056)
!8229 = !DILocation(line: 381, column: 33, scope: !5901, inlinedAt: !8056)
!8230 = !DILocation(line: 382, column: 2, scope: !5906, inlinedAt: !8056)
!8231 = !DILocation(line: 382, column: 2, scope: !5910, inlinedAt: !8056)
!8232 = !DILocation(line: 382, column: 2, scope: !5911, inlinedAt: !8056)
!8233 = !DILocation(line: 386, column: 1, scope: !5704, inlinedAt: !8056)
!8234 = !DILocation(line: 547, column: 9, scope: !5687, inlinedAt: !8048)
!8235 = !DILocation(line: 549, column: 8, scope: !5917, inlinedAt: !8048)
!8236 = !DILocation(line: 549, column: 7, scope: !5687, inlinedAt: !8048)
!8237 = !DILocation(line: 550, column: 4, scope: !5917, inlinedAt: !8048)
!8238 = !DILocation(line: 553, column: 33, scope: !5687, inlinedAt: !8048)
!8239 = !DILocation(line: 325, column: 6, scope: !5922, inlinedAt: !8054)
!8240 = !DILocation(line: 325, column: 6, scope: !5698, inlinedAt: !8054)
!8241 = !DILocation(line: 326, column: 3, scope: !5922, inlinedAt: !8054)
!8242 = !DILocation(line: 332, column: 9, scope: !5698, inlinedAt: !8054)
!8243 = !DILocation(line: 332, column: 15, scope: !5698, inlinedAt: !8054)
!8244 = !DILocation(line: 332, column: 2, scope: !5698, inlinedAt: !8054)
!8245 = !DILocation(line: 336, column: 1, scope: !5698, inlinedAt: !8054)
!8246 = !DILocation(line: 553, column: 5, scope: !5687, inlinedAt: !8048)
!8247 = !DILocation(line: 553, column: 41, scope: !5687, inlinedAt: !8048)
!8248 = !DILocation(line: 554, column: 5, scope: !5687, inlinedAt: !8048)
!8249 = !DILocation(line: 554, column: 12, scope: !5687, inlinedAt: !8048)
!8250 = !DILocation(line: 448, column: 31, scope: !5682, inlinedAt: !8047)
!8251 = !DILocation(line: 448, column: 34, scope: !5682, inlinedAt: !8047)
!8252 = !DILocation(line: 448, column: 14, scope: !5682, inlinedAt: !8047)
!8253 = !DILocation(line: 450, column: 22, scope: !5682, inlinedAt: !8047)
!8254 = !DILocation(line: 450, column: 25, scope: !5682, inlinedAt: !8047)
!8255 = !DILocation(line: 450, column: 30, scope: !5682, inlinedAt: !8047)
!8256 = !DILocation(line: 450, column: 36, scope: !5682, inlinedAt: !8047)
!8257 = !DILocation(line: 450, column: 8, scope: !5682, inlinedAt: !8047)
!8258 = !DILocation(line: 450, column: 6, scope: !5682, inlinedAt: !8047)
!8259 = !DILocation(line: 451, column: 9, scope: !5682, inlinedAt: !8047)
!8260 = !DILocation(line: 552, column: 3, scope: !5687, inlinedAt: !8048)
!8261 = !DILocation(line: 557, column: 19, scope: !5689, inlinedAt: !8048)
!8262 = !DILocation(line: 557, column: 25, scope: !5689, inlinedAt: !8048)
!8263 = !DILocation(line: 557, column: 9, scope: !5689, inlinedAt: !8048)
!8264 = !DILocation(line: 557, column: 2, scope: !5689, inlinedAt: !8048)
!8265 = !DILocation(line: 558, column: 1, scope: !5689, inlinedAt: !8048)
!8266 = !DILocation(line: 591, column: 3, scope: !8049)
!8267 = !DILocation(line: 592, column: 19, scope: !8045)
!8268 = !DILocation(line: 592, column: 26, scope: !8045)
!8269 = !DILocation(line: 592, column: 9, scope: !8045)
!8270 = !DILocation(line: 592, column: 2, scope: !8045)
!8271 = !DILocation(line: 593, column: 1, scope: !8045)
!8272 = distinct !DISubprogram(name: "__must_check_overflow", scope: !8273, file: !8273, line: 52, type: !8274, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!8273 = !DIFile(filename: "./include/linux/overflow.h", directory: "/home/lizy2001/genbc/linux")
!8274 = !DISubroutineType(types: !8275)
!8275 = !{!457, !457}
!8276 = !DILocalVariable(name: "overflow", arg: 1, scope: !8272, file: !8273, line: 52, type: !457)
!8277 = !DILocation(line: 52, column: 60, scope: !8272)
!8278 = !DILocation(line: 54, column: 9, scope: !8272)
!8279 = !DILocation(line: 54, column: 2, scope: !8272)
!8280 = distinct !DISubprogram(name: "get_order", scope: !8281, file: !8281, line: 29, type: !8282, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!8281 = !DIFile(filename: "./include/asm-generic/getorder.h", directory: "/home/lizy2001/genbc/linux")
!8282 = !DISubroutineType(types: !8283)
!8283 = !{!113, !138}
!8284 = !DILocalVariable(name: "x", arg: 1, scope: !8285, file: !4499, line: 366, type: !387)
!8285 = distinct !DISubprogram(name: "fls64", scope: !4499, file: !4499, line: 366, type: !8286, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!8286 = !DISubroutineType(types: !8287)
!8287 = !{!113, !387}
!8288 = !DILocation(line: 366, column: 40, scope: !8285, inlinedAt: !8289)
!8289 = distinct !DILocation(line: 46, column: 9, scope: !8280)
!8290 = !DILocalVariable(name: "bitpos", scope: !8285, file: !4499, line: 368, type: !113)
!8291 = !DILocation(line: 368, column: 6, scope: !8285, inlinedAt: !8289)
!8292 = !DILocalVariable(name: "size", arg: 1, scope: !8280, file: !8281, line: 29, type: !138)
!8293 = !DILocation(line: 29, column: 63, scope: !8280)
!8294 = !DILocation(line: 31, column: 27, scope: !8295)
!8295 = distinct !DILexicalBlock(scope: !8280, file: !8281, line: 31, column: 6)
!8296 = !DILocation(line: 31, column: 6, scope: !8295)
!8297 = !DILocation(line: 31, column: 6, scope: !8280)
!8298 = !DILocation(line: 32, column: 8, scope: !8299)
!8299 = distinct !DILexicalBlock(scope: !8300, file: !8281, line: 32, column: 7)
!8300 = distinct !DILexicalBlock(scope: !8295, file: !8281, line: 31, column: 34)
!8301 = !DILocation(line: 32, column: 7, scope: !8300)
!8302 = !DILocation(line: 33, column: 4, scope: !8299)
!8303 = !DILocation(line: 35, column: 7, scope: !8304)
!8304 = distinct !DILexicalBlock(scope: !8300, file: !8281, line: 35, column: 7)
!8305 = !DILocation(line: 35, column: 12, scope: !8304)
!8306 = !DILocation(line: 35, column: 7, scope: !8300)
!8307 = !DILocation(line: 36, column: 4, scope: !8304)
!8308 = !DILocation(line: 38, column: 10, scope: !8300)
!8309 = !DILocation(line: 38, column: 28, scope: !8300)
!8310 = !DILocation(line: 38, column: 41, scope: !8300)
!8311 = !DILocation(line: 38, column: 3, scope: !8300)
!8312 = !DILocation(line: 41, column: 6, scope: !8280)
!8313 = !DILocation(line: 42, column: 7, scope: !8280)
!8314 = !DILocation(line: 46, column: 15, scope: !8280)
!8315 = !DILocation(line: 374, column: 2, scope: !8285, inlinedAt: !8289)
!8316 = !DILocation(line: 376, column: 14, scope: !8285, inlinedAt: !8289)
!8317 = !{i32 286443}
!8318 = !DILocation(line: 377, column: 9, scope: !8285, inlinedAt: !8289)
!8319 = !DILocation(line: 377, column: 16, scope: !8285, inlinedAt: !8289)
!8320 = !DILocation(line: 46, column: 2, scope: !8280)
!8321 = !DILocation(line: 48, column: 1, scope: !8280)
!8322 = distinct !DISubprogram(name: "__ilog2_u64", scope: !8323, file: !8323, line: 30, type: !8324, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!8323 = !DIFile(filename: "./include/linux/log2.h", directory: "/home/lizy2001/genbc/linux")
!8324 = !DISubroutineType(types: !8325)
!8325 = !{!113, !386}
!8326 = !DILocation(line: 366, column: 40, scope: !8285, inlinedAt: !8327)
!8327 = distinct !DILocation(line: 32, column: 9, scope: !8322)
!8328 = !DILocation(line: 368, column: 6, scope: !8285, inlinedAt: !8327)
!8329 = !DILocalVariable(name: "n", arg: 1, scope: !8322, file: !8323, line: 30, type: !386)
!8330 = !DILocation(line: 30, column: 21, scope: !8322)
!8331 = !DILocation(line: 32, column: 15, scope: !8322)
!8332 = !DILocation(line: 374, column: 2, scope: !8285, inlinedAt: !8327)
!8333 = !DILocation(line: 376, column: 14, scope: !8285, inlinedAt: !8327)
!8334 = !DILocation(line: 377, column: 9, scope: !8285, inlinedAt: !8327)
!8335 = !DILocation(line: 377, column: 16, scope: !8285, inlinedAt: !8327)
!8336 = !DILocation(line: 32, column: 18, scope: !8322)
!8337 = !DILocation(line: 32, column: 2, scope: !8322)
!8338 = distinct !DISubprogram(name: "kasan_kmalloc", scope: !8339, file: !8339, line: 137, type: !8340, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!8339 = !DIFile(filename: "./include/linux/kasan.h", directory: "/home/lizy2001/genbc/linux")
!8340 = !DISubroutineType(types: !8341)
!8341 = !{!111, !980, !3270, !547, !757}
!8342 = !DILocalVariable(name: "s", arg: 1, scope: !8338, file: !8339, line: 137, type: !980)
!8343 = !DILocation(line: 137, column: 54, scope: !8338)
!8344 = !DILocalVariable(name: "object", arg: 2, scope: !8338, file: !8339, line: 137, type: !3270)
!8345 = !DILocation(line: 137, column: 69, scope: !8338)
!8346 = !DILocalVariable(name: "size", arg: 3, scope: !8338, file: !8339, line: 138, type: !547)
!8347 = !DILocation(line: 138, column: 12, scope: !8338)
!8348 = !DILocalVariable(name: "flags", arg: 4, scope: !8338, file: !8339, line: 138, type: !757)
!8349 = !DILocation(line: 138, column: 24, scope: !8338)
!8350 = !DILocation(line: 140, column: 17, scope: !8338)
!8351 = !DILocation(line: 140, column: 2, scope: !8338)
!8352 = distinct !DISubprogram(name: "kasan_check_read", scope: !7901, file: !7901, line: 34, type: !7902, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!8353 = !DILocalVariable(name: "p", arg: 1, scope: !8352, file: !7901, line: 34, type: !4509)
!8354 = !DILocation(line: 34, column: 58, scope: !8352)
!8355 = !DILocalVariable(name: "size", arg: 2, scope: !8352, file: !7901, line: 34, type: !7)
!8356 = !DILocation(line: 34, column: 74, scope: !8352)
!8357 = !DILocation(line: 36, column: 2, scope: !8352)
!8358 = distinct !DISubprogram(name: "__instrument_read_write_bitop", scope: !4492, file: !4492, line: 61, type: !4493, scopeLine: 62, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!8359 = !DILocalVariable(name: "v", arg: 1, scope: !8360, file: !4506, line: 54, type: !4509)
!8360 = distinct !DISubprogram(name: "instrument_read_write", scope: !4506, file: !4506, line: 54, type: !4507, scopeLine: 55, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!8361 = !DILocation(line: 54, column: 72, scope: !8360, inlinedAt: !8362)
!8362 = distinct !DILocation(line: 81, column: 3, scope: !8363)
!8363 = distinct !DILexicalBlock(scope: !8364, file: !4492, line: 80, column: 9)
!8364 = distinct !DILexicalBlock(scope: !8358, file: !4492, line: 63, column: 6)
!8365 = !DILocalVariable(name: "size", arg: 2, scope: !8360, file: !4506, line: 54, type: !547)
!8366 = !DILocation(line: 54, column: 82, scope: !8360, inlinedAt: !8362)
!8367 = !DILocalVariable(name: "nr", arg: 1, scope: !8358, file: !4492, line: 61, type: !507)
!8368 = !DILocation(line: 61, column: 55, scope: !8358)
!8369 = !DILocalVariable(name: "addr", arg: 2, scope: !8358, file: !4492, line: 61, type: !4495)
!8370 = !DILocation(line: 61, column: 83, scope: !8358)
!8371 = !DILocation(line: 81, column: 25, scope: !8363)
!8372 = !DILocation(line: 81, column: 32, scope: !8363)
!8373 = !DILocation(line: 81, column: 30, scope: !8363)
!8374 = !DILocation(line: 56, column: 20, scope: !8360, inlinedAt: !8362)
!8375 = !DILocation(line: 56, column: 23, scope: !8360, inlinedAt: !8362)
!8376 = !DILocation(line: 56, column: 2, scope: !8360, inlinedAt: !8362)
!8377 = !DILocation(line: 57, column: 2, scope: !8360, inlinedAt: !8362)
!8378 = !DILocation(line: 83, column: 1, scope: !8358)
!8379 = distinct !DISubprogram(name: "input_to_handler", scope: !3, file: !3, line: 93, type: !8380, scopeLine: 95, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!8380 = !DISubroutineType(types: !8381)
!8381 = !{!7, !107, !3780, !7}
!8382 = !DILocalVariable(name: "handle", arg: 1, scope: !8379, file: !3, line: 93, type: !107)
!8383 = !DILocation(line: 93, column: 59, scope: !8379)
!8384 = !DILocalVariable(name: "vals", arg: 2, scope: !8379, file: !3, line: 94, type: !3780)
!8385 = !DILocation(line: 94, column: 24, scope: !8379)
!8386 = !DILocalVariable(name: "count", arg: 3, scope: !8379, file: !3, line: 94, type: !7)
!8387 = !DILocation(line: 94, column: 43, scope: !8379)
!8388 = !DILocalVariable(name: "handler", scope: !8379, file: !3, line: 96, type: !3790)
!8389 = !DILocation(line: 96, column: 24, scope: !8379)
!8390 = !DILocation(line: 96, column: 34, scope: !8379)
!8391 = !DILocation(line: 96, column: 42, scope: !8379)
!8392 = !DILocalVariable(name: "end", scope: !8379, file: !3, line: 97, type: !3780)
!8393 = !DILocation(line: 97, column: 22, scope: !8379)
!8394 = !DILocation(line: 97, column: 28, scope: !8379)
!8395 = !DILocalVariable(name: "v", scope: !8379, file: !3, line: 98, type: !3780)
!8396 = !DILocation(line: 98, column: 22, scope: !8379)
!8397 = !DILocation(line: 100, column: 6, scope: !8398)
!8398 = distinct !DILexicalBlock(scope: !8379, file: !3, line: 100, column: 6)
!8399 = !DILocation(line: 100, column: 15, scope: !8398)
!8400 = !DILocation(line: 100, column: 6, scope: !8379)
!8401 = !DILocation(line: 101, column: 12, scope: !8402)
!8402 = distinct !DILexicalBlock(scope: !8403, file: !3, line: 101, column: 3)
!8403 = distinct !DILexicalBlock(scope: !8398, file: !3, line: 100, column: 23)
!8404 = !DILocation(line: 101, column: 10, scope: !8402)
!8405 = !DILocation(line: 101, column: 8, scope: !8402)
!8406 = !DILocation(line: 101, column: 18, scope: !8407)
!8407 = distinct !DILexicalBlock(scope: !8402, file: !3, line: 101, column: 3)
!8408 = !DILocation(line: 101, column: 23, scope: !8407)
!8409 = !DILocation(line: 101, column: 30, scope: !8407)
!8410 = !DILocation(line: 101, column: 28, scope: !8407)
!8411 = !DILocation(line: 101, column: 20, scope: !8407)
!8412 = !DILocation(line: 101, column: 3, scope: !8402)
!8413 = !DILocation(line: 102, column: 8, scope: !8414)
!8414 = distinct !DILexicalBlock(scope: !8415, file: !3, line: 102, column: 8)
!8415 = distinct !DILexicalBlock(scope: !8407, file: !3, line: 101, column: 42)
!8416 = !DILocation(line: 102, column: 17, scope: !8414)
!8417 = !DILocation(line: 102, column: 24, scope: !8414)
!8418 = !DILocation(line: 102, column: 32, scope: !8414)
!8419 = !DILocation(line: 102, column: 35, scope: !8414)
!8420 = !DILocation(line: 102, column: 41, scope: !8414)
!8421 = !DILocation(line: 102, column: 44, scope: !8414)
!8422 = !DILocation(line: 102, column: 50, scope: !8414)
!8423 = !DILocation(line: 102, column: 53, scope: !8414)
!8424 = !DILocation(line: 102, column: 8, scope: !8415)
!8425 = !DILocation(line: 103, column: 5, scope: !8414)
!8426 = !DILocation(line: 104, column: 8, scope: !8427)
!8427 = distinct !DILexicalBlock(scope: !8415, file: !3, line: 104, column: 8)
!8428 = !DILocation(line: 104, column: 15, scope: !8427)
!8429 = !DILocation(line: 104, column: 12, scope: !8427)
!8430 = !DILocation(line: 104, column: 8, scope: !8415)
!8431 = !DILocation(line: 105, column: 6, scope: !8427)
!8432 = !DILocation(line: 105, column: 13, scope: !8427)
!8433 = !DILocation(line: 105, column: 12, scope: !8427)
!8434 = !DILocation(line: 105, column: 5, scope: !8427)
!8435 = !DILocation(line: 106, column: 7, scope: !8415)
!8436 = !DILocation(line: 107, column: 3, scope: !8415)
!8437 = !DILocation(line: 101, column: 38, scope: !8407)
!8438 = !DILocation(line: 101, column: 3, scope: !8407)
!8439 = distinct !{!8439, !8412, !8440}
!8440 = !DILocation(line: 107, column: 3, scope: !8402)
!8441 = !DILocation(line: 108, column: 11, scope: !8403)
!8442 = !DILocation(line: 108, column: 17, scope: !8403)
!8443 = !DILocation(line: 108, column: 15, scope: !8403)
!8444 = !DILocation(line: 108, column: 9, scope: !8403)
!8445 = !DILocation(line: 109, column: 2, scope: !8403)
!8446 = !DILocation(line: 111, column: 7, scope: !8447)
!8447 = distinct !DILexicalBlock(scope: !8379, file: !3, line: 111, column: 6)
!8448 = !DILocation(line: 111, column: 6, scope: !8379)
!8449 = !DILocation(line: 112, column: 3, scope: !8447)
!8450 = !DILocation(line: 114, column: 6, scope: !8451)
!8451 = distinct !DILexicalBlock(scope: !8379, file: !3, line: 114, column: 6)
!8452 = !DILocation(line: 114, column: 15, scope: !8451)
!8453 = !DILocation(line: 114, column: 6, scope: !8379)
!8454 = !DILocation(line: 115, column: 3, scope: !8451)
!8455 = !DILocation(line: 115, column: 12, scope: !8451)
!8456 = !DILocation(line: 115, column: 19, scope: !8451)
!8457 = !DILocation(line: 115, column: 27, scope: !8451)
!8458 = !DILocation(line: 115, column: 33, scope: !8451)
!8459 = !DILocation(line: 116, column: 11, scope: !8460)
!8460 = distinct !DILexicalBlock(scope: !8451, file: !3, line: 116, column: 11)
!8461 = !DILocation(line: 116, column: 20, scope: !8460)
!8462 = !DILocation(line: 116, column: 11, scope: !8451)
!8463 = !DILocation(line: 117, column: 12, scope: !8464)
!8464 = distinct !DILexicalBlock(scope: !8460, file: !3, line: 117, column: 3)
!8465 = !DILocation(line: 117, column: 10, scope: !8464)
!8466 = !DILocation(line: 117, column: 8, scope: !8464)
!8467 = !DILocation(line: 117, column: 18, scope: !8468)
!8468 = distinct !DILexicalBlock(scope: !8464, file: !3, line: 117, column: 3)
!8469 = !DILocation(line: 117, column: 23, scope: !8468)
!8470 = !DILocation(line: 117, column: 30, scope: !8468)
!8471 = !DILocation(line: 117, column: 28, scope: !8468)
!8472 = !DILocation(line: 117, column: 20, scope: !8468)
!8473 = !DILocation(line: 117, column: 3, scope: !8464)
!8474 = !DILocation(line: 118, column: 4, scope: !8468)
!8475 = !DILocation(line: 118, column: 13, scope: !8468)
!8476 = !DILocation(line: 118, column: 19, scope: !8468)
!8477 = !DILocation(line: 118, column: 27, scope: !8468)
!8478 = !DILocation(line: 118, column: 30, scope: !8468)
!8479 = !DILocation(line: 118, column: 36, scope: !8468)
!8480 = !DILocation(line: 118, column: 39, scope: !8468)
!8481 = !DILocation(line: 118, column: 45, scope: !8468)
!8482 = !DILocation(line: 118, column: 48, scope: !8468)
!8483 = !DILocation(line: 117, column: 38, scope: !8468)
!8484 = !DILocation(line: 117, column: 3, scope: !8468)
!8485 = distinct !{!8485, !8473, !8486}
!8486 = !DILocation(line: 118, column: 53, scope: !8464)
!8487 = !DILocation(line: 120, column: 9, scope: !8379)
!8488 = !DILocation(line: 120, column: 2, scope: !8379)
!8489 = !DILocation(line: 121, column: 1, scope: !8379)
!8490 = distinct !DISubprogram(name: "input_start_autorepeat", scope: !3, file: !3, line: 72, type: !8491, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!8491 = !DISubroutineType(types: !8492)
!8492 = !{null, !119, !113}
!8493 = !DILocation(line: 363, column: 74, scope: !6297, inlinedAt: !8494)
!8494 = distinct !DILocation(line: 79, column: 16, scope: !8495)
!8495 = distinct !DILexicalBlock(scope: !8496, file: !3, line: 76, column: 27)
!8496 = distinct !DILexicalBlock(scope: !8490, file: !3, line: 74, column: 6)
!8497 = !DILocalVariable(name: "dev", arg: 1, scope: !8490, file: !3, line: 72, type: !119)
!8498 = !DILocation(line: 72, column: 54, scope: !8490)
!8499 = !DILocalVariable(name: "code", arg: 2, scope: !8490, file: !3, line: 72, type: !113)
!8500 = !DILocation(line: 72, column: 63, scope: !8490)
!8501 = !DILocation(line: 74, column: 23, scope: !8496)
!8502 = !DILocation(line: 74, column: 28, scope: !8496)
!8503 = !DILocation(line: 74, column: 6, scope: !8496)
!8504 = !DILocation(line: 74, column: 35, scope: !8496)
!8505 = !DILocation(line: 75, column: 6, scope: !8496)
!8506 = !DILocation(line: 75, column: 11, scope: !8496)
!8507 = !DILocation(line: 75, column: 27, scope: !8496)
!8508 = !DILocation(line: 75, column: 30, scope: !8496)
!8509 = !DILocation(line: 75, column: 35, scope: !8496)
!8510 = !DILocation(line: 75, column: 50, scope: !8496)
!8511 = !DILocation(line: 76, column: 6, scope: !8496)
!8512 = !DILocation(line: 76, column: 11, scope: !8496)
!8513 = !DILocation(line: 76, column: 17, scope: !8496)
!8514 = !DILocation(line: 74, column: 6, scope: !8490)
!8515 = !DILocation(line: 77, column: 21, scope: !8495)
!8516 = !DILocation(line: 77, column: 3, scope: !8495)
!8517 = !DILocation(line: 77, column: 8, scope: !8495)
!8518 = !DILocation(line: 77, column: 19, scope: !8495)
!8519 = !DILocation(line: 78, column: 14, scope: !8495)
!8520 = !DILocation(line: 78, column: 19, scope: !8495)
!8521 = !DILocation(line: 79, column: 6, scope: !8495)
!8522 = !DILocation(line: 79, column: 33, scope: !8495)
!8523 = !DILocation(line: 79, column: 38, scope: !8495)
!8524 = !DILocation(line: 365, column: 27, scope: !6382, inlinedAt: !8494)
!8525 = !DILocation(line: 365, column: 6, scope: !6382, inlinedAt: !8494)
!8526 = !DILocation(line: 365, column: 6, scope: !6297, inlinedAt: !8494)
!8527 = !DILocation(line: 366, column: 12, scope: !6386, inlinedAt: !8494)
!8528 = !DILocation(line: 366, column: 14, scope: !6386, inlinedAt: !8494)
!8529 = !DILocation(line: 366, column: 7, scope: !6387, inlinedAt: !8494)
!8530 = !DILocation(line: 367, column: 4, scope: !6386, inlinedAt: !8494)
!8531 = !DILocation(line: 368, column: 28, scope: !6387, inlinedAt: !8494)
!8532 = !DILocation(line: 368, column: 10, scope: !6387, inlinedAt: !8494)
!8533 = !DILocation(line: 368, column: 3, scope: !6387, inlinedAt: !8494)
!8534 = !DILocation(line: 370, column: 29, scope: !6395, inlinedAt: !8494)
!8535 = !DILocation(line: 370, column: 10, scope: !6395, inlinedAt: !8494)
!8536 = !DILocation(line: 370, column: 3, scope: !6395, inlinedAt: !8494)
!8537 = !DILocation(line: 372, column: 1, scope: !6297, inlinedAt: !8494)
!8538 = !DILocation(line: 79, column: 14, scope: !8495)
!8539 = !DILocation(line: 78, column: 3, scope: !8495)
!8540 = !DILocation(line: 80, column: 2, scope: !8495)
!8541 = !DILocation(line: 81, column: 1, scope: !8490)
!8542 = distinct !DISubprogram(name: "input_stop_autorepeat", scope: !3, file: !3, line: 83, type: !3121, scopeLine: 84, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!8543 = !DILocalVariable(name: "dev", arg: 1, scope: !8542, file: !3, line: 83, type: !119)
!8544 = !DILocation(line: 83, column: 53, scope: !8542)
!8545 = !DILocation(line: 85, column: 13, scope: !8542)
!8546 = !DILocation(line: 85, column: 18, scope: !8542)
!8547 = !DILocation(line: 85, column: 2, scope: !8542)
!8548 = !DILocation(line: 86, column: 1, scope: !8542)
!8549 = distinct !DISubprogram(name: "_msecs_to_jiffies", scope: !6298, file: !6298, line: 308, type: !6299, scopeLine: 309, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!8550 = !DILocalVariable(name: "m", arg: 1, scope: !8549, file: !6298, line: 308, type: !2705)
!8551 = !DILocation(line: 308, column: 66, scope: !8549)
!8552 = !DILocation(line: 310, column: 10, scope: !8549)
!8553 = !DILocation(line: 310, column: 12, scope: !8549)
!8554 = !DILocation(line: 310, column: 34, scope: !8549)
!8555 = !DILocation(line: 310, column: 39, scope: !8549)
!8556 = !DILocation(line: 310, column: 2, scope: !8549)
!8557 = distinct !DISubprogram(name: "input_pass_event", scope: !3, file: !3, line: 166, type: !4040, scopeLine: 168, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!8558 = !DILocalVariable(name: "dev", arg: 1, scope: !8557, file: !3, line: 166, type: !119)
!8559 = !DILocation(line: 166, column: 48, scope: !8557)
!8560 = !DILocalVariable(name: "type", arg: 2, scope: !8557, file: !3, line: 167, type: !7)
!8561 = !DILocation(line: 167, column: 22, scope: !8557)
!8562 = !DILocalVariable(name: "code", arg: 3, scope: !8557, file: !3, line: 167, type: !7)
!8563 = !DILocation(line: 167, column: 41, scope: !8557)
!8564 = !DILocalVariable(name: "value", arg: 4, scope: !8557, file: !3, line: 167, type: !113)
!8565 = !DILocation(line: 167, column: 51, scope: !8557)
!8566 = !DILocalVariable(name: "vals", scope: !8557, file: !3, line: 169, type: !8567)
!8567 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3781, size: 64, elements: !139)
!8568 = !DILocation(line: 169, column: 21, scope: !8557)
!8569 = !DILocation(line: 169, column: 30, scope: !8557)
!8570 = !DILocation(line: 169, column: 32, scope: !8557)
!8571 = !DILocation(line: 169, column: 34, scope: !8557)
!8572 = !DILocation(line: 169, column: 40, scope: !8557)
!8573 = !DILocation(line: 169, column: 46, scope: !8557)
!8574 = !DILocation(line: 171, column: 20, scope: !8557)
!8575 = !DILocation(line: 171, column: 25, scope: !8557)
!8576 = !DILocation(line: 171, column: 2, scope: !8557)
!8577 = !DILocation(line: 172, column: 1, scope: !8557)
!8578 = distinct !DISubprogram(name: "dev_name", scope: !60, file: !60, line: 609, type: !8579, scopeLine: 610, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!8579 = !DISubroutineType(types: !8580)
!8580 = !{!115, !8581}
!8581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8582, size: 64)
!8582 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3137)
!8583 = !DILocalVariable(name: "dev", arg: 1, scope: !8578, file: !60, line: 609, type: !8581)
!8584 = !DILocation(line: 609, column: 57, scope: !8578)
!8585 = !DILocation(line: 612, column: 6, scope: !8586)
!8586 = distinct !DILexicalBlock(scope: !8578, file: !60, line: 612, column: 6)
!8587 = !DILocation(line: 612, column: 11, scope: !8586)
!8588 = !DILocation(line: 612, column: 6, scope: !8578)
!8589 = !DILocation(line: 613, column: 10, scope: !8586)
!8590 = !DILocation(line: 613, column: 15, scope: !8586)
!8591 = !DILocation(line: 613, column: 3, scope: !8586)
!8592 = !DILocation(line: 615, column: 23, scope: !8578)
!8593 = !DILocation(line: 615, column: 28, scope: !8578)
!8594 = !DILocation(line: 615, column: 9, scope: !8578)
!8595 = !DILocation(line: 615, column: 2, scope: !8578)
!8596 = !DILocation(line: 616, column: 1, scope: !8578)
!8597 = distinct !DISubprogram(name: "kobject_name", scope: !3141, file: !3141, line: 88, type: !8598, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!8598 = !DISubroutineType(types: !8599)
!8599 = !{!115, !8600}
!8600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8601, size: 64)
!8601 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3140)
!8602 = !DILocalVariable(name: "kobj", arg: 1, scope: !8597, file: !3141, line: 88, type: !8600)
!8603 = !DILocation(line: 88, column: 62, scope: !8597)
!8604 = !DILocation(line: 90, column: 9, scope: !8597)
!8605 = !DILocation(line: 90, column: 15, scope: !8597)
!8606 = !DILocation(line: 90, column: 2, scope: !8597)
!8607 = distinct !DISubprogram(name: "input_dev_uevent", scope: !3, file: !3, line: 1613, type: !3441, scopeLine: 1614, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!8608 = !DILocalVariable(name: "device", arg: 1, scope: !8607, file: !3, line: 1613, type: !3427)
!8609 = !DILocation(line: 1613, column: 44, scope: !8607)
!8610 = !DILocalVariable(name: "env", arg: 2, scope: !8607, file: !3, line: 1613, type: !3174)
!8611 = !DILocation(line: 1613, column: 76, scope: !8607)
!8612 = !DILocalVariable(name: "dev", scope: !8607, file: !3, line: 1615, type: !119)
!8613 = !DILocation(line: 1615, column: 20, scope: !8607)
!8614 = !DILocalVariable(name: "__mptr", scope: !8615, file: !3, line: 1615, type: !111)
!8615 = distinct !DILexicalBlock(scope: !8607, file: !3, line: 1615, column: 26)
!8616 = !DILocation(line: 1615, column: 26, scope: !8615)
!8617 = !DILocation(line: 1615, column: 26, scope: !8618)
!8618 = distinct !DILexicalBlock(scope: !8615, file: !3, line: 1615, column: 26)
!8619 = !DILocation(line: 1617, column: 2, scope: !8607)
!8620 = !DILocalVariable(name: "err", scope: !8621, file: !3, line: 1617, type: !113)
!8621 = distinct !DILexicalBlock(scope: !8607, file: !3, line: 1617, column: 2)
!8622 = !DILocation(line: 1617, column: 2, scope: !8621)
!8623 = !DILocation(line: 1617, column: 2, scope: !8624)
!8624 = distinct !DILexicalBlock(scope: !8621, file: !3, line: 1617, column: 2)
!8625 = !DILocation(line: 1620, column: 6, scope: !8626)
!8626 = distinct !DILexicalBlock(scope: !8607, file: !3, line: 1620, column: 6)
!8627 = !DILocation(line: 1620, column: 11, scope: !8626)
!8628 = !DILocation(line: 1620, column: 6, scope: !8607)
!8629 = !DILocation(line: 1621, column: 3, scope: !8626)
!8630 = !DILocalVariable(name: "err", scope: !8631, file: !3, line: 1621, type: !113)
!8631 = distinct !DILexicalBlock(scope: !8626, file: !3, line: 1621, column: 3)
!8632 = !DILocation(line: 1621, column: 3, scope: !8631)
!8633 = !DILocation(line: 1621, column: 3, scope: !8634)
!8634 = distinct !DILexicalBlock(scope: !8631, file: !3, line: 1621, column: 3)
!8635 = !DILocation(line: 1622, column: 6, scope: !8636)
!8636 = distinct !DILexicalBlock(scope: !8607, file: !3, line: 1622, column: 6)
!8637 = !DILocation(line: 1622, column: 11, scope: !8636)
!8638 = !DILocation(line: 1622, column: 6, scope: !8607)
!8639 = !DILocation(line: 1623, column: 3, scope: !8636)
!8640 = !DILocalVariable(name: "err", scope: !8641, file: !3, line: 1623, type: !113)
!8641 = distinct !DILexicalBlock(scope: !8636, file: !3, line: 1623, column: 3)
!8642 = !DILocation(line: 1623, column: 3, scope: !8641)
!8643 = !DILocation(line: 1623, column: 3, scope: !8644)
!8644 = distinct !DILexicalBlock(scope: !8641, file: !3, line: 1623, column: 3)
!8645 = !DILocation(line: 1624, column: 6, scope: !8646)
!8646 = distinct !DILexicalBlock(scope: !8607, file: !3, line: 1624, column: 6)
!8647 = !DILocation(line: 1624, column: 11, scope: !8646)
!8648 = !DILocation(line: 1624, column: 6, scope: !8607)
!8649 = !DILocation(line: 1625, column: 3, scope: !8646)
!8650 = !DILocalVariable(name: "err", scope: !8651, file: !3, line: 1625, type: !113)
!8651 = distinct !DILexicalBlock(scope: !8646, file: !3, line: 1625, column: 3)
!8652 = !DILocation(line: 1625, column: 3, scope: !8651)
!8653 = !DILocation(line: 1625, column: 3, scope: !8654)
!8654 = distinct !DILexicalBlock(scope: !8651, file: !3, line: 1625, column: 3)
!8655 = !DILocation(line: 1627, column: 2, scope: !8607)
!8656 = !DILocalVariable(name: "err", scope: !8657, file: !3, line: 1627, type: !113)
!8657 = distinct !DILexicalBlock(scope: !8607, file: !3, line: 1627, column: 2)
!8658 = !DILocation(line: 1627, column: 2, scope: !8657)
!8659 = !DILocation(line: 1627, column: 2, scope: !8660)
!8660 = distinct !DILexicalBlock(scope: !8657, file: !3, line: 1627, column: 2)
!8661 = !DILocation(line: 1629, column: 2, scope: !8607)
!8662 = !DILocalVariable(name: "err", scope: !8663, file: !3, line: 1629, type: !113)
!8663 = distinct !DILexicalBlock(scope: !8607, file: !3, line: 1629, column: 2)
!8664 = !DILocation(line: 1629, column: 2, scope: !8663)
!8665 = !DILocation(line: 1629, column: 2, scope: !8666)
!8666 = distinct !DILexicalBlock(scope: !8663, file: !3, line: 1629, column: 2)
!8667 = !DILocation(line: 1630, column: 23, scope: !8668)
!8668 = distinct !DILexicalBlock(scope: !8607, file: !3, line: 1630, column: 6)
!8669 = !DILocation(line: 1630, column: 28, scope: !8668)
!8670 = !DILocation(line: 1630, column: 6, scope: !8668)
!8671 = !DILocation(line: 1630, column: 6, scope: !8607)
!8672 = !DILocation(line: 1631, column: 3, scope: !8668)
!8673 = !DILocalVariable(name: "err", scope: !8674, file: !3, line: 1631, type: !113)
!8674 = distinct !DILexicalBlock(scope: !8668, file: !3, line: 1631, column: 3)
!8675 = !DILocation(line: 1631, column: 3, scope: !8674)
!8676 = !DILocation(line: 1631, column: 3, scope: !8677)
!8677 = distinct !DILexicalBlock(scope: !8674, file: !3, line: 1631, column: 3)
!8678 = !DILocation(line: 1632, column: 23, scope: !8679)
!8679 = distinct !DILexicalBlock(scope: !8607, file: !3, line: 1632, column: 6)
!8680 = !DILocation(line: 1632, column: 28, scope: !8679)
!8681 = !DILocation(line: 1632, column: 6, scope: !8679)
!8682 = !DILocation(line: 1632, column: 6, scope: !8607)
!8683 = !DILocation(line: 1633, column: 3, scope: !8679)
!8684 = !DILocalVariable(name: "err", scope: !8685, file: !3, line: 1633, type: !113)
!8685 = distinct !DILexicalBlock(scope: !8679, file: !3, line: 1633, column: 3)
!8686 = !DILocation(line: 1633, column: 3, scope: !8685)
!8687 = !DILocation(line: 1633, column: 3, scope: !8688)
!8688 = distinct !DILexicalBlock(scope: !8685, file: !3, line: 1633, column: 3)
!8689 = !DILocation(line: 1634, column: 23, scope: !8690)
!8690 = distinct !DILexicalBlock(scope: !8607, file: !3, line: 1634, column: 6)
!8691 = !DILocation(line: 1634, column: 28, scope: !8690)
!8692 = !DILocation(line: 1634, column: 6, scope: !8690)
!8693 = !DILocation(line: 1634, column: 6, scope: !8607)
!8694 = !DILocation(line: 1635, column: 3, scope: !8690)
!8695 = !DILocalVariable(name: "err", scope: !8696, file: !3, line: 1635, type: !113)
!8696 = distinct !DILexicalBlock(scope: !8690, file: !3, line: 1635, column: 3)
!8697 = !DILocation(line: 1635, column: 3, scope: !8696)
!8698 = !DILocation(line: 1635, column: 3, scope: !8699)
!8699 = distinct !DILexicalBlock(scope: !8696, file: !3, line: 1635, column: 3)
!8700 = !DILocation(line: 1636, column: 23, scope: !8701)
!8701 = distinct !DILexicalBlock(scope: !8607, file: !3, line: 1636, column: 6)
!8702 = !DILocation(line: 1636, column: 28, scope: !8701)
!8703 = !DILocation(line: 1636, column: 6, scope: !8701)
!8704 = !DILocation(line: 1636, column: 6, scope: !8607)
!8705 = !DILocation(line: 1637, column: 3, scope: !8701)
!8706 = !DILocalVariable(name: "err", scope: !8707, file: !3, line: 1637, type: !113)
!8707 = distinct !DILexicalBlock(scope: !8701, file: !3, line: 1637, column: 3)
!8708 = !DILocation(line: 1637, column: 3, scope: !8707)
!8709 = !DILocation(line: 1637, column: 3, scope: !8710)
!8710 = distinct !DILexicalBlock(scope: !8707, file: !3, line: 1637, column: 3)
!8711 = !DILocation(line: 1638, column: 23, scope: !8712)
!8712 = distinct !DILexicalBlock(scope: !8607, file: !3, line: 1638, column: 6)
!8713 = !DILocation(line: 1638, column: 28, scope: !8712)
!8714 = !DILocation(line: 1638, column: 6, scope: !8712)
!8715 = !DILocation(line: 1638, column: 6, scope: !8607)
!8716 = !DILocation(line: 1639, column: 3, scope: !8712)
!8717 = !DILocalVariable(name: "err", scope: !8718, file: !3, line: 1639, type: !113)
!8718 = distinct !DILexicalBlock(scope: !8712, file: !3, line: 1639, column: 3)
!8719 = !DILocation(line: 1639, column: 3, scope: !8718)
!8720 = !DILocation(line: 1639, column: 3, scope: !8721)
!8721 = distinct !DILexicalBlock(scope: !8718, file: !3, line: 1639, column: 3)
!8722 = !DILocation(line: 1640, column: 23, scope: !8723)
!8723 = distinct !DILexicalBlock(scope: !8607, file: !3, line: 1640, column: 6)
!8724 = !DILocation(line: 1640, column: 28, scope: !8723)
!8725 = !DILocation(line: 1640, column: 6, scope: !8723)
!8726 = !DILocation(line: 1640, column: 6, scope: !8607)
!8727 = !DILocation(line: 1641, column: 3, scope: !8723)
!8728 = !DILocalVariable(name: "err", scope: !8729, file: !3, line: 1641, type: !113)
!8729 = distinct !DILexicalBlock(scope: !8723, file: !3, line: 1641, column: 3)
!8730 = !DILocation(line: 1641, column: 3, scope: !8729)
!8731 = !DILocation(line: 1641, column: 3, scope: !8732)
!8732 = distinct !DILexicalBlock(scope: !8729, file: !3, line: 1641, column: 3)
!8733 = !DILocation(line: 1642, column: 22, scope: !8734)
!8734 = distinct !DILexicalBlock(scope: !8607, file: !3, line: 1642, column: 6)
!8735 = !DILocation(line: 1642, column: 27, scope: !8734)
!8736 = !DILocation(line: 1642, column: 6, scope: !8734)
!8737 = !DILocation(line: 1642, column: 6, scope: !8607)
!8738 = !DILocation(line: 1643, column: 3, scope: !8734)
!8739 = !DILocalVariable(name: "err", scope: !8740, file: !3, line: 1643, type: !113)
!8740 = distinct !DILexicalBlock(scope: !8734, file: !3, line: 1643, column: 3)
!8741 = !DILocation(line: 1643, column: 3, scope: !8740)
!8742 = !DILocation(line: 1643, column: 3, scope: !8743)
!8743 = distinct !DILexicalBlock(scope: !8740, file: !3, line: 1643, column: 3)
!8744 = !DILocation(line: 1644, column: 22, scope: !8745)
!8745 = distinct !DILexicalBlock(scope: !8607, file: !3, line: 1644, column: 6)
!8746 = !DILocation(line: 1644, column: 27, scope: !8745)
!8747 = !DILocation(line: 1644, column: 6, scope: !8745)
!8748 = !DILocation(line: 1644, column: 6, scope: !8607)
!8749 = !DILocation(line: 1645, column: 3, scope: !8745)
!8750 = !DILocalVariable(name: "err", scope: !8751, file: !3, line: 1645, type: !113)
!8751 = distinct !DILexicalBlock(scope: !8745, file: !3, line: 1645, column: 3)
!8752 = !DILocation(line: 1645, column: 3, scope: !8751)
!8753 = !DILocation(line: 1645, column: 3, scope: !8754)
!8754 = distinct !DILexicalBlock(scope: !8751, file: !3, line: 1645, column: 3)
!8755 = !DILocation(line: 1647, column: 2, scope: !8607)
!8756 = !DILocalVariable(name: "err", scope: !8757, file: !3, line: 1647, type: !113)
!8757 = distinct !DILexicalBlock(scope: !8607, file: !3, line: 1647, column: 2)
!8758 = !DILocation(line: 1647, column: 2, scope: !8757)
!8759 = !DILocation(line: 1647, column: 2, scope: !8760)
!8760 = distinct !DILexicalBlock(scope: !8757, file: !3, line: 1647, column: 2)
!8761 = !DILocation(line: 1649, column: 2, scope: !8607)
!8762 = !DILocation(line: 1650, column: 1, scope: !8607)
!8763 = distinct !DISubprogram(name: "input_dev_release", scope: !3, file: !3, line: 1538, type: !3450, scopeLine: 1539, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!8764 = !DILocalVariable(name: "device", arg: 1, scope: !8763, file: !3, line: 1538, type: !3427)
!8765 = !DILocation(line: 1538, column: 46, scope: !8763)
!8766 = !DILocalVariable(name: "dev", scope: !8763, file: !3, line: 1540, type: !119)
!8767 = !DILocation(line: 1540, column: 20, scope: !8763)
!8768 = !DILocalVariable(name: "__mptr", scope: !8769, file: !3, line: 1540, type: !111)
!8769 = distinct !DILexicalBlock(scope: !8763, file: !3, line: 1540, column: 26)
!8770 = !DILocation(line: 1540, column: 26, scope: !8769)
!8771 = !DILocation(line: 1540, column: 26, scope: !8772)
!8772 = distinct !DILexicalBlock(scope: !8769, file: !3, line: 1540, column: 26)
!8773 = !DILocation(line: 1542, column: 19, scope: !8763)
!8774 = !DILocation(line: 1542, column: 2, scope: !8763)
!8775 = !DILocation(line: 1543, column: 25, scope: !8763)
!8776 = !DILocation(line: 1543, column: 2, scope: !8763)
!8777 = !DILocation(line: 1544, column: 8, scope: !8763)
!8778 = !DILocation(line: 1544, column: 13, scope: !8763)
!8779 = !DILocation(line: 1544, column: 2, scope: !8763)
!8780 = !DILocation(line: 1545, column: 8, scope: !8763)
!8781 = !DILocation(line: 1545, column: 13, scope: !8763)
!8782 = !DILocation(line: 1545, column: 2, scope: !8763)
!8783 = !DILocation(line: 1546, column: 8, scope: !8763)
!8784 = !DILocation(line: 1546, column: 13, scope: !8763)
!8785 = !DILocation(line: 1546, column: 2, scope: !8763)
!8786 = !DILocation(line: 1547, column: 8, scope: !8763)
!8787 = !DILocation(line: 1547, column: 2, scope: !8763)
!8788 = !DILocation(line: 1549, column: 2, scope: !8763)
!8789 = !DILocation(line: 1550, column: 1, scope: !8763)
!8790 = distinct !DISubprogram(name: "input_dev_show_name", scope: !3, file: !3, line: 1340, type: !3928, scopeLine: 1340, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!8791 = !DILocalVariable(name: "dev", arg: 1, scope: !8790, file: !3, line: 1340, type: !3427)
!8792 = !DILocation(line: 1340, column: 1, scope: !8790)
!8793 = !DILocalVariable(name: "attr", arg: 2, scope: !8790, file: !3, line: 1340, type: !3930)
!8794 = !DILocalVariable(name: "buf", arg: 3, scope: !8790, file: !3, line: 1340, type: !452)
!8795 = !DILocalVariable(name: "input_dev", scope: !8790, file: !3, line: 1340, type: !119)
!8796 = !DILocalVariable(name: "__mptr", scope: !8797, file: !3, line: 1340, type: !111)
!8797 = distinct !DILexicalBlock(scope: !8790, file: !3, line: 1340, column: 1)
!8798 = !DILocation(line: 1340, column: 1, scope: !8797)
!8799 = !DILocation(line: 1340, column: 1, scope: !8800)
!8800 = distinct !DILexicalBlock(scope: !8797, file: !3, line: 1340, column: 1)
!8801 = distinct !DISubprogram(name: "input_dev_show_phys", scope: !3, file: !3, line: 1341, type: !3928, scopeLine: 1341, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!8802 = !DILocalVariable(name: "dev", arg: 1, scope: !8801, file: !3, line: 1341, type: !3427)
!8803 = !DILocation(line: 1341, column: 1, scope: !8801)
!8804 = !DILocalVariable(name: "attr", arg: 2, scope: !8801, file: !3, line: 1341, type: !3930)
!8805 = !DILocalVariable(name: "buf", arg: 3, scope: !8801, file: !3, line: 1341, type: !452)
!8806 = !DILocalVariable(name: "input_dev", scope: !8801, file: !3, line: 1341, type: !119)
!8807 = !DILocalVariable(name: "__mptr", scope: !8808, file: !3, line: 1341, type: !111)
!8808 = distinct !DILexicalBlock(scope: !8801, file: !3, line: 1341, column: 1)
!8809 = !DILocation(line: 1341, column: 1, scope: !8808)
!8810 = !DILocation(line: 1341, column: 1, scope: !8811)
!8811 = distinct !DILexicalBlock(scope: !8808, file: !3, line: 1341, column: 1)
!8812 = distinct !DISubprogram(name: "input_dev_show_uniq", scope: !3, file: !3, line: 1342, type: !3928, scopeLine: 1342, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!8813 = !DILocalVariable(name: "dev", arg: 1, scope: !8812, file: !3, line: 1342, type: !3427)
!8814 = !DILocation(line: 1342, column: 1, scope: !8812)
!8815 = !DILocalVariable(name: "attr", arg: 2, scope: !8812, file: !3, line: 1342, type: !3930)
!8816 = !DILocalVariable(name: "buf", arg: 3, scope: !8812, file: !3, line: 1342, type: !452)
!8817 = !DILocalVariable(name: "input_dev", scope: !8812, file: !3, line: 1342, type: !119)
!8818 = !DILocalVariable(name: "__mptr", scope: !8819, file: !3, line: 1342, type: !111)
!8819 = distinct !DILexicalBlock(scope: !8812, file: !3, line: 1342, column: 1)
!8820 = !DILocation(line: 1342, column: 1, scope: !8819)
!8821 = !DILocation(line: 1342, column: 1, scope: !8822)
!8822 = distinct !DILexicalBlock(scope: !8819, file: !3, line: 1342, column: 1)
!8823 = distinct !DISubprogram(name: "input_dev_show_modalias", scope: !3, file: !3, line: 1392, type: !3928, scopeLine: 1395, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!8824 = !DILocalVariable(name: "dev", arg: 1, scope: !8823, file: !3, line: 1392, type: !3427)
!8825 = !DILocation(line: 1392, column: 55, scope: !8823)
!8826 = !DILocalVariable(name: "attr", arg: 2, scope: !8823, file: !3, line: 1393, type: !3930)
!8827 = !DILocation(line: 1393, column: 37, scope: !8823)
!8828 = !DILocalVariable(name: "buf", arg: 3, scope: !8823, file: !3, line: 1394, type: !452)
!8829 = !DILocation(line: 1394, column: 18, scope: !8823)
!8830 = !DILocalVariable(name: "id", scope: !8823, file: !3, line: 1396, type: !119)
!8831 = !DILocation(line: 1396, column: 20, scope: !8823)
!8832 = !DILocalVariable(name: "__mptr", scope: !8833, file: !3, line: 1396, type: !111)
!8833 = distinct !DILexicalBlock(scope: !8823, file: !3, line: 1396, column: 25)
!8834 = !DILocation(line: 1396, column: 25, scope: !8833)
!8835 = !DILocation(line: 1396, column: 25, scope: !8836)
!8836 = distinct !DILexicalBlock(scope: !8833, file: !3, line: 1396, column: 25)
!8837 = !DILocalVariable(name: "len", scope: !8823, file: !3, line: 1397, type: !544)
!8838 = !DILocation(line: 1397, column: 10, scope: !8823)
!8839 = !DILocation(line: 1399, column: 29, scope: !8823)
!8840 = !DILocation(line: 1399, column: 45, scope: !8823)
!8841 = !DILocation(line: 1399, column: 8, scope: !8823)
!8842 = !DILocation(line: 1399, column: 6, scope: !8823)
!8843 = !DILocalVariable(name: "__UNIQUE_ID___x249", scope: !8844, file: !3, line: 1401, type: !113)
!8844 = distinct !DILexicalBlock(scope: !8823, file: !3, line: 1401, column: 9)
!8845 = !DILocation(line: 1401, column: 9, scope: !8844)
!8846 = !DILocalVariable(name: "__UNIQUE_ID___y250", scope: !8844, file: !3, line: 1401, type: !113)
!8847 = !DILocation(line: 1401, column: 9, scope: !8823)
!8848 = !DILocation(line: 1401, column: 2, scope: !8823)
!8849 = distinct !DISubprogram(name: "input_print_modalias", scope: !3, file: !3, line: 1357, type: !8850, scopeLine: 1359, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!8850 = !DISubroutineType(types: !8851)
!8851 = !{!113, !452, !113, !119, !113}
!8852 = !DILocalVariable(name: "buf", arg: 1, scope: !8849, file: !3, line: 1357, type: !452)
!8853 = !DILocation(line: 1357, column: 39, scope: !8849)
!8854 = !DILocalVariable(name: "size", arg: 2, scope: !8849, file: !3, line: 1357, type: !113)
!8855 = !DILocation(line: 1357, column: 48, scope: !8849)
!8856 = !DILocalVariable(name: "id", arg: 3, scope: !8849, file: !3, line: 1357, type: !119)
!8857 = !DILocation(line: 1357, column: 72, scope: !8849)
!8858 = !DILocalVariable(name: "add_cr", arg: 4, scope: !8849, file: !3, line: 1358, type: !113)
!8859 = !DILocation(line: 1358, column: 9, scope: !8849)
!8860 = !DILocalVariable(name: "len", scope: !8849, file: !3, line: 1360, type: !113)
!8861 = !DILocation(line: 1360, column: 6, scope: !8849)
!8862 = !DILocation(line: 1362, column: 17, scope: !8849)
!8863 = !DILocalVariable(name: "__UNIQUE_ID___x244", scope: !8864, file: !3, line: 1362, type: !113)
!8864 = distinct !DILexicalBlock(scope: !8849, file: !3, line: 1362, column: 22)
!8865 = !DILocation(line: 1362, column: 22, scope: !8864)
!8866 = !DILocalVariable(name: "__UNIQUE_ID___y245", scope: !8864, file: !3, line: 1362, type: !113)
!8867 = !DILocation(line: 1362, column: 22, scope: !8849)
!8868 = !DILocation(line: 1364, column: 10, scope: !8849)
!8869 = !DILocation(line: 1364, column: 14, scope: !8849)
!8870 = !DILocation(line: 1364, column: 17, scope: !8849)
!8871 = !DILocation(line: 1364, column: 26, scope: !8849)
!8872 = !DILocation(line: 1364, column: 30, scope: !8849)
!8873 = !DILocation(line: 1364, column: 33, scope: !8849)
!8874 = !DILocation(line: 1365, column: 10, scope: !8849)
!8875 = !DILocation(line: 1365, column: 14, scope: !8849)
!8876 = !DILocation(line: 1365, column: 17, scope: !8849)
!8877 = !DILocation(line: 1365, column: 26, scope: !8849)
!8878 = !DILocation(line: 1365, column: 30, scope: !8849)
!8879 = !DILocation(line: 1365, column: 33, scope: !8849)
!8880 = !DILocation(line: 1362, column: 8, scope: !8849)
!8881 = !DILocation(line: 1362, column: 6, scope: !8849)
!8882 = !DILocation(line: 1367, column: 35, scope: !8849)
!8883 = !DILocation(line: 1367, column: 41, scope: !8849)
!8884 = !DILocation(line: 1367, column: 39, scope: !8849)
!8885 = !DILocation(line: 1367, column: 46, scope: !8849)
!8886 = !DILocation(line: 1367, column: 53, scope: !8849)
!8887 = !DILocation(line: 1367, column: 51, scope: !8849)
!8888 = !DILocation(line: 1368, column: 10, scope: !8849)
!8889 = !DILocation(line: 1368, column: 14, scope: !8849)
!8890 = !DILocation(line: 1367, column: 9, scope: !8849)
!8891 = !DILocation(line: 1367, column: 6, scope: !8849)
!8892 = !DILocation(line: 1369, column: 35, scope: !8849)
!8893 = !DILocation(line: 1369, column: 41, scope: !8849)
!8894 = !DILocation(line: 1369, column: 39, scope: !8849)
!8895 = !DILocation(line: 1369, column: 46, scope: !8849)
!8896 = !DILocation(line: 1369, column: 53, scope: !8849)
!8897 = !DILocation(line: 1369, column: 51, scope: !8849)
!8898 = !DILocation(line: 1370, column: 10, scope: !8849)
!8899 = !DILocation(line: 1370, column: 14, scope: !8849)
!8900 = !DILocation(line: 1369, column: 9, scope: !8849)
!8901 = !DILocation(line: 1369, column: 6, scope: !8849)
!8902 = !DILocation(line: 1371, column: 35, scope: !8849)
!8903 = !DILocation(line: 1371, column: 41, scope: !8849)
!8904 = !DILocation(line: 1371, column: 39, scope: !8849)
!8905 = !DILocation(line: 1371, column: 46, scope: !8849)
!8906 = !DILocation(line: 1371, column: 53, scope: !8849)
!8907 = !DILocation(line: 1371, column: 51, scope: !8849)
!8908 = !DILocation(line: 1372, column: 10, scope: !8849)
!8909 = !DILocation(line: 1372, column: 14, scope: !8849)
!8910 = !DILocation(line: 1371, column: 9, scope: !8849)
!8911 = !DILocation(line: 1371, column: 6, scope: !8849)
!8912 = !DILocation(line: 1373, column: 35, scope: !8849)
!8913 = !DILocation(line: 1373, column: 41, scope: !8849)
!8914 = !DILocation(line: 1373, column: 39, scope: !8849)
!8915 = !DILocation(line: 1373, column: 46, scope: !8849)
!8916 = !DILocation(line: 1373, column: 53, scope: !8849)
!8917 = !DILocation(line: 1373, column: 51, scope: !8849)
!8918 = !DILocation(line: 1374, column: 10, scope: !8849)
!8919 = !DILocation(line: 1374, column: 14, scope: !8849)
!8920 = !DILocation(line: 1373, column: 9, scope: !8849)
!8921 = !DILocation(line: 1373, column: 6, scope: !8849)
!8922 = !DILocation(line: 1375, column: 35, scope: !8849)
!8923 = !DILocation(line: 1375, column: 41, scope: !8849)
!8924 = !DILocation(line: 1375, column: 39, scope: !8849)
!8925 = !DILocation(line: 1375, column: 46, scope: !8849)
!8926 = !DILocation(line: 1375, column: 53, scope: !8849)
!8927 = !DILocation(line: 1375, column: 51, scope: !8849)
!8928 = !DILocation(line: 1376, column: 10, scope: !8849)
!8929 = !DILocation(line: 1376, column: 14, scope: !8849)
!8930 = !DILocation(line: 1375, column: 9, scope: !8849)
!8931 = !DILocation(line: 1375, column: 6, scope: !8849)
!8932 = !DILocation(line: 1377, column: 35, scope: !8849)
!8933 = !DILocation(line: 1377, column: 41, scope: !8849)
!8934 = !DILocation(line: 1377, column: 39, scope: !8849)
!8935 = !DILocation(line: 1377, column: 46, scope: !8849)
!8936 = !DILocation(line: 1377, column: 53, scope: !8849)
!8937 = !DILocation(line: 1377, column: 51, scope: !8849)
!8938 = !DILocation(line: 1378, column: 10, scope: !8849)
!8939 = !DILocation(line: 1378, column: 14, scope: !8849)
!8940 = !DILocation(line: 1377, column: 9, scope: !8849)
!8941 = !DILocation(line: 1377, column: 6, scope: !8849)
!8942 = !DILocation(line: 1379, column: 35, scope: !8849)
!8943 = !DILocation(line: 1379, column: 41, scope: !8849)
!8944 = !DILocation(line: 1379, column: 39, scope: !8849)
!8945 = !DILocation(line: 1379, column: 46, scope: !8849)
!8946 = !DILocation(line: 1379, column: 53, scope: !8849)
!8947 = !DILocation(line: 1379, column: 51, scope: !8849)
!8948 = !DILocation(line: 1380, column: 10, scope: !8849)
!8949 = !DILocation(line: 1380, column: 14, scope: !8849)
!8950 = !DILocation(line: 1379, column: 9, scope: !8849)
!8951 = !DILocation(line: 1379, column: 6, scope: !8849)
!8952 = !DILocation(line: 1381, column: 35, scope: !8849)
!8953 = !DILocation(line: 1381, column: 41, scope: !8849)
!8954 = !DILocation(line: 1381, column: 39, scope: !8849)
!8955 = !DILocation(line: 1381, column: 46, scope: !8849)
!8956 = !DILocation(line: 1381, column: 53, scope: !8849)
!8957 = !DILocation(line: 1381, column: 51, scope: !8849)
!8958 = !DILocation(line: 1382, column: 10, scope: !8849)
!8959 = !DILocation(line: 1382, column: 14, scope: !8849)
!8960 = !DILocation(line: 1381, column: 9, scope: !8849)
!8961 = !DILocation(line: 1381, column: 6, scope: !8849)
!8962 = !DILocation(line: 1383, column: 35, scope: !8849)
!8963 = !DILocation(line: 1383, column: 41, scope: !8849)
!8964 = !DILocation(line: 1383, column: 39, scope: !8849)
!8965 = !DILocation(line: 1383, column: 46, scope: !8849)
!8966 = !DILocation(line: 1383, column: 53, scope: !8849)
!8967 = !DILocation(line: 1383, column: 51, scope: !8849)
!8968 = !DILocation(line: 1384, column: 10, scope: !8849)
!8969 = !DILocation(line: 1384, column: 14, scope: !8849)
!8970 = !DILocation(line: 1383, column: 9, scope: !8849)
!8971 = !DILocation(line: 1383, column: 6, scope: !8849)
!8972 = !DILocation(line: 1386, column: 6, scope: !8973)
!8973 = distinct !DILexicalBlock(scope: !8849, file: !3, line: 1386, column: 6)
!8974 = !DILocation(line: 1386, column: 6, scope: !8849)
!8975 = !DILocation(line: 1387, column: 19, scope: !8973)
!8976 = !DILocation(line: 1387, column: 25, scope: !8973)
!8977 = !DILocation(line: 1387, column: 23, scope: !8973)
!8978 = !DILocalVariable(name: "__UNIQUE_ID___x246", scope: !8979, file: !3, line: 1387, type: !113)
!8979 = distinct !DILexicalBlock(scope: !8973, file: !3, line: 1387, column: 30)
!8980 = !DILocation(line: 1387, column: 30, scope: !8979)
!8981 = !DILocalVariable(name: "__UNIQUE_ID___y247", scope: !8979, file: !3, line: 1387, type: !113)
!8982 = !DILocation(line: 1387, column: 30, scope: !8973)
!8983 = !DILocation(line: 1387, column: 10, scope: !8973)
!8984 = !DILocation(line: 1387, column: 7, scope: !8973)
!8985 = !DILocation(line: 1387, column: 3, scope: !8973)
!8986 = !DILocation(line: 1389, column: 9, scope: !8849)
!8987 = !DILocation(line: 1389, column: 2, scope: !8849)
!8988 = distinct !DISubprogram(name: "input_print_modalias_bits", scope: !3, file: !3, line: 1344, type: !8989, scopeLine: 1347, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!8989 = !DISubroutineType(types: !8990)
!8990 = !{!113, !452, !113, !117, !3863, !7, !7}
!8991 = !DILocalVariable(name: "buf", arg: 1, scope: !8988, file: !3, line: 1344, type: !452)
!8992 = !DILocation(line: 1344, column: 44, scope: !8988)
!8993 = !DILocalVariable(name: "size", arg: 2, scope: !8988, file: !3, line: 1344, type: !113)
!8994 = !DILocation(line: 1344, column: 53, scope: !8988)
!8995 = !DILocalVariable(name: "name", arg: 3, scope: !8988, file: !3, line: 1345, type: !117)
!8996 = !DILocation(line: 1345, column: 15, scope: !8988)
!8997 = !DILocalVariable(name: "bm", arg: 4, scope: !8988, file: !3, line: 1345, type: !3863)
!8998 = !DILocation(line: 1345, column: 36, scope: !8988)
!8999 = !DILocalVariable(name: "min_bit", arg: 5, scope: !8988, file: !3, line: 1346, type: !7)
!9000 = !DILocation(line: 1346, column: 23, scope: !8988)
!9001 = !DILocalVariable(name: "max_bit", arg: 6, scope: !8988, file: !3, line: 1346, type: !7)
!9002 = !DILocation(line: 1346, column: 45, scope: !8988)
!9003 = !DILocalVariable(name: "len", scope: !8988, file: !3, line: 1348, type: !113)
!9004 = !DILocation(line: 1348, column: 6, scope: !8988)
!9005 = !DILocalVariable(name: "i", scope: !8988, file: !3, line: 1348, type: !113)
!9006 = !DILocation(line: 1348, column: 15, scope: !8988)
!9007 = !DILocation(line: 1350, column: 18, scope: !8988)
!9008 = !DILocalVariable(name: "__UNIQUE_ID___x240", scope: !9009, file: !3, line: 1350, type: !113)
!9009 = distinct !DILexicalBlock(scope: !8988, file: !3, line: 1350, column: 23)
!9010 = !DILocation(line: 1350, column: 23, scope: !9009)
!9011 = !DILocalVariable(name: "__UNIQUE_ID___y241", scope: !9009, file: !3, line: 1350, type: !113)
!9012 = !DILocation(line: 1350, column: 23, scope: !8988)
!9013 = !DILocation(line: 1350, column: 43, scope: !8988)
!9014 = !DILocation(line: 1350, column: 9, scope: !8988)
!9015 = !DILocation(line: 1350, column: 6, scope: !8988)
!9016 = !DILocation(line: 1351, column: 11, scope: !9017)
!9017 = distinct !DILexicalBlock(scope: !8988, file: !3, line: 1351, column: 2)
!9018 = !DILocation(line: 1351, column: 9, scope: !9017)
!9019 = !DILocation(line: 1351, column: 7, scope: !9017)
!9020 = !DILocation(line: 1351, column: 20, scope: !9021)
!9021 = distinct !DILexicalBlock(scope: !9017, file: !3, line: 1351, column: 2)
!9022 = !DILocation(line: 1351, column: 24, scope: !9021)
!9023 = !DILocation(line: 1351, column: 22, scope: !9021)
!9024 = !DILocation(line: 1351, column: 2, scope: !9017)
!9025 = !DILocation(line: 1352, column: 7, scope: !9026)
!9026 = distinct !DILexicalBlock(scope: !9021, file: !3, line: 1352, column: 7)
!9027 = !DILocation(line: 1352, column: 10, scope: !9026)
!9028 = !DILocation(line: 1352, column: 25, scope: !9026)
!9029 = !DILocation(line: 1352, column: 23, scope: !9026)
!9030 = !DILocation(line: 1352, column: 7, scope: !9021)
!9031 = !DILocation(line: 1353, column: 20, scope: !9026)
!9032 = !DILocation(line: 1353, column: 26, scope: !9026)
!9033 = !DILocation(line: 1353, column: 24, scope: !9026)
!9034 = !DILocalVariable(name: "__UNIQUE_ID___x242", scope: !9035, file: !3, line: 1353, type: !113)
!9035 = distinct !DILexicalBlock(scope: !9026, file: !3, line: 1353, column: 31)
!9036 = !DILocation(line: 1353, column: 31, scope: !9035)
!9037 = !DILocalVariable(name: "__UNIQUE_ID___y243", scope: !9035, file: !3, line: 1353, type: !113)
!9038 = !DILocation(line: 1353, column: 31, scope: !9026)
!9039 = !DILocation(line: 1353, column: 58, scope: !9026)
!9040 = !DILocation(line: 1353, column: 11, scope: !9026)
!9041 = !DILocation(line: 1353, column: 8, scope: !9026)
!9042 = !DILocation(line: 1353, column: 4, scope: !9026)
!9043 = !DILocation(line: 1351, column: 34, scope: !9021)
!9044 = !DILocation(line: 1351, column: 2, scope: !9021)
!9045 = distinct !{!9045, !9024, !9046}
!9046 = !DILocation(line: 1353, column: 59, scope: !9017)
!9047 = !DILocation(line: 1354, column: 9, scope: !8988)
!9048 = !DILocation(line: 1354, column: 2, scope: !8988)
!9049 = distinct !DISubprogram(name: "input_dev_show_properties", scope: !3, file: !3, line: 1408, type: !3928, scopeLine: 1411, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!9050 = !DILocalVariable(name: "dev", arg: 1, scope: !9049, file: !3, line: 1408, type: !3427)
!9051 = !DILocation(line: 1408, column: 57, scope: !9049)
!9052 = !DILocalVariable(name: "attr", arg: 2, scope: !9049, file: !3, line: 1409, type: !3930)
!9053 = !DILocation(line: 1409, column: 32, scope: !9049)
!9054 = !DILocalVariable(name: "buf", arg: 3, scope: !9049, file: !3, line: 1410, type: !452)
!9055 = !DILocation(line: 1410, column: 13, scope: !9049)
!9056 = !DILocalVariable(name: "input_dev", scope: !9049, file: !3, line: 1412, type: !119)
!9057 = !DILocation(line: 1412, column: 20, scope: !9049)
!9058 = !DILocalVariable(name: "__mptr", scope: !9059, file: !3, line: 1412, type: !111)
!9059 = distinct !DILexicalBlock(scope: !9049, file: !3, line: 1412, column: 32)
!9060 = !DILocation(line: 1412, column: 32, scope: !9059)
!9061 = !DILocation(line: 1412, column: 32, scope: !9062)
!9062 = distinct !DILexicalBlock(scope: !9059, file: !3, line: 1412, column: 32)
!9063 = !DILocalVariable(name: "len", scope: !9049, file: !3, line: 1413, type: !113)
!9064 = !DILocation(line: 1413, column: 6, scope: !9049)
!9065 = !DILocation(line: 1413, column: 31, scope: !9049)
!9066 = !DILocation(line: 1413, column: 47, scope: !9049)
!9067 = !DILocation(line: 1413, column: 58, scope: !9049)
!9068 = !DILocation(line: 1413, column: 12, scope: !9049)
!9069 = !DILocalVariable(name: "__UNIQUE_ID___x252", scope: !9070, file: !3, line: 1415, type: !113)
!9070 = distinct !DILexicalBlock(scope: !9049, file: !3, line: 1415, column: 9)
!9071 = !DILocation(line: 1415, column: 9, scope: !9070)
!9072 = !DILocalVariable(name: "__UNIQUE_ID___y253", scope: !9070, file: !3, line: 1415, type: !113)
!9073 = !DILocation(line: 1415, column: 9, scope: !9049)
!9074 = !DILocation(line: 1415, column: 2, scope: !9049)
!9075 = distinct !DISubprogram(name: "input_print_bitmap", scope: !3, file: !3, line: 1460, type: !9076, scopeLine: 1462, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!9076 = !DISubroutineType(types: !9077)
!9077 = !{!113, !452, !113, !3863, !113, !113}
!9078 = !DILocalVariable(name: "buf", arg: 1, scope: !9075, file: !3, line: 1460, type: !452)
!9079 = !DILocation(line: 1460, column: 37, scope: !9075)
!9080 = !DILocalVariable(name: "buf_size", arg: 2, scope: !9075, file: !3, line: 1460, type: !113)
!9081 = !DILocation(line: 1460, column: 46, scope: !9075)
!9082 = !DILocalVariable(name: "bitmap", arg: 3, scope: !9075, file: !3, line: 1460, type: !3863)
!9083 = !DILocation(line: 1460, column: 71, scope: !9075)
!9084 = !DILocalVariable(name: "max", arg: 4, scope: !9075, file: !3, line: 1461, type: !113)
!9085 = !DILocation(line: 1461, column: 14, scope: !9075)
!9086 = !DILocalVariable(name: "add_cr", arg: 5, scope: !9075, file: !3, line: 1461, type: !113)
!9087 = !DILocation(line: 1461, column: 23, scope: !9075)
!9088 = !DILocalVariable(name: "i", scope: !9075, file: !3, line: 1463, type: !113)
!9089 = !DILocation(line: 1463, column: 6, scope: !9075)
!9090 = !DILocalVariable(name: "len", scope: !9075, file: !3, line: 1464, type: !113)
!9091 = !DILocation(line: 1464, column: 6, scope: !9075)
!9092 = !DILocalVariable(name: "skip_empty", scope: !9075, file: !3, line: 1465, type: !457)
!9093 = !DILocation(line: 1465, column: 7, scope: !9075)
!9094 = !DILocation(line: 1467, column: 11, scope: !9095)
!9095 = distinct !DILexicalBlock(scope: !9075, file: !3, line: 1467, column: 2)
!9096 = !DILocation(line: 1467, column: 30, scope: !9095)
!9097 = !DILocation(line: 1467, column: 9, scope: !9095)
!9098 = !DILocation(line: 1467, column: 7, scope: !9095)
!9099 = !DILocation(line: 1467, column: 35, scope: !9100)
!9100 = distinct !DILexicalBlock(scope: !9095, file: !3, line: 1467, column: 2)
!9101 = !DILocation(line: 1467, column: 37, scope: !9100)
!9102 = !DILocation(line: 1467, column: 2, scope: !9095)
!9103 = !DILocation(line: 1468, column: 31, scope: !9104)
!9104 = distinct !DILexicalBlock(scope: !9100, file: !3, line: 1467, column: 48)
!9105 = !DILocation(line: 1468, column: 37, scope: !9104)
!9106 = !DILocation(line: 1468, column: 35, scope: !9104)
!9107 = !DILocalVariable(name: "__UNIQUE_ID___x258", scope: !9108, file: !3, line: 1468, type: !113)
!9108 = distinct !DILexicalBlock(scope: !9104, file: !3, line: 1468, column: 42)
!9109 = !DILocation(line: 1468, column: 42, scope: !9108)
!9110 = !DILocalVariable(name: "__UNIQUE_ID___y259", scope: !9108, file: !3, line: 1468, type: !113)
!9111 = !DILocation(line: 1469, column: 10, scope: !9104)
!9112 = !DILocation(line: 1469, column: 17, scope: !9104)
!9113 = !DILocation(line: 1469, column: 21, scope: !9104)
!9114 = !DILocation(line: 1468, column: 10, scope: !9104)
!9115 = !DILocation(line: 1468, column: 7, scope: !9104)
!9116 = !DILocation(line: 1470, column: 7, scope: !9117)
!9117 = distinct !DILexicalBlock(scope: !9104, file: !3, line: 1470, column: 7)
!9118 = !DILocation(line: 1470, column: 7, scope: !9104)
!9119 = !DILocation(line: 1471, column: 15, scope: !9120)
!9120 = distinct !DILexicalBlock(scope: !9117, file: !3, line: 1470, column: 12)
!9121 = !DILocation(line: 1472, column: 8, scope: !9122)
!9122 = distinct !DILexicalBlock(scope: !9120, file: !3, line: 1472, column: 8)
!9123 = !DILocation(line: 1472, column: 10, scope: !9122)
!9124 = !DILocation(line: 1472, column: 8, scope: !9120)
!9125 = !DILocation(line: 1473, column: 21, scope: !9122)
!9126 = !DILocation(line: 1473, column: 27, scope: !9122)
!9127 = !DILocation(line: 1473, column: 25, scope: !9122)
!9128 = !DILocalVariable(name: "__UNIQUE_ID___x260", scope: !9129, file: !3, line: 1473, type: !113)
!9129 = distinct !DILexicalBlock(scope: !9122, file: !3, line: 1473, column: 32)
!9130 = !DILocation(line: 1473, column: 32, scope: !9129)
!9131 = !DILocalVariable(name: "__UNIQUE_ID___y261", scope: !9129, file: !3, line: 1473, type: !113)
!9132 = !DILocation(line: 1473, column: 32, scope: !9122)
!9133 = !DILocation(line: 1473, column: 12, scope: !9122)
!9134 = !DILocation(line: 1473, column: 9, scope: !9122)
!9135 = !DILocation(line: 1473, column: 5, scope: !9122)
!9136 = !DILocation(line: 1474, column: 3, scope: !9120)
!9137 = !DILocation(line: 1475, column: 2, scope: !9104)
!9138 = !DILocation(line: 1467, column: 44, scope: !9100)
!9139 = !DILocation(line: 1467, column: 2, scope: !9100)
!9140 = distinct !{!9140, !9102, !9141}
!9141 = !DILocation(line: 1475, column: 2, scope: !9095)
!9142 = !DILocation(line: 1480, column: 6, scope: !9143)
!9143 = distinct !DILexicalBlock(scope: !9075, file: !3, line: 1480, column: 6)
!9144 = !DILocation(line: 1480, column: 10, scope: !9143)
!9145 = !DILocation(line: 1480, column: 6, scope: !9075)
!9146 = !DILocation(line: 1481, column: 18, scope: !9143)
!9147 = !DILocation(line: 1481, column: 23, scope: !9143)
!9148 = !DILocation(line: 1481, column: 9, scope: !9143)
!9149 = !DILocation(line: 1481, column: 7, scope: !9143)
!9150 = !DILocation(line: 1481, column: 3, scope: !9143)
!9151 = !DILocation(line: 1483, column: 6, scope: !9152)
!9152 = distinct !DILexicalBlock(scope: !9075, file: !3, line: 1483, column: 6)
!9153 = !DILocation(line: 1483, column: 6, scope: !9075)
!9154 = !DILocation(line: 1484, column: 19, scope: !9152)
!9155 = !DILocation(line: 1484, column: 25, scope: !9152)
!9156 = !DILocation(line: 1484, column: 23, scope: !9152)
!9157 = !DILocalVariable(name: "__UNIQUE_ID___x262", scope: !9158, file: !3, line: 1484, type: !113)
!9158 = distinct !DILexicalBlock(scope: !9152, file: !3, line: 1484, column: 30)
!9159 = !DILocation(line: 1484, column: 30, scope: !9158)
!9160 = !DILocalVariable(name: "__UNIQUE_ID___y263", scope: !9158, file: !3, line: 1484, type: !113)
!9161 = !DILocation(line: 1484, column: 30, scope: !9152)
!9162 = !DILocation(line: 1484, column: 10, scope: !9152)
!9163 = !DILocation(line: 1484, column: 7, scope: !9152)
!9164 = !DILocation(line: 1484, column: 3, scope: !9152)
!9165 = !DILocation(line: 1486, column: 9, scope: !9075)
!9166 = !DILocation(line: 1486, column: 2, scope: !9075)
!9167 = distinct !DISubprogram(name: "input_bits_to_string", scope: !3, file: !3, line: 1065, type: !9168, scopeLine: 1067, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!9168 = !DISubroutineType(types: !9169)
!9169 = !{!113, !452, !113, !138, !457}
!9170 = !DILocalVariable(name: "buf", arg: 1, scope: !9167, file: !3, line: 1065, type: !452)
!9171 = !DILocation(line: 1065, column: 39, scope: !9167)
!9172 = !DILocalVariable(name: "buf_size", arg: 2, scope: !9167, file: !3, line: 1065, type: !113)
!9173 = !DILocation(line: 1065, column: 48, scope: !9167)
!9174 = !DILocalVariable(name: "bits", arg: 3, scope: !9167, file: !3, line: 1066, type: !138)
!9175 = !DILocation(line: 1066, column: 19, scope: !9167)
!9176 = !DILocalVariable(name: "skip_empty", arg: 4, scope: !9167, file: !3, line: 1066, type: !457)
!9177 = !DILocation(line: 1066, column: 30, scope: !9167)
!9178 = !DILocation(line: 1068, column: 9, scope: !9167)
!9179 = !DILocation(line: 1068, column: 14, scope: !9167)
!9180 = !DILocation(line: 1068, column: 18, scope: !9167)
!9181 = !DILocation(line: 1069, column: 12, scope: !9167)
!9182 = !DILocation(line: 1069, column: 17, scope: !9167)
!9183 = !DILocation(line: 1069, column: 34, scope: !9167)
!9184 = !DILocation(line: 1069, column: 3, scope: !9167)
!9185 = !DILocation(line: 1068, column: 2, scope: !9167)
!9186 = distinct !DISubprogram(name: "input_dev_show_id_bustype", scope: !3, file: !3, line: 1442, type: !3928, scopeLine: 1442, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!9187 = !DILocalVariable(name: "dev", arg: 1, scope: !9186, file: !3, line: 1442, type: !3427)
!9188 = !DILocation(line: 1442, column: 1, scope: !9186)
!9189 = !DILocalVariable(name: "attr", arg: 2, scope: !9186, file: !3, line: 1442, type: !3930)
!9190 = !DILocalVariable(name: "buf", arg: 3, scope: !9186, file: !3, line: 1442, type: !452)
!9191 = !DILocalVariable(name: "input_dev", scope: !9186, file: !3, line: 1442, type: !119)
!9192 = !DILocalVariable(name: "__mptr", scope: !9193, file: !3, line: 1442, type: !111)
!9193 = distinct !DILexicalBlock(scope: !9186, file: !3, line: 1442, column: 1)
!9194 = !DILocation(line: 1442, column: 1, scope: !9193)
!9195 = !DILocation(line: 1442, column: 1, scope: !9196)
!9196 = distinct !DILexicalBlock(scope: !9193, file: !3, line: 1442, column: 1)
!9197 = distinct !DISubprogram(name: "input_dev_show_id_vendor", scope: !3, file: !3, line: 1443, type: !3928, scopeLine: 1443, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!9198 = !DILocalVariable(name: "dev", arg: 1, scope: !9197, file: !3, line: 1443, type: !3427)
!9199 = !DILocation(line: 1443, column: 1, scope: !9197)
!9200 = !DILocalVariable(name: "attr", arg: 2, scope: !9197, file: !3, line: 1443, type: !3930)
!9201 = !DILocalVariable(name: "buf", arg: 3, scope: !9197, file: !3, line: 1443, type: !452)
!9202 = !DILocalVariable(name: "input_dev", scope: !9197, file: !3, line: 1443, type: !119)
!9203 = !DILocalVariable(name: "__mptr", scope: !9204, file: !3, line: 1443, type: !111)
!9204 = distinct !DILexicalBlock(scope: !9197, file: !3, line: 1443, column: 1)
!9205 = !DILocation(line: 1443, column: 1, scope: !9204)
!9206 = !DILocation(line: 1443, column: 1, scope: !9207)
!9207 = distinct !DILexicalBlock(scope: !9204, file: !3, line: 1443, column: 1)
!9208 = distinct !DISubprogram(name: "input_dev_show_id_product", scope: !3, file: !3, line: 1444, type: !3928, scopeLine: 1444, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!9209 = !DILocalVariable(name: "dev", arg: 1, scope: !9208, file: !3, line: 1444, type: !3427)
!9210 = !DILocation(line: 1444, column: 1, scope: !9208)
!9211 = !DILocalVariable(name: "attr", arg: 2, scope: !9208, file: !3, line: 1444, type: !3930)
!9212 = !DILocalVariable(name: "buf", arg: 3, scope: !9208, file: !3, line: 1444, type: !452)
!9213 = !DILocalVariable(name: "input_dev", scope: !9208, file: !3, line: 1444, type: !119)
!9214 = !DILocalVariable(name: "__mptr", scope: !9215, file: !3, line: 1444, type: !111)
!9215 = distinct !DILexicalBlock(scope: !9208, file: !3, line: 1444, column: 1)
!9216 = !DILocation(line: 1444, column: 1, scope: !9215)
!9217 = !DILocation(line: 1444, column: 1, scope: !9218)
!9218 = distinct !DILexicalBlock(scope: !9215, file: !3, line: 1444, column: 1)
!9219 = distinct !DISubprogram(name: "input_dev_show_id_version", scope: !3, file: !3, line: 1445, type: !3928, scopeLine: 1445, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!9220 = !DILocalVariable(name: "dev", arg: 1, scope: !9219, file: !3, line: 1445, type: !3427)
!9221 = !DILocation(line: 1445, column: 1, scope: !9219)
!9222 = !DILocalVariable(name: "attr", arg: 2, scope: !9219, file: !3, line: 1445, type: !3930)
!9223 = !DILocalVariable(name: "buf", arg: 3, scope: !9219, file: !3, line: 1445, type: !452)
!9224 = !DILocalVariable(name: "input_dev", scope: !9219, file: !3, line: 1445, type: !119)
!9225 = !DILocalVariable(name: "__mptr", scope: !9226, file: !3, line: 1445, type: !111)
!9226 = distinct !DILexicalBlock(scope: !9219, file: !3, line: 1445, column: 1)
!9227 = !DILocation(line: 1445, column: 1, scope: !9226)
!9228 = !DILocation(line: 1445, column: 1, scope: !9229)
!9229 = distinct !DILexicalBlock(scope: !9226, file: !3, line: 1445, column: 1)
!9230 = distinct !DISubprogram(name: "input_dev_show_cap_ev", scope: !3, file: !3, line: 1502, type: !3928, scopeLine: 1502, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!9231 = !DILocalVariable(name: "dev", arg: 1, scope: !9230, file: !3, line: 1502, type: !3427)
!9232 = !DILocation(line: 1502, column: 1, scope: !9230)
!9233 = !DILocalVariable(name: "attr", arg: 2, scope: !9230, file: !3, line: 1502, type: !3930)
!9234 = !DILocalVariable(name: "buf", arg: 3, scope: !9230, file: !3, line: 1502, type: !452)
!9235 = !DILocalVariable(name: "input_dev", scope: !9230, file: !3, line: 1502, type: !119)
!9236 = !DILocalVariable(name: "__mptr", scope: !9237, file: !3, line: 1502, type: !111)
!9237 = distinct !DILexicalBlock(scope: !9230, file: !3, line: 1502, column: 1)
!9238 = !DILocation(line: 1502, column: 1, scope: !9237)
!9239 = !DILocation(line: 1502, column: 1, scope: !9240)
!9240 = distinct !DILexicalBlock(scope: !9237, file: !3, line: 1502, column: 1)
!9241 = !DILocalVariable(name: "len", scope: !9230, file: !3, line: 1502, type: !113)
!9242 = !DILocalVariable(name: "__UNIQUE_ID___x265", scope: !9243, file: !3, line: 1502, type: !113)
!9243 = distinct !DILexicalBlock(scope: !9230, file: !3, line: 1502, column: 1)
!9244 = !DILocation(line: 1502, column: 1, scope: !9243)
!9245 = !DILocalVariable(name: "__UNIQUE_ID___y266", scope: !9243, file: !3, line: 1502, type: !113)
!9246 = distinct !DISubprogram(name: "input_dev_show_cap_key", scope: !3, file: !3, line: 1503, type: !3928, scopeLine: 1503, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!9247 = !DILocalVariable(name: "dev", arg: 1, scope: !9246, file: !3, line: 1503, type: !3427)
!9248 = !DILocation(line: 1503, column: 1, scope: !9246)
!9249 = !DILocalVariable(name: "attr", arg: 2, scope: !9246, file: !3, line: 1503, type: !3930)
!9250 = !DILocalVariable(name: "buf", arg: 3, scope: !9246, file: !3, line: 1503, type: !452)
!9251 = !DILocalVariable(name: "input_dev", scope: !9246, file: !3, line: 1503, type: !119)
!9252 = !DILocalVariable(name: "__mptr", scope: !9253, file: !3, line: 1503, type: !111)
!9253 = distinct !DILexicalBlock(scope: !9246, file: !3, line: 1503, column: 1)
!9254 = !DILocation(line: 1503, column: 1, scope: !9253)
!9255 = !DILocation(line: 1503, column: 1, scope: !9256)
!9256 = distinct !DILexicalBlock(scope: !9253, file: !3, line: 1503, column: 1)
!9257 = !DILocalVariable(name: "len", scope: !9246, file: !3, line: 1503, type: !113)
!9258 = !DILocalVariable(name: "__UNIQUE_ID___x268", scope: !9259, file: !3, line: 1503, type: !113)
!9259 = distinct !DILexicalBlock(scope: !9246, file: !3, line: 1503, column: 1)
!9260 = !DILocation(line: 1503, column: 1, scope: !9259)
!9261 = !DILocalVariable(name: "__UNIQUE_ID___y269", scope: !9259, file: !3, line: 1503, type: !113)
!9262 = distinct !DISubprogram(name: "input_dev_show_cap_rel", scope: !3, file: !3, line: 1504, type: !3928, scopeLine: 1504, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!9263 = !DILocalVariable(name: "dev", arg: 1, scope: !9262, file: !3, line: 1504, type: !3427)
!9264 = !DILocation(line: 1504, column: 1, scope: !9262)
!9265 = !DILocalVariable(name: "attr", arg: 2, scope: !9262, file: !3, line: 1504, type: !3930)
!9266 = !DILocalVariable(name: "buf", arg: 3, scope: !9262, file: !3, line: 1504, type: !452)
!9267 = !DILocalVariable(name: "input_dev", scope: !9262, file: !3, line: 1504, type: !119)
!9268 = !DILocalVariable(name: "__mptr", scope: !9269, file: !3, line: 1504, type: !111)
!9269 = distinct !DILexicalBlock(scope: !9262, file: !3, line: 1504, column: 1)
!9270 = !DILocation(line: 1504, column: 1, scope: !9269)
!9271 = !DILocation(line: 1504, column: 1, scope: !9272)
!9272 = distinct !DILexicalBlock(scope: !9269, file: !3, line: 1504, column: 1)
!9273 = !DILocalVariable(name: "len", scope: !9262, file: !3, line: 1504, type: !113)
!9274 = !DILocalVariable(name: "__UNIQUE_ID___x271", scope: !9275, file: !3, line: 1504, type: !113)
!9275 = distinct !DILexicalBlock(scope: !9262, file: !3, line: 1504, column: 1)
!9276 = !DILocation(line: 1504, column: 1, scope: !9275)
!9277 = !DILocalVariable(name: "__UNIQUE_ID___y272", scope: !9275, file: !3, line: 1504, type: !113)
!9278 = distinct !DISubprogram(name: "input_dev_show_cap_abs", scope: !3, file: !3, line: 1505, type: !3928, scopeLine: 1505, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!9279 = !DILocalVariable(name: "dev", arg: 1, scope: !9278, file: !3, line: 1505, type: !3427)
!9280 = !DILocation(line: 1505, column: 1, scope: !9278)
!9281 = !DILocalVariable(name: "attr", arg: 2, scope: !9278, file: !3, line: 1505, type: !3930)
!9282 = !DILocalVariable(name: "buf", arg: 3, scope: !9278, file: !3, line: 1505, type: !452)
!9283 = !DILocalVariable(name: "input_dev", scope: !9278, file: !3, line: 1505, type: !119)
!9284 = !DILocalVariable(name: "__mptr", scope: !9285, file: !3, line: 1505, type: !111)
!9285 = distinct !DILexicalBlock(scope: !9278, file: !3, line: 1505, column: 1)
!9286 = !DILocation(line: 1505, column: 1, scope: !9285)
!9287 = !DILocation(line: 1505, column: 1, scope: !9288)
!9288 = distinct !DILexicalBlock(scope: !9285, file: !3, line: 1505, column: 1)
!9289 = !DILocalVariable(name: "len", scope: !9278, file: !3, line: 1505, type: !113)
!9290 = !DILocalVariable(name: "__UNIQUE_ID___x274", scope: !9291, file: !3, line: 1505, type: !113)
!9291 = distinct !DILexicalBlock(scope: !9278, file: !3, line: 1505, column: 1)
!9292 = !DILocation(line: 1505, column: 1, scope: !9291)
!9293 = !DILocalVariable(name: "__UNIQUE_ID___y275", scope: !9291, file: !3, line: 1505, type: !113)
!9294 = distinct !DISubprogram(name: "input_dev_show_cap_msc", scope: !3, file: !3, line: 1506, type: !3928, scopeLine: 1506, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!9295 = !DILocalVariable(name: "dev", arg: 1, scope: !9294, file: !3, line: 1506, type: !3427)
!9296 = !DILocation(line: 1506, column: 1, scope: !9294)
!9297 = !DILocalVariable(name: "attr", arg: 2, scope: !9294, file: !3, line: 1506, type: !3930)
!9298 = !DILocalVariable(name: "buf", arg: 3, scope: !9294, file: !3, line: 1506, type: !452)
!9299 = !DILocalVariable(name: "input_dev", scope: !9294, file: !3, line: 1506, type: !119)
!9300 = !DILocalVariable(name: "__mptr", scope: !9301, file: !3, line: 1506, type: !111)
!9301 = distinct !DILexicalBlock(scope: !9294, file: !3, line: 1506, column: 1)
!9302 = !DILocation(line: 1506, column: 1, scope: !9301)
!9303 = !DILocation(line: 1506, column: 1, scope: !9304)
!9304 = distinct !DILexicalBlock(scope: !9301, file: !3, line: 1506, column: 1)
!9305 = !DILocalVariable(name: "len", scope: !9294, file: !3, line: 1506, type: !113)
!9306 = !DILocalVariable(name: "__UNIQUE_ID___x277", scope: !9307, file: !3, line: 1506, type: !113)
!9307 = distinct !DILexicalBlock(scope: !9294, file: !3, line: 1506, column: 1)
!9308 = !DILocation(line: 1506, column: 1, scope: !9307)
!9309 = !DILocalVariable(name: "__UNIQUE_ID___y278", scope: !9307, file: !3, line: 1506, type: !113)
!9310 = distinct !DISubprogram(name: "input_dev_show_cap_led", scope: !3, file: !3, line: 1507, type: !3928, scopeLine: 1507, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!9311 = !DILocalVariable(name: "dev", arg: 1, scope: !9310, file: !3, line: 1507, type: !3427)
!9312 = !DILocation(line: 1507, column: 1, scope: !9310)
!9313 = !DILocalVariable(name: "attr", arg: 2, scope: !9310, file: !3, line: 1507, type: !3930)
!9314 = !DILocalVariable(name: "buf", arg: 3, scope: !9310, file: !3, line: 1507, type: !452)
!9315 = !DILocalVariable(name: "input_dev", scope: !9310, file: !3, line: 1507, type: !119)
!9316 = !DILocalVariable(name: "__mptr", scope: !9317, file: !3, line: 1507, type: !111)
!9317 = distinct !DILexicalBlock(scope: !9310, file: !3, line: 1507, column: 1)
!9318 = !DILocation(line: 1507, column: 1, scope: !9317)
!9319 = !DILocation(line: 1507, column: 1, scope: !9320)
!9320 = distinct !DILexicalBlock(scope: !9317, file: !3, line: 1507, column: 1)
!9321 = !DILocalVariable(name: "len", scope: !9310, file: !3, line: 1507, type: !113)
!9322 = !DILocalVariable(name: "__UNIQUE_ID___x280", scope: !9323, file: !3, line: 1507, type: !113)
!9323 = distinct !DILexicalBlock(scope: !9310, file: !3, line: 1507, column: 1)
!9324 = !DILocation(line: 1507, column: 1, scope: !9323)
!9325 = !DILocalVariable(name: "__UNIQUE_ID___y281", scope: !9323, file: !3, line: 1507, type: !113)
!9326 = distinct !DISubprogram(name: "input_dev_show_cap_snd", scope: !3, file: !3, line: 1508, type: !3928, scopeLine: 1508, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!9327 = !DILocalVariable(name: "dev", arg: 1, scope: !9326, file: !3, line: 1508, type: !3427)
!9328 = !DILocation(line: 1508, column: 1, scope: !9326)
!9329 = !DILocalVariable(name: "attr", arg: 2, scope: !9326, file: !3, line: 1508, type: !3930)
!9330 = !DILocalVariable(name: "buf", arg: 3, scope: !9326, file: !3, line: 1508, type: !452)
!9331 = !DILocalVariable(name: "input_dev", scope: !9326, file: !3, line: 1508, type: !119)
!9332 = !DILocalVariable(name: "__mptr", scope: !9333, file: !3, line: 1508, type: !111)
!9333 = distinct !DILexicalBlock(scope: !9326, file: !3, line: 1508, column: 1)
!9334 = !DILocation(line: 1508, column: 1, scope: !9333)
!9335 = !DILocation(line: 1508, column: 1, scope: !9336)
!9336 = distinct !DILexicalBlock(scope: !9333, file: !3, line: 1508, column: 1)
!9337 = !DILocalVariable(name: "len", scope: !9326, file: !3, line: 1508, type: !113)
!9338 = !DILocalVariable(name: "__UNIQUE_ID___x283", scope: !9339, file: !3, line: 1508, type: !113)
!9339 = distinct !DILexicalBlock(scope: !9326, file: !3, line: 1508, column: 1)
!9340 = !DILocation(line: 1508, column: 1, scope: !9339)
!9341 = !DILocalVariable(name: "__UNIQUE_ID___y284", scope: !9339, file: !3, line: 1508, type: !113)
!9342 = distinct !DISubprogram(name: "input_dev_show_cap_ff", scope: !3, file: !3, line: 1509, type: !3928, scopeLine: 1509, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!9343 = !DILocalVariable(name: "dev", arg: 1, scope: !9342, file: !3, line: 1509, type: !3427)
!9344 = !DILocation(line: 1509, column: 1, scope: !9342)
!9345 = !DILocalVariable(name: "attr", arg: 2, scope: !9342, file: !3, line: 1509, type: !3930)
!9346 = !DILocalVariable(name: "buf", arg: 3, scope: !9342, file: !3, line: 1509, type: !452)
!9347 = !DILocalVariable(name: "input_dev", scope: !9342, file: !3, line: 1509, type: !119)
!9348 = !DILocalVariable(name: "__mptr", scope: !9349, file: !3, line: 1509, type: !111)
!9349 = distinct !DILexicalBlock(scope: !9342, file: !3, line: 1509, column: 1)
!9350 = !DILocation(line: 1509, column: 1, scope: !9349)
!9351 = !DILocation(line: 1509, column: 1, scope: !9352)
!9352 = distinct !DILexicalBlock(scope: !9349, file: !3, line: 1509, column: 1)
!9353 = !DILocalVariable(name: "len", scope: !9342, file: !3, line: 1509, type: !113)
!9354 = !DILocalVariable(name: "__UNIQUE_ID___x286", scope: !9355, file: !3, line: 1509, type: !113)
!9355 = distinct !DILexicalBlock(scope: !9342, file: !3, line: 1509, column: 1)
!9356 = !DILocation(line: 1509, column: 1, scope: !9355)
!9357 = !DILocalVariable(name: "__UNIQUE_ID___y287", scope: !9355, file: !3, line: 1509, type: !113)
!9358 = distinct !DISubprogram(name: "input_dev_show_cap_sw", scope: !3, file: !3, line: 1510, type: !3928, scopeLine: 1510, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!9359 = !DILocalVariable(name: "dev", arg: 1, scope: !9358, file: !3, line: 1510, type: !3427)
!9360 = !DILocation(line: 1510, column: 1, scope: !9358)
!9361 = !DILocalVariable(name: "attr", arg: 2, scope: !9358, file: !3, line: 1510, type: !3930)
!9362 = !DILocalVariable(name: "buf", arg: 3, scope: !9358, file: !3, line: 1510, type: !452)
!9363 = !DILocalVariable(name: "input_dev", scope: !9358, file: !3, line: 1510, type: !119)
!9364 = !DILocalVariable(name: "__mptr", scope: !9365, file: !3, line: 1510, type: !111)
!9365 = distinct !DILexicalBlock(scope: !9358, file: !3, line: 1510, column: 1)
!9366 = !DILocation(line: 1510, column: 1, scope: !9365)
!9367 = !DILocation(line: 1510, column: 1, scope: !9368)
!9368 = distinct !DILexicalBlock(scope: !9365, file: !3, line: 1510, column: 1)
!9369 = !DILocalVariable(name: "len", scope: !9358, file: !3, line: 1510, type: !113)
!9370 = !DILocalVariable(name: "__UNIQUE_ID___x289", scope: !9371, file: !3, line: 1510, type: !113)
!9371 = distinct !DILexicalBlock(scope: !9358, file: !3, line: 1510, column: 1)
!9372 = !DILocation(line: 1510, column: 1, scope: !9371)
!9373 = !DILocalVariable(name: "__UNIQUE_ID___y290", scope: !9371, file: !3, line: 1510, type: !113)
!9374 = distinct !DISubprogram(name: "input_add_uevent_bm_var", scope: !3, file: !3, line: 1556, type: !9375, scopeLine: 1558, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!9375 = !DISubroutineType(types: !9376)
!9376 = !{!113, !3174, !115, !3863, !113}
!9377 = !DILocalVariable(name: "env", arg: 1, scope: !9374, file: !3, line: 1556, type: !3174)
!9378 = !DILocation(line: 1556, column: 60, scope: !9374)
!9379 = !DILocalVariable(name: "name", arg: 2, scope: !9374, file: !3, line: 1557, type: !115)
!9380 = !DILocation(line: 1557, column: 20, scope: !9374)
!9381 = !DILocalVariable(name: "bitmap", arg: 3, scope: !9374, file: !3, line: 1557, type: !3863)
!9382 = !DILocation(line: 1557, column: 41, scope: !9374)
!9383 = !DILocalVariable(name: "max", arg: 4, scope: !9374, file: !3, line: 1557, type: !113)
!9384 = !DILocation(line: 1557, column: 53, scope: !9374)
!9385 = !DILocalVariable(name: "len", scope: !9374, file: !3, line: 1559, type: !113)
!9386 = !DILocation(line: 1559, column: 6, scope: !9374)
!9387 = !DILocation(line: 1561, column: 21, scope: !9388)
!9388 = distinct !DILexicalBlock(scope: !9374, file: !3, line: 1561, column: 6)
!9389 = !DILocation(line: 1561, column: 32, scope: !9388)
!9390 = !DILocation(line: 1561, column: 6, scope: !9388)
!9391 = !DILocation(line: 1561, column: 6, scope: !9374)
!9392 = !DILocation(line: 1562, column: 3, scope: !9388)
!9393 = !DILocation(line: 1564, column: 28, scope: !9374)
!9394 = !DILocation(line: 1564, column: 33, scope: !9374)
!9395 = !DILocation(line: 1564, column: 37, scope: !9374)
!9396 = !DILocation(line: 1564, column: 42, scope: !9374)
!9397 = !DILocation(line: 1564, column: 49, scope: !9374)
!9398 = !DILocation(line: 1565, column: 25, scope: !9374)
!9399 = !DILocation(line: 1565, column: 30, scope: !9374)
!9400 = !DILocation(line: 1565, column: 23, scope: !9374)
!9401 = !DILocation(line: 1565, column: 6, scope: !9374)
!9402 = !DILocation(line: 1566, column: 6, scope: !9374)
!9403 = !DILocation(line: 1566, column: 14, scope: !9374)
!9404 = !DILocation(line: 1564, column: 8, scope: !9374)
!9405 = !DILocation(line: 1564, column: 6, scope: !9374)
!9406 = !DILocation(line: 1567, column: 6, scope: !9407)
!9407 = distinct !DILexicalBlock(scope: !9374, file: !3, line: 1567, column: 6)
!9408 = !DILocation(line: 1567, column: 33, scope: !9407)
!9409 = !DILocation(line: 1567, column: 38, scope: !9407)
!9410 = !DILocation(line: 1567, column: 31, scope: !9407)
!9411 = !DILocation(line: 1567, column: 10, scope: !9407)
!9412 = !DILocation(line: 1567, column: 6, scope: !9374)
!9413 = !DILocation(line: 1568, column: 3, scope: !9407)
!9414 = !DILocation(line: 1570, column: 17, scope: !9374)
!9415 = !DILocation(line: 1570, column: 2, scope: !9374)
!9416 = !DILocation(line: 1570, column: 7, scope: !9374)
!9417 = !DILocation(line: 1570, column: 14, scope: !9374)
!9418 = !DILocation(line: 1571, column: 2, scope: !9374)
!9419 = !DILocation(line: 1572, column: 1, scope: !9374)
!9420 = distinct !DISubprogram(name: "input_add_uevent_modalias_var", scope: !3, file: !3, line: 1574, type: !9421, scopeLine: 1576, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!9421 = !DISubroutineType(types: !9422)
!9422 = !{!113, !3174, !119}
!9423 = !DILocalVariable(name: "env", arg: 1, scope: !9420, file: !3, line: 1574, type: !3174)
!9424 = !DILocation(line: 1574, column: 66, scope: !9420)
!9425 = !DILocalVariable(name: "dev", arg: 2, scope: !9420, file: !3, line: 1575, type: !119)
!9426 = !DILocation(line: 1575, column: 25, scope: !9420)
!9427 = !DILocalVariable(name: "len", scope: !9420, file: !3, line: 1577, type: !113)
!9428 = !DILocation(line: 1577, column: 6, scope: !9420)
!9429 = !DILocation(line: 1579, column: 21, scope: !9430)
!9430 = distinct !DILexicalBlock(scope: !9420, file: !3, line: 1579, column: 6)
!9431 = !DILocation(line: 1579, column: 6, scope: !9430)
!9432 = !DILocation(line: 1579, column: 6, scope: !9420)
!9433 = !DILocation(line: 1580, column: 3, scope: !9430)
!9434 = !DILocation(line: 1582, column: 30, scope: !9420)
!9435 = !DILocation(line: 1582, column: 35, scope: !9420)
!9436 = !DILocation(line: 1582, column: 39, scope: !9420)
!9437 = !DILocation(line: 1582, column: 44, scope: !9420)
!9438 = !DILocation(line: 1582, column: 51, scope: !9420)
!9439 = !DILocation(line: 1583, column: 27, scope: !9420)
!9440 = !DILocation(line: 1583, column: 32, scope: !9420)
!9441 = !DILocation(line: 1583, column: 25, scope: !9420)
!9442 = !DILocation(line: 1583, column: 8, scope: !9420)
!9443 = !DILocation(line: 1584, column: 8, scope: !9420)
!9444 = !DILocation(line: 1582, column: 8, scope: !9420)
!9445 = !DILocation(line: 1582, column: 6, scope: !9420)
!9446 = !DILocation(line: 1585, column: 6, scope: !9447)
!9447 = distinct !DILexicalBlock(scope: !9420, file: !3, line: 1585, column: 6)
!9448 = !DILocation(line: 1585, column: 33, scope: !9447)
!9449 = !DILocation(line: 1585, column: 38, scope: !9447)
!9450 = !DILocation(line: 1585, column: 31, scope: !9447)
!9451 = !DILocation(line: 1585, column: 10, scope: !9447)
!9452 = !DILocation(line: 1585, column: 6, scope: !9420)
!9453 = !DILocation(line: 1586, column: 3, scope: !9447)
!9454 = !DILocation(line: 1588, column: 17, scope: !9420)
!9455 = !DILocation(line: 1588, column: 2, scope: !9420)
!9456 = !DILocation(line: 1588, column: 7, scope: !9420)
!9457 = !DILocation(line: 1588, column: 14, scope: !9420)
!9458 = !DILocation(line: 1589, column: 2, scope: !9420)
!9459 = !DILocation(line: 1590, column: 1, scope: !9420)
!9460 = distinct !DISubprogram(name: "module_put", scope: !5969, file: !5969, line: 756, type: !5970, scopeLine: 757, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!9461 = !DILocalVariable(name: "module", arg: 1, scope: !9460, file: !5969, line: 756, type: !605)
!9462 = !DILocation(line: 756, column: 46, scope: !9460)
!9463 = !DILocation(line: 758, column: 1, scope: !9460)
!9464 = distinct !DISubprogram(name: "input_dev_suspend", scope: !3, file: !3, line: 1707, type: !3459, scopeLine: 1708, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!9465 = !DILocalVariable(name: "lock", arg: 1, scope: !9466, file: !4044, line: 402, type: !4047)
!9466 = distinct !DISubprogram(name: "spin_unlock_irq", scope: !4044, file: !4044, line: 402, type: !9467, scopeLine: 403, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!9467 = !DISubroutineType(types: !9468)
!9468 = !{null, !4047}
!9469 = !DILocation(line: 402, column: 57, scope: !9466, inlinedAt: !9470)
!9470 = distinct !DILocation(line: 1722, column: 2, scope: !9464)
!9471 = !DILocalVariable(name: "lock", arg: 1, scope: !9472, file: !4044, line: 377, type: !4047)
!9472 = distinct !DISubprogram(name: "spin_lock_irq", scope: !4044, file: !4044, line: 377, type: !9467, scopeLine: 378, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!9473 = !DILocation(line: 377, column: 55, scope: !9472, inlinedAt: !9474)
!9474 = distinct !DILocation(line: 1711, column: 2, scope: !9464)
!9475 = !DILocalVariable(name: "dev", arg: 1, scope: !9464, file: !3, line: 1707, type: !3427)
!9476 = !DILocation(line: 1707, column: 45, scope: !9464)
!9477 = !DILocalVariable(name: "input_dev", scope: !9464, file: !3, line: 1709, type: !119)
!9478 = !DILocation(line: 1709, column: 20, scope: !9464)
!9479 = !DILocalVariable(name: "__mptr", scope: !9480, file: !3, line: 1709, type: !111)
!9480 = distinct !DILexicalBlock(scope: !9464, file: !3, line: 1709, column: 32)
!9481 = !DILocation(line: 1709, column: 32, scope: !9480)
!9482 = !DILocation(line: 1709, column: 32, scope: !9483)
!9483 = distinct !DILexicalBlock(scope: !9480, file: !3, line: 1709, column: 32)
!9484 = !DILocation(line: 1711, column: 17, scope: !9464)
!9485 = !DILocation(line: 1711, column: 28, scope: !9464)
!9486 = !DILocation(line: 379, column: 2, scope: !9487, inlinedAt: !9474)
!9487 = distinct !DILexicalBlock(scope: !9488, file: !4044, line: 379, column: 2)
!9488 = distinct !DILexicalBlock(scope: !9472, file: !4044, line: 379, column: 2)
!9489 = !DILocation(line: 379, column: 2, scope: !9490, inlinedAt: !9474)
!9490 = distinct !DILexicalBlock(scope: !9488, file: !4044, line: 379, column: 2)
!9491 = !{i32 -2145478771}
!9492 = !DILocation(line: 379, column: 2, scope: !9493, inlinedAt: !9474)
!9493 = distinct !DILexicalBlock(scope: !9490, file: !4044, line: 379, column: 2)
!9494 = !DILocation(line: 1717, column: 25, scope: !9464)
!9495 = !DILocation(line: 1717, column: 2, scope: !9464)
!9496 = !DILocation(line: 1720, column: 19, scope: !9464)
!9497 = !DILocation(line: 1720, column: 2, scope: !9464)
!9498 = !DILocation(line: 1722, column: 19, scope: !9464)
!9499 = !DILocation(line: 1722, column: 30, scope: !9464)
!9500 = !DILocation(line: 404, column: 2, scope: !9501, inlinedAt: !9470)
!9501 = distinct !DILexicalBlock(scope: !9502, file: !4044, line: 404, column: 2)
!9502 = distinct !DILexicalBlock(scope: !9466, file: !4044, line: 404, column: 2)
!9503 = !DILocation(line: 404, column: 2, scope: !9504, inlinedAt: !9470)
!9504 = distinct !DILexicalBlock(scope: !9502, file: !4044, line: 404, column: 2)
!9505 = !{i32 -2145477023}
!9506 = !DILocation(line: 404, column: 2, scope: !9507, inlinedAt: !9470)
!9507 = distinct !DILexicalBlock(scope: !9504, file: !4044, line: 404, column: 2)
!9508 = !DILocation(line: 1724, column: 2, scope: !9464)
!9509 = distinct !DISubprogram(name: "input_dev_resume", scope: !3, file: !3, line: 1727, type: !3459, scopeLine: 1728, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!9510 = !DILocation(line: 402, column: 57, scope: !9466, inlinedAt: !9511)
!9511 = distinct !DILocation(line: 1736, column: 2, scope: !9509)
!9512 = !DILocation(line: 377, column: 55, scope: !9472, inlinedAt: !9513)
!9513 = distinct !DILocation(line: 1731, column: 2, scope: !9509)
!9514 = !DILocalVariable(name: "dev", arg: 1, scope: !9509, file: !3, line: 1727, type: !3427)
!9515 = !DILocation(line: 1727, column: 44, scope: !9509)
!9516 = !DILocalVariable(name: "input_dev", scope: !9509, file: !3, line: 1729, type: !119)
!9517 = !DILocation(line: 1729, column: 20, scope: !9509)
!9518 = !DILocalVariable(name: "__mptr", scope: !9519, file: !3, line: 1729, type: !111)
!9519 = distinct !DILexicalBlock(scope: !9509, file: !3, line: 1729, column: 32)
!9520 = !DILocation(line: 1729, column: 32, scope: !9519)
!9521 = !DILocation(line: 1729, column: 32, scope: !9522)
!9522 = distinct !DILexicalBlock(scope: !9519, file: !3, line: 1729, column: 32)
!9523 = !DILocation(line: 1731, column: 17, scope: !9509)
!9524 = !DILocation(line: 1731, column: 28, scope: !9509)
!9525 = !DILocation(line: 379, column: 2, scope: !9487, inlinedAt: !9513)
!9526 = !DILocation(line: 379, column: 2, scope: !9490, inlinedAt: !9513)
!9527 = !DILocation(line: 379, column: 2, scope: !9493, inlinedAt: !9513)
!9528 = !DILocation(line: 1734, column: 19, scope: !9509)
!9529 = !DILocation(line: 1734, column: 2, scope: !9509)
!9530 = !DILocation(line: 1736, column: 19, scope: !9509)
!9531 = !DILocation(line: 1736, column: 30, scope: !9509)
!9532 = !DILocation(line: 404, column: 2, scope: !9501, inlinedAt: !9511)
!9533 = !DILocation(line: 404, column: 2, scope: !9504, inlinedAt: !9511)
!9534 = !DILocation(line: 404, column: 2, scope: !9507, inlinedAt: !9511)
!9535 = !DILocation(line: 1738, column: 2, scope: !9509)
!9536 = distinct !DISubprogram(name: "input_dev_freeze", scope: !3, file: !3, line: 1741, type: !3459, scopeLine: 1742, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!9537 = !DILocation(line: 402, column: 57, scope: !9466, inlinedAt: !9538)
!9538 = distinct !DILocation(line: 1753, column: 2, scope: !9536)
!9539 = !DILocation(line: 377, column: 55, scope: !9472, inlinedAt: !9540)
!9540 = distinct !DILocation(line: 1745, column: 2, scope: !9536)
!9541 = !DILocalVariable(name: "dev", arg: 1, scope: !9536, file: !3, line: 1741, type: !3427)
!9542 = !DILocation(line: 1741, column: 44, scope: !9536)
!9543 = !DILocalVariable(name: "input_dev", scope: !9536, file: !3, line: 1743, type: !119)
!9544 = !DILocation(line: 1743, column: 20, scope: !9536)
!9545 = !DILocalVariable(name: "__mptr", scope: !9546, file: !3, line: 1743, type: !111)
!9546 = distinct !DILexicalBlock(scope: !9536, file: !3, line: 1743, column: 32)
!9547 = !DILocation(line: 1743, column: 32, scope: !9546)
!9548 = !DILocation(line: 1743, column: 32, scope: !9549)
!9549 = distinct !DILexicalBlock(scope: !9546, file: !3, line: 1743, column: 32)
!9550 = !DILocation(line: 1745, column: 17, scope: !9536)
!9551 = !DILocation(line: 1745, column: 28, scope: !9536)
!9552 = !DILocation(line: 379, column: 2, scope: !9487, inlinedAt: !9540)
!9553 = !DILocation(line: 379, column: 2, scope: !9490, inlinedAt: !9540)
!9554 = !DILocation(line: 379, column: 2, scope: !9493, inlinedAt: !9540)
!9555 = !DILocation(line: 1751, column: 25, scope: !9536)
!9556 = !DILocation(line: 1751, column: 2, scope: !9536)
!9557 = !DILocation(line: 1753, column: 19, scope: !9536)
!9558 = !DILocation(line: 1753, column: 30, scope: !9536)
!9559 = !DILocation(line: 404, column: 2, scope: !9501, inlinedAt: !9538)
!9560 = !DILocation(line: 404, column: 2, scope: !9504, inlinedAt: !9538)
!9561 = !DILocation(line: 404, column: 2, scope: !9507, inlinedAt: !9538)
!9562 = !DILocation(line: 1755, column: 2, scope: !9536)
!9563 = distinct !DISubprogram(name: "input_dev_poweroff", scope: !3, file: !3, line: 1758, type: !3459, scopeLine: 1759, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!9564 = !DILocation(line: 402, column: 57, scope: !9466, inlinedAt: !9565)
!9565 = distinct !DILocation(line: 1767, column: 2, scope: !9563)
!9566 = !DILocation(line: 377, column: 55, scope: !9472, inlinedAt: !9567)
!9567 = distinct !DILocation(line: 1762, column: 2, scope: !9563)
!9568 = !DILocalVariable(name: "dev", arg: 1, scope: !9563, file: !3, line: 1758, type: !3427)
!9569 = !DILocation(line: 1758, column: 46, scope: !9563)
!9570 = !DILocalVariable(name: "input_dev", scope: !9563, file: !3, line: 1760, type: !119)
!9571 = !DILocation(line: 1760, column: 20, scope: !9563)
!9572 = !DILocalVariable(name: "__mptr", scope: !9573, file: !3, line: 1760, type: !111)
!9573 = distinct !DILexicalBlock(scope: !9563, file: !3, line: 1760, column: 32)
!9574 = !DILocation(line: 1760, column: 32, scope: !9573)
!9575 = !DILocation(line: 1760, column: 32, scope: !9576)
!9576 = distinct !DILexicalBlock(scope: !9573, file: !3, line: 1760, column: 32)
!9577 = !DILocation(line: 1762, column: 17, scope: !9563)
!9578 = !DILocation(line: 1762, column: 28, scope: !9563)
!9579 = !DILocation(line: 379, column: 2, scope: !9487, inlinedAt: !9567)
!9580 = !DILocation(line: 379, column: 2, scope: !9490, inlinedAt: !9567)
!9581 = !DILocation(line: 379, column: 2, scope: !9493, inlinedAt: !9567)
!9582 = !DILocation(line: 1765, column: 19, scope: !9563)
!9583 = !DILocation(line: 1765, column: 2, scope: !9563)
!9584 = !DILocation(line: 1767, column: 19, scope: !9563)
!9585 = !DILocation(line: 1767, column: 30, scope: !9563)
!9586 = !DILocation(line: 404, column: 2, scope: !9501, inlinedAt: !9565)
!9587 = !DILocation(line: 404, column: 2, scope: !9504, inlinedAt: !9565)
!9588 = !DILocation(line: 404, column: 2, scope: !9507, inlinedAt: !9565)
!9589 = !DILocation(line: 1769, column: 2, scope: !9563)
!9590 = distinct !DISubprogram(name: "arch_local_irq_enable", scope: !4149, file: !4149, line: 661, type: !1835, scopeLine: 662, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!9591 = !DILocalVariable(name: "__edi", scope: !9592, file: !4149, line: 663, type: !138)
!9592 = distinct !DILexicalBlock(scope: !9590, file: !4149, line: 663, column: 2)
!9593 = !DILocation(line: 663, column: 2, scope: !9592)
!9594 = !DILocalVariable(name: "__esi", scope: !9592, file: !4149, line: 663, type: !138)
!9595 = !DILocalVariable(name: "__edx", scope: !9592, file: !4149, line: 663, type: !138)
!9596 = !DILocalVariable(name: "__ecx", scope: !9592, file: !4149, line: 663, type: !138)
!9597 = !DILocalVariable(name: "__eax", scope: !9592, file: !4149, line: 663, type: !138)
!9598 = !{i32 -2145708433, i32 -2145707703, i32 -2145707469, i32 -2145707418, i32 -2145707390, i32 -2145707365, i32 -2145707681, i32 -2145707668, i32 -2145707230, i32 -2145707111, i32 -2145707576, i32 -2145707549, i32 -2145707521, i32 -2145707491}
!9599 = !DILocation(line: 664, column: 1, scope: !9590)
!9600 = distinct !DISubprogram(name: "input_is_mt_axis", scope: !3083, file: !3083, line: 95, type: !7921, scopeLine: 96, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!9601 = !DILocalVariable(name: "axis", arg: 1, scope: !9600, file: !3083, line: 95, type: !113)
!9602 = !DILocation(line: 95, column: 41, scope: !9600)
!9603 = !DILocation(line: 97, column: 9, scope: !9600)
!9604 = !DILocation(line: 97, column: 14, scope: !9600)
!9605 = !DILocation(line: 97, column: 29, scope: !9600)
!9606 = !DILocation(line: 97, column: 50, scope: !9600)
!9607 = !DILocation(line: 97, column: 32, scope: !9600)
!9608 = !DILocation(line: 97, column: 2, scope: !9600)
!9609 = distinct !DISubprogram(name: "input_fetch_keycode", scope: !3, file: !3, line: 792, type: !9610, scopeLine: 794, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!9610 = !DISubroutineType(types: !9611)
!9611 = !{!7, !119, !7}
!9612 = !DILocalVariable(name: "dev", arg: 1, scope: !9609, file: !3, line: 792, type: !119)
!9613 = !DILocation(line: 792, column: 59, scope: !9609)
!9614 = !DILocalVariable(name: "index", arg: 2, scope: !9609, file: !3, line: 793, type: !7)
!9615 = !DILocation(line: 793, column: 19, scope: !9609)
!9616 = !DILocation(line: 795, column: 10, scope: !9609)
!9617 = !DILocation(line: 795, column: 15, scope: !9609)
!9618 = !DILocation(line: 795, column: 2, scope: !9609)
!9619 = !DILocation(line: 797, column: 17, scope: !9620)
!9620 = distinct !DILexicalBlock(scope: !9609, file: !3, line: 795, column: 28)
!9621 = !DILocation(line: 797, column: 22, scope: !9620)
!9622 = !DILocation(line: 797, column: 31, scope: !9620)
!9623 = !DILocation(line: 797, column: 10, scope: !9620)
!9624 = !DILocation(line: 797, column: 3, scope: !9620)
!9625 = !DILocation(line: 800, column: 18, scope: !9620)
!9626 = !DILocation(line: 800, column: 23, scope: !9620)
!9627 = !DILocation(line: 800, column: 11, scope: !9620)
!9628 = !DILocation(line: 800, column: 32, scope: !9620)
!9629 = !DILocation(line: 800, column: 10, scope: !9620)
!9630 = !DILocation(line: 800, column: 3, scope: !9620)
!9631 = !DILocation(line: 803, column: 18, scope: !9620)
!9632 = !DILocation(line: 803, column: 23, scope: !9620)
!9633 = !DILocation(line: 803, column: 11, scope: !9620)
!9634 = !DILocation(line: 803, column: 32, scope: !9620)
!9635 = !DILocation(line: 803, column: 10, scope: !9620)
!9636 = !DILocation(line: 803, column: 3, scope: !9620)
!9637 = !DILocation(line: 805, column: 1, scope: !9609)
!9638 = distinct !DISubprogram(name: "__list_add", scope: !5951, file: !5951, line: 63, type: !9639, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!9639 = !DISubroutineType(types: !9640)
!9640 = !{null, !314, !314, !314}
!9641 = !DILocalVariable(name: "new", arg: 1, scope: !9638, file: !5951, line: 63, type: !314)
!9642 = !DILocation(line: 63, column: 49, scope: !9638)
!9643 = !DILocalVariable(name: "prev", arg: 2, scope: !9638, file: !5951, line: 64, type: !314)
!9644 = !DILocation(line: 64, column: 28, scope: !9638)
!9645 = !DILocalVariable(name: "next", arg: 3, scope: !9638, file: !5951, line: 65, type: !314)
!9646 = !DILocation(line: 65, column: 28, scope: !9638)
!9647 = !DILocation(line: 67, column: 24, scope: !9648)
!9648 = distinct !DILexicalBlock(scope: !9638, file: !5951, line: 67, column: 6)
!9649 = !DILocation(line: 67, column: 29, scope: !9648)
!9650 = !DILocation(line: 67, column: 35, scope: !9648)
!9651 = !DILocation(line: 67, column: 7, scope: !9648)
!9652 = !DILocation(line: 67, column: 6, scope: !9638)
!9653 = !DILocation(line: 68, column: 3, scope: !9648)
!9654 = !DILocation(line: 70, column: 15, scope: !9638)
!9655 = !DILocation(line: 70, column: 2, scope: !9638)
!9656 = !DILocation(line: 70, column: 8, scope: !9638)
!9657 = !DILocation(line: 70, column: 13, scope: !9638)
!9658 = !DILocation(line: 71, column: 14, scope: !9638)
!9659 = !DILocation(line: 71, column: 2, scope: !9638)
!9660 = !DILocation(line: 71, column: 7, scope: !9638)
!9661 = !DILocation(line: 71, column: 12, scope: !9638)
!9662 = !DILocation(line: 72, column: 14, scope: !9638)
!9663 = !DILocation(line: 72, column: 2, scope: !9638)
!9664 = !DILocation(line: 72, column: 7, scope: !9638)
!9665 = !DILocation(line: 72, column: 12, scope: !9638)
!9666 = !DILocation(line: 73, column: 2, scope: !9638)
!9667 = !DILocation(line: 73, column: 2, scope: !9668)
!9668 = distinct !DILexicalBlock(scope: !9638, file: !5951, line: 73, column: 2)
!9669 = !DILocation(line: 73, column: 2, scope: !9670)
!9670 = distinct !DILexicalBlock(scope: !9668, file: !5951, line: 73, column: 2)
!9671 = !DILocation(line: 73, column: 2, scope: !9672)
!9672 = distinct !DILexicalBlock(scope: !9668, file: !5951, line: 73, column: 2)
!9673 = !DILocation(line: 74, column: 1, scope: !9638)
!9674 = distinct !DISubprogram(name: "__list_add_valid", scope: !5951, file: !5951, line: 45, type: !9675, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!9675 = !DISubroutineType(types: !9676)
!9676 = !{!457, !314, !314, !314}
!9677 = !DILocalVariable(name: "new", arg: 1, scope: !9674, file: !5951, line: 45, type: !314)
!9678 = !DILocation(line: 45, column: 55, scope: !9674)
!9679 = !DILocalVariable(name: "prev", arg: 2, scope: !9674, file: !5951, line: 46, type: !314)
!9680 = !DILocation(line: 46, column: 23, scope: !9674)
!9681 = !DILocalVariable(name: "next", arg: 3, scope: !9674, file: !5951, line: 47, type: !314)
!9682 = !DILocation(line: 47, column: 23, scope: !9674)
!9683 = !DILocation(line: 49, column: 2, scope: !9674)
!9684 = distinct !DISubprogram(name: "input_match_device", scope: !3, file: !3, line: 1007, type: !9685, scopeLine: 1009, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!9685 = !DISubroutineType(types: !9686)
!9686 = !{!3816, !3790, !119}
!9687 = !DILocalVariable(name: "handler", arg: 1, scope: !9684, file: !3, line: 1007, type: !3790)
!9688 = !DILocation(line: 1007, column: 79, scope: !9684)
!9689 = !DILocalVariable(name: "dev", arg: 2, scope: !9684, file: !3, line: 1008, type: !119)
!9690 = !DILocation(line: 1008, column: 26, scope: !9684)
!9691 = !DILocalVariable(name: "id", scope: !9684, file: !3, line: 1010, type: !3816)
!9692 = !DILocation(line: 1010, column: 32, scope: !9684)
!9693 = !DILocation(line: 1012, column: 12, scope: !9694)
!9694 = distinct !DILexicalBlock(scope: !9684, file: !3, line: 1012, column: 2)
!9695 = !DILocation(line: 1012, column: 21, scope: !9694)
!9696 = !DILocation(line: 1012, column: 10, scope: !9694)
!9697 = !DILocation(line: 1012, column: 7, scope: !9694)
!9698 = !DILocation(line: 1012, column: 31, scope: !9699)
!9699 = distinct !DILexicalBlock(scope: !9694, file: !3, line: 1012, column: 2)
!9700 = !DILocation(line: 1012, column: 35, scope: !9699)
!9701 = !DILocation(line: 1012, column: 41, scope: !9699)
!9702 = !DILocation(line: 1012, column: 44, scope: !9699)
!9703 = !DILocation(line: 1012, column: 48, scope: !9699)
!9704 = !DILocation(line: 1012, column: 2, scope: !9694)
!9705 = !DILocation(line: 1013, column: 29, scope: !9706)
!9706 = distinct !DILexicalBlock(scope: !9707, file: !3, line: 1013, column: 7)
!9707 = distinct !DILexicalBlock(scope: !9699, file: !3, line: 1012, column: 67)
!9708 = !DILocation(line: 1013, column: 34, scope: !9706)
!9709 = !DILocation(line: 1013, column: 7, scope: !9706)
!9710 = !DILocation(line: 1013, column: 38, scope: !9706)
!9711 = !DILocation(line: 1014, column: 9, scope: !9706)
!9712 = !DILocation(line: 1014, column: 18, scope: !9706)
!9713 = !DILocation(line: 1014, column: 24, scope: !9706)
!9714 = !DILocation(line: 1014, column: 27, scope: !9706)
!9715 = !DILocation(line: 1014, column: 36, scope: !9706)
!9716 = !DILocation(line: 1014, column: 42, scope: !9706)
!9717 = !DILocation(line: 1014, column: 51, scope: !9706)
!9718 = !DILocation(line: 1013, column: 7, scope: !9707)
!9719 = !DILocation(line: 1015, column: 11, scope: !9720)
!9720 = distinct !DILexicalBlock(scope: !9706, file: !3, line: 1014, column: 58)
!9721 = !DILocation(line: 1015, column: 4, scope: !9720)
!9722 = !DILocation(line: 1017, column: 2, scope: !9707)
!9723 = !DILocation(line: 1012, column: 63, scope: !9699)
!9724 = !DILocation(line: 1012, column: 2, scope: !9699)
!9725 = distinct !{!9725, !9704, !9726}
!9726 = !DILocation(line: 1017, column: 2, scope: !9694)
!9727 = !DILocation(line: 1019, column: 2, scope: !9684)
!9728 = !DILocation(line: 1020, column: 1, scope: !9684)
!9729 = distinct !DISubprogram(name: "input_disconnect_device", scope: !3, file: !3, line: 724, type: !3121, scopeLine: 725, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!9730 = !DILocation(line: 402, column: 57, scope: !9466, inlinedAt: !9731)
!9731 = distinct !DILocation(line: 750, column: 2, scope: !9729)
!9732 = !DILocation(line: 377, column: 55, scope: !9472, inlinedAt: !9733)
!9733 = distinct !DILocation(line: 737, column: 2, scope: !9729)
!9734 = !DILocalVariable(name: "dev", arg: 1, scope: !9729, file: !3, line: 724, type: !119)
!9735 = !DILocation(line: 724, column: 55, scope: !9729)
!9736 = !DILocalVariable(name: "handle", scope: !9729, file: !3, line: 726, type: !107)
!9737 = !DILocation(line: 726, column: 23, scope: !9729)
!9738 = !DILocation(line: 733, column: 14, scope: !9729)
!9739 = !DILocation(line: 733, column: 19, scope: !9729)
!9740 = !DILocation(line: 733, column: 2, scope: !9729)
!9741 = !DILocation(line: 734, column: 2, scope: !9729)
!9742 = !DILocation(line: 734, column: 7, scope: !9729)
!9743 = !DILocation(line: 734, column: 18, scope: !9729)
!9744 = !DILocation(line: 735, column: 16, scope: !9729)
!9745 = !DILocation(line: 735, column: 21, scope: !9729)
!9746 = !DILocation(line: 735, column: 2, scope: !9729)
!9747 = !DILocation(line: 737, column: 17, scope: !9729)
!9748 = !DILocation(line: 737, column: 22, scope: !9729)
!9749 = !DILocation(line: 379, column: 2, scope: !9487, inlinedAt: !9733)
!9750 = !DILocation(line: 379, column: 2, scope: !9490, inlinedAt: !9733)
!9751 = !DILocation(line: 379, column: 2, scope: !9493, inlinedAt: !9733)
!9752 = !DILocation(line: 745, column: 25, scope: !9729)
!9753 = !DILocation(line: 745, column: 2, scope: !9729)
!9754 = !DILocalVariable(name: "__mptr", scope: !9755, file: !3, line: 747, type: !111)
!9755 = distinct !DILexicalBlock(scope: !9756, file: !3, line: 747, column: 2)
!9756 = distinct !DILexicalBlock(scope: !9729, file: !3, line: 747, column: 2)
!9757 = !DILocation(line: 747, column: 2, scope: !9755)
!9758 = !DILocation(line: 747, column: 2, scope: !9759)
!9759 = distinct !DILexicalBlock(scope: !9755, file: !3, line: 747, column: 2)
!9760 = !DILocation(line: 747, column: 2, scope: !9756)
!9761 = !DILocation(line: 747, column: 2, scope: !9762)
!9762 = distinct !DILexicalBlock(scope: !9756, file: !3, line: 747, column: 2)
!9763 = !DILocation(line: 748, column: 3, scope: !9762)
!9764 = !DILocation(line: 748, column: 11, scope: !9762)
!9765 = !DILocation(line: 748, column: 16, scope: !9762)
!9766 = !DILocalVariable(name: "__mptr", scope: !9767, file: !3, line: 747, type: !111)
!9767 = distinct !DILexicalBlock(scope: !9762, file: !3, line: 747, column: 2)
!9768 = !DILocation(line: 747, column: 2, scope: !9767)
!9769 = !DILocation(line: 747, column: 2, scope: !9770)
!9770 = distinct !DILexicalBlock(scope: !9767, file: !3, line: 747, column: 2)
!9771 = distinct !{!9771, !9760, !9772}
!9772 = !DILocation(line: 748, column: 18, scope: !9756)
!9773 = !DILocation(line: 750, column: 19, scope: !9729)
!9774 = !DILocation(line: 750, column: 24, scope: !9729)
!9775 = !DILocation(line: 404, column: 2, scope: !9501, inlinedAt: !9731)
!9776 = !DILocation(line: 404, column: 2, scope: !9504, inlinedAt: !9731)
!9777 = !DILocation(line: 404, column: 2, scope: !9507, inlinedAt: !9731)
!9778 = !DILocation(line: 751, column: 1, scope: !9729)
!9779 = distinct !DISubprogram(name: "__list_del_entry", scope: !5951, file: !5951, line: 130, type: !5952, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!9780 = !DILocalVariable(name: "entry", arg: 1, scope: !9779, file: !5951, line: 130, type: !314)
!9781 = !DILocation(line: 130, column: 55, scope: !9779)
!9782 = !DILocation(line: 132, column: 30, scope: !9783)
!9783 = distinct !DILexicalBlock(scope: !9779, file: !5951, line: 132, column: 6)
!9784 = !DILocation(line: 132, column: 7, scope: !9783)
!9785 = !DILocation(line: 132, column: 6, scope: !9779)
!9786 = !DILocation(line: 133, column: 3, scope: !9783)
!9787 = !DILocation(line: 135, column: 13, scope: !9779)
!9788 = !DILocation(line: 135, column: 20, scope: !9779)
!9789 = !DILocation(line: 135, column: 26, scope: !9779)
!9790 = !DILocation(line: 135, column: 33, scope: !9779)
!9791 = !DILocation(line: 135, column: 2, scope: !9779)
!9792 = !DILocation(line: 136, column: 1, scope: !9779)
!9793 = distinct !DISubprogram(name: "__list_del_entry_valid", scope: !5951, file: !5951, line: 51, type: !9794, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!9794 = !DISubroutineType(types: !9795)
!9795 = !{!457, !314}
!9796 = !DILocalVariable(name: "entry", arg: 1, scope: !9793, file: !5951, line: 51, type: !314)
!9797 = !DILocation(line: 51, column: 61, scope: !9793)
!9798 = !DILocation(line: 53, column: 2, scope: !9793)
!9799 = distinct !DISubprogram(name: "__list_del", scope: !5951, file: !5951, line: 110, type: !7003, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!9800 = !DILocalVariable(name: "prev", arg: 1, scope: !9799, file: !5951, line: 110, type: !314)
!9801 = !DILocation(line: 110, column: 50, scope: !9799)
!9802 = !DILocalVariable(name: "next", arg: 2, scope: !9799, file: !5951, line: 110, type: !314)
!9803 = !DILocation(line: 110, column: 75, scope: !9799)
!9804 = !DILocation(line: 112, column: 15, scope: !9799)
!9805 = !DILocation(line: 112, column: 2, scope: !9799)
!9806 = !DILocation(line: 112, column: 8, scope: !9799)
!9807 = !DILocation(line: 112, column: 13, scope: !9799)
!9808 = !DILocation(line: 113, column: 2, scope: !9799)
!9809 = !DILocation(line: 113, column: 2, scope: !9810)
!9810 = distinct !DILexicalBlock(scope: !9799, file: !5951, line: 113, column: 2)
!9811 = !DILocation(line: 113, column: 2, scope: !9812)
!9812 = distinct !DILexicalBlock(scope: !9810, file: !5951, line: 113, column: 2)
!9813 = !DILocation(line: 113, column: 2, scope: !9814)
!9814 = distinct !DILexicalBlock(scope: !9810, file: !5951, line: 113, column: 2)
!9815 = !DILocation(line: 114, column: 1, scope: !9799)
!9816 = distinct !DISubprogram(name: "__list_add_rcu", scope: !7383, file: !7383, line: 85, type: !9639, scopeLine: 87, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!9817 = !DILocalVariable(name: "new", arg: 1, scope: !9816, file: !7383, line: 85, type: !314)
!9818 = !DILocation(line: 85, column: 53, scope: !9816)
!9819 = !DILocalVariable(name: "prev", arg: 2, scope: !9816, file: !7383, line: 86, type: !314)
!9820 = !DILocation(line: 86, column: 21, scope: !9816)
!9821 = !DILocalVariable(name: "next", arg: 3, scope: !9816, file: !7383, line: 86, type: !314)
!9822 = !DILocation(line: 86, column: 45, scope: !9816)
!9823 = !DILocation(line: 88, column: 24, scope: !9824)
!9824 = distinct !DILexicalBlock(scope: !9816, file: !7383, line: 88, column: 6)
!9825 = !DILocation(line: 88, column: 29, scope: !9824)
!9826 = !DILocation(line: 88, column: 35, scope: !9824)
!9827 = !DILocation(line: 88, column: 7, scope: !9824)
!9828 = !DILocation(line: 88, column: 6, scope: !9816)
!9829 = !DILocation(line: 89, column: 3, scope: !9824)
!9830 = !DILocation(line: 91, column: 14, scope: !9816)
!9831 = !DILocation(line: 91, column: 2, scope: !9816)
!9832 = !DILocation(line: 91, column: 7, scope: !9816)
!9833 = !DILocation(line: 91, column: 12, scope: !9816)
!9834 = !DILocation(line: 92, column: 14, scope: !9816)
!9835 = !DILocation(line: 92, column: 2, scope: !9816)
!9836 = !DILocation(line: 92, column: 7, scope: !9816)
!9837 = !DILocation(line: 92, column: 12, scope: !9816)
!9838 = !DILocation(line: 93, column: 2, scope: !9816)
!9839 = !DILocalVariable(name: "_r_a_p__v", scope: !9840, file: !7383, line: 93, type: !3855)
!9840 = distinct !DILexicalBlock(scope: !9816, file: !7383, line: 93, column: 2)
!9841 = !DILocation(line: 93, column: 2, scope: !9840)
!9842 = !DILocation(line: 93, column: 2, scope: !9843)
!9843 = distinct !DILexicalBlock(scope: !9840, file: !7383, line: 93, column: 2)
!9844 = !DILocation(line: 93, column: 2, scope: !9845)
!9845 = distinct !DILexicalBlock(scope: !9843, file: !7383, line: 93, column: 2)
!9846 = !DILocation(line: 93, column: 2, scope: !9847)
!9847 = distinct !DILexicalBlock(scope: !9845, file: !7383, line: 93, column: 2)
!9848 = !DILocation(line: 93, column: 2, scope: !9849)
!9849 = distinct !DILexicalBlock(scope: !9845, file: !7383, line: 93, column: 2)
!9850 = !DILocation(line: 93, column: 2, scope: !9851)
!9851 = distinct !DILexicalBlock(scope: !9843, file: !7383, line: 93, column: 2)
!9852 = !DILocation(line: 93, column: 2, scope: !9853)
!9853 = distinct !DILexicalBlock(scope: !9851, file: !7383, line: 93, column: 2)
!9854 = !{i32 -2144335685}
!9855 = !DILocation(line: 93, column: 2, scope: !9856)
!9856 = distinct !DILexicalBlock(scope: !9851, file: !7383, line: 93, column: 2)
!9857 = !DILocation(line: 93, column: 2, scope: !9858)
!9858 = distinct !DILexicalBlock(scope: !9856, file: !7383, line: 93, column: 2)
!9859 = !DILocation(line: 93, column: 2, scope: !9860)
!9860 = distinct !DILexicalBlock(scope: !9856, file: !7383, line: 93, column: 2)
!9861 = !DILocation(line: 94, column: 15, scope: !9816)
!9862 = !DILocation(line: 94, column: 2, scope: !9816)
!9863 = !DILocation(line: 94, column: 8, scope: !9816)
!9864 = !DILocation(line: 94, column: 13, scope: !9816)
!9865 = !DILocation(line: 95, column: 1, scope: !9816)
!9866 = distinct !DISubprogram(name: "input_proc_init", scope: !3, file: !3, line: 1290, type: !4006, scopeLine: 1291, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!9867 = !DILocalVariable(name: "entry", scope: !9866, file: !3, line: 1292, type: !4000)
!9868 = !DILocation(line: 1292, column: 25, scope: !9866)
!9869 = !DILocation(line: 1294, column: 23, scope: !9866)
!9870 = !DILocation(line: 1294, column: 21, scope: !9866)
!9871 = !DILocation(line: 1295, column: 7, scope: !9872)
!9872 = distinct !DILexicalBlock(scope: !9866, file: !3, line: 1295, column: 6)
!9873 = !DILocation(line: 1295, column: 6, scope: !9866)
!9874 = !DILocation(line: 1296, column: 3, scope: !9872)
!9875 = !DILocation(line: 1298, column: 36, scope: !9866)
!9876 = !DILocation(line: 1298, column: 10, scope: !9866)
!9877 = !DILocation(line: 1298, column: 8, scope: !9866)
!9878 = !DILocation(line: 1300, column: 7, scope: !9879)
!9879 = distinct !DILexicalBlock(scope: !9866, file: !3, line: 1300, column: 6)
!9880 = !DILocation(line: 1300, column: 6, scope: !9866)
!9881 = !DILocation(line: 1301, column: 3, scope: !9879)
!9882 = !DILocation(line: 1303, column: 37, scope: !9866)
!9883 = !DILocation(line: 1303, column: 10, scope: !9866)
!9884 = !DILocation(line: 1303, column: 8, scope: !9866)
!9885 = !DILocation(line: 1305, column: 7, scope: !9886)
!9886 = distinct !DILexicalBlock(scope: !9866, file: !3, line: 1305, column: 6)
!9887 = !DILocation(line: 1305, column: 6, scope: !9866)
!9888 = !DILocation(line: 1306, column: 3, scope: !9886)
!9889 = !DILocation(line: 1308, column: 2, scope: !9866)
!9890 = !DILabel(scope: !9866, name: "fail2", file: !3, line: 1310)
!9891 = !DILocation(line: 1310, column: 2, scope: !9866)
!9892 = !DILocation(line: 1310, column: 38, scope: !9866)
!9893 = !DILocation(line: 1310, column: 9, scope: !9866)
!9894 = !DILabel(scope: !9866, name: "fail1", file: !3, line: 1311)
!9895 = !DILocation(line: 1311, column: 2, scope: !9866)
!9896 = !DILocation(line: 1311, column: 9, scope: !9866)
!9897 = !DILocation(line: 1312, column: 2, scope: !9866)
!9898 = !DILocation(line: 1313, column: 1, scope: !9866)
!9899 = distinct !DISubprogram(name: "input_proc_devices_open", scope: !3, file: !3, line: 1215, type: !2807, scopeLine: 1216, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!9900 = !DILocalVariable(name: "inode", arg: 1, scope: !9899, file: !3, line: 1215, type: !393)
!9901 = !DILocation(line: 1215, column: 50, scope: !9899)
!9902 = !DILocalVariable(name: "file", arg: 2, scope: !9899, file: !3, line: 1215, type: !320)
!9903 = !DILocation(line: 1215, column: 70, scope: !9899)
!9904 = !DILocation(line: 1217, column: 18, scope: !9899)
!9905 = !DILocation(line: 1217, column: 9, scope: !9899)
!9906 = !DILocation(line: 1217, column: 2, scope: !9899)
!9907 = distinct !DISubprogram(name: "input_proc_devices_poll", scope: !3, file: !3, line: 1086, type: !9908, scopeLine: 1087, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!9908 = !DISubroutineType(types: !9909)
!9909 = !{!2782, !320, !9910}
!9910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9911, size: 64)
!9911 = !DIDerivedType(tag: DW_TAG_typedef, name: "poll_table", file: !2786, line: 46, baseType: !2785)
!9912 = !DILocalVariable(name: "file", arg: 1, scope: !9907, file: !3, line: 1086, type: !320)
!9913 = !DILocation(line: 1086, column: 54, scope: !9907)
!9914 = !DILocalVariable(name: "wait", arg: 2, scope: !9907, file: !3, line: 1086, type: !9910)
!9915 = !DILocation(line: 1086, column: 72, scope: !9907)
!9916 = !DILocation(line: 1088, column: 12, scope: !9907)
!9917 = !DILocation(line: 1088, column: 44, scope: !9907)
!9918 = !DILocation(line: 1088, column: 2, scope: !9907)
!9919 = !DILocation(line: 1089, column: 6, scope: !9920)
!9920 = distinct !DILexicalBlock(scope: !9907, file: !3, line: 1089, column: 6)
!9921 = !DILocation(line: 1089, column: 12, scope: !9920)
!9922 = !DILocation(line: 1089, column: 25, scope: !9920)
!9923 = !DILocation(line: 1089, column: 22, scope: !9920)
!9924 = !DILocation(line: 1089, column: 6, scope: !9907)
!9925 = !DILocation(line: 1090, column: 21, scope: !9926)
!9926 = distinct !DILexicalBlock(scope: !9920, file: !3, line: 1089, column: 46)
!9927 = !DILocation(line: 1090, column: 3, scope: !9926)
!9928 = !DILocation(line: 1090, column: 9, scope: !9926)
!9929 = !DILocation(line: 1090, column: 19, scope: !9926)
!9930 = !DILocation(line: 1091, column: 3, scope: !9926)
!9931 = !DILocation(line: 1094, column: 2, scope: !9907)
!9932 = !DILocation(line: 1095, column: 1, scope: !9907)
!9933 = distinct !DISubprogram(name: "input_devices_seq_start", scope: !3, file: !3, line: 1105, type: !707, scopeLine: 1106, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!9934 = !DILocalVariable(name: "seq", arg: 1, scope: !9933, file: !3, line: 1105, type: !688)
!9935 = !DILocation(line: 1105, column: 55, scope: !9933)
!9936 = !DILocalVariable(name: "pos", arg: 2, scope: !9933, file: !3, line: 1105, type: !709)
!9937 = !DILocation(line: 1105, column: 68, scope: !9933)
!9938 = !DILocalVariable(name: "state", scope: !9933, file: !3, line: 1107, type: !3866)
!9939 = !DILocation(line: 1107, column: 25, scope: !9933)
!9940 = !DILocation(line: 1107, column: 59, scope: !9933)
!9941 = !DILocation(line: 1107, column: 64, scope: !9933)
!9942 = !DILocation(line: 1107, column: 33, scope: !9933)
!9943 = !DILocalVariable(name: "error", scope: !9933, file: !3, line: 1108, type: !113)
!9944 = !DILocation(line: 1108, column: 6, scope: !9933)
!9945 = !DILocation(line: 1111, column: 2, scope: !9933)
!9946 = !DILocation(line: 1111, column: 2, scope: !9947)
!9947 = distinct !DILexicalBlock(scope: !9933, file: !3, line: 1111, column: 2)
!9948 = !DILocation(line: 1113, column: 10, scope: !9933)
!9949 = !DILocation(line: 1113, column: 8, scope: !9933)
!9950 = !DILocation(line: 1114, column: 6, scope: !9951)
!9951 = distinct !DILexicalBlock(scope: !9933, file: !3, line: 1114, column: 6)
!9952 = !DILocation(line: 1114, column: 6, scope: !9933)
!9953 = !DILocation(line: 1115, column: 3, scope: !9954)
!9954 = distinct !DILexicalBlock(scope: !9951, file: !3, line: 1114, column: 13)
!9955 = !DILocation(line: 1115, column: 10, scope: !9954)
!9956 = !DILocation(line: 1115, column: 25, scope: !9954)
!9957 = !DILocation(line: 1116, column: 18, scope: !9954)
!9958 = !DILocation(line: 1116, column: 10, scope: !9954)
!9959 = !DILocation(line: 1116, column: 3, scope: !9954)
!9960 = !DILocation(line: 1119, column: 2, scope: !9933)
!9961 = !DILocation(line: 1119, column: 9, scope: !9933)
!9962 = !DILocation(line: 1119, column: 24, scope: !9933)
!9963 = !DILocation(line: 1121, column: 42, scope: !9933)
!9964 = !DILocation(line: 1121, column: 41, scope: !9933)
!9965 = !DILocation(line: 1121, column: 9, scope: !9933)
!9966 = !DILocation(line: 1121, column: 2, scope: !9933)
!9967 = !DILocation(line: 1122, column: 1, scope: !9933)
!9968 = distinct !DISubprogram(name: "input_seq_stop", scope: !3, file: !3, line: 1129, type: !712, scopeLine: 1130, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!9969 = !DILocalVariable(name: "seq", arg: 1, scope: !9968, file: !3, line: 1129, type: !688)
!9970 = !DILocation(line: 1129, column: 45, scope: !9968)
!9971 = !DILocalVariable(name: "v", arg: 2, scope: !9968, file: !3, line: 1129, type: !111)
!9972 = !DILocation(line: 1129, column: 56, scope: !9968)
!9973 = !DILocalVariable(name: "state", scope: !9968, file: !3, line: 1131, type: !3866)
!9974 = !DILocation(line: 1131, column: 25, scope: !9968)
!9975 = !DILocation(line: 1131, column: 59, scope: !9968)
!9976 = !DILocation(line: 1131, column: 64, scope: !9968)
!9977 = !DILocation(line: 1131, column: 33, scope: !9968)
!9978 = !DILocation(line: 1133, column: 6, scope: !9979)
!9979 = distinct !DILexicalBlock(scope: !9968, file: !3, line: 1133, column: 6)
!9980 = !DILocation(line: 1133, column: 13, scope: !9979)
!9981 = !DILocation(line: 1133, column: 6, scope: !9968)
!9982 = !DILocation(line: 1134, column: 3, scope: !9979)
!9983 = !DILocation(line: 1135, column: 1, scope: !9968)
!9984 = distinct !DISubprogram(name: "input_devices_seq_next", scope: !3, file: !3, line: 1124, type: !716, scopeLine: 1125, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!9985 = !DILocalVariable(name: "seq", arg: 1, scope: !9984, file: !3, line: 1124, type: !688)
!9986 = !DILocation(line: 1124, column: 54, scope: !9984)
!9987 = !DILocalVariable(name: "v", arg: 2, scope: !9984, file: !3, line: 1124, type: !111)
!9988 = !DILocation(line: 1124, column: 65, scope: !9984)
!9989 = !DILocalVariable(name: "pos", arg: 3, scope: !9984, file: !3, line: 1124, type: !709)
!9990 = !DILocation(line: 1124, column: 76, scope: !9984)
!9991 = !DILocation(line: 1126, column: 23, scope: !9984)
!9992 = !DILocation(line: 1126, column: 43, scope: !9984)
!9993 = !DILocation(line: 1126, column: 9, scope: !9984)
!9994 = !DILocation(line: 1126, column: 2, scope: !9984)
!9995 = distinct !DISubprogram(name: "input_devices_seq_show", scope: !3, file: !3, line: 1163, type: !720, scopeLine: 1164, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!9996 = !DILocalVariable(name: "seq", arg: 1, scope: !9995, file: !3, line: 1163, type: !688)
!9997 = !DILocation(line: 1163, column: 52, scope: !9995)
!9998 = !DILocalVariable(name: "v", arg: 2, scope: !9995, file: !3, line: 1163, type: !111)
!9999 = !DILocation(line: 1163, column: 63, scope: !9995)
!10000 = !DILocalVariable(name: "dev", scope: !9995, file: !3, line: 1165, type: !119)
!10001 = !DILocation(line: 1165, column: 20, scope: !9995)
!10002 = !DILocalVariable(name: "__mptr", scope: !10003, file: !3, line: 1165, type: !111)
!10003 = distinct !DILexicalBlock(scope: !9995, file: !3, line: 1165, column: 26)
!10004 = !DILocation(line: 1165, column: 26, scope: !10003)
!10005 = !DILocation(line: 1165, column: 26, scope: !10006)
!10006 = distinct !DILexicalBlock(scope: !10003, file: !3, line: 1165, column: 26)
!10007 = !DILocalVariable(name: "path", scope: !9995, file: !3, line: 1166, type: !115)
!10008 = !DILocation(line: 1166, column: 14, scope: !9995)
!10009 = !DILocation(line: 1166, column: 39, scope: !9995)
!10010 = !DILocation(line: 1166, column: 44, scope: !9995)
!10011 = !DILocation(line: 1166, column: 48, scope: !9995)
!10012 = !DILocation(line: 1166, column: 21, scope: !9995)
!10013 = !DILocalVariable(name: "handle", scope: !9995, file: !3, line: 1167, type: !107)
!10014 = !DILocation(line: 1167, column: 23, scope: !9995)
!10015 = !DILocation(line: 1169, column: 13, scope: !9995)
!10016 = !DILocation(line: 1170, column: 6, scope: !9995)
!10017 = !DILocation(line: 1170, column: 11, scope: !9995)
!10018 = !DILocation(line: 1170, column: 14, scope: !9995)
!10019 = !DILocation(line: 1170, column: 23, scope: !9995)
!10020 = !DILocation(line: 1170, column: 28, scope: !9995)
!10021 = !DILocation(line: 1170, column: 31, scope: !9995)
!10022 = !DILocation(line: 1170, column: 39, scope: !9995)
!10023 = !DILocation(line: 1170, column: 44, scope: !9995)
!10024 = !DILocation(line: 1170, column: 47, scope: !9995)
!10025 = !DILocation(line: 1170, column: 56, scope: !9995)
!10026 = !DILocation(line: 1170, column: 61, scope: !9995)
!10027 = !DILocation(line: 1170, column: 64, scope: !9995)
!10028 = !DILocation(line: 1169, column: 2, scope: !9995)
!10029 = !DILocation(line: 1172, column: 13, scope: !9995)
!10030 = !DILocation(line: 1172, column: 38, scope: !9995)
!10031 = !DILocation(line: 1172, column: 43, scope: !9995)
!10032 = !DILocation(line: 1172, column: 50, scope: !9995)
!10033 = !DILocation(line: 1172, column: 55, scope: !9995)
!10034 = !DILocation(line: 1172, column: 2, scope: !9995)
!10035 = !DILocation(line: 1173, column: 13, scope: !9995)
!10036 = !DILocation(line: 1173, column: 34, scope: !9995)
!10037 = !DILocation(line: 1173, column: 39, scope: !9995)
!10038 = !DILocation(line: 1173, column: 46, scope: !9995)
!10039 = !DILocation(line: 1173, column: 51, scope: !9995)
!10040 = !DILocation(line: 1173, column: 2, scope: !9995)
!10041 = !DILocation(line: 1174, column: 13, scope: !9995)
!10042 = !DILocation(line: 1174, column: 35, scope: !9995)
!10043 = !DILocation(line: 1174, column: 42, scope: !9995)
!10044 = !DILocation(line: 1174, column: 2, scope: !9995)
!10045 = !DILocation(line: 1175, column: 13, scope: !9995)
!10046 = !DILocation(line: 1175, column: 34, scope: !9995)
!10047 = !DILocation(line: 1175, column: 39, scope: !9995)
!10048 = !DILocation(line: 1175, column: 46, scope: !9995)
!10049 = !DILocation(line: 1175, column: 51, scope: !9995)
!10050 = !DILocation(line: 1175, column: 2, scope: !9995)
!10051 = !DILocation(line: 1176, column: 11, scope: !9995)
!10052 = !DILocation(line: 1176, column: 2, scope: !9995)
!10053 = !DILocalVariable(name: "__mptr", scope: !10054, file: !3, line: 1178, type: !111)
!10054 = distinct !DILexicalBlock(scope: !10055, file: !3, line: 1178, column: 2)
!10055 = distinct !DILexicalBlock(scope: !9995, file: !3, line: 1178, column: 2)
!10056 = !DILocation(line: 1178, column: 2, scope: !10054)
!10057 = !DILocation(line: 1178, column: 2, scope: !10058)
!10058 = distinct !DILexicalBlock(scope: !10054, file: !3, line: 1178, column: 2)
!10059 = !DILocation(line: 1178, column: 2, scope: !10055)
!10060 = !DILocation(line: 1178, column: 2, scope: !10061)
!10061 = distinct !DILexicalBlock(scope: !10055, file: !3, line: 1178, column: 2)
!10062 = !DILocation(line: 1179, column: 14, scope: !10061)
!10063 = !DILocation(line: 1179, column: 26, scope: !10061)
!10064 = !DILocation(line: 1179, column: 34, scope: !10061)
!10065 = !DILocation(line: 1179, column: 3, scope: !10061)
!10066 = !DILocalVariable(name: "__mptr", scope: !10067, file: !3, line: 1178, type: !111)
!10067 = distinct !DILexicalBlock(scope: !10061, file: !3, line: 1178, column: 2)
!10068 = !DILocation(line: 1178, column: 2, scope: !10067)
!10069 = !DILocation(line: 1178, column: 2, scope: !10070)
!10070 = distinct !DILexicalBlock(scope: !10067, file: !3, line: 1178, column: 2)
!10071 = distinct !{!10071, !10059, !10072}
!10072 = !DILocation(line: 1179, column: 38, scope: !10055)
!10073 = !DILocation(line: 1180, column: 11, scope: !9995)
!10074 = !DILocation(line: 1180, column: 2, scope: !9995)
!10075 = !DILocation(line: 1182, column: 25, scope: !9995)
!10076 = !DILocation(line: 1182, column: 38, scope: !9995)
!10077 = !DILocation(line: 1182, column: 43, scope: !9995)
!10078 = !DILocation(line: 1182, column: 2, scope: !9995)
!10079 = !DILocation(line: 1184, column: 25, scope: !9995)
!10080 = !DILocation(line: 1184, column: 36, scope: !9995)
!10081 = !DILocation(line: 1184, column: 41, scope: !9995)
!10082 = !DILocation(line: 1184, column: 2, scope: !9995)
!10083 = !DILocation(line: 1185, column: 23, scope: !10084)
!10084 = distinct !DILexicalBlock(scope: !9995, file: !3, line: 1185, column: 6)
!10085 = !DILocation(line: 1185, column: 28, scope: !10084)
!10086 = !DILocation(line: 1185, column: 6, scope: !10084)
!10087 = !DILocation(line: 1185, column: 6, scope: !9995)
!10088 = !DILocation(line: 1186, column: 26, scope: !10084)
!10089 = !DILocation(line: 1186, column: 38, scope: !10084)
!10090 = !DILocation(line: 1186, column: 43, scope: !10084)
!10091 = !DILocation(line: 1186, column: 3, scope: !10084)
!10092 = !DILocation(line: 1187, column: 23, scope: !10093)
!10093 = distinct !DILexicalBlock(scope: !9995, file: !3, line: 1187, column: 6)
!10094 = !DILocation(line: 1187, column: 28, scope: !10093)
!10095 = !DILocation(line: 1187, column: 6, scope: !10093)
!10096 = !DILocation(line: 1187, column: 6, scope: !9995)
!10097 = !DILocation(line: 1188, column: 26, scope: !10093)
!10098 = !DILocation(line: 1188, column: 38, scope: !10093)
!10099 = !DILocation(line: 1188, column: 43, scope: !10093)
!10100 = !DILocation(line: 1188, column: 3, scope: !10093)
!10101 = !DILocation(line: 1189, column: 23, scope: !10102)
!10102 = distinct !DILexicalBlock(scope: !9995, file: !3, line: 1189, column: 6)
!10103 = !DILocation(line: 1189, column: 28, scope: !10102)
!10104 = !DILocation(line: 1189, column: 6, scope: !10102)
!10105 = !DILocation(line: 1189, column: 6, scope: !9995)
!10106 = !DILocation(line: 1190, column: 26, scope: !10102)
!10107 = !DILocation(line: 1190, column: 38, scope: !10102)
!10108 = !DILocation(line: 1190, column: 43, scope: !10102)
!10109 = !DILocation(line: 1190, column: 3, scope: !10102)
!10110 = !DILocation(line: 1191, column: 23, scope: !10111)
!10111 = distinct !DILexicalBlock(scope: !9995, file: !3, line: 1191, column: 6)
!10112 = !DILocation(line: 1191, column: 28, scope: !10111)
!10113 = !DILocation(line: 1191, column: 6, scope: !10111)
!10114 = !DILocation(line: 1191, column: 6, scope: !9995)
!10115 = !DILocation(line: 1192, column: 26, scope: !10111)
!10116 = !DILocation(line: 1192, column: 38, scope: !10111)
!10117 = !DILocation(line: 1192, column: 43, scope: !10111)
!10118 = !DILocation(line: 1192, column: 3, scope: !10111)
!10119 = !DILocation(line: 1193, column: 23, scope: !10120)
!10120 = distinct !DILexicalBlock(scope: !9995, file: !3, line: 1193, column: 6)
!10121 = !DILocation(line: 1193, column: 28, scope: !10120)
!10122 = !DILocation(line: 1193, column: 6, scope: !10120)
!10123 = !DILocation(line: 1193, column: 6, scope: !9995)
!10124 = !DILocation(line: 1194, column: 26, scope: !10120)
!10125 = !DILocation(line: 1194, column: 38, scope: !10120)
!10126 = !DILocation(line: 1194, column: 43, scope: !10120)
!10127 = !DILocation(line: 1194, column: 3, scope: !10120)
!10128 = !DILocation(line: 1195, column: 23, scope: !10129)
!10129 = distinct !DILexicalBlock(scope: !9995, file: !3, line: 1195, column: 6)
!10130 = !DILocation(line: 1195, column: 28, scope: !10129)
!10131 = !DILocation(line: 1195, column: 6, scope: !10129)
!10132 = !DILocation(line: 1195, column: 6, scope: !9995)
!10133 = !DILocation(line: 1196, column: 26, scope: !10129)
!10134 = !DILocation(line: 1196, column: 38, scope: !10129)
!10135 = !DILocation(line: 1196, column: 43, scope: !10129)
!10136 = !DILocation(line: 1196, column: 3, scope: !10129)
!10137 = !DILocation(line: 1197, column: 22, scope: !10138)
!10138 = distinct !DILexicalBlock(scope: !9995, file: !3, line: 1197, column: 6)
!10139 = !DILocation(line: 1197, column: 27, scope: !10138)
!10140 = !DILocation(line: 1197, column: 6, scope: !10138)
!10141 = !DILocation(line: 1197, column: 6, scope: !9995)
!10142 = !DILocation(line: 1198, column: 26, scope: !10138)
!10143 = !DILocation(line: 1198, column: 37, scope: !10138)
!10144 = !DILocation(line: 1198, column: 42, scope: !10138)
!10145 = !DILocation(line: 1198, column: 3, scope: !10138)
!10146 = !DILocation(line: 1199, column: 22, scope: !10147)
!10147 = distinct !DILexicalBlock(scope: !9995, file: !3, line: 1199, column: 6)
!10148 = !DILocation(line: 1199, column: 27, scope: !10147)
!10149 = !DILocation(line: 1199, column: 6, scope: !10147)
!10150 = !DILocation(line: 1199, column: 6, scope: !9995)
!10151 = !DILocation(line: 1200, column: 26, scope: !10147)
!10152 = !DILocation(line: 1200, column: 37, scope: !10147)
!10153 = !DILocation(line: 1200, column: 42, scope: !10147)
!10154 = !DILocation(line: 1200, column: 3, scope: !10147)
!10155 = !DILocation(line: 1202, column: 11, scope: !9995)
!10156 = !DILocation(line: 1202, column: 2, scope: !9995)
!10157 = !DILocation(line: 1204, column: 8, scope: !9995)
!10158 = !DILocation(line: 1204, column: 2, scope: !9995)
!10159 = !DILocation(line: 1205, column: 2, scope: !9995)
!10160 = distinct !DISubprogram(name: "ERR_PTR", scope: !10161, file: !10161, line: 24, type: !10162, scopeLine: 25, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!10161 = !DIFile(filename: "./include/linux/err.h", directory: "/home/lizy2001/genbc/linux")
!10162 = !DISubroutineType(types: !10163)
!10163 = !{!111, !507}
!10164 = !DILocalVariable(name: "error", arg: 1, scope: !10160, file: !10161, line: 24, type: !507)
!10165 = !DILocation(line: 24, column: 48, scope: !10160)
!10166 = !DILocation(line: 26, column: 18, scope: !10160)
!10167 = !DILocation(line: 26, column: 9, scope: !10160)
!10168 = !DILocation(line: 26, column: 2, scope: !10160)
!10169 = distinct !DISubprogram(name: "input_seq_print_bitmap", scope: !3, file: !3, line: 1137, type: !10170, scopeLine: 1139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!10170 = !DISubroutineType(types: !10171)
!10171 = !{null, !688, !115, !3863, !113}
!10172 = !DILocalVariable(name: "seq", arg: 1, scope: !10169, file: !3, line: 1137, type: !688)
!10173 = !DILocation(line: 1137, column: 53, scope: !10169)
!10174 = !DILocalVariable(name: "name", arg: 2, scope: !10169, file: !3, line: 1137, type: !115)
!10175 = !DILocation(line: 1137, column: 70, scope: !10169)
!10176 = !DILocalVariable(name: "bitmap", arg: 3, scope: !10169, file: !3, line: 1138, type: !3863)
!10177 = !DILocation(line: 1138, column: 23, scope: !10169)
!10178 = !DILocalVariable(name: "max", arg: 4, scope: !10169, file: !3, line: 1138, type: !113)
!10179 = !DILocation(line: 1138, column: 35, scope: !10169)
!10180 = !DILocalVariable(name: "i", scope: !10169, file: !3, line: 1140, type: !113)
!10181 = !DILocation(line: 1140, column: 6, scope: !10169)
!10182 = !DILocalVariable(name: "skip_empty", scope: !10169, file: !3, line: 1141, type: !457)
!10183 = !DILocation(line: 1141, column: 7, scope: !10169)
!10184 = !DILocalVariable(name: "buf", scope: !10169, file: !3, line: 1142, type: !10185)
!10185 = !DICompositeType(tag: DW_TAG_array_type, baseType: !117, size: 144, elements: !10186)
!10186 = !{!10187}
!10187 = !DISubrange(count: 18)
!10188 = !DILocation(line: 1142, column: 7, scope: !10169)
!10189 = !DILocation(line: 1144, column: 13, scope: !10169)
!10190 = !DILocation(line: 1144, column: 28, scope: !10169)
!10191 = !DILocation(line: 1144, column: 2, scope: !10169)
!10192 = !DILocation(line: 1146, column: 11, scope: !10193)
!10193 = distinct !DILexicalBlock(scope: !10169, file: !3, line: 1146, column: 2)
!10194 = !DILocation(line: 1146, column: 30, scope: !10193)
!10195 = !DILocation(line: 1146, column: 9, scope: !10193)
!10196 = !DILocation(line: 1146, column: 7, scope: !10193)
!10197 = !DILocation(line: 1146, column: 35, scope: !10198)
!10198 = distinct !DILexicalBlock(scope: !10193, file: !3, line: 1146, column: 2)
!10199 = !DILocation(line: 1146, column: 37, scope: !10198)
!10200 = !DILocation(line: 1146, column: 2, scope: !10193)
!10201 = !DILocation(line: 1147, column: 28, scope: !10202)
!10202 = distinct !DILexicalBlock(scope: !10203, file: !3, line: 1147, column: 7)
!10203 = distinct !DILexicalBlock(scope: !10198, file: !3, line: 1146, column: 48)
!10204 = !DILocation(line: 1148, column: 7, scope: !10202)
!10205 = !DILocation(line: 1148, column: 14, scope: !10202)
!10206 = !DILocation(line: 1148, column: 18, scope: !10202)
!10207 = !DILocation(line: 1147, column: 7, scope: !10202)
!10208 = !DILocation(line: 1147, column: 7, scope: !10203)
!10209 = !DILocation(line: 1149, column: 15, scope: !10210)
!10210 = distinct !DILexicalBlock(scope: !10202, file: !3, line: 1148, column: 31)
!10211 = !DILocation(line: 1150, column: 15, scope: !10210)
!10212 = !DILocation(line: 1150, column: 28, scope: !10210)
!10213 = !DILocation(line: 1150, column: 33, scope: !10210)
!10214 = !DILocation(line: 1150, column: 35, scope: !10210)
!10215 = !DILocation(line: 1150, column: 4, scope: !10210)
!10216 = !DILocation(line: 1151, column: 3, scope: !10210)
!10217 = !DILocation(line: 1152, column: 2, scope: !10203)
!10218 = !DILocation(line: 1146, column: 44, scope: !10198)
!10219 = !DILocation(line: 1146, column: 2, scope: !10198)
!10220 = distinct !{!10220, !10200, !10221}
!10221 = !DILocation(line: 1152, column: 2, scope: !10193)
!10222 = !DILocation(line: 1157, column: 6, scope: !10223)
!10223 = distinct !DILexicalBlock(scope: !10169, file: !3, line: 1157, column: 6)
!10224 = !DILocation(line: 1157, column: 6, scope: !10169)
!10225 = !DILocation(line: 1158, column: 12, scope: !10223)
!10226 = !DILocation(line: 1158, column: 3, scope: !10223)
!10227 = !DILocation(line: 1160, column: 11, scope: !10169)
!10228 = !DILocation(line: 1160, column: 2, scope: !10169)
!10229 = !DILocation(line: 1161, column: 1, scope: !10169)
!10230 = distinct !DISubprogram(name: "poll_wait", scope: !2786, file: !2786, line: 48, type: !10231, scopeLine: 49, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!10231 = !DISubroutineType(types: !10232)
!10232 = !{null, !320, !2793, !9910}
!10233 = !DILocalVariable(name: "filp", arg: 1, scope: !10230, file: !2786, line: 48, type: !320)
!10234 = !DILocation(line: 48, column: 44, scope: !10230)
!10235 = !DILocalVariable(name: "wait_address", arg: 2, scope: !10230, file: !2786, line: 48, type: !2793)
!10236 = !DILocation(line: 48, column: 70, scope: !10230)
!10237 = !DILocalVariable(name: "p", arg: 3, scope: !10230, file: !2786, line: 48, type: !9910)
!10238 = !DILocation(line: 48, column: 96, scope: !10230)
!10239 = !DILocation(line: 50, column: 6, scope: !10240)
!10240 = distinct !DILexicalBlock(scope: !10230, file: !2786, line: 50, column: 6)
!10241 = !DILocation(line: 50, column: 8, scope: !10240)
!10242 = !DILocation(line: 50, column: 11, scope: !10240)
!10243 = !DILocation(line: 50, column: 14, scope: !10240)
!10244 = !DILocation(line: 50, column: 21, scope: !10240)
!10245 = !DILocation(line: 50, column: 24, scope: !10240)
!10246 = !DILocation(line: 50, column: 6, scope: !10230)
!10247 = !DILocation(line: 51, column: 3, scope: !10240)
!10248 = !DILocation(line: 51, column: 6, scope: !10240)
!10249 = !DILocation(line: 51, column: 13, scope: !10240)
!10250 = !DILocation(line: 51, column: 19, scope: !10240)
!10251 = !DILocation(line: 51, column: 33, scope: !10240)
!10252 = !DILocation(line: 52, column: 1, scope: !10230)
!10253 = distinct !DISubprogram(name: "input_proc_handlers_open", scope: !3, file: !3, line: 1278, type: !2807, scopeLine: 1279, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!10254 = !DILocalVariable(name: "inode", arg: 1, scope: !10253, file: !3, line: 1278, type: !393)
!10255 = !DILocation(line: 1278, column: 51, scope: !10253)
!10256 = !DILocalVariable(name: "file", arg: 2, scope: !10253, file: !3, line: 1278, type: !320)
!10257 = !DILocation(line: 1278, column: 71, scope: !10253)
!10258 = !DILocation(line: 1280, column: 18, scope: !10253)
!10259 = !DILocation(line: 1280, column: 9, scope: !10253)
!10260 = !DILocation(line: 1280, column: 2, scope: !10253)
!10261 = distinct !DISubprogram(name: "input_handlers_seq_start", scope: !3, file: !3, line: 1228, type: !707, scopeLine: 1229, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!10262 = !DILocalVariable(name: "seq", arg: 1, scope: !10261, file: !3, line: 1228, type: !688)
!10263 = !DILocation(line: 1228, column: 56, scope: !10261)
!10264 = !DILocalVariable(name: "pos", arg: 2, scope: !10261, file: !3, line: 1228, type: !709)
!10265 = !DILocation(line: 1228, column: 69, scope: !10261)
!10266 = !DILocalVariable(name: "state", scope: !10261, file: !3, line: 1230, type: !3866)
!10267 = !DILocation(line: 1230, column: 25, scope: !10261)
!10268 = !DILocation(line: 1230, column: 59, scope: !10261)
!10269 = !DILocation(line: 1230, column: 64, scope: !10261)
!10270 = !DILocation(line: 1230, column: 33, scope: !10261)
!10271 = !DILocalVariable(name: "error", scope: !10261, file: !3, line: 1231, type: !113)
!10272 = !DILocation(line: 1231, column: 6, scope: !10261)
!10273 = !DILocation(line: 1234, column: 2, scope: !10261)
!10274 = !DILocation(line: 1234, column: 2, scope: !10275)
!10275 = distinct !DILexicalBlock(scope: !10261, file: !3, line: 1234, column: 2)
!10276 = !DILocation(line: 1236, column: 10, scope: !10261)
!10277 = !DILocation(line: 1236, column: 8, scope: !10261)
!10278 = !DILocation(line: 1237, column: 6, scope: !10279)
!10279 = distinct !DILexicalBlock(scope: !10261, file: !3, line: 1237, column: 6)
!10280 = !DILocation(line: 1237, column: 6, scope: !10261)
!10281 = !DILocation(line: 1238, column: 3, scope: !10282)
!10282 = distinct !DILexicalBlock(scope: !10279, file: !3, line: 1237, column: 13)
!10283 = !DILocation(line: 1238, column: 10, scope: !10282)
!10284 = !DILocation(line: 1238, column: 25, scope: !10282)
!10285 = !DILocation(line: 1239, column: 18, scope: !10282)
!10286 = !DILocation(line: 1239, column: 10, scope: !10282)
!10287 = !DILocation(line: 1239, column: 3, scope: !10282)
!10288 = !DILocation(line: 1242, column: 2, scope: !10261)
!10289 = !DILocation(line: 1242, column: 9, scope: !10261)
!10290 = !DILocation(line: 1242, column: 24, scope: !10261)
!10291 = !DILocation(line: 1243, column: 16, scope: !10261)
!10292 = !DILocation(line: 1243, column: 15, scope: !10261)
!10293 = !DILocation(line: 1243, column: 2, scope: !10261)
!10294 = !DILocation(line: 1243, column: 9, scope: !10261)
!10295 = !DILocation(line: 1243, column: 13, scope: !10261)
!10296 = !DILocation(line: 1245, column: 46, scope: !10261)
!10297 = !DILocation(line: 1245, column: 45, scope: !10261)
!10298 = !DILocation(line: 1245, column: 9, scope: !10261)
!10299 = !DILocation(line: 1245, column: 2, scope: !10261)
!10300 = !DILocation(line: 1246, column: 1, scope: !10261)
!10301 = distinct !DISubprogram(name: "input_handlers_seq_next", scope: !3, file: !3, line: 1248, type: !716, scopeLine: 1249, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!10302 = !DILocalVariable(name: "seq", arg: 1, scope: !10301, file: !3, line: 1248, type: !688)
!10303 = !DILocation(line: 1248, column: 55, scope: !10301)
!10304 = !DILocalVariable(name: "v", arg: 2, scope: !10301, file: !3, line: 1248, type: !111)
!10305 = !DILocation(line: 1248, column: 66, scope: !10301)
!10306 = !DILocalVariable(name: "pos", arg: 3, scope: !10301, file: !3, line: 1248, type: !709)
!10307 = !DILocation(line: 1248, column: 77, scope: !10301)
!10308 = !DILocalVariable(name: "state", scope: !10301, file: !3, line: 1250, type: !3866)
!10309 = !DILocation(line: 1250, column: 25, scope: !10301)
!10310 = !DILocation(line: 1250, column: 59, scope: !10301)
!10311 = !DILocation(line: 1250, column: 64, scope: !10301)
!10312 = !DILocation(line: 1250, column: 33, scope: !10301)
!10313 = !DILocation(line: 1252, column: 16, scope: !10301)
!10314 = !DILocation(line: 1252, column: 15, scope: !10301)
!10315 = !DILocation(line: 1252, column: 20, scope: !10301)
!10316 = !DILocation(line: 1252, column: 2, scope: !10301)
!10317 = !DILocation(line: 1252, column: 9, scope: !10301)
!10318 = !DILocation(line: 1252, column: 13, scope: !10301)
!10319 = !DILocation(line: 1253, column: 23, scope: !10301)
!10320 = !DILocation(line: 1253, column: 47, scope: !10301)
!10321 = !DILocation(line: 1253, column: 9, scope: !10301)
!10322 = !DILocation(line: 1253, column: 2, scope: !10301)
!10323 = distinct !DISubprogram(name: "input_handlers_seq_show", scope: !3, file: !3, line: 1256, type: !720, scopeLine: 1257, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !309)
!10324 = !DILocalVariable(name: "seq", arg: 1, scope: !10323, file: !3, line: 1256, type: !688)
!10325 = !DILocation(line: 1256, column: 53, scope: !10323)
!10326 = !DILocalVariable(name: "v", arg: 2, scope: !10323, file: !3, line: 1256, type: !111)
!10327 = !DILocation(line: 1256, column: 64, scope: !10323)
!10328 = !DILocalVariable(name: "handler", scope: !10323, file: !3, line: 1258, type: !3790)
!10329 = !DILocation(line: 1258, column: 24, scope: !10323)
!10330 = !DILocalVariable(name: "__mptr", scope: !10331, file: !3, line: 1258, type: !111)
!10331 = distinct !DILexicalBlock(scope: !10323, file: !3, line: 1258, column: 34)
!10332 = !DILocation(line: 1258, column: 34, scope: !10331)
!10333 = !DILocation(line: 1258, column: 34, scope: !10334)
!10334 = distinct !DILexicalBlock(scope: !10331, file: !3, line: 1258, column: 34)
!10335 = !DILocalVariable(name: "state", scope: !10323, file: !3, line: 1259, type: !3866)
!10336 = !DILocation(line: 1259, column: 25, scope: !10323)
!10337 = !DILocation(line: 1259, column: 59, scope: !10323)
!10338 = !DILocation(line: 1259, column: 64, scope: !10323)
!10339 = !DILocation(line: 1259, column: 33, scope: !10323)
!10340 = !DILocation(line: 1261, column: 13, scope: !10323)
!10341 = !DILocation(line: 1261, column: 42, scope: !10323)
!10342 = !DILocation(line: 1261, column: 49, scope: !10323)
!10343 = !DILocation(line: 1261, column: 54, scope: !10323)
!10344 = !DILocation(line: 1261, column: 63, scope: !10323)
!10345 = !DILocation(line: 1261, column: 2, scope: !10323)
!10346 = !DILocation(line: 1262, column: 6, scope: !10347)
!10347 = distinct !DILexicalBlock(scope: !10323, file: !3, line: 1262, column: 6)
!10348 = !DILocation(line: 1262, column: 15, scope: !10347)
!10349 = !DILocation(line: 1262, column: 6, scope: !10323)
!10350 = !DILocation(line: 1263, column: 12, scope: !10347)
!10351 = !DILocation(line: 1263, column: 3, scope: !10347)
!10352 = !DILocation(line: 1264, column: 6, scope: !10353)
!10353 = distinct !DILexicalBlock(scope: !10323, file: !3, line: 1264, column: 6)
!10354 = !DILocation(line: 1264, column: 15, scope: !10353)
!10355 = !DILocation(line: 1264, column: 6, scope: !10323)
!10356 = !DILocation(line: 1265, column: 14, scope: !10353)
!10357 = !DILocation(line: 1265, column: 32, scope: !10353)
!10358 = !DILocation(line: 1265, column: 41, scope: !10353)
!10359 = !DILocation(line: 1265, column: 3, scope: !10353)
!10360 = !DILocation(line: 1266, column: 11, scope: !10323)
!10361 = !DILocation(line: 1266, column: 2, scope: !10323)
!10362 = !DILocation(line: 1268, column: 2, scope: !10323)
